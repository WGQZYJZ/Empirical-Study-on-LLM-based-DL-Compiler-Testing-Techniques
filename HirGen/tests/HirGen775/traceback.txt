==========mod==========
#[version = "0.0.5"]
def @func_2855(%var_2849: uint64, %var_2850: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) {
  %0 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %3 = reshape(%2, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %4 = @func_1248(%3) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %5 = cast(%var_2849, dtype="uint64") /* ty=uint64 */;
  %6 = cast(%var_2850, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %7 = reshape(%5, newshape=[]) /* ty=uint64 */;
  %8 = reshape(%6, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %9 = @func_2672(%7, %8) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %10 = %0.0;
  %11 = %1.0;
  %12 = %4.0;
  %13 = %9.3;
  (%10, %11, %12, meta[relay.Constant][0] /* ty=Tensor[(4), float64] */, %13, %var_2849, %var_2850)
}

def @func_11231() -> (Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) {
  %14 = @func_8675() /* ty=Tensor[(9, 3, 4), uint64] */;
  %15 = @func_9677() /* ty=Tensor[(4, 1), float64] */;
  (%14, %15)
}

def @func_1782(%var_1767: Tensor[(4, 72), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) {
  %16 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %18 = reshape(%17, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %19 = @func_1248(%18) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %20 = cast(meta[relay.Constant][2] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %21 = cast(%var_1767, dtype="uint64") /* ty=Tensor[(4, 72), uint64] */;
  %22 = cast(meta[relay.Constant][3] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %23 = reshape(%20, newshape=[]) /* ty=uint64 */;
  %24 = reshape(%21, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
  %25 = reshape(%22, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
  %26 = @func_954(%23, %24, %25) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
  %27 = %16.0;
  %28 = %19.1;
  %29 = %26.0;
  (%27, %28, meta[relay.Constant][1] /* ty=Tensor[(4), float64] */, %29, meta[relay.Constant][2] /* ty=uint64 */, %var_1767, meta[relay.Constant][3] /* ty=Tensor[(45), float32] */)
}

def @func_2374(%var_2363: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) {
  %30 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %31 = cast(%var_2363, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %32 = reshape(%31, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %33 = @func_1782(%32) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %34 = %30.0;
  %35 = %33.4;
  (%34, %35, %var_2363)
}

def @func_14234() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %36 = @func_4875() /* ty=Tensor[(4, 1), float64] */;
  %37 = @func_7168() /* ty=Tensor[(4, 1), float64] */;
  (%36, %37)
}

def @func_10087(%var_10054: Tensor[(13, 4, 14), bool], %var_10055: Tensor[(13, 4, 14), bool]) -> (Tensor[(13, 4, 14), bool], Tensor[(9, 3, 4), uint64], Tensor[(3, 6, 16), uint64]) {
  %38 = cast(%var_10055, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %39 = shape_of(%var_10054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_10054, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %42 = @func_4944() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %43 = logical_and(%40, %41) /* ty=Tensor[(13, 4, 14), bool] */;
  %44 = %42.0;
  %45 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  (%43, %44, %45)
}

def @func_4997() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) {
  %46 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %47 = %46.0;
  %48 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  (%47, %48)
}

def @func_14138() -> (Tensor[(4, 1), float64],) {
  %49 = @func_7449() /* ty=(Tensor[(4, 1), float64],) */;
  %50 = %49.0;
  (%50,)
}

def @func_5269() -> (Tensor[(9, 3, 4), float32],) {
  %51 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %52 = %51.0;
  (%52,)
}

def @func_13362(%var_13339: Tensor[(6, 5, 1), float64], %var_13345: Tensor[(6, 5, 16), float64], %var_13353: Tensor[(2, 2), float64], %var_13354: Tensor[(1, 336), float32]) -> (Tensor[(6, 5, 1), float64], Tensor[(6, 5, 16), bool], Tensor[(3, 7, 16), float32], uint64, Tensor[(2, 2), float64], Tensor[(1, 336), float32]) {
  %53 = cast(%var_13339, dtype="float64") /* ty=Tensor[(6, 5, 1), float64] */;
  %54 = cast(%var_13339, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
  %55 = cast(%var_13345, dtype="bool") /* ty=Tensor[(6, 5, 16), bool] */;
  %56 = cast(meta[relay.Constant][4] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %57 = cast(%var_13353, dtype="float64") /* ty=Tensor[(2, 2), float64] */;
  %58 = cast(%var_13354, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %59 = reshape(%56, newshape=[]) /* ty=uint64 */;
  %60 = reshape(%57, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %61 = reshape(%58, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %62 = @func_8052(%59, %60, %61) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(4, 1), float64], Tensor[(3, 7, 16), float32], Tensor[(336), float32]) */;
  %63 = erf(%53) /* ty=Tensor[(6, 5, 1), float64] */;
  %64 = equal(%54, %55) /* ty=Tensor[(6, 5, 16), bool] */;
  %65 = %62.10;
  (%63, %64, %65, meta[relay.Constant][4] /* ty=uint64 */, %var_13353, %var_13354)
}

def @func_6896() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %66 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %67 = %66.0;
  %68 = cast(%67, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %69 = reshape(%68, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %70 = @func_1248(%69) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %71 = %70.2;
  (%67, %71)
}

def @func_9406() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %72 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %73 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
  %74 = %72.1;
  %75 = %73.0;
  (%74, %75)
}

def @func_7089(%var_7086: Tensor[(3, 7, 16), float32]) -> Tensor[(3, 7, 16), float32] {
  %76 = cast(%var_7086, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
  log10(%76) /* ty=Tensor[(3, 7, 16), float32] */
}

def @func_12105() -> (Tensor[(3, 84), float32],) {
  %77 = @func_8685() /* ty=Tensor[(3, 84), float32] */;
  (%77,)
}

def @func_16474() -> (Tensor[(9, 3, 4), uint64],) {
  %78 = @func_14162() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %79 = %78.0;
  (%79,)
}

def @func_3228() -> (Tensor[(4, 1), float64],) {
  %80 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  (%80,)
}

def @func_11757(%var_11741: Tensor[(12, 1, 15), float32]) -> (Tensor[(12, 1, 15), float32], Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), uint64]) {
  %81 = cast(%var_11741, dtype="float32") /* ty=Tensor[(12, 1, 15), float32] */;
  %82 = @func_8182() /* ty=(Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) */;
  %83 = sin(%81) /* ty=Tensor[(12, 1, 15), float32] */;
  %84 = %82.0;
  %85 = @func_7203() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%83, %84, %85)
}

def @func_15129() -> (uint64, Tensor[(9, 3, 4), float32]) {
  %86 = @func_13848() /* ty=(Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) */;
  %87 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %88 = %86.1;
  %89 = %87.3;
  (%88, %89)
}

def @func_17587(%var_17533: Tensor[(14, 14, 11), uint16], %var_17534: Tensor[(14, 14, 11), uint16]) -> (Tensor[(4, 1), float64], Tensor[(14, 14, 11), float64], Tensor[(3, 84), float32], Tensor[(14, 14, 11), float64]) {
  %90 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %91 = cast(%var_17534, dtype="uint16") /* ty=Tensor[(14, 14, 11), uint16] */;
  %92 = shape_of(%var_17533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%var_17533, dtype="uint16") /* ty=Tensor[(14, 14, 11), uint16] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %95 = bitwise_or(%93, %94) /* ty=Tensor[(14, 14, 11), uint16] */;
  %96 = cast(%95, dtype="float32") /* ty=Tensor[(14, 14, 11), float32] */;
  %97 = acosh(%96) /* ty=Tensor[(14, 14, 11), float32] */;
  %98 = cast(%var_17533, dtype="float64") /* ty=Tensor[(14, 14, 11), float64] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="float64") /* ty=Tensor[(14, 14, 11), float64] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %102 = @func_16393() /* ty=(Tensor[(4, 1), float64], Tensor[(3, 84), float32]) */;
  %103 = cast(%95, dtype="float64") /* ty=Tensor[(14, 14, 11), float64] */;
  %104 = %90.0;
  %105 = floor_divide(%100, %101) /* ty=Tensor[(14, 14, 11), float64] */;
  %106 = %102.1;
  %107 = tan(%103) /* ty=Tensor[(14, 14, 11), float64] */;
  (%104, %105, %106, %107)
}

def @func_8934() -> Tensor[(4, 1), float64] {
  %108 = @func_7449() /* ty=(Tensor[(4, 1), float64],) */;
  %108.0
}

def @func_14162() -> (Tensor[(9, 3, 4), uint64],) {
  %109 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %110 = %109.0;
  (%110,)
}

def @func_4766(%var_4762: Tensor[(2, 7, 11), float32]) -> (Tensor[(2, 7, 11), float32],) {
  %111 = cast(%var_4762, dtype="float32") /* ty=Tensor[(2, 7, 11), float32] */;
  %112 = log(%111) /* ty=Tensor[(2, 7, 11), float32] */;
  (%112,)
}

def @func_11792() -> Tensor[(9, 3, 4), float32] {
  %113 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
  %113.1
}

def @func_11114() -> Tensor[(1, 32), uint64] {
  %114 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
  %114.4
}

def @func_12677(%var_12643: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), int64], Tensor[(32), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], uint64) {
  %115 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %116 = %115.0;
  %117 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %118 = %117.1;
  %119 = cast(%118, dtype="int64") /* ty=Tensor[(9, 3, 4), int64] */;
  %120 = shape_of(%116, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%116, dtype="int64") /* ty=Tensor[(9, 3, 4), int64] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %123 = cast(meta[relay.Constant][5] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %124 = cast(%var_12643, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %125 = reshape(%123, newshape=[]) /* ty=uint64 */;
  %126 = reshape(%124, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %127 = @func_3758(%125, %126) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) */;
  %128 = %127.4;
  %129 = cast(%128, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %130 = reshape(%129, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %131 = @func_3952(%130) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) */;
  %132 = minimum(%121, %122) /* ty=Tensor[(9, 3, 4), int64] */;
  %133 = %131.1;
  %134 = @func_9996() /* ty=uint64 */;
  (%132, %128, meta[relay.Constant][5] /* ty=uint64 */, %var_12643, %133, %134)
}

def @func_6539() -> (Tensor[(?, 2, 2), float32],) {
  %135 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %136 = %135.1;
  (%136,)
}

def @func_9164() -> (Tensor[(3, 6, 16), float32],) {
  %137 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %138 = %137.3;
  %139 = cast(%138, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
  %140 = cos(%139) /* ty=Tensor[(3, 6, 16), float32] */;
  (%140,)
}

def @func_2725() -> (Tensor[(4, 1), float64],) {
  %141 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %142 = %141.0;
  (%142,)
}

def @func_11073() -> Tensor[(9, 3, 4), float32] {
  %143 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
  %143.0
}

def @func_13934(%var_13913: Tensor[(3, 9, 11), int64]) -> (Tensor[(3, 9, 11), int64], Tensor[(9, 3, 4), uint64]) {
  %144 = cast(meta[relay.Constant][6] /* ty=Tensor[(3, 9, 11), int64] */, dtype="int64") /* ty=Tensor[(3, 9, 11), int64] */;
  %145 = shape_of(%var_13913, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%var_13913, dtype="int64") /* ty=Tensor[(3, 9, 11), int64] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %148 = @func_9660() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %149 = multiply(%146, %147) /* ty=Tensor[(3, 9, 11), int64] */;
  %150 = %148.0;
  (%149, %150)
}

def @func_6027(%var_5981: uint64, %var_5982: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(9, 3, 4), float32]) {
  %151 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %152 = cast(%var_5981, dtype="uint64") /* ty=uint64 */;
  %153 = cast(%var_5982, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %154 = reshape(%152, newshape=[]) /* ty=uint64 */;
  %155 = reshape(%153, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %156 = @func_2855(%154, %155) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
  %157 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %158 = cast(meta[relay.Constant][7] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %159 = reshape(%158, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %160 = @func_5810(%159) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
  %161 = %151.0;
  %162 = @func_4627() /* ty=Tensor[(9, 3, 4), uint64] */;
  %163 = %156.1;
  %164 = %157.0;
  %165 = %160.5;
  %166 = @func_5336() /* ty=Tensor[(9, 3, 4), float32] */;
  (%161, %162, %163, %var_5981, %var_5982, %164, %165, meta[relay.Constant][7] /* ty=Tensor[(1200), float64] */, %166)
}

def @func_15704() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %167 = @func_9539() /* ty=(Tensor[(4, 1), float64],) */;
  %168 = %167.0;
  %169 = @func_11733() /* ty=Tensor[(4, 1), float64] */;
  (%168, %169)
}

def @func_12578(%var_12526: Tensor[(1452), float64], %var_12545: Tensor[(1452), float64]) -> (Tensor[(4, 1), float64], uint64, uint64, Tensor[(1452), bool]) {
  %170 = @func_7320() /* ty=(Tensor[(4, 1), float64],) */;
  %171 = cast(%var_12526, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %172 = cast(meta[relay.Constant][8] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %173 = reshape(%171, newshape=[1452]) /* ty=Tensor[(1452), float64] */;
  %174 = reshape(%172, newshape=[]) /* ty=uint64 */;
  %175 = @func_7653(%173, %174) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) */;
  %176 = cast(%var_12545, dtype="bool") /* ty=Tensor[(1452), bool] */;
  %177 = shape_of(%var_12526, dtype="int32") /* ty=Tensor[(1), int32] */;
  %178 = cast(%var_12526, dtype="bool") /* ty=Tensor[(1452), bool] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?), bool] */;
  %180 = %170.0;
  %181 = %175.4;
  %182 = greater(%178, %179) /* ty=Tensor[(1452), bool] */;
  (%180, %181, meta[relay.Constant][8] /* ty=uint64 */, %182)
}

def @func_12135() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %183 = @func_4648() /* ty=(Tensor[(4, 1), float64],) */;
  %184 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
  %185 = %183.0;
  %186 = %184.0;
  (%185, %186)
}

def @func_12371(%var_12323: Tensor[(1, 12, 7), float64]) -> (uint64, uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(?, 12, 7), float32], Tensor[(9, 3, 4), float32]) {
  %187 = cast(meta[relay.Constant][9] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %188 = cast(meta[relay.Constant][10] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %189 = reshape(%187, newshape=[]) /* ty=uint64 */;
  %190 = reshape(%188, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %191 = @func_2855(%189, %190) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
  %192 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %193 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
  %194 = cast(%var_12323, dtype="float64") /* ty=Tensor[(1, 12, 7), float64] */;
  %195 = sin(%194) /* ty=Tensor[(1, 12, 7), float64] */;
  %196 = cast(%195, dtype="float64") /* ty=Tensor[(1, 12, 7), float64] */;
  %197 = exp(%196) /* ty=Tensor[(1, 12, 7), float64] */;
  %198 = cast(%197, dtype="float32") /* ty=Tensor[(1, 12, 7), float32] */;
  %199 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %200 = cast(%195, dtype="float32") /* ty=Tensor[(1, 12, 7), float32] */;
  %201 = dyn.reshape(%198, %199, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %202 = cast(meta[relay.Constant][9] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %203 = cast(meta[relay.Constant][10] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %204 = reshape(%202, newshape=[]) /* ty=uint64 */;
  %205 = reshape(%203, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %206 = @func_3758(%204, %205) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) */;
  %207 = %191.5;
  %208 = %192.0;
  %209 = %193.0;
  %210 = minimum(%200, %201) /* ty=Tensor[(?, 12, 7), float32] */;
  %211 = %206.1;
  (%207, meta[relay.Constant][9] /* ty=uint64 */, meta[relay.Constant][10] /* ty=Tensor[(32), uint64] */, %208, %209, %210, %211)
}

def @func_5612(%var_5567: Tensor[(5, 13, 6), int16]) -> (Tensor[(4, 1), float64], Tensor[(5, 13, 6), float32]) {
  %212 = cast(meta[relay.Constant][11] /* ty=Tensor[(5, 13, 6), int16] */, dtype="int16") /* ty=Tensor[(5, 13, 6), int16] */;
  %213 = shape_of(%var_5567, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(%var_5567, dtype="int16") /* ty=Tensor[(5, 13, 6), int16] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %216 = bitwise_or(%214, %215) /* ty=Tensor[(5, 13, 6), int16] */;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
  %218 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
  %219 = sqrt(%217) /* ty=Tensor[(5, 13, 6), float32] */;
  (%218, %219)
}

def @func_7519(%var_7507: Tensor[(4), float64]) -> (Tensor[(3, 6, 16), uint64], Tensor[(?, 2, 2), float32], Tensor[(4), float64]) {
  %220 = cast(%var_7507, dtype="float64") /* ty=Tensor[(4), float64] */;
  %221 = reshape(%220, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %222 = @func_39(%221) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %223 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  %224 = %222.0;
  (%223, %224, %var_7507)
}

def @func_12735() -> (Tensor[(9, 3, 4), bool],) {
  %225 = @func_8134() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %226 = %225.0;
  (%226,)
}

def @func_7168() -> Tensor[(4, 1), float64] {
  @func_2160() /* ty=Tensor[(4, 1), float64] */
}

def @func_6961() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) {
  %227 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %228 = cast(meta[relay.Constant][12] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %229 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 32), uint64] */, dtype="uint64") /* ty=Tensor[(1, 32), uint64] */;
  %230 = reshape(%228, newshape=[]) /* ty=uint64 */;
  %231 = reshape(%229, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %232 = @func_2855(%230, %231) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
  %233 = @func_4131() /* ty=Tensor[(9, 3, 4), float32] */;
  %234 = %227.0;
  %235 = %232.4;
  (%233, %234, %235, meta[relay.Constant][12] /* ty=uint64 */, meta[relay.Constant][13] /* ty=Tensor[(1, 32), uint64] */)
}

def @func_2433() -> (Tensor[(9, 3, 4), float32],) {
  %236 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %237 = %236.0;
  (%237,)
}

def @func_13399(%var_13371: Tensor[(16, 9, 11), float64]) -> (Tensor[(16, 9, 11), float32], Tensor[(4, 1), float64]) {
  %238 = cast(%var_13371, dtype="float64") /* ty=Tensor[(16, 9, 11), float64] */;
  %239 = asinh(%238) /* ty=Tensor[(16, 9, 11), float64] */;
  %240 = cast(%var_13371, dtype="float32") /* ty=Tensor[(16, 9, 11), float32] */;
  %241 = shape_of(%239, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(%239, dtype="float32") /* ty=Tensor[(16, 9, 11), float32] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %244 = @func_5390() /* ty=(Tensor[(4, 1), float64],) */;
  %245 = mod(%242, %243) /* ty=Tensor[(16, 9, 11), float32] */;
  %246 = %244.0;
  (%245, %246)
}

def @func_16642() -> (Tensor[(4, 1), float64],) {
  %247 = @func_15090() /* ty=Tensor[(4, 1), float64] */;
  (%247,)
}

def @func_16393() -> (Tensor[(4, 1), float64], Tensor[(3, 84), float32]) {
  %248 = @func_12105() /* ty=(Tensor[(3, 84), float32],) */;
  %249 = @func_11733() /* ty=Tensor[(4, 1), float64] */;
  %250 = %248.0;
  (%249, %250)
}

def @func_2531(%var_2517: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) {
  %251 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %252 = cast(%var_2517, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %253 = reshape(%252, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %254 = @func_1782(%253) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %255 = %254.6;
  %256 = cast(%255, dtype="float32") /* ty=Tensor[(45), float32] */;
  %257 = reshape(%256, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %258 = @func_130(%257) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %259 = %251.0;
  %260 = %258.1;
  (%259, %255, %var_2517, %260)
}

def @func_3127(%var_3124: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
  %261 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %262 = cast(%var_3124, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %263 = reshape(%262, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %264 = @func_2531(%263) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %265 = %261.0;
  %266 = %264.0;
  (%265, %266, %var_3124)
}

def @func_15515(%var_15475: Tensor[(6, 8, 5), uint16], %var_15476: Tensor[(6, 8, 5), uint16]) -> (Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(4, 1), float64]) {
  %267 = cast(%var_15476, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
  %268 = shape_of(%var_15475, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%var_15475, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %271 = cast(%var_15475, dtype="float64") /* ty=Tensor[(6, 8, 5), float64] */;
  %272 = cast(meta[relay.Constant][14] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %273 = reshape(%272, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %274 = @func_3142(%273) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %275 = @func_7449() /* ty=(Tensor[(4, 1), float64],) */;
  %276 = add(%269, %270) /* ty=Tensor[(6, 8, 5), uint16] */;
  %277 = acos(%271) /* ty=Tensor[(6, 8, 5), float64] */;
  %278 = %274.0;
  %279 = %275.0;
  (%276, %277, %278, meta[relay.Constant][14] /* ty=Tensor[(1620), uint16] */, %279)
}

def @func_3460() -> (Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  %280 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %281 = cast(meta[relay.Constant][15] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %282 = cast(meta[relay.Constant][16] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %283 = reshape(%281, newshape=[]) /* ty=uint64 */;
  %284 = reshape(%282, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %285 = @func_2407(%283, %284) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %286 = %280.6;
  %287 = %285.0;
  (%286, %287, meta[relay.Constant][15] /* ty=uint64 */, meta[relay.Constant][16] /* ty=Tensor[(32), uint64] */)
}

def @main(%var_18055: Tensor[(9, 10, 3), float64]) -> Tensor[(9, 10, 3), float64] {
  %288 = cast(%var_18055, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %289 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(9, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(meta[relay.Constant][17] /* ty=Tensor[(9, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  multiply(%290, %291) /* ty=Tensor[(9, 10, 3), float64] */
}

def @func_9875() -> (Tensor[(15, 12, 9), uint16],) {
  %292 = @func_4754() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) */;
  %293 = %292.3;
  (%293,)
}

def @func_14440() -> Tensor[(9, 3, 4), float32] {
  %294 = @func_6820() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %294.0
}

def @func_14642() -> Tensor[(288), uint64] {
  %295 = @func_10906() /* ty=(Tensor[(288), uint64],) */;
  %295.0
}

def @func_2672(%var_2669: uint64, %var_2670: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  %296 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %297 = cast(%var_2669, dtype="uint64") /* ty=uint64 */;
  %298 = cast(%var_2670, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %299 = reshape(%297, newshape=[]) /* ty=uint64 */;
  %300 = reshape(%298, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %301 = @func_2407(%299, %300) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %302 = %296.0;
  %303 = %301.0;
  (%302, %303, %var_2669, %var_2670)
}

def @func_4342() -> Tensor[(3, 6, 16), uint64] {
  %304 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %304.3
}

def @func_11019() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %305 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %306 = @func_6776() /* ty=Tensor[(4, 1), float64] */;
  %307 = %305.0;
  (%306, %307)
}

def @func_8522() -> Tensor[(4, 1), float64] {
  @func_7743() /* ty=Tensor[(4, 1), float64] */
}

def @func_4944() -> (Tensor[(9, 3, 4), uint64],) {
  %308 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%308,)
}

def @func_10950() -> (Tensor[(9, 3, 4), float32],) {
  %309 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %310 = %309.0;
  (%310,)
}

def @func_14305() -> (Tensor[(4, 1), float64], Tensor[(5, 6, 16), float64], Tensor[(4, 120), float64]) {
  %311 = @func_11019() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %312 = cast(meta[relay.Constant][18] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %313 = reshape(%312, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), float64] */;
  %314 = @func_5627(%313) /* ty=(Tensor[(5, 6, 16), float64],) */;
  %315 = %311.1;
  %316 = %314.0;
  (%315, %316, meta[relay.Constant][18] /* ty=Tensor[(4, 120), float64] */)
}

def @func_13309() -> (Tensor[(9, 3, 4), float32],) {
  %317 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %318 = %317.0;
  (%318,)
}

def @func_16097() -> (uint64,) {
  %319 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %320 = %319.2;
  (%320,)
}

def @func_4636(%var_4632: Tensor[(9, 14, 13), float32]) -> Tensor[(9, 14, 13), float32] {
  %321 = cast(%var_4632, dtype="float32") /* ty=Tensor[(9, 14, 13), float32] */;
  asin(%321) /* ty=Tensor[(9, 14, 13), float32] */
}

def @func_14967() -> (Tensor[(4, 1), float64], Tensor[(32), uint64]) {
  %322 = @func_13848() /* ty=(Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) */;
  %323 = @func_13448() /* ty=Tensor[(4, 1), float64] */;
  %324 = %322.2;
  (%323, %324)
}

def @func_10577() -> Tensor[(9, 3, 4), uint64] {
  %325 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
  %325.0
}

def @func_4323() -> (Tensor[(4, 1), float64],) {
  %326 = @func_3405() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %327 = %326.0;
  (%327,)
}

def @func_6859() -> (Tensor[(4, 1), float64],) {
  %328 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %329 = %328.0;
  (%329,)
}

def @func_9336(%var_9315: Tensor[(18, 18), int32]) -> (Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 300), float64], Tensor[(9, 12, 3), bool], Tensor[(18, 18), int32]) {
  %330 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 300), float64] */, dtype="float64") /* ty=Tensor[(4, 300), float64] */;
  %331 = reshape(%330, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %332 = @func_5810(%331) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
  %333 = cast(%var_9315, dtype="int32") /* ty=Tensor[(18, 18), int32] */;
  %334 = reshape(%333, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int32] */;
  %335 = @func_8685() /* ty=Tensor[(3, 84), float32] */;
  %336 = %332.0;
  %337 = @func_8864(%334) /* ty=Tensor[(9, 12, 3), bool] */;
  (%335, %336, meta[relay.Constant][19] /* ty=Tensor[(4, 300), float64] */, %337, %var_9315)
}

def @func_18044() -> Tensor[(4, 1), float64] {
  %338 = @func_7869() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %338.0
}

def @func_7449() -> (Tensor[(4, 1), float64],) {
  %339 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %340 = %339.0;
  (%340,)
}

def @func_10775(%var_10757: Tensor[(16, 4, 5), float32]) -> Tensor[(16, 4, 5), bool] {
  %341 = cast(meta[relay.Constant][20] /* ty=Tensor[(16, 4, 5), float32] */, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
  %342 = shape_of(%var_10757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %343 = cast(%var_10757, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
  %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%343, %344) /* ty=Tensor[(16, 4, 5), bool] */
}

def @func_9027() -> (Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) {
  %345 = cast(meta[relay.Constant][21] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %346 = reshape(%345, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %347 = @func_1782(%346) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %348 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
  %349 = %347.6;
  (%348, %349, meta[relay.Constant][21] /* ty=Tensor[(288), uint64] */)
}

def @func_12068() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  %350 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %351 = @func_11019() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %352 = %350.0;
  %353 = %351.0;
  (%352, %353)
}

def @func_13042() -> Tensor[(4, 1), float64] {
  %354 = @func_12135() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %354.0
}

def @func_17714() -> Tensor[(9, 3, 4), bool] {
  %355 = @func_8134() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %355.0
}

def @func_4958() -> Tensor[(4, 1), float64] {
  %356 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
  %356.0
}

def @func_15259() -> (Tensor[(4, 1), float64],) {
  %357 = @func_9677() /* ty=Tensor[(4, 1), float64] */;
  (%357,)
}

def @func_15819() -> (Tensor[(9, 3, 4), float32],) {
  %358 = @func_4131() /* ty=Tensor[(9, 3, 4), float32] */;
  (%358,)
}

def @func_15941() -> (Tensor[(9, 3, 4), bool],) {
  %359 = @func_12493() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(176), float32], Tensor[(728), float32]) */;
  %360 = %359.1;
  (%360,)
}

def @func_16724() -> (Tensor[(288), uint64],) {
  %361 = @func_13217() /* ty=Tensor[(288), uint64] */;
  (%361,)
}

def @func_5336() -> Tensor[(9, 3, 4), float32] {
  %362 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %362.0
}

def @func_10734() -> (Tensor[(9, 3, 4), bool],) {
  %363 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  (%363,)
}

def @func_2326(%var_2269: Tensor[(1, 45), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) {
  %364 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %365 = cast(%var_2269, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %366 = reshape(%365, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %367 = @func_1874(%366) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */;
  %368 = cast(meta[relay.Constant][22] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %369 = reshape(%368, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %370 = @func_1782(%369) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %371 = %370.2;
  %372 = cast(%371, dtype="float64") /* ty=Tensor[(4), float64] */;
  %373 = reshape(%372, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %374 = @func_1248(%373) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %375 = %364.0;
  %376 = %367.1;
  %377 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %378 = %374.1;
  (%375, %376, %var_2269, %377, %371, meta[relay.Constant][22] /* ty=Tensor[(288), uint64] */, %378)
}

def @func_15148() -> Tensor[(4), float64] {
  %379 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
  %379.1
}

def @func_11416(%var_11413: Tensor[(728), bool]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) {
  %380 = @func_7039() /* ty=(Tensor[(4, 1), float64],) */;
  %381 = cast(%var_11413, dtype="bool") /* ty=Tensor[(728), bool] */;
  %382 = cast(%var_11413, dtype="bool") /* ty=Tensor[(728), bool] */;
  %383 = reshape(%381, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), bool] */;
  %384 = reshape(%382, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), bool] */;
  %385 = @func_10087(%383, %384) /* ty=(Tensor[(13, 4, 14), bool], Tensor[(9, 3, 4), uint64], Tensor[(3, 6, 16), uint64]) */;
  %386 = %380.0;
  %387 = %385.1;
  (%386, %387, %var_11413)
}

def @func_8466() -> Tensor[(9, 3, 4), float32] {
  %388 = @func_6820() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %388.0
}

def @func_8838() -> Tensor[(4, 1), float64] {
  @func_4958() /* ty=Tensor[(4, 1), float64] */
}

def @func_16601() -> (Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) {
  %389 = cast(meta[relay.Constant][23] /* ty=Tensor[(728), bool] */, dtype="bool") /* ty=Tensor[(728), bool] */;
  %390 = reshape(%389, newshape=[728]) /* ty=Tensor[(728), bool] */;
  %391 = @func_11416(%390) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) */;
  %392 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %393 = %391.1;
  (%392, %393, meta[relay.Constant][23] /* ty=Tensor[(728), bool] */)
}

def @func_3381() -> Tensor[(9, 3, 4), float32] {
  %394 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %394.1
}

def @func_16910() -> Tensor[(288), uint64] {
  %395 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %395.2
}

def @func_17390(%var_17339: Tensor[(32), uint64], %var_17355: Tensor[(60, 2), uint16]) -> (Tensor[(9, 3, 4), bool], Tensor[(1, 15, 8), uint16], Tensor[(60, 2), uint16], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(4, 32), float32]) {
  %396 = cast(%var_17339, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %397 = reshape(%396, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %398 = @func_3952(%397) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) */;
  %399 = cast(%var_17355, dtype="uint16") /* ty=Tensor[(60, 2), uint16] */;
  %400 = reshape(%399, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), uint16] */;
  %401 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 1620), uint16] */, dtype="uint16") /* ty=Tensor[(1, 1620), uint16] */;
  %402 = reshape(%401, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %403 = @func_3142(%402) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %404 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
  %405 = %404.0;
  %406 = cast(%405, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %407 = reshape(%406, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %408 = @func_1460(%407) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) */;
  %409 = cast(%var_17339, dtype="uint32") /* ty=Tensor[(32), uint32] */;
  %410 = cast(%405, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
  %411 = left_shift(%409, %410) /* ty=Tensor[(4, 32), uint32] */;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %413 = cast(%var_17339, dtype="float32") /* ty=Tensor[(32), float32] */;
  %414 = %398.0;
  %415 = @func_14854(%400) /* ty=Tensor[(1, 15, 8), uint16] */;
  %416 = %403.0;
  %417 = %408.1;
  %418 = divide(%412, %413) /* ty=Tensor[(4, 32), float32] */;
  (%414, %415, %var_17355, %416, meta[relay.Constant][24] /* ty=Tensor[(1, 1620), uint16] */, %417, %418)
}

def @func_15554(%var_15550: Tensor[(576), float64]) -> (Tensor[(3, 84), float32], Tensor[(9, 8, 8), float64], Tensor[(576), float64], Tensor[(9, 3, 4), float32]) {
  %419 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
  %420 = cast(%var_15550, dtype="float64") /* ty=Tensor[(576), float64] */;
  %421 = reshape(%420, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
  %422 = @func_5924(%421) /* ty=(Tensor[(9, 8, 8), float64],) */;
  %423 = @func_4594() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %424 = %419.2;
  %425 = %422.0;
  %426 = %423.1;
  (%424, %425, %var_15550, %426)
}

def @func_15167() -> Tensor[(9, 3, 4), bool] {
  %427 = @func_10734() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %427.0
}

def @func_6423() -> (Tensor[(4, 1), float64],) {
  %428 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %429 = %428.0;
  (%429,)
}

def @func_13416() -> Tensor[(4, 1), float64] {
  @func_8838() /* ty=Tensor[(4, 1), float64] */
}

def @func_12050() -> Tensor[(9, 3, 4), float32] {
  %430 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %430.0
}

def @func_14752() -> Tensor[(4, 1), float64] {
  %431 = @func_7585() /* ty=(Tensor[(4, 1), float64],) */;
  %431.0
}

def @func_14538(%var_14531: Tensor[(45), float32], %var_14535: Tensor[(320), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(320), float32]) {
  %432 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %433 = cast(%var_14531, dtype="float32") /* ty=Tensor[(45), float32] */;
  %434 = reshape(%433, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %435 = @func_5534(%434) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) */;
  %436 = cast(%var_14535, dtype="float32") /* ty=Tensor[(320), float32] */;
  %437 = reshape(%436, newshape=[320]) /* ty=Tensor[(320), float32] */;
  %438 = @func_11659(%437) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 3, 1), float32], Tensor[(16, 4, 5), bool], Tensor[(320), float32], Tensor[(9, 3, 4), float32]) */;
  %439 = %432.0;
  %440 = %435.1;
  %441 = %438.1;
  (%439, %440, %var_14531, %441, %var_14535)
}

def @func_2599() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) {
  %442 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %443 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %444 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
  %445 = cast(%444, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %446 = reshape(%445, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %447 = @func_1719(%446) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) */;
  %448 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %449 = %448.6;
  %450 = cast(%449, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %451 = %442.0;
  %452 = %443.0;
  %453 = %447.1;
  %454 = atan(%450) /* ty=Tensor[(1, 45), float32] */;
  (%444, %451, %452, %453, %454)
}

def @func_6082() -> (Tensor[(4, 1), float64],) {
  %455 = @func_5390() /* ty=(Tensor[(4, 1), float64],) */;
  %456 = %455.0;
  (%456,)
}

def @func_1248(%var_1236: Tensor[(4, 1), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) {
  %457 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %458 = cast(%var_1236, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %459 = reshape(%458, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %460 = @func_39(%459) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %461 = %457.0;
  %462 = %460.0;
  (%461, %462, %var_1236)
}

def @func_14947(%var_14940: Tensor[(30), float64], %var_14941: Tensor[(1, 480), float64], %var_14943: Tensor[(336), float32]) -> (Tensor[(9, 3, 4), uint64], Tensor[(3, 7, 16), float32], Tensor[(30), float64], Tensor[(1, 480), float64], Tensor[(4), float64], Tensor[(336), float32]) {
  %463 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %464 = cast(%var_14940, dtype="float64") /* ty=Tensor[(30), float64] */;
  %465 = cast(%var_14941, dtype="float64") /* ty=Tensor[(1, 480), float64] */;
  %466 = cast(meta[relay.Constant][25] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %467 = cast(%var_14943, dtype="float32") /* ty=Tensor[(336), float32] */;
  %468 = reshape(%464, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), float64] */;
  %469 = reshape(%465, newshape=[6, 5, 16]) /* ty=Tensor[(6, 5, 16), float64] */;
  %470 = reshape(%466, newshape=[2, 2]) /* ty=Tensor[(2, 2), float64] */;
  %471 = reshape(%467, newshape=[1, 336]) /* ty=Tensor[(1, 336), float32] */;
  %472 = @func_13362(%468, %469, %470, %471) /* ty=(Tensor[(6, 5, 1), float64], Tensor[(6, 5, 16), bool], Tensor[(3, 7, 16), float32], uint64, Tensor[(2, 2), float64], Tensor[(1, 336), float32]) */;
  %473 = %463.0;
  %474 = %472.2;
  (%473, %474, %var_14940, %var_14941, meta[relay.Constant][25] /* ty=Tensor[(4), float64] */, %var_14943)
}

def @func_954(%var_929: uint64, %var_930: Tensor[(3, 6, 16), uint64], %var_950: Tensor[(45, 1), float32]) -> (Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) {
  %475 = cast(%var_929, dtype="uint64") /* ty=uint64 */;
  %476 = cast(%var_930, dtype="uint64") /* ty=Tensor[(3, 6, 16), uint64] */;
  %477 = cast(%var_950, dtype="float32") /* ty=Tensor[(45, 1), float32] */;
  %478 = reshape(%477, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %479 = @func_130(%478) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %480 = add(%475, %476) /* ty=Tensor[(3, 6, 16), uint64] */;
  %481 = %479.0;
  (%480, %481, %var_950)
}

def @func_13145() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %482 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  %483 = @func_13042() /* ty=Tensor[(4, 1), float64] */;
  (%482, %483)
}

def @func_5810(%var_5805: Tensor[(1200), float64]) -> (Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) {
  %484 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %485 = cast(meta[relay.Constant][26] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %486 = reshape(%485, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
  %487 = @func_2326(%486) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
  %488 = cast(%var_5805, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %489 = reshape(%488, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
  %490 = %484.0;
  %491 = %487.2;
  %492 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %493 = @func_3928(%489) /* ty=Tensor[(15, 5, 16), float64] */;
  (%490, %491, meta[relay.Constant][26] /* ty=Tensor[(45), float32] */, %492, %493, %var_5805)
}

def @func_10321(%var_10318: Tensor[(7, 234), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 14, 13), float32], Tensor[(7, 234), float32]) {
  %494 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %495 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
  %496 = cast(%var_10318, dtype="float32") /* ty=Tensor[(7, 234), float32] */;
  %497 = reshape(%496, newshape=[9, 14, 13]) /* ty=Tensor[(9, 14, 13), float32] */;
  %498 = %494.0;
  %499 = %495.1;
  %500 = @func_4636(%497) /* ty=Tensor[(9, 14, 13), float32] */;
  (%498, %499, %500, %var_10318)
}

def @func_13448() -> Tensor[(4, 1), float64] {
  %501 = @func_13145() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %501.1
}

def @func_4261() -> Tensor[(9, 3, 4), float64] {
  %502 = @func_3021() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %503 = %502.1;
  %504 = cast(%503, dtype="float64") /* ty=Tensor[(9, 3, 4), float64] */;
  atanh(%504) /* ty=Tensor[(9, 3, 4), float64] */
}

def @func_13908() -> Tensor[(9, 3, 4), float32] {
  %505 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %505.0
}

def @func_11571() -> (Tensor[(9, 3, 4), float32],) {
  %506 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %507 = %506.0;
  (%507,)
}

def @func_1603() -> (Tensor[(9, 3, 4), bool],) {
  %508 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %509 = %508.0;
  (%509,)
}

def @func_9489() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) {
  %510 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
  %511 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
  %512 = %510.0;
  (%511, %512)
}

def @func_14812(%var_14810: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  %513 = @func_13509() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %514 = cast(meta[relay.Constant][27] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %515 = cast(%var_14810, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %516 = reshape(%514, newshape=[]) /* ty=uint64 */;
  %517 = reshape(%515, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %518 = @func_2407(%516, %517) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %519 = %513.0;
  %520 = %518.0;
  (%519, %520, meta[relay.Constant][27] /* ty=uint64 */, %var_14810)
}

def @func_9677() -> Tensor[(4, 1), float64] {
  @func_2974() /* ty=Tensor[(4, 1), float64] */
}

def @func_6252() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) {
  %521 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %522 = @func_4841() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) */;
  %523 = %521.0;
  %524 = %522.0;
  (%523, %524)
}

def @func_10447() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) {
  %525 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
  %526 = @func_5831() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) */;
  %527 = %525.0;
  %528 = @func_4875() /* ty=Tensor[(4, 1), float64] */;
  %529 = %526.1;
  (%527, %528, %529)
}

def @func_15730() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
  %530 = @func_12735() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %531 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %532 = %530.0;
  %533 = %531.0;
  (%532, %533)
}

def @func_16943(%var_16930: Tensor[(10, 13, 12), float32], %var_16940: Tensor[(1620, 1), uint16]) -> (Tensor[(10, 13, 12), float32], Tensor[(1, 1620), uint16], Tensor[(1620, 1), uint16], Tensor[(80), float64]) {
  %534 = cast(%var_16930, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %535 = cast(%var_16940, dtype="uint16") /* ty=Tensor[(1620, 1), uint16] */;
  %536 = cast(meta[relay.Constant][28] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %537 = reshape(%535, newshape=[1, 1620]) /* ty=Tensor[(1, 1620), uint16] */;
  %538 = reshape(%536, newshape=[2, 40]) /* ty=Tensor[(2, 40), float64] */;
  %539 = @func_8588(%537, %538) /* ty=(Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(5, 2, 8), float64], Tensor[(2, 40), float64], Tensor[(9, 3, 4), float32]) */;
  %540 = tan(%534) /* ty=Tensor[(10, 13, 12), float32] */;
  %541 = %539.2;
  (%540, %541, %var_16940, meta[relay.Constant][28] /* ty=Tensor[(80), float64] */)
}

def @func_2096() -> (Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) {
  %542 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %543 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
  %544 = reshape(%543, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %545 = @func_39(%544) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %546 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %547 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %548 = reshape(%547, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %549 = @func_1874(%548) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */;
  %550 = %542.1;
  %551 = %545.0;
  %552 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %553 = %546.1;
  %554 = %549.4;
  (%550, %551, meta[relay.Constant][29] /* ty=Tensor[(1, 4), float64] */, %552, %553, %554, meta[relay.Constant][30] /* ty=Tensor[(1, 45), float32] */)
}

def @func_5534(%var_5532: Tensor[(45), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) {
  %555 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %556 = cast(%var_5532, dtype="float32") /* ty=Tensor[(45), float32] */;
  %557 = reshape(%556, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
  %558 = @func_2326(%557) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
  %559 = %555.1;
  %560 = %558.1;
  (%559, %560, %var_5532)
}

def @func_17050(%var_16997: Tensor[(8, 3, 5), uint8], %var_16998: Tensor[(8, 3, 5), uint8], %var_17029: Tensor[(1200), float64]) -> (Tensor[(8, 3, 5), bool], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(8, 3, 5), float32]) {
  %561 = cast(%var_16998, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
  %562 = shape_of(%var_16997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %563 = cast(%var_16997, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %565 = cast(%var_17029, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %566 = reshape(%565, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %567 = @func_11693(%566) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(1200), float64], Tensor[(1200), float64]) */;
  %568 = cast(%var_16997, dtype="float32") /* ty=Tensor[(8, 3, 5), float32] */;
  %569 = less_equal(%563, %564) /* ty=Tensor[(8, 3, 5), bool] */;
  %570 = @func_16274() /* ty=Tensor[(9, 3, 4), float32] */;
  %571 = %567.3;
  %572 = cos(%568) /* ty=Tensor[(8, 3, 5), float32] */;
  (%569, %570, %571, %var_17029, %572)
}

def @func_16527() -> (Tensor[(4, 1), float64],) {
  %573 = @func_14476() /* ty=Tensor[(4, 1), float64] */;
  (%573,)
}

def @func_13217() -> Tensor[(288), uint64] {
  %574 = @func_9614() /* ty=(Tensor[(288), uint64],) */;
  %574.0
}

def @func_17168(%var_17162: Tensor[(11, 4, 15), int16], %var_17163: Tensor[(11, 4, 15), int16]) -> Tensor[(11, 4, 15), bool] {
  %575 = cast(%var_17163, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
  %576 = shape_of(%var_17162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%var_17162, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%577, %578) /* ty=Tensor[(11, 4, 15), bool] */
}

def @func_14344(%var_14334: Tensor[(3, 6, 16), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), bool], Tensor[(9, 3, 4), uint64]) {
  %579 = @func_5269() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %580 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
  %581 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
  %582 = %581.0;
  %583 = cast(%var_14334, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
  %584 = shape_of(%582, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(%582, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %587 = @func_9660() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %588 = %579.0;
  %589 = %580.0;
  %590 = logical_and(%585, %586) /* ty=Tensor[(3, 6, 16), bool] */;
  %591 = %587.0;
  (%588, %589, %590, %591)
}

def @func_14854(%var_14823: Tensor[(1, 15, 8), uint16]) -> Tensor[(1, 15, 8), uint16] {
  %592 = cast(meta[relay.Constant][31] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %593 = cast(%var_14823, dtype="uint16") /* ty=Tensor[(1, 15, 8), uint16] */;
  subtract(%592, %593) /* ty=Tensor[(1, 15, 8), uint16] */
}

def @func_15216() -> (Tensor[(9, 3, 4), bool],) {
  %594 = @func_10734() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %595 = %594.0;
  (%595,)
}

def @func_1513() -> (Tensor[(9, 3, 4), float32],) {
  %596 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %597 = %596.1;
  (%597,)
}

def @func_4782() -> (Tensor[(3, 6, 16), uint64],) {
  %598 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  (%598,)
}

def @func_16214(%var_16155: uint64) -> (Tensor[(9, 3, 4), bool], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], uint64, Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(2, 16, ?), float64]) {
  %599 = @func_8182() /* ty=(Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) */;
  %600 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %601 = @func_11571() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %602 = @func_10839() /* ty=(Tensor[(45), float32],) */;
  %603 = @func_8358() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %604 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
  %605 = cast(%var_16155, dtype="uint64") /* ty=uint64 */;
  %606 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 2), uint64] */, dtype="uint64") /* ty=Tensor[(16, 2), uint64] */;
  %607 = reshape(%605, newshape=[]) /* ty=uint64 */;
  %608 = reshape(%606, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %609 = @func_2407(%607, %608) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %610 = %609.0;
  %611 = cast(meta[relay.Constant][32] /* ty=Tensor[(16, 2), uint64] */, dtype="float64") /* ty=Tensor[(16, 2), float64] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="float64") /* ty=Tensor[(2, 16, ?), float64] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %615 = %599.1;
  %616 = %600.0;
  %617 = %601.0;
  %618 = %602.0;
  %619 = %603.0;
  %620 = %604.0;
  %621 = power(%613, %614) /* ty=Tensor[(2, 16, ?), float64] */;
  (%615, %616, %617, %var_16155, %618, %619, %620, %621)
}

def @func_5486() -> Tensor[(9, 3, 4), float32] {
  %622 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %622.2
}

def @func_14036(%var_14025: Tensor[(242, 6), float64]) -> (Tensor[(9, 3, 4), uint64], Tensor[(1452), float32], Tensor[(242, 6), float64], uint64, Tensor[(4, 1), float64]) {
  %623 = cast(%var_14025, dtype="float64") /* ty=Tensor[(242, 6), float64] */;
  %624 = cast(meta[relay.Constant][33] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %625 = reshape(%623, newshape=[1452]) /* ty=Tensor[(1452), float64] */;
  %626 = reshape(%624, newshape=[]) /* ty=uint64 */;
  %627 = @func_7653(%625, %626) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) */;
  %628 = @func_4627() /* ty=Tensor[(9, 3, 4), uint64] */;
  %629 = %627.2;
  %630 = @func_8934() /* ty=Tensor[(4, 1), float64] */;
  (%628, %629, %var_14025, meta[relay.Constant][33] /* ty=uint64 */, %630)
}

def @func_7743() -> Tensor[(4, 1), float64] {
  %631 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %631.0
}

def @func_5240() -> (Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) {
  %632 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %634 = reshape(%633, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %635 = @func_1460(%634) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) */;
  %636 = %635.4;
  %637 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %638 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  %639 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
  (%632, %636, %637, %638, %639)
}

def @func_4274() -> Tensor[(4, 1), float64] {
  %640 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
  %640.0
}

def @func_8052(%var_8012: uint64, %var_8018: Tensor[(4), float64], %var_8035: Tensor[(336), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(4, 1), float64], Tensor[(3, 7, 16), float32], Tensor[(336), float32]) {
  %641 = @func_4754() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) */;
  %642 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %643 = cast(meta[relay.Constant][34] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %644 = reshape(%643, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
  %645 = cast(%var_8012, dtype="uint64") /* ty=uint64 */;
  %646 = cast(meta[relay.Constant][35] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %647 = reshape(%645, newshape=[]) /* ty=uint64 */;
  %648 = reshape(%646, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %649 = @func_2407(%647, %648) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %650 = cast(%var_8018, dtype="float64") /* ty=Tensor[(4), float64] */;
  %651 = reshape(%650, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %652 = @func_39(%651) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %653 = cast(%var_8035, dtype="float32") /* ty=Tensor[(336), float32] */;
  %654 = reshape(%653, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %655 = %641.1;
  %656 = %642.4;
  %657 = @func_3928(%644) /* ty=Tensor[(15, 5, 16), float64] */;
  %658 = %649.0;
  %659 = %652.1;
  %660 = @func_7743() /* ty=Tensor[(4, 1), float64] */;
  %661 = @func_7089(%654) /* ty=Tensor[(3, 7, 16), float32] */;
  (%655, %656, %657, meta[relay.Constant][34] /* ty=Tensor[(1200), float64] */, %658, %var_8012, meta[relay.Constant][35] /* ty=Tensor[(32), uint64] */, %659, %var_8018, %660, %661, %var_8035)
}

def @func_11712() -> (Tensor[(9, 3, 4), bool],) {
  %662 = @func_10646() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */;
  %663 = %662.2;
  (%663,)
}

def @func_9996() -> uint64 {
  %664 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
  %664.3
}

def @func_11693(%var_11679: Tensor[(1200), float64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(1200), float64], Tensor[(1200), float64]) {
  %665 = @func_9539() /* ty=(Tensor[(4, 1), float64],) */;
  %666 = cast(%var_11679, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %667 = reshape(%666, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %668 = @func_5810(%667) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
  %669 = %665.0;
  %670 = @func_10577() /* ty=Tensor[(9, 3, 4), uint64] */;
  %671 = %668.5;
  (%669, %670, %671, %var_11679)
}

def @func_3405() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %672 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
  %673 = %672.0;
  %674 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
  (%673, %674)
}

def @func_3142(%var_3135: Tensor[(15, 12, 9), uint16]) -> (Tensor[(15, 12, 9), uint16],) {
  %675 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %676 = cast(%var_3135, dtype="uint16") /* ty=Tensor[(15, 12, 9), uint16] */;
  %677 = subtract(%675, %676) /* ty=Tensor[(15, 12, 9), uint16] */;
  (%677,)
}

def @func_3928(%var_3911: Tensor[(15, 5, 16), float64]) -> Tensor[(15, 5, 16), float64] {
  %678 = cast(%var_3911, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
  log2(%678) /* ty=Tensor[(15, 5, 16), float64] */
}

def @func_5627(%var_5617: Tensor[(5, 6, 16), float64]) -> (Tensor[(5, 6, 16), float64],) {
  %679 = cast(%var_5617, dtype="float64") /* ty=Tensor[(5, 6, 16), float64] */;
  %680 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(5, 6, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %681 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 6, 16), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 16), float64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %683 = floor_divide(%681, %682) /* ty=Tensor[(5, 6, 16), float64] */;
  (%683,)
}

def @func_10487() -> (Tensor[(9, 3, 4), float32], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), bool]) {
  %684 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %685 = cast(meta[relay.Constant][38] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %686 = reshape(%685, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %687 = @func_2043(%686) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %688 = @func_8320() /* ty=(Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) */;
  %689 = @func_9489() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
  %690 = %684.2;
  %691 = %687.4;
  %692 = %688.1;
  %693 = %689.1;
  (%690, %691, meta[relay.Constant][38] /* ty=Tensor[(288), uint64] */, %692, %693)
}

def @func_3952(%var_3948: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) {
  %694 = cast(meta[relay.Constant][39] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %695 = cast(%var_3948, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %696 = reshape(%694, newshape=[]) /* ty=uint64 */;
  %697 = reshape(%695, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %698 = @func_3758(%696, %697) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) */;
  %699 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %700 = %698.1;
  (%699, %700, meta[relay.Constant][39] /* ty=uint64 */, %var_3948)
}

def @func_7203() -> Tensor[(9, 3, 4), uint64] {
  %701 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
  %701.0
}

def @func_10184(%var_10146: Tensor[(45), float32], %var_10159: Tensor[(32), uint64]) -> (uint64, Tensor[(?, 2, 2), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(32), uint64], Tensor[(9, 3, 4), uint64]) {
  %702 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
  %703 = cast(%var_10146, dtype="float32") /* ty=Tensor[(45), float32] */;
  %704 = reshape(%703, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
  %705 = @func_2326(%704) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
  %706 = %702.3;
  %707 = cast(%706, dtype="uint64") /* ty=uint64 */;
  %708 = cast(%var_10159, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %709 = reshape(%707, newshape=[]) /* ty=uint64 */;
  %710 = reshape(%708, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %711 = @func_9220(%709, %710) /* ty=(Tensor[(3, 11, 9), float64], Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64]) */;
  %712 = @func_9660() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %713 = %705.6;
  %714 = @func_4131() /* ty=Tensor[(9, 3, 4), float32] */;
  %715 = %711.1;
  %716 = %712.0;
  (%706, %713, %var_10146, %714, %715, %var_10159, %716)
}

def @func_9532() -> (Tensor[(7, 6, 4), float64],) {
  %717 = @func_7794() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) */;
  %718 = %717.1;
  (%718,)
}

def @func_130(%var_120: Tensor[(15, 3, 1), float32]) -> (Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) {
  %719 = cast(%var_120, dtype="float32") /* ty=Tensor[(15, 3, 1), float32] */;
  %720 = cast(%var_120, dtype="float64") /* ty=Tensor[(15, 3, 1), float64] */;
  %721 = rsqrt(%719) /* ty=Tensor[(15, 3, 1), float32] */;
  %722 = sinh(%720) /* ty=Tensor[(15, 3, 1), float64] */;
  (%721, %722)
}

def @func_5924(%var_5910: Tensor[(9, 8, 8), float64]) -> (Tensor[(9, 8, 8), float64],) {
  %723 = cast(%var_5910, dtype="float64") /* ty=Tensor[(9, 8, 8), float64] */;
  %724 = acos(%723) /* ty=Tensor[(9, 8, 8), float64] */;
  (%724,)
}

def @func_8134() -> (Tensor[(9, 3, 4), bool],) {
  %725 = @func_5908() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) */;
  %726 = %725.2;
  (%726,)
}

def @func_17471() -> (Tensor[(4, 1), float64],) {
  %727 = @func_9406() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %728 = %727.0;
  (%728,)
}

def @func_8675() -> Tensor[(9, 3, 4), uint64] {
  %729 = @func_4562() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %729.0
}

def @func_1183() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
  %730 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %731 = shape_of(meta[relay.Constant][40] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %734 = bitwise_and(%732, %733) /* ty=Tensor[(9, 3, 4), uint8] */;
  %735 = cast(meta[relay.Constant][40] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %736 = shape_of(%734, dtype="int32") /* ty=Tensor[(3), int32] */;
  %737 = cast(%734, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %738 = dyn.reshape(%735, %736, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %739 = cast(%734, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %740 = less_equal(%737, %738) /* ty=Tensor[(9, 3, 4), bool] */;
  %741 = sin(%739) /* ty=Tensor[(9, 3, 4), float32] */;
  (%740, %741)
}

def @func_14396() -> (Tensor[(3, 6, 16), uint64],) {
  %742 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  (%742,)
}

def @func_4983(%var_4963: Tensor[(3, 6, 14), float32], %var_4967: Tensor[(4), float64]) -> (Tensor[(3, 6, 14), float32], Tensor[(1, 45), float32], Tensor[(4), float64], Tensor[(9, 3, 4), uint64]) {
  %743 = cast(%var_4963, dtype="float32") /* ty=Tensor[(3, 6, 14), float32] */;
  %744 = cast(%var_4967, dtype="float64") /* ty=Tensor[(4), float64] */;
  %745 = reshape(%744, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %746 = @func_1719(%745) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) */;
  %747 = erf(%743) /* ty=Tensor[(3, 6, 14), float32] */;
  %748 = %746.3;
  %749 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%747, %748, %var_4967, %749)
}

def @func_3305() -> Tensor[(9, 3, 4), float32] {
  %750 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %750.0
}

def @func_4084(%var_4047: Tensor[(288), uint64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(15, 3, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(15, 3, 288), int16]) {
  %751 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
  %752 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %753 = %751.0;
  %754 = cast(%753, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %755 = reshape(%754, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %756 = @func_39(%755) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %757 = cast(%var_4047, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %758 = reshape(%757, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %759 = @func_2531(%758) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %760 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %761 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %762 = reshape(%761, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %763 = @func_130(%762) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %764 = %763.0;
  %765 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 45), float32] */, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="float64") /* ty=Tensor[(15, 3, 1), float64] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %769 = power(%767, %768) /* ty=Tensor[(15, 3, ?), float64] */;
  %770 = cast(%var_4047, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %771 = reshape(%770, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %772 = @func_2531(%771) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %773 = %772.1;
  %774 = cast(%773, dtype="int32") /* ty=Tensor[(45), int32] */;
  %775 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%769, dtype="int32") /* ty=Tensor[(15, 3, ?), int32] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %778 = left_shift(%776, %777) /* ty=Tensor[(15, 3, ?), int32] */;
  %779 = cast(%var_4047, dtype="int16") /* ty=Tensor[(288), int16] */;
  %780 = cast(%778, dtype="int16") /* ty=Tensor[(15, 3, ?), int16] */;
  %781 = %752.0;
  %782 = %756.1;
  %783 = %759.3;
  %784 = %760.0;
  %785 = right_shift(%779, %780) /* ty=Tensor[(15, 3, 288), int16] */;
  (%753, %781, %782, %783, %784, %785)
}

def @func_10646() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
  %786 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %787 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %788 = @func_3078() /* ty=Tensor[(9, 3, 4), uint64] */;
  %789 = %786.0;
  %790 = %787.1;
  (%788, %789, %790)
}

def @func_1306() -> Tensor[(9, 3, 4), bool] {
  %791 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %791.0
}

def @func_13599() -> (Tensor[(9, 3, 4), uint64], Tensor[(2, 32), float32], Tensor[(2, 32), float32]) {
  %792 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %793 = @func_11114() /* ty=Tensor[(1, 32), uint64] */;
  %794 = cast(%793, dtype="uint8") /* ty=Tensor[(1, 32), uint8] */;
  %795 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 32), uint64] */, dtype="uint8") /* ty=Tensor[(2, 32), uint8] */;
  %796 = add(%794, %795) /* ty=Tensor[(2, 32), uint8] */;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %798 = cast(%796, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %799 = %792.4;
  %800 = sqrt(%797) /* ty=Tensor[(2, 32), float32] */;
  %801 = erf(%798) /* ty=Tensor[(2, 32), float32] */;
  (%799, %800, %801)
}

def @func_16274() -> Tensor[(9, 3, 4), float32] {
  %802 = @func_13509() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %802.0
}

def @func_7124() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  %803 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %804 = @func_7039() /* ty=(Tensor[(4, 1), float64],) */;
  %805 = %803.0;
  %806 = %804.0;
  (%805, %806)
}

def @func_2043(%var_2023: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
  %807 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %808 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %809 = cast(%808, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %810 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %811 = cast(meta[relay.Constant][44] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %812 = reshape(%811, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %813 = @func_39(%812) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %814 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %815 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %816 = cast(%var_2023, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %817 = reshape(%816, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %818 = @func_1782(%817) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %819 = %807.0;
  %820 = acosh(%809) /* ty=Tensor[(9, 3, 4), float32] */;
  %821 = %810.0;
  %822 = %813.1;
  %823 = %814.0;
  %824 = %815.1;
  %825 = %818.0;
  (%819, %820, %821, %822, meta[relay.Constant][44] /* ty=Tensor[(4), float64] */, %823, %824, %825, %var_2023)
}

def @func_13318(%var_13311: Tensor[(4, 5, 11), int32]) -> (Tensor[(4, 5, 11), int32],) {
  %826 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 5, 11), int32] */, dtype="int32") /* ty=Tensor[(4, 5, 11), int32] */;
  %827 = shape_of(%var_13311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%var_13311, dtype="int32") /* ty=Tensor[(4, 5, 11), int32] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %830 = logical_xor(%828, %829) /* ty=Tensor[(4, 5, 11), int32] */;
  (%830,)
}

def @func_15868() -> Tensor[(168), float64] {
  %831 = @func_8994() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) */;
  %831.2
}

def @func_4562() -> (Tensor[(9, 3, 4), uint64],) {
  %832 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %833 = %832.0;
  (%833,)
}

def @func_4841() -> (Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) {
  %834 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %835 = cast(meta[relay.Constant][46] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %836 = reshape(%835, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %837 = @func_130(%836) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %838 = %834.1;
  %839 = %837.0;
  (%838, %839, meta[relay.Constant][46] /* ty=Tensor[(45), float32] */)
}

def @func_4149() -> Tensor[(9, 3, 4), uint64] {
  @func_3078() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_5773() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
  %840 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %841 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %842 = %840.0;
  %843 = %841.5;
  %844 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  (%842, %843, %844)
}

def @func_17861() -> Tensor[(9, 3, 4), bool] {
  %845 = @func_10487() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), bool]) */;
  %845.4
}

def @func_17970(%var_17927: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32], Tensor[(120), uint16], Tensor[(4, 32), uint32], Tensor[(9, 3, 4), float32], Tensor[(4, 32), bool], uint64) {
  %846 = @func_14594() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(288), uint64], Tensor[(288), uint64], Tensor[(3, 6, 16), float32]) */;
  %847 = @func_4997() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) */;
  %848 = %847.0;
  %849 = cast(%var_17927, dtype="uint32") /* ty=Tensor[(32), uint32] */;
  %850 = cast(%848, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
  %851 = cast(%var_17927, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %852 = cast(meta[relay.Constant][47] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %853 = reshape(%851, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %854 = reshape(%852, newshape=[60, 2]) /* ty=Tensor[(60, 2), uint16] */;
  %855 = @func_17390(%853, %854) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(1, 15, 8), uint16], Tensor[(60, 2), uint16], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(4, 32), float32]) */;
  %856 = %855.6;
  %857 = cast(%856, dtype="bool") /* ty=Tensor[(4, 32), bool] */;
  %858 = cast(%var_17927, dtype="bool") /* ty=Tensor[(32), bool] */;
  %859 = @func_13848() /* ty=(Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) */;
  %860 = @func_16274() /* ty=Tensor[(9, 3, 4), float32] */;
  %861 = %846.3;
  %862 = bitwise_and(%849, %850) /* ty=Tensor[(4, 32), uint32] */;
  %863 = @func_9185() /* ty=Tensor[(9, 3, 4), float32] */;
  %864 = logical_or(%857, %858) /* ty=Tensor[(4, 32), bool] */;
  %865 = %859.1;
  (%860, %861, meta[relay.Constant][47] /* ty=Tensor[(120), uint16] */, %862, %863, %864, %865)
}

def @func_7585() -> (Tensor[(4, 1), float64],) {
  %866 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
  (%866,)
}

def @func_10277() -> Tensor[(9, 3, 4), uint64] {
  %867 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
  %867.1
}

def @func_3881(%var_3795: Tensor[(16, 1, 13), float32], %var_3823: Tensor[(16, 10, 13), float64], %var_3877: Tensor[(288), uint64]) -> (Tensor[(16, 10, 13), int16], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
  %868 = cast(%var_3795, dtype="float32") /* ty=Tensor[(16, 1, 13), float32] */;
  %869 = acos(%868) /* ty=Tensor[(16, 1, 13), float32] */;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(16, 1, 13), float64] */;
  %871 = tan(%870) /* ty=Tensor[(16, 1, 13), float64] */;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(16, 1, 13), float64] */;
  %873 = sqrt(%872) /* ty=Tensor[(16, 1, 13), float64] */;
  %874 = cast(%873, dtype="int16") /* ty=Tensor[(16, 1, 13), int16] */;
  %875 = cast(%var_3823, dtype="int16") /* ty=Tensor[(16, 10, 13), int16] */;
  %876 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %877 = cast(%var_3877, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %878 = reshape(%877, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %879 = @func_2374(%878) /* ty=(Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) */;
  %880 = bitwise_or(%874, %875) /* ty=Tensor[(16, 10, 13), int16] */;
  %881 = %876.0;
  %882 = %879.0;
  (%880, %881, %882, %var_3877)
}

def @func_16825() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %883 = @func_16527() /* ty=(Tensor[(4, 1), float64],) */;
  %884 = %883.0;
  %885 = @func_11073() /* ty=Tensor[(9, 3, 4), float32] */;
  (%884, %885)
}

def @func_11323() -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16]) {
  %886 = cast(meta[relay.Constant][48] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %887 = reshape(%886, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %888 = @func_3142(%887) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %889 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  %890 = %888.0;
  (%889, %890, meta[relay.Constant][48] /* ty=Tensor[(1620), uint16] */)
}

def @func_5301() -> (Tensor[(288), uint64], Tensor[(9, 3, 4), bool]) {
  %891 = cast(meta[relay.Constant][49] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %892 = reshape(%891, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %893 = @func_2374(%892) /* ty=(Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) */;
  %894 = %893.1;
  %895 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
  %896 = cast(%894, dtype="bool") /* ty=bool */;
  %897 = cast(%895, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %898 = logical_or(%896, %897) /* ty=Tensor[(9, 3, 4), bool] */;
  (meta[relay.Constant][49] /* ty=Tensor[(288), uint64] */, %898)
}

def @func_9614() -> (Tensor[(288), uint64],) {
  %899 = @func_9027() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) */;
  %900 = %899.2;
  (%900,)
}

def @func_10906() -> (Tensor[(288), uint64],) {
  %901 = @func_9614() /* ty=(Tensor[(288), uint64],) */;
  %902 = %901.0;
  (%902,)
}

def @func_2225() -> (Tensor[(9, 3, 4), float32],) {
  %903 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %904 = %903.1;
  %905 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %906 = %905.1;
  %907 = cast(%906, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %908 = shape_of(%904, dtype="int32") /* ty=Tensor[(3), int32] */;
  %909 = cast(%904, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %911 = power(%909, %910) /* ty=Tensor[(9, 3, 4), float32] */;
  (%911,)
}

def @func_39(%var_3: Tensor[(1, 2, 2), float64]) -> (Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %912 = cast(%var_3, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
  %913 = sin(%912) /* ty=Tensor[(1, 2, 2), float64] */;
  %914 = cast(%913, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
  %915 = shape_of(%var_3, dtype="int32") /* ty=Tensor[(3), int32] */;
  %916 = cast(%var_3, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
  %917 = dyn.reshape(%914, %915, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %918 = minimum(%916, %917) /* ty=Tensor[(?, 2, 2), int16] */;
  %919 = cast(%var_3, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %920 = shape_of(%918, dtype="int32") /* ty=Tensor[(3), int32] */;
  %921 = cast(%918, dtype="float32") /* ty=Tensor[(?, 2, 2), float32] */;
  %922 = dyn.reshape(%919, %920, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %923 = cast(%913, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
  %924 = floor_divide(%921, %922) /* ty=Tensor[(?, 2, 2), float32] */;
  %925 = atan(%923) /* ty=Tensor[(1, 2, 2), float32] */;
  (%924, %925)
}

def @func_12493() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(176), float32], Tensor[(728), float32]) {
  %926 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %927 = cast(meta[relay.Constant][50] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %928 = reshape(%927, newshape=[8, 2, 11]) /* ty=Tensor[(8, 2, 11), float32] */;
  %929 = @func_12444(%928) /* ty=(Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) */;
  %930 = %929.2;
  %931 = cast(%930, dtype="float32") /* ty=Tensor[(728), float32] */;
  %932 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  %933 = %926.1;
  %934 = cosh(%931) /* ty=Tensor[(728), float32] */;
  (%932, %933, meta[relay.Constant][50] /* ty=Tensor[(176), float32] */, %934)
}

def @func_8182() -> (Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) {
  %935 = cast(meta[relay.Constant][51] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %936 = cast(meta[relay.Constant][52] /* ty=Tensor[(16, 10, 16), int16] */, dtype="bool") /* ty=Tensor[(16, 10, 16), bool] */;
  %937 = @func_8134() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %938 = less_equal(%935, %936) /* ty=Tensor[(16, 10, 16), bool] */;
  %939 = %937.0;
  (%938, %939)
}

def @func_4594() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
  %940 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %941 = %940.0;
  %942 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
  (%941, %942)
}

def @func_11659(%var_11645: Tensor[(320), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 3, 1), float32], Tensor[(16, 4, 5), bool], Tensor[(320), float32], Tensor[(9, 3, 4), float32]) {
  %943 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %944 = @func_5269() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %945 = @func_4841() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) */;
  %946 = cast(%var_11645, dtype="float32") /* ty=Tensor[(320), float32] */;
  %947 = reshape(%946, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
  %948 = @func_11571() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %949 = %943.1;
  %950 = %944.0;
  %951 = @func_7168() /* ty=Tensor[(4, 1), float64] */;
  %952 = @func_6776() /* ty=Tensor[(4, 1), float64] */;
  %953 = %945.1;
  %954 = @func_10775(%947) /* ty=Tensor[(16, 4, 5), bool] */;
  %955 = %948.0;
  (%949, %950, %951, %952, %953, %954, %var_11645, %955)
}

def @func_3610(%var_3594: Tensor[(5, 2, 8), float64]) -> (Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) {
  %956 = cast(%var_3594, dtype="float64") /* ty=Tensor[(5, 2, 8), float64] */;
  %957 = cast(meta[relay.Constant][53] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %958 = reshape(%957, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %959 = @func_1782(%958) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %960 = acos(%956) /* ty=Tensor[(5, 2, 8), float64] */;
  %961 = %959.2;
  (%960, %961, meta[relay.Constant][53] /* ty=Tensor[(288), uint64] */)
}

def @func_5159(%var_5156: uint64) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(32), uint64], uint64, Tensor[(4, 8), uint64]) {
  %962 = @func_4594() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %963 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %964 = cast(%var_5156, dtype="uint64") /* ty=uint64 */;
  %965 = cast(meta[relay.Constant][54] /* ty=Tensor[(4, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 8), uint64] */;
  %966 = reshape(%964, newshape=[]) /* ty=uint64 */;
  %967 = reshape(%965, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %968 = @func_2855(%966, %967) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
  %969 = %962.1;
  %970 = %963.0;
  %971 = %968.6;
  (%969, %970, %971, %var_5156, meta[relay.Constant][54] /* ty=Tensor[(4, 8), uint64] */)
}

def @func_6820() -> (Tensor[(9, 3, 4), float32],) {
  %972 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %973 = %972.0;
  (%973,)
}

def @func_16338() -> (Tensor[(4, 1), float64],) {
  %974 = @func_15090() /* ty=Tensor[(4, 1), float64] */;
  (%974,)
}

def @func_7320() -> (Tensor[(4, 1), float64],) {
  %975 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %976 = %975.0;
  (%976,)
}

def @func_13509() -> (Tensor[(9, 3, 4), float32],) {
  %977 = @func_11259() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %978 = %977.0;
  (%978,)
}

def @func_17772(%var_17731: Tensor[(144, 4), float64], %var_17735: Tensor[(144, 4), float64]) -> (Tensor[(4, 1), float64], Tensor[(9, 8, 8), float64], Tensor[(144, 4), bool], Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %979 = cast(%var_17731, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
  %980 = reshape(%979, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
  %981 = @func_5924(%980) /* ty=(Tensor[(9, 8, 8), float64],) */;
  %982 = cast(%var_17735, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
  %983 = shape_of(%var_17731, dtype="int32") /* ty=Tensor[(2), int32] */;
  %984 = cast(%var_17731, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
  %985 = dyn.reshape(%982, %983, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %986 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
  %987 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %988 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %989 = @func_6776() /* ty=Tensor[(4, 1), float64] */;
  %990 = %981.0;
  %991 = less_equal(%984, %985) /* ty=Tensor[(144, 4), bool] */;
  %992 = %986.2;
  %993 = %987.0;
  %994 = %988.0;
  (%989, %990, %991, %992, %993, %994)
}

def @func_13780(%var_13759: Tensor[(288), uint64], %var_13760: Tensor[(45), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(45, 1), float32], uint64, Tensor[(288), uint64], Tensor[(45), float32], Tensor[(4, 1), float64]) {
  %995 = cast(meta[relay.Constant][55] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %996 = cast(%var_13759, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %997 = cast(%var_13760, dtype="float32") /* ty=Tensor[(45), float32] */;
  %998 = reshape(%995, newshape=[]) /* ty=uint64 */;
  %999 = reshape(%996, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
  %1000 = reshape(%997, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
  %1001 = @func_954(%998, %999, %1000) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
  %1002 = @func_8466() /* ty=Tensor[(9, 3, 4), float32] */;
  %1003 = %1001.2;
  %1004 = @func_13416() /* ty=Tensor[(4, 1), float64] */;
  (%1002, %1003, meta[relay.Constant][55] /* ty=uint64 */, %var_13759, %var_13760, %1004)
}

def @func_2953() -> (Tensor[(9, 3, 4), uint64],) {
  %1005 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %1006 = %1005.1;
  (%1006,)
}

def @func_6188() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) {
  %1007 = @func_4562() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %1008 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1009 = %1007.0;
  %1010 = %1008.0;
  (%1009, %1010)
}

def @func_8685() -> Tensor[(3, 84), float32] {
  %1011 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
  %1011.2
}

def @func_1874(%var_1865: Tensor[(45), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
  %1012 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %1013 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %1014 = cast(%var_1865, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1015 = reshape(%1014, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %1016 = @func_130(%1015) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %1017 = %1012.0;
  %1018 = cast(%1017, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %1019 = reshape(%1018, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %1020 = @func_1248(%1019) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %1021 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %1022 = %1013.0;
  %1023 = %1016.0;
  %1024 = %1020.0;
  %1025 = %1021.0;
  (%1017, %1022, %1023, %var_1865, %1024, %1025)
}

def @func_8588(%var_8571: Tensor[(1, 1620), uint16], %var_8574: Tensor[(2, 40), float64]) -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(5, 2, 8), float64], Tensor[(2, 40), float64], Tensor[(9, 3, 4), float32]) {
  %1026 = @func_7039() /* ty=(Tensor[(4, 1), float64],) */;
  %1027 = cast(%var_8571, dtype="uint16") /* ty=Tensor[(1, 1620), uint16] */;
  %1028 = reshape(%1027, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %1029 = @func_3142(%1028) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %1030 = cast(%var_8574, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
  %1031 = reshape(%1030, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), float64] */;
  %1032 = @func_3610(%1031) /* ty=(Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) */;
  %1033 = @func_7124() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) */;
  %1034 = %1026.0;
  %1035 = %1029.0;
  %1036 = %1032.0;
  %1037 = %1033.0;
  (%1034, %1035, %var_8571, %1036, %var_8574, %1037)
}

def @func_13094() -> (Tensor[(4, 1), float64], Tensor[(7, 234), float32], Tensor[(1638), float32]) {
  %1038 = @func_9406() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1039 = cast(meta[relay.Constant][56] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1040 = reshape(%1039, newshape=[7, 234]) /* ty=Tensor[(7, 234), float32] */;
  %1041 = @func_10321(%1040) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 14, 13), float32], Tensor[(7, 234), float32]) */;
  %1042 = %1038.0;
  %1043 = %1041.3;
  (%1042, %1043, meta[relay.Constant][56] /* ty=Tensor[(1638), float32] */)
}

def @func_10014(%var_10005: float64, %var_10006: Tensor[(10, 1, 15), float64]) -> (Tensor[(10, 1, 15), float64],) {
  %1044 = cast(%var_10005, dtype="float64") /* ty=float64 */;
  %1045 = cast(%var_10006, dtype="float64") /* ty=Tensor[(10, 1, 15), float64] */;
  %1046 = power(%1044, %1045) /* ty=Tensor[(10, 1, 15), float64] */;
  (%1046,)
}

def @func_6776() -> Tensor[(4, 1), float64] {
  %1047 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %1047.0
}

def @func_7723() -> (Tensor[(4, 1), float64],) {
  %1048 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %1049 = %1048.0;
  (%1049,)
}

def @func_11910() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64]) {
  %1050 = @func_4997() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) */;
  %1051 = @func_8838() /* ty=Tensor[(4, 1), float64] */;
  %1052 = %1050.1;
  %1053 = @func_8778() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%1051, %1052, %1053)
}

def @func_14594() -> (Tensor[(9, 3, 4), uint64], Tensor[(288), uint64], Tensor[(288), uint64], Tensor[(3, 6, 16), float32]) {
  %1054 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
  %1055 = cast(meta[relay.Constant][57] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1056 = reshape(%1055, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1057 = @func_2531(%1056) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %1058 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
  %1059 = %1054.2;
  %1060 = %1057.2;
  %1061 = %1058.0;
  (%1059, %1060, meta[relay.Constant][57] /* ty=Tensor[(288), uint64] */, %1061)
}

def @func_2974() -> Tensor[(4, 1), float64] {
  %1062 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %1062.0
}

def @func_1551() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) {
  %1063 = cast(meta[relay.Constant][58] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %1064 = reshape(%1063, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %1065 = @func_1248(%1064) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %1066 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %1067 = cast(%1066, dtype="uint64") /* ty=Tensor[(9, 3, 4), uint64] */;
  %1068 = cast(meta[relay.Constant][58] /* ty=Tensor[(4), float64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
  %1069 = %1065.2;
  %1070 = subtract(%1067, %1068) /* ty=Tensor[(9, 3, 4), uint64] */;
  (%1069, %1070)
}

def @func_3758(%var_3724: uint64, %var_3725: Tensor[(32), uint64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) {
  %1071 = @func_3405() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1072 = cast(%var_3724, dtype="uint64") /* ty=uint64 */;
  %1073 = cast(%var_3725, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %1074 = reshape(%1072, newshape=[]) /* ty=uint64 */;
  %1075 = reshape(%1073, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %1076 = @func_2672(%1074, %1075) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1077 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1078 = %1071.0;
  %1079 = @func_3305() /* ty=Tensor[(9, 3, 4), float32] */;
  %1080 = %1076.1;
  %1081 = %1077.1;
  (%1078, %1079, %1080, %var_3724, %var_3725, %1081)
}

def @func_16802() -> (Tensor[(9, 3, 4), float64],) {
  %1082 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  (%1082,)
}

def @func_8994() -> (Tensor[(9, 3, 4), float32], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) {
  %1083 = @func_3021() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %1084 = cast(meta[relay.Constant][59] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1085 = reshape(%1084, newshape=[7, 6, 4]) /* ty=Tensor[(7, 6, 4), float64] */;
  %1086 = %1083.1;
  %1087 = @func_7700(%1085) /* ty=Tensor[(7, 6, 4), float64] */;
  (%1086, %1087, meta[relay.Constant][59] /* ty=Tensor[(168), float64] */)
}

def @func_3078() -> Tensor[(9, 3, 4), uint64] {
  %1088 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %1088.0
}

def @func_10533() -> (uint64,) {
  %1089 = @func_9996() /* ty=uint64 */;
  (%1089,)
}

def @func_6744() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) {
  %1090 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %1091 = %1090.1;
  %1092 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  (%1091, %1092)
}

def @func_11395(%var_11382: float32) -> (Tensor[(10, 1, 15), float32], Tensor[(4, 1), float64]) {
  %1093 = cast(%var_11382, dtype="float32") /* ty=float32 */;
  %1094 = cast(meta[relay.Constant][60] /* ty=Tensor[(10, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 1, 15), float32] */;
  %1095 = divide(%1093, %1094) /* ty=Tensor[(10, 1, 15), float32] */;
  %1096 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
  (%1095, %1096)
}

def @func_7794() -> (Tensor[(9, 3, 4), bool], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) {
  %1097 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %1098 = cast(meta[relay.Constant][61] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
  %1099 = reshape(%1098, newshape=[7, 6, 4]) /* ty=Tensor[(7, 6, 4), float64] */;
  %1100 = %1097.1;
  %1101 = @func_7700(%1099) /* ty=Tensor[(7, 6, 4), float64] */;
  (%1100, %1101, meta[relay.Constant][61] /* ty=Tensor[(168), float64] */)
}

def @func_13533() -> Tensor[(9, 3, 4), uint64] {
  @func_10277() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_16044(%var_16033: Tensor[(176), float32]) -> (Tensor[(4, 1), float64], Tensor[(728), bool], Tensor[(176), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float32]) {
  %1102 = @func_13094() /* ty=(Tensor[(4, 1), float64], Tensor[(7, 234), float32], Tensor[(1638), float32]) */;
  %1103 = cast(%var_16033, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1104 = reshape(%1103, newshape=[8, 2, 11]) /* ty=Tensor[(8, 2, 11), float32] */;
  %1105 = @func_12444(%1104) /* ty=(Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) */;
  %1106 = @func_5908() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) */;
  %1107 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
  %1108 = %1102.0;
  %1109 = %1105.2;
  %1110 = %1106.1;
  %1111 = %1107.0;
  (%1108, %1109, %var_16033, %1110, %1111)
}

def @func_8864(%var_8857: Tensor[(9, 12, 3), int32]) -> Tensor[(9, 12, 3), bool] {
  %1112 = cast(9 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %1113 = cast(%var_8857, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
  greater(%1112, %1113) /* ty=Tensor[(9, 12, 3), bool] */
}

def @func_6498(%var_6444: Tensor[(1200), float64], %var_6478: Tensor[(45), float32]) -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(9, 3, 4), float64], Tensor[(1, 45), float32], Tensor[(45), float32]) {
  %1114 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
  %1115 = cast(%var_6444, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %1116 = reshape(%1115, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %1117 = @func_5810(%1116) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
  %1118 = @func_4754() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) */;
  %1119 = %1118.1;
  %1120 = cast(%1119, dtype="float64") /* ty=Tensor[(9, 3, 4), float64] */;
  %1121 = cast(%var_6478, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1122 = reshape(%1121, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
  %1123 = @func_2326(%1122) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
  %1124 = %1114.3;
  %1125 = %1117.0;
  %1126 = sigmoid(%1120) /* ty=Tensor[(9, 3, 4), float64] */;
  %1127 = %1123.2;
  (%1124, %1125, %var_6444, %1126, %1127, %var_6478)
}

def @func_14001() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), float32]) {
  %1128 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
  %1129 = @func_8358() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1130 = %1128.4;
  %1131 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %1132 = %1129.0;
  (%1130, %1131, %1132)
}

def @func_7869() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %1133 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %1134 = %1133.0;
  %1135 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
  (%1134, %1135)
}

def @func_3589() -> (Tensor[(4, 1), float64],) {
  %1136 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
  %1137 = %1136.0;
  (%1137,)
}

def @func_8778() -> Tensor[(9, 3, 4), uint64] {
  %1138 = @func_4562() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %1138.0
}

def @func_14476() -> Tensor[(4, 1), float64] {
  %1139 = @func_8902() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) */;
  %1139.1
}

def @func_9220(%var_9216: uint64, %var_9217: Tensor[(32), uint64]) -> (Tensor[(3, 11, 9), float64], Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64]) {
  %1140 = cast(meta[relay.Constant][62] /* ty=Tensor[(3, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 9), float64] */;
  %1141 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %1142 = cast(%var_9216, dtype="uint64") /* ty=uint64 */;
  %1143 = cast(%var_9217, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %1144 = reshape(%1142, newshape=[]) /* ty=uint64 */;
  %1145 = reshape(%1143, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %1146 = @func_2672(%1144, %1145) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1147 = log2(%1140) /* ty=Tensor[(3, 11, 9), float64] */;
  %1148 = %1141.1;
  %1149 = %1146.2;
  (%1147, %1148, %1149, %var_9216, %var_9217)
}

def @func_17232() -> (uint64, Tensor[(4, 1), float64]) {
  %1150 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1151 = @func_7869() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %1152 = %1150.2;
  %1153 = %1151.0;
  (%1152, %1153)
}

def @func_1719(%var_1707: Tensor[(4, 1), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) {
  %1154 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1155 = cast(meta[relay.Constant][63] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1156 = cast(meta[relay.Constant][64] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1157 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %1158 = reshape(%1155, newshape=[]) /* ty=uint64 */;
  %1159 = reshape(%1156, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
  %1160 = reshape(%1157, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
  %1161 = @func_954(%1158, %1159, %1160) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
  %1162 = cast(%var_1707, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %1163 = reshape(%1162, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %1164 = @func_39(%1163) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %1165 = cast(meta[relay.Constant][63] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1166 = cast(meta[relay.Constant][64] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1167 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %1168 = reshape(%1165, newshape=[]) /* ty=uint64 */;
  %1169 = reshape(%1166, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
  %1170 = reshape(%1167, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
  %1171 = @func_954(%1168, %1169, %1170) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
  %1172 = %1171.0;
  %1173 = cast(meta[relay.Constant][64] /* ty=Tensor[(288), uint64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1175 = cast(%1172, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1177 = %1154.0;
  %1178 = %1161.0;
  %1179 = %1164.1;
  %1180 = floor_divide(%1175, %1176) /* ty=Tensor[(3, 6, 16), float64] */;
  (%1177, %1178, meta[relay.Constant][63] /* ty=uint64 */, meta[relay.Constant][65] /* ty=Tensor[(1, 45), float32] */, %1179, %var_1707, %1180)
}

def @func_8737() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) {
  %1181 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %1182 = @func_4944() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %1183 = %1181.0;
  %1184 = @func_3305() /* ty=Tensor[(9, 3, 4), float32] */;
  %1185 = %1182.0;
  (%1183, %1184, %1185)
}

def @func_1460(%var_1458: Tensor[(4), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) {
  %1186 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1187 = cast(%var_1458, dtype="float64") /* ty=Tensor[(4), float64] */;
  %1188 = reshape(%1187, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %1189 = @func_39(%1188) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %1190 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %1191 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %1192 = %1186.1;
  %1193 = %1189.1;
  (%1190, %1191, %1192, %1193, %var_1458)
}

def @func_5390() -> (Tensor[(4, 1), float64],) {
  %1194 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  (%1194,)
}

def @func_17888(%var_17876: Tensor[(36, 16), float64]) -> (Tensor[(15, 12, 9), uint16], Tensor[(9, 8, 8), float64], Tensor[(36, 16), float64]) {
  %1195 = @func_9875() /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %1196 = cast(%var_17876, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
  %1197 = reshape(%1196, newshape=[576]) /* ty=Tensor[(576), float64] */;
  %1198 = @func_15554(%1197) /* ty=(Tensor[(3, 84), float32], Tensor[(9, 8, 8), float64], Tensor[(576), float64], Tensor[(9, 3, 4), float32]) */;
  %1199 = %1195.0;
  %1200 = %1198.1;
  (%1199, %1200, %var_17876)
}

def @func_10308(%var_10285: Tensor[(6, 4, 16), bool]) -> (Tensor[(6, 4, 16), float64], Tensor[(288), uint64], Tensor[(9, 3, 4), uint64]) {
  %1201 = cast(meta[relay.Constant][66] /* ty=Tensor[(6, 4, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %1202 = shape_of(%var_10285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1203 = cast(%var_10285, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %1204 = dyn.reshape(%1201, %1202, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1205 = logical_or(%1203, %1204) /* ty=Tensor[(6, 4, 16), bool] */;
  %1206 = cast(%1205, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
  %1207 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
  %1208 = acos(%1206) /* ty=Tensor[(6, 4, 16), float64] */;
  %1209 = @func_9065() /* ty=Tensor[(288), uint64] */;
  %1210 = %1207.2;
  (%1208, %1209, %1210)
}

def @func_13848() -> (Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) {
  %1211 = @func_8182() /* ty=(Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) */;
  %1212 = cast(meta[relay.Constant][67] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %1213 = reshape(%1212, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %1214 = @func_12677(%1213) /* ty=(Tensor[(9, 3, 4), int64], Tensor[(32), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], uint64) */;
  %1215 = %1211.1;
  %1216 = %1214.2;
  (%1215, %1216, meta[relay.Constant][67] /* ty=Tensor[(32), uint64] */)
}

def @func_17496() -> Tensor[(9, 3, 4), bool] {
  %1217 = @func_15216() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %1217.0
}

def @func_17796() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  %1218 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
  %1219 = @func_3381() /* ty=Tensor[(9, 3, 4), float32] */;
  %1220 = %1218.0;
  (%1219, %1220)
}

def @func_7700(%var_7681: Tensor[(7, 6, 4), float64]) -> Tensor[(7, 6, 4), float64] {
  %1221 = cast(meta[relay.Constant][68] /* ty=Tensor[(7, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 4), float64] */;
  %1222 = shape_of(%var_7681, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1223 = cast(%var_7681, dtype="float64") /* ty=Tensor[(7, 6, 4), float64] */;
  %1224 = dyn.reshape(%1221, %1222, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%1223, %1224) /* ty=Tensor[(7, 6, 4), float64] */
}

def @func_2407(%var_2392: uint64, %var_2393: Tensor[(2, 16, 1), uint64]) -> (Tensor[(2, 16, ?), bool],) {
  %1225 = cast(%var_2392, dtype="uint64") /* ty=uint64 */;
  %1226 = cast(%var_2393, dtype="uint64") /* ty=Tensor[(2, 16, 1), uint64] */;
  %1227 = subtract(%1225, %1226) /* ty=Tensor[(2, 16, 1), uint64] */;
  %1228 = cast(%1227, dtype="bool") /* ty=Tensor[(2, 16, 1), bool] */;
  %1229 = shape_of(%var_2393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1230 = cast(%var_2393, dtype="bool") /* ty=Tensor[(2, 16, 1), bool] */;
  %1231 = dyn.reshape(%1228, %1229, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1232 = equal(%1230, %1231) /* ty=Tensor[(2, 16, ?), bool] */;
  (%1232,)
}

def @func_9539() -> (Tensor[(4, 1), float64],) {
  %1233 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  (%1233,)
}

def @func_6642() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %1234 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %1235 = cast(meta[relay.Constant][69] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1236 = reshape(%1235, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1237 = @func_2043(%1236) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %1238 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1239 = @func_3021() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %1240 = %1234.0;
  %1241 = %1237.1;
  %1242 = %1238.1;
  %1243 = %1239.1;
  (%1240, %1241, meta[relay.Constant][69] /* ty=Tensor[(288), uint64] */, %1242, %1243)
}

def @func_4310() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) {
  %1244 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %1245 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %1246 = %1244.1;
  %1247 = %1245.3;
  (%1246, %1247)
}

def @func_3021() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %1248 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
  %1249 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1250 = %1248.0;
  %1251 = %1249.0;
  (%1250, %1251)
}

def @func_12444(%var_12428: Tensor[(8, 2, 11), float32]) -> (Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) {
  %1252 = cast(%var_12428, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
  %1253 = cast(meta[relay.Constant][70] /* ty=Tensor[(728), bool] */, dtype="bool") /* ty=Tensor[(728), bool] */;
  %1254 = reshape(%1253, newshape=[728]) /* ty=Tensor[(728), bool] */;
  %1255 = @func_11416(%1254) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) */;
  %1256 = rsqrt(%1252) /* ty=Tensor[(8, 2, 11), float32] */;
  %1257 = %1255.0;
  (%1256, %1257, meta[relay.Constant][70] /* ty=Tensor[(728), bool] */)
}

def @func_13690(%var_13674: Tensor[(1452), float64], %var_13675: uint64) -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32], Tensor[(1452), float32], Tensor[(1452), float64], uint64, Tensor[(4, 288), bool]) {
  %1258 = cast(meta[relay.Constant][71] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %1259 = reshape(%1258, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %1260 = @func_3142(%1259) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %1261 = cast(meta[relay.Constant][72] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1262 = reshape(%1261, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1263 = @func_3127(%1262) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %1264 = cast(%var_13674, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %1265 = cast(%var_13675, dtype="uint64") /* ty=uint64 */;
  %1266 = reshape(%1264, newshape=[1452]) /* ty=Tensor[(1452), float64] */;
  %1267 = reshape(%1265, newshape=[]) /* ty=uint64 */;
  %1268 = @func_7653(%1266, %1267) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) */;
  %1269 = @func_8934() /* ty=Tensor[(4, 1), float64] */;
  %1270 = cast(meta[relay.Constant][72] /* ty=Tensor[(288), uint64] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %1271 = cast(%1269, dtype="bool") /* ty=Tensor[(4, 1), bool] */;
  %1272 = @func_11733() /* ty=Tensor[(4, 1), float64] */;
  %1273 = @func_4875() /* ty=Tensor[(4, 1), float64] */;
  %1274 = %1260.0;
  %1275 = %1263.1;
  %1276 = %1268.2;
  %1277 = greater(%1270, %1271) /* ty=Tensor[(4, 288), bool] */;
  (%1272, %1273, %1274, meta[relay.Constant][71] /* ty=Tensor[(1620), uint16] */, %1275, %1276, %var_13674, %var_13675, %1277)
}

def @func_16667() -> (Tensor[(4, 1), float64],) {
  %1278 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
  (%1278,)
}

def @func_7039() -> (Tensor[(4, 1), float64],) {
  %1279 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %1280 = %1279.0;
  (%1280,)
}

def @func_14878() -> Tensor[(4, 1), float64] {
  %1281 = @func_9489() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
  %1281.0
}

def @func_15197(%var_15194: Tensor[(288), uint64]) -> (Tensor[(4, 1), float64], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(45), float32]) {
  %1282 = @func_6423() /* ty=(Tensor[(4, 1), float64],) */;
  %1283 = cast(%var_15194, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1284 = cast(meta[relay.Constant][73] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1285 = reshape(%1283, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1286 = reshape(%1284, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %1287 = @func_13780(%1285, %1286) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45, 1), float32], uint64, Tensor[(288), uint64], Tensor[(45), float32], Tensor[(4, 1), float64]) */;
  %1288 = %1282.0;
  %1289 = %1287.4;
  (%1288, %1289, %var_15194, meta[relay.Constant][73] /* ty=Tensor[(45), float32] */)
}

def @func_16832() -> (Tensor[(9, 3, 4), float32],) {
  %1290 = @func_9557() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1291 = %1290.0;
  (%1291,)
}

def @func_7600(%var_7592: Tensor[(11, 11, 12), float64]) -> (Tensor[(11, 11, 12), float64],) {
  %1292 = cast(meta[relay.Constant][74] /* ty=Tensor[(11, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 12), float64] */;
  %1293 = shape_of(%var_7592, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1294 = cast(%var_7592, dtype="float64") /* ty=Tensor[(11, 11, 12), float64] */;
  %1295 = dyn.reshape(%1292, %1293, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1296 = floor_divide(%1294, %1295) /* ty=Tensor[(11, 11, 12), float64] */;
  (%1296,)
}

def @func_11516(%var_11491: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64], Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(1, 80), float64]) {
  %1297 = @func_9027() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) */;
  %1298 = cast(meta[relay.Constant][75] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1299 = cast(%var_11491, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %1300 = reshape(%1298, newshape=[]) /* ty=uint64 */;
  %1301 = reshape(%1299, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %1302 = @func_2672(%1300, %1301) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1303 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %1304 = cast(meta[relay.Constant][76] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %1305 = reshape(%1304, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), float64] */;
  %1306 = @func_3610(%1305) /* ty=(Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) */;
  %1307 = %1297.0;
  %1308 = %1302.2;
  %1309 = %1303.0;
  %1310 = %1306.1;
  (%1307, %1308, meta[relay.Constant][75] /* ty=uint64 */, %var_11491, %1309, %1310, meta[relay.Constant][76] /* ty=Tensor[(1, 80), float64] */)
}

def @func_8358() -> (Tensor[(9, 3, 4), float32],) {
  %1311 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1312 = %1311.0;
  (%1312,)
}

def @func_14791(%var_14782: Tensor[(1638), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 14, 13), float32], Tensor[(1638), float32]) {
  %1313 = @func_10447() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
  %1314 = cast(%var_14782, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1315 = reshape(%1314, newshape=[9, 14, 13]) /* ty=Tensor[(9, 14, 13), float32] */;
  %1316 = %1313.0;
  %1317 = @func_4636(%1315) /* ty=Tensor[(9, 14, 13), float32] */;
  (%1316, %1317, %var_14782)
}

def @func_9660() -> (Tensor[(9, 3, 4), uint64],) {
  %1318 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %1319 = %1318.4;
  (%1319,)
}

def @func_2160() -> Tensor[(4, 1), float64] {
  %1320 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %1320.0
}

def @func_4754() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) {
  %1321 = cast(meta[relay.Constant][77] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %1322 = reshape(%1321, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %1323 = @func_1248(%1322) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %1324 = cast(meta[relay.Constant][78] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %1325 = reshape(%1324, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %1326 = @func_3142(%1325) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %1327 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1328 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  %1329 = %1323.0;
  %1330 = %1326.0;
  %1331 = %1327.0;
  (%1328, %1329, meta[relay.Constant][77] /* ty=Tensor[(4), float64] */, %1330, meta[relay.Constant][78] /* ty=Tensor[(1620), uint16] */, %1331)
}

def @func_12969(%var_12965: Tensor[(1, 480), float64]) -> (Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(5, 6, 16), float64], Tensor[(1, 480), float64]) {
  %1332 = @func_10839() /* ty=(Tensor[(45), float32],) */;
  %1333 = cast(%var_12965, dtype="float64") /* ty=Tensor[(1, 480), float64] */;
  %1334 = reshape(%1333, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), float64] */;
  %1335 = @func_5627(%1334) /* ty=(Tensor[(5, 6, 16), float64],) */;
  %1336 = %1332.0;
  %1337 = @func_11073() /* ty=Tensor[(9, 3, 4), float32] */;
  %1338 = %1335.0;
  (%1336, %1337, %1338, %var_12965)
}

def @func_11733() -> Tensor[(4, 1), float64] {
  %1339 = @func_9489() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
  %1339.0
}

def @func_13197() -> (Tensor[(4, 1), float64], uint64, Tensor[(9, 3, 4), float32]) {
  %1340 = @func_7124() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) */;
  %1341 = @func_10533() /* ty=(uint64,) */;
  %1342 = @func_9557() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1343 = %1340.1;
  %1344 = %1341.0;
  %1345 = %1342.0;
  (%1343, %1344, %1345)
}

def @func_2134() -> (Tensor[(9, 3, 4), float32],) {
  %1346 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1347 = %1346.0;
  (%1347,)
}

def @func_1357(%var_1325: uint64, %var_1327: Tensor[(15, 3), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], uint64, Tensor[(15, 3), float32], Tensor[(8, 36), bool]) {
  %1348 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1349 = cast(%var_1325, dtype="uint64") /* ty=uint64 */;
  %1350 = cast(meta[relay.Constant][79] /* ty=Tensor[(8, 36), uint64] */, dtype="uint64") /* ty=Tensor[(8, 36), uint64] */;
  %1351 = cast(%var_1327, dtype="float32") /* ty=Tensor[(15, 3), float32] */;
  %1352 = reshape(%1349, newshape=[]) /* ty=uint64 */;
  %1353 = reshape(%1350, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
  %1354 = reshape(%1351, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
  %1355 = @func_954(%1352, %1353, %1354) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
  %1356 = %1355.0;
  %1357 = cast(%1356, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
  %1358 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(8, 36), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1359 = cast(meta[relay.Constant][79] /* ty=Tensor[(8, 36), uint64] */, dtype="bool") /* ty=Tensor[(8, 36), bool] */;
  %1360 = dyn.reshape(%1357, %1358, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1361 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %1362 = %1348.0;
  %1363 = equal(%1359, %1360) /* ty=Tensor[(8, 36), bool] */;
  (%1361, %1362, %var_1325, %var_1327, %1363)
}

def @func_11053() -> (Tensor[(9, 3, 4), uint64],) {
  %1364 = @func_10277() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%1364,)
}

def @func_5908() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) {
  %1365 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %1366 = @func_5831() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) */;
  %1367 = @func_4944() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %1368 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
  %1369 = %1365.0;
  %1370 = %1366.1;
  %1371 = %1367.0;
  (%1368, %1369, %1370, %1371)
}

def @func_16488() -> (Tensor[(9, 3, 4), float32],) {
  %1372 = @func_13309() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1373 = %1372.0;
  (%1373,)
}

def @func_16286(%var_16276: Tensor[(15, 2, 14), float32]) -> (Tensor[(15, 2, 14), float32],) {
  %1374 = cast(%var_16276, dtype="float32") /* ty=Tensor[(15, 2, 14), float32] */;
  %1375 = sin(%1374) /* ty=Tensor[(15, 2, 14), float32] */;
  (%1375,)
}

def @func_4875() -> Tensor[(4, 1), float64] {
  %1376 = @func_4648() /* ty=(Tensor[(4, 1), float64],) */;
  %1376.0
}

def @func_8902() -> (Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) {
  %1377 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1378 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  %1379 = %1377.1;
  (%1378, %1379)
}

def @func_11981(%var_11917: Tensor[(6, 8, 3), uint16]) -> (Tensor[(9, 3, 4), float32], Tensor[(6, 8, 3), uint16], Tensor[(9, 3, 4), float32], Tensor[(9, 12, 3), bool], Tensor[(324), int32]) {
  %1380 = cast(meta[relay.Constant][80] /* ty=Tensor[(6, 8, 3), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
  %1381 = shape_of(%var_11917, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1382 = cast(%var_11917, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
  %1383 = dyn.reshape(%1380, %1381, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1384 = subtract(%1382, %1383) /* ty=Tensor[(6, 8, 3), uint16] */;
  %1385 = cast(%1384, dtype="float32") /* ty=Tensor[(6, 8, 3), float32] */;
  %1386 = asinh(%1385) /* ty=Tensor[(6, 8, 3), float32] */;
  %1387 = cast(%1386, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
  %1388 = shape_of(meta[relay.Constant][80] /* ty=Tensor[(6, 8, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1389 = cast(meta[relay.Constant][80] /* ty=Tensor[(6, 8, 3), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
  %1390 = dyn.reshape(%1387, %1388, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1391 = cast(meta[relay.Constant][81] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
  %1392 = reshape(%1391, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int32] */;
  %1393 = @func_3381() /* ty=Tensor[(9, 3, 4), float32] */;
  %1394 = bitwise_and(%1389, %1390) /* ty=Tensor[(6, 8, 3), uint16] */;
  %1395 = @func_8466() /* ty=Tensor[(9, 3, 4), float32] */;
  %1396 = @func_8864(%1392) /* ty=Tensor[(9, 12, 3), bool] */;
  (%1393, %1394, %1395, %1396, meta[relay.Constant][81] /* ty=Tensor[(324), int32] */)
}

def @func_14891() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %1397 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
  %1398 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
  (%1397, %1398)
}

def @func_7653(%var_7627: Tensor[(1452), float64], %var_7640: uint64) -> (Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) {
  %1399 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %1400 = cast(%var_7627, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %1401 = reshape(%1400, newshape=[11, 11, 12]) /* ty=Tensor[(11, 11, 12), float64] */;
  %1402 = @func_7600(%1401) /* ty=(Tensor[(11, 11, 12), float64],) */;
  %1403 = %1402.0;
  %1404 = cast(%var_7627, dtype="float32") /* ty=Tensor[(1452), float32] */;
  %1405 = shape_of(%1403, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1406 = cast(%1403, dtype="float32") /* ty=Tensor[(11, 11, 12), float32] */;
  %1407 = dyn.reshape(%1404, %1405, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1408 = cast(%var_7627, dtype="float32") /* ty=Tensor[(1452), float32] */;
  %1409 = cast(%var_7640, dtype="uint64") /* ty=uint64 */;
  %1410 = reshape(%1409, newshape=[]) /* ty=uint64 */;
  %1411 = @func_5159(%1410) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(32), uint64], uint64, Tensor[(4, 8), uint64]) */;
  %1412 = %1399.0;
  %1413 = divide(%1406, %1407) /* ty=Tensor[(11, 11, 12), float32] */;
  %1414 = tan(%1408) /* ty=Tensor[(1452), float32] */;
  %1415 = %1411.3;
  (%1412, %1413, %1414, %1415, %var_7640)
}

def @func_9185() -> Tensor[(9, 3, 4), float32] {
  @func_3305() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_9557() -> (Tensor[(9, 3, 4), float32],) {
  %1416 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
  %1417 = %1416.1;
  (%1417,)
}

def @func_4627() -> Tensor[(9, 3, 4), uint64] {
  @func_3078() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_6305() -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) {
  %1418 = cast(meta[relay.Constant][82] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %1419 = cast(meta[relay.Constant][83] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %1420 = reshape(%1418, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), float32] */;
  %1421 = reshape(%1419, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %1422 = @func_4983(%1420, %1421) /* ty=(Tensor[(3, 6, 14), float32], Tensor[(1, 45), float32], Tensor[(4), float64], Tensor[(9, 3, 4), uint64]) */;
  %1423 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  %1424 = %1422.3;
  (%1423, %1424, meta[relay.Constant][82] /* ty=Tensor[(3, 84), float32] */, meta[relay.Constant][83] /* ty=Tensor[(4), float64] */)
}

def @func_4131() -> Tensor[(9, 3, 4), float32] {
  %1425 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1425.0
}

def @func_5831() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) {
  %1426 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %1427 = @func_3305() /* ty=Tensor[(9, 3, 4), float32] */;
  %1428 = %1426.1;
  (%1427, %1428)
}

def @func_8320() -> (Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) {
  %1429 = @func_6859() /* ty=(Tensor[(4, 1), float64],) */;
  %1430 = @func_6539() /* ty=(Tensor[(?, 2, 2), float32],) */;
  %1431 = %1429.0;
  %1432 = %1430.0;
  %1433 = @func_4627() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%1431, %1432, %1433)
}

def @func_11259() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %1434 = @func_8466() /* ty=Tensor[(9, 3, 4), float32] */;
  %1435 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
  (%1434, %1435)
}

def @func_14899(%var_14893: float32) -> (Tensor[(15, 1, 16), float32],) {
  %1436 = cast(%var_14893, dtype="float32") /* ty=float32 */;
  %1437 = cast(meta[relay.Constant][84] /* ty=Tensor[(15, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
  %1438 = divide(%1436, %1437) /* ty=Tensor[(15, 1, 16), float32] */;
  (%1438,)
}

def @func_1740() -> (Tensor[(9, 3, 4), float32],) {
  %1439 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1440 = %1439.1;
  (%1440,)
}

def @func_3539() -> Tensor[(9, 3, 4), float32] {
  @func_3381() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_4648() -> (Tensor[(4, 1), float64],) {
  %1441 = @func_3405() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1442 = %1441.1;
  (%1442,)
}

def @func_4489(%var_4477: Tensor[(9, 3, 4), float64]) -> Tensor[(9, 3, 4), uint8] {
  %1443 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %1444 = cast(%var_4477, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %1445 = shape_of(%1443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1446 = cast(%1443, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %1447 = dyn.reshape(%1444, %1445, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%1446, %1447) /* ty=Tensor[(9, 3, 4), uint8] */
}

def @func_9977(%var_9942: Tensor[(45), float32]) -> (Tensor[(4, 1), float64], Tensor[(288), uint64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %1448 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %1449 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %1450 = cast(meta[relay.Constant][85] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %1451 = reshape(%1450, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %1452 = @func_3142(%1451) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %1453 = cast(%var_9942, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1454 = reshape(%1453, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
  %1455 = @func_2326(%1454) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
  %1456 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %1457 = %1448.0;
  %1458 = %1449.2;
  %1459 = %1452.0;
  %1460 = %1455.1;
  %1461 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  %1462 = %1456.1;
  (%1457, %1458, %1459, meta[relay.Constant][85] /* ty=Tensor[(1620), uint16] */, %1460, %var_9942, %1461, %1462)
}

def @func_15460() -> (Tensor[(9, 3, 4), float32],) {
  %1463 = @func_12050() /* ty=Tensor[(9, 3, 4), float32] */;
  (%1463,)
}

def @func_10706(%var_10685: Tensor[(15, 12, 9), uint16]) -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), int16], Tensor[(15, 12, 9), float64]) {
  %1464 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1465 = @func_9875() /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %1466 = %1465.0;
  %1467 = cast(%1466, dtype="int16") /* ty=Tensor[(15, 12, 9), int16] */;
  %1468 = shape_of(%var_10685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1469 = cast(%var_10685, dtype="int16") /* ty=Tensor[(15, 12, 9), int16] */;
  %1470 = dyn.reshape(%1467, %1468, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1471 = cast(%var_10685, dtype="int64") /* ty=Tensor[(15, 12, 9), int64] */;
  %1472 = shape_of(%1466, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1473 = cast(%1466, dtype="int64") /* ty=Tensor[(15, 12, 9), int64] */;
  %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1475 = add(%1473, %1474) /* ty=Tensor[(15, 12, 9), int64] */;
  %1476 = cast(%1475, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
  %1477 = %1464.0;
  %1478 = bitwise_or(%1469, %1470) /* ty=Tensor[(15, 12, 9), int16] */;
  %1479 = cos(%1476) /* ty=Tensor[(15, 12, 9), float64] */;
  (%1477, %1478, %1479)
}

def @func_12914(%var_12852: Tensor[(208), float32], %var_12853: Tensor[(1, 2080), float64]) -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1, 2080), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(208), float32], Tensor[(45), float32], Tensor[(4, 1), float64]) {
  %1480 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %1481 = cast(%var_12852, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1482 = cast(%var_12853, dtype="float64") /* ty=Tensor[(1, 2080), float64] */;
  %1483 = %1480.3;
  %1484 = cast(%1483, dtype="uint64") /* ty=Tensor[(3, 6, 16), uint64] */;
  %1485 = reshape(%1481, newshape=[16, 1, 13]) /* ty=Tensor[(16, 1, 13), float32] */;
  %1486 = reshape(%1482, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float64] */;
  %1487 = reshape(%1484, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1488 = @func_3881(%1485, %1486, %1487) /* ty=(Tensor[(16, 10, 13), int16], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %1489 = cast(meta[relay.Constant][86] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1490 = reshape(%1489, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %1491 = @func_5534(%1490) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) */;
  %1492 = @func_8320() /* ty=(Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) */;
  %1493 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1494 = @func_12135() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1495 = cast(%var_12852, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1496 = cast(%1483, dtype="uint64") /* ty=Tensor[(3, 6, 16), uint64] */;
  %1497 = reshape(%1496, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1498 = @func_2531(%1497) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %1499 = @func_11019() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1500 = %1488.2;
  %1501 = %1491.0;
  %1502 = %1492.1;
  %1503 = %1493.0;
  %1504 = %1494.0;
  %1505 = cos(%1495) /* ty=Tensor[(208), float32] */;
  %1506 = %1498.1;
  %1507 = %1499.1;
  (%1483, %1500, %var_12853, %1501, meta[relay.Constant][86] /* ty=Tensor[(45), float32] */, %1502, %1503, %1504, %1505, %1506, %1507)
}

def @func_16468() -> (Tensor[(2, 16, ?), bool],) {
  %1508 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1509 = %1508.1;
  (%1509,)
}

def @func_10839() -> (Tensor[(45), float32],) {
  %1510 = @func_9027() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) */;
  %1511 = %1510.1;
  (%1511,)
}

def @func_16751() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32]) {
  %1512 = @func_15129() /* ty=(uint64, Tensor[(9, 3, 4), float32]) */;
  %1513 = @func_14891() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %1514 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
  %1515 = %1512.1;
  %1516 = %1513.1;
  %1517 = %1514.0;
  (%1515, %1516, %1517)
}

def @func_15090() -> Tensor[(4, 1), float64] {
  %1518 = @func_9406() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1518.0
}

def @func_9065() -> Tensor[(288), uint64] {
  %1519 = @func_5301() /* ty=(Tensor[(288), uint64], Tensor[(9, 3, 4), bool]) */;
  %1519.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_4999() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) {
  @func_4997() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) */
}

def @func_7126() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  @func_7124() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) */
}

def @func_14002() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), float32]) {
  %5 = fn () -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), float32]) {
    %0 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
    %1 = @func_8358() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %2 = %0.4;
    %3 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
    %4 = %1.0;
    (%2, %3, %4)
  };
  %5() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_10187(%var_10185: Tensor[(45), float32], %var_10186: Tensor[(32), uint64]) -> (uint64, Tensor[(?, 2, 2), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(32), uint64], Tensor[(9, 3, 4), uint64]) {
  %21 = fn (%var_10146: Tensor[(45), float32], %var_10159: Tensor[(32), uint64]) -> (uint64, Tensor[(?, 2, 2), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(32), uint64], Tensor[(9, 3, 4), uint64]) {
    %6 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
    %7 = cast(%var_10146, dtype="float32") /* ty=Tensor[(45), float32] */;
    %8 = reshape(%7, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
    %9 = @func_2326(%8) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
    %10 = %6.3;
    %11 = cast(%10, dtype="uint64") /* ty=uint64 */;
    %12 = cast(%var_10159, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %13 = reshape(%11, newshape=[]) /* ty=uint64 */;
    %14 = reshape(%12, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %15 = @func_9220(%13, %14) /* ty=(Tensor[(3, 11, 9), float64], Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64]) */;
    %16 = @func_9660() /* ty=(Tensor[(9, 3, 4), uint64],) */;
    %17 = %9.6;
    %18 = @func_4131() /* ty=Tensor[(9, 3, 4), float32] */;
    %19 = %15.1;
    %20 = %16.0;
    (%10, %17, %var_10146, %18, %19, %var_10159, %20)
  };
  %21(%var_10185, %var_10186) /* ty=(uint64, Tensor[(?, 2, 2), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(32), uint64], Tensor[(9, 3, 4), uint64]) */
}

def @func_5161(%var_5160: uint64) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(32), uint64], uint64, Tensor[(4, 8), uint64]) {
  %32 = fn (%var_5156: uint64) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(32), uint64], uint64, Tensor[(4, 8), uint64]) {
    %22 = @func_4594() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
    %23 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
    %24 = cast(%var_5156, dtype="uint64") /* ty=uint64 */;
    %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 8), uint64] */, dtype="uint64") /* ty=Tensor[(4, 8), uint64] */;
    %26 = reshape(%24, newshape=[]) /* ty=uint64 */;
    %27 = reshape(%25, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %28 = @func_2855(%26, %27) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
    %29 = %22.1;
    %30 = %23.0;
    %31 = %28.6;
    (%29, %30, %31, %var_5156, meta[relay.Constant][0] /* ty=Tensor[(4, 8), uint64] */)
  };
  %32(%var_5160) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(32), uint64], uint64, Tensor[(4, 8), uint64]) */
}

def @func_11693(%var_11679: Tensor[(1200), float64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(1200), float64], Tensor[(1200), float64]) {
  %33 = @func_9539() /* ty=(Tensor[(4, 1), float64],) */;
  %34 = cast(%var_11679, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %35 = reshape(%34, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %36 = @func_5810(%35) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
  %37 = %33.0;
  %38 = @func_10577() /* ty=Tensor[(9, 3, 4), uint64] */;
  %39 = %36.5;
  (%37, %38, %39, %var_11679)
}

def @func_10321(%var_10318: Tensor[(7, 234), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 14, 13), float32], Tensor[(7, 234), float32]) {
  %40 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %41 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
  %42 = cast(%var_10318, dtype="float32") /* ty=Tensor[(7, 234), float32] */;
  %43 = reshape(%42, newshape=[9, 14, 13]) /* ty=Tensor[(9, 14, 13), float32] */;
  %44 = %40.0;
  %45 = %41.1;
  %46 = @func_4636(%43) /* ty=Tensor[(9, 14, 13), float32] */;
  (%44, %45, %46, %var_10318)
}

def @func_132(%var_131: Tensor[(15, 3, 1), float32]) -> (Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) {
  %51 = fn (%var_120: Tensor[(15, 3, 1), float32]) -> (Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) {
    %47 = cast(%var_120, dtype="float32") /* ty=Tensor[(15, 3, 1), float32] */;
    %48 = cast(%var_120, dtype="float64") /* ty=Tensor[(15, 3, 1), float64] */;
    %49 = rsqrt(%47) /* ty=Tensor[(15, 3, 1), float32] */;
    %50 = sinh(%48) /* ty=Tensor[(15, 3, 1), float64] */;
    (%49, %50)
  };
  %51(%var_131) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */
}

def @func_16288(%var_16287: Tensor[(15, 2, 14), float32]) -> (Tensor[(15, 2, 14), float32],) {
  %54 = fn (%var_16276: Tensor[(15, 2, 14), float32]) -> (Tensor[(15, 2, 14), float32],) {
    %52 = cast(%var_16276, dtype="float32") /* ty=Tensor[(15, 2, 14), float32] */;
    %53 = sin(%52) /* ty=Tensor[(15, 2, 14), float32] */;
    (%53,)
  };
  %54(%var_16287) /* ty=(Tensor[(15, 2, 14), float32],) */
}

def @func_14234() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %55 = @func_4875() /* ty=Tensor[(4, 1), float64] */;
  %56 = @func_7168() /* ty=Tensor[(4, 1), float64] */;
  (%55, %56)
}

def @func_6745() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) {
  %60 = fn () -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) {
    %57 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
    %58 = %57.1;
    %59 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
    (%58, %59)
  };
  %60() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */
}

def @func_12971(%var_12970: Tensor[(1, 480), float64]) -> (Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(5, 6, 16), float64], Tensor[(1, 480), float64]) {
  %68 = fn (%var_12965: Tensor[(1, 480), float64]) -> (Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(5, 6, 16), float64], Tensor[(1, 480), float64]) {
    %61 = @func_10839() /* ty=(Tensor[(45), float32],) */;
    %62 = cast(%var_12965, dtype="float64") /* ty=Tensor[(1, 480), float64] */;
    %63 = reshape(%62, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), float64] */;
    %64 = @func_5627(%63) /* ty=(Tensor[(5, 6, 16), float64],) */;
    %65 = %61.0;
    %66 = @func_11073() /* ty=Tensor[(9, 3, 4), float32] */;
    %67 = %64.0;
    (%65, %66, %67, %var_12965)
  };
  %68(%var_12970) /* ty=(Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(5, 6, 16), float64], Tensor[(1, 480), float64]) */
}

def @func_1513() -> (Tensor[(9, 3, 4), float32],) {
  %69 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %70 = %69.1;
  (%70,)
}

def @func_15200(%var_15198: Tensor[(288), uint64]) -> (Tensor[(4, 1), float64], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(45), float32]) {
  @func_15197(%var_15198) /* ty=(Tensor[(4, 1), float64], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(45), float32]) */
}

def @func_15518(%var_15516: Tensor[(6, 8, 5), uint16], %var_15517: Tensor[(6, 8, 5), uint16]) -> (Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(4, 1), float64]) {
  %84 = fn (%var_15475: Tensor[(6, 8, 5), uint16], %var_15476: Tensor[(6, 8, 5), uint16]) -> (Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(4, 1), float64]) {
    %71 = cast(%var_15476, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
    %72 = shape_of(%var_15475, dtype="int32") /* ty=Tensor[(3), int32] */;
    %73 = cast(%var_15475, dtype="uint16") /* ty=Tensor[(6, 8, 5), uint16] */;
    %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %75 = cast(%var_15475, dtype="float64") /* ty=Tensor[(6, 8, 5), float64] */;
    %76 = cast(meta[relay.Constant][1] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
    %77 = reshape(%76, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
    %78 = @func_3142(%77) /* ty=(Tensor[(15, 12, 9), uint16],) */;
    %79 = @func_7449() /* ty=(Tensor[(4, 1), float64],) */;
    %80 = add(%73, %74) /* ty=Tensor[(6, 8, 5), uint16] */;
    %81 = acos(%75) /* ty=Tensor[(6, 8, 5), float64] */;
    %82 = %78.0;
    %83 = %79.0;
    (%80, %81, %82, meta[relay.Constant][1] /* ty=Tensor[(1620), uint16] */, %83)
  };
  %84(%var_15516, %var_15517) /* ty=(Tensor[(6, 8, 5), uint16], Tensor[(6, 8, 5), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(4, 1), float64]) */
}

def @func_4310() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) {
  %85 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %86 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %87 = %85.1;
  %88 = %86.3;
  (%87, %88)
}

def @func_4946() -> (Tensor[(9, 3, 4), uint64],) {
  @func_4944() /* ty=(Tensor[(9, 3, 4), uint64],) */
}

def @func_11793() -> Tensor[(9, 3, 4), float32] {
  %90 = fn () -> Tensor[(9, 3, 4), float32] {
    %89 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
    %89.1
  };
  %90() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_7653(%var_7627: Tensor[(1452), float64], %var_7640: uint64) -> (Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) {
  %91 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %92 = cast(%var_7627, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %93 = reshape(%92, newshape=[11, 11, 12]) /* ty=Tensor[(11, 11, 12), float64] */;
  %94 = @func_7600(%93) /* ty=(Tensor[(11, 11, 12), float64],) */;
  %95 = %94.0;
  %96 = cast(%var_7627, dtype="float32") /* ty=Tensor[(1452), float32] */;
  %97 = shape_of(%95, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%95, dtype="float32") /* ty=Tensor[(11, 11, 12), float32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %100 = cast(%var_7627, dtype="float32") /* ty=Tensor[(1452), float32] */;
  %101 = cast(%var_7640, dtype="uint64") /* ty=uint64 */;
  %102 = reshape(%101, newshape=[]) /* ty=uint64 */;
  %103 = @func_5159(%102) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(32), uint64], uint64, Tensor[(4, 8), uint64]) */;
  %104 = %91.0;
  %105 = divide(%98, %99) /* ty=Tensor[(11, 11, 12), float32] */;
  %106 = tan(%100) /* ty=Tensor[(1452), float32] */;
  %107 = %103.3;
  (%104, %105, %106, %107, %var_7640)
}

def @func_11516(%var_11491: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64], Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(1, 80), float64]) {
  %108 = @func_9027() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) */;
  %109 = cast(meta[relay.Constant][2] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %110 = cast(%var_11491, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %111 = reshape(%109, newshape=[]) /* ty=uint64 */;
  %112 = reshape(%110, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %113 = @func_2672(%111, %112) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %114 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %115 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 80), float64] */, dtype="float64") /* ty=Tensor[(1, 80), float64] */;
  %116 = reshape(%115, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), float64] */;
  %117 = @func_3610(%116) /* ty=(Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) */;
  %118 = %108.0;
  %119 = %113.2;
  %120 = %114.0;
  %121 = %117.1;
  (%118, %119, meta[relay.Constant][2] /* ty=uint64 */, %var_11491, %120, %121, meta[relay.Constant][3] /* ty=Tensor[(1, 80), float64] */)
}

def @func_1308() -> Tensor[(9, 3, 4), bool] {
  @func_1306() /* ty=Tensor[(9, 3, 4), bool] */
}

def @func_7702(%var_7701: Tensor[(7, 6, 4), float64]) -> Tensor[(7, 6, 4), float64] {
  %126 = fn (%var_7681: Tensor[(7, 6, 4), float64]) -> Tensor[(7, 6, 4), float64] {
    %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(7, 6, 4), float64] */, dtype="float64") /* ty=Tensor[(7, 6, 4), float64] */;
    %123 = shape_of(%var_7681, dtype="int32") /* ty=Tensor[(3), int32] */;
    %124 = cast(%var_7681, dtype="float64") /* ty=Tensor[(7, 6, 4), float64] */;
    %125 = dyn.reshape(%122, %123, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%124, %125) /* ty=Tensor[(7, 6, 4), float64] */
  };
  %126(%var_7701) /* ty=Tensor[(7, 6, 4), float64] */
}

def @func_11714() -> (Tensor[(9, 3, 4), bool],) {
  @func_11712() /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_13147() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  @func_13145() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_3078() -> Tensor[(9, 3, 4), uint64] {
  %127 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %127.0
}

def @func_6188() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) {
  %128 = @func_4562() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %129 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %130 = %128.0;
  %131 = %129.0;
  (%130, %131)
}

def @func_15091() -> Tensor[(4, 1), float64] {
  %133 = fn () -> Tensor[(4, 1), float64] {
    %132 = @func_9406() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
    %132.0
  };
  %133() /* ty=Tensor[(4, 1), float64] */
}

def @func_10777(%var_10776: Tensor[(16, 4, 5), float32]) -> Tensor[(16, 4, 5), bool] {
  %138 = fn (%var_10757: Tensor[(16, 4, 5), float32]) -> Tensor[(16, 4, 5), bool] {
    %134 = cast(meta[relay.Constant][5] /* ty=Tensor[(16, 4, 5), float32] */, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
    %135 = shape_of(%var_10757, dtype="int32") /* ty=Tensor[(3), int32] */;
    %136 = cast(%var_10757, dtype="bool") /* ty=Tensor[(16, 4, 5), bool] */;
    %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%136, %137) /* ty=Tensor[(16, 4, 5), bool] */
  };
  %138(%var_10776) /* ty=Tensor[(16, 4, 5), bool] */
}

def @func_1251(%var_1249: Tensor[(4, 1), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) {
  @func_1248(%var_1249) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */
}

def @func_14794(%var_14792: Tensor[(1638), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 14, 13), float32], Tensor[(1638), float32]) {
  @func_14791(%var_14792) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 14, 13), float32], Tensor[(1638), float32]) */
}

def @func_17715() -> Tensor[(9, 3, 4), bool] {
  %140 = fn () -> Tensor[(9, 3, 4), bool] {
    %139 = @func_8134() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %139.0
  };
  %140() /* ty=Tensor[(9, 3, 4), bool] */
}

def @func_2045(%var_2044: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
  %160 = fn (%var_2023: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
    %141 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %142 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
    %143 = cast(%142, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
    %144 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
    %145 = cast(meta[relay.Constant][6] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
    %146 = reshape(%145, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
    %147 = @func_39(%146) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %148 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %149 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
    %150 = cast(%var_2023, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %151 = reshape(%150, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
    %152 = @func_1782(%151) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
    %153 = %141.0;
    %154 = acosh(%143) /* ty=Tensor[(9, 3, 4), float32] */;
    %155 = %144.0;
    %156 = %147.1;
    %157 = %148.0;
    %158 = %149.1;
    %159 = %152.0;
    (%153, %154, %155, %156, meta[relay.Constant][6] /* ty=Tensor[(4), float64] */, %157, %158, %159, %var_2023)
  };
  %160(%var_2044) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */
}

def @func_16825() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %161 = @func_16527() /* ty=(Tensor[(4, 1), float64],) */;
  %162 = %161.0;
  %163 = @func_11073() /* ty=Tensor[(9, 3, 4), float32] */;
  (%162, %163)
}

def @func_17390(%var_17339: Tensor[(32), uint64], %var_17355: Tensor[(60, 2), uint16]) -> (Tensor[(9, 3, 4), bool], Tensor[(1, 15, 8), uint16], Tensor[(60, 2), uint16], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(4, 32), float32]) {
  %164 = cast(%var_17339, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %165 = reshape(%164, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %166 = @func_3952(%165) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) */;
  %167 = cast(%var_17355, dtype="uint16") /* ty=Tensor[(60, 2), uint16] */;
  %168 = reshape(%167, newshape=[1, 15, 8]) /* ty=Tensor[(1, 15, 8), uint16] */;
  %169 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 1620), uint16] */, dtype="uint16") /* ty=Tensor[(1, 1620), uint16] */;
  %170 = reshape(%169, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %171 = @func_3142(%170) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %172 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
  %173 = %172.0;
  %174 = cast(%173, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %175 = reshape(%174, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %176 = @func_1460(%175) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) */;
  %177 = cast(%var_17339, dtype="uint32") /* ty=Tensor[(32), uint32] */;
  %178 = cast(%173, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
  %179 = left_shift(%177, %178) /* ty=Tensor[(4, 32), uint32] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(4, 32), float32] */;
  %181 = cast(%var_17339, dtype="float32") /* ty=Tensor[(32), float32] */;
  %182 = %166.0;
  %183 = @func_14854(%168) /* ty=Tensor[(1, 15, 8), uint16] */;
  %184 = %171.0;
  %185 = %176.1;
  %186 = divide(%180, %181) /* ty=Tensor[(4, 32), float32] */;
  (%182, %183, %var_17355, %184, meta[relay.Constant][7] /* ty=Tensor[(1, 1620), uint16] */, %185, %186)
}

def @func_4087(%var_4085: Tensor[(288), uint64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(15, 3, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(15, 3, 288), int16]) {
  @func_4084(%var_4085) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(15, 3, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(15, 3, 288), int16]) */
}

def @func_16802() -> (Tensor[(9, 3, 4), float64],) {
  %187 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  (%187,)
}

def @func_41(%var_40: Tensor[(1, 2, 2), float64]) -> (Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
  %202 = fn (%var_3: Tensor[(1, 2, 2), float64]) -> (Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) {
    %188 = cast(%var_3, dtype="float64") /* ty=Tensor[(1, 2, 2), float64] */;
    %189 = sin(%188) /* ty=Tensor[(1, 2, 2), float64] */;
    %190 = cast(%189, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
    %191 = shape_of(%var_3, dtype="int32") /* ty=Tensor[(3), int32] */;
    %192 = cast(%var_3, dtype="int16") /* ty=Tensor[(1, 2, 2), int16] */;
    %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %194 = minimum(%192, %193) /* ty=Tensor[(?, 2, 2), int16] */;
    %195 = cast(%var_3, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
    %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%194, dtype="float32") /* ty=Tensor[(?, 2, 2), float32] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %199 = cast(%189, dtype="float32") /* ty=Tensor[(1, 2, 2), float32] */;
    %200 = floor_divide(%197, %198) /* ty=Tensor[(?, 2, 2), float32] */;
    %201 = atan(%199) /* ty=Tensor[(1, 2, 2), float32] */;
    (%200, %201)
  };
  %202(%var_40) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */
}

def @func_1876(%var_1875: Tensor[(45), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
  %217 = fn (%var_1865: Tensor[(45), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
    %203 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
    %204 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %205 = cast(%var_1865, dtype="float32") /* ty=Tensor[(45), float32] */;
    %206 = reshape(%205, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
    %207 = @func_130(%206) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
    %208 = %203.0;
    %209 = cast(%208, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
    %210 = reshape(%209, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
    %211 = @func_1248(%210) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
    %212 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %213 = %204.0;
    %214 = %207.0;
    %215 = %211.0;
    %216 = %212.0;
    (%208, %213, %214, %var_1865, %215, %216)
  };
  %217(%var_1875) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */
}

def @func_6896() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %218 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %219 = %218.0;
  %220 = cast(%219, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %221 = reshape(%220, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %222 = @func_1248(%221) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %223 = %222.2;
  (%219, %223)
}

def @func_15942() -> (Tensor[(9, 3, 4), bool],) {
  %226 = fn () -> (Tensor[(9, 3, 4), bool],) {
    %224 = @func_12493() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(176), float32], Tensor[(728), float32]) */;
    %225 = %224.1;
    (%225,)
  };
  %226() /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_4959() -> Tensor[(4, 1), float64] {
  %228 = fn () -> Tensor[(4, 1), float64] {
    %227 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
    %227.0
  };
  %228() /* ty=Tensor[(4, 1), float64] */
}

def @func_16338() -> (Tensor[(4, 1), float64],) {
  %229 = @func_15090() /* ty=Tensor[(4, 1), float64] */;
  (%229,)
}

def @func_12106() -> (Tensor[(3, 84), float32],) {
  %231 = fn () -> (Tensor[(3, 84), float32],) {
    %230 = @func_8685() /* ty=Tensor[(3, 84), float32] */;
    (%230,)
  };
  %231() /* ty=(Tensor[(3, 84), float32],) */
}

def @func_13599() -> (Tensor[(9, 3, 4), uint64], Tensor[(2, 32), float32], Tensor[(2, 32), float32]) {
  %232 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %233 = @func_11114() /* ty=Tensor[(1, 32), uint64] */;
  %234 = cast(%233, dtype="uint8") /* ty=Tensor[(1, 32), uint8] */;
  %235 = cast(meta[relay.Constant][8] /* ty=Tensor[(2, 32), uint64] */, dtype="uint8") /* ty=Tensor[(2, 32), uint8] */;
  %236 = add(%234, %235) /* ty=Tensor[(2, 32), uint8] */;
  %237 = cast(%236, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %238 = cast(%236, dtype="float32") /* ty=Tensor[(2, 32), float32] */;
  %239 = %232.4;
  %240 = sqrt(%237) /* ty=Tensor[(2, 32), float32] */;
  %241 = erf(%238) /* ty=Tensor[(2, 32), float32] */;
  (%239, %240, %241)
}

def @func_13418() -> Tensor[(4, 1), float64] {
  @func_13416() /* ty=Tensor[(4, 1), float64] */
}

def @func_2953() -> (Tensor[(9, 3, 4), uint64],) {
  %242 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %243 = %242.1;
  (%243,)
}

def @func_9660() -> (Tensor[(9, 3, 4), uint64],) {
  %244 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %245 = %244.4;
  (%245,)
}

def @func_10279() -> Tensor[(9, 3, 4), uint64] {
  @func_10277() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_11911() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64]) {
  %250 = fn () -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64]) {
    %246 = @func_4997() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) */;
    %247 = @func_8838() /* ty=Tensor[(4, 1), float64] */;
    %248 = %246.1;
    %249 = @func_8778() /* ty=Tensor[(9, 3, 4), uint64] */;
    (%247, %248, %249)
  };
  %250() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64]) */
}

def @func_5773() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
  %251 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %252 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %253 = %251.0;
  %254 = %252.5;
  %255 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  (%253, %254, %255)
}

def @func_15556(%var_15555: Tensor[(576), float64]) -> (Tensor[(3, 84), float32], Tensor[(9, 8, 8), float64], Tensor[(576), float64], Tensor[(9, 3, 4), float32]) {
  %264 = fn (%var_15550: Tensor[(576), float64]) -> (Tensor[(3, 84), float32], Tensor[(9, 8, 8), float64], Tensor[(576), float64], Tensor[(9, 3, 4), float32]) {
    %256 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
    %257 = cast(%var_15550, dtype="float64") /* ty=Tensor[(576), float64] */;
    %258 = reshape(%257, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
    %259 = @func_5924(%258) /* ty=(Tensor[(9, 8, 8), float64],) */;
    %260 = @func_4594() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
    %261 = %256.2;
    %262 = %259.0;
    %263 = %260.1;
    (%261, %262, %var_15550, %263)
  };
  %264(%var_15555) /* ty=(Tensor[(3, 84), float32], Tensor[(9, 8, 8), float64], Tensor[(576), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_1515() -> (Tensor[(9, 3, 4), float32],) {
  @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_14856(%var_14855: Tensor[(1, 15, 8), uint16]) -> Tensor[(1, 15, 8), uint16] {
  %267 = fn (%var_14823: Tensor[(1, 15, 8), uint16]) -> Tensor[(1, 15, 8), uint16] {
    %265 = cast(meta[relay.Constant][9] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %266 = cast(%var_14823, dtype="uint16") /* ty=Tensor[(1, 15, 8), uint16] */;
    subtract(%265, %266) /* ty=Tensor[(1, 15, 8), uint16] */
  };
  %267(%var_14855) /* ty=Tensor[(1, 15, 8), uint16] */
}

def @func_2858(%var_2856: uint64, %var_2857: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) {
  %282 = fn (%var_2849: uint64, %var_2850: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) {
    %268 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %269 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
    %270 = cast(meta[relay.Constant][10] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
    %271 = reshape(%270, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
    %272 = @func_1248(%271) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
    %273 = cast(%var_2849, dtype="uint64") /* ty=uint64 */;
    %274 = cast(%var_2850, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %275 = reshape(%273, newshape=[]) /* ty=uint64 */;
    %276 = reshape(%274, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %277 = @func_2672(%275, %276) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
    %278 = %268.0;
    %279 = %269.0;
    %280 = %272.0;
    %281 = %277.3;
    (%278, %279, %280, meta[relay.Constant][10] /* ty=Tensor[(4), float64] */, %281, %var_2849, %var_2850)
  };
  %282(%var_2856, %var_2857) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */
}

def @func_4997() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) {
  %283 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %284 = %283.0;
  %285 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  (%284, %285)
}

def @func_16833() -> (Tensor[(9, 3, 4), float32],) {
  %288 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %286 = @func_9557() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %287 = %286.0;
    (%287,)
  };
  %288() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_3383() -> Tensor[(9, 3, 4), float32] {
  @func_3381() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_13690(%var_13674: Tensor[(1452), float64], %var_13675: uint64) -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32], Tensor[(1452), float32], Tensor[(1452), float64], uint64, Tensor[(4, 288), bool]) {
  %289 = cast(meta[relay.Constant][11] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %290 = reshape(%289, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %291 = @func_3142(%290) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %292 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %293 = reshape(%292, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %294 = @func_3127(%293) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %295 = cast(%var_13674, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %296 = cast(%var_13675, dtype="uint64") /* ty=uint64 */;
  %297 = reshape(%295, newshape=[1452]) /* ty=Tensor[(1452), float64] */;
  %298 = reshape(%296, newshape=[]) /* ty=uint64 */;
  %299 = @func_7653(%297, %298) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) */;
  %300 = @func_8934() /* ty=Tensor[(4, 1), float64] */;
  %301 = cast(meta[relay.Constant][12] /* ty=Tensor[(288), uint64] */, dtype="bool") /* ty=Tensor[(288), bool] */;
  %302 = cast(%300, dtype="bool") /* ty=Tensor[(4, 1), bool] */;
  %303 = @func_11733() /* ty=Tensor[(4, 1), float64] */;
  %304 = @func_4875() /* ty=Tensor[(4, 1), float64] */;
  %305 = %291.0;
  %306 = %294.1;
  %307 = %299.2;
  %308 = greater(%301, %302) /* ty=Tensor[(4, 288), bool] */;
  (%303, %304, %305, meta[relay.Constant][11] /* ty=Tensor[(1620), uint16] */, %306, %307, %var_13674, %var_13675, %308)
}

def @func_8687() -> Tensor[(3, 84), float32] {
  @func_8685() /* ty=Tensor[(3, 84), float32] */
}

def @func_6082() -> (Tensor[(4, 1), float64],) {
  %309 = @func_5390() /* ty=(Tensor[(4, 1), float64],) */;
  %310 = %309.0;
  (%310,)
}

def @func_7870() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %314 = fn () -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
    %311 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
    %312 = %311.0;
    %313 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
    (%312, %313)
  };
  %314() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_6822() -> (Tensor[(9, 3, 4), float32],) {
  @func_6820() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_8867(%var_8865: Tensor[(9, 12, 3), int32]) -> Tensor[(9, 12, 3), bool] {
  @func_8864(%var_8865) /* ty=Tensor[(9, 12, 3), bool] */
}

def @func_17496() -> Tensor[(9, 3, 4), bool] {
  %315 = @func_15216() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %315.0
}

def @func_11735() -> Tensor[(4, 1), float64] {
  @func_11733() /* ty=Tensor[(4, 1), float64] */
}

def @func_4841() -> (Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) {
  %316 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %317 = cast(meta[relay.Constant][13] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %318 = reshape(%317, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %319 = @func_130(%318) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %320 = %316.1;
  %321 = %319.0;
  (%320, %321, meta[relay.Constant][13] /* ty=Tensor[(45), float32] */)
}

def @func_13318(%var_13311: Tensor[(4, 5, 11), int32]) -> (Tensor[(4, 5, 11), int32],) {
  %322 = cast(meta[relay.Constant][14] /* ty=Tensor[(4, 5, 11), int32] */, dtype="int32") /* ty=Tensor[(4, 5, 11), int32] */;
  %323 = shape_of(%var_13311, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%var_13311, dtype="int32") /* ty=Tensor[(4, 5, 11), int32] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %326 = logical_xor(%324, %325) /* ty=Tensor[(4, 5, 11), int32] */;
  (%326,)
}

def @func_15261() -> (Tensor[(4, 1), float64],) {
  @func_15259() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_16827() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  @func_16825() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_16395() -> (Tensor[(4, 1), float64], Tensor[(3, 84), float32]) {
  @func_16393() /* ty=(Tensor[(4, 1), float64], Tensor[(3, 84), float32]) */
}

def @func_9065() -> Tensor[(288), uint64] {
  %327 = @func_5301() /* ty=(Tensor[(288), uint64], Tensor[(9, 3, 4), bool]) */;
  %327.0
}

def @func_3460() -> (Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  %328 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %329 = cast(meta[relay.Constant][15] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %330 = cast(meta[relay.Constant][16] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %331 = reshape(%329, newshape=[]) /* ty=uint64 */;
  %332 = reshape(%330, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %333 = @func_2407(%331, %332) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %334 = %328.6;
  %335 = %333.0;
  (%334, %335, meta[relay.Constant][15] /* ty=uint64 */, meta[relay.Constant][16] /* ty=Tensor[(32), uint64] */)
}

def @func_1784(%var_1783: Tensor[(4, 72), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) {
  %350 = fn (%var_1767: Tensor[(4, 72), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) {
    %336 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %337 = cast(meta[relay.Constant][17] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
    %338 = reshape(%337, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
    %339 = @func_1248(%338) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
    %340 = cast(meta[relay.Constant][18] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %341 = cast(%var_1767, dtype="uint64") /* ty=Tensor[(4, 72), uint64] */;
    %342 = cast(meta[relay.Constant][19] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
    %343 = reshape(%340, newshape=[]) /* ty=uint64 */;
    %344 = reshape(%341, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
    %345 = reshape(%342, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
    %346 = @func_954(%343, %344, %345) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
    %347 = %336.0;
    %348 = %339.1;
    %349 = %346.0;
    (%347, %348, meta[relay.Constant][17] /* ty=Tensor[(4), float64] */, %349, meta[relay.Constant][18] /* ty=uint64 */, %var_1767, meta[relay.Constant][19] /* ty=Tensor[(45), float32] */)
  };
  %350(%var_1783) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */
}

def @func_14442() -> Tensor[(9, 3, 4), float32] {
  @func_14440() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_17498() -> Tensor[(9, 3, 4), bool] {
  @func_17496() /* ty=Tensor[(9, 3, 4), bool] */
}

def @func_12582(%var_12580: Tensor[(1452), float64], %var_12581: Tensor[(1452), float64]) -> (Tensor[(4, 1), float64], uint64, uint64, Tensor[(1452), bool]) {
  @func_12578(%var_12580, %var_12581) /* ty=(Tensor[(4, 1), float64], uint64, uint64, Tensor[(1452), bool]) */
}

def @func_13416() -> Tensor[(4, 1), float64] {
  @func_8838() /* ty=Tensor[(4, 1), float64] */
}

def @func_16601() -> (Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) {
  %351 = cast(meta[relay.Constant][20] /* ty=Tensor[(728), bool] */, dtype="bool") /* ty=Tensor[(728), bool] */;
  %352 = reshape(%351, newshape=[728]) /* ty=Tensor[(728), bool] */;
  %353 = @func_11416(%352) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) */;
  %354 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %355 = %353.1;
  (%354, %355, meta[relay.Constant][20] /* ty=Tensor[(728), bool] */)
}

def @func_4151() -> Tensor[(9, 3, 4), uint64] {
  @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_3022() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %360 = fn () -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
    %356 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
    %357 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %358 = %356.0;
    %359 = %357.0;
    (%358, %359)
  };
  %360() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_15197(%var_15194: Tensor[(288), uint64]) -> (Tensor[(4, 1), float64], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(45), float32]) {
  %361 = @func_6423() /* ty=(Tensor[(4, 1), float64],) */;
  %362 = cast(%var_15194, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %363 = cast(meta[relay.Constant][21] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %364 = reshape(%362, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %365 = reshape(%363, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %366 = @func_13780(%364, %365) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45, 1), float32], uint64, Tensor[(288), uint64], Tensor[(45), float32], Tensor[(4, 1), float64]) */;
  %367 = %361.0;
  %368 = %366.4;
  (%367, %368, %var_15194, meta[relay.Constant][21] /* ty=Tensor[(45), float32] */)
}

def @func_3540() -> Tensor[(9, 3, 4), float32] {
  %369 = fn () -> Tensor[(9, 3, 4), float32] {
    @func_3381() /* ty=Tensor[(9, 3, 4), float32] */
  };
  %369() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_8057(%var_8054: uint64, %var_8055: Tensor[(4), float64], %var_8056: Tensor[(336), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(4, 1), float64], Tensor[(3, 7, 16), float32], Tensor[(336), float32]) {
  @func_8052(%var_8054, %var_8055, %var_8056) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(4, 1), float64], Tensor[(3, 7, 16), float32], Tensor[(336), float32]) */
}

def @func_6305() -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) {
  %370 = cast(meta[relay.Constant][22] /* ty=Tensor[(3, 84), float32] */, dtype="float32") /* ty=Tensor[(3, 84), float32] */;
  %371 = cast(meta[relay.Constant][23] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %372 = reshape(%370, newshape=[3, 6, 14]) /* ty=Tensor[(3, 6, 14), float32] */;
  %373 = reshape(%371, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %374 = @func_4983(%372, %373) /* ty=(Tensor[(3, 6, 14), float32], Tensor[(1, 45), float32], Tensor[(4), float64], Tensor[(9, 3, 4), uint64]) */;
  %375 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  %376 = %374.3;
  (%375, %376, meta[relay.Constant][22] /* ty=Tensor[(3, 84), float32] */, meta[relay.Constant][23] /* ty=Tensor[(4), float64] */)
}

def @func_17796() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  %377 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
  %378 = @func_3381() /* ty=Tensor[(9, 3, 4), float32] */;
  %379 = %377.0;
  (%378, %379)
}

def @func_6644() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */
}

def @func_11232() -> (Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) {
  %382 = fn () -> (Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) {
    %380 = @func_8675() /* ty=Tensor[(9, 3, 4), uint64] */;
    %381 = @func_9677() /* ty=Tensor[(4, 1), float64] */;
    (%380, %381)
  };
  %382() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) */
}

def @func_3612(%var_3611: Tensor[(5, 2, 8), float64]) -> (Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) {
  %389 = fn (%var_3594: Tensor[(5, 2, 8), float64]) -> (Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) {
    %383 = cast(%var_3594, dtype="float64") /* ty=Tensor[(5, 2, 8), float64] */;
    %384 = cast(meta[relay.Constant][24] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %385 = reshape(%384, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
    %386 = @func_1782(%385) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
    %387 = acos(%383) /* ty=Tensor[(5, 2, 8), float64] */;
    %388 = %386.2;
    (%387, %388, meta[relay.Constant][24] /* ty=Tensor[(288), uint64] */)
  };
  %389(%var_3611) /* ty=(Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) */
}

def @func_5242() -> (Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) {
  @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */
}

def @func_5614(%var_5613: Tensor[(5, 13, 6), int16]) -> (Tensor[(4, 1), float64], Tensor[(5, 13, 6), float32]) {
  %398 = fn (%var_5567: Tensor[(5, 13, 6), int16]) -> (Tensor[(4, 1), float64], Tensor[(5, 13, 6), float32]) {
    %390 = cast(meta[relay.Constant][25] /* ty=Tensor[(5, 13, 6), int16] */, dtype="int16") /* ty=Tensor[(5, 13, 6), int16] */;
    %391 = shape_of(%var_5567, dtype="int32") /* ty=Tensor[(3), int32] */;
    %392 = cast(%var_5567, dtype="int16") /* ty=Tensor[(5, 13, 6), int16] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %394 = bitwise_or(%392, %393) /* ty=Tensor[(5, 13, 6), int16] */;
    %395 = cast(%394, dtype="float32") /* ty=Tensor[(5, 13, 6), float32] */;
    %396 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
    %397 = sqrt(%395) /* ty=Tensor[(5, 13, 6), float32] */;
    (%396, %397)
  };
  %398(%var_5613) /* ty=(Tensor[(4, 1), float64], Tensor[(5, 13, 6), float32]) */
}

def @func_7602(%var_7601: Tensor[(11, 11, 12), float64]) -> (Tensor[(11, 11, 12), float64],) {
  %404 = fn (%var_7592: Tensor[(11, 11, 12), float64]) -> (Tensor[(11, 11, 12), float64],) {
    %399 = cast(meta[relay.Constant][26] /* ty=Tensor[(11, 11, 12), float64] */, dtype="float64") /* ty=Tensor[(11, 11, 12), float64] */;
    %400 = shape_of(%var_7592, dtype="int32") /* ty=Tensor[(3), int32] */;
    %401 = cast(%var_7592, dtype="float64") /* ty=Tensor[(11, 11, 12), float64] */;
    %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %403 = floor_divide(%401, %402) /* ty=Tensor[(11, 11, 12), float64] */;
    (%403,)
  };
  %404(%var_7601) /* ty=(Tensor[(11, 11, 12), float64],) */
}

def @func_10308(%var_10285: Tensor[(6, 4, 16), bool]) -> (Tensor[(6, 4, 16), float64], Tensor[(288), uint64], Tensor[(9, 3, 4), uint64]) {
  %405 = cast(meta[relay.Constant][27] /* ty=Tensor[(6, 4, 16), bool] */, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %406 = shape_of(%var_10285, dtype="int32") /* ty=Tensor[(3), int32] */;
  %407 = cast(%var_10285, dtype="bool") /* ty=Tensor[(6, 4, 16), bool] */;
  %408 = dyn.reshape(%405, %406, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %409 = logical_or(%407, %408) /* ty=Tensor[(6, 4, 16), bool] */;
  %410 = cast(%409, dtype="float64") /* ty=Tensor[(6, 4, 16), float64] */;
  %411 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
  %412 = acos(%410) /* ty=Tensor[(6, 4, 16), float64] */;
  %413 = @func_9065() /* ty=Tensor[(288), uint64] */;
  %414 = %411.2;
  (%412, %413, %414)
}

def @func_9338(%var_9337: Tensor[(18, 18), int32]) -> (Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 300), float64], Tensor[(9, 12, 3), bool], Tensor[(18, 18), int32]) {
  %423 = fn (%var_9315: Tensor[(18, 18), int32]) -> (Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 300), float64], Tensor[(9, 12, 3), bool], Tensor[(18, 18), int32]) {
    %415 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 300), float64] */, dtype="float64") /* ty=Tensor[(4, 300), float64] */;
    %416 = reshape(%415, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
    %417 = @func_5810(%416) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
    %418 = cast(%var_9315, dtype="int32") /* ty=Tensor[(18, 18), int32] */;
    %419 = reshape(%418, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int32] */;
    %420 = @func_8685() /* ty=Tensor[(3, 84), float32] */;
    %421 = %417.0;
    %422 = @func_8864(%419) /* ty=Tensor[(9, 12, 3), bool] */;
    (%420, %421, meta[relay.Constant][28] /* ty=Tensor[(4, 300), float64] */, %422, %var_9315)
  };
  %423(%var_9337) /* ty=(Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 300), float64], Tensor[(9, 12, 3), bool], Tensor[(18, 18), int32]) */
}

def @func_16340() -> (Tensor[(4, 1), float64],) {
  @func_16338() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_6776() -> Tensor[(4, 1), float64] {
  %424 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %424.0
}

def @func_11259() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %425 = @func_8466() /* ty=Tensor[(9, 3, 4), float32] */;
  %426 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
  (%425, %426)
}

def @func_16393() -> (Tensor[(4, 1), float64], Tensor[(3, 84), float32]) {
  %427 = @func_12105() /* ty=(Tensor[(3, 84), float32],) */;
  %428 = @func_11733() /* ty=Tensor[(4, 1), float64] */;
  %429 = %427.0;
  (%428, %429)
}

def @func_4843() -> (Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) {
  @func_4841() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) */
}

def @func_17394(%var_17392: Tensor[(32), uint64], %var_17393: Tensor[(60, 2), uint16]) -> (Tensor[(9, 3, 4), bool], Tensor[(1, 15, 8), uint16], Tensor[(60, 2), uint16], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(4, 32), float32]) {
  @func_17390(%var_17392, %var_17393) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(1, 15, 8), uint16], Tensor[(60, 2), uint16], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(4, 32), float32]) */
}

def @func_17862() -> Tensor[(9, 3, 4), bool] {
  %431 = fn () -> Tensor[(9, 3, 4), bool] {
    %430 = @func_10487() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), bool]) */;
    %430.4
  };
  %431() /* ty=Tensor[(9, 3, 4), bool] */
}

def @func_2676(%var_2674: uint64, %var_2675: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  @func_2672(%var_2674, %var_2675) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */
}

def @func_14038(%var_14037: Tensor[(242, 6), float64]) -> (Tensor[(9, 3, 4), uint64], Tensor[(1452), float32], Tensor[(242, 6), float64], uint64, Tensor[(4, 1), float64]) {
  %440 = fn (%var_14025: Tensor[(242, 6), float64]) -> (Tensor[(9, 3, 4), uint64], Tensor[(1452), float32], Tensor[(242, 6), float64], uint64, Tensor[(4, 1), float64]) {
    %432 = cast(%var_14025, dtype="float64") /* ty=Tensor[(242, 6), float64] */;
    %433 = cast(meta[relay.Constant][29] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %434 = reshape(%432, newshape=[1452]) /* ty=Tensor[(1452), float64] */;
    %435 = reshape(%433, newshape=[]) /* ty=uint64 */;
    %436 = @func_7653(%434, %435) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) */;
    %437 = @func_4627() /* ty=Tensor[(9, 3, 4), uint64] */;
    %438 = %436.2;
    %439 = @func_8934() /* ty=Tensor[(4, 1), float64] */;
    (%437, %438, %var_14025, meta[relay.Constant][29] /* ty=uint64 */, %439)
  };
  %440(%var_14037) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(1452), float32], Tensor[(242, 6), float64], uint64, Tensor[(4, 1), float64]) */
}

def @func_2374(%var_2363: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) {
  %441 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %442 = cast(%var_2363, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %443 = reshape(%442, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %444 = @func_1782(%443) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %445 = %441.0;
  %446 = %444.4;
  (%445, %446, %var_2363)
}

def @func_5775() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
  @func_5773() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */
}

def @func_11572() -> (Tensor[(9, 3, 4), float32],) {
  %449 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %447 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %448 = %447.0;
    (%448,)
  };
  %449() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_16275() -> Tensor[(9, 3, 4), float32] {
  %451 = fn () -> Tensor[(9, 3, 4), float32] {
    %450 = @func_13509() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %450.0
  };
  %451() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_3127(%var_3124: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
  %452 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %453 = cast(%var_3124, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %454 = reshape(%453, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %455 = @func_2531(%454) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %456 = %452.0;
  %457 = %455.0;
  (%456, %457, %var_3124)
}

def @func_16667() -> (Tensor[(4, 1), float64],) {
  %458 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
  (%458,)
}

def @func_5392() -> (Tensor[(4, 1), float64],) {
  @func_5390() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_8591(%var_8589: Tensor[(1, 1620), uint16], %var_8590: Tensor[(2, 40), float64]) -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(5, 2, 8), float64], Tensor[(2, 40), float64], Tensor[(9, 3, 4), float32]) {
  %471 = fn (%var_8571: Tensor[(1, 1620), uint16], %var_8574: Tensor[(2, 40), float64]) -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(5, 2, 8), float64], Tensor[(2, 40), float64], Tensor[(9, 3, 4), float32]) {
    %459 = @func_7039() /* ty=(Tensor[(4, 1), float64],) */;
    %460 = cast(%var_8571, dtype="uint16") /* ty=Tensor[(1, 1620), uint16] */;
    %461 = reshape(%460, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
    %462 = @func_3142(%461) /* ty=(Tensor[(15, 12, 9), uint16],) */;
    %463 = cast(%var_8574, dtype="float64") /* ty=Tensor[(2, 40), float64] */;
    %464 = reshape(%463, newshape=[5, 2, 8]) /* ty=Tensor[(5, 2, 8), float64] */;
    %465 = @func_3610(%464) /* ty=(Tensor[(5, 2, 8), float64], Tensor[(4), float64], Tensor[(288), uint64]) */;
    %466 = @func_7124() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) */;
    %467 = %459.0;
    %468 = %462.0;
    %469 = %465.0;
    %470 = %466.0;
    (%467, %468, %var_8571, %469, %var_8574, %470)
  };
  %471(%var_8589, %var_8590) /* ty=(Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(5, 2, 8), float64], Tensor[(2, 40), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_959(%var_956: uint64, %var_957: Tensor[(3, 6, 16), uint64], %var_958: Tensor[(45, 1), float32]) -> (Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) {
  @func_954(%var_956, %var_957, %var_958) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */
}

def @func_11073() -> Tensor[(9, 3, 4), float32] {
  %472 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
  %472.0
}

def @func_3381() -> Tensor[(9, 3, 4), float32] {
  %473 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %473.1
}

def @func_2976() -> Tensor[(4, 1), float64] {
  @func_2974() /* ty=Tensor[(4, 1), float64] */
}

def @func_3228() -> (Tensor[(4, 1), float64],) {
  %474 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  (%474,)
}

def @func_8779() -> Tensor[(9, 3, 4), uint64] {
  %476 = fn () -> Tensor[(9, 3, 4), uint64] {
    %475 = @func_4562() /* ty=(Tensor[(9, 3, 4), uint64],) */;
    %475.0
  };
  %476() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_6778() -> Tensor[(4, 1), float64] {
  @func_6776() /* ty=Tensor[(4, 1), float64] */
}

def @func_5390() -> (Tensor[(4, 1), float64],) {
  %477 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  (%477,)
}

def @func_8838() -> Tensor[(4, 1), float64] {
  @func_4958() /* ty=Tensor[(4, 1), float64] */
}

def @func_11261() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  @func_11259() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */
}

def @func_1185() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
  @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */
}

def @func_8864(%var_8857: Tensor[(9, 12, 3), int32]) -> Tensor[(9, 12, 3), bool] {
  %478 = cast(9 /* ty=int32 */, dtype="bool") /* ty=bool */;
  %479 = cast(%var_8857, dtype="bool") /* ty=Tensor[(9, 12, 3), bool] */;
  greater(%478, %479) /* ty=Tensor[(9, 12, 3), bool] */
}

def @func_4987(%var_4985: Tensor[(3, 6, 14), float32], %var_4986: Tensor[(4), float64]) -> (Tensor[(3, 6, 14), float32], Tensor[(1, 45), float32], Tensor[(4), float64], Tensor[(9, 3, 4), uint64]) {
  @func_4983(%var_4985, %var_4986) /* ty=(Tensor[(3, 6, 14), float32], Tensor[(1, 45), float32], Tensor[(4), float64], Tensor[(9, 3, 4), uint64]) */
}

def @func_9615() -> (Tensor[(288), uint64],) {
  %482 = fn () -> (Tensor[(288), uint64],) {
    %480 = @func_9027() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) */;
    %481 = %480.2;
    (%481,)
  };
  %482() /* ty=(Tensor[(288), uint64],) */
}

def @func_8685() -> Tensor[(3, 84), float32] {
  %483 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
  %483.2
}

def @func_4084(%var_4047: Tensor[(288), uint64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(15, 3, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(15, 3, 288), int16]) {
  %484 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
  %485 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %486 = %484.0;
  %487 = cast(%486, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %488 = reshape(%487, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %489 = @func_39(%488) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %490 = cast(%var_4047, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %491 = reshape(%490, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %492 = @func_2531(%491) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %493 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %494 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %495 = reshape(%494, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %496 = @func_130(%495) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %497 = %496.0;
  %498 = cast(meta[relay.Constant][30] /* ty=Tensor[(1, 45), float32] */, dtype="float64") /* ty=Tensor[(1, 45), float64] */;
  %499 = shape_of(%497, dtype="int32") /* ty=Tensor[(3), int32] */;
  %500 = cast(%497, dtype="float64") /* ty=Tensor[(15, 3, 1), float64] */;
  %501 = dyn.reshape(%498, %499, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %502 = power(%500, %501) /* ty=Tensor[(15, 3, ?), float64] */;
  %503 = cast(%var_4047, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %504 = reshape(%503, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %505 = @func_2531(%504) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %506 = %505.1;
  %507 = cast(%506, dtype="int32") /* ty=Tensor[(45), int32] */;
  %508 = shape_of(%502, dtype="int32") /* ty=Tensor[(3), int32] */;
  %509 = cast(%502, dtype="int32") /* ty=Tensor[(15, 3, ?), int32] */;
  %510 = dyn.reshape(%507, %508, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %511 = left_shift(%509, %510) /* ty=Tensor[(15, 3, ?), int32] */;
  %512 = cast(%var_4047, dtype="int16") /* ty=Tensor[(288), int16] */;
  %513 = cast(%511, dtype="int16") /* ty=Tensor[(15, 3, ?), int16] */;
  %514 = %485.0;
  %515 = %489.1;
  %516 = %492.3;
  %517 = %493.0;
  %518 = right_shift(%512, %513) /* ty=Tensor[(15, 3, 288), int16] */;
  (%486, %514, %515, %516, %517, %518)
}

def @func_17233() -> (uint64, Tensor[(4, 1), float64]) {
  %523 = fn () -> (uint64, Tensor[(4, 1), float64]) {
    %519 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
    %520 = @func_7869() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
    %521 = %519.2;
    %522 = %520.0;
    (%521, %522)
  };
  %523() /* ty=(uint64, Tensor[(4, 1), float64]) */
}

def @func_12447(%var_12445: Tensor[(8, 2, 11), float32]) -> (Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) {
  @func_12444(%var_12445) /* ty=(Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) */
}

def @func_15148() -> Tensor[(4), float64] {
  %524 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
  %524.1
}

def @func_9028() -> (Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) {
  %530 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) {
    %525 = cast(meta[relay.Constant][31] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %526 = reshape(%525, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
    %527 = @func_1782(%526) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
    %528 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
    %529 = %527.6;
    (%528, %529, meta[relay.Constant][31] /* ty=Tensor[(288), uint64] */)
  };
  %530() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) */
}

def @func_4276() -> Tensor[(4, 1), float64] {
  @func_4274() /* ty=Tensor[(4, 1), float64] */
}

def @func_14163() -> (Tensor[(9, 3, 4), uint64],) {
  %533 = fn () -> (Tensor[(9, 3, 4), uint64],) {
    %531 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
    %532 = %531.0;
    (%532,)
  };
  %533() /* ty=(Tensor[(9, 3, 4), uint64],) */
}

def @func_10087(%var_10054: Tensor[(13, 4, 14), bool], %var_10055: Tensor[(13, 4, 14), bool]) -> (Tensor[(13, 4, 14), bool], Tensor[(9, 3, 4), uint64], Tensor[(3, 6, 16), uint64]) {
  %534 = cast(%var_10055, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %535 = shape_of(%var_10054, dtype="int32") /* ty=Tensor[(3), int32] */;
  %536 = cast(%var_10054, dtype="bool") /* ty=Tensor[(13, 4, 14), bool] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %538 = @func_4944() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %539 = logical_and(%536, %537) /* ty=Tensor[(13, 4, 14), bool] */;
  %540 = %538.0;
  %541 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  (%539, %540, %541)
}

def @func_13937(%var_13935: Tensor[(3, 9, 11), int64]) -> (Tensor[(3, 9, 11), int64], Tensor[(9, 3, 4), uint64]) {
  @func_13934(%var_13935) /* ty=(Tensor[(3, 9, 11), int64], Tensor[(9, 3, 4), uint64]) */
}

def @func_16726() -> (Tensor[(288), uint64],) {
  @func_16724() /* ty=(Tensor[(288), uint64],) */
}

def @func_14595() -> (Tensor[(9, 3, 4), uint64], Tensor[(288), uint64], Tensor[(288), uint64], Tensor[(3, 6, 16), float32]) {
  %550 = fn () -> (Tensor[(9, 3, 4), uint64], Tensor[(288), uint64], Tensor[(288), uint64], Tensor[(3, 6, 16), float32]) {
    %542 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
    %543 = cast(meta[relay.Constant][32] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %544 = reshape(%543, newshape=[288]) /* ty=Tensor[(288), uint64] */;
    %545 = @func_2531(%544) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
    %546 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
    %547 = %542.2;
    %548 = %545.2;
    %549 = %546.0;
    (%547, %548, meta[relay.Constant][32] /* ty=Tensor[(288), uint64] */, %549)
  };
  %550() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(288), uint64], Tensor[(288), uint64], Tensor[(3, 6, 16), float32]) */
}

def @func_17050(%var_16997: Tensor[(8, 3, 5), uint8], %var_16998: Tensor[(8, 3, 5), uint8], %var_17029: Tensor[(1200), float64]) -> (Tensor[(8, 3, 5), bool], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(8, 3, 5), float32]) {
  %551 = cast(%var_16998, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
  %552 = shape_of(%var_16997, dtype="int32") /* ty=Tensor[(3), int32] */;
  %553 = cast(%var_16997, dtype="bool") /* ty=Tensor[(8, 3, 5), bool] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %555 = cast(%var_17029, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %556 = reshape(%555, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %557 = @func_11693(%556) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(1200), float64], Tensor[(1200), float64]) */;
  %558 = cast(%var_16997, dtype="float32") /* ty=Tensor[(8, 3, 5), float32] */;
  %559 = less_equal(%553, %554) /* ty=Tensor[(8, 3, 5), bool] */;
  %560 = @func_16274() /* ty=Tensor[(9, 3, 4), float32] */;
  %561 = %557.3;
  %562 = cos(%558) /* ty=Tensor[(8, 3, 5), float32] */;
  (%559, %560, %561, %var_17029, %562)
}

def @func_17775(%var_17773: Tensor[(144, 4), float64], %var_17774: Tensor[(144, 4), float64]) -> (Tensor[(4, 1), float64], Tensor[(9, 8, 8), float64], Tensor[(144, 4), bool], Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %579 = fn (%var_17731: Tensor[(144, 4), float64], %var_17735: Tensor[(144, 4), float64]) -> (Tensor[(4, 1), float64], Tensor[(9, 8, 8), float64], Tensor[(144, 4), bool], Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
    %563 = cast(%var_17731, dtype="float64") /* ty=Tensor[(144, 4), float64] */;
    %564 = reshape(%563, newshape=[9, 8, 8]) /* ty=Tensor[(9, 8, 8), float64] */;
    %565 = @func_5924(%564) /* ty=(Tensor[(9, 8, 8), float64],) */;
    %566 = cast(%var_17735, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
    %567 = shape_of(%var_17731, dtype="int32") /* ty=Tensor[(2), int32] */;
    %568 = cast(%var_17731, dtype="bool") /* ty=Tensor[(144, 4), bool] */;
    %569 = dyn.reshape(%566, %567, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %570 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
    %571 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %572 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %573 = @func_6776() /* ty=Tensor[(4, 1), float64] */;
    %574 = %565.0;
    %575 = less_equal(%568, %569) /* ty=Tensor[(144, 4), bool] */;
    %576 = %570.2;
    %577 = %571.0;
    %578 = %572.0;
    (%573, %574, %575, %576, %577, %578)
  };
  %579(%var_17773, %var_17774) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 8, 8), float64], Tensor[(144, 4), bool], Tensor[(3, 84), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */
}

def @func_16947(%var_16945: Tensor[(10, 13, 12), float32], %var_16946: Tensor[(1620, 1), uint16]) -> (Tensor[(10, 13, 12), float32], Tensor[(1, 1620), uint16], Tensor[(1620, 1), uint16], Tensor[(80), float64]) {
  @func_16943(%var_16945, %var_16946) /* ty=(Tensor[(10, 13, 12), float32], Tensor[(1, 1620), uint16], Tensor[(1620, 1), uint16], Tensor[(80), float64]) */
}

def @main(%var_18055: Tensor[(9, 10, 3), float64]) -> Tensor[(9, 10, 3), float64] {
  %580 = cast(%var_18055, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %581 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(9, 10, 3), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(meta[relay.Constant][33] /* ty=Tensor[(9, 10, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 10, 3), float64] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  multiply(%582, %583) /* ty=Tensor[(9, 10, 3), float64] */
}

def @func_16943(%var_16930: Tensor[(10, 13, 12), float32], %var_16940: Tensor[(1620, 1), uint16]) -> (Tensor[(10, 13, 12), float32], Tensor[(1, 1620), uint16], Tensor[(1620, 1), uint16], Tensor[(80), float64]) {
  %584 = cast(%var_16930, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %585 = cast(%var_16940, dtype="uint16") /* ty=Tensor[(1620, 1), uint16] */;
  %586 = cast(meta[relay.Constant][34] /* ty=Tensor[(80), float64] */, dtype="float64") /* ty=Tensor[(80), float64] */;
  %587 = reshape(%585, newshape=[1, 1620]) /* ty=Tensor[(1, 1620), uint16] */;
  %588 = reshape(%586, newshape=[2, 40]) /* ty=Tensor[(2, 40), float64] */;
  %589 = @func_8588(%587, %588) /* ty=(Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(5, 2, 8), float64], Tensor[(2, 40), float64], Tensor[(9, 3, 4), float32]) */;
  %590 = tan(%584) /* ty=Tensor[(10, 13, 12), float32] */;
  %591 = %589.2;
  (%590, %591, %var_16940, meta[relay.Constant][34] /* ty=Tensor[(80), float64] */)
}

def @func_17591(%var_17589: Tensor[(14, 14, 11), uint16], %var_17590: Tensor[(14, 14, 11), uint16]) -> (Tensor[(4, 1), float64], Tensor[(14, 14, 11), float64], Tensor[(3, 84), float32], Tensor[(14, 14, 11), float64]) {
  @func_17587(%var_17589, %var_17590) /* ty=(Tensor[(4, 1), float64], Tensor[(14, 14, 11), float64], Tensor[(3, 84), float32], Tensor[(14, 14, 11), float64]) */
}

def @func_16724() -> (Tensor[(288), uint64],) {
  %592 = @func_13217() /* ty=Tensor[(288), uint64] */;
  (%592,)
}

def @func_14346(%var_14345: Tensor[(3, 6, 16), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), bool], Tensor[(9, 3, 4), uint64]) {
  %606 = fn (%var_14334: Tensor[(3, 6, 16), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), bool], Tensor[(9, 3, 4), uint64]) {
    %593 = @func_5269() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %594 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
    %595 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
    %596 = %595.0;
    %597 = cast(%var_14334, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
    %598 = shape_of(%596, dtype="int32") /* ty=Tensor[(3), int32] */;
    %599 = cast(%596, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
    %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %601 = @func_9660() /* ty=(Tensor[(9, 3, 4), uint64],) */;
    %602 = %593.0;
    %603 = %594.0;
    %604 = logical_and(%599, %600) /* ty=Tensor[(3, 6, 16), bool] */;
    %605 = %601.0;
    (%602, %603, %604, %605)
  };
  %606(%var_14345) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), bool], Tensor[(9, 3, 4), uint64]) */
}

def @func_14307() -> (Tensor[(4, 1), float64], Tensor[(5, 6, 16), float64], Tensor[(4, 120), float64]) {
  @func_14305() /* ty=(Tensor[(4, 1), float64], Tensor[(5, 6, 16), float64], Tensor[(4, 120), float64]) */
}

def @func_4636(%var_4632: Tensor[(9, 14, 13), float32]) -> Tensor[(9, 14, 13), float32] {
  %607 = cast(%var_4632, dtype="float32") /* ty=Tensor[(9, 14, 13), float32] */;
  asin(%607) /* ty=Tensor[(9, 14, 13), float32] */
}

def @func_5924(%var_5910: Tensor[(9, 8, 8), float64]) -> (Tensor[(9, 8, 8), float64],) {
  %608 = cast(%var_5910, dtype="float64") /* ty=Tensor[(9, 8, 8), float64] */;
  %609 = acos(%608) /* ty=Tensor[(9, 8, 8), float64] */;
  (%609,)
}

def @func_4639(%var_4637: Tensor[(9, 14, 13), float32]) -> Tensor[(9, 14, 13), float32] {
  @func_4636(%var_4637) /* ty=Tensor[(9, 14, 13), float32] */
}

def @func_1306() -> Tensor[(9, 3, 4), bool] {
  %610 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %610.0
}

def @func_2407(%var_2392: uint64, %var_2393: Tensor[(2, 16, 1), uint64]) -> (Tensor[(2, 16, ?), bool],) {
  %611 = cast(%var_2392, dtype="uint64") /* ty=uint64 */;
  %612 = cast(%var_2393, dtype="uint64") /* ty=Tensor[(2, 16, 1), uint64] */;
  %613 = subtract(%611, %612) /* ty=Tensor[(2, 16, 1), uint64] */;
  %614 = cast(%613, dtype="bool") /* ty=Tensor[(2, 16, 1), bool] */;
  %615 = shape_of(%var_2393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %616 = cast(%var_2393, dtype="bool") /* ty=Tensor[(2, 16, 1), bool] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %618 = equal(%616, %617) /* ty=Tensor[(2, 16, ?), bool] */;
  (%618,)
}

def @func_9875() -> (Tensor[(15, 12, 9), uint16],) {
  %619 = @func_4754() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) */;
  %620 = %619.3;
  (%620,)
}

def @func_11397(%var_11396: float32) -> (Tensor[(10, 1, 15), float32], Tensor[(4, 1), float64]) {
  %625 = fn (%var_11382: float32) -> (Tensor[(10, 1, 15), float32], Tensor[(4, 1), float64]) {
    %621 = cast(%var_11382, dtype="float32") /* ty=float32 */;
    %622 = cast(meta[relay.Constant][35] /* ty=Tensor[(10, 1, 15), float32] */, dtype="float32") /* ty=Tensor[(10, 1, 15), float32] */;
    %623 = divide(%621, %622) /* ty=Tensor[(10, 1, 15), float32] */;
    %624 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
    (%623, %624)
  };
  %625(%var_11396) /* ty=(Tensor[(10, 1, 15), float32], Tensor[(4, 1), float64]) */
}

def @func_5302() -> (Tensor[(288), uint64], Tensor[(9, 3, 4), bool]) {
  %634 = fn () -> (Tensor[(288), uint64], Tensor[(9, 3, 4), bool]) {
    %626 = cast(meta[relay.Constant][36] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %627 = reshape(%626, newshape=[288]) /* ty=Tensor[(288), uint64] */;
    %628 = @func_2374(%627) /* ty=(Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) */;
    %629 = %628.1;
    %630 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
    %631 = cast(%629, dtype="bool") /* ty=bool */;
    %632 = cast(%630, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
    %633 = logical_or(%631, %632) /* ty=Tensor[(9, 3, 4), bool] */;
    (meta[relay.Constant][36] /* ty=Tensor[(288), uint64] */, %633)
  };
  %634() /* ty=(Tensor[(288), uint64], Tensor[(9, 3, 4), bool]) */
}

def @func_10906() -> (Tensor[(288), uint64],) {
  %635 = @func_9614() /* ty=(Tensor[(288), uint64],) */;
  %636 = %635.0;
  (%636,)
}

def @func_9166() -> (Tensor[(3, 6, 16), float32],) {
  @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */
}

def @func_11323() -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16]) {
  %637 = cast(meta[relay.Constant][37] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %638 = reshape(%637, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %639 = @func_3142(%638) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %640 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  %641 = %639.0;
  (%640, %641, meta[relay.Constant][37] /* ty=Tensor[(1620), uint16] */)
}

def @func_14138() -> (Tensor[(4, 1), float64],) {
  %642 = @func_7449() /* ty=(Tensor[(4, 1), float64],) */;
  %643 = %642.0;
  (%643,)
}

def @func_13450() -> Tensor[(4, 1), float64] {
  @func_13448() /* ty=Tensor[(4, 1), float64] */
}

def @func_16476() -> (Tensor[(9, 3, 4), uint64],) {
  @func_16474() /* ty=(Tensor[(9, 3, 4), uint64],) */
}

def @func_17473() -> (Tensor[(4, 1), float64],) {
  @func_17471() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_14879() -> Tensor[(4, 1), float64] {
  %645 = fn () -> Tensor[(4, 1), float64] {
    %644 = @func_9489() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
    %644.0
  };
  %645() /* ty=Tensor[(4, 1), float64] */
}

def @func_6540() -> (Tensor[(?, 2, 2), float32],) {
  %648 = fn () -> (Tensor[(?, 2, 2), float32],) {
    %646 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
    %647 = %646.1;
    (%647,)
  };
  %648() /* ty=(Tensor[(?, 2, 2), float32],) */
}

def @func_18046() -> Tensor[(4, 1), float64] {
  @func_18044() /* ty=Tensor[(4, 1), float64] */
}

def @func_10647() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
  %654 = fn () -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) {
    %649 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
    %650 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
    %651 = @func_3078() /* ty=Tensor[(9, 3, 4), uint64] */;
    %652 = %649.0;
    %653 = %650.1;
    (%651, %652, %653)
  };
  %654() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */
}

def @func_13601() -> (Tensor[(9, 3, 4), uint64], Tensor[(2, 32), float32], Tensor[(2, 32), float32]) {
  @func_13599() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(2, 32), float32], Tensor[(2, 32), float32]) */
}

def @func_4489(%var_4477: Tensor[(9, 3, 4), float64]) -> Tensor[(9, 3, 4), uint8] {
  %655 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %656 = cast(%var_4477, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %657 = shape_of(%655, dtype="int32") /* ty=Tensor[(3), int32] */;
  %658 = cast(%655, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  logical_xor(%658, %659) /* ty=Tensor[(9, 3, 4), uint8] */
}

def @func_4650() -> (Tensor[(4, 1), float64],) {
  @func_4648() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_5909() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) {
  %667 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) {
    %660 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
    %661 = @func_5831() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) */;
    %662 = @func_4944() /* ty=(Tensor[(9, 3, 4), uint64],) */;
    %663 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
    %664 = %660.0;
    %665 = %661.1;
    %666 = %662.0;
    (%663, %664, %665, %666)
  };
  %667() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) */
}

def @func_1361(%var_1359: uint64, %var_1360: Tensor[(15, 3), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], uint64, Tensor[(15, 3), float32], Tensor[(8, 36), bool]) {
  @func_1357(%var_1359, %var_1360) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], uint64, Tensor[(15, 3), float32], Tensor[(8, 36), bool]) */
}

def @func_12578(%var_12526: Tensor[(1452), float64], %var_12545: Tensor[(1452), float64]) -> (Tensor[(4, 1), float64], uint64, uint64, Tensor[(1452), bool]) {
  %668 = @func_7320() /* ty=(Tensor[(4, 1), float64],) */;
  %669 = cast(%var_12526, dtype="float64") /* ty=Tensor[(1452), float64] */;
  %670 = cast(meta[relay.Constant][38] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %671 = reshape(%669, newshape=[1452]) /* ty=Tensor[(1452), float64] */;
  %672 = reshape(%670, newshape=[]) /* ty=uint64 */;
  %673 = @func_7653(%671, %672) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) */;
  %674 = cast(%var_12545, dtype="bool") /* ty=Tensor[(1452), bool] */;
  %675 = shape_of(%var_12526, dtype="int32") /* ty=Tensor[(1), int32] */;
  %676 = cast(%var_12526, dtype="bool") /* ty=Tensor[(1452), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?), bool] */;
  %678 = %668.0;
  %679 = %673.4;
  %680 = greater(%676, %677) /* ty=Tensor[(1452), bool] */;
  (%678, %679, meta[relay.Constant][38] /* ty=uint64 */, %680)
}

def @func_13043() -> Tensor[(4, 1), float64] {
  %682 = fn () -> Tensor[(4, 1), float64] {
    %681 = @func_12135() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
    %681.0
  };
  %682() /* ty=Tensor[(4, 1), float64] */
}

def @func_7040() -> (Tensor[(4, 1), float64],) {
  %685 = fn () -> (Tensor[(4, 1), float64],) {
    %683 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
    %684 = %683.0;
    (%684,)
  };
  %685() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_15129() -> (uint64, Tensor[(9, 3, 4), float32]) {
  %686 = @func_13848() /* ty=(Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) */;
  %687 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %688 = %686.1;
  %689 = %687.3;
  (%688, %689)
}

def @func_17055(%var_17052: Tensor[(8, 3, 5), uint8], %var_17053: Tensor[(8, 3, 5), uint8], %var_17054: Tensor[(1200), float64]) -> (Tensor[(8, 3, 5), bool], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(8, 3, 5), float32]) {
  @func_17050(%var_17052, %var_17053, %var_17054) /* ty=(Tensor[(8, 3, 5), bool], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(8, 3, 5), float32]) */
}

def @func_5271() -> (Tensor[(9, 3, 4), float32],) {
  @func_5269() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_4263() -> Tensor[(9, 3, 4), float64] {
  @func_4261() /* ty=Tensor[(9, 3, 4), float64] */
}

def @func_5337() -> Tensor[(9, 3, 4), float32] {
  %691 = fn () -> Tensor[(9, 3, 4), float32] {
    %690 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %690.0
  };
  %691() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_10091(%var_10089: Tensor[(13, 4, 14), bool], %var_10090: Tensor[(13, 4, 14), bool]) -> (Tensor[(13, 4, 14), bool], Tensor[(9, 3, 4), uint64], Tensor[(3, 6, 16), uint64]) {
  @func_10087(%var_10089, %var_10090) /* ty=(Tensor[(13, 4, 14), bool], Tensor[(9, 3, 4), uint64], Tensor[(3, 6, 16), uint64]) */
}

def @func_11020() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %695 = fn () -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
    %692 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
    %693 = @func_6776() /* ty=Tensor[(4, 1), float64] */;
    %694 = %692.0;
    (%693, %694)
  };
  %695() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_4648() -> (Tensor[(4, 1), float64],) {
  %696 = @func_3405() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %697 = %696.1;
  (%697,)
}

def @func_11983(%var_11982: Tensor[(6, 8, 3), uint16]) -> (Tensor[(9, 3, 4), float32], Tensor[(6, 8, 3), uint16], Tensor[(9, 3, 4), float32], Tensor[(9, 12, 3), bool], Tensor[(324), int32]) {
  %715 = fn (%var_11917: Tensor[(6, 8, 3), uint16]) -> (Tensor[(9, 3, 4), float32], Tensor[(6, 8, 3), uint16], Tensor[(9, 3, 4), float32], Tensor[(9, 12, 3), bool], Tensor[(324), int32]) {
    %698 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 8, 3), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
    %699 = shape_of(%var_11917, dtype="int32") /* ty=Tensor[(3), int32] */;
    %700 = cast(%var_11917, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
    %701 = dyn.reshape(%698, %699, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %702 = subtract(%700, %701) /* ty=Tensor[(6, 8, 3), uint16] */;
    %703 = cast(%702, dtype="float32") /* ty=Tensor[(6, 8, 3), float32] */;
    %704 = asinh(%703) /* ty=Tensor[(6, 8, 3), float32] */;
    %705 = cast(%704, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
    %706 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(6, 8, 3), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %707 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 8, 3), uint16] */, dtype="uint16") /* ty=Tensor[(6, 8, 3), uint16] */;
    %708 = dyn.reshape(%705, %706, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %709 = cast(meta[relay.Constant][40] /* ty=Tensor[(324), int32] */, dtype="int32") /* ty=Tensor[(324), int32] */;
    %710 = reshape(%709, newshape=[9, 12, 3]) /* ty=Tensor[(9, 12, 3), int32] */;
    %711 = @func_3381() /* ty=Tensor[(9, 3, 4), float32] */;
    %712 = bitwise_and(%707, %708) /* ty=Tensor[(6, 8, 3), uint16] */;
    %713 = @func_8466() /* ty=Tensor[(9, 3, 4), float32] */;
    %714 = @func_8864(%710) /* ty=Tensor[(9, 12, 3), bool] */;
    (%711, %712, %713, %714, meta[relay.Constant][40] /* ty=Tensor[(324), int32] */)
  };
  %715(%var_11982) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(6, 8, 3), uint16], Tensor[(9, 3, 4), float32], Tensor[(9, 12, 3), bool], Tensor[(324), int32]) */
}

def @func_4492(%var_4490: Tensor[(9, 3, 4), float64]) -> Tensor[(9, 3, 4), uint8] {
  @func_4489(%var_4490) /* ty=Tensor[(9, 3, 4), uint8] */
}

def @func_13095() -> (Tensor[(4, 1), float64], Tensor[(7, 234), float32], Tensor[(1638), float32]) {
  %722 = fn () -> (Tensor[(4, 1), float64], Tensor[(7, 234), float32], Tensor[(1638), float32]) {
    %716 = @func_9406() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
    %717 = cast(meta[relay.Constant][41] /* ty=Tensor[(1638), float32] */, dtype="float32") /* ty=Tensor[(1638), float32] */;
    %718 = reshape(%717, newshape=[7, 234]) /* ty=Tensor[(7, 234), float32] */;
    %719 = @func_10321(%718) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 14, 13), float32], Tensor[(7, 234), float32]) */;
    %720 = %716.0;
    %721 = %719.3;
    (%720, %721, meta[relay.Constant][41] /* ty=Tensor[(1638), float32] */)
  };
  %722() /* ty=(Tensor[(4, 1), float64], Tensor[(7, 234), float32], Tensor[(1638), float32]) */
}

def @func_10952() -> (Tensor[(9, 3, 4), float32],) {
  @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_5537(%var_5535: Tensor[(45), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) {
  @func_5534(%var_5535) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) */
}

def @func_15869() -> Tensor[(168), float64] {
  %724 = fn () -> Tensor[(168), float64] {
    %723 = @func_8994() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) */;
    %723.2
  };
  %724() /* ty=Tensor[(168), float64] */
}

def @func_4562() -> (Tensor[(9, 3, 4), uint64],) {
  %725 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %726 = %725.0;
  (%726,)
}

def @func_16474() -> (Tensor[(9, 3, 4), uint64],) {
  %727 = @func_14162() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %728 = %727.0;
  (%728,)
}

def @func_15168() -> Tensor[(9, 3, 4), bool] {
  %730 = fn () -> Tensor[(9, 3, 4), bool] {
    %729 = @func_10734() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %729.0
  };
  %730() /* ty=Tensor[(9, 3, 4), bool] */
}

def @func_10277() -> Tensor[(9, 3, 4), uint64] {
  %731 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
  %731.1
}

def @func_16642() -> (Tensor[(4, 1), float64],) {
  %732 = @func_15090() /* ty=Tensor[(4, 1), float64] */;
  (%732,)
}

def @func_1183() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
  %733 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %734 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %735 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="uint8") /* ty=Tensor[(9, 3, 4), uint8] */;
  %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %737 = bitwise_and(%735, %736) /* ty=Tensor[(9, 3, 4), uint8] */;
  %738 = cast(meta[relay.Constant][42] /* ty=Tensor[(9, 3, 4), uint8] */, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="bool") /* ty=Tensor[(9, 3, 4), bool] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %742 = cast(%737, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %743 = less_equal(%740, %741) /* ty=Tensor[(9, 3, 4), bool] */;
  %744 = sin(%742) /* ty=Tensor[(9, 3, 4), float32] */;
  (%743, %744)
}

def @func_12677(%var_12643: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), int64], Tensor[(32), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], uint64) {
  %745 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %746 = %745.0;
  %747 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %748 = %747.1;
  %749 = cast(%748, dtype="int64") /* ty=Tensor[(9, 3, 4), int64] */;
  %750 = shape_of(%746, dtype="int32") /* ty=Tensor[(3), int32] */;
  %751 = cast(%746, dtype="int64") /* ty=Tensor[(9, 3, 4), int64] */;
  %752 = dyn.reshape(%749, %750, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %753 = cast(meta[relay.Constant][44] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %754 = cast(%var_12643, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %755 = reshape(%753, newshape=[]) /* ty=uint64 */;
  %756 = reshape(%754, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %757 = @func_3758(%755, %756) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) */;
  %758 = %757.4;
  %759 = cast(%758, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %760 = reshape(%759, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %761 = @func_3952(%760) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) */;
  %762 = minimum(%751, %752) /* ty=Tensor[(9, 3, 4), int64] */;
  %763 = %761.1;
  %764 = @func_9996() /* ty=uint64 */;
  (%762, %758, meta[relay.Constant][44] /* ty=uint64 */, %var_12643, %763, %764)
}

def @func_3589() -> (Tensor[(4, 1), float64],) {
  %765 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
  %766 = %765.0;
  (%766,)
}

def @func_2600() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) {
  %780 = fn () -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) {
    %767 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %768 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %769 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
    %770 = cast(%769, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
    %771 = reshape(%770, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
    %772 = @func_1719(%771) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) */;
    %773 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
    %774 = %773.6;
    %775 = cast(%774, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
    %776 = %767.0;
    %777 = %768.0;
    %778 = %772.1;
    %779 = atan(%775) /* ty=Tensor[(1, 45), float32] */;
    (%769, %776, %777, %778, %779)
  };
  %780() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */
}

def @func_10735() -> (Tensor[(9, 3, 4), bool],) {
  %782 = fn () -> (Tensor[(9, 3, 4), bool],) {
    %781 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
    (%781,)
  };
  %782() /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_12069() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  %787 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
    %783 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %784 = @func_11019() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
    %785 = %783.0;
    %786 = %784.0;
    (%785, %786)
  };
  %787() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) */
}

def @func_6424() -> (Tensor[(4, 1), float64],) {
  %790 = fn () -> (Tensor[(4, 1), float64],) {
    %788 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
    %789 = %788.0;
    (%789,)
  };
  %790() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_3591() -> (Tensor[(4, 1), float64],) {
  @func_3589() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_6642() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %791 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
  %792 = cast(meta[relay.Constant][45] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %793 = reshape(%792, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %794 = @func_2043(%793) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %795 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %796 = @func_3021() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %797 = %791.0;
  %798 = %794.1;
  %799 = %795.1;
  %800 = %796.1;
  (%797, %798, meta[relay.Constant][45] /* ty=Tensor[(288), uint64] */, %799, %800)
}

def @func_14305() -> (Tensor[(4, 1), float64], Tensor[(5, 6, 16), float64], Tensor[(4, 120), float64]) {
  %801 = @func_11019() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %802 = cast(meta[relay.Constant][46] /* ty=Tensor[(4, 120), float64] */, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %803 = reshape(%802, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), float64] */;
  %804 = @func_5627(%803) /* ty=(Tensor[(5, 6, 16), float64],) */;
  %805 = %801.1;
  %806 = %804.0;
  (%805, %806, meta[relay.Constant][46] /* ty=Tensor[(4, 120), float64] */)
}

def @func_14952(%var_14949: Tensor[(30), float64], %var_14950: Tensor[(1, 480), float64], %var_14951: Tensor[(336), float32]) -> (Tensor[(9, 3, 4), uint64], Tensor[(3, 7, 16), float32], Tensor[(30), float64], Tensor[(1, 480), float64], Tensor[(4), float64], Tensor[(336), float32]) {
  @func_14947(%var_14949, %var_14950, %var_14951) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(3, 7, 16), float32], Tensor[(30), float64], Tensor[(1, 480), float64], Tensor[(4), float64], Tensor[(336), float32]) */
}

def @func_7169() -> Tensor[(4, 1), float64] {
  %807 = fn () -> Tensor[(4, 1), float64] {
    @func_2160() /* ty=Tensor[(4, 1), float64] */
  };
  %807() /* ty=Tensor[(4, 1), float64] */
}

def @func_12918(%var_12916: Tensor[(208), float32], %var_12917: Tensor[(1, 2080), float64]) -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1, 2080), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(208), float32], Tensor[(45), float32], Tensor[(4, 1), float64]) {
  @func_12914(%var_12916, %var_12917) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1, 2080), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(208), float32], Tensor[(45), float32], Tensor[(4, 1), float64]) */
}

def @func_14397() -> (Tensor[(3, 6, 16), uint64],) {
  %809 = fn () -> (Tensor[(3, 6, 16), uint64],) {
    %808 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
    (%808,)
  };
  %809() /* ty=(Tensor[(3, 6, 16), uint64],) */
}

def @func_14642() -> Tensor[(288), uint64] {
  %810 = @func_10906() /* ty=(Tensor[(288), uint64],) */;
  %810.0
}

def @func_16469() -> (Tensor[(2, 16, ?), bool],) {
  %813 = fn () -> (Tensor[(2, 16, ?), bool],) {
    %811 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
    %812 = %811.1;
    (%812,)
  };
  %813() /* ty=(Tensor[(2, 16, ?), bool],) */
}

def @func_1460(%var_1458: Tensor[(4), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) {
  %814 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %815 = cast(%var_1458, dtype="float64") /* ty=Tensor[(4), float64] */;
  %816 = reshape(%815, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %817 = @func_39(%816) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %818 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %819 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %820 = %814.1;
  %821 = %817.1;
  (%818, %819, %820, %821, %var_1458)
}

def @func_10311(%var_10309: Tensor[(6, 4, 16), bool]) -> (Tensor[(6, 4, 16), float64], Tensor[(288), uint64], Tensor[(9, 3, 4), uint64]) {
  @func_10308(%var_10309) /* ty=(Tensor[(6, 4, 16), float64], Tensor[(288), uint64], Tensor[(9, 3, 4), uint64]) */
}

def @func_4768(%var_4767: Tensor[(2, 7, 11), float32]) -> (Tensor[(2, 7, 11), float32],) {
  %824 = fn (%var_4762: Tensor[(2, 7, 11), float32]) -> (Tensor[(2, 7, 11), float32],) {
    %822 = cast(%var_4762, dtype="float32") /* ty=Tensor[(2, 7, 11), float32] */;
    %823 = log(%822) /* ty=Tensor[(2, 7, 11), float32] */;
    (%823,)
  };
  %824(%var_4767) /* ty=(Tensor[(2, 7, 11), float32],) */
}

def @func_4149() -> Tensor[(9, 3, 4), uint64] {
  @func_3078() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_8904() -> (Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) {
  @func_8902() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) */
}

def @func_10578() -> Tensor[(9, 3, 4), uint64] {
  %826 = fn () -> Tensor[(9, 3, 4), uint64] {
    %825 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
    %825.0
  };
  %826() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_17890(%var_17889: Tensor[(36, 16), float64]) -> (Tensor[(15, 12, 9), uint16], Tensor[(9, 8, 8), float64], Tensor[(36, 16), float64]) {
  %833 = fn (%var_17876: Tensor[(36, 16), float64]) -> (Tensor[(15, 12, 9), uint16], Tensor[(9, 8, 8), float64], Tensor[(36, 16), float64]) {
    %827 = @func_9875() /* ty=(Tensor[(15, 12, 9), uint16],) */;
    %828 = cast(%var_17876, dtype="float64") /* ty=Tensor[(36, 16), float64] */;
    %829 = reshape(%828, newshape=[576]) /* ty=Tensor[(576), float64] */;
    %830 = @func_15554(%829) /* ty=(Tensor[(3, 84), float32], Tensor[(9, 8, 8), float64], Tensor[(576), float64], Tensor[(9, 3, 4), float32]) */;
    %831 = %827.0;
    %832 = %830.1;
    (%831, %832, %var_17876)
  };
  %833(%var_17889) /* ty=(Tensor[(15, 12, 9), uint16], Tensor[(9, 8, 8), float64], Tensor[(36, 16), float64]) */
}

def @func_6502(%var_6500: Tensor[(1200), float64], %var_6501: Tensor[(45), float32]) -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(9, 3, 4), float64], Tensor[(1, 45), float32], Tensor[(45), float32]) {
  @func_6498(%var_6500, %var_6501) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(9, 3, 4), float64], Tensor[(1, 45), float32], Tensor[(45), float32]) */
}

def @func_9490() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) {
  %837 = fn () -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) {
    %834 = @func_8737() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */;
    %835 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
    %836 = %834.0;
    (%835, %836)
  };
  %837() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */
}

def @func_10709(%var_10707: Tensor[(15, 12, 9), uint16]) -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), int16], Tensor[(15, 12, 9), float64]) {
  @func_10706(%var_10707) /* ty=(Tensor[(4, 1), float64], Tensor[(15, 12, 9), int16], Tensor[(15, 12, 9), float64]) */
}

def @func_3144(%var_3143: Tensor[(15, 12, 9), uint16]) -> (Tensor[(15, 12, 9), uint16],) {
  %841 = fn (%var_3135: Tensor[(15, 12, 9), uint16]) -> (Tensor[(15, 12, 9), uint16],) {
    %838 = cast(meta[relay.Constant][47] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %839 = cast(%var_3135, dtype="uint16") /* ty=Tensor[(15, 12, 9), uint16] */;
    %840 = subtract(%838, %839) /* ty=Tensor[(15, 12, 9), uint16] */;
    (%840,)
  };
  %841(%var_3143) /* ty=(Tensor[(15, 12, 9), uint16],) */
}

def @func_15460() -> (Tensor[(9, 3, 4), float32],) {
  %842 = @func_12050() /* ty=Tensor[(9, 3, 4), float32] */;
  (%842,)
}

def @func_9558() -> (Tensor[(9, 3, 4), float32],) {
  %845 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %843 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
    %844 = %843.1;
    (%844,)
  };
  %845() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_7724() -> (Tensor[(4, 1), float64],) {
  %848 = fn () -> (Tensor[(4, 1), float64],) {
    %846 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
    %847 = %846.0;
    (%847,)
  };
  %848() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_2329(%var_2327: Tensor[(1, 45), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) {
  @func_2326(%var_2327) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */
}

def @func_6307() -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) {
  @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */
}

def @func_1552() -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) {
  %857 = fn () -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) {
    %849 = cast(meta[relay.Constant][48] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
    %850 = reshape(%849, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
    %851 = @func_1248(%850) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
    %852 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
    %853 = cast(%852, dtype="uint64") /* ty=Tensor[(9, 3, 4), uint64] */;
    %854 = cast(meta[relay.Constant][48] /* ty=Tensor[(4), float64] */, dtype="uint64") /* ty=Tensor[(4), uint64] */;
    %855 = %851.2;
    %856 = subtract(%853, %854) /* ty=Tensor[(9, 3, 4), uint64] */;
    (%855, %856)
  };
  %857() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */
}

def @func_7124() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  %858 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %859 = @func_7039() /* ty=(Tensor[(4, 1), float64],) */;
  %860 = %858.0;
  %861 = %859.0;
  (%860, %861)
}

def @func_10950() -> (Tensor[(9, 3, 4), float32],) {
  %862 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %863 = %862.0;
  (%863,)
}

def @func_4627() -> Tensor[(9, 3, 4), uint64] {
  @func_3078() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_2326(%var_2269: Tensor[(1, 45), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) {
  %864 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %865 = cast(%var_2269, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
  %866 = reshape(%865, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %867 = @func_1874(%866) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */;
  %868 = cast(meta[relay.Constant][49] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %869 = reshape(%868, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
  %870 = @func_1782(%869) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
  %871 = %870.2;
  %872 = cast(%871, dtype="float64") /* ty=Tensor[(4), float64] */;
  %873 = reshape(%872, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %874 = @func_1248(%873) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %875 = %864.0;
  %876 = %867.1;
  %877 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %878 = %874.1;
  (%875, %876, %var_2269, %877, %871, meta[relay.Constant][49] /* ty=Tensor[(288), uint64] */, %878)
}

def @func_4324() -> (Tensor[(4, 1), float64],) {
  %881 = fn () -> (Tensor[(4, 1), float64],) {
    %879 = @func_3405() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
    %880 = %879.0;
    (%880,)
  };
  %881() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_8052(%var_8012: uint64, %var_8018: Tensor[(4), float64], %var_8035: Tensor[(336), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(4, 1), float64], Tensor[(3, 7, 16), float32], Tensor[(336), float32]) {
  %882 = @func_4754() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) */;
  %883 = @func_2096() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */;
  %884 = cast(meta[relay.Constant][50] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %885 = reshape(%884, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
  %886 = cast(%var_8012, dtype="uint64") /* ty=uint64 */;
  %887 = cast(meta[relay.Constant][51] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %888 = reshape(%886, newshape=[]) /* ty=uint64 */;
  %889 = reshape(%887, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %890 = @func_2407(%888, %889) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %891 = cast(%var_8018, dtype="float64") /* ty=Tensor[(4), float64] */;
  %892 = reshape(%891, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %893 = @func_39(%892) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %894 = cast(%var_8035, dtype="float32") /* ty=Tensor[(336), float32] */;
  %895 = reshape(%894, newshape=[3, 7, 16]) /* ty=Tensor[(3, 7, 16), float32] */;
  %896 = %882.1;
  %897 = %883.4;
  %898 = @func_3928(%885) /* ty=Tensor[(15, 5, 16), float64] */;
  %899 = %890.0;
  %900 = %893.1;
  %901 = @func_7743() /* ty=Tensor[(4, 1), float64] */;
  %902 = @func_7089(%895) /* ty=Tensor[(3, 7, 16), float32] */;
  (%896, %897, %898, meta[relay.Constant][50] /* ty=Tensor[(1200), float64] */, %899, %var_8012, meta[relay.Constant][51] /* ty=Tensor[(32), uint64] */, %900, %var_8018, %901, %902, %var_8035)
}

def @func_7320() -> (Tensor[(4, 1), float64],) {
  %903 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
  %904 = %903.0;
  (%904,)
}

def @func_4754() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) {
  %905 = cast(meta[relay.Constant][52] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %906 = reshape(%905, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %907 = @func_1248(%906) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) */;
  %908 = cast(meta[relay.Constant][53] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
  %909 = reshape(%908, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
  %910 = @func_3142(%909) /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %911 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %912 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  %913 = %907.0;
  %914 = %910.0;
  %915 = %911.0;
  (%912, %913, meta[relay.Constant][52] /* ty=Tensor[(4), float64] */, %914, meta[relay.Constant][53] /* ty=Tensor[(1620), uint16] */, %915)
}

def @func_4784() -> (Tensor[(3, 6, 16), uint64],) {
  @func_4782() /* ty=(Tensor[(3, 6, 16), uint64],) */
}

def @func_12136() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %920 = fn () -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
    %916 = @func_4648() /* ty=(Tensor[(4, 1), float64],) */;
    %917 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
    %918 = %916.0;
    %919 = %917.0;
    (%918, %919)
  };
  %920() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_11661(%var_11660: Tensor[(320), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 3, 1), float32], Tensor[(16, 4, 5), bool], Tensor[(320), float32], Tensor[(9, 3, 4), float32]) {
  %934 = fn (%var_11645: Tensor[(320), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 3, 1), float32], Tensor[(16, 4, 5), bool], Tensor[(320), float32], Tensor[(9, 3, 4), float32]) {
    %921 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
    %922 = @func_5269() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %923 = @func_4841() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) */;
    %924 = cast(%var_11645, dtype="float32") /* ty=Tensor[(320), float32] */;
    %925 = reshape(%924, newshape=[16, 4, 5]) /* ty=Tensor[(16, 4, 5), float32] */;
    %926 = @func_11571() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %927 = %921.1;
    %928 = %922.0;
    %929 = @func_7168() /* ty=Tensor[(4, 1), float64] */;
    %930 = @func_6776() /* ty=Tensor[(4, 1), float64] */;
    %931 = %923.1;
    %932 = @func_10775(%925) /* ty=Tensor[(16, 4, 5), bool] */;
    %933 = %926.0;
    (%927, %928, %929, %930, %931, %932, %var_11645, %933)
  };
  %934(%var_11660) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 3, 1), float32], Tensor[(16, 4, 5), bool], Tensor[(320), float32], Tensor[(9, 3, 4), float32]) */
}

def @func_3406() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %938 = fn () -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
    %935 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
    %936 = %935.0;
    %937 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
    (%936, %937)
  };
  %938() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_8676() -> Tensor[(9, 3, 4), uint64] {
  %940 = fn () -> Tensor[(9, 3, 4), uint64] {
    %939 = @func_4562() /* ty=(Tensor[(9, 3, 4), uint64],) */;
    %939.0
  };
  %940() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_8995() -> (Tensor[(9, 3, 4), float32], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) {
  %946 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) {
    %941 = @func_3021() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
    %942 = cast(meta[relay.Constant][54] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %943 = reshape(%942, newshape=[7, 6, 4]) /* ty=Tensor[(7, 6, 4), float64] */;
    %944 = %941.1;
    %945 = @func_7700(%943) /* ty=Tensor[(7, 6, 4), float64] */;
    (%944, %945, meta[relay.Constant][54] /* ty=Tensor[(168), float64] */)
  };
  %946() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) */
}

def @func_14947(%var_14940: Tensor[(30), float64], %var_14941: Tensor[(1, 480), float64], %var_14943: Tensor[(336), float32]) -> (Tensor[(9, 3, 4), uint64], Tensor[(3, 7, 16), float32], Tensor[(30), float64], Tensor[(1, 480), float64], Tensor[(4), float64], Tensor[(336), float32]) {
  %947 = @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %948 = cast(%var_14940, dtype="float64") /* ty=Tensor[(30), float64] */;
  %949 = cast(%var_14941, dtype="float64") /* ty=Tensor[(1, 480), float64] */;
  %950 = cast(meta[relay.Constant][55] /* ty=Tensor[(4), float64] */, dtype="float64") /* ty=Tensor[(4), float64] */;
  %951 = cast(%var_14943, dtype="float32") /* ty=Tensor[(336), float32] */;
  %952 = reshape(%948, newshape=[6, 5, 1]) /* ty=Tensor[(6, 5, 1), float64] */;
  %953 = reshape(%949, newshape=[6, 5, 16]) /* ty=Tensor[(6, 5, 16), float64] */;
  %954 = reshape(%950, newshape=[2, 2]) /* ty=Tensor[(2, 2), float64] */;
  %955 = reshape(%951, newshape=[1, 336]) /* ty=Tensor[(1, 336), float32] */;
  %956 = @func_13362(%952, %953, %954, %955) /* ty=(Tensor[(6, 5, 1), float64], Tensor[(6, 5, 16), bool], Tensor[(3, 7, 16), float32], uint64, Tensor[(2, 2), float64], Tensor[(1, 336), float32]) */;
  %957 = %947.0;
  %958 = %956.2;
  (%957, %958, %var_14940, %var_14941, meta[relay.Constant][55] /* ty=Tensor[(4), float64] */, %var_14943)
}

def @func_2227() -> (Tensor[(9, 3, 4), float32],) {
  @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_10324(%var_10322: Tensor[(7, 234), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 14, 13), float32], Tensor[(7, 234), float32]) {
  @func_10321(%var_10322) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(9, 14, 13), float32], Tensor[(7, 234), float32]) */
}

def @func_15462() -> (Tensor[(9, 3, 4), float32],) {
  @func_15460() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_13780(%var_13759: Tensor[(288), uint64], %var_13760: Tensor[(45), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(45, 1), float32], uint64, Tensor[(288), uint64], Tensor[(45), float32], Tensor[(4, 1), float64]) {
  %959 = cast(meta[relay.Constant][56] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %960 = cast(%var_13759, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %961 = cast(%var_13760, dtype="float32") /* ty=Tensor[(45), float32] */;
  %962 = reshape(%959, newshape=[]) /* ty=uint64 */;
  %963 = reshape(%960, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
  %964 = reshape(%961, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
  %965 = @func_954(%962, %963, %964) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
  %966 = @func_8466() /* ty=Tensor[(9, 3, 4), float32] */;
  %967 = %965.2;
  %968 = @func_13416() /* ty=Tensor[(4, 1), float64] */;
  (%966, %967, meta[relay.Constant][56] /* ty=uint64 */, %var_13759, %var_13760, %968)
}

def @func_11760(%var_11758: Tensor[(12, 1, 15), float32]) -> (Tensor[(12, 1, 15), float32], Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), uint64]) {
  @func_11757(%var_11758) /* ty=(Tensor[(12, 1, 15), float32], Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), uint64]) */
}

def @func_12736() -> (Tensor[(9, 3, 4), bool],) {
  %971 = fn () -> (Tensor[(9, 3, 4), bool],) {
    %969 = @func_8134() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %970 = %969.0;
    (%970,)
  };
  %971() /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_6030(%var_6028: uint64, %var_6029: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(9, 3, 4), float32]) {
  %988 = fn (%var_5981: uint64, %var_5982: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(9, 3, 4), float32]) {
    %972 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %973 = cast(%var_5981, dtype="uint64") /* ty=uint64 */;
    %974 = cast(%var_5982, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %975 = reshape(%973, newshape=[]) /* ty=uint64 */;
    %976 = reshape(%974, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %977 = @func_2855(%975, %976) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
    %978 = @func_2433() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %979 = cast(meta[relay.Constant][57] /* ty=Tensor[(1200), float64] */, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %980 = reshape(%979, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
    %981 = @func_5810(%980) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
    %982 = %972.0;
    %983 = @func_4627() /* ty=Tensor[(9, 3, 4), uint64] */;
    %984 = %977.1;
    %985 = %978.0;
    %986 = %981.5;
    %987 = @func_5336() /* ty=Tensor[(9, 3, 4), float32] */;
    (%982, %983, %984, %var_5981, %var_5982, %985, %986, meta[relay.Constant][57] /* ty=Tensor[(1200), float64] */, %987)
  };
  %988(%var_6028, %var_6029) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(1200), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_8359() -> (Tensor[(9, 3, 4), float32],) {
  %991 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %989 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %990 = %989.0;
    (%990,)
  };
  %991() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_8840() -> Tensor[(4, 1), float64] {
  @func_8838() /* ty=Tensor[(4, 1), float64] */
}

def @func_2974() -> Tensor[(4, 1), float64] {
  %992 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %992.0
}

def @func_17972(%var_17971: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32], Tensor[(120), uint16], Tensor[(4, 32), uint32], Tensor[(9, 3, 4), float32], Tensor[(4, 32), bool], uint64) {
  %1013 = fn (%var_17927: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32], Tensor[(120), uint16], Tensor[(4, 32), uint32], Tensor[(9, 3, 4), float32], Tensor[(4, 32), bool], uint64) {
    %993 = @func_14594() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(288), uint64], Tensor[(288), uint64], Tensor[(3, 6, 16), float32]) */;
    %994 = @func_4997() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float64]) */;
    %995 = %994.0;
    %996 = cast(%var_17927, dtype="uint32") /* ty=Tensor[(32), uint32] */;
    %997 = cast(%995, dtype="uint32") /* ty=Tensor[(4, 1), uint32] */;
    %998 = cast(%var_17927, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %999 = cast(meta[relay.Constant][58] /* ty=Tensor[(120), uint16] */, dtype="uint16") /* ty=Tensor[(120), uint16] */;
    %1000 = reshape(%998, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %1001 = reshape(%999, newshape=[60, 2]) /* ty=Tensor[(60, 2), uint16] */;
    %1002 = @func_17390(%1000, %1001) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(1, 15, 8), uint16], Tensor[(60, 2), uint16], Tensor[(15, 12, 9), uint16], Tensor[(1, 1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(4, 32), float32]) */;
    %1003 = %1002.6;
    %1004 = cast(%1003, dtype="bool") /* ty=Tensor[(4, 32), bool] */;
    %1005 = cast(%var_17927, dtype="bool") /* ty=Tensor[(32), bool] */;
    %1006 = @func_13848() /* ty=(Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) */;
    %1007 = @func_16274() /* ty=Tensor[(9, 3, 4), float32] */;
    %1008 = %993.3;
    %1009 = bitwise_and(%996, %997) /* ty=Tensor[(4, 32), uint32] */;
    %1010 = @func_9185() /* ty=Tensor[(9, 3, 4), float32] */;
    %1011 = logical_or(%1004, %1005) /* ty=Tensor[(4, 32), bool] */;
    %1012 = %1006.1;
    (%1007, %1008, meta[relay.Constant][58] /* ty=Tensor[(120), uint16] */, %1009, %1010, %1011, %1012)
  };
  %1013(%var_17971) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32], Tensor[(120), uint16], Tensor[(4, 32), uint32], Tensor[(9, 3, 4), float32], Tensor[(4, 32), bool], uint64) */
}

def @func_13448() -> Tensor[(4, 1), float64] {
  %1014 = @func_13145() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1014.1
}

def @func_3762(%var_3760: uint64, %var_3761: Tensor[(32), uint64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) {
  @func_3758(%var_3760, %var_3761) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) */
}

def @func_3462() -> (Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */
}

def @func_14476() -> Tensor[(4, 1), float64] {
  %1015 = @func_8902() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) */;
  %1015.1
}

def @func_11075() -> Tensor[(9, 3, 4), float32] {
  @func_11073() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_14140() -> (Tensor[(4, 1), float64],) {
  @func_14138() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_1741() -> (Tensor[(9, 3, 4), float32],) {
  %1018 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %1016 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
    %1017 = %1016.1;
    (%1017,)
  };
  %1018() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_9662() -> (Tensor[(9, 3, 4), uint64],) {
  @func_9660() /* ty=(Tensor[(9, 3, 4), uint64],) */
}

def @func_4133() -> Tensor[(9, 3, 4), float32] {
  @func_4131() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_14644() -> Tensor[(288), uint64] {
  @func_14642() /* ty=Tensor[(288), uint64] */
}

def @func_3952(%var_3948: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) {
  %1019 = cast(meta[relay.Constant][59] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1020 = cast(%var_3948, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %1021 = reshape(%1019, newshape=[]) /* ty=uint64 */;
  %1022 = reshape(%1020, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %1023 = @func_3758(%1021, %1022) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) */;
  %1024 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %1025 = %1023.1;
  (%1024, %1025, meta[relay.Constant][59] /* ty=uint64 */, %var_3948)
}

def @func_15821() -> (Tensor[(9, 3, 4), float32],) {
  @func_15819() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_4131() -> Tensor[(9, 3, 4), float32] {
  %1026 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1026.0
}

def @func_7322() -> (Tensor[(4, 1), float64],) {
  @func_7320() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_15131() -> (uint64, Tensor[(9, 3, 4), float32]) {
  @func_15129() /* ty=(uint64, Tensor[(9, 3, 4), float32]) */
}

def @func_4261() -> Tensor[(9, 3, 4), float64] {
  %1027 = @func_3021() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %1028 = %1027.1;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(9, 3, 4), float64] */;
  atanh(%1029) /* ty=Tensor[(9, 3, 4), float64] */
}

def @func_7204() -> Tensor[(9, 3, 4), uint64] {
  %1031 = fn () -> Tensor[(9, 3, 4), uint64] {
    %1030 = @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */;
    %1030.0
  };
  %1031() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_12444(%var_12428: Tensor[(8, 2, 11), float32]) -> (Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) {
  %1032 = cast(%var_12428, dtype="float32") /* ty=Tensor[(8, 2, 11), float32] */;
  %1033 = cast(meta[relay.Constant][60] /* ty=Tensor[(728), bool] */, dtype="bool") /* ty=Tensor[(728), bool] */;
  %1034 = reshape(%1033, newshape=[728]) /* ty=Tensor[(728), bool] */;
  %1035 = @func_11416(%1034) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) */;
  %1036 = rsqrt(%1032) /* ty=Tensor[(8, 2, 11), float32] */;
  %1037 = %1035.0;
  (%1036, %1037, meta[relay.Constant][60] /* ty=Tensor[(728), bool] */)
}

def @func_10840() -> (Tensor[(45), float32],) {
  %1040 = fn () -> (Tensor[(45), float32],) {
    %1038 = @func_9027() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64]) */;
    %1039 = %1038.1;
    (%1039,)
  };
  %1040() /* ty=(Tensor[(45), float32],) */
}

def @func_8522() -> Tensor[(4, 1), float64] {
  @func_7743() /* ty=Tensor[(4, 1), float64] */
}

def @func_4629() -> Tensor[(9, 3, 4), uint64] {
  @func_4627() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_6498(%var_6444: Tensor[(1200), float64], %var_6478: Tensor[(45), float32]) -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1200), float64], Tensor[(9, 3, 4), float64], Tensor[(1, 45), float32], Tensor[(45), float32]) {
  %1041 = @func_5240() /* ty=(Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) */;
  %1042 = cast(%var_6444, dtype="float64") /* ty=Tensor[(1200), float64] */;
  %1043 = reshape(%1042, newshape=[1200]) /* ty=Tensor[(1200), float64] */;
  %1044 = @func_5810(%1043) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */;
  %1045 = @func_4754() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) */;
  %1046 = %1045.1;
  %1047 = cast(%1046, dtype="float64") /* ty=Tensor[(9, 3, 4), float64] */;
  %1048 = cast(%var_6478, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1049 = reshape(%1048, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
  %1050 = @func_2326(%1049) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
  %1051 = %1041.3;
  %1052 = %1044.0;
  %1053 = sigmoid(%1047) /* ty=Tensor[(9, 3, 4), float64] */;
  %1054 = %1050.2;
  (%1051, %1052, %var_6444, %1053, %1054, %var_6478)
}

def @func_5269() -> (Tensor[(9, 3, 4), float32],) {
  %1055 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1056 = %1055.0;
  (%1056,)
}

def @func_4756() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) {
  @func_4754() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32]) */
}

def @func_4564() -> (Tensor[(9, 3, 4), uint64],) {
  @func_4562() /* ty=(Tensor[(9, 3, 4), uint64],) */
}

def @func_9223(%var_9221: uint64, %var_9222: Tensor[(32), uint64]) -> (Tensor[(3, 11, 9), float64], Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64]) {
  %1067 = fn (%var_9216: uint64, %var_9217: Tensor[(32), uint64]) -> (Tensor[(3, 11, 9), float64], Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64]) {
    %1057 = cast(meta[relay.Constant][61] /* ty=Tensor[(3, 11, 9), float64] */, dtype="float64") /* ty=Tensor[(3, 11, 9), float64] */;
    %1058 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
    %1059 = cast(%var_9216, dtype="uint64") /* ty=uint64 */;
    %1060 = cast(%var_9217, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %1061 = reshape(%1059, newshape=[]) /* ty=uint64 */;
    %1062 = reshape(%1060, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %1063 = @func_2672(%1061, %1062) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
    %1064 = log2(%1057) /* ty=Tensor[(3, 11, 9), float64] */;
    %1065 = %1058.1;
    %1066 = %1063.2;
    (%1064, %1065, %1066, %var_9216, %var_9217)
  };
  %1067(%var_9221, %var_9222) /* ty=(Tensor[(3, 11, 9), float64], Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64]) */
}

def @func_10489() -> (Tensor[(9, 3, 4), float32], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), bool]) {
  @func_10487() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), bool]) */
}

def @func_10448() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) {
  %1073 = fn () -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) {
    %1068 = @func_3228() /* ty=(Tensor[(4, 1), float64],) */;
    %1069 = @func_5831() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) */;
    %1070 = %1068.0;
    %1071 = @func_4875() /* ty=Tensor[(4, 1), float64] */;
    %1072 = %1069.1;
    (%1070, %1071, %1072)
  };
  %1073() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */
}

def @func_2434() -> (Tensor[(9, 3, 4), float32],) {
  %1076 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %1074 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1075 = %1074.0;
    (%1075,)
  };
  %1076() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_1463(%var_1461: Tensor[(4), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) {
  @func_1460(%var_1461) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) */
}

def @func_4274() -> Tensor[(4, 1), float64] {
  %1077 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
  %1077.0
}

def @func_7091(%var_7090: Tensor[(3, 7, 16), float32]) -> Tensor[(3, 7, 16), float32] {
  %1079 = fn (%var_7086: Tensor[(3, 7, 16), float32]) -> Tensor[(3, 7, 16), float32] {
    %1078 = cast(%var_7086, dtype="float32") /* ty=Tensor[(3, 7, 16), float32] */;
    log10(%1078) /* ty=Tensor[(3, 7, 16), float32] */
  };
  %1079(%var_7090) /* ty=Tensor[(3, 7, 16), float32] */
}

def @func_14440() -> Tensor[(9, 3, 4), float32] {
  %1080 = @func_6820() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1080.0
}

def @func_14754() -> Tensor[(4, 1), float64] {
  @func_14752() /* ty=Tensor[(4, 1), float64] */
}

def @func_16097() -> (uint64,) {
  %1081 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1082 = %1081.2;
  (%1082,)
}

def @func_7519(%var_7507: Tensor[(4), float64]) -> (Tensor[(3, 6, 16), uint64], Tensor[(?, 2, 2), float32], Tensor[(4), float64]) {
  %1083 = cast(%var_7507, dtype="float64") /* ty=Tensor[(4), float64] */;
  %1084 = reshape(%1083, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %1085 = @func_39(%1084) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %1086 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  %1087 = %1085.0;
  (%1086, %1087, %var_7507)
}

def @func_13401(%var_13400: Tensor[(16, 9, 11), float64]) -> (Tensor[(16, 9, 11), float32], Tensor[(4, 1), float64]) {
  %1097 = fn (%var_13371: Tensor[(16, 9, 11), float64]) -> (Tensor[(16, 9, 11), float32], Tensor[(4, 1), float64]) {
    %1088 = cast(%var_13371, dtype="float64") /* ty=Tensor[(16, 9, 11), float64] */;
    %1089 = asinh(%1088) /* ty=Tensor[(16, 9, 11), float64] */;
    %1090 = cast(%var_13371, dtype="float32") /* ty=Tensor[(16, 9, 11), float32] */;
    %1091 = shape_of(%1089, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1092 = cast(%1089, dtype="float32") /* ty=Tensor[(16, 9, 11), float32] */;
    %1093 = dyn.reshape(%1090, %1091, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1094 = @func_5390() /* ty=(Tensor[(4, 1), float64],) */;
    %1095 = mod(%1092, %1093) /* ty=Tensor[(16, 9, 11), float32] */;
    %1096 = %1094.0;
    (%1095, %1096)
  };
  %1097(%var_13400) /* ty=(Tensor[(16, 9, 11), float32], Tensor[(4, 1), float64]) */
}

def @func_3955(%var_3953: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) {
  @func_3952(%var_3953) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], uint64, Tensor[(32), uint64]) */
}

def @func_3130(%var_3128: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
  @func_3127(%var_3128) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */
}

def @func_8182() -> (Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) {
  %1098 = cast(meta[relay.Constant][62] /* ty=int16 */, dtype="bool") /* ty=bool */;
  %1099 = cast(meta[relay.Constant][63] /* ty=Tensor[(16, 10, 16), int16] */, dtype="bool") /* ty=Tensor[(16, 10, 16), bool] */;
  %1100 = @func_8134() /* ty=(Tensor[(9, 3, 4), bool],) */;
  %1101 = less_equal(%1098, %1099) /* ty=Tensor[(16, 10, 16), bool] */;
  %1102 = %1100.0;
  (%1101, %1102)
}

def @func_15150() -> Tensor[(4), float64] {
  @func_15148() /* ty=Tensor[(4), float64] */
}

def @func_13909() -> Tensor[(9, 3, 4), float32] {
  %1104 = fn () -> Tensor[(9, 3, 4), float32] {
    %1103 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1103.0
  };
  %1104() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_16490() -> (Tensor[(9, 3, 4), float32],) {
  @func_16488() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_954(%var_929: uint64, %var_930: Tensor[(3, 6, 16), uint64], %var_950: Tensor[(45, 1), float32]) -> (Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) {
  %1105 = cast(%var_929, dtype="uint64") /* ty=uint64 */;
  %1106 = cast(%var_930, dtype="uint64") /* ty=Tensor[(3, 6, 16), uint64] */;
  %1107 = cast(%var_950, dtype="float32") /* ty=Tensor[(45, 1), float32] */;
  %1108 = reshape(%1107, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
  %1109 = @func_130(%1108) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
  %1110 = add(%1105, %1106) /* ty=Tensor[(3, 6, 16), uint64] */;
  %1111 = %1109.0;
  (%1110, %1111, %var_950)
}

def @func_3930(%var_3929: Tensor[(15, 5, 16), float64]) -> Tensor[(15, 5, 16), float64] {
  %1113 = fn (%var_3911: Tensor[(15, 5, 16), float64]) -> Tensor[(15, 5, 16), float64] {
    %1112 = cast(%var_3911, dtype="float64") /* ty=Tensor[(15, 5, 16), float64] */;
    log2(%1112) /* ty=Tensor[(15, 5, 16), float64] */
  };
  %1113(%var_3929) /* ty=Tensor[(15, 5, 16), float64] */
}

def @func_16047(%var_16045: Tensor[(176), float32]) -> (Tensor[(4, 1), float64], Tensor[(728), bool], Tensor[(176), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float32]) {
  @func_16044(%var_16045) /* ty=(Tensor[(4, 1), float64], Tensor[(728), bool], Tensor[(176), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float32]) */
}

def @func_17587(%var_17533: Tensor[(14, 14, 11), uint16], %var_17534: Tensor[(14, 14, 11), uint16]) -> (Tensor[(4, 1), float64], Tensor[(14, 14, 11), float64], Tensor[(3, 84), float32], Tensor[(14, 14, 11), float64]) {
  %1114 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %1115 = cast(%var_17534, dtype="uint16") /* ty=Tensor[(14, 14, 11), uint16] */;
  %1116 = shape_of(%var_17533, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1117 = cast(%var_17533, dtype="uint16") /* ty=Tensor[(14, 14, 11), uint16] */;
  %1118 = dyn.reshape(%1115, %1116, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1119 = bitwise_or(%1117, %1118) /* ty=Tensor[(14, 14, 11), uint16] */;
  %1120 = cast(%1119, dtype="float32") /* ty=Tensor[(14, 14, 11), float32] */;
  %1121 = acosh(%1120) /* ty=Tensor[(14, 14, 11), float32] */;
  %1122 = cast(%var_17533, dtype="float64") /* ty=Tensor[(14, 14, 11), float64] */;
  %1123 = shape_of(%1121, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(%1121, dtype="float64") /* ty=Tensor[(14, 14, 11), float64] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1126 = @func_16393() /* ty=(Tensor[(4, 1), float64], Tensor[(3, 84), float32]) */;
  %1127 = cast(%1119, dtype="float64") /* ty=Tensor[(14, 14, 11), float64] */;
  %1128 = %1114.0;
  %1129 = floor_divide(%1124, %1125) /* ty=Tensor[(14, 14, 11), float64] */;
  %1130 = %1126.1;
  %1131 = tan(%1127) /* ty=Tensor[(14, 14, 11), float64] */;
  (%1128, %1129, %1130, %1131)
}

def @func_16603() -> (Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) {
  @func_16601() /* ty=(Tensor[(9, 3, 4), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) */
}

def @func_16644() -> (Tensor[(4, 1), float64],) {
  @func_16642() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_17798() -> (Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) {
  @func_17796() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) */
}

def @func_9997() -> uint64 {
  %1133 = fn () -> uint64 {
    %1132 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
    %1132.3
  };
  %1133() /* ty=uint64 */
}

def @func_10018(%var_10016: float64, %var_10017: Tensor[(10, 1, 15), float64]) -> (Tensor[(10, 1, 15), float64],) {
  @func_10014(%var_10016, %var_10017) /* ty=(Tensor[(10, 1, 15), float64],) */
}

def @func_14892() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
  %1136 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) {
    %1134 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
    %1135 = @func_5486() /* ty=Tensor[(9, 3, 4), float32] */;
    (%1134, %1135)
  };
  %1136() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */
}

def @func_2533(%var_2532: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) {
  %1147 = fn (%var_2517: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) {
    %1137 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1138 = cast(%var_2517, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %1139 = reshape(%1138, newshape=[4, 72]) /* ty=Tensor[(4, 72), uint64] */;
    %1140 = @func_1782(%1139) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(?, 2, 2), float32], Tensor[(4), float64], Tensor[(3, 6, 16), uint64], uint64, Tensor[(4, 72), uint64], Tensor[(45), float32]) */;
    %1141 = %1140.6;
    %1142 = cast(%1141, dtype="float32") /* ty=Tensor[(45), float32] */;
    %1143 = reshape(%1142, newshape=[15, 3, 1]) /* ty=Tensor[(15, 3, 1), float32] */;
    %1144 = @func_130(%1143) /* ty=(Tensor[(15, 3, 1), float32], Tensor[(15, 3, 1), float64]) */;
    %1145 = %1137.0;
    %1146 = %1144.1;
    (%1145, %1141, %var_2517, %1146)
  };
  %1147(%var_2532) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */
}

def @func_4312() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) {
  @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */
}

def @func_11115() -> Tensor[(1, 32), uint64] {
  %1149 = fn () -> Tensor[(1, 32), uint64] {
    %1148 = @func_6961() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */;
    %1148.4
  };
  %1149() /* ty=Tensor[(1, 32), uint64] */
}

def @func_6962() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) {
  %1159 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) {
    %1150 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %1151 = cast(meta[relay.Constant][64] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1152 = cast(meta[relay.Constant][65] /* ty=Tensor[(1, 32), uint64] */, dtype="uint64") /* ty=Tensor[(1, 32), uint64] */;
    %1153 = reshape(%1151, newshape=[]) /* ty=uint64 */;
    %1154 = reshape(%1152, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %1155 = @func_2855(%1153, %1154) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
    %1156 = @func_4131() /* ty=Tensor[(9, 3, 4), float32] */;
    %1157 = %1150.0;
    %1158 = %1155.4;
    (%1156, %1157, %1158, meta[relay.Constant][64] /* ty=uint64 */, meta[relay.Constant][65] /* ty=Tensor[(1, 32), uint64] */)
  };
  %1159() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(32), uint64], uint64, Tensor[(1, 32), uint64]) */
}

def @func_2955() -> (Tensor[(9, 3, 4), uint64],) {
  @func_2953() /* ty=(Tensor[(9, 3, 4), uint64],) */
}

def @func_3080() -> Tensor[(9, 3, 4), uint64] {
  @func_3078() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_5488() -> Tensor[(9, 3, 4), float32] {
  @func_5486() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_13199() -> (Tensor[(4, 1), float64], uint64, Tensor[(9, 3, 4), float32]) {
  @func_13197() /* ty=(Tensor[(4, 1), float64], uint64, Tensor[(9, 3, 4), float32]) */
}

def @func_17471() -> (Tensor[(4, 1), float64],) {
  %1160 = @func_9406() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1161 = %1160.0;
  (%1161,)
}

def @func_5534(%var_5532: Tensor[(45), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) {
  %1162 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %1163 = cast(%var_5532, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1164 = reshape(%1163, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
  %1165 = @func_2326(%1164) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
  %1166 = %1162.1;
  %1167 = %1165.1;
  (%1166, %1167, %var_5532)
}

def @func_10706(%var_10685: Tensor[(15, 12, 9), uint16]) -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), int16], Tensor[(15, 12, 9), float64]) {
  %1168 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1169 = @func_9875() /* ty=(Tensor[(15, 12, 9), uint16],) */;
  %1170 = %1169.0;
  %1171 = cast(%1170, dtype="int16") /* ty=Tensor[(15, 12, 9), int16] */;
  %1172 = shape_of(%var_10685, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1173 = cast(%var_10685, dtype="int16") /* ty=Tensor[(15, 12, 9), int16] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1175 = cast(%var_10685, dtype="int64") /* ty=Tensor[(15, 12, 9), int64] */;
  %1176 = shape_of(%1170, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1177 = cast(%1170, dtype="int64") /* ty=Tensor[(15, 12, 9), int64] */;
  %1178 = dyn.reshape(%1175, %1176, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1179 = add(%1177, %1178) /* ty=Tensor[(15, 12, 9), int64] */;
  %1180 = cast(%1179, dtype="float64") /* ty=Tensor[(15, 12, 9), float64] */;
  %1181 = %1168.0;
  %1182 = bitwise_or(%1173, %1174) /* ty=Tensor[(15, 12, 9), int16] */;
  %1183 = cos(%1180) /* ty=Tensor[(15, 12, 9), float64] */;
  (%1181, %1182, %1183)
}

def @func_5486() -> Tensor[(9, 3, 4), float32] {
  %1184 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %1184.2
}

def @func_9407() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %1189 = fn () -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
    %1185 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
    %1186 = @func_2725() /* ty=(Tensor[(4, 1), float64],) */;
    %1187 = %1185.1;
    %1188 = %1186.0;
    (%1187, %1188)
  };
  %1189() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_7587() -> (Tensor[(4, 1), float64],) {
  @func_7585() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_11696(%var_11694: Tensor[(1200), float64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(1200), float64], Tensor[(1200), float64]) {
  @func_11693(%var_11694) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(1200), float64], Tensor[(1200), float64]) */
}

def @func_12680(%var_12678: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), int64], Tensor[(32), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], uint64) {
  @func_12677(%var_12678) /* ty=(Tensor[(9, 3, 4), int64], Tensor[(32), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], uint64) */
}

def @func_5627(%var_5617: Tensor[(5, 6, 16), float64]) -> (Tensor[(5, 6, 16), float64],) {
  %1190 = cast(%var_5617, dtype="float64") /* ty=Tensor[(5, 6, 16), float64] */;
  %1191 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(5, 6, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1192 = cast(meta[relay.Constant][66] /* ty=Tensor[(5, 6, 16), float64] */, dtype="float64") /* ty=Tensor[(5, 6, 16), float64] */;
  %1193 = dyn.reshape(%1190, %1191, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1194 = floor_divide(%1192, %1193) /* ty=Tensor[(5, 6, 16), float64] */;
  (%1194,)
}

def @func_13849() -> (Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) {
  %1201 = fn () -> (Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) {
    %1195 = @func_8182() /* ty=(Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) */;
    %1196 = cast(meta[relay.Constant][67] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %1197 = reshape(%1196, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %1198 = @func_12677(%1197) /* ty=(Tensor[(9, 3, 4), int64], Tensor[(32), uint64], uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], uint64) */;
    %1199 = %1195.1;
    %1200 = %1198.2;
    (%1199, %1200, meta[relay.Constant][67] /* ty=Tensor[(32), uint64] */)
  };
  %1201() /* ty=(Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) */
}

def @func_9067() -> Tensor[(288), uint64] {
  @func_9065() /* ty=Tensor[(288), uint64] */
}

def @func_16488() -> (Tensor[(9, 3, 4), float32],) {
  %1202 = @func_13309() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1203 = %1202.0;
  (%1203,)
}

def @func_3758(%var_3724: uint64, %var_3725: Tensor[(32), uint64]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) {
  %1204 = @func_3405() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1205 = cast(%var_3724, dtype="uint64") /* ty=uint64 */;
  %1206 = cast(%var_3725, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %1207 = reshape(%1205, newshape=[]) /* ty=uint64 */;
  %1208 = reshape(%1206, newshape=[32]) /* ty=Tensor[(32), uint64] */;
  %1209 = @func_2672(%1207, %1208) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1210 = @func_3460() /* ty=(Tensor[(1, 45), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */;
  %1211 = %1204.0;
  %1212 = @func_3305() /* ty=Tensor[(9, 3, 4), float32] */;
  %1213 = %1209.1;
  %1214 = %1210.1;
  (%1211, %1212, %1213, %var_3724, %var_3725, %1214)
}

def @func_6084() -> (Tensor[(4, 1), float64],) {
  @func_6082() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_9164() -> (Tensor[(3, 6, 16), float32],) {
  %1215 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %1216 = %1215.3;
  %1217 = cast(%1216, dtype="float32") /* ty=Tensor[(3, 6, 16), float32] */;
  %1218 = cos(%1217) /* ty=Tensor[(3, 6, 16), float32] */;
  (%1218,)
}

def @func_13510() -> (Tensor[(9, 3, 4), float32],) {
  %1221 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %1219 = @func_11259() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
    %1220 = %1219.0;
    (%1220,)
  };
  %1221() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_13367(%var_13363: Tensor[(6, 5, 1), float64], %var_13364: Tensor[(6, 5, 16), float64], %var_13365: Tensor[(2, 2), float64], %var_13366: Tensor[(1, 336), float32]) -> (Tensor[(6, 5, 1), float64], Tensor[(6, 5, 16), bool], Tensor[(3, 7, 16), float32], uint64, Tensor[(2, 2), float64], Tensor[(1, 336), float32]) {
  %1235 = fn (%var_13339: Tensor[(6, 5, 1), float64], %var_13345: Tensor[(6, 5, 16), float64], %var_13353: Tensor[(2, 2), float64], %var_13354: Tensor[(1, 336), float32]) -> (Tensor[(6, 5, 1), float64], Tensor[(6, 5, 16), bool], Tensor[(3, 7, 16), float32], uint64, Tensor[(2, 2), float64], Tensor[(1, 336), float32]) {
    %1222 = cast(%var_13339, dtype="float64") /* ty=Tensor[(6, 5, 1), float64] */;
    %1223 = cast(%var_13339, dtype="bool") /* ty=Tensor[(6, 5, 1), bool] */;
    %1224 = cast(%var_13345, dtype="bool") /* ty=Tensor[(6, 5, 16), bool] */;
    %1225 = cast(meta[relay.Constant][68] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1226 = cast(%var_13353, dtype="float64") /* ty=Tensor[(2, 2), float64] */;
    %1227 = cast(%var_13354, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
    %1228 = reshape(%1225, newshape=[]) /* ty=uint64 */;
    %1229 = reshape(%1226, newshape=[4]) /* ty=Tensor[(4), float64] */;
    %1230 = reshape(%1227, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %1231 = @func_8052(%1228, %1229, %1230) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(4, 1), float64], Tensor[(3, 7, 16), float32], Tensor[(336), float32]) */;
    %1232 = erf(%1222) /* ty=Tensor[(6, 5, 1), float64] */;
    %1233 = equal(%1223, %1224) /* ty=Tensor[(6, 5, 16), bool] */;
    %1234 = %1231.10;
    (%1232, %1233, %1234, meta[relay.Constant][68] /* ty=uint64 */, %var_13353, %var_13354)
  };
  %1235(%var_13363, %var_13364, %var_13365, %var_13366) /* ty=(Tensor[(6, 5, 1), float64], Tensor[(6, 5, 16), bool], Tensor[(3, 7, 16), float32], uint64, Tensor[(2, 2), float64], Tensor[(1, 336), float32]) */
}

def @func_5927(%var_5925: Tensor[(9, 8, 8), float64]) -> (Tensor[(9, 8, 8), float64],) {
  @func_5924(%var_5925) /* ty=(Tensor[(9, 8, 8), float64],) */
}

def @func_6253() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) {
  %1240 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) {
    %1236 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1237 = @func_4841() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32]) */;
    %1238 = %1236.0;
    %1239 = %1237.0;
    (%1238, %1239)
  };
  %1240() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) */
}

def @func_15217() -> (Tensor[(9, 3, 4), bool],) {
  %1243 = fn () -> (Tensor[(9, 3, 4), bool],) {
    %1241 = @func_10734() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %1242 = %1241.0;
    (%1242,)
  };
  %1243() /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_16216(%var_16215: uint64) -> (Tensor[(9, 3, 4), bool], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], uint64, Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(2, 16, ?), float64]) {
  %1267 = fn (%var_16155: uint64) -> (Tensor[(9, 3, 4), bool], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], uint64, Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(2, 16, ?), float64]) {
    %1244 = @func_8182() /* ty=(Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) */;
    %1245 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
    %1246 = @func_11571() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1247 = @func_10839() /* ty=(Tensor[(45), float32],) */;
    %1248 = @func_8358() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1249 = @func_7723() /* ty=(Tensor[(4, 1), float64],) */;
    %1250 = cast(%var_16155, dtype="uint64") /* ty=uint64 */;
    %1251 = cast(meta[relay.Constant][69] /* ty=Tensor[(16, 2), uint64] */, dtype="uint64") /* ty=Tensor[(16, 2), uint64] */;
    %1252 = reshape(%1250, newshape=[]) /* ty=uint64 */;
    %1253 = reshape(%1251, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
    %1254 = @func_2407(%1252, %1253) /* ty=(Tensor[(2, 16, ?), bool],) */;
    %1255 = %1254.0;
    %1256 = cast(meta[relay.Constant][69] /* ty=Tensor[(16, 2), uint64] */, dtype="float64") /* ty=Tensor[(16, 2), float64] */;
    %1257 = shape_of(%1255, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1258 = cast(%1255, dtype="float64") /* ty=Tensor[(2, 16, ?), float64] */;
    %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1260 = %1244.1;
    %1261 = %1245.0;
    %1262 = %1246.0;
    %1263 = %1247.0;
    %1264 = %1248.0;
    %1265 = %1249.0;
    %1266 = power(%1258, %1259) /* ty=Tensor[(2, 16, ?), float64] */;
    (%1260, %1261, %1262, %var_16155, %1263, %1264, %1265, %1266)
  };
  %1267(%var_16215) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], uint64, Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(2, 16, ?), float64]) */
}

def @func_6820() -> (Tensor[(9, 3, 4), float32],) {
  %1268 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1269 = %1268.0;
  (%1269,)
}

def @func_15819() -> (Tensor[(9, 3, 4), float32],) {
  %1270 = @func_4131() /* ty=Tensor[(9, 3, 4), float32] */;
  (%1270,)
}

def @func_16669() -> (Tensor[(4, 1), float64],) {
  @func_16667() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_3306() -> Tensor[(9, 3, 4), float32] {
  %1272 = fn () -> Tensor[(9, 3, 4), float32] {
    %1271 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1271.0
  };
  %1272() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_9979(%var_9978: Tensor[(45), float32]) -> (Tensor[(4, 1), float64], Tensor[(288), uint64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
  %1288 = fn (%var_9942: Tensor[(45), float32]) -> (Tensor[(4, 1), float64], Tensor[(288), uint64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) {
    %1273 = @func_4323() /* ty=(Tensor[(4, 1), float64],) */;
    %1274 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
    %1275 = cast(meta[relay.Constant][70] /* ty=Tensor[(1620), uint16] */, dtype="uint16") /* ty=Tensor[(1620), uint16] */;
    %1276 = reshape(%1275, newshape=[15, 12, 9]) /* ty=Tensor[(15, 12, 9), uint16] */;
    %1277 = @func_3142(%1276) /* ty=(Tensor[(15, 12, 9), uint16],) */;
    %1278 = cast(%var_9942, dtype="float32") /* ty=Tensor[(45), float32] */;
    %1279 = reshape(%1278, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
    %1280 = @func_2326(%1279) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
    %1281 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
    %1282 = %1273.0;
    %1283 = %1274.2;
    %1284 = %1277.0;
    %1285 = %1280.1;
    %1286 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
    %1287 = %1281.1;
    (%1282, %1283, %1284, meta[relay.Constant][70] /* ty=Tensor[(1620), uint16] */, %1285, %var_9942, %1286, %1287)
  };
  %1288(%var_9978) /* ty=(Tensor[(4, 1), float64], Tensor[(288), uint64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */
}

def @func_10487() -> (Tensor[(9, 3, 4), float32], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), bool]) {
  %1289 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %1290 = cast(meta[relay.Constant][71] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
  %1291 = reshape(%1290, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1292 = @func_2043(%1291) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 2, 2), float32], Tensor[(4), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %1293 = @func_8320() /* ty=(Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) */;
  %1294 = @func_9489() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
  %1295 = %1289.2;
  %1296 = %1292.4;
  %1297 = %1293.1;
  %1298 = %1294.1;
  (%1295, %1296, meta[relay.Constant][71] /* ty=Tensor[(288), uint64] */, %1297, %1298)
}

def @func_5831() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) {
  %1299 = @func_4310() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %1300 = @func_3305() /* ty=Tensor[(9, 3, 4), float32] */;
  %1301 = %1299.1;
  (%1300, %1301)
}

def @func_3230() -> (Tensor[(4, 1), float64],) {
  @func_3228() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_13534() -> Tensor[(9, 3, 4), uint64] {
  %1302 = fn () -> Tensor[(9, 3, 4), uint64] {
    @func_10277() /* ty=Tensor[(9, 3, 4), uint64] */
  };
  %1302() /* ty=Tensor[(9, 3, 4), uint64] */
}

def @func_7745() -> Tensor[(4, 1), float64] {
  @func_7743() /* ty=Tensor[(4, 1), float64] */
}

def @func_11712() -> (Tensor[(9, 3, 4), bool],) {
  %1303 = @func_10646() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */;
  %1304 = %1303.2;
  (%1304,)
}

def @func_14791(%var_14782: Tensor[(1638), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 14, 13), float32], Tensor[(1638), float32]) {
  %1305 = @func_10447() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
  %1306 = cast(%var_14782, dtype="float32") /* ty=Tensor[(1638), float32] */;
  %1307 = reshape(%1306, newshape=[9, 14, 13]) /* ty=Tensor[(9, 14, 13), float32] */;
  %1308 = %1305.0;
  %1309 = @func_4636(%1307) /* ty=Tensor[(9, 14, 13), float32] */;
  (%1308, %1309, %var_14782)
}

def @func_2097() -> (Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) {
  %1323 = fn () -> (Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) {
    %1310 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
    %1311 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 4), float64] */, dtype="float64") /* ty=Tensor[(1, 4), float64] */;
    %1312 = reshape(%1311, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
    %1313 = @func_39(%1312) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %1314 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
    %1315 = cast(meta[relay.Constant][73] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
    %1316 = reshape(%1315, newshape=[45]) /* ty=Tensor[(45), float32] */;
    %1317 = @func_1874(%1316) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(15, 3, 1), float32], Tensor[(45), float32], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool]) */;
    %1318 = %1310.1;
    %1319 = %1313.0;
    %1320 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
    %1321 = %1314.1;
    %1322 = %1317.4;
    (%1318, %1319, meta[relay.Constant][72] /* ty=Tensor[(1, 4), float64] */, %1320, %1321, %1322, meta[relay.Constant][73] /* ty=Tensor[(1, 45), float32] */)
  };
  %1323() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(?, 2, 2), float32], Tensor[(1, 4), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32]) */
}

def @func_8467() -> Tensor[(9, 3, 4), float32] {
  %1325 = fn () -> Tensor[(9, 3, 4), float32] {
    %1324 = @func_6820() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1324.0
  };
  %1325() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_12373(%var_12372: Tensor[(1, 12, 7), float64]) -> (uint64, uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(?, 12, 7), float32], Tensor[(9, 3, 4), float32]) {
  %1351 = fn (%var_12323: Tensor[(1, 12, 7), float64]) -> (uint64, uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(?, 12, 7), float32], Tensor[(9, 3, 4), float32]) {
    %1326 = cast(meta[relay.Constant][74] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1327 = cast(meta[relay.Constant][75] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %1328 = reshape(%1326, newshape=[]) /* ty=uint64 */;
    %1329 = reshape(%1327, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %1330 = @func_2855(%1328, %1329) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(32), uint64], uint64, Tensor[(32), uint64]) */;
    %1331 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1332 = @func_6305() /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), uint64], Tensor[(3, 84), float32], Tensor[(4), float64]) */;
    %1333 = cast(%var_12323, dtype="float64") /* ty=Tensor[(1, 12, 7), float64] */;
    %1334 = sin(%1333) /* ty=Tensor[(1, 12, 7), float64] */;
    %1335 = cast(%1334, dtype="float64") /* ty=Tensor[(1, 12, 7), float64] */;
    %1336 = exp(%1335) /* ty=Tensor[(1, 12, 7), float64] */;
    %1337 = cast(%1336, dtype="float32") /* ty=Tensor[(1, 12, 7), float32] */;
    %1338 = shape_of(%1334, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1339 = cast(%1334, dtype="float32") /* ty=Tensor[(1, 12, 7), float32] */;
    %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1341 = cast(meta[relay.Constant][74] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1342 = cast(meta[relay.Constant][75] /* ty=Tensor[(32), uint64] */, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %1343 = reshape(%1341, newshape=[]) /* ty=uint64 */;
    %1344 = reshape(%1342, newshape=[32]) /* ty=Tensor[(32), uint64] */;
    %1345 = @func_3758(%1343, %1344) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64], Tensor[(2, 16, ?), bool]) */;
    %1346 = %1330.5;
    %1347 = %1331.0;
    %1348 = %1332.0;
    %1349 = minimum(%1339, %1340) /* ty=Tensor[(?, 12, 7), float32] */;
    %1350 = %1345.1;
    (%1346, meta[relay.Constant][74] /* ty=uint64 */, meta[relay.Constant][75] /* ty=Tensor[(32), uint64] */, %1347, %1348, %1349, %1350)
  };
  %1351(%var_12372) /* ty=(uint64, uint64, Tensor[(32), uint64], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(?, 12, 7), float32], Tensor[(9, 3, 4), float32]) */
}

def @func_8524() -> Tensor[(4, 1), float64] {
  @func_8522() /* ty=Tensor[(4, 1), float64] */
}

def @func_9186() -> Tensor[(9, 3, 4), float32] {
  %1352 = fn () -> Tensor[(9, 3, 4), float32] {
    @func_3305() /* ty=Tensor[(9, 3, 4), float32] */
  };
  %1352() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_9533() -> (Tensor[(7, 6, 4), float64],) {
  %1355 = fn () -> (Tensor[(7, 6, 4), float64],) {
    %1353 = @func_7794() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) */;
    %1354 = %1353.1;
    (%1354,)
  };
  %1355() /* ty=(Tensor[(7, 6, 4), float64],) */
}

def @func_14541(%var_14539: Tensor[(45), float32], %var_14540: Tensor[(320), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(320), float32]) {
  %1366 = fn (%var_14531: Tensor[(45), float32], %var_14535: Tensor[(320), float32]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(320), float32]) {
    %1356 = @func_3589() /* ty=(Tensor[(4, 1), float64],) */;
    %1357 = cast(%var_14531, dtype="float32") /* ty=Tensor[(45), float32] */;
    %1358 = reshape(%1357, newshape=[45]) /* ty=Tensor[(45), float32] */;
    %1359 = @func_5534(%1358) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) */;
    %1360 = cast(%var_14535, dtype="float32") /* ty=Tensor[(320), float32] */;
    %1361 = reshape(%1360, newshape=[320]) /* ty=Tensor[(320), float32] */;
    %1362 = @func_11659(%1361) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 3, 1), float32], Tensor[(16, 4, 5), bool], Tensor[(320), float32], Tensor[(9, 3, 4), float32]) */;
    %1363 = %1356.0;
    %1364 = %1359.1;
    %1365 = %1362.1;
    (%1363, %1364, %var_14531, %1365, %var_14535)
  };
  %1366(%var_14539, %var_14540) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(9, 3, 4), float32], Tensor[(320), float32]) */
}

def @func_1604() -> (Tensor[(9, 3, 4), bool],) {
  %1369 = fn () -> (Tensor[(9, 3, 4), bool],) {
    %1367 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
    %1368 = %1367.0;
    (%1368,)
  };
  %1369() /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_8184() -> (Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) {
  @func_8182() /* ty=(Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) */
}

def @func_5240() -> (Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(9, 3, 4), float64], Tensor[(3, 6, 16), uint64], Tensor[(4, 1), float64]) {
  %1370 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
  %1371 = cast(%1370, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %1372 = reshape(%1371, newshape=[4]) /* ty=Tensor[(4), float64] */;
  %1373 = @func_1460(%1372) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(1, 2, 2), float32], Tensor[(4), float64]) */;
  %1374 = %1373.4;
  %1375 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
  %1376 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  %1377 = @func_2160() /* ty=Tensor[(4, 1), float64] */;
  (%1370, %1374, %1375, %1376, %1377)
}

def @func_13694(%var_13692: Tensor[(1452), float64], %var_13693: uint64) -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32], Tensor[(1452), float32], Tensor[(1452), float64], uint64, Tensor[(4, 288), bool]) {
  @func_13690(%var_13692, %var_13693) /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16], Tensor[(9, 3, 4), float32], Tensor[(1452), float32], Tensor[(1452), float64], uint64, Tensor[(4, 288), bool]) */
}

def @func_4944() -> (Tensor[(9, 3, 4), uint64],) {
  %1378 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%1378,)
}

def @func_10014(%var_10005: float64, %var_10006: Tensor[(10, 1, 15), float64]) -> (Tensor[(10, 1, 15), float64],) {
  %1379 = cast(%var_10005, dtype="float64") /* ty=float64 */;
  %1380 = cast(%var_10006, dtype="float64") /* ty=Tensor[(10, 1, 15), float64] */;
  %1381 = power(%1379, %1380) /* ty=Tensor[(10, 1, 15), float64] */;
  (%1381,)
}

def @func_15731() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
  %1386 = fn () -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
    %1382 = @func_12735() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %1383 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1384 = %1382.0;
    %1385 = %1383.0;
    (%1384, %1385)
  };
  %1386() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */
}

def @func_16752() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32]) {
  %1393 = fn () -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32]) {
    %1387 = @func_15129() /* ty=(uint64, Tensor[(9, 3, 4), float32]) */;
    %1388 = @func_14891() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
    %1389 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
    %1390 = %1387.1;
    %1391 = %1388.1;
    %1392 = %1389.0;
    (%1390, %1391, %1392)
  };
  %1393() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), float32]) */
}

def @func_12493() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(176), float32], Tensor[(728), float32]) {
  %1394 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
  %1395 = cast(meta[relay.Constant][76] /* ty=Tensor[(176), float32] */, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1396 = reshape(%1395, newshape=[8, 2, 11]) /* ty=Tensor[(8, 2, 11), float32] */;
  %1397 = @func_12444(%1396) /* ty=(Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) */;
  %1398 = %1397.2;
  %1399 = cast(%1398, dtype="float32") /* ty=Tensor[(728), float32] */;
  %1400 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  %1401 = %1394.1;
  %1402 = cosh(%1399) /* ty=Tensor[(728), float32] */;
  (%1400, %1401, meta[relay.Constant][76] /* ty=Tensor[(176), float32] */, %1402)
}

def @func_15706() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  @func_15704() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_2161() -> Tensor[(4, 1), float64] {
  %1404 = fn () -> Tensor[(4, 1), float64] {
    %1403 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
    %1403.0
  };
  %1404() /* ty=Tensor[(4, 1), float64] */
}

def @func_16910() -> Tensor[(288), uint64] {
  %1405 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
  %1405.2
}

def @func_11325() -> (Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16]) {
  @func_11323() /* ty=(Tensor[(4, 1), float64], Tensor[(15, 12, 9), uint16], Tensor[(1620), uint16]) */
}

def @func_4782() -> (Tensor[(3, 6, 16), uint64],) {
  %1406 = @func_4342() /* ty=Tensor[(3, 6, 16), uint64] */;
  (%1406,)
}

def @func_8321() -> (Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) {
  %1412 = fn () -> (Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) {
    %1407 = @func_6859() /* ty=(Tensor[(4, 1), float64],) */;
    %1408 = @func_6539() /* ty=(Tensor[(?, 2, 2), float32],) */;
    %1409 = %1407.0;
    %1410 = %1408.0;
    %1411 = @func_4627() /* ty=Tensor[(9, 3, 4), uint64] */;
    (%1409, %1410, %1411)
  };
  %1412() /* ty=(Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) */
}

def @func_11757(%var_11741: Tensor[(12, 1, 15), float32]) -> (Tensor[(12, 1, 15), float32], Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), uint64]) {
  %1413 = cast(%var_11741, dtype="float32") /* ty=Tensor[(12, 1, 15), float32] */;
  %1414 = @func_8182() /* ty=(Tensor[(16, 10, 16), bool], Tensor[(9, 3, 4), bool]) */;
  %1415 = sin(%1413) /* ty=Tensor[(12, 1, 15), float32] */;
  %1416 = %1414.0;
  %1417 = @func_7203() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%1415, %1416, %1417)
}

def @func_8135() -> (Tensor[(9, 3, 4), bool],) {
  %1420 = fn () -> (Tensor[(9, 3, 4), bool],) {
    %1418 = @func_5908() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) */;
    %1419 = %1418.2;
    (%1419,)
  };
  %1420() /* ty=(Tensor[(9, 3, 4), bool],) */
}

def @func_11519(%var_11517: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64], Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(1, 80), float64]) {
  @func_11516(%var_11517) /* ty=(Tensor[(9, 3, 4), float32], uint64, uint64, Tensor[(32), uint64], Tensor[(4, 1), float64], Tensor[(4), float64], Tensor[(1, 80), float64]) */
}

def @func_13321(%var_13319: Tensor[(4, 5, 11), int32]) -> (Tensor[(4, 5, 11), int32],) {
  @func_13318(%var_13319) /* ty=(Tensor[(4, 5, 11), int32],) */
}

def @func_7585() -> (Tensor[(4, 1), float64],) {
  %1421 = @func_4274() /* ty=Tensor[(4, 1), float64] */;
  (%1421,)
}

def @func_14814(%var_14813: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  %1430 = fn (%var_14810: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
    %1422 = @func_13509() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1423 = cast(meta[relay.Constant][77] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1424 = cast(%var_14810, dtype="uint64") /* ty=Tensor[(32), uint64] */;
    %1425 = reshape(%1423, newshape=[]) /* ty=uint64 */;
    %1426 = reshape(%1424, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
    %1427 = @func_2407(%1425, %1426) /* ty=(Tensor[(2, 16, ?), bool],) */;
    %1428 = %1422.0;
    %1429 = %1427.0;
    (%1428, %1429, meta[relay.Constant][77] /* ty=uint64 */, %var_14810)
  };
  %1430(%var_14813) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) */
}

def @func_16912() -> Tensor[(288), uint64] {
  @func_16910() /* ty=Tensor[(288), uint64] */
}

def @func_12914(%var_12852: Tensor[(208), float32], %var_12853: Tensor[(1, 2080), float64]) -> (Tensor[(3, 6, 16), uint64], Tensor[(9, 3, 4), float32], Tensor[(1, 2080), float64], Tensor[(9, 3, 4), bool], Tensor[(45), float32], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(208), float32], Tensor[(45), float32], Tensor[(4, 1), float64]) {
  %1431 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
  %1432 = cast(%var_12852, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1433 = cast(%var_12853, dtype="float64") /* ty=Tensor[(1, 2080), float64] */;
  %1434 = %1431.3;
  %1435 = cast(%1434, dtype="uint64") /* ty=Tensor[(3, 6, 16), uint64] */;
  %1436 = reshape(%1432, newshape=[16, 1, 13]) /* ty=Tensor[(16, 1, 13), float32] */;
  %1437 = reshape(%1433, newshape=[16, 10, 13]) /* ty=Tensor[(16, 10, 13), float64] */;
  %1438 = reshape(%1435, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1439 = @func_3881(%1436, %1437, %1438) /* ty=(Tensor[(16, 10, 13), int16], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */;
  %1440 = cast(meta[relay.Constant][78] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
  %1441 = reshape(%1440, newshape=[45]) /* ty=Tensor[(45), float32] */;
  %1442 = @func_5534(%1441) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], Tensor[(45), float32]) */;
  %1443 = @func_8320() /* ty=(Tensor[(4, 1), float64], Tensor[(?, 2, 2), float32], Tensor[(9, 3, 4), uint64]) */;
  %1444 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1445 = @func_12135() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1446 = cast(%var_12852, dtype="float32") /* ty=Tensor[(208), float32] */;
  %1447 = cast(%1434, dtype="uint64") /* ty=Tensor[(3, 6, 16), uint64] */;
  %1448 = reshape(%1447, newshape=[288]) /* ty=Tensor[(288), uint64] */;
  %1449 = @func_2531(%1448) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45), float32], Tensor[(288), uint64], Tensor[(15, 3, 1), float64]) */;
  %1450 = @func_11019() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1451 = %1439.2;
  %1452 = %1442.0;
  %1453 = %1443.1;
  %1454 = %1444.0;
  %1455 = %1445.0;
  %1456 = cos(%1446) /* ty=Tensor[(208), float32] */;
  %1457 = %1449.1;
  %1458 = %1450.1;
  (%1434, %1451, %var_12853, %1452, meta[relay.Constant][78] /* ty=Tensor[(45), float32] */, %1453, %1454, %1455, %1456, %1457, %1458)
}

def @func_9540() -> (Tensor[(4, 1), float64],) {
  %1460 = fn () -> (Tensor[(4, 1), float64],) {
    %1459 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
    (%1459,)
  };
  %1460() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_15259() -> (Tensor[(4, 1), float64],) {
  %1461 = @func_9677() /* ty=Tensor[(4, 1), float64] */;
  (%1461,)
}

def @func_2377(%var_2375: Tensor[(288), uint64]) -> (Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) {
  @func_2374(%var_2375) /* ty=(Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) */
}

def @func_10534() -> (uint64,) {
  %1463 = fn () -> (uint64,) {
    %1462 = @func_9996() /* ty=uint64 */;
    (%1462,)
  };
  %1463() /* ty=(uint64,) */
}

def @func_15704() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %1464 = @func_9539() /* ty=(Tensor[(4, 1), float64],) */;
  %1465 = %1464.0;
  %1466 = @func_11733() /* ty=Tensor[(4, 1), float64] */;
  (%1465, %1466)
}

def @func_17171(%var_17169: Tensor[(11, 4, 15), int16], %var_17170: Tensor[(11, 4, 15), int16]) -> Tensor[(11, 4, 15), bool] {
  %1471 = fn (%var_17162: Tensor[(11, 4, 15), int16], %var_17163: Tensor[(11, 4, 15), int16]) -> Tensor[(11, 4, 15), bool] {
    %1467 = cast(%var_17163, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
    %1468 = shape_of(%var_17162, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1469 = cast(%var_17162, dtype="bool") /* ty=Tensor[(11, 4, 15), bool] */;
    %1470 = dyn.reshape(%1467, %1468, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%1469, %1470) /* ty=Tensor[(11, 4, 15), bool] */
  };
  %1471(%var_17169, %var_17170) /* ty=Tensor[(11, 4, 15), bool] */
}

def @func_12051() -> Tensor[(9, 3, 4), float32] {
  %1473 = fn () -> Tensor[(9, 3, 4), float32] {
    %1472 = @func_1740() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1472.0
  };
  %1473() /* ty=Tensor[(9, 3, 4), float32] */
}

def @func_14968() -> (Tensor[(4, 1), float64], Tensor[(32), uint64]) {
  %1477 = fn () -> (Tensor[(4, 1), float64], Tensor[(32), uint64]) {
    %1474 = @func_13848() /* ty=(Tensor[(9, 3, 4), bool], uint64, Tensor[(32), uint64]) */;
    %1475 = @func_13448() /* ty=Tensor[(4, 1), float64] */;
    %1476 = %1474.2;
    (%1475, %1476)
  };
  %1477() /* ty=(Tensor[(4, 1), float64], Tensor[(32), uint64]) */
}

def @func_14478() -> Tensor[(4, 1), float64] {
  @func_14476() /* ty=Tensor[(4, 1), float64] */
}

def @func_6861() -> (Tensor[(4, 1), float64],) {
  @func_6859() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_8738() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) {
  %1483 = fn () -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) {
    %1478 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %1479 = @func_4944() /* ty=(Tensor[(9, 3, 4), uint64],) */;
    %1480 = %1478.0;
    %1481 = @func_3305() /* ty=Tensor[(9, 3, 4), float32] */;
    %1482 = %1479.0;
    (%1480, %1481, %1482)
  };
  %1483() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), uint64]) */
}

def @func_4343() -> Tensor[(3, 6, 16), uint64] {
  %1485 = fn () -> Tensor[(3, 6, 16), uint64] {
    %1484 = @func_2599() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(3, 6, 16), uint64], Tensor[(1, 45), float32]) */;
    %1484.3
  };
  %1485() /* ty=Tensor[(3, 6, 16), uint64] */
}

def @func_16099() -> (uint64,) {
  @func_16097() /* ty=(uint64,) */
}

def @func_4876() -> Tensor[(4, 1), float64] {
  %1487 = fn () -> Tensor[(4, 1), float64] {
    %1486 = @func_4648() /* ty=(Tensor[(4, 1), float64],) */;
    %1486.0
  };
  %1487() /* ty=Tensor[(4, 1), float64] */
}

def @func_9877() -> (Tensor[(15, 12, 9), uint16],) {
  @func_9875() /* ty=(Tensor[(15, 12, 9), uint16],) */
}

def @func_10908() -> (Tensor[(288), uint64],) {
  @func_10906() /* ty=(Tensor[(288), uint64],) */
}

def @func_2672(%var_2669: uint64, %var_2670: Tensor[(32), uint64]) -> (Tensor[(9, 3, 4), float32], Tensor[(2, 16, ?), bool], uint64, Tensor[(32), uint64]) {
  %1488 = @func_2134() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1489 = cast(%var_2669, dtype="uint64") /* ty=uint64 */;
  %1490 = cast(%var_2670, dtype="uint64") /* ty=Tensor[(32), uint64] */;
  %1491 = reshape(%1489, newshape=[]) /* ty=uint64 */;
  %1492 = reshape(%1490, newshape=[2, 16, 1]) /* ty=Tensor[(2, 16, 1), uint64] */;
  %1493 = @func_2407(%1491, %1492) /* ty=(Tensor[(2, 16, ?), bool],) */;
  %1494 = %1488.0;
  %1495 = %1493.0;
  (%1494, %1495, %var_2669, %var_2670)
}

def @func_14236() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  @func_14234() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_16804() -> (Tensor[(9, 3, 4), float64],) {
  @func_16802() /* ty=(Tensor[(9, 3, 4), float64],) */
}

def @func_11054() -> (Tensor[(9, 3, 4), uint64],) {
  %1497 = fn () -> (Tensor[(9, 3, 4), uint64],) {
    %1496 = @func_10277() /* ty=Tensor[(9, 3, 4), uint64] */;
    (%1496,)
  };
  %1497() /* ty=(Tensor[(9, 3, 4), uint64],) */
}

def @func_6859() -> (Tensor[(4, 1), float64],) {
  %1498 = @func_6082() /* ty=(Tensor[(4, 1), float64],) */;
  %1499 = %1498.0;
  (%1499,)
}

def @func_2135() -> (Tensor[(9, 3, 4), float32],) {
  %1502 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %1500 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1501 = %1500.0;
    (%1501,)
  };
  %1502() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_2727() -> (Tensor[(4, 1), float64],) {
  @func_2725() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_3885(%var_3882: Tensor[(16, 1, 13), float32], %var_3883: Tensor[(16, 10, 13), float64], %var_3884: Tensor[(288), uint64]) -> (Tensor[(16, 10, 13), int16], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
  %1518 = fn (%var_3795: Tensor[(16, 1, 13), float32], %var_3823: Tensor[(16, 10, 13), float64], %var_3877: Tensor[(288), uint64]) -> (Tensor[(16, 10, 13), int16], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) {
    %1503 = cast(%var_3795, dtype="float32") /* ty=Tensor[(16, 1, 13), float32] */;
    %1504 = acos(%1503) /* ty=Tensor[(16, 1, 13), float32] */;
    %1505 = cast(%1504, dtype="float64") /* ty=Tensor[(16, 1, 13), float64] */;
    %1506 = tan(%1505) /* ty=Tensor[(16, 1, 13), float64] */;
    %1507 = cast(%1506, dtype="float64") /* ty=Tensor[(16, 1, 13), float64] */;
    %1508 = sqrt(%1507) /* ty=Tensor[(16, 1, 13), float64] */;
    %1509 = cast(%1508, dtype="int16") /* ty=Tensor[(16, 1, 13), int16] */;
    %1510 = cast(%var_3823, dtype="int16") /* ty=Tensor[(16, 10, 13), int16] */;
    %1511 = @func_2225() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1512 = cast(%var_3877, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %1513 = reshape(%1512, newshape=[288]) /* ty=Tensor[(288), uint64] */;
    %1514 = @func_2374(%1513) /* ty=(Tensor[(9, 3, 4), float32], uint64, Tensor[(288), uint64]) */;
    %1515 = bitwise_or(%1509, %1510) /* ty=Tensor[(16, 10, 13), int16] */;
    %1516 = %1511.0;
    %1517 = %1514.0;
    (%1515, %1516, %1517, %var_3877)
  };
  %1518(%var_3882, %var_3883, %var_3884) /* ty=(Tensor[(16, 10, 13), int16], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32], Tensor[(288), uint64]) */
}

def @func_1357(%var_1325: uint64, %var_1327: Tensor[(15, 3), float32]) -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), bool], uint64, Tensor[(15, 3), float32], Tensor[(8, 36), bool]) {
  %1519 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1520 = cast(%var_1325, dtype="uint64") /* ty=uint64 */;
  %1521 = cast(meta[relay.Constant][79] /* ty=Tensor[(8, 36), uint64] */, dtype="uint64") /* ty=Tensor[(8, 36), uint64] */;
  %1522 = cast(%var_1327, dtype="float32") /* ty=Tensor[(15, 3), float32] */;
  %1523 = reshape(%1520, newshape=[]) /* ty=uint64 */;
  %1524 = reshape(%1521, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
  %1525 = reshape(%1522, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
  %1526 = @func_954(%1523, %1524, %1525) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
  %1527 = %1526.0;
  %1528 = cast(%1527, dtype="bool") /* ty=Tensor[(3, 6, 16), bool] */;
  %1529 = shape_of(meta[relay.Constant][79] /* ty=Tensor[(8, 36), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1530 = cast(meta[relay.Constant][79] /* ty=Tensor[(8, 36), uint64] */, dtype="bool") /* ty=Tensor[(8, 36), bool] */;
  %1531 = dyn.reshape(%1528, %1529, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1532 = @func_1306() /* ty=Tensor[(9, 3, 4), bool] */;
  %1533 = %1519.0;
  %1534 = equal(%1530, %1531) /* ty=Tensor[(8, 36), bool] */;
  (%1532, %1533, %var_1325, %var_1327, %1534)
}

def @func_13934(%var_13913: Tensor[(3, 9, 11), int64]) -> (Tensor[(3, 9, 11), int64], Tensor[(9, 3, 4), uint64]) {
  %1535 = cast(meta[relay.Constant][80] /* ty=Tensor[(3, 9, 11), int64] */, dtype="int64") /* ty=Tensor[(3, 9, 11), int64] */;
  %1536 = shape_of(%var_13913, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1537 = cast(%var_13913, dtype="int64") /* ty=Tensor[(3, 9, 11), int64] */;
  %1538 = dyn.reshape(%1535, %1536, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1539 = @func_9660() /* ty=(Tensor[(9, 3, 4), uint64],) */;
  %1540 = multiply(%1537, %1538) /* ty=Tensor[(3, 9, 11), int64] */;
  %1541 = %1539.0;
  (%1540, %1541)
}

def @func_13218() -> Tensor[(288), uint64] {
  %1543 = fn () -> Tensor[(288), uint64] {
    %1542 = @func_9614() /* ty=(Tensor[(288), uint64],) */;
    %1542.0
  };
  %1543() /* ty=Tensor[(288), uint64] */
}

def @func_14901(%var_14900: float32) -> (Tensor[(15, 1, 16), float32],) {
  %1547 = fn (%var_14893: float32) -> (Tensor[(15, 1, 16), float32],) {
    %1544 = cast(%var_14893, dtype="float32") /* ty=float32 */;
    %1545 = cast(meta[relay.Constant][81] /* ty=Tensor[(15, 1, 16), float32] */, dtype="float32") /* ty=Tensor[(15, 1, 16), float32] */;
    %1546 = divide(%1544, %1545) /* ty=Tensor[(15, 1, 16), float32] */;
    (%1546,)
  };
  %1547(%var_14900) /* ty=(Tensor[(15, 1, 16), float32],) */
}

def @func_5833() -> (Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) {
  @func_5831() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool]) */
}

def @func_2225() -> (Tensor[(9, 3, 4), float32],) {
  %1548 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1549 = %1548.1;
  %1550 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1551 = %1550.1;
  %1552 = cast(%1551, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %1553 = shape_of(%1549, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1554 = cast(%1549, dtype="float32") /* ty=Tensor[(9, 3, 4), float32] */;
  %1555 = dyn.reshape(%1552, %1553, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1556 = power(%1554, %1555) /* ty=Tensor[(9, 3, 4), float32] */;
  (%1556,)
}

def @func_13784(%var_13782: Tensor[(288), uint64], %var_13783: Tensor[(45), float32]) -> (Tensor[(9, 3, 4), float32], Tensor[(45, 1), float32], uint64, Tensor[(288), uint64], Tensor[(45), float32], Tensor[(4, 1), float64]) {
  @func_13780(%var_13782, %var_13783) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(45, 1), float32], uint64, Tensor[(288), uint64], Tensor[(45), float32], Tensor[(4, 1), float64]) */
}

def @func_1248(%var_1236: Tensor[(4, 1), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(?, 2, 2), float32], Tensor[(4, 1), float64]) {
  %1557 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
  %1558 = cast(%var_1236, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
  %1559 = reshape(%1558, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
  %1560 = @func_39(%1559) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
  %1561 = %1557.0;
  %1562 = %1560.0;
  (%1561, %1562, %var_1236)
}

def @func_4595() -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
  %1566 = fn () -> (Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) {
    %1563 = @func_1603() /* ty=(Tensor[(9, 3, 4), bool],) */;
    %1564 = %1563.0;
    %1565 = @func_3539() /* ty=Tensor[(9, 3, 4), float32] */;
    (%1564, %1565)
  };
  %1566() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */
}

def @func_11418(%var_11417: Tensor[(728), bool]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) {
  %1575 = fn (%var_11413: Tensor[(728), bool]) -> (Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) {
    %1567 = @func_7039() /* ty=(Tensor[(4, 1), float64],) */;
    %1568 = cast(%var_11413, dtype="bool") /* ty=Tensor[(728), bool] */;
    %1569 = cast(%var_11413, dtype="bool") /* ty=Tensor[(728), bool] */;
    %1570 = reshape(%1568, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), bool] */;
    %1571 = reshape(%1569, newshape=[13, 4, 14]) /* ty=Tensor[(13, 4, 14), bool] */;
    %1572 = @func_10087(%1570, %1571) /* ty=(Tensor[(13, 4, 14), bool], Tensor[(9, 3, 4), uint64], Tensor[(3, 6, 16), uint64]) */;
    %1573 = %1567.0;
    %1574 = %1572.1;
    (%1573, %1574, %var_11413)
  };
  %1575(%var_11417) /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64], Tensor[(728), bool]) */
}

def @func_7657(%var_7655: Tensor[(1452), float64], %var_7656: uint64) -> (Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) {
  @func_7653(%var_7655, %var_7656) /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(11, 11, 12), float32], Tensor[(1452), float32], uint64, uint64) */
}

def @func_7522(%var_7520: Tensor[(4), float64]) -> (Tensor[(3, 6, 16), uint64], Tensor[(?, 2, 2), float32], Tensor[(4), float64]) {
  @func_7519(%var_7520) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(?, 2, 2), float32], Tensor[(4), float64]) */
}

def @func_8902() -> (Tensor[(9, 3, 4), uint64], Tensor[(4, 1), float64]) {
  %1576 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1577 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  %1578 = %1576.1;
  (%1577, %1578)
}

def @func_14752() -> Tensor[(4, 1), float64] {
  %1579 = @func_7585() /* ty=(Tensor[(4, 1), float64],) */;
  %1579.0
}

def @func_2411(%var_2409: uint64, %var_2410: Tensor[(2, 16, 1), uint64]) -> (Tensor[(2, 16, ?), bool],) {
  @func_2407(%var_2409, %var_2410) /* ty=(Tensor[(2, 16, ?), bool],) */
}

def @func_16528() -> (Tensor[(4, 1), float64],) {
  %1581 = fn () -> (Tensor[(4, 1), float64],) {
    %1580 = @func_14476() /* ty=Tensor[(4, 1), float64] */;
    (%1580,)
  };
  %1581() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_8935() -> Tensor[(4, 1), float64] {
  %1583 = fn () -> Tensor[(4, 1), float64] {
    %1582 = @func_7449() /* ty=(Tensor[(4, 1), float64],) */;
    %1582.0
  };
  %1583() /* ty=Tensor[(4, 1), float64] */
}

def @func_6190() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) {
  @func_6188() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), float32]) */
}

def @func_7743() -> Tensor[(4, 1), float64] {
  %1584 = @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */;
  %1584.0
}

def @func_13310() -> (Tensor[(9, 3, 4), float32],) {
  %1587 = fn () -> (Tensor[(9, 3, 4), float32],) {
    %1585 = @func_10950() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1586 = %1585.0;
    (%1586,)
  };
  %1587() /* ty=(Tensor[(9, 3, 4), float32],) */
}

def @func_4983(%var_4963: Tensor[(3, 6, 14), float32], %var_4967: Tensor[(4), float64]) -> (Tensor[(3, 6, 14), float32], Tensor[(1, 45), float32], Tensor[(4), float64], Tensor[(9, 3, 4), uint64]) {
  %1588 = cast(%var_4963, dtype="float32") /* ty=Tensor[(3, 6, 14), float32] */;
  %1589 = cast(%var_4967, dtype="float64") /* ty=Tensor[(4), float64] */;
  %1590 = reshape(%1589, newshape=[4, 1]) /* ty=Tensor[(4, 1), float64] */;
  %1591 = @func_1719(%1590) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) */;
  %1592 = erf(%1588) /* ty=Tensor[(3, 6, 14), float32] */;
  %1593 = %1591.3;
  %1594 = @func_4149() /* ty=Tensor[(9, 3, 4), uint64] */;
  (%1592, %1593, %var_4967, %1594)
}

def @func_13197() -> (Tensor[(4, 1), float64], uint64, Tensor[(9, 3, 4), float32]) {
  %1595 = @func_7124() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64]) */;
  %1596 = @func_10533() /* ty=(uint64,) */;
  %1597 = @func_9557() /* ty=(Tensor[(9, 3, 4), float32],) */;
  %1598 = %1595.1;
  %1599 = %1596.0;
  %1600 = %1597.0;
  (%1598, %1599, %1600)
}

def @func_5812(%var_5811: Tensor[(1200), float64]) -> (Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) {
  %1611 = fn (%var_5805: Tensor[(1200), float64]) -> (Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) {
    %1601 = @func_1513() /* ty=(Tensor[(9, 3, 4), float32],) */;
    %1602 = cast(meta[relay.Constant][82] /* ty=Tensor[(45), float32] */, dtype="float32") /* ty=Tensor[(45), float32] */;
    %1603 = reshape(%1602, newshape=[1, 45]) /* ty=Tensor[(1, 45), float32] */;
    %1604 = @func_2326(%1603) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), bool], Tensor[(1, 45), float32], Tensor[(9, 3, 4), bool], Tensor[(4), float64], Tensor[(288), uint64], Tensor[(?, 2, 2), float32]) */;
    %1605 = cast(%var_5805, dtype="float64") /* ty=Tensor[(1200), float64] */;
    %1606 = reshape(%1605, newshape=[15, 5, 16]) /* ty=Tensor[(15, 5, 16), float64] */;
    %1607 = %1601.0;
    %1608 = %1604.2;
    %1609 = @func_4261() /* ty=Tensor[(9, 3, 4), float64] */;
    %1610 = @func_3928(%1606) /* ty=Tensor[(15, 5, 16), float64] */;
    (%1607, %1608, meta[relay.Constant][82] /* ty=Tensor[(45), float32] */, %1609, %1610, %var_5805)
  };
  %1611(%var_5811) /* ty=(Tensor[(9, 3, 4), float32], Tensor[(1, 45), float32], Tensor[(45), float32], Tensor[(9, 3, 4), float64], Tensor[(15, 5, 16), float64], Tensor[(1200), float64]) */
}

def @func_18044() -> Tensor[(4, 1), float64] {
  %1612 = @func_7869() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32]) */;
  %1612.0
}

def @func_5630(%var_5628: Tensor[(5, 6, 16), float64]) -> (Tensor[(5, 6, 16), float64],) {
  @func_5627(%var_5628) /* ty=(Tensor[(5, 6, 16), float64],) */
}

def @func_7795() -> (Tensor[(9, 3, 4), bool], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) {
  %1618 = fn () -> (Tensor[(9, 3, 4), bool], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) {
    %1613 = @func_6744() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool]) */;
    %1614 = cast(meta[relay.Constant][83] /* ty=Tensor[(168), float64] */, dtype="float64") /* ty=Tensor[(168), float64] */;
    %1615 = reshape(%1614, newshape=[7, 6, 4]) /* ty=Tensor[(7, 6, 4), float64] */;
    %1616 = %1613.1;
    %1617 = @func_7700(%1615) /* ty=Tensor[(7, 6, 4), float64] */;
    (%1616, %1617, meta[relay.Constant][83] /* ty=Tensor[(168), float64] */)
  };
  %1618() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(7, 6, 4), float64], Tensor[(168), float64]) */
}

def @func_11733() -> Tensor[(4, 1), float64] {
  %1619 = @func_9489() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool]) */;
  %1619.0
}

def @func_7450() -> (Tensor[(4, 1), float64],) {
  %1622 = fn () -> (Tensor[(4, 1), float64],) {
    %1620 = @func_6642() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), float32], Tensor[(288), uint64], Tensor[(9, 3, 4), float32], Tensor[(9, 3, 4), float32]) */;
    %1621 = %1620.0;
    (%1621,)
  };
  %1622() /* ty=(Tensor[(4, 1), float64],) */
}

def @func_13145() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  %1623 = @func_2974() /* ty=Tensor[(4, 1), float64] */;
  %1624 = @func_13042() /* ty=Tensor[(4, 1), float64] */;
  (%1623, %1624)
}

def @func_9678() -> Tensor[(4, 1), float64] {
  %1625 = fn () -> Tensor[(4, 1), float64] {
    @func_2974() /* ty=Tensor[(4, 1), float64] */
  };
  %1625() /* ty=Tensor[(4, 1), float64] */
}

def @func_12495() -> (Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(176), float32], Tensor[(728), float32]) {
  @func_12493() /* ty=(Tensor[(9, 3, 4), uint64], Tensor[(9, 3, 4), bool], Tensor[(176), float32], Tensor[(728), float32]) */
}

def @func_6898() -> (Tensor[(4, 1), float64], Tensor[(4, 1), float64]) {
  @func_6896() /* ty=(Tensor[(4, 1), float64], Tensor[(4, 1), float64]) */
}

def @func_2725() -> (Tensor[(4, 1), float64],) {
  %1626 = @func_1551() /* ty=(Tensor[(4, 1), float64], Tensor[(9, 3, 4), uint64]) */;
  %1627 = %1626.0;
  (%1627,)
}

def @func_16044(%var_16033: Tensor[(176), float32]) -> (Tensor[(4, 1), float64], Tensor[(728), bool], Tensor[(176), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float32]) {
  %1628 = @func_13094() /* ty=(Tensor[(4, 1), float64], Tensor[(7, 234), float32], Tensor[(1638), float32]) */;
  %1629 = cast(%var_16033, dtype="float32") /* ty=Tensor[(176), float32] */;
  %1630 = reshape(%1629, newshape=[8, 2, 11]) /* ty=Tensor[(8, 2, 11), float32] */;
  %1631 = @func_12444(%1630) /* ty=(Tensor[(8, 2, 11), float32], Tensor[(4, 1), float64], Tensor[(728), bool]) */;
  %1632 = @func_5908() /* ty=(Tensor[(9, 3, 4), float32], Tensor[(4, 1), float64], Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), uint64]) */;
  %1633 = @func_9164() /* ty=(Tensor[(3, 6, 16), float32],) */;
  %1634 = %1628.0;
  %1635 = %1631.2;
  %1636 = %1632.1;
  %1637 = %1633.0;
  (%1634, %1635, %var_16033, %1636, %1637)
}

def @func_1721(%var_1720: Tensor[(4, 1), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) {
  %1665 = fn (%var_1707: Tensor[(4, 1), float64]) -> (Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) {
    %1638 = @func_1183() /* ty=(Tensor[(9, 3, 4), bool], Tensor[(9, 3, 4), float32]) */;
    %1639 = cast(meta[relay.Constant][84] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1640 = cast(meta[relay.Constant][85] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %1641 = cast(meta[relay.Constant][86] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
    %1642 = reshape(%1639, newshape=[]) /* ty=uint64 */;
    %1643 = reshape(%1640, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
    %1644 = reshape(%1641, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
    %1645 = @func_954(%1642, %1643, %1644) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
    %1646 = cast(%var_1707, dtype="float64") /* ty=Tensor[(4, 1), float64] */;
    %1647 = reshape(%1646, newshape=[1, 2, 2]) /* ty=Tensor[(1, 2, 2), float64] */;
    %1648 = @func_39(%1647) /* ty=(Tensor[(?, 2, 2), float32], Tensor[(1, 2, 2), float32]) */;
    %1649 = cast(meta[relay.Constant][84] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1650 = cast(meta[relay.Constant][85] /* ty=Tensor[(288), uint64] */, dtype="uint64") /* ty=Tensor[(288), uint64] */;
    %1651 = cast(meta[relay.Constant][86] /* ty=Tensor[(1, 45), float32] */, dtype="float32") /* ty=Tensor[(1, 45), float32] */;
    %1652 = reshape(%1649, newshape=[]) /* ty=uint64 */;
    %1653 = reshape(%1650, newshape=[3, 6, 16]) /* ty=Tensor[(3, 6, 16), uint64] */;
    %1654 = reshape(%1651, newshape=[45, 1]) /* ty=Tensor[(45, 1), float32] */;
    %1655 = @func_954(%1652, %1653, %1654) /* ty=(Tensor[(3, 6, 16), uint64], Tensor[(15, 3, 1), float32], Tensor[(45, 1), float32]) */;
    %1656 = %1655.0;
    %1657 = cast(meta[relay.Constant][85] /* ty=Tensor[(288), uint64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
    %1658 = shape_of(%1656, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1659 = cast(%1656, dtype="float64") /* ty=Tensor[(3, 6, 16), float64] */;
    %1660 = dyn.reshape(%1657, %1658, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1661 = %1638.0;
    %1662 = %1645.0;
    %1663 = %1648.1;
    %1664 = floor_divide(%1659, %1660) /* ty=Tensor[(3, 6, 16), float64] */;
    (%1661, %1662, meta[relay.Constant][84] /* ty=uint64 */, meta[relay.Constant][86] /* ty=Tensor[(1, 45), float32] */, %1663, %var_1707, %1664)
  };
  %1665(%var_1720) /* ty=(Tensor[(9, 3, 4), bool], Tensor[(3, 6, 16), uint64], uint64, Tensor[(1, 45), float32], Tensor[(1, 2, 2), float32], Tensor[(4, 1), float64], Tensor[(3, 6, 16), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen775/build/output.py:5792: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen775/build/output.py", line 5797, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(270) tvmgen_default_fused_reshape_multiply_kernel0(double* __restrict__ T_multiply, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  T_multiply[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] * placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


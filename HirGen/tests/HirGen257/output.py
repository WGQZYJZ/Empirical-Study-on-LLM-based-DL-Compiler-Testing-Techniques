import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_98 = relay.var("var_98", dtype = "float64", shape = (5, 5, 4))#candidate|98|(5, 5, 4)|var|float64
uop_99 = relay.sin(var_98.astype('float64')) # shape=(5, 5, 4)
output = uop_99
output2 = uop_99
func_102 = relay.Function([var_98,], output)
mod['func_102'] = func_102
mod = relay.transform.InferType()(mod)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_103 = relay.var("var_103", dtype = "float64", shape = (5, 5, 4))#candidate|103|(5, 5, 4)|var|float64
func_102_call = mutated_mod.get_global_var('func_102')
call_104 = func_102_call(var_103)
output = call_104
func_105 = relay.Function([var_103], output)
mutated_mod['func_105'] = func_105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_250 = relay.var("var_250", dtype = "uint16", shape = (7, 7, 4))#candidate|250|(7, 7, 4)|var|uint16
var_251 = relay.var("var_251", dtype = "uint16", shape = (7, 7, 4))#candidate|251|(7, 7, 4)|var|uint16
bop_252 = relay.greater_equal(var_250.astype('bool'), relay.reshape(var_251.astype('bool'), relay.shape_of(var_250))) # shape=(7, 7, 4)
output = bop_252
output2 = bop_252
func_262 = relay.Function([var_250,var_251,], output)
mod['func_262'] = func_262
mod = relay.transform.InferType()(mod)
mutated_mod['func_262'] = func_262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_262_call = mutated_mod.get_global_var('func_262')
var_264 = relay.var("var_264", dtype = "uint16", shape = (7, 7, 4))#candidate|264|(7, 7, 4)|var|uint16
var_265 = relay.var("var_265", dtype = "uint16", shape = (7, 7, 4))#candidate|265|(7, 7, 4)|var|uint16
call_263 = func_262_call(var_264,var_265,)
output = call_263
func_266 = relay.Function([var_264,var_265,], output)
mutated_mod['func_266'] = func_266
mutated_mod = relay.transform.InferType()(mutated_mod)
var_429 = relay.var("var_429", dtype = "float64", shape = (6, 3, 10))#candidate|429|(6, 3, 10)|var|float64
uop_430 = relay.sin(var_429.astype('float64')) # shape=(6, 3, 10)
output = uop_430
output2 = uop_430
func_432 = relay.Function([var_429,], output)
mod['func_432'] = func_432
mod = relay.transform.InferType()(mod)
var_433 = relay.var("var_433", dtype = "float64", shape = (6, 3, 10))#candidate|433|(6, 3, 10)|var|float64
output = func_432(var_433)
func_434 = relay.Function([var_433], output)
mutated_mod['func_434'] = func_434
mutated_mod = relay.transform.InferType()(mutated_mod)
const_611 = relay.const(9, dtype = "uint8")#candidate|611|()|const|uint8
var_612 = relay.var("var_612", dtype = "uint8", shape = (9, 7, 6))#candidate|612|(9, 7, 6)|var|uint8
bop_613 = relay.right_shift(const_611.astype('uint8'), var_612.astype('uint8')) # shape=(9, 7, 6)
bop_618 = relay.greater(const_611.astype('bool'), bop_613.astype('bool')) # shape=(9, 7, 6)
output = relay.Tuple([bop_618,])
output2 = relay.Tuple([bop_618,])
func_624 = relay.Function([var_612,], output)
mod['func_624'] = func_624
mod = relay.transform.InferType()(mod)
mutated_mod['func_624'] = func_624
mutated_mod = relay.transform.InferType()(mutated_mod)
var_625 = relay.var("var_625", dtype = "uint8", shape = (9, 7, 6))#candidate|625|(9, 7, 6)|var|uint8
func_624_call = mutated_mod.get_global_var('func_624')
call_626 = func_624_call(var_625)
output = call_626
func_627 = relay.Function([var_625], output)
mutated_mod['func_627'] = func_627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_710 = relay.var("var_710", dtype = "float64", shape = (12, 16, 14))#candidate|710|(12, 16, 14)|var|float64
uop_711 = relay.atanh(var_710.astype('float64')) # shape=(12, 16, 14)
bop_725 = relay.logical_and(var_710.astype('bool'), relay.reshape(uop_711.astype('bool'), relay.shape_of(var_710))) # shape=(12, 16, 14)
bop_728 = relay.left_shift(uop_711.astype('uint32'), relay.reshape(bop_725.astype('uint32'), relay.shape_of(uop_711))) # shape=(12, 16, 14)
uop_735 = relay.sqrt(bop_728.astype('float32')) # shape=(12, 16, 14)
bop_747 = relay.minimum(var_710.astype('int8'), relay.reshape(uop_711.astype('int8'), relay.shape_of(var_710))) # shape=(12, 16, 14)
output = relay.Tuple([uop_735,bop_747,])
output2 = relay.Tuple([uop_735,bop_747,])
func_753 = relay.Function([var_710,], output)
mod['func_753'] = func_753
mod = relay.transform.InferType()(mod)
mutated_mod['func_753'] = func_753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_754 = relay.var("var_754", dtype = "float64", shape = (12, 16, 14))#candidate|754|(12, 16, 14)|var|float64
func_753_call = mutated_mod.get_global_var('func_753')
call_755 = func_753_call(var_754)
output = call_755
func_756 = relay.Function([var_754], output)
mutated_mod['func_756'] = func_756
mutated_mod = relay.transform.InferType()(mutated_mod)
var_860 = relay.var("var_860", dtype = "uint64", shape = (2, 4, 7))#candidate|860|(2, 4, 7)|var|uint64
var_861 = relay.var("var_861", dtype = "uint64", shape = (2, 4, 7))#candidate|861|(2, 4, 7)|var|uint64
bop_862 = relay.left_shift(var_860.astype('uint64'), relay.reshape(var_861.astype('uint64'), relay.shape_of(var_860))) # shape=(2, 4, 7)
uop_876 = relay.tan(var_860.astype('float32')) # shape=(2, 4, 7)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
const_886 = relay.const([4,2,-3,-4,10,-6,-9,-4,7,-2,9,-6,4,-1,-6,-1,2,-4,-10,2,4,-10,6,3,-8,-4,9,-5,-6,6,-9,-2,-10,6,5,-1,-5,4,-7,-3,-2,-1,-9,-1,-7,6,-4,6,5,6,-1,-6,10,-8,-7,-1,9,7,2,-4,-5,-2,-1,4,2,3,-9,-10,1,5,8,-6,-1,9,-2,-2,-5,7,5,-1,5,8,7,2,-5,-7,-4,2,-7,-9,-5,-8,-5,8,8,7,-5,7,3,1,6,-1,-2,-8,-3,8,7,-8,-2,-2,-6,-4,-4,-5,10,-6,-6,1,-1,9,-5,2,4,4,-6,6,7,-3,3,-9,5,-1,4,9,10,-9,-6,7,-1,-3,7,-9,9,5,-9,7,2,5,2,3,-3,-7,3,8,-4,1,10,6,-1,3,7,-3,10,9,3,3,4,4,7,1,3,-5,-1,4,3,-3,-9,-3,4,10,2,3,7,-3,-9,6,-8,7,-1,3,-10,6,3,-8,-1,-6,4,-1,1,5,-10,-4,-1,10,-1,6,9,3,-5,-3,-1,-1,10,-8,-6,3,-4,-4,7,7,-9,1,8,2,-5,10,-5,5,-1,-8,-7,-4,-7,6,-4,-2,-7,-3,-7,8,1,9,7,5,6,8,4,4,2,-3,-6,-1,8,-10,10,-8,-6,-1,3,-2,9,4,-3,3,10,-4,-3,-1,-3,-7,-7,-6,-5,5,-2,9,-8,-5,1,8,7,10,-9,2,-10,-4,5,-1,10,-8,-6,4,-2,-6,-8,-6,6,-5,-7,-6,-6,-7,4,-3,7,-7,-10,6,3,-5,-6,-5,7,9,9,-4,-8,5,-10,-8,-10,9,-7,2,-6,-2,7,7,9,1,-1,-2,5,-3,-6,1,6,-7,-4,-7,-5,-7,6,8,9,-3,4,1,3,-6,7,-8,-9,7,4,-8,-3,-5,8,-6,5,-9,-5,10,-6,-10,8,-5,-10,4,8,-7,6,10,7,1,5,1], dtype = "uint8")#candidate|886|(378,)|const|uint8
call_885 = relay.TupleGetItem(func_624_call(relay.reshape(const_886.astype('uint8'), [9, 7, 6])), 0)
call_887 = relay.TupleGetItem(func_627_call(relay.reshape(const_886.astype('uint8'), [9, 7, 6])), 0)
var_889 = relay.var("var_889", dtype = "uint8", shape = (378,))#candidate|889|(378,)|var|uint8
bop_890 = relay.not_equal(const_886.astype('bool'), relay.reshape(var_889.astype('bool'), relay.shape_of(const_886))) # shape=(378,)
output = relay.Tuple([bop_862,uop_876,call_885,bop_890,])
output2 = relay.Tuple([bop_862,uop_876,call_887,bop_890,])
func_897 = relay.Function([var_860,var_861,var_889,], output)
mod['func_897'] = func_897
mod = relay.transform.InferType()(mod)
var_898 = relay.var("var_898", dtype = "uint64", shape = (2, 4, 7))#candidate|898|(2, 4, 7)|var|uint64
var_899 = relay.var("var_899", dtype = "uint64", shape = (2, 4, 7))#candidate|899|(2, 4, 7)|var|uint64
var_900 = relay.var("var_900", dtype = "uint8", shape = (378,))#candidate|900|(378,)|var|uint8
output = func_897(var_898,var_899,var_900,)
func_901 = relay.Function([var_898,var_899,var_900,], output)
mutated_mod['func_901'] = func_901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1231 = relay.var("var_1231", dtype = "uint32", shape = (9, 6, 16))#candidate|1231|(9, 6, 16)|var|uint32
const_1232 = relay.const([[[1,8,-3,-7,-6,6,3,-5,-9,-2,-3,-6,3,-10,-4,-2],[2,-3,6,5,-2,7,-10,4,-5,-10,5,3,-5,-6,5,-3],[1,-5,5,6,10,5,-8,-9,-7,-1,6,-10,-4,-7,-6,9],[6,4,-1,-1,6,3,4,8,1,-4,1,8,-2,-8,7,6],[9,-7,2,5,3,-1,8,-10,9,5,-10,9,10,-10,3,10],[-6,6,4,-6,-7,-4,8,-3,-10,9,3,-9,3,8,7,-10]],[[5,-1,-5,-4,5,7,-3,-10,-3,10,7,9,-3,8,4,-1],[3,-8,10,-1,1,8,-2,-7,-7,9,10,-4,4,1,9,9],[-5,-10,-10,-9,1,-6,-6,-8,-2,7,-6,3,4,-9,7,6],[-8,8,-7,2,-6,3,-1,-7,9,-7,6,4,-5,4,5,-3],[-4,1,-9,3,1,-9,6,-9,9,-9,-5,4,8,-1,6,3],[6,5,-9,3,4,-4,8,-5,-9,-2,9,-4,4,7,-1,1]],[[-6,-7,3,-5,-3,-7,-2,8,1,6,5,-5,7,-8,4,-8],[-6,-3,6,-7,-7,-10,9,10,9,9,6,-3,-8,1,-10,2],[5,-6,5,10,8,-3,-9,8,-9,-1,3,-5,-5,-4,-7,-1],[-4,-5,-10,3,6,-6,6,-2,1,9,-7,6,3,5,8,4],[6,-3,6,-4,-1,-9,4,-2,-7,10,5,4,-8,10,8,8],[-5,8,-8,-6,-5,-5,-8,-4,10,-9,-10,5,-3,-3,-10,2]],[[-3,-9,-7,9,-1,10,3,-6,-8,8,-7,7,9,-8,-1,4],[-3,7,9,-9,-10,10,5,-4,1,2,-6,-6,6,-4,6,-3],[1,8,-5,10,8,-9,-8,-5,-7,-6,3,-8,8,10,-9,1],[-4,-2,6,4,-4,6,-6,-8,5,5,-8,10,4,7,4,5],[-7,-7,-1,-8,4,4,4,-4,-7,-8,4,10,10,5,-5,2],[-9,8,1,-2,9,-6,9,-1,-1,-1,9,-4,9,2,10,-8]],[[4,9,-2,-10,-7,4,-8,-4,6,-3,7,5,-9,-1,-3,-1],[7,-10,-1,1,-9,-5,2,4,-5,2,-8,-1,3,9,-3,1],[-10,-10,-3,10,6,9,-5,5,-1,5,3,10,7,2,-10,1],[-5,-1,-2,2,-6,-7,3,-4,-8,-6,2,8,5,-9,-2,3],[1,-8,4,-2,-1,3,2,10,4,-2,-4,-8,-10,-4,-5,-2],[10,1,3,6,2,-10,7,-6,-8,9,-9,-10,4,-5,-8,7]],[[-10,4,2,7,-9,10,-9,-9,5,8,7,-4,2,3,-8,-10],[9,-10,-7,-4,-8,-4,-1,5,-5,9,-2,4,-4,-4,7,9],[-1,6,-7,-4,-5,3,1,1,2,-7,-4,-8,8,-9,7,1],[-8,-4,7,2,-4,9,3,-3,-1,9,3,-4,-9,-6,-2,2],[1,-6,4,4,5,5,-5,-4,9,2,1,3,-10,6,-3,3],[-6,6,-9,8,-4,-3,-1,7,-8,-4,-6,1,-3,9,7,3]],[[3,1,-10,7,2,-4,4,-5,-10,-5,3,4,5,5,7,3],[-1,-3,5,-6,-1,10,-2,10,-3,10,-3,5,10,-7,-1,-9],[9,3,6,-1,-10,2,9,7,9,9,4,9,5,10,-8,-6],[5,-3,9,-5,6,-2,-9,6,-8,9,8,-5,4,8,-8,-3],[4,-1,-9,-1,-4,-9,-3,3,1,-3,-2,3,-6,1,7,-7],[7,5,6,2,-10,5,7,5,3,-8,-8,2,6,-10,-7,-6]],[[-6,-2,-7,-2,-7,-10,-8,4,-3,-8,-7,-9,-6,-8,7,-9],[4,-5,6,-6,8,-9,1,10,10,-8,-10,10,5,9,1,-7],[9,-4,1,8,-7,8,2,3,5,9,-8,3,6,-7,10,-9],[-6,-2,6,8,8,-1,-3,-10,-8,8,-7,-1,-1,-9,-2,9],[-5,7,-2,-5,3,9,-2,6,10,-8,-3,2,-7,6,-3,-9],[6,10,-3,8,-10,-1,10,4,1,8,1,1,-5,7,-2,4]],[[4,-7,8,-2,2,3,-1,1,9,10,-1,7,-8,2,1,-1],[2,2,3,6,-7,7,-6,-2,10,-6,-2,7,-5,1,8,1],[-10,-8,6,8,5,-1,-4,7,-4,-6,-5,-6,5,8,-9,-3],[-3,2,7,1,5,-6,-5,-4,-7,5,5,-4,-7,6,-3,-5],[-10,-6,-6,2,8,-10,-2,-2,-7,10,-6,-4,7,1,7,-6],[4,7,-8,-9,6,1,-6,-6,2,4,-10,-3,6,-9,-3,-1]]], dtype = "uint32")#candidate|1232|(9, 6, 16)|const|uint32
bop_1233 = relay.less(var_1231.astype('bool'), relay.reshape(const_1232.astype('bool'), relay.shape_of(var_1231))) # shape=(9, 6, 16)
uop_1237 = relay.sin(bop_1233.astype('float64')) # shape=(9, 6, 16)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
const_1243 = relay.const([[3],[-7],[5],[5],[3],[7],[-9],[-8],[5],[-6],[-1],[8],[-8],[-10],[2],[-4],[-1],[-5],[-6],[-10],[-4],[5],[-2],[-6],[-8],[7],[5],[-7],[-8],[-4],[2],[-5],[-10],[9],[-1],[-5],[6],[8],[-2],[8],[-7],[1],[10],[-4],[6],[9],[7],[-1],[4],[-3],[9],[-2],[5],[-6],[6],[-10],[8],[-4],[-1],[5],[8],[5],[7],[10],[-6],[-8],[10],[-1],[-2],[3],[10],[1],[-5],[4],[-3],[3],[-2],[5],[-4],[1],[-10],[6],[-9],[-7],[5],[-8],[-5],[3],[-2],[-6],[-8],[4],[-9],[1],[6],[5],[1],[5],[2],[8],[2],[-4],[-5],[-7],[-6],[1],[3],[-7],[-4],[8],[-8],[-5],[-8],[-8],[4],[10],[4],[-5],[3],[-5],[6],[-6],[-9],[5],[-9],[5],[-8],[6],[-1],[-8],[2],[1],[2],[-4],[-9],[-5],[-3],[5],[-1],[-7],[-3],[-10],[3],[7],[-2],[-10],[-3],[-8],[-8],[-9],[1],[1],[-4],[-8],[-7],[7],[-7],[1],[5],[-5],[2],[-9],[8],[-9],[2],[-3],[-1],[-5],[-1],[2],[-7],[-9],[8],[-6],[5],[7],[-9],[-2],[6],[5],[-9],[-10],[-3],[7],[-7],[-5],[2],[3],[-2],[-2],[-2],[-6],[-9],[-10],[-10],[-4],[-3],[1],[-9],[-3],[9],[-3],[2],[2],[4],[-10],[-5],[9],[-7],[-1],[-6],[-5],[-7],[-9],[5],[3],[10],[7],[-3],[-5],[-5],[3],[-5],[5],[3],[-6],[9],[10],[-8],[-4],[-10],[8],[-4],[-3],[6],[-4],[-7],[2],[-1],[-2],[1],[5],[-1],[-7],[3],[3],[8],[-5],[-8],[1],[-8],[-4],[2],[-7],[-1],[9],[-8],[1],[1],[-10],[9],[8],[-5],[-4],[-3],[7],[-8],[8],[-7],[4],[3],[1],[10],[-5],[-1],[-5],[-10],[-2],[8],[-8],[-8],[2],[-7],[5],[5],[-5],[3],[-2],[-9],[-3],[-1],[5],[-1],[-6],[2],[10],[10],[8],[-4],[5],[-4],[-10],[6],[9],[-8],[-10],[-1],[10],[-1],[-3],[-2],[-4],[8],[-4],[-7],[-4],[7],[8],[-5],[-1],[-1],[3],[5],[6],[-2],[10],[3],[-8],[8],[-3],[-9],[5],[-10],[-1],[2],[-7],[-2],[-5],[-6],[2],[1],[9],[8],[2],[9],[10],[-2],[-4],[-10],[5],[-7],[-4],[-7],[-4],[3],[8],[-8],[5],[4],[3],[-5],[-1],[-9],[-7],[-2],[-10],[-9],[5],[-7],[-6],[7],[-2],[10],[-2],[-7],[10],[-7],[8]], dtype = "uint8")#candidate|1243|(378, 1)|const|uint8
call_1242 = relay.TupleGetItem(func_624_call(relay.reshape(const_1243.astype('uint8'), [9, 7, 6])), 0)
call_1244 = relay.TupleGetItem(func_627_call(relay.reshape(const_1243.astype('uint8'), [9, 7, 6])), 0)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
call_1254 = relay.TupleGetItem(func_624_call(relay.reshape(const_1243.astype('uint8'), [9, 7, 6])), 0)
call_1255 = relay.TupleGetItem(func_627_call(relay.reshape(const_1243.astype('uint8'), [9, 7, 6])), 0)
uop_1256 = relay.acosh(uop_1237.astype('float64')) # shape=(9, 6, 16)
bop_1272 = relay.multiply(uop_1256.astype('float32'), relay.reshape(bop_1233.astype('float32'), relay.shape_of(uop_1256))) # shape=(9, 6, 16)
output = relay.Tuple([call_1242,const_1243,call_1254,bop_1272,])
output2 = relay.Tuple([call_1244,const_1243,call_1255,bop_1272,])
func_1285 = relay.Function([var_1231,], output)
mod['func_1285'] = func_1285
mod = relay.transform.InferType()(mod)
var_1286 = relay.var("var_1286", dtype = "uint32", shape = (9, 6, 16))#candidate|1286|(9, 6, 16)|var|uint32
output = func_1285(var_1286)
func_1287 = relay.Function([var_1286], output)
mutated_mod['func_1287'] = func_1287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1346 = relay.var("var_1346", dtype = "float32", shape = (16, 10, 4))#candidate|1346|(16, 10, 4)|var|float32
uop_1347 = relay.acosh(var_1346.astype('float32')) # shape=(16, 10, 4)
uop_1372 = relay.log2(uop_1347.astype('float64')) # shape=(16, 10, 4)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
var_1375 = relay.var("var_1375", dtype = "uint8", shape = (378,))#candidate|1375|(378,)|var|uint8
call_1374 = relay.TupleGetItem(func_624_call(relay.reshape(var_1375.astype('uint8'), [9, 7, 6])), 0)
call_1376 = relay.TupleGetItem(func_627_call(relay.reshape(var_1375.astype('uint8'), [9, 7, 6])), 0)
func_753_call = mod.get_global_var('func_753')
func_756_call = mutated_mod.get_global_var('func_756')
const_1387 = relay.const([[-5.468485,-1.247793,-7.057515,8.485852,8.044227,-2.003714,1.611067,-4.120291,-3.364056,-4.586824,2.588461,-2.757081,6.005813,-0.809909,-5.963885,1.355525,6.944581,9.028519,-3.246283,9.421945,-7.947592,9.197443,-2.608974,6.492379,-8.972754,-1.794655,9.225611,7.933087,5.926158,-3.186442,5.082276,-1.140169,1.869912,-1.990123,1.052947,0.503592,-6.793314,4.517239,4.318688,4.847675,-7.358786,2.296374,-8.113926,-4.610129,7.744088,6.844987,-2.656958,9.760060,-7.581287,3.965437,-6.086706,9.338625,-3.030722,3.087308,9.143247,5.192564,-7.662466,-3.449650,5.620860,-5.152415,8.610174,-7.959268,-2.275687,-0.833512,6.193755,-7.061798,-6.377828,-9.111723,-9.024834,-1.803365,-7.605812,7.693411,8.148500,-7.756551,-2.244542,6.801033,-6.993960,8.370386,3.778137,9.544897,-4.478444,-4.510205,4.265837,3.985007,-2.775687,-5.917392,7.461485,-6.800928,1.653802,0.611457,8.473506,5.191648,-2.683823,-9.295303,-8.080849,3.496484,2.261182,-0.544728,-7.911819,-5.890725,0.567605,-6.079990,-1.154787,2.019421,9.194347,4.621694,1.309538,-3.151244,-5.343879,-1.748387,1.083925,1.911616,2.652684,9.031164,2.726621,8.317947,-3.586658,9.052689,-6.067871,-8.388848,9.476597,-3.365104,2.510883,3.009526,-0.182328,-8.721708,2.122060,-4.561818,9.295823,-3.139787,-5.219027,-1.970300,3.860737,6.576216,-5.243638,5.136684,-1.239252,8.818948,4.277581,3.682305,-1.220467,8.183419,5.303938,-8.738097,9.902981,5.586436,-9.585765,5.339045,4.421855,6.823162,-0.509800,0.843226,8.744698,-3.198602,8.571537,-9.630725,-6.742147,3.564678,9.449525,-5.360540,0.602380,-7.549806,3.215418,8.703967,8.633273,9.315803,-8.147933,-8.007897,4.669665,-6.183400,-9.380545,-0.919222,-7.117372,-9.517699,2.370136,-7.308006,-8.203434,2.978840,-9.529431,-8.407664,3.395525,-5.832544,-0.871657,1.924900,3.326750,1.302705,-5.350690,-3.519052,1.353681,5.975295,-5.447997,7.089417,-1.107144,-0.120756,-4.505211,-4.813945,-3.319819,8.357550,0.443550,-9.199821,-8.680428,-0.577339,7.252985,1.802328,0.750814,-8.194912,-5.880378,-4.578496,-8.494773,-2.427613,7.767918,-4.110862,1.569709,1.372931,0.523859,3.912289,5.534721,-3.160541,6.838806,8.256090,-7.134654,-1.076295,-2.598267,-8.837625,0.649823,6.856338,4.577833,0.305970,8.663411,-3.232437,-6.674284,-0.477481,8.642849,4.030179,-8.436799,-6.654016,-3.423564,5.877067,3.292861,3.092768,-1.645223,-2.128934,-0.042053,-3.462251,-8.920915,-3.871836,0.165436,-6.906166,-1.974301,6.324287,-8.074972,9.203442,-6.571853,2.856012,-7.602013,-8.902410,5.985971,7.314078,-6.474243,7.510717,-4.664722,-9.726808,-6.065231,-7.668964,-4.746825,6.590555,7.900408,9.000778,-8.551241,-8.731899,0.952942,0.651360,2.733084,-3.685718,9.303973,-9.258389,-9.842774,7.602628,0.894117,7.154539,6.114542,-1.611898,1.108438,-3.931679,9.082407,1.743464,7.261111,9.669143,2.843952,1.434879,-6.393219,-1.921211,-3.834843,3.300674,0.922491,2.340588,-9.038964,-7.971263,5.272979,6.416788,2.018491,0.708331,8.594514,3.154802,-6.567258,1.916050,-4.261095,5.074026,1.252955,-0.844484,4.746203,4.402836,1.178322,-7.248230,-2.815162,9.189166,-5.637113,6.989956,-6.273867,-1.801772,5.944405,9.149104,3.235919,-8.150663,9.721390,7.335216,-6.148952,-7.384237,-1.162722,-6.784326,-8.889223,-1.928665,-7.864892,8.241294,-9.636741,7.847960,5.539720,4.376056,-8.014686,-1.070113,-9.206738,-6.392031,-1.524336,5.648244,8.144462,-7.401053,9.873723,-7.972227,-5.404245,-6.756478,3.132436,-3.355721,-8.470797,5.820724,5.284738,8.599898,-5.046557,-1.537606,-7.032954,1.681936,2.802317,-8.382547,3.279659,-9.335190,-1.916711,-4.529023,-7.924480,-1.038092,2.320817,1.577532,2.249898,-2.419220,6.533801,8.897753,-7.789996,6.442527,-7.100935,5.623949,6.697755,2.476308,-9.263250,1.369037,-1.867398,-2.268874,-0.700031,-7.446089,-8.428767,3.114607,4.258504,7.552609,3.509792,2.271006,-9.537538,1.777602,-5.450027,5.111737,7.666197,3.202895,0.430573,2.356049,-4.644195,3.821213,-2.842400,-1.550498,6.149199,-8.891470,-6.160855,-3.926625,-1.485355,-8.157360,-4.387736,8.449503,7.078193,8.819150,-0.100021,-4.757360,-9.770008,1.614887,-1.281154,-1.301495,-7.356672,-8.610522,-9.397571,0.303719,1.323846,6.707682,-3.774898,9.244409,-5.746743,-5.805317,5.180186,3.369082,-9.241594,-9.638010,-7.069842,7.804066,1.895726,2.382987,-1.292152,-6.541628,7.272452,-7.943008,0.720456,4.476290,-5.232797,-1.632024,-8.342250,-0.251792,8.320900,0.894453,1.139815,-3.518194,-0.888617,5.346593,-9.599141,-7.327728,6.015794,7.870015,-3.347861,-5.401637,-5.636413,-9.529504,-9.267259,-0.662947,-3.150903,7.884275,-1.198792,-8.260125,-3.600688,9.644791,-4.680496,-4.080731,-3.561312,-3.536122,-7.586924,-5.843304,7.523559,4.664699,0.503984,9.167703,4.130128,9.138238,-7.983585,-4.718777,2.285140,-3.239394,-7.438041,-7.994453,-7.136189,2.762341,9.460440,-1.652703,9.156747,6.340881,2.366509,-9.460603,8.945337,-1.897724,3.905157,-6.538324,-7.006255,-4.071271,3.054820,-3.971794,8.513005,-2.724970,9.124298,-5.636376,-4.255200,6.100486,-1.717684,-6.328142,8.785670,-0.556677,-8.368689,-2.641512,4.194557,4.074595,4.687616,-3.582904,1.988057,6.461265,8.709863,2.342814,0.804534,5.328348,-3.906367,-5.739382,-6.463234,6.152173,3.716879,-4.837418,-7.895690,-2.922911,4.046511,6.658412,6.707366,4.963175,-9.453404,1.988370,5.354844,2.666857,-6.423904,7.829785,-3.757075,8.864511,-2.985586,-0.080742,5.861221,-9.958933,-9.911034,-9.910081,2.438734,-7.830821,-9.832650,5.807747,7.428080,-2.008008,-9.089501,-3.073367,-7.138821,6.440729,9.289425,7.437072,-4.321446,5.580714,7.029439,-3.099038,3.815895,-6.295630,-1.136486,2.829512,2.918277,-2.802564,-0.550775,-6.926624,-7.603121,0.822209,-0.575401,3.760050,3.279625,6.751802,-4.665741,9.274159,-8.847221,1.064904,0.753221,-3.589210,-7.948184,3.288153,-3.904305,4.216773,3.450404,-1.515846,-0.787056,-0.614057,5.791036,-0.920532,2.530213,6.229282,-1.855806,6.499206,-1.301533,-3.137166,-5.615833,6.772677,4.920530,0.415862,5.416220,-6.991044,1.998878,6.761641,-5.991182,-6.825198,4.669833,-2.347923,4.306272,-3.960642,4.870004,-8.684967,-7.733313,-8.085762,7.704209,-7.545435,-8.198308,-8.708447,6.192691,-8.800621,5.240215,9.756780,-7.417447,-4.344861,2.082008,1.036594,3.248966,-3.183813,1.145403,-3.279776,3.800579,-2.798692,7.129047,1.411944,-9.358859,0.804797,9.526894,9.948824,-0.115637,5.281923,-8.890340,-5.874631,-6.535007,5.120347,-9.795519,-0.868013,-2.247401,7.736884,7.499998,-5.290693,-9.007837,-9.071803,-0.064595,7.699391,4.761384,2.856680,-5.074204,-4.503655,-9.592948,-0.701261,7.700736,-1.245716,6.082288,9.964043,0.509910,6.827810,3.281264,1.579313,7.346901,-3.020557,3.674616,-0.528207,-3.896241,-3.699900,-8.220836,8.044492,-8.102603,7.674028,0.221822,-6.322189,-9.889401,-0.604702,4.995716,3.682875,-3.806172,-5.143639,9.504380,9.553939,6.026430,2.394519,5.557622,1.174571,-3.831330,8.539270,4.293137,-4.129325,0.367953,-2.748692,-0.755236,2.994679,5.984098,-5.347294,-6.736184,-4.773709,-3.289667,9.670806,-8.226755,8.178665,9.199225,-3.436048,-7.357454,-0.753704,6.053186,1.739698,6.659619,6.906916,-9.652077,4.195663,1.666499,-2.975238,6.318264,7.644063,-1.525117,8.720172,-6.252548,-0.665040,-0.320716,-3.675388,4.477046,-9.310631,7.594850,-7.023154,8.851530,-6.173479,9.191519,-4.883669,9.085423,6.037256,-6.719095,3.409628,-4.920904,-2.488363,4.450026,9.353771,-2.142049,5.593971,1.153477,3.303470,3.264137,6.133850,-6.291731,-5.804830,-6.768021,5.671380,-4.155548,9.375667,-4.378650,0.777905,-8.671363,4.489202,-8.017020,-6.582380,-9.562327,7.835388,-7.047004,-9.596953,-9.340341,-7.013579,-6.870081,-9.409518,-8.209551,-3.774873,2.676847,-5.247762,-8.837252,-7.541287,-2.599601,-3.738433,-1.862405,8.178624,-8.875778,8.813884,-2.407346,2.121973,8.456592,9.896264,2.012514,-1.825536,6.281377,0.866244,-0.734783,8.255816,-8.159551,6.358801,8.047747,9.581184,7.587881,-7.915861,-0.626819,-6.587312,0.146749,-7.722898,6.555004,1.079869,7.250382,-5.239456,-4.723791,3.604054,1.234893,4.928259,9.216299,3.970345,3.421319,-9.471525,3.313493,7.005725,-7.991878,-9.979108,2.291625,-3.752612,-8.300667,-0.198945,-7.680524,6.343551,5.850701,-1.180128,-1.314772,4.464989,-6.984464,3.087355,-8.998155,-0.363309,-4.568676,0.563052,5.259942,5.345104,-9.985496,-6.870001,5.463886,6.078765,2.247669,7.735162,3.800098,6.384807,-4.625353,4.713517,-5.333199,7.013194,-1.380135,-1.251995,-8.899768,9.247636,0.005278,-7.119607,-2.608107,3.976410,3.145040,6.118663,4.210851,-2.625009,5.593028,2.760137,-2.253693,0.316841,8.637582,-6.579958,0.172292,-2.561582,2.077159,4.082985,-9.172627,8.376610,0.368983,-3.571347,-9.004030,-6.864081,8.021145,0.062765,-1.058271,-3.519013,-9.259312,2.176024,9.116127,-5.624295,-6.945166,-7.066686,3.082893,5.203342,-5.474391,3.847013,-3.926349,-4.147160,2.692616,5.735904,-7.908555,6.714517,-6.006451,-1.837321,9.957768,2.356047,-9.358972,-4.324646,0.267695,-0.701234,-3.144321,-4.075882,9.517262,-8.987636,-6.078537,-1.022745,0.546929,4.761753,3.109365,8.919208,0.870632,-9.212235,-4.798384,6.828085,-5.646031,2.100940,4.471626,-9.297114,3.885939,-6.094966,-2.293291,-1.678140,-8.544311,-8.791093,-8.566000,-3.806650,-3.197839,0.671710,-5.002940,-0.566028,2.904714,5.885593,-2.430105,3.432993,-2.397222,7.196271,7.825612,-6.290001,-9.278732,5.752800,6.135935,-6.106374,-8.479402,-8.279460,-4.275699,-3.259868,4.237684,-9.290837,3.014886,8.282896,8.384777,-2.950352,-7.263287,7.387880,9.013878,1.314955,-3.390318,-6.062682,-8.648382,5.324694,-1.152101,-4.791224,3.841943,2.053149,-0.450898,-5.907360,1.506747,-7.516751,-2.296969,-0.634036,-9.652849,-6.808369,2.981412,-2.237854,5.922753,-4.868083,5.313195,9.097722,-8.395981,8.007464,0.518920,-4.482086,-3.490772,6.701591,-8.679431,2.466021,8.700889,-7.952612,-7.319259,-1.710486,-7.781992,3.361272,0.950985,1.454135,2.392729,3.800976,-1.033318,-1.859141,-7.310354,3.811733,7.781563,-5.098464,-0.731394,-0.071269,5.494600,1.487244,1.041335,2.238799,9.809570,-2.312377,2.936711,-0.645204,-2.276542,-2.456988,-5.157812,9.345989,-0.760266,-8.125418,-5.237407,-6.423615,-9.084977,-3.350287,-6.698105,-7.936909,-6.904412,2.159008,-6.752827,2.092865,-7.480272,-0.696393,-6.523525,-4.872635,2.222111,2.596372,9.953010,5.506717,3.393441,-6.770840,1.692197,-2.115551,6.821199,3.350506,0.174584,-3.537581,-4.929059,-0.288045,9.358194,-6.522398,1.977150,-0.065404,6.699059,-3.203762,8.163268,-2.086053,-0.695451,-7.137441,-8.606270,7.190588,0.653745,9.028277,-0.858810,-9.525756,3.198010,-4.424202,-7.449961,6.530891,-9.570918,7.851861,-6.706129,-8.660833,-2.244412,2.296237,-1.616388,-2.680229,-0.083057,-1.669784,0.017060,-2.121778,8.943594,3.064110,-5.106656,3.966599,8.792020,-9.955589,-1.576452,-6.583177,-9.334208,-5.261330,-7.515710,-5.763561,-6.613609,-6.217763,6.300846,-2.874907,2.860896,-6.952410,9.866122,0.160298,-1.388224,-4.076918,-0.026860,0.932078,-3.849224,-5.531081,-3.843835,-8.480138,1.913916,-9.691884,6.187697,2.734967,6.752360,-6.905525,0.891832,2.480660,-9.654969,-3.644911,-5.412913,8.678727,5.698454,5.340261,-9.923633,8.833869,-1.986547,-4.325398,-5.102768,8.314060,8.898548,-4.382755,9.120878,7.583738,-3.423991,-1.540907,7.380782,4.919751,5.487715,4.781021,-1.697005,8.397258,-0.166182,1.017175,2.799793,-5.628260,-2.494083,3.088638,-7.276144,8.409063,2.999049,5.676147,1.724654,2.323924,-5.592922,-7.363313,4.608576,0.489922,0.904555,9.418843,4.062002,-8.759349,-4.723888,9.012335,-9.301214,9.630447,2.436326,-0.934749,-3.954733,0.920601,-4.579518,3.318415,-7.657128,-0.456048,8.203808,-6.776812,4.471596,6.727790,6.097251,6.780734,6.009076,9.284618,3.025968,-9.807350,9.937951,-5.134799,9.934751,-2.175534,2.322896,-8.059635,-3.665185,6.348560,7.745935,7.011107,-7.895731,-3.419338,-4.448064,-4.108472,8.006071,6.845338,-2.698974,0.999990,1.281386,6.762189,-6.733870,-2.700049,4.132291,-9.129902,-3.209383,1.760807,-8.652146,-9.555866,8.658225,8.131498,8.487903,8.280852,-3.750429,-8.944249,-8.669774,-5.288437,6.813903,8.482072,2.778949,1.662723,-0.121793,-2.566636,-1.643140,4.737003,4.689008,-6.861578,5.332095,-2.939239,-3.043155,3.145880,6.600554,5.127301,-4.798834,5.383003,7.664617,7.140440,7.561901,-3.234702,5.597463,1.034568,-7.374991,9.596303,7.657478,-5.693564,-1.268936,3.226590,4.347143,-0.187033,4.392094,1.838643,-3.217860,-4.697797,-6.602975,3.228051,-6.601458,-4.992337,0.354864,-3.678190,-7.464780,-0.127900,0.198703,-2.107312,0.117378,-5.684891,-2.510504,0.136863,5.471387,-0.420395,-1.687657,7.428518,-9.192795,-4.709108,0.759760,-2.816609,6.110788,5.681265,-4.243030,9.394634,-4.772044,9.661800,-3.355561,-7.557064,-4.195870,8.492302,-6.617259,-1.386694,5.051317,-0.524402,8.389181,-7.504205,-4.850224,9.879291,6.300370,-6.510515,3.566844,-5.442260,-9.897432,1.483030,8.339720,8.315709,9.340879,-7.290206,-7.046446,5.600873,8.886163,-0.157314,0.509586,7.938974,3.598627,0.989740,2.273035,-5.327163,-5.686795,-4.741083,-1.168519,0.369898,6.622040,-6.090983,1.083089,-2.008975,4.612602,-8.123599,-8.989506,2.257673,5.152611,-0.665742,-6.227018,-2.615580,-7.933675,-6.820756,-2.878805,-8.376744,0.774969,-3.822522,9.355414,-8.268142,1.337350,1.872497,-7.234366,8.328024,5.674336,-8.548452,-0.283441,-8.883798,5.873219,-2.904993,1.050735,-7.633694,4.351219,7.246395,7.397002,-4.382077,-1.145347,-7.040314,-4.288423,-7.638786,-4.923142,-3.046331,6.956628,4.321149,6.558145,-8.780184,4.072849,-0.905662,5.153075,4.020624,1.281260,-4.544140,0.721856,-3.251465,-2.260463,-1.423439,8.880389,-2.132940,6.109407,7.050062,5.786998,1.292934,-5.893689,5.525103,8.116598,-7.634198,-6.699736,-2.062586,-7.981115,-7.880935,1.685803,9.857981,3.032788,0.010167,6.314101,2.927231,5.234391,1.225039,-9.278922,7.644998,1.333094,-4.316579,-3.013140,-6.206416,9.119588,-9.949286,6.552917,2.840403,6.069043,7.936266,-0.173270,2.165765,-5.448217,6.667236,2.126821,-3.730237,0.240351,8.422434,-0.396069,-1.633045,-2.195900,-4.529762,-3.026196,-8.059329,0.892336,-8.416699,-4.409757,7.826819,4.696402,-0.982723,2.897414,7.443561,7.336916,9.644383,-3.752089,-7.253626,-5.383688,-6.472680,-3.509052,-5.120101,6.015750,4.119743,-9.991418,-2.767378,-4.768516,-7.230430,6.400292,-0.197943,-5.524849,-7.512988,9.222432,8.033436,-4.531827,-4.843571,-1.159380,-5.456157,1.051575,-3.058094,-0.081453,4.537068,0.582932,-2.331212,-8.555179,8.984505,-9.661670,2.524161,-2.438313,6.274419,5.390333,-4.576223,-8.893610,2.475926,-0.472885,7.967587,-3.572614,4.508608,0.880761,-3.325595,-8.290656,-4.887703,-2.473421,-1.410428,6.833198,8.464576,3.271758,-0.773768,-4.163931,-1.537741,1.875284,6.583274,-0.796741,8.776179,-9.618879,9.584342,-5.165033,-6.719269,-5.917902,2.267545,-6.467796,-4.700733,-7.867810,-7.883767,-8.568119,-2.870890,-4.675434,1.571867,-0.437677,-6.236200,-3.393409,-0.410561,-6.978441,2.449214,3.067578,-0.899403,5.780763,-9.294397,8.935437,-8.332902,3.516669,-1.635521,-8.542217,-9.452714,-6.786971,-1.630986,9.424833,3.993437,9.061762,-7.302978,-3.360258,-0.968056,4.409014,9.085332,4.881826,-4.119894,-3.178588,3.218421,-1.110068,-3.953565,-4.176552,3.319390,2.550905,7.280359,-4.340290,1.602375,-2.842252,-3.305451,-4.651542,9.764572,-0.278494,-2.179414,-1.442987,1.358217,-6.305896,1.594856,-1.651698,-2.746229,-3.920558,-7.003489,2.520283,6.581758,-4.641245,1.885818,7.422394,-3.128612,-8.096721,8.713716,-9.478041,3.390841,-9.067917,-3.592724,9.210085,-5.610577,-8.966557,-6.492181,-4.091961,-9.949522,-6.892180,-4.102007,-7.442708,2.487460,5.965871,0.461421,0.907395,-4.432966,7.183552,4.225012,5.588076,-6.127251,-7.465221,1.379266,-6.526600,9.860212,1.413948,5.354329,6.574659,-8.578472,3.304247,-3.419334,-8.106098,-9.983261,3.517673,1.926579,4.130769,7.990384,-1.414663,-9.749131,-7.459884,1.049856,6.492076,0.924417,8.824725,-7.338121,1.007500,-3.621398,2.372710,9.027668,-6.285484,-0.626448,8.453808,6.179416,-9.574363,-5.579568,-7.550417,5.673082,-3.821189,-9.817062,-1.902853,-1.018489,1.912280,-7.265123,2.293600,-1.301271,-3.199294,2.548545,-0.767669,6.724380,0.021762,7.729832,-4.608684,6.789843,1.133579,-4.023648,-1.457414,6.083820,4.246894,1.590771,5.589848,-8.430246,-5.377660,8.920966,8.032685,9.315798,2.436590,-0.126194,0.504641,-8.853172,9.916952,2.595007,-3.826179,4.328641,-1.112231,-8.855506,-2.098969,0.436480,7.205159,0.228418,1.355502,5.983957,9.562522,-3.399581,6.823195,4.519474,-9.051129,3.082568,0.577799,-2.969032,9.324077,-7.654795,-9.155278,-4.822278,-9.369328,-1.690960,-2.584272,-2.539577,1.855757,3.082083,-6.855699,8.939363,0.716082,8.865955,5.040867,-7.175388,-1.443515,1.835245,-9.501499,-8.877259,2.926696,-5.856416,-4.335179,-4.378374,-9.820668,4.622613,-0.011887,6.701450,3.149455,4.923679,-0.830098,9.777935,-9.438638,5.154754,-9.540580,9.838603,-4.981236,7.718271,2.312127,-6.420083,5.427769,-0.321602,-8.168829,7.657780,-2.987610,4.300780,-7.178649,3.318450,5.047237,5.949585,7.651268,8.717265,8.970129,-5.783295,-8.497185,-4.985283,-7.386651,-9.457347,-0.240890,-5.104709,-4.435408,4.903578,-4.529183,5.971118,-6.121812,2.664628,5.682477,6.979073,-7.028772,6.605818,7.801017,-3.029578,-6.782134,-5.218557,9.287412,9.605475,-5.612786,-3.208665,-6.843712,-0.117049,7.158773,-1.975555,6.405886,3.585742,4.140627,-7.045033,-0.541237,0.634604,8.371638,0.909585,-7.718308,-5.819915,3.045865,-7.453133,-0.088036,-7.919039,-6.921343,7.779005,9.891458,0.531415,3.594147,8.616178,9.006371,8.292219,-6.415287,4.919377,1.176216,-6.227724,-0.467971,-2.133397,2.527861,-8.951196,9.634533,2.523424,-1.815924,-3.975983,4.300235,7.618539,-7.226482,0.485127,9.736014,7.270847,5.632614,-5.318233,-9.796399,-4.990749,0.240215,-0.079634,-5.182887,1.394207,-6.925849,0.523437,9.874311,-6.271817,7.328899,7.512415,-1.998179,3.955352,-0.482753,-7.360979,6.571676,-5.533827,7.125270,2.996420,9.016926,2.853060,-6.485738,0.755189,5.060465,6.989598,1.293954,-6.026698,-8.706787,5.700900,1.779270,1.882585,1.737262,6.176644,-5.484195,-1.052175,-6.512009,-6.020151,-3.622697,-7.528558,4.317596,-3.461868,-4.010890,6.960735,0.680874,1.814877,-3.777754,0.349380,4.797883,-3.582866,7.955072,0.841084,-6.292607,3.164510,2.037798,6.648811,5.169729,2.454156,-9.352672,-2.520106,-7.006871,-9.495258,3.633630,-3.940360,-0.918862,-6.100163,8.756608,2.869641,6.701055,8.090896,6.392853,-3.818572,-9.865708,-3.018132,-7.774984,-9.194077,2.895645,6.582931,-8.644310,2.854413,-2.307210,0.683577,4.878603,-0.126787,5.246460,0.187688,-2.269452,6.501043,4.031244,9.809161,7.423397,-0.728563,-8.489891,9.748528,6.503209,5.501694,-2.550718,-6.708648,-6.090127,9.020800,-2.398315,-1.075554,-7.913799,2.410798,6.687587,0.368244,1.417675,1.799968,5.251648,-6.123940,2.005726,-5.956077,-1.682263,6.765312,6.360016,-8.601105,6.431428,-6.379845,5.868588,-2.096714,-4.967055,1.346470,6.027272,5.709111,4.615500,-1.268158,-7.548521,-6.488223,0.799779,2.082767,-2.823399,-6.813935,-4.501364,9.055019,-1.798055,-1.047050,1.490363,-7.885405,9.718897,6.525379,-5.750679,9.524438,8.835992,0.584038,-3.426306,1.403125,3.757159,-7.879430,6.029292,9.875826,6.508889,-7.977044,6.496282,-8.871262,4.141074,4.741636,7.530341,-9.925968,-2.695144,0.112880,-3.677172,-3.312126,-6.356533,7.561082,-5.273124,3.518986,-2.870639,0.200932,1.837919,-6.950863,1.468922,-6.039051,5.310717,6.894388,-2.786610,-1.460466,-3.060703,-0.809783,5.632035,-9.464398,-8.838505,-3.266942,8.276864,-2.526675,7.856191,8.914517,-8.172645,9.878255,-0.614820,-5.878534,4.558479,5.914451,7.365614,-5.055238,3.517554,-2.202511,-6.546339,3.322698,-9.739191,-7.322794,-1.641298,9.026709,2.078861,-8.061695,6.144560,6.461839,4.788323,-7.929351,-7.812499,-3.873588,9.123200,-5.636804,3.957104,-4.751599,9.435121,2.643372,-4.473871,1.206676,0.761356,-6.830155,-8.592197,1.088236,-4.553569,-8.917062,-5.812492,3.945811,9.608485,0.359471,2.309187,0.939933,4.463502,-3.210172,2.787568,5.783428,-7.072133,1.934139,9.590319,-8.534582,1.543114,0.987657,2.131733,7.485466,-3.377890,8.957593,-6.011323,-5.982660,6.131264,-8.352784,-0.647379,6.015525,8.318455,1.477116,7.633168,-0.226053,-5.434516,-3.405370,-7.089180,6.373198,3.466812,-3.884593,1.498123,6.176011,-7.795602,3.426810,5.770798,5.370495,3.803478,-0.611780,-0.238125,7.921318,-4.829260,4.918864,-9.730310,8.882014,3.386006,7.689182,-2.759500,-3.604825,-7.718823,-5.821428,-9.241560,-2.369680,-5.737688,6.397825,-9.822624,-1.226383,-8.649246,3.871301,-8.247988,-7.670851,4.684166,-4.613736,-9.357239,-4.208291,-8.001435,4.622043,-7.790051,-6.607326,-4.017422,2.280107,1.941285,6.731408,3.569527,-0.295913,8.130332,-7.146035,-9.751314,-7.753611,5.624864,-4.884652,9.219109,-7.106204,9.448713,0.714226,-7.228656,-2.728541,-1.305891,-0.436606,1.873650,1.201528,6.261458,6.618695,-3.346176,1.006173,-0.078220,5.709489,1.888730,4.757766,-3.784467,-1.422795,1.446536,-7.427301,-7.472126,-3.826362,8.088667,-7.293041,0.272079,3.246251,5.710760,7.618097,-7.235965,-1.261504,-9.240965,-0.473515,-5.679004,-4.787959,-3.615496,5.648719,6.501858,-9.200278,2.018915,8.982233,-0.879333,-4.069448,4.987084,8.460942,-3.633386,1.172118,1.178370,9.214543,-1.920916,3.802759,2.850869,6.017471,-7.677689,5.319231,-9.984721,-2.920477,5.897295,9.233352,-7.917157,-1.954710,-6.159971,-9.925954,-0.144655,6.613380,1.226803,8.887997,5.739247,4.800778,-3.249983,5.852622,6.272712,2.882209,-5.420769,-0.432883,1.501323,6.371688,-8.078027,0.924571,9.775909,-4.743509,0.453412,9.718496,-4.209880,5.589461,-0.420115,-6.858374,-5.504803,-1.480204,-0.882901,-8.774860,-5.183103,6.459690,0.545833,1.454836,3.134148,2.517538,3.915091,8.387947,2.922878,-4.767126,3.529853,6.971923,-4.162402,-4.743129,-8.976782,-6.967773,-4.007716,-5.308672,-9.988358,-1.591479,1.414890,-7.780722,1.994596,-7.925564,-5.188744,-4.200888,1.247188,-0.649410,4.683876,-6.735055,7.914858,-2.838351,-8.305368,1.328922,-0.534717,-1.179066,2.932736,-8.044391,-2.519196,7.729637,0.676300,-0.265210,9.436777,-9.891952,9.275824,3.615571,4.824093,-2.948432,-1.544962,-2.336551,-2.072809,-3.551714,-8.888804,-2.499140,6.582216,1.880610,9.612191,-7.733717,-6.651781,6.330404,7.219097,-8.929226,6.712248,8.570528,-7.185243,-6.879507,-6.275139,-3.748521,-2.161036,-5.808462,-2.063611,-5.857683,0.584051,6.398610,-4.317841,-4.799222,7.840450,-8.445197,8.270364,-3.958116,-0.409288,-9.670208,6.815087,2.891841,1.169915,2.094088,5.293936,1.223232,-1.174711,1.590351,-7.688589,6.166603,-6.408021,-6.483271,6.328125,-5.411389,7.246072,-2.089797,3.109721,-5.267372,3.606577,8.512419,-0.060017,-4.338505,4.934137,7.858079,4.079507,8.777428,-8.648477,6.098913,-7.363817,4.068553,1.419404,-5.764393,5.672896,9.376810,-9.462732,-7.792789,-1.033314,-9.128535,-5.818208,1.126362,-0.715094,4.913436,-8.347180,-7.029094,-9.284600,-6.902995,8.098565,0.202119,-9.237286,-6.579436,0.217813,9.581071,4.144203,4.936805,2.597763,9.185300,3.678817,-0.071797,1.672802,-8.339788,2.693131,3.523475,4.163209,3.848669,-0.554581,-4.264804,-8.545634,0.449741,7.958516,9.372490,5.374938,-7.104060,-4.673845,-9.652281,3.404006,9.067809,6.218524,-8.191356,0.726512,-0.016377,8.629392,7.015161,-4.624561,0.531233,8.612991,-3.903230,2.170061,7.759664,-1.057535,7.134235,-7.044665,-6.639137,-0.503273,-3.692515,-6.233694,1.995556,-7.973397,-8.786966,9.347668,-4.624600,-1.743950,1.261152,-3.112855,0.591926,-9.699087,-4.181186,-3.466996,-3.240438,3.840000,-6.417474,-3.212275,6.906696,0.077580,1.827056,2.586850,4.486527,2.859506,5.344582,-2.570774,-5.873563,-1.964279,0.930984,1.306875,0.572735,0.756159,-6.855054,8.856315,-2.055423,6.465030,1.551975,3.306829,1.194299,6.900576,-2.996480,6.609503,-2.285760,-6.316896,-6.596544,3.270927,-1.500822,-6.985525,-3.070987,9.130383,-4.767582,9.545391,6.599568,-7.333264,2.304632,-8.482006,2.075043,-4.623405,0.135338,-5.813289,-8.313260,9.830432,-8.853152,9.781852,1.309763,1.686927,-3.324446,6.164508,7.541071,-9.841691,6.823828,4.371034,-4.824798,-6.042730,-9.628348,-6.364855,-4.308166,0.458667,8.590931,-6.464577,7.173045,-4.062834,-8.380520,-2.465472,8.786925,-8.215630,4.017887,-8.024291,0.101428,0.789519,8.139775,-0.644376,1.612556,-2.575529,-5.441573,4.026585,-5.472038,0.237871,4.748552,-9.286512,-9.703965,6.166371,-4.929966,-5.704654,-6.508342,5.493344,9.263545,3.395638,-3.469279,4.196331,-4.739014,-8.953916,-4.038332,0.682540,6.758113,-1.620445,-9.794073,4.634227,4.101680,-2.808732,7.309272,0.568822,4.781225,6.609966,-9.374792,8.842130,0.209668,6.598283,3.169174,7.731525,8.909210,4.079372,3.843010,-0.900254,-9.401683,-2.224289,1.101777,-9.290848,7.786203,-9.884589,-9.890125,-1.440916,5.300594,7.445891,6.682525,-9.604357,-8.762954,-6.903893,-5.324152,2.538198,-0.102448,4.071268,4.999839,-9.152196,4.683556,2.714575,-1.270623,-4.132083,1.254627,9.948035,-4.498856,1.614698,0.288513,8.787356,9.488427,-0.592884,-6.452213,4.325491,6.995502,-8.055434,-3.052943,-3.783708,-2.106801,-6.989968,-7.271564,-5.834214,4.273697,1.303477,0.930795,6.657460,4.488982,-9.298580,4.827697,-2.425760,-3.960040,0.260448,-1.944164,5.200242,-3.731335,-5.915680,0.591481,-3.336137,7.129341,1.881952,-0.484723,8.242646,-0.640595,0.495265,6.125541,-5.517936,9.661484,-3.370436,6.106633,-0.487316,7.950307,-8.532793,8.752442,-4.537851,8.223108,7.552907,-1.460785,3.763525,0.019421,-5.118606,-1.387170,-5.993715,-4.428392,1.786206,-8.275660,-9.584279,6.138726,7.723650,4.512164,1.477467,2.157692,-7.339632,7.959097,4.525893,-9.877057,2.212700,-1.645575,-0.563638,-3.310114,6.215510,1.713673,-6.180936,-9.954478,9.647945,2.839112,-1.155664,-4.610383,-8.437232,1.835343,-0.449499,8.590336,-4.513387,9.041819,0.290372,0.235408,-6.913130,-6.393583,3.130256,-3.387723,-9.813425,6.331741,4.177654,8.910950,8.149564,1.518387,-1.431692,6.625831,-6.768853,-3.051638,-3.771656,-4.435660,-8.434525,7.482727,-2.582168,5.638280,-5.837025,5.354964,-5.783007,2.007565,9.617752,0.016391,-7.040399,9.252933,1.175331,-9.636110,0.764174,-2.522797,1.386096,6.044706,-0.075841,-5.472958,6.540521,-9.222199,-6.214572,1.651264,-7.916940,0.478021,7.410940,9.486810,-7.478726,-0.099947,8.120247,-4.095602,-2.460696,-9.861039,-6.676343,5.679014,-2.213879,1.886010]], dtype = "float64")#candidate|1387|(1, 2688)|const|float64
call_1386 = relay.TupleGetItem(func_753_call(relay.reshape(const_1387.astype('float64'), [12, 16, 14])), 1)
call_1388 = relay.TupleGetItem(func_756_call(relay.reshape(const_1387.astype('float64'), [12, 16, 14])), 1)
func_432_call = mod.get_global_var('func_432')
func_434_call = mutated_mod.get_global_var('func_434')
var_1391 = relay.var("var_1391", dtype = "float64", shape = (180,))#candidate|1391|(180,)|var|float64
call_1390 = func_432_call(relay.reshape(var_1391.astype('float64'), [6, 3, 10]))
call_1392 = func_432_call(relay.reshape(var_1391.astype('float64'), [6, 3, 10]))
output = relay.Tuple([uop_1372,call_1374,var_1375,call_1386,const_1387,call_1390,var_1391,])
output2 = relay.Tuple([uop_1372,call_1376,var_1375,call_1388,const_1387,call_1392,var_1391,])
func_1399 = relay.Function([var_1346,var_1375,var_1391,], output)
mod['func_1399'] = func_1399
mod = relay.transform.InferType()(mod)
var_1400 = relay.var("var_1400", dtype = "float32", shape = (16, 10, 4))#candidate|1400|(16, 10, 4)|var|float32
var_1401 = relay.var("var_1401", dtype = "uint8", shape = (378,))#candidate|1401|(378,)|var|uint8
var_1402 = relay.var("var_1402", dtype = "float64", shape = (180,))#candidate|1402|(180,)|var|float64
output = func_1399(var_1400,var_1401,var_1402,)
func_1403 = relay.Function([var_1400,var_1401,var_1402,], output)
mutated_mod['func_1403'] = func_1403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1580 = relay.var("var_1580", dtype = "float32", shape = (6, 3, 7))#candidate|1580|(6, 3, 7)|var|float32
uop_1581 = relay.exp(var_1580.astype('float32')) # shape=(6, 3, 7)
output = relay.Tuple([uop_1581,])
output2 = relay.Tuple([uop_1581,])
func_1587 = relay.Function([var_1580,], output)
mod['func_1587'] = func_1587
mod = relay.transform.InferType()(mod)
var_1588 = relay.var("var_1588", dtype = "float32", shape = (6, 3, 7))#candidate|1588|(6, 3, 7)|var|float32
output = func_1587(var_1588)
func_1589 = relay.Function([var_1588], output)
mutated_mod['func_1589'] = func_1589
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1662 = relay.const([[[-8.988082,-3.834204,-0.476875,-7.326624,-3.926827,9.184212,-6.531186,8.470164,-9.559007,4.885797],[-0.645689,-9.909483,7.690690,-9.913656,-6.340495,9.411018,-3.161850,5.874185,3.196382,4.408224]],[[-2.803871,-9.700400,9.807360,3.080317,-5.589112,-5.058100,-9.997552,7.913272,-2.806757,1.890303],[-9.956043,3.662733,-9.225636,3.119967,8.101134,-1.131566,1.734760,-7.866652,-5.518196,6.319963]],[[-2.164268,4.587196,-7.296841,-9.308800,0.559537,3.731480,-1.332624,-5.963898,6.341946,9.916971],[-9.950239,9.611522,-2.652982,-8.997442,1.714097,-2.708969,5.281500,-2.961267,-4.720193,-0.420175]],[[-0.317282,6.476904,9.938797,2.965736,4.184120,1.092016,-4.265417,-5.891037,-5.739067,-2.466994],[-3.944803,-4.111279,-2.638421,1.409105,1.959300,-6.529466,6.561996,4.285035,6.825369,9.155248]]], dtype = "float32")#candidate|1662|(4, 2, 10)|const|float32
uop_1663 = relay.erf(const_1662.astype('float32')) # shape=(4, 2, 10)
output = relay.Tuple([uop_1663,])
output2 = relay.Tuple([uop_1663,])
func_1666 = relay.Function([], output)
mod['func_1666'] = func_1666
mod = relay.transform.InferType()(mod)
mutated_mod['func_1666'] = func_1666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mutated_mod.get_global_var('func_1666')
call_1667 = func_1666_call()
output = call_1667
func_1668 = relay.Function([], output)
mutated_mod['func_1668'] = func_1668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_1673 = relay.TupleGetItem(func_1666_call(), 0)
call_1674 = relay.TupleGetItem(func_1668_call(), 0)
func_753_call = mod.get_global_var('func_753')
func_756_call = mutated_mod.get_global_var('func_756')
const_1685 = relay.const([0.838359,7.625182,-0.892202,4.223979,1.918915,-2.240430,-8.903502,5.773149,-1.280129,-8.165553,9.802967,-3.463457,4.857045,9.400762,-0.656264,0.670197,-6.896849,7.255941,3.620751,-3.286704,-7.812370,-3.400229,-5.420651,5.680437,8.424090,9.022289,-0.772484,0.397809,-1.572427,-7.125011,-1.561633,-7.927205,-2.859824,-3.916100,-1.578912,8.424926,3.030147,5.967990,4.219529,-2.526325,-4.025231,3.528800,-5.136605,-4.645970,-1.683484,3.447058,-4.784549,3.578065,3.251519,-6.422780,-2.650699,-5.229305,2.754062,-7.526513,8.061552,0.651702,-3.698314,-0.819384,-2.191429,1.036265,4.780165,8.510767,-1.856188,-2.964977,-7.956126,2.194095,-5.699486,5.945156,8.890386,-6.121006,-3.137506,-9.023630,3.429373,1.997897,6.941024,-6.675835,2.278873,-4.669040,-7.216114,0.592136,-3.134407,-4.701988,4.044694,-2.127607,2.249639,5.561106,2.643930,-2.448729,-7.462361,-5.986838,-0.322263,-9.178931,-9.072130,2.437160,5.750902,-9.557759,0.590676,8.871262,-2.788710,4.161565,-7.078046,3.973751,-6.151175,-6.851303,-0.374423,-9.803940,0.581761,-2.641405,2.965513,7.688752,0.902256,-3.606998,-5.683179,4.779747,-8.928625,-7.000499,3.408287,-4.013094,5.589265,-1.240804,1.337257,-2.950911,5.104352,-8.864657,-4.458058,1.672246,0.268803,-4.831670,5.937694,-2.536991,-5.646163,9.540282,4.307223,2.138444,-5.377775,-7.043796,-1.686974,5.664323,3.868222,-3.529410,8.612435,8.912205,-2.371100,-7.201836,4.039074,6.005147,7.900725,1.215230,-6.779746,7.290697,-0.355046,-2.017620,-8.680712,-8.937478,8.380357,5.222624,3.771673,-5.515440,-1.298706,7.997261,3.322056,6.541884,3.995838,3.709327,8.264742,9.402295,-1.348784,-2.159643,5.207056,9.866388,4.229556,6.769789,2.969636,-9.073930,-3.010126,-4.782388,-5.665304,-4.346499,-6.685638,1.696646,-2.342823,-1.007923,-3.401445,2.217110,7.533519,9.404397,0.229043,1.033223,-2.923246,-7.439830,-8.041607,-5.051612,-0.987663,-7.546435,2.866909,-4.210398,-7.042974,-4.983694,4.274430,-0.458368,-8.101310,9.891048,-1.676000,3.285661,4.505945,9.771230,-5.229008,-0.114058,-3.661657,5.546944,1.515936,4.834788,-5.699083,-0.215209,2.217871,9.185821,-8.936952,0.420873,8.893999,3.958705,-5.802540,-2.329017,1.977457,0.536195,-7.869473,5.384836,-5.173913,3.365562,-3.220812,-2.521262,3.106817,-2.169481,5.191469,-9.337373,-6.024647,5.258694,5.186797,6.330881,-5.766767,-7.835234,7.519800,-5.945144,4.177816,7.086713,-7.831483,9.677245,0.549966,3.697902,-0.531515,6.202021,-0.440765,0.003388,1.363879,-3.477652,-5.910102,-5.428846,-4.746316,4.893088,-4.959712,1.834353,4.331947,-9.970877,-9.751282,5.141295,-0.194792,2.837809,9.289257,-5.133902,2.248945,-7.631895,4.948494,-0.345738,-6.042835,0.192532,-7.551161,4.775225,-6.962085,-1.522374,1.836087,5.251351,-6.568144,-2.976418,9.813186,-7.072685,6.315534,-2.578471,6.717557,-9.289636,1.311279,4.520712,1.688182,4.208934,-3.651978,-7.287596,4.464423,9.477826,7.621947,6.835755,-5.910046,7.222897,-3.647810,3.758070,-4.496379,1.703843,3.490750,3.347161,0.794653,-9.884009,-1.183805,-4.349340,-6.172682,-9.288015,3.662141,5.497078,4.736181,-7.494642,-4.155552,-9.806999,3.833086,-2.477523,-5.896615,3.842655,-8.992176,3.455160,4.994264,-8.620450,-5.652817,2.162210,-6.876435,3.867589,3.478680,-4.125608,7.164830,3.833495,-4.179668,-6.821213,8.566102,3.109154,8.400186,6.018574,-5.297255,3.487782,-1.527729,-0.074130,1.272192,-7.201310,8.732253,-5.386275,7.806237,-4.532661,-0.785740,-1.407824,-0.302538,0.862663,0.628687,-6.963901,5.017930,-7.818683,-3.077021,-7.307202,-6.877622,6.094434,2.657543,2.503876,4.862432,5.219318,-8.509765,5.562763,7.971136,-6.601836,8.194809,-4.403257,-9.414336,-1.576347,5.152947,-2.333024,-5.517672,-6.138426,-0.813097,-9.138024,9.040931,3.192308,-0.654400,-7.903696,1.958208,-7.550584,-3.105810,8.231235,9.249330,0.151748,4.692356,-9.419784,8.306158,0.912910,-4.720423,9.044067,0.345313,5.853637,-5.555789,4.408882,1.980266,-2.906516,-8.311852,-3.090220,-2.960925,3.997681,-2.713272,8.976649,-9.297425,5.974360,-0.256322,-3.897694,4.694513,9.169354,5.360014,1.023016,-6.365572,-1.097802,-6.964060,-1.086124,7.737846,-0.732255,-6.506977,7.452598,-3.381453,7.721008,-8.813515,1.124105,-7.844162,5.991404,3.775286,-2.596805,-5.599960,0.972750,3.797942,1.857575,7.752375,-1.866422,4.025760,-7.328341,-7.693409,2.566699,7.592726,-4.061024,2.286241,2.424434,3.556114,7.283608,8.050503,-7.828706,-9.405720,3.083952,3.088464,6.192610,3.717593,-9.818889,-3.536645,-2.516824,-3.160124,5.853991,-4.724853,4.042524,-1.337746,-8.790321,3.740179,-3.686369,-3.319344,3.412663,-6.011238,4.818089,-5.403967,8.283693,7.082403,-1.790865,3.526968,9.048074,-3.542999,3.237550,0.213912,-2.206302,-3.313617,2.712408,-5.708032,-5.268250,5.034300,4.692509,4.862268,-7.990820,-1.865006,5.532726,-9.309889,-9.370756,0.047164,1.475550,7.386633,0.821940,9.704655,-8.615377,7.736084,-7.987264,-7.513223,-4.720476,-5.968660,-2.042677,6.276801,-8.338248,3.194400,-3.748713,-5.504701,1.968264,-9.760860,3.009532,1.330142,8.940887,-0.436417,-2.223546,3.393322,9.797370,9.063321,7.672658,3.587857,1.211146,-6.515963,3.218741,6.942450,-2.018557,9.119251,0.548712,1.954505,4.939131,-4.692493,1.271185,-9.529340,-9.781094,-6.576904,-9.609550,4.284961,-4.093322,1.945282,4.201307,6.930913,-3.673265,9.781071,7.828857,2.175140,1.146833,-6.863834,5.486975,1.854523,9.288380,5.111568,7.344803,3.354810,-6.984520,6.140788,1.269389,8.489346,6.737324,-1.249213,-1.028384,4.645425,5.669171,-3.973940,-1.411498,-6.082274,3.432492,8.023870,1.505112,7.475774,9.595988,4.118678,1.384437,0.619896,6.963409,5.176329,0.898508,9.241511,8.858921,0.343796,8.196621,5.222654,-8.711825,4.464701,0.098518,8.226130,9.331586,5.136794,-8.990258,2.007731,-4.169706,6.015291,2.818991,4.891394,-6.542119,-9.829493,-4.219353,-3.810674,-1.914413,-6.691350,-5.854617,2.332263,-9.213903,-7.535100,8.863814,9.758623,5.942255,1.295123,5.227955,9.939476,7.235791,-4.383016,1.036865,-7.448348,-5.963616,3.515218,7.579890,5.756452,8.009586,-4.553693,9.302542,2.568197,-1.584144,-5.523268,8.036342,1.663517,3.952703,-2.661657,-0.437917,4.597355,-5.302898,-7.314847,2.075264,0.034976,4.629116,7.653477,1.841374,4.083891,4.587330,-5.570539,1.001634,9.789950,7.845709,6.564378,3.014946,-1.177966,9.475481,0.186494,-8.954975,-9.105636,-5.337826,1.991703,-9.278503,2.168547,-7.621364,-3.166125,3.890848,-6.526756,1.444450,-4.636476,-5.540977,-1.375771,4.820403,-4.544239,7.997291,-2.022817,-4.010250,6.812168,-7.895052,-2.347542,-0.998577,0.637588,2.279985,-6.206617,4.916346,9.487601,-1.397640,-6.891014,7.127717,0.363185,2.876371,-7.926796,7.953063,-9.094257,-2.183049,-6.555213,7.017559,-2.972016,-0.156715,2.101426,5.799857,5.573665,9.758566,-8.556414,1.879976,1.821565,7.827962,-7.539979,6.965904,-8.087944,-2.887477,9.418889,-9.790056,-9.176480,-8.795803,2.141226,-5.839427,9.446761,-7.578352,-2.858348,-8.216465,-1.419576,9.120029,-0.995680,1.044986,-7.448838,-3.616901,3.709912,2.155995,7.794461,0.737587,4.351432,6.320401,4.988692,-4.806318,2.737861,3.624529,-9.077404,4.389338,-5.654683,-4.722381,-1.397814,-4.088449,1.083216,7.259452,0.068705,0.251951,-0.747343,-7.849637,-5.471738,2.908427,0.680069,3.377129,2.228543,-4.853634,3.142049,-8.282235,7.042270,5.476402,-6.601385,6.985697,-2.732444,-3.329234,-5.833398,-6.160658,-8.821956,-9.812943,1.249399,5.978228,-7.543250,-8.302121,-4.312441,7.391739,3.171046,5.856284,3.985291,6.616402,8.074864,-8.324360,-1.164136,3.282694,-9.835296,-3.278531,7.352452,-3.721685,-8.954808,-5.105549,6.982600,-8.998489,-8.632415,-5.207093,6.412813,3.571276,-1.899423,-1.528009,1.509859,0.719516,8.279574,2.938282,0.920743,2.421442,-6.550433,5.522542,8.218267,-6.916541,1.330798,-5.357171,-5.817278,0.194632,9.859833,-8.527282,6.867637,8.270315,7.407657,-7.505487,-2.934931,-0.589296,6.670091,5.702597,-8.910588,-2.559924,-6.310963,-3.827769,3.774108,0.074130,0.360550,6.369239,8.461249,0.100855,5.677740,-8.093351,8.492483,-5.746843,-0.373124,-7.012682,9.344644,-1.593148,0.515114,-7.947767,-0.696461,3.066419,6.295987,3.665839,4.726485,-6.218551,-8.971984,8.631321,1.415488,-9.037070,8.637920,-5.725626,5.583872,-8.850581,0.304449,3.051399,8.213339,7.631393,4.982660,8.489097,-1.675173,5.514291,-6.940954,-9.402345,-9.508093,1.150607,7.115640,-7.276786,-2.800077,3.647486,-3.468855,-2.583290,-4.691759,-6.510573,-1.481178,-9.392793,4.927183,4.377368,-1.039672,-4.744451,-3.491682,-3.698071,6.219479,-3.341549,-7.566885,-9.983689,8.048667,-1.829766,-7.612740,7.154016,-5.572825,0.052790,-2.207232,-2.527498,7.872445,3.622320,-1.892091,9.970967,5.990988,-9.169299,-9.992275,-3.330594,3.073003,9.531164,7.432474,-2.841987,-6.051083,-0.848427,-4.544686,-6.359784,7.616548,8.146233,4.166916,4.798465,-4.733641,-9.822728,-5.352279,-0.337335,8.733591,-7.064731,3.431596,4.190416,-9.265689,-6.151629,-3.014474,-1.543379,-3.865111,0.251666,6.071974,-4.434278,-0.431003,-9.361480,3.856763,-7.388762,-5.380875,-2.018430,3.642295,7.741037,5.649688,-5.797352,-4.173010,4.194005,-0.736704,9.582669,8.538746,-8.563793,-3.169881,0.028079,8.650474,6.490620,-1.147999,4.367401,2.956935,2.380234,-5.750032,-5.504823,6.918070,-3.174356,-4.274735,2.556532,4.195861,-2.483747,-1.481255,-0.809599,4.335424,4.021648,0.016900,-8.951923,0.919454,4.889125,1.583899,7.457504,8.247563,5.815381,3.143155,1.421706,-9.061235,-9.092401,2.052612,-5.142226,-6.571246,-5.698934,9.995378,-0.566739,6.250965,-5.883256,0.079759,2.551167,0.514481,0.827427,5.277922,-0.098590,-0.654467,-3.654163,7.292613,-6.445343,-1.142224,8.275171,3.502442,-3.455920,0.104412,-3.248650,-8.788262,1.980099,-3.771788,-8.459152,8.643793,3.015169,-4.965220,-1.203254,-9.124266,8.141320,4.460462,-5.682601,9.147469,4.344073,-3.318531,8.025038,4.499401,-7.343588,0.613981,8.642384,4.861339,-9.544230,-8.789986,4.478365,-6.347537,2.316607,9.740236,-8.375927,4.635691,7.072811,9.028529,-4.424626,1.046197,-9.912998,-4.659685,-5.108963,-3.092964,8.601490,8.704301,-3.993615,9.733857,6.381044,4.924191,7.954063,-2.630962,-7.508418,-2.296908,-2.077581,-2.953053,-8.428167,3.137387,-4.058266,-3.714400,-8.638400,7.344283,4.571770,4.584393,5.297952,-2.387567,3.560557,-9.890553,5.029123,-8.643334,-4.523714,-7.707827,2.470673,6.064047,-0.525242,4.905516,0.733498,6.044281,-5.324589,-4.293881,5.647825,-0.607224,2.537453,1.518021,2.549529,-7.671519,-2.372801,2.500713,-3.090980,4.847512,-0.945786,-5.122351,6.642479,-4.680172,-7.314113,-4.968306,2.879542,-3.857555,3.262357,5.303678,5.796825,-7.222997,5.949850,-7.089010,5.693340,-6.551569,-9.870200,3.181808,-0.332218,7.081465,-6.562005,-5.104906,2.944552,-2.480824,-0.420675,0.305022,-7.214324,6.854886,4.986505,2.700742,-1.670348,-4.433759,-8.411372,-7.294910,1.130074,6.720803,8.460919,-3.297234,-9.253941,6.285505,-7.866504,9.993443,1.546283,-6.254410,-4.241053,5.951353,6.106548,2.041226,5.813986,-5.895966,-1.871700,1.185855,-9.678655,-1.198014,-5.478919,9.132653,-3.444259,8.276643,-7.592242,3.123272,-1.341080,6.465115,-5.742795,1.720174,-6.838170,6.052088,-9.700611,6.531846,-1.680353,2.684441,8.372930,8.247628,4.806838,8.292504,5.274923,-2.758455,7.987758,9.247037,5.058844,-8.414451,0.700585,-6.741208,-3.996051,-7.157456,0.852393,3.776506,-5.261689,-5.027628,-9.854429,9.367976,-2.042499,9.259941,2.533793,-1.503692,3.236138,3.155872,-1.570998,-1.397719,6.096618,3.343330,8.086717,2.335414,0.486342,4.184147,-5.909055,4.006278,2.341191,-9.059504,-6.299462,0.900373,0.922780,-8.387893,-2.116363,-3.223365,0.439704,-6.925896,5.016750,-6.048090,1.497817,-0.554373,9.274598,3.381750,-9.323669,9.961049,-5.524483,-7.670812,7.982344,2.653768,-8.189300,8.220314,8.362342,-0.469202,-9.437622,9.335670,-5.802258,5.204252,-0.875357,-2.585235,-1.024454,8.775115,-2.423028,6.675284,-8.647164,2.441019,-0.396918,-2.605614,-6.563626,-1.353266,6.955863,9.629811,4.824962,4.188329,0.797145,-0.923865,-0.197036,-7.435175,-8.221058,-0.806597,-1.497373,1.103190,8.989712,-1.274206,-1.694984,-2.965540,-1.010951,9.008699,-3.707154,0.189369,0.016707,6.991271,7.305187,-8.140087,8.107794,-9.208576,4.984283,0.144122,7.198901,-6.158774,-3.358064,-2.643898,-1.128436,1.187673,-7.919611,-5.774827,-9.728541,4.233875,4.774470,0.971969,3.242922,-9.395355,4.445444,8.341806,0.789048,-4.656810,-1.541996,6.922298,2.880028,2.613892,2.502915,7.456130,7.058817,-5.239210,-0.154404,-1.489044,3.230747,-0.129694,-2.716771,-2.692450,-2.106200,1.607719,0.783221,6.707371,7.483703,-6.863928,0.371135,0.651677,5.422081,1.611187,3.549621,9.087730,0.072664,-7.826452,0.033379,2.305269,5.597248,-4.201810,6.312540,2.170793,-0.609395,-9.718328,4.780688,-8.420565,7.163134,8.765052,8.186793,6.505388,-5.542536,-8.855101,-3.068208,8.948788,5.559258,-1.384605,-6.788726,6.248019,-6.501832,-5.237178,7.852082,-4.816050,-0.466571,-7.738169,-3.945805,-0.327088,8.378453,-0.515432,2.808847,7.015764,6.142279,6.443683,-9.787594,-7.778296,-2.590746,-5.455652,6.701026,-1.149744,-7.609730,-9.155659,2.083324,-8.053235,3.040144,-4.181509,-6.735920,1.076635,-0.712105,1.933869,-5.038673,2.137524,-2.639504,-1.932576,-7.023603,-4.308742,1.141951,2.914927,8.155956,7.770646,-8.247512,0.070368,-7.576196,-8.617999,-4.552056,1.654256,9.651866,8.763697,-6.196263,3.005208,3.911054,-9.857334,-5.779204,8.232884,0.358989,3.306952,-8.960443,-2.135754,2.030708,1.465815,4.179474,-9.855434,1.158359,-0.518105,-4.010105,-1.215131,8.155883,-9.222547,-0.154803,-2.266548,8.117776,0.244115,-1.882128,-4.428351,-9.077185,8.603631,-7.475582,-0.965213,-1.377086,3.591345,8.103141,-3.486846,-5.987556,-6.136247,-9.764018,-3.096301,-6.055603,5.816121,-2.833422,5.406387,-2.450829,-3.346848,-2.040023,-0.778431,1.697254,8.179535,-1.285634,-3.927035,4.149515,6.871929,5.976684,5.503175,-8.663880,-4.311998,-5.842482,1.154983,0.778278,0.579641,9.599848,-4.057267,5.413732,1.670528,8.190526,4.813019,-3.482954,-6.413318,-5.468433,-3.449547,-0.684024,0.500321,-1.248698,6.287445,-1.539409,5.447325,2.035100,4.331384,-7.884993,-1.138248,-9.567896,-9.339097,-6.242157,-7.159335,-6.858447,4.348503,4.364201,9.463427,-3.098015,7.365474,4.582164,-8.316579,-0.110814,9.712110,-3.748778,-6.166508,1.167963,1.864867,2.872806,6.490409,-3.810097,1.493106,3.497438,9.542517,1.819733,4.462056,-9.077863,2.165044,2.618208,9.081911,-1.861877,-3.015738,-6.211661,-4.404952,1.884461,1.902067,-6.509368,1.691165,5.003104,0.747189,-2.132108,2.500475,-8.549527,3.528965,9.044617,3.499741,1.354967,-1.884848,-6.618862,4.129498,-7.462974,2.264918,1.792795,-7.685370,-1.036644,-4.607266,-7.659945,1.432653,-5.519974,-1.351574,1.546077,-5.583097,2.894137,-2.129634,9.013500,3.433984,-4.434646,-5.204572,-7.538036,-8.902712,9.233161,5.320954,-5.545502,-6.764752,4.720645,-7.738771,7.367378,9.278945,3.811922,-7.986154,-4.008791,-2.130900,-3.087745,-2.700205,-5.285629,8.000527,6.738064,9.195591,8.144785,0.118821,3.008057,1.327475,-8.017624,5.257737,-4.665898,-3.111776,-1.956129,6.761775,1.884332,4.905178,-7.062474,2.001542,2.654709,6.824656,9.123140,8.308220,8.087233,5.127607,-8.996852,2.550134,-7.815348,4.397345,4.290454,4.874252,-0.132520,-1.341873,-5.074463,9.831199,-0.239755,-6.213667,8.668678,-6.892031,2.634359,-4.755626,0.222633,-6.772344,0.460485,-7.355985,4.801388,9.245718,-8.193422,-2.433482,-8.355066,-6.340202,9.626091,-8.674742,-6.364689,2.854597,-6.697088,8.276890,4.815423,4.520194,6.819701,2.854327,6.773583,2.096963,-0.819103,-6.245292,9.266706,-1.958159,-9.782334,4.920420,8.985040,-9.762755,-2.998006,0.340394,2.483804,-0.791080,-5.154618,7.861560,-4.004922,5.611607,7.540309,1.415078,-7.998387,1.285282,-9.031397,-9.261324,0.436738,0.939631,-9.940769,3.686768,0.827158,9.507853,-6.574452,-3.478762,3.487248,7.117037,2.247039,0.674495,-9.200382,-7.339185,7.562236,3.495384,7.887503,-2.464643,0.609654,-4.086660,6.497608,0.911791,-0.685962,-5.952458,8.151887,-1.760080,5.869126,0.335874,-2.104034,-8.523312,-9.327719,-5.271984,5.221661,0.299440,3.378155,0.839854,8.742102,-8.874009,-3.062938,3.932582,-4.473482,5.643894,2.969923,-2.053668,-3.129286,3.862147,-9.855032,1.521538,-8.960456,-5.115264,-8.641878,-4.510168,-8.834364,1.162867,-2.722672,8.461793,3.908533,-4.613366,2.518696,-0.603892,6.217387,-6.462605,-5.850504,8.438735,-5.224180,-1.323561,-0.592307,4.590655,6.717013,6.921987,6.452681,-5.108222,3.942516,-0.987118,0.981405,0.049860,-0.547706,-1.705042,5.542343,-3.067168,-1.683274,-6.721556,0.393666,6.905684,-2.500990,-7.687512,9.094555,-5.712421,2.977336,2.151348,-3.411092,-1.335414,-3.472090,7.151960,-4.403727,-9.783618,-4.046646,6.347170,-8.090398,-6.433443,-9.485174,-0.603073,0.803873,-8.520993,0.316817,-6.306646,-9.845862,5.321254,7.681397,-1.786355,-9.115406,-6.266510,4.131126,-3.699642,6.669566,8.690736,-5.890025,9.807300,-7.328596,-7.849026,-3.343863,9.944201,2.280533,2.104486,9.803628,4.082231,-6.051633,-8.614234,2.811715,8.337618,9.274759,-1.063496,1.566250,-7.605988,-5.789101,2.633184,4.251906,3.981004,3.133533,2.762892,4.692322,-2.662111,2.418523,9.148344,-5.322864,6.022457,8.533420,0.643583,4.283165,0.471331,-3.616955,-9.634412,0.538007,7.883661,1.359251,-9.099318,4.595070,-5.870900,4.227052,2.110144,1.726230,-0.138791,6.237964,1.383496,1.672215,-5.201844,9.291329,2.207711,-4.966987,-9.559241,4.975263,-0.956989,4.092370,2.143726,9.359476,-2.715609,3.036506,1.261011,-6.781140,-7.219247,1.629534,-4.134348,6.704472,-9.897683,-1.301272,4.194828,7.976451,-5.641844,8.638940,2.423808,-3.252707,4.563535,-1.718983,-2.705617,4.433936,-4.598830,0.949790,4.314188,-3.650269,4.601426,-4.788890,1.423196,-1.510648,5.565424,2.356617,-1.416293,-8.779766,-5.797958,1.680456,-4.464916,0.841344,4.134606,1.018150,2.990174,-6.209411,-3.109511,-5.274701,-1.725558,8.645652,-7.506384,9.725432,-0.502983,-9.719859,-7.484070,-1.429723,-9.189385,-1.989241,-5.392030,-2.211947,7.424712,-9.675672,-8.972937,4.714266,-5.293359,-0.690112,-1.352007,1.259280,9.277478,2.432503,0.208790,-1.508611,7.774083,-1.102279,-3.651463,0.779932,8.830606,0.034281,-3.744126,1.482910,1.028477,0.850307,4.676790,9.712351,-7.534789,-6.531756,-3.512829,4.957451,5.560334,0.714963,7.433428,-2.033092,6.112417,-5.106008,-3.167250,-4.472897,9.828173,8.422817,-3.029079,1.106314,3.626408,6.953510,8.627227,4.612109,-6.294966,-4.202941,-4.295869,-9.917449,7.421945,0.853802,-6.158211,3.819899,-9.463836,-1.736735,1.200889,5.698068,-6.483073,-9.859103,-0.973135,-1.659313,9.444151,-2.581256,6.960916,6.975446,6.650438,6.759144,-5.646611,0.388610,9.688093,0.782109,9.771396,-1.125849,7.857482,7.532041,-3.082417,-2.234284,2.650510,7.705603,-1.714273,1.152613,-1.179344,9.235533,5.104975,7.211658,4.447819,-8.974858,5.791504,-2.782312,5.311681,-4.156704,0.753581,5.475725,7.593764,-3.899561,3.043900,0.920579,-1.824213,-7.077606,3.006271,-3.623279,0.348938,-5.127660,0.300628,6.161089,-9.718439,2.704951,4.921636,-8.151327,1.102430,-5.603398,-2.871425,-9.411934,-3.444806,6.491242,-6.429299,-2.377990,-5.637739,2.020640,8.696234,-9.573238,-7.917097,-4.632180,8.592520,5.109267,7.814118,6.040457,7.038728,-9.285785,3.679117,-3.639033,6.410610,4.156973,1.854016,-0.390122,4.979359,-8.402538,-1.420690,6.278041,-4.279415,-6.808933,-6.098864,8.929538,-7.086429,-1.540284,4.385516,4.556308,0.044178,-0.590519,3.419078,-5.992598,-5.168219,9.699293,2.807653,-7.339790,6.517124,5.992869,-5.830792,8.392469,-9.051197,-9.676632,-9.098287,-8.868595,-7.962987,-9.256731,0.742931,1.061276,-0.973677,-6.417047,3.789613,4.293906,-8.560971,5.763821,4.882194,6.981855,-6.907096,-6.643866,6.414940,-0.755747,8.354439,-1.592851,5.092833,-9.323724,-3.316551,9.697162,8.681758,-9.538327,0.730995,9.810958,-4.780043,-9.501318,-9.027258,-2.224455,-6.386430,-7.670115,4.044327,-7.963742,-5.071542,-3.611607,-9.501044,-3.180292,-2.893034,8.939449,-1.807483,1.562011,6.371271,5.267169,-2.731432,3.328156,3.782437,-3.384690,-8.684468,1.927784,-5.781226,5.337951,-2.893970,-8.263881,-8.506109,-2.351654,-4.176911,-9.131835,-6.798832,-4.424517,1.790380,9.894508,8.285115,0.706721,-1.379632,-5.752088,3.092872,6.864956,3.598541,-6.281131,0.438766,8.947958,-4.538298,6.177541,5.914487,5.029370,-7.024753,9.899138,3.398596,4.465410,-9.755890,-7.051647,-6.035560,4.347162,2.270010,1.854162,-9.607412,0.773216,-4.766560,2.645282,-6.952082,-5.660002,7.057460,-3.056569,9.559259,7.949821,6.746028,8.381221,2.544795,9.741399,-6.161844,-2.000154,8.415055,-1.107400,-8.104948,-1.583063,-4.129039,1.925687,-4.064239,-9.271724,-7.180918,3.242740,0.925751,3.301587,2.469443,-0.252678,0.562836,6.715888,-3.910953,0.799354,6.914683,5.936570,-2.494777,-7.399247,-8.145939,-5.313185,-4.047295,-5.316977,-6.825249,-8.544087,-6.533391,-8.001047,6.455689,8.745149,3.971862,7.750415,-2.475098,-9.747937,3.176555,1.382437,-8.772468,-5.818514,-8.416640,-2.591573,-8.079044,-5.292834,6.879417,4.891461,-1.097427,-7.820186,9.717720,1.045491,-3.272877,-4.172914,-0.548129,6.958872,-8.135958,9.692614,-9.691501,1.367725,-0.454056,-5.069774,-7.274989,5.114349,-4.801369,-9.756954,7.002066,7.588629,-5.508799,1.020659,8.294296,5.789812,6.606771,-6.854740,-4.402232,-7.497283,-1.281291,6.938509,-6.824134,5.642352,-4.932886,-2.695424,5.554820,-0.759309,-7.002184,-1.585660,-1.747851,6.204334,-9.173613,-4.232298,5.185336,-5.889719,0.585104,0.638089,-2.507161,-2.534428,-0.139320,-2.810310,-9.967408,9.748880,-1.133666,-5.636076,1.735241,-4.715598,-4.833425,2.972236,-8.563100,1.540658,9.687826,4.073479,2.077655,-7.894538,2.459110,-5.831462,9.835299,-3.618714,7.220256,2.196192,-0.921670,9.726921,-8.490150,-0.261671,-7.138428,-7.499221,-3.899685,7.775352,5.707473,-5.904163,-7.389274,-0.401205,-3.647212,9.758502,5.780100,3.999462,5.310874,-7.673688,6.063463,-3.859181,-7.781291,5.407140,-3.756441,5.410776,-6.361596,-3.589454,-8.780137,7.511400,8.860229,-6.015193,4.891647,-2.868992,-9.673193,-4.620549,-2.590914,3.579064,2.340234,2.658510,4.894690,5.798357,-7.165880,-2.286589,-1.263868,-7.165510,5.281728,-5.402185,-1.368489,7.748867,-4.615978,-5.910545,-4.382289,6.671631,-8.686261,4.459990,5.567763,4.219461,1.154465,-5.462332,0.923011,1.070485,-5.691860,2.942041,1.534261,2.782445,-8.409806,-6.792911,-4.022634,-6.509789,-7.985557,-4.999666,-6.245880,-9.079109,-1.927736,0.777381,2.580647,-4.814162,9.795149,-8.047754,-2.205277,-9.502890,3.728266,6.350919,-0.792301,-7.758948,9.249826,4.652705,-8.893556,4.397694,-4.955284,9.299477,-7.713100,2.766632,9.834930,-8.114482,-9.356598,2.804383,4.270375,4.411451,-0.909749,-8.511070,-9.318413,-2.313747,8.003901,9.312013,-9.336928,7.637134,-7.396931,-4.310805,-1.080549,4.194247,3.115342,-9.930957,6.803448,6.895494,6.848163,-4.276901,6.504028,5.162575,-5.792245,-8.826955,3.465274,1.526916,5.783948,3.893896,-1.090826,-1.360738,1.218743,-2.049488,-1.542331,2.594028,-1.888959,1.378846,-5.679248,-8.893407,-0.871585,8.207176,2.745702,2.486250,7.771115,-5.393830,-8.250422,7.002647,-8.073676,-3.319333,9.971265,-1.890663,7.164616,4.465530,-4.395404,1.046722,7.804451,-9.376845,0.891908,5.749703,8.341161,0.261494,-0.676300,9.663300,-6.390667,0.331961,0.547151,4.737819,9.510589,-6.186874,7.765349,-8.929115,3.085654,5.146209,0.472130,2.780580,-4.514232,-1.661424,9.874321,3.736151,5.103475,-1.233721,8.374695,-8.800753,-5.752880,-9.334681,-2.599392,-6.104766,-5.675545,-7.128516,-9.214559,-4.452284,-8.767180,8.984198,-0.695913,-0.117563,3.059608,6.309148,-7.272656,-1.032005,-5.097228,-3.744308,4.295669,-3.856142,-5.660509,0.790694,-4.906437,-3.488574,-3.388425,7.732235,-3.426347,6.492603,-5.762918,-6.643398,-7.510700,8.848615,-3.440387,2.608356,7.682325,4.551098,-1.326866,-9.349624,-5.494559,-7.441832,8.795229,8.105793,8.718899,9.415968,5.265851,-0.033254,-1.507618,9.580190,-2.138938,9.676284,-1.079054,0.625010,4.557687,-1.232442,-8.919890,7.376266,-6.157971,-2.067418,9.975295,9.612823,6.335201,-0.432501,8.978350,-5.576894,-0.025234,6.616700,-5.511749,3.408427,8.517491,3.901228,-4.524633,3.783504,-1.985464,-0.635177,5.633314,-6.256227,-3.538771,0.616491,-2.897676,8.988551,4.950529,-4.016380,2.901874,7.539793,2.501866,0.411306,3.817389,-0.670546,-2.851335,3.990759,-3.644590,-1.717180,-7.735537,-1.123754,-5.897538,9.752769,8.767368,3.324074,-0.397004,8.478499,-2.678481,9.167409,7.914562,9.454558,6.945115,4.152043,-0.982291,-7.453123,8.102583,-9.508477,-9.312243,0.855965,7.508717,-4.833473,-8.044627,7.677964,-6.288044,-1.193986,-9.067495,0.727874,5.827936,8.791679,0.065982,-6.852514,-4.974778,-7.653147,7.652115,-9.923631,-6.918960,-7.891636,-0.809910,1.329041,-5.293838,-0.478627,3.564490,-0.994322,9.003240,8.166549,8.582207,9.593554,-6.138189,-7.672940,-0.403647,-2.427190,-9.572725,2.319047,-9.568534,3.439449,-0.102814,7.875491,-1.210485,-6.029416,5.375133,-3.777218,-5.273470,-3.771506,0.483428,-9.456472,-2.233410,-2.144331,9.651481,5.655964,8.175410,-3.364405,9.292418,8.885772,-3.158328,7.167627,8.725920,-4.157932,8.503723,-6.271540,-3.279048,-3.082766,0.072481,7.105238,-6.265375,-9.093230,5.640778,-6.527280,-4.322459,-3.978125,0.748199,-1.021182,5.571424,-5.350420,-7.194168,7.318642,2.265828,7.606804,7.823492,1.704056,0.358930,3.821388,6.131486,8.924308,0.059958,-4.481327,3.309249,-8.030394,6.947614,-4.110789,4.520135,-5.544031,0.744294,-2.233063,-4.215800,3.746806,1.084877,2.609580,-0.807938,9.728894,-5.742478,-1.004891,-2.227550,1.555307,-6.237478,6.658799,6.677466,-3.326079,0.267170,0.680041,7.660395,-2.637668,2.508043,3.822104,-9.231428,-6.689417,-8.676244,2.805986,0.237282,-8.738397,-0.399679,2.703939,-3.145763,-0.373418,-2.627207,5.730438,-7.496830,6.052852,2.363855,2.579461,5.429153,7.900116,2.846579,-7.032260,5.321528,-7.965767,6.820151,0.805123,0.890728,8.648261,-4.056144,9.787483,-5.768326,-9.557856,1.918975,-9.308602,9.138978,-7.495139,-3.603604,1.550967,-3.753133,3.602416,-2.873466,9.192922,-1.797555,7.239257,4.220356,-9.673797,9.597679,-8.749134,-8.862468,6.532597,-7.435631,-2.465010,7.223279,-3.394717,7.723353,9.714432,-7.524776,-6.214770,6.474601,2.598224,-5.999102,9.961590,1.113296,9.324775], dtype = "float64")#candidate|1685|(2688,)|const|float64
call_1684 = relay.TupleGetItem(func_753_call(relay.reshape(const_1685.astype('float64'), [12, 16, 14])), 1)
call_1686 = relay.TupleGetItem(func_756_call(relay.reshape(const_1685.astype('float64'), [12, 16, 14])), 1)
uop_1697 = relay.asinh(call_1673.astype('float32')) # shape=(4, 2, 10)
uop_1699 = relay.asinh(call_1674.astype('float32')) # shape=(4, 2, 10)
output = relay.Tuple([call_1684,const_1685,uop_1697,])
output2 = relay.Tuple([call_1686,const_1685,uop_1699,])
func_1703 = relay.Function([], output)
mod['func_1703'] = func_1703
mod = relay.transform.InferType()(mod)
mutated_mod['func_1703'] = func_1703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mutated_mod.get_global_var('func_1703')
call_1704 = func_1703_call()
output = call_1704
func_1705 = relay.Function([], output)
mutated_mod['func_1705'] = func_1705
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_1842 = relay.TupleGetItem(func_1666_call(), 0)
call_1843 = relay.TupleGetItem(func_1668_call(), 0)
var_1849 = relay.var("var_1849", dtype = "float32", shape = (4, 2, 10))#candidate|1849|(4, 2, 10)|var|float32
bop_1850 = relay.not_equal(call_1842.astype('bool'), relay.reshape(var_1849.astype('bool'), relay.shape_of(call_1842))) # shape=(4, 2, 10)
bop_1853 = relay.not_equal(call_1843.astype('bool'), relay.reshape(var_1849.astype('bool'), relay.shape_of(call_1843))) # shape=(4, 2, 10)
output = relay.Tuple([bop_1850,])
output2 = relay.Tuple([bop_1853,])
func_1854 = relay.Function([var_1849,], output)
mod['func_1854'] = func_1854
mod = relay.transform.InferType()(mod)
var_1855 = relay.var("var_1855", dtype = "float32", shape = (4, 2, 10))#candidate|1855|(4, 2, 10)|var|float32
output = func_1854(var_1855)
func_1856 = relay.Function([var_1855], output)
mutated_mod['func_1856'] = func_1856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_1872 = relay.TupleGetItem(func_1703_call(), 2)
call_1873 = relay.TupleGetItem(func_1705_call(), 2)
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
var_1875 = relay.var("var_1875", dtype = "float64", shape = (100, 1))#candidate|1875|(100, 1)|var|float64
call_1874 = func_102_call(relay.reshape(var_1875.astype('float64'), [5, 5, 4]))
call_1876 = func_102_call(relay.reshape(var_1875.astype('float64'), [5, 5, 4]))
func_1285_call = mod.get_global_var('func_1285')
func_1287_call = mutated_mod.get_global_var('func_1287')
var_1881 = relay.var("var_1881", dtype = "uint32", shape = (864,))#candidate|1881|(864,)|var|uint32
call_1880 = relay.TupleGetItem(func_1285_call(relay.reshape(var_1881.astype('uint32'), [9, 6, 16])), 1)
call_1882 = relay.TupleGetItem(func_1287_call(relay.reshape(var_1881.astype('uint32'), [9, 6, 16])), 1)
func_753_call = mod.get_global_var('func_753')
func_756_call = mutated_mod.get_global_var('func_756')
var_1887 = relay.var("var_1887", dtype = "float64", shape = (2688,))#candidate|1887|(2688,)|var|float64
call_1886 = relay.TupleGetItem(func_753_call(relay.reshape(var_1887.astype('float64'), [12, 16, 14])), 1)
call_1888 = relay.TupleGetItem(func_756_call(relay.reshape(var_1887.astype('float64'), [12, 16, 14])), 1)
uop_1891 = relay.exp(call_1886.astype('float32')) # shape=(12, 16, 14)
uop_1893 = relay.exp(call_1888.astype('float32')) # shape=(12, 16, 14)
bop_1899 = relay.greater(var_1887.astype('bool'), var_1875.astype('bool')) # shape=(100, 2688)
bop_1904 = relay.logical_xor(var_1887.astype('uint16'), bop_1899.astype('uint16')) # shape=(100, 2688)
func_432_call = mod.get_global_var('func_432')
func_434_call = mutated_mod.get_global_var('func_434')
const_1910 = relay.const([[1.091571,-9.095669,6.201147,-2.333644,-1.893132,-6.280632,0.282412,5.810893,-7.185439,-7.682220,-9.735486,1.008979,-0.607329,4.183874,-3.519784,9.889046,-2.029924,-9.595497,8.130475,-5.088603,-8.717189,-9.399487,2.174639,-4.515900,-6.936825,-1.873414,-0.503824,8.397143,-3.046522,8.352144,-7.601808,2.569593,-2.850445,-5.884643,-8.650803,5.194929,0.907056,1.573450,-9.718209,2.373457,-8.940305,4.407135,0.169667,0.374576,5.591842,-8.129594,-7.175829,-2.068487,-2.147620,-5.257626,0.678840,1.963110,2.729103,7.496396,-7.394281,-8.017142,-3.336305,-1.767716,-0.605016,-3.759966],[-1.306386,7.268424,-9.634813,-3.627106,-1.437189,4.552181,-8.893014,0.443950,0.067738,9.314873,1.600804,4.865028,5.645396,9.355778,8.400818,1.654786,-1.537151,-5.730809,2.739573,2.534715,7.170481,2.971762,-4.669846,2.042381,-1.888994,2.603161,6.244345,6.205332,-2.114026,-2.524891,-9.887103,-2.591874,0.254504,4.654272,9.972714,-2.618726,-5.528678,-0.980882,-2.856975,-5.105729,4.727122,-6.148969,-9.694149,4.202388,-5.439265,5.562936,-5.631856,-8.340385,-0.511172,-1.360780,-4.488530,0.804413,-6.282789,2.473766,5.546661,3.382362,-9.293752,2.846634,-8.361691,9.777832],[5.344269,1.566631,-5.268581,0.872953,-9.975409,-2.208933,-8.131835,5.923192,-4.547406,-5.445222,-8.663728,-3.465967,0.946824,-6.035933,-1.103373,3.534177,-8.292639,4.681762,-4.146722,2.876001,-2.785098,8.322684,4.557899,-3.477613,-2.553807,-3.653641,-3.508498,7.627934,-5.386069,8.589116,5.218909,-3.232825,-8.920610,9.273442,-2.380215,1.137479,-1.596490,-0.327477,4.040007,1.008364,1.852437,-8.154608,-9.017387,6.551946,4.237310,-4.421784,4.471771,-8.028460,-7.567830,-3.772046,9.286354,-9.064995,5.534958,9.754069,8.162218,-0.294194,-3.811478,-8.690433,-7.037018,-0.783396]], dtype = "float64")#candidate|1910|(3, 60)|const|float64
call_1909 = func_432_call(relay.reshape(const_1910.astype('float64'), [6, 3, 10]))
call_1911 = func_432_call(relay.reshape(const_1910.astype('float64'), [6, 3, 10]))
output = relay.Tuple([call_1872,call_1874,call_1880,var_1881,uop_1891,bop_1904,call_1909,const_1910,])
output2 = relay.Tuple([call_1873,call_1876,call_1882,var_1881,uop_1893,bop_1904,call_1911,const_1910,])
func_1932 = relay.Function([var_1875,var_1881,var_1887,], output)
mod['func_1932'] = func_1932
mod = relay.transform.InferType()(mod)
var_1933 = relay.var("var_1933", dtype = "float64", shape = (100, 1))#candidate|1933|(100, 1)|var|float64
var_1934 = relay.var("var_1934", dtype = "uint32", shape = (864,))#candidate|1934|(864,)|var|uint32
var_1935 = relay.var("var_1935", dtype = "float64", shape = (2688,))#candidate|1935|(2688,)|var|float64
output = func_1932(var_1933,var_1934,var_1935,)
func_1936 = relay.Function([var_1933,var_1934,var_1935,], output)
mutated_mod['func_1936'] = func_1936
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1942 = relay.var("var_1942", dtype = "float64", shape = (15, 10, 15))#candidate|1942|(15, 10, 15)|var|float64
uop_1943 = relay.erf(var_1942.astype('float64')) # shape=(15, 10, 15)
func_1932_call = mod.get_global_var('func_1932')
func_1936_call = mutated_mod.get_global_var('func_1936')
const_1957 = relay.const([-9.096235,-5.797274,8.917816,-7.493675,-0.722351,1.422719,-5.232238,2.787827,-9.959883,6.478542,-8.032264,8.624227,-1.872360,-8.174590,0.477131,1.085162,0.074148,-6.899488,9.420696,8.041998,0.610400,4.219303,1.192048,-8.944658,-4.856229,2.015923,4.822432,4.442586,6.917508,0.327200,-9.201523,1.912025,-7.025316,-0.097131,-5.838841,7.389329,-9.358738,8.205552,7.130662,2.328144,-8.615154,7.893912,3.942061,7.937025,-2.130161,-0.299105,8.196868,-2.982072,1.811500,8.164882,2.020891,2.366492,4.295034,0.100919,-1.587590,-3.687119,8.858253,-5.300873,8.451835,-5.548616,-5.607465,-4.051932,-8.193255,6.266548,4.842295,3.021136,-2.172654,-5.803575,0.396311,-9.011749,-7.729391,-7.402429,-8.296204,9.402786,-1.483035,-4.432291,-3.624714,-5.104932,8.209833,-8.927941,-4.296874,0.593409,1.601699,-0.582446,3.355883,-3.619493,-9.184384,-5.098114,-1.057901,-0.246627,5.165344,0.343181,9.568884,-7.445785,-1.582358,4.947149,-1.724254,9.241552,-0.557067,-0.881911], dtype = "float64")#candidate|1957|(100,)|const|float64
var_1958 = relay.var("var_1958", dtype = "uint32", shape = (864,))#candidate|1958|(864,)|var|uint32
var_1959 = relay.var("var_1959", dtype = "float64", shape = (96, 28))#candidate|1959|(96, 28)|var|float64
call_1956 = relay.TupleGetItem(func_1932_call(relay.reshape(const_1957.astype('float64'), [100, 1]), relay.reshape(var_1958.astype('uint32'), [864,]), relay.reshape(var_1959.astype('float64'), [2688,]), ), 6)
call_1960 = relay.TupleGetItem(func_1936_call(relay.reshape(const_1957.astype('float64'), [100, 1]), relay.reshape(var_1958.astype('uint32'), [864,]), relay.reshape(var_1959.astype('float64'), [2688,]), ), 6)
var_1968 = relay.var("var_1968", dtype = "float64", shape = (96, 28))#candidate|1968|(96, 28)|var|float64
bop_1969 = relay.bitwise_xor(var_1959.astype('int8'), relay.reshape(var_1968.astype('int8'), relay.shape_of(var_1959))) # shape=(96, 28)
output = relay.Tuple([uop_1943,call_1956,const_1957,var_1958,bop_1969,])
output2 = relay.Tuple([uop_1943,call_1960,const_1957,var_1958,bop_1969,])
func_1972 = relay.Function([var_1942,var_1958,var_1959,var_1968,], output)
mod['func_1972'] = func_1972
mod = relay.transform.InferType()(mod)
mutated_mod['func_1972'] = func_1972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mutated_mod.get_global_var('func_1972')
var_1974 = relay.var("var_1974", dtype = "float64", shape = (15, 10, 15))#candidate|1974|(15, 10, 15)|var|float64
var_1975 = relay.var("var_1975", dtype = "uint32", shape = (864,))#candidate|1975|(864,)|var|uint32
var_1976 = relay.var("var_1976", dtype = "float64", shape = (96, 28))#candidate|1976|(96, 28)|var|float64
var_1977 = relay.var("var_1977", dtype = "float64", shape = (96, 28))#candidate|1977|(96, 28)|var|float64
call_1973 = func_1972_call(var_1974,var_1975,var_1976,var_1977,)
output = call_1973
func_1978 = relay.Function([var_1974,var_1975,var_1976,var_1977,], output)
mutated_mod['func_1978'] = func_1978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_1988 = relay.TupleGetItem(func_1703_call(), 1)
call_1989 = relay.TupleGetItem(func_1705_call(), 1)
output = call_1988
output2 = call_1989
func_2013 = relay.Function([], output)
mod['func_2013'] = func_2013
mod = relay.transform.InferType()(mod)
mutated_mod['func_2013'] = func_2013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mutated_mod.get_global_var('func_2013')
call_2014 = func_2013_call()
output = call_2014
func_2015 = relay.Function([], output)
mutated_mod['func_2015'] = func_2015
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2026 = relay.var("var_2026", dtype = "float32", shape = (7, 1, 2))#candidate|2026|(7, 1, 2)|var|float32
uop_2027 = relay.log10(var_2026.astype('float32')) # shape=(7, 1, 2)
bop_2029 = relay.maximum(uop_2027.astype('int8'), relay.reshape(var_2026.astype('int8'), relay.shape_of(uop_2027))) # shape=(7, 1, 2)
bop_2033 = relay.divide(var_2026.astype('float32'), relay.reshape(uop_2027.astype('float32'), relay.shape_of(var_2026))) # shape=(7, 1, 2)
output = relay.Tuple([bop_2029,bop_2033,])
output2 = relay.Tuple([bop_2029,bop_2033,])
func_2038 = relay.Function([var_2026,], output)
mod['func_2038'] = func_2038
mod = relay.transform.InferType()(mod)
var_2039 = relay.var("var_2039", dtype = "float32", shape = (7, 1, 2))#candidate|2039|(7, 1, 2)|var|float32
output = func_2038(var_2039)
func_2040 = relay.Function([var_2039], output)
mutated_mod['func_2040'] = func_2040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2110 = relay.TupleGetItem(func_1703_call(), 1)
call_2111 = relay.TupleGetItem(func_1705_call(), 1)
func_432_call = mod.get_global_var('func_432')
func_434_call = mutated_mod.get_global_var('func_434')
const_2114 = relay.const([1.924135,-8.023110,4.884940,3.181518,-8.275200,1.822119,-6.124230,3.467168,6.710151,-2.701882,-9.873712,-3.388146,1.677879,-5.698142,-5.743882,-6.098402,-6.106765,9.412198,1.315752,-5.203615,-2.674667,-4.118609,-7.392831,-2.684939,8.071270,-4.088523,-2.166474,6.341800,-3.272869,-1.026453,1.475982,-3.984815,0.895304,-4.436345,-3.113935,8.758680,-8.043680,6.231265,6.629126,-4.000933,4.643571,-9.820019,7.930150,9.069505,1.745737,6.201740,-3.071614,6.215696,7.179803,-8.301802,-5.930159,-1.839631,4.542579,5.505310,-4.061990,2.587152,-9.711282,1.170518,5.401408,9.831688,4.727130,-0.011828,-6.779311,0.543476,9.496730,-8.827043,7.026651,-6.911920,-1.428030,3.414473,-3.680081,-3.876499,7.106925,-9.780723,-0.442385,4.023890,-6.797405,3.409185,8.509190,-5.443850,-6.561091,5.052275,-4.653142,-3.422699,5.469817,8.344573,-6.219406,8.546498,6.342284,5.228579,1.863316,7.144819,-9.156089,2.923263,-3.905592,-1.324983,-6.472021,-4.467974,5.902814,8.086019,1.320103,-9.627813,2.382184,6.535651,-9.817417,-9.391085,4.113058,3.913098,1.828658,-8.116130,3.894440,-7.115862,-8.456558,-2.457921,-6.501403,-2.644005,-1.293050,2.839582,-6.758941,-0.913624,9.326020,1.530668,0.546082,-5.334482,0.705506,-2.898822,1.632581,-0.453359,3.708084,-3.186596,-3.904383,4.219382,6.340303,-6.686170,0.652579,-6.385180,-5.739118,-9.757197,3.551789,-9.456876,3.012582,6.880677,8.608590,-8.222039,-3.797943,-5.624986,2.335297,7.946770,0.804188,4.747491,-0.698639,8.858005,9.660618,-7.112694,8.570530,9.660891,5.508156,5.519922,-6.636630,-2.587606,-2.142693,2.836762,-3.935003,6.100841,8.672655,1.402175,-6.959174,-9.890903,-4.658915,-4.450527,7.056192,-0.316539,-8.760600,9.362121,5.236747,0.949136,3.985203,3.882711,0.462523,7.245063], dtype = "float64")#candidate|2114|(180,)|const|float64
call_2113 = func_432_call(relay.reshape(const_2114.astype('float64'), [6, 3, 10]))
call_2115 = func_432_call(relay.reshape(const_2114.astype('float64'), [6, 3, 10]))
output = relay.Tuple([call_2110,call_2113,const_2114,])
output2 = relay.Tuple([call_2111,call_2115,const_2114,])
func_2122 = relay.Function([], output)
mod['func_2122'] = func_2122
mod = relay.transform.InferType()(mod)
mutated_mod['func_2122'] = func_2122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2122_call = mutated_mod.get_global_var('func_2122')
call_2123 = func_2122_call()
output = call_2123
func_2124 = relay.Function([], output)
mutated_mod['func_2124'] = func_2124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2149 = func_2013_call()
call_2150 = func_2013_call()
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
const_2160 = relay.const([5.421780,-7.700256,-4.043423,5.646690,1.519691,-6.165973,-4.401566,-1.337965,9.297116,9.162138,-4.691111,8.416409,7.651920,6.644915,4.122335,-2.233952,5.969207,-5.139949,9.793036,-9.089462,-0.865020,7.682640,-7.656800,5.373979,9.055039,8.766795,-1.765872,9.480071,4.581587,-8.077666,8.406745,0.523424,-6.226599,5.213216,-5.302407,-6.367408,-9.809944,0.470469,3.190389,-1.180933,2.599556,-7.931249,-4.661821,-2.018618,-1.941665,7.165179,2.246923,-5.732653,-9.753168,-7.606484,-7.634358,-4.478494,-0.473462,1.490188,-9.244238,-8.770516,1.322121,6.137866,-2.854824,7.266501,1.428213,0.966177,-5.598596,-9.900288,0.647550,5.151912,4.526592,-9.095034,0.444201,4.315005,6.705355,0.796898,-3.484857,8.208823,-2.222043,6.887401,1.438542,7.478049,-3.699560,-5.891537,-7.177991,2.726515,9.689321,5.249872,5.529781,6.062725,-5.874625,9.144569,0.796814,7.249934,-5.201041,4.586117,7.495477,9.324675,-7.239628,7.545632,9.120787,-6.560512,-2.315318,4.362317], dtype = "float64")#candidate|2160|(100,)|const|float64
call_2159 = func_102_call(relay.reshape(const_2160.astype('float64'), [5, 5, 4]))
call_2161 = func_102_call(relay.reshape(const_2160.astype('float64'), [5, 5, 4]))
output = relay.Tuple([call_2149,call_2159,const_2160,])
output2 = relay.Tuple([call_2150,call_2161,const_2160,])
func_2180 = relay.Function([], output)
mod['func_2180'] = func_2180
mod = relay.transform.InferType()(mod)
mutated_mod['func_2180'] = func_2180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mutated_mod.get_global_var('func_2180')
call_2181 = func_2180_call()
output = call_2181
func_2182 = relay.Function([], output)
mutated_mod['func_2182'] = func_2182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2200 = relay.TupleGetItem(func_1703_call(), 2)
call_2201 = relay.TupleGetItem(func_1705_call(), 2)
output = relay.Tuple([call_2200,])
output2 = relay.Tuple([call_2201,])
func_2229 = relay.Function([], output)
mod['func_2229'] = func_2229
mod = relay.transform.InferType()(mod)
output = func_2229()
func_2230 = relay.Function([], output)
mutated_mod['func_2230'] = func_2230
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_2268 = relay.TupleGetItem(func_2229_call(), 0)
call_2269 = relay.TupleGetItem(func_2230_call(), 0)
func_2038_call = mod.get_global_var('func_2038')
func_2040_call = mutated_mod.get_global_var('func_2040')
var_2298 = relay.var("var_2298", dtype = "float32", shape = (14,))#candidate|2298|(14,)|var|float32
call_2297 = relay.TupleGetItem(func_2038_call(relay.reshape(var_2298.astype('float32'), [7, 1, 2])), 1)
call_2299 = relay.TupleGetItem(func_2040_call(relay.reshape(var_2298.astype('float32'), [7, 1, 2])), 1)
func_897_call = mod.get_global_var('func_897')
func_901_call = mutated_mod.get_global_var('func_901')
var_2313 = relay.var("var_2313", dtype = "uint64", shape = (56,))#candidate|2313|(56,)|var|uint64
const_2314 = relay.const([-5,-2,5,6,-5,9,10,7,2,9,10,10,8,2,9,3,2,6,9,3,8,5,-1,3,-4,1,-6,6,7,3,-3,9,2,-7,9,4,1,5,-2,7,-3,-1,-9,3,7,1,-2,9,10,-6,-5,6,2,8,-10,-1,3,-3,1,8,2,9,-4,10,4,2,-8,5,-8,1,10,-4,-4,-7,3,-4,-9,-8,1,6,6,9,6,2,-9,-5,-7,-3,-6,-7,-6,-3,-3,-7,-1,-2,-2,-10,4,-6,5,3,-10,4,-7,-6,-3,7,2,-2,8,1,-6,-10,-3,5,-6,1,-7,2,9,8,-9,-7,10,5,3,5,6,-10,-10,8,-5,3,-5,9,-5,5,-3,-4,-4,-8,4,6,1,-1,-3,8,-8,-4,-8,-9,2,-6,10,6,6,1,-9,1,5,10,1,-9,-9,-3,8,9,-10,2,4,2,-4,-1,9,1,-4,-3,-9,3,5,-6,-10,2,-1,-7,-4,6,-1,-9,8,4,10,-8,-8,-8,7,-8,8,-6,-4,-3,-2,-4,-5,3,4,-7,5,-5,6,-7,-9,9,-5,-6,10,7,8,6,6,-7,9,7,9,8,-7,-10,2,-6,6,7,-3,9,6,5,5,4,-7,-7,-7,4,9,-2,3,7,-10,-7,-9,-6,-2,-8,-4,10,-7,10,9,8,9,-9,8,6,-8,-4,-9,-1,1,5,-6,-7,-1,5,-4,-8,-4,9,-10,-3,6,-7,-8,-4,-2,4,-6,-10,-9,-7,-9,8,-1,-9,-10,3,-10,2,3,-6,-7,-2,3,-1,7,9,-2,-1,-4,6,-3,-3,-9,2,3,6,10,4,-8,-8,-3,-10,4,10,10,-5,2,5,-2,-5,6,-4,7,-2,5,9,6,4,9,-1,7,1,3,5,4,2,-9,-6,6,-3,-7,10,-2,-5,-6,1,2,7,7,-5,-9,-8,-3,7,2,4,-4,3,7,-8,-4,-10,-10,-6,-6,7,5,-6,-10,2], dtype = "uint8")#candidate|2314|(378,)|const|uint8
call_2312 = relay.TupleGetItem(func_897_call(relay.reshape(var_2313.astype('uint64'), [2, 4, 7]), relay.reshape(var_2313.astype('uint64'), [2, 4, 7]), relay.reshape(const_2314.astype('uint8'), [378,]), ), 1)
call_2315 = relay.TupleGetItem(func_901_call(relay.reshape(var_2313.astype('uint64'), [2, 4, 7]), relay.reshape(var_2313.astype('uint64'), [2, 4, 7]), relay.reshape(const_2314.astype('uint8'), [378,]), ), 1)
var_2338 = relay.var("var_2338", dtype = "uint8", shape = (378,))#candidate|2338|(378,)|var|uint8
bop_2339 = relay.power(const_2314.astype('float64'), relay.reshape(var_2338.astype('float64'), relay.shape_of(const_2314))) # shape=(378,)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2344 = relay.TupleGetItem(func_1703_call(), 0)
call_2345 = relay.TupleGetItem(func_1705_call(), 0)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2346 = func_2013_call()
call_2347 = func_2013_call()
func_753_call = mod.get_global_var('func_753')
func_756_call = mutated_mod.get_global_var('func_756')
call_2352 = relay.TupleGetItem(func_753_call(relay.reshape(call_2346.astype('float64'), [12, 16, 14])), 1)
call_2353 = relay.TupleGetItem(func_756_call(relay.reshape(call_2346.astype('float64'), [12, 16, 14])), 1)
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
var_2355 = relay.var("var_2355", dtype = "float64", shape = (100,))#candidate|2355|(100,)|var|float64
call_2354 = func_102_call(relay.reshape(var_2355.astype('float64'), [5, 5, 4]))
call_2356 = func_102_call(relay.reshape(var_2355.astype('float64'), [5, 5, 4]))
output = relay.Tuple([call_2268,call_2297,var_2298,call_2312,var_2313,bop_2339,call_2344,call_2346,call_2352,call_2354,var_2355,])
output2 = relay.Tuple([call_2269,call_2299,var_2298,call_2315,var_2313,bop_2339,call_2345,call_2347,call_2353,call_2356,var_2355,])
func_2374 = relay.Function([var_2298,var_2313,var_2338,var_2355,], output)
mod['func_2374'] = func_2374
mod = relay.transform.InferType()(mod)
mutated_mod['func_2374'] = func_2374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2374_call = mutated_mod.get_global_var('func_2374')
var_2376 = relay.var("var_2376", dtype = "float32", shape = (14,))#candidate|2376|(14,)|var|float32
var_2377 = relay.var("var_2377", dtype = "uint64", shape = (56,))#candidate|2377|(56,)|var|uint64
var_2378 = relay.var("var_2378", dtype = "uint8", shape = (378,))#candidate|2378|(378,)|var|uint8
var_2379 = relay.var("var_2379", dtype = "float64", shape = (100,))#candidate|2379|(100,)|var|float64
call_2375 = func_2374_call(var_2376,var_2377,var_2378,var_2379,)
output = call_2375
func_2380 = relay.Function([var_2376,var_2377,var_2378,var_2379,], output)
mutated_mod['func_2380'] = func_2380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_2434 = relay.TupleGetItem(func_2122_call(), 0)
call_2435 = relay.TupleGetItem(func_2124_call(), 0)
func_1285_call = mod.get_global_var('func_1285')
func_1287_call = mutated_mod.get_global_var('func_1287')
const_2437 = relay.const([-6,6,-1,-1,7,1,-7,3,2,-2,6,-2,-4,3,1,5,-10,-1,-7,1,-6,-6,-7,-5,-8,-2,7,-3,-4,4,6,-3,2,1,-6,5,-7,5,1,3,-10,-6,-8,-10,5,8,-3,10,-4,-5,5,4,-3,6,-2,-5,-3,-9,-2,-5,-3,10,5,3,3,2,2,-10,7,-8,4,-1,-4,1,-1,5,-9,-4,-7,6,9,-7,-5,5,-4,1,6,-6,2,8,-4,-9,-8,-7,-2,-4,-10,9,2,7,6,-4,10,5,-9,-9,-8,8,-3,-10,10,3,8,7,-7,6,4,8,-3,-10,-5,-7,-7,-8,2,3,-5,1,-2,5,-5,-5,-2,5,-5,8,-3,-5,-10,1,5,3,2,-5,-4,-6,-1,10,-3,9,-9,9,3,-10,-9,6,-5,-3,-3,-3,-1,8,1,5,2,-1,-10,2,-4,-6,-5,6,1,9,10,-3,-3,2,10,8,-3,2,9,7,-6,8,-5,-1,8,2,-4,-10,7,-2,1,-6,9,8,-2,3,7,-1,-8,1,-4,3,-10,-8,-6,2,10,-2,8,7,4,-9,-1,-5,3,-4,-1,-7,-9,7,-5,3,-9,-4,-4,8,-1,10,7,9,-3,7,10,-6,10,8,-4,-1,-7,-3,-6,-8,-8,-8,-4,-3,10,3,-5,-2,-2,-10,-1,-3,-8,9,5,-2,8,8,-7,-8,-2,-10,10,1,2,2,6,4,-10,-9,-4,10,1,3,8,6,4,6,-7,10,10,-5,-5,-2,5,4,2,-3,-1,-2,10,8,3,-2,2,-10,-3,-9,-7,7,-2,-1,-4,-1,3,-5,-1,-10,6,-5,-3,-3,1,7,2,-9,-3,-3,7,4,-7,-2,2,5,4,-8,-4,-3,2,-2,-4,-3,3,3,-9,-9,-6,7,3,-7,3,-3,-8,-1,-6,7,3,-6,5,6,8,2,-6,-5,-2,-5,-10,1,5,-10,-6,3,-8,-6,10,-9,-5,6,2,10,6,9,2,-5,4,1,2,-9,-5,-3,5,5,5,-3,5,-10,-9,-8,-1,-1,8,-4,6,-1,6,-5,-8,-5,6,-7,-3,3,-6,-4,-3,3,-5,-10,-8,-1,6,7,8,6,-2,-4,-10,7,-7,-4,-6,-10,3,3,2,6,-1,4,9,-3,1,-5,6,8,5,-4,10,-1,5,-4,9,6,5,1,-10,-4,-4,3,-3,3,-4,6,-10,-6,-4,-3,10,-4,1,-10,8,1,3,1,-6,3,-9,3,9,-6,8,5,-9,5,-4,1,9,5,-6,9,9,2,-2,-9,4,3,5,2,-8,-3,1,6,6,3,6,-5,-5,-4,4,9,9,10,1,7,10,-2,6,3,7,-5,10,-9,9,-4,-9,8,5,3,1,-5,-1,-4,-5,8,-2,5,5,9,-9,6,7,7,6,-6,-9,-10,8,-7,10,4,-10,-6,-5,10,1,2,-2,8,7,6,4,8,7,-4,-1,-1,-7,8,3,8,4,9,-6,-3,-10,-1,-3,8,-4,-9,1,8,6,-2,1,-2,-9,-10,-8,10,-4,-6,-3,8,-7,4,8,7,-7,-2,8,-5,5,-4,2,2,-8,-2,-3,8,-9,7,4,3,5,-2,-9,2,4,-8,-1,-2,-1,7,5,3,8,1,-3,3,-10,-3,-4,5,-10,-6,-5,9,3,7,3,-1,-9,-3,9,-2,-3,-9,9,-6,-9,1,3,10,-6,-3,9,10,-8,-2,-8,-3,-1,-7,6,-9,-8,-9,-10,4,-7,7,-2,-6,9,-5,-4,10,-3,-6,-2,4,-7,10,3,5,2,-10,8,-3,3,8,8,-3,-6,-10,5,-8,-8,-8,-2,-4,5,-9,9,-4,1,2,-7,-8,5,1,3,-10,8,5,3,8,-3,-4,8,5,-7,9,-1,9,7,5,1,-3,3,1,-7,-7,6,3,9,-5,6,-2,-3,2,-1,1,2,1,4,-3,-4,1,2,-6,-3,-7,9,5,-10,-3,4,5,10,1,-1,-4,7,-5,-3,-9,-3,7,-8,3,1,-1,2,3,3,7,-10,-10,-10,7,-5,-2,-5,-10,1,-10,-1,-9,8,-8,-8,6,-8,7,1,-1,-10,-7,-10,-7,2,5,-8,-10,-6,9,1,-2,-4,-7,2,-3,9,-9,-9,-1,-4,6,-1,-2,3,1,-9,-3,3,-1,-7,9,-4,-4,7,-4,2,-4,-6,-9,8,-3,4,-3,7,4,-8,-10,3,5,-9,-10,-9,-1,-3,-4,-2,-9,6,-3,-5,8,10,-8,-2,-3,-2,-2,-9,5], dtype = "uint32")#candidate|2437|(864,)|const|uint32
call_2436 = relay.TupleGetItem(func_1285_call(relay.reshape(const_2437.astype('uint32'), [9, 6, 16])), 1)
call_2438 = relay.TupleGetItem(func_1287_call(relay.reshape(const_2437.astype('uint32'), [9, 6, 16])), 1)
output = relay.Tuple([call_2434,call_2436,const_2437,])
output2 = relay.Tuple([call_2435,call_2438,const_2437,])
func_2446 = relay.Function([], output)
mod['func_2446'] = func_2446
mod = relay.transform.InferType()(mod)
mutated_mod['func_2446'] = func_2446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mutated_mod.get_global_var('func_2446')
call_2447 = func_2446_call()
output = call_2447
func_2448 = relay.Function([], output)
mutated_mod['func_2448'] = func_2448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_2454 = relay.TupleGetItem(func_1666_call(), 0)
call_2455 = relay.TupleGetItem(func_1668_call(), 0)
var_2468 = relay.var("var_2468", dtype = "float32", shape = (4, 2, 10))#candidate|2468|(4, 2, 10)|var|float32
bop_2469 = relay.right_shift(call_2454.astype('int64'), relay.reshape(var_2468.astype('int64'), relay.shape_of(call_2454))) # shape=(4, 2, 10)
bop_2472 = relay.right_shift(call_2455.astype('int64'), relay.reshape(var_2468.astype('int64'), relay.shape_of(call_2455))) # shape=(4, 2, 10)
bop_2473 = relay.maximum(bop_2469.astype('uint16'), relay.reshape(var_2468.astype('uint16'), relay.shape_of(bop_2469))) # shape=(4, 2, 10)
bop_2476 = relay.maximum(bop_2472.astype('uint16'), relay.reshape(var_2468.astype('uint16'), relay.shape_of(bop_2472))) # shape=(4, 2, 10)
func_1285_call = mod.get_global_var('func_1285')
func_1287_call = mutated_mod.get_global_var('func_1287')
const_2482 = relay.const([7,10,-2,-1,10,2,-8,9,-9,8,-6,-10,3,-5,4,-4,-1,-5,7,7,1,-9,8,-4,-4,-9,-5,5,2,-2,-5,-9,9,1,-9,-5,8,7,2,2,-4,-6,-7,8,-2,8,-5,6,-1,1,-5,-8,10,8,-9,-8,1,-3,-9,-10,9,8,4,-9,-1,5,-9,-9,-2,-1,-7,-5,4,-7,-7,4,4,2,-8,-5,5,4,-4,-3,10,-7,-4,3,8,-3,-6,3,-10,8,-7,-6,-2,6,-5,-2,4,2,-10,8,-5,-5,9,-9,-4,-9,-1,-3,7,-8,-10,-7,-10,4,4,-1,4,-9,5,-4,-6,-10,-7,-9,2,-7,10,9,-3,-9,9,-5,6,-8,2,10,4,-5,2,-5,3,-1,4,-10,-4,-3,1,-6,1,-9,-7,-3,10,-9,-3,-1,6,7,1,-8,-10,-8,8,9,-9,6,-9,4,-8,4,-7,6,-6,-5,2,-9,-4,-3,-10,-4,1,4,9,-9,-3,8,9,-5,-9,-9,-2,3,-7,8,7,8,-4,-7,-10,-1,1,-5,3,5,-8,1,5,6,10,-1,8,6,2,6,-4,-7,4,7,-1,7,9,1,-4,7,-3,-5,-8,4,6,3,4,-7,1,-6,-6,-10,-5,-10,10,-4,-8,3,-2,7,4,10,-10,-8,10,-1,-9,1,4,2,3,-6,-7,-8,-5,-10,6,10,-6,-7,2,-3,3,-4,9,10,4,-2,6,-3,-8,-3,-3,-2,-1,5,9,4,-4,-8,6,5,-5,-4,-1,-3,8,-5,6,9,-6,-1,-4,6,7,3,1,5,6,-6,-6,8,-4,-6,8,-8,-4,1,7,-8,-1,-10,-8,10,-6,-3,-7,8,-3,2,2,8,-2,-3,-6,5,-1,-10,2,7,8,10,-10,-7,-3,-6,2,2,-1,-2,6,-4,4,10,-6,4,6,3,4,-10,-10,3,-10,-5,8,8,7,-2,8,7,-8,9,-6,-3,2,-7,-10,6,5,-1,-9,10,-2,8,-6,-1,-7,10,5,-6,-9,-1,5,-8,-9,5,9,3,-10,9,-6,-2,-3,8,8,-4,7,5,-3,2,2,-9,5,-10,2,10,-2,-3,-5,-2,5,9,3,3,6,9,5,9,-9,4,10,1,8,-8,5,5,8,-1,7,1,9,1,8,-5,-1,-8,5,-3,-3,6,-1,-5,9,3,10,-9,-2,5,2,-6,-1,4,-4,-8,9,5,9,10,8,3,-5,-8,-5,-6,-3,2,7,-1,-4,-9,5,5,-4,1,8,9,-6,-2,-10,-10,3,8,-7,-4,-9,5,5,-9,5,-2,-4,8,-9,-1,-3,3,-4,-9,-1,-5,5,8,10,-10,7,-9,6,1,2,-6,4,2,-2,10,-3,8,4,10,1,-8,4,1,7,-5,3,-3,-3,-8,5,10,4,-7,-2,-2,-7,-3,-10,-10,6,3,9,8,-10,-6,-6,-4,-6,9,-8,-3,1,-5,-10,-7,4,-8,7,-6,-4,-1,-1,-1,6,5,8,6,-3,2,9,2,9,-6,-7,3,-5,2,-9,-2,-2,6,4,1,4,5,-3,7,-8,-10,5,6,6,-7,10,8,8,-2,-8,2,-8,-5,3,-5,-3,5,6,10,-9,9,-8,-1,-2,9,-8,2,-9,7,9,4,-4,-1,-8,6,-10,7,1,4,-3,-5,-7,6,-6,-7,-4,-6,-10,1,-2,7,2,-9,2,-8,8,5,-2,1,-6,10,1,-10,-7,-9,10,10,-10,6,-4,-8,-10,10,-5,-8,1,-3,-8,-3,6,5,-8,7,-5,1,-9,-2,3,9,-2,9,8,6,-4,2,-1,-5,3,-10,-7,8,9,3,3,-9,2,8,1,6,3,7,-7,6,6,-10,6,-9,9,8,-5,-9,-7,6,3,5,-2,-1,-7,-10,-2,8,-8,2,8,-3,6,-1,-1,3,9,-1,4,-1,-10,6,1,9,-8,9,2,2,-4,-3,9,8,-7,10,-10,2,2,-1,9,-4,-10,6,7,-9,2,5,-9,-1,9,-8,10,8,-8,-5,-8,6,2,-9,2,9,2,-5,-6,-7,-6,5,-7,-10,-3,-1,-5,-10,-9,-5,8,4,9,-3,4,9,7,7,-10,-6,-1,-5,-4,-5,-3,5,-6,3,6,10,6,-1,-5,4,5,-8,6,5,6,2,-10,-3,6,2,2,4,-3,-8,1,-4,1,-3,3,7,-5,1,8,4,9,-5,-9,-8,4,-9,-7,1,4,5,3,-7,2,6,3,3,-5,5,-7,-6,-7,8,-7,2], dtype = "uint32")#candidate|2482|(864,)|const|uint32
call_2481 = relay.TupleGetItem(func_1285_call(relay.reshape(const_2482.astype('uint32'), [9, 6, 16])), 3)
call_2483 = relay.TupleGetItem(func_1287_call(relay.reshape(const_2482.astype('uint32'), [9, 6, 16])), 3)
output = relay.Tuple([bop_2473,call_2481,const_2482,])
output2 = relay.Tuple([bop_2476,call_2483,const_2482,])
func_2484 = relay.Function([var_2468,], output)
mod['func_2484'] = func_2484
mod = relay.transform.InferType()(mod)
var_2485 = relay.var("var_2485", dtype = "float32", shape = (4, 2, 10))#candidate|2485|(4, 2, 10)|var|float32
output = func_2484(var_2485)
func_2486 = relay.Function([var_2485], output)
mutated_mod['func_2486'] = func_2486
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2507 = relay.var("var_2507", dtype = "float32", shape = (2, 11, 16))#candidate|2507|(2, 11, 16)|var|float32
var_2508 = relay.var("var_2508", dtype = "float32", shape = (2, 11, 16))#candidate|2508|(2, 11, 16)|var|float32
bop_2509 = relay.floor_mod(var_2507.astype('float32'), relay.reshape(var_2508.astype('float32'), relay.shape_of(var_2507))) # shape=(2, 11, 16)
output = bop_2509
output2 = bop_2509
func_2512 = relay.Function([var_2507,var_2508,], output)
mod['func_2512'] = func_2512
mod = relay.transform.InferType()(mod)
var_2513 = relay.var("var_2513", dtype = "float32", shape = (2, 11, 16))#candidate|2513|(2, 11, 16)|var|float32
var_2514 = relay.var("var_2514", dtype = "float32", shape = (2, 11, 16))#candidate|2514|(2, 11, 16)|var|float32
output = func_2512(var_2513,var_2514,)
func_2515 = relay.Function([var_2513,var_2514,], output)
mutated_mod['func_2515'] = func_2515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_2565 = relay.TupleGetItem(func_2446_call(), 1)
call_2566 = relay.TupleGetItem(func_2448_call(), 1)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
call_2572 = relay.TupleGetItem(func_624_call(relay.reshape(call_2565.astype('uint8'), [9, 7, 6])), 0)
call_2573 = relay.TupleGetItem(func_627_call(relay.reshape(call_2565.astype('uint8'), [9, 7, 6])), 0)
bop_2576 = relay.logical_or(call_2572.astype('bool'), relay.reshape(call_2565.astype('bool'), relay.shape_of(call_2572))) # shape=(9, 7, 6)
bop_2579 = relay.logical_or(call_2573.astype('bool'), relay.reshape(call_2566.astype('bool'), relay.shape_of(call_2573))) # shape=(9, 7, 6)
func_2512_call = mod.get_global_var('func_2512')
func_2515_call = mutated_mod.get_global_var('func_2515')
var_2587 = relay.var("var_2587", dtype = "float32", shape = (352,))#candidate|2587|(352,)|var|float32
call_2586 = func_2512_call(relay.reshape(var_2587.astype('float32'), [2, 11, 16]), relay.reshape(var_2587.astype('float32'), [2, 11, 16]), )
call_2588 = func_2512_call(relay.reshape(var_2587.astype('float32'), [2, 11, 16]), relay.reshape(var_2587.astype('float32'), [2, 11, 16]), )
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
const_2604 = relay.const([[-3.146532],[0.591339],[-5.254817],[3.507949],[-7.466002],[9.137977],[-7.065141],[2.977469],[-5.015604],[-3.395117],[-2.544841],[-5.685059],[-4.050362],[0.900985],[9.254132],[5.647186],[-4.389282],[-8.231211],[0.720952],[-6.181643],[8.578536],[6.107105],[-2.327801],[-9.031642],[-7.732657],[3.849516],[4.776212],[-4.678382],[1.285116],[-5.106686],[-1.929098],[-5.974291],[-1.097421],[1.485601],[-8.714842],[-3.699674],[2.113676],[8.758855],[-9.772734],[-3.634194],[-2.193656],[1.434495],[4.035435],[-3.618755],[9.048370],[4.567324],[-2.856829],[-4.830785],[1.696001],[-4.908745],[-6.656266],[8.703636],[9.465966],[2.618733],[6.681122],[-5.201788],[0.665347],[1.056937],[-0.515676],[2.879907],[-3.384336],[9.274039],[-0.673535],[9.934079],[8.003078],[4.951902],[-5.127515],[9.886081],[9.300359],[7.918180],[-3.407036],[-2.558764],[0.959748],[8.636105],[4.404486],[6.651210],[1.881384],[-4.723519],[0.953690],[7.880054],[-8.357677],[-1.993866],[-7.958219],[-2.057990],[-4.197764],[-4.601332],[3.622729],[-8.279627],[-2.499466],[-5.404461],[-6.477637],[4.493682],[-7.271693],[6.133801],[4.732273],[-6.705326],[0.075481],[4.811032],[-1.387841],[9.417155]], dtype = "float64")#candidate|2604|(100, 1)|const|float64
call_2603 = func_102_call(relay.reshape(const_2604.astype('float64'), [5, 5, 4]))
call_2605 = func_102_call(relay.reshape(const_2604.astype('float64'), [5, 5, 4]))
output = relay.Tuple([bop_2576,call_2586,var_2587,call_2603,const_2604,])
output2 = relay.Tuple([bop_2579,call_2588,var_2587,call_2605,const_2604,])
func_2608 = relay.Function([var_2587,], output)
mod['func_2608'] = func_2608
mod = relay.transform.InferType()(mod)
var_2609 = relay.var("var_2609", dtype = "float32", shape = (352,))#candidate|2609|(352,)|var|float32
output = func_2608(var_2609)
func_2610 = relay.Function([var_2609], output)
mutated_mod['func_2610'] = func_2610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_2642 = relay.TupleGetItem(func_1666_call(), 0)
call_2643 = relay.TupleGetItem(func_1668_call(), 0)
func_753_call = mod.get_global_var('func_753')
func_756_call = mutated_mod.get_global_var('func_756')
var_2657 = relay.var("var_2657", dtype = "float64", shape = (2688,))#candidate|2657|(2688,)|var|float64
call_2656 = relay.TupleGetItem(func_753_call(relay.reshape(var_2657.astype('float64'), [12, 16, 14])), 0)
call_2658 = relay.TupleGetItem(func_756_call(relay.reshape(var_2657.astype('float64'), [12, 16, 14])), 0)
output = relay.Tuple([call_2642,call_2656,var_2657,])
output2 = relay.Tuple([call_2643,call_2658,var_2657,])
func_2661 = relay.Function([var_2657,], output)
mod['func_2661'] = func_2661
mod = relay.transform.InferType()(mod)
mutated_mod['func_2661'] = func_2661
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2662 = relay.var("var_2662", dtype = "float64", shape = (2688,))#candidate|2662|(2688,)|var|float64
func_2661_call = mutated_mod.get_global_var('func_2661')
call_2663 = func_2661_call(var_2662)
output = call_2663
func_2664 = relay.Function([var_2662], output)
mutated_mod['func_2664'] = func_2664
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2735 = relay.const([[[9.947857,7.976888,-0.331257,3.176641,-6.864032,-2.057615,3.002863,5.769666,-5.640119,-5.528694,-8.825641,-0.091781],[7.154525,4.436493,-2.830553,-2.880832,-1.437231,1.989331,3.773735,-5.039618,0.152897,3.783644,-7.231758,-6.366483],[-0.741286,4.663025,8.532372,-0.924562,1.786647,-3.884834,5.723561,-0.567578,-4.518832,-9.421520,-5.516202,-3.154714],[9.623021,-1.053380,-0.803683,6.158530,-1.750645,5.947879,-5.274367,-0.870331,9.754017,8.270713,-7.749150,5.979826],[6.181224,-7.906289,-4.414914,6.514092,1.695171,0.463064,-3.030793,-0.253682,2.968089,-8.895682,-3.051196,-3.824917],[-3.849489,-8.905836,1.008650,4.456398,5.650401,-0.462419,-3.629790,-0.953962,7.043795,0.597136,-1.940250,-6.382358],[4.386463,5.057421,-3.467437,-0.700079,9.515645,9.352352,-3.788573,5.521891,-1.714960,9.567975,6.933692,-6.247833],[1.428784,6.775020,-7.385869,-3.405322,-1.528615,9.185180,5.987973,2.192332,-8.548676,2.256390,-7.924015,-4.071342],[-6.302384,7.959538,9.481288,-7.879465,-9.486426,-0.211500,-1.598571,-3.014573,-1.177628,8.128061,6.642656,-7.714756]],[[6.324245,-0.431460,-8.634389,-1.613809,-0.401519,6.996161,-4.510859,3.899909,5.970173,1.002801,-7.491268,-5.022135],[2.613332,-2.965825,1.098774,-3.457278,-5.557204,-5.047530,3.073934,6.024264,-9.176070,-7.916897,-8.391400,5.259763],[5.883459,3.134812,9.287758,0.721444,0.862500,8.327418,-6.708078,8.109376,1.841200,-4.037035,4.411385,-2.052119],[-9.271633,-4.676593,-0.767176,-4.470436,-5.457466,5.074645,5.697827,-7.731104,-7.826003,0.336562,1.093833,0.310498],[-3.330272,2.860464,0.664230,-0.093088,-0.343574,1.829224,-8.126375,3.392964,1.114569,-4.503639,5.683109,-8.905277],[6.552144,-7.197784,-0.251754,1.247461,6.496311,-9.546803,-1.646998,-8.014398,6.769858,-9.221019,9.238643,-0.744584],[-0.548347,-2.365883,8.929892,-6.757184,-7.724308,4.159874,-4.537925,-1.227845,-9.833870,8.235335,3.726681,5.978873],[0.368478,-4.228047,8.534931,4.328578,-5.037437,3.795344,-0.790365,-1.101312,6.786865,-1.535556,-0.188374,6.064189],[7.106291,6.707048,3.158838,-9.744024,-7.318860,2.044294,1.307793,-0.605364,-0.527805,-4.245508,7.941407,-0.989518]],[[-7.015586,-6.712218,2.060791,7.654015,-6.653942,2.133668,-3.033650,-9.256875,-4.591244,-2.954181,2.501895,3.521170],[2.658932,-1.210769,-4.548394,6.408689,6.408613,3.240288,8.072560,-5.234588,-4.676444,1.609214,4.859729,3.766725],[-4.847605,2.903135,-9.341966,7.822743,-3.406769,-3.766454,-2.219202,-5.060958,-6.352106,-4.791688,-7.931012,8.815497],[-5.136278,6.858420,4.456947,-4.772309,5.785786,8.014929,-4.173565,8.676495,-1.096581,-8.829154,9.820266,9.389913],[-9.024469,2.588290,-0.120377,1.929638,-5.929284,-6.960244,-1.795794,0.568161,-2.419696,9.111531,0.066440,-7.196109],[7.453645,0.735089,7.131566,-5.682069,-5.278896,-3.034216,-7.858426,-0.007557,8.971771,-1.557813,6.512160,7.841128],[-5.052176,-6.457531,1.678739,-2.687287,9.310419,4.006865,-2.135956,3.889162,1.316768,5.824486,1.057419,-5.522731],[-2.804671,-6.651920,-6.645841,5.913936,3.499339,0.099948,-8.886619,2.602592,7.969298,-3.470080,-7.737101,-2.378417],[-6.069792,2.457627,9.397737,-0.128930,5.581243,2.112524,-3.324569,-8.391318,0.042124,-3.908210,4.807649,1.989054]]], dtype = "float64")#candidate|2735|(3, 9, 12)|const|float64
uop_2736 = relay.log10(const_2735.astype('float64')) # shape=(3, 9, 12)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2741 = func_2013_call()
call_2742 = func_2013_call()
output = relay.Tuple([uop_2736,call_2741,])
output2 = relay.Tuple([uop_2736,call_2742,])
func_2747 = relay.Function([], output)
mod['func_2747'] = func_2747
mod = relay.transform.InferType()(mod)
output = func_2747()
func_2748 = relay.Function([], output)
mutated_mod['func_2748'] = func_2748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2756 = relay.TupleGetItem(func_1703_call(), 0)
call_2757 = relay.TupleGetItem(func_1705_call(), 0)
output = call_2756
output2 = call_2757
func_2763 = relay.Function([], output)
mod['func_2763'] = func_2763
mod = relay.transform.InferType()(mod)
output = func_2763()
func_2764 = relay.Function([], output)
mutated_mod['func_2764'] = func_2764
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2767 = relay.var("var_2767", dtype = "float32", shape = (2, 3, 11))#candidate|2767|(2, 3, 11)|var|float32
uop_2768 = relay.tan(var_2767.astype('float32')) # shape=(2, 3, 11)
output = uop_2768
output2 = uop_2768
func_2773 = relay.Function([var_2767,], output)
mod['func_2773'] = func_2773
mod = relay.transform.InferType()(mod)
mutated_mod['func_2773'] = func_2773
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2774 = relay.var("var_2774", dtype = "float32", shape = (2, 3, 11))#candidate|2774|(2, 3, 11)|var|float32
func_2773_call = mutated_mod.get_global_var('func_2773')
call_2775 = func_2773_call(var_2774)
output = call_2775
func_2776 = relay.Function([var_2774], output)
mutated_mod['func_2776'] = func_2776
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2764_call = mutated_mod.get_global_var('func_2764')
call_2803 = func_2763_call()
call_2804 = func_2763_call()
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_2820 = relay.TupleGetItem(func_2229_call(), 0)
call_2821 = relay.TupleGetItem(func_2230_call(), 0)
output = relay.Tuple([call_2803,call_2820,])
output2 = relay.Tuple([call_2804,call_2821,])
func_2831 = relay.Function([], output)
mod['func_2831'] = func_2831
mod = relay.transform.InferType()(mod)
output = func_2831()
func_2832 = relay.Function([], output)
mutated_mod['func_2832'] = func_2832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_2846 = relay.TupleGetItem(func_2180_call(), 0)
call_2847 = relay.TupleGetItem(func_2182_call(), 0)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2849 = relay.TupleGetItem(func_1703_call(), 1)
call_2850 = relay.TupleGetItem(func_1705_call(), 1)
bop_2853 = relay.equal(call_2849.astype('bool'), relay.reshape(call_2846.astype('bool'), relay.shape_of(call_2849))) # shape=(2688,)
bop_2856 = relay.equal(call_2850.astype('bool'), relay.reshape(call_2847.astype('bool'), relay.shape_of(call_2850))) # shape=(2688,)
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_2871 = relay.TupleGetItem(func_2229_call(), 0)
call_2872 = relay.TupleGetItem(func_2230_call(), 0)
output = relay.Tuple([bop_2853,call_2871,])
output2 = relay.Tuple([bop_2856,call_2872,])
func_2874 = relay.Function([], output)
mod['func_2874'] = func_2874
mod = relay.transform.InferType()(mod)
output = func_2874()
func_2875 = relay.Function([], output)
mutated_mod['func_2875'] = func_2875
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_2927 = func_2013_call()
call_2928 = func_2013_call()
var_2949 = relay.var("var_2949", dtype = "float64", shape = (2688,))#candidate|2949|(2688,)|var|float64
bop_2950 = relay.maximum(call_2927.astype('int32'), relay.reshape(var_2949.astype('int32'), relay.shape_of(call_2927))) # shape=(2688,)
bop_2953 = relay.maximum(call_2928.astype('int32'), relay.reshape(var_2949.astype('int32'), relay.shape_of(call_2928))) # shape=(2688,)
var_2954 = relay.var("var_2954", dtype = "int32", shape = (2688,))#candidate|2954|(2688,)|var|int32
bop_2955 = relay.floor_divide(bop_2950.astype('float64'), relay.reshape(var_2954.astype('float64'), relay.shape_of(bop_2950))) # shape=(2688,)
bop_2958 = relay.floor_divide(bop_2953.astype('float64'), relay.reshape(var_2954.astype('float64'), relay.shape_of(bop_2953))) # shape=(2688,)
output = relay.Tuple([bop_2955,])
output2 = relay.Tuple([bop_2958,])
func_2967 = relay.Function([var_2949,var_2954,], output)
mod['func_2967'] = func_2967
mod = relay.transform.InferType()(mod)
var_2968 = relay.var("var_2968", dtype = "float64", shape = (2688,))#candidate|2968|(2688,)|var|float64
var_2969 = relay.var("var_2969", dtype = "int32", shape = (2688,))#candidate|2969|(2688,)|var|int32
output = func_2967(var_2968,var_2969,)
func_2970 = relay.Function([var_2968,var_2969,], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2979 = relay.var("var_2979", dtype = "float32", shape = (1, 12, 9))#candidate|2979|(1, 12, 9)|var|float32
uop_2980 = relay.cos(var_2979.astype('float32')) # shape=(1, 12, 9)
bop_2982 = relay.right_shift(uop_2980.astype('uint16'), relay.reshape(var_2979.astype('uint16'), relay.shape_of(uop_2980))) # shape=(1, 12, 9)
uop_2988 = relay.rsqrt(uop_2980.astype('float64')) # shape=(1, 12, 9)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_2993 = relay.TupleGetItem(func_1703_call(), 2)
call_2994 = relay.TupleGetItem(func_1705_call(), 2)
bop_2996 = relay.less_equal(uop_2988.astype('bool'), relay.reshape(bop_2982.astype('bool'), relay.shape_of(uop_2988))) # shape=(1, 12, 9)
output = relay.Tuple([call_2993,bop_2996,])
output2 = relay.Tuple([call_2994,bop_2996,])
func_3002 = relay.Function([var_2979,], output)
mod['func_3002'] = func_3002
mod = relay.transform.InferType()(mod)
var_3003 = relay.var("var_3003", dtype = "float32", shape = (1, 12, 9))#candidate|3003|(1, 12, 9)|var|float32
output = func_3002(var_3003)
func_3004 = relay.Function([var_3003], output)
mutated_mod['func_3004'] = func_3004
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_3013 = relay.TupleGetItem(func_2180_call(), 1)
call_3014 = relay.TupleGetItem(func_2182_call(), 1)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_3016 = func_2013_call()
call_3017 = func_2013_call()
output = relay.Tuple([call_3013,call_3016,])
output2 = relay.Tuple([call_3014,call_3017,])
func_3028 = relay.Function([], output)
mod['func_3028'] = func_3028
mod = relay.transform.InferType()(mod)
mutated_mod['func_3028'] = func_3028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3028_call = mutated_mod.get_global_var('func_3028')
call_3029 = func_3028_call()
output = call_3029
func_3030 = relay.Function([], output)
mutated_mod['func_3030'] = func_3030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_3034 = relay.TupleGetItem(func_2831_call(), 0)
call_3035 = relay.TupleGetItem(func_2832_call(), 0)
func_2374_call = mod.get_global_var('func_2374')
func_2380_call = mutated_mod.get_global_var('func_2380')
var_3051 = relay.var("var_3051", dtype = "float32", shape = (14, 1))#candidate|3051|(14, 1)|var|float32
const_3052 = relay.const([-7,2,-5,10,5,-8,5,-9,10,10,-4,1,5,-9,1,3,-7,7,-5,7,1,9,7,-10,2,10,5,9,3,-1,8,-2,6,6,-6,-5,2,-5,-4,7,9,9,9,1,8,6,-5,10,8,7,10,-3,8,3,-4,-5], dtype = "uint64")#candidate|3052|(56,)|const|uint64
var_3053 = relay.var("var_3053", dtype = "uint8", shape = (378,))#candidate|3053|(378,)|var|uint8
var_3054 = relay.var("var_3054", dtype = "float64", shape = (100,))#candidate|3054|(100,)|var|float64
call_3050 = relay.TupleGetItem(func_2374_call(relay.reshape(var_3051.astype('float32'), [14,]), relay.reshape(const_3052.astype('uint64'), [56,]), relay.reshape(var_3053.astype('uint8'), [378,]), relay.reshape(var_3054.astype('float64'), [100,]), ), 7)
call_3055 = relay.TupleGetItem(func_2380_call(relay.reshape(var_3051.astype('float32'), [14,]), relay.reshape(const_3052.astype('uint64'), [56,]), relay.reshape(var_3053.astype('uint8'), [378,]), relay.reshape(var_3054.astype('float64'), [100,]), ), 7)
output = relay.Tuple([call_3034,call_3050,var_3051,const_3052,var_3053,var_3054,])
output2 = relay.Tuple([call_3035,call_3055,var_3051,const_3052,var_3053,var_3054,])
func_3059 = relay.Function([var_3051,var_3053,var_3054,], output)
mod['func_3059'] = func_3059
mod = relay.transform.InferType()(mod)
mutated_mod['func_3059'] = func_3059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3059_call = mutated_mod.get_global_var('func_3059')
var_3061 = relay.var("var_3061", dtype = "float32", shape = (14, 1))#candidate|3061|(14, 1)|var|float32
var_3062 = relay.var("var_3062", dtype = "uint8", shape = (378,))#candidate|3062|(378,)|var|uint8
var_3063 = relay.var("var_3063", dtype = "float64", shape = (100,))#candidate|3063|(100,)|var|float64
call_3060 = func_3059_call(var_3061,var_3062,var_3063,)
output = call_3060
func_3064 = relay.Function([var_3061,var_3062,var_3063,], output)
mutated_mod['func_3064'] = func_3064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_3141 = relay.TupleGetItem(func_2446_call(), 0)
call_3142 = relay.TupleGetItem(func_2448_call(), 0)
uop_3143 = relay.asin(call_3141.astype('float64')) # shape=(2688,)
uop_3145 = relay.asin(call_3142.astype('float64')) # shape=(2688,)
func_432_call = mod.get_global_var('func_432')
func_434_call = mutated_mod.get_global_var('func_434')
const_3148 = relay.const([1.969535,-9.534586,-3.998787,1.945370,-4.158021,-1.098320,-8.731607,1.020808,7.533863,8.885989,-4.538802,1.282493,-9.830827,-3.089136,9.863964,-8.532721,3.020552,3.539267,2.471328,1.037157,-6.035511,-7.704054,9.470558,9.109964,-2.056227,-7.302072,-3.170705,-3.698175,-7.557681,-4.642798,-1.008717,3.704608,-7.802335,5.372773,2.005890,5.042653,8.731949,5.867565,1.072863,6.925601,3.697145,-6.167004,-1.005804,-0.809705,-8.783107,-7.578176,9.603072,-0.649550,-7.513607,-5.218293,-9.291083,-3.684503,5.632100,-8.837816,-8.421585,6.176962,-4.637537,9.551448,-9.217616,8.083986,0.693365,9.061075,9.772111,-2.585086,-8.442257,-8.859723,-5.297140,-8.202903,-4.061746,8.897577,-8.163625,-7.766923,-1.710688,7.705236,3.122428,5.289656,-8.198283,0.587284,-4.133720,-8.030955,-6.485431,-0.554816,2.528490,9.242163,2.769508,-9.415316,2.093008,-5.359402,-4.740369,-2.135880,9.906896,-0.413437,-8.909007,6.256257,0.723183,4.557592,-0.097717,5.161374,-4.857207,9.186002,0.518958,-5.001825,-5.568815,-1.129516,-6.020677,-7.481895,1.315584,-5.762875,4.107385,-1.103073,9.705309,-2.734034,1.153517,6.432230,-9.466690,-5.031027,-9.193164,-9.516708,3.387777,5.256679,4.246914,6.211768,0.820631,5.647530,-6.799388,7.520025,9.450869,3.286307,3.792529,5.651398,-8.067414,8.152221,-7.839259,8.029509,0.966242,4.827507,2.216285,7.383728,-3.027756,2.744198,-9.808175,-0.919632,-8.066730,0.995001,-2.989898,-8.708251,-1.535567,4.871375,1.711739,-2.739214,-6.022037,-1.605687,4.658585,-6.438690,-3.650955,-0.764538,-0.912249,-1.434609,-9.223815,3.539202,-6.242404,8.639561,0.943292,7.959306,-4.451215,1.472756,-1.059438,-4.308007,6.077369,9.008186,-8.901866,9.090626,1.824760,7.461325,8.370385,-0.013680,-2.944091,-3.472008,8.281005,6.537891], dtype = "float64")#candidate|3148|(180,)|const|float64
call_3147 = func_432_call(relay.reshape(const_3148.astype('float64'), [6, 3, 10]))
call_3149 = func_432_call(relay.reshape(const_3148.astype('float64'), [6, 3, 10]))
uop_3150 = relay.atanh(uop_3143.astype('float32')) # shape=(2688,)
uop_3152 = relay.atanh(uop_3145.astype('float32')) # shape=(2688,)
output = relay.Tuple([call_3147,const_3148,uop_3150,])
output2 = relay.Tuple([call_3149,const_3148,uop_3152,])
func_3154 = relay.Function([], output)
mod['func_3154'] = func_3154
mod = relay.transform.InferType()(mod)
output = func_3154()
func_3155 = relay.Function([], output)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3156 = relay.var("var_3156", dtype = "uint32", shape = ())#candidate|3156|()|var|uint32
var_3157 = relay.var("var_3157", dtype = "uint32", shape = (2, 1, 10))#candidate|3157|(2, 1, 10)|var|uint32
bop_3158 = relay.greater_equal(var_3156.astype('bool'), var_3157.astype('bool')) # shape=(2, 1, 10)
func_1854_call = mod.get_global_var('func_1854')
func_1856_call = mutated_mod.get_global_var('func_1856')
var_3163 = relay.var("var_3163", dtype = "float32", shape = (80,))#candidate|3163|(80,)|var|float32
call_3162 = relay.TupleGetItem(func_1854_call(relay.reshape(var_3163.astype('float32'), [4, 2, 10])), 0)
call_3164 = relay.TupleGetItem(func_1856_call(relay.reshape(var_3163.astype('float32'), [4, 2, 10])), 0)
func_2773_call = mod.get_global_var('func_2773')
func_2776_call = mutated_mod.get_global_var('func_2776')
var_3171 = relay.var("var_3171", dtype = "float32", shape = (66,))#candidate|3171|(66,)|var|float32
call_3170 = func_2773_call(relay.reshape(var_3171.astype('float32'), [2, 3, 11]))
call_3172 = func_2773_call(relay.reshape(var_3171.astype('float32'), [2, 3, 11]))
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
const_3185 = relay.const([6.991473,0.815796,3.145357,8.655021,5.322030,1.316375,8.135418,0.081885,3.547808,-7.615466,5.680489,7.620081,-4.371765,5.355662,-1.956240,-9.070400,-8.596534,4.103863,7.292154,-9.065455,7.188419,8.970960,7.744221,-7.409014,9.366358,-2.617131,-6.788958,-8.926689,1.908177,-0.499780,-8.331302,6.855215,-3.729166,-0.302558,-4.811904,-8.075634,6.530975,-6.356069,-4.165834,6.064451,9.670421,-1.568910,0.724713,-4.055460,-2.699931,5.487633,9.600481,9.033493,8.386823,-6.973610,5.309788,4.414010,-3.778256,8.356089,-6.765183,4.552448,-5.859496,5.905457,-8.006085,-5.417853,-7.295053,1.345975,6.788174,4.193415,3.997180,-4.381037,-8.945008,8.770060,9.948484,-3.333985,0.930462,-3.516720,3.380725,0.960111,4.140934,3.575254,2.119076,-3.406630,0.128697,6.791631,0.571084,3.648764,7.469673,-1.224074,4.508244,-3.455513,-4.735346,7.425202,-7.632869,-4.517237,-8.688539,3.836963,-4.635523,-1.033436,9.161118,-7.592651,4.650969,3.531981,-5.781636,-0.039223,-0.100691,-0.867684,0.741512,-6.312049,1.407916,5.854514,-3.393388,4.261971,-3.450018,9.943119,-6.599660,-2.845894,1.039016,-3.765208,-4.549214,-0.050898,-7.262686,1.419796,-5.474271,2.590916,-9.629127,8.350708,-2.309202,-1.946618,0.325570,-7.695895,5.375286,3.621042,-5.882668,0.381943,-5.498313,8.643837,-7.993856,-0.630993,5.825403,-6.318981,2.714744,-2.535063,4.406738,-1.828597,-3.125678,-4.820175,-3.846408,0.751708,5.207014,7.639324,-5.230074,-1.392459,3.431808,9.815974,8.007412,1.128976,2.756235,-9.940584,-7.358824,1.869656,5.636026,-9.662980,-2.387538,6.628156,-9.087307,8.284538,8.221934,-6.116462,8.351917,1.084193,2.390866,6.537593,5.688432,6.034391,-3.187549,-6.727616,-9.352106,7.464869,-7.181867,1.162773,1.631416,3.557200,-4.638922,-1.057649,4.126045,-4.150062,-9.084305,-7.514082,5.994496,6.349295,-9.503045,-0.816739,-2.949828,8.187406,-7.914455,-4.507967,-4.525904,-8.530811,2.317092,-0.940783,0.781490,0.408024,-8.926223,6.652139,-7.471875,2.823679,-7.524191,9.686718,-1.312685,-5.326908,4.974121,-3.476409,-2.425218,4.215249,3.612160,4.926265,-4.630973,-6.194921,-8.622822,8.005237,-1.773555,0.611621,-6.468930,-7.736818,-5.343449,9.019182,1.650083,2.059477,-1.656084,6.613850,-3.048049,-7.910027,8.691221,9.044439,-0.222363,-6.168865,9.230231,-0.233577,8.363578,-9.854347,3.571004,4.532857,-1.033231,-3.108042,1.639018,-3.511085,-8.264309,9.341043,-2.978272,6.239510,6.050391,8.502461,-2.737367,-7.200238,-2.695443,3.248848,-6.572373,-1.196090,6.459576,2.188112,-2.018415,-7.014781,7.891515,3.254468,-4.849742,-6.177169,-5.620891,-3.019471,7.445045,-2.457621,-3.025619,6.170100,6.303445,3.323988,1.382890,6.626891,-7.236365,-8.521256,3.345544,3.732366,5.297642,5.689257,-1.879596,-5.282475,-9.136403,2.615003,-5.996052,5.462688,2.805362,-6.305803,-5.949373,-7.115684,1.344736,-8.717982,-2.927950,-0.778115,5.058833,-3.393588,7.169210,-8.247795,5.093784,-4.710817,-7.315274,3.996527,-0.098213,-4.397674,-1.084191,-1.708100,-7.745179,-6.133090,-0.162572,-0.851631,8.107413,4.557026,9.913328,-9.960969,-8.208091,-8.936923,5.106382,-6.545906,9.446556,-5.111729,7.567616,8.798589,3.381490,7.046036,-3.095044,4.611774,-8.733947,-5.748628,-5.275182,-4.677382,-1.258607,-5.376343,3.261262,9.996902,4.783997,-3.187628,-6.216770,-0.319875,9.458807,-5.168495,2.257413,6.028439,-0.480722,7.227683,2.953733,4.371445,-7.147658,1.532001,-6.794473,-9.154861,-0.182522,3.381827,-3.208213,-8.508599], dtype = "float32")#candidate|3185|(352,)|const|float32
call_3184 = relay.TupleGetItem(func_2608_call(relay.reshape(const_3185.astype('float32'), [352,])), 1)
call_3186 = relay.TupleGetItem(func_2610_call(relay.reshape(const_3185.astype('float32'), [352,])), 1)
uop_3204 = relay.atan(call_3184.astype('float64')) # shape=(2, 11, 16)
uop_3206 = relay.atan(call_3186.astype('float64')) # shape=(2, 11, 16)
output = relay.Tuple([bop_3158,call_3162,var_3163,call_3170,var_3171,const_3185,uop_3204,])
output2 = relay.Tuple([bop_3158,call_3164,var_3163,call_3172,var_3171,const_3185,uop_3206,])
func_3207 = relay.Function([var_3156,var_3157,var_3163,var_3171,], output)
mod['func_3207'] = func_3207
mod = relay.transform.InferType()(mod)
var_3208 = relay.var("var_3208", dtype = "uint32", shape = ())#candidate|3208|()|var|uint32
var_3209 = relay.var("var_3209", dtype = "uint32", shape = (2, 1, 10))#candidate|3209|(2, 1, 10)|var|uint32
var_3210 = relay.var("var_3210", dtype = "float32", shape = (80,))#candidate|3210|(80,)|var|float32
var_3211 = relay.var("var_3211", dtype = "float32", shape = (66,))#candidate|3211|(66,)|var|float32
output = func_3207(var_3208,var_3209,var_3210,var_3211,)
func_3212 = relay.Function([var_3208,var_3209,var_3210,var_3211,], output)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_3216 = relay.TupleGetItem(func_1703_call(), 0)
call_3217 = relay.TupleGetItem(func_1705_call(), 0)
output = relay.Tuple([call_3216,])
output2 = relay.Tuple([call_3217,])
func_3236 = relay.Function([], output)
mod['func_3236'] = func_3236
mod = relay.transform.InferType()(mod)
output = func_3236()
func_3237 = relay.Function([], output)
mutated_mod['func_3237'] = func_3237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3154_call = mod.get_global_var('func_3154')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3286 = relay.TupleGetItem(func_3154_call(), 0)
call_3287 = relay.TupleGetItem(func_3155_call(), 0)
uop_3290 = relay.acos(call_3286.astype('float64')) # shape=(6, 3, 10)
uop_3292 = relay.acos(call_3287.astype('float64')) # shape=(6, 3, 10)
uop_3295 = relay.sinh(call_3286.astype('float64')) # shape=(6, 3, 10)
uop_3297 = relay.sinh(call_3287.astype('float64')) # shape=(6, 3, 10)
func_1854_call = mod.get_global_var('func_1854')
func_1856_call = mutated_mod.get_global_var('func_1856')
var_3299 = relay.var("var_3299", dtype = "float32", shape = (1, 80))#candidate|3299|(1, 80)|var|float32
call_3298 = relay.TupleGetItem(func_1854_call(relay.reshape(var_3299.astype('float32'), [4, 2, 10])), 0)
call_3300 = relay.TupleGetItem(func_1856_call(relay.reshape(var_3299.astype('float32'), [4, 2, 10])), 0)
bop_3302 = relay.equal(call_3298.astype('bool'), relay.reshape(var_3299.astype('bool'), relay.shape_of(call_3298))) # shape=(4, 2, 10)
bop_3305 = relay.equal(call_3300.astype('bool'), relay.reshape(var_3299.astype('bool'), relay.shape_of(call_3300))) # shape=(4, 2, 10)
output = relay.Tuple([uop_3290,uop_3295,bop_3302,])
output2 = relay.Tuple([uop_3292,uop_3297,bop_3305,])
func_3313 = relay.Function([var_3299,], output)
mod['func_3313'] = func_3313
mod = relay.transform.InferType()(mod)
mutated_mod['func_3313'] = func_3313
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3314 = relay.var("var_3314", dtype = "float32", shape = (1, 80))#candidate|3314|(1, 80)|var|float32
func_3313_call = mutated_mod.get_global_var('func_3313')
call_3315 = func_3313_call(var_3314)
output = call_3315
func_3316 = relay.Function([var_3314], output)
mutated_mod['func_3316'] = func_3316
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3423 = relay.const([[[9,9,9,-3],[4,4,5,1],[3,5,-10,9],[-6,6,-10,-7],[2,-2,-5,1]],[[-2,-3,10,8],[-7,-5,9,5],[-4,1,-5,2],[4,8,10,1],[4,-1,-7,2]],[[-4,-1,8,6],[6,5,-6,9],[-10,1,6,-1],[5,9,-1,-8],[-5,-7,4,4]],[[-3,-1,5,-10],[7,-4,-3,-5],[9,2,4,-6],[-6,1,-8,-10],[-3,9,3,2]],[[1,4,5,2],[-3,5,-2,-6],[5,8,10,6],[3,3,7,5],[-5,3,8,3]],[[10,1,-10,2],[-2,-3,-2,-10],[-4,-10,-10,10],[4,3,-9,-7],[4,-10,-3,-2]],[[-5,-9,-3,2],[2,10,-7,-7],[-4,-4,9,-1],[-9,1,-5,7],[7,-9,-7,-10]],[[2,-2,2,9],[2,-8,-7,7],[-10,-8,-1,-7],[4,-1,-6,9],[2,-7,1,-10]],[[-3,7,5,-6],[10,10,-10,2],[-4,5,7,-7],[7,3,2,-2],[-10,-5,-3,-2]],[[6,6,10,1],[4,-1,4,-10],[-6,9,-6,2],[-4,-3,-1,-9],[6,2,5,9]],[[3,-2,9,-6],[-5,-2,-9,-1],[5,-9,-10,3],[6,-3,1,2],[-1,1,-6,-7]],[[-3,4,-5,-7],[10,7,4,7],[5,3,-1,2],[-9,1,9,6],[7,5,6,4]],[[-8,9,3,2],[-5,6,9,-7],[-10,-4,8,-10],[-2,1,-9,-8],[-8,-8,3,10]],[[6,6,-3,-6],[5,1,-9,-10],[-8,-9,-8,3],[-3,8,5,-6],[2,-8,6,10]]], dtype = "uint32")#candidate|3423|(14, 5, 4)|const|uint32
var_3424 = relay.var("var_3424", dtype = "uint32", shape = (14, 5, 4))#candidate|3424|(14, 5, 4)|var|uint32
bop_3425 = relay.bitwise_and(const_3423.astype('uint32'), relay.reshape(var_3424.astype('uint32'), relay.shape_of(const_3423))) # shape=(14, 5, 4)
output = relay.Tuple([bop_3425,])
output2 = relay.Tuple([bop_3425,])
func_3428 = relay.Function([var_3424,], output)
mod['func_3428'] = func_3428
mod = relay.transform.InferType()(mod)
var_3429 = relay.var("var_3429", dtype = "uint32", shape = (14, 5, 4))#candidate|3429|(14, 5, 4)|var|uint32
output = func_3428(var_3429)
func_3430 = relay.Function([var_3429], output)
mutated_mod['func_3430'] = func_3430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_3436 = relay.TupleGetItem(func_2831_call(), 1)
call_3437 = relay.TupleGetItem(func_2832_call(), 1)
func_624_call = mod.get_global_var('func_624')
func_627_call = mutated_mod.get_global_var('func_627')
const_3463 = relay.const([-5,8,1,-5,6,6,-6,-3,-4,-10,-10,10,-9,-3,4,-4,-10,-10,-8,1,-4,7,10,2,2,-3,-9,4,-5,-2,-10,7,-1,-10,9,-4,-10,2,10,6,-6,-4,-3,-2,7,7,-10,-7,1,-9,-1,-3,3,-1,-1,-5,-5,1,-9,-6,7,-6,-8,-6,-2,-9,-8,-4,-10,-4,-1,10,-7,-3,4,-3,-3,-7,-3,9,-10,6,1,-8,4,-1,-10,2,4,4,-5,10,-9,10,-2,5,5,9,-3,8,1,-4,-2,8,2,-3,-2,-6,10,3,4,1,9,-7,10,-2,7,-2,4,3,6,4,9,-9,7,8,-9,-3,2,5,-5,1,-4,-1,4,4,-9,8,-10,6,10,-1,4,9,3,-6,-10,-2,-1,-3,-4,3,-7,3,9,-7,3,7,-9,3,-2,-2,-7,9,5,3,2,5,8,-7,7,-5,1,10,-10,-3,2,-9,8,-9,1,-4,-9,-4,-9,3,4,-8,9,6,1,-6,-3,-5,2,-3,7,7,8,-2,-2,-5,-2,3,3,5,-7,6,-3,-10,-5,7,2,-8,5,9,7,-6,-9,2,-6,-5,-7,4,3,4,-9,-2,7,5,-9,9,-10,-5,-4,10,-6,-5,-5,-3,-5,6,10,-8,7,-8,10,4,-2,9,-8,8,-4,-8,-1,9,10,1,3,-6,1,-7,-3,10,-2,1,-10,7,-1,-4,8,10,9,7,-9,2,-8,2,2,9,3,-5,1,8,4,6,-5,9,6,-8,2,-6,9,-4,-9,4,-2,-4,10,5,-4,-8,-5,-7,-5,-5,-2,-9,-8,3,-5,1,7,-10,-7,-1,-4,-4,-7,10,-3,-1,6,8,-5,3,-8,-7,10,-2,-10,10,3,3,-2,-2,-7,-1,-2,-9,10,7,4,2,1,1,-8,-5,4,9,-2,2,-3,-2,-2,4,-3,-9,-6,1,7,-7,2,6,-2,1,-5,3,5,-2,8,-8,-8,-10,-8,-10,-4,9], dtype = "uint8")#candidate|3463|(378,)|const|uint8
call_3462 = relay.TupleGetItem(func_624_call(relay.reshape(const_3463.astype('uint8'), [9, 7, 6])), 0)
call_3464 = relay.TupleGetItem(func_627_call(relay.reshape(const_3463.astype('uint8'), [9, 7, 6])), 0)
output = relay.Tuple([call_3436,call_3462,const_3463,])
output2 = relay.Tuple([call_3437,call_3464,const_3463,])
func_3473 = relay.Function([], output)
mod['func_3473'] = func_3473
mod = relay.transform.InferType()(mod)
output = func_3473()
func_3474 = relay.Function([], output)
mutated_mod['func_3474'] = func_3474
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_3475 = relay.TupleGetItem(func_1666_call(), 0)
call_3476 = relay.TupleGetItem(func_1668_call(), 0)
output = call_3475
output2 = call_3476
func_3479 = relay.Function([], output)
mod['func_3479'] = func_3479
mod = relay.transform.InferType()(mod)
mutated_mod['func_3479'] = func_3479
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3479_call = mutated_mod.get_global_var('func_3479')
call_3480 = func_3479_call()
output = call_3480
func_3481 = relay.Function([], output)
mutated_mod['func_3481'] = func_3481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_3526 = relay.TupleGetItem(func_2229_call(), 0)
call_3527 = relay.TupleGetItem(func_2230_call(), 0)
func_2874_call = mod.get_global_var('func_2874')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_3555 = relay.TupleGetItem(func_2874_call(), 1)
call_3556 = relay.TupleGetItem(func_2875_call(), 1)
func_2747_call = mod.get_global_var('func_2747')
func_2748_call = mutated_mod.get_global_var('func_2748')
call_3567 = relay.TupleGetItem(func_2747_call(), 0)
call_3568 = relay.TupleGetItem(func_2748_call(), 0)
output = relay.Tuple([call_3526,call_3555,call_3567,])
output2 = relay.Tuple([call_3527,call_3556,call_3568,])
func_3572 = relay.Function([], output)
mod['func_3572'] = func_3572
mod = relay.transform.InferType()(mod)
output = func_3572()
func_3573 = relay.Function([], output)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3154_call = mod.get_global_var('func_3154')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_3608 = relay.TupleGetItem(func_3154_call(), 1)
call_3609 = relay.TupleGetItem(func_3155_call(), 1)
output = relay.Tuple([call_3608,])
output2 = relay.Tuple([call_3609,])
func_3614 = relay.Function([], output)
mod['func_3614'] = func_3614
mod = relay.transform.InferType()(mod)
output = func_3614()
func_3615 = relay.Function([], output)
mutated_mod['func_3615'] = func_3615
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3479_call = mod.get_global_var('func_3479')
func_3481_call = mutated_mod.get_global_var('func_3481')
call_3619 = func_3479_call()
call_3620 = func_3479_call()
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_3625 = relay.TupleGetItem(func_2122_call(), 2)
call_3626 = relay.TupleGetItem(func_2124_call(), 2)
output = relay.Tuple([call_3619,call_3625,])
output2 = relay.Tuple([call_3620,call_3626,])
func_3628 = relay.Function([], output)
mod['func_3628'] = func_3628
mod = relay.transform.InferType()(mod)
output = func_3628()
func_3629 = relay.Function([], output)
mutated_mod['func_3629'] = func_3629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2180_call = mod.get_global_var('func_2180')
func_2182_call = mutated_mod.get_global_var('func_2182')
call_3682 = relay.TupleGetItem(func_2180_call(), 2)
call_3683 = relay.TupleGetItem(func_2182_call(), 2)
func_2773_call = mod.get_global_var('func_2773')
func_2776_call = mutated_mod.get_global_var('func_2776')
var_3685 = relay.var("var_3685", dtype = "float32", shape = (66,))#candidate|3685|(66,)|var|float32
call_3684 = func_2773_call(relay.reshape(var_3685.astype('float32'), [2, 3, 11]))
call_3686 = func_2773_call(relay.reshape(var_3685.astype('float32'), [2, 3, 11]))
output = relay.Tuple([call_3682,call_3684,var_3685,])
output2 = relay.Tuple([call_3683,call_3686,var_3685,])
func_3687 = relay.Function([var_3685,], output)
mod['func_3687'] = func_3687
mod = relay.transform.InferType()(mod)
mutated_mod['func_3687'] = func_3687
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3688 = relay.var("var_3688", dtype = "float32", shape = (66,))#candidate|3688|(66,)|var|float32
func_3687_call = mutated_mod.get_global_var('func_3687')
call_3689 = func_3687_call(var_3688)
output = call_3689
func_3690 = relay.Function([var_3688], output)
mutated_mod['func_3690'] = func_3690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_3720 = relay.TupleGetItem(func_2446_call(), 0)
call_3721 = relay.TupleGetItem(func_2448_call(), 0)
output = call_3720
output2 = call_3721
func_3727 = relay.Function([], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3727_call = mutated_mod.get_global_var('func_3727')
call_3728 = func_3727_call()
output = call_3728
func_3729 = relay.Function([], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3733 = relay.const([[[1,10,-9,-3,7,-3,9,10],[8,-8,9,10,-8,2,-2,-4],[4,9,4,-4,-10,-5,8,6],[7,4,7,9,10,7,-4,7],[6,3,-9,-1,3,7,-3,7],[9,8,-5,1,-10,9,1,2],[-1,-7,10,-9,-4,-6,3,9],[-7,8,-3,9,-9,-5,-4,6],[-2,8,-1,-6,-5,-3,8,-10],[8,8,1,5,6,10,9,-7],[-1,2,4,-6,-4,7,3,-8]],[[-9,2,-4,8,9,1,-6,-8],[5,-8,9,6,-4,-5,4,8],[2,3,-9,7,1,-5,-8,3],[-2,-2,6,4,3,-9,-7,-2],[8,-4,-4,-6,-2,-3,5,-6],[8,10,8,-6,-5,9,3,-10],[5,-10,8,-6,-9,3,-5,-1],[-6,7,-4,4,7,3,5,10],[9,10,6,-8,-5,8,-9,-2],[-7,1,-1,3,10,-9,9,-6],[-1,-4,2,-3,2,-8,-8,5]],[[9,-1,1,-10,9,-8,1,7],[-10,-1,4,3,3,6,-2,-1],[9,3,5,4,3,2,-6,5],[1,-2,10,-2,7,-8,-3,1],[-8,-5,-6,-7,-1,-4,-10,-4],[-7,-10,4,-1,4,-9,8,-10],[-4,1,3,10,9,-10,-5,3],[-3,-10,-5,-7,10,-5,-7,5],[9,1,4,-4,5,3,2,-1],[-1,3,4,4,-7,-10,-5,4],[-3,-3,-6,1,3,-1,-1,2]],[[-5,-7,-3,3,-1,4,10,-9],[-3,-9,3,10,5,3,-6,-8],[-7,2,-6,-2,1,-5,4,-5],[8,7,3,7,9,-4,4,9],[-6,1,-9,-1,9,-1,-3,9],[10,5,3,3,-4,10,8,-7],[-2,8,-1,10,-8,2,-7,3],[9,1,9,-6,1,-9,7,5],[6,1,-4,-9,1,-2,-6,-6],[-2,-9,-10,-6,-2,2,-2,-7],[2,-8,-8,-9,-10,-9,-5,-3]],[[1,1,-6,-4,1,6,-5,-2],[2,3,6,-10,2,-5,6,5],[-8,1,-3,-2,1,6,2,2],[7,-3,7,1,5,-8,4,8],[-2,-9,2,-7,-1,10,2,-7],[-9,-4,-6,-8,3,-9,1,-2],[-6,8,-2,2,10,7,4,-9],[-4,1,-9,10,5,2,9,-9],[-5,-3,-1,-2,-5,-1,3,-1],[-4,-9,-1,7,-10,-2,-3,4],[-5,6,-9,7,7,2,9,-1]],[[8,-7,10,-5,-5,1,-5,7],[-9,-5,1,-2,-9,10,-10,10],[2,-6,-1,5,7,3,1,3],[-3,10,-2,2,-7,-9,3,6],[7,10,-5,4,-2,-6,-7,5],[-9,3,7,3,8,-2,1,8],[2,-6,4,-10,8,-9,9,4],[7,1,1,-8,8,-1,10,7],[-9,2,4,8,-10,-7,-9,6],[6,-1,-3,-7,-1,-10,-10,-4],[3,-2,7,-8,-9,7,4,5]],[[3,7,5,7,-2,8,5,3],[-9,4,7,5,7,-3,5,8],[-3,4,-1,-3,-7,7,4,-1],[-6,-7,8,-6,-3,-3,6,8],[10,-7,-10,-4,-1,10,-2,6],[-7,1,-8,8,6,2,5,-9],[-10,6,7,9,-2,5,2,-1],[8,-4,-9,-8,6,-4,9,-5],[-2,-1,10,8,2,7,-9,-5],[-2,-3,-1,-5,10,7,-5,-10],[-3,5,-4,-7,-8,-2,-3,-6]],[[-4,-6,-10,2,-10,-1,1,-9],[4,-10,-9,-5,-9,6,4,9],[-10,4,5,2,-7,10,6,-4],[5,1,9,1,-4,2,-10,5],[5,10,7,5,4,-2,5,5],[2,-4,-3,-10,3,-5,4,-10],[1,-9,1,2,7,10,-4,2],[10,-6,2,-3,10,9,-10,-1],[9,1,3,-7,-9,-4,1,-6],[3,-7,-8,1,8,9,9,1],[1,-9,-5,-7,-5,-7,9,7]],[[-5,-9,5,-10,10,-1,1,-6],[-3,-7,3,-3,4,-5,1,-5],[8,-9,3,-6,-9,9,-8,-2],[-2,-9,4,-5,2,-1,6,1],[-9,-7,-2,-3,-9,-2,-9,-9],[-5,8,-10,8,-5,-7,5,6],[-8,4,7,2,-10,-4,9,10],[4,3,-2,-6,-8,-9,10,-6],[-10,10,-6,5,7,6,5,-7],[-3,2,1,-6,10,-3,1,-3],[-8,8,5,1,-3,7,-3,6]],[[5,5,6,7,5,8,-7,-8],[-6,-2,-10,-5,2,-2,6,-2],[5,-9,7,9,-3,-1,-10,9],[5,-6,-4,9,-1,-10,-8,8],[-8,-6,-2,-10,-2,7,-7,-5],[-8,9,-2,-6,1,9,-8,5],[-5,-2,4,4,-10,7,7,-4],[-4,7,-3,-10,10,-6,-8,4],[-1,-10,8,-2,-7,10,4,-1],[6,6,-2,6,6,8,-2,-7],[1,-8,3,9,-1,-6,-10,-5]],[[2,6,6,5,3,-7,-8,-7],[-4,-7,-9,9,-5,6,1,-4],[1,-8,-1,10,-8,10,-1,-4],[4,-6,-10,-2,1,2,7,4],[5,6,4,-1,-5,8,-8,3],[-6,4,3,2,-1,-5,-2,8],[-10,7,-10,-4,-1,-1,5,-10],[2,-8,9,-10,-8,-9,-3,-10],[-1,4,-5,-8,-1,3,4,8],[9,-2,7,9,6,-4,6,1],[8,1,-4,-10,-8,4,8,10]],[[7,6,-4,9,-4,1,8,-7],[7,-2,7,-9,-4,-8,4,-10],[10,7,10,5,9,-3,-10,-5],[-6,-2,-6,-9,4,3,-3,-1],[8,6,3,1,1,-9,4,-10],[1,-5,-2,9,10,-4,-4,8],[2,-1,7,-7,8,1,-9,2],[2,-9,10,8,10,4,6,8],[-6,-3,3,-3,-5,2,-3,6],[-2,8,10,3,-10,4,9,-6],[-10,-7,-8,-3,5,6,10,3]],[[-4,-3,1,-4,2,-8,1,3],[-2,6,3,2,-5,-5,-8,-4],[-1,1,-4,2,-5,7,4,-7],[2,-6,-3,2,7,-2,6,-1],[4,9,-7,3,1,7,-10,4],[10,-9,-10,-10,6,2,-7,-7],[5,8,-6,3,9,-3,-8,2],[-6,-2,10,3,-3,8,-10,-2],[2,6,-1,7,2,-2,6,-10],[-5,-9,4,2,7,-9,8,3],[-3,10,-9,-7,-7,-3,3,5]],[[6,2,8,-7,-6,3,10,-6],[4,-1,10,-7,-7,10,-4,5],[-1,-7,-4,3,1,-4,1,-5],[5,-9,2,-4,6,8,-10,-9],[-3,-1,1,5,-1,4,-10,-8],[-5,-1,-5,-7,-10,-1,7,5],[-6,-6,-2,2,3,-7,5,7],[-4,-6,-5,2,-7,8,-2,-5],[-9,9,2,-7,7,8,-1,1],[-7,-6,1,8,8,-3,10,3],[9,-3,3,-7,-1,-2,2,-8]],[[10,1,-2,9,-8,-2,-10,-8],[-7,1,-10,-10,-5,-3,-6,6],[-7,-9,-8,8,-3,-4,7,2],[-2,6,3,-3,8,5,-1,10],[-10,6,7,3,6,3,-1,9],[-9,-5,9,-1,8,-1,-7,-6],[9,-4,-5,6,-6,5,3,-1],[9,9,8,6,-5,4,7,-10],[1,3,-5,-9,6,-6,-10,-5],[5,-6,3,-8,9,2,-1,2],[-10,-9,-2,4,2,8,1,10]],[[7,-8,8,-9,-9,2,-7,3],[7,-2,10,-8,-8,-6,-2,-4],[2,9,9,6,-1,9,3,5],[3,9,-3,-8,5,-9,-10,-8],[-6,-4,-5,4,-1,1,-4,1],[4,-1,-9,8,-4,-3,-2,1],[-5,5,-7,5,-2,9,-5,-1],[2,-5,-4,-7,2,5,10,-5],[10,7,9,-5,-8,-6,7,-3],[-1,2,-1,-6,-10,10,8,4],[-3,5,-3,-4,-7,6,-8,-2]]], dtype = "int16")#candidate|3733|(16, 11, 8)|const|int16
var_3734 = relay.var("var_3734", dtype = "int16", shape = (16, 11, 8))#candidate|3734|(16, 11, 8)|var|int16
bop_3735 = relay.greater(const_3733.astype('bool'), relay.reshape(var_3734.astype('bool'), relay.shape_of(const_3733))) # shape=(16, 11, 8)
bop_3738 = relay.greater_equal(const_3733.astype('bool'), relay.reshape(var_3734.astype('bool'), relay.shape_of(const_3733))) # shape=(16, 11, 8)
func_3473_call = mod.get_global_var('func_3473')
func_3474_call = mutated_mod.get_global_var('func_3474')
call_3753 = relay.TupleGetItem(func_3473_call(), 2)
call_3754 = relay.TupleGetItem(func_3474_call(), 2)
func_1972_call = mod.get_global_var('func_1972')
func_1978_call = mutated_mod.get_global_var('func_1978')
var_3756 = relay.var("var_3756", dtype = "float64", shape = (1, 2250))#candidate|3756|(1, 2250)|var|float64
const_3757 = relay.const([-7,10,2,9,-3,6,4,10,-2,-1,-4,-8,-6,1,-3,10,9,-4,-3,-1,-7,10,9,-3,-2,-3,-7,-5,-9,7,-5,2,8,7,2,2,6,-9,1,-7,-6,9,-3,-8,-1,6,1,9,5,3,-5,7,4,-8,7,9,-8,-1,-5,5,4,-1,1,-6,-8,-6,-3,-6,-10,-5,-10,2,-5,10,4,7,9,4,-9,-8,1,-2,8,3,-2,5,-3,9,2,7,7,3,-1,5,1,-9,-9,9,8,-3,10,-10,7,-10,-1,4,-10,-5,7,-3,5,-3,4,2,-1,10,-5,4,-4,-10,1,4,-10,-4,-8,5,10,8,7,-6,4,-2,10,10,10,10,3,-1,-2,-10,-4,6,1,10,3,-8,3,6,8,9,8,-7,3,2,5,-6,6,-4,7,7,-9,-6,7,-8,-10,10,6,8,5,3,-3,8,-2,-6,-6,8,8,-2,6,7,-6,-3,-2,2,-3,7,5,-5,8,7,-2,1,-6,4,-2,-9,6,3,-5,5,-9,3,-8,10,-10,1,-1,-4,5,1,7,-10,-4,-2,7,6,-2,9,-9,-7,7,3,-10,6,-4,-5,-7,-5,7,9,-7,-9,5,-10,-8,-5,4,-2,4,-2,-5,9,-1,2,-4,-1,5,9,-7,-6,5,-1,-7,5,-2,-10,-3,8,5,-1,10,-9,3,7,-6,-6,-4,2,-1,5,-6,-10,-5,-5,10,-9,-10,-7,4,-3,-7,-3,-8,-2,-2,2,-1,-6,-3,-7,7,-5,-2,-9,8,-9,3,-6,7,-7,5,4,2,-2,-1,9,-5,-6,-9,-5,9,10,6,-2,-5,9,-10,10,6,-8,1,6,4,-2,9,7,-1,-1,-4,9,3,3,-4,-5,5,7,3,-3,-5,7,4,5,3,-2,8,8,1,7,4,-4,-7,4,-2,6,-4,5,-9,3,4,-8,-9,8,-8,3,-6,1,-6,5,4,9,-8,-7,-3,-8,-8,-1,-3,-6,1,4,-6,3,2,2,-1,7,5,6,-6,5,1,2,-5,6,8,7,7,-8,8,-6,-2,8,-6,-5,7,8,-6,-3,-9,-8,2,-2,5,-9,-1,4,7,3,6,-8,6,2,-4,-4,5,1,9,-6,5,-9,-2,2,-5,-5,-10,4,6,-9,-1,5,-7,1,2,-2,5,-5,-4,-6,-1,8,3,1,-5,2,-5,2,-7,-10,4,-8,-5,6,2,-8,3,8,7,-7,-10,-10,10,-7,-7,-6,10,8,10,5,-5,7,-9,4,-2,10,-2,7,2,-6,4,8,9,1,1,9,9,4,1,-3,8,7,4,1,9,-3,-1,-8,10,-10,-5,4,7,1,-5,2,-8,5,-2,-7,4,-5,2,7,-3,10,-8,-2,-4,2,7,-3,3,-6,4,8,-3,5,10,-7,1,-1,-4,3,-7,-7,8,-9,8,8,1,2,-2,-9,-2,-5,8,1,10,9,-10,-10,-8,1,-6,-10,8,-1,10,1,8,5,2,9,-2,9,-7,-2,10,1,-4,-3,4,3,5,7,9,-1,-10,5,1,5,5,-2,-1,-10,-5,-9,10,4,3,-1,3,-7,4,-4,8,-10,-7,7,-5,-4,4,9,5,-7,5,3,2,1,-4,9,-6,-4,-1,-4,-7,-7,2,-5,1,5,10,6,-10,5,5,5,-3,6,-1,10,-9,-1,3,9,-5,-2,4,8,6,-9,9,2,-6,-8,9,5,3,10,-9,1,-5,3,-10,5,-6,7,-10,-9,-7,3,5,5,-1,5,6,-6,-9,-10,9,7,2,3,10,10,9,5,-9,-1,7,-2,3,4,6,3,1,-3,3,-5,-7,2,8,1,10,-10,9,-10,2,4,-9,-5,6,-3,5,-2,5,-10,3,-10,3,-2,4,3,-7,5,-4,8,10,7,-9,10,4,7,-1,-2,9,-7,7,10,-6,4,7,10,-3,-5,-7,-8,-6,2,-4,-2,-10,7,-10,3,-3,-8,9,10,-4,-6,-1,-5,1,-4,2,9,4,1,-4,10,3,8,3,-6,4,-9,8,3,1,-6,3,7,1,9,-6,3,-6,-5,-10,9,5,-2,-2,-4,-2,8,-6,-1,4,-4,-1,-2,-9,-10,-8,-6,7,-5,3,-1,-10,8,-5,4,-1,10,5,-2,10,7,9,8,1,6,-5,-9,-8,-2,8,-10,4,2,5,6,-4,-1,6,10,7,9,2,8,5,-3,-5,1,-5,1,-6,5,-9,4,8,-1,1,6,10,-5,3,7,1,7,10,7], dtype = "uint32")#candidate|3757|(864,)|const|uint32
var_3758 = relay.var("var_3758", dtype = "float64", shape = (672, 4))#candidate|3758|(672, 4)|var|float64
call_3755 = relay.TupleGetItem(func_1972_call(relay.reshape(var_3756.astype('float64'), [15, 10, 15]), relay.reshape(const_3757.astype('uint32'), [864,]), relay.reshape(var_3758.astype('float64'), [96, 28]), relay.reshape(var_3758.astype('float64'), [96, 28]), ), 3)
call_3759 = relay.TupleGetItem(func_1978_call(relay.reshape(var_3756.astype('float64'), [15, 10, 15]), relay.reshape(const_3757.astype('uint32'), [864,]), relay.reshape(var_3758.astype('float64'), [96, 28]), relay.reshape(var_3758.astype('float64'), [96, 28]), ), 3)
bop_3766 = relay.subtract(const_3733.astype('float64'), relay.reshape(bop_3735.astype('float64'), relay.shape_of(const_3733))) # shape=(16, 11, 8)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_3782 = relay.TupleGetItem(func_2446_call(), 0)
call_3783 = relay.TupleGetItem(func_2448_call(), 0)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_3785 = relay.TupleGetItem(func_2122_call(), 0)
call_3786 = relay.TupleGetItem(func_2124_call(), 0)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_3800 = relay.TupleGetItem(func_2831_call(), 0)
call_3801 = relay.TupleGetItem(func_2832_call(), 0)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
const_3804 = relay.const([[4.160793,-4.223743,-9.737691,-6.936105,9.189702,9.481715,-5.241601,8.888783,-8.337162,1.337293,-8.069672,-1.938616,1.244050,-3.600458,9.579589,-6.912503,-2.498364,-9.228550,-3.239834,7.492477,-1.509628,9.028065,2.877049,-4.438541,8.556286,2.370538,0.453966,-6.356974,9.021306,-3.608269,-4.476997,7.469355,-7.747176,5.057076,-9.866284,-2.802248,-6.633670,-4.728845,-3.009376,7.789395,-4.185974,3.896993,-1.986043,1.160738,-0.112195,-7.771756,-7.004454,-6.060389,5.695375,-3.512447,-5.950207,9.150373,-5.680015,-5.401841,-4.155612,-6.348265,-9.411954,1.868364,-7.285053,-2.241732,-1.065489,1.905060,9.028260,6.218620,-6.196973,-5.226550,0.310690,9.683701,8.204378,-5.207907,0.184887,6.152435,4.915896,-0.010842,1.292079,-1.151865,6.444765,-7.809080,1.811922,3.836711,4.761951,-0.903449,0.378277,2.829418,5.749314,1.236845,-9.703084,-1.121411],[4.665352,0.486875,-8.462938,-4.926141,-6.579422,-4.995004,9.420895,5.558572,5.204528,5.197339,0.350414,-5.074284,-0.519252,9.966354,-4.540311,-2.252266,-6.011195,-3.666546,-0.189519,-6.423529,9.481414,-2.414082,-9.465284,-4.545273,-3.689952,7.396173,-4.922179,-1.252817,5.649877,0.054814,-7.104982,0.582114,-3.080698,0.089079,-5.079770,9.041272,-9.490035,-5.887015,0.599183,-2.961961,-2.067245,2.905038,2.439628,-0.826229,8.691030,-8.569171,3.959717,-5.566910,4.518234,-3.056958,9.296454,-3.800311,-4.958724,-6.902618,1.270107,2.845454,-1.649406,-0.398027,-1.346676,-3.596464,-3.559438,2.481562,-0.387811,0.577072,5.115447,-4.296771,7.411751,-7.944129,2.040683,1.638972,-4.570151,2.183625,9.128780,-5.606520,-2.136747,7.557507,-6.718222,-3.557380,-6.385621,-0.728493,-6.166496,-5.192784,5.589506,0.530189,-7.682232,4.777820,9.861918,3.440567],[-6.808153,-0.723531,4.792911,-1.005085,7.753682,-5.849391,-5.528991,7.149902,3.859097,9.301065,8.660759,-1.688667,5.971138,-5.143659,-1.370339,-7.874974,2.394280,0.196923,-9.501655,-0.062333,-8.135480,-0.378156,-6.042075,8.182439,4.579320,-5.612517,2.410945,-4.221405,8.174938,2.857623,0.043667,-8.902054,1.500854,4.234679,8.227092,7.954736,-3.258812,4.144201,7.965099,7.014894,4.519810,9.373711,-7.623366,1.726451,-9.822935,0.409672,-6.148655,5.114753,6.478571,-1.421762,-5.222767,-1.619301,2.377993,9.231788,6.794157,5.299348,1.895372,7.663996,5.264356,0.183593,-2.449504,4.161666,-9.542869,-1.915392,6.584662,4.566940,-4.970951,-4.807618,2.442441,-8.576731,-0.931830,4.698573,4.899033,2.581474,0.466284,-7.096498,6.826599,8.947058,-9.911950,0.821562,-0.574854,-4.733462,8.026579,-7.692774,-8.364680,5.032032,-3.744943,-7.489190],[1.878796,-0.864230,-8.682606,-2.647899,-9.116513,-9.539709,2.435999,-7.669265,-3.013065,-9.547125,-4.469869,-0.387108,-9.481154,2.181205,-7.284087,-6.328806,-6.948552,-0.672031,7.237768,-6.642936,-2.869300,4.715030,6.819668,5.547492,-3.386170,4.763438,-4.411855,2.876543,4.213587,-6.106384,1.124369,3.473024,8.262495,-2.491747,9.764740,3.268987,9.616225,3.052653,-5.922180,-5.907225,4.414227,7.112992,3.903405,-3.540250,-5.415826,-3.185098,6.605396,5.146435,-9.386063,8.180241,-5.187893,7.686978,8.266092,-3.264733,-0.830273,-5.525044,-1.683050,7.278187,9.004256,-8.932772,-7.560659,9.925957,4.211589,8.691610,-5.800552,6.959889,5.491081,1.444955,4.244772,-8.691983,-1.549080,3.066781,0.862266,3.196374,-5.328417,-3.978263,-4.808952,-4.766403,-7.888901,6.377859,8.302864,3.939521,-8.300743,2.241949,3.456844,9.125668,9.209884,-5.449595]], dtype = "float32")#candidate|3804|(4, 88)|const|float32
call_3803 = relay.TupleGetItem(func_2608_call(relay.reshape(const_3804.astype('float32'), [352,])), 1)
call_3805 = relay.TupleGetItem(func_2610_call(relay.reshape(const_3804.astype('float32'), [352,])), 1)
func_2661_call = mod.get_global_var('func_2661')
func_2664_call = mutated_mod.get_global_var('func_2664')
call_3842 = relay.TupleGetItem(func_2661_call(relay.reshape(call_3800.astype('float64'), [2688,])), 1)
call_3843 = relay.TupleGetItem(func_2664_call(relay.reshape(call_3800.astype('float64'), [2688,])), 1)
uop_3855 = relay.tan(call_3803.astype('float64')) # shape=(2, 11, 16)
uop_3857 = relay.tan(call_3805.astype('float64')) # shape=(2, 11, 16)
uop_3858 = relay.exp(uop_3855.astype('float64')) # shape=(2, 11, 16)
uop_3860 = relay.exp(uop_3857.astype('float64')) # shape=(2, 11, 16)
output = relay.Tuple([bop_3738,call_3753,call_3755,var_3756,const_3757,var_3758,bop_3766,call_3782,call_3785,call_3800,const_3804,call_3842,uop_3858,])
output2 = relay.Tuple([bop_3738,call_3754,call_3759,var_3756,const_3757,var_3758,bop_3766,call_3783,call_3786,call_3801,const_3804,call_3843,uop_3860,])
func_3863 = relay.Function([var_3734,var_3756,var_3758,], output)
mod['func_3863'] = func_3863
mod = relay.transform.InferType()(mod)
mutated_mod['func_3863'] = func_3863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3863_call = mutated_mod.get_global_var('func_3863')
var_3865 = relay.var("var_3865", dtype = "int16", shape = (16, 11, 8))#candidate|3865|(16, 11, 8)|var|int16
var_3866 = relay.var("var_3866", dtype = "float64", shape = (1, 2250))#candidate|3866|(1, 2250)|var|float64
var_3867 = relay.var("var_3867", dtype = "float64", shape = (672, 4))#candidate|3867|(672, 4)|var|float64
call_3864 = func_3863_call(var_3865,var_3866,var_3867,)
output = call_3864
func_3868 = relay.Function([var_3865,var_3866,var_3867,], output)
mutated_mod['func_3868'] = func_3868
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3896 = relay.var("var_3896", dtype = "float64", shape = (2, 1, 7))#candidate|3896|(2, 1, 7)|var|float64
uop_3897 = relay.log(var_3896.astype('float64')) # shape=(2, 1, 7)
uop_3905 = relay.atanh(var_3896.astype('float64')) # shape=(2, 1, 7)
output = relay.Tuple([uop_3897,uop_3905,])
output2 = relay.Tuple([uop_3897,uop_3905,])
func_3909 = relay.Function([var_3896,], output)
mod['func_3909'] = func_3909
mod = relay.transform.InferType()(mod)
mutated_mod['func_3909'] = func_3909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3910 = relay.var("var_3910", dtype = "float64", shape = (2, 1, 7))#candidate|3910|(2, 1, 7)|var|float64
func_3909_call = mutated_mod.get_global_var('func_3909')
call_3911 = func_3909_call(var_3910)
output = call_3911
func_3912 = relay.Function([var_3910], output)
mutated_mod['func_3912'] = func_3912
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_4007 = relay.TupleGetItem(func_1666_call(), 0)
call_4008 = relay.TupleGetItem(func_1668_call(), 0)
output = relay.Tuple([call_4007,])
output2 = relay.Tuple([call_4008,])
func_4015 = relay.Function([], output)
mod['func_4015'] = func_4015
mod = relay.transform.InferType()(mod)
output = func_4015()
func_4016 = relay.Function([], output)
mutated_mod['func_4016'] = func_4016
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2747_call = mod.get_global_var('func_2747')
func_2748_call = mutated_mod.get_global_var('func_2748')
call_4034 = relay.TupleGetItem(func_2747_call(), 0)
call_4035 = relay.TupleGetItem(func_2748_call(), 0)
output = relay.Tuple([call_4034,])
output2 = relay.Tuple([call_4035,])
func_4052 = relay.Function([], output)
mod['func_4052'] = func_4052
mod = relay.transform.InferType()(mod)
mutated_mod['func_4052'] = func_4052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4052_call = mutated_mod.get_global_var('func_4052')
call_4053 = func_4052_call()
output = call_4053
func_4054 = relay.Function([], output)
mutated_mod['func_4054'] = func_4054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3473_call = mod.get_global_var('func_3473')
func_3474_call = mutated_mod.get_global_var('func_3474')
call_4059 = relay.TupleGetItem(func_3473_call(), 1)
call_4060 = relay.TupleGetItem(func_3474_call(), 1)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_4073 = relay.TupleGetItem(func_2831_call(), 0)
call_4074 = relay.TupleGetItem(func_2832_call(), 0)
var_4078 = relay.var("var_4078", dtype = "int8", shape = (12, 16, 14))#candidate|4078|(12, 16, 14)|var|int8
bop_4079 = relay.not_equal(call_4073.astype('bool'), relay.reshape(var_4078.astype('bool'), relay.shape_of(call_4073))) # shape=(12, 16, 14)
bop_4082 = relay.not_equal(call_4074.astype('bool'), relay.reshape(var_4078.astype('bool'), relay.shape_of(call_4074))) # shape=(12, 16, 14)
output = relay.Tuple([call_4059,bop_4079,])
output2 = relay.Tuple([call_4060,bop_4082,])
func_4086 = relay.Function([var_4078,], output)
mod['func_4086'] = func_4086
mod = relay.transform.InferType()(mod)
mutated_mod['func_4086'] = func_4086
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4087 = relay.var("var_4087", dtype = "int8", shape = (12, 16, 14))#candidate|4087|(12, 16, 14)|var|int8
func_4086_call = mutated_mod.get_global_var('func_4086')
call_4088 = func_4086_call(var_4087)
output = call_4088
func_4089 = relay.Function([var_4087], output)
mutated_mod['func_4089'] = func_4089
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4096 = relay.var("var_4096", dtype = "float64", shape = (14, 5, 8))#candidate|4096|(14, 5, 8)|var|float64
uop_4097 = relay.log(var_4096.astype('float64')) # shape=(14, 5, 8)
uop_4114 = relay.rsqrt(var_4096.astype('float32')) # shape=(14, 5, 8)
func_753_call = mod.get_global_var('func_753')
func_756_call = mutated_mod.get_global_var('func_756')
const_4122 = relay.const([1.782739,4.581030,-0.544186,5.202384,-2.640509,2.869500,1.911938,-4.725850,1.985348,2.798722,3.908912,-4.379525,-5.348766,1.986943,3.688426,-1.816017,5.028620,-7.305813,-7.351914,4.261178,1.436592,6.375474,-1.252097,4.080668,-9.618430,5.702123,-2.154598,2.650672,5.714840,8.790870,6.126638,0.413743,4.828503,-7.359566,7.482008,-4.000197,-4.643393,-2.756742,1.733482,-1.789475,-5.513884,-3.384860,-4.010494,4.954687,-9.968776,-9.970086,-5.823031,-1.721220,5.163382,0.264784,7.990549,5.706814,-7.810209,-5.182055,6.249684,3.322163,-9.584776,-6.478887,2.788553,-3.546874,-5.083831,2.034751,-8.830308,6.289376,-1.749418,-8.653177,-8.406576,4.802442,5.430628,4.237928,1.223094,-4.334631,-7.542883,-7.320960,-7.762620,2.997313,3.432800,-2.677883,-3.416594,6.635457,-1.432015,-6.374456,9.521165,5.059491,9.011120,5.636889,-2.595268,-8.753944,-7.271479,-1.711687,8.291431,-3.622980,3.224636,-3.878083,-9.747030,-7.383492,-7.844020,0.633407,6.130234,-8.042144,0.609232,8.468347,-5.898843,-9.895938,-2.229775,6.894702,-1.371516,-3.546266,-8.181558,-0.175537,-4.923987,-6.172781,5.526769,-2.414359,-9.240072,-6.817132,-6.543049,1.856050,0.621456,6.091996,7.912646,-7.031245,-6.666605,6.952066,8.586085,3.128140,-4.851158,-7.067561,-7.210104,-6.338719,-6.657366,-0.651108,-2.400965,9.278822,-0.782761,0.781318,0.375071,6.275012,-5.703513,4.095504,-7.435476,0.631396,-7.801241,9.201636,-3.757014,2.914735,-2.035865,3.789058,-6.445780,-1.339297,-0.926745,-4.552279,4.352788,9.828333,-5.171503,-8.453826,-2.326525,8.582302,5.495309,2.991092,1.604341,-8.877077,-4.598166,-8.786502,-6.208385,7.697921,5.857446,3.712719,-5.408543,-9.600300,5.484356,3.601467,7.331886,-1.351925,7.288308,-6.772916,-5.647871,-1.472563,4.636263,1.257228,-4.771305,-0.281404,-3.254821,-9.332032,-3.988336,6.898201,1.489262,1.328843,-3.040982,-7.786391,5.228795,-6.675462,8.267055,6.782437,6.033721,1.210236,9.668794,5.733027,6.305630,-1.999909,0.741537,1.378081,0.214580,1.308088,-2.428236,8.591031,-0.991734,2.420284,9.007636,-8.702536,-5.664876,-2.167869,1.976185,7.923804,7.582794,5.019975,-8.894983,-1.998178,8.906265,4.856877,8.310161,-5.490295,-2.044483,7.048555,-2.270953,-5.201364,6.993087,-7.912028,1.938162,3.230800,-3.695904,4.503471,2.536880,-6.108916,0.508830,-7.636510,-8.078389,-7.980472,1.507073,-6.484719,-4.941912,-4.918205,6.162913,-7.748677,-5.436782,-9.094493,-9.379046,3.637082,6.257396,8.384157,8.109362,2.443333,-2.525201,-5.536573,4.868537,7.478888,-5.240606,-0.621175,-5.335741,-6.992251,-9.999322,2.005815,-6.766890,5.835369,-8.599237,-6.411038,-5.302781,-6.409919,3.750080,-6.617693,8.734894,-0.767723,0.702745,-2.935651,-9.749553,4.103353,8.232782,9.365798,2.677664,6.425241,0.036331,-1.069678,9.110246,-4.816761,2.962765,3.775342,-8.799420,-7.475353,-3.642461,-5.338621,5.261542,-1.181731,-5.519457,-0.275668,-4.426605,-1.078872,0.997842,5.702457,7.579532,-6.849205,1.815701,5.266727,0.522574,5.075551,-8.950731,-1.458617,5.997394,-3.928573,5.933241,-4.088043,-9.478868,7.851936,6.727772,-2.718400,6.941185,8.031961,7.650186,-5.584930,2.267714,-7.900560,2.169816,2.207576,4.745988,9.794215,1.299047,-2.698927,-0.719797,9.932558,3.706393,-3.308161,-8.542974,3.217443,-9.334794,9.807075,3.877026,-0.339575,-2.039135,-5.117020,8.762562,-0.214923,7.581029,1.650753,0.703131,8.139069,-9.647880,7.201156,2.035319,-6.972994,-9.134197,2.996387,-9.113092,3.908724,-1.077660,-4.707735,7.282085,-8.636127,-8.400652,-6.712047,-9.441798,-0.390594,0.481424,-2.187704,-9.570658,-9.535512,-5.716594,-9.580335,2.753722,2.538308,1.441560,-5.674883,2.827564,7.173500,-9.817928,9.300957,2.770657,3.718284,9.468554,-6.762532,1.630294,-6.454416,-4.127097,-0.014525,-1.201189,9.589555,3.881587,-7.151922,-8.424621,-8.884175,4.885845,-8.445522,0.172695,2.545843,8.321410,-8.002548,0.919121,-9.809982,-1.823552,0.764808,-5.038351,-0.604456,-6.475000,-2.124852,1.526818,6.377916,-0.138236,2.512792,-6.618372,-2.712788,-9.234097,-0.639590,-5.269296,-4.976322,9.441246,1.483302,-2.227972,6.944705,5.100674,-2.341926,0.431487,4.042893,0.384781,2.597255,-5.673442,3.714466,6.123416,-1.878035,-2.887170,-8.274113,-4.605117,6.695570,3.157418,-4.775473,7.358319,5.453292,-4.971072,-9.171676,-5.002759,6.977845,-7.587933,3.491197,-9.744471,0.353136,-0.692471,-8.977933,3.016634,-4.364964,6.492902,2.457672,7.288142,0.605908,-1.530895,1.731187,4.506481,9.729954,5.783563,9.047769,-0.912999,-7.013755,-7.006570,1.286532,-1.078662,7.093190,-7.128917,-6.411511,1.875918,-8.750889,-5.209300,-1.964855,-7.884686,6.345583,1.981042,-1.960023,0.056981,-2.563578,3.305489,2.257122,8.503737,7.406433,-6.845386,3.892221,0.598726,7.672669,7.610950,-2.005125,7.361777,4.840739,-5.783835,-4.581526,-8.263550,-6.772924,-4.354993,-5.119422,-1.666863,-2.500734,6.785979,-4.268423,3.572051,-6.651555,-8.686640,-1.619876,-2.062346,-6.851017,1.442682,-0.780708,0.327876,-1.887905,2.751865,-4.638692,-7.606466,-3.777184,-9.058414,4.386952,-5.147516,4.473950,-1.344977,-8.928115,7.298878,9.037504,9.595832,4.487663,-7.118279,-2.519290,-9.767682,1.100046,7.617101,-2.803595,2.347598,6.465230,-1.804497,-7.126100,0.770037,8.786281,3.080846,8.023049,3.641278,2.988396,-2.306586,7.337028,-8.958356,-9.249230,-4.685931,-7.215360,-8.182848,0.860402,-6.540875,8.747830,-2.568701,-4.237202,9.068906,-9.991944,-3.755411,0.682581,2.704036,7.836582,1.348757,-5.976195,3.355775,1.278598,-3.167325,-6.988895,-2.684144,-6.267347,-3.151010,-7.132294,6.267315,-2.512738,7.090430,-8.830201,-2.609107,-9.844329,9.339801,2.637432,6.965929,-8.139163,1.108978,-1.098910,-2.725780,-5.260275,-3.755439,3.978138,5.584709,3.902574,6.178693,-5.605662,-5.849407,5.181111,2.918499,-9.639162,-5.475591,-5.888265,2.800270,8.241756,-3.072007,-7.302550,0.463828,-3.877678,-7.045450,9.875862,0.933787,4.651248,-3.780191,-6.862872,-5.661039,5.584000,0.081642,-2.819751,-0.373821,8.810521,-5.451327,3.276738,7.354266,-2.275040,-2.357665,1.707324,5.386407,2.144140,4.869073,0.356629,-3.613669,-4.897936,8.737563,-4.613663,9.675657,-1.578640,2.488663,1.960054,9.755297,-7.591687,2.662835,6.757181,3.620791,-7.709297,-3.005720,-9.721595,-0.665844,6.063406,3.373683,-5.006091,5.432865,-1.733271,-4.952536,8.636042,-7.844452,6.537287,2.002149,-6.573387,1.256188,4.975591,9.109394,-7.617412,7.635456,1.348741,7.006621,9.781207,-6.622292,-2.046855,4.653106,-1.379645,2.924997,4.169167,-3.510308,5.215475,-3.917247,-1.905992,-8.587337,-4.400748,-3.315148,9.064299,5.934254,-0.221999,-3.147974,-3.856450,-7.428811,2.003728,6.624275,-0.792412,1.706016,5.866978,-8.355568,7.183249,8.506847,-6.150329,6.238336,2.768436,-4.107324,-1.595928,-4.805191,-0.655174,8.072491,7.621249,-5.640059,-6.103986,8.939029,-6.616923,7.036227,3.200523,0.964456,-9.026167,7.934044,1.121163,2.046811,-0.304705,-4.935799,-5.235980,9.022890,-8.388550,2.890552,9.720318,9.717135,5.106760,8.362504,8.844884,-5.620560,4.108889,7.768499,-1.802457,-4.463581,5.605513,4.943319,-2.718349,5.987077,5.646070,6.845672,0.807294,-6.490833,-9.003638,3.443911,-6.509275,9.361353,6.354380,-9.362339,-6.269858,2.427388,3.177759,5.024959,9.754676,5.652394,-7.133124,0.305392,4.230523,-6.546994,7.084648,9.480643,2.491131,8.584074,4.392558,-1.452140,-2.592749,6.033254,0.832535,5.514133,4.261118,9.958628,9.129984,-8.434007,-1.237086,-3.253488,-2.083822,0.525339,6.341776,6.093800,-1.513870,-7.840631,3.343963,-5.707030,-2.595622,6.046955,-1.211997,0.734364,6.208272,-8.696383,-8.415523,9.240584,-0.945644,6.354207,3.253028,4.687008,-6.967418,-9.767862,1.242157,-2.362125,-0.203640,-3.254510,-5.398136,-9.632370,4.622956,6.585207,-2.274068,-4.845594,3.449079,-9.964325,-1.966573,-5.836567,6.942588,-3.508146,-3.773062,-7.812219,-9.984282,8.562816,4.068247,-7.504865,2.674632,-7.680231,-6.516163,-3.230666,-6.854360,-5.948739,-8.330623,-5.528121,3.094562,9.211496,9.709303,-9.013202,-7.339234,7.903041,-8.792958,-4.817581,9.272316,6.115225,2.247635,-5.341171,-6.866046,7.137864,0.522905,-2.431027,-0.822262,-2.809519,5.284084,-2.862568,9.509708,5.887269,7.883115,8.398773,0.970671,4.048507,-2.506397,-9.294789,-7.089971,-8.440846,7.133100,9.154965,-8.360022,-8.155531,-5.733999,5.600332,-5.870070,0.925249,-8.006010,-6.970993,3.525999,-3.161673,6.912315,-6.405687,-6.625919,-5.323179,4.023606,-4.633287,2.838497,-2.644143,5.115708,3.629062,-9.047722,1.435891,3.108747,-8.175506,1.824167,5.727672,-3.190532,0.705731,-5.593599,-7.802532,3.778342,4.479284,3.100971,-5.181120,5.845599,-8.935336,1.818893,-6.040840,-0.762356,5.299136,1.443347,-9.844183,6.926258,7.235826,3.049965,1.998635,-5.421868,-9.649423,-5.924081,-5.173948,-7.190162,-0.178431,-7.736009,4.249545,2.439034,4.732158,0.667206,-3.982173,1.121866,-5.525621,-0.091828,3.322254,-4.815167,-8.093648,-9.396120,-8.659969,-2.159346,-4.919785,7.306842,3.256587,7.724942,1.594844,-4.147865,3.647648,0.762022,5.512206,8.562216,-0.657660,-9.800974,6.442400,4.675343,7.491382,-5.530987,8.905925,6.057774,-6.649242,9.642091,6.115615,-9.168251,5.749823,-4.119965,9.618143,4.074619,1.392437,-1.706442,-7.052002,-3.438344,9.797161,-9.109221,-8.797123,6.297956,-5.598971,4.184706,7.715723,-3.588852,5.507729,5.319491,-1.317851,1.982986,-1.985671,-7.417297,6.785288,-1.439575,3.507458,3.326414,8.138049,6.952030,2.595477,8.129105,-2.237398,4.903065,8.441583,-3.759789,7.473854,8.925002,0.237599,2.038949,7.578255,-3.765724,-9.616085,-2.312890,-6.306589,8.211432,-2.285794,-8.395770,-2.840237,1.270478,-6.720730,2.568984,7.950102,7.870411,7.876179,8.787775,6.748160,1.983505,-5.908459,8.359522,2.014442,-1.794579,6.866627,-4.760023,8.336357,8.017248,4.710017,7.655341,-2.268154,-9.710962,4.364868,-5.116676,1.567139,-3.592249,2.542954,-8.365960,-9.480612,2.737893,-4.447072,1.775074,9.300157,2.271919,-3.771809,8.237117,-0.607734,-8.692197,7.385133,-2.424279,-3.580365,-6.507648,-0.407074,7.572063,-9.086975,-5.944989,-0.502577,-8.873739,3.316574,4.759173,-5.667605,-6.499779,-1.357539,7.667909,1.276117,-3.747088,-3.539858,0.485927,4.482056,-8.571266,8.327683,-6.963783,-9.146567,7.613139,7.557074,3.673196,0.238790,-6.132586,-1.255044,-7.956170,8.130735,-2.250587,1.421691,-5.540000,-4.280778,-9.307572,3.118947,0.713094,3.975487,4.386097,3.349481,8.030584,-9.018573,-2.783839,5.852881,-6.991627,8.756876,-0.712056,8.956429,-0.251179,1.717694,9.487743,5.095593,1.236662,-7.179656,2.013040,0.111694,-3.001177,-0.344868,0.579032,0.293315,-8.310384,-1.899056,-5.424800,1.717152,2.577705,0.413412,-6.429852,7.729093,-2.571582,-8.656184,-0.860355,-6.784585,-1.237612,4.474212,-4.007336,4.629855,-7.137324,9.438576,1.480350,6.582433,-1.559511,-1.239900,1.641072,-0.820013,7.975518,-8.595134,-3.559735,-7.402454,8.056654,-7.446042,4.618304,2.384514,4.406826,-5.536315,2.980505,4.106898,-7.293664,-7.959122,-8.595987,2.675521,-6.026478,2.873791,-1.061035,8.366350,1.561726,2.507393,2.471108,-4.787647,-2.823386,-1.063301,-3.339802,1.603691,7.342045,7.434322,-5.603879,4.295176,-4.675793,1.322054,-0.688787,-6.304884,8.875485,-8.646623,-4.089732,4.407417,6.635450,0.460723,-7.266359,4.961230,-0.464916,0.638075,0.585969,3.209386,0.919573,2.513144,9.339307,1.163084,8.619645,-3.301261,6.240891,-4.475509,1.888793,-8.069411,-8.305483,4.032333,-6.806745,2.197734,3.393364,2.814463,-6.591530,-4.448449,7.273698,-8.466867,-3.917437,-0.713798,-5.865469,-1.407600,-5.912177,8.521414,-3.182932,-3.101519,9.454395,2.790093,-2.638041,4.417816,2.878627,0.365448,-5.922878,5.095328,-0.630539,-2.582638,8.852208,-9.831364,5.683524,-7.278211,-1.334343,6.449628,2.496565,-7.088695,8.000379,-1.890743,1.733465,2.024925,2.719503,-9.696605,4.459747,-0.450740,-4.980782,-1.373441,6.832747,9.237476,8.607688,9.761228,2.557461,4.469935,-2.666637,4.962245,5.033836,4.243524,-5.758364,-7.125202,-5.270486,-0.523046,0.508264,-4.040820,0.706769,-7.307056,-0.787289,0.412326,4.692658,2.499449,-9.766947,5.006334,7.545466,-0.230030,0.723722,3.682231,-2.702656,-5.724757,1.853807,-5.678077,-9.931902,7.113902,-1.067491,5.706935,0.574506,9.245929,6.416563,7.141713,6.444220,-5.487665,-9.288917,-3.064732,7.080227,-4.124621,-5.792453,-6.631727,1.009509,6.771418,-9.791845,0.930156,4.792180,-4.467329,-8.405176,-0.258600,0.784706,-4.519256,-0.346732,-3.124614,7.302700,-9.493774,9.814415,-6.275000,7.470073,0.720246,-1.442765,6.904795,2.713400,2.824244,-7.301419,-4.618313,-1.618462,1.961363,8.554452,4.675934,0.371370,-2.188077,-8.978514,3.020427,7.400775,1.910025,-2.714523,2.868027,-0.144396,2.067436,-7.693559,5.684717,-3.577230,-0.544440,-9.626124,-3.305679,9.840682,5.250995,8.233520,2.498440,7.902461,3.482098,-1.507777,0.758001,3.918279,8.391963,-3.645639,-6.437567,9.753649,6.403096,-3.612587,3.811343,-1.098566,2.501242,-3.059248,-9.398016,-7.020202,9.100481,7.371607,3.267106,7.775599,-5.284045,1.152015,-3.416008,4.299603,1.334772,8.171055,-7.815546,6.105097,2.274861,-5.354272,1.977445,9.903533,4.831093,7.035485,5.128026,1.942084,7.253763,8.923502,-9.065944,4.716889,-2.111805,-1.433073,-1.476818,2.511319,8.494502,-8.025010,-3.302575,7.249911,-4.671476,-3.621913,8.871463,5.011009,3.807309,-3.424393,-7.115266,3.604815,-3.284655,5.427700,1.376003,4.176729,-1.821874,0.051019,1.354091,2.301178,8.923348,-5.505444,7.653083,6.572589,-4.849536,-5.736860,8.220434,6.621347,-9.125217,6.932326,5.225951,-8.531232,-0.329285,-2.270111,6.287598,5.342371,-4.503686,3.700618,1.467331,-8.278199,7.306234,-4.449657,-7.810607,-7.402394,-8.580118,-6.329268,-1.052361,-4.766395,-3.295943,6.533865,-3.716268,-5.143180,-5.731878,-3.210484,3.091447,4.886431,-3.220958,6.835915,1.897796,6.936425,5.578285,-6.044981,-8.616345,-5.713607,5.853018,-0.028691,-5.974862,-1.640906,2.243613,3.077603,6.633444,4.332556,-1.681623,-7.885861,-9.142881,-3.582329,0.753844,-5.031869,2.483695,-1.536841,-9.293823,-3.007323,-1.732354,1.410117,7.254952,-1.761846,9.692835,-0.800487,-8.572285,8.143744,-7.847580,2.365083,-7.796584,-3.766420,-0.465180,1.246028,3.425650,-2.860381,-8.533122,0.665662,-6.242658,9.240602,0.200135,0.242471,-6.916917,8.930850,-0.539950,3.793581,-2.985745,-5.815367,-5.611108,5.480990,3.971929,5.288562,2.922354,-5.325481,-5.073932,2.050187,6.572388,-3.835271,4.457814,7.246994,-8.039868,1.017826,-1.701477,1.028702,2.703563,-3.250934,-7.672537,-3.237574,6.453402,7.595173,-7.280633,8.575941,-5.893170,-2.532605,8.991035,5.208021,-4.655975,-9.113299,1.746625,7.665627,-4.815628,4.227503,-9.740898,-1.815799,-7.262751,7.964815,-6.818397,1.901585,-6.331534,8.025450,9.777257,6.259786,0.040310,-2.853671,-5.200683,9.909934,4.561163,0.554048,-8.274010,7.947782,-1.439340,-8.663341,-9.129759,4.065636,6.185183,-8.378760,3.302511,-4.003387,-5.937846,0.521521,-5.646474,0.866887,-3.732192,3.132267,2.897496,1.675573,-0.828208,-1.653873,4.388501,2.687533,-3.126797,0.742298,-0.141177,-0.019241,-4.400562,1.027168,-3.370552,1.250185,5.769936,-0.770151,8.160030,-2.246853,3.261513,-7.448464,-0.539785,5.236401,-5.596505,9.977710,-9.883492,0.682011,0.987625,8.497940,9.760603,-5.394440,-0.845693,5.305810,9.918906,7.275707,5.081345,6.925381,3.652556,-9.930753,-4.665416,-5.968803,-5.840541,0.292397,-3.256998,7.562812,8.899893,7.032815,-1.379572,-3.454567,-5.956604,-2.930161,1.034173,-0.807158,-0.998941,-6.642999,-5.543778,0.882773,-9.966614,-0.027044,-2.594411,2.977853,-8.613135,9.097299,9.583120,-5.103768,9.162677,4.936233,-8.187511,2.159891,4.933853,6.887900,1.635521,-3.078292,-2.475965,-2.859835,-3.123460,-4.071670,-2.282874,-7.002161,3.271608,-3.411014,7.723070,-9.063945,9.822696,7.293754,8.754803,-8.002164,3.757717,4.872287,4.392506,-8.778606,1.727143,-9.768214,-3.217350,8.230249,6.519050,-4.680148,-9.348273,0.076090,0.247607,-2.449352,4.016041,9.578367,4.842509,-1.370415,-7.692968,-8.812091,-3.094522,-7.615166,1.555260,-1.042770,4.217183,-3.777533,2.739952,6.741042,-0.190243,-6.893307,-0.588399,-7.347585,-5.735263,-7.622577,-7.273846,-5.440669,-7.818429,9.374573,-1.291645,-5.121667,5.374673,9.126660,-5.980478,1.257022,-3.123281,9.568911,3.937039,-7.241361,-0.164025,-3.093441,-1.785328,7.595536,2.355263,-2.782377,2.641518,4.052152,1.314425,8.596303,4.086655,-5.836869,-7.419861,-2.001512,-0.844129,1.806574,-4.429729,8.785631,-4.295740,1.519827,6.641763,-3.560790,-5.496349,4.880452,-9.085114,-4.375900,8.864914,-3.518314,-3.667202,6.110710,3.106692,7.427400,7.900498,-1.315866,-1.895615,4.660595,-6.996792,-0.522851,-7.208635,-3.407468,-5.842122,-3.993455,-3.707316,-5.921092,-2.020292,6.644328,-1.535468,2.284603,4.113869,-4.349056,0.792614,2.656755,2.208209,-3.060739,-9.856493,-2.865338,6.049102,-5.849778,3.064589,-9.763184,8.511444,-8.786775,4.337092,1.589210,5.161321,-4.769568,0.570901,-4.682766,3.439996,-5.162685,-6.222237,-2.219611,-7.164413,2.685742,4.639871,3.920686,5.772065,6.557054,9.863321,7.627609,-7.085858,8.398014,0.556138,-1.297771,-5.974693,-9.189743,7.325002,1.878974,-0.552440,-8.706552,-8.749737,-0.550422,2.945135,-2.887211,-8.401095,6.651461,5.444073,-9.383526,3.609268,0.810044,-5.906009,-7.994687,1.052594,8.071128,-5.766453,3.609628,3.229642,-8.360862,5.970988,7.929746,-0.903417,-0.814340,0.694546,-8.972148,9.033353,-9.432649,-9.619701,-7.049637,-4.420283,9.017606,3.756987,-7.516730,-5.434308,3.145737,5.090924,0.238554,4.882410,-5.493712,-1.061915,3.736279,-1.357172,7.773569,-5.549462,-7.106085,5.153386,0.999796,0.637182,0.139300,-4.134909,9.938185,1.176608,3.831514,0.997150,5.457973,2.812284,0.727344,7.228966,-3.876901,-2.364823,-9.223894,-2.125752,-8.906648,6.883157,9.581422,-7.648047,-4.092289,8.697234,8.840388,0.479492,-7.754425,8.861015,-7.422704,5.285112,2.907731,-6.911850,3.933621,8.903901,-4.532139,-5.850638,7.555275,-1.350785,-7.545988,4.931277,-8.070941,3.832184,5.900043,4.716571,5.335307,-5.841351,-4.231647,-4.638107,6.466269,-6.130235,8.364592,8.105515,8.683260,-5.285524,4.942052,2.863043,-5.701134,9.024338,-5.928095,1.754032,1.156841,-3.275368,-2.221161,2.816728,-1.041042,9.187946,-5.501472,-5.062536,1.063664,-0.770062,6.342596,-0.332134,-6.010003,9.228222,-3.644563,-2.960984,6.018939,-2.624817,1.558168,3.164296,3.167041,2.967429,-2.818547,2.945388,-5.947504,-7.178173,-9.774789,9.454824,-7.755142,2.634178,-6.866546,-8.832103,-9.829764,5.838907,3.595517,2.364363,-7.791402,-0.961613,8.381216,-6.930369,2.870707,0.032803,7.924974,-4.365589,7.407710,3.482972,1.383908,4.790373,-4.625345,-1.183121,-3.885937,-6.427229,-1.530660,9.865080,-8.938483,-3.001999,-7.474613,2.833357,-7.992010,-2.853709,2.948059,6.497281,5.343681,-4.154224,-1.840518,6.896423,9.331730,9.915894,5.138142,2.281973,-7.836600,2.946119,6.590526,-0.038587,9.923129,0.364477,-3.497730,3.839095,-9.096818,9.983777,-0.139798,0.763148,-9.910006,-3.121458,4.164763,-6.720363,3.988652,-5.328371,-5.022421,-3.611192,3.414990,9.571797,3.343105,-3.257309,-6.690014,-8.265244,-8.319083,-9.688543,-1.252813,-0.476548,-8.731399,2.013820,4.740162,-2.605972,-2.127112,6.803560,8.135461,-4.185346,0.162382,-5.701421,-4.352917,4.248167,-5.656584,-1.568039,-6.669583,-6.490658,6.135092,-9.453406,5.821387,-1.402153,4.003893,-5.488327,-4.303875,2.617657,0.823241,-0.315358,-7.553558,-1.207764,7.491110,4.010419,-7.994289,0.916326,1.676855,-4.524466,-6.923457,6.006103,-5.245626,-7.681191,-4.753101,-5.239196,5.706827,4.456326,-3.240669,-4.586344,-0.981354,4.271092,6.705445,-3.149101,-9.841729,-9.537337,-0.932066,3.802900,9.995404,9.521477,3.885351,5.968047,-1.057823,0.563690,-3.755657,4.252543,1.568872,8.606134,3.427214,-9.574894,-1.324810,-4.291608,-6.723459,4.058246,-1.454042,1.154693,5.550235,-4.899569,8.223964,-6.809000,-9.076217,0.340253,6.761469,-9.616915,-7.396689,-4.453483,9.067943,1.579804,-4.799694,0.757897,-5.171905,7.641181,9.082689,6.358195,6.987868,1.219483,9.698153,4.453507,2.289685,1.405694,-2.935395,3.881157,9.433967,8.246831,0.282999,-6.619023,6.750113,6.867773,3.840530,-5.859733,7.334771,-4.115390,-1.723108,6.783969,-6.764061,4.612383,-5.602606,-3.293414,-2.941915,-5.092796,5.109676,3.082154,-3.821332,0.219570,8.869255,-6.073175,4.305051,-9.435888,-0.649338,-9.893175,-5.299622,-5.513398,-9.377369,-9.704753,-6.816064,-7.562907,6.743264,9.127058,9.284169,-3.532668,-0.386488,3.776027,5.934323,7.915675,3.641969,-6.239012,4.254168,-6.144460,-7.495613,-4.263623,1.191974,-1.246471,-8.347650,-4.609618,-7.778179,7.447720,5.424838,2.461942,-9.555904,1.283521,-7.255823,2.807220,-8.258347,2.068330,8.619730,2.846086,-0.198799,3.984455,6.435836,-9.235846,-8.848049,-4.148771,-0.200995,3.287179,-7.711108,-4.536284,-8.954418,8.132622,-2.452968,4.159910,-3.450183,-3.105850,-3.028491,-4.618143,-6.758930,-3.045516,-1.434403,-2.668588,-6.448177,1.386176,-3.040901,4.622415,3.472099,7.985252,1.202573,7.272832,-9.021589,-3.746422,-6.947598,-9.096920,-7.891405,2.795724,-0.826386,7.243618,2.861904,7.604002,3.211896,6.153208,2.580281,-4.644095,6.331338,1.770118,1.418442,2.102867,-6.389591,-8.934908,-2.822976,3.636435,-0.098206,8.581416,1.507395,2.235370,2.935963,5.434721,-6.281587,6.798244,-5.703817,1.565788,-5.940926,1.680558,-7.468789,9.432100,6.590694,1.282171,-1.185051,-5.345772,-4.756275,-0.508061,-2.038071,-2.941193,4.756253,-6.918767,-3.303548,4.529793,-1.132561,3.328623,8.201210,9.346087,8.678886,-0.568420,6.865631,2.779900,-9.609416,4.023235,-8.663188,7.699658,6.084124,5.724688,3.534465,1.119521,6.678529,2.803938,5.497237,9.753021,8.407250,-8.577531,-2.142645,-1.410370,3.360478,4.930867,-2.198163,0.197535,4.308400,8.879127,-7.464942,-1.989303,-3.550582,-3.275319,0.573165,-4.638554,8.344574,4.338701,7.102777,-3.322536,-0.615664,-4.659728,2.533972,-6.947312,-6.230458,2.723506,-5.331677,-8.073071,0.930474,1.558690,-4.434151,-2.530917,-6.984626,-9.445409,3.828208,2.779234,-8.666686,-1.672584,3.743992,-7.902230,1.014983,-7.608079,-7.362575,-4.091594,7.745669,-7.415441,6.984434,5.992171,-8.538105,5.440518,9.818327,0.521666,-4.063244,0.558045,6.582463,8.829063,6.596701,-7.426008,-7.606081,-5.993819,-9.930983,-1.185784,1.323320,-3.716950,7.993374,3.832903,-1.592911,-4.437539,3.529575,-7.006919,-6.469775,9.147769,-4.291174,1.839547,-9.380009,-1.149529,-6.468939,-8.829484,6.147766,3.863884,1.582077,9.527904,-8.898928,-3.830183,2.597417,-2.162599,4.818239,2.787030,4.594240,-0.571141,-0.525440,8.254664,8.626130,-7.926138,-9.457678,9.288676,9.499125,6.854746,5.808071,0.184080,-5.624823,-9.796850,1.866180,6.618657,-1.754865,-1.307557,0.954251,1.698988,4.954492,8.432567,1.644053,3.444825,2.057778,-9.178574,7.694808,4.756717,9.844349,0.634325,1.294252,-2.911286,-4.902203,8.996234,-5.169088,3.663733,-4.459236,4.917406,9.744070,-3.851849,1.198414,6.729357,-4.936049,-7.226636,-8.812562,-0.503450,0.108726,0.429260,9.055660,4.259797,9.780521,-0.570698,6.058719,-5.355191,-4.727024,7.382158,0.650641,-6.914027,2.843814,-4.379107,-5.351575,5.151954,0.108290,-9.283430,8.351735,-6.500999,-1.577753,6.116481,-4.395289,-9.506518,-2.050289,-8.150607,8.690799,-4.724774,1.951701,-8.599360,9.773233,7.343923,5.295638,-9.635232,1.150042,9.320555,2.006412,7.037532,-0.906830,-7.720693,9.174155,0.228883,-9.119241,4.254802,-0.715891,4.002915,-5.886543,-3.901521,-3.269575,-7.128764,6.330991,9.498083,-1.883751,-7.185107,5.065552,-6.882126,2.311320,8.929884,0.950590,8.967248,-9.155807,8.291060,-2.725386,-0.020490,-4.936683,-7.535567,1.847992,-6.715973,8.356704,-0.719007,-6.867192,3.103655,-8.139052,0.185963,-9.050150,2.887685,5.115177,1.197709,-1.902697,3.634068,-4.248032,-5.984184,7.079960,-6.462385,1.476204,9.585601,2.515604,5.365792,3.196950,3.527214,-4.229412,8.040749,4.221495,2.334057,-0.514139,7.080826,-0.360350,-7.057641,-9.303893,-3.900223,-4.560695,8.573089,8.915294,1.227954,5.099669,-5.753487,-2.214556,-4.482806,-5.958586,6.968034,-8.749211,2.313159,2.442349,-3.163302,-7.632734,6.039449,2.659497,-9.505017,-9.148353,0.116600,-1.889509,1.653315,7.803782,4.983299,4.510740,9.519878,7.437042,-4.175787,-3.933486,-8.523065,-2.111115,5.271238,9.324064,-5.672695,-9.849259,2.207926,1.957827,6.419252,-4.830399,-1.406595,3.821637,4.132694,-7.557394,5.100891,0.806395,-9.267206,-9.887388,7.134442,5.887289,0.496108,2.272570,7.230810,1.464993,-3.651670,3.970603,2.127862,-6.603668,0.061536,-1.403621,0.517406,-4.127278,8.366259,-4.390369,-4.421488,-2.648948,4.705111,7.401719,-2.860540,6.627281,-1.417249,8.767144,4.019852,5.597693,5.738681,-3.611881,4.079286,-8.011097,8.368220,0.153914,-2.492410,6.189968,2.654233,-5.996166,9.865109,-0.681123,-8.609586,0.605404,0.082522,-3.676278,-0.579777,-2.022354,-2.054807,4.311346,0.358173,8.574832,-9.046884,2.870534,6.254944,-1.627186,1.780179,3.378969,-2.578897,5.705854,1.682651,-7.010884,-6.913204,0.095511,4.685619,-2.233302,9.240580,9.296404,-1.482999,7.361204,-4.377350,-2.966490,3.293940,-6.345559,-0.791316,9.506102,7.676617,-0.782840,-2.406246,-1.987458,-0.213169,-3.904198,1.476961,0.224974,-8.588740,0.707562,-0.658173,-8.811101,7.557202,-7.995991,6.486228,7.165446,5.031316,-2.985212,0.443439,-2.029587,-6.118441,5.189019,-7.065719,8.913405,-3.596370,7.685091,8.267586,-5.873617,-3.774676,-7.288091,-5.183984,3.813202,5.327184,-9.132029,-5.309766,-8.077227,8.850118,-3.267501,6.199586,7.155735,7.167514,-4.020865,-3.159556,0.819995,8.702937,-6.507547,-7.795904,-3.830769,-4.411535,-2.403648,3.947538,9.288138,8.518994,-6.455775,6.627458,-1.231313,-7.106832,1.360569,6.217137,-3.174242,7.542707,-6.191852,-3.609838,1.196546,4.238536,1.478114,1.758961,-9.086390,8.286106,9.380480,-3.160300,6.524276,-5.680141,7.952906,7.887147,6.463817,1.480244,-8.041896,-3.505240,-3.076067,-3.132086,-3.393654,-8.216550,-6.663837,1.812905,-2.327870,7.440388,-9.627744,5.668521,3.059290,5.243141,8.302749,-6.293290,-5.311683,2.286455,4.988131,5.755150,8.544832,-2.275067,2.178234,4.028403,9.982272,3.906959,6.086392,8.937926,2.146122,0.092990,0.462498,1.323869,-3.577580,-9.392243,-8.226758,4.075007,3.332802,6.135963,2.682172,7.277288,6.389152,-6.194030,4.219648,3.171617,7.882557,1.327639,-8.130069,-0.319306,1.619031,-5.787214,-1.736337], dtype = "float64")#candidate|4122|(2688,)|const|float64
call_4121 = relay.TupleGetItem(func_753_call(relay.reshape(const_4122.astype('float64'), [12, 16, 14])), 0)
call_4123 = relay.TupleGetItem(func_756_call(relay.reshape(const_4122.astype('float64'), [12, 16, 14])), 0)
output = relay.Tuple([uop_4097,uop_4114,call_4121,const_4122,])
output2 = relay.Tuple([uop_4097,uop_4114,call_4123,const_4122,])
func_4136 = relay.Function([var_4096,], output)
mod['func_4136'] = func_4136
mod = relay.transform.InferType()(mod)
mutated_mod['func_4136'] = func_4136
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4137 = relay.var("var_4137", dtype = "float64", shape = (14, 5, 8))#candidate|4137|(14, 5, 8)|var|float64
func_4136_call = mutated_mod.get_global_var('func_4136')
call_4138 = func_4136_call(var_4137)
output = call_4138
func_4139 = relay.Function([var_4137], output)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_4163 = relay.TupleGetItem(func_2831_call(), 1)
call_4164 = relay.TupleGetItem(func_2832_call(), 1)
func_3863_call = mod.get_global_var('func_3863')
func_3868_call = mutated_mod.get_global_var('func_3868')
var_4174 = relay.var("var_4174", dtype = "int16", shape = (1, 1408))#candidate|4174|(1, 1408)|var|int16
const_4175 = relay.const([1.977237,9.740567,0.242640,6.204083,3.651612,4.661160,-1.075413,-6.605859,2.775564,7.679553,-0.523341,-8.470090,2.422866,5.998684,6.486549,1.222052,-8.020056,9.986129,-9.821536,-0.843577,-5.665462,7.165094,-9.008846,-2.643277,-3.690679,0.525902,-0.655160,1.877552,7.526777,-1.817816,9.663089,4.641308,6.433948,8.185512,2.028312,2.891802,4.893143,9.910019,-9.491594,5.631997,3.245887,8.458347,-8.509492,4.345735,4.337894,-3.167795,-7.488957,-5.443865,3.552652,1.885329,7.814271,-0.478869,-4.398410,-5.473174,-8.634069,5.945102,-4.007838,8.643495,9.915386,-7.611029,-1.882076,9.903678,4.651731,-9.523366,6.212663,1.244333,-3.037385,1.396461,5.600792,5.282044,-6.290715,5.395127,9.176634,9.272179,-9.543354,4.033764,7.130044,0.760272,-5.334565,2.456740,5.294840,-4.356012,-4.823719,-2.286171,2.485333,4.799818,-4.536083,7.179031,4.471784,8.361156,-3.876415,8.696367,9.655540,-2.164160,-2.736301,-3.397398,1.748978,-1.482579,-7.694417,6.420132,-4.811024,6.127050,-4.058341,7.860791,-7.005285,5.327298,6.234320,-5.192244,0.440422,2.367151,-8.005226,0.639533,-8.497266,8.471332,6.673568,4.995568,-2.293216,-9.487240,9.157922,-4.531122,-4.901429,-6.706532,-2.490191,9.734978,-3.528005,-7.188431,-9.477835,-1.426589,4.694436,6.477058,-9.665850,-4.258596,-3.662758,8.778009,-1.402523,4.809002,7.592442,7.549632,-2.017390,1.541902,5.360670,1.016654,-5.061946,-2.704148,3.416923,-7.829976,-8.527749,-6.304260,0.376558,-4.177019,-0.143035,5.146586,-8.658626,2.415838,1.936069,5.706921,-6.483702,-8.322426,-0.780710,-3.915213,-6.639942,3.163962,-2.154719,6.951110,-8.204790,5.340953,2.875470,-4.439247,6.574702,-5.955196,0.360244,6.463766,-0.506783,-4.109966,3.450959,6.088752,4.090534,-9.914641,-1.355389,5.437648,-5.796196,7.481429,4.518017,3.549991,-7.908037,9.435373,6.961069,6.763146,-9.261782,-1.096719,1.766182,-1.416246,-8.175278,-1.412643,-9.776689,8.981015,-5.062407,6.528174,6.531158,4.486330,-2.080919,7.661690,9.393683,-0.759383,-5.822644,8.014807,-1.068768,-4.054365,3.703025,5.679700,-3.450572,-9.461097,-1.315442,0.677927,-6.871055,6.741146,9.270588,-0.238957,1.339763,4.038449,6.246225,9.453105,-0.195152,-2.446801,-5.250330,0.881085,9.199919,-2.980053,9.437314,1.004348,-0.542176,1.477099,6.874592,-3.836989,-2.886552,-1.063538,5.100617,7.556791,4.714585,5.399150,3.865651,-1.706468,-8.384346,-5.542116,-7.770775,5.514540,-8.111306,2.432554,-9.638754,0.504382,6.512450,-7.927506,5.639677,-2.573538,3.004140,7.204530,-2.138428,2.413484,-3.118475,4.115566,1.950607,4.146855,8.313225,7.956115,-2.518274,-9.711929,-1.121546,-4.727399,-3.018392,-0.550084,-4.608572,-1.946955,-0.605804,2.783506,-5.431203,2.506908,1.964080,5.160208,9.178855,-9.652612,1.915666,5.389538,8.851692,-4.242173,-1.705888,-7.332074,-7.850028,-6.340544,-0.038838,9.711815,-6.720331,2.847722,4.056772,-2.727225,2.023216,-6.741026,3.282690,1.429607,-1.594560,-3.242910,-4.380471,3.630589,1.545281,1.499971,-7.483128,-6.388532,-8.171821,-6.397252,5.577739,-2.383486,-9.709879,9.313790,7.816450,-9.742126,-5.302036,-2.362548,8.597853,9.262171,2.074549,9.707868,9.749975,-8.721442,7.395247,1.168626,1.769797,0.482633,8.863149,0.975576,1.552413,-2.255725,-1.825021,5.448251,-0.391892,1.116489,8.195361,3.938985,-3.671918,-3.505192,9.088431,-3.288990,-7.376447,-0.633425,5.215565,-3.449435,0.608622,-4.090698,0.428626,-9.766972,5.563005,-4.982877,-4.628046,8.020610,3.347941,-3.796057,-8.720551,-1.905902,-1.133386,-7.066152,-6.952746,0.187408,7.892761,-7.759668,5.393420,-7.875418,-1.929238,1.972069,7.648553,2.544397,0.799753,6.991642,9.401571,-3.815966,-3.832354,9.621971,8.906987,-7.825715,-2.229179,0.286735,4.977741,-2.724574,-8.306805,-6.853494,9.916230,7.353872,4.310976,-1.985230,-8.556701,7.992387,5.296270,2.832846,2.798509,9.734571,-8.388763,2.522775,-3.350578,2.725375,9.166927,-0.023934,-5.858728,2.330222,-5.730908,-6.162024,-8.727924,1.914755,-0.114424,-6.831975,0.336206,0.618150,2.686525,8.695615,1.941610,-6.219141,2.443252,4.013957,-7.790360,1.665304,-3.974866,5.382257,7.721503,-6.260308,-2.756114,7.502132,-8.401512,2.810988,1.049489,9.122617,-1.944255,-2.907847,2.596371,2.730118,-6.394548,-5.688945,-3.225640,-4.751833,8.931313,4.526018,0.647110,6.714910,5.923999,7.912435,2.479074,5.368549,5.978959,4.333037,2.310922,-2.711384,-7.456500,-8.053941,6.189622,-4.562669,1.063811,-3.698036,0.687592,-2.282751,-9.297913,4.801104,0.434459,7.593010,-7.047348,1.048737,4.948275,-5.753857,-2.372472,-5.513393,1.208415,-1.569946,-5.175172,2.135530,-3.500694,8.274180,-6.124016,7.462488,3.059618,-0.858009,9.413604,-1.270150,6.600279,-1.249961,4.752213,1.579627,-1.194349,-0.015989,-9.388490,-5.479565,3.442558,-5.896582,-3.257191,2.592020,-8.504874,-1.446509,2.890078,3.542196,5.720721,5.546614,-8.103864,0.377065,-5.460647,-6.877209,5.522647,-4.342695,-3.951584,-8.226265,-7.694326,-0.194244,4.039551,-1.961405,6.239372,-1.253838,-8.470645,-2.922253,-0.273306,1.414043,8.780637,-2.710119,-1.413891,9.491097,2.977446,8.747957,-8.158239,-3.641764,-0.302552,-6.534339,-4.944861,-2.002249,-6.405275,-1.794667,-7.080419,-0.497432,5.851046,2.129832,8.428372,-7.412140,-0.616117,-0.701484,1.321675,6.466662,2.004655,-4.515008,-7.779772,-8.745771,2.555445,2.669526,-6.172456,3.410486,-9.095209,4.201602,4.456616,-4.725286,-4.599683,-6.188781,-9.247166,2.247881,-1.953590,7.935622,5.071604,3.145370,-7.761964,-0.762807,-7.912547,-6.155895,-0.146999,-4.504226,0.655560,-3.875890,7.148252,-0.408102,-0.211456,-1.596802,5.857704,5.222908,8.013262,3.596072,7.722691,7.792316,0.280215,1.049483,8.412191,5.683650,-6.138568,-6.225665,3.476767,0.342936,0.024498,-9.145625,-1.082659,8.142674,-0.589891,2.762513,-2.240473,-4.024119,2.371504,-3.492621,4.954593,7.468353,9.564900,-2.327681,-0.646733,-6.265122,7.083689,-9.535296,-1.745433,6.652865,-0.861325,-9.812798,0.957257,-7.926515,-3.732016,-0.391235,6.641389,-5.448875,4.810464,7.189275,-8.611913,9.933346,-9.142370,8.756674,2.094373,0.160615,-1.369349,7.553344,-4.703236,-7.767129,-8.493705,8.844333,-0.392050,-6.799470,-0.686200,-8.478868,9.341250,-6.548836,9.307724,-3.998958,-8.509025,8.811691,7.294675,1.536932,-9.153395,6.225105,-1.312246,-3.584914,-4.661440,-9.704464,-4.272741,0.938117,8.472617,6.890486,-4.979562,4.382612,-6.915911,0.169869,2.978444,6.038454,-1.250989,-2.066958,2.516484,3.834692,8.471575,-2.804669,-9.882472,9.140146,5.831325,3.457810,-5.277266,6.667168,2.162939,4.734979,9.528995,-5.727901,9.001792,-2.616941,-9.102998,-6.668149,6.114538,5.894949,-1.368264,2.081964,-6.402820,2.479466,-1.088302,7.791784,9.714580,-8.406637,2.613302,-3.808008,-4.025705,-6.114854,7.609728,-3.789054,5.764585,-1.933261,0.895424,-6.989994,-4.545487,-1.225115,-1.452813,-4.229396,-6.217175,-7.496865,-0.786609,-6.835924,6.004208,5.337291,3.652485,1.465064,7.240230,5.754853,-6.597721,-7.058619,5.449558,3.027268,-1.410617,-6.445644,-5.463789,0.341378,9.137796,7.486311,-7.352367,3.219600,0.822760,-7.964242,4.797424,2.258861,1.756466,-4.211067,-1.985930,-1.211843,-3.097060,-9.182437,0.748782,4.789638,3.514732,1.207293,7.446777,-8.652768,-7.656512,5.369924,-2.204581,2.653673,3.315561,-0.542170,3.081474,-6.110546,5.253653,-8.119570,-1.505580,-8.262303,6.085256,7.570604,-4.795381,0.709647,0.527953,-4.619521,0.702664,1.761674,-1.164163,-5.479509,8.070320,2.204096,5.947453,3.038733,9.339261,-1.140027,-1.185811,9.968580,6.181438,4.160274,5.002774,-6.960456,6.493223,2.883021,7.980291,1.365553,2.409188,-0.608499,-9.036887,-3.642904,9.906663,-4.820072,8.673472,-1.347011,-4.581102,5.182376,-7.983468,-9.190734,8.642437,5.963414,-9.519619,8.047821,3.905815,-5.326367,-1.058452,8.313900,8.493502,5.919798,3.409498,2.150753,5.205894,6.113521,-8.679954,9.102033,-4.901982,6.453537,7.075437,-7.988745,-7.055697,-0.942744,6.987028,-5.382470,-3.894206,6.912809,8.681182,7.325886,7.757302,-6.508737,0.411533,-9.379153,-4.152040,-4.439584,-2.973483,-0.474480,5.632352,2.005990,-9.923842,-7.790812,0.348559,-4.461635,-7.395354,7.592374,1.420853,-2.612721,4.582946,-5.017226,-2.497408,4.324512,1.929198,5.568670,0.858426,7.465321,-0.831028,-0.641164,-0.137403,-3.485731,-1.778326,-8.984358,-6.055478,-8.413502,3.263322,0.543760,9.167557,8.678490,7.541626,-5.164438,2.837328,-4.761157,7.283588,-9.005127,-5.712016,-4.573121,-3.249163,-8.576168,7.666620,6.634462,5.975161,-5.181620,8.752355,7.334363,-9.383897,6.373519,1.360886,4.491040,-7.981355,-3.622203,3.751693,-8.039185,-7.365303,-0.447664,4.880771,-7.942395,-2.418361,-2.016665,-2.287246,-9.172573,6.121341,4.811909,-8.933223,9.853927,-6.179647,0.062666,-2.661034,6.744159,-0.542858,1.573018,6.468650,-2.954683,-2.380269,-2.758643,-8.993267,-3.937840,-0.342335,-1.148431,-9.660898,-8.732197,-0.637346,-5.282155,3.449229,9.460830,8.177180,9.636737,-4.409986,7.999559,-7.659825,-1.991262,-5.456748,-1.342784,-2.507477,0.105954,-4.310821,9.762196,2.351973,-8.669927,1.318806,-4.198084,-9.728989,-3.307674,8.875581,6.087170,2.890593,-0.513897,-8.973458,-6.118206,-9.978207,-4.344293,6.238459,4.877163,8.117113,2.658127,2.408626,-0.046533,-8.803287,-8.367591,-8.402470,2.591003,1.619402,1.658908,3.086333,-4.039097,-7.373188,-1.797207,-0.868658,-7.654965,0.618751,0.024120,-5.712556,-5.235361,-0.241810,-3.561176,7.816871,-3.358990,-5.833843,-9.874798,3.615903,8.955464,8.281370,-3.638817,4.641034,-2.919017,-7.405021,4.474528,4.414219,8.508037,-9.330559,-1.009894,-0.253045,8.787407,-7.559996,-0.297115,-4.976272,5.805333,6.561807,-4.601684,5.021385,-4.998511,-8.667835,-3.630034,2.824676,8.135766,3.106707,8.656680,-6.522458,-8.357891,9.903829,-1.724892,-8.345917,4.697213,1.633809,-4.427491,-7.446541,9.828338,-8.354342,-0.353518,1.896853,-7.066596,7.062694,-1.292973,-2.266035,0.078309,8.717232,7.539707,8.730343,-2.503797,-8.872903,2.511831,3.057130,9.174441,-1.057655,4.255634,3.130579,6.346739,-4.517203,-7.074222,-5.926117,-7.894976,-7.773319,-4.056457,-4.014837,-2.999054,2.001337,-9.052702,-1.244526,9.698698,5.852310,7.678179,-1.742369,-5.340856,-7.041556,7.029487,-0.252678,9.577199,8.041930,-2.502937,-0.872347,4.028989,5.535546,-8.536334,1.324591,-5.868683,-7.590753,-0.215992,-2.095086,5.136518,5.398873,-4.811299,-4.443588,-7.508732,6.421548,-1.580442,-6.571455,3.110417,5.730515,3.700109,4.677709,7.581617,4.774307,-6.301886,-0.147852,7.820047,-6.217461,2.532878,1.514850,6.628478,3.500700,-4.923255,0.373285,3.097059,2.883423,2.909833,-6.860391,-4.646747,-6.093216,-4.263321,6.950265,7.678299,9.970533,-1.742857,-4.963269,8.768819,0.263558,0.357176,3.581737,3.216377,-1.351494,-9.810923,-3.276891,-3.787694,6.510076,4.731260,-0.599617,6.202883,-8.955676,-1.285766,9.189771,-4.258330,6.642934,1.341231,-2.038951,7.675183,3.706077,3.603006,5.226414,2.576195,-7.219495,9.628738,9.646236,-9.238981,-7.333495,-5.076529,-6.816559,4.088348,5.088115,4.641245,5.226216,-9.635488,-0.919736,-7.378901,9.111011,-1.971762,5.808872,9.915812,-9.326954,-7.960761,-8.400901,-4.624076,4.015551,3.161893,-1.855700,-5.718437,1.842969,2.225353,-2.946930,3.177829,5.306123,-0.526339,8.018290,9.458900,1.211882,7.180742,-6.636356,9.485349,0.189455,-7.359507,6.801912,5.038331,3.874470,-4.920626,7.580830,-0.062507,9.333585,0.900794,-1.953654,7.265201,-9.619156,1.597069,-6.118375,-0.713126,2.145464,-9.823281,8.916053,-0.176039,-3.831598,-3.827817,-8.922515,-3.358028,6.261700,4.149606,-4.705273,-7.189416,8.257859,6.985440,-8.212426,3.395633,3.924378,-6.365451,9.797628,2.353958,1.122454,5.292845,-3.883452,8.936453,2.463317,7.347394,8.329677,-3.427942,-4.731031,3.043256,8.833374,-4.722520,-1.346001,7.747391,2.986827,8.806833,1.303037,8.234248,-7.483293,6.859866,5.224784,6.582300,-9.049535,0.236548,1.385860,3.323010,4.503452,9.674207,-8.748263,1.980307,-5.605094,-3.687953,-5.860425,3.998507,4.666914,-2.193893,-6.721602,6.333369,-6.102914,7.434529,7.858394,-6.259409,-7.704775,-0.008880,3.610875,8.258876,-7.764524,9.568889,3.983030,5.663546,9.849830,0.524183,0.168374,9.473905,0.143200,-0.706737,5.064165,1.729747,-6.338768,3.223347,1.756069,9.155020,-2.323192,-3.366131,-9.368296,-7.422641,-3.009596,7.121318,9.196312,7.308485,6.191239,4.187890,-0.176553,-7.357265,1.498151,-4.682522,-3.528771,-9.223117,-7.960619,-8.039425,2.665053,0.120236,-5.839464,9.394784,1.253402,-0.639575,-9.032393,1.638563,-8.936887,-7.900967,9.749273,3.070974,-1.585405,1.032049,-3.730118,1.243383,-8.351757,3.247320,8.270978,-2.801854,5.585184,6.738354,4.342718,5.291553,7.019800,7.457278,-8.027703,-1.240970,-6.573295,-1.837826,-0.141497,-9.500378,-4.063484,7.379147,5.748513,-1.330213,1.831579,-0.274837,-2.049655,-4.827554,3.522518,3.048338,-5.932296,0.033262,6.874619,-4.980147,2.304497,-5.751713,-1.460937,-1.718663,-7.723960,7.847596,-6.863324,-1.576310,0.498958,-5.108648,-0.190040,-0.909679,-6.957618,2.252664,8.347482,3.123322,6.925571,-4.210470,7.658996,1.068464,9.088190,1.341365,-2.787741,2.786096,0.904561,0.423593,5.035077,-8.669848,2.801161,0.545018,8.959170,1.683411,-9.164634,3.877005,-6.567957,9.894073,3.411172,-6.604488,-8.187066,4.435044,1.658463,3.436931,-8.716074,-7.649608,-9.193011,4.996214,-4.768919,-3.880181,-1.377556,4.066720,-2.045729,8.790756,2.210178,0.801453,3.369608,4.700431,7.033378,5.196783,3.263645,4.082238,8.468187,3.770110,-7.455994,-3.594026,0.118917,5.560680,0.574607,6.813966,-4.299600,-4.019994,5.225765,2.912319,9.001142,5.379316,-7.135797,-3.595648,8.521829,-4.911623,8.604977,-7.554886,-3.122249,-9.186347,-0.875426,-6.444884,-5.459587,-5.628853,8.794237,4.140918,-3.244742,2.721618,1.328760,-1.143882,0.121406,-6.126552,-0.285485,-5.094624,7.671991,-3.119665,-4.982341,-7.526793,2.562397,0.757044,-7.686140,8.736220,6.311880,-1.308256,-3.121616,4.826024,0.899629,-2.684041,-1.883291,-4.528790,3.484437,-5.132138,7.551939,6.984522,0.987564,2.641379,7.473740,1.443354,4.136222,5.536057,-4.873529,-7.257773,4.300293,9.012075,7.982099,5.950042,-6.286696,-6.356983,-0.997291,9.337722,-4.873084,-9.004872,9.712502,-6.469197,4.221040,3.923185,-6.577333,6.914570,-4.754209,-1.603757,-6.693656,8.061651,8.830469,-1.638854,6.819692,1.331734,0.140646,7.022348,1.364473,8.691722,4.092322,3.961709,-2.954771,4.005974,7.383355,-9.687837,7.448702,2.701350,-8.655736,5.125772,4.546111,7.837697,-6.516923,4.473507,5.451351,-6.534201,5.700180,-5.338341,-3.496811,4.970513,0.272711,3.316867,6.539365,8.323163,-5.428853,5.097229,-9.226674,-4.111960,0.289543,-8.778233,6.457663,4.416245,-9.755421,-0.978281,-4.164433,5.113089,-0.222680,-0.049426,0.751924,3.617404,-2.634795,7.393555,9.217186,3.224574,0.925493,6.298738,-2.317640,-8.199998,4.246929,9.992812,-4.438190,2.121996,8.691658,-0.147834,-7.396878,5.258585,-5.889743,9.791516,-1.229257,-4.875695,-1.328400,-7.977389,-7.658482,-7.195082,-2.410858,0.633192,-0.063803,7.009134,5.739917,-9.005226,3.482133,-7.248269,-9.174383,7.491525,0.177618,-0.796625,-1.197694,-5.049099,6.292388,-2.188598,8.816712,-9.221539,-8.071169,2.395109,4.264717,9.046370,7.391595,-6.604062,9.449759,7.952229,0.952878,7.257233,-7.023494,3.114826,-5.828717,4.094252,9.969013,7.255842,9.063384,4.220439,-0.140215,8.935961,7.143120,3.224802,-9.282212,5.949556,-4.362667,3.603810,-1.338565,8.742670,-4.306979,-0.022513,-6.341696,2.697786,7.359614,1.468731,-4.250730,5.292278,-0.383108,-1.438622,0.161769,4.444193,-2.484218,8.570005,8.374071,7.144483,7.025941,3.490528,0.784586,-8.770931,-8.119116,-7.766305,-3.340258,-8.323661,-4.641900,7.041138,-4.035795,-0.430074,0.745719,3.561629,-5.391847,-2.732952,0.904500,1.554664,3.437471,9.456395,0.531826,-6.518824,4.939812,4.357742,5.544905,-6.369448,3.894393,8.023077,-8.147567,2.742751,3.557514,-1.498865,7.759437,-3.878568,5.553656,-6.567486,0.431631,9.269284,5.438927,9.798059,9.609351,-0.600610,-8.256313,-1.571023,1.286465,0.873726,0.642585,5.569230,2.775023,4.192074,7.655988,-7.910831,-2.726994,8.746316,-1.637480,3.121008,-8.676408,-1.796928,0.671648,7.919260,-5.388124,2.003002,4.304089,-9.280894,-8.491218,9.360524,-3.639584,4.976576,6.874524,-7.384167,2.998027,-3.655918,-6.620002,-5.601610,6.746764,-6.409552,-5.448247,0.349912,-6.479884,-6.819185,-4.044074,-2.774745,2.837946,6.668660,-0.164302,-1.884082,0.955857,-5.949823,3.625312,1.764140,-9.606914,-5.809456,-7.577992,-3.063076,-0.526668,2.006385,0.739299,2.241117,1.686501,8.757800,-8.304271,8.401173,-1.444360,4.712077,-4.097538,-3.462044,-1.953614,1.039825,7.609361,9.491270,8.805299,-8.631310,-7.104807,3.564962,-4.444544,-8.668079,0.466195,3.577543,3.744810,7.319516,8.199584,-9.243840,4.239579,-9.192252,-0.296455,-9.256992,5.600417,-3.756683,-2.896125,5.570231,-6.707213,1.386558,-9.725920,-0.691366,-7.141637,7.072726,1.631124,0.089171,-3.476494,1.745003,-9.047477,-7.390806,-5.950115,4.383588,-4.185110,-7.217908,-0.404392,-5.079059,-3.212747,-5.667185,3.354709,-0.957229,-8.189213,7.283781,-1.080727,6.987675,-6.504820,-2.734160,-4.117517,9.080113,-3.178318,0.296742,9.044294,4.713564,-7.733366,-5.164348,-0.079554,3.161728,5.342397,9.319464,1.408031,-4.031952,-2.733945,2.569264,-0.519425,8.104924,-4.497841,-3.073495,6.294644,5.923712,4.341777,2.493124,-9.878397,-8.084579,9.481439,8.716204,-7.632080,-7.329206,-0.223292,8.156277,-7.074855,-8.321283,-7.772215,-1.157396,-8.342118,7.652635,-6.820857,2.155685,0.697787,-0.919031,1.222624,-5.702143,7.625305,-2.092871,-3.827255,-5.384284,4.788236,0.714840,5.819128,5.765656,6.668863,-5.837055,5.721032,-4.445258,6.751628,3.504850,2.783842,3.094418,-4.366045,-3.817418,3.026978,0.149208,4.310971,-7.421742,-1.401590,2.783060,8.795804,8.292437,6.180845,0.011893,-7.895667,-4.834629,-1.551941,-5.472377,9.737845,5.486744,-7.166264,7.599952,3.652755,-6.533679,0.453201,5.600388,0.711004,3.878296,3.038625,-6.081097,9.748820,0.710740,-0.727923,-2.800848,-2.780168,-5.175069,-7.164379,1.747095,-1.136633,-6.097054,0.782591,-4.737450,-2.706613,3.422019,-6.762845,-8.607865,-6.446950,-0.435152,3.329309,3.826236,-5.540748,-5.045441,9.734014,6.604918,-2.981055,-2.953415,3.018626,-1.661136,-4.194893,2.533844,9.670921,5.659254,1.815536,-3.313353,-2.742849,6.571447,-7.304673,-3.727138,0.850216,0.541792,7.177094,6.119612,-9.083875,-8.014462,6.704087,0.197407,3.391952,9.781481,-1.978838,-5.357647,9.573475,-4.360469,1.696824,4.838543,-6.262790,-4.701719,-7.839964,-2.507305,-3.749198,-6.407174,1.632481,-8.831514,-8.035821,0.381640,-7.010898,7.880597,8.812633,3.225493,-7.998873,4.687964,5.906789,-9.783515,4.618253,-8.028365,-6.204436,-1.583182,-6.469426,-7.655506,-4.086304,-2.803152,4.072299,-1.636892,8.964495,-1.013353,-7.680180,-1.253554,3.894141,-9.979856,1.026482,-6.993641,6.639313,4.390399,-3.477994,-7.966911,-6.266826,5.301643,-9.931518,-7.699030,3.578474,-8.281972,5.289800,7.154455,8.669427,0.831720,-3.364623,-3.147363,-7.971812,0.344633,-9.929983,7.296132,-1.402839,-3.191322,-7.179415,-5.499836,7.504324,-8.815303,1.187740,-2.095442,1.082459,-3.606878,1.105974,2.588529,-6.120372,-9.095867,-7.584174,4.808201,-1.525371,0.214244,9.407104,-6.617939,-2.109796,1.154451,-4.097109,2.193718,1.316489,9.531489,-2.438745,1.291603,-6.359141,4.956058,2.347422,1.016720,0.285730,5.619927,0.757188,1.960785,-6.361803,1.226930,-2.315990,-0.542799,-9.932235,9.169746,-9.691230,-0.636567,-9.378709,0.945396,-3.595203,-1.945666,3.178503,-2.357649,5.282022,5.381930,-2.389430,7.263571,3.544112,2.269129,5.395675,-7.894565,6.569429,-8.776188,2.079236,7.361512,1.975164,2.391386,2.751824,0.082597,1.420817,-7.405886,1.475462,7.617197,8.449396,7.410641,3.828216,-1.067795,-9.654712,-1.934434,-2.780703,4.720026,8.941111,6.100437,6.779270,-5.667381,9.619170,-4.189239,-7.852805,3.878673,-6.163027,-6.922373,-0.365837,-0.614138,-7.877041,-8.442111,0.421869,-4.539552,-5.244619,0.367464,-1.210722,0.479502,2.257089,-8.756930,8.326204,8.715023,-8.228668,6.035707,1.088220,7.745694,-0.634739,-2.314777,-6.195717,3.144088,-6.302348,-5.594943,-8.287177,-0.690896,9.826688,9.466736,-7.143429,7.443167,-6.256184,-1.376391,-5.886120,6.797684,1.418970,-3.913585,-6.741105,0.832541,4.012568,6.196458,2.556865,3.276914,5.240816,7.068205,1.457015,-9.615939,8.033121,5.061848,2.252688,-4.496442,7.152302,-9.496991,-6.847028,-6.271525,4.267256,1.987828,-1.703976,9.038391,8.235600,4.412464,3.449313,6.644262,-0.113921,3.286261,1.481307,7.751599,-9.159150,2.875185,5.732189,-4.058483,3.222003,8.064615,-7.120422,7.993289,0.005807,6.568611,2.773460,0.497772,2.297576,8.722552,-9.402905,7.726001,-4.058661,-6.942093,0.871526,-1.602229,-4.770769,-9.740508,-6.199077,5.284783,-0.123832,6.929925,5.657842,-8.536055,4.943780,9.913362,-8.616375,-4.701001,1.926174,-3.077792,-8.409324,-2.400463,-1.530709,6.983822,-5.493156,-8.929014,1.891767,-8.988353,-0.757854,-1.636382,-1.669959,3.025372,-8.207555,7.816474,-8.213371,-2.593144,-9.750975,-7.243815,9.252506,-7.371373,-2.552602,8.427669,-8.094039,-1.188848,-4.337437,-1.840140,-2.949478,8.506704,5.127459,1.714496,-9.575517,-1.519879,-2.092936,7.685726,0.737238,0.275057,-3.534480,4.495090,3.379883,8.807035,-5.483223,-0.401352,1.097166,-5.306135,1.151536,0.263588,1.415640,-7.993564,-7.545554,-3.361496,8.357053,1.057735,-0.077861,-3.761061,-4.599203,7.064510,5.971899,7.177972,4.086256,-2.411932,1.209912,-5.453816,2.751149,-8.438014,-2.656500,5.318623,1.174704,8.592970,-5.927475,9.474789,5.905574,8.667386,-0.693080,5.332197,-6.650689,-1.840506,6.714676,4.368535,-9.622788,-5.203971,-2.253609,-5.251767,-8.202212,8.635851,-5.654373,3.764045,8.793445,-7.642846,-0.981725,1.854376,7.176164,-6.272440,-6.210733,-2.767346,-9.831473,7.277535,-1.056915,-5.046794,2.526849,3.199618,-6.684325,6.792828,-7.066882,6.188087,1.560768,2.164745,8.184878,-0.148982,3.032166,-2.641700,6.938908,-1.708915,1.874063,6.773968,-0.281003,-3.930801,5.744747,-7.335925], dtype = "float64")#candidate|4175|(2250,)|const|float64
var_4176 = relay.var("var_4176", dtype = "float64", shape = (2688,))#candidate|4176|(2688,)|var|float64
call_4173 = relay.TupleGetItem(func_3863_call(relay.reshape(var_4174.astype('int16'), [16, 11, 8]), relay.reshape(const_4175.astype('float64'), [1, 2250]), relay.reshape(var_4176.astype('float64'), [672, 4]), ), 3)
call_4177 = relay.TupleGetItem(func_3868_call(relay.reshape(var_4174.astype('int16'), [16, 11, 8]), relay.reshape(const_4175.astype('float64'), [1, 2250]), relay.reshape(var_4176.astype('float64'), [672, 4]), ), 3)
output = relay.Tuple([call_4163,call_4173,var_4174,const_4175,var_4176,])
output2 = relay.Tuple([call_4164,call_4177,var_4174,const_4175,var_4176,])
func_4184 = relay.Function([var_4174,var_4176,], output)
mod['func_4184'] = func_4184
mod = relay.transform.InferType()(mod)
mutated_mod['func_4184'] = func_4184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4184_call = mutated_mod.get_global_var('func_4184')
var_4186 = relay.var("var_4186", dtype = "int16", shape = (1, 1408))#candidate|4186|(1, 1408)|var|int16
var_4187 = relay.var("var_4187", dtype = "float64", shape = (2688,))#candidate|4187|(2688,)|var|float64
call_4185 = func_4184_call(var_4186,var_4187,)
output = call_4185
func_4188 = relay.Function([var_4186,var_4187,], output)
mutated_mod['func_4188'] = func_4188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_4193 = relay.TupleGetItem(func_2874_call(), 0)
call_4194 = relay.TupleGetItem(func_2875_call(), 0)
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
var_4196 = relay.var("var_4196", dtype = "float64", shape = (1, 100))#candidate|4196|(1, 100)|var|float64
call_4195 = func_102_call(relay.reshape(var_4196.astype('float64'), [5, 5, 4]))
call_4197 = func_102_call(relay.reshape(var_4196.astype('float64'), [5, 5, 4]))
output = relay.Tuple([call_4193,call_4195,var_4196,])
output2 = relay.Tuple([call_4194,call_4197,var_4196,])
func_4208 = relay.Function([var_4196,], output)
mod['func_4208'] = func_4208
mod = relay.transform.InferType()(mod)
var_4209 = relay.var("var_4209", dtype = "float64", shape = (1, 100))#candidate|4209|(1, 100)|var|float64
output = func_4208(var_4209)
func_4210 = relay.Function([var_4209], output)
mutated_mod['func_4210'] = func_4210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_4262 = relay.TupleGetItem(func_1666_call(), 0)
call_4263 = relay.TupleGetItem(func_1668_call(), 0)
output = relay.Tuple([call_4262,])
output2 = relay.Tuple([call_4263,])
func_4264 = relay.Function([], output)
mod['func_4264'] = func_4264
mod = relay.transform.InferType()(mod)
mutated_mod['func_4264'] = func_4264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4264_call = mutated_mod.get_global_var('func_4264')
call_4265 = func_4264_call()
output = call_4265
func_4266 = relay.Function([], output)
mutated_mod['func_4266'] = func_4266
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3614_call = mod.get_global_var('func_3614')
func_3615_call = mutated_mod.get_global_var('func_3615')
call_4285 = relay.TupleGetItem(func_3614_call(), 0)
call_4286 = relay.TupleGetItem(func_3615_call(), 0)
func_2874_call = mod.get_global_var('func_2874')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_4295 = relay.TupleGetItem(func_2874_call(), 0)
call_4296 = relay.TupleGetItem(func_2875_call(), 0)
func_2747_call = mod.get_global_var('func_2747')
func_2748_call = mutated_mod.get_global_var('func_2748')
call_4306 = relay.TupleGetItem(func_2747_call(), 1)
call_4307 = relay.TupleGetItem(func_2748_call(), 1)
func_3028_call = mod.get_global_var('func_3028')
func_3030_call = mutated_mod.get_global_var('func_3030')
call_4308 = relay.TupleGetItem(func_3028_call(), 0)
call_4309 = relay.TupleGetItem(func_3030_call(), 0)
bop_4316 = relay.minimum(call_4295.astype('float64'), relay.reshape(call_4306.astype('float64'), relay.shape_of(call_4295))) # shape=(2688,)
bop_4319 = relay.minimum(call_4296.astype('float64'), relay.reshape(call_4307.astype('float64'), relay.shape_of(call_4296))) # shape=(2688,)
uop_4320 = relay.rsqrt(call_4295.astype('float32')) # shape=(2688,)
uop_4322 = relay.rsqrt(call_4296.astype('float32')) # shape=(2688,)
uop_4326 = relay.sin(uop_4320.astype('float32')) # shape=(2688,)
uop_4328 = relay.sin(uop_4322.astype('float32')) # shape=(2688,)
output = relay.Tuple([call_4285,call_4308,bop_4316,uop_4326,])
output2 = relay.Tuple([call_4286,call_4309,bop_4319,uop_4328,])
func_4339 = relay.Function([], output)
mod['func_4339'] = func_4339
mod = relay.transform.InferType()(mod)
output = func_4339()
func_4340 = relay.Function([], output)
mutated_mod['func_4340'] = func_4340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4264_call = mod.get_global_var('func_4264')
func_4266_call = mutated_mod.get_global_var('func_4266')
call_4341 = relay.TupleGetItem(func_4264_call(), 0)
call_4342 = relay.TupleGetItem(func_4266_call(), 0)
func_2038_call = mod.get_global_var('func_2038')
func_2040_call = mutated_mod.get_global_var('func_2040')
const_4344 = relay.const([[8.103068,6.664382],[-2.926831,-7.657452],[-9.323501,-4.931848],[-1.282279,-3.023836],[1.590303,3.298814],[-2.818324,-1.737466],[8.404100,-9.436268]], dtype = "float32")#candidate|4344|(7, 2)|const|float32
call_4343 = relay.TupleGetItem(func_2038_call(relay.reshape(const_4344.astype('float32'), [7, 1, 2])), 0)
call_4345 = relay.TupleGetItem(func_2040_call(relay.reshape(const_4344.astype('float32'), [7, 1, 2])), 0)
output = relay.Tuple([call_4341,call_4343,const_4344,])
output2 = relay.Tuple([call_4342,call_4345,const_4344,])
func_4346 = relay.Function([], output)
mod['func_4346'] = func_4346
mod = relay.transform.InferType()(mod)
mutated_mod['func_4346'] = func_4346
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4346_call = mutated_mod.get_global_var('func_4346')
call_4347 = func_4346_call()
output = call_4347
func_4348 = relay.Function([], output)
mutated_mod['func_4348'] = func_4348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_4379 = relay.TupleGetItem(func_2831_call(), 1)
call_4380 = relay.TupleGetItem(func_2832_call(), 1)
func_3154_call = mod.get_global_var('func_3154')
func_3155_call = mutated_mod.get_global_var('func_3155')
call_4398 = relay.TupleGetItem(func_3154_call(), 2)
call_4399 = relay.TupleGetItem(func_3155_call(), 2)
output = relay.Tuple([call_4379,call_4398,])
output2 = relay.Tuple([call_4380,call_4399,])
func_4407 = relay.Function([], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
output = func_4407()
func_4408 = relay.Function([], output)
mutated_mod['func_4408'] = func_4408
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4460 = relay.var("var_4460", dtype = "float32", shape = (2, 10, 9))#candidate|4460|(2, 10, 9)|var|float32
uop_4461 = relay.cosh(var_4460.astype('float32')) # shape=(2, 10, 9)
output = uop_4461
output2 = uop_4461
func_4463 = relay.Function([var_4460,], output)
mod['func_4463'] = func_4463
mod = relay.transform.InferType()(mod)
var_4464 = relay.var("var_4464", dtype = "float32", shape = (2, 10, 9))#candidate|4464|(2, 10, 9)|var|float32
output = func_4463(var_4464)
func_4465 = relay.Function([var_4464], output)
mutated_mod['func_4465'] = func_4465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2763_call = mod.get_global_var('func_2763')
func_2764_call = mutated_mod.get_global_var('func_2764')
call_4477 = func_2763_call()
call_4478 = func_2763_call()
output = call_4477
output2 = call_4478
func_4485 = relay.Function([], output)
mod['func_4485'] = func_4485
mod = relay.transform.InferType()(mod)
output = func_4485()
func_4486 = relay.Function([], output)
mutated_mod['func_4486'] = func_4486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_4496 = relay.TupleGetItem(func_2831_call(), 0)
call_4497 = relay.TupleGetItem(func_2832_call(), 0)
output = call_4496
output2 = call_4497
func_4502 = relay.Function([], output)
mod['func_4502'] = func_4502
mod = relay.transform.InferType()(mod)
mutated_mod['func_4502'] = func_4502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4502_call = mutated_mod.get_global_var('func_4502')
call_4503 = func_4502_call()
output = call_4503
func_4504 = relay.Function([], output)
mutated_mod['func_4504'] = func_4504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_4544 = relay.TupleGetItem(func_2229_call(), 0)
call_4545 = relay.TupleGetItem(func_2230_call(), 0)
uop_4554 = relay.log2(call_4544.astype('float64')) # shape=(4, 2, 10)
uop_4556 = relay.log2(call_4545.astype('float64')) # shape=(4, 2, 10)
output = uop_4554
output2 = uop_4556
func_4565 = relay.Function([], output)
mod['func_4565'] = func_4565
mod = relay.transform.InferType()(mod)
output = func_4565()
func_4566 = relay.Function([], output)
mutated_mod['func_4566'] = func_4566
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4052_call = mod.get_global_var('func_4052')
func_4054_call = mutated_mod.get_global_var('func_4054')
call_4597 = relay.TupleGetItem(func_4052_call(), 0)
call_4598 = relay.TupleGetItem(func_4054_call(), 0)
func_2484_call = mod.get_global_var('func_2484')
func_2486_call = mutated_mod.get_global_var('func_2486')
const_4601 = relay.const([[-8.921308],[5.878126],[-5.604317],[-1.317914],[2.446058],[7.725178],[5.009064],[5.826024],[-0.655974],[8.450959],[-0.201766],[-9.875529],[-2.030113],[-2.590177],[-1.196324],[-1.655615],[-1.462877],[5.473164],[-6.252922],[6.490171],[4.209517],[-0.366256],[-7.966003],[-6.065785],[-0.484254],[-3.952578],[6.570105],[-1.294257],[-8.361711],[-1.663523],[3.911574],[-9.288287],[-5.907321],[8.533658],[8.010718],[-5.781391],[3.402330],[-8.028353],[5.132207],[-1.525706],[-2.821091],[-2.104014],[7.729968],[-8.143637],[-7.068337],[7.194358],[1.977989],[1.118842],[7.562021],[-6.829226],[1.375975],[7.569300],[5.438487],[-0.459336],[-7.470660],[-8.070279],[1.702709],[-4.109532],[6.424070],[-7.053007],[4.967296],[-4.817608],[2.683709],[9.361044],[-9.667060],[-5.215003],[-5.839403],[-8.000658],[4.773720],[-5.849864],[-8.769026],[-8.596088],[-5.574613],[-9.505716],[2.922485],[4.994404],[-1.134029],[7.909614],[3.252230],[0.011212]], dtype = "float32")#candidate|4601|(80, 1)|const|float32
call_4600 = relay.TupleGetItem(func_2484_call(relay.reshape(const_4601.astype('float32'), [4, 2, 10])), 1)
call_4602 = relay.TupleGetItem(func_2486_call(relay.reshape(const_4601.astype('float32'), [4, 2, 10])), 1)
func_4565_call = mod.get_global_var('func_4565')
func_4566_call = mutated_mod.get_global_var('func_4566')
call_4607 = func_4565_call()
call_4608 = func_4565_call()
uop_4629 = relay.sinh(call_4607.astype('float32')) # shape=(4, 2, 10)
uop_4631 = relay.sinh(call_4608.astype('float32')) # shape=(4, 2, 10)
func_3236_call = mod.get_global_var('func_3236')
func_3237_call = mutated_mod.get_global_var('func_3237')
call_4664 = relay.TupleGetItem(func_3236_call(), 0)
call_4665 = relay.TupleGetItem(func_3237_call(), 0)
func_3473_call = mod.get_global_var('func_3473')
func_3474_call = mutated_mod.get_global_var('func_3474')
call_4683 = relay.TupleGetItem(func_3473_call(), 2)
call_4684 = relay.TupleGetItem(func_3474_call(), 2)
func_4086_call = mod.get_global_var('func_4086')
func_4089_call = mutated_mod.get_global_var('func_4089')
call_4699 = relay.TupleGetItem(func_4086_call(relay.reshape(call_4664.astype('int8'), [12, 16, 14])), 0)
call_4700 = relay.TupleGetItem(func_4089_call(relay.reshape(call_4664.astype('int8'), [12, 16, 14])), 0)
bop_4701 = relay.left_shift(uop_4629.astype('uint32'), relay.reshape(const_4601.astype('uint32'), relay.shape_of(uop_4629))) # shape=(4, 2, 10)
bop_4704 = relay.left_shift(uop_4631.astype('uint32'), relay.reshape(const_4601.astype('uint32'), relay.shape_of(uop_4631))) # shape=(4, 2, 10)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_4708 = func_4485_call()
call_4709 = func_4485_call()
func_1854_call = mod.get_global_var('func_1854')
func_1856_call = mutated_mod.get_global_var('func_1856')
call_4713 = relay.TupleGetItem(func_1854_call(relay.reshape(uop_4629.astype('float32'), [4, 2, 10])), 0)
call_4714 = relay.TupleGetItem(func_1856_call(relay.reshape(uop_4629.astype('float32'), [4, 2, 10])), 0)
output = relay.Tuple([call_4597,call_4600,call_4664,call_4683,call_4699,bop_4701,call_4708,call_4713,])
output2 = relay.Tuple([call_4598,call_4602,call_4665,call_4684,call_4700,bop_4704,call_4709,call_4714,])
func_4726 = relay.Function([], output)
mod['func_4726'] = func_4726
mod = relay.transform.InferType()(mod)
output = func_4726()
func_4727 = relay.Function([], output)
mutated_mod['func_4727'] = func_4727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4339_call = mod.get_global_var('func_4339')
func_4340_call = mutated_mod.get_global_var('func_4340')
call_4799 = relay.TupleGetItem(func_4339_call(), 0)
call_4800 = relay.TupleGetItem(func_4340_call(), 0)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
const_4804 = relay.const([6.972102,9.284648,5.566744,0.308677,9.966298,-6.440872,9.401123,5.797225,-5.113802,5.434388,-5.891292,-5.167984,1.683270,-1.568950,0.078493,-0.765769,3.612083,9.208543,-5.843419,2.264442,-6.673939,-9.083775,-0.333884,-7.536966,4.016317,-0.352618,-8.125466,-6.406182,-8.326060,8.925680,-7.685018,7.239108,2.713094,-5.967154,7.720626,6.818947,5.169922,-6.220079,5.773624,-9.196419,-6.391324,-7.619887,7.905455,-7.826277,1.240622,3.263407,-8.896990,5.746453,-2.562526,4.468388,4.685850,4.674594,-5.688158,3.829115,-4.951541,-5.029625,-9.877481,-9.260210,3.463911,4.663089,-5.341280,-3.467339,8.865295,-9.922292,2.675179,-7.867574,-8.015532,-8.999486,7.092875,-0.963437,0.407942,-9.953823,5.353914,-9.885949,7.193851,-3.467357,-7.841946,-9.544783,-8.006108,6.848575,-0.962752,0.277131,-2.931854,-5.298127,2.857271,6.529617,0.421710,-8.882766,-9.001568,-0.209628,-7.256917,1.211859,2.619395,6.775913,-1.228161,-9.816666,-7.460799,2.859514,0.705750,-2.810622,-4.878936,7.284045,4.717605,5.430112,-8.206413,4.908387,-3.152131,-4.560565,2.398260,7.691067,-6.257316,-7.762758,0.409818,0.337559,6.805446,3.746112,-0.873204,-8.523235,-2.743473,8.421561,2.197531,-0.981692,-3.960760,5.923960,-9.111116,2.928358,-3.030456,0.516406,-2.340173,-7.814034,-9.162903,0.826011,0.627063,-5.969785,6.270742,-8.647711,-9.417823,-2.236372,3.683730,-8.187691,1.059343,7.163953,-9.021248,8.343101,2.333558,-3.541934,-7.292722,-8.180991,5.936387,8.866099,1.970151,1.865029,-9.063366,-3.215220,-1.224043,3.948232,-9.594559,8.878244,8.130120,6.980123,8.117856,-0.906013,-0.216442,1.765289,2.753194,-3.227079,-2.827277,5.621378,-6.416331,8.769899,-8.558179,-8.408926,4.322136,1.888693,-5.124512,5.511019,7.047135,6.151249,1.372175,9.791806,-1.631165,2.023902,-6.749587,2.096545,-2.080503,8.395012,-1.170167,3.371500,0.414184,-5.638307,-1.872325,5.732160,-8.293205,4.014767,1.472228,-7.004805,-0.491240,4.529223,-2.912851,6.109901,1.154300,-6.691779,-0.955491,5.028438,-4.963737,-6.452431,2.370844,-0.722603,-2.901043,9.442609,7.687558,5.672931,4.333968,-2.588644,-2.128662,-7.123672,-6.149067,5.478656,5.605925,-9.317535,-0.731436,-1.684300,4.086660,3.551413,-7.099103,1.503928,9.723562,0.028557,3.872880,-4.195607,-2.136112,3.024197,5.308962,1.478890,8.934028,8.480916,-8.134403,-4.214227,-3.124643,-4.238846,-7.869122,-2.694429,-4.077209,2.069496,4.456131,3.851991,-5.756080,-6.755394,2.557338,-8.187733,-0.252866,5.755494,3.635057,-9.846078,5.048705,-2.698542,-0.308812,4.138781,2.886847,6.280141,6.862849,-7.302914,9.577628,0.828461,-3.803829,-5.324529,2.891494,-7.901165,4.968082,3.315457,3.729284,-7.042620,-3.873717,-0.601732,-4.363758,4.329161,8.573935,-1.336100,-0.836844,4.153077,1.070291,2.992480,8.260446,-4.314230,-6.467658,-1.028570,6.374109,-4.057132,-3.234387,6.523859,-2.171090,-1.467624,-1.325226,-8.700095,6.194683,-4.380725,9.367011,6.314346,0.031301,2.080285,2.589714,3.819016,0.950351,4.167110,-9.457750,-7.357243,4.982123,-5.367742,7.084489,-4.611683,5.508880,-3.504258,1.851157,1.534743,0.696737,-1.853002,-1.183121,5.165363,5.328621,-2.080273,-5.366821,-5.988111,7.779082,6.551769,-9.654277,5.179723,-6.513166,-0.311118,-8.149912,-2.638072,3.164459,-9.045686,-6.408154,8.857442,-2.389335,-1.290800,-0.350742,-5.124794,2.930675,3.291066,-4.737646,3.169261,-9.545722,-8.058248,-0.546720,-7.606998,0.422227,7.539371,-0.727180,-3.336989,-5.526742,2.119647], dtype = "float32")#candidate|4804|(352,)|const|float32
call_4803 = relay.TupleGetItem(func_2608_call(relay.reshape(const_4804.astype('float32'), [352,])), 3)
call_4805 = relay.TupleGetItem(func_2610_call(relay.reshape(const_4804.astype('float32'), [352,])), 3)
func_2608_call = mod.get_global_var('func_2608')
func_2610_call = mutated_mod.get_global_var('func_2610')
call_4819 = relay.TupleGetItem(func_2608_call(relay.reshape(const_4804.astype('float32'), [352,])), 4)
call_4820 = relay.TupleGetItem(func_2610_call(relay.reshape(const_4804.astype('float32'), [352,])), 4)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_4821 = relay.TupleGetItem(func_2122_call(), 1)
call_4822 = relay.TupleGetItem(func_2124_call(), 1)
func_4485_call = mod.get_global_var('func_4485')
func_4486_call = mutated_mod.get_global_var('func_4486')
call_4825 = func_4485_call()
call_4826 = func_4485_call()
uop_4835 = relay.atanh(const_4804.astype('float32')) # shape=(352,)
func_2747_call = mod.get_global_var('func_2747')
func_2748_call = mutated_mod.get_global_var('func_2748')
call_4838 = relay.TupleGetItem(func_2747_call(), 0)
call_4839 = relay.TupleGetItem(func_2748_call(), 0)
func_4208_call = mod.get_global_var('func_4208')
func_4210_call = mutated_mod.get_global_var('func_4210')
call_4841 = relay.TupleGetItem(func_4208_call(relay.reshape(call_4803.astype('float64'), [1, 100])), 1)
call_4842 = relay.TupleGetItem(func_4210_call(relay.reshape(call_4803.astype('float64'), [1, 100])), 1)
func_3614_call = mod.get_global_var('func_3614')
func_3615_call = mutated_mod.get_global_var('func_3615')
call_4843 = relay.TupleGetItem(func_3614_call(), 0)
call_4844 = relay.TupleGetItem(func_3615_call(), 0)
bop_4845 = relay.floor_divide(uop_4835.astype('float32'), relay.reshape(const_4804.astype('float32'), relay.shape_of(uop_4835))) # shape=(352,)
func_4339_call = mod.get_global_var('func_4339')
func_4340_call = mutated_mod.get_global_var('func_4340')
call_4861 = relay.TupleGetItem(func_4339_call(), 0)
call_4862 = relay.TupleGetItem(func_4340_call(), 0)
bop_4869 = relay.left_shift(bop_4845.astype('uint16'), relay.reshape(uop_4835.astype('uint16'), relay.shape_of(bop_4845))) # shape=(352,)
output = relay.Tuple([call_4799,call_4803,call_4819,call_4821,call_4825,call_4838,call_4841,call_4843,call_4861,bop_4869,])
output2 = relay.Tuple([call_4800,call_4805,call_4820,call_4822,call_4826,call_4839,call_4842,call_4844,call_4862,bop_4869,])
func_4873 = relay.Function([], output)
mod['func_4873'] = func_4873
mod = relay.transform.InferType()(mod)
output = func_4873()
func_4874 = relay.Function([], output)
mutated_mod['func_4874'] = func_4874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3628_call = mod.get_global_var('func_3628')
func_3629_call = mutated_mod.get_global_var('func_3629')
call_4927 = relay.TupleGetItem(func_3628_call(), 0)
call_4928 = relay.TupleGetItem(func_3629_call(), 0)
func_4346_call = mod.get_global_var('func_4346')
func_4348_call = mutated_mod.get_global_var('func_4348')
call_4933 = relay.TupleGetItem(func_4346_call(), 1)
call_4934 = relay.TupleGetItem(func_4348_call(), 1)
uop_4940 = relay.sqrt(call_4933.astype('float64')) # shape=(7, 1, 2)
uop_4942 = relay.sqrt(call_4934.astype('float64')) # shape=(7, 1, 2)
func_3614_call = mod.get_global_var('func_3614')
func_3615_call = mutated_mod.get_global_var('func_3615')
call_4946 = relay.TupleGetItem(func_3614_call(), 0)
call_4947 = relay.TupleGetItem(func_3615_call(), 0)
bop_4953 = relay.floor_mod(uop_4940.astype('float64'), relay.reshape(call_4933.astype('float64'), relay.shape_of(uop_4940))) # shape=(7, 1, 2)
bop_4956 = relay.floor_mod(uop_4942.astype('float64'), relay.reshape(call_4934.astype('float64'), relay.shape_of(uop_4942))) # shape=(7, 1, 2)
output = relay.Tuple([call_4927,call_4946,bop_4953,])
output2 = relay.Tuple([call_4928,call_4947,bop_4956,])
func_4957 = relay.Function([], output)
mod['func_4957'] = func_4957
mod = relay.transform.InferType()(mod)
mutated_mod['func_4957'] = func_4957
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4957_call = mutated_mod.get_global_var('func_4957')
call_4958 = func_4957_call()
output = call_4958
func_4959 = relay.Function([], output)
mutated_mod['func_4959'] = func_4959
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4346_call = mod.get_global_var('func_4346')
func_4348_call = mutated_mod.get_global_var('func_4348')
call_4968 = relay.TupleGetItem(func_4346_call(), 1)
call_4969 = relay.TupleGetItem(func_4348_call(), 1)
func_3207_call = mod.get_global_var('func_3207')
func_3212_call = mutated_mod.get_global_var('func_3212')
const_4981 = relay.const(7, dtype = "uint32")#candidate|4981|()|const|uint32
const_4982 = relay.const([[5],[5],[3],[4],[9],[-2],[-9],[-10],[-10],[-2],[-2],[1],[8],[-5],[3],[2],[-9],[-5],[10],[-2]], dtype = "uint32")#candidate|4982|(20, 1)|const|uint32
const_4983 = relay.const([1.709748,1.180481,-7.111280,-7.897449,2.300873,-2.270590,-5.687014,-7.186866,4.410234,3.207321,-4.823966,6.867288,4.014114,2.651710,0.156552,-4.801287,-5.303887,7.150242,-7.943187,9.731322,8.819087,-9.931841,0.544316,-9.076220,0.945974,-4.100960,-6.929734,-2.717553,-1.579798,-8.419424,1.219680,-8.419148,-5.768327,-6.369981,-5.812626,-4.927356,7.476151,9.956126,-3.970100,7.992047,3.547741,2.087198,0.762774,4.937311,6.319445,2.195279,-3.948656,-1.304186,0.500476,9.004184,7.790799,-2.294843,1.765178,7.748768,0.397784,4.602981,-6.709025,-6.968445,7.225938,4.915895,5.988199,0.733093,8.830370,-3.215788,-9.766671,-2.719226,-2.066931,2.076995,-9.525803,5.110366,7.542502,-8.398306,3.291465,-3.212124,-5.682146,6.008113,-6.254948,-0.286260,-0.733298,6.826780], dtype = "float32")#candidate|4983|(80,)|const|float32
var_4984 = relay.var("var_4984", dtype = "float32", shape = (66,))#candidate|4984|(66,)|var|float32
call_4980 = relay.TupleGetItem(func_3207_call(relay.reshape(const_4981.astype('uint32'), []), relay.reshape(const_4982.astype('uint32'), [2, 1, 10]), relay.reshape(const_4983.astype('float32'), [80,]), relay.reshape(var_4984.astype('float32'), [66,]), ), 3)
call_4985 = relay.TupleGetItem(func_3212_call(relay.reshape(const_4981.astype('uint32'), []), relay.reshape(const_4982.astype('uint32'), [2, 1, 10]), relay.reshape(const_4983.astype('float32'), [80,]), relay.reshape(var_4984.astype('float32'), [66,]), ), 3)
func_753_call = mod.get_global_var('func_753')
func_756_call = mutated_mod.get_global_var('func_756')
var_4998 = relay.var("var_4998", dtype = "float64", shape = (2688,))#candidate|4998|(2688,)|var|float64
call_4997 = relay.TupleGetItem(func_753_call(relay.reshape(var_4998.astype('float64'), [12, 16, 14])), 1)
call_4999 = relay.TupleGetItem(func_756_call(relay.reshape(var_4998.astype('float64'), [12, 16, 14])), 1)
func_3002_call = mod.get_global_var('func_3002')
func_3004_call = mutated_mod.get_global_var('func_3004')
const_5006 = relay.const([5.028994,-7.890502,-2.247820,-0.426879,3.483296,-1.516370,-7.625558,8.311341,6.058070,-1.976871,-7.039350,-1.322623,-3.243207,7.094259,0.731250,5.122422,6.592432,-2.981725,-4.322374,-6.671094,5.333711,-9.412278,-3.212473,-1.771204,-2.963806,-6.304032,1.511577,5.831922,-0.138583,4.917621,-9.237158,-9.053567,9.611123,3.101243,-0.439225,5.389489,-6.384183,9.047508,-5.973488,6.698202,-9.383761,7.363927,-7.733403,4.361153,5.133599,-8.638143,9.982199,8.818579,3.206943,-5.066181,3.363591,5.387033,-2.950152,-9.502083,-5.976885,1.237381,8.730471,-6.927260,-8.251719,-6.495450,-1.097039,8.726240,2.722215,-8.408657,6.529088,-8.503550,3.807342,6.060837,-1.076220,-9.894079,8.734137,7.060902,-5.939218,-3.845301,7.370674,-6.187403,0.799263,-5.668324,-6.806739,0.028226,7.375763,-0.393614,7.014922,-0.105566,1.847693,-4.181895,8.244846,5.275043,4.180322,-5.267767,-7.586194,-5.101110,-5.380824,9.209364,-3.816939,-7.561827,-0.357568,-0.382103,-4.682058,-9.684065,6.642410,-3.923973,-7.846657,-8.106038,9.694916,2.760028,3.808053,2.251216], dtype = "float32")#candidate|5006|(108,)|const|float32
call_5005 = relay.TupleGetItem(func_3002_call(relay.reshape(const_5006.astype('float32'), [1, 12, 9])), 0)
call_5007 = relay.TupleGetItem(func_3004_call(relay.reshape(const_5006.astype('float32'), [1, 12, 9])), 0)
output = relay.Tuple([call_4968,call_4980,const_4981,const_4982,const_4983,var_4984,call_4997,var_4998,call_5005,const_5006,])
output2 = relay.Tuple([call_4969,call_4985,const_4981,const_4982,const_4983,var_4984,call_4999,var_4998,call_5007,const_5006,])
func_5009 = relay.Function([var_4984,var_4998,], output)
mod['func_5009'] = func_5009
mod = relay.transform.InferType()(mod)
var_5010 = relay.var("var_5010", dtype = "float32", shape = (66,))#candidate|5010|(66,)|var|float32
var_5011 = relay.var("var_5011", dtype = "float64", shape = (2688,))#candidate|5011|(2688,)|var|float64
output = func_5009(var_5010,var_5011,)
func_5012 = relay.Function([var_5010,var_5011,], output)
mutated_mod['func_5012'] = func_5012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2747_call = mod.get_global_var('func_2747')
func_2748_call = mutated_mod.get_global_var('func_2748')
call_5066 = relay.TupleGetItem(func_2747_call(), 1)
call_5067 = relay.TupleGetItem(func_2748_call(), 1)
func_2967_call = mod.get_global_var('func_2967')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_5074 = relay.TupleGetItem(func_2967_call(relay.reshape(call_5066.astype('float64'), [2688,]), relay.reshape(call_5066.astype('int32'), [2688,]), ), 0)
call_5075 = relay.TupleGetItem(func_2970_call(relay.reshape(call_5066.astype('float64'), [2688,]), relay.reshape(call_5066.astype('int32'), [2688,]), ), 0)
func_3628_call = mod.get_global_var('func_3628')
func_3629_call = mutated_mod.get_global_var('func_3629')
call_5076 = relay.TupleGetItem(func_3628_call(), 0)
call_5077 = relay.TupleGetItem(func_3629_call(), 0)
output = relay.Tuple([call_5066,call_5074,call_5076,])
output2 = relay.Tuple([call_5067,call_5075,call_5077,])
func_5080 = relay.Function([], output)
mod['func_5080'] = func_5080
mod = relay.transform.InferType()(mod)
mutated_mod['func_5080'] = func_5080
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5080_call = mutated_mod.get_global_var('func_5080')
call_5081 = func_5080_call()
output = call_5081
func_5082 = relay.Function([], output)
mutated_mod['func_5082'] = func_5082
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_5094 = func_2013_call()
call_5095 = func_2013_call()
const_5113 = relay.const([1.925998,-9.674277,5.673317,4.521802,-9.400965,-3.783630,8.366506,3.289561,2.729286,-0.661520,-1.862829,-0.396619,0.630094,7.617980,9.727307,7.847704,3.718538,-4.055055,-8.543266,4.194167,7.495499,-0.918921,6.702309,6.486962,-9.077679,-0.377455,-5.586941,3.578882,2.730310,-8.159172,6.402309,9.962156,4.833897,-5.522748,5.781864,-0.409042,9.640750,5.044683,-5.955779,9.873756,-8.747637,6.261078,-7.311206,7.737277,-3.391489,-8.152227,0.531523,-0.019669,6.078234,-2.663264,4.008907,-6.400160,0.395917,7.970532,-0.056620,-6.245581,-7.499866,1.380959,2.809982,-1.895370,-4.660281,1.549387,-7.487775,-1.993760,-9.326196,-6.947793,1.483867,-8.455221,2.570254,-7.983666,8.296926,-9.535826,-7.548901,-2.246020,-6.540958,6.532739,-1.479794,4.894416,4.606976,-6.640174,-2.055516,3.257328,0.656934,7.855361,7.576703,-8.027443,-6.487621,-8.048042,-2.956093,-8.981227,-0.058568,2.244195,4.623842,0.596745,-6.168010,-7.626781,8.943486,-0.519424,-2.856246,0.879151,5.263312,-8.205710,-4.250332,9.206175,0.285453,-3.339195,8.402773,-3.235982,-7.904813,0.170017,-7.899788,2.397362,3.936284,-8.443460,0.104710,8.810584,-0.358715,0.176877,4.028574,2.563953,-6.226941,-4.515378,-8.834543,-4.792962,-1.496513,1.202408,-6.424347,-2.577151,7.391605,3.659829,-1.098833,5.868358,-4.533183,-0.488239,0.943769,-8.361301,5.715074,-8.374957,-8.221651,-1.303001,-1.831366,7.106732,-8.328892,4.339779,-5.433390,4.091362,7.796214,4.294415,5.165862,6.319165,-6.776824,-7.245071,-0.839080,6.599981,-3.919854,-7.514756,0.877186,7.025431,8.364966,7.870054,2.967083,2.676456,-9.521652,-9.877520,-7.853971,-4.194345,8.096748,-9.870938,3.739128,-3.001192,9.414457,4.685714,-6.692987,-0.012593,7.262310,-7.005847,-2.035152,7.186358,-1.011778,-8.338190,-4.673039,8.502966,-9.400519,2.962460,6.816513,6.216483,-9.778264,-4.588065,8.438849,1.471090,-6.724542,1.059663,4.591227,7.845869,-2.978641,-2.079753,6.778138,-4.356358,9.519851,6.478320,-9.624613,8.594787,4.173911,7.384472,-5.450844,7.463260,-4.908614,-1.754100,-7.347832,-1.713373,2.941935,8.120295,-9.428293,-1.765761,6.196469,6.515340,-8.612657,1.988531,-4.231473,-0.583519,0.550107,3.061360,-5.188077,1.507007,-1.215836,4.315085,-5.594302,-1.103931,0.503261,-5.167210,-0.361750,-6.422401,-8.971710,3.996481,-9.780850,1.157637,3.903539,-9.308055,-1.366545,-7.271921,8.857647,7.923856,-3.318872,-3.634227,-5.137474,8.283979,-4.306580,-0.723281,3.163727,7.019951,7.809256,2.486270,-9.620976,5.636815,9.844232,1.006608,3.386679,-7.870239,-3.524162,9.451173,3.087104,7.726453,-5.023475,-5.444311,7.216321,-5.670783,-0.934769,-1.125793,6.115809,-4.240828,2.119577,2.802973,-9.468148,4.683798,-2.795524,6.443881,5.799727,-6.044379,-7.461791,5.969279,-5.011746,5.854792,1.807290,6.573949,1.542557,5.286146,8.145900,9.498397,-5.831102,-9.047602,-4.030519,-7.121939,4.286935,1.438465,1.346606,5.694652,-6.924904,-7.146211,-1.126513,-1.142711,7.023737,4.399780,-0.141225,-2.445375,2.326683,-5.136777,1.265995,4.399004,0.263092,-3.604900,1.139856,-2.964921,-9.263346,8.736558,6.886395,-7.087352,6.392275,6.888273,5.741038,-4.167648,0.984977,-4.005832,0.309104,2.327926,-2.625272,1.684755,4.281100,-4.283722,-8.052154,0.766660,4.485583,2.971502,7.147514,6.555699,-8.136026,2.115688,-4.152482,-0.480420,8.505823,-5.097985,-6.608754,2.263666,5.188593,7.427165,1.827842,4.877451,2.309405,4.521596,-7.616335,7.671001,-9.727714,-0.923666,-3.297045,-8.507377,-2.935821,5.084678,-1.055189,-9.752660,-2.255190,9.529650,-9.673051,0.853073,5.952885,-9.388449,8.928296,2.223423,-1.675845,-2.724403,-5.208531,-1.884052,4.261464,2.485032,-5.510237,5.762602,-4.978690,-0.941846,-5.626851,-9.169337,-2.495289,4.024626,-4.866371,2.987317,-2.024049,2.238703,-4.438475,1.901672,3.147664,0.650053,-4.882949,6.537408,-8.924299,-0.645498,6.531281,-3.629239,3.828033,0.961859,-2.761510,6.938718,-1.004257,-7.635159,-3.816817,-0.425908,-6.622073,-6.218173,-5.460306,9.675663,0.052348,1.118793,-3.884532,9.175699,5.835286,5.425136,9.155828,-3.456314,5.960921,8.331331,-1.327987,-9.823441,7.807711,-2.920667,-8.231442,-8.873368,9.542023,-7.565273,-4.878828,2.384118,-8.754688,4.001266,2.344993,5.532845,-3.554841,1.524503,-4.316591,-9.424520,-9.440460,7.822213,-0.642586,-4.069837,-5.213041,-3.400408,-5.036083,-0.765866,-8.721957,4.437030,-9.360217,2.043422,7.670446,8.604869,-3.716378,5.550647,-9.366797,2.997992,0.025854,-1.904929,-6.570409,-6.926968,0.353746,9.336840,-5.216833,7.821547,7.546653,-7.260407,7.538869,-2.662010,8.666532,-7.771276,-8.714633,-5.472498,-1.721967,3.847544,8.556270,9.219699,9.249058,7.312269,9.457490,-9.635911,4.210746,4.568712,-4.826527,-6.927780,-5.007051,-3.154476,-0.881345,-4.844104,4.997944,5.298265,0.535471,5.549325,3.645386,-3.327893,-2.599551,0.223467,7.609030,-7.852269,-4.938659,8.587388,-4.196022,7.962094,7.735118,8.532121,-3.442503,7.817858,5.424573,-8.947993,9.669651,-3.984369,4.921427,2.626060,-7.014051,-2.488153,-7.404153,1.794231,8.338294,3.463558,-0.563628,-5.640764,7.979433,-6.807957,-9.454870,4.733367,-5.386264,5.428069,5.703936,-1.994528,3.102182,-6.468179,2.394122,-5.373089,6.745081,4.279149,-8.672499,-8.787631,4.828220,-5.514684,0.609549,-8.316232,4.908174,9.031377,-6.538095,1.070564,-2.839317,-7.315964,2.569872,5.175872,-5.332543,0.643525,-2.375662,4.286010,-5.576491,9.516716,2.138954,6.658114,-9.091362,-0.977771,8.810844,-5.533171,2.564711,2.905053,6.983452,5.514036,3.885179,-6.181784,-6.230742,8.747129,9.071128,-6.215908,-6.674404,-7.904210,-0.026427,-7.849093,-6.361223,-0.355266,8.706722,-7.349368,-6.772426,-4.627806,-4.520282,9.812841,-2.068792,-9.188247,9.443529,3.441999,-7.746067,-8.525000,-9.013244,-8.763113,4.778291,-9.542764,-0.791947,5.580709,9.831635,-8.939586,-2.951736,-1.945862,4.085799,3.122876,-8.153956,-2.908732,-1.933497,0.517647,1.970248,3.990984,-8.670158,6.338017,-5.834931,1.108324,8.831635,-8.822617,8.065968,-2.944554,6.111226,-4.268557,-6.948122,-6.629887,5.942092,5.754975,-7.696756,-0.146704,5.754851,9.147424,-5.515836,3.380490,8.617689,-1.820730,-9.340364,3.433695,-5.495590,0.106885,-4.009161,8.884975,-3.125589,9.639735,2.775620,5.775368,6.322843,-6.083392,-8.421652,7.039007,9.115345,-8.084118,0.694083,6.421770,4.998567,-5.934630,0.186129,-5.307260,4.616696,-3.581439,9.885672,2.626878,-4.147052,-0.359248,7.146712,-3.264393,0.505775,-4.510860,-1.778831,-1.446941,4.455672,-1.859790,-0.698637,-4.837698,-0.068486,-3.849835,-9.691332,-9.786381,-0.465431,8.266907,8.399056,-9.922524,7.771441,7.285968,6.971219,9.964222,-4.990318,2.843186,-0.717483,-2.855869,-4.569238,-4.486313,-9.044705,7.949482,-7.078178,-4.404116,9.667226,-5.741911,-2.200054,-0.786864,-1.323764,-7.562217,3.063506,7.404906,8.230652,-1.861921,4.265165,-8.056915,-8.099229,-5.338021,1.882899,-6.428954,6.069629,6.925377,-3.533277,5.462042,3.717130,9.414372,7.603517,6.489159,9.448417,-5.560259,-4.918393,-5.406248,4.353855,9.717706,-9.317769,4.472769,9.039258,6.223179,-9.906088,-8.505191,-9.048733,9.477749,-3.598955,-3.469779,-1.218992,-4.320540,7.809105,4.010563,5.157068,2.233791,-9.153029,-7.413109,4.775081,2.010410,-0.240987,-4.448641,-4.309435,1.739686,-6.250177,-9.460693,-2.341537,0.249959,1.822895,-1.107781,-6.972069,-0.833001,-4.638548,-8.282672,-2.752450,-2.408456,7.499772,5.311013,-0.702055,-1.568101,-3.953106,6.713416,-0.550878,5.241151,-1.596415,-3.035018,9.694521,7.753590,9.315947,-0.383434,-8.682625,2.569185,2.740634,1.718645,1.475973,-5.883808,-1.884557,-2.945588,-8.748504,-7.080566,-1.346658,4.195523,-6.955010,2.709372,-1.288088,2.467992,-1.511900,-5.145898,-8.585360,8.432692,-3.004860,0.384784,-9.175574,9.930576,6.179890,8.680260,-7.894642,-5.232126,7.298201,2.483351,0.007283,-7.538819,2.502217,4.361207,-2.909544,4.291421,-9.748125,8.589900,-4.766775,7.139318,0.837552,8.827349,-3.237632,-0.325397,-0.612610,8.086075,-4.735176,9.012463,0.776782,9.523563,-0.387023,-5.768910,-6.429547,8.496516,-8.773655,-3.288650,9.356792,4.302300,1.162126,8.058964,7.841742,4.771224,8.542431,2.301223,4.809617,-4.837760,7.581390,-9.947380,2.994752,2.394470,2.497862,8.750265,7.747558,-1.463353,-5.084275,-8.768480,-6.337469,0.746976,2.635858,-2.406910,-4.091191,-5.501286,2.336857,6.332424,-1.010987,-7.336336,-4.444329,-5.855943,2.828045,0.991179,-2.621772,1.741219,6.136091,-6.324158,-7.908069,-4.656232,-3.179016,-6.318812,8.593951,-6.948046,-3.850612,0.666025,-0.526936,7.250423,-0.586364,1.535787,-3.753996,-0.865174,9.840326,-0.143561,2.041973,-9.649988,8.528611,-4.976970,-1.996780,-5.908307,8.829110,-9.451770,8.818491,2.488546,-0.928172,5.106328,-3.611486,-6.065530,-3.156583,4.804170,5.674299,0.997119,-4.480605,-0.723904,-9.436555,-2.093080,-7.695304,8.418717,-1.420706,-4.629173,4.399942,1.932242,4.447810,-5.533202,1.404074,1.844169,9.807401,3.189501,-3.501908,1.330081,0.538492,7.168120,-4.332836,5.814063,6.616878,1.716626,6.593444,-5.299519,-5.066916,1.264564,-8.781837,9.614222,0.223322,-0.949344,-5.889881,5.673025,8.395735,1.833493,7.625472,-1.161011,-4.405747,-3.204381,-7.697951,-7.057364,9.487119,-6.975028,1.379193,1.434673,3.116390,-1.963240,3.167640,4.375374,-9.180273,-1.497092,1.480721,1.714000,-2.845014,-8.422737,-2.545056,-4.401863,-6.133695,-4.791547,-8.606630,-3.699788,8.635521,1.868765,-6.575526,4.139889,5.662177,8.172308,-8.417333,3.369419,-9.829622,8.510693,-6.076417,-6.453201,2.825249,-9.914788,-0.128857,2.321892,-0.853432,5.630799,3.902552,9.844946,-9.338967,7.137868,8.253356,-2.367650,-9.727111,0.622102,8.779614,5.355917,-4.189646,-1.269224,8.762467,-5.249562,-0.796745,-8.298274,-6.899194,-2.832452,-0.053141,3.678150,-3.721668,9.906307,3.626732,-7.558416,-4.400259,3.496476,6.467655,-6.235833,9.610531,-1.438340,-5.528558,0.068824,2.386631,5.978857,-2.931466,8.050443,-0.501932,1.870756,7.976717,-6.974739,-1.298151,-6.073011,6.188606,-6.663083,6.956370,-8.915628,8.957238,-4.174449,-5.796071,1.368072,-4.467024,1.412950,9.684696,4.961419,-1.289054,8.244692,3.258320,6.421709,-2.575022,-4.550701,-2.868328,2.609321,-4.121650,-7.375226,7.230904,5.410628,0.556614,9.872706,-7.550912,9.682960,-3.227286,1.150180,2.623741,8.625763,-5.985613,0.392981,-4.708666,-4.217377,6.535344,8.867261,-6.742556,-2.760828,-9.289199,5.618987,-5.596763,4.114678,5.915601,0.975913,1.650905,-9.996269,-1.743488,0.595461,-6.453591,5.989607,-4.693960,-9.519853,-8.818545,-0.594178,-4.364332,6.246558,5.803274,-1.890407,6.877925,0.285973,-4.114260,-0.109314,8.380837,5.736363,3.719037,7.682891,-1.189294,4.267885,4.076984,2.500779,2.603669,-6.210415,4.089260,2.031538,-0.776292,-3.869927,-2.942515,9.727544,-1.228228,1.035652,-6.614120,9.126856,-3.288223,7.254955,6.187780,-2.273566,7.121327,3.019613,9.746804,1.495798,1.120731,-9.606489,-9.963913,0.652784,-8.120520,-8.964027,-2.396264,0.011497,-7.058419,-7.649403,6.729654,-9.122089,3.639108,-8.270773,-4.535821,2.224939,4.040821,5.286071,9.758117,-9.556856,4.084058,-0.048604,-1.897054,5.444016,-9.714362,-9.790221,-8.879369,-5.117334,-3.140270,-7.759792,-8.600013,-1.904274,8.319141,5.240274,0.090036,-4.587898,2.240706,-3.350602,5.393938,-9.043097,2.854973,5.972620,-4.801739,3.242727,-3.974417,1.925236,6.145808,-4.721571,-9.572901,-2.189883,9.071929,-4.427049,5.902615,2.613631,-3.537724,2.174491,-7.768533,1.551598,-5.927022,-5.133915,-9.726928,-0.237164,2.861589,-5.584233,-8.074602,2.058260,-1.185602,-7.890031,-6.129797,-8.285046,-8.127632,-9.979936,-5.854957,6.285235,1.895357,-7.577036,5.377357,5.466344,3.688537,-5.372429,-4.494343,-7.239962,-2.027190,6.805715,-9.138196,5.317957,3.580527,2.915607,-0.977239,-5.938325,-6.535534,4.584823,9.964797,1.461831,0.146230,5.903657,9.285325,-4.639226,-9.620538,9.241973,4.556628,1.551817,-5.820089,-0.095883,4.431385,-5.942084,8.620536,-9.255693,2.098075,-9.894533,4.413398,-4.228077,2.423836,-3.790991,-6.421768,-0.940096,0.636880,-8.760781,-8.711634,-6.688142,-5.215541,-1.365848,-1.064019,-1.781159,-3.507489,-6.134469,-1.718059,-3.909305,4.103831,-5.233488,-8.226049,7.769675,-5.747608,-2.150610,6.867455,4.504433,2.757345,4.715493,-4.065401,8.350542,-1.304838,-3.978380,8.389308,-8.962025,-3.611333,-1.716178,4.803304,-8.312560,-7.815744,1.678706,5.939475,4.517501,-2.785068,-6.472570,-3.860351,5.350005,-2.540114,-3.023021,-3.001057,-0.094240,1.116057,-8.324916,1.403995,-6.008694,5.108635,2.493997,-5.125653,2.907247,2.522025,5.507212,-1.637319,4.834445,7.435903,-5.436651,-0.530585,-5.688763,2.387240,7.745713,3.780281,-4.503556,0.199956,3.505141,-8.869325,-3.585871,-2.027538,-9.172553,-6.177449,1.339754,1.478271,7.745663,1.877145,4.254765,-4.087639,9.607663,-4.896696,-5.202480,7.819002,-2.366972,7.544974,2.189126,-5.754677,-6.876738,7.515043,-8.142231,7.541033,5.351403,8.778629,1.172680,9.130848,2.798543,5.291733,0.037355,9.449364,-3.732760,-8.799099,8.445462,7.644906,7.870647,9.654079,4.689726,1.674810,7.618258,9.332487,7.412537,5.115340,7.286166,-8.019374,8.884061,-9.483701,-8.180305,-9.010652,4.931281,0.754433,-1.903684,5.114728,1.366804,-1.217782,5.239912,-5.058420,-4.917183,-0.065986,-5.385142,-2.098594,-3.992081,8.041862,2.372608,-9.139009,-9.810280,0.761912,4.139198,-7.398982,-1.315451,8.594247,2.866049,-7.523638,-4.151114,7.397773,3.171455,-5.574188,-6.887105,3.577770,5.237622,-4.301286,8.187716,0.670815,-8.369532,-8.544899,-4.261999,8.195501,0.830570,-9.201953,-7.355071,-1.534433,4.429424,5.479897,-9.029151,-3.945669,7.935378,4.897236,-5.699288,7.085485,3.967341,1.792815,6.811299,8.849610,-1.236383,-5.648264,4.673546,1.364283,-4.866551,-4.407138,8.531910,-6.673804,0.611105,7.677254,-2.228618,3.763990,-4.403928,-3.030419,0.627505,-9.975958,5.913396,-2.496146,5.639626,0.972523,-2.870325,6.585334,-8.207076,-8.657906,6.269235,-8.818458,-0.401248,5.663077,-8.423486,7.688921,3.324264,-6.044037,-2.920752,7.187451,-9.007014,7.868992,-6.688235,-0.500875,5.819834,7.067552,-3.024377,-6.925952,2.530597,-0.364377,6.723649,5.463556,0.911467,1.143178,-9.177370,-3.819505,-2.018620,0.195113,-9.769918,7.243430,3.463508,-5.057711,-0.682989,-9.106077,6.235520,-5.402759,-4.122680,3.480436,9.164502,-8.639631,-4.874201,-2.564652,-7.860538,2.284277,8.994233,-4.073729,6.275849,-3.574902,-6.089656,1.631499,4.416899,-3.661887,0.141070,-5.147749,6.385164,-3.046951,6.005846,-8.574899,3.918896,-4.224393,-1.451380,0.249765,7.310741,-6.733625,-6.830687,2.926978,7.413037,-5.056494,-4.230529,5.338823,1.372795,8.895441,-9.570783,-8.930338,7.001886,-6.585994,-1.090582,-3.769958,3.920878,7.543956,-8.988632,-7.137773,-9.898420,7.749209,9.220577,-9.753578,-7.177269,0.081163,8.086494,-4.805891,-4.321626,3.261778,-0.478481,-9.767137,-5.660255,-0.313706,0.463386,-0.837348,5.552498,-3.844060,-5.060932,3.407668,-4.047886,4.805425,-8.225779,-6.789560,-3.418917,0.577893,7.472367,-0.562778,8.850916,0.160836,1.417993,4.951969,6.670128,7.214604,-0.068929,-5.709301,2.043317,0.276702,-6.916449,-5.517699,2.430530,8.304317,-1.958022,-3.032376,-9.431672,-5.424323,7.586026,-1.222412,8.504859,-7.915565,-7.324766,-9.101881,-8.277874,-3.127398,9.390574,0.438545,-6.576216,-1.873962,-5.754580,7.542183,-8.479869,9.738454,0.524111,-1.077281,9.126096,-9.495726,6.122288,-7.976163,-3.418863,-7.931551,8.557908,-9.999811,0.419240,-4.715825,1.427451,-0.242894,8.627618,6.549518,-4.877388,6.686306,-8.436546,3.982521,-9.294663,4.507738,-8.115468,3.679538,6.526714,-9.059612,-2.521682,1.884059,-7.180050,2.447670,6.872735,-7.473038,-4.673125,4.622466,8.549906,-0.576173,-9.875173,8.738209,-0.450063,2.778439,-4.655253,-9.568054,-5.804713,2.466246,4.522126,9.635310,2.309159,-4.604974,2.311783,2.996451,0.998403,9.114926,4.735497,-0.203337,4.400553,-8.979905,8.946890,-9.406721,-4.882392,-6.681867,-6.892461,-3.414368,8.414634,5.242084,-6.425961,-8.847153,-0.146677,-0.615616,-6.363257,4.262235,-3.042596,0.692134,-1.425509,5.376618,1.831304,0.551374,1.982725,-1.236670,-0.759351,-4.896115,-1.613236,-2.494586,-2.614596,-7.534696,-0.189355,-9.305599,0.542302,-1.878025,9.810944,-8.334597,-5.250125,-7.791823,7.787344,-0.623863,-1.798186,2.826331,4.188723,7.763147,-4.628371,-4.632246,-8.477718,4.187934,9.401982,1.823223,1.338015,4.152460,1.761091,-2.004843,-7.642239,4.364975,4.067453,4.612546,-8.787646,-1.508893,9.439926,9.723967,6.736779,0.514186,8.739890,0.227243,3.786635,-9.544537,-3.312029,1.716756,1.293106,0.257296,6.186919,-3.042754,1.325278,-1.094943,3.893463,-4.204644,-9.191869,4.550171,3.960639,7.849165,-6.074647,5.974788,-5.989984,8.734621,2.371016,-1.023692,-6.102261,0.263124,3.125407,-4.433860,0.418353,0.834480,-8.781145,4.777898,9.723635,-1.561817,-6.258349,-0.416953,4.276746,8.914845,-0.636513,4.337675,-9.354807,-3.869539,4.086379,-2.200750,-1.526579,-6.202652,5.488546,-6.955341,-1.081661,-1.832168,-0.318938,2.546182,-4.771194,1.290725,-2.571565,3.829266,8.475389,-9.157122,-4.971629,9.107111,-1.829160,-4.962084,-1.433043,-6.970181,1.842460,1.419295,0.324522,1.387365,9.849887,-0.034717,-7.587249,-1.356525,-6.698792,-6.411276,-4.218133,7.496776,9.870972,-2.915263,-0.219061,9.855625,3.020919,9.753415,8.317142,-6.358719,1.082307,7.119854,4.514791,0.418051,-6.661863,-0.399456,-6.293846,-2.018036,2.530426,8.259437,1.767970,-2.098696,7.724448,-7.280270,-7.946920,-8.256917,0.353428,5.976130,0.468583,-6.470000,-8.322074,-6.104772,-0.211267,0.463676,5.063437,7.663021,4.508393,2.364330,-1.562366,5.327985,2.294745,-7.707907,9.162609,1.054145,5.572727,6.287247,-7.601554,-8.747923,-7.204954,5.433550,-2.296585,-9.820717,-1.365525,-0.139789,3.108440,5.022085,4.832501,-1.802322,-4.708075,-6.783126,0.943386,8.876423,4.695803,6.028539,1.437225,-7.174548,7.482489,6.466626,-7.692106,-6.343230,-5.375730,-9.910582,-8.404722,-6.140031,-7.570111,-5.577387,-1.406283,-0.142420,7.434378,8.858988,-7.445481,-4.740567,9.275921,7.456512,3.062548,5.223228,1.713976,-0.160286,-5.458480,-5.529177,4.113025,1.332617,9.123347,0.759969,1.141838,9.327299,-9.245987,7.976889,-7.832110,-6.476427,1.766502,8.131185,9.957228,-2.604119,-5.593595,4.319958,7.061874,-1.106303,-4.929129,9.726073,-0.089470,0.634888,-3.027516,-5.947447,5.951909,-8.189937,7.335960,3.964038,9.007589,-6.718791,9.195315,3.234512,-0.834780,0.700540,-7.623538,-8.184726,0.445764,5.346134,2.099561,-1.095232,-0.157697,1.026180,-3.409072,8.670308,-0.854087,-7.642442,0.046156,-1.042441,0.595422,-9.333797,-5.859254,-0.653399,-2.155038,4.670190,-7.855038,-9.932594,-5.746343,-2.459756,-9.170900,8.071529,3.196653,-9.649901,9.146213,7.604464,-9.564700,-3.658300,-8.208228,0.215520,4.432090,-9.103117,-8.840023,-2.567515,-4.855149,-3.843075,-8.927088,0.700911,4.051698,-1.831650,-7.166502,1.785952,7.312065,6.415545,-9.047673,-1.805342,1.332763,8.270740,7.971251,1.928195,-4.771351,4.092452,3.767092,7.730798,-2.008386,4.604277,1.412877,-7.270230,0.865320,-5.295239,-7.807078,4.326016,-7.743565,1.133217,-8.124679,0.341883,-7.122570,-5.791889,-3.342106,-8.187445,8.086589,3.167653,-3.954701,-7.692337,-2.831318,-5.445994,4.796048,-8.075270,-7.586356,-9.423010,-1.740864,-4.229682,-2.042198,-9.018328,-7.219500,4.681603,3.915402,-1.719060,-2.812596,6.732828,3.233162,0.311492,3.369950,-0.684769,-1.438005,-4.464171,9.867535,3.375158,7.679795,-3.042070,8.868879,-0.811445,-4.583748,-9.760361,5.458030,5.953182,1.279432,7.669856,5.037432,7.055984,-9.107744,-4.339710,-2.154445,3.498420,-7.589390,1.946322,-0.713385,-6.430854,-6.919256,3.377015,-0.142762,-4.079768,-1.125702,-4.796281,-1.183964,2.234946,9.944516,-2.246545,5.541210,-8.172455,3.561488,1.412494,5.917281,-9.986098,8.998440,4.095163,1.434651,7.216296,6.503526,4.246189,2.286950,7.849904,-3.926569,-6.819812,2.349256,3.951198,-8.200094,-6.307151,-1.025085,3.473763,9.384508,8.206986,4.101410,-4.400704,-5.168039,-8.311387,-0.159618,1.690254,7.003828,-9.763832,-8.656661,9.064946,2.028559,-9.369711,-5.364471,4.674148,-1.430188,-5.743452,8.570725,-1.250407,-6.068849,-5.649567,-6.544870,-1.700493,3.462180,9.474606,-1.674763,1.367994,-5.529170,-0.165870,9.653128,-6.608691,-6.730265,3.772065,9.168847,-9.483255,-3.590169,-1.801462,-9.874095,-0.201455,-2.013958,8.518889,-0.733979,-9.660488,-9.496103,-1.526440,-6.857474,6.795186,9.715431,-6.754879,-3.803705,4.889828,1.065234,-2.238753,-1.993804,-3.674922,-6.398284,7.685139,-0.969770,6.839675,-9.518392,-8.492187,0.536632,-2.667084,2.793610,6.327148,0.648181,-9.492831,0.299549,-5.221330,-3.757931,-8.471341,-6.894465,9.091071,0.446945,7.092966,-9.824423,-5.617693,8.879771,7.631766,6.377055,-0.299293,2.461356,-4.920595,7.210689,-3.686528,8.005085,-8.059598,-4.801254,-1.796083,3.183647,-6.363276,3.699700,6.764818,9.289468,8.337181,6.794290,7.813432,7.210001,8.524755,-7.539513,-2.685983,-1.331127,7.488121,-7.940295,-7.215187,0.252678,-5.129553,3.772936,3.787717,-6.102082,-7.783822,-0.465165,-7.605801,9.217447,3.824331,1.710232,4.843014,-7.221622,-8.920812,-0.460889,-8.122490,1.582842,-7.356383,-0.236844,3.264143,1.317442,0.697293,0.271308,6.818918,5.914865,-1.997012,-7.854871,1.580910,-0.226917,6.372763,-7.707177,-2.907735,-2.650406,4.043502,-5.138256,6.969941,-2.860980,-2.139096,-9.649310,-5.362753,-9.464271,-4.510983,-3.074630,2.295062,-5.894382,3.025883,7.499243,-7.445736,-7.339506,-8.642909,2.166534,-8.787902,-3.910675,2.464679,-0.503375,0.667101,8.876077,4.810834,4.095754,-4.078929,-9.593364,-5.613951,-6.918040,5.472531,-5.553612,3.708316,-8.936865,3.738005,-9.331480,2.278904,-8.978200,6.056363,7.983678,3.433394,-4.805608,-5.371405,7.649079,-9.112449,3.066500,0.493851,9.684382,2.115634,-5.495280,8.436742,-9.878854,-8.819246,7.237123,-8.397898,-1.732852,7.060834,7.617720,4.283579,-1.316148,-9.948536,-7.139273,-2.564492,8.646748,8.427668,-6.618292,-9.580057,1.500888,-6.237198,8.524723,7.872723,-8.210231,-1.523494,-5.003130,8.648464,8.345871,2.225376,0.019166,5.437251,8.466383,-4.949960,5.651840,-5.783073,2.820033,6.800795,1.209780,7.785161,4.422554,-6.856854,0.188206,3.963937,7.105024,-7.966700,-6.183862,1.926938,-1.972787,1.985412,3.420597,1.847208,-0.705061,5.277827,3.756042,-4.014848,-1.399270,2.719798,-6.695361,-9.603379,5.950269,-6.368920,-4.601290,6.495495,4.457693,2.491233,0.029507,-9.600095,0.587156,3.752531,-0.363195,-9.153689,-2.079299,-9.286707,-2.511047,3.495769,-3.609925,4.047903,4.346680,0.402895,7.706453,2.348175,6.729578,5.697975,5.037427,-9.606636,-5.441034,-0.867109,-3.531095,2.831939,2.164711,-6.038728,-1.716960,0.158027,-1.047877,-3.395220,9.512593,-4.667571,1.768066,7.106388,9.094846,-2.541792,-5.805607,-0.700961,-4.210101,9.345223,-8.635574,5.995021,5.236805,6.290304,7.520057,-7.945147,1.993899,-8.775426,-3.312496,-2.679731,8.549333,0.700274,6.495656,-9.068600,0.387743,-7.225419,0.053086,-9.181437,-1.894073,-6.812453,1.325299,-7.211019,-4.002314,-6.991012,-0.655185,-2.781043,3.121179,-2.634607,1.191650,-6.352828,-0.866193,0.094254,-6.221071,6.740921,2.867121,3.501193,-7.905344,8.947815,-2.424204,1.668313,-0.868680,-8.721151,6.623683,7.564566,6.438407,9.449309,-1.156227,2.911220,-3.894301,8.659695,-4.605939,-1.332983,-4.995379,5.744015,9.395348,4.391878,-5.204784,-1.888949,-7.695062,8.769797,4.663431,-3.189016,8.581355,2.849763,-7.829744,0.723383,3.911562,5.713588,0.823831,-2.454146,9.487932,4.842454,5.294771,7.285990,2.333429,3.699584,3.050011,-3.024288,1.782081,-1.627887,-3.895083,-0.139234,5.926331,8.338566,2.774426,-1.312952,9.471719,-1.683770,6.811702,5.916473,-6.289603,9.358187,-4.050763,-6.100950,7.669533,1.827164,-3.200291,8.847992,1.798451,3.669530,-5.593735,8.162304,0.449329,-5.232832,9.192071,8.029846,-9.609328,5.616299,-3.593882,-1.312215,-9.651158,9.961324,-0.604205,-7.845385,8.483446,-5.529407,4.888541,7.186554,3.485571,0.039439,7.199698,2.549968,-8.660797,-2.579157,-9.737908,-5.831000,-7.536001,-1.805825,3.288832,-7.685617,-2.370017,-8.493721,-2.788041,-6.537305,-8.441634,-9.108703,-5.650690,8.228640,-1.622607,9.131926,4.292665,5.780345,8.288517,-9.281118,0.502715,9.437957,9.318504,8.167076,3.796114,6.536022,-3.856876,-5.544835,7.209963,8.395186,4.244108,4.217870,-7.471187,5.547646,-8.209297,-8.115184,-4.682266,6.260113,-8.750542,-6.872301,-9.889979,0.587287,3.821280,9.513804,3.791329,6.727495,2.789113,1.686826,9.077849,9.251622,-1.948371,8.977598,9.288391,-7.853856,-6.315387,8.280840,0.699702,8.599687,-9.109838,8.770268,0.338464,3.647450,0.672870,-0.264756,3.013847,-2.540422,-9.522117,-0.626595,-8.595737,7.456758,5.151376,7.191106,4.026554,-0.852156,7.182092,7.987428,-9.631432,6.326076,-2.631206,-9.200766,9.903166,0.421234,2.240741,2.428673,2.843703,-4.179817,-1.749338,0.570148,-6.296694,1.481889,2.536827,-1.626355,9.139727,-8.571647,4.944580,9.353886,6.573978,-0.183072,5.323575,8.855346,-0.531421,2.078916,6.963357,-3.373140,-8.334600,-4.433560,3.923936,5.872710,-4.351979,-3.451903,2.867871,2.843848,-2.152431,6.320669,1.647831,-6.442467,-2.469047,-0.529221,-5.337544,7.709989,5.700830,3.314590,-7.607833,5.405720,-3.710794,-5.129968,-5.940795,-0.874519,-8.652644,-3.460168,-1.436297,3.842399,-3.722005,2.009597,9.242835,-6.738533,-0.745159,7.533620,-1.116098,3.139424,-9.565663,-1.531660,3.028789,4.051963,-8.169384,-0.328154,1.553280,2.741255,5.107620,-6.051318,2.917728,5.727749,-5.934761,-4.897691,-8.144123,1.536605,-7.846319,0.801452,6.251364,6.469272,-1.188282,-6.309398,2.675470,0.697241,-8.208236,2.433742,-1.241931,5.829838,0.769550,-6.139355,-1.229473,-0.308327,8.345907,-9.628503,0.737681,1.041821,0.223197,2.044087,7.520389,-2.121065,-4.099165,-1.939547,-0.582770,-5.283205,2.111735,8.582628,-9.320416,-4.162210,6.348481,-3.632317,-2.026595,-5.466577,-4.314693,6.856840,3.249146,0.662336,1.520661,-5.993547,-7.853042,-6.690224,7.847418,2.099125,3.115086,-6.982119,-1.668807,9.022078,-9.082620,5.816429,4.529353,-5.929811,-1.468409,0.855613,3.262895,5.761370,-4.456507,-9.524586,-2.308666,6.968220,3.117289,-7.799069,5.669884,7.244437,-6.751911,-7.072957,7.311660,-1.278614,-0.359126,5.852491,2.563988,1.414560,-4.398702,-5.260672,3.883583,5.508032,5.300176,7.800125,1.769081,-8.912786,3.814992,-7.445542,7.912849,-0.306378,-1.685070], dtype = "float64")#candidate|5113|(2688,)|const|float64
bop_5114 = relay.multiply(call_5094.astype('float32'), relay.reshape(const_5113.astype('float32'), relay.shape_of(call_5094))) # shape=(2688,)
bop_5117 = relay.multiply(call_5095.astype('float32'), relay.reshape(const_5113.astype('float32'), relay.shape_of(call_5095))) # shape=(2688,)
output = bop_5114
output2 = bop_5117
func_5119 = relay.Function([], output)
mod['func_5119'] = func_5119
mod = relay.transform.InferType()(mod)
output = func_5119()
func_5120 = relay.Function([], output)
mutated_mod['func_5120'] = func_5120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3473_call = mod.get_global_var('func_3473')
func_3474_call = mutated_mod.get_global_var('func_3474')
call_5171 = relay.TupleGetItem(func_3473_call(), 0)
call_5172 = relay.TupleGetItem(func_3474_call(), 0)
func_3614_call = mod.get_global_var('func_3614')
func_3615_call = mutated_mod.get_global_var('func_3615')
call_5193 = relay.TupleGetItem(func_3614_call(), 0)
call_5194 = relay.TupleGetItem(func_3615_call(), 0)
output = relay.Tuple([call_5171,call_5193,])
output2 = relay.Tuple([call_5172,call_5194,])
func_5209 = relay.Function([], output)
mod['func_5209'] = func_5209
mod = relay.transform.InferType()(mod)
output = func_5209()
func_5210 = relay.Function([], output)
mutated_mod['func_5210'] = func_5210
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3473_call = mod.get_global_var('func_3473')
func_3474_call = mutated_mod.get_global_var('func_3474')
call_5230 = relay.TupleGetItem(func_3473_call(), 2)
call_5231 = relay.TupleGetItem(func_3474_call(), 2)
output = relay.Tuple([call_5230,])
output2 = relay.Tuple([call_5231,])
func_5232 = relay.Function([], output)
mod['func_5232'] = func_5232
mod = relay.transform.InferType()(mod)
output = func_5232()
func_5233 = relay.Function([], output)
mutated_mod['func_5233'] = func_5233
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2874_call = mod.get_global_var('func_2874')
func_2875_call = mutated_mod.get_global_var('func_2875')
call_5272 = relay.TupleGetItem(func_2874_call(), 0)
call_5273 = relay.TupleGetItem(func_2875_call(), 0)
const_5283 = relay.const([True,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,False,True,True,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,True,True,False,True,False,True,True,False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,False,False,True,False,False,False,False,False,True,False,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,True,False,False,False,False,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,True,False,False,False,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,False,False,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,False,True,False,False,True,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,True,False,False,False,False,False,True,False,True,False], dtype = "bool")#candidate|5283|(2688,)|const|bool
bop_5284 = relay.greater_equal(call_5272.astype('bool'), relay.reshape(const_5283.astype('bool'), relay.shape_of(call_5272))) # shape=(2688,)
bop_5287 = relay.greater_equal(call_5273.astype('bool'), relay.reshape(const_5283.astype('bool'), relay.shape_of(call_5273))) # shape=(2688,)
const_5288 = relay.const([True,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,False,False,True,False,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,True,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,False,True,True,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,True,True,False,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,False,False,True,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,False,False,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,False], dtype = "bool")#candidate|5288|(2688,)|const|bool
bop_5289 = relay.less_equal(const_5283.astype('bool'), relay.reshape(const_5288.astype('bool'), relay.shape_of(const_5283))) # shape=(2688,)
output = relay.Tuple([bop_5284,bop_5289,])
output2 = relay.Tuple([bop_5287,bop_5289,])
func_5292 = relay.Function([], output)
mod['func_5292'] = func_5292
mod = relay.transform.InferType()(mod)
output = func_5292()
func_5293 = relay.Function([], output)
mutated_mod['func_5293'] = func_5293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4346_call = mod.get_global_var('func_4346')
func_4348_call = mutated_mod.get_global_var('func_4348')
call_5312 = relay.TupleGetItem(func_4346_call(), 0)
call_5313 = relay.TupleGetItem(func_4348_call(), 0)
func_3727_call = mod.get_global_var('func_3727')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_5316 = func_3727_call()
call_5317 = func_3727_call()
func_5232_call = mod.get_global_var('func_5232')
func_5233_call = mutated_mod.get_global_var('func_5233')
call_5335 = relay.TupleGetItem(func_5232_call(), 0)
call_5336 = relay.TupleGetItem(func_5233_call(), 0)
output = relay.Tuple([call_5312,call_5316,call_5335,])
output2 = relay.Tuple([call_5313,call_5317,call_5336,])
func_5338 = relay.Function([], output)
mod['func_5338'] = func_5338
mod = relay.transform.InferType()(mod)
mutated_mod['func_5338'] = func_5338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5338_call = mutated_mod.get_global_var('func_5338')
call_5339 = func_5338_call()
output = call_5339
func_5340 = relay.Function([], output)
mutated_mod['func_5340'] = func_5340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5292_call = mod.get_global_var('func_5292')
func_5293_call = mutated_mod.get_global_var('func_5293')
call_5381 = relay.TupleGetItem(func_5292_call(), 0)
call_5382 = relay.TupleGetItem(func_5293_call(), 0)
func_4726_call = mod.get_global_var('func_4726')
func_4727_call = mutated_mod.get_global_var('func_4727')
call_5392 = relay.TupleGetItem(func_4726_call(), 7)
call_5393 = relay.TupleGetItem(func_4727_call(), 7)
func_4463_call = mod.get_global_var('func_4463')
func_4465_call = mutated_mod.get_global_var('func_4465')
const_5399 = relay.const([-6.898129,-8.380011,-0.020476,5.875809,8.754479,-6.471110,-0.801925,9.593910,-1.629113,1.612255,1.690408,0.813756,7.346978,-7.123178,9.791451,0.377926,-5.238468,-6.825466,1.016328,1.636568,0.261768,6.773097,-7.772586,-8.593356,8.335660,-1.771348,-8.442195,1.537317,-7.746890,-5.262969,7.642930,0.406829,4.189618,6.719466,0.824396,2.432008,-1.470657,1.310003,2.528302,-8.944377,2.313104,1.942438,-0.349766,7.056969,-3.450794,-4.682343,-3.297192,3.085421,-6.787317,-8.075121,2.822754,-7.476115,-9.988819,3.268378,8.840625,-9.863244,-3.612023,-8.896068,-4.407036,-6.780581,5.487014,7.082062,-8.685302,6.204756,9.174954,4.205941,1.424993,-2.702564,8.771465,5.257567,3.649201,9.839951,-6.594307,8.689454,4.356980,3.106977,-0.048437,-5.128065,-5.519159,8.855814,-7.939399,-3.169221,-2.490275,2.361994,-1.111173,-8.754889,2.688730,-2.548896,8.594895,-7.773174,0.592010,5.021200,-5.008199,-7.898477,9.104083,-2.271073,-9.743569,3.547635,-1.359508,-9.079691,-2.342414,-6.407711,-6.573944,6.533420,-8.762726,1.149569,8.262679,-5.820599,-8.757985,-9.712806,-1.081601,7.583943,-4.893938,-3.154150,-5.488853,8.343612,6.793405,-5.818608,-2.107208,-2.744453,7.886809,-2.588077,-3.782053,3.737645,-0.748598,1.479331,-9.771837,2.655507,9.673394,0.006543,9.532257,-9.446489,2.225551,-0.481833,-0.616484,-3.435317,-0.712164,1.991599,3.226791,-0.109382,-7.458282,5.700141,-4.682738,7.141035,-3.849919,5.191333,-6.990063,-2.693339,-1.103404,9.547248,2.190305,3.756369,9.220304,7.458403,3.942939,-3.578970,6.349031,-6.846299,-3.834775,6.626077,9.562707,-9.538057,6.093577,3.646105,-5.286598,-8.721265,-5.303528,6.259924,-7.830784,8.402168,-1.464992,-9.113596,4.466621,-0.905206,-6.354640,-0.281567,-1.443108,2.990407,0.854257,-5.419950], dtype = "float32")#candidate|5399|(180,)|const|float32
call_5398 = func_4463_call(relay.reshape(const_5399.astype('float32'), [2, 10, 9]))
call_5400 = func_4463_call(relay.reshape(const_5399.astype('float32'), [2, 10, 9]))
uop_5407 = relay.asinh(call_5398.astype('float32')) # shape=(2, 10, 9)
uop_5409 = relay.asinh(call_5400.astype('float32')) # shape=(2, 10, 9)
uop_5412 = relay.rsqrt(call_5398.astype('float64')) # shape=(2, 10, 9)
uop_5414 = relay.rsqrt(call_5400.astype('float64')) # shape=(2, 10, 9)
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_5418 = func_2013_call()
call_5419 = func_2013_call()
uop_5423 = relay.sinh(uop_5407.astype('float32')) # shape=(2, 10, 9)
uop_5425 = relay.sinh(uop_5409.astype('float32')) # shape=(2, 10, 9)
var_5428 = relay.var("var_5428", dtype = "float32", shape = (2, 10, 9))#candidate|5428|(2, 10, 9)|var|float32
bop_5429 = relay.subtract(uop_5407.astype('int16'), relay.reshape(var_5428.astype('int16'), relay.shape_of(uop_5407))) # shape=(2, 10, 9)
bop_5432 = relay.subtract(uop_5409.astype('int16'), relay.reshape(var_5428.astype('int16'), relay.shape_of(uop_5409))) # shape=(2, 10, 9)
func_1587_call = mod.get_global_var('func_1587')
func_1589_call = mutated_mod.get_global_var('func_1589')
const_5439 = relay.const([-9.962907,-3.498383,-3.485777,-9.048900,7.952032,3.360070,5.773415,-0.419627,-7.384883,2.912074,-1.465781,1.766318,-7.308536,-4.899365,-7.683185,8.327972,-9.498074,-4.864942,7.165362,0.823765,-2.628983,2.742117,9.648899,8.128685,-6.813422,7.505193,2.735336,-8.524629,7.595336,4.592548,-0.089957,3.503751,-9.310237,-4.676566,-9.678980,-0.332182,-6.409883,-9.289910,8.955742,-5.471146,-2.718103,1.615779,-6.789871,3.354774,-3.053476,4.121735,-2.785530,4.486986,3.380591,-6.815941,-6.496781,-5.058436,-3.171226,-7.326591,-9.607780,3.451725,6.767710,-4.781862,3.373187,3.856966,-0.962701,-9.157735,7.268531,7.192250,1.391926,-1.905410,1.251143,4.241054,6.478940,7.031525,-6.456963,9.400337,7.954429,3.982582,8.755232,4.472542,-5.097152,-4.954638,1.688089,-2.433181,5.383915,-0.555785,7.923135,2.023685,-8.355305,-3.402746,2.995568,-5.021303,6.076920,3.804878,-1.547692,-5.026408,8.748478,3.341363,-9.180461,2.748685,-7.684142,-9.421346,0.046176,4.444011,3.550815,-6.060452,3.704025,9.490356,5.391461,0.709355,0.923955,-6.816286,9.344398,-0.768928,0.640707,3.111604,6.842330,3.747401,1.191117,-5.292032,-0.239381,-7.203898,7.083661,-0.231436,-9.867559,9.396218,1.468003,-4.110925,8.204443,-3.547068], dtype = "float32")#candidate|5439|(126,)|const|float32
call_5438 = relay.TupleGetItem(func_1587_call(relay.reshape(const_5439.astype('float32'), [6, 3, 7])), 0)
call_5440 = relay.TupleGetItem(func_1589_call(relay.reshape(const_5439.astype('float32'), [6, 3, 7])), 0)
output = relay.Tuple([call_5381,call_5392,const_5399,uop_5412,call_5418,uop_5423,bop_5429,call_5438,const_5439,])
output2 = relay.Tuple([call_5382,call_5393,const_5399,uop_5414,call_5419,uop_5425,bop_5432,call_5440,const_5439,])
func_5446 = relay.Function([var_5428,], output)
mod['func_5446'] = func_5446
mod = relay.transform.InferType()(mod)
var_5447 = relay.var("var_5447", dtype = "float32", shape = (2, 10, 9))#candidate|5447|(2, 10, 9)|var|float32
output = func_5446(var_5447)
func_5448 = relay.Function([var_5447], output)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3236_call = mod.get_global_var('func_3236')
func_3237_call = mutated_mod.get_global_var('func_3237')
call_5460 = relay.TupleGetItem(func_3236_call(), 0)
call_5461 = relay.TupleGetItem(func_3237_call(), 0)
output = relay.Tuple([call_5460,])
output2 = relay.Tuple([call_5461,])
func_5465 = relay.Function([], output)
mod['func_5465'] = func_5465
mod = relay.transform.InferType()(mod)
output = func_5465()
func_5466 = relay.Function([], output)
mutated_mod['func_5466'] = func_5466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_5478 = relay.TupleGetItem(func_1703_call(), 0)
call_5479 = relay.TupleGetItem(func_1705_call(), 0)
output = relay.Tuple([call_5478,])
output2 = relay.Tuple([call_5479,])
func_5480 = relay.Function([], output)
mod['func_5480'] = func_5480
mod = relay.transform.InferType()(mod)
mutated_mod['func_5480'] = func_5480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5480_call = mutated_mod.get_global_var('func_5480')
call_5481 = func_5480_call()
output = call_5481
func_5482 = relay.Function([], output)
mutated_mod['func_5482'] = func_5482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_5489 = relay.TupleGetItem(func_1666_call(), 0)
call_5490 = relay.TupleGetItem(func_1668_call(), 0)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_5493 = relay.TupleGetItem(func_2831_call(), 0)
call_5494 = relay.TupleGetItem(func_2832_call(), 0)
output = relay.Tuple([call_5489,call_5493,])
output2 = relay.Tuple([call_5490,call_5494,])
func_5503 = relay.Function([], output)
mod['func_5503'] = func_5503
mod = relay.transform.InferType()(mod)
output = func_5503()
func_5504 = relay.Function([], output)
mutated_mod['func_5504'] = func_5504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5338_call = mod.get_global_var('func_5338')
func_5340_call = mutated_mod.get_global_var('func_5340')
call_5620 = relay.TupleGetItem(func_5338_call(), 1)
call_5621 = relay.TupleGetItem(func_5340_call(), 1)
func_3313_call = mod.get_global_var('func_3313')
func_3316_call = mutated_mod.get_global_var('func_3316')
var_5631 = relay.var("var_5631", dtype = "float32", shape = (80,))#candidate|5631|(80,)|var|float32
call_5630 = relay.TupleGetItem(func_3313_call(relay.reshape(var_5631.astype('float32'), [1, 80])), 2)
call_5632 = relay.TupleGetItem(func_3316_call(relay.reshape(var_5631.astype('float32'), [1, 80])), 2)
output = relay.Tuple([call_5620,call_5630,var_5631,])
output2 = relay.Tuple([call_5621,call_5632,var_5631,])
func_5651 = relay.Function([var_5631,], output)
mod['func_5651'] = func_5651
mod = relay.transform.InferType()(mod)
mutated_mod['func_5651'] = func_5651
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5652 = relay.var("var_5652", dtype = "float32", shape = (80,))#candidate|5652|(80,)|var|float32
func_5651_call = mutated_mod.get_global_var('func_5651')
call_5653 = func_5651_call(var_5652)
output = call_5653
func_5654 = relay.Function([var_5652], output)
mutated_mod['func_5654'] = func_5654
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5681 = relay.var("var_5681", dtype = "uint16", shape = ())#candidate|5681|()|var|uint16
var_5682 = relay.var("var_5682", dtype = "uint16", shape = (14, 4, 5))#candidate|5682|(14, 4, 5)|var|uint16
bop_5683 = relay.right_shift(var_5681.astype('uint16'), var_5682.astype('uint16')) # shape=(14, 4, 5)
bop_5722 = relay.power(bop_5683.astype('float32'), relay.reshape(var_5682.astype('float32'), relay.shape_of(bop_5683))) # shape=(14, 4, 5)
func_2374_call = mod.get_global_var('func_2374')
func_2380_call = mutated_mod.get_global_var('func_2380')
const_5729 = relay.const([-6.440780,-2.033276,-3.325894,-3.471352,-5.739844,-9.582994,-5.214216,7.195434,8.062192,-8.190606,3.102783,3.319555,0.265309,-1.577904], dtype = "float32")#candidate|5729|(14,)|const|float32
var_5730 = relay.var("var_5730", dtype = "uint64", shape = (56,))#candidate|5730|(56,)|var|uint64
const_5731 = relay.const([-2,-9,-6,-6,-1,-5,-4,-3,-7,9,1,8,-10,8,-7,-3,-5,-4,7,-5,2,-9,9,1,4,-3,-4,8,4,-9,-10,10,9,8,5,-4,-5,5,6,-4,-8,5,8,5,1,2,10,-7,-7,5,-8,9,2,9,-10,6,10,9,5,9,-9,7,5,8,-9,-4,-2,2,6,9,6,3,9,5,7,-1,-7,8,2,-5,-1,-2,1,6,-7,3,-4,-1,-10,6,2,-6,6,2,9,1,-4,4,8,3,7,-1,4,-4,10,-4,7,-3,1,3,1,-2,8,2,-6,-1,3,-3,-4,1,-7,8,4,-9,7,7,-5,-4,-4,8,1,2,9,-1,4,-1,-9,-5,10,-6,-5,4,-1,-4,3,5,-9,-10,-4,-5,2,-1,5,-4,1,2,2,-7,-2,-7,3,1,-1,-2,1,-5,-3,4,2,5,-9,-9,-2,-5,7,1,4,-4,2,-9,-5,-6,1,-8,-9,4,9,8,-10,-6,-4,9,-9,-4,8,2,8,-4,7,1,7,3,-1,-7,-1,-9,2,-5,-2,-9,-2,4,10,-10,1,2,-7,2,-5,10,-6,3,9,-6,-4,-1,-10,8,-4,7,-8,-1,-4,-4,6,5,4,-7,-5,-4,-9,-7,10,9,2,9,-4,8,5,-7,7,-2,-9,4,3,-4,2,3,5,-6,-7,8,7,-9,9,7,9,6,8,3,7,6,-7,1,-3,8,4,-1,-3,7,-6,7,-4,5,-5,5,-4,-1,-2,-2,1,-4,9,10,-8,3,1,-1,-2,-7,3,-9,5,-9,-4,1,-4,-2,2,2,-7,6,-4,3,3,3,1,4,-1,2,-5,-1,-10,1,-5,4,7,-9,6,7,1,-5,1,6,-4,9,1,-10,5,5,-6,1,8,6,-2,-3,-4,-5,2,9,2,-7,8,-4,-9,-2,-7,-8,-10,8,9,5,4,8,-1,-1,-5,-6,6,-7,-10,-9,9,-1,-4,-3,4,6], dtype = "uint8")#candidate|5731|(378,)|const|uint8
const_5732 = relay.const([9.863344,-6.770139,9.106672,-3.084576,2.859142,9.794455,1.959770,-4.760354,-1.982937,-8.855284,-4.405513,-1.258586,0.537131,7.347738,6.649986,9.444208,-5.159194,9.095345,4.824842,-0.818224,1.095778,-3.323550,-0.083071,0.142772,-7.884391,7.440548,7.682032,1.634895,-1.046168,7.348395,-1.954374,-6.801432,-7.894489,0.286592,2.025185,5.983220,6.384621,1.253506,-7.428886,1.160667,-8.676126,-1.787484,-3.759825,-7.497133,-9.581508,8.755777,4.278741,-0.070986,4.860094,6.233806,5.151883,6.354831,1.016173,-4.191208,1.425699,-2.545741,4.594256,7.947426,-0.015415,-4.672373,-9.602463,-6.177337,6.715957,3.994770,-5.361403,-2.480178,1.109598,-3.653035,-8.633889,0.917188,-3.735029,-8.258632,-2.740889,-2.889908,0.231392,0.156882,-5.733557,9.001482,-4.083505,-1.931023,-8.521623,1.162121,1.480422,-7.594094,-7.111762,3.498842,1.790816,-1.558711,-4.211896,-2.605526,6.831689,2.500536,8.150281,-5.146035,7.264836,-0.555774,9.356656,-9.598921,-7.673016,-4.018765], dtype = "float64")#candidate|5732|(100,)|const|float64
call_5728 = relay.TupleGetItem(func_2374_call(relay.reshape(const_5729.astype('float32'), [14,]), relay.reshape(var_5730.astype('uint64'), [56,]), relay.reshape(const_5731.astype('uint8'), [378,]), relay.reshape(const_5732.astype('float64'), [100,]), ), 0)
call_5733 = relay.TupleGetItem(func_2380_call(relay.reshape(const_5729.astype('float32'), [14,]), relay.reshape(var_5730.astype('uint64'), [56,]), relay.reshape(const_5731.astype('uint8'), [378,]), relay.reshape(const_5732.astype('float64'), [100,]), ), 0)
func_2229_call = mod.get_global_var('func_2229')
func_2230_call = mutated_mod.get_global_var('func_2230')
call_5736 = relay.TupleGetItem(func_2229_call(), 0)
call_5737 = relay.TupleGetItem(func_2230_call(), 0)
uop_5739 = relay.log(var_5730.astype('float32')) # shape=(56,)
func_2661_call = mod.get_global_var('func_2661')
func_2664_call = mutated_mod.get_global_var('func_2664')
const_5744 = relay.const([-2.693895,6.427946,0.059985,-1.274005,8.472056,9.154753,-3.301562,5.180058,6.024413,-3.234752,1.785609,-4.760617,8.625030,-7.296531,4.577486,-0.564592,7.157975,8.219302,-0.593882,-0.200561,0.788418,3.684768,-9.407193,-3.895108,6.283514,-2.816137,-3.099901,5.795067,7.302871,-4.327362,6.977148,-1.100185,-3.163862,-5.008741,1.553625,0.357467,-8.630207,1.899402,6.592180,4.336167,-2.666783,6.791338,-8.488242,-8.204850,-3.836333,-3.203235,-3.003156,0.409705,-5.315063,4.803540,-4.827403,-6.196535,7.610221,9.226172,6.363829,1.388747,4.344333,-6.746619,1.072660,6.409410,0.300437,-4.090039,-2.742888,3.971321,0.924442,8.234142,5.718176,-7.942458,7.913642,3.782271,-4.083638,-9.472954,-2.852427,4.708991,6.504003,9.873408,5.940867,-5.489829,3.767621,-4.567865,-9.847171,-8.413429,-1.004717,-8.671351,5.801777,-6.813761,-5.779083,9.955164,-2.719970,3.145479,1.298116,-7.749984,-1.452976,-9.808728,-7.686362,-8.753041,-2.730723,-0.957877,4.074619,-8.356744,4.306719,5.818628,7.987859,-4.227299,7.805464,-8.831369,-9.816371,4.051291,6.892493,2.509082,2.127097,2.335429,-5.100343,-3.145196,-1.979079,-6.115996,2.440534,-8.392932,-4.833792,-8.507777,-5.224302,-9.860449,-1.012962,2.284106,-9.734962,1.168909,-2.445448,2.742241,4.994290,-9.243657,2.775623,0.212629,-1.560879,0.610138,-8.926267,8.697284,-6.703227,2.555568,6.278150,2.259864,8.378271,8.220518,8.991721,2.323669,-1.383669,-2.379951,-4.277456,5.291534,6.740771,-0.619943,-5.066683,-4.968396,4.270862,6.525550,-0.947747,-0.437013,-6.781727,6.954159,1.434232,-0.031528,6.486356,9.230010,-2.492624,-6.233124,3.837622,8.781362,-4.375553,7.953526,2.012105,8.323764,4.775148,-0.082409,3.406254,5.357091,-2.268092,5.777199,-8.021617,9.345788,5.338369,7.197754,-7.405468,-0.429596,-0.715945,1.144553,6.314814,-6.692753,-8.381926,-7.978757,-8.406956,-3.476755,2.258800,-2.113252,-6.050390,-1.664299,-3.493059,1.690654,-9.714705,1.519997,0.810703,-2.251948,6.000352,8.588001,8.766328,-9.389146,9.946007,-2.108917,-6.104387,-9.806039,8.219275,-4.006565,-8.860015,-8.758022,3.009910,-8.713265,-7.445127,9.760936,2.568401,-4.234876,-4.404309,-4.873534,9.549214,-5.963676,-9.472731,3.212730,9.494682,6.468107,8.899022,-6.359149,0.961573,5.533770,-1.453031,-4.975153,7.252631,-1.845810,5.340014,4.549228,-6.759477,-2.017863,-9.123207,-3.124311,2.313191,-9.704748,4.560389,5.044859,9.450874,1.419287,-4.333525,7.718372,-6.572555,3.055683,-1.801852,-8.482264,5.608316,5.126424,-0.704852,5.121708,6.811641,-9.769682,6.184699,-3.048684,-0.378525,-7.392518,0.790474,-2.359425,7.762663,1.064707,-4.472253,-9.691106,-3.906488,-5.812064,8.219902,-2.111621,8.579018,-7.766187,-8.266617,9.053708,-0.045385,1.152122,9.540741,7.900830,-2.332694,-5.002137,-1.502293,-5.145821,4.510564,-0.096037,-3.438351,2.757772,8.614246,-7.487577,-6.611272,9.344004,9.519296,-2.019361,-4.073339,-5.638591,-0.779418,-4.226899,1.106463,7.975676,3.709135,-3.643667,-0.198675,5.004368,4.018913,-1.505405,6.477505,-0.282285,-1.199211,4.816955,-4.717645,3.135248,-8.053831,3.550694,-5.477710,-3.589441,-5.564007,-6.887558,0.314740,5.528681,5.964525,-4.000678,3.225912,-6.997931,-5.708453,-7.813278,9.395378,4.452698,9.828540,9.901659,-5.381109,0.299619,-2.642391,8.473583,8.464550,-5.724229,-4.145928,5.835953,4.998085,-2.641494,6.153856,-0.314936,-1.841429,6.299879,8.054274,-0.712210,-0.236588,-3.751064,0.054705,-1.982959,-2.421719,0.172020,-2.427020,-7.448817,-1.026954,0.383357,-7.443659,-0.042876,1.772145,-7.164616,0.669931,-9.650127,4.040202,-0.931511,0.507579,7.530844,-9.567842,-0.885643,-2.687801,-6.722913,7.638517,-6.607700,-3.166966,2.062147,-3.269388,-4.356781,-5.113588,-7.516256,9.844761,-4.188081,2.781778,7.149043,-4.493824,-2.189765,-0.459850,-7.079464,-1.213327,5.073164,6.261958,4.312707,6.311819,7.942230,-7.062742,2.342795,4.303201,-8.467154,9.469742,-8.691456,-0.249832,-2.820577,6.569088,-2.086031,-1.538583,-9.254071,-6.947544,3.278559,1.004950,3.319859,-3.588923,-4.342214,-3.652341,4.419958,-8.085338,-9.372968,-0.283666,3.141106,7.630007,-7.849553,-7.563238,8.377569,-1.982438,-9.578462,-6.433548,0.710308,-8.032201,-2.992197,5.164559,-3.537115,7.643744,-7.610751,-1.399940,5.675698,5.964185,4.772963,9.798280,0.404344,9.509939,9.663708,6.272234,7.809571,-7.419893,6.248361,5.954268,1.711816,-4.221326,-6.781263,-5.297071,-2.499976,4.894716,8.126753,-1.035425,-9.623415,-0.189747,5.878979,2.448537,1.798903,-0.068833,0.757194,-8.697453,-5.335006,-0.663526,1.680026,5.359973,-7.232032,8.103516,1.214506,-2.325113,-2.383220,1.721375,2.051634,-5.189832,9.205079,3.353549,-4.107685,6.313980,-9.795270,4.181588,-7.532746,0.860560,-1.998337,-5.519928,-8.238975,8.109269,1.728029,7.411291,4.250161,2.301547,-0.008869,8.491908,3.039285,-3.493476,-3.604666,4.330347,-9.637144,-4.621708,-6.903134,-2.260744,5.150769,2.705381,-9.313458,4.540218,-2.080482,-4.174598,6.311496,9.414656,8.448294,-5.039993,4.309603,-9.520770,-2.961093,-7.832908,-8.721914,-1.904344,1.070476,-4.813223,-9.362839,3.594278,4.112018,4.057380,-8.387346,7.203386,-7.864759,1.038610,2.168901,2.471379,-3.792072,-1.484338,-4.777964,7.221839,-3.117533,-0.088858,5.551545,9.405499,4.220738,-8.052153,0.145481,2.684075,6.337491,-6.764467,6.459613,4.340276,7.536790,-2.716308,-7.413862,8.391877,4.496407,0.346278,-3.186581,9.409784,9.578722,4.368298,5.920249,7.811151,2.885322,-6.115410,5.338263,8.914117,8.716953,2.861906,3.957266,9.238902,-4.671764,5.888967,9.072632,-3.967734,-2.478524,-2.026397,6.231226,8.810621,3.223376,9.298928,7.886551,2.331187,-4.155224,-4.273441,-6.802391,-2.510514,-6.099052,6.980863,7.086844,-5.632220,8.825088,5.452197,-9.726851,9.176727,-9.099357,4.477448,1.582403,7.945696,5.432436,1.282298,5.308465,-2.460799,-1.863871,2.127663,1.435760,8.805726,-1.044786,7.762516,8.394467,-5.328068,6.640767,0.906305,2.137739,-4.075791,-6.525221,-5.021540,-0.754181,4.721882,-2.371125,-6.478919,5.469715,-0.035530,-0.649696,-9.399396,-4.493065,-6.114004,-0.078516,1.260194,-0.351614,-8.204580,3.796295,-3.013007,6.272652,-4.018988,-8.911576,-1.067523,5.416282,-6.337003,-9.237549,4.655753,9.494658,0.350506,-2.934024,9.021936,-2.356321,4.877604,-7.355543,8.732189,-9.444544,9.643468,-5.359417,-6.651357,-4.252030,-1.482518,4.074629,-4.816052,2.048358,4.913454,-6.637710,-6.362865,-3.263553,-1.023937,0.246446,7.787761,-2.644714,-8.781121,-5.605042,-4.639154,2.232739,5.815245,-7.400942,-7.840651,5.099420,4.211484,-7.096940,3.099719,-8.294189,-5.584020,2.031447,2.422422,-5.079121,1.062201,-5.996883,-9.344702,-2.900380,-8.890317,8.475211,-9.509372,-1.872183,-8.401592,9.853019,-3.141813,7.932194,0.278943,-9.916036,-7.133506,-8.826897,8.146163,1.912404,6.408839,6.282549,2.757396,-8.541001,-4.514653,4.135910,6.062031,-9.173283,-6.439071,-7.428542,-4.271526,-0.694053,-1.939838,-6.781741,9.029372,9.091684,8.124896,9.170317,7.289379,-5.100207,-7.712163,-3.508135,-0.060909,0.573743,-5.105700,-8.706017,-6.916125,-2.757061,-0.600231,-1.570986,-9.876867,-4.436247,2.816008,-4.428593,9.932889,-0.661834,5.878982,6.304725,8.898128,-0.424670,7.436567,-7.566761,-7.335028,-8.231835,-2.925572,-3.744126,-6.060835,-2.061770,-1.543510,-0.361196,-2.378215,-4.399536,2.634458,5.076065,-2.783095,-9.797513,0.184877,-2.025697,4.452284,-5.132526,7.651844,5.728109,2.994889,4.379087,-3.078868,6.011019,-7.116312,-5.764854,6.050418,-4.842415,-4.616585,6.243568,-1.624111,5.383709,-2.031143,5.813468,-8.208860,6.542042,-6.448174,-7.199733,-0.145341,6.990924,6.421939,-1.184981,-9.074398,-2.876655,-3.857731,-3.871741,2.500864,-3.511705,0.728875,-3.084299,-6.737802,6.830308,-3.447703,-2.155853,5.318499,-2.422260,7.169924,8.573207,5.934390,-7.188913,-5.855291,-4.213370,-1.145580,1.849136,-7.862040,-9.990101,-6.058708,-6.342781,6.489402,9.937331,-7.880640,3.612590,9.834157,1.275520,-2.669873,-0.764034,-4.039227,8.211079,3.336515,-8.790555,-7.618738,9.991291,-3.777736,4.542027,-4.697378,-7.046914,-8.210919,-7.473199,1.828368,0.045690,-8.933530,-5.470839,-5.561658,3.482141,-5.128520,-4.938926,-1.654400,7.189887,0.698432,-1.443703,-2.412956,-9.418374,-1.100920,-5.326163,2.392699,-6.792439,2.801828,-7.650685,-1.995559,5.357696,-7.738878,0.673819,9.048278,9.618273,0.740785,-1.380824,1.857246,6.060368,-8.279321,3.794217,9.122347,6.212916,-8.717451,-0.788185,5.801588,8.986513,6.845160,2.381992,-2.543278,4.497407,-9.676853,9.088340,8.596561,-9.718108,-3.309590,0.613816,9.954929,-1.994324,-0.274816,-5.108853,-5.980699,6.844036,-8.153735,1.853085,-1.242150,-3.511486,-8.138384,-5.876035,-6.292101,2.893882,-2.948240,-6.628861,0.295920,2.303865,-5.912040,-7.900403,8.960925,-4.532744,-8.667388,-9.027325,3.748681,7.662970,-0.465696,8.912455,-9.388424,1.465478,2.159121,-9.412346,-6.146070,-5.313828,6.520839,-8.843918,8.318764,-4.506592,-4.011144,-4.577183,-7.779654,3.562040,3.923224,6.136729,-2.183604,-9.839965,3.549458,-3.558271,-7.330727,-7.569847,3.313403,-2.916064,0.687756,-4.779515,-2.401496,9.981902,8.019728,6.362258,2.037172,-2.994046,-2.064310,7.903897,-6.784040,8.357183,5.094984,-7.632037,-0.855346,0.325356,-8.829124,3.012888,-2.905924,5.807002,-7.276492,-8.894100,3.112545,2.272357,9.896619,2.602496,-5.515807,-2.378080,-8.536945,7.935083,7.675505,5.788406,-5.416801,-5.308542,7.864098,-1.319188,6.986901,-8.381692,-4.138333,-4.006671,-6.907014,8.111239,-2.826370,-0.926800,-6.450202,-0.345926,-2.697443,8.696050,-2.196597,1.802917,9.727072,9.641191,-4.863708,-5.610014,3.884047,-6.292561,-6.665145,8.198743,6.779559,-2.104097,4.924675,-0.919988,-7.616303,-6.574841,0.046278,-5.463743,-2.062323,2.101419,1.958388,7.948711,-7.234760,2.584978,5.409747,-1.876908,-3.874516,-6.446337,6.227748,-6.292380,7.252402,-8.870046,-1.800284,9.301893,0.940990,-8.996275,-3.571902,8.973100,9.130742,-6.782751,4.263875,-5.859240,8.683807,4.101774,1.439156,-6.642502,4.920164,1.659210,8.279979,-7.832838,-5.963192,-4.780203,-5.194920,4.105095,-3.835787,-6.395714,-4.212965,9.742084,0.636290,-1.940275,-8.327993,1.233771,-8.464344,-5.385011,-9.062528,-9.604806,4.853048,1.936691,-1.242806,2.838823,-3.562447,3.336218,-4.621828,-7.882170,4.229130,-6.842667,0.556539,2.138129,0.894651,-7.539559,-0.914468,-5.090980,1.061693,0.995308,-6.851022,-3.283111,-6.452789,-7.194892,-7.253396,8.745515,0.068405,-9.155725,9.417133,-5.226579,2.714142,-1.119120,4.557264,8.851456,0.536675,8.618861,6.809331,-0.888265,6.791294,3.323292,-9.542073,4.885424,-0.072395,-2.586940,-3.920587,-3.869108,8.310370,7.935634,6.260005,3.842393,-5.009032,2.736000,-2.994298,0.079552,-0.853544,-5.759506,6.638931,-8.106403,7.264076,-8.817514,-8.864234,2.776504,9.027878,-1.509973,7.317527,7.485237,-9.478489,8.941179,1.316535,-1.660378,1.415239,-8.340266,1.425470,2.223732,4.594477,-9.011746,-6.687285,-9.545331,-8.099102,4.448032,-5.107688,8.977739,9.448409,-9.589135,-1.561029,-6.273955,5.711667,-6.555277,5.628077,3.179855,2.472951,-3.064038,0.955162,-1.836065,-5.325579,8.723313,-6.087284,1.922295,1.724504,-0.217266,5.910563,-5.258979,1.402469,9.465925,-7.247474,-0.612155,-9.904087,3.844781,4.580923,0.292314,9.301171,-4.465668,-1.169375,0.303126,3.003884,8.942027,-7.828328,8.658208,-2.378422,1.465304,6.332077,5.780411,-3.944616,3.763469,-2.647301,8.948027,2.429803,4.548353,-7.146492,-9.646624,8.359113,-1.981639,3.619389,8.554791,-6.789719,-3.498739,-5.278576,1.803805,-5.799128,-2.171983,9.701030,7.261769,-9.652354,-8.119770,6.244895,-2.459132,-2.419907,2.480482,5.364980,-3.457159,7.691196,1.860189,-9.012640,-3.792898,-4.526436,9.355188,0.379287,-0.789258,5.018430,-2.510186,5.136300,2.450190,5.958100,5.153176,-7.826023,-7.134738,-9.607140,2.982004,-6.530087,-0.145019,1.615814,-1.406163,-9.070837,-1.762614,-9.691820,-3.437110,4.006512,7.409894,-1.026007,1.684585,-3.637199,-7.253518,-6.647762,3.646871,-2.557766,3.332766,7.761893,-2.850715,-4.852220,-5.376023,0.631974,1.129276,-3.505634,7.103242,9.069524,8.386334,-1.420737,7.871432,-1.907181,2.661179,-4.255766,-5.301855,-5.362359,6.899794,8.019143,7.778582,-6.263719,1.992048,-5.579917,-9.435703,-0.455881,3.634109,8.824125,0.663334,-8.985589,-0.452522,3.371804,-1.212615,8.319874,-4.049036,1.814769,4.225154,-1.097488,9.756557,3.262612,5.390526,5.759726,-6.632819,5.481855,-0.077195,-7.403759,-3.557716,3.697331,-1.617965,-4.528979,6.553734,-1.392868,9.424314,-9.123012,9.334202,-5.075050,6.322765,-9.524407,8.699448,3.796600,2.652953,-3.620443,0.744674,-7.963543,6.430581,-2.519231,3.661710,2.151030,-5.136389,7.738812,-3.228141,-6.870313,0.510290,3.788720,-4.822074,9.201198,6.681075,7.348305,3.777531,-4.943417,-9.341177,-2.171058,2.708598,-7.581958,1.821852,-5.695173,-2.847967,9.964214,1.840392,-4.544626,1.907781,6.304343,0.989163,2.231990,-1.700996,5.471524,-6.850820,-8.319280,-3.549042,3.007494,-2.094421,3.948409,-0.742837,4.447977,1.275361,5.344807,9.218006,4.745484,0.197827,6.459515,-2.664015,-0.275145,-7.325751,6.593320,-3.339408,-1.135967,-8.317400,1.172826,-6.394964,-2.675574,-7.924151,-7.011441,-0.914353,-6.493536,-7.947292,5.363329,4.425191,-8.341266,5.302620,-2.138942,-9.524239,-7.586806,-4.277213,-4.439233,-7.635154,-8.733402,-5.124525,-3.655286,8.488167,0.996897,0.764284,-2.004173,-3.780082,-7.218515,-7.602508,4.009130,-7.909657,7.920425,0.747908,8.371758,-5.335961,-0.483227,5.600560,3.771412,-0.907589,-5.916152,-0.938376,-3.315061,2.201773,-8.983565,4.367870,5.948783,5.286210,-2.591463,-7.802538,2.905715,8.026189,6.787530,-0.557265,1.461928,9.762281,-9.474294,5.537385,9.639411,-3.902285,-2.768204,8.889856,9.427826,6.382710,-2.631165,8.618736,-4.365567,0.136270,5.765940,1.921858,-4.572299,5.661572,-2.161501,3.781555,6.294866,4.984221,6.980918,2.019581,6.892970,-7.657964,-8.391211,4.177193,6.930989,7.712897,1.297105,1.916345,4.378500,-7.073070,0.955722,0.094648,5.964483,3.446499,-0.621082,7.057451,4.057904,8.342425,-1.688389,-1.445985,0.780167,-7.152889,-7.252531,1.014507,-5.920086,6.959497,9.177052,6.436475,6.019701,-1.597575,7.827926,-4.184204,1.033308,5.450941,-4.336886,8.439647,0.091475,-1.745865,-5.932420,3.308323,-5.008166,-1.098358,-0.346604,-7.557246,-2.509580,2.578459,0.645163,-0.536485,2.528347,-6.297198,-9.580761,4.550057,4.775492,8.852926,1.425922,9.038847,-3.817504,-4.669325,7.005888,-2.804582,5.809568,2.589132,8.658891,3.697217,0.803354,9.152376,-3.754798,6.309297,-4.942539,1.654685,-3.886997,8.934063,-0.063556,1.393314,9.391001,-3.575849,8.815334,2.498262,5.716586,9.845601,-3.433302,-2.871805,4.745887,-3.508524,0.617235,-6.770405,-9.565119,-0.676019,7.597699,-9.782945,2.667491,0.258028,6.000900,-2.806591,8.338067,0.560217,-4.981772,-2.162230,-6.991563,1.216315,-3.577983,4.155708,-1.493172,-6.377894,2.654043,-1.997644,0.926354,6.496086,-8.001108,2.348815,8.223119,4.712811,7.539264,3.201183,-2.884952,4.484980,-8.556515,-6.419747,-2.797959,-4.245413,2.194854,-1.731255,-5.673033,4.374935,7.291590,4.592000,-1.862443,-9.926115,-0.427423,7.641282,4.044802,-9.409906,8.014594,-5.045582,0.089990,8.751341,9.265462,5.378741,5.198312,-1.573321,0.221059,4.963074,-4.464665,7.984991,5.990172,0.145959,9.972143,4.743145,-2.894715,-1.988615,-9.234092,9.294427,-0.470796,-5.490440,8.900267,-3.499329,-7.386898,-7.142771,-7.802671,1.176600,-6.713155,-5.266223,-7.945755,-8.372641,9.094340,-4.865777,-2.955662,6.103519,-9.998269,-7.687628,-7.477759,3.888225,-6.849679,9.070017,7.505424,9.274295,7.884651,-1.418883,6.114650,8.842729,7.129653,-3.808411,9.501836,-6.092547,6.315397,2.174672,-9.037866,-9.793011,7.034391,8.159312,1.260042,-2.445900,-7.047178,-0.722803,-8.060526,-0.467310,-2.521286,3.476431,-1.039343,8.573866,8.159413,7.777104,0.947485,-9.397082,5.606650,-4.871408,-5.634887,9.899272,9.469880,-7.842604,2.101497,0.677883,-4.834261,7.965422,0.623170,-5.051591,-5.319603,-4.406701,-5.028458,-2.429986,-5.129694,-4.435745,9.040686,1.898090,7.621864,-4.648285,-9.773566,-1.903993,3.106949,7.655124,7.510449,0.066321,2.211170,9.625108,-8.976175,2.430019,-7.162643,-2.654264,6.754343,-3.751081,9.222958,-2.879568,5.536593,-9.379275,-7.233182,3.141303,-5.226117,3.650042,-5.941263,8.853791,-0.168234,6.747774,-0.095199,8.835488,1.985318,-7.602177,-7.501266,-7.476445,-6.174467,-9.956641,-2.650004,-1.205000,-2.137961,-7.835512,-2.309881,-9.645989,-0.208551,-8.426558,5.994494,-7.661443,9.074594,1.382907,1.882010,9.896715,7.877272,0.917269,1.075193,-3.797496,5.194190,-7.217755,-8.476278,3.124540,-2.383294,3.350954,5.048124,-6.840081,-1.620633,-6.396762,3.427992,2.956778,-6.952148,-3.305698,-8.628945,2.378613,6.108110,-6.738001,-9.904668,-2.338632,5.407973,-6.156138,-9.591998,8.053230,1.654244,-4.358406,-6.409841,4.004656,-1.085520,-9.391357,-7.646022,9.100604,-5.620594,8.640903,1.991185,3.198327,8.117045,9.842653,2.147209,-6.486138,-7.200798,7.574185,1.876771,9.338203,3.991015,-7.545305,-2.009269,9.384522,2.861015,2.904162,9.734073,0.399613,8.399040,-3.194599,-9.972491,2.887395,1.803446,5.472276,7.643504,4.856275,-5.678781,-4.895767,6.076932,6.121276,-1.644468,2.153669,-9.331219,-0.477699,7.390547,-3.494546,2.306007,-1.403978,-8.534625,9.240422,6.255052,-0.489752,2.031140,-4.525154,1.070450,9.029905,-4.466847,1.058534,-6.831651,-7.792475,-0.291772,4.634117,-5.970723,-7.336777,0.614205,-0.997864,-0.796841,-5.324635,5.019724,-9.166028,3.962329,-6.407780,-8.482718,-0.869999,8.305921,-1.577792,0.799352,-0.859527,-9.248158,-9.355796,-2.169465,-1.912244,-4.392910,-8.683623,0.725535,-1.074844,3.059492,-3.193714,-6.667964,-6.129398,-3.650819,1.155449,-1.270576,4.803980,-1.850408,-5.532662,1.639404,-9.843958,9.831016,0.253737,9.899579,5.531295,5.064571,4.874534,-1.696019,8.349945,-9.187455,-4.565483,-5.818229,6.832888,-0.974845,-6.003603,-7.744640,3.573958,7.483857,-6.980706,-1.490787,9.700872,-7.174448,8.170453,-8.757026,3.523890,8.626996,5.407225,3.367209,-8.184557,-0.912636,0.707488,3.066603,4.224981,-9.439836,-5.030996,2.970732,-7.677691,-2.285799,2.508778,-5.497576,4.723927,-4.022826,-9.519021,-0.456275,2.786401,2.038200,0.870694,3.729538,0.310806,9.300907,-9.890936,-6.426606,-9.897396,-4.727579,7.106202,-2.414834,-5.857236,-8.725813,-4.162271,-8.769562,3.159656,0.340458,-6.560950,7.573677,-2.746455,0.548447,-3.048236,6.810344,-3.292180,-1.746177,-9.806027,3.057150,7.735447,4.338028,-9.417359,-8.529920,9.072231,-1.698352,-1.771364,-0.080254,-7.456331,-6.053584,6.641194,3.777215,7.932375,9.678523,-8.994371,4.758594,-6.442489,-1.467980,-1.258074,7.051279,-4.724862,8.221464,4.486003,0.982690,-7.702789,-8.276162,4.353707,2.154714,2.751896,-3.311689,8.571341,-6.541031,9.718900,-4.888556,3.136525,9.762546,-0.870687,-3.326871,-3.817540,0.371067,6.903813,-8.564944,-1.890886,-5.022033,3.013051,0.356149,-2.144819,-6.231167,-3.929186,7.339459,-0.280603,7.027558,4.244281,9.410236,3.612919,-3.406059,-7.991156,0.437475,4.802035,7.869051,2.555729,1.569685,-4.953387,0.936554,9.781574,-2.145211,9.769382,-6.463778,1.093256,4.598934,-7.270944,-5.734858,-8.717338,3.297154,7.177402,-0.116465,-4.153339,-3.402214,-2.009558,1.164995,-6.241079,7.213153,-5.503593,-6.529002,0.231917,-5.775076,-8.471303,3.608816,6.936272,-7.633538,2.984696,0.239145,-5.594508,-5.437100,3.247699,-6.167957,0.784247,0.843445,4.202852,1.521262,1.136580,5.367900,-1.095297,4.473019,5.038417,-5.385349,-0.422757,-5.209243,3.354016,0.573227,1.718734,-8.566333,-8.540764,-6.384352,-0.770239,-0.597244,3.857300,7.632171,-1.505918,4.954421,-0.035114,-4.760190,5.104807,8.322270,4.517165,8.133121,7.659500,6.986517,-8.829471,1.211196,-6.876210,-3.666858,1.740156,1.421779,-8.454773,-9.167069,4.914017,-7.011985,5.135669,9.295677,-2.635778,6.413861,8.861277,1.621805,-1.847645,-5.258700,8.500292,6.028095,-4.334644,-1.529343,9.544170,3.637079,-5.813676,-3.447080,3.705134,-1.886737,-1.604127,8.749265,2.651657,3.186186,-4.078969,-0.150980,4.576793,-5.185655,-8.373383,-4.714897,3.649434,-7.501193,0.569416,-5.091024,9.537869,5.678444,-2.463733,5.587536,8.264721,-4.007732,-7.948320,4.388154,-2.045059,6.031226,8.575163,-9.462924,3.933157,-4.240171,2.296930,4.271589,7.494722,4.812574,-2.624579,7.883970,5.236769,7.562535,-1.584825,1.848940,-8.313833,-9.299684,2.080200,2.545410,1.008850,3.130655,-2.587246,0.746588,3.633984,0.623691,0.126090,-7.729874,-9.967547,-5.247501,-2.445703,7.531585,-5.300516,-9.652038,2.417337,-2.462675,4.385418,7.102940,9.222030,-7.087087,5.659439,-5.970075,-7.791306,-6.768609,-6.023876,-8.535712,-5.531217,0.238772,8.087624,-3.878010,5.214757,2.195230,9.431436,-8.956148,-8.033621,9.315207,6.322837,-0.869080,-7.079241,-5.489502,-0.680775,-6.489780,8.991417,6.640108,6.721218,0.094851,9.206600,-2.600205,9.914443,2.225210,9.009285,-5.527580,-0.590385,-2.899070,1.701878,4.234336,0.068674,-2.800058,6.025820,8.184190,-6.049463,-5.522268,-3.115941,-9.622513,6.586280,8.079249,-5.954248,6.822827,-3.388165,-0.647097,1.606449,3.752945,7.342443,6.187707,-8.361747,7.124976,2.385921,-6.291835,-3.918472,7.874982,-1.105627,-2.876216,-2.411502,8.712315,-9.208212,-3.699610,1.696549,-0.519499,-7.606260,4.037172,2.825380,3.070951,-5.837849,-3.665479,-8.324100,9.148584,-2.121853,2.586052,2.769379,9.018422,-1.092107,9.400157,-6.082734,-7.692220,5.751961,3.527747,6.803922,5.591978,-0.396831,-6.070684,-9.359002,4.514829,-2.694041,8.490849,7.490141,3.902735,2.744514,2.481533,-7.172362,-4.475797,9.473384,-9.148795,-3.266138,9.286649,0.522494,6.946035,1.619028,-1.202562,9.663745,2.652082,9.665759,4.353906,-9.088704,-4.194652,-1.021308,-3.294832,-2.338582,-4.213451,5.835558,4.681880,-1.341815,-1.081794,0.692583,7.783810,-9.264435,5.019710,4.293692,-1.277171,8.726030,-6.960512,2.128122,6.559711,-3.512986,-3.572666,2.787392,-2.028318,-8.036596,8.306278,-7.946294,8.478811,-7.596877,-5.749766,3.574055,4.869040,5.183016,-4.127978,-1.090509,-3.709278,-4.079688,-4.361309,-5.057838,6.563041,0.631726,-8.368809,0.154237,7.886465,-6.428222,6.382301,-3.375379,-5.676440,-5.380035,3.274200,-7.133430,6.631081,-6.709564,0.094624,8.250766,-5.985666,5.161758,-1.851899,-1.918759,-3.587708,3.848202,-2.782202,-0.829542,0.561106,5.860169,-6.815958,-4.149977,-5.630407,0.116493,6.195216,-1.723371,-2.614328,-6.566206,-0.069823,-7.789589,1.246407,-8.858418,6.050914,-9.824381,-0.040456,4.363719,5.220227,-7.464876,3.845360,5.699053,-0.147794,-0.914029,-2.339596,7.685832,1.545721,5.841696,5.307304,-1.248626,2.333227,9.148925,-2.870349,-3.979276,-0.868907,-3.098707,-6.340481,-4.399164,5.752743,0.829366,7.644772,2.036409,-2.461250,1.656674,-9.661517,5.804664,-9.822741,8.494830,6.457321,4.103358,8.645711,2.184079,6.614240,-0.535912,-7.719714,-8.736163,0.585390,-9.420280,7.713769,5.550890,4.291374,3.655325,-2.337872,8.474137,-2.041918,9.462052,-9.543208,4.638077,0.284631,-1.384929,-7.724901,6.769914,-5.185632,9.453984,-5.076153,-1.868466,2.565791,6.362668,-3.105261,-4.640923,6.800254,-4.939893,-5.079340,-9.853177,-2.743923,-0.693295,7.035427,-7.530367,3.976176,4.552827,-2.773590,-8.798020,2.893480,6.123388,-0.562875,-5.700415,-4.106915,6.329945,6.779803,-3.536955,-0.562159,-3.791138,-7.394474,-9.201200,-2.778260,2.639086,2.333816,2.742929,-3.565087,-2.785820,-5.103415,-4.361223,-6.188946,2.497716,5.885757,6.413967,-4.084694,-4.409238,-8.652563,5.309780,-5.573127,4.604525,-1.174276,0.781982,-8.211846,5.451392,-1.329562,2.474944,5.344952,-2.243539,-1.751571,-9.173583,8.154034,8.692973,6.851886,6.722444,-2.161478,3.412879,7.769038,7.747584,6.241648,-1.674637,-2.137398,-1.917520,-5.962199,6.254213,-8.207767,-3.972884,-1.618388,8.386838,-3.850437,6.810213,4.260318,2.335293,5.676796,-6.162858,4.124204,6.269269,-2.268144,1.094960,-3.254840,1.989737,-0.580674,8.708425,-8.520245,8.205317,5.284901,8.290819,8.789985,2.964753,6.029016,2.940191,-5.554956,-9.823277,-3.579112,7.507284,-6.778242,8.271029,-8.880836,8.079784,8.671718,7.851253,-1.853444,-1.597570,3.500428,-6.465517,7.758344,8.739615,-6.931642,4.464605,4.996895,-1.927166,4.014625,6.742696,-4.276402,-2.277027,2.719367,-6.448983,-3.082852,9.861655,-2.647629,-7.525419,-6.335472,4.660627,-3.499725,7.543356,0.889602,2.096184,-0.549629,5.642707,-1.978357,-9.979887,4.722001,6.422203,8.506833,-0.936472,-2.968314,-7.177454,-1.795750,-4.178274,-5.680777,1.405475,1.986416,-5.859845,6.047362,-5.822533,-3.788954,5.495036,0.808851,7.421896,3.338237,-2.945005,7.205538,-1.493234,-8.687897,-9.653126,9.441709,-4.548658,-0.191627,-9.701841,-4.957462,7.253776,1.766160,1.565179,0.853683,-9.716397,-4.679060,3.890929,7.516497,3.411205,-1.118028,-8.818134,9.038170,-7.662073,1.544683,9.232564,8.593786,-0.253842,0.223601,0.480297,0.143194,-8.882896,-3.617136,5.211204,4.737469,2.051193,-3.428838,5.822530,-4.005812,6.785788,-1.748427,-1.718197,-7.217808,5.728488,-3.531114,-2.071830,-9.091691,5.290110,-7.088433,-8.435553,3.472233,8.724420,5.540236,-6.463159,-7.755321,0.061449,-3.603243,-8.982282,2.554825,0.634870,-3.233879,2.232246,-9.834049,3.070911,1.396005,-0.813321,0.044912,-6.438160,9.685273,8.042395,-6.627471,-5.947118,-5.679938,8.131875,-7.229324,7.910345,9.447245,4.135223,3.286527,-1.717270,-6.517050,5.937588,2.465123,-3.179215,-7.775018,-0.902604,3.665169,-4.287159,-4.414364,4.329094,-6.149756,0.521297,3.642517,4.361824,-3.354299,4.138950,-3.781671,-4.986129,-7.822311,-8.595335,-7.650776,1.486606,-1.830711,2.408862,-2.024895,9.986788,8.956665,-2.249517,-6.481618,0.597415,1.611702,6.048268,-1.118433,3.762928,9.710697,6.383163,3.789845,3.241658,-6.588325,-5.087586,3.485953,3.019625,-4.806987,9.265880,5.461435,5.412774,4.303306,9.844437,5.834868,-2.148247,-6.860770,-7.041455,-1.680794,9.632496,8.932705,8.300853,-7.184226,0.067810,-8.994863,4.885542,-4.261491,0.165855,0.713748,0.468019,4.958724,5.118821,5.381780,5.202256,6.942446,9.736952,-5.238694,8.757780,9.449208,-6.472992,7.240628,-7.577930,-2.048326,6.708219,-9.334587,-0.460582,-6.023297,9.528293,-7.451060,-6.558843,-9.027227,-5.111522,-9.945733,7.947431,-5.281912,-6.463603,4.181844,5.441923,-5.178602,8.149012,4.742248,-5.932405,-8.512667,-3.280249,7.321183,-8.934912,-5.138508,-2.952672,8.511414,-7.150162], dtype = "float64")#candidate|5744|(2688,)|const|float64
call_5743 = relay.TupleGetItem(func_2661_call(relay.reshape(const_5744.astype('float64'), [2688,])), 0)
call_5745 = relay.TupleGetItem(func_2664_call(relay.reshape(const_5744.astype('float64'), [2688,])), 0)
func_1666_call = mod.get_global_var('func_1666')
func_1668_call = mutated_mod.get_global_var('func_1668')
call_5746 = relay.TupleGetItem(func_1666_call(), 0)
call_5747 = relay.TupleGetItem(func_1668_call(), 0)
output = relay.Tuple([bop_5722,call_5728,const_5729,const_5731,const_5732,call_5736,uop_5739,call_5743,const_5744,call_5746,])
output2 = relay.Tuple([bop_5722,call_5733,const_5729,const_5731,const_5732,call_5737,uop_5739,call_5745,const_5744,call_5747,])
func_5759 = relay.Function([var_5681,var_5682,var_5730,], output)
mod['func_5759'] = func_5759
mod = relay.transform.InferType()(mod)
mutated_mod['func_5759'] = func_5759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5759_call = mutated_mod.get_global_var('func_5759')
var_5761 = relay.var("var_5761", dtype = "uint16", shape = ())#candidate|5761|()|var|uint16
var_5762 = relay.var("var_5762", dtype = "uint16", shape = (14, 4, 5))#candidate|5762|(14, 4, 5)|var|uint16
var_5763 = relay.var("var_5763", dtype = "uint64", shape = (56,))#candidate|5763|(56,)|var|uint64
call_5760 = func_5759_call(var_5761,var_5762,var_5763,)
output = call_5760
func_5764 = relay.Function([var_5761,var_5762,var_5763,], output)
mutated_mod['func_5764'] = func_5764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3479_call = mod.get_global_var('func_3479')
func_3481_call = mutated_mod.get_global_var('func_3481')
call_5782 = func_3479_call()
call_5783 = func_3479_call()
output = relay.Tuple([call_5782,])
output2 = relay.Tuple([call_5783,])
func_5797 = relay.Function([], output)
mod['func_5797'] = func_5797
mod = relay.transform.InferType()(mod)
mutated_mod['func_5797'] = func_5797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5797_call = mutated_mod.get_global_var('func_5797')
call_5798 = func_5797_call()
output = call_5798
func_5799 = relay.Function([], output)
mutated_mod['func_5799'] = func_5799
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5800 = relay.const(-9, dtype = "uint8")#candidate|5800|()|const|uint8
var_5801 = relay.var("var_5801", dtype = "uint8", shape = (4, 1))#candidate|5801|(4, 1)|var|uint8
bop_5802 = relay.bitwise_or(const_5800.astype('uint8'), var_5801.astype('uint8')) # shape=(4, 1)
output = relay.Tuple([bop_5802,])
output2 = relay.Tuple([bop_5802,])
func_5805 = relay.Function([var_5801,], output)
mod['func_5805'] = func_5805
mod = relay.transform.InferType()(mod)
mutated_mod['func_5805'] = func_5805
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5806 = relay.var("var_5806", dtype = "uint8", shape = (4, 1))#candidate|5806|(4, 1)|var|uint8
func_5805_call = mutated_mod.get_global_var('func_5805')
call_5807 = func_5805_call(var_5806)
output = call_5807
func_5808 = relay.Function([var_5806], output)
mutated_mod['func_5808'] = func_5808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_5825 = relay.TupleGetItem(func_2122_call(), 2)
call_5826 = relay.TupleGetItem(func_2124_call(), 2)
output = relay.Tuple([call_5825,])
output2 = relay.Tuple([call_5826,])
func_5829 = relay.Function([], output)
mod['func_5829'] = func_5829
mod = relay.transform.InferType()(mod)
mutated_mod['func_5829'] = func_5829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5829_call = mutated_mod.get_global_var('func_5829')
call_5830 = func_5829_call()
output = call_5830
func_5831 = relay.Function([], output)
mutated_mod['func_5831'] = func_5831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5080_call = mod.get_global_var('func_5080')
func_5082_call = mutated_mod.get_global_var('func_5082')
call_5847 = relay.TupleGetItem(func_5080_call(), 1)
call_5848 = relay.TupleGetItem(func_5082_call(), 1)
func_5503_call = mod.get_global_var('func_5503')
func_5504_call = mutated_mod.get_global_var('func_5504')
call_5850 = relay.TupleGetItem(func_5503_call(), 0)
call_5851 = relay.TupleGetItem(func_5504_call(), 0)
output = relay.Tuple([call_5847,call_5850,])
output2 = relay.Tuple([call_5848,call_5851,])
func_5859 = relay.Function([], output)
mod['func_5859'] = func_5859
mod = relay.transform.InferType()(mod)
mutated_mod['func_5859'] = func_5859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5859_call = mutated_mod.get_global_var('func_5859')
call_5860 = func_5859_call()
output = call_5860
func_5861 = relay.Function([], output)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_5885 = relay.TupleGetItem(func_2446_call(), 0)
call_5886 = relay.TupleGetItem(func_2448_call(), 0)
func_4565_call = mod.get_global_var('func_4565')
func_4566_call = mutated_mod.get_global_var('func_4566')
call_5888 = func_4565_call()
call_5889 = func_4565_call()
output = relay.Tuple([call_5885,call_5888,])
output2 = relay.Tuple([call_5886,call_5889,])
func_5896 = relay.Function([], output)
mod['func_5896'] = func_5896
mod = relay.transform.InferType()(mod)
output = func_5896()
func_5897 = relay.Function([], output)
mutated_mod['func_5897'] = func_5897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3572_call = mod.get_global_var('func_3572')
func_3573_call = mutated_mod.get_global_var('func_3573')
call_5969 = relay.TupleGetItem(func_3572_call(), 0)
call_5970 = relay.TupleGetItem(func_3573_call(), 0)
func_262_call = mod.get_global_var('func_262')
func_266_call = mutated_mod.get_global_var('func_266')
var_5982 = relay.var("var_5982", dtype = "uint16", shape = (1, 196))#candidate|5982|(1, 196)|var|uint16
call_5981 = func_262_call(relay.reshape(var_5982.astype('uint16'), [7, 7, 4]), relay.reshape(var_5982.astype('uint16'), [7, 7, 4]), )
call_5983 = func_262_call(relay.reshape(var_5982.astype('uint16'), [7, 7, 4]), relay.reshape(var_5982.astype('uint16'), [7, 7, 4]), )
func_2013_call = mod.get_global_var('func_2013')
func_2015_call = mutated_mod.get_global_var('func_2015')
call_5984 = func_2013_call()
call_5985 = func_2013_call()
func_3727_call = mod.get_global_var('func_3727')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_5988 = func_3727_call()
call_5989 = func_3727_call()
output = relay.Tuple([call_5969,call_5981,var_5982,call_5984,call_5988,])
output2 = relay.Tuple([call_5970,call_5983,var_5982,call_5985,call_5989,])
func_5994 = relay.Function([var_5982,], output)
mod['func_5994'] = func_5994
mod = relay.transform.InferType()(mod)
var_5995 = relay.var("var_5995", dtype = "uint16", shape = (1, 196))#candidate|5995|(1, 196)|var|uint16
output = func_5994(var_5995)
func_5996 = relay.Function([var_5995], output)
mutated_mod['func_5996'] = func_5996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3236_call = mod.get_global_var('func_3236')
func_3237_call = mutated_mod.get_global_var('func_3237')
call_6032 = relay.TupleGetItem(func_3236_call(), 0)
call_6033 = relay.TupleGetItem(func_3237_call(), 0)
output = call_6032
output2 = call_6033
func_6037 = relay.Function([], output)
mod['func_6037'] = func_6037
mod = relay.transform.InferType()(mod)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6037_call = mutated_mod.get_global_var('func_6037')
call_6038 = func_6037_call()
output = call_6038
func_6039 = relay.Function([], output)
mutated_mod['func_6039'] = func_6039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4502_call = mod.get_global_var('func_4502')
func_4504_call = mutated_mod.get_global_var('func_4504')
call_6049 = func_4502_call()
call_6050 = func_4502_call()
output = relay.Tuple([call_6049,])
output2 = relay.Tuple([call_6050,])
func_6054 = relay.Function([], output)
mod['func_6054'] = func_6054
mod = relay.transform.InferType()(mod)
mutated_mod['func_6054'] = func_6054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6054_call = mutated_mod.get_global_var('func_6054')
call_6055 = func_6054_call()
output = call_6055
func_6056 = relay.Function([], output)
mutated_mod['func_6056'] = func_6056
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5859_call = mod.get_global_var('func_5859')
func_5861_call = mutated_mod.get_global_var('func_5861')
call_6219 = relay.TupleGetItem(func_5859_call(), 0)
call_6220 = relay.TupleGetItem(func_5861_call(), 0)
output = call_6219
output2 = call_6220
func_6221 = relay.Function([], output)
mod['func_6221'] = func_6221
mod = relay.transform.InferType()(mod)
output = func_6221()
func_6222 = relay.Function([], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4957_call = mod.get_global_var('func_4957')
func_4959_call = mutated_mod.get_global_var('func_4959')
call_6241 = relay.TupleGetItem(func_4957_call(), 0)
call_6242 = relay.TupleGetItem(func_4959_call(), 0)
output = relay.Tuple([call_6241,])
output2 = relay.Tuple([call_6242,])
func_6252 = relay.Function([], output)
mod['func_6252'] = func_6252
mod = relay.transform.InferType()(mod)
mutated_mod['func_6252'] = func_6252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6252_call = mutated_mod.get_global_var('func_6252')
call_6253 = func_6252_call()
output = call_6253
func_6254 = relay.Function([], output)
mutated_mod['func_6254'] = func_6254
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6268 = relay.var("var_6268", dtype = "uint32", shape = ())#candidate|6268|()|var|uint32
const_6269 = relay.const([[[-1,-1,-6,-8,2,8,3,5,-9,10,4,7],[-6,9,-3,1,-5,1,-3,-6,10,-2,2,-10],[2,1,1,-2,-8,-8,9,-5,4,-8,2,3],[-6,6,10,10,-7,10,10,-5,-6,-9,4,1],[-9,-4,-1,-4,2,6,7,8,9,-2,-1,-9],[-1,3,-4,5,1,4,-8,2,10,6,6,-1],[-3,5,-9,-2,-3,-8,-7,-8,-2,-4,-3,-2],[4,10,1,6,4,7,-6,-6,2,-5,6,-9],[8,-1,-8,5,9,6,7,-4,-5,-4,8,9],[-3,8,10,8,-9,-10,-1,10,10,-2,8,-6],[4,4,-10,-1,9,-2,7,6,10,2,1,-1]],[[-10,10,8,-2,7,-6,1,2,7,7,-6,9],[-1,7,-4,4,5,1,9,-6,9,5,-1,10],[-1,-3,1,4,2,-5,4,-10,5,-10,5,3],[2,-4,3,1,10,-10,6,3,7,-6,-7,-8],[8,-7,8,8,5,10,-5,-1,-7,-6,-9,10],[-6,7,-3,-6,-6,5,-2,-1,7,7,6,-7],[-3,3,1,-7,10,-2,10,-7,10,8,6,-1],[5,-3,7,4,-4,-1,-2,3,2,-6,-1,7],[-4,-5,6,-1,3,-2,5,-10,4,-5,-10,8],[-2,-4,-9,8,8,4,-9,-7,-3,5,-6,9],[8,6,-2,2,1,9,-1,-3,-2,4,-6,-6]],[[-1,-8,-7,9,-1,-5,-9,7,7,8,-4,-8],[10,8,5,4,6,-5,9,8,8,10,-4,-5],[-2,-8,8,3,-8,-3,-6,8,-10,-6,-8,-6],[-10,4,-3,5,-4,4,-7,-9,9,-7,-10,8],[8,9,-8,2,3,-2,-5,-2,9,10,-2,-10],[-2,7,-2,3,6,-5,9,4,3,10,2,6],[9,-7,6,3,4,1,-2,-5,-8,-7,-10,-1],[-5,-3,-5,8,7,-5,3,-1,8,5,6,-2],[-2,1,8,-9,5,9,10,-3,5,10,-8,6],[-4,-7,1,-5,8,9,10,-8,9,-6,-7,8],[1,-9,-10,6,-6,-4,-4,-1,5,-6,-9,1]],[[-4,-7,-9,2,-2,10,5,-5,1,-9,-8,-5],[2,7,6,9,8,10,10,9,4,-3,-7,4],[-8,5,3,9,3,-9,6,10,4,3,-3,-4],[-4,-10,7,-1,4,1,5,-5,5,-7,9,-7],[5,-7,-4,9,-9,-7,10,-1,3,4,-3,-4],[2,-1,7,4,-10,2,3,2,-10,-8,8,-7],[-3,-6,-1,-5,2,-3,-6,10,-9,1,-6,4],[3,-6,-3,-1,7,3,8,8,5,-8,10,8],[2,9,-6,4,7,10,5,6,-9,-10,8,6],[1,4,-1,1,6,1,-5,9,7,1,1,5],[-8,-6,5,8,5,7,6,1,-2,-2,-9,8]],[[-2,-9,-8,-2,9,3,-1,10,-2,-4,-7,-10],[7,-5,-5,-2,5,10,4,-2,-2,-7,-3,-9],[-5,7,7,-2,-1,1,-1,-5,-4,2,8,3],[6,-5,8,-7,-8,-5,-2,-9,6,-9,5,-3],[-8,7,8,8,-9,-4,6,9,4,8,3,-8],[-1,5,-8,3,5,4,9,7,4,4,-3,-3],[-9,4,2,10,-9,-7,5,-5,-9,4,-2,7],[-4,-5,6,-5,-2,-6,3,6,-2,10,-3,8],[5,-4,-4,-2,-4,5,-6,-4,3,3,-9,-7],[1,8,4,10,9,8,-4,2,-9,5,-9,-6],[-10,-8,5,10,5,-2,6,-2,-3,-8,3,5]],[[7,9,-1,-10,-3,10,6,-6,9,-1,9,10],[4,-8,-8,-10,5,2,-6,8,1,-7,-7,-7],[10,-1,-3,-10,-9,-5,3,3,-5,-5,9,10],[1,-8,-10,-7,5,9,9,5,10,-6,-3,5],[5,-1,-3,-4,-6,-3,9,9,7,2,-9,-5],[-6,6,-9,-9,8,7,-1,-6,-7,-5,10,-10],[4,-5,10,-6,1,8,-10,4,-9,9,-6,-6],[3,-7,7,-10,-1,6,4,-10,1,-5,-6,-8],[10,2,-2,6,10,-8,3,8,2,-7,-5,1],[4,-6,5,-5,1,10,4,1,-1,10,9,-10],[-1,9,-6,1,-6,-10,1,5,-3,-9,3,2]]], dtype = "uint32")#candidate|6269|(6, 11, 12)|const|uint32
bop_6270 = relay.logical_xor(var_6268.astype('uint32'), const_6269.astype('uint32')) # shape=(6, 11, 12)
uop_6273 = relay.atan(const_6269.astype('float32')) # shape=(6, 11, 12)
func_5759_call = mod.get_global_var('func_5759')
func_5764_call = mutated_mod.get_global_var('func_5764')
var_6284 = relay.var("var_6284", dtype = "uint16", shape = (280,))#candidate|6284|(280,)|var|uint16
var_6285 = relay.var("var_6285", dtype = "uint64", shape = (56,))#candidate|6285|(56,)|var|uint64
call_6283 = relay.TupleGetItem(func_5759_call(relay.reshape(var_6268.astype('uint16'), []), relay.reshape(var_6284.astype('uint16'), [14, 4, 5]), relay.reshape(var_6285.astype('uint64'), [56,]), ), 5)
call_6286 = relay.TupleGetItem(func_5764_call(relay.reshape(var_6268.astype('uint16'), []), relay.reshape(var_6284.astype('uint16'), [14, 4, 5]), relay.reshape(var_6285.astype('uint64'), [56,]), ), 5)
bop_6291 = relay.bitwise_and(var_6268.astype('uint64'), const_6269.astype('uint64')) # shape=(6, 11, 12)
output = relay.Tuple([bop_6270,uop_6273,call_6283,var_6284,var_6285,bop_6291,])
output2 = relay.Tuple([bop_6270,uop_6273,call_6286,var_6284,var_6285,bop_6291,])
func_6298 = relay.Function([var_6268,var_6284,var_6285,], output)
mod['func_6298'] = func_6298
mod = relay.transform.InferType()(mod)
var_6299 = relay.var("var_6299", dtype = "uint32", shape = ())#candidate|6299|()|var|uint32
var_6300 = relay.var("var_6300", dtype = "uint16", shape = (280,))#candidate|6300|(280,)|var|uint16
var_6301 = relay.var("var_6301", dtype = "uint64", shape = (56,))#candidate|6301|(56,)|var|uint64
output = func_6298(var_6299,var_6300,var_6301,)
func_6302 = relay.Function([var_6299,var_6300,var_6301,], output)
mutated_mod['func_6302'] = func_6302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4339_call = mod.get_global_var('func_4339')
func_4340_call = mutated_mod.get_global_var('func_4340')
call_6317 = relay.TupleGetItem(func_4339_call(), 2)
call_6318 = relay.TupleGetItem(func_4340_call(), 2)
func_5080_call = mod.get_global_var('func_5080')
func_5082_call = mutated_mod.get_global_var('func_5082')
call_6324 = relay.TupleGetItem(func_5080_call(), 1)
call_6325 = relay.TupleGetItem(func_5082_call(), 1)
output = relay.Tuple([call_6317,call_6324,])
output2 = relay.Tuple([call_6318,call_6325,])
func_6332 = relay.Function([], output)
mod['func_6332'] = func_6332
mod = relay.transform.InferType()(mod)
output = func_6332()
func_6333 = relay.Function([], output)
mutated_mod['func_6333'] = func_6333
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6351 = relay.var("var_6351", dtype = "float32", shape = (1, 8, 1))#candidate|6351|(1, 8, 1)|var|float32
var_6352 = relay.var("var_6352", dtype = "float32", shape = (14, 8, 5))#candidate|6352|(14, 8, 5)|var|float32
bop_6353 = relay.power(var_6351.astype('float32'), var_6352.astype('float32')) # shape=(14, 8, 5)
var_6357 = relay.var("var_6357", dtype = "float32", shape = (15, 8, 1))#candidate|6357|(15, 8, 1)|var|float32
bop_6358 = relay.maximum(var_6351.astype('float32'), var_6357.astype('float32')) # shape=(15, 8, 1)
output = relay.Tuple([bop_6353,bop_6358,])
output2 = relay.Tuple([bop_6353,bop_6358,])
func_6361 = relay.Function([var_6351,var_6352,var_6357,], output)
mod['func_6361'] = func_6361
mod = relay.transform.InferType()(mod)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6361_call = mutated_mod.get_global_var('func_6361')
var_6363 = relay.var("var_6363", dtype = "float32", shape = (1, 8, 1))#candidate|6363|(1, 8, 1)|var|float32
var_6364 = relay.var("var_6364", dtype = "float32", shape = (14, 8, 5))#candidate|6364|(14, 8, 5)|var|float32
var_6365 = relay.var("var_6365", dtype = "float32", shape = (15, 8, 1))#candidate|6365|(15, 8, 1)|var|float32
call_6362 = func_6361_call(var_6363,var_6364,var_6365,)
output = call_6362
func_6366 = relay.Function([var_6363,var_6364,var_6365,], output)
mutated_mod['func_6366'] = func_6366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4407_call = mod.get_global_var('func_4407')
func_4408_call = mutated_mod.get_global_var('func_4408')
call_6393 = relay.TupleGetItem(func_4407_call(), 1)
call_6394 = relay.TupleGetItem(func_4408_call(), 1)
var_6395 = relay.var("var_6395", dtype = "float32", shape = (2688,))#candidate|6395|(2688,)|var|float32
bop_6396 = relay.greater(call_6393.astype('bool'), relay.reshape(var_6395.astype('bool'), relay.shape_of(call_6393))) # shape=(2688,)
bop_6399 = relay.greater(call_6394.astype('bool'), relay.reshape(var_6395.astype('bool'), relay.shape_of(call_6394))) # shape=(2688,)
output = bop_6396
output2 = bop_6399
func_6401 = relay.Function([var_6395,], output)
mod['func_6401'] = func_6401
mod = relay.transform.InferType()(mod)
var_6402 = relay.var("var_6402", dtype = "float32", shape = (2688,))#candidate|6402|(2688,)|var|float32
output = func_6401(var_6402)
func_6403 = relay.Function([var_6402], output)
mutated_mod['func_6403'] = func_6403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3614_call = mod.get_global_var('func_3614')
func_3615_call = mutated_mod.get_global_var('func_3615')
call_6512 = relay.TupleGetItem(func_3614_call(), 0)
call_6513 = relay.TupleGetItem(func_3615_call(), 0)
func_4086_call = mod.get_global_var('func_4086')
func_4089_call = mutated_mod.get_global_var('func_4089')
var_6526 = relay.var("var_6526", dtype = "int8", shape = (2688,))#candidate|6526|(2688,)|var|int8
call_6525 = relay.TupleGetItem(func_4086_call(relay.reshape(var_6526.astype('int8'), [12, 16, 14])), 0)
call_6527 = relay.TupleGetItem(func_4089_call(relay.reshape(var_6526.astype('int8'), [12, 16, 14])), 0)
output = relay.Tuple([call_6512,call_6525,var_6526,])
output2 = relay.Tuple([call_6513,call_6527,var_6526,])
func_6530 = relay.Function([var_6526,], output)
mod['func_6530'] = func_6530
mod = relay.transform.InferType()(mod)
var_6531 = relay.var("var_6531", dtype = "int8", shape = (2688,))#candidate|6531|(2688,)|var|int8
output = func_6530(var_6531)
func_6532 = relay.Function([var_6531], output)
mutated_mod['func_6532'] = func_6532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4957_call = mod.get_global_var('func_4957')
func_4959_call = mutated_mod.get_global_var('func_4959')
call_6568 = relay.TupleGetItem(func_4957_call(), 0)
call_6569 = relay.TupleGetItem(func_4959_call(), 0)
func_3236_call = mod.get_global_var('func_3236')
func_3237_call = mutated_mod.get_global_var('func_3237')
call_6581 = relay.TupleGetItem(func_3236_call(), 0)
call_6582 = relay.TupleGetItem(func_3237_call(), 0)
output = relay.Tuple([call_6568,call_6581,])
output2 = relay.Tuple([call_6569,call_6582,])
func_6596 = relay.Function([], output)
mod['func_6596'] = func_6596
mod = relay.transform.InferType()(mod)
mutated_mod['func_6596'] = func_6596
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6596_call = mutated_mod.get_global_var('func_6596')
call_6597 = func_6596_call()
output = call_6597
func_6598 = relay.Function([], output)
mutated_mod['func_6598'] = func_6598
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2122_call = mod.get_global_var('func_2122')
func_2124_call = mutated_mod.get_global_var('func_2124')
call_6659 = relay.TupleGetItem(func_2122_call(), 1)
call_6660 = relay.TupleGetItem(func_2124_call(), 1)
func_897_call = mod.get_global_var('func_897')
func_901_call = mutated_mod.get_global_var('func_901')
const_6667 = relay.const([[-9,5,3,-5,6,-7,1,10,6,6,-7,-8,-3,-1,-2,3,9,7,5,-9,9,3,-8,7,-3,7,-3,10],[-10,6,-5,-3,9,6,-3,9,3,-9,7,6,-2,3,-7,-9,3,9,6,-2,-4,-1,5,9,3,8,8,3]], dtype = "uint64")#candidate|6667|(2, 28)|const|uint64
const_6668 = relay.const([-7,-2,-2,4,5,2,2,3,8,-9,-7,-4,-5,2,8,-8,6,-9,8,-8,1,-4,-2,2,2,4,10,-8,9,-10,7,1,7,-2,5,8,9,-8,-1,-8,-4,4,2,-10,2,-5,8,-6,8,-10,7,-9,-1,5,9,-7,-6,6,3,-9,6,7,2,8,1,-4,-9,-3,2,-4,-1,-4,4,-5,8,3,7,-7,-3,-10,-7,1,9,-6,-1,-2,3,-1,9,-5,9,-10,-10,-7,6,-9,6,-6,-5,-4,5,9,3,7,6,-9,-2,3,-10,6,2,8,5,-10,8,-7,1,3,7,-10,-3,-2,-9,-10,-7,-4,2,-6,-8,9,2,9,5,-1,-3,7,-9,-5,-4,-9,1,-2,7,-2,-6,-1,9,4,-3,8,8,-5,4,5,-3,3,-10,-7,-2,-2,-1,7,-4,-4,7,-4,-7,2,-9,3,3,-5,8,-10,2,9,4,1,-8,-4,9,10,8,-9,-8,8,6,-2,5,9,3,-9,5,-4,9,7,-7,3,-6,-2,-7,-6,2,-9,2,-4,-7,2,7,4,4,-3,8,-6,-10,-1,-7,-10,-8,7,9,5,-6,-8,2,8,-3,9,-9,-10,-3,6,9,-10,6,-7,1,-3,-10,2,4,10,-3,1,-5,-10,3,10,-1,10,-10,-4,-10,9,-9,2,5,1,4,-9,-2,-7,3,8,8,3,5,-8,-6,3,-2,-9,10,4,-1,-2,1,9,-7,-10,-4,-2,10,-2,-10,2,-1,-8,10,-6,4,5,9,1,-10,2,2,3,-7,8,1,7,2,4,7,2,-7,-7,10,2,-9,-6,-2,4,-3,5,4,-5,-7,-8,-8,-6,-7,1,2,-1,-2,1,5,1,10,1,8,-2,-6,9,-1,9,9,9,-7,-4,5,-1,1,-10,8,6,-9,10,9,9,6,9,-10,-1,-9,6,-8,-6,-6,3,10,-9,8,-6,9,-8,-5,-4,-7,4,8,2,6,9,6,6], dtype = "uint8")#candidate|6668|(378,)|const|uint8
call_6666 = relay.TupleGetItem(func_897_call(relay.reshape(const_6667.astype('uint64'), [2, 4, 7]), relay.reshape(const_6667.astype('uint64'), [2, 4, 7]), relay.reshape(const_6668.astype('uint8'), [378,]), ), 3)
call_6669 = relay.TupleGetItem(func_901_call(relay.reshape(const_6667.astype('uint64'), [2, 4, 7]), relay.reshape(const_6667.astype('uint64'), [2, 4, 7]), relay.reshape(const_6668.astype('uint8'), [378,]), ), 3)
var_6672 = relay.var("var_6672", dtype = "uint64", shape = (2, 28))#candidate|6672|(2, 28)|var|uint64
bop_6673 = relay.multiply(const_6667.astype('uint32'), relay.reshape(var_6672.astype('uint32'), relay.shape_of(const_6667))) # shape=(2, 28)
func_4015_call = mod.get_global_var('func_4015')
func_4016_call = mutated_mod.get_global_var('func_4016')
call_6683 = relay.TupleGetItem(func_4015_call(), 0)
call_6684 = relay.TupleGetItem(func_4016_call(), 0)
func_2967_call = mod.get_global_var('func_2967')
func_2970_call = mutated_mod.get_global_var('func_2970')
const_6691 = relay.const([2.304499,9.085107,4.871595,-2.458229,3.352100,5.898943,0.658815,-1.748633,-4.416422,-4.672034,-4.083237,-8.049051,-0.093165,4.135345,1.881105,4.229538,-1.457521,-3.664229,-6.542043,3.987999,5.607324,9.486313,2.846033,-4.653502,1.391518,5.154345,9.769391,3.187443,-5.965900,6.216662,9.195358,-3.743104,5.545957,1.839585,-2.532204,6.059819,-4.271759,-1.240640,-9.768590,3.143989,4.856324,-1.463099,-5.603802,8.607032,-1.095356,-9.711562,4.456060,-1.028019,2.052827,-1.763450,-0.534004,4.010536,-7.411792,-0.771077,-5.594029,4.160451,6.823455,1.681401,5.957785,-5.778100,1.363141,4.399915,5.586471,-3.814747,-3.581262,-3.826553,-0.525612,4.770469,-2.137251,-4.474631,4.420211,-3.798842,5.708835,-0.311514,-2.238137,-8.348244,7.244215,-8.005708,2.702493,9.279561,-4.865855,-4.964839,9.076953,5.880855,-7.279322,-0.814952,5.617869,-9.402736,-0.560439,-2.687767,8.062365,4.212968,-0.809347,1.350398,-9.238309,2.253329,2.964653,4.833854,9.875896,-9.535361,-6.360638,0.548146,2.221176,-3.429072,-7.497334,3.275422,-2.876409,-9.372990,-9.864166,-8.707307,-7.061376,7.508335,-0.481168,-9.671701,-0.969059,1.835387,-2.467862,-9.723035,-3.936032,8.778054,9.912843,-4.759779,8.809992,3.455726,-2.017614,-7.225554,5.755359,-0.473213,6.638961,-3.131198,8.470155,-1.146856,-8.119714,-0.955122,-5.322887,-3.968218,-9.838560,3.267378,9.737366,7.306507,-3.290485,1.368973,-7.694656,6.544638,-9.395918,4.629191,8.963297,9.327780,-1.453871,-7.394241,-6.613606,2.278816,1.794066,-1.000281,9.038889,8.439523,-6.433181,9.246136,-4.157105,-7.939877,-5.574803,2.999999,0.253725,-7.006263,-3.884590,-9.089649,0.384235,5.601582,-3.138133,5.547462,5.265103,-9.466177,1.690455,-8.972966,-6.739758,4.946384,-5.257592,4.044702,7.596429,-5.037064,-3.745321,-7.231899,-0.857165,0.645047,-5.555773,-0.275642,0.911547,1.753771,-3.472141,-6.785259,-5.688717,-7.847046,-1.480787,-5.399469,4.670563,6.681991,-5.923909,8.063173,7.539984,8.132156,1.510754,-8.405443,-0.511417,-9.276024,4.662689,-5.374917,-0.278432,8.648610,-7.200695,-1.105577,-3.477064,8.526980,-5.956814,8.698301,8.462748,6.050733,-2.623293,7.129912,1.429616,7.369870,3.540493,-6.431126,-6.008213,-2.161162,5.103827,-2.996925,2.322805,-6.619131,-7.284584,6.977825,1.460536,5.919013,-5.773080,-4.613894,-4.158828,5.567507,5.193819,6.086915,0.679685,-1.274268,-5.267861,-2.047128,7.613165,9.071893,-8.912600,0.894878,0.707630,3.873220,-5.611709,7.835790,2.293123,-1.986642,-3.284813,1.777986,7.267179,7.220624,-8.329761,8.297295,-7.233392,-2.222812,-8.713634,-6.895725,-8.453319,2.447444,-8.504246,9.520732,8.268478,-8.121798,5.101883,5.713853,-1.001966,-9.572630,-3.781028,-9.888615,9.141664,0.956562,-9.303505,7.602882,8.244477,5.793308,-3.966046,-0.001904,-2.299459,3.487627,-0.453608,7.922126,3.723329,6.970857,2.488522,6.086647,-4.663882,-6.360308,-0.268521,6.391482,3.656499,6.833608,1.297789,4.437700,7.096735,5.682970,-4.036190,-9.184124,2.454649,2.469102,0.975826,7.755250,-2.502279,-4.004906,4.551709,-0.162356,1.879024,-4.379232,8.486527,-1.948692,5.596673,-5.836724,-6.080621,6.612780,7.348808,6.843759,8.278912,-7.515343,-5.018791,4.436205,0.782253,-3.547829,5.841659,5.340711,2.694272,5.062961,-5.440430,-0.088791,-7.685475,-7.864725,-9.920809,-7.359684,-4.612534,8.755409,-4.225150,-3.722840,5.457174,-0.502412,-1.012144,5.803298,2.153802,-2.553597,4.506802,3.083237,-4.582492,0.153040,2.568925,5.315500,-3.080136,-7.379439,4.729647,-1.889396,-1.926255,6.253732,6.293236,-6.814923,-3.269317,-2.006096,9.608285,6.708117,4.756280,-7.788436,7.908967,-4.291307,5.056315,-3.100186,0.971705,2.628056,7.839851,-9.346999,1.818939,0.549173,1.616666,3.700159,7.731915,1.375090,6.873458,7.152005,7.597484,3.114367,1.248566,6.776755,-0.830025,-0.708317,4.107720,-3.883108,3.047249,-9.951233,8.519734,9.933533,0.019063,8.856041,-5.258127,5.072143,-2.801133,-3.369695,-6.629581,7.920252,-0.328523,-1.299886,-8.645914,4.684256,-0.970914,9.178603,8.625842,9.999760,8.038466,-2.662689,7.808968,4.041059,-2.237768,4.238346,0.174886,6.432410,-9.601388,7.237503,8.626689,-0.793456,0.342733,1.579549,-2.385512,9.020516,-7.572145,-7.347851,1.162021,6.296121,2.447491,-6.267265,6.807409,5.455690,3.649008,6.868646,1.732878,-6.759285,6.453183,0.911008,-7.130805,5.699705,-2.425707,6.035299,8.143713,2.590060,0.751882,6.833390,-8.100785,5.915403,8.753295,-1.514923,-8.384242,0.324541,-5.284797,-5.668194,3.417460,3.316270,2.109348,0.475822,-9.511876,2.149458,-0.285507,-8.591463,5.186252,-0.937805,-3.571394,6.481237,-6.369327,-1.135357,-8.190828,4.407679,-2.591775,9.731859,8.149326,-7.992091,-0.466480,-0.107801,-8.870944,1.977171,-1.543523,8.870901,-3.168786,9.720705,4.526638,1.100433,-3.166175,-8.915787,-2.260018,-0.504063,-9.446711,4.304742,5.848284,-7.399973,-1.075580,0.173887,7.184000,-8.265933,-1.103320,-6.372161,7.727560,4.211346,4.150152,9.530724,0.621004,4.310481,-9.618965,-5.888328,-2.208877,-2.209707,-0.891988,0.255178,-8.659941,2.600225,-8.629457,-5.756117,-0.620102,5.002901,7.082902,0.064054,2.132626,0.318364,2.572276,8.073201,-8.514499,-6.696695,6.156354,-6.519208,9.038478,-6.816620,-7.388320,-9.667573,-7.602830,-8.306540,-1.716350,3.105333,-7.738692,8.701932,-6.530379,-8.720290,-4.625756,-2.228261,-7.791682,6.734590,-0.667259,3.014409,5.646400,7.489137,-9.007238,5.789706,2.734685,-8.399626,4.777909,9.151048,-3.795049,-1.896706,1.986125,-8.177516,-1.528296,8.233540,-2.059553,6.664648,-2.326267,8.672399,-5.474001,2.661982,2.361044,2.233142,-2.035123,0.300261,-4.616868,1.011996,-1.049476,-0.150532,-1.522440,1.194189,-2.824333,-9.758841,-8.821629,4.484096,-4.522908,-1.875383,-7.916454,6.302477,8.778900,1.532598,-5.656737,0.095121,1.022100,7.080230,8.492437,-6.036279,7.000880,6.599907,-8.132950,-6.765467,7.813226,4.172736,8.185464,-9.798412,2.866094,-6.097465,6.901329,-8.729887,0.484971,-2.883063,-4.074980,7.923072,4.540275,4.013951,3.579992,-7.215909,2.105244,8.476456,-2.093489,6.644643,7.511453,-6.681988,6.802648,4.740757,-2.098837,3.382200,-6.244254,3.456857,2.081063,-9.999916,-8.450938,-2.489399,-7.508851,-7.864732,0.635690,-4.813191,-9.800494,8.257331,6.252815,-9.495825,-0.894836,-0.447434,-0.549082,-3.064425,6.061408,6.959054,-2.142376,9.099902,5.056155,0.166934,3.234068,5.895849,-9.797864,3.198195,-2.573649,-7.187243,2.834340,2.918846,-1.240189,-8.573924,-1.165310,8.703015,5.024556,5.648711,8.302073,4.080387,-3.859291,-0.509121,-8.737937,-6.668555,3.139958,8.978208,-4.100666,5.016652,2.261931,-9.325254,5.464110,-2.714010,-3.865082,0.102573,-9.544294,-7.437567,6.571018,-1.901379,-6.335675,-1.631836,7.435631,-2.957779,5.124088,-3.918169,1.798761,-4.250044,-8.258390,8.837873,0.433297,-2.518400,-7.890055,-1.257008,8.720473,7.083653,-4.970586,-8.250781,3.999373,6.652292,-1.539576,8.048255,-6.540552,-2.051926,-2.638217,5.881654,-6.999636,-2.486855,-7.921991,-8.742695,6.890724,1.540263,-1.870755,0.122422,-5.424478,-5.673052,-4.101941,0.475111,8.330818,5.418414,5.912184,8.132063,8.729855,-2.503435,7.582821,5.719876,-1.912894,-6.120172,-0.628069,3.331370,-9.105598,0.324366,5.145758,3.859431,-5.126189,4.709081,6.914492,9.149673,-6.776833,-6.137385,6.990295,-4.300976,-1.911735,-4.488571,-2.004125,9.104755,1.482698,7.531630,0.688678,0.870500,4.936101,-6.468793,-7.738291,9.111352,3.356929,-7.319157,-0.687780,1.592899,4.508782,0.825302,9.546370,-2.250633,-9.649580,3.115734,-9.387490,5.815908,8.153869,-8.596639,-9.966236,-5.819506,1.246016,-5.331016,4.619915,-5.181476,9.950061,-3.592362,-3.212667,4.142795,-5.135168,8.453810,6.649856,4.452405,-0.080825,-2.644762,2.652959,-3.856324,6.037497,-7.483242,-3.272719,7.315897,7.805658,-8.486284,-7.363332,-8.304416,3.919812,8.948722,-2.557896,3.457744,-2.088617,5.141188,6.955594,-4.975834,-2.228236,1.239982,9.947440,-2.187113,5.878917,1.304621,-0.131617,-5.451577,6.482732,4.696629,-9.363860,-0.555308,-1.881841,7.515069,2.580674,3.945225,-4.833760,5.970911,5.012782,-1.599348,-7.173600,0.354344,0.270766,-8.197243,1.357627,7.169587,2.428627,4.253266,8.773574,2.247528,-5.883281,7.299649,2.592851,9.980240,-3.077653,8.561576,1.844310,-0.764449,1.555510,1.846582,-7.508972,-9.065298,-6.485429,4.296010,-5.673891,-5.499530,2.920171,-5.838594,-3.033348,-2.286155,4.615370,-3.293656,-8.418090,-0.984291,1.047699,-8.970981,-0.707102,3.024568,-9.633287,-7.461312,2.188719,-9.336670,-7.217711,-7.637461,-7.264173,-4.361799,-3.690352,-3.142366,5.396471,-0.170676,-0.643324,-8.363448,-2.960854,8.825138,-6.130133,9.463428,-3.201932,2.893988,-1.535031,-8.232105,-2.828916,6.983764,8.548098,7.206457,-2.821962,0.368897,-7.262547,8.088261,-6.314703,-5.926828,-8.741162,-8.427984,5.769573,-9.828474,7.330638,-1.942651,2.644827,7.804095,8.598439,9.671620,-0.181753,-4.685868,-3.602654,9.415913,-9.674215,7.935759,-6.534643,5.332470,9.648842,1.236705,-7.148932,-1.294179,5.493171,-4.345772,-5.354382,-8.130335,1.609843,-9.771450,-4.130254,-8.235066,4.227608,-4.935304,9.443042,5.386739,3.703470,-9.475084,-5.850688,7.044068,-2.197959,-2.018278,7.425659,2.966622,8.966902,-4.437349,-3.628899,-8.351173,-6.201425,6.475407,-9.737637,0.428343,6.038943,-1.694055,-5.213710,-1.552740,6.001577,-3.704296,5.223303,3.551581,0.145897,8.132926,-6.794729,6.817222,-0.306986,8.297042,0.247910,-6.471144,-0.615663,-1.879139,-5.811932,3.632521,7.089868,-6.697812,5.014917,2.272389,3.934816,-7.780411,-6.347866,-3.742031,-8.431070,4.344173,-1.242526,4.407585,-9.748236,-6.491383,-8.427899,5.622559,7.251825,-0.994560,7.559683,5.889878,-3.564903,5.969035,2.855620,0.724460,7.703077,4.618890,-2.145949,-3.095813,-9.341571,0.382956,-9.069173,-1.817297,-4.668152,-5.115476,-0.757665,-5.568838,-2.198516,7.418564,-0.078909,0.672988,3.893232,2.785576,4.334868,0.786212,-9.391088,-2.665862,9.397049,-1.190146,-1.033843,3.011185,-3.150251,0.741301,1.939940,-7.114819,-5.927457,9.066869,-6.535349,0.125695,-3.966672,0.451690,-6.752881,1.337613,-8.590322,6.419764,4.265625,8.418927,5.510488,-8.219137,0.334821,-4.756352,-5.107400,-1.410195,-6.926866,2.582362,-0.215113,-9.538807,-1.986636,-7.948047,8.572588,9.462509,-7.327749,0.215944,-8.860787,5.688013,-3.687364,1.435089,4.211633,-5.767119,7.083740,6.853635,-3.561440,-3.036774,9.183532,-3.161878,7.639628,4.632043,-6.357740,7.737314,-5.843518,0.266897,-7.305815,-9.583500,-7.409917,4.597140,-6.628410,7.049339,-4.925823,3.064273,-1.567469,5.333729,-2.833434,5.355295,5.982446,6.895225,1.907078,-9.863762,8.121790,-2.824385,9.283437,2.710503,-9.696585,8.932815,6.262077,-4.729252,-3.067866,3.901055,0.187855,9.952406,2.528917,-6.204632,1.026482,-6.290298,0.184034,-4.930700,-4.697680,-4.547744,-9.302695,-6.651569,6.568077,2.527918,-9.228832,-6.375565,-0.332393,-7.149398,-9.510870,-3.865783,4.950854,-8.975677,8.523713,-1.785298,-9.531734,-3.030417,-5.460367,-1.457472,-0.962396,6.557865,-0.958518,-4.326293,0.799066,-5.351153,1.136118,-2.275106,7.982300,-0.438174,0.759549,2.072546,7.324024,7.868125,-4.603676,1.899713,9.570948,7.323599,-3.893030,-7.760081,-1.091826,2.932696,-9.610316,-0.473984,-5.685788,-3.091515,7.683648,-5.372878,-9.185761,-3.416561,2.076271,5.727354,-2.237891,6.598598,-2.701659,9.835486,-5.454254,-6.093266,-3.093459,0.948379,0.084508,-1.999519,2.238901,-0.987118,-0.542559,-9.585586,-6.334587,7.867565,-4.251580,-3.525100,-5.233044,6.304032,-9.360209,5.135015,-6.074826,-8.067607,6.811795,6.986076,9.515620,-2.157621,-5.539817,5.077835,-0.551651,-1.464418,2.017073,4.580487,-4.718499,9.818331,-2.621650,7.573109,6.149607,0.071019,-4.165038,0.538486,-3.038052,-0.937913,-8.045107,1.908440,-7.378976,7.027480,-8.325907,4.235099,4.736997,-3.213696,-8.844177,-8.740403,4.934165,-4.444367,-6.695021,4.528145,4.757275,-4.064167,7.105951,-1.324533,5.179054,-7.087272,-9.624633,-2.480281,-9.031115,2.467913,-6.664647,-3.858558,6.898975,5.466152,-1.712246,-9.469135,-3.762785,6.019390,2.348925,9.681201,4.177846,-9.759215,-9.705914,9.271676,0.854733,4.978250,-3.559104,5.736099,-6.061709,-3.698405,3.145623,-9.065224,1.456963,-3.698129,0.041534,9.565920,2.395634,-3.378095,-2.921994,-7.163246,-7.796468,2.978374,0.462435,2.314953,7.515797,-1.805996,-0.592354,1.985920,-0.412566,-6.841506,1.385645,-3.354564,-2.322897,-2.120586,-6.783258,-7.156208,-3.040786,9.135157,2.188089,4.753924,-3.629708,5.369328,-2.187926,-4.813198,-9.789814,-5.063704,-4.283579,-9.676293,8.499156,4.959689,8.566431,7.512684,9.550634,0.925596,8.177673,-3.450299,-7.735979,-0.992200,-1.119525,2.418489,-6.339665,-6.390447,-6.989226,0.483809,-4.459972,7.620264,-5.118913,2.061526,-7.049952,-4.499806,-3.328959,7.560000,1.936309,0.807125,7.764376,-6.586238,9.312436,-3.321434,-7.980087,7.834402,5.523100,-7.790963,1.336025,3.004564,5.636673,9.052046,-1.916625,-6.187303,2.754436,9.832529,4.696605,-4.308889,2.628725,-8.198603,-3.285864,-3.272472,8.333280,1.924090,-7.569200,-6.134869,0.099448,6.979485,-2.509283,0.101564,-6.208990,-6.193530,-3.228576,-0.638820,-6.067665,8.673115,-7.819288,-5.141568,1.264190,2.925104,-2.873099,0.265863,5.433886,-7.619174,-7.387532,7.085842,-0.491613,-4.385713,-6.355949,-8.024793,-9.804578,5.429430,3.521295,-4.149531,-1.309985,4.895351,4.365335,-7.141420,1.143538,-2.533373,-7.879584,-6.235976,-9.867233,5.194155,0.016473,2.402067,-9.328745,9.945232,-3.869931,-5.691740,6.767290,0.628910,-5.358458,1.612829,-7.006619,0.700004,-7.911287,-7.858614,0.540463,8.198254,2.852758,-7.454803,-1.295360,-1.167973,3.972032,7.587832,-4.666305,0.867859,-7.022689,-8.589088,-2.007184,9.211495,-6.949853,3.036120,1.405001,-7.579443,3.260703,-2.780954,-1.719429,-3.932576,7.068224,-8.735183,9.570978,-3.481274,0.245636,-9.347564,4.785792,-2.760064,7.557750,1.043072,-4.018875,-2.421049,-8.797434,2.352917,5.462503,-6.643899,6.160908,-0.144852,-5.889084,-3.068658,4.389451,4.603984,-0.549597,-6.274203,-4.978414,7.215059,-4.226940,-1.075148,-1.872890,7.791785,-0.311595,1.689565,3.354103,-2.251074,-7.528238,5.324630,4.349240,-4.505557,-3.151363,-4.923643,-5.383911,0.837496,9.362864,8.049891,-1.679658,6.164396,-9.645164,-5.066239,-5.406024,5.275444,-9.602305,-6.342684,-0.511032,1.017001,-5.809492,0.029432,2.882890,5.018691,-1.252767,6.017891,6.106343,1.970345,6.425786,7.521139,-6.263068,-0.092589,7.967387,1.646426,-2.043104,-1.533370,-0.606419,1.496539,5.537185,-5.659125,-9.778622,-0.917791,-8.094105,6.437897,0.460886,5.196198,-6.754618,-4.669192,-1.634013,1.627700,6.692978,3.229970,1.763838,3.837446,8.880294,-5.661931,2.647985,-6.846846,5.250158,3.042804,-1.597335,-0.664614,3.226984,1.910040,-9.620855,-3.146396,-5.013271,3.140250,-4.972842,-1.344576,-7.587100,7.940263,9.021459,2.515911,-3.348210,-7.331249,8.174711,3.348064,1.879024,1.070018,6.019459,0.354497,8.966850,3.856381,-8.711856,-8.999375,-8.526535,-2.589919,7.372440,-4.829286,7.815184,-1.650805,-6.974760,7.850620,-5.489630,3.054730,-2.688174,-7.711372,-5.832079,7.446825,9.771784,8.228178,-5.695466,-2.998555,-5.045189,6.482981,5.753185,-8.088434,8.260757,4.068207,-6.003871,2.977362,-2.738636,9.216479,9.012582,3.241021,-4.157868,-9.799884,-2.040698,-0.482406,-7.278623,-9.935786,6.292510,4.936538,-4.917674,3.677611,4.368736,4.051429,-8.344187,-8.188733,-0.909797,-6.481176,7.254390,0.930809,9.319776,-8.762510,6.750949,1.391240,4.895272,9.512082,-8.601968,5.856420,7.916544,7.155504,1.951518,7.455732,1.073404,-3.314042,-0.208010,-5.913118,7.711555,8.687885,-9.536052,5.560329,8.325203,4.564356,8.759263,-2.908966,-7.295225,-3.440754,4.036581,9.182407,-9.928379,4.218348,2.058872,-4.372405,-4.400014,2.507986,9.078834,2.692384,5.658336,-9.869093,3.788498,9.519658,-4.686283,1.943610,9.425208,-5.742927,-5.124065,-2.234733,7.309493,-7.207889,1.695326,-0.061366,-1.217480,1.247885,4.954086,6.037403,-3.948362,-7.359053,-3.516821,5.098331,-3.207330,8.146362,4.703508,-6.400055,1.821873,9.034483,-3.413876,9.461563,8.716602,-0.818057,-8.233710,4.769578,-8.609849,6.624537,4.556043,-5.501731,-5.528372,-1.124283,8.761716,-1.554834,8.404377,3.605311,-9.189740,-4.555339,-5.938540,-8.244512,-0.505557,1.827185,4.435947,-8.801501,7.724910,-5.609016,-9.648321,-5.149495,9.816564,-8.662557,-6.036641,-6.445903,-8.698171,-5.560545,0.002457,0.469606,-0.722972,-5.954324,8.461182,-4.044232,8.568223,-1.361652,5.582556,7.956656,-2.307467,8.899214,-5.468192,9.248802,-9.342187,0.505188,-6.978563,-5.057381,3.372022,-8.278846,0.234373,-3.869631,6.666920,-5.586145,0.277450,1.764772,-9.686924,-6.285308,-6.247453,6.286684,0.225263,-2.281258,-3.031290,-7.483438,8.776888,-7.579759,0.570815,7.307213,-7.120276,0.056077,3.413111,0.030203,7.040484,-9.476092,4.063130,-9.669301,-5.056738,-2.371417,5.066304,0.581633,2.190365,1.138285,-9.736971,2.444544,1.049486,-8.349082,0.123931,-4.902169,1.152297,-1.925503,-8.795821,7.583329,7.880734,6.051646,-1.857211,1.406559,5.711191,-9.674280,1.745049,-8.553107,-1.651225,7.264984,-5.015280,-3.882288,3.372216,-9.778816,1.691694,-7.695694,7.193223,-5.304362,-5.117836,7.184550,-1.948006,5.153123,1.406007,-6.578999,-1.729268,7.434472,5.037407,-8.585279,-6.994152,6.706494,-4.652643,-4.739676,9.529003,1.713024,-6.399817,3.085231,-2.810622,-1.975436,-4.888446,0.777175,-9.347401,7.827694,-2.115612,-9.424280,-3.488591,7.268584,-6.680889,-1.182723,-2.112440,4.111175,-8.849591,3.562089,-3.249481,-8.233308,2.615579,0.245716,-2.416589,1.027476,3.144629,4.624525,6.442136,-2.657712,-6.711211,-8.571070,4.485152,4.548738,-4.274706,-9.487959,-8.154857,-0.946621,7.156578,-8.611418,-0.502597,-3.734002,6.676782,-6.847539,-8.821920,-0.473643,7.820755,8.993435,6.853974,9.747622,-1.520472,-4.369369,-3.840482,-4.218481,-5.848338,-4.214046,-5.842712,-1.323986,-6.138030,3.048439,-9.748484,-7.143912,-7.587085,-4.908411,-3.428866,0.266850,6.867183,-3.345003,-5.765851,0.828767,1.228209,-7.316151,7.403266,5.924467,8.699846,-0.870952,3.904996,4.061101,4.755038,6.935126,3.222244,-4.837831,-9.761168,8.725910,8.024350,2.228318,-1.448386,-9.165664,9.082381,1.068749,-1.826131,-2.838922,-7.576556,4.366128,2.966255,-0.494008,-4.654985,7.864484,4.552225,9.522822,-4.300863,7.523165,-7.732891,-6.953708,4.390265,-7.142628,2.153351,6.600466,1.171013,5.778327,5.977864,1.574445,-6.037959,-4.618024,9.949778,-2.301439,2.341835,-7.274575,-6.593787,7.207698,1.593594,0.527411,-9.819980,-1.931037,-1.828028,-8.513638,6.651342,9.291861,-1.816724,4.957636,1.749249,2.946359,8.847659,6.692014,-2.005287,-5.283557,-4.785370,9.165376,-7.136307,-7.060849,4.852193,6.844641,6.121074,4.078989,-3.127818,3.623761,-3.990006,-3.845248,0.103380,4.471026,-7.416334,0.913150,-4.956312,1.608037,-0.969332,0.505278,-0.609303,9.231236,1.661177,-1.217034,1.148119,5.534233,-0.099988,-2.237022,6.333495,-0.592758,2.920004,1.192367,-5.508255,-2.577966,-6.385169,-2.986046,-1.046650,-4.225358,-2.804494,-9.829414,6.315935,-5.468819,8.252370,1.091823,-5.917386,7.725555,2.654668,2.744565,4.529222,-0.225322,5.521693,8.778556,-9.775156,0.761649,-2.958157,9.812902,-7.562806,9.425223,-5.575351,-3.932398,-7.236650,-9.039701,-4.627372,4.373107,5.232410,-3.873020,0.874099,3.550842,3.794830,-3.893815,-6.500997,5.741118,4.900831,-0.458329,1.644080,8.751122,-0.450187,7.455724,8.185280,6.259521,7.946373,-0.605619,4.771387,-0.645557,-6.246461,-8.585336,-8.592981,6.697314,-5.204023,3.941290,3.387543,-2.928120,-7.126688,-7.870870,-8.237236,5.804259,7.757534,-0.993816,7.501361,-8.027644,-1.087878,-7.745937,-5.039902,-4.149197,2.870011,4.116957,-7.595554,0.452553,8.881990,2.112579,5.913691,6.160629,-4.955820,0.822611,1.106480,1.685462,-5.673673,-6.120175,-6.194993,4.609132,6.643258,-9.460009,-8.932823,-7.300383,4.424659,-6.813751,-2.774950,-2.057985,6.522582,-4.066508,9.365583,-5.894006,6.255184,-2.825848,-4.392167,-6.741096,-5.402686,3.906533,-8.209223,4.900128,3.547325,-9.390592,0.616446,-2.993292,-1.631296,3.273901,8.307392,7.850303,2.491169,-6.594742,8.206815,9.015921,9.667198,7.747145,-1.146983,8.288609,-9.995279,-4.605788,-6.872117,-6.651268,3.665954,-2.239695,-9.762323,-3.215281,-5.070012,0.316669,0.322834,7.169095,5.989864,-5.928864,0.394386,-2.212691,7.369904,-4.945211,9.442559,-6.331131,-3.742452,9.164020,-9.250532,-4.260765,-8.839392,-2.192456,-4.863122,-0.565325,-9.855377,-2.431082,9.431240,9.340293,6.539317,-2.630656,6.871638,5.960418,-7.531148,-4.977514,-8.150148,1.614554,-8.547439,-7.513700,6.169099,-7.440663,3.121041,-4.154840,3.074109,4.867111,6.989498,-1.662137,-2.873863,-0.963256,-7.477912,7.509002,-8.579424,-4.980083,6.782464,3.205552,8.536420,-5.384218,-1.574792,8.435394,5.617348,-9.653484,8.014465,7.776885,1.860578,-2.901956,-3.260755,-0.711544,-5.850322,6.590718,-0.165506,-5.029688,-6.473195,-9.599507,3.356311,7.929690,6.041781,6.780739,-0.879481,-2.557895,6.991240,7.986025,2.667929,-7.017368,-6.524323,2.275672,-2.329093,4.294797,-7.376663,-9.622170,2.246016,-6.110355,0.781465,7.018864,-9.581013,0.412041,-5.593607,1.224353,7.023763,7.149917,4.671851,-4.265676,1.951198,2.664862,5.647648,5.969207,2.231275,3.317779,-4.526046,-1.972057,7.400491,-6.953017,-7.117970,0.677926,7.454070,-6.686939,0.126183,-3.867427,-3.156554,-0.384706,7.813214,-7.864316,-5.084619,-8.987846,8.037610,7.578080,-3.585542,-9.806199,-3.962010,-5.052289,2.201249,-0.905679,2.892023,1.228383,-9.000747,-9.964145,2.249195,-6.989059,-4.245235,-9.104541,0.815817,-8.138313,0.847600,0.677608,-9.112282,3.998967,-5.950542,-3.665621,5.794747,7.594322,-0.737326,7.232553,-7.319068,2.214198,-8.999109,-2.730463,9.946771,-6.687533,-1.686005,-1.306684,1.668339,-6.169118,-7.534765,-4.687534,-4.781769,9.139338,6.625103,-2.378495,8.122968,-4.450364,-5.530008,9.589708,-3.714820,-9.607112,4.799638,6.813838,5.877622,-2.536753,5.298943,2.231775,-0.246127,-4.295816,9.322399,-5.584498,-1.253025,9.975640,7.547046,-6.275587,-7.916348,-4.468520,-8.639947,-8.162942,4.471024,6.253228,4.858034,-9.185721,9.438753,2.002123,-6.087568,6.631089,8.325846,2.716325,-2.426639,-0.135234,-2.119200,-4.000442,-6.629144,-4.613859,-4.470413,-4.467456,-6.196444,5.794420,2.943207,2.576327,-6.673113,-4.189521,7.941850,6.751613,-5.601404,-5.486579,-3.635908,8.280979,9.746726,6.120913,0.350263,-4.134505,-1.063768,8.438914,-2.160745,9.409673,-2.471452,-9.253042,4.071298,9.393659,5.504576,0.019740,-3.674764,0.523327,-2.635708,0.783505,-3.460848,-1.080521,-2.310146,2.934279,-1.895440,3.821899,-4.024961,-9.679310,3.663377,7.135281,2.512802,8.749480,6.802024,8.828908,2.630008,8.832900,-3.727250,-8.207682,-8.759390,-8.457994,0.381046,1.526275,7.155913,3.333810,1.756762,-2.159669,2.346340,-7.930454,-7.481179,1.582763,9.031005,8.936648,-5.669516,-3.717624,3.704305,9.020882,-1.601436,5.616507,-2.518125,8.175807,3.904076,-4.534750,1.873963,-3.504646,-8.063358,0.714443,-0.903423,-2.988625,-3.081152,1.886064,8.492936,-1.877657,2.317558,1.371171,5.595241,2.069489,-0.342869,5.735465,0.518356,5.875492,0.696984,9.872334,-1.529532,-5.307706,-9.656702,-8.360644,-8.255983,0.581358,-4.800582,5.201562,2.682394,8.480449,-4.941248,0.184711,-9.698084,-7.571531,0.433346,7.265189,8.570491,9.294940,-8.418732,1.151737,-0.155109,-6.419309,4.644787,-6.038481,1.265906,5.533981,0.763517,6.692951,0.387744,7.035909,1.685095,-4.487807,6.094649,-3.300682,-8.340416,-5.996127,-9.671968,4.044135,5.716640,1.684901,8.387998,-1.482194,7.918676,-6.446300,0.560558,-1.682388,5.264869,0.266754,-3.754426,-3.544124,9.241301,1.066370,0.287814,-4.821119,9.298810,4.136575,-8.116380,7.850901,8.411862,-6.300146,3.669643,7.346920,-6.505489,9.278234,-9.261721,1.007221,7.126289,-7.816729,0.197001,4.038577,-8.066749,-1.793772,-0.419520,-4.244406,4.082464,4.161214,9.611882,5.681228,5.567162,-7.112005,-4.542978,-3.414287,3.096018,1.761854,2.878695,0.412007,2.603023,-9.227352,4.077698,-4.053588,3.857428,5.192666,-0.135488,-0.570001,-3.230139,-8.369003,-1.360052,-8.687504,0.855049,7.729096,-8.128670,-2.549172,-4.798464,8.143840,7.497186,-1.711512,8.672489,-5.471370,7.986868,-3.787611,5.081770,-2.666086,5.798190,6.180765,-7.364477,7.449739,5.763589,1.398158,-7.965464,1.617227,-8.773666,-2.986180,-6.632436,1.425659,-8.118272,2.361170,-1.630754,4.948718,-9.115375,-8.614009,6.498878,7.944637,9.582302,-2.389424,2.526551,-5.428954,-4.863804,-9.258242,3.319735,-1.398078,9.508635,7.840943,9.618797,0.769427,-3.326968,4.093131,4.789103,-5.720228,2.033590,-6.414219,6.117782,-1.219379,8.556309,-8.493753,-8.382608,-5.624615,-3.899781,-6.420206,6.025026,5.251611,9.722965,9.334973,8.218598,-8.355545,8.099374,8.226344,0.554853,-9.711694,-3.658429,8.519176,7.955077,-5.066015,4.785360,1.370680,-6.456048,-6.924097,4.313337,-0.053075,-8.780608,5.313099,6.689841,-0.403500,-8.403910,-0.088723,3.817793,-8.666474,1.864696,-3.747631,3.733882,9.441262,-5.144310,8.367180,-9.756199,-5.196915,-4.503482,-4.071100,-3.474985,-2.721812,8.038153,-2.796569,-8.593586,2.862352,0.895831,5.850220,6.144769,7.514432,-0.094367,-5.435438,-3.333687,2.394303,-6.018557,1.399969,-1.977490,-0.385129,-0.182713,-8.745746,8.916423,-6.893033,1.143661,8.957042,3.788706,-9.130471,4.579268,-0.678055,6.318202,1.782743,2.246139,6.455411,-1.395017,7.164941,-2.647787,-1.949049,8.749397,-7.266656,-9.358945,4.538693,-1.524747,0.647696,-5.645864,-0.509352,-2.956120,-4.237187,-4.959889,4.282772,3.795755,9.974964,3.761568,3.824826,-6.740985,9.739787,2.578202,-4.080122,9.873516,9.497086,1.648171,0.108161,6.986412,4.984720,8.518597,7.860668,6.752991,-8.918065,-5.557010,6.619131,-8.331096,5.059358,-5.226407,4.657999,3.923353,7.290443,-1.797164,-4.734882,-2.593045,6.184764,9.233237,-5.476279,2.822492,4.602754,-4.046803,5.161306,7.373740,-0.172762,-7.204809,1.866633,9.137429,7.150040,-6.304806,9.736471,8.941504,-7.718731,7.424362,-4.696800,-2.070892,-9.021270,-1.946269,9.111977,-6.757388,0.823317,4.312227,1.123484,-0.881873,9.243160,-0.055401,4.748629,3.532039,-8.107336,3.348647,-9.417769,-5.580720,-1.530658,-4.961219,3.343564,-4.284359,6.171255,9.730369,-2.963153,3.234024,-2.588165,-3.620485,-2.930378,-5.854781,2.483813,9.769237,5.225135,-8.841402,-9.748767,1.727621,-3.609629,2.176395,3.466776,-0.259172,-1.985115], dtype = "float64")#candidate|6691|(2688,)|const|float64
call_6690 = relay.TupleGetItem(func_2967_call(relay.reshape(const_6691.astype('float64'), [2688,]), relay.reshape(const_6691.astype('int32'), [2688,]), ), 0)
call_6692 = relay.TupleGetItem(func_2970_call(relay.reshape(const_6691.astype('float64'), [2688,]), relay.reshape(const_6691.astype('int32'), [2688,]), ), 0)
func_5896_call = mod.get_global_var('func_5896')
func_5897_call = mutated_mod.get_global_var('func_5897')
call_6696 = relay.TupleGetItem(func_5896_call(), 0)
call_6697 = relay.TupleGetItem(func_5897_call(), 0)
uop_6701 = relay.sigmoid(const_6667.astype('float32')) # shape=(2, 28)
bop_6703 = relay.add(call_6690.astype('int64'), relay.reshape(const_6691.astype('int64'), relay.shape_of(call_6690))) # shape=(2688,)
bop_6706 = relay.add(call_6692.astype('int64'), relay.reshape(const_6691.astype('int64'), relay.shape_of(call_6692))) # shape=(2688,)
output = relay.Tuple([call_6659,call_6666,const_6668,bop_6673,call_6683,call_6696,uop_6701,bop_6703,])
output2 = relay.Tuple([call_6660,call_6669,const_6668,bop_6673,call_6684,call_6697,uop_6701,bop_6706,])
func_6708 = relay.Function([var_6672,], output)
mod['func_6708'] = func_6708
mod = relay.transform.InferType()(mod)
mutated_mod['func_6708'] = func_6708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6709 = relay.var("var_6709", dtype = "uint64", shape = (2, 28))#candidate|6709|(2, 28)|var|uint64
func_6708_call = mutated_mod.get_global_var('func_6708')
call_6710 = func_6708_call(var_6709)
output = call_6710
func_6711 = relay.Function([var_6709], output)
mutated_mod['func_6711'] = func_6711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5232_call = mod.get_global_var('func_5232')
func_5233_call = mutated_mod.get_global_var('func_5233')
call_6751 = relay.TupleGetItem(func_5232_call(), 0)
call_6752 = relay.TupleGetItem(func_5233_call(), 0)
func_3614_call = mod.get_global_var('func_3614')
func_3615_call = mutated_mod.get_global_var('func_3615')
call_6753 = relay.TupleGetItem(func_3614_call(), 0)
call_6754 = relay.TupleGetItem(func_3615_call(), 0)
output = relay.Tuple([call_6751,call_6753,])
output2 = relay.Tuple([call_6752,call_6754,])
func_6757 = relay.Function([], output)
mod['func_6757'] = func_6757
mod = relay.transform.InferType()(mod)
output = func_6757()
func_6758 = relay.Function([], output)
mutated_mod['func_6758'] = func_6758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6759 = relay.var("var_6759", dtype = "float32", shape = (4, 11, 13))#candidate|6759|(4, 11, 13)|var|float32
var_6760 = relay.var("var_6760", dtype = "float32", shape = (4, 11, 13))#candidate|6760|(4, 11, 13)|var|float32
bop_6761 = relay.mod(var_6759.astype('float32'), relay.reshape(var_6760.astype('float32'), relay.shape_of(var_6759))) # shape=(4, 11, 13)
func_3473_call = mod.get_global_var('func_3473')
func_3474_call = mutated_mod.get_global_var('func_3474')
call_6764 = relay.TupleGetItem(func_3473_call(), 0)
call_6765 = relay.TupleGetItem(func_3474_call(), 0)
output = relay.Tuple([bop_6761,call_6764,])
output2 = relay.Tuple([bop_6761,call_6765,])
func_6767 = relay.Function([var_6759,var_6760,], output)
mod['func_6767'] = func_6767
mod = relay.transform.InferType()(mod)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6767_call = mutated_mod.get_global_var('func_6767')
var_6769 = relay.var("var_6769", dtype = "float32", shape = (4, 11, 13))#candidate|6769|(4, 11, 13)|var|float32
var_6770 = relay.var("var_6770", dtype = "float32", shape = (4, 11, 13))#candidate|6770|(4, 11, 13)|var|float32
call_6768 = func_6767_call(var_6769,var_6770,)
output = call_6768
func_6771 = relay.Function([var_6769,var_6770,], output)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1703_call = mod.get_global_var('func_1703')
func_1705_call = mutated_mod.get_global_var('func_1705')
call_6827 = relay.TupleGetItem(func_1703_call(), 1)
call_6828 = relay.TupleGetItem(func_1705_call(), 1)
var_6844 = relay.var("var_6844", dtype = "float64", shape = (2688,))#candidate|6844|(2688,)|var|float64
bop_6845 = relay.mod(call_6827.astype('float32'), relay.reshape(var_6844.astype('float32'), relay.shape_of(call_6827))) # shape=(2688,)
bop_6848 = relay.mod(call_6828.astype('float32'), relay.reshape(var_6844.astype('float32'), relay.shape_of(call_6828))) # shape=(2688,)
func_5209_call = mod.get_global_var('func_5209')
func_5210_call = mutated_mod.get_global_var('func_5210')
call_6850 = relay.TupleGetItem(func_5209_call(), 1)
call_6851 = relay.TupleGetItem(func_5210_call(), 1)
output = relay.Tuple([bop_6845,call_6850,])
output2 = relay.Tuple([bop_6848,call_6851,])
func_6854 = relay.Function([var_6844,], output)
mod['func_6854'] = func_6854
mod = relay.transform.InferType()(mod)
var_6855 = relay.var("var_6855", dtype = "float64", shape = (2688,))#candidate|6855|(2688,)|var|float64
output = func_6854(var_6855)
func_6856 = relay.Function([var_6855], output)
mutated_mod['func_6856'] = func_6856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6054_call = mod.get_global_var('func_6054')
func_6056_call = mutated_mod.get_global_var('func_6056')
call_6865 = relay.TupleGetItem(func_6054_call(), 0)
call_6866 = relay.TupleGetItem(func_6056_call(), 0)
output = call_6865
output2 = call_6866
func_6867 = relay.Function([], output)
mod['func_6867'] = func_6867
mod = relay.transform.InferType()(mod)
mutated_mod['func_6867'] = func_6867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6867_call = mutated_mod.get_global_var('func_6867')
call_6868 = func_6867_call()
output = call_6868
func_6869 = relay.Function([], output)
mutated_mod['func_6869'] = func_6869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4015_call = mod.get_global_var('func_4015')
func_4016_call = mutated_mod.get_global_var('func_4016')
call_6908 = relay.TupleGetItem(func_4015_call(), 0)
call_6909 = relay.TupleGetItem(func_4016_call(), 0)
output = call_6908
output2 = call_6909
func_6915 = relay.Function([], output)
mod['func_6915'] = func_6915
mod = relay.transform.InferType()(mod)
output = func_6915()
func_6916 = relay.Function([], output)
mutated_mod['func_6916'] = func_6916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3479_call = mod.get_global_var('func_3479')
func_3481_call = mutated_mod.get_global_var('func_3481')
call_6917 = func_3479_call()
call_6918 = func_3479_call()
output = relay.Tuple([call_6917,])
output2 = relay.Tuple([call_6918,])
func_6921 = relay.Function([], output)
mod['func_6921'] = func_6921
mod = relay.transform.InferType()(mod)
mutated_mod['func_6921'] = func_6921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6921_call = mutated_mod.get_global_var('func_6921')
call_6922 = func_6921_call()
output = call_6922
func_6923 = relay.Function([], output)
mutated_mod['func_6923'] = func_6923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6953 = relay.var("var_6953", dtype = "float64", shape = (11, 6, 14))#candidate|6953|(11, 6, 14)|var|float64
uop_6954 = relay.tan(var_6953.astype('float64')) # shape=(11, 6, 14)
var_6966 = relay.var("var_6966", dtype = "float64", shape = (11, 6, 14))#candidate|6966|(11, 6, 14)|var|float64
bop_6967 = relay.mod(uop_6954.astype('float32'), relay.reshape(var_6966.astype('float32'), relay.shape_of(uop_6954))) # shape=(11, 6, 14)
output = bop_6967
output2 = bop_6967
func_7008 = relay.Function([var_6953,var_6966,], output)
mod['func_7008'] = func_7008
mod = relay.transform.InferType()(mod)
var_7009 = relay.var("var_7009", dtype = "float64", shape = (11, 6, 14))#candidate|7009|(11, 6, 14)|var|float64
var_7010 = relay.var("var_7010", dtype = "float64", shape = (11, 6, 14))#candidate|7010|(11, 6, 14)|var|float64
output = func_7008(var_7009,var_7010,)
func_7011 = relay.Function([var_7009,var_7010,], output)
mutated_mod['func_7011'] = func_7011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2831_call = mod.get_global_var('func_2831')
func_2832_call = mutated_mod.get_global_var('func_2832')
call_7027 = relay.TupleGetItem(func_2831_call(), 0)
call_7028 = relay.TupleGetItem(func_2832_call(), 0)
func_1399_call = mod.get_global_var('func_1399')
func_1403_call = mutated_mod.get_global_var('func_1403')
const_7038 = relay.const([-7.341160,3.828603,-9.343705,-6.381657,1.284779,7.018208,-1.239547,9.959194,-8.399834,9.460240,0.802456,-5.764058,3.165630,5.592198,-7.247846,-1.748232,7.754383,0.300752,4.586231,-0.204058,-3.943940,-5.146743,-6.602679,-3.505079,-4.996899,0.234477,7.227072,1.419314,4.335843,4.122848,-4.321691,-2.596210,-2.092121,4.507717,7.850928,-4.354888,5.053466,-0.060939,-2.049711,-8.542160,5.948107,-6.642508,2.368226,7.576526,-0.029249,8.122444,-1.341991,4.650058,4.183453,-2.627000,-6.252033,7.461172,-2.803427,0.444220,-7.918405,8.600669,-6.739199,2.984817,8.023908,-2.281650,2.004338,-6.856145,0.852563,-0.448271,-5.365897,9.068657,6.852182,7.483690,8.990673,4.444806,-7.194790,0.422354,-3.891760,1.548582,8.609411,-2.521361,0.006779,2.051858,-4.860699,4.883063,-2.978745,9.098278,3.486775,0.141130,1.129438,8.272324,3.838212,-3.014926,9.883829,7.526300,0.185487,7.963303,-5.422416,0.592435,2.820277,-0.540740,-9.957896,7.578825,-0.534706,-3.521710,4.860655,3.072395,-8.440232,3.524191,4.028830,-0.145178,-6.086610,6.061965,-5.306212,0.764636,-9.541396,-9.140523,1.384913,-2.085031,-3.291343,7.972087,-6.588175,8.828655,4.063082,-9.579041,5.166287,9.490918,4.268986,9.998017,-7.155356,9.488238,-9.064007,3.951533,6.262529,7.610715,-6.609389,-5.659752,0.063369,4.153994,-9.192929,-0.163327,-9.954649,5.981795,-1.086518,-5.955387,4.568667,8.228372,0.357477,2.169059,2.441743,-9.885244,9.904025,-0.103017,-6.662860,2.652516,-5.752776,9.482419,-3.561573,-7.595509,4.856678,1.380255,-7.497915,-8.361876,8.404028,-4.643194,-7.277644,-3.904978,0.216492,-7.005398,-7.726958,-8.235449,3.846203,6.154773,-8.839705,4.452754,-1.043565,-8.859572,7.161833,-2.680904,-1.875954,9.402622,-3.973124,9.517191,2.353444,7.882651,1.412189,-0.532681,5.768331,-9.663500,7.365165,4.306272,-6.529618,-2.274680,-0.342118,-2.138915,9.148871,3.410572,5.318396,-7.725443,6.874830,-7.732743,3.810555,6.726877,6.622436,1.970057,1.821806,-0.338406,-2.987931,-7.412801,-4.537074,-0.030246,-3.539163,2.200847,-6.053347,-0.643229,0.310927,-9.918965,7.713495,-2.917893,-4.750505,7.447980,-0.526890,8.523754,-6.724327,-1.725833,9.246578,1.377091,-6.098219,3.492266,-8.315087,-8.140734,0.150895,-5.632723,6.439723,2.952037,-0.367985,4.925807,-9.853256,-1.651388,-2.134365,7.219837,8.011646,-6.091569,5.750697,-7.688928,9.043351,-4.139831,1.599139,-9.655326,0.676150,-6.875581,-6.154331,-4.677933,4.524363,-3.419858,2.000812,4.840890,-4.278921,4.644220,1.366886,5.169673,-4.745302,4.526384,-0.840881,-2.986657,7.563219,-3.978780,2.542581,8.138639,0.139451,-0.290156,7.567808,7.836612,5.638654,-8.092733,-4.311700,-4.744415,9.094728,-4.915379,0.728405,9.666662,-7.450798,-6.393860,-9.836435,-0.112565,2.217816,3.069388,-1.914647,-7.586381,3.719238,-8.764027,-8.271882,-1.089081,5.756294,-1.429308,-5.490069,3.837332,0.753665,-8.188767,6.400983,7.193192,0.928492,-1.437604,7.444615,-7.980153,7.327937,-8.179986,0.213778,6.011668,0.098742,7.978337,9.803532,-5.618712,-0.700633,-0.045327,7.230005,8.033519,-4.959256,-3.840089,-7.435670,-9.040418,-9.280250,-5.638528,-4.662678,-1.548195,0.779859,4.781871,-1.585802,7.643877,-1.272640,2.419762,8.019058,-1.129420,-8.792678,9.657713,7.490835,-3.978116,-2.644586,4.867447,-2.922001,-8.633613,3.566696,-8.076965,-1.988097,0.607057,8.343258,-8.544084,1.482127,0.538891,-6.076459,-1.344803,-5.927901,0.658342,1.879256,3.916410,-6.470301,3.030259,3.646347,2.578919,8.139298,-2.401403,8.881206,6.814424,-2.376157,-5.121681,8.924089,-8.378017,3.103166,-5.584287,6.746235,-9.187847,-0.871391,0.467372,7.319593,4.941350,3.613575,-0.182698,-3.989957,9.252768,-0.100272,6.125569,0.495922,0.210599,4.911917,3.485005,-7.916888,-0.675778,-1.115505,-5.858973,9.056521,-0.265090,-8.479027,0.938339,9.335303,0.651936,2.445268,8.659169,-8.479315,5.997024,6.797551,-2.107642,9.283802,-2.867098,7.284941,2.032628,-3.101033,9.773885,-2.044029,5.326545,-4.842307,0.161146,-4.290952,-1.728656,-0.640747,-4.922480,-9.099824,1.926015,-1.856855,0.937813,-4.239840,-5.502356,8.878343,2.751214,-9.752522,5.102046,7.524481,-3.188994,5.593869,5.015664,7.649062,0.956740,-3.873441,9.810382,-0.201288,-4.517336,6.701927,6.403701,1.261340,8.548892,-0.566283,-6.359721,0.777085,8.382617,8.642858,-0.953181,-8.886134,-5.293756,-5.006743,6.416371,3.105548,-8.971934,-6.470879,9.273742,-6.399268,-7.785399,5.545080,4.002635,4.129991,6.521517,7.461093,2.979223,-8.978231,-1.659973,3.102782,6.593590,-1.055489,-5.421542,-2.044639,-3.246736,-8.000532,6.177246,2.335305,-2.546071,0.013888,1.819041,-7.248567,-1.194144,-3.631065,6.639244,5.821259,-7.391584,-9.673129,-6.703609,-0.606118,-5.680299,9.405389,-8.067323,-7.872903,-5.605423,8.379805,-2.352241,-5.318686,-2.542212,8.332146,4.332119,-8.237157,-6.151144,-3.062011,6.095400,2.827821,9.981675,0.015062,6.118900,-1.365755,4.710370,2.840348,1.731509,1.435971,6.317450,-6.052449,3.169905,-2.668066,6.336163,-5.501918,-3.888146,-5.869370,5.791888,2.995842,5.549395,-7.333889,2.303545,-0.892371,2.659657,-8.939689,8.762583,4.995315,-7.200960,-8.445302,-2.868521,-4.813588,5.696948,-8.951023,4.748572,3.830038,-5.778486,0.121635,-6.227805,-3.434442,2.713673,-4.751180,4.608224,7.730222,3.587627,-3.413003,2.272170,-1.248964,4.488467,6.624365,4.904171,-4.323663,-6.860472,5.428065,6.390672,-3.558771,8.000267,7.850806,2.797527,-6.226542,1.135344,-9.890210,9.215244,7.862098,-9.909692,2.801199,0.167459,1.457585,-1.312456,-5.580142,-8.609713,-7.224369,6.697579,9.902010,2.454583,-4.280865,-1.538117,1.205564,2.370075,-5.754947,7.141069,7.758194,4.869914,-6.691527,-5.847068,-6.278850,4.721461,-3.749264,-4.061107,6.756367,1.246905,-2.635482,3.062523,9.440413,-8.774974,-8.536226,-2.028514,6.282987,-5.896870,9.265820,-8.699512,0.296852,-2.874901,5.876693,9.719388,-5.286585,-6.686672,-7.432008,-3.675856,-1.948835,-6.380299,-2.950803,2.088227,-2.571586,7.092536,-3.992334,7.681458,-7.774986,2.696044,5.582491,-1.525617,0.942877,-7.717366,-6.371290,7.638413,-6.432707,5.995212,-0.338961,-6.375899,-1.439857,-5.265386,2.465095,1.209489,-8.846127,1.444378,2.464031,3.264375,-4.524320,4.066802,0.293818,-0.262799,-2.945659,-0.377421,-8.573760,8.695163,0.314271,1.401630], dtype = "float32")#candidate|7038|(640,)|const|float32
var_7039 = relay.var("var_7039", dtype = "uint8", shape = (6, 63))#candidate|7039|(6, 63)|var|uint8
var_7040 = relay.var("var_7040", dtype = "float64", shape = (180,))#candidate|7040|(180,)|var|float64
call_7037 = relay.TupleGetItem(func_1399_call(relay.reshape(const_7038.astype('float32'), [16, 10, 4]), relay.reshape(var_7039.astype('uint8'), [378,]), relay.reshape(var_7040.astype('float64'), [180,]), ), 5)
call_7041 = relay.TupleGetItem(func_1403_call(relay.reshape(const_7038.astype('float32'), [16, 10, 4]), relay.reshape(var_7039.astype('uint8'), [378,]), relay.reshape(var_7040.astype('float64'), [180,]), ), 5)
func_3236_call = mod.get_global_var('func_3236')
func_3237_call = mutated_mod.get_global_var('func_3237')
call_7047 = relay.TupleGetItem(func_3236_call(), 0)
call_7048 = relay.TupleGetItem(func_3237_call(), 0)
var_7049 = relay.var("var_7049", dtype = "int8", shape = (12, 16, 14))#candidate|7049|(12, 16, 14)|var|int8
bop_7050 = relay.bitwise_or(call_7027.astype('uint64'), relay.reshape(var_7049.astype('uint64'), relay.shape_of(call_7027))) # shape=(12, 16, 14)
bop_7053 = relay.bitwise_or(call_7028.astype('uint64'), relay.reshape(var_7049.astype('uint64'), relay.shape_of(call_7028))) # shape=(12, 16, 14)
output = relay.Tuple([call_7037,const_7038,var_7039,var_7040,call_7047,bop_7050,])
output2 = relay.Tuple([call_7041,const_7038,var_7039,var_7040,call_7048,bop_7053,])
F = relay.Function([var_7039,var_7040,var_7049,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7039,var_7040,var_7049,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

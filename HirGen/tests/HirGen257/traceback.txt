==========mod==========
#[version = "0.0.5"]
def @func_6401(%var_6395: Tensor[(2688), float32]) -> Tensor[(2688), bool] {
  %0 = @func_4407() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(2688), float32]) */;
  %1 = %0.1;
  %2 = cast(%var_6395, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(1), int32] */;
  %4 = cast(%1, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?), bool] */;
  greater(%4, %5) /* ty=Tensor[(2688), bool] */
}

def @func_5503() -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) {
  %6 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %7 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %8 = %6.0;
  %9 = %7.0;
  (%8, %9)
}

def @func_4957() -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) {
  %10 = @func_3628() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */;
  %11 = @func_3614() /* ty=(Tensor[(180), float64],) */;
  %12 = @func_4346() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) */;
  %13 = %12.1;
  %14 = cast(%13, dtype="float64") /* ty=Tensor[(7, ?, 2), float64] */;
  %15 = sqrt(%14) /* ty=Tensor[(7, ?, 2), float64] */;
  %16 = cast(%13, dtype="float64") /* ty=Tensor[(7, ?, 2), float64] */;
  %17 = shape_of(%15, dtype="int32") /* ty=Tensor[(3), int32] */;
  %18 = cast(%15, dtype="float64") /* ty=Tensor[(7, ?, 2), float64] */;
  %19 = dyn.reshape(%16, %17, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %20 = %10.0;
  %21 = %11.0;
  %22 = floor_mod(%18, %19) /* ty=Tensor[(7, ?, 2), float64] */;
  (%20, %21, %22)
}

def @func_3154() -> (Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) {
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %24 = reshape(%23, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %25 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
  %26 = %25.0;
  %27 = cast(%26, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %28 = asin(%27) /* ty=Tensor[(2688), float64] */;
  %29 = cast(%28, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %30 = @func_432(%24) /* ty=Tensor[(6, 3, 10), float64] */;
  %31 = atanh(%29) /* ty=Tensor[(2688), float32] */;
  (%30, meta[relay.Constant][0] /* ty=Tensor[(180), float64] */, %31)
}

def @func_1932(%var_1875: Tensor[(100, 1), float64], %var_1881: Tensor[(864), uint32], %var_1887: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(5, 5, 4), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32], Tensor[(12, 16, 14), float32], Tensor[(100, 2688), uint16], Tensor[(6, 3, 10), float64], Tensor[(3, 60), float64]) {
  %32 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %33 = cast(%var_1875, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
  %34 = reshape(%33, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %35 = cast(%var_1881, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %36 = reshape(%35, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), uint32] */;
  %37 = @func_1285(%36) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) */;
  %38 = cast(%var_1887, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %39 = reshape(%38, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %40 = @func_753(%39) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %41 = %40.1;
  %42 = cast(%41, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
  %43 = cast(%var_1887, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %44 = cast(%var_1875, dtype="bool") /* ty=Tensor[(100, 1), bool] */;
  %45 = greater(%43, %44) /* ty=Tensor[(100, 2688), bool] */;
  %46 = cast(%var_1887, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
  %47 = cast(%45, dtype="uint16") /* ty=Tensor[(100, 2688), uint16] */;
  %48 = cast(meta[relay.Constant][1] /* ty=Tensor[(3, 60), float64] */, dtype="float64") /* ty=Tensor[(3, 60), float64] */;
  %49 = reshape(%48, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %50 = %32.2;
  %51 = @func_102(%34) /* ty=Tensor[(5, 5, 4), float64] */;
  %52 = %37.1;
  %53 = exp(%42) /* ty=Tensor[(12, 16, 14), float32] */;
  %54 = logical_xor(%46, %47) /* ty=Tensor[(100, 2688), uint16] */;
  %55 = @func_432(%49) /* ty=Tensor[(6, 3, 10), float64] */;
  (%50, %51, %52, %var_1881, %53, %54, %55, meta[relay.Constant][1] /* ty=Tensor[(3, 60), float64] */)
}

def @func_5994(%var_5982: Tensor[(1, 196), uint16]) -> (Tensor[(4, 2, 10), float32], Tensor[(7, 7, 4), bool], Tensor[(1, 196), uint16], Tensor[(2688), float64], Tensor[(2688), float64]) {
  %56 = @func_3572() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(4, 2, 10), float32], Tensor[(3, 9, 12), float64]) */;
  %57 = cast(%var_5982, dtype="uint16") /* ty=Tensor[(1, 196), uint16] */;
  %58 = cast(%var_5982, dtype="uint16") /* ty=Tensor[(1, 196), uint16] */;
  %59 = reshape(%57, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), uint16] */;
  %60 = reshape(%58, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), uint16] */;
  %61 = %56.0;
  %62 = @func_262(%59, %60) /* ty=Tensor[(7, 7, 4), bool] */;
  %63 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %64 = @func_3727() /* ty=Tensor[(2688), float64] */;
  (%61, %62, %var_5982, %63, %64)
}

def @func_3473() -> (Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) {
  %65 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %66 = cast(meta[relay.Constant][2] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %67 = reshape(%66, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
  %68 = @func_624(%67) /* ty=(Tensor[(9, 7, 6), bool],) */;
  %69 = %65.1;
  %70 = %68.0;
  (%69, %70, meta[relay.Constant][2] /* ty=Tensor[(378), uint8] */)
}

def @func_1285(%var_1231: Tensor[(9, 6, 16), uint32]) -> (Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) {
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(378, 1), uint8] */, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
  %72 = reshape(%71, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
  %73 = @func_624(%72) /* ty=(Tensor[(9, 7, 6), bool],) */;
  %74 = cast(meta[relay.Constant][3] /* ty=Tensor[(378, 1), uint8] */, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
  %75 = reshape(%74, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
  %76 = @func_624(%75) /* ty=(Tensor[(9, 7, 6), bool],) */;
  %77 = cast(meta[relay.Constant][4] /* ty=Tensor[(9, 6, 16), uint32] */, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %78 = shape_of(%var_1231, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%var_1231, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %81 = less(%79, %80) /* ty=Tensor[(9, 6, 16), bool] */;
  %82 = cast(%81, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %83 = sin(%82) /* ty=Tensor[(9, 6, 16), float64] */;
  %84 = cast(%83, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
  %85 = acosh(%84) /* ty=Tensor[(9, 6, 16), float64] */;
  %86 = cast(%81, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %90 = %73.0;
  %91 = %76.0;
  %92 = multiply(%88, %89) /* ty=Tensor[(9, 6, 16), float32] */;
  (%90, meta[relay.Constant][3] /* ty=Tensor[(378, 1), uint8] */, %91, %92)
}

def @func_2967(%var_2949: Tensor[(2688), float64], %var_2954: Tensor[(2688), int32]) -> (Tensor[(2688), float64],) {
  %93 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %94 = cast(%var_2949, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %95 = shape_of(%93, dtype="int32") /* ty=Tensor[(1), int32] */;
  %96 = cast(%93, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?), int32] */;
  %98 = maximum(%96, %97) /* ty=Tensor[(2688), int32] */;
  %99 = cast(%var_2954, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %100 = shape_of(%98, dtype="int32") /* ty=Tensor[(1), int32] */;
  %101 = cast(%98, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?), float64] */;
  %103 = floor_divide(%101, %102) /* ty=Tensor[(2688), float64] */;
  (%103,)
}

def @func_2608(%var_2587: Tensor[(352), float32]) -> (Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) {
  %104 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
  %105 = %104.1;
  %106 = cast(%105, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
  %107 = reshape(%106, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
  %108 = @func_624(%107) /* ty=(Tensor[(9, 7, 6), bool],) */;
  %109 = %108.0;
  %110 = cast(%105, dtype="bool") /* ty=Tensor[(378, 1), bool] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="bool") /* ty=Tensor[(9, 7, 6), bool] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %114 = cast(%var_2587, dtype="float32") /* ty=Tensor[(352), float32] */;
  %115 = cast(%var_2587, dtype="float32") /* ty=Tensor[(352), float32] */;
  %116 = reshape(%114, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), float32] */;
  %117 = reshape(%115, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), float32] */;
  %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(100, 1), float64] */, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
  %119 = reshape(%118, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %120 = logical_or(%112, %113) /* ty=Tensor[(9, 7, 6), bool] */;
  %121 = @func_2512(%116, %117) /* ty=Tensor[(2, 11, 16), float32] */;
  %122 = @func_102(%119) /* ty=Tensor[(5, 5, 4), float64] */;
  (%120, %121, %var_2587, %122, meta[relay.Constant][5] /* ty=Tensor[(100, 1), float64] */)
}

def @func_3628() -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64]) {
  %123 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %124 = @func_3479() /* ty=Tensor[(4, 2, 10), float32] */;
  %125 = %123.2;
  (%124, %125)
}

def @func_4485() -> Tensor[(12, 16, 14), int8] {
  @func_2763() /* ty=Tensor[(12, 16, 14), int8] */
}

def @func_6708(%var_6672: Tensor[(2, 28), uint64]) -> (Tensor[(6, 3, 10), float64], Tensor[(378), bool], Tensor[(378), uint8], Tensor[(2, 28), uint32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(2, 28), float32], Tensor[(2688), int64]) {
  %126 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %127 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 28), uint64] */, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %128 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 28), uint64] */, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %129 = cast(meta[relay.Constant][7] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %130 = reshape(%127, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %131 = reshape(%128, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %132 = reshape(%129, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %133 = @func_897(%130, %131, %132) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) */;
  %134 = cast(%var_6672, dtype="uint32") /* ty=Tensor[(2, 28), uint32] */;
  %135 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(2, 28), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %136 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 28), uint64] */, dtype="uint32") /* ty=Tensor[(2, 28), uint32] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %138 = @func_4015() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %139 = @func_5896() /* ty=(Tensor[(2688), float64], Tensor[(4, 2, 10), float64]) */;
  %140 = cast(meta[relay.Constant][6] /* ty=Tensor[(2, 28), uint64] */, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %141 = cast(meta[relay.Constant][8] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %142 = cast(meta[relay.Constant][8] /* ty=Tensor[(2688), float64] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %143 = reshape(%141, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %144 = reshape(%142, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %145 = @func_2967(%143, %144) /* ty=(Tensor[(2688), float64],) */;
  %146 = %145.0;
  %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(2688), float64] */, dtype="int64") /* ty=Tensor[(2688), int64] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(1), int32] */;
  %149 = cast(%146, dtype="int64") /* ty=Tensor[(2688), int64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?), int64] */;
  %151 = %126.1;
  %152 = %133.3;
  %153 = multiply(%136, %137) /* ty=Tensor[(2, 28), uint32] */;
  %154 = %138.0;
  %155 = %139.0;
  %156 = sigmoid(%140) /* ty=Tensor[(2, 28), float32] */;
  %157 = add(%149, %150) /* ty=Tensor[(2688), int64] */;
  (%151, %152, meta[relay.Constant][7] /* ty=Tensor[(378), uint8] */, %153, %154, %155, %156, %157)
}

def @func_4264() -> (Tensor[(4, 2, 10), float32],) {
  %158 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %159 = %158.0;
  (%159,)
}

def @func_4463(%var_4460: Tensor[(2, 10, 9), float32]) -> Tensor[(2, 10, 9), float32] {
  %160 = cast(%var_4460, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
  cosh(%160) /* ty=Tensor[(2, 10, 9), float32] */
}

def @func_5896() -> (Tensor[(2688), float64], Tensor[(4, 2, 10), float64]) {
  %161 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
  %162 = %161.0;
  %163 = @func_4565() /* ty=Tensor[(4, 2, 10), float64] */;
  (%162, %163)
}

def @func_4726() -> (Tensor[(3, 9, 12), float64], Tensor[(9, 6, 16), float32], Tensor[(12, 16, 14), int8], Tensor[(378), uint8], Tensor[(9, 7, 6), bool], Tensor[(4, 2, 10), uint32], Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), bool]) {
  %164 = @func_4052() /* ty=(Tensor[(3, 9, 12), float64],) */;
  %165 = cast(meta[relay.Constant][9] /* ty=Tensor[(80, 1), float32] */, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
  %166 = reshape(%165, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
  %167 = @func_2484(%166) /* ty=(Tensor[(4, 2, 10), uint16], Tensor[(9, 6, 16), float32], Tensor[(864), uint32]) */;
  %168 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %169 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %170 = %168.0;
  %171 = cast(%170, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
  %172 = reshape(%171, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int8] */;
  %173 = @func_4086(%172) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) */;
  %174 = @func_4565() /* ty=Tensor[(4, 2, 10), float64] */;
  %175 = cast(%174, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %176 = sinh(%175) /* ty=Tensor[(4, 2, 10), float32] */;
  %177 = cast(meta[relay.Constant][9] /* ty=Tensor[(80, 1), float32] */, dtype="uint32") /* ty=Tensor[(80, 1), uint32] */;
  %178 = shape_of(%176, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%176, dtype="uint32") /* ty=Tensor[(4, 2, 10), uint32] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %181 = cast(%176, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %182 = reshape(%181, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
  %183 = @func_1854(%182) /* ty=(Tensor[(4, 2, 10), bool],) */;
  %184 = %164.0;
  %185 = %167.1;
  %186 = %169.2;
  %187 = %173.0;
  %188 = left_shift(%179, %180) /* ty=Tensor[(4, 2, 10), uint32] */;
  %189 = @func_4485() /* ty=Tensor[(12, 16, 14), int8] */;
  %190 = %183.0;
  (%184, %185, %170, %186, %187, %188, %189, %190)
}

def @func_5465() -> (Tensor[(12, 16, 14), int8],) {
  %191 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %192 = %191.0;
  (%192,)
}

def @func_4184(%var_4174: Tensor[(1, 1408), int16], %var_4176: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(1, 2250), float64], Tensor[(1, 1408), int16], Tensor[(2250), float64], Tensor[(2688), float64]) {
  %193 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %194 = cast(%var_4174, dtype="int16") /* ty=Tensor[(1, 1408), int16] */;
  %195 = cast(meta[relay.Constant][10] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %196 = cast(%var_4176, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %197 = reshape(%194, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), int16] */;
  %198 = reshape(%195, newshape=[1, 2250]) /* ty=Tensor[(1, 2250), float64] */;
  %199 = reshape(%196, newshape=[672, 4]) /* ty=Tensor[(672, 4), float64] */;
  %200 = @func_3863(%197, %198, %199) /* ty=(Tensor[(16, 11, 8), bool], Tensor[(378), uint8], Tensor[(864), uint32], Tensor[(1, 2250), float64], Tensor[(864), uint32], Tensor[(672, 4), float64], Tensor[(16, 11, 8), float64], Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(4, 88), float32], Tensor[(12, 16, 14), float32], Tensor[(2, 11, 16), float64]) */;
  %201 = %193.1;
  %202 = %200.3;
  (%201, %202, %var_4174, meta[relay.Constant][10] /* ty=Tensor[(2250), float64] */, %var_4176)
}

def @func_5338() -> (Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(378), uint8]) {
  %203 = @func_4346() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) */;
  %204 = @func_5232() /* ty=(Tensor[(378), uint8],) */;
  %205 = %203.0;
  %206 = @func_3727() /* ty=Tensor[(2688), float64] */;
  %207 = %204.0;
  (%205, %206, %207)
}

def @func_3002(%var_2979: Tensor[(1, 12, 9), float32]) -> (Tensor[(4, 2, 10), float32], Tensor[(?, 12, 9), bool]) {
  %208 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %209 = cast(%var_2979, dtype="float32") /* ty=Tensor[(1, 12, 9), float32] */;
  %210 = cos(%209) /* ty=Tensor[(1, 12, 9), float32] */;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(1, 12, 9), float64] */;
  %212 = rsqrt(%211) /* ty=Tensor[(1, 12, 9), float64] */;
  %213 = cast(%var_2979, dtype="uint16") /* ty=Tensor[(1, 12, 9), uint16] */;
  %214 = shape_of(%210, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%210, dtype="uint16") /* ty=Tensor[(1, 12, 9), uint16] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %217 = right_shift(%215, %216) /* ty=Tensor[(?, 12, 9), uint16] */;
  %218 = cast(%217, dtype="bool") /* ty=Tensor[(?, 12, 9), bool] */;
  %219 = shape_of(%212, dtype="int32") /* ty=Tensor[(3), int32] */;
  %220 = cast(%212, dtype="bool") /* ty=Tensor[(1, 12, 9), bool] */;
  %221 = dyn.reshape(%218, %219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %222 = %208.2;
  %223 = less_equal(%220, %221) /* ty=Tensor[(?, 12, 9), bool] */;
  (%222, %223)
}

def @func_897(%var_860: Tensor[(2, 4, 7), uint64], %var_861: Tensor[(2, 4, 7), uint64], %var_889: Tensor[(378), uint8]) -> (Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) {
  %224 = cast(%var_861, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
  %225 = shape_of(%var_860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %226 = cast(%var_860, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
  %227 = dyn.reshape(%224, %225, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %228 = cast(%var_860, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
  %229 = cast(meta[relay.Constant][11] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %230 = reshape(%229, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
  %231 = @func_624(%230) /* ty=(Tensor[(9, 7, 6), bool],) */;
  %232 = cast(%var_889, dtype="bool") /* ty=Tensor[(378), bool] */;
  %233 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(378), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %234 = cast(meta[relay.Constant][11] /* ty=Tensor[(378), uint8] */, dtype="bool") /* ty=Tensor[(378), bool] */;
  %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?), bool] */;
  %236 = left_shift(%226, %227) /* ty=Tensor[(2, 4, 7), uint64] */;
  %237 = tan(%228) /* ty=Tensor[(2, 4, 7), float32] */;
  %238 = %231.0;
  %239 = not_equal(%234, %235) /* ty=Tensor[(378), bool] */;
  (%236, %237, %238, %239)
}

def @func_2446() -> (Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) {
  %240 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %241 = cast(meta[relay.Constant][12] /* ty=Tensor[(864), uint32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %242 = reshape(%241, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), uint32] */;
  %243 = @func_1285(%242) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) */;
  %244 = %240.0;
  %245 = %243.1;
  (%244, %245, meta[relay.Constant][12] /* ty=Tensor[(864), uint32] */)
}

def @func_5292() -> (Tensor[(2688), bool], Tensor[(2688), bool]) {
  %246 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
  %247 = %246.0;
  %248 = cast(meta[relay.Constant][13] /* ty=Tensor[(2688), bool] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %249 = shape_of(%247, dtype="int32") /* ty=Tensor[(1), int32] */;
  %250 = cast(%247, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %251 = dyn.reshape(%248, %249, newshape=[]) /* ty=Tensor[(?), bool] */;
  %252 = cast(meta[relay.Constant][14] /* ty=Tensor[(2688), bool] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %253 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(2688), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %254 = cast(meta[relay.Constant][13] /* ty=Tensor[(2688), bool] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?), bool] */;
  %256 = greater_equal(%250, %251) /* ty=Tensor[(2688), bool] */;
  %257 = less_equal(%254, %255) /* ty=Tensor[(2688), bool] */;
  (%256, %257)
}

def @func_6037() -> Tensor[(12, 16, 14), int8] {
  %258 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %258.0
}

def @func_6596() -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) {
  %259 = @func_4957() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) */;
  %260 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %261 = %259.0;
  %262 = %260.0;
  (%261, %262)
}

def @func_2180() -> (Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) {
  %263 = cast(meta[relay.Constant][15] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %264 = reshape(%263, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %265 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %266 = @func_102(%264) /* ty=Tensor[(5, 5, 4), float64] */;
  (%265, %266, meta[relay.Constant][15] /* ty=Tensor[(100), float64] */)
}

def @func_6054() -> (Tensor[(12, 16, 14), int8],) {
  %267 = @func_4502() /* ty=Tensor[(12, 16, 14), int8] */;
  (%267,)
}

def @func_6921() -> (Tensor[(4, 2, 10), float32],) {
  %268 = @func_3479() /* ty=Tensor[(4, 2, 10), float32] */;
  (%268,)
}

def @func_2229() -> (Tensor[(4, 2, 10), float32],) {
  %269 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %270 = %269.2;
  (%270,)
}

def @func_5446(%var_5428: Tensor[(2, 10, 9), float32]) -> (Tensor[(2688), bool], Tensor[(4, 2, 10), bool], Tensor[(180), float32], Tensor[(2, 10, 9), float64], Tensor[(2688), float64], Tensor[(2, 10, 9), float32], Tensor[(2, 10, 9), int16], Tensor[(6, 3, 7), float32], Tensor[(126), float32]) {
  %271 = @func_5292() /* ty=(Tensor[(2688), bool], Tensor[(2688), bool]) */;
  %272 = @func_4726() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 6, 16), float32], Tensor[(12, 16, 14), int8], Tensor[(378), uint8], Tensor[(9, 7, 6), bool], Tensor[(4, 2, 10), uint32], Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), bool]) */;
  %273 = cast(meta[relay.Constant][16] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
  %274 = reshape(%273, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), float32] */;
  %275 = @func_4463(%274) /* ty=Tensor[(2, 10, 9), float32] */;
  %276 = cast(%275, dtype="float64") /* ty=Tensor[(2, 10, 9), float64] */;
  %277 = cast(%275, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
  %278 = asinh(%277) /* ty=Tensor[(2, 10, 9), float32] */;
  %279 = cast(%278, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
  %280 = cast(%var_5428, dtype="int16") /* ty=Tensor[(2, 10, 9), int16] */;
  %281 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %282 = cast(%278, dtype="int16") /* ty=Tensor[(2, 10, 9), int16] */;
  %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %284 = cast(meta[relay.Constant][17] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %285 = reshape(%284, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float32] */;
  %286 = @func_1587(%285) /* ty=(Tensor[(6, 3, 7), float32],) */;
  %287 = %271.0;
  %288 = %272.7;
  %289 = rsqrt(%276) /* ty=Tensor[(2, 10, 9), float64] */;
  %290 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %291 = sinh(%279) /* ty=Tensor[(2, 10, 9), float32] */;
  %292 = subtract(%282, %283) /* ty=Tensor[(2, 10, 9), int16] */;
  %293 = %286.0;
  (%287, %288, meta[relay.Constant][16] /* ty=Tensor[(180), float32] */, %289, %290, %291, %292, %293, meta[relay.Constant][17] /* ty=Tensor[(126), float32] */)
}

def @func_1972(%var_1942: Tensor[(15, 10, 15), float64], %var_1958: Tensor[(864), uint32], %var_1959: Tensor[(96, 28), float64], %var_1968: Tensor[(96, 28), float64]) -> (Tensor[(15, 10, 15), float64], Tensor[(6, 3, 10), float64], Tensor[(100), float64], Tensor[(864), uint32], Tensor[(96, 28), int8]) {
  %294 = cast(%var_1942, dtype="float64") /* ty=Tensor[(15, 10, 15), float64] */;
  %295 = cast(meta[relay.Constant][18] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %296 = cast(%var_1958, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %297 = cast(%var_1959, dtype="float64") /* ty=Tensor[(96, 28), float64] */;
  %298 = reshape(%295, newshape=[100, 1]) /* ty=Tensor[(100, 1), float64] */;
  %299 = reshape(%296, newshape=[864]) /* ty=Tensor[(864), uint32] */;
  %300 = reshape(%297, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %301 = @func_1932(%298, %299, %300) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(5, 5, 4), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32], Tensor[(12, 16, 14), float32], Tensor[(100, 2688), uint16], Tensor[(6, 3, 10), float64], Tensor[(3, 60), float64]) */;
  %302 = cast(%var_1968, dtype="int8") /* ty=Tensor[(96, 28), int8] */;
  %303 = shape_of(%var_1959, dtype="int32") /* ty=Tensor[(2), int32] */;
  %304 = cast(%var_1959, dtype="int8") /* ty=Tensor[(96, 28), int8] */;
  %305 = dyn.reshape(%302, %303, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %306 = erf(%294) /* ty=Tensor[(15, 10, 15), float64] */;
  %307 = %301.6;
  %308 = bitwise_xor(%304, %305) /* ty=Tensor[(96, 28), int8] */;
  (%306, %307, meta[relay.Constant][18] /* ty=Tensor[(100), float64] */, %var_1958, %308)
}

def @func_2831() -> (Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) {
  %309 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %310 = @func_2763() /* ty=Tensor[(12, 16, 14), int8] */;
  %311 = %309.0;
  (%310, %311)
}

def @func_3687(%var_3685: Tensor[(66), float32]) -> (Tensor[(100), float64], Tensor[(2, 3, 11), float32], Tensor[(66), float32]) {
  %312 = @func_2180() /* ty=(Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %313 = cast(%var_3685, dtype="float32") /* ty=Tensor[(66), float32] */;
  %314 = reshape(%313, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float32] */;
  %315 = %312.2;
  %316 = @func_2773(%314) /* ty=Tensor[(2, 3, 11), float32] */;
  (%315, %316, %var_3685)
}

def @func_4873() -> (Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(12, 16, 14), int8], Tensor[(3, 9, 12), float64], Tensor[(5, 5, 4), float64], Tensor[(180), float64], Tensor[(180), float64], Tensor[(352), uint16]) {
  %317 = @func_4339() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) */;
  %318 = cast(meta[relay.Constant][19] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %319 = reshape(%318, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %320 = @func_2608(%319) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
  %321 = cast(meta[relay.Constant][19] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %322 = reshape(%321, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %323 = @func_2608(%322) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
  %324 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %325 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
  %326 = %320.3;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  %328 = reshape(%327, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
  %329 = @func_4208(%328) /* ty=(Tensor[(2688), bool], Tensor[(5, 5, 4), float64], Tensor[(1, 100), float64]) */;
  %330 = @func_3614() /* ty=(Tensor[(180), float64],) */;
  %331 = @func_4339() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) */;
  %332 = cast(meta[relay.Constant][19] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %333 = atanh(%332) /* ty=Tensor[(352), float32] */;
  %334 = cast(meta[relay.Constant][19] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(1), int32] */;
  %336 = cast(%333, dtype="float32") /* ty=Tensor[(352), float32] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?), float32] */;
  %338 = floor_divide(%336, %337) /* ty=Tensor[(352), float32] */;
  %339 = cast(%333, dtype="uint16") /* ty=Tensor[(352), uint16] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(1), int32] */;
  %341 = cast(%338, dtype="uint16") /* ty=Tensor[(352), uint16] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %343 = %317.0;
  %344 = %323.4;
  %345 = %324.1;
  %346 = @func_4485() /* ty=Tensor[(12, 16, 14), int8] */;
  %347 = %325.0;
  %348 = %329.1;
  %349 = %330.0;
  %350 = %331.0;
  %351 = left_shift(%341, %342) /* ty=Tensor[(352), uint16] */;
  (%343, %326, %344, %345, %346, %347, %348, %349, %350, %351)
}

def @func_2773(%var_2767: Tensor[(2, 3, 11), float32]) -> Tensor[(2, 3, 11), float32] {
  %352 = cast(%var_2767, dtype="float32") /* ty=Tensor[(2, 3, 11), float32] */;
  tan(%352) /* ty=Tensor[(2, 3, 11), float32] */
}

def @func_432(%var_429: Tensor[(6, 3, 10), float64]) -> Tensor[(6, 3, 10), float64] {
  %353 = cast(%var_429, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  sin(%353) /* ty=Tensor[(6, 3, 10), float64] */
}

def @func_6867() -> Tensor[(12, 16, 14), int8] {
  %354 = @func_6054() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %354.0
}

def @func_4565() -> Tensor[(4, 2, 10), float64] {
  %355 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %356 = %355.0;
  %357 = cast(%356, dtype="float64") /* ty=Tensor[(4, 2, 10), float64] */;
  log2(%357) /* ty=Tensor[(4, 2, 10), float64] */
}

def @func_753(%var_710: Tensor[(12, 16, 14), float64]) -> (Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) {
  %358 = cast(%var_710, dtype="float64") /* ty=Tensor[(12, 16, 14), float64] */;
  %359 = atanh(%358) /* ty=Tensor[(12, 16, 14), float64] */;
  %360 = cast(%359, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %361 = shape_of(%var_710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%var_710, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %364 = logical_and(%362, %363) /* ty=Tensor[(12, 16, 14), bool] */;
  %365 = cast(%364, dtype="uint32") /* ty=Tensor[(12, 16, 14), uint32] */;
  %366 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %367 = cast(%359, dtype="uint32") /* ty=Tensor[(12, 16, 14), uint32] */;
  %368 = dyn.reshape(%365, %366, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %369 = left_shift(%367, %368) /* ty=Tensor[(12, 16, 14), uint32] */;
  %370 = cast(%369, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
  %371 = cast(%359, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
  %372 = shape_of(%var_710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %373 = cast(%var_710, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
  %374 = dyn.reshape(%371, %372, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %375 = sqrt(%370) /* ty=Tensor[(12, 16, 14), float32] */;
  %376 = minimum(%373, %374) /* ty=Tensor[(12, 16, 14), int8] */;
  (%375, %376)
}

def @func_5009(%var_4984: Tensor[(66), float32], %var_4998: Tensor[(2688), float64]) -> (Tensor[(7, ?, 2), int8], Tensor[(2, 3, 11), float32], uint32, Tensor[(20, 1), uint32], Tensor[(80), float32], Tensor[(66), float32], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32], Tensor[(108), float32]) {
  %377 = @func_4346() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) */;
  %378 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %379 = cast(meta[relay.Constant][21] /* ty=Tensor[(20, 1), uint32] */, dtype="uint32") /* ty=Tensor[(20, 1), uint32] */;
  %380 = cast(meta[relay.Constant][22] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
  %381 = cast(%var_4984, dtype="float32") /* ty=Tensor[(66), float32] */;
  %382 = reshape(%378, newshape=[]) /* ty=uint32 */;
  %383 = reshape(%379, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), uint32] */;
  %384 = reshape(%380, newshape=[80]) /* ty=Tensor[(80), float32] */;
  %385 = reshape(%381, newshape=[66]) /* ty=Tensor[(66), float32] */;
  %386 = @func_3207(%382, %383, %384, %385) /* ty=(Tensor[(2, 1, 10), bool], Tensor[(4, 2, 10), bool], Tensor[(80), float32], Tensor[(2, 3, 11), float32], Tensor[(66), float32], Tensor[(352), float32], Tensor[(2, 11, 16), float64]) */;
  %387 = cast(%var_4998, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %388 = reshape(%387, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %389 = @func_753(%388) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %390 = cast(meta[relay.Constant][23] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %391 = reshape(%390, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), float32] */;
  %392 = @func_3002(%391) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(?, 12, 9), bool]) */;
  %393 = %377.1;
  %394 = %386.3;
  %395 = %389.1;
  %396 = %392.0;
  (%393, %394, meta[relay.Constant][20] /* ty=uint32 */, meta[relay.Constant][21] /* ty=Tensor[(20, 1), uint32] */, meta[relay.Constant][22] /* ty=Tensor[(80), float32] */, %var_4984, %395, %var_4998, %396, meta[relay.Constant][23] /* ty=Tensor[(108), float32] */)
}

def @func_3909(%var_3896: Tensor[(2, 1, 7), float64]) -> (Tensor[(2, 1, 7), float64], Tensor[(2, 1, 7), float64]) {
  %397 = cast(%var_3896, dtype="float64") /* ty=Tensor[(2, 1, 7), float64] */;
  %398 = cast(%var_3896, dtype="float64") /* ty=Tensor[(2, 1, 7), float64] */;
  %399 = log(%397) /* ty=Tensor[(2, 1, 7), float64] */;
  %400 = atanh(%398) /* ty=Tensor[(2, 1, 7), float64] */;
  (%399, %400)
}

def @func_1666() -> (Tensor[(4, 2, 10), float32],) {
  %401 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %402 = erf(%401) /* ty=Tensor[(4, 2, 10), float32] */;
  (%402,)
}

def @func_4015() -> (Tensor[(4, 2, 10), float32],) {
  %403 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %404 = %403.0;
  (%404,)
}

def @func_3059(%var_3051: Tensor[(14, 1), float32], %var_3053: Tensor[(378), uint8], %var_3054: Tensor[(100), float64]) -> (Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(14, 1), float32], Tensor[(56), uint64], Tensor[(378), uint8], Tensor[(100), float64]) {
  %405 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %406 = cast(%var_3051, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %407 = cast(meta[relay.Constant][25] /* ty=Tensor[(56), uint64] */, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %408 = cast(%var_3053, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %409 = cast(%var_3054, dtype="float64") /* ty=Tensor[(100), float64] */;
  %410 = reshape(%406, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %411 = reshape(%407, newshape=[56]) /* ty=Tensor[(56), uint64] */;
  %412 = reshape(%408, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %413 = reshape(%409, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %414 = @func_2374(%410, %411, %412, %413) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %415 = %405.0;
  %416 = %414.7;
  (%415, %416, %var_3051, meta[relay.Constant][25] /* ty=Tensor[(56), uint64] */, %var_3053, %var_3054)
}

def @func_5209() -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64]) {
  %417 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %418 = @func_3614() /* ty=(Tensor[(180), float64],) */;
  %419 = %417.0;
  %420 = %418.0;
  (%419, %420)
}

def @main(%var_7039: Tensor[(6, 63), uint8], %var_7040: Tensor[(180), float64], %var_7049: Tensor[(12, 16, 14), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(640), float32], Tensor[(6, 63), uint8], Tensor[(180), float64], Tensor[(12, 16, 14), int8], Tensor[(12, 16, 14), uint64]) {
  %421 = cast(meta[relay.Constant][26] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %422 = cast(%var_7039, dtype="uint8") /* ty=Tensor[(6, 63), uint8] */;
  %423 = cast(%var_7040, dtype="float64") /* ty=Tensor[(180), float64] */;
  %424 = reshape(%421, newshape=[16, 10, 4]) /* ty=Tensor[(16, 10, 4), float32] */;
  %425 = reshape(%422, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %426 = reshape(%423, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %427 = @func_1399(%424, %425, %426) /* ty=(Tensor[(16, 10, 4), float64], Tensor[(9, 7, 6), bool], Tensor[(378), uint8], Tensor[(12, 16, 14), int8], Tensor[(1, 2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %428 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %429 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %430 = %429.0;
  %431 = cast(%var_7049, dtype="uint64") /* ty=Tensor[(12, 16, 14), uint64] */;
  %432 = shape_of(%430, dtype="int32") /* ty=Tensor[(3), int32] */;
  %433 = cast(%430, dtype="uint64") /* ty=Tensor[(12, 16, 14), uint64] */;
  %434 = dyn.reshape(%431, %432, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %435 = %427.5;
  %436 = %428.0;
  %437 = bitwise_or(%433, %434) /* ty=Tensor[(12, 16, 14), uint64] */;
  (%435, meta[relay.Constant][26] /* ty=Tensor[(640), float32] */, %var_7039, %var_7040, %436, %437)
}

def @func_3207(%var_3156: uint32, %var_3157: Tensor[(2, 1, 10), uint32], %var_3163: Tensor[(80), float32], %var_3171: Tensor[(66), float32]) -> (Tensor[(2, 1, 10), bool], Tensor[(4, 2, 10), bool], Tensor[(80), float32], Tensor[(2, 3, 11), float32], Tensor[(66), float32], Tensor[(352), float32], Tensor[(2, 11, 16), float64]) {
  %438 = cast(%var_3156, dtype="bool") /* ty=bool */;
  %439 = cast(%var_3157, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
  %440 = cast(%var_3163, dtype="float32") /* ty=Tensor[(80), float32] */;
  %441 = reshape(%440, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
  %442 = @func_1854(%441) /* ty=(Tensor[(4, 2, 10), bool],) */;
  %443 = cast(%var_3171, dtype="float32") /* ty=Tensor[(66), float32] */;
  %444 = reshape(%443, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float32] */;
  %445 = cast(meta[relay.Constant][27] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
  %446 = reshape(%445, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %447 = @func_2608(%446) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
  %448 = %447.1;
  %449 = cast(%448, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
  %450 = greater_equal(%438, %439) /* ty=Tensor[(2, 1, 10), bool] */;
  %451 = %442.0;
  %452 = @func_2773(%444) /* ty=Tensor[(2, 3, 11), float32] */;
  %453 = atan(%449) /* ty=Tensor[(2, 11, 16), float64] */;
  (%450, %451, %var_3163, %452, %var_3171, meta[relay.Constant][27] /* ty=Tensor[(352), float32] */, %453)
}

def @func_1587(%var_1580: Tensor[(6, 3, 7), float32]) -> (Tensor[(6, 3, 7), float32],) {
  %454 = cast(%var_1580, dtype="float32") /* ty=Tensor[(6, 3, 7), float32] */;
  %455 = exp(%454) /* ty=Tensor[(6, 3, 7), float32] */;
  (%455,)
}

def @func_2484(%var_2468: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), uint16], Tensor[(9, 6, 16), float32], Tensor[(864), uint32]) {
  %456 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %457 = %456.0;
  %458 = cast(%var_2468, dtype="int64") /* ty=Tensor[(4, 2, 10), int64] */;
  %459 = shape_of(%457, dtype="int32") /* ty=Tensor[(3), int32] */;
  %460 = cast(%457, dtype="int64") /* ty=Tensor[(4, 2, 10), int64] */;
  %461 = dyn.reshape(%458, %459, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %462 = right_shift(%460, %461) /* ty=Tensor[(4, 2, 10), int64] */;
  %463 = cast(%var_2468, dtype="uint16") /* ty=Tensor[(4, 2, 10), uint16] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%462, dtype="uint16") /* ty=Tensor[(4, 2, 10), uint16] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %467 = cast(meta[relay.Constant][28] /* ty=Tensor[(864), uint32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %468 = reshape(%467, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), uint32] */;
  %469 = @func_1285(%468) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) */;
  %470 = maximum(%465, %466) /* ty=Tensor[(4, 2, 10), uint16] */;
  %471 = %469.3;
  (%470, %471, meta[relay.Constant][28] /* ty=Tensor[(864), uint32] */)
}

def @func_7008(%var_6953: Tensor[(11, 6, 14), float64], %var_6966: Tensor[(11, 6, 14), float64]) -> Tensor[(11, 6, 14), float32] {
  %472 = cast(%var_6953, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
  %473 = tan(%472) /* ty=Tensor[(11, 6, 14), float64] */;
  %474 = cast(%var_6966, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%473, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%476, %477) /* ty=Tensor[(11, 6, 14), float32] */
}

def @func_3313(%var_3299: Tensor[(1, 80), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 2, 10), bool]) {
  %478 = @func_3154() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) */;
  %479 = %478.0;
  %480 = cast(%479, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %481 = cast(%479, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %482 = cast(%var_3299, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %483 = reshape(%482, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
  %484 = @func_1854(%483) /* ty=(Tensor[(4, 2, 10), bool],) */;
  %485 = %484.0;
  %486 = cast(%var_3299, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%485, dtype="bool") /* ty=Tensor[(4, 2, 10), bool] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %490 = acos(%480) /* ty=Tensor[(6, 3, 10), float64] */;
  %491 = sinh(%481) /* ty=Tensor[(6, 3, 10), float64] */;
  %492 = equal(%488, %489) /* ty=Tensor[(4, 2, 10), bool] */;
  (%490, %491, %492)
}

def @func_4208(%var_4196: Tensor[(1, 100), float64]) -> (Tensor[(2688), bool], Tensor[(5, 5, 4), float64], Tensor[(1, 100), float64]) {
  %493 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
  %494 = cast(%var_4196, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
  %495 = reshape(%494, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %496 = %493.0;
  %497 = @func_102(%495) /* ty=Tensor[(5, 5, 4), float64] */;
  (%496, %497, %var_4196)
}

def @func_5759(%var_5681: uint16, %var_5682: Tensor[(14, 4, 5), uint16], %var_5730: Tensor[(56), uint64]) -> (Tensor[(14, 4, 5), float32], Tensor[(4, 2, 10), float32], Tensor[(14), float32], Tensor[(378), uint8], Tensor[(100), float64], Tensor[(4, 2, 10), float32], Tensor[(56), float32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %498 = cast(%var_5681, dtype="uint16") /* ty=uint16 */;
  %499 = cast(%var_5682, dtype="uint16") /* ty=Tensor[(14, 4, 5), uint16] */;
  %500 = right_shift(%498, %499) /* ty=Tensor[(14, 4, 5), uint16] */;
  %501 = cast(%var_5682, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %502 = shape_of(%500, dtype="int32") /* ty=Tensor[(3), int32] */;
  %503 = cast(%500, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %504 = dyn.reshape(%501, %502, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %505 = cast(meta[relay.Constant][29] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %506 = cast(%var_5730, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %507 = cast(meta[relay.Constant][30] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %508 = cast(meta[relay.Constant][31] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %509 = reshape(%505, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %510 = reshape(%506, newshape=[56]) /* ty=Tensor[(56), uint64] */;
  %511 = reshape(%507, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %512 = reshape(%508, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %513 = @func_2374(%509, %510, %511, %512) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %514 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %515 = cast(%var_5730, dtype="float32") /* ty=Tensor[(56), float32] */;
  %516 = cast(meta[relay.Constant][32] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %517 = reshape(%516, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %518 = @func_2661(%517) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) */;
  %519 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %520 = power(%503, %504) /* ty=Tensor[(14, 4, 5), float32] */;
  %521 = %513.0;
  %522 = %514.0;
  %523 = log(%515) /* ty=Tensor[(56), float32] */;
  %524 = %518.0;
  %525 = %519.0;
  (%520, %521, meta[relay.Constant][29] /* ty=Tensor[(14), float32] */, meta[relay.Constant][30] /* ty=Tensor[(378), uint8] */, meta[relay.Constant][31] /* ty=Tensor[(100), float64] */, %522, %523, %524, meta[relay.Constant][32] /* ty=Tensor[(2688), float64] */, %525)
}

def @func_5080() -> (Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %526 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
  %527 = %526.1;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %529 = cast(%527, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %530 = reshape(%528, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %531 = reshape(%529, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %532 = @func_2967(%530, %531) /* ty=(Tensor[(2688), float64],) */;
  %533 = @func_3628() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */;
  %534 = %532.0;
  %535 = %533.0;
  (%527, %534, %535)
}

def @func_262(%var_250: Tensor[(7, 7, 4), uint16], %var_251: Tensor[(7, 7, 4), uint16]) -> Tensor[(7, 7, 4), bool] {
  %536 = cast(%var_251, dtype="bool") /* ty=Tensor[(7, 7, 4), bool] */;
  %537 = shape_of(%var_250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %538 = cast(%var_250, dtype="bool") /* ty=Tensor[(7, 7, 4), bool] */;
  %539 = dyn.reshape(%536, %537, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%538, %539) /* ty=Tensor[(7, 7, 4), bool] */
}

def @func_3028() -> (Tensor[(5, 5, 4), float64], Tensor[(2688), float64]) {
  %540 = @func_2180() /* ty=(Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %541 = %540.1;
  %542 = @func_2013() /* ty=Tensor[(2688), float64] */;
  (%541, %542)
}

def @func_4407() -> (Tensor[(4, 2, 10), float32], Tensor[(2688), float32]) {
  %543 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %544 = @func_3154() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) */;
  %545 = %543.1;
  %546 = %544.2;
  (%545, %546)
}

def @func_2013() -> Tensor[(2688), float64] {
  %547 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %547.1
}

def @func_4339() -> (Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) {
  %548 = @func_3614() /* ty=(Tensor[(180), float64],) */;
  %549 = @func_3028() /* ty=(Tensor[(5, 5, 4), float64], Tensor[(2688), float64]) */;
  %550 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
  %551 = %550.0;
  %552 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
  %553 = %552.1;
  %554 = cast(%553, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %555 = shape_of(%551, dtype="int32") /* ty=Tensor[(1), int32] */;
  %556 = cast(%551, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?), float64] */;
  %558 = cast(%551, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %559 = rsqrt(%558) /* ty=Tensor[(2688), float32] */;
  %560 = cast(%559, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %561 = %548.0;
  %562 = %549.0;
  %563 = minimum(%556, %557) /* ty=Tensor[(2688), float64] */;
  %564 = sin(%560) /* ty=Tensor[(2688), float32] */;
  (%561, %562, %563, %564)
}

def @func_5829() -> (Tensor[(180), float64],) {
  %565 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %566 = %565.2;
  (%566,)
}

def @func_4346() -> (Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) {
  %567 = @func_4264() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %568 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %569 = reshape(%568, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %570 = @func_2038(%569) /* ty=(Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) */;
  %571 = %567.0;
  %572 = %570.0;
  (%571, %572, meta[relay.Constant][33] /* ty=Tensor[(7, 2), float32] */)
}

def @func_3614() -> (Tensor[(180), float64],) {
  %573 = @func_3154() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) */;
  %574 = %573.1;
  (%574,)
}

def @func_5480() -> (Tensor[(12, 16, 14), int8],) {
  %575 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %576 = %575.0;
  (%576,)
}

def @func_5859() -> (Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %577 = @func_5080() /* ty=(Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %578 = @func_5503() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) */;
  %579 = %577.1;
  %580 = %578.0;
  (%579, %580)
}

def @func_6757() -> (Tensor[(378), uint8], Tensor[(180), float64]) {
  %581 = @func_5232() /* ty=(Tensor[(378), uint8],) */;
  %582 = @func_3614() /* ty=(Tensor[(180), float64],) */;
  %583 = %581.0;
  %584 = %582.0;
  (%583, %584)
}

def @func_624(%var_612: Tensor[(9, 7, 6), uint8]) -> (Tensor[(9, 7, 6), bool],) {
  %585 = cast(meta[relay.Constant][34] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %586 = cast(%var_612, dtype="uint8") /* ty=Tensor[(9, 7, 6), uint8] */;
  %587 = right_shift(%585, %586) /* ty=Tensor[(9, 7, 6), uint8] */;
  %588 = cast(meta[relay.Constant][34] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %589 = cast(%587, dtype="bool") /* ty=Tensor[(9, 7, 6), bool] */;
  %590 = greater(%588, %589) /* ty=Tensor[(9, 7, 6), bool] */;
  (%590,)
}

def @func_5805(%var_5801: Tensor[(4, 1), uint8]) -> (Tensor[(4, 1), uint8],) {
  %591 = cast(meta[relay.Constant][35] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %592 = cast(%var_5801, dtype="uint8") /* ty=Tensor[(4, 1), uint8] */;
  %593 = bitwise_or(%591, %592) /* ty=Tensor[(4, 1), uint8] */;
  (%593,)
}

def @func_4136(%var_4096: Tensor[(14, 5, 8), float64]) -> (Tensor[(14, 5, 8), float64], Tensor[(14, 5, 8), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) {
  %594 = cast(%var_4096, dtype="float64") /* ty=Tensor[(14, 5, 8), float64] */;
  %595 = cast(%var_4096, dtype="float32") /* ty=Tensor[(14, 5, 8), float32] */;
  %596 = cast(meta[relay.Constant][36] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %597 = reshape(%596, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %598 = @func_753(%597) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %599 = log(%594) /* ty=Tensor[(14, 5, 8), float64] */;
  %600 = rsqrt(%595) /* ty=Tensor[(14, 5, 8), float32] */;
  %601 = %598.0;
  (%599, %600, %601, meta[relay.Constant][36] /* ty=Tensor[(2688), float64] */)
}

def @func_6767(%var_6759: Tensor[(4, 11, 13), float32], %var_6760: Tensor[(4, 11, 13), float32]) -> (Tensor[(4, 11, 13), float32], Tensor[(4, 2, 10), float32]) {
  %602 = cast(%var_6760, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %603 = shape_of(%var_6759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%var_6759, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %606 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %607 = mod(%604, %605) /* ty=Tensor[(4, 11, 13), float32] */;
  %608 = %606.0;
  (%607, %608)
}

def @func_1854(%var_1849: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), bool],) {
  %609 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %610 = %609.0;
  %611 = cast(%var_1849, dtype="bool") /* ty=Tensor[(4, 2, 10), bool] */;
  %612 = shape_of(%610, dtype="int32") /* ty=Tensor[(3), int32] */;
  %613 = cast(%610, dtype="bool") /* ty=Tensor[(4, 2, 10), bool] */;
  %614 = dyn.reshape(%611, %612, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %615 = not_equal(%613, %614) /* ty=Tensor[(4, 2, 10), bool] */;
  (%615,)
}

def @func_4052() -> (Tensor[(3, 9, 12), float64],) {
  %616 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
  %617 = %616.0;
  (%617,)
}

def @func_3479() -> Tensor[(4, 2, 10), float32] {
  %618 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %618.0
}

def @func_1399(%var_1346: Tensor[(16, 10, 4), float32], %var_1375: Tensor[(378), uint8], %var_1391: Tensor[(180), float64]) -> (Tensor[(16, 10, 4), float64], Tensor[(9, 7, 6), bool], Tensor[(378), uint8], Tensor[(12, 16, 14), int8], Tensor[(1, 2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
  %619 = cast(%var_1346, dtype="float32") /* ty=Tensor[(16, 10, 4), float32] */;
  %620 = acosh(%619) /* ty=Tensor[(16, 10, 4), float32] */;
  %621 = cast(%620, dtype="float64") /* ty=Tensor[(16, 10, 4), float64] */;
  %622 = cast(%var_1375, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %623 = reshape(%622, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
  %624 = @func_624(%623) /* ty=(Tensor[(9, 7, 6), bool],) */;
  %625 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 2688), float64] */, dtype="float64") /* ty=Tensor[(1, 2688), float64] */;
  %626 = reshape(%625, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %627 = @func_753(%626) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %628 = cast(%var_1391, dtype="float64") /* ty=Tensor[(180), float64] */;
  %629 = reshape(%628, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %630 = log2(%621) /* ty=Tensor[(16, 10, 4), float64] */;
  %631 = %624.0;
  %632 = %627.1;
  %633 = @func_432(%629) /* ty=Tensor[(6, 3, 10), float64] */;
  (%630, %631, %var_1375, %632, meta[relay.Constant][37] /* ty=Tensor[(1, 2688), float64] */, %633, %var_1391)
}

def @func_2512(%var_2507: Tensor[(2, 11, 16), float32], %var_2508: Tensor[(2, 11, 16), float32]) -> Tensor[(2, 11, 16), float32] {
  %634 = cast(%var_2508, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %635 = shape_of(%var_2507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %636 = cast(%var_2507, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
  %637 = dyn.reshape(%634, %635, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%636, %637) /* ty=Tensor[(2, 11, 16), float32] */
}

def @func_5232() -> (Tensor[(378), uint8],) {
  %638 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %639 = %638.2;
  (%639,)
}

def @func_6298(%var_6268: uint32, %var_6284: Tensor[(280), uint16], %var_6285: Tensor[(56), uint64]) -> (Tensor[(6, 11, 12), uint32], Tensor[(6, 11, 12), float32], Tensor[(4, 2, 10), float32], Tensor[(280), uint16], Tensor[(56), uint64], Tensor[(6, 11, 12), uint64]) {
  %640 = cast(%var_6268, dtype="uint32") /* ty=uint32 */;
  %641 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 11, 12), uint32] */, dtype="uint32") /* ty=Tensor[(6, 11, 12), uint32] */;
  %642 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 11, 12), uint32] */, dtype="float32") /* ty=Tensor[(6, 11, 12), float32] */;
  %643 = cast(%var_6268, dtype="uint16") /* ty=uint16 */;
  %644 = cast(%var_6284, dtype="uint16") /* ty=Tensor[(280), uint16] */;
  %645 = cast(%var_6285, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %646 = reshape(%643, newshape=[]) /* ty=uint16 */;
  %647 = reshape(%644, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), uint16] */;
  %648 = reshape(%645, newshape=[56]) /* ty=Tensor[(56), uint64] */;
  %649 = @func_5759(%646, %647, %648) /* ty=(Tensor[(14, 4, 5), float32], Tensor[(4, 2, 10), float32], Tensor[(14), float32], Tensor[(378), uint8], Tensor[(100), float64], Tensor[(4, 2, 10), float32], Tensor[(56), float32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %650 = cast(%var_6268, dtype="uint64") /* ty=uint64 */;
  %651 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 11, 12), uint32] */, dtype="uint64") /* ty=Tensor[(6, 11, 12), uint64] */;
  %652 = logical_xor(%640, %641) /* ty=Tensor[(6, 11, 12), uint32] */;
  %653 = atan(%642) /* ty=Tensor[(6, 11, 12), float32] */;
  %654 = %649.5;
  %655 = bitwise_and(%650, %651) /* ty=Tensor[(6, 11, 12), uint64] */;
  (%652, %653, %654, %var_6284, %var_6285, %655)
}

def @func_102(%var_98: Tensor[(5, 5, 4), float64]) -> Tensor[(5, 5, 4), float64] {
  %656 = cast(%var_98, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  sin(%656) /* ty=Tensor[(5, 5, 4), float64] */
}

def @func_3428(%var_3424: Tensor[(14, 5, 4), uint32]) -> (Tensor[(14, 5, 4), uint32],) {
  %657 = cast(%var_3424, dtype="uint32") /* ty=Tensor[(14, 5, 4), uint32] */;
  %658 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(14, 5, 4), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %659 = cast(meta[relay.Constant][39] /* ty=Tensor[(14, 5, 4), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 4), uint32] */;
  %660 = dyn.reshape(%657, %658, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %661 = bitwise_and(%659, %660) /* ty=Tensor[(14, 5, 4), uint32] */;
  (%661,)
}

def @func_6332() -> (Tensor[(2688), float64], Tensor[(2688), float64]) {
  %662 = @func_4339() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) */;
  %663 = @func_5080() /* ty=(Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %664 = %662.2;
  %665 = %663.1;
  (%664, %665)
}

def @func_1703() -> (Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %666 = cast(meta[relay.Constant][40] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %667 = reshape(%666, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %668 = @func_753(%667) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %669 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %670 = %669.0;
  %671 = cast(%670, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %672 = %668.1;
  %673 = asinh(%671) /* ty=Tensor[(4, 2, 10), float32] */;
  (%672, meta[relay.Constant][40] /* ty=Tensor[(2688), float64] */, %673)
}

def @func_2122() -> (Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
  %674 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %675 = cast(meta[relay.Constant][41] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %676 = reshape(%675, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %677 = %674.1;
  %678 = @func_432(%676) /* ty=Tensor[(6, 3, 10), float64] */;
  (%677, %678, meta[relay.Constant][41] /* ty=Tensor[(180), float64] */)
}

def @func_2874() -> (Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) {
  %679 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %680 = %679.1;
  %681 = @func_2180() /* ty=(Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %684 = shape_of(%680, dtype="int32") /* ty=Tensor[(1), int32] */;
  %685 = cast(%680, dtype="bool") /* ty=Tensor[(2688), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?), bool] */;
  %687 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %688 = equal(%685, %686) /* ty=Tensor[(2688), bool] */;
  %689 = %687.0;
  (%688, %689)
}

def @func_5119() -> Tensor[(2688), float32] {
  %690 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %691 = cast(meta[relay.Constant][42] /* ty=Tensor[(2688), float64] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %692 = shape_of(%690, dtype="int32") /* ty=Tensor[(1), int32] */;
  %693 = cast(%690, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?), float32] */;
  multiply(%693, %694) /* ty=Tensor[(2688), float32] */
}

def @func_6854(%var_6844: Tensor[(2688), float64]) -> (Tensor[(2688), float32], Tensor[(180), float64]) {
  %695 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %696 = %695.1;
  %697 = cast(%var_6844, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %698 = shape_of(%696, dtype="int32") /* ty=Tensor[(1), int32] */;
  %699 = cast(%696, dtype="float32") /* ty=Tensor[(2688), float32] */;
  %700 = dyn.reshape(%697, %698, newshape=[]) /* ty=Tensor[(?), float32] */;
  %701 = @func_5209() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */;
  %702 = mod(%699, %700) /* ty=Tensor[(2688), float32] */;
  %703 = %701.1;
  (%702, %703)
}

def @func_3863(%var_3734: Tensor[(16, 11, 8), int16], %var_3756: Tensor[(1, 2250), float64], %var_3758: Tensor[(672, 4), float64]) -> (Tensor[(16, 11, 8), bool], Tensor[(378), uint8], Tensor[(864), uint32], Tensor[(1, 2250), float64], Tensor[(864), uint32], Tensor[(672, 4), float64], Tensor[(16, 11, 8), float64], Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(4, 88), float32], Tensor[(12, 16, 14), float32], Tensor[(2, 11, 16), float64]) {
  %704 = cast(%var_3734, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %705 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 8), int16] */, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %708 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %709 = cast(%var_3756, dtype="float64") /* ty=Tensor[(1, 2250), float64] */;
  %710 = cast(meta[relay.Constant][44] /* ty=Tensor[(864), uint32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %711 = cast(%var_3758, dtype="float64") /* ty=Tensor[(672, 4), float64] */;
  %712 = cast(%var_3758, dtype="float64") /* ty=Tensor[(672, 4), float64] */;
  %713 = reshape(%709, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %714 = reshape(%710, newshape=[864]) /* ty=Tensor[(864), uint32] */;
  %715 = reshape(%711, newshape=[96, 28]) /* ty=Tensor[(96, 28), float64] */;
  %716 = reshape(%712, newshape=[96, 28]) /* ty=Tensor[(96, 28), float64] */;
  %717 = @func_1972(%713, %714, %715, %716) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(6, 3, 10), float64], Tensor[(100), float64], Tensor[(864), uint32], Tensor[(96, 28), int8]) */;
  %718 = cast(%var_3734, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %719 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 8), int16] */, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %722 = greater(%720, %721) /* ty=Tensor[(16, 11, 8), bool] */;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(16, 11, 8), float64] */;
  %724 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 11, 8), int16] */, dtype="float64") /* ty=Tensor[(16, 11, 8), float64] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %727 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
  %728 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %729 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %730 = %729.0;
  %731 = cast(%730, dtype="float64") /* ty=Tensor[(12, 16, 14), float64] */;
  %732 = reshape(%731, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %733 = @func_2661(%732) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) */;
  %734 = cast(meta[relay.Constant][45] /* ty=Tensor[(4, 88), float32] */, dtype="float32") /* ty=Tensor[(4, 88), float32] */;
  %735 = reshape(%734, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %736 = @func_2608(%735) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
  %737 = %736.1;
  %738 = cast(%737, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
  %739 = tan(%738) /* ty=Tensor[(2, 11, 16), float64] */;
  %740 = cast(%739, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
  %741 = greater_equal(%706, %707) /* ty=Tensor[(16, 11, 8), bool] */;
  %742 = %708.2;
  %743 = %717.3;
  %744 = subtract(%725, %726) /* ty=Tensor[(16, 11, 8), float64] */;
  %745 = %727.0;
  %746 = %728.0;
  %747 = %733.1;
  %748 = exp(%740) /* ty=Tensor[(2, 11, 16), float64] */;
  (%741, %742, %743, %var_3756, meta[relay.Constant][44] /* ty=Tensor[(864), uint32] */, %var_3758, %744, %745, %746, %730, meta[relay.Constant][45] /* ty=Tensor[(4, 88), float32] */, %747, %748)
}

def @func_2661(%var_2657: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) {
  %749 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %750 = cast(%var_2657, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %751 = reshape(%750, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %752 = @func_753(%751) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %753 = %749.0;
  %754 = %752.0;
  (%753, %754, %var_2657)
}

def @func_2763() -> Tensor[(12, 16, 14), int8] {
  %755 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %755.0
}

def @func_6252() -> (Tensor[(4, 2, 10), float32],) {
  %756 = @func_4957() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) */;
  %757 = %756.0;
  (%757,)
}

def @func_3572() -> (Tensor[(4, 2, 10), float32], Tensor[(4, 2, 10), float32], Tensor[(3, 9, 12), float64]) {
  %758 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %759 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
  %760 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
  %761 = %758.0;
  %762 = %759.1;
  %763 = %760.0;
  (%761, %762, %763)
}

def @func_6915() -> Tensor[(4, 2, 10), float32] {
  %764 = @func_4015() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %764.0
}

def @func_5651(%var_5631: Tensor[(80), float32]) -> (Tensor[(2688), float64], Tensor[(4, 2, 10), bool], Tensor[(80), float32]) {
  %765 = @func_5338() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(378), uint8]) */;
  %766 = cast(%var_5631, dtype="float32") /* ty=Tensor[(80), float32] */;
  %767 = reshape(%766, newshape=[1, 80]) /* ty=Tensor[(1, 80), float32] */;
  %768 = @func_3313(%767) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 2, 10), bool]) */;
  %769 = %765.1;
  %770 = %768.2;
  (%769, %770, %var_5631)
}

def @func_2038(%var_2026: Tensor[(7, 1, 2), float32]) -> (Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) {
  %771 = cast(%var_2026, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
  %772 = log10(%771) /* ty=Tensor[(7, 1, 2), float32] */;
  %773 = cast(%var_2026, dtype="int8") /* ty=Tensor[(7, 1, 2), int8] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(3), int32] */;
  %775 = cast(%772, dtype="int8") /* ty=Tensor[(7, 1, 2), int8] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %777 = cast(%772, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
  %778 = shape_of(%var_2026, dtype="int32") /* ty=Tensor[(3), int32] */;
  %779 = cast(%var_2026, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
  %780 = dyn.reshape(%777, %778, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %781 = maximum(%775, %776) /* ty=Tensor[(7, ?, 2), int8] */;
  %782 = divide(%779, %780) /* ty=Tensor[(7, ?, 2), float32] */;
  (%781, %782)
}

def @func_5797() -> (Tensor[(4, 2, 10), float32],) {
  %783 = @func_3479() /* ty=Tensor[(4, 2, 10), float32] */;
  (%783,)
}

def @func_4502() -> Tensor[(12, 16, 14), int8] {
  %784 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %784.0
}

def @func_3727() -> Tensor[(2688), float64] {
  %785 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
  %785.0
}

def @func_2374(%var_2298: Tensor[(14), float32], %var_2313: Tensor[(56), uint64], %var_2338: Tensor[(378), uint8], %var_2355: Tensor[(100), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) {
  %786 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %787 = cast(%var_2298, dtype="float32") /* ty=Tensor[(14), float32] */;
  %788 = reshape(%787, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %789 = @func_2038(%788) /* ty=(Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) */;
  %790 = cast(%var_2313, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %791 = cast(%var_2313, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %792 = cast(meta[relay.Constant][46] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %793 = reshape(%790, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %794 = reshape(%791, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %795 = reshape(%792, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %796 = @func_897(%793, %794, %795) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) */;
  %797 = cast(%var_2338, dtype="float64") /* ty=Tensor[(378), float64] */;
  %798 = shape_of(meta[relay.Constant][46] /* ty=Tensor[(378), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %799 = cast(meta[relay.Constant][46] /* ty=Tensor[(378), uint8] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %800 = dyn.reshape(%797, %798, newshape=[]) /* ty=Tensor[(?), float64] */;
  %801 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %802 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %803 = cast(%802, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %804 = reshape(%803, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %805 = @func_753(%804) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %806 = cast(%var_2355, dtype="float64") /* ty=Tensor[(100), float64] */;
  %807 = reshape(%806, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %808 = %786.0;
  %809 = %789.1;
  %810 = %796.1;
  %811 = power(%799, %800) /* ty=Tensor[(378), float64] */;
  %812 = %801.0;
  %813 = %805.1;
  %814 = @func_102(%807) /* ty=Tensor[(5, 5, 4), float64] */;
  (%808, %809, %var_2298, %810, %var_2313, %811, %812, %802, %813, %814, %var_2355)
}

def @func_6361(%var_6351: Tensor[(1, 8, 1), float32], %var_6352: Tensor[(14, 8, 5), float32], %var_6357: Tensor[(15, 8, 1), float32]) -> (Tensor[(14, 8, 5), float32], Tensor[(15, 8, 1), float32]) {
  %815 = cast(%var_6351, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
  %816 = cast(%var_6352, dtype="float32") /* ty=Tensor[(14, 8, 5), float32] */;
  %817 = cast(%var_6351, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
  %818 = cast(%var_6357, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %819 = power(%815, %816) /* ty=Tensor[(14, 8, 5), float32] */;
  %820 = maximum(%817, %818) /* ty=Tensor[(15, 8, 1), float32] */;
  (%819, %820)
}

def @func_3236() -> (Tensor[(12, 16, 14), int8],) {
  %821 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %822 = %821.0;
  (%822,)
}

def @func_6530(%var_6526: Tensor[(2688), int8]) -> (Tensor[(180), float64], Tensor[(9, 7, 6), bool], Tensor[(2688), int8]) {
  %823 = @func_3614() /* ty=(Tensor[(180), float64],) */;
  %824 = cast(%var_6526, dtype="int8") /* ty=Tensor[(2688), int8] */;
  %825 = reshape(%824, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int8] */;
  %826 = @func_4086(%825) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) */;
  %827 = %823.0;
  %828 = %826.0;
  (%827, %828, %var_6526)
}

def @func_6221() -> Tensor[(2688), float64] {
  %829 = @func_5859() /* ty=(Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %829.0
}

def @func_4086(%var_4078: Tensor[(12, 16, 14), int8]) -> (Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) {
  %830 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %831 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %832 = %831.0;
  %833 = cast(%var_4078, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %834 = shape_of(%832, dtype="int32") /* ty=Tensor[(3), int32] */;
  %835 = cast(%832, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %836 = dyn.reshape(%833, %834, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %837 = %830.1;
  %838 = not_equal(%835, %836) /* ty=Tensor[(12, 16, 14), bool] */;
  (%837, %838)
}

def @func_2747() -> (Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) {
  %839 = cast(meta[relay.Constant][47] /* ty=Tensor[(3, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %840 = log10(%839) /* ty=Tensor[(3, 9, 12), float64] */;
  %841 = @func_2013() /* ty=Tensor[(2688), float64] */;
  (%840, %841)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6054() -> (Tensor[(12, 16, 14), int8],) {
  %0 = @func_4502() /* ty=Tensor[(12, 16, 14), int8] */;
  (%0,)
}

def @func_1589(%var_1588: Tensor[(6, 3, 7), float32]) -> (Tensor[(6, 3, 7), float32],) {
  %3 = fn (%var_1580: Tensor[(6, 3, 7), float32]) -> (Tensor[(6, 3, 7), float32],) {
    %1 = cast(%var_1580, dtype="float32") /* ty=Tensor[(6, 3, 7), float32] */;
    %2 = exp(%1) /* ty=Tensor[(6, 3, 7), float32] */;
    (%2,)
  };
  %3(%var_1588) /* ty=(Tensor[(6, 3, 7), float32],) */
}

def @func_5080() -> (Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %4 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
  %5 = %4.1;
  %6 = cast(%5, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %7 = cast(%5, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %8 = reshape(%6, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %9 = reshape(%7, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %10 = @func_2967(%8, %9) /* ty=(Tensor[(2688), float64],) */;
  %11 = @func_3628() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */;
  %12 = %10.0;
  %13 = %11.0;
  (%5, %12, %13)
}

def @func_4346() -> (Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) {
  %14 = @func_4264() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %15 = cast(meta[relay.Constant][0] /* ty=Tensor[(7, 2), float32] */, dtype="float32") /* ty=Tensor[(7, 2), float32] */;
  %16 = reshape(%15, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %17 = @func_2038(%16) /* ty=(Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) */;
  %18 = %14.0;
  %19 = %17.0;
  (%18, %19, meta[relay.Constant][0] /* ty=Tensor[(7, 2), float32] */)
}

def @func_2230() -> (Tensor[(4, 2, 10), float32],) {
  %22 = fn () -> (Tensor[(4, 2, 10), float32],) {
    %20 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %21 = %20.2;
    (%21,)
  };
  %22() /* ty=(Tensor[(4, 2, 10), float32],) */
}

def @func_753(%var_710: Tensor[(12, 16, 14), float64]) -> (Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) {
  %23 = cast(%var_710, dtype="float64") /* ty=Tensor[(12, 16, 14), float64] */;
  %24 = atanh(%23) /* ty=Tensor[(12, 16, 14), float64] */;
  %25 = cast(%24, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %26 = shape_of(%var_710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%var_710, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %29 = logical_and(%27, %28) /* ty=Tensor[(12, 16, 14), bool] */;
  %30 = cast(%29, dtype="uint32") /* ty=Tensor[(12, 16, 14), uint32] */;
  %31 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %32 = cast(%24, dtype="uint32") /* ty=Tensor[(12, 16, 14), uint32] */;
  %33 = dyn.reshape(%30, %31, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %34 = left_shift(%32, %33) /* ty=Tensor[(12, 16, 14), uint32] */;
  %35 = cast(%34, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
  %36 = cast(%24, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
  %37 = shape_of(%var_710, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%var_710, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %40 = sqrt(%35) /* ty=Tensor[(12, 16, 14), float32] */;
  %41 = minimum(%38, %39) /* ty=Tensor[(12, 16, 14), int8] */;
  (%40, %41)
}

def @func_5861() -> (Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  @func_5859() /* ty=(Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */
}

def @func_2661(%var_2657: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) {
  %42 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %43 = cast(%var_2657, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %44 = reshape(%43, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %45 = @func_753(%44) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %46 = %42.0;
  %47 = %45.0;
  (%46, %47, %var_2657)
}

def @func_4957() -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) {
  %48 = @func_3628() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */;
  %49 = @func_3614() /* ty=(Tensor[(180), float64],) */;
  %50 = @func_4346() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) */;
  %51 = %50.1;
  %52 = cast(%51, dtype="float64") /* ty=Tensor[(7, ?, 2), float64] */;
  %53 = sqrt(%52) /* ty=Tensor[(7, ?, 2), float64] */;
  %54 = cast(%51, dtype="float64") /* ty=Tensor[(7, ?, 2), float64] */;
  %55 = shape_of(%53, dtype="int32") /* ty=Tensor[(3), int32] */;
  %56 = cast(%53, dtype="float64") /* ty=Tensor[(7, ?, 2), float64] */;
  %57 = dyn.reshape(%54, %55, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %58 = %48.0;
  %59 = %49.0;
  %60 = floor_mod(%56, %57) /* ty=Tensor[(7, ?, 2), float64] */;
  (%58, %59, %60)
}

def @func_6361(%var_6351: Tensor[(1, 8, 1), float32], %var_6352: Tensor[(14, 8, 5), float32], %var_6357: Tensor[(15, 8, 1), float32]) -> (Tensor[(14, 8, 5), float32], Tensor[(15, 8, 1), float32]) {
  %61 = cast(%var_6351, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
  %62 = cast(%var_6352, dtype="float32") /* ty=Tensor[(14, 8, 5), float32] */;
  %63 = cast(%var_6351, dtype="float32") /* ty=Tensor[(1, 8, 1), float32] */;
  %64 = cast(%var_6357, dtype="float32") /* ty=Tensor[(15, 8, 1), float32] */;
  %65 = power(%61, %62) /* ty=Tensor[(14, 8, 5), float32] */;
  %66 = maximum(%63, %64) /* ty=Tensor[(15, 8, 1), float32] */;
  (%65, %66)
}

def @func_5082() -> (Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  @func_5080() /* ty=(Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */
}

def @func_6333() -> (Tensor[(2688), float64], Tensor[(2688), float64]) {
  %71 = fn () -> (Tensor[(2688), float64], Tensor[(2688), float64]) {
    %67 = @func_4339() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) */;
    %68 = @func_5080() /* ty=(Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %69 = %67.2;
    %70 = %68.1;
    (%69, %70)
  };
  %71() /* ty=(Tensor[(2688), float64], Tensor[(2688), float64]) */
}

def @func_5799() -> (Tensor[(4, 2, 10), float32],) {
  @func_5797() /* ty=(Tensor[(4, 2, 10), float32],) */
}

def @func_6869() -> Tensor[(12, 16, 14), int8] {
  @func_6867() /* ty=Tensor[(12, 16, 14), int8] */
}

def @func_3316(%var_3314: Tensor[(1, 80), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 2, 10), bool]) {
  @func_3313(%var_3314) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 2, 10), bool]) */
}

def @func_3690(%var_3688: Tensor[(66), float32]) -> (Tensor[(100), float64], Tensor[(2, 3, 11), float32], Tensor[(66), float32]) {
  @func_3687(%var_3688) /* ty=(Tensor[(100), float64], Tensor[(2, 3, 11), float32], Tensor[(66), float32]) */
}

def @func_4136(%var_4096: Tensor[(14, 5, 8), float64]) -> (Tensor[(14, 5, 8), float64], Tensor[(14, 5, 8), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) {
  %72 = cast(%var_4096, dtype="float64") /* ty=Tensor[(14, 5, 8), float64] */;
  %73 = cast(%var_4096, dtype="float32") /* ty=Tensor[(14, 5, 8), float32] */;
  %74 = cast(meta[relay.Constant][1] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %75 = reshape(%74, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %76 = @func_753(%75) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %77 = log(%72) /* ty=Tensor[(14, 5, 8), float64] */;
  %78 = rsqrt(%73) /* ty=Tensor[(14, 5, 8), float32] */;
  %79 = %76.0;
  (%77, %78, %79, meta[relay.Constant][1] /* ty=Tensor[(2688), float64] */)
}

def @func_6302(%var_6299: uint32, %var_6300: Tensor[(280), uint16], %var_6301: Tensor[(56), uint64]) -> (Tensor[(6, 11, 12), uint32], Tensor[(6, 11, 12), float32], Tensor[(4, 2, 10), float32], Tensor[(280), uint16], Tensor[(56), uint64], Tensor[(6, 11, 12), uint64]) {
  %96 = fn (%var_6268: uint32, %var_6284: Tensor[(280), uint16], %var_6285: Tensor[(56), uint64]) -> (Tensor[(6, 11, 12), uint32], Tensor[(6, 11, 12), float32], Tensor[(4, 2, 10), float32], Tensor[(280), uint16], Tensor[(56), uint64], Tensor[(6, 11, 12), uint64]) {
    %80 = cast(%var_6268, dtype="uint32") /* ty=uint32 */;
    %81 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 11, 12), uint32] */, dtype="uint32") /* ty=Tensor[(6, 11, 12), uint32] */;
    %82 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 11, 12), uint32] */, dtype="float32") /* ty=Tensor[(6, 11, 12), float32] */;
    %83 = cast(%var_6268, dtype="uint16") /* ty=uint16 */;
    %84 = cast(%var_6284, dtype="uint16") /* ty=Tensor[(280), uint16] */;
    %85 = cast(%var_6285, dtype="uint64") /* ty=Tensor[(56), uint64] */;
    %86 = reshape(%83, newshape=[]) /* ty=uint16 */;
    %87 = reshape(%84, newshape=[14, 4, 5]) /* ty=Tensor[(14, 4, 5), uint16] */;
    %88 = reshape(%85, newshape=[56]) /* ty=Tensor[(56), uint64] */;
    %89 = @func_5759(%86, %87, %88) /* ty=(Tensor[(14, 4, 5), float32], Tensor[(4, 2, 10), float32], Tensor[(14), float32], Tensor[(378), uint8], Tensor[(100), float64], Tensor[(4, 2, 10), float32], Tensor[(56), float32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %90 = cast(%var_6268, dtype="uint64") /* ty=uint64 */;
    %91 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 11, 12), uint32] */, dtype="uint64") /* ty=Tensor[(6, 11, 12), uint64] */;
    %92 = logical_xor(%80, %81) /* ty=Tensor[(6, 11, 12), uint32] */;
    %93 = atan(%82) /* ty=Tensor[(6, 11, 12), float32] */;
    %94 = %89.5;
    %95 = bitwise_and(%90, %91) /* ty=Tensor[(6, 11, 12), uint64] */;
    (%92, %93, %94, %var_6284, %var_6285, %95)
  };
  %96(%var_6299, %var_6300, %var_6301) /* ty=(Tensor[(6, 11, 12), uint32], Tensor[(6, 11, 12), float32], Tensor[(4, 2, 10), float32], Tensor[(280), uint16], Tensor[(56), uint64], Tensor[(6, 11, 12), uint64]) */
}

def @func_5012(%var_5010: Tensor[(66), float32], %var_5011: Tensor[(2688), float64]) -> (Tensor[(7, ?, 2), int8], Tensor[(2, 3, 11), float32], uint32, Tensor[(20, 1), uint32], Tensor[(80), float32], Tensor[(66), float32], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32], Tensor[(108), float32]) {
  %117 = fn (%var_4984: Tensor[(66), float32], %var_4998: Tensor[(2688), float64]) -> (Tensor[(7, ?, 2), int8], Tensor[(2, 3, 11), float32], uint32, Tensor[(20, 1), uint32], Tensor[(80), float32], Tensor[(66), float32], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32], Tensor[(108), float32]) {
    %97 = @func_4346() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) */;
    %98 = cast(meta[relay.Constant][3] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %99 = cast(meta[relay.Constant][4] /* ty=Tensor[(20, 1), uint32] */, dtype="uint32") /* ty=Tensor[(20, 1), uint32] */;
    %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(80), float32] */, dtype="float32") /* ty=Tensor[(80), float32] */;
    %101 = cast(%var_4984, dtype="float32") /* ty=Tensor[(66), float32] */;
    %102 = reshape(%98, newshape=[]) /* ty=uint32 */;
    %103 = reshape(%99, newshape=[2, 1, 10]) /* ty=Tensor[(2, 1, 10), uint32] */;
    %104 = reshape(%100, newshape=[80]) /* ty=Tensor[(80), float32] */;
    %105 = reshape(%101, newshape=[66]) /* ty=Tensor[(66), float32] */;
    %106 = @func_3207(%102, %103, %104, %105) /* ty=(Tensor[(2, 1, 10), bool], Tensor[(4, 2, 10), bool], Tensor[(80), float32], Tensor[(2, 3, 11), float32], Tensor[(66), float32], Tensor[(352), float32], Tensor[(2, 11, 16), float64]) */;
    %107 = cast(%var_4998, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %108 = reshape(%107, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
    %109 = @func_753(%108) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
    %110 = cast(meta[relay.Constant][6] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %111 = reshape(%110, newshape=[1, 12, 9]) /* ty=Tensor[(1, 12, 9), float32] */;
    %112 = @func_3002(%111) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(?, 12, 9), bool]) */;
    %113 = %97.1;
    %114 = %106.3;
    %115 = %109.1;
    %116 = %112.0;
    (%113, %114, meta[relay.Constant][3] /* ty=uint32 */, meta[relay.Constant][4] /* ty=Tensor[(20, 1), uint32] */, meta[relay.Constant][5] /* ty=Tensor[(80), float32] */, %var_4984, %115, %var_4998, %116, meta[relay.Constant][6] /* ty=Tensor[(108), float32] */)
  };
  %117(%var_5010, %var_5011) /* ty=(Tensor[(7, ?, 2), int8], Tensor[(2, 3, 11), float32], uint32, Tensor[(20, 1), uint32], Tensor[(80), float32], Tensor[(66), float32], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32], Tensor[(108), float32]) */
}

def @func_2122() -> (Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
  %118 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %119 = cast(meta[relay.Constant][7] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
  %120 = reshape(%119, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
  %121 = %118.1;
  %122 = @func_432(%120) /* ty=Tensor[(6, 3, 10), float64] */;
  (%121, %122, meta[relay.Constant][7] /* ty=Tensor[(180), float64] */)
}

def @func_2610(%var_2609: Tensor[(352), float32]) -> (Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) {
  %142 = fn (%var_2587: Tensor[(352), float32]) -> (Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) {
    %123 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
    %124 = %123.1;
    %125 = cast(%124, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
    %126 = reshape(%125, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
    %127 = @func_624(%126) /* ty=(Tensor[(9, 7, 6), bool],) */;
    %128 = %127.0;
    %129 = cast(%124, dtype="bool") /* ty=Tensor[(378, 1), bool] */;
    %130 = shape_of(%128, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(%128, dtype="bool") /* ty=Tensor[(9, 7, 6), bool] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %133 = cast(%var_2587, dtype="float32") /* ty=Tensor[(352), float32] */;
    %134 = cast(%var_2587, dtype="float32") /* ty=Tensor[(352), float32] */;
    %135 = reshape(%133, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), float32] */;
    %136 = reshape(%134, newshape=[2, 11, 16]) /* ty=Tensor[(2, 11, 16), float32] */;
    %137 = cast(meta[relay.Constant][8] /* ty=Tensor[(100, 1), float64] */, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
    %138 = reshape(%137, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
    %139 = logical_or(%131, %132) /* ty=Tensor[(9, 7, 6), bool] */;
    %140 = @func_2512(%135, %136) /* ty=Tensor[(2, 11, 16), float32] */;
    %141 = @func_102(%138) /* ty=Tensor[(5, 5, 4), float64] */;
    (%139, %140, %var_2587, %141, meta[relay.Constant][8] /* ty=Tensor[(100, 1), float64] */)
  };
  %142(%var_2609) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */
}

def @func_262(%var_250: Tensor[(7, 7, 4), uint16], %var_251: Tensor[(7, 7, 4), uint16]) -> Tensor[(7, 7, 4), bool] {
  %143 = cast(%var_251, dtype="bool") /* ty=Tensor[(7, 7, 4), bool] */;
  %144 = shape_of(%var_250, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%var_250, dtype="bool") /* ty=Tensor[(7, 7, 4), bool] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%145, %146) /* ty=Tensor[(7, 7, 4), bool] */
}

def @func_6254() -> (Tensor[(4, 2, 10), float32],) {
  @func_6252() /* ty=(Tensor[(4, 2, 10), float32],) */
}

def @func_3474() -> (Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) {
  %153 = fn () -> (Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) {
    %147 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
    %148 = cast(meta[relay.Constant][9] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %149 = reshape(%148, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
    %150 = @func_624(%149) /* ty=(Tensor[(9, 7, 6), bool],) */;
    %151 = %147.1;
    %152 = %150.0;
    (%151, %152, meta[relay.Constant][9] /* ty=Tensor[(378), uint8] */)
  };
  %153() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */
}

def @func_4188(%var_4186: Tensor[(1, 1408), int16], %var_4187: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(1, 2250), float64], Tensor[(1, 1408), int16], Tensor[(2250), float64], Tensor[(2688), float64]) {
  @func_4184(%var_4186, %var_4187) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(1, 2250), float64], Tensor[(1, 1408), int16], Tensor[(2250), float64], Tensor[(2688), float64]) */
}

def @func_7011(%var_7009: Tensor[(11, 6, 14), float64], %var_7010: Tensor[(11, 6, 14), float64]) -> Tensor[(11, 6, 14), float32] {
  %160 = fn (%var_6953: Tensor[(11, 6, 14), float64], %var_6966: Tensor[(11, 6, 14), float64]) -> Tensor[(11, 6, 14), float32] {
    %154 = cast(%var_6953, dtype="float64") /* ty=Tensor[(11, 6, 14), float64] */;
    %155 = tan(%154) /* ty=Tensor[(11, 6, 14), float64] */;
    %156 = cast(%var_6966, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
    %157 = shape_of(%155, dtype="int32") /* ty=Tensor[(3), int32] */;
    %158 = cast(%155, dtype="float32") /* ty=Tensor[(11, 6, 14), float32] */;
    %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%158, %159) /* ty=Tensor[(11, 6, 14), float32] */
  };
  %160(%var_7009, %var_7010) /* ty=Tensor[(11, 6, 14), float32] */
}

def @func_6758() -> (Tensor[(378), uint8], Tensor[(180), float64]) {
  %165 = fn () -> (Tensor[(378), uint8], Tensor[(180), float64]) {
    %161 = @func_5232() /* ty=(Tensor[(378), uint8],) */;
    %162 = @func_3614() /* ty=(Tensor[(180), float64],) */;
    %163 = %161.0;
    %164 = %162.0;
    (%163, %164)
  };
  %165() /* ty=(Tensor[(378), uint8], Tensor[(180), float64]) */
}

def @func_4054() -> (Tensor[(3, 9, 12), float64],) {
  @func_4052() /* ty=(Tensor[(3, 9, 12), float64],) */
}

def @func_1703() -> (Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %166 = cast(meta[relay.Constant][10] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %167 = reshape(%166, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %168 = @func_753(%167) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %169 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %170 = %169.0;
  %171 = cast(%170, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %172 = %168.1;
  %173 = asinh(%171) /* ty=Tensor[(4, 2, 10), float32] */;
  (%172, meta[relay.Constant][10] /* ty=Tensor[(2688), float64] */, %173)
}

def @func_5233() -> (Tensor[(378), uint8],) {
  %176 = fn () -> (Tensor[(378), uint8],) {
    %174 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
    %175 = %174.2;
    (%175,)
  };
  %176() /* ty=(Tensor[(378), uint8],) */
}

def @func_2875() -> (Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) {
  %188 = fn () -> (Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) {
    %177 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %178 = %177.1;
    %179 = @func_2180() /* ty=(Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
    %180 = %179.0;
    %181 = cast(%180, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %182 = shape_of(%178, dtype="int32") /* ty=Tensor[(1), int32] */;
    %183 = cast(%178, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?), bool] */;
    %185 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %186 = equal(%183, %184) /* ty=Tensor[(2688), bool] */;
    %187 = %185.0;
    (%186, %187)
  };
  %188() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */
}

def @func_5654(%var_5652: Tensor[(80), float32]) -> (Tensor[(2688), float64], Tensor[(4, 2, 10), bool], Tensor[(80), float32]) {
  @func_5651(%var_5652) /* ty=(Tensor[(2688), float64], Tensor[(4, 2, 10), bool], Tensor[(80), float32]) */
}

def @func_3481() -> Tensor[(4, 2, 10), float32] {
  @func_3479() /* ty=Tensor[(4, 2, 10), float32] */
}

def @func_6222() -> Tensor[(2688), float64] {
  %190 = fn () -> Tensor[(2688), float64] {
    %189 = @func_5859() /* ty=(Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %189.0
  };
  %190() /* ty=Tensor[(2688), float64] */
}

def @func_6037() -> Tensor[(12, 16, 14), int8] {
  %191 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %191.0
}

def @func_3863(%var_3734: Tensor[(16, 11, 8), int16], %var_3756: Tensor[(1, 2250), float64], %var_3758: Tensor[(672, 4), float64]) -> (Tensor[(16, 11, 8), bool], Tensor[(378), uint8], Tensor[(864), uint32], Tensor[(1, 2250), float64], Tensor[(864), uint32], Tensor[(672, 4), float64], Tensor[(16, 11, 8), float64], Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(4, 88), float32], Tensor[(12, 16, 14), float32], Tensor[(2, 11, 16), float64]) {
  %192 = cast(%var_3734, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %193 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 11, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 11, 8), int16] */, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %196 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %197 = cast(%var_3756, dtype="float64") /* ty=Tensor[(1, 2250), float64] */;
  %198 = cast(meta[relay.Constant][12] /* ty=Tensor[(864), uint32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %199 = cast(%var_3758, dtype="float64") /* ty=Tensor[(672, 4), float64] */;
  %200 = cast(%var_3758, dtype="float64") /* ty=Tensor[(672, 4), float64] */;
  %201 = reshape(%197, newshape=[15, 10, 15]) /* ty=Tensor[(15, 10, 15), float64] */;
  %202 = reshape(%198, newshape=[864]) /* ty=Tensor[(864), uint32] */;
  %203 = reshape(%199, newshape=[96, 28]) /* ty=Tensor[(96, 28), float64] */;
  %204 = reshape(%200, newshape=[96, 28]) /* ty=Tensor[(96, 28), float64] */;
  %205 = @func_1972(%201, %202, %203, %204) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(6, 3, 10), float64], Tensor[(100), float64], Tensor[(864), uint32], Tensor[(96, 28), int8]) */;
  %206 = cast(%var_3734, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %207 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 11, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %208 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 11, 8), int16] */, dtype="bool") /* ty=Tensor[(16, 11, 8), bool] */;
  %209 = dyn.reshape(%206, %207, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %210 = greater(%208, %209) /* ty=Tensor[(16, 11, 8), bool] */;
  %211 = cast(%210, dtype="float64") /* ty=Tensor[(16, 11, 8), float64] */;
  %212 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(16, 11, 8), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(meta[relay.Constant][11] /* ty=Tensor[(16, 11, 8), int16] */, dtype="float64") /* ty=Tensor[(16, 11, 8), float64] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %215 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
  %216 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %217 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %218 = %217.0;
  %219 = cast(%218, dtype="float64") /* ty=Tensor[(12, 16, 14), float64] */;
  %220 = reshape(%219, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %221 = @func_2661(%220) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) */;
  %222 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 88), float32] */, dtype="float32") /* ty=Tensor[(4, 88), float32] */;
  %223 = reshape(%222, newshape=[352]) /* ty=Tensor[(352), float32] */;
  %224 = @func_2608(%223) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
  %225 = %224.1;
  %226 = cast(%225, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
  %227 = tan(%226) /* ty=Tensor[(2, 11, 16), float64] */;
  %228 = cast(%227, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
  %229 = greater_equal(%194, %195) /* ty=Tensor[(16, 11, 8), bool] */;
  %230 = %196.2;
  %231 = %205.3;
  %232 = subtract(%213, %214) /* ty=Tensor[(16, 11, 8), float64] */;
  %233 = %215.0;
  %234 = %216.0;
  %235 = %221.1;
  %236 = exp(%228) /* ty=Tensor[(2, 11, 16), float64] */;
  (%229, %230, %231, %var_3756, meta[relay.Constant][12] /* ty=Tensor[(864), uint32] */, %var_3758, %232, %233, %234, %218, meta[relay.Constant][13] /* ty=Tensor[(4, 88), float32] */, %235, %236)
}

def @func_4727() -> (Tensor[(3, 9, 12), float64], Tensor[(9, 6, 16), float32], Tensor[(12, 16, 14), int8], Tensor[(378), uint8], Tensor[(9, 7, 6), bool], Tensor[(4, 2, 10), uint32], Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), bool]) {
  %264 = fn () -> (Tensor[(3, 9, 12), float64], Tensor[(9, 6, 16), float32], Tensor[(12, 16, 14), int8], Tensor[(378), uint8], Tensor[(9, 7, 6), bool], Tensor[(4, 2, 10), uint32], Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), bool]) {
    %237 = @func_4052() /* ty=(Tensor[(3, 9, 12), float64],) */;
    %238 = cast(meta[relay.Constant][14] /* ty=Tensor[(80, 1), float32] */, dtype="float32") /* ty=Tensor[(80, 1), float32] */;
    %239 = reshape(%238, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
    %240 = @func_2484(%239) /* ty=(Tensor[(4, 2, 10), uint16], Tensor[(9, 6, 16), float32], Tensor[(864), uint32]) */;
    %241 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
    %242 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
    %243 = %241.0;
    %244 = cast(%243, dtype="int8") /* ty=Tensor[(12, 16, 14), int8] */;
    %245 = reshape(%244, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int8] */;
    %246 = @func_4086(%245) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) */;
    %247 = @func_4565() /* ty=Tensor[(4, 2, 10), float64] */;
    %248 = cast(%247, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
    %249 = sinh(%248) /* ty=Tensor[(4, 2, 10), float32] */;
    %250 = cast(meta[relay.Constant][14] /* ty=Tensor[(80, 1), float32] */, dtype="uint32") /* ty=Tensor[(80, 1), uint32] */;
    %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(3), int32] */;
    %252 = cast(%249, dtype="uint32") /* ty=Tensor[(4, 2, 10), uint32] */;
    %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %254 = cast(%249, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
    %255 = reshape(%254, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
    %256 = @func_1854(%255) /* ty=(Tensor[(4, 2, 10), bool],) */;
    %257 = %237.0;
    %258 = %240.1;
    %259 = %242.2;
    %260 = %246.0;
    %261 = left_shift(%252, %253) /* ty=Tensor[(4, 2, 10), uint32] */;
    %262 = @func_4485() /* ty=Tensor[(12, 16, 14), int8] */;
    %263 = %256.0;
    (%257, %258, %243, %259, %260, %261, %262, %263)
  };
  %264() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 6, 16), float32], Tensor[(12, 16, 14), int8], Tensor[(378), uint8], Tensor[(9, 7, 6), bool], Tensor[(4, 2, 10), uint32], Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), bool]) */
}

def @func_2486(%var_2485: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), uint16], Tensor[(9, 6, 16), float32], Tensor[(864), uint32]) {
  %281 = fn (%var_2468: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), uint16], Tensor[(9, 6, 16), float32], Tensor[(864), uint32]) {
    %265 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %266 = %265.0;
    %267 = cast(%var_2468, dtype="int64") /* ty=Tensor[(4, 2, 10), int64] */;
    %268 = shape_of(%266, dtype="int32") /* ty=Tensor[(3), int32] */;
    %269 = cast(%266, dtype="int64") /* ty=Tensor[(4, 2, 10), int64] */;
    %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %271 = right_shift(%269, %270) /* ty=Tensor[(4, 2, 10), int64] */;
    %272 = cast(%var_2468, dtype="uint16") /* ty=Tensor[(4, 2, 10), uint16] */;
    %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
    %274 = cast(%271, dtype="uint16") /* ty=Tensor[(4, 2, 10), uint16] */;
    %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %276 = cast(meta[relay.Constant][15] /* ty=Tensor[(864), uint32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
    %277 = reshape(%276, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), uint32] */;
    %278 = @func_1285(%277) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) */;
    %279 = maximum(%274, %275) /* ty=Tensor[(4, 2, 10), uint16] */;
    %280 = %278.3;
    (%279, %280, meta[relay.Constant][15] /* ty=Tensor[(864), uint32] */)
  };
  %281(%var_2485) /* ty=(Tensor[(4, 2, 10), uint16], Tensor[(9, 6, 16), float32], Tensor[(864), uint32]) */
}

def @func_4408() -> (Tensor[(4, 2, 10), float32], Tensor[(2688), float32]) {
  %286 = fn () -> (Tensor[(4, 2, 10), float32], Tensor[(2688), float32]) {
    %282 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
    %283 = @func_3154() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) */;
    %284 = %282.1;
    %285 = %283.2;
    (%284, %285)
  };
  %286() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(2688), float32]) */
}

def @func_6711(%var_6709: Tensor[(2, 28), uint64]) -> (Tensor[(6, 3, 10), float64], Tensor[(378), bool], Tensor[(378), uint8], Tensor[(2, 28), uint32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(2, 28), float32], Tensor[(2688), int64]) {
  @func_6708(%var_6709) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(378), bool], Tensor[(378), uint8], Tensor[(2, 28), uint32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(2, 28), float32], Tensor[(2688), int64]) */
}

def @func_6767(%var_6759: Tensor[(4, 11, 13), float32], %var_6760: Tensor[(4, 11, 13), float32]) -> (Tensor[(4, 11, 13), float32], Tensor[(4, 2, 10), float32]) {
  %287 = cast(%var_6760, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %288 = shape_of(%var_6759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%var_6759, dtype="float32") /* ty=Tensor[(4, 11, 13), float32] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %291 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %292 = mod(%289, %290) /* ty=Tensor[(4, 11, 13), float32] */;
  %293 = %291.0;
  (%292, %293)
}

def @func_3615() -> (Tensor[(180), float64],) {
  %296 = fn () -> (Tensor[(180), float64],) {
    %294 = @func_3154() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) */;
    %295 = %294.1;
    (%295,)
  };
  %296() /* ty=(Tensor[(180), float64],) */
}

def @func_2970(%var_2968: Tensor[(2688), float64], %var_2969: Tensor[(2688), int32]) -> (Tensor[(2688), float64],) {
  %308 = fn (%var_2949: Tensor[(2688), float64], %var_2954: Tensor[(2688), int32]) -> (Tensor[(2688), float64],) {
    %297 = @func_2013() /* ty=Tensor[(2688), float64] */;
    %298 = cast(%var_2949, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(1), int32] */;
    %300 = cast(%297, dtype="int32") /* ty=Tensor[(2688), int32] */;
    %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?), int32] */;
    %302 = maximum(%300, %301) /* ty=Tensor[(2688), int32] */;
    %303 = cast(%var_2954, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %304 = shape_of(%302, dtype="int32") /* ty=Tensor[(1), int32] */;
    %305 = cast(%302, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %306 = dyn.reshape(%303, %304, newshape=[]) /* ty=Tensor[(?), float64] */;
    %307 = floor_divide(%305, %306) /* ty=Tensor[(2688), float64] */;
    (%307,)
  };
  %308(%var_2968, %var_2969) /* ty=(Tensor[(2688), float64],) */
}

def @func_5466() -> (Tensor[(12, 16, 14), int8],) {
  %311 = fn () -> (Tensor[(12, 16, 14), int8],) {
    %309 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
    %310 = %309.0;
    (%310,)
  };
  %311() /* ty=(Tensor[(12, 16, 14), int8],) */
}

def @func_1978(%var_1974: Tensor[(15, 10, 15), float64], %var_1975: Tensor[(864), uint32], %var_1976: Tensor[(96, 28), float64], %var_1977: Tensor[(96, 28), float64]) -> (Tensor[(15, 10, 15), float64], Tensor[(6, 3, 10), float64], Tensor[(100), float64], Tensor[(864), uint32], Tensor[(96, 28), int8]) {
  @func_1972(%var_1974, %var_1975, %var_1976, %var_1977) /* ty=(Tensor[(15, 10, 15), float64], Tensor[(6, 3, 10), float64], Tensor[(100), float64], Tensor[(864), uint32], Tensor[(96, 28), int8]) */
}

def @func_2515(%var_2513: Tensor[(2, 11, 16), float32], %var_2514: Tensor[(2, 11, 16), float32]) -> Tensor[(2, 11, 16), float32] {
  %316 = fn (%var_2507: Tensor[(2, 11, 16), float32], %var_2508: Tensor[(2, 11, 16), float32]) -> Tensor[(2, 11, 16), float32] {
    %312 = cast(%var_2508, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
    %313 = shape_of(%var_2507, dtype="int32") /* ty=Tensor[(3), int32] */;
    %314 = cast(%var_2507, dtype="float32") /* ty=Tensor[(2, 11, 16), float32] */;
    %315 = dyn.reshape(%312, %313, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%314, %315) /* ty=Tensor[(2, 11, 16), float32] */
  };
  %316(%var_2513, %var_2514) /* ty=Tensor[(2, 11, 16), float32] */
}

def @func_4340() -> (Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) {
  %334 = fn () -> (Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) {
    %317 = @func_3614() /* ty=(Tensor[(180), float64],) */;
    %318 = @func_3028() /* ty=(Tensor[(5, 5, 4), float64], Tensor[(2688), float64]) */;
    %319 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
    %320 = %319.0;
    %321 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
    %322 = %321.1;
    %323 = cast(%322, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %324 = shape_of(%320, dtype="int32") /* ty=Tensor[(1), int32] */;
    %325 = cast(%320, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?), float64] */;
    %327 = cast(%320, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %328 = rsqrt(%327) /* ty=Tensor[(2688), float32] */;
    %329 = cast(%328, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %330 = %317.0;
    %331 = %318.0;
    %332 = minimum(%325, %326) /* ty=Tensor[(2688), float64] */;
    %333 = sin(%329) /* ty=Tensor[(2688), float32] */;
    (%330, %331, %332, %333)
  };
  %334() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) */
}

def @func_3727() -> Tensor[(2688), float64] {
  %335 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
  %335.0
}

def @func_5797() -> (Tensor[(4, 2, 10), float32],) {
  %336 = @func_3479() /* ty=Tensor[(4, 2, 10), float32] */;
  (%336,)
}

def @func_4465(%var_4464: Tensor[(2, 10, 9), float32]) -> Tensor[(2, 10, 9), float32] {
  %338 = fn (%var_4460: Tensor[(2, 10, 9), float32]) -> Tensor[(2, 10, 9), float32] {
    %337 = cast(%var_4460, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
    cosh(%337) /* ty=Tensor[(2, 10, 9), float32] */
  };
  %338(%var_4464) /* ty=Tensor[(2, 10, 9), float32] */
}

def @func_6923() -> (Tensor[(4, 2, 10), float32],) {
  @func_6921() /* ty=(Tensor[(4, 2, 10), float32],) */
}

def @func_4566() -> Tensor[(4, 2, 10), float64] {
  %342 = fn () -> Tensor[(4, 2, 10), float64] {
    %339 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %340 = %339.0;
    %341 = cast(%340, dtype="float64") /* ty=Tensor[(4, 2, 10), float64] */;
    log2(%341) /* ty=Tensor[(4, 2, 10), float64] */
  };
  %342() /* ty=Tensor[(4, 2, 10), float64] */
}

def @func_6598() -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) {
  @func_6596() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) */
}

def @func_4502() -> Tensor[(12, 16, 14), int8] {
  %343 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %343.0
}

def @func_105(%var_103: Tensor[(5, 5, 4), float64]) -> Tensor[(5, 5, 4), float64] {
  @func_102(%var_103) /* ty=Tensor[(5, 5, 4), float64] */
}

def @func_6771(%var_6769: Tensor[(4, 11, 13), float32], %var_6770: Tensor[(4, 11, 13), float32]) -> (Tensor[(4, 11, 13), float32], Tensor[(4, 2, 10), float32]) {
  @func_6767(%var_6769, %var_6770) /* ty=(Tensor[(4, 11, 13), float32], Tensor[(4, 2, 10), float32]) */
}

def @func_5859() -> (Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %344 = @func_5080() /* ty=(Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %345 = @func_5503() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) */;
  %346 = %344.1;
  %347 = %345.0;
  (%346, %347)
}

def @func_1856(%var_1855: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), bool],) {
  %355 = fn (%var_1849: Tensor[(4, 2, 10), float32]) -> (Tensor[(4, 2, 10), bool],) {
    %348 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %349 = %348.0;
    %350 = cast(%var_1849, dtype="bool") /* ty=Tensor[(4, 2, 10), bool] */;
    %351 = shape_of(%349, dtype="int32") /* ty=Tensor[(3), int32] */;
    %352 = cast(%349, dtype="bool") /* ty=Tensor[(4, 2, 10), bool] */;
    %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %354 = not_equal(%352, %353) /* ty=Tensor[(4, 2, 10), bool] */;
    (%354,)
  };
  %355(%var_1855) /* ty=(Tensor[(4, 2, 10), bool],) */
}

def @func_1403(%var_1400: Tensor[(16, 10, 4), float32], %var_1401: Tensor[(378), uint8], %var_1402: Tensor[(180), float64]) -> (Tensor[(16, 10, 4), float64], Tensor[(9, 7, 6), bool], Tensor[(378), uint8], Tensor[(12, 16, 14), int8], Tensor[(1, 2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
  %371 = fn (%var_1346: Tensor[(16, 10, 4), float32], %var_1375: Tensor[(378), uint8], %var_1391: Tensor[(180), float64]) -> (Tensor[(16, 10, 4), float64], Tensor[(9, 7, 6), bool], Tensor[(378), uint8], Tensor[(12, 16, 14), int8], Tensor[(1, 2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
    %356 = cast(%var_1346, dtype="float32") /* ty=Tensor[(16, 10, 4), float32] */;
    %357 = acosh(%356) /* ty=Tensor[(16, 10, 4), float32] */;
    %358 = cast(%357, dtype="float64") /* ty=Tensor[(16, 10, 4), float64] */;
    %359 = cast(%var_1375, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %360 = reshape(%359, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
    %361 = @func_624(%360) /* ty=(Tensor[(9, 7, 6), bool],) */;
    %362 = cast(meta[relay.Constant][16] /* ty=Tensor[(1, 2688), float64] */, dtype="float64") /* ty=Tensor[(1, 2688), float64] */;
    %363 = reshape(%362, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
    %364 = @func_753(%363) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
    %365 = cast(%var_1391, dtype="float64") /* ty=Tensor[(180), float64] */;
    %366 = reshape(%365, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %367 = log2(%358) /* ty=Tensor[(16, 10, 4), float64] */;
    %368 = %361.0;
    %369 = %364.1;
    %370 = @func_432(%366) /* ty=Tensor[(6, 3, 10), float64] */;
    (%367, %368, %var_1375, %369, meta[relay.Constant][16] /* ty=Tensor[(1, 2688), float64] */, %370, %var_1391)
  };
  %371(%var_1400, %var_1401, %var_1402) /* ty=(Tensor[(16, 10, 4), float64], Tensor[(9, 7, 6), bool], Tensor[(378), uint8], Tensor[(12, 16, 14), int8], Tensor[(1, 2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */
}

def @func_5759(%var_5681: uint16, %var_5682: Tensor[(14, 4, 5), uint16], %var_5730: Tensor[(56), uint64]) -> (Tensor[(14, 4, 5), float32], Tensor[(4, 2, 10), float32], Tensor[(14), float32], Tensor[(378), uint8], Tensor[(100), float64], Tensor[(4, 2, 10), float32], Tensor[(56), float32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  %372 = cast(%var_5681, dtype="uint16") /* ty=uint16 */;
  %373 = cast(%var_5682, dtype="uint16") /* ty=Tensor[(14, 4, 5), uint16] */;
  %374 = right_shift(%372, %373) /* ty=Tensor[(14, 4, 5), uint16] */;
  %375 = cast(%var_5682, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="float32") /* ty=Tensor[(14, 4, 5), float32] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %379 = cast(meta[relay.Constant][17] /* ty=Tensor[(14), float32] */, dtype="float32") /* ty=Tensor[(14), float32] */;
  %380 = cast(%var_5730, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %381 = cast(meta[relay.Constant][18] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %382 = cast(meta[relay.Constant][19] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %383 = reshape(%379, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %384 = reshape(%380, newshape=[56]) /* ty=Tensor[(56), uint64] */;
  %385 = reshape(%381, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %386 = reshape(%382, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %387 = @func_2374(%383, %384, %385, %386) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %388 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %389 = cast(%var_5730, dtype="float32") /* ty=Tensor[(56), float32] */;
  %390 = cast(meta[relay.Constant][20] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %391 = reshape(%390, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %392 = @func_2661(%391) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) */;
  %393 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %394 = power(%377, %378) /* ty=Tensor[(14, 4, 5), float32] */;
  %395 = %387.0;
  %396 = %388.0;
  %397 = log(%389) /* ty=Tensor[(56), float32] */;
  %398 = %392.0;
  %399 = %393.0;
  (%394, %395, meta[relay.Constant][17] /* ty=Tensor[(14), float32] */, meta[relay.Constant][18] /* ty=Tensor[(378), uint8] */, meta[relay.Constant][19] /* ty=Tensor[(100), float64] */, %396, %397, %398, meta[relay.Constant][20] /* ty=Tensor[(2688), float64] */, %399)
}

def @func_1705() -> (Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */
}

def @main(%var_7039: Tensor[(6, 63), uint8], %var_7040: Tensor[(180), float64], %var_7049: Tensor[(12, 16, 14), int8]) -> (Tensor[(6, 3, 10), float64], Tensor[(640), float32], Tensor[(6, 63), uint8], Tensor[(180), float64], Tensor[(12, 16, 14), int8], Tensor[(12, 16, 14), uint64]) {
  %400 = cast(meta[relay.Constant][21] /* ty=Tensor[(640), float32] */, dtype="float32") /* ty=Tensor[(640), float32] */;
  %401 = cast(%var_7039, dtype="uint8") /* ty=Tensor[(6, 63), uint8] */;
  %402 = cast(%var_7040, dtype="float64") /* ty=Tensor[(180), float64] */;
  %403 = reshape(%400, newshape=[16, 10, 4]) /* ty=Tensor[(16, 10, 4), float32] */;
  %404 = reshape(%401, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %405 = reshape(%402, newshape=[180]) /* ty=Tensor[(180), float64] */;
  %406 = @func_1403(%403, %404, %405) /* ty=(Tensor[(16, 10, 4), float64], Tensor[(9, 7, 6), bool], Tensor[(378), uint8], Tensor[(12, 16, 14), int8], Tensor[(1, 2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %407 = @func_3237() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %408 = @func_2832() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %409 = %408.0;
  %410 = cast(%var_7049, dtype="uint64") /* ty=Tensor[(12, 16, 14), uint64] */;
  %411 = shape_of(%409, dtype="int32") /* ty=Tensor[(3), int32] */;
  %412 = cast(%409, dtype="uint64") /* ty=Tensor[(12, 16, 14), uint64] */;
  %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %414 = %406.5;
  %415 = %407.0;
  %416 = bitwise_or(%412, %413) /* ty=Tensor[(12, 16, 14), uint64] */;
  (%414, meta[relay.Constant][21] /* ty=Tensor[(640), float32] */, %var_7039, %var_7040, %415, %416)
}

def @func_4016() -> (Tensor[(4, 2, 10), float32],) {
  %419 = fn () -> (Tensor[(4, 2, 10), float32],) {
    %417 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %418 = %417.0;
    (%418,)
  };
  %419() /* ty=(Tensor[(4, 2, 10), float32],) */
}

def @func_5480() -> (Tensor[(12, 16, 14), int8],) {
  %420 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %421 = %420.0;
  (%421,)
}

def @func_6856(%var_6855: Tensor[(2688), float64]) -> (Tensor[(2688), float32], Tensor[(180), float64]) {
  %431 = fn (%var_6844: Tensor[(2688), float64]) -> (Tensor[(2688), float32], Tensor[(180), float64]) {
    %422 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %423 = %422.1;
    %424 = cast(%var_6844, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %425 = shape_of(%423, dtype="int32") /* ty=Tensor[(1), int32] */;
    %426 = cast(%423, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %427 = dyn.reshape(%424, %425, newshape=[]) /* ty=Tensor[(?), float32] */;
    %428 = @func_5209() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */;
    %429 = mod(%426, %427) /* ty=Tensor[(2688), float32] */;
    %430 = %428.1;
    (%429, %430)
  };
  %431(%var_6855) /* ty=(Tensor[(2688), float32], Tensor[(180), float64]) */
}

def @func_2015() -> Tensor[(2688), float64] {
  @func_2013() /* ty=Tensor[(2688), float64] */
}

def @func_3004(%var_3003: Tensor[(1, 12, 9), float32]) -> (Tensor[(4, 2, 10), float32], Tensor[(?, 12, 9), bool]) {
  %448 = fn (%var_2979: Tensor[(1, 12, 9), float32]) -> (Tensor[(4, 2, 10), float32], Tensor[(?, 12, 9), bool]) {
    %432 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %433 = cast(%var_2979, dtype="float32") /* ty=Tensor[(1, 12, 9), float32] */;
    %434 = cos(%433) /* ty=Tensor[(1, 12, 9), float32] */;
    %435 = cast(%434, dtype="float64") /* ty=Tensor[(1, 12, 9), float64] */;
    %436 = rsqrt(%435) /* ty=Tensor[(1, 12, 9), float64] */;
    %437 = cast(%var_2979, dtype="uint16") /* ty=Tensor[(1, 12, 9), uint16] */;
    %438 = shape_of(%434, dtype="int32") /* ty=Tensor[(3), int32] */;
    %439 = cast(%434, dtype="uint16") /* ty=Tensor[(1, 12, 9), uint16] */;
    %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %441 = right_shift(%439, %440) /* ty=Tensor[(?, 12, 9), uint16] */;
    %442 = cast(%441, dtype="bool") /* ty=Tensor[(?, 12, 9), bool] */;
    %443 = shape_of(%436, dtype="int32") /* ty=Tensor[(3), int32] */;
    %444 = cast(%436, dtype="bool") /* ty=Tensor[(1, 12, 9), bool] */;
    %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %446 = %432.2;
    %447 = less_equal(%444, %445) /* ty=Tensor[(?, 12, 9), bool] */;
    (%446, %447)
  };
  %448(%var_3003) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(?, 12, 9), bool]) */
}

def @func_4264() -> (Tensor[(4, 2, 10), float32],) {
  %449 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %450 = %449.0;
  (%450,)
}

def @func_3237() -> (Tensor[(12, 16, 14), int8],) {
  %453 = fn () -> (Tensor[(12, 16, 14), int8],) {
    %451 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %452 = %451.0;
    (%452,)
  };
  %453() /* ty=(Tensor[(12, 16, 14), int8],) */
}

def @func_5338() -> (Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(378), uint8]) {
  %454 = @func_4346() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) */;
  %455 = @func_5232() /* ty=(Tensor[(378), uint8],) */;
  %456 = %454.0;
  %457 = @func_3727() /* ty=Tensor[(2688), float64] */;
  %458 = %455.0;
  (%456, %457, %458)
}

def @func_5340() -> (Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(378), uint8]) {
  @func_5338() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(378), uint8]) */
}

def @func_6366(%var_6363: Tensor[(1, 8, 1), float32], %var_6364: Tensor[(14, 8, 5), float32], %var_6365: Tensor[(15, 8, 1), float32]) -> (Tensor[(14, 8, 5), float32], Tensor[(15, 8, 1), float32]) {
  @func_6361(%var_6363, %var_6364, %var_6365) /* ty=(Tensor[(14, 8, 5), float32], Tensor[(15, 8, 1), float32]) */
}

def @func_5829() -> (Tensor[(180), float64],) {
  %459 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %460 = %459.2;
  (%460,)
}

def @func_2374(%var_2298: Tensor[(14), float32], %var_2313: Tensor[(56), uint64], %var_2338: Tensor[(378), uint8], %var_2355: Tensor[(100), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) {
  %461 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %462 = cast(%var_2298, dtype="float32") /* ty=Tensor[(14), float32] */;
  %463 = reshape(%462, newshape=[7, 1, 2]) /* ty=Tensor[(7, 1, 2), float32] */;
  %464 = @func_2038(%463) /* ty=(Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) */;
  %465 = cast(%var_2313, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %466 = cast(%var_2313, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %467 = cast(meta[relay.Constant][22] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %468 = reshape(%465, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %469 = reshape(%466, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %470 = reshape(%467, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %471 = @func_897(%468, %469, %470) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) */;
  %472 = cast(%var_2338, dtype="float64") /* ty=Tensor[(378), float64] */;
  %473 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(378), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %474 = cast(meta[relay.Constant][22] /* ty=Tensor[(378), uint8] */, dtype="float64") /* ty=Tensor[(378), float64] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?), float64] */;
  %476 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %477 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %478 = cast(%477, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %479 = reshape(%478, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
  %480 = @func_753(%479) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
  %481 = cast(%var_2355, dtype="float64") /* ty=Tensor[(100), float64] */;
  %482 = reshape(%481, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %483 = %461.0;
  %484 = %464.1;
  %485 = %471.1;
  %486 = power(%474, %475) /* ty=Tensor[(378), float64] */;
  %487 = %476.0;
  %488 = %480.1;
  %489 = @func_102(%482) /* ty=Tensor[(5, 5, 4), float64] */;
  (%483, %484, %var_2298, %485, %var_2313, %486, %487, %477, %488, %489, %var_2355)
}

def @func_3868(%var_3865: Tensor[(16, 11, 8), int16], %var_3866: Tensor[(1, 2250), float64], %var_3867: Tensor[(672, 4), float64]) -> (Tensor[(16, 11, 8), bool], Tensor[(378), uint8], Tensor[(864), uint32], Tensor[(1, 2250), float64], Tensor[(864), uint32], Tensor[(672, 4), float64], Tensor[(16, 11, 8), float64], Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(4, 88), float32], Tensor[(12, 16, 14), float32], Tensor[(2, 11, 16), float64]) {
  @func_3863(%var_3865, %var_3866, %var_3867) /* ty=(Tensor[(16, 11, 8), bool], Tensor[(378), uint8], Tensor[(864), uint32], Tensor[(1, 2250), float64], Tensor[(864), uint32], Tensor[(672, 4), float64], Tensor[(16, 11, 8), float64], Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(4, 88), float32], Tensor[(12, 16, 14), float32], Tensor[(2, 11, 16), float64]) */
}

def @func_1287(%var_1286: Tensor[(9, 6, 16), uint32]) -> (Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) {
  %512 = fn (%var_1231: Tensor[(9, 6, 16), uint32]) -> (Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) {
    %490 = cast(meta[relay.Constant][23] /* ty=Tensor[(378, 1), uint8] */, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
    %491 = reshape(%490, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
    %492 = @func_624(%491) /* ty=(Tensor[(9, 7, 6), bool],) */;
    %493 = cast(meta[relay.Constant][23] /* ty=Tensor[(378, 1), uint8] */, dtype="uint8") /* ty=Tensor[(378, 1), uint8] */;
    %494 = reshape(%493, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
    %495 = @func_624(%494) /* ty=(Tensor[(9, 7, 6), bool],) */;
    %496 = cast(meta[relay.Constant][24] /* ty=Tensor[(9, 6, 16), uint32] */, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %497 = shape_of(%var_1231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %498 = cast(%var_1231, dtype="bool") /* ty=Tensor[(9, 6, 16), bool] */;
    %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %500 = less(%498, %499) /* ty=Tensor[(9, 6, 16), bool] */;
    %501 = cast(%500, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
    %502 = sin(%501) /* ty=Tensor[(9, 6, 16), float64] */;
    %503 = cast(%502, dtype="float64") /* ty=Tensor[(9, 6, 16), float64] */;
    %504 = acosh(%503) /* ty=Tensor[(9, 6, 16), float64] */;
    %505 = cast(%500, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
    %506 = shape_of(%504, dtype="int32") /* ty=Tensor[(3), int32] */;
    %507 = cast(%504, dtype="float32") /* ty=Tensor[(9, 6, 16), float32] */;
    %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %509 = %492.0;
    %510 = %495.0;
    %511 = multiply(%507, %508) /* ty=Tensor[(9, 6, 16), float32] */;
    (%509, meta[relay.Constant][23] /* ty=Tensor[(378, 1), uint8] */, %510, %511)
  };
  %512(%var_1286) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) */
}

def @func_3573() -> (Tensor[(4, 2, 10), float32], Tensor[(4, 2, 10), float32], Tensor[(3, 9, 12), float64]) {
  %519 = fn () -> (Tensor[(4, 2, 10), float32], Tensor[(4, 2, 10), float32], Tensor[(3, 9, 12), float64]) {
    %513 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %514 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
    %515 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
    %516 = %513.0;
    %517 = %514.1;
    %518 = %515.0;
    (%516, %517, %518)
  };
  %519() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(4, 2, 10), float32], Tensor[(3, 9, 12), float64]) */
}

def @func_2380(%var_2376: Tensor[(14), float32], %var_2377: Tensor[(56), uint64], %var_2378: Tensor[(378), uint8], %var_2379: Tensor[(100), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) {
  @func_2374(%var_2376, %var_2377, %var_2378, %var_2379) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */
}

def @func_2180() -> (Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) {
  %520 = cast(meta[relay.Constant][25] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %521 = reshape(%520, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
  %522 = @func_2013() /* ty=Tensor[(2688), float64] */;
  %523 = @func_102(%521) /* ty=Tensor[(5, 5, 4), float64] */;
  (%522, %523, meta[relay.Constant][25] /* ty=Tensor[(100), float64] */)
}

def @func_4266() -> (Tensor[(4, 2, 10), float32],) {
  @func_4264() /* ty=(Tensor[(4, 2, 10), float32],) */
}

def @func_2832() -> (Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) {
  %527 = fn () -> (Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) {
    %524 = @func_2229() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %525 = @func_2763() /* ty=Tensor[(12, 16, 14), int8] */;
    %526 = %524.0;
    (%525, %526)
  };
  %527() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */
}

def @func_4184(%var_4174: Tensor[(1, 1408), int16], %var_4176: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(1, 2250), float64], Tensor[(1, 1408), int16], Tensor[(2250), float64], Tensor[(2688), float64]) {
  %528 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %529 = cast(%var_4174, dtype="int16") /* ty=Tensor[(1, 1408), int16] */;
  %530 = cast(meta[relay.Constant][26] /* ty=Tensor[(2250), float64] */, dtype="float64") /* ty=Tensor[(2250), float64] */;
  %531 = cast(%var_4176, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %532 = reshape(%529, newshape=[16, 11, 8]) /* ty=Tensor[(16, 11, 8), int16] */;
  %533 = reshape(%530, newshape=[1, 2250]) /* ty=Tensor[(1, 2250), float64] */;
  %534 = reshape(%531, newshape=[672, 4]) /* ty=Tensor[(672, 4), float64] */;
  %535 = @func_3863(%532, %533, %534) /* ty=(Tensor[(16, 11, 8), bool], Tensor[(378), uint8], Tensor[(864), uint32], Tensor[(1, 2250), float64], Tensor[(864), uint32], Tensor[(672, 4), float64], Tensor[(16, 11, 8), float64], Tensor[(2688), float64], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(4, 88), float32], Tensor[(12, 16, 14), float32], Tensor[(2, 11, 16), float64]) */;
  %536 = %528.1;
  %537 = %535.3;
  (%536, %537, %var_4174, meta[relay.Constant][26] /* ty=Tensor[(2250), float64] */, %var_4176)
}

def @func_901(%var_898: Tensor[(2, 4, 7), uint64], %var_899: Tensor[(2, 4, 7), uint64], %var_900: Tensor[(378), uint8]) -> (Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) {
  %554 = fn (%var_860: Tensor[(2, 4, 7), uint64], %var_861: Tensor[(2, 4, 7), uint64], %var_889: Tensor[(378), uint8]) -> (Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) {
    %538 = cast(%var_861, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
    %539 = shape_of(%var_860, dtype="int32") /* ty=Tensor[(3), int32] */;
    %540 = cast(%var_860, dtype="uint64") /* ty=Tensor[(2, 4, 7), uint64] */;
    %541 = dyn.reshape(%538, %539, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %542 = cast(%var_860, dtype="float32") /* ty=Tensor[(2, 4, 7), float32] */;
    %543 = cast(meta[relay.Constant][27] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
    %544 = reshape(%543, newshape=[9, 7, 6]) /* ty=Tensor[(9, 7, 6), uint8] */;
    %545 = @func_624(%544) /* ty=(Tensor[(9, 7, 6), bool],) */;
    %546 = cast(%var_889, dtype="bool") /* ty=Tensor[(378), bool] */;
    %547 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(378), uint8] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %548 = cast(meta[relay.Constant][27] /* ty=Tensor[(378), uint8] */, dtype="bool") /* ty=Tensor[(378), bool] */;
    %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?), bool] */;
    %550 = left_shift(%540, %541) /* ty=Tensor[(2, 4, 7), uint64] */;
    %551 = tan(%542) /* ty=Tensor[(2, 4, 7), float32] */;
    %552 = %545.0;
    %553 = not_equal(%548, %549) /* ty=Tensor[(378), bool] */;
    (%550, %551, %552, %553)
  };
  %554(%var_898, %var_899, %var_900) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) */
}

def @func_3729() -> Tensor[(2688), float64] {
  @func_3727() /* ty=Tensor[(2688), float64] */
}

def @func_4052() -> (Tensor[(3, 9, 12), float64],) {
  %555 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
  %556 = %555.0;
  (%556,)
}

def @func_3430(%var_3429: Tensor[(14, 5, 4), uint32]) -> (Tensor[(14, 5, 4), uint32],) {
  %562 = fn (%var_3424: Tensor[(14, 5, 4), uint32]) -> (Tensor[(14, 5, 4), uint32],) {
    %557 = cast(%var_3424, dtype="uint32") /* ty=Tensor[(14, 5, 4), uint32] */;
    %558 = shape_of(meta[relay.Constant][28] /* ty=Tensor[(14, 5, 4), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %559 = cast(meta[relay.Constant][28] /* ty=Tensor[(14, 5, 4), uint32] */, dtype="uint32") /* ty=Tensor[(14, 5, 4), uint32] */;
    %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %561 = bitwise_and(%559, %560) /* ty=Tensor[(14, 5, 4), uint32] */;
    (%561,)
  };
  %562(%var_3429) /* ty=(Tensor[(14, 5, 4), uint32],) */
}

def @func_2446() -> (Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) {
  %563 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %564 = cast(meta[relay.Constant][29] /* ty=Tensor[(864), uint32] */, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %565 = reshape(%564, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), uint32] */;
  %566 = @func_1285(%565) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) */;
  %567 = %563.0;
  %568 = %566.1;
  (%567, %568, meta[relay.Constant][29] /* ty=Tensor[(864), uint32] */)
}

def @func_4874() -> (Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(12, 16, 14), int8], Tensor[(3, 9, 12), float64], Tensor[(5, 5, 4), float64], Tensor[(180), float64], Tensor[(180), float64], Tensor[(352), uint16]) {
  %604 = fn () -> (Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(12, 16, 14), int8], Tensor[(3, 9, 12), float64], Tensor[(5, 5, 4), float64], Tensor[(180), float64], Tensor[(180), float64], Tensor[(352), uint16]) {
    %569 = @func_4339() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) */;
    %570 = cast(meta[relay.Constant][30] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %571 = reshape(%570, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %572 = @func_2608(%571) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
    %573 = cast(meta[relay.Constant][30] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %574 = reshape(%573, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %575 = @func_2608(%574) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
    %576 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
    %577 = @func_2747() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */;
    %578 = %572.3;
    %579 = cast(%578, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
    %580 = reshape(%579, newshape=[1, 100]) /* ty=Tensor[(1, 100), float64] */;
    %581 = @func_4208(%580) /* ty=(Tensor[(2688), bool], Tensor[(5, 5, 4), float64], Tensor[(1, 100), float64]) */;
    %582 = @func_3614() /* ty=(Tensor[(180), float64],) */;
    %583 = @func_4339() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(2688), float64], Tensor[(2688), float32]) */;
    %584 = cast(meta[relay.Constant][30] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %585 = atanh(%584) /* ty=Tensor[(352), float32] */;
    %586 = cast(meta[relay.Constant][30] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %587 = shape_of(%585, dtype="int32") /* ty=Tensor[(1), int32] */;
    %588 = cast(%585, dtype="float32") /* ty=Tensor[(352), float32] */;
    %589 = dyn.reshape(%586, %587, newshape=[]) /* ty=Tensor[(?), float32] */;
    %590 = floor_divide(%588, %589) /* ty=Tensor[(352), float32] */;
    %591 = cast(%585, dtype="uint16") /* ty=Tensor[(352), uint16] */;
    %592 = shape_of(%590, dtype="int32") /* ty=Tensor[(1), int32] */;
    %593 = cast(%590, dtype="uint16") /* ty=Tensor[(352), uint16] */;
    %594 = dyn.reshape(%591, %592, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %595 = %569.0;
    %596 = %575.4;
    %597 = %576.1;
    %598 = @func_4485() /* ty=Tensor[(12, 16, 14), int8] */;
    %599 = %577.0;
    %600 = %581.1;
    %601 = %582.0;
    %602 = %583.0;
    %603 = left_shift(%593, %594) /* ty=Tensor[(352), uint16] */;
    (%595, %578, %596, %597, %598, %599, %600, %601, %602, %603)
  };
  %604() /* ty=(Tensor[(180), float64], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64], Tensor[(6, 3, 10), float64], Tensor[(12, 16, 14), int8], Tensor[(3, 9, 12), float64], Tensor[(5, 5, 4), float64], Tensor[(180), float64], Tensor[(180), float64], Tensor[(352), uint16]) */
}

def @func_5210() -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64]) {
  %609 = fn () -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64]) {
    %605 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
    %606 = @func_3614() /* ty=(Tensor[(180), float64],) */;
    %607 = %605.0;
    %608 = %606.0;
    (%607, %608)
  };
  %609() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */
}

def @func_4086(%var_4078: Tensor[(12, 16, 14), int8]) -> (Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) {
  %610 = @func_3473() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(9, 7, 6), bool], Tensor[(378), uint8]) */;
  %611 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %612 = %611.0;
  %613 = cast(%var_4078, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %614 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %615 = cast(%612, dtype="bool") /* ty=Tensor[(12, 16, 14), bool] */;
  %616 = dyn.reshape(%613, %614, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %617 = %610.1;
  %618 = not_equal(%615, %616) /* ty=Tensor[(12, 16, 14), bool] */;
  (%617, %618)
}

def @func_5651(%var_5631: Tensor[(80), float32]) -> (Tensor[(2688), float64], Tensor[(4, 2, 10), bool], Tensor[(80), float32]) {
  %619 = @func_5338() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(378), uint8]) */;
  %620 = cast(%var_5631, dtype="float32") /* ty=Tensor[(80), float32] */;
  %621 = reshape(%620, newshape=[1, 80]) /* ty=Tensor[(1, 80), float32] */;
  %622 = @func_3313(%621) /* ty=(Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 2, 10), bool]) */;
  %623 = %619.1;
  %624 = %622.2;
  (%623, %624, %var_5631)
}

def @func_3212(%var_3208: uint32, %var_3209: Tensor[(2, 1, 10), uint32], %var_3210: Tensor[(80), float32], %var_3211: Tensor[(66), float32]) -> (Tensor[(2, 1, 10), bool], Tensor[(4, 2, 10), bool], Tensor[(80), float32], Tensor[(2, 3, 11), float32], Tensor[(66), float32], Tensor[(352), float32], Tensor[(2, 11, 16), float64]) {
  %641 = fn (%var_3156: uint32, %var_3157: Tensor[(2, 1, 10), uint32], %var_3163: Tensor[(80), float32], %var_3171: Tensor[(66), float32]) -> (Tensor[(2, 1, 10), bool], Tensor[(4, 2, 10), bool], Tensor[(80), float32], Tensor[(2, 3, 11), float32], Tensor[(66), float32], Tensor[(352), float32], Tensor[(2, 11, 16), float64]) {
    %625 = cast(%var_3156, dtype="bool") /* ty=bool */;
    %626 = cast(%var_3157, dtype="bool") /* ty=Tensor[(2, 1, 10), bool] */;
    %627 = cast(%var_3163, dtype="float32") /* ty=Tensor[(80), float32] */;
    %628 = reshape(%627, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
    %629 = @func_1854(%628) /* ty=(Tensor[(4, 2, 10), bool],) */;
    %630 = cast(%var_3171, dtype="float32") /* ty=Tensor[(66), float32] */;
    %631 = reshape(%630, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float32] */;
    %632 = cast(meta[relay.Constant][31] /* ty=Tensor[(352), float32] */, dtype="float32") /* ty=Tensor[(352), float32] */;
    %633 = reshape(%632, newshape=[352]) /* ty=Tensor[(352), float32] */;
    %634 = @func_2608(%633) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(2, 11, 16), float32], Tensor[(352), float32], Tensor[(5, 5, 4), float64], Tensor[(100, 1), float64]) */;
    %635 = %634.1;
    %636 = cast(%635, dtype="float64") /* ty=Tensor[(2, 11, 16), float64] */;
    %637 = greater_equal(%625, %626) /* ty=Tensor[(2, 1, 10), bool] */;
    %638 = %629.0;
    %639 = @func_2773(%631) /* ty=Tensor[(2, 3, 11), float32] */;
    %640 = atan(%636) /* ty=Tensor[(2, 11, 16), float64] */;
    (%637, %638, %var_3163, %639, %var_3171, meta[relay.Constant][31] /* ty=Tensor[(352), float32] */, %640)
  };
  %641(%var_3208, %var_3209, %var_3210, %var_3211) /* ty=(Tensor[(2, 1, 10), bool], Tensor[(4, 2, 10), bool], Tensor[(80), float32], Tensor[(2, 3, 11), float32], Tensor[(66), float32], Tensor[(352), float32], Tensor[(2, 11, 16), float64]) */
}

def @func_1666() -> (Tensor[(4, 2, 10), float32],) {
  %642 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 2, 10), float32] */, dtype="float32") /* ty=Tensor[(4, 2, 10), float32] */;
  %643 = erf(%642) /* ty=Tensor[(4, 2, 10), float32] */;
  (%643,)
}

def @func_3028() -> (Tensor[(5, 5, 4), float64], Tensor[(2688), float64]) {
  %644 = @func_2180() /* ty=(Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %645 = %644.1;
  %646 = @func_2013() /* ty=Tensor[(2688), float64] */;
  (%645, %646)
}

def @func_5897() -> (Tensor[(2688), float64], Tensor[(4, 2, 10), float64]) {
  %650 = fn () -> (Tensor[(2688), float64], Tensor[(4, 2, 10), float64]) {
    %647 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
    %648 = %647.0;
    %649 = @func_4565() /* ty=Tensor[(4, 2, 10), float64] */;
    (%648, %649)
  };
  %650() /* ty=(Tensor[(2688), float64], Tensor[(4, 2, 10), float64]) */
}

def @func_3064(%var_3061: Tensor[(14, 1), float32], %var_3062: Tensor[(378), uint8], %var_3063: Tensor[(100), float64]) -> (Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(14, 1), float32], Tensor[(56), uint64], Tensor[(378), uint8], Tensor[(100), float64]) {
  @func_3059(%var_3061, %var_3062, %var_3063) /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(14, 1), float32], Tensor[(56), uint64], Tensor[(378), uint8], Tensor[(100), float64]) */
}

def @func_3687(%var_3685: Tensor[(66), float32]) -> (Tensor[(100), float64], Tensor[(2, 3, 11), float32], Tensor[(66), float32]) {
  %651 = @func_2180() /* ty=(Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %652 = cast(%var_3685, dtype="float32") /* ty=Tensor[(66), float32] */;
  %653 = reshape(%652, newshape=[2, 3, 11]) /* ty=Tensor[(2, 3, 11), float32] */;
  %654 = %651.2;
  %655 = @func_2773(%653) /* ty=Tensor[(2, 3, 11), float32] */;
  (%654, %655, %var_3685)
}

def @func_2664(%var_2662: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) {
  @func_2661(%var_2662) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) */
}

def @func_4139(%var_4137: Tensor[(14, 5, 8), float64]) -> (Tensor[(14, 5, 8), float64], Tensor[(14, 5, 8), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) {
  @func_4136(%var_4137) /* ty=(Tensor[(14, 5, 8), float64], Tensor[(14, 5, 8), float32], Tensor[(12, 16, 14), float32], Tensor[(2688), float64]) */
}

def @func_1668() -> (Tensor[(4, 2, 10), float32],) {
  @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */
}

def @func_3909(%var_3896: Tensor[(2, 1, 7), float64]) -> (Tensor[(2, 1, 7), float64], Tensor[(2, 1, 7), float64]) {
  %656 = cast(%var_3896, dtype="float64") /* ty=Tensor[(2, 1, 7), float64] */;
  %657 = cast(%var_3896, dtype="float64") /* ty=Tensor[(2, 1, 7), float64] */;
  %658 = log(%656) /* ty=Tensor[(2, 1, 7), float64] */;
  %659 = atanh(%657) /* ty=Tensor[(2, 1, 7), float64] */;
  (%658, %659)
}

def @func_3059(%var_3051: Tensor[(14, 1), float32], %var_3053: Tensor[(378), uint8], %var_3054: Tensor[(100), float64]) -> (Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(14, 1), float32], Tensor[(56), uint64], Tensor[(378), uint8], Tensor[(100), float64]) {
  %660 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
  %661 = cast(%var_3051, dtype="float32") /* ty=Tensor[(14, 1), float32] */;
  %662 = cast(meta[relay.Constant][33] /* ty=Tensor[(56), uint64] */, dtype="uint64") /* ty=Tensor[(56), uint64] */;
  %663 = cast(%var_3053, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %664 = cast(%var_3054, dtype="float64") /* ty=Tensor[(100), float64] */;
  %665 = reshape(%661, newshape=[14]) /* ty=Tensor[(14), float32] */;
  %666 = reshape(%662, newshape=[56]) /* ty=Tensor[(56), uint64] */;
  %667 = reshape(%663, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %668 = reshape(%664, newshape=[100]) /* ty=Tensor[(100), float64] */;
  %669 = @func_2374(%665, %666, %667, %668) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), float32], Tensor[(14), float32], Tensor[(2, 4, 7), float32], Tensor[(56), uint64], Tensor[(378), float64], Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(12, 16, 14), int8], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */;
  %670 = %660.0;
  %671 = %669.7;
  (%670, %671, %var_3051, meta[relay.Constant][33] /* ty=Tensor[(56), uint64] */, %var_3053, %var_3054)
}

def @func_4504() -> Tensor[(12, 16, 14), int8] {
  @func_4502() /* ty=Tensor[(12, 16, 14), int8] */
}

def @func_4089(%var_4087: Tensor[(12, 16, 14), int8]) -> (Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) {
  @func_4086(%var_4087) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) */
}

def @func_5482() -> (Tensor[(12, 16, 14), int8],) {
  @func_5480() /* ty=(Tensor[(12, 16, 14), int8],) */
}

def @func_2182() -> (Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) {
  @func_2180() /* ty=(Tensor[(2688), float64], Tensor[(5, 5, 4), float64], Tensor[(100), float64]) */
}

def @func_102(%var_98: Tensor[(5, 5, 4), float64]) -> Tensor[(5, 5, 4), float64] {
  %672 = cast(%var_98, dtype="float64") /* ty=Tensor[(5, 5, 4), float64] */;
  sin(%672) /* ty=Tensor[(5, 5, 4), float64] */
}

def @func_6596() -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) {
  %673 = @func_4957() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) */;
  %674 = @func_3236() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %675 = %673.0;
  %676 = %674.0;
  (%675, %676)
}

def @func_6056() -> (Tensor[(12, 16, 14), int8],) {
  @func_6054() /* ty=(Tensor[(12, 16, 14), int8],) */
}

def @func_6252() -> (Tensor[(4, 2, 10), float32],) {
  %677 = @func_4957() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) */;
  %678 = %677.0;
  (%678,)
}

def @func_3479() -> Tensor[(4, 2, 10), float32] {
  %679 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %679.0
}

def @func_3629() -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64]) {
  %683 = fn () -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64]) {
    %680 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
    %681 = @func_3479() /* ty=Tensor[(4, 2, 10), float32] */;
    %682 = %680.2;
    (%681, %682)
  };
  %683() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64]) */
}

def @func_756(%var_754: Tensor[(12, 16, 14), float64]) -> (Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) {
  @func_753(%var_754) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */
}

def @func_2748() -> (Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) {
  %687 = fn () -> (Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) {
    %684 = cast(meta[relay.Constant][34] /* ty=Tensor[(3, 9, 12), float64] */, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
    %685 = log10(%684) /* ty=Tensor[(3, 9, 12), float64] */;
    %686 = @func_2013() /* ty=Tensor[(2688), float64] */;
    (%685, %686)
  };
  %687() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(2688), float64]) */
}

def @func_4959() -> (Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) {
  @func_4957() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(180), float64], Tensor[(7, ?, 2), float64]) */
}

def @func_6532(%var_6531: Tensor[(2688), int8]) -> (Tensor[(180), float64], Tensor[(9, 7, 6), bool], Tensor[(2688), int8]) {
  %694 = fn (%var_6526: Tensor[(2688), int8]) -> (Tensor[(180), float64], Tensor[(9, 7, 6), bool], Tensor[(2688), int8]) {
    %688 = @func_3614() /* ty=(Tensor[(180), float64],) */;
    %689 = cast(%var_6526, dtype="int8") /* ty=Tensor[(2688), int8] */;
    %690 = reshape(%689, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), int8] */;
    %691 = @func_4086(%690) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(12, 16, 14), bool]) */;
    %692 = %688.0;
    %693 = %691.0;
    (%692, %693, %var_6526)
  };
  %694(%var_6531) /* ty=(Tensor[(180), float64], Tensor[(9, 7, 6), bool], Tensor[(2688), int8]) */
}

def @func_6867() -> Tensor[(12, 16, 14), int8] {
  %695 = @func_6054() /* ty=(Tensor[(12, 16, 14), int8],) */;
  %695.0
}

def @func_1972(%var_1942: Tensor[(15, 10, 15), float64], %var_1958: Tensor[(864), uint32], %var_1959: Tensor[(96, 28), float64], %var_1968: Tensor[(96, 28), float64]) -> (Tensor[(15, 10, 15), float64], Tensor[(6, 3, 10), float64], Tensor[(100), float64], Tensor[(864), uint32], Tensor[(96, 28), int8]) {
  %696 = cast(%var_1942, dtype="float64") /* ty=Tensor[(15, 10, 15), float64] */;
  %697 = cast(meta[relay.Constant][35] /* ty=Tensor[(100), float64] */, dtype="float64") /* ty=Tensor[(100), float64] */;
  %698 = cast(%var_1958, dtype="uint32") /* ty=Tensor[(864), uint32] */;
  %699 = cast(%var_1959, dtype="float64") /* ty=Tensor[(96, 28), float64] */;
  %700 = reshape(%697, newshape=[100, 1]) /* ty=Tensor[(100, 1), float64] */;
  %701 = reshape(%698, newshape=[864]) /* ty=Tensor[(864), uint32] */;
  %702 = reshape(%699, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %703 = @func_1932(%700, %701, %702) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(5, 5, 4), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32], Tensor[(12, 16, 14), float32], Tensor[(100, 2688), uint16], Tensor[(6, 3, 10), float64], Tensor[(3, 60), float64]) */;
  %704 = cast(%var_1968, dtype="int8") /* ty=Tensor[(96, 28), int8] */;
  %705 = shape_of(%var_1959, dtype="int32") /* ty=Tensor[(2), int32] */;
  %706 = cast(%var_1959, dtype="int8") /* ty=Tensor[(96, 28), int8] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %708 = erf(%696) /* ty=Tensor[(15, 10, 15), float64] */;
  %709 = %703.6;
  %710 = bitwise_xor(%706, %707) /* ty=Tensor[(96, 28), int8] */;
  (%708, %709, meta[relay.Constant][35] /* ty=Tensor[(100), float64] */, %var_1958, %710)
}

def @func_627(%var_625: Tensor[(9, 7, 6), uint8]) -> (Tensor[(9, 7, 6), bool],) {
  @func_624(%var_625) /* ty=(Tensor[(9, 7, 6), bool],) */
}

def @func_2773(%var_2767: Tensor[(2, 3, 11), float32]) -> Tensor[(2, 3, 11), float32] {
  %711 = cast(%var_2767, dtype="float32") /* ty=Tensor[(2, 3, 11), float32] */;
  tan(%711) /* ty=Tensor[(2, 3, 11), float32] */
}

def @func_624(%var_612: Tensor[(9, 7, 6), uint8]) -> (Tensor[(9, 7, 6), bool],) {
  %712 = cast(meta[relay.Constant][36] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %713 = cast(%var_612, dtype="uint8") /* ty=Tensor[(9, 7, 6), uint8] */;
  %714 = right_shift(%712, %713) /* ty=Tensor[(9, 7, 6), uint8] */;
  %715 = cast(meta[relay.Constant][36] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %716 = cast(%714, dtype="bool") /* ty=Tensor[(9, 7, 6), bool] */;
  %717 = greater(%715, %716) /* ty=Tensor[(9, 7, 6), bool] */;
  (%717,)
}

def @func_2764() -> Tensor[(12, 16, 14), int8] {
  %719 = fn () -> Tensor[(12, 16, 14), int8] {
    %718 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %718.0
  };
  %719() /* ty=Tensor[(12, 16, 14), int8] */
}

def @func_4348() -> (Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) {
  @func_4346() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, ?, 2), int8], Tensor[(7, 2), float32]) */
}

def @func_5764(%var_5761: uint16, %var_5762: Tensor[(14, 4, 5), uint16], %var_5763: Tensor[(56), uint64]) -> (Tensor[(14, 4, 5), float32], Tensor[(4, 2, 10), float32], Tensor[(14), float32], Tensor[(378), uint8], Tensor[(100), float64], Tensor[(4, 2, 10), float32], Tensor[(56), float32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) {
  @func_5759(%var_5761, %var_5762, %var_5763) /* ty=(Tensor[(14, 4, 5), float32], Tensor[(4, 2, 10), float32], Tensor[(14), float32], Tensor[(378), uint8], Tensor[(100), float64], Tensor[(4, 2, 10), float32], Tensor[(56), float32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */
}

def @func_5805(%var_5801: Tensor[(4, 1), uint8]) -> (Tensor[(4, 1), uint8],) {
  %720 = cast(meta[relay.Constant][37] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %721 = cast(%var_5801, dtype="uint8") /* ty=Tensor[(4, 1), uint8] */;
  %722 = bitwise_or(%720, %721) /* ty=Tensor[(4, 1), uint8] */;
  (%722,)
}

def @func_1936(%var_1933: Tensor[(100, 1), float64], %var_1934: Tensor[(864), uint32], %var_1935: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(5, 5, 4), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32], Tensor[(12, 16, 14), float32], Tensor[(100, 2688), uint16], Tensor[(6, 3, 10), float64], Tensor[(3, 60), float64]) {
  %747 = fn (%var_1875: Tensor[(100, 1), float64], %var_1881: Tensor[(864), uint32], %var_1887: Tensor[(2688), float64]) -> (Tensor[(4, 2, 10), float32], Tensor[(5, 5, 4), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32], Tensor[(12, 16, 14), float32], Tensor[(100, 2688), uint16], Tensor[(6, 3, 10), float64], Tensor[(3, 60), float64]) {
    %723 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
    %724 = cast(%var_1875, dtype="float64") /* ty=Tensor[(100, 1), float64] */;
    %725 = reshape(%724, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
    %726 = cast(%var_1881, dtype="uint32") /* ty=Tensor[(864), uint32] */;
    %727 = reshape(%726, newshape=[9, 6, 16]) /* ty=Tensor[(9, 6, 16), uint32] */;
    %728 = @func_1285(%727) /* ty=(Tensor[(9, 7, 6), bool], Tensor[(378, 1), uint8], Tensor[(9, 7, 6), bool], Tensor[(9, 6, 16), float32]) */;
    %729 = cast(%var_1887, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %730 = reshape(%729, newshape=[12, 16, 14]) /* ty=Tensor[(12, 16, 14), float64] */;
    %731 = @func_753(%730) /* ty=(Tensor[(12, 16, 14), float32], Tensor[(12, 16, 14), int8]) */;
    %732 = %731.1;
    %733 = cast(%732, dtype="float32") /* ty=Tensor[(12, 16, 14), float32] */;
    %734 = cast(%var_1887, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %735 = cast(%var_1875, dtype="bool") /* ty=Tensor[(100, 1), bool] */;
    %736 = greater(%734, %735) /* ty=Tensor[(100, 2688), bool] */;
    %737 = cast(%var_1887, dtype="uint16") /* ty=Tensor[(2688), uint16] */;
    %738 = cast(%736, dtype="uint16") /* ty=Tensor[(100, 2688), uint16] */;
    %739 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 60), float64] */, dtype="float64") /* ty=Tensor[(3, 60), float64] */;
    %740 = reshape(%739, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %741 = %723.2;
    %742 = @func_102(%725) /* ty=Tensor[(5, 5, 4), float64] */;
    %743 = %728.1;
    %744 = exp(%733) /* ty=Tensor[(12, 16, 14), float32] */;
    %745 = logical_xor(%737, %738) /* ty=Tensor[(100, 2688), uint16] */;
    %746 = @func_432(%740) /* ty=Tensor[(6, 3, 10), float64] */;
    (%741, %742, %743, %var_1881, %744, %745, %746, meta[relay.Constant][38] /* ty=Tensor[(3, 60), float64] */)
  };
  %747(%var_1933, %var_1934, %var_1935) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(5, 5, 4), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32], Tensor[(12, 16, 14), float32], Tensor[(100, 2688), uint16], Tensor[(6, 3, 10), float64], Tensor[(3, 60), float64]) */
}

def @func_5808(%var_5806: Tensor[(4, 1), uint8]) -> (Tensor[(4, 1), uint8],) {
  @func_5805(%var_5806) /* ty=(Tensor[(4, 1), uint8],) */
}

def @func_3030() -> (Tensor[(5, 5, 4), float64], Tensor[(2688), float64]) {
  @func_3028() /* ty=(Tensor[(5, 5, 4), float64], Tensor[(2688), float64]) */
}

def @func_2776(%var_2774: Tensor[(2, 3, 11), float32]) -> Tensor[(2, 3, 11), float32] {
  @func_2773(%var_2774) /* ty=Tensor[(2, 3, 11), float32] */
}

def @func_6921() -> (Tensor[(4, 2, 10), float32],) {
  %748 = @func_3479() /* ty=Tensor[(4, 2, 10), float32] */;
  (%748,)
}

def @func_2124() -> (Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) {
  @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */
}

def @func_5448(%var_5447: Tensor[(2, 10, 9), float32]) -> (Tensor[(2688), bool], Tensor[(4, 2, 10), bool], Tensor[(180), float32], Tensor[(2, 10, 9), float64], Tensor[(2688), float64], Tensor[(2, 10, 9), float32], Tensor[(2, 10, 9), int16], Tensor[(6, 3, 7), float32], Tensor[(126), float32]) {
  %772 = fn (%var_5428: Tensor[(2, 10, 9), float32]) -> (Tensor[(2688), bool], Tensor[(4, 2, 10), bool], Tensor[(180), float32], Tensor[(2, 10, 9), float64], Tensor[(2688), float64], Tensor[(2, 10, 9), float32], Tensor[(2, 10, 9), int16], Tensor[(6, 3, 7), float32], Tensor[(126), float32]) {
    %749 = @func_5292() /* ty=(Tensor[(2688), bool], Tensor[(2688), bool]) */;
    %750 = @func_4726() /* ty=(Tensor[(3, 9, 12), float64], Tensor[(9, 6, 16), float32], Tensor[(12, 16, 14), int8], Tensor[(378), uint8], Tensor[(9, 7, 6), bool], Tensor[(4, 2, 10), uint32], Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), bool]) */;
    %751 = cast(meta[relay.Constant][39] /* ty=Tensor[(180), float32] */, dtype="float32") /* ty=Tensor[(180), float32] */;
    %752 = reshape(%751, newshape=[2, 10, 9]) /* ty=Tensor[(2, 10, 9), float32] */;
    %753 = @func_4463(%752) /* ty=Tensor[(2, 10, 9), float32] */;
    %754 = cast(%753, dtype="float64") /* ty=Tensor[(2, 10, 9), float64] */;
    %755 = cast(%753, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
    %756 = asinh(%755) /* ty=Tensor[(2, 10, 9), float32] */;
    %757 = cast(%756, dtype="float32") /* ty=Tensor[(2, 10, 9), float32] */;
    %758 = cast(%var_5428, dtype="int16") /* ty=Tensor[(2, 10, 9), int16] */;
    %759 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
    %760 = cast(%756, dtype="int16") /* ty=Tensor[(2, 10, 9), int16] */;
    %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %762 = cast(meta[relay.Constant][40] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %763 = reshape(%762, newshape=[6, 3, 7]) /* ty=Tensor[(6, 3, 7), float32] */;
    %764 = @func_1587(%763) /* ty=(Tensor[(6, 3, 7), float32],) */;
    %765 = %749.0;
    %766 = %750.7;
    %767 = rsqrt(%754) /* ty=Tensor[(2, 10, 9), float64] */;
    %768 = @func_2013() /* ty=Tensor[(2688), float64] */;
    %769 = sinh(%757) /* ty=Tensor[(2, 10, 9), float32] */;
    %770 = subtract(%760, %761) /* ty=Tensor[(2, 10, 9), int16] */;
    %771 = %764.0;
    (%765, %766, meta[relay.Constant][39] /* ty=Tensor[(180), float32] */, %767, %768, %769, %770, %771, meta[relay.Constant][40] /* ty=Tensor[(126), float32] */)
  };
  %772(%var_5447) /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), bool], Tensor[(180), float32], Tensor[(2, 10, 9), float64], Tensor[(2688), float64], Tensor[(2, 10, 9), float32], Tensor[(2, 10, 9), int16], Tensor[(6, 3, 7), float32], Tensor[(126), float32]) */
}

def @func_5293() -> (Tensor[(2688), bool], Tensor[(2688), bool]) {
  %785 = fn () -> (Tensor[(2688), bool], Tensor[(2688), bool]) {
    %773 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
    %774 = %773.0;
    %775 = cast(meta[relay.Constant][41] /* ty=Tensor[(2688), bool] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %776 = shape_of(%774, dtype="int32") /* ty=Tensor[(1), int32] */;
    %777 = cast(%774, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?), bool] */;
    %779 = cast(meta[relay.Constant][42] /* ty=Tensor[(2688), bool] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %780 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(2688), bool] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %781 = cast(meta[relay.Constant][41] /* ty=Tensor[(2688), bool] */, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?), bool] */;
    %783 = greater_equal(%777, %778) /* ty=Tensor[(2688), bool] */;
    %784 = less_equal(%781, %782) /* ty=Tensor[(2688), bool] */;
    (%783, %784)
  };
  %785() /* ty=(Tensor[(2688), bool], Tensor[(2688), bool]) */
}

def @func_6708(%var_6672: Tensor[(2, 28), uint64]) -> (Tensor[(6, 3, 10), float64], Tensor[(378), bool], Tensor[(378), uint8], Tensor[(2, 28), uint32], Tensor[(4, 2, 10), float32], Tensor[(2688), float64], Tensor[(2, 28), float32], Tensor[(2688), int64]) {
  %786 = @func_2122() /* ty=(Tensor[(2688), float64], Tensor[(6, 3, 10), float64], Tensor[(180), float64]) */;
  %787 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 28), uint64] */, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %788 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 28), uint64] */, dtype="uint64") /* ty=Tensor[(2, 28), uint64] */;
  %789 = cast(meta[relay.Constant][44] /* ty=Tensor[(378), uint8] */, dtype="uint8") /* ty=Tensor[(378), uint8] */;
  %790 = reshape(%787, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %791 = reshape(%788, newshape=[2, 4, 7]) /* ty=Tensor[(2, 4, 7), uint64] */;
  %792 = reshape(%789, newshape=[378]) /* ty=Tensor[(378), uint8] */;
  %793 = @func_897(%790, %791, %792) /* ty=(Tensor[(2, 4, 7), uint64], Tensor[(2, 4, 7), float32], Tensor[(9, 7, 6), bool], Tensor[(378), bool]) */;
  %794 = cast(%var_6672, dtype="uint32") /* ty=Tensor[(2, 28), uint32] */;
  %795 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(2, 28), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %796 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 28), uint64] */, dtype="uint32") /* ty=Tensor[(2, 28), uint32] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %798 = @func_4015() /* ty=(Tensor[(4, 2, 10), float32],) */;
  %799 = @func_5896() /* ty=(Tensor[(2688), float64], Tensor[(4, 2, 10), float64]) */;
  %800 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 28), uint64] */, dtype="float32") /* ty=Tensor[(2, 28), float32] */;
  %801 = cast(meta[relay.Constant][45] /* ty=Tensor[(2688), float64] */, dtype="float64") /* ty=Tensor[(2688), float64] */;
  %802 = cast(meta[relay.Constant][45] /* ty=Tensor[(2688), float64] */, dtype="int32") /* ty=Tensor[(2688), int32] */;
  %803 = reshape(%801, newshape=[2688]) /* ty=Tensor[(2688), float64] */;
  %804 = reshape(%802, newshape=[2688]) /* ty=Tensor[(2688), int32] */;
  %805 = @func_2967(%803, %804) /* ty=(Tensor[(2688), float64],) */;
  %806 = %805.0;
  %807 = cast(meta[relay.Constant][45] /* ty=Tensor[(2688), float64] */, dtype="int64") /* ty=Tensor[(2688), int64] */;
  %808 = shape_of(%806, dtype="int32") /* ty=Tensor[(1), int32] */;
  %809 = cast(%806, dtype="int64") /* ty=Tensor[(2688), int64] */;
  %810 = dyn.reshape(%807, %808, newshape=[]) /* ty=Tensor[(?), int64] */;
  %811 = %786.1;
  %812 = %793.3;
  %813 = multiply(%796, %797) /* ty=Tensor[(2, 28), uint32] */;
  %814 = %798.0;
  %815 = %799.0;
  %816 = sigmoid(%800) /* ty=Tensor[(2, 28), float32] */;
  %817 = add(%809, %810) /* ty=Tensor[(2688), int64] */;
  (%811, %812, meta[relay.Constant][44] /* ty=Tensor[(378), uint8] */, %813, %814, %815, %816, %817)
}

def @func_3912(%var_3910: Tensor[(2, 1, 7), float64]) -> (Tensor[(2, 1, 7), float64], Tensor[(2, 1, 7), float64]) {
  @func_3909(%var_3910) /* ty=(Tensor[(2, 1, 7), float64], Tensor[(2, 1, 7), float64]) */
}

def @func_6039() -> Tensor[(12, 16, 14), int8] {
  @func_6037() /* ty=Tensor[(12, 16, 14), int8] */
}

def @func_6403(%var_6402: Tensor[(2688), float32]) -> Tensor[(2688), bool] {
  %824 = fn (%var_6395: Tensor[(2688), float32]) -> Tensor[(2688), bool] {
    %818 = @func_4407() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(2688), float32]) */;
    %819 = %818.1;
    %820 = cast(%var_6395, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %821 = shape_of(%819, dtype="int32") /* ty=Tensor[(1), int32] */;
    %822 = cast(%819, dtype="bool") /* ty=Tensor[(2688), bool] */;
    %823 = dyn.reshape(%820, %821, newshape=[]) /* ty=Tensor[(?), bool] */;
    greater(%822, %823) /* ty=Tensor[(2688), bool] */
  };
  %824(%var_6402) /* ty=Tensor[(2688), bool] */
}

def @func_3155() -> (Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) {
  %834 = fn () -> (Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) {
    %825 = cast(meta[relay.Constant][46] /* ty=Tensor[(180), float64] */, dtype="float64") /* ty=Tensor[(180), float64] */;
    %826 = reshape(%825, newshape=[6, 3, 10]) /* ty=Tensor[(6, 3, 10), float64] */;
    %827 = @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */;
    %828 = %827.0;
    %829 = cast(%828, dtype="float64") /* ty=Tensor[(2688), float64] */;
    %830 = asin(%829) /* ty=Tensor[(2688), float64] */;
    %831 = cast(%830, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %832 = @func_432(%826) /* ty=Tensor[(6, 3, 10), float64] */;
    %833 = atanh(%831) /* ty=Tensor[(2688), float32] */;
    (%832, meta[relay.Constant][46] /* ty=Tensor[(180), float64] */, %833)
  };
  %834() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) */
}

def @func_5996(%var_5995: Tensor[(1, 196), uint16]) -> (Tensor[(4, 2, 10), float32], Tensor[(7, 7, 4), bool], Tensor[(1, 196), uint16], Tensor[(2688), float64], Tensor[(2688), float64]) {
  %844 = fn (%var_5982: Tensor[(1, 196), uint16]) -> (Tensor[(4, 2, 10), float32], Tensor[(7, 7, 4), bool], Tensor[(1, 196), uint16], Tensor[(2688), float64], Tensor[(2688), float64]) {
    %835 = @func_3572() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(4, 2, 10), float32], Tensor[(3, 9, 12), float64]) */;
    %836 = cast(%var_5982, dtype="uint16") /* ty=Tensor[(1, 196), uint16] */;
    %837 = cast(%var_5982, dtype="uint16") /* ty=Tensor[(1, 196), uint16] */;
    %838 = reshape(%836, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), uint16] */;
    %839 = reshape(%837, newshape=[7, 7, 4]) /* ty=Tensor[(7, 7, 4), uint16] */;
    %840 = %835.0;
    %841 = @func_262(%838, %839) /* ty=Tensor[(7, 7, 4), bool] */;
    %842 = @func_2013() /* ty=Tensor[(2688), float64] */;
    %843 = @func_3727() /* ty=Tensor[(2688), float64] */;
    (%840, %841, %var_5982, %842, %843)
  };
  %844(%var_5995) /* ty=(Tensor[(4, 2, 10), float32], Tensor[(7, 7, 4), bool], Tensor[(1, 196), uint16], Tensor[(2688), float64], Tensor[(2688), float64]) */
}

def @func_2013() -> Tensor[(2688), float64] {
  %845 = @func_1703() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(2688), float64], Tensor[(4, 2, 10), float32]) */;
  %845.1
}

def @func_4486() -> Tensor[(12, 16, 14), int8] {
  %846 = fn () -> Tensor[(12, 16, 14), int8] {
    @func_2763() /* ty=Tensor[(12, 16, 14), int8] */
  };
  %846() /* ty=Tensor[(12, 16, 14), int8] */
}

def @func_2040(%var_2039: Tensor[(7, 1, 2), float32]) -> (Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) {
  %859 = fn (%var_2026: Tensor[(7, 1, 2), float32]) -> (Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) {
    %847 = cast(%var_2026, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
    %848 = log10(%847) /* ty=Tensor[(7, 1, 2), float32] */;
    %849 = cast(%var_2026, dtype="int8") /* ty=Tensor[(7, 1, 2), int8] */;
    %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
    %851 = cast(%848, dtype="int8") /* ty=Tensor[(7, 1, 2), int8] */;
    %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %853 = cast(%848, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
    %854 = shape_of(%var_2026, dtype="int32") /* ty=Tensor[(3), int32] */;
    %855 = cast(%var_2026, dtype="float32") /* ty=Tensor[(7, 1, 2), float32] */;
    %856 = dyn.reshape(%853, %854, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %857 = maximum(%851, %852) /* ty=Tensor[(7, ?, 2), int8] */;
    %858 = divide(%855, %856) /* ty=Tensor[(7, ?, 2), float32] */;
    (%857, %858)
  };
  %859(%var_2039) /* ty=(Tensor[(7, ?, 2), int8], Tensor[(7, ?, 2), float32]) */
}

def @func_6916() -> Tensor[(4, 2, 10), float32] {
  %861 = fn () -> Tensor[(4, 2, 10), float32] {
    %860 = @func_4015() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %860.0
  };
  %861() /* ty=Tensor[(4, 2, 10), float32] */
}

def @func_5504() -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) {
  %866 = fn () -> (Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) {
    %862 = @func_1666() /* ty=(Tensor[(4, 2, 10), float32],) */;
    %863 = @func_2831() /* ty=(Tensor[(12, 16, 14), int8], Tensor[(4, 2, 10), float32]) */;
    %864 = %862.0;
    %865 = %863.0;
    (%864, %865)
  };
  %866() /* ty=(Tensor[(4, 2, 10), float32], Tensor[(12, 16, 14), int8]) */
}

def @func_3313(%var_3299: Tensor[(1, 80), float32]) -> (Tensor[(6, 3, 10), float64], Tensor[(6, 3, 10), float64], Tensor[(4, 2, 10), bool]) {
  %867 = @func_3154() /* ty=(Tensor[(6, 3, 10), float64], Tensor[(180), float64], Tensor[(2688), float32]) */;
  %868 = %867.0;
  %869 = cast(%868, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %870 = cast(%868, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
  %871 = cast(%var_3299, dtype="float32") /* ty=Tensor[(1, 80), float32] */;
  %872 = reshape(%871, newshape=[4, 2, 10]) /* ty=Tensor[(4, 2, 10), float32] */;
  %873 = @func_1854(%872) /* ty=(Tensor[(4, 2, 10), bool],) */;
  %874 = %873.0;
  %875 = cast(%var_3299, dtype="bool") /* ty=Tensor[(1, 80), bool] */;
  %876 = shape_of(%874, dtype="int32") /* ty=Tensor[(3), int32] */;
  %877 = cast(%874, dtype="bool") /* ty=Tensor[(4, 2, 10), bool] */;
  %878 = dyn.reshape(%875, %876, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %879 = acos(%869) /* ty=Tensor[(6, 3, 10), float64] */;
  %880 = sinh(%870) /* ty=Tensor[(6, 3, 10), float64] */;
  %881 = equal(%877, %878) /* ty=Tensor[(4, 2, 10), bool] */;
  (%879, %880, %881)
}

def @func_4210(%var_4209: Tensor[(1, 100), float64]) -> (Tensor[(2688), bool], Tensor[(5, 5, 4), float64], Tensor[(1, 100), float64]) {
  %887 = fn (%var_4196: Tensor[(1, 100), float64]) -> (Tensor[(2688), bool], Tensor[(5, 5, 4), float64], Tensor[(1, 100), float64]) {
    %882 = @func_2874() /* ty=(Tensor[(2688), bool], Tensor[(4, 2, 10), float32]) */;
    %883 = cast(%var_4196, dtype="float64") /* ty=Tensor[(1, 100), float64] */;
    %884 = reshape(%883, newshape=[5, 5, 4]) /* ty=Tensor[(5, 5, 4), float64] */;
    %885 = %882.0;
    %886 = @func_102(%884) /* ty=Tensor[(5, 5, 4), float64] */;
    (%885, %886, %var_4196)
  };
  %887(%var_4209) /* ty=(Tensor[(2688), bool], Tensor[(5, 5, 4), float64], Tensor[(1, 100), float64]) */
}

def @func_266(%var_264: Tensor[(7, 7, 4), uint16], %var_265: Tensor[(7, 7, 4), uint16]) -> Tensor[(7, 7, 4), bool] {
  @func_262(%var_264, %var_265) /* ty=Tensor[(7, 7, 4), bool] */
}

def @func_5831() -> (Tensor[(180), float64],) {
  @func_5829() /* ty=(Tensor[(180), float64],) */
}

def @func_5120() -> Tensor[(2688), float32] {
  %893 = fn () -> Tensor[(2688), float32] {
    %888 = @func_2013() /* ty=Tensor[(2688), float64] */;
    %889 = cast(meta[relay.Constant][47] /* ty=Tensor[(2688), float64] */, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %890 = shape_of(%888, dtype="int32") /* ty=Tensor[(1), int32] */;
    %891 = cast(%888, dtype="float32") /* ty=Tensor[(2688), float32] */;
    %892 = dyn.reshape(%889, %890, newshape=[]) /* ty=Tensor[(?), float32] */;
    multiply(%891, %892) /* ty=Tensor[(2688), float32] */
  };
  %893() /* ty=Tensor[(2688), float32] */
}

def @func_2448() -> (Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) {
  @func_2446() /* ty=(Tensor[(2688), float64], Tensor[(378, 1), uint8], Tensor[(864), uint32]) */
}

def @func_434(%var_433: Tensor[(6, 3, 10), float64]) -> Tensor[(6, 3, 10), float64] {
  %895 = fn (%var_429: Tensor[(6, 3, 10), float64]) -> Tensor[(6, 3, 10), float64] {
    %894 = cast(%var_429, dtype="float64") /* ty=Tensor[(6, 3, 10), float64] */;
    sin(%894) /* ty=Tensor[(6, 3, 10), float64] */
  };
  %895(%var_433) /* ty=Tensor[(6, 3, 10), float64] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

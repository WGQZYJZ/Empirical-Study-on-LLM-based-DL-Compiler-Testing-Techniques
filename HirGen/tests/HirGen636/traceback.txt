==========mod==========
#[version = "0.0.5"]
def @func_7748() -> (Tensor[(10, 4, 7), float32],) {
  %0 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %3 = cosh(%2) /* ty=Tensor[(10, 4, 7), float32] */;
  (%3,)
}

def @func_5191(%var_5176: float64) -> Tensor[(5, 2, 10), float64] {
  %4 = cast(%var_5176, dtype="float64") /* ty=float64 */;
  %5 = cast(meta[relay.Constant][0] /* ty=Tensor[(5, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 2, 10), float64] */;
  subtract(%4, %5) /* ty=Tensor[(5, 2, 10), float64] */
}

def @func_4326() -> Tensor[(10, 4, 7), float32] {
  %6 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %6.0
}

def @func_2454() -> Tensor[(384), float64] {
  %7 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %7.0
}

def @func_10042() -> (Tensor[(384), float64],) {
  %8 = @func_8758() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %9 = %8.6;
  (%9,)
}

def @func_2381() -> (Tensor[(384), float64],) {
  %10 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %11 = %10.0;
  (%11,)
}

def @func_12110() -> Tensor[(52), int8] {
  %12 = @func_8082() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %12.0
}

def @func_2650(%var_2638: Tensor[(8, 14, 11), float64]) -> Tensor[(8, 14, 11), float64] {
  %13 = cast(%var_2638, dtype="float64") /* ty=Tensor[(8, 14, 11), float64] */;
  rsqrt(%13) /* ty=Tensor[(8, 14, 11), float64] */
}

def @func_11871() -> (Tensor[(384), float64], Tensor[(6, 9, 13), uint32]) {
  %14 = @func_10106() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %15 = %14.0;
  %16 = cast(%15, dtype="uint32") /* ty=Tensor[(6, 1, 13), uint32] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(6, 9, 13), float32] */, dtype="uint32") /* ty=Tensor[(6, 9, 13), uint32] */;
  %18 = @func_2454() /* ty=Tensor[(384), float64] */;
  %19 = multiply(%16, %17) /* ty=Tensor[(6, 9, 13), uint32] */;
  (%18, %19)
}

def @func_8493(%var_8485: Tensor[(11, 15, 15), float64]) -> Tensor[(11, 15, 15), float64] {
  %20 = cast(%var_8485, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
  asin(%20) /* ty=Tensor[(11, 15, 15), float64] */
}

def @func_15847() -> Tensor[(52), int8] {
  @func_11638() /* ty=Tensor[(52), int8] */
}

def @func_5910(%var_5849: Tensor[(8, 15, 3), float32], %var_5850: Tensor[(8, 15, 3), float32], %var_5873: Tensor[(52), int8], %var_5877: Tensor[(8, 15, 3), float64]) -> (Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) {
  %21 = cast(%var_5873, dtype="int8") /* ty=Tensor[(52), int8] */;
  %22 = reshape(%21, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %23 = @func_460(%22) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %24 = cast(%var_5850, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %25 = shape_of(%var_5849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%var_5849, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %28 = subtract(%26, %27) /* ty=Tensor[(8, 15, 3), float32] */;
  %29 = cast(%28, dtype="float64") /* ty=Tensor[(8, 15, 3), float64] */;
  %30 = log(%29) /* ty=Tensor[(8, 15, 3), float64] */;
  %31 = cast(%var_5877, dtype="bool") /* ty=Tensor[(8, 15, 3), bool] */;
  %32 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%30, dtype="bool") /* ty=Tensor[(8, 15, 3), bool] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %35 = cast(%var_5850, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
  %36 = shape_of(%var_5877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %37 = cast(%var_5877, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
  %38 = dyn.reshape(%35, %36, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %39 = cast(meta[relay.Constant][2] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %40 = reshape(%39, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
  %41 = @func_3556(%40) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
  %42 = %23.0;
  %43 = cast(%42, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
  %44 = reshape(%43, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %45 = @func_2972(%44) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) */;
  %46 = equal(%33, %34) /* ty=Tensor[(8, 15, 3), bool] */;
  %47 = right_shift(%37, %38) /* ty=Tensor[(8, 15, 3), uint16] */;
  %48 = %41.1;
  %49 = %45.1;
  (%42, %var_5873, %46, %47, %48, meta[relay.Constant][2] /* ty=Tensor[(280), float64] */, %49)
}

def @func_460(%var_432: Tensor[(13, 2, 2), int8]) -> (Tensor[(13, 2, 2), int8],) {
  %50 = cast(%var_432, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
  %51 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(13, 2, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 2, 2), int8] */, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %54 = bitwise_xor(%52, %53) /* ty=Tensor[(13, 2, 2), int8] */;
  (%54,)
}

def @func_5124() -> Tensor[(384), float64] {
  %55 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %55.0
}

def @func_10106() -> (Tensor[(6, 1, 13), float32],) {
  %56 = @func_7385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %57 = %56.0;
  (%57,)
}

def @func_13471() -> (Tensor[(52), int8],) {
  %58 = @func_12066() /* ty=(Tensor[(52), int8], Tensor[(480), uint32]) */;
  %59 = %58.0;
  (%59,)
}

def @func_12660(%var_12650: Tensor[(9, 14, 12), int8]) -> Tensor[(9, 14, 12), bool] {
  %60 = cast(meta[relay.Constant][4] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %61 = cast(%var_12650, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  less(%60, %61) /* ty=Tensor[(9, 14, 12), bool] */
}

def @func_12812() -> (Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), uint8]) {
  %62 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %63 = @func_11143() /* ty=(Tensor[(384), float64], Tensor[(13, 4), int8], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float64]) */;
  %64 = %63.3;
  %65 = @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %66 = %65.0;
  %67 = cast(%66, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
  %68 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%64, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %71 = %62.0;
  %72 = minimum(%69, %70) /* ty=Tensor[(6, ?, 13), uint8] */;
  (%71, %72)
}

def @func_5682() -> (Tensor[(384), float64],) {
  %73 = @func_2803() /* ty=Tensor[(384), float64] */;
  (%73,)
}

def @func_1927(%var_1922: Tensor[(52), int8]) -> (Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %74 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %75 = cast(%var_1922, dtype="int8") /* ty=Tensor[(52), int8] */;
  %76 = reshape(%75, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %77 = @func_460(%76) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %78 = sigmoid(%74) /* ty=Tensor[(12, 3, 5), float64] */;
  %79 = %77.0;
  (%78, %79, %var_1922)
}

def @func_16933() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64]) {
  %80 = @func_6512() /* ty=(Tensor[(384), float64],) */;
  %81 = @func_15371() /* ty=(Tensor[(384), float64],) */;
  %82 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
  %83 = %80.0;
  %84 = %81.0;
  %85 = %82.0;
  (%83, %84, %85)
}

def @func_2780() -> (Tensor[(52), int8],) {
  %86 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %87 = %86.2;
  (%87,)
}

def @func_9740(%var_9685: Tensor[(280), float64]) -> (Tensor[(52), int8], Tensor[(52), int8], Tensor[(140, 2), float64], Tensor[(280), float64], Tensor[(15, 7, 1), float32], Tensor[(105, 1), float32], Tensor[(1, 1232), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) {
  %88 = cast(%var_9685, dtype="float64") /* ty=Tensor[(280), float64] */;
  %89 = reshape(%88, newshape=[140, 2]) /* ty=Tensor[(140, 2), float64] */;
  %90 = @func_7151(%89) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) */;
  %91 = cast(meta[relay.Constant][6] /* ty=Tensor[(105, 1), float32] */, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
  %92 = reshape(%91, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %93 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 1232), float64] */, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %94 = reshape(%93, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %95 = @func_3926(%94) /* ty=(Tensor[(52), int8], Tensor[(8, 14, 11), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %96 = @func_9276() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %97 = @func_5677() /* ty=Tensor[(52), int8] */;
  %98 = cast(%97, dtype="int8") /* ty=Tensor[(52), int8] */;
  %99 = reshape(%98, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %100 = @func_2558(%99) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %101 = @func_3630() /* ty=Tensor[(52), int8] */;
  %102 = cast(%101, dtype="int8") /* ty=Tensor[(52), int8] */;
  %103 = reshape(%102, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %104 = @func_2972(%103) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) */;
  %105 = %90.2;
  %106 = @func_1212(%92) /* ty=Tensor[(15, 7, 1), float32] */;
  %107 = %95.2;
  %108 = %96.0;
  %109 = %100.2;
  %110 = %104.1;
  (%97, %101, %105, %var_9685, %106, meta[relay.Constant][6] /* ty=Tensor[(105, 1), float32] */, %107, meta[relay.Constant][7] /* ty=Tensor[(1, 1232), float64] */, %108, %109, %110)
}

def @func_5521() -> (Tensor[(384), float64],) {
  %111 = @func_2454() /* ty=Tensor[(384), float64] */;
  (%111,)
}

def @func_8223(%var_8220: Tensor[(150), bool]) -> (Tensor[(52), int8], Tensor[(384), float64], bool, Tensor[(150), bool]) {
  %112 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %113 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %114 = cast(%var_8220, dtype="bool") /* ty=Tensor[(150), bool] */;
  %115 = reshape(%113, newshape=[]) /* ty=bool */;
  %116 = reshape(%114, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), bool] */;
  %117 = @func_3084(%115, %116) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) */;
  %118 = %112.0;
  %119 = %117.1;
  (%118, %119, False /* ty=bool */, %var_8220)
}

def @func_3465() -> Tensor[(12, 2, 16), float64] {
  %120 = cast(meta[relay.Constant][9] /* ty=Tensor[(12, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 16), float64] */;
  %121 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(12, 2, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %122 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 16), float64] */;
  %123 = dyn.reshape(%120, %121, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%122, %123) /* ty=Tensor[(12, 2, 16), float64] */
}

def @func_5224() -> (Tensor[(6, 1, 13), float32],) {
  %124 = @func_3305() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %125 = %124.1;
  (%125,)
}

def @func_11278() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %126 = @func_5249() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %127 = @func_10591() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %128 = %126.1;
  %129 = %127.1;
  (%128, %129)
}

def @func_12566() -> (Tensor[(52), int8], Tensor[(52), int8]) {
  %130 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %131 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
  %132 = %130.0;
  %133 = %131.1;
  (%132, %133)
}

def @func_4070() -> Tensor[(52), int8] {
  %134 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %134.0
}

def @func_10527() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  %135 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %136 = @func_10225() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %137 = @func_5682() /* ty=(Tensor[(384), float64],) */;
  %138 = %135.0;
  %139 = %136.0;
  %140 = %137.0;
  (%138, %139, %140)
}

def @func_10741() -> Tensor[(6, ?, 13), bool] {
  %141 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %142 = @func_10542() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(60), float64]) */;
  %143 = %142.0;
  %144 = cast(%143, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %145 = shape_of(%141, dtype="int32") /* ty=Tensor[(3), int32] */;
  %146 = cast(%141, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %147 = dyn.reshape(%144, %145, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%146, %147) /* ty=Tensor[(6, ?, 13), bool] */
}

def @func_13270() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %148 = @func_10042() /* ty=(Tensor[(384), float64],) */;
  %149 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %150 = %148.0;
  %151 = %149.0;
  (%150, %151)
}

def @func_11447() -> Tensor[(6, 1, 13), float32] {
  %152 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %152.0
}

def @func_12219() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) {
  %153 = @func_7709() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %154 = @func_5521() /* ty=(Tensor[(384), float64],) */;
  %155 = @func_5448() /* ty=(Tensor[(384), float64],) */;
  %156 = %153.0;
  %157 = %154.0;
  %158 = %155.0;
  (%156, %157, %158)
}

def @func_8399() -> Tensor[(384), int32] {
  @func_7033() /* ty=Tensor[(384), int32] */
}

def @func_3365() -> (Tensor[(6, 1, 13), float32], Tensor[(105), float32]) {
  %159 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %160 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %161 = %159.0;
  %162 = %160.1;
  (%161, %162)
}

def @func_9074() -> (Tensor[(384), float64],) {
  %163 = @func_7375() /* ty=Tensor[(384), float64] */;
  (%163,)
}

def @func_16017() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %164 = @func_14328() /* ty=(Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) */;
  %165 = @func_8191() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %166 = %164.2;
  %167 = %165.1;
  (%166, %167)
}

def @func_7709() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %168 = @func_4384() /* ty=(Tensor[(52), int8],) */;
  %169 = @func_7265() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float64]) */;
  %170 = %168.0;
  %171 = %169.0;
  (%170, %171)
}

def @func_6315() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %172 = @func_3998() /* ty=(Tensor[(384), float64], Tensor[(13, 2, 9), bool]) */;
  %173 = @func_5448() /* ty=(Tensor[(384), float64],) */;
  %174 = %172.0;
  %175 = %173.0;
  (%174, %175)
}

def @func_2870(%var_2851: Tensor[(13, 4), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) {
  %176 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %177 = cast(%var_2851, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %178 = reshape(%177, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %179 = @func_460(%178) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %180 = %179.0;
  %181 = cast(%180, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
  %182 = reshape(%181, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %183 = @func_460(%182) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %184 = %176.0;
  %185 = %183.0;
  (%184, %180, %var_2851, %185)
}

def @func_12507() -> (Tensor[(384), float64],) {
  %186 = @func_6643() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64]) */;
  %187 = %186.0;
  (%187,)
}

def @func_4559() -> Tensor[(6, 1, 13), float32] {
  %188 = @func_3305() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %188.1
}

def @func_16163() -> (Tensor[(10, 4, 7), float32],) {
  %189 = @func_9886() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %190 = %189.0;
  (%190,)
}

def @func_14063() -> Tensor[(52), int8] {
  %191 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %191.0
}

def @func_6761() -> (Tensor[(384), float64],) {
  %192 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %193 = %192.0;
  (%193,)
}

def @func_14416(%var_14408: Tensor[(12, 3, 5), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float32]) {
  %194 = @func_12250() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32]) */;
  %195 = @func_8483() /* ty=(Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) */;
  %196 = %195.0;
  %197 = cast(%var_14408, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %201 = %194.1;
  %202 = minimum(%199, %200) /* ty=Tensor[(12, 3, 5), float32] */;
  (%201, %202)
}

def @func_5988() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %203 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %204 = @func_2454() /* ty=Tensor[(384), float64] */;
  %205 = %203.0;
  (%204, %205)
}

def @func_7151(%var_7146: Tensor[(140, 2), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) {
  %206 = @func_5626() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %207 = %206.0;
  %208 = cast(%207, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
  %209 = cast(%var_7146, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
  %210 = reshape(%209, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
  %211 = @func_3556(%210) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
  %212 = asin(%208) /* ty=Tensor[(6, 1, 13), float32] */;
  %213 = %211.0;
  (%212, %213, %var_7146)
}

def @func_7375() -> Tensor[(384), float64] {
  %214 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %214.1
}

def @func_6399() -> Tensor[(384), float64] {
  @func_2619() /* ty=Tensor[(384), float64] */
}

def @func_14690() -> Tensor[(6, 1, 13), float32] {
  %215 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %215.0
}

def @func_15093() -> (Tensor[(384), float64],) {
  %216 = @func_13827() /* ty=Tensor[(384), float64] */;
  (%216,)
}

def @func_1212(%var_1191: Tensor[(15, 7, 1), float32]) -> Tensor[(15, 7, 1), float32] {
  %217 = cast(%var_1191, dtype="float32") /* ty=Tensor[(15, 7, 1), float32] */;
  sin(%217) /* ty=Tensor[(15, 7, 1), float32] */
}

def @func_16191() -> Tensor[(6, 1, 13), float32] {
  %218 = @func_10412() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) */;
  %218.0
}

def @func_4734() -> Tensor[(52), int8] {
  %219 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %219.0
}

def @func_13756() -> (Tensor[(384), int32], Tensor[(384), float64]) {
  %220 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %221 = @func_7033() /* ty=Tensor[(384), int32] */;
  %222 = %220.1;
  (%221, %222)
}

def @func_13827() -> Tensor[(384), float64] {
  %223 = @func_10591() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %223.1
}

def @func_6613() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64], Tensor[(280), float32]) {
  %224 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %225 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %226 = @func_4070() /* ty=Tensor[(52), int8] */;
  %227 = @func_3015() /* ty=Tensor[(384), float64] */;
  %228 = @func_4734() /* ty=Tensor[(52), int8] */;
  %229 = %224.1;
  %230 = %225.3;
  (%226, %227, %228, %229, %230)
}

def @func_6840() -> Tensor[(384), float64] {
  %231 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %231.1
}

def @func_9852() -> (Tensor[(6, 1, 13), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32], Tensor[(10, 4, 7), bool], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(480), uint32], Tensor[(12, 3, 5), float64], Tensor[(52), int8], Tensor[(384), int32], Tensor[(10, 4, 7), float32]) {
  %232 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %233 = %232.0;
  %234 = cast(%233, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
  %235 = cast(meta[relay.Constant][10] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %236 = reshape(%235, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %237 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
  %240 = reshape(%239, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
  %241 = @func_3556(%240) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
  %242 = cast(%238, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %243 = cast(meta[relay.Constant][11] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %244 = reshape(%243, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %245 = @func_1927(%244) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %246 = cast(meta[relay.Constant][11] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %247 = reshape(%246, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %248 = @func_1927(%247) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %249 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %250 = acos(%234) /* ty=Tensor[(6, 1, 13), float64] */;
  %251 = @func_1212(%236) /* ty=Tensor[(15, 7, 1), float32] */;
  %252 = %241.1;
  %253 = sigmoid(%242) /* ty=Tensor[(10, 4, 7), float32] */;
  %254 = %245.2;
  %255 = @func_5550() /* ty=Tensor[(480), uint32] */;
  %256 = %248.0;
  %257 = @func_8803() /* ty=Tensor[(52), int8] */;
  %258 = @func_7078() /* ty=Tensor[(384), int32] */;
  %259 = %249.0;
  (%250, %251, meta[relay.Constant][10] /* ty=Tensor[(105), float32] */, %252, %253, %254, meta[relay.Constant][11] /* ty=Tensor[(52, 1), int8] */, %255, %256, %257, %258, %259)
}

def @func_11977() -> (Tensor[(10, 4, 7), float64],) {
  %260 = @func_11923() /* ty=(Tensor[(10, 4, 7), float64],) */;
  %261 = %260.0;
  (%261,)
}

def @func_9449() -> Tensor[(52), int8] {
  @func_3630() /* ty=Tensor[(52), int8] */
}

def @func_16450() -> (Tensor[(480), uint32], Tensor[(11, 15, 15), float64], Tensor[(2475), float64], Tensor[(52), int8]) {
  %262 = @func_15604() /* ty=(Tensor[(480), uint32], Tensor[(384), float64]) */;
  %263 = cast(meta[relay.Constant][12] /* ty=Tensor[(2475), float64] */, dtype="float64") /* ty=Tensor[(2475), float64] */;
  %264 = reshape(%263, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float64] */;
  %265 = @func_12472() /* ty=(Tensor[(52), int8],) */;
  %266 = %262.0;
  %267 = @func_8493(%264) /* ty=Tensor[(11, 15, 15), float64] */;
  %268 = %265.0;
  (%266, %267, meta[relay.Constant][12] /* ty=Tensor[(2475), float64] */, %268)
}

def @func_15325() -> (Tensor[(6, 1, 13), float32],) {
  %269 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %270 = %269.0;
  (%270,)
}

def @func_13971() -> (Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(52), int8]) {
  %271 = @func_10542() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(60), float64]) */;
  %272 = @func_13756() /* ty=(Tensor[(384), int32], Tensor[(384), float64]) */;
  %273 = @func_12472() /* ty=(Tensor[(52), int8],) */;
  %274 = @func_12278() /* ty=Tensor[(4, 3, 5), float64] */;
  %275 = %271.1;
  %276 = %272.1;
  %277 = @func_11638() /* ty=Tensor[(52), int8] */;
  %278 = %273.0;
  (%274, %275, %276, %277, %278)
}

def @main() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32], Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), bool]) {
  %279 = @func_5521() /* ty=(Tensor[(384), float64],) */;
  %280 = @func_14328() /* ty=(Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) */;
  %281 = @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %282 = @func_9276() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %283 = @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %284 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %285 = @func_11977() /* ty=(Tensor[(10, 4, 7), float64],) */;
  %286 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %287 = @func_11158() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %288 = %287.0;
  %289 = cast(%288, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %290 = log10(%289) /* ty=Tensor[(10, 4, 7), float32] */;
  %291 = @func_9758() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %292 = %291.0;
  %293 = cast(%292, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %294 = shape_of(%290, dtype="int32") /* ty=Tensor[(3), int32] */;
  %295 = cast(%290, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %297 = %279.0;
  %298 = %280.0;
  %299 = %281.0;
  %300 = %282.0;
  %301 = %283.0;
  %302 = %284.0;
  %303 = %285.0;
  %304 = %286.0;
  %305 = logical_and(%295, %296) /* ty=Tensor[(10, 4, 7), bool] */;
  (%297, %298, %299, %300, %301, %302, %303, %304, %305)
}

def @func_3084(%var_3050: bool, %var_3051: Tensor[(10, 3, 5), bool]) -> (Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) {
  %306 = cast(%var_3050, dtype="bool") /* ty=bool */;
  %307 = cast(%var_3051, dtype="bool") /* ty=Tensor[(10, 3, 5), bool] */;
  %308 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %309 = cast(%var_3050, dtype="uint32") /* ty=uint32 */;
  %310 = cast(%var_3051, dtype="uint32") /* ty=Tensor[(10, 3, 5), uint32] */;
  %311 = logical_and(%306, %307) /* ty=Tensor[(10, 3, 5), bool] */;
  %312 = %308.0;
  %313 = bitwise_and(%309, %310) /* ty=Tensor[(10, 3, 5), uint32] */;
  (%311, %312, %313)
}

def @func_6889() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  %314 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
  %315 = %314.2;
  %316 = @func_5581() /* ty=Tensor[(52), int8] */;
  (%315, %316)
}

def @func_15371() -> (Tensor[(384), float64],) {
  %317 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %318 = %317.0;
  (%318,)
}

def @func_11359() -> (Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %319 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %320 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
  %321 = %319.0;
  (%320, %321)
}

def @func_15550() -> Tensor[(6, 1, 13), float32] {
  @func_9897() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_9758() -> (Tensor[(10, 4, 7), float32],) {
  %322 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
  (%322,)
}

def @func_14461() -> (Tensor[(6, 1, 13), float32],) {
  %323 = @func_9897() /* ty=Tensor[(6, 1, 13), float32] */;
  (%323,)
}

def @func_15785() -> (Tensor[(10, 4, 7), float32], Tensor[(8, 15, 3), uint16], Tensor[(360), float32], Tensor[(52), int8], Tensor[(52), int8]) {
  %324 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %325 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %326 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
  %327 = cast(meta[relay.Constant][14] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %328 = cast(meta[relay.Constant][13] /* ty=Tensor[(360), float32] */, dtype="float64") /* ty=Tensor[(360), float64] */;
  %329 = reshape(%325, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %330 = reshape(%326, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %331 = reshape(%327, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %332 = reshape(%328, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float64] */;
  %333 = @func_5910(%329, %330, %331, %332) /* ty=(Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) */;
  %334 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %335 = %324.0;
  %336 = %333.3;
  %337 = %334.0;
  (%335, %336, meta[relay.Constant][13] /* ty=Tensor[(360), float32] */, meta[relay.Constant][14] /* ty=Tensor[(52), int8] */, %337)
}

def @func_7033() -> Tensor[(384), int32] {
  %338 = @func_4940() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) */;
  %338.4
}

def @func_16821() -> Tensor[(384), float64] {
  %339 = @func_15677() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %339.1
}

def @func_3926(%var_3875: Tensor[(1, 1232), float64]) -> (Tensor[(52), int8], Tensor[(8, 14, 11), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  %340 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %341 = cast(%var_3875, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %342 = reshape(%341, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), float64] */;
  %343 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %344 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %345 = %340.0;
  %346 = @func_2650(%342) /* ty=Tensor[(8, 14, 11), float64] */;
  %347 = %343.1;
  %348 = %344.0;
  (%345, %346, %var_3875, %347, %348)
}

def @func_6054(%var_6039: float64) -> (Tensor[(15, 3, 3), float64],) {
  %349 = cast(%var_6039, dtype="float64") /* ty=float64 */;
  %350 = cast(meta[relay.Constant][15] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %351 = floor_mod(%349, %350) /* ty=Tensor[(15, 3, 3), float64] */;
  (%351,)
}

def @func_5581() -> Tensor[(52), int8] {
  %352 = @func_4719() /* ty=(Tensor[(52), int8],) */;
  %352.0
}

def @func_14567(%var_14541: Tensor[(3, 4, 4), bool], %var_14555: Tensor[(25, 6), bool], %var_14560: Tensor[(52), int8]) -> (Tensor[(3, 4, 4), bool], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(10, 3, 5), bool], bool, Tensor[(25, 6), bool], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %353 = cast(%var_14541, dtype="bool") /* ty=Tensor[(3, 4, 4), bool] */;
  %354 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(3, 4, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(meta[relay.Constant][16] /* ty=Tensor[(3, 4, 4), bool] */, dtype="bool") /* ty=Tensor[(3, 4, 4), bool] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %357 = cast(meta[relay.Constant][17] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %358 = cast(meta[relay.Constant][17] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %359 = reshape(%357, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %360 = reshape(%358, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %361 = @func_10042() /* ty=(Tensor[(384), float64],) */;
  %362 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %363 = cast(%var_14555, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
  %364 = reshape(%362, newshape=[]) /* ty=bool */;
  %365 = reshape(%363, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), bool] */;
  %366 = @func_3084(%364, %365) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) */;
  %367 = cast(%var_14560, dtype="int8") /* ty=Tensor[(52), int8] */;
  %368 = reshape(%367, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %369 = @func_9164(%368) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(15, 7, 1), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32]) */;
  %370 = logical_or(%355, %356) /* ty=Tensor[(3, 4, 4), bool] */;
  %371 = @func_3167(%359, %360) /* ty=Tensor[(4, 3, 5), float64] */;
  %372 = %361.0;
  %373 = %366.0;
  %374 = %369.1;
  (%370, %371, meta[relay.Constant][17] /* ty=Tensor[(60), float64] */, %372, %373, False /* ty=bool */, %var_14555, %374, %var_14560)
}

def @func_16646() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(80), uint32], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(8, 60), float32]) {
  %375 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %376 = @func_14726() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(384), float64], Tensor[(384), float64]) */;
  %377 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %378 = @func_10527() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %379 = cast(meta[relay.Constant][18] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %380 = reshape(%379, newshape=[80]) /* ty=Tensor[(80), uint32] */;
  %381 = @func_14385(%380) /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(8, 60), uint32]) */;
  %382 = %381.5;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %384 = atanh(%383) /* ty=Tensor[(8, 60), float32] */;
  %385 = cast(%382, dtype="float64") /* ty=Tensor[(8, 60), float64] */;
  %386 = shape_of(%384, dtype="int32") /* ty=Tensor[(2), int32] */;
  %387 = cast(%384, dtype="float64") /* ty=Tensor[(8, 60), float64] */;
  %388 = dyn.reshape(%385, %386, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %389 = divide(%387, %388) /* ty=Tensor[(8, 60), float64] */;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
  %391 = %375.1;
  %392 = %376.2;
  %393 = %377.0;
  %394 = @func_13080() /* ty=Tensor[(52), int8] */;
  %395 = %378.1;
  %396 = tan(%390) /* ty=Tensor[(8, 60), float32] */;
  (%391, %392, %393, meta[relay.Constant][18] /* ty=Tensor[(80), uint32] */, %394, %395, %396)
}

def @func_14910() -> (Tensor[(52), int8], Tensor[(4, 3, 5), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64]) {
  %397 = @func_12219() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) */;
  %398 = cast(meta[relay.Constant][19] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %399 = reshape(%398, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %400 = @func_12742(%399) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(52), int8], Tensor[(280), float64]) */;
  %401 = %397.0;
  %402 = @func_12278() /* ty=Tensor[(4, 3, 5), float64] */;
  %403 = %400.0;
  (%401, %402, %403, meta[relay.Constant][19] /* ty=Tensor[(280), float64] */)
}

def @func_5468() -> (Tensor[(6, 1, 13), float32],) {
  %404 = @func_4653() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %405 = %404.1;
  (%405,)
}

def @func_9276() -> (Tensor[(10, 4, 7), float32],) {
  %406 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %407 = %406.1;
  (%407,)
}

def @func_12250() -> (Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32]) {
  %408 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
  %409 = %408.0;
  %410 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  (%409, %410)
}

def @func_14450() -> (Tensor[(10, 4, 7), float32], Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) {
  %411 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %412 = @func_13573() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %413 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
  %414 = %411.1;
  %415 = %412.3;
  (%413, %414, %415)
}

def @func_2438() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  %416 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %417 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %418 = %416.1;
  %419 = %417.2;
  (%418, %419)
}

def @func_4315() -> Tensor[(52), int8] {
  %420 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %420.0
}

def @func_11052() -> Tensor[(6, ?, 13), bool] {
  @func_10741() /* ty=Tensor[(6, ?, 13), bool] */
}

def @func_13875(%var_13869: Tensor[(60), float64], %var_13871: Tensor[(105), float32]) -> (Tensor[(384), float64], Tensor[(14, 1232), float32], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) {
  %421 = cast(meta[relay.Constant][20] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %422 = cast(%var_13869, dtype="float64") /* ty=Tensor[(60), float64] */;
  %423 = cast(meta[relay.Constant][21] /* ty=Tensor[(17248), float64] */, dtype="float64") /* ty=Tensor[(17248), float64] */;
  %424 = cast(%var_13871, dtype="float32") /* ty=Tensor[(105), float32] */;
  %425 = reshape(%421, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %426 = reshape(%422, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %427 = reshape(%423, newshape=[14, 1232]) /* ty=Tensor[(14, 1232), float64] */;
  %428 = reshape(%424, newshape=[1, 105]) /* ty=Tensor[(1, 105), float32] */;
  %429 = @func_4303(%425, %426, %427, %428) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) */;
  %430 = @func_6399() /* ty=Tensor[(384), float64] */;
  %431 = %429.7;
  (%430, %431, meta[relay.Constant][20] /* ty=Tensor[(1232), float64] */, %var_13869, meta[relay.Constant][21] /* ty=Tensor[(17248), float64] */, %var_13871)
}

def @func_2803() -> Tensor[(384), float64] {
  %432 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %432.0
}

def @func_16208() -> (Tensor[(384), float64],) {
  %433 = @func_5626() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %434 = %433.1;
  (%434,)
}

def @func_12066() -> (Tensor[(52), int8], Tensor[(480), uint32]) {
  %435 = @func_8588() /* ty=Tensor[(52), int8] */;
  %436 = @func_5550() /* ty=Tensor[(480), uint32] */;
  (%435, %436)
}

def @func_14259(%var_14250: Tensor[(1, 280), float64]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(1, 280), float64]) {
  %437 = cast(%var_14250, dtype="float64") /* ty=Tensor[(1, 280), float64] */;
  %438 = reshape(%437, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %439 = @func_9740(%438) /* ty=(Tensor[(52), int8], Tensor[(52), int8], Tensor[(140, 2), float64], Tensor[(280), float64], Tensor[(15, 7, 1), float32], Tensor[(105, 1), float32], Tensor[(1, 1232), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) */;
  %440 = @func_13784() /* ty=Tensor[(384), float64] */;
  %441 = %439.10;
  (%440, %441, %var_14250)
}

def @func_7426() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %442 = @func_6512() /* ty=(Tensor[(384), float64],) */;
  %443 = @func_5677() /* ty=Tensor[(52), int8] */;
  %444 = %442.0;
  (%443, %444)
}

def @func_4412() -> Tensor[(52), int8] {
  %445 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %445.0
}

def @func_2944() -> (Tensor[(384), float64], Tensor[(10, 4, 7), float32]) {
  %446 = @func_2803() /* ty=Tensor[(384), float64] */;
  %447 = cast(%446, dtype="float64") /* ty=Tensor[(384), float64] */;
  %448 = reshape(%447, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %449 = @func_2331(%448) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %450 = %449.1;
  (%446, %450)
}

def @func_2790() -> (Tensor[(52), int8],) {
  %451 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %452 = %451.1;
  (%452,)
}

def @func_5750() -> Tensor[(384), float64] {
  %453 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %453.2
}

def @func_9125(%var_9119: Tensor[(8, 12, 7), float32]) -> Tensor[(8, 12, 7), float32] {
  %454 = cast(%var_9119, dtype="float32") /* ty=Tensor[(8, 12, 7), float32] */;
  cos(%454) /* ty=Tensor[(8, 12, 7), float32] */
}

def @func_6362() -> (Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) {
  %455 = @func_3465() /* ty=Tensor[(12, 2, 16), float64] */;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(12, 2, 16), float64] */;
  %457 = reshape(%456, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %458 = @func_2331(%457) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %459 = @func_4070() /* ty=Tensor[(52), int8] */;
  %460 = %458.1;
  (%455, %459, %460)
}

def @func_10652() -> (Tensor[(672), int32], Tensor[(384), float64]) {
  %461 = @func_9352() /* ty=(Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) */;
  %462 = %461.4;
  %463 = cast(meta[relay.Constant][22] /* ty=Tensor[(672), float32] */, dtype="int32") /* ty=Tensor[(672), int32] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(1), int32] */;
  %465 = cast(%462, dtype="int32") /* ty=Tensor[(672), int32] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?), int32] */;
  %467 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %468 = left_shift(%465, %466) /* ty=Tensor[(672), int32] */;
  %469 = %467.0;
  (%468, %469)
}

def @func_14648() -> (Tensor[(1280), uint32],) {
  %470 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %471 = %470.6;
  (%471,)
}

def @func_14034() -> (Tensor[(15, 7, 1), float64],) {
  %472 = @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %473 = %472.0;
  (%473,)
}

def @func_11165() -> Tensor[(384), float64] {
  %474 = @func_5249() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %474.1
}

def @func_14112(%var_14096: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64],) {
  %475 = cast(%var_14096, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
  %476 = exp(%475) /* ty=Tensor[(11, 9, 7), float64] */;
  (%476,)
}

def @func_14940(%var_14926: Tensor[(280), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(280), float32], Tensor[(52), int8], Tensor[(52), int8]) {
  %477 = @func_7385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %478 = cast(%var_14926, dtype="float32") /* ty=Tensor[(280), float32] */;
  %479 = reshape(%478, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %480 = @func_933(%479) /* ty=(Tensor[(10, 4, 7), float32],) */;
  %481 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %482 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %483 = %477.0;
  %484 = %480.0;
  %485 = %481.0;
  %486 = %482.0;
  (%483, %484, %var_14926, %485, %486)
}

def @func_11217(%var_11198: Tensor[(13, 3, 11), float64]) -> (Tensor[(6, 9, 13), float64], Tensor[(33), uint16], Tensor[(10, 4, 7), float32], Tensor[(13, 3, 11), bool]) {
  %487 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %488 = %487.0;
  %489 = cast(%488, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
  %490 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 9, 13), float32] */, dtype="float64") /* ty=Tensor[(6, 9, 13), float64] */;
  %491 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %492 = cast(meta[relay.Constant][24] /* ty=Tensor[(33), uint16] */, dtype="uint16") /* ty=Tensor[(33), uint16] */;
  %493 = reshape(%492, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), uint16] */;
  %494 = @func_4365(%493) /* ty=Tensor[(13, 3, 11), bool] */;
  %495 = cast(%494, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
  %496 = sinh(%495) /* ty=Tensor[(13, 3, 11), float64] */;
  %497 = cast(%var_11198, dtype="bool") /* ty=Tensor[(13, 3, 11), bool] */;
  %498 = shape_of(%496, dtype="int32") /* ty=Tensor[(3), int32] */;
  %499 = cast(%496, dtype="bool") /* ty=Tensor[(13, 3, 11), bool] */;
  %500 = dyn.reshape(%497, %498, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %501 = power(%489, %490) /* ty=Tensor[(6, 9, 13), float64] */;
  %502 = %491.0;
  %503 = less_equal(%499, %500) /* ty=Tensor[(13, 3, 11), bool] */;
  (%501, meta[relay.Constant][24] /* ty=Tensor[(33), uint16] */, %502, %503)
}

def @func_10591() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %504 = @func_6613() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64], Tensor[(280), float32]) */;
  %505 = @func_5682() /* ty=(Tensor[(384), float64],) */;
  %506 = %504.2;
  %507 = %505.0;
  (%506, %507)
}

def @func_14214() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %508 = @func_13784() /* ty=Tensor[(384), float64] */;
  %509 = @func_4412() /* ty=Tensor[(52), int8] */;
  (%508, %509)
}

def @func_13727(%var_13676: Tensor[(13, 14, 10), uint16], %var_13677: Tensor[(13, 14, 10), uint16], %var_13711: Tensor[(360), float32], %var_13712: Tensor[(26, 2), int8]) -> (Tensor[(13, 14, 10), uint16], Tensor[(13, 14, 10), float32], Tensor[(10, 4, 7), bool], Tensor[(360), float32], Tensor[(26, 2), int8], Tensor[(384), float64]) {
  %510 = cast(%var_13677, dtype="uint16") /* ty=Tensor[(13, 14, 10), uint16] */;
  %511 = shape_of(%var_13676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%var_13676, dtype="uint16") /* ty=Tensor[(13, 14, 10), uint16] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %514 = cast(%var_13677, dtype="float32") /* ty=Tensor[(13, 14, 10), float32] */;
  %515 = cast(%var_13711, dtype="float32") /* ty=Tensor[(360), float32] */;
  %516 = cast(%var_13711, dtype="float32") /* ty=Tensor[(360), float32] */;
  %517 = cast(%var_13712, dtype="int8") /* ty=Tensor[(26, 2), int8] */;
  %518 = cast(%var_13711, dtype="float64") /* ty=Tensor[(360), float64] */;
  %519 = reshape(%515, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %520 = reshape(%516, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %521 = reshape(%517, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %522 = reshape(%518, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float64] */;
  %523 = @func_5910(%519, %520, %521, %522) /* ty=(Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) */;
  %524 = maximum(%512, %513) /* ty=Tensor[(13, 14, 10), uint16] */;
  %525 = log(%514) /* ty=Tensor[(13, 14, 10), float32] */;
  %526 = %523.4;
  %527 = @func_6948() /* ty=Tensor[(384), float64] */;
  (%524, %525, %526, %var_13711, %var_13712, %527)
}

def @func_5385() -> (Tensor[(6, 1, 13), float32],) {
  %528 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  (%528,)
}

def @func_5847() -> (Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) {
  %529 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %530 = cast(meta[relay.Constant][25] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %531 = reshape(%530, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %532 = %529.0;
  %533 = @func_1212(%531) /* ty=Tensor[(15, 7, 1), float32] */;
  (%532, %533, meta[relay.Constant][25] /* ty=Tensor[(105), float32] */)
}

def @func_13573() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
  %534 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %535 = @func_8758() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %536 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %537 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %538 = %534.8;
  %539 = %535.4;
  %540 = %536.0;
  %541 = %537.0;
  (%538, %539, %540, %541)
}

def @func_4494() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) {
  %542 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %543 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %544 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
  %545 = reshape(%543, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %546 = reshape(%544, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %547 = cast(meta[relay.Constant][27] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %548 = cast(meta[relay.Constant][28] /* ty=Tensor[(1280), uint32] */, dtype="uint32") /* ty=Tensor[(1280), uint32] */;
  %549 = cast(meta[relay.Constant][29] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %550 = reshape(%547, newshape=[1, 10, 8]) /* ty=Tensor[(1, 10, 8), uint32] */;
  %551 = reshape(%548, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint32] */;
  %552 = reshape(%549, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), uint32] */;
  %553 = @func_1311(%550, %551, %552) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) */;
  %554 = @func_2803() /* ty=Tensor[(384), float64] */;
  %555 = %542.0;
  %556 = @func_3167(%545, %546) /* ty=Tensor[(4, 3, 5), float64] */;
  %557 = %553.0;
  %558 = @func_3630() /* ty=Tensor[(52), int8] */;
  (%554, %555, %556, meta[relay.Constant][26] /* ty=Tensor[(15, 4), float64] */, %557, meta[relay.Constant][27] /* ty=Tensor[(80), uint32] */, meta[relay.Constant][28] /* ty=Tensor[(1280), uint32] */, meta[relay.Constant][29] /* ty=Tensor[(480), uint32] */, %558)
}

def @func_11482() -> Tensor[(6, 1, 13), float32] {
  %559 = @func_10106() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %559.0
}

def @func_4384() -> (Tensor[(52), int8],) {
  %560 = @func_4070() /* ty=Tensor[(52), int8] */;
  (%560,)
}

def @func_12374(%var_12336: Tensor[(1232), float64], %var_12337: Tensor[(60), float64], %var_12339: Tensor[(105), float32]) -> (Tensor[(52), int8], Tensor[(52), float64], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) {
  %561 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %562 = @func_4384() /* ty=(Tensor[(52), int8],) */;
  %563 = %562.0;
  %564 = cast(%563, dtype="float64") /* ty=Tensor[(52), float64] */;
  %565 = cast(%var_12336, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %566 = cast(%var_12337, dtype="float64") /* ty=Tensor[(60), float64] */;
  %567 = cast(meta[relay.Constant][30] /* ty=Tensor[(17248), float64] */, dtype="float64") /* ty=Tensor[(17248), float64] */;
  %568 = cast(%var_12339, dtype="float32") /* ty=Tensor[(105), float32] */;
  %569 = reshape(%565, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %570 = reshape(%566, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %571 = reshape(%567, newshape=[14, 1232]) /* ty=Tensor[(14, 1232), float64] */;
  %572 = reshape(%568, newshape=[1, 105]) /* ty=Tensor[(1, 105), float32] */;
  %573 = @func_4303(%569, %570, %571, %572) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) */;
  %574 = %561.1;
  %575 = rsqrt(%564) /* ty=Tensor[(52), float64] */;
  %576 = %573.6;
  (%574, %575, %576, %var_12336, %var_12337, meta[relay.Constant][30] /* ty=Tensor[(17248), float64] */, %var_12339)
}

def @func_2262() -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %577 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
  %578 = cast(meta[relay.Constant][32] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %579 = reshape(%578, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %580 = @func_1145(%579) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) */;
  %581 = atan(%577) /* ty=Tensor[(6, 1, 13), float32] */;
  %582 = %580.2;
  (%581, %582, meta[relay.Constant][32] /* ty=Tensor[(384), float64] */)
}

def @func_8933(%var_8928: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), uint32],) {
  %583 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
  %584 = %583.2;
  %585 = cast(%var_8928, dtype="uint32") /* ty=Tensor[(10, 4, 7), uint32] */;
  %586 = shape_of(%584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%584, dtype="uint32") /* ty=Tensor[(10, 4, 7), uint32] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %589 = subtract(%587, %588) /* ty=Tensor[(10, 4, 7), uint32] */;
  (%589,)
}

def @func_2619() -> Tensor[(384), float64] {
  @func_2454() /* ty=Tensor[(384), float64] */
}

def @func_2405() -> (Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) {
  %590 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %591 = cast(meta[relay.Constant][33] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %592 = reshape(%591, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %593 = @func_1927(%592) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %594 = %590.2;
  %595 = %593.0;
  (%594, %595, meta[relay.Constant][33] /* ty=Tensor[(52), int8] */)
}

def @func_2900() -> (Tensor[(384), float64],) {
  %596 = @func_2803() /* ty=Tensor[(384), float64] */;
  (%596,)
}

def @func_16473(%var_16464: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32],) {
  %597 = cast(%var_16464, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %598 = erf(%597) /* ty=Tensor[(14, 12, 10), float32] */;
  (%598,)
}

def @func_16269() -> (Tensor[(12, 4, 6), int16], Tensor[(12, 4, 6), uint32]) {
  %599 = cast(meta[relay.Constant][34] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
  %600 = tan(%599) /* ty=Tensor[(12, 4, 6), float32] */;
  %601 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 4, 6), float32] */, dtype="int16") /* ty=Tensor[(12, 4, 6), int16] */;
  %602 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %603 = cast(%600, dtype="int16") /* ty=Tensor[(12, 4, 6), int16] */;
  %604 = dyn.reshape(%601, %602, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %605 = cast(meta[relay.Constant][36] /* ty=Tensor[(12, 4, 6), float32] */, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
  %606 = shape_of(%600, dtype="int32") /* ty=Tensor[(3), int32] */;
  %607 = cast(%600, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
  %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %609 = minimum(%603, %604) /* ty=Tensor[(12, 4, 6), int16] */;
  %610 = multiply(%607, %608) /* ty=Tensor[(12, 4, 6), uint32] */;
  (%609, %610)
}

def @func_6948() -> Tensor[(384), float64] {
  %611 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %611.0
}

def @func_15528() -> (Tensor[(384), float64], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32]) {
  %612 = @func_6512() /* ty=(Tensor[(384), float64],) */;
  %613 = @func_11977() /* ty=(Tensor[(10, 4, 7), float64],) */;
  %614 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %615 = %612.0;
  %616 = %613.0;
  %617 = %614.0;
  (%615, %616, %617)
}

def @func_5249() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %618 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %619 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %620 = %618.2;
  %621 = %619.0;
  (%620, %621)
}

def @func_4997() -> (Tensor[(52), int8],) {
  %622 = @func_4719() /* ty=(Tensor[(52), int8],) */;
  %623 = %622.0;
  (%623,)
}

def @func_8082() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) {
  %624 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %625 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %626 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %627 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %628 = %624.0;
  %629 = %625.0;
  %630 = %626.2;
  %631 = @func_2803() /* ty=Tensor[(384), float64] */;
  %632 = %627.0;
  (%628, %629, %630, %631, %632)
}

def @func_10225() -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
  %633 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %634 = @func_4719() /* ty=(Tensor[(52), int8],) */;
  %635 = %633.0;
  %636 = %634.0;
  (%635, %636)
}

def @func_12423() -> Tensor[(52), int8] {
  %637 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %637.0
}

def @func_11598(%var_11590: Tensor[(52), int8]) -> (Tensor[(10, 4, 7), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %638 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %639 = cast(%var_11590, dtype="int8") /* ty=Tensor[(52), int8] */;
  %640 = reshape(%639, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %641 = @func_2870(%640) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) */;
  %642 = %638.0;
  %643 = %641.1;
  (%642, %643, %var_11590)
}

def @func_6643() -> (Tensor[(384), float64], Tensor[(12, 3, 5), float64]) {
  %644 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %645 = %644.1;
  %646 = cast(%645, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %647 = @func_5124() /* ty=Tensor[(384), float64] */;
  %648 = sqrt(%646) /* ty=Tensor[(12, 3, 5), float64] */;
  (%647, %648)
}

def @func_15978() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %649 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %650 = %649.0;
  %651 = @func_2454() /* ty=Tensor[(384), float64] */;
  (%650, %651)
}

def @func_933(%var_926: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), float32],) {
  %652 = cast(meta[relay.Constant][37] /* ty=Tensor[(10, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %653 = shape_of(%var_926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %654 = cast(%var_926, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %655 = dyn.reshape(%652, %653, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %656 = divide(%654, %655) /* ty=Tensor[(10, 4, 7), float32] */;
  (%656,)
}

def @func_14328() -> (Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) {
  %657 = @func_13784() /* ty=Tensor[(384), float64] */;
  %658 = @func_3465() /* ty=Tensor[(12, 2, 16), float64] */;
  %659 = @func_7375() /* ty=Tensor[(384), float64] */;
  (%657, %658, %659)
}

def @func_13317(%var_13275: Tensor[(1232), float64], %var_13277: Tensor[(17248), float64], %var_13278: Tensor[(105, 1), float32]) -> (Tensor[(384), int32], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105, 1), float32], Tensor[(6, ?, 13), bool], Tensor[(52), int8]) {
  %660 = cast(%var_13275, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %661 = cast(meta[relay.Constant][38] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %662 = cast(%var_13277, dtype="float64") /* ty=Tensor[(17248), float64] */;
  %663 = cast(%var_13278, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
  %664 = reshape(%660, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %665 = reshape(%661, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %666 = reshape(%662, newshape=[14, 1232]) /* ty=Tensor[(14, 1232), float64] */;
  %667 = reshape(%663, newshape=[1, 105]) /* ty=Tensor[(1, 105), float32] */;
  %668 = @func_4303(%664, %665, %666, %667) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) */;
  %669 = @func_7033() /* ty=Tensor[(384), int32] */;
  %670 = %668.6;
  %671 = @func_10741() /* ty=Tensor[(6, ?, 13), bool] */;
  %672 = @func_8588() /* ty=Tensor[(52), int8] */;
  (%669, %670, %var_13275, meta[relay.Constant][38] /* ty=Tensor[(60), float64] */, %var_13277, %var_13278, %671, %672)
}

def @func_12742(%var_12728: Tensor[(280), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(52), int8], Tensor[(280), float64]) {
  %673 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %674 = cast(%var_12728, dtype="float64") /* ty=Tensor[(280), float64] */;
  %675 = reshape(%674, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
  %676 = @func_3556(%675) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
  %677 = @func_10343() /* ty=Tensor[(6, 1, 13), float32] */;
  %678 = %673.0;
  %679 = %676.0;
  (%677, %678, %679, %var_12728)
}

def @func_4303(%var_4220: Tensor[(1, 1232), float64], %var_4251: Tensor[(60), float64], %var_4268: Tensor[(14, 1232), float64], %var_4297: Tensor[(1, 105), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) {
  %680 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %681 = cast(%var_4220, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %682 = reshape(%681, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), float64] */;
  %683 = cast(%var_4251, dtype="float64") /* ty=Tensor[(60), float64] */;
  %684 = cast(%var_4251, dtype="float64") /* ty=Tensor[(60), float64] */;
  %685 = reshape(%683, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %686 = reshape(%684, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %687 = @func_3167(%685, %686) /* ty=Tensor[(4, 3, 5), float64] */;
  %688 = cast(%687, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %689 = cast(%687, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %690 = reshape(%688, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %691 = reshape(%689, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %692 = cast(%var_4268, dtype="float32") /* ty=Tensor[(14, 1232), float32] */;
  %693 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %694 = cast(%var_4220, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %695 = log10(%694) /* ty=Tensor[(1, 1232), float64] */;
  %696 = cast(%695, dtype="bool") /* ty=Tensor[(1, 1232), bool] */;
  %697 = cast(%var_4268, dtype="bool") /* ty=Tensor[(14, 1232), bool] */;
  %698 = greater_equal(%696, %697) /* ty=Tensor[(14, 1232), bool] */;
  %699 = cast(%695, dtype="int8") /* ty=Tensor[(1, 1232), int8] */;
  %700 = cast(%698, dtype="int8") /* ty=Tensor[(14, 1232), int8] */;
  %701 = logical_xor(%699, %700) /* ty=Tensor[(14, 1232), int8] */;
  %702 = cast(%695, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
  %703 = cast(%701, dtype="float32") /* ty=Tensor[(14, 1232), float32] */;
  %704 = cast(%var_4297, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
  %705 = reshape(%704, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %706 = %680.0;
  %707 = @func_2650(%682) /* ty=Tensor[(8, 14, 11), float64] */;
  %708 = @func_3167(%690, %691) /* ty=Tensor[(4, 3, 5), float64] */;
  %709 = sigmoid(%692) /* ty=Tensor[(14, 1232), float32] */;
  %710 = %693.1;
  %711 = subtract(%702, %703) /* ty=Tensor[(14, 1232), float32] */;
  %712 = @func_1212(%705) /* ty=Tensor[(15, 7, 1), float32] */;
  (%706, %707, %687, %var_4251, %708, %709, %710, %711, %712, %var_4297)
}

def @func_5550() -> Tensor[(480), uint32] {
  %713 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %713.7
}

def @func_11405() -> Tensor[(10, 4, 7), float32] {
  %714 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %714.0
}

def @func_7078() -> Tensor[(384), int32] {
  @func_7033() /* ty=Tensor[(384), int32] */
}

def @func_8270() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float64]) {
  %715 = @func_7265() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float64]) */;
  %716 = @func_4315() /* ty=Tensor[(52), int8] */;
  %717 = %715.1;
  (%716, %717)
}

def @func_8483() -> (Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) {
  %718 = @func_6643() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64]) */;
  %719 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %720 = %719.0;
  %721 = cast(%720, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
  %722 = atanh(%721) /* ty=Tensor[(6, 1, 13), float32] */;
  %723 = cast(%720, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
  %724 = shape_of(%722, dtype="int32") /* ty=Tensor[(3), int32] */;
  %725 = cast(%722, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
  %726 = dyn.reshape(%723, %724, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %727 = %718.1;
  %728 = subtract(%725, %726) /* ty=Tensor[(6, ?, 13), uint8] */;
  (%727, %728)
}

def @func_13168() -> (Tensor[(480), uint32], Tensor[(52), int8]) {
  %729 = @func_8347() /* ty=Tensor[(480), uint32] */;
  %730 = @func_9449() /* ty=Tensor[(52), int8] */;
  (%729, %730)
}

def @func_8347() -> Tensor[(480), uint32] {
  %731 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %731.7
}

def @func_7385() -> (Tensor[(6, 1, 13), float32],) {
  %732 = @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %733 = %732.0;
  (%733,)
}

def @func_8308() -> (Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
  %734 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
  %735 = cast(meta[relay.Constant][39] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %736 = reshape(%735, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %737 = @func_2870(%736) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) */;
  %738 = %734.0;
  %739 = %737.0;
  (%738, %739, meta[relay.Constant][39] /* ty=Tensor[(52), int8] */)
}

def @func_6905() -> Tensor[(384), float64] {
  %740 = @func_5521() /* ty=(Tensor[(384), float64],) */;
  %740.0
}

def @func_7173() -> (Tensor[(6, 1, 13), float32],) {
  %741 = @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %742 = %741.0;
  (%742,)
}

def @func_7265() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float64]) {
  %743 = @func_6512() /* ty=(Tensor[(384), float64],) */;
  %744 = @func_5309() /* ty=Tensor[(6, 1, 13), float32] */;
  %745 = cast(%744, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
  %746 = %743.0;
  %747 = log10(%745) /* ty=Tensor[(6, 1, 13), float64] */;
  (%746, %747)
}

def @func_7810() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %748 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %749 = %748.1;
  %750 = @func_5581() /* ty=Tensor[(52), int8] */;
  (%749, %750)
}

def @func_8758() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) {
  %751 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %752 = @func_4384() /* ty=(Tensor[(52), int8],) */;
  %753 = cast(meta[relay.Constant][40] /* ty=Tensor[(70, 6), float32] */, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %754 = reshape(%753, newshape=[15, 7, 4]) /* ty=Tensor[(15, 7, 4), float32] */;
  %755 = @func_6189(%754) /* ty=(Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) */;
  %756 = @func_8270() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float64]) */;
  %757 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %758 = cast(meta[relay.Constant][41] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %759 = cast(meta[relay.Constant][42] /* ty=Tensor[(1280), uint32] */, dtype="uint32") /* ty=Tensor[(1280), uint32] */;
  %760 = cast(meta[relay.Constant][43] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %761 = reshape(%758, newshape=[1, 10, 8]) /* ty=Tensor[(1, 10, 8), uint32] */;
  %762 = reshape(%759, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint32] */;
  %763 = reshape(%760, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), uint32] */;
  %764 = @func_1311(%761, %762, %763) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) */;
  %765 = cast(meta[relay.Constant][44] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %766 = reshape(%765, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %767 = %751.1;
  %768 = %752.0;
  %769 = %755.1;
  %770 = @func_2619() /* ty=Tensor[(384), float64] */;
  %771 = %756.1;
  %772 = %757.0;
  %773 = %764.0;
  %774 = @func_1212(%766) /* ty=Tensor[(15, 7, 1), float32] */;
  (%767, %768, %769, meta[relay.Constant][40] /* ty=Tensor[(70, 6), float32] */, %770, %771, %772, %773, meta[relay.Constant][41] /* ty=Tensor[(80), uint32] */, meta[relay.Constant][42] /* ty=Tensor[(1280), uint32] */, meta[relay.Constant][43] /* ty=Tensor[(480), uint32] */, %774, meta[relay.Constant][44] /* ty=Tensor[(105), float32] */)
}

def @func_10412() -> (Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) {
  %775 = @func_3365() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(105), float32]) */;
  %776 = @func_10343() /* ty=Tensor[(6, 1, 13), float32] */;
  %777 = %775.0;
  (%776, %777)
}

def @func_14669() -> (Tensor[(384), float64],) {
  %778 = @func_14328() /* ty=(Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) */;
  %779 = %778.0;
  (%779,)
}

def @func_12278() -> Tensor[(4, 3, 5), float64] {
  %780 = @func_4940() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) */;
  %780.1
}

def @func_2307() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
  %781 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %782 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %783 = %781.2;
  %784 = %782.0;
  (%783, %784)
}

def @func_12706() -> (Tensor[(384), float64], Tensor[(5, 2, 10), float64], float64) {
  %785 = @func_7709() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %786 = cast(7.25004f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %787 = reshape(%786, newshape=[]) /* ty=float64 */;
  %788 = %785.1;
  %789 = @func_5191(%787) /* ty=Tensor[(5, 2, 10), float64] */;
  (%788, %789, 7.25004f64 /* ty=float64 */)
}

def @func_4186(%var_4106: Tensor[(15, 15, 11), float64]) -> (Tensor[(15, 15, 11), float64], Tensor[(10, 4, 7), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(384), float64]) {
  %790 = cast(%var_4106, dtype="float64") /* ty=Tensor[(15, 15, 11), float64] */;
  %791 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %792 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %793 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %794 = %793.0;
  %795 = cast(%794, dtype="int8") /* ty=Tensor[(52), int8] */;
  %796 = reshape(%795, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %797 = @func_2870(%796) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) */;
  %798 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %799 = acosh(%790) /* ty=Tensor[(15, 15, 11), float64] */;
  %800 = %791.0;
  %801 = %792.0;
  %802 = @func_2619() /* ty=Tensor[(384), float64] */;
  %803 = %797.1;
  %804 = @func_4070() /* ty=Tensor[(52), int8] */;
  %805 = %798.0;
  (%799, %800, %801, %802, %794, %803, %804, %805)
}

def @func_7515() -> (Tensor[(384), float64],) {
  %806 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %807 = %806.0;
  (%807,)
}

def @func_9886() -> (Tensor[(10, 4, 7), float32],) {
  %808 = @func_7618() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %809 = %808.0;
  (%809,)
}

def @func_8588() -> Tensor[(52), int8] {
  %810 = @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %810.2
}

def @func_4653() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
  %811 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %812 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %813 = %811.0;
  %814 = %812.0;
  (%813, %814)
}

def @func_14520() -> (Tensor[(384), int32], Tensor[(384), int32]) {
  %815 = @func_13756() /* ty=(Tensor[(384), int32], Tensor[(384), float64]) */;
  %816 = @func_8399() /* ty=Tensor[(384), int32] */;
  %817 = %815.0;
  (%816, %817)
}

def @func_11638() -> Tensor[(52), int8] {
  %818 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %818.0
}

def @func_14466() -> Tensor[(6, 1, 13), float32] {
  %819 = @func_5468() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %819.0
}

def @func_15677() -> (Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %820 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %821 = @func_8758() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %822 = %820.1;
  %823 = %821.4;
  (%822, %823)
}

def @func_3816(%var_3811: Tensor[(13, 2, 9), int8], %var_3812: Tensor[(13, 2, 9), int8]) -> Tensor[(13, 2, 9), int8] {
  %824 = cast(%var_3812, dtype="int8") /* ty=Tensor[(13, 2, 9), int8] */;
  %825 = shape_of(%var_3811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %826 = cast(%var_3811, dtype="int8") /* ty=Tensor[(13, 2, 9), int8] */;
  %827 = dyn.reshape(%824, %825, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%826, %827) /* ty=Tensor[(13, 2, 9), int8] */
}

def @func_3015() -> Tensor[(384), float64] {
  @func_2619() /* ty=Tensor[(384), float64] */
}

def @func_3998() -> (Tensor[(384), float64], Tensor[(13, 2, 9), bool]) {
  %828 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %829 = cast(meta[relay.Constant][45] /* ty=Tensor[(234), int8] */, dtype="int8") /* ty=Tensor[(234), int8] */;
  %830 = cast(meta[relay.Constant][45] /* ty=Tensor[(234), int8] */, dtype="int8") /* ty=Tensor[(234), int8] */;
  %831 = reshape(%829, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), int8] */;
  %832 = reshape(%830, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), int8] */;
  %833 = @func_3816(%831, %832) /* ty=Tensor[(13, 2, 9), int8] */;
  %834 = cast(meta[relay.Constant][45] /* ty=Tensor[(234), int8] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(3), int32] */;
  %836 = cast(%833, dtype="bool") /* ty=Tensor[(13, 2, 9), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %838 = %828.0;
  %839 = logical_or(%836, %837) /* ty=Tensor[(13, 2, 9), bool] */;
  (%838, %839)
}

def @func_10919() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %840 = @func_5682() /* ty=(Tensor[(384), float64],) */;
  %841 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %842 = %840.0;
  %843 = %841.1;
  (%842, %843)
}

def @func_2958() -> (Tensor[(52), int8],) {
  %844 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %845 = %844.0;
  (%845,)
}

def @func_3167(%var_3161: Tensor[(4, 3, 5), float64], %var_3162: Tensor[(4, 3, 5), float64]) -> Tensor[(4, 3, 5), float64] {
  %846 = cast(%var_3162, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %847 = shape_of(%var_3161, dtype="int32") /* ty=Tensor[(3), int32] */;
  %848 = cast(%var_3161, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
  %849 = dyn.reshape(%846, %847, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%848, %849) /* ty=Tensor[(4, 3, 5), float64] */
}

def @func_15177() -> (Tensor[(384), float64],) {
  %850 = @func_2454() /* ty=Tensor[(384), float64] */;
  (%850,)
}

def @func_3200() -> (Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) {
  %851 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %852 = cast(meta[relay.Constant][46] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %853 = reshape(%852, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %854 = @func_1212(%853) /* ty=Tensor[(15, 7, 1), float32] */;
  %855 = cast(%854, dtype="float64") /* ty=Tensor[(15, 7, 1), float64] */;
  %856 = %851.0;
  %857 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %858 = sigmoid(%855) /* ty=Tensor[(15, 7, 1), float64] */;
  (%856, meta[relay.Constant][46] /* ty=Tensor[(105), float32] */, %857, %858)
}

def @func_9897() -> Tensor[(6, 1, 13), float32] {
  %859 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %859.1
}

def @func_11923() -> (Tensor[(10, 4, 7), float64],) {
  %860 = @func_11610() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %861 = %860.0;
  %862 = cast(%861, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
  %863 = log2(%862) /* ty=Tensor[(10, 4, 7), float64] */;
  (%863,)
}

def @func_15347(%var_15344: float64) -> (Tensor[(6, ?, 13), bool], Tensor[(15, 3, 3), float64], float64) {
  %864 = @func_11823() /* ty=(Tensor[(6, ?, 13), bool], Tensor[(384), float64]) */;
  %865 = cast(%var_15344, dtype="float64") /* ty=float64 */;
  %866 = reshape(%865, newshape=[]) /* ty=float64 */;
  %867 = @func_6054(%866) /* ty=(Tensor[(15, 3, 3), float64],) */;
  %868 = %864.0;
  %869 = %867.0;
  (%868, %869, %var_15344)
}

def @func_15250() -> Tensor[(6, ?, 13), uint16] {
  %870 = @func_10527() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %871 = %870.1;
  %872 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %873 = cast(%872, dtype="uint16") /* ty=Tensor[(6, 1, 13), uint16] */;
  %874 = shape_of(%871, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%871, dtype="uint16") /* ty=Tensor[(6, 1, 13), uint16] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%875, %876) /* ty=Tensor[(6, ?, 13), uint16] */
}

def @func_2972(%var_2963: Tensor[(13, 4), int8]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) {
  %877 = cast(%var_2963, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %878 = reshape(%877, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %879 = @func_1927(%878) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %880 = @func_2803() /* ty=Tensor[(384), float64] */;
  %881 = %879.1;
  (%880, %881, %var_2963)
}

def @func_13784() -> Tensor[(384), float64] {
  @func_13141() /* ty=Tensor[(384), float64] */
}

def @func_5203(%var_5196: Tensor[(10, 1), float32], %var_5197: Tensor[(10, 1), float32]) -> (Tensor[(10, ?), bool],) {
  %882 = cast(%var_5197, dtype="bool") /* ty=Tensor[(10, 1), bool] */;
  %883 = shape_of(%var_5196, dtype="int32") /* ty=Tensor[(2), int32] */;
  %884 = cast(%var_5196, dtype="bool") /* ty=Tensor[(10, 1), bool] */;
  %885 = dyn.reshape(%882, %883, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %886 = not_equal(%884, %885) /* ty=Tensor[(10, ?), bool] */;
  (%886,)
}

def @func_4365(%var_4357: Tensor[(1, 3, 11), uint16]) -> Tensor[(13, 3, 11), bool] {
  %887 = cast(%var_4357, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %888 = cast(meta[relay.Constant][47] /* ty=Tensor[(13, 3, 11), uint16] */, dtype="bool") /* ty=Tensor[(13, 3, 11), bool] */;
  equal(%887, %888) /* ty=Tensor[(13, 3, 11), bool] */
}

def @func_3556(%var_3545: Tensor[(10, 4, 7), float64]) -> (Tensor[(52), int8], Tensor[(10, 4, 7), bool]) {
  %889 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %890 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %891 = %890.0;
  %892 = cast(%891, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %893 = cos(%892) /* ty=Tensor[(10, 4, 7), float32] */;
  %894 = cast(%893, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
  %895 = atan(%894) /* ty=Tensor[(10, 4, 7), float64] */;
  %896 = cast(%var_3545, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %897 = shape_of(%895, dtype="int32") /* ty=Tensor[(3), int32] */;
  %898 = cast(%895, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %899 = dyn.reshape(%896, %897, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %900 = %889.0;
  %901 = greater(%898, %899) /* ty=Tensor[(10, 4, 7), bool] */;
  (%900, %901)
}

def @func_5318() -> (Tensor[(15, 7, 1), float64], Tensor[(60), float64]) {
  %902 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %903 = @func_4940() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) */;
  %904 = %902.3;
  %905 = %903.2;
  (%904, %905)
}

def @func_11072() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64], Tensor[(10, 4, 7), float32]) {
  %906 = cast(meta[relay.Constant][48] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %907 = reshape(%906, newshape=[140, 2]) /* ty=Tensor[(140, 2), float64] */;
  %908 = @func_7151(%907) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) */;
  %909 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %910 = @func_2619() /* ty=Tensor[(384), float64] */;
  %911 = %908.0;
  %912 = %909.1;
  (%910, %911, meta[relay.Constant][48] /* ty=Tensor[(280), float64] */, %912)
}

def @func_10967(%var_10923: Tensor[(6, 5, 13), float32]) -> (Tensor[(6, 5, 13), float32],) {
  %913 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %914 = cast(%913, dtype="int32") /* ty=Tensor[(6, 1, 13), int32] */;
  %915 = cast(%var_10923, dtype="int32") /* ty=Tensor[(6, 5, 13), int32] */;
  %916 = left_shift(%914, %915) /* ty=Tensor[(6, 5, 13), int32] */;
  %917 = cast(%916, dtype="float32") /* ty=Tensor[(6, 5, 13), float32] */;
  %918 = log10(%917) /* ty=Tensor[(6, 5, 13), float32] */;
  (%918,)
}

def @func_16094() -> (Tensor[(384), float64],) {
  %919 = @func_13827() /* ty=Tensor[(384), float64] */;
  (%919,)
}

def @func_11547() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %920 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %921 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %922 = %920.0;
  %923 = %921.0;
  (%922, %923)
}

def @func_16741() -> Tensor[(12, 4, 6), uint32] {
  %924 = @func_16269() /* ty=(Tensor[(12, 4, 6), int16], Tensor[(12, 4, 6), uint32]) */;
  %924.1
}

def @func_7058() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  %925 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %926 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %927 = %925.1;
  %928 = %926.0;
  (%927, %928)
}

def @func_9550() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(384), bool]) {
  %929 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %930 = @func_8082() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %931 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %932 = @func_5468() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %933 = %930.3;
  %934 = cast(%933, dtype="float64") /* ty=Tensor[(384), float64] */;
  %935 = reshape(%934, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %936 = @func_3134(%935) /* ty=(Tensor[(384), bool], Tensor[(384), float64]) */;
  %937 = %929.1;
  %938 = %931.1;
  %939 = %932.0;
  %940 = @func_6840() /* ty=Tensor[(384), float64] */;
  %941 = %936.0;
  (%937, %933, %938, %939, %940, %941)
}

def @func_7873() -> Tensor[(384), float64] {
  %942 = @func_5682() /* ty=(Tensor[(384), float64],) */;
  %942.0
}

def @func_16892(%var_16869: Tensor[(280), float32], %var_16873: Tensor[(280), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(280), float64]) {
  %943 = @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %944 = cast(%var_16869, dtype="float32") /* ty=Tensor[(280), float32] */;
  %945 = reshape(%944, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %946 = @func_12622(%945) /* ty=(Tensor[(10, 4, 7), uint64], Tensor[(10, 4, 7), float32]) */;
  %947 = @func_13471() /* ty=(Tensor[(52), int8],) */;
  %948 = cast(%var_16873, dtype="float32") /* ty=Tensor[(280), float32] */;
  %949 = shape_of(%var_16869, dtype="int32") /* ty=Tensor[(1), int32] */;
  %950 = cast(%var_16869, dtype="float32") /* ty=Tensor[(280), float32] */;
  %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?), float32] */;
  %952 = power(%950, %951) /* ty=Tensor[(280), float32] */;
  %953 = cast(%952, dtype="float64") /* ty=Tensor[(280), float64] */;
  %954 = %943.1;
  %955 = %946.1;
  %956 = %947.0;
  %957 = log(%953) /* ty=Tensor[(280), float64] */;
  (%954, %955, %956, %957)
}

def @func_6189(%var_6182: Tensor[(15, 7, 4), float32]) -> (Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) {
  %958 = cast(-6.17192f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %959 = reshape(%958, newshape=[]) /* ty=float64 */;
  %960 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %961 = %960.1;
  %962 = cast(%961, dtype="float32") /* ty=Tensor[(15, 7, 1), float32] */;
  %963 = cast(%var_6182, dtype="float32") /* ty=Tensor[(15, 7, 4), float32] */;
  %964 = @func_5191(%959) /* ty=Tensor[(5, 2, 10), float64] */;
  %965 = power(%962, %963) /* ty=Tensor[(15, 7, 4), float32] */;
  (%964, -6.17192f64 /* ty=float64 */, %965)
}

def @func_14726() -> (Tensor[(12, 2, 16), float64], Tensor[(384), float64], Tensor[(384), float64]) {
  %966 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
  %967 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %968 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %969 = %966.0;
  %970 = %967.0;
  %971 = %968.1;
  (%969, %970, %971)
}

def @func_10805(%var_10775: Tensor[(315), float32]) -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(5, 9, 7), float32], Tensor[(315), float32], Tensor[(384), float64]) {
  %972 = @func_4384() /* ty=(Tensor[(52), int8],) */;
  %973 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %974 = cast(%var_10775, dtype="float32") /* ty=Tensor[(315), float32] */;
  %975 = reshape(%974, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %976 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %977 = %972.0;
  %978 = %973.1;
  %979 = @func_6165(%975) /* ty=Tensor[(5, 9, 7), float32] */;
  %980 = %976.0;
  (%977, %978, %979, %var_10775, %980)
}

def @func_13004() -> (Tensor[(60), float64], Tensor[(6, 10, 13), bool]) {
  %981 = @func_10542() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(60), float64]) */;
  %982 = @func_8483() /* ty=(Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) */;
  %983 = %982.1;
  %984 = cast(%983, dtype="bool") /* ty=Tensor[(6, ?, 13), bool] */;
  %985 = cast(meta[relay.Constant][49] /* ty=Tensor[(6, 10, 13), uint8] */, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %986 = %981.1;
  %987 = less(%984, %985) /* ty=Tensor[(6, 10, 13), bool] */;
  (%986, %987)
}

def @func_2492() -> (Tensor[(6, 1, 13), float32],) {
  %988 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  (%988,)
}

def @func_3255() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32]) {
  %989 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %990 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %991 = %989.0;
  %992 = %990.1;
  (%991, %992)
}

def @func_4719() -> (Tensor[(52), int8],) {
  %993 = @func_3305() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %994 = %993.0;
  (%994,)
}

def @func_5677() -> Tensor[(52), int8] {
  @func_4070() /* ty=Tensor[(52), int8] */
}

def @func_10343() -> Tensor[(6, 1, 13), float32] {
  @func_9897() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_8191() -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
  %995 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %996 = %995.1;
  %997 = @func_5581() /* ty=Tensor[(52), int8] */;
  (%996, %997)
}

def @func_16343() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) {
  %998 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %999 = @func_13756() /* ty=(Tensor[(384), int32], Tensor[(384), float64]) */;
  %1000 = %998.0;
  %1001 = @func_14138() /* ty=Tensor[(384), float64] */;
  %1002 = %999.1;
  (%1000, %1001, %1002)
}

def @func_14152() -> Tensor[(52), int8] {
  %1003 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %1003.0
}

def @func_13114(%var_13110: Tensor[(6, 14, 7), uint64]) -> (Tensor[(6, 14, 7), uint64],) {
  %1004 = cast(%var_13110, dtype="uint64") /* ty=Tensor[(6, 14, 7), uint64] */;
  %1005 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(6, 14, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1006 = cast(meta[relay.Constant][50] /* ty=Tensor[(6, 14, 7), uint64] */, dtype="uint64") /* ty=Tensor[(6, 14, 7), uint64] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1008 = left_shift(%1006, %1007) /* ty=Tensor[(6, 14, 7), uint64] */;
  (%1008,)
}

def @func_9611(%var_9595: Tensor[(16, 7, 9), uint64]) -> (Tensor[(16, 7, 9), bool],) {
  %1009 = cast(meta[relay.Constant][51] /* ty=Tensor[(16, 7, 9), uint64] */, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %1010 = shape_of(%var_9595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1011 = cast(%var_9595, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %1012 = dyn.reshape(%1009, %1010, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1013 = equal(%1011, %1012) /* ty=Tensor[(16, 7, 9), bool] */;
  (%1013,)
}

def @func_12955(%var_12939: Tensor[(12, 2, 2), int8], %var_12940: Tensor[(12, 2, 2), int8], %var_12946: Tensor[(12, 2, 2), int8]) -> (Tensor[(12, 2, 2), int8], Tensor[(12, 2, 2), uint64], Tensor[(12, 2, 2), bool]) {
  %1014 = cast(%var_12940, dtype="int8") /* ty=Tensor[(12, 2, 2), int8] */;
  %1015 = shape_of(%var_12939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1016 = cast(%var_12939, dtype="int8") /* ty=Tensor[(12, 2, 2), int8] */;
  %1017 = dyn.reshape(%1014, %1015, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1018 = cast(%var_12946, dtype="uint64") /* ty=Tensor[(12, 2, 2), uint64] */;
  %1019 = shape_of(%var_12940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(%var_12940, dtype="uint64") /* ty=Tensor[(12, 2, 2), uint64] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1022 = cast(%var_12946, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %1023 = shape_of(%var_12939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1024 = cast(%var_12939, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %1025 = dyn.reshape(%1022, %1023, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1026 = maximum(%1016, %1017) /* ty=Tensor[(12, 2, 2), int8] */;
  %1027 = bitwise_xor(%1020, %1021) /* ty=Tensor[(12, 2, 2), uint64] */;
  %1028 = greater_equal(%1024, %1025) /* ty=Tensor[(12, 2, 2), bool] */;
  (%1026, %1027, %1028)
}

def @func_3630() -> Tensor[(52), int8] {
  %1029 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %1029.0
}

def @func_15459() -> Tensor[(6, 1, 13), float32] {
  %1030 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1030.0
}

def @func_7466() -> (Tensor[(15, 7, 1), float64],) {
  %1031 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %1032 = %1031.3;
  (%1032,)
}

def @func_6512() -> (Tensor[(384), float64],) {
  %1033 = @func_5521() /* ty=(Tensor[(384), float64],) */;
  %1034 = %1033.0;
  (%1034,)
}

def @func_5626() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  %1035 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %1036 = %1035.1;
  %1037 = cast(%1036, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
  %1038 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1039 = sigmoid(%1037) /* ty=Tensor[(6, 1, 13), float32] */;
  %1040 = %1038.2;
  (%1039, %1040)
}

def @func_13141() -> Tensor[(384), float64] {
  %1041 = @func_12152() /* ty=(Tensor[(384), float64],) */;
  %1041.0
}

def @func_12622(%var_12604: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), uint64], Tensor[(10, 4, 7), float32]) {
  %1042 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %1043 = %1042.0;
  %1044 = cast(%var_12604, dtype="uint64") /* ty=Tensor[(10, 4, 7), uint64] */;
  %1045 = shape_of(%1043, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1046 = cast(%1043, dtype="uint64") /* ty=Tensor[(10, 4, 7), uint64] */;
  %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1048 = @func_3756() /* ty=(Tensor[(280), float32], Tensor[(10, 4, 7), float32]) */;
  %1049 = %1048.1;
  %1050 = cast(%1049, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %1051 = shape_of(%var_12604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1052 = cast(%var_12604, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %1053 = dyn.reshape(%1050, %1051, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1054 = logical_xor(%1046, %1047) /* ty=Tensor[(10, 4, 7), uint64] */;
  %1055 = floor_divide(%1052, %1053) /* ty=Tensor[(10, 4, 7), float32] */;
  (%1054, %1055)
}

def @func_11823() -> (Tensor[(6, ?, 13), bool], Tensor[(384), float64]) {
  %1056 = @func_10741() /* ty=Tensor[(6, ?, 13), bool] */;
  %1057 = @func_6399() /* ty=Tensor[(384), float64] */;
  (%1056, %1057)
}

def @func_9380() -> Tensor[(10, 4, 7), float32] {
  %1058 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %1058.0
}

def @func_5448() -> (Tensor[(384), float64],) {
  %1059 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %1060 = %1059.0;
  (%1060,)
}

def @func_16408(%var_16371: Tensor[(4, 8, 13), float32], %var_16372: Tensor[(4, 8, 13), float32]) -> (Tensor[(4, 8, 13), bool], Tensor[(384), float64], Tensor[(52), int8]) {
  %1061 = cast(%var_16372, dtype="bool") /* ty=Tensor[(4, 8, 13), bool] */;
  %1062 = shape_of(%var_16371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1063 = cast(%var_16371, dtype="bool") /* ty=Tensor[(4, 8, 13), bool] */;
  %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1065 = @func_16094() /* ty=(Tensor[(384), float64],) */;
  %1066 = less(%1063, %1064) /* ty=Tensor[(4, 8, 13), bool] */;
  %1067 = %1065.0;
  %1068 = @func_4412() /* ty=Tensor[(52), int8] */;
  (%1066, %1067, %1068)
}

def @func_16544(%var_16531: Tensor[(12, 15, 16), uint16], %var_16532: Tensor[(12, 15, 16), uint16]) -> (Tensor[(12, 15, 16), uint16], Tensor[(10, 4, 7), float64], Tensor[(52), int8]) {
  %1069 = cast(%var_16532, dtype="uint16") /* ty=Tensor[(12, 15, 16), uint16] */;
  %1070 = shape_of(%var_16531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1071 = cast(%var_16531, dtype="uint16") /* ty=Tensor[(12, 15, 16), uint16] */;
  %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1073 = @func_15528() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32]) */;
  %1074 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %1075 = right_shift(%1071, %1072) /* ty=Tensor[(12, 15, 16), uint16] */;
  %1076 = %1073.1;
  %1077 = %1074.0;
  (%1075, %1076, %1077)
}

def @func_3803() -> Tensor[(384), float64] {
  @func_3015() /* ty=Tensor[(384), float64] */
}

def @func_6165(%var_6131: Tensor[(5, 9, 7), float32]) -> Tensor[(5, 9, 7), float32] {
  %1078 = cast(%var_6131, dtype="float32") /* ty=Tensor[(5, 9, 7), float32] */;
  sqrt(%1078) /* ty=Tensor[(5, 9, 7), float32] */
}

def @func_7618() -> (Tensor[(10, 4, 7), float32],) {
  %1079 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
  %1080 = %1079.2;
  (%1080,)
}

def @func_11158() -> (Tensor[(10, 4, 7), float32],) {
  %1081 = @func_9852() /* ty=(Tensor[(6, 1, 13), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32], Tensor[(10, 4, 7), bool], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(480), uint32], Tensor[(12, 3, 5), float64], Tensor[(52), int8], Tensor[(384), int32], Tensor[(10, 4, 7), float32]) */;
  %1082 = %1081.11;
  (%1082,)
}

def @func_9940() -> (Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64]) {
  %1083 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %1084 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %1085 = @func_2803() /* ty=Tensor[(384), float64] */;
  %1086 = %1083.0;
  %1087 = %1084.0;
  (%1085, %1086, %1087)
}

def @func_2331(%var_2327: Tensor[(384), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %1088 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1089 = cast(%var_2327, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1090 = reshape(%1089, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %1091 = @func_1145(%1090) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) */;
  %1092 = %1088.0;
  %1093 = %1091.2;
  (%1092, %1093, %var_2327)
}

def @func_15647() -> (Tensor[(384), float64],) {
  %1094 = @func_11165() /* ty=Tensor[(384), float64] */;
  (%1094,)
}

def @func_2467() -> Tensor[(6, 1, 13), float32] {
  %1095 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1095.0
}

def @func_2558(%var_2524: Tensor[(52), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %1096 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1097 = cast(%var_2524, dtype="int8") /* ty=Tensor[(52), int8] */;
  %1098 = reshape(%1097, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %1099 = @func_460(%1098) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %1100 = %1096.0;
  %1101 = %1099.0;
  (%1100, %1101, %var_2524)
}

def @func_2696() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) {
  %1102 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %1103 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1104 = %1103.0;
  %1105 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %1106 = %1105.1;
  %1107 = cast(%1106, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %1108 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1109 = cast(%1104, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %1110 = dyn.reshape(%1107, %1108, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1111 = %1102.0;
  %1112 = cast(%1111, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1113 = reshape(%1112, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %1114 = @func_1145(%1113) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) */;
  %1115 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %1116 = logical_or(%1109, %1110) /* ty=Tensor[(6, ?, 13), bool] */;
  %1117 = %1114.1;
  (%1111, %1115, %1116, %1117)
}

def @func_6079(%var_6071: float64) -> (Tensor[(52), int8], Tensor[(15, 3, 3), float64], float64) {
  %1118 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %1119 = cast(%var_6071, dtype="float64") /* ty=float64 */;
  %1120 = reshape(%1119, newshape=[]) /* ty=float64 */;
  %1121 = @func_6054(%1120) /* ty=(Tensor[(15, 3, 3), float64],) */;
  %1122 = %1118.0;
  %1123 = %1121.0;
  (%1122, %1123, %var_6071)
}

def @func_11674(%var_11669: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), float32],) {
  %1124 = cast(%var_11669, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %1125 = sqrt(%1124) /* ty=Tensor[(12, 13, 13), float64] */;
  %1126 = cast(%1125, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  %1127 = cosh(%1126) /* ty=Tensor[(12, 13, 13), float32] */;
  (%1127,)
}

def @func_14385(%var_14373: Tensor[(80), uint32]) -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(8, 60), uint32]) {
  %1128 = @func_7709() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %1129 = @func_12152() /* ty=(Tensor[(384), float64],) */;
  %1130 = cast(%var_14373, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %1131 = cast(meta[relay.Constant][52] /* ty=Tensor[(1280), uint32] */, dtype="uint32") /* ty=Tensor[(1280), uint32] */;
  %1132 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 60), uint32] */, dtype="uint32") /* ty=Tensor[(8, 60), uint32] */;
  %1133 = reshape(%1130, newshape=[1, 10, 8]) /* ty=Tensor[(1, 10, 8), uint32] */;
  %1134 = reshape(%1131, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint32] */;
  %1135 = reshape(%1132, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), uint32] */;
  %1136 = @func_1311(%1133, %1134, %1135) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) */;
  %1137 = %1128.0;
  %1138 = %1129.0;
  %1139 = %1136.0;
  (%1137, %1138, %1139, %var_14373, meta[relay.Constant][52] /* ty=Tensor[(1280), uint32] */, meta[relay.Constant][53] /* ty=Tensor[(8, 60), uint32] */)
}

def @func_14806() -> Tensor[(384), float64] {
  %1140 = @func_9352() /* ty=(Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) */;
  %1140.0
}

def @func_7591(%var_7567: Tensor[(6, 12, 13), float32]) -> (Tensor[(6, 12, 13), bool],) {
  %1141 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1142 = %1141.0;
  %1143 = cast(%1142, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
  %1144 = acosh(%1143) /* ty=Tensor[(6, 1, 13), float32] */;
  %1145 = cast(%1144, dtype="int8") /* ty=Tensor[(6, 1, 13), int8] */;
  %1146 = cast(%var_7567, dtype="int8") /* ty=Tensor[(6, 12, 13), int8] */;
  %1147 = add(%1145, %1146) /* ty=Tensor[(6, 12, 13), int8] */;
  %1148 = cast(%var_7567, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
  %1149 = shape_of(%1147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1150 = cast(%1147, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
  %1151 = dyn.reshape(%1148, %1149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1152 = greater(%1150, %1151) /* ty=Tensor[(6, 12, 13), bool] */;
  (%1152,)
}

def @func_14138() -> Tensor[(384), float64] {
  @func_7375() /* ty=Tensor[(384), float64] */
}

def @func_3134(%var_3113: Tensor[(384), float64]) -> (Tensor[(384), bool], Tensor[(384), float64]) {
  %1153 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %1154 = %1153.0;
  %1155 = cast(%var_3113, dtype="bool") /* ty=Tensor[(384), bool] */;
  %1156 = shape_of(%1154, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1157 = cast(%1154, dtype="bool") /* ty=Tensor[(384), bool] */;
  %1158 = dyn.reshape(%1155, %1156, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1159 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %1160 = logical_and(%1157, %1158) /* ty=Tensor[(384), bool] */;
  %1161 = %1159.0;
  (%1160, %1161)
}

def @func_4940() -> (Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) {
  %1162 = @func_3365() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(105), float32]) */;
  %1163 = cast(meta[relay.Constant][54] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1164 = cast(meta[relay.Constant][54] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1165 = reshape(%1163, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %1166 = reshape(%1164, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %1167 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %1168 = %1167.0;
  %1169 = @func_2803() /* ty=Tensor[(384), float64] */;
  %1170 = cast(%1169, dtype="int32") /* ty=Tensor[(384), int32] */;
  %1171 = shape_of(%1168, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1172 = cast(%1168, dtype="int32") /* ty=Tensor[(384), int32] */;
  %1173 = dyn.reshape(%1170, %1171, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1174 = %1162.0;
  %1175 = @func_3167(%1165, %1166) /* ty=Tensor[(4, 3, 5), float64] */;
  %1176 = @func_3465() /* ty=Tensor[(12, 2, 16), float64] */;
  %1177 = minimum(%1172, %1173) /* ty=Tensor[(384), int32] */;
  (%1174, %1175, meta[relay.Constant][54] /* ty=Tensor[(60), float64] */, %1176, %1177)
}

def @func_14988(%var_14966: Tensor[(315), float32]) -> (Tensor[(52), int8], Tensor[(315), float32], Tensor[(5, 9, 7), float64]) {
  %1178 = cast(%var_14966, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1179 = reshape(%1178, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
  %1180 = @func_6165(%1179) /* ty=Tensor[(5, 9, 7), float32] */;
  %1181 = cast(%1180, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
  %1182 = @func_5581() /* ty=Tensor[(52), int8] */;
  %1183 = sigmoid(%1181) /* ty=Tensor[(5, 9, 7), float64] */;
  (%1182, %var_14966, %1183)
}

def @func_11610() -> (Tensor[(10, 4, 7), float32],) {
  %1184 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %1185 = %1184.1;
  (%1185,)
}

def @func_6693(%var_6691: Tensor[(825, 3), float64]) -> (Tensor[(384), float64], float64, Tensor[(420), float32], Tensor[(384), float64], Tensor[(825, 3), float64]) {
  %1186 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %1187 = cast(meta[relay.Constant][55] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %1188 = reshape(%1187, newshape=[15, 7, 4]) /* ty=Tensor[(15, 7, 4), float32] */;
  %1189 = @func_6189(%1188) /* ty=(Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) */;
  %1190 = cast(%var_6691, dtype="float64") /* ty=Tensor[(825, 3), float64] */;
  %1191 = reshape(%1190, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), float64] */;
  %1192 = @func_4186(%1191) /* ty=(Tensor[(15, 15, 11), float64], Tensor[(10, 4, 7), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(384), float64]) */;
  %1193 = %1186.0;
  %1194 = %1189.1;
  %1195 = %1192.7;
  (%1193, %1194, meta[relay.Constant][55] /* ty=Tensor[(420), float32] */, %1195, %var_6691)
}

def @func_10542() -> (Tensor[(6, 1, 13), float32], Tensor[(60), float64]) {
  %1196 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1197 = @func_5318() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(60), float64]) */;
  %1198 = %1196.0;
  %1199 = %1197.1;
  (%1198, %1199)
}

def @func_10691() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %1200 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %1201 = %1200.0;
  %1202 = @func_3803() /* ty=Tensor[(384), float64] */;
  (%1201, %1202)
}

def @func_8803() -> Tensor[(52), int8] {
  @func_3630() /* ty=Tensor[(52), int8] */
}

def @func_12152() -> (Tensor[(384), float64],) {
  %1203 = @func_7375() /* ty=Tensor[(384), float64] */;
  (%1203,)
}

def @func_12472() -> (Tensor[(52), int8],) {
  %1204 = @func_9940() /* ty=(Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64]) */;
  %1205 = %1204.1;
  (%1205,)
}

def @func_3305() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32]) {
  %1206 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %1207 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %1208 = %1206.0;
  %1209 = %1207.2;
  (%1208, %1209)
}

def @func_14500() -> (Tensor[(384), float64], Tensor[(10, 4, 7), float32], Tensor[(672), int32]) {
  %1210 = @func_14214() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */;
  %1211 = @func_11158() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %1212 = @func_10652() /* ty=(Tensor[(672), int32], Tensor[(384), float64]) */;
  %1213 = %1210.0;
  %1214 = %1211.0;
  %1215 = %1212.0;
  (%1213, %1214, %1215)
}

def @func_11788(%var_11767: Tensor[(384), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(384), bool], Tensor[(6, 1, 13), float32]) {
  %1216 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1217 = @func_9074() /* ty=(Tensor[(384), float64],) */;
  %1218 = %1217.0;
  %1219 = cast(%var_11767, dtype="bool") /* ty=Tensor[(384), bool] */;
  %1220 = shape_of(%1218, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1221 = cast(%1218, dtype="bool") /* ty=Tensor[(384), bool] */;
  %1222 = dyn.reshape(%1219, %1220, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1223 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1224 = %1216.0;
  %1225 = greater(%1221, %1222) /* ty=Tensor[(384), bool] */;
  %1226 = %1223.0;
  (%1224, %1225, %1226)
}

def @func_9164(%var_9136: Tensor[(52), int8]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(15, 7, 1), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32]) {
  %1227 = @func_7515() /* ty=(Tensor[(384), float64],) */;
  %1228 = cast(%var_9136, dtype="int8") /* ty=Tensor[(52), int8] */;
  %1229 = reshape(%1228, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %1230 = @func_460(%1229) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %1231 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
  %1232 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
  %1233 = %1227.0;
  %1234 = %1230.0;
  %1235 = %1231.0;
  %1236 = @func_5750() /* ty=Tensor[(384), float64] */;
  %1237 = %1232.0;
  %1238 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
  (%1233, %1234, %var_9136, %1235, %1236, %1237, %1238)
}

def @func_5309() -> Tensor[(6, 1, 13), float32] {
  %1239 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %1239.1
}

def @func_12587() -> (Tensor[(384), float64],) {
  %1240 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %1241 = %1240.1;
  (%1241,)
}

def @func_16126() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %1242 = @func_3998() /* ty=(Tensor[(384), float64], Tensor[(13, 2, 9), bool]) */;
  %1243 = @func_8803() /* ty=Tensor[(52), int8] */;
  %1244 = %1242.0;
  (%1243, %1244)
}

def @func_12862(%var_12836: Tensor[(6, 7, 9), int64], %var_12837: Tensor[(6, 7, 9), int64]) -> (Tensor[(6, ?, 13), bool], Tensor[(6, 7, 9), bool], Tensor[(6, 1, 13), float32]) {
  %1245 = @func_11823() /* ty=(Tensor[(6, ?, 13), bool], Tensor[(384), float64]) */;
  %1246 = cast(%var_12837, dtype="int64") /* ty=Tensor[(6, 7, 9), int64] */;
  %1247 = shape_of(%var_12836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%var_12836, dtype="int64") /* ty=Tensor[(6, 7, 9), int64] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1250 = left_shift(%1248, %1249) /* ty=Tensor[(6, 7, 9), int64] */;
  %1251 = cast(%1250, dtype="bool") /* ty=Tensor[(6, 7, 9), bool] */;
  %1252 = shape_of(%var_12836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1253 = cast(%var_12836, dtype="bool") /* ty=Tensor[(6, 7, 9), bool] */;
  %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1255 = %1245.0;
  %1256 = greater(%1253, %1254) /* ty=Tensor[(6, 7, 9), bool] */;
  %1257 = @func_10343() /* ty=Tensor[(6, 1, 13), float32] */;
  (%1255, %1256, %1257)
}

def @func_15604() -> (Tensor[(480), uint32], Tensor[(384), float64]) {
  %1258 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %1259 = %1258.7;
  %1260 = @func_14806() /* ty=Tensor[(384), float64] */;
  (%1259, %1260)
}

def @func_4830() -> (Tensor[(384), float64],) {
  %1261 = @func_2454() /* ty=Tensor[(384), float64] */;
  (%1261,)
}

def @func_11568() -> (Tensor[(6, 1, 13), float32],) {
  %1262 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %1263 = %1262.0;
  (%1263,)
}

def @func_1145(%var_1127: Tensor[(4, 6, 16), float64]) -> (Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) {
  %1264 = cast(%var_1127, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
  %1265 = cast(meta[relay.Constant][56] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
  %1266 = reshape(%1265, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %1267 = @func_933(%1266) /* ty=(Tensor[(10, 4, 7), float32],) */;
  %1268 = %1267.0;
  %1269 = cast(%1268, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %1270 = reshape(%1269, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %1271 = @func_933(%1270) /* ty=(Tensor[(10, 4, 7), float32],) */;
  %1272 = cast(%1268, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
  %1273 = log(%1264) /* ty=Tensor[(4, 6, 16), float64] */;
  %1274 = %1271.0;
  %1275 = tan(%1272) /* ty=Tensor[(10, 4, 7), float64] */;
  (%1273, meta[relay.Constant][56] /* ty=Tensor[(280), float32] */, %1274, %1275)
}

def @func_13361() -> (Tensor[(6, 1, 13), float32],) {
  %1276 = @func_7385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1277 = %1276.0;
  (%1277,)
}

def @func_13080() -> Tensor[(52), int8] {
  %1278 = @func_8082() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %1278.0
}

def @func_10148() -> (Tensor[(480), uint32], Tensor[(384), float64]) {
  %1279 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %1280 = @func_7265() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float64]) */;
  %1281 = %1279.7;
  %1282 = %1280.0;
  (%1281, %1282)
}

def @func_14768(%var_14763: Tensor[(6, 1, 13), float32]) -> (Tensor[(6, ?, 13), int16],) {
  %1283 = @func_10106() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1284 = %1283.0;
  %1285 = cast(%var_14763, dtype="int16") /* ty=Tensor[(6, 1, 13), int16] */;
  %1286 = shape_of(%1284, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1287 = cast(%1284, dtype="int16") /* ty=Tensor[(6, 1, 13), int16] */;
  %1288 = dyn.reshape(%1285, %1286, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1289 = logical_xor(%1287, %1288) /* ty=Tensor[(6, ?, 13), int16] */;
  (%1289,)
}

def @func_2830(%var_2813: Tensor[(52), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) {
  %1290 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1291 = cast(%var_2813, dtype="int8") /* ty=Tensor[(52), int8] */;
  %1292 = reshape(%1291, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %1293 = @func_460(%1292) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %1294 = %1293.0;
  %1295 = cast(%1294, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
  %1296 = reshape(%1295, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %1297 = @func_460(%1296) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %1298 = %1290.0;
  %1299 = %1297.0;
  (%1298, %1294, %var_2813, %1299)
}

def @func_1311(%var_1279: Tensor[(1, 10, 8), uint32], %var_1280: Tensor[(16, 10, 8), uint32], %var_1290: Tensor[(6, 10, 8), uint32]) -> (Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) {
  %1300 = cast(%var_1279, dtype="bool") /* ty=Tensor[(1, 10, 8), bool] */;
  %1301 = cast(%var_1280, dtype="bool") /* ty=Tensor[(16, 10, 8), bool] */;
  %1302 = cast(%var_1279, dtype="float64") /* ty=Tensor[(1, 10, 8), float64] */;
  %1303 = cast(%var_1290, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %1304 = greater(%1300, %1301) /* ty=Tensor[(16, 10, 8), bool] */;
  %1305 = subtract(%1302, %1303) /* ty=Tensor[(6, 10, 8), float64] */;
  (%1304, %1305)
}

def @func_3756() -> (Tensor[(280), float32], Tensor[(10, 4, 7), float32]) {
  %1306 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %1307 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1308 = %1306.3;
  %1309 = %1307.1;
  (%1308, %1309)
}

def @func_11143() -> (Tensor[(384), float64], Tensor[(13, 4), int8], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float64]) {
  %1310 = @func_7515() /* ty=(Tensor[(384), float64],) */;
  %1311 = cast(meta[relay.Constant][57] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %1312 = reshape(%1311, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %1313 = @func_2972(%1312) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) */;
  %1314 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1315 = %1313.2;
  %1316 = cast(%1315, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %1317 = reshape(%1316, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %1318 = @func_1927(%1317) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %1319 = %1310.0;
  %1320 = %1314.0;
  %1321 = %1318.0;
  (%1319, %1315, meta[relay.Constant][57] /* ty=Tensor[(52), int8] */, %1320, %1321)
}

def @func_16797(%var_16781: Tensor[(315), float32]) -> (Tensor[(384), int32], Tensor[(5, 9, 7), float32], Tensor[(315), float32]) {
  %1322 = cast(%var_16781, dtype="float32") /* ty=Tensor[(315), float32] */;
  %1323 = reshape(%1322, newshape=[315]) /* ty=Tensor[(315), float32] */;
  %1324 = @func_10805(%1323) /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(5, 9, 7), float32], Tensor[(315), float32], Tensor[(384), float64]) */;
  %1325 = @func_8399() /* ty=Tensor[(384), int32] */;
  %1326 = %1324.2;
  (%1325, %1326, %var_16781)
}

def @func_9352() -> (Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) {
  %1327 = @func_5988() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %1328 = cast(meta[relay.Constant][58] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1329 = reshape(%1328, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), float64] */;
  %1330 = cast(meta[relay.Constant][59] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %1331 = reshape(%1330, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float32] */;
  %1332 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %1333 = %1327.0;
  %1334 = @func_2650(%1329) /* ty=Tensor[(8, 14, 11), float64] */;
  %1335 = @func_9125(%1331) /* ty=Tensor[(8, 12, 7), float32] */;
  %1336 = %1332.0;
  (%1333, %1334, meta[relay.Constant][58] /* ty=Tensor[(1232), float64] */, %1335, meta[relay.Constant][59] /* ty=Tensor[(672), float32] */, %1336)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_8082() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) {
  %0 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %1 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %2 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %3 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %4 = %0.0;
  %5 = %1.0;
  %6 = %2.2;
  %7 = @func_2803() /* ty=Tensor[(384), float64] */;
  %8 = %3.0;
  (%4, %5, %6, %7, %8)
}

def @func_15460() -> Tensor[(6, 1, 13), float32] {
  %10 = fn () -> Tensor[(6, 1, 13), float32] {
    %9 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %9.0
  };
  %10() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_12622(%var_12604: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), uint64], Tensor[(10, 4, 7), float32]) {
  %11 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %12 = %11.0;
  %13 = cast(%var_12604, dtype="uint64") /* ty=Tensor[(10, 4, 7), uint64] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="uint64") /* ty=Tensor[(10, 4, 7), uint64] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %17 = @func_3756() /* ty=(Tensor[(280), float32], Tensor[(10, 4, 7), float32]) */;
  %18 = %17.1;
  %19 = cast(%18, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %20 = shape_of(%var_12604, dtype="int32") /* ty=Tensor[(3), int32] */;
  %21 = cast(%var_12604, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %23 = logical_xor(%15, %16) /* ty=Tensor[(10, 4, 7), uint64] */;
  %24 = floor_divide(%21, %22) /* ty=Tensor[(10, 4, 7), float32] */;
  (%23, %24)
}

def @func_11677(%var_11675: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), float32],) {
  @func_11674(%var_11675) /* ty=(Tensor[(12, 13, 13), float32],) */
}

def @func_4734() -> Tensor[(52), int8] {
  %25 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %25.0
}

def @func_16192() -> Tensor[(6, 1, 13), float32] {
  %27 = fn () -> Tensor[(6, 1, 13), float32] {
    %26 = @func_10412() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) */;
    %26.0
  };
  %27() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_9352() -> (Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) {
  %28 = @func_5988() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %29 = cast(meta[relay.Constant][0] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %30 = reshape(%29, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), float64] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(672), float32] */, dtype="float32") /* ty=Tensor[(672), float32] */;
  %32 = reshape(%31, newshape=[8, 12, 7]) /* ty=Tensor[(8, 12, 7), float32] */;
  %33 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %34 = %28.0;
  %35 = @func_2650(%30) /* ty=Tensor[(8, 14, 11), float64] */;
  %36 = @func_9125(%32) /* ty=Tensor[(8, 12, 7), float32] */;
  %37 = %33.0;
  (%34, %35, meta[relay.Constant][0] /* ty=Tensor[(1232), float64] */, %36, meta[relay.Constant][1] /* ty=Tensor[(672), float32] */, %37)
}

def @func_9942() -> (Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64]) {
  @func_9940() /* ty=(Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64]) */
}

def @func_4071() -> Tensor[(52), int8] {
  %39 = fn () -> Tensor[(52), int8] {
    %38 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
    %38.0
  };
  %39() /* ty=Tensor[(52), int8] */
}

def @func_4412() -> Tensor[(52), int8] {
  %40 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %40.0
}

def @func_16647() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(80), uint32], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(8, 60), float32]) {
  %63 = fn () -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(80), uint32], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(8, 60), float32]) {
    %41 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
    %42 = @func_14726() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(384), float64], Tensor[(384), float64]) */;
    %43 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
    %44 = @func_10527() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
    %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
    %46 = reshape(%45, newshape=[80]) /* ty=Tensor[(80), uint32] */;
    %47 = @func_14385(%46) /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(8, 60), uint32]) */;
    %48 = %47.5;
    %49 = cast(%48, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
    %50 = atanh(%49) /* ty=Tensor[(8, 60), float32] */;
    %51 = cast(%48, dtype="float64") /* ty=Tensor[(8, 60), float64] */;
    %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(2), int32] */;
    %53 = cast(%50, dtype="float64") /* ty=Tensor[(8, 60), float64] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %55 = divide(%53, %54) /* ty=Tensor[(8, 60), float64] */;
    %56 = cast(%55, dtype="float32") /* ty=Tensor[(8, 60), float32] */;
    %57 = %41.1;
    %58 = %42.2;
    %59 = %43.0;
    %60 = @func_13080() /* ty=Tensor[(52), int8] */;
    %61 = %44.1;
    %62 = tan(%56) /* ty=Tensor[(8, 60), float32] */;
    (%57, %58, %59, meta[relay.Constant][2] /* ty=Tensor[(80), uint32] */, %60, %61, %62)
  };
  %63() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(80), uint32], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(8, 60), float32]) */
}

def @func_9760() -> (Tensor[(10, 4, 7), float32],) {
  @func_9758() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_7387() -> (Tensor[(6, 1, 13), float32],) {
  @func_7385() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_11359() -> (Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %64 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %65 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
  %66 = %64.0;
  (%65, %66)
}

def @func_10542() -> (Tensor[(6, 1, 13), float32], Tensor[(60), float64]) {
  %67 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %68 = @func_5318() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(60), float64]) */;
  %69 = %67.0;
  %70 = %68.1;
  (%69, %70)
}

def @func_5469() -> (Tensor[(6, 1, 13), float32],) {
  %73 = fn () -> (Tensor[(6, 1, 13), float32],) {
    %71 = @func_4653() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
    %72 = %71.1;
    (%72,)
  };
  %73() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_11279() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %78 = fn () -> (Tensor[(384), float64], Tensor[(384), float64]) {
    %74 = @func_5249() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
    %75 = @func_10591() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
    %76 = %74.1;
    %77 = %75.1;
    (%76, %77)
  };
  %78() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_3365() -> (Tensor[(6, 1, 13), float32], Tensor[(105), float32]) {
  %79 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %80 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %81 = %79.0;
  %82 = %80.1;
  (%81, %82)
}

def @func_11601(%var_11599: Tensor[(52), int8]) -> (Tensor[(10, 4, 7), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  @func_11598(%var_11599) /* ty=(Tensor[(10, 4, 7), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */
}

def @func_6695(%var_6694: Tensor[(825, 3), float64]) -> (Tensor[(384), float64], float64, Tensor[(420), float32], Tensor[(384), float64], Tensor[(825, 3), float64]) {
  %93 = fn (%var_6691: Tensor[(825, 3), float64]) -> (Tensor[(384), float64], float64, Tensor[(420), float32], Tensor[(384), float64], Tensor[(825, 3), float64]) {
    %83 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
    %84 = cast(meta[relay.Constant][3] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %85 = reshape(%84, newshape=[15, 7, 4]) /* ty=Tensor[(15, 7, 4), float32] */;
    %86 = @func_6189(%85) /* ty=(Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) */;
    %87 = cast(%var_6691, dtype="float64") /* ty=Tensor[(825, 3), float64] */;
    %88 = reshape(%87, newshape=[15, 15, 11]) /* ty=Tensor[(15, 15, 11), float64] */;
    %89 = @func_4186(%88) /* ty=(Tensor[(15, 15, 11), float64], Tensor[(10, 4, 7), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(384), float64]) */;
    %90 = %83.0;
    %91 = %86.1;
    %92 = %89.7;
    (%90, %91, meta[relay.Constant][3] /* ty=Tensor[(420), float32] */, %92, %var_6691)
  };
  %93(%var_6694) /* ty=(Tensor[(384), float64], float64, Tensor[(420), float32], Tensor[(384), float64], Tensor[(825, 3), float64]) */
}

def @func_10692() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %97 = fn () -> (Tensor[(384), float64], Tensor[(384), float64]) {
    %94 = @func_2381() /* ty=(Tensor[(384), float64],) */;
    %95 = %94.0;
    %96 = @func_3803() /* ty=Tensor[(384), float64] */;
    (%95, %96)
  };
  %97() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_11823() -> (Tensor[(6, ?, 13), bool], Tensor[(384), float64]) {
  %98 = @func_10741() /* ty=Tensor[(6, ?, 13), bool] */;
  %99 = @func_6399() /* ty=Tensor[(384), float64] */;
  (%98, %99)
}

def @func_5207(%var_5205: Tensor[(10, 1), float32], %var_5206: Tensor[(10, 1), float32]) -> (Tensor[(10, ?), bool],) {
  @func_5203(%var_5205, %var_5206) /* ty=(Tensor[(10, ?), bool],) */
}

def @func_3465() -> Tensor[(12, 2, 16), float64] {
  %100 = cast(meta[relay.Constant][5] /* ty=Tensor[(12, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 16), float64] */;
  %101 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(12, 2, 16), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %102 = cast(meta[relay.Constant][4] /* ty=Tensor[(12, 2, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 2, 16), float64] */;
  %103 = dyn.reshape(%100, %101, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%102, %103) /* ty=Tensor[(12, 2, 16), float64] */
}

def @func_5124() -> Tensor[(384), float64] {
  %104 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %104.0
}

def @func_14385(%var_14373: Tensor[(80), uint32]) -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(8, 60), uint32]) {
  %105 = @func_7709() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %106 = @func_12152() /* ty=(Tensor[(384), float64],) */;
  %107 = cast(%var_14373, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %108 = cast(meta[relay.Constant][6] /* ty=Tensor[(1280), uint32] */, dtype="uint32") /* ty=Tensor[(1280), uint32] */;
  %109 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 60), uint32] */, dtype="uint32") /* ty=Tensor[(8, 60), uint32] */;
  %110 = reshape(%107, newshape=[1, 10, 8]) /* ty=Tensor[(1, 10, 8), uint32] */;
  %111 = reshape(%108, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint32] */;
  %112 = reshape(%109, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), uint32] */;
  %113 = @func_1311(%110, %111, %112) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) */;
  %114 = %105.0;
  %115 = %106.0;
  %116 = %113.0;
  (%114, %115, %116, %var_14373, meta[relay.Constant][6] /* ty=Tensor[(1280), uint32] */, meta[relay.Constant][7] /* ty=Tensor[(8, 60), uint32] */)
}

def @func_6057(%var_6055: float64) -> (Tensor[(15, 3, 3), float64],) {
  @func_6054(%var_6055) /* ty=(Tensor[(15, 3, 3), float64],) */
}

def @func_4189(%var_4187: Tensor[(15, 15, 11), float64]) -> (Tensor[(15, 15, 11), float64], Tensor[(10, 4, 7), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(384), float64]) {
  @func_4186(%var_4187) /* ty=(Tensor[(15, 15, 11), float64], Tensor[(10, 4, 7), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(384), float64]) */
}

def @func_2382() -> (Tensor[(384), float64],) {
  %119 = fn () -> (Tensor[(384), float64],) {
    %117 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
    %118 = %117.0;
    (%118,)
  };
  %119() /* ty=(Tensor[(384), float64],) */
}

def @func_14153() -> Tensor[(52), int8] {
  %121 = fn () -> Tensor[(52), int8] {
    %120 = @func_2958() /* ty=(Tensor[(52), int8],) */;
    %120.0
  };
  %121() /* ty=Tensor[(52), int8] */
}

def @func_3467() -> Tensor[(12, 2, 16), float64] {
  @func_3465() /* ty=Tensor[(12, 2, 16), float64] */
}

def @func_11361() -> (Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  @func_11359() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */
}

def @func_11053() -> Tensor[(6, ?, 13), bool] {
  %122 = fn () -> Tensor[(6, ?, 13), bool] {
    @func_10741() /* ty=Tensor[(6, ?, 13), bool] */
  };
  %122() /* ty=Tensor[(6, ?, 13), bool] */
}

def @func_11568() -> (Tensor[(6, 1, 13), float32],) {
  %123 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %124 = %123.0;
  (%124,)
}

def @func_13879(%var_13877: Tensor[(60), float64], %var_13878: Tensor[(105), float32]) -> (Tensor[(384), float64], Tensor[(14, 1232), float32], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) {
  @func_13875(%var_13877, %var_13878) /* ty=(Tensor[(384), float64], Tensor[(14, 1232), float32], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) */
}

def @func_3756() -> (Tensor[(280), float32], Tensor[(10, 4, 7), float32]) {
  %125 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %126 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %127 = %125.3;
  %128 = %126.1;
  (%127, %128)
}

def @func_5915(%var_5911: Tensor[(8, 15, 3), float32], %var_5912: Tensor[(8, 15, 3), float32], %var_5913: Tensor[(52), int8], %var_5914: Tensor[(8, 15, 3), float64]) -> (Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) {
  %158 = fn (%var_5849: Tensor[(8, 15, 3), float32], %var_5850: Tensor[(8, 15, 3), float32], %var_5873: Tensor[(52), int8], %var_5877: Tensor[(8, 15, 3), float64]) -> (Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) {
    %129 = cast(%var_5873, dtype="int8") /* ty=Tensor[(52), int8] */;
    %130 = reshape(%129, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
    %131 = @func_460(%130) /* ty=(Tensor[(13, 2, 2), int8],) */;
    %132 = cast(%var_5850, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %133 = shape_of(%var_5849, dtype="int32") /* ty=Tensor[(3), int32] */;
    %134 = cast(%var_5849, dtype="float32") /* ty=Tensor[(8, 15, 3), float32] */;
    %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %136 = subtract(%134, %135) /* ty=Tensor[(8, 15, 3), float32] */;
    %137 = cast(%136, dtype="float64") /* ty=Tensor[(8, 15, 3), float64] */;
    %138 = log(%137) /* ty=Tensor[(8, 15, 3), float64] */;
    %139 = cast(%var_5877, dtype="bool") /* ty=Tensor[(8, 15, 3), bool] */;
    %140 = shape_of(%138, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(%138, dtype="bool") /* ty=Tensor[(8, 15, 3), bool] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %143 = cast(%var_5850, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
    %144 = shape_of(%var_5877, dtype="int32") /* ty=Tensor[(3), int32] */;
    %145 = cast(%var_5877, dtype="uint16") /* ty=Tensor[(8, 15, 3), uint16] */;
    %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %147 = cast(meta[relay.Constant][8] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %148 = reshape(%147, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
    %149 = @func_3556(%148) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
    %150 = %131.0;
    %151 = cast(%150, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
    %152 = reshape(%151, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
    %153 = @func_2972(%152) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) */;
    %154 = equal(%141, %142) /* ty=Tensor[(8, 15, 3), bool] */;
    %155 = right_shift(%145, %146) /* ty=Tensor[(8, 15, 3), uint16] */;
    %156 = %149.1;
    %157 = %153.1;
    (%150, %var_5873, %154, %155, %156, meta[relay.Constant][8] /* ty=Tensor[(280), float64] */, %157)
  };
  %158(%var_5911, %var_5912, %var_5913, %var_5914) /* ty=(Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) */
}

def @func_14728() -> (Tensor[(12, 2, 16), float64], Tensor[(384), float64], Tensor[(384), float64]) {
  @func_14726() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_12707() -> (Tensor[(384), float64], Tensor[(5, 2, 10), float64], float64) {
  %164 = fn () -> (Tensor[(384), float64], Tensor[(5, 2, 10), float64], float64) {
    %159 = @func_7709() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
    %160 = cast(7.25004f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %161 = reshape(%160, newshape=[]) /* ty=float64 */;
    %162 = %159.1;
    %163 = @func_5191(%161) /* ty=Tensor[(5, 2, 10), float64] */;
    (%162, %163, 7.25004f64 /* ty=float64 */)
  };
  %164() /* ty=(Tensor[(384), float64], Tensor[(5, 2, 10), float64], float64) */
}

def @func_6761() -> (Tensor[(384), float64],) {
  %165 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %166 = %165.0;
  (%166,)
}

def @func_8589() -> Tensor[(52), int8] {
  %168 = fn () -> Tensor[(52), int8] {
    %167 = @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
    %167.2
  };
  %168() /* ty=Tensor[(52), int8] */
}

def @func_15605() -> (Tensor[(480), uint32], Tensor[(384), float64]) {
  %172 = fn () -> (Tensor[(480), uint32], Tensor[(384), float64]) {
    %169 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
    %170 = %169.7;
    %171 = @func_14806() /* ty=Tensor[(384), float64] */;
    (%170, %171)
  };
  %172() /* ty=(Tensor[(480), uint32], Tensor[(384), float64]) */
}

def @func_12660(%var_12650: Tensor[(9, 14, 12), int8]) -> Tensor[(9, 14, 12), bool] {
  %173 = cast(meta[relay.Constant][9] /* ty=int8 */, dtype="bool") /* ty=bool */;
  %174 = cast(%var_12650, dtype="bool") /* ty=Tensor[(9, 14, 12), bool] */;
  less(%173, %174) /* ty=Tensor[(9, 14, 12), bool] */
}

def @func_10042() -> (Tensor[(384), float64],) {
  %175 = @func_8758() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %176 = %175.6;
  (%176,)
}

def @func_10591() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %177 = @func_6613() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64], Tensor[(280), float32]) */;
  %178 = @func_5682() /* ty=(Tensor[(384), float64],) */;
  %179 = %177.2;
  %180 = %178.0;
  (%179, %180)
}

def @func_7709() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %181 = @func_4384() /* ty=(Tensor[(52), int8],) */;
  %182 = @func_7265() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float64]) */;
  %183 = %181.0;
  %184 = %182.0;
  (%183, %184)
}

def @func_4942() -> (Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) {
  @func_4940() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) */
}

def @func_7873() -> Tensor[(384), float64] {
  %185 = @func_5682() /* ty=(Tensor[(384), float64],) */;
  %185.0
}

def @func_15677() -> (Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %186 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %187 = @func_8758() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %188 = %186.1;
  %189 = %187.4;
  (%188, %189)
}

def @func_12663(%var_12661: Tensor[(9, 14, 12), int8]) -> Tensor[(9, 14, 12), bool] {
  @func_12660(%var_12661) /* ty=Tensor[(9, 14, 12), bool] */
}

def @func_7593(%var_7592: Tensor[(6, 12, 13), float32]) -> (Tensor[(6, 12, 13), bool],) {
  %202 = fn (%var_7567: Tensor[(6, 12, 13), float32]) -> (Tensor[(6, 12, 13), bool],) {
    %190 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %191 = %190.0;
    %192 = cast(%191, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
    %193 = acosh(%192) /* ty=Tensor[(6, 1, 13), float32] */;
    %194 = cast(%193, dtype="int8") /* ty=Tensor[(6, 1, 13), int8] */;
    %195 = cast(%var_7567, dtype="int8") /* ty=Tensor[(6, 12, 13), int8] */;
    %196 = add(%194, %195) /* ty=Tensor[(6, 12, 13), int8] */;
    %197 = cast(%var_7567, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
    %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
    %199 = cast(%196, dtype="bool") /* ty=Tensor[(6, 12, 13), bool] */;
    %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %201 = greater(%199, %200) /* ty=Tensor[(6, 12, 13), bool] */;
    (%201,)
  };
  %202(%var_7592) /* ty=(Tensor[(6, 12, 13), bool],) */
}

def @func_16892(%var_16869: Tensor[(280), float32], %var_16873: Tensor[(280), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(280), float64]) {
  %203 = @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %204 = cast(%var_16869, dtype="float32") /* ty=Tensor[(280), float32] */;
  %205 = reshape(%204, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
  %206 = @func_12622(%205) /* ty=(Tensor[(10, 4, 7), uint64], Tensor[(10, 4, 7), float32]) */;
  %207 = @func_13471() /* ty=(Tensor[(52), int8],) */;
  %208 = cast(%var_16873, dtype="float32") /* ty=Tensor[(280), float32] */;
  %209 = shape_of(%var_16869, dtype="int32") /* ty=Tensor[(1), int32] */;
  %210 = cast(%var_16869, dtype="float32") /* ty=Tensor[(280), float32] */;
  %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?), float32] */;
  %212 = power(%210, %211) /* ty=Tensor[(280), float32] */;
  %213 = cast(%212, dtype="float64") /* ty=Tensor[(280), float64] */;
  %214 = %203.1;
  %215 = %206.1;
  %216 = %207.0;
  %217 = log(%213) /* ty=Tensor[(280), float64] */;
  (%214, %215, %216, %217)
}

def @func_5251() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  @func_5249() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_5684() -> (Tensor[(384), float64],) {
  @func_5682() /* ty=(Tensor[(384), float64],) */
}

def @func_16548(%var_16546: Tensor[(12, 15, 16), uint16], %var_16547: Tensor[(12, 15, 16), uint16]) -> (Tensor[(12, 15, 16), uint16], Tensor[(10, 4, 7), float64], Tensor[(52), int8]) {
  @func_16544(%var_16546, %var_16547) /* ty=(Tensor[(12, 15, 16), uint16], Tensor[(10, 4, 7), float64], Tensor[(52), int8]) */
}

def @func_2832(%var_2831: Tensor[(52), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) {
  %228 = fn (%var_2813: Tensor[(52), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) {
    %218 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %219 = cast(%var_2813, dtype="int8") /* ty=Tensor[(52), int8] */;
    %220 = reshape(%219, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
    %221 = @func_460(%220) /* ty=(Tensor[(13, 2, 2), int8],) */;
    %222 = %221.0;
    %223 = cast(%222, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
    %224 = reshape(%223, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
    %225 = @func_460(%224) /* ty=(Tensor[(13, 2, 2), int8],) */;
    %226 = %218.0;
    %227 = %225.0;
    (%226, %222, %var_2813, %227)
  };
  %228(%var_2831) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) */
}

def @func_11406() -> Tensor[(10, 4, 7), float32] {
  %230 = fn () -> Tensor[(10, 4, 7), float32] {
    %229 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %229.0
  };
  %230() /* ty=Tensor[(10, 4, 7), float32] */
}

def @func_5989() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %234 = fn () -> (Tensor[(384), float64], Tensor[(384), float64]) {
    %231 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
    %232 = @func_2454() /* ty=Tensor[(384), float64] */;
    %233 = %231.0;
    (%232, %233)
  };
  %234() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_14520() -> (Tensor[(384), int32], Tensor[(384), int32]) {
  %235 = @func_13756() /* ty=(Tensor[(384), int32], Tensor[(384), float64]) */;
  %236 = @func_8399() /* ty=Tensor[(384), int32] */;
  %237 = %235.0;
  (%236, %237)
}

def @func_12219() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) {
  %238 = @func_7709() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %239 = @func_5521() /* ty=(Tensor[(384), float64],) */;
  %240 = @func_5448() /* ty=(Tensor[(384), float64],) */;
  %241 = %238.0;
  %242 = %239.0;
  %243 = %240.0;
  (%241, %242, %243)
}

def @func_8308() -> (Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
  %244 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
  %245 = cast(meta[relay.Constant][10] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %246 = reshape(%245, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %247 = @func_2870(%246) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) */;
  %248 = %244.0;
  %249 = %247.0;
  (%248, %249, meta[relay.Constant][10] /* ty=Tensor[(52), int8] */)
}

def @func_3134(%var_3113: Tensor[(384), float64]) -> (Tensor[(384), bool], Tensor[(384), float64]) {
  %250 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %251 = %250.0;
  %252 = cast(%var_3113, dtype="bool") /* ty=Tensor[(384), bool] */;
  %253 = shape_of(%251, dtype="int32") /* ty=Tensor[(1), int32] */;
  %254 = cast(%251, dtype="bool") /* ty=Tensor[(384), bool] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?), bool] */;
  %256 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %257 = logical_and(%254, %255) /* ty=Tensor[(384), bool] */;
  %258 = %256.0;
  (%257, %258)
}

def @func_7619() -> (Tensor[(10, 4, 7), float32],) {
  %261 = fn () -> (Tensor[(10, 4, 7), float32],) {
    %259 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
    %260 = %259.2;
    (%260,)
  };
  %261() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_10742() -> Tensor[(6, ?, 13), bool] {
  %269 = fn () -> Tensor[(6, ?, 13), bool] {
    %262 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
    %263 = @func_10542() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(60), float64]) */;
    %264 = %263.0;
    %265 = cast(%264, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
    %266 = shape_of(%262, dtype="int32") /* ty=Tensor[(3), int32] */;
    %267 = cast(%262, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
    %268 = dyn.reshape(%265, %266, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%267, %268) /* ty=Tensor[(6, ?, 13), bool] */
  };
  %269() /* ty=Tensor[(6, ?, 13), bool] */
}

def @func_14215() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %272 = fn () -> (Tensor[(384), float64], Tensor[(52), int8]) {
    %270 = @func_13784() /* ty=Tensor[(384), float64] */;
    %271 = @func_4412() /* ty=Tensor[(52), int8] */;
    (%270, %271)
  };
  %272() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */
}

def @func_12066() -> (Tensor[(52), int8], Tensor[(480), uint32]) {
  %273 = @func_8588() /* ty=Tensor[(52), int8] */;
  %274 = @func_5550() /* ty=Tensor[(480), uint32] */;
  (%273, %274)
}

def @func_5752() -> Tensor[(384), float64] {
  @func_5750() /* ty=Tensor[(384), float64] */
}

def @func_16210() -> (Tensor[(384), float64],) {
  @func_16208() /* ty=(Tensor[(384), float64],) */
}

def @func_13168() -> (Tensor[(480), uint32], Tensor[(52), int8]) {
  %275 = @func_8347() /* ty=Tensor[(480), uint32] */;
  %276 = @func_9449() /* ty=Tensor[(52), int8] */;
  (%275, %276)
}

def @func_7467() -> (Tensor[(15, 7, 1), float64],) {
  %279 = fn () -> (Tensor[(15, 7, 1), float64],) {
    %277 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
    %278 = %277.3;
    (%278,)
  };
  %279() /* ty=(Tensor[(15, 7, 1), float64],) */
}

def @func_4385() -> (Tensor[(52), int8],) {
  %281 = fn () -> (Tensor[(52), int8],) {
    %280 = @func_4070() /* ty=Tensor[(52), int8] */;
    (%280,)
  };
  %281() /* ty=(Tensor[(52), int8],) */
}

def @func_5318() -> (Tensor[(15, 7, 1), float64], Tensor[(60), float64]) {
  %282 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %283 = @func_4940() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) */;
  %284 = %282.3;
  %285 = %283.2;
  (%284, %285)
}

def @func_2558(%var_2524: Tensor[(52), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %286 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %287 = cast(%var_2524, dtype="int8") /* ty=Tensor[(52), int8] */;
  %288 = reshape(%287, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %289 = @func_460(%288) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %290 = %286.0;
  %291 = %289.0;
  (%290, %291, %var_2524)
}

def @func_2975(%var_2973: Tensor[(13, 4), int8]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) {
  @func_2972(%var_2973) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) */
}

def @func_3017() -> Tensor[(384), float64] {
  @func_3015() /* ty=Tensor[(384), float64] */
}

def @func_7174() -> (Tensor[(6, 1, 13), float32],) {
  %294 = fn () -> (Tensor[(6, 1, 13), float32],) {
    %292 = @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %293 = %292.0;
    (%293,)
  };
  %294() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_8400() -> Tensor[(384), int32] {
  %295 = fn () -> Tensor[(384), int32] {
    @func_7033() /* ty=Tensor[(384), int32] */
  };
  %295() /* ty=Tensor[(384), int32] */
}

def @func_2456() -> Tensor[(384), float64] {
  @func_2454() /* ty=Tensor[(384), float64] */
}

def @func_11638() -> Tensor[(52), int8] {
  %296 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %296.0
}

def @func_12507() -> (Tensor[(384), float64],) {
  %297 = @func_6643() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64]) */;
  %298 = %297.0;
  (%298,)
}

def @func_12745(%var_12743: Tensor[(280), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(52), int8], Tensor[(280), float64]) {
  @func_12742(%var_12743) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(52), int8], Tensor[(280), float64]) */
}

def @func_14768(%var_14763: Tensor[(6, 1, 13), float32]) -> (Tensor[(6, ?, 13), int16],) {
  %299 = @func_10106() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %300 = %299.0;
  %301 = cast(%var_14763, dtype="int16") /* ty=Tensor[(6, 1, 13), int16] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="int16") /* ty=Tensor[(6, 1, 13), int16] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %305 = logical_xor(%303, %304) /* ty=Tensor[(6, ?, 13), int16] */;
  (%305,)
}

def @func_9166(%var_9165: Tensor[(52), int8]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(15, 7, 1), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32]) {
  %318 = fn (%var_9136: Tensor[(52), int8]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(15, 7, 1), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32]) {
    %306 = @func_7515() /* ty=(Tensor[(384), float64],) */;
    %307 = cast(%var_9136, dtype="int8") /* ty=Tensor[(52), int8] */;
    %308 = reshape(%307, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
    %309 = @func_460(%308) /* ty=(Tensor[(13, 2, 2), int8],) */;
    %310 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
    %311 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
    %312 = %306.0;
    %313 = %309.0;
    %314 = %310.0;
    %315 = @func_5750() /* ty=Tensor[(384), float64] */;
    %316 = %311.0;
    %317 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
    (%312, %313, %var_9136, %314, %315, %316, %317)
  };
  %318(%var_9165) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(15, 7, 1), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32]) */
}

def @func_4327() -> Tensor[(10, 4, 7), float32] {
  %320 = fn () -> Tensor[(10, 4, 7), float32] {
    %319 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
    %319.0
  };
  %320() /* ty=Tensor[(10, 4, 7), float32] */
}

def @func_7153(%var_7152: Tensor[(140, 2), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) {
  %329 = fn (%var_7146: Tensor[(140, 2), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) {
    %321 = @func_5626() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
    %322 = %321.0;
    %323 = cast(%322, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
    %324 = cast(%var_7146, dtype="float64") /* ty=Tensor[(140, 2), float64] */;
    %325 = reshape(%324, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
    %326 = @func_3556(%325) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
    %327 = asin(%323) /* ty=Tensor[(6, 1, 13), float32] */;
    %328 = %326.0;
    (%327, %328, %var_7146)
  };
  %329(%var_7152) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) */
}

def @func_11611() -> (Tensor[(10, 4, 7), float32],) {
  %332 = fn () -> (Tensor[(10, 4, 7), float32],) {
    %330 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
    %331 = %330.1;
    (%331,)
  };
  %332() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_7034() -> Tensor[(384), int32] {
  %334 = fn () -> Tensor[(384), int32] {
    %333 = @func_4940() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) */;
    %333.4
  };
  %334() /* ty=Tensor[(384), int32] */
}

def @func_12280() -> Tensor[(4, 3, 5), float64] {
  @func_12278() /* ty=Tensor[(4, 3, 5), float64] */
}

def @func_5249() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %335 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %336 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %337 = %335.2;
  %338 = %336.0;
  (%337, %338)
}

def @func_5126() -> Tensor[(384), float64] {
  @func_5124() /* ty=Tensor[(384), float64] */
}

def @func_11977() -> (Tensor[(10, 4, 7), float64],) {
  %339 = @func_11923() /* ty=(Tensor[(10, 4, 7), float64],) */;
  %340 = %339.0;
  (%340,)
}

def @func_15550() -> Tensor[(6, 1, 13), float32] {
  @func_9897() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_13081() -> Tensor[(52), int8] {
  %342 = fn () -> Tensor[(52), int8] {
    %341 = @func_8082() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
    %341.0
  };
  %342() /* ty=Tensor[(52), int8] */
}

def @func_12153() -> (Tensor[(384), float64],) {
  %344 = fn () -> (Tensor[(384), float64],) {
    %343 = @func_7375() /* ty=Tensor[(384), float64] */;
    (%343,)
  };
  %344() /* ty=(Tensor[(384), float64],) */
}

def @func_8192() -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
  %348 = fn () -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
    %345 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
    %346 = %345.1;
    %347 = @func_5581() /* ty=Tensor[(52), int8] */;
    (%346, %347)
  };
  %348() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */
}

def @func_11166() -> Tensor[(384), float64] {
  %350 = fn () -> Tensor[(384), float64] {
    %349 = @func_5249() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
    %349.1
  };
  %350() /* ty=Tensor[(384), float64] */
}

def @func_5309() -> Tensor[(6, 1, 13), float32] {
  %351 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %351.1
}

def @func_6191(%var_6190: Tensor[(15, 7, 4), float32]) -> (Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) {
  %360 = fn (%var_6182: Tensor[(15, 7, 4), float32]) -> (Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) {
    %352 = cast(-6.17192f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %353 = reshape(%352, newshape=[]) /* ty=float64 */;
    %354 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
    %355 = %354.1;
    %356 = cast(%355, dtype="float32") /* ty=Tensor[(15, 7, 1), float32] */;
    %357 = cast(%var_6182, dtype="float32") /* ty=Tensor[(15, 7, 4), float32] */;
    %358 = @func_5191(%353) /* ty=Tensor[(5, 2, 10), float64] */;
    %359 = power(%356, %357) /* ty=Tensor[(15, 7, 4), float32] */;
    (%358, -6.17192f64 /* ty=float64 */, %359)
  };
  %360(%var_6190) /* ty=(Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) */
}

def @func_16127() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %364 = fn () -> (Tensor[(52), int8], Tensor[(384), float64]) {
    %361 = @func_3998() /* ty=(Tensor[(384), float64], Tensor[(13, 2, 9), bool]) */;
    %362 = @func_8803() /* ty=Tensor[(52), int8] */;
    %363 = %361.0;
    (%362, %363)
  };
  %364() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */
}

def @func_6362() -> (Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) {
  %365 = @func_3465() /* ty=Tensor[(12, 2, 16), float64] */;
  %366 = cast(%365, dtype="float64") /* ty=Tensor[(12, 2, 16), float64] */;
  %367 = reshape(%366, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %368 = @func_2331(%367) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %369 = @func_4070() /* ty=Tensor[(52), int8] */;
  %370 = %368.1;
  (%365, %369, %370)
}

def @func_12425() -> Tensor[(52), int8] {
  @func_12423() /* ty=Tensor[(52), int8] */
}

def @func_5523() -> (Tensor[(384), float64],) {
  @func_5521() /* ty=(Tensor[(384), float64],) */
}

def @func_14522() -> (Tensor[(384), int32], Tensor[(384), int32]) {
  @func_14520() /* ty=(Tensor[(384), int32], Tensor[(384), int32]) */
}

def @func_11145() -> (Tensor[(384), float64], Tensor[(13, 4), int8], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float64]) {
  @func_11143() /* ty=(Tensor[(384), float64], Tensor[(13, 4), int8], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float64]) */
}

def @func_12589() -> (Tensor[(384), float64],) {
  @func_12587() /* ty=(Tensor[(384), float64],) */
}

def @func_12862(%var_12836: Tensor[(6, 7, 9), int64], %var_12837: Tensor[(6, 7, 9), int64]) -> (Tensor[(6, ?, 13), bool], Tensor[(6, 7, 9), bool], Tensor[(6, 1, 13), float32]) {
  %371 = @func_11823() /* ty=(Tensor[(6, ?, 13), bool], Tensor[(384), float64]) */;
  %372 = cast(%var_12837, dtype="int64") /* ty=Tensor[(6, 7, 9), int64] */;
  %373 = shape_of(%var_12836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %374 = cast(%var_12836, dtype="int64") /* ty=Tensor[(6, 7, 9), int64] */;
  %375 = dyn.reshape(%372, %373, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %376 = left_shift(%374, %375) /* ty=Tensor[(6, 7, 9), int64] */;
  %377 = cast(%376, dtype="bool") /* ty=Tensor[(6, 7, 9), bool] */;
  %378 = shape_of(%var_12836, dtype="int32") /* ty=Tensor[(3), int32] */;
  %379 = cast(%var_12836, dtype="bool") /* ty=Tensor[(6, 7, 9), bool] */;
  %380 = dyn.reshape(%377, %378, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %381 = %371.0;
  %382 = greater(%379, %380) /* ty=Tensor[(6, 7, 9), bool] */;
  %383 = @func_10343() /* ty=Tensor[(6, 1, 13), float32] */;
  (%381, %382, %383)
}

def @func_10593() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  @func_10591() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */
}

def @func_15251() -> Tensor[(6, ?, 13), uint16] {
  %391 = fn () -> Tensor[(6, ?, 13), uint16] {
    %384 = @func_10527() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
    %385 = %384.1;
    %386 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
    %387 = cast(%386, dtype="uint16") /* ty=Tensor[(6, 1, 13), uint16] */;
    %388 = shape_of(%385, dtype="int32") /* ty=Tensor[(3), int32] */;
    %389 = cast(%385, dtype="uint16") /* ty=Tensor[(6, 1, 13), uint16] */;
    %390 = dyn.reshape(%387, %388, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    bitwise_and(%389, %390) /* ty=Tensor[(6, ?, 13), uint16] */
  };
  %391() /* ty=Tensor[(6, ?, 13), uint16] */
}

def @func_10807(%var_10806: Tensor[(315), float32]) -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(5, 9, 7), float32], Tensor[(315), float32], Tensor[(384), float64]) {
  %401 = fn (%var_10775: Tensor[(315), float32]) -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(5, 9, 7), float32], Tensor[(315), float32], Tensor[(384), float64]) {
    %392 = @func_4384() /* ty=(Tensor[(52), int8],) */;
    %393 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
    %394 = cast(%var_10775, dtype="float32") /* ty=Tensor[(315), float32] */;
    %395 = reshape(%394, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
    %396 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
    %397 = %392.0;
    %398 = %393.1;
    %399 = @func_6165(%395) /* ty=Tensor[(5, 9, 7), float32] */;
    %400 = %396.0;
    (%397, %398, %399, %var_10775, %400)
  };
  %401(%var_10806) /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(5, 9, 7), float32], Tensor[(315), float32], Tensor[(384), float64]) */
}

def @func_14571(%var_14568: Tensor[(3, 4, 4), bool], %var_14569: Tensor[(25, 6), bool], %var_14570: Tensor[(52), int8]) -> (Tensor[(3, 4, 4), bool], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(10, 3, 5), bool], bool, Tensor[(25, 6), bool], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %424 = fn (%var_14541: Tensor[(3, 4, 4), bool], %var_14555: Tensor[(25, 6), bool], %var_14560: Tensor[(52), int8]) -> (Tensor[(3, 4, 4), bool], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(10, 3, 5), bool], bool, Tensor[(25, 6), bool], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
    %402 = cast(%var_14541, dtype="bool") /* ty=Tensor[(3, 4, 4), bool] */;
    %403 = shape_of(meta[relay.Constant][11] /* ty=Tensor[(3, 4, 4), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %404 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 4, 4), bool] */, dtype="bool") /* ty=Tensor[(3, 4, 4), bool] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %406 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %407 = cast(meta[relay.Constant][12] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %408 = reshape(%406, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %409 = reshape(%407, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %410 = @func_10042() /* ty=(Tensor[(384), float64],) */;
    %411 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %412 = cast(%var_14555, dtype="bool") /* ty=Tensor[(25, 6), bool] */;
    %413 = reshape(%411, newshape=[]) /* ty=bool */;
    %414 = reshape(%412, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), bool] */;
    %415 = @func_3084(%413, %414) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) */;
    %416 = cast(%var_14560, dtype="int8") /* ty=Tensor[(52), int8] */;
    %417 = reshape(%416, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %418 = @func_9164(%417) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(15, 7, 1), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32]) */;
    %419 = logical_or(%404, %405) /* ty=Tensor[(3, 4, 4), bool] */;
    %420 = @func_3167(%408, %409) /* ty=Tensor[(4, 3, 5), float64] */;
    %421 = %410.0;
    %422 = %415.0;
    %423 = %418.1;
    (%419, %420, meta[relay.Constant][12] /* ty=Tensor[(60), float64] */, %421, %422, False /* ty=bool */, %var_14555, %423, %var_14560)
  };
  %424(%var_14568, %var_14569, %var_14570) /* ty=(Tensor[(3, 4, 4), bool], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(10, 3, 5), bool], bool, Tensor[(25, 6), bool], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */
}

def @func_6905() -> Tensor[(384), float64] {
  %425 = @func_5521() /* ty=(Tensor[(384), float64],) */;
  %425.0
}

def @func_8935(%var_8934: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), uint32],) {
  %433 = fn (%var_8928: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), uint32],) {
    %426 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
    %427 = %426.2;
    %428 = cast(%var_8928, dtype="uint32") /* ty=Tensor[(10, 4, 7), uint32] */;
    %429 = shape_of(%427, dtype="int32") /* ty=Tensor[(3), int32] */;
    %430 = cast(%427, dtype="uint32") /* ty=Tensor[(10, 4, 7), uint32] */;
    %431 = dyn.reshape(%428, %429, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %432 = subtract(%430, %431) /* ty=Tensor[(10, 4, 7), uint32] */;
    (%432,)
  };
  %433(%var_8934) /* ty=(Tensor[(10, 4, 7), uint32],) */
}

def @func_8760() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) {
  @func_8758() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */
}

def @func_11159() -> (Tensor[(10, 4, 7), float32],) {
  %436 = fn () -> (Tensor[(10, 4, 7), float32],) {
    %434 = @func_9852() /* ty=(Tensor[(6, 1, 13), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32], Tensor[(10, 4, 7), bool], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(480), uint32], Tensor[(12, 3, 5), float64], Tensor[(52), int8], Tensor[(384), int32], Tensor[(10, 4, 7), float32]) */;
    %435 = %434.11;
    (%435,)
  };
  %436() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_16476(%var_16474: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32],) {
  @func_16473(%var_16474) /* ty=(Tensor[(14, 12, 10), float32],) */
}

def @func_14942(%var_14941: Tensor[(280), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(280), float32], Tensor[(52), int8], Tensor[(52), int8]) {
  %447 = fn (%var_14926: Tensor[(280), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(280), float32], Tensor[(52), int8], Tensor[(52), int8]) {
    %437 = @func_7385() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %438 = cast(%var_14926, dtype="float32") /* ty=Tensor[(280), float32] */;
    %439 = reshape(%438, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
    %440 = @func_933(%439) /* ty=(Tensor[(10, 4, 7), float32],) */;
    %441 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
    %442 = @func_2790() /* ty=(Tensor[(52), int8],) */;
    %443 = %437.0;
    %444 = %440.0;
    %445 = %441.0;
    %446 = %442.0;
    (%443, %444, %var_14926, %445, %446)
  };
  %447(%var_14941) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(280), float32], Tensor[(52), int8], Tensor[(52), int8]) */
}

def @func_4365(%var_4357: Tensor[(1, 3, 11), uint16]) -> Tensor[(13, 3, 11), bool] {
  %448 = cast(%var_4357, dtype="bool") /* ty=Tensor[(1, 3, 11), bool] */;
  %449 = cast(meta[relay.Constant][13] /* ty=Tensor[(13, 3, 11), uint16] */, dtype="bool") /* ty=Tensor[(13, 3, 11), bool] */;
  equal(%448, %449) /* ty=Tensor[(13, 3, 11), bool] */
}

def @func_6763() -> (Tensor[(384), float64],) {
  @func_6761() /* ty=(Tensor[(384), float64],) */
}

def @func_11217(%var_11198: Tensor[(13, 3, 11), float64]) -> (Tensor[(6, 9, 13), float64], Tensor[(33), uint16], Tensor[(10, 4, 7), float32], Tensor[(13, 3, 11), bool]) {
  %450 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
  %453 = cast(meta[relay.Constant][14] /* ty=Tensor[(6, 9, 13), float32] */, dtype="float64") /* ty=Tensor[(6, 9, 13), float64] */;
  %454 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %455 = cast(meta[relay.Constant][15] /* ty=Tensor[(33), uint16] */, dtype="uint16") /* ty=Tensor[(33), uint16] */;
  %456 = reshape(%455, newshape=[1, 3, 11]) /* ty=Tensor[(1, 3, 11), uint16] */;
  %457 = @func_4365(%456) /* ty=Tensor[(13, 3, 11), bool] */;
  %458 = cast(%457, dtype="float64") /* ty=Tensor[(13, 3, 11), float64] */;
  %459 = sinh(%458) /* ty=Tensor[(13, 3, 11), float64] */;
  %460 = cast(%var_11198, dtype="bool") /* ty=Tensor[(13, 3, 11), bool] */;
  %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
  %462 = cast(%459, dtype="bool") /* ty=Tensor[(13, 3, 11), bool] */;
  %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %464 = power(%452, %453) /* ty=Tensor[(6, 9, 13), float64] */;
  %465 = %454.0;
  %466 = less_equal(%462, %463) /* ty=Tensor[(13, 3, 11), bool] */;
  (%464, meta[relay.Constant][15] /* ty=Tensor[(33), uint16] */, %465, %466)
}

def @func_3820(%var_3818: Tensor[(13, 2, 9), int8], %var_3819: Tensor[(13, 2, 9), int8]) -> Tensor[(13, 2, 9), int8] {
  @func_3816(%var_3818, %var_3819) /* ty=Tensor[(13, 2, 9), int8] */
}

def @func_12568() -> (Tensor[(52), int8], Tensor[(52), int8]) {
  @func_12566() /* ty=(Tensor[(52), int8], Tensor[(52), int8]) */
}

def @func_11220(%var_11218: Tensor[(13, 3, 11), float64]) -> (Tensor[(6, 9, 13), float64], Tensor[(33), uint16], Tensor[(10, 4, 7), float32], Tensor[(13, 3, 11), bool]) {
  @func_11217(%var_11218) /* ty=(Tensor[(6, 9, 13), float64], Tensor[(33), uint16], Tensor[(10, 4, 7), float32], Tensor[(13, 3, 11), bool]) */
}

def @func_4830() -> (Tensor[(384), float64],) {
  %467 = @func_2454() /* ty=Tensor[(384), float64] */;
  (%467,)
}

def @func_4654() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
  %472 = fn () -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
    %468 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
    %469 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %470 = %468.0;
    %471 = %469.0;
    (%470, %471)
  };
  %472() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */
}

def @func_3015() -> Tensor[(384), float64] {
  @func_2619() /* ty=Tensor[(384), float64] */
}

def @func_8084() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) {
  @func_8082() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */
}

def @func_4186(%var_4106: Tensor[(15, 15, 11), float64]) -> (Tensor[(15, 15, 11), float64], Tensor[(10, 4, 7), float32], Tensor[(384), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(384), float64]) {
  %473 = cast(%var_4106, dtype="float64") /* ty=Tensor[(15, 15, 11), float64] */;
  %474 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %475 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %476 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %477 = %476.0;
  %478 = cast(%477, dtype="int8") /* ty=Tensor[(52), int8] */;
  %479 = reshape(%478, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %480 = @func_2870(%479) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) */;
  %481 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %482 = acosh(%473) /* ty=Tensor[(15, 15, 11), float64] */;
  %483 = %474.0;
  %484 = %475.0;
  %485 = @func_2619() /* ty=Tensor[(384), float64] */;
  %486 = %480.1;
  %487 = @func_4070() /* ty=Tensor[(52), int8] */;
  %488 = %481.0;
  (%482, %483, %484, %485, %477, %486, %487, %488)
}

def @func_3929(%var_3927: Tensor[(1, 1232), float64]) -> (Tensor[(52), int8], Tensor[(8, 14, 11), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  @func_3926(%var_3927) /* ty=(Tensor[(52), int8], Tensor[(8, 14, 11), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */
}

def @func_14064() -> Tensor[(52), int8] {
  %490 = fn () -> Tensor[(52), int8] {
    %489 = @func_2958() /* ty=(Tensor[(52), int8],) */;
    %489.0
  };
  %490() /* ty=Tensor[(52), int8] */
}

def @func_3758() -> (Tensor[(280), float32], Tensor[(10, 4, 7), float32]) {
  @func_3756() /* ty=(Tensor[(280), float32], Tensor[(10, 4, 7), float32]) */
}

def @func_14690() -> Tensor[(6, 1, 13), float32] {
  %491 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %491.0
}

def @func_16799(%var_16798: Tensor[(315), float32]) -> (Tensor[(384), int32], Tensor[(5, 9, 7), float32], Tensor[(315), float32]) {
  %497 = fn (%var_16781: Tensor[(315), float32]) -> (Tensor[(384), int32], Tensor[(5, 9, 7), float32], Tensor[(315), float32]) {
    %492 = cast(%var_16781, dtype="float32") /* ty=Tensor[(315), float32] */;
    %493 = reshape(%492, newshape=[315]) /* ty=Tensor[(315), float32] */;
    %494 = @func_10805(%493) /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(5, 9, 7), float32], Tensor[(315), float32], Tensor[(384), float64]) */;
    %495 = @func_8399() /* ty=Tensor[(384), int32] */;
    %496 = %494.2;
    (%495, %496, %var_16781)
  };
  %497(%var_16798) /* ty=(Tensor[(384), int32], Tensor[(5, 9, 7), float32], Tensor[(315), float32]) */
}

def @func_15679() -> (Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  @func_15677() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */
}

def @func_2438() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  %498 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %499 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %500 = %498.1;
  %501 = %499.2;
  (%500, %501)
}

def @func_2619() -> Tensor[(384), float64] {
  @func_2454() /* ty=Tensor[(384), float64] */
}

def @func_15848() -> Tensor[(52), int8] {
  %502 = fn () -> Tensor[(52), int8] {
    @func_11638() /* ty=Tensor[(52), int8] */
  };
  %502() /* ty=Tensor[(52), int8] */
}

def @func_11447() -> Tensor[(6, 1, 13), float32] {
  %503 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %503.0
}

def @func_14771(%var_14769: Tensor[(6, 1, 13), float32]) -> (Tensor[(6, ?, 13), int16],) {
  @func_14768(%var_14769) /* ty=(Tensor[(6, ?, 13), int16],) */
}

def @func_10108() -> (Tensor[(6, 1, 13), float32],) {
  @func_10106() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_6645() -> (Tensor[(384), float64], Tensor[(12, 3, 5), float64]) {
  @func_6643() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64]) */
}

def @func_9611(%var_9595: Tensor[(16, 7, 9), uint64]) -> (Tensor[(16, 7, 9), bool],) {
  %504 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 7, 9), uint64] */, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %505 = shape_of(%var_9595, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%var_9595, dtype="bool") /* ty=Tensor[(16, 7, 9), bool] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %508 = equal(%506, %507) /* ty=Tensor[(16, 7, 9), bool] */;
  (%508,)
}

def @func_5521() -> (Tensor[(384), float64],) {
  %509 = @func_2454() /* ty=Tensor[(384), float64] */;
  (%509,)
}

def @func_12866(%var_12864: Tensor[(6, 7, 9), int64], %var_12865: Tensor[(6, 7, 9), int64]) -> (Tensor[(6, ?, 13), bool], Tensor[(6, 7, 9), bool], Tensor[(6, 1, 13), float32]) {
  @func_12862(%var_12864, %var_12865) /* ty=(Tensor[(6, ?, 13), bool], Tensor[(6, 7, 9), bool], Tensor[(6, 1, 13), float32]) */
}

def @func_13727(%var_13676: Tensor[(13, 14, 10), uint16], %var_13677: Tensor[(13, 14, 10), uint16], %var_13711: Tensor[(360), float32], %var_13712: Tensor[(26, 2), int8]) -> (Tensor[(13, 14, 10), uint16], Tensor[(13, 14, 10), float32], Tensor[(10, 4, 7), bool], Tensor[(360), float32], Tensor[(26, 2), int8], Tensor[(384), float64]) {
  %510 = cast(%var_13677, dtype="uint16") /* ty=Tensor[(13, 14, 10), uint16] */;
  %511 = shape_of(%var_13676, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%var_13676, dtype="uint16") /* ty=Tensor[(13, 14, 10), uint16] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %514 = cast(%var_13677, dtype="float32") /* ty=Tensor[(13, 14, 10), float32] */;
  %515 = cast(%var_13711, dtype="float32") /* ty=Tensor[(360), float32] */;
  %516 = cast(%var_13711, dtype="float32") /* ty=Tensor[(360), float32] */;
  %517 = cast(%var_13712, dtype="int8") /* ty=Tensor[(26, 2), int8] */;
  %518 = cast(%var_13711, dtype="float64") /* ty=Tensor[(360), float64] */;
  %519 = reshape(%515, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %520 = reshape(%516, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
  %521 = reshape(%517, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %522 = reshape(%518, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float64] */;
  %523 = @func_5910(%519, %520, %521, %522) /* ty=(Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) */;
  %524 = maximum(%512, %513) /* ty=Tensor[(13, 14, 10), uint16] */;
  %525 = log(%514) /* ty=Tensor[(13, 14, 10), float32] */;
  %526 = %523.4;
  %527 = @func_6948() /* ty=Tensor[(384), float64] */;
  (%524, %525, %526, %var_13711, %var_13712, %527)
}

def @func_13758() -> (Tensor[(384), int32], Tensor[(384), float64]) {
  @func_13756() /* ty=(Tensor[(384), int32], Tensor[(384), float64]) */
}

def @func_2901() -> (Tensor[(384), float64],) {
  %529 = fn () -> (Tensor[(384), float64],) {
    %528 = @func_2803() /* ty=Tensor[(384), float64] */;
    (%528,)
  };
  %529() /* ty=(Tensor[(384), float64],) */
}

def @func_11674(%var_11669: Tensor[(12, 13, 13), float64]) -> (Tensor[(12, 13, 13), float32],) {
  %530 = cast(%var_11669, dtype="float64") /* ty=Tensor[(12, 13, 13), float64] */;
  %531 = sqrt(%530) /* ty=Tensor[(12, 13, 13), float64] */;
  %532 = cast(%531, dtype="float32") /* ty=Tensor[(12, 13, 13), float32] */;
  %533 = cosh(%532) /* ty=Tensor[(12, 13, 13), float32] */;
  (%533,)
}

def @func_16896(%var_16894: Tensor[(280), float32], %var_16895: Tensor[(280), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(280), float64]) {
  @func_16892(%var_16894, %var_16895) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(280), float64]) */
}

def @func_14259(%var_14250: Tensor[(1, 280), float64]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(1, 280), float64]) {
  %534 = cast(%var_14250, dtype="float64") /* ty=Tensor[(1, 280), float64] */;
  %535 = reshape(%534, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %536 = @func_9740(%535) /* ty=(Tensor[(52), int8], Tensor[(52), int8], Tensor[(140, 2), float64], Tensor[(280), float64], Tensor[(15, 7, 1), float32], Tensor[(105, 1), float32], Tensor[(1, 1232), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) */;
  %537 = @func_13784() /* ty=Tensor[(384), float64] */;
  %538 = %536.10;
  (%537, %538, %var_14250)
}

def @func_2405() -> (Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) {
  %539 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %540 = cast(meta[relay.Constant][17] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %541 = reshape(%540, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %542 = @func_1927(%541) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %543 = %539.2;
  %544 = %542.0;
  (%543, %544, meta[relay.Constant][17] /* ty=Tensor[(52), int8] */)
}

def @func_4736() -> Tensor[(52), int8] {
  @func_4734() /* ty=Tensor[(52), int8] */
}

def @func_2308() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
  %549 = fn () -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
    %545 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
    %546 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
    %547 = %545.2;
    %548 = %546.0;
    (%547, %548)
  };
  %549() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */
}

def @func_6890() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  %553 = fn () -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
    %550 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
    %551 = %550.2;
    %552 = @func_5581() /* ty=Tensor[(52), int8] */;
    (%551, %552)
  };
  %553() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */
}

def @func_11143() -> (Tensor[(384), float64], Tensor[(13, 4), int8], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float64]) {
  %554 = @func_7515() /* ty=(Tensor[(384), float64],) */;
  %555 = cast(meta[relay.Constant][18] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
  %556 = reshape(%555, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %557 = @func_2972(%556) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) */;
  %558 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %559 = %557.2;
  %560 = cast(%559, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %561 = reshape(%560, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %562 = @func_1927(%561) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %563 = %554.0;
  %564 = %558.0;
  %565 = %562.0;
  (%563, %559, meta[relay.Constant][18] /* ty=Tensor[(52), int8] */, %564, %565)
}

def @func_9852() -> (Tensor[(6, 1, 13), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32], Tensor[(10, 4, 7), bool], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(480), uint32], Tensor[(12, 3, 5), float64], Tensor[(52), int8], Tensor[(384), int32], Tensor[(10, 4, 7), float32]) {
  %566 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %567 = %566.0;
  %568 = cast(%567, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
  %569 = cast(meta[relay.Constant][19] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %570 = reshape(%569, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %571 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %572 = %571.0;
  %573 = cast(%572, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
  %574 = reshape(%573, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
  %575 = @func_3556(%574) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
  %576 = cast(%572, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %577 = cast(meta[relay.Constant][20] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %578 = reshape(%577, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %579 = @func_1927(%578) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %580 = cast(meta[relay.Constant][20] /* ty=Tensor[(52, 1), int8] */, dtype="int8") /* ty=Tensor[(52, 1), int8] */;
  %581 = reshape(%580, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %582 = @func_1927(%581) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %583 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %584 = acos(%568) /* ty=Tensor[(6, 1, 13), float64] */;
  %585 = @func_1212(%570) /* ty=Tensor[(15, 7, 1), float32] */;
  %586 = %575.1;
  %587 = sigmoid(%576) /* ty=Tensor[(10, 4, 7), float32] */;
  %588 = %579.2;
  %589 = @func_5550() /* ty=Tensor[(480), uint32] */;
  %590 = %582.0;
  %591 = @func_8803() /* ty=Tensor[(52), int8] */;
  %592 = @func_7078() /* ty=Tensor[(384), int32] */;
  %593 = %583.0;
  (%584, %585, meta[relay.Constant][19] /* ty=Tensor[(105), float32] */, %586, %587, %588, meta[relay.Constant][20] /* ty=Tensor[(52, 1), int8] */, %589, %590, %591, %592, %593)
}

def @func_3087(%var_3085: bool, %var_3086: Tensor[(10, 3, 5), bool]) -> (Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) {
  %602 = fn (%var_3050: bool, %var_3051: Tensor[(10, 3, 5), bool]) -> (Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) {
    %594 = cast(%var_3050, dtype="bool") /* ty=bool */;
    %595 = cast(%var_3051, dtype="bool") /* ty=Tensor[(10, 3, 5), bool] */;
    %596 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
    %597 = cast(%var_3050, dtype="uint32") /* ty=uint32 */;
    %598 = cast(%var_3051, dtype="uint32") /* ty=Tensor[(10, 3, 5), uint32] */;
    %599 = logical_and(%594, %595) /* ty=Tensor[(10, 3, 5), bool] */;
    %600 = %596.0;
    %601 = bitwise_and(%597, %598) /* ty=Tensor[(10, 3, 5), uint32] */;
    (%599, %600, %601)
  };
  %602(%var_3085, %var_3086) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) */
}

def @func_16412(%var_16410: Tensor[(4, 8, 13), float32], %var_16411: Tensor[(4, 8, 13), float32]) -> (Tensor[(4, 8, 13), bool], Tensor[(384), float64], Tensor[(52), int8]) {
  @func_16408(%var_16410, %var_16411) /* ty=(Tensor[(4, 8, 13), bool], Tensor[(384), float64], Tensor[(52), int8]) */
}

def @func_4832() -> (Tensor[(384), float64],) {
  @func_4830() /* ty=(Tensor[(384), float64],) */
}

def @func_5320() -> (Tensor[(15, 7, 1), float64], Tensor[(60), float64]) {
  @func_5318() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(60), float64]) */
}

def @func_5203(%var_5196: Tensor[(10, 1), float32], %var_5197: Tensor[(10, 1), float32]) -> (Tensor[(10, ?), bool],) {
  %603 = cast(%var_5197, dtype="bool") /* ty=Tensor[(10, 1), bool] */;
  %604 = shape_of(%var_5196, dtype="int32") /* ty=Tensor[(2), int32] */;
  %605 = cast(%var_5196, dtype="bool") /* ty=Tensor[(10, 1), bool] */;
  %606 = dyn.reshape(%603, %604, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %607 = not_equal(%605, %606) /* ty=Tensor[(10, ?), bool] */;
  (%607,)
}

def @func_6842() -> Tensor[(384), float64] {
  @func_6840() /* ty=Tensor[(384), float64] */
}

def @func_6399() -> Tensor[(384), float64] {
  @func_2619() /* ty=Tensor[(384), float64] */
}

def @func_2791() -> (Tensor[(52), int8],) {
  %610 = fn () -> (Tensor[(52), int8],) {
    %608 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
    %609 = %608.1;
    (%609,)
  };
  %610() /* ty=(Tensor[(52), int8],) */
}

def @func_14114(%var_14113: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64],) {
  %613 = fn (%var_14096: Tensor[(11, 9, 7), float64]) -> (Tensor[(11, 9, 7), float64],) {
    %611 = cast(%var_14096, dtype="float64") /* ty=Tensor[(11, 9, 7), float64] */;
    %612 = exp(%611) /* ty=Tensor[(11, 9, 7), float64] */;
    (%612,)
  };
  %613(%var_14113) /* ty=(Tensor[(11, 9, 7), float64],) */
}

def @func_4414() -> Tensor[(52), int8] {
  @func_4412() /* ty=Tensor[(52), int8] */
}

def @func_2621() -> Tensor[(384), float64] {
  @func_2619() /* ty=Tensor[(384), float64] */
}

def @func_13828() -> Tensor[(384), float64] {
  %615 = fn () -> Tensor[(384), float64] {
    %614 = @func_10591() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
    %614.1
  };
  %615() /* ty=Tensor[(384), float64] */
}

def @func_5550() -> Tensor[(480), uint32] {
  %616 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %616.7
}

def @func_2945() -> (Tensor[(384), float64], Tensor[(10, 4, 7), float32]) {
  %622 = fn () -> (Tensor[(384), float64], Tensor[(10, 4, 7), float32]) {
    %617 = @func_2803() /* ty=Tensor[(384), float64] */;
    %618 = cast(%617, dtype="float64") /* ty=Tensor[(384), float64] */;
    %619 = reshape(%618, newshape=[384]) /* ty=Tensor[(384), float64] */;
    %620 = @func_2331(%619) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
    %621 = %620.1;
    (%617, %621)
  };
  %622() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */
}

def @func_9614(%var_9612: Tensor[(16, 7, 9), uint64]) -> (Tensor[(16, 7, 9), bool],) {
  @func_9611(%var_9612) /* ty=(Tensor[(16, 7, 9), bool],) */
}

def @func_11449() -> Tensor[(6, 1, 13), float32] {
  @func_11447() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_9887() -> (Tensor[(10, 4, 7), float32],) {
  %625 = fn () -> (Tensor[(10, 4, 7), float32],) {
    %623 = @func_7618() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %624 = %623.0;
    (%624,)
  };
  %625() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_12221() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) {
  @func_12219() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_4495() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) {
  %643 = fn () -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) {
    %626 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
    %627 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %628 = cast(meta[relay.Constant][21] /* ty=Tensor[(15, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 4), float64] */;
    %629 = reshape(%627, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %630 = reshape(%628, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %631 = cast(meta[relay.Constant][22] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
    %632 = cast(meta[relay.Constant][23] /* ty=Tensor[(1280), uint32] */, dtype="uint32") /* ty=Tensor[(1280), uint32] */;
    %633 = cast(meta[relay.Constant][24] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
    %634 = reshape(%631, newshape=[1, 10, 8]) /* ty=Tensor[(1, 10, 8), uint32] */;
    %635 = reshape(%632, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint32] */;
    %636 = reshape(%633, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), uint32] */;
    %637 = @func_1311(%634, %635, %636) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) */;
    %638 = @func_2803() /* ty=Tensor[(384), float64] */;
    %639 = %626.0;
    %640 = @func_3167(%629, %630) /* ty=Tensor[(4, 3, 5), float64] */;
    %641 = %637.0;
    %642 = @func_3630() /* ty=Tensor[(52), int8] */;
    (%638, %639, %640, meta[relay.Constant][21] /* ty=Tensor[(15, 4), float64] */, %641, meta[relay.Constant][22] /* ty=Tensor[(80), uint32] */, meta[relay.Constant][23] /* ty=Tensor[(1280), uint32] */, meta[relay.Constant][24] /* ty=Tensor[(480), uint32] */, %642)
  };
  %643() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */
}

def @func_5750() -> Tensor[(384), float64] {
  %644 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %644.2
}

def @func_15178() -> (Tensor[(384), float64],) {
  %646 = fn () -> (Tensor[(384), float64],) {
    %645 = @func_2454() /* ty=Tensor[(384), float64] */;
    (%645,)
  };
  %646() /* ty=(Tensor[(384), float64],) */
}

def @func_16408(%var_16371: Tensor[(4, 8, 13), float32], %var_16372: Tensor[(4, 8, 13), float32]) -> (Tensor[(4, 8, 13), bool], Tensor[(384), float64], Tensor[(52), int8]) {
  %647 = cast(%var_16372, dtype="bool") /* ty=Tensor[(4, 8, 13), bool] */;
  %648 = shape_of(%var_16371, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%var_16371, dtype="bool") /* ty=Tensor[(4, 8, 13), bool] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %651 = @func_16094() /* ty=(Tensor[(384), float64],) */;
  %652 = less(%649, %650) /* ty=Tensor[(4, 8, 13), bool] */;
  %653 = %651.0;
  %654 = @func_4412() /* ty=Tensor[(52), int8] */;
  (%652, %653, %654)
}

def @func_933(%var_926: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), float32],) {
  %655 = cast(meta[relay.Constant][25] /* ty=Tensor[(10, 4, 7), float32] */, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %656 = shape_of(%var_926, dtype="int32") /* ty=Tensor[(3), int32] */;
  %657 = cast(%var_926, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %658 = dyn.reshape(%655, %656, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %659 = divide(%657, %658) /* ty=Tensor[(10, 4, 7), float32] */;
  (%659,)
}

def @func_7385() -> (Tensor[(6, 1, 13), float32],) {
  %660 = @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %661 = %660.0;
  (%661,)
}

def @func_936(%var_934: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), float32],) {
  @func_933(%var_934) /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_6513() -> (Tensor[(384), float64],) {
  %664 = fn () -> (Tensor[(384), float64],) {
    %662 = @func_5521() /* ty=(Tensor[(384), float64],) */;
    %663 = %662.0;
    (%663,)
  };
  %664() /* ty=(Tensor[(384), float64],) */
}

def @func_15552() -> Tensor[(6, 1, 13), float32] {
  @func_15550() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_12812() -> (Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), uint8]) {
  %665 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %666 = @func_11143() /* ty=(Tensor[(384), float64], Tensor[(13, 4), int8], Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float64]) */;
  %667 = %666.3;
  %668 = @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
  %671 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %672 = cast(%667, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %674 = %665.0;
  %675 = minimum(%672, %673) /* ty=Tensor[(6, ?, 13), uint8] */;
  (%674, %675)
}

def @func_12374(%var_12336: Tensor[(1232), float64], %var_12337: Tensor[(60), float64], %var_12339: Tensor[(105), float32]) -> (Tensor[(52), int8], Tensor[(52), float64], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) {
  %676 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %677 = @func_4384() /* ty=(Tensor[(52), int8],) */;
  %678 = %677.0;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(52), float64] */;
  %680 = cast(%var_12336, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %681 = cast(%var_12337, dtype="float64") /* ty=Tensor[(60), float64] */;
  %682 = cast(meta[relay.Constant][26] /* ty=Tensor[(17248), float64] */, dtype="float64") /* ty=Tensor[(17248), float64] */;
  %683 = cast(%var_12339, dtype="float32") /* ty=Tensor[(105), float32] */;
  %684 = reshape(%680, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %685 = reshape(%681, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %686 = reshape(%682, newshape=[14, 1232]) /* ty=Tensor[(14, 1232), float64] */;
  %687 = reshape(%683, newshape=[1, 105]) /* ty=Tensor[(1, 105), float32] */;
  %688 = @func_4303(%684, %685, %686, %687) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) */;
  %689 = %676.1;
  %690 = rsqrt(%679) /* ty=Tensor[(52), float64] */;
  %691 = %688.6;
  (%689, %690, %691, %var_12336, %var_12337, meta[relay.Constant][26] /* ty=Tensor[(17248), float64] */, %var_12339)
}

def @func_12068() -> (Tensor[(52), int8], Tensor[(480), uint32]) {
  @func_12066() /* ty=(Tensor[(52), int8], Tensor[(480), uint32]) */
}

def @func_5628() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  @func_5626() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */
}

def @func_16742() -> Tensor[(12, 4, 6), uint32] {
  %693 = fn () -> Tensor[(12, 4, 6), uint32] {
    %692 = @func_16269() /* ty=(Tensor[(12, 4, 6), int16], Tensor[(12, 4, 6), uint32]) */;
    %692.1
  };
  %693() /* ty=Tensor[(12, 4, 6), uint32] */
}

def @func_4720() -> (Tensor[(52), int8],) {
  %696 = fn () -> (Tensor[(52), int8],) {
    %694 = @func_3305() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
    %695 = %694.0;
    (%695,)
  };
  %696() /* ty=(Tensor[(52), int8],) */
}

def @func_10653() -> (Tensor[(672), int32], Tensor[(384), float64]) {
  %706 = fn () -> (Tensor[(672), int32], Tensor[(384), float64]) {
    %697 = @func_9352() /* ty=(Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) */;
    %698 = %697.4;
    %699 = cast(meta[relay.Constant][27] /* ty=Tensor[(672), float32] */, dtype="int32") /* ty=Tensor[(672), int32] */;
    %700 = shape_of(%698, dtype="int32") /* ty=Tensor[(1), int32] */;
    %701 = cast(%698, dtype="int32") /* ty=Tensor[(672), int32] */;
    %702 = dyn.reshape(%699, %700, newshape=[]) /* ty=Tensor[(?), int32] */;
    %703 = @func_2900() /* ty=(Tensor[(384), float64],) */;
    %704 = left_shift(%701, %702) /* ty=Tensor[(672), int32] */;
    %705 = %703.0;
    (%704, %705)
  };
  %706() /* ty=(Tensor[(672), int32], Tensor[(384), float64]) */
}

def @func_14328() -> (Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) {
  %707 = @func_13784() /* ty=Tensor[(384), float64] */;
  %708 = @func_3465() /* ty=Tensor[(12, 2, 16), float64] */;
  %709 = @func_7375() /* ty=Tensor[(384), float64] */;
  (%707, %708, %709)
}

def @func_11640() -> Tensor[(52), int8] {
  @func_11638() /* ty=Tensor[(52), int8] */
}

def @func_6167(%var_6166: Tensor[(5, 9, 7), float32]) -> Tensor[(5, 9, 7), float32] {
  %711 = fn (%var_6131: Tensor[(5, 9, 7), float32]) -> Tensor[(5, 9, 7), float32] {
    %710 = cast(%var_6131, dtype="float32") /* ty=Tensor[(5, 9, 7), float32] */;
    sqrt(%710) /* ty=Tensor[(5, 9, 7), float32] */
  };
  %711(%var_6166) /* ty=Tensor[(5, 9, 7), float32] */
}

def @func_5626() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  %712 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %713 = %712.1;
  %714 = cast(%713, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
  %715 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %716 = sigmoid(%714) /* ty=Tensor[(6, 1, 13), float32] */;
  %717 = %715.2;
  (%716, %717)
}

def @func_7377() -> Tensor[(384), float64] {
  @func_7375() /* ty=Tensor[(384), float64] */
}

def @func_2407() -> (Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) {
  @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */
}

def @func_2698() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) {
  @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */
}

def @func_3805() -> Tensor[(384), float64] {
  @func_3803() /* ty=Tensor[(384), float64] */
}

def @func_3998() -> (Tensor[(384), float64], Tensor[(13, 2, 9), bool]) {
  %718 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %719 = cast(meta[relay.Constant][28] /* ty=Tensor[(234), int8] */, dtype="int8") /* ty=Tensor[(234), int8] */;
  %720 = cast(meta[relay.Constant][28] /* ty=Tensor[(234), int8] */, dtype="int8") /* ty=Tensor[(234), int8] */;
  %721 = reshape(%719, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), int8] */;
  %722 = reshape(%720, newshape=[13, 2, 9]) /* ty=Tensor[(13, 2, 9), int8] */;
  %723 = @func_3816(%721, %722) /* ty=Tensor[(13, 2, 9), int8] */;
  %724 = cast(meta[relay.Constant][28] /* ty=Tensor[(234), int8] */, dtype="bool") /* ty=Tensor[(234), bool] */;
  %725 = shape_of(%723, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%723, dtype="bool") /* ty=Tensor[(13, 2, 9), bool] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %728 = %718.0;
  %729 = logical_or(%726, %727) /* ty=Tensor[(13, 2, 9), bool] */;
  (%728, %729)
}

def @func_3803() -> Tensor[(384), float64] {
  @func_3015() /* ty=Tensor[(384), float64] */
}

def @func_3367() -> (Tensor[(6, 1, 13), float32], Tensor[(105), float32]) {
  @func_3365() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(105), float32]) */
}

def @func_2467() -> Tensor[(6, 1, 13), float32] {
  %730 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %730.0
}

def @func_16270() -> (Tensor[(12, 4, 6), int16], Tensor[(12, 4, 6), uint32]) {
  %743 = fn () -> (Tensor[(12, 4, 6), int16], Tensor[(12, 4, 6), uint32]) {
    %731 = cast(meta[relay.Constant][29] /* ty=Tensor[(12, 4, 6), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 6), float32] */;
    %732 = tan(%731) /* ty=Tensor[(12, 4, 6), float32] */;
    %733 = cast(meta[relay.Constant][30] /* ty=Tensor[(12, 4, 6), float32] */, dtype="int16") /* ty=Tensor[(12, 4, 6), int16] */;
    %734 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %735 = cast(%732, dtype="int16") /* ty=Tensor[(12, 4, 6), int16] */;
    %736 = dyn.reshape(%733, %734, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %737 = cast(meta[relay.Constant][31] /* ty=Tensor[(12, 4, 6), float32] */, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
    %738 = shape_of(%732, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%732, dtype="uint32") /* ty=Tensor[(12, 4, 6), uint32] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %741 = minimum(%735, %736) /* ty=Tensor[(12, 4, 6), int16] */;
    %742 = multiply(%739, %740) /* ty=Tensor[(12, 4, 6), uint32] */;
    (%741, %742)
  };
  %743() /* ty=(Tensor[(12, 4, 6), int16], Tensor[(12, 4, 6), uint32]) */
}

def @func_6614() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64], Tensor[(280), float32]) {
  %751 = fn () -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64], Tensor[(280), float32]) {
    %744 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
    %745 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
    %746 = @func_4070() /* ty=Tensor[(52), int8] */;
    %747 = @func_3015() /* ty=Tensor[(384), float64] */;
    %748 = @func_4734() /* ty=Tensor[(52), int8] */;
    %749 = %744.1;
    %750 = %745.3;
    (%746, %747, %748, %749, %750)
  };
  %751() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64], Tensor[(280), float32]) */
}

def @func_14451() -> (Tensor[(10, 4, 7), float32], Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) {
  %757 = fn () -> (Tensor[(10, 4, 7), float32], Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) {
    %752 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
    %753 = @func_13573() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
    %754 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
    %755 = %752.1;
    %756 = %753.3;
    (%754, %755, %756)
  };
  %757() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) */
}

def @main() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64], Tensor[(10, 4, 7), float32], Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), bool]) {
  %758 = @func_5523() /* ty=(Tensor[(384), float64],) */;
  %759 = @func_14330() /* ty=(Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) */;
  %760 = @func_8310() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %761 = @func_9278() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %762 = @func_5387() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %763 = @func_7749() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %764 = @func_11979() /* ty=(Tensor[(10, 4, 7), float64],) */;
  %765 = @func_2494() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %766 = @func_11159() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %767 = %766.0;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
  %769 = log10(%768) /* ty=Tensor[(10, 4, 7), float32] */;
  %770 = @func_9760() /* ty=(Tensor[(10, 4, 7), float32],) */;
  %771 = %770.0;
  %772 = cast(%771, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %773 = shape_of(%769, dtype="int32") /* ty=Tensor[(3), int32] */;
  %774 = cast(%769, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
  %775 = dyn.reshape(%772, %773, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %776 = %758.0;
  %777 = %759.0;
  %778 = %760.0;
  %779 = %761.0;
  %780 = %762.0;
  %781 = %763.0;
  %782 = %764.0;
  %783 = %765.0;
  %784 = logical_and(%774, %775) /* ty=Tensor[(10, 4, 7), bool] */;
  (%776, %777, %778, %779, %780, %781, %782, %783, %784)
}

def @func_12379(%var_12376: Tensor[(1232), float64], %var_12377: Tensor[(60), float64], %var_12378: Tensor[(105), float32]) -> (Tensor[(52), int8], Tensor[(52), float64], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) {
  @func_12374(%var_12376, %var_12377, %var_12378) /* ty=(Tensor[(52), int8], Tensor[(52), float64], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) */
}

def @func_11483() -> Tensor[(6, 1, 13), float32] {
  %786 = fn () -> Tensor[(6, 1, 13), float32] {
    %785 = @func_10106() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %785.0
  };
  %786() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_9127(%var_9126: Tensor[(8, 12, 7), float32]) -> Tensor[(8, 12, 7), float32] {
  %788 = fn (%var_9119: Tensor[(8, 12, 7), float32]) -> Tensor[(8, 12, 7), float32] {
    %787 = cast(%var_9119, dtype="float32") /* ty=Tensor[(8, 12, 7), float32] */;
    cos(%787) /* ty=Tensor[(8, 12, 7), float32] */
  };
  %788(%var_9126) /* ty=Tensor[(8, 12, 7), float32] */
}

def @func_7875() -> Tensor[(384), float64] {
  @func_7873() /* ty=Tensor[(384), float64] */
}

def @func_9742(%var_9741: Tensor[(280), float64]) -> (Tensor[(52), int8], Tensor[(52), int8], Tensor[(140, 2), float64], Tensor[(280), float64], Tensor[(15, 7, 1), float32], Tensor[(105, 1), float32], Tensor[(1, 1232), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) {
  %812 = fn (%var_9685: Tensor[(280), float64]) -> (Tensor[(52), int8], Tensor[(52), int8], Tensor[(140, 2), float64], Tensor[(280), float64], Tensor[(15, 7, 1), float32], Tensor[(105, 1), float32], Tensor[(1, 1232), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) {
    %789 = cast(%var_9685, dtype="float64") /* ty=Tensor[(280), float64] */;
    %790 = reshape(%789, newshape=[140, 2]) /* ty=Tensor[(140, 2), float64] */;
    %791 = @func_7151(%790) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) */;
    %792 = cast(meta[relay.Constant][32] /* ty=Tensor[(105, 1), float32] */, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
    %793 = reshape(%792, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
    %794 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 1232), float64] */, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
    %795 = reshape(%794, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
    %796 = @func_3926(%795) /* ty=(Tensor[(52), int8], Tensor[(8, 14, 11), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
    %797 = @func_9276() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %798 = @func_5677() /* ty=Tensor[(52), int8] */;
    %799 = cast(%798, dtype="int8") /* ty=Tensor[(52), int8] */;
    %800 = reshape(%799, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %801 = @func_2558(%800) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
    %802 = @func_3630() /* ty=Tensor[(52), int8] */;
    %803 = cast(%802, dtype="int8") /* ty=Tensor[(52), int8] */;
    %804 = reshape(%803, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
    %805 = @func_2972(%804) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) */;
    %806 = %791.2;
    %807 = @func_1212(%793) /* ty=Tensor[(15, 7, 1), float32] */;
    %808 = %796.2;
    %809 = %797.0;
    %810 = %801.2;
    %811 = %805.1;
    (%798, %802, %806, %var_9685, %807, meta[relay.Constant][32] /* ty=Tensor[(105, 1), float32] */, %808, meta[relay.Constant][33] /* ty=Tensor[(1, 1232), float64] */, %809, %810, %811)
  };
  %812(%var_9741) /* ty=(Tensor[(52), int8], Tensor[(52), int8], Tensor[(140, 2), float64], Tensor[(280), float64], Tensor[(15, 7, 1), float32], Tensor[(105, 1), float32], Tensor[(1, 1232), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(13, 2, 2), int8]) */
}

def @func_6840() -> Tensor[(384), float64] {
  %813 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %813.1
}

def @func_3137(%var_3135: Tensor[(384), float64]) -> (Tensor[(384), bool], Tensor[(384), float64]) {
  @func_3134(%var_3135) /* ty=(Tensor[(384), bool], Tensor[(384), float64]) */
}

def @func_11598(%var_11590: Tensor[(52), int8]) -> (Tensor[(10, 4, 7), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %814 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
  %815 = cast(%var_11590, dtype="int8") /* ty=Tensor[(52), int8] */;
  %816 = reshape(%815, newshape=[13, 4]) /* ty=Tensor[(13, 4), int8] */;
  %817 = @func_2870(%816) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) */;
  %818 = %814.0;
  %819 = %817.1;
  (%818, %819, %var_11590)
}

def @func_2331(%var_2327: Tensor[(384), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %820 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %821 = cast(%var_2327, dtype="float64") /* ty=Tensor[(384), float64] */;
  %822 = reshape(%821, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %823 = @func_1145(%822) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) */;
  %824 = %820.0;
  %825 = %823.2;
  (%824, %825, %var_2327)
}

def @func_2440() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */
}

def @func_5679() -> Tensor[(52), int8] {
  @func_5677() /* ty=Tensor[(52), int8] */
}

def @func_12423() -> Tensor[(52), int8] {
  %826 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %826.0
}

def @func_12251() -> (Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32]) {
  %830 = fn () -> (Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32]) {
    %827 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
    %828 = %827.0;
    %829 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
    (%828, %829)
  };
  %830() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32]) */
}

def @func_13170() -> (Tensor[(480), uint32], Tensor[(52), int8]) {
  @func_13168() /* ty=(Tensor[(480), uint32], Tensor[(52), int8]) */
}

def @func_3256() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32]) {
  %835 = fn () -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32]) {
    %831 = @func_2780() /* ty=(Tensor[(52), int8],) */;
    %832 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
    %833 = %831.0;
    %834 = %832.1;
    (%833, %834)
  };
  %835() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */
}

def @func_3305() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32]) {
  %836 = @func_2958() /* ty=(Tensor[(52), int8],) */;
  %837 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %838 = %836.0;
  %839 = %837.2;
  (%838, %839)
}

def @func_2263() -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  %846 = fn () -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
    %840 = cast(meta[relay.Constant][34] /* ty=Tensor[(6, 1, 13), float32] */, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
    %841 = cast(meta[relay.Constant][35] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %842 = reshape(%841, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
    %843 = @func_1145(%842) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) */;
    %844 = atan(%840) /* ty=Tensor[(6, 1, 13), float32] */;
    %845 = %843.2;
    (%844, %845, meta[relay.Constant][35] /* ty=Tensor[(384), float64] */)
  };
  %846() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */
}

def @func_1214(%var_1213: Tensor[(15, 7, 1), float32]) -> Tensor[(15, 7, 1), float32] {
  %848 = fn (%var_1191: Tensor[(15, 7, 1), float32]) -> Tensor[(15, 7, 1), float32] {
    %847 = cast(%var_1191, dtype="float32") /* ty=Tensor[(15, 7, 1), float32] */;
    sin(%847) /* ty=Tensor[(15, 7, 1), float32] */
  };
  %848(%var_1213) /* ty=Tensor[(15, 7, 1), float32] */
}

def @func_6643() -> (Tensor[(384), float64], Tensor[(12, 3, 5), float64]) {
  %849 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %850 = %849.1;
  %851 = cast(%850, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %852 = @func_5124() /* ty=Tensor[(384), float64] */;
  %853 = sqrt(%851) /* ty=Tensor[(12, 3, 5), float64] */;
  (%852, %853)
}

def @func_5848() -> (Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) {
  %859 = fn () -> (Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) {
    %854 = @func_4830() /* ty=(Tensor[(384), float64],) */;
    %855 = cast(meta[relay.Constant][36] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
    %856 = reshape(%855, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
    %857 = %854.0;
    %858 = @func_1212(%856) /* ty=Tensor[(15, 7, 1), float32] */;
    (%857, %858, meta[relay.Constant][36] /* ty=Tensor[(105), float32] */)
  };
  %859() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */
}

def @func_10920() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %864 = fn () -> (Tensor[(384), float64], Tensor[(52), int8]) {
    %860 = @func_5682() /* ty=(Tensor[(384), float64],) */;
    %861 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
    %862 = %860.0;
    %863 = %861.1;
    (%862, %863)
  };
  %864() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */
}

def @func_4368(%var_4366: Tensor[(1, 3, 11), uint16]) -> Tensor[(13, 3, 11), bool] {
  @func_4365(%var_4366) /* ty=Tensor[(13, 3, 11), bool] */
}

def @func_12955(%var_12939: Tensor[(12, 2, 2), int8], %var_12940: Tensor[(12, 2, 2), int8], %var_12946: Tensor[(12, 2, 2), int8]) -> (Tensor[(12, 2, 2), int8], Tensor[(12, 2, 2), uint64], Tensor[(12, 2, 2), bool]) {
  %865 = cast(%var_12940, dtype="int8") /* ty=Tensor[(12, 2, 2), int8] */;
  %866 = shape_of(%var_12939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%var_12939, dtype="int8") /* ty=Tensor[(12, 2, 2), int8] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %869 = cast(%var_12946, dtype="uint64") /* ty=Tensor[(12, 2, 2), uint64] */;
  %870 = shape_of(%var_12940, dtype="int32") /* ty=Tensor[(3), int32] */;
  %871 = cast(%var_12940, dtype="uint64") /* ty=Tensor[(12, 2, 2), uint64] */;
  %872 = dyn.reshape(%869, %870, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %873 = cast(%var_12946, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %874 = shape_of(%var_12939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %875 = cast(%var_12939, dtype="bool") /* ty=Tensor[(12, 2, 2), bool] */;
  %876 = dyn.reshape(%873, %874, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %877 = maximum(%867, %868) /* ty=Tensor[(12, 2, 2), int8] */;
  %878 = bitwise_xor(%871, %872) /* ty=Tensor[(12, 2, 2), uint64] */;
  %879 = greater_equal(%875, %876) /* ty=Tensor[(12, 2, 2), bool] */;
  (%877, %878, %879)
}

def @func_7079() -> Tensor[(384), int32] {
  %880 = fn () -> Tensor[(384), int32] {
    @func_7033() /* ty=Tensor[(384), int32] */
  };
  %880() /* ty=Tensor[(384), int32] */
}

def @func_7515() -> (Tensor[(384), float64],) {
  %881 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %882 = %881.0;
  (%882,)
}

def @func_2782() -> (Tensor[(52), int8],) {
  @func_2780() /* ty=(Tensor[(52), int8],) */
}

def @func_2494() -> (Tensor[(6, 1, 13), float32],) {
  @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_13321(%var_13318: Tensor[(1232), float64], %var_13319: Tensor[(17248), float64], %var_13320: Tensor[(105, 1), float32]) -> (Tensor[(384), int32], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105, 1), float32], Tensor[(6, ?, 13), bool], Tensor[(52), int8]) {
  %896 = fn (%var_13275: Tensor[(1232), float64], %var_13277: Tensor[(17248), float64], %var_13278: Tensor[(105, 1), float32]) -> (Tensor[(384), int32], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105, 1), float32], Tensor[(6, ?, 13), bool], Tensor[(52), int8]) {
    %883 = cast(%var_13275, dtype="float64") /* ty=Tensor[(1232), float64] */;
    %884 = cast(meta[relay.Constant][37] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
    %885 = cast(%var_13277, dtype="float64") /* ty=Tensor[(17248), float64] */;
    %886 = cast(%var_13278, dtype="float32") /* ty=Tensor[(105, 1), float32] */;
    %887 = reshape(%883, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
    %888 = reshape(%884, newshape=[60]) /* ty=Tensor[(60), float64] */;
    %889 = reshape(%885, newshape=[14, 1232]) /* ty=Tensor[(14, 1232), float64] */;
    %890 = reshape(%886, newshape=[1, 105]) /* ty=Tensor[(1, 105), float32] */;
    %891 = @func_4303(%887, %888, %889, %890) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) */;
    %892 = @func_7033() /* ty=Tensor[(384), int32] */;
    %893 = %891.6;
    %894 = @func_10741() /* ty=Tensor[(6, ?, 13), bool] */;
    %895 = @func_8588() /* ty=Tensor[(52), int8] */;
    (%892, %893, %var_13275, meta[relay.Constant][37] /* ty=Tensor[(60), float64] */, %var_13277, %var_13278, %894, %895)
  };
  %896(%var_13318, %var_13319, %var_13320) /* ty=(Tensor[(384), int32], Tensor[(12, 3, 5), float64], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105, 1), float32], Tensor[(6, ?, 13), bool], Tensor[(52), int8]) */
}

def @func_6054(%var_6039: float64) -> (Tensor[(15, 3, 3), float64],) {
  %897 = cast(%var_6039, dtype="float64") /* ty=float64 */;
  %898 = cast(meta[relay.Constant][38] /* ty=Tensor[(15, 3, 3), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 3), float64] */;
  %899 = floor_mod(%897, %898) /* ty=Tensor[(15, 3, 3), float64] */;
  (%899,)
}

def @func_8225(%var_8224: Tensor[(150), bool]) -> (Tensor[(52), int8], Tensor[(384), float64], bool, Tensor[(150), bool]) {
  %908 = fn (%var_8220: Tensor[(150), bool]) -> (Tensor[(52), int8], Tensor[(384), float64], bool, Tensor[(150), bool]) {
    %900 = @func_2790() /* ty=(Tensor[(52), int8],) */;
    %901 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %902 = cast(%var_8220, dtype="bool") /* ty=Tensor[(150), bool] */;
    %903 = reshape(%901, newshape=[]) /* ty=bool */;
    %904 = reshape(%902, newshape=[10, 3, 5]) /* ty=Tensor[(10, 3, 5), bool] */;
    %905 = @func_3084(%903, %904) /* ty=(Tensor[(10, 3, 5), bool], Tensor[(384), float64], Tensor[(10, 3, 5), uint32]) */;
    %906 = %900.0;
    %907 = %905.1;
    (%906, %907, False /* ty=bool */, %var_8220)
  };
  %908(%var_8224) /* ty=(Tensor[(52), int8], Tensor[(384), float64], bool, Tensor[(150), bool]) */
}

def @func_10527() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  %909 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %910 = @func_10225() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
  %911 = @func_5682() /* ty=(Tensor[(384), float64],) */;
  %912 = %909.0;
  %913 = %910.0;
  %914 = %911.0;
  (%912, %913, %914)
}

def @func_4308(%var_4304: Tensor[(1, 1232), float64], %var_4305: Tensor[(60), float64], %var_4306: Tensor[(14, 1232), float64], %var_4307: Tensor[(1, 105), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) {
  %948 = fn (%var_4220: Tensor[(1, 1232), float64], %var_4251: Tensor[(60), float64], %var_4268: Tensor[(14, 1232), float64], %var_4297: Tensor[(1, 105), float32]) -> (Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) {
    %915 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %916 = cast(%var_4220, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
    %917 = reshape(%916, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), float64] */;
    %918 = cast(%var_4251, dtype="float64") /* ty=Tensor[(60), float64] */;
    %919 = cast(%var_4251, dtype="float64") /* ty=Tensor[(60), float64] */;
    %920 = reshape(%918, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %921 = reshape(%919, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %922 = @func_3167(%920, %921) /* ty=Tensor[(4, 3, 5), float64] */;
    %923 = cast(%922, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %924 = cast(%922, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %925 = reshape(%923, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %926 = reshape(%924, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
    %927 = cast(%var_4268, dtype="float32") /* ty=Tensor[(14, 1232), float32] */;
    %928 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
    %929 = cast(%var_4220, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
    %930 = log10(%929) /* ty=Tensor[(1, 1232), float64] */;
    %931 = cast(%930, dtype="bool") /* ty=Tensor[(1, 1232), bool] */;
    %932 = cast(%var_4268, dtype="bool") /* ty=Tensor[(14, 1232), bool] */;
    %933 = greater_equal(%931, %932) /* ty=Tensor[(14, 1232), bool] */;
    %934 = cast(%930, dtype="int8") /* ty=Tensor[(1, 1232), int8] */;
    %935 = cast(%933, dtype="int8") /* ty=Tensor[(14, 1232), int8] */;
    %936 = logical_xor(%934, %935) /* ty=Tensor[(14, 1232), int8] */;
    %937 = cast(%930, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
    %938 = cast(%936, dtype="float32") /* ty=Tensor[(14, 1232), float32] */;
    %939 = cast(%var_4297, dtype="float32") /* ty=Tensor[(1, 105), float32] */;
    %940 = reshape(%939, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
    %941 = %915.0;
    %942 = @func_2650(%917) /* ty=Tensor[(8, 14, 11), float64] */;
    %943 = @func_3167(%925, %926) /* ty=Tensor[(4, 3, 5), float64] */;
    %944 = sigmoid(%927) /* ty=Tensor[(14, 1232), float32] */;
    %945 = %928.1;
    %946 = subtract(%937, %938) /* ty=Tensor[(14, 1232), float32] */;
    %947 = @func_1212(%940) /* ty=Tensor[(15, 7, 1), float32] */;
    (%941, %942, %922, %var_4251, %943, %944, %945, %946, %947, %var_4297)
  };
  %948(%var_4304, %var_4305, %var_4306, %var_4307) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) */
}

def @func_2804() -> Tensor[(384), float64] {
  %950 = fn () -> Tensor[(384), float64] {
    %949 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
    %949.0
  };
  %950() /* ty=Tensor[(384), float64] */
}

def @func_3200() -> (Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) {
  %951 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %952 = cast(meta[relay.Constant][39] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %953 = reshape(%952, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %954 = @func_1212(%953) /* ty=Tensor[(15, 7, 1), float32] */;
  %955 = cast(%954, dtype="float64") /* ty=Tensor[(15, 7, 1), float64] */;
  %956 = %951.0;
  %957 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %958 = sigmoid(%955) /* ty=Tensor[(15, 7, 1), float64] */;
  (%956, meta[relay.Constant][39] /* ty=Tensor[(105), float32] */, %957, %958)
}

def @func_9381() -> Tensor[(10, 4, 7), float32] {
  %960 = fn () -> Tensor[(10, 4, 7), float32] {
    %959 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %959.0
  };
  %960() /* ty=Tensor[(10, 4, 7), float32] */
}

def @func_2561(%var_2559: Tensor[(52), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  @func_2558(%var_2559) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */
}

def @func_15786() -> (Tensor[(10, 4, 7), float32], Tensor[(8, 15, 3), uint16], Tensor[(360), float32], Tensor[(52), int8], Tensor[(52), int8]) {
  %975 = fn () -> (Tensor[(10, 4, 7), float32], Tensor[(8, 15, 3), uint16], Tensor[(360), float32], Tensor[(52), int8], Tensor[(52), int8]) {
    %961 = @func_7748() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %962 = cast(meta[relay.Constant][40] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %963 = cast(meta[relay.Constant][40] /* ty=Tensor[(360), float32] */, dtype="float32") /* ty=Tensor[(360), float32] */;
    %964 = cast(meta[relay.Constant][41] /* ty=Tensor[(52), int8] */, dtype="int8") /* ty=Tensor[(52), int8] */;
    %965 = cast(meta[relay.Constant][40] /* ty=Tensor[(360), float32] */, dtype="float64") /* ty=Tensor[(360), float64] */;
    %966 = reshape(%962, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %967 = reshape(%963, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float32] */;
    %968 = reshape(%964, newshape=[52]) /* ty=Tensor[(52), int8] */;
    %969 = reshape(%965, newshape=[8, 15, 3]) /* ty=Tensor[(8, 15, 3), float64] */;
    %970 = @func_5910(%966, %967, %968, %969) /* ty=(Tensor[(13, 2, 2), int8], Tensor[(52), int8], Tensor[(8, 15, 3), bool], Tensor[(8, 15, 3), uint16], Tensor[(10, 4, 7), bool], Tensor[(280), float64], Tensor[(13, 2, 2), int8]) */;
    %971 = @func_2790() /* ty=(Tensor[(52), int8],) */;
    %972 = %961.0;
    %973 = %970.3;
    %974 = %971.0;
    (%972, %973, meta[relay.Constant][40] /* ty=Tensor[(360), float32] */, meta[relay.Constant][41] /* ty=Tensor[(52), int8] */, %974)
  };
  %975() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(8, 15, 3), uint16], Tensor[(360), float32], Tensor[(52), int8], Tensor[(52), int8]) */
}

def @func_10343() -> Tensor[(6, 1, 13), float32] {
  @func_9897() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_460(%var_432: Tensor[(13, 2, 2), int8]) -> (Tensor[(13, 2, 2), int8],) {
  %976 = cast(%var_432, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
  %977 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(13, 2, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(meta[relay.Constant][42] /* ty=Tensor[(13, 2, 2), int8] */, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %980 = bitwise_xor(%978, %979) /* ty=Tensor[(13, 2, 2), int8] */;
  (%980,)
}

def @func_7427() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %984 = fn () -> (Tensor[(52), int8], Tensor[(384), float64]) {
    %981 = @func_6512() /* ty=(Tensor[(384), float64],) */;
    %982 = @func_5677() /* ty=Tensor[(52), int8] */;
    %983 = %981.0;
    (%982, %983)
  };
  %984() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */
}

def @func_10544() -> (Tensor[(6, 1, 13), float32], Tensor[(60), float64]) {
  @func_10542() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(60), float64]) */
}

def @func_14463() -> (Tensor[(6, 1, 13), float32],) {
  @func_14461() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_13362() -> (Tensor[(6, 1, 13), float32],) {
  %987 = fn () -> (Tensor[(6, 1, 13), float32],) {
    %985 = @func_7385() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %986 = %985.0;
    (%986,)
  };
  %987() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_12111() -> Tensor[(52), int8] {
  %989 = fn () -> Tensor[(52), int8] {
    %988 = @func_8082() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
    %988.0
  };
  %989() /* ty=Tensor[(52), int8] */
}

def @func_5448() -> (Tensor[(384), float64],) {
  %990 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %991 = %990.0;
  (%991,)
}

def @func_9354() -> (Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) {
  @func_9352() /* ty=(Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) */
}

def @func_6316() -> (Tensor[(384), float64], Tensor[(384), float64]) {
  %996 = fn () -> (Tensor[(384), float64], Tensor[(384), float64]) {
    %992 = @func_3998() /* ty=(Tensor[(384), float64], Tensor[(13, 2, 9), bool]) */;
    %993 = @func_5448() /* ty=(Tensor[(384), float64],) */;
    %994 = %992.0;
    %995 = %993.0;
    (%994, %995)
  };
  %996() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_10106() -> (Tensor[(6, 1, 13), float32],) {
  %997 = @func_7385() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %998 = %997.0;
  (%998,)
}

def @func_9898() -> Tensor[(6, 1, 13), float32] {
  %1000 = fn () -> Tensor[(6, 1, 13), float32] {
    %999 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
    %999.1
  };
  %1000() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_6907() -> Tensor[(384), float64] {
  @func_6905() /* ty=Tensor[(384), float64] */
}

def @func_1316(%var_1313: Tensor[(1, 10, 8), uint32], %var_1314: Tensor[(16, 10, 8), uint32], %var_1315: Tensor[(6, 10, 8), uint32]) -> (Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) {
  @func_1311(%var_1313, %var_1314, %var_1315) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) */
}

def @func_14912() -> (Tensor[(52), int8], Tensor[(4, 3, 5), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64]) {
  @func_14910() /* ty=(Tensor[(52), int8], Tensor[(4, 3, 5), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64]) */
}

def @func_7375() -> Tensor[(384), float64] {
  %1001 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %1001.1
}

def @func_10529() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  @func_10527() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */
}

def @func_14388(%var_14386: Tensor[(80), uint32]) -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(8, 60), uint32]) {
  @func_14385(%var_14386) /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(8, 60), uint32]) */
}

def @func_10413() -> (Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) {
  %1005 = fn () -> (Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) {
    %1002 = @func_3365() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(105), float32]) */;
    %1003 = @func_10343() /* ty=Tensor[(6, 1, 13), float32] */;
    %1004 = %1002.0;
    (%1003, %1004)
  };
  %1005() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(6, 1, 13), float32]) */
}

def @func_2972(%var_2963: Tensor[(13, 4), int8]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8]) {
  %1006 = cast(%var_2963, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
  %1007 = reshape(%1006, newshape=[52]) /* ty=Tensor[(52), int8] */;
  %1008 = @func_1927(%1007) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */;
  %1009 = @func_2803() /* ty=Tensor[(384), float64] */;
  %1010 = %1008.1;
  (%1009, %1010, %var_2963)
}

def @func_13574() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
  %1019 = fn () -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64], Tensor[(6, 1, 13), float32]) {
    %1011 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
    %1012 = @func_8758() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
    %1013 = @func_4830() /* ty=(Tensor[(384), float64],) */;
    %1014 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %1015 = %1011.8;
    %1016 = %1012.4;
    %1017 = %1013.0;
    %1018 = %1014.0;
    (%1015, %1016, %1017, %1018)
  };
  %1019() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */
}

def @func_7266() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float64]) {
  %1025 = fn () -> (Tensor[(384), float64], Tensor[(6, 1, 13), float64]) {
    %1020 = @func_6512() /* ty=(Tensor[(384), float64],) */;
    %1021 = @func_5309() /* ty=Tensor[(6, 1, 13), float32] */;
    %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(6, 1, 13), float64] */;
    %1023 = %1020.0;
    %1024 = log10(%1022) /* ty=Tensor[(6, 1, 13), float64] */;
    (%1023, %1024)
  };
  %1025() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float64]) */
}

def @func_6082(%var_6080: float64) -> (Tensor[(52), int8], Tensor[(15, 3, 3), float64], float64) {
  @func_6079(%var_6080) /* ty=(Tensor[(52), int8], Tensor[(15, 3, 3), float64], float64) */
}

def @func_13756() -> (Tensor[(384), int32], Tensor[(384), float64]) {
  %1026 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %1027 = @func_7033() /* ty=Tensor[(384), int32] */;
  %1028 = %1026.1;
  (%1027, %1028)
}

def @func_11790(%var_11789: Tensor[(384), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(384), bool], Tensor[(6, 1, 13), float32]) {
  %1040 = fn (%var_11767: Tensor[(384), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(384), bool], Tensor[(6, 1, 13), float32]) {
    %1029 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
    %1030 = @func_9074() /* ty=(Tensor[(384), float64],) */;
    %1031 = %1030.0;
    %1032 = cast(%var_11767, dtype="bool") /* ty=Tensor[(384), bool] */;
    %1033 = shape_of(%1031, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1034 = cast(%1031, dtype="bool") /* ty=Tensor[(384), bool] */;
    %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?), bool] */;
    %1036 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %1037 = %1029.0;
    %1038 = greater(%1034, %1035) /* ty=Tensor[(384), bool] */;
    %1039 = %1036.0;
    (%1037, %1038, %1039)
  };
  %1040(%var_11789) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), bool], Tensor[(6, 1, 13), float32]) */
}

def @func_16473(%var_16464: Tensor[(14, 12, 10), float32]) -> (Tensor[(14, 12, 10), float32],) {
  %1041 = cast(%var_16464, dtype="float32") /* ty=Tensor[(14, 12, 10), float32] */;
  %1042 = erf(%1041) /* ty=Tensor[(14, 12, 10), float32] */;
  (%1042,)
}

def @func_14807() -> Tensor[(384), float64] {
  %1044 = fn () -> Tensor[(384), float64] {
    %1043 = @func_9352() /* ty=(Tensor[(384), float64], Tensor[(8, 14, 11), float64], Tensor[(1232), float64], Tensor[(8, 12, 7), float32], Tensor[(672), float32], Tensor[(52), int8]) */;
    %1043.0
  };
  %1044() /* ty=Tensor[(384), float64] */
}

def @func_13972() -> (Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(52), int8]) {
  %1053 = fn () -> (Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(52), int8]) {
    %1045 = @func_10542() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(60), float64]) */;
    %1046 = @func_13756() /* ty=(Tensor[(384), int32], Tensor[(384), float64]) */;
    %1047 = @func_12472() /* ty=(Tensor[(52), int8],) */;
    %1048 = @func_12278() /* ty=Tensor[(4, 3, 5), float64] */;
    %1049 = %1045.1;
    %1050 = %1046.1;
    %1051 = @func_11638() /* ty=Tensor[(52), int8] */;
    %1052 = %1047.0;
    (%1048, %1049, %1050, %1051, %1052)
  };
  %1053() /* ty=(Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(384), float64], Tensor[(52), int8], Tensor[(52), int8]) */
}

def @func_15648() -> (Tensor[(384), float64],) {
  %1055 = fn () -> (Tensor[(384), float64],) {
    %1054 = @func_11165() /* ty=Tensor[(384), float64] */;
    (%1054,)
  };
  %1055() /* ty=(Tensor[(384), float64],) */
}

def @func_16018() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %1060 = fn () -> (Tensor[(384), float64], Tensor[(52), int8]) {
    %1056 = @func_14328() /* ty=(Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) */;
    %1057 = @func_8191() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
    %1058 = %1056.2;
    %1059 = %1057.1;
    (%1058, %1059)
  };
  %1060() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */
}

def @func_10148() -> (Tensor[(480), uint32], Tensor[(384), float64]) {
  %1061 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %1062 = @func_7265() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float64]) */;
  %1063 = %1061.7;
  %1064 = %1062.0;
  (%1063, %1064)
}

def @func_14670() -> (Tensor[(384), float64],) {
  %1067 = fn () -> (Tensor[(384), float64],) {
    %1065 = @func_14328() /* ty=(Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) */;
    %1066 = %1065.0;
    (%1066,)
  };
  %1067() /* ty=(Tensor[(384), float64],) */
}

def @func_14467() -> Tensor[(6, 1, 13), float32] {
  %1069 = fn () -> Tensor[(6, 1, 13), float32] {
    %1068 = @func_5468() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %1068.0
  };
  %1069() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_16544(%var_16531: Tensor[(12, 15, 16), uint16], %var_16532: Tensor[(12, 15, 16), uint16]) -> (Tensor[(12, 15, 16), uint16], Tensor[(10, 4, 7), float64], Tensor[(52), int8]) {
  %1070 = cast(%var_16532, dtype="uint16") /* ty=Tensor[(12, 15, 16), uint16] */;
  %1071 = shape_of(%var_16531, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1072 = cast(%var_16531, dtype="uint16") /* ty=Tensor[(12, 15, 16), uint16] */;
  %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1074 = @func_15528() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32]) */;
  %1075 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %1076 = right_shift(%1072, %1073) /* ty=Tensor[(12, 15, 16), uint16] */;
  %1077 = %1074.1;
  %1078 = %1075.0;
  (%1076, %1077, %1078)
}

def @func_15530() -> (Tensor[(384), float64], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32]) {
  @func_15528() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32]) */
}

def @func_4940() -> (Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) {
  %1079 = @func_3365() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(105), float32]) */;
  %1080 = cast(meta[relay.Constant][43] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1081 = cast(meta[relay.Constant][43] /* ty=Tensor[(60), float64] */, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1082 = reshape(%1080, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %1083 = reshape(%1081, newshape=[4, 3, 5]) /* ty=Tensor[(4, 3, 5), float64] */;
  %1084 = @func_2381() /* ty=(Tensor[(384), float64],) */;
  %1085 = %1084.0;
  %1086 = @func_2803() /* ty=Tensor[(384), float64] */;
  %1087 = cast(%1086, dtype="int32") /* ty=Tensor[(384), int32] */;
  %1088 = shape_of(%1085, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1089 = cast(%1085, dtype="int32") /* ty=Tensor[(384), int32] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?), int32] */;
  %1091 = %1079.0;
  %1092 = @func_3167(%1082, %1083) /* ty=Tensor[(4, 3, 5), float64] */;
  %1093 = @func_3465() /* ty=Tensor[(12, 2, 16), float64] */;
  %1094 = minimum(%1089, %1090) /* ty=Tensor[(384), int32] */;
  (%1091, %1092, meta[relay.Constant][43] /* ty=Tensor[(60), float64] */, %1093, %1094)
}

def @func_13116(%var_13115: Tensor[(6, 14, 7), uint64]) -> (Tensor[(6, 14, 7), uint64],) {
  %1100 = fn (%var_13110: Tensor[(6, 14, 7), uint64]) -> (Tensor[(6, 14, 7), uint64],) {
    %1095 = cast(%var_13110, dtype="uint64") /* ty=Tensor[(6, 14, 7), uint64] */;
    %1096 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(6, 14, 7), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1097 = cast(meta[relay.Constant][44] /* ty=Tensor[(6, 14, 7), uint64] */, dtype="uint64") /* ty=Tensor[(6, 14, 7), uint64] */;
    %1098 = dyn.reshape(%1095, %1096, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1099 = left_shift(%1097, %1098) /* ty=Tensor[(6, 14, 7), uint64] */;
    (%1099,)
  };
  %1100(%var_13115) /* ty=(Tensor[(6, 14, 7), uint64],) */
}

def @func_4561() -> Tensor[(6, 1, 13), float32] {
  @func_4559() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_8803() -> Tensor[(52), int8] {
  @func_3630() /* ty=Tensor[(52), int8] */
}

def @func_16095() -> (Tensor[(384), float64],) {
  %1102 = fn () -> (Tensor[(384), float64],) {
    %1101 = @func_13827() /* ty=Tensor[(384), float64] */;
    (%1101,)
  };
  %1102() /* ty=(Tensor[(384), float64],) */
}

def @func_16934() -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64]) {
  %1109 = fn () -> (Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64]) {
    %1103 = @func_6512() /* ty=(Tensor[(384), float64],) */;
    %1104 = @func_15371() /* ty=(Tensor[(384), float64],) */;
    %1105 = @func_7466() /* ty=(Tensor[(15, 7, 1), float64],) */;
    %1106 = %1103.0;
    %1107 = %1104.0;
    %1108 = %1105.0;
    (%1106, %1107, %1108)
  };
  %1109() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(15, 7, 1), float64]) */
}

def @func_14910() -> (Tensor[(52), int8], Tensor[(4, 3, 5), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64]) {
  %1110 = @func_12219() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) */;
  %1111 = cast(meta[relay.Constant][45] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1112 = reshape(%1111, newshape=[280]) /* ty=Tensor[(280), float64] */;
  %1113 = @func_12742(%1112) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(52), int8], Tensor[(280), float64]) */;
  %1114 = %1110.0;
  %1115 = @func_12278() /* ty=Tensor[(4, 3, 5), float64] */;
  %1116 = %1113.0;
  (%1114, %1115, %1116, meta[relay.Constant][45] /* ty=Tensor[(280), float64] */)
}

def @func_5682() -> (Tensor[(384), float64],) {
  %1117 = @func_2803() /* ty=Tensor[(384), float64] */;
  (%1117,)
}

def @func_14990(%var_14989: Tensor[(315), float32]) -> (Tensor[(52), int8], Tensor[(315), float32], Tensor[(5, 9, 7), float64]) {
  %1124 = fn (%var_14966: Tensor[(315), float32]) -> (Tensor[(52), int8], Tensor[(315), float32], Tensor[(5, 9, 7), float64]) {
    %1118 = cast(%var_14966, dtype="float32") /* ty=Tensor[(315), float32] */;
    %1119 = reshape(%1118, newshape=[5, 9, 7]) /* ty=Tensor[(5, 9, 7), float32] */;
    %1120 = @func_6165(%1119) /* ty=Tensor[(5, 9, 7), float32] */;
    %1121 = cast(%1120, dtype="float64") /* ty=Tensor[(5, 9, 7), float64] */;
    %1122 = @func_5581() /* ty=Tensor[(52), int8] */;
    %1123 = sigmoid(%1121) /* ty=Tensor[(5, 9, 7), float64] */;
    (%1122, %var_14966, %1123)
  };
  %1124(%var_14989) /* ty=(Tensor[(52), int8], Tensor[(315), float32], Tensor[(5, 9, 7), float64]) */
}

def @func_9449() -> Tensor[(52), int8] {
  @func_3630() /* ty=Tensor[(52), int8] */
}

def @func_10967(%var_10923: Tensor[(6, 5, 13), float32]) -> (Tensor[(6, 5, 13), float32],) {
  %1125 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %1126 = cast(%1125, dtype="int32") /* ty=Tensor[(6, 1, 13), int32] */;
  %1127 = cast(%var_10923, dtype="int32") /* ty=Tensor[(6, 5, 13), int32] */;
  %1128 = left_shift(%1126, %1127) /* ty=Tensor[(6, 5, 13), int32] */;
  %1129 = cast(%1128, dtype="float32") /* ty=Tensor[(6, 5, 13), float32] */;
  %1130 = log10(%1129) /* ty=Tensor[(6, 5, 13), float32] */;
  (%1130,)
}

def @func_12509() -> (Tensor[(384), float64],) {
  @func_12507() /* ty=(Tensor[(384), float64],) */
}

def @func_8495(%var_8494: Tensor[(11, 15, 15), float64]) -> Tensor[(11, 15, 15), float64] {
  %1132 = fn (%var_8485: Tensor[(11, 15, 15), float64]) -> Tensor[(11, 15, 15), float64] {
    %1131 = cast(%var_8485, dtype="float64") /* ty=Tensor[(11, 15, 15), float64] */;
    asin(%1131) /* ty=Tensor[(11, 15, 15), float64] */
  };
  %1132(%var_8494) /* ty=Tensor[(11, 15, 15), float64] */
}

def @func_2454() -> Tensor[(384), float64] {
  %1133 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %1133.0
}

def @func_7749() -> (Tensor[(10, 4, 7), float32],) {
  %1138 = fn () -> (Tensor[(10, 4, 7), float32],) {
    %1134 = @func_6889() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
    %1135 = %1134.0;
    %1136 = cast(%1135, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
    %1137 = cosh(%1136) /* ty=Tensor[(10, 4, 7), float32] */;
    (%1137,)
  };
  %1138() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_6948() -> Tensor[(384), float64] {
  %1139 = @func_2900() /* ty=(Tensor[(384), float64],) */;
  %1139.0
}

def @func_14648() -> (Tensor[(1280), uint32],) {
  %1140 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %1141 = %1140.6;
  (%1141,)
}

def @func_5311() -> Tensor[(6, 1, 13), float32] {
  @func_5309() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_15528() -> (Tensor[(384), float64], Tensor[(10, 4, 7), float64], Tensor[(6, 1, 13), float32]) {
  %1142 = @func_6512() /* ty=(Tensor[(384), float64],) */;
  %1143 = @func_11977() /* ty=(Tensor[(10, 4, 7), float64],) */;
  %1144 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1145 = %1142.0;
  %1146 = %1143.0;
  %1147 = %1144.0;
  (%1145, %1146, %1147)
}

def @func_12742(%var_12728: Tensor[(280), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(52), int8], Tensor[(280), float64]) {
  %1148 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %1149 = cast(%var_12728, dtype="float64") /* ty=Tensor[(280), float64] */;
  %1150 = reshape(%1149, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float64] */;
  %1151 = @func_3556(%1150) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */;
  %1152 = @func_10343() /* ty=Tensor[(6, 1, 13), float32] */;
  %1153 = %1148.0;
  %1154 = %1151.0;
  (%1152, %1153, %1154, %var_12728)
}

def @func_8805() -> Tensor[(52), int8] {
  @func_8803() /* ty=Tensor[(52), int8] */
}

def @func_14726() -> (Tensor[(12, 2, 16), float64], Tensor[(384), float64], Tensor[(384), float64]) {
  %1155 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
  %1156 = @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */;
  %1157 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
  %1158 = %1155.0;
  %1159 = %1156.0;
  %1160 = %1157.1;
  (%1158, %1159, %1160)
}

def @func_15094() -> (Tensor[(384), float64],) {
  %1162 = fn () -> (Tensor[(384), float64],) {
    %1161 = @func_13827() /* ty=Tensor[(384), float64] */;
    (%1161,)
  };
  %1162() /* ty=(Tensor[(384), float64],) */
}

def @func_3816(%var_3811: Tensor[(13, 2, 9), int8], %var_3812: Tensor[(13, 2, 9), int8]) -> Tensor[(13, 2, 9), int8] {
  %1163 = cast(%var_3812, dtype="int8") /* ty=Tensor[(13, 2, 9), int8] */;
  %1164 = shape_of(%var_3811, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1165 = cast(%var_3811, dtype="int8") /* ty=Tensor[(13, 2, 9), int8] */;
  %1166 = dyn.reshape(%1163, %1164, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%1165, %1166) /* ty=Tensor[(13, 2, 9), int8] */
}

def @func_11871() -> (Tensor[(384), float64], Tensor[(6, 9, 13), uint32]) {
  %1167 = @func_10106() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1168 = %1167.0;
  %1169 = cast(%1168, dtype="uint32") /* ty=Tensor[(6, 1, 13), uint32] */;
  %1170 = cast(meta[relay.Constant][46] /* ty=Tensor[(6, 9, 13), float32] */, dtype="uint32") /* ty=Tensor[(6, 9, 13), uint32] */;
  %1171 = @func_2454() /* ty=Tensor[(384), float64] */;
  %1172 = multiply(%1169, %1170) /* ty=Tensor[(6, 9, 13), uint32] */;
  (%1171, %1172)
}

def @func_4559() -> Tensor[(6, 1, 13), float32] {
  %1173 = @func_3305() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %1173.1
}

def @func_3631() -> Tensor[(52), int8] {
  %1175 = fn () -> Tensor[(52), int8] {
    %1174 = @func_3255() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
    %1174.0
  };
  %1175() /* ty=Tensor[(52), int8] */
}

def @func_8271() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float64]) {
  %1179 = fn () -> (Tensor[(52), int8], Tensor[(6, 1, 13), float64]) {
    %1176 = @func_7265() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float64]) */;
    %1177 = @func_4315() /* ty=Tensor[(52), int8] */;
    %1178 = %1176.1;
    (%1177, %1178)
  };
  %1179() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float64]) */
}

def @func_9451() -> Tensor[(52), int8] {
  @func_9449() /* ty=Tensor[(52), int8] */
}

def @func_7517() -> (Tensor[(384), float64],) {
  @func_7515() /* ty=(Tensor[(384), float64],) */
}

def @func_13733(%var_13729: Tensor[(13, 14, 10), uint16], %var_13730: Tensor[(13, 14, 10), uint16], %var_13731: Tensor[(360), float32], %var_13732: Tensor[(26, 2), int8]) -> (Tensor[(13, 14, 10), uint16], Tensor[(13, 14, 10), float32], Tensor[(10, 4, 7), bool], Tensor[(360), float32], Tensor[(26, 2), int8], Tensor[(384), float64]) {
  @func_13727(%var_13729, %var_13730, %var_13731, %var_13732) /* ty=(Tensor[(13, 14, 10), uint16], Tensor[(13, 14, 10), float32], Tensor[(10, 4, 7), bool], Tensor[(360), float32], Tensor[(26, 2), int8], Tensor[(384), float64]) */
}

def @func_16451() -> (Tensor[(480), uint32], Tensor[(11, 15, 15), float64], Tensor[(2475), float64], Tensor[(52), int8]) {
  %1187 = fn () -> (Tensor[(480), uint32], Tensor[(11, 15, 15), float64], Tensor[(2475), float64], Tensor[(52), int8]) {
    %1180 = @func_15604() /* ty=(Tensor[(480), uint32], Tensor[(384), float64]) */;
    %1181 = cast(meta[relay.Constant][47] /* ty=Tensor[(2475), float64] */, dtype="float64") /* ty=Tensor[(2475), float64] */;
    %1182 = reshape(%1181, newshape=[11, 15, 15]) /* ty=Tensor[(11, 15, 15), float64] */;
    %1183 = @func_12472() /* ty=(Tensor[(52), int8],) */;
    %1184 = %1180.0;
    %1185 = @func_8493(%1182) /* ty=Tensor[(11, 15, 15), float64] */;
    %1186 = %1183.0;
    (%1184, %1185, meta[relay.Constant][47] /* ty=Tensor[(2475), float64] */, %1186)
  };
  %1187() /* ty=(Tensor[(480), uint32], Tensor[(11, 15, 15), float64], Tensor[(2475), float64], Tensor[(52), int8]) */
}

def @func_10044() -> (Tensor[(384), float64],) {
  @func_10042() /* ty=(Tensor[(384), float64],) */
}

def @func_14035() -> (Tensor[(15, 7, 1), float64],) {
  %1190 = fn () -> (Tensor[(15, 7, 1), float64],) {
    %1188 = @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */;
    %1189 = %1188.0;
    (%1189,)
  };
  %1190() /* ty=(Tensor[(15, 7, 1), float64],) */
}

def @func_14330() -> (Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) {
  @func_14328() /* ty=(Tensor[(384), float64], Tensor[(12, 2, 16), float64], Tensor[(384), float64]) */
}

def @func_4316() -> Tensor[(52), int8] {
  %1192 = fn () -> Tensor[(52), int8] {
    %1191 = @func_2958() /* ty=(Tensor[(52), int8],) */;
    %1191.0
  };
  %1192() /* ty=Tensor[(52), int8] */
}

def @func_2780() -> (Tensor[(52), int8],) {
  %1193 = @func_2405() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64], Tensor[(52), int8]) */;
  %1194 = %1193.2;
  (%1194,)
}

def @func_3170(%var_3168: Tensor[(4, 3, 5), float64], %var_3169: Tensor[(4, 3, 5), float64]) -> Tensor[(4, 3, 5), float64] {
  %1199 = fn (%var_3161: Tensor[(4, 3, 5), float64], %var_3162: Tensor[(4, 3, 5), float64]) -> Tensor[(4, 3, 5), float64] {
    %1195 = cast(%var_3162, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %1196 = shape_of(%var_3161, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1197 = cast(%var_3161, dtype="float64") /* ty=Tensor[(4, 3, 5), float64] */;
    %1198 = dyn.reshape(%1195, %1196, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%1197, %1198) /* ty=Tensor[(4, 3, 5), float64] */
  };
  %1199(%var_3168, %var_3169) /* ty=Tensor[(4, 3, 5), float64] */
}

def @func_9550() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(384), bool]) {
  %1200 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %1201 = @func_8082() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32], Tensor[(105), float32], Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %1202 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %1203 = @func_5468() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1204 = %1201.3;
  %1205 = cast(%1204, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1206 = reshape(%1205, newshape=[384]) /* ty=Tensor[(384), float64] */;
  %1207 = @func_3134(%1206) /* ty=(Tensor[(384), bool], Tensor[(384), float64]) */;
  %1208 = %1200.1;
  %1209 = %1202.1;
  %1210 = %1203.0;
  %1211 = @func_6840() /* ty=Tensor[(384), float64] */;
  %1212 = %1207.0;
  (%1208, %1204, %1209, %1210, %1211, %1212)
}

def @func_2872(%var_2871: Tensor[(13, 4), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) {
  %1223 = fn (%var_2851: Tensor[(13, 4), int8]) -> (Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) {
    %1213 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %1214 = cast(%var_2851, dtype="int8") /* ty=Tensor[(13, 4), int8] */;
    %1215 = reshape(%1214, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
    %1216 = @func_460(%1215) /* ty=(Tensor[(13, 2, 2), int8],) */;
    %1217 = %1216.0;
    %1218 = cast(%1217, dtype="int8") /* ty=Tensor[(13, 2, 2), int8] */;
    %1219 = reshape(%1218, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
    %1220 = @func_460(%1219) /* ty=(Tensor[(13, 2, 2), int8],) */;
    %1221 = %1213.0;
    %1222 = %1220.0;
    (%1221, %1217, %var_2851, %1222)
  };
  %1223(%var_2871) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(13, 2, 2), int8], Tensor[(13, 4), int8], Tensor[(13, 2, 2), int8]) */
}

def @func_3926(%var_3875: Tensor[(1, 1232), float64]) -> (Tensor[(52), int8], Tensor[(8, 14, 11), float64], Tensor[(1, 1232), float64], Tensor[(10, 4, 7), float32], Tensor[(52), int8]) {
  %1224 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %1225 = cast(%var_3875, dtype="float64") /* ty=Tensor[(1, 1232), float64] */;
  %1226 = reshape(%1225, newshape=[8, 14, 11]) /* ty=Tensor[(8, 14, 11), float64] */;
  %1227 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1228 = @func_2790() /* ty=(Tensor[(52), int8],) */;
  %1229 = %1224.0;
  %1230 = @func_2650(%1226) /* ty=Tensor[(8, 14, 11), float64] */;
  %1231 = %1227.1;
  %1232 = %1228.0;
  (%1229, %1230, %var_3875, %1231, %1232)
}

def @func_11548() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %1237 = fn () -> (Tensor[(384), float64], Tensor[(52), int8]) {
    %1233 = @func_4830() /* ty=(Tensor[(384), float64],) */;
    %1234 = @func_4997() /* ty=(Tensor[(52), int8],) */;
    %1235 = %1233.0;
    %1236 = %1234.0;
    (%1235, %1236)
  };
  %1237() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */
}

def @func_1311(%var_1279: Tensor[(1, 10, 8), uint32], %var_1280: Tensor[(16, 10, 8), uint32], %var_1290: Tensor[(6, 10, 8), uint32]) -> (Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) {
  %1238 = cast(%var_1279, dtype="bool") /* ty=Tensor[(1, 10, 8), bool] */;
  %1239 = cast(%var_1280, dtype="bool") /* ty=Tensor[(16, 10, 8), bool] */;
  %1240 = cast(%var_1279, dtype="float64") /* ty=Tensor[(1, 10, 8), float64] */;
  %1241 = cast(%var_1290, dtype="float64") /* ty=Tensor[(6, 10, 8), float64] */;
  %1242 = greater(%1238, %1239) /* ty=Tensor[(16, 10, 8), bool] */;
  %1243 = subtract(%1240, %1241) /* ty=Tensor[(6, 10, 8), float64] */;
  (%1242, %1243)
}

def @func_11979() -> (Tensor[(10, 4, 7), float64],) {
  @func_11977() /* ty=(Tensor[(10, 4, 7), float64],) */
}

def @func_13472() -> (Tensor[(52), int8],) {
  %1246 = fn () -> (Tensor[(52), int8],) {
    %1244 = @func_12066() /* ty=(Tensor[(52), int8], Tensor[(480), uint32]) */;
    %1245 = %1244.0;
    (%1245,)
  };
  %1246() /* ty=(Tensor[(52), int8],) */
}

def @func_16821() -> Tensor[(384), float64] {
  %1247 = @func_15677() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1247.1
}

def @func_12473() -> (Tensor[(52), int8],) {
  %1250 = fn () -> (Tensor[(52), int8],) {
    %1248 = @func_9940() /* ty=(Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64]) */;
    %1249 = %1248.1;
    (%1249,)
  };
  %1250() /* ty=(Tensor[(52), int8],) */
}

def @func_8310() -> (Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
  @func_8308() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */
}

def @func_12814() -> (Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), uint8]) {
  @func_12812() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), uint8]) */
}

def @func_5387() -> (Tensor[(6, 1, 13), float32],) {
  @func_5385() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_1930(%var_1928: Tensor[(52), int8]) -> (Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  @func_1927(%var_1928) /* ty=(Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) */
}

def @func_12566() -> (Tensor[(52), int8], Tensor[(52), int8]) {
  %1251 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
  %1252 = @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */;
  %1253 = %1251.0;
  %1254 = %1252.1;
  (%1253, %1254)
}

def @func_14692() -> Tensor[(6, 1, 13), float32] {
  @func_14690() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_2959() -> (Tensor[(52), int8],) {
  %1257 = fn () -> (Tensor[(52), int8],) {
    %1255 = @func_2780() /* ty=(Tensor[(52), int8],) */;
    %1256 = %1255.0;
    (%1256,)
  };
  %1257() /* ty=(Tensor[(52), int8],) */
}

def @func_14262(%var_14260: Tensor[(1, 280), float64]) -> (Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(1, 280), float64]) {
  @func_14259(%var_14260) /* ty=(Tensor[(384), float64], Tensor[(13, 2, 2), int8], Tensor[(1, 280), float64]) */
}

def @func_9278() -> (Tensor[(10, 4, 7), float32],) {
  @func_9276() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_10345() -> Tensor[(6, 1, 13), float32] {
  @func_10343() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_6079(%var_6071: float64) -> (Tensor[(52), int8], Tensor[(15, 3, 3), float64], float64) {
  %1258 = @func_4997() /* ty=(Tensor[(52), int8],) */;
  %1259 = cast(%var_6071, dtype="float64") /* ty=float64 */;
  %1260 = reshape(%1259, newshape=[]) /* ty=float64 */;
  %1261 = @func_6054(%1260) /* ty=(Tensor[(15, 3, 3), float64],) */;
  %1262 = %1258.0;
  %1263 = %1261.0;
  (%1262, %1263, %var_6071)
}

def @func_7811() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %1267 = fn () -> (Tensor[(384), float64], Tensor[(52), int8]) {
    %1264 = @func_6315() /* ty=(Tensor[(384), float64], Tensor[(384), float64]) */;
    %1265 = %1264.1;
    %1266 = @func_5581() /* ty=Tensor[(52), int8] */;
    (%1265, %1266)
  };
  %1267() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */
}

def @func_14650() -> (Tensor[(1280), uint32],) {
  @func_14648() /* ty=(Tensor[(1280), uint32],) */
}

def @func_14501() -> (Tensor[(384), float64], Tensor[(10, 4, 7), float32], Tensor[(672), int32]) {
  %1274 = fn () -> (Tensor[(384), float64], Tensor[(10, 4, 7), float32], Tensor[(672), int32]) {
    %1268 = @func_14214() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */;
    %1269 = @func_11158() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %1270 = @func_10652() /* ty=(Tensor[(672), int32], Tensor[(384), float64]) */;
    %1271 = %1268.0;
    %1272 = %1269.0;
    %1273 = %1270.0;
    (%1271, %1272, %1273)
  };
  %1274() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32], Tensor[(672), int32]) */
}

def @func_2696() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) {
  %1275 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %1276 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
  %1277 = %1276.0;
  %1278 = @func_2307() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32]) */;
  %1279 = %1278.1;
  %1280 = cast(%1279, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %1281 = shape_of(%1277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1282 = cast(%1277, dtype="bool") /* ty=Tensor[(6, 1, 13), bool] */;
  %1283 = dyn.reshape(%1280, %1281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1284 = %1275.0;
  %1285 = cast(%1284, dtype="float64") /* ty=Tensor[(384), float64] */;
  %1286 = reshape(%1285, newshape=[4, 6, 16]) /* ty=Tensor[(4, 6, 16), float64] */;
  %1287 = @func_1145(%1286) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) */;
  %1288 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  %1289 = logical_or(%1282, %1283) /* ty=Tensor[(6, ?, 13), bool] */;
  %1290 = %1287.1;
  (%1284, %1288, %1289, %1290)
}

def @func_9854() -> (Tensor[(6, 1, 13), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32], Tensor[(10, 4, 7), bool], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(480), uint32], Tensor[(12, 3, 5), float64], Tensor[(52), int8], Tensor[(384), int32], Tensor[(10, 4, 7), float32]) {
  @func_9852() /* ty=(Tensor[(6, 1, 13), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32], Tensor[(10, 4, 7), bool], Tensor[(10, 4, 7), float32], Tensor[(52), int8], Tensor[(52, 1), int8], Tensor[(480), uint32], Tensor[(12, 3, 5), float64], Tensor[(52), int8], Tensor[(384), int32], Tensor[(10, 4, 7), float32]) */
}

def @func_11073() -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64], Tensor[(10, 4, 7), float32]) {
  %1298 = fn () -> (Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64], Tensor[(10, 4, 7), float32]) {
    %1291 = cast(meta[relay.Constant][48] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
    %1292 = reshape(%1291, newshape=[140, 2]) /* ty=Tensor[(140, 2), float64] */;
    %1293 = @func_7151(%1292) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8], Tensor[(140, 2), float64]) */;
    %1294 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
    %1295 = @func_2619() /* ty=Tensor[(384), float64] */;
    %1296 = %1293.0;
    %1297 = %1294.1;
    (%1295, %1296, meta[relay.Constant][48] /* ty=Tensor[(280), float64] */, %1297)
  };
  %1298() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(280), float64], Tensor[(10, 4, 7), float32]) */
}

def @func_3558(%var_3557: Tensor[(10, 4, 7), float64]) -> (Tensor[(52), int8], Tensor[(10, 4, 7), bool]) {
  %1312 = fn (%var_3545: Tensor[(10, 4, 7), float64]) -> (Tensor[(52), int8], Tensor[(10, 4, 7), bool]) {
    %1299 = @func_2780() /* ty=(Tensor[(52), int8],) */;
    %1300 = @func_2438() /* ty=(Tensor[(10, 4, 7), float32], Tensor[(52), int8]) */;
    %1301 = %1300.0;
    %1302 = cast(%1301, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
    %1303 = cos(%1302) /* ty=Tensor[(10, 4, 7), float32] */;
    %1304 = cast(%1303, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
    %1305 = atan(%1304) /* ty=Tensor[(10, 4, 7), float64] */;
    %1306 = cast(%var_3545, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
    %1307 = shape_of(%1305, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1308 = cast(%1305, dtype="bool") /* ty=Tensor[(10, 4, 7), bool] */;
    %1309 = dyn.reshape(%1306, %1307, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1310 = %1299.0;
    %1311 = greater(%1308, %1309) /* ty=Tensor[(10, 4, 7), bool] */;
    (%1310, %1311)
  };
  %1312(%var_3557) /* ty=(Tensor[(52), int8], Tensor[(10, 4, 7), bool]) */
}

def @func_4998() -> (Tensor[(52), int8],) {
  %1315 = fn () -> (Tensor[(52), int8],) {
    %1313 = @func_4719() /* ty=(Tensor[(52), int8],) */;
    %1314 = %1313.0;
    (%1314,)
  };
  %1315() /* ty=(Tensor[(52), int8],) */
}

def @func_6950() -> Tensor[(384), float64] {
  @func_6948() /* ty=Tensor[(384), float64] */
}

def @func_9075() -> (Tensor[(384), float64],) {
  %1317 = fn () -> (Tensor[(384), float64],) {
    %1316 = @func_7375() /* ty=Tensor[(384), float64] */;
    (%1316,)
  };
  %1317() /* ty=(Tensor[(384), float64],) */
}

def @func_2652(%var_2651: Tensor[(8, 14, 11), float64]) -> Tensor[(8, 14, 11), float64] {
  %1319 = fn (%var_2638: Tensor[(8, 14, 11), float64]) -> Tensor[(8, 14, 11), float64] {
    %1318 = cast(%var_2638, dtype="float64") /* ty=Tensor[(8, 14, 11), float64] */;
    rsqrt(%1318) /* ty=Tensor[(8, 14, 11), float64] */
  };
  %1319(%var_2651) /* ty=Tensor[(8, 14, 11), float64] */
}

def @func_5582() -> Tensor[(52), int8] {
  %1321 = fn () -> Tensor[(52), int8] {
    %1320 = @func_4719() /* ty=(Tensor[(52), int8],) */;
    %1320.0
  };
  %1321() /* ty=Tensor[(52), int8] */
}

def @func_16344() -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) {
  %1327 = fn () -> (Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) {
    %1322 = @func_7426() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */;
    %1323 = @func_13756() /* ty=(Tensor[(384), int32], Tensor[(384), float64]) */;
    %1324 = %1322.0;
    %1325 = @func_14138() /* ty=Tensor[(384), float64] */;
    %1326 = %1323.1;
    (%1324, %1325, %1326)
  };
  %1327() /* ty=(Tensor[(52), int8], Tensor[(384), float64], Tensor[(384), float64]) */
}

def @func_12587() -> (Tensor[(384), float64],) {
  %1328 = @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %1329 = %1328.1;
  (%1329,)
}

def @func_15979() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  %1333 = fn () -> (Tensor[(52), int8], Tensor[(384), float64]) {
    %1330 = @func_2790() /* ty=(Tensor[(52), int8],) */;
    %1331 = %1330.0;
    %1332 = @func_2454() /* ty=Tensor[(384), float64] */;
    (%1331, %1332)
  };
  %1333() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */
}

def @func_11825() -> (Tensor[(6, ?, 13), bool], Tensor[(384), float64]) {
  @func_11823() /* ty=(Tensor[(6, ?, 13), bool], Tensor[(384), float64]) */
}

def @func_14418(%var_14417: Tensor[(12, 3, 5), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float32]) {
  %1343 = fn (%var_14408: Tensor[(12, 3, 5), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float32]) {
    %1334 = @func_12250() /* ty=(Tensor[(15, 7, 1), float64], Tensor[(6, 1, 13), float32]) */;
    %1335 = @func_8483() /* ty=(Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) */;
    %1336 = %1335.0;
    %1337 = cast(%var_14408, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
    %1338 = shape_of(%1336, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1339 = cast(%1336, dtype="float32") /* ty=Tensor[(12, 3, 5), float32] */;
    %1340 = dyn.reshape(%1337, %1338, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1341 = %1334.1;
    %1342 = minimum(%1339, %1340) /* ty=Tensor[(12, 3, 5), float32] */;
    (%1341, %1342)
  };
  %1343(%var_14417) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(12, 3, 5), float32]) */
}

def @func_5552() -> Tensor[(480), uint32] {
  @func_5550() /* ty=Tensor[(480), uint32] */
}

def @func_13875(%var_13869: Tensor[(60), float64], %var_13871: Tensor[(105), float32]) -> (Tensor[(384), float64], Tensor[(14, 1232), float32], Tensor[(1232), float64], Tensor[(60), float64], Tensor[(17248), float64], Tensor[(105), float32]) {
  %1344 = cast(meta[relay.Constant][49] /* ty=Tensor[(1232), float64] */, dtype="float64") /* ty=Tensor[(1232), float64] */;
  %1345 = cast(%var_13869, dtype="float64") /* ty=Tensor[(60), float64] */;
  %1346 = cast(meta[relay.Constant][50] /* ty=Tensor[(17248), float64] */, dtype="float64") /* ty=Tensor[(17248), float64] */;
  %1347 = cast(%var_13871, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1348 = reshape(%1344, newshape=[1, 1232]) /* ty=Tensor[(1, 1232), float64] */;
  %1349 = reshape(%1345, newshape=[60]) /* ty=Tensor[(60), float64] */;
  %1350 = reshape(%1346, newshape=[14, 1232]) /* ty=Tensor[(14, 1232), float64] */;
  %1351 = reshape(%1347, newshape=[1, 105]) /* ty=Tensor[(1, 105), float32] */;
  %1352 = @func_4303(%1348, %1349, %1350, %1351) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(8, 14, 11), float64], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(4, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(12, 3, 5), float64], Tensor[(14, 1232), float32], Tensor[(15, 7, 1), float32], Tensor[(1, 105), float32]) */;
  %1353 = @func_6399() /* ty=Tensor[(384), float64] */;
  %1354 = %1352.7;
  (%1353, %1354, meta[relay.Constant][49] /* ty=Tensor[(1232), float64] */, %var_13869, meta[relay.Constant][50] /* ty=Tensor[(17248), float64] */, %var_13871)
}

def @func_10226() -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
  %1359 = fn () -> (Tensor[(6, 1, 13), float32], Tensor[(52), int8]) {
    %1355 = @func_7173() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %1356 = @func_4719() /* ty=(Tensor[(52), int8],) */;
    %1357 = %1355.0;
    %1358 = %1356.0;
    (%1357, %1358)
  };
  %1359() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(52), int8]) */
}

def @func_15372() -> (Tensor[(384), float64],) {
  %1362 = fn () -> (Tensor[(384), float64],) {
    %1360 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
    %1361 = %1360.0;
    (%1361,)
  };
  %1362() /* ty=(Tensor[(384), float64],) */
}

def @func_1147(%var_1146: Tensor[(4, 6, 16), float64]) -> (Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) {
  %1375 = fn (%var_1127: Tensor[(4, 6, 16), float64]) -> (Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) {
    %1363 = cast(%var_1127, dtype="float64") /* ty=Tensor[(4, 6, 16), float64] */;
    %1364 = cast(meta[relay.Constant][51] /* ty=Tensor[(280), float32] */, dtype="float32") /* ty=Tensor[(280), float32] */;
    %1365 = reshape(%1364, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
    %1366 = @func_933(%1365) /* ty=(Tensor[(10, 4, 7), float32],) */;
    %1367 = %1366.0;
    %1368 = cast(%1367, dtype="float32") /* ty=Tensor[(10, 4, 7), float32] */;
    %1369 = reshape(%1368, newshape=[10, 4, 7]) /* ty=Tensor[(10, 4, 7), float32] */;
    %1370 = @func_933(%1369) /* ty=(Tensor[(10, 4, 7), float32],) */;
    %1371 = cast(%1367, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
    %1372 = log(%1363) /* ty=Tensor[(4, 6, 16), float64] */;
    %1373 = %1370.0;
    %1374 = tan(%1371) /* ty=Tensor[(10, 4, 7), float64] */;
    (%1372, meta[relay.Constant][51] /* ty=Tensor[(280), float32] */, %1373, %1374)
  };
  %1375(%var_1146) /* ty=(Tensor[(4, 6, 16), float64], Tensor[(280), float32], Tensor[(10, 4, 7), float32], Tensor[(10, 4, 7), float64]) */
}

def @func_2334(%var_2332: Tensor[(384), float64]) -> (Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) {
  @func_2331(%var_2332) /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */
}

def @func_3307() -> (Tensor[(52), int8], Tensor[(6, 1, 13), float32]) {
  @func_3305() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */
}

def @func_5226() -> (Tensor[(6, 1, 13), float32],) {
  @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_1927(%var_1922: Tensor[(52), int8]) -> (Tensor[(12, 3, 5), float64], Tensor[(13, 2, 2), int8], Tensor[(52), int8]) {
  %1376 = cast(meta[relay.Constant][52] /* ty=Tensor[(12, 3, 5), float64] */, dtype="float64") /* ty=Tensor[(12, 3, 5), float64] */;
  %1377 = cast(%var_1922, dtype="int8") /* ty=Tensor[(52), int8] */;
  %1378 = reshape(%1377, newshape=[13, 2, 2]) /* ty=Tensor[(13, 2, 2), int8] */;
  %1379 = @func_460(%1378) /* ty=(Tensor[(13, 2, 2), int8],) */;
  %1380 = sigmoid(%1376) /* ty=Tensor[(12, 3, 5), float64] */;
  %1381 = %1379.0;
  (%1380, %1381, %var_1922)
}

def @func_13142() -> Tensor[(384), float64] {
  %1383 = fn () -> Tensor[(384), float64] {
    %1382 = @func_12152() /* ty=(Tensor[(384), float64],) */;
    %1382.0
  };
  %1383() /* ty=Tensor[(384), float64] */
}

def @func_14139() -> Tensor[(384), float64] {
  %1384 = fn () -> Tensor[(384), float64] {
    @func_7375() /* ty=Tensor[(384), float64] */
  };
  %1384() /* ty=Tensor[(384), float64] */
}

def @func_14461() -> (Tensor[(6, 1, 13), float32],) {
  %1385 = @func_9897() /* ty=Tensor[(6, 1, 13), float32] */;
  (%1385,)
}

def @func_5385() -> (Tensor[(6, 1, 13), float32],) {
  %1386 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  (%1386,)
}

def @func_7060() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  @func_7058() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */
}

def @func_5191(%var_5176: float64) -> Tensor[(5, 2, 10), float64] {
  %1387 = cast(%var_5176, dtype="float64") /* ty=float64 */;
  %1388 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 2, 10), float64] */, dtype="float64") /* ty=Tensor[(5, 2, 10), float64] */;
  subtract(%1387, %1388) /* ty=Tensor[(5, 2, 10), float64] */
}

def @func_12625(%var_12623: Tensor[(10, 4, 7), float32]) -> (Tensor[(10, 4, 7), uint64], Tensor[(10, 4, 7), float32]) {
  @func_12622(%var_12623) /* ty=(Tensor[(10, 4, 7), uint64], Tensor[(10, 4, 7), float32]) */
}

def @func_7058() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64]) {
  %1389 = @func_2696() /* ty=(Tensor[(384), float64], Tensor[(6, 1, 13), float32], Tensor[(6, ?, 13), bool], Tensor[(280), float32]) */;
  %1390 = @func_4830() /* ty=(Tensor[(384), float64],) */;
  %1391 = %1389.1;
  %1392 = %1390.0;
  (%1391, %1392)
}

def @func_463(%var_461: Tensor[(13, 2, 2), int8]) -> (Tensor[(13, 2, 2), int8],) {
  @func_460(%var_461) /* ty=(Tensor[(13, 2, 2), int8],) */
}

def @func_9276() -> (Tensor[(10, 4, 7), float32],) {
  %1393 = @func_2262() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(10, 4, 7), float32], Tensor[(384), float64]) */;
  %1394 = %1393.1;
  (%1394,)
}

def @func_13785() -> Tensor[(384), float64] {
  %1395 = fn () -> Tensor[(384), float64] {
    @func_13141() /* ty=Tensor[(384), float64] */
  };
  %1395() /* ty=Tensor[(384), float64] */
}

def @func_6364() -> (Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) {
  @func_6362() /* ty=(Tensor[(12, 2, 16), float64], Tensor[(52), int8], Tensor[(10, 4, 7), float32]) */
}

def @func_8484() -> (Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) {
  %1407 = fn () -> (Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) {
    %1396 = @func_6643() /* ty=(Tensor[(384), float64], Tensor[(12, 3, 5), float64]) */;
    %1397 = @func_5224() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %1398 = %1397.0;
    %1399 = cast(%1398, dtype="float32") /* ty=Tensor[(6, 1, 13), float32] */;
    %1400 = atanh(%1399) /* ty=Tensor[(6, 1, 13), float32] */;
    %1401 = cast(%1398, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
    %1402 = shape_of(%1400, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1403 = cast(%1400, dtype="uint8") /* ty=Tensor[(6, 1, 13), uint8] */;
    %1404 = dyn.reshape(%1401, %1402, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1405 = %1396.1;
    %1406 = subtract(%1403, %1404) /* ty=Tensor[(6, ?, 13), uint8] */;
    (%1405, %1406)
  };
  %1407() /* ty=(Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) */
}

def @func_11570() -> (Tensor[(6, 1, 13), float32],) {
  @func_11568() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_16823() -> Tensor[(384), float64] {
  @func_16821() /* ty=Tensor[(384), float64] */
}

def @func_16208() -> (Tensor[(384), float64],) {
  %1408 = @func_5626() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64]) */;
  %1409 = %1408.1;
  (%1409,)
}

def @func_12278() -> Tensor[(4, 3, 5), float64] {
  %1410 = @func_4940() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(4, 3, 5), float64], Tensor[(60), float64], Tensor[(12, 2, 16), float64], Tensor[(384), int32]) */;
  %1410.1
}

def @func_7711() -> (Tensor[(52), int8], Tensor[(384), float64]) {
  @func_7709() /* ty=(Tensor[(52), int8], Tensor[(384), float64]) */
}

def @func_16164() -> (Tensor[(10, 4, 7), float32],) {
  %1413 = fn () -> (Tensor[(10, 4, 7), float32],) {
    %1411 = @func_9886() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %1412 = %1411.0;
    (%1412,)
  };
  %1413() /* ty=(Tensor[(10, 4, 7), float32],) */
}

def @func_9940() -> (Tensor[(384), float64], Tensor[(52), int8], Tensor[(384), float64]) {
  %1414 = @func_2780() /* ty=(Tensor[(52), int8],) */;
  %1415 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
  %1416 = @func_2803() /* ty=Tensor[(384), float64] */;
  %1417 = %1414.0;
  %1418 = %1415.0;
  (%1416, %1417, %1418)
}

def @func_2469() -> Tensor[(6, 1, 13), float32] {
  @func_2467() /* ty=Tensor[(6, 1, 13), float32] */
}

def @func_5194(%var_5192: float64) -> Tensor[(5, 2, 10), float64] {
  @func_5191(%var_5192) /* ty=Tensor[(5, 2, 10), float64] */
}

def @func_5224() -> (Tensor[(6, 1, 13), float32],) {
  %1419 = @func_3305() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float32]) */;
  %1420 = %1419.1;
  (%1420,)
}

def @func_8348() -> Tensor[(480), uint32] {
  %1422 = fn () -> Tensor[(480), uint32] {
    %1421 = @func_4494() /* ty=(Tensor[(384), float64], Tensor[(384), float64], Tensor[(4, 3, 5), float64], Tensor[(15, 4), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(52), int8]) */;
    %1421.7
  };
  %1422() /* ty=Tensor[(480), uint32] */
}

def @func_11873() -> (Tensor[(384), float64], Tensor[(6, 9, 13), uint32]) {
  @func_11871() /* ty=(Tensor[(384), float64], Tensor[(6, 9, 13), uint32]) */
}

def @func_6401() -> Tensor[(384), float64] {
  @func_6399() /* ty=Tensor[(384), float64] */
}

def @func_4000() -> (Tensor[(384), float64], Tensor[(13, 2, 9), bool]) {
  @func_3998() /* ty=(Tensor[(384), float64], Tensor[(13, 2, 9), bool]) */
}

def @func_3202() -> (Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) {
  @func_3200() /* ty=(Tensor[(384), float64], Tensor[(105), float32], Tensor[(6, 1, 13), float32], Tensor[(15, 7, 1), float64]) */
}

def @func_15326() -> (Tensor[(6, 1, 13), float32],) {
  %1425 = fn () -> (Tensor[(6, 1, 13), float32],) {
    %1423 = @func_2492() /* ty=(Tensor[(6, 1, 13), float32],) */;
    %1424 = %1423.0;
    (%1424,)
  };
  %1425() /* ty=(Tensor[(6, 1, 13), float32],) */
}

def @func_13006() -> (Tensor[(60), float64], Tensor[(6, 10, 13), bool]) {
  @func_13004() /* ty=(Tensor[(60), float64], Tensor[(6, 10, 13), bool]) */
}

def @func_10970(%var_10968: Tensor[(6, 5, 13), float32]) -> (Tensor[(6, 5, 13), float32],) {
  @func_10967(%var_10968) /* ty=(Tensor[(6, 5, 13), float32],) */
}

def @func_9758() -> (Tensor[(10, 4, 7), float32],) {
  %1426 = @func_4326() /* ty=Tensor[(10, 4, 7), float32] */;
  (%1426,)
}

def @func_10150() -> (Tensor[(480), uint32], Tensor[(384), float64]) {
  @func_10148() /* ty=(Tensor[(480), uint32], Tensor[(384), float64]) */
}

def @func_5677() -> Tensor[(52), int8] {
  @func_4070() /* ty=Tensor[(52), int8] */
}

def @func_5450() -> (Tensor[(384), float64],) {
  @func_5448() /* ty=(Tensor[(384), float64],) */
}

def @func_2492() -> (Tensor[(6, 1, 13), float32],) {
  %1427 = @func_2467() /* ty=Tensor[(6, 1, 13), float32] */;
  (%1427,)
}

def @func_15349(%var_15348: float64) -> (Tensor[(6, ?, 13), bool], Tensor[(15, 3, 3), float64], float64) {
  %1434 = fn (%var_15344: float64) -> (Tensor[(6, ?, 13), bool], Tensor[(15, 3, 3), float64], float64) {
    %1428 = @func_11823() /* ty=(Tensor[(6, ?, 13), bool], Tensor[(384), float64]) */;
    %1429 = cast(%var_15344, dtype="float64") /* ty=float64 */;
    %1430 = reshape(%1429, newshape=[]) /* ty=float64 */;
    %1431 = @func_6054(%1430) /* ty=(Tensor[(15, 3, 3), float64],) */;
    %1432 = %1428.0;
    %1433 = %1431.0;
    (%1432, %1433, %var_15344)
  };
  %1434(%var_15348) /* ty=(Tensor[(6, ?, 13), bool], Tensor[(15, 3, 3), float64], float64) */
}

def @func_13271() -> (Tensor[(384), float64], Tensor[(52), int8]) {
  %1439 = fn () -> (Tensor[(384), float64], Tensor[(52), int8]) {
    %1435 = @func_10042() /* ty=(Tensor[(384), float64],) */;
    %1436 = @func_2958() /* ty=(Tensor[(52), int8],) */;
    %1437 = %1435.0;
    %1438 = %1436.0;
    (%1437, %1438)
  };
  %1439() /* ty=(Tensor[(384), float64], Tensor[(52), int8]) */
}

def @func_8758() -> (Tensor[(10, 4, 7), float32], Tensor[(52), int8], float64, Tensor[(70, 6), float32], Tensor[(384), float64], Tensor[(6, 1, 13), float64], Tensor[(384), float64], Tensor[(16, 10, 8), bool], Tensor[(80), uint32], Tensor[(1280), uint32], Tensor[(480), uint32], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) {
  %1440 = @func_2944() /* ty=(Tensor[(384), float64], Tensor[(10, 4, 7), float32]) */;
  %1441 = @func_4384() /* ty=(Tensor[(52), int8],) */;
  %1442 = cast(meta[relay.Constant][54] /* ty=Tensor[(70, 6), float32] */, dtype="float32") /* ty=Tensor[(70, 6), float32] */;
  %1443 = reshape(%1442, newshape=[15, 7, 4]) /* ty=Tensor[(15, 7, 4), float32] */;
  %1444 = @func_6189(%1443) /* ty=(Tensor[(5, 2, 10), float64], float64, Tensor[(15, 7, 4), float32]) */;
  %1445 = @func_8270() /* ty=(Tensor[(52), int8], Tensor[(6, 1, 13), float64]) */;
  %1446 = @func_5847() /* ty=(Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(105), float32]) */;
  %1447 = cast(meta[relay.Constant][55] /* ty=Tensor[(80), uint32] */, dtype="uint32") /* ty=Tensor[(80), uint32] */;
  %1448 = cast(meta[relay.Constant][56] /* ty=Tensor[(1280), uint32] */, dtype="uint32") /* ty=Tensor[(1280), uint32] */;
  %1449 = cast(meta[relay.Constant][57] /* ty=Tensor[(480), uint32] */, dtype="uint32") /* ty=Tensor[(480), uint32] */;
  %1450 = reshape(%1447, newshape=[1, 10, 8]) /* ty=Tensor[(1, 10, 8), uint32] */;
  %1451 = reshape(%1448, newshape=[16, 10, 8]) /* ty=Tensor[(16, 10, 8), uint32] */;
  %1452 = reshape(%1449, newshape=[6, 10, 8]) /* ty=Tensor[(6, 10, 8), uint32] */;
  %1453 = @func_1311(%1450, %1451, %1452) /* ty=(Tensor[(16, 10, 8), bool], Tensor[(6, 10, 8), float64]) */;
  %1454 = cast(meta[relay.Constant][58] /* ty=Tensor[(105), float32] */, dtype="float32") /* ty=Tensor[(105), float32] */;
  %1455 = reshape(%1454, newshape=[15, 7, 1]) /* ty=Tensor[(15, 7, 1), float32] */;
  %1456 = %1440.1;
  %1457 = %1441.0;
  %1458 = %1444.1;
  %1459 = @func_2619() /* ty=Tensor[(384), float64] */;
  %1460 = %1445.1;
  %1461 = %1446.0;
  %1462 = %1453.0;
  %1463 = @func_1212(%1455) /* ty=Tensor[(15, 7, 1), float32] */;
  (%1456, %1457, %1458, meta[relay.Constant][54] /* ty=Tensor[(70, 6), float32] */, %1459, %1460, %1461, %1462, meta[relay.Constant][55] /* ty=Tensor[(80), uint32] */, meta[relay.Constant][56] /* ty=Tensor[(1280), uint32] */, meta[relay.Constant][57] /* ty=Tensor[(480), uint32] */, %1463, meta[relay.Constant][58] /* ty=Tensor[(105), float32] */)
}

def @func_12960(%var_12957: Tensor[(12, 2, 2), int8], %var_12958: Tensor[(12, 2, 2), int8], %var_12959: Tensor[(12, 2, 2), int8]) -> (Tensor[(12, 2, 2), int8], Tensor[(12, 2, 2), uint64], Tensor[(12, 2, 2), bool]) {
  @func_12955(%var_12957, %var_12958, %var_12959) /* ty=(Tensor[(12, 2, 2), int8], Tensor[(12, 2, 2), uint64], Tensor[(12, 2, 2), bool]) */
}

def @func_11924() -> (Tensor[(10, 4, 7), float64],) {
  %1468 = fn () -> (Tensor[(10, 4, 7), float64],) {
    %1464 = @func_11610() /* ty=(Tensor[(10, 4, 7), float32],) */;
    %1465 = %1464.0;
    %1466 = cast(%1465, dtype="float64") /* ty=Tensor[(10, 4, 7), float64] */;
    %1467 = log2(%1466) /* ty=Tensor[(10, 4, 7), float64] */;
    (%1467,)
  };
  %1468() /* ty=(Tensor[(10, 4, 7), float64],) */
}

def @func_9552() -> (Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(384), bool]) {
  @func_9550() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(15, 7, 1), float32], Tensor[(6, 1, 13), float32], Tensor[(384), float64], Tensor[(384), bool]) */
}

def @func_13004() -> (Tensor[(60), float64], Tensor[(6, 10, 13), bool]) {
  %1469 = @func_10542() /* ty=(Tensor[(6, 1, 13), float32], Tensor[(60), float64]) */;
  %1470 = @func_8483() /* ty=(Tensor[(12, 3, 5), float64], Tensor[(6, ?, 13), uint8]) */;
  %1471 = %1470.1;
  %1472 = cast(%1471, dtype="bool") /* ty=Tensor[(6, ?, 13), bool] */;
  %1473 = cast(meta[relay.Constant][59] /* ty=Tensor[(6, 10, 13), uint8] */, dtype="bool") /* ty=Tensor[(6, 10, 13), bool] */;
  %1474 = %1469.1;
  %1475 = less(%1472, %1473) /* ty=Tensor[(6, 10, 13), bool] */;
  (%1474, %1475)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen636/build/output.py", line 5344, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:43:17] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


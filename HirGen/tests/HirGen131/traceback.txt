==========mod==========
#[version = "0.0.5"]
def @func_5113() -> (Tensor[(7, 7, 1), float64],) {
  %0 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %1 = %0.0;
  (%1,)
}

def @func_3061(%var_3046: Tensor[(6, 15, 16), float64]) -> (Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) {
  %2 = cast(%var_3046, dtype="float64") /* ty=Tensor[(6, 15, 16), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %5 = reshape(%3, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %6 = reshape(%4, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %7 = sin(%2) /* ty=Tensor[(6, 15, 16), float64] */;
  %8 = @func_1677(%5, %6) /* ty=Tensor[(14, 9, ?), int32] */;
  (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(126), int32] */)
}

def @func_4856(%var_4849: Tensor[(12, 3, 10), int8]) -> Tensor[(12, 3, 10), bool] {
  %9 = cast(meta[relay.Constant][1] /* ty=Tensor[(12, 3, 10), int8] */, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %10 = shape_of(%var_4849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %11 = cast(%var_4849, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %12 = dyn.reshape(%9, %10, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%11, %12) /* ty=Tensor[(12, 3, 10), bool] */
}

def @func_5148() -> (Tensor[(7, 7, 1), float64],) {
  %13 = @func_4739() /* ty=Tensor[(7, 7, 1), float64] */;
  (%13,)
}

def @func_64(%var_44: Tensor[(10, 11, 10), bool], %var_45: Tensor[(10, 11, 10), bool]) -> (Tensor[(10, 11, 10), bool],) {
  %14 = cast(%var_45, dtype="bool") /* ty=Tensor[(10, 11, 10), bool] */;
  %15 = shape_of(%var_44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %16 = cast(%var_44, dtype="bool") /* ty=Tensor[(10, 11, 10), bool] */;
  %17 = dyn.reshape(%14, %15, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %18 = logical_and(%16, %17) /* ty=Tensor[(10, 11, 10), bool] */;
  (%18,)
}

def @func_3589() -> (Tensor[(7, 7, 1), float64],) {
  %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(7, 7, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %20 = sigmoid(%19) /* ty=Tensor[(7, 7, 1), float64] */;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %22 = sin(%21) /* ty=Tensor[(7, 7, 1), float64] */;
  (%22,)
}

def @func_1139(%var_1120: Tensor[(13, 10, 9), uint8], %var_1126: Tensor[(900), uint16]) -> (Tensor[(13, 10, 9), bool], Tensor[(10, 11, 10), bool], Tensor[(900), uint16], Tensor[(110), int32], Tensor[(1100), bool]) {
  %23 = cast(%var_1120, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
  %24 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(13, 10, 9), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 10, 9), uint8] */, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %27 = cast(%var_1126, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %28 = cast(meta[relay.Constant][4] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %29 = cast(meta[relay.Constant][5] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %30 = reshape(%27, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint16] */;
  %31 = reshape(%28, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %32 = reshape(%29, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
  %33 = @func_899(%30, %31, %32) /* ty=(Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) */;
  %34 = greater(%25, %26) /* ty=Tensor[(13, 10, 9), bool] */;
  %35 = %33.4;
  (%34, %35, %var_1126, meta[relay.Constant][4] /* ty=Tensor[(110), int32] */, meta[relay.Constant][5] /* ty=Tensor[(1100), bool] */)
}

def @func_1677(%var_1669: Tensor[(14, 9, 1), int32], %var_1670: Tensor[(14, 9, 1), int32]) -> Tensor[(14, 9, ?), int32] {
  %36 = cast(%var_1670, dtype="int32") /* ty=Tensor[(14, 9, 1), int32] */;
  %37 = shape_of(%var_1669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %38 = cast(%var_1669, dtype="int32") /* ty=Tensor[(14, 9, 1), int32] */;
  %39 = dyn.reshape(%36, %37, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%38, %39) /* ty=Tensor[(14, 9, ?), int32] */
}

def @func_3833() -> (Tensor[(7, 7, 1), float64],) {
  %40 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %41 = %40.0;
  (%41,)
}

def @func_3019(%var_2995: Tensor[(7, 1, 6), float32], %var_2996: Tensor[(7, 8, 6), float32]) -> (Tensor[(7, 8, 6), bool], Tensor[(7, 8, 6), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) {
  %42 = cast(%var_2995, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
  %43 = cast(%var_2996, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %44 = power(%42, %43) /* ty=Tensor[(7, 8, 6), float32] */;
  %45 = cast(%44, dtype="bool") /* ty=Tensor[(7, 8, 6), bool] */;
  %46 = cast(%var_2995, dtype="bool") /* ty=Tensor[(7, 1, 6), bool] */;
  %47 = cast(%44, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %48 = cast(meta[relay.Constant][6] /* ty=Tensor[(378), uint64] */, dtype="uint64") /* ty=Tensor[(378), uint64] */;
  %49 = cast(meta[relay.Constant][6] /* ty=Tensor[(378), uint64] */, dtype="uint64") /* ty=Tensor[(378), uint64] */;
  %50 = cast(meta[relay.Constant][6] /* ty=Tensor[(378), uint64] */, dtype="bool") /* ty=Tensor[(378), bool] */;
  %51 = reshape(%48, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
  %52 = reshape(%49, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
  %53 = reshape(%50, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), bool] */;
  %54 = @func_1272(%51, %52, %53) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) */;
  %55 = equal(%45, %46) /* ty=Tensor[(7, 8, 6), bool] */;
  %56 = erf(%47) /* ty=Tensor[(7, 8, 6), float64] */;
  %57 = %54.0;
  (%55, %56, %57, meta[relay.Constant][6] /* ty=Tensor[(378), uint64] */)
}

def @func_2735(%var_2679: Tensor[(8, 12, 14), int32], %var_2709: Tensor[(900), uint16]) -> (Tensor[(8, 12, 14), int32], Tensor[(8, 12, 14), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(2, 14, 10), float32], Tensor[(280), float64], Tensor[(900), uint16]) {
  %58 = cast(%var_2679, dtype="int32") /* ty=Tensor[(8, 12, 14), int32] */;
  %59 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(8, 12, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 12, 14), int32] */, dtype="int32") /* ty=Tensor[(8, 12, 14), int32] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %62 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 12, 14), int32] */, dtype="float64") /* ty=Tensor[(8, 12, 14), float64] */;
  %63 = cos(%62) /* ty=Tensor[(8, 12, 14), float64] */;
  %64 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 12, 14), int32] */, dtype="bool") /* ty=Tensor[(8, 12, 14), bool] */;
  %65 = shape_of(%63, dtype="int32") /* ty=Tensor[(3), int32] */;
  %66 = cast(%63, dtype="bool") /* ty=Tensor[(8, 12, 14), bool] */;
  %67 = dyn.reshape(%64, %65, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %68 = cast(meta[relay.Constant][8] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %69 = cast(meta[relay.Constant][9] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %70 = reshape(%68, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %71 = reshape(%69, newshape=[110, 10]) /* ty=Tensor[(110, 10), bool] */;
  %72 = @func_1230(%70, %71) /* ty=(Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) */;
  %73 = cast(meta[relay.Constant][10] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %74 = cast(meta[relay.Constant][10] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %75 = cast(%var_2709, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %76 = cast(meta[relay.Constant][9] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %77 = reshape(%73, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %78 = reshape(%74, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %79 = reshape(%75, newshape=[900]) /* ty=Tensor[(900), uint16] */;
  %80 = reshape(%76, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
  %81 = @func_2050(%77, %78, %79, %80) /* ty=(Tensor[(2, 14, 10), float32], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(11, 10), int32], Tensor[(1100), bool]) */;
  %82 = logical_xor(%60, %61) /* ty=Tensor[(8, 12, 14), int32] */;
  %83 = logical_or(%66, %67) /* ty=Tensor[(8, 12, 14), bool] */;
  %84 = %72.2;
  %85 = %81.0;
  (%82, %83, %84, meta[relay.Constant][8] /* ty=Tensor[(420), float64] */, meta[relay.Constant][9] /* ty=Tensor[(1100), bool] */, %85, meta[relay.Constant][10] /* ty=Tensor[(280), float64] */, %var_2709)
}

def @func_4239(%var_4232: Tensor[(9, 15, 15), int16], %var_4233: Tensor[(9, 15, 15), int16]) -> (Tensor[(9, 15, 15), bool],) {
  %86 = cast(%var_4233, dtype="bool") /* ty=Tensor[(9, 15, 15), bool] */;
  %87 = shape_of(%var_4232, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%var_4232, dtype="bool") /* ty=Tensor[(9, 15, 15), bool] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %90 = greater(%88, %89) /* ty=Tensor[(9, 15, 15), bool] */;
  (%90,)
}

def @func_5070() -> (Tensor[(7, 7, ?), float32],) {
  %91 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %92 = %91.0;
  %93 = cast(%92, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %94 = acos(%93) /* ty=Tensor[(7, 7, 1), float64] */;
  %95 = @func_4992() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) */;
  %96 = %95.0;
  %97 = cast(%96, dtype="float32") /* ty=Tensor[(7, 7, ?), float32] */;
  %98 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
  %99 = cast(%94, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %100 = dyn.reshape(%97, %98, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %101 = floor_divide(%99, %100) /* ty=Tensor[(7, 7, ?), float32] */;
  (%101,)
}

def @func_4418() -> Tensor[(1100), bool] {
  %102 = @func_4006() /* ty=(Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) */;
  %102.1
}

def @func_5646(%var_5591: Tensor[(2, 10, 7), float64]) -> (Tensor[(12, 8, 9), float32], Tensor[(208), float32], Tensor[(1456), float32], Tensor[(2, 10, 7), int64], Tensor[(110), int32], Tensor[(3150), int64], Tensor[(110), int32]) {
  %103 = cast(meta[relay.Constant][11] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %104 = cast(meta[relay.Constant][12] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %105 = reshape(%103, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), float32] */;
  %106 = reshape(%104, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float32] */;
  %107 = @func_3400(%105, %106) /* ty=(Tensor[(1, 13, 16), float32], Tensor[(7, 13, 16), float32], Tensor[(12, 8, 9), float32], Tensor[(858), float32], Tensor[(864), float64]) */;
  %108 = cast(%var_5591, dtype="float64") /* ty=Tensor[(2, 10, 7), float64] */;
  %109 = cos(%108) /* ty=Tensor[(2, 10, 7), float64] */;
  %110 = cast(%var_5591, dtype="int64") /* ty=Tensor[(2, 10, 7), int64] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="int64") /* ty=Tensor[(2, 10, 7), int64] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %114 = cast(meta[relay.Constant][13] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
  %115 = cast(meta[relay.Constant][13] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
  %116 = cast(meta[relay.Constant][14] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %117 = reshape(%114, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %118 = reshape(%115, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %119 = reshape(%116, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %120 = @func_4576(%117, %118, %119) /* ty=(Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %121 = %107.2;
  %122 = subtract(%112, %113) /* ty=Tensor[(2, 10, 7), int64] */;
  %123 = %120.3;
  (%121, meta[relay.Constant][11] /* ty=Tensor[(208), float32] */, meta[relay.Constant][12] /* ty=Tensor[(1456), float32] */, %122, %123, meta[relay.Constant][13] /* ty=Tensor[(3150), int64] */, meta[relay.Constant][14] /* ty=Tensor[(110), int32] */)
}

def @func_6046(%var_6021: Tensor[(96), float64], %var_6029: Tensor[(378), uint64]) -> (Tensor[(7, 7, 1), float64], Tensor[(3, 2, 16), float64], Tensor[(96), float64], Tensor[(8, 13, 10), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) {
  %124 = cast(%var_6021, dtype="float64") /* ty=Tensor[(96), float64] */;
  %125 = reshape(%124, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
  %126 = @func_4698(%125) /* ty=(Tensor[(3, 2, 16), float64],) */;
  %127 = @func_3876() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) */;
  %128 = %127.0;
  %129 = cast(%128, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
  %130 = cast(%var_6029, dtype="uint64") /* ty=Tensor[(378), uint64] */;
  %131 = cast(%var_6029, dtype="uint64") /* ty=Tensor[(378), uint64] */;
  %132 = cast(%var_6029, dtype="bool") /* ty=Tensor[(378), bool] */;
  %133 = reshape(%130, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
  %134 = reshape(%131, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
  %135 = reshape(%132, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), bool] */;
  %136 = @func_1272(%133, %134, %135) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) */;
  %137 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
  %138 = %126.0;
  %139 = sin(%129) /* ty=Tensor[(8, 13, 10), float64] */;
  %140 = %136.0;
  (%137, %138, %var_6021, %139, %140, %var_6029)
}

def @func_4112() -> (Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) {
  %141 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %142 = %141.0;
  %143 = cast(%142, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %144 = reshape(%143, newshape=[7, 7, 1]) /* ty=Tensor[(7, 7, 1), float64] */;
  %145 = cast(%142, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %146 = @func_3923(%144) /* ty=Tensor[(7, 7, ?), float64] */;
  %147 = tan(%145) /* ty=Tensor[(7, 7, 1), float32] */;
  (%146, %147)
}

def @func_899(%var_811: Tensor[(10, 6, 15), uint16], %var_820: Tensor[(110), int32], %var_866: Tensor[(1100), bool]) -> (Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) {
  %148 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 6, 1), uint16] */, dtype="uint16") /* ty=Tensor[(10, 6, 1), uint16] */;
  %149 = cast(%var_811, dtype="uint16") /* ty=Tensor[(10, 6, 15), uint16] */;
  %150 = bitwise_xor(%148, %149) /* ty=Tensor[(10, 6, 15), uint16] */;
  %151 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 6, 1), uint16] */, dtype="float32") /* ty=Tensor[(10, 6, 1), float32] */;
  %152 = cast(%150, dtype="float32") /* ty=Tensor[(10, 6, 15), float32] */;
  %153 = cast(%var_820, dtype="int32") /* ty=Tensor[(110), int32] */;
  %154 = cast(%var_820, dtype="int32") /* ty=Tensor[(110), int32] */;
  %155 = reshape(%153, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %156 = reshape(%154, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %157 = @func_493(%155, %156) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %158 = %157.1;
  %159 = cast(%158, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  %160 = cast(%158, dtype="int32") /* ty=Tensor[(5, 2, 11), int32] */;
  %161 = cast(%158, dtype="int32") /* ty=Tensor[(5, 2, 11), int32] */;
  %162 = reshape(%160, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %163 = reshape(%161, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %164 = @func_493(%162, %163) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %165 = cast(%var_866, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %166 = cast(%var_866, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %167 = reshape(%165, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
  %168 = reshape(%166, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
  %169 = @func_64(%167, %168) /* ty=(Tensor[(10, 11, 10), bool],) */;
  %170 = cast(%var_820, dtype="int32") /* ty=Tensor[(110), int32] */;
  %171 = cast(%158, dtype="int32") /* ty=Tensor[(5, 2, 11), int32] */;
  %172 = reshape(%170, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %173 = reshape(%171, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %174 = @func_493(%172, %173) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %175 = mod(%151, %152) /* ty=Tensor[(10, 6, 15), float32] */;
  %176 = asinh(%159) /* ty=Tensor[(5, 2, 11), float64] */;
  %177 = %164.0;
  %178 = %169.0;
  %179 = %174.0;
  (%175, %var_820, %176, %177, %178, %var_866, %179)
}

def @func_4349(%var_4326: Tensor[(8, 8, 4), int64]) -> Tensor[(8, 8, 4), bool] {
  %180 = @func_3822() /* ty=(Tensor[(8, 8, 4), int64],) */;
  %181 = %180.0;
  %182 = cast(%var_4326, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %183 = shape_of(%181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %184 = cast(%181, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %185 = dyn.reshape(%182, %183, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%184, %185) /* ty=Tensor[(8, 8, 4), bool] */
}

def @func_2050(%var_2017: Tensor[(2, 14, 10), float64], %var_2018: Tensor[(2, 14, 10), float64], %var_2038: Tensor[(900), uint16], %var_2040: Tensor[(1100), bool]) -> (Tensor[(2, 14, 10), float32], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(11, 10), int32], Tensor[(1100), bool]) {
  %186 = cast(%var_2018, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %187 = shape_of(%var_2017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_2017, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %190 = greater_equal(%188, %189) /* ty=Tensor[(2, 14, 10), bool] */;
  %191 = cast(%var_2018, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
  %192 = shape_of(%var_2017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%var_2017, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %195 = add(%193, %194) /* ty=Tensor[(2, 14, 10), float64] */;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %197 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%190, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %200 = cast(%var_2038, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %201 = cast(meta[relay.Constant][16] /* ty=Tensor[(11, 10), int32] */, dtype="int32") /* ty=Tensor[(11, 10), int32] */;
  %202 = cast(%var_2040, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %203 = reshape(%200, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint16] */;
  %204 = reshape(%201, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %205 = reshape(%202, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
  %206 = @func_899(%203, %204, %205) /* ty=(Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) */;
  %207 = floor_divide(%198, %199) /* ty=Tensor[(2, 14, 10), float32] */;
  %208 = %206.6;
  (%207, %208, %var_2038, meta[relay.Constant][16] /* ty=Tensor[(11, 10), int32] */, %var_2040)
}

def @func_3400(%var_3363: Tensor[(1, 13, 16), float32], %var_3366: Tensor[(7, 13, 16), float32]) -> (Tensor[(1, 13, 16), float32], Tensor[(7, 13, 16), float32], Tensor[(12, 8, 9), float32], Tensor[(858), float32], Tensor[(864), float64]) {
  %209 = cast(%var_3363, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
  %210 = cast(%var_3363, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
  %211 = cast(%var_3366, dtype="float32") /* ty=Tensor[(7, 13, 16), float32] */;
  %212 = cast(meta[relay.Constant][17] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
  %213 = cast(meta[relay.Constant][18] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
  %214 = reshape(%212, newshape=[6, 11, 13]) /* ty=Tensor[(6, 11, 13), float32] */;
  %215 = reshape(%213, newshape=[864]) /* ty=Tensor[(864), float64] */;
  %216 = @func_2645(%214, %215) /* ty=(Tensor[(12, 8, 9), float32], Tensor[(864), float64], Tensor[(6, 11, 13), bool], Tensor[(12, 8, 9), float32]) */;
  %217 = asinh(%209) /* ty=Tensor[(1, 13, 16), float32] */;
  %218 = power(%210, %211) /* ty=Tensor[(7, 13, 16), float32] */;
  %219 = %216.0;
  (%217, %218, %219, meta[relay.Constant][17] /* ty=Tensor[(858), float32] */, meta[relay.Constant][18] /* ty=Tensor[(864), float64] */)
}

def @func_5469() -> Tensor[(7, 7, 1), float64] {
  %220 = @func_5148() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %220.0
}

def @func_1936(%var_1931: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32],) {
  %221 = cast(%var_1931, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %222 = cos(%221) /* ty=Tensor[(11, 14, 13), float32] */;
  (%222,)
}

def @func_4576(%var_4552: Tensor[(14, 15, 15), int64], %var_4553: Tensor[(14, 15, 15), int64], %var_4569: Tensor[(110), int32]) -> (Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) {
  %223 = cast(%var_4553, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
  %224 = shape_of(%var_4552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%var_4552, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %227 = cast(%var_4553, dtype="float32") /* ty=Tensor[(14, 15, 15), float32] */;
  %228 = cast(%var_4569, dtype="int32") /* ty=Tensor[(110), int32] */;
  %229 = reshape(%228, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %230 = @func_3701(%229) /* ty=(Tensor[(7, 7, 1), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 110), uint64]) */;
  %231 = left_shift(%225, %226) /* ty=Tensor[(14, 15, 15), int64] */;
  %232 = cosh(%227) /* ty=Tensor[(14, 15, 15), float32] */;
  %233 = %230.1;
  (%231, %232, %233, %var_4569)
}

def @func_3822() -> (Tensor[(8, 8, 4), int64],) {
  %234 = cast(meta[relay.Constant][20] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
  %235 = shape_of(meta[relay.Constant][19] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %236 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
  %237 = dyn.reshape(%234, %235, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %238 = right_shift(%236, %237) /* ty=Tensor[(8, 8, 4), int64] */;
  (%238,)
}

def @func_6229(%var_6207: Tensor[(1, 10, 9), uint64], %var_6208: Tensor[(8, 10, 9), uint64], %var_6218: Tensor[(1575, 2), int64], %var_6219: Tensor[(110), int32]) -> (Tensor[(8, 10, 9), bool], Tensor[(14, 15, 15), int64], Tensor[(1575, 2), int64], Tensor[(110), int32], Tensor[(5, 2, 11), bool]) {
  %239 = cast(%var_6207, dtype="bool") /* ty=Tensor[(1, 10, 9), bool] */;
  %240 = cast(%var_6208, dtype="bool") /* ty=Tensor[(8, 10, 9), bool] */;
  %241 = cast(%var_6218, dtype="int64") /* ty=Tensor[(1575, 2), int64] */;
  %242 = cast(%var_6218, dtype="int64") /* ty=Tensor[(1575, 2), int64] */;
  %243 = cast(%var_6219, dtype="int32") /* ty=Tensor[(110), int32] */;
  %244 = reshape(%241, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %245 = reshape(%242, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %246 = reshape(%243, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %247 = @func_4576(%244, %245, %246) /* ty=(Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %248 = cast(%var_6219, dtype="int32") /* ty=Tensor[(110), int32] */;
  %249 = cast(%var_6219, dtype="int32") /* ty=Tensor[(110), int32] */;
  %250 = reshape(%248, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %251 = reshape(%249, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %252 = @func_493(%250, %251) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %253 = equal(%239, %240) /* ty=Tensor[(8, 10, 9), bool] */;
  %254 = %247.0;
  %255 = %252.1;
  (%253, %254, %var_6218, %var_6219, %255)
}

def @func_3923(%var_3918: Tensor[(7, 7, 1), float64]) -> Tensor[(7, 7, ?), float64] {
  %256 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %257 = %256.0;
  %258 = cast(%var_3918, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %259 = shape_of(%257, dtype="int32") /* ty=Tensor[(3), int32] */;
  %260 = cast(%257, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %261 = dyn.reshape(%258, %259, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%260, %261) /* ty=Tensor[(7, 7, ?), float64] */
}

def @func_4992() -> (Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) {
  %262 = @func_4979() /* ty=(Tensor[(7, 7, ?), float64],) */;
  %263 = @func_3876() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) */;
  %264 = %262.0;
  %265 = %263.0;
  (%264, %265)
}

def @func_2645(%var_2615: Tensor[(6, 11, 13), float32], %var_2632: Tensor[(864), float64]) -> (Tensor[(12, 8, 9), float32], Tensor[(864), float64], Tensor[(6, 11, 13), bool], Tensor[(12, 8, 9), float32]) {
  %266 = cast(%var_2632, dtype="float64") /* ty=Tensor[(864), float64] */;
  %267 = cast(%var_2632, dtype="float64") /* ty=Tensor[(864), float64] */;
  %268 = reshape(%266, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
  %269 = reshape(%267, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
  %270 = @func_1609(%268, %269) /* ty=(Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) */;
  %271 = cast(%var_2615, dtype="float32") /* ty=Tensor[(6, 11, 13), float32] */;
  %272 = asin(%271) /* ty=Tensor[(6, 11, 13), float32] */;
  %273 = cast(%var_2615, dtype="uint32") /* ty=Tensor[(6, 11, 13), uint32] */;
  %274 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %275 = cast(%272, dtype="uint32") /* ty=Tensor[(6, 11, 13), uint32] */;
  %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %277 = maximum(%275, %276) /* ty=Tensor[(6, 11, 13), uint32] */;
  %278 = cast(%277, dtype="bool") /* ty=Tensor[(6, 11, 13), bool] */;
  %279 = shape_of(%272, dtype="int32") /* ty=Tensor[(3), int32] */;
  %280 = cast(%272, dtype="bool") /* ty=Tensor[(6, 11, 13), bool] */;
  %281 = dyn.reshape(%278, %279, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %282 = cast(%var_2632, dtype="float64") /* ty=Tensor[(864), float64] */;
  %283 = %270.1;
  %284 = cast(%283, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
  %285 = reshape(%282, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
  %286 = reshape(%284, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
  %287 = @func_1609(%285, %286) /* ty=(Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) */;
  %288 = greater(%280, %281) /* ty=Tensor[(6, 11, 13), bool] */;
  %289 = %287.1;
  (%283, %var_2632, %288, %289)
}

def @func_4698(%var_4684: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), float64],) {
  %290 = cast(%var_4684, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
  %291 = rsqrt(%290) /* ty=Tensor[(3, 2, 16), float64] */;
  (%291,)
}

def @func_1609(%var_1566: Tensor[(12, 8, 9), float64], %var_1595: Tensor[(12, 8, 9), float64]) -> (Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) {
  %292 = cast(%var_1566, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
  %293 = cosh(%292) /* ty=Tensor[(12, 8, 9), float64] */;
  %294 = cast(%var_1566, dtype="int64") /* ty=Tensor[(12, 8, 9), int64] */;
  %295 = shape_of(%293, dtype="int32") /* ty=Tensor[(3), int32] */;
  %296 = cast(%293, dtype="int64") /* ty=Tensor[(12, 8, 9), int64] */;
  %297 = dyn.reshape(%294, %295, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %298 = cast(%var_1595, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
  %299 = shape_of(%var_1566, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%var_1566, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %302 = multiply(%296, %297) /* ty=Tensor[(12, 8, 9), int64] */;
  %303 = subtract(%300, %301) /* ty=Tensor[(12, 8, 9), float32] */;
  (%302, %303)
}

def @func_4979() -> (Tensor[(7, 7, ?), float64],) {
  %304 = @func_4112() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) */;
  %305 = %304.0;
  (%305,)
}

def @func_5264() -> (Tensor[(14, 9, ?), float64], Tensor[(7, 7, 126), float64]) {
  %306 = cast(meta[relay.Constant][21] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %307 = cast(meta[relay.Constant][21] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %308 = reshape(%306, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %309 = reshape(%307, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %310 = @func_1677(%308, %309) /* ty=Tensor[(14, 9, ?), int32] */;
  %311 = cast(meta[relay.Constant][21] /* ty=Tensor[(126), int32] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="float64") /* ty=Tensor[(14, 9, ?), float64] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %315 = @func_5148() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %316 = %315.0;
  %317 = cast(%316, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %318 = cast(meta[relay.Constant][21] /* ty=Tensor[(126), int32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %319 = power(%317, %318) /* ty=Tensor[(7, 7, 126), float32] */;
  %320 = cast(%319, dtype="float64") /* ty=Tensor[(7, 7, 126), float64] */;
  %321 = floor_mod(%313, %314) /* ty=Tensor[(14, 9, ?), float64] */;
  %322 = atanh(%320) /* ty=Tensor[(7, 7, 126), float64] */;
  (%321, %322)
}

def @func_4739() -> Tensor[(7, 7, 1), float64] {
  %323 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %323.0
}

def @func_5788() -> (Tensor[(7, 7, 1), float64], Tensor[(7, 7, ?), float64]) {
  %324 = @func_5710() /* ty=(Tensor[(7, 7, ?), float64],) */;
  %325 = @func_5469() /* ty=Tensor[(7, 7, 1), float64] */;
  %326 = %324.0;
  (%325, %326)
}

def @func_1230(%var_1210: Tensor[(420), float64], %var_1220: Tensor[(110, 10), bool]) -> (Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) {
  %327 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 14), float64] */;
  %328 = log2(%327) /* ty=Tensor[(11, 15, 14), float64] */;
  %329 = cast(%328, dtype="float64") /* ty=Tensor[(11, 15, 14), float64] */;
  %330 = cast(%var_1210, dtype="float64") /* ty=Tensor[(420), float64] */;
  %331 = reshape(%330, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
  %332 = @func_573(%331) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %333 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 15, 14), float64] */, dtype="uint32") /* ty=Tensor[(11, 15, 14), uint32] */;
  %334 = shape_of(%328, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%328, dtype="uint32") /* ty=Tensor[(11, 15, 14), uint32] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %337 = cast(%var_1220, dtype="bool") /* ty=Tensor[(110, 10), bool] */;
  %338 = cast(%var_1220, dtype="bool") /* ty=Tensor[(110, 10), bool] */;
  %339 = reshape(%337, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
  %340 = reshape(%338, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
  %341 = @func_64(%339, %340) /* ty=(Tensor[(10, 11, 10), bool],) */;
  %342 = sqrt(%329) /* ty=Tensor[(11, 15, 14), float64] */;
  %343 = %332.0;
  %344 = bitwise_xor(%335, %336) /* ty=Tensor[(11, 15, 14), uint32] */;
  %345 = %341.0;
  (%342, %343, %var_1210, %344, %345, %var_1220)
}

def @func_2903(%var_2876: Tensor[(12, 9, 7), float32], %var_2884: Tensor[(420), float64], %var_2885: Tensor[(1100), bool]) -> (Tensor[(12, 9, 7), float32], Tensor[(11, 15, 14), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(110), int32]) {
  %346 = cast(%var_2876, dtype="float32") /* ty=Tensor[(12, 9, 7), float32] */;
  %347 = cast(%var_2884, dtype="float64") /* ty=Tensor[(420), float64] */;
  %348 = cast(%var_2885, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %349 = reshape(%347, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %350 = reshape(%348, newshape=[110, 10]) /* ty=Tensor[(110, 10), bool] */;
  %351 = @func_1230(%349, %350) /* ty=(Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) */;
  %352 = cast(%var_2884, dtype="float64") /* ty=Tensor[(420), float64] */;
  %353 = reshape(%352, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
  %354 = @func_573(%353) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %355 = acos(%346) /* ty=Tensor[(12, 9, 7), float32] */;
  %356 = %351.0;
  %357 = %354.2;
  (%355, %356, %var_2884, %var_2885, %357)
}

def @func_3644(%var_3602: Tensor[(11, 5, 16), int64], %var_3603: Tensor[(11, 5, 16), int64], %var_3615: Tensor[(1440), float64]) -> (Tensor[(11, 5, 16), int64], Tensor[(126), int32], Tensor[(1440), float64], Tensor[(7, 7, 1), float64]) {
  %358 = cast(%var_3603, dtype="int64") /* ty=Tensor[(11, 5, 16), int64] */;
  %359 = shape_of(%var_3602, dtype="int32") /* ty=Tensor[(3), int32] */;
  %360 = cast(%var_3602, dtype="int64") /* ty=Tensor[(11, 5, 16), int64] */;
  %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %362 = cast(%var_3615, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %363 = reshape(%362, newshape=[6, 15, 16]) /* ty=Tensor[(6, 15, 16), float64] */;
  %364 = @func_3061(%363) /* ty=(Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) */;
  %365 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %366 = add(%360, %361) /* ty=Tensor[(11, 5, 16), int64] */;
  %367 = %364.2;
  %368 = %365.0;
  (%366, %367, %var_3615, %368)
}

def @func_4842(%var_4823: Tensor[(54, 14), float32], %var_4824: Tensor[(1100, 1), bool]) -> (Tensor[(7, 7, 1), float64], Tensor[(8, 8, 4), int64], Tensor[(420), float64], Tensor[(110), float32], Tensor[(11, 15, 14), float64], Tensor[(54, 14), float32], Tensor[(1100, 1), bool], Tensor[(110), float64]) {
  %369 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %370 = @func_3822() /* ty=(Tensor[(8, 8, 4), int64],) */;
  %371 = cast(meta[relay.Constant][23] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %372 = reshape(%371, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
  %373 = @func_573(%372) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %374 = %373.2;
  %375 = cast(%374, dtype="float32") /* ty=Tensor[(110), float32] */;
  %376 = cast(%var_4823, dtype="float32") /* ty=Tensor[(54, 14), float32] */;
  %377 = cast(meta[relay.Constant][23] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %378 = cast(%var_4824, dtype="bool") /* ty=Tensor[(1100, 1), bool] */;
  %379 = reshape(%376, newshape=[12, 9, 7]) /* ty=Tensor[(12, 9, 7), float32] */;
  %380 = reshape(%377, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %381 = reshape(%378, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
  %382 = @func_2903(%379, %380, %381) /* ty=(Tensor[(12, 9, 7), float32], Tensor[(11, 15, 14), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(110), int32]) */;
  %383 = cast(%374, dtype="float64") /* ty=Tensor[(110), float64] */;
  %384 = %369.0;
  %385 = %370.0;
  %386 = log2(%375) /* ty=Tensor[(110), float32] */;
  %387 = %382.1;
  %388 = sinh(%383) /* ty=Tensor[(110), float64] */;
  (%384, %385, meta[relay.Constant][23] /* ty=Tensor[(420), float64] */, %386, %387, %var_4823, %var_4824, %388)
}

def @func_5768(%var_5732: Tensor[(420), float64]) -> (Tensor[(7, 7, 1), float64], Tensor[(420), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 1), float64]) {
  %389 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %390 = cast(%var_5732, dtype="float64") /* ty=Tensor[(420), float64] */;
  %391 = reshape(%390, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
  %392 = @func_573(%391) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %393 = %392.1;
  %394 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %395 = shape_of(%393, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%393, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %398 = @func_5293() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %399 = %389.0;
  %400 = divide(%396, %397) /* ty=Tensor[(5, 2, 11), float32] */;
  %401 = %398.0;
  (%399, %var_5732, %400, %401)
}

def @func_5585() -> (Tensor[(7, 7, 4), bool], Tensor[(16, 9, 9), bool], Tensor[(2, 648), uint8]) {
  %402 = @func_4739() /* ty=Tensor[(7, 7, 1), float64] */;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %404 = log2(%403) /* ty=Tensor[(7, 7, 1), float32] */;
  %405 = cast(%404, dtype="bool") /* ty=Tensor[(7, 7, 1), bool] */;
  %406 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 7, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 7, 4), bool] */;
  %407 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 648), uint8] */, dtype="uint8") /* ty=Tensor[(2, 648), uint8] */;
  %408 = reshape(%407, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint8] */;
  %409 = @func_4435(%408) /* ty=(Tensor[(16, 9, 9), bool],) */;
  %410 = equal(%405, %406) /* ty=Tensor[(7, 7, 4), bool] */;
  %411 = %409.0;
  (%410, %411, meta[relay.Constant][26] /* ty=Tensor[(2, 648), uint8] */)
}

def @func_5839() -> (Tensor[(1040), float32],) {
  %412 = @func_3876() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) */;
  %413 = %412.3;
  %414 = cast(%413, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %415 = sin(%414) /* ty=Tensor[(1040), float32] */;
  (%415,)
}

def @func_3701(%var_3683: Tensor[(110), int32]) -> (Tensor[(7, 7, 1), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 110), uint64]) {
  %416 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %417 = cast(%var_3683, dtype="int32") /* ty=Tensor[(110), int32] */;
  %418 = cast(%var_3683, dtype="int32") /* ty=Tensor[(110), int32] */;
  %419 = reshape(%417, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %420 = reshape(%418, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %421 = @func_493(%419, %420) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %422 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %423 = %422.0;
  %424 = cast(%423, dtype="uint64") /* ty=Tensor[(7, 7, 1), uint64] */;
  %425 = cast(%var_3683, dtype="uint64") /* ty=Tensor[(110), uint64] */;
  %426 = %416.0;
  %427 = %421.0;
  %428 = bitwise_and(%424, %425) /* ty=Tensor[(7, 7, 110), uint64] */;
  (%426, %427, %428)
}

def @func_4435(%var_4426: Tensor[(16, 9, 9), uint8]) -> (Tensor[(16, 9, 9), bool],) {
  %429 = cast(%var_4426, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %430 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(16, 9, 9), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %431 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 9, 9), uint8] */, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %433 = equal(%431, %432) /* ty=Tensor[(16, 9, 9), bool] */;
  (%433,)
}

def @func_4405(%var_4388: uint16, %var_4389: Tensor[(15, 9, 16), uint16]) -> (Tensor[(15, 9, 16), bool], Tensor[(15, 9, 16), float32]) {
  %434 = cast(%var_4388, dtype="bool") /* ty=bool */;
  %435 = cast(%var_4389, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %436 = cast(%var_4389, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
  %437 = greater(%434, %435) /* ty=Tensor[(15, 9, 16), bool] */;
  %438 = sinh(%436) /* ty=Tensor[(15, 9, 16), float32] */;
  (%437, %438)
}

def @main(%var_6294: Tensor[(7, 7, 2), float64]) -> (Tensor[(7, 7, ?), int32], Tensor[(7, 7, 2), bool]) {
  %439 = @func_5710() /* ty=(Tensor[(7, 7, ?), float64],) */;
  %440 = %439.0;
  %441 = @func_6250() /* ty=Tensor[(7, 7, 1), float64] */;
  %442 = cast(%441, dtype="int32") /* ty=Tensor[(7, 7, 1), int32] */;
  %443 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %444 = cast(%440, dtype="int32") /* ty=Tensor[(7, 7, ?), int32] */;
  %445 = dyn.reshape(%442, %443, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %446 = cast(%441, dtype="bool") /* ty=Tensor[(7, 7, 1), bool] */;
  %447 = cast(%var_6294, dtype="bool") /* ty=Tensor[(7, 7, 2), bool] */;
  %448 = maximum(%444, %445) /* ty=Tensor[(7, 7, ?), int32] */;
  %449 = less_equal(%446, %447) /* ty=Tensor[(7, 7, 2), bool] */;
  (%448, %449)
}

def @func_6083() -> Tensor[(7, 7, 1), float64] {
  @func_5469() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_493(%var_443: Tensor[(5, 2, 11), int32], %var_444: Tensor[(5, 2, 11), int32]) -> (Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) {
  %450 = cast(%var_444, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %451 = shape_of(%var_443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(%var_443, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %454 = less(%452, %453) /* ty=Tensor[(5, 2, 11), bool] */;
  %455 = cast(%454, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %456 = shape_of(%var_443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %457 = cast(%var_443, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %459 = cast(%var_444, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  %460 = sigmoid(%459) /* ty=Tensor[(5, 2, 11), float64] */;
  %461 = cast(%460, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %462 = shape_of(%var_443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%var_443, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %465 = mod(%457, %458) /* ty=Tensor[(5, 2, 11), float32] */;
  %466 = logical_or(%463, %464) /* ty=Tensor[(5, 2, 11), bool] */;
  (%465, %466)
}

def @func_5395(%var_5374: Tensor[(8, 13, 10), float64], %var_5385: Tensor[(880), int64], %var_5386: Tensor[(180, 8), float64]) -> (Tensor[(7, 7, ?), float32], Tensor[(1040), uint64], Tensor[(8, 13, 10), bool], Tensor[(126), int32], Tensor[(880), int64], Tensor[(180, 8), float64], Tensor[(8, 13, 10), float32]) {
  %467 = @func_5070() /* ty=(Tensor[(7, 7, ?), float32],) */;
  %468 = cast(meta[relay.Constant][28] /* ty=Tensor[(1040), uint64] */, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
  %469 = reshape(%468, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), uint64] */;
  %470 = @func_2407(%469) /* ty=(Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) */;
  %471 = %470.0;
  %472 = cast(%471, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
  %473 = log(%472) /* ty=Tensor[(8, 13, 10), float64] */;
  %474 = cast(%471, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%473, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %478 = cast(%var_5385, dtype="int64") /* ty=Tensor[(880), int64] */;
  %479 = cast(%var_5385, dtype="int64") /* ty=Tensor[(880), int64] */;
  %480 = cast(%var_5386, dtype="float64") /* ty=Tensor[(180, 8), float64] */;
  %481 = reshape(%478, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), int64] */;
  %482 = reshape(%479, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), int64] */;
  %483 = reshape(%480, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %484 = @func_3644(%481, %482, %483) /* ty=(Tensor[(11, 5, 16), int64], Tensor[(126), int32], Tensor[(1440), float64], Tensor[(7, 7, 1), float64]) */;
  %485 = cast(%var_5374, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
  %486 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%473, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %489 = power(%487, %488) /* ty=Tensor[(8, 13, 10), float64] */;
  %490 = cast(%489, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  %491 = %467.0;
  %492 = greater_equal(%476, %477) /* ty=Tensor[(8, 13, 10), bool] */;
  %493 = %484.1;
  %494 = exp(%490) /* ty=Tensor[(8, 13, 10), float32] */;
  (%491, meta[relay.Constant][28] /* ty=Tensor[(1040), uint64] */, %492, %493, %var_5385, %var_5386, %494)
}

def @func_3263(%var_3234: Tensor[(15, 10, 7), int8], %var_3252: Tensor[(900), uint16]) -> (Tensor[(15, 10, 7), int8], Tensor[(2, 14, 10), float32], Tensor[(336, 4), int32], Tensor[(900), uint16]) {
  %495 = cast(meta[relay.Constant][29] /* ty=Tensor[(15, 10, 7), int8] */, dtype="int8") /* ty=Tensor[(15, 10, 7), int8] */;
  %496 = shape_of(%var_3234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %497 = cast(%var_3234, dtype="int8") /* ty=Tensor[(15, 10, 7), int8] */;
  %498 = dyn.reshape(%495, %496, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %499 = cast(meta[relay.Constant][30] /* ty=Tensor[(336, 4), int32] */, dtype="int32") /* ty=Tensor[(336, 4), int32] */;
  %500 = cast(%var_3252, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %501 = reshape(%499, newshape=[8, 12, 14]) /* ty=Tensor[(8, 12, 14), int32] */;
  %502 = reshape(%500, newshape=[900]) /* ty=Tensor[(900), uint16] */;
  %503 = @func_2735(%501, %502) /* ty=(Tensor[(8, 12, 14), int32], Tensor[(8, 12, 14), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(2, 14, 10), float32], Tensor[(280), float64], Tensor[(900), uint16]) */;
  %504 = left_shift(%497, %498) /* ty=Tensor[(15, 10, 7), int8] */;
  %505 = %503.5;
  (%504, %505, meta[relay.Constant][30] /* ty=Tensor[(336, 4), int32] */, %var_3252)
}

def @func_4370() -> (Tensor[(7, 7, 1), float64],) {
  %506 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %507 = %506.0;
  (%507,)
}

def @func_5710() -> (Tensor[(7, 7, ?), float64],) {
  %508 = @func_4992() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) */;
  %509 = %508.0;
  (%509,)
}

def @func_6105() -> Tensor[(7, 7, 1), float64] {
  %510 = @func_4370() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %510.0
}

def @func_6167() -> (Tensor[(7, 7, ?), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32], Tensor[(3150), float32]) {
  %511 = @func_4112() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) */;
  %512 = cast(meta[relay.Constant][31] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
  %513 = cast(meta[relay.Constant][31] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
  %514 = cast(meta[relay.Constant][32] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %515 = reshape(%512, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %516 = reshape(%513, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %517 = reshape(%514, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %518 = @func_4576(%515, %516, %517) /* ty=(Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %519 = cast(meta[relay.Constant][31] /* ty=Tensor[(3150), int64] */, dtype="float32") /* ty=Tensor[(3150), float32] */;
  %520 = %511.0;
  %521 = %518.2;
  %522 = rsqrt(%519) /* ty=Tensor[(3150), float32] */;
  (%520, %521, meta[relay.Constant][32] /* ty=Tensor[(110), int32] */, %522)
}

def @func_3876() -> (Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) {
  %523 = cast(meta[relay.Constant][33] /* ty=Tensor[(1040), uint64] */, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
  %524 = reshape(%523, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), uint64] */;
  %525 = @func_2407(%524) /* ty=(Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) */;
  %526 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %527 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %528 = %527.0;
  %529 = cast(%528, dtype="int16") /* ty=Tensor[(7, 7, 1), int16] */;
  %530 = cast(meta[relay.Constant][33] /* ty=Tensor[(1040), uint64] */, dtype="int16") /* ty=Tensor[(1040), int16] */;
  %531 = cast(meta[relay.Constant][33] /* ty=Tensor[(1040), uint64] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
  %532 = %525.1;
  %533 = %526.0;
  %534 = subtract(%529, %530) /* ty=Tensor[(7, 7, 1040), int16] */;
  %535 = atanh(%531) /* ty=Tensor[(1040), float32] */;
  (%532, %533, %534, %535)
}

def @func_4154() -> (Tensor[(7, 7, 1), float64],) {
  %536 = @func_3833() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %537 = %536.0;
  (%537,)
}

def @func_3127(%var_3111: Tensor[(16, 7, 8), float32]) -> (Tensor[(16, 7, 8), float32], Tensor[(16, 7, 8), int32]) {
  %538 = cast(%var_3111, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %539 = acosh(%538) /* ty=Tensor[(16, 7, 8), float32] */;
  %540 = cast(%539, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %541 = sqrt(%540) /* ty=Tensor[(16, 7, 8), float32] */;
  %542 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %543 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %544 = cast(%541, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %545 = dyn.reshape(%542, %543, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %546 = cast(%var_3111, dtype="int32") /* ty=Tensor[(16, 7, 8), int32] */;
  %547 = shape_of(%541, dtype="int32") /* ty=Tensor[(3), int32] */;
  %548 = cast(%541, dtype="int32") /* ty=Tensor[(16, 7, 8), int32] */;
  %549 = dyn.reshape(%546, %547, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %550 = mod(%544, %545) /* ty=Tensor[(16, 7, 8), float32] */;
  %551 = right_shift(%548, %549) /* ty=Tensor[(16, 7, 8), int32] */;
  (%550, %551)
}

def @func_3807() -> (Tensor[(7, 7, 1), float64],) {
  %552 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
  %553 = cast(%552, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %554 = sinh(%553) /* ty=Tensor[(7, 7, 1), float64] */;
  (%554,)
}

def @func_5981(%var_5913: Tensor[(7, 7, 420), float64]) -> (Tensor[(7, 7, 1), float64], Tensor[(7, 7, 420), uint32], Tensor[(7, 7, 420), float32], Tensor[(7, 7, 420), int16], Tensor[(16, 9, 9), bool], Tensor[(7, 7, 1), float64]) {
  %555 = @func_5148() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %556 = @func_4006() /* ty=(Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) */;
  %557 = %556.2;
  %558 = cast(%557, dtype="float64") /* ty=Tensor[(7, 7, 420), float64] */;
  %559 = cos(%558) /* ty=Tensor[(7, 7, 420), float64] */;
  %560 = cast(%559, dtype="float64") /* ty=Tensor[(7, 7, 420), float64] */;
  %561 = sqrt(%560) /* ty=Tensor[(7, 7, 420), float64] */;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(7, 7, 420), float32] */;
  %563 = atanh(%562) /* ty=Tensor[(7, 7, 420), float32] */;
  %564 = cast(meta[relay.Constant][35] /* ty=Tensor[(7, 7, 420), float32] */, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
  %565 = shape_of(%563, dtype="int32") /* ty=Tensor[(3), int32] */;
  %566 = cast(%563, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
  %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %568 = logical_and(%566, %567) /* ty=Tensor[(7, 7, 420), bool] */;
  %569 = cast(%568, dtype="uint32") /* ty=Tensor[(7, 7, 420), uint32] */;
  %570 = shape_of(%561, dtype="int32") /* ty=Tensor[(3), int32] */;
  %571 = cast(%561, dtype="uint32") /* ty=Tensor[(7, 7, 420), uint32] */;
  %572 = dyn.reshape(%569, %570, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %573 = cast(%561, dtype="float32") /* ty=Tensor[(7, 7, 420), float32] */;
  %574 = cast(%557, dtype="float64") /* ty=Tensor[(7, 7, 420), float64] */;
  %575 = tan(%574) /* ty=Tensor[(7, 7, 420), float64] */;
  %576 = cast(%var_5913, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
  %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
  %578 = cast(%575, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
  %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %580 = greater_equal(%578, %579) /* ty=Tensor[(7, 7, 420), bool] */;
  %581 = cast(%580, dtype="int16") /* ty=Tensor[(7, 7, 420), int16] */;
  %582 = shape_of(%568, dtype="int32") /* ty=Tensor[(3), int32] */;
  %583 = cast(%568, dtype="int16") /* ty=Tensor[(7, 7, 420), int16] */;
  %584 = dyn.reshape(%581, %582, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %585 = @func_5585() /* ty=(Tensor[(7, 7, 4), bool], Tensor[(16, 9, 9), bool], Tensor[(2, 648), uint8]) */;
  %586 = %555.0;
  %587 = multiply(%571, %572) /* ty=Tensor[(7, 7, 420), uint32] */;
  %588 = erf(%573) /* ty=Tensor[(7, 7, 420), float32] */;
  %589 = right_shift(%583, %584) /* ty=Tensor[(7, 7, 420), int16] */;
  %590 = %585.1;
  %591 = @func_4739() /* ty=Tensor[(7, 7, 1), float64] */;
  (%586, %587, %588, %589, %590, %591)
}

def @func_2407(%var_2401: Tensor[(8, 13, 10), uint64]) -> (Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) {
  %592 = cast(%var_2401, dtype="uint64") /* ty=Tensor[(8, 13, 10), uint64] */;
  %593 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(8, 13, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 13, 10), uint64] */, dtype="uint64") /* ty=Tensor[(8, 13, 10), uint64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %596 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 13, 10), uint64] */, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  %597 = bitwise_or(%594, %595) /* ty=Tensor[(8, 13, 10), uint64] */;
  %598 = asinh(%596) /* ty=Tensor[(8, 13, 10), float32] */;
  (%597, %598)
}

def @func_573(%var_558: Tensor[(15, 2, 14), float64]) -> (Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) {
  %599 = cast(%var_558, dtype="float64") /* ty=Tensor[(15, 2, 14), float64] */;
  %600 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(15, 2, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %601 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 14), float64] */;
  %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %603 = cast(meta[relay.Constant][38] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %604 = cast(meta[relay.Constant][38] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %605 = reshape(%603, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %606 = reshape(%604, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %607 = @func_493(%605, %606) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %608 = subtract(%601, %602) /* ty=Tensor[(15, 2, 14), float64] */;
  %609 = %607.0;
  (%608, %609, meta[relay.Constant][38] /* ty=Tensor[(110), int32] */)
}

def @func_4664(%var_4641: Tensor[(7, 7, 4), float64]) -> (Tensor[(7, 7, 4), int32], Tensor[(8, 8, 4), bool], Tensor[(256), int64]) {
  %610 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
  %611 = cast(%610, dtype="int32") /* ty=Tensor[(7, 7, 1), int32] */;
  %612 = cast(%var_4641, dtype="int32") /* ty=Tensor[(7, 7, 4), int32] */;
  %613 = cast(meta[relay.Constant][39] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
  %614 = reshape(%613, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
  %615 = bitwise_and(%611, %612) /* ty=Tensor[(7, 7, 4), int32] */;
  %616 = @func_4349(%614) /* ty=Tensor[(8, 8, 4), bool] */;
  (%615, %616, meta[relay.Constant][39] /* ty=Tensor[(256), int64] */)
}

def @func_6137() -> Tensor[(1100), bool] {
  @func_4418() /* ty=Tensor[(1100), bool] */
}

def @func_4516() -> (Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float64]) {
  %617 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %618 = %617.0;
  %619 = cast(%618, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %620 = cast(%618, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %621 = @func_4154() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %622 = log10(%619) /* ty=Tensor[(7, 7, 1), float32] */;
  %623 = asinh(%620) /* ty=Tensor[(7, 7, 1), float32] */;
  %624 = %621.0;
  (%622, %623, %624)
}

def @func_4894(%var_4885: Tensor[(22, 5), int32]) -> (Tensor[(7, 7, 1), float32], Tensor[(6, 15, 16), float64], Tensor[(1440), float64], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(22, 5), int32], Tensor[(1100), bool]) {
  %625 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
  %626 = cast(%625, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %627 = cast(meta[relay.Constant][40] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %628 = reshape(%627, newshape=[6, 15, 16]) /* ty=Tensor[(6, 15, 16), float64] */;
  %629 = @func_3061(%628) /* ty=(Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) */;
  %630 = cast(meta[relay.Constant][41] /* ty=Tensor[(900), uint16] */, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %631 = cast(%var_4885, dtype="int32") /* ty=Tensor[(22, 5), int32] */;
  %632 = cast(meta[relay.Constant][42] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %633 = reshape(%630, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint16] */;
  %634 = reshape(%631, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %635 = reshape(%632, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
  %636 = @func_899(%633, %634, %635) /* ty=(Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) */;
  %637 = log(%626) /* ty=Tensor[(7, 7, 1), float32] */;
  %638 = %629.0;
  %639 = %636.6;
  (%637, %638, meta[relay.Constant][40] /* ty=Tensor[(1440), float64] */, %639, meta[relay.Constant][41] /* ty=Tensor[(900), uint16] */, %var_4885, meta[relay.Constant][42] /* ty=Tensor[(1100), bool] */)
}

def @func_6250() -> Tensor[(7, 7, 1), float64] {
  %640 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %640.0
}

def @func_1272(%var_1258: Tensor[(6, 9, 7), uint64], %var_1259: Tensor[(6, 9, 7), uint64], %var_1263: Tensor[(6, 9, 7), bool]) -> (Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) {
  %641 = cast(%var_1259, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %642 = shape_of(%var_1258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %643 = cast(%var_1258, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %644 = dyn.reshape(%641, %642, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %645 = less(%643, %644) /* ty=Tensor[(6, 9, 7), bool] */;
  %646 = cast(%var_1263, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %647 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(%645, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %650 = cast(meta[relay.Constant][43] /* ty=Tensor[(420, 1), float64] */, dtype="float64") /* ty=Tensor[(420, 1), float64] */;
  %651 = reshape(%650, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
  %652 = @func_573(%651) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %653 = add(%648, %649) /* ty=Tensor[(6, 9, 7), float64] */;
  %654 = %652.1;
  (%653, %654, meta[relay.Constant][43] /* ty=Tensor[(420, 1), float64] */)
}

def @func_4006() -> (Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) {
  %655 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %656 = cast(meta[relay.Constant][45] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %657 = reshape(%655, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %658 = reshape(%656, newshape=[110, 10]) /* ty=Tensor[(110, 10), bool] */;
  %659 = @func_1230(%657, %658) /* ty=(Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) */;
  %660 = @func_3833() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %661 = %660.0;
  %662 = cast(%661, dtype="int16") /* ty=Tensor[(7, 7, 1), int16] */;
  %663 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float64] */, dtype="int16") /* ty=Tensor[(420), int16] */;
  %664 = cast(meta[relay.Constant][44] /* ty=Tensor[(420), float64] */, dtype="int16") /* ty=Tensor[(420), int16] */;
  %665 = cast(%661, dtype="int16") /* ty=Tensor[(7, 7, 1), int16] */;
  %666 = bitwise_xor(%664, %665) /* ty=Tensor[(7, 7, 420), int16] */;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(7, 7, 420), float32] */;
  %668 = %659.5;
  %669 = add(%662, %663) /* ty=Tensor[(7, 7, 420), int16] */;
  %670 = sigmoid(%667) /* ty=Tensor[(7, 7, 420), float32] */;
  (%668, meta[relay.Constant][45] /* ty=Tensor[(1100), bool] */, %669, %670)
}

def @func_5293() -> (Tensor[(7, 7, 1), float64],) {
  %671 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %672 = %671.0;
  (%672,)
}

def @func_3755() -> Tensor[(7, 7, 1), float64] {
  %673 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %673.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_3023(%var_3021: Tensor[(7, 1, 6), float32], %var_3022: Tensor[(7, 8, 6), float32]) -> (Tensor[(7, 8, 6), bool], Tensor[(7, 8, 6), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) {
  @func_3019(%var_3021, %var_3022) /* ty=(Tensor[(7, 8, 6), bool], Tensor[(7, 8, 6), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) */
}

def @func_4156() -> (Tensor[(7, 7, 1), float64],) {
  @func_4154() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_5072() -> (Tensor[(7, 7, ?), float32],) {
  @func_5070() /* ty=(Tensor[(7, 7, ?), float32],) */
}

def @func_899(%var_811: Tensor[(10, 6, 15), uint16], %var_820: Tensor[(110), int32], %var_866: Tensor[(1100), bool]) -> (Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 6, 1), uint16] */, dtype="uint16") /* ty=Tensor[(10, 6, 1), uint16] */;
  %1 = cast(%var_811, dtype="uint16") /* ty=Tensor[(10, 6, 15), uint16] */;
  %2 = bitwise_xor(%0, %1) /* ty=Tensor[(10, 6, 15), uint16] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 6, 1), uint16] */, dtype="float32") /* ty=Tensor[(10, 6, 1), float32] */;
  %4 = cast(%2, dtype="float32") /* ty=Tensor[(10, 6, 15), float32] */;
  %5 = cast(%var_820, dtype="int32") /* ty=Tensor[(110), int32] */;
  %6 = cast(%var_820, dtype="int32") /* ty=Tensor[(110), int32] */;
  %7 = reshape(%5, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %8 = reshape(%6, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %9 = @func_493(%7, %8) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %10 = %9.1;
  %11 = cast(%10, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  %12 = cast(%10, dtype="int32") /* ty=Tensor[(5, 2, 11), int32] */;
  %13 = cast(%10, dtype="int32") /* ty=Tensor[(5, 2, 11), int32] */;
  %14 = reshape(%12, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %15 = reshape(%13, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %16 = @func_493(%14, %15) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %17 = cast(%var_866, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %18 = cast(%var_866, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %19 = reshape(%17, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
  %20 = reshape(%18, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
  %21 = @func_64(%19, %20) /* ty=(Tensor[(10, 11, 10), bool],) */;
  %22 = cast(%var_820, dtype="int32") /* ty=Tensor[(110), int32] */;
  %23 = cast(%10, dtype="int32") /* ty=Tensor[(5, 2, 11), int32] */;
  %24 = reshape(%22, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %25 = reshape(%23, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %26 = @func_493(%24, %25) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %27 = mod(%3, %4) /* ty=Tensor[(10, 6, 15), float32] */;
  %28 = asinh(%11) /* ty=Tensor[(5, 2, 11), float64] */;
  %29 = %16.0;
  %30 = %21.0;
  %31 = %26.0;
  (%27, %var_820, %28, %29, %30, %var_866, %31)
}

def @func_5266() -> (Tensor[(14, 9, ?), float64], Tensor[(7, 7, 126), float64]) {
  @func_5264() /* ty=(Tensor[(14, 9, ?), float64], Tensor[(7, 7, 126), float64]) */
}

def @func_4409(%var_4407: uint16, %var_4408: Tensor[(15, 9, 16), uint16]) -> (Tensor[(15, 9, 16), bool], Tensor[(15, 9, 16), float32]) {
  @func_4405(%var_4407, %var_4408) /* ty=(Tensor[(15, 9, 16), bool], Tensor[(15, 9, 16), float32]) */
}

def @func_5585() -> (Tensor[(7, 7, 4), bool], Tensor[(16, 9, 9), bool], Tensor[(2, 648), uint8]) {
  %32 = @func_4739() /* ty=Tensor[(7, 7, 1), float64] */;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %34 = log2(%33) /* ty=Tensor[(7, 7, 1), float32] */;
  %35 = cast(%34, dtype="bool") /* ty=Tensor[(7, 7, 1), bool] */;
  %36 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 7, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 7, 4), bool] */;
  %37 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 648), uint8] */, dtype="uint8") /* ty=Tensor[(2, 648), uint8] */;
  %38 = reshape(%37, newshape=[16, 9, 9]) /* ty=Tensor[(16, 9, 9), uint8] */;
  %39 = @func_4435(%38) /* ty=(Tensor[(16, 9, 9), bool],) */;
  %40 = equal(%35, %36) /* ty=Tensor[(7, 7, 4), bool] */;
  %41 = %39.0;
  (%40, %41, meta[relay.Constant][2] /* ty=Tensor[(2, 648), uint8] */)
}

def @func_6085() -> Tensor[(7, 7, 1), float64] {
  @func_6083() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_5070() -> (Tensor[(7, 7, ?), float32],) {
  %42 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %45 = acos(%44) /* ty=Tensor[(7, 7, 1), float64] */;
  %46 = @func_4992() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) */;
  %47 = %46.0;
  %48 = cast(%47, dtype="float32") /* ty=Tensor[(7, 7, ?), float32] */;
  %49 = shape_of(%45, dtype="int32") /* ty=Tensor[(3), int32] */;
  %50 = cast(%45, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %52 = floor_divide(%50, %51) /* ty=Tensor[(7, 7, ?), float32] */;
  (%52,)
}

def @func_4664(%var_4641: Tensor[(7, 7, 4), float64]) -> (Tensor[(7, 7, 4), int32], Tensor[(8, 8, 4), bool], Tensor[(256), int64]) {
  %53 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
  %54 = cast(%53, dtype="int32") /* ty=Tensor[(7, 7, 1), int32] */;
  %55 = cast(%var_4641, dtype="int32") /* ty=Tensor[(7, 7, 4), int32] */;
  %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
  %57 = reshape(%56, newshape=[8, 8, 4]) /* ty=Tensor[(8, 8, 4), int64] */;
  %58 = bitwise_and(%54, %55) /* ty=Tensor[(7, 7, 4), int32] */;
  %59 = @func_4349(%57) /* ty=Tensor[(8, 8, 4), bool] */;
  (%58, %59, meta[relay.Constant][3] /* ty=Tensor[(256), int64] */)
}

def @func_1272(%var_1258: Tensor[(6, 9, 7), uint64], %var_1259: Tensor[(6, 9, 7), uint64], %var_1263: Tensor[(6, 9, 7), bool]) -> (Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) {
  %60 = cast(%var_1259, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %61 = shape_of(%var_1258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %62 = cast(%var_1258, dtype="bool") /* ty=Tensor[(6, 9, 7), bool] */;
  %63 = dyn.reshape(%60, %61, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %64 = less(%62, %63) /* ty=Tensor[(6, 9, 7), bool] */;
  %65 = cast(%var_1263, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %66 = shape_of(%64, dtype="int32") /* ty=Tensor[(3), int32] */;
  %67 = cast(%64, dtype="float64") /* ty=Tensor[(6, 9, 7), float64] */;
  %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %69 = cast(meta[relay.Constant][4] /* ty=Tensor[(420, 1), float64] */, dtype="float64") /* ty=Tensor[(420, 1), float64] */;
  %70 = reshape(%69, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
  %71 = @func_573(%70) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %72 = add(%67, %68) /* ty=Tensor[(6, 9, 7), float64] */;
  %73 = %71.1;
  (%72, %73, meta[relay.Constant][4] /* ty=Tensor[(420, 1), float64] */)
}

def @func_6251() -> Tensor[(7, 7, 1), float64] {
  %75 = fn () -> Tensor[(7, 7, 1), float64] {
    %74 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %74.0
  };
  %75() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_4896(%var_4895: Tensor[(22, 5), int32]) -> (Tensor[(7, 7, 1), float32], Tensor[(6, 15, 16), float64], Tensor[(1440), float64], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(22, 5), int32], Tensor[(1100), bool]) {
  %91 = fn (%var_4885: Tensor[(22, 5), int32]) -> (Tensor[(7, 7, 1), float32], Tensor[(6, 15, 16), float64], Tensor[(1440), float64], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(22, 5), int32], Tensor[(1100), bool]) {
    %76 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
    %77 = cast(%76, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
    %78 = cast(meta[relay.Constant][5] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %79 = reshape(%78, newshape=[6, 15, 16]) /* ty=Tensor[(6, 15, 16), float64] */;
    %80 = @func_3061(%79) /* ty=(Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) */;
    %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(900), uint16] */, dtype="uint16") /* ty=Tensor[(900), uint16] */;
    %82 = cast(%var_4885, dtype="int32") /* ty=Tensor[(22, 5), int32] */;
    %83 = cast(meta[relay.Constant][7] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
    %84 = reshape(%81, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint16] */;
    %85 = reshape(%82, newshape=[110]) /* ty=Tensor[(110), int32] */;
    %86 = reshape(%83, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
    %87 = @func_899(%84, %85, %86) /* ty=(Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) */;
    %88 = log(%77) /* ty=Tensor[(7, 7, 1), float32] */;
    %89 = %80.0;
    %90 = %87.6;
    (%88, %89, meta[relay.Constant][5] /* ty=Tensor[(1440), float64] */, %90, meta[relay.Constant][6] /* ty=Tensor[(900), uint16] */, %var_4885, meta[relay.Constant][7] /* ty=Tensor[(1100), bool] */)
  };
  %91(%var_4895) /* ty=(Tensor[(7, 7, 1), float32], Tensor[(6, 15, 16), float64], Tensor[(1440), float64], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(22, 5), int32], Tensor[(1100), bool]) */
}

def @func_5771(%var_5769: Tensor[(420), float64]) -> (Tensor[(7, 7, 1), float64], Tensor[(420), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 1), float64]) {
  @func_5768(%var_5769) /* ty=(Tensor[(7, 7, 1), float64], Tensor[(420), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 1), float64]) */
}

def @func_2407(%var_2401: Tensor[(8, 13, 10), uint64]) -> (Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) {
  %92 = cast(%var_2401, dtype="uint64") /* ty=Tensor[(8, 13, 10), uint64] */;
  %93 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(8, 13, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %94 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 13, 10), uint64] */, dtype="uint64") /* ty=Tensor[(8, 13, 10), uint64] */;
  %95 = dyn.reshape(%92, %93, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %96 = cast(meta[relay.Constant][8] /* ty=Tensor[(8, 13, 10), uint64] */, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
  %97 = bitwise_or(%94, %95) /* ty=Tensor[(8, 13, 10), uint64] */;
  %98 = asinh(%96) /* ty=Tensor[(8, 13, 10), float32] */;
  (%97, %98)
}

def @func_4741() -> Tensor[(7, 7, 1), float64] {
  @func_4739() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_3823() -> (Tensor[(8, 8, 4), int64],) {
  %104 = fn () -> (Tensor[(8, 8, 4), int64],) {
    %99 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
    %100 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %101 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(8, 8, 4), int64] */;
    %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %103 = right_shift(%101, %102) /* ty=Tensor[(8, 8, 4), int64] */;
    (%103,)
  };
  %104() /* ty=(Tensor[(8, 8, 4), int64],) */
}

def @func_4371() -> (Tensor[(7, 7, 1), float64],) {
  %107 = fn () -> (Tensor[(7, 7, 1), float64],) {
    %105 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %106 = %105.0;
    (%106,)
  };
  %107() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_5646(%var_5591: Tensor[(2, 10, 7), float64]) -> (Tensor[(12, 8, 9), float32], Tensor[(208), float32], Tensor[(1456), float32], Tensor[(2, 10, 7), int64], Tensor[(110), int32], Tensor[(3150), int64], Tensor[(110), int32]) {
  %108 = cast(meta[relay.Constant][11] /* ty=Tensor[(208), float32] */, dtype="float32") /* ty=Tensor[(208), float32] */;
  %109 = cast(meta[relay.Constant][12] /* ty=Tensor[(1456), float32] */, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %110 = reshape(%108, newshape=[1, 13, 16]) /* ty=Tensor[(1, 13, 16), float32] */;
  %111 = reshape(%109, newshape=[7, 13, 16]) /* ty=Tensor[(7, 13, 16), float32] */;
  %112 = @func_3400(%110, %111) /* ty=(Tensor[(1, 13, 16), float32], Tensor[(7, 13, 16), float32], Tensor[(12, 8, 9), float32], Tensor[(858), float32], Tensor[(864), float64]) */;
  %113 = cast(%var_5591, dtype="float64") /* ty=Tensor[(2, 10, 7), float64] */;
  %114 = cos(%113) /* ty=Tensor[(2, 10, 7), float64] */;
  %115 = cast(%var_5591, dtype="int64") /* ty=Tensor[(2, 10, 7), int64] */;
  %116 = shape_of(%114, dtype="int32") /* ty=Tensor[(3), int32] */;
  %117 = cast(%114, dtype="int64") /* ty=Tensor[(2, 10, 7), int64] */;
  %118 = dyn.reshape(%115, %116, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %119 = cast(meta[relay.Constant][13] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
  %120 = cast(meta[relay.Constant][13] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
  %121 = cast(meta[relay.Constant][14] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
  %122 = reshape(%119, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %123 = reshape(%120, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %124 = reshape(%121, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %125 = @func_4576(%122, %123, %124) /* ty=(Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %126 = %112.2;
  %127 = subtract(%117, %118) /* ty=Tensor[(2, 10, 7), int64] */;
  %128 = %125.3;
  (%126, meta[relay.Constant][11] /* ty=Tensor[(208), float32] */, meta[relay.Constant][12] /* ty=Tensor[(1456), float32] */, %127, %128, meta[relay.Constant][13] /* ty=Tensor[(3150), int64] */, meta[relay.Constant][14] /* ty=Tensor[(110), int32] */)
}

def @func_5649(%var_5647: Tensor[(2, 10, 7), float64]) -> (Tensor[(12, 8, 9), float32], Tensor[(208), float32], Tensor[(1456), float32], Tensor[(2, 10, 7), int64], Tensor[(110), int32], Tensor[(3150), int64], Tensor[(110), int32]) {
  @func_5646(%var_5647) /* ty=(Tensor[(12, 8, 9), float32], Tensor[(208), float32], Tensor[(1456), float32], Tensor[(2, 10, 7), int64], Tensor[(110), int32], Tensor[(3150), int64], Tensor[(110), int32]) */
}

def @func_5712() -> (Tensor[(7, 7, ?), float64],) {
  @func_5710() /* ty=(Tensor[(7, 7, ?), float64],) */
}

def @func_4516() -> (Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float64]) {
  %129 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %130 = %129.0;
  %131 = cast(%130, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %132 = cast(%130, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %133 = @func_4154() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %134 = log10(%131) /* ty=Tensor[(7, 7, 1), float32] */;
  %135 = asinh(%132) /* ty=Tensor[(7, 7, 1), float32] */;
  %136 = %133.0;
  (%134, %135, %136)
}

def @func_4419() -> Tensor[(1100), bool] {
  %138 = fn () -> Tensor[(1100), bool] {
    %137 = @func_4006() /* ty=(Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) */;
    %137.1
  };
  %138() /* ty=Tensor[(1100), bool] */
}

def @func_3064(%var_3062: Tensor[(6, 15, 16), float64]) -> (Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) {
  @func_3061(%var_3062) /* ty=(Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) */
}

def @func_4437(%var_4436: Tensor[(16, 9, 9), uint8]) -> (Tensor[(16, 9, 9), bool],) {
  %144 = fn (%var_4426: Tensor[(16, 9, 9), uint8]) -> (Tensor[(16, 9, 9), bool],) {
    %139 = cast(%var_4426, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
    %140 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(16, 9, 9), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %141 = cast(meta[relay.Constant][15] /* ty=Tensor[(16, 9, 9), uint8] */, dtype="bool") /* ty=Tensor[(16, 9, 9), bool] */;
    %142 = dyn.reshape(%139, %140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %143 = equal(%141, %142) /* ty=Tensor[(16, 9, 9), bool] */;
    (%143,)
  };
  %144(%var_4436) /* ty=(Tensor[(16, 9, 9), bool],) */
}

def @func_4242(%var_4240: Tensor[(9, 15, 15), int16], %var_4241: Tensor[(9, 15, 15), int16]) -> (Tensor[(9, 15, 15), bool],) {
  %150 = fn (%var_4232: Tensor[(9, 15, 15), int16], %var_4233: Tensor[(9, 15, 15), int16]) -> (Tensor[(9, 15, 15), bool],) {
    %145 = cast(%var_4233, dtype="bool") /* ty=Tensor[(9, 15, 15), bool] */;
    %146 = shape_of(%var_4232, dtype="int32") /* ty=Tensor[(3), int32] */;
    %147 = cast(%var_4232, dtype="bool") /* ty=Tensor[(9, 15, 15), bool] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %149 = greater(%147, %148) /* ty=Tensor[(9, 15, 15), bool] */;
    (%149,)
  };
  %150(%var_4240, %var_4241) /* ty=(Tensor[(9, 15, 15), bool],) */
}

def @func_4154() -> (Tensor[(7, 7, 1), float64],) {
  %151 = @func_3833() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %152 = %151.0;
  (%152,)
}

def @func_5264() -> (Tensor[(14, 9, ?), float64], Tensor[(7, 7, 126), float64]) {
  %153 = cast(meta[relay.Constant][16] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %154 = cast(meta[relay.Constant][16] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %155 = reshape(%153, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %156 = reshape(%154, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %157 = @func_1677(%155, %156) /* ty=Tensor[(14, 9, ?), int32] */;
  %158 = cast(meta[relay.Constant][16] /* ty=Tensor[(126), int32] */, dtype="float64") /* ty=Tensor[(126), float64] */;
  %159 = shape_of(%157, dtype="int32") /* ty=Tensor[(3), int32] */;
  %160 = cast(%157, dtype="float64") /* ty=Tensor[(14, 9, ?), float64] */;
  %161 = dyn.reshape(%158, %159, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %162 = @func_5148() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %163 = %162.0;
  %164 = cast(%163, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
  %165 = cast(meta[relay.Constant][16] /* ty=Tensor[(126), int32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %166 = power(%164, %165) /* ty=Tensor[(7, 7, 126), float32] */;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(7, 7, 126), float64] */;
  %168 = floor_mod(%160, %161) /* ty=Tensor[(14, 9, ?), float64] */;
  %169 = atanh(%167) /* ty=Tensor[(7, 7, 126), float64] */;
  (%168, %169)
}

def @func_1233(%var_1231: Tensor[(420), float64], %var_1232: Tensor[(110, 10), bool]) -> (Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) {
  %189 = fn (%var_1210: Tensor[(420), float64], %var_1220: Tensor[(110, 10), bool]) -> (Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) {
    %170 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 15, 14), float64] */, dtype="float64") /* ty=Tensor[(11, 15, 14), float64] */;
    %171 = log2(%170) /* ty=Tensor[(11, 15, 14), float64] */;
    %172 = cast(%171, dtype="float64") /* ty=Tensor[(11, 15, 14), float64] */;
    %173 = cast(%var_1210, dtype="float64") /* ty=Tensor[(420), float64] */;
    %174 = reshape(%173, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
    %175 = @func_573(%174) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
    %176 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 15, 14), float64] */, dtype="uint32") /* ty=Tensor[(11, 15, 14), uint32] */;
    %177 = shape_of(%171, dtype="int32") /* ty=Tensor[(3), int32] */;
    %178 = cast(%171, dtype="uint32") /* ty=Tensor[(11, 15, 14), uint32] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %180 = cast(%var_1220, dtype="bool") /* ty=Tensor[(110, 10), bool] */;
    %181 = cast(%var_1220, dtype="bool") /* ty=Tensor[(110, 10), bool] */;
    %182 = reshape(%180, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
    %183 = reshape(%181, newshape=[10, 11, 10]) /* ty=Tensor[(10, 11, 10), bool] */;
    %184 = @func_64(%182, %183) /* ty=(Tensor[(10, 11, 10), bool],) */;
    %185 = sqrt(%172) /* ty=Tensor[(11, 15, 14), float64] */;
    %186 = %175.0;
    %187 = bitwise_xor(%178, %179) /* ty=Tensor[(11, 15, 14), uint32] */;
    %188 = %184.0;
    (%185, %186, %var_1210, %187, %188, %var_1220)
  };
  %189(%var_1231, %var_1232) /* ty=(Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) */
}

def @func_5293() -> (Tensor[(7, 7, 1), float64],) {
  %190 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %191 = %190.0;
  (%191,)
}

def @main(%var_6294: Tensor[(7, 7, 2), float64]) -> (Tensor[(7, 7, ?), int32], Tensor[(7, 7, 2), bool]) {
  %192 = @func_5712() /* ty=(Tensor[(7, 7, ?), float64],) */;
  %193 = %192.0;
  %194 = @func_6250() /* ty=Tensor[(7, 7, 1), float64] */;
  %195 = cast(%194, dtype="int32") /* ty=Tensor[(7, 7, 1), int32] */;
  %196 = shape_of(%193, dtype="int32") /* ty=Tensor[(3), int32] */;
  %197 = cast(%193, dtype="int32") /* ty=Tensor[(7, 7, ?), int32] */;
  %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %199 = cast(%194, dtype="bool") /* ty=Tensor[(7, 7, 1), bool] */;
  %200 = cast(%var_6294, dtype="bool") /* ty=Tensor[(7, 7, 2), bool] */;
  %201 = maximum(%197, %198) /* ty=Tensor[(7, 7, ?), int32] */;
  %202 = less_equal(%199, %200) /* ty=Tensor[(7, 7, 2), bool] */;
  (%201, %202)
}

def @func_3130(%var_3128: Tensor[(16, 7, 8), float32]) -> (Tensor[(16, 7, 8), float32], Tensor[(16, 7, 8), int32]) {
  @func_3127(%var_3128) /* ty=(Tensor[(16, 7, 8), float32], Tensor[(16, 7, 8), int32]) */
}

def @func_497(%var_495: Tensor[(5, 2, 11), int32], %var_496: Tensor[(5, 2, 11), int32]) -> (Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) {
  @func_493(%var_495, %var_496) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */
}

def @func_4667(%var_4665: Tensor[(7, 7, 4), float64]) -> (Tensor[(7, 7, 4), int32], Tensor[(8, 8, 4), bool], Tensor[(256), int64]) {
  @func_4664(%var_4665) /* ty=(Tensor[(7, 7, 4), int32], Tensor[(8, 8, 4), bool], Tensor[(256), int64]) */
}

def @func_5114() -> (Tensor[(7, 7, 1), float64],) {
  %205 = fn () -> (Tensor[(7, 7, 1), float64],) {
    %203 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %204 = %203.0;
    (%204,)
  };
  %205() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_1612(%var_1610: Tensor[(12, 8, 9), float64], %var_1611: Tensor[(12, 8, 9), float64]) -> (Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) {
  %218 = fn (%var_1566: Tensor[(12, 8, 9), float64], %var_1595: Tensor[(12, 8, 9), float64]) -> (Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) {
    %206 = cast(%var_1566, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
    %207 = cosh(%206) /* ty=Tensor[(12, 8, 9), float64] */;
    %208 = cast(%var_1566, dtype="int64") /* ty=Tensor[(12, 8, 9), int64] */;
    %209 = shape_of(%207, dtype="int32") /* ty=Tensor[(3), int32] */;
    %210 = cast(%207, dtype="int64") /* ty=Tensor[(12, 8, 9), int64] */;
    %211 = dyn.reshape(%208, %209, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %212 = cast(%var_1595, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
    %213 = shape_of(%var_1566, dtype="int32") /* ty=Tensor[(3), int32] */;
    %214 = cast(%var_1566, dtype="float32") /* ty=Tensor[(12, 8, 9), float32] */;
    %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %216 = multiply(%210, %211) /* ty=Tensor[(12, 8, 9), int64] */;
    %217 = subtract(%214, %215) /* ty=Tensor[(12, 8, 9), float32] */;
    (%216, %217)
  };
  %218(%var_1610, %var_1611) /* ty=(Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) */
}

def @func_2648(%var_2646: Tensor[(6, 11, 13), float32], %var_2647: Tensor[(864), float64]) -> (Tensor[(12, 8, 9), float32], Tensor[(864), float64], Tensor[(6, 11, 13), bool], Tensor[(12, 8, 9), float32]) {
  %243 = fn (%var_2615: Tensor[(6, 11, 13), float32], %var_2632: Tensor[(864), float64]) -> (Tensor[(12, 8, 9), float32], Tensor[(864), float64], Tensor[(6, 11, 13), bool], Tensor[(12, 8, 9), float32]) {
    %219 = cast(%var_2632, dtype="float64") /* ty=Tensor[(864), float64] */;
    %220 = cast(%var_2632, dtype="float64") /* ty=Tensor[(864), float64] */;
    %221 = reshape(%219, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
    %222 = reshape(%220, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
    %223 = @func_1609(%221, %222) /* ty=(Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) */;
    %224 = cast(%var_2615, dtype="float32") /* ty=Tensor[(6, 11, 13), float32] */;
    %225 = asin(%224) /* ty=Tensor[(6, 11, 13), float32] */;
    %226 = cast(%var_2615, dtype="uint32") /* ty=Tensor[(6, 11, 13), uint32] */;
    %227 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%225, dtype="uint32") /* ty=Tensor[(6, 11, 13), uint32] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %230 = maximum(%228, %229) /* ty=Tensor[(6, 11, 13), uint32] */;
    %231 = cast(%230, dtype="bool") /* ty=Tensor[(6, 11, 13), bool] */;
    %232 = shape_of(%225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %233 = cast(%225, dtype="bool") /* ty=Tensor[(6, 11, 13), bool] */;
    %234 = dyn.reshape(%231, %232, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %235 = cast(%var_2632, dtype="float64") /* ty=Tensor[(864), float64] */;
    %236 = %223.1;
    %237 = cast(%236, dtype="float64") /* ty=Tensor[(12, 8, 9), float64] */;
    %238 = reshape(%235, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
    %239 = reshape(%237, newshape=[12, 8, 9]) /* ty=Tensor[(12, 8, 9), float64] */;
    %240 = @func_1609(%238, %239) /* ty=(Tensor[(12, 8, 9), int64], Tensor[(12, 8, 9), float32]) */;
    %241 = greater(%233, %234) /* ty=Tensor[(6, 11, 13), bool] */;
    %242 = %240.1;
    (%236, %var_2632, %241, %242)
  };
  %243(%var_2646, %var_2647) /* ty=(Tensor[(12, 8, 9), float32], Tensor[(864), float64], Tensor[(6, 11, 13), bool], Tensor[(12, 8, 9), float32]) */
}

def @func_3807() -> (Tensor[(7, 7, 1), float64],) {
  %244 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
  %245 = cast(%244, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
  %246 = sinh(%245) /* ty=Tensor[(7, 7, 1), float64] */;
  (%246,)
}

def @func_6235(%var_6231: Tensor[(1, 10, 9), uint64], %var_6232: Tensor[(8, 10, 9), uint64], %var_6233: Tensor[(1575, 2), int64], %var_6234: Tensor[(110), int32]) -> (Tensor[(8, 10, 9), bool], Tensor[(14, 15, 15), int64], Tensor[(1575, 2), int64], Tensor[(110), int32], Tensor[(5, 2, 11), bool]) {
  @func_6229(%var_6231, %var_6232, %var_6233, %var_6234) /* ty=(Tensor[(8, 10, 9), bool], Tensor[(14, 15, 15), int64], Tensor[(1575, 2), int64], Tensor[(110), int32], Tensor[(5, 2, 11), bool]) */
}

def @func_2739(%var_2737: Tensor[(8, 12, 14), int32], %var_2738: Tensor[(900), uint16]) -> (Tensor[(8, 12, 14), int32], Tensor[(8, 12, 14), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(2, 14, 10), float32], Tensor[(280), float64], Tensor[(900), uint16]) {
  @func_2735(%var_2737, %var_2738) /* ty=(Tensor[(8, 12, 14), int32], Tensor[(8, 12, 14), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(2, 14, 10), float32], Tensor[(280), float64], Tensor[(900), uint16]) */
}

def @func_4993() -> (Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) {
  %251 = fn () -> (Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) {
    %247 = @func_4979() /* ty=(Tensor[(7, 7, ?), float64],) */;
    %248 = @func_3876() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) */;
    %249 = %247.0;
    %250 = %248.0;
    (%249, %250)
  };
  %251() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_904(%var_901: Tensor[(10, 6, 15), uint16], %var_902: Tensor[(110), int32], %var_903: Tensor[(1100), bool]) -> (Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) {
  @func_899(%var_901, %var_902, %var_903) /* ty=(Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) */
}

def @func_4856(%var_4849: Tensor[(12, 3, 10), int8]) -> Tensor[(12, 3, 10), bool] {
  %252 = cast(meta[relay.Constant][18] /* ty=Tensor[(12, 3, 10), int8] */, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %253 = shape_of(%var_4849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %254 = cast(%var_4849, dtype="bool") /* ty=Tensor[(12, 3, 10), bool] */;
  %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%254, %255) /* ty=Tensor[(12, 3, 10), bool] */
}

def @func_64(%var_44: Tensor[(10, 11, 10), bool], %var_45: Tensor[(10, 11, 10), bool]) -> (Tensor[(10, 11, 10), bool],) {
  %256 = cast(%var_45, dtype="bool") /* ty=Tensor[(10, 11, 10), bool] */;
  %257 = shape_of(%var_44, dtype="int32") /* ty=Tensor[(3), int32] */;
  %258 = cast(%var_44, dtype="bool") /* ty=Tensor[(10, 11, 10), bool] */;
  %259 = dyn.reshape(%256, %257, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %260 = logical_and(%258, %259) /* ty=Tensor[(10, 11, 10), bool] */;
  (%260,)
}

def @func_6049(%var_6047: Tensor[(96), float64], %var_6048: Tensor[(378), uint64]) -> (Tensor[(7, 7, 1), float64], Tensor[(3, 2, 16), float64], Tensor[(96), float64], Tensor[(8, 13, 10), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) {
  %278 = fn (%var_6021: Tensor[(96), float64], %var_6029: Tensor[(378), uint64]) -> (Tensor[(7, 7, 1), float64], Tensor[(3, 2, 16), float64], Tensor[(96), float64], Tensor[(8, 13, 10), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) {
    %261 = cast(%var_6021, dtype="float64") /* ty=Tensor[(96), float64] */;
    %262 = reshape(%261, newshape=[3, 2, 16]) /* ty=Tensor[(3, 2, 16), float64] */;
    %263 = @func_4698(%262) /* ty=(Tensor[(3, 2, 16), float64],) */;
    %264 = @func_3876() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) */;
    %265 = %264.0;
    %266 = cast(%265, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
    %267 = cast(%var_6029, dtype="uint64") /* ty=Tensor[(378), uint64] */;
    %268 = cast(%var_6029, dtype="uint64") /* ty=Tensor[(378), uint64] */;
    %269 = cast(%var_6029, dtype="bool") /* ty=Tensor[(378), bool] */;
    %270 = reshape(%267, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
    %271 = reshape(%268, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
    %272 = reshape(%269, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), bool] */;
    %273 = @func_1272(%270, %271, %272) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) */;
    %274 = @func_3755() /* ty=Tensor[(7, 7, 1), float64] */;
    %275 = %263.0;
    %276 = sin(%266) /* ty=Tensor[(8, 13, 10), float64] */;
    %277 = %273.0;
    (%274, %275, %var_6021, %276, %277, %var_6029)
  };
  %278(%var_6047, %var_6048) /* ty=(Tensor[(7, 7, 1), float64], Tensor[(3, 2, 16), float64], Tensor[(96), float64], Tensor[(8, 13, 10), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) */
}

def @func_3061(%var_3046: Tensor[(6, 15, 16), float64]) -> (Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) {
  %279 = cast(%var_3046, dtype="float64") /* ty=Tensor[(6, 15, 16), float64] */;
  %280 = cast(meta[relay.Constant][19] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %281 = cast(meta[relay.Constant][19] /* ty=Tensor[(126), int32] */, dtype="int32") /* ty=Tensor[(126), int32] */;
  %282 = reshape(%280, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %283 = reshape(%281, newshape=[14, 9, 1]) /* ty=Tensor[(14, 9, 1), int32] */;
  %284 = sin(%279) /* ty=Tensor[(6, 15, 16), float64] */;
  %285 = @func_1677(%282, %283) /* ty=Tensor[(14, 9, ?), int32] */;
  (%284, %285, meta[relay.Constant][19] /* ty=Tensor[(126), int32] */)
}

def @func_4845(%var_4843: Tensor[(54, 14), float32], %var_4844: Tensor[(1100, 1), bool]) -> (Tensor[(7, 7, 1), float64], Tensor[(8, 8, 4), int64], Tensor[(420), float64], Tensor[(110), float32], Tensor[(11, 15, 14), float64], Tensor[(54, 14), float32], Tensor[(1100, 1), bool], Tensor[(110), float64]) {
  %306 = fn (%var_4823: Tensor[(54, 14), float32], %var_4824: Tensor[(1100, 1), bool]) -> (Tensor[(7, 7, 1), float64], Tensor[(8, 8, 4), int64], Tensor[(420), float64], Tensor[(110), float32], Tensor[(11, 15, 14), float64], Tensor[(54, 14), float32], Tensor[(1100, 1), bool], Tensor[(110), float64]) {
    %286 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %287 = @func_3822() /* ty=(Tensor[(8, 8, 4), int64],) */;
    %288 = cast(meta[relay.Constant][20] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %289 = reshape(%288, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
    %290 = @func_573(%289) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
    %291 = %290.2;
    %292 = cast(%291, dtype="float32") /* ty=Tensor[(110), float32] */;
    %293 = cast(%var_4823, dtype="float32") /* ty=Tensor[(54, 14), float32] */;
    %294 = cast(meta[relay.Constant][20] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %295 = cast(%var_4824, dtype="bool") /* ty=Tensor[(1100, 1), bool] */;
    %296 = reshape(%293, newshape=[12, 9, 7]) /* ty=Tensor[(12, 9, 7), float32] */;
    %297 = reshape(%294, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %298 = reshape(%295, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
    %299 = @func_2903(%296, %297, %298) /* ty=(Tensor[(12, 9, 7), float32], Tensor[(11, 15, 14), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(110), int32]) */;
    %300 = cast(%291, dtype="float64") /* ty=Tensor[(110), float64] */;
    %301 = %286.0;
    %302 = %287.0;
    %303 = log2(%292) /* ty=Tensor[(110), float32] */;
    %304 = %299.1;
    %305 = sinh(%300) /* ty=Tensor[(110), float64] */;
    (%301, %302, meta[relay.Constant][20] /* ty=Tensor[(420), float64] */, %303, %304, %var_4823, %var_4824, %305)
  };
  %306(%var_4843, %var_4844) /* ty=(Tensor[(7, 7, 1), float64], Tensor[(8, 8, 4), int64], Tensor[(420), float64], Tensor[(110), float32], Tensor[(11, 15, 14), float64], Tensor[(54, 14), float32], Tensor[(1100, 1), bool], Tensor[(110), float64]) */
}

def @func_3809() -> (Tensor[(7, 7, 1), float64],) {
  @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_5789() -> (Tensor[(7, 7, 1), float64], Tensor[(7, 7, ?), float64]) {
  %310 = fn () -> (Tensor[(7, 7, 1), float64], Tensor[(7, 7, ?), float64]) {
    %307 = @func_5710() /* ty=(Tensor[(7, 7, ?), float64],) */;
    %308 = @func_5469() /* ty=Tensor[(7, 7, 1), float64] */;
    %309 = %307.0;
    (%308, %309)
  };
  %310() /* ty=(Tensor[(7, 7, 1), float64], Tensor[(7, 7, ?), float64]) */
}

def @func_2050(%var_2017: Tensor[(2, 14, 10), float64], %var_2018: Tensor[(2, 14, 10), float64], %var_2038: Tensor[(900), uint16], %var_2040: Tensor[(1100), bool]) -> (Tensor[(2, 14, 10), float32], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(11, 10), int32], Tensor[(1100), bool]) {
  %311 = cast(%var_2018, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %312 = shape_of(%var_2017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%var_2017, dtype="bool") /* ty=Tensor[(2, 14, 10), bool] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %315 = greater_equal(%313, %314) /* ty=Tensor[(2, 14, 10), bool] */;
  %316 = cast(%var_2018, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
  %317 = shape_of(%var_2017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %318 = cast(%var_2017, dtype="float64") /* ty=Tensor[(2, 14, 10), float64] */;
  %319 = dyn.reshape(%316, %317, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %320 = add(%318, %319) /* ty=Tensor[(2, 14, 10), float64] */;
  %321 = cast(%320, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %322 = shape_of(%315, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(%315, dtype="float32") /* ty=Tensor[(2, 14, 10), float32] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %325 = cast(%var_2038, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %326 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 10), int32] */, dtype="int32") /* ty=Tensor[(11, 10), int32] */;
  %327 = cast(%var_2040, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %328 = reshape(%325, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint16] */;
  %329 = reshape(%326, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %330 = reshape(%327, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
  %331 = @func_899(%328, %329, %330) /* ty=(Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) */;
  %332 = floor_divide(%323, %324) /* ty=Tensor[(2, 14, 10), float32] */;
  %333 = %331.6;
  (%332, %333, %var_2038, meta[relay.Constant][21] /* ty=Tensor[(11, 10), int32] */, %var_2040)
}

def @func_3834() -> (Tensor[(7, 7, 1), float64],) {
  %336 = fn () -> (Tensor[(7, 7, 1), float64],) {
    %334 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %335 = %334.0;
    (%335,)
  };
  %336() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_5587() -> (Tensor[(7, 7, 4), bool], Tensor[(16, 9, 9), bool], Tensor[(2, 648), uint8]) {
  @func_5585() /* ty=(Tensor[(7, 7, 4), bool], Tensor[(16, 9, 9), bool], Tensor[(2, 648), uint8]) */
}

def @func_3267(%var_3265: Tensor[(15, 10, 7), int8], %var_3266: Tensor[(900), uint16]) -> (Tensor[(15, 10, 7), int8], Tensor[(2, 14, 10), float32], Tensor[(336, 4), int32], Tensor[(900), uint16]) {
  @func_3263(%var_3265, %var_3266) /* ty=(Tensor[(15, 10, 7), int8], Tensor[(2, 14, 10), float32], Tensor[(336, 4), int32], Tensor[(900), uint16]) */
}

def @func_1142(%var_1140: Tensor[(13, 10, 9), uint8], %var_1141: Tensor[(900), uint16]) -> (Tensor[(13, 10, 9), bool], Tensor[(10, 11, 10), bool], Tensor[(900), uint16], Tensor[(110), int32], Tensor[(1100), bool]) {
  %350 = fn (%var_1120: Tensor[(13, 10, 9), uint8], %var_1126: Tensor[(900), uint16]) -> (Tensor[(13, 10, 9), bool], Tensor[(10, 11, 10), bool], Tensor[(900), uint16], Tensor[(110), int32], Tensor[(1100), bool]) {
    %337 = cast(%var_1120, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
    %338 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(13, 10, 9), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %339 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 10, 9), uint8] */, dtype="bool") /* ty=Tensor[(13, 10, 9), bool] */;
    %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %341 = cast(%var_1126, dtype="uint16") /* ty=Tensor[(900), uint16] */;
    %342 = cast(meta[relay.Constant][23] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
    %343 = cast(meta[relay.Constant][24] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
    %344 = reshape(%341, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint16] */;
    %345 = reshape(%342, newshape=[110]) /* ty=Tensor[(110), int32] */;
    %346 = reshape(%343, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
    %347 = @func_899(%344, %345, %346) /* ty=(Tensor[(10, 6, 15), float32], Tensor[(110), int32], Tensor[(5, 2, 11), float64], Tensor[(5, 2, 11), float32], Tensor[(10, 11, 10), bool], Tensor[(1100), bool], Tensor[(5, 2, 11), float32]) */;
    %348 = greater(%339, %340) /* ty=Tensor[(13, 10, 9), bool] */;
    %349 = %347.4;
    (%348, %349, %var_1126, meta[relay.Constant][23] /* ty=Tensor[(110), int32] */, meta[relay.Constant][24] /* ty=Tensor[(1100), bool] */)
  };
  %350(%var_1140, %var_1141) /* ty=(Tensor[(13, 10, 9), bool], Tensor[(10, 11, 10), bool], Tensor[(900), uint16], Tensor[(110), int32], Tensor[(1100), bool]) */
}

def @func_3925(%var_3924: Tensor[(7, 7, 1), float64]) -> Tensor[(7, 7, ?), float64] {
  %357 = fn (%var_3918: Tensor[(7, 7, 1), float64]) -> Tensor[(7, 7, ?), float64] {
    %351 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %352 = %351.0;
    %353 = cast(%var_3918, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
    %354 = shape_of(%352, dtype="int32") /* ty=Tensor[(3), int32] */;
    %355 = cast(%352, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
    %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%355, %356) /* ty=Tensor[(7, 7, ?), float64] */
  };
  %357(%var_3924) /* ty=Tensor[(7, 7, ?), float64] */
}

def @func_6138() -> Tensor[(1100), bool] {
  %358 = fn () -> Tensor[(1100), bool] {
    @func_4418() /* ty=Tensor[(1100), bool] */
  };
  %358() /* ty=Tensor[(1100), bool] */
}

def @func_493(%var_443: Tensor[(5, 2, 11), int32], %var_444: Tensor[(5, 2, 11), int32]) -> (Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) {
  %359 = cast(%var_444, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %360 = shape_of(%var_443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_443, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = less(%361, %362) /* ty=Tensor[(5, 2, 11), bool] */;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %365 = shape_of(%var_443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%var_443, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %368 = cast(%var_444, dtype="float64") /* ty=Tensor[(5, 2, 11), float64] */;
  %369 = sigmoid(%368) /* ty=Tensor[(5, 2, 11), float64] */;
  %370 = cast(%369, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %371 = shape_of(%var_443, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%var_443, dtype="bool") /* ty=Tensor[(5, 2, 11), bool] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %374 = mod(%366, %367) /* ty=Tensor[(5, 2, 11), float32] */;
  %375 = logical_or(%372, %373) /* ty=Tensor[(5, 2, 11), bool] */;
  (%374, %375)
}

def @func_4405(%var_4388: uint16, %var_4389: Tensor[(15, 9, 16), uint16]) -> (Tensor[(15, 9, 16), bool], Tensor[(15, 9, 16), float32]) {
  %376 = cast(%var_4388, dtype="bool") /* ty=bool */;
  %377 = cast(%var_4389, dtype="bool") /* ty=Tensor[(15, 9, 16), bool] */;
  %378 = cast(%var_4389, dtype="float32") /* ty=Tensor[(15, 9, 16), float32] */;
  %379 = greater(%376, %377) /* ty=Tensor[(15, 9, 16), bool] */;
  %380 = sinh(%378) /* ty=Tensor[(15, 9, 16), float32] */;
  (%379, %380)
}

def @func_5983(%var_5982: Tensor[(7, 7, 420), float64]) -> (Tensor[(7, 7, 1), float64], Tensor[(7, 7, 420), uint32], Tensor[(7, 7, 420), float32], Tensor[(7, 7, 420), int16], Tensor[(16, 9, 9), bool], Tensor[(7, 7, 1), float64]) {
  %418 = fn (%var_5913: Tensor[(7, 7, 420), float64]) -> (Tensor[(7, 7, 1), float64], Tensor[(7, 7, 420), uint32], Tensor[(7, 7, 420), float32], Tensor[(7, 7, 420), int16], Tensor[(16, 9, 9), bool], Tensor[(7, 7, 1), float64]) {
    %381 = @func_5148() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %382 = @func_4006() /* ty=(Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) */;
    %383 = %382.2;
    %384 = cast(%383, dtype="float64") /* ty=Tensor[(7, 7, 420), float64] */;
    %385 = cos(%384) /* ty=Tensor[(7, 7, 420), float64] */;
    %386 = cast(%385, dtype="float64") /* ty=Tensor[(7, 7, 420), float64] */;
    %387 = sqrt(%386) /* ty=Tensor[(7, 7, 420), float64] */;
    %388 = cast(%387, dtype="float32") /* ty=Tensor[(7, 7, 420), float32] */;
    %389 = atanh(%388) /* ty=Tensor[(7, 7, 420), float32] */;
    %390 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 7, 420), float32] */, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
    %391 = shape_of(%389, dtype="int32") /* ty=Tensor[(3), int32] */;
    %392 = cast(%389, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %394 = logical_and(%392, %393) /* ty=Tensor[(7, 7, 420), bool] */;
    %395 = cast(%394, dtype="uint32") /* ty=Tensor[(7, 7, 420), uint32] */;
    %396 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
    %397 = cast(%387, dtype="uint32") /* ty=Tensor[(7, 7, 420), uint32] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %399 = cast(%387, dtype="float32") /* ty=Tensor[(7, 7, 420), float32] */;
    %400 = cast(%383, dtype="float64") /* ty=Tensor[(7, 7, 420), float64] */;
    %401 = tan(%400) /* ty=Tensor[(7, 7, 420), float64] */;
    %402 = cast(%var_5913, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
    %403 = shape_of(%401, dtype="int32") /* ty=Tensor[(3), int32] */;
    %404 = cast(%401, dtype="bool") /* ty=Tensor[(7, 7, 420), bool] */;
    %405 = dyn.reshape(%402, %403, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %406 = greater_equal(%404, %405) /* ty=Tensor[(7, 7, 420), bool] */;
    %407 = cast(%406, dtype="int16") /* ty=Tensor[(7, 7, 420), int16] */;
    %408 = shape_of(%394, dtype="int32") /* ty=Tensor[(3), int32] */;
    %409 = cast(%394, dtype="int16") /* ty=Tensor[(7, 7, 420), int16] */;
    %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %411 = @func_5585() /* ty=(Tensor[(7, 7, 4), bool], Tensor[(16, 9, 9), bool], Tensor[(2, 648), uint8]) */;
    %412 = %381.0;
    %413 = multiply(%397, %398) /* ty=Tensor[(7, 7, 420), uint32] */;
    %414 = erf(%399) /* ty=Tensor[(7, 7, 420), float32] */;
    %415 = right_shift(%409, %410) /* ty=Tensor[(7, 7, 420), int16] */;
    %416 = %411.1;
    %417 = @func_4739() /* ty=Tensor[(7, 7, 1), float64] */;
    (%412, %413, %414, %415, %416, %417)
  };
  %418(%var_5982) /* ty=(Tensor[(7, 7, 1), float64], Tensor[(7, 7, 420), uint32], Tensor[(7, 7, 420), float32], Tensor[(7, 7, 420), int16], Tensor[(16, 9, 9), bool], Tensor[(7, 7, 1), float64]) */
}

def @func_1936(%var_1931: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32],) {
  %419 = cast(%var_1931, dtype="float32") /* ty=Tensor[(11, 14, 13), float32] */;
  %420 = cos(%419) /* ty=Tensor[(11, 14, 13), float32] */;
  (%420,)
}

def @func_6083() -> Tensor[(7, 7, 1), float64] {
  @func_5469() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_5768(%var_5732: Tensor[(420), float64]) -> (Tensor[(7, 7, 1), float64], Tensor[(420), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 1), float64]) {
  %421 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %422 = cast(%var_5732, dtype="float64") /* ty=Tensor[(420), float64] */;
  %423 = reshape(%422, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
  %424 = @func_573(%423) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %425 = %424.1;
  %426 = cast(meta[relay.Constant][26] /* ty=Tensor[(5, 2, 11), float32] */, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %427 = shape_of(%425, dtype="int32") /* ty=Tensor[(3), int32] */;
  %428 = cast(%425, dtype="float32") /* ty=Tensor[(5, 2, 11), float32] */;
  %429 = dyn.reshape(%426, %427, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %430 = @func_5293() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %431 = %421.0;
  %432 = divide(%428, %429) /* ty=Tensor[(5, 2, 11), float32] */;
  %433 = %430.0;
  (%431, %var_5732, %432, %433)
}

def @func_2735(%var_2679: Tensor[(8, 12, 14), int32], %var_2709: Tensor[(900), uint16]) -> (Tensor[(8, 12, 14), int32], Tensor[(8, 12, 14), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(2, 14, 10), float32], Tensor[(280), float64], Tensor[(900), uint16]) {
  %434 = cast(%var_2679, dtype="int32") /* ty=Tensor[(8, 12, 14), int32] */;
  %435 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(8, 12, 14), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 12, 14), int32] */, dtype="int32") /* ty=Tensor[(8, 12, 14), int32] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %438 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 12, 14), int32] */, dtype="float64") /* ty=Tensor[(8, 12, 14), float64] */;
  %439 = cos(%438) /* ty=Tensor[(8, 12, 14), float64] */;
  %440 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 12, 14), int32] */, dtype="bool") /* ty=Tensor[(8, 12, 14), bool] */;
  %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%439, dtype="bool") /* ty=Tensor[(8, 12, 14), bool] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %444 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %445 = cast(meta[relay.Constant][29] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %446 = reshape(%444, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %447 = reshape(%445, newshape=[110, 10]) /* ty=Tensor[(110, 10), bool] */;
  %448 = @func_1230(%446, %447) /* ty=(Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) */;
  %449 = cast(meta[relay.Constant][30] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %450 = cast(meta[relay.Constant][30] /* ty=Tensor[(280), float64] */, dtype="float64") /* ty=Tensor[(280), float64] */;
  %451 = cast(%var_2709, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %452 = cast(meta[relay.Constant][29] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
  %453 = reshape(%449, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %454 = reshape(%450, newshape=[2, 14, 10]) /* ty=Tensor[(2, 14, 10), float64] */;
  %455 = reshape(%451, newshape=[900]) /* ty=Tensor[(900), uint16] */;
  %456 = reshape(%452, newshape=[1100]) /* ty=Tensor[(1100), bool] */;
  %457 = @func_2050(%453, %454, %455, %456) /* ty=(Tensor[(2, 14, 10), float32], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(11, 10), int32], Tensor[(1100), bool]) */;
  %458 = logical_xor(%436, %437) /* ty=Tensor[(8, 12, 14), int32] */;
  %459 = logical_or(%442, %443) /* ty=Tensor[(8, 12, 14), bool] */;
  %460 = %448.2;
  %461 = %457.0;
  (%458, %459, %460, meta[relay.Constant][28] /* ty=Tensor[(420), float64] */, meta[relay.Constant][29] /* ty=Tensor[(1100), bool] */, %461, meta[relay.Constant][30] /* ty=Tensor[(280), float64] */, %var_2709)
}

def @func_4859(%var_4857: Tensor[(12, 3, 10), int8]) -> Tensor[(12, 3, 10), bool] {
  @func_4856(%var_4857) /* ty=Tensor[(12, 3, 10), bool] */
}

def @func_6105() -> Tensor[(7, 7, 1), float64] {
  %462 = @func_4370() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %462.0
}

def @func_1677(%var_1669: Tensor[(14, 9, 1), int32], %var_1670: Tensor[(14, 9, 1), int32]) -> Tensor[(14, 9, ?), int32] {
  %463 = cast(%var_1670, dtype="int32") /* ty=Tensor[(14, 9, 1), int32] */;
  %464 = shape_of(%var_1669, dtype="int32") /* ty=Tensor[(3), int32] */;
  %465 = cast(%var_1669, dtype="int32") /* ty=Tensor[(14, 9, 1), int32] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  minimum(%465, %466) /* ty=Tensor[(14, 9, ?), int32] */
}

def @func_575(%var_574: Tensor[(15, 2, 14), float64]) -> (Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) {
  %478 = fn (%var_558: Tensor[(15, 2, 14), float64]) -> (Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) {
    %467 = cast(%var_558, dtype="float64") /* ty=Tensor[(15, 2, 14), float64] */;
    %468 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(15, 2, 14), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %469 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 2, 14), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 14), float64] */;
    %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %471 = cast(meta[relay.Constant][32] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
    %472 = cast(meta[relay.Constant][32] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
    %473 = reshape(%471, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
    %474 = reshape(%472, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
    %475 = @func_493(%473, %474) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
    %476 = subtract(%469, %470) /* ty=Tensor[(15, 2, 14), float64] */;
    %477 = %475.0;
    (%476, %477, meta[relay.Constant][32] /* ty=Tensor[(110), int32] */)
  };
  %478(%var_574) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */
}

def @func_5149() -> (Tensor[(7, 7, 1), float64],) {
  %480 = fn () -> (Tensor[(7, 7, 1), float64],) {
    %479 = @func_4739() /* ty=Tensor[(7, 7, 1), float64] */;
    (%479,)
  };
  %480() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_4349(%var_4326: Tensor[(8, 8, 4), int64]) -> Tensor[(8, 8, 4), bool] {
  %481 = @func_3822() /* ty=(Tensor[(8, 8, 4), int64],) */;
  %482 = %481.0;
  %483 = cast(%var_4326, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="bool") /* ty=Tensor[(8, 8, 4), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%485, %486) /* ty=Tensor[(8, 8, 4), bool] */
}

def @func_4518() -> (Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float64]) {
  @func_4516() /* ty=(Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float32], Tensor[(7, 7, 1), float64]) */
}

def @func_3703(%var_3702: Tensor[(110), int32]) -> (Tensor[(7, 7, 1), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 110), uint64]) {
  %500 = fn (%var_3683: Tensor[(110), int32]) -> (Tensor[(7, 7, 1), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 110), uint64]) {
    %487 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %488 = cast(%var_3683, dtype="int32") /* ty=Tensor[(110), int32] */;
    %489 = cast(%var_3683, dtype="int32") /* ty=Tensor[(110), int32] */;
    %490 = reshape(%488, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
    %491 = reshape(%489, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
    %492 = @func_493(%490, %491) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
    %493 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %494 = %493.0;
    %495 = cast(%494, dtype="uint64") /* ty=Tensor[(7, 7, 1), uint64] */;
    %496 = cast(%var_3683, dtype="uint64") /* ty=Tensor[(110), uint64] */;
    %497 = %487.0;
    %498 = %492.0;
    %499 = bitwise_and(%495, %496) /* ty=Tensor[(7, 7, 110), uint64] */;
    (%497, %498, %499)
  };
  %500(%var_3702) /* ty=(Tensor[(7, 7, 1), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 110), uint64]) */
}

def @func_3590() -> (Tensor[(7, 7, 1), float64],) {
  %505 = fn () -> (Tensor[(7, 7, 1), float64],) {
    %501 = cast(meta[relay.Constant][33] /* ty=Tensor[(7, 7, 1), float64] */, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
    %502 = sigmoid(%501) /* ty=Tensor[(7, 7, 1), float64] */;
    %503 = cast(%502, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
    %504 = sin(%503) /* ty=Tensor[(7, 7, 1), float64] */;
    (%504,)
  };
  %505() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_4007() -> (Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) {
  %522 = fn () -> (Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) {
    %506 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %507 = cast(meta[relay.Constant][35] /* ty=Tensor[(1100), bool] */, dtype="bool") /* ty=Tensor[(1100), bool] */;
    %508 = reshape(%506, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %509 = reshape(%507, newshape=[110, 10]) /* ty=Tensor[(110, 10), bool] */;
    %510 = @func_1230(%508, %509) /* ty=(Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) */;
    %511 = @func_3833() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %512 = %511.0;
    %513 = cast(%512, dtype="int16") /* ty=Tensor[(7, 7, 1), int16] */;
    %514 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), float64] */, dtype="int16") /* ty=Tensor[(420), int16] */;
    %515 = cast(meta[relay.Constant][34] /* ty=Tensor[(420), float64] */, dtype="int16") /* ty=Tensor[(420), int16] */;
    %516 = cast(%512, dtype="int16") /* ty=Tensor[(7, 7, 1), int16] */;
    %517 = bitwise_xor(%515, %516) /* ty=Tensor[(7, 7, 420), int16] */;
    %518 = cast(%517, dtype="float32") /* ty=Tensor[(7, 7, 420), float32] */;
    %519 = %510.5;
    %520 = add(%513, %514) /* ty=Tensor[(7, 7, 420), int16] */;
    %521 = sigmoid(%518) /* ty=Tensor[(7, 7, 420), float32] */;
    (%519, meta[relay.Constant][35] /* ty=Tensor[(1100), bool] */, %520, %521)
  };
  %522() /* ty=(Tensor[(110, 10), bool], Tensor[(1100), bool], Tensor[(7, 7, 420), int16], Tensor[(7, 7, 420), float32]) */
}

def @func_2907(%var_2904: Tensor[(12, 9, 7), float32], %var_2905: Tensor[(420), float64], %var_2906: Tensor[(1100), bool]) -> (Tensor[(12, 9, 7), float32], Tensor[(11, 15, 14), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(110), int32]) {
  %535 = fn (%var_2876: Tensor[(12, 9, 7), float32], %var_2884: Tensor[(420), float64], %var_2885: Tensor[(1100), bool]) -> (Tensor[(12, 9, 7), float32], Tensor[(11, 15, 14), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(110), int32]) {
    %523 = cast(%var_2876, dtype="float32") /* ty=Tensor[(12, 9, 7), float32] */;
    %524 = cast(%var_2884, dtype="float64") /* ty=Tensor[(420), float64] */;
    %525 = cast(%var_2885, dtype="bool") /* ty=Tensor[(1100), bool] */;
    %526 = reshape(%524, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %527 = reshape(%525, newshape=[110, 10]) /* ty=Tensor[(110, 10), bool] */;
    %528 = @func_1230(%526, %527) /* ty=(Tensor[(11, 15, 14), float64], Tensor[(15, 2, 14), float64], Tensor[(420), float64], Tensor[(11, 15, 14), uint32], Tensor[(10, 11, 10), bool], Tensor[(110, 10), bool]) */;
    %529 = cast(%var_2884, dtype="float64") /* ty=Tensor[(420), float64] */;
    %530 = reshape(%529, newshape=[15, 2, 14]) /* ty=Tensor[(15, 2, 14), float64] */;
    %531 = @func_573(%530) /* ty=(Tensor[(15, 2, 14), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
    %532 = acos(%523) /* ty=Tensor[(12, 9, 7), float32] */;
    %533 = %528.0;
    %534 = %531.2;
    (%532, %533, %var_2884, %var_2885, %534)
  };
  %535(%var_2904, %var_2905, %var_2906) /* ty=(Tensor[(12, 9, 7), float32], Tensor[(11, 15, 14), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(110), int32]) */
}

def @func_4980() -> (Tensor[(7, 7, ?), float64],) {
  %538 = fn () -> (Tensor[(7, 7, ?), float64],) {
    %536 = @func_4112() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) */;
    %537 = %536.0;
    (%537,)
  };
  %538() /* ty=(Tensor[(7, 7, ?), float64],) */
}

def @func_4700(%var_4699: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), float64],) {
  %541 = fn (%var_4684: Tensor[(3, 2, 16), float64]) -> (Tensor[(3, 2, 16), float64],) {
    %539 = cast(%var_4684, dtype="float64") /* ty=Tensor[(3, 2, 16), float64] */;
    %540 = rsqrt(%539) /* ty=Tensor[(3, 2, 16), float64] */;
    (%540,)
  };
  %541(%var_4699) /* ty=(Tensor[(3, 2, 16), float64],) */
}

def @func_5399(%var_5396: Tensor[(8, 13, 10), float64], %var_5397: Tensor[(880), int64], %var_5398: Tensor[(180, 8), float64]) -> (Tensor[(7, 7, ?), float32], Tensor[(1040), uint64], Tensor[(8, 13, 10), bool], Tensor[(126), int32], Tensor[(880), int64], Tensor[(180, 8), float64], Tensor[(8, 13, 10), float32]) {
  %570 = fn (%var_5374: Tensor[(8, 13, 10), float64], %var_5385: Tensor[(880), int64], %var_5386: Tensor[(180, 8), float64]) -> (Tensor[(7, 7, ?), float32], Tensor[(1040), uint64], Tensor[(8, 13, 10), bool], Tensor[(126), int32], Tensor[(880), int64], Tensor[(180, 8), float64], Tensor[(8, 13, 10), float32]) {
    %542 = @func_5070() /* ty=(Tensor[(7, 7, ?), float32],) */;
    %543 = cast(meta[relay.Constant][36] /* ty=Tensor[(1040), uint64] */, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
    %544 = reshape(%543, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), uint64] */;
    %545 = @func_2407(%544) /* ty=(Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) */;
    %546 = %545.0;
    %547 = cast(%546, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
    %548 = log(%547) /* ty=Tensor[(8, 13, 10), float64] */;
    %549 = cast(%546, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %550 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %551 = cast(%548, dtype="bool") /* ty=Tensor[(8, 13, 10), bool] */;
    %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %553 = cast(%var_5385, dtype="int64") /* ty=Tensor[(880), int64] */;
    %554 = cast(%var_5385, dtype="int64") /* ty=Tensor[(880), int64] */;
    %555 = cast(%var_5386, dtype="float64") /* ty=Tensor[(180, 8), float64] */;
    %556 = reshape(%553, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), int64] */;
    %557 = reshape(%554, newshape=[11, 5, 16]) /* ty=Tensor[(11, 5, 16), int64] */;
    %558 = reshape(%555, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
    %559 = @func_3644(%556, %557, %558) /* ty=(Tensor[(11, 5, 16), int64], Tensor[(126), int32], Tensor[(1440), float64], Tensor[(7, 7, 1), float64]) */;
    %560 = cast(%var_5374, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
    %561 = shape_of(%548, dtype="int32") /* ty=Tensor[(3), int32] */;
    %562 = cast(%548, dtype="float64") /* ty=Tensor[(8, 13, 10), float64] */;
    %563 = dyn.reshape(%560, %561, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %564 = power(%562, %563) /* ty=Tensor[(8, 13, 10), float64] */;
    %565 = cast(%564, dtype="float32") /* ty=Tensor[(8, 13, 10), float32] */;
    %566 = %542.0;
    %567 = greater_equal(%551, %552) /* ty=Tensor[(8, 13, 10), bool] */;
    %568 = %559.1;
    %569 = exp(%565) /* ty=Tensor[(8, 13, 10), float32] */;
    (%566, meta[relay.Constant][36] /* ty=Tensor[(1040), uint64] */, %567, %568, %var_5385, %var_5386, %569)
  };
  %570(%var_5396, %var_5397, %var_5398) /* ty=(Tensor[(7, 7, ?), float32], Tensor[(1040), uint64], Tensor[(8, 13, 10), bool], Tensor[(126), int32], Tensor[(880), int64], Tensor[(180, 8), float64], Tensor[(8, 13, 10), float32]) */
}

def @func_3019(%var_2995: Tensor[(7, 1, 6), float32], %var_2996: Tensor[(7, 8, 6), float32]) -> (Tensor[(7, 8, 6), bool], Tensor[(7, 8, 6), float64], Tensor[(6, 9, 7), float64], Tensor[(378), uint64]) {
  %571 = cast(%var_2995, dtype="float32") /* ty=Tensor[(7, 1, 6), float32] */;
  %572 = cast(%var_2996, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %573 = power(%571, %572) /* ty=Tensor[(7, 8, 6), float32] */;
  %574 = cast(%573, dtype="bool") /* ty=Tensor[(7, 8, 6), bool] */;
  %575 = cast(%var_2995, dtype="bool") /* ty=Tensor[(7, 1, 6), bool] */;
  %576 = cast(%573, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %577 = cast(meta[relay.Constant][37] /* ty=Tensor[(378), uint64] */, dtype="uint64") /* ty=Tensor[(378), uint64] */;
  %578 = cast(meta[relay.Constant][37] /* ty=Tensor[(378), uint64] */, dtype="uint64") /* ty=Tensor[(378), uint64] */;
  %579 = cast(meta[relay.Constant][37] /* ty=Tensor[(378), uint64] */, dtype="bool") /* ty=Tensor[(378), bool] */;
  %580 = reshape(%577, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
  %581 = reshape(%578, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), uint64] */;
  %582 = reshape(%579, newshape=[6, 9, 7]) /* ty=Tensor[(6, 9, 7), bool] */;
  %583 = @func_1272(%580, %581, %582) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) */;
  %584 = equal(%574, %575) /* ty=Tensor[(7, 8, 6), bool] */;
  %585 = erf(%576) /* ty=Tensor[(7, 8, 6), float64] */;
  %586 = %583.0;
  (%584, %585, %586, meta[relay.Constant][37] /* ty=Tensor[(378), uint64] */)
}

def @func_3877() -> (Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) {
  %600 = fn () -> (Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) {
    %587 = cast(meta[relay.Constant][38] /* ty=Tensor[(1040), uint64] */, dtype="uint64") /* ty=Tensor[(1040), uint64] */;
    %588 = reshape(%587, newshape=[8, 13, 10]) /* ty=Tensor[(8, 13, 10), uint64] */;
    %589 = @func_2407(%588) /* ty=(Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) */;
    %590 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %591 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %592 = %591.0;
    %593 = cast(%592, dtype="int16") /* ty=Tensor[(7, 7, 1), int16] */;
    %594 = cast(meta[relay.Constant][38] /* ty=Tensor[(1040), uint64] */, dtype="int16") /* ty=Tensor[(1040), int16] */;
    %595 = cast(meta[relay.Constant][38] /* ty=Tensor[(1040), uint64] */, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %596 = %589.1;
    %597 = %590.0;
    %598 = subtract(%593, %594) /* ty=Tensor[(7, 7, 1040), int16] */;
    %599 = atanh(%595) /* ty=Tensor[(1040), float32] */;
    (%596, %597, %598, %599)
  };
  %600() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) */
}

def @func_1939(%var_1937: Tensor[(11, 14, 13), float32]) -> (Tensor[(11, 14, 13), float32],) {
  @func_1936(%var_1937) /* ty=(Tensor[(11, 14, 13), float32],) */
}

def @func_3403(%var_3401: Tensor[(1, 13, 16), float32], %var_3402: Tensor[(7, 13, 16), float32]) -> (Tensor[(1, 13, 16), float32], Tensor[(7, 13, 16), float32], Tensor[(12, 8, 9), float32], Tensor[(858), float32], Tensor[(864), float64]) {
  %612 = fn (%var_3363: Tensor[(1, 13, 16), float32], %var_3366: Tensor[(7, 13, 16), float32]) -> (Tensor[(1, 13, 16), float32], Tensor[(7, 13, 16), float32], Tensor[(12, 8, 9), float32], Tensor[(858), float32], Tensor[(864), float64]) {
    %601 = cast(%var_3363, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
    %602 = cast(%var_3363, dtype="float32") /* ty=Tensor[(1, 13, 16), float32] */;
    %603 = cast(%var_3366, dtype="float32") /* ty=Tensor[(7, 13, 16), float32] */;
    %604 = cast(meta[relay.Constant][39] /* ty=Tensor[(858), float32] */, dtype="float32") /* ty=Tensor[(858), float32] */;
    %605 = cast(meta[relay.Constant][40] /* ty=Tensor[(864), float64] */, dtype="float64") /* ty=Tensor[(864), float64] */;
    %606 = reshape(%604, newshape=[6, 11, 13]) /* ty=Tensor[(6, 11, 13), float32] */;
    %607 = reshape(%605, newshape=[864]) /* ty=Tensor[(864), float64] */;
    %608 = @func_2645(%606, %607) /* ty=(Tensor[(12, 8, 9), float32], Tensor[(864), float64], Tensor[(6, 11, 13), bool], Tensor[(12, 8, 9), float32]) */;
    %609 = asinh(%601) /* ty=Tensor[(1, 13, 16), float32] */;
    %610 = power(%602, %603) /* ty=Tensor[(7, 13, 16), float32] */;
    %611 = %608.0;
    (%609, %610, %611, meta[relay.Constant][39] /* ty=Tensor[(858), float32] */, meta[relay.Constant][40] /* ty=Tensor[(864), float64] */)
  };
  %612(%var_3401, %var_3402) /* ty=(Tensor[(1, 13, 16), float32], Tensor[(7, 13, 16), float32], Tensor[(12, 8, 9), float32], Tensor[(858), float32], Tensor[(864), float64]) */
}

def @func_3756() -> Tensor[(7, 7, 1), float64] {
  %614 = fn () -> Tensor[(7, 7, 1), float64] {
    %613 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %613.0
  };
  %614() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_3263(%var_3234: Tensor[(15, 10, 7), int8], %var_3252: Tensor[(900), uint16]) -> (Tensor[(15, 10, 7), int8], Tensor[(2, 14, 10), float32], Tensor[(336, 4), int32], Tensor[(900), uint16]) {
  %615 = cast(meta[relay.Constant][41] /* ty=Tensor[(15, 10, 7), int8] */, dtype="int8") /* ty=Tensor[(15, 10, 7), int8] */;
  %616 = shape_of(%var_3234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%var_3234, dtype="int8") /* ty=Tensor[(15, 10, 7), int8] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %619 = cast(meta[relay.Constant][42] /* ty=Tensor[(336, 4), int32] */, dtype="int32") /* ty=Tensor[(336, 4), int32] */;
  %620 = cast(%var_3252, dtype="uint16") /* ty=Tensor[(900), uint16] */;
  %621 = reshape(%619, newshape=[8, 12, 14]) /* ty=Tensor[(8, 12, 14), int32] */;
  %622 = reshape(%620, newshape=[900]) /* ty=Tensor[(900), uint16] */;
  %623 = @func_2735(%621, %622) /* ty=(Tensor[(8, 12, 14), int32], Tensor[(8, 12, 14), bool], Tensor[(420), float64], Tensor[(420), float64], Tensor[(1100), bool], Tensor[(2, 14, 10), float32], Tensor[(280), float64], Tensor[(900), uint16]) */;
  %624 = left_shift(%617, %618) /* ty=Tensor[(15, 10, 7), int8] */;
  %625 = %623.5;
  (%624, %625, meta[relay.Constant][42] /* ty=Tensor[(336, 4), int32] */, %var_3252)
}

def @func_68(%var_66: Tensor[(10, 11, 10), bool], %var_67: Tensor[(10, 11, 10), bool]) -> (Tensor[(10, 11, 10), bool],) {
  @func_64(%var_66, %var_67) /* ty=(Tensor[(10, 11, 10), bool],) */
}

def @func_1681(%var_1679: Tensor[(14, 9, 1), int32], %var_1680: Tensor[(14, 9, 1), int32]) -> Tensor[(14, 9, ?), int32] {
  @func_1677(%var_1679, %var_1680) /* ty=Tensor[(14, 9, ?), int32] */
}

def @func_5295() -> (Tensor[(7, 7, 1), float64],) {
  @func_5293() /* ty=(Tensor[(7, 7, 1), float64],) */
}

def @func_5710() -> (Tensor[(7, 7, ?), float64],) {
  %626 = @func_4992() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(8, 13, 10), float32]) */;
  %627 = %626.0;
  (%627,)
}

def @func_1277(%var_1274: Tensor[(6, 9, 7), uint64], %var_1275: Tensor[(6, 9, 7), uint64], %var_1276: Tensor[(6, 9, 7), bool]) -> (Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) {
  @func_1272(%var_1274, %var_1275, %var_1276) /* ty=(Tensor[(6, 9, 7), float64], Tensor[(5, 2, 11), float32], Tensor[(420, 1), float64]) */
}

def @func_6229(%var_6207: Tensor[(1, 10, 9), uint64], %var_6208: Tensor[(8, 10, 9), uint64], %var_6218: Tensor[(1575, 2), int64], %var_6219: Tensor[(110), int32]) -> (Tensor[(8, 10, 9), bool], Tensor[(14, 15, 15), int64], Tensor[(1575, 2), int64], Tensor[(110), int32], Tensor[(5, 2, 11), bool]) {
  %628 = cast(%var_6207, dtype="bool") /* ty=Tensor[(1, 10, 9), bool] */;
  %629 = cast(%var_6208, dtype="bool") /* ty=Tensor[(8, 10, 9), bool] */;
  %630 = cast(%var_6218, dtype="int64") /* ty=Tensor[(1575, 2), int64] */;
  %631 = cast(%var_6218, dtype="int64") /* ty=Tensor[(1575, 2), int64] */;
  %632 = cast(%var_6219, dtype="int32") /* ty=Tensor[(110), int32] */;
  %633 = reshape(%630, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %634 = reshape(%631, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
  %635 = reshape(%632, newshape=[110]) /* ty=Tensor[(110), int32] */;
  %636 = @func_4576(%633, %634, %635) /* ty=(Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
  %637 = cast(%var_6219, dtype="int32") /* ty=Tensor[(110), int32] */;
  %638 = cast(%var_6219, dtype="int32") /* ty=Tensor[(110), int32] */;
  %639 = reshape(%637, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %640 = reshape(%638, newshape=[5, 2, 11]) /* ty=Tensor[(5, 2, 11), int32] */;
  %641 = @func_493(%639, %640) /* ty=(Tensor[(5, 2, 11), float32], Tensor[(5, 2, 11), bool]) */;
  %642 = equal(%628, %629) /* ty=Tensor[(8, 10, 9), bool] */;
  %643 = %636.0;
  %644 = %641.1;
  (%642, %643, %var_6218, %var_6219, %644)
}

def @func_4113() -> (Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) {
  %652 = fn () -> (Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) {
    %645 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %646 = %645.0;
    %647 = cast(%646, dtype="float64") /* ty=Tensor[(7, 7, 1), float64] */;
    %648 = reshape(%647, newshape=[7, 7, 1]) /* ty=Tensor[(7, 7, 1), float64] */;
    %649 = cast(%646, dtype="float32") /* ty=Tensor[(7, 7, 1), float32] */;
    %650 = @func_3923(%648) /* ty=Tensor[(7, 7, ?), float64] */;
    %651 = tan(%649) /* ty=Tensor[(7, 7, 1), float32] */;
    (%650, %651)
  };
  %652() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) */
}

def @func_4580(%var_4577: Tensor[(14, 15, 15), int64], %var_4578: Tensor[(14, 15, 15), int64], %var_4579: Tensor[(110), int32]) -> (Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) {
  %664 = fn (%var_4552: Tensor[(14, 15, 15), int64], %var_4553: Tensor[(14, 15, 15), int64], %var_4569: Tensor[(110), int32]) -> (Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) {
    %653 = cast(%var_4553, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
    %654 = shape_of(%var_4552, dtype="int32") /* ty=Tensor[(3), int32] */;
    %655 = cast(%var_4552, dtype="int64") /* ty=Tensor[(14, 15, 15), int64] */;
    %656 = dyn.reshape(%653, %654, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %657 = cast(%var_4553, dtype="float32") /* ty=Tensor[(14, 15, 15), float32] */;
    %658 = cast(%var_4569, dtype="int32") /* ty=Tensor[(110), int32] */;
    %659 = reshape(%658, newshape=[110]) /* ty=Tensor[(110), int32] */;
    %660 = @func_3701(%659) /* ty=(Tensor[(7, 7, 1), float64], Tensor[(5, 2, 11), float32], Tensor[(7, 7, 110), uint64]) */;
    %661 = left_shift(%655, %656) /* ty=Tensor[(14, 15, 15), int64] */;
    %662 = cosh(%657) /* ty=Tensor[(14, 15, 15), float32] */;
    %663 = %660.1;
    (%661, %662, %663, %var_4569)
  };
  %664(%var_4577, %var_4578, %var_4579) /* ty=(Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */
}

def @func_6168() -> (Tensor[(7, 7, ?), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32], Tensor[(3150), float32]) {
  %677 = fn () -> (Tensor[(7, 7, ?), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32], Tensor[(3150), float32]) {
    %665 = @func_4112() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(7, 7, 1), float32]) */;
    %666 = cast(meta[relay.Constant][43] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
    %667 = cast(meta[relay.Constant][43] /* ty=Tensor[(3150), int64] */, dtype="int64") /* ty=Tensor[(3150), int64] */;
    %668 = cast(meta[relay.Constant][44] /* ty=Tensor[(110), int32] */, dtype="int32") /* ty=Tensor[(110), int32] */;
    %669 = reshape(%666, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
    %670 = reshape(%667, newshape=[14, 15, 15]) /* ty=Tensor[(14, 15, 15), int64] */;
    %671 = reshape(%668, newshape=[110]) /* ty=Tensor[(110), int32] */;
    %672 = @func_4576(%669, %670, %671) /* ty=(Tensor[(14, 15, 15), int64], Tensor[(14, 15, 15), float32], Tensor[(5, 2, 11), float32], Tensor[(110), int32]) */;
    %673 = cast(meta[relay.Constant][43] /* ty=Tensor[(3150), int64] */, dtype="float32") /* ty=Tensor[(3150), float32] */;
    %674 = %665.0;
    %675 = %672.2;
    %676 = rsqrt(%673) /* ty=Tensor[(3150), float32] */;
    (%674, %675, meta[relay.Constant][44] /* ty=Tensor[(110), int32] */, %676)
  };
  %677() /* ty=(Tensor[(7, 7, ?), float64], Tensor[(5, 2, 11), float32], Tensor[(110), int32], Tensor[(3150), float32]) */
}

def @func_5840() -> (Tensor[(1040), float32],) {
  %682 = fn () -> (Tensor[(1040), float32],) {
    %678 = @func_3876() /* ty=(Tensor[(8, 13, 10), float32], Tensor[(7, 7, 1), float64], Tensor[(7, 7, 1040), int16], Tensor[(1040), float32]) */;
    %679 = %678.3;
    %680 = cast(%679, dtype="float32") /* ty=Tensor[(1040), float32] */;
    %681 = sin(%680) /* ty=Tensor[(1040), float32] */;
    (%681,)
  };
  %682() /* ty=(Tensor[(1040), float32],) */
}

def @func_6107() -> Tensor[(7, 7, 1), float64] {
  @func_6105() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_5470() -> Tensor[(7, 7, 1), float64] {
  %684 = fn () -> Tensor[(7, 7, 1), float64] {
    %683 = @func_5148() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %683.0
  };
  %684() /* ty=Tensor[(7, 7, 1), float64] */
}

def @func_3648(%var_3645: Tensor[(11, 5, 16), int64], %var_3646: Tensor[(11, 5, 16), int64], %var_3647: Tensor[(1440), float64]) -> (Tensor[(11, 5, 16), int64], Tensor[(126), int32], Tensor[(1440), float64], Tensor[(7, 7, 1), float64]) {
  %696 = fn (%var_3602: Tensor[(11, 5, 16), int64], %var_3603: Tensor[(11, 5, 16), int64], %var_3615: Tensor[(1440), float64]) -> (Tensor[(11, 5, 16), int64], Tensor[(126), int32], Tensor[(1440), float64], Tensor[(7, 7, 1), float64]) {
    %685 = cast(%var_3603, dtype="int64") /* ty=Tensor[(11, 5, 16), int64] */;
    %686 = shape_of(%var_3602, dtype="int32") /* ty=Tensor[(3), int32] */;
    %687 = cast(%var_3602, dtype="int64") /* ty=Tensor[(11, 5, 16), int64] */;
    %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %689 = cast(%var_3615, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %690 = reshape(%689, newshape=[6, 15, 16]) /* ty=Tensor[(6, 15, 16), float64] */;
    %691 = @func_3061(%690) /* ty=(Tensor[(6, 15, 16), float64], Tensor[(14, 9, ?), int32], Tensor[(126), int32]) */;
    %692 = @func_3589() /* ty=(Tensor[(7, 7, 1), float64],) */;
    %693 = add(%687, %688) /* ty=Tensor[(11, 5, 16), int64] */;
    %694 = %691.2;
    %695 = %692.0;
    (%693, %694, %var_3615, %695)
  };
  %696(%var_3645, %var_3646, %var_3647) /* ty=(Tensor[(11, 5, 16), int64], Tensor[(126), int32], Tensor[(1440), float64], Tensor[(7, 7, 1), float64]) */
}

def @func_4352(%var_4350: Tensor[(8, 8, 4), int64]) -> Tensor[(8, 8, 4), bool] {
  @func_4349(%var_4350) /* ty=Tensor[(8, 8, 4), bool] */
}

def @func_2410(%var_2408: Tensor[(8, 13, 10), uint64]) -> (Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) {
  @func_2407(%var_2408) /* ty=(Tensor[(8, 13, 10), uint64], Tensor[(8, 13, 10), float32]) */
}

def @func_4739() -> Tensor[(7, 7, 1), float64] {
  %697 = @func_3807() /* ty=(Tensor[(7, 7, 1), float64],) */;
  %697.0
}

def @func_2056(%var_2052: Tensor[(2, 14, 10), float64], %var_2053: Tensor[(2, 14, 10), float64], %var_2054: Tensor[(900), uint16], %var_2055: Tensor[(1100), bool]) -> (Tensor[(2, 14, 10), float32], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(11, 10), int32], Tensor[(1100), bool]) {
  @func_2050(%var_2052, %var_2053, %var_2054, %var_2055) /* ty=(Tensor[(2, 14, 10), float32], Tensor[(5, 2, 11), float32], Tensor[(900), uint16], Tensor[(11, 10), int32], Tensor[(1100), bool]) */
}

def @func_3127(%var_3111: Tensor[(16, 7, 8), float32]) -> (Tensor[(16, 7, 8), float32], Tensor[(16, 7, 8), int32]) {
  %698 = cast(%var_3111, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %699 = acosh(%698) /* ty=Tensor[(16, 7, 8), float32] */;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %701 = sqrt(%700) /* ty=Tensor[(16, 7, 8), float32] */;
  %702 = cast(meta[relay.Constant][45] /* ty=Tensor[(16, 7, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %704 = cast(%701, dtype="float32") /* ty=Tensor[(16, 7, 8), float32] */;
  %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %706 = cast(%var_3111, dtype="int32") /* ty=Tensor[(16, 7, 8), int32] */;
  %707 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
  %708 = cast(%701, dtype="int32") /* ty=Tensor[(16, 7, 8), int32] */;
  %709 = dyn.reshape(%706, %707, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %710 = mod(%704, %705) /* ty=Tensor[(16, 7, 8), float32] */;
  %711 = right_shift(%708, %709) /* ty=Tensor[(16, 7, 8), int32] */;
  (%710, %711)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.
The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_132 = relay.var("var_132", dtype = "float32", shape = ())#candidate|132|()|var|float32
var_133 = relay.var("var_133", dtype = "float32", shape = (3, 9, 7))#candidate|133|(3, 9, 7)|var|float32
bop_134 = relay.subtract(var_132.astype('float32'), var_133.astype('float32')) # shape=(3, 9, 7)
uop_160 = relay.sin(bop_134.astype('float64')) # shape=(3, 9, 7)
output = uop_160
output2 = uop_160
func_163 = relay.Function([var_132,var_133,], output)
mod['func_163'] = func_163
mod = relay.transform.InferType()(mod)
mutated_mod['func_163'] = func_163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_163_call = mutated_mod.get_global_var('func_163')
var_165 = relay.var("var_165", dtype = "float32", shape = ())#candidate|165|()|var|float32
var_166 = relay.var("var_166", dtype = "float32", shape = (3, 9, 7))#candidate|166|(3, 9, 7)|var|float32
call_164 = func_163_call(var_165,var_166,)
output = call_164
func_167 = relay.Function([var_165,var_166,], output)
mutated_mod['func_167'] = func_167
mutated_mod = relay.transform.InferType()(mutated_mod)
const_361 = relay.const([[[False,True,True,True,False,True,False],[False,False,False,False,True,True,True],[False,True,False,True,False,True,True],[True,False,True,False,True,False,False]]], dtype = "bool")#candidate|361|(1, 4, 7)|const|bool
var_362 = relay.var("var_362", dtype = "bool", shape = (8, 4, 7))#candidate|362|(8, 4, 7)|var|bool
bop_363 = relay.logical_and(const_361.astype('bool'), var_362.astype('bool')) # shape=(8, 4, 7)
output = bop_363
output2 = bop_363
func_371 = relay.Function([var_362,], output)
mod['func_371'] = func_371
mod = relay.transform.InferType()(mod)
var_372 = relay.var("var_372", dtype = "bool", shape = (8, 4, 7))#candidate|372|(8, 4, 7)|var|bool
output = func_371(var_372)
func_373 = relay.Function([var_372], output)
mutated_mod['func_373'] = func_373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_590 = relay.var("var_590", dtype = "bool", shape = ())#candidate|590|()|var|bool
const_591 = relay.const([[[True,False,False,True,True,True,False,True,True,True,True,False,True]],[[True,False,False,False,True,False,True,False,False,False,False,False,False]],[[True,True,False,True,False,True,False,False,False,True,True,False,True]],[[False,True,False,False,False,True,False,False,False,False,True,True,False]],[[True,True,False,False,True,True,True,True,True,True,False,True,True]],[[False,False,True,False,True,True,True,True,False,True,True,False,False]],[[True,False,True,False,True,False,True,True,False,True,True,False,False]],[[False,True,True,True,True,True,True,False,False,True,True,True,False]],[[True,True,True,False,True,False,False,False,False,True,False,False,True]],[[True,True,False,True,True,False,False,False,True,True,False,False,True]],[[False,True,True,True,False,False,False,True,False,True,False,True,True]],[[False,False,False,False,True,True,True,True,False,True,True,False,True]],[[False,False,True,True,True,True,False,False,True,False,True,True,False]],[[True,True,False,False,False,False,True,False,True,False,True,False,False]],[[True,True,True,False,True,False,False,False,True,True,False,True,False]],[[True,False,True,False,False,False,True,False,True,False,False,False,False]]], dtype = "bool")#candidate|591|(16, 1, 13)|const|bool
bop_592 = relay.logical_and(var_590.astype('bool'), const_591.astype('bool')) # shape=(16, 1, 13)
output = bop_592
output2 = bop_592
func_595 = relay.Function([var_590,], output)
mod['func_595'] = func_595
mod = relay.transform.InferType()(mod)
mutated_mod['func_595'] = func_595
mutated_mod = relay.transform.InferType()(mutated_mod)
var_596 = relay.var("var_596", dtype = "bool", shape = ())#candidate|596|()|var|bool
func_595_call = mutated_mod.get_global_var('func_595')
call_597 = func_595_call(var_596)
output = call_597
func_598 = relay.Function([var_596], output)
mutated_mod['func_598'] = func_598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_627 = relay.var("var_627", dtype = "float32", shape = (16, 1, 14))#candidate|627|(16, 1, 14)|var|float32
uop_628 = relay.exp(var_627.astype('float32')) # shape=(16, 1, 14)
func_595_call = mod.get_global_var('func_595')
func_598_call = mutated_mod.get_global_var('func_598')
const_638 = relay.const(False, dtype = "bool")#candidate|638|()|const|bool
call_637 = func_595_call(relay.reshape(const_638.astype('bool'), []))
call_639 = func_595_call(relay.reshape(const_638.astype('bool'), []))
func_163_call = mod.get_global_var('func_163')
func_167_call = mutated_mod.get_global_var('func_167')
var_646 = relay.var("var_646", dtype = "float32", shape = (189,))#candidate|646|(189,)|var|float32
call_645 = func_163_call(relay.reshape(const_638.astype('float32'), []), relay.reshape(var_646.astype('float32'), [3, 9, 7]), )
call_647 = func_163_call(relay.reshape(const_638.astype('float32'), []), relay.reshape(var_646.astype('float32'), [3, 9, 7]), )
uop_667 = relay.acosh(uop_628.astype('float32')) # shape=(16, 1, 14)
output = relay.Tuple([call_637,const_638,call_645,var_646,uop_667,])
output2 = relay.Tuple([call_639,const_638,call_647,var_646,uop_667,])
func_676 = relay.Function([var_627,var_646,], output)
mod['func_676'] = func_676
mod = relay.transform.InferType()(mod)
mutated_mod['func_676'] = func_676
mutated_mod = relay.transform.InferType()(mutated_mod)
func_676_call = mutated_mod.get_global_var('func_676')
var_678 = relay.var("var_678", dtype = "float32", shape = (16, 1, 14))#candidate|678|(16, 1, 14)|var|float32
var_679 = relay.var("var_679", dtype = "float32", shape = (189,))#candidate|679|(189,)|var|float32
call_677 = func_676_call(var_678,var_679,)
output = call_677
func_680 = relay.Function([var_678,var_679,], output)
mutated_mod['func_680'] = func_680
mutated_mod = relay.transform.InferType()(mutated_mod)
var_748 = relay.var("var_748", dtype = "int64", shape = (1, 11, 16))#candidate|748|(1, 11, 16)|var|int64
const_749 = relay.const([[[10,8,2,3,4,1,4,-5,7,5,8,-6,-2,-6,-4,6],[4,-1,-7,10,2,5,7,2,5,-9,-9,4,6,6,8,-5],[-6,-1,-9,-4,10,6,1,-5,-5,-3,-9,-8,7,-4,7,-9],[6,-8,9,-5,-3,-10,8,3,8,-2,3,4,3,4,9,-5],[-1,1,4,3,-8,-2,-6,4,10,-3,-3,10,-6,9,8,-2],[6,-3,9,8,6,-6,4,8,-3,5,-9,5,9,-3,-6,10],[-8,2,6,7,-9,-6,-10,-5,3,-10,-4,10,-6,4,9,8],[6,7,10,-6,4,2,-4,6,8,2,2,9,6,-2,7,2],[-9,-5,-10,2,1,-9,-2,4,2,3,-9,-2,4,-10,5,4],[1,-5,-8,-7,10,8,3,-3,10,-9,-8,6,8,-5,-7,6],[-6,-9,7,-7,-1,2,-7,-9,1,-7,-2,3,8,2,6,-1]],[[9,9,5,-7,-1,2,-4,-4,-10,7,4,1,-7,7,-1,6],[-8,7,10,-2,5,-6,5,-7,3,-9,2,-10,5,2,6,5],[2,-7,-10,-3,3,5,1,4,-3,-2,-5,8,10,3,8,9],[-3,-4,7,7,7,9,3,-2,8,-5,-8,10,-3,-3,-4,4],[-3,2,4,-2,-3,-8,6,-7,4,5,5,10,-2,-2,9,4],[4,10,7,-8,-2,-9,6,3,7,4,5,1,-8,4,9,-9],[-5,-1,-2,-3,5,5,7,3,-5,-6,-2,-8,10,-10,-1,1],[8,8,-1,4,-2,-9,-4,1,-1,2,3,-8,1,1,-6,7],[2,-4,8,-9,7,-1,2,2,10,9,-3,6,4,7,-10,4],[2,7,7,2,5,7,-5,1,5,9,-6,4,-2,9,-7,-6],[-2,1,-8,-3,6,10,-9,7,10,5,-8,-5,-2,-4,9,8]]], dtype = "int64")#candidate|749|(2, 11, 16)|const|int64
bop_750 = relay.bitwise_and(var_748.astype('int64'), const_749.astype('int64')) # shape=(2, 11, 16)
func_595_call = mod.get_global_var('func_595')
func_598_call = mutated_mod.get_global_var('func_598')
var_755 = relay.var("var_755", dtype = "bool", shape = ())#candidate|755|()|var|bool
call_754 = func_595_call(relay.reshape(var_755.astype('bool'), []))
call_756 = func_595_call(relay.reshape(var_755.astype('bool'), []))
output = relay.Tuple([bop_750,call_754,var_755,])
output2 = relay.Tuple([bop_750,call_756,var_755,])
func_761 = relay.Function([var_748,var_755,], output)
mod['func_761'] = func_761
mod = relay.transform.InferType()(mod)
mutated_mod['func_761'] = func_761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_761_call = mutated_mod.get_global_var('func_761')
var_763 = relay.var("var_763", dtype = "int64", shape = (1, 11, 16))#candidate|763|(1, 11, 16)|var|int64
var_764 = relay.var("var_764", dtype = "bool", shape = ())#candidate|764|()|var|bool
call_762 = func_761_call(var_763,var_764,)
output = call_762
func_765 = relay.Function([var_763,var_764,], output)
mutated_mod['func_765'] = func_765
mutated_mod = relay.transform.InferType()(mutated_mod)
var_797 = relay.var("var_797", dtype = "float64", shape = (13, 13, 5))#candidate|797|(13, 13, 5)|var|float64
uop_798 = relay.tan(var_797.astype('float64')) # shape=(13, 13, 5)
output = relay.Tuple([uop_798,])
output2 = relay.Tuple([uop_798,])
func_808 = relay.Function([var_797,], output)
mod['func_808'] = func_808
mod = relay.transform.InferType()(mod)
var_809 = relay.var("var_809", dtype = "float64", shape = (13, 13, 5))#candidate|809|(13, 13, 5)|var|float64
output = func_808(var_809)
func_810 = relay.Function([var_809], output)
mutated_mod['func_810'] = func_810
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1124 = relay.var("var_1124", dtype = "float64", shape = (13, 14, 10))#candidate|1124|(13, 14, 10)|var|float64
uop_1125 = relay.erf(var_1124.astype('float64')) # shape=(13, 14, 10)
var_1131 = relay.var("var_1131", dtype = "float64", shape = (13, 14, 10))#candidate|1131|(13, 14, 10)|var|float64
bop_1132 = relay.power(uop_1125.astype('float32'), relay.reshape(var_1131.astype('float32'), relay.shape_of(uop_1125))) # shape=(13, 14, 10)
var_1148 = relay.var("var_1148", dtype = "float64", shape = (13, 14, 10))#candidate|1148|(13, 14, 10)|var|float64
bop_1149 = relay.greater_equal(var_1131.astype('bool'), relay.reshape(var_1148.astype('bool'), relay.shape_of(var_1131))) # shape=(13, 14, 10)
uop_1166 = relay.acosh(bop_1149.astype('float32')) # shape=(13, 14, 10)
bop_1170 = relay.add(bop_1132.astype('float32'), relay.reshape(uop_1166.astype('float32'), relay.shape_of(bop_1132))) # shape=(13, 14, 10)
bop_1177 = relay.multiply(bop_1170.astype('float32'), relay.reshape(bop_1132.astype('float32'), relay.shape_of(bop_1170))) # shape=(13, 14, 10)
uop_1180 = relay.acos(uop_1166.astype('float32')) # shape=(13, 14, 10)
func_761_call = mod.get_global_var('func_761')
func_765_call = mutated_mod.get_global_var('func_765')
const_1184 = relay.const([9,-4,-7,9,-7,-7,-8,3,-6,-6,-2,-1,8,-7,6,6,-1,-10,-7,2,-2,8,-1,-1,1,-3,2,9,-5,-4,-8,6,3,8,5,-5,-8,-8,-6,-5,6,-10,-1,8,-5,8,-5,1,-10,-9,8,5,-8,4,-4,1,-8,-8,-1,-6,1,10,-8,-5,9,-5,-9,-4,3,-3,8,7,-8,-6,5,5,-7,3,5,4,-3,4,1,-1,7,-3,7,-2,7,3,-3,-8,-3,-6,9,6,-10,4,-8,8,-6,-10,-1,7,4,9,-8,6,8,-2,1,-8,8,-6,8,2,5,8,-6,-5,5,-6,3,-4,5,9,-6,8,-1,-10,8,-5,-4,10,-8,-2,1,3,1,4,-5,-1,9,5,-6,1,9,-7,-6,4,-4,-4,4,8,9,1,-6,-7,4,7,8,-3,1,-1,9,-1,-4,7,-6,-3,-10,1,1,-2,-1,-4], dtype = "int64")#candidate|1184|(176,)|const|int64
var_1185 = relay.var("var_1185", dtype = "bool", shape = ())#candidate|1185|()|var|bool
call_1183 = relay.TupleGetItem(func_761_call(relay.reshape(const_1184.astype('int64'), [1, 11, 16]), relay.reshape(var_1185.astype('bool'), []), ), 0)
call_1186 = relay.TupleGetItem(func_765_call(relay.reshape(const_1184.astype('int64'), [1, 11, 16]), relay.reshape(var_1185.astype('bool'), []), ), 0)
output = relay.Tuple([bop_1177,uop_1180,call_1183,const_1184,var_1185,])
output2 = relay.Tuple([bop_1177,uop_1180,call_1186,const_1184,var_1185,])
func_1187 = relay.Function([var_1124,var_1131,var_1148,var_1185,], output)
mod['func_1187'] = func_1187
mod = relay.transform.InferType()(mod)
var_1188 = relay.var("var_1188", dtype = "float64", shape = (13, 14, 10))#candidate|1188|(13, 14, 10)|var|float64
var_1189 = relay.var("var_1189", dtype = "float64", shape = (13, 14, 10))#candidate|1189|(13, 14, 10)|var|float64
var_1190 = relay.var("var_1190", dtype = "float64", shape = (13, 14, 10))#candidate|1190|(13, 14, 10)|var|float64
var_1191 = relay.var("var_1191", dtype = "bool", shape = ())#candidate|1191|()|var|bool
output = func_1187(var_1188,var_1189,var_1190,var_1191,)
func_1192 = relay.Function([var_1188,var_1189,var_1190,var_1191,], output)
mutated_mod['func_1192'] = func_1192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1447 = relay.var("var_1447", dtype = "float32", shape = (5, 13))#candidate|1447|(5, 13)|var|float32
uop_1448 = relay.acos(var_1447.astype('float32')) # shape=(5, 13)
output = uop_1448
output2 = uop_1448
func_1451 = relay.Function([var_1447,], output)
mod['func_1451'] = func_1451
mod = relay.transform.InferType()(mod)
mutated_mod['func_1451'] = func_1451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1452 = relay.var("var_1452", dtype = "float32", shape = (5, 13))#candidate|1452|(5, 13)|var|float32
func_1451_call = mutated_mod.get_global_var('func_1451')
call_1453 = func_1451_call(var_1452)
output = call_1453
func_1454 = relay.Function([var_1452], output)
mutated_mod['func_1454'] = func_1454
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1844 = relay.var("var_1844", dtype = "float64", shape = (10, 13, 1))#candidate|1844|(10, 13, 1)|var|float64
var_1845 = relay.var("var_1845", dtype = "float64", shape = (10, 13, 11))#candidate|1845|(10, 13, 11)|var|float64
bop_1846 = relay.floor_mod(var_1844.astype('float64'), var_1845.astype('float64')) # shape=(10, 13, 11)
bop_1855 = relay.greater(bop_1846.astype('bool'), var_1844.astype('bool')) # shape=(10, 13, 11)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
var_1862 = relay.var("var_1862", dtype = "bool", shape = (224,))#candidate|1862|(224,)|var|bool
call_1861 = func_371_call(relay.reshape(var_1862.astype('bool'), [8, 4, 7]))
call_1863 = func_371_call(relay.reshape(var_1862.astype('bool'), [8, 4, 7]))
output = relay.Tuple([bop_1855,call_1861,var_1862,])
output2 = relay.Tuple([bop_1855,call_1863,var_1862,])
func_1864 = relay.Function([var_1844,var_1845,var_1862,], output)
mod['func_1864'] = func_1864
mod = relay.transform.InferType()(mod)
mutated_mod['func_1864'] = func_1864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1864_call = mutated_mod.get_global_var('func_1864')
var_1866 = relay.var("var_1866", dtype = "float64", shape = (10, 13, 1))#candidate|1866|(10, 13, 1)|var|float64
var_1867 = relay.var("var_1867", dtype = "float64", shape = (10, 13, 11))#candidate|1867|(10, 13, 11)|var|float64
var_1868 = relay.var("var_1868", dtype = "bool", shape = (224,))#candidate|1868|(224,)|var|bool
call_1865 = func_1864_call(var_1866,var_1867,var_1868,)
output = call_1865
func_1869 = relay.Function([var_1866,var_1867,var_1868,], output)
mutated_mod['func_1869'] = func_1869
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1889 = relay.var("var_1889", dtype = "float64", shape = (1, 2, 11))#candidate|1889|(1, 2, 11)|var|float64
uop_1890 = relay.atan(var_1889.astype('float64')) # shape=(1, 2, 11)
bop_1894 = relay.power(var_1889.astype('float32'), relay.reshape(uop_1890.astype('float32'), relay.shape_of(var_1889))) # shape=(1, 2, 11)
func_1187_call = mod.get_global_var('func_1187')
func_1192_call = mutated_mod.get_global_var('func_1192')
var_1913 = relay.var("var_1913", dtype = "float64", shape = (1820,))#candidate|1913|(1820,)|var|float64
const_1914 = relay.const(True, dtype = "bool")#candidate|1914|()|const|bool
call_1912 = relay.TupleGetItem(func_1187_call(relay.reshape(var_1913.astype('float64'), [13, 14, 10]), relay.reshape(var_1913.astype('float64'), [13, 14, 10]), relay.reshape(var_1913.astype('float64'), [13, 14, 10]), relay.reshape(const_1914.astype('bool'), []), ), 1)
call_1915 = relay.TupleGetItem(func_1192_call(relay.reshape(var_1913.astype('float64'), [13, 14, 10]), relay.reshape(var_1913.astype('float64'), [13, 14, 10]), relay.reshape(var_1913.astype('float64'), [13, 14, 10]), relay.reshape(const_1914.astype('bool'), []), ), 1)
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
const_1925 = relay.const([5.678291,-4.894659,-9.671595,7.890914,-2.487585,5.863638,5.979435,4.924144,-0.846094,-5.031662,-0.246109,-2.912207,1.952413,3.287403,-9.198985,-5.823152,-7.728446,-6.398395,-3.801967,2.784604,-9.914931,2.412254,8.460299,8.865008,-1.705835,2.743691,3.822826,9.133851,9.715769,8.332209,-1.341674,-5.393547,-7.484383,1.629754,-7.795251,8.880742,-4.735440,-3.927888,-9.386543,9.577689,2.384115,0.693294,5.133924,-6.587168,8.772981,-0.219142,9.163451,-3.265157,5.011146,-0.349391,-2.080366,-0.252970,-6.837526,-8.582105,-6.624407,2.318171,-6.667623,-4.829326,3.816878,3.949651,-6.951072,-9.716759,-5.654247,-8.276159,7.222568], dtype = "float32")#candidate|1925|(65,)|const|float32
call_1924 = func_1451_call(relay.reshape(const_1925.astype('float32'), [5, 13]))
call_1926 = func_1451_call(relay.reshape(const_1925.astype('float32'), [5, 13]))
output = relay.Tuple([bop_1894,call_1912,var_1913,const_1914,call_1924,const_1925,])
output2 = relay.Tuple([bop_1894,call_1915,var_1913,const_1914,call_1926,const_1925,])
func_1933 = relay.Function([var_1889,var_1913,], output)
mod['func_1933'] = func_1933
mod = relay.transform.InferType()(mod)
mutated_mod['func_1933'] = func_1933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1933_call = mutated_mod.get_global_var('func_1933')
var_1935 = relay.var("var_1935", dtype = "float64", shape = (1, 2, 11))#candidate|1935|(1, 2, 11)|var|float64
var_1936 = relay.var("var_1936", dtype = "float64", shape = (1820,))#candidate|1936|(1820,)|var|float64
call_1934 = func_1933_call(var_1935,var_1936,)
output = call_1934
func_1937 = relay.Function([var_1935,var_1936,], output)
mutated_mod['func_1937'] = func_1937
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1977 = relay.var("var_1977", dtype = "uint8", shape = (3, 14, 3))#candidate|1977|(3, 14, 3)|var|uint8
var_1978 = relay.var("var_1978", dtype = "uint8", shape = (3, 14, 3))#candidate|1978|(3, 14, 3)|var|uint8
bop_1979 = relay.multiply(var_1977.astype('uint8'), relay.reshape(var_1978.astype('uint8'), relay.shape_of(var_1977))) # shape=(3, 14, 3)
func_163_call = mod.get_global_var('func_163')
func_167_call = mutated_mod.get_global_var('func_167')
var_2003 = relay.var("var_2003", dtype = "float32", shape = ())#candidate|2003|()|var|float32
var_2004 = relay.var("var_2004", dtype = "float32", shape = (189,))#candidate|2004|(189,)|var|float32
call_2002 = func_163_call(relay.reshape(var_2003.astype('float32'), []), relay.reshape(var_2004.astype('float32'), [3, 9, 7]), )
call_2005 = func_163_call(relay.reshape(var_2003.astype('float32'), []), relay.reshape(var_2004.astype('float32'), [3, 9, 7]), )
output = relay.Tuple([bop_1979,call_2002,var_2003,var_2004,])
output2 = relay.Tuple([bop_1979,call_2005,var_2003,var_2004,])
func_2006 = relay.Function([var_1977,var_1978,var_2003,var_2004,], output)
mod['func_2006'] = func_2006
mod = relay.transform.InferType()(mod)
var_2007 = relay.var("var_2007", dtype = "uint8", shape = (3, 14, 3))#candidate|2007|(3, 14, 3)|var|uint8
var_2008 = relay.var("var_2008", dtype = "uint8", shape = (3, 14, 3))#candidate|2008|(3, 14, 3)|var|uint8
var_2009 = relay.var("var_2009", dtype = "float32", shape = ())#candidate|2009|()|var|float32
var_2010 = relay.var("var_2010", dtype = "float32", shape = (189,))#candidate|2010|(189,)|var|float32
output = func_2006(var_2007,var_2008,var_2009,var_2010,)
func_2011 = relay.Function([var_2007,var_2008,var_2009,var_2010,], output)
mutated_mod['func_2011'] = func_2011
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2054 = relay.var("var_2054", dtype = "int64", shape = ())#candidate|2054|()|var|int64
var_2055 = relay.var("var_2055", dtype = "int64", shape = (4, 14, 1))#candidate|2055|(4, 14, 1)|var|int64
bop_2056 = relay.add(var_2054.astype('int64'), var_2055.astype('int64')) # shape=(4, 14, 1)
func_761_call = mod.get_global_var('func_761')
func_765_call = mutated_mod.get_global_var('func_765')
const_2064 = relay.const([1,6,-8,6,-7,8,2,1,-7,10,2,6,6,9,-1,9,-2,3,-8,-1,5,7,3,5,4,6,7,-5,-5,-4,-7,-8,8,7,2,2,-1,7,9,-6,9,1,5,10,2,-6,-9,-6,-8,2,2,1,5,9,-10,-8,-6,-7,-5,-1,-3,4,3,-8,4,3,5,1,-2,5,5,2,-2,-6,-8,-4,6,-2,7,-10,-9,8,8,6,-10,-3,6,-10,-6,7,-3,-4,8,-8,3,7,2,8,5,-2,-4,-9,10,-1,4,-10,-9,-6,10,6,-1,-7,-8,-4,8,-7,-1,-5,8,9,3,10,6,1,-9,1,-9,4,-3,2,2,-6,-8,4,-6,-9,-2,1,7,4,-8,-8,3,-6,-10,-10,8,5,-8,3,4,4,-4,-6,6,7,-6,3,-6,-8,5,-9,5,-10,-7,-8,8,-8,7,-3,5,9,6,-1,-8,9], dtype = "int64")#candidate|2064|(176,)|const|int64
call_2063 = relay.TupleGetItem(func_761_call(relay.reshape(const_2064.astype('int64'), [1, 11, 16]), relay.reshape(var_2054.astype('bool'), []), ), 2)
call_2065 = relay.TupleGetItem(func_765_call(relay.reshape(const_2064.astype('int64'), [1, 11, 16]), relay.reshape(var_2054.astype('bool'), []), ), 2)
var_2071 = relay.var("var_2071", dtype = "int64", shape = (4, 14, 1))#candidate|2071|(4, 14, 1)|var|int64
bop_2072 = relay.equal(bop_2056.astype('bool'), relay.reshape(var_2071.astype('bool'), relay.shape_of(bop_2056))) # shape=(4, 14, 1)
output = relay.Tuple([call_2063,const_2064,bop_2072,])
output2 = relay.Tuple([call_2065,const_2064,bop_2072,])
func_2082 = relay.Function([var_2054,var_2055,var_2071,], output)
mod['func_2082'] = func_2082
mod = relay.transform.InferType()(mod)
var_2083 = relay.var("var_2083", dtype = "int64", shape = ())#candidate|2083|()|var|int64
var_2084 = relay.var("var_2084", dtype = "int64", shape = (4, 14, 1))#candidate|2084|(4, 14, 1)|var|int64
var_2085 = relay.var("var_2085", dtype = "int64", shape = (4, 14, 1))#candidate|2085|(4, 14, 1)|var|int64
output = func_2082(var_2083,var_2084,var_2085,)
func_2086 = relay.Function([var_2083,var_2084,var_2085,], output)
mutated_mod['func_2086'] = func_2086
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2544 = relay.constdtype = "float64")#candidate|2544|(11, 15, 10)|const|float64
uop_2545 = relay.erf(const_2544.astype('float64')) # shape=(11, 15, 10)
output = uop_2545
output2 = uop_2545
func_2548 = relay.Function([], output)
mod['func_2548'] = func_2548
mod = relay.transform.InferType()(mod)
output = func_2548()
func_2549 = relay.Function([], output)
mutated_mod['func_2549'] = func_2549
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_2569 = func_2548_call()
call_2570 = func_2548_call()
uop_2583 = relay.log10(call_2569.astype('float64')) # shape=(11, 15, 10)
uop_2585 = relay.log10(call_2570.astype('float64')) # shape=(11, 15, 10)
const_2589 = relay.constdtype = "float64")#candidate|2589|(11, 15, 10)|const|float64
bop_2590 = relay.bitwise_or(uop_2583.astype('int32'), relay.reshape(const_2589.astype('int32'), relay.shape_of(uop_2583))) # shape=(11, 15, 10)
bop_2593 = relay.bitwise_or(uop_2585.astype('int32'), relay.reshape(const_2589.astype('int32'), relay.shape_of(uop_2585))) # shape=(11, 15, 10)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
var_2596 = relay.var("var_2596", dtype = "bool", shape = (224,))#candidate|2596|(224,)|var|bool
call_2595 = func_371_call(relay.reshape(var_2596.astype('bool'), [8, 4, 7]))
call_2597 = func_371_call(relay.reshape(var_2596.astype('bool'), [8, 4, 7]))
uop_2602 = relay.asinh(bop_2590.astype('float64')) # shape=(11, 15, 10)
uop_2604 = relay.asinh(bop_2593.astype('float64')) # shape=(11, 15, 10)
output = relay.Tuple([call_2595,var_2596,uop_2602,])
output2 = relay.Tuple([call_2597,var_2596,uop_2604,])
func_2606 = relay.Function([var_2596,], output)
mod['func_2606'] = func_2606
mod = relay.transform.InferType()(mod)
mutated_mod['func_2606'] = func_2606
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2607 = relay.var("var_2607", dtype = "bool", shape = (224,))#candidate|2607|(224,)|var|bool
func_2606_call = mutated_mod.get_global_var('func_2606')
call_2608 = func_2606_call(var_2607)
output = call_2608
func_2609 = relay.Function([var_2607], output)
mutated_mod['func_2609'] = func_2609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_2638 = func_2548_call()
call_2639 = func_2548_call()
uop_2641 = relay.rsqrt(call_2638.astype('float32')) # shape=(11, 15, 10)
uop_2643 = relay.rsqrt(call_2639.astype('float32')) # shape=(11, 15, 10)
output = uop_2641
output2 = uop_2643
func_2652 = relay.Function([], output)
mod['func_2652'] = func_2652
mod = relay.transform.InferType()(mod)
mutated_mod['func_2652'] = func_2652
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mutated_mod.get_global_var('func_2652')
call_2653 = func_2652_call()
output = call_2653
func_2654 = relay.Function([], output)
mutated_mod['func_2654'] = func_2654
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_2677 = func_2548_call()
call_2678 = func_2548_call()
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
var_2690 = relay.var("var_2690", dtype = "float32", shape = (65,))#candidate|2690|(65,)|var|float32
call_2689 = func_1451_call(relay.reshape(var_2690.astype('float32'), [5, 13]))
call_2691 = func_1451_call(relay.reshape(var_2690.astype('float32'), [5, 13]))
const_2698 = relay.constdtype = "float64")#candidate|2698|(11, 15, 10)|const|float64
bop_2699 = relay.equal(call_2677.astype('bool'), relay.reshape(const_2698.astype('bool'), relay.shape_of(call_2677))) # shape=(11, 15, 10)
bop_2702 = relay.equal(call_2678.astype('bool'), relay.reshape(const_2698.astype('bool'), relay.shape_of(call_2678))) # shape=(11, 15, 10)
uop_2705 = relay.asin(call_2677.astype('float64')) # shape=(11, 15, 10)
uop_2707 = relay.asin(call_2678.astype('float64')) # shape=(11, 15, 10)
func_808_call = mod.get_global_var('func_808')
func_810_call = mutated_mod.get_global_var('func_810')
const_2713 = relay.const([1.096935,-0.062919,-3.858286,2.065839,-5.356809,0.418770,6.534453,-2.790827,7.415577,1.196499,2.987830,-9.510040,0.601569,3.096310,1.466806,2.200868,-0.684680,2.283576,4.461368,-0.471556,2.523804,-7.262331,-8.371520,-0.203601,5.639336,1.592297,-2.261158,6.031839,-8.256738,4.029117,1.160949,-7.853788,-7.439756,-3.357791,4.695749,-7.787985,-9.049643,8.269300,6.912487,-9.621483,-7.651324,-2.712088,3.500553,-2.110334,-5.440790,1.855843,5.731154,-7.245303,7.326860,5.678806,1.527480,-9.945963,-5.439194,-3.452462,0.325736,7.258624,-1.951342,6.200545,4.560540,-0.304026,6.706001,4.794328,5.941026,-5.422569,-4.385388,3.513546,1.842525,0.670657,-8.836354,-8.550257,-2.511031,8.233064,9.331667,-6.033422,-3.145547,-4.783667,-0.566613,-5.662010,2.808000,1.118904,-5.620333,4.734887,-7.125713,-2.958279,-8.625481,-0.542816,-0.895858,-5.744009,-2.675097,-1.676502,8.970961,-8.933220,-7.512684,4.102330,-9.076147,9.326661,-8.683362,-6.227385,0.821500,7.109289,5.450048,-7.195041,4.197384,7.198852,2.933380,-7.340944,0.120201,-3.115912,-2.954456,1.970298,-6.795922,9.394843,-1.419359,7.344161,-9.334027,0.585675,0.163598,5.826620,-3.137210,-2.066566,-9.805754,-9.731028,-9.405648,3.681631,5.096385,2.904746,6.626397,-9.128813,-2.610396,4.350336,-7.135287,8.945546,-5.098676,-6.606513,8.669446,-3.916094,5.976520,2.076521,-5.886746,-0.800818,-3.163032,6.093476,5.250907,3.142054,-6.469627,-7.146004,3.431401,-7.077080,2.005067,9.966173,7.442665,-7.318737,-5.436569,-6.547102,0.408823,-7.403174,-6.875825,2.506403,0.586187,-2.591116,-8.649944,-3.813430,-4.340022,2.652336,0.460775,-1.785854,1.932849,-7.398761,1.247814,-5.019712,5.706661,-0.364963,-1.079517,5.200176,-3.642345,4.079722,4.349381,-3.716358,-7.871688,8.081048,-3.201110,3.115806,-8.956702,-7.954016,-3.580993,-6.862860,7.262749,-6.960716,2.787218,-3.864325,2.195932,-2.762449,3.561846,-8.603325,-8.832751,-1.949596,6.496254,-5.407578,3.775843,3.736846,7.905286,7.796689,-8.812607,2.903060,-6.315861,6.742036,2.264031,-9.399799,7.951222,4.290085,-2.137019,-7.548344,0.815808,0.443203,8.208491,-1.614173,9.374952,-7.605405,0.960790,1.282737,0.782487,2.534919,-9.202066,4.062454,-4.189090,2.285685,-5.978630,2.754607,2.897682,-5.947355,0.438657,4.775918,9.506052,6.807219,6.487896,-3.989363,7.195120,-4.659795,2.822705,5.040636,-6.141571,-8.730539,4.884456,-6.531977,-5.318576,5.484037,7.464294,-7.747144,-0.535734,-1.553713,-1.045704,-8.122796,-5.530877,8.255744,3.831692,-0.324022,-2.238255,-1.366100,-1.189200,-2.431409,-5.738680,-7.949392,-0.324889,-1.705393,-1.869589,0.154823,3.532496,5.617717,-4.706327,9.732025,9.595324,9.802579,-5.552175,5.240155,-3.838520,4.411013,-7.693700,-3.301374,8.499484,7.094338,2.037835,-6.612058,1.205878,8.754053,3.041459,0.508148,-2.651019,-5.865728,-8.447845,2.710597,9.168568,8.878613,-6.370547,-4.404685,-2.782166,-1.860865,-5.438937,-8.318915,-6.570275,1.585242,-2.766158,-0.439955,0.746157,5.935804,5.067383,-5.835913,-8.043967,-7.829144,-3.540180,-8.825101,-0.818268,-8.074408,5.152000,-7.749792,-2.212512,1.659763,-1.436542,1.500551,-2.894329,-0.280575,0.677191,-5.926907,-3.326705,8.076897,-7.346645,-3.499099,-0.375234,7.899669,9.496384,2.351983,-5.607327,1.105828,-2.455802,-7.278005,6.495905,-0.569318,-6.772873,-1.801703,8.299070,1.126916,2.613731,9.898662,-0.677882,-1.244976,-1.765435,-0.161600,-4.102523,-4.406262,-1.674340,-0.601087,7.764528,4.120572,9.792938,-2.372923,5.517294,-7.369980,1.625370,-0.329685,8.039256,-9.275421,-6.711332,-3.421376,-3.434617,9.131270,8.272588,-3.863460,2.844197,-1.269028,-1.845937,1.294226,-9.869659,-8.537859,5.013116,-7.354000,2.051577,7.723067,9.923865,4.415557,-7.575446,-0.842185,-4.680565,-1.984330,-5.879002,-4.979149,1.023969,-8.497215,-7.353764,-1.173152,6.025093,-3.875140,1.725959,-2.961294,3.733495,-8.454913,0.187317,6.084248,7.922281,0.127918,3.674664,-7.750080,9.700148,-1.964221,-8.582918,-3.493368,5.889467,-1.493283,-7.374015,5.329103,-6.231978,0.552907,2.471887,6.186565,-1.234801,-3.602945,7.081148,-3.985588,-9.505173,-8.934484,4.338159,-4.130175,4.316618,3.904054,-6.155102,0.523780,-1.175379,-2.920746,1.260184,8.976606,-1.287202,6.836284,-3.270068,-6.506141,0.224184,0.909294,6.025650,7.342617,5.135711,-2.795020,-1.252658,-0.383044,-9.516101,-5.931941,5.599609,2.815878,3.554282,6.135154,8.493747,-9.670267,-1.558538,4.622762,-9.974170,-2.940976,-1.371981,8.198740,-6.337061,5.796508,-3.244223,-4.557119,3.419247,1.846035,9.136782,2.815645,-9.169615,1.171510,4.002217,8.779439,7.898904,5.290746,-1.316448,-4.652416,7.383275,-9.159941,6.825037,3.612716,-0.952762,-5.280709,0.869748,-0.269937,0.662383,-4.363069,2.188256,-6.563273,5.799287,-6.330635,-6.264428,-6.839176,-2.343199,2.132084,6.184735,1.580480,8.662825,1.057382,3.894462,6.222015,7.939952,8.309319,9.940839,-9.837433,-9.964560,-9.014912,0.322162,-5.278470,0.765329,-2.815865,-1.503530,4.194542,1.721688,-1.416848,-3.685994,7.183233,4.230291,-3.719011,1.174261,2.923696,3.207648,-6.765772,-6.057187,4.103610,2.014609,-1.633628,2.941547,8.093902,0.855462,8.771905,6.037748,3.060449,4.456886,0.312806,-9.394567,-0.975753,1.216798,3.891069,9.152165,7.121093,-8.953123,-7.439368,0.198204,-1.578769,2.233978,3.613534,-1.586221,8.420529,-1.452594,-2.599319,2.343838,2.861713,-4.584185,-1.051209,9.057639,-6.825095,-2.211406,4.565346,-9.792957,-1.329653,9.335712,9.133780,-2.338748,5.373550,4.638109,-8.972152,8.314808,5.411427,-9.596809,8.735155,-0.921740,0.203705,0.062582,-9.094363,-9.964039,0.854404,-7.791279,6.701278,-8.210335,-6.642252,5.357946,-6.602622,-4.567956,-8.094732,-7.949459,-7.673783,5.303226,8.361895,-8.528228,-8.242654,-9.221999,-2.343761,-2.701331,6.147810,-8.681412,4.103775,-4.274740,-6.543212,9.692850,2.409568,1.004558,-0.284582,3.379216,4.761699,-5.809911,-8.053220,5.235745,3.967861,5.030200,-0.850132,-0.025934,4.009725,-3.723231,9.440033,-7.873726,2.654953,-3.741129,-5.757528,4.173444,2.907531,3.568247,-7.676250,-4.580325,6.971842,-7.746563,-1.945331,8.186312,-0.648705,9.290600,6.744078,-6.683263,3.003928,3.950911,7.609896,2.014067,-0.085017,-5.106953,-4.352476,-0.612463,-6.189399,9.222755,-1.888578,-2.849550,-8.229544,-8.595629,0.937924,-7.690846,-5.174143,-6.658517,-6.715787,-1.231083,1.904944,3.284579,-4.960441,0.195380,8.536748,6.589893,4.492681,-1.552249,4.898454,3.914485,2.854826,-1.542583,0.731967,6.305584,-0.854519,-3.798109,6.794306,4.904403,-0.189311,-8.710755,-9.790285,2.146593,-4.638113,2.341426,-2.031080,-3.008664,7.717724,7.371343,-7.756443,-7.738783,2.296804,-6.492626,8.606429,-9.430752,-2.003012,5.311051,-0.304566,-1.710388,-3.292951,-0.213504,-9.362574,-4.570104,0.752775,8.776955,6.422513,6.318500,-0.303309,4.339560,1.646888,7.721747,-3.315287,-1.917152,0.650133,6.822540,5.955778,7.939677,3.855443,5.791766,9.774883,-5.823102,-2.554198,4.957493,3.945308,-8.534402,-8.503705,-2.636406,-7.115737,2.622282,7.413379,8.772569,2.620238,-4.298164,6.085490,8.747867,-0.353640,4.180684,2.138450,-6.471562,0.754773,-6.847437,-8.348227,-0.332035,0.968474,3.995717,7.455837,4.886019,6.175944,8.702019,7.728683,7.184363,-7.367163,4.939510,-1.416273,-0.838507,-4.867032,5.428165,7.975252,-6.025623,-0.337011,1.559388,-5.778918,-4.980806,-0.580915,-1.172032,-2.553442,-4.009029,-9.897264,9.283278,4.752352,-3.752955,-0.417140,-5.475406,-1.256143,-6.770961,-1.431210,-8.383833,2.013502,-5.958053,-0.894552,2.441291,5.214993,7.940842,3.847061,-7.670893,-6.533180,8.069605,-3.975332,-9.058248,-6.757470,1.944798,-5.856380,5.928205,-9.053287,6.676311,2.939448,-8.825250,-5.912845,-4.022928,-0.869640,-2.000351,-6.987211,2.154002,-2.453071,0.748486,-2.995278,5.767625,-9.554414,-6.166888,2.713269,0.187200,7.995645,5.159877,4.020761,9.265573,-4.680201,-1.072577,8.030326,7.250792,2.041724,-9.287820,-9.711692,-5.840476,8.465552,9.347293,-6.044478,4.010235,-4.385739,-6.251587,-0.954517,6.751750,0.917540,1.645308,4.800397,-7.203440,3.727220,7.659977,0.198910,-2.372460,-4.462651,6.574452,-5.952908,-0.146109,7.030539,-5.949888,4.739144,-0.787685,8.471921,2.046320,-0.453154,6.247316,8.096597,5.487095,-8.330891,8.058677,-1.595538,-1.506518,1.687260,6.369099,1.727541,-9.679743], dtype = "float64")#candidate|2713|(845,)|const|float64
call_2712 = relay.TupleGetItem(func_808_call(relay.reshape(const_2713.astype('float64'), [13, 13, 5])), 0)
call_2714 = relay.TupleGetItem(func_810_call(relay.reshape(const_2713.astype('float64'), [13, 13, 5])), 0)
output = relay.Tuple([call_2689,var_2690,bop_2699,uop_2705,call_2712,const_2713,])
output2 = relay.Tuple([call_2691,var_2690,bop_2702,uop_2707,call_2714,const_2713,])
func_2722 = relay.Function([var_2690,], output)
mod['func_2722'] = func_2722
mod = relay.transform.InferType()(mod)
var_2723 = relay.var("var_2723", dtype = "float32", shape = (65,))#candidate|2723|(65,)|var|float32
output = func_2722(var_2723)
func_2724 = relay.Function([var_2723], output)
mutated_mod['func_2724'] = func_2724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_2746 = func_2548_call()
call_2747 = func_2548_call()
output = relay.Tuple([call_2746,])
output2 = relay.Tuple([call_2747,])
func_2758 = relay.Function([], output)
mod['func_2758'] = func_2758
mod = relay.transform.InferType()(mod)
output = func_2758()
func_2759 = relay.Function([], output)
mutated_mod['func_2759'] = func_2759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_2760 = relay.TupleGetItem(func_2758_call(), 0)
call_2761 = relay.TupleGetItem(func_2759_call(), 0)
output = call_2760
output2 = call_2761
func_2779 = relay.Function([], output)
mod['func_2779'] = func_2779
mod = relay.transform.InferType()(mod)
mutated_mod['func_2779'] = func_2779
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2779_call = mutated_mod.get_global_var('func_2779')
call_2780 = func_2779_call()
output = call_2780
func_2781 = relay.Function([], output)
mutated_mod['func_2781'] = func_2781
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2850 = relay.var("var_2850", dtype = "int16", shape = (14, 10, 11))#candidate|2850|(14, 10, 11)|var|int16
var_2851 = relay.var("var_2851", dtype = "int16", shape = (14, 10, 11))#candidate|2851|(14, 10, 11)|var|int16
bop_2852 = relay.equal(var_2850.astype('bool'), relay.reshape(var_2851.astype('bool'), relay.shape_of(var_2850))) # shape=(14, 10, 11)
output = relay.Tuple([bop_2852,])
output2 = relay.Tuple([bop_2852,])
func_2858 = relay.Function([var_2850,var_2851,], output)
mod['func_2858'] = func_2858
mod = relay.transform.InferType()(mod)
var_2859 = relay.var("var_2859", dtype = "int16", shape = (14, 10, 11))#candidate|2859|(14, 10, 11)|var|int16
var_2860 = relay.var("var_2860", dtype = "int16", shape = (14, 10, 11))#candidate|2860|(14, 10, 11)|var|int16
output = func_2858(var_2859,var_2860,)
func_2861 = relay.Function([var_2859,var_2860,], output)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2883 = relay.const([[[-6,9,1,10,-9,-9,9,7,-6,9],[-9,-2,3,-9,-3,-10,-3,-5,-7,10],[-7,10,-4,7,-7,-7,-9,-1,10,9],[10,-2,-8,-7,-4,-10,5,-7,6,10],[10,4,-6,-2,-4,2,10,-6,3,-3],[10,9,3,4,-2,7,-2,3,-5,-6],[8,2,4,-6,1,5,3,7,-2,7],[7,-7,-4,-7,-5,-7,-1,-1,-9,3],[6,-1,1,-5,1,8,8,7,6,-3],[8,-4,-3,5,1,1,-3,-6,-2,-9],[7,-3,3,-8,-3,-9,-3,2,-9,-7],[3,8,2,-4,9,1,1,10,3,10],[-1,9,-4,-9,5,3,-3,8,9,4]],[[-5,3,-7,9,-2,-6,-10,6,-5,6],[2,10,2,-5,-9,-8,-1,2,3,10],[2,10,-2,-9,5,6,5,-3,5,-8],[6,-1,-5,9,-6,-7,6,4,6,-6],[9,8,-10,-10,10,9,4,-3,5,-10],[10,1,5,-5,-9,1,4,1,-2,-9],[1,-6,-10,-5,-2,7,-2,-9,6,-9],[-8,-4,-2,4,-7,6,-1,-6,-5,5],[8,1,-10,9,6,-10,10,7,-10,10],[4,-7,10,5,6,3,1,6,-6,-7],[4,-7,3,8,4,1,6,2,-3,3],[8,5,-2,1,5,10,-7,-4,2,-4],[-2,4,-2,5,-7,7,4,5,1,2]]], dtype = "uint8")#candidate|2883|(2, 13, 10)|const|uint8
const_2884 = relay.const([[[3,4,10,2,8,8,-5,-4,-10,10],[-8,3,10,-1,10,3,-6,3,-2,1],[-3,3,-5,10,10,5,5,-7,4,2],[-8,7,3,-9,-5,6,-9,-7,-9,-2],[-8,-9,3,-10,6,4,8,-5,1,5],[-4,7,3,2,2,-1,10,-5,-5,-3],[6,4,-7,4,-5,-8,-3,4,9,-6],[-9,3,-8,-4,3,6,3,5,1,9],[-10,4,-2,-9,-6,5,-3,-5,-7,6],[6,-3,-3,10,10,9,6,3,-2,2],[9,-3,6,-5,-7,-4,4,2,6,3],[-1,5,-6,9,3,7,-9,-4,10,-7],[-10,-2,10,4,-5,-1,-9,-6,-7,6]],[[6,-1,4,7,5,-3,-7,-9,-6,-3],[2,-9,-10,-10,10,6,9,-3,5,9],[6,-4,4,1,8,2,8,5,-6,7],[-8,6,-4,-2,-8,8,-10,8,8,5],[3,-8,-9,-3,7,-5,-4,-4,-7,-5],[7,9,-6,3,-6,9,-8,-2,-1,3],[4,-3,-6,-7,3,-8,-7,-8,-5,6],[1,-3,-4,5,-2,3,6,-4,-3,7],[-5,4,3,-5,-5,2,-8,-5,1,-10],[-8,-9,-9,9,6,-5,3,2,-5,6],[8,4,-4,10,8,-10,-3,3,6,1],[7,4,9,-8,3,-4,4,8,-8,-7],[8,-3,8,2,-7,7,-1,6,9,6]]], dtype = "uint8")#candidate|2884|(2, 13, 10)|const|uint8
bop_2885 = relay.subtract(const_2883.astype('uint8'), relay.reshape(const_2884.astype('uint8'), relay.shape_of(const_2883))) # shape=(2, 13, 10)
output = bop_2885
output2 = bop_2885
func_2893 = relay.Function([], output)
mod['func_2893'] = func_2893
mod = relay.transform.InferType()(mod)
output = func_2893()
func_2894 = relay.Function([], output)
mutated_mod['func_2894'] = func_2894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_2907 = func_2652_call()
call_2908 = func_2652_call()
func_2858_call = mod.get_global_var('func_2858')
func_2861_call = mutated_mod.get_global_var('func_2861')
var_2965 = relay.var("var_2965", dtype = "int16", shape = (1540,))#candidate|2965|(1540,)|var|int16
call_2964 = relay.TupleGetItem(func_2858_call(relay.reshape(var_2965.astype('int16'), [14, 10, 11]), relay.reshape(var_2965.astype('int16'), [14, 10, 11]), ), 0)
call_2966 = relay.TupleGetItem(func_2861_call(relay.reshape(var_2965.astype('int16'), [14, 10, 11]), relay.reshape(var_2965.astype('int16'), [14, 10, 11]), ), 0)
output = relay.Tuple([call_2907,call_2964,var_2965,])
output2 = relay.Tuple([call_2908,call_2966,var_2965,])
func_2975 = relay.Function([var_2965,], output)
mod['func_2975'] = func_2975
mod = relay.transform.InferType()(mod)
mutated_mod['func_2975'] = func_2975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2976 = relay.var("var_2976", dtype = "int16", shape = (1540,))#candidate|2976|(1540,)|var|int16
func_2975_call = mutated_mod.get_global_var('func_2975')
call_2977 = func_2975_call(var_2976)
output = call_2977
func_2978 = relay.Function([var_2976], output)
mutated_mod['func_2978'] = func_2978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3017 = func_2548_call()
call_3018 = func_2548_call()
func_2858_call = mod.get_global_var('func_2858')
func_2861_call = mutated_mod.get_global_var('func_2861')
const_3021 = relay.const([4,-3,7,-9,10,-9,-2,5,2,6,-5,-5,-10,-4,-4,9,6,-6,-3,-3,9,-10,-5,-2,5,8,-4,-6,10,5,-4,-1,-8,5,-1,4,2,-2,-9,5,-2,-5,-10,3,1,-3,4,-7,-10,-4,1,-3,-4,-10,-1,8,-10,2,-3,9,2,-9,5,-9,-8,-7,10,10,7,8,6,1,-8,7,7,7,7,8,-2,6,9,-9,-5,3,-10,10,-7,-6,-4,-8,9,10,1,-8,4,-5,7,-2,-2,4,7,9,-7,-1,-10,-1,4,6,9,8,-10,-6,4,1,4,9,-1,7,5,-10,5,-5,5,4,-5,-9,5,2,-5,7,-10,1,9,1,6,-1,5,1,7,-3,-8,-7,-10,-2,4,4,-10,-5,-5,-2,-8,-1,9,2,-7,-6,9,-8,4,2,1,-4,-3,9,7,-8,-4,-9,-2,7,-6,-4,8,-4,2,-2,3,4,-7,3,-4,-9,1,9,9,-3,-9,-1,-1,-1,10,5,-1,9,-4,2,-3,-6,10,-8,-1,5,-1,9,1,4,7,-5,2,6,8,4,2,-6,5,-3,-8,-8,-5,1,-1,9,6,-4,-10,4,2,-9,-10,-7,10,1,8,-9,8,-3,4,-5,-6,1,-1,3,-7,-8,-7,9,-4,-7,10,7,5,7,10,4,-10,1,1,7,-6,4,9,-3,6,5,-8,-5,4,4,3,1,4,7,8,5,10,-7,5,-3,-2,8,-3,-4,-5,1,8,-9,6,8,-1,-7,-2,-9,-6,9,-1,9,10,-2,-2,10,5,-2,7,-4,-3,-9,-5,4,-1,3,-10,7,-6,2,2,-9,5,-7,-1,3,1,-1,-10,-10,-9,-4,-5,-8,10,2,4,-10,-3,1,9,10,-6,8,7,9,-3,5,-4,1,-5,-7,-4,-9,-3,3,-4,3,3,8,-1,7,7,-2,-7,4,-5,2,-7,8,-1,3,-1,7,-8,-5,-9,-3,-4,-7,7,2,6,1,3,5,-8,1,-7,-5,-1,-5,3,-9,10,-10,1,9,6,-9,9,4,2,-9,4,-3,-6,-5,6,-10,2,-5,3,-8,-4,-9,1,-2,-1,-4,-7,-9,-7,4,10,2,-5,3,-1,-7,10,-9,1,5,-2,-6,8,-2,10,8,3,2,-5,3,7,-4,-6,-5,-4,-9,-1,-7,-8,2,8,-8,10,-6,4,-2,9,-8,-8,-2,-5,-3,5,3,-1,-1,-7,-8,10,3,-5,-7,-10,1,-7,-2,-5,-9,5,4,-1,4,6,6,-8,-2,-3,-1,-3,10,-7,-2,-9,3,-5,9,3,-3,-7,-7,-5,2,-7,10,5,-9,4,5,4,-7,-4,-4,-2,-8,-3,8,3,5,-2,1,5,-10,-3,2,2,6,-6,4,7,-8,6,-10,5,8,-2,-7,-9,8,9,-1,7,-6,8,-2,-2,7,8,7,-5,-3,4,-4,6,-6,9,-5,-5,-3,10,1,-8,10,-6,-1,3,-5,-5,-1,10,5,5,8,-10,-6,-6,4,5,-2,-2,1,-1,2,7,7,1,9,-2,9,-7,4,-1,-1,-4,-7,-8,-4,9,4,-1,3,5,-9,8,8,-2,1,1,-10,-5,-1,-7,1,-1,10,-8,-6,-7,-9,-5,-10,-9,10,3,3,7,2,-9,10,9,-5,-6,-1,6,-8,7,9,1,6,-9,3,-2,-2,7,4,3,-7,10,10,10,-6,7,4,5,3,8,-4,8,-3,7,3,9,-8,7,-5,-9,-5,6,-6,9,7,-5,8,-6,-10,-2,-4,4,10,-2,-10,5,7,7,4,-3,3,-3,-3,6,3,-8,-9,-1,-4,3,5,-1,3,6,-2,-10,6,8,2,3,-1,2,-3,-8,-7,-3,3,3,-10,3,9,-10,7,-6,-1,-6,-10,-2,-1,-10,-5,9,6,4,-4,-1,10,-7,7,-8,2,1,-2,5,-5,-2,-7,-8,6,9,7,-2,-9,-6,4,-9,7,8,-4,5,-5,10,9,-5,8,-6,3,-5,-8,-3,4,9,-1,-3,10,-4,4,-9,2,1,-7,6,-6,6,-2,6,-10,-1,2,8,1,-6,-6,1,6,-5,-10,5,-1,-10,10,1,1,-3,-6,-2,10,4,-3,-1,9,-4,-10,5,-1,-6,-2,-1,9,-5,-2,1,-5,10,-2,-8,1,-9,10,2,-2,-2,-5,5,-6,8,7,4,6,1,6,-8,1,8,5,5,-10,10,-10,1,7,-8,9,-8,5,-3,-1,10,10,3,9,1,-5,-7,7,-2,7,9,-9,1,8,-9,-6,-1,6,-2,-2,-8,-7,1,-3,8,-1,6,-6,8,-4,5,3,-6,7,-7,4,-5,2,-5,-7,5,-2,9,-9,-3,3,2,-3,-8,10,-1,-3,-5,10,-8,-3,-4,3,4,-2,6,7,3,8,-2,7,3,8,4,8,-5,-4,-7,-4,-2,1,2,-6,10,6,-2,-5,-2,-5,-3,8,-5,6,-3,6,-9,-1,-5,-5,1,-8,6,-10,-8,-7,-9,8,-9,-9,-7,8,-1,6,-6,-4,-4,-1,-6,1,7,5,-2,1,7,6,6,9,-2,5,6,4,2,10,-8,1,6,-1,-9,4,6,-2,-3,-10,-6,3,-6,1,4,-5,-10,-8,-4,-9,-5,1,-2,-2,5,-9,8,-4,3,-4,7,-1,-8,5,8,-7,6,4,4,-2,9,10,5,4,9,7,9,-5,7,-9,6,9,7,-8,1,-7,-1,-10,3,6,-3,-10,-3,9,4,8,-7,2,2,2,9,-4,8,-9,-1,5,-2,-8,1,-6,7,-7,-10,-8,-8,-4,10,7,5,3,3,-1,4,-9,-9,9,8,10,-2,10,9,-7,5,8,-2,-5,-10,9,8,-6,6,4,-3,3,5,5,9,-2,8,4,3,-4,-8,5,-4,4,10,3,4,-9,9,-2,8,1,-6,-5,-4,1,5,-9,-1,-8,-3,-2,-8,4,7,-6,-10,10,-1,6,-5,9,-3,10,3,4,-2,1,-9,7,-2,10,9,-9,-4,-6,-2,-2,3,-8,1,-2,-8,5,9,3,3,7,-1,2,1,-6,-3,7,-2,2,-7,-8,-9,-2,3,2,-7,9,5,-5,9,1,-2,10,5,7,6,9,-8,-6,6,-8,6,3,1,2,-3,-4,5,-9,5,4,-3,9,-4,4,-2,5,2,-3,-9,-4,10,-7,3,-5,6,-2,-2,2,-5,-8,-1,-6,2,-5,-6,3,-9,1,10,10,5,5,-2,-7,-5,5,7,-6,-3,-4,-2,-5,9,2,-1,-3,2,-8,-9,3,-10,-8,2,-10,9,-3,10,3,-5,-9,5,5,-4,-4,-7,-4,5,-6,8,-1,-7,-9,4,8,-4,6,-9,-9,-5,5,-9,-9,-1,-1,-8,-7,7,-3,7,-2,6,-2,-8,-9,5,-5,3,1,8,6,-4,-2,-10,-6,4,-7,4,9,-2,7,4,-4,-7,-2,8,-10,10,5,-6,-6,9,-3,5,-6,-2,-4,8,-3,4,-9,-1,5,2,-1,3,1,3,4,7,4,-7,-6,-8,-8,-2,7,8,7,3,8,-5,7,-4,5,3,1,-10,4,3,4,-3,-1,4,10,-5,-5,-9,10,5,5,7,-1,2,-6,-9,2,-1,2,-10,3,1,8,2,3,5,9,-3,-8,-6,-2,7,7,-9,-5,1,6,8,4,-4,-1,-7,1,-9,-7,-5,1,4,-4,-5,4,9,-10,8,8,10,-10,-8,-9,2,-5,6,1,-2,-3,-3,4,8,8,-5,7,6,4,-10,4,-2,9,2,8,-6,-2,-1,-1,-8,7,5,-3,-3,6,2,3,8,-2,3,-6,-4,-8,-5,-3,9,-10,-2,-7,10,8,5,7,-5,-4,10,9,-10,-6,7,-10,7,-1,1,-6,3,-4,-5,-10,2,1,5,6,7,10,1,-8,-10,-1,-9,3,-1,8,7,-10,-5,-1,-1,6,10,9,8,4,-10,-8,-2,-9,-7,2,-9,5,1,4,6,9,-8,9,-8,1,-8,7,9,4,4,-1,8,7,-3,-3,-3,-5,1,-6,-7,-8,-7,6,2,-1], dtype = "int16")#candidate|3021|(1540,)|const|int16
call_3020 = relay.TupleGetItem(func_2858_call(relay.reshape(const_3021.astype('int16'), [14, 10, 11]), relay.reshape(const_3021.astype('int16'), [14, 10, 11]), ), 0)
call_3022 = relay.TupleGetItem(func_2861_call(relay.reshape(const_3021.astype('int16'), [14, 10, 11]), relay.reshape(const_3021.astype('int16'), [14, 10, 11]), ), 0)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3028 = func_2548_call()
call_3029 = func_2548_call()
output = relay.Tuple([call_3017,call_3020,const_3021,call_3028,])
output2 = relay.Tuple([call_3018,call_3022,const_3021,call_3029,])
func_3035 = relay.Function([], output)
mod['func_3035'] = func_3035
mod = relay.transform.InferType()(mod)
mutated_mod['func_3035'] = func_3035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3035_call = mutated_mod.get_global_var('func_3035')
call_3036 = func_3035_call()
output = call_3036
func_3037 = relay.Function([], output)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3035_call = mod.get_global_var('func_3035')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3050 = relay.TupleGetItem(func_3035_call(), 0)
call_3051 = relay.TupleGetItem(func_3037_call(), 0)
var_3052 = relay.var("var_3052", dtype = "float64", shape = (11, 15, 10))#candidate|3052|(11, 15, 10)|var|float64
bop_3053 = relay.maximum(call_3050.astype('int16'), relay.reshape(var_3052.astype('int16'), relay.shape_of(call_3050))) # shape=(11, 15, 10)
bop_3056 = relay.maximum(call_3051.astype('int16'), relay.reshape(var_3052.astype('int16'), relay.shape_of(call_3051))) # shape=(11, 15, 10)
bop_3059 = relay.bitwise_and(bop_3053.astype('int32'), relay.reshape(call_3050.astype('int32'), relay.shape_of(bop_3053))) # shape=(11, 15, 10)
bop_3062 = relay.bitwise_and(bop_3056.astype('int32'), relay.reshape(call_3051.astype('int32'), relay.shape_of(bop_3056))) # shape=(11, 15, 10)
output = bop_3059
output2 = bop_3062
func_3069 = relay.Function([var_3052,], output)
mod['func_3069'] = func_3069
mod = relay.transform.InferType()(mod)
var_3070 = relay.var("var_3070", dtype = "float64", shape = (11, 15, 10))#candidate|3070|(11, 15, 10)|var|float64
output = func_3069(var_3070)
func_3071 = relay.Function([var_3070], output)
mutated_mod['func_3071'] = func_3071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3081 = func_2548_call()
call_3082 = func_2548_call()
output = relay.Tuple([call_3081,])
output2 = relay.Tuple([call_3082,])
func_3088 = relay.Function([], output)
mod['func_3088'] = func_3088
mod = relay.transform.InferType()(mod)
mutated_mod['func_3088'] = func_3088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3088_call = mutated_mod.get_global_var('func_3088')
call_3089 = func_3088_call()
output = call_3089
func_3090 = relay.Function([], output)
mutated_mod['func_3090'] = func_3090
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2893_call = mod.get_global_var('func_2893')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_3091 = func_2893_call()
call_3092 = func_2893_call()
output = relay.Tuple([call_3091,])
output2 = relay.Tuple([call_3092,])
func_3094 = relay.Function([], output)
mod['func_3094'] = func_3094
mod = relay.transform.InferType()(mod)
output = func_3094()
func_3095 = relay.Function([], output)
mutated_mod['func_3095'] = func_3095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3122 = relay.var("var_3122", dtype = "int32", shape = (2, 9, 6))#candidate|3122|(2, 9, 6)|var|int32
var_3123 = relay.var("var_3123", dtype = "int32", shape = (2, 9, 6))#candidate|3123|(2, 9, 6)|var|int32
bop_3124 = relay.equal(var_3122.astype('bool'), relay.reshape(var_3123.astype('bool'), relay.shape_of(var_3122))) # shape=(2, 9, 6)
func_761_call = mod.get_global_var('func_761')
func_765_call = mutated_mod.get_global_var('func_765')
var_3132 = relay.var("var_3132", dtype = "int64", shape = (4, 44))#candidate|3132|(4, 44)|var|int64
var_3133 = relay.var("var_3133", dtype = "bool", shape = ())#candidate|3133|()|var|bool
call_3131 = relay.TupleGetItem(func_761_call(relay.reshape(var_3132.astype('int64'), [1, 11, 16]), relay.reshape(var_3133.astype('bool'), []), ), 1)
call_3134 = relay.TupleGetItem(func_765_call(relay.reshape(var_3132.astype('int64'), [1, 11, 16]), relay.reshape(var_3133.astype('bool'), []), ), 1)
func_676_call = mod.get_global_var('func_676')
func_680_call = mutated_mod.get_global_var('func_680')
const_3137 = relay.const([-5.030276,4.899805,2.844075,-1.944800,-6.100068,-0.805062,2.653664,2.574929,-9.795292,-8.716025,3.442094,1.914475,4.901905,-9.794556,0.548807,4.512485,1.936687,-8.468724,-1.682194,7.296117,5.889006,3.513049,-9.708213,-7.981068,-9.050952,1.236957,5.799901,5.563811,-0.998360,2.145557,2.969670,6.950044,-2.480724,0.935305,-3.653853,1.982077,-7.379387,-3.514976,-7.437303,1.553895,4.216359,-8.713875,-7.279345,4.727449,4.568925,-2.178473,1.301882,1.358737,-4.017594,7.255839,-4.084671,-2.230198,3.329440,0.726862,9.168781,-5.193557,5.718224,8.010868,9.047724,-0.445607,-5.585600,2.928696,-0.326324,9.001521,-6.299104,2.865098,3.115069,4.314630,-9.224753,-6.936299,-8.105066,3.955718,-7.249492,1.415679,6.864850,-4.075275,-1.997187,-1.263993,0.618000,2.213742,-5.486533,-6.848140,8.078007,-6.267538,-4.159973,3.586952,9.098854,-7.658558,-2.568695,9.611038,-1.484150,5.610520,-5.805204,0.357837,8.083141,8.112642,-7.655714,4.172914,2.906174,3.633566,7.774720,-2.238855,3.762660,-8.141004,-0.811632,-5.007498,3.967592,-5.211291,3.562854,1.262825,-1.151308,-1.328071,-2.555161,-7.016526,3.006648,3.684649,5.921151,7.778247,2.069394,-2.516637,-5.796900,-0.679400,-9.115597,3.609840,-5.043420,-5.611665,0.241486,6.292615,-2.828255,0.977895,-1.887003,-4.884809,5.047364,-7.595425,8.421551,-2.585370,4.648425,-0.084250,1.924804,5.973190,-8.139488,6.299734,-1.275369,-6.134208,-0.258730,-0.526933,-0.390948,-1.376199,5.624851,-4.924769,7.742626,-7.013856,6.047058,-7.164530,-5.405058,3.248637,1.390753,-1.220384,3.415778,8.341301,-5.711807,-9.418047,-3.707504,-5.023347,-5.706332,1.740300,-2.818071,-0.072771,-8.628308,-3.375658,4.624001,0.529008,-9.039145,-8.305281,-8.220741,-3.646753,-8.129348,-1.057447,4.227235,-9.098721,7.089974,-6.518741,6.933447,-6.601749,3.102534,-3.510733,-1.685456,-5.553011,0.820321,-4.343709,-2.551304,-7.399358,-4.743251,9.628493,-5.285549,9.014334,9.140697,2.335065,-0.128753,-1.849667,-6.615135,-0.531183,2.081645,-3.079313,-3.623776,-9.666823,4.265016,3.681170,7.582768,9.131144,-8.857173,-4.612998,-9.835498,-6.064505,9.719776,0.249302,7.279737,-0.368771,-6.614567,4.719082,1.832099,4.724316,-8.799274,-4.414877], dtype = "float32")#candidate|3137|(224,)|const|float32
const_3138 = relay.const([-0.224648,-6.779484,3.888681,-4.212656,9.439853,8.497098,1.083617,5.120962,-5.049173,-2.160695,4.046149,-2.224642,-4.441698,3.169739,-3.337871,3.961479,-3.561008,-1.693828,-4.775988,-1.073389,-9.959108,-3.323361,9.400148,4.526359,-7.643320,-7.741531,4.827031,-4.512118,1.845940,9.751514,-0.498498,6.899139,-4.372296,3.433368,-3.307282,2.440325,9.650803,-9.119188,1.613945,-0.545954,-2.056570,4.711800,6.569334,5.888669,-0.335473,-4.204658,-0.524897,6.268924,3.351654,7.365360,5.331597,-1.908042,4.724817,3.465406,-1.670949,-8.972430,-5.300872,-6.422162,0.786452,6.091134,6.330350,3.199676,0.025409,-3.489321,6.496244,-3.033085,-8.261649,1.157197,5.529574,5.017127,-2.908562,-4.558076,5.137946,-8.743919,3.897862,-9.147262,7.331518,-4.976223,4.008536,-0.848981,-5.111063,3.445881,0.844625,-4.409770,0.421046,3.939499,-6.211546,7.839645,-8.792728,-6.993114,6.766390,-9.035559,-6.106919,2.449554,-9.258618,-2.041657,-3.704976,4.187817,-7.349729,-2.945262,3.203006,8.614084,-9.615542,-9.039325,-8.516246,-5.348682,2.603467,4.319913,7.692620,5.024112,-5.584056,-0.384992,7.504848,-7.463276,-5.697065,-0.182719,-2.189022,6.962459,-9.453429,-4.618077,-4.266006,-8.145060,6.437275,-0.683333,-6.026187,-1.399388,6.888681,3.419316,1.100367,2.010806,-0.782173,6.931295,7.489599,7.023490,-1.778835,1.612495,-0.163831,7.179267,6.928429,-2.409112,2.977225,-7.494702,-7.944889,-6.508770,6.031010,3.700333,2.218677,3.147489,6.654279,-8.560762,-3.812499,-9.552347,0.432623,-2.689356,6.502218,-4.252102,-0.201468,-0.159910,-7.781433,-5.947630,-1.722093,2.990351,-0.930899,-5.313908,-7.135598,-7.385567,-1.155929,7.087560,-2.222232,-1.271742,2.951092,-9.334965,6.435798,-1.283125,3.892429,-6.041252,-7.450156,9.764247,-3.711573,-5.152366,-8.014020,0.265513,8.893439,-2.764832,-0.390375,-9.378844,3.081535,7.017151,1.419990], dtype = "float32")#candidate|3138|(189,)|const|float32
call_3136 = relay.TupleGetItem(func_676_call(relay.reshape(const_3137.astype('float32'), [16, 1, 14]), relay.reshape(const_3138.astype('float32'), [189,]), ), 1)
call_3139 = relay.TupleGetItem(func_680_call(relay.reshape(const_3137.astype('float32'), [16, 1, 14]), relay.reshape(const_3138.astype('float32'), [189,]), ), 1)
bop_3140 = relay.left_shift(var_3133.astype('uint32'), call_3131.astype('uint32')) # shape=(16, 1, 13)
bop_3143 = relay.left_shift(var_3133.astype('uint32'), call_3134.astype('uint32')) # shape=(16, 1, 13)
output = relay.Tuple([bop_3124,var_3132,call_3136,const_3137,const_3138,bop_3140,])
output2 = relay.Tuple([bop_3124,var_3132,call_3139,const_3137,const_3138,bop_3143,])
func_3145 = relay.Function([var_3122,var_3123,var_3132,var_3133,], output)
mod['func_3145'] = func_3145
mod = relay.transform.InferType()(mod)
mutated_mod['func_3145'] = func_3145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3145_call = mutated_mod.get_global_var('func_3145')
var_3147 = relay.var("var_3147", dtype = "int32", shape = (2, 9, 6))#candidate|3147|(2, 9, 6)|var|int32
var_3148 = relay.var("var_3148", dtype = "int32", shape = (2, 9, 6))#candidate|3148|(2, 9, 6)|var|int32
var_3149 = relay.var("var_3149", dtype = "int64", shape = (4, 44))#candidate|3149|(4, 44)|var|int64
var_3150 = relay.var("var_3150", dtype = "bool", shape = ())#candidate|3150|()|var|bool
call_3146 = func_3145_call(var_3147,var_3148,var_3149,var_3150,)
output = call_3146
func_3151 = relay.Function([var_3147,var_3148,var_3149,var_3150,], output)
mutated_mod['func_3151'] = func_3151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3170 = func_2548_call()
call_3171 = func_2548_call()
func_808_call = mod.get_global_var('func_808')
func_810_call = mutated_mod.get_global_var('func_810')
const_3179 = relay.const([3.331328,8.272219,7.482863,-9.376238,1.127768,6.651227,6.819143,6.225663,7.183116,9.956000,7.636170,-1.649732,-6.590731,-8.640884,-4.356283,1.635201,1.800331,5.966972,-9.964308,7.000116,-5.488543,5.849383,9.218159,6.066752,-5.929615,-6.306255,-9.660256,6.952423,7.243081,-9.613408,0.121089,-2.599879,-3.979668,8.988510,3.889708,-0.562195,9.288682,3.941709,-0.507878,0.520268,1.761881,-5.488654,4.092739,-8.538628,8.208503,-0.453786,7.731836,-0.990470,-6.739708,-5.725574,-8.578366,7.431556,2.128084,-7.283982,1.266764,-9.568532,-6.981366,-4.145993,-7.844212,-9.907908,2.928604,-4.926887,9.310440,-8.105229,-8.816159,5.879687,0.069893,-5.011104,2.901245,-5.686402,4.596670,-3.358059,7.786300,8.056699,1.130405,-3.112394,-8.389854,5.525671,1.008045,3.247085,4.847727,-4.176079,-8.758556,4.403946,-0.719515,-3.226984,-0.159860,5.124423,-4.989147,8.726976,-9.097420,-4.184421,-2.942543,0.359375,-0.687257,0.357689,0.184670,-3.715218,-4.894870,-1.231001,-3.874990,-5.303409,2.653750,-7.330320,-5.291725,1.488334,0.926246,0.991857,-3.679515,7.504853,-3.606383,-9.696939,5.231043,2.479888,-2.965377,-4.506944,-2.600410,9.866058,-7.920792,3.871500,3.628274,0.209146,3.507342,-9.867350,4.199083,-1.592557,-2.817764,-5.535689,8.021438,2.551407,4.370816,-2.202908,3.414266,3.011964,-1.358257,-0.180797,3.468920,-9.965060,2.799392,-1.598192,0.149176,-4.950945,8.917715,1.027278,-5.928280,-8.888808,-1.402666,1.046784,-9.302258,3.899446,-3.216557,-2.429679,3.860948,-9.275209,8.601284,-2.646325,6.218554,-1.062098,7.037166,5.570504,1.681103,0.995239,4.610346,7.954575,0.400839,-3.417475,-9.542053,4.071177,9.135788,-4.339369,9.037244,3.176615,4.038706,3.722129,9.554988,-9.766466,9.494560,-0.423265,2.377232,-1.927014,-8.790342,-4.747156,-5.076436,3.479624,3.954429,-1.993079,-8.568663,3.094344,-1.093829,-7.286886,4.921784,-3.839700,-8.236694,9.625011,-3.258020,-1.678230,-5.500420,2.578107,-2.951399,7.202427,7.767754,-1.450876,4.497517,4.129094,0.763252,-7.686884,2.086741,8.710756,5.889061,9.886766,-5.720438,1.580040,-8.271501,2.362222,0.303400,-0.155048,6.779196,-0.481570,-0.140723,-9.714043,5.999497,-7.190293,3.352795,-5.373273,0.871614,-1.391223,8.956343,-6.385926,-4.676144,-1.910220,-9.573927,-2.741939,-4.106246,7.735387,6.477273,-8.114419,-2.563680,0.618764,-2.516234,-0.346768,1.840411,2.051709,-4.493527,-6.735313,-2.807225,-5.970459,4.848198,-7.180028,4.959381,-6.771805,8.772290,3.878974,6.701220,0.833068,-7.166446,3.052828,-7.813777,-2.772345,9.698864,0.955830,-2.258378,-8.062511,8.348399,2.687726,-4.596710,9.466176,-4.522360,6.219036,2.517387,7.044262,8.773183,0.497886,0.490208,-8.556472,-9.302360,-7.300246,-8.781933,-0.715243,3.391089,-8.081338,9.288524,3.330541,6.267439,2.339870,0.085494,-4.554968,-2.962841,-5.708417,-3.322515,-7.842341,9.631265,3.674346,7.940615,1.136720,0.832814,0.210634,6.806926,-0.387987,9.402955,0.861703,-9.733735,0.953271,4.766380,-4.233096,8.691668,-3.270226,-0.292966,-4.115359,7.317696,-4.745458,1.114605,0.415070,6.720581,6.151821,9.598524,4.096804,8.961658,-6.541381,9.403735,-3.173445,6.177366,8.560796,-4.990717,-3.364238,3.291790,-3.226549,-1.210862,7.149536,1.258785,-8.293905,1.476452,-6.197727,2.117796,7.788271,4.046821,5.750424,-3.421761,-3.794767,-6.542838,-6.221766,-2.939701,-0.336183,-9.738551,-9.525575,1.695638,-6.383241,-9.005689,7.959297,-5.795222,-6.061696,-1.603867,-1.783436,-5.573135,4.796775,2.432401,-7.120354,-7.394004,-0.987010,-4.147542,-4.461002,-1.657514,-6.242021,5.071230,-5.441778,-1.438557,7.786184,-8.969510,7.757844,5.770135,5.841129,-2.170554,-0.265364,-1.932611,4.894889,0.926013,-0.320604,5.730320,-4.485408,-8.255408,-9.949969,-6.148125,8.490333,1.559215,6.611006,9.584436,-0.555866,3.505297,-6.985431,2.869407,-7.747960,3.435813,-6.037761,-7.467909,7.701958,7.164399,5.870789,-1.526661,-7.227553,-2.622294,-4.821866,-0.971217,4.906713,3.694725,-6.238936,-4.777332,8.233597,8.353016,-8.184451,-0.266062,8.760541,0.479143,5.232961,1.438084,6.252038,-8.847936,-7.867447,-9.881695,-4.471327,7.693849,1.957869,6.487122,-9.923714,-3.085939,-9.105228,-5.679953,5.429241,9.802052,3.019504,-9.162273,-5.102344,-4.184901,-5.916851,-2.840007,-6.222654,8.878629,5.494177,-8.580719,4.925653,-7.979201,-9.849537,5.137908,-6.723787,-4.764474,-7.586892,4.717096,7.360285,4.936454,-9.953260,-3.986431,3.653969,-7.186995,9.959462,-3.837891,-8.256330,-5.865108,-6.941899,-6.565889,-2.976039,-4.811167,0.519643,9.635590,-0.556203,-9.258518,8.714659,9.112938,-5.266874,0.236706,0.061405,7.985269,8.104216,-0.956917,9.847481,-5.440853,6.321847,-5.981106,-7.022691,-6.695838,-6.078969,-4.017422,2.918597,6.063247,5.000709,1.598914,-9.765712,-4.615710,3.600777,1.573115,2.487206,-5.500563,9.695625,-5.476879,6.706810,-2.978867,1.370745,1.787213,-3.384215,3.346894,9.190667,-5.877693,3.635969,5.429891,8.844846,7.341006,5.195976,-1.770670,6.614891,-4.332731,2.603904,-9.534195,9.150306,0.466164,-7.071767,-2.936745,-9.615374,-4.607514,6.315595,-0.533427,-0.532876,-6.606238,8.582903,-3.976693,6.606076,8.919989,0.478213,8.967951,2.422289,3.328177,5.178443,-1.300646,-6.906695,7.483114,-5.630497,1.781515,-9.977585,-3.419830,-9.707667,-0.428473,-1.244284,-9.590110,4.514104,-2.496980,-9.173647,0.534645,2.413467,1.177977,-5.529466,-9.788479,-9.784297,3.868673,4.393761,8.037199,3.671345,7.428563,5.185780,1.438986,6.991606,-1.119198,6.346710,-7.546944,9.350674,2.784137,-6.129781,-8.973372,5.176276,5.823265,-3.542997,-6.452710,-3.691546,5.471655,6.736099,8.725608,-3.245677,-2.375176,5.880415,8.521824,6.535383,-3.874841,-6.338423,-4.371020,-7.849039,-3.619431,-2.501071,-2.550821,-6.164862,2.705202,0.766793,-2.678622,-4.404275,2.758539,8.545094,-1.159210,0.963497,4.203163,8.038083,6.477482,1.306241,-0.803260,-6.971056,7.121534,-5.504337,-4.976268,0.133797,-7.670955,-6.803411,3.341814,-8.685345,-2.521907,-5.121718,7.213919,9.570183,0.978245,-8.859527,9.762088,6.421871,6.118968,3.089001,0.190602,-6.689502,-6.419910,5.673551,9.164804,6.241822,-8.363095,6.021196,4.848694,-9.744178,6.475960,8.723225,-5.558915,5.493901,-6.029192,7.339650,9.016696,1.980645,-4.553873,3.282031,-5.095136,4.807335,-2.993922,-0.358569,-2.849221,4.371237,8.907491,-2.954676,3.435655,8.081467,-8.636938,4.003915,2.138712,0.525439,9.328646,7.001871,9.935410,-4.685002,1.894236,9.184837,-9.853127,0.662953,8.438832,2.253446,-4.643451,1.884665,9.035563,-4.763197,5.268502,8.449683,7.053105,8.954101,2.905526,-4.277634,-9.295098,-7.403760,-5.513580,4.783958,5.610297,-5.816106,5.038726,-1.813394,-6.149236,4.631502,-9.581372,0.769700,7.464121,-9.333833,-4.059904,6.142347,8.048531,3.229683,-8.097820,5.751231,1.455047,8.348938,1.992988,-4.223021,-5.632610,-3.749309,-1.492784,-5.278549,-1.146966,-1.896510,-8.030549,4.466005,-9.590641,0.811314,4.286561,-8.667417,2.767427,-8.419618,-8.092329,-2.585482,-6.388341,3.350669,-3.042530,8.198983,9.613616,-1.027664,8.745194,5.962309,-2.750577,-1.850456,1.985536,8.153572,-3.332266,-4.645420,-9.309440,-6.049884,2.823729,9.213534,9.626669,-6.072287,-6.253862,-4.920551,-2.456965,6.617404,1.602395,3.915860,6.414876,2.238895,-9.154485,-1.717718,-4.482857,4.003567,-2.431734,-3.307294,5.949860,-5.429716,2.736259,-8.244950,-9.974432,-9.152942,9.694910,6.645702,-1.881032,5.584784,-1.680893,6.274285,-1.627524,-4.513381,2.972143,-3.361219,0.507690,3.167828,-7.094282,-4.169102,3.830210,-4.291535,-8.049889,6.934868,-4.539504,9.232095,-0.167472,5.303668,-0.300365,-7.830539,-3.106937,-5.958882,5.053995,-0.304068,8.911620,0.383247,-2.030981,-7.455353,8.353074,4.001458,-1.173923,-6.792730,-4.131169,5.031431,6.494281,-5.381742,-5.862760,5.808936,-2.568987,5.919398,-9.276968,1.307265,-5.601440,-9.082737,9.605880,3.666448,-2.951768,9.238664,-6.187577,4.652097,-9.033518,6.163660,4.455229,-9.941697,5.403571,4.623885,-1.741067,-8.958191,-3.406717,-9.170490,-6.459846,4.263750,8.095345,5.811139,9.985348,6.042590,6.553536,4.917450,6.823779,-3.849632,0.545385,9.366359,-9.890627,0.196771,-8.955822,9.661494,9.357706,7.068730,8.940803,-4.879478,-3.255291,-4.690766,5.693847,-6.771166,1.277559,8.676437,-7.162864,9.771450,-9.428800,-6.216765,-0.927184], dtype = "float64")#candidate|3179|(845,)|const|float64
call_3178 = relay.TupleGetItem(func_808_call(relay.reshape(const_3179.astype('float64'), [13, 13, 5])), 0)
call_3180 = relay.TupleGetItem(func_810_call(relay.reshape(const_3179.astype('float64'), [13, 13, 5])), 0)
output = relay.Tuple([call_3170,call_3178,const_3179,])
output2 = relay.Tuple([call_3171,call_3180,const_3179,])
func_3181 = relay.Function([], output)
mod['func_3181'] = func_3181
mod = relay.transform.InferType()(mod)
output = func_3181()
func_3182 = relay.Function([], output)
mutated_mod['func_3182'] = func_3182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3215 = func_2548_call()
call_3216 = func_2548_call()
output = relay.Tuple([call_3215,])
output2 = relay.Tuple([call_3216,])
func_3223 = relay.Function([], output)
mod['func_3223'] = func_3223
mod = relay.transform.InferType()(mod)
mutated_mod['func_3223'] = func_3223
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3223_call = mutated_mod.get_global_var('func_3223')
call_3224 = func_3223_call()
output = call_3224
func_3225 = relay.Function([], output)
mutated_mod['func_3225'] = func_3225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_3238 = func_2779_call()
call_3239 = func_2779_call()
output = call_3238
output2 = call_3239
func_3254 = relay.Function([], output)
mod['func_3254'] = func_3254
mod = relay.transform.InferType()(mod)
mutated_mod['func_3254'] = func_3254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mutated_mod.get_global_var('func_3254')
call_3255 = func_3254_call()
output = call_3255
func_3256 = relay.Function([], output)
mutated_mod['func_3256'] = func_3256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_3336 = func_2779_call()
call_3337 = func_2779_call()
const_3351 = relay.const([[[6.798540,8.443800,3.822716,-9.820260,-4.047534,-9.894793,7.803418,-1.935158,5.107662,3.454869],[0.575249,-8.143807,6.024627,-4.286330,-3.453610,2.457968,-2.231395,-3.454474,0.072269,5.020565],[5.084756,4.534918,9.448057,4.869712,7.671122,5.134347,1.125873,2.090867,-3.738810,8.340142],[7.118362,-2.930718,7.832448,-6.441840,9.210562,-0.896265,9.975387,3.823969,5.212094,6.955647],[8.429491,2.576204,-1.230715,-8.713011,-4.787824,5.655419,-7.169285,5.796938,7.820184,-5.768958],[8.942679,5.651100,2.249176,1.460584,2.353758,6.041367,-9.098248,7.645706,4.205954,3.369857],[9.350535,9.896736,-5.486471,9.056378,-6.808128,-7.122501,-0.733255,-4.913714,9.176385,8.626495],[-6.879364,8.410142,2.879054,-9.862814,-0.033534,4.380964,-5.211977,7.711076,4.376657,-1.742869],[2.772015,-7.055625,7.704804,4.473834,-2.197244,6.799147,9.293254,4.289143,-5.161565,2.373865],[1.131854,-0.247025,3.834314,-7.887608,7.933310,0.613410,-8.733716,-1.313706,-7.851017,-6.032010],[-5.746336,-5.022290,-0.863101,1.595622,8.906590,-2.158958,8.843615,-3.554403,-4.010629,4.802419],[-7.172496,-8.259077,-3.932811,-6.921610,-4.134538,-9.702280,-4.627329,-8.274779,-8.919442,3.734526],[-4.246395,6.647674,3.323013,8.849748,-1.700381,8.842042,5.359650,2.629375,-4.819975,-8.785581],[-7.072585,-7.102220,7.830618,-3.278201,-4.066958,5.056324,3.565382,-8.155885,1.911816,-6.030447],[-5.089919,-6.757658,-1.595758,-9.741812,7.421419,2.593635,9.880340,-6.996156,3.828766,-9.739046]],[[6.239136,-0.050663,-7.676412,5.102323,-2.381198,-4.927497,0.881656,-3.064289,-8.745733,-3.069637],[-1.282228,-3.902319,8.867979,-1.380129,6.629056,-2.378071,8.526812,6.337161,0.473587,3.978601],[-2.663214,1.043597,-8.778979,0.217577,-2.529930,-1.618458,-3.230290,-0.604399,0.631790,-0.680963],[1.166880,7.309226,5.457833,5.835361,6.797314,5.603736,-3.671272,1.565824,-2.302805,1.076681],[2.706527,1.938615,-8.153879,3.099261,0.289625,-0.812348,0.845741,8.993750,-5.750959,7.588749],[2.647579,-5.369127,7.809830,-4.513427,-8.316541,-0.661367,1.900266,8.933840,3.184053,8.389946],[-9.535955,-1.050872,-2.432445,1.323649,-2.758902,-6.335653,3.452084,1.897218,5.292471,-3.277499],[8.095641,7.572588,4.265976,3.935480,2.561310,7.173091,-2.614820,8.612712,0.599966,-7.025380],[-3.760211,7.035580,4.307617,-0.365688,-6.702113,-4.008092,-2.092961,-0.513961,8.931223,-4.260549],[-6.917334,-8.500069,7.580502,5.987956,-9.657440,-1.493714,2.811168,-5.025736,-2.703684,2.758925],[-7.045948,7.791719,6.828598,-3.465384,7.428934,3.967552,-3.320619,-8.185607,-4.261971,-8.748865],[3.189313,0.209076,-4.930676,1.185147,-7.747321,2.880715,8.994169,7.532885,-6.195801,7.670436],[4.339284,1.158668,-4.117726,4.191433,-6.401245,-7.274221,1.822209,-2.626838,7.540202,-4.076946],[-3.381790,-6.419165,-3.268965,-3.476254,4.174075,-3.932474,-4.026409,-6.196632,-2.303862,2.868343],[7.319653,-0.957713,2.231129,-7.559490,5.820741,2.098988,-0.014773,3.850581,5.044712,7.788456]],[[4.297441,5.309904,-9.809526,-5.107783,-7.695946,3.758132,7.876292,-0.553798,-4.527276,-2.286446],[4.789075,0.674968,1.959504,7.106930,-0.641475,-1.260755,-9.271515,2.673588,6.433100,7.950310],[-2.217265,-7.744464,4.190850,-0.532589,2.030210,1.686454,-7.138653,1.984541,9.739019,3.986714],[1.612105,9.830876,4.616617,-8.118161,-3.866525,-9.992740,-3.498294,1.612967,6.814562,3.299197],[-5.870773,-3.010197,0.123067,-8.686968,-8.851920,-8.489917,2.614902,7.655375,1.874809,-4.810625],[-7.533741,-5.774144,9.285306,-9.654796,5.675157,6.256893,-9.649842,8.123188,6.403813,-7.497888],[8.722287,-6.690292,-9.048757,3.511118,8.692008,8.899752,6.995249,4.131701,8.180268,8.280782],[7.941029,-3.064437,-3.644741,-2.381576,-4.715110,1.880940,3.971240,-2.245254,-4.118343,0.400577],[3.668439,0.490512,-9.599228,4.485454,-5.711192,4.770812,-3.213066,5.372250,9.353977,-0.216615],[-4.936291,0.004283,8.258387,0.265160,7.764524,-5.337683,5.987571,2.926788,-6.835310,-5.343685],[-7.857903,-2.563659,1.488149,5.912206,1.781224,-0.107615,-1.209524,-8.905089,-7.102337,4.159996],[-8.448129,-5.206850,7.341766,-6.978121,9.053774,-9.454164,-3.820247,-5.796696,-1.302307,-4.397420],[5.396528,7.912207,-4.483541,-6.177929,7.107498,-6.189546,2.865977,3.448162,7.981216,-2.082919],[-6.030130,-6.584306,0.663920,3.774055,-8.098830,-4.715485,-3.828171,8.186086,7.640379,6.832338],[0.250378,-6.794703,2.099316,8.292086,6.890165,1.314135,-3.366880,-4.189501,-3.453171,1.097054]],[[0.723548,-9.520291,3.051802,-3.656382,3.236882,8.618444,-3.860853,0.654587,-3.411510,-7.574070],[-2.540143,8.039213,7.707902,7.214292,2.054537,-9.628488,-9.484387,6.432252,2.523503,-9.277198],[9.967455,3.022397,4.024191,4.915622,-5.987663,-6.024160,9.479753,4.512723,7.643076,-7.319456],[-3.464395,-2.952798,-0.891873,-2.409481,2.043152,-9.043494,3.315270,-8.963786,1.903732,-6.074715],[4.156286,-3.907235,-2.606302,2.905901,-8.702678,7.526471,1.466004,0.035501,6.561492,3.881860],[-1.888970,5.229808,0.365482,9.292478,-4.431991,-1.113308,-2.950479,-1.183590,9.375236,-5.710863],[-0.692363,-8.904947,4.127132,8.656579,8.819038,-8.169044,-3.294338,3.429479,8.071981,-8.669910],[-4.749455,-4.400310,-8.310153,-0.948498,-7.359913,1.992953,-9.328658,-3.030117,-5.987444,-2.722909],[-5.600317,2.344110,-5.350044,0.819030,6.908807,9.709332,-1.015460,-5.191156,8.224370,-6.702535],[-1.238563,-0.783777,8.091110,-6.137649,-5.526728,-2.275732,1.495436,7.761076,-1.395100,-5.064684],[1.252446,-3.462131,9.645218,-0.677607,8.880159,-1.261871,-0.085795,-8.958418,-7.530555,1.438714],[6.829270,4.097238,-6.922300,-6.768228,5.804409,-2.431043,1.122365,0.614452,-1.651296,6.455371],[-8.200432,5.394143,-4.330977,6.923499,-7.347622,6.617133,-0.451933,0.593409,7.216293,5.671044],[-7.671884,9.288037,-3.118240,-0.578231,-9.072481,-4.130276,7.060964,-7.893261,5.226226,-1.925248],[-6.053275,4.685907,4.072902,6.717921,3.177304,3.343576,2.923902,1.869178,0.798208,-8.946560]],[[6.522236,2.520639,-3.307580,-2.637222,1.607901,3.896844,-0.670408,-6.160453,5.427904,-5.548871],[-3.069532,-5.106338,8.616018,-8.759515,0.786915,-9.975890,4.010346,-1.283685,7.682125,-7.189692],[3.662693,8.774904,-7.355370,9.451812,1.958880,-6.137132,-8.987674,4.328589,-5.573081,-4.223640],[-5.792089,-4.191857,-6.621827,3.628577,0.318514,-0.870076,-2.383569,-7.501352,0.770196,-5.502540],[-0.227910,9.428455,-0.751699,-7.391337,-0.243561,-0.877689,6.636508,-1.054996,2.806160,-2.271565],[7.732621,-1.166976,-5.398436,8.341452,-6.174387,-2.653270,-2.671486,3.406498,5.045101,-8.961596],[8.876286,-8.973011,0.221095,-0.885048,9.302500,-8.668521,-8.918597,-0.418141,3.938865,-6.712491],[3.426605,-2.605874,-7.358021,-0.364939,6.465435,6.134044,-2.380400,-5.091364,5.885463,-3.334084],[9.112105,3.664408,8.508501,-5.827825,8.139375,3.908698,9.744015,5.239375,6.475085,0.832990],[-6.742936,2.208944,1.504145,-5.613318,1.084272,1.842939,5.606840,-0.207440,-6.478783,-3.889759],[8.053168,-0.225346,4.661213,8.945947,-0.475506,-8.120914,0.963809,9.913248,0.964729,2.687182],[-6.693939,1.320782,-0.835834,8.677205,-9.182665,-3.890947,0.347633,-4.398503,-1.752999,5.296400],[8.240015,1.918734,-8.894777,5.461048,8.075174,-7.276564,1.426581,0.965680,1.461436,-6.713227],[-1.649526,8.329640,0.277713,4.424569,8.292040,-5.765732,-1.504469,-7.341916,-3.415047,-1.507604],[-4.549706,-1.598870,-6.756547,9.580940,-4.123816,9.489838,4.427763,-9.045254,-4.132232,-8.976030]],[[-9.876281,-4.750080,8.279986,0.582641,-4.042691,6.773208,-7.460840,-0.556739,3.654832,-0.925835],[0.502467,7.868516,9.184887,-3.339029,8.742082,6.384876,4.576857,-6.663588,-3.372338,8.998274],[9.369931,-6.675658,-6.410268,-4.831339,-1.253464,6.757816,-6.727573,-6.878390,-0.239827,6.090052],[-4.127067,8.697922,6.551419,-2.654569,-4.856698,-4.890094,-8.491716,9.200874,-9.982833,-2.152191],[4.197305,-9.453324,-6.902989,5.366926,8.111574,-9.593381,2.193107,-2.186457,0.872641,0.054392],[-0.631114,4.716476,-3.658528,2.306541,-4.572741,8.542378,2.974808,3.228367,9.944877,-8.150923],[-6.601553,-4.834674,-1.194376,-0.260121,8.303731,1.940057,9.232982,-5.522089,-3.272661,-4.968467],[0.310456,-3.475926,-5.828796,6.647977,-0.277095,-4.524114,-3.438366,-5.391505,3.986294,9.561106],[-1.887023,-7.131970,4.468926,3.609370,-0.351023,5.177085,-1.027528,-1.180931,1.693475,-7.576938],[7.945513,-5.685545,2.474679,1.429094,5.726513,9.802866,8.865628,-3.053661,-2.530823,-3.201796],[1.241462,-9.027058,0.991384,-6.938724,-9.366567,-2.269880,-0.935408,-7.300239,-6.189920,-4.132221],[-8.587194,5.714457,-8.282127,-5.631950,-4.732435,4.070193,-4.962303,0.391931,3.560245,8.867934],[-7.693434,7.130381,-9.396950,-4.585295,4.328632,8.263973,-7.789236,-6.761969,-3.115295,7.657869],[9.449261,-8.902991,-8.327984,-9.254025,-4.121385,-5.096659,0.488378,5.500517,1.658871,-9.502963],[-0.862994,-5.648057,8.370576,7.279060,6.442983,-0.253280,-9.372364,5.525867,-3.276266,-6.825893]],[[8.736182,5.726295,-2.791752,-7.845768,-3.487299,9.745674,-8.445084,4.115463,-5.319184,8.887750],[0.530444,-4.507155,7.799399,-2.011666,5.704225,-7.481867,6.731169,-8.780192,-2.107827,6.786505],[9.542488,6.312516,-2.953618,9.360014,-1.812361,7.232178,-0.861015,2.000091,2.672219,2.208908],[-6.628836,9.293853,9.058489,9.965060,-9.442961,-5.532180,9.630741,-3.013161,-7.667112,-8.233207],[-1.260521,-2.166364,-5.498010,-1.542916,-9.710083,-0.838710,5.913689,-3.795315,9.355730,-1.670878],[9.485067,-1.606268,8.221264,-3.430243,-5.783302,-6.522095,-3.391510,-8.555377,-0.650986,-6.779379],[-1.222580,8.003071,-7.908422,8.595931,6.782651,-2.858530,-7.628514,-4.009296,8.283092,-0.301229],[6.297541,-7.953042,5.694400,-0.686750,-9.496276,-3.804980,-6.761122,-0.585904,-5.046470,-7.609361],[-6.644585,-9.537596,3.342060,-5.480088,7.566169,6.700577,5.665976,2.519601,-2.035891,-4.827269],[-0.816682,1.166990,-9.809511,-5.015085,8.484337,-9.685518,2.002081,0.464013,5.715231,5.001147],[-1.609527,-4.342202,-1.803735,-3.168334,0.170817,3.816018,-0.200038,-7.227492,9.451247,6.083010],[-8.964590,-7.520323,-6.779194,-7.130771,7.274543,-3.227152,-3.512167,0.879927,-6.503084,5.488052],[-3.626712,-8.157886,-0.780111,2.718659,8.163602,-1.844754,-8.114216,1.774787,-5.737015,0.775484],[8.681811,3.467141,-4.574273,-9.387631,2.358393,-3.489099,5.420120,-4.511807,-3.719346,1.459681],[-4.655281,9.147415,-4.949737,3.970963,-7.594146,-8.881062,-5.637465,-6.315837,-3.417447,-5.033994]],[[-6.771586,5.215461,9.007884,2.798158,1.253147,7.281158,9.869448,-8.669611,4.811789,-2.243214],[-2.495966,2.898130,8.266976,4.829857,-7.993741,1.806099,8.908755,-8.991386,-7.836515,-5.925812],[-3.297572,1.743336,-6.574180,1.901528,3.925152,8.767837,-1.797049,-1.634137,-7.931206,1.037923],[2.780615,-3.779298,6.968987,6.521500,-8.592726,8.106304,1.466099,-2.450378,6.051000,3.860422],[-0.644772,-1.243062,6.223107,-1.191448,7.775504,4.906581,-6.854718,9.340952,-8.209367,0.010096],[-1.416197,-4.591454,4.179877,0.324454,-5.979092,5.956615,6.678217,-5.119769,-4.965512,0.156907],[-7.648391,4.631588,-3.316290,0.386815,4.049746,3.200371,4.998935,-7.947881,3.842492,4.864195],[-6.079660,-9.273968,8.673734,0.970115,1.902854,2.604572,2.284824,-2.513809,5.756408,-3.700095],[-0.749264,-4.389414,2.659943,-6.967487,-1.237279,5.572393,-5.483233,-8.923786,-5.819656,4.667541],[-5.824731,6.029716,2.806832,8.028411,7.229516,-0.541757,-2.981307,-8.209691,9.150146,-1.780842],[-3.257352,-2.908303,5.414918,-3.753764,-9.092972,6.571409,-0.937618,-0.983245,-2.641836,-3.436791],[-4.408792,3.721790,7.842067,-0.135333,-8.278331,-7.620857,-8.772021,0.259769,-8.747144,1.093354],[9.109594,7.669522,-7.390152,-9.199473,-1.808941,-1.727328,4.326185,4.950645,0.226989,0.192402],[-5.661813,6.562021,-3.823972,-0.509988,-7.720087,-2.899824,-0.127193,-7.502348,9.866438,0.764926],[2.165045,-9.120811,2.124331,-4.174460,-2.158092,-3.221114,0.722983,7.275888,-7.100740,-0.620504]],[[-6.624932,-3.957701,2.716888,6.457740,3.639934,-8.338696,-4.660156,1.276111,-7.057481,3.172639],[3.759433,2.156881,6.152928,0.859299,-5.376813,-2.709617,-7.719978,5.584879,6.093211,-3.368863],[7.808306,-2.164034,-3.875151,3.283698,2.544659,3.978993,-6.220631,4.597623,4.671446,4.257286],[0.274985,-7.144165,-5.176873,2.308906,-5.799661,6.253226,-4.986453,-2.785384,8.157750,2.713918],[-4.735087,-4.627479,2.317523,-3.060258,-3.207756,-5.785849,3.479304,7.110901,-5.473569,-8.247762],[-5.326042,-3.994678,1.114289,8.172492,-0.077587,0.298401,5.124238,2.539168,4.114908,-0.881383],[7.585453,1.482394,9.031899,-8.459472,3.734727,5.904775,-3.840280,-7.987933,-8.411900,4.585526],[-8.030082,1.954060,-1.249035,-8.847840,-4.503137,6.922888,9.052711,-8.246954,7.241475,-9.778360],[4.495528,-0.845182,6.430101,4.892098,3.639282,-2.001614,6.696197,6.015568,-5.062608,-4.541947],[-7.395964,-9.043911,-1.616124,4.437757,-6.242714,5.325913,4.104028,0.657970,-3.174419,-7.972399],[8.956905,-1.441093,-9.924842,-8.479905,8.959887,5.096500,-6.503765,-6.382424,-4.331597,-0.284817],[1.751920,2.601512,-1.218234,-1.866487,9.148863,-3.988134,1.109378,-8.083679,-6.116673,8.336800],[1.373507,-5.432306,-5.797436,-7.963349,-1.995643,6.234113,-0.199685,-1.133630,-9.817546,-2.421255],[4.018674,-5.528852,0.438719,-4.264277,-1.143722,7.219369,-8.271824,5.957641,-6.376767,2.836594],[9.962603,2.305371,3.018829,-2.361493,-3.942659,-0.063178,9.121875,-4.647648,8.043027,-1.815868]],[[-0.932119,7.908976,2.557721,-5.064270,-3.064955,-2.494786,-4.301101,-7.543096,3.710115,1.255765],[0.448625,7.720480,9.847925,6.095101,-5.809309,-9.965371,3.784664,7.750638,-9.994743,8.502200],[-6.693879,-6.860746,7.744054,-8.160534,9.087224,-4.597781,4.539394,5.652919,8.974881,3.612623],[9.381290,3.368817,3.444964,7.607017,-0.510664,7.439008,2.899289,1.279172,-4.148044,9.170804],[-4.449430,-2.471834,-7.374247,-4.519131,-0.567462,7.830367,4.868341,-0.680028,-3.078025,-1.875169],[-8.558444,7.798577,-5.741196,-0.208545,-7.810862,-0.187062,1.729596,9.329099,9.050919,-1.583836],[5.216796,5.904925,-3.996056,-2.076224,4.284367,7.771708,-2.238624,9.237269,4.000782,3.112449],[-9.324936,-8.941829,-1.639925,9.135965,7.318846,5.304419,4.716902,1.772186,-6.820875,-2.383025],[5.057049,-0.862178,-6.183679,-2.910328,3.826290,-5.154966,3.786373,-1.713881,-8.635340,8.858498],[8.776392,-6.673328,9.759259,-1.048566,3.548954,-7.275501,-8.090546,-9.710848,-1.208003,-6.809100],[-3.126833,8.309979,-3.538533,1.565724,1.855530,-2.520181,1.828422,-9.679904,2.352823,8.310146],[7.931665,7.014643,-9.115604,9.436273,-0.641515,-9.422365,-7.114752,-4.218444,6.846054,2.565279],[5.391965,9.384170,-5.551579,2.180249,-5.357319,2.328056,-2.298729,4.431702,-0.794715,-7.270203],[4.894014,-5.935845,-6.905285,-7.503892,-0.520636,7.849381,9.099955,7.215400,-7.311475,8.625076],[0.026726,-6.246067,8.377072,-1.472456,-0.953465,-1.771311,0.641588,7.449625,-8.941739,-5.862195]],[[2.730022,-7.235638,-2.196871,8.625503,-1.903656,-4.420737,6.003371,-2.362648,-0.102523,-4.262669],[0.936127,-0.333327,2.523662,-8.518425,6.554756,2.172984,-7.118775,-8.519177,9.891492,1.900481],[-8.775177,5.221424,0.962367,2.269799,-3.581560,-2.460854,-1.041213,-9.871529,2.324282,9.904626],[6.525847,6.029480,-8.064599,5.870252,8.314671,-8.654784,-5.305511,0.595740,2.516056,7.749890],[6.235164,9.301393,7.731116,0.154566,-5.272928,4.003149,0.575305,-8.185943,-3.271997,2.824699],[-4.208616,-4.304549,1.127955,-0.067424,-7.401720,-7.096379,-4.692681,1.367453,-2.957600,-2.348425],[-8.006186,-4.617570,-1.625663,8.093060,-4.418054,9.106296,-2.756708,4.363808,5.576994,-4.438675],[-5.978941,1.799537,-8.489604,-8.223530,-3.928859,-8.714097,-4.598501,-5.412524,4.985990,-3.354051],[7.586404,-6.432194,8.532170,0.119848,-3.737532,-7.464150,8.513790,2.132186,-0.004192,-8.908545],[-2.361592,2.557780,7.000036,2.417357,-6.521111,7.769159,7.099955,8.337887,8.372174,-6.015399],[5.800696,-6.030986,-8.854343,-5.278239,8.251826,2.523220,6.056661,9.231278,0.002309,5.352824],[-7.454694,6.374191,3.204854,-1.944133,0.174493,-0.132743,3.719602,7.913898,-7.913266,-6.184419],[-2.610116,0.087142,5.106775,6.325120,1.685314,-3.816236,8.759663,-9.481010,-4.009877,1.850961],[3.283897,-8.565252,1.836021,-7.650451,-1.950208,0.654946,7.922298,-1.648666,8.336248,6.765741],[4.930553,-3.836661,5.816517,1.512595,0.139419,7.648611,-5.571244,5.307489,-5.759330,9.247854]]], dtype = "float64")#candidate|3351|(11, 15, 10)|const|float64
bop_3352 = relay.bitwise_xor(call_3336.astype('int32'), relay.reshape(const_3351.astype('int32'), relay.shape_of(call_3336))) # shape=(11, 15, 10)
bop_3355 = relay.bitwise_xor(call_3337.astype('int32'), relay.reshape(const_3351.astype('int32'), relay.shape_of(call_3337))) # shape=(11, 15, 10)
output = relay.Tuple([bop_3352,])
output2 = relay.Tuple([bop_3355,])
func_3357 = relay.Function([], output)
mod['func_3357'] = func_3357
mod = relay.transform.InferType()(mod)
mutated_mod['func_3357'] = func_3357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mutated_mod.get_global_var('func_3357')
call_3358 = func_3357_call()
output = call_3358
func_3359 = relay.Function([], output)
mutated_mod['func_3359'] = func_3359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_3411 = func_2779_call()
call_3412 = func_2779_call()
const_3415 = relay.const([[[5.042580,8.745938,8.656571,-2.305447,-1.446244,-1.132653,4.375629,8.315549,-0.641724,5.885333],[-4.003754,4.573836,-8.171428,1.833732,8.649935,4.755839,-7.374779,-9.312011,-9.847768,9.827997],[-1.636241,3.720282,4.699619,8.176667,0.713214,5.595341,-9.745816,-1.780656,2.959370,-2.895028],[-4.287416,-1.622992,-8.627338,-6.659092,1.710127,9.132731,-6.129493,3.856878,2.085490,8.828686],[9.179425,7.776564,2.022183,8.424602,5.308730,2.633218,7.446020,8.865273,0.503455,9.852998],[6.290087,-9.432614,5.765798,2.830602,-2.638969,-6.832024,7.349076,-3.706056,4.726869,8.792852],[9.299880,-9.380361,-5.157073,-2.993216,-2.806358,7.547423,-1.505969,6.410416,6.352065,-4.633632],[0.880944,-2.873672,-8.811052,0.135565,-8.184410,1.345125,-3.748970,-3.556948,9.248981,-7.536141],[-3.229169,8.764303,1.857380,4.506655,2.386402,8.579663,-2.797844,5.167471,-2.128106,-4.115123],[7.113199,-1.040393,3.570781,2.964326,2.388634,-7.619987,0.168636,-9.812636,-5.301252,3.465135],[1.952929,-4.182926,-1.693133,9.786415,5.289354,4.921477,1.512431,-1.471582,7.222424,2.604286],[7.363100,-0.281087,1.236510,3.349734,-0.436648,3.679937,5.865785,8.330618,6.646727,-9.888086],[-4.095187,3.332030,9.451532,2.043129,0.641653,8.573018,-1.269671,3.364920,-4.793129,-0.795302],[-3.706191,2.324694,5.287779,9.754282,2.012481,9.215324,-7.738228,4.620271,-1.870863,-2.781883],[0.397832,-8.483952,2.520936,4.780535,7.840835,2.025067,4.338679,9.762558,6.180113,3.196365]],[[0.005600,3.099980,1.257230,2.623044,9.379739,-0.633215,-3.459852,-1.309953,-7.605606,3.449026],[1.445599,7.414844,0.224024,-1.018288,-2.899613,3.786809,-7.210630,7.149903,8.329191,-5.211314],[-4.181419,4.038025,3.567465,-7.279473,3.409905,1.287481,-8.346920,9.953349,-2.744478,7.053187],[5.280983,-7.880297,3.009982,-0.795302,-9.919099,4.021196,6.278630,3.826942,-0.981596,-8.448641],[-5.682634,3.885305,7.743432,-7.072345,-7.860791,-1.840370,1.448704,0.172761,-0.223454,2.940444],[-3.579739,5.686650,-1.874437,6.083847,-3.887013,-5.162994,0.557817,-6.149338,0.512845,-8.066574],[-4.362247,7.425851,8.364361,-5.252832,-3.350934,4.362178,-1.023816,-9.353046,9.879235,2.991802],[-9.301371,-9.299891,2.741150,-2.537342,-3.574181,-9.629237,6.424288,-8.891025,3.960621,-9.463994],[-3.854289,-3.816431,-7.299025,6.176088,-3.728030,1.069345,0.134669,6.263345,-8.525335,6.065870],[-1.625719,9.852537,8.244009,0.907297,-4.303254,8.609984,0.389878,9.172044,-1.515242,7.987042],[-3.517926,3.520962,2.570555,-4.714258,-7.566711,-9.929638,-4.898657,-8.775220,1.327622,-1.060774],[6.219217,-7.121454,5.575969,-4.396868,7.131759,6.482712,3.967096,2.952538,9.045010,-7.655177],[2.739088,-3.284529,1.350566,5.187375,-7.412019,-8.521296,8.918748,-8.784022,8.665459,7.288848],[3.864255,-1.099730,8.425464,4.895656,0.051634,4.826261,-7.002963,-7.173282,-1.184738,-2.794710],[7.880523,0.033398,3.022121,-5.993782,-1.355246,0.761846,-1.377986,-8.013563,0.320095,-5.200390]],[[-6.738238,8.211496,9.430350,-6.609561,-8.630502,0.854667,8.088980,-2.604284,-8.560620,4.357439],[-3.514248,-0.015453,-6.114967,4.734061,-8.347660,5.923729,5.345854,6.312526,-3.152291,-3.758301],[-7.668500,1.382150,-8.626544,4.890412,-4.594047,-9.206539,6.898378,8.497613,8.652375,-4.677935],[-7.231394,-7.051227,-6.140694,-7.447410,2.710220,3.587189,-2.626952,-3.150903,8.504564,-7.614936],[-7.153233,-0.814905,0.617445,-2.614792,-4.271014,2.984168,-1.198627,-5.992906,6.886152,8.195474],[-9.492584,5.957439,9.589839,4.798489,5.606524,-5.751925,-5.089157,1.973689,-7.895783,3.986193],[-7.288421,0.872793,-3.617226,-9.988332,8.753493,2.868857,-1.745122,-4.317406,-8.290953,-8.987662],[5.819374,9.931148,-5.522443,-3.644727,-8.796430,3.709919,-8.143807,4.066925,7.324405,-0.338834],[-9.190905,-5.878114,-7.131944,-9.740585,-2.339689,-3.252364,-6.747740,-1.606624,9.891571,6.042627],[-7.376930,-9.416854,-3.394675,7.130317,3.695697,-0.423483,5.211522,1.343990,8.410628,-0.805264],[-2.287472,-7.102058,8.699784,7.406560,3.371930,-0.961633,-4.731611,-9.735303,5.584506,-1.459718],[8.885154,-5.172659,2.182786,2.574956,2.341813,-2.262937,-8.914082,-3.279077,3.968795,-2.276326],[5.123461,-8.347846,-3.710995,-5.488812,5.401169,-2.544600,2.067517,1.432888,-3.818547,6.940590],[9.890331,-4.568412,-1.108703,8.519878,-7.136968,-9.945034,-9.802930,5.998777,3.025787,-1.529803],[-7.982426,-8.670702,8.382724,-4.158327,-2.806622,-1.690970,-1.275171,2.525440,9.229280,-3.845234]],[[0.964711,4.646574,-9.146178,-0.345544,-0.959100,-3.970361,5.996917,-2.613068,-9.494082,2.363298],[8.437755,-6.285313,-0.630095,-8.643998,-2.613184,8.529376,-9.866833,-1.680922,-7.706389,-2.346216],[9.739224,0.471947,0.746295,-6.431435,0.798323,-7.402762,9.538099,-6.412231,5.770690,4.239061],[5.989846,5.044344,-2.557599,-7.239610,-7.595270,0.283944,7.029788,-8.728102,8.291204,2.717445],[-9.904682,1.635871,-0.852660,1.277810,-6.315090,-5.851215,-5.639185,1.605971,2.102543,7.163254],[9.345406,2.595635,7.804677,1.735821,-4.826840,9.839963,1.276026,-9.530451,-5.709824,3.920112],[2.346341,8.392904,3.644598,-5.471514,-9.946892,-2.988484,-1.462884,4.103526,6.888949,-4.765019],[9.376500,0.875054,-5.578445,-0.571771,9.346976,-5.818998,3.365963,-9.403270,-8.820641,9.678536],[-3.197160,-3.984669,-6.094621,9.815426,5.310222,9.911214,3.926502,5.204097,6.517525,4.889127],[4.677263,8.436029,6.002065,1.513055,-3.455996,-3.880302,-3.894907,6.901237,-7.084778,-6.531526],[4.390440,-3.176319,-1.143282,-6.413311,-6.248400,0.797950,5.879068,-6.915211,-5.443067,5.311691],[9.710420,-1.514287,-2.434536,-4.199096,-1.889850,-1.083020,-5.589508,-0.009090,-7.430548,-1.296619],[-1.025118,-4.791599,-3.223771,-4.388984,-6.281227,1.951528,-5.483610,2.250926,-2.920944,7.384808],[8.092078,-2.941295,2.804228,-0.411669,4.421656,-3.399931,-3.575298,-8.966557,5.562439,-7.427229],[-2.169784,4.429354,4.103011,9.069044,-9.460420,-3.628462,2.143642,-8.298048,0.352118,-7.733512]],[[7.238835,8.299649,-2.091498,4.862694,-7.355912,5.494398,1.199190,6.379073,-4.004516,-3.042657],[-4.275258,-5.100098,4.484692,-5.609363,4.292382,-0.543321,8.592877,7.152570,1.010029,6.833993],[-2.572979,-0.437981,-1.350213,-6.838411,-6.544987,3.162527,3.721608,-8.336531,-2.626916,6.299825],[-6.386747,8.846363,8.976302,0.329787,4.649526,9.932417,0.004421,2.059297,8.050574,-5.184808],[8.851748,-9.713067,9.481385,9.805415,1.151979,-9.041801,-0.685752,9.076303,-8.111967,-1.431355],[-4.068357,4.624627,6.442417,1.946233,-2.988513,3.120282,7.018714,-6.292228,-3.864597,5.038386],[-9.155467,2.160573,7.577660,1.815681,5.266240,2.768242,8.230192,-1.846359,5.673944,6.715920],[8.239713,2.487826,6.740863,-1.623197,-9.261613,0.685356,5.099926,7.258424,-8.127711,-1.971937],[4.991571,8.488452,-5.364573,9.166375,7.518667,0.913701,1.171979,3.127658,-0.560041,1.924441],[1.062528,8.583544,2.406580,5.289017,6.922583,-1.252895,6.529779,6.270248,5.272829,-6.839854],[-7.428507,0.591245,-0.754423,-2.953530,-2.386424,3.839808,-1.103078,-5.607725,-3.821488,9.179414],[3.609363,-1.599970,1.531425,-3.705921,-2.532050,8.650160,-0.995827,7.770133,-3.205145,7.407812],[6.307867,-9.170067,-8.406967,3.261980,1.195900,-1.668961,-7.851566,1.513846,3.886060,-7.304830],[-7.446253,-7.378545,8.835865,-3.197339,6.495678,-6.999490,-6.637990,-6.781630,-6.603261,7.414355],[1.941230,-4.932259,-9.801050,2.614289,-3.210665,-6.892257,-5.751836,1.994423,-9.047192,1.403752]],[[-9.486432,-4.766739,-9.866576,6.422906,-8.312973,-0.925139,-5.894123,-4.403417,9.000612,-3.119873],[6.678183,-5.201514,5.731216,1.425318,8.205371,2.843945,8.426789,5.726759,8.724554,-0.374689],[8.040613,9.083592,8.549358,6.222983,8.876962,-1.627012,-4.063942,-1.925056,8.082744,3.965134],[-9.248989,-0.038336,-3.546519,-2.488794,-7.026295,8.215734,8.022206,1.000942,-6.256540,4.093991],[5.527648,5.065456,8.483745,0.892340,5.348169,8.882680,-7.891169,9.078813,6.280791,-2.732719],[-3.835068,-0.559988,-5.469496,3.104747,-6.381775,-7.266239,-6.355082,2.005882,-3.937020,-3.851335],[1.202902,7.445246,3.406863,-3.149505,-8.122544,-4.042400,-9.042469,3.535056,3.940065,-2.903748],[5.816394,7.324317,-8.708559,8.788866,0.239903,-4.620747,-1.404910,-8.734048,7.182835,-7.230841],[7.406083,-8.886891,8.243455,-0.291282,-7.822256,-2.186626,-9.291760,-2.445649,-1.244319,3.873934],[7.177446,-7.814646,9.139569,-9.281068,5.490783,8.364647,1.268673,0.802893,6.964253,7.000975],[-2.624696,8.206711,2.317311,5.261029,-1.898563,-3.966216,-2.453009,7.303726,0.356768,-1.352884],[-3.704957,-9.502048,-1.287377,4.326187,6.525502,1.306069,-2.509716,-2.785739,-6.929048,-2.707665],[-7.248579,4.243147,8.762344,7.975634,-0.008583,-3.709842,3.499305,-8.243885,-0.499684,7.419228],[4.400080,5.988578,1.996847,9.628659,2.711515,-2.834565,-4.663186,-4.359213,-8.822066,8.561910],[-1.430416,-2.939343,-6.000833,2.984648,-3.634136,-0.068998,7.581946,1.680927,-9.605516,6.207140]],[[-8.211263,6.165621,3.635699,0.086312,7.343146,-2.744620,-6.954654,2.372845,3.160217,1.958751],[6.894415,1.918419,6.650413,-2.790345,-1.324744,2.469971,0.630876,2.058910,-2.081532,6.632811],[8.551156,4.180311,-5.929088,-4.172287,2.910507,8.603069,-7.323208,-1.345922,3.330179,4.586109],[-0.441548,2.576448,7.145413,-7.241942,9.352811,-9.455296,9.576722,-3.574878,-1.105506,6.304012],[-7.936297,2.773804,-8.797903,-6.096775,-4.357713,5.490530,-2.246430,-5.115077,0.315702,0.663324],[-9.203754,-9.009931,-1.513048,6.117001,0.782137,-1.153694,3.158255,-8.615379,7.840748,-7.201396],[-7.196688,-9.474213,-1.383537,8.439563,7.012833,-5.662711,-5.170182,0.158595,0.537129,2.422681],[-1.119723,-5.401516,7.623678,9.778218,2.156812,-2.516031,6.465770,-3.176588,-9.927348,4.040223],[-5.569329,7.082527,-7.437348,3.746815,-3.567084,9.853055,8.174531,-6.495733,-9.322647,3.282622],[4.158196,-9.773950,0.619018,-6.838719,-8.683521,8.484267,3.238277,4.499784,-9.845266,8.051558],[6.583122,2.460001,-2.365524,-5.704831,4.141513,-4.864659,1.849728,5.711713,2.204525,-4.892111],[7.159466,6.532332,6.720078,5.801711,8.620455,-7.410258,9.802419,6.272574,6.089540,-5.959094],[-2.536619,-5.445406,8.589971,-5.706496,2.082511,-8.157670,-3.700211,-3.298234,-2.362352,2.518754],[-9.761508,2.540180,8.225760,-3.054089,-4.404953,1.667469,3.335303,-8.595498,1.081170,-6.859168],[-1.474239,-3.442397,-1.057039,-2.686130,-8.782065,-6.838320,4.180810,-9.183368,2.714850,5.048165]],[[2.434377,-0.476363,-6.145907,-8.511153,6.717721,3.844934,8.733091,-9.425267,-8.445209,0.371992],[7.665816,3.329051,8.281029,5.923408,-6.942536,-3.949024,-0.327342,1.296912,7.706606,-7.578613],[-9.960833,-8.614704,1.631588,6.484523,3.669001,-9.133853,-9.980500,5.856536,3.315071,-6.093458],[-4.279134,-4.800811,6.673247,6.479913,6.240038,8.505573,8.031706,9.597854,8.756158,-4.708210],[1.503306,5.295848,4.793457,4.704966,3.826915,-3.316718,-2.610210,-5.358224,-4.133539,4.837707],[-4.418230,8.602511,-2.265369,-0.026137,8.842404,5.611719,-2.844235,6.233933,5.698111,-3.585984],[-9.637283,-5.317139,0.362467,3.262922,8.100393,7.853369,9.474173,9.749343,-8.984064,5.980951],[8.588141,-4.253673,9.127250,5.180846,1.988530,-0.518552,-0.406871,-2.604829,4.006827,-1.637321],[-7.601907,-5.999387,-9.286285,-0.500526,-4.427398,3.461487,-0.917109,0.006832,0.063257,-0.564092],[-2.791434,-0.710695,-5.399003,8.849219,-7.005719,-9.845942,3.830220,0.892829,-5.571312,-5.985062],[6.510991,-8.167653,-4.945440,-1.543755,-3.400329,-1.365691,6.614404,-8.778315,5.175404,4.947590],[3.472544,3.357054,1.078978,-8.284529,-4.017863,-8.196749,-2.009743,6.527800,-1.410397,-2.973031],[-3.367599,7.249421,-1.381851,5.128603,1.542269,1.816827,-7.531376,-9.472314,0.040811,-5.133538],[5.365574,-4.561213,2.893826,-8.041229,6.111625,0.700097,7.686112,6.706032,-8.298573,-6.060254],[3.582855,-0.585035,-7.627164,3.559622,8.996772,8.479233,-1.452164,7.675024,8.703378,0.889476]],[[-9.783935,-4.190682,-9.655274,2.371887,6.805697,-1.705374,-5.470301,-0.212936,9.832764,-9.124052],[5.691119,-8.729249,0.997037,-7.360758,1.823539,7.632212,-6.433942,-9.914080,5.231342,3.677559],[0.933595,-6.976692,-7.620069,-8.756287,-9.019653,-0.928459,-7.051867,-9.026326,-9.988822,-3.052153],[-6.012611,-7.601434,8.422810,5.861121,-9.236862,5.971066,4.537513,1.303385,0.137788,7.790261],[9.856381,2.097341,-2.598035,7.580055,-1.041868,4.571843,-4.561574,4.593112,-9.244981,-2.802568],[7.404418,-1.066199,5.849920,-4.936101,5.037254,3.356609,-0.983670,-9.052331,-8.020434,1.173124],[6.799766,8.120773,-5.241357,7.519113,-5.959020,-1.817406,-1.213928,-0.593402,-6.649754,-1.669020],[-8.867432,-6.661271,-3.521311,-1.915468,4.015649,-9.210399,-5.148605,-5.036573,-8.466496,2.716395],[7.739650,6.913112,-8.513531,-9.785068,-0.528811,-6.027757,-9.231637,0.761135,7.692301,3.392734],[-7.215472,0.256947,6.103940,5.008161,0.020860,-3.497827,-5.975217,-3.303681,0.397380,-9.543923],[4.866112,8.419985,7.068222,9.036730,-2.534138,3.430398,-1.047434,6.253891,-9.038221,5.208776],[9.243761,2.130579,5.495618,-5.001376,-0.878930,9.778129,0.787188,9.836672,7.015659,4.305700],[0.454994,-2.968961,4.390508,0.431692,9.974237,2.200584,9.472153,-9.049575,0.876369,5.550621],[2.844774,0.227691,4.844874,-8.486434,1.373129,-8.367254,-5.970462,-4.770384,-2.989687,-6.481073],[4.365032,-5.076654,-1.047854,0.450387,4.447377,2.340610,6.221004,9.220884,7.077845,-6.760112]],[[5.345947,9.792631,9.441075,5.486281,5.058518,8.756378,-4.375508,6.362369,2.732704,-0.706412],[-6.334049,7.195562,-4.527471,-3.586905,-1.000709,5.569073,-4.647821,-3.457890,-0.723793,6.638813],[2.842641,-6.787540,2.546719,-2.772052,9.248770,3.860683,-8.476292,9.279492,-6.530314,-8.767780],[-9.949254,-9.431227,-2.539475,7.351549,6.723269,-1.031136,9.861720,-0.036667,4.249693,9.307418],[4.487859,-0.083389,-0.029192,-8.570309,6.196737,2.611445,-4.742426,-6.932930,-5.476461,-6.649131],[8.380388,-9.419451,4.317537,9.779916,4.767990,2.233998,1.277472,-8.261981,-3.805139,-1.028570],[3.199358,9.535745,-4.771808,-9.056921,4.564844,-3.219604,-4.150372,-8.642310,6.609928,-8.451940],[-9.640886,6.532445,1.649856,4.031447,-6.208847,7.835042,-9.191394,-4.098819,4.225383,6.973015],[7.012446,8.443261,9.525812,7.096351,6.796247,1.804672,-5.702589,8.146014,2.787336,9.358536],[8.092061,5.537646,5.536555,-5.350629,5.134654,-4.436150,1.109602,-1.575101,4.214126,0.977806],[5.281540,-2.683667,1.793193,4.667465,4.796327,-4.710639,2.979700,-6.318982,9.138768,2.923972],[-9.435177,5.280593,5.133991,-4.502249,-7.762759,8.620491,6.025630,3.463028,-5.172112,0.929408],[0.938207,-8.404468,2.257810,7.877119,3.861880,8.118235,-9.695911,8.752579,-9.712139,-4.089392],[8.050524,-0.016947,-1.801121,2.316748,-2.815345,-0.234725,-5.209876,6.964619,1.276085,2.061306],[9.409851,-8.150852,9.519382,-9.758847,-5.822418,-2.578420,-5.035409,-2.901189,-6.648172,8.712370]],[[-2.706139,-5.004655,-3.007317,-1.104431,0.350143,-6.703530,7.200385,-6.421310,-8.233269,-0.838993],[-5.538138,-7.980195,-2.814132,4.538102,-1.244691,4.633702,-7.215162,-8.079215,5.506149,-5.297898],[-8.258053,-1.475508,5.392919,-5.610240,4.512515,-7.386213,-2.463561,-6.878036,8.745637,7.455302],[6.605246,-8.169538,4.585274,-6.797342,-8.162412,4.996241,-3.286607,-7.992445,-0.356104,5.706670],[4.147110,8.278770,1.346409,-7.977879,6.159936,-2.913687,5.644080,-3.962238,4.544206,4.173923],[4.274228,-3.651519,-2.170011,-0.045291,-9.519842,-1.674923,6.160820,6.362094,-4.972460,-9.149007],[5.802178,-0.038578,8.289511,4.762116,9.204335,-1.326593,5.131711,-7.761676,1.186904,5.225571],[5.355194,-4.174252,1.490337,8.629803,8.842005,-1.122907,-1.453530,9.156404,9.742231,8.625116],[-8.991019,-5.604579,-2.436707,7.512488,7.777731,3.685900,3.549924,9.951489,9.496094,-9.862344],[-1.155893,-1.016856,7.823760,0.240075,-5.400374,5.488411,-8.677735,7.535553,6.738314,6.370802],[0.820130,4.645595,-5.261550,3.312361,7.182908,-3.124233,-1.727317,-0.088651,5.564697,7.570574],[-1.270111,-9.596114,-4.619823,-3.577932,-3.633362,-4.254989,-9.723887,-3.348552,-4.592696,4.521817],[4.193319,-2.617581,-1.480504,0.812626,-7.828092,3.637722,-0.473483,1.786485,2.063197,-1.837754],[2.906353,9.027318,-2.605568,-5.766748,-8.147878,-0.137015,-7.739098,5.013444,3.232315,-0.919002],[9.666773,6.284691,6.381708,-8.268941,-2.904578,-4.922964,7.809533,4.348548,-9.167163,4.587406]]], dtype = "float64")#candidate|3415|(11, 15, 10)|const|float64
bop_3416 = relay.logical_xor(call_3411.astype('uint16'), relay.reshape(const_3415.astype('uint16'), relay.shape_of(call_3411))) # shape=(11, 15, 10)
bop_3419 = relay.logical_xor(call_3412.astype('uint16'), relay.reshape(const_3415.astype('uint16'), relay.shape_of(call_3412))) # shape=(11, 15, 10)
uop_3422 = relay.sin(call_3411.astype('float64')) # shape=(11, 15, 10)
uop_3424 = relay.sin(call_3412.astype('float64')) # shape=(11, 15, 10)
func_2893_call = mod.get_global_var('func_2893')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_3425 = func_2893_call()
call_3426 = func_2893_call()
var_3458 = relay.var("var_3458", dtype = "uint8", shape = (2, 13, 10))#candidate|3458|(2, 13, 10)|var|uint8
bop_3459 = relay.maximum(call_3425.astype('int8'), relay.reshape(var_3458.astype('int8'), relay.shape_of(call_3425))) # shape=(2, 13, 10)
bop_3462 = relay.maximum(call_3426.astype('int8'), relay.reshape(var_3458.astype('int8'), relay.shape_of(call_3426))) # shape=(2, 13, 10)
output = relay.Tuple([bop_3416,uop_3422,bop_3459,])
output2 = relay.Tuple([bop_3419,uop_3424,bop_3462,])
func_3469 = relay.Function([var_3458,], output)
mod['func_3469'] = func_3469
mod = relay.transform.InferType()(mod)
mutated_mod['func_3469'] = func_3469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3470 = relay.var("var_3470", dtype = "uint8", shape = (2, 13, 10))#candidate|3470|(2, 13, 10)|var|uint8
func_3469_call = mutated_mod.get_global_var('func_3469')
call_3471 = func_3469_call(var_3470)
output = call_3471
func_3472 = relay.Function([var_3470], output)
mutated_mod['func_3472'] = func_3472
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3035_call = mod.get_global_var('func_3035')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3480 = relay.TupleGetItem(func_3035_call(), 1)
call_3481 = relay.TupleGetItem(func_3037_call(), 1)
var_3488 = relay.var("var_3488", dtype = "bool", shape = (14, 10, 11))#candidate|3488|(14, 10, 11)|var|bool
bop_3489 = relay.greater(call_3480.astype('bool'), relay.reshape(var_3488.astype('bool'), relay.shape_of(call_3480))) # shape=(14, 10, 11)
bop_3492 = relay.greater(call_3481.astype('bool'), relay.reshape(var_3488.astype('bool'), relay.shape_of(call_3481))) # shape=(14, 10, 11)
func_1864_call = mod.get_global_var('func_1864')
func_1869_call = mutated_mod.get_global_var('func_1869')
var_3495 = relay.var("var_3495", dtype = "float64", shape = (130,))#candidate|3495|(130,)|var|float64
const_3496 = relay.const([-7.806079,1.810773,8.521462,-3.965695,-3.811043,-1.520254,-0.525132,-4.870666,-3.581272,-2.414598,-3.878267,-3.576795,-1.027686,-5.907304,-3.908196,3.131880,7.246052,4.601838,2.938356,-2.172429,-6.570319,4.917419,2.041822,-7.260285,-0.416723,-7.302914,1.345020,0.279642,-9.800899,-0.777724,-8.160441,7.156875,-2.665901,-6.979379,-5.832100,4.160086,7.119845,-2.132153,-5.879275,6.284673,1.236861,3.973322,-3.830188,-1.657155,-5.155001,0.003887,-3.340714,-7.272861,-8.261124,4.380959,2.234072,7.374394,2.392995,-4.831538,-8.970542,-1.610332,6.446040,6.574734,0.187619,-8.269383,-8.801260,-8.506191,7.647768,3.045982,0.542041,-0.455957,9.153265,-9.211200,4.510788,-6.812160,-4.130412,0.605429,-6.410629,3.393001,0.700215,2.109354,4.163979,-0.263193,-3.048612,-9.978943,-4.133121,9.889356,2.134958,7.892780,-8.335741,-4.977874,-9.262977,-9.146571,-1.178711,-8.474229,-1.902149,9.510753,2.921435,-5.995971,8.879738,-7.076321,1.362984,4.390603,3.904714,-5.939180,-0.563006,-3.570039,-1.427620,4.368505,-4.752213,-0.868103,5.153621,-4.577666,-5.546222,7.284314,-2.267848,1.780637,6.488415,-1.415656,0.953594,-3.777618,5.891083,0.842702,4.137887,8.647652,-9.570156,-4.661826,2.798280,3.815373,4.723384,-2.801475,-9.380368,-3.812706,-2.066335,-3.769546,8.149229,-2.638005,9.308028,-2.206183,-3.359477,-9.858947,-5.239682,9.468863,8.027706,4.989987,7.302193,-1.524098,1.270535,5.554014,7.551120,-2.998144,-1.334596,-7.143480,-6.530982,-8.316726,-7.674884,5.082809,-6.118686,-8.241886,9.414659,-4.939530,9.924898,-9.710668,5.390205,7.653676,4.483577,9.623830,-4.328024,3.622382,6.743064,8.234529,-8.261874,-2.720488,9.440382,1.973524,-7.911408,3.680680,-3.350385,-1.396871,2.738729,2.872018,9.841386,-1.347252,-3.744056,-5.745446,-7.649636,6.911186,4.826575,7.004699,-3.807216,6.658796,-9.854430,9.780076,3.256002,9.422152,2.342241,7.351548,5.871740,-6.406669,-1.196922,7.667743,-0.547488,4.375911,-2.314207,1.802211,0.981357,2.002428,3.945985,8.826672,7.607102,-2.644782,2.657247,6.012373,3.806624,-4.888619,7.211522,-2.505081,-2.568603,1.167049,-6.925676,2.286119,7.351127,-9.501756,7.049452,6.880102,-1.157810,2.808883,-6.503533,-8.662642,-2.956717,4.168083,1.792444,-2.348992,3.429810,-0.166206,-2.027753,-2.074442,2.587263,-2.026103,-3.116205,4.987297,6.701459,-5.892840,4.327036,-6.696632,2.333885,6.256002,9.694370,-2.589956,8.014532,3.840618,-2.221892,-7.698660,-2.342397,5.047838,-9.302704,2.410958,4.854170,4.779871,-1.655677,6.602399,9.768152,-4.529903,-4.830508,-7.922808,-6.422401,2.519676,1.868823,-6.355906,-2.421833,-7.537168,-5.791185,4.946775,9.538190,-7.165899,-3.063327,5.949908,2.052370,-6.469458,-5.324776,8.637647,-6.412881,0.282830,-7.827098,3.500296,3.017876,-0.930768,8.993536,-3.771731,-6.401155,4.046918,-4.656391,9.153430,-9.839864,4.156917,-5.427681,2.001832,4.658681,-8.628929,-4.353484,-6.611934,7.274148,1.975352,-5.652945,5.817506,0.077400,0.433826,9.895759,0.241494,5.190335,-9.184045,4.956842,-5.846053,-7.988112,2.552690,7.578311,9.971186,-9.576257,7.210835,-6.475898,8.823457,5.285492,1.396494,3.736689,7.004726,3.119535,-2.469030,7.644213,8.757176,1.874549,9.596451,-1.943704,3.696495,0.094612,-5.675776,0.593331,7.872700,-9.054893,9.912151,6.342358,-7.507921,-4.839996,-2.040854,-6.410503,-1.733948,-4.594294,-9.408261,-8.183644,4.565051,-7.961705,7.930205,3.451445,3.192065,4.369780,-2.476869,5.879475,0.833248,7.166764,0.262497,4.146623,-5.289986,7.515638,-3.003951,-0.820891,-0.552335,5.996961,4.654607,-3.087785,1.599310,1.588926,8.365903,-4.281482,7.792809,-2.661936,6.541473,-8.993872,1.722354,-1.256135,0.381706,2.128195,-7.596289,6.478269,4.631328,-6.623269,2.851450,-8.489457,-4.349293,5.438775,5.872122,-7.037938,5.295896,-8.293569,3.089974,-6.434658,6.654314,-0.266413,8.166206,1.646867,6.686440,6.551569,-4.594889,4.745723,-6.348081,-5.400589,-9.130975,3.293569,9.236567,-3.767698,-9.767434,0.416307,-1.712871,8.502618,6.100281,8.195808,-2.979700,9.408618,-2.487043,3.712660,9.032633,-5.012683,3.506613,2.188041,7.784175,2.669485,-9.814934,-7.551494,-1.343032,-8.009622,-8.025114,-9.075631,-6.164280,5.533184,3.195987,-7.156560,-9.482292,-7.616789,-8.723195,-0.449204,-2.154420,2.703560,-6.796907,5.666723,-0.623939,-7.459485,7.143760,5.654073,-6.684109,7.303594,-2.832606,-6.131448,-9.904268,-1.817537,-6.640363,6.673190,-9.040651,-2.992105,-6.911868,8.205730,8.827989,5.037279,-5.311719,5.725231,-6.306824,-3.153619,-3.048247,2.347247,-0.934014,1.332071,4.026500,1.333026,0.596212,-4.572030,8.319348,-2.444562,-1.992286,-5.638030,5.430168,2.919271,-8.496834,-8.517694,1.866744,9.267606,3.998834,-7.793341,0.234962,-6.444238,4.192029,-3.690510,-1.819821,-6.834519,3.565281,3.162732,-5.941094,-2.448963,7.210041,2.644799,-8.716551,-1.401802,2.989694,-6.415849,-6.527814,6.117748,-5.630623,-2.940705,8.528428,3.707702,2.553013,6.511894,1.406139,-2.050286,-4.500819,2.929293,6.955355,-6.799900,7.652216,4.061677,1.497749,4.346022,6.527787,-2.255991,-1.202115,9.251349,-6.436727,8.422134,-3.031773,-2.751442,3.529625,6.919603,6.179442,6.328268,5.013027,-2.973337,-1.187620,-0.534970,-5.328380,-5.931192,-8.810643,-3.128026,-4.766769,-9.699445,-2.426390,8.558509,7.300719,-6.008353,-0.257933,7.065520,-8.468155,-0.700852,3.904054,-1.718655,5.689978,4.519792,-1.349923,-7.549639,5.426335,0.552566,-0.721135,-9.839897,-7.782192,-7.621699,-4.873435,-3.686188,-0.981339,9.801447,6.433890,6.319420,-3.082505,-0.094910,-9.171458,1.840597,5.612225,2.232441,1.738994,1.438051,-8.600065,-6.543289,9.609202,-6.586619,5.817838,-4.759610,2.289534,2.244980,-2.257842,2.334839,7.624740,-4.732452,4.976287,-0.760158,5.297987,-9.751504,8.676822,8.447184,4.788474,-0.310712,2.634897,3.831737,-8.536428,2.536696,-0.825128,-1.108600,9.139055,1.191740,-3.031866,-9.118597,6.526309,-7.250718,9.941391,-1.427405,0.294043,-3.210675,0.331931,5.902451,-3.518416,-1.465976,2.651034,-8.636948,0.679032,-3.255791,5.087321,-5.878707,1.606854,-4.661500,-0.183213,-0.577164,9.006615,-9.849227,-2.061279,2.856514,-8.472612,-0.419628,-4.754662,9.722751,-3.353217,4.834369,-4.250152,-6.755141,-9.345319,-0.547814,6.270210,-8.091595,5.091117,8.151666,1.199807,0.780012,-1.724803,9.006491,-3.837096,7.520692,-9.313041,7.404196,-2.139039,0.934590,-2.689145,8.762162,-6.420239,-8.184618,-4.701053,5.732935,-8.249641,-1.803914,-8.954300,9.831691,-1.394616,4.795496,-7.504868,7.286072,4.698938,8.970726,-0.429034,6.676332,4.613247,2.823497,-5.553406,6.741505,5.128130,3.678664,9.090137,-0.324969,9.086049,6.196221,-6.594075,-6.911118,6.824214,4.711715,-7.990664,-3.864951,7.276781,-4.332272,-2.900005,-4.302603,3.792831,-9.241360,0.682537,-6.911689,-5.603441,-8.496436,-9.789891,-6.173254,-9.746347,6.822510,0.925672,-1.096539,1.846888,-6.758463,-3.917983,1.031328,-8.906440,7.477855,7.444758,2.791374,6.740901,-0.588594,-4.864625,3.053356,5.279331,-9.992179,-4.766692,9.152241,2.852699,2.872478,-5.168501,0.155033,-3.050901,-1.655129,-5.354833,-3.625455,1.387782,0.073108,0.799849,1.108074,1.482710,3.112604,-2.554693,-8.961023,-2.955375,-6.151325,-3.856928,-4.597810,-6.777044,-6.570052,-6.161895,-6.588723,-9.096914,5.707336,-9.576498,-8.349409,-1.844881,8.322882,-2.712499,-2.274492,0.529017,7.076854,-1.453703,2.251853,0.831744,7.419427,-8.971297,8.125871,7.961771,-6.155494,7.373242,-0.241115,2.023498,2.915433,6.023137,-6.427413,-3.747650,-0.653370,5.292333,3.769267,-6.459171,-6.941962,-7.278130,7.856173,1.104056,6.174450,-1.561966,-9.275023,7.592902,0.856343,-1.235127,6.038238,6.145949,9.376844,8.987457,1.258519,-1.063519,-8.237546,-2.148126,-7.549785,-2.918706,-8.298992,2.938228,-1.209436,-9.221104,0.933734,0.299423,5.626880,9.421549,-3.106048,5.505924,-2.309059,1.651476,-4.363348,-9.500561,9.491342,-3.324725,7.687275,7.678277,-5.621904,9.025444,-4.491320,1.571417,3.415940,-5.190267,4.444403,-2.505565,1.437657,0.710398,1.705763,8.646756,-5.001146,-2.960481,6.476729,6.437005,-6.780570,-7.046148,0.649998,-4.322153,-3.791232,-4.475846,8.046547,5.331848,5.506856,-7.121985,-3.597782,4.264592,-3.794483,-4.814521,3.266617,1.713334,-8.860456,-0.029381,5.067356,-1.495903,-9.659457,-8.774824,5.226525,-2.684633,-1.361891,3.965947,-9.845668,7.654943,8.962681,8.154178,2.925528,-8.246950,-1.163633,8.744397,3.884562,1.888704,3.436355,5.553598,5.464441,8.405657,8.823372,-1.416555,9.914425,-4.541421,2.995460,-9.088694,-0.541075,-2.868804,6.189051,1.031183,8.890657,-3.000991,-9.043583,-3.967592,-7.669125,6.356239,-9.921511,7.348251,1.973179,-0.161073,4.803112,0.045819,3.203930,-7.068467,3.778061,-1.854352,-5.590540,5.827179,-5.806753,-0.943655,6.301131,-9.296255,0.767307,-1.481087,3.069071,2.354358,7.371608,1.548964,-7.084582,6.950875,7.459970,6.582022,1.210939,-7.192697,-8.296438,-9.099187,-4.425813,6.227503,-5.067421,-9.134015,4.768073,6.677418,-8.694425,9.709865,-2.840648,-1.285197,-9.373443,-1.541838,2.869931,-8.462894,0.267582,7.828149,8.867770,-3.730266,-4.562552,-7.865822,-8.009094,-7.076425,-5.483256,-3.669430,1.175417,-5.695763,-4.091959,5.049669,2.323206,3.395725,-3.571052,-1.378730,3.507928,1.779646,8.379640,7.012813,7.605723,-5.145242,-9.368750,8.160635,3.651625,2.748259,-8.555478,4.151537,-3.344458,-1.163307,-4.608983,6.446032,8.956106,9.557198,-7.366514,5.122216,9.142650,9.428193,-6.754395,1.683667,-4.463473,0.449787,8.230203,-9.402476,2.240331,-0.955022,7.067665,3.716814,-7.721145,5.065122,-1.167907,9.274985,-8.540290,6.674219,9.862425,-5.342740,8.780411,-3.996392,7.258349,5.536617,9.861561,-9.617316,1.808488,-8.621770,-1.973497,-0.447232,-7.184183,-7.397129,-0.792009,7.439506,-2.640727,7.469574,7.560024,-8.595558,-2.515708,5.209630,2.525790,-9.580797,5.606457,3.934393,-7.368700,-3.858562,3.067393,0.891044,-0.016920,1.542119,-2.317735,5.433092,-0.044134,-3.718614,1.285061,-6.118665,2.372971,3.712229,8.851258,1.899271,-7.297110,-2.795480,-0.447495,6.681744,-3.835120,-6.717439,1.688035,-5.870533,6.632738,-3.703264,-4.496593,-1.011959,0.423849,9.220591,-2.261186,-3.730364,-7.915968,-9.438236,-6.404371,-1.629170,-5.486882,5.421499,-9.468404,5.981995,4.387434,-3.314729,-8.871645,0.234198,-3.917335,8.144971,5.987966,6.730511,-8.026227,3.381844,0.781852,-6.520437,-5.225232,8.138579,2.945342,-8.833240,-5.904670,6.432858,7.702725,-0.821055,6.514197,-4.690939,3.333521,-3.783904,1.712783,-3.766183,1.762269,-4.623483,-7.858778,-5.116968,-9.437933,-9.127190,3.646664,-2.984049,6.550871,-6.915739,-2.949206,9.000132,-9.681891,9.571330,6.469501,-0.709142,-2.791512,-8.076556,-2.729835,9.759736,-8.428380,8.889502,5.899351,-7.423178,-4.345557,8.205456,-7.601061,-3.562122,-8.318144,-0.749367,3.813940,4.653505,-6.474442,8.465330,-6.939378,9.950526,-1.199682,7.231019,-5.982490,-6.355125,-9.514572,0.233009,2.725751,-1.750388,-4.703464,7.745384,5.777087,1.279460,0.959150,0.889460,4.293071,-0.932161,8.736251,3.395197,7.641668,6.223993,6.238244,-6.501868,-3.762324,5.089648,-2.527864,1.818043,9.403739,2.549381,3.632219,-1.314055,9.636565,-1.948908,-7.008136,4.732357,-4.762116,-4.784393,9.973612,-8.332317,9.360550,-0.139744,-3.914305,7.564174,5.199490,-1.423730,2.143894,5.204810,3.035378,-8.625255,-0.656380,-5.704334,-4.192920,-2.618883,0.768665,7.720584,-3.082447,-1.181124,6.852224,-0.885190,-9.151632,2.706875,-5.183564,5.547698,1.143817,4.984707,6.767818,-0.834219,-6.762310,5.198277,5.820222,-0.240281,2.068230,-6.289766,9.226648,7.644466,-4.753586,6.145592,1.607727,-7.452828,-0.248701,-7.979493,3.891297,2.652740,-7.927974,-5.451090,-9.161651,6.095480,9.005260,-9.517037,1.793130,9.608017,0.481755,-6.566762,9.146638,2.232854,-8.802488,2.652729,-1.765440,-3.346902,2.006746,-9.592135,5.340489,2.348480,5.782136,4.084059,4.250497,-3.404748,-1.033394,-0.751184,-8.605448,6.182337,7.991237,-7.619202,-2.634632,-2.230128,2.164446,7.496902,9.269196,-7.972185,-9.499080,4.254538,-7.613700,-6.406210,-8.027825,-2.136693,-7.372705,0.667140,-2.373603,9.568474,-7.262106,-1.743147,-8.861973,7.054426,3.092462,3.113508,4.415050,8.581758,-3.541853,-4.376368,-0.188972,7.461138,3.063012,2.783148,2.212418,-5.945598,-0.886407,6.096153,-7.519228,-6.787014,-6.682976,6.968178,-6.596404,1.854598,8.286848,7.692440,-3.463586,-4.959786,-3.432453,9.588496,2.565390,7.019563,5.107067,-6.008843,1.088588,0.365643,-0.893895,-1.581438,7.991166,-5.691940,6.479861,8.371911,-4.905298,2.821858,4.355905,-9.193820,-6.202546,-7.102909,7.850161,0.134500,-2.948143,-3.561938,-6.130819,6.682762,5.850166,-0.220666,-3.271810,-9.996080,6.408136,9.823739,8.347271,7.301801,0.120600,8.932400,6.314337,-2.566383,5.528827,-2.433641,6.283366,0.567962,5.769567,1.741092,8.571459,1.898951,-3.409598,1.804551,-7.243310,6.636835,4.249287,-1.299142,-9.039271,-2.813939,-3.936949,9.523936,-0.612015,-1.182155,-8.817227,9.218473,2.278649,-9.170838,8.777601,1.635144,0.882993,-2.382773,5.141732,2.040466,7.137469,3.404828,-3.687887,2.644047,-4.182485,3.435435,8.888938,-2.935385,8.096792,-6.010548,5.224753,-3.686835,3.497610,1.967063,-2.303321,-1.263628,-5.730063,1.299924,-2.778663,6.786116,-9.602537,5.636345,-1.343896,-0.972452,-4.846513,-5.113108,4.683828,-8.495484,2.108794,0.021401,-6.569590,2.350239,-9.667691,-5.380826,7.717211,5.542990,-2.558227,-2.573187,-3.691886,-7.466258,2.237206,-9.009205,6.272604,2.220684,-5.223877,-9.374296,-6.991470,7.848001,-8.150171,0.720111,-2.459886,2.482438,9.544705,2.477010,1.837712,5.133386,-3.727988,8.940616,-6.937237,2.665003,0.770274,-4.076501,0.223603,-2.936386,7.192738,-0.716523,-8.271913,-3.581834,0.515622,-3.604454,4.675055,0.826231,3.143260,5.548139,-8.392490,7.942576,1.344523,7.952188,9.601469,-9.513186,-7.814653,-1.288773,5.676676,-5.276042,-6.678337,1.074002,-4.495472,-6.087890,0.473888,-8.453285,-7.875852,2.268831,6.272783,-2.968307,7.558910,7.799835,9.648587,-5.994646,-3.599286,1.949440,2.305602,-5.566090], dtype = "float64")#candidate|3496|(1430,)|const|float64
var_3497 = relay.var("var_3497", dtype = "bool", shape = (112, 2))#candidate|3497|(112, 2)|var|bool
call_3494 = relay.TupleGetItem(func_1864_call(relay.reshape(var_3495.astype('float64'), [10, 13, 1]), relay.reshape(const_3496.astype('float64'), [10, 13, 11]), relay.reshape(var_3497.astype('bool'), [224,]), ), 0)
call_3498 = relay.TupleGetItem(func_1869_call(relay.reshape(var_3495.astype('float64'), [10, 13, 1]), relay.reshape(const_3496.astype('float64'), [10, 13, 11]), relay.reshape(var_3497.astype('bool'), [224,]), ), 0)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_3512 = func_3254_call()
call_3513 = func_3254_call()
output = relay.Tuple([bop_3489,call_3494,var_3495,const_3496,var_3497,call_3512,])
output2 = relay.Tuple([bop_3492,call_3498,var_3495,const_3496,var_3497,call_3513,])
func_3517 = relay.Function([var_3488,var_3495,var_3497,], output)
mod['func_3517'] = func_3517
mod = relay.transform.InferType()(mod)
mutated_mod['func_3517'] = func_3517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3517_call = mutated_mod.get_global_var('func_3517')
var_3519 = relay.var("var_3519", dtype = "bool", shape = (14, 10, 11))#candidate|3519|(14, 10, 11)|var|bool
var_3520 = relay.var("var_3520", dtype = "float64", shape = (130,))#candidate|3520|(130,)|var|float64
var_3521 = relay.var("var_3521", dtype = "bool", shape = (112, 2))#candidate|3521|(112, 2)|var|bool
call_3518 = func_3517_call(var_3519,var_3520,var_3521,)
output = call_3518
func_3522 = relay.Function([var_3519,var_3520,var_3521,], output)
mutated_mod['func_3522'] = func_3522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_3549 = relay.TupleGetItem(func_3357_call(), 0)
call_3550 = relay.TupleGetItem(func_3359_call(), 0)
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
var_3560 = relay.var("var_3560", dtype = "bool", shape = (224,))#candidate|3560|(224,)|var|bool
call_3559 = relay.TupleGetItem(func_2606_call(relay.reshape(var_3560.astype('bool'), [224,])), 1)
call_3561 = relay.TupleGetItem(func_2609_call(relay.reshape(var_3560.astype('bool'), [224,])), 1)
func_3035_call = mod.get_global_var('func_3035')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3565 = relay.TupleGetItem(func_3035_call(), 0)
call_3566 = relay.TupleGetItem(func_3037_call(), 0)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3574 = func_2548_call()
call_3575 = func_2548_call()
output = relay.Tuple([call_3549,call_3559,var_3560,call_3565,call_3574,])
output2 = relay.Tuple([call_3550,call_3561,var_3560,call_3566,call_3575,])
func_3577 = relay.Function([var_3560,], output)
mod['func_3577'] = func_3577
mod = relay.transform.InferType()(mod)
mutated_mod['func_3577'] = func_3577
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3578 = relay.var("var_3578", dtype = "bool", shape = (224,))#candidate|3578|(224,)|var|bool
func_3577_call = mutated_mod.get_global_var('func_3577')
call_3579 = func_3577_call(var_3578)
output = call_3579
func_3580 = relay.Function([var_3578], output)
mutated_mod['func_3580'] = func_3580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_3739 = func_3254_call()
call_3740 = func_3254_call()
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_3742 = func_2652_call()
call_3743 = func_2652_call()
output = relay.Tuple([call_3739,call_3742,])
output2 = relay.Tuple([call_3740,call_3743,])
func_3744 = relay.Function([], output)
mod['func_3744'] = func_3744
mod = relay.transform.InferType()(mod)
output = func_3744()
func_3745 = relay.Function([], output)
mutated_mod['func_3745'] = func_3745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2893_call = mod.get_global_var('func_2893')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_3811 = func_2893_call()
call_3812 = func_2893_call()
func_3088_call = mod.get_global_var('func_3088')
func_3090_call = mutated_mod.get_global_var('func_3090')
call_3813 = relay.TupleGetItem(func_3088_call(), 0)
call_3814 = relay.TupleGetItem(func_3090_call(), 0)
func_2858_call = mod.get_global_var('func_2858')
func_2861_call = mutated_mod.get_global_var('func_2861')
const_3828 = relay.const([10,7,8,9,-8,10,-1,-4,9,-10,-7,3,1,4,5,9,5,9,-3,-5,-3,8,9,-10,4,-7,1,7,-10,-10,-6,2,6,-7,8,-1,-6,4,10,8,-3,5,7,-4,2,-3,2,10,-7,-8,-10,5,-9,-3,-4,-5,8,-1,-9,-3,10,9,-1,1,-7,-4,-9,3,9,-8,-1,-10,-10,-5,5,-2,-5,-8,-2,-6,-7,8,-1,-3,-10,-3,-4,9,3,5,-3,-4,9,-7,-10,-4,5,-4,-2,7,8,3,3,5,6,-6,8,9,4,2,1,1,-5,-2,-2,1,7,1,3,-7,-8,10,-5,-5,7,2,-1,-3,6,7,2,-7,9,-10,5,-5,-4,-9,6,-9,9,-8,-4,9,6,-9,4,-9,3,-7,-9,-1,7,-4,-4,-3,-2,-5,4,6,10,10,1,-6,1,5,4,-4,6,4,-9,-4,10,7,1,-7,9,4,-9,6,-4,1,-7,-10,5,4,1,-6,5,-6,-9,9,2,-9,4,10,-6,-7,-10,-5,-9,10,5,2,1,8,2,-9,-3,-3,6,6,-8,5,7,2,9,5,-8,-5,6,-9,1,3,8,10,1,8,-6,-9,2,-9,3,-6,3,-10,-3,7,6,-7,-6,-10,2,8,10,-2,-9,5,5,3,-3,8,9,-1,5,-1,4,2,9,5,-7,4,-8,-8,-2,-2,3,10,-7,-8,8,5,-1,1,7,7,-3,-2,2,5,-2,-9,-8,10,2,8,-7,4,-10,-8,-1,10,8,6,-1,-3,7,-9,-1,-10,7,2,1,-4,1,7,-6,7,-1,5,-1,7,8,-4,-7,1,2,-9,-9,5,6,-3,9,8,2,-3,10,2,-8,-7,1,-10,-1,-6,-4,10,3,2,-3,3,4,8,-6,1,7,6,6,-10,4,7,7,8,1,1,2,9,9,-7,-8,-6,8,4,9,3,8,-3,-7,4,-5,-2,-8,-1,8,10,8,-2,10,-10,-10,2,3,4,10,-8,2,10,-10,-6,10,-6,-4,5,-6,4,-8,-3,-4,2,4,9,-9,7,9,-8,3,-9,2,-2,-9,-4,3,-9,-6,-2,-1,8,9,9,-1,9,3,-1,-2,-3,9,9,5,-10,-8,-1,3,-1,7,10,-9,9,9,-6,3,1,9,4,7,-6,6,6,-9,2,8,-1,1,8,-10,-10,-6,-6,10,-10,6,1,-3,3,-5,5,7,2,-8,9,-7,-2,9,-7,-2,3,10,1,-5,5,-9,5,6,5,8,-1,-2,-7,3,-7,8,2,-8,-3,-9,-2,9,-8,5,-9,7,7,5,8,7,-4,7,-4,10,7,6,-2,9,9,3,-8,-8,-8,8,-2,3,-1,-1,-7,-4,2,6,-4,4,-8,1,-5,-2,1,-1,6,-8,-6,3,10,8,9,8,8,9,8,3,-1,8,-6,7,-3,-8,-2,10,10,5,-1,-3,2,-4,-3,4,1,-6,-1,8,5,-10,-9,-2,10,10,-8,-2,-6,3,-3,-1,-2,-3,7,-6,-9,3,9,-9,-1,-4,-2,3,3,7,-6,-4,3,-9,9,5,2,-8,-3,1,7,-5,2,-9,6,4,-2,10,4,-8,-5,-2,2,9,8,1,7,-4,-4,7,9,-1,10,8,1,8,10,-4,-10,2,-4,1,7,-2,10,-2,-1,-10,6,-6,6,4,3,-2,10,-1,5,6,1,6,9,10,2,-2,10,7,3,-1,9,9,5,4,6,-3,-9,-8,-6,-2,-10,9,4,5,-7,-4,-10,-4,5,-7,7,9,9,-6,-10,3,3,-10,-8,-4,1,-1,-1,10,-2,-8,-6,-7,-8,2,-1,8,9,-1,-4,3,-3,10,9,9,-4,-2,-7,7,-2,-5,-4,-7,2,-9,4,-4,6,10,-4,7,-9,-10,8,4,-8,2,-2,4,-8,-2,7,-9,2,8,-2,3,6,10,3,-3,-10,5,-6,6,4,-6,4,3,9,-1,8,2,9,7,5,5,7,-9,-8,8,-5,-2,2,-4,-7,-1,8,9,7,-1,6,-10,-3,5,-6,-3,7,-9,-1,1,-9,-4,-10,-6,7,-9,-3,-5,10,10,-4,6,-8,-4,9,8,-10,8,-7,6,2,-6,-6,3,-4,-1,-6,4,3,5,-3,-1,7,-2,-4,8,-4,2,9,8,-10,4,8,-10,-3,-5,9,-1,7,-9,-2,8,-3,-7,-10,6,6,6,5,8,-2,-6,1,5,1,-1,-3,10,-3,-10,4,3,-5,5,-4,10,6,-4,1,6,-7,6,8,-8,3,-4,-4,-6,-3,-9,-5,-2,2,1,9,-7,6,6,9,5,-2,8,3,4,-6,4,9,6,5,-7,5,-9,-9,-5,9,-8,-8,-6,2,-8,1,2,7,3,7,6,-6,-3,2,-3,9,-3,-10,9,-8,-10,8,-3,4,-8,-6,1,9,-6,5,3,1,-2,-6,-2,-7,-5,6,1,-4,9,3,-3,-7,5,-8,-5,-4,-1,7,7,6,10,-2,4,-9,-7,6,-5,8,-2,-8,-7,-5,5,2,7,-5,-1,-7,10,-9,-8,-6,-5,-3,-1,5,7,6,1,5,-5,-6,-5,3,-9,-4,-5,-2,-5,9,-7,-7,6,6,3,-7,10,-7,6,-2,-10,4,7,8,-10,-9,3,9,1,-9,7,-3,1,3,7,2,2,-5,-1,-10,-3,-6,-6,8,-4,-2,-4,9,-2,-3,-8,8,-1,8,9,-3,-8,9,-7,3,-5,-2,7,-4,-8,10,4,-7,-3,8,-2,4,-1,-5,-1,10,1,-7,-5,-9,-10,10,-7,10,1,-3,9,4,4,8,8,-3,2,-9,-1,-2,7,4,7,5,-1,1,-8,10,4,9,-8,3,10,-6,2,1,-10,-5,-10,6,-1,-1,-4,4,1,-10,-4,8,8,-5,6,4,-3,-4,1,4,9,-4,-8,-8,10,9,-4,-7,3,-5,-8,-4,7,-5,9,2,-5,-8,-3,-2,-8,-6,-8,-7,5,-1,-10,-5,4,-5,9,1,-2,-7,-7,7,-9,-8,-5,7,6,2,-4,2,9,3,5,-2,-2,3,7,3,-2,-3,5,-7,-10,4,10,-4,-3,4,10,6,-6,-9,8,1,4,-1,5,-9,-8,3,-1,6,-3,-4,8,-2,9,-9,5,1,3,-10,9,-7,4,-5,-6,-1,-1,1,4,-6,-7,10,-3,1,10,-6,1,-5,3,10,-3,6,3,-5,-1,10,4,-9,-10,4,-4,-10,-6,-9,-9,6,-9,5,-2,-9,-1,-2,-8,5,3,-9,-4,1,-5,8,-9,-5,-9,-10,-3,3,-7,-3,5,-4,-9,-5,-3,-2,-7,4,5,4,-2,-4,-5,-8,-1,9,9,8,8,1,-2,-4,3,6,-7,-9,-7,3,9,2,4,-10,7,-3,3,-8,8,3,10,-9,-2,-8,-3,-8,-4,-4,4,-3,4,-7,3,2,-9,-5,6,8,6,4,-8,-2,5,-3,4,1,4,-4,5,-10,-9,-3,-1,-3,-8,-4,1,1,4,8,-9,-5,-9,10,3,8,7,8,-6,-2,-10,-3,4,9,-7,7,8,-1,-1,2,-2,-7,-4,6,-8,6,-5,-8,-4,-9,6,1,8,-2,4,2,-4,5,-5,-10,9,8,-7,-3,5,-4,-7,-6,4,1,-10,5,3,-4,3,1,1,6,-8,-9,-10,-6,5,-2,-8,8,-8,-1,-5,9,-10,9,-2,7,3,-4,8,-2,10,5,-8,7,8,-7,5,-10,-10,4,4,-1,9,4,5,-2,1,-4,-2,5,9,4,1,6,-5,-1,-4,-7,-8,-2,-8,-8,4,8,-3,8,4,-5,-6,-6,3,-9,10,10,9,-10,6,6,2,-6,6,6,-5,-6,-3,-1,10,1,-8,-9,-3,-3,-9,-9,-4,3,-10,-9,1,8,-8,8,1,-7,2,-7,4,-6,-1,-1,3,-5,4,-9,-1,-9,-6,-6,-10,-9,8,-9,-7,5,-1,5,4,-6,5,-5,10,3,3,-6,-4,-5,-10,7,9,-5,10,-4,-9,-3,4,1,2,-4,5,7,-5,-2,-7,2,10,-8], dtype = "int16")#candidate|3828|(1540,)|const|int16
call_3827 = relay.TupleGetItem(func_2858_call(relay.reshape(const_3828.astype('int16'), [14, 10, 11]), relay.reshape(const_3828.astype('int16'), [14, 10, 11]), ), 0)
call_3829 = relay.TupleGetItem(func_2861_call(relay.reshape(const_3828.astype('int16'), [14, 10, 11]), relay.reshape(const_3828.astype('int16'), [14, 10, 11]), ), 0)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3834 = relay.TupleGetItem(func_3181_call(), 0)
call_3835 = relay.TupleGetItem(func_3182_call(), 0)
uop_3837 = relay.atanh(call_3811.astype('float64')) # shape=(2, 13, 10)
uop_3839 = relay.atanh(call_3812.astype('float64')) # shape=(2, 13, 10)
var_3841 = relay.var("var_3841", dtype = "float64", shape = (2, 13, 10))#candidate|3841|(2, 13, 10)|var|float64
bop_3842 = relay.bitwise_xor(uop_3837.astype('int32'), relay.reshape(var_3841.astype('int32'), relay.shape_of(uop_3837))) # shape=(2, 13, 10)
bop_3845 = relay.bitwise_xor(uop_3839.astype('int32'), relay.reshape(var_3841.astype('int32'), relay.shape_of(uop_3839))) # shape=(2, 13, 10)
output = relay.Tuple([call_3813,call_3827,const_3828,call_3834,bop_3842,])
output2 = relay.Tuple([call_3814,call_3829,const_3828,call_3835,bop_3845,])
func_3848 = relay.Function([var_3841,], output)
mod['func_3848'] = func_3848
mod = relay.transform.InferType()(mod)
mutated_mod['func_3848'] = func_3848
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3849 = relay.var("var_3849", dtype = "float64", shape = (2, 13, 10))#candidate|3849|(2, 13, 10)|var|float64
func_3848_call = mutated_mod.get_global_var('func_3848')
call_3850 = func_3848_call(var_3849)
output = call_3850
func_3851 = relay.Function([var_3849], output)
mutated_mod['func_3851'] = func_3851
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_3864 = relay.TupleGetItem(func_3357_call(), 0)
call_3865 = relay.TupleGetItem(func_3359_call(), 0)
output = relay.Tuple([call_3864,])
output2 = relay.Tuple([call_3865,])
func_3870 = relay.Function([], output)
mod['func_3870'] = func_3870
mod = relay.transform.InferType()(mod)
output = func_3870()
func_3871 = relay.Function([], output)
mutated_mod['func_3871'] = func_3871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3035_call = mod.get_global_var('func_3035')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3901 = relay.TupleGetItem(func_3035_call(), 3)
call_3902 = relay.TupleGetItem(func_3037_call(), 3)
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
const_3912 = relay.const([-5.890586,-4.309879,7.172001,7.530292,2.484061,1.955830,-5.024356,-7.930997,8.371007,8.988155,-6.821162,-7.431768,-0.503761,-4.381654,-5.090943,-2.741415,7.627562,-2.701844,8.247115,-6.975835,0.329113,5.537211,-2.121736,-7.177863,2.626153,-5.985101,-5.896260,7.964221,0.306667,-6.684788,2.822077,-4.086231,-0.183875,-5.243710,-9.196995,-2.741029,-2.140271,-2.394678,3.746060,7.013880,-3.458891,-8.726281,-0.626590,-6.965954,4.315641,9.442464,2.552260,-3.204697,-9.817623,4.944587,5.916583,-9.412190,4.704412,-6.645303,4.946376,4.670604,3.967516,-1.596642,8.221860,-8.824732,-6.163631,-6.261333,9.788678,7.743046,1.588475], dtype = "float32")#candidate|3912|(65,)|const|float32
call_3911 = func_1451_call(relay.reshape(const_3912.astype('float32'), [5, 13]))
call_3913 = func_1451_call(relay.reshape(const_3912.astype('float32'), [5, 13]))
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
call_3914 = func_1451_call(relay.reshape(call_3911.astype('float32'), [5, 13]))
call_3915 = func_1451_call(relay.reshape(call_3911.astype('float32'), [5, 13]))
func_3223_call = mod.get_global_var('func_3223')
func_3225_call = mutated_mod.get_global_var('func_3225')
call_3916 = relay.TupleGetItem(func_3223_call(), 0)
call_3917 = relay.TupleGetItem(func_3225_call(), 0)
output = relay.Tuple([call_3901,call_3911,const_3912,call_3914,call_3916,])
output2 = relay.Tuple([call_3902,call_3913,const_3912,call_3915,call_3917,])
func_3921 = relay.Function([], output)
mod['func_3921'] = func_3921
mod = relay.transform.InferType()(mod)
mutated_mod['func_3921'] = func_3921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3921_call = mutated_mod.get_global_var('func_3921')
call_3922 = func_3921_call()
output = call_3922
func_3923 = relay.Function([], output)
mutated_mod['func_3923'] = func_3923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3088_call = mod.get_global_var('func_3088')
func_3090_call = mutated_mod.get_global_var('func_3090')
call_3926 = relay.TupleGetItem(func_3088_call(), 0)
call_3927 = relay.TupleGetItem(func_3090_call(), 0)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3928 = relay.TupleGetItem(func_3181_call(), 1)
call_3929 = relay.TupleGetItem(func_3182_call(), 1)
var_3930 = relay.var("var_3930", dtype = "float64", shape = (13, 13, 5))#candidate|3930|(13, 13, 5)|var|float64
bop_3931 = relay.mod(call_3928.astype('float32'), relay.reshape(var_3930.astype('float32'), relay.shape_of(call_3928))) # shape=(13, 13, 5)
bop_3934 = relay.mod(call_3929.astype('float32'), relay.reshape(var_3930.astype('float32'), relay.shape_of(call_3929))) # shape=(13, 13, 5)
uop_3941 = relay.log2(bop_3931.astype('float32')) # shape=(13, 13, 5)
uop_3943 = relay.log2(bop_3934.astype('float32')) # shape=(13, 13, 5)
uop_3950 = relay.erf(call_3928.astype('float64')) # shape=(13, 13, 5)
uop_3952 = relay.erf(call_3929.astype('float64')) # shape=(13, 13, 5)
bop_3953 = relay.bitwise_and(var_3930.astype('int16'), relay.reshape(call_3928.astype('int16'), relay.shape_of(var_3930))) # shape=(13, 13, 5)
bop_3956 = relay.bitwise_and(var_3930.astype('int16'), relay.reshape(call_3929.astype('int16'), relay.shape_of(var_3930))) # shape=(13, 13, 5)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_3958 = relay.TupleGetItem(func_2758_call(), 0)
call_3959 = relay.TupleGetItem(func_2759_call(), 0)
bop_3961 = relay.logical_and(uop_3950.astype('bool'), relay.reshape(call_3928.astype('bool'), relay.shape_of(uop_3950))) # shape=(13, 13, 5)
bop_3964 = relay.logical_and(uop_3952.astype('bool'), relay.reshape(call_3929.astype('bool'), relay.shape_of(uop_3952))) # shape=(13, 13, 5)
bop_3968 = relay.floor_divide(uop_3941.astype('float64'), relay.reshape(bop_3931.astype('float64'), relay.shape_of(uop_3941))) # shape=(13, 13, 5)
bop_3971 = relay.floor_divide(uop_3943.astype('float64'), relay.reshape(bop_3934.astype('float64'), relay.shape_of(uop_3943))) # shape=(13, 13, 5)
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
const_3973 = relay.const([True,True,False,False,True,False,True,False,False,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,False,False,True,False,False], dtype = "bool")#candidate|3973|(224,)|const|bool
call_3972 = relay.TupleGetItem(func_2606_call(relay.reshape(const_3973.astype('bool'), [224,])), 2)
call_3974 = relay.TupleGetItem(func_2609_call(relay.reshape(const_3973.astype('bool'), [224,])), 2)
func_595_call = mod.get_global_var('func_595')
func_598_call = mutated_mod.get_global_var('func_598')
const_3977 = relay.const(False, dtype = "bool")#candidate|3977|()|const|bool
call_3976 = func_595_call(relay.reshape(const_3977.astype('bool'), []))
call_3978 = func_595_call(relay.reshape(const_3977.astype('bool'), []))
uop_3983 = relay.log10(bop_3953.astype('float64')) # shape=(13, 13, 5)
uop_3985 = relay.log10(bop_3956.astype('float64')) # shape=(13, 13, 5)
output = relay.Tuple([call_3926,call_3958,bop_3961,bop_3968,call_3972,const_3973,call_3976,const_3977,uop_3983,])
output2 = relay.Tuple([call_3927,call_3959,bop_3964,bop_3971,call_3974,const_3973,call_3978,const_3977,uop_3985,])
func_3986 = relay.Function([var_3930,], output)
mod['func_3986'] = func_3986
mod = relay.transform.InferType()(mod)
mutated_mod['func_3986'] = func_3986
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3987 = relay.var("var_3987", dtype = "float64", shape = (13, 13, 5))#candidate|3987|(13, 13, 5)|var|float64
func_3986_call = mutated_mod.get_global_var('func_3986')
call_3988 = func_3986_call(var_3987)
output = call_3988
func_3989 = relay.Function([var_3987], output)
mutated_mod['func_3989'] = func_3989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2652_call = mod.get_global_var('func_2652')
func_2654_call = mutated_mod.get_global_var('func_2654')
call_4018 = func_2652_call()
call_4019 = func_2652_call()
output = relay.Tuple([call_4018,])
output2 = relay.Tuple([call_4019,])
func_4020 = relay.Function([], output)
mod['func_4020'] = func_4020
mod = relay.transform.InferType()(mod)
mutated_mod['func_4020'] = func_4020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4020_call = mutated_mod.get_global_var('func_4020')
call_4021 = func_4020_call()
output = call_4021
func_4022 = relay.Function([], output)
mutated_mod['func_4022'] = func_4022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_4091 = func_3254_call()
call_4092 = func_3254_call()
output = relay.Tuple([call_4091,])
output2 = relay.Tuple([call_4092,])
func_4100 = relay.Function([], output)
mod['func_4100'] = func_4100
mod = relay.transform.InferType()(mod)
mutated_mod['func_4100'] = func_4100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4100_call = mutated_mod.get_global_var('func_4100')
call_4101 = func_4100_call()
output = call_4101
func_4102 = relay.Function([], output)
mutated_mod['func_4102'] = func_4102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4114 = relay.var("var_4114", dtype = "float32", shape = ())#candidate|4114|()|var|float32
var_4115 = relay.var("var_4115", dtype = "float32", shape = (4, 1, 15))#candidate|4115|(4, 1, 15)|var|float32
bop_4116 = relay.power(var_4114.astype('float32'), var_4115.astype('float32')) # shape=(4, 1, 15)
bop_4119 = relay.mod(var_4115.astype('float64'), relay.reshape(bop_4116.astype('float64'), relay.shape_of(var_4115))) # shape=(4, 1, 15)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_4136 = relay.TupleGetItem(func_3181_call(), 0)
call_4137 = relay.TupleGetItem(func_3182_call(), 0)
func_3986_call = mod.get_global_var('func_3986')
func_3989_call = mutated_mod.get_global_var('func_3989')
const_4139 = relay.const([3.186096,-3.295208,-3.647012,9.270109,-4.164665,-7.910048,-6.374158,-9.874997,2.352096,1.860018,4.500621,-5.080568,-3.545134,6.522181,-7.954955,-8.527761,2.962233,1.253405,-8.746017,-4.690596,-3.357022,1.311770,4.535034,1.812066,8.835421,3.893255,-5.294261,-8.790152,-6.613911,9.225138,7.967714,-2.657119,-9.783941,8.813317,-8.802179,4.021013,-8.067278,1.642381,-4.443947,-6.475236,7.801345,-4.974291,6.810915,-9.812175,-5.973107,-0.078208,2.653557,-7.578509,5.685370,-6.098985,-2.716901,-2.351948,-3.651584,-9.301625,5.261120,-9.080445,-9.706494,-8.084949,-2.284729,-3.750501,-2.642010,-1.083635,7.320697,5.627924,-8.577230,3.426916,4.385403,9.681068,8.595251,2.477588,-3.385173,-6.072763,-4.474062,-8.020616,6.850692,-1.461804,-6.593194,-6.147607,1.056905,-4.144088,3.098992,-4.591559,6.310202,2.710225,-8.696945,7.191293,-1.074772,5.558009,1.989410,6.947728,-1.754443,-5.521678,5.200689,5.620831,2.119552,-8.168540,8.260835,8.006677,6.147081,4.373483,0.242541,-4.990922,-4.808178,9.180696,-4.077272,0.250107,-0.768391,7.760123,-6.605826,-9.762316,-6.903927,-3.044125,-3.401283,-9.983861,-0.678110,3.172927,8.274766,-1.334736,1.272200,1.359017,-6.048398,7.493619,-7.557406,-2.366681,8.833724,-1.923852,-0.170186,9.546387,1.162124,-2.576098,5.410824,5.709888,4.221693,4.738109,1.549801,-9.207347,4.460526,-8.829862,-1.771996,-4.645679,-7.857124,1.447519,7.618944,0.862247,6.874896,3.692406,5.819877,2.073721,-0.190172,0.005993,1.567424,9.158593,2.817257,-1.596833,4.843277,6.448201,-2.073295,-1.105386,4.963540,-4.747275,9.602731,-7.471248,-5.459477,7.157954,-1.824191,1.064801,0.736345,-9.807634,-2.880789,-9.409373,1.361677,2.580047,1.740285,7.616019,6.720634,8.201940,8.040658,6.107777,2.704643,-7.175831,-2.702143,0.882594,1.895340,-9.356912,-2.849984,7.367570,1.890558,4.891183,-7.669033,0.836653,-4.765565,-0.806626,-9.485721,-4.209312,-2.549665,5.784446,-9.932970,-9.680555,-0.506280,2.111003,-0.056787,-9.101469,-3.817933,-9.454682,7.146371,-6.214719,-1.582077,1.084672,1.779241,-2.677415,5.713177,-5.248390,-3.401026,5.615871,7.438164,7.550348,0.416304,6.217769,-2.352007,-1.902921,-3.638722,2.636035,5.700276,8.603661,-6.668135,-6.053845,-7.253436,2.348507,-7.134236,0.636944,-8.660390,3.170102,0.821982,7.476088,-3.809310,3.882080,-1.800709,5.898558,2.499353,-2.272116,-1.719071,2.536993,9.628396,6.106438,8.594519,-9.403049,8.730394,0.519601,-8.043080,-2.470622,-6.402131,4.212003,5.995095,-4.785773,-6.606079,-1.101790,-9.603629,9.512930,4.424944,4.776552,6.170743,-1.967807,7.964533,6.871733,-9.463977,-1.581013,9.474215,7.704934,-2.496402,-7.948421,3.231570,0.059982,-0.928601,3.553938,2.522637,8.506362,-6.142237,7.393523,8.009075,-5.196124,9.493414,8.578445,-6.294971,8.191853,-2.745498,4.669952,-1.857653,9.171600,6.253921,-6.653265,9.421916,-2.528101,4.145217,6.667955,-0.897630,-5.829314,-4.976166,3.304069,1.251635,5.617784,-8.337786,0.206036,5.653412,7.866616,1.349661,1.460713,8.212111,4.556113,-3.459838,-6.321658,-2.150488,-1.839577,-2.854009,5.551766,-5.478151,1.194929,-9.108423,7.081006,-0.207629,-1.879579,1.960713,-9.281994,2.714162,1.205317,1.004599,6.010828,0.013029,-9.152636,7.130705,3.558115,7.986421,-3.396892,6.982182,7.645019,-7.405012,5.158737,-7.619206,7.661620,0.258625,7.609044,-8.216604,-9.346820,-8.598736,4.841506,6.844069,7.140365,0.673440,-5.442001,2.234851,-6.764505,4.317978,0.043644,-3.783809,-7.815021,-3.864878,-1.074113,-6.344680,-2.297913,0.631134,-4.590681,-6.027334,1.452848,9.659906,-8.353856,-1.773915,-6.238431,-3.475304,5.650109,-3.265432,2.813823,9.858653,3.195255,-0.834759,-5.163446,1.122642,-2.821706,-4.550094,-7.742112,4.528410,-3.245530,6.416485,-8.424779,9.164476,-3.169269,5.542150,-2.437648,9.861760,-2.714595,5.047548,-1.293760,8.225924,-9.394108,-0.642714,2.379923,7.464391,2.852731,-5.621195,-9.050546,4.948743,-3.291697,-5.571285,1.719788,-2.989743,-9.644597,-4.334938,7.813491,1.709509,3.802607,-9.573513,-7.514973,9.475744,-1.143655,6.314195,9.460186,-9.293682,1.717495,-4.643826,-9.683274,-9.018688,-5.262078,2.119261,-2.908561,4.164155,4.192122,-8.829261,0.716135,5.471574,0.901220,-7.533373,-2.605081,-4.674307,-4.310380,-2.391821,-3.983964,9.493406,-3.986983,-3.087349,0.205928,-6.341345,9.945923,-0.839872,-3.717151,-3.016581,-3.808302,-6.274579,5.367179,-7.655319,8.885938,8.319562,0.110854,-1.297889,3.886329,-3.712536,-8.447386,4.784207,4.141564,-7.565194,-5.454510,-9.961642,-7.897145,1.528137,6.902833,7.734015,-9.986514,-0.152825,6.820384,8.890486,7.460616,1.630404,6.333987,9.494015,1.451246,-8.911728,1.993957,-1.708578,-7.053345,8.562539,-7.478100,-2.906659,6.006092,-7.822391,-2.123178,-6.422754,-0.358172,1.274524,-3.151297,-5.391362,8.787388,1.344249,6.627577,-2.078934,5.568808,-8.777566,-2.429571,7.545221,0.553167,-4.458153,3.306660,-6.212012,-2.727005,2.728054,-7.942776,-6.835837,1.276258,-9.211532,-2.331301,-6.413405,3.282791,8.486614,8.907686,7.243958,-5.484180,-3.243026,-2.139218,7.224883,7.616903,-4.949346,4.599484,6.701739,-4.514725,9.443755,-7.375114,2.323990,-5.918323,3.134341,0.889842,9.722871,-0.259467,5.342230,-2.828047,6.712827,-2.263638,7.003608,5.753342,-8.304672,9.354882,-2.959309,2.004467,9.736733,-2.788619,2.496278,6.210248,8.084282,2.565405,4.478039,-9.199395,1.998107,-1.783795,-9.126877,3.873377,6.205224,-6.227784,-6.969771,8.332000,-0.200658,-1.133344,7.544546,-3.878988,6.712883,-0.969932,6.066493,2.861023,4.008164,0.359654,6.453843,-3.246239,5.575502,-1.132649,-5.841109,1.733625,8.918869,-0.281146,-0.691929,-6.407709,-3.014239,-8.071643,5.041492,-8.386456,3.732918,-4.110909,-4.567179,0.909633,2.521474,6.933307,-5.150929,-3.607865,-0.733496,-5.467520,5.974114,-7.380807,2.295231,6.427696,8.654921,3.205970,-0.919172,3.434886,-5.033608,-0.558586,3.701169,8.135034,8.530174,3.529522,9.265797,-4.971149,-2.652429,-5.305184,5.690043,-3.736023,-6.515689,2.069447,5.512930,2.886807,0.879375,-5.520966,-6.222218,-5.164827,8.530163,9.404780,-3.416231,-1.713951,3.763738,-5.139029,-6.303345,4.841424,3.693116,9.440551,5.701311,-3.791577,6.911224,8.489785,3.921994,9.636506,-4.510637,4.404468,-3.345782,7.155423,-7.468285,-8.778590,5.242240,2.746505,-8.432527,1.013055,-3.482181,-2.036821,-4.470517,1.324754,-2.679120,8.934715,1.389897,1.323392,-8.769457,9.932097,-7.694314,4.364941,7.752859,-5.193646,-3.745204,-1.781996,-7.037936,-1.186816,-5.110581,-9.438146,-2.664967,0.741529,-8.891440,9.373450,-0.930061,4.877122,-2.610572,-2.729417,-4.436248,3.281062,-6.207206,5.308108,-0.517811,-4.355239,1.837079,7.889594,-8.237856,9.790637,1.910013,8.650322,-5.394209,1.088162,2.584510,-2.672010,-7.198860,-2.448122,8.298869,4.764042,8.969052,8.346224,-4.001849,-3.215963,8.401283,1.885517,-4.052308,-9.142284,-5.776423,0.008071,3.328652,8.495484,2.890755,6.802721,8.841520,1.850212,-1.442674,9.375445,3.275774,0.268263,0.327793,-3.849229,1.242656,-6.973753,-0.597237,8.961348,-7.109156,8.366649,0.454476,-7.996247,-1.545861,4.540548,-5.737335,2.535395,1.772791,2.654813,-7.916314,-6.236275,-0.278518,6.500319,9.322404,0.419937,4.372035,0.246222,0.117792,2.318060,1.122019,-0.194090,8.993581,-2.497724,-5.404847,0.648411,9.631564,-1.461933,9.674380,-1.694616,-6.785157,-2.044716,-3.220533,-4.100515,9.773102,3.529904,4.329046,8.090841,-4.246612,6.603111,4.288343,6.370762,-2.384448,-7.586753,8.344254,-9.006008,-5.591153,8.685140,0.956623,-9.416234,7.931591,0.119841,8.755719,4.012959,-0.030147,-4.789793,8.253345,-3.832313,3.745001,1.787938,0.584497,0.142145,-8.541469,6.371669,-2.400310,4.201183,0.331069,-5.182786,1.053755,-3.559990,-9.383551,0.603285,-0.981530,-7.529870,-2.986560,-2.657558,2.124967,-0.544920,-9.753934,1.953556,5.602610,-6.882957,-3.935604,-6.902766,-3.510410,8.703025,4.691328,1.125838,9.816024,-6.273011,2.122992,6.917833,-7.645312,6.602389,8.440620,7.314758,7.766583,-8.935023,7.966593,1.889524,3.874900,-2.138295,6.255764,7.733108,2.287878,-0.341928,-1.952175,-7.638733,3.619334,-3.723119,-5.454402,-2.174410,6.626194,8.227584,7.469743,1.796007,-8.132967,6.654406,1.658196,-2.172737,-9.977807,4.703789,-8.977303,0.597411,3.560437,8.201016,-3.270548,5.421345,-0.864676], dtype = "float64")#candidate|4139|(845,)|const|float64
call_4138 = relay.TupleGetItem(func_3986_call(relay.reshape(const_4139.astype('float64'), [13, 13, 5])), 3)
call_4140 = relay.TupleGetItem(func_3989_call(relay.reshape(const_4139.astype('float64'), [13, 13, 5])), 3)
output = relay.Tuple([bop_4119,call_4136,call_4138,const_4139,])
output2 = relay.Tuple([bop_4119,call_4137,call_4140,const_4139,])
func_4153 = relay.Function([var_4114,var_4115,], output)
mod['func_4153'] = func_4153
mod = relay.transform.InferType()(mod)
mutated_mod['func_4153'] = func_4153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4153_call = mutated_mod.get_global_var('func_4153')
var_4155 = relay.var("var_4155", dtype = "float32", shape = ())#candidate|4155|()|var|float32
var_4156 = relay.var("var_4156", dtype = "float32", shape = (4, 1, 15))#candidate|4156|(4, 1, 15)|var|float32
call_4154 = func_4153_call(var_4155,var_4156,)
output = call_4154
func_4157 = relay.Function([var_4155,var_4156,], output)
mutated_mod['func_4157'] = func_4157
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4202 = relay.var("var_4202", dtype = "float64", shape = (4, 7))#candidate|4202|(4, 7)|var|float64
uop_4203 = relay.cos(var_4202.astype('float64')) # shape=(4, 7)
func_2893_call = mod.get_global_var('func_2893')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_4207 = func_2893_call()
call_4208 = func_2893_call()
output = relay.Tuple([uop_4203,call_4207,])
output2 = relay.Tuple([uop_4203,call_4208,])
func_4209 = relay.Function([var_4202,], output)
mod['func_4209'] = func_4209
mod = relay.transform.InferType()(mod)
var_4210 = relay.var("var_4210", dtype = "float64", shape = (4, 7))#candidate|4210|(4, 7)|var|float64
output = func_4209(var_4210)
func_4211 = relay.Function([var_4210], output)
mutated_mod['func_4211'] = func_4211
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_4241 = func_3254_call()
call_4242 = func_3254_call()
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
var_4247 = relay.var("var_4247", dtype = "float64", shape = (28,))#candidate|4247|(28,)|var|float64
call_4246 = relay.TupleGetItem(func_4209_call(relay.reshape(var_4247.astype('float64'), [4, 7])), 0)
call_4248 = relay.TupleGetItem(func_4211_call(relay.reshape(var_4247.astype('float64'), [4, 7])), 0)
uop_4260 = relay.acos(call_4241.astype('float32')) # shape=(11, 15, 10)
uop_4262 = relay.acos(call_4242.astype('float32')) # shape=(11, 15, 10)
output = relay.Tuple([call_4246,var_4247,uop_4260,])
output2 = relay.Tuple([call_4248,var_4247,uop_4262,])
func_4268 = relay.Function([var_4247,], output)
mod['func_4268'] = func_4268
mod = relay.transform.InferType()(mod)
var_4269 = relay.var("var_4269", dtype = "float64", shape = (28,))#candidate|4269|(28,)|var|float64
output = func_4268(var_4269)
func_4270 = relay.Function([var_4269], output)
mutated_mod['func_4270'] = func_4270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3744_call = mod.get_global_var('func_3744')
func_3745_call = mutated_mod.get_global_var('func_3745')
call_4287 = relay.TupleGetItem(func_3744_call(), 0)
call_4288 = relay.TupleGetItem(func_3745_call(), 0)
output = relay.Tuple([call_4287,])
output2 = relay.Tuple([call_4288,])
func_4290 = relay.Function([], output)
mod['func_4290'] = func_4290
mod = relay.transform.InferType()(mod)
output = func_4290()
func_4291 = relay.Function([], output)
mutated_mod['func_4291'] = func_4291
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_4307 = func_3254_call()
call_4308 = func_3254_call()
output = relay.Tuple([call_4307,])
output2 = relay.Tuple([call_4308,])
func_4334 = relay.Function([], output)
mod['func_4334'] = func_4334
mod = relay.transform.InferType()(mod)
output = func_4334()
func_4335 = relay.Function([], output)
mutated_mod['func_4335'] = func_4335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_4383 = relay.TupleGetItem(func_4334_call(), 0)
call_4384 = relay.TupleGetItem(func_4335_call(), 0)
func_3069_call = mod.get_global_var('func_3069')
func_3071_call = mutated_mod.get_global_var('func_3071')
call_4417 = func_3069_call(relay.reshape(call_4383.astype('float64'), [11, 15, 10]))
call_4418 = func_3069_call(relay.reshape(call_4383.astype('float64'), [11, 15, 10]))
output = relay.Tuple([call_4383,call_4417,])
output2 = relay.Tuple([call_4384,call_4418,])
func_4427 = relay.Function([], output)
mod['func_4427'] = func_4427
mod = relay.transform.InferType()(mod)
mutated_mod['func_4427'] = func_4427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mutated_mod.get_global_var('func_4427')
call_4428 = func_4427_call()
output = call_4428
func_4429 = relay.Function([], output)
mutated_mod['func_4429'] = func_4429
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_4435 = relay.TupleGetItem(func_3094_call(), 0)
call_4436 = relay.TupleGetItem(func_3095_call(), 0)
output = call_4435
output2 = call_4436
func_4437 = relay.Function([], output)
mod['func_4437'] = func_4437
mod = relay.transform.InferType()(mod)
mutated_mod['func_4437'] = func_4437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mutated_mod.get_global_var('func_4437')
call_4438 = func_4437_call()
output = call_4438
func_4439 = relay.Function([], output)
mutated_mod['func_4439'] = func_4439
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3744_call = mod.get_global_var('func_3744')
func_3745_call = mutated_mod.get_global_var('func_3745')
call_4442 = relay.TupleGetItem(func_3744_call(), 1)
call_4443 = relay.TupleGetItem(func_3745_call(), 1)
func_3145_call = mod.get_global_var('func_3145')
func_3151_call = mutated_mod.get_global_var('func_3151')
const_4452 = relay.const([[-8,2,-6,10,-10,-3],[-2,4,1,1,6,-10],[4,-9,-7,-3,-10,6],[-8,1,5,-5,-3,4],[-3,-2,7,-7,-3,4],[-7,-6,-2,5,9,1],[2,-2,-5,2,9,4],[6,-9,-8,-1,-1,-4],[-9,6,8,1,3,8],[-10,-5,4,9,1,-9],[2,-7,-6,10,1,5],[-3,-1,2,4,10,2],[-9,4,-10,2,-10,7],[-10,-3,-2,2,5,-4],[3,-8,7,8,3,-7],[-2,7,8,10,-2,10],[-1,3,-6,-2,5,3],[-2,-8,-3,-9,4,9]], dtype = "int32")#candidate|4452|(18, 6)|const|int32
var_4453 = relay.var("var_4453", dtype = "int64", shape = (176,))#candidate|4453|(176,)|var|int64
var_4454 = relay.var("var_4454", dtype = "bool", shape = ())#candidate|4454|()|var|bool
call_4451 = relay.TupleGetItem(func_3145_call(relay.reshape(const_4452.astype('int32'), [2, 9, 6]), relay.reshape(const_4452.astype('int32'), [2, 9, 6]), relay.reshape(var_4453.astype('int64'), [4, 44]), relay.reshape(var_4454.astype('bool'), []), ), 0)
call_4455 = relay.TupleGetItem(func_3151_call(relay.reshape(const_4452.astype('int32'), [2, 9, 6]), relay.reshape(const_4452.astype('int32'), [2, 9, 6]), relay.reshape(var_4453.astype('int64'), [4, 44]), relay.reshape(var_4454.astype('bool'), []), ), 0)
func_2893_call = mod.get_global_var('func_2893')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_4459 = func_2893_call()
call_4460 = func_2893_call()
func_4290_call = mod.get_global_var('func_4290')
func_4291_call = mutated_mod.get_global_var('func_4291')
call_4466 = relay.TupleGetItem(func_4290_call(), 0)
call_4467 = relay.TupleGetItem(func_4291_call(), 0)
output = relay.Tuple([call_4442,call_4451,const_4452,var_4453,var_4454,call_4459,call_4466,])
output2 = relay.Tuple([call_4443,call_4455,const_4452,var_4453,var_4454,call_4460,call_4467,])
func_4469 = relay.Function([var_4453,var_4454,], output)
mod['func_4469'] = func_4469
mod = relay.transform.InferType()(mod)
mutated_mod['func_4469'] = func_4469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4469_call = mutated_mod.get_global_var('func_4469')
var_4471 = relay.var("var_4471", dtype = "int64", shape = (176,))#candidate|4471|(176,)|var|int64
var_4472 = relay.var("var_4472", dtype = "bool", shape = ())#candidate|4472|()|var|bool
call_4470 = func_4469_call(var_4471,var_4472,)
output = call_4470
func_4473 = relay.Function([var_4471,var_4472,], output)
mutated_mod['func_4473'] = func_4473
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_4489 = relay.TupleGetItem(func_4334_call(), 0)
call_4490 = relay.TupleGetItem(func_4335_call(), 0)
var_4497 = relay.var("var_4497", dtype = "float64", shape = (11, 15, 10))#candidate|4497|(11, 15, 10)|var|float64
bop_4498 = relay.mod(call_4489.astype('float32'), relay.reshape(var_4497.astype('float32'), relay.shape_of(call_4489))) # shape=(11, 15, 10)
bop_4501 = relay.mod(call_4490.astype('float32'), relay.reshape(var_4497.astype('float32'), relay.shape_of(call_4490))) # shape=(11, 15, 10)
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
var_4511 = relay.var("var_4511", dtype = "bool", shape = (224,))#candidate|4511|(224,)|var|bool
call_4510 = relay.TupleGetItem(func_2606_call(relay.reshape(var_4511.astype('bool'), [224,])), 0)
call_4512 = relay.TupleGetItem(func_2609_call(relay.reshape(var_4511.astype('bool'), [224,])), 0)
func_4209_call = mod.get_global_var('func_4209')
func_4211_call = mutated_mod.get_global_var('func_4211')
const_4514 = relay.const([[-9.266559,1.279700,-7.257504,4.968939,7.937074,-8.206937,9.151063,4.626974,7.049789,-0.847751,2.293760,7.695952,-4.152173,-7.566721,-3.619547,6.022029,8.165179,0.604108,-6.148493,-7.236303,-3.560840,-5.380636,2.561072,-5.891668,-8.134115,7.582539,2.370567,3.076193]], dtype = "float64")#candidate|4514|(1, 28)|const|float64
call_4513 = relay.TupleGetItem(func_4209_call(relay.reshape(const_4514.astype('float64'), [4, 7])), 1)
call_4515 = relay.TupleGetItem(func_4211_call(relay.reshape(const_4514.astype('float64'), [4, 7])), 1)
output = relay.Tuple([bop_4498,call_4510,var_4511,call_4513,const_4514,])
output2 = relay.Tuple([bop_4501,call_4512,var_4511,call_4515,const_4514,])
func_4535 = relay.Function([var_4497,var_4511,], output)
mod['func_4535'] = func_4535
mod = relay.transform.InferType()(mod)
mutated_mod['func_4535'] = func_4535
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4535_call = mutated_mod.get_global_var('func_4535')
var_4537 = relay.var("var_4537", dtype = "float64", shape = (11, 15, 10))#candidate|4537|(11, 15, 10)|var|float64
var_4538 = relay.var("var_4538", dtype = "bool", shape = (224,))#candidate|4538|(224,)|var|bool
call_4536 = func_4535_call(var_4537,var_4538,)
output = call_4536
func_4539 = relay.Function([var_4537,var_4538,], output)
mutated_mod['func_4539'] = func_4539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_4559 = func_3254_call()
call_4560 = func_3254_call()
func_4535_call = mod.get_global_var('func_4535')
func_4539_call = mutated_mod.get_global_var('func_4539')
var_4564 = relay.var("var_4564", dtype = "bool", shape = (224,))#candidate|4564|(224,)|var|bool
call_4563 = relay.TupleGetItem(func_4535_call(relay.reshape(call_4559.astype('float64'), [11, 15, 10]), relay.reshape(var_4564.astype('bool'), [224,]), ), 2)
call_4565 = relay.TupleGetItem(func_4539_call(relay.reshape(call_4559.astype('float64'), [11, 15, 10]), relay.reshape(var_4564.astype('bool'), [224,]), ), 2)
output = relay.Tuple([call_4559,call_4563,var_4564,])
output2 = relay.Tuple([call_4560,call_4565,var_4564,])
func_4569 = relay.Function([var_4564,], output)
mod['func_4569'] = func_4569
mod = relay.transform.InferType()(mod)
mutated_mod['func_4569'] = func_4569
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4570 = relay.var("var_4570", dtype = "bool", shape = (224,))#candidate|4570|(224,)|var|bool
func_4569_call = mutated_mod.get_global_var('func_4569')
call_4571 = func_4569_call(var_4570)
output = call_4571
func_4572 = relay.Function([var_4570], output)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4100_call = mod.get_global_var('func_4100')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_4582 = relay.TupleGetItem(func_4100_call(), 0)
call_4583 = relay.TupleGetItem(func_4102_call(), 0)
output = relay.Tuple([call_4582,])
output2 = relay.Tuple([call_4583,])
func_4601 = relay.Function([], output)
mod['func_4601'] = func_4601
mod = relay.transform.InferType()(mod)
mutated_mod['func_4601'] = func_4601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4601_call = mutated_mod.get_global_var('func_4601')
call_4602 = func_4601_call()
output = call_4602
func_4603 = relay.Function([], output)
mutated_mod['func_4603'] = func_4603
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4609 = relay.var("var_4609", dtype = "uint16", shape = (15, 12))#candidate|4609|(15, 12)|var|uint16
const_4610 = relay.const([[5,-10,-10,9,4,-5,-6,-3,-3,9,-2,8],[-8,-5,1,1,-6,8,3,-3,-1,5,9,6],[-6,5,2,1,10,-4,-7,-6,7,8,1,-6],[-10,-4,10,10,-5,-3,10,8,1,-10,9,1],[2,-8,1,-9,-9,-9,-3,5,5,6,4,-5],[5,3,-3,-4,4,-10,-7,5,10,-3,2,-10],[9,-2,9,8,-7,10,5,-5,-5,5,3,-8],[-3,-7,-2,-4,2,-4,7,7,-4,4,-10,-10],[3,8,5,-9,8,7,-3,-9,-9,8,-4,8],[3,-9,10,-1,-7,8,-5,-2,3,1,10,-4],[2,5,-8,-5,-6,7,4,-8,5,4,-5,2],[-8,5,-4,7,3,-3,-6,4,-3,-5,-7,9],[-10,-3,-1,-4,-2,7,10,-4,-7,-5,-7,4],[-10,-10,-5,-2,-4,-10,3,-6,-5,-1,-8,-7],[3,-9,-1,-10,-3,1,-9,-10,1,10,6,-7]], dtype = "uint16")#candidate|4610|(15, 12)|const|uint16
bop_4611 = relay.greater(var_4609.astype('bool'), relay.reshape(const_4610.astype('bool'), relay.shape_of(var_4609))) # shape=(15, 12)
func_4290_call = mod.get_global_var('func_4290')
func_4291_call = mutated_mod.get_global_var('func_4291')
call_4621 = relay.TupleGetItem(func_4290_call(), 0)
call_4622 = relay.TupleGetItem(func_4291_call(), 0)
func_3069_call = mod.get_global_var('func_3069')
func_3071_call = mutated_mod.get_global_var('func_3071')
call_4624 = func_3069_call(relay.reshape(call_4621.astype('float64'), [11, 15, 10]))
call_4625 = func_3069_call(relay.reshape(call_4621.astype('float64'), [11, 15, 10]))
output = relay.Tuple([bop_4611,call_4621,call_4624,])
output2 = relay.Tuple([bop_4611,call_4622,call_4625,])
func_4627 = relay.Function([var_4609,], output)
mod['func_4627'] = func_4627
mod = relay.transform.InferType()(mod)
mutated_mod['func_4627'] = func_4627
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4628 = relay.var("var_4628", dtype = "uint16", shape = (15, 12))#candidate|4628|(15, 12)|var|uint16
func_4627_call = mutated_mod.get_global_var('func_4627')
call_4629 = func_4627_call(var_4628)
output = call_4629
func_4630 = relay.Function([var_4628], output)
mutated_mod['func_4630'] = func_4630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_4647 = relay.TupleGetItem(func_3357_call(), 0)
call_4648 = relay.TupleGetItem(func_3359_call(), 0)
func_2975_call = mod.get_global_var('func_2975')
func_2978_call = mutated_mod.get_global_var('func_2978')
const_4656 = relay.const([2,5,4,1,-1,-3,-1,-8,1,-5,9,-3,3,4,-4,8,-8,-3,-9,8,-7,4,1,-3,8,-7,-7,1,2,8,8,-2,-10,-9,-1,8,8,-8,-6,9,-10,-2,1,-7,-1,-8,2,5,5,3,-1,-6,5,-7,-6,6,5,2,-3,8,3,-3,6,-9,4,-8,4,-5,7,-9,-8,-8,-3,10,1,-10,-6,1,4,4,3,4,-6,-6,1,-6,10,-4,6,9,-4,2,-5,-1,-5,7,-6,7,10,-5,-9,-9,-4,-2,-7,-8,3,2,-4,-4,-7,-7,10,5,7,10,-10,5,-10,-6,1,9,-3,9,-1,6,-6,2,-9,5,-6,2,-3,-2,3,9,2,-7,6,-4,-10,8,-5,1,7,10,2,3,-8,-8,5,-4,-7,5,6,2,-2,-2,-3,3,-1,-7,-6,8,-5,4,6,-6,8,6,-1,-1,-3,9,8,-5,-6,1,1,3,-6,6,4,4,-5,7,-3,8,3,-9,1,7,-6,-9,-8,3,-9,9,-4,7,-5,5,3,3,5,7,8,5,-2,1,7,5,4,9,-9,7,-3,4,-8,-3,1,-8,2,2,-6,-6,-6,8,7,10,-6,-9,-1,-6,-10,-9,9,-9,-1,-6,2,9,-5,2,6,7,10,10,7,-8,5,7,7,6,6,4,-6,-8,1,2,-3,-7,4,-4,-5,9,2,-5,-3,6,5,-9,-4,-9,-8,-10,1,-4,9,6,-10,6,-3,10,4,-7,-7,-9,3,4,10,-4,3,5,-4,6,8,-6,4,10,4,-6,-4,-10,2,10,-1,-4,10,6,10,10,5,2,-3,-9,8,8,10,-10,-5,6,-3,-10,-10,1,-2,10,8,-7,4,10,1,3,7,6,4,-5,2,1,4,2,2,3,5,3,-8,-1,-2,-10,10,10,-8,10,-2,2,5,-2,-7,1,7,-1,-8,1,9,-6,9,-2,10,-7,-4,-8,4,-10,-7,2,4,6,-6,-9,-10,3,-2,6,-6,6,-1,-1,-6,-5,1,-4,3,-4,-9,-3,7,-10,-10,10,-9,-5,1,-7,-6,-8,4,-1,-4,-5,7,1,5,-2,-8,-10,-1,1,-3,-8,3,-8,-10,3,4,-6,-9,5,-8,10,1,5,4,-3,4,-6,1,-5,2,6,7,7,1,-9,-10,7,6,-5,-9,9,-4,-2,10,-6,7,-10,-6,-8,10,-5,6,-6,-5,-5,3,-8,1,-2,9,-3,9,-9,-2,-1,-6,-5,-10,5,3,-8,5,3,-7,-5,2,3,3,10,10,-8,-8,7,3,3,-1,10,8,2,-10,-2,-6,8,8,5,-7,-4,-3,3,4,-9,7,-3,-7,-10,1,-1,-10,8,-5,8,5,1,5,-3,-9,6,-6,-3,-3,9,-9,-2,-9,7,-5,-10,-6,-8,4,-2,6,1,4,-4,-10,-2,3,-8,-8,8,1,-2,6,10,1,-3,9,-8,1,-1,-5,8,8,-2,-2,-10,8,-9,-3,-4,-2,-3,4,-3,5,4,6,-10,1,-1,-2,-5,2,-5,-5,-1,-8,6,-8,-7,-1,-3,-6,-1,4,-9,2,7,7,1,2,9,-6,4,-1,7,3,-1,10,5,6,10,-7,4,-8,-8,-6,-10,9,8,-4,-6,-4,7,10,8,9,4,7,-2,2,5,6,-4,-1,6,9,4,10,-7,-7,-4,7,2,5,-8,5,-9,-1,5,5,-9,5,8,-9,6,4,-2,-8,-4,10,4,-5,6,3,-10,-3,5,-4,-5,-1,-9,-1,-3,-5,3,-9,3,-7,-2,8,-3,10,-3,2,-7,9,6,-7,8,-8,-9,10,-2,1,-1,5,2,-9,-4,-2,-4,7,10,10,7,-3,-4,-10,-1,-10,10,4,5,-8,6,9,3,-9,1,-5,7,5,-2,-10,6,5,9,9,-5,-2,8,-3,9,-8,-1,-9,2,2,10,6,3,-1,3,8,-8,-2,-2,-1,-7,3,3,-6,7,8,-9,-3,-8,-7,-6,-10,5,-3,7,10,-3,1,5,1,-5,-9,-3,-1,7,-3,-2,7,5,6,4,-3,1,2,-1,-9,-2,-3,1,8,-9,-10,4,-10,-7,-8,-4,-7,6,2,6,4,-10,-5,-8,-10,5,-1,7,-7,-8,5,-9,5,-6,3,-8,10,-5,-2,1,1,10,-7,3,-1,-1,1,9,-5,4,-6,6,-4,-2,-5,6,1,8,-3,1,2,-10,-2,-10,5,5,-8,-9,4,-7,-8,-5,-9,6,5,-7,7,-9,-10,6,-3,-9,5,-3,3,8,-3,10,-7,5,2,-9,3,10,9,9,8,-4,9,-2,7,4,2,-1,10,10,-2,-3,-9,8,-10,3,-6,8,2,10,9,-9,-7,9,10,1,8,-9,-8,8,-4,3,6,9,-3,-9,-2,3,-3,-9,2,7,4,9,-2,8,-6,8,-4,3,-6,2,-3,7,7,-8,-6,9,10,-9,-4,8,10,3,-5,-3,-1,8,10,-9,-1,-6,-4,6,2,6,-4,8,-4,-10,-1,1,8,3,5,4,1,-5,-6,8,-8,-6,1,-8,8,4,-3,-9,-4,-10,8,-7,4,5,4,-10,10,-5,-1,-5,-3,8,4,8,4,9,1,-3,9,-7,-1,-5,2,-1,-7,3,5,-7,-1,-7,2,-8,-1,8,-7,2,1,-7,9,5,4,5,9,8,-8,6,-10,-3,-5,10,-7,10,-2,-10,-6,-9,4,2,8,5,5,-6,-8,-8,1,7,-2,5,-7,-9,1,-5,-3,-10,7,7,-9,-10,3,1,6,1,6,-6,-4,-8,-2,-1,10,-6,-7,2,7,2,-8,3,3,-3,-3,-4,3,-1,4,10,3,2,8,-3,-6,6,-8,-9,2,-9,-1,1,4,-9,-5,-2,-4,8,8,8,6,7,10,6,10,-8,-10,-4,-2,-3,-9,-5,9,4,5,-1,-5,-7,-6,10,10,-6,-8,7,3,-7,2,5,3,9,1,-9,10,-1,10,-4,-1,3,1,9,9,-6,8,-4,-3,1,3,-10,7,-1,5,9,6,-3,-3,2,-10,5,-4,-1,4,-8,-1,1,-2,-6,10,2,9,-4,10,6,-8,10,-2,6,-2,-2,-7,-2,7,-5,-3,-2,4,3,-4,6,2,4,6,7,-8,-2,3,-1,1,-5,5,-7,3,-7,-10,9,-10,5,4,-5,-2,7,-2,-6,-6,-9,8,4,-7,8,-3,-9,-1,10,-6,-10,-3,-6,5,9,-2,-4,4,4,8,-9,1,3,-10,-7,-7,9,-4,-4,6,2,-2,2,4,-7,8,-5,-2,10,3,-2,-6,2,-3,-1,-2,1,-9,9,-7,-8,-4,3,-3,-10,2,-7,-3,8,-7,-9,2,-2,10,-4,10,3,7,10,1,-4,-3,9,2,-4,-6,6,10,9,-9,-9,7,3,-10,-3,4,-1,-10,3,-8,1,-9,-4,-4,10,-7,4,-1,-7,-1,-9,10,4,-10,2,-5,4,1,-2,2,-10,-1,3,3,-2,-2,9,-10,-4,1,8,10,-9,-3,-5,5,4,-10,-9,-8,-7,-1,-6,1,-1,7,-8,5,-9,-2,-1,-10,4,-3,4,3,4,10,-7,8,-3,7,-4,-3,-1,7,-4,9,10,-3,3,-6,2,-5,-6,6,9,-3,8,-6,-10,10,-2,2,-1,4,2,9,5,4,-8,-3,6,10,9,-10,6,3,-9,10,9,-1,6,-9,-5,-4,-3,-8,10,-10,3,-10,-2,-9,-7,8,-2,8,-1,1,-10,-9,-2,2,6,-3,-6,9,5,6,6,-7,-4,-6,-4,1,2,6,8,5,4,2,-10,-5,-7,-6,-4,1,10,5,4,7,-7,-9,-5,-6,4,-6,-8,-9,1,-10,-10,2,-8,-5,4,-10,9,3,-4,10,10,-2,6,-3,-1,-9,-4,3,10,6,-2,-5,6,2,1,-9,7,-7,-5,7,5,-6,-10,3,-7,-4,-7,-9,-8,-4,2,-8,-5,1,7,-5,-5,-1,8,-7,-3,3,1,-3,-2,8,10,-2,-10,4,-2,-8,-10,3,3,4,-2,-3,8,4,3,-3,-5,-8,7], dtype = "int16")#candidate|4656|(1540,)|const|int16
call_4655 = relay.TupleGetItem(func_2975_call(relay.reshape(const_4656.astype('int16'), [1540,])), 2)
call_4657 = relay.TupleGetItem(func_2978_call(relay.reshape(const_4656.astype('int16'), [1540,])), 2)
output = relay.Tuple([call_4647,call_4655,const_4656,])
output2 = relay.Tuple([call_4648,call_4657,const_4656,])
func_4662 = relay.Function([], output)
mod['func_4662'] = func_4662
mod = relay.transform.InferType()(mod)
mutated_mod['func_4662'] = func_4662
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4662_call = mutated_mod.get_global_var('func_4662')
call_4663 = func_4662_call()
output = call_4663
func_4664 = relay.Function([], output)
mutated_mod['func_4664'] = func_4664
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4698 = relay.var("var_4698", dtype = "float64", shape = (10, 2, 16))#candidate|4698|(10, 2, 16)|var|float64
var_4699 = relay.var("var_4699", dtype = "float64", shape = (10, 2, 16))#candidate|4699|(10, 2, 16)|var|float64
bop_4700 = relay.floor_mod(var_4698.astype('float64'), relay.reshape(var_4699.astype('float64'), relay.shape_of(var_4698))) # shape=(10, 2, 16)
func_4100_call = mod.get_global_var('func_4100')
func_4102_call = mutated_mod.get_global_var('func_4102')
call_4703 = relay.TupleGetItem(func_4100_call(), 0)
call_4704 = relay.TupleGetItem(func_4102_call(), 0)
uop_4705 = relay.tan(var_4699.astype('float64')) # shape=(10, 2, 16)
func_4601_call = mod.get_global_var('func_4601')
func_4603_call = mutated_mod.get_global_var('func_4603')
call_4721 = relay.TupleGetItem(func_4601_call(), 0)
call_4722 = relay.TupleGetItem(func_4603_call(), 0)
uop_4724 = relay.atan(uop_4705.astype('float64')) # shape=(10, 2, 16)
uop_4730 = relay.acosh(uop_4724.astype('float32')) # shape=(10, 2, 16)
output = relay.Tuple([bop_4700,call_4703,call_4721,uop_4730,])
output2 = relay.Tuple([bop_4700,call_4704,call_4722,uop_4730,])
func_4732 = relay.Function([var_4698,var_4699,], output)
mod['func_4732'] = func_4732
mod = relay.transform.InferType()(mod)
var_4733 = relay.var("var_4733", dtype = "float64", shape = (10, 2, 16))#candidate|4733|(10, 2, 16)|var|float64
var_4734 = relay.var("var_4734", dtype = "float64", shape = (10, 2, 16))#candidate|4734|(10, 2, 16)|var|float64
output = func_4732(var_4733,var_4734,)
func_4735 = relay.Function([var_4733,var_4734,], output)
mutated_mod['func_4735'] = func_4735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2758_call = mod.get_global_var('func_2758')
func_2759_call = mutated_mod.get_global_var('func_2759')
call_4744 = relay.TupleGetItem(func_2758_call(), 0)
call_4745 = relay.TupleGetItem(func_2759_call(), 0)
const_4746 = relay.const([[[-9.957117,-1.158342,-6.824048,5.703126,-3.186814,3.369149,-9.821691,-4.450613,9.568512,-8.063273],[5.866686,-3.127196,9.903729,-3.735160,2.162170,-7.328288,1.709924,1.360067,-2.783045,0.102632],[4.730472,4.392472,-6.040082,1.119096,7.714296,5.580516,-4.138746,-1.059247,2.048767,-7.479194],[8.840705,6.877654,4.673633,-4.845052,2.521940,8.413239,-3.910408,-5.502967,-1.957613,-4.830324],[5.215870,-8.178906,2.250820,2.620069,-5.851004,1.573416,-3.582975,-2.333974,-9.025786,4.738225],[-9.242743,-2.972703,3.039241,8.192882,-7.922230,6.006555,2.533104,9.529977,-5.914792,-9.025870],[-3.694752,-0.246006,-6.342184,0.082235,0.874795,-8.465693,2.242993,7.446861,7.540751,-4.920551],[-1.802679,8.082684,8.215597,7.786693,1.028732,-5.386739,2.082437,-3.420463,3.947724,-4.614308],[-0.012610,-6.553366,1.725993,-6.893431,1.058417,6.140531,-9.310009,4.251430,7.235720,9.748801],[-2.939634,2.368681,4.802322,6.737542,3.941766,4.028952,-9.505626,3.803516,2.052158,-1.787238],[-5.029598,1.082542,-2.436655,-1.248220,7.585525,-0.217471,-4.883180,0.625219,6.505458,-3.539962],[2.999970,-2.567532,-4.163019,3.828765,5.708602,-6.163224,6.644448,-9.244177,-3.861032,-2.713004],[6.645167,-9.971850,-1.402089,7.645020,-3.047660,-4.563113,3.297193,-8.338284,-8.005295,-9.921343],[7.412304,3.956798,-6.796467,5.771169,-4.884386,-5.943352,-0.648788,0.483431,-7.471520,0.507924],[7.706954,-3.568283,-3.209018,-6.777274,7.934683,5.806308,2.765274,4.988896,-2.236525,-3.767370]],[[-6.222495,-9.272868,2.885803,9.589820,-9.130753,4.092192,-0.921444,4.326533,-6.808045,4.218155],[-3.105951,-0.316631,9.372931,3.945322,-4.553281,1.487372,-6.121879,-1.397182,5.282357,5.075601],[-3.211898,2.462277,5.954779,1.737894,-6.140927,9.100914,3.458354,-5.483287,0.146913,3.011463],[-8.221504,8.302239,-9.850470,-6.519901,4.106175,-8.521537,-9.499190,6.341002,-8.491825,7.739210],[0.634393,1.448713,9.815354,-4.176561,5.369527,-6.244388,-9.772986,-7.290136,7.924528,-3.046670],[-4.063384,-1.709491,1.470622,-1.934956,5.715324,-4.564487,-1.828836,2.875423,-8.312483,9.395404],[3.310933,9.480384,9.267742,5.188581,-8.949685,9.325950,-4.633410,-1.918456,4.638793,3.990687],[-6.922301,-7.920450,2.421285,-3.508670,0.649199,1.941840,-3.219418,-8.305958,-6.308642,-0.963851],[7.136629,2.410468,-9.761090,4.253551,2.393223,-4.770785,0.229411,-7.559173,-0.991110,-7.241662],[-3.897604,5.110462,-2.171325,-6.036623,3.832552,7.594010,5.268710,-9.400925,-3.854288,8.345176],[-3.339652,-1.546146,-2.613894,-8.587068,9.016201,-3.711182,-3.904859,-4.289849,8.100228,7.301307],[-0.366901,-1.169313,2.432838,3.572820,-2.475651,7.945257,-4.314821,-4.581581,4.949116,0.374252],[6.920792,-6.300110,8.595037,-7.149108,-4.913234,4.436404,9.023043,-7.713110,-2.942307,-0.572058],[-3.383666,5.425660,8.642488,-7.403222,-1.972412,-5.032858,4.973394,6.570147,4.961839,-7.230550],[5.001926,-2.841578,4.674105,-6.915574,-0.570964,-1.643338,-4.100377,1.505662,-3.506057,-7.679035]],[[-3.802763,-4.878851,-7.143003,-8.744563,-2.587572,0.013972,9.551986,-7.723427,-2.304285,-5.146631],[3.075214,8.037044,2.189892,-6.872518,-1.105869,-4.424838,8.486144,9.592004,0.942869,9.134829],[-5.209729,2.355027,7.616018,-7.875706,-4.579290,-3.358581,3.075303,-6.691428,0.138001,-9.105828],[4.404961,-7.197176,-0.116288,-6.134765,2.426030,9.466439,-6.077244,6.206383,-0.409222,2.398654],[9.829357,-5.410551,-2.074282,9.450056,0.018812,8.125308,-5.864001,7.382152,1.942515,-8.236517],[-6.393366,-2.019721,3.776569,-1.162907,4.464134,-4.107725,8.007636,-9.742376,7.628206,1.736404],[9.398469,-5.481426,-7.608776,-5.630438,1.121740,6.602853,-8.522128,6.145622,1.673760,6.636635],[0.363427,4.691736,2.730822,-6.561471,5.264001,6.026330,4.322312,3.091826,-1.281889,8.189759],[-3.623139,1.497573,6.894442,-4.476345,-9.318570,2.775599,-4.879756,-1.272994,-9.470779,-0.032788],[8.902012,4.459506,9.693239,-6.143694,-8.210065,-0.967969,-7.711703,-3.240121,-2.642912,6.665899],[-9.695102,-7.522149,2.823455,-7.716119,-9.995353,-2.849950,0.293577,-0.187736,-6.150951,-8.233768],[-4.351647,7.341877,-5.881076,-0.298585,0.196312,2.826352,7.498283,-2.928454,-2.036972,-7.055180],[7.623389,-2.324707,-0.671883,-8.045756,-0.067041,-1.061006,8.334082,5.835885,9.984706,-6.667740],[1.886745,-8.774335,4.919856,-3.744221,-8.132062,-6.553437,1.335137,-9.398242,9.759849,-2.629511],[0.402467,6.164050,-8.950105,-5.885231,-0.973703,-2.589312,-0.655576,-1.785484,3.408804,9.082925]],[[-1.327638,-7.663395,4.489543,5.075149,5.041414,-5.426022,-7.059796,6.970836,-0.792719,-6.139911],[-5.215590,5.757773,-4.541665,-6.755706,-0.736945,9.391372,-8.054596,-5.639112,-6.067618,-5.918697],[7.014680,-0.526099,-1.982790,-3.547398,0.491895,-8.118830,-4.579932,-4.553165,6.331773,-6.235365],[-9.441446,-6.255106,3.767318,-2.827986,4.360238,6.700938,7.242729,-0.572511,6.393510,9.857478],[-4.195690,-0.110902,6.833731,2.671202,-0.750872,-2.986913,8.705238,0.847462,8.252959,-4.621575],[-3.371784,0.491521,6.693341,-1.029250,-4.310175,0.044859,7.367418,3.549585,-3.165647,9.135713],[4.249768,5.470643,5.849609,6.241121,6.833296,3.520770,-2.677131,3.758300,-3.271196,-6.024631],[0.445586,6.980025,-3.612359,0.974602,1.146936,6.462904,-5.341585,9.114789,0.148104,-5.421297],[-7.963621,-5.563169,-8.498452,-6.320833,5.321459,-6.018378,-8.078079,6.241341,-4.194452,8.617864],[-1.746493,-7.911156,-7.695925,-4.268951,4.246156,-5.918080,-6.514425,-1.417957,-9.672567,0.559397],[5.945717,7.126947,-7.189240,-6.449986,5.319856,-2.439533,-5.721998,2.260403,1.840012,-0.729786],[-9.379166,-6.475477,-4.703471,-4.119030,-0.711798,-3.826920,3.785979,2.204423,6.730236,-2.978735],[-6.283904,-1.703195,-6.773832,9.256104,5.419150,-2.253702,-4.501355,-3.166235,7.443877,8.207724],[-4.565727,9.107746,2.781420,5.233766,9.694098,-9.018838,1.435589,-1.985933,-0.738511,3.499976],[-1.664832,2.065955,-4.091403,1.840084,-8.958970,4.007727,-7.143998,-0.139091,-2.507899,-2.876828]],[[-7.659343,5.005687,1.292606,9.011460,1.655116,3.488163,-6.410597,-3.866585,-2.627695,-3.022810],[-9.986960,-8.590643,-8.610488,9.740371,-8.326677,-3.297736,-8.618024,-3.477634,-7.990846,7.995332],[-6.246462,5.936986,0.761957,-5.154344,0.971737,4.052878,-4.896384,-4.179661,-0.167737,4.230184],[-8.138240,4.376012,5.232833,-6.534239,3.568408,1.478263,7.813916,-3.446406,-9.395623,-9.857763],[3.518221,-2.846678,4.940867,5.850702,-4.353690,6.064661,-6.833391,1.638473,-0.721352,3.362898],[2.377625,-2.239885,0.145755,7.009250,7.397055,8.952650,0.067381,-5.664398,2.782132,1.622508],[5.523615,-4.575239,4.596651,4.937718,8.260349,-8.966702,-6.585011,0.853543,3.518310,3.422268],[7.675088,-6.597413,-4.452401,8.505266,-7.553884,1.902871,5.082259,7.541085,0.884910,1.464762],[-7.130655,7.608227,-5.704111,-9.621213,-1.199910,-3.810502,3.154460,-0.784165,2.312547,2.610630],[-2.458711,4.258154,-3.004428,5.639243,-7.918827,-5.212627,-7.575489,6.949880,6.844963,-0.367340],[9.053566,6.853807,5.748684,5.379833,8.694141,-2.673265,4.543362,-3.506592,6.542682,-0.861951],[-7.708785,-4.261924,-7.371262,4.821438,4.968511,7.285565,-5.197920,5.241233,2.017438,-4.614347],[4.341821,-3.387302,4.978269,-8.125325,-9.766452,-0.869887,-5.024260,0.973685,-0.402184,-5.151586],[4.477597,-3.267750,-3.054395,8.019162,-1.679577,-9.955965,2.910133,6.368321,0.889581,0.955968],[-4.151560,-2.874093,-1.218955,1.007208,-7.853482,-0.839981,-2.388321,3.888670,2.022725,-9.648513]],[[9.347907,0.441304,0.286441,9.100209,7.455125,4.806473,-2.204738,-8.311229,1.447774,7.671179],[2.521421,3.214601,-5.694931,-5.492701,-4.917704,-0.190550,6.524600,-4.236899,-0.771610,-4.310607],[-3.424677,5.098685,2.442332,4.468553,0.945361,0.921160,-4.130804,-3.878589,1.526222,-1.561396],[2.534291,9.892899,8.697706,-1.187816,1.309991,1.010372,-0.986305,-1.918568,-1.719214,-3.442376],[-2.534659,-0.301132,0.755444,-0.247352,3.845474,-6.616750,8.094908,4.874864,1.179180,-0.150591],[-0.860139,-3.054579,-8.750735,8.958574,-3.742649,-0.192266,0.006326,9.263034,-4.963719,3.082887],[0.220036,-8.952038,-6.814406,2.100028,6.397802,-2.240444,8.171167,-0.842877,-9.454740,-0.204683],[-7.282413,5.533223,6.693013,-2.926321,-9.618578,8.431519,2.528087,-8.359317,1.076916,1.252802],[5.770148,8.284355,-0.815498,-7.708028,9.330203,6.431933,-5.899605,0.341008,5.675350,6.405692],[9.664488,7.771785,-7.628462,-6.773536,9.430376,1.789095,-3.107829,5.468866,-9.126839,3.886396],[-4.316187,5.543528,1.576175,-4.207407,-2.426613,9.881850,-6.564651,-3.196333,-5.638954,1.459476],[-7.387895,3.516479,3.200077,6.462150,-6.067959,2.337663,3.046045,5.726348,8.361911,-3.282587],[9.935671,5.939834,-1.112121,6.169636,9.226627,1.892826,2.972949,-5.506136,7.791637,-5.479465],[-2.907880,4.253922,6.416332,-2.897033,-8.953428,-0.118828,-4.449974,-1.098014,-4.598931,-5.780855],[-7.195021,8.898695,-3.685321,-6.209146,-3.076409,7.125232,-4.313493,-8.836343,-5.476413,-5.290600]],[[7.649262,-7.712257,-2.547985,8.138712,-7.257764,-5.838458,4.280955,-6.647249,1.780823,1.065012],[-6.000433,-5.509851,9.357580,-6.334362,-1.326808,3.621644,4.668030,7.833946,-1.069636,-8.702265],[-8.678762,3.140343,4.721171,1.569553,-0.076619,-0.343331,-4.624870,5.975288,1.246888,9.200543],[-3.462443,-1.715950,-1.642983,9.151077,-8.917130,-2.497391,1.656749,-1.918340,6.207894,3.651832],[-6.725558,-4.543055,8.069733,7.744416,8.173413,-0.535949,5.642492,-3.153866,-6.527828,-3.481029],[4.422876,-7.115962,-7.337452,0.142442,-6.730544,3.975876,-7.997772,3.072693,2.387287,2.722246],[8.953111,-9.544368,-3.915260,4.030503,-4.102796,9.841480,-8.759589,-0.321684,-5.058610,-3.280769],[5.084744,7.385560,-5.277351,8.950229,0.791620,-5.128214,-0.857971,0.476654,6.463852,4.723408],[-3.658007,-6.243068,-8.975578,4.799792,-2.006039,-6.627306,6.039083,-4.962345,-1.831323,6.339767],[-9.015249,6.289398,-0.121086,7.085792,2.512074,-1.024305,6.514773,-4.507833,9.924421,-6.963350],[0.130940,6.276043,-6.462506,-9.148780,3.255771,5.975734,-3.587832,-4.345694,5.081482,-3.790857],[3.737854,7.509760,5.014855,-5.806203,7.627254,9.965594,0.836379,-2.965705,-9.740432,6.159554],[-9.645654,9.513166,1.163994,-3.897636,2.136455,7.453309,0.795952,2.635077,-0.541513,4.433495],[-8.986512,-3.247587,-9.964724,2.883061,-3.404025,-4.832776,2.767897,6.593219,-8.092988,-2.801009],[-6.222358,-4.565010,-1.115032,0.751630,6.192352,-1.558482,5.661708,-6.986250,5.186463,-7.982767]],[[-3.151225,8.773501,-3.500117,-2.053390,-4.983340,-3.028388,-1.197327,-7.435508,-7.419248,6.004549],[-8.389910,1.310129,-0.995439,5.073822,3.524167,3.455166,0.908850,-3.803857,5.244747,-6.217165],[5.579082,8.959434,7.860323,-5.700768,1.355387,9.095369,6.562083,0.344981,-4.248375,-8.432631],[-9.601935,1.035721,-7.892593,6.673438,-2.754960,8.295174,-5.844037,6.956993,-6.967455,9.356659],[0.233891,4.424888,9.075589,4.946545,-3.731889,3.847833,4.323628,-6.382992,-1.415868,-1.418090],[6.266904,-9.094099,-1.427410,6.200497,1.807573,-8.952137,0.822187,-0.645212,-5.546090,7.386727],[0.940730,3.031856,9.652636,-3.450247,2.892468,1.392610,-5.279471,-6.815052,6.085592,5.179990],[-9.911233,-0.887505,3.812514,-8.655338,-4.018143,-2.536161,-2.854446,-1.366769,6.890819,-6.570090],[0.108747,3.612193,9.954688,-8.205991,5.373472,-2.809571,4.065341,-7.866380,6.289254,-3.458782],[-1.732561,6.674239,-2.263039,-8.324953,-7.229967,-9.281695,-0.784700,4.623056,1.468161,7.022636],[6.430444,-7.326221,-1.507980,0.118290,2.275509,8.997718,8.139851,1.043872,-8.444254,1.651748],[-7.731761,0.445325,-6.289119,-1.591289,-0.576781,-3.558004,2.177993,3.744153,8.507097,9.310589],[-6.615817,-8.070429,9.422935,-5.801698,-4.342863,-0.292345,8.579889,1.761537,-9.032010,-5.626123],[8.144782,-9.038881,8.944183,-9.192679,1.771060,-1.712088,-9.562503,6.452481,-1.197566,-4.934895],[5.852169,1.372126,-6.587343,-9.363423,-2.830483,5.075030,-1.172813,6.079622,2.082566,-2.706490]],[[5.143051,6.764037,-6.949577,-4.893227,-2.307667,9.081402,0.771549,-9.730308,5.740841,6.066532],[6.408707,-7.792868,-9.715798,-4.972768,1.005792,-1.923539,4.639197,9.974790,-7.633077,-9.251256],[-8.825529,0.230827,-9.413600,4.178565,-7.639550,9.980306,3.362350,4.556705,4.859801,-1.948236],[9.935974,-8.412538,-4.138770,-3.491578,6.712688,5.879806,-8.625361,4.926525,-5.615013,-1.964563],[5.310574,4.389398,7.958802,5.380782,-0.112083,-8.519494,-4.388148,-2.674013,-8.780458,-7.053448],[2.379504,0.773099,-7.647947,-7.143495,9.881369,5.847771,-2.581720,6.626523,-3.713384,4.000574],[-8.088588,-6.203277,-2.027068,8.760488,3.385294,-2.556152,9.505397,-7.993765,-3.931460,2.958370],[7.967860,1.210691,6.025784,-5.919655,0.409643,-5.306685,3.388572,-3.375186,5.298652,-2.993276],[1.710435,3.529534,-8.813402,-7.203900,-4.143415,-5.946346,5.289248,5.755448,-3.478525,-2.429797],[1.532003,-4.810714,7.380750,-9.203376,-8.767591,3.867116,3.169304,6.527789,-4.074148,8.151154],[9.381646,-3.553348,9.911914,5.316503,2.890646,3.234128,-1.878610,3.287939,-0.626084,-7.587368],[-8.732373,3.806624,-4.071121,2.708392,-4.992998,8.250820,-8.135463,-2.452851,1.812665,-0.792833],[3.645168,-8.617268,7.919224,1.088604,2.536651,-6.336900,3.558466,-5.352399,-2.874225,-4.349695],[-3.647891,-9.478748,-4.812977,-1.061060,-9.253065,-8.619204,-7.505783,3.419896,5.741114,2.888668],[-2.781013,-4.197173,9.817641,7.173345,8.240262,4.834753,5.698591,-4.598198,-9.741781,-0.285953]],[[1.286882,0.879465,9.699011,0.868984,4.333692,5.452649,2.489153,-7.468680,-2.835377,-1.178784],[6.445813,5.095394,-7.348395,-0.204039,-4.067691,1.698627,-2.097672,5.269457,-2.490579,-1.922697],[-8.826220,1.850564,5.337421,-8.097473,-3.824609,9.324209,-3.774486,-1.808896,2.474020,-4.632345],[2.566833,1.527868,-4.492626,2.085681,-8.316642,-0.338574,-4.101221,-2.703979,5.719367,5.275856],[5.415249,-7.856663,-0.693718,-0.937803,8.565353,6.581499,1.222978,-9.040322,-5.970130,-5.624806],[5.222529,9.390001,-7.446127,-1.265095,-5.660458,8.553136,-3.016492,-7.856400,2.164216,-6.369352],[6.595050,9.102496,3.006612,-6.344718,-3.900410,-5.699708,1.911483,3.338074,3.515267,-2.395201],[2.905518,4.140439,0.803732,-7.274278,0.683212,7.667197,3.571652,1.048084,7.423194,-5.802704],[-0.650551,5.670509,-7.395918,6.719977,-4.549830,3.311859,-3.118876,-1.512181,-3.140564,-0.106368],[1.475733,-3.197916,-0.489879,6.871250,2.182366,6.416310,-5.498615,-3.403010,1.086209,-4.683971],[7.149762,-2.897470,7.600587,9.865337,9.898227,0.227527,2.414640,4.015463,1.075384,4.091343],[-9.785512,-5.361812,-5.324071,2.192215,-6.941080,5.072666,-9.221437,2.541560,-7.645628,9.361759],[-2.442727,7.273257,5.934369,-7.034037,7.100055,3.374163,-0.934126,8.904528,-8.848049,5.442842],[-9.504865,-5.414325,-9.442925,-6.351660,-0.347371,-2.213185,-2.379255,8.777431,9.389171,-8.967271],[0.037291,-2.057472,1.977014,-6.923998,8.236152,6.292881,7.735443,-9.589687,6.317356,-6.155588]],[[-8.228827,8.395268,-8.627754,-9.345765,-4.397292,7.504041,3.594355,9.666060,8.633976,-1.268535],[7.601342,-9.660480,-7.195111,-0.013798,-0.385537,6.548682,-9.931631,2.383821,4.999769,-2.030014],[8.754841,-7.332358,0.114507,2.261815,1.659448,8.492901,3.835795,7.654129,-6.155912,-3.347063],[7.290455,-1.456819,-0.128327,-7.530645,4.869285,1.280804,-1.945933,5.852987,8.311821,-9.051906],[1.009699,-2.026918,-9.811719,-2.386079,2.088205,1.490263,-9.736226,-2.404999,0.501369,8.331744],[8.828220,7.189840,-3.828660,-6.319410,-1.220934,-3.129548,-2.815986,-0.687847,6.906768,-8.794070],[9.147021,1.329450,0.717956,-8.672288,-0.866991,3.364821,-2.303097,-1.192401,-4.550967,3.779428],[6.307449,-8.792576,-7.500338,-5.277969,5.208600,-2.163857,-7.279138,-3.273637,-4.968867,4.409765],[-1.249054,-6.281887,7.278359,9.623461,3.116152,-1.878623,9.444009,5.626541,-5.990271,4.293813],[-5.931586,-6.918699,1.699226,-1.796724,-0.906709,-0.914438,-0.975007,1.674918,8.492664,6.426387],[7.531104,-5.930680,-7.500718,-4.722784,0.919502,-6.964088,-6.584771,0.879059,-7.276433,8.862787],[9.587485,4.343853,-5.018357,3.903430,-2.904604,0.207913,0.541290,-9.380036,3.357893,-0.111099],[-8.634898,-5.950806,6.342221,-1.119701,6.993020,-5.939625,4.081446,-3.256034,2.268407,-5.937833],[6.909685,6.883500,3.762406,-9.993219,9.847764,0.876920,-0.101596,-3.235153,0.690283,5.195896],[-3.446109,1.697918,4.063493,1.126216,-4.840008,-8.230335,9.813423,-5.428880,5.556831,4.777164]]], dtype = "float64")#candidate|4746|(11, 15, 10)|const|float64
bop_4747 = relay.add(call_4744.astype('int8'), relay.reshape(const_4746.astype('int8'), relay.shape_of(call_4744))) # shape=(11, 15, 10)
bop_4750 = relay.add(call_4745.astype('int8'), relay.reshape(const_4746.astype('int8'), relay.shape_of(call_4745))) # shape=(11, 15, 10)
output = relay.Tuple([bop_4747,])
output2 = relay.Tuple([bop_4750,])
func_4758 = relay.Function([], output)
mod['func_4758'] = func_4758
mod = relay.transform.InferType()(mod)
mutated_mod['func_4758'] = func_4758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mutated_mod.get_global_var('func_4758')
call_4759 = func_4758_call()
output = call_4759
func_4760 = relay.Function([], output)
mutated_mod['func_4760'] = func_4760
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4764 = relay.var("var_4764", dtype = "float32", shape = (15, 11, 12))#candidate|4764|(15, 11, 12)|var|float32
uop_4765 = relay.exp(var_4764.astype('float32')) # shape=(15, 11, 12)
output = uop_4765
output2 = uop_4765
func_4774 = relay.Function([var_4764,], output)
mod['func_4774'] = func_4774
mod = relay.transform.InferType()(mod)
mutated_mod['func_4774'] = func_4774
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4775 = relay.var("var_4775", dtype = "float32", shape = (15, 11, 12))#candidate|4775|(15, 11, 12)|var|float32
func_4774_call = mutated_mod.get_global_var('func_4774')
call_4776 = func_4774_call(var_4775)
output = call_4776
func_4777 = relay.Function([var_4775], output)
mutated_mod['func_4777'] = func_4777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4662_call = mod.get_global_var('func_4662')
func_4664_call = mutated_mod.get_global_var('func_4664')
call_4782 = relay.TupleGetItem(func_4662_call(), 2)
call_4783 = relay.TupleGetItem(func_4664_call(), 2)
output = call_4782
output2 = call_4783
func_4793 = relay.Function([], output)
mod['func_4793'] = func_4793
mod = relay.transform.InferType()(mod)
output = func_4793()
func_4794 = relay.Function([], output)
mutated_mod['func_4794'] = func_4794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3223_call = mod.get_global_var('func_3223')
func_3225_call = mutated_mod.get_global_var('func_3225')
call_4828 = relay.TupleGetItem(func_3223_call(), 0)
call_4829 = relay.TupleGetItem(func_3225_call(), 0)
func_3145_call = mod.get_global_var('func_3145')
func_3151_call = mutated_mod.get_global_var('func_3151')
var_4833 = relay.var("var_4833", dtype = "int32", shape = (108,))#candidate|4833|(108,)|var|int32
const_4834 = relay.const([-7,-6,9,-4,8,-2,5,-4,-5,3,4,8,-5,-7,1,3,-6,-5,-7,-5,-7,5,8,4,-4,9,-3,7,9,6,7,-10,-10,-9,3,2,-2,-3,-8,2,-6,-9,-9,8,-10,9,-6,2,3,-3,-7,10,3,10,10,5,-4,-6,-3,-2,-1,-2,-10,-10,-8,-3,7,-4,7,-4,-5,-5,-5,1,-5,3,-2,2,-9,-6,5,-2,3,3,-8,-6,-7,-10,-2,-10,-4,5,-8,-9,-1,-6,6,-1,1,-8,-2,-2,7,-1,4,8,-4,5,1,-1,-1,-1,4,-8,5,-6,2,5,-3,-8,6,7,8,6,-10,-2,-5,-9,-4,-3,-3,-5,8,-4,-4,10,-6,-2,10,4,4,-10,10,7,6,-4,-1,-4,6,-2,8,-2,10,9,-3,-8,2,7,7,7,-6,-2,7,-7,-4,7,2,6,-5,-2,9,-9,-9,-2,-10,2], dtype = "int64")#candidate|4834|(176,)|const|int64
const_4835 = relay.const(False, dtype = "bool")#candidate|4835|()|const|bool
call_4832 = relay.TupleGetItem(func_3145_call(relay.reshape(var_4833.astype('int32'), [2, 9, 6]), relay.reshape(var_4833.astype('int32'), [2, 9, 6]), relay.reshape(const_4834.astype('int64'), [4, 44]), relay.reshape(const_4835.astype('bool'), []), ), 4)
call_4836 = relay.TupleGetItem(func_3151_call(relay.reshape(var_4833.astype('int32'), [2, 9, 6]), relay.reshape(var_4833.astype('int32'), [2, 9, 6]), relay.reshape(const_4834.astype('int64'), [4, 44]), relay.reshape(const_4835.astype('bool'), []), ), 4)
uop_4843 = relay.acosh(call_4828.astype('float64')) # shape=(11, 15, 10)
uop_4845 = relay.acosh(call_4829.astype('float64')) # shape=(11, 15, 10)
bop_4860 = relay.floor_mod(uop_4843.astype('float32'), relay.reshape(call_4828.astype('float32'), relay.shape_of(uop_4843))) # shape=(11, 15, 10)
bop_4863 = relay.floor_mod(uop_4845.astype('float32'), relay.reshape(call_4829.astype('float32'), relay.shape_of(uop_4845))) # shape=(11, 15, 10)
output = relay.Tuple([call_4832,var_4833,const_4834,const_4835,bop_4860,])
output2 = relay.Tuple([call_4836,var_4833,const_4834,const_4835,bop_4863,])
func_4865 = relay.Function([var_4833,], output)
mod['func_4865'] = func_4865
mod = relay.transform.InferType()(mod)
var_4866 = relay.var("var_4866", dtype = "int32", shape = (108,))#candidate|4866|(108,)|var|int32
output = func_4865(var_4866)
func_4867 = relay.Function([var_4866], output)
mutated_mod['func_4867'] = func_4867
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3921_call = mod.get_global_var('func_3921')
func_3923_call = mutated_mod.get_global_var('func_3923')
call_4873 = relay.TupleGetItem(func_3921_call(), 1)
call_4874 = relay.TupleGetItem(func_3923_call(), 1)
func_761_call = mod.get_global_var('func_761')
func_765_call = mutated_mod.get_global_var('func_765')
var_4889 = relay.var("var_4889", dtype = "int64", shape = (176, 1))#candidate|4889|(176, 1)|var|int64
const_4890 = relay.const(True, dtype = "bool")#candidate|4890|()|const|bool
call_4888 = relay.TupleGetItem(func_761_call(relay.reshape(var_4889.astype('int64'), [1, 11, 16]), relay.reshape(const_4890.astype('bool'), []), ), 2)
call_4891 = relay.TupleGetItem(func_765_call(relay.reshape(var_4889.astype('int64'), [1, 11, 16]), relay.reshape(const_4890.astype('bool'), []), ), 2)
uop_4892 = relay.sinh(var_4889.astype('float32')) # shape=(176, 1)
output = relay.Tuple([call_4873,call_4888,const_4890,uop_4892,])
output2 = relay.Tuple([call_4874,call_4891,const_4890,uop_4892,])
func_4919 = relay.Function([var_4889,], output)
mod['func_4919'] = func_4919
mod = relay.transform.InferType()(mod)
mutated_mod['func_4919'] = func_4919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4920 = relay.var("var_4920", dtype = "int64", shape = (176, 1))#candidate|4920|(176, 1)|var|int64
func_4919_call = mutated_mod.get_global_var('func_4919')
call_4921 = func_4919_call(var_4920)
output = call_4921
func_4922 = relay.Function([var_4920], output)
mutated_mod['func_4922'] = func_4922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_4926 = relay.TupleGetItem(func_3357_call(), 0)
call_4927 = relay.TupleGetItem(func_3359_call(), 0)
func_761_call = mod.get_global_var('func_761')
func_765_call = mutated_mod.get_global_var('func_765')
const_4949 = relay.const([-4,7,-7,8,-4,8,-7,-8,-2,6,-3,-4,3,8,-1,-9,-5,8,-5,-3,-9,1,-4,3,-4,-6,5,9,-7,9,-1,4,-5,9,-9,8,-3,-3,8,3,-6,-6,-8,-1,3,5,-8,-3,1,10,-4,7,-7,-4,-8,-8,5,-7,10,-10,-6,10,-5,-7,-5,-8,7,-6,-8,1,9,-2,3,9,-5,-8,-5,-7,1,9,-10,5,-2,2,-3,-8,2,7,9,-1,-5,9,7,-2,-7,2,-8,5,-10,-2,1,3,1,-1,6,-7,10,10,-2,-8,3,-6,-9,-3,-9,-9,-6,-6,-4,9,8,8,-2,7,-1,2,-5,5,1,-10,-2,3,-3,6,3,-7,1,-10,6,-6,-2,-8,-9,2,10,2,-3,9,1,5,-1,6,-10,5,-4,2,9,7,-3,-8,3,7,5,3,-1,10,1,-4,-2,6,9,-6,-7,6,1,5], dtype = "int64")#candidate|4949|(176,)|const|int64
var_4950 = relay.var("var_4950", dtype = "bool", shape = ())#candidate|4950|()|var|bool
call_4948 = relay.TupleGetItem(func_761_call(relay.reshape(const_4949.astype('int64'), [1, 11, 16]), relay.reshape(var_4950.astype('bool'), []), ), 1)
call_4951 = relay.TupleGetItem(func_765_call(relay.reshape(const_4949.astype('int64'), [1, 11, 16]), relay.reshape(var_4950.astype('bool'), []), ), 1)
func_4758_call = mod.get_global_var('func_4758')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_4969 = relay.TupleGetItem(func_4758_call(), 0)
call_4970 = relay.TupleGetItem(func_4760_call(), 0)
output = relay.Tuple([call_4926,call_4948,const_4949,var_4950,call_4969,])
output2 = relay.Tuple([call_4927,call_4951,const_4949,var_4950,call_4970,])
func_4978 = relay.Function([var_4950,], output)
mod['func_4978'] = func_4978
mod = relay.transform.InferType()(mod)
mutated_mod['func_4978'] = func_4978
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4979 = relay.var("var_4979", dtype = "bool", shape = ())#candidate|4979|()|var|bool
func_4978_call = mutated_mod.get_global_var('func_4978')
call_4980 = func_4978_call(var_4979)
output = call_4980
func_4981 = relay.Function([var_4979], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_4983 = func_3254_call()
call_4984 = func_3254_call()
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_4992 = relay.TupleGetItem(func_3357_call(), 0)
call_4993 = relay.TupleGetItem(func_3359_call(), 0)
func_4774_call = mod.get_global_var('func_4774')
func_4777_call = mutated_mod.get_global_var('func_4777')
var_4997 = relay.var("var_4997", dtype = "float32", shape = (3, 660))#candidate|4997|(3, 660)|var|float32
call_4996 = func_4774_call(relay.reshape(var_4997.astype('float32'), [15, 11, 12]))
call_4998 = func_4774_call(relay.reshape(var_4997.astype('float32'), [15, 11, 12]))
var_5002 = relay.var("var_5002", dtype = "float32", shape = (15, 11, 12))#candidate|5002|(15, 11, 12)|var|float32
bop_5003 = relay.power(call_4996.astype('float32'), relay.reshape(var_5002.astype('float32'), relay.shape_of(call_4996))) # shape=(15, 11, 12)
bop_5006 = relay.power(call_4998.astype('float32'), relay.reshape(var_5002.astype('float32'), relay.shape_of(call_4998))) # shape=(15, 11, 12)
func_3921_call = mod.get_global_var('func_3921')
func_3923_call = mutated_mod.get_global_var('func_3923')
call_5007 = relay.TupleGetItem(func_3921_call(), 4)
call_5008 = relay.TupleGetItem(func_3923_call(), 4)
output = relay.Tuple([call_4983,call_4992,var_4997,bop_5003,call_5007,])
output2 = relay.Tuple([call_4984,call_4993,var_4997,bop_5006,call_5008,])
func_5009 = relay.Function([var_4997,var_5002,], output)
mod['func_5009'] = func_5009
mod = relay.transform.InferType()(mod)
mutated_mod['func_5009'] = func_5009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5009_call = mutated_mod.get_global_var('func_5009')
var_5011 = relay.var("var_5011", dtype = "float32", shape = (3, 660))#candidate|5011|(3, 660)|var|float32
var_5012 = relay.var("var_5012", dtype = "float32", shape = (15, 11, 12))#candidate|5012|(15, 11, 12)|var|float32
call_5010 = func_5009_call(var_5011,var_5012,)
output = call_5010
func_5013 = relay.Function([var_5011,var_5012,], output)
mutated_mod['func_5013'] = func_5013
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_5020 = func_3254_call()
call_5021 = func_3254_call()
func_3069_call = mod.get_global_var('func_3069')
func_3071_call = mutated_mod.get_global_var('func_3071')
call_5038 = func_3069_call(relay.reshape(call_5020.astype('float64'), [11, 15, 10]))
call_5039 = func_3069_call(relay.reshape(call_5020.astype('float64'), [11, 15, 10]))
output = relay.Tuple([call_5020,call_5038,])
output2 = relay.Tuple([call_5021,call_5039,])
func_5040 = relay.Function([], output)
mod['func_5040'] = func_5040
mod = relay.transform.InferType()(mod)
output = func_5040()
func_5041 = relay.Function([], output)
mutated_mod['func_5041'] = func_5041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_5060 = relay.TupleGetItem(func_4334_call(), 0)
call_5061 = relay.TupleGetItem(func_4335_call(), 0)
output = relay.Tuple([call_5060,])
output2 = relay.Tuple([call_5061,])
func_5062 = relay.Function([], output)
mod['func_5062'] = func_5062
mod = relay.transform.InferType()(mod)
output = func_5062()
func_5063 = relay.Function([], output)
mutated_mod['func_5063'] = func_5063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5040_call = mod.get_global_var('func_5040')
func_5041_call = mutated_mod.get_global_var('func_5041')
call_5077 = relay.TupleGetItem(func_5040_call(), 1)
call_5078 = relay.TupleGetItem(func_5041_call(), 1)
func_4662_call = mod.get_global_var('func_4662')
func_4664_call = mutated_mod.get_global_var('func_4664')
call_5084 = relay.TupleGetItem(func_4662_call(), 0)
call_5085 = relay.TupleGetItem(func_4664_call(), 0)
func_5009_call = mod.get_global_var('func_5009')
func_5013_call = mutated_mod.get_global_var('func_5013')
var_5110 = relay.var("var_5110", dtype = "float32", shape = (990, 2))#candidate|5110|(990, 2)|var|float32
call_5109 = relay.TupleGetItem(func_5009_call(relay.reshape(var_5110.astype('float32'), [3, 660]), relay.reshape(var_5110.astype('float32'), [15, 11, 12]), ), 0)
call_5111 = relay.TupleGetItem(func_5013_call(relay.reshape(var_5110.astype('float32'), [3, 660]), relay.reshape(var_5110.astype('float32'), [15, 11, 12]), ), 0)
output = relay.Tuple([call_5077,call_5084,call_5109,var_5110,])
output2 = relay.Tuple([call_5078,call_5085,call_5111,var_5110,])
func_5119 = relay.Function([var_5110,], output)
mod['func_5119'] = func_5119
mod = relay.transform.InferType()(mod)
mutated_mod['func_5119'] = func_5119
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5120 = relay.var("var_5120", dtype = "float32", shape = (990, 2))#candidate|5120|(990, 2)|var|float32
func_5119_call = mutated_mod.get_global_var('func_5119')
call_5121 = func_5119_call(var_5120)
output = call_5121
func_5122 = relay.Function([var_5120], output)
mutated_mod['func_5122'] = func_5122
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5224 = relay.var("var_5224", dtype = "float64", shape = (8, 4, 14))#candidate|5224|(8, 4, 14)|var|float64
var_5225 = relay.var("var_5225", dtype = "float64", shape = (8, 4, 14))#candidate|5225|(8, 4, 14)|var|float64
bop_5226 = relay.less(var_5224.astype('bool'), relay.reshape(var_5225.astype('bool'), relay.shape_of(var_5224))) # shape=(8, 4, 14)
output = relay.Tuple([bop_5226,])
output2 = relay.Tuple([bop_5226,])
func_5240 = relay.Function([var_5224,var_5225,], output)
mod['func_5240'] = func_5240
mod = relay.transform.InferType()(mod)
var_5241 = relay.var("var_5241", dtype = "float64", shape = (8, 4, 14))#candidate|5241|(8, 4, 14)|var|float64
var_5242 = relay.var("var_5242", dtype = "float64", shape = (8, 4, 14))#candidate|5242|(8, 4, 14)|var|float64
output = func_5240(var_5241,var_5242,)
func_5243 = relay.Function([var_5241,var_5242,], output)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_5248 = relay.TupleGetItem(func_3094_call(), 0)
call_5249 = relay.TupleGetItem(func_3095_call(), 0)
output = relay.Tuple([call_5248,])
output2 = relay.Tuple([call_5249,])
func_5278 = relay.Function([], output)
mod['func_5278'] = func_5278
mod = relay.transform.InferType()(mod)
output = func_5278()
func_5279 = relay.Function([], output)
mutated_mod['func_5279'] = func_5279
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_5378 = func_4793_call()
call_5379 = func_4793_call()
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_5382 = relay.TupleGetItem(func_3357_call(), 0)
call_5383 = relay.TupleGetItem(func_3359_call(), 0)
output = relay.Tuple([call_5378,call_5382,])
output2 = relay.Tuple([call_5379,call_5383,])
func_5401 = relay.Function([], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
mutated_mod['func_5401'] = func_5401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5401_call = mutated_mod.get_global_var('func_5401')
call_5402 = func_5401_call()
output = call_5402
func_5403 = relay.Function([], output)
mutated_mod['func_5403'] = func_5403
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5423 = relay.const([[[-5.499689,9.336513,-6.919766,-1.626268,5.117863,-0.501400,0.978881,0.895721,-4.582412,-6.775372,1.718022,-4.243685,-8.583876,0.108190,5.669601],[9.718640,-9.345259,-3.018656,0.587767,-4.633341,0.489779,-7.352562,2.177538,-3.567673,9.284896,-9.782891,-4.368262,-3.594246,-5.852210,-0.064762],[9.814899,6.772149,-1.699779,-6.909281,6.278696,8.757554,0.410546,9.071851,9.718051,0.297671,6.296611,4.848526,-7.339819,-5.119955,6.315060],[7.592198,-5.244851,-4.048714,-8.855931,0.957812,7.970089,-6.391497,-3.541950,5.273904,8.678222,-5.750122,6.798550,-2.922034,4.595864,-1.643957],[4.140211,4.101085,3.079435,6.927236,3.908436,3.311859,8.304254,2.683446,4.919725,6.472776,4.386468,0.303312,8.178697,8.936624,0.876820],[-6.415876,1.256627,-6.545505,5.678265,-6.990853,-0.331566,-3.626449,5.136804,6.727550,-4.045926,2.313075,-5.472931,-6.787798,9.318054,0.340458],[-2.515818,1.411070,8.945459,-2.857139,6.755689,0.296497,-6.882186,9.610700,-9.354856,-5.819554,9.019187,-6.471696,8.540170,-1.177809,-5.602382],[2.958863,1.402181,-0.889428,-4.384009,2.972254,5.743151,-9.601435,-4.791674,1.124131,-8.918706,-2.099533,-1.881235,-2.326026,3.546137,-4.049969],[-5.427797,-5.263164,-1.690735,-9.603908,7.451310,5.790723,0.625438,-3.687403,8.690181,-1.372081,-2.960665,-3.743350,6.701875,-7.456748,4.736023],[3.620488,-1.223940,3.681383,-4.579354,8.742710,7.623589,9.590988,-0.734539,5.239072,3.473952,-6.214631,-3.679567,-4.962549,1.613514,-6.929516],[2.440081,-4.408127,-9.907336,9.346113,9.854042,-1.241389,5.553090,9.918970,-9.437483,9.099898,-8.022452,7.784293,-5.570747,8.287040,-7.144672],[-1.885846,3.764889,4.351052,-3.585927,-6.975146,4.314636,5.147551,-2.272945,2.569708,6.140844,3.216974,-4.528291,-5.287063,-5.078932,-4.018361],[9.399307,9.036046,7.253342,-0.529214,1.097210,8.519532,-8.376398,6.271839,-2.438653,4.621134,4.934679,6.955631,5.196213,6.171969,2.627638],[-0.864523,-6.904484,8.206086,-7.138039,-0.347493,6.490833,-8.665666,-4.577594,-5.344280,-9.234358,-3.373684,-2.024805,1.024725,7.787667,-0.528223],[-5.220749,7.915576,-0.826827,-7.444494,5.772966,-9.291661,5.606008,-5.719953,-7.355459,-8.988543,-0.096278,-8.568957,-9.753012,-7.910047,-6.415837]],[[9.356138,9.457264,-0.661035,5.842396,-7.749155,6.571201,8.700184,3.386310,-4.375372,7.536403,6.937450,5.371826,-3.720563,8.078820,0.619274],[6.786678,9.686486,3.356131,-0.238530,-9.211606,3.658037,7.405767,-6.741041,-8.435933,-7.515499,2.135552,8.812644,-2.189636,2.982438,-7.949683],[6.648121,9.049340,-0.192624,-7.771407,4.222188,8.772777,-7.471466,-7.034854,-7.153213,4.474350,-8.097214,-8.656641,3.982969,8.557078,-3.527767],[3.909830,-9.496529,-8.709143,-2.086966,6.856352,-0.672412,-5.285552,-3.694293,5.343516,-9.813047,0.124223,-4.230917,-4.288948,-6.364197,-7.529022],[-8.390100,4.705182,-4.626535,9.114079,-9.945608,-6.168965,-5.623770,-3.285700,8.854949,2.062877,-3.761081,-7.383664,-9.304175,2.312166,3.973647],[5.869183,1.377264,-8.882452,1.353199,-4.087275,-7.872039,-7.603832,-7.139893,2.808642,-0.659421,6.448346,-8.292515,1.288572,-0.367275,5.137686],[-0.752959,1.326213,3.026581,0.686079,-7.257198,4.958193,3.543447,1.068048,-7.193905,2.314502,2.279931,9.678784,1.458818,-8.924676,1.605236],[4.586624,-2.715678,-8.853839,-4.764512,-8.327333,4.194786,1.902842,8.805224,-2.387163,-8.731198,4.201305,-4.196565,3.116816,6.078859,-1.098781],[4.857549,9.431412,-5.503505,-1.058200,0.948983,6.395028,-9.935973,1.284169,7.313732,8.546694,-1.806746,0.068440,2.056826,-0.291176,-9.126649],[-4.208146,-8.254777,-3.252766,9.493452,1.576331,0.175218,6.406197,4.458429,-9.642250,3.658661,-4.331243,-6.104317,-4.144800,-4.429563,-9.990581],[1.524449,3.384954,-4.181017,8.625706,-6.082947,9.420770,2.522175,9.256059,2.419611,-5.905057,9.746273,-5.204491,-5.652143,8.013595,1.277419],[-4.812546,-3.754545,-7.450460,1.743146,-5.680621,-7.415347,3.161701,8.977429,4.253993,-8.069291,2.773422,-8.010811,2.651171,-4.746795,-2.256275],[0.319641,3.664525,-9.094820,-6.440822,7.485520,7.312166,-5.216578,6.311284,4.994995,2.914087,-3.641314,8.302354,-0.321931,-7.372597,4.429367],[6.726407,6.078911,8.927571,-2.007475,8.351958,-4.564640,-2.124030,2.452513,-8.438062,-1.514387,0.562351,-7.190921,5.039612,5.631437,-9.546558],[-0.574771,0.300298,-1.582587,1.759842,1.591957,-7.828246,8.036093,-9.642842,-9.741864,1.213345,-8.151712,-0.089921,9.338761,-0.463200,1.123987]],[[-4.631437,-2.871390,4.205558,-7.474401,7.452904,8.775702,5.922117,-2.813331,8.061523,7.786028,2.462417,7.185092,-3.812681,-9.684579,-3.613608],[6.318385,8.680908,-0.431837,-3.943696,-4.790437,-2.358243,5.902051,-3.993898,-7.660973,8.464867,2.323649,4.858317,-3.851180,2.587401,-3.921122],[-5.894155,-6.659988,9.755680,-1.442915,5.363420,-4.202735,-5.578350,-5.875252,0.933769,-8.636411,-7.506494,-0.388779,0.469094,0.482712,5.420410],[-2.910866,-9.417849,6.317445,1.888692,3.129999,-1.988621,0.352641,-3.678789,-5.535083,-1.642973,-9.564045,-5.160657,-3.041877,8.909801,-3.874589],[-7.227069,-9.425748,-8.967534,-9.945419,8.962157,-3.226630,3.857149,-2.881278,4.077233,-6.905192,2.750165,-1.396449,7.948027,6.178309,8.401207],[5.973238,-1.427209,-2.764430,8.373033,4.970385,-9.329684,6.405066,8.295666,3.045006,-6.525011,-6.310828,-7.102635,1.435936,5.160229,-5.253755],[-2.737698,-7.458628,2.273327,8.671722,-8.457965,4.944858,1.385355,-9.077390,-2.345122,2.228334,7.635878,5.198005,5.238636,2.608002,5.702703],[2.254004,2.834231,9.208536,-6.742333,-8.806966,0.468398,7.826700,-2.482954,9.356774,-3.686387,1.050198,-9.288452,6.984566,1.069861,-2.916324],[5.503857,-3.423404,-8.373814,5.619432,2.726489,6.479685,-9.798840,2.312475,-3.466525,5.747422,4.141519,2.667916,6.396523,1.556628,2.255482],[-3.977817,6.240869,-0.771280,-3.662267,-8.169277,5.465570,-5.399072,0.098290,-7.596472,-6.522695,-9.816665,-6.651298,4.042446,-0.639368,-8.026824],[-5.795578,-6.285358,6.044111,5.846516,0.320253,6.384354,5.763724,-6.129350,6.242999,3.511684,-5.282590,-5.799426,8.023567,0.103174,-1.351288],[9.112940,-9.335517,0.875162,-7.171551,2.353671,-6.663922,-6.950922,-7.447946,-4.834546,1.771270,2.549924,8.654894,-8.210119,9.496101,9.342852],[1.749405,-5.571267,-2.761884,-8.785974,7.959574,-9.150887,-9.492910,8.986158,0.370521,5.027446,6.254277,8.818986,-8.081024,5.706849,0.014618],[6.020477,-4.141893,-8.188406,1.219409,3.496353,-9.493175,7.610213,3.680107,8.128715,-2.112636,2.738850,6.106056,8.589869,6.542533,8.845895],[2.301294,3.272841,-1.042340,-1.324303,-7.447506,-2.177061,-7.011816,-6.463109,1.098066,-5.151293,-6.641309,3.576631,-8.147948,3.638409,-2.672562]],[[-4.620803,2.546359,6.711345,1.510023,-1.256696,3.305903,-7.393712,-7.527846,1.016242,-6.410701,4.593034,-7.804601,-6.350225,4.625856,-6.566921],[-7.644916,6.666303,-7.546225,-2.868545,9.048127,-3.902702,4.839412,-5.683077,1.907733,6.804721,8.554325,-2.133392,-4.239914,5.815198,-4.235237],[1.051888,-7.777386,-3.086569,1.119279,3.855345,0.456630,2.154208,-7.616826,-5.265448,-9.382839,-7.523542,3.727265,9.192544,4.479257,4.378880],[-6.965228,6.504222,-7.764314,1.455910,-1.601388,-6.508178,-0.562071,-0.228191,1.744120,-1.541399,4.394917,5.712645,2.172753,-6.362041,9.469838],[-4.868082,-5.706558,2.170746,-0.917011,-0.516746,6.227431,-1.287434,-5.097480,-1.552984,-1.400316,9.761942,6.076474,-3.467773,4.557396,-6.167731],[-9.538329,-3.778401,-7.273561,6.814247,4.054781,9.130974,-6.152297,-9.767845,-7.789287,-7.554033,-5.076564,-5.507539,5.465557,-2.053262,1.988949],[1.690419,-5.778059,-6.717882,7.425375,2.324710,5.607194,4.946043,-6.585612,4.994021,8.441743,4.895279,8.158967,9.446628,-0.788181,-3.154238],[-2.008978,-7.320397,5.351132,1.482437,-9.088088,9.351825,4.998580,-9.986890,2.598959,6.589750,9.301019,-0.782325,-4.608015,4.917494,6.869573],[7.049589,-5.318895,-0.766046,-2.707713,-8.898043,-5.389183,0.587750,1.683388,-5.714786,1.830703,1.477968,-7.237266,0.997409,4.284199,-8.689293],[-4.569927,3.379790,5.635885,7.644436,7.842631,-3.672567,2.221001,-7.836077,7.147461,7.513052,-6.222686,-5.691362,-7.104047,0.381041,-3.427746],[5.596221,7.707460,8.058873,-8.277610,4.094810,1.043190,-5.222406,5.404328,5.086894,5.057917,4.431282,0.089701,-0.861612,3.597323,6.591950],[2.808038,4.561540,1.141415,7.621771,5.781549,-0.409390,4.768637,2.933160,7.836001,7.923486,-7.216466,-3.531882,-3.604507,0.993377,-1.185890],[-2.100543,9.259236,2.203357,-3.118588,7.296354,1.342791,-7.057726,-6.459945,0.589735,-7.146234,-7.709879,4.589351,-0.886406,8.430624,7.462193],[1.377216,-1.466326,8.203596,1.237473,-5.403670,9.303708,-6.948029,-8.118684,-3.043767,-1.154052,6.754807,1.950471,5.150439,-3.281083,9.117234],[5.198550,0.903007,-5.084591,0.808895,1.461695,-8.233068,8.357556,-9.418069,1.992719,9.980635,-0.081888,-9.381451,5.890009,8.315756,-5.943832]],[[3.200764,4.337393,6.315307,-7.892077,-5.359905,1.176472,-7.001922,1.274835,-0.986808,9.021680,9.086586,-3.640036,0.445173,2.347566,-3.177755],[-6.595679,4.783276,-5.867742,5.884978,1.160875,-2.073044,-5.680427,1.800127,-8.376751,-9.956351,9.191422,1.149067,0.850246,9.381688,3.929810],[-5.910687,-5.584436,-3.976799,6.751001,6.549052,2.114367,4.905940,-7.491767,7.484652,-8.863412,3.722875,2.680793,-3.553549,6.991387,-8.026895],[4.407259,-0.340970,-9.126792,-8.486137,-7.104751,7.355736,-5.265972,9.020303,8.246677,2.812727,-4.121052,-0.141110,8.295052,-9.882292,-3.900665],[0.789089,-6.209223,7.175307,-6.309669,-0.282110,7.487409,-3.670171,-3.625964,7.489925,4.177650,2.273472,4.358255,2.236395,-2.770781,8.995799],[-6.950524,-9.244703,6.872991,-1.577506,-4.427854,-3.685981,-1.314126,8.903402,0.802065,-8.743355,5.671208,-5.248334,3.517717,8.759147,-7.018872],[8.370086,6.895081,7.423149,2.616091,4.155944,-9.524433,-7.428367,-2.418136,9.835874,-7.842731,-2.877782,0.825996,-2.806506,7.409064,7.068516],[-2.774785,-2.459929,-6.901523,-6.448218,6.768810,2.043570,-4.236566,-5.132159,0.817778,-1.645796,-7.202614,0.876508,1.176878,-6.913592,8.688666],[-5.232686,-7.416078,-1.335527,-7.074294,4.164891,-3.046141,9.298118,-2.911828,5.222405,2.818577,0.708663,6.216112,-6.438596,-7.483581,9.230758],[-7.931667,0.021095,-0.112438,2.152355,0.282778,0.490913,-2.271633,-8.407885,-9.066693,-1.597439,5.164132,9.138804,1.772390,8.880914,5.692893],[2.715871,9.092738,-4.894671,-0.242401,-7.306737,-7.978324,8.098962,6.527095,9.781284,-7.256116,3.489166,4.934861,-7.783557,-4.169675,-8.849553],[-7.413043,1.278526,5.432021,3.144959,-2.763445,5.432860,9.017303,3.415552,-9.359469,1.661338,-5.096730,-6.127641,1.420983,-3.663996,-0.150936],[2.401086,8.639247,-3.016473,1.399334,-2.500785,-8.489522,-0.557988,5.889920,-0.675515,8.258582,-4.860911,-6.616693,2.339332,9.006549,-8.027948],[7.966932,-6.147974,-9.911732,7.189492,-9.589873,9.480527,3.149207,0.405630,3.107495,-5.027907,8.717839,4.676841,8.401850,0.954350,-1.588804],[-4.473680,-9.332912,-0.021565,-6.456667,-1.407350,-7.015270,4.500997,8.903294,-1.051887,-3.684090,5.044175,4.060247,8.102648,-7.144647,0.319609]],[[-0.095919,-0.811897,-2.060521,-4.281900,-9.522440,8.719679,-3.388449,-5.814933,3.824910,3.808860,1.305983,4.614487,1.673412,5.978772,-4.394217],[-7.790987,-2.097899,4.489867,-2.836328,1.324287,-3.389511,6.656468,2.151601,-2.177514,-9.412528,-9.129139,9.059598,-2.650520,2.648603,-4.294978],[-8.901596,-7.391654,4.388197,2.477054,0.767223,-2.936394,3.262288,4.349627,9.885564,-9.236952,6.470704,4.401176,-3.048348,7.295051,0.027971],[0.334170,-0.610710,-3.421619,3.200532,6.443949,6.001344,-3.155346,6.162858,1.963244,-6.277707,-4.345066,2.156389,-4.551423,4.405990,1.898611],[6.084808,-4.301536,-3.616418,5.340295,-8.709760,4.035234,-6.663310,8.552643,4.368757,-7.615914,-2.966395,5.694516,-6.072169,5.943842,0.342273],[-8.351213,-1.407613,-8.713476,8.300153,-0.160785,6.090304,7.199325,-5.289033,3.410198,-7.507885,0.513285,7.808542,-9.631374,-9.710222,1.722187],[-7.897930,-5.193788,1.947142,7.832029,-2.634412,-6.845645,2.555157,3.736237,-6.562205,5.469945,-4.811072,9.103206,9.677609,7.534926,-6.385458],[3.661523,-0.976208,5.594725,3.225884,-7.559639,-8.241903,1.085303,4.407710,1.890487,9.506858,-1.346647,5.891461,4.995973,9.588725,-2.250423],[-8.691927,-8.247927,6.960627,-3.222870,-8.311677,-0.048261,9.601778,7.226689,-9.015886,8.251416,4.856102,8.744683,5.802852,-3.002709,1.042756],[-8.958656,-7.157318,-2.587070,-9.081726,-3.715107,-9.576126,-0.007881,-2.392550,-0.179361,-5.313331,0.264543,1.512286,0.605922,6.547101,9.210660],[-6.023821,-1.905998,-6.741866,7.632407,9.377688,8.175004,-5.205464,-1.656889,2.140748,-1.363411,-1.106355,-8.853634,-5.581656,-9.619776,7.871743],[7.522410,-9.091950,-2.213209,-0.687354,4.523396,-4.482765,4.006432,-1.649599,3.808140,-6.347817,-0.438240,2.334908,-7.449359,-9.909924,-7.482548],[-2.516517,4.479634,8.493271,5.196378,3.968516,-1.039838,-9.962477,4.622832,9.158179,-7.332114,-5.378585,-4.492612,9.370514,7.065687,8.835509],[5.866313,3.480638,-8.311933,8.967801,8.854670,1.671602,-1.089249,2.409482,-4.751244,-8.043821,5.177406,6.392326,8.692386,-2.376265,-9.719396],[-9.143774,-2.241353,6.367711,-2.785222,-0.893947,5.866123,7.985413,8.159869,4.477157,3.385466,6.247022,-6.757202,-0.690734,8.970086,7.076354]],[[1.031894,-3.101493,1.968989,-7.494057,-5.604632,7.813987,-3.848916,5.680712,-0.291249,-2.794090,-8.751558,-6.159741,-4.914860,-3.586275,2.488413],[-7.951716,7.462381,-5.973081,-6.497654,6.598725,-7.141309,-0.142761,8.095855,-1.685863,4.540667,-3.828341,-3.021873,-0.125826,5.899325,0.410110],[-1.688565,0.924400,-1.403361,3.515559,1.162893,5.368110,6.745473,-4.527800,2.204714,-2.109971,2.706528,-7.092985,3.416926,5.620487,-1.747045],[-8.050119,-8.119767,-2.011230,7.945265,4.270399,-4.453096,-0.289175,-1.935815,7.245935,-6.205172,-9.811956,-3.049352,5.944973,-6.631616,-3.414513],[5.992949,6.451732,2.198029,-7.432415,6.569714,7.377291,-8.154781,-4.020688,-7.319123,-9.272283,3.616810,2.747463,-5.265340,-3.455222,5.864258],[1.132473,7.552502,-6.560660,-5.862273,3.394251,-9.573932,-9.715903,4.117737,4.141066,-6.824845,-7.061570,9.909553,1.290033,-0.140910,-2.854602],[-6.908327,2.691626,-4.128153,-0.269940,-4.366960,9.316848,-3.999065,-5.911936,-3.348883,-2.684765,4.686047,-0.331058,-6.602696,-9.148924,2.504683],[-7.751939,-6.979903,1.780782,2.542897,-1.347586,-5.131574,-7.155747,0.027991,-5.313777,-5.363316,-1.313740,5.396382,-1.548945,-8.869499,-5.755518],[0.056727,5.806643,-2.821405,6.422822,3.487772,-1.967811,1.041210,-3.568546,6.372488,-9.934323,8.876907,8.469014,8.689961,-7.880028,9.403061],[-1.646094,3.238322,-1.502463,-7.698166,7.413482,1.688242,2.145049,-4.322161,6.149262,-0.483610,-1.289955,-2.184057,-3.637303,6.669065,5.572013],[-0.189478,-9.437834,-8.506597,1.158150,-3.066707,-9.395748,-5.705463,-5.727382,6.773805,-5.834993,0.471181,-9.190091,2.835900,5.102822,0.148866],[3.013134,-4.466211,-5.540811,-0.585532,-3.868465,-8.737373,7.872553,-3.947802,-4.073558,9.614360,-6.890347,2.246765,7.900037,2.112480,8.835410],[1.595420,-2.392672,-3.370801,-0.046051,2.293686,2.705787,2.349406,-2.350531,-8.417021,-1.885547,-7.254044,-9.809189,3.088987,-0.558697,9.773369],[2.275971,-4.072861,-4.636656,-5.103430,5.756923,0.689160,-0.373620,6.323445,1.687006,1.785659,-5.939376,-5.525847,2.688689,-9.344228,-3.897364],[1.993821,-4.059921,-7.997230,9.611039,-2.539419,-5.983005,4.323354,-1.178117,2.127684,6.706290,1.968626,-3.734201,-1.874826,2.748471,8.997442]],[[-9.459969,-9.354927,-2.931023,-5.337874,8.930451,8.274209,-8.158571,-6.477642,1.965840,-9.264618,-1.551545,-0.790854,7.968959,-9.795406,0.054742],[0.195419,7.645357,3.222519,-7.576263,8.589361,-4.681833,8.560849,5.949392,9.899988,5.304651,2.575374,-8.498127,5.565996,5.362276,-8.509595],[2.382948,-7.055295,8.918157,4.959415,4.406924,-1.204836,0.340914,0.091598,5.292485,3.406379,-8.895796,0.788341,8.433572,9.493648,-0.087164],[8.974043,4.274334,-2.022999,7.432450,-3.710572,-1.710943,-4.477833,-2.615282,4.745641,0.825355,-2.760610,7.387281,-4.092906,-8.060736,5.468514],[4.847023,1.956270,5.021272,-8.748825,3.306467,2.510974,5.900162,7.690244,1.651580,9.441798,4.702139,1.554668,0.677035,8.886886,2.863738],[0.164602,-9.458266,0.669081,-3.149892,-4.056168,-7.908088,-2.527091,-9.547916,8.195126,-0.398229,-9.759407,-6.854773,-2.725354,1.041446,-9.907246],[7.863744,8.576475,-4.682091,8.261954,-5.983204,-1.390881,1.657167,-1.601628,-4.954734,-5.818195,1.626359,-6.672304,-2.716566,0.303515,6.519637],[-1.499663,4.502157,-9.875053,-7.033613,6.508036,5.983048,4.011592,-9.582528,-2.048354,3.758788,8.729622,2.782165,-8.271744,-2.136893,1.104157],[8.106119,-2.618827,-1.950262,-8.802771,-0.437652,1.104284,6.551519,6.017968,0.271846,-1.853641,-8.771117,7.062653,-6.606526,3.630096,6.051566],[-9.065598,-7.434393,-3.012527,0.162690,2.616992,-9.821045,4.452418,5.581234,9.868930,9.084630,3.274300,9.981579,0.246931,-8.031534,-1.883297],[-2.365541,3.690557,-5.952232,1.446843,-3.720962,4.229952,7.454161,3.693720,5.087524,3.635239,-8.815517,-5.507325,2.351554,5.696491,-3.072003],[-2.602943,-3.309636,0.424178,8.118295,-3.204183,4.291580,-4.063890,8.766909,5.568654,-6.939804,4.076087,2.890006,-4.124730,1.099274,4.074442],[0.630872,-3.605133,6.232672,-2.095125,-1.040323,-4.879633,8.059195,5.094850,-4.199334,6.376921,1.073432,-4.582572,6.954042,-2.032898,-4.383268],[-2.869360,1.955804,-8.253222,2.605652,9.891404,6.298184,3.001698,-2.458481,5.091240,-7.880612,0.365667,6.519964,-1.727206,-1.365137,-3.786561],[-9.562369,-5.731709,4.723719,-7.197200,-1.850331,6.042362,-9.587924,-7.343222,7.093437,7.099075,-1.123900,0.914013,-9.377021,-0.782171,-5.667633]],[[-6.007262,-1.639623,-2.469438,8.469332,-1.927698,-0.466328,6.389351,-9.526120,2.110683,-3.209369,5.478411,1.605742,-7.281166,7.031612,-6.263285],[3.439690,-6.506899,-0.139516,-2.348516,-3.344481,6.686122,-6.281126,5.312541,-7.058212,-4.657432,1.208150,7.664016,-7.016067,5.799261,6.925940],[-8.842222,-5.258844,-7.690553,1.455224,-0.249115,1.712837,7.218256,-0.529266,-4.913221,0.725495,5.377448,3.600384,-2.826688,8.871570,0.884025],[5.403143,6.427038,-5.269876,-1.263599,-1.282634,7.275648,-6.356727,1.784362,2.451410,1.546394,-8.101454,-7.061512,-7.505261,-6.016175,-2.064530],[-2.084686,5.730567,1.899826,0.452704,7.821577,-5.202140,4.700304,6.062678,2.026692,-8.759000,-7.278473,-1.638810,-8.274713,6.775718,-3.296393],[-8.872334,9.061064,-0.155383,-7.561347,2.838281,-4.984161,-8.843761,-7.996842,-5.937317,3.433953,6.495539,-4.928333,-7.933361,-3.886642,5.529729],[3.230660,1.449327,0.402826,2.734081,8.405017,1.973928,-6.243200,4.449035,-0.759428,-3.226265,-6.970694,2.989851,1.845888,-7.674035,6.525354],[-3.596842,8.011594,6.438527,-7.744753,-0.037005,0.226228,2.250537,-4.839942,6.738604,-4.673726,-2.286517,9.926268,3.229170,9.823674,-0.440985],[6.652568,6.866928,-6.537940,3.046161,5.527734,-5.668442,-7.909047,-9.030611,-5.854581,1.999339,6.057655,2.008829,8.580708,-3.234277,-0.598874],[6.126468,5.761910,2.333276,7.163909,-1.641770,-8.922180,-3.315760,-0.871913,1.714980,-8.838350,-5.025828,-4.269641,-4.956505,-5.322142,-4.748835],[0.665607,5.755917,-0.456505,-9.857983,9.157122,-0.272659,6.732015,-9.540068,8.539302,-5.468241,-1.678930,-6.074032,-9.927016,-0.969207,8.444779],[-6.039509,-3.539436,5.392458,-7.051891,7.239218,0.717002,3.652003,-7.426957,-7.693553,-5.869440,4.268930,3.527846,1.625027,-3.076315,0.291196],[9.659547,-9.159478,9.995796,-1.568513,7.121666,1.564492,-6.044604,5.189629,7.213898,-6.574299,-6.073089,-1.742534,4.492804,2.212280,-3.825244],[9.519256,-5.274320,0.981371,-9.276641,7.932378,0.264484,-7.637804,-4.522899,-1.284217,6.563594,1.495278,-0.454601,-6.440306,1.766055,7.431854],[-0.958496,0.721797,-6.166996,-9.281463,2.386519,-6.842304,-9.120573,-6.749729,-3.151961,-1.560874,6.535369,8.790103,-4.050212,-7.117489,-6.627637]],[[8.706820,-8.352920,7.373826,2.015886,1.755365,-6.324403,-2.906308,-0.208371,5.579832,5.373709,7.541704,6.247230,1.082926,-7.779083,2.219383],[8.909750,7.486769,-9.782806,0.351745,-3.382673,-4.453937,-1.038128,9.386864,1.740020,-8.898781,2.487605,9.195848,-2.662679,-2.361248,-1.666189],[0.677477,-9.790707,-0.762837,-9.944351,-3.053178,-0.974832,4.936381,5.686642,-0.668057,9.533627,-8.547686,-4.462299,8.355438,-7.511247,7.415780],[8.937825,-7.244546,4.414501,-7.421609,-1.033018,-0.030659,7.005892,-9.628541,-7.260025,1.379887,0.671466,-5.686988,-6.285429,-4.568928,6.654464],[6.350038,1.493319,-0.372307,-2.664369,-4.869109,-1.002023,-5.198216,-4.010227,-7.035588,2.763462,-4.180361,8.413684,-8.469474,-3.219331,-6.547423],[-2.839109,-9.353169,-6.661162,-6.247752,-4.425857,7.471306,9.272300,-9.567007,-8.478916,-3.135084,6.015642,-8.026334,-9.562792,-6.516735,-6.113508],[-7.974267,-5.293597,-5.726561,-1.580152,-7.582073,2.885680,9.561333,2.860139,-9.642682,-7.249322,4.725960,8.466670,5.472808,-3.627611,-6.242824],[-5.322149,7.252015,7.826139,8.251441,-9.798027,-9.801774,-6.261558,-5.916961,-2.549219,0.462422,5.447053,-4.685679,4.429075,-9.609139,5.636914],[-3.200847,-6.692505,-2.455974,8.012409,1.869689,5.523063,3.374072,9.895405,8.271288,-5.282596,-0.294926,8.394369,-4.963919,-2.326764,-7.420439],[7.281088,-8.053787,-1.242535,8.662653,-3.738989,0.147749,0.814063,5.963631,-4.005604,-4.143030,-3.902552,1.018169,4.386746,-4.335232,-2.499295],[4.543228,8.831716,6.763406,-3.258083,7.470063,9.636401,1.821979,7.924383,1.555786,6.383515,-7.409411,1.451682,-0.730438,8.883678,-7.421146],[3.493882,8.576224,4.136797,8.851184,3.383717,8.893974,1.746942,8.247266,1.999314,1.904956,-0.455237,-3.175689,4.086793,-4.452127,4.354429],[-2.969303,-2.455649,5.349090,1.442532,-3.767792,1.845241,8.157561,-4.467766,2.579601,-0.429337,-7.310622,-4.985860,-5.581963,6.572984,-9.609027],[8.004170,-6.338382,-1.827553,-0.478155,-4.183109,5.998972,-1.801881,-9.049500,2.007122,-3.788513,-5.657295,5.496786,-8.623612,-3.016841,-2.767890],[-2.052745,-9.151879,-1.702640,0.371889,-2.431508,0.387767,6.645574,-4.336097,-6.939166,-8.914651,3.241854,5.820278,3.847562,-7.180734,-9.345979]]], dtype = "float32")#candidate|5423|(10, 15, 15)|const|float32
uop_5424 = relay.sqrt(const_5423.astype('float32')) # shape=(10, 15, 15)
uop_5438 = relay.sin(uop_5424.astype('float64')) # shape=(10, 15, 15)
bop_5440 = relay.floor_divide(uop_5438.astype('float64'), relay.reshape(uop_5424.astype('float64'), relay.shape_of(uop_5438))) # shape=(10, 15, 15)
output = bop_5440
output2 = bop_5440
func_5448 = relay.Function([], output)
mod['func_5448'] = func_5448
mod = relay.transform.InferType()(mod)
mutated_mod['func_5448'] = func_5448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5448_call = mutated_mod.get_global_var('func_5448')
call_5449 = func_5448_call()
output = call_5449
func_5450 = relay.Function([], output)
mutated_mod['func_5450'] = func_5450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_5507 = func_3254_call()
call_5508 = func_3254_call()
func_3870_call = mod.get_global_var('func_3870')
func_3871_call = mutated_mod.get_global_var('func_3871')
call_5515 = relay.TupleGetItem(func_3870_call(), 0)
call_5516 = relay.TupleGetItem(func_3871_call(), 0)
output = relay.Tuple([call_5507,call_5515,])
output2 = relay.Tuple([call_5508,call_5516,])
func_5518 = relay.Function([], output)
mod['func_5518'] = func_5518
mod = relay.transform.InferType()(mod)
output = func_5518()
func_5519 = relay.Function([], output)
mutated_mod['func_5519'] = func_5519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4662_call = mod.get_global_var('func_4662')
func_4664_call = mutated_mod.get_global_var('func_4664')
call_5584 = relay.TupleGetItem(func_4662_call(), 1)
call_5585 = relay.TupleGetItem(func_4664_call(), 1)
output = relay.Tuple([call_5584,])
output2 = relay.Tuple([call_5585,])
func_5602 = relay.Function([], output)
mod['func_5602'] = func_5602
mod = relay.transform.InferType()(mod)
output = func_5602()
func_5603 = relay.Function([], output)
mutated_mod['func_5603'] = func_5603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_5646 = relay.TupleGetItem(func_3357_call(), 0)
call_5647 = relay.TupleGetItem(func_3359_call(), 0)
output = call_5646
output2 = call_5647
func_5654 = relay.Function([], output)
mod['func_5654'] = func_5654
mod = relay.transform.InferType()(mod)
output = func_5654()
func_5655 = relay.Function([], output)
mutated_mod['func_5655'] = func_5655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3254_call = mod.get_global_var('func_3254')
func_3256_call = mutated_mod.get_global_var('func_3256')
call_5664 = func_3254_call()
call_5665 = func_3254_call()
output = call_5664
output2 = call_5665
func_5690 = relay.Function([], output)
mod['func_5690'] = func_5690
mod = relay.transform.InferType()(mod)
mutated_mod['func_5690'] = func_5690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5690_call = mutated_mod.get_global_var('func_5690')
call_5691 = func_5690_call()
output = call_5691
func_5692 = relay.Function([], output)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_5745 = func_2548_call()
call_5746 = func_2548_call()
func_4919_call = mod.get_global_var('func_4919')
func_4922_call = mutated_mod.get_global_var('func_4922')
const_5790 = relay.const([9,3,5,8,-5,6,-1,1,7,4,-10,-5,-5,4,-4,-3,-10,6,-10,3,-5,5,-9,9,-10,1,1,2,4,3,-10,-1,-5,-8,-1,2,1,3,4,5,4,4,9,-9,-4,10,-9,6,8,-8,-6,-7,8,6,-4,5,-6,-3,-7,-9,5,4,-2,7,-6,-3,5,-1,1,-4,10,-5,10,-3,-8,-7,6,6,-4,10,-10,-6,2,-10,5,-10,-5,3,-2,-2,1,-3,1,-4,6,8,-6,3,-2,-5,-8,3,-9,-1,-5,1,-4,-2,8,3,10,10,-6,8,-5,-6,-7,10,-5,8,6,5,-6,7,3,-7,-3,-2,9,6,10,-9,-1,6,-2,8,-4,9,10,-5,8,-7,-9,10,9,-2,-10,-8,1,-8,8,10,1,-3,5,-7,8,-4,2,-4,9,-2,8,1,3,2,-7,5,-2,-2,-4,2,2,-10,-9,7], dtype = "int64")#candidate|5790|(176,)|const|int64
call_5789 = relay.TupleGetItem(func_4919_call(relay.reshape(const_5790.astype('int64'), [176, 1])), 0)
call_5791 = relay.TupleGetItem(func_4922_call(relay.reshape(const_5790.astype('int64'), [176, 1])), 0)
func_2548_call = mod.get_global_var('func_2548')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_5794 = func_2548_call()
call_5795 = func_2548_call()
uop_5797 = relay.asinh(const_5790.astype('float32')) # shape=(176,)
bop_5805 = relay.bitwise_xor(uop_5797.astype('int32'), relay.reshape(const_5790.astype('int32'), relay.shape_of(uop_5797))) # shape=(176,)
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
const_5817 = relay.const([[False,True,True,True,True,False,False,False,False,True,False,True,False,True],[False,True,False,True,True,True,True,True,True,True,False,True,False,False],[True,True,True,False,True,False,True,False,False,True,False,False,False,False],[True,False,True,True,True,True,False,True,True,True,False,False,False,False],[True,False,False,True,False,True,True,True,True,False,True,False,True,False],[False,True,False,False,False,False,True,True,True,False,False,False,True,False],[True,False,True,False,False,True,True,False,True,False,True,False,False,True],[False,True,True,True,True,True,True,True,True,False,False,True,False,True],[True,False,True,False,False,False,True,False,False,False,True,True,True,False],[True,True,True,False,True,False,True,False,False,False,True,True,False,True],[False,True,False,False,True,False,False,True,False,True,True,False,False,False],[True,True,True,True,False,False,True,True,True,False,True,True,False,False],[False,False,False,True,True,False,True,False,False,True,True,True,True,True],[True,True,True,True,False,False,False,False,True,True,False,False,True,True],[True,True,False,True,True,False,False,True,False,True,True,True,True,True],[False,False,False,True,True,True,False,True,False,False,True,True,True,True]], dtype = "bool")#candidate|5817|(16, 14)|const|bool
call_5816 = relay.TupleGetItem(func_2606_call(relay.reshape(const_5817.astype('bool'), [224,])), 1)
call_5818 = relay.TupleGetItem(func_2609_call(relay.reshape(const_5817.astype('bool'), [224,])), 1)
const_5824 = relay.const([8.512113,-4.163983,9.970099,-2.834270,7.933487,2.439268,8.843266,-8.590004,4.144637,-9.195034,5.113275,3.127072,-8.107111,9.064556,2.817038,3.432244,4.477780,-9.469787,-9.014457,7.912398,-0.552671,1.338351,0.317990,4.923819,-8.063544,1.778739,9.060738,-3.237383,7.926892,-1.313110,9.732276,-6.881920,5.108478,2.920221,6.008825,5.803456,8.378021,-1.404940,-1.927847,-9.970506,2.095912,-7.372711,-4.328427,-5.758868,7.425883,-9.625588,-1.329719,4.156579,-2.168205,-0.556136,2.000105,9.516056,-1.698380,8.554025,5.895837,1.731854,1.806635,-6.242141,1.770619,-8.339146,9.296204,1.622350,5.957016,3.816723,0.549938,6.389834,0.283382,9.236889,-0.625395,-3.923799,-3.690753,-4.641837,3.572633,4.956490,3.071680,6.209083,1.488262,4.194770,6.850841,-5.349708,-7.647281,4.765732,-9.543940,5.145200,9.362663,1.007644,-2.859131,-7.969199,-9.717117,-6.171731,9.593739,-7.945134,-0.291548,0.544970,-1.171729,-7.112047,9.043621,-5.796409,-4.757338,7.306676,6.043484,-6.998569,-8.790136,7.102876,-3.600862,5.795167,-1.701679,-2.925064,8.102208,-0.100493,6.204090,-9.478055,5.635610,2.924092,-2.743072,9.910857,4.174742,5.321403,-6.676563,-8.727738,-2.902953,-3.528094,1.349321,8.282376,-1.207117,-6.432481,-1.819186,4.373446,6.103670,-3.240311,2.502640,2.881236,3.875791,-1.917473,1.845893,-5.741760,-1.826958,-6.087011,-6.245205,-8.254867,-6.973491,-6.093405,9.399607,-2.454952,-0.068109,5.110971,-7.205800,-9.177717,2.204897,-8.146701,6.732909,2.619291,0.741406,3.055148,5.883131,8.897075,-7.527067,0.322882,4.150431,-7.236322,-2.305980,6.817174,-1.837612,-0.099113,-1.624633,6.028029,5.825116,-3.069770,-6.132573,-8.991938,0.386899,8.899903,-6.087126,-5.990019,-5.562449,7.723525], dtype = "float32")#candidate|5824|(176,)|const|float32
bop_5825 = relay.logical_or(uop_5797.astype('bool'), relay.reshape(const_5824.astype('bool'), relay.shape_of(uop_5797))) # shape=(176,)
output = relay.Tuple([call_5745,call_5789,call_5794,bop_5805,call_5816,const_5817,bop_5825,])
output2 = relay.Tuple([call_5746,call_5791,call_5795,bop_5805,call_5818,const_5817,bop_5825,])
func_5831 = relay.Function([], output)
mod['func_5831'] = func_5831
mod = relay.transform.InferType()(mod)
output = func_5831()
func_5832 = relay.Function([], output)
mutated_mod['func_5832'] = func_5832
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4290_call = mod.get_global_var('func_4290')
func_4291_call = mutated_mod.get_global_var('func_4291')
call_5866 = relay.TupleGetItem(func_4290_call(), 0)
call_5867 = relay.TupleGetItem(func_4291_call(), 0)
output = call_5866
output2 = call_5867
func_5871 = relay.Function([], output)
mod['func_5871'] = func_5871
mod = relay.transform.InferType()(mod)
output = func_5871()
func_5872 = relay.Function([], output)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5883 = relay.var("var_5883", dtype = "float32", shape = (10, 12, 5))#candidate|5883|(10, 12, 5)|var|float32
uop_5884 = relay.rsqrt(var_5883.astype('float32')) # shape=(10, 12, 5)
func_4469_call = mod.get_global_var('func_4469')
func_4473_call = mutated_mod.get_global_var('func_4473')
const_5891 = relay.const([-1,5,9,-7,-6,2,-2,5,-5,7,-5,-2,-8,10,-3,7,1,5,5,-10,-1,-8,-3,-10,-7,-8,9,1,-7,9,2,-3,-8,-5,-2,-4,9,-7,-7,3,-4,-6,-10,-2,10,6,7,-6,-2,10,10,-9,7,3,5,-10,6,-1,5,-3,5,8,3,-9,-7,-8,-4,-7,-5,7,-8,-6,-4,-1,10,-3,-7,9,7,4,-4,2,-1,8,-9,5,-3,2,-10,6,8,7,10,-5,1,-2,2,-4,3,9,9,1,-5,-9,7,4,-5,-1,6,-4,7,-5,-10,-4,-3,6,6,-5,-10,5,2,-3,2,-5,-1,-7,-7,-9,-1,9,-5,7,-2,-2,9,-10,-7,-7,8,-7,-1,7,-9,4,-1,-8,-9,8,7,6,5,6,-10,1,7,4,6,-7,-2,-7,-5,7,-9,-7,-5,2,-10,2,-3,5,2,-9,5,-3,8,-7], dtype = "int64")#candidate|5891|(176,)|const|int64
var_5892 = relay.var("var_5892", dtype = "bool", shape = ())#candidate|5892|()|var|bool
call_5890 = relay.TupleGetItem(func_4469_call(relay.reshape(const_5891.astype('int64'), [176,]), relay.reshape(var_5892.astype('bool'), []), ), 1)
call_5893 = relay.TupleGetItem(func_4473_call(relay.reshape(const_5891.astype('int64'), [176,]), relay.reshape(var_5892.astype('bool'), []), ), 1)
output = relay.Tuple([uop_5884,call_5890,const_5891,var_5892,])
output2 = relay.Tuple([uop_5884,call_5893,const_5891,var_5892,])
func_5906 = relay.Function([var_5883,var_5892,], output)
mod['func_5906'] = func_5906
mod = relay.transform.InferType()(mod)
var_5907 = relay.var("var_5907", dtype = "float32", shape = (10, 12, 5))#candidate|5907|(10, 12, 5)|var|float32
var_5908 = relay.var("var_5908", dtype = "bool", shape = ())#candidate|5908|()|var|bool
output = func_5906(var_5907,var_5908,)
func_5909 = relay.Function([var_5907,var_5908,], output)
mutated_mod['func_5909'] = func_5909
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5914 = relay.var("var_5914", dtype = "int64", shape = (3, 2, 2))#candidate|5914|(3, 2, 2)|var|int64
const_5915 = relay.const([[[-6,-1],[9,5]],[[-1,4],[-4,6]],[[10,9],[8,-3]]], dtype = "int64")#candidate|5915|(3, 2, 2)|const|int64
bop_5916 = relay.bitwise_or(var_5914.astype('int64'), relay.reshape(const_5915.astype('int64'), relay.shape_of(var_5914))) # shape=(3, 2, 2)
output = relay.Tuple([bop_5916,])
output2 = relay.Tuple([bop_5916,])
func_5919 = relay.Function([var_5914,], output)
mod['func_5919'] = func_5919
mod = relay.transform.InferType()(mod)
var_5920 = relay.var("var_5920", dtype = "int64", shape = (3, 2, 2))#candidate|5920|(3, 2, 2)|var|int64
output = func_5919(var_5920)
func_5921 = relay.Function([var_5920], output)
mutated_mod['func_5921'] = func_5921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5518_call = mod.get_global_var('func_5518')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_5932 = relay.TupleGetItem(func_5518_call(), 1)
call_5933 = relay.TupleGetItem(func_5519_call(), 1)
const_5936 = relay.const([[[6,-4,-4,2,-1,-8,9,-7,7,8],[2,9,5,-6,4,1,-7,5,-5,3],[-10,-10,8,-2,5,6,-7,9,2,-8],[-5,8,-5,5,10,7,10,-8,7,3],[9,9,-4,-1,6,-3,-10,2,4,5],[-7,3,-2,-6,-3,10,8,-10,-8,9],[10,-4,4,6,-5,-3,5,-10,7,5],[4,-1,-7,-5,4,10,7,-4,1,-1],[3,9,-10,-5,6,8,-7,4,-2,10],[4,-9,7,-4,-3,7,8,4,-6,6],[10,3,5,-3,8,-4,-5,-5,-6,1],[3,7,-3,-1,9,2,-3,7,2,-6],[5,-5,3,-3,9,10,3,3,-8,6],[4,-7,2,-5,-5,-7,1,1,9,2],[-9,10,-2,9,-1,-7,4,2,-9,-2]],[[-9,5,10,3,9,9,-2,9,4,-3],[-4,10,6,1,8,-2,-2,-7,10,-4],[-9,-6,-2,2,4,10,6,3,1,-9],[-9,6,-5,-6,4,5,-10,2,-5,-9],[10,6,-1,-9,-5,1,-9,-7,-1,3],[-10,-9,-9,-6,5,-5,5,4,10,-8],[4,-9,8,1,-9,-5,3,1,4,8],[3,8,-7,-5,8,2,-7,-6,6,-6],[-10,-6,-6,-4,-6,-2,8,-8,4,1],[-1,5,5,2,-7,-8,9,1,-1,-6],[1,-6,9,3,-1,7,-7,-7,4,-6],[8,-1,8,-10,8,5,-3,-8,7,8],[-6,-10,-9,-9,-6,5,1,-1,-9,9],[7,7,-7,4,8,1,-9,1,8,1],[7,8,-4,-6,-9,10,-10,-4,4,8]],[[10,-10,-10,6,-10,-2,7,-4,10,-3],[6,-3,-2,3,6,10,3,-6,-10,1],[-3,9,-4,10,5,-2,-9,-9,-5,7],[-4,-9,6,9,10,-5,4,3,-9,3],[8,-6,2,8,-10,9,9,-10,-5,-10],[-9,-8,-9,1,7,3,-1,4,6,1],[4,-9,-9,-9,-8,-9,-4,-9,1,-2],[-6,-4,5,10,-10,7,-2,9,7,-8],[-5,-3,-6,-3,-4,7,-1,9,-1,-7],[-4,4,-3,9,-9,5,4,6,-10,-8],[5,8,-8,-1,-8,7,3,7,-4,-5],[3,-8,10,8,-2,-6,-2,4,3,-7],[6,-4,7,6,-10,-6,-3,-10,8,-2],[-4,9,5,6,-1,-1,-10,7,-6,1],[-3,9,-1,8,-8,-2,-1,10,8,-3]],[[2,-7,9,-2,-4,1,1,-3,2,4],[2,-4,-8,-10,-2,-7,-7,7,-6,-10],[-3,10,-4,6,4,6,7,10,6,-4],[-5,3,3,9,-10,-10,2,6,-2,-2],[2,6,-9,5,-8,-4,-9,-4,-10,2],[2,4,3,-9,-4,-5,2,6,-8,7],[-1,9,-1,-10,6,2,5,1,7,5],[5,-8,9,-6,-4,-5,7,4,-8,8],[8,1,5,-1,4,-4,4,-3,3,-4],[-6,3,-6,1,1,8,-9,-3,9,-9],[-10,1,2,-10,5,5,6,5,4,6],[5,-5,10,-1,3,-3,2,10,-10,-10],[-6,-6,-2,2,9,1,9,8,-7,-10],[10,5,9,-7,-6,4,3,-2,-3,1],[2,5,2,-3,-6,-1,-8,10,2,4]],[[4,7,10,-4,-4,6,-9,-9,6,-1],[-7,-1,-9,-2,-6,-6,-6,10,2,10],[9,6,-9,-10,-9,9,1,10,-1,-10],[1,-9,-9,-5,-3,1,-1,9,-1,6],[9,-7,5,2,-2,-3,6,-9,3,10],[-9,7,7,1,-6,-8,-4,5,4,5],[10,8,2,-3,-1,10,-3,1,2,7],[-1,-2,2,4,7,-2,1,-4,-7,-9],[-1,2,5,-3,-7,6,-7,-5,-8,-7],[-10,3,-8,6,4,-8,6,9,3,-10],[-2,2,-7,-10,-6,1,5,1,8,1],[-5,-7,6,10,-7,4,7,1,-3,-8],[-10,-8,2,10,-7,4,-7,10,-4,-5],[-3,10,-4,-5,-4,7,3,-10,-5,6],[1,-3,-8,4,-5,3,-7,-9,4,10]],[[-6,-3,-6,-5,5,-2,-1,5,-10,-3],[7,7,1,-6,10,4,-7,-7,3,-2],[3,-5,3,-6,-8,-1,7,8,2,2],[2,-9,4,-9,-8,-5,9,5,-9,-6],[-2,-3,-3,-6,7,-8,-5,-7,1,-5],[-1,9,-2,1,-9,-10,3,1,-6,-10],[4,-1,5,7,-8,-6,-5,-8,-1,-10],[-7,3,-4,4,9,5,4,-2,6,4],[4,-4,4,7,2,-8,-8,8,3,-3],[10,8,4,10,1,-7,-3,-5,-2,2],[10,2,1,1,6,6,4,9,-6,-1],[4,-4,-6,3,3,-1,-7,10,-4,2],[9,-7,4,2,-4,6,8,6,1,3],[7,7,-6,2,10,-4,-1,-1,-7,-4],[-5,-1,-2,-8,-6,-7,4,7,-10,1]],[[-2,-10,-8,-8,3,5,2,-2,3,-7],[2,4,-7,5,-9,-9,5,-3,-10,5],[-3,-3,8,-9,-7,4,2,5,-6,-9],[9,7,9,7,3,7,4,-8,5,-7],[-6,2,-6,9,7,8,-8,-2,-7,10],[-10,-5,-5,9,2,4,5,-6,-3,5],[-3,-10,8,-1,10,4,-6,-4,-3,3],[-9,3,-5,4,-4,-1,-2,9,2,4],[1,2,8,-8,-1,4,10,-3,-6,4],[-6,8,-4,5,-9,8,10,7,9,8],[-8,9,10,2,7,-8,1,-8,-5,2],[5,-3,-3,-10,6,2,10,2,1,10],[2,-10,3,9,-2,-3,-3,1,-9,-8],[-1,-10,10,-5,-6,9,-2,-10,-9,-5],[9,10,-4,-8,4,-7,6,7,9,-7]],[[4,4,8,-3,4,10,5,5,-4,4],[9,-2,1,3,1,7,-7,-1,9,-4],[1,-4,5,-8,2,-9,-3,8,-2,6],[-10,-9,5,3,-4,-7,-10,-1,-10,-6],[-1,5,-5,10,3,-1,8,-1,-7,-9],[9,6,-8,-6,6,-1,6,10,9,1],[5,-5,9,10,-8,9,-6,9,-1,-2],[-7,-3,1,6,-7,-1,6,-7,-2,3],[9,-1,6,-9,-5,4,-6,-6,-4,8],[-9,4,-7,-2,-10,-2,6,4,-3,9],[-7,-1,1,1,-2,-7,-10,-8,-3,-7],[-7,2,10,5,2,-1,-8,2,-2,5],[2,6,-2,-8,-5,8,3,7,-7,-7],[8,-5,-2,4,-2,9,10,7,-8,-6],[9,8,3,7,8,8,4,10,10,2]],[[-4,7,4,7,8,-6,-7,-1,10,10],[-2,3,10,3,-9,4,-6,1,-3,-4],[2,-8,-6,7,6,3,-4,3,-10,-7],[-1,-6,2,-7,-4,7,-10,-2,5,10],[7,-9,-10,6,-1,2,-4,9,4,2],[-4,5,-4,-10,-8,-10,6,5,-4,-9],[-4,6,-9,-3,-8,2,-3,-8,6,8],[8,9,9,-1,7,-7,1,10,-6,-3],[-7,8,4,9,-4,3,4,8,-8,-6],[9,7,-5,-9,9,7,1,-7,3,-6],[-2,-1,-3,-10,9,7,9,7,-10,-9],[10,-6,-3,-5,-9,-3,2,-9,-2,7],[7,9,-5,-2,-5,-3,-6,8,-1,6],[-6,5,5,-4,-5,8,2,-7,-4,-3],[1,7,-4,-9,-10,7,5,3,-5,7]],[[-5,-1,-10,5,1,-6,3,-10,-8,3],[5,1,3,-10,-2,-10,1,5,2,-7],[7,5,-7,-6,3,1,1,-8,10,5],[-4,-9,6,8,4,-3,1,9,-3,2],[-8,6,9,-6,-3,-10,-5,3,3,-1],[7,7,2,-5,-5,-2,10,-2,1,7],[-8,10,6,-5,5,7,10,9,2,-6],[10,9,6,-10,-7,3,-4,9,8,-2],[-9,-4,-2,10,6,-2,4,6,-1,10],[-3,-5,8,10,9,-9,-8,-9,10,6],[-5,-4,-10,-10,-9,10,3,-1,-3,-7],[3,-1,2,3,9,-8,10,5,2,-2],[8,-3,9,-2,-6,-5,8,2,-7,-4],[6,1,5,9,-3,-8,-3,2,8,-4],[-6,3,-6,5,-10,2,-10,6,-10,3]],[[-4,-4,6,10,-1,-8,5,2,6,7],[-4,-4,3,-10,-2,6,-5,-4,-8,3],[-1,8,-2,-9,6,4,8,-4,7,4],[6,9,2,-2,-8,-2,6,6,2,6],[-5,8,2,4,10,1,10,7,3,-4],[4,1,8,8,5,8,8,-3,1,-10],[-5,-7,10,9,-5,4,1,-1,-5,10],[5,-1,-5,-5,-4,-9,5,4,-2,-9],[-5,8,2,-4,-8,-6,2,10,-2,6],[-8,-4,3,-10,-2,3,6,3,3,-3],[-4,6,8,5,-10,5,8,-3,-9,5],[4,7,1,5,9,-5,-1,-9,8,9],[7,-6,-3,-3,1,-2,-5,-2,10,10],[-7,2,-7,-7,5,5,-7,-6,-9,3],[-8,-3,-5,-9,2,4,-6,9,7,2]]], dtype = "int32")#candidate|5936|(11, 15, 10)|const|int32
bop_5937 = relay.power(call_5932.astype('float32'), relay.reshape(const_5936.astype('float32'), relay.shape_of(call_5932))) # shape=(11, 15, 10)
bop_5940 = relay.power(call_5933.astype('float32'), relay.reshape(const_5936.astype('float32'), relay.shape_of(call_5933))) # shape=(11, 15, 10)
output = relay.Tuple([bop_5937,])
output2 = relay.Tuple([bop_5940,])
func_5956 = relay.Function([], output)
mod['func_5956'] = func_5956
mod = relay.transform.InferType()(mod)
mutated_mod['func_5956'] = func_5956
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5956_call = mutated_mod.get_global_var('func_5956')
call_5957 = func_5956_call()
output = call_5957
func_5958 = relay.Function([], output)
mutated_mod['func_5958'] = func_5958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4427_call = mod.get_global_var('func_4427')
func_4429_call = mutated_mod.get_global_var('func_4429')
call_6042 = relay.TupleGetItem(func_4427_call(), 0)
call_6043 = relay.TupleGetItem(func_4429_call(), 0)
output = relay.Tuple([call_6042,])
output2 = relay.Tuple([call_6043,])
func_6048 = relay.Function([], output)
mod['func_6048'] = func_6048
mod = relay.transform.InferType()(mod)
mutated_mod['func_6048'] = func_6048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6048_call = mutated_mod.get_global_var('func_6048')
call_6049 = func_6048_call()
output = call_6049
func_6050 = relay.Function([], output)
mutated_mod['func_6050'] = func_6050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5518_call = mod.get_global_var('func_5518')
func_5519_call = mutated_mod.get_global_var('func_5519')
call_6106 = relay.TupleGetItem(func_5518_call(), 1)
call_6107 = relay.TupleGetItem(func_5519_call(), 1)
output = call_6106
output2 = call_6107
func_6111 = relay.Function([], output)
mod['func_6111'] = func_6111
mod = relay.transform.InferType()(mod)
mutated_mod['func_6111'] = func_6111
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mutated_mod.get_global_var('func_6111')
call_6112 = func_6111_call()
output = call_6112
func_6113 = relay.Function([], output)
mutated_mod['func_6113'] = func_6113
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5831_call = mod.get_global_var('func_5831')
func_5832_call = mutated_mod.get_global_var('func_5832')
call_6117 = relay.TupleGetItem(func_5831_call(), 6)
call_6118 = relay.TupleGetItem(func_5832_call(), 6)
output = relay.Tuple([call_6117,])
output2 = relay.Tuple([call_6118,])
func_6151 = relay.Function([], output)
mod['func_6151'] = func_6151
mod = relay.transform.InferType()(mod)
mutated_mod['func_6151'] = func_6151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6151_call = mutated_mod.get_global_var('func_6151')
call_6152 = func_6151_call()
output = call_6152
func_6153 = relay.Function([], output)
mutated_mod['func_6153'] = func_6153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5602_call = mod.get_global_var('func_5602')
func_5603_call = mutated_mod.get_global_var('func_5603')
call_6222 = relay.TupleGetItem(func_5602_call(), 0)
call_6223 = relay.TupleGetItem(func_5603_call(), 0)
func_3088_call = mod.get_global_var('func_3088')
func_3090_call = mutated_mod.get_global_var('func_3090')
call_6224 = relay.TupleGetItem(func_3088_call(), 0)
call_6225 = relay.TupleGetItem(func_3090_call(), 0)
output = relay.Tuple([call_6222,call_6224,])
output2 = relay.Tuple([call_6223,call_6225,])
func_6241 = relay.Function([], output)
mod['func_6241'] = func_6241
mod = relay.transform.InferType()(mod)
output = func_6241()
func_6242 = relay.Function([], output)
mutated_mod['func_6242'] = func_6242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5690_call = mod.get_global_var('func_5690')
func_5692_call = mutated_mod.get_global_var('func_5692')
call_6245 = func_5690_call()
call_6246 = func_5690_call()
func_808_call = mod.get_global_var('func_808')
func_810_call = mutated_mod.get_global_var('func_810')
const_6250 = relay.const([8.551538,8.460238,-8.714139,4.584760,3.195565,9.967671,4.698026,-7.008700,-0.745526,0.800560,-8.467002,3.028640,3.584234,6.178530,3.892554,0.628908,-5.510086,-3.989875,3.951252,-8.611682,-5.185812,0.588611,-4.205915,-3.821208,8.111129,-7.416688,-3.171974,6.373719,-6.362453,7.722645,9.712888,8.231305,8.219472,-3.184492,2.334817,-1.427732,9.246471,3.152640,7.798784,-1.396657,0.773077,-9.791073,-0.621606,4.025160,-0.935464,-6.925693,-1.408746,5.344244,6.224783,-5.590980,-9.883524,-4.488136,7.341470,-1.970376,0.572667,7.391659,9.284479,3.186951,-0.241602,-3.714901,0.133322,-0.365367,-5.905480,1.477423,-3.467996,-1.496480,-0.359863,-3.615537,-6.699382,-7.912845,2.134887,-0.504642,5.625414,-4.802361,8.977240,3.474081,4.533716,-0.971847,4.975555,0.915622,7.467537,9.849028,-3.146550,7.041535,-9.282921,-4.734707,-3.045594,-1.354888,-7.049844,0.984921,7.266296,-2.721036,-9.294047,9.420292,1.513966,5.629584,-7.100675,-2.982983,-0.309491,-1.038854,-8.178114,-6.297540,6.349926,-4.283938,4.286316,6.188014,-6.993938,5.974010,-2.043636,6.352992,9.543633,0.883106,2.286520,-6.100273,3.832307,-6.856479,-0.212713,-9.167562,7.757360,0.404740,-8.277421,1.884860,7.962577,-1.439335,9.322236,0.183774,-0.007076,0.821419,-4.806005,-1.332441,-7.713663,9.150867,1.997881,-0.702712,5.051787,-3.525767,7.334916,-9.585065,-8.792745,-6.532895,-5.039038,7.259432,-9.890409,-2.759180,-4.671434,4.979989,0.594440,2.873683,-6.705340,8.915733,-5.076645,-1.413642,-7.187284,-0.567924,1.147910,-8.860377,-5.314097,-7.614327,-3.282052,5.717405,3.036532,3.755738,-4.094681,-0.966396,7.590440,-3.506405,3.002380,0.996581,0.120525,-9.251173,-8.540047,5.077933,-8.091830,-2.396924,-1.596757,-4.269746,-7.702483,5.940925,-4.410143,2.230933,8.228750,3.400590,-7.329035,-9.680039,-2.720919,-8.033945,-0.496971,5.267517,-9.387251,4.982196,-8.656785,-1.092059,-9.267190,0.718311,5.831102,-0.041018,-3.158869,7.266856,-1.658921,-2.844141,1.311755,5.700197,-0.581286,-1.925644,-4.632642,-1.038006,2.178601,7.856243,-5.472490,9.257364,-6.391528,-0.997780,5.756994,9.021290,-8.597179,8.577491,8.343741,2.162539,4.711851,-7.895013,9.713673,-6.103851,4.934457,-0.506312,-9.142355,-4.251045,9.451504,2.792037,-4.166853,-7.177892,2.615159,-7.184349,0.692064,-2.276716,-1.367801,-9.728973,1.700838,-0.421145,7.773676,-6.772851,-4.748538,-7.218200,-7.127346,5.010989,-6.283768,9.663337,7.127715,-6.429412,7.750150,4.654002,0.949875,5.634756,7.169521,-7.621733,0.447800,-5.285307,7.645716,7.203155,0.318704,-6.146260,6.192948,6.793211,-7.447570,2.732262,-0.006629,6.255649,-4.934063,1.416691,-2.181246,-5.280035,-5.634355,-9.788175,1.396686,2.113713,-2.169481,4.599788,6.332321,-7.290607,-1.891013,8.360765,-0.839267,5.077441,-9.525491,-9.367457,-6.382671,-5.066941,-6.312540,-4.208364,-7.174174,-2.415898,1.626578,-5.212145,-8.607382,-2.156139,-4.995948,8.553467,-1.483484,-4.728584,8.799721,-7.085230,5.395308,0.818803,1.639900,-3.893864,2.920262,-5.115687,-0.223707,-8.534332,9.762777,9.900674,-3.292063,-7.051182,3.537048,0.196842,-1.877373,-1.509056,-6.789272,4.031090,8.261870,-9.372777,-2.310450,-7.411517,8.424328,1.977749,0.755417,8.358951,3.205364,2.552538,-8.484729,-5.504306,-9.323838,-2.274101,-1.903573,-0.063127,1.232500,-5.185608,4.309687,-2.640758,5.129350,1.227807,5.894225,2.637111,-7.845068,9.415161,2.243100,2.367470,2.452195,4.213892,9.596246,2.793971,-4.823179,-5.949665,-4.635032,-6.787506,-9.131136,2.542328,-1.163985,6.109757,9.825410,9.236670,-9.120066,-0.836917,8.139196,0.275851,4.450515,1.595873,-6.348263,7.447101,0.114943,9.794282,9.751587,9.357418,0.959665,-6.386056,9.329394,4.574811,0.956873,3.888706,6.959744,2.079823,-4.497505,-9.433266,9.937385,5.814865,-8.189366,-7.236928,8.148101,4.343136,-3.552029,0.133261,-6.079340,0.954756,-3.040733,-9.365238,5.375778,-9.688344,-6.395224,1.853214,-6.705730,-2.854132,1.018088,-5.864282,-6.489192,7.906293,-8.885359,0.473886,5.335987,-6.620933,8.773891,-4.369790,-8.927752,-6.551034,3.473074,-9.477895,8.929614,-7.280444,-9.520806,3.145218,2.133302,1.741252,-3.340153,-6.550145,-2.205304,6.025189,0.174772,-7.876943,0.302427,-6.684048,-4.154391,-5.401625,-5.226183,-7.063546,-7.594935,4.333844,-6.305166,6.563402,1.967185,2.133743,-0.768827,-1.227316,-6.217497,5.091391,2.565885,-6.443167,1.308824,6.957852,-8.454667,-0.381034,-7.087441,-4.427631,-4.636114,6.582579,1.994910,5.092885,5.917612,1.081928,4.477950,4.739963,-4.069212,-2.781313,3.162657,3.528080,-3.213926,-8.320053,-3.230026,4.256955,-9.388221,-6.854234,2.475133,2.767551,4.052738,-4.448964,9.600439,-9.331165,-8.565828,8.814828,-8.431797,6.224665,-7.023975,4.381753,-7.424782,-0.727338,0.484870,-0.314354,-5.056547,-4.853595,-7.464174,-5.999928,-6.582466,2.827628,-2.519960,-4.212658,-7.249387,7.547952,4.492626,6.145708,1.624131,-6.975151,-9.144178,-8.205095,-6.647824,8.052273,1.364391,5.654543,-5.045103,-1.003421,6.480078,9.532669,-5.091646,1.967988,-8.116293,6.860622,-6.242771,-1.338438,-8.028458,3.342913,5.808402,2.073318,2.080165,2.174453,-4.544389,-8.550135,-1.950653,8.240950,-0.778127,6.517092,2.849237,-2.001810,-7.384115,-3.080868,7.629783,-3.403884,-5.351834,-1.056283,-2.067072,0.009117,4.161809,-2.677904,-4.224655,8.282235,-2.296662,1.407272,8.556177,3.443436,-7.600976,6.830622,-8.272329,5.474634,5.602259,-8.101699,3.469280,-7.199937,1.182169,-0.642996,-6.380704,-0.276967,-0.222947,-2.444003,2.800581,-9.956872,-1.618827,-7.192271,2.662562,7.116764,9.809216,-8.360206,-7.754055,4.122517,7.533365,3.813312,2.190930,6.342466,0.862792,-9.885932,2.191561,-9.352919,-3.725396,-5.753980,-2.393527,-7.866977,4.542159,-6.303650,-4.989174,9.048991,-4.172235,6.034371,-2.836332,9.718725,2.902702,7.658644,-5.809135,-0.540346,-4.555705,-1.697789,-1.983428,-9.568135,6.834050,9.484984,-8.626269,-7.243439,2.259748,5.067827,-8.973653,6.904866,-2.197682,-1.207259,2.617825,2.136283,-3.696051,-7.815924,-9.117509,-7.728724,-2.672286,3.043540,6.549181,4.669231,-0.422129,-4.750796,9.699412,-1.446266,-5.841976,3.774676,4.415453,2.476282,-1.490730,-4.441425,-0.360629,5.364211,3.050063,-8.398444,-3.543913,0.845984,-0.194420,2.750862,-6.019457,8.405713,-0.556017,-8.777958,9.726339,0.607794,3.343940,-6.039045,6.547036,-0.836506,4.609040,1.294316,-3.804509,-0.132981,-4.840740,2.647331,9.310131,-6.976359,9.410423,7.846011,-8.264318,-4.056245,-9.490657,-2.927065,-4.253161,-4.345938,6.157123,2.994525,8.235134,-9.361791,9.453925,-3.337375,-3.209373,4.317684,3.419579,-2.048409,8.463504,7.002931,3.026013,5.722140,9.312004,5.148644,7.512791,-6.897802,-3.519417,8.179386,-7.817344,-9.655822,-3.384957,-2.148748,-8.900369,3.946768,-5.290568,-3.692807,-7.367171,5.944658,5.771005,-9.021870,-6.799565,1.749732,3.379712,-1.883093,-7.121251,-1.205605,-6.507082,-8.194529,7.419640,0.961864,0.408158,-0.080635,4.338474,3.904867,-7.059791,-7.488010,-6.423799,-5.583408,-1.003149,-8.761832,6.915149,5.192899,5.827079,9.695616,5.391763,-6.324938,-6.182595,2.212947,7.783906,-2.300182,-8.209956,-8.924493,7.740663,8.743749,1.509168,-1.760395,-3.448189,9.511362,-7.227814,0.365942,1.238043,-9.727811,-6.416578,7.530203,-8.672904,6.677653,-1.742642,1.698026,-0.166591,0.191988,-5.526722,6.528825,0.122660,3.416261,0.475557,-4.186158,-2.618273,-8.755449,-9.859606,-2.928055,1.841310,6.692126,4.425897,7.814494,6.183395,-3.453528,3.390800,3.326710,-8.943426,-3.752469,3.407291,-7.498339,1.788272,-7.300459,-9.877029,-1.979989,-6.155197,-7.992627,-3.577012,-2.043617,-7.350028,-8.506224,-6.734220,8.904098,-7.870349,-8.450964,-3.715836,1.890644,0.016685,8.590751,1.096708,1.434195,0.706089,3.855697,-6.504687,-4.554651,-8.016358,-8.135397,-8.740925,2.481586,8.375191,-8.842282,-1.517174,3.556385,2.408743,-9.669726,-5.403869,-5.436972,4.913174,1.129101,1.896193,-3.225916,-9.645069,-1.075989,-4.523688,0.306652,5.675502,3.046183,-6.864147,6.304646,5.725134,-1.876217,-2.969607,-7.877477,-9.872792,6.145088,6.371802,-0.831754,-1.608500,-5.297294,-5.862192,-2.036140,5.481719,-6.277728,-9.058390,6.646001,0.868084,8.266349,-8.315323,9.929160,2.555430,4.710910,-6.665371,2.809439,-7.961534,-2.076464,1.784321,6.219379,-0.829814,-6.213795,5.354464,3.398593,9.934043], dtype = "float64")#candidate|6250|(845,)|const|float64
call_6249 = relay.TupleGetItem(func_808_call(relay.reshape(const_6250.astype('float64'), [13, 13, 5])), 0)
call_6251 = relay.TupleGetItem(func_810_call(relay.reshape(const_6250.astype('float64'), [13, 13, 5])), 0)
func_5906_call = mod.get_global_var('func_5906')
func_5909_call = mutated_mod.get_global_var('func_5909')
var_6258 = relay.var("var_6258", dtype = "float32", shape = (600,))#candidate|6258|(600,)|var|float32
var_6259 = relay.var("var_6259", dtype = "bool", shape = ())#candidate|6259|()|var|bool
call_6257 = relay.TupleGetItem(func_5906_call(relay.reshape(var_6258.astype('float32'), [10, 12, 5]), relay.reshape(var_6259.astype('bool'), []), ), 3)
call_6260 = relay.TupleGetItem(func_5909_call(relay.reshape(var_6258.astype('float32'), [10, 12, 5]), relay.reshape(var_6259.astype('bool'), []), ), 3)
output = relay.Tuple([call_6245,call_6249,const_6250,call_6257,var_6258,var_6259,])
output2 = relay.Tuple([call_6246,call_6251,const_6250,call_6260,var_6258,var_6259,])
func_6271 = relay.Function([var_6258,var_6259,], output)
mod['func_6271'] = func_6271
mod = relay.transform.InferType()(mod)
var_6272 = relay.var("var_6272", dtype = "float32", shape = (600,))#candidate|6272|(600,)|var|float32
var_6273 = relay.var("var_6273", dtype = "bool", shape = ())#candidate|6273|()|var|bool
output = func_6271(var_6272,var_6273,)
func_6274 = relay.Function([var_6272,var_6273,], output)
mutated_mod['func_6274'] = func_6274
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4758_call = mod.get_global_var('func_4758')
func_4760_call = mutated_mod.get_global_var('func_4760')
call_6285 = relay.TupleGetItem(func_4758_call(), 0)
call_6286 = relay.TupleGetItem(func_4760_call(), 0)
output = call_6285
output2 = call_6286
func_6310 = relay.Function([], output)
mod['func_6310'] = func_6310
mod = relay.transform.InferType()(mod)
output = func_6310()
func_6311 = relay.Function([], output)
mutated_mod['func_6311'] = func_6311
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3035_call = mod.get_global_var('func_3035')
func_3037_call = mutated_mod.get_global_var('func_3037')
call_6335 = relay.TupleGetItem(func_3035_call(), 2)
call_6336 = relay.TupleGetItem(func_3037_call(), 2)
output = call_6335
output2 = call_6336
func_6343 = relay.Function([], output)
mod['func_6343'] = func_6343
mod = relay.transform.InferType()(mod)
output = func_6343()
func_6344 = relay.Function([], output)
mutated_mod['func_6344'] = func_6344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5063_call = mutated_mod.get_global_var('func_5063')
call_6391 = relay.TupleGetItem(func_5062_call(), 0)
call_6392 = relay.TupleGetItem(func_5063_call(), 0)
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_6398 = func_2779_call()
call_6399 = func_2779_call()
output = relay.Tuple([call_6391,call_6398,])
output2 = relay.Tuple([call_6392,call_6399,])
func_6401 = relay.Function([], output)
mod['func_6401'] = func_6401
mod = relay.transform.InferType()(mod)
output = func_6401()
func_6402 = relay.Function([], output)
mutated_mod['func_6402'] = func_6402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5278_call = mod.get_global_var('func_5278')
func_5279_call = mutated_mod.get_global_var('func_5279')
call_6416 = relay.TupleGetItem(func_5278_call(), 0)
call_6417 = relay.TupleGetItem(func_5279_call(), 0)
func_2722_call = mod.get_global_var('func_2722')
func_2724_call = mutated_mod.get_global_var('func_2724')
const_6425 = relay.const([[-7.006433,-0.630065,9.334060,4.465354,-3.260559,-2.148231,4.501751,-1.275970,9.745050,-1.543079,-5.693838,8.169471,-9.903316,-2.201026,0.498719,2.819015,5.227200,9.417209,0.278613,-1.521640,7.052404,-0.716122,-7.881056,-6.169018,8.402698,7.147307,7.355204,-3.268662,0.349089,-4.165961,-7.100424,-2.715536,9.862278,1.308223,-8.464275,-0.642091,-4.701541,-8.660167,-8.198206,-5.549819,-1.003084,7.891583,-7.510219,0.215575,-6.700096,-6.230090,5.792590,-3.490234,6.185513,6.649042,-4.077921,9.788133,-9.508843,2.201536,0.591646,9.878435,-7.204246,4.516110,-0.985292,-7.756790,4.237286,-2.230037,-5.057338,4.424554,-8.449828]], dtype = "float32")#candidate|6425|(1, 65)|const|float32
call_6424 = relay.TupleGetItem(func_2722_call(relay.reshape(const_6425.astype('float32'), [65,])), 3)
call_6426 = relay.TupleGetItem(func_2724_call(relay.reshape(const_6425.astype('float32'), [65,])), 3)
output = relay.Tuple([call_6416,call_6424,const_6425,])
output2 = relay.Tuple([call_6417,call_6426,const_6425,])
func_6446 = relay.Function([], output)
mod['func_6446'] = func_6446
mod = relay.transform.InferType()(mod)
output = func_6446()
func_6447 = relay.Function([], output)
mutated_mod['func_6447'] = func_6447
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6486 = relay.var("var_6486", dtype = "float32", shape = (7, 9, 14))#candidate|6486|(7, 9, 14)|var|float32
uop_6487 = relay.erf(var_6486.astype('float32')) # shape=(7, 9, 14)
uop_6491 = relay.atanh(uop_6487.astype('float32')) # shape=(7, 9, 14)
uop_6494 = relay.log2(uop_6491.astype('float32')) # shape=(7, 9, 14)
output = uop_6494
output2 = uop_6494
func_6499 = relay.Function([var_6486,], output)
mod['func_6499'] = func_6499
mod = relay.transform.InferType()(mod)
mutated_mod['func_6499'] = func_6499
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6500 = relay.var("var_6500", dtype = "float32", shape = (7, 9, 14))#candidate|6500|(7, 9, 14)|var|float32
func_6499_call = mutated_mod.get_global_var('func_6499')
call_6501 = func_6499_call(var_6500)
output = call_6501
func_6502 = relay.Function([var_6500], output)
mutated_mod['func_6502'] = func_6502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5602_call = mod.get_global_var('func_5602')
func_5603_call = mutated_mod.get_global_var('func_5603')
call_6529 = relay.TupleGetItem(func_5602_call(), 0)
call_6530 = relay.TupleGetItem(func_5603_call(), 0)
output = call_6529
output2 = call_6530
func_6541 = relay.Function([], output)
mod['func_6541'] = func_6541
mod = relay.transform.InferType()(mod)
output = func_6541()
func_6542 = relay.Function([], output)
mutated_mod['func_6542'] = func_6542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3870_call = mod.get_global_var('func_3870')
func_3871_call = mutated_mod.get_global_var('func_3871')
call_6543 = relay.TupleGetItem(func_3870_call(), 0)
call_6544 = relay.TupleGetItem(func_3871_call(), 0)
func_3223_call = mod.get_global_var('func_3223')
func_3225_call = mutated_mod.get_global_var('func_3225')
call_6564 = relay.TupleGetItem(func_3223_call(), 0)
call_6565 = relay.TupleGetItem(func_3225_call(), 0)
func_4290_call = mod.get_global_var('func_4290')
func_4291_call = mutated_mod.get_global_var('func_4291')
call_6578 = relay.TupleGetItem(func_4290_call(), 0)
call_6579 = relay.TupleGetItem(func_4291_call(), 0)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_6610 = func_4793_call()
call_6611 = func_4793_call()
func_2893_call = mod.get_global_var('func_2893')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_6614 = func_2893_call()
call_6615 = func_2893_call()
func_5871_call = mod.get_global_var('func_5871')
func_5872_call = mutated_mod.get_global_var('func_5872')
call_6617 = func_5871_call()
call_6618 = func_5871_call()
uop_6619 = relay.log(call_6610.astype('float64')) # shape=(1540,)
uop_6621 = relay.log(call_6611.astype('float64')) # shape=(1540,)
output = relay.Tuple([call_6543,call_6564,call_6578,call_6614,call_6617,uop_6619,])
output2 = relay.Tuple([call_6544,call_6565,call_6579,call_6615,call_6618,uop_6621,])
func_6627 = relay.Function([], output)
mod['func_6627'] = func_6627
mod = relay.transform.InferType()(mod)
mutated_mod['func_6627'] = func_6627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6627_call = mutated_mod.get_global_var('func_6627')
call_6628 = func_6627_call()
output = call_6628
func_6629 = relay.Function([], output)
mutated_mod['func_6629'] = func_6629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4662_call = mod.get_global_var('func_4662')
func_4664_call = mutated_mod.get_global_var('func_4664')
call_6647 = relay.TupleGetItem(func_4662_call(), 1)
call_6648 = relay.TupleGetItem(func_4664_call(), 1)
var_6661 = relay.var("var_6661", dtype = "int16", shape = (1540,))#candidate|6661|(1540,)|var|int16
bop_6662 = relay.less_equal(call_6647.astype('bool'), relay.reshape(var_6661.astype('bool'), relay.shape_of(call_6647))) # shape=(1540,)
bop_6665 = relay.less_equal(call_6648.astype('bool'), relay.reshape(var_6661.astype('bool'), relay.shape_of(call_6648))) # shape=(1540,)
output = relay.Tuple([bop_6662,])
output2 = relay.Tuple([bop_6665,])
func_6691 = relay.Function([var_6661,], output)
mod['func_6691'] = func_6691
mod = relay.transform.InferType()(mod)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6692 = relay.var("var_6692", dtype = "int16", shape = (1540,))#candidate|6692|(1540,)|var|int16
func_6691_call = mutated_mod.get_global_var('func_6691')
call_6693 = func_6691_call(var_6692)
output = call_6693
func_6694 = relay.Function([var_6692], output)
mutated_mod['func_6694'] = func_6694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6151_call = mod.get_global_var('func_6151')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6761 = relay.TupleGetItem(func_6151_call(), 0)
call_6762 = relay.TupleGetItem(func_6153_call(), 0)
func_6310_call = mod.get_global_var('func_6310')
func_6311_call = mutated_mod.get_global_var('func_6311')
call_6769 = func_6310_call()
call_6770 = func_6310_call()
output = relay.Tuple([call_6761,call_6769,])
output2 = relay.Tuple([call_6762,call_6770,])
func_6786 = relay.Function([], output)
mod['func_6786'] = func_6786
mod = relay.transform.InferType()(mod)
output = func_6786()
func_6787 = relay.Function([], output)
mutated_mod['func_6787'] = func_6787
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6810 = relay.var("var_6810", dtype = "float32", shape = (12, 16, 1))#candidate|6810|(12, 16, 1)|var|float32
uop_6811 = relay.atan(var_6810.astype('float32')) # shape=(12, 16, 1)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_6816 = func_4793_call()
call_6817 = func_4793_call()
func_4268_call = mod.get_global_var('func_4268')
func_4270_call = mutated_mod.get_global_var('func_4270')
const_6827 = relay.const([-1.213304,8.340269,3.495736,1.169019,2.565101,2.952061,1.990070,-6.735570,-5.778559,-2.122015,-0.041813,-2.671263,-8.362045,-1.790076,-8.863799,1.003323,9.695999,3.598340,-7.785040,0.538418,2.596651,-6.516183,9.766660,-3.536446,4.253593,-4.301392,-7.928343,8.216788], dtype = "float64")#candidate|6827|(28,)|const|float64
call_6826 = relay.TupleGetItem(func_4268_call(relay.reshape(const_6827.astype('float64'), [28,])), 1)
call_6828 = relay.TupleGetItem(func_4270_call(relay.reshape(const_6827.astype('float64'), [28,])), 1)
var_6830 = relay.var("var_6830", dtype = "float32", shape = (12, 16, 8))#candidate|6830|(12, 16, 8)|var|float32
bop_6831 = relay.floor_mod(var_6810.astype('float32'), var_6830.astype('float32')) # shape=(12, 16, 8)
uop_6835 = relay.exp(uop_6811.astype('float64')) # shape=(12, 16, 1)
output = relay.Tuple([call_6816,call_6826,const_6827,bop_6831,uop_6835,])
output2 = relay.Tuple([call_6817,call_6828,const_6827,bop_6831,uop_6835,])
func_6846 = relay.Function([var_6810,var_6830,], output)
mod['func_6846'] = func_6846
mod = relay.transform.InferType()(mod)
mutated_mod['func_6846'] = func_6846
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6846_call = mutated_mod.get_global_var('func_6846')
var_6848 = relay.var("var_6848", dtype = "float32", shape = (12, 16, 1))#candidate|6848|(12, 16, 1)|var|float32
var_6849 = relay.var("var_6849", dtype = "float32", shape = (12, 16, 8))#candidate|6849|(12, 16, 8)|var|float32
call_6847 = func_6846_call(var_6848,var_6849,)
output = call_6847
func_6850 = relay.Function([var_6848,var_6849,], output)
mutated_mod['func_6850'] = func_6850
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3094_call = mod.get_global_var('func_3094')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_6858 = relay.TupleGetItem(func_3094_call(), 0)
call_6859 = relay.TupleGetItem(func_3095_call(), 0)
func_6151_call = mod.get_global_var('func_6151')
func_6153_call = mutated_mod.get_global_var('func_6153')
call_6864 = relay.TupleGetItem(func_6151_call(), 0)
call_6865 = relay.TupleGetItem(func_6153_call(), 0)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_6879 = func_4793_call()
call_6880 = func_4793_call()
func_2779_call = mod.get_global_var('func_2779')
func_2781_call = mutated_mod.get_global_var('func_2781')
call_6884 = func_2779_call()
call_6885 = func_2779_call()
func_1451_call = mod.get_global_var('func_1451')
func_1454_call = mutated_mod.get_global_var('func_1454')
var_6891 = relay.var("var_6891", dtype = "float32", shape = (65,))#candidate|6891|(65,)|var|float32
call_6890 = func_1451_call(relay.reshape(var_6891.astype('float32'), [5, 13]))
call_6892 = func_1451_call(relay.reshape(var_6891.astype('float32'), [5, 13]))
output = relay.Tuple([call_6858,call_6864,call_6879,call_6884,call_6890,var_6891,])
output2 = relay.Tuple([call_6859,call_6865,call_6880,call_6885,call_6892,var_6891,])
func_6900 = relay.Function([var_6891,], output)
mod['func_6900'] = func_6900
mod = relay.transform.InferType()(mod)
mutated_mod['func_6900'] = func_6900
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6901 = relay.var("var_6901", dtype = "float32", shape = (65,))#candidate|6901|(65,)|var|float32
func_6900_call = mutated_mod.get_global_var('func_6900')
call_6902 = func_6900_call(var_6901)
output = call_6902
func_6903 = relay.Function([var_6901], output)
mutated_mod['func_6903'] = func_6903
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5690_call = mod.get_global_var('func_5690')
func_5692_call = mutated_mod.get_global_var('func_5692')
call_6915 = func_5690_call()
call_6916 = func_5690_call()
func_6241_call = mod.get_global_var('func_6241')
func_6242_call = mutated_mod.get_global_var('func_6242')
call_6921 = relay.TupleGetItem(func_6241_call(), 1)
call_6922 = relay.TupleGetItem(func_6242_call(), 1)
output = relay.Tuple([call_6915,call_6921,])
output2 = relay.Tuple([call_6916,call_6922,])
func_6934 = relay.Function([], output)
mod['func_6934'] = func_6934
mod = relay.transform.InferType()(mod)
output = func_6934()
func_6935 = relay.Function([], output)
mutated_mod['func_6935'] = func_6935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3181_call = mod.get_global_var('func_3181')
func_3182_call = mutated_mod.get_global_var('func_3182')
call_6949 = relay.TupleGetItem(func_3181_call(), 0)
call_6950 = relay.TupleGetItem(func_3182_call(), 0)
var_6966 = relay.var("var_6966", dtype = "float64", shape = (11, 15, 10))#candidate|6966|(11, 15, 10)|var|float64
bop_6967 = relay.logical_and(call_6949.astype('bool'), relay.reshape(var_6966.astype('bool'), relay.shape_of(call_6949))) # shape=(11, 15, 10)
bop_6970 = relay.logical_and(call_6950.astype('bool'), relay.reshape(var_6966.astype('bool'), relay.shape_of(call_6950))) # shape=(11, 15, 10)
func_163_call = mod.get_global_var('func_163')
func_167_call = mutated_mod.get_global_var('func_167')
var_6975 = relay.var("var_6975", dtype = "float32", shape = ())#candidate|6975|()|var|float32
var_6976 = relay.var("var_6976", dtype = "float32", shape = (189,))#candidate|6976|(189,)|var|float32
call_6974 = func_163_call(relay.reshape(var_6975.astype('float32'), []), relay.reshape(var_6976.astype('float32'), [3, 9, 7]), )
call_6977 = func_163_call(relay.reshape(var_6975.astype('float32'), []), relay.reshape(var_6976.astype('float32'), [3, 9, 7]), )
output = relay.Tuple([bop_6967,call_6974,var_6975,var_6976,])
output2 = relay.Tuple([bop_6970,call_6977,var_6975,var_6976,])
func_6984 = relay.Function([var_6966,var_6975,var_6976,], output)
mod['func_6984'] = func_6984
mod = relay.transform.InferType()(mod)
mutated_mod['func_6984'] = func_6984
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6984_call = mutated_mod.get_global_var('func_6984')
var_6986 = relay.var("var_6986", dtype = "float64", shape = (11, 15, 10))#candidate|6986|(11, 15, 10)|var|float64
var_6987 = relay.var("var_6987", dtype = "float32", shape = ())#candidate|6987|()|var|float32
var_6988 = relay.var("var_6988", dtype = "float32", shape = (189,))#candidate|6988|(189,)|var|float32
call_6985 = func_6984_call(var_6986,var_6987,var_6988,)
output = call_6985
func_6989 = relay.Function([var_6986,var_6987,var_6988,], output)
mutated_mod['func_6989'] = func_6989
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4793_call = mod.get_global_var('func_4793')
func_4794_call = mutated_mod.get_global_var('func_4794')
call_7017 = func_4793_call()
call_7018 = func_4793_call()
const_7024 = relay.const([-5,-7,10,-8,-5,-4,6,2,-7,4,-8,-4,3,1,-1,5,7,-2,1,-10,2,9,-5,5,-3,-9,-1,-5,-8,-6,9,7,-7,-5,-7,-5,10,-1,4,-8,-5,7,1,10,-8,-10,-10,-5,6,-5,6,3,1,-2,10,-1,6,-10,-10,8,-9,-5,5,-5,-1,-3,-10,4,2,8,3,-6,-9,-3,7,9,10,-4,-5,6,-1,2,9,5,-9,3,2,10,-4,-2,-6,6,6,-1,-10,4,9,-5,1,10,-10,-1,-10,8,4,4,1,-6,-9,6,5,1,8,-2,3,-9,3,-9,-3,-9,-7,6,3,2,8,-1,2,7,-7,8,-1,7,1,10,-1,8,2,-5,-6,8,7,-9,3,-8,8,-2,-7,4,-5,9,-3,-5,2,9,6,-6,-9,3,-2,4,-9,9,-7,3,7,-9,10,5,-3,2,4,-4,2,6,-8,-3,1,2,-5,10,-6,4,5,8,4,7,7,-2,9,-2,-10,-4,7,7,-1,-5,9,3,-9,-10,-10,-10,8,-3,-9,2,9,8,-1,9,-5,-9,6,-6,10,7,-5,-6,-8,-10,5,6,-9,2,-3,-2,-5,-3,-10,5,7,1,-8,6,7,5,-9,7,-9,-8,8,-1,10,4,-4,-1,1,-6,-2,-5,8,2,-2,3,-8,6,-10,10,2,9,3,1,-5,-2,-7,5,-8,-1,6,4,7,-1,-6,9,5,5,2,-3,-3,2,-4,5,4,4,2,-3,5,-9,4,-10,10,10,-1,6,10,4,-5,-5,5,-8,-7,-9,4,3,8,9,-9,9,-2,4,3,5,6,-8,9,-1,6,9,10,7,7,7,7,-6,10,-10,-7,-4,6,8,-5,-2,-9,-10,4,8,-7,9,-2,10,4,-9,-6,-6,3,8,2,-1,-4,1,-2,1,-7,-1,3,3,5,10,4,-4,1,7,3,-4,10,-4,6,2,-4,-2,-8,8,-6,-5,-6,7,10,-1,-1,9,-2,-6,8,4,2,-3,-1,-4,-9,7,-7,-1,8,1,8,-3,-2,-1,-8,4,-2,-4,6,-10,-8,-10,-1,3,4,-9,5,3,4,10,10,5,1,-5,-7,1,3,-2,4,-6,-1,-1,8,6,9,-5,7,2,-7,-4,3,-2,9,-5,-1,-1,5,-9,-7,6,-10,-6,-10,5,-5,-4,8,-9,9,-10,-6,-3,5,5,-8,8,3,-2,-4,2,8,2,-1,-3,-6,1,5,2,-5,-4,7,8,7,4,-9,-3,-2,2,-3,-6,-9,-10,8,-6,6,-5,-3,-4,4,-4,-6,-1,9,2,8,2,4,4,3,-6,-2,-5,-5,-7,-8,-2,-7,3,-6,-1,-4,2,6,-9,-7,-1,5,4,-4,-8,4,-7,5,-1,6,5,-7,-5,4,4,-8,-10,1,-4,7,-9,4,-5,7,-7,-10,-2,-3,1,-2,9,-10,-4,5,5,-10,6,-2,10,-9,-2,-3,-7,1,4,-3,-3,3,3,7,-1,-4,-10,10,-6,1,7,2,10,9,7,8,4,-7,-9,-7,-1,9,-9,-3,5,5,-8,7,-10,-2,10,-5,3,-3,6,5,3,1,3,9,8,2,-10,-3,-7,5,7,2,-4,2,-7,9,3,3,4,3,-5,5,6,-4,-5,10,1,-1,7,6,2,-5,7,-10,2,-10,-10,2,7,1,-9,3,3,6,9,7,9,-8,-1,-7,2,2,4,-10,-2,-2,-1,2,1,7,9,-3,5,-5,2,9,-1,7,-5,-8,-9,-1,-7,8,10,-10,-9,-1,6,3,10,-3,-5,6,-9,-8,-5,9,-1,-10,4,3,-2,-10,-10,6,6,-9,-10,-10,9,7,8,-6,5,-1,-5,-2,9,-5,4,-9,1,-1,4,9,-1,1,-2,-8,4,-4,6,-6,-8,3,2,-4,1,5,-9,3,1,-9,1,-8,9,-4,9,-9,10,-1,-4,-7,-10,-2,-7,9,1,10,7,8,1,-10,-1,9,9,-6,-5,-9,7,4,-8,-1,10,10,-9,-3,10,3,2,-5,-2,-5,-5,-1,-6,6,7,3,-9,7,1,2,-5,3,9,-8,10,-9,8,5,5,7,9,3,3,7,2,-5,4,-6,-7,-5,10,2,-6,-1,8,-4,10,-6,7,-8,3,-6,5,-2,-8,1,-3,-3,8,9,-4,5,-10,8,4,-6,3,-6,6,1,6,-10,-3,-9,1,-10,-1,-10,4,10,-7,-5,-10,7,10,10,1,7,4,-6,-4,-1,-1,-7,10,5,4,8,-2,10,4,-7,1,-9,-10,2,-3,-8,-4,9,4,3,-5,-4,5,-8,5,4,-1,-2,9,-2,7,-9,7,-8,4,-9,-10,4,8,-4,9,-8,10,1,4,-4,-5,3,-2,3,2,-5,-4,8,2,2,10,10,-1,-9,-6,5,7,3,1,-5,5,-5,-8,-10,7,-2,3,-6,4,-9,-10,10,-4,-7,7,8,-10,3,-6,-8,7,9,-1,4,2,-4,2,10,-6,-1,-8,7,1,-8,4,-7,8,-1,-1,-6,2,5,-5,8,-3,6,-9,1,-6,-5,9,-9,10,-7,7,-3,-5,-1,-3,-4,9,10,-7,-7,4,-1,-6,9,2,-6,-3,-8,-5,-9,-9,7,-6,-7,7,-4,-6,3,7,7,-10,-10,1,-1,8,-7,6,-6,-10,-3,-7,-8,-4,-6,-5,-10,-5,9,-8,-4,-2,-3,4,1,2,-3,-1,-1,-3,5,7,2,8,2,4,2,7,-4,-5,-9,9,4,-2,-4,-2,-3,-6,5,-6,10,2,-6,9,2,-5,1,-2,3,-1,-8,-9,4,-6,1,-3,-4,5,4,1,8,-8,9,5,3,-2,1,-2,7,1,3,-9,8,6,9,-9,-3,-7,6,-8,-10,-2,2,-3,3,8,-7,-3,-2,7,6,10,3,-4,1,-8,4,1,5,6,-7,5,3,9,7,-7,-3,4,6,5,-2,6,6,-2,3,-10,-2,6,-1,1,2,2,-6,-1,4,8,2,2,3,-6,3,7,-1,1,8,1,-1,-5,-7,9,-4,-9,-5,2,-6,4,-6,-7,6,10,-9,5,-2,-4,9,-2,2,-9,4,-5,-4,2,-4,9,-4,-3,10,2,10,-2,-1,2,-6,8,-6,2,4,4,-2,7,1,-10,9,4,-8,-10,1,-10,-7,-8,-5,-5,-4,-6,-1,4,-6,5,-6,7,-5,1,-1,4,-3,-10,-5,-7,3,7,10,-6,-8,2,-9,-6,-7,4,-1,-3,3,3,8,10,5,5,-1,-10,1,-10,2,-9,-6,5,1,2,-3,3,4,5,1,3,-1,10,4,6,-8,4,-6,-1,-9,3,5,7,1,9,4,-5,-4,8,-5,-5,-7,-6,8,-2,-8,10,2,5,9,-5,-5,-7,5,6,-10,-2,-9,-2,6,3,10,1,1,3,-9,3,9,10,7,-4,8,2,6,4,9,-10,-9,8,7,1,4,-10,6,-6,8,10,8,5,7,8,7,2,8,-7,3,-1,-2,9,2,10,7,-10,-1,1,-4,-3,-4,6,-7,7,9,-9,2,8,7,-6,8,-1,8,-9,8,3,9,6,-10,-7,4,9,-6,-9,-5,-7,-8,-5,2,-1,8,-4,1,4,-6,10,9,-5,-6,-7,-9,7,-5,-6,-8,9,8,4,5,1,-1,1,-2,-4,-1,3,-7,7,-3,-1,9,9,-3,-7,3,10,-2,-1,-7,3,5,-8,-6,-6,-10,-2,-7,6,-5,6,2,-9,7,9,4,2,9,2,6,6,5,3,-2,1,2,5,-5,8,-4,-6,10,10,7,-5,-1,9,1,-9,-2,10,8,-10,10,5,-7,-4,8,-4,-5,-7,2,-4,7,7,4,5,-3,-6,-5,6,-1,-6,-4,3,-1,-10,6,5,-7,-5,10,-4,-7,5,-1,-3,-3,3,-1,-1,-7,-3,-4,10,-1,-6,-7,5,1,5,2,8,4,7,8,-8,-8,1,1,5,6,-4,-2,-6,-8,-6,-6,-10,-4,8,4,8,-6,5,-10,-1,2,7,4,-6,2,-7,-6,1,-3,-3], dtype = "int16")#candidate|7024|(1540,)|const|int16
bop_7025 = relay.logical_or(call_7017.astype('bool'), relay.reshape(const_7024.astype('bool'), relay.shape_of(call_7017))) # shape=(1540,)
bop_7028 = relay.logical_or(call_7018.astype('bool'), relay.reshape(const_7024.astype('bool'), relay.shape_of(call_7018))) # shape=(1540,)
output = relay.Tuple([bop_7025,])
output2 = relay.Tuple([bop_7028,])
func_7036 = relay.Function([], output)
mod['func_7036'] = func_7036
mod = relay.transform.InferType()(mod)
mutated_mod['func_7036'] = func_7036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7036_call = mutated_mod.get_global_var('func_7036')
call_7037 = func_7036_call()
output = call_7037
func_7038 = relay.Function([], output)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5062_call = mod.get_global_var('func_5062')
func_5063_call = mutated_mod.get_global_var('func_5063')
call_7044 = relay.TupleGetItem(func_5062_call(), 0)
call_7045 = relay.TupleGetItem(func_5063_call(), 0)
output = relay.Tuple([call_7044,])
output2 = relay.Tuple([call_7045,])
func_7046 = relay.Function([], output)
mod['func_7046'] = func_7046
mod = relay.transform.InferType()(mod)
output = func_7046()
func_7047 = relay.Function([], output)
mutated_mod['func_7047'] = func_7047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7069 = relay.var("var_7069", dtype = "uint8", shape = (12, 13, 15))#candidate|7069|(12, 13, 15)|var|uint8
var_7070 = relay.var("var_7070", dtype = "uint8", shape = (12, 13, 15))#candidate|7070|(12, 13, 15)|var|uint8
bop_7071 = relay.bitwise_or(var_7069.astype('uint8'), relay.reshape(var_7070.astype('uint8'), relay.shape_of(var_7069))) # shape=(12, 13, 15)
func_2858_call = mod.get_global_var('func_2858')
func_2861_call = mutated_mod.get_global_var('func_2861')
const_7082 = relay.const([5,7,10,-2,6,-10,4,7,10,-1,-10,-8,10,-7,-8,6,-4,-7,-10,5,-9,-3,10,-4,-5,-1,-1,-5,6,-8,10,-10,-5,-3,8,-9,10,1,-3,2,9,4,-4,-3,-10,-5,-2,-9,1,-2,-7,-5,4,-8,-10,-4,6,1,6,10,-4,8,-7,-3,-8,-9,-5,-3,10,-3,-4,3,4,1,7,-5,4,5,2,-2,-2,-5,-5,3,10,10,-4,5,7,7,7,3,7,3,-7,-10,-5,-5,3,-8,5,-8,-10,-6,-1,9,4,7,3,3,-6,10,-7,-4,4,-7,9,-9,-10,-4,-5,-9,6,-2,-8,10,7,-7,-6,7,2,-10,-1,8,3,2,-6,10,-9,-2,7,-2,3,-1,2,-10,3,-5,-10,-6,6,2,1,3,-4,8,8,-6,-3,7,-6,-10,-8,3,-8,10,9,6,-2,1,-4,7,-2,1,1,-9,-7,-8,-3,-3,-2,-5,-3,-2,-9,-2,5,-5,4,2,-7,4,1,-1,3,-5,6,-5,-10,5,1,2,-7,-2,-4,8,-5,-9,4,-1,3,1,6,10,4,-3,3,2,-4,-2,-9,2,-3,-2,-1,6,-9,-5,3,-10,1,4,1,-7,-10,-5,-1,5,-10,-3,-2,-6,3,7,-9,5,-2,-7,2,-10,-2,1,4,7,5,-6,8,9,5,9,4,-5,2,-3,-5,9,10,1,8,-9,-10,1,4,9,-7,-5,-4,-9,-2,3,7,-5,3,-10,-3,-5,3,9,7,9,8,-7,2,-1,8,2,-7,2,-10,-1,3,-6,-2,-4,-4,-3,6,-9,5,3,-5,9,-1,-9,5,-5,-6,7,-7,4,-3,-6,-6,7,4,-5,6,-10,-6,9,-9,-4,-5,-2,1,4,5,-2,4,4,-1,8,4,-6,6,-4,10,-9,-8,-9,-9,2,4,6,-5,-7,-7,6,2,-2,7,-3,-5,-6,-3,1,-8,7,8,10,-2,-10,4,2,7,-4,1,3,-10,-2,-4,7,7,3,-5,-7,-2,8,2,-1,4,-3,-1,-5,-5,-5,10,-10,6,-2,-8,10,5,-7,-7,-6,-2,-8,-5,-7,9,-7,6,8,3,-4,9,3,3,-3,-6,3,-7,-4,-5,-3,3,-5,-9,10,3,3,2,-5,3,7,-6,9,5,-6,-2,-7,10,3,-7,1,9,-9,9,-5,-2,2,-7,1,-4,-4,-7,3,-5,5,9,3,10,-10,7,-3,-10,-7,8,8,-7,10,5,1,8,-3,4,7,-7,-4,2,3,2,10,-10,-4,3,2,7,-6,-9,-6,-5,6,-9,4,8,7,9,-2,6,-7,9,-4,3,3,-1,3,-1,-7,7,-6,-1,5,-8,1,4,-4,-9,1,-10,-4,-3,-8,3,-7,-9,7,5,1,10,9,4,-9,2,5,-4,7,-3,4,-2,-10,5,2,1,3,-7,-5,6,4,-4,3,7,7,-7,-9,3,4,7,8,-1,-9,-5,-9,-10,2,3,2,-7,1,-10,-7,-10,-3,-4,4,3,-4,-10,3,8,-2,1,1,2,4,-2,7,9,-10,-2,-10,8,7,-9,-7,-4,-5,4,-2,8,2,-6,-6,10,10,10,9,4,-7,-6,7,7,6,-10,10,6,-9,-3,-7,-1,-5,5,-3,1,3,6,9,3,-5,-6,2,8,-4,8,-4,-8,-2,-4,-3,4,-4,5,-4,-1,-3,5,-8,-7,-4,4,4,6,5,8,4,-6,-2,2,-9,-6,-9,-8,-4,9,-9,-5,-5,8,8,9,-10,2,6,-10,8,-9,-7,-2,-1,-10,-4,-3,3,-8,-9,-6,-2,1,-2,-2,8,-7,-8,7,-10,2,-1,4,6,8,-10,4,-3,-1,9,5,-7,-4,1,-6,8,8,1,-5,3,6,-8,-7,-7,-5,-2,-6,3,5,1,7,-7,1,5,7,-1,-3,-3,-1,-9,-9,-7,1,4,3,5,-5,5,10,-1,-9,-2,-3,-3,7,1,2,-2,-7,6,2,-2,-4,10,-8,-3,-7,-1,9,-5,5,-6,-1,7,5,-9,-7,-3,-5,-6,-7,-10,-3,-3,5,3,-3,7,9,3,9,2,-1,10,-9,-1,-5,-9,3,5,1,8,-8,9,10,1,3,7,8,4,-4,-2,-7,1,4,-10,3,8,-2,9,8,-3,-3,7,-8,9,-5,2,3,-1,-7,-1,-8,4,-5,-4,-2,5,7,-7,4,-8,-6,-10,2,-5,2,-3,-4,-4,1,5,7,1,4,1,-3,-7,-1,-9,10,-4,-9,-7,-6,-3,9,2,-9,-1,10,-1,3,5,6,-9,-5,1,1,-6,-8,-4,6,4,9,-8,-9,6,-8,-8,-3,5,1,4,3,-7,-9,-2,6,-2,-3,-6,3,8,2,-8,-4,-7,-8,-5,10,-3,-2,8,3,5,-2,8,-4,7,-2,-3,7,-9,10,7,5,-1,-7,9,10,-5,6,8,-10,7,3,10,1,-6,-5,-3,6,-9,4,4,3,-6,3,-10,2,-8,-9,-4,8,-3,4,-3,-1,-3,4,7,-7,6,-9,-4,4,-4,10,5,-8,1,4,2,10,-2,-3,10,4,-1,-2,1,-6,-9,5,-6,-2,-4,-3,-6,4,-5,-7,-6,-3,-1,1,-1,9,5,5,6,8,-8,10,4,-9,10,4,-6,-2,-1,1,2,-5,-5,-10,-10,4,-9,-1,6,-2,8,4,-4,-1,9,-9,3,2,4,8,10,3,6,-4,4,1,-3,-5,9,-2,-9,3,-6,-7,-5,-6,7,-6,-1,-5,6,8,9,4,1,-10,10,-10,8,-7,-2,-10,10,2,-6,-8,-5,2,2,-3,4,1,1,-10,-1,-4,8,4,1,1,4,-2,6,2,1,-10,3,1,-5,2,8,8,1,-3,-9,2,4,4,-9,7,-4,-7,8,-10,10,8,-8,-3,-10,3,-1,-5,-10,-4,-5,-1,7,7,-7,-6,-9,-5,1,-7,-4,-2,-5,9,-6,-6,-3,-10,-4,-4,6,-10,-6,-3,10,-10,2,9,-7,-5,-1,-5,-8,5,-4,5,-10,-4,-9,-5,-8,-5,-5,10,-5,6,-5,-2,-8,5,7,9,-6,-6,-1,-7,-4,-9,-9,4,5,-1,2,3,10,9,9,-5,-2,-3,-9,-2,-5,3,-2,-7,6,-7,-1,8,10,7,7,6,10,-4,10,-4,-7,-10,-6,7,-6,2,-5,-7,8,-4,-5,-8,-2,7,-6,-8,10,3,-4,9,5,7,2,6,-9,6,-3,-10,7,-8,10,8,-5,-7,-3,8,8,9,9,-1,-8,-2,-3,7,-2,3,-2,-2,-3,-5,-5,-6,8,6,-3,-8,6,-1,2,1,2,6,6,-10,-6,7,9,8,-9,7,-1,-10,-4,-6,-8,10,10,3,-5,4,7,5,-5,3,7,-7,-4,-3,-9,-7,-5,-6,-5,2,-1,1,10,-5,-1,10,-10,-4,5,5,8,10,8,-10,-4,-5,9,-2,-4,-5,-5,10,-3,10,-4,1,-6,5,6,1,8,-4,1,-7,4,9,6,-5,-6,6,-1,-1,-7,-2,-4,4,8,10,-7,-6,8,10,-5,-2,3,8,-4,-2,-5,-5,-7,2,8,-7,-10,5,6,-3,-2,1,-4,9,10,-10,-6,-6,5,-10,-2,7,-2,4,-8,1,6,7,-3,-8,8,9,-3,8,-5,-1,7,-10,10,9,3,-10,-1,8,3,-8,4,-4,-2,-4,-3,5,5,-1,9,5,-9,10,-3,-8,4,7,3,4,-6,-4,3,10,-5,3,2,-10,4,-5,-10,-1,-8,2,-2,9,-5,8,4,-8,-3,-7,-10,6,-6,-10,3,-1,-2,2,-1,3,-6,8,10,-1,8,8,2,9,-6,-6,-10,9,2,-7,2,1,-10,-10,-4,3,-8,7,4,9,6,-8,2,10,7,-9,7,9,-6,2,-9,-1,6,8,-5,-2,2,-7,5,10,-7,3,8,5,-2,-3,2,9,-1,9,-3,7,9,2,3,8,-3,-6,-6,5,8,10,-4,-7,7,1,7,5,-1,-9,-1,6,7,-4,-5,-10,7,-4,-2,-5,6,-9,1,-8,5,9,-4], dtype = "int16")#candidate|7082|(1540,)|const|int16
call_7081 = relay.TupleGetItem(func_2858_call(relay.reshape(const_7082.astype('int16'), [14, 10, 11]), relay.reshape(const_7082.astype('int16'), [14, 10, 11]), ), 0)
call_7083 = relay.TupleGetItem(func_2861_call(relay.reshape(const_7082.astype('int16'), [14, 10, 11]), relay.reshape(const_7082.astype('int16'), [14, 10, 11]), ), 0)
func_595_call = mod.get_global_var('func_595')
func_598_call = mutated_mod.get_global_var('func_598')
var_7086 = relay.var("var_7086", dtype = "bool", shape = ())#candidate|7086|()|var|bool
call_7085 = func_595_call(relay.reshape(var_7086.astype('bool'), []))
call_7087 = func_595_call(relay.reshape(var_7086.astype('bool'), []))
output = relay.Tuple([bop_7071,call_7081,const_7082,call_7085,var_7086,])
output2 = relay.Tuple([bop_7071,call_7083,const_7082,call_7087,var_7086,])
func_7091 = relay.Function([var_7069,var_7070,var_7086,], output)
mod['func_7091'] = func_7091
mod = relay.transform.InferType()(mod)
var_7092 = relay.var("var_7092", dtype = "uint8", shape = (12, 13, 15))#candidate|7092|(12, 13, 15)|var|uint8
var_7093 = relay.var("var_7093", dtype = "uint8", shape = (12, 13, 15))#candidate|7093|(12, 13, 15)|var|uint8
var_7094 = relay.var("var_7094", dtype = "bool", shape = ())#candidate|7094|()|var|bool
output = func_7091(var_7092,var_7093,var_7094,)
func_7095 = relay.Function([var_7092,var_7093,var_7094,], output)
mutated_mod['func_7095'] = func_7095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6310_call = mod.get_global_var('func_6310')
func_6311_call = mutated_mod.get_global_var('func_6311')
call_7116 = func_6310_call()
call_7117 = func_6310_call()
output = call_7116
output2 = call_7117
func_7118 = relay.Function([], output)
mod['func_7118'] = func_7118
mod = relay.transform.InferType()(mod)
mutated_mod['func_7118'] = func_7118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7118_call = mutated_mod.get_global_var('func_7118')
call_7119 = func_7118_call()
output = call_7119
func_7120 = relay.Function([], output)
mutated_mod['func_7120'] = func_7120
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6111_call = mod.get_global_var('func_6111')
func_6113_call = mutated_mod.get_global_var('func_6113')
call_7127 = func_6111_call()
call_7128 = func_6111_call()
output = relay.Tuple([call_7127,])
output2 = relay.Tuple([call_7128,])
func_7135 = relay.Function([], output)
mod['func_7135'] = func_7135
mod = relay.transform.InferType()(mod)
mutated_mod['func_7135'] = func_7135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7135_call = mutated_mod.get_global_var('func_7135')
call_7136 = func_7135_call()
output = call_7136
func_7137 = relay.Function([], output)
mutated_mod['func_7137'] = func_7137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4437_call = mod.get_global_var('func_4437')
func_4439_call = mutated_mod.get_global_var('func_4439')
call_7162 = func_4437_call()
call_7163 = func_4437_call()
var_7178 = relay.var("var_7178", dtype = "uint8", shape = (2, 13, 10))#candidate|7178|(2, 13, 10)|var|uint8
bop_7179 = relay.less(call_7162.astype('bool'), relay.reshape(var_7178.astype('bool'), relay.shape_of(call_7162))) # shape=(2, 13, 10)
bop_7182 = relay.less(call_7163.astype('bool'), relay.reshape(var_7178.astype('bool'), relay.shape_of(call_7163))) # shape=(2, 13, 10)
func_4334_call = mod.get_global_var('func_4334')
func_4335_call = mutated_mod.get_global_var('func_4335')
call_7197 = relay.TupleGetItem(func_4334_call(), 0)
call_7198 = relay.TupleGetItem(func_4335_call(), 0)
func_4268_call = mod.get_global_var('func_4268')
func_4270_call = mutated_mod.get_global_var('func_4270')
var_7200 = relay.var("var_7200", dtype = "float64", shape = (28, 1))#candidate|7200|(28, 1)|var|float64
call_7199 = relay.TupleGetItem(func_4268_call(relay.reshape(var_7200.astype('float64'), [28,])), 2)
call_7201 = relay.TupleGetItem(func_4270_call(relay.reshape(var_7200.astype('float64'), [28,])), 2)
const_7214 = relay.const([[[10,-1,3,4,-7,5,3,8,-10,-1],[9,-7,-9,-7,-3,-6,-10,-4,6,6],[7,7,-1,-5,-6,-5,-4,-1,9,6],[2,6,7,-6,-8,-8,4,-6,-10,6],[-9,2,-5,6,10,7,4,-7,1,-5],[8,5,-1,-6,4,-9,-5,6,-6,6],[-4,2,-6,10,4,8,3,3,6,6],[-3,3,-8,10,1,1,-10,-7,2,4],[5,6,-7,3,-8,3,4,1,-5,5],[8,-3,-7,-3,-10,-2,10,4,-7,-3],[5,-8,10,-10,-2,-10,9,9,6,4],[2,4,6,-1,4,-9,8,8,9,-4],[1,1,9,-5,-3,-2,4,7,3,-4]],[[2,10,1,9,-7,10,8,9,3,-4],[-4,-3,4,10,-10,8,6,-3,5,-8],[6,10,3,-1,5,5,2,8,10,5],[10,9,9,-6,5,-7,-4,-2,8,3],[9,-1,-8,8,6,-5,5,4,-7,8],[-4,10,4,5,7,5,6,8,-4,-1],[10,-9,-1,10,-3,9,-5,-7,2,3],[2,9,4,3,6,10,-1,2,2,-9],[10,4,8,8,-5,-1,-9,-6,-8,2],[-2,-9,-1,-4,-2,-8,2,2,7,-2],[-1,1,3,-6,6,-6,-10,1,7,6],[8,-6,10,-10,7,1,-5,9,-10,3],[-3,-4,6,-8,-1,-6,8,1,7,-5]]], dtype = "uint8")#candidate|7214|(2, 13, 10)|const|uint8
bop_7215 = relay.power(var_7178.astype('float32'), relay.reshape(const_7214.astype('float32'), relay.shape_of(var_7178))) # shape=(2, 13, 10)
bop_7219 = relay.left_shift(bop_7215.astype('int32'), relay.reshape(const_7214.astype('int32'), relay.shape_of(bop_7215))) # shape=(2, 13, 10)
uop_7231 = relay.log10(bop_7179.astype('float32')) # shape=(2, 13, 10)
uop_7233 = relay.log10(bop_7182.astype('float32')) # shape=(2, 13, 10)
output = relay.Tuple([call_7197,call_7199,var_7200,bop_7219,uop_7231,])
output2 = relay.Tuple([call_7198,call_7201,var_7200,bop_7219,uop_7233,])
func_7241 = relay.Function([var_7178,var_7200,], output)
mod['func_7241'] = func_7241
mod = relay.transform.InferType()(mod)
mutated_mod['func_7241'] = func_7241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7241_call = mutated_mod.get_global_var('func_7241')
var_7243 = relay.var("var_7243", dtype = "uint8", shape = (2, 13, 10))#candidate|7243|(2, 13, 10)|var|uint8
var_7244 = relay.var("var_7244", dtype = "float64", shape = (28, 1))#candidate|7244|(28, 1)|var|float64
call_7242 = func_7241_call(var_7243,var_7244,)
output = call_7242
func_7245 = relay.Function([var_7243,var_7244,], output)
mutated_mod['func_7245'] = func_7245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_7261 = relay.TupleGetItem(func_3357_call(), 0)
call_7262 = relay.TupleGetItem(func_3359_call(), 0)
output = call_7261
output2 = call_7262
func_7264 = relay.Function([], output)
mod['func_7264'] = func_7264
mod = relay.transform.InferType()(mod)
output = func_7264()
func_7265 = relay.Function([], output)
mutated_mod['func_7265'] = func_7265
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4601_call = mod.get_global_var('func_4601')
func_4603_call = mutated_mod.get_global_var('func_4603')
call_7293 = relay.TupleGetItem(func_4601_call(), 0)
call_7294 = relay.TupleGetItem(func_4603_call(), 0)
func_5654_call = mod.get_global_var('func_5654')
func_5655_call = mutated_mod.get_global_var('func_5655')
call_7304 = func_5654_call()
call_7305 = func_5654_call()
const_7321 = relay.const([[[2.671261,-5.802593,-0.059870,9.337257,9.774149,-3.416459,-7.973205,-9.636594,-7.357379,-0.676925],[1.664831,3.089420,-9.628136,3.069649,4.285007,-5.004426,7.953979,7.184551,5.487324,-9.578269],[8.606781,0.232868,-1.453863,1.868166,-4.284134,-1.819326,-6.780795,3.765802,-8.998585,-6.108602],[-5.435182,-2.271230,1.581435,4.993281,8.683239,-0.764917,-8.449754,-2.156700,1.735028,7.013355],[7.534534,-8.119488,6.340118,-4.007761,-7.782822,9.556566,-4.089997,-8.966386,2.313072,-6.609861],[-7.133906,8.091053,-0.530821,8.266382,2.832226,2.846649,-0.297112,-3.051673,-4.403681,-2.817052],[-5.979359,0.158389,2.789643,-6.339793,5.091503,3.370262,6.766342,-8.463742,-9.815924,-2.268073],[-5.372423,2.238932,2.386305,-2.302131,-2.877784,-7.907660,1.474563,3.911619,6.207157,4.049477],[-9.081345,-5.668564,-4.309407,-1.586465,-6.923462,-4.261827,-2.178135,-8.917695,-1.398838,0.600865],[0.955681,9.787101,9.490635,2.887043,-4.723176,7.264549,-9.900911,6.273889,-7.190170,0.812021],[-8.520024,3.755169,0.391423,-9.711141,3.887324,4.589022,9.207095,2.086991,6.881587,1.281767],[4.254856,1.060881,7.574239,-8.596490,-6.290596,-3.616641,-4.823303,9.010667,7.327081,6.515100],[-8.359468,3.399735,9.868729,-5.781455,-9.930195,-8.933330,2.025048,4.945339,-7.535455,-4.185300],[0.528326,3.520198,9.123356,-3.426576,-7.919739,1.413966,-2.546982,-3.858440,6.447389,-1.906752],[4.674709,5.635869,-5.545573,2.706714,2.259703,2.004361,-6.292845,-7.887337,-0.252180,3.035508]],[[-6.065666,5.637377,6.645280,-7.863949,-6.357932,-4.806740,4.589862,-1.464191,-8.054935,7.384518],[-9.007729,5.759956,7.886213,-8.550756,-1.677037,5.170260,-4.574214,4.943062,-6.253286,-9.891112],[-3.446152,-9.826850,-4.648522,-4.217453,-8.248001,-3.175881,-7.377944,-4.313752,1.587723,9.358007],[-1.210006,-5.756935,6.590996,-2.639000,4.358044,9.742703,-7.794615,-7.954394,-2.151927,9.524503],[-8.077592,4.543472,5.755412,-7.633587,-5.538271,-6.711005,-0.474241,2.633331,-8.184998,-2.777515],[-5.909656,-6.903362,6.431266,-8.117690,7.817775,1.961915,4.505611,-1.615304,-2.723079,-1.510464],[2.708312,3.680909,9.325908,1.875192,-1.058790,-7.347284,3.476914,1.175620,5.125435,0.454877],[-1.145864,-2.157905,2.841724,-8.864261,2.313569,5.019492,-2.230387,8.586583,0.454144,1.210246],[-8.225807,4.658554,-5.481939,-5.973775,-8.793659,-5.431699,-5.030370,-7.508325,-4.917491,9.848095],[4.197560,-2.575108,8.726847,-1.284458,-1.268725,1.550041,7.837290,9.733050,6.609454,8.497527],[7.368225,-5.862839,-3.033682,0.002209,-6.777710,-8.407993,5.000534,9.199320,-8.580426,-7.931962],[7.496619,0.703765,-2.082927,8.104624,2.344010,9.152240,-4.656701,-3.082318,-7.369721,0.376114],[1.965325,1.637189,-4.693840,8.214973,-6.184098,-1.582297,3.150390,-7.381469,-4.539021,-7.818765],[-1.366107,-8.403921,5.560230,1.485785,-7.791305,-9.801833,-0.388256,2.596980,-7.963983,-0.920326],[-4.800596,9.152618,-2.027687,6.012961,8.813987,-3.216645,6.697067,-5.339635,-6.682814,-5.618140]],[[2.333450,-8.404463,-1.576912,-8.808468,-8.927966,4.092897,0.373099,5.304682,-4.926512,-3.469914],[-6.196795,6.747643,7.902434,-3.386085,4.582872,7.249280,-9.033537,8.395709,9.576810,1.667693],[-9.354757,-4.520798,5.567668,1.242851,-9.239057,8.032021,2.235984,-4.385604,0.755467,-1.276513],[6.273457,4.471210,0.624257,5.916390,-9.261659,-7.693258,8.389361,6.031162,-7.011269,7.459552],[-2.361121,4.017589,5.981835,1.393646,3.516640,-0.626839,4.332570,-0.747380,-6.676349,0.258923],[-3.110600,8.855326,-6.327746,2.165982,1.589063,5.852604,4.473943,7.113008,-4.162239,1.119236],[-1.337942,-6.675284,8.478765,-3.595389,-1.468440,1.100189,-1.482845,4.814870,0.844675,6.104174],[3.635172,-0.431787,-2.161304,3.859754,-7.362076,-8.762033,-1.081082,-1.385387,7.291498,8.713010],[-2.360839,-9.663584,5.203552,4.020446,-0.199150,-0.118497,5.243513,7.360981,-8.038295,-5.323997],[7.251604,-6.637280,-5.938655,-3.627857,3.395849,5.612005,-5.833416,-5.628964,5.049059,-7.964332],[6.178952,2.790031,5.896382,-4.663506,-3.992086,1.052253,2.099880,1.240627,-6.489736,4.648138],[-2.016413,-2.226408,-8.748772,-5.708109,-0.310358,-9.406709,1.345844,8.188927,-2.338749,0.163807],[-4.944868,-7.009198,-7.247894,2.470583,4.785349,-0.521750,-9.506543,-0.575619,-9.468159,-7.033343],[5.805603,-5.774132,0.854705,-8.285682,7.162589,-9.892905,-6.534533,5.649092,-5.764940,4.873126],[2.218725,7.300486,-6.486146,-8.651072,5.238410,-2.488453,5.996269,8.788673,-1.875764,-5.123726]],[[3.809968,4.696556,-4.066425,-3.247291,-6.904328,-8.309852,-9.100039,6.537460,-5.090924,0.260985],[-1.410095,-8.380585,-8.467541,-4.535706,8.754189,-1.009428,8.807227,-1.999748,-8.745522,5.138697],[6.464749,-3.307416,1.025975,-2.171196,8.299234,4.845918,6.756384,-1.300756,-1.867803,-2.102246],[7.617377,-0.715208,7.130917,-6.391605,-1.197439,-4.291401,-8.409497,5.670984,-2.317969,2.293637],[8.515834,9.786940,-9.394523,-0.013389,7.342553,2.192234,9.778918,1.468413,-1.899510,-9.145728],[8.092580,-6.224737,7.007763,-8.759348,-5.671238,5.773069,-1.085514,-2.793042,-5.711224,7.909298],[-2.694487,1.911697,8.802037,-8.570231,-3.260543,-0.583042,3.133902,8.739244,-0.277178,-2.791966],[8.872378,-9.389246,-8.430592,5.855306,4.551749,-5.565111,3.624961,5.385714,1.411940,-0.146112],[-6.962440,9.625636,-4.788867,-9.710576,-7.240538,8.820444,-3.433489,-7.606922,-7.882705,-4.157831],[-1.261520,1.432862,-9.905148,-0.879465,-7.733191,3.093146,8.308443,-5.338534,-2.218894,-0.004872],[9.462041,-3.228354,8.455898,8.075540,-2.962017,4.076377,-8.444876,-3.193633,7.529210,-7.610022],[-0.893201,-4.614217,8.662001,8.911919,3.386268,-3.726533,1.188574,2.880110,0.041138,-3.831677],[-3.919668,7.872359,0.991288,7.602268,-2.787224,-9.140261,2.026467,4.286728,-1.798744,-9.639462],[-8.560147,-6.157810,-3.359553,1.719793,-3.879279,7.709930,8.711913,-4.616259,7.923718,-7.262608],[9.788209,-6.670396,3.013820,7.567441,-5.206085,-0.010476,0.521784,-3.715500,-4.305694,6.948623]],[[2.546023,0.529724,6.264755,1.354263,9.888796,2.587119,9.036330,7.520128,1.326115,-8.524939],[3.946258,-5.544951,3.014386,-5.723665,-6.149452,4.657385,-3.566446,0.717501,-5.953939,-7.915766],[-7.534224,-3.394241,8.308930,-0.403813,7.873471,-6.961286,4.331969,1.843022,3.677922,-6.983393],[3.516164,-5.326130,-6.154255,-2.242976,-8.377303,-8.772863,-5.243758,-4.021640,7.583999,-1.002477],[0.916644,9.518608,2.282437,-5.994660,-1.368322,8.604879,-7.889670,8.765192,1.380699,6.981154],[8.904666,-9.060414,-3.252919,5.442453,1.855250,-9.391971,2.550178,-6.515887,-7.937964,4.876194],[5.295138,8.115098,-5.905101,0.726571,-6.676155,-6.718827,-2.897829,7.107277,8.444583,-7.393562],[-7.343892,-7.506329,-9.163419,-0.227784,2.343159,7.378388,-5.170477,-0.799357,-5.351571,-8.608447],[-6.475147,-9.788947,3.544746,4.120268,-8.623363,-0.975241,7.602346,-6.471971,6.883366,-9.588539],[6.812131,8.054753,-7.686766,-4.474641,1.893486,5.426694,1.885816,6.278670,5.491812,-8.661192],[-4.247603,-5.672221,9.380411,-6.421709,-3.503032,6.580850,-7.638579,5.236736,-3.364971,5.060612],[9.470324,3.365762,-7.256481,1.139224,9.851037,-0.544151,-0.123582,1.492277,2.953182,-6.412214],[1.171366,3.302642,2.312178,-3.225526,4.694294,3.367820,1.481337,0.317903,5.344148,1.301307],[-1.900598,8.442137,3.813605,-8.653033,-1.849914,-4.626339,-5.386482,8.907906,-2.058427,2.075510],[-6.999616,-4.581201,3.101543,7.355968,4.446881,-5.554848,-6.051739,-9.125600,-2.317988,2.167893]],[[-7.544975,-7.113725,5.598591,-4.991785,-3.368961,4.837666,-8.803482,-4.984943,-9.788107,3.929011],[-9.344381,3.399315,4.156686,-3.183557,5.253581,-7.524097,1.574434,-5.324741,-5.606909,4.134531],[3.272489,8.930998,-6.892032,2.148072,-1.601876,-6.424525,-9.869399,4.245154,-8.167334,-2.114806],[9.032314,1.377807,3.390088,-7.042868,-0.287652,-4.415998,-8.490089,4.824892,3.952036,5.990872],[3.292661,1.638896,-6.741389,4.821116,-9.848361,-7.627228,-0.709066,0.365989,0.707775,-1.285713],[7.553895,7.161017,-6.527307,-3.163586,-0.803353,7.399469,-2.213497,6.194282,-2.402373,9.800265],[-2.032690,-5.592052,3.015345,3.605670,7.250686,-4.183871,-0.857765,5.268419,-7.396111,1.810306],[5.838572,0.823657,3.293252,-7.134386,2.932525,-3.623036,6.083692,1.900815,-6.657214,-5.754413],[-9.742964,-4.577310,-4.760506,9.271299,-2.087382,3.551534,-1.719741,5.819745,-8.445746,9.623226],[8.289105,8.674235,-9.486015,2.308967,1.405589,7.048106,-4.281361,6.563658,4.191457,6.521194],[7.005573,0.849518,1.659058,0.450430,9.413413,-8.238609,-4.541742,5.426158,-3.398437,-2.505840],[-6.863797,6.325816,6.943990,-1.377527,8.797306,-1.093198,-4.313424,-3.559474,-2.211943,9.827515],[-4.107036,-7.320282,-3.953717,-7.895472,-5.106557,-2.509257,-5.793047,6.347233,-3.694127,-8.963008],[-1.338512,-1.413426,-5.682154,-9.799792,-6.236661,-8.483849,1.635702,-0.440708,7.600473,-3.221335],[5.558734,-7.030517,-3.549661,3.906843,0.177490,9.651359,7.867803,7.889390,-1.166722,-2.144223]],[[3.046914,-8.597998,-3.257980,-9.658594,6.234376,3.040660,-3.351969,-1.400915,-2.675427,2.391713],[4.395318,1.353176,6.203192,-7.958619,-7.537448,-3.828632,-4.714532,6.203384,2.408109,-1.935453],[-1.063496,3.478670,6.749717,-9.187240,-6.216848,-4.267055,-2.027917,-0.741343,-8.037438,6.992406],[9.721792,-3.030435,-4.266293,-2.477514,-5.698143,-1.697090,6.120232,1.661731,6.970716,-0.194345],[5.356474,1.128549,-4.118640,8.560962,5.564313,7.464317,4.402220,-4.440044,2.888633,2.963654],[5.027336,2.169250,-5.716202,3.644867,-4.118960,0.175771,-7.180303,7.777068,-3.055231,6.342373],[3.106086,-3.160940,8.014418,6.652658,-4.075329,-4.228207,-4.545447,-8.753833,-1.073403,3.456728],[6.083002,-9.654399,4.049790,-9.945738,4.892646,1.957363,-8.572844,0.931726,-0.063678,6.228764],[1.070162,-5.826092,0.134637,-6.396880,9.219675,-8.040015,-7.226768,-3.378552,-2.229218,9.372546],[8.760565,-3.702923,4.990927,3.297893,-9.347028,-9.446328,-7.040172,-3.732402,7.267460,2.925198],[-8.553850,7.954093,-6.413714,-2.778002,-0.657867,-1.677392,5.552775,7.670594,-6.937004,-2.312940],[6.717357,0.232067,-5.278846,4.590382,-2.130371,-7.487893,-8.884437,-3.406468,6.238611,5.464750],[-4.034798,1.491094,6.804056,-7.462467,0.738625,-3.600201,0.007279,-5.784266,9.406070,9.642947],[-2.349202,-4.399229,7.590896,-2.787777,-9.087315,-1.325928,8.240191,-4.126149,1.895023,4.317604],[0.780981,1.397256,3.517686,-9.477904,-1.493517,-6.313113,5.797668,6.523452,9.067506,-0.753180]],[[-3.715280,0.890030,-4.486518,-7.967746,-1.849702,4.043094,4.499607,3.303984,-4.370251,-2.208678],[9.717039,-6.316487,0.891138,-8.401804,2.608487,-9.307094,0.273384,5.486672,9.192978,8.089241],[0.449037,-9.896983,-7.642657,4.284541,6.788744,2.490647,8.792838,-3.595158,4.565647,8.295116],[2.104080,-3.264868,7.495636,-0.906923,2.381715,5.707183,-6.252132,-7.013668,5.485404,-5.528584],[3.077550,0.065685,2.001961,1.226039,-2.230419,3.627504,1.023950,7.719669,4.154764,1.046438],[3.526081,-6.903250,-0.332262,-9.209357,-4.595923,1.341430,-7.667420,-6.380612,-3.488787,2.375250],[5.392975,-1.128054,-1.374246,8.515890,9.046421,6.569184,2.959863,4.729465,-7.415430,3.481376],[-3.202050,-1.038683,-0.989853,-2.192795,-1.471881,2.583714,-4.646831,-6.943567,3.572734,-1.176631],[4.833584,-8.742651,2.992022,-5.692703,0.940418,2.196804,-8.463674,4.289480,-2.517043,2.324591],[8.829062,-5.961373,-5.457191,-6.550778,9.930809,6.951146,-6.799666,6.168797,4.351933,0.074306],[-4.663898,-4.499425,-9.088157,5.711305,6.572937,-0.024646,8.295473,-9.525015,4.682088,-5.139412],[2.722944,1.653359,8.318146,-2.908977,2.934333,5.954388,-9.201267,-9.060602,8.871359,8.426786],[4.745085,9.267907,8.045274,-3.722498,8.536859,0.285266,-2.971697,-5.323936,1.275823,-2.726275],[1.329941,-2.828471,7.781639,-2.430477,-9.568245,7.793151,1.539001,4.000401,-5.379831,-0.632036],[-6.940481,2.543605,-5.530433,-0.551747,-2.748297,-7.069842,-1.222485,0.816995,-5.185225,2.301978]],[[6.059733,-5.674516,6.557852,6.949604,4.076872,4.332081,8.627988,9.497631,3.473503,-2.660214],[-7.073046,7.034494,3.099055,1.664099,-9.998705,4.739363,0.717759,0.133316,4.420838,1.911755],[-5.609694,-6.014824,1.338129,1.343728,2.772296,-0.383285,8.646949,-6.830435,-5.762685,-4.961700],[-6.132938,-3.462255,2.423493,9.361956,7.815845,3.423196,6.111554,8.552088,6.482753,2.447782],[-8.599201,9.757976,2.560933,0.868045,6.580030,8.094880,2.633714,4.868624,1.020217,8.424279],[5.484120,-6.616277,-4.110198,4.322955,-1.652741,-3.931637,-7.055144,-4.394081,5.157336,7.560849],[4.924691,4.310129,3.895551,0.385746,5.763051,0.897540,-9.843192,5.185875,4.620835,-2.837810],[-6.588085,1.297760,-7.520942,-9.916775,2.641685,-7.502395,-1.098612,0.202576,6.927429,-1.745818],[1.904851,4.822862,4.036287,-8.189032,-2.012538,7.106836,1.152556,5.304128,-6.948274,0.123620],[-5.728710,9.022426,5.213352,-0.648705,1.109757,1.281718,-5.546763,-0.856498,-1.130149,-3.220780],[-7.551231,2.757509,-0.963000,9.815702,-2.832630,-9.598625,4.970286,-6.781546,-1.912004,9.116342],[6.391006,-1.935010,9.658989,-6.294187,0.130392,-2.839667,-7.120397,5.414409,3.276022,2.820084],[-9.307181,-9.170079,7.511310,-7.007349,4.341785,-4.781554,0.634768,-6.729933,9.506708,-0.925536],[6.026900,-7.361255,-2.494011,0.634553,2.344419,1.484564,-8.115594,9.807986,-6.554694,-7.799869],[6.337802,7.676036,0.815837,1.263673,-7.951709,-1.764796,1.562777,3.114789,-7.489096,8.815730]],[[7.730865,8.397268,-0.079512,-5.069223,6.448721,-2.646122,7.014113,4.752795,7.584330,6.366853],[-4.209217,8.733598,7.890875,9.365428,3.662643,6.913219,8.955996,5.230054,9.793427,0.186678],[-0.107723,5.970675,8.421048,-8.736887,0.760526,-5.956492,6.455306,2.541342,-9.692349,3.935587],[4.643171,-9.558512,2.597084,-7.239730,0.931646,6.723850,7.209380,9.538716,9.365348,3.811801],[-0.924045,-3.271958,-7.608229,-5.590275,-7.264315,-9.868589,-6.580042,6.967168,-5.296301,-8.409885],[6.778008,3.733127,-5.343343,8.192062,4.695798,-0.444019,-0.539310,4.018156,3.861611,5.312945],[8.063053,1.363916,-5.352876,-2.849576,8.489153,5.071333,-3.832336,3.284108,8.642823,9.648536],[-2.705608,-1.459862,-1.441723,6.240121,6.140816,-7.489592,-9.991609,-5.353296,-6.802698,-8.282327],[0.517284,-7.679257,-3.964182,-2.244255,-5.090783,-5.384378,-3.241342,9.809428,2.674596,-3.986138],[6.818082,5.272046,-8.283694,-5.941821,-7.800074,-4.392439,-9.161017,-5.613170,7.555341,6.976117],[-6.928771,-0.429985,-0.736131,9.916622,-5.584714,4.068069,-3.204855,9.391339,-5.909996,6.609550],[-0.445362,7.539177,-1.161010,-4.651853,-2.603865,3.996759,3.399662,0.879494,0.611646,1.632976],[-6.825812,8.482684,-0.239985,-1.113393,9.335952,7.165795,9.410234,-7.404813,-8.056183,1.818973],[-8.102629,7.539212,-9.898634,-7.521945,-9.470792,5.679462,-9.555205,5.277604,-9.941091,5.576273],[-1.293203,2.530065,6.386111,2.314275,-3.149694,5.349935,-7.086114,4.019037,2.873920,-0.645357]],[[4.880499,7.033186,0.042245,-6.110550,-1.180697,3.996517,1.947801,-6.904577,-5.766413,-7.565437],[6.914656,-9.165914,5.182330,-3.020220,5.184250,-4.853855,1.684395,-5.638105,-7.237003,-4.519131],[-7.217777,2.020283,-5.744863,9.487853,-9.889930,-3.986433,3.867622,4.239296,-2.989377,7.670727],[-9.619624,-0.833815,7.276167,-2.054032,-3.235500,-2.511094,-6.664334,-5.569652,-3.455205,-9.409772],[8.987322,-6.675145,3.374492,0.335691,0.657796,2.797647,-7.419528,5.849288,-6.031640,-1.816618],[-6.162771,7.161769,-7.067693,-4.988259,2.981373,0.340572,9.496770,8.177004,9.100137,-2.823083],[-0.384619,0.506387,0.716060,-4.068013,-4.788241,-1.468071,-2.970937,-9.712687,0.270563,1.954635],[8.653255,-1.253757,-3.704664,7.593562,-2.190574,-8.554572,5.439011,-5.366092,1.140454,-0.351303],[0.748657,-9.840425,-7.830085,-5.692501,9.315141,3.815562,7.888733,6.728669,3.513424,2.937060],[-1.858923,-5.210369,2.511876,6.147206,-3.981247,6.211779,-9.012794,4.230166,-8.779809,5.092913],[3.225576,-0.104170,-8.492857,-7.353284,-6.747575,0.016926,9.477664,-2.718509,-6.243273,1.249943],[9.268209,-9.885328,4.957858,-3.239943,-1.585789,4.257910,-5.326288,-8.132884,-7.230013,0.306627],[-5.106099,6.319692,-9.332861,0.480335,6.597390,2.932014,4.957949,5.309202,1.555254,-1.023741],[1.580182,9.284022,0.337832,-7.399046,-1.369657,-6.092762,-4.034461,1.000743,9.512111,-9.064828],[7.567534,2.350647,6.505408,8.039658,-3.651937,-0.779327,-8.916337,-7.293207,1.986791,3.348006]]], dtype = "float64")#candidate|7321|(11, 15, 10)|const|float64
bop_7322 = relay.less(call_7293.astype('bool'), relay.reshape(const_7321.astype('bool'), relay.shape_of(call_7293))) # shape=(11, 15, 10)
bop_7325 = relay.less(call_7294.astype('bool'), relay.reshape(const_7321.astype('bool'), relay.shape_of(call_7294))) # shape=(11, 15, 10)
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
const_7332 = relay.const([False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True], dtype = "bool")#candidate|7332|(224,)|const|bool
call_7331 = relay.TupleGetItem(func_2606_call(relay.reshape(const_7332.astype('bool'), [224,])), 1)
call_7333 = relay.TupleGetItem(func_2609_call(relay.reshape(const_7332.astype('bool'), [224,])), 1)
func_595_call = mod.get_global_var('func_595')
func_598_call = mutated_mod.get_global_var('func_598')
var_7350 = relay.var("var_7350", dtype = "bool", shape = ())#candidate|7350|()|var|bool
call_7349 = func_595_call(relay.reshape(var_7350.astype('bool'), []))
call_7351 = func_595_call(relay.reshape(var_7350.astype('bool'), []))
output = relay.Tuple([call_7304,bop_7322,call_7331,const_7332,call_7349,var_7350,])
output2 = relay.Tuple([call_7305,bop_7325,call_7333,const_7332,call_7351,var_7350,])
func_7363 = relay.Function([var_7350,], output)
mod['func_7363'] = func_7363
mod = relay.transform.InferType()(mod)
mutated_mod['func_7363'] = func_7363
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7364 = relay.var("var_7364", dtype = "bool", shape = ())#candidate|7364|()|var|bool
func_7363_call = mutated_mod.get_global_var('func_7363')
call_7365 = func_7363_call(var_7364)
output = call_7365
func_7366 = relay.Function([var_7364], output)
mutated_mod['func_7366'] = func_7366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2893_call = mod.get_global_var('func_2893')
func_2894_call = mutated_mod.get_global_var('func_2894')
call_7380 = func_2893_call()
call_7381 = func_2893_call()
func_2606_call = mod.get_global_var('func_2606')
func_2609_call = mutated_mod.get_global_var('func_2609')
var_7393 = relay.var("var_7393", dtype = "bool", shape = (224,))#candidate|7393|(224,)|var|bool
call_7392 = relay.TupleGetItem(func_2606_call(relay.reshape(var_7393.astype('bool'), [224,])), 0)
call_7394 = relay.TupleGetItem(func_2609_call(relay.reshape(var_7393.astype('bool'), [224,])), 0)
func_3088_call = mod.get_global_var('func_3088')
func_3090_call = mutated_mod.get_global_var('func_3090')
call_7396 = relay.TupleGetItem(func_3088_call(), 0)
call_7397 = relay.TupleGetItem(func_3090_call(), 0)
func_5448_call = mod.get_global_var('func_5448')
func_5450_call = mutated_mod.get_global_var('func_5450')
call_7399 = func_5448_call()
call_7400 = func_5448_call()
func_4732_call = mod.get_global_var('func_4732')
func_4735_call = mutated_mod.get_global_var('func_4735')
var_7408 = relay.var("var_7408", dtype = "float64", shape = (320,))#candidate|7408|(320,)|var|float64
call_7407 = relay.TupleGetItem(func_4732_call(relay.reshape(var_7408.astype('float64'), [10, 2, 16]), relay.reshape(var_7408.astype('float64'), [10, 2, 16]), ), 2)
call_7409 = relay.TupleGetItem(func_4735_call(relay.reshape(var_7408.astype('float64'), [10, 2, 16]), relay.reshape(var_7408.astype('float64'), [10, 2, 16]), ), 2)
uop_7417 = relay.cosh(call_7396.astype('float32')) # shape=(11, 15, 10)
uop_7419 = relay.cosh(call_7397.astype('float32')) # shape=(11, 15, 10)
func_5654_call = mod.get_global_var('func_5654')
func_5655_call = mutated_mod.get_global_var('func_5655')
call_7422 = func_5654_call()
call_7423 = func_5654_call()
output = relay.Tuple([call_7380,call_7392,var_7393,call_7399,call_7407,var_7408,uop_7417,call_7422,])
output2 = relay.Tuple([call_7381,call_7394,var_7393,call_7400,call_7409,var_7408,uop_7419,call_7423,])
func_7432 = relay.Function([var_7393,var_7408,], output)
mod['func_7432'] = func_7432
mod = relay.transform.InferType()(mod)
var_7433 = relay.var("var_7433", dtype = "bool", shape = (224,))#candidate|7433|(224,)|var|bool
var_7434 = relay.var("var_7434", dtype = "float64", shape = (320,))#candidate|7434|(320,)|var|float64
output = func_7432(var_7433,var_7434,)
func_7435 = relay.Function([var_7433,var_7434,], output)
mutated_mod['func_7435'] = func_7435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7457 = relay.var("var_7457", dtype = "float64", shape = (5, 10, 15))#candidate|7457|(5, 10, 15)|var|float64
uop_7458 = relay.acos(var_7457.astype('float64')) # shape=(5, 10, 15)
output = relay.Tuple([uop_7458,])
output2 = relay.Tuple([uop_7458,])
func_7462 = relay.Function([var_7457,], output)
mod['func_7462'] = func_7462
mod = relay.transform.InferType()(mod)
var_7463 = relay.var("var_7463", dtype = "float64", shape = (5, 10, 15))#candidate|7463|(5, 10, 15)|var|float64
output = func_7462(var_7463)
func_7464 = relay.Function([var_7463], output)
mutated_mod['func_7464'] = func_7464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7466 = relay.var("var_7466", dtype = "float64", shape = (6, 7, 2))#candidate|7466|(6, 7, 2)|var|float64
uop_7467 = relay.asinh(var_7466.astype('float64')) # shape=(6, 7, 2)
uop_7479 = relay.atan(uop_7467.astype('float32')) # shape=(6, 7, 2)
func_3094_call = mod.get_global_var('func_3094')
func_3095_call = mutated_mod.get_global_var('func_3095')
call_7481 = relay.TupleGetItem(func_3094_call(), 0)
call_7482 = relay.TupleGetItem(func_3095_call(), 0)
func_3517_call = mod.get_global_var('func_3517')
func_3522_call = mutated_mod.get_global_var('func_3522')
var_7486 = relay.var("var_7486", dtype = "bool", shape = (1540,))#candidate|7486|(1540,)|var|bool
const_7487 = relay.const([2.854479,4.794904,-2.136652,-2.078689,0.536236,-1.400447,-4.571096,7.823333,9.910427,8.667270,2.355113,1.110821,-6.597883,-0.991212,-5.912284,2.648786,-6.665918,-8.506065,4.415327,8.525806,2.700630,-7.441205,5.218639,6.709305,-4.243751,3.845161,-9.549685,1.023682,-6.183546,-3.139974,-7.343505,9.401128,-4.640433,6.154886,-2.872822,8.537369,0.141356,2.642434,3.804144,7.091739,9.079737,8.531870,7.516845,-5.347362,3.359599,-6.113238,-1.491045,-6.877671,8.268929,6.450623,-7.679573,1.925957,-9.101086,-8.598048,-1.152682,-4.374274,6.107624,0.107624,-9.638289,-7.033877,-0.423702,3.447888,-0.673578,-3.477718,-1.141591,0.435748,-6.533916,-4.644914,5.687953,-7.569399,-8.927826,7.753783,-3.673555,-9.001310,0.580228,-3.758064,-0.352013,-4.305134,1.056200,-4.696287,-7.713828,5.042627,5.378799,-7.736975,-3.446898,-9.831621,0.022216,-4.285014,-5.964385,-5.990759,-7.491005,5.969636,5.050126,1.231707,-2.908891,-8.549747,-7.529925,8.061780,7.833552,-6.162007,-4.513673,-6.813449,5.936220,-7.146468,2.995521,3.393474,8.851737,-3.476825,-4.333148,-7.229346,-0.501691,-4.119503,-6.675497,-8.361665,5.012620,0.998372,8.699422,5.355048,2.189115,-3.530351,-8.335938,-4.274907,-3.034406,-3.252155,-9.505730,-8.726643,4.473743,7.152768,-8.711065,6.340962], dtype = "float64")#candidate|7487|(130,)|const|float64
const_7488 = relay.const([True,False,False,False,False,False,True,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,False,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,False,False,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,True], dtype = "bool")#candidate|7488|(224,)|const|bool
call_7485 = relay.TupleGetItem(func_3517_call(relay.reshape(var_7486.astype('bool'), [14, 10, 11]), relay.reshape(const_7487.astype('float64'), [130,]), relay.reshape(const_7488.astype('bool'), [112, 2]), ), 2)
call_7489 = relay.TupleGetItem(func_3522_call(relay.reshape(var_7486.astype('bool'), [14, 10, 11]), relay.reshape(const_7487.astype('float64'), [130,]), relay.reshape(const_7488.astype('bool'), [112, 2]), ), 2)
func_5119_call = mod.get_global_var('func_5119')
func_5122_call = mutated_mod.get_global_var('func_5122')
const_7494 = relay.const([-1.176219,-7.782638,9.286484,0.950981,4.661987,-9.149481,2.902192,-4.551401,1.176873,-9.607261,-7.575832,-2.018747,7.339919,6.299124,5.064279,-2.144480,5.868328,8.792785,-0.515337,-5.847362,6.983992,2.770000,-3.564714,-0.982289,-0.097490,-1.785869,-2.637361,5.648971,3.927455,-1.558420,9.821339,5.766997,9.453115,-2.031956,6.786679,7.244558,4.280599,0.718508,8.254886,3.021061,9.499381,-2.780827,-2.422639,3.358743,0.117272,-1.628370,-7.696150,1.614607,-7.985096,9.284474,3.505895,-3.363097,-6.299214,-3.589278,6.361608,5.103776,2.228777,-7.589440,-2.572749,-9.861399,6.875713,-1.426805,-8.558525,8.507077,2.451893,-4.353354,-8.278713,6.045146,2.786660,-0.861619,9.348302,6.824357,2.743769,3.700172,9.918386,0.102699,-0.539138,8.980416,-5.312736,-5.937340,9.739706,-8.775390,9.530292,-9.269010,7.535046,-2.828266,3.124839,1.427767,6.257430,-7.996618,-6.666953,-5.593925,0.107473,7.900159,-9.207145,-3.947040,8.902080,0.248485,-3.186187,3.740083,-2.351851,9.815011,0.161624,8.336233,6.752838,1.763113,1.667669,-9.082774,4.752889,-2.505825,0.516983,-3.677163,3.485553,-8.124586,3.542004,4.131565,4.762503,0.349093,-2.346019,7.388943,-5.180599,0.756377,-0.231081,3.813405,-6.154706,-6.545827,-1.248184,-4.657299,-8.223020,0.365177,-1.823736,-3.139070,5.339822,-6.110094,-0.599649,7.283046,-0.855855,-4.163882,5.283090,3.620706,-3.479508,2.455534,-4.413636,-7.249418,-1.647493,-5.976549,4.425008,-4.823192,5.886767,-0.478828,5.697341,-4.846828,-5.010055,-1.521464,-0.379019,2.815346,2.845204,0.050762,-8.260624,3.145227,-9.488038,3.680726,-9.425363,-2.006639,-3.605559,4.872084,0.893658,-2.360832,-1.052834,1.867273,-7.928084,4.809829,4.635667,5.156218,6.137867,0.243621,-3.392864,0.879800,-0.910938,-7.017315,-5.399772,-7.604174,-8.927943,5.672772,-6.518522,8.485471,-6.572535,-7.183677,-0.983116,2.382861,-9.611415,1.342744,-1.082743,0.624563,-3.832196,1.263443,3.540991,-5.890413,-3.890061,3.680962,-4.218255,4.901555,5.160922,1.361132,7.033433,0.582593,0.412323,2.807620,9.002414,-4.399581,-1.455049,-2.373518,-3.843271,5.902626,3.842014,9.322704,-5.245245,-8.214429,-8.982078,9.705880,-6.950245,-9.160594,0.804072,1.428721,-1.926714,-6.673453,-8.481813,3.617364,-3.605666,3.678581,7.657534,0.984644,-1.814865,8.971203,6.492134,-3.748105,-8.158762,2.655365,-2.047915,-3.760837,7.026759,-8.358863,-8.589387,-6.389148,-9.374915,-3.957290,-1.894399,4.468974,7.068446,8.718084,4.566306,-9.315474,-1.219184,7.957709,5.249369,-9.752829,0.452516,-1.667140,-5.860478,-1.665856,-4.544835,-5.898634,-2.454800,1.497680,-8.161630,9.991242,9.314475,5.258019,8.787363,-5.296765,4.685118,5.537758,4.873578,-8.511682,-0.715444,3.148134,5.384799,7.876367,3.881416,8.900885,-5.398339,-0.489553,-1.680676,8.863619,-1.018087,-2.152826,-8.983017,-8.037384,0.928445,0.472806,0.398524,2.786908,-7.738527,6.469570,7.309884,-0.168683,0.696893,6.714180,-1.355867,7.685863,0.734883,-5.214976,-3.502387,7.114483,9.774143,5.978688,4.723064,5.253326,-2.004209,-1.204310,0.938201,8.171683,0.578794,0.753933,7.057100,-0.405510,-1.395825,7.506312,-2.421264,5.922235,3.463775,-8.962965,2.212952,5.569189,-3.093822,8.163311,-0.015834,-2.992026,-0.025827,3.119670,8.458398,-6.859753,8.790550,-3.190702,-5.776843,4.659291,-1.235491,5.624686,-8.017108,5.452299,-3.552869,-2.063300,5.596648,-3.015884,-3.470083,-9.811592,8.571444,-8.079363,-9.808519,-1.762486,-3.764023,-0.397287,-6.547283,-1.917603,-8.752792,5.126742,-7.863095,0.035200,3.614398,6.576291,-5.863658,1.164325,-3.863355,-7.498788,-3.609126,-8.417152,-7.733496,3.278194,-7.652219,8.031255,-3.301496,0.938566,7.794613,-8.479788,-1.584188,-7.683822,8.460106,-1.865729,1.958310,-9.666854,-6.188786,-7.210010,-7.788857,1.745794,5.474142,7.105115,2.932025,9.388807,-6.340726,3.394530,7.573914,5.185328,0.546133,8.850347,-8.185184,-5.356351,-6.906696,1.807934,3.599182,1.934643,-4.211535,-0.063136,3.300010,-0.332939,1.010834,-6.210100,2.029310,-0.603078,1.786759,-3.633925,8.544103,-5.774199,5.468429,-1.335139,-0.230046,-8.479074,1.276391,0.228239,-8.307669,-2.713988,4.281315,-8.110177,-6.085791,-1.315218,-9.533336,2.715762,4.713349,9.517109,1.452580,3.797694,6.266003,-9.172189,-5.595431,6.828339,5.885069,9.695856,-7.273745,-1.222898,-0.303944,7.953276,4.267463,-6.118950,-9.325943,8.073367,-2.642149,-6.037445,-3.562237,-2.084051,-8.663450,8.995898,6.725825,-9.330365,7.325167,-7.995896,6.205028,-1.502623,-2.061962,-2.447339,9.703217,-2.570111,-4.713820,2.913559,-6.098363,-0.266347,-5.253355,-5.063440,-3.916921,7.653166,6.145285,6.964676,5.597297,0.281188,-6.501256,9.567214,-0.726844,4.454072,-1.826460,4.353117,-8.498317,5.914003,-6.990863,-5.476952,-5.143025,-1.049164,7.668135,4.464854,4.583768,-1.566275,-2.901366,6.895036,-0.852152,2.526043,-1.751369,5.170210,-0.812702,9.604143,-1.013090,0.383250,5.657833,2.050505,6.981665,-7.393113,5.294961,3.963794,-5.324622,-3.350562,4.305730,7.125582,4.364264,0.642123,3.247654,-2.142613,-5.182858,-4.109405,4.638963,9.036787,-1.822152,4.645620,-7.985899,6.170162,-9.521768,5.957803,-7.657688,9.936868,9.317006,5.284590,5.643410,2.552828,-7.223534,3.927213,9.009863,-3.067384,-9.384898,9.763013,-2.576408,9.090408,5.095809,3.824421,1.680244,6.697177,3.846995,6.258631,-9.653884,-3.657857,5.688641,-8.383188,-3.169061,-2.553469,-3.903237,-0.045521,9.514725,5.475511,-2.694128,-4.768258,3.388069,9.345178,-0.045932,2.594037,0.855811,5.913878,-3.036262,3.460727,0.367305,0.768405,9.241984,-0.471841,-6.618145,6.845341,-6.186123,-3.017274,0.114261,-9.407169,1.532154,-4.737495,-5.959256,1.904965,0.511467,5.586143,-1.009262,2.208268,-2.628202,-3.798440,5.513873,-9.198278,0.043493,-1.469188,-9.070271,9.635071,-6.386124,-6.254033,9.943757,1.395766,-9.983670,1.550290,-3.006746,-0.191002,9.795849,5.976348,2.871648,-5.444989,-6.769775,0.823448,-2.073999,-7.267310,6.506670,1.926052,-7.012824,3.755155,2.381797,-7.660729,6.339793,8.843663,9.256199,-4.711706,-6.965595,-7.704411,6.044633,8.657548,-7.603487,-6.092788,-3.180874,-4.280386,2.202242,0.954810,2.974789,-7.049248,-3.085523,8.342456,-4.251320,-9.873877,-7.190040,5.653537,1.931899,5.629434,4.709615,6.287264,4.240246,-7.787317,0.354530,-2.476689,0.847639,-7.871349,-4.266615,-5.479970,0.379178,8.072742,2.448459,3.044848,8.124694,-7.369563,-5.560040,-8.768142,6.334433,-2.080516,-6.052197,3.144504,9.513511,1.603973,1.340741,-7.304647,5.681006,9.065062,6.371893,6.895771,1.270585,6.087393,9.565141,-9.829920,-7.100768,7.327890,6.592059,5.141606,-6.762014,-1.322936,-9.151522,-1.997496,-6.721876,-2.482596,-2.822552,-9.790628,5.435742,-1.542298,0.998342,5.505008,6.057724,-3.095317,-8.336181,-7.424388,-8.751214,-6.880177,8.602147,-6.011522,-7.299883,1.821572,-8.907643,1.368227,2.636723,-7.067005,-5.458408,1.853128,5.181137,-5.368016,7.135008,-7.320010,0.354581,-7.675454,-4.972730,-7.249165,6.081381,3.073442,2.392405,9.894229,-8.063130,5.298130,4.771765,9.436303,-2.991433,-1.215507,-3.202028,7.157467,-8.452070,-4.962071,3.435342,8.789176,2.380556,-8.059378,9.803687,0.952064,-6.116949,-4.872368,9.650084,-5.423987,6.737620,6.180227,2.704857,0.209230,-7.423962,-4.623963,-7.821459,-4.438273,9.510991,-1.909368,-5.059470,-1.345446,-6.785762,3.870532,-8.461082,5.076614,-5.199846,0.409729,-4.060369,1.547615,7.201996,-7.292319,-4.590530,0.758147,7.175099,-5.308773,9.140676,-6.015896,-1.556094,-9.280446,7.008205,-4.191242,-6.808177,-8.911743,6.097195,-9.001668,7.749150,-9.335063,3.454088,5.299185,-8.102857,2.305227,5.297188,0.041377,8.335048,-1.086453,-2.843294,-5.410636,3.248554,8.070479,3.669134,9.350466,-3.045860,-0.516525,6.256101,-3.663726,9.637473,0.508196,-8.212049,-3.277719,-1.561476,-0.690033,-5.302842,-8.046837,7.066347,-0.327198,8.914027,-4.081170,5.110123,8.191578,-7.621038,-9.119589,5.487534,-6.196172,2.587665,3.535648,-5.771331,-3.201344,4.157741,-1.954644,-2.176409,0.060356,-4.615331,6.265303,-5.843464,-9.146935,-0.929487,-5.079733,-3.061345,9.386339,-1.440727,-9.992853,6.322432,5.119897,3.280551,5.410319,-6.808353,2.017391,-7.116340,-1.112973,1.868263,-4.586496,-2.244500,-9.212286,4.318357,-1.364225,-4.807448,-5.890337,4.902031,-9.567131,4.968030,-8.324990,-7.194451,-3.953822,-9.481546,9.391688,4.261112,8.134853,8.390699,1.387040,-5.166089,-4.190381,-0.061481,-9.000755,-0.860377,-0.277152,-6.870621,4.144354,-3.956733,-1.447505,-6.191167,-7.649086,0.311240,2.961970,2.275421,0.158067,-0.057310,5.816869,7.841061,-1.645965,-9.319779,0.069112,7.054233,-1.529172,6.994481,-3.019834,-9.776951,9.869820,9.692338,-5.137988,3.839612,-7.210784,1.924015,-2.026574,2.232971,-2.968965,6.124156,-2.811489,-2.727337,-1.939996,6.590487,-5.816166,-5.878233,0.824104,-1.069574,-3.263580,-7.187737,-6.872735,-9.322132,-8.574984,2.340376,-4.093801,-5.858047,-3.634049,0.107834,-1.555432,1.696439,-0.787435,6.013887,9.336240,-9.537088,8.137782,-8.269097,-8.199008,1.917646,-9.337254,-6.253180,4.551430,-3.754232,3.199709,2.985635,-9.669593,-2.980297,-8.846044,0.325228,-9.299495,5.503159,-9.164379,1.445902,7.617850,8.442735,0.782454,-4.896501,-1.668485,-8.469661,-8.014167,-3.122843,5.398239,2.830891,-0.621989,1.151078,-2.049230,-3.759702,1.441277,-9.686038,-2.343949,-1.322766,7.832994,0.971685,1.665627,3.308702,9.508110,8.779473,0.189098,-3.719281,4.842422,-0.079092,-9.046051,-5.381289,-6.091625,-5.915282,-3.497594,-4.823309,6.269968,8.388259,-3.763363,-5.872537,-8.031493,-3.187336,6.077434,0.554818,-4.884672,-3.483104,8.639754,-9.056996,9.676796,-5.268295,-2.246950,1.835748,-1.587860,-3.972187,-6.135724,-0.720052,-4.229577,-6.819533,1.119906,-0.697394,4.859043,1.103558,8.079507,-8.671483,-1.171552,-1.607768,1.464794,0.140113,7.849393,-8.728057,-3.222652,-9.921286,7.605650,-8.144642,4.387156,6.318590,-6.704960,1.937281,-6.769651,-2.765555,-3.507619,2.688662,6.358970,-8.574987,4.250479,-8.462928,1.515057,-9.481411,4.503306,-0.357452,-3.297043,5.216491,-7.397103,-7.016632,-8.843842,9.149816,-8.948739,-1.205677,1.825142,-7.925013,-5.283827,4.609046,1.098250,-2.297138,-8.312752,7.021359,-3.150788,0.272694,0.912703,-5.662827,6.325069,3.166800,-1.866280,7.590831,-3.117768,-8.311169,-5.908283,-0.280992,-3.336620,-3.533571,6.582137,6.431669,-2.177932,-0.374462,-0.241393,1.444660,1.654129,7.298841,-4.400161,2.866465,-1.497706,6.703007,6.460224,9.663955,3.806552,3.433526,1.286829,-1.755060,1.549738,-5.142540,4.040725,8.615194,-6.107934,9.509995,0.977775,0.030966,-0.195523,-2.331537,-7.873116,0.603171,6.688986,9.932497,7.984608,-4.593955,-6.331219,3.112699,-8.385832,-0.101735,0.420901,-8.492679,9.873067,2.629424,-0.487212,5.422094,6.356910,-7.086585,3.405012,2.963010,-1.301041,-7.285850,-7.313060,-1.021266,-6.625398,3.368804,-9.606256,2.678317,8.772483,-5.013855,-8.527515,0.280672,-3.704413,2.785986,0.599639,0.501937,-6.271698,-3.321149,8.982288,-3.431564,-3.760238,7.788724,0.834807,-2.697544,4.191772,-5.073913,-1.453993,3.599971,-7.898213,1.490646,-0.529978,8.678947,-9.006947,8.975973,-1.460031,9.080950,-9.045114,-8.699190,8.544290,-0.127547,3.990379,8.348906,-9.065610,-6.456682,6.392713,-3.773501,-8.665176,-9.530017,-6.287697,-3.216597,1.742070,8.299088,4.773415,1.345608,-0.407709,9.624932,5.050553,2.773595,-6.638607,-7.205938,2.263382,5.945443,-4.445372,-5.695538,1.800586,6.651516,5.345491,-5.724336,-3.139368,6.034461,-1.655247,-4.298409,7.698983,5.381902,-8.175584,1.954128,8.534721,3.059779,6.949477,-0.812707,5.398121,8.331508,-3.359503,0.812847,-6.882590,4.163202,4.808876,-0.004446,0.053278,-8.885032,1.066636,-6.538119,-4.190316,-9.807007,2.457025,6.954216,-4.422073,8.306840,-4.096591,-7.189336,-6.227496,6.497671,2.029647,-9.956959,-7.960514,-2.851970,3.653460,-1.462313,3.494987,9.897092,7.286976,0.334460,7.732657,-9.192190,9.880789,-4.516837,-5.180944,9.858491,0.473001,-5.235669,9.580459,2.737561,0.549361,-0.432022,-4.188616,-8.718021,-4.658648,-1.283373,-5.269441,-6.496825,6.149590,7.529957,-7.989889,4.165254,3.113386,8.041463,8.410198,9.385052,-8.891061,6.032253,9.134778,-0.059740,8.208946,9.799378,7.202112,7.998432,7.424855,-1.311843,3.073357,8.114125,-4.695932,4.170945,-4.728117,-4.293694,2.350370,6.937779,2.754536,-4.322548,-8.307748,3.983603,9.254203,-9.235824,5.776538,8.463533,6.334638,3.872940,2.665133,5.261849,9.436053,2.147795,7.946332,3.748950,-9.019587,3.928136,-9.818629,3.119417,5.100170,-8.401821,-0.566943,5.822399,-9.337950,1.451692,-9.045671,5.893281,6.610023,-8.466138,-4.697126,8.784673,9.713766,7.505490,2.812875,-1.262958,2.242312,-4.835105,-5.358827,5.031095,-7.077501,-6.377158,9.091872,7.636181,-9.932403,4.695069,9.589602,-0.652007,8.577790,-2.619060,-4.730445,0.467368,1.052395,7.647559,3.445805,9.187811,-1.606447,-3.030407,2.761010,-8.140742,5.330773,-8.712347,-4.349226,-1.211254,7.915427,4.893564,6.724501,3.843182,-2.600181,-0.878157,7.151483,2.064052,6.405896,4.423309,3.106422,4.573779,9.671178,-4.483707,-5.151801,1.960628,9.800629,2.607679,9.211060,-4.918328,4.206348,1.015973,-2.204235,-5.653057,6.414733,-7.014787,7.910485,4.434003,-3.099409,2.650874,-9.882622,-8.950450,5.740117,-8.593430,-9.242491,-9.978290,2.864277,-8.505041,-8.523625,-8.907279,-3.530855,6.888470,-0.321083,-3.798672,-1.600182,6.611411,-2.997864,-1.098027,9.939050,-4.956430,2.151145,3.799181,-8.410966,-8.673470,0.706248,-9.908548,-3.585395,6.141213,0.928357,9.353848,3.315487,-1.692261,-7.444885,0.683632,-3.648290,0.307686,-7.605836,-1.025366,-5.782110,-3.005136,3.319406,4.109879,-0.580174,-8.844643,-7.513862,1.251118,-1.382899,5.786308,-2.278938,-0.821452,-9.771388,6.120491,1.884308,2.566725,-9.796716,9.557160,2.189387,5.604239,6.741941,4.597925,4.521640,-8.623400,-3.310587,-4.028692,-8.501047,8.471856,-2.101633,-0.015925,4.794849,5.168468,0.487885,9.628669,7.729520,-8.629314,1.784322,-8.686029,-1.549355,-6.396428,-1.936068,8.488490,-9.552342,9.075418,0.702905,-1.088966,-5.234545,9.607201,-0.092598,-9.033763,3.258446,-9.238970,-4.606231,-7.184888,5.046407,2.642360,6.527071,9.535364,-0.784919,2.656487,-4.122307,-5.268002,2.248628,-9.295686,-7.247521,-3.929088,2.768825,-5.971549,5.531859,-2.421695,-9.237780,8.761081,-0.919867,5.979137,3.146052,5.138196,-1.581669,-1.681029,5.223497,6.142442,1.131478,2.605739,-1.431345,-3.336304,-7.072842,5.557354,4.141559,4.584889,9.900311,-4.238829,8.978787,-8.681835,2.427464,7.121250,6.680746,-2.244197,-2.316322,3.136709,-1.762062,0.143549,-1.714951,3.418353,7.676133,4.681374,7.011835,3.564632,1.085751,-0.091648,0.668583,9.069700,-3.803666,1.733066,-6.056342,5.728868,8.774403,8.736701,3.406084,8.666297,4.497921,4.981089,-3.794021,1.175951,-4.334627,-7.038448,-5.605709,-2.282983,2.131793,8.965472,-4.570445,-0.161620,1.847447,0.887938,-5.253439,5.517737,-3.848135,-4.700465,-3.748114,-2.905326,8.002477,-9.701385,9.089078,-4.116656,-4.480975,-6.541305,3.450719,-2.685203,-7.917706,2.681325,-6.789141,3.908258,-5.607697,5.032100,6.351791,1.249173,-6.766621,-7.795806,4.922904,6.249994,9.812621,-6.948562,-6.280013,0.461913,1.736509,-3.282923,-0.207749,-4.619346,8.095420,1.518984,8.907877,-7.652834,-5.125950,8.920139,0.269885,2.706810,-4.456057,5.948899,4.672735,-2.449756,-1.215554,-0.514767,-8.806069,9.913785,7.358085,-3.747976,8.570124,-8.295705,-0.954796,0.685465,-6.101921,-4.459941,7.187574,-2.163993,-8.700425,4.327718,9.737708,5.231125,-7.911028,5.162914,8.603191,-0.606782,-4.448554,-1.087755,2.634654,1.481245,8.871078,-6.650970,9.208274,2.032664,8.266948,-7.246656,-1.552112,-3.860199,-3.354808,-1.960701,-6.685266,8.286685,-1.844716,4.334847,5.036818,1.440560,-5.696120,6.359963,-0.965990,8.766788,8.007757,-9.998380,-6.554762,-1.726599,1.002086,-6.179063,-0.417711,-6.450261,-0.247899,-4.696023,-6.305584,-8.008094,1.888132,2.638307,-3.364980,-8.247776,-2.986191,4.784958,7.192410,-8.986550,8.531678,-4.222088,-4.250699,-9.476679,-8.144713,-4.515172,-0.094171,8.017259,7.043714,-0.204328,-0.023689,5.917709,2.862653,8.489775,7.626928,1.310269,-8.683562,-6.147556,5.846832,1.083506,9.308780,-3.241984,-4.589578,5.458047,-1.152052,1.330130,-7.494668,-6.714956,-5.811405,2.830777,3.875161,-0.811081,-3.576620,-6.881348,0.939196,-7.500685,0.322339,-1.386335,-4.997446,0.909620,9.258800,2.993932,-4.781205,-4.620778,5.614678,-2.039346,-8.661447,2.764597,1.658605,-1.888222,1.203687,0.287228,-9.527018,5.031360,0.034753,8.149558,6.950982,9.769895,-7.957176,-0.162505,8.691546,-0.443974,7.296396,-9.473399,8.527357,5.488010,7.368192,-7.410377,5.936089,9.810042,-6.277512,0.040892,6.613877,6.071398,-2.359492,-8.420803,-1.073489,-6.271188,-4.990187,-7.434732,4.430806,-3.561120,-9.718320,-9.115497,-9.983710,2.789662,5.081004,0.269940,1.391303,-3.242204,-0.273221,3.061586,-6.290820,5.732159,-8.421953,-9.260553,9.472436,4.672430,4.673097,7.126255,6.208353,9.949208,-1.493656,3.137528,3.968402,5.606209,-3.198240,5.150459,-0.246703,2.217482,-2.452248,6.900287,5.400845,-2.491421,-4.788043,-0.025496,-0.421088,-5.198634,-8.346885,-2.481170,-2.260997,-9.136872,-5.701316,4.486700,-8.285201,1.738355,-2.395851,-9.823130,7.336468,7.026887,8.695226,5.547943,7.074235,-0.985416,-9.206649,1.274525,-2.830071,0.048443,6.393889,-5.627075,-4.116329,3.670284,-5.299438,-7.909746,-5.609698,8.239236,0.520128,9.313434,8.257472,3.146959,-8.577763,-0.377283,-0.301310,6.629437,-0.770965,3.597830,2.367152,0.002125,-7.872180,-4.165165,0.823918,-7.483499,-7.178575,1.690673,9.534958,6.063166,-6.429798,4.753278,-1.427256,-2.132822,-4.300193,9.140898,-0.538203,4.651603,-5.985256,9.078607,8.665227,-1.244884,1.012117,5.563663,-3.057409,-2.823085,-3.601967,4.647176,-2.162148,8.445860,5.303711,1.585777,-5.871383,1.384687,-0.203013,-7.480649,-4.452678,5.347956,4.605962,0.164153,-2.124588,-8.116526,0.651166,5.095467,0.267747,-3.159320,9.831887,9.306604,-1.946147,-0.997451,4.132604,-6.987805,3.171182,-2.566300,6.424057,1.620479,0.274342,-3.031638,3.506736,3.473472,6.740538,-1.401888,7.683256,-9.057088,-3.196272,-6.116734,1.443988,1.389146,-8.120190,2.444320,7.729349,4.738424,-6.950261,8.392928,3.129233,8.188617,-8.991775,3.465458,9.593506,9.241551,-5.222785,6.902632,4.947750,3.048466,-1.080532,3.872010,1.292528,8.707851,-5.538804,3.718820,1.514633,-6.203032,-1.909533,8.240365,6.759384,8.650605,-2.804451,-1.019744,-1.053335,0.922395,-5.453015,-1.846874,-3.199309,-5.638822,9.674947,-6.309672,-3.555995,-6.816669,1.698984,-6.834022,2.530969,-1.123513,-0.891999,6.836622,-7.863865,-5.634744,0.450247,-6.065841,-0.074998,-1.963823,9.006291,-9.689963,-9.834441,-1.333390,-0.912092,-4.605399,8.251637,0.635690,8.437769,-3.407420,9.539772,8.312039,6.927208,-2.139486,-3.342570,1.631198,-0.578494,9.499995,9.056069,-4.427215,-0.925360,5.422706,2.512241,6.766169,3.796864,8.349129,-2.532040,7.779070,-2.648485,3.738246,-6.547006,-2.091583,-5.933147,1.679052,-5.014779,2.885666,2.322254,-3.082624,4.570898,6.517056,8.050491,-1.375701,7.691902,5.356692,5.168014,-9.268648,-5.595213,-9.637142,-3.110794,-0.990261,7.976463,4.197720,-1.783459,-3.060289,-7.545908,-5.161937,-6.196995,7.225765,-6.631891,0.507301,-1.161856,3.998378,7.869348,2.915299,-9.860256,-2.575852,-6.024850,-9.260017,1.474132,-1.564157,-5.908629,0.633496,7.233005,2.584273,7.016250], dtype = "float32")#candidate|7494|(1980,)|const|float32
call_7493 = relay.TupleGetItem(func_5119_call(relay.reshape(const_7494.astype('float32'), [990, 2])), 3)
call_7495 = relay.TupleGetItem(func_5122_call(relay.reshape(const_7494.astype('float32'), [990, 2])), 3)
func_676_call = mod.get_global_var('func_676')
func_680_call = mutated_mod.get_global_var('func_680')
var_7500 = relay.var("var_7500", dtype = "float32", shape = (189,))#candidate|7500|(189,)|var|float32
call_7499 = relay.TupleGetItem(func_676_call(relay.reshape(const_7488.astype('float32'), [16, 1, 14]), relay.reshape(var_7500.astype('float32'), [189,]), ), 1)
call_7501 = relay.TupleGetItem(func_680_call(relay.reshape(const_7488.astype('float32'), [16, 1, 14]), relay.reshape(var_7500.astype('float32'), [189,]), ), 1)
output = relay.Tuple([uop_7479,call_7481,call_7485,var_7486,const_7487,const_7488,call_7493,const_7494,call_7499,var_7500,])
output2 = relay.Tuple([uop_7479,call_7482,call_7489,var_7486,const_7487,const_7488,call_7495,const_7494,call_7501,var_7500,])
func_7505 = relay.Function([var_7466,var_7486,var_7500,], output)
mod['func_7505'] = func_7505
mod = relay.transform.InferType()(mod)
var_7506 = relay.var("var_7506", dtype = "float64", shape = (6, 7, 2))#candidate|7506|(6, 7, 2)|var|float64
var_7507 = relay.var("var_7507", dtype = "bool", shape = (1540,))#candidate|7507|(1540,)|var|bool
var_7508 = relay.var("var_7508", dtype = "float32", shape = (189,))#candidate|7508|(189,)|var|float32
output = func_7505(var_7506,var_7507,var_7508,)
func_7509 = relay.Function([var_7506,var_7507,var_7508,], output)
mutated_mod['func_7509'] = func_7509
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7540 = relay.var("var_7540", dtype = "int64", shape = (14, 4, 16))#candidate|7540|(14, 4, 16)|var|int64
var_7541 = relay.var("var_7541", dtype = "int64", shape = (14, 4, 16))#candidate|7541|(14, 4, 16)|var|int64
bop_7542 = relay.multiply(var_7540.astype('int64'), relay.reshape(var_7541.astype('int64'), relay.shape_of(var_7540))) # shape=(14, 4, 16)
func_4469_call = mod.get_global_var('func_4469')
func_4473_call = mutated_mod.get_global_var('func_4473')
var_7546 = relay.var("var_7546", dtype = "int64", shape = (176,))#candidate|7546|(176,)|var|int64
var_7547 = relay.var("var_7547", dtype = "bool", shape = ())#candidate|7547|()|var|bool
call_7545 = relay.TupleGetItem(func_4469_call(relay.reshape(var_7546.astype('int64'), [176,]), relay.reshape(var_7547.astype('bool'), []), ), 5)
call_7548 = relay.TupleGetItem(func_4473_call(relay.reshape(var_7546.astype('int64'), [176,]), relay.reshape(var_7547.astype('bool'), []), ), 5)
uop_7563 = relay.erf(var_7541.astype('float64')) # shape=(14, 4, 16)
output = relay.Tuple([bop_7542,call_7545,var_7546,var_7547,uop_7563,])
output2 = relay.Tuple([bop_7542,call_7548,var_7546,var_7547,uop_7563,])
func_7575 = relay.Function([var_7540,var_7541,var_7546,var_7547,], output)
mod['func_7575'] = func_7575
mod = relay.transform.InferType()(mod)
var_7576 = relay.var("var_7576", dtype = "int64", shape = (14, 4, 16))#candidate|7576|(14, 4, 16)|var|int64
var_7577 = relay.var("var_7577", dtype = "int64", shape = (14, 4, 16))#candidate|7577|(14, 4, 16)|var|int64
var_7578 = relay.var("var_7578", dtype = "int64", shape = (176,))#candidate|7578|(176,)|var|int64
var_7579 = relay.var("var_7579", dtype = "bool", shape = ())#candidate|7579|()|var|bool
output = func_7575(var_7576,var_7577,var_7578,var_7579,)
func_7580 = relay.Function([var_7576,var_7577,var_7578,var_7579,], output)
mutated_mod['func_7580'] = func_7580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5278_call = mod.get_global_var('func_5278')
func_5279_call = mutated_mod.get_global_var('func_5279')
call_7602 = relay.TupleGetItem(func_5278_call(), 0)
call_7603 = relay.TupleGetItem(func_5279_call(), 0)
const_7607 = relay.const([[[6,3,6,6,9,9,2,6,-10,-1],[-8,10,-2,10,3,-9,5,-7,-9,-8],[-9,-4,10,-2,6,-1,-6,6,9,-7],[5,3,9,-10,-1,9,-5,10,-6,8],[-8,4,-2,-1,8,5,-7,5,6,-6],[-6,-10,-1,-8,3,-7,-5,-4,-3,7],[-6,-7,1,-8,-7,-8,1,-6,6,-9],[10,-1,-9,1,1,-3,2,-9,2,-10],[2,-2,5,5,-1,-2,10,-5,10,1],[6,10,4,1,-5,-4,10,-1,-3,-6],[-3,-7,-4,2,-10,5,8,6,-5,7],[9,-8,-9,-5,5,7,2,3,-6,-9],[-9,-4,2,-9,8,-6,9,-9,-2,1]],[[8,7,3,7,4,-8,2,2,-6,8],[8,3,9,8,-8,1,8,-5,8,2],[8,7,-4,4,9,-3,8,-6,2,8],[-2,4,-7,-3,-3,-8,-5,-2,3,10],[-10,1,-1,-6,-3,-2,5,7,9,6],[-4,-4,9,-9,-6,4,-2,-5,-6,-7],[-9,-3,7,4,-1,7,-5,4,8,6],[-10,9,7,-8,-7,1,-4,-8,-6,4],[-5,3,-1,-3,8,-3,10,-4,-6,-2],[-5,-8,-7,9,-1,1,5,7,10,-7],[1,-1,-1,-2,5,-1,4,1,-8,-7],[5,-6,-5,-8,-6,5,4,10,9,4],[3,4,5,-3,8,-1,-1,5,3,-10]]], dtype = "uint8")#candidate|7607|(2, 13, 10)|const|uint8
bop_7608 = relay.right_shift(call_7602.astype('int16'), relay.reshape(const_7607.astype('int16'), relay.shape_of(call_7602))) # shape=(2, 13, 10)
bop_7611 = relay.right_shift(call_7603.astype('int16'), relay.reshape(const_7607.astype('int16'), relay.shape_of(call_7603))) # shape=(2, 13, 10)
func_3577_call = mod.get_global_var('func_3577')
func_3580_call = mutated_mod.get_global_var('func_3580')
var_7618 = relay.var("var_7618", dtype = "bool", shape = (224,))#candidate|7618|(224,)|var|bool
call_7617 = relay.TupleGetItem(func_3577_call(relay.reshape(var_7618.astype('bool'), [224,])), 0)
call_7619 = relay.TupleGetItem(func_3580_call(relay.reshape(var_7618.astype('bool'), [224,])), 0)
func_163_call = mod.get_global_var('func_163')
func_167_call = mutated_mod.get_global_var('func_167')
const_7621 = relay.const(5.896316, dtype = "float32")#candidate|7621|()|const|float32
var_7622 = relay.var("var_7622", dtype = "float32", shape = (189, 1))#candidate|7622|(189, 1)|var|float32
call_7620 = func_163_call(relay.reshape(const_7621.astype('float32'), []), relay.reshape(var_7622.astype('float32'), [3, 9, 7]), )
call_7623 = func_163_call(relay.reshape(const_7621.astype('float32'), []), relay.reshape(var_7622.astype('float32'), [3, 9, 7]), )
func_5919_call = mod.get_global_var('func_5919')
func_5921_call = mutated_mod.get_global_var('func_5921')
var_7641 = relay.var("var_7641", dtype = "int64", shape = (12,))#candidate|7641|(12,)|var|int64
call_7640 = relay.TupleGetItem(func_5919_call(relay.reshape(var_7641.astype('int64'), [3, 2, 2])), 0)
call_7642 = relay.TupleGetItem(func_5921_call(relay.reshape(var_7641.astype('int64'), [3, 2, 2])), 0)
output = relay.Tuple([bop_7608,call_7617,var_7618,call_7620,const_7621,var_7622,call_7640,var_7641,])
output2 = relay.Tuple([bop_7611,call_7619,var_7618,call_7623,const_7621,var_7622,call_7642,var_7641,])
func_7643 = relay.Function([var_7618,var_7622,var_7641,], output)
mod['func_7643'] = func_7643
mod = relay.transform.InferType()(mod)
var_7644 = relay.var("var_7644", dtype = "bool", shape = (224,))#candidate|7644|(224,)|var|bool
var_7645 = relay.var("var_7645", dtype = "float32", shape = (189, 1))#candidate|7645|(189, 1)|var|float32
var_7646 = relay.var("var_7646", dtype = "int64", shape = (12,))#candidate|7646|(12,)|var|int64
output = func_7643(var_7644,var_7645,var_7646,)
func_7647 = relay.Function([var_7644,var_7645,var_7646,], output)
mutated_mod['func_7647'] = func_7647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7118_call = mod.get_global_var('func_7118')
func_7120_call = mutated_mod.get_global_var('func_7120')
call_7698 = func_7118_call()
call_7699 = func_7118_call()
output = relay.Tuple([call_7698,])
output2 = relay.Tuple([call_7699,])
func_7714 = relay.Function([], output)
mod['func_7714'] = func_7714
mod = relay.transform.InferType()(mod)
mutated_mod['func_7714'] = func_7714
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7714_call = mutated_mod.get_global_var('func_7714')
call_7715 = func_7714_call()
output = call_7715
func_7716 = relay.Function([], output)
mutated_mod['func_7716'] = func_7716
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5831_call = mod.get_global_var('func_5831')
func_5832_call = mutated_mod.get_global_var('func_5832')
call_7784 = relay.TupleGetItem(func_5831_call(), 1)
call_7785 = relay.TupleGetItem(func_5832_call(), 1)
output = call_7784
output2 = call_7785
func_7829 = relay.Function([], output)
mod['func_7829'] = func_7829
mod = relay.transform.InferType()(mod)
mutated_mod['func_7829'] = func_7829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7829_call = mutated_mod.get_global_var('func_7829')
call_7830 = func_7829_call()
output = call_7830
func_7831 = relay.Function([], output)
mutated_mod['func_7831'] = func_7831
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3357_call = mod.get_global_var('func_3357')
func_3359_call = mutated_mod.get_global_var('func_3359')
call_7838 = relay.TupleGetItem(func_3357_call(), 0)
call_7839 = relay.TupleGetItem(func_3359_call(), 0)
output = relay.Tuple([call_7838,])
output2 = relay.Tuple([call_7839,])
func_7843 = relay.Function([], output)
mod['func_7843'] = func_7843
mod = relay.transform.InferType()(mod)
output = func_7843()
func_7844 = relay.Function([], output)
mutated_mod['func_7844'] = func_7844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5654_call = mod.get_global_var('func_5654')
func_5655_call = mutated_mod.get_global_var('func_5655')
call_7919 = func_5654_call()
call_7920 = func_5654_call()
func_4601_call = mod.get_global_var('func_4601')
func_4603_call = mutated_mod.get_global_var('func_4603')
call_7946 = relay.TupleGetItem(func_4601_call(), 0)
call_7947 = relay.TupleGetItem(func_4603_call(), 0)
uop_7950 = relay.atan(call_7946.astype('float64')) # shape=(11, 15, 10)
uop_7952 = relay.atan(call_7947.astype('float64')) # shape=(11, 15, 10)
output = relay.Tuple([call_7919,uop_7950,])
output2 = relay.Tuple([call_7920,uop_7952,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

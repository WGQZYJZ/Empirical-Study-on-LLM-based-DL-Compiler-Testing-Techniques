import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_186 = relay.var("var_186", dtype = "float64", shape = (8, 6, 8))#candidate|186|(8, 6, 8)|var|float64
uop_187 = relay.cos(var_186.astype('float64')) # shape=(8, 6, 8)
output = uop_187
output2 = uop_187
func_193 = relay.Function([var_186,], output)
mod['func_193'] = func_193
mod = relay.transform.InferType()(mod)
mutated_mod['func_193'] = func_193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_194 = relay.var("var_194", dtype = "float64", shape = (8, 6, 8))#candidate|194|(8, 6, 8)|var|float64
func_193_call = mutated_mod.get_global_var('func_193')
call_195 = func_193_call(var_194)
output = call_195
func_196 = relay.Function([var_194], output)
mutated_mod['func_196'] = func_196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_300 = relay.var("var_300", dtype = "int8", shape = (3, 10, 8))#candidate|300|(3, 10, 8)|var|int8
var_301 = relay.var("var_301", dtype = "int8", shape = (3, 10, 8))#candidate|301|(3, 10, 8)|var|int8
bop_302 = relay.subtract(var_300.astype('int8'), relay.reshape(var_301.astype('int8'), relay.shape_of(var_300))) # shape=(3, 10, 8)
bop_309 = relay.logical_xor(var_300.astype('uint32'), relay.reshape(bop_302.astype('uint32'), relay.shape_of(var_300))) # shape=(3, 10, 8)
func_193_call = mod.get_global_var('func_193')
func_196_call = mutated_mod.get_global_var('func_196')
var_321 = relay.var("var_321", dtype = "float64", shape = (384,))#candidate|321|(384,)|var|float64
call_320 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
call_322 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
bop_329 = relay.add(var_301.astype('uint32'), relay.reshape(var_300.astype('uint32'), relay.shape_of(var_301))) # shape=(3, 10, 8)
func_193_call = mod.get_global_var('func_193')
func_196_call = mutated_mod.get_global_var('func_196')
call_335 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
call_336 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
uop_338 = relay.sigmoid(bop_329.astype('float64')) # shape=(3, 10, 8)
func_193_call = mod.get_global_var('func_193')
func_196_call = mutated_mod.get_global_var('func_196')
call_343 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
call_344 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
func_193_call = mod.get_global_var('func_193')
func_196_call = mutated_mod.get_global_var('func_196')
call_359 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
call_360 = func_193_call(relay.reshape(var_321.astype('float64'), [8, 6, 8]))
var_362 = relay.var("var_362", dtype = "int8", shape = (3, 10, 8))#candidate|362|(3, 10, 8)|var|int8
bop_363 = relay.logical_and(var_300.astype('bool'), relay.reshape(var_362.astype('bool'), relay.shape_of(var_300))) # shape=(3, 10, 8)
output = relay.Tuple([bop_309,call_320,var_321,call_335,uop_338,call_343,call_359,bop_363,])
output2 = relay.Tuple([bop_309,call_322,var_321,call_336,uop_338,call_344,call_360,bop_363,])
func_368 = relay.Function([var_300,var_301,var_321,var_362,], output)
mod['func_368'] = func_368
mod = relay.transform.InferType()(mod)
mutated_mod['func_368'] = func_368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_368_call = mutated_mod.get_global_var('func_368')
var_370 = relay.var("var_370", dtype = "int8", shape = (3, 10, 8))#candidate|370|(3, 10, 8)|var|int8
var_371 = relay.var("var_371", dtype = "int8", shape = (3, 10, 8))#candidate|371|(3, 10, 8)|var|int8
var_372 = relay.var("var_372", dtype = "float64", shape = (384,))#candidate|372|(384,)|var|float64
var_373 = relay.var("var_373", dtype = "int8", shape = (3, 10, 8))#candidate|373|(3, 10, 8)|var|int8
call_369 = func_368_call(var_370,var_371,var_372,var_373,)
output = call_369
func_374 = relay.Function([var_370,var_371,var_372,var_373,], output)
mutated_mod['func_374'] = func_374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_376 = relay.var("var_376", dtype = "float32", shape = (11, 1))#candidate|376|(11, 1)|var|float32
uop_377 = relay.asin(var_376.astype('float32')) # shape=(11, 1)
output = uop_377
output2 = uop_377
func_383 = relay.Function([var_376,], output)
mod['func_383'] = func_383
mod = relay.transform.InferType()(mod)
mutated_mod['func_383'] = func_383
mutated_mod = relay.transform.InferType()(mutated_mod)
var_384 = relay.var("var_384", dtype = "float32", shape = (11, 1))#candidate|384|(11, 1)|var|float32
func_383_call = mutated_mod.get_global_var('func_383')
call_385 = func_383_call(var_384)
output = call_385
func_386 = relay.Function([var_384], output)
mutated_mod['func_386'] = func_386
mutated_mod = relay.transform.InferType()(mutated_mod)
var_411 = relay.var("var_411", dtype = "uint8", shape = (9, 5, 15))#candidate|411|(9, 5, 15)|var|uint8
var_412 = relay.var("var_412", dtype = "uint8", shape = (9, 5, 15))#candidate|412|(9, 5, 15)|var|uint8
bop_413 = relay.bitwise_or(var_411.astype('uint8'), relay.reshape(var_412.astype('uint8'), relay.shape_of(var_411))) # shape=(9, 5, 15)
func_368_call = mod.get_global_var('func_368')
func_374_call = mutated_mod.get_global_var('func_374')
const_422 = relay.const([5,1,1,-4,-1,-6,2,-4,6,4,-1,-2,6,5,-10,4,-8,-9,10,-1,6,-6,1,-7,-9,4,2,10,3,9,-10,3,7,-7,5,6,5,10,-3,-10,8,2,-9,-9,8,8,-1,5,2,7,-10,-1,-6,-9,-7,-9,3,4,-4,4,3,1,2,-3,8,2,-4,4,-3,9,4,-5,-1,-8,-2,-8,-4,-10,-5,-1,-5,-2,5,9,1,-7,5,-1,-1,-1,3,1,-6,-4,-3,5,-9,5,5,1,1,8,-2,-4,9,-9,5,-8,8,-4,-10,-9,8,-2,-9,8,2,9,6,-8,-9,5,-6,8,8,7,3,-4,1,3,-10,-3,8,10,-5,10,7,1,10,-9,1,6,-3,4,-10,-5,9,-5,-10,-2,-5,-3,8,8,-1,-8,-3,6,-9,-10,-7,-1,5,-7,3,1,2,2,8,-1,5,9,6,-3,-6,-5,-8,-3,-4,-9,8,7,-4,3,7,10,3,-9,7,-7,-5,-7,-1,-7,9,-2,-3,-8,-7,10,-4,5,10,-8,8,-9,10,-7,6,-5,-7,3,-7,-9,-3,8,9,-7,-1,-7,2,1,4,10,9,5,4,6,-9,6,3,-9,1,-3,-3,-9,-6,7,-8,10], dtype = "int8")#candidate|422|(240,)|const|int8
var_423 = relay.var("var_423", dtype = "float64", shape = (384,))#candidate|423|(384,)|var|float64
call_421 = relay.TupleGetItem(func_368_call(relay.reshape(const_422.astype('int8'), [3, 10, 8]), relay.reshape(const_422.astype('int8'), [3, 10, 8]), relay.reshape(var_423.astype('float64'), [384,]), relay.reshape(const_422.astype('int8'), [3, 10, 8]), ), 7)
call_424 = relay.TupleGetItem(func_374_call(relay.reshape(const_422.astype('int8'), [3, 10, 8]), relay.reshape(const_422.astype('int8'), [3, 10, 8]), relay.reshape(var_423.astype('float64'), [384,]), relay.reshape(const_422.astype('int8'), [3, 10, 8]), ), 7)
func_368_call = mod.get_global_var('func_368')
func_374_call = mutated_mod.get_global_var('func_374')
call_429 = relay.TupleGetItem(func_368_call(relay.reshape(call_421.astype('int8'), [3, 10, 8]), relay.reshape(const_422.astype('int8'), [3, 10, 8]), relay.reshape(var_423.astype('float64'), [384,]), relay.reshape(call_421.astype('int8'), [3, 10, 8]), ), 1)
call_430 = relay.TupleGetItem(func_374_call(relay.reshape(call_421.astype('int8'), [3, 10, 8]), relay.reshape(const_422.astype('int8'), [3, 10, 8]), relay.reshape(var_423.astype('float64'), [384,]), relay.reshape(call_421.astype('int8'), [3, 10, 8]), ), 1)
output = relay.Tuple([bop_413,call_421,const_422,var_423,call_429,])
output2 = relay.Tuple([bop_413,call_424,const_422,var_423,call_430,])
func_435 = relay.Function([var_411,var_412,var_423,], output)
mod['func_435'] = func_435
mod = relay.transform.InferType()(mod)
mutated_mod['func_435'] = func_435
mutated_mod = relay.transform.InferType()(mutated_mod)
func_435_call = mutated_mod.get_global_var('func_435')
var_437 = relay.var("var_437", dtype = "uint8", shape = (9, 5, 15))#candidate|437|(9, 5, 15)|var|uint8
var_438 = relay.var("var_438", dtype = "uint8", shape = (9, 5, 15))#candidate|438|(9, 5, 15)|var|uint8
var_439 = relay.var("var_439", dtype = "float64", shape = (384,))#candidate|439|(384,)|var|float64
call_436 = func_435_call(var_437,var_438,var_439,)
output = call_436
func_440 = relay.Function([var_437,var_438,var_439,], output)
mutated_mod['func_440'] = func_440
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1027 = relay.var("var_1027", dtype = "float64", shape = (1, 14, 9))#candidate|1027|(1, 14, 9)|var|float64
uop_1028 = relay.sin(var_1027.astype('float64')) # shape=(1, 14, 9)
output = uop_1028
output2 = uop_1028
func_1036 = relay.Function([var_1027,], output)
mod['func_1036'] = func_1036
mod = relay.transform.InferType()(mod)
mutated_mod['func_1036'] = func_1036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1037 = relay.var("var_1037", dtype = "float64", shape = (1, 14, 9))#candidate|1037|(1, 14, 9)|var|float64
func_1036_call = mutated_mod.get_global_var('func_1036')
call_1038 = func_1036_call(var_1037)
output = call_1038
func_1039 = relay.Function([var_1037], output)
mutated_mod['func_1039'] = func_1039
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1546 = relay.var("var_1546", dtype = "uint64", shape = (2, 2, 11))#candidate|1546|(2, 2, 11)|var|uint64
var_1547 = relay.var("var_1547", dtype = "uint64", shape = (2, 2, 11))#candidate|1547|(2, 2, 11)|var|uint64
bop_1548 = relay.minimum(var_1546.astype('uint64'), relay.reshape(var_1547.astype('uint64'), relay.shape_of(var_1546))) # shape=(2, 2, 11)
output = bop_1548
output2 = bop_1548
func_1552 = relay.Function([var_1546,var_1547,], output)
mod['func_1552'] = func_1552
mod = relay.transform.InferType()(mod)
var_1553 = relay.var("var_1553", dtype = "uint64", shape = (2, 2, 11))#candidate|1553|(2, 2, 11)|var|uint64
var_1554 = relay.var("var_1554", dtype = "uint64", shape = (2, 2, 11))#candidate|1554|(2, 2, 11)|var|uint64
output = func_1552(var_1553,var_1554,)
func_1555 = relay.Function([var_1553,var_1554,], output)
mutated_mod['func_1555'] = func_1555
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1571 = relay.var("var_1571", dtype = "float32", shape = (7, 13, 7))#candidate|1571|(7, 13, 7)|var|float32
uop_1572 = relay.acosh(var_1571.astype('float32')) # shape=(7, 13, 7)
func_435_call = mod.get_global_var('func_435')
func_440_call = mutated_mod.get_global_var('func_440')
var_1575 = relay.var("var_1575", dtype = "uint8", shape = (5, 135))#candidate|1575|(5, 135)|var|uint8
const_1576 = relay.const([[-5.312649,-9.572320,-3.248635,3.299711,-5.506811,0.123698,-9.183754,3.639895,7.495577,0.384583,0.620985,-4.536551,6.807355,7.337976,-7.711412,-4.212710],[-3.385142,-2.884306,-2.957314,-4.170077,-4.565420,-4.158810,-5.000614,9.673610,3.944911,5.793702,-4.192272,-5.742264,7.687289,3.489352,1.220973,-8.486560],[7.885222,-9.801036,-5.748243,-6.372243,6.482004,-4.102190,-3.640284,6.719131,-6.241822,-3.040876,0.481487,-6.782138,-0.953324,-0.549294,5.088830,3.708672],[7.587985,6.937329,8.014702,9.075217,-4.404070,-1.379128,1.862568,9.289893,-5.038644,7.937915,-9.538979,-2.025681,5.173782,-7.002409,-1.211667,4.188530],[-6.857781,4.882662,-8.589100,-1.103659,-9.992170,6.279659,-6.866091,1.676336,-1.920590,-5.216475,-0.994354,-6.627055,1.676745,9.555078,-2.775084,-8.335449],[7.307678,-4.414078,-6.118231,-7.137845,1.668645,-4.295834,-0.109425,-8.420946,-2.899598,-9.198289,-9.113218,3.288139,9.744661,1.608514,9.199742,-7.710457],[4.485683,2.953776,9.806692,1.528309,6.995880,9.025289,7.035687,9.562744,-0.914481,0.837471,-4.074788,9.077919,7.356926,9.511107,-3.076931,7.680790],[4.008737,0.679982,-5.474937,4.860472,-8.485204,-4.779337,6.557717,-1.679171,1.046526,-2.129765,-8.528294,6.949991,-3.526424,-5.241080,8.074537,-7.282740],[-7.107191,7.529735,-1.512978,5.694076,3.032649,4.708301,9.672924,8.753877,5.671019,-4.989435,8.164204,9.374495,-7.034991,-0.893071,7.692419,-4.281701],[-1.824435,-0.704172,3.296305,2.002153,9.958962,2.506214,-7.566727,4.299208,-0.524344,4.480060,-1.631067,4.371169,8.446643,-4.046852,-6.647173,-9.177177],[-9.455538,-1.923048,-5.442995,9.219291,-4.033908,-7.347906,4.754439,-2.458461,2.707649,8.472422,-6.039810,2.756404,-6.879132,-8.093213,-4.335621,5.356962],[5.277984,-5.720628,2.373917,-1.601757,-5.446060,5.798099,-1.439918,3.716085,3.512332,2.470273,3.344539,3.251438,-8.015343,3.641814,4.305053,-7.290578],[-5.159951,-4.276928,-1.612020,6.137871,-8.420805,-2.053365,-6.566814,-1.618696,-0.378402,3.993246,-7.556311,0.764878,-9.231518,-6.853242,9.844046,-5.059670],[7.606126,5.942574,6.233729,5.878574,9.680817,8.030864,8.995022,-9.320172,0.644037,-2.271653,-0.673439,0.278670,-3.610505,-7.912456,-2.550786,5.170229],[-5.974657,2.906675,5.865221,0.946029,-0.256548,-0.093450,-1.592812,2.878873,-8.732912,-1.639906,0.160859,5.984932,0.722108,7.199684,-3.568233,4.553477],[6.415185,0.773766,6.805277,-8.174635,1.871163,-6.366556,3.939728,4.753415,1.175730,-2.094205,7.229400,-5.963113,-3.308475,-9.325619,-0.266570,3.032481],[-9.513960,-5.214388,2.972001,3.114521,8.222480,-2.201502,3.505540,-6.043762,9.622275,4.468165,-0.736854,8.251978,3.574442,4.057756,-3.419643,-4.588992],[6.988575,-4.279694,6.995190,6.254599,3.475701,6.714901,-4.308618,7.687237,-9.429465,-2.124146,-1.717932,2.841193,-7.384930,7.223320,9.526377,8.809583],[-3.500380,5.149072,-6.834978,-1.218809,2.273295,-5.901496,3.340610,8.356246,6.605938,-3.427916,-8.879244,9.223065,2.539249,6.415623,-5.544589,4.635894],[-8.212326,-1.143190,-8.223589,2.231296,-6.648477,3.780348,2.401070,-3.169787,-5.683247,3.859464,-7.092374,5.713205,2.697363,8.568092,-8.640522,9.984139],[5.397729,0.155124,-3.419568,1.425166,-7.982918,8.803106,-5.139696,-3.619489,-4.301303,1.433140,2.981071,-4.795517,5.457080,-7.686649,7.553176,-1.704693],[-7.932606,-8.243938,-6.511409,3.027146,-1.436452,8.543986,-2.923996,8.433562,4.344585,-3.959686,-1.877333,5.625630,-2.909634,5.481406,0.234575,-4.695527],[7.696721,8.967689,2.669362,-9.971818,0.791296,-8.075036,-4.522038,-9.109250,-5.668571,-4.997118,-3.115561,-7.837368,8.458811,-7.038159,4.331998,-9.121845],[8.863908,7.252955,3.280435,-4.724314,6.860455,-8.864563,-7.501044,1.194091,4.320590,8.703088,7.184812,-1.926184,3.805959,-5.549138,-1.827594,8.594818]], dtype = "float64")#candidate|1576|(24, 16)|const|float64
call_1574 = relay.TupleGetItem(func_435_call(relay.reshape(var_1575.astype('uint8'), [9, 5, 15]), relay.reshape(var_1575.astype('uint8'), [9, 5, 15]), relay.reshape(const_1576.astype('float64'), [384,]), ), 4)
call_1577 = relay.TupleGetItem(func_440_call(relay.reshape(var_1575.astype('uint8'), [9, 5, 15]), relay.reshape(var_1575.astype('uint8'), [9, 5, 15]), relay.reshape(const_1576.astype('float64'), [384,]), ), 4)
uop_1588 = relay.atanh(call_1574.astype('float64')) # shape=(8, 6, 8)
uop_1590 = relay.atanh(call_1577.astype('float64')) # shape=(8, 6, 8)
func_1552_call = mod.get_global_var('func_1552')
func_1555_call = mutated_mod.get_global_var('func_1555')
const_1595 = relay.const([6,5,4,-10,4,10,10,3,-7,10,-5,-6,-7,-2,-2,10,-8,10,4,-2,-6,4,-2,-3,3,-9,-4,-5,-4,3,-9,7,-7,7,9,-10,2,2,-10,5,8,2,-10,4], dtype = "uint64")#candidate|1595|(44,)|const|uint64
call_1594 = func_1552_call(relay.reshape(const_1595.astype('uint64'), [2, 2, 11]), relay.reshape(const_1595.astype('uint64'), [2, 2, 11]), )
call_1596 = func_1552_call(relay.reshape(const_1595.astype('uint64'), [2, 2, 11]), relay.reshape(const_1595.astype('uint64'), [2, 2, 11]), )
func_1036_call = mod.get_global_var('func_1036')
func_1039_call = mutated_mod.get_global_var('func_1039')
var_1602 = relay.var("var_1602", dtype = "float64", shape = (126,))#candidate|1602|(126,)|var|float64
call_1601 = func_1036_call(relay.reshape(var_1602.astype('float64'), [1, 14, 9]))
call_1603 = func_1036_call(relay.reshape(var_1602.astype('float64'), [1, 14, 9]))
output = relay.Tuple([uop_1572,var_1575,const_1576,uop_1588,call_1594,const_1595,call_1601,var_1602,])
output2 = relay.Tuple([uop_1572,var_1575,const_1576,uop_1590,call_1596,const_1595,call_1603,var_1602,])
func_1638 = relay.Function([var_1571,var_1575,var_1602,], output)
mod['func_1638'] = func_1638
mod = relay.transform.InferType()(mod)
var_1639 = relay.var("var_1639", dtype = "float32", shape = (7, 13, 7))#candidate|1639|(7, 13, 7)|var|float32
var_1640 = relay.var("var_1640", dtype = "uint8", shape = (5, 135))#candidate|1640|(5, 135)|var|uint8
var_1641 = relay.var("var_1641", dtype = "float64", shape = (126,))#candidate|1641|(126,)|var|float64
output = func_1638(var_1639,var_1640,var_1641,)
func_1642 = relay.Function([var_1639,var_1640,var_1641,], output)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1855 = relay.const([[[-6.970885,-8.766747,-6.229600],[5.588847,8.370168,-5.613764],[-0.597251,-6.911888,-7.710724],[5.273860,-8.852183,3.356501],[-6.505826,-4.516927,-3.355061],[9.637920,8.481029,-1.287283],[-0.487833,-3.637645,4.790952],[8.369047,-6.385978,-6.561924],[-1.215956,-6.761459,-5.103788],[-8.515789,8.764829,-9.720987],[-5.102237,-2.742965,-1.523736],[7.836056,-8.084298,-3.342045],[0.360993,-0.392054,9.259421]],[[-8.631546,-9.108133,9.410438],[-1.947650,2.398075,-0.659970],[1.632606,0.642243,-3.989824],[-7.491108,0.708657,1.989677],[-9.265415,2.752670,-7.833225],[-9.998288,6.936963,-5.780509],[9.821406,-4.102125,-1.739368],[-1.904565,-8.174738,5.129281],[7.061920,-1.717010,-6.406810],[-2.621980,-0.453441,5.594909],[3.131059,0.361993,3.056201],[1.249616,-0.023670,9.173970],[-3.512578,5.101644,-7.899289]],[[0.277184,-2.541081,-2.934633],[-0.252738,-9.680359,-5.976979],[8.295465,5.677437,-9.837700],[-8.365961,8.419928,-1.164118],[6.280383,-0.395710,7.803257],[4.329247,7.723346,-4.725856],[8.981494,-4.399240,-6.151285],[3.882160,-6.689290,-7.114991],[5.211085,-9.053932,-8.908941],[-6.607902,5.638136,-6.653329],[0.419829,-4.945998,3.653294],[-4.860695,3.547215,-4.479742],[8.665672,9.980350,-2.878214]],[[3.247801,9.125796,-6.535028],[-6.495426,1.329340,-6.727258],[-1.353944,-1.562288,-4.052825],[5.729393,-9.830897,5.211059],[-4.706834,-0.211946,4.134171],[-1.249452,5.358335,-9.348968],[9.014587,-7.656586,7.032033],[-8.060110,-5.619319,-8.008424],[-8.585448,6.444506,-9.115567],[-4.710947,0.264429,-3.044778],[8.138831,0.657983,-2.447309],[4.076728,-7.716363,6.867089],[-0.412379,7.440886,-7.373669]],[[9.273475,-1.126831,9.474333],[9.273441,8.621251,-3.619838],[0.029205,-9.115453,-5.980415],[4.807419,-5.044368,7.122123],[4.298640,1.675814,-0.826432],[-9.566647,3.283552,-2.063508],[6.513441,-1.051290,0.761777],[-6.466828,-3.296470,3.078361],[-7.409390,-5.428607,9.593213],[-2.929193,8.851220,8.784472],[9.935133,9.207405,-8.749311],[9.460892,-4.563954,5.592570],[-5.830845,-5.325105,-4.753941]],[[-2.652261,-3.384494,-2.715285],[-3.998811,-3.627477,-2.462010],[-2.280141,1.037069,-5.039514],[3.527439,3.788784,4.735588],[0.126812,5.879487,5.696437],[-1.976279,-9.432769,-5.155556],[-7.928110,7.264653,3.284640],[-7.885546,4.211087,1.917110],[-3.063457,5.739778,-7.929592],[-4.684982,-4.743457,-8.167110],[9.087005,6.867008,8.836286],[-2.211216,0.914928,3.717206],[-4.492039,-8.477435,2.893460]],[[3.363725,-9.339947,-3.640873],[-9.924179,1.523596,-4.580718],[-8.786362,-7.295844,5.426923],[2.478786,9.739336,6.979838],[1.894859,-7.009745,5.691055],[-1.331446,9.349251,4.615546],[7.086206,-3.534054,-5.307525],[-5.139195,1.067897,3.610021],[3.457569,-3.220405,3.242208],[1.326903,6.518751,-2.895332],[0.733587,-3.652398,7.236942],[-9.464323,9.008518,0.407285],[9.130488,-4.906359,-5.411202]],[[9.416533,-3.606693,-2.205194],[9.283166,0.523033,-0.371194],[3.461504,-3.297498,-1.857677],[9.641471,-7.792007,-1.906092],[1.426066,-6.650698,-0.831384],[9.256241,-3.330292,6.095583],[4.893667,-1.138704,-6.774346],[-0.368648,-6.614839,2.347837],[-4.710688,-7.742627,0.827814],[7.758703,-0.392465,-7.627633],[-9.740100,4.316054,3.666062],[-5.683291,5.842634,8.445216],[4.617617,-9.660044,-6.717906]],[[-9.223720,-4.650054,-0.160833],[9.521000,-2.578748,6.611381],[-8.947830,-9.393292,-0.109511],[0.246356,-4.244964,0.989198],[-8.970755,5.782138,-9.679237],[-5.898950,9.493574,1.136668],[-1.505184,2.386554,9.887915],[5.488735,-6.966160,1.916301],[2.945435,8.333362,5.281013],[-8.278373,0.238984,-6.874185],[1.722375,9.057370,-8.029163],[-0.731030,6.996098,7.340471],[-0.574733,9.589707,2.577013]],[[9.798715,4.335923,-2.003326],[8.632370,-8.721292,7.634546],[8.348005,1.154444,8.819910],[2.634858,-6.170017,2.439798],[8.049245,-8.676491,-7.900415],[4.257485,-3.984443,3.782933],[-8.133373,6.140582,0.817678],[1.734833,-7.585596,0.496444],[-9.079143,8.774243,-1.719226],[9.010794,2.692974,-7.932406],[7.815565,6.273638,-0.890885],[-0.645101,-5.240651,8.640372],[-6.992978,-7.087839,7.850629]],[[-7.017760,-8.645346,-1.250111],[-3.765351,7.317056,9.638354],[-0.693110,4.979678,-6.379677],[-8.550628,-7.045726,8.602568],[-3.870472,7.847705,-6.790759],[7.745888,-6.591852,-6.475144],[-6.530158,-8.200796,-2.265608],[2.688589,-8.051828,0.551801],[-0.507755,-2.556763,-9.248079],[-2.401453,0.335915,0.537194],[-0.561482,2.661723,-5.391821],[2.660772,-7.325853,-6.493012],[9.797068,7.139501,1.814123]]], dtype = "float64")#candidate|1855|(11, 13, 3)|const|float64
uop_1856 = relay.sigmoid(const_1855.astype('float64')) # shape=(11, 13, 3)
var_1863 = relay.var("var_1863", dtype = "float64", shape = (11, 13, 3))#candidate|1863|(11, 13, 3)|var|float64
bop_1864 = relay.less_equal(uop_1856.astype('bool'), relay.reshape(var_1863.astype('bool'), relay.shape_of(uop_1856))) # shape=(11, 13, 3)
uop_1867 = relay.cos(const_1855.astype('float64')) # shape=(11, 13, 3)
output = relay.Tuple([bop_1864,uop_1867,])
output2 = relay.Tuple([bop_1864,uop_1867,])
func_1878 = relay.Function([var_1863,], output)
mod['func_1878'] = func_1878
mod = relay.transform.InferType()(mod)
var_1879 = relay.var("var_1879", dtype = "float64", shape = (11, 13, 3))#candidate|1879|(11, 13, 3)|var|float64
output = func_1878(var_1879)
func_1880 = relay.Function([var_1879], output)
mutated_mod['func_1880'] = func_1880
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2392 = relay.const([[[-3.291873,-3.934186,3.348253,5.570066,-9.119033,6.798862,-2.673210,5.957655,-8.370989,-1.178156]],[[-0.531550,5.463711,4.165247,-8.638148,-4.088543,6.403047,6.830420,2.624988,-3.799345,-1.987998]],[[6.503899,8.861853,-2.147727,5.681630,-8.621922,6.316337,-6.259727,-6.348758,-6.249258,2.439370]],[[-9.267408,0.868235,-6.342155,9.870173,-1.191096,9.658800,2.264661,2.415907,0.842603,-7.565304]],[[5.147839,-0.574869,-9.674566,4.910693,1.245342,9.763692,1.774515,-8.227056,9.375752,-6.896753]],[[6.609383,-5.317676,3.310820,-8.067613,-3.003561,-2.442478,0.863855,2.275314,-7.284173,-9.181724]],[[0.345436,8.811835,-8.913705,-2.800529,4.847744,4.583422,0.378470,7.751945,-7.074407,5.467245]],[[-4.387395,-4.693555,5.549154,4.659096,-4.806240,9.822313,2.932897,-3.257932,-3.300554,-4.803967]],[[-9.713311,-0.381691,4.863757,-4.420210,-6.469295,-7.858178,5.290643,-1.604907,-5.070991,-0.729885]]], dtype = "float32")#candidate|2392|(9, 1, 10)|const|float32
uop_2393 = relay.tan(const_2392.astype('float32')) # shape=(9, 1, 10)
bop_2395 = relay.minimum(uop_2393.astype('int64'), relay.reshape(const_2392.astype('int64'), relay.shape_of(uop_2393))) # shape=(9, 1, 10)
func_1552_call = mod.get_global_var('func_1552')
func_1555_call = mutated_mod.get_global_var('func_1555')
const_2406 = relay.const([-5,8,3,7,-4,-4,-3,-1,4,-3,-3,-2,3,7,-1,2,1,9,-6,7,5,-3,2,1,5,-4,6,7,-6,-3,-1,4,5,-6,-8,-10,-4,1,-9,1,-8,-2,3,-4], dtype = "uint64")#candidate|2406|(44,)|const|uint64
call_2405 = func_1552_call(relay.reshape(const_2406.astype('uint64'), [2, 2, 11]), relay.reshape(const_2406.astype('uint64'), [2, 2, 11]), )
call_2407 = func_1552_call(relay.reshape(const_2406.astype('uint64'), [2, 2, 11]), relay.reshape(const_2406.astype('uint64'), [2, 2, 11]), )
output = relay.Tuple([bop_2395,call_2405,const_2406,])
output2 = relay.Tuple([bop_2395,call_2407,const_2406,])
func_2419 = relay.Function([], output)
mod['func_2419'] = func_2419
mod = relay.transform.InferType()(mod)
mutated_mod['func_2419'] = func_2419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mutated_mod.get_global_var('func_2419')
call_2420 = func_2419_call()
output = call_2420
func_2421 = relay.Function([], output)
mutated_mod['func_2421'] = func_2421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2448 = relay.TupleGetItem(func_2419_call(), 2)
call_2449 = relay.TupleGetItem(func_2421_call(), 2)
var_2464 = relay.var("var_2464", dtype = "uint64", shape = (44,))#candidate|2464|(44,)|var|uint64
bop_2465 = relay.not_equal(call_2448.astype('bool'), relay.reshape(var_2464.astype('bool'), relay.shape_of(call_2448))) # shape=(44,)
bop_2468 = relay.not_equal(call_2449.astype('bool'), relay.reshape(var_2464.astype('bool'), relay.shape_of(call_2449))) # shape=(44,)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_2499 = relay.const([0.725187,-7.194015,-8.985500,6.912911,5.966698,-2.021373,3.167639,-0.100339,4.016659,-6.365687,-6.127387,-7.758640,-8.010123,1.776108,-7.062575,-7.116146,-5.092273,8.100040,-3.380821,5.774542,-5.422494,-4.394398,-6.724525,-5.003359,2.095733,-9.879939,-7.373749,-7.852015,-9.190584,8.866108,-8.759191,4.456831,-3.965050,-7.747504,1.100017,-6.731312,7.652980,9.367079,8.121911,2.844745,-1.704369,8.792533,-5.441143,5.865582,1.370616,5.380883,-9.451424,-7.165950,0.971526,-2.820825,8.036380,8.328643,5.506798,-2.254603,-1.005657,0.607533,1.134203,-9.956419,-3.438568,5.423804,-1.718553,-0.727634,8.043802,0.720875,6.059315,6.779962,9.205239,1.576422,5.977217,6.549700,5.925155,-5.377767,0.731399,9.815459,-2.451398,7.771317,5.654837,-6.220012,7.249378,-0.110349,7.164906,9.625239,-2.969468,5.518491,-9.807048,1.925110,-5.696761,6.463926,-2.171893,3.885319,2.141457,3.444001,-6.267779,9.373822,-0.064097,-2.798411,5.973618,-4.320594,-6.832866,1.630799,-7.834665,8.319694,-9.284340,0.772135,8.865096,5.800833,1.310728,2.252890,-7.678335,4.198218,-8.963885,-5.533374,6.366970,1.150749,6.322950,1.176591,-8.357551,-0.862752,0.643716,7.709832,-3.151884,3.844854,-3.496194,-4.950875,4.468574,6.158644,3.791220,1.707268,-1.324679,3.291175,8.995326,0.302305,7.396358,-2.438139,6.984854,2.872488,-3.724896,-2.129432,8.231898,-7.422681,-0.179706,3.679480,6.930231,5.204691,9.902936,1.192449,9.320927,-5.328504,-4.186035,3.927519,7.104301,-2.080785,4.553767,-1.752867,2.058923,8.071049,-5.337997,7.147653,8.588495,8.211506,5.471160,2.923078,4.838356,1.171527,-0.701044,-6.024781,8.446110,5.937594,0.462462,-2.624921,-0.714485,-1.940576,-1.958717,4.262874,-6.820466,-3.436844,4.296243,-9.457584,-7.218206,3.045365,-1.489839,-8.948921,-3.710567,-2.219898,3.077208,-1.260991,-3.437465,-0.162297,-5.946509,-5.667338,-9.676552,3.536578,-9.605777,-4.078878,7.210320,8.446005,4.758536,-1.532832,-5.480087,1.681488,7.439135,9.415868,1.025078,-7.921838,2.390241,-7.600782,5.063795,-5.032358,-0.570982,-6.978837,-7.069478,1.428490,8.849321,8.242585,2.717922,3.060683,-9.335419,-6.440063,-5.011823,9.640169,-0.158768,5.566639,1.452070,2.580095,3.129343,-9.778075,-9.660941,6.668052,8.331625,5.838430,-7.126735,5.124405,0.009764,-0.541958,-6.235546,-4.749853,2.455729,-2.146717,7.986723,-4.738927,-9.693190,-4.085542,4.056866,-5.609719,-7.433375,9.792374,4.132717,8.853250,-5.259465,-8.137325,7.425467,2.718130,8.409878,-4.110606,-1.645620,6.160040,3.245729,2.757988,4.495476,8.329788,6.217402,-3.377493,2.795608,0.147822,1.256228,-3.920855,-7.141987,-8.833271,9.828404,-4.449737,4.112796,-8.584361,0.677540,5.030586,-4.656290,-4.122097,3.075337,-4.601858,-0.222372,7.019472,3.487993,7.720266,1.770509,2.793009,-9.088235,-7.319481,2.603253,-5.051408,-9.885672,-5.675800,-8.847460,-4.794923,2.178027,-9.568147,7.808172,-5.634455,8.950331,-4.952018,1.307910,7.051972,-8.604420,7.439704,7.449792,-2.524055,-1.117777,-3.949997,-8.236669,-5.916057,2.700920,3.831084,-6.380628,3.613892,3.083914,5.153057,-0.438110,-7.284252,-8.207941,-2.171777,6.124588,-3.654588,7.529599,-2.169010,6.264096,-0.634016,0.606664,8.544474,0.050096,2.601615,8.909453,4.189603,-8.182418,-0.033886,4.636345,-5.199008,3.833219,-5.106070,3.167685,-9.841861,-2.649689,0.749387,1.309861,7.408872,3.437086,7.738017,2.173329,-8.336823,5.014065,7.361148,-2.805032,3.872801,-0.452926,-6.817238,3.782660,-9.505786,3.918447,5.664172,7.219877,8.663201,-4.627398,9.035715,9.249821,3.155970,-3.924230,-6.488439,-8.183801,-2.613806,5.545133,-9.105003,-3.771268,-4.114828,-9.501085,-3.797250,5.311768,-2.287865,-9.543445,3.253550,-0.897483,-8.971694,4.307138,8.091709,8.757122,-9.163881,-9.480179,5.100474,-5.512248,8.637674,7.587479,-8.913118,6.747481,-4.612011,-6.791975,-0.099254,-2.547996,3.231128,1.029534,2.551915,-4.700245,5.598220,-6.672751,7.898076,8.408083,1.649000,-1.350678,7.045901,9.674260,-9.351859,6.377212,-9.501070,7.659131,-8.789078,-9.366064,9.397315,6.441960,8.720339,6.017106,-1.323509,7.283955,-8.204181,0.716023,-9.006857,1.683888,-7.579269,7.592736,1.953976,-9.854709,2.407093,1.580236,-6.009367,0.245712,5.147973,-8.487390,5.644822,5.094373,-5.465769,6.327930,4.857602,1.336364,-1.070650,-4.130722,3.417001,4.564799,1.993686,-7.040868,6.523851,-2.753701,-6.889593,2.272747,-3.501656,8.527798,3.439093,7.559089,-2.066352,0.264473,3.485871,-0.321421,-5.730051,7.048163,-0.998247,0.116211,-5.203030,-1.013820,0.657223,-1.802769,4.820755,-2.696590,7.385496,3.777123,-7.988674,-7.383550,4.965337,-8.431647,-3.580801,2.909317,1.872479,-1.460580,-9.037595,4.505668,-3.845089,-0.290154,8.796507,1.234723,-5.966917,-8.633866,6.910067,1.880025,1.553173,-7.629750,3.680904,8.874679,0.685594,-6.427924,-7.183909,1.454469,-0.862624,-6.908900,-6.864202,-2.598201,8.750967,2.408095,5.435016,5.435877,-7.484919,-1.598100,1.323761,4.797323,4.775254,3.228381,0.655533,6.946724,-2.146073,4.214439,0.721023,0.105594,9.228956,8.630000,3.091116,9.662330,-6.510133,-1.223274,2.568685,-0.193884,4.228883,4.127094,-9.597068,-4.046217,-1.826377,3.185292,4.055208,-9.619114,1.282408,1.077169,-7.656890,4.701001,-3.214558,9.885000,2.649989,2.868885,6.668169,6.681424,4.380947,-4.334805,1.191527,5.320369,-3.566576,6.218876,7.221318,3.085687,-7.918193,-9.025129,-0.154933,-0.269785,-5.499019,-2.044624,-7.409129,6.815366,-9.387513,-8.940298,-6.085717,-4.117344,3.961930,-3.198005,2.502302,6.828874,-2.576500,-5.710919,8.501553,-7.650874,-0.945290,0.234939,-4.455280,-7.510402,-1.055889,2.893052,-1.309896,7.515815,3.354762,-7.703720,1.525344,-2.836839,-5.968199,-6.334316,-9.234056,3.442784,-7.582606,5.262343,4.889484,8.030019,-1.910136,-8.066033,-9.218569,5.242144,-9.603316,-7.233150,5.867223,0.983313,-8.941242,7.138523,0.519875,2.936400,9.081984,-8.213560,2.238847,-9.805299,-0.450682,-9.261217,-1.222496,8.532659,-3.746382,7.561747,-4.139481,9.878757,-5.617954,0.227940,2.085767,8.481740,-6.369259,5.045504,2.924147,2.529143,4.008580,9.242174,7.163300,-2.325105,-2.823450,3.186186,-4.286639,7.193165,4.589085,-0.123181,-6.315075,4.432822,-1.925388,-8.262381,-1.613488,3.860774,9.948070,-7.092015], dtype = "float32")#candidate|2499|(637,)|const|float32
const_2500 = relay.const([8,10,-9,-10,-5,9,6,-2,4,-4,3,-3,-2,8,5,-8,-7,5,-9,5,7,1,-7,-8,5,6,-6,4,7,-3,9,7,2,-2,-10,5,2,-1,-7,2,2,3,-8,-8,-8,9,-2,1,-10,-5,1,-8,-5,4,9,-5,3,-1,-4,-7,-1,10,-3,-9,6,-1,-5,-2,7,2,3,7,7,8,-8,-4,1,4,4,5,9,-7,-7,5,-6,-10,-6,4,8,5,-6,6,-2,9,6,-6,-4,-9,1,-4,1,-7,-4,10,-4,9,3,-7,-8,1,-4,10,7,8,-3,8,-8,-3,-5,-6,8,-6,1,-8,-2,4,3,2,3,-9,-2,-2,-1,5,-6,2,6,-6,5,-7,-2,-3,-5,4,-6,-4,-1,1,1,-5,-6,-2,-9,1,-4,-9,9,1,8,2,10,4,-4,3,-10,-2,-7,1,7,-8,-10,9,-10,1,-6,3,9,-9,-2,-6,-1,1,7,4,3,4,2,3,4,1,7,7,-1,6,-9,8,-5,7,-10,-5,-2,8,-4,7,5,9,-2,-7,-5,10,7,3,4,5,1,-1,-1,-9,2,-3,2,10,-2,-10,-9,-10,-6,-10,3,8,-5,6,-2,1,9,-2,9,8,6,-8,-10,-3,3,9,-1,9,10,4,-10,-5,-2,-3,-10,2,-1,-2,1,7,1,10,-7,-7,-4,-8,-9,-7,-1,-2,3,8,6,-5,5,3,-10,-5,-1,1,-7,-2,-1,7,-9,-4,5,-6,-9,-10,-5,-10,5,1,2,-3,-2,-5,-4,-6,3,7,1,9,-4,-6,-1,3,4,1,-5,-4,9,-1,-4,-8,-6,-3,8,-7,-10,-1,-9,-6,-8,6,-1,-2,2,5,-10,-10,-8,3,6,10,3,8,8,3,-1,1,1,-10,7,-6,-10,5,-3,6,8,-7,7,-3,9,1,6,2,7,10,-9,3,7,7,-4,-9,-9,3,2,-3,1,1,-7,-7,-4,8,-7,1,7,-4,-1,3,-9,-7,2,2,-5,-3,5,-5,-8,2,-4,-9,-3,1,-6,-5,9,-4,4,-4,-8,-1,6,-3,1,-10,-2,-5,2,10,-8,-10,9,-8,1,-3,-1,-3,-2,-1,-2,7,10,9,-8,1,-6,-3,-7,1,4,-9,8,-2,-8,5,-4,4,-6,7,3,-8,-8,-7,5,-5,10,4,5,10,10,3,-8,9,1,-8,3,7,-8,-10,-2,1,-8,2,2,-7,7,-6,9,9,-1,-6,2,8,8,2,-3,-4,10,4,-7,-4,-3,1,4,-1,8,9,-1,-9,-7,2,6,10,-1,-7,7,5,2,9,-8,10,8,-4,-10,-1,-8,6,-7,1,3,8,-9,-10,-9,-6,-1,-10,8,7,1,-7,-1,4,-1,5,2,4,6,-10,-4,1,5,-4,9,2,-1,10,2,-9,-8,-7,-8,2,6,1,10,-7,5,-9,5,4,-2,8,-8,-7,1,-9,-6,5,4,-5,-5,-3,-4,-5,-6,4,3,2,-7,2,-4,9,3,-3,7,5,-10,4,-1,-2,-10,-4,8,-6,6,5,10,-9,7,2,-10,9,5,4,4,2,-2,-7,-2,-5,3,-8,3,8,9,-5,-8,9,-10,9,8,-8,-10,9,9,8,-6,-9,-4,-1,6,4,-2,7,-7,-6,10,5,10,-1,10,5,8,6,-8,6,5,-9,-4,-1,-7,-8,-10,8,-9,-10,-8,6,6,9,9,1,-5,2,-9,2,9,-2,3,2,-8,-2,7,4,9,9,-9,3,1,5,10,5,-9], dtype = "uint8")#candidate|2500|(675,)|const|uint8
var_2501 = relay.var("var_2501", dtype = "float64", shape = (126,))#candidate|2501|(126,)|var|float64
call_2498 = relay.TupleGetItem(func_1638_call(relay.reshape(const_2499.astype('float32'), [7, 13, 7]), relay.reshape(const_2500.astype('uint8'), [5, 135]), relay.reshape(var_2501.astype('float64'), [126,]), ), 4)
call_2502 = relay.TupleGetItem(func_1642_call(relay.reshape(const_2499.astype('float32'), [7, 13, 7]), relay.reshape(const_2500.astype('uint8'), [5, 135]), relay.reshape(var_2501.astype('float64'), [126,]), ), 4)
func_1552_call = mod.get_global_var('func_1552')
func_1555_call = mutated_mod.get_global_var('func_1555')
call_2509 = func_1552_call(relay.reshape(var_2464.astype('uint64'), [2, 2, 11]), relay.reshape(var_2464.astype('uint64'), [2, 2, 11]), )
call_2510 = func_1552_call(relay.reshape(var_2464.astype('uint64'), [2, 2, 11]), relay.reshape(var_2464.astype('uint64'), [2, 2, 11]), )
output = relay.Tuple([bop_2465,call_2498,const_2499,const_2500,var_2501,call_2509,])
output2 = relay.Tuple([bop_2468,call_2502,const_2499,const_2500,var_2501,call_2510,])
func_2526 = relay.Function([var_2464,var_2501,], output)
mod['func_2526'] = func_2526
mod = relay.transform.InferType()(mod)
var_2527 = relay.var("var_2527", dtype = "uint64", shape = (44,))#candidate|2527|(44,)|var|uint64
var_2528 = relay.var("var_2528", dtype = "float64", shape = (126,))#candidate|2528|(126,)|var|float64
output = func_2526(var_2527,var_2528,)
func_2529 = relay.Function([var_2527,var_2528,], output)
mutated_mod['func_2529'] = func_2529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2570 = relay.TupleGetItem(func_2419_call(), 2)
call_2571 = relay.TupleGetItem(func_2421_call(), 2)
func_368_call = mod.get_global_var('func_368')
func_374_call = mutated_mod.get_global_var('func_374')
var_2586 = relay.var("var_2586", dtype = "int8", shape = (240,))#candidate|2586|(240,)|var|int8
const_2587 = relay.const([0.897615,-0.748344,-5.159040,8.216826,0.216283,-5.809209,1.106920,0.976185,2.605855,5.458048,-1.426041,-6.458463,3.665229,-2.735013,4.390080,6.604253,8.665601,6.804928,6.898750,5.696004,8.334871,0.988190,0.635314,-2.808013,-7.088458,7.699954,9.582725,-8.985261,7.608266,-9.916348,3.613217,2.298330,4.939863,-8.683496,2.018818,0.637405,0.105049,-6.499067,5.617577,-4.572684,-5.420558,-8.843022,8.069802,-7.919069,-8.230709,-4.467269,7.694702,-9.362035,-0.898183,8.766745,-9.843240,-6.039654,1.466254,3.168042,0.865310,9.824262,2.255852,8.179774,-2.806623,-6.095075,-1.666145,-2.672038,-8.634505,-4.300768,-2.029928,0.561088,-1.181097,-9.302224,-5.272027,3.609040,2.174216,0.492392,-9.308291,-7.995735,-3.497909,9.267311,8.761261,-1.254553,7.088337,-9.542345,-1.248037,-1.548499,5.515929,9.249828,-3.688507,2.592120,6.154390,5.118211,7.233912,-3.700484,-2.042118,6.074773,-7.177109,9.577221,-1.114274,9.636245,8.640650,-6.002784,-1.512362,-4.231098,-5.427057,0.118436,-6.482303,2.075374,-7.355483,-8.321432,-3.313333,-1.509640,2.613998,-6.662729,4.760927,4.175892,4.814086,9.312196,7.597137,2.032395,2.656027,8.947502,0.294160,6.500931,-3.543723,-9.722869,8.082415,7.999001,-0.096087,3.396966,8.336164,7.823474,-4.003008,9.044482,-5.244107,5.366225,3.440810,-2.175098,5.570187,-6.125093,1.580853,-3.962246,8.973220,8.831350,7.637716,5.382872,7.167477,-7.482798,9.420524,4.317645,-5.959192,3.469236,5.886547,-2.347258,8.119031,9.989337,3.002801,-6.901872,2.809212,-9.181149,-5.032727,-8.052136,-5.296874,4.016026,-1.385968,-2.521505,0.550201,-8.754379,4.066767,8.979435,8.534273,9.316580,4.811977,7.436825,2.999940,9.699685,2.680631,-9.620530,-4.766427,1.357574,-1.301730,1.494031,0.149928,6.383991,-5.750166,4.149441,7.056169,-1.980313,-8.814723,1.026004,-0.581859,3.369817,-2.109145,3.230576,1.818525,1.819095,-7.869514,7.615176,-4.726772,-6.721256,-4.577386,-3.894433,-8.094663,-4.255477,-5.612019,2.109412,-9.632671,-8.763917,-7.679148,-4.336381,-2.321966,2.283175,-7.499723,-5.863280,9.388175,-9.813594,0.374042,4.911187,5.904921,-5.686389,-3.260060,-9.203365,0.225191,0.344867,7.655294,6.760934,-8.518460,-9.191049,-4.977379,7.850572,-3.044186,2.500768,1.508668,7.467162,-0.483247,-1.202783,9.290452,4.579456,-9.390843,-3.989730,-3.237760,4.888243,2.817083,-5.590069,7.277728,1.868096,2.292814,8.467394,-7.873885,4.646750,-1.295526,1.637442,1.269918,-7.615794,5.573364,6.313876,5.833559,-1.049103,-4.318072,-2.371469,2.584806,2.833083,-0.033039,2.276816,-6.028277,6.004436,-1.968155,-7.301525,6.519799,8.866235,-7.599536,4.490889,-6.295778,-5.294262,-0.804373,-5.136192,-0.080152,-3.579811,-4.286376,6.148077,-2.851253,1.639967,0.547238,-0.370154,9.020497,-7.459005,-4.967729,4.887500,8.777165,-1.550923,-6.557731,1.380834,-6.434623,9.178977,7.157172,1.189426,7.380348,1.673326,8.464677,0.449637,0.151719,-0.929083,8.353654,-3.652693,3.111849,-8.102533,5.052256,-8.868418,8.483669,-5.809698,9.734407,9.081278,5.868016,6.976843,-0.347523,7.441401,-5.474432,-3.757828,1.046641,5.714785,3.206351,-6.963665,1.002811,-4.979935,-1.347862,-0.715637,9.749876,-1.203578,-2.550439,2.423402,-6.907160,-8.445843,-4.608029,4.112154,-9.483406,-3.415257,-8.931639,-4.900243,0.299021,1.503235,-7.102852,3.903861,2.808015,-7.780987,-8.915722,-4.921288,-9.911977,0.802726,1.201759,-7.972340,5.127518,6.283148,0.657085,-2.160692,5.892555,-4.093156,8.278914,0.478106,8.905438,-5.081318,4.295848,-6.809629,4.566106,-6.608104,-8.730511,-8.746526,9.461277,-0.752617,-1.285698,1.937337,-6.444064,3.501408,-9.060990,-0.635877,-6.670826,7.842510,4.609565,6.104520,8.394416,-2.710552,-7.116497,-7.345743,-2.578296,-6.790456,9.779826,-7.251025,0.136908,4.868997], dtype = "float64")#candidate|2587|(384,)|const|float64
call_2585 = relay.TupleGetItem(func_368_call(relay.reshape(var_2586.astype('int8'), [3, 10, 8]), relay.reshape(var_2586.astype('int8'), [3, 10, 8]), relay.reshape(const_2587.astype('float64'), [384,]), relay.reshape(var_2586.astype('int8'), [3, 10, 8]), ), 4)
call_2588 = relay.TupleGetItem(func_374_call(relay.reshape(var_2586.astype('int8'), [3, 10, 8]), relay.reshape(var_2586.astype('int8'), [3, 10, 8]), relay.reshape(const_2587.astype('float64'), [384,]), relay.reshape(var_2586.astype('int8'), [3, 10, 8]), ), 4)
func_2526_call = mod.get_global_var('func_2526')
func_2529_call = mutated_mod.get_global_var('func_2529')
const_2596 = relay.const([3.336957,9.273262,0.922999,-1.026190,-3.567106,1.259721,-9.056569,-9.270997,-5.755005,7.724541,-9.881263,-3.311144,2.022203,2.640404,-8.254616,-7.155640,-3.418794,9.200948,5.817218,-2.934640,-3.352180,-2.170390,3.031738,-5.528707,1.485828,-5.645932,0.552843,9.856076,6.206798,-4.534359,-5.900292,4.201467,-5.852264,-8.660512,6.380516,6.138063,7.165809,-3.946520,-4.327181,-8.165901,3.173321,0.729758,-9.264992,9.952516,4.132915,2.305185,-2.521553,-7.325339,6.064653,0.795327,3.263520,7.370957,-9.249655,6.344767,-3.460795,-4.485652,-2.988535,-1.440325,-0.850870,-5.523458,8.393879,-6.520247,-7.370012,-0.525088,1.350361,-9.266922,-7.389716,1.856216,-4.620526,3.993232,4.687667,-3.913384,5.443457,-0.959731,-9.236723,0.554084,-5.074999,-9.424383,-4.112400,7.752854,-0.035639,-6.426694,2.947263,7.387956,-8.819859,-2.162597,7.380674,4.558994,4.240636,-8.255958,-9.687932,-8.882566,3.391758,-6.884004,7.556137,-7.724685,2.033525,6.172438,-9.594636,-2.796223,3.465802,-2.345826,0.150394,-9.532575,7.592454,6.534716,-4.656424,5.263198,-1.136972,-8.874406,0.326603,4.609132,1.120513,5.215608,7.057870,0.681892,-8.793766,2.464904,9.638673,-4.012487,3.521159,0.193418,4.187130,4.108841,-2.172467,-7.327438], dtype = "float64")#candidate|2596|(126,)|const|float64
call_2595 = relay.TupleGetItem(func_2526_call(relay.reshape(call_2570.astype('uint64'), [44,]), relay.reshape(const_2596.astype('float64'), [126,]), ), 2)
call_2597 = relay.TupleGetItem(func_2529_call(relay.reshape(call_2570.astype('uint64'), [44,]), relay.reshape(const_2596.astype('float64'), [126,]), ), 2)
func_193_call = mod.get_global_var('func_193')
func_196_call = mutated_mod.get_global_var('func_196')
call_2613 = func_193_call(relay.reshape(const_2587.astype('float64'), [8, 6, 8]))
call_2614 = func_193_call(relay.reshape(const_2587.astype('float64'), [8, 6, 8]))
var_2624 = relay.var("var_2624", dtype = "float64", shape = (8, 6, 8))#candidate|2624|(8, 6, 8)|var|float64
bop_2625 = relay.divide(call_2613.astype('float32'), relay.reshape(var_2624.astype('float32'), relay.shape_of(call_2613))) # shape=(8, 6, 8)
bop_2628 = relay.divide(call_2614.astype('float32'), relay.reshape(var_2624.astype('float32'), relay.shape_of(call_2614))) # shape=(8, 6, 8)
uop_2641 = relay.sqrt(var_2624.astype('float32')) # shape=(8, 6, 8)
func_383_call = mod.get_global_var('func_383')
func_386_call = mutated_mod.get_global_var('func_386')
const_2648 = relay.const([-4.549913,7.828106,-3.336948,3.899921,1.328309,8.531723,6.549894,9.309280,-8.147932,9.531595,-6.013320], dtype = "float32")#candidate|2648|(11,)|const|float32
call_2647 = func_383_call(relay.reshape(const_2648.astype('float32'), [11, 1]))
call_2649 = func_383_call(relay.reshape(const_2648.astype('float32'), [11, 1]))
output = relay.Tuple([call_2570,call_2585,var_2586,const_2587,call_2595,const_2596,bop_2625,uop_2641,call_2647,const_2648,])
output2 = relay.Tuple([call_2571,call_2588,var_2586,const_2587,call_2597,const_2596,bop_2628,uop_2641,call_2649,const_2648,])
func_2655 = relay.Function([var_2586,var_2624,], output)
mod['func_2655'] = func_2655
mod = relay.transform.InferType()(mod)
mutated_mod['func_2655'] = func_2655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2655_call = mutated_mod.get_global_var('func_2655')
var_2657 = relay.var("var_2657", dtype = "int8", shape = (240,))#candidate|2657|(240,)|var|int8
var_2658 = relay.var("var_2658", dtype = "float64", shape = (8, 6, 8))#candidate|2658|(8, 6, 8)|var|float64
call_2656 = func_2655_call(var_2657,var_2658,)
output = call_2656
func_2659 = relay.Function([var_2657,var_2658,], output)
mutated_mod['func_2659'] = func_2659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2695 = relay.TupleGetItem(func_2419_call(), 1)
call_2696 = relay.TupleGetItem(func_2421_call(), 1)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
const_2703 = relay.const([4.756918,0.389902,-9.169661,-8.670364,-8.930155,-7.608873,7.323952,-1.185919,-7.106089,2.796777,-6.169286,2.902793,-9.748846,2.051710,3.788638,-8.377906,-1.873412,2.751945,-0.236800,4.396453,-1.107495,-5.257329,7.938247,-2.740304,9.284463,8.397808,1.064984,1.944440,1.518688,5.446733,8.343215,6.294036,-8.425337,-8.069947,-2.383496,6.416383,-0.940968,9.630271,-5.087963,7.693497,5.103220,0.515116,5.637872,4.858851,-2.936542,-6.241342,-7.292427,1.106577,-4.843288,7.708400,2.900934,-2.270003,-2.498693,7.220635,9.305159,-4.623413,-6.466289,8.931474,-3.802956,-2.203573,-5.188439,-5.898335,1.907194,4.596847,5.924431,-2.089915,1.629362,-7.563416,-3.761728,-5.209449,-0.280326,9.810852,-5.606592,9.588771,2.869106,6.666108,-4.641982,-8.172596,-8.550945,8.800092,-9.044940,-4.643531,-7.567233,9.072911,3.602653,2.053078,-0.850821,-9.181543,2.100213,8.226605,4.992032,-5.620373,-5.065954,2.929412,-7.643028,-6.613732,6.976051,-9.406514,-6.502978,-9.870217,1.318783,0.430011,-6.580702,3.118820,1.342194,-4.386558,4.710078,-1.806089,2.391271,-5.571455,0.754827,-1.508726,-5.503402,-4.966364,-5.785715,-7.428929,-7.322551,3.049303,4.450283,5.101081,9.978410,8.670762,-3.910124,-2.068265,-9.402031,-1.101277,-1.266440,-7.510020,9.496401,6.617222,4.540337,-5.003752,5.361911,4.274864,-0.858590,-7.646150,-8.878487,-3.041866,6.692015,7.168044,-6.649252,9.538705,-2.696068,4.075002,6.735403,-9.436045,-1.667221,-5.268404,-8.911745,-0.522793,-8.581336,7.941683,-8.639446,-3.486355,-8.038283,1.532119,7.708812,2.730434,-7.117237,5.797654,6.486045,8.489237,-2.916251,-7.168180,7.883811,5.504871,8.492430,-8.208703,0.171973,8.149163,-3.819669,-6.169613,-0.383529,-7.893303,-4.509354,-4.643776,0.419980,1.631427,7.696724,-6.554544,-8.638313,9.892009,-3.996327,6.736989,-4.045101,-9.732687,-4.534956,-9.839043,-9.687743,9.890726,-0.297120,4.927124,7.500901,-2.640307,-0.479539,2.716363,-9.770880,-9.256822,9.585884,-7.498756,-4.076239,-0.271705,7.587627,3.897720,6.906690,-9.131623,-5.456360,8.086539,-1.243950,9.136983,4.789097,5.266421,2.144103,-0.370593,-3.438111,-5.932274,8.156673,8.583295,2.927496,1.760064,0.945030,-8.070147,3.430817,-0.491921,7.857202,-8.807659,-4.225467,0.259250,7.466092,-6.297061,-7.186834,-4.366812,-1.613203,4.995701,2.190566,-2.016968,-0.015879,-8.097289,8.622986,-3.639347,-8.968133,1.378172,-4.009512,-2.918893,-6.371595,2.384711,7.320837,0.212482,9.149516,7.261936,2.209511,-1.985649,1.557790,3.441125,2.732538,4.917531,-6.838213,-9.759205,1.708197,-5.050239,-7.272706,3.021122,8.712591,6.018003,2.848083,8.811402,-9.492359,-6.911071,1.879254,-1.030533,3.304007,-9.115597,-4.366499,1.445533,-1.819389,-2.200127,9.160057,-1.770404,-0.682354,-9.854566,4.952528,-0.744058,5.195491,0.047959,-6.090871,9.498907,3.896883,7.532115,-8.478728,-8.580241,-0.444607,1.195189,-5.290313,-9.095178,1.111017,-9.330156,4.051620,2.656634,8.210135,4.236047,-6.200390,-0.300203,-1.711935,-7.112254,-0.883193,5.728353,0.846507,-3.578307,6.218499,-5.669391,4.843380,7.035441,9.238953,7.969471,5.016277,-7.848315,3.264225,4.153706,-2.879557,4.797652,-8.180454,4.458842,2.362778,5.955606,-4.308099,-1.516958,-0.760905,-0.712156,-5.383516,3.876441,-3.055270,6.327928,-8.134085,-2.882966,-8.388918,2.192546,-9.011829,-4.810260,-3.051572,-5.087665,2.688747,8.090781,-7.094964,5.005393,8.770776,-3.176683,-1.192308,-4.659810,6.013779,1.523675,-2.539954,-1.587733,3.631711,-6.570970,9.430543,6.978564,7.834436,-4.365824,-9.332209,-1.806952,-9.798595,-5.243129,4.091541,9.883781,3.787073,-8.019333,8.380419,-4.366492,-0.303333,1.075616,-6.618359,-5.787835,9.346923,0.938370,8.613509,4.067115,5.069728,-3.919702,-6.872423,1.583035,2.423930,7.195515,-1.736253,9.496566,6.429469,-1.630291,8.106109,3.668409,-0.676670,7.594081,4.631605,2.901113,-4.556156,8.043802,-7.406086,-6.870249,-3.022530,-6.286433,9.854879,8.978788,-4.657318,-7.968788,5.976774,-3.510424,0.826317,3.422029,1.527287,1.806643,-8.545172,-1.122716,5.511657,-6.529915,0.207795,-0.893160,0.195407,4.819862,-8.373826,9.823185,5.287835,2.541389,6.903909,8.685358,7.136064,-0.749085,3.487356,-8.374985,3.461631,3.601906,-5.870457,-6.640642,5.101640,1.645177,6.706658,4.513265,7.644466,2.663817,4.789868,8.605097,1.138277,5.590569,-2.849081,7.084958,-2.065980,-4.142901,0.488169,-2.165237,-1.501435,-6.580058,6.226045,3.374044,-3.866874,2.193052,3.431355,-6.072166,0.590014,-5.218618,-5.629961,8.420319,-1.815130,8.364544,-4.816158,-9.139951,0.463503,7.771583,0.374680,8.284080,3.970957,0.379995,8.561789,-9.241147,7.200442,7.379134,-0.635907,8.111184,-6.487672,-9.029968,-4.097150,-3.787487,9.046421,-4.893880,-1.720091,-5.209993,7.917311,-2.625326,-5.163467,5.977454,2.072374,4.528086,3.616551,-4.301858,3.798310,6.595330,-5.698700,2.327827,8.268221,-8.141214,-1.458520,5.260553,-0.207644,-4.732282,-5.094661,0.900806,-8.944881,-7.131607,0.770772,-0.116504,1.330355,-1.158709,7.965804,-5.033964,-2.425582,-1.900841,1.851944,-9.725208,7.283537,-5.908596,-8.693746,-3.183282,-1.924898,-8.841582,8.316728,-9.159256,-8.761038,-4.167427,2.564575,-0.083160,6.980878,-2.869420,9.538769,4.379621,4.183384,-7.479525,6.735845,7.961985,6.400624,8.209721,-0.066905,-1.380604,-6.299469,-5.263897,9.656137,9.182232,4.278130,3.135673,-9.087517,4.762535,8.479343,6.977084,-2.272042,-0.352388,3.203549,7.090008,-1.944596,-2.883246,-8.816812,-7.133543,-8.576546,9.192509,7.036761,-9.208860,7.918732,0.939973,4.054294,6.196439,0.456281,-7.404239,3.795210,-0.905613,1.434669,-0.232171,5.613995,2.176758,3.890565,9.076831,3.275362,-7.692151,-0.020617,6.505137,0.933378,6.306982,7.099830,1.783352,8.303145,-9.698542,-1.578631,7.180311,6.014957,3.781506,3.298624,5.642733,-2.408721,5.557036,5.612144,0.212545,7.423065,-5.703763,-0.905205,2.462285,9.244178,-3.489936,-8.212872,-5.168059,-6.157863,-6.375860,-9.037450,-0.530756,-9.024004,6.579600,8.089095,-2.291120,-6.429802,4.136022,-8.761830,-4.840349,-7.432549,2.989852,-9.568332,-7.381493,-4.805885,-1.978013,-1.126134,5.380632,-3.201647,-5.580108,2.665122,-1.834450,2.113497,-7.009441,-5.213879,-3.445721,6.808599,-7.035314,2.862802,-9.366160,3.241656,-3.332515,-5.762043], dtype = "float32")#candidate|2703|(637,)|const|float32
var_2704 = relay.var("var_2704", dtype = "uint8", shape = (675,))#candidate|2704|(675,)|var|uint8
var_2705 = relay.var("var_2705", dtype = "float64", shape = (126,))#candidate|2705|(126,)|var|float64
call_2702 = relay.TupleGetItem(func_1638_call(relay.reshape(const_2703.astype('float32'), [7, 13, 7]), relay.reshape(var_2704.astype('uint8'), [5, 135]), relay.reshape(var_2705.astype('float64'), [126,]), ), 2)
call_2706 = relay.TupleGetItem(func_1642_call(relay.reshape(const_2703.astype('float32'), [7, 13, 7]), relay.reshape(var_2704.astype('uint8'), [5, 135]), relay.reshape(var_2705.astype('float64'), [126,]), ), 2)
uop_2711 = relay.sqrt(call_2695.astype('float64')) # shape=(2, 2, 11)
uop_2713 = relay.sqrt(call_2696.astype('float64')) # shape=(2, 2, 11)
func_193_call = mod.get_global_var('func_193')
func_196_call = mutated_mod.get_global_var('func_196')
call_2719 = func_193_call(relay.reshape(call_2702.astype('float64'), [8, 6, 8]))
call_2720 = func_193_call(relay.reshape(call_2702.astype('float64'), [8, 6, 8]))
uop_2734 = relay.atan(uop_2711.astype('float32')) # shape=(2, 2, 11)
uop_2736 = relay.atan(uop_2713.astype('float32')) # shape=(2, 2, 11)
output = relay.Tuple([call_2702,const_2703,var_2704,var_2705,call_2719,uop_2734,])
output2 = relay.Tuple([call_2706,const_2703,var_2704,var_2705,call_2720,uop_2736,])
func_2737 = relay.Function([var_2704,var_2705,], output)
mod['func_2737'] = func_2737
mod = relay.transform.InferType()(mod)
var_2738 = relay.var("var_2738", dtype = "uint8", shape = (675,))#candidate|2738|(675,)|var|uint8
var_2739 = relay.var("var_2739", dtype = "float64", shape = (126,))#candidate|2739|(126,)|var|float64
output = func_2737(var_2738,var_2739,)
func_2740 = relay.Function([var_2738,var_2739,], output)
mutated_mod['func_2740'] = func_2740
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2762 = relay.var("var_2762", dtype = "uint8", shape = (4, 1, 9))#candidate|2762|(4, 1, 9)|var|uint8
const_2763 = relay.const([[[-5,7,-5,4,8,1,3,-3,1],[4,-3,-5,-10,-8,-9,-4,3,8],[4,-3,9,-6,-8,-5,-5,1,8],[2,8,6,-8,-4,4,9,1,-10],[8,5,3,6,-9,-9,-2,-6,2],[-10,2,1,3,4,4,6,-8,-7]],[[-1,2,-10,8,3,-4,3,5,-9],[1,-8,8,9,-5,5,9,-5,-7],[-3,8,-8,-10,8,8,2,1,-2],[-2,-1,9,9,3,10,-2,6,8],[-4,-6,-4,2,-2,7,-10,-7,6],[-10,-4,2,4,9,-5,3,-7,-4]],[[3,-8,8,1,4,2,5,-8,6],[5,3,-9,10,10,3,8,-1,-3],[2,9,-3,8,7,-9,6,-3,5],[-7,-8,-4,-10,-10,-1,-10,-6,-10],[3,9,2,3,9,6,1,-2,-2],[-1,1,5,-4,-4,5,-1,2,10]],[[-7,1,-10,3,10,-2,2,-7,7],[-4,7,3,-3,-4,-6,8,-9,1],[-4,3,-10,10,-10,-6,7,10,-9],[9,9,7,-8,-9,2,6,-6,3],[4,9,-10,-3,-4,-2,5,-5,5],[-10,-6,7,10,-5,-2,4,2,2]]], dtype = "uint8")#candidate|2763|(4, 6, 9)|const|uint8
bop_2764 = relay.left_shift(var_2762.astype('uint8'), const_2763.astype('uint8')) # shape=(4, 6, 9)
func_1878_call = mod.get_global_var('func_1878')
func_1880_call = mutated_mod.get_global_var('func_1880')
const_2772 = relay.const([-1.484973,-0.044624,-4.791420,-9.111768,1.633771,-8.030879,-7.098094,-7.607443,-4.110848,6.079749,-2.242860,-4.663734,3.547530,-2.143959,2.532006,-1.944328,-0.182421,1.473541,-5.833712,-3.537880,8.387824,-8.094459,-8.990335,-8.814601,3.014466,5.462629,9.180182,-6.030426,8.541899,-6.612506,-5.207046,-8.217511,6.843717,2.537126,-9.891034,1.646202,-3.381370,5.729427,-5.619485,-8.666417,6.312847,3.947993,7.415556,0.791342,-7.791125,0.108681,-2.164407,1.715455,1.952062,-7.625983,6.634848,-7.808663,9.563627,-2.905088,7.689057,1.427022,-5.130344,-9.870805,-3.992151,-1.578236,5.051317,2.335457,0.042043,9.421748,0.924894,-5.384840,6.251735,8.776905,-4.244869,-6.719895,-2.044570,-4.662518,-0.974007,-7.580674,6.763584,5.846524,-9.213191,-8.712824,-1.560026,5.435401,4.062946,-9.373383,-8.647485,-8.582510,4.058467,-1.573823,-7.817997,-2.654267,3.558109,-5.573231,0.156829,8.476810,-6.162631,9.907613,9.753233,1.046579,6.250736,7.786939,2.309661,-0.016818,-9.465195,-9.372396,-1.715923,4.829108,5.440741,-0.840998,-9.613910,-3.152516,2.914388,3.013123,-5.428969,-5.286486,-8.813474,5.642830,3.004862,-9.719734,5.237921,-5.674975,2.076550,1.314754,5.813102,3.941163,-9.764770,3.503447,0.078936,-2.025075,5.591412,4.019635,7.812773,8.342428,1.654964,-3.429057,-1.576458,-4.060894,9.767574,-1.735222,9.742626,-7.976641,8.749577,3.403417,-4.329316,4.648258,-8.374484,6.743765,1.657881,-7.742672,-1.138996,0.457770,-1.256486,-5.705669,-6.629816,-8.196157,-2.180135,1.401942,-1.252017,-1.428548,-1.172288,-7.428184,4.535133,-8.824881,-2.458189,3.681545,-6.569047,0.283939,-5.418325,-5.518779,-9.749225,-6.463606,1.161076,4.768090,-1.686448,-0.726486,5.741326,-1.628267,-8.365247,0.446761,8.392382,1.349704,-2.576123,-9.298159,-1.815718,5.708509,-1.306401,0.492406,7.762461,1.531803,-0.772148,-3.290237,2.264676,-6.006480,-1.451879,-8.621124,-7.916876,3.880270,3.820987,7.394216,-6.551910,-1.952686,-1.213690,-1.898409,-0.382445,-8.882290,1.702227,-6.633916,3.377186,-5.841401,7.763732,4.818237,-3.611694,-9.137262,9.031896,4.368341,-2.414886,-7.139265,0.290487,-3.675513,-3.757967,-5.258602,8.526580,-5.649726,-7.019861,-2.642759,-2.717537,6.603871,-6.122511,-4.272463,-9.528462,6.819021,8.741838,3.265299,-1.926977,3.716043,-8.542291,-1.445621,-1.704758,-4.409874,1.210218,-0.757236,0.288775,-9.091709,8.143543,3.061331,-4.770880,-7.825537,-0.161619,-3.342458,5.597714,7.585280,-1.391533,-5.557961,3.069122,9.394601,4.749419,-7.239739,4.568684,0.953381,6.130026,-6.300910,7.647351,4.446550,8.894292,7.410893,6.965634,-8.893124,-3.442309,3.694640,-7.576445,5.406818,-6.605108,-2.890353,-4.194177,8.779657,-6.862850,-6.869989,-7.056486,2.050653,7.868294,9.569093,0.707452,-3.555843,-5.075151,3.274929,-5.698756,-4.819980,-5.913314,8.895435,-1.798424,-9.602072,-4.317464,9.209945,8.462632,-5.298881,0.794202,1.897868,-8.779586,-5.568890,9.540190,0.973800,-3.351252,6.788752,-8.365878,-1.424945,4.644627,4.001480,0.913658,-2.266077,3.718371,9.556268,-8.963012,8.167420,2.900687,7.480752,-7.563133,-9.573408,7.158768,0.848157,-9.430479,-5.982310,4.404546,-6.899179,-2.820018,0.353797,8.433756,-6.970003,2.985140,-4.898766,-5.602812,-3.821020,-9.045453,0.090131,-0.884117,3.365716,-9.111247,-8.850818,1.220592,-1.171428,3.547103,5.325638,3.869026,3.148331,-6.024965,5.233320,7.528613,0.062023,-9.517931,2.931958,9.013531,-2.387462,4.724159,6.818892,6.205738,-1.886892,2.584063,9.287096,-9.397652,-9.110413,2.832604,3.665960,2.934536,-0.295423,8.518245,-9.468054,4.660541,3.458782,8.823966,0.092369,-6.228508,7.161988,-2.504313,-0.082829,4.722619,6.288793,-2.790153,-0.030303,4.418388,-5.290350,-6.689601,1.531904,0.995496,-5.772467,-2.504310,0.905956,-7.521371,-7.328713,3.874664,5.063226,2.366802,0.339913,4.744826,3.765268,1.932038,1.550424,-1.749910,5.356933,8.514214,-3.634038,1.068380,0.996624,0.339263,-5.901569,-6.846629,4.854461,-8.540906,-1.261397,-8.354975,-6.109428,3.437916,-7.725116,7.629304,9.360926,6.935657,-1.368304,1.203519,-6.444545,1.543574,7.877595,-7.007992,-4.835163,-8.392108,-5.805238,-7.566618,-7.513815,4.946502,-6.161292,-5.567878,2.576564,4.884793,-6.610589,2.421287], dtype = "float64")#candidate|2772|(429,)|const|float64
call_2771 = relay.TupleGetItem(func_1878_call(relay.reshape(const_2772.astype('float64'), [11, 13, 3])), 0)
call_2773 = relay.TupleGetItem(func_1880_call(relay.reshape(const_2772.astype('float64'), [11, 13, 3])), 0)
output = relay.Tuple([bop_2764,call_2771,const_2772,])
output2 = relay.Tuple([bop_2764,call_2773,const_2772,])
func_2786 = relay.Function([var_2762,], output)
mod['func_2786'] = func_2786
mod = relay.transform.InferType()(mod)
var_2787 = relay.var("var_2787", dtype = "uint8", shape = (4, 1, 9))#candidate|2787|(4, 1, 9)|var|uint8
output = func_2786(var_2787)
func_2788 = relay.Function([var_2787], output)
mutated_mod['func_2788'] = func_2788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2793 = relay.TupleGetItem(func_2419_call(), 0)
call_2794 = relay.TupleGetItem(func_2421_call(), 0)
uop_2822 = relay.atan(call_2793.astype('float64')) # shape=(9, 1, 10)
uop_2824 = relay.atan(call_2794.astype('float64')) # shape=(9, 1, 10)
bop_2825 = relay.bitwise_and(uop_2822.astype('int16'), relay.reshape(call_2793.astype('int16'), relay.shape_of(uop_2822))) # shape=(9, 1, 10)
bop_2828 = relay.bitwise_and(uop_2824.astype('int16'), relay.reshape(call_2794.astype('int16'), relay.shape_of(uop_2824))) # shape=(9, 1, 10)
func_2655_call = mod.get_global_var('func_2655')
func_2659_call = mutated_mod.get_global_var('func_2659')
const_2832 = relay.const([[-2,7],[1,-6],[3,-2],[9,7],[1,7],[-4,-8],[-7,7],[-8,-1],[5,-4],[9,-9],[-10,-9],[9,6],[5,-9],[-4,1],[-9,1],[-7,-8],[10,9],[4,4],[-8,-2],[-10,-8],[4,3],[8,1],[-2,5],[-5,-10],[-6,4],[8,3],[10,5],[-4,6],[-4,-5],[-3,-10],[-9,4],[9,-8],[-4,5],[10,-10],[-3,-2],[-9,4],[7,6],[8,-7],[-10,-10],[5,-3],[10,-1],[-6,-1],[-5,8],[3,-7],[-3,-2],[-8,7],[-10,-6],[5,-3],[7,-5],[4,-6],[1,3],[5,-6],[-5,-9],[-9,-1],[-3,3],[-8,5],[10,-2],[6,-5],[1,-2],[-10,-5],[7,9],[10,5],[9,-3],[4,-6],[-8,1],[6,2],[8,6],[-2,-4],[-4,-7],[3,2],[-9,10],[-5,-8],[-7,-8],[8,2],[5,3],[-8,-10],[-8,-9],[-8,2],[7,9],[-10,-4],[7,-10],[3,-1],[10,10],[9,-2],[-7,-7],[-3,-2],[-4,-10],[-1,1],[-8,5],[7,-4],[7,4],[-3,4],[-7,-7],[-3,1],[-2,-2],[-7,3],[8,-1],[-3,1],[-6,-8],[1,-1],[5,1],[6,5],[-2,3],[4,7],[5,6],[-10,7],[-1,-6],[-9,3],[4,-5],[-3,-10],[-9,-4],[-10,-4],[6,2],[8,3],[6,-2],[-8,-2],[8,-5],[-8,-5],[2,2],[10,-9]], dtype = "int8")#candidate|2832|(120, 2)|const|int8
var_2833 = relay.var("var_2833", dtype = "float64", shape = (1, 384))#candidate|2833|(1, 384)|var|float64
call_2831 = relay.TupleGetItem(func_2655_call(relay.reshape(const_2832.astype('int8'), [240,]), relay.reshape(var_2833.astype('float64'), [8, 6, 8]), ), 0)
call_2834 = relay.TupleGetItem(func_2659_call(relay.reshape(const_2832.astype('int8'), [240,]), relay.reshape(var_2833.astype('float64'), [8, 6, 8]), ), 0)
func_1036_call = mod.get_global_var('func_1036')
func_1039_call = mutated_mod.get_global_var('func_1039')
const_2837 = relay.const([[3.618973,8.185045,-8.232900,1.429443,6.418245,6.041259],[-4.010767,6.873551,-8.071348,5.042816,-8.957228,-9.240088],[-2.255487,-8.078021,9.336257,8.469818,-3.698937,-0.357447],[-9.642236,-4.111736,-4.695540,-8.449574,6.762317,-9.489928],[3.893856,-6.629061,-2.057029,-1.127967,7.840387,8.916843],[0.495298,7.040218,-2.761742,-1.892151,2.375019,-0.848336],[7.433265,-1.831345,-7.736863,-3.504121,-9.037681,7.067664],[4.097221,-9.339248,8.347350,9.946946,-2.959218,-5.009767],[5.718344,4.177627,5.934144,-3.179484,-4.897971,-2.059766],[0.425936,-1.220814,6.038326,-3.326424,-8.272314,9.887471],[-2.450631,-8.878879,8.741284,1.902876,8.409915,6.585120],[6.922108,4.643593,-5.834587,-4.376978,-2.854358,-8.525768],[5.105083,-3.233521,7.216133,9.537941,0.754297,-8.314228],[-2.537851,4.234681,-9.935392,8.570520,-9.077638,4.258590],[-1.678044,-8.211948,8.930279,-9.336966,0.495380,-8.503310],[0.476569,-8.155145,0.970739,7.561306,4.971874,1.390591],[-9.495128,7.937516,-1.421942,1.733628,-7.444386,2.556478],[-3.550711,-9.109714,1.545455,-2.574037,-1.270720,6.949135],[8.445263,-5.882477,4.573906,-6.557029,-4.979743,-8.426972],[5.723193,6.874921,7.290611,2.153238,-3.169621,4.081486],[-6.128126,-9.149656,-9.373770,-8.480449,2.456343,-0.741134]], dtype = "float64")#candidate|2837|(21, 6)|const|float64
call_2836 = func_1036_call(relay.reshape(const_2837.astype('float64'), [1, 14, 9]))
call_2838 = func_1036_call(relay.reshape(const_2837.astype('float64'), [1, 14, 9]))
uop_2848 = relay.tan(const_2832.astype('float64')) # shape=(120, 2)
func_383_call = mod.get_global_var('func_383')
func_386_call = mutated_mod.get_global_var('func_386')
var_2855 = relay.var("var_2855", dtype = "float32", shape = (11,))#candidate|2855|(11,)|var|float32
call_2854 = func_383_call(relay.reshape(var_2855.astype('float32'), [11, 1]))
call_2856 = func_383_call(relay.reshape(var_2855.astype('float32'), [11, 1]))
bop_2866 = relay.bitwise_or(uop_2848.astype('int16'), relay.reshape(const_2832.astype('int16'), relay.shape_of(uop_2848))) # shape=(120, 2)
func_2655_call = mod.get_global_var('func_2655')
func_2659_call = mutated_mod.get_global_var('func_2659')
call_2870 = relay.TupleGetItem(func_2655_call(relay.reshape(uop_2848.astype('int8'), [240,]), relay.reshape(var_2833.astype('float64'), [8, 6, 8]), ), 7)
call_2871 = relay.TupleGetItem(func_2659_call(relay.reshape(uop_2848.astype('int8'), [240,]), relay.reshape(var_2833.astype('float64'), [8, 6, 8]), ), 7)
func_193_call = mod.get_global_var('func_193')
func_196_call = mutated_mod.get_global_var('func_196')
call_2873 = func_193_call(relay.reshape(call_2870.astype('float64'), [8, 6, 8]))
call_2874 = func_193_call(relay.reshape(call_2870.astype('float64'), [8, 6, 8]))
var_2893 = relay.var("var_2893", dtype = "float64", shape = (9, 9, 10))#candidate|2893|(9, 9, 10)|var|float64
bop_2894 = relay.less_equal(uop_2822.astype('bool'), var_2893.astype('bool')) # shape=(9, 9, 10)
bop_2897 = relay.less_equal(uop_2824.astype('bool'), var_2893.astype('bool')) # shape=(9, 9, 10)
func_2526_call = mod.get_global_var('func_2526')
func_2529_call = mutated_mod.get_global_var('func_2529')
call_2901 = relay.TupleGetItem(func_2526_call(relay.reshape(call_2831.astype('uint64'), [44,]), relay.reshape(const_2837.astype('float64'), [126,]), ), 5)
call_2902 = relay.TupleGetItem(func_2529_call(relay.reshape(call_2831.astype('uint64'), [44,]), relay.reshape(const_2837.astype('float64'), [126,]), ), 5)
bop_2905 = relay.logical_and(call_2854.astype('bool'), relay.reshape(var_2855.astype('bool'), relay.shape_of(call_2854))) # shape=(11, 1)
bop_2908 = relay.logical_and(call_2856.astype('bool'), relay.reshape(var_2855.astype('bool'), relay.shape_of(call_2856))) # shape=(11, 1)
output = relay.Tuple([bop_2825,call_2831,var_2833,call_2836,const_2837,bop_2866,call_2870,call_2873,bop_2894,call_2901,bop_2905,])
output2 = relay.Tuple([bop_2828,call_2834,var_2833,call_2838,const_2837,bop_2866,call_2871,call_2874,bop_2897,call_2902,bop_2908,])
func_2916 = relay.Function([var_2833,var_2855,var_2893,], output)
mod['func_2916'] = func_2916
mod = relay.transform.InferType()(mod)
mutated_mod['func_2916'] = func_2916
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2916_call = mutated_mod.get_global_var('func_2916')
var_2918 = relay.var("var_2918", dtype = "float64", shape = (1, 384))#candidate|2918|(1, 384)|var|float64
var_2919 = relay.var("var_2919", dtype = "float32", shape = (11,))#candidate|2919|(11,)|var|float32
var_2920 = relay.var("var_2920", dtype = "float64", shape = (9, 9, 10))#candidate|2920|(9, 9, 10)|var|float64
call_2917 = func_2916_call(var_2918,var_2919,var_2920,)
output = call_2917
func_2921 = relay.Function([var_2918,var_2919,var_2920,], output)
mutated_mod['func_2921'] = func_2921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2943 = relay.TupleGetItem(func_2419_call(), 0)
call_2944 = relay.TupleGetItem(func_2421_call(), 0)
output = call_2943
output2 = call_2944
func_2945 = relay.Function([], output)
mod['func_2945'] = func_2945
mod = relay.transform.InferType()(mod)
output = func_2945()
func_2946 = relay.Function([], output)
mutated_mod['func_2946'] = func_2946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_2965 = relay.TupleGetItem(func_2419_call(), 2)
call_2966 = relay.TupleGetItem(func_2421_call(), 2)
func_1036_call = mod.get_global_var('func_1036')
func_1039_call = mutated_mod.get_global_var('func_1039')
const_2978 = relay.const([[4.594583,4.367643,-9.679687,4.209721,0.599100,2.422746,-8.864640,3.739005,9.432230,3.059202,6.094458,3.006521,-0.711268,8.102888,8.408892,9.323837,8.991182,-5.577228,4.032249,-7.426930,-6.397665,-7.554981,-8.616758,-2.743722,-4.501166,8.569977,7.080322,7.238786,5.760835,-4.801918,-7.484796,-4.235430,0.139993,6.450560,-1.115631,5.929917,-3.655210,-9.775229,4.797901,-2.207535,-9.155570,0.636952,2.009342,9.297726,7.701113,9.375452,-2.336911,4.776597,-9.322984,-9.073343,1.086531,9.604495,-4.203469,-0.758063,-4.521410,9.708785,9.488968,0.617503,2.111961,2.579473,-7.955783,-6.160710,-8.044230,-9.487816,2.856686,-9.370672,-2.064024,-3.823847,3.033058,-8.329756,8.065864,-3.489765,-0.362544,9.324339,0.300739,6.707001,9.189053,-8.821746,7.938362,-2.938239,0.358478,1.023840,9.223265,-5.533594,6.508037,-8.154087,-3.633429,8.715074,-2.135494,1.462212,6.782868,-1.094531,-9.278169,7.644996,4.826017,-3.420599,-9.459389,7.125077,6.604095,-2.542369,-2.667257,-7.052600,5.750280,-6.725445,-6.754458,1.903836,-9.019005,3.735149,-6.666088,-9.577644,-0.536011,8.356098,2.577630,-1.677311,-2.585064,0.623275,-0.722425,-7.072951,0.211360,3.411486,-5.961472,7.560119,-0.968913,4.789571,0.400281,6.383436]], dtype = "float64")#candidate|2978|(1, 126)|const|float64
call_2977 = func_1036_call(relay.reshape(const_2978.astype('float64'), [1, 14, 9]))
call_2979 = func_1036_call(relay.reshape(const_2978.astype('float64'), [1, 14, 9]))
uop_3002 = relay.sinh(const_2978.astype('float64')) # shape=(1, 126)
output = relay.Tuple([call_2965,call_2977,uop_3002,])
output2 = relay.Tuple([call_2966,call_2979,uop_3002,])
func_3010 = relay.Function([], output)
mod['func_3010'] = func_3010
mod = relay.transform.InferType()(mod)
mutated_mod['func_3010'] = func_3010
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mutated_mod.get_global_var('func_3010')
call_3011 = func_3010_call()
output = call_3011
func_3012 = relay.Function([], output)
mutated_mod['func_3012'] = func_3012
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3034 = relay.TupleGetItem(func_3010_call(), 0)
call_3035 = relay.TupleGetItem(func_3012_call(), 0)
output = relay.Tuple([call_3034,])
output2 = relay.Tuple([call_3035,])
func_3038 = relay.Function([], output)
mod['func_3038'] = func_3038
mod = relay.transform.InferType()(mod)
output = func_3038()
func_3039 = relay.Function([], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3057 = relay.TupleGetItem(func_3010_call(), 2)
call_3058 = relay.TupleGetItem(func_3012_call(), 2)
output = call_3057
output2 = call_3058
func_3060 = relay.Function([], output)
mod['func_3060'] = func_3060
mod = relay.transform.InferType()(mod)
mutated_mod['func_3060'] = func_3060
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3060_call = mutated_mod.get_global_var('func_3060')
call_3061 = func_3060_call()
output = call_3061
func_3062 = relay.Function([], output)
mutated_mod['func_3062'] = func_3062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3060_call = mod.get_global_var('func_3060')
func_3062_call = mutated_mod.get_global_var('func_3062')
call_3067 = func_3060_call()
call_3068 = func_3060_call()
var_3078 = relay.var("var_3078", dtype = "float64", shape = (10, 126))#candidate|3078|(10, 126)|var|float64
bop_3079 = relay.power(call_3067.astype('float32'), var_3078.astype('float32')) # shape=(10, 126)
bop_3082 = relay.power(call_3068.astype('float32'), var_3078.astype('float32')) # shape=(10, 126)
func_2916_call = mod.get_global_var('func_2916')
func_2921_call = mutated_mod.get_global_var('func_2921')
var_3086 = relay.var("var_3086", dtype = "float64", shape = (384,))#candidate|3086|(384,)|var|float64
var_3087 = relay.var("var_3087", dtype = "float32", shape = (11,))#candidate|3087|(11,)|var|float32
var_3088 = relay.var("var_3088", dtype = "float64", shape = (810,))#candidate|3088|(810,)|var|float64
call_3085 = relay.TupleGetItem(func_2916_call(relay.reshape(var_3086.astype('float64'), [1, 384]), relay.reshape(var_3087.astype('float32'), [11,]), relay.reshape(var_3088.astype('float64'), [9, 9, 10]), ), 4)
call_3089 = relay.TupleGetItem(func_2921_call(relay.reshape(var_3086.astype('float64'), [1, 384]), relay.reshape(var_3087.astype('float32'), [11,]), relay.reshape(var_3088.astype('float64'), [9, 9, 10]), ), 4)
output = relay.Tuple([bop_3079,call_3085,var_3086,var_3087,var_3088,])
output2 = relay.Tuple([bop_3082,call_3089,var_3086,var_3087,var_3088,])
func_3096 = relay.Function([var_3078,var_3086,var_3087,var_3088,], output)
mod['func_3096'] = func_3096
mod = relay.transform.InferType()(mod)
var_3097 = relay.var("var_3097", dtype = "float64", shape = (10, 126))#candidate|3097|(10, 126)|var|float64
var_3098 = relay.var("var_3098", dtype = "float64", shape = (384,))#candidate|3098|(384,)|var|float64
var_3099 = relay.var("var_3099", dtype = "float32", shape = (11,))#candidate|3099|(11,)|var|float32
var_3100 = relay.var("var_3100", dtype = "float64", shape = (810,))#candidate|3100|(810,)|var|float64
output = func_3096(var_3097,var_3098,var_3099,var_3100,)
func_3101 = relay.Function([var_3097,var_3098,var_3099,var_3100,], output)
mutated_mod['func_3101'] = func_3101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3139 = relay.TupleGetItem(func_3010_call(), 0)
call_3140 = relay.TupleGetItem(func_3012_call(), 0)
var_3144 = relay.var("var_3144", dtype = "uint64", shape = (44,))#candidate|3144|(44,)|var|uint64
bop_3145 = relay.minimum(call_3139.astype('int64'), relay.reshape(var_3144.astype('int64'), relay.shape_of(call_3139))) # shape=(44,)
bop_3148 = relay.minimum(call_3140.astype('int64'), relay.reshape(var_3144.astype('int64'), relay.shape_of(call_3140))) # shape=(44,)
output = bop_3145
output2 = bop_3148
func_3150 = relay.Function([var_3144,], output)
mod['func_3150'] = func_3150
mod = relay.transform.InferType()(mod)
mutated_mod['func_3150'] = func_3150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3151 = relay.var("var_3151", dtype = "uint64", shape = (44,))#candidate|3151|(44,)|var|uint64
func_3150_call = mutated_mod.get_global_var('func_3150')
call_3152 = func_3150_call(var_3151)
output = call_3152
func_3153 = relay.Function([var_3151], output)
mutated_mod['func_3153'] = func_3153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2946_call = mutated_mod.get_global_var('func_2946')
call_3192 = func_2945_call()
call_3193 = func_2945_call()
var_3204 = relay.var("var_3204", dtype = "int64", shape = (9, 14, 10))#candidate|3204|(9, 14, 10)|var|int64
bop_3205 = relay.right_shift(call_3192.astype('int16'), var_3204.astype('int16')) # shape=(9, 14, 10)
bop_3208 = relay.right_shift(call_3193.astype('int16'), var_3204.astype('int16')) # shape=(9, 14, 10)
func_383_call = mod.get_global_var('func_383')
func_386_call = mutated_mod.get_global_var('func_386')
var_3214 = relay.var("var_3214", dtype = "float32", shape = (11,))#candidate|3214|(11,)|var|float32
call_3213 = func_383_call(relay.reshape(var_3214.astype('float32'), [11, 1]))
call_3215 = func_383_call(relay.reshape(var_3214.astype('float32'), [11, 1]))
bop_3221 = relay.equal(var_3204.astype('bool'), call_3192.astype('bool')) # shape=(9, 14, 10)
bop_3224 = relay.equal(var_3204.astype('bool'), call_3193.astype('bool')) # shape=(9, 14, 10)
func_1878_call = mod.get_global_var('func_1878')
func_1880_call = mutated_mod.get_global_var('func_1880')
var_3238 = relay.var("var_3238", dtype = "float64", shape = (13, 33))#candidate|3238|(13, 33)|var|float64
call_3237 = relay.TupleGetItem(func_1878_call(relay.reshape(var_3238.astype('float64'), [11, 13, 3])), 1)
call_3239 = relay.TupleGetItem(func_1880_call(relay.reshape(var_3238.astype('float64'), [11, 13, 3])), 1)
output = relay.Tuple([bop_3205,call_3213,var_3214,bop_3221,call_3237,var_3238,])
output2 = relay.Tuple([bop_3208,call_3215,var_3214,bop_3224,call_3239,var_3238,])
func_3243 = relay.Function([var_3204,var_3214,var_3238,], output)
mod['func_3243'] = func_3243
mod = relay.transform.InferType()(mod)
mutated_mod['func_3243'] = func_3243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3243_call = mutated_mod.get_global_var('func_3243')
var_3245 = relay.var("var_3245", dtype = "int64", shape = (9, 14, 10))#candidate|3245|(9, 14, 10)|var|int64
var_3246 = relay.var("var_3246", dtype = "float32", shape = (11,))#candidate|3246|(11,)|var|float32
var_3247 = relay.var("var_3247", dtype = "float64", shape = (13, 33))#candidate|3247|(13, 33)|var|float64
call_3244 = func_3243_call(var_3245,var_3246,var_3247,)
output = call_3244
func_3248 = relay.Function([var_3245,var_3246,var_3247,], output)
mutated_mod['func_3248'] = func_3248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3060_call = mod.get_global_var('func_3060')
func_3062_call = mutated_mod.get_global_var('func_3062')
call_3336 = func_3060_call()
call_3337 = func_3060_call()
output = relay.Tuple([call_3336,])
output2 = relay.Tuple([call_3337,])
func_3338 = relay.Function([], output)
mod['func_3338'] = func_3338
mod = relay.transform.InferType()(mod)
mutated_mod['func_3338'] = func_3338
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mutated_mod.get_global_var('func_3338')
call_3339 = func_3338_call()
output = call_3339
func_3340 = relay.Function([], output)
mutated_mod['func_3340'] = func_3340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2946_call = mutated_mod.get_global_var('func_2946')
call_3360 = func_2945_call()
call_3361 = func_2945_call()
uop_3364 = relay.rsqrt(call_3360.astype('float32')) # shape=(9, 1, 10)
uop_3366 = relay.rsqrt(call_3361.astype('float32')) # shape=(9, 1, 10)
uop_3372 = relay.sigmoid(uop_3364.astype('float64')) # shape=(9, 1, 10)
uop_3374 = relay.sigmoid(uop_3366.astype('float64')) # shape=(9, 1, 10)
func_3150_call = mod.get_global_var('func_3150')
func_3153_call = mutated_mod.get_global_var('func_3153')
var_3377 = relay.var("var_3377", dtype = "uint64", shape = (44,))#candidate|3377|(44,)|var|uint64
call_3376 = func_3150_call(relay.reshape(var_3377.astype('uint64'), [44,]))
call_3378 = func_3150_call(relay.reshape(var_3377.astype('uint64'), [44,]))
func_2526_call = mod.get_global_var('func_2526')
func_2529_call = mutated_mod.get_global_var('func_2529')
var_3384 = relay.var("var_3384", dtype = "float64", shape = (126,))#candidate|3384|(126,)|var|float64
call_3383 = relay.TupleGetItem(func_2526_call(relay.reshape(var_3377.astype('uint64'), [44,]), relay.reshape(var_3384.astype('float64'), [126,]), ), 2)
call_3385 = relay.TupleGetItem(func_2529_call(relay.reshape(var_3377.astype('uint64'), [44,]), relay.reshape(var_3384.astype('float64'), [126,]), ), 2)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3393 = relay.TupleGetItem(func_3010_call(), 2)
call_3394 = relay.TupleGetItem(func_3012_call(), 2)
output = relay.Tuple([uop_3372,call_3376,var_3377,call_3383,var_3384,call_3393,])
output2 = relay.Tuple([uop_3374,call_3378,var_3377,call_3385,var_3384,call_3394,])
func_3395 = relay.Function([var_3377,var_3384,], output)
mod['func_3395'] = func_3395
mod = relay.transform.InferType()(mod)
var_3396 = relay.var("var_3396", dtype = "uint64", shape = (44,))#candidate|3396|(44,)|var|uint64
var_3397 = relay.var("var_3397", dtype = "float64", shape = (126,))#candidate|3397|(126,)|var|float64
output = func_3395(var_3396,var_3397,)
func_3398 = relay.Function([var_3396,var_3397,], output)
mutated_mod['func_3398'] = func_3398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_3411 = relay.TupleGetItem(func_3338_call(), 0)
call_3412 = relay.TupleGetItem(func_3340_call(), 0)
uop_3416 = relay.cos(call_3411.astype('float32')) # shape=(1, 126)
uop_3418 = relay.cos(call_3412.astype('float32')) # shape=(1, 126)
output = uop_3416
output2 = uop_3418
func_3419 = relay.Function([], output)
mod['func_3419'] = func_3419
mod = relay.transform.InferType()(mod)
mutated_mod['func_3419'] = func_3419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mutated_mod.get_global_var('func_3419')
call_3420 = func_3419_call()
output = call_3420
func_3421 = relay.Function([], output)
mutated_mod['func_3421'] = func_3421
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3433 = relay.var("var_3433", dtype = "uint16", shape = ())#candidate|3433|()|var|uint16
var_3434 = relay.var("var_3434", dtype = "uint16", shape = (6, 16, 4))#candidate|3434|(6, 16, 4)|var|uint16
bop_3435 = relay.logical_xor(var_3433.astype('uint16'), var_3434.astype('uint16')) # shape=(6, 16, 4)
output = relay.Tuple([bop_3435,])
output2 = relay.Tuple([bop_3435,])
func_3444 = relay.Function([var_3433,var_3434,], output)
mod['func_3444'] = func_3444
mod = relay.transform.InferType()(mod)
mutated_mod['func_3444'] = func_3444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3444_call = mutated_mod.get_global_var('func_3444')
var_3446 = relay.var("var_3446", dtype = "uint16", shape = ())#candidate|3446|()|var|uint16
var_3447 = relay.var("var_3447", dtype = "uint16", shape = (6, 16, 4))#candidate|3447|(6, 16, 4)|var|uint16
call_3445 = func_3444_call(var_3446,var_3447,)
output = call_3445
func_3448 = relay.Function([var_3446,var_3447,], output)
mutated_mod['func_3448'] = func_3448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3494 = relay.TupleGetItem(func_3010_call(), 1)
call_3495 = relay.TupleGetItem(func_3012_call(), 1)
output = call_3494
output2 = call_3495
func_3500 = relay.Function([], output)
mod['func_3500'] = func_3500
mod = relay.transform.InferType()(mod)
mutated_mod['func_3500'] = func_3500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3500_call = mutated_mod.get_global_var('func_3500')
call_3501 = func_3500_call()
output = call_3501
func_3502 = relay.Function([], output)
mutated_mod['func_3502'] = func_3502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_3542 = relay.TupleGetItem(func_2419_call(), 2)
call_3543 = relay.TupleGetItem(func_2421_call(), 2)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
var_3601 = relay.var("var_3601", dtype = "float32", shape = (637,))#candidate|3601|(637,)|var|float32
const_3602 = relay.const([1,-7,9,6,1,-6,2,-10,4,-7,3,-6,7,-8,-10,-4,-4,5,-10,5,5,-2,5,-9,-6,-3,-10,-5,4,1,-4,-4,8,2,-2,-9,-10,-4,-1,-3,9,-7,9,-5,7,7,-1,-8,10,-6,10,-9,-6,-7,-6,-5,8,-4,-4,-10,-5,10,5,6,1,8,-7,4,-8,10,1,10,5,-6,5,10,2,7,-2,-3,-4,6,7,-3,-1,10,-8,1,6,-4,3,4,-8,1,5,4,-6,-1,2,-8,8,-3,10,-10,1,-9,10,8,-6,7,-4,1,3,2,7,-8,-8,1,-7,6,7,-10,1,-6,-8,8,-5,-3,10,-6,5,-2,-7,3,-8,-9,6,-3,-9,4,1,1,-1,-8,8,-10,10,-8,-6,10,-1,8,-10,6,9,9,2,-10,2,5,-4,5,-6,-10,5,8,-8,-3,9,-8,-9,-2,4,-7,-2,8,-7,9,-7,8,8,6,-6,4,10,6,8,-2,4,1,-2,-3,4,-4,2,1,-10,3,9,1,-9,7,-9,-2,-8,8,-3,-9,-2,8,-5,-3,9,10,3,-5,10,-10,3,-9,-6,-9,7,-8,10,-4,-6,-9,3,10,1,-8,7,10,-9,-9,8,-4,7,-6,7,-2,-7,5,-8,-3,10,2,9,-9,10,3,-7,3,-8,-3,-8,-7,5,2,1,-2,7,10,5,4,7,-3,6,-10,-4,-1,-9,-5,4,-8,5,6,6,-9,5,-6,3,-9,-5,5,-4,-4,-7,-7,-8,-8,7,-6,9,-3,9,7,1,2,6,9,-4,-3,2,5,-9,3,-4,10,-2,-10,-4,-4,-4,5,4,10,-5,-10,-6,-6,-6,10,6,7,-3,-1,-5,-6,-1,-9,-2,-2,3,-3,7,-4,8,6,4,-2,-10,7,-7,-6,-1,3,5,2,9,9,-7,-10,-8,9,-10,10,5,5,10,2,6,7,-1,1,6,-8,4,-6,-6,2,-7,6,-10,5,4,-1,3,6,-7,-5,-9,-6,1,-3,8,-3,-10,6,-3,9,-8,-2,10,-6,4,-10,4,-4,-7,-2,-2,9,-5,3,-7,7,-5,-8,-6,-2,6,3,-5,7,-4,6,-3,2,-1,7,-7,3,3,5,-8,10,-8,-5,2,6,10,-3,-8,-2,10,-8,6,-7,5,-10,8,6,-5,-10,5,-2,-9,-10,2,7,-3,-6,-6,-8,4,3,-10,-9,-2,-9,-4,-1,-7,-9,3,10,-1,-3,-1,8,-10,9,-10,2,-7,8,-3,-4,8,-3,1,4,-10,-9,-9,6,9,-9,6,-2,4,4,-7,-2,-4,-5,-8,7,8,-1,-4,-8,4,4,1,-3,-6,-4,7,-7,3,-6,-2,1,10,9,-10,-8,4,-4,-10,10,6,-8,-4,-6,8,7,4,10,-9,7,-5,4,9,-4,5,-6,2,5,-10,2,-10,9,-7,9,7,-5,-3,4,7,4,4,4,-1,-1,-10,10,-3,6,-8,-8,-3,1,-4,-9,-1,-4,10,-10,-8,5,-5,10,3,-10,2,-8,-2,10,-2,-6,3,-1,-1,5,3,9,-4,7,-6,-10,4,-3,7,-10,-4,5,10,10,6,-9,7,8,-7,-1,-10,1,-9,10,-10,8,-1,-3,8,10,-1,4,9,3,6,10,5,2,8,3,-4,-1,-3,-6,8,-8,5,10,3,-1,-7,7,-2,7,2,-7,-10,-1,-5,-7,-3,5,-8,-3,8,2,-4,-9,-7,-8,8,-5,-6,-5,-3,7,7,5,6,-6,3,10,-6,-6,5,10,-9], dtype = "uint8")#candidate|3602|(675,)|const|uint8
var_3603 = relay.var("var_3603", dtype = "float64", shape = (21, 6))#candidate|3603|(21, 6)|var|float64
call_3600 = relay.TupleGetItem(func_1638_call(relay.reshape(var_3601.astype('float32'), [7, 13, 7]), relay.reshape(const_3602.astype('uint8'), [5, 135]), relay.reshape(var_3603.astype('float64'), [126,]), ), 0)
call_3604 = relay.TupleGetItem(func_1642_call(relay.reshape(var_3601.astype('float32'), [7, 13, 7]), relay.reshape(const_3602.astype('uint8'), [5, 135]), relay.reshape(var_3603.astype('float64'), [126,]), ), 0)
output = relay.Tuple([call_3542,call_3600,var_3601,const_3602,var_3603,])
output2 = relay.Tuple([call_3543,call_3604,var_3601,const_3602,var_3603,])
func_3607 = relay.Function([var_3601,var_3603,], output)
mod['func_3607'] = func_3607
mod = relay.transform.InferType()(mod)
var_3608 = relay.var("var_3608", dtype = "float32", shape = (637,))#candidate|3608|(637,)|var|float32
var_3609 = relay.var("var_3609", dtype = "float64", shape = (21, 6))#candidate|3609|(21, 6)|var|float64
output = func_3607(var_3608,var_3609,)
func_3610 = relay.Function([var_3608,var_3609,], output)
mutated_mod['func_3610'] = func_3610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_3664 = relay.TupleGetItem(func_3338_call(), 0)
call_3665 = relay.TupleGetItem(func_3340_call(), 0)
output = relay.Tuple([call_3664,])
output2 = relay.Tuple([call_3665,])
func_3667 = relay.Function([], output)
mod['func_3667'] = func_3667
mod = relay.transform.InferType()(mod)
mutated_mod['func_3667'] = func_3667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mutated_mod.get_global_var('func_3667')
call_3668 = func_3667_call()
output = call_3668
func_3669 = relay.Function([], output)
mutated_mod['func_3669'] = func_3669
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3697 = relay.var("var_3697", dtype = "float32", shape = (8, 2, 8))#candidate|3697|(8, 2, 8)|var|float32
uop_3698 = relay.sigmoid(var_3697.astype('float32')) # shape=(8, 2, 8)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3708 = relay.TupleGetItem(func_3010_call(), 1)
call_3709 = relay.TupleGetItem(func_3012_call(), 1)
func_3607_call = mod.get_global_var('func_3607')
func_3610_call = mutated_mod.get_global_var('func_3610')
var_3719 = relay.var("var_3719", dtype = "float32", shape = (637,))#candidate|3719|(637,)|var|float32
call_3718 = relay.TupleGetItem(func_3607_call(relay.reshape(var_3719.astype('float32'), [637,]), relay.reshape(call_3708.astype('float64'), [21, 6]), ), 3)
call_3720 = relay.TupleGetItem(func_3610_call(relay.reshape(var_3719.astype('float32'), [637,]), relay.reshape(call_3708.astype('float64'), [21, 6]), ), 3)
func_383_call = mod.get_global_var('func_383')
func_386_call = mutated_mod.get_global_var('func_386')
const_3723 = relay.const([-6.615520,-9.676672,-4.563504,-6.368710,9.329946,2.414783,-0.921759,-9.310415,-4.125934,-4.468924,7.999235], dtype = "float32")#candidate|3723|(11,)|const|float32
call_3722 = func_383_call(relay.reshape(const_3723.astype('float32'), [11, 1]))
call_3724 = func_383_call(relay.reshape(const_3723.astype('float32'), [11, 1]))
output = relay.Tuple([uop_3698,call_3708,call_3718,var_3719,call_3722,const_3723,])
output2 = relay.Tuple([uop_3698,call_3709,call_3720,var_3719,call_3724,const_3723,])
func_3726 = relay.Function([var_3697,var_3719,], output)
mod['func_3726'] = func_3726
mod = relay.transform.InferType()(mod)
var_3727 = relay.var("var_3727", dtype = "float32", shape = (8, 2, 8))#candidate|3727|(8, 2, 8)|var|float32
var_3728 = relay.var("var_3728", dtype = "float32", shape = (637,))#candidate|3728|(637,)|var|float32
output = func_3726(var_3727,var_3728,)
func_3729 = relay.Function([var_3727,var_3728,], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_3731 = relay.TupleGetItem(func_3010_call(), 0)
call_3732 = relay.TupleGetItem(func_3012_call(), 0)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_3751 = relay.TupleGetItem(func_2419_call(), 1)
call_3752 = relay.TupleGetItem(func_2421_call(), 1)
func_435_call = mod.get_global_var('func_435')
func_440_call = mutated_mod.get_global_var('func_440')
var_3774 = relay.var("var_3774", dtype = "uint8", shape = (675,))#candidate|3774|(675,)|var|uint8
var_3775 = relay.var("var_3775", dtype = "float64", shape = (384,))#candidate|3775|(384,)|var|float64
call_3773 = relay.TupleGetItem(func_435_call(relay.reshape(var_3774.astype('uint8'), [9, 5, 15]), relay.reshape(var_3774.astype('uint8'), [9, 5, 15]), relay.reshape(var_3775.astype('float64'), [384,]), ), 4)
call_3776 = relay.TupleGetItem(func_440_call(relay.reshape(var_3774.astype('uint8'), [9, 5, 15]), relay.reshape(var_3774.astype('uint8'), [9, 5, 15]), relay.reshape(var_3775.astype('float64'), [384,]), ), 4)
uop_3780 = relay.erf(call_3751.astype('float64')) # shape=(2, 2, 11)
uop_3782 = relay.erf(call_3752.astype('float64')) # shape=(2, 2, 11)
output = relay.Tuple([call_3731,call_3773,var_3774,var_3775,uop_3780,])
output2 = relay.Tuple([call_3732,call_3776,var_3774,var_3775,uop_3782,])
func_3794 = relay.Function([var_3774,var_3775,], output)
mod['func_3794'] = func_3794
mod = relay.transform.InferType()(mod)
mutated_mod['func_3794'] = func_3794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3794_call = mutated_mod.get_global_var('func_3794')
var_3796 = relay.var("var_3796", dtype = "uint8", shape = (675,))#candidate|3796|(675,)|var|uint8
var_3797 = relay.var("var_3797", dtype = "float64", shape = (384,))#candidate|3797|(384,)|var|float64
call_3795 = func_3794_call(var_3796,var_3797,)
output = call_3795
func_3798 = relay.Function([var_3796,var_3797,], output)
mutated_mod['func_3798'] = func_3798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2946_call = mutated_mod.get_global_var('func_2946')
call_3875 = func_2945_call()
call_3876 = func_2945_call()
output = call_3875
output2 = call_3876
func_3877 = relay.Function([], output)
mod['func_3877'] = func_3877
mod = relay.transform.InferType()(mod)
mutated_mod['func_3877'] = func_3877
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3877_call = mutated_mod.get_global_var('func_3877')
call_3878 = func_3877_call()
output = call_3878
func_3879 = relay.Function([], output)
mutated_mod['func_3879'] = func_3879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_3883 = func_3419_call()
call_3884 = func_3419_call()
uop_3887 = relay.log(call_3883.astype('float32')) # shape=(1, 126)
uop_3889 = relay.log(call_3884.astype('float32')) # shape=(1, 126)
output = uop_3887
output2 = uop_3889
func_3891 = relay.Function([], output)
mod['func_3891'] = func_3891
mod = relay.transform.InferType()(mod)
output = func_3891()
func_3892 = relay.Function([], output)
mutated_mod['func_3892'] = func_3892
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_3928 = relay.TupleGetItem(func_3667_call(), 0)
call_3929 = relay.TupleGetItem(func_3669_call(), 0)
func_3726_call = mod.get_global_var('func_3726')
func_3729_call = mutated_mod.get_global_var('func_3729')
var_3934 = relay.var("var_3934", dtype = "float32", shape = (2, 64))#candidate|3934|(2, 64)|var|float32
var_3935 = relay.var("var_3935", dtype = "float32", shape = (637,))#candidate|3935|(637,)|var|float32
call_3933 = relay.TupleGetItem(func_3726_call(relay.reshape(var_3934.astype('float32'), [8, 2, 8]), relay.reshape(var_3935.astype('float32'), [637,]), ), 3)
call_3936 = relay.TupleGetItem(func_3729_call(relay.reshape(var_3934.astype('float32'), [8, 2, 8]), relay.reshape(var_3935.astype('float32'), [637,]), ), 3)
uop_3940 = relay.rsqrt(var_3935.astype('float32')) # shape=(637,)
bop_3948 = relay.less(uop_3940.astype('bool'), relay.reshape(call_3933.astype('bool'), relay.shape_of(uop_3940))) # shape=(637,)
bop_3951 = relay.less(uop_3940.astype('bool'), relay.reshape(call_3936.astype('bool'), relay.shape_of(uop_3940))) # shape=(637,)
func_3726_call = mod.get_global_var('func_3726')
func_3729_call = mutated_mod.get_global_var('func_3729')
call_3953 = relay.TupleGetItem(func_3726_call(relay.reshape(var_3934.astype('float32'), [8, 2, 8]), relay.reshape(call_3933.astype('float32'), [637,]), ), 2)
call_3954 = relay.TupleGetItem(func_3729_call(relay.reshape(var_3934.astype('float32'), [8, 2, 8]), relay.reshape(call_3933.astype('float32'), [637,]), ), 2)
bop_3956 = relay.multiply(uop_3940.astype('uint16'), relay.reshape(bop_3948.astype('uint16'), relay.shape_of(uop_3940))) # shape=(637,)
bop_3959 = relay.multiply(uop_3940.astype('uint16'), relay.reshape(bop_3951.astype('uint16'), relay.shape_of(uop_3940))) # shape=(637,)
output = relay.Tuple([call_3928,var_3934,call_3953,bop_3956,])
output2 = relay.Tuple([call_3929,var_3934,call_3954,bop_3959,])
func_3977 = relay.Function([var_3934,var_3935,], output)
mod['func_3977'] = func_3977
mod = relay.transform.InferType()(mod)
mutated_mod['func_3977'] = func_3977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3977_call = mutated_mod.get_global_var('func_3977')
var_3979 = relay.var("var_3979", dtype = "float32", shape = (2, 64))#candidate|3979|(2, 64)|var|float32
var_3980 = relay.var("var_3980", dtype = "float32", shape = (637,))#candidate|3980|(637,)|var|float32
call_3978 = func_3977_call(var_3979,var_3980,)
output = call_3978
func_3981 = relay.Function([var_3979,var_3980,], output)
mutated_mod['func_3981'] = func_3981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3060_call = mod.get_global_var('func_3060')
func_3062_call = mutated_mod.get_global_var('func_3062')
call_3983 = func_3060_call()
call_3984 = func_3060_call()
output = call_3983
output2 = call_3984
func_3999 = relay.Function([], output)
mod['func_3999'] = func_3999
mod = relay.transform.InferType()(mod)
output = func_3999()
func_4000 = relay.Function([], output)
mutated_mod['func_4000'] = func_4000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_4011 = func_3419_call()
call_4012 = func_3419_call()
output = call_4011
output2 = call_4012
func_4019 = relay.Function([], output)
mod['func_4019'] = func_4019
mod = relay.transform.InferType()(mod)
mutated_mod['func_4019'] = func_4019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mutated_mod.get_global_var('func_4019')
call_4020 = func_4019_call()
output = call_4020
func_4021 = relay.Function([], output)
mutated_mod['func_4021'] = func_4021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_4044 = relay.TupleGetItem(func_3338_call(), 0)
call_4045 = relay.TupleGetItem(func_3340_call(), 0)
output = call_4044
output2 = call_4045
func_4046 = relay.Function([], output)
mod['func_4046'] = func_4046
mod = relay.transform.InferType()(mod)
mutated_mod['func_4046'] = func_4046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4046_call = mutated_mod.get_global_var('func_4046')
call_4047 = func_4046_call()
output = call_4047
func_4048 = relay.Function([], output)
mutated_mod['func_4048'] = func_4048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4046_call = mod.get_global_var('func_4046')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_4049 = func_4046_call()
call_4050 = func_4046_call()
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
var_4061 = relay.var("var_4061", dtype = "float32", shape = (637,))#candidate|4061|(637,)|var|float32
const_4062 = relay.const([-5,5,-1,-5,4,-7,-3,-9,2,-9,9,-3,5,-5,7,4,-8,-2,-1,-7,-8,7,5,-8,-6,-2,-9,9,10,8,3,-9,-2,10,-10,10,1,-9,5,-1,-4,-6,-1,10,3,9,1,7,-9,-9,-5,-6,8,1,3,-4,9,4,9,1,2,-9,6,-8,-4,5,-6,6,-6,-5,10,-10,1,7,7,-3,-6,2,10,-10,-5,-4,5,4,6,10,9,5,3,-2,-9,-9,-7,10,1,2,2,6,5,-9,-9,6,-1,10,2,4,6,8,-4,-1,-8,-10,8,-8,-8,-3,-5,7,-2,2,8,7,1,9,4,10,-10,2,8,2,-6,3,6,9,-6,5,-9,9,-10,5,8,-5,8,8,-9,4,-5,-9,8,2,1,9,10,1,-8,-5,2,9,-9,-7,-9,-4,-9,-7,2,-10,-9,-6,1,-10,-4,7,4,7,5,2,5,8,10,1,-9,7,-2,-6,10,3,-10,9,8,-7,-10,-7,-4,8,-2,-6,-10,8,7,4,-1,-3,-7,3,10,8,-9,-4,-10,5,-1,-5,-5,10,9,1,-1,1,7,-3,5,5,-6,5,3,-10,-2,-3,9,8,9,10,-2,-8,-6,-5,2,-5,1,4,1,-8,10,1,-5,1,-8,4,1,-10,6,-8,-7,9,-4,-2,9,-7,1,10,6,-2,2,6,-1,-10,2,-5,2,7,-7,10,-10,6,-6,-9,-10,7,-6,-7,1,-2,-7,2,-1,5,9,-3,-2,-10,7,-1,8,-9,2,1,-3,-6,2,-2,-6,-10,-2,-2,3,-5,1,7,5,-6,-4,-10,-2,7,-6,-6,8,5,-10,-4,-3,5,-4,-3,-10,6,8,1,6,-5,-9,-3,10,6,-9,4,1,5,-4,4,9,-8,-8,8,-6,-6,-7,-3,9,6,-10,-1,10,4,-4,7,-10,2,-3,2,7,-8,9,9,9,-7,6,9,3,1,4,1,-5,4,7,-1,5,9,9,1,5,-8,-7,-10,-2,8,-1,2,3,-5,-1,7,4,-10,-5,-2,1,3,6,-8,2,-4,4,8,1,10,-10,6,4,-6,6,-9,-7,-7,-4,1,1,-1,-3,-4,4,6,2,7,-7,3,2,-2,-2,4,-4,-4,-4,9,3,2,9,3,-10,-5,5,4,-10,8,7,-10,9,-5,-8,-10,10,-10,10,10,4,-10,-3,-6,-1,7,-6,-9,2,8,2,2,-10,3,-6,1,-8,8,-5,6,-9,-4,-1,-2,8,-2,-7,-2,-7,-8,-6,2,10,-7,6,-3,-6,10,9,-10,-1,5,7,5,-2,4,2,4,-7,8,-2,-8,7,8,1,1,2,-10,-5,10,7,-5,-3,-10,-8,6,9,-2,4,-2,-10,9,-1,1,-3,1,-7,1,-5,-2,1,-5,-2,9,-9,-10,-6,-2,-7,2,6,-4,-2,-4,-5,-2,-4,7,5,1,8,4,-2,10,-1,-3,-8,3,9,-10,6,9,8,8,-3,-7,2,-5,-8,-8,-7,-8,-6,-8,-8,9,10,-6,7,2,-10,-1,10,9,-10,9,-7,-6,-7,10,-3,-9,-9,9,-8,-6,-2,3,4,2,-10,-1,7,2,2,-7,-10,-5,-3,7,-9,-2,-1,-3,-8,8,5,6,9,-3,-1,5,1,2,-8,5,-5,6,-3,-2,-5,10,-2,-1,-6,9,7,9,-5,1,-4,-9,-5,-5,-6,-9,7,-3,6,7,8,-1,1,-10,3,-10,-10,-3,5,-1,-7,6,-10,1,10,-9,-8,-3,10,-5,-7], dtype = "uint8")#candidate|4062|(675,)|const|uint8
call_4060 = relay.TupleGetItem(func_1638_call(relay.reshape(var_4061.astype('float32'), [7, 13, 7]), relay.reshape(const_4062.astype('uint8'), [5, 135]), relay.reshape(call_4049.astype('float64'), [126,]), ), 1)
call_4063 = relay.TupleGetItem(func_1642_call(relay.reshape(var_4061.astype('float32'), [7, 13, 7]), relay.reshape(const_4062.astype('uint8'), [5, 135]), relay.reshape(call_4049.astype('float64'), [126,]), ), 1)
output = relay.Tuple([call_4049,call_4060,var_4061,const_4062,])
output2 = relay.Tuple([call_4050,call_4063,var_4061,const_4062,])
func_4071 = relay.Function([var_4061,], output)
mod['func_4071'] = func_4071
mod = relay.transform.InferType()(mod)
var_4072 = relay.var("var_4072", dtype = "float32", shape = (637,))#candidate|4072|(637,)|var|float32
output = func_4071(var_4072)
func_4073 = relay.Function([var_4072], output)
mutated_mod['func_4073'] = func_4073
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3060_call = mod.get_global_var('func_3060')
func_3062_call = mutated_mod.get_global_var('func_3062')
call_4075 = func_3060_call()
call_4076 = func_3060_call()
uop_4077 = relay.log2(call_4075.astype('float64')) # shape=(1, 126)
uop_4079 = relay.log2(call_4076.astype('float64')) # shape=(1, 126)
uop_4080 = relay.acosh(call_4075.astype('float64')) # shape=(1, 126)
uop_4082 = relay.acosh(call_4076.astype('float64')) # shape=(1, 126)
func_4046_call = mod.get_global_var('func_4046')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_4090 = func_4046_call()
call_4091 = func_4046_call()
output = relay.Tuple([uop_4077,uop_4080,call_4090,])
output2 = relay.Tuple([uop_4079,uop_4082,call_4091,])
func_4099 = relay.Function([], output)
mod['func_4099'] = func_4099
mod = relay.transform.InferType()(mod)
output = func_4099()
func_4100 = relay.Function([], output)
mutated_mod['func_4100'] = func_4100
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3500_call = mod.get_global_var('func_3500')
func_3502_call = mutated_mod.get_global_var('func_3502')
call_4117 = func_3500_call()
call_4118 = func_3500_call()
var_4119 = relay.var("var_4119", dtype = "float64", shape = (12, 14, 9))#candidate|4119|(12, 14, 9)|var|float64
bop_4120 = relay.subtract(call_4117.astype('int16'), var_4119.astype('int16')) # shape=(12, 14, 9)
bop_4123 = relay.subtract(call_4118.astype('int16'), var_4119.astype('int16')) # shape=(12, 14, 9)
output = relay.Tuple([bop_4120,])
output2 = relay.Tuple([bop_4123,])
func_4133 = relay.Function([var_4119,], output)
mod['func_4133'] = func_4133
mod = relay.transform.InferType()(mod)
var_4134 = relay.var("var_4134", dtype = "float64", shape = (12, 14, 9))#candidate|4134|(12, 14, 9)|var|float64
output = func_4133(var_4134)
func_4135 = relay.Function([var_4134], output)
mutated_mod['func_4135'] = func_4135
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_4150 = relay.TupleGetItem(func_3667_call(), 0)
call_4151 = relay.TupleGetItem(func_3669_call(), 0)
const_4158 = relay.const([[-6.789076,-5.989574,3.078856,-8.410538,-2.639050,-8.499942,-2.731146,-3.101708,-0.488714,-8.472674,-1.164839,-0.924855,1.588385,-5.880204,-3.223507,-6.949741,4.247976,0.900363,1.971263,3.534100,-7.674978,-8.969317,5.778699,-9.638335,-2.497424,-1.502780,-5.696365,-5.229978,5.586785,1.934999,-0.934186,-7.744598,-7.664533,-7.041991,7.791134,-9.049258,-9.433962,-2.832837,6.345925,8.622477,-4.865245,-6.010886,8.554937,-3.441808,-1.439067,-6.292205,3.915233,-7.359303,-0.433666,-7.905328,-2.597455,2.111107,6.283219,-4.956591,-8.681307,-1.138955,-0.757657,0.582382,6.912782,-3.985680,7.993224,-1.793107,8.957336,-0.517431,8.576158,5.605773,0.927935,-2.905165,5.896920,-3.845774,0.503525,-6.407081,3.365332,8.841432,5.700480,-7.576178,-0.722705,-6.523964,1.883957,4.478235,6.844333,6.061419,6.224709,8.350976,-7.907836,-5.170647,-2.209886,2.016912,-8.861687,-3.693344,-1.142711,-8.576683,5.800968,-0.926540,5.361027,9.661201,3.303658,-1.888416,4.657703,8.192867,6.972066,4.887410,-7.476983,4.597131,5.182953,-1.628240,8.214063,-0.945618,4.950296,9.226823,-0.572865,8.938659,1.783138,-0.882775,6.638624,6.211205,3.213488,-9.667551,0.301430,-1.027800,2.152851,8.064150,0.571932,3.201527,-8.519472,4.772179],[-9.435097,-4.471537,-1.004220,-9.822497,-0.891901,-4.803766,-3.867163,1.179987,7.253710,-1.885814,6.158656,3.561580,6.306101,0.311561,2.023323,-0.312502,-4.437069,-9.850564,1.404189,-0.390856,-5.437145,1.189871,-8.419625,-1.029958,-8.972999,-9.421809,-4.407772,-0.039174,0.824314,-6.383478,-3.440046,-3.588457,8.467153,-2.280910,4.132492,4.809187,6.905281,-9.455913,5.323427,3.840424,4.201230,5.435522,3.103833,4.120562,-2.451218,-0.452466,-6.833119,8.359380,3.170682,-5.518057,-6.625029,-1.218285,-6.494775,1.973304,9.528773,0.843490,3.665483,0.213216,-4.169299,2.740758,-7.992818,3.612128,-8.849403,-8.012237,-9.490583,-9.281621,-9.307020,8.697714,5.317605,4.833190,8.151185,8.431421,4.851200,-7.951454,3.683208,-9.380308,0.399810,-1.150663,-1.631455,7.994389,0.290368,-2.832556,-2.937687,-3.301180,-2.151499,-7.908381,-3.774107,-2.804302,-1.197148,9.091188,-1.885807,1.897217,3.432402,7.339437,2.574047,3.501952,-6.219643,-7.338587,7.019910,-8.325748,-5.109209,1.340090,-0.932386,6.043541,-6.955146,-5.659564,-5.555144,-0.495676,9.735395,-9.563785,-0.458388,8.917117,6.028649,8.844187,-0.725793,-2.747175,4.636227,3.883350,-3.363827,-0.506111,9.004255,0.936975,3.882919,-2.557177,-9.417460,7.040366],[-5.350531,9.577880,-5.984946,-4.382387,6.196266,-7.143651,-0.324016,-2.147818,-1.770617,-6.627643,-4.672540,3.299281,9.620399,-5.062255,-9.720860,5.009299,3.801463,-9.416858,5.703796,-8.460965,-3.301973,3.334427,0.780131,2.308851,1.641389,6.881431,8.333670,6.113175,-4.592492,-3.576615,0.605255,0.808400,4.816969,-9.822740,-4.582890,3.356716,7.060495,-3.781476,-4.639630,-7.180849,6.939919,0.951576,0.462440,0.446631,6.238847,-7.526335,5.417814,1.396677,-6.072350,-0.719998,-8.818149,4.374139,-2.203450,-9.578097,1.536036,-7.190791,6.081776,0.442302,-7.543423,-1.121253,9.463081,-3.766747,4.085482,2.197566,-5.258087,-0.451003,5.514834,-9.964011,8.296979,-0.245432,-9.755826,8.569160,6.159390,-7.696420,-3.599387,2.554210,6.372966,-8.436861,3.044790,-0.619798,2.120136,-6.148942,-5.025378,5.040061,-5.863779,-4.884866,-7.466025,-8.009712,1.971912,-1.853367,3.214257,2.192426,5.752788,5.400674,4.927289,-2.321899,6.201958,6.685281,-3.399227,2.162137,-5.139228,9.804092,-8.415285,-7.033371,-6.081396,2.678146,-6.989899,-0.807629,-3.308110,-7.425986,-4.397182,1.098720,-3.437853,5.830557,5.754591,0.549093,9.577359,-9.328125,-4.970434,2.312562,1.215120,-1.458904,3.280353,-2.565254,4.115929,5.992922],[9.047351,7.867615,1.726307,-4.007340,0.747160,-5.482595,-7.506105,-3.921654,-6.823551,8.366530,-7.907076,6.459412,9.699713,-0.361755,8.933910,-4.313590,-1.124321,-2.001921,-5.314672,-2.370294,-8.046699,-0.308171,7.495171,1.336985,-7.597849,-3.629649,-4.721616,-5.172484,4.424185,-6.415134,-9.887628,5.030695,-9.223703,-7.171322,3.845951,3.557747,-9.372387,-6.072132,-3.388310,4.371205,6.624955,-1.215877,2.874126,5.019878,2.615716,8.216642,-1.519742,-9.944443,-1.608040,7.140931,7.354484,0.759923,0.850350,8.488013,6.057925,-6.718235,-3.800167,9.989965,-4.539418,-2.862993,-9.675823,7.100957,8.043594,-8.663730,0.030137,0.574723,-3.636113,-4.860473,-3.756058,2.444392,-1.893313,-5.978744,-2.848376,-5.017717,-4.173510,-5.291589,1.300356,4.112434,2.438296,-6.200993,-8.755836,4.309315,2.999181,-2.438657,-3.909016,9.082912,0.433686,5.053314,7.404807,-0.779100,7.677375,2.353624,9.123599,4.885769,-7.039851,6.708659,7.217020,4.317373,-6.315386,-6.093668,8.543781,2.716076,-2.955151,2.154942,-4.625319,4.895822,-7.228218,-7.279198,-3.486698,6.848723,-4.649167,7.213272,4.902335,-5.778422,-7.537496,-8.979420,-5.105992,-6.780615,3.765020,6.355160,-7.771981,7.200131,1.035835,-8.250533,4.878678,-5.915540],[-9.345663,0.659217,-4.025241,7.065251,-5.519618,-4.534820,0.106737,5.848806,-2.018082,-4.022386,-3.100034,-6.926512,-3.213604,7.486046,-5.994891,9.865761,5.727327,-6.716765,-5.630964,-2.190604,-2.410991,3.664181,6.131148,-8.610965,0.744695,-6.405853,-6.081264,2.260442,4.032560,-4.837705,-0.150427,-2.543339,-4.521048,4.989970,-7.184960,5.553202,5.564762,-6.757261,-6.780387,-4.355204,-6.172768,8.041606,6.463197,5.912726,6.655262,-8.454000,8.480890,2.166450,-2.476950,-4.333283,-8.924044,4.864939,-3.429070,-7.450146,-0.676166,0.993027,-7.801180,5.230336,4.808151,-0.534761,-3.844335,6.535502,-3.806139,1.248731,0.252476,4.959565,6.147270,1.255672,4.530195,-9.144122,2.812883,-5.286258,-3.352158,4.105925,-7.119809,-0.061656,1.325212,-1.519738,-8.268455,-6.237847,6.609702,6.047803,-2.444521,-3.453990,7.298225,3.185928,-6.588890,-2.671717,2.446371,8.583222,5.970531,-7.742545,1.423661,-8.063953,-0.837949,9.886519,6.801175,-0.551914,-5.498743,3.809596,-9.203552,-5.673823,-8.549278,1.031080,-7.670178,4.807473,7.029762,-0.472926,-7.701796,-3.544864,9.456873,-7.313919,2.648680,-5.695532,4.176650,8.309248,-8.280234,3.156929,-5.674575,-6.971757,5.196861,-8.377368,3.519940,8.684020,-9.892062,-9.043950],[4.998177,-3.334598,-5.413476,-0.779320,-6.830095,0.748994,3.441887,8.000452,2.329624,2.600582,4.148003,9.410476,-5.456593,-0.461275,6.422199,1.512229,8.907689,1.966848,-8.763649,4.754344,1.421968,-4.685568,1.613355,-8.631119,2.367660,8.541251,6.078180,-3.502093,0.269813,-4.178278,7.468423,-5.466125,9.404765,-1.162810,9.639744,-4.236985,-3.547455,-2.339622,-8.210587,8.284288,-4.014751,-9.812744,8.010008,9.463680,0.349408,4.690110,3.853294,3.021921,7.557812,5.504305,-2.196947,0.770249,-4.829047,-8.009334,-1.702681,-5.162310,6.431432,8.839140,5.835035,9.575029,-9.166173,-8.709352,-3.027660,1.059251,8.154243,6.142868,-7.605954,8.752939,-6.563169,-9.791600,4.626755,7.320964,3.695426,7.748186,4.472068,-2.795007,-8.086069,-7.374884,-8.368297,-5.695438,-8.752279,5.784308,1.683877,1.138603,8.750130,-4.127184,-1.446540,2.336059,-4.584238,1.603411,2.600844,-9.811000,-3.368460,6.513536,-5.009896,-2.091202,1.117432,4.947428,-6.311727,-1.001366,-9.952353,-3.776922,-6.495393,1.839448,3.105456,-3.274551,-2.656274,-3.259852,0.125648,8.391715,7.766033,-7.811149,-4.025805,6.146314,-8.765439,-2.915627,7.705271,-6.684147,-2.172200,-8.871939,-5.309682,-9.002667,9.925740,2.879589,-9.032605,-7.262245],[-1.622601,-7.339451,4.400259,-3.793076,0.805756,-3.423155,1.971023,-3.351371,-2.781623,4.242604,-0.125654,2.338792,-7.489903,-6.386122,-6.711272,4.451047,-0.114935,5.236426,2.192807,4.644765,-7.785699,0.890827,-4.916783,9.951836,3.316021,9.915953,-1.816186,1.794965,7.092646,-8.255202,4.577114,7.889417,7.846192,3.238220,-0.411763,-7.925444,-1.647805,-2.686208,4.630573,-4.345521,5.763560,-9.278291,-7.996349,-1.396218,-6.938298,2.729384,-9.996744,5.560038,8.990204,7.567834,1.172463,-0.114524,9.253514,8.121525,-6.860516,3.296691,3.908282,-5.804178,-0.358469,-8.114811,6.709674,-3.634649,-3.899444,0.087856,-4.564729,0.633629,-7.054989,2.080254,-8.144492,7.014820,-7.323466,-6.185723,-0.951817,-2.135930,-5.016810,2.246147,-4.244968,9.776049,1.714652,5.604133,7.548787,-4.790512,-1.826729,-4.198238,-4.866662,-8.723635,-1.340916,-3.685834,6.428474,2.940824,3.955544,1.623291,-8.780166,-7.780600,0.728427,1.212724,-7.177212,4.954034,-1.377924,-3.164949,6.384416,8.222860,1.474931,-4.609863,-1.869851,-4.470526,8.495427,-2.104714,1.818837,4.712096,-0.056043,7.227954,-3.817893,3.011867,-0.251890,2.005494,-1.907629,-3.837234,3.501918,-9.708509,-3.132594,9.227204,-1.989099,-6.660618,6.114397,4.174496],[-8.721428,-8.642923,5.458705,5.445948,8.556337,4.410368,-5.175006,-6.604142,-6.084901,6.998680,3.974470,-7.294920,-4.511522,2.795701,2.180324,6.379513,-5.031753,-9.486199,-1.617683,3.840693,9.512544,9.670329,-9.929848,1.052731,8.482338,-3.675270,9.799666,-1.320131,6.720366,2.204201,-5.090367,-2.301208,8.912484,-2.619685,9.658957,7.493265,-4.484510,-0.149478,-0.273355,-2.591443,-5.920870,4.139733,3.251092,-5.844703,1.864632,3.008730,-3.033748,-3.519159,4.338344,0.985994,7.008735,7.524779,-9.737706,-9.845892,9.621230,-7.844138,6.709799,8.442228,3.452349,2.185413,-1.608450,7.570355,5.842840,-9.478719,-7.009444,8.341583,-3.290366,-5.002998,-6.556557,-9.225819,7.734035,5.807320,-1.190191,1.709756,-2.923131,-1.885537,-2.586400,-3.605520,-1.357056,-6.355999,-2.319915,-4.333615,-8.009949,4.067265,5.550863,-7.483380,-7.578890,-1.185987,-9.856445,0.268379,-8.467783,1.864297,6.870802,-2.079314,-2.572228,-2.805953,-7.464194,-9.287057,2.569001,3.513745,2.641753,2.672262,-4.477628,-1.004659,-1.778551,6.654360,3.568986,0.292969,-8.601499,-8.703434,-0.247420,-8.334474,4.862643,6.954896,-5.007379,-2.396173,-3.147177,-3.366395,2.631292,9.486652,-9.191790,-8.117528,-2.369791,-9.319255,-3.119021,1.369142],[6.798851,5.608172,-9.682889,-9.815814,-3.398327,-8.976074,-9.100223,0.718812,9.252856,2.095571,1.163057,-4.706513,1.461453,5.759672,6.628007,-3.572215,-7.312880,-4.354097,-7.384533,1.368286,1.287287,6.220971,-3.682961,6.341319,-2.877822,0.576440,-9.317811,7.327893,-3.602809,1.697903,9.701863,0.875725,-4.410605,2.797551,-0.504493,9.006481,-7.362080,8.882214,1.039757,1.592960,-7.910752,1.763705,-7.250867,-6.879891,1.140966,-2.704276,-2.405122,-3.100797,3.690105,5.635259,8.912664,2.553575,-5.415899,-0.494831,1.459949,8.189677,2.834938,3.389587,8.346936,-8.998594,9.709778,6.971846,-2.008248,-3.981483,5.270310,5.607041,-0.846016,0.160280,-3.919448,-8.411670,8.959457,7.097713,9.508867,-1.445508,-4.426164,9.494683,5.196823,2.569428,7.903296,-5.993765,-1.210446,9.064730,-6.230911,4.164207,-0.576237,6.171601,8.209591,-7.404435,2.329246,2.835724,-7.512523,6.067315,7.525324,3.914488,0.271351,-5.028335,-3.791747,-8.710962,-8.164434,6.465154,-2.485499,-3.010313,2.691285,-1.710507,4.288769,-4.143096,-0.769909,3.483362,5.844142,-6.922018,-2.913332,-2.456997,-5.148056,-1.084312,-1.445017,-0.069330,-6.957316,-9.906069,2.723072,-4.683970,-3.759715,-8.234470,-4.639869,-5.845869,8.974155,-9.797415],[6.000007,-5.516906,-0.150360,-9.602807,-7.973754,1.320552,5.774187,-3.563303,-7.181193,8.826353,1.101126,8.991042,-1.095867,7.063804,2.748441,3.096471,-1.892596,-2.519735,-1.921519,5.570944,4.950267,8.383411,-0.357337,-2.019539,-4.606133,0.419087,5.514620,-8.446233,1.753207,1.569960,6.200719,8.316010,-6.587005,-0.971518,0.933852,5.030162,-8.570699,6.011358,-7.112257,9.354616,-6.957966,7.827092,-0.847967,8.066937,1.062369,-4.523310,3.347418,0.499803,2.383311,5.091977,8.968754,-1.691486,7.523039,3.895318,6.535293,8.450064,6.199126,0.097058,-2.133470,6.453130,-7.022036,-5.777606,-6.227568,9.121391,-6.231138,-5.765323,-1.185831,4.453088,-8.978805,8.979956,-6.972275,2.828702,9.180069,8.550810,7.415446,-7.510989,-9.558910,-6.049835,-9.516560,-2.590018,-8.936068,-2.488205,5.616748,-2.140392,-5.580387,1.234823,-2.428982,9.121887,-2.695244,3.865683,1.354563,9.901739,9.189481,-1.902860,7.503437,-1.960556,4.830865,-2.178276,-8.355371,8.262687,1.090244,3.993677,8.461041,3.688140,6.053027,-8.785366,-9.415886,-6.673699,3.328061,1.536800,-2.770499,-2.583548,8.473013,-6.659501,1.817091,-1.568155,7.943910,4.306339,-6.016216,-9.334284,9.822362,4.749635,-7.576856,5.524717,-1.196214,-9.984086],[-0.742086,7.734244,-5.757172,-9.201369,1.533066,-9.799993,-4.560061,4.670306,-0.819141,8.037248,-5.400120,-3.286393,-9.678615,-2.701876,-7.064539,7.651865,8.727181,-2.180519,6.126146,-9.226144,-9.311311,9.447802,-2.996286,7.114843,-1.673777,-8.413406,9.846379,7.864375,4.908530,9.192675,-0.131890,-4.760335,0.161316,9.227552,2.593668,2.530016,-9.323537,7.934388,2.848493,-3.934174,9.651237,9.083130,1.321602,-2.157539,-0.726679,-4.628688,7.289411,2.039421,-1.160119,0.720318,-2.776254,7.276164,2.381858,6.432985,2.049089,-5.193224,-6.350124,-7.765155,-7.541752,-7.546886,-9.284711,0.913036,-7.914448,-5.768207,-3.168088,-8.855764,-4.649537,9.011155,-4.220083,-9.567706,-7.199965,-6.165985,-3.809633,-3.777021,-0.905033,-6.372124,-8.649794,-0.448829,-2.669987,5.290315,-4.099184,0.172148,8.986236,-2.246291,6.644245,7.691758,7.960834,-4.645166,-1.808474,-9.747084,-2.292327,9.574617,-0.587681,3.615977,-1.421986,6.143366,-1.768887,7.764888,-0.203695,-5.765114,5.669173,2.113831,6.292461,-1.037338,6.023169,-5.943686,0.428568,-0.572334,5.223269,-5.549281,-8.735353,-8.060716,-8.812422,-2.355379,1.326775,-4.282731,-8.283931,8.267983,-7.167471,-5.496897,-1.936929,4.656361,-6.145350,-5.424529,0.001911,-4.082969],[-1.047778,-8.991171,-7.326343,8.667128,7.981852,-0.873848,-3.095114,-9.117590,-0.204712,-5.389595,9.790079,-3.530116,2.204201,-1.213910,-6.498289,-2.502468,9.441421,4.065521,2.570921,-7.477974,4.686285,-7.822991,-0.884001,-8.212375,6.688058,-6.424567,-8.100406,3.000388,4.701324,-5.180408,-4.752047,-4.541223,5.908216,7.762661,9.034935,-3.699338,0.707839,-8.704576,9.386779,-9.173945,3.766248,3.453154,6.056058,2.120384,-7.559936,-5.857377,-2.874770,7.807490,3.006207,-9.489286,-7.474364,0.838585,7.999064,3.574769,-9.638789,-5.404314,-1.773278,1.075658,-2.661454,-6.206289,-9.137025,4.525420,-0.635819,-4.744415,3.355442,-3.514234,2.963652,9.360036,2.355202,3.767088,-2.079120,0.494855,-1.131137,0.069798,5.987381,2.442912,-2.322281,-2.418997,7.198715,-1.151256,4.239127,-0.193203,-0.114858,6.150768,8.224099,0.861666,-0.281446,-6.521274,3.532084,3.551246,-2.959524,-9.400253,1.916949,1.882593,-6.541966,-9.050036,-3.000963,-3.255203,-4.744986,-7.262830,3.264726,-0.926389,-6.375105,-1.244198,-7.846646,-4.933132,-0.115427,3.674114,6.379045,4.096198,0.406292,9.470310,-0.476160,-9.776647,1.760581,-8.053339,7.370415,6.005018,-8.691392,4.372533,5.165547,3.161977,2.196581,-5.430832,0.205415,-5.201076],[4.790464,-8.046945,0.057172,-9.834158,6.296568,8.151329,0.939974,-9.705702,-0.087003,-9.319157,3.490706,-3.003920,3.890465,5.251129,-0.811021,6.314846,7.825498,5.901187,-6.987282,5.947877,8.223243,-2.149416,3.485560,-7.221814,0.411805,-7.910647,-7.868874,2.096687,4.037684,-6.787136,-9.172159,6.437929,7.030843,-7.424394,-9.305549,0.456198,9.582063,2.510589,-9.480100,-9.916922,-7.363893,-2.254283,0.104344,-1.690360,-7.029590,-4.106152,-9.636904,-0.205919,4.391516,-7.885821,-5.225716,1.561627,3.056081,2.077358,-6.227579,0.056329,-8.827971,1.703786,5.008374,-7.920890,-5.501456,-3.286067,-4.119608,-6.058316,-4.487529,0.011198,-6.888146,-1.977891,6.988686,4.445558,4.118032,7.869231,-4.507109,-8.453915,-1.752141,0.027561,6.263868,-7.622310,-9.283706,7.732336,5.652429,5.225137,0.391167,0.114553,8.203203,-9.506574,-2.717407,-1.879797,-2.131870,-0.187340,5.538152,4.552425,-4.672836,-8.621589,-5.752724,6.221904,6.209095,6.051107,-6.286526,8.407695,5.554058,-9.731584,4.984555,-0.865952,7.880302,8.714596,-2.658181,-6.294365,-7.606318,8.282374,-0.142973,-2.758445,-5.076776,3.549089,-1.984836,-5.196588,-6.041462,2.832463,-1.327199,-7.892080,1.807141,-7.570312,-6.633225,-9.075314,-8.356105,-0.120717],[-8.665972,-0.781871,-3.411219,5.894454,-6.261966,2.006497,-6.448284,1.817360,-3.274316,3.232650,5.713465,-6.385982,-3.189523,-4.289974,-9.947071,1.428148,8.179926,6.623898,6.365357,-3.076017,7.069135,1.564167,6.022148,-7.461227,-7.092938,9.008937,4.044343,5.685711,-2.905396,-1.246729,-8.536375,1.349015,9.200929,-9.815081,9.438383,7.308604,-7.997481,-6.900289,4.455288,0.681822,-3.484973,5.767765,-7.100303,7.106462,-3.521690,-7.830674,-7.331243,-3.685542,-9.222004,-2.610470,9.488304,-0.511472,-1.075934,5.127283,6.157054,5.730101,9.056102,-8.514092,-6.433782,-7.210817,7.623022,7.712948,-4.966962,-0.109556,-5.831499,-4.568351,-8.375851,1.335308,-6.803347,-1.284231,-8.109284,2.418456,-0.348583,1.154366,-4.270196,0.426253,-4.892583,5.052789,-0.705323,-7.115774,-8.085083,-7.905134,4.814059,-1.486699,8.825407,-6.330291,-9.859485,5.651447,2.223740,2.908711,6.572869,1.492632,-8.742702,-5.694517,-8.809083,2.732885,-8.952618,8.304090,-9.818772,2.048507,-2.604726,7.145162,6.462402,6.008970,7.538837,-4.089324,5.732436,0.033820,-5.021638,-3.384922,-1.776591,-9.490932,-0.929753,-3.656012,8.961681,-8.090218,8.533913,-1.431637,-3.835374,3.223698,5.275367,-8.428558,-5.756120,-4.816308,-7.452869,4.917643]], dtype = "float64")#candidate|4158|(14, 126)|const|float64
bop_4159 = relay.right_shift(call_4150.astype('uint64'), const_4158.astype('uint64')) # shape=(14, 126)
bop_4162 = relay.right_shift(call_4151.astype('uint64'), const_4158.astype('uint64')) # shape=(14, 126)
output = relay.Tuple([bop_4159,])
output2 = relay.Tuple([bop_4162,])
func_4163 = relay.Function([], output)
mod['func_4163'] = func_4163
mod = relay.transform.InferType()(mod)
mutated_mod['func_4163'] = func_4163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mutated_mod.get_global_var('func_4163')
call_4164 = func_4163_call()
output = call_4164
func_4165 = relay.Function([], output)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2945_call = mod.get_global_var('func_2945')
func_2946_call = mutated_mod.get_global_var('func_2946')
call_4174 = func_2945_call()
call_4175 = func_2945_call()
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_4178 = func_3419_call()
call_4179 = func_3419_call()
var_4183 = relay.var("var_4183", dtype = "int64", shape = (9, 10, 10))#candidate|4183|(9, 10, 10)|var|int64
bop_4184 = relay.power(call_4174.astype('float64'), var_4183.astype('float64')) # shape=(9, 10, 10)
bop_4187 = relay.power(call_4175.astype('float64'), var_4183.astype('float64')) # shape=(9, 10, 10)
func_2786_call = mod.get_global_var('func_2786')
func_2788_call = mutated_mod.get_global_var('func_2788')
const_4191 = relay.const([[-8,9,2,-8,-9,-4,5,-5,-6,2,5,-1],[1,1,-7,8,-1,-3,2,9,-2,-6,-4,-3],[-7,-4,-10,1,4,7,1,9,2,-7,3,-8]], dtype = "uint8")#candidate|4191|(3, 12)|const|uint8
call_4190 = relay.TupleGetItem(func_2786_call(relay.reshape(const_4191.astype('uint8'), [4, 1, 9])), 0)
call_4192 = relay.TupleGetItem(func_2788_call(relay.reshape(const_4191.astype('uint8'), [4, 1, 9])), 0)
uop_4204 = relay.log2(var_4183.astype('float32')) # shape=(9, 10, 10)
func_3395_call = mod.get_global_var('func_3395')
func_3398_call = mutated_mod.get_global_var('func_3398')
var_4207 = relay.var("var_4207", dtype = "uint64", shape = (44,))#candidate|4207|(44,)|var|uint64
call_4206 = relay.TupleGetItem(func_3395_call(relay.reshape(var_4207.astype('uint64'), [44,]), relay.reshape(call_4178.astype('float64'), [126,]), ), 1)
call_4208 = relay.TupleGetItem(func_3398_call(relay.reshape(var_4207.astype('uint64'), [44,]), relay.reshape(call_4178.astype('float64'), [126,]), ), 1)
bop_4209 = relay.floor_divide(uop_4204.astype('float32'), call_4174.astype('float32')) # shape=(9, 10, 10)
bop_4212 = relay.floor_divide(uop_4204.astype('float32'), call_4175.astype('float32')) # shape=(9, 10, 10)
var_4224 = relay.var("var_4224", dtype = "float32", shape = (9, 10, 10))#candidate|4224|(9, 10, 10)|var|float32
bop_4225 = relay.logical_or(uop_4204.astype('bool'), relay.reshape(var_4224.astype('bool'), relay.shape_of(uop_4204))) # shape=(9, 10, 10)
var_4229 = relay.var("var_4229", dtype = "float32", shape = (9, 10, 10))#candidate|4229|(9, 10, 10)|var|float32
bop_4230 = relay.bitwise_xor(bop_4209.astype('int64'), relay.reshape(var_4229.astype('int64'), relay.shape_of(bop_4209))) # shape=(9, 10, 10)
bop_4233 = relay.bitwise_xor(bop_4212.astype('int64'), relay.reshape(var_4229.astype('int64'), relay.shape_of(bop_4212))) # shape=(9, 10, 10)
output = relay.Tuple([call_4178,bop_4184,call_4190,const_4191,call_4206,var_4207,bop_4225,bop_4230,])
output2 = relay.Tuple([call_4179,bop_4187,call_4192,const_4191,call_4208,var_4207,bop_4225,bop_4233,])
func_4255 = relay.Function([var_4183,var_4207,var_4224,var_4229,], output)
mod['func_4255'] = func_4255
mod = relay.transform.InferType()(mod)
var_4256 = relay.var("var_4256", dtype = "int64", shape = (9, 10, 10))#candidate|4256|(9, 10, 10)|var|int64
var_4257 = relay.var("var_4257", dtype = "uint64", shape = (44,))#candidate|4257|(44,)|var|uint64
var_4258 = relay.var("var_4258", dtype = "float32", shape = (9, 10, 10))#candidate|4258|(9, 10, 10)|var|float32
var_4259 = relay.var("var_4259", dtype = "float32", shape = (9, 10, 10))#candidate|4259|(9, 10, 10)|var|float32
output = func_4255(var_4256,var_4257,var_4258,var_4259,)
func_4260 = relay.Function([var_4256,var_4257,var_4258,var_4259,], output)
mutated_mod['func_4260'] = func_4260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4046_call = mod.get_global_var('func_4046')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_4262 = func_4046_call()
call_4263 = func_4046_call()
uop_4264 = relay.asin(call_4262.astype('float32')) # shape=(1, 126)
uop_4266 = relay.asin(call_4263.astype('float32')) # shape=(1, 126)
bop_4283 = relay.equal(uop_4264.astype('bool'), relay.reshape(call_4262.astype('bool'), relay.shape_of(uop_4264))) # shape=(1, 126)
bop_4286 = relay.equal(uop_4266.astype('bool'), relay.reshape(call_4263.astype('bool'), relay.shape_of(uop_4266))) # shape=(1, 126)
func_4019_call = mod.get_global_var('func_4019')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_4295 = func_4019_call()
call_4296 = func_4019_call()
func_3977_call = mod.get_global_var('func_3977')
func_3981_call = mutated_mod.get_global_var('func_3981')
const_4303 = relay.const([[0.573029,-1.700457,-9.335036,9.723718],[-3.993185,2.923527,5.125857,8.806614],[7.497370,-1.725088,-5.705849,-7.120338],[-2.620313,-5.321144,-9.001503,3.223839],[-5.508543,2.075540,-0.932321,2.377483],[-4.570960,-5.710211,8.118147,4.322288],[-5.776452,0.279087,7.600452,-3.699984],[0.119117,9.724824,9.336471,7.611680],[-2.222974,-1.157850,-2.366583,-2.021533],[0.601382,-1.687508,-6.149942,6.617707],[5.707762,4.928693,-3.849766,-1.228123],[6.410571,5.857298,-9.514328,-3.827346],[-0.466423,7.685586,-7.447666,0.924964],[1.821283,-6.098396,-2.123134,-7.656102],[-3.880528,-7.485494,4.824306,-6.256760],[-5.025760,1.322079,3.511183,-5.820917],[-2.142583,-3.617983,1.512262,-8.616431],[9.464486,-8.009292,7.509967,7.828618],[1.119572,-8.017108,-7.335549,7.422425],[9.109618,-2.817414,-4.469319,-4.353538],[-2.511311,4.389991,-5.796932,-2.227993],[-0.036171,7.440746,9.721582,-3.083077],[6.806065,7.339030,8.227759,-8.364713],[7.845530,9.620200,2.393080,8.823507],[-5.433662,7.162171,-8.246279,-1.664422],[7.073522,-5.570906,-8.935986,4.235530],[-1.184337,-4.092956,7.425709,-6.984119],[0.583816,-2.181239,4.823926,-6.264755],[-4.692879,-7.549173,-9.106292,1.428465],[4.925343,-6.621952,-0.461924,0.415347],[2.983742,1.779083,-9.500895,2.110081],[4.334855,2.961807,1.761433,7.125688]], dtype = "float32")#candidate|4303|(32, 4)|const|float32
const_4304 = relay.const([-1.174625,5.037064,-1.570473,-9.389415,4.757355,0.316495,5.660167,9.910444,-9.039204,1.931600,-8.411551,-4.202933,-0.090527,7.178277,-4.643291,2.988249,-3.007165,-2.429338,9.550892,3.480682,-4.507506,7.308584,6.669765,4.658903,0.593272,-1.580336,6.699247,-8.371586,-6.528064,-9.477889,-2.800532,4.836413,-9.067814,8.098809,-3.365037,0.987252,-7.914189,-4.240231,0.896207,5.288102,-1.463280,3.306909,0.623504,-9.061977,4.155676,-6.029561,-1.506170,-7.011320,1.408370,-2.156229,9.468267,-5.109442,-9.409211,1.111638,-6.778578,9.773031,-5.702014,5.756940,-2.451306,6.830151,-3.505327,9.360370,-4.928555,7.544038,3.466429,6.545436,3.854660,-7.381785,6.126600,-0.305325,2.845191,-8.254972,-8.019277,7.672596,6.214308,-5.330252,-8.651741,4.063908,-4.790164,-5.101136,-5.851970,-5.340638,2.305747,-0.679538,-5.935230,-0.617378,-9.150975,-9.358028,-2.922374,3.221494,-5.576193,8.981843,1.561359,6.045051,-9.992408,8.794600,-7.963633,-9.031501,0.124631,-0.856245,1.600013,9.824822,6.458137,-0.305602,1.449409,-3.843746,-1.042277,-8.715558,-5.645672,9.004330,6.303840,4.981488,-3.654026,3.961626,-4.071291,5.984999,-0.301492,2.907472,-5.180451,-8.253470,1.102632,-3.120270,-6.465723,3.103143,-7.795644,8.590864,-3.128838,8.896862,5.940627,-3.392784,-7.353424,5.142924,-5.187503,4.512014,8.530456,-2.860411,-8.633942,-6.369643,6.136725,7.496335,-3.038507,3.945762,3.085016,5.704938,7.457822,8.999067,0.186325,-3.495308,4.544856,8.639004,0.466679,-2.197017,-8.776436,3.301065,-6.839785,5.697678,4.566053,5.465135,-6.796779,2.101767,-4.773852,4.343183,-7.349357,2.439929,2.674826,-9.711379,-9.014012,-3.554129,8.022807,-1.941992,-6.376773,-4.020906,-6.282688,1.766755,-9.778936,-2.059445,7.120737,-7.759757,-4.957720,8.906953,-7.146897,-6.664349,-2.882860,7.099380,-0.906931,-7.364164,-6.054078,6.371889,-9.459633,4.494239,3.314915,-9.003773,7.669666,-3.557237,-2.620845,-6.609083,1.662176,-2.551032,5.609798,9.961550,7.142059,5.290913,-4.001918,3.213975,4.667690,2.945823,-4.872219,2.881082,7.166625,1.632828,4.678069,-9.300497,9.970181,6.287886,0.990634,-2.474931,-3.463402,-9.441614,-2.126903,3.022594,-1.754520,2.205337,-3.525075,-8.252245,-1.046197,-1.800343,0.741582,2.275005,5.457597,-7.900780,3.284405,2.229227,-7.689265,8.059687,3.712234,-3.797536,4.549187,8.357643,-1.933415,0.930272,9.613459,-5.470138,1.395934,3.596380,-8.658984,9.051494,7.996817,2.016210,-2.913517,-7.102098,-8.001963,1.549642,-6.491771,4.521387,-0.024179,-0.556525,-4.342728,6.460685,-5.448647,-6.302707,-2.726695,-1.340480,7.942180,3.898110,-8.327615,3.861359,-4.061960,8.023980,6.078028,2.718130,5.102131,-1.313856,-3.434045,0.349153,-5.290154,-4.719797,6.742263,-5.821572,-0.079748,-9.109933,-3.243647,3.290204,-9.408503,0.952469,-0.990450,-2.567298,-3.984468,3.732620,-0.917369,3.678965,8.361936,4.848587,1.995364,4.159282,9.159352,-0.157363,4.754541,-3.130849,-7.234344,-7.235948,-0.082241,0.810725,0.838727,0.162160,8.898007,-6.445281,-5.740776,-2.257365,-9.153244,-5.073999,2.895892,9.731774,-6.021865,0.272483,8.799886,2.250655,-1.775891,6.007986,-6.754649,4.479931,9.676003,-9.584183,4.796146,2.599685,-6.904877,0.013304,4.334701,-8.587717,-5.623845,-6.049061,0.354127,1.299601,-7.480259,1.551506,6.445903,1.785984,9.950959,3.522591,-6.032914,-8.360641,-2.191290,-7.123228,-6.474870,4.748096,-8.048709,-7.865874,-3.796470,1.361233,-1.802232,2.292352,2.135408,7.636359,-2.750524,6.284105,6.802108,5.472030,9.817639,4.772553,-0.522634,-6.559827,8.333899,9.982869,-4.749522,-6.841679,5.557315,0.375497,-0.609632,7.520041,4.299065,2.308115,-1.323091,-0.652152,0.561259,1.970698,-0.799819,-9.027646,6.863013,2.596205,6.877464,-4.378025,3.231775,9.133010,-7.638313,-5.417487,-2.685694,0.447612,-9.304519,-1.519235,6.615149,-5.766656,-3.233362,9.946704,-3.967845,1.948241,0.477950,-5.817694,7.333992,-2.651552,2.370028,4.970573,6.677724,-7.174235,-8.640017,8.431278,9.269584,-1.590510,-0.524541,5.157065,-0.581855,-3.525109,-6.952481,5.240023,4.837280,-8.840843,-6.910416,-6.290831,-0.840071,-2.106387,5.854679,-2.748660,1.779248,-8.792586,0.854439,-4.077013,9.947056,2.912545,3.328995,9.287190,-2.678241,7.588573,-5.736391,-7.424987,3.227606,2.954038,-4.854373,3.068112,-1.873712,-6.759451,8.606969,-3.603682,8.639067,-5.506148,-9.951819,8.674240,5.483701,7.724804,-6.307295,-4.935549,-8.831403,9.639370,-5.339854,-7.521417,-2.843881,-4.041956,7.794277,-5.416687,-8.809430,-9.534619,4.546547,9.719816,-1.163083,-5.191107,9.056493,-5.584577,-6.787988,-9.112073,-5.291278,-7.705360,0.886385,-5.407842,9.837527,-3.799503,-2.624584,-5.547193,-0.427204,-1.843280,-6.239092,-7.066070,-1.351446,-8.367997,-8.611932,0.145515,7.643345,3.131462,-6.067854,-4.131747,9.256269,9.923712,5.900000,0.694279,5.722062,-6.130354,-9.963118,5.425206,-3.674618,4.237629,3.239090,5.452312,-9.895498,0.609093,9.612949,-4.835951,-4.428727,-9.824188,3.180334,-0.028292,8.357432,1.658834,2.536001,-2.122031,-7.577883,-4.410767,-1.064880,-4.984982,-8.223708,7.452832,1.126046,-2.894280,0.697279,4.028546,-0.807128,-6.150511,8.853192,1.230597,-9.503809,-0.236406,-9.031131,-2.038425,-9.071642,4.080465,5.111997,-8.198196,3.056250,-5.786427,6.019904,5.360145,9.948539,-8.391220,9.514675,9.158724,5.096588,-8.549755,-0.292022,3.916184,-4.047154,-0.623152,4.149779,-1.895850,8.386871,-0.730636,1.849637,5.546710,6.541285,5.418699,1.904359,-7.874719,-3.252863,-4.750953,-5.533265,5.573857,9.623319,-1.633994,2.862962,8.789948,2.615610,3.169686,9.996578,-4.214556,-8.272202,-2.052586,-3.268745,5.656536,1.907795,-5.426586,8.258576,-4.949190,0.142630,0.050871,-6.521810,5.155594,-1.569842,-2.333816,7.984728,-5.776080,-5.204348,-2.717092,-1.731727,9.645565,1.393618,5.382732,3.002840,1.242951,-5.468307,0.804523,3.319014,-9.052566,-0.381275,-6.319978,1.269203,4.410488,3.429638,3.585257,2.598262,2.622011,-8.753105,5.821754,7.563863,-8.654476,-7.414836,-5.161390,-4.449061,4.711646,1.696534,8.909579,0.159301,-4.531252,-2.032715,-5.707293,-8.425034,-6.376574,-7.138486,-7.213613,7.792033,4.782694,3.881811,6.398766,-2.756696,-7.282586,-6.084578,4.117975,-5.916425,-9.390144,0.040844,7.611619,1.144174,-2.091649,1.053031], dtype = "float32")#candidate|4304|(637,)|const|float32
call_4302 = relay.TupleGetItem(func_3977_call(relay.reshape(const_4303.astype('float32'), [2, 64]), relay.reshape(const_4304.astype('float32'), [637,]), ), 2)
call_4305 = relay.TupleGetItem(func_3981_call(relay.reshape(const_4303.astype('float32'), [2, 64]), relay.reshape(const_4304.astype('float32'), [637,]), ), 2)
func_3444_call = mod.get_global_var('func_3444')
func_3448_call = mutated_mod.get_global_var('func_3448')
const_4308 = relay.const(9, dtype = "uint16")#candidate|4308|()|const|uint16
var_4309 = relay.var("var_4309", dtype = "uint16", shape = (192, 2))#candidate|4309|(192, 2)|var|uint16
call_4307 = relay.TupleGetItem(func_3444_call(relay.reshape(const_4308.astype('uint16'), []), relay.reshape(var_4309.astype('uint16'), [6, 16, 4]), ), 0)
call_4310 = relay.TupleGetItem(func_3448_call(relay.reshape(const_4308.astype('uint16'), []), relay.reshape(var_4309.astype('uint16'), [6, 16, 4]), ), 0)
const_4311 = relay.const([[-2.520436,-5.912675,3.195112,-9.421217],[-9.109654,-9.312744,-5.861759,-2.572319],[-0.308233,0.829095,-0.828393,-8.395260],[9.644355,-7.151163,6.473884,3.280464],[-1.143013,-5.560806,-3.775381,-0.507389],[-3.101795,7.844624,4.536104,1.966773],[0.385044,1.671761,-1.280929,0.892640],[0.039474,-5.430427,7.202524,-0.438952],[-9.082213,7.500047,-7.774184,1.052346],[2.771057,0.376361,-8.993809,-9.109992],[-2.082059,6.024318,-6.902713,-1.273480],[-4.484954,-1.283596,-5.176909,5.482378],[-2.471284,-4.986705,-1.352854,4.927023],[-9.198115,-9.928160,-8.035728,-9.406844],[-4.350702,9.727225,-1.793486,-8.704293],[-7.216264,-1.730934,-0.107868,0.822034],[3.797199,0.127912,7.472427,4.367894],[0.075433,-3.834832,-3.807357,-0.169421],[1.688639,4.634840,-9.333980,-6.448109],[1.999962,3.106753,4.656161,-4.373769],[-8.696067,-3.789778,-4.373441,4.993360],[-0.943662,9.693873,-9.679801,0.805943],[8.535884,1.654080,7.094875,1.446510],[5.117346,-9.373948,0.896963,0.759596],[-3.272735,-1.775235,2.134808,-2.538262],[1.524158,-3.292032,-6.120307,6.870729],[3.157913,2.640138,4.502736,2.474061],[3.509764,7.787590,-1.138124,1.359078],[-6.232599,3.581883,8.664861,6.937060],[-4.731890,9.096144,-5.447043,-4.222030],[3.598920,-9.808481,-7.709338,0.824859],[1.969274,8.492195,3.516335,-1.124890]], dtype = "float32")#candidate|4311|(32, 4)|const|float32
bop_4312 = relay.subtract(const_4303.astype('int16'), relay.reshape(const_4311.astype('int16'), relay.shape_of(const_4303))) # shape=(32, 4)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
call_4318 = relay.TupleGetItem(func_1638_call(relay.reshape(const_4304.astype('float32'), [7, 13, 7]), relay.reshape(call_4302.astype('uint8'), [5, 135]), relay.reshape(call_4262.astype('float64'), [126,]), ), 7)
call_4319 = relay.TupleGetItem(func_1642_call(relay.reshape(const_4304.astype('float32'), [7, 13, 7]), relay.reshape(call_4302.astype('uint8'), [5, 135]), relay.reshape(call_4262.astype('float64'), [126,]), ), 7)
bop_4337 = relay.bitwise_and(bop_4283.astype('uint8'), relay.reshape(call_4262.astype('uint8'), relay.shape_of(bop_4283))) # shape=(1, 126)
bop_4340 = relay.bitwise_and(bop_4286.astype('uint8'), relay.reshape(call_4263.astype('uint8'), relay.shape_of(bop_4286))) # shape=(1, 126)
uop_4343 = relay.exp(bop_4283.astype('float64')) # shape=(1, 126)
uop_4345 = relay.exp(bop_4286.astype('float64')) # shape=(1, 126)
func_2655_call = mod.get_global_var('func_2655')
func_2659_call = mutated_mod.get_global_var('func_2659')
var_4350 = relay.var("var_4350", dtype = "int8", shape = (240,))#candidate|4350|(240,)|var|int8
call_4349 = relay.TupleGetItem(func_2655_call(relay.reshape(var_4350.astype('int8'), [240,]), relay.reshape(var_4309.astype('float64'), [8, 6, 8]), ), 9)
call_4351 = relay.TupleGetItem(func_2659_call(relay.reshape(var_4350.astype('int8'), [240,]), relay.reshape(var_4309.astype('float64'), [8, 6, 8]), ), 9)
uop_4352 = relay.erf(uop_4264.astype('float32')) # shape=(1, 126)
uop_4354 = relay.erf(uop_4266.astype('float32')) # shape=(1, 126)
var_4360 = relay.var("var_4360", dtype = "bool", shape = (8, 126))#candidate|4360|(8, 126)|var|bool
bop_4361 = relay.bitwise_or(bop_4283.astype('uint8'), var_4360.astype('uint8')) # shape=(8, 126)
bop_4364 = relay.bitwise_or(bop_4286.astype('uint8'), var_4360.astype('uint8')) # shape=(8, 126)
func_1638_call = mod.get_global_var('func_1638')
func_1642_call = mutated_mod.get_global_var('func_1642')
call_4366 = relay.TupleGetItem(func_1638_call(relay.reshape(const_4304.astype('float32'), [7, 13, 7]), relay.reshape(call_4302.astype('uint8'), [5, 135]), relay.reshape(call_4295.astype('float64'), [126,]), ), 1)
call_4367 = relay.TupleGetItem(func_1642_call(relay.reshape(const_4304.astype('float32'), [7, 13, 7]), relay.reshape(call_4302.astype('uint8'), [5, 135]), relay.reshape(call_4295.astype('float64'), [126,]), ), 1)
output = relay.Tuple([call_4295,call_4302,const_4304,call_4307,const_4308,var_4309,bop_4312,call_4318,bop_4337,uop_4343,call_4349,var_4350,uop_4352,bop_4361,call_4366,])
output2 = relay.Tuple([call_4296,call_4305,const_4304,call_4310,const_4308,var_4309,bop_4312,call_4319,bop_4340,uop_4345,call_4351,var_4350,uop_4354,bop_4364,call_4367,])
func_4374 = relay.Function([var_4309,var_4350,var_4360,], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
var_4375 = relay.var("var_4375", dtype = "uint16", shape = (192, 2))#candidate|4375|(192, 2)|var|uint16
var_4376 = relay.var("var_4376", dtype = "int8", shape = (240,))#candidate|4376|(240,)|var|int8
var_4377 = relay.var("var_4377", dtype = "bool", shape = (8, 126))#candidate|4377|(8, 126)|var|bool
output = func_4374(var_4375,var_4376,var_4377,)
func_4378 = relay.Function([var_4375,var_4376,var_4377,], output)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_4463 = relay.TupleGetItem(func_3338_call(), 0)
call_4464 = relay.TupleGetItem(func_3340_call(), 0)
const_4474 = relay.const([[-8.199452,-7.943022,1.100767,-2.549529,5.444267,-7.364991,-3.319693,-7.761281,-4.530217,2.893555,-4.191821,-0.806334,1.320592,7.842120,-2.215654,-5.837412,6.279278,3.814313,0.252330,-5.612391,-1.379194,5.869669,0.532951,-3.630176,-5.703282,8.498362,-8.771900,3.350522,8.127448,-5.779484,0.858946,-0.211613,8.003639,-0.832523,0.510487,3.432000,8.363894,7.033211,-8.290641,-2.638362,2.763800,5.073055,-1.974955,8.927861,5.594277,4.284843,-7.710337,4.377053,2.281076,-8.999822,-8.003855,-2.015104,-2.997333,1.711735,-4.112945,8.569224,5.115156,7.699152,-3.239575,2.036482,-7.775665,-7.820051,6.994535,-3.428048,4.491826,8.341915,-7.485221,8.670943,8.714082,1.636578,1.322002,1.522999,7.820699,-1.803089,-5.870039,7.773030,-3.310995,9.146960,1.879991,1.974583,2.238842,7.300839,-6.888213,-3.452500,3.577376,2.883744,4.633152,2.871592,-9.145490,-0.303353,-9.414211,5.949438,7.025413,-4.531565,5.105562,-3.688876,-0.102664,-9.002050,-4.020243,1.348130,6.847711,-2.366104,0.222509,4.106789,6.614072,-9.557399,-5.875760,8.701185,0.317144,-3.536969,2.651657,3.725857,-4.670486,-5.494567,-8.406513,-4.883753,3.581556,-8.600389,5.344009,-6.225554,3.063304,-3.467106,-1.497624,-0.712035,0.482978,-9.269860],[3.745295,-8.596638,-4.183965,-4.744437,-5.918705,-1.829169,-8.293451,2.223961,-0.241819,-7.183733,-9.753012,2.970878,-4.542943,-5.134241,3.124540,-6.218448,-4.687916,-6.781409,-9.711450,-0.172423,-3.353086,-2.492378,6.099107,-4.992188,8.847556,-5.935175,6.189877,-2.365326,0.309424,2.695882,-5.065043,6.277223,-8.273990,5.649245,-8.681717,-0.268643,-3.213769,5.437590,-7.772634,1.647332,7.221484,5.079855,-5.040269,-2.764501,0.605727,-9.792376,-5.603935,-5.285272,3.285269,6.415837,1.810406,-8.044739,-8.597917,-4.410399,0.538711,-5.400928,3.938763,9.201439,9.508896,2.926388,3.630179,-8.699320,5.843650,8.274623,-8.655790,-1.782481,-0.949032,3.555525,2.249067,6.996514,-4.243465,4.098098,9.033901,4.071255,-4.621841,1.526315,-0.290691,2.778700,6.378688,-6.437342,5.854642,7.920047,-9.875798,-8.466362,-2.003386,-2.385877,4.716650,-1.078854,9.021730,-5.743338,-5.762592,2.318519,5.201736,-6.904624,1.396599,4.792951,-6.826855,-5.132454,0.009733,-2.051692,-7.857039,-7.752924,-2.074179,9.842345,-6.794424,6.266961,1.568313,2.833542,-3.900475,9.829731,0.773534,-6.142409,-4.558522,-3.388871,-7.966218,2.941668,8.320111,-4.577800,2.593056,1.647228,7.585941,-3.047567,-3.756398,-4.434389,-3.886324,-3.046568]], dtype = "float64")#candidate|4474|(2, 126)|const|float64
bop_4475 = relay.floor_mod(call_4463.astype('float64'), const_4474.astype('float64')) # shape=(2, 126)
bop_4478 = relay.floor_mod(call_4464.astype('float64'), const_4474.astype('float64')) # shape=(2, 126)
output = bop_4475
output2 = bop_4478
func_4486 = relay.Function([], output)
mod['func_4486'] = func_4486
mod = relay.transform.InferType()(mod)
output = func_4486()
func_4487 = relay.Function([], output)
mutated_mod['func_4487'] = func_4487
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4602 = relay.var("var_4602", dtype = "float64", shape = ())#candidate|4602|()|var|float64
var_4603 = relay.var("var_4603", dtype = "float64", shape = (15, 3, 4))#candidate|4603|(15, 3, 4)|var|float64
bop_4604 = relay.power(var_4602.astype('float64'), var_4603.astype('float64')) # shape=(15, 3, 4)
output = relay.Tuple([bop_4604,])
output2 = relay.Tuple([bop_4604,])
func_4621 = relay.Function([var_4602,var_4603,], output)
mod['func_4621'] = func_4621
mod = relay.transform.InferType()(mod)
var_4622 = relay.var("var_4622", dtype = "float64", shape = ())#candidate|4622|()|var|float64
var_4623 = relay.var("var_4623", dtype = "float64", shape = (15, 3, 4))#candidate|4623|(15, 3, 4)|var|float64
output = func_4621(var_4622,var_4623,)
func_4624 = relay.Function([var_4622,var_4623,], output)
mutated_mod['func_4624'] = func_4624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_4633 = relay.TupleGetItem(func_3338_call(), 0)
call_4634 = relay.TupleGetItem(func_3340_call(), 0)
func_3395_call = mod.get_global_var('func_3395')
func_3398_call = mutated_mod.get_global_var('func_3398')
const_4638 = relay.const([-6,-10,4,9,9,-9,4,2,-5,2,1,-5,-9,1,-1,-5,-5,9,8,3,3,-4,3,-1,-4,8,2,-8,8,-1,2,-5,8,-8,3,-2,3,-3,3,-3,-8,-2,-4,-3], dtype = "uint64")#candidate|4638|(44,)|const|uint64
call_4637 = relay.TupleGetItem(func_3395_call(relay.reshape(const_4638.astype('uint64'), [44,]), relay.reshape(call_4633.astype('float64'), [126,]), ), 4)
call_4639 = relay.TupleGetItem(func_3398_call(relay.reshape(const_4638.astype('uint64'), [44,]), relay.reshape(call_4633.astype('float64'), [126,]), ), 4)
output = relay.Tuple([call_4633,call_4637,const_4638,])
output2 = relay.Tuple([call_4634,call_4639,const_4638,])
func_4643 = relay.Function([], output)
mod['func_4643'] = func_4643
mod = relay.transform.InferType()(mod)
output = func_4643()
func_4644 = relay.Function([], output)
mutated_mod['func_4644'] = func_4644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_4650 = relay.TupleGetItem(func_4643_call(), 0)
call_4651 = relay.TupleGetItem(func_4644_call(), 0)
output = relay.Tuple([call_4650,])
output2 = relay.Tuple([call_4651,])
func_4665 = relay.Function([], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
output = func_4665()
func_4666 = relay.Function([], output)
mutated_mod['func_4666'] = func_4666
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4099_call = mod.get_global_var('func_4099')
func_4100_call = mutated_mod.get_global_var('func_4100')
call_4679 = relay.TupleGetItem(func_4099_call(), 1)
call_4680 = relay.TupleGetItem(func_4100_call(), 1)
output = relay.Tuple([call_4679,])
output2 = relay.Tuple([call_4680,])
func_4706 = relay.Function([], output)
mod['func_4706'] = func_4706
mod = relay.transform.InferType()(mod)
output = func_4706()
func_4707 = relay.Function([], output)
mutated_mod['func_4707'] = func_4707
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3891_call = mod.get_global_var('func_3891')
func_3892_call = mutated_mod.get_global_var('func_3892')
call_4755 = func_3891_call()
call_4756 = func_3891_call()
uop_4764 = relay.rsqrt(call_4755.astype('float32')) # shape=(1, 126)
uop_4766 = relay.rsqrt(call_4756.astype('float32')) # shape=(1, 126)
uop_4767 = relay.sin(uop_4764.astype('float64')) # shape=(1, 126)
uop_4769 = relay.sin(uop_4766.astype('float64')) # shape=(1, 126)
output = relay.Tuple([uop_4767,])
output2 = relay.Tuple([uop_4769,])
func_4776 = relay.Function([], output)
mod['func_4776'] = func_4776
mod = relay.transform.InferType()(mod)
output = func_4776()
func_4777 = relay.Function([], output)
mutated_mod['func_4777'] = func_4777
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_4780 = relay.TupleGetItem(func_3038_call(), 0)
call_4781 = relay.TupleGetItem(func_3039_call(), 0)
output = call_4780
output2 = call_4781
func_4790 = relay.Function([], output)
mod['func_4790'] = func_4790
mod = relay.transform.InferType()(mod)
output = func_4790()
func_4791 = relay.Function([], output)
mutated_mod['func_4791'] = func_4791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2419_call = mod.get_global_var('func_2419')
func_2421_call = mutated_mod.get_global_var('func_2421')
call_4798 = relay.TupleGetItem(func_2419_call(), 1)
call_4799 = relay.TupleGetItem(func_2421_call(), 1)
output = call_4798
output2 = call_4799
func_4809 = relay.Function([], output)
mod['func_4809'] = func_4809
mod = relay.transform.InferType()(mod)
output = func_4809()
func_4810 = relay.Function([], output)
mutated_mod['func_4810'] = func_4810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mod.get_global_var('func_4163')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_4835 = relay.TupleGetItem(func_4163_call(), 0)
call_4836 = relay.TupleGetItem(func_4165_call(), 0)
output = relay.Tuple([call_4835,])
output2 = relay.Tuple([call_4836,])
func_4837 = relay.Function([], output)
mod['func_4837'] = func_4837
mod = relay.transform.InferType()(mod)
output = func_4837()
func_4838 = relay.Function([], output)
mutated_mod['func_4838'] = func_4838
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4890 = relay.var("var_4890", dtype = "float64", shape = (13, 5, 11))#candidate|4890|(13, 5, 11)|var|float64
uop_4891 = relay.cos(var_4890.astype('float64')) # shape=(13, 5, 11)
output = uop_4891
output2 = uop_4891
func_4893 = relay.Function([var_4890,], output)
mod['func_4893'] = func_4893
mod = relay.transform.InferType()(mod)
mutated_mod['func_4893'] = func_4893
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4894 = relay.var("var_4894", dtype = "float64", shape = (13, 5, 11))#candidate|4894|(13, 5, 11)|var|float64
func_4893_call = mutated_mod.get_global_var('func_4893')
call_4895 = func_4893_call(var_4894)
output = call_4895
func_4896 = relay.Function([var_4894], output)
mutated_mod['func_4896'] = func_4896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4486_call = mod.get_global_var('func_4486')
func_4487_call = mutated_mod.get_global_var('func_4487')
call_4907 = func_4486_call()
call_4908 = func_4486_call()
func_4706_call = mod.get_global_var('func_4706')
func_4707_call = mutated_mod.get_global_var('func_4707')
call_4914 = relay.TupleGetItem(func_4706_call(), 0)
call_4915 = relay.TupleGetItem(func_4707_call(), 0)
uop_4920 = relay.acosh(call_4907.astype('float32')) # shape=(2, 126)
uop_4922 = relay.acosh(call_4908.astype('float32')) # shape=(2, 126)
var_4937 = relay.var("var_4937", dtype = "float32", shape = (2, 126))#candidate|4937|(2, 126)|var|float32
bop_4938 = relay.greater_equal(uop_4920.astype('bool'), relay.reshape(var_4937.astype('bool'), relay.shape_of(uop_4920))) # shape=(2, 126)
bop_4941 = relay.greater_equal(uop_4922.astype('bool'), relay.reshape(var_4937.astype('bool'), relay.shape_of(uop_4922))) # shape=(2, 126)
bop_4946 = relay.bitwise_and(bop_4938.astype('uint16'), call_4914.astype('uint16')) # shape=(2, 126)
bop_4949 = relay.bitwise_and(bop_4941.astype('uint16'), call_4915.astype('uint16')) # shape=(2, 126)
output = bop_4946
output2 = bop_4949
func_4952 = relay.Function([var_4937,], output)
mod['func_4952'] = func_4952
mod = relay.transform.InferType()(mod)
mutated_mod['func_4952'] = func_4952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4953 = relay.var("var_4953", dtype = "float32", shape = (2, 126))#candidate|4953|(2, 126)|var|float32
func_4952_call = mutated_mod.get_global_var('func_4952')
call_4954 = func_4952_call(var_4953)
output = call_4954
func_4955 = relay.Function([var_4953], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3500_call = mod.get_global_var('func_3500')
func_3502_call = mutated_mod.get_global_var('func_3502')
call_4981 = func_3500_call()
call_4982 = func_3500_call()
output = call_4981
output2 = call_4982
func_4985 = relay.Function([], output)
mod['func_4985'] = func_4985
mod = relay.transform.InferType()(mod)
mutated_mod['func_4985'] = func_4985
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mutated_mod.get_global_var('func_4985')
call_4986 = func_4985_call()
output = call_4986
func_4987 = relay.Function([], output)
mutated_mod['func_4987'] = func_4987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mod.get_global_var('func_4706')
func_4707_call = mutated_mod.get_global_var('func_4707')
call_5032 = relay.TupleGetItem(func_4706_call(), 0)
call_5033 = relay.TupleGetItem(func_4707_call(), 0)
output = call_5032
output2 = call_5033
func_5037 = relay.Function([], output)
mod['func_5037'] = func_5037
mod = relay.transform.InferType()(mod)
mutated_mod['func_5037'] = func_5037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mutated_mod.get_global_var('func_5037')
call_5038 = func_5037_call()
output = call_5038
func_5039 = relay.Function([], output)
mutated_mod['func_5039'] = func_5039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4099_call = mod.get_global_var('func_4099')
func_4100_call = mutated_mod.get_global_var('func_4100')
call_5053 = relay.TupleGetItem(func_4099_call(), 0)
call_5054 = relay.TupleGetItem(func_4100_call(), 0)
var_5072 = relay.var("var_5072", dtype = "float64", shape = (14, 126))#candidate|5072|(14, 126)|var|float64
bop_5073 = relay.power(call_5053.astype('float32'), var_5072.astype('float32')) # shape=(14, 126)
bop_5076 = relay.power(call_5054.astype('float32'), var_5072.astype('float32')) # shape=(14, 126)
var_5079 = relay.var("var_5079", dtype = "float32", shape = (14, 126))#candidate|5079|(14, 126)|var|float32
bop_5080 = relay.bitwise_and(bop_5073.astype('uint64'), relay.reshape(var_5079.astype('uint64'), relay.shape_of(bop_5073))) # shape=(14, 126)
bop_5083 = relay.bitwise_and(bop_5076.astype('uint64'), relay.reshape(var_5079.astype('uint64'), relay.shape_of(bop_5076))) # shape=(14, 126)
bop_5099 = relay.logical_or(bop_5080.astype('bool'), relay.reshape(bop_5073.astype('bool'), relay.shape_of(bop_5080))) # shape=(14, 126)
bop_5102 = relay.logical_or(bop_5083.astype('bool'), relay.reshape(bop_5076.astype('bool'), relay.shape_of(bop_5083))) # shape=(14, 126)
func_4621_call = mod.get_global_var('func_4621')
func_4624_call = mutated_mod.get_global_var('func_4624')
var_5108 = relay.var("var_5108", dtype = "float64", shape = ())#candidate|5108|()|var|float64
var_5109 = relay.var("var_5109", dtype = "float64", shape = (180,))#candidate|5109|(180,)|var|float64
call_5107 = relay.TupleGetItem(func_4621_call(relay.reshape(var_5108.astype('float64'), []), relay.reshape(var_5109.astype('float64'), [15, 3, 4]), ), 0)
call_5110 = relay.TupleGetItem(func_4624_call(relay.reshape(var_5108.astype('float64'), []), relay.reshape(var_5109.astype('float64'), [15, 3, 4]), ), 0)
func_4621_call = mod.get_global_var('func_4621')
func_4624_call = mutated_mod.get_global_var('func_4624')
call_5111 = relay.TupleGetItem(func_4621_call(relay.reshape(var_5108.astype('float64'), []), relay.reshape(var_5109.astype('float64'), [15, 3, 4]), ), 0)
call_5112 = relay.TupleGetItem(func_4624_call(relay.reshape(var_5108.astype('float64'), []), relay.reshape(var_5109.astype('float64'), [15, 3, 4]), ), 0)
output = relay.Tuple([bop_5099,call_5107,var_5108,var_5109,call_5111,])
output2 = relay.Tuple([bop_5102,call_5110,var_5108,var_5109,call_5112,])
func_5117 = relay.Function([var_5072,var_5079,var_5108,var_5109,], output)
mod['func_5117'] = func_5117
mod = relay.transform.InferType()(mod)
var_5118 = relay.var("var_5118", dtype = "float64", shape = (14, 126))#candidate|5118|(14, 126)|var|float64
var_5119 = relay.var("var_5119", dtype = "float32", shape = (14, 126))#candidate|5119|(14, 126)|var|float32
var_5120 = relay.var("var_5120", dtype = "float64", shape = ())#candidate|5120|()|var|float64
var_5121 = relay.var("var_5121", dtype = "float64", shape = (180,))#candidate|5121|(180,)|var|float64
output = func_5117(var_5118,var_5119,var_5120,var_5121,)
func_5122 = relay.Function([var_5118,var_5119,var_5120,var_5121,], output)
mutated_mod['func_5122'] = func_5122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mod.get_global_var('func_4985')
func_4987_call = mutated_mod.get_global_var('func_4987')
call_5211 = func_4985_call()
call_5212 = func_4985_call()
func_2945_call = mod.get_global_var('func_2945')
func_2946_call = mutated_mod.get_global_var('func_2946')
call_5213 = func_2945_call()
call_5214 = func_2945_call()
func_4133_call = mod.get_global_var('func_4133')
func_4135_call = mutated_mod.get_global_var('func_4135')
var_5223 = relay.var("var_5223", dtype = "float64", shape = (1512,))#candidate|5223|(1512,)|var|float64
call_5222 = relay.TupleGetItem(func_4133_call(relay.reshape(var_5223.astype('float64'), [12, 14, 9])), 0)
call_5224 = relay.TupleGetItem(func_4135_call(relay.reshape(var_5223.astype('float64'), [12, 14, 9])), 0)
bop_5226 = relay.left_shift(call_5211.astype('uint16'), call_5222.astype('uint16')) # shape=(12, 14, 9)
bop_5229 = relay.left_shift(call_5212.astype('uint16'), call_5224.astype('uint16')) # shape=(12, 14, 9)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_5236 = func_5037_call()
call_5237 = func_5037_call()
output = relay.Tuple([call_5213,var_5223,bop_5226,call_5236,])
output2 = relay.Tuple([call_5214,var_5223,bop_5229,call_5237,])
func_5239 = relay.Function([var_5223,], output)
mod['func_5239'] = func_5239
mod = relay.transform.InferType()(mod)
mutated_mod['func_5239'] = func_5239
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5240 = relay.var("var_5240", dtype = "float64", shape = (1512,))#candidate|5240|(1512,)|var|float64
func_5239_call = mutated_mod.get_global_var('func_5239')
call_5241 = func_5239_call(var_5240)
output = call_5241
func_5242 = relay.Function([var_5240], output)
mutated_mod['func_5242'] = func_5242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mod.get_global_var('func_4706')
func_4707_call = mutated_mod.get_global_var('func_4707')
call_5246 = relay.TupleGetItem(func_4706_call(), 0)
call_5247 = relay.TupleGetItem(func_4707_call(), 0)
output = call_5246
output2 = call_5247
func_5262 = relay.Function([], output)
mod['func_5262'] = func_5262
mod = relay.transform.InferType()(mod)
mutated_mod['func_5262'] = func_5262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5262_call = mutated_mod.get_global_var('func_5262')
call_5263 = func_5262_call()
output = call_5263
func_5264 = relay.Function([], output)
mutated_mod['func_5264'] = func_5264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4046_call = mod.get_global_var('func_4046')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_5283 = func_4046_call()
call_5284 = func_4046_call()
func_3060_call = mod.get_global_var('func_3060')
func_3062_call = mutated_mod.get_global_var('func_3062')
call_5289 = func_3060_call()
call_5290 = func_3060_call()
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_5299 = relay.TupleGetItem(func_3667_call(), 0)
call_5300 = relay.TupleGetItem(func_3669_call(), 0)
var_5309 = relay.var("var_5309", dtype = "float64", shape = (2, 126))#candidate|5309|(2, 126)|var|float64
bop_5310 = relay.right_shift(call_5299.astype('int64'), var_5309.astype('int64')) # shape=(2, 126)
bop_5313 = relay.right_shift(call_5300.astype('int64'), var_5309.astype('int64')) # shape=(2, 126)
func_2945_call = mod.get_global_var('func_2945')
func_2946_call = mutated_mod.get_global_var('func_2946')
call_5317 = func_2945_call()
call_5318 = func_2945_call()
bop_5328 = relay.not_equal(bop_5310.astype('bool'), call_5283.astype('bool')) # shape=(2, 126)
bop_5331 = relay.not_equal(bop_5313.astype('bool'), call_5284.astype('bool')) # shape=(2, 126)
output = relay.Tuple([call_5289,call_5317,bop_5328,])
output2 = relay.Tuple([call_5290,call_5318,bop_5331,])
func_5333 = relay.Function([var_5309,], output)
mod['func_5333'] = func_5333
mod = relay.transform.InferType()(mod)
var_5334 = relay.var("var_5334", dtype = "float64", shape = (2, 126))#candidate|5334|(2, 126)|var|float64
output = func_5333(var_5334)
func_5335 = relay.Function([var_5334], output)
mutated_mod['func_5335'] = func_5335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_5349 = func_5037_call()
call_5350 = func_5037_call()
output = call_5349
output2 = call_5350
func_5351 = relay.Function([], output)
mod['func_5351'] = func_5351
mod = relay.transform.InferType()(mod)
output = func_5351()
func_5352 = relay.Function([], output)
mutated_mod['func_5352'] = func_5352
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5380 = relay.var("var_5380", dtype = "float64", shape = (2, 9, 4))#candidate|5380|(2, 9, 4)|var|float64
var_5381 = relay.var("var_5381", dtype = "float64", shape = (2, 9, 4))#candidate|5381|(2, 9, 4)|var|float64
bop_5382 = relay.floor_divide(var_5380.astype('float64'), relay.reshape(var_5381.astype('float64'), relay.shape_of(var_5380))) # shape=(2, 9, 4)
output = relay.Tuple([bop_5382,])
output2 = relay.Tuple([bop_5382,])
func_5388 = relay.Function([var_5380,var_5381,], output)
mod['func_5388'] = func_5388
mod = relay.transform.InferType()(mod)
mutated_mod['func_5388'] = func_5388
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5388_call = mutated_mod.get_global_var('func_5388')
var_5390 = relay.var("var_5390", dtype = "float64", shape = (2, 9, 4))#candidate|5390|(2, 9, 4)|var|float64
var_5391 = relay.var("var_5391", dtype = "float64", shape = (2, 9, 4))#candidate|5391|(2, 9, 4)|var|float64
call_5389 = func_5388_call(var_5390,var_5391,)
output = call_5389
func_5392 = relay.Function([var_5390,var_5391,], output)
mutated_mod['func_5392'] = func_5392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4985_call = mod.get_global_var('func_4985')
func_4987_call = mutated_mod.get_global_var('func_4987')
call_5404 = func_4985_call()
call_5405 = func_4985_call()
output = call_5404
output2 = call_5405
func_5408 = relay.Function([], output)
mod['func_5408'] = func_5408
mod = relay.transform.InferType()(mod)
output = func_5408()
func_5409 = relay.Function([], output)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5415 = relay.var("var_5415", dtype = "int32", shape = (16, 7, 9))#candidate|5415|(16, 7, 9)|var|int32
const_5416 = relay.const([[[10,-8,-2,-9,7,3,3,5,5],[7,8,1,-10,-8,4,8,5,-7],[1,7,8,-3,-3,-8,-8,-10,3],[-2,8,-4,5,-8,-10,-9,-1,-10],[6,1,-2,8,3,6,3,3,-8],[-6,8,7,-1,8,-3,-10,-2,8],[9,5,8,-10,-9,-2,9,-4,-6]],[[-7,-7,8,5,-9,-8,-4,3,-10],[1,1,4,-1,-5,-2,-5,-5,-7],[-10,-2,1,6,-8,-5,1,2,-7],[7,-9,-2,1,-1,-8,1,1,7],[-5,7,3,4,7,-5,-2,2,-5],[4,2,6,6,-7,3,10,8,-3],[-9,-4,3,-3,-4,-8,-1,-6,-10]],[[2,10,-2,3,2,7,-4,-2,-7],[2,2,6,6,2,10,-4,5,-10],[-10,-7,8,-8,4,-3,-9,-8,-10],[10,-2,7,6,2,9,8,-9,-2],[3,-7,1,8,4,10,-10,7,-5],[-4,8,-2,-10,-8,9,3,-9,-9],[-2,-10,-2,-10,3,6,4,8,-8]],[[2,-5,8,-10,6,-3,2,3,-4],[4,-1,3,-4,-9,-2,-5,8,5],[-5,-5,4,7,7,-10,7,7,1],[-5,-1,-7,5,7,3,-7,7,-9],[-2,-1,-10,-2,-4,-5,2,-2,-8],[6,-3,5,5,6,6,6,-4,8],[7,1,10,-10,9,3,-1,9,2]],[[-1,7,-2,3,-10,-5,2,-8,-7],[2,3,7,9,7,-3,-3,7,-10],[-3,-6,-3,-1,5,2,2,-1,-5],[10,-8,3,5,4,8,-10,-10,-5],[-9,9,-8,6,-5,4,5,6,-3],[5,-7,-2,4,7,8,6,-8,1],[-6,-5,-6,-2,3,6,-7,3,-1]],[[-8,-9,-10,6,-4,3,-10,6,9],[-4,-5,-9,4,4,-9,-6,-10,3],[-2,8,-3,3,9,1,-1,8,-6],[9,-2,-1,7,-9,10,9,-9,8],[-5,9,2,1,-7,-9,8,4,10],[3,1,-4,-2,-3,-7,4,3,5],[3,9,7,-4,-6,6,-4,-3,1]],[[-9,10,5,-4,1,-4,3,4,-9],[9,-7,4,3,2,-6,-3,7,7],[-3,3,-8,-4,-6,4,9,-3,-10],[-2,6,7,9,6,-5,10,-4,4],[1,5,-6,5,2,-4,4,3,9],[1,-4,-6,10,7,-8,-7,10,-6],[-9,-4,8,3,-3,3,10,2,5]],[[-1,3,-8,-2,7,7,10,4,-8],[3,8,10,10,9,2,-1,6,2],[2,-1,7,2,-3,-1,-1,-2,10],[2,10,3,3,6,7,-7,3,10],[5,7,-10,-1,-3,-2,5,-3,5],[-8,2,-10,-3,8,3,5,-1,8],[-1,6,3,6,-4,-6,7,-7,-9]],[[7,-2,-7,-4,4,5,1,-2,7],[-5,-7,2,-9,-7,-7,3,-8,9],[-1,6,-10,-1,6,-6,-1,7,-3],[1,-7,8,5,-8,-8,6,9,7],[4,10,3,4,10,-2,-2,5,-9],[5,-4,-7,-9,-2,-7,-10,8,1],[-6,5,-8,-9,10,-10,-6,-5,6]],[[-3,-4,-5,-7,-10,-3,-6,9,6],[-10,6,10,-1,10,9,7,-3,8],[-10,3,1,4,-6,1,-8,1,-1],[1,9,7,9,9,-4,2,-3,-5],[-8,2,-10,7,5,4,-9,7,6],[8,-9,9,-6,-7,-5,-3,-9,-8],[1,-9,-3,2,7,2,5,-1,6]],[[6,-3,1,5,-1,-1,5,4,8],[-8,1,-8,-1,2,-7,-1,10,-8],[-2,-7,7,-9,1,8,-1,8,4],[-5,-10,6,-5,2,3,-8,-1,5],[4,4,-7,5,-1,-10,-10,7,-1],[-9,1,6,1,6,-1,-2,7,2],[-8,-2,9,-3,6,-3,2,5,-5]],[[-7,7,10,4,-2,-8,5,-1,-7],[10,3,10,4,8,-7,-2,-1,8],[4,-3,-5,3,9,8,8,5,-3],[-7,-9,6,-10,-10,5,2,2,-10],[-6,-6,10,-2,1,10,-4,-10,-4],[9,-5,6,-7,-1,-4,7,-5,9],[-6,-4,8,-10,2,5,4,-1,3]],[[1,8,10,-5,3,9,-7,-3,-1],[-4,-5,-10,-4,4,-5,5,-8,10],[-4,-4,-6,9,9,2,-4,2,-7],[-2,9,8,-5,-2,3,-3,-6,4],[-2,-3,6,1,-6,-3,-5,3,1],[8,4,8,-1,-6,8,8,4,10],[-1,-4,-4,-9,10,-3,-3,6,2]],[[-7,-3,-9,-3,-2,10,-9,-3,-7],[9,-7,8,-9,-4,10,-9,8,-10],[-6,6,9,9,9,2,8,2,10],[7,2,-6,-7,9,-8,2,1,-9],[-6,-10,-10,-8,4,6,-9,5,4],[6,-6,-7,-6,-8,9,-7,8,9],[-10,8,9,7,-9,-1,-4,4,-2]],[[6,-2,-6,4,7,3,-9,2,-8],[-1,9,9,-3,-7,-5,-10,8,5],[-4,-7,8,6,2,5,9,7,6],[-7,9,5,-2,4,8,6,-6,-2],[3,-4,-6,-7,6,2,-9,10,3],[-1,4,-7,-5,-6,-5,9,-8,5],[3,8,5,3,1,2,-3,-10,-8]],[[-9,1,-6,-6,4,-10,-8,10,-4],[8,-7,-5,2,1,4,1,4,1],[-10,-7,-10,5,1,8,10,-5,4],[7,-9,-1,8,8,-6,4,-7,2],[7,7,-3,-3,10,2,-1,1,-5],[-5,-6,7,-4,-10,3,8,9,9],[-10,-5,-4,4,3,-5,10,3,5]]], dtype = "int32")#candidate|5416|(16, 7, 9)|const|int32
bop_5417 = relay.greater_equal(var_5415.astype('bool'), relay.reshape(const_5416.astype('bool'), relay.shape_of(var_5415))) # shape=(16, 7, 9)
output = relay.Tuple([bop_5417,])
output2 = relay.Tuple([bop_5417,])
func_5422 = relay.Function([var_5415,], output)
mod['func_5422'] = func_5422
mod = relay.transform.InferType()(mod)
var_5423 = relay.var("var_5423", dtype = "int32", shape = (16, 7, 9))#candidate|5423|(16, 7, 9)|var|int32
output = func_5422(var_5423)
func_5424 = relay.Function([var_5423], output)
mutated_mod['func_5424'] = func_5424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_5437 = relay.TupleGetItem(func_4643_call(), 2)
call_5438 = relay.TupleGetItem(func_4644_call(), 2)
func_4046_call = mod.get_global_var('func_4046')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_5441 = func_4046_call()
call_5442 = func_4046_call()
const_5445 = relay.const([[-8.720798,6.016474,5.494527,-9.302486,1.212074,-6.774395,-3.254716,2.196251,8.992236,-1.628387,0.501916,-0.217847,3.882514,0.076487,-1.333666,-5.207166,5.435181,1.280613,0.425069,-7.992292,9.366045,3.569765,-2.410101,-4.743170,-1.722564,-0.364495,-4.215448,4.794060,2.310960,6.688755,-3.645528,-5.381921,1.310572,-8.167236,-0.908817,7.437418,3.548958,1.449073,7.274337,-5.692782,-1.513704,3.356061,2.965796,-3.553027,0.956463,1.975876,9.709981,-3.332450,3.433739,6.367470,0.625843,-4.356982,9.976841,1.040510,3.054466,-2.704649,-4.332684,3.949761,2.446437,-7.188863,9.880927,-8.596771,-2.105038,2.111872,8.784053,1.941721,3.761278,-1.508091,6.668649,6.384915,5.095579,-6.288648,4.705752,6.235911,4.055280,8.043951,0.395906,9.231921,-5.605611,-7.669119,-1.013910,6.936184,5.062270,-7.243140,2.203738,0.400062,-0.889015,-5.999115,1.915024,-7.919443,-8.588534,0.621717,6.580640,5.208943,8.246477,0.534579,0.889949,8.094404,-2.699090,8.729351,5.021301,-9.904318,-2.947501,9.252732,6.437848,-4.495798,-7.406701,9.188540,-2.421958,2.089054,-2.128595,7.604993,9.990763,-7.550360,9.437269,8.609648,3.471789,-3.924302,0.608431,1.263270,5.768561,-8.705595,-2.314379,8.723811,-8.896527,-7.856526],[7.761174,-8.156964,2.406246,6.308754,-9.456804,6.664903,-8.576162,9.314709,-8.022179,-4.338898,-2.560744,5.592166,4.133040,4.121557,1.472573,-0.993610,-7.772717,-7.071883,-0.248722,-9.019594,-2.344462,-9.874546,7.118212,-7.125807,-3.930222,1.513767,4.171831,8.654806,7.542617,-9.852979,1.332251,9.832640,1.022818,0.029566,0.490785,-3.079924,4.585035,4.851495,-7.662423,-2.404925,-6.123290,1.626041,-7.266944,-9.579778,-3.869847,6.567120,-6.910185,7.673795,-2.453535,9.258850,-8.022017,6.314283,-2.292263,-7.293645,2.201760,7.004695,-1.128453,8.208069,-2.395997,-7.393725,3.898001,-1.509528,-4.449934,4.867104,-3.955331,2.415273,0.466078,-4.319570,5.215681,-4.771114,-3.961770,-1.615869,0.218744,7.147500,-8.065684,-5.013333,3.161933,3.146501,-1.004543,-4.832643,4.505615,8.328990,3.456627,-9.464006,-6.267650,1.861179,-0.176384,3.975939,8.288288,5.437358,-3.147808,0.352860,-6.240502,5.278574,-4.515659,1.008368,2.915875,-1.050831,1.081431,7.401233,3.265618,-5.253239,8.839130,5.135800,-3.065517,-9.220691,-3.428418,5.643515,-3.368376,4.372109,-2.376436,-5.390633,1.147277,-0.137567,6.346527,-6.055312,-3.799442,-8.242020,-6.788326,7.139525,8.560228,3.064505,9.118921,-9.785090,-8.862964,-9.946311],[4.348020,-6.680206,3.526020,5.626482,2.978866,-3.021025,-1.932433,1.029584,-4.771014,7.522445,-6.816914,-6.190940,2.949433,3.838004,-6.865093,0.885979,-2.291958,3.559638,-1.502633,-6.522064,-5.018906,-8.727407,7.054368,-9.159699,-5.180072,3.731543,-9.113422,-6.275983,9.936079,8.966940,-7.422102,1.652429,3.864188,-2.088980,4.913691,1.680931,5.069280,-4.377433,0.157746,3.013002,-6.500682,-0.938216,-1.617057,5.498876,-0.501415,8.407879,6.602729,3.687403,9.456140,-1.359508,-8.096891,9.199089,8.620749,-0.822340,-6.679469,-4.844379,5.636450,6.541305,-3.824154,6.945130,-9.554813,8.587255,4.981048,-1.044002,-7.315060,9.971005,-0.288497,1.094075,-8.326455,-2.855535,1.066817,7.290931,3.357615,-4.421959,6.415956,-1.858000,-5.736566,3.937747,-0.204350,2.666900,0.934345,4.467286,6.144654,0.114255,-1.937554,-1.851081,0.487074,-1.127504,-2.629524,-4.296779,-0.478047,7.232002,-3.066520,-3.315938,-8.174555,5.651726,-5.850061,5.702905,8.169853,0.510857,-4.130638,3.415708,-8.178009,-0.786197,-0.289718,-3.592580,3.169070,-4.534688,1.375078,-6.375284,-4.123560,0.996344,-3.271977,-2.907762,6.038612,-9.240229,2.775361,0.024009,3.949013,-8.052793,-0.304456,6.218642,9.286460,6.624464,-5.711613,-9.250653],[-9.966155,-3.989883,6.499510,-0.042605,-4.849477,-9.647262,0.336488,0.868581,-8.941731,-0.820059,6.034366,-2.550618,1.954871,3.738341,-7.834722,-9.965729,9.003627,9.835361,6.847066,8.204490,-4.603806,0.747242,-7.491308,7.405235,3.426722,5.375876,9.419808,2.775248,-3.235502,-3.222106,-1.185596,3.608338,0.492681,-0.151503,-6.947071,5.701925,-9.786639,-3.680069,9.620783,1.852766,-6.973377,4.603320,-4.460456,-5.876860,2.323612,6.341830,-6.399538,3.774543,-5.424834,-7.592646,-9.986174,3.005606,2.575485,9.773766,6.632670,2.228030,2.755999,9.717449,5.979168,-2.785570,1.722062,-2.864810,-8.476509,3.147792,-8.121558,-5.168594,4.536846,4.058373,4.510034,-3.509372,4.704992,-3.047420,-7.508498,-6.064724,-7.974295,1.761491,9.288512,4.493861,8.039461,-1.323931,-3.505143,-1.554934,-5.829308,-1.210226,-8.753779,1.759014,-4.266594,7.155147,0.310297,-8.997327,-2.752694,9.654406,-0.799289,-1.305818,-1.915042,0.848834,5.140927,-5.139018,3.210280,8.153706,1.783982,4.042761,2.073211,1.117621,-5.988779,-9.416218,8.410178,-8.891726,-1.787659,5.125730,4.769191,6.399421,5.603840,6.402912,4.273519,-2.973217,1.727877,-5.100779,-1.393677,0.115901,-7.911798,-6.756520,-0.663454,3.894280,1.092141,7.540347],[0.340577,7.763654,-8.547067,6.254393,5.308801,3.048592,7.500599,2.581293,8.544559,-6.169036,-1.441000,9.314215,-3.374714,0.973423,5.128956,-8.461757,-0.763201,2.172340,-4.170110,-9.590468,7.106800,-0.650515,8.627503,-9.165909,9.849148,-3.781852,7.375468,-3.558871,-3.230321,1.779020,-8.368535,-4.396688,8.124426,8.492067,-1.650792,-1.580474,2.517392,-7.152581,-8.107344,6.803780,-8.032610,-9.805481,9.317097,7.994565,-7.886422,-2.749382,-3.494407,1.539215,-7.981870,-7.770028,-4.950738,-9.290168,6.052813,7.990767,-1.114145,5.957451,-9.260790,-5.510257,-1.478826,-7.943537,3.229767,5.251283,9.361078,5.865329,-8.950263,6.959388,-2.100053,-2.664189,-5.568236,-1.281101,4.627781,6.421639,7.500967,2.688932,6.842418,-8.610615,-6.213971,6.660055,6.942384,-2.332000,-0.939801,-0.246490,3.487869,-6.628910,-3.646673,-8.585721,7.540891,-8.760457,-4.509134,-8.542670,2.089237,-9.051917,2.915546,6.331859,-5.395625,-0.966378,9.888248,-6.369446,6.337891,6.908276,3.491400,1.637844,9.889779,9.179418,-4.529041,-4.292971,-1.780652,2.036155,-8.720873,-5.892909,-2.178727,2.680008,-3.938877,3.075039,-0.044215,9.914132,-4.721197,-6.757062,-9.860400,5.070773,-4.221913,-5.568682,-3.285497,-0.892048,7.403995,-0.802506],[2.912416,5.982444,3.079560,6.721054,3.188300,0.628047,-5.541570,-4.513244,4.569192,4.138017,9.887114,-0.115538,3.276750,-5.281371,-3.649534,5.045427,-9.298195,7.930880,4.768553,5.325763,7.868821,-1.161253,9.637825,4.685885,5.379879,-1.979935,-3.472657,-4.818461,2.574717,-0.218837,6.834249,4.800482,2.150505,1.749310,7.411569,8.419918,2.100311,-4.540564,-4.390473,8.046879,-1.417883,-5.181637,9.696624,1.406994,7.476346,-3.983963,6.833187,-7.202118,-1.122065,8.100224,2.018712,-5.268380,-7.316188,7.525240,-2.712008,-2.278333,-1.099809,-6.649363,-4.164941,-2.012723,2.882239,-0.759825,-5.615450,7.588205,2.833490,-8.992924,-4.833756,0.212636,-5.089062,8.826206,-2.471826,4.133489,6.693088,-2.639481,6.584771,5.392420,9.999064,2.018302,5.969583,-0.677647,3.855401,5.191532,3.696497,4.488957,6.043721,6.232588,-9.641277,-1.869471,-4.897734,8.683749,2.480657,-8.399200,2.661138,-1.792793,1.476434,2.488567,0.665609,-8.630004,2.420893,-2.084137,-9.442699,-3.207547,3.283848,-5.299518,0.436725,5.836831,3.674079,6.989754,-5.366458,4.889457,-4.743352,-9.253824,0.633170,1.278528,-1.593640,3.012500,9.387231,-9.851967,-4.442930,-4.250493,-9.015961,-7.814504,3.666844,-0.309831,5.975197,0.970835],[-0.565624,8.131805,-9.806329,9.376085,7.811201,-3.797062,-5.446258,4.646473,6.136959,5.699682,1.865666,9.789641,8.995419,-3.057183,8.914824,0.717451,-4.582956,5.873790,7.329390,7.650002,2.872315,5.677658,-5.559052,-3.637882,-0.175968,-9.665943,3.619658,-7.756693,3.613910,9.921297,1.195265,4.680415,-6.955563,-6.681744,7.835965,-3.259523,4.551934,-4.905413,-3.571367,-8.593272,-1.889562,-1.293121,-7.510059,4.646744,-8.516986,5.935326,4.202738,5.901434,1.631609,7.729724,2.729278,-7.872545,7.021976,5.202907,8.846227,-2.476800,-9.224303,-0.905568,8.927364,-0.335167,-6.184725,9.407311,-7.361577,2.814338,7.366718,-4.061300,-1.303149,8.149209,-3.762380,3.868703,-2.539565,6.000092,3.575160,-0.985543,5.933825,-2.808655,-5.387840,8.444225,-0.899662,-9.256605,7.511741,-7.744810,0.183533,5.186672,-3.696540,-8.938293,-8.230896,1.777724,9.066336,7.949153,3.367841,-2.287288,2.282257,-0.255829,6.749627,9.554705,-1.799149,-6.739585,-9.401775,2.494568,3.138988,7.586439,3.289799,2.850710,-8.018618,-3.121995,-5.800241,8.333350,-6.969092,3.985224,4.096301,5.751200,-2.356921,7.795898,4.609209,-6.660599,-0.206422,3.403017,-5.809400,-8.440597,4.504496,-8.339327,-2.924342,0.456092,-0.857161,-3.063080],[-6.138366,7.976725,7.274231,8.862716,9.649495,1.386246,1.810415,7.296519,0.057766,8.543758,-0.457530,-6.181009,2.665141,-1.391162,-7.292678,2.922172,-6.320082,-3.881596,-0.200009,-4.598901,5.147763,8.250655,-8.038128,-7.026994,7.220553,-5.771256,-5.897557,-5.813807,3.908076,2.523526,8.264639,-8.956604,9.741998,3.858176,-4.130521,9.429115,-2.714690,-4.667909,0.860436,-9.595261,-2.613491,7.441156,-0.181329,3.915786,-3.522341,1.959359,7.901293,6.617781,-3.689891,-5.708243,-2.862411,-3.439120,2.097202,-6.304120,-6.165521,0.909631,6.742354,2.588875,-5.886412,0.102109,4.245421,-0.882755,-3.736673,6.045732,-4.677926,5.555301,6.962278,6.091112,3.103896,5.811405,7.768104,-9.886298,0.047316,-0.011201,-9.242361,-3.325822,-0.104294,0.312356,-2.919338,-9.633779,-2.119525,-3.178024,3.143666,-3.281403,0.519984,-8.967879,-1.033762,0.316554,-1.934478,5.810989,-5.803091,-1.848050,-0.364102,4.779786,-6.814945,-2.109128,-4.304411,-0.848737,-3.132665,-5.797770,6.531337,-0.418894,9.740920,5.290062,1.843874,4.459986,1.175670,9.959141,4.891486,-7.194703,-7.632245,-4.717266,3.838210,-3.241506,-9.075157,3.312566,-5.248397,0.948597,-5.502466,5.541367,-7.218124,7.714167,6.320717,0.389314,8.398802,-4.207962],[-3.896462,-9.046607,-3.726587,-5.275518,4.297954,-0.328758,0.164016,-7.859556,-6.737974,-5.156446,-7.435810,-8.168779,-4.602306,-4.694953,-5.199434,1.583339,0.244441,-5.121093,-4.498673,-1.141352,6.960777,5.334569,1.884652,-0.033351,-1.947004,-1.363153,-5.078034,-4.180815,-4.567837,-6.944660,4.941378,-7.099135,-5.072034,-4.124030,3.603958,-5.042431,7.715832,7.608657,8.364191,6.286097,-4.941154,-4.378107,-4.039162,4.463573,7.330836,0.597654,8.443042,-5.493126,9.435472,3.624857,0.164223,1.618630,1.614583,4.093876,-1.762920,-6.701470,-9.759588,0.209908,7.043052,-9.167469,-2.520868,-2.502551,5.982892,2.177460,3.029373,2.479194,7.817390,-4.059926,8.523469,2.874717,-1.283916,4.396009,4.688206,4.724797,5.078772,7.179936,-6.292139,-1.075137,-7.912778,-6.965994,-3.639684,6.618291,-5.424580,-0.871525,7.745042,6.320454,-8.223893,0.870792,2.393464,-6.326161,-0.658905,-1.548079,3.581517,-1.388227,9.139712,-3.443108,-2.628808,4.688800,5.702338,-8.140838,8.103524,-2.771361,-9.678101,9.871193,-0.894864,7.719810,-1.244385,1.650007,-1.788668,3.014243,-1.117513,7.502376,9.249154,8.818825,-6.123119,-1.027211,7.470050,5.868582,-5.764956,0.773420,6.935067,3.626878,4.414838,4.971022,-1.850894,6.017520],[-7.045319,0.829994,0.847994,-6.283128,-9.073070,6.270103,9.486235,-4.442349,-3.405887,9.159429,-7.508608,7.377894,2.458765,7.928512,4.688485,1.653565,8.367350,-2.086315,1.364292,-4.259802,8.378717,-8.289257,9.677172,-7.914722,-2.988340,5.569420,-1.239731,-6.055067,5.575349,1.386500,-4.373369,2.655523,3.799499,-5.266526,-5.678520,-5.016853,7.315453,6.889267,7.567883,-4.271173,3.383528,-5.434396,-6.976584,2.697517,-4.608697,-2.416094,0.508227,-1.859173,4.245563,-5.947358,-2.436791,6.932831,2.173733,-3.085745,-8.035941,-8.699079,-2.338089,7.862175,-3.857402,-3.365038,7.634187,8.166936,-3.061657,0.184152,3.018483,-9.454677,9.167817,1.555457,-7.034262,4.977365,-7.522848,-1.680623,0.331292,6.632390,-2.051616,-2.082307,-8.671515,4.616399,-6.685634,0.369917,-0.919230,3.463422,5.806598,-1.308095,-1.735461,9.663471,5.472991,6.941570,2.445571,-2.960475,-0.190474,-3.663434,0.429897,-9.304833,-5.174324,0.661289,2.181039,-7.451901,1.388065,-3.254954,6.663204,-4.798425,3.111838,2.148061,-9.698927,-4.606707,-5.862152,4.398415,-7.686047,0.040102,3.391668,6.741105,0.539466,-5.150179,-1.747562,-1.268521,-2.610459,4.217915,-5.580907,-4.281522,-4.300359,-4.694765,1.830151,-4.811536,8.459414,2.047429],[-1.959936,4.810561,-1.304629,-5.198833,-0.656049,-5.451564,0.665806,-8.263308,-8.294359,-9.415537,8.645092,-8.010035,1.515674,2.816886,-4.485112,6.482351,0.771233,7.509510,-0.524460,9.657822,-2.824336,1.557517,2.197146,-0.801586,2.795163,-3.919091,3.566279,3.516924,-0.046955,5.020314,8.538176,5.274352,2.486562,0.441594,4.009390,-2.682948,-1.714245,0.814119,9.532375,-7.361291,0.511610,2.098998,6.978585,3.317876,7.538385,-8.131011,9.180491,-4.981332,-7.853138,5.471545,-1.182086,-7.064031,6.354493,-0.376814,1.467273,8.674946,0.513165,0.252467,-4.957650,-2.735991,1.491711,-9.501145,2.990469,9.286948,-3.221648,7.403957,-1.200680,-3.625152,0.260398,-3.948661,5.342934,3.321097,-1.111689,7.784530,7.958999,7.119913,-7.901203,-8.487954,-8.354677,-3.648428,-8.583273,9.678528,5.920559,-1.375127,-6.218136,6.301110,9.088842,-3.257126,4.506232,-6.320656,-4.171512,1.649788,0.123073,-8.737390,7.587595,0.789818,-5.070594,-1.370574,-9.490623,-8.113694,8.262254,-1.265059,1.188175,-9.215562,-0.993461,6.615255,-8.271301,1.986838,-5.879430,3.945042,-4.648116,9.237726,0.958547,-8.159028,6.058261,-5.672351,-1.721744,4.392844,-5.958727,-1.993807,-2.874321,0.500959,-8.285570,-9.779340,-6.828699,-7.576277],[-7.047539,3.076901,2.696074,6.339633,-4.386100,1.856018,-6.124319,-4.974707,9.029718,7.299527,6.939342,-6.622867,-0.241559,-2.106024,9.151370,6.853330,6.203429,8.131535,8.990414,6.054613,8.068622,-9.375353,7.252479,-3.732600,-2.566965,-3.267893,-1.252980,7.260674,3.899004,0.344949,4.099913,9.665243,7.429482,4.308341,3.633977,-5.022854,-6.621086,1.956283,-1.916780,-0.927543,1.567980,-6.230731,1.030629,-5.244822,9.462363,8.085957,8.733672,1.659469,-9.463481,2.141280,4.756059,-8.383057,-8.923845,3.970309,9.544570,5.905294,-3.501337,-3.271514,-5.186088,9.617068,-6.741154,-9.090127,6.160803,-6.483264,-2.755089,1.439500,4.401121,4.984387,1.969451,-5.464229,-9.345464,-0.095492,5.478201,8.901947,0.650582,-5.409455,9.542786,4.434163,-5.954117,-8.397384,9.527171,3.189310,6.994137,7.573660,8.542518,4.924064,8.876200,4.626154,-1.596548,-4.740509,8.129678,3.585520,1.282936,9.886565,-1.842739,0.448787,4.901224,7.283614,0.524192,-8.445943,-0.357776,3.851944,7.440580,9.469932,6.683594,6.477728,-7.907467,7.512390,-2.066337,3.671569,7.758444,-8.241526,8.964675,7.159712,-4.206790,-5.336205,-5.684878,8.460770,-9.903614,0.983704,-7.136358,-2.754864,-6.934307,9.598288,-0.604936,0.735537],[3.403211,-6.734177,9.133180,8.977999,2.656806,4.983139,0.589732,6.657532,3.544680,5.452335,-3.834004,-1.846688,-5.973206,7.202454,-6.956800,-8.979479,-9.640324,0.049861,-6.593305,-8.148480,-0.658938,7.564852,-7.785051,8.007958,-2.415077,1.163267,-9.997937,8.437826,6.073491,9.370370,5.449933,2.165892,-9.552161,-5.784512,-6.838810,0.416801,-0.863324,-9.622105,8.410202,-8.367210,7.277135,-2.328392,9.142226,-2.725255,-4.019764,-9.024764,5.846054,-6.404260,-4.153136,-2.735164,6.082048,4.795536,2.116523,-5.803185,1.327956,-5.944392,-1.175409,-6.474204,-2.387809,9.546268,-3.377749,-2.591626,5.461902,-6.109009,1.679885,-7.157188,-0.971387,-8.076969,-5.464913,-1.757331,3.163269,-0.261333,-1.460292,5.718440,0.739541,4.394632,7.124568,5.328496,-6.305412,-8.791222,-8.828285,-5.390733,0.670295,-5.682160,5.515440,2.580218,3.861290,9.771335,5.894852,-3.802534,3.865296,-2.193435,-5.049720,2.613530,9.989399,-4.077434,9.291188,-7.119479,-8.196561,-9.933284,-1.828154,-3.533771,2.431239,6.825569,5.230083,9.769253,3.221694,1.178896,5.624293,5.291099,-8.007724,-5.411786,-7.383114,-0.207337,-9.665971,7.310114,2.104940,-3.453079,1.341243,2.360637,-2.515535,9.300740,-3.099097,4.427346,5.951297,0.090757],[-9.641778,3.313597,-1.313268,2.792760,-2.049616,4.602092,9.779684,-3.471972,9.673665,5.393403,-8.295109,-8.617853,4.063462,-5.685520,-7.658553,-9.039620,-1.726301,7.688647,-3.810682,4.879371,7.800318,-7.659179,-2.841418,9.303397,-9.056337,2.468647,6.554912,6.160648,4.896991,-4.177687,5.133607,4.995433,-3.983247,3.718463,3.450871,-7.945485,1.140487,7.950779,5.067667,-8.749942,7.216176,1.985583,8.004228,2.253861,-9.747145,-7.303877,6.632888,5.332908,-7.901250,-6.640147,4.766060,7.494893,6.987247,0.260869,8.514667,-1.491223,7.393239,-9.520755,-4.431787,-8.042121,7.990481,3.992810,-5.317569,-9.105064,6.575346,-8.293347,8.276659,9.898857,1.235555,-7.558675,-8.258738,6.723587,-6.694491,-1.910779,-4.110734,3.459565,7.842585,-8.482851,-6.982245,1.003625,1.960181,-1.666458,9.508673,5.401937,-8.418626,2.040514,-5.359805,8.074739,-1.097619,5.256288,-5.873030,-5.386436,7.638309,8.795842,-7.162180,9.469544,-8.615437,-4.780323,-5.351270,-3.074913,1.509314,2.358219,8.894100,-7.233784,7.801298,-8.565580,0.166325,6.903068,0.405247,-4.691806,1.874631,6.794003,4.423443,8.671709,0.098604,3.435538,-5.140564,-8.065657,4.457903,3.832341,-1.313568,-1.129222,8.228930,5.679529,-4.240891,-5.816339],[9.453957,3.077313,9.503913,-9.440427,5.025228,-3.257534,7.166767,7.315891,3.882065,4.123102,-8.668263,6.925049,5.243332,-4.181704,-1.878091,-5.849309,-4.096590,7.515278,-7.413132,-8.004052,9.188153,7.038427,3.073580,9.907349,-6.776571,-0.660053,-4.156878,-3.818450,-4.045661,2.157798,0.289041,3.137377,9.662069,6.010044,-3.215109,8.330259,-8.925615,-4.849291,1.718243,8.408705,-2.753742,-7.626396,9.654277,7.698843,5.413583,2.657223,-8.146660,-8.170035,5.329694,0.554390,7.667675,8.763862,-1.944857,5.484922,4.843512,9.840855,4.580606,-1.339415,-2.412516,-3.284103,-7.428490,-4.398285,-1.938411,-3.757085,-1.648982,-4.580172,7.483689,-0.335255,9.441630,0.645432,-8.286937,2.986535,8.290550,-4.892394,6.570653,1.690738,-8.223700,-6.213474,2.577542,-7.496222,-2.848785,8.651635,-7.722006,5.082421,-1.308991,-8.634206,4.480889,-7.016075,9.968640,-9.774784,7.341421,-0.353430,7.011452,4.243055,-5.194155,0.156223,-0.912101,-1.566576,-2.111991,-9.993522,-6.819077,6.385816,-9.349339,-5.587076,-2.709730,-6.781365,4.355457,-9.173103,7.854488,5.493500,0.677074,5.065625,7.492649,9.903075,7.759993,-9.577833,-1.166706,-8.189623,0.988474,4.768575,0.727008,-3.701566,-9.232443,-8.706935,-2.274229,5.019041]], dtype = "float64")#candidate|5445|(15, 126)|const|float64
bop_5446 = relay.left_shift(call_5441.astype('int64'), const_5445.astype('int64')) # shape=(15, 126)
bop_5449 = relay.left_shift(call_5442.astype('int64'), const_5445.astype('int64')) # shape=(15, 126)
func_3794_call = mod.get_global_var('func_3794')
func_3798_call = mutated_mod.get_global_var('func_3798')
const_5454 = relay.const([3,-8,9,5,-2,3,8,-3,7,6,-8,-10,2,9,1,3,-1,10,10,2,-4,10,-2,-8,6,1,-2,-8,10,-10,-9,-5,-3,10,2,9,-8,-9,-3,3,2,-3,4,-1,-1,9,3,8,-9,-1,-2,-9,9,-5,7,-2,-10,5,8,-2,6,-7,-3,5,7,5,4,2,-3,8,2,1,4,-8,4,1,1,-7,7,8,-7,1,-8,7,-7,5,4,1,-4,10,1,7,1,8,-7,-10,-1,8,-4,-5,1,-2,8,2,-4,-9,6,-9,-2,-3,-3,-3,-3,-6,-5,2,10,10,-9,9,7,-10,-8,7,6,-8,2,5,-4,4,3,7,10,-3,-10,-4,-2,9,5,-9,6,4,-1,-3,2,-6,1,-2,1,-2,8,9,4,10,-5,-4,8,-9,7,-4,9,-5,3,5,-3,-4,-5,-10,2,10,-1,-8,-10,-10,1,5,-5,-4,8,-2,-4,-9,-1,8,3,9,-10,-4,6,-7,-9,-8,-3,-3,-10,1,1,-5,-10,-6,-10,-6,-3,-3,6,5,2,-10,-4,5,7,-9,5,3,-8,-8,-5,1,7,-5,3,8,1,-8,2,10,9,-10,-5,10,3,4,-4,-5,8,-6,10,-8,-4,8,2,-5,-7,-3,-1,8,3,-1,-6,2,6,6,-5,-7,-3,-5,10,3,-9,4,1,4,-1,-3,-3,2,4,-5,4,-6,-4,-9,-4,-6,1,1,-9,6,-3,-10,3,-6,-1,3,-3,-2,1,3,-4,-8,-8,-6,5,-10,8,-5,-1,-7,-1,8,9,-1,9,-8,5,-9,5,4,5,8,-4,-6,3,-7,-4,-8,-3,5,-5,9,7,6,1,-1,4,2,2,4,1,-2,6,-10,-9,3,6,-5,-9,-6,-1,-1,-6,-4,10,8,9,8,9,6,-3,-1,2,3,-5,4,-5,2,7,-4,5,-2,-1,10,8,-8,-7,-9,3,10,2,5,-10,-3,-2,-6,8,-1,-10,-10,1,9,-5,4,-4,-9,10,-6,-10,9,-5,-10,5,-5,-6,-3,-1,2,-3,-7,1,-5,-9,-3,-9,2,7,6,-3,5,6,-6,-2,-6,-5,4,-8,-10,8,-5,-4,-1,-8,3,10,3,-7,4,5,6,2,9,7,-6,-1,-3,9,-7,1,-10,-9,-6,10,-8,7,-9,4,-8,5,5,6,-2,2,-3,1,-3,-6,1,-8,-3,2,5,-9,-6,-8,2,-9,-10,-6,-3,6,-9,6,8,-6,-10,-4,4,-9,-2,1,8,8,2,-10,-1,2,7,-8,3,-8,4,-9,9,-1,2,3,-4,9,7,3,-6,-7,-3,9,-1,-1,3,5,6,1,10,10,-6,-1,8,10,9,8,2,-9,6,-10,-8,9,3,-3,-5,-8,-4,6,1,8,5,3,3,4,10,8,-9,5,6,-6,5,-4,2,-10,9,-2,-4,-4,7,-8,-2,-8,-3,4,2,-2,5,-5,9,-10,5,-3,-9,8,6,2,2,8,4,7,-5,3,7,5,-3,-4,-8,-9,-5,10,5,-7,3,-4,-1,-1,10,-6,-1,-2,-5,7,3,-8,-5,8,-2,10,-4,2,-5,-2,8,1,7,6,-2,-7,8,-3,-6,6,-8,3,1,7,-10,-3,5,8,1,-7,-8,8,-10,1,-4,5,-5,3,-6,4,-9,4,2,7,-7,-6,9,-1,5,-6,-10,2,-1,-3,-7,-5,-5,2,3,3,-4,-3,3,3,-7,-8,1,-4,4,3,4,10,7,9,3,-9,10,-1,7,2,2,3], dtype = "uint8")#candidate|5454|(675,)|const|uint8
const_5455 = relay.const([-7.202375,2.261070,-8.588022,-2.579992,1.688488,-6.834570,5.508025,-5.887242,-8.625013,7.420705,-2.279452,-6.869595,2.616101,1.048303,-7.005829,4.592176,-6.813092,1.327915,-3.750419,2.825866,9.751331,-2.431040,4.740394,-2.470686,4.237802,1.942064,2.000272,5.898190,2.870589,5.139644,-9.440075,-6.057691,4.062314,-7.552239,1.019403,5.222789,3.100753,3.443947,-8.703314,-3.665417,3.856739,-1.274307,0.110088,6.199144,-0.759701,-4.188040,-3.146902,7.834966,-4.946593,7.114824,0.471661,-0.354987,-2.469476,-1.190584,-5.930886,-3.176138,-0.142858,-0.001177,-8.013204,-9.571599,-3.607488,-1.105125,6.530167,8.215210,5.421332,4.465933,9.040572,5.136116,-4.553304,4.043018,-4.851088,-5.857755,-5.479075,-6.472798,8.174809,8.962321,0.385200,-7.777721,0.726382,-4.753324,-5.380208,-2.666782,-5.167790,6.493650,8.902168,7.245406,0.780137,-1.525275,-1.242796,-4.310837,8.740027,7.092397,7.218027,0.424745,5.381513,0.296542,2.854783,-5.535172,7.050860,-9.999506,-4.050524,-3.959242,-1.877479,8.701867,4.899528,-8.657287,1.860614,0.238186,8.203605,8.901303,5.619099,-5.177188,-2.453677,-3.804640,-3.676617,-7.762869,-3.319307,-8.469081,4.724294,9.824789,-7.913075,4.144913,2.978744,-7.336539,8.230418,-5.810024,4.900702,-0.777429,6.848077,7.567825,9.885638,-9.182971,7.297086,-3.555803,-3.967065,8.141100,0.353304,-2.487929,-7.050461,6.337013,-0.026683,-4.999381,-7.540182,-9.176326,0.519063,-8.380635,9.428992,-6.479552,8.460333,-0.576027,-8.291191,-8.064013,-9.367493,-4.663727,-5.195191,0.171092,0.658967,-6.264940,-1.445546,5.577056,-4.228717,-5.380482,-4.531808,-7.796471,-4.612282,0.490760,3.893169,-9.608307,-6.982986,-4.261662,1.756155,-2.486606,1.123148,-2.170403,4.790046,2.128939,9.185797,2.002335,-7.328186,-1.903040,-2.824853,6.614931,3.409372,-5.650993,-9.765491,-5.350802,-4.062231,7.342471,6.661608,3.091704,0.863442,0.160345,-7.948000,2.505226,-6.261841,6.025869,6.203860,-2.125875,5.182430,9.093886,3.018504,2.807693,-3.544939,4.213533,-0.299606,-7.242502,2.060896,7.084980,-3.001715,-0.740757,-5.536359,-7.923190,-7.707059,-7.641260,0.895969,-5.964953,-5.031526,-2.875978,-6.327528,-1.886701,-2.072717,-7.777389,-3.995342,8.034206,-5.034046,-5.951093,-1.904302,8.292181,8.879144,-7.271857,9.731905,-3.654201,-4.559247,-3.675075,-2.627736,3.755944,1.630604,6.566113,4.356352,-5.273822,-3.394611,-6.200236,1.809908,-5.212473,-8.291738,1.094329,0.239766,7.147478,-8.477206,-2.852985,-2.874408,1.410630,9.337695,-1.270263,-2.857004,4.803582,8.255764,0.364414,1.612216,4.177731,-0.773977,3.072055,-9.784265,5.701260,-5.878062,-8.983035,4.550505,-4.869323,-5.023438,-3.839786,2.374902,6.324794,7.577204,-7.895279,-9.726755,-8.223237,-3.677181,-1.145478,-1.160282,-7.131274,5.349722,-7.673691,-7.209823,-8.762353,6.134156,7.436147,-9.180068,0.921769,3.368525,-5.184012,0.864850,-2.660595,-5.247690,4.525290,-5.464661,1.224512,-6.156416,9.907510,-2.141066,5.419570,-7.586225,-1.269278,9.086513,-2.859970,4.639664,3.066361,-1.150294,6.409166,-1.321698,0.571563,-2.364853,9.334737,-1.373293,8.840811,-5.747331,-1.296085,-2.115475,6.607212,-0.853737,-2.269778,-8.939579,3.949044,-5.823736,1.738181,7.596766,3.281295,0.580502,-4.496230,5.131369,-7.845118,-5.312649,-0.032911,0.309743,-3.223219,-3.869693,-1.104202,-7.623477,8.048980,-0.417706,-6.347997,7.960496,9.244482,-5.374987,6.537345,1.650878,8.803589,-4.468142,-0.087850,4.614607,-8.566715,-6.531663,-1.125433,-8.882337,2.675198,-4.449978,-2.810912,2.588986,-0.777406,0.312391,-3.901332,4.798205,-3.266268,0.638157,6.248924,8.376636,-3.708562,-1.990427,7.151157,-4.414339,7.350546,-9.653277,6.337414,6.420527,6.497568,6.441875,-0.027346,4.698981,-0.516399,5.778025,7.774569,3.629291,-5.059185,-6.953384,-8.996376], dtype = "float64")#candidate|5455|(384,)|const|float64
call_5453 = relay.TupleGetItem(func_3794_call(relay.reshape(const_5454.astype('uint8'), [675,]), relay.reshape(const_5455.astype('float64'), [384,]), ), 4)
call_5456 = relay.TupleGetItem(func_3798_call(relay.reshape(const_5454.astype('uint8'), [675,]), relay.reshape(const_5455.astype('float64'), [384,]), ), 4)
func_5422_call = mod.get_global_var('func_5422')
func_5424_call = mutated_mod.get_global_var('func_5424')
var_5459 = relay.var("var_5459", dtype = "int32", shape = (1008,))#candidate|5459|(1008,)|var|int32
call_5458 = relay.TupleGetItem(func_5422_call(relay.reshape(var_5459.astype('int32'), [16, 7, 9])), 0)
call_5460 = relay.TupleGetItem(func_5424_call(relay.reshape(var_5459.astype('int32'), [16, 7, 9])), 0)
output = relay.Tuple([call_5437,bop_5446,call_5453,const_5454,const_5455,call_5458,var_5459,])
output2 = relay.Tuple([call_5438,bop_5449,call_5456,const_5454,const_5455,call_5460,var_5459,])
func_5464 = relay.Function([var_5459,], output)
mod['func_5464'] = func_5464
mod = relay.transform.InferType()(mod)
mutated_mod['func_5464'] = func_5464
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5465 = relay.var("var_5465", dtype = "int32", shape = (1008,))#candidate|5465|(1008,)|var|int32
func_5464_call = mutated_mod.get_global_var('func_5464')
call_5466 = func_5464_call(var_5465)
output = call_5466
func_5467 = relay.Function([var_5465], output)
mutated_mod['func_5467'] = func_5467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_5511 = func_4019_call()
call_5512 = func_4019_call()
var_5515 = relay.var("var_5515", dtype = "float32", shape = (1, 126))#candidate|5515|(1, 126)|var|float32
bop_5516 = relay.logical_or(call_5511.astype('bool'), relay.reshape(var_5515.astype('bool'), relay.shape_of(call_5511))) # shape=(1, 126)
bop_5519 = relay.logical_or(call_5512.astype('bool'), relay.reshape(var_5515.astype('bool'), relay.shape_of(call_5512))) # shape=(1, 126)
func_4163_call = mod.get_global_var('func_4163')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_5528 = relay.TupleGetItem(func_4163_call(), 0)
call_5529 = relay.TupleGetItem(func_4165_call(), 0)
output = relay.Tuple([bop_5516,call_5528,])
output2 = relay.Tuple([bop_5519,call_5529,])
func_5537 = relay.Function([var_5515,], output)
mod['func_5537'] = func_5537
mod = relay.transform.InferType()(mod)
var_5538 = relay.var("var_5538", dtype = "float32", shape = (1, 126))#candidate|5538|(1, 126)|var|float32
output = func_5537(var_5538)
func_5539 = relay.Function([var_5538], output)
mutated_mod['func_5539'] = func_5539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_5544 = relay.TupleGetItem(func_3667_call(), 0)
call_5545 = relay.TupleGetItem(func_3669_call(), 0)
func_368_call = mod.get_global_var('func_368')
func_374_call = mutated_mod.get_global_var('func_374')
const_5547 = relay.const([2,-8,2,-10,3,-9,-5,6,9,-1,-6,-1,3,1,8,-7,-1,-9,-9,7,2,10,2,-7,-9,-5,3,8,-9,7,-2,6,-1,8,5,1,-3,7,8,-8,2,2,9,-3,-10,6,7,7,8,-10,-1,10,-2,9,1,-7,-3,8,8,10,2,-9,-7,-8,4,-10,9,-8,9,10,-7,2,-3,-1,4,8,7,-6,6,1,-2,-4,3,1,-1,1,-10,-9,-7,-6,10,-8,3,-1,-10,10,3,2,-8,-7,5,-9,1,8,8,9,-7,-5,3,-1,10,2,7,-9,-8,-6,-4,-8,4,-5,9,10,-2,-10,5,-5,-5,10,2,9,-8,3,-3,-9,6,-9,9,-4,-8,-4,-6,-8,6,6,-7,-8,-1,7,1,-1,9,3,-1,8,1,-4,1,-9,10,-6,10,2,-4,-5,6,-1,6,-4,1,8,-4,-9,4,3,-3,1,-3,-5,5,-2,-4,7,-9,8,-4,3,1,-4,-2,-9,6,-8,-6,-5,-3,-1,4,-8,8,4,-4,-10,1,-10,-1,-7,10,7,10,-6,-1,-9,-4,7,-5,-5,-9,6,9,4,6,10,-9,-3,-8,-2,-5,-3,10,-2,-4,7,-2,-5,10,4,3,3,8,2], dtype = "int8")#candidate|5547|(240,)|const|int8
const_5548 = relay.const([-9.357805,5.738377,1.211257,2.433651,-2.598063,-1.967921,-1.910428,7.958945,3.223597,-7.270255,8.361209,5.673342,1.191928,0.072742,-3.603206,-2.869185,-8.898310,-8.195303,9.959645,8.545708,-1.269227,6.346829,6.616370,-9.924820,-1.505588,-2.813529,6.585951,-9.457802,1.420948,-2.134640,-7.852530,7.856958,-6.849387,6.365997,1.789763,9.974433,-1.457138,2.626339,6.428022,-3.642391,-5.176813,8.726939,9.314268,-0.293204,2.558770,-3.596163,5.536542,4.276381,0.254740,1.358777,7.995156,-7.871733,8.584994,0.363000,1.390133,-0.527012,-0.613738,0.803438,7.013592,0.514577,-9.100460,4.739806,7.338917,3.858962,6.397700,1.474914,5.203148,-9.103393,0.575111,9.767562,1.459764,-7.281080,-9.161304,3.952098,1.563353,-0.871372,-4.534399,4.978100,-2.403047,-9.676328,9.034319,-2.742380,9.066180,6.940773,1.493076,3.236507,-9.394840,-3.864005,-3.192209,1.726807,-1.533580,5.858933,7.291912,-5.293895,-8.595433,2.241364,5.595121,-7.438192,-3.074289,4.653326,3.748996,-6.131666,9.480627,-4.653162,4.570832,7.426586,0.695040,-5.420779,-5.496697,7.923692,-9.870110,-8.157869,-7.550897,-4.042778,9.117957,-6.130960,3.125083,-1.183210,-0.289749,-3.409612,-2.852650,3.185694,-2.731235,-4.397129,5.978128,0.836287,-8.127651,1.362589,3.407176,6.327794,1.759240,8.260716,5.769701,7.412933,-8.827276,3.061577,-7.728989,-6.273292,-0.525309,4.503402,-7.402121,5.734634,-5.952234,-4.947571,5.980785,-8.007785,4.506628,9.878169,-0.186257,-5.307182,-1.225543,4.992798,4.240107,8.112217,1.479555,3.262195,-8.868912,-8.415532,3.859314,-5.464477,8.290632,2.250150,-5.340300,7.503907,-7.173585,1.319084,2.063263,9.186007,-3.980295,-0.110877,4.665372,-1.850788,9.442419,-8.011833,4.447591,8.058979,-8.317023,5.645132,9.174555,4.925744,7.879033,-3.559891,4.355711,1.342857,-7.491788,8.682811,9.741066,4.295011,5.225565,1.524057,-7.983387,8.980292,2.540045,7.670676,3.129838,-6.418811,7.189064,3.716408,-6.615721,0.988379,-4.295737,-1.720946,-2.019278,-3.778798,-1.495096,-4.578619,-1.588777,0.913968,-1.230970,-3.488900,8.593605,-5.617487,5.485325,0.799363,-9.171941,1.619530,-8.367617,-0.713354,9.806224,-0.587336,-5.463829,0.231819,-1.069466,4.796094,5.231625,-0.520002,-9.530421,-3.654207,-9.110784,-3.597368,-4.411248,9.249429,7.125611,3.162777,1.948275,-4.735528,-9.477639,-3.370824,-6.256570,3.818044,-3.624831,-3.699410,0.333320,-0.380934,5.632497,-4.865459,-3.337631,-8.019831,-3.918013,9.680615,3.423889,4.173268,4.577044,-4.849985,6.359466,6.191608,0.892784,9.108119,-1.622757,-2.066255,-7.520945,1.680427,-8.081165,-0.352946,6.493830,-6.358837,-6.910993,-2.697003,-2.513152,7.146635,4.215207,2.510537,7.573587,3.224615,-0.334189,7.353414,-8.925813,-8.386724,-9.172235,5.097014,-0.089954,-0.998667,-0.832483,-9.784495,4.434674,-8.558338,-2.933359,5.252229,-3.303873,-7.220124,-4.081823,5.643543,-2.479512,1.484158,4.027495,4.714541,2.438438,-8.928837,-9.744245,-9.134703,-5.145218,-1.964206,-0.128106,-9.555355,-7.938628,3.791289,-0.216065,-5.578982,-3.905655,0.481340,-5.483244,6.946079,-1.120959,4.414245,-8.757674,-3.356321,6.814384,-4.234778,-8.180080,-4.121157,8.180375,8.771586,8.442555,-6.727806,-1.907840,6.741007,-9.847503,-3.487346,-3.542051,-8.288863,5.004352,6.348851,1.262412,-3.026548,2.935360,0.837571,-5.462859,-1.202157,-9.852533,-3.304869,7.912397,3.765247,-1.707808,-5.732883,-0.620369,-8.929060,-0.931370,-2.219228,4.990350,4.086817,9.373317,5.057920,-2.625756,3.025208,-2.313620,1.059335,3.266124,-7.141977,-1.902717,-9.223321,7.470740,-5.687860,6.741444,1.837234,1.294646,3.680345,9.868737,-9.683824,-1.385638,-1.967398,6.264805,-6.657925,2.097745,0.530920,-4.717461,-9.627575,-3.199079,2.969308,4.721551,-2.033501,1.012612,7.553316,-7.247874,-2.024160], dtype = "float64")#candidate|5548|(384,)|const|float64
call_5546 = relay.TupleGetItem(func_368_call(relay.reshape(const_5547.astype('int8'), [3, 10, 8]), relay.reshape(const_5547.astype('int8'), [3, 10, 8]), relay.reshape(const_5548.astype('float64'), [384,]), relay.reshape(const_5547.astype('int8'), [3, 10, 8]), ), 5)
call_5549 = relay.TupleGetItem(func_374_call(relay.reshape(const_5547.astype('int8'), [3, 10, 8]), relay.reshape(const_5547.astype('int8'), [3, 10, 8]), relay.reshape(const_5548.astype('float64'), [384,]), relay.reshape(const_5547.astype('int8'), [3, 10, 8]), ), 5)
bop_5558 = relay.multiply(call_5546.astype('int64'), relay.reshape(const_5548.astype('int64'), relay.shape_of(call_5546))) # shape=(8, 6, 8)
bop_5561 = relay.multiply(call_5549.astype('int64'), relay.reshape(const_5548.astype('int64'), relay.shape_of(call_5549))) # shape=(8, 6, 8)
output = relay.Tuple([call_5544,const_5547,bop_5558,])
output2 = relay.Tuple([call_5545,const_5547,bop_5561,])
func_5572 = relay.Function([], output)
mod['func_5572'] = func_5572
mod = relay.transform.InferType()(mod)
output = func_5572()
func_5573 = relay.Function([], output)
mutated_mod['func_5573'] = func_5573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3877_call = mod.get_global_var('func_3877')
func_3879_call = mutated_mod.get_global_var('func_3879')
call_5576 = func_3877_call()
call_5577 = func_3877_call()
uop_5578 = relay.sin(call_5576.astype('float64')) # shape=(9, 1, 10)
uop_5580 = relay.sin(call_5577.astype('float64')) # shape=(9, 1, 10)
output = uop_5578
output2 = uop_5580
func_5588 = relay.Function([], output)
mod['func_5588'] = func_5588
mod = relay.transform.InferType()(mod)
output = func_5588()
func_5589 = relay.Function([], output)
mutated_mod['func_5589'] = func_5589
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5351_call = mod.get_global_var('func_5351')
func_5352_call = mutated_mod.get_global_var('func_5352')
call_5598 = func_5351_call()
call_5599 = func_5351_call()
output = call_5598
output2 = call_5599
func_5603 = relay.Function([], output)
mod['func_5603'] = func_5603
mod = relay.transform.InferType()(mod)
output = func_5603()
func_5604 = relay.Function([], output)
mutated_mod['func_5604'] = func_5604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mod.get_global_var('func_4706')
func_4707_call = mutated_mod.get_global_var('func_4707')
call_5653 = relay.TupleGetItem(func_4706_call(), 0)
call_5654 = relay.TupleGetItem(func_4707_call(), 0)
func_4790_call = mod.get_global_var('func_4790')
func_4791_call = mutated_mod.get_global_var('func_4791')
call_5655 = func_4790_call()
call_5656 = func_4790_call()
output = relay.Tuple([call_5653,call_5655,])
output2 = relay.Tuple([call_5654,call_5656,])
func_5667 = relay.Function([], output)
mod['func_5667'] = func_5667
mod = relay.transform.InferType()(mod)
output = func_5667()
func_5668 = relay.Function([], output)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4046_call = mod.get_global_var('func_4046')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_5675 = func_4046_call()
call_5676 = func_4046_call()
output = call_5675
output2 = call_5676
func_5717 = relay.Function([], output)
mod['func_5717'] = func_5717
mod = relay.transform.InferType()(mod)
output = func_5717()
func_5718 = relay.Function([], output)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5719 = relay.var("var_5719", dtype = "uint32", shape = ())#candidate|5719|()|var|uint32
var_5720 = relay.var("var_5720", dtype = "uint32", shape = (12, 1, 2))#candidate|5720|(12, 1, 2)|var|uint32
bop_5721 = relay.multiply(var_5719.astype('uint32'), var_5720.astype('uint32')) # shape=(12, 1, 2)
output = relay.Tuple([bop_5721,])
output2 = relay.Tuple([bop_5721,])
func_5734 = relay.Function([var_5719,var_5720,], output)
mod['func_5734'] = func_5734
mod = relay.transform.InferType()(mod)
var_5735 = relay.var("var_5735", dtype = "uint32", shape = ())#candidate|5735|()|var|uint32
var_5736 = relay.var("var_5736", dtype = "uint32", shape = (12, 1, 2))#candidate|5736|(12, 1, 2)|var|uint32
output = func_5734(var_5735,var_5736,)
func_5737 = relay.Function([var_5735,var_5736,], output)
mutated_mod['func_5737'] = func_5737
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3419_call = mod.get_global_var('func_3419')
func_3421_call = mutated_mod.get_global_var('func_3421')
call_5786 = func_3419_call()
call_5787 = func_3419_call()
var_5809 = relay.var("var_5809", dtype = "float32", shape = (11, 126))#candidate|5809|(11, 126)|var|float32
bop_5810 = relay.equal(call_5786.astype('bool'), var_5809.astype('bool')) # shape=(11, 126)
bop_5813 = relay.equal(call_5787.astype('bool'), var_5809.astype('bool')) # shape=(11, 126)
uop_5819 = relay.sigmoid(call_5786.astype('float32')) # shape=(1, 126)
uop_5821 = relay.sigmoid(call_5787.astype('float32')) # shape=(1, 126)
bop_5824 = relay.minimum(bop_5810.astype('float32'), uop_5819.astype('float32')) # shape=(11, 126)
bop_5827 = relay.minimum(bop_5813.astype('float32'), uop_5821.astype('float32')) # shape=(11, 126)
output = relay.Tuple([bop_5824,])
output2 = relay.Tuple([bop_5827,])
func_5832 = relay.Function([var_5809,], output)
mod['func_5832'] = func_5832
mod = relay.transform.InferType()(mod)
mutated_mod['func_5832'] = func_5832
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5833 = relay.var("var_5833", dtype = "float32", shape = (11, 126))#candidate|5833|(11, 126)|var|float32
func_5832_call = mutated_mod.get_global_var('func_5832')
call_5834 = func_5832_call(var_5833)
output = call_5834
func_5835 = relay.Function([var_5833], output)
mutated_mod['func_5835'] = func_5835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_5851 = relay.TupleGetItem(func_3667_call(), 0)
call_5852 = relay.TupleGetItem(func_3669_call(), 0)
output = relay.Tuple([call_5851,])
output2 = relay.Tuple([call_5852,])
func_5864 = relay.Function([], output)
mod['func_5864'] = func_5864
mod = relay.transform.InferType()(mod)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5864_call = mutated_mod.get_global_var('func_5864')
call_5865 = func_5864_call()
output = call_5865
func_5866 = relay.Function([], output)
mutated_mod['func_5866'] = func_5866
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4837_call = mod.get_global_var('func_4837')
func_4838_call = mutated_mod.get_global_var('func_4838')
call_5948 = relay.TupleGetItem(func_4837_call(), 0)
call_5949 = relay.TupleGetItem(func_4838_call(), 0)
func_4019_call = mod.get_global_var('func_4019')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_5952 = func_4019_call()
call_5953 = func_4019_call()
output = relay.Tuple([call_5948,call_5952,])
output2 = relay.Tuple([call_5949,call_5953,])
func_5960 = relay.Function([], output)
mod['func_5960'] = func_5960
mod = relay.transform.InferType()(mod)
output = func_5960()
func_5961 = relay.Function([], output)
mutated_mod['func_5961'] = func_5961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5351_call = mod.get_global_var('func_5351')
func_5352_call = mutated_mod.get_global_var('func_5352')
call_5962 = func_5351_call()
call_5963 = func_5351_call()
func_4809_call = mod.get_global_var('func_4809')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_5966 = func_4809_call()
call_5967 = func_4809_call()
func_5572_call = mod.get_global_var('func_5572')
func_5573_call = mutated_mod.get_global_var('func_5573')
call_5977 = relay.TupleGetItem(func_5572_call(), 2)
call_5978 = relay.TupleGetItem(func_5573_call(), 2)
const_5982 = relay.const([[-2.592272,5.388069,0.671026,-4.234027,6.531617,6.619500,9.678795,-5.053661,-7.671157,-2.170653,0.602340,3.198675,-3.433520,-4.085465,-5.757673,2.398489,-6.721686,-1.718573,4.128477,-4.121281,-3.059288,7.907724,-1.283008,1.961137,9.906523,9.745829,-5.823529,3.169561,1.455007,4.409855,6.052082,-0.886147,-7.952347,-5.080692,3.477040,-1.915528,-8.584067,-6.569509,-7.068850,-8.612998,3.958053,-7.996436,-6.635464,5.458564,-8.982730,3.088965,1.905928,4.931441,-8.945652,2.505889,-6.733181,9.953922,-4.674574,0.627746,-6.900559,-5.446156,6.026365,6.114175,-3.889132,-0.683953,3.647135,8.440611,0.478161,-5.411403,-3.899608,-7.489589,-3.285768,9.068609,5.156358,4.924438,-5.138178,6.415159,-0.618106,-5.868534,9.478677,8.541239,-2.657166,-8.790628,6.917486,-5.522687,-7.849718,-9.223958,-5.906044,7.906003,-6.374519,4.184233,4.979923,6.249107,5.419753,-7.960327,-9.827994,-8.910128,-2.100913,-2.849276,4.191393,8.213804,6.194418,-3.738655,-3.834879,3.736991,-3.594274,4.451452,-2.465171,-2.829368,-9.829267,-0.133316,-9.013833,-3.010406,8.729633,8.767467,4.121871,5.782467,-1.470008,-6.941372,1.014641,-8.467959,7.125014,2.167515,-3.168781,7.360704,2.394686,5.693636,-6.110531,-0.427961,-2.633618,8.313226],[5.901127,3.096047,-6.089884,-6.509866,2.558481,-0.497617,-0.832217,-8.466405,7.092870,-1.961544,-3.430973,-2.394273,2.489746,-3.994896,-4.906757,6.015032,-9.016910,-2.984625,-2.282881,6.237921,5.962321,-2.957799,3.814419,-9.532581,9.097840,1.675595,-6.737291,-3.545925,4.632063,2.547460,-2.181338,7.478797,7.026934,-9.013513,-9.953171,-4.371593,4.047124,2.004280,3.633117,7.159311,-4.477260,-8.669134,-8.409240,-8.502458,-2.563045,-5.735459,-7.657920,0.698603,2.554292,-3.987706,6.154024,9.150523,8.705252,-9.572562,-9.157335,4.262630,-9.194186,3.078243,0.345892,-7.558126,9.111111,-7.853033,-1.724045,-4.343550,4.804463,8.633893,6.500172,0.407135,-7.483235,5.506274,6.979264,1.283731,1.239618,1.796874,4.948630,-3.892662,-6.863393,-7.485646,-8.324601,-7.302777,7.654428,5.387019,-4.048427,-7.396526,-4.166199,8.884261,-7.801772,5.906752,9.581790,-5.882608,2.802409,5.981896,-1.303368,-3.794644,-3.507578,-5.258343,2.201780,-1.356291,2.767697,-0.490759,2.014835,9.195824,-2.140059,9.963447,8.447463,-8.840937,-3.475499,-2.670184,-4.687652,5.483987,0.540713,-8.155340,8.958339,-8.275513,3.381514,-5.456713,-0.923812,8.663981,7.774563,-3.183397,-1.065594,6.116397,8.469877,2.957965,-5.031217,-2.003009],[6.037413,-7.830677,-6.832618,1.468077,5.955346,-6.246052,3.494547,6.381746,-9.637351,-0.552476,-8.890767,9.371357,1.483746,0.732754,5.430111,-2.585665,3.342853,-4.094855,2.373775,9.096803,8.890373,7.667028,5.237939,1.894562,-0.926960,4.439661,7.067123,-2.659838,9.926474,4.554357,-0.997308,7.007809,-9.421227,5.798641,4.233356,7.449147,-8.714614,-7.740466,8.652586,8.547229,8.124293,-7.945827,9.733539,9.517513,9.265481,7.572075,-4.285069,7.028750,-1.857645,2.673412,2.451297,5.337099,0.761387,-5.231634,9.859415,-9.764851,-4.296819,-6.521116,-1.416334,-4.139710,-1.471161,8.635388,1.237610,5.082067,6.612486,2.128130,6.511207,-6.659577,-3.659552,9.508839,-1.260326,-2.251204,8.721959,-9.947672,0.821249,6.545902,-9.607086,-0.502945,6.565906,-2.795297,-3.835479,9.527786,-9.118758,-7.775227,-6.654162,-1.181118,-1.710558,2.237400,8.283593,7.051838,4.568566,-8.980127,1.185057,7.824797,5.231990,3.903578,5.302740,5.663004,-6.954714,5.172832,-3.530886,1.457614,-7.109270,-0.982873,-2.607367,-9.533786,-8.133912,1.602651,-8.871135,-3.919219,-0.753769,9.729816,-9.064308,8.322884,6.965129,-0.606395,9.905374,-7.801699,-5.146864,6.748211,-7.459597,-1.723403,9.988885,-5.840492,-7.583803,4.374689],[-8.931900,3.191333,6.589090,9.412497,9.644112,-4.298644,2.568962,-2.105770,1.650143,-9.120886,-2.725160,-5.634674,-6.118602,3.438924,6.698468,-3.706633,5.508498,1.797772,-0.763541,1.777077,-1.589268,-0.025929,-0.164277,0.097678,3.702320,2.326724,2.929366,8.367913,-5.098003,-8.072842,2.404571,1.579458,-1.580910,0.016049,3.445960,-3.281824,1.569182,5.415467,-0.391450,8.384154,-0.145801,5.834334,5.156141,-5.959610,9.722793,9.270982,9.632989,3.110559,0.637924,-2.351307,-7.408369,-0.989359,-9.696217,0.873398,3.918664,-5.372772,-5.720484,0.100456,-6.530684,2.247608,-6.406292,-0.962898,-4.425405,-1.932597,-5.778332,-9.689002,0.955544,-5.581717,7.799034,-2.595849,1.083823,-0.415624,-8.187643,6.155285,1.240779,-5.493560,9.057825,7.694560,7.439110,-9.555443,4.768705,-2.921275,7.177375,-0.054276,-6.783548,5.336036,0.624045,5.626016,1.344980,-7.624587,-2.033190,4.651152,2.348581,6.803556,-9.066025,-5.729703,-0.978950,-4.319880,-1.358651,-5.565980,-4.480209,-7.299386,-1.040165,7.279041,-6.725968,-4.869813,8.966792,-1.156235,2.711375,4.300694,5.591494,0.822704,-1.568393,-3.950144,-8.942059,9.837051,-5.160728,-8.239225,-8.476567,5.043589,0.796840,2.871319,3.020757,2.470057,6.135732,-6.354639],[-4.110656,-4.380564,5.909962,5.128210,-3.733940,-0.410106,-7.293212,1.947810,1.666656,4.403280,-8.281070,5.712817,6.840551,-8.959104,1.422026,0.680609,-0.997416,-5.844927,-3.600021,8.861514,-1.803022,-3.867552,-9.361425,9.947140,-1.192303,-4.059611,2.061852,-6.819364,-9.437384,3.664919,0.140653,-2.132312,3.962562,7.469196,-1.602005,-8.619458,8.852598,-5.173986,-1.214729,9.591814,-8.265641,6.473255,4.457211,-2.771436,3.668076,3.423135,2.440476,-5.849065,-2.533347,-2.306562,0.970339,9.371812,7.993944,-1.902938,-1.588356,-0.600606,-0.805428,-1.660519,7.764267,3.044078,9.635336,2.531239,-4.852605,5.604817,-3.601952,-7.806490,-3.186382,-4.721482,9.274897,9.977900,-8.449980,-9.802315,5.652124,-1.691058,-4.814610,5.847336,-2.307238,-0.039943,7.892122,9.222477,3.472857,7.954595,8.177149,-8.361901,-5.185659,-8.108948,0.996601,0.843870,-1.145852,-0.307861,-5.946467,-0.443967,-4.180908,8.710297,-7.441724,9.455775,-4.323754,2.155275,-5.513748,-2.494438,8.349745,7.956039,-3.793062,1.956894,-6.539961,3.555806,-3.795526,0.258235,-0.468753,-1.977021,1.694885,-1.223948,-5.638097,-6.505919,0.177584,9.796036,9.491811,-2.561117,-7.664314,-5.806507,7.268618,8.239662,1.023997,-6.207668,8.077758,-2.877446],[0.387718,4.868048,-3.025926,-0.528526,-9.186738,-9.985144,3.511455,8.502085,3.259162,-3.881167,4.497932,-6.315676,1.524800,-0.123038,8.748554,3.326943,-8.149353,-8.333381,-7.332396,-1.240211,-4.385921,6.861615,6.070950,2.533493,-5.339672,3.555844,1.908945,7.267333,7.318340,-5.826862,-9.161258,9.419876,-3.051594,-2.355919,-7.366441,1.108191,7.424475,-5.860674,-9.300862,9.890033,-5.407491,-9.820617,-4.806327,-6.162805,-8.706686,-4.697322,-1.018132,0.549272,5.731032,-5.898656,-8.855502,0.599266,-0.983445,9.830257,2.961187,2.682929,4.421086,-3.459024,2.808126,0.574379,0.366314,1.156124,8.146603,-0.063506,-5.208235,5.934353,-7.438414,-0.400445,-4.058679,7.307883,6.309725,8.845060,0.054581,-8.796826,-7.732591,-1.754712,-6.636665,-9.262690,-5.898754,-9.238872,8.463141,2.907277,-6.880219,-5.342971,5.475835,6.638506,-1.391829,-5.664109,-1.238934,7.109933,-0.070222,-9.420197,1.688927,2.618843,7.529931,-6.164351,7.209274,-8.267085,2.638298,-1.080495,3.724364,8.587316,8.035972,6.752819,7.606700,-8.134337,-2.654084,-3.699240,6.701044,5.584701,7.127711,2.131031,1.501964,4.431431,-5.871374,-2.036029,4.399858,-1.779534,0.713122,-5.520591,-7.291515,-3.256597,2.338889,-5.022456,-5.216238,9.663551],[2.812826,-6.603782,-3.918624,4.421223,-5.346714,-1.218327,-8.154967,-8.036658,-2.471960,-3.123661,1.975116,4.835579,2.657389,-4.290496,1.773974,2.129421,-3.499874,-2.514306,3.750911,-4.193806,9.275091,6.195508,9.259813,8.181551,-1.672946,-4.560599,-8.521739,-1.084255,2.244079,-9.622533,-9.901621,8.388425,5.719423,-5.497283,0.574358,-8.008541,7.363451,-6.661621,3.847712,2.023996,1.610339,-1.989056,6.970474,2.785052,1.497984,-9.782515,-5.882270,-1.465528,0.562464,-9.801276,6.946241,6.385040,0.162544,7.372683,3.536604,-7.902050,-2.384148,-0.986588,-2.302905,-5.537682,3.757208,8.906602,-6.749641,-1.292991,-0.923781,6.887615,1.420415,0.176711,-7.561362,-2.970357,1.966493,8.829157,5.664162,2.362609,5.402048,3.157509,-8.038746,-5.992714,-9.692361,-7.147349,-4.136419,8.313966,-8.173114,-0.875184,5.615545,-9.254586,8.453970,6.153568,-7.921866,-1.759472,-9.500588,-4.905703,3.438519,-0.904409,1.048056,-8.572954,-5.188777,-2.023192,-3.407270,2.605980,4.657394,-5.091710,0.275993,1.824809,8.690647,-7.544367,4.776538,-9.487645,4.061436,-8.862625,-2.483874,-5.487381,-3.207634,8.828080,5.540781,2.935642,4.532804,-0.200522,2.233527,-6.065793,1.390514,-2.909374,3.419553,3.469112,2.284930,-8.863467],[5.206069,-4.066025,3.172765,-9.695344,7.834503,2.757306,-7.374715,5.530440,2.779567,-9.259171,-1.424791,6.220307,6.179284,4.057185,-3.297661,-6.678838,-1.604624,-5.258508,5.724685,0.714444,-4.153390,0.270379,-9.647485,-6.825189,-0.919159,-3.678663,7.460169,-2.892121,7.714539,-7.751854,6.881342,0.027104,8.919652,9.730682,-1.713111,0.489855,1.776098,1.558323,-5.693580,1.268345,-2.057692,4.595411,0.058435,5.293742,4.943454,3.677124,-6.478335,6.767854,-0.333458,-6.139624,7.608036,8.542237,-9.528706,-7.076026,-8.547209,8.855849,8.057379,-3.537463,7.511994,1.931312,7.988290,7.622462,7.240592,-5.381268,-3.758588,6.459618,-7.615649,-3.464057,2.268605,5.305810,7.395134,3.012457,-3.799216,6.519212,5.195404,-6.911519,5.573558,-4.526621,-3.958123,-4.933199,-3.989993,-9.685385,-7.498375,3.443058,8.848323,8.033523,-1.545018,-9.300801,0.331015,-9.734015,-2.268612,6.637440,-8.308254,0.673239,-7.780986,8.038150,3.923514,-7.296216,2.524336,2.744040,-3.470564,5.766988,5.012006,3.819070,5.840510,2.765493,4.318316,-0.300499,9.676187,-9.042063,2.082616,-3.335761,-4.582066,6.310401,-2.051436,-4.065812,2.386573,7.431755,4.369775,0.186259,-3.693002,4.204934,-0.928906,-7.216758,1.980282,2.409833]], dtype = "float64")#candidate|5982|(8, 126)|const|float64
bop_5983 = relay.bitwise_xor(call_5962.astype('uint64'), const_5982.astype('uint64')) # shape=(8, 126)
bop_5986 = relay.bitwise_xor(call_5963.astype('uint64'), const_5982.astype('uint64')) # shape=(8, 126)
output = relay.Tuple([call_5966,call_5977,bop_5983,])
output2 = relay.Tuple([call_5967,call_5978,bop_5986,])
func_5987 = relay.Function([], output)
mod['func_5987'] = func_5987
mod = relay.transform.InferType()(mod)
output = func_5987()
func_5988 = relay.Function([], output)
mutated_mod['func_5988'] = func_5988
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3060_call = mod.get_global_var('func_3060')
func_3062_call = mutated_mod.get_global_var('func_3062')
call_5989 = func_3060_call()
call_5990 = func_3060_call()
output = relay.Tuple([call_5989,])
output2 = relay.Tuple([call_5990,])
func_5999 = relay.Function([], output)
mod['func_5999'] = func_5999
mod = relay.transform.InferType()(mod)
output = func_5999()
func_6000 = relay.Function([], output)
mutated_mod['func_6000'] = func_6000
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4706_call = mod.get_global_var('func_4706')
func_4707_call = mutated_mod.get_global_var('func_4707')
call_6146 = relay.TupleGetItem(func_4706_call(), 0)
call_6147 = relay.TupleGetItem(func_4707_call(), 0)
func_3726_call = mod.get_global_var('func_3726')
func_3729_call = mutated_mod.get_global_var('func_3729')
var_6150 = relay.var("var_6150", dtype = "float32", shape = (128,))#candidate|6150|(128,)|var|float32
const_6151 = relay.const([7.189114,9.892155,8.940575,0.011660,-4.486864,-9.935310,2.229247,9.801377,4.365484,-1.584514,-1.280090,7.353844,-3.576927,4.159845,-6.018091,-1.634646,-9.184796,-2.763650,3.699142,0.695858,-8.800755,-8.269017,6.322916,-1.947057,5.991465,-5.802370,4.296484,5.973599,-8.800324,7.391989,2.763441,-0.096859,4.689079,-6.492166,9.377772,-4.697904,2.629063,2.009343,-9.272913,5.353912,-2.847045,9.212354,6.154361,-7.979561,-1.396674,8.185327,3.222321,9.733928,-6.219325,-6.253096,0.443618,7.746877,3.109422,-3.586157,0.476204,-8.186465,2.581869,7.538905,-5.459953,-5.823308,4.155966,-2.021656,-3.857687,4.456616,6.937561,-9.822864,-0.158702,8.817460,-8.434631,6.894325,-0.040156,-4.356394,-1.492074,-2.652779,2.998645,4.344475,-1.155709,4.584119,5.474713,-7.090895,-0.002351,-1.809209,-1.107705,1.161787,3.024971,-1.163453,-0.371079,4.849135,-2.755159,1.648988,-9.463646,-8.602073,-0.734796,9.244495,-2.308366,6.806667,-5.451818,7.479447,5.260776,-0.745869,-9.676010,-2.933609,9.567276,8.893088,-1.682161,0.166934,9.356594,3.833977,5.426938,0.428534,-9.922119,5.461996,-2.808160,-1.224419,3.666424,-7.161182,1.272837,-3.515901,-2.065257,2.604721,-2.433806,-8.816869,-1.832208,5.401107,-9.371392,-3.330306,7.307852,-3.360940,-2.538374,-3.845968,2.559721,3.086012,6.584074,9.891832,2.255267,-2.405563,8.722916,3.463126,8.379708,5.059199,-1.094235,-2.775110,9.699158,2.664220,1.049619,5.544910,1.749748,-1.653929,-4.551778,-1.885773,-4.681954,0.851217,6.470164,2.026712,-6.915994,0.734589,-7.732168,-0.269200,-4.841523,-5.618963,3.275317,-7.463160,-5.580836,-7.614567,-7.962252,4.738424,0.974613,-3.897026,1.067454,4.347852,-4.510068,-3.472156,9.412930,6.295971,9.597908,9.416947,9.265764,4.931786,-4.662608,1.072149,-5.728480,2.004057,7.774856,3.890720,-7.887573,-0.703584,1.503552,8.212621,-8.726959,-5.431249,-1.116503,-9.732266,3.135959,-2.087229,5.427213,-5.603420,-0.842164,-2.204646,7.925062,-0.655861,-3.093198,-5.184580,-3.165228,-3.137367,-1.837887,-5.506679,4.576274,2.168850,-3.709540,-4.442728,5.373879,1.214880,8.146929,4.687521,9.119172,-6.496173,0.799978,4.101203,-1.283268,-1.049369,-2.789785,-2.198731,2.887546,-2.911621,0.993259,-6.066124,3.745554,-4.165548,5.037407,6.177517,8.083981,-8.249545,5.650141,-4.356352,-6.526531,-0.982437,2.736112,-0.665374,-6.081859,-2.569441,0.276861,-1.222315,6.484122,9.049873,9.715380,4.676151,-2.732021,2.092167,-0.069281,-0.597726,-6.306495,7.099785,5.280749,-3.011131,5.976912,7.570302,2.839750,0.305269,-9.161283,2.305156,-4.066069,-3.900566,6.230321,-4.270338,-6.795761,-9.399241,6.270444,-0.808235,5.274314,8.002696,-9.981539,9.456233,-5.856016,-0.559922,-7.098771,-7.643579,-8.420151,9.363402,-8.671074,7.135748,-9.821664,6.730588,-5.220836,-7.640197,0.911970,-4.130601,-7.952140,5.513693,-4.042911,1.013936,-7.374481,4.274630,2.863643,-0.612509,-5.416393,-0.592984,6.853299,1.610393,5.503685,2.746324,4.180849,-0.131450,7.048213,-3.471877,0.566645,-7.264379,-1.341588,6.822275,7.634574,9.815285,3.296802,-6.582997,-5.096890,-3.031070,-7.807027,-8.259711,3.913956,4.009001,-7.665518,8.766725,-1.922499,0.479473,0.475222,-7.027411,-8.572189,9.811916,8.296028,-2.791840,3.218100,6.318915,-0.622039,0.957086,8.370693,8.862914,-6.310147,5.401841,-9.169238,5.357718,2.614668,-2.558361,-4.405051,-0.534909,-7.227409,4.830783,9.567928,3.456085,-9.463567,-4.346582,3.619828,8.837551,-3.951750,-6.977172,-2.247270,-5.987401,1.951470,5.585971,-0.166021,2.401877,5.529530,-3.370702,-3.934949,-1.006709,-2.163427,-7.377990,-0.935805,-0.519393,-5.366481,-5.695480,-7.627636,2.550278,6.132865,2.568455,-0.233378,-6.592723,2.127605,-9.710441,-0.565179,-0.781574,1.221960,8.319077,4.564032,-8.775287,-2.923769,-4.744465,-2.557420,5.589275,-3.809950,9.197383,2.264676,-0.703644,4.956434,-1.162921,-8.041785,-7.204606,2.745171,1.360492,4.419156,1.950088,-6.451656,8.410640,4.404031,7.570329,4.581006,-2.009486,-4.087663,-5.232352,5.904261,-8.239375,6.795454,-3.174096,-8.440495,5.497109,1.515585,0.393554,-9.830636,-1.617765,2.601957,-7.903625,5.330884,-5.119800,0.667381,3.808542,0.330891,-8.374826,-1.308678,-8.556564,0.432514,9.472502,-9.446939,-9.878834,1.185773,-1.086983,-3.751081,1.038705,0.472594,-4.864995,-0.803562,0.968457,4.354686,8.568746,-3.926078,-3.728751,0.033745,1.913591,-9.148017,5.115536,-9.011571,6.656199,-5.335998,-4.684992,-5.591788,-5.377522,-0.133323,-9.358255,-8.960509,-8.660448,3.854741,-6.055498,-7.607954,-0.729942,0.552060,-0.290984,3.024152,8.835396,-0.898333,9.285988,-9.386331,-7.042324,-9.057492,-9.709693,-3.635677,8.615752,5.379347,-4.377541,3.528207,-9.001857,-7.663661,5.699539,-8.680594,9.607927,-5.075736,8.630304,0.896953,-3.922443,4.793064,-9.982244,2.946241,2.983327,5.377650,-9.129659,9.098126,2.688513,7.441818,7.689843,6.595280,-4.817568,-5.327871,-5.558258,7.508873,8.756078,1.815759,-9.429594,8.356649,0.845658,-9.286610,-9.452999,9.614210,4.778461,-8.799497,-1.846940,-1.301965,6.144598,4.024770,-1.014456,-8.889955,6.952818,8.219285,-1.174000,5.032215,3.328744,3.530393,6.235854,0.724777,0.988593,-1.140111,-8.090222,5.556960,9.719391,6.607250,7.348773,2.055472,-5.136157,3.813528,0.986247,-2.108624,-2.973817,-0.577606,-8.624579,-3.042896,2.576015,-0.555450,5.040022,-0.241814,-2.359125,-0.697634,6.076668,-4.981272,-2.278540,9.662471,-1.444858,-7.049206,1.295382,6.409267,9.012748,-3.518621,-5.803603,-9.750344,-0.827785,-5.631438,-9.269257,-7.988525,-6.312850,2.755587,-0.662666,-1.076299,6.132494,1.612381,-9.303634,-8.470853,4.303837,-7.959708,4.274914,1.682307,7.092048,-9.555033,3.411549,-5.791956,7.795075,-0.738227,-0.182018,9.161889,-9.093981,-8.381642,4.439116,-6.090917,2.516868,-5.287211,5.275758,-4.991052,1.817495,-3.511643,-1.990361,-9.425963,1.635667,0.793802,6.999261,8.743981,-4.915022,-8.437728,-1.484747,-1.245216,-4.982876,9.110770,-5.899585,-8.447598,-8.222424,-5.040629,4.286367,2.078145,-9.190950,-4.868085,7.895910,4.653151,-3.322913,5.207496,-7.514177,-7.385236,-8.932351,-0.648996,-9.371316,-6.522982,7.888555,3.024795,3.089539,9.966841,0.802820,9.117147,0.775703,-1.612727,8.755710,6.508181,5.341835,-1.611890,2.012536,0.171948,0.673251,-1.494965], dtype = "float32")#candidate|6151|(637,)|const|float32
call_6149 = relay.TupleGetItem(func_3726_call(relay.reshape(var_6150.astype('float32'), [8, 2, 8]), relay.reshape(const_6151.astype('float32'), [637,]), ), 2)
call_6152 = relay.TupleGetItem(func_3729_call(relay.reshape(var_6150.astype('float32'), [8, 2, 8]), relay.reshape(const_6151.astype('float32'), [637,]), ), 2)
func_5351_call = mod.get_global_var('func_5351')
func_5352_call = mutated_mod.get_global_var('func_5352')
call_6167 = func_5351_call()
call_6168 = func_5351_call()
output = relay.Tuple([call_6146,call_6149,var_6150,const_6151,call_6167,])
output2 = relay.Tuple([call_6147,call_6152,var_6150,const_6151,call_6168,])
func_6169 = relay.Function([var_6150,], output)
mod['func_6169'] = func_6169
mod = relay.transform.InferType()(mod)
var_6170 = relay.var("var_6170", dtype = "float32", shape = (128,))#candidate|6170|(128,)|var|float32
output = func_6169(var_6170)
func_6171 = relay.Function([var_6170], output)
mutated_mod['func_6171'] = func_6171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_6212 = relay.TupleGetItem(func_3010_call(), 0)
call_6213 = relay.TupleGetItem(func_3012_call(), 0)
func_5422_call = mod.get_global_var('func_5422')
func_5424_call = mutated_mod.get_global_var('func_5424')
var_6221 = relay.var("var_6221", dtype = "int32", shape = (504, 2))#candidate|6221|(504, 2)|var|int32
call_6220 = relay.TupleGetItem(func_5422_call(relay.reshape(var_6221.astype('int32'), [16, 7, 9])), 0)
call_6222 = relay.TupleGetItem(func_5424_call(relay.reshape(var_6221.astype('int32'), [16, 7, 9])), 0)
output = relay.Tuple([call_6212,call_6220,var_6221,])
output2 = relay.Tuple([call_6213,call_6222,var_6221,])
func_6228 = relay.Function([var_6221,], output)
mod['func_6228'] = func_6228
mod = relay.transform.InferType()(mod)
mutated_mod['func_6228'] = func_6228
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6229 = relay.var("var_6229", dtype = "int32", shape = (504, 2))#candidate|6229|(504, 2)|var|int32
func_6228_call = mutated_mod.get_global_var('func_6228')
call_6230 = func_6228_call(var_6229)
output = call_6230
func_6231 = relay.Function([var_6229], output)
mutated_mod['func_6231'] = func_6231
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4046_call = mod.get_global_var('func_4046')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_6263 = func_4046_call()
call_6264 = func_4046_call()
func_5999_call = mod.get_global_var('func_5999')
func_6000_call = mutated_mod.get_global_var('func_6000')
call_6265 = relay.TupleGetItem(func_5999_call(), 0)
call_6266 = relay.TupleGetItem(func_6000_call(), 0)
bop_6268 = relay.logical_and(call_6265.astype('bool'), relay.reshape(call_6263.astype('bool'), relay.shape_of(call_6265))) # shape=(1, 126)
bop_6271 = relay.logical_and(call_6266.astype('bool'), relay.reshape(call_6264.astype('bool'), relay.shape_of(call_6266))) # shape=(1, 126)
func_1878_call = mod.get_global_var('func_1878')
func_1880_call = mutated_mod.get_global_var('func_1880')
const_6278 = relay.const([6.245494,8.937120,-7.090555,-9.878240,-1.165916,-5.110177,-7.021415,3.226491,8.298034,-3.181969,-9.871160,8.930396,-6.067779,-8.891964,7.228646,6.752053,-9.072724,-5.196003,-5.568549,-2.887851,2.944351,-6.930097,9.926592,5.836161,-2.110240,-4.783888,-7.856569,1.166427,9.577739,-4.003257,-9.418892,0.231717,-5.745084,7.822056,-6.497813,-7.172815,-2.262146,-2.395207,-6.270247,-5.732074,3.952443,7.571963,4.029462,-0.965209,-7.407517,5.760873,-0.187322,-0.660519,7.275824,3.755270,0.958661,8.275347,-6.944436,4.844227,2.821114,4.344881,2.657169,-2.136988,8.678541,1.983120,-1.357728,-7.901501,-5.690298,4.421214,-4.024833,8.730483,-6.770863,-8.721422,-9.833783,6.465486,0.437113,-3.951941,-0.379784,6.249284,7.290823,7.857659,-3.851384,-1.688625,-9.446398,-6.297012,-9.194850,0.518321,-2.325837,0.277461,0.720573,4.020666,5.812148,7.247157,-9.483523,-6.205755,-5.365850,4.281225,7.883116,2.088737,-0.805530,4.799978,4.288144,8.589837,-5.305949,9.526149,-6.304174,-0.829613,-5.934839,0.884217,8.954941,3.112653,5.426762,-7.757330,-4.472097,4.645355,2.212754,-6.856896,0.812525,-2.527514,-7.837551,2.376940,-1.141122,7.686523,-0.047444,-5.287157,-0.921252,5.072890,-4.325077,-4.080163,1.014115,3.394248,-3.385320,1.720889,-5.196958,3.251429,9.160574,7.604176,6.972493,9.219045,2.772343,0.730565,9.471805,3.722922,-7.760589,-9.052529,9.764056,-3.062197,5.491438,0.714183,3.470709,9.996217,-9.355922,2.688742,7.761979,8.831608,-8.026763,-4.152020,3.258354,5.785543,5.261943,5.887122,-7.554234,8.040417,6.705707,5.073052,7.241043,-3.630561,7.324406,8.818769,-6.585803,8.472450,3.645632,-9.224955,9.608698,-3.597477,8.278857,-4.203016,7.870804,-6.242056,-9.966000,-3.510310,-8.743481,8.029957,-7.814036,-9.168101,0.091823,2.177644,1.407436,8.154778,7.155958,0.368356,9.913117,-8.974389,4.834598,-6.961741,-6.557072,-6.722900,5.387138,-0.077773,-8.099298,-7.263277,-7.864969,8.420481,1.825918,6.296137,-2.345821,9.654200,-7.199748,3.508286,-9.298258,5.802533,-1.885405,4.095095,-6.296040,0.218531,-5.338184,-0.146588,0.762951,-6.761705,4.523674,6.655502,8.719551,4.244769,7.780532,1.432175,-4.358144,-2.349808,-1.995298,-7.358324,-8.669879,-7.344943,5.028783,2.818695,-2.762392,1.480057,3.565007,6.010422,-0.749445,-4.279017,2.117862,7.555369,0.067180,-0.586450,-5.752418,-2.868223,-9.973209,5.846899,2.074452,-9.822417,0.231750,9.321986,9.028733,0.431752,-6.868302,3.416438,1.972265,8.622373,-4.726006,4.849962,0.637369,2.839422,-0.012100,2.731389,-6.033820,6.250053,-5.433689,-8.889156,0.962807,9.694480,-5.269671,-5.886613,5.606404,-8.697226,1.461651,-3.617505,4.293314,8.965413,6.632718,1.853047,-3.229344,2.202849,-3.310473,-5.094665,6.914302,0.049905,-2.377577,5.711513,7.115592,-3.209822,0.642316,7.778395,-2.472829,-5.370468,-7.751905,3.895235,-3.614181,7.967952,9.592713,1.910674,8.019203,-5.968099,-0.592772,9.146216,3.738016,-6.076998,7.182239,0.689224,-0.235980,5.674292,6.739496,-2.265378,7.705723,-2.101718,5.984847,3.356795,-6.569644,0.928020,2.595916,5.245813,-9.591193,-6.893744,8.244514,2.254643,5.163907,-6.889094,-9.786425,7.565120,-0.181153,-0.614878,4.039413,-8.199914,6.213192,-3.718636,0.542142,4.570292,3.836727,5.830044,3.284670,3.125509,2.597939,4.244434,-1.499307,1.759175,9.734057,-3.261258,8.507856,-7.475097,-9.700276,2.871469,-3.309148,9.301540,-7.193896,7.648687,-7.603864,3.386615,-4.625647,8.319126,3.303253,-1.521933,-5.075758,9.715706,5.166708,-5.935282,-4.289255,0.179849,-2.900269,-3.704548,5.317414,-2.347042,-0.949531,6.117661,-8.653086,6.896602,2.973383,-7.982867,5.870280,8.755213,-7.816584,-1.031575,-2.092090,7.137734,3.484996,1.283397,6.616792,-1.136904,1.128977,7.643371,-5.050072,0.563879,-1.450485,0.803897,0.322642,-5.117500,-2.025079,-6.945551,4.704010,6.849665,-2.596319,3.655222,-1.639415,8.507465,-4.537332,8.729185,-8.492768,-7.424695,2.400585,-6.779484,4.666092,-5.284343,1.697841,-5.657469,-5.120575,9.511172,-6.315069,5.542621,-6.532600,3.499017,4.901579,9.234633,6.346966,-7.794250,5.275354,-4.041506,4.357401,-6.767881,6.223008,9.428064,-1.162738,-2.671268,-6.500255,3.091157,5.778176,7.024588,-9.215184], dtype = "float64")#candidate|6278|(429,)|const|float64
call_6277 = relay.TupleGetItem(func_1878_call(relay.reshape(const_6278.astype('float64'), [11, 13, 3])), 1)
call_6279 = relay.TupleGetItem(func_1880_call(relay.reshape(const_6278.astype('float64'), [11, 13, 3])), 1)
bop_6285 = relay.mod(call_6263.astype('float32'), relay.reshape(bop_6268.astype('float32'), relay.shape_of(call_6263))) # shape=(1, 126)
bop_6288 = relay.mod(call_6264.astype('float32'), relay.reshape(bop_6271.astype('float32'), relay.shape_of(call_6264))) # shape=(1, 126)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_6289 = func_5037_call()
call_6290 = func_5037_call()
const_6292 = relay.const([1.070656,8.529393,-5.613439,-0.427514,-7.951687,-4.039991,-6.053638,4.833789,-8.068402,3.814913,5.484776,4.461862,1.246452,-6.740832,-7.432067,8.447147,-3.153410,1.960013,7.819042,9.632914,-7.083978,-7.073679,-3.372982,5.090154,3.344906,5.006309,0.422750,0.791824,-8.640519,-4.190318,2.272771,-6.821933,-9.390716,7.775005,7.919985,0.915581,-1.974962,9.028238,-1.812130,0.770757,1.479464,-9.027782,0.154557,-8.261039,-8.097252,6.683096,-5.617014,6.599656,1.900637,-2.495238,8.089259,-4.946890,2.274437,6.710997,6.720583,7.354021,8.452944,6.725452,-0.224926,-8.661070,8.273313,-0.121040,8.654740,-7.004055,-6.031005,-2.474848,6.144894,1.750494,-5.079463,-8.326683,1.905942,-1.525711,2.956421,-1.109162,7.477824,-6.362528,-6.573162,-9.947844,-4.686921,-5.704874,3.013215,5.702977,-6.665804,-9.875566,4.717555,-6.013795,-2.980515,9.131347,-6.520483,0.554726,5.089297,-7.308350,9.494503,6.114262,-3.122596,-9.046157,-5.199917,-8.483643,5.687703,4.621944,2.502529,9.778975,3.459351,6.405964,-8.986118,0.584800,0.129773,9.759833,8.711311,-8.728289,0.754860,0.957692,-0.375123,-2.293432,-8.336986,-8.612652,7.091033,-7.978774,7.456988,-9.869243,-0.326439,6.389337,-1.049132,-2.201764,0.201365,1.701713,-6.337387,6.818888,-7.263654,-9.754724,2.127864,-3.852527,-8.370491,6.500124,-3.330025,-3.733846,-8.616656,-4.913839,-5.005083,-7.741215,-8.719473,-8.217519,-7.028119,9.896190,2.960669,-4.973883,7.922210,1.763851,9.827866,1.956183,3.778188,-4.753134,7.777266,-9.271985,-9.961881,9.356992,-8.306642,5.260284,2.791902,7.535487,-7.512645,-3.130555,-6.875298,0.790111,-0.476292,2.132364,-6.703877,6.433483,1.932216,-1.234806,-3.160273,-4.254019,8.445379,-7.875793,-3.209068,-7.867572,0.768681,-1.390547,-3.457614,8.164839,-8.520161,-5.331153,-3.247318,-6.861441,8.705485,9.513994,4.843432,-7.834293,0.931981,1.569121,-1.798991,-8.952480,-0.178652,0.081253,3.601252,-5.661699,-9.376310,-2.604876,-4.438644,-4.696946,9.334669,-9.827708,0.538256,-0.983095,1.289544,-0.110945,3.168492,5.911194,-3.537510,-0.379589,7.349461,1.423431,-6.575105,-5.805932,1.101781,-9.218325,6.242647,1.907878,-9.379085,1.145944,8.357762,5.256810,8.799249,6.827804,-2.093462,5.861006,-2.972094,7.628216,-0.395761,2.664229,-0.968555,5.432058,-4.371048,-3.724029,-3.230759,-2.727088,7.456439,-9.129484,-8.074926,-4.614256,4.842523,-9.660348,1.823404,-4.748214,-1.148520,0.361129,-8.194509,-6.893563,5.986959,0.092972,-4.839169,4.593312,4.008480,-3.521459,8.877057,-3.162114,-0.543805,-4.485109,-8.674403,-9.589457,9.254271,6.877051,-3.075341,-8.322975,-6.033972,0.700925,-1.516121,3.150589,-3.415464,7.630477,-9.404450,-6.146762,5.055156,-9.003694,-0.365899,-5.168640,-8.108246,4.584265,4.818487,-2.904560,5.898120,-4.275589,2.874436,9.448186,-4.361989,0.963050,9.008117,5.815395,7.405423,-4.737591,-8.836942,5.840087,7.549614,4.212714,-9.655619,-5.861565,2.444453,1.571027,-5.857832,-6.100479,-1.637750,-2.010282,-5.797072,-0.677064,8.710005,3.702605,9.157856,8.667265,8.704615,5.438435,-2.474398,2.451884,-9.976912,-5.467220,2.223209,8.682235,9.131754,3.090309,-4.603806,9.033232,0.697764,7.166898,6.932658,0.374151,-8.558953,-0.929298,-7.805993,-4.126669,0.480508,-7.076628,-3.898055,-3.220558,7.817962,9.468042,6.927557,0.653741,5.918866,3.645899,7.640649,3.493422,4.271098,5.163248,8.617506,-9.496808,-4.184617,8.607890,8.371572,-7.850139,-3.354607,-0.355870,-6.154126,-5.195875,-7.056686,-2.627520,-5.318874,1.428143,-1.498201,2.936892,4.882697,-0.251669,-3.312456,-9.026226,8.359017,-7.062942,-0.698193,8.227808,6.844834,-5.090903,2.347627,7.399522,-7.616926,3.797871,9.754987,-9.352479,-0.671990,3.264384,-0.040554,-3.029985,-7.085240,0.996339,4.659167,-6.114418,-5.451632,1.585126,1.784326,1.054692,2.928535,-3.435047,-9.977402,4.071787,0.213685,3.738230,-8.510774,2.895405,9.607781,1.347440,4.348888,9.395220,-8.552437,3.373608,0.098249,7.406124,7.693286,-3.095165,-9.079561,4.715708,-1.246531,-6.974586,-4.901230,8.515474,-3.124145,2.000595,-2.877590,-1.085117,0.934145,8.340209,-7.198574,1.919153,-1.729724,4.417697,-3.390308,8.241144,-8.128663,3.431838,3.502721,-0.811307,-1.676535,-2.749325,-7.268011], dtype = "float64")#candidate|6292|(429,)|const|float64
bop_6293 = relay.greater_equal(const_6278.astype('bool'), relay.reshape(const_6292.astype('bool'), relay.shape_of(const_6278))) # shape=(429,)
func_5603_call = mod.get_global_var('func_5603')
func_5604_call = mutated_mod.get_global_var('func_5604')
call_6299 = func_5603_call()
call_6300 = func_5603_call()
uop_6307 = relay.atan(call_6289.astype('float64')) # shape=(1, 126)
uop_6309 = relay.atan(call_6290.astype('float64')) # shape=(1, 126)
uop_6311 = relay.acos(uop_6307.astype('float64')) # shape=(1, 126)
uop_6313 = relay.acos(uop_6309.astype('float64')) # shape=(1, 126)
func_3338_call = mod.get_global_var('func_3338')
func_3340_call = mutated_mod.get_global_var('func_3340')
call_6316 = relay.TupleGetItem(func_3338_call(), 0)
call_6317 = relay.TupleGetItem(func_3340_call(), 0)
bop_6320 = relay.add(uop_6311.astype('uint32'), relay.reshape(call_6265.astype('uint32'), relay.shape_of(uop_6311))) # shape=(1, 126)
bop_6323 = relay.add(uop_6313.astype('uint32'), relay.reshape(call_6266.astype('uint32'), relay.shape_of(uop_6313))) # shape=(1, 126)
uop_6331 = relay.asinh(uop_6307.astype('float32')) # shape=(1, 126)
uop_6333 = relay.asinh(uop_6309.astype('float32')) # shape=(1, 126)
func_3500_call = mod.get_global_var('func_3500')
func_3502_call = mutated_mod.get_global_var('func_3502')
call_6345 = func_3500_call()
call_6346 = func_3500_call()
func_3150_call = mod.get_global_var('func_3150')
func_3153_call = mutated_mod.get_global_var('func_3153')
var_6349 = relay.var("var_6349", dtype = "uint64", shape = (44,))#candidate|6349|(44,)|var|uint64
call_6348 = func_3150_call(relay.reshape(var_6349.astype('uint64'), [44,]))
call_6350 = func_3150_call(relay.reshape(var_6349.astype('uint64'), [44,]))
uop_6352 = relay.atanh(uop_6311.astype('float64')) # shape=(1, 126)
uop_6354 = relay.atanh(uop_6313.astype('float64')) # shape=(1, 126)
bop_6357 = relay.floor_divide(uop_6352.astype('float64'), relay.reshape(bop_6320.astype('float64'), relay.shape_of(uop_6352))) # shape=(1, 126)
bop_6360 = relay.floor_divide(uop_6354.astype('float64'), relay.reshape(bop_6323.astype('float64'), relay.shape_of(uop_6354))) # shape=(1, 126)
output = relay.Tuple([call_6277,bop_6285,bop_6293,call_6299,call_6316,uop_6331,call_6345,call_6348,var_6349,bop_6357,])
output2 = relay.Tuple([call_6279,bop_6288,bop_6293,call_6300,call_6317,uop_6333,call_6346,call_6350,var_6349,bop_6360,])
func_6361 = relay.Function([var_6349,], output)
mod['func_6361'] = func_6361
mod = relay.transform.InferType()(mod)
mutated_mod['func_6361'] = func_6361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6362 = relay.var("var_6362", dtype = "uint64", shape = (44,))#candidate|6362|(44,)|var|uint64
func_6361_call = mutated_mod.get_global_var('func_6361')
call_6363 = func_6361_call(var_6362)
output = call_6363
func_6364 = relay.Function([var_6362], output)
mutated_mod['func_6364'] = func_6364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_6376 = func_5037_call()
call_6377 = func_5037_call()
output = call_6376
output2 = call_6377
func_6384 = relay.Function([], output)
mod['func_6384'] = func_6384
mod = relay.transform.InferType()(mod)
mutated_mod['func_6384'] = func_6384
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6384_call = mutated_mod.get_global_var('func_6384')
call_6385 = func_6384_call()
output = call_6385
func_6386 = relay.Function([], output)
mutated_mod['func_6386'] = func_6386
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3877_call = mod.get_global_var('func_3877')
func_3879_call = mutated_mod.get_global_var('func_3879')
call_6412 = func_3877_call()
call_6413 = func_3877_call()
output = call_6412
output2 = call_6413
func_6422 = relay.Function([], output)
mod['func_6422'] = func_6422
mod = relay.transform.InferType()(mod)
output = func_6422()
func_6423 = relay.Function([], output)
mutated_mod['func_6423'] = func_6423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_6480 = relay.TupleGetItem(func_3038_call(), 0)
call_6481 = relay.TupleGetItem(func_3039_call(), 0)
func_4643_call = mod.get_global_var('func_4643')
func_4644_call = mutated_mod.get_global_var('func_4644')
call_6488 = relay.TupleGetItem(func_4643_call(), 1)
call_6489 = relay.TupleGetItem(func_4644_call(), 1)
func_4374_call = mod.get_global_var('func_4374')
func_4378_call = mutated_mod.get_global_var('func_4378')
const_6503 = relay.const([[-6,-3,1,6,-3,3,6,-6],[-8,3,5,-6,1,-5,7,-9],[-4,9,-2,-7,-8,8,4,10],[-4,-5,-3,5,-1,1,10,1],[2,-1,-7,-1,1,-8,-3,7],[3,8,3,8,-6,1,10,-3],[-4,-7,5,5,-7,-8,-1,-8],[7,8,3,-3,8,-6,8,1],[6,-2,-7,-6,7,-7,-1,3],[-2,7,1,-4,-3,-5,4,2],[7,-10,10,1,9,8,-2,7],[5,1,3,-3,10,7,8,-3],[-5,1,8,-3,-9,-9,5,7],[10,-6,-5,-9,-8,8,-8,-3],[3,-6,-6,-2,-1,8,-8,6],[4,3,10,6,-10,6,-3,-9],[-2,9,-6,-5,-1,5,-9,-9],[2,4,-4,1,-3,10,-7,4],[5,-9,2,10,-6,-5,3,-10],[4,8,-4,-1,-8,-7,-3,-6],[2,-9,-9,10,-3,2,8,10],[6,1,-9,-9,7,-1,6,-9],[5,5,-9,1,1,-8,5,-3],[8,-1,8,3,7,-6,-3,3],[6,-6,-4,-7,-10,6,-6,6],[-4,-10,-8,-10,9,8,-2,4],[9,-3,6,-2,6,2,8,6],[5,-6,1,6,1,-1,-4,-1],[4,-8,5,-5,-9,-4,4,-8],[-6,-10,10,6,-3,-4,-2,2],[10,-4,-1,7,7,6,9,-2],[8,-3,-9,10,6,9,-9,-3],[2,-6,-10,2,2,1,-1,8],[7,8,8,8,-1,1,-9,-3],[-4,5,-9,3,6,-5,-7,6],[6,-9,-3,-10,5,6,-8,6],[-7,-7,-1,-10,-4,-2,9,4],[2,-10,2,9,1,-3,6,10],[2,8,8,8,2,-3,-10,6],[10,-8,6,-10,-5,-6,4,-2],[5,-10,9,-5,10,2,4,-3],[-4,9,-8,-6,3,4,8,-4],[8,-6,-3,-10,8,2,-1,-8],[-6,4,-9,-5,-2,2,4,3],[-9,1,-9,-5,-2,-8,-4,8],[7,-1,4,-9,-6,-6,-6,-6],[-9,8,-5,-2,-4,10,9,5],[1,2,-6,2,1,-6,-1,5]], dtype = "uint16")#candidate|6503|(48, 8)|const|uint16
const_6504 = relay.const([-6,8,3,-10,-9,10,5,-4,7,-8,-3,10,-10,-2,-9,-8,-5,-4,-10,1,5,5,-5,7,-8,2,5,-1,-3,10,5,-8,8,-9,6,8,-3,1,2,1,-2,1,7,2,6,1,-2,2,-10,-8,4,10,-1,-5,-9,-2,9,10,-3,5,6,1,-6,-10,5,-7,-8,-6,7,1,-10,-7,-4,7,1,9,10,7,-4,-6,-7,-9,7,-3,1,-10,-6,-9,6,-10,-10,4,2,7,8,-6,-6,3,4,-8,9,3,-7,-8,10,7,8,9,-3,-5,-10,8,-7,9,-7,6,7,5,-6,8,-2,6,-6,-1,3,-2,8,9,2,-9,-7,9,6,1,-7,-8,3,9,10,10,6,6,-3,9,5,6,-3,-7,7,3,-4,-2,-4,8,-3,-9,2,2,2,-1,-1,8,-2,-5,2,4,8,5,-9,7,-5,2,4,5,9,-1,-4,6,-4,4,8,4,-4,-7,-5,-8,3,-8,-5,-2,-8,5,-4,8,2,5,-10,4,-9,-8,7,3,-5,6,-3,-4,-1,-2,10,2,10,1,-8,5,-6,-10,-8,-5,-3,4,-1,-6,1,-7,8,2,9,-9,8,2,6,1,6,-10,8,6,4,10,-2,6], dtype = "int8")#candidate|6504|(240,)|const|int8
var_6505 = relay.var("var_6505", dtype = "bool", shape = (1008,))#candidate|6505|(1008,)|var|bool
call_6502 = relay.TupleGetItem(func_4374_call(relay.reshape(const_6503.astype('uint16'), [192, 2]), relay.reshape(const_6504.astype('int8'), [240,]), relay.reshape(var_6505.astype('bool'), [8, 126]), ), 7)
call_6506 = relay.TupleGetItem(func_4378_call(relay.reshape(const_6503.astype('uint16'), [192, 2]), relay.reshape(const_6504.astype('int8'), [240,]), relay.reshape(var_6505.astype('bool'), [8, 126]), ), 7)
func_5987_call = mod.get_global_var('func_5987')
func_5988_call = mutated_mod.get_global_var('func_5988')
call_6511 = relay.TupleGetItem(func_5987_call(), 1)
call_6512 = relay.TupleGetItem(func_5988_call(), 1)
var_6519 = relay.var("var_6519", dtype = "bool", shape = (1008,))#candidate|6519|(1008,)|var|bool
bop_6520 = relay.logical_and(var_6505.astype('bool'), relay.reshape(var_6519.astype('bool'), relay.shape_of(var_6505))) # shape=(1008,)
func_3150_call = mod.get_global_var('func_3150')
func_3153_call = mutated_mod.get_global_var('func_3153')
call_6543 = func_3150_call(relay.reshape(call_6480.astype('uint64'), [44,]))
call_6544 = func_3150_call(relay.reshape(call_6480.astype('uint64'), [44,]))
func_5351_call = mod.get_global_var('func_5351')
func_5352_call = mutated_mod.get_global_var('func_5352')
call_6551 = func_5351_call()
call_6552 = func_5351_call()
func_3395_call = mod.get_global_var('func_3395')
func_3398_call = mutated_mod.get_global_var('func_3398')
call_6554 = relay.TupleGetItem(func_3395_call(relay.reshape(call_6543.astype('uint64'), [44,]), relay.reshape(call_6551.astype('float64'), [126,]), ), 0)
call_6555 = relay.TupleGetItem(func_3398_call(relay.reshape(call_6543.astype('uint64'), [44,]), relay.reshape(call_6551.astype('float64'), [126,]), ), 0)
output = relay.Tuple([call_6480,call_6488,call_6502,const_6503,const_6504,call_6511,bop_6520,call_6543,call_6551,call_6554,])
output2 = relay.Tuple([call_6481,call_6489,call_6506,const_6503,const_6504,call_6512,bop_6520,call_6544,call_6552,call_6555,])
func_6556 = relay.Function([var_6505,var_6519,], output)
mod['func_6556'] = func_6556
mod = relay.transform.InferType()(mod)
mutated_mod['func_6556'] = func_6556
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6556_call = mutated_mod.get_global_var('func_6556')
var_6558 = relay.var("var_6558", dtype = "bool", shape = (1008,))#candidate|6558|(1008,)|var|bool
var_6559 = relay.var("var_6559", dtype = "bool", shape = (1008,))#candidate|6559|(1008,)|var|bool
call_6557 = func_6556_call(var_6558,var_6559,)
output = call_6557
func_6560 = relay.Function([var_6558,var_6559,], output)
mutated_mod['func_6560'] = func_6560
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4809_call = mod.get_global_var('func_4809')
func_4810_call = mutated_mod.get_global_var('func_4810')
call_6584 = func_4809_call()
call_6585 = func_4809_call()
const_6586 = relay.const([[[10,-2,7,-6,-3,3,-8,-4,-5,7,8],[-6,3,10,8,4,5,-6,7,9,-6,-2]],[[1,5,1,-5,-3,7,-7,-1,-10,5,-2],[8,-3,-9,-1,5,9,7,3,8,-3,1]]], dtype = "uint64")#candidate|6586|(2, 2, 11)|const|uint64
bop_6587 = relay.logical_xor(call_6584.astype('int16'), relay.reshape(const_6586.astype('int16'), relay.shape_of(call_6584))) # shape=(2, 2, 11)
bop_6590 = relay.logical_xor(call_6585.astype('int16'), relay.reshape(const_6586.astype('int16'), relay.shape_of(call_6585))) # shape=(2, 2, 11)
bop_6607 = relay.equal(bop_6587.astype('bool'), relay.reshape(const_6586.astype('bool'), relay.shape_of(bop_6587))) # shape=(2, 2, 11)
bop_6610 = relay.equal(bop_6590.astype('bool'), relay.reshape(const_6586.astype('bool'), relay.shape_of(bop_6590))) # shape=(2, 2, 11)
output = bop_6607
output2 = bop_6610
func_6616 = relay.Function([], output)
mod['func_6616'] = func_6616
mod = relay.transform.InferType()(mod)
mutated_mod['func_6616'] = func_6616
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6616_call = mutated_mod.get_global_var('func_6616')
call_6617 = func_6616_call()
output = call_6617
func_6618 = relay.Function([], output)
mutated_mod['func_6618'] = func_6618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3038_call = mod.get_global_var('func_3038')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_6621 = relay.TupleGetItem(func_3038_call(), 0)
call_6622 = relay.TupleGetItem(func_3039_call(), 0)
output = call_6621
output2 = call_6622
func_6634 = relay.Function([], output)
mod['func_6634'] = func_6634
mod = relay.transform.InferType()(mod)
mutated_mod['func_6634'] = func_6634
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6634_call = mutated_mod.get_global_var('func_6634')
call_6635 = func_6634_call()
output = call_6635
func_6636 = relay.Function([], output)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4163_call = mod.get_global_var('func_4163')
func_4165_call = mutated_mod.get_global_var('func_4165')
call_6654 = relay.TupleGetItem(func_4163_call(), 0)
call_6655 = relay.TupleGetItem(func_4165_call(), 0)
output = call_6654
output2 = call_6655
func_6662 = relay.Function([], output)
mod['func_6662'] = func_6662
mod = relay.transform.InferType()(mod)
output = func_6662()
func_6663 = relay.Function([], output)
mutated_mod['func_6663'] = func_6663
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3010_call = mod.get_global_var('func_3010')
func_3012_call = mutated_mod.get_global_var('func_3012')
call_6743 = relay.TupleGetItem(func_3010_call(), 1)
call_6744 = relay.TupleGetItem(func_3012_call(), 1)
output = relay.Tuple([call_6743,])
output2 = relay.Tuple([call_6744,])
func_6755 = relay.Function([], output)
mod['func_6755'] = func_6755
mod = relay.transform.InferType()(mod)
mutated_mod['func_6755'] = func_6755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6755_call = mutated_mod.get_global_var('func_6755')
call_6756 = func_6755_call()
output = call_6756
func_6757 = relay.Function([], output)
mutated_mod['func_6757'] = func_6757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5572_call = mod.get_global_var('func_5572')
func_5573_call = mutated_mod.get_global_var('func_5573')
call_6773 = relay.TupleGetItem(func_5572_call(), 2)
call_6774 = relay.TupleGetItem(func_5573_call(), 2)
output = relay.Tuple([call_6773,])
output2 = relay.Tuple([call_6774,])
func_6804 = relay.Function([], output)
mod['func_6804'] = func_6804
mod = relay.transform.InferType()(mod)
output = func_6804()
func_6805 = relay.Function([], output)
mutated_mod['func_6805'] = func_6805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3667_call = mod.get_global_var('func_3667')
func_3669_call = mutated_mod.get_global_var('func_3669')
call_6826 = relay.TupleGetItem(func_3667_call(), 0)
call_6827 = relay.TupleGetItem(func_3669_call(), 0)
uop_6844 = relay.cosh(call_6826.astype('float32')) # shape=(1, 126)
uop_6846 = relay.cosh(call_6827.astype('float32')) # shape=(1, 126)
output = relay.Tuple([uop_6844,])
output2 = relay.Tuple([uop_6846,])
func_6853 = relay.Function([], output)
mod['func_6853'] = func_6853
mod = relay.transform.InferType()(mod)
output = func_6853()
func_6854 = relay.Function([], output)
mutated_mod['func_6854'] = func_6854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5037_call = mod.get_global_var('func_5037')
func_5039_call = mutated_mod.get_global_var('func_5039')
call_6884 = func_5037_call()
call_6885 = func_5037_call()
func_2916_call = mod.get_global_var('func_2916')
func_2921_call = mutated_mod.get_global_var('func_2921')
const_6896 = relay.const([-9.574608,7.782042,-3.319971,6.497871,0.702072,-9.472807,4.010485,7.685810,3.211620,-2.704021,-4.271745,-9.854656,8.342440,5.267932,-7.009192,-7.690620,-8.046189,9.161934,-6.001357,-4.660909,-5.845638,3.664196,-8.668869,-0.454395,-7.841310,-3.526149,-0.664535,9.306233,2.816948,-9.286539,-1.707129,-5.792409,7.542844,2.714301,-5.192987,4.411956,-7.916588,4.218858,0.856284,4.852255,-5.201421,-1.510077,-0.423003,4.214088,6.654038,0.684110,-8.791058,-3.834033,-0.862285,1.247985,0.572669,6.113868,-5.136068,-5.944982,-6.528672,1.275442,7.970599,1.716307,6.549509,2.052985,6.071151,-7.962029,7.224174,2.538857,-0.052027,-4.082547,6.472145,-1.423635,-2.230517,-5.897985,-2.789985,-9.362326,5.751965,2.632527,-8.843821,4.249807,-3.681061,7.545060,9.082110,8.238253,-6.855562,0.346335,9.161282,7.654816,4.036122,-2.333950,7.324652,0.411334,-6.342566,5.451679,-8.879736,-8.500621,6.315881,-0.505519,-5.975997,-0.112345,9.476657,6.781555,1.512588,1.967409,-1.259561,-3.187605,-0.646478,-0.752364,2.798215,7.824684,2.052882,-1.098112,8.538385,5.296128,-7.891549,-2.027604,5.596115,-9.871126,-7.058816,1.018219,3.024941,-1.154345,-2.055286,-0.132107,5.339321,3.545363,-5.387795,8.127994,-4.650154,7.561786,-4.215454,-4.945012,5.788178,7.021764,-6.065599,-9.923268,-1.755874,9.033667,-1.216912,-0.190007,0.246094,-4.660840,6.388822,-9.931857,-8.755193,-7.380676,0.554928,-4.819838,8.328559,6.583361,3.468382,0.659170,-3.836392,-6.147363,4.383530,-9.318770,-7.859826,-5.247507,-6.450396,9.298036,-7.073082,-6.467959,-3.040221,7.876668,-4.739586,-2.514611,-9.498483,1.015586,-1.907489,6.326317,0.294680,3.881585,-2.307009,3.860227,-4.682760,7.994077,4.167468,-3.289421,2.670440,3.758898,-2.811424,2.430910,-0.635143,-9.884861,-7.919435,-4.692852,0.917380,7.281043,8.136718,7.654472,9.126197,-9.464551,-1.891210,-0.266157,-9.250841,0.404004,4.405591,-3.502574,2.160618,4.393568,-0.990745,4.059576,2.695424,-3.432104,-3.894702,-6.627372,-8.917621,-8.259403,1.291618,-1.789403,-8.774107,1.438377,-0.468886,2.218398,-9.623753,1.682665,-4.841171,-8.147353,9.688628,-5.937907,-3.594965,6.646480,-7.222252,1.272962,2.542885,8.913645,7.406167,6.954106,-2.232302,-3.806326,8.932821,-8.057156,-9.098872,7.997497,8.300645,6.820904,-6.629143,-3.000701,-9.556906,6.493068,-4.313739,-1.540549,3.887166,1.608571,-7.647518,-0.984127,-7.159484,-9.927263,1.156165,-9.187582,2.775321,5.538231,5.878505,-3.554256,7.927675,0.387000,9.764172,-0.879162,0.029627,-7.657806,0.835081,-9.543605,2.077444,-3.540444,-6.379324,8.171265,2.798348,-1.831506,6.553682,-4.403832,-1.017362,-9.585375,3.951914,-7.661518,-7.967010,8.226951,9.693119,7.600088,-7.746540,7.299215,1.809601,-7.755266,6.990504,4.429005,-8.767803,-0.353741,3.327524,-5.053079,5.743642,9.799419,4.817963,0.358993,-0.209772,-2.819640,-4.422721,-5.315135,-2.986338,-4.787966,4.094106,-3.225625,-1.177580,-0.234184,3.618378,-2.570479,9.790461,0.871875,-4.435193,3.194976,8.111649,2.445018,5.524306,1.385710,7.230503,-5.593886,8.261668,-3.960462,1.596961,9.576611,9.007962,9.512651,-9.953693,0.554452,3.467737,9.137668,-2.213519,-3.477559,-9.891119,-5.421963,-7.727811,-6.528348,5.660222,4.685133,3.919808,-5.652060,-9.586857,5.286568,-4.687936,-7.245075,1.458731,-9.488619,-8.688988,-1.015717,3.180441,-8.785516,3.106138,7.973569,3.715304,3.101050,-7.356844,3.155226,3.684507,3.212166,-0.315710,5.613165,4.065329,5.812100,-1.840492,2.129997,-1.277818,2.657004,-8.048764,9.018694,4.535123,4.283796,-6.666125,1.898278,9.255403,8.702144,-6.560932,-5.640863,-2.244060,1.603109,5.617489,-7.137077,1.419357,7.631899,3.226214,9.945063,0.570764,-8.616466,-7.379270,8.826458,-7.106932,5.320435,9.403863,-7.903653,2.216230,-1.769642], dtype = "float64")#candidate|6896|(384,)|const|float64
var_6897 = relay.var("var_6897", dtype = "float32", shape = (11,))#candidate|6897|(11,)|var|float32
const_6898 = relay.const([0.369369,0.837535,-3.996795,-3.614980,5.927855,-4.592936,-1.053777,-2.690353,3.655150,7.447020,1.877646,4.915298,5.709449,7.990460,7.323194,9.030223,4.759188,3.773166,-2.854301,-1.948415,6.799361,4.208405,-0.425397,4.782658,-9.743469,6.252648,7.561299,-2.999346,0.154476,0.497354,0.027536,7.393950,2.787672,-2.209232,-2.946526,-8.279977,5.651557,4.459352,4.453531,-6.804367,1.160704,1.337553,-8.426938,7.203535,3.170183,7.992809,0.685694,-3.314676,0.510855,-5.264985,5.853339,-8.155600,-6.272585,0.273853,-9.045193,-3.501652,9.257181,-6.854128,7.406657,8.367756,-1.193036,1.181926,6.243368,7.986114,-9.644480,-8.173850,-6.989802,-8.443176,-6.740739,-4.174046,3.025088,-3.476007,0.803525,8.132575,3.800348,9.977581,3.254962,1.473676,-9.543869,8.791938,5.427330,1.470848,-0.966331,-9.381155,3.436539,-9.708324,4.695480,3.188740,7.278113,3.009609,1.502652,6.253246,8.402980,8.809520,6.278017,-6.972311,-4.715669,-4.175934,-9.229897,5.497383,2.280053,-9.962018,-1.670393,5.303418,-0.573346,-7.064684,-4.040327,-6.174092,2.843706,8.964872,9.108123,2.068307,6.221612,-6.888322,-5.164551,5.208628,5.905303,0.749954,8.382501,-9.357771,0.493617,6.399376,-9.937667,-3.967709,0.974028,-9.807921,1.575146,-5.492867,4.288882,-7.839094,-0.323763,6.197405,-4.426897,-7.774404,-6.079170,8.028982,8.404843,5.256824,3.543803,8.208901,6.080622,4.265990,1.441398,-8.416447,-0.660727,1.092932,-0.105866,3.856427,7.912587,0.533032,-4.947268,6.911158,3.381669,4.122736,-3.688874,-2.681612,-1.581533,8.511138,2.739152,-4.748893,-4.996889,8.151770,-1.958574,0.891321,-0.431783,2.937225,-6.015699,-1.804553,4.585596,-9.581701,5.423553,-2.667223,-3.007563,1.521788,8.908345,8.678582,5.102652,-2.007545,9.902560,9.669493,-2.103964,-8.806063,-5.313142,4.553857,-9.709511,0.114272,-7.229304,5.594518,2.999440,-7.413709,-1.770786,4.498484,-2.720710,-8.937990,1.870597,1.636686,-5.899272,-4.034902,5.996560,6.301685,8.519142,4.585386,-6.031842,-1.405630,0.468686,-3.179820,9.560858,-8.194013,0.264478,7.096350,-1.684996,3.488223,2.921872,0.651959,1.811347,-8.028566,-2.805093,-9.871237,6.636820,-6.440426,4.961146,-3.662159,-8.674899,5.811960,3.790119,7.613799,6.999358,8.339581,-3.705152,7.741058,0.916640,2.334643,3.807859,-6.660232,-6.343165,-7.707660,6.019757,-1.314630,4.008619,0.631074,2.076343,-5.395944,2.214790,5.141405,8.452744,8.949434,-2.121387,-0.860556,-2.119728,-2.710495,0.993510,7.579996,-7.175973,9.684097,1.342433,-0.533175,4.994122,6.163669,-8.424601,-8.942585,-2.367684,-2.112192,-7.154405,-5.555518,2.953538,-0.086215,3.317178,9.821018,0.695410,7.893694,-5.525435,1.062255,3.242174,-9.742704,4.613241,1.127990,6.099959,8.297338,-8.538358,-6.329790,-5.110766,-0.696202,-1.048549,1.990300,-7.366640,-5.108708,3.508082,-0.119204,9.154079,-3.475739,-4.584068,-7.319321,-7.005582,7.715194,6.772415,-3.804111,-0.314069,-5.151500,1.158522,5.814030,-4.636215,-2.881896,8.417581,-8.076194,2.311062,-7.594675,-2.002216,5.737400,-6.116656,1.979584,2.202679,5.815319,4.553017,-8.415953,-1.520802,-7.643468,-4.015601,-0.799075,-1.196759,-3.474907,6.691630,0.307716,3.119226,-2.734046,8.332076,2.609607,-9.122628,5.599904,-9.143027,-7.447258,0.396357,-8.321299,1.984265,4.219266,1.340304,1.065529,-5.269057,6.524082,-2.923040,7.343903,2.624310,-6.834719,-9.764769,5.909237,7.066201,4.832747,2.994997,-2.638974,-9.926165,-8.245812,4.976936,-0.613087,-4.139599,3.764587,-6.747761,-2.235521,-8.603837,7.267703,-0.276785,0.543367,-3.437713,-3.967285,-9.094462,-3.805109,2.955902,3.477179,-2.938322,-2.562850,1.878821,2.900223,7.535100,9.661428,-0.715969,-6.151285,-5.001750,5.033843,-9.829159,-5.702385,-7.151360,4.272449,5.219607,8.376303,-5.147316,-2.146803,4.635506,2.486203,0.081744,-0.277378,8.924483,8.318672,5.176398,-2.747165,-8.408693,-9.879391,3.908354,-2.961022,-7.198337,1.576840,-2.370765,-0.281808,5.517243,-3.596027,9.126970,3.584354,2.595178,-7.544570,6.298416,-2.210634,2.063072,-2.576816,-9.482675,5.193616,-3.813907,4.315834,-0.594597,1.713061,-2.479752,-8.963380,-4.653550,-3.285378,-6.921191,-4.379494,-4.842677,-6.095838,-0.332369,-8.096675,8.145363,6.545544,-4.611982,-7.298119,5.454909,7.335870,4.804715,6.976926,8.706967,8.522869,-0.939095,9.451446,-6.135255,-5.526821,-8.613282,7.755728,-2.743823,-7.603973,-2.961856,8.752818,-9.965806,4.358769,-5.063500,5.475132,-6.435227,-3.088689,1.632660,3.468622,6.869644,-0.163134,5.696894,2.633119,-0.040619,-6.596033,2.084888,-4.097072,-0.687804,1.764155,-6.630033,-9.018164,-7.192059,3.045221,-0.536735,1.866961,-1.676049,-3.360843,-6.251380,8.645203,4.924502,1.138806,9.311110,-5.794978,1.578238,5.172180,-2.970644,-0.625221,-2.374160,-3.489177,6.562202,-5.414547,9.586206,7.387843,-2.290683,2.495318,-5.187131,-0.106073,-4.551398,-9.548868,9.946742,-7.112096,9.448658,-3.242641,-1.217283,8.512764,-7.711267,-8.858649,-7.234563,6.405713,-9.200952,-3.662547,7.036915,7.640616,4.335470,4.398159,7.729276,-7.846744,9.856533,-3.876907,-3.840381,6.270380,6.668367,-0.155449,7.047871,-5.882092,-8.367779,-9.186269,-2.877299,-3.728974,4.853312,-2.949978,6.837071,-5.743306,1.243935,-1.329259,-4.294112,-3.039358,0.061804,2.842972,9.000142,6.561781,-5.618231,3.827388,1.914634,-9.600127,-0.677840,4.011770,5.763921,-9.734706,-2.817454,-8.071824,-3.740763,-2.142677,-1.371523,-5.281063,5.866082,3.363908,2.230741,-9.346927,-9.555003,-7.601057,6.948583,-4.800115,7.325194,3.463579,-4.275648,-9.067582,3.736021,-8.906959,-7.035167,4.247366,-6.467464,2.609645,3.337395,-0.607393,-1.569320,-9.769743,-6.861703,-0.797361,7.802745,4.449297,-6.805756,-5.056260,-5.610792,9.121651,2.486782,6.950022,3.869501,-0.988432,-0.481955,5.082201,9.162732,8.684796,-0.996845,3.620994,8.805058,2.310842,-6.524812,7.744764,7.572195,2.445098,7.306051,-5.041869,9.877690,-9.314484,-9.959757,-8.124255,7.107707,9.331899,3.072760,-1.874966,-2.543360,-0.930929,7.013718,0.094910,-4.702859,-8.048857,0.270618,4.603794,7.642935,7.803152,4.720722,7.800218,1.550554,-2.890741,2.447597,9.348286,8.028902,-0.340453,-5.407689,7.719835,-8.089951,-0.907821,-5.855413,-4.153335,8.646169,4.279159,0.740920,-5.391649,-7.956743,9.227275,6.551783,8.900038,1.368134,5.520202,3.534018,-3.238003,-4.726339,-9.775886,-7.554526,-4.737513,-5.655861,-1.492925,-6.572107,-0.385780,-5.683395,-5.927200,-7.901357,-6.368961,6.721916,8.195949,-7.546652,-7.325437,8.890447,3.151556,0.925967,5.371784,-7.604518,1.834913,-6.477053,8.721039,-0.453506,-5.430047,5.943422,-8.373414,5.942363,7.661817,7.360755,-3.076744,-0.907463,2.971536,-6.814229,7.471073,-1.744941,9.103078,-7.584641,5.728228,3.186515,-9.064242,-4.433058,9.324794,-0.266733,3.851475,3.949311,-9.346608,-2.120916,1.388072,0.233555,9.279457,-3.208476,-6.749053,1.486795,9.674849,-9.538797,7.273728,-7.569398,-3.743751,2.718102,-9.423047,8.637777,3.422647,-6.133009,-5.567152,3.430037,-0.130753,2.983804,1.611904,-3.285301,0.824464,-9.515689,-5.365509,8.264222,2.081691,-3.478890,2.901200,0.312271,3.367669,-0.411490,0.538817,0.396446,9.479386,-9.772738,2.940034,6.307913,0.644634,5.033189,-2.095143,-3.093859,-1.868847,5.338530,4.745742,-3.575514,1.735908,-4.698225,-1.267491,-9.561812,-6.381089,-3.279419,4.149120,-3.445655,2.618980,-8.507667,0.650713,-0.057317,-6.400696,0.830375,-9.640774,-2.339003,-3.596092,-9.845254,2.628324,-2.505062,3.085673,3.389001,-9.525962,-7.221396,-4.162725,1.383773,7.905373,4.851060,-5.698512,1.152731,-9.437652,-4.188809,6.266930,7.112133,8.876855,-6.472351,9.325702,4.789515,-4.279158,1.737618,1.879504,-6.321987,-0.691818,-1.698348,-9.656296,8.158594,7.831213,-5.258679,-3.040073,5.860828,6.206852,9.379466,-9.733378,5.200055,-1.074533,5.579195,5.017022,-2.368517,8.413975,-6.022556,9.764504,-1.897217,5.975087,5.825006,-6.125149,1.640062,-4.797139,-7.285745,-9.092907,4.174726,5.010908,-8.780251,-2.870202], dtype = "float64")#candidate|6898|(810,)|const|float64
call_6895 = relay.TupleGetItem(func_2916_call(relay.reshape(const_6896.astype('float64'), [1, 384]), relay.reshape(var_6897.astype('float32'), [11,]), relay.reshape(const_6898.astype('float64'), [9, 9, 10]), ), 8)
call_6899 = relay.TupleGetItem(func_2921_call(relay.reshape(const_6896.astype('float64'), [1, 384]), relay.reshape(var_6897.astype('float32'), [11,]), relay.reshape(const_6898.astype('float64'), [9, 9, 10]), ), 8)
output = relay.Tuple([call_6884,call_6895,const_6896,var_6897,const_6898,])
output2 = relay.Tuple([call_6885,call_6899,const_6896,var_6897,const_6898,])
func_6919 = relay.Function([var_6897,], output)
mod['func_6919'] = func_6919
mod = relay.transform.InferType()(mod)
mutated_mod['func_6919'] = func_6919
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6920 = relay.var("var_6920", dtype = "float32", shape = (11,))#candidate|6920|(11,)|var|float32
func_6919_call = mutated_mod.get_global_var('func_6919')
call_6921 = func_6919_call(var_6920)
output = call_6921
func_6922 = relay.Function([var_6920], output)
mutated_mod['func_6922'] = func_6922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4019_call = mod.get_global_var('func_4019')
func_4021_call = mutated_mod.get_global_var('func_4021')
call_6977 = func_4019_call()
call_6978 = func_4019_call()
var_6982 = relay.var("var_6982", dtype = "float32", shape = (4, 126))#candidate|6982|(4, 126)|var|float32
bop_6983 = relay.maximum(call_6977.astype('uint64'), var_6982.astype('uint64')) # shape=(4, 126)
bop_6986 = relay.maximum(call_6978.astype('uint64'), var_6982.astype('uint64')) # shape=(4, 126)
output = relay.Tuple([bop_6983,])
output2 = relay.Tuple([bop_6986,])
func_6989 = relay.Function([var_6982,], output)
mod['func_6989'] = func_6989
mod = relay.transform.InferType()(mod)
mutated_mod['func_6989'] = func_6989
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6990 = relay.var("var_6990", dtype = "float32", shape = (4, 126))#candidate|6990|(4, 126)|var|float32
func_6989_call = mutated_mod.get_global_var('func_6989')
call_6991 = func_6989_call(var_6990)
output = call_6991
func_6992 = relay.Function([var_6990], output)
mutated_mod['func_6992'] = func_6992
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7015 = relay.var("var_7015", dtype = "float32", shape = (2, 13, 9))#candidate|7015|(2, 13, 9)|var|float32
uop_7016 = relay.acosh(var_7015.astype('float32')) # shape=(2, 13, 9)
output = relay.Tuple([uop_7016,])
output2 = relay.Tuple([uop_7016,])
F = relay.Function([var_7015,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7015,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

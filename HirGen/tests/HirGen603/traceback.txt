==========mod==========
#[version = "0.0.5"]
def @func_10846(%var_10835: Tensor[(7, 3, 9), float64]) -> (Tensor[(7, 3, 9), float64],) {
  %0 = cast(%var_10835, dtype="float64") /* ty=Tensor[(7, 3, 9), float64] */;
  %1 = asinh(%0) /* ty=Tensor[(7, 3, 9), float64] */;
  (%1,)
}

def @func_15439() -> Tensor[(4, 60), float32] {
  %2 = @func_8579() /* ty=(Tensor[(4, 60), float32], Tensor[(4, 60), float64]) */;
  %2.0
}

def @func_4501(%var_4468: Tensor[(10, 10, 4), int64]) -> (Tensor[(2, 10, 2), float64], Tensor[(10, 10, 4), uint16], Tensor[(10, 10, 4), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %3 = @func_3767() /* ty=(Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) */;
  %4 = @func_2892() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %5 = %4.1;
  %6 = cast(%var_4468, dtype="uint16") /* ty=Tensor[(10, 10, 4), uint16] */;
  %7 = shape_of(%5, dtype="int32") /* ty=Tensor[(3), int32] */;
  %8 = cast(%5, dtype="uint16") /* ty=Tensor[(10, 10, 4), uint16] */;
  %9 = dyn.reshape(%6, %7, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %10 = cast(%var_4468, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %11 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %12 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %13 = %3.2;
  %14 = left_shift(%8, %9) /* ty=Tensor[(10, 10, 4), uint16] */;
  %15 = sigmoid(%10) /* ty=Tensor[(10, 10, 4), float32] */;
  %16 = %11.0;
  %17 = %12.0;
  (%13, %14, %15, %16, %17)
}

def @func_12639() -> Tensor[(2, 10, 2), float64] {
  %18 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %18.0
}

def @func_8025() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %19 = @func_5304() /* ty=Tensor[(2, 10, 2), float32] */;
  %20 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
  %21 = @func_4903() /* ty=Tensor[(2, 10, 2), float32] */;
  (%19, %20, %21)
}

def @func_11161() -> (Tensor[(4, 60), float64],) {
  %22 = @func_6879() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) */;
  %23 = %22.2;
  (%23,)
}

def @func_3145() -> Tensor[(2, 10, 2), float32] {
  @func_1557() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_9211() -> Tensor[(2, 10, 2), float32] {
  @func_5844() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_5952(%var_5905: Tensor[(2016), uint64], %var_5927: Tensor[(28), float32], %var_5929: Tensor[(1, 16), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), bool], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(32, 2), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(1, 16), float64], Tensor[(2, 10, 2), float32]) {
  %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(168), uint64] */, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %25 = cast(%var_5905, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %26 = cast(%var_5905, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %27 = reshape(%24, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
  %28 = reshape(%25, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %29 = reshape(%26, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %30 = @func_801(%27, %28, %29) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
  %31 = cast(%var_5927, dtype="float32") /* ty=Tensor[(28), float32] */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %33 = cast(%var_5929, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
  %34 = reshape(%31, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %35 = reshape(%32, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
  %36 = reshape(%33, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %37 = @func_3420(%34, %35, %36) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
  %38 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %39 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
  %40 = %30.1;
  %41 = %37.3;
  %42 = %38.0;
  (%39, %40, meta[relay.Constant][0] /* ty=Tensor[(168), uint64] */, %var_5905, %41, %var_5927, meta[relay.Constant][1] /* ty=Tensor[(196), float32] */, %var_5929, %42)
}

def @func_12959() -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) {
  %43 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
  %44 = @func_10594() /* ty=Tensor[(2, 10, 2), float32] */;
  (%43, %44)
}

def @func_2684() -> Tensor[(2, 10, 2), int32] {
  %45 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %45.0
}

def @func_13343(%var_13335: Tensor[(400), float32]) -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) {
  %46 = cast(%var_13335, dtype="float32") /* ty=Tensor[(400), float32] */;
  %47 = reshape(%46, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %48 = @func_4435(%47) /* ty=(Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) */;
  %49 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
  %50 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  %51 = %48.0;
  (%49, %50, %51, %var_13335)
}

def @func_13728(%var_13712: Tensor[(55, 15), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(630), int16], int16, Tensor[(2, 10, 2), float64], Tensor[(825), uint8], Tensor[(55, 15), float64], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64]) {
  %52 = @func_9495() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %53 = cast(meta[relay.Constant][2] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %54 = reshape(%53, newshape=[]) /* ty=int16 */;
  %55 = @func_12460(%54) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(14, 9, 5), bool], int16, Tensor[(630), int16]) */;
  %56 = %52.0;
  %57 = cast(%56, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %58 = reshape(%57, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %59 = @func_1530(%58) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %60 = cast(%var_13712, dtype="float64") /* ty=Tensor[(55, 15), float64] */;
  %61 = reshape(%60, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %62 = @func_8422(%61) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %64 = reshape(%63, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %65 = @func_511(%64) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %66 = %55.3;
  %67 = %59.0;
  %68 = %62.3;
  %69 = %65.0;
  (%56, %66, meta[relay.Constant][2] /* ty=int16 */, %67, %68, %var_13712, %69, meta[relay.Constant][3] /* ty=Tensor[(4, 60), float64] */)
}

def @func_13359() -> Tensor[(2, 10, 2), int32] {
  @func_4370() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_5233() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %70 = @func_4338() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
  %71 = %70.0;
  %72 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  (%71, %72)
}

def @func_801(%var_783: Tensor[(12, 14, 1), uint64], %var_784: Tensor[(12, 14, 12), uint64], %var_793: Tensor[(12, 14, 12), uint64]) -> (Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) {
  %73 = cast(%var_783, dtype="uint64") /* ty=Tensor[(12, 14, 1), uint64] */;
  %74 = cast(%var_784, dtype="uint64") /* ty=Tensor[(12, 14, 12), uint64] */;
  %75 = cast(%var_793, dtype="bool") /* ty=Tensor[(12, 14, 12), bool] */;
  %76 = shape_of(%var_784, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(%var_784, dtype="bool") /* ty=Tensor[(12, 14, 12), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %79 = minimum(%73, %74) /* ty=Tensor[(12, 14, 12), uint64] */;
  %80 = greater(%77, %78) /* ty=Tensor[(12, 14, 12), bool] */;
  (%79, %80)
}

def @func_9897() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  %81 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %82 = %81.0;
  %83 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
  (%82, %83)
}

def @func_8375() -> Tensor[(2, 10, 2), float32] {
  %84 = @func_7934() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %84.1
}

def @func_12718() -> Tensor[(2, 10, 2), float32] {
  @func_9368() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_11396() -> Tensor[(2, 10, 2), float32] {
  %85 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %85.1
}

def @func_9970(%var_9945: Tensor[(300, 4), float32], %var_9946: Tensor[(480), float32], %var_9947: Tensor[(240), float64]) -> (Tensor[(2, 10, 2), float64], Tensor[(240, 1), float64], Tensor[(480), float32], Tensor[(240), float64], Tensor[(2, 10, 2), float64], Tensor[(300, 4), float32]) {
  %86 = @func_7852() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %87 = cast(%var_9945, dtype="float32") /* ty=Tensor[(300, 4), float32] */;
  %88 = cast(%var_9946, dtype="float32") /* ty=Tensor[(480), float32] */;
  %89 = cast(%var_9947, dtype="float64") /* ty=Tensor[(240), float64] */;
  %90 = reshape(%87, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), float32] */;
  %91 = reshape(%88, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %92 = reshape(%89, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %93 = @func_5893(%90, %91, %92) /* ty=(Tensor[(16, 5, 15), float32], Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(15, 16, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64]) */;
  %94 = @func_9897() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
  %95 = cast(%var_9945, dtype="float32") /* ty=Tensor[(300, 4), float32] */;
  %96 = %86.0;
  %97 = %93.5;
  %98 = %94.1;
  %99 = atanh(%95) /* ty=Tensor[(300, 4), float32] */;
  (%96, %97, %var_9946, %var_9947, %98, %99)
}

def @func_9495() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %100 = @func_6569() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32]) */;
  %101 = @func_5844() /* ty=Tensor[(2, 10, 2), float32] */;
  %102 = %100.0;
  (%101, %102)
}

def @func_13563() -> (Tensor[(2, 10, 2), float32],) {
  %103 = @func_11142() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) */;
  %104 = %103.1;
  (%104,)
}

def @func_2851(%var_2814: Tensor[(40), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) {
  %105 = cast(%var_2814, dtype="float32") /* ty=Tensor[(40), float32] */;
  %106 = reshape(%105, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %107 = @func_1530(%106) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %108 = cast(meta[relay.Constant][4] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %109 = reshape(%108, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %110 = @func_511(%109) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %111 = %107.0;
  %112 = cast(%111, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %113 = reshape(%112, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %114 = @func_1530(%113) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %115 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %116 = %115.4;
  %117 = cast(%116, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
  %118 = erf(%117) /* ty=Tensor[(10, 10, 4), float64] */;
  %119 = cast(%116, dtype="int8") /* ty=Tensor[(10, 10, 4), int8] */;
  %120 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %121 = cast(%118, dtype="int8") /* ty=Tensor[(10, 10, 4), int8] */;
  %122 = dyn.reshape(%119, %120, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %123 = bitwise_or(%121, %122) /* ty=Tensor[(10, 10, 4), int8] */;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %125 = shape_of(%118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%118, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %128 = cast(%116, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %129 = reshape(%128, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %130 = @func_396(%129) /* ty=(Tensor[(10, 10, 4), float32],) */;
  %131 = cast(%118, dtype="int64") /* ty=Tensor[(10, 10, 4), int64] */;
  %132 = shape_of(%123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %133 = cast(%123, dtype="int64") /* ty=Tensor[(10, 10, 4), int64] */;
  %134 = dyn.reshape(%131, %132, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %135 = %110.0;
  %136 = %114.1;
  %137 = power(%126, %127) /* ty=Tensor[(10, 10, 4), float32] */;
  %138 = %130.0;
  %139 = right_shift(%133, %134) /* ty=Tensor[(10, 10, 4), int64] */;
  (%111, %var_2814, %135, meta[relay.Constant][4] /* ty=Tensor[(240), float64] */, %136, %137, %138, %139)
}

def @func_6906(%var_6904: Tensor[(400), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) {
  %140 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %141 = cast(%var_6904, dtype="float32") /* ty=Tensor[(400), float32] */;
  %142 = reshape(%141, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %143 = @func_4435(%142) /* ty=(Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) */;
  %144 = %140.1;
  %145 = %143.0;
  (%144, %145, %var_6904)
}

def @func_2749() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) {
  %146 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %147 = cast(meta[relay.Constant][5] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %148 = reshape(%147, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %149 = @func_1901(%148) /* ty=(Tensor[(14, 15, 16), float32],) */;
  %150 = %146.0;
  %151 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  %152 = %149.0;
  %153 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
  (%150, %151, %152, meta[relay.Constant][5] /* ty=Tensor[(3360), float32] */, %153)
}

def @func_3568() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %154 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %155 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %156 = %154.1;
  %157 = %155.0;
  (%156, %157)
}

def @func_10671() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %158 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %159 = %158.1;
  %160 = @func_9616() /* ty=Tensor[(2, 10, 2), float32] */;
  (%159, %160)
}

def @func_3090(%var_3035: Tensor[(3, 8, 14), float64]) -> (Tensor[(3, 8, 14), float64],) {
  %161 = cast(%var_3035, dtype="float64") /* ty=Tensor[(3, 8, 14), float64] */;
  %162 = cosh(%161) /* ty=Tensor[(3, 8, 14), float64] */;
  (%162,)
}

def @func_3779() -> Tensor[(2, 10, 2), float32] {
  %163 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %163.1
}

def @func_6346(%var_6265: Tensor[(16, 4, 16), float64], %var_6266: Tensor[(16, 4, 16), float64], %var_6274: Tensor[(32, 2), float64], %var_6299: Tensor[(480), float32]) -> (Tensor[(1, 8, 12), float64], Tensor[(4, 4), float64], Tensor[(32, 2), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16, 4, 16), float32]) {
  %164 = cast(meta[relay.Constant][6] /* ty=Tensor[(4, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
  %165 = cast(%var_6274, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
  %166 = reshape(%164, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %167 = reshape(%165, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %168 = @func_5164(%166, %167) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) */;
  %169 = cast(%var_6299, dtype="float32") /* ty=Tensor[(480), float32] */;
  %170 = reshape(%169, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %171 = @func_3833(%170) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
  %172 = @func_2947() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %173 = cast(%var_6266, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
  %174 = shape_of(%var_6265, dtype="int32") /* ty=Tensor[(3), int32] */;
  %175 = cast(%var_6265, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
  %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %177 = mod(%175, %176) /* ty=Tensor[(16, 4, 16), float64] */;
  %178 = cast(%177, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
  %179 = rsqrt(%178) /* ty=Tensor[(16, 4, 16), float64] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(16, 4, 16), float32] */;
  %181 = %168.3;
  %182 = %171.4;
  %183 = %172.3;
  %184 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  %185 = exp(%180) /* ty=Tensor[(16, 4, 16), float32] */;
  (%181, meta[relay.Constant][6] /* ty=Tensor[(4, 4), float64] */, %var_6274, %182, %var_6299, %183, %184, %185)
}

def @func_15035(%var_15023: Tensor[(9, 2, 14), uint8], %var_15030: Tensor[(196, 1), float32]) -> (Tensor[(9, 2, 14), bool], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(196, 1), float32], Tensor[(16), float64]) {
  %186 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 2, 14), uint8] */, dtype="bool") /* ty=Tensor[(9, 2, 14), bool] */;
  %187 = shape_of(%var_15023, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%var_15023, dtype="bool") /* ty=Tensor[(9, 2, 14), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %190 = cast(meta[relay.Constant][8] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %191 = cast(%var_15030, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
  %192 = cast(meta[relay.Constant][9] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %193 = reshape(%190, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %194 = reshape(%191, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
  %195 = reshape(%192, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %196 = @func_3420(%193, %194, %195) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
  %197 = greater(%188, %189) /* ty=Tensor[(9, 2, 14), bool] */;
  %198 = %196.0;
  (%197, %198, meta[relay.Constant][8] /* ty=Tensor[(28), float32] */, %var_15030, meta[relay.Constant][9] /* ty=Tensor[(16), float64] */)
}

def @func_10765() -> Tensor[(2, 10, 2), float32] {
  %199 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %199.0
}

def @func_10814() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %200 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
  %201 = @func_8596() /* ty=Tensor[(2, 10, 2), float32] */;
  (%200, %201)
}

def @func_5296() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
  %202 = @func_3145() /* ty=Tensor[(2, 10, 2), float32] */;
  %203 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
  (%202, %203)
}

def @func_8783() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) {
  %204 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %205 = cast(meta[relay.Constant][10] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %206 = cast(meta[relay.Constant][11] /* ty=Tensor[(49, 4), float32] */, dtype="float32") /* ty=Tensor[(49, 4), float32] */;
  %207 = cast(meta[relay.Constant][12] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %208 = reshape(%205, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %209 = reshape(%206, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
  %210 = reshape(%207, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %211 = @func_3420(%208, %209, %210) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
  %212 = %204.1;
  %213 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
  %214 = %211.0;
  (%212, %213, %214, meta[relay.Constant][10] /* ty=Tensor[(28), float32] */, meta[relay.Constant][11] /* ty=Tensor[(49, 4), float32] */, meta[relay.Constant][12] /* ty=Tensor[(16), float64] */)
}

def @func_1530(%var_1503: Tensor[(2, 10, 2), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %215 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %216 = %215.0;
  %217 = cast(%var_1503, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %218 = shape_of(%216, dtype="int32") /* ty=Tensor[(3), int32] */;
  %219 = cast(%216, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %220 = dyn.reshape(%217, %218, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %221 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %222 = power(%219, %220) /* ty=Tensor[(2, 10, 2), float64] */;
  %223 = %221.0;
  (%222, %223)
}

def @func_12347() -> (Tensor[(2, 10, 2), float32],) {
  %224 = @func_4645() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %225 = %224.0;
  (%225,)
}

def @func_12772() -> Tensor[(2, 10, 2), float32] {
  @func_1391() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_5681() -> (Tensor[(2, 10, 2), float32],) {
  %226 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %227 = %226.0;
  (%227,)
}

def @func_6998(%var_6961: Tensor[(16, 1), float64], %var_6962: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(3360), float32], Tensor[(8, 10, 5), float32], Tensor[(16, 1), float64], Tensor[(64), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %228 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %229 = cast(%var_6961, dtype="float64") /* ty=Tensor[(16, 1), float64] */;
  %230 = cast(%var_6962, dtype="float64") /* ty=Tensor[(64), float64] */;
  %231 = cast(%var_6962, dtype="float32") /* ty=Tensor[(64), float32] */;
  %232 = reshape(%229, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %233 = reshape(%230, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %234 = reshape(%231, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %235 = @func_3026(%232, %233, %234) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
  %236 = %228.0;
  %237 = cast(%236, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %238 = reshape(%237, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %239 = @func_2851(%238) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) */;
  %240 = @func_3961() /* ty=Tensor[(3360), float32] */;
  %241 = %235.0;
  %242 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
  %243 = %239.0;
  (%236, %240, %241, %var_6961, %var_6962, %242, %243)
}

def @func_7170() -> (Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) {
  %244 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %245 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), uint64] */, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %246 = cast(meta[relay.Constant][14] /* ty=Tensor[(252, 8), uint64] */, dtype="uint64") /* ty=Tensor[(252, 8), uint64] */;
  %247 = cast(meta[relay.Constant][14] /* ty=Tensor[(252, 8), uint64] */, dtype="uint64") /* ty=Tensor[(252, 8), uint64] */;
  %248 = reshape(%245, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
  %249 = reshape(%246, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %250 = reshape(%247, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %251 = @func_801(%248, %249, %250) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
  %252 = %244.1;
  %253 = %251.0;
  (%252, %253, meta[relay.Constant][13] /* ty=Tensor[(168), uint64] */, meta[relay.Constant][14] /* ty=Tensor[(252, 8), uint64] */)
}

def @func_2646(%var_2636: Tensor[(8, 10, 5), float32]) -> (Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) {
  %254 = cast(%var_2636, dtype="float32") /* ty=Tensor[(8, 10, 5), float32] */;
  %255 = cast(%var_2636, dtype="float64") /* ty=Tensor[(8, 10, 5), float64] */;
  %256 = rsqrt(%254) /* ty=Tensor[(8, 10, 5), float32] */;
  %257 = log(%255) /* ty=Tensor[(8, 10, 5), float64] */;
  (%256, %257)
}

def @func_1901(%var_1896: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), float32],) {
  %258 = cast(%var_1896, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %259 = rsqrt(%258) /* ty=Tensor[(14, 15, 16), float32] */;
  (%259,)
}

def @func_9090() -> (Tensor[(2, 10, 2), float32],) {
  %260 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %261 = %260.0;
  (%261,)
}

def @func_7957() -> (Tensor[(2, 10, 2), float32],) {
  %262 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  (%262,)
}

def @func_7611() -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) {
  %263 = @func_6879() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) */;
  %264 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %265 = @func_6142() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(2, 10, 2), int32]) */;
  %266 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %267 = %263.1;
  %268 = %264.0;
  %269 = %265.1;
  %270 = %266.0;
  (%267, %268, %269, %270)
}

def @func_1680() -> (Tensor[(2, 10, 2), int32],) {
  %271 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %272 = cast(meta[relay.Constant][15] /* ty=Tensor[(2, 10, 2), float32] */, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %273 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
  %274 = cast(%271, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %275 = dyn.reshape(%272, %273, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %276 = maximum(%274, %275) /* ty=Tensor[(2, 10, 2), int32] */;
  (%276,)
}

def @func_4903() -> Tensor[(2, 10, 2), float32] {
  %277 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %277.0
}

def @func_5893(%var_5875: Tensor[(16, 5, 15), float32], %var_5879: Tensor[(480), float32], %var_5890: Tensor[(240, 1), float64]) -> (Tensor[(16, 5, 15), float32], Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(15, 16, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64]) {
  %278 = cast(%var_5875, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
  %279 = cast(%var_5879, dtype="float32") /* ty=Tensor[(480), float32] */;
  %280 = reshape(%279, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %281 = @func_3833(%280) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
  %282 = cast(%var_5879, dtype="float32") /* ty=Tensor[(480), float32] */;
  %283 = reshape(%282, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %284 = @func_3833(%283) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
  %285 = cast(%var_5890, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %286 = reshape(%285, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %287 = @func_511(%286) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %288 = asin(%278) /* ty=Tensor[(16, 5, 15), float32] */;
  %289 = %281.1;
  %290 = %284.3;
  %291 = %287.0;
  (%288, %289, %var_5879, %290, %291, %var_5890)
}

def @func_10605() -> Tensor[(2, 10, 2), float32] {
  %292 = @func_7152() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %292.0
}

def @func_14455(%var_14447: Tensor[(7, 15, 10), float32]) -> Tensor[(7, 15, 10), int16] {
  %293 = cast(%var_14447, dtype="float32") /* ty=Tensor[(7, 15, 10), float32] */;
  %294 = atanh(%293) /* ty=Tensor[(7, 15, 10), float32] */;
  %295 = cast(%var_14447, dtype="int16") /* ty=Tensor[(7, 15, 10), int16] */;
  %296 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
  %297 = cast(%294, dtype="int16") /* ty=Tensor[(7, 15, 10), int16] */;
  %298 = dyn.reshape(%295, %296, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  bitwise_xor(%297, %298) /* ty=Tensor[(7, 15, 10), int16] */
}

def @func_5795() -> Tensor[(2, 10, 2), float32] {
  %299 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %299.0
}

def @func_12460(%var_12443: int16) -> (Tensor[(2, 10, 2), float32], Tensor[(14, 9, 5), bool], int16, Tensor[(630), int16]) {
  %300 = cast(%var_12443, dtype="int16") /* ty=int16 */;
  %301 = cast(meta[relay.Constant][16] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
  %302 = reshape(%300, newshape=[]) /* ty=int16 */;
  %303 = reshape(%301, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int16] */;
  %304 = @func_4903() /* ty=Tensor[(2, 10, 2), float32] */;
  %305 = @func_1888(%302, %303) /* ty=Tensor[(14, 9, 5), bool] */;
  (%304, %305, %var_12443, meta[relay.Constant][16] /* ty=Tensor[(630), int16] */)
}

def @func_14772() -> (Tensor[(2, 10, 2), float32],) {
  %306 = @func_10594() /* ty=Tensor[(2, 10, 2), float32] */;
  (%306,)
}

def @func_11142() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) {
  %307 = @func_8849() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %308 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %309 = %307.0;
  %310 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  %311 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
  (%308, %309, %310, %311)
}

def @func_11595() -> (Tensor[(2, 10, 2), float32],) {
  %312 = @func_3977() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %313 = %312.0;
  (%313,)
}

def @func_14026() -> (Tensor[(2, 10, 2), float64],) {
  %314 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %315 = %314.0;
  (%315,)
}

def @func_15638() -> (Tensor[(2, 10, 2), float32],) {
  %316 = @func_11396() /* ty=Tensor[(2, 10, 2), float32] */;
  (%316,)
}

def @func_10970() -> (Tensor[(2, 10, 2), float32],) {
  %317 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %318 = %317.1;
  (%318,)
}

def @func_511(%var_508: Tensor[(5, 8, 6), float64]) -> (Tensor[(5, 8, 6), float64],) {
  %319 = cast(%var_508, dtype="float64") /* ty=Tensor[(5, 8, 6), float64] */;
  %320 = sigmoid(%319) /* ty=Tensor[(5, 8, 6), float64] */;
  (%320,)
}

def @func_10016() -> Tensor[(2, 10, 2), float32] {
  %321 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %321.0
}

def @func_5972() -> Tensor[(4, 13, 16), float64] {
  %322 = @func_4164() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) */;
  %322.2
}

def @func_3833(%var_3829: Tensor[(480), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) {
  %323 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %324 = cast(%var_3829, dtype="float32") /* ty=Tensor[(480), float32] */;
  %325 = cast(%var_3829, dtype="float32") /* ty=Tensor[(480), float32] */;
  %326 = reshape(%324, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %327 = reshape(%325, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %328 = @func_628(%326, %327) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
  %329 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
  %330 = %323.1;
  %331 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  %332 = %328.0;
  (%329, %330, %331, %332, %var_3829)
}

def @func_13652() -> (Tensor[(2, 10, 2), float32],) {
  %333 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
  (%333,)
}

def @func_2193() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %334 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %335 = %334.1;
  %336 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  (%335, %336)
}

def @func_14212(%var_14188: Tensor[(400), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(252, 8), uint64]) {
  %337 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %338 = cast(%var_14188, dtype="float32") /* ty=Tensor[(400), float32] */;
  %339 = reshape(%338, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %340 = @func_6906(%339) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) */;
  %341 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %342 = @func_7170() /* ty=(Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) */;
  %343 = %337.1;
  %344 = %340.1;
  %345 = %341.0;
  %346 = %342.3;
  (%343, %344, %var_14188, %345, %346)
}

def @func_4645() -> (Tensor[(2, 10, 2), float32],) {
  %347 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %348 = %347.0;
  (%348,)
}

def @func_4370() -> Tensor[(2, 10, 2), int32] {
  %349 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %349.0
}

def @func_8310() -> Tensor[(2, 10, 2), int32] {
  @func_3459() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_7341() -> Tensor[(2, 10, 2), float32] {
  %350 = @func_3977() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %350.0
}

def @func_12629(%var_12612: Tensor[(9, 15, 14), int8], %var_12613: Tensor[(9, 15, 14), int8], %var_12618: Tensor[(400), float32]) -> (Tensor[(9, 15, 14), int8], Tensor[(400), float32], Tensor[(8, 10, 5), float32]) {
  %351 = cast(%var_12613, dtype="int8") /* ty=Tensor[(9, 15, 14), int8] */;
  %352 = shape_of(%var_12612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %353 = cast(%var_12612, dtype="int8") /* ty=Tensor[(9, 15, 14), int8] */;
  %354 = dyn.reshape(%351, %352, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %355 = cast(%var_12618, dtype="float32") /* ty=Tensor[(400), float32] */;
  %356 = reshape(%355, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
  %357 = @func_2646(%356) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
  %358 = %357.1;
  %359 = cast(%358, dtype="float32") /* ty=Tensor[(8, 10, 5), float32] */;
  %360 = minimum(%353, %354) /* ty=Tensor[(9, 15, 14), int8] */;
  %361 = exp(%359) /* ty=Tensor[(8, 10, 5), float32] */;
  (%360, %var_12618, %361)
}

def @func_3420(%var_3407: Tensor[(2, 14, 1), float32], %var_3408: Tensor[(2, 14, 7), float32], %var_3417: Tensor[(16), float64]) -> (Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) {
  %362 = cast(%var_3407, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
  %363 = cast(%var_3408, dtype="float32") /* ty=Tensor[(2, 14, 7), float32] */;
  %364 = cast(%var_3417, dtype="float64") /* ty=Tensor[(16), float64] */;
  %365 = cast(meta[relay.Constant][17] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
  %366 = cast(meta[relay.Constant][17] /* ty=Tensor[(32, 2), float64] */, dtype="float32") /* ty=Tensor[(32, 2), float32] */;
  %367 = reshape(%364, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %368 = reshape(%365, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %369 = reshape(%366, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %370 = @func_3026(%367, %368, %369) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
  %371 = maximum(%362, %363) /* ty=Tensor[(2, 14, 7), float32] */;
  %372 = %370.1;
  (%371, %372, %var_3417, meta[relay.Constant][17] /* ty=Tensor[(32, 2), float64] */)
}

def @func_5765() -> (Tensor[(4, 13, 16), float64],) {
  %373 = @func_4136() /* ty=Tensor[(4, 13, 16), float64] */;
  (%373,)
}

def @func_8579() -> (Tensor[(4, 60), float32], Tensor[(4, 60), float64]) {
  %374 = @func_7784() /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) */;
  %375 = %374.0;
  %376 = cast(%375, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %377 = cast(%375, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %378 = log(%376) /* ty=Tensor[(4, 60), float32] */;
  %379 = asinh(%377) /* ty=Tensor[(4, 60), float64] */;
  (%378, %379)
}

def @func_14406() -> (Tensor[(16), float64], Tensor[(2, 10, 2), float64]) {
  %380 = @func_6514() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(16), float64]) */;
  %381 = %380.4;
  %382 = @func_12639() /* ty=Tensor[(2, 10, 2), float64] */;
  (%381, %382)
}

def @func_5844() -> Tensor[(2, 10, 2), float32] {
  @func_1353() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_1744() -> Tensor[(2, 10, 2), float64] {
  %383 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %384 = %383.0;
  %385 = cast(%384, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  atan(%385) /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_11301() -> Tensor[(2, 10, 2), float32] {
  @func_5108() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_13130() -> Tensor[(2, 10, 2), float32] {
  %386 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %386.0
}

def @func_12527() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %387 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %388 = @func_9812() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(3360), float32]) */;
  %389 = %387.1;
  %390 = %388.0;
  (%389, %390)
}

def @func_2137() -> Tensor[(2, 10, 2), float32] {
  %391 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %391.0
}

def @func_13963(%var_13958: Tensor[(200, 2), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(8, 10, 5), float32], Tensor[(2, 10, 2), int32], Tensor[(200, 2), int64]) {
  %392 = @func_11049() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %393 = cast(meta[relay.Constant][18] /* ty=Tensor[(200, 2), float32] */, dtype="float32") /* ty=Tensor[(200, 2), float32] */;
  %394 = reshape(%393, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
  %395 = @func_2646(%394) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
  %396 = cast(%var_13958, dtype="int64") /* ty=Tensor[(200, 2), int64] */;
  %397 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(200, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %398 = cast(meta[relay.Constant][18] /* ty=Tensor[(200, 2), float32] */, dtype="int64") /* ty=Tensor[(200, 2), int64] */;
  %399 = dyn.reshape(%396, %397, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %400 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
  %401 = %392.1;
  %402 = @func_9211() /* ty=Tensor[(2, 10, 2), float32] */;
  %403 = @func_11301() /* ty=Tensor[(2, 10, 2), float32] */;
  %404 = %395.0;
  %405 = @func_3459() /* ty=Tensor[(2, 10, 2), int32] */;
  %406 = bitwise_and(%398, %399) /* ty=Tensor[(200, 2), int64] */;
  (%400, %401, %402, %403, %404, %405, %406)
}

def @func_12926() -> (Tensor[(2, 10, 2), float32],) {
  %407 = @func_7341() /* ty=Tensor[(2, 10, 2), float32] */;
  (%407,)
}

def @func_2947() -> (Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %408 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
  %409 = cast(meta[relay.Constant][19] /* ty=Tensor[(432), int16] */, dtype="int16") /* ty=Tensor[(432), int16] */;
  %410 = reshape(%409, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), int16] */;
  %411 = @func_918(%410) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */;
  %412 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
  %413 = cast(%412, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %414 = reshape(%413, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %415 = @func_1530(%414) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %416 = %408.1;
  %417 = %411.2;
  %418 = %415.1;
  (%416, %417, meta[relay.Constant][19] /* ty=Tensor[(432), int16] */, %412, %418)
}

def @func_12690(%var_12680: Tensor[(2, 200), float32]) -> (Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(8, 10, 5), float64], Tensor[(2, 200), float32]) {
  %419 = @func_11161() /* ty=(Tensor[(4, 60), float64],) */;
  %420 = @func_11142() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) */;
  %421 = @func_5361() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) */;
  %422 = cast(%var_12680, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %423 = reshape(%422, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
  %424 = @func_2646(%423) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
  %425 = %419.0;
  %426 = %420.1;
  %427 = %421.0;
  %428 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
  %429 = %424.1;
  (%425, %426, %427, %428, %429, %var_12680)
}

def @func_13005() -> (Tensor[(2, 10, 2), float32],) {
  %430 = @func_6879() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) */;
  %431 = %430.0;
  (%431,)
}

def @func_4731(%var_4712: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(168), uint64], Tensor[(168), uint64], Tensor[(825), float64]) {
  %432 = cast(meta[relay.Constant][20] /* ty=Tensor[(168), uint64] */, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %433 = cast(%var_4712, dtype="float64") /* ty=Tensor[(825), float64] */;
  %434 = reshape(%432, newshape=[168]) /* ty=Tensor[(168), uint64] */;
  %435 = reshape(%433, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %436 = @func_2590(%434, %435) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(36, 12), int16], Tensor[(825), float64], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360, 1), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float32]) */;
  %437 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
  %438 = %436.2;
  (%437, %438, meta[relay.Constant][20] /* ty=Tensor[(168), uint64] */, %var_4712)
}

def @func_10094(%var_10048: Tensor[(49, 4), float32]) -> (Tensor[(168), uint64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28), float32], Tensor[(16), float64], Tensor[(2, 10, 2), float64], Tensor[(49, 4), float64], Tensor[(240), float64], Tensor[(55, 15), float64]) {
  %439 = @func_7170() /* ty=(Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) */;
  %440 = @func_9897() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
  %441 = cast(meta[relay.Constant][21] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %442 = cast(%var_10048, dtype="float32") /* ty=Tensor[(49, 4), float32] */;
  %443 = cast(meta[relay.Constant][22] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %444 = reshape(%441, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %445 = reshape(%442, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
  %446 = reshape(%443, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %447 = @func_3420(%444, %445, %446) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
  %448 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %449 = cast(%var_10048, dtype="float64") /* ty=Tensor[(49, 4), float64] */;
  %450 = cast(meta[relay.Constant][23] /* ty=Tensor[(55, 15), float64] */, dtype="float64") /* ty=Tensor[(55, 15), float64] */;
  %451 = reshape(%450, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %452 = @func_8422(%451) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) */;
  %453 = %439.2;
  %454 = %440.1;
  %455 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
  %456 = %447.1;
  %457 = %448.0;
  %458 = log10(%449) /* ty=Tensor[(49, 4), float64] */;
  %459 = %452.2;
  (%453, %454, %455, %456, meta[relay.Constant][21] /* ty=Tensor[(28), float32] */, meta[relay.Constant][22] /* ty=Tensor[(16), float64] */, %457, %458, %459, meta[relay.Constant][23] /* ty=Tensor[(55, 15), float64] */)
}

def @func_14562() -> Tensor[(2, 10, 2), float32] {
  %460 = @func_11595() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %460.0
}

def @func_11780(%var_11767: Tensor[(16), float64], %var_11768: Tensor[(64), float64]) -> (Tensor[(4, 60), bool], Tensor[(4, 60), float32], Tensor[(4, 4, 4), uint32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(4, 60), float32]) {
  %461 = @func_7784() /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) */;
  %462 = %461.0;
  %463 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 60), float64] */, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %464 = shape_of(%462, dtype="int32") /* ty=Tensor[(2), int32] */;
  %465 = cast(%462, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %466 = dyn.reshape(%463, %464, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %467 = cast(meta[relay.Constant][24] /* ty=Tensor[(4, 60), float64] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %468 = shape_of(%462, dtype="int32") /* ty=Tensor[(2), int32] */;
  %469 = cast(%462, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %470 = dyn.reshape(%467, %468, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %471 = cast(%var_11767, dtype="float64") /* ty=Tensor[(16), float64] */;
  %472 = cast(%var_11768, dtype="float64") /* ty=Tensor[(64), float64] */;
  %473 = cast(%var_11768, dtype="float32") /* ty=Tensor[(64), float32] */;
  %474 = reshape(%471, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %475 = reshape(%472, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %476 = reshape(%473, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %477 = @func_3026(%474, %475, %476) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
  %478 = cast(%462, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %479 = less_equal(%465, %466) /* ty=Tensor[(4, 60), bool] */;
  %480 = power(%469, %470) /* ty=Tensor[(4, 60), float32] */;
  %481 = %477.2;
  %482 = erf(%478) /* ty=Tensor[(4, 60), float32] */;
  (%479, %480, %481, %var_11767, %var_11768, %482)
}

def @func_4435(%var_4427: Tensor[(10, 10, 4), float32]) -> (Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) {
  %483 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %484 = %483.4;
  %485 = cast(%var_4427, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
  %486 = shape_of(%484, dtype="int32") /* ty=Tensor[(3), int32] */;
  %487 = cast(%484, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %489 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %490 = less(%487, %488) /* ty=Tensor[(10, 10, 4), bool] */;
  %491 = %489.1;
  (%490, %491)
}

def @func_7723() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %492 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %493 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %494 = %492.0;
  %495 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %496 = %493.0;
  (%494, %495, %496)
}

def @func_6743() -> (Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) {
  %497 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %498 = %497.0;
  %499 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  (%498, %499)
}

def @func_4136() -> Tensor[(4, 13, 16), float64] {
  %500 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
  %501 = cast(%500, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
  acos(%501) /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_11547() -> (Tensor[(2, 10, 2), float32],) {
  %502 = @func_9616() /* ty=Tensor[(2, 10, 2), float32] */;
  (%502,)
}

def @func_8849() -> (Tensor[(2, 10, 2), float32],) {
  %503 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %504 = %503.1;
  (%504,)
}

def @func_11535() -> Tensor[(2, 10, 2), float32] {
  @func_8596() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_15161() -> (Tensor[(12, 14, 12), uint64], uint8, Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %505 = @func_7170() /* ty=(Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) */;
  %506 = @func_14923() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], uint8, Tensor[(1040), uint8]) */;
  %507 = @func_10970() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %508 = %505.1;
  %509 = %506.2;
  %510 = %507.0;
  %511 = @func_12772() /* ty=Tensor[(2, 10, 2), float32] */;
  (%508, %509, %510, %511)
}

def @func_15486() -> (Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64]) {
  %512 = @func_13359() /* ty=Tensor[(2, 10, 2), int32] */;
  %513 = @func_13255() /* ty=Tensor[(2, 10, 2), float64] */;
  (%512, %513)
}

def @func_6834(%var_6821: Tensor[(480), float32]) -> (Tensor[(2, 10, 2), bool], Tensor[(1, 8, 12), float64], Tensor[(16), float64], Tensor[(2, 10, 2), float32], Tensor[(32, 2), bool], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) {
  %514 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %515 = cast(meta[relay.Constant][25] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %516 = cast(meta[relay.Constant][26] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
  %517 = reshape(%515, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %518 = reshape(%516, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %519 = @func_5164(%517, %518) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) */;
  %520 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %521 = cast(meta[relay.Constant][27] /* ty=Tensor[(32, 2), float64] */, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
  %522 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(32, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %523 = cast(meta[relay.Constant][26] /* ty=Tensor[(32, 2), float64] */, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %525 = cast(%var_6821, dtype="float32") /* ty=Tensor[(480), float32] */;
  %526 = cast(%var_6821, dtype="float32") /* ty=Tensor[(480), float32] */;
  %527 = reshape(%525, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %528 = reshape(%526, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %529 = @func_628(%527, %528) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
  %530 = %514.2;
  %531 = %519.3;
  %532 = %520.1;
  %533 = greater_equal(%523, %524) /* ty=Tensor[(32, 2), bool] */;
  %534 = %529.1;
  (%530, %531, meta[relay.Constant][25] /* ty=Tensor[(16), float64] */, %532, %533, %534, %var_6821)
}

def @func_9812() -> (Tensor[(2, 10, 2), float32], Tensor[(3360), float32]) {
  %535 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %536 = @func_3961() /* ty=Tensor[(3360), float32] */;
  (%535, %536)
}

def @func_5652(%var_5582: Tensor[(2, 11, 7), float64]) -> (Tensor[(2, 11, 7), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %537 = cast(%var_5582, dtype="float64") /* ty=Tensor[(2, 11, 7), float64] */;
  %538 = @func_4164() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) */;
  %539 = acosh(%537) /* ty=Tensor[(2, 11, 7), float64] */;
  %540 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %541 = %538.0;
  (%539, %540, %541)
}

def @func_14923() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], uint8, Tensor[(1040), uint8]) {
  %542 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %543 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %544 = cast(meta[relay.Constant][28] /* ty=Tensor[(1040), uint8] */, dtype="uint8") /* ty=Tensor[(1040), uint8] */;
  %545 = reshape(%544, newshape=[1040]) /* ty=Tensor[(1040), uint8] */;
  %546 = @func_4225(%545) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(13, 5, 16), uint8], uint8, Tensor[(1040), uint8]) */;
  %547 = %542.1;
  %548 = %543.1;
  %549 = %546.5;
  (%547, %548, %549, meta[relay.Constant][28] /* ty=Tensor[(1040), uint8] */)
}

def @func_3916(%var_3898: Tensor[(3, 3, 13), float32]) -> (Tensor[(3, 3, 13), float32],) {
  %550 = cast(%var_3898, dtype="float32") /* ty=Tensor[(3, 3, 13), float32] */;
  %551 = atanh(%550) /* ty=Tensor[(3, 3, 13), float32] */;
  (%551,)
}

def @func_1700(%var_1685: Tensor[(8, 50), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(8, 50), float32]) {
  %552 = cast(%var_1685, dtype="float32") /* ty=Tensor[(8, 50), float32] */;
  %553 = reshape(%552, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %554 = @func_396(%553) /* ty=(Tensor[(10, 10, 4), float32],) */;
  %555 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %556 = %554.0;
  (%555, %556, %var_1685)
}

def @func_9294(%var_9248: Tensor[(10, 14, 3), float32]) -> (Tensor[(10, 14, 3), float32], Tensor[(4, 13, 16), float64]) {
  %557 = cast(%var_9248, dtype="float32") /* ty=Tensor[(10, 14, 3), float32] */;
  %558 = rsqrt(%557) /* ty=Tensor[(10, 14, 3), float32] */;
  %559 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
  (%558, %559)
}

def @func_7071() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %560 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %561 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %562 = %560.1;
  %563 = %561.0;
  (%562, %563)
}

def @func_4225(%var_4222: Tensor[(1040), uint8]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(13, 5, 16), uint8], uint8, Tensor[(1040), uint8]) {
  %564 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
  %565 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %566 = %565.3;
  %567 = cast(%566, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %568 = reshape(%567, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %569 = @func_1530(%568) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %570 = cast(meta[relay.Constant][29] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %571 = cast(%var_4222, dtype="uint8") /* ty=Tensor[(1040), uint8] */;
  %572 = reshape(%570, newshape=[]) /* ty=uint8 */;
  %573 = reshape(%571, newshape=[13, 5, 16]) /* ty=Tensor[(13, 5, 16), uint8] */;
  %574 = %564.0;
  %575 = %569.1;
  %576 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  %577 = @func_105(%572, %573) /* ty=Tensor[(13, 5, 16), uint8] */;
  (%574, %566, %575, %576, %577, meta[relay.Constant][29] /* ty=uint8 */, %var_4222)
}

def @func_1353() -> Tensor[(2, 10, 2), float32] {
  %578 = cast(meta[relay.Constant][30] /* ty=Tensor[(2, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  rsqrt(%578) /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_7036() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %579 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
  %580 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  (%579, %580)
}

def @func_6176() -> Tensor[(2, 10, 2), float64] {
  %581 = @func_4370() /* ty=Tensor[(2, 10, 2), int32] */;
  %582 = cast(%581, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  sigmoid(%582) /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_6879() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) {
  %583 = @func_5765() /* ty=(Tensor[(4, 13, 16), float64],) */;
  %584 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %585 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  %586 = %583.0;
  %587 = %584.1;
  (%585, %586, %587)
}

def @func_1437() -> (Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) {
  %588 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %589 = reshape(%588, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %590 = @func_511(%589) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %591 = cast(meta[relay.Constant][32] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %592 = reshape(%591, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %593 = @func_396(%592) /* ty=(Tensor[(10, 10, 4), float32],) */;
  %594 = %593.0;
  %595 = cast(%594, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %596 = reshape(%595, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %597 = @func_396(%596) /* ty=(Tensor[(10, 10, 4), float32],) */;
  %598 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %599 = %590.0;
  %600 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %601 = %597.0;
  (%598, %599, meta[relay.Constant][31] /* ty=Tensor[(4, 60), float64] */, %600, %594, meta[relay.Constant][32] /* ty=Tensor[(400), float32] */, %601)
}

def @func_10000() -> (Tensor[(2, 10, 2), float32],) {
  %602 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %603 = %602.0;
  (%603,)
}

def @func_3308(%var_3238: Tensor[(28, 120), float32], %var_3249: Tensor[(28, 120), float32]) -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) {
  %604 = cast(%var_3249, dtype="float64") /* ty=Tensor[(28, 120), float64] */;
  %605 = shape_of(%var_3238, dtype="int32") /* ty=Tensor[(2), int32] */;
  %606 = cast(%var_3238, dtype="float64") /* ty=Tensor[(28, 120), float64] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %608 = floor_mod(%606, %607) /* ty=Tensor[(28, 120), float64] */;
  %609 = cast(%var_3249, dtype="bool") /* ty=Tensor[(28, 120), bool] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(2), int32] */;
  %611 = cast(%608, dtype="bool") /* ty=Tensor[(28, 120), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %613 = cast(meta[relay.Constant][33] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
  %614 = reshape(%613, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), float64] */;
  %615 = @func_3090(%614) /* ty=(Tensor[(3, 8, 14), float64],) */;
  %616 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %618 = reshape(%617, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %619 = @func_1530(%618) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %620 = cast(%var_3238, dtype="float32") /* ty=Tensor[(28, 120), float32] */;
  %621 = reshape(%620, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %622 = @func_1901(%621) /* ty=(Tensor[(14, 15, 16), float32],) */;
  %623 = %622.0;
  %624 = cast(%623, dtype="uint32") /* ty=Tensor[(14, 15, 16), uint32] */;
  %625 = shape_of(%var_3249, dtype="int32") /* ty=Tensor[(2), int32] */;
  %626 = cast(%var_3249, dtype="uint32") /* ty=Tensor[(28, 120), uint32] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %628 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
  %629 = equal(%611, %612) /* ty=Tensor[(28, 120), bool] */;
  %630 = %615.0;
  %631 = %619.0;
  %632 = bitwise_and(%626, %627) /* ty=Tensor[(28, 120), uint32] */;
  (%628, %616, %629, %630, meta[relay.Constant][33] /* ty=Tensor[(336), float64] */, %631, %632)
}

def @func_8596() -> Tensor[(2, 10, 2), float32] {
  %633 = @func_7934() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %633.0
}

def @func_7152() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %634 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %635 = @func_7045() /* ty=Tensor[(2, 10, 2), float32] */;
  %636 = %634.0;
  %637 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
  (%635, %636, %637)
}

def @func_3699() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
  %638 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %639 = %638.0;
  %640 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
  (%639, %640)
}

def @func_2252() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %641 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %642 = %641.1;
  %643 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %644 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  (%642, %643, %644)
}

def @func_15667() -> Tensor[(14, 2, 4), float64] {
  %645 = cast(meta[relay.Constant][34] /* ty=Tensor[(14, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
  sqrt(%645) /* ty=Tensor[(14, 2, 4), float64] */
}

def @func_12851(%var_12837: Tensor[(117), float32]) -> (Tensor[(4, 13, 16), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(1120), int64], Tensor[(117), float32]) {
  %646 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
  %647 = cast(%646, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
  %648 = tan(%647) /* ty=Tensor[(4, 13, 16), float64] */;
  %649 = cast(%646, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
  %650 = shape_of(%648, dtype="int32") /* ty=Tensor[(3), int32] */;
  %651 = cast(%648, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
  %652 = dyn.reshape(%649, %650, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %653 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %654 = cast(meta[relay.Constant][35] /* ty=Tensor[(1120), int64] */, dtype="int64") /* ty=Tensor[(1120), int64] */;
  %655 = cast(%var_12837, dtype="float32") /* ty=Tensor[(117), float32] */;
  %656 = reshape(%654, newshape=[1120]) /* ty=Tensor[(1120), int64] */;
  %657 = reshape(%655, newshape=[117, 1]) /* ty=Tensor[(117, 1), float32] */;
  %658 = @func_11995(%656, %657) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(117), float32], Tensor[(4, 28), int64], Tensor[(1120), int64], Tensor[(2, 24), float64], Tensor[(117, 1), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float32]) */;
  %659 = logical_and(%651, %652) /* ty=Tensor[(4, 13, 16), bool] */;
  %660 = %653.0;
  %661 = %658.6;
  (%659, %660, %661, meta[relay.Constant][35] /* ty=Tensor[(1120), int64] */, %var_12837)
}

def @func_13877() -> Tensor[(2, 10, 2), float32] {
  @func_3485() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_1966() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %662 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %663 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  %664 = %662.0;
  (%663, %664)
}

def @func_15308() -> Tensor[(15, 3, 8), float64] {
  %665 = @func_11349() /* ty=(Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) */;
  %665.0
}

def @func_1866(%var_1852: Tensor[(2, 10, 2), int32]) -> (Tensor[(2, 10, 2), bool],) {
  %666 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %667 = %666.0;
  %668 = cast(%var_1852, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = greater(%670, %671) /* ty=Tensor[(2, 10, 2), bool] */;
  (%672,)
}

def @func_918(%var_898: Tensor[(3, 12, 12), int16]) -> (Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) {
  %673 = cast(%var_898, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %674 = shape_of(meta[relay.Constant][36] /* ty=Tensor[(3, 12, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %675 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 12, 12), int16] */, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %677 = equal(%675, %676) /* ty=Tensor[(3, 12, 12), bool] */;
  %678 = cast(meta[relay.Constant][36] /* ty=Tensor[(3, 12, 12), int16] */, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
  %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
  %680 = cast(%677, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
  %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %682 = cast(meta[relay.Constant][37] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %683 = reshape(%682, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %684 = @func_511(%683) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %685 = mod(%680, %681) /* ty=Tensor[(3, 12, 12), float32] */;
  %686 = %684.0;
  (%685, %686, meta[relay.Constant][37] /* ty=Tensor[(240), float64] */)
}

def @func_15190() -> Tensor[(2, 10, 2), float32] {
  %687 = @func_9090() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %687.0
}

def @func_8680() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %688 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %689 = @func_7152() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %690 = %688.0;
  %691 = %689.2;
  (%690, %691)
}

def @func_9074() -> (Tensor[(2, 10, 2), float32],) {
  %692 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %693 = %692.0;
  (%693,)
}

def @func_2892() -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %694 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %695 = %694.0;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %697 = reshape(%696, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %698 = @func_2851(%697) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) */;
  %699 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %701 = %698.7;
  %702 = log10(%700) /* ty=Tensor[(2, 10, 2), float32] */;
  %703 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  (%695, %701, %702, %703)
}

def @func_4164() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) {
  %704 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %705 = %704.0;
  %706 = @func_4136() /* ty=Tensor[(4, 13, 16), float64] */;
  %707 = @func_4136() /* ty=Tensor[(4, 13, 16), float64] */;
  (%705, %706, %707)
}

def @func_4567(%var_4540: Tensor[(2, 3, 8), float64], %var_4553: Tensor[(117, 1), float32]) -> (Tensor[(2, 3, 8), float64], Tensor[(3, 3, 13), float32], Tensor[(117, 1), float32]) {
  %708 = cast(%var_4540, dtype="float64") /* ty=Tensor[(2, 3, 8), float64] */;
  %709 = cast(%var_4553, dtype="float32") /* ty=Tensor[(117, 1), float32] */;
  %710 = reshape(%709, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), float32] */;
  %711 = @func_3916(%710) /* ty=(Tensor[(3, 3, 13), float32],) */;
  %712 = asinh(%708) /* ty=Tensor[(2, 3, 8), float64] */;
  %713 = %711.0;
  (%712, %713, %var_4553)
}

def @func_6127() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) {
  %714 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %715 = %714.0;
  %716 = cast(%715, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %717 = erf(%716) /* ty=Tensor[(2, 10, 2), float64] */;
  %718 = cast(%715, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%717, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %722 = cast(%717, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %723 = @func_3767() /* ty=(Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) */;
  %724 = @func_2892() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %725 = floor_divide(%720, %721) /* ty=Tensor[(2, 10, 2), float64] */;
  %726 = acosh(%722) /* ty=Tensor[(2, 10, 2), float32] */;
  %727 = %723.0;
  %728 = %724.3;
  (%725, %726, %727, %728)
}

def @func_10594() -> Tensor[(2, 10, 2), float32] {
  @func_6198() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8911() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) {
  %729 = @func_7036() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %730 = %729.0;
  %731 = cast(%730, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %732 = reshape(%731, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %733 = @func_1866(%732) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %734 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %735 = %733.0;
  %736 = %734.3;
  (%730, %735, %736)
}

def @func_10482(%var_10443: Tensor[(28), float32], %var_10444: Tensor[(196), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(2, 10, 2), int32]) {
  %737 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %738 = @func_7784() /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) */;
  %739 = cast(%var_10443, dtype="float32") /* ty=Tensor[(28), float32] */;
  %740 = cast(%var_10444, dtype="float32") /* ty=Tensor[(196), float32] */;
  %741 = reshape(%739, newshape=[28, 1]) /* ty=Tensor[(28, 1), float32] */;
  %742 = reshape(%740, newshape=[49, 4]) /* ty=Tensor[(49, 4), float32] */;
  %743 = @func_3603(%741, %742) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28, 1), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) */;
  %744 = %737.0;
  %745 = %738.1;
  %746 = %743.4;
  %747 = @func_8310() /* ty=Tensor[(2, 10, 2), int32] */;
  (%744, %745, %746, %var_10443, %var_10444, %747)
}

def @func_6514() -> (Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(16), float64]) {
  %748 = cast(meta[relay.Constant][38] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
  %749 = cast(meta[relay.Constant][39] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
  %750 = cast(meta[relay.Constant][40] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %751 = reshape(%748, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %752 = reshape(%749, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
  %753 = reshape(%750, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %754 = @func_3420(%751, %752, %753) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
  %755 = @func_5795() /* ty=Tensor[(2, 10, 2), float32] */;
  %756 = %754.2;
  (%755, %756, meta[relay.Constant][38] /* ty=Tensor[(28), float32] */, meta[relay.Constant][39] /* ty=Tensor[(196), float32] */, meta[relay.Constant][40] /* ty=Tensor[(16), float64] */)
}

def @func_3603(%var_3590: Tensor[(28, 1), float32], %var_3591: Tensor[(49, 4), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28, 1), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) {
  %757 = cast(%var_3590, dtype="float32") /* ty=Tensor[(28, 1), float32] */;
  %758 = cast(%var_3591, dtype="float32") /* ty=Tensor[(49, 4), float32] */;
  %759 = cast(meta[relay.Constant][41] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
  %760 = reshape(%757, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
  %761 = reshape(%758, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
  %762 = reshape(%759, newshape=[16]) /* ty=Tensor[(16), float64] */;
  %763 = @func_3420(%760, %761, %762) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
  %764 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  %765 = %763.1;
  (%764, %765, %var_3590, %var_3591, meta[relay.Constant][41] /* ty=Tensor[(16), float64] */)
}

def @func_7934() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %766 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
  %767 = @func_5844() /* ty=Tensor[(2, 10, 2), float32] */;
  (%766, %767)
}

def @func_396(%var_393: Tensor[(10, 10, 4), float32]) -> (Tensor[(10, 10, 4), float32],) {
  %768 = cast(%var_393, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %769 = atan(%768) /* ty=Tensor[(10, 10, 4), float32] */;
  (%769,)
}

def @func_12162() -> Tensor[(2, 10, 2), float32] {
  %770 = @func_11547() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %770.0
}

def @func_11681(%var_11636: Tensor[(3360, 1), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(3360, 1), float32], Tensor[(2, 10, 2), float32], Tensor[(3, 8, 14), float32], Tensor[(2, 10, 2), float32]) {
  %771 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %772 = cast(%var_11636, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
  %773 = cast(%var_11636, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
  %774 = reshape(%772, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
  %775 = reshape(%773, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
  %776 = @func_3308(%774, %775) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) */;
  %777 = %776.3;
  %778 = cast(%777, dtype="float32") /* ty=Tensor[(3, 8, 14), float32] */;
  %779 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %780 = @func_7341() /* ty=Tensor[(2, 10, 2), float32] */;
  %781 = @func_8310() /* ty=Tensor[(2, 10, 2), int32] */;
  %782 = %771.0;
  %783 = @func_10016() /* ty=Tensor[(2, 10, 2), float32] */;
  %784 = sinh(%778) /* ty=Tensor[(3, 8, 14), float32] */;
  %785 = %779.0;
  (%780, %781, %782, %var_11636, %783, %784, %785)
}

def @func_12264(%var_12233: Tensor[(189), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(189), float64], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64], Tensor[(7, 3, 9), bool], Tensor[(4, 60), float64]) {
  %786 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %787 = cast(meta[relay.Constant][42] /* ty=Tensor[(240, 1), float64] */, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %788 = reshape(%787, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %789 = @func_511(%788) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %790 = cast(%var_12233, dtype="float64") /* ty=Tensor[(189), float64] */;
  %791 = reshape(%790, newshape=[3, 63]) /* ty=Tensor[(3, 63), float64] */;
  %792 = @func_11433(%791) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(7, 3, 9), float64], Tensor[(3, 63), float64]) */;
  %793 = %792.1;
  %794 = cast(meta[relay.Constant][43] /* ty=Tensor[(7, 3, 9), float64] */, dtype="bool") /* ty=Tensor[(7, 3, 9), bool] */;
  %795 = shape_of(%793, dtype="int32") /* ty=Tensor[(3), int32] */;
  %796 = cast(%793, dtype="bool") /* ty=Tensor[(7, 3, 9), bool] */;
  %797 = dyn.reshape(%794, %795, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %798 = @func_11161() /* ty=(Tensor[(4, 60), float64],) */;
  %799 = %786.0;
  %800 = @func_5795() /* ty=Tensor[(2, 10, 2), float32] */;
  %801 = %789.0;
  %802 = logical_or(%796, %797) /* ty=Tensor[(7, 3, 9), bool] */;
  %803 = %798.0;
  (%799, %var_12233, %800, %801, meta[relay.Constant][42] /* ty=Tensor[(240, 1), float64] */, %802, %803)
}

def @func_12590() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %804 = @func_7036() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %805 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %806 = %804.0;
  %807 = %805.0;
  (%806, %807)
}

def @func_15014(%var_15007: Tensor[(168), uint64]) -> (Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64]) {
  %808 = @func_8911() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %809 = cast(%var_15007, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %810 = cast(meta[relay.Constant][44] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %811 = cast(meta[relay.Constant][44] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %812 = reshape(%809, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
  %813 = reshape(%810, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %814 = reshape(%811, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %815 = @func_801(%812, %813, %814) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
  %816 = %808.0;
  %817 = %815.0;
  (%816, %817, %var_15007, meta[relay.Constant][44] /* ty=Tensor[(2016), uint64] */)
}

def @func_1888(%var_1880: int16, %var_1881: Tensor[(14, 9, 5), int16]) -> Tensor[(14, 9, 5), bool] {
  %818 = cast(%var_1880, dtype="bool") /* ty=bool */;
  %819 = cast(%var_1881, dtype="bool") /* ty=Tensor[(14, 9, 5), bool] */;
  less_equal(%818, %819) /* ty=Tensor[(14, 9, 5), bool] */
}

def @func_11811() -> Tensor[(2, 10, 2), int32] {
  %820 = @func_11026() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %820.1
}

def @func_12410() -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), uint16], Tensor[(400), float32]) {
  %821 = @func_11049() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %822 = cast(meta[relay.Constant][45] /* ty=Tensor[(400), int64] */, dtype="int64") /* ty=Tensor[(400), int64] */;
  %823 = reshape(%822, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), int64] */;
  %824 = @func_4501(%823) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(10, 10, 4), uint16], Tensor[(10, 10, 4), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %825 = cast(meta[relay.Constant][46] /* ty=Tensor[(400), int64] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %826 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(400), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %827 = cast(meta[relay.Constant][45] /* ty=Tensor[(400), int64] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %828 = dyn.reshape(%825, %826, newshape=[]) /* ty=Tensor[(?), float32] */;
  %829 = %821.2;
  %830 = %824.1;
  %831 = floor_divide(%827, %828) /* ty=Tensor[(400), float32] */;
  (%829, %830, %831)
}

def @func_13629() -> (Tensor[(2, 10, 2), float32],) {
  %832 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %833 = %832.0;
  (%833,)
}

def @func_5164(%var_5137: Tensor[(16), float64], %var_5138: Tensor[(64), float64]) -> (Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) {
  %834 = cast(%var_5137, dtype="float64") /* ty=Tensor[(16), float64] */;
  %835 = cast(%var_5138, dtype="float64") /* ty=Tensor[(64), float64] */;
  %836 = cast(%var_5138, dtype="float32") /* ty=Tensor[(64), float32] */;
  %837 = reshape(%834, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %838 = reshape(%835, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %839 = reshape(%836, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %840 = @func_3026(%837, %838, %839) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
  %841 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 12), float64] */;
  %842 = atanh(%841) /* ty=Tensor[(1, 8, 12), float64] */;
  %843 = cast(%842, dtype="float64") /* ty=Tensor[(1, 8, 12), float64] */;
  %844 = %840.0;
  %845 = exp(%843) /* ty=Tensor[(1, 8, 12), float64] */;
  (%844, %var_5137, %var_5138, %845)
}

def @func_5706() -> Tensor[(15, 3, 8), float64] {
  %846 = cast(meta[relay.Constant][48] /* ty=Tensor[(15, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 8), float64] */;
  atanh(%846) /* ty=Tensor[(15, 3, 8), float64] */
}

def @func_15350() -> (Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float64]) {
  %847 = @func_14985() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %848 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %849 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %850 = %847.1;
  %851 = %848.1;
  %852 = %849.0;
  (%850, %851, %852)
}

def @func_3026(%var_3002: Tensor[(1, 4, 4), float64], %var_3003: Tensor[(4, 4, 4), float64], %var_3021: Tensor[(4, 4, 4), float32]) -> (Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) {
  %853 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
  %854 = reshape(%853, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
  %855 = @func_2646(%854) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
  %856 = cast(%var_3002, dtype="float64") /* ty=Tensor[(1, 4, 4), float64] */;
  %857 = cast(%var_3003, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
  %858 = floor_divide(%856, %857) /* ty=Tensor[(4, 4, 4), float64] */;
  %859 = cast(%858, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
  %860 = tan(%859) /* ty=Tensor[(4, 4, 4), float32] */;
  %861 = cast(%var_3021, dtype="uint32") /* ty=Tensor[(4, 4, 4), uint32] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(3), int32] */;
  %863 = cast(%860, dtype="uint32") /* ty=Tensor[(4, 4, 4), uint32] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %865 = %855.0;
  %866 = left_shift(%863, %864) /* ty=Tensor[(4, 4, 4), uint32] */;
  (%865, meta[relay.Constant][49] /* ty=Tensor[(1, 400), float32] */, %866)
}

def @func_16128() -> (Tensor[(9, 2, 3), float64], Tensor[(2, 10, 2), int32]) {
  %867 = cast(meta[relay.Constant][50] /* ty=Tensor[(9, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 3), float64] */;
  %868 = asin(%867) /* ty=Tensor[(9, 2, 3), float64] */;
  %869 = @func_9700() /* ty=Tensor[(2, 10, 2), int32] */;
  (%868, %869)
}

def @func_7784() -> (Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) {
  %870 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %871 = @func_5304() /* ty=Tensor[(2, 10, 2), float32] */;
  %872 = cast(%871, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %873 = %870.2;
  %874 = sqrt(%872) /* ty=Tensor[(2, 10, 2), float32] */;
  (%873, %874)
}

def @func_2325() -> Tensor[(4, 60), float64] {
  %875 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %875.2
}

def @func_10612() -> (Tensor[(2, 10, 2), float32],) {
  %876 = @func_4903() /* ty=Tensor[(2, 10, 2), float32] */;
  (%876,)
}

def @func_16041() -> (Tensor[(2, 10, 2), float64], Tensor[(64), float64], Tensor[(400), float32], Tensor[(64), float64]) {
  %877 = cast(meta[relay.Constant][51] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %878 = cast(meta[relay.Constant][52] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %879 = reshape(%877, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %880 = reshape(%878, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %881 = @func_8247(%879, %880) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) */;
  %882 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %883 = %881.6;
  (%882, %883, meta[relay.Constant][51] /* ty=Tensor[(400), float32] */, meta[relay.Constant][52] /* ty=Tensor[(64), float64] */)
}

def @func_15811() -> Tensor[(2, 10, 2), float32] {
  @func_8375() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_2782() -> Tensor[(4, 13, 16), float64] {
  %884 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
  erf(%884) /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_3528() -> Tensor[(2, 10, 2), float32] {
  %885 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %885.0
}

def @func_6435() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %886 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %887 = %886.0;
  %888 = cast(%887, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %889 = reshape(%888, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %890 = @func_2851(%889) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) */;
  %891 = %890.4;
  (%887, %891)
}

def @func_3767() -> (Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) {
  %892 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %893 = %892.3;
  %894 = cast(%893, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %895 = reshape(%894, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %896 = @func_1866(%895) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %897 = %896.0;
  %898 = cast(%897, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %899 = reshape(%898, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %900 = @func_1530(%899) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %901 = %900.0;
  %902 = cast(%901, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %903 = reshape(%902, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %904 = @func_1866(%903) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %905 = %904.0;
  (%893, %897, %901, %905)
}

def @func_5108() -> Tensor[(2, 10, 2), float32] {
  @func_3485() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_11049() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %906 = @func_6435() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %907 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %908 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %909 = %906.0;
  %910 = %907.2;
  %911 = %908.0;
  (%909, %910, %911)
}

def @func_5304() -> Tensor[(2, 10, 2), float32] {
  @func_1557() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_12897(%var_12886: Tensor[(15, 13, 2), float64]) -> (Tensor[(15, 13, 2), float64], Tensor[(2, 10, 2), int32]) {
  %912 = cast(%var_12886, dtype="float64") /* ty=Tensor[(15, 13, 2), float64] */;
  %913 = @func_7611() /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %914 = exp(%912) /* ty=Tensor[(15, 13, 2), float64] */;
  %915 = %913.2;
  (%914, %915)
}

def @func_3485() -> Tensor[(2, 10, 2), float32] {
  %916 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %916.2
}

def @func_3360() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %917 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %918 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %919 = %917.0;
  (%918, %919)
}

def @func_3871(%var_3859: Tensor[(8, 6, 12), float32]) -> (Tensor[(8, 6, 12), float32], Tensor[(240), float64]) {
  %920 = cast(%var_3859, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
  %921 = @func_2947() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %922 = sigmoid(%920) /* ty=Tensor[(8, 6, 12), float32] */;
  %923 = %921.1;
  (%922, %923)
}

def @func_11026() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %924 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %925 = %924.0;
  %926 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  (%925, %926)
}

def @func_14862() -> Tensor[(2, 10, 2), float32] {
  @func_5795() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_7852() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %927 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %928 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
  %929 = %927.0;
  (%928, %929)
}

def @func_8130() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32]) {
  %930 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %931 = @func_4370() /* ty=Tensor[(2, 10, 2), int32] */;
  (%930, %931)
}

def @func_10891() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %932 = @func_7262() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %933 = %932.2;
  %934 = @func_10016() /* ty=Tensor[(2, 10, 2), float32] */;
  (%933, %934)
}

def @func_9027(%var_8934: Tensor[(6, 10, 9), float32], %var_8935: Tensor[(6, 10, 9), float32], %var_8989: Tensor[(64), float64], %var_9020: Tensor[(825), float64]) -> (Tensor[(6, 10, 9), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(64), float64], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(825), float64]) {
  %935 = cast(%var_8935, dtype="float32") /* ty=Tensor[(6, 10, 9), float32] */;
  %936 = shape_of(%var_8934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %937 = cast(%var_8934, dtype="float32") /* ty=Tensor[(6, 10, 9), float32] */;
  %938 = dyn.reshape(%935, %936, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %939 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %940 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %941 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
  %942 = cast(%var_8989, dtype="float64") /* ty=Tensor[(64), float64] */;
  %943 = reshape(%941, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %944 = reshape(%942, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %945 = @func_8247(%943, %944) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) */;
  %946 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %947 = cast(%var_9020, dtype="float64") /* ty=Tensor[(825), float64] */;
  %948 = reshape(%947, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %949 = @func_4731(%948) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(168), uint64], Tensor[(168), uint64], Tensor[(825), float64]) */;
  %950 = minimum(%937, %938) /* ty=Tensor[(6, 10, 9), float32] */;
  %951 = %939.0;
  %952 = %940.3;
  %953 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
  %954 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
  %955 = %945.0;
  %956 = %946.0;
  %957 = %949.0;
  (%950, %951, %952, %953, %954, %955, meta[relay.Constant][54] /* ty=Tensor[(1, 400), float32] */, %var_8989, %956, %957, %var_9020)
}

def @func_2047() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) {
  %958 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %959 = cast(%958, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %960 = reshape(%959, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %961 = @func_1530(%960) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %962 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %963 = %962.0;
  %964 = cast(%963, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %965 = reshape(%964, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %966 = @func_1530(%965) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %967 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 10, 2), float32] */, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %968 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%963, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %971 = %961.0;
  %972 = %966.1;
  %973 = not_equal(%969, %970) /* ty=Tensor[(2, 10, 2), bool] */;
  (%958, %971, %972, %973)
}

def @func_11995(%var_11971: Tensor[(1120), int64], %var_11973: Tensor[(117, 1), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(117), float32], Tensor[(4, 28), int64], Tensor[(1120), int64], Tensor[(2, 24), float64], Tensor[(117, 1), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float32]) {
  %974 = @func_10000() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %975 = cast(meta[relay.Constant][56] /* ty=Tensor[(4, 28), int64] */, dtype="int64") /* ty=Tensor[(4, 28), int64] */;
  %976 = cast(%var_11971, dtype="int64") /* ty=Tensor[(1120), int64] */;
  %977 = cast(meta[relay.Constant][57] /* ty=Tensor[(2, 24), float64] */, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %978 = cast(%var_11973, dtype="float32") /* ty=Tensor[(117, 1), float32] */;
  %979 = reshape(%975, newshape=[7, 16, 1]) /* ty=Tensor[(7, 16, 1), int64] */;
  %980 = reshape(%976, newshape=[7, 16, 10]) /* ty=Tensor[(7, 16, 10), int64] */;
  %981 = reshape(%977, newshape=[24, 2]) /* ty=Tensor[(24, 2), float64] */;
  %982 = reshape(%978, newshape=[117]) /* ty=Tensor[(117), float32] */;
  %983 = @func_9122(%979, %980, %981, %982) /* ty=(Tensor[(7, 16, 10), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(24, 2), float64], Tensor[(117), float32]) */;
  %984 = @func_3767() /* ty=(Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) */;
  %985 = %974.0;
  %986 = @func_7341() /* ty=Tensor[(2, 10, 2), float32] */;
  %987 = %983.4;
  %988 = %984.0;
  %989 = @func_8515() /* ty=Tensor[(2, 10, 2), float32] */;
  (%985, %986, %987, meta[relay.Constant][56] /* ty=Tensor[(4, 28), int64] */, %var_11971, meta[relay.Constant][57] /* ty=Tensor[(2, 24), float64] */, %var_11973, %988, %989)
}

def @func_2590(%var_2527: Tensor[(168), uint64], %var_2539: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(36, 12), int16], Tensor[(825), float64], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360, 1), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float32]) {
  %990 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %991 = %990.0;
  %992 = cast(%991, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %993 = cast(%var_2527, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %994 = cast(meta[relay.Constant][58] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %995 = cast(meta[relay.Constant][58] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %996 = reshape(%993, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
  %997 = reshape(%994, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %998 = reshape(%995, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %999 = @func_801(%996, %997, %998) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
  %1000 = cast(%var_2539, dtype="float64") /* ty=Tensor[(825), float64] */;
  %1001 = reshape(%1000, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %1002 = @func_1933(%1001) /* ty=(Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) */;
  %1003 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1004 = cast(meta[relay.Constant][59] /* ty=Tensor[(3360, 1), float32] */, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
  %1005 = reshape(%1004, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %1006 = @func_1901(%1005) /* ty=(Tensor[(14, 15, 16), float32],) */;
  %1007 = %1002.2;
  %1008 = cast(%1007, dtype="int16") /* ty=Tensor[(36, 12), int16] */;
  %1009 = reshape(%1008, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), int16] */;
  %1010 = @func_918(%1009) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */;
  %1011 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1012 = cosh(%992) /* ty=Tensor[(2, 10, 2), float64] */;
  %1013 = %999.0;
  %1014 = %1003.0;
  %1015 = %1006.0;
  %1016 = %1010.1;
  %1017 = %1011.0;
  (%1012, %1013, %var_2527, meta[relay.Constant][58] /* ty=Tensor[(2016), uint64] */, %1007, %var_2539, %1014, %1015, meta[relay.Constant][59] /* ty=Tensor[(3360, 1), float32] */, %1016, %1017)
}

def @func_14668(%var_14640: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), int32], Tensor[(480), float32], Tensor[(1024), float64], Tensor[(64), float64], Tensor[(480), float32]) {
  %1018 = cast(meta[relay.Constant][60] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1019 = cast(meta[relay.Constant][60] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
  %1020 = cast(%var_14640, dtype="float64") /* ty=Tensor[(64), float64] */;
  %1021 = cast(meta[relay.Constant][61] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1022 = reshape(%1018, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), float64] */;
  %1023 = reshape(%1019, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), float64] */;
  %1024 = reshape(%1020, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
  %1025 = reshape(%1021, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1026 = @func_6346(%1022, %1023, %1024, %1025) /* ty=(Tensor[(1, 8, 12), float64], Tensor[(4, 4), float64], Tensor[(32, 2), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16, 4, 16), float32]) */;
  %1027 = @func_3459() /* ty=Tensor[(2, 10, 2), int32] */;
  %1028 = %1026.3;
  (%1027, %1028, meta[relay.Constant][60] /* ty=Tensor[(1024), float64] */, %var_14640, meta[relay.Constant][61] /* ty=Tensor[(480), float32] */)
}

def @main(%var_16169: Tensor[(16, 15, 4), uint16]) -> (Tensor[(16, 15, 4), uint16],) {
  %1029 = cast(meta[relay.Constant][62] /* ty=Tensor[(16, 15, 4), uint16] */, dtype="uint16") /* ty=Tensor[(16, 15, 4), uint16] */;
  %1030 = shape_of(%var_16169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(%var_16169, dtype="uint16") /* ty=Tensor[(16, 15, 4), uint16] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1033 = bitwise_or(%1031, %1032) /* ty=Tensor[(16, 15, 4), uint16] */;
  (%1033,)
}

def @func_8282(%var_8258: Tensor[(7, 11, 4), uint16], %var_8259: Tensor[(7, 11, 4), uint16]) -> Tensor[(7, 11, 4), uint16] {
  %1034 = cast(%var_8259, dtype="uint16") /* ty=Tensor[(7, 11, 4), uint16] */;
  %1035 = shape_of(%var_8258, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%var_8258, dtype="uint16") /* ty=Tensor[(7, 11, 4), uint16] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  subtract(%1036, %1037) /* ty=Tensor[(7, 11, 4), uint16] */
}

def @func_6142() -> (Tensor[(14, 15, 16), float64], Tensor[(2, 10, 2), int32]) {
  %1038 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
  %1039 = %1038.2;
  %1040 = cast(%1039, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %1041 = asinh(%1040) /* ty=Tensor[(14, 15, 16), float64] */;
  %1042 = @func_3459() /* ty=Tensor[(2, 10, 2), int32] */;
  (%1041, %1042)
}

def @func_14985() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %1043 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %1044 = @func_11142() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) */;
  %1045 = @func_6435() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1046 = %1043.0;
  %1047 = %1044.2;
  %1048 = %1045.0;
  %1049 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  (%1046, %1047, %1048, %1049)
}

def @func_7521() -> Tensor[(2, 10, 2), float64] {
  @func_6176() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_6000() -> Tensor[(2, 10, 2), float64] {
  %1050 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %1050.0
}

def @func_10366() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %1051 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1052 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %1053 = %1051.2;
  %1054 = cast(%1053, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %1055 = reshape(%1054, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %1056 = @func_1530(%1055) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %1057 = @func_8515() /* ty=Tensor[(2, 10, 2), float32] */;
  %1058 = %1052.0;
  %1059 = %1056.1;
  (%1057, %1053, %1058, %1059)
}

def @func_3186() -> (Tensor[(2, 10, 2), float32],) {
  %1060 = @func_3145() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1060,)
}

def @func_9660(%var_9629: float64, %var_9630: Tensor[(390), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(15, 13, 2), bool], float64, Tensor[(390), float64], Tensor[(2, 10, 2), float32]) {
  %1061 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1062 = @func_7611() /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %1063 = cast(%var_9629, dtype="float64") /* ty=float64 */;
  %1064 = cast(%var_9630, dtype="float64") /* ty=Tensor[(390), float64] */;
  %1065 = reshape(%1063, newshape=[]) /* ty=float64 */;
  %1066 = reshape(%1064, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), float64] */;
  %1067 = @func_4077(%1065, %1066) /* ty=(Tensor[(15, 13, 2), bool], Tensor[(2, 10, 2), float32]) */;
  %1068 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1069 = %1061.2;
  %1070 = %1062.2;
  %1071 = %1067.0;
  %1072 = %1068.1;
  (%1069, %1070, %1071, %var_9629, %var_9630, %1072)
}

def @func_6198() -> Tensor[(2, 10, 2), float32] {
  @func_5795() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_15611() -> (Tensor[(2, 10, 2), float32],) {
  %1073 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1074 = %1073.1;
  (%1074,)
}

def @func_1391() -> Tensor[(2, 10, 2), float32] {
  @func_1353() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_105(%var_38: uint8, %var_39: Tensor[(13, 5, 16), uint8]) -> Tensor[(13, 5, 16), uint8] {
  %1075 = cast(%var_38, dtype="uint8") /* ty=uint8 */;
  %1076 = cast(%var_39, dtype="uint8") /* ty=Tensor[(13, 5, 16), uint8] */;
  subtract(%1075, %1076) /* ty=Tensor[(13, 5, 16), uint8] */
}

def @func_8538() -> (Tensor[(4, 60), float64],) {
  %1077 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %1078 = %1077.1;
  (%1078,)
}

def @func_7262() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
  %1079 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %1080 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1081 = %1079.0;
  %1082 = %1080.0;
  %1083 = @func_3145() /* ty=Tensor[(2, 10, 2), float32] */;
  %1084 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
  (%1081, %1082, %1083, %1084)
}

def @func_7045() -> Tensor[(2, 10, 2), float32] {
  %1085 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1085.1
}

def @func_11433(%var_11429: Tensor[(3, 63), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(7, 3, 9), float64], Tensor[(3, 63), float64]) {
  %1086 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1087 = cast(%var_11429, dtype="float64") /* ty=Tensor[(3, 63), float64] */;
  %1088 = reshape(%1087, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), float64] */;
  %1089 = @func_10846(%1088) /* ty=(Tensor[(7, 3, 9), float64],) */;
  %1090 = %1086.1;
  %1091 = %1089.0;
  (%1090, %1091, %var_11429)
}

def @func_1573() -> Tensor[(2, 10, 2), float32] {
  @func_1557() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_4077(%var_4063: float64, %var_4064: Tensor[(15, 13, 2), float64]) -> (Tensor[(15, 13, 2), bool], Tensor[(2, 10, 2), float32]) {
  %1092 = cast(%var_4063, dtype="bool") /* ty=bool */;
  %1093 = cast(%var_4064, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %1094 = equal(%1092, %1093) /* ty=Tensor[(15, 13, 2), bool] */;
  %1095 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1094, %1095)
}

def @func_3459() -> Tensor[(2, 10, 2), int32] {
  @func_2684() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_7762() -> (Tensor[(2, 10, 2), int32],) {
  %1096 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  (%1096,)
}

def @func_16159() -> (Tensor[(2, 10, 2), float32],) {
  %1097 = @func_13502() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(40, 12), float32]) */;
  %1098 = %1097.0;
  (%1098,)
}

def @func_16070() -> Tensor[(2, 10, 2), float32] {
  %1099 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1099.0
}

def @func_7901() -> (Tensor[(4, 60), float64], Tensor[(4, 60), float32]) {
  %1100 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %1101 = @func_5296() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %1102 = %1101.1;
  %1103 = cast(%1102, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %1104 = %1100.1;
  %1105 = asin(%1103) /* ty=Tensor[(4, 60), float32] */;
  (%1104, %1105)
}

def @func_15563(%var_15545: Tensor[(5, 9, 6), float64], %var_15561: Tensor[(200, 2), float32]) -> (Tensor[(5, 9, 6), float64], Tensor[(2, 10, 2), float32], Tensor[(200, 2), float32]) {
  %1106 = cast(%var_15545, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
  %1107 = cast(%var_15561, dtype="float32") /* ty=Tensor[(200, 2), float32] */;
  %1108 = reshape(%1107, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %1109 = @func_4435(%1108) /* ty=(Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) */;
  %1110 = acosh(%1106) /* ty=Tensor[(5, 9, 6), float64] */;
  %1111 = %1109.1;
  (%1110, %1111, %var_15561)
}

def @func_11084() -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %1112 = @func_10891() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1113 = @func_7723() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1114 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
  %1115 = %1112.1;
  %1116 = %1113.0;
  (%1114, %1115, %1116)
}

def @func_8068() -> (Tensor[(2, 10, 2), float64],) {
  %1117 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
  (%1117,)
}

def @func_1549() -> (Tensor[(2, 10, 2), float32],) {
  %1118 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %1119 = %1118.0;
  (%1119,)
}

def @func_628(%var_608: Tensor[(15, 16, 2), float32], %var_614: Tensor[(15, 16, 2), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
  %1120 = cast(%var_608, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
  %1121 = cast(%var_614, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %1122 = shape_of(%var_608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1123 = cast(%var_608, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
  %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1125 = sin(%1120) /* ty=Tensor[(15, 16, 2), float32] */;
  %1126 = logical_or(%1123, %1124) /* ty=Tensor[(15, 16, 2), bool] */;
  (%1125, %1126)
}

def @func_4338() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  %1127 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %1128 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  (%1127, %1128)
}

def @func_1933(%var_1916: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) {
  %1129 = cast(%var_1916, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
  %1130 = acosh(%1129) /* ty=Tensor[(11, 15, 5), float64] */;
  %1131 = cast(%var_1916, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
  %1132 = shape_of(%1130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1133 = cast(%1130, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
  %1134 = dyn.reshape(%1131, %1132, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1135 = cast(meta[relay.Constant][63] /* ty=Tensor[(36, 12), int16] */, dtype="int16") /* ty=Tensor[(36, 12), int16] */;
  %1136 = reshape(%1135, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), int16] */;
  %1137 = @func_918(%1136) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */;
  %1138 = logical_or(%1133, %1134) /* ty=Tensor[(11, 15, 5), bool] */;
  %1139 = %1137.2;
  (%1138, %1139, meta[relay.Constant][63] /* ty=Tensor[(36, 12), int16] */)
}

def @func_6040() -> (Tensor[(2, 10, 2), float32],) {
  %1140 = @func_4645() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1141 = %1140.0;
  (%1141,)
}

def @func_2465(%var_2394: int16, %var_2395: Tensor[(630), int16], %var_2401: Tensor[(1040), uint8]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32], Tensor[(14, 9, 5), bool], Tensor[(630), int16], Tensor[(13, 5, 16), uint8], Tensor[(15, 16, 2), bool], Tensor[(480), float32], Tensor[(2, 10, 2), bool], Tensor[(1040), bool], Tensor[(1040), int64]) {
  %1142 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  %1143 = cast(%1142, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %1144 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %1145 = cast(%var_2394, dtype="int16") /* ty=int16 */;
  %1146 = cast(%var_2395, dtype="int16") /* ty=Tensor[(630), int16] */;
  %1147 = reshape(%1145, newshape=[]) /* ty=int16 */;
  %1148 = reshape(%1146, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int16] */;
  %1149 = cast(%var_2394, dtype="uint8") /* ty=uint8 */;
  %1150 = cast(%var_2401, dtype="uint8") /* ty=Tensor[(1040), uint8] */;
  %1151 = reshape(%1149, newshape=[]) /* ty=uint8 */;
  %1152 = reshape(%1150, newshape=[13, 5, 16]) /* ty=Tensor[(13, 5, 16), uint8] */;
  %1153 = cast(meta[relay.Constant][64] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1154 = cast(meta[relay.Constant][64] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1155 = reshape(%1153, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %1156 = reshape(%1154, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %1157 = @func_628(%1155, %1156) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
  %1158 = %1144.0;
  %1159 = cast(%1158, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %1160 = reshape(%1159, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %1161 = @func_1866(%1160) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %1162 = %1161.0;
  %1163 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1164 = %1163.1;
  %1165 = cast(%1164, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %1166 = shape_of(%1162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1167 = cast(%1162, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %1168 = dyn.reshape(%1165, %1166, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1169 = cast(%var_2401, dtype="bool") /* ty=Tensor[(1040), bool] */;
  %1170 = cast(%var_2394, dtype="bool") /* ty=bool */;
  %1171 = cast(meta[relay.Constant][65] /* ty=Tensor[(1040), uint8] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %1172 = shape_of(%var_2401, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1173 = cast(%var_2401, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %1174 = dyn.reshape(%1171, %1172, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1175 = sinh(%1143) /* ty=Tensor[(2, 10, 2), float64] */;
  %1176 = @func_1888(%1147, %1148) /* ty=Tensor[(14, 9, 5), bool] */;
  %1177 = @func_105(%1151, %1152) /* ty=Tensor[(13, 5, 16), uint8] */;
  %1178 = %1157.1;
  %1179 = less_equal(%1167, %1168) /* ty=Tensor[(2, 10, 2), bool] */;
  %1180 = greater_equal(%1169, %1170) /* ty=Tensor[(1040), bool] */;
  %1181 = add(%1173, %1174) /* ty=Tensor[(1040), int64] */;
  (%1175, %1158, %1176, %var_2395, %1177, %1178, meta[relay.Constant][64] /* ty=Tensor[(480), float32] */, %1179, %1180, %1181)
}

def @func_13980() -> (Tensor[(2, 10, 2), float32],) {
  %1182 = @func_9368() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1182,)
}

def @func_13997(%var_13983: Tensor[(14, 8, 3), bool], %var_13995: Tensor[(400), float32]) -> (Tensor[(14, 8, 3), bool], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(400), float32]) {
  %1183 = cast(%var_13983, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %1184 = shape_of(meta[relay.Constant][66] /* ty=Tensor[(14, 8, 3), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(meta[relay.Constant][66] /* ty=Tensor[(14, 8, 3), bool] */, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1187 = @func_11026() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %1188 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1189 = cast(%var_13995, dtype="float32") /* ty=Tensor[(400), float32] */;
  %1190 = reshape(%1189, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %1191 = @func_13343(%1190) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) */;
  %1192 = logical_or(%1185, %1186) /* ty=Tensor[(14, 8, 3), bool] */;
  %1193 = %1187.1;
  %1194 = %1188.0;
  %1195 = %1191.1;
  (%1192, %1193, %1194, %1195, %var_13995)
}

def @func_8422(%var_8394: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) {
  %1196 = @func_5361() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) */;
  %1197 = cast(%var_8394, dtype="float64") /* ty=Tensor[(825), float64] */;
  %1198 = reshape(%1197, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %1199 = @func_1933(%1198) /* ty=(Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) */;
  %1200 = cast(meta[relay.Constant][67] /* ty=Tensor[(825), float64] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %1201 = shape_of(%var_8394, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1202 = cast(%var_8394, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %1203 = dyn.reshape(%1200, %1201, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %1204 = @func_3485() /* ty=Tensor[(2, 10, 2), float32] */;
  %1205 = %1196.0;
  %1206 = %1199.1;
  %1207 = bitwise_xor(%1202, %1203) /* ty=Tensor[(825), uint8] */;
  (%1204, %1205, %1206, %1207)
}

def @func_13255() -> Tensor[(2, 10, 2), float64] {
  @func_6000() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_3961() -> Tensor[(3360), float32] {
  %1208 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
  %1208.3
}

def @func_14150() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) {
  %1209 = @func_8911() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %1210 = @func_11535() /* ty=Tensor[(2, 10, 2), float32] */;
  %1211 = @func_12162() /* ty=Tensor[(2, 10, 2), float32] */;
  %1212 = %1209.1;
  (%1210, %1211, %1212)
}

def @func_13529() -> (Tensor[(2, 10, 2), float32],) {
  %1213 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1214 = %1213.0;
  (%1214,)
}

def @func_9720() -> Tensor[(4, 13, 16), float64] {
  %1215 = @func_5972() /* ty=Tensor[(4, 13, 16), float64] */;
  %1216 = cast(%1215, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
  acosh(%1216) /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_9616() -> Tensor[(2, 10, 2), float32] {
  @func_5108() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_13502() -> (Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(40, 12), float32]) {
  %1217 = cast(meta[relay.Constant][68] /* ty=Tensor[(40, 12), float32] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %1218 = reshape(%1217, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %1219 = @func_3833(%1218) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
  %1220 = @func_5108() /* ty=Tensor[(2, 10, 2), float32] */;
  %1221 = %1219.4;
  (%1220, %1221, meta[relay.Constant][68] /* ty=Tensor[(40, 12), float32] */)
}

def @func_3977() -> (Tensor[(2, 10, 2), float32],) {
  %1222 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1222,)
}

def @func_5361() -> (Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) {
  %1223 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1224 = cast(meta[relay.Constant][69] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1225 = cast(meta[relay.Constant][69] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %1226 = reshape(%1224, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %1227 = reshape(%1225, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %1228 = @func_628(%1226, %1227) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
  %1229 = %1223.0;
  %1230 = %1228.1;
  (%1229, %1230, meta[relay.Constant][69] /* ty=Tensor[(480), float32] */)
}

def @func_9368() -> Tensor[(2, 10, 2), float32] {
  @func_5795() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8515() -> Tensor[(2, 10, 2), float32] {
  %1231 = @func_6435() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1231.1
}

def @func_14255() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  %1232 = @func_9897() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
  %1233 = %1232.1;
  %1234 = @func_13255() /* ty=Tensor[(2, 10, 2), float64] */;
  (%1233, %1234)
}

def @func_14308() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %1235 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %1236 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1237 = %1235.0;
  %1238 = %1236.0;
  (%1237, %1238)
}

def @func_5483() -> (Tensor[(2, 10, 2), float32],) {
  %1239 = @func_5304() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1239,)
}

def @func_11894(%var_11869: Tensor[(16), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(64), float64], Tensor[(16), float64], Tensor[(4, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(336), float64], Tensor[(3360), float32]) {
  %1240 = @func_4645() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1241 = cast(%var_11869, dtype="float64") /* ty=Tensor[(16), float64] */;
  %1242 = cast(meta[relay.Constant][70] /* ty=Tensor[(4, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
  %1243 = reshape(%1241, newshape=[16, 1]) /* ty=Tensor[(16, 1), float64] */;
  %1244 = reshape(%1242, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %1245 = @func_6998(%1243, %1244) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(3360), float32], Tensor[(8, 10, 5), float32], Tensor[(16, 1), float64], Tensor[(64), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %1246 = @func_7611() /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %1247 = cast(meta[relay.Constant][71] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %1248 = cast(meta[relay.Constant][71] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
  %1249 = reshape(%1247, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
  %1250 = reshape(%1248, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
  %1251 = @func_3308(%1249, %1250) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) */;
  %1252 = %1240.0;
  %1253 = %1245.4;
  %1254 = %1246.1;
  %1255 = @func_6176() /* ty=Tensor[(2, 10, 2), float64] */;
  %1256 = %1251.4;
  (%1252, %1253, %var_11869, meta[relay.Constant][70] /* ty=Tensor[(4, 16), float64] */, %1254, %1255, %1256, meta[relay.Constant][71] /* ty=Tensor[(3360), float32] */)
}

def @func_6569() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32]) {
  %1257 = @func_5296() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %1258 = @func_5765() /* ty=(Tensor[(4, 13, 16), float64],) */;
  %1259 = %1257.0;
  %1260 = %1258.0;
  %1261 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1259, %1260, %1261)
}

def @func_15450() -> (Tensor[(2, 10, 2), float32],) {
  %1262 = @func_11547() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1263 = %1262.0;
  (%1263,)
}

def @func_9433(%var_9429: Tensor[(10, 420), float32]) -> (Tensor[(2, 10, 2), int32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 420), int16]) {
  %1264 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %1265 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 420), float32] */, dtype="float32") /* ty=Tensor[(1, 420), float32] */;
  %1266 = reshape(%1265, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), float32] */;
  %1267 = @func_9294(%1266) /* ty=(Tensor[(10, 14, 3), float32], Tensor[(4, 13, 16), float64]) */;
  %1268 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1269 = cast(meta[relay.Constant][72] /* ty=Tensor[(1, 420), float32] */, dtype="int16") /* ty=Tensor[(1, 420), int16] */;
  %1270 = cast(%var_9429, dtype="int16") /* ty=Tensor[(10, 420), int16] */;
  %1271 = %1264.0;
  %1272 = %1267.1;
  %1273 = %1268.1;
  %1274 = maximum(%1269, %1270) /* ty=Tensor[(10, 420), int16] */;
  (%1271, %1272, %1273, %1274)
}

def @func_15979() -> (Tensor[(2, 10, 2), float32],) {
  %1275 = @func_10970() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1276 = %1275.0;
  (%1276,)
}

def @func_15540(%var_15526: Tensor[(14, 11, 5), float32]) -> (Tensor[(14, 11, 5), float32], Tensor[(2, 10, 2), float32]) {
  %1277 = cast(%var_15526, dtype="float32") /* ty=Tensor[(14, 11, 5), float32] */;
  %1278 = acosh(%1277) /* ty=Tensor[(14, 11, 5), float32] */;
  %1279 = @func_11301() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1278, %1279)
}

def @func_14290() -> Tensor[(2, 10, 2), float32] {
  %1280 = @func_11595() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1280.0
}

def @func_5012(%var_4995: Tensor[(400), float32], %var_5004: Tensor[(240), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) {
  %1281 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1282 = cast(%var_4995, dtype="float32") /* ty=Tensor[(400), float32] */;
  %1283 = reshape(%1282, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %1284 = @func_396(%1283) /* ty=(Tensor[(10, 10, 4), float32],) */;
  %1285 = @func_2947() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1286 = cast(%var_5004, dtype="float64") /* ty=Tensor[(240), float64] */;
  %1287 = reshape(%1286, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %1288 = @func_511(%1287) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %1289 = %1281.0;
  %1290 = %1284.0;
  %1291 = %1285.0;
  %1292 = %1288.0;
  (%1289, %1290, %var_4995, %1291, %1292, %var_5004)
}

def @func_2288() -> (Tensor[(2, 10, 2), float32],) {
  %1293 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1293,)
}

def @func_8247(%var_8177: Tensor[(400), float32], %var_8205: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) {
  %1294 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1295 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %1296 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %1297 = cast(meta[relay.Constant][73] /* ty=Tensor[(8, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 2), float64] */;
  %1298 = cast(%var_8205, dtype="float64") /* ty=Tensor[(64), float64] */;
  %1299 = cast(%var_8205, dtype="float32") /* ty=Tensor[(64), float32] */;
  %1300 = reshape(%1297, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %1301 = reshape(%1298, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %1302 = reshape(%1299, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %1303 = @func_3026(%1300, %1301, %1302) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
  %1304 = cast(%var_8177, dtype="float32") /* ty=Tensor[(400), float32] */;
  %1305 = reshape(%1304, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %1306 = @func_396(%1305) /* ty=(Tensor[(10, 10, 4), float32],) */;
  %1307 = %1306.0;
  %1308 = cast(%1307, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
  %1309 = @func_2892() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %1310 = %1294.0;
  %1311 = %1295.3;
  %1312 = %1296.3;
  %1313 = %1303.2;
  %1314 = @func_3961() /* ty=Tensor[(3360), float32] */;
  %1315 = rsqrt(%1308) /* ty=Tensor[(10, 10, 4), float64] */;
  %1316 = %1309.1;
  (%1310, %1311, %var_8177, %1312, %1313, meta[relay.Constant][73] /* ty=Tensor[(8, 2), float64] */, %var_8205, %1314, %1315, %1316)
}

def @func_9599(%var_9584: Tensor[(15, 10, 13), uint8], %var_9585: Tensor[(15, 10, 13), uint8]) -> (Tensor[(15, 10, 13), bool], Tensor[(15, 10, 13), float32]) {
  %1317 = cast(%var_9585, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
  %1318 = shape_of(%var_9584, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1319 = cast(%var_9584, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
  %1320 = dyn.reshape(%1317, %1318, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1321 = cast(meta[relay.Constant][74] /* ty=Tensor[(15, 10, 13), uint8] */, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %1322 = shape_of(%var_9585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1323 = cast(%var_9585, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
  %1324 = dyn.reshape(%1321, %1322, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1325 = less_equal(%1319, %1320) /* ty=Tensor[(15, 10, 13), bool] */;
  %1326 = power(%1323, %1324) /* ty=Tensor[(15, 10, 13), float32] */;
  (%1325, %1326)
}

def @func_9700() -> Tensor[(2, 10, 2), int32] {
  %1327 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %1327.0
}

def @func_1557() -> Tensor[(2, 10, 2), float32] {
  %1328 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1328.0
}

def @func_9122(%var_9092: Tensor[(7, 16, 1), int64], %var_9093: Tensor[(7, 16, 10), int64], %var_9118: Tensor[(24, 2), float64], %var_9119: Tensor[(117), float32]) -> (Tensor[(7, 16, 10), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(24, 2), float64], Tensor[(117), float32]) {
  %1329 = cast(%var_9092, dtype="bool") /* ty=Tensor[(7, 16, 1), bool] */;
  %1330 = cast(%var_9093, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
  %1331 = @func_7934() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1332 = cast(%var_9118, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
  %1333 = cast(%var_9119, dtype="float32") /* ty=Tensor[(117), float32] */;
  %1334 = reshape(%1332, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
  %1335 = reshape(%1333, newshape=[117, 1]) /* ty=Tensor[(117, 1), float32] */;
  %1336 = @func_4567(%1334, %1335) /* ty=(Tensor[(2, 3, 8), float64], Tensor[(3, 3, 13), float32], Tensor[(117, 1), float32]) */;
  %1337 = greater_equal(%1329, %1330) /* ty=Tensor[(7, 16, 10), bool] */;
  %1338 = %1331.0;
  %1339 = %1336.2;
  (%1337, %1338, %1339, %var_9118, %var_9119)
}

def @func_11349() -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) {
  %1340 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
  %1341 = @func_11301() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1340, %1341)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12162() -> Tensor[(2, 10, 2), float32] {
  %0 = @func_11547() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %0.0
}

def @func_16041() -> (Tensor[(2, 10, 2), float64], Tensor[(64), float64], Tensor[(400), float32], Tensor[(64), float64]) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(64), float64] */, dtype="float64") /* ty=Tensor[(64), float64] */;
  %3 = reshape(%1, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %4 = reshape(%2, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %5 = @func_8247(%3, %4) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) */;
  %6 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %7 = %5.6;
  (%6, %7, meta[relay.Constant][0] /* ty=Tensor[(400), float32] */, meta[relay.Constant][1] /* ty=Tensor[(64), float64] */)
}

def @func_7153() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %12 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
    %8 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %9 = @func_7045() /* ty=Tensor[(2, 10, 2), float32] */;
    %10 = %8.0;
    %11 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
    (%9, %10, %11)
  };
  %12() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */
}

def @func_12718() -> Tensor[(2, 10, 2), float32] {
  @func_9368() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_5484() -> (Tensor[(2, 10, 2), float32],) {
  %14 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %13 = @func_5304() /* ty=Tensor[(2, 10, 2), float32] */;
    (%13,)
  };
  %14() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_12633(%var_12630: Tensor[(9, 15, 14), int8], %var_12631: Tensor[(9, 15, 14), int8], %var_12632: Tensor[(400), float32]) -> (Tensor[(9, 15, 14), int8], Tensor[(400), float32], Tensor[(8, 10, 5), float32]) {
  %26 = fn (%var_12612: Tensor[(9, 15, 14), int8], %var_12613: Tensor[(9, 15, 14), int8], %var_12618: Tensor[(400), float32]) -> (Tensor[(9, 15, 14), int8], Tensor[(400), float32], Tensor[(8, 10, 5), float32]) {
    %15 = cast(%var_12613, dtype="int8") /* ty=Tensor[(9, 15, 14), int8] */;
    %16 = shape_of(%var_12612, dtype="int32") /* ty=Tensor[(3), int32] */;
    %17 = cast(%var_12612, dtype="int8") /* ty=Tensor[(9, 15, 14), int8] */;
    %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %19 = cast(%var_12618, dtype="float32") /* ty=Tensor[(400), float32] */;
    %20 = reshape(%19, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
    %21 = @func_2646(%20) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
    %22 = %21.1;
    %23 = cast(%22, dtype="float32") /* ty=Tensor[(8, 10, 5), float32] */;
    %24 = minimum(%17, %18) /* ty=Tensor[(9, 15, 14), int8] */;
    %25 = exp(%23) /* ty=Tensor[(8, 10, 5), float32] */;
    (%24, %var_12618, %25)
  };
  %26(%var_12630, %var_12631, %var_12632) /* ty=(Tensor[(9, 15, 14), int8], Tensor[(400), float32], Tensor[(8, 10, 5), float32]) */
}

def @func_15487() -> (Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64]) {
  %29 = fn () -> (Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64]) {
    %27 = @func_13359() /* ty=Tensor[(2, 10, 2), int32] */;
    %28 = @func_13255() /* ty=Tensor[(2, 10, 2), float64] */;
    (%27, %28)
  };
  %29() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64]) */
}

def @func_7959() -> (Tensor[(2, 10, 2), float32],) {
  @func_7957() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_12412() -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), uint16], Tensor[(400), float32]) {
  @func_12410() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), uint16], Tensor[(400), float32]) */
}

def @func_2290() -> (Tensor[(2, 10, 2), float32],) {
  @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_7172() -> (Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) {
  @func_7170() /* ty=(Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) */
}

def @func_9091() -> (Tensor[(2, 10, 2), float32],) {
  %32 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %30 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %31 = %30.0;
    (%31,)
  };
  %32() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_8784() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) {
  %44 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) {
    %33 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %34 = cast(meta[relay.Constant][2] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %35 = cast(meta[relay.Constant][3] /* ty=Tensor[(49, 4), float32] */, dtype="float32") /* ty=Tensor[(49, 4), float32] */;
    %36 = cast(meta[relay.Constant][4] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %37 = reshape(%34, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
    %38 = reshape(%35, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
    %39 = reshape(%36, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %40 = @func_3420(%37, %38, %39) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
    %41 = %33.1;
    %42 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
    %43 = %40.0;
    (%41, %42, %43, meta[relay.Constant][2] /* ty=Tensor[(28), float32] */, meta[relay.Constant][3] /* ty=Tensor[(49, 4), float32] */, meta[relay.Constant][4] /* ty=Tensor[(16), float64] */)
  };
  %44() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) */
}

def @func_7903() -> (Tensor[(4, 60), float64], Tensor[(4, 60), float32]) {
  @func_7901() /* ty=(Tensor[(4, 60), float64], Tensor[(4, 60), float32]) */
}

def @func_13963(%var_13958: Tensor[(200, 2), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(8, 10, 5), float32], Tensor[(2, 10, 2), int32], Tensor[(200, 2), int64]) {
  %45 = @func_11049() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %46 = cast(meta[relay.Constant][5] /* ty=Tensor[(200, 2), float32] */, dtype="float32") /* ty=Tensor[(200, 2), float32] */;
  %47 = reshape(%46, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
  %48 = @func_2646(%47) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
  %49 = cast(%var_13958, dtype="int64") /* ty=Tensor[(200, 2), int64] */;
  %50 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(200, 2), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %51 = cast(meta[relay.Constant][5] /* ty=Tensor[(200, 2), float32] */, dtype="int64") /* ty=Tensor[(200, 2), int64] */;
  %52 = dyn.reshape(%49, %50, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %53 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
  %54 = %45.1;
  %55 = @func_9211() /* ty=Tensor[(2, 10, 2), float32] */;
  %56 = @func_11301() /* ty=Tensor[(2, 10, 2), float32] */;
  %57 = %48.0;
  %58 = @func_3459() /* ty=Tensor[(2, 10, 2), int32] */;
  %59 = bitwise_and(%51, %52) /* ty=Tensor[(200, 2), int64] */;
  (%53, %54, %55, %56, %57, %58, %59)
}

def @func_3090(%var_3035: Tensor[(3, 8, 14), float64]) -> (Tensor[(3, 8, 14), float64],) {
  %60 = cast(%var_3035, dtype="float64") /* ty=Tensor[(3, 8, 14), float64] */;
  %61 = cosh(%60) /* ty=Tensor[(3, 8, 14), float64] */;
  (%61,)
}

def @func_7343() -> Tensor[(2, 10, 2), float32] {
  @func_7341() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_15979() -> (Tensor[(2, 10, 2), float32],) {
  %62 = @func_10970() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %63 = %62.0;
  (%63,)
}

def @func_3833(%var_3829: Tensor[(480), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) {
  %64 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %65 = cast(%var_3829, dtype="float32") /* ty=Tensor[(480), float32] */;
  %66 = cast(%var_3829, dtype="float32") /* ty=Tensor[(480), float32] */;
  %67 = reshape(%65, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %68 = reshape(%66, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %69 = @func_628(%67, %68) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
  %70 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
  %71 = %64.1;
  %72 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  %73 = %69.0;
  (%70, %71, %72, %73, %var_3829)
}

def @func_7037() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %76 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
    %74 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
    %75 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
    (%74, %75)
  };
  %76() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */
}

def @func_9602(%var_9600: Tensor[(15, 10, 13), uint8], %var_9601: Tensor[(15, 10, 13), uint8]) -> (Tensor[(15, 10, 13), bool], Tensor[(15, 10, 13), float32]) {
  %87 = fn (%var_9584: Tensor[(15, 10, 13), uint8], %var_9585: Tensor[(15, 10, 13), uint8]) -> (Tensor[(15, 10, 13), bool], Tensor[(15, 10, 13), float32]) {
    %77 = cast(%var_9585, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
    %78 = shape_of(%var_9584, dtype="int32") /* ty=Tensor[(3), int32] */;
    %79 = cast(%var_9584, dtype="bool") /* ty=Tensor[(15, 10, 13), bool] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %81 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 10, 13), uint8] */, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %82 = shape_of(%var_9585, dtype="int32") /* ty=Tensor[(3), int32] */;
    %83 = cast(%var_9585, dtype="float32") /* ty=Tensor[(15, 10, 13), float32] */;
    %84 = dyn.reshape(%81, %82, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %85 = less_equal(%79, %80) /* ty=Tensor[(15, 10, 13), bool] */;
    %86 = power(%83, %84) /* ty=Tensor[(15, 10, 13), float32] */;
    (%85, %86)
  };
  %87(%var_9600, %var_9601) /* ty=(Tensor[(15, 10, 13), bool], Tensor[(15, 10, 13), float32]) */
}

def @func_11162() -> (Tensor[(4, 60), float64],) {
  %90 = fn () -> (Tensor[(4, 60), float64],) {
    %88 = @func_6879() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) */;
    %89 = %88.2;
    (%89,)
  };
  %90() /* ty=(Tensor[(4, 60), float64],) */
}

def @func_11050() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %97 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %91 = @func_6435() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %92 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %93 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %94 = %91.0;
    %95 = %92.2;
    %96 = %93.0;
    (%94, %95, %96)
  };
  %97() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_5362() -> (Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) {
  %106 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) {
    %98 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %99 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %100 = cast(meta[relay.Constant][7] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %101 = reshape(%99, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
    %102 = reshape(%100, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
    %103 = @func_628(%101, %102) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
    %104 = %98.0;
    %105 = %103.1;
    (%104, %105, meta[relay.Constant][7] /* ty=Tensor[(480), float32] */)
  };
  %106() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) */
}

def @func_3961() -> Tensor[(3360), float32] {
  %107 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
  %107.3
}

def @func_13005() -> (Tensor[(2, 10, 2), float32],) {
  %108 = @func_6879() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) */;
  %109 = %108.0;
  (%109,)
}

def @func_3461() -> Tensor[(2, 10, 2), int32] {
  @func_3459() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_11813() -> Tensor[(2, 10, 2), int32] {
  @func_11811() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_2750() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) {
  %118 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) {
    %110 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %111 = cast(meta[relay.Constant][8] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
    %112 = reshape(%111, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
    %113 = @func_1901(%112) /* ty=(Tensor[(14, 15, 16), float32],) */;
    %114 = %110.0;
    %115 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
    %116 = %113.0;
    %117 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
    (%114, %115, %116, meta[relay.Constant][8] /* ty=Tensor[(3360), float32] */, %117)
  };
  %118() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */
}

def @func_13504() -> (Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(40, 12), float32]) {
  @func_13502() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(40, 12), float32]) */
}

def @func_3781() -> Tensor[(2, 10, 2), float32] {
  @func_3779() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_10596() -> Tensor[(2, 10, 2), float32] {
  @func_10594() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_11537() -> Tensor[(2, 10, 2), float32] {
  @func_11535() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_7170() -> (Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) {
  %119 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %120 = cast(meta[relay.Constant][9] /* ty=Tensor[(168), uint64] */, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %121 = cast(meta[relay.Constant][10] /* ty=Tensor[(252, 8), uint64] */, dtype="uint64") /* ty=Tensor[(252, 8), uint64] */;
  %122 = cast(meta[relay.Constant][10] /* ty=Tensor[(252, 8), uint64] */, dtype="uint64") /* ty=Tensor[(252, 8), uint64] */;
  %123 = reshape(%120, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
  %124 = reshape(%121, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %125 = reshape(%122, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %126 = @func_801(%123, %124, %125) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
  %127 = %119.1;
  %128 = %126.0;
  (%127, %128, meta[relay.Constant][9] /* ty=Tensor[(168), uint64] */, meta[relay.Constant][10] /* ty=Tensor[(252, 8), uint64] */)
}

def @func_4372() -> Tensor[(2, 10, 2), int32] {
  @func_4370() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_7763() -> (Tensor[(2, 10, 2), int32],) {
  %130 = fn () -> (Tensor[(2, 10, 2), int32],) {
    %129 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
    (%129,)
  };
  %130() /* ty=(Tensor[(2, 10, 2), int32],) */
}

def @func_3093(%var_3091: Tensor[(3, 8, 14), float64]) -> (Tensor[(3, 8, 14), float64],) {
  @func_3090(%var_3091) /* ty=(Tensor[(3, 8, 14), float64],) */
}

def @func_1904(%var_1902: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), float32],) {
  @func_1901(%var_1902) /* ty=(Tensor[(14, 15, 16), float32],) */
}

def @func_8311() -> Tensor[(2, 10, 2), int32] {
  %131 = fn () -> Tensor[(2, 10, 2), int32] {
    @func_3459() /* ty=Tensor[(2, 10, 2), int32] */
  };
  %131() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_4647() -> (Tensor[(2, 10, 2), float32],) {
  @func_4645() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_2685() -> Tensor[(2, 10, 2), int32] {
  %133 = fn () -> Tensor[(2, 10, 2), int32] {
    %132 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
    %132.0
  };
  %133() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_7934() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %134 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
  %135 = @func_5844() /* ty=Tensor[(2, 10, 2), float32] */;
  (%134, %135)
}

def @func_3147() -> Tensor[(2, 10, 2), float32] {
  @func_3145() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_16161() -> (Tensor[(2, 10, 2), float32],) {
  @func_16159() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_10846(%var_10835: Tensor[(7, 3, 9), float64]) -> (Tensor[(7, 3, 9), float64],) {
  %136 = cast(%var_10835, dtype="float64") /* ty=Tensor[(7, 3, 9), float64] */;
  %137 = asinh(%136) /* ty=Tensor[(7, 3, 9), float64] */;
  (%137,)
}

def @func_11396() -> Tensor[(2, 10, 2), float32] {
  %138 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %138.1
}

def @func_7073() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_12349() -> (Tensor[(2, 10, 2), float32],) {
  @func_12347() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_16070() -> Tensor[(2, 10, 2), float32] {
  %139 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %139.0
}

def @func_9722() -> Tensor[(4, 13, 16), float64] {
  @func_9720() /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_11595() -> (Tensor[(2, 10, 2), float32],) {
  %140 = @func_3977() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %141 = %140.0;
  (%141,)
}

def @func_1557() -> Tensor[(2, 10, 2), float32] {
  %142 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %142.0
}

def @func_4370() -> Tensor[(2, 10, 2), int32] {
  %143 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %143.0
}

def @func_4340() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  @func_4338() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */
}

def @func_10002() -> (Tensor[(2, 10, 2), float32],) {
  @func_10000() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_2648(%var_2647: Tensor[(8, 10, 5), float32]) -> (Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) {
  %148 = fn (%var_2636: Tensor[(8, 10, 5), float32]) -> (Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) {
    %144 = cast(%var_2636, dtype="float32") /* ty=Tensor[(8, 10, 5), float32] */;
    %145 = cast(%var_2636, dtype="float64") /* ty=Tensor[(8, 10, 5), float64] */;
    %146 = rsqrt(%144) /* ty=Tensor[(8, 10, 5), float32] */;
    %147 = log(%145) /* ty=Tensor[(8, 10, 5), float64] */;
    (%146, %147)
  };
  %148(%var_2647) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */
}

def @func_3606(%var_3604: Tensor[(28, 1), float32], %var_3605: Tensor[(49, 4), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28, 1), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) {
  %158 = fn (%var_3590: Tensor[(28, 1), float32], %var_3591: Tensor[(49, 4), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28, 1), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) {
    %149 = cast(%var_3590, dtype="float32") /* ty=Tensor[(28, 1), float32] */;
    %150 = cast(%var_3591, dtype="float32") /* ty=Tensor[(49, 4), float32] */;
    %151 = cast(meta[relay.Constant][11] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %152 = reshape(%149, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
    %153 = reshape(%150, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
    %154 = reshape(%151, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %155 = @func_3420(%152, %153, %154) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
    %156 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
    %157 = %155.1;
    (%156, %157, %var_3590, %var_3591, meta[relay.Constant][11] /* ty=Tensor[(16), float64] */)
  };
  %158(%var_3604, %var_3605) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28, 1), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) */
}

def @func_396(%var_393: Tensor[(10, 10, 4), float32]) -> (Tensor[(10, 10, 4), float32],) {
  %159 = cast(%var_393, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
  %160 = atan(%159) /* ty=Tensor[(10, 10, 4), float32] */;
  (%160,)
}

def @func_7047() -> Tensor[(2, 10, 2), float32] {
  @func_7045() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_15350() -> (Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float64]) {
  %161 = @func_14985() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %162 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %163 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %164 = %161.1;
  %165 = %162.1;
  %166 = %163.0;
  (%164, %165, %166)
}

def @func_7341() -> Tensor[(2, 10, 2), float32] {
  %167 = @func_3977() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %167.0
}

def @func_9076() -> (Tensor[(2, 10, 2), float32],) {
  @func_9074() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_3361() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %171 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %168 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %169 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
    %170 = %168.0;
    (%169, %170)
  };
  %171() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_10605() -> Tensor[(2, 10, 2), float32] {
  %172 = @func_7152() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %172.0
}

def @func_13731(%var_13729: Tensor[(55, 15), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(630), int16], int16, Tensor[(2, 10, 2), float64], Tensor[(825), uint8], Tensor[(55, 15), float64], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64]) {
  @func_13728(%var_13729) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(630), int16], int16, Tensor[(2, 10, 2), float64], Tensor[(825), uint8], Tensor[(55, 15), float64], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64]) */
}

def @func_15038(%var_15036: Tensor[(9, 2, 14), uint8], %var_15037: Tensor[(196, 1), float32]) -> (Tensor[(9, 2, 14), bool], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(196, 1), float32], Tensor[(16), float64]) {
  %186 = fn (%var_15023: Tensor[(9, 2, 14), uint8], %var_15030: Tensor[(196, 1), float32]) -> (Tensor[(9, 2, 14), bool], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(196, 1), float32], Tensor[(16), float64]) {
    %173 = cast(meta[relay.Constant][12] /* ty=Tensor[(9, 2, 14), uint8] */, dtype="bool") /* ty=Tensor[(9, 2, 14), bool] */;
    %174 = shape_of(%var_15023, dtype="int32") /* ty=Tensor[(3), int32] */;
    %175 = cast(%var_15023, dtype="bool") /* ty=Tensor[(9, 2, 14), bool] */;
    %176 = dyn.reshape(%173, %174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %177 = cast(meta[relay.Constant][13] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %178 = cast(%var_15030, dtype="float32") /* ty=Tensor[(196, 1), float32] */;
    %179 = cast(meta[relay.Constant][14] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %180 = reshape(%177, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
    %181 = reshape(%178, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
    %182 = reshape(%179, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %183 = @func_3420(%180, %181, %182) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
    %184 = greater(%175, %176) /* ty=Tensor[(9, 2, 14), bool] */;
    %185 = %183.0;
    (%184, %185, meta[relay.Constant][13] /* ty=Tensor[(28), float32] */, %var_15030, meta[relay.Constant][14] /* ty=Tensor[(16), float64] */)
  };
  %186(%var_15036, %var_15037) /* ty=(Tensor[(9, 2, 14), bool], Tensor[(2, 14, 7), float32], Tensor[(28), float32], Tensor[(196, 1), float32], Tensor[(16), float64]) */
}

def @func_5765() -> (Tensor[(4, 13, 16), float64],) {
  %187 = @func_4136() /* ty=Tensor[(4, 13, 16), float64] */;
  (%187,)
}

def @func_9617() -> Tensor[(2, 10, 2), float32] {
  %188 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_5108() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %188() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8850() -> (Tensor[(2, 10, 2), float32],) {
  %191 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %189 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
    %190 = %189.1;
    (%190,)
  };
  %191() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_12264(%var_12233: Tensor[(189), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(189), float64], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64], Tensor[(7, 3, 9), bool], Tensor[(4, 60), float64]) {
  %192 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %193 = cast(meta[relay.Constant][15] /* ty=Tensor[(240, 1), float64] */, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
  %194 = reshape(%193, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %195 = @func_511(%194) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %196 = cast(%var_12233, dtype="float64") /* ty=Tensor[(189), float64] */;
  %197 = reshape(%196, newshape=[3, 63]) /* ty=Tensor[(3, 63), float64] */;
  %198 = @func_11433(%197) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(7, 3, 9), float64], Tensor[(3, 63), float64]) */;
  %199 = %198.1;
  %200 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 3, 9), float64] */, dtype="bool") /* ty=Tensor[(7, 3, 9), bool] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
  %202 = cast(%199, dtype="bool") /* ty=Tensor[(7, 3, 9), bool] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %204 = @func_11161() /* ty=(Tensor[(4, 60), float64],) */;
  %205 = %192.0;
  %206 = @func_5795() /* ty=Tensor[(2, 10, 2), float32] */;
  %207 = %195.0;
  %208 = logical_or(%202, %203) /* ty=Tensor[(7, 3, 9), bool] */;
  %209 = %204.0;
  (%205, %var_12233, %206, %207, meta[relay.Constant][15] /* ty=Tensor[(240, 1), float64] */, %208, %209)
}

def @func_13361() -> Tensor[(2, 10, 2), int32] {
  @func_13359() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_12347() -> (Tensor[(2, 10, 2), float32],) {
  %210 = @func_4645() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %211 = %210.0;
  (%211,)
}

def @func_4570(%var_4568: Tensor[(2, 3, 8), float64], %var_4569: Tensor[(117, 1), float32]) -> (Tensor[(2, 3, 8), float64], Tensor[(3, 3, 13), float32], Tensor[(117, 1), float32]) {
  %218 = fn (%var_4540: Tensor[(2, 3, 8), float64], %var_4553: Tensor[(117, 1), float32]) -> (Tensor[(2, 3, 8), float64], Tensor[(3, 3, 13), float32], Tensor[(117, 1), float32]) {
    %212 = cast(%var_4540, dtype="float64") /* ty=Tensor[(2, 3, 8), float64] */;
    %213 = cast(%var_4553, dtype="float32") /* ty=Tensor[(117, 1), float32] */;
    %214 = reshape(%213, newshape=[3, 3, 13]) /* ty=Tensor[(3, 3, 13), float32] */;
    %215 = @func_3916(%214) /* ty=(Tensor[(3, 3, 13), float32],) */;
    %216 = asinh(%212) /* ty=Tensor[(2, 3, 8), float64] */;
    %217 = %215.0;
    (%216, %217, %var_4553)
  };
  %218(%var_4568, %var_4569) /* ty=(Tensor[(2, 3, 8), float64], Tensor[(3, 3, 13), float32], Tensor[(117, 1), float32]) */
}

def @func_15162() -> (Tensor[(12, 14, 12), uint64], uint8, Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %226 = fn () -> (Tensor[(12, 14, 12), uint64], uint8, Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %219 = @func_7170() /* ty=(Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) */;
    %220 = @func_14923() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], uint8, Tensor[(1040), uint8]) */;
    %221 = @func_10970() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %222 = %219.1;
    %223 = %220.2;
    %224 = %221.0;
    %225 = @func_12772() /* ty=Tensor[(2, 10, 2), float32] */;
    (%222, %223, %224, %225)
  };
  %226() /* ty=(Tensor[(12, 14, 12), uint64], uint8, Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_1681() -> (Tensor[(2, 10, 2), int32],) {
  %233 = fn () -> (Tensor[(2, 10, 2), int32],) {
    %227 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
    %228 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 10, 2), float32] */, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
    %229 = shape_of(%227, dtype="int32") /* ty=Tensor[(3), int32] */;
    %230 = cast(%227, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
    %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %232 = maximum(%230, %231) /* ty=Tensor[(2, 10, 2), int32] */;
    (%232,)
  };
  %233() /* ty=(Tensor[(2, 10, 2), int32],) */
}

def @func_10000() -> (Tensor[(2, 10, 2), float32],) {
  %234 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %235 = %234.0;
  (%235,)
}

def @func_9369() -> Tensor[(2, 10, 2), float32] {
  %236 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_5795() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %236() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_3424(%var_3421: Tensor[(2, 14, 1), float32], %var_3422: Tensor[(2, 14, 7), float32], %var_3423: Tensor[(16), float64]) -> (Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) {
  %248 = fn (%var_3407: Tensor[(2, 14, 1), float32], %var_3408: Tensor[(2, 14, 7), float32], %var_3417: Tensor[(16), float64]) -> (Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) {
    %237 = cast(%var_3407, dtype="float32") /* ty=Tensor[(2, 14, 1), float32] */;
    %238 = cast(%var_3408, dtype="float32") /* ty=Tensor[(2, 14, 7), float32] */;
    %239 = cast(%var_3417, dtype="float64") /* ty=Tensor[(16), float64] */;
    %240 = cast(meta[relay.Constant][18] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
    %241 = cast(meta[relay.Constant][18] /* ty=Tensor[(32, 2), float64] */, dtype="float32") /* ty=Tensor[(32, 2), float32] */;
    %242 = reshape(%239, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
    %243 = reshape(%240, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
    %244 = reshape(%241, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %245 = @func_3026(%242, %243, %244) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
    %246 = maximum(%237, %238) /* ty=Tensor[(2, 14, 7), float32] */;
    %247 = %245.1;
    (%246, %247, %var_3417, meta[relay.Constant][18] /* ty=Tensor[(32, 2), float64] */)
  };
  %248(%var_3421, %var_3422, %var_3423) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */
}

def @func_9720() -> Tensor[(4, 13, 16), float64] {
  %249 = @func_5972() /* ty=Tensor[(4, 13, 16), float64] */;
  %250 = cast(%249, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
  acosh(%250) /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_3977() -> (Tensor[(2, 10, 2), float32],) {
  %251 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  (%251,)
}

def @func_13652() -> (Tensor[(2, 10, 2), float32],) {
  %252 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
  (%252,)
}

def @func_12773() -> Tensor[(2, 10, 2), float32] {
  %253 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_1391() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %253() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_12720() -> Tensor[(2, 10, 2), float32] {
  @func_12718() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_6351(%var_6347: Tensor[(16, 4, 16), float64], %var_6348: Tensor[(16, 4, 16), float64], %var_6349: Tensor[(32, 2), float64], %var_6350: Tensor[(480), float32]) -> (Tensor[(1, 8, 12), float64], Tensor[(4, 4), float64], Tensor[(32, 2), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16, 4, 16), float32]) {
  %276 = fn (%var_6265: Tensor[(16, 4, 16), float64], %var_6266: Tensor[(16, 4, 16), float64], %var_6274: Tensor[(32, 2), float64], %var_6299: Tensor[(480), float32]) -> (Tensor[(1, 8, 12), float64], Tensor[(4, 4), float64], Tensor[(32, 2), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16, 4, 16), float32]) {
    %254 = cast(meta[relay.Constant][19] /* ty=Tensor[(4, 4), float64] */, dtype="float64") /* ty=Tensor[(4, 4), float64] */;
    %255 = cast(%var_6274, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
    %256 = reshape(%254, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %257 = reshape(%255, newshape=[64]) /* ty=Tensor[(64), float64] */;
    %258 = @func_5164(%256, %257) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) */;
    %259 = cast(%var_6299, dtype="float32") /* ty=Tensor[(480), float32] */;
    %260 = reshape(%259, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %261 = @func_3833(%260) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
    %262 = @func_2947() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %263 = cast(%var_6266, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
    %264 = shape_of(%var_6265, dtype="int32") /* ty=Tensor[(3), int32] */;
    %265 = cast(%var_6265, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
    %266 = dyn.reshape(%263, %264, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %267 = mod(%265, %266) /* ty=Tensor[(16, 4, 16), float64] */;
    %268 = cast(%267, dtype="float64") /* ty=Tensor[(16, 4, 16), float64] */;
    %269 = rsqrt(%268) /* ty=Tensor[(16, 4, 16), float64] */;
    %270 = cast(%269, dtype="float32") /* ty=Tensor[(16, 4, 16), float32] */;
    %271 = %258.3;
    %272 = %261.4;
    %273 = %262.3;
    %274 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
    %275 = exp(%270) /* ty=Tensor[(16, 4, 16), float32] */;
    (%271, meta[relay.Constant][19] /* ty=Tensor[(4, 4), float64] */, %var_6274, %272, %var_6299, %273, %274, %275)
  };
  %276(%var_6347, %var_6348, %var_6349, %var_6350) /* ty=(Tensor[(1, 8, 12), float64], Tensor[(4, 4), float64], Tensor[(32, 2), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16, 4, 16), float32]) */
}

def @func_8579() -> (Tensor[(4, 60), float32], Tensor[(4, 60), float64]) {
  %277 = @func_7784() /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) */;
  %278 = %277.0;
  %279 = cast(%278, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %280 = cast(%278, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %281 = log(%279) /* ty=Tensor[(4, 60), float32] */;
  %282 = asinh(%280) /* ty=Tensor[(4, 60), float64] */;
  (%281, %282)
}

def @func_2288() -> (Tensor[(2, 10, 2), float32],) {
  %283 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  (%283,)
}

def @func_6178() -> Tensor[(2, 10, 2), float64] {
  @func_6176() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_6127() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) {
  %284 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %285 = %284.0;
  %286 = cast(%285, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %287 = erf(%286) /* ty=Tensor[(2, 10, 2), float64] */;
  %288 = cast(%285, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %289 = shape_of(%287, dtype="int32") /* ty=Tensor[(3), int32] */;
  %290 = cast(%287, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %292 = cast(%287, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %293 = @func_3767() /* ty=(Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) */;
  %294 = @func_2892() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %295 = floor_divide(%290, %291) /* ty=Tensor[(2, 10, 2), float64] */;
  %296 = acosh(%292) /* ty=Tensor[(2, 10, 2), float32] */;
  %297 = %293.0;
  %298 = %294.3;
  (%295, %296, %297, %298)
}

def @func_2892() -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %299 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %300 = %299.0;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %302 = reshape(%301, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %303 = @func_2851(%302) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) */;
  %304 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  %305 = cast(%304, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %306 = %303.7;
  %307 = log10(%305) /* ty=Tensor[(2, 10, 2), float32] */;
  %308 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  (%300, %306, %307, %308)
}

def @func_11683(%var_11682: Tensor[(3360, 1), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(3360, 1), float32], Tensor[(2, 10, 2), float32], Tensor[(3, 8, 14), float32], Tensor[(2, 10, 2), float32]) {
  %324 = fn (%var_11636: Tensor[(3360, 1), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(3360, 1), float32], Tensor[(2, 10, 2), float32], Tensor[(3, 8, 14), float32], Tensor[(2, 10, 2), float32]) {
    %309 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %310 = cast(%var_11636, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
    %311 = cast(%var_11636, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
    %312 = reshape(%310, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
    %313 = reshape(%311, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
    %314 = @func_3308(%312, %313) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) */;
    %315 = %314.3;
    %316 = cast(%315, dtype="float32") /* ty=Tensor[(3, 8, 14), float32] */;
    %317 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %318 = @func_7341() /* ty=Tensor[(2, 10, 2), float32] */;
    %319 = @func_8310() /* ty=Tensor[(2, 10, 2), int32] */;
    %320 = %309.0;
    %321 = @func_10016() /* ty=Tensor[(2, 10, 2), float32] */;
    %322 = sinh(%316) /* ty=Tensor[(3, 8, 14), float32] */;
    %323 = %317.0;
    (%318, %319, %320, %var_11636, %321, %322, %323)
  };
  %324(%var_11682) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(3360, 1), float32], Tensor[(2, 10, 2), float32], Tensor[(3, 8, 14), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_12591() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %329 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %325 = @func_7036() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
    %326 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %327 = %325.0;
    %328 = %326.0;
    (%327, %328)
  };
  %329() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_10607() -> Tensor[(2, 10, 2), float32] {
  @func_10605() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_9074() -> (Tensor[(2, 10, 2), float32],) {
  %330 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %331 = %330.0;
  (%331,)
}

def @func_11028() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  @func_11026() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */
}

def @func_2254() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_15014(%var_15007: Tensor[(168), uint64]) -> (Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64]) {
  %332 = @func_8911() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %333 = cast(%var_15007, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %334 = cast(meta[relay.Constant][20] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %335 = cast(meta[relay.Constant][20] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %336 = reshape(%333, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
  %337 = reshape(%334, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %338 = reshape(%335, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %339 = @func_801(%336, %337, %338) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
  %340 = %332.0;
  %341 = %339.0;
  (%340, %341, %var_15007, meta[relay.Constant][20] /* ty=Tensor[(2016), uint64] */)
}

def @func_3529() -> Tensor[(2, 10, 2), float32] {
  %343 = fn () -> Tensor[(2, 10, 2), float32] {
    %342 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %342.0
  };
  %343() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8251(%var_8249: Tensor[(400), float32], %var_8250: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) {
  @func_8247(%var_8249, %var_8250) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) */
}

def @func_12164() -> Tensor[(2, 10, 2), float32] {
  @func_12162() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_3769() -> (Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) {
  @func_3767() /* ty=(Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) */
}

def @func_14774() -> (Tensor[(2, 10, 2), float32],) {
  @func_14772() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_13007() -> (Tensor[(2, 10, 2), float32],) {
  @func_13005() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_14925() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], uint8, Tensor[(1040), uint8]) {
  @func_14923() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], uint8, Tensor[(1040), uint8]) */
}

def @func_9975(%var_9972: Tensor[(300, 4), float32], %var_9973: Tensor[(480), float32], %var_9974: Tensor[(240), float64]) -> (Tensor[(2, 10, 2), float64], Tensor[(240, 1), float64], Tensor[(480), float32], Tensor[(240), float64], Tensor[(2, 10, 2), float64], Tensor[(300, 4), float32]) {
  @func_9970(%var_9972, %var_9973, %var_9974) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(240, 1), float64], Tensor[(480), float32], Tensor[(240), float64], Tensor[(2, 10, 2), float64], Tensor[(300, 4), float32]) */
}

def @func_1901(%var_1896: Tensor[(14, 15, 16), float32]) -> (Tensor[(14, 15, 16), float32],) {
  %344 = cast(%var_1896, dtype="float32") /* ty=Tensor[(14, 15, 16), float32] */;
  %345 = rsqrt(%344) /* ty=Tensor[(14, 15, 16), float32] */;
  (%345,)
}

def @func_4081(%var_4079: float64, %var_4080: Tensor[(15, 13, 2), float64]) -> (Tensor[(15, 13, 2), bool], Tensor[(2, 10, 2), float32]) {
  @func_4077(%var_4079, %var_4080) /* ty=(Tensor[(15, 13, 2), bool], Tensor[(2, 10, 2), float32]) */
}

def @func_11999(%var_11997: Tensor[(1120), int64], %var_11998: Tensor[(117, 1), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(117), float32], Tensor[(4, 28), int64], Tensor[(1120), int64], Tensor[(2, 24), float64], Tensor[(117, 1), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float32]) {
  @func_11995(%var_11997, %var_11998) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(117), float32], Tensor[(4, 28), int64], Tensor[(1120), int64], Tensor[(2, 24), float64], Tensor[(117, 1), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float32]) */
}

def @func_12527() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %346 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %347 = @func_9812() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(3360), float32]) */;
  %348 = %346.1;
  %349 = %347.0;
  (%348, %349)
}

def @func_2948() -> (Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %361 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %350 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
    %351 = cast(meta[relay.Constant][21] /* ty=Tensor[(432), int16] */, dtype="int16") /* ty=Tensor[(432), int16] */;
    %352 = reshape(%351, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), int16] */;
    %353 = @func_918(%352) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */;
    %354 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
    %355 = cast(%354, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
    %356 = reshape(%355, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
    %357 = @func_1530(%356) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
    %358 = %350.1;
    %359 = %353.2;
    %360 = %357.1;
    (%358, %359, meta[relay.Constant][21] /* ty=Tensor[(432), int16] */, %354, %360)
  };
  %361() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_4338() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  %362 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %363 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  (%362, %363)
}

def @func_11433(%var_11429: Tensor[(3, 63), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(7, 3, 9), float64], Tensor[(3, 63), float64]) {
  %364 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %365 = cast(%var_11429, dtype="float64") /* ty=Tensor[(3, 63), float64] */;
  %366 = reshape(%365, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), float64] */;
  %367 = @func_10846(%366) /* ty=(Tensor[(7, 3, 9), float64],) */;
  %368 = %364.1;
  %369 = %367.0;
  (%368, %369, %var_11429)
}

def @func_13981() -> (Tensor[(2, 10, 2), float32],) {
  %371 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %370 = @func_9368() /* ty=Tensor[(2, 10, 2), float32] */;
    (%370,)
  };
  %371() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_8069() -> (Tensor[(2, 10, 2), float64],) {
  %373 = fn () -> (Tensor[(2, 10, 2), float64],) {
    %372 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
    (%372,)
  };
  %373() /* ty=(Tensor[(2, 10, 2), float64],) */
}

def @func_16159() -> (Tensor[(2, 10, 2), float32],) {
  %374 = @func_13502() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(40, 12), float32]) */;
  %375 = %374.0;
  (%375,)
}

def @func_14406() -> (Tensor[(16), float64], Tensor[(2, 10, 2), float64]) {
  %376 = @func_6514() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(16), float64]) */;
  %377 = %376.4;
  %378 = @func_12639() /* ty=Tensor[(2, 10, 2), float64] */;
  (%377, %378)
}

def @func_5767() -> (Tensor[(4, 13, 16), float64],) {
  @func_5765() /* ty=(Tensor[(4, 13, 16), float64],) */
}

def @func_10613() -> (Tensor[(2, 10, 2), float32],) {
  %380 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %379 = @func_4903() /* ty=Tensor[(2, 10, 2), float32] */;
    (%379,)
  };
  %380() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_15450() -> (Tensor[(2, 10, 2), float32],) {
  %381 = @func_11547() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %382 = %381.0;
  (%382,)
}

def @func_7263() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
  %389 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
    %383 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
    %384 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %385 = %383.0;
    %386 = %384.0;
    %387 = @func_3145() /* ty=Tensor[(2, 10, 2), float32] */;
    %388 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
    (%385, %386, %387, %388)
  };
  %389() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */
}

def @func_3311(%var_3309: Tensor[(28, 120), float32], %var_3310: Tensor[(28, 120), float32]) -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) {
  %419 = fn (%var_3238: Tensor[(28, 120), float32], %var_3249: Tensor[(28, 120), float32]) -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) {
    %390 = cast(%var_3249, dtype="float64") /* ty=Tensor[(28, 120), float64] */;
    %391 = shape_of(%var_3238, dtype="int32") /* ty=Tensor[(2), int32] */;
    %392 = cast(%var_3238, dtype="float64") /* ty=Tensor[(28, 120), float64] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %394 = floor_mod(%392, %393) /* ty=Tensor[(28, 120), float64] */;
    %395 = cast(%var_3249, dtype="bool") /* ty=Tensor[(28, 120), bool] */;
    %396 = shape_of(%394, dtype="int32") /* ty=Tensor[(2), int32] */;
    %397 = cast(%394, dtype="bool") /* ty=Tensor[(28, 120), bool] */;
    %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %399 = cast(meta[relay.Constant][22] /* ty=Tensor[(336), float64] */, dtype="float64") /* ty=Tensor[(336), float64] */;
    %400 = reshape(%399, newshape=[3, 8, 14]) /* ty=Tensor[(3, 8, 14), float64] */;
    %401 = @func_3090(%400) /* ty=(Tensor[(3, 8, 14), float64],) */;
    %402 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
    %403 = cast(%402, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
    %404 = reshape(%403, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
    %405 = @func_1530(%404) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
    %406 = cast(%var_3238, dtype="float32") /* ty=Tensor[(28, 120), float32] */;
    %407 = reshape(%406, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
    %408 = @func_1901(%407) /* ty=(Tensor[(14, 15, 16), float32],) */;
    %409 = %408.0;
    %410 = cast(%409, dtype="uint32") /* ty=Tensor[(14, 15, 16), uint32] */;
    %411 = shape_of(%var_3249, dtype="int32") /* ty=Tensor[(2), int32] */;
    %412 = cast(%var_3249, dtype="uint32") /* ty=Tensor[(28, 120), uint32] */;
    %413 = dyn.reshape(%410, %411, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %414 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
    %415 = equal(%397, %398) /* ty=Tensor[(28, 120), bool] */;
    %416 = %401.0;
    %417 = %405.0;
    %418 = bitwise_and(%412, %413) /* ty=Tensor[(28, 120), uint32] */;
    (%414, %402, %415, %416, meta[relay.Constant][22] /* ty=Tensor[(336), float64] */, %417, %418)
  };
  %419(%var_3309, %var_3310) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) */
}

def @func_8515() -> Tensor[(2, 10, 2), float32] {
  %420 = @func_6435() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %420.1
}

def @func_7784() -> (Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) {
  %421 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %422 = @func_5304() /* ty=Tensor[(2, 10, 2), float32] */;
  %423 = cast(%422, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %424 = %421.2;
  %425 = sqrt(%423) /* ty=Tensor[(2, 10, 2), float32] */;
  (%424, %425)
}

def @func_2465(%var_2394: int16, %var_2395: Tensor[(630), int16], %var_2401: Tensor[(1040), uint8]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32], Tensor[(14, 9, 5), bool], Tensor[(630), int16], Tensor[(13, 5, 16), uint8], Tensor[(15, 16, 2), bool], Tensor[(480), float32], Tensor[(2, 10, 2), bool], Tensor[(1040), bool], Tensor[(1040), int64]) {
  %426 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  %427 = cast(%426, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %428 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %429 = cast(%var_2394, dtype="int16") /* ty=int16 */;
  %430 = cast(%var_2395, dtype="int16") /* ty=Tensor[(630), int16] */;
  %431 = reshape(%429, newshape=[]) /* ty=int16 */;
  %432 = reshape(%430, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int16] */;
  %433 = cast(%var_2394, dtype="uint8") /* ty=uint8 */;
  %434 = cast(%var_2401, dtype="uint8") /* ty=Tensor[(1040), uint8] */;
  %435 = reshape(%433, newshape=[]) /* ty=uint8 */;
  %436 = reshape(%434, newshape=[13, 5, 16]) /* ty=Tensor[(13, 5, 16), uint8] */;
  %437 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %438 = cast(meta[relay.Constant][23] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
  %439 = reshape(%437, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %440 = reshape(%438, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
  %441 = @func_628(%439, %440) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
  %442 = %428.0;
  %443 = cast(%442, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %444 = reshape(%443, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %445 = @func_1866(%444) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %446 = %445.0;
  %447 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %448 = %447.1;
  %449 = cast(%448, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %450 = shape_of(%446, dtype="int32") /* ty=Tensor[(3), int32] */;
  %451 = cast(%446, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %452 = dyn.reshape(%449, %450, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %453 = cast(%var_2401, dtype="bool") /* ty=Tensor[(1040), bool] */;
  %454 = cast(%var_2394, dtype="bool") /* ty=bool */;
  %455 = cast(meta[relay.Constant][24] /* ty=Tensor[(1040), uint8] */, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %456 = shape_of(%var_2401, dtype="int32") /* ty=Tensor[(1), int32] */;
  %457 = cast(%var_2401, dtype="int64") /* ty=Tensor[(1040), int64] */;
  %458 = dyn.reshape(%455, %456, newshape=[]) /* ty=Tensor[(?), int64] */;
  %459 = sinh(%427) /* ty=Tensor[(2, 10, 2), float64] */;
  %460 = @func_1888(%431, %432) /* ty=Tensor[(14, 9, 5), bool] */;
  %461 = @func_105(%435, %436) /* ty=Tensor[(13, 5, 16), uint8] */;
  %462 = %441.1;
  %463 = less_equal(%451, %452) /* ty=Tensor[(2, 10, 2), bool] */;
  %464 = greater_equal(%453, %454) /* ty=Tensor[(1040), bool] */;
  %465 = add(%457, %458) /* ty=Tensor[(1040), int64] */;
  (%459, %442, %460, %var_2395, %461, %462, meta[relay.Constant][23] /* ty=Tensor[(480), float32] */, %463, %464, %465)
}

def @func_7045() -> Tensor[(2, 10, 2), float32] {
  %466 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %466.1
}

def @func_5683() -> (Tensor[(2, 10, 2), float32],) {
  @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_13256() -> Tensor[(2, 10, 2), float64] {
  %467 = fn () -> Tensor[(2, 10, 2), float64] {
    @func_6000() /* ty=Tensor[(2, 10, 2), float64] */
  };
  %467() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_1532(%var_1531: Tensor[(2, 10, 2), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %477 = fn (%var_1503: Tensor[(2, 10, 2), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
    %468 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
    %469 = %468.0;
    %470 = cast(%var_1503, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
    %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
    %472 = cast(%469, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %474 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
    %475 = power(%472, %473) /* ty=Tensor[(2, 10, 2), float64] */;
    %476 = %474.0;
    (%475, %476)
  };
  %477(%var_1531) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_2047() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) {
  %478 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %480 = reshape(%479, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %481 = @func_1530(%480) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %482 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %483 = %482.0;
  %484 = cast(%483, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %485 = reshape(%484, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %486 = @func_1530(%485) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %487 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 10, 2), float32] */, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %488 = shape_of(%483, dtype="int32") /* ty=Tensor[(3), int32] */;
  %489 = cast(%483, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %490 = dyn.reshape(%487, %488, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %491 = %481.0;
  %492 = %486.1;
  %493 = not_equal(%489, %490) /* ty=Tensor[(2, 10, 2), bool] */;
  (%478, %491, %492, %493)
}

def @func_14151() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) {
  %498 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) {
    %494 = @func_8911() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
    %495 = @func_11535() /* ty=Tensor[(2, 10, 2), float32] */;
    %496 = @func_12162() /* ty=Tensor[(2, 10, 2), float32] */;
    %497 = %494.1;
    (%495, %496, %497)
  };
  %498() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */
}

def @func_5652(%var_5582: Tensor[(2, 11, 7), float64]) -> (Tensor[(2, 11, 7), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %499 = cast(%var_5582, dtype="float64") /* ty=Tensor[(2, 11, 7), float64] */;
  %500 = @func_4164() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) */;
  %501 = acosh(%499) /* ty=Tensor[(2, 11, 7), float64] */;
  %502 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
  %503 = %500.0;
  (%501, %502, %503)
}

def @func_13502() -> (Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(40, 12), float32]) {
  %504 = cast(meta[relay.Constant][26] /* ty=Tensor[(40, 12), float32] */, dtype="float32") /* ty=Tensor[(40, 12), float32] */;
  %505 = reshape(%504, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %506 = @func_3833(%505) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
  %507 = @func_5108() /* ty=Tensor[(2, 10, 2), float32] */;
  %508 = %506.4;
  (%507, %508, meta[relay.Constant][26] /* ty=Tensor[(40, 12), float32] */)
}

def @func_13997(%var_13983: Tensor[(14, 8, 3), bool], %var_13995: Tensor[(400), float32]) -> (Tensor[(14, 8, 3), bool], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(400), float32]) {
  %509 = cast(%var_13983, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %510 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(14, 8, 3), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %511 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 8, 3), bool] */, dtype="bool") /* ty=Tensor[(14, 8, 3), bool] */;
  %512 = dyn.reshape(%509, %510, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %513 = @func_11026() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %514 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %515 = cast(%var_13995, dtype="float32") /* ty=Tensor[(400), float32] */;
  %516 = reshape(%515, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %517 = @func_13343(%516) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) */;
  %518 = logical_or(%511, %512) /* ty=Tensor[(14, 8, 3), bool] */;
  %519 = %513.1;
  %520 = %514.0;
  %521 = %517.1;
  (%518, %519, %520, %521, %var_13995)
}

def @func_6836(%var_6835: Tensor[(480), float32]) -> (Tensor[(2, 10, 2), bool], Tensor[(1, 8, 12), float64], Tensor[(16), float64], Tensor[(2, 10, 2), float32], Tensor[(32, 2), bool], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) {
  %543 = fn (%var_6821: Tensor[(480), float32]) -> (Tensor[(2, 10, 2), bool], Tensor[(1, 8, 12), float64], Tensor[(16), float64], Tensor[(2, 10, 2), float32], Tensor[(32, 2), bool], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) {
    %522 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
    %523 = cast(meta[relay.Constant][28] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %524 = cast(meta[relay.Constant][29] /* ty=Tensor[(32, 2), float64] */, dtype="float64") /* ty=Tensor[(32, 2), float64] */;
    %525 = reshape(%523, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %526 = reshape(%524, newshape=[64]) /* ty=Tensor[(64), float64] */;
    %527 = @func_5164(%525, %526) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) */;
    %528 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %529 = cast(meta[relay.Constant][30] /* ty=Tensor[(32, 2), float64] */, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
    %530 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(32, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %531 = cast(meta[relay.Constant][29] /* ty=Tensor[(32, 2), float64] */, dtype="bool") /* ty=Tensor[(32, 2), bool] */;
    %532 = dyn.reshape(%529, %530, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %533 = cast(%var_6821, dtype="float32") /* ty=Tensor[(480), float32] */;
    %534 = cast(%var_6821, dtype="float32") /* ty=Tensor[(480), float32] */;
    %535 = reshape(%533, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
    %536 = reshape(%534, newshape=[15, 16, 2]) /* ty=Tensor[(15, 16, 2), float32] */;
    %537 = @func_628(%535, %536) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */;
    %538 = %522.2;
    %539 = %527.3;
    %540 = %528.1;
    %541 = greater_equal(%531, %532) /* ty=Tensor[(32, 2), bool] */;
    %542 = %537.1;
    (%538, %539, meta[relay.Constant][28] /* ty=Tensor[(16), float64] */, %540, %541, %542, %var_6821)
  };
  %543(%var_6835) /* ty=(Tensor[(2, 10, 2), bool], Tensor[(1, 8, 12), float64], Tensor[(16), float64], Tensor[(2, 10, 2), float32], Tensor[(32, 2), bool], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) */
}

def @func_12926() -> (Tensor[(2, 10, 2), float32],) {
  %544 = @func_7341() /* ty=Tensor[(2, 10, 2), float32] */;
  (%544,)
}

def @func_6569() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32]) {
  %545 = @func_5296() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %546 = @func_5765() /* ty=(Tensor[(4, 13, 16), float64],) */;
  %547 = %545.0;
  %548 = %546.0;
  %549 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  (%547, %548, %549)
}

def @func_6906(%var_6904: Tensor[(400), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) {
  %550 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %551 = cast(%var_6904, dtype="float32") /* ty=Tensor[(400), float32] */;
  %552 = reshape(%551, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %553 = @func_4435(%552) /* ty=(Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) */;
  %554 = %550.1;
  %555 = %553.0;
  (%554, %555, %var_6904)
}

def @func_15540(%var_15526: Tensor[(14, 11, 5), float32]) -> (Tensor[(14, 11, 5), float32], Tensor[(2, 10, 2), float32]) {
  %556 = cast(%var_15526, dtype="float32") /* ty=Tensor[(14, 11, 5), float32] */;
  %557 = acosh(%556) /* ty=Tensor[(14, 11, 5), float32] */;
  %558 = @func_11301() /* ty=Tensor[(2, 10, 2), float32] */;
  (%557, %558)
}

def @func_10849(%var_10847: Tensor[(7, 3, 9), float64]) -> (Tensor[(7, 3, 9), float64],) {
  @func_10846(%var_10847) /* ty=(Tensor[(7, 3, 9), float64],) */
}

def @func_6571() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32]) {
  @func_6569() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_9970(%var_9945: Tensor[(300, 4), float32], %var_9946: Tensor[(480), float32], %var_9947: Tensor[(240), float64]) -> (Tensor[(2, 10, 2), float64], Tensor[(240, 1), float64], Tensor[(480), float32], Tensor[(240), float64], Tensor[(2, 10, 2), float64], Tensor[(300, 4), float32]) {
  %559 = @func_7852() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %560 = cast(%var_9945, dtype="float32") /* ty=Tensor[(300, 4), float32] */;
  %561 = cast(%var_9946, dtype="float32") /* ty=Tensor[(480), float32] */;
  %562 = cast(%var_9947, dtype="float64") /* ty=Tensor[(240), float64] */;
  %563 = reshape(%560, newshape=[16, 5, 15]) /* ty=Tensor[(16, 5, 15), float32] */;
  %564 = reshape(%561, newshape=[480]) /* ty=Tensor[(480), float32] */;
  %565 = reshape(%562, newshape=[240, 1]) /* ty=Tensor[(240, 1), float64] */;
  %566 = @func_5893(%563, %564, %565) /* ty=(Tensor[(16, 5, 15), float32], Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(15, 16, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64]) */;
  %567 = @func_9897() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
  %568 = cast(%var_9945, dtype="float32") /* ty=Tensor[(300, 4), float32] */;
  %569 = %559.0;
  %570 = %566.5;
  %571 = %567.1;
  %572 = atanh(%568) /* ty=Tensor[(300, 4), float32] */;
  (%569, %570, %var_9946, %var_9947, %571, %572)
}

def @func_1559() -> Tensor[(2, 10, 2), float32] {
  @func_1557() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_5108() -> Tensor[(2, 10, 2), float32] {
  @func_3485() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_7725() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_7723() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_10482(%var_10443: Tensor[(28), float32], %var_10444: Tensor[(196), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(2, 10, 2), int32]) {
  %573 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %574 = @func_7784() /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) */;
  %575 = cast(%var_10443, dtype="float32") /* ty=Tensor[(28), float32] */;
  %576 = cast(%var_10444, dtype="float32") /* ty=Tensor[(196), float32] */;
  %577 = reshape(%575, newshape=[28, 1]) /* ty=Tensor[(28, 1), float32] */;
  %578 = reshape(%576, newshape=[49, 4]) /* ty=Tensor[(49, 4), float32] */;
  %579 = @func_3603(%577, %578) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28, 1), float32], Tensor[(49, 4), float32], Tensor[(16), float64]) */;
  %580 = %573.0;
  %581 = %574.1;
  %582 = %579.4;
  %583 = @func_8310() /* ty=Tensor[(2, 10, 2), int32] */;
  (%580, %581, %582, %var_10443, %var_10444, %583)
}

def @func_10671() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %584 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %585 = %584.1;
  %586 = @func_9616() /* ty=Tensor[(2, 10, 2), float32] */;
  (%585, %586)
}

def @func_4227(%var_4226: Tensor[(1040), uint8]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(13, 5, 16), uint8], uint8, Tensor[(1040), uint8]) {
  %601 = fn (%var_4222: Tensor[(1040), uint8]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(13, 5, 16), uint8], uint8, Tensor[(1040), uint8]) {
    %587 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
    %588 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
    %589 = %588.3;
    %590 = cast(%589, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
    %591 = reshape(%590, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
    %592 = @func_1530(%591) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
    %593 = cast(meta[relay.Constant][31] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %594 = cast(%var_4222, dtype="uint8") /* ty=Tensor[(1040), uint8] */;
    %595 = reshape(%593, newshape=[]) /* ty=uint8 */;
    %596 = reshape(%594, newshape=[13, 5, 16]) /* ty=Tensor[(13, 5, 16), uint8] */;
    %597 = %587.0;
    %598 = %592.1;
    %599 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
    %600 = @func_105(%595, %596) /* ty=Tensor[(13, 5, 16), uint8] */;
    (%597, %589, %598, %599, %600, meta[relay.Constant][31] /* ty=uint8 */, %var_4222)
  };
  %601(%var_4226) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(13, 5, 16), uint8], uint8, Tensor[(1040), uint8]) */
}

def @func_15981() -> (Tensor[(2, 10, 2), float32],) {
  @func_15979() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_15566(%var_15564: Tensor[(5, 9, 6), float64], %var_15565: Tensor[(200, 2), float32]) -> (Tensor[(5, 9, 6), float64], Tensor[(2, 10, 2), float32], Tensor[(200, 2), float32]) {
  %608 = fn (%var_15545: Tensor[(5, 9, 6), float64], %var_15561: Tensor[(200, 2), float32]) -> (Tensor[(5, 9, 6), float64], Tensor[(2, 10, 2), float32], Tensor[(200, 2), float32]) {
    %602 = cast(%var_15545, dtype="float64") /* ty=Tensor[(5, 9, 6), float64] */;
    %603 = cast(%var_15561, dtype="float32") /* ty=Tensor[(200, 2), float32] */;
    %604 = reshape(%603, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
    %605 = @func_4435(%604) /* ty=(Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) */;
    %606 = acosh(%602) /* ty=Tensor[(5, 9, 6), float64] */;
    %607 = %605.1;
    (%606, %607, %var_15561)
  };
  %608(%var_15564, %var_15565) /* ty=(Tensor[(5, 9, 6), float64], Tensor[(2, 10, 2), float32], Tensor[(200, 2), float32]) */
}

def @func_6909(%var_6907: Tensor[(400), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) {
  @func_6906(%var_6907) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) */
}

def @func_1392() -> Tensor[(2, 10, 2), float32] {
  %609 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_1353() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %609() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_5305() -> Tensor[(2, 10, 2), float32] {
  %610 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_1557() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %610() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_399(%var_397: Tensor[(10, 10, 4), float32]) -> (Tensor[(10, 10, 4), float32],) {
  @func_396(%var_397) /* ty=(Tensor[(10, 10, 4), float32],) */
}

def @func_1550() -> (Tensor[(2, 10, 2), float32],) {
  %613 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %611 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
    %612 = %611.0;
    (%612,)
  };
  %613() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_3873(%var_3872: Tensor[(8, 6, 12), float32]) -> (Tensor[(8, 6, 12), float32], Tensor[(240), float64]) {
  %618 = fn (%var_3859: Tensor[(8, 6, 12), float32]) -> (Tensor[(8, 6, 12), float32], Tensor[(240), float64]) {
    %614 = cast(%var_3859, dtype="float32") /* ty=Tensor[(8, 6, 12), float32] */;
    %615 = @func_2947() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %616 = sigmoid(%614) /* ty=Tensor[(8, 6, 12), float32] */;
    %617 = %615.1;
    (%616, %617)
  };
  %618(%var_3872) /* ty=(Tensor[(8, 6, 12), float32], Tensor[(240), float64]) */
}

def @func_11780(%var_11767: Tensor[(16), float64], %var_11768: Tensor[(64), float64]) -> (Tensor[(4, 60), bool], Tensor[(4, 60), float32], Tensor[(4, 4, 4), uint32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(4, 60), float32]) {
  %619 = @func_7784() /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) */;
  %620 = %619.0;
  %621 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 60), float64] */, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %623 = cast(%620, dtype="bool") /* ty=Tensor[(4, 60), bool] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %625 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 60), float64] */, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %626 = shape_of(%620, dtype="int32") /* ty=Tensor[(2), int32] */;
  %627 = cast(%620, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %628 = dyn.reshape(%625, %626, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %629 = cast(%var_11767, dtype="float64") /* ty=Tensor[(16), float64] */;
  %630 = cast(%var_11768, dtype="float64") /* ty=Tensor[(64), float64] */;
  %631 = cast(%var_11768, dtype="float32") /* ty=Tensor[(64), float32] */;
  %632 = reshape(%629, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %633 = reshape(%630, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %634 = reshape(%631, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %635 = @func_3026(%632, %633, %634) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
  %636 = cast(%620, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %637 = less_equal(%623, %624) /* ty=Tensor[(4, 60), bool] */;
  %638 = power(%627, %628) /* ty=Tensor[(4, 60), float32] */;
  %639 = %635.2;
  %640 = erf(%636) /* ty=Tensor[(4, 60), float32] */;
  (%637, %638, %639, %var_11767, %var_11768, %640)
}

def @func_15309() -> Tensor[(15, 3, 8), float64] {
  %642 = fn () -> Tensor[(15, 3, 8), float64] {
    %641 = @func_11349() /* ty=(Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) */;
    %641.0
  };
  %642() /* ty=Tensor[(15, 3, 8), float64] */
}

def @func_8425(%var_8423: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) {
  @func_8422(%var_8423) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) */
}

def @func_9212() -> Tensor[(2, 10, 2), float32] {
  %643 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_5844() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %643() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_7521() -> Tensor[(2, 10, 2), float64] {
  @func_6176() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_6000() -> Tensor[(2, 10, 2), float64] {
  %644 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %644.0
}

def @func_5846() -> Tensor[(2, 10, 2), float32] {
  @func_5844() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_10892() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %648 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %645 = @func_7262() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
    %646 = %645.2;
    %647 = @func_10016() /* ty=Tensor[(2, 10, 2), float32] */;
    (%646, %647)
  };
  %648() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_12267(%var_12265: Tensor[(189), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(189), float64], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64], Tensor[(7, 3, 9), bool], Tensor[(4, 60), float64]) {
  @func_12264(%var_12265) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(189), float64], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64], Tensor[(7, 3, 9), bool], Tensor[(4, 60), float64]) */
}

def @func_2783() -> Tensor[(4, 13, 16), float64] {
  %650 = fn () -> Tensor[(4, 13, 16), float64] {
    %649 = cast(meta[relay.Constant][33] /* ty=Tensor[(4, 13, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
    erf(%649) /* ty=Tensor[(4, 13, 16), float64] */
  };
  %650() /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_5795() -> Tensor[(2, 10, 2), float32] {
  %651 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %651.0
}

def @func_15639() -> (Tensor[(2, 10, 2), float32],) {
  %653 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %652 = @func_11396() /* ty=Tensor[(2, 10, 2), float32] */;
    (%652,)
  };
  %653() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_3836(%var_3834: Tensor[(480), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) {
  @func_3833(%var_3834) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */
}

def @main(%var_16169: Tensor[(16, 15, 4), uint16]) -> (Tensor[(16, 15, 4), uint16],) {
  %654 = cast(meta[relay.Constant][34] /* ty=Tensor[(16, 15, 4), uint16] */, dtype="uint16") /* ty=Tensor[(16, 15, 4), uint16] */;
  %655 = shape_of(%var_16169, dtype="int32") /* ty=Tensor[(3), int32] */;
  %656 = cast(%var_16169, dtype="uint16") /* ty=Tensor[(16, 15, 4), uint16] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %658 = bitwise_or(%656, %657) /* ty=Tensor[(16, 15, 4), uint16] */;
  (%658,)
}

def @func_16043() -> (Tensor[(2, 10, 2), float64], Tensor[(64), float64], Tensor[(400), float32], Tensor[(64), float64]) {
  @func_16041() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(64), float64], Tensor[(400), float32], Tensor[(64), float64]) */
}

def @func_5897(%var_5894: Tensor[(16, 5, 15), float32], %var_5895: Tensor[(480), float32], %var_5896: Tensor[(240, 1), float64]) -> (Tensor[(16, 5, 15), float32], Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(15, 16, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64]) {
  %673 = fn (%var_5875: Tensor[(16, 5, 15), float32], %var_5879: Tensor[(480), float32], %var_5890: Tensor[(240, 1), float64]) -> (Tensor[(16, 5, 15), float32], Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(15, 16, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64]) {
    %659 = cast(%var_5875, dtype="float32") /* ty=Tensor[(16, 5, 15), float32] */;
    %660 = cast(%var_5879, dtype="float32") /* ty=Tensor[(480), float32] */;
    %661 = reshape(%660, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %662 = @func_3833(%661) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
    %663 = cast(%var_5879, dtype="float32") /* ty=Tensor[(480), float32] */;
    %664 = reshape(%663, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %665 = @func_3833(%664) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), float32], Tensor[(480), float32]) */;
    %666 = cast(%var_5890, dtype="float64") /* ty=Tensor[(240, 1), float64] */;
    %667 = reshape(%666, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
    %668 = @func_511(%667) /* ty=(Tensor[(5, 8, 6), float64],) */;
    %669 = asin(%659) /* ty=Tensor[(16, 5, 15), float32] */;
    %670 = %662.1;
    %671 = %665.3;
    %672 = %668.0;
    (%669, %670, %var_5879, %671, %672, %var_5890)
  };
  %673(%var_5894, %var_5895, %var_5896) /* ty=(Tensor[(16, 5, 15), float32], Tensor[(2, 10, 2), float32], Tensor[(480), float32], Tensor[(15, 16, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240, 1), float64]) */
}

def @func_1935(%var_1934: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) {
  %685 = fn (%var_1916: Tensor[(11, 15, 5), float64]) -> (Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) {
    %674 = cast(%var_1916, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
    %675 = acosh(%674) /* ty=Tensor[(11, 15, 5), float64] */;
    %676 = cast(%var_1916, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
    %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
    %678 = cast(%675, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
    %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %680 = cast(meta[relay.Constant][35] /* ty=Tensor[(36, 12), int16] */, dtype="int16") /* ty=Tensor[(36, 12), int16] */;
    %681 = reshape(%680, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), int16] */;
    %682 = @func_918(%681) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */;
    %683 = logical_or(%678, %679) /* ty=Tensor[(11, 15, 5), bool] */;
    %684 = %682.2;
    (%683, %684, meta[relay.Constant][35] /* ty=Tensor[(36, 12), int16] */)
  };
  %685(%var_1934) /* ty=(Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) */
}

def @func_9663(%var_9661: float64, %var_9662: Tensor[(390), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(15, 13, 2), bool], float64, Tensor[(390), float64], Tensor[(2, 10, 2), float32]) {
  %698 = fn (%var_9629: float64, %var_9630: Tensor[(390), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(15, 13, 2), bool], float64, Tensor[(390), float64], Tensor[(2, 10, 2), float32]) {
    %686 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %687 = @func_7611() /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
    %688 = cast(%var_9629, dtype="float64") /* ty=float64 */;
    %689 = cast(%var_9630, dtype="float64") /* ty=Tensor[(390), float64] */;
    %690 = reshape(%688, newshape=[]) /* ty=float64 */;
    %691 = reshape(%689, newshape=[15, 13, 2]) /* ty=Tensor[(15, 13, 2), float64] */;
    %692 = @func_4077(%690, %691) /* ty=(Tensor[(15, 13, 2), bool], Tensor[(2, 10, 2), float32]) */;
    %693 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %694 = %686.2;
    %695 = %687.2;
    %696 = %692.0;
    %697 = %693.1;
    (%694, %695, %696, %var_9629, %var_9630, %697)
  };
  %698(%var_9661, %var_9662) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(15, 13, 2), bool], float64, Tensor[(390), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_6436() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %705 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %699 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %700 = %699.0;
    %701 = cast(%700, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
    %702 = reshape(%701, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %703 = @func_2851(%702) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) */;
    %704 = %703.4;
    (%700, %704)
  };
  %705() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_7901() -> (Tensor[(4, 60), float64], Tensor[(4, 60), float32]) {
  %706 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %707 = @func_5296() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %708 = %707.1;
  %709 = cast(%708, dtype="float32") /* ty=Tensor[(4, 60), float32] */;
  %710 = %706.1;
  %711 = asin(%709) /* ty=Tensor[(4, 60), float32] */;
  (%710, %711)
}

def @func_9496() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %715 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %712 = @func_6569() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32]) */;
    %713 = @func_5844() /* ty=Tensor[(2, 10, 2), float32] */;
    %714 = %712.0;
    (%713, %714)
  };
  %715() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_12641() -> Tensor[(2, 10, 2), float64] {
  @func_12639() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_5844() -> Tensor[(2, 10, 2), float32] {
  @func_1353() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_9899() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  @func_9897() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */
}

def @func_14408() -> (Tensor[(16), float64], Tensor[(2, 10, 2), float64]) {
  @func_14406() /* ty=(Tensor[(16), float64], Tensor[(2, 10, 2), float64]) */
}

def @func_13132() -> Tensor[(2, 10, 2), float32] {
  @func_13130() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_3963() -> Tensor[(3360), float32] {
  @func_3961() /* ty=Tensor[(3360), float32] */
}

def @func_4077(%var_4063: float64, %var_4064: Tensor[(15, 13, 2), float64]) -> (Tensor[(15, 13, 2), bool], Tensor[(2, 10, 2), float32]) {
  %716 = cast(%var_4063, dtype="bool") /* ty=bool */;
  %717 = cast(%var_4064, dtype="bool") /* ty=Tensor[(15, 13, 2), bool] */;
  %718 = equal(%716, %717) /* ty=Tensor[(15, 13, 2), bool] */;
  %719 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
  (%718, %719)
}

def @func_7957() -> (Tensor[(2, 10, 2), float32],) {
  %720 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  (%720,)
}

def @func_5167(%var_5165: Tensor[(16), float64], %var_5166: Tensor[(64), float64]) -> (Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) {
  %733 = fn (%var_5137: Tensor[(16), float64], %var_5138: Tensor[(64), float64]) -> (Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) {
    %721 = cast(%var_5137, dtype="float64") /* ty=Tensor[(16), float64] */;
    %722 = cast(%var_5138, dtype="float64") /* ty=Tensor[(64), float64] */;
    %723 = cast(%var_5138, dtype="float32") /* ty=Tensor[(64), float32] */;
    %724 = reshape(%721, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
    %725 = reshape(%722, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
    %726 = reshape(%723, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %727 = @func_3026(%724, %725, %726) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
    %728 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 8, 12), float64] */, dtype="float64") /* ty=Tensor[(1, 8, 12), float64] */;
    %729 = atanh(%728) /* ty=Tensor[(1, 8, 12), float64] */;
    %730 = cast(%729, dtype="float64") /* ty=Tensor[(1, 8, 12), float64] */;
    %731 = %727.0;
    %732 = exp(%730) /* ty=Tensor[(1, 8, 12), float64] */;
    (%731, %var_5137, %var_5138, %732)
  };
  %733(%var_5165, %var_5166) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(1, 8, 12), float64]) */
}

def @func_3918(%var_3917: Tensor[(3, 3, 13), float32]) -> (Tensor[(3, 3, 13), float32],) {
  %736 = fn (%var_3898: Tensor[(3, 3, 13), float32]) -> (Tensor[(3, 3, 13), float32],) {
    %734 = cast(%var_3898, dtype="float32") /* ty=Tensor[(3, 3, 13), float32] */;
    %735 = atanh(%734) /* ty=Tensor[(3, 3, 13), float32] */;
    (%735,)
  };
  %736(%var_3917) /* ty=(Tensor[(3, 3, 13), float32],) */
}

def @func_805(%var_802: Tensor[(12, 14, 1), uint64], %var_803: Tensor[(12, 14, 12), uint64], %var_804: Tensor[(12, 14, 12), uint64]) -> (Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) {
  %745 = fn (%var_783: Tensor[(12, 14, 1), uint64], %var_784: Tensor[(12, 14, 12), uint64], %var_793: Tensor[(12, 14, 12), uint64]) -> (Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) {
    %737 = cast(%var_783, dtype="uint64") /* ty=Tensor[(12, 14, 1), uint64] */;
    %738 = cast(%var_784, dtype="uint64") /* ty=Tensor[(12, 14, 12), uint64] */;
    %739 = cast(%var_793, dtype="bool") /* ty=Tensor[(12, 14, 12), bool] */;
    %740 = shape_of(%var_784, dtype="int32") /* ty=Tensor[(3), int32] */;
    %741 = cast(%var_784, dtype="bool") /* ty=Tensor[(12, 14, 12), bool] */;
    %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %743 = minimum(%737, %738) /* ty=Tensor[(12, 14, 12), uint64] */;
    %744 = greater(%741, %742) /* ty=Tensor[(12, 14, 12), bool] */;
    (%743, %744)
  };
  %745(%var_802, %var_803, %var_804) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */
}

def @func_10766() -> Tensor[(2, 10, 2), float32] {
  %747 = fn () -> Tensor[(2, 10, 2), float32] {
    %746 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %746.0
  };
  %747() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_3767() -> (Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) {
  %748 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %749 = %748.3;
  %750 = cast(%749, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %751 = reshape(%750, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %752 = @func_1866(%751) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %753 = %752.0;
  %754 = cast(%753, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %755 = reshape(%754, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %756 = @func_1530(%755) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %757 = %756.0;
  %758 = cast(%757, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %759 = reshape(%758, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %760 = @func_1866(%759) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %761 = %760.0;
  (%749, %753, %757, %761)
}

def @func_6041() -> (Tensor[(2, 10, 2), float32],) {
  %764 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %762 = @func_4645() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %763 = %762.0;
    (%763,)
  };
  %764() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_5110() -> Tensor[(2, 10, 2), float32] {
  @func_5108() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8913() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) {
  @func_8911() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */
}

def @func_10972() -> (Tensor[(2, 10, 2), float32],) {
  @func_10970() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_12410() -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), uint16], Tensor[(400), float32]) {
  %765 = @func_11049() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %766 = cast(meta[relay.Constant][37] /* ty=Tensor[(400), int64] */, dtype="int64") /* ty=Tensor[(400), int64] */;
  %767 = reshape(%766, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), int64] */;
  %768 = @func_4501(%767) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(10, 10, 4), uint16], Tensor[(10, 10, 4), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %769 = cast(meta[relay.Constant][38] /* ty=Tensor[(400), int64] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %770 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(400), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %771 = cast(meta[relay.Constant][37] /* ty=Tensor[(400), int64] */, dtype="float32") /* ty=Tensor[(400), float32] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?), float32] */;
  %773 = %765.2;
  %774 = %768.1;
  %775 = floor_divide(%771, %772) /* ty=Tensor[(400), float32] */;
  (%773, %774, %775)
}

def @func_10814() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %776 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
  %777 = @func_8596() /* ty=Tensor[(2, 10, 2), float32] */;
  (%776, %777)
}

def @func_10486(%var_10484: Tensor[(28), float32], %var_10485: Tensor[(196), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(2, 10, 2), int32]) {
  @func_10482(%var_10484, %var_10485) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(2, 10, 2), int32]) */
}

def @func_3459() -> Tensor[(2, 10, 2), int32] {
  @func_2684() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_1869(%var_1867: Tensor[(2, 10, 2), int32]) -> (Tensor[(2, 10, 2), bool],) {
  @func_1866(%var_1867) /* ty=(Tensor[(2, 10, 2), bool],) */
}

def @func_9814() -> (Tensor[(2, 10, 2), float32], Tensor[(3360), float32]) {
  @func_9812() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(3360), float32]) */
}

def @func_9433(%var_9429: Tensor[(10, 420), float32]) -> (Tensor[(2, 10, 2), int32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 420), int16]) {
  %778 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %779 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 420), float32] */, dtype="float32") /* ty=Tensor[(1, 420), float32] */;
  %780 = reshape(%779, newshape=[10, 14, 3]) /* ty=Tensor[(10, 14, 3), float32] */;
  %781 = @func_9294(%780) /* ty=(Tensor[(10, 14, 3), float32], Tensor[(4, 13, 16), float64]) */;
  %782 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %783 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 420), float32] */, dtype="int16") /* ty=Tensor[(1, 420), int16] */;
  %784 = cast(%var_9429, dtype="int16") /* ty=Tensor[(10, 420), int16] */;
  %785 = %778.0;
  %786 = %781.1;
  %787 = %782.1;
  %788 = maximum(%783, %784) /* ty=Tensor[(10, 420), int16] */;
  (%785, %786, %787, %788)
}

def @func_12899(%var_12898: Tensor[(15, 13, 2), float64]) -> (Tensor[(15, 13, 2), float64], Tensor[(2, 10, 2), int32]) {
  %793 = fn (%var_12886: Tensor[(15, 13, 2), float64]) -> (Tensor[(15, 13, 2), float64], Tensor[(2, 10, 2), int32]) {
    %789 = cast(%var_12886, dtype="float64") /* ty=Tensor[(15, 13, 2), float64] */;
    %790 = @func_7611() /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
    %791 = exp(%789) /* ty=Tensor[(15, 13, 2), float64] */;
    %792 = %790.2;
    (%791, %792)
  };
  %793(%var_12898) /* ty=(Tensor[(15, 13, 2), float64], Tensor[(2, 10, 2), int32]) */
}

def @func_15613() -> (Tensor[(2, 10, 2), float32],) {
  @func_15611() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_14308() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %794 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %795 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %796 = %794.0;
  %797 = %795.0;
  (%796, %797)
}

def @func_5681() -> (Tensor[(2, 10, 2), float32],) {
  %798 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %799 = %798.0;
  (%799,)
}

def @func_7723() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %800 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %801 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %802 = %800.0;
  %803 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %804 = %801.0;
  (%802, %803, %804)
}

def @func_2138() -> Tensor[(2, 10, 2), float32] {
  %806 = fn () -> Tensor[(2, 10, 2), float32] {
    %805 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %805.0
  };
  %806() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8682() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  @func_8680() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */
}

def @func_1438() -> (Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) {
  %821 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) {
    %807 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
    %808 = reshape(%807, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
    %809 = @func_511(%808) /* ty=(Tensor[(5, 8, 6), float64],) */;
    %810 = cast(meta[relay.Constant][41] /* ty=Tensor[(400), float32] */, dtype="float32") /* ty=Tensor[(400), float32] */;
    %811 = reshape(%810, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
    %812 = @func_396(%811) /* ty=(Tensor[(10, 10, 4), float32],) */;
    %813 = %812.0;
    %814 = cast(%813, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
    %815 = reshape(%814, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
    %816 = @func_396(%815) /* ty=(Tensor[(10, 10, 4), float32],) */;
    %817 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
    %818 = %809.0;
    %819 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
    %820 = %816.0;
    (%817, %818, meta[relay.Constant][40] /* ty=Tensor[(4, 60), float64] */, %819, %813, meta[relay.Constant][41] /* ty=Tensor[(400), float32] */, %820)
  };
  %821() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */
}

def @func_12693(%var_12691: Tensor[(2, 200), float32]) -> (Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(8, 10, 5), float64], Tensor[(2, 200), float32]) {
  @func_12690(%var_12691) /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(8, 10, 5), float64], Tensor[(2, 200), float32]) */
}

def @func_14310() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  @func_14308() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_14291() -> Tensor[(2, 10, 2), float32] {
  %823 = fn () -> Tensor[(2, 10, 2), float32] {
    %822 = @func_11595() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %822.0
  };
  %823() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8581() -> (Tensor[(4, 60), float32], Tensor[(4, 60), float64]) {
  @func_8579() /* ty=(Tensor[(4, 60), float32], Tensor[(4, 60), float64]) */
}

def @func_2325() -> Tensor[(4, 60), float64] {
  %824 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
  %824.2
}

def @func_13966(%var_13964: Tensor[(200, 2), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(8, 10, 5), float32], Tensor[(2, 10, 2), int32], Tensor[(200, 2), int64]) {
  @func_13963(%var_13964) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(8, 10, 5), float32], Tensor[(2, 10, 2), int32], Tensor[(200, 2), int64]) */
}

def @func_13565() -> (Tensor[(2, 10, 2), float32],) {
  @func_13563() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_4166() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) {
  @func_4164() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) */
}

def @func_8422(%var_8394: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) {
  %825 = @func_5361() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) */;
  %826 = cast(%var_8394, dtype="float64") /* ty=Tensor[(825), float64] */;
  %827 = reshape(%826, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %828 = @func_1933(%827) /* ty=(Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) */;
  %829 = cast(meta[relay.Constant][42] /* ty=Tensor[(825), float64] */, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %830 = shape_of(%var_8394, dtype="int32") /* ty=Tensor[(1), int32] */;
  %831 = cast(%var_8394, dtype="uint8") /* ty=Tensor[(825), uint8] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %833 = @func_3485() /* ty=Tensor[(2, 10, 2), float32] */;
  %834 = %825.0;
  %835 = %828.1;
  %836 = bitwise_xor(%831, %832) /* ty=Tensor[(825), uint8] */;
  (%833, %834, %835, %836)
}

def @func_4437(%var_4436: Tensor[(10, 10, 4), float32]) -> (Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) {
  %846 = fn (%var_4427: Tensor[(10, 10, 4), float32]) -> (Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) {
    %837 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
    %838 = %837.4;
    %839 = cast(%var_4427, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
    %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
    %841 = cast(%838, dtype="bool") /* ty=Tensor[(10, 10, 4), bool] */;
    %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %843 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %844 = less(%841, %842) /* ty=Tensor[(10, 10, 4), bool] */;
    %845 = %843.1;
    (%844, %845)
  };
  %846(%var_4436) /* ty=(Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) */
}

def @func_7936() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_7934() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_921(%var_919: Tensor[(3, 12, 12), int16]) -> (Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) {
  @func_918(%var_919) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */
}

def @func_2894() -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  @func_2892() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */
}

def @func_11349() -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) {
  %847 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
  %848 = @func_11301() /* ty=Tensor[(2, 10, 2), float32] */;
  (%847, %848)
}

def @func_2594(%var_2592: Tensor[(168), uint64], %var_2593: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(36, 12), int16], Tensor[(825), float64], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360, 1), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float32]) {
  @func_2590(%var_2592, %var_2593) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(36, 12), int16], Tensor[(825), float64], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360, 1), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_15441() -> Tensor[(4, 60), float32] {
  @func_15439() /* ty=Tensor[(4, 60), float32] */
}

def @func_1353() -> Tensor[(2, 10, 2), float32] {
  %849 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 10, 2), float32] */, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  rsqrt(%849) /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_1745() -> Tensor[(2, 10, 2), float64] {
  %853 = fn () -> Tensor[(2, 10, 2), float64] {
    %850 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %851 = %850.0;
    %852 = cast(%851, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
    atan(%852) /* ty=Tensor[(2, 10, 2), float64] */
  };
  %853() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_2327() -> Tensor[(4, 60), float64] {
  @func_2325() /* ty=Tensor[(4, 60), float64] */
}

def @func_5015(%var_5013: Tensor[(400), float32], %var_5014: Tensor[(240), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) {
  %866 = fn (%var_4995: Tensor[(400), float32], %var_5004: Tensor[(240), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) {
    %854 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %855 = cast(%var_4995, dtype="float32") /* ty=Tensor[(400), float32] */;
    %856 = reshape(%855, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
    %857 = @func_396(%856) /* ty=(Tensor[(10, 10, 4), float32],) */;
    %858 = @func_2947() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(432), int16], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %859 = cast(%var_5004, dtype="float64") /* ty=Tensor[(240), float64] */;
    %860 = reshape(%859, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
    %861 = @func_511(%860) /* ty=(Tensor[(5, 8, 6), float64],) */;
    %862 = %854.0;
    %863 = %857.0;
    %864 = %858.0;
    %865 = %861.0;
    (%862, %863, %var_4995, %864, %865, %var_5004)
  };
  %866(%var_5013, %var_5014) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */
}

def @func_8517() -> Tensor[(2, 10, 2), float32] {
  @func_8515() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_15611() -> (Tensor[(2, 10, 2), float32],) {
  %867 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %868 = %867.1;
  (%868,)
}

def @func_5797() -> Tensor[(2, 10, 2), float32] {
  @func_5795() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8375() -> Tensor[(2, 10, 2), float32] {
  %869 = @func_7934() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %869.1
}

def @func_2195() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_1355() -> Tensor[(2, 10, 2), float32] {
  @func_1353() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_2049() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) {
  @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */
}

def @func_16129() -> (Tensor[(9, 2, 3), float64], Tensor[(2, 10, 2), int32]) {
  %873 = fn () -> (Tensor[(9, 2, 3), float64], Tensor[(2, 10, 2), int32]) {
    %870 = cast(meta[relay.Constant][44] /* ty=Tensor[(9, 2, 3), float64] */, dtype="float64") /* ty=Tensor[(9, 2, 3), float64] */;
    %871 = asin(%870) /* ty=Tensor[(9, 2, 3), float64] */;
    %872 = @func_9700() /* ty=Tensor[(2, 10, 2), int32] */;
    (%871, %872)
  };
  %873() /* ty=(Tensor[(9, 2, 3), float64], Tensor[(2, 10, 2), int32]) */
}

def @func_8377() -> Tensor[(2, 10, 2), float32] {
  @func_8375() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_2590(%var_2527: Tensor[(168), uint64], %var_2539: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(36, 12), int16], Tensor[(825), float64], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360, 1), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float32]) {
  %874 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %875 = %874.0;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  %877 = cast(%var_2527, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %878 = cast(meta[relay.Constant][45] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %879 = cast(meta[relay.Constant][45] /* ty=Tensor[(2016), uint64] */, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
  %880 = reshape(%877, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
  %881 = reshape(%878, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %882 = reshape(%879, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
  %883 = @func_801(%880, %881, %882) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
  %884 = cast(%var_2539, dtype="float64") /* ty=Tensor[(825), float64] */;
  %885 = reshape(%884, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float64] */;
  %886 = @func_1933(%885) /* ty=(Tensor[(11, 15, 5), bool], Tensor[(240), float64], Tensor[(36, 12), int16]) */;
  %887 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %888 = cast(meta[relay.Constant][46] /* ty=Tensor[(3360, 1), float32] */, dtype="float32") /* ty=Tensor[(3360, 1), float32] */;
  %889 = reshape(%888, newshape=[14, 15, 16]) /* ty=Tensor[(14, 15, 16), float32] */;
  %890 = @func_1901(%889) /* ty=(Tensor[(14, 15, 16), float32],) */;
  %891 = %886.2;
  %892 = cast(%891, dtype="int16") /* ty=Tensor[(36, 12), int16] */;
  %893 = reshape(%892, newshape=[3, 12, 12]) /* ty=Tensor[(3, 12, 12), int16] */;
  %894 = @func_918(%893) /* ty=(Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) */;
  %895 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %896 = cosh(%876) /* ty=Tensor[(2, 10, 2), float64] */;
  %897 = %883.0;
  %898 = %887.0;
  %899 = %890.0;
  %900 = %894.1;
  %901 = %895.0;
  (%896, %897, %var_2527, meta[relay.Constant][45] /* ty=Tensor[(2016), uint64] */, %891, %var_2539, %898, %899, meta[relay.Constant][46] /* ty=Tensor[(3360, 1), float32] */, %900, %901)
}

def @func_15812() -> Tensor[(2, 10, 2), float32] {
  %902 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_8375() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %902() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8911() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) {
  %903 = @func_7036() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %904 = %903.0;
  %905 = cast(%904, dtype="int32") /* ty=Tensor[(2, 10, 2), int32] */;
  %906 = reshape(%905, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), int32] */;
  %907 = @func_1866(%906) /* ty=(Tensor[(2, 10, 2), bool],) */;
  %908 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %909 = %907.0;
  %910 = %908.3;
  (%904, %909, %910)
}

def @func_16072() -> Tensor[(2, 10, 2), float32] {
  @func_16070() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_12960() -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) {
  %913 = fn () -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) {
    %911 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
    %912 = @func_10594() /* ty=Tensor[(2, 10, 2), float32] */;
    (%911, %912)
  };
  %913() /* ty=(Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_3701() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
  @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */
}

def @func_4164() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) {
  %914 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %915 = %914.0;
  %916 = @func_4136() /* ty=Tensor[(4, 13, 16), float64] */;
  %917 = @func_4136() /* ty=Tensor[(4, 13, 16), float64] */;
  (%915, %916, %917)
}

def @func_6144() -> (Tensor[(14, 15, 16), float64], Tensor[(2, 10, 2), int32]) {
  @func_6142() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(2, 10, 2), int32]) */
}

def @func_10673() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_3569() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %922 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %918 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %919 = @func_3360() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %920 = %918.1;
    %921 = %919.0;
    (%920, %921)
  };
  %922() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_3030(%var_3027: Tensor[(1, 4, 4), float64], %var_3028: Tensor[(4, 4, 4), float64], %var_3029: Tensor[(4, 4, 4), float32]) -> (Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) {
  %937 = fn (%var_3002: Tensor[(1, 4, 4), float64], %var_3003: Tensor[(4, 4, 4), float64], %var_3021: Tensor[(4, 4, 4), float32]) -> (Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) {
    %923 = cast(meta[relay.Constant][47] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
    %924 = reshape(%923, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
    %925 = @func_2646(%924) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
    %926 = cast(%var_3002, dtype="float64") /* ty=Tensor[(1, 4, 4), float64] */;
    %927 = cast(%var_3003, dtype="float64") /* ty=Tensor[(4, 4, 4), float64] */;
    %928 = floor_divide(%926, %927) /* ty=Tensor[(4, 4, 4), float64] */;
    %929 = cast(%928, dtype="float32") /* ty=Tensor[(4, 4, 4), float32] */;
    %930 = tan(%929) /* ty=Tensor[(4, 4, 4), float32] */;
    %931 = cast(%var_3021, dtype="uint32") /* ty=Tensor[(4, 4, 4), uint32] */;
    %932 = shape_of(%930, dtype="int32") /* ty=Tensor[(3), int32] */;
    %933 = cast(%930, dtype="uint32") /* ty=Tensor[(4, 4, 4), uint32] */;
    %934 = dyn.reshape(%931, %932, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %935 = %925.0;
    %936 = left_shift(%933, %934) /* ty=Tensor[(4, 4, 4), uint32] */;
    (%935, meta[relay.Constant][47] /* ty=Tensor[(1, 400), float32] */, %936)
  };
  %937(%var_3027, %var_3028, %var_3029) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */
}

def @func_11026() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %938 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %939 = %938.0;
  %940 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  (%939, %940)
}

def @func_14028() -> (Tensor[(2, 10, 2), float64],) {
  @func_14026() /* ty=(Tensor[(2, 10, 2), float64],) */
}

def @func_14256() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  %944 = fn () -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
    %941 = @func_9897() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
    %942 = %941.1;
    %943 = @func_13255() /* ty=Tensor[(2, 10, 2), float64] */;
    (%942, %943)
  };
  %944() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */
}

def @func_6129() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) {
  @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */
}

def @func_1968() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_9027(%var_8934: Tensor[(6, 10, 9), float32], %var_8935: Tensor[(6, 10, 9), float32], %var_8989: Tensor[(64), float64], %var_9020: Tensor[(825), float64]) -> (Tensor[(6, 10, 9), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(64), float64], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(825), float64]) {
  %945 = cast(%var_8935, dtype="float32") /* ty=Tensor[(6, 10, 9), float32] */;
  %946 = shape_of(%var_8934, dtype="int32") /* ty=Tensor[(3), int32] */;
  %947 = cast(%var_8934, dtype="float32") /* ty=Tensor[(6, 10, 9), float32] */;
  %948 = dyn.reshape(%945, %946, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %949 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %950 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %951 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 400), float32] */, dtype="float32") /* ty=Tensor[(1, 400), float32] */;
  %952 = cast(%var_8989, dtype="float64") /* ty=Tensor[(64), float64] */;
  %953 = reshape(%951, newshape=[400]) /* ty=Tensor[(400), float32] */;
  %954 = reshape(%952, newshape=[64]) /* ty=Tensor[(64), float64] */;
  %955 = @func_8247(%953, %954) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) */;
  %956 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %957 = cast(%var_9020, dtype="float64") /* ty=Tensor[(825), float64] */;
  %958 = reshape(%957, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %959 = @func_4731(%958) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(168), uint64], Tensor[(168), uint64], Tensor[(825), float64]) */;
  %960 = minimum(%947, %948) /* ty=Tensor[(6, 10, 9), float32] */;
  %961 = %949.0;
  %962 = %950.3;
  %963 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
  %964 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
  %965 = %955.0;
  %966 = %956.0;
  %967 = %959.0;
  (%960, %961, %962, %963, %964, %965, meta[relay.Constant][48] /* ty=Tensor[(1, 400), float32] */, %var_8989, %966, %967, %var_9020)
}

def @func_4731(%var_4712: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(168), uint64], Tensor[(168), uint64], Tensor[(825), float64]) {
  %968 = cast(meta[relay.Constant][49] /* ty=Tensor[(168), uint64] */, dtype="uint64") /* ty=Tensor[(168), uint64] */;
  %969 = cast(%var_4712, dtype="float64") /* ty=Tensor[(825), float64] */;
  %970 = reshape(%968, newshape=[168]) /* ty=Tensor[(168), uint64] */;
  %971 = reshape(%969, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %972 = @func_2590(%970, %971) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(36, 12), int16], Tensor[(825), float64], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360, 1), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float32]) */;
  %973 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
  %974 = %972.2;
  (%973, %974, meta[relay.Constant][49] /* ty=Tensor[(168), uint64] */, %var_4712)
}

def @func_11597() -> (Tensor[(2, 10, 2), float32],) {
  @func_11595() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_13630() -> (Tensor[(2, 10, 2), float32],) {
  %977 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %975 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %976 = %975.0;
    (%976,)
  };
  %977() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_14214(%var_14213: Tensor[(400), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(252, 8), uint64]) {
  %988 = fn (%var_14188: Tensor[(400), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(252, 8), uint64]) {
    %978 = @func_7071() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %979 = cast(%var_14188, dtype="float32") /* ty=Tensor[(400), float32] */;
    %980 = reshape(%979, newshape=[400]) /* ty=Tensor[(400), float32] */;
    %981 = @func_6906(%980) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) */;
    %982 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %983 = @func_7170() /* ty=(Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) */;
    %984 = %978.1;
    %985 = %981.1;
    %986 = %982.0;
    %987 = %983.3;
    (%984, %985, %var_14188, %986, %987)
  };
  %988(%var_14213) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32], Tensor[(2, 10, 2), float32], Tensor[(252, 8), uint64]) */
}

def @func_918(%var_898: Tensor[(3, 12, 12), int16]) -> (Tensor[(3, 12, 12), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64]) {
  %989 = cast(%var_898, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %990 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(3, 12, 12), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 12, 12), int16] */, dtype="bool") /* ty=Tensor[(3, 12, 12), bool] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %993 = equal(%991, %992) /* ty=Tensor[(3, 12, 12), bool] */;
  %994 = cast(meta[relay.Constant][50] /* ty=Tensor[(3, 12, 12), int16] */, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
  %995 = shape_of(%993, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(%993, dtype="float32") /* ty=Tensor[(3, 12, 12), float32] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %998 = cast(meta[relay.Constant][51] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
  %999 = reshape(%998, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %1000 = @func_511(%999) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %1001 = mod(%996, %997) /* ty=Tensor[(3, 12, 12), float32] */;
  %1002 = %1000.0;
  (%1001, %1002, meta[relay.Constant][51] /* ty=Tensor[(240), float64] */)
}

def @func_8131() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32]) {
  %1005 = fn () -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32]) {
    %1003 = @func_1744() /* ty=Tensor[(2, 10, 2), float64] */;
    %1004 = @func_4370() /* ty=Tensor[(2, 10, 2), int32] */;
    (%1003, %1004)
  };
  %1005() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32]) */
}

def @func_10367() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %1015 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
    %1006 = @func_8025() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %1007 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
    %1008 = %1006.2;
    %1009 = cast(%1008, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
    %1010 = reshape(%1009, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
    %1011 = @func_1530(%1010) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
    %1012 = @func_8515() /* ty=Tensor[(2, 10, 2), float32] */;
    %1013 = %1007.0;
    %1014 = %1011.1;
    (%1012, %1008, %1013, %1014)
  };
  %1015() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_5974() -> Tensor[(4, 13, 16), float64] {
  @func_5972() /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_3187() -> (Tensor[(2, 10, 2), float32],) {
  %1017 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %1016 = @func_3145() /* ty=Tensor[(2, 10, 2), float32] */;
    (%1016,)
  };
  %1017() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_13877() -> Tensor[(2, 10, 2), float32] {
  @func_3485() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_15191() -> Tensor[(2, 10, 2), float32] {
  %1019 = fn () -> Tensor[(2, 10, 2), float32] {
    %1018 = @func_9090() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1018.0
  };
  %1019() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_11535() -> Tensor[(2, 10, 2), float32] {
  @func_8596() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_1702(%var_1701: Tensor[(8, 50), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(8, 50), float32]) {
  %1025 = fn (%var_1685: Tensor[(8, 50), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(8, 50), float32]) {
    %1020 = cast(%var_1685, dtype="float32") /* ty=Tensor[(8, 50), float32] */;
    %1021 = reshape(%1020, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
    %1022 = @func_396(%1021) /* ty=(Tensor[(10, 10, 4), float32],) */;
    %1023 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
    %1024 = %1022.0;
    (%1023, %1024, %var_1685)
  };
  %1025(%var_1701) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(8, 50), float32]) */
}

def @func_11144() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) {
  @func_11142() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) */
}

def @func_9702() -> Tensor[(2, 10, 2), int32] {
  @func_9700() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_7786() -> (Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) {
  @func_7784() /* ty=(Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_8597() -> Tensor[(2, 10, 2), float32] {
  %1027 = fn () -> Tensor[(2, 10, 2), float32] {
    %1026 = @func_7934() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %1026.0
  };
  %1027() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_11085() -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %1033 = fn () -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %1028 = @func_10891() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %1029 = @func_7723() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %1030 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
    %1031 = %1028.1;
    %1032 = %1029.0;
    (%1030, %1031, %1032)
  };
  %1033() /* ty=(Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_2252() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %1034 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1035 = %1034.1;
  %1036 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %1037 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1035, %1036, %1037)
}

def @func_5233() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %1038 = @func_4338() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
  %1039 = %1038.0;
  %1040 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1039, %1040)
}

def @func_9812() -> (Tensor[(2, 10, 2), float32], Tensor[(3360), float32]) {
  %1041 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %1042 = @func_3961() /* ty=Tensor[(3360), float32] */;
  (%1041, %1042)
}

def @func_9436(%var_9434: Tensor[(10, 420), float32]) -> (Tensor[(2, 10, 2), int32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 420), int16]) {
  @func_9433(%var_9434) /* ty=(Tensor[(2, 10, 2), int32], Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 420), int16]) */
}

def @func_11896(%var_11895: Tensor[(16), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(64), float64], Tensor[(16), float64], Tensor[(4, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(336), float64], Tensor[(3360), float32]) {
  %1060 = fn (%var_11869: Tensor[(16), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(64), float64], Tensor[(16), float64], Tensor[(4, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(336), float64], Tensor[(3360), float32]) {
    %1043 = @func_4645() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1044 = cast(%var_11869, dtype="float64") /* ty=Tensor[(16), float64] */;
    %1045 = cast(meta[relay.Constant][52] /* ty=Tensor[(4, 16), float64] */, dtype="float64") /* ty=Tensor[(4, 16), float64] */;
    %1046 = reshape(%1044, newshape=[16, 1]) /* ty=Tensor[(16, 1), float64] */;
    %1047 = reshape(%1045, newshape=[64]) /* ty=Tensor[(64), float64] */;
    %1048 = @func_6998(%1046, %1047) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(3360), float32], Tensor[(8, 10, 5), float32], Tensor[(16, 1), float64], Tensor[(64), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
    %1049 = @func_7611() /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
    %1050 = cast(meta[relay.Constant][53] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
    %1051 = cast(meta[relay.Constant][53] /* ty=Tensor[(3360), float32] */, dtype="float32") /* ty=Tensor[(3360), float32] */;
    %1052 = reshape(%1050, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
    %1053 = reshape(%1051, newshape=[28, 120]) /* ty=Tensor[(28, 120), float32] */;
    %1054 = @func_3308(%1052, %1053) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(28, 120), bool], Tensor[(3, 8, 14), float64], Tensor[(336), float64], Tensor[(2, 10, 2), float64], Tensor[(28, 120), uint32]) */;
    %1055 = %1043.0;
    %1056 = %1048.4;
    %1057 = %1049.1;
    %1058 = @func_6176() /* ty=Tensor[(2, 10, 2), float64] */;
    %1059 = %1054.4;
    (%1055, %1056, %var_11869, meta[relay.Constant][52] /* ty=Tensor[(4, 16), float64] */, %1057, %1058, %1059, meta[relay.Constant][53] /* ty=Tensor[(3360), float32] */)
  };
  %1060(%var_11895) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(64), float64], Tensor[(16), float64], Tensor[(4, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(336), float64], Tensor[(3360), float32]) */
}

def @func_8026() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %1064 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
    %1061 = @func_5304() /* ty=Tensor[(2, 10, 2), float32] */;
    %1062 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
    %1063 = @func_4903() /* ty=Tensor[(2, 10, 2), float32] */;
    (%1061, %1062, %1063)
  };
  %1064() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_10594() -> Tensor[(2, 10, 2), float32] {
  @func_6198() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_13563() -> (Tensor[(2, 10, 2), float32],) {
  %1065 = @func_11142() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) */;
  %1066 = %1065.1;
  (%1066,)
}

def @func_13879() -> Tensor[(2, 10, 2), float32] {
  @func_13877() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_8247(%var_8177: Tensor[(400), float32], %var_8205: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(400), float32], Tensor[(2, 10, 2), int32], Tensor[(4, 4, 4), uint32], Tensor[(8, 2), float64], Tensor[(64), float64], Tensor[(3360), float32], Tensor[(10, 10, 4), float64], Tensor[(10, 10, 4), int64]) {
  %1067 = @func_6040() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1068 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
  %1069 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %1070 = cast(meta[relay.Constant][54] /* ty=Tensor[(8, 2), float64] */, dtype="float64") /* ty=Tensor[(8, 2), float64] */;
  %1071 = cast(%var_8205, dtype="float64") /* ty=Tensor[(64), float64] */;
  %1072 = cast(%var_8205, dtype="float32") /* ty=Tensor[(64), float32] */;
  %1073 = reshape(%1070, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
  %1074 = reshape(%1071, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
  %1075 = reshape(%1072, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
  %1076 = @func_3026(%1073, %1074, %1075) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
  %1077 = cast(%var_8177, dtype="float32") /* ty=Tensor[(400), float32] */;
  %1078 = reshape(%1077, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
  %1079 = @func_396(%1078) /* ty=(Tensor[(10, 10, 4), float32],) */;
  %1080 = %1079.0;
  %1081 = cast(%1080, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
  %1082 = @func_2892() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %1083 = %1067.0;
  %1084 = %1068.3;
  %1085 = %1069.3;
  %1086 = %1076.2;
  %1087 = @func_3961() /* ty=Tensor[(3360), float32] */;
  %1088 = rsqrt(%1081) /* ty=Tensor[(10, 10, 4), float64] */;
  %1089 = %1082.1;
  (%1083, %1084, %var_8177, %1085, %1086, meta[relay.Constant][54] /* ty=Tensor[(8, 2), float64] */, %var_8205, %1087, %1088, %1089)
}

def @func_11784(%var_11782: Tensor[(16), float64], %var_11783: Tensor[(64), float64]) -> (Tensor[(4, 60), bool], Tensor[(4, 60), float32], Tensor[(4, 4, 4), uint32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(4, 60), float32]) {
  @func_11780(%var_11782, %var_11783) /* ty=(Tensor[(4, 60), bool], Tensor[(4, 60), float32], Tensor[(4, 4, 4), uint32], Tensor[(16), float64], Tensor[(64), float64], Tensor[(4, 60), float32]) */
}

def @func_6515() -> (Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(16), float64]) {
  %1099 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(16), float64]) {
    %1090 = cast(meta[relay.Constant][55] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %1091 = cast(meta[relay.Constant][56] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
    %1092 = cast(meta[relay.Constant][57] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %1093 = reshape(%1090, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
    %1094 = reshape(%1091, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
    %1095 = reshape(%1092, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %1096 = @func_3420(%1093, %1094, %1095) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
    %1097 = @func_5795() /* ty=Tensor[(2, 10, 2), float32] */;
    %1098 = %1096.2;
    (%1097, %1098, meta[relay.Constant][55] /* ty=Tensor[(28), float32] */, meta[relay.Constant][56] /* ty=Tensor[(196), float32] */, meta[relay.Constant][57] /* ty=Tensor[(16), float64] */)
  };
  %1099() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(16), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(16), float64]) */
}

def @func_13359() -> Tensor[(2, 10, 2), int32] {
  @func_4370() /* ty=Tensor[(2, 10, 2), int32] */
}

def @func_8285(%var_8283: Tensor[(7, 11, 4), uint16], %var_8284: Tensor[(7, 11, 4), uint16]) -> Tensor[(7, 11, 4), uint16] {
  %1104 = fn (%var_8258: Tensor[(7, 11, 4), uint16], %var_8259: Tensor[(7, 11, 4), uint16]) -> Tensor[(7, 11, 4), uint16] {
    %1100 = cast(%var_8259, dtype="uint16") /* ty=Tensor[(7, 11, 4), uint16] */;
    %1101 = shape_of(%var_8258, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1102 = cast(%var_8258, dtype="uint16") /* ty=Tensor[(7, 11, 4), uint16] */;
    %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    subtract(%1102, %1103) /* ty=Tensor[(7, 11, 4), uint16] */
  };
  %1104(%var_8283, %var_8284) /* ty=Tensor[(7, 11, 4), uint16] */
}

def @func_4734(%var_4732: Tensor[(825), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(168), uint64], Tensor[(168), uint64], Tensor[(825), float64]) {
  @func_4731(%var_4732) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(168), uint64], Tensor[(168), uint64], Tensor[(825), float64]) */
}

def @func_11436(%var_11434: Tensor[(3, 63), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(7, 3, 9), float64], Tensor[(3, 63), float64]) {
  @func_11433(%var_11434) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(7, 3, 9), float64], Tensor[(3, 63), float64]) */
}

def @func_2193() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %1105 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1106 = %1105.1;
  %1107 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1106, %1107)
}

def @func_5956(%var_5953: Tensor[(2016), uint64], %var_5954: Tensor[(28), float32], %var_5955: Tensor[(1, 16), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), bool], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(32, 2), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(1, 16), float64], Tensor[(2, 10, 2), float32]) {
  %1127 = fn (%var_5905: Tensor[(2016), uint64], %var_5927: Tensor[(28), float32], %var_5929: Tensor[(1, 16), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), bool], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(32, 2), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(1, 16), float64], Tensor[(2, 10, 2), float32]) {
    %1108 = cast(meta[relay.Constant][58] /* ty=Tensor[(168), uint64] */, dtype="uint64") /* ty=Tensor[(168), uint64] */;
    %1109 = cast(%var_5905, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
    %1110 = cast(%var_5905, dtype="uint64") /* ty=Tensor[(2016), uint64] */;
    %1111 = reshape(%1108, newshape=[12, 14, 1]) /* ty=Tensor[(12, 14, 1), uint64] */;
    %1112 = reshape(%1109, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
    %1113 = reshape(%1110, newshape=[12, 14, 12]) /* ty=Tensor[(12, 14, 12), uint64] */;
    %1114 = @func_801(%1111, %1112, %1113) /* ty=(Tensor[(12, 14, 12), uint64], Tensor[(12, 14, 12), bool]) */;
    %1115 = cast(%var_5927, dtype="float32") /* ty=Tensor[(28), float32] */;
    %1116 = cast(meta[relay.Constant][59] /* ty=Tensor[(196), float32] */, dtype="float32") /* ty=Tensor[(196), float32] */;
    %1117 = cast(%var_5929, dtype="float64") /* ty=Tensor[(1, 16), float64] */;
    %1118 = reshape(%1115, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
    %1119 = reshape(%1116, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
    %1120 = reshape(%1117, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %1121 = @func_3420(%1118, %1119, %1120) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
    %1122 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1123 = @func_3528() /* ty=Tensor[(2, 10, 2), float32] */;
    %1124 = %1114.1;
    %1125 = %1121.3;
    %1126 = %1122.0;
    (%1123, %1124, meta[relay.Constant][58] /* ty=Tensor[(168), uint64] */, %var_5905, %1125, %var_5927, meta[relay.Constant][59] /* ty=Tensor[(196), float32] */, %var_5929, %1126)
  };
  %1127(%var_5953, %var_5954, %var_5955) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), bool], Tensor[(168), uint64], Tensor[(2016), uint64], Tensor[(32, 2), float64], Tensor[(28), float32], Tensor[(196), float32], Tensor[(1, 16), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_14923() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], uint8, Tensor[(1040), uint8]) {
  %1128 = @func_6127() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), int32]) */;
  %1129 = @func_2252() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1130 = cast(meta[relay.Constant][60] /* ty=Tensor[(1040), uint8] */, dtype="uint8") /* ty=Tensor[(1040), uint8] */;
  %1131 = reshape(%1130, newshape=[1040]) /* ty=Tensor[(1040), uint8] */;
  %1132 = @func_4225(%1131) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(13, 5, 16), uint8], uint8, Tensor[(1040), uint8]) */;
  %1133 = %1128.1;
  %1134 = %1129.1;
  %1135 = %1132.5;
  (%1133, %1134, %1135, meta[relay.Constant][60] /* ty=Tensor[(1040), uint8] */)
}

def @func_12529() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_12527() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_11811() -> Tensor[(2, 10, 2), int32] {
  %1136 = @func_11026() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
  %1136.1
}

def @func_14987() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  @func_14985() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */
}

def @func_1866(%var_1852: Tensor[(2, 10, 2), int32]) -> (Tensor[(2, 10, 2), bool],) {
  %1137 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
  %1138 = %1137.0;
  %1139 = cast(%var_1852, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1141 = cast(%1138, dtype="bool") /* ty=Tensor[(2, 10, 2), bool] */;
  %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1143 = greater(%1141, %1142) /* ty=Tensor[(2, 10, 2), bool] */;
  (%1143,)
}

def @func_13345(%var_13344: Tensor[(400), float32]) -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) {
  %1150 = fn (%var_13335: Tensor[(400), float32]) -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) {
    %1144 = cast(%var_13335, dtype="float32") /* ty=Tensor[(400), float32] */;
    %1145 = reshape(%1144, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
    %1146 = @func_4435(%1145) /* ty=(Tensor[(10, 10, 4), bool], Tensor[(2, 10, 2), float32]) */;
    %1147 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
    %1148 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
    %1149 = %1146.0;
    (%1147, %1148, %1149, %var_13335)
  };
  %1150(%var_13344) /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), bool], Tensor[(400), float32]) */
}

def @func_2470(%var_2467: int16, %var_2468: Tensor[(630), int16], %var_2469: Tensor[(1040), uint8]) -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32], Tensor[(14, 9, 5), bool], Tensor[(630), int16], Tensor[(13, 5, 16), uint8], Tensor[(15, 16, 2), bool], Tensor[(480), float32], Tensor[(2, 10, 2), bool], Tensor[(1040), bool], Tensor[(1040), int64]) {
  @func_2465(%var_2467, %var_2468, %var_2469) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), int32], Tensor[(14, 9, 5), bool], Tensor[(630), int16], Tensor[(13, 5, 16), uint8], Tensor[(15, 16, 2), bool], Tensor[(480), float32], Tensor[(2, 10, 2), bool], Tensor[(1040), bool], Tensor[(1040), int64]) */
}

def @func_7852() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  %1151 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1152 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
  %1153 = %1151.0;
  (%1152, %1153)
}

def @func_1891(%var_1889: int16, %var_1890: Tensor[(14, 9, 5), int16]) -> Tensor[(14, 9, 5), bool] {
  %1156 = fn (%var_1880: int16, %var_1881: Tensor[(14, 9, 5), int16]) -> Tensor[(14, 9, 5), bool] {
    %1154 = cast(%var_1880, dtype="bool") /* ty=bool */;
    %1155 = cast(%var_1881, dtype="bool") /* ty=Tensor[(14, 9, 5), bool] */;
    less_equal(%1154, %1155) /* ty=Tensor[(14, 9, 5), bool] */
  };
  %1156(%var_1889, %var_1890) /* ty=Tensor[(14, 9, 5), bool] */
}

def @func_5707() -> Tensor[(15, 3, 8), float64] {
  %1158 = fn () -> Tensor[(15, 3, 8), float64] {
    %1157 = cast(meta[relay.Constant][61] /* ty=Tensor[(15, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(15, 3, 8), float64] */;
    atanh(%1157) /* ty=Tensor[(15, 3, 8), float64] */
  };
  %1158() /* ty=Tensor[(15, 3, 8), float64] */
}

def @func_11351() -> (Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) {
  @func_11349() /* ty=(Tensor[(15, 3, 8), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_2853(%var_2852: Tensor[(40), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) {
  %1194 = fn (%var_2814: Tensor[(40), float32]) -> (Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) {
    %1159 = cast(%var_2814, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1160 = reshape(%1159, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
    %1161 = @func_1530(%1160) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
    %1162 = cast(meta[relay.Constant][62] /* ty=Tensor[(240), float64] */, dtype="float64") /* ty=Tensor[(240), float64] */;
    %1163 = reshape(%1162, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
    %1164 = @func_511(%1163) /* ty=(Tensor[(5, 8, 6), float64],) */;
    %1165 = %1161.0;
    %1166 = cast(%1165, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
    %1167 = reshape(%1166, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
    %1168 = @func_1530(%1167) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
    %1169 = @func_1437() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(400), float32], Tensor[(10, 10, 4), float32]) */;
    %1170 = %1169.4;
    %1171 = cast(%1170, dtype="float64") /* ty=Tensor[(10, 10, 4), float64] */;
    %1172 = erf(%1171) /* ty=Tensor[(10, 10, 4), float64] */;
    %1173 = cast(%1170, dtype="int8") /* ty=Tensor[(10, 10, 4), int8] */;
    %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1175 = cast(%1172, dtype="int8") /* ty=Tensor[(10, 10, 4), int8] */;
    %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %1177 = bitwise_or(%1175, %1176) /* ty=Tensor[(10, 10, 4), int8] */;
    %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
    %1179 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1180 = cast(%1172, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
    %1181 = dyn.reshape(%1178, %1179, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1182 = cast(%1170, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
    %1183 = reshape(%1182, newshape=[10, 10, 4]) /* ty=Tensor[(10, 10, 4), float32] */;
    %1184 = @func_396(%1183) /* ty=(Tensor[(10, 10, 4), float32],) */;
    %1185 = cast(%1172, dtype="int64") /* ty=Tensor[(10, 10, 4), int64] */;
    %1186 = shape_of(%1177, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1187 = cast(%1177, dtype="int64") /* ty=Tensor[(10, 10, 4), int64] */;
    %1188 = dyn.reshape(%1185, %1186, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1189 = %1164.0;
    %1190 = %1168.1;
    %1191 = power(%1180, %1181) /* ty=Tensor[(10, 10, 4), float32] */;
    %1192 = %1184.0;
    %1193 = right_shift(%1187, %1188) /* ty=Tensor[(10, 10, 4), int64] */;
    (%1165, %var_2814, %1189, meta[relay.Constant][62] /* ty=Tensor[(240), float64] */, %1190, %1191, %1192, %1193)
  };
  %1194(%var_2852) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) */
}

def @func_3699() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
  %1195 = @func_2193() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1196 = %1195.0;
  %1197 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
  (%1196, %1197)
}

def @func_3979() -> (Tensor[(2, 10, 2), float32],) {
  @func_3977() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_7523() -> Tensor[(2, 10, 2), float64] {
  @func_7521() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_15439() -> Tensor[(4, 60), float32] {
  %1198 = @func_8579() /* ty=(Tensor[(4, 60), float32], Tensor[(4, 60), float64]) */;
  %1198.0
}

def @func_1574() -> Tensor[(2, 10, 2), float32] {
  %1199 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_1557() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %1199() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_14670(%var_14669: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), int32], Tensor[(480), float32], Tensor[(1024), float64], Tensor[(64), float64], Tensor[(480), float32]) {
  %1211 = fn (%var_14640: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), int32], Tensor[(480), float32], Tensor[(1024), float64], Tensor[(64), float64], Tensor[(480), float32]) {
    %1200 = cast(meta[relay.Constant][63] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %1201 = cast(meta[relay.Constant][63] /* ty=Tensor[(1024), float64] */, dtype="float64") /* ty=Tensor[(1024), float64] */;
    %1202 = cast(%var_14640, dtype="float64") /* ty=Tensor[(64), float64] */;
    %1203 = cast(meta[relay.Constant][64] /* ty=Tensor[(480), float32] */, dtype="float32") /* ty=Tensor[(480), float32] */;
    %1204 = reshape(%1200, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), float64] */;
    %1205 = reshape(%1201, newshape=[16, 4, 16]) /* ty=Tensor[(16, 4, 16), float64] */;
    %1206 = reshape(%1202, newshape=[32, 2]) /* ty=Tensor[(32, 2), float64] */;
    %1207 = reshape(%1203, newshape=[480]) /* ty=Tensor[(480), float32] */;
    %1208 = @func_6346(%1204, %1205, %1206, %1207) /* ty=(Tensor[(1, 8, 12), float64], Tensor[(4, 4), float64], Tensor[(32, 2), float64], Tensor[(480), float32], Tensor[(480), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(16, 4, 16), float32]) */;
    %1209 = @func_3459() /* ty=Tensor[(2, 10, 2), int32] */;
    %1210 = %1208.3;
    (%1209, %1210, meta[relay.Constant][63] /* ty=Tensor[(1024), float64] */, %var_14640, meta[relay.Constant][64] /* ty=Tensor[(480), float32] */)
  };
  %1211(%var_14669) /* ty=(Tensor[(2, 10, 2), int32], Tensor[(480), float32], Tensor[(1024), float64], Tensor[(64), float64], Tensor[(480), float32]) */
}

def @func_4645() -> (Tensor[(2, 10, 2), float32],) {
  %1212 = @func_3568() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1213 = %1212.0;
  (%1213,)
}

def @func_11142() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) {
  %1214 = @func_8849() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1215 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
  %1216 = %1214.0;
  %1217 = @func_1557() /* ty=Tensor[(2, 10, 2), float32] */;
  %1218 = @func_5706() /* ty=Tensor[(15, 3, 8), float64] */;
  (%1215, %1216, %1217, %1218)
}

def @func_9297(%var_9295: Tensor[(10, 14, 3), float32]) -> (Tensor[(10, 14, 3), float32], Tensor[(4, 13, 16), float64]) {
  @func_9294(%var_9295) /* ty=(Tensor[(10, 14, 3), float32], Tensor[(4, 13, 16), float64]) */
}

def @func_12690(%var_12680: Tensor[(2, 200), float32]) -> (Tensor[(4, 60), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64], Tensor[(8, 10, 5), float64], Tensor[(2, 200), float32]) {
  %1219 = @func_11161() /* ty=(Tensor[(4, 60), float64],) */;
  %1220 = @func_11142() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) */;
  %1221 = @func_5361() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(15, 16, 2), bool], Tensor[(480), float32]) */;
  %1222 = cast(%var_12680, dtype="float32") /* ty=Tensor[(2, 200), float32] */;
  %1223 = reshape(%1222, newshape=[8, 10, 5]) /* ty=Tensor[(8, 10, 5), float32] */;
  %1224 = @func_2646(%1223) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(8, 10, 5), float64]) */;
  %1225 = %1219.0;
  %1226 = %1220.1;
  %1227 = %1221.0;
  %1228 = @func_7521() /* ty=Tensor[(2, 10, 2), float64] */;
  %1229 = %1224.1;
  (%1225, %1226, %1227, %1228, %1229, %var_12680)
}

def @func_8539() -> (Tensor[(4, 60), float64],) {
  %1232 = fn () -> (Tensor[(4, 60), float64],) {
    %1230 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
    %1231 = %1230.1;
    (%1231,)
  };
  %1232() /* ty=(Tensor[(4, 60), float64],) */
}

def @func_3779() -> Tensor[(2, 10, 2), float32] {
  %1233 = @func_1966() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1233.1
}

def @func_1966() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %1234 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1235 = @func_1353() /* ty=Tensor[(2, 10, 2), float32] */;
  %1236 = %1234.0;
  (%1235, %1236)
}

def @func_13530() -> (Tensor[(2, 10, 2), float32],) {
  %1239 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %1237 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1238 = %1237.0;
    (%1238,)
  };
  %1239() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_5655(%var_5653: Tensor[(2, 11, 7), float64]) -> (Tensor[(2, 11, 7), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  @func_5652(%var_5653) /* ty=(Tensor[(2, 11, 7), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_8680() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %1240 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %1241 = @func_7152() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */;
  %1242 = %1240.0;
  %1243 = %1241.2;
  (%1242, %1243)
}

def @func_513(%var_512: Tensor[(5, 8, 6), float64]) -> (Tensor[(5, 8, 6), float64],) {
  %1246 = fn (%var_508: Tensor[(5, 8, 6), float64]) -> (Tensor[(5, 8, 6), float64],) {
    %1244 = cast(%var_508, dtype="float64") /* ty=Tensor[(5, 8, 6), float64] */;
    %1245 = sigmoid(%1244) /* ty=Tensor[(5, 8, 6), float64] */;
    (%1245,)
  };
  %1246(%var_512) /* ty=(Tensor[(5, 8, 6), float64],) */
}

def @func_11995(%var_11971: Tensor[(1120), int64], %var_11973: Tensor[(117, 1), float32]) -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(117), float32], Tensor[(4, 28), int64], Tensor[(1120), int64], Tensor[(2, 24), float64], Tensor[(117, 1), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float32]) {
  %1247 = @func_10000() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1248 = cast(meta[relay.Constant][65] /* ty=Tensor[(4, 28), int64] */, dtype="int64") /* ty=Tensor[(4, 28), int64] */;
  %1249 = cast(%var_11971, dtype="int64") /* ty=Tensor[(1120), int64] */;
  %1250 = cast(meta[relay.Constant][66] /* ty=Tensor[(2, 24), float64] */, dtype="float64") /* ty=Tensor[(2, 24), float64] */;
  %1251 = cast(%var_11973, dtype="float32") /* ty=Tensor[(117, 1), float32] */;
  %1252 = reshape(%1248, newshape=[7, 16, 1]) /* ty=Tensor[(7, 16, 1), int64] */;
  %1253 = reshape(%1249, newshape=[7, 16, 10]) /* ty=Tensor[(7, 16, 10), int64] */;
  %1254 = reshape(%1250, newshape=[24, 2]) /* ty=Tensor[(24, 2), float64] */;
  %1255 = reshape(%1251, newshape=[117]) /* ty=Tensor[(117), float32] */;
  %1256 = @func_9122(%1252, %1253, %1254, %1255) /* ty=(Tensor[(7, 16, 10), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(24, 2), float64], Tensor[(117), float32]) */;
  %1257 = @func_3767() /* ty=(Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) */;
  %1258 = %1247.0;
  %1259 = @func_7341() /* ty=Tensor[(2, 10, 2), float32] */;
  %1260 = %1256.4;
  %1261 = %1257.0;
  %1262 = @func_8515() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1258, %1259, %1260, meta[relay.Constant][65] /* ty=Tensor[(4, 28), int64] */, %var_11971, meta[relay.Constant][66] /* ty=Tensor[(2, 24), float64] */, %var_11973, %1261, %1262)
}

def @func_10096(%var_10095: Tensor[(49, 4), float32]) -> (Tensor[(168), uint64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28), float32], Tensor[(16), float64], Tensor[(2, 10, 2), float64], Tensor[(49, 4), float64], Tensor[(240), float64], Tensor[(55, 15), float64]) {
  %1284 = fn (%var_10048: Tensor[(49, 4), float32]) -> (Tensor[(168), uint64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28), float32], Tensor[(16), float64], Tensor[(2, 10, 2), float64], Tensor[(49, 4), float64], Tensor[(240), float64], Tensor[(55, 15), float64]) {
    %1263 = @func_7170() /* ty=(Tensor[(4, 60), float64], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(252, 8), uint64]) */;
    %1264 = @func_9897() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) */;
    %1265 = cast(meta[relay.Constant][67] /* ty=Tensor[(28), float32] */, dtype="float32") /* ty=Tensor[(28), float32] */;
    %1266 = cast(%var_10048, dtype="float32") /* ty=Tensor[(49, 4), float32] */;
    %1267 = cast(meta[relay.Constant][68] /* ty=Tensor[(16), float64] */, dtype="float64") /* ty=Tensor[(16), float64] */;
    %1268 = reshape(%1265, newshape=[2, 14, 1]) /* ty=Tensor[(2, 14, 1), float32] */;
    %1269 = reshape(%1266, newshape=[2, 14, 7]) /* ty=Tensor[(2, 14, 7), float32] */;
    %1270 = reshape(%1267, newshape=[16]) /* ty=Tensor[(16), float64] */;
    %1271 = @func_3420(%1268, %1269, %1270) /* ty=(Tensor[(2, 14, 7), float32], Tensor[(1, 400), float32], Tensor[(16), float64], Tensor[(32, 2), float64]) */;
    %1272 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
    %1273 = cast(%var_10048, dtype="float64") /* ty=Tensor[(49, 4), float64] */;
    %1274 = cast(meta[relay.Constant][69] /* ty=Tensor[(55, 15), float64] */, dtype="float64") /* ty=Tensor[(55, 15), float64] */;
    %1275 = reshape(%1274, newshape=[825]) /* ty=Tensor[(825), float64] */;
    %1276 = @func_8422(%1275) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) */;
    %1277 = %1263.2;
    %1278 = %1264.1;
    %1279 = @func_2137() /* ty=Tensor[(2, 10, 2), float32] */;
    %1280 = %1271.1;
    %1281 = %1272.0;
    %1282 = log10(%1273) /* ty=Tensor[(49, 4), float64] */;
    %1283 = %1276.2;
    (%1277, %1278, %1279, %1280, meta[relay.Constant][67] /* ty=Tensor[(28), float32] */, meta[relay.Constant][68] /* ty=Tensor[(16), float64] */, %1281, %1282, %1283, meta[relay.Constant][69] /* ty=Tensor[(55, 15), float64] */)
  };
  %1284(%var_10095) /* ty=(Tensor[(168), uint64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(28), float32], Tensor[(16), float64], Tensor[(2, 10, 2), float64], Tensor[(49, 4), float64], Tensor[(240), float64], Tensor[(55, 15), float64]) */
}

def @func_15352() -> (Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float64]) {
  @func_15350() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(5, 8, 6), float64], Tensor[(2, 10, 2), float64]) */
}

def @func_108(%var_106: uint8, %var_107: Tensor[(13, 5, 16), uint8]) -> Tensor[(13, 5, 16), uint8] {
  %1287 = fn (%var_38: uint8, %var_39: Tensor[(13, 5, 16), uint8]) -> Tensor[(13, 5, 16), uint8] {
    %1285 = cast(%var_38, dtype="uint8") /* ty=uint8 */;
    %1286 = cast(%var_39, dtype="uint8") /* ty=Tensor[(13, 5, 16), uint8] */;
    subtract(%1285, %1286) /* ty=Tensor[(13, 5, 16), uint8] */
  };
  %1287(%var_106, %var_107) /* ty=Tensor[(13, 5, 16), uint8] */
}

def @func_6142() -> (Tensor[(14, 15, 16), float64], Tensor[(2, 10, 2), int32]) {
  %1288 = @func_2749() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(14, 15, 16), float32], Tensor[(3360), float32], Tensor[(4, 60), float64]) */;
  %1289 = %1288.2;
  %1290 = cast(%1289, dtype="float64") /* ty=Tensor[(14, 15, 16), float64] */;
  %1291 = asinh(%1290) /* ty=Tensor[(14, 15, 16), float64] */;
  %1292 = @func_3459() /* ty=Tensor[(2, 10, 2), int32] */;
  (%1291, %1292)
}

def @func_6879() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) {
  %1293 = @func_5765() /* ty=(Tensor[(4, 13, 16), float64],) */;
  %1294 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
  %1295 = @func_1573() /* ty=Tensor[(2, 10, 2), float32] */;
  %1296 = %1293.0;
  %1297 = %1294.1;
  (%1295, %1296, %1297)
}

def @func_15543(%var_15541: Tensor[(14, 11, 5), float32]) -> (Tensor[(14, 11, 5), float32], Tensor[(2, 10, 2), float32]) {
  @func_15540(%var_15541) /* ty=(Tensor[(14, 11, 5), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_14457(%var_14456: Tensor[(7, 15, 10), float32]) -> Tensor[(7, 15, 10), int16] {
  %1304 = fn (%var_14447: Tensor[(7, 15, 10), float32]) -> Tensor[(7, 15, 10), int16] {
    %1298 = cast(%var_14447, dtype="float32") /* ty=Tensor[(7, 15, 10), float32] */;
    %1299 = atanh(%1298) /* ty=Tensor[(7, 15, 10), float32] */;
    %1300 = cast(%var_14447, dtype="int16") /* ty=Tensor[(7, 15, 10), int16] */;
    %1301 = shape_of(%1299, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1302 = cast(%1299, dtype="int16") /* ty=Tensor[(7, 15, 10), int16] */;
    %1303 = dyn.reshape(%1300, %1301, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    bitwise_xor(%1302, %1303) /* ty=Tensor[(7, 15, 10), int16] */
  };
  %1304(%var_14456) /* ty=Tensor[(7, 15, 10), int16] */
}

def @func_10018() -> Tensor[(2, 10, 2), float32] {
  @func_10016() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_10816() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  @func_10814() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */
}

def @func_11548() -> (Tensor[(2, 10, 2), float32],) {
  %1306 = fn () -> (Tensor[(2, 10, 2), float32],) {
    %1305 = @func_9616() /* ty=Tensor[(2, 10, 2), float32] */;
    (%1305,)
  };
  %1306() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_3145() -> Tensor[(2, 10, 2), float32] {
  @func_1557() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_3486() -> Tensor[(2, 10, 2), float32] {
  %1308 = fn () -> Tensor[(2, 10, 2), float32] {
    %1307 = @func_2047() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), bool]) */;
    %1307.2
  };
  %1308() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_4503(%var_4502: Tensor[(10, 10, 4), int64]) -> (Tensor[(2, 10, 2), float64], Tensor[(10, 10, 4), uint16], Tensor[(10, 10, 4), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %1324 = fn (%var_4468: Tensor[(10, 10, 4), int64]) -> (Tensor[(2, 10, 2), float64], Tensor[(10, 10, 4), uint16], Tensor[(10, 10, 4), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
    %1309 = @func_3767() /* ty=(Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), bool]) */;
    %1310 = @func_2892() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), int64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */;
    %1311 = %1310.1;
    %1312 = cast(%var_4468, dtype="uint16") /* ty=Tensor[(10, 10, 4), uint16] */;
    %1313 = shape_of(%1311, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1314 = cast(%1311, dtype="uint16") /* ty=Tensor[(10, 10, 4), uint16] */;
    %1315 = dyn.reshape(%1312, %1313, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1316 = cast(%var_4468, dtype="float32") /* ty=Tensor[(10, 10, 4), float32] */;
    %1317 = @func_1549() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1318 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
    %1319 = %1309.2;
    %1320 = left_shift(%1314, %1315) /* ty=Tensor[(10, 10, 4), uint16] */;
    %1321 = sigmoid(%1316) /* ty=Tensor[(10, 10, 4), float32] */;
    %1322 = %1317.0;
    %1323 = %1318.0;
    (%1319, %1320, %1321, %1322, %1323)
  };
  %1324(%var_4502) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(10, 10, 4), uint16], Tensor[(10, 10, 4), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) */
}

def @func_4137() -> Tensor[(4, 13, 16), float64] {
  %1327 = fn () -> Tensor[(4, 13, 16), float64] {
    %1325 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
    %1326 = cast(%1325, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
    acos(%1326) /* ty=Tensor[(4, 13, 16), float64] */
  };
  %1327() /* ty=Tensor[(4, 13, 16), float64] */
}

def @func_5235() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  @func_5233() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_14863() -> Tensor[(2, 10, 2), float32] {
  %1328 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_5795() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %1328() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_14001(%var_13999: Tensor[(14, 8, 3), bool], %var_14000: Tensor[(400), float32]) -> (Tensor[(14, 8, 3), bool], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(400), float32]) {
  @func_13997(%var_13999, %var_14000) /* ty=(Tensor[(14, 8, 3), bool], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(400), float32]) */
}

def @func_12462(%var_12461: int16) -> (Tensor[(2, 10, 2), float32], Tensor[(14, 9, 5), bool], int16, Tensor[(630), int16]) {
  %1335 = fn (%var_12443: int16) -> (Tensor[(2, 10, 2), float32], Tensor[(14, 9, 5), bool], int16, Tensor[(630), int16]) {
    %1329 = cast(%var_12443, dtype="int16") /* ty=int16 */;
    %1330 = cast(meta[relay.Constant][70] /* ty=Tensor[(630), int16] */, dtype="int16") /* ty=Tensor[(630), int16] */;
    %1331 = reshape(%1329, newshape=[]) /* ty=int16 */;
    %1332 = reshape(%1330, newshape=[14, 9, 5]) /* ty=Tensor[(14, 9, 5), int16] */;
    %1333 = @func_4903() /* ty=Tensor[(2, 10, 2), float32] */;
    %1334 = @func_1888(%1331, %1332) /* ty=Tensor[(14, 9, 5), bool] */;
    (%1333, %1334, %var_12443, meta[relay.Constant][70] /* ty=Tensor[(630), int16] */)
  };
  %1335(%var_12461) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(14, 9, 5), bool], int16, Tensor[(630), int16]) */
}

def @func_14026() -> (Tensor[(2, 10, 2), float64],) {
  %1336 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %1337 = %1336.0;
  (%1337,)
}

def @func_11398() -> Tensor[(2, 10, 2), float32] {
  @func_11396() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_15452() -> (Tensor[(2, 10, 2), float32],) {
  @func_15450() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_9294(%var_9248: Tensor[(10, 14, 3), float32]) -> (Tensor[(10, 14, 3), float32], Tensor[(4, 13, 16), float64]) {
  %1338 = cast(%var_9248, dtype="float32") /* ty=Tensor[(10, 14, 3), float32] */;
  %1339 = rsqrt(%1338) /* ty=Tensor[(10, 14, 3), float32] */;
  %1340 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
  (%1339, %1340)
}

def @func_9700() -> Tensor[(2, 10, 2), int32] {
  %1341 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %1341.0
}

def @func_14563() -> Tensor[(2, 10, 2), float32] {
  %1343 = fn () -> Tensor[(2, 10, 2), float32] {
    %1342 = @func_11595() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1342.0
  };
  %1343() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_9127(%var_9123: Tensor[(7, 16, 1), int64], %var_9124: Tensor[(7, 16, 10), int64], %var_9125: Tensor[(24, 2), float64], %var_9126: Tensor[(117), float32]) -> (Tensor[(7, 16, 10), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(24, 2), float64], Tensor[(117), float32]) {
  %1355 = fn (%var_9092: Tensor[(7, 16, 1), int64], %var_9093: Tensor[(7, 16, 10), int64], %var_9118: Tensor[(24, 2), float64], %var_9119: Tensor[(117), float32]) -> (Tensor[(7, 16, 10), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(24, 2), float64], Tensor[(117), float32]) {
    %1344 = cast(%var_9092, dtype="bool") /* ty=Tensor[(7, 16, 1), bool] */;
    %1345 = cast(%var_9093, dtype="bool") /* ty=Tensor[(7, 16, 10), bool] */;
    %1346 = @func_7934() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
    %1347 = cast(%var_9118, dtype="float64") /* ty=Tensor[(24, 2), float64] */;
    %1348 = cast(%var_9119, dtype="float32") /* ty=Tensor[(117), float32] */;
    %1349 = reshape(%1347, newshape=[2, 3, 8]) /* ty=Tensor[(2, 3, 8), float64] */;
    %1350 = reshape(%1348, newshape=[117, 1]) /* ty=Tensor[(117, 1), float32] */;
    %1351 = @func_4567(%1349, %1350) /* ty=(Tensor[(2, 3, 8), float64], Tensor[(3, 3, 13), float32], Tensor[(117, 1), float32]) */;
    %1352 = greater_equal(%1344, %1345) /* ty=Tensor[(7, 16, 10), bool] */;
    %1353 = %1346.0;
    %1354 = %1351.2;
    (%1352, %1353, %1354, %var_9118, %var_9119)
  };
  %1355(%var_9123, %var_9124, %var_9125, %var_9126) /* ty=(Tensor[(7, 16, 10), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(24, 2), float64], Tensor[(117), float32]) */
}

def @func_15017(%var_15015: Tensor[(168), uint64]) -> (Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64]) {
  @func_15014(%var_15015) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(12, 14, 12), uint64], Tensor[(168), uint64], Tensor[(2016), uint64]) */
}

def @func_6176() -> Tensor[(2, 10, 2), float64] {
  %1356 = @func_4370() /* ty=Tensor[(2, 10, 2), int32] */;
  %1357 = cast(%1356, dtype="float64") /* ty=Tensor[(2, 10, 2), float64] */;
  sigmoid(%1357) /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_12928() -> (Tensor[(2, 10, 2), float32],) {
  @func_12926() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_15668() -> Tensor[(14, 2, 4), float64] {
  %1359 = fn () -> Tensor[(14, 2, 4), float64] {
    %1358 = cast(meta[relay.Constant][71] /* ty=Tensor[(14, 2, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 2, 4), float64] */;
    sqrt(%1358) /* ty=Tensor[(14, 2, 4), float64] */
  };
  %1359() /* ty=Tensor[(14, 2, 4), float64] */
}

def @func_631(%var_629: Tensor[(15, 16, 2), float32], %var_630: Tensor[(15, 16, 2), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
  %1367 = fn (%var_608: Tensor[(15, 16, 2), float32], %var_614: Tensor[(15, 16, 2), float32]) -> (Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) {
    %1360 = cast(%var_608, dtype="float32") /* ty=Tensor[(15, 16, 2), float32] */;
    %1361 = cast(%var_614, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %1362 = shape_of(%var_608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1363 = cast(%var_608, dtype="bool") /* ty=Tensor[(15, 16, 2), bool] */;
    %1364 = dyn.reshape(%1361, %1362, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1365 = sin(%1360) /* ty=Tensor[(15, 16, 2), float32] */;
    %1366 = logical_or(%1363, %1364) /* ty=Tensor[(15, 16, 2), bool] */;
    (%1365, %1366)
  };
  %1367(%var_629, %var_630) /* ty=(Tensor[(15, 16, 2), float32], Tensor[(15, 16, 2), bool]) */
}

def @func_7854() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) {
  @func_7852() /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */
}

def @func_7071() -> (Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) {
  %1368 = @func_6743() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */;
  %1369 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1370 = %1368.1;
  %1371 = %1369.0;
  (%1370, %1371)
}

def @func_11302() -> Tensor[(2, 10, 2), float32] {
  %1372 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_5108() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %1372() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_10016() -> Tensor[(2, 10, 2), float32] {
  %1373 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
  %1373.0
}

def @func_13130() -> Tensor[(2, 10, 2), float32] {
  %1374 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1374.0
}

def @func_9033(%var_9029: Tensor[(6, 10, 9), float32], %var_9030: Tensor[(6, 10, 9), float32], %var_9031: Tensor[(64), float64], %var_9032: Tensor[(825), float64]) -> (Tensor[(6, 10, 9), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(64), float64], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(825), float64]) {
  @func_9027(%var_9029, %var_9030, %var_9031, %var_9032) /* ty=(Tensor[(6, 10, 9), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(1, 400), float32], Tensor[(64), float64], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32], Tensor[(825), float64]) */
}

def @func_6199() -> Tensor[(2, 10, 2), float32] {
  %1375 = fn () -> Tensor[(2, 10, 2), float32] {
    @func_5795() /* ty=Tensor[(2, 10, 2), float32] */
  };
  %1375() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_4904() -> Tensor[(2, 10, 2), float32] {
  %1377 = fn () -> Tensor[(2, 10, 2), float32] {
    %1376 = @func_2288() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1376.0
  };
  %1377() /* ty=Tensor[(2, 10, 2), float32] */
}

def @func_12639() -> Tensor[(2, 10, 2), float64] {
  %1378 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %1378.0
}

def @func_5972() -> Tensor[(4, 13, 16), float64] {
  %1379 = @func_4164() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 13, 16), float64]) */;
  %1379.2
}

def @func_14985() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32]) {
  %1380 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %1381 = @func_11142() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(15, 3, 8), float64]) */;
  %1382 = @func_6435() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1383 = %1380.0;
  %1384 = %1381.2;
  %1385 = %1382.0;
  %1386 = @func_2684() /* ty=Tensor[(2, 10, 2), int32] */;
  (%1383, %1384, %1385, %1386)
}

def @func_9897() -> (Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float64]) {
  %1387 = @func_8068() /* ty=(Tensor[(2, 10, 2), float64],) */;
  %1388 = %1387.0;
  %1389 = @func_6000() /* ty=Tensor[(2, 10, 2), float64] */;
  (%1388, %1389)
}

def @func_7001(%var_6999: Tensor[(16, 1), float64], %var_7000: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(3360), float32], Tensor[(8, 10, 5), float32], Tensor[(16, 1), float64], Tensor[(64), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
  %1406 = fn (%var_6961: Tensor[(16, 1), float64], %var_6962: Tensor[(64), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(3360), float32], Tensor[(8, 10, 5), float32], Tensor[(16, 1), float64], Tensor[(64), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) {
    %1390 = @func_3186() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1391 = cast(%var_6961, dtype="float64") /* ty=Tensor[(16, 1), float64] */;
    %1392 = cast(%var_6962, dtype="float64") /* ty=Tensor[(64), float64] */;
    %1393 = cast(%var_6962, dtype="float32") /* ty=Tensor[(64), float32] */;
    %1394 = reshape(%1391, newshape=[1, 4, 4]) /* ty=Tensor[(1, 4, 4), float64] */;
    %1395 = reshape(%1392, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float64] */;
    %1396 = reshape(%1393, newshape=[4, 4, 4]) /* ty=Tensor[(4, 4, 4), float32] */;
    %1397 = @func_3026(%1394, %1395, %1396) /* ty=(Tensor[(8, 10, 5), float32], Tensor[(1, 400), float32], Tensor[(4, 4, 4), uint32]) */;
    %1398 = %1390.0;
    %1399 = cast(%1398, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
    %1400 = reshape(%1399, newshape=[40]) /* ty=Tensor[(40), float32] */;
    %1401 = @func_2851(%1400) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(40), float32], Tensor[(5, 8, 6), float64], Tensor[(240), float64], Tensor[(2, 10, 2), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), float32], Tensor[(10, 10, 4), int64]) */;
    %1402 = @func_3961() /* ty=Tensor[(3360), float32] */;
    %1403 = %1397.0;
    %1404 = @func_3779() /* ty=Tensor[(2, 10, 2), float32] */;
    %1405 = %1401.0;
    (%1398, %1402, %1403, %var_6961, %var_6962, %1404, %1405)
  };
  %1406(%var_6999, %var_7000) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(3360), float32], Tensor[(8, 10, 5), float32], Tensor[(16, 1), float64], Tensor[(64), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float64]) */
}

def @func_13654() -> (Tensor[(2, 10, 2), float32],) {
  @func_13652() /* ty=(Tensor[(2, 10, 2), float32],) */
}

def @func_6881() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) {
  @func_6879() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) */
}

def @func_14772() -> (Tensor[(2, 10, 2), float32],) {
  %1407 = @func_10594() /* ty=Tensor[(2, 10, 2), float32] */;
  (%1407,)
}

def @func_10970() -> (Tensor[(2, 10, 2), float32],) {
  %1408 = @func_10671() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1409 = %1408.1;
  (%1409,)
}

def @func_5297() -> (Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
  %1412 = fn () -> (Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) {
    %1410 = @func_3145() /* ty=Tensor[(2, 10, 2), float32] */;
    %1411 = @func_2325() /* ty=Tensor[(4, 60), float64] */;
    (%1410, %1411)
  };
  %1412() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */
}

def @func_6002() -> Tensor[(2, 10, 2), float64] {
  @func_6000() /* ty=Tensor[(2, 10, 2), float64] */
}

def @func_6744() -> (Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) {
  %1416 = fn () -> (Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) {
    %1413 = @func_1680() /* ty=(Tensor[(2, 10, 2), int32],) */;
    %1414 = %1413.0;
    %1415 = @func_1391() /* ty=Tensor[(2, 10, 2), float32] */;
    (%1414, %1415)
  };
  %1416() /* ty=(Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */
}

def @func_12853(%var_12852: Tensor[(117), float32]) -> (Tensor[(4, 13, 16), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(1120), int64], Tensor[(117), float32]) {
  %1433 = fn (%var_12837: Tensor[(117), float32]) -> (Tensor[(4, 13, 16), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(1120), int64], Tensor[(117), float32]) {
    %1417 = @func_2782() /* ty=Tensor[(4, 13, 16), float64] */;
    %1418 = cast(%1417, dtype="float64") /* ty=Tensor[(4, 13, 16), float64] */;
    %1419 = tan(%1418) /* ty=Tensor[(4, 13, 16), float64] */;
    %1420 = cast(%1417, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
    %1421 = shape_of(%1419, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1422 = cast(%1419, dtype="bool") /* ty=Tensor[(4, 13, 16), bool] */;
    %1423 = dyn.reshape(%1420, %1421, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1424 = @func_3699() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 60), float64]) */;
    %1425 = cast(meta[relay.Constant][72] /* ty=Tensor[(1120), int64] */, dtype="int64") /* ty=Tensor[(1120), int64] */;
    %1426 = cast(%var_12837, dtype="float32") /* ty=Tensor[(117), float32] */;
    %1427 = reshape(%1425, newshape=[1120]) /* ty=Tensor[(1120), int64] */;
    %1428 = reshape(%1426, newshape=[117, 1]) /* ty=Tensor[(117, 1), float32] */;
    %1429 = @func_11995(%1427, %1428) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(117), float32], Tensor[(4, 28), int64], Tensor[(1120), int64], Tensor[(2, 24), float64], Tensor[(117, 1), float32], Tensor[(2, 10, 2), bool], Tensor[(2, 10, 2), float32]) */;
    %1430 = logical_and(%1422, %1423) /* ty=Tensor[(4, 13, 16), bool] */;
    %1431 = %1424.0;
    %1432 = %1429.6;
    (%1430, %1431, %1432, meta[relay.Constant][72] /* ty=Tensor[(1120), int64] */, %var_12837)
  };
  %1433(%var_12852) /* ty=(Tensor[(4, 13, 16), bool], Tensor[(2, 10, 2), float32], Tensor[(117, 1), float32], Tensor[(1120), int64], Tensor[(117), float32]) */
}

def @func_13728(%var_13712: Tensor[(55, 15), float64]) -> (Tensor[(2, 10, 2), float32], Tensor[(630), int16], int16, Tensor[(2, 10, 2), float64], Tensor[(825), uint8], Tensor[(55, 15), float64], Tensor[(5, 8, 6), float64], Tensor[(4, 60), float64]) {
  %1434 = @func_9495() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32]) */;
  %1435 = cast(meta[relay.Constant][73] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1436 = reshape(%1435, newshape=[]) /* ty=int16 */;
  %1437 = @func_12460(%1436) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(14, 9, 5), bool], int16, Tensor[(630), int16]) */;
  %1438 = %1434.0;
  %1439 = cast(%1438, dtype="float32") /* ty=Tensor[(2, 10, 2), float32] */;
  %1440 = reshape(%1439, newshape=[2, 10, 2]) /* ty=Tensor[(2, 10, 2), float32] */;
  %1441 = @func_1530(%1440) /* ty=(Tensor[(2, 10, 2), float64], Tensor[(2, 10, 2), float32]) */;
  %1442 = cast(%var_13712, dtype="float64") /* ty=Tensor[(55, 15), float64] */;
  %1443 = reshape(%1442, newshape=[825]) /* ty=Tensor[(825), float64] */;
  %1444 = @func_8422(%1443) /* ty=(Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), float32], Tensor[(240), float64], Tensor[(825), uint8]) */;
  %1445 = cast(meta[relay.Constant][74] /* ty=Tensor[(4, 60), float64] */, dtype="float64") /* ty=Tensor[(4, 60), float64] */;
  %1446 = reshape(%1445, newshape=[5, 8, 6]) /* ty=Tensor[(5, 8, 6), float64] */;
  %1447 = @func_511(%1446) /* ty=(Tensor[(5, 8, 6), float64],) */;
  %1448 = %1437.3;
  %1449 = %1441.0;
  %1450 = %1444.3;
  %1451 = %1447.0;
  (%1438, %1448, meta[relay.Constant][73] /* ty=int16 */, %1449, %1450, %var_13712, %1451, meta[relay.Constant][74] /* ty=Tensor[(4, 60), float64] */)
}

def @func_7612() -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) {
  %1460 = fn () -> (Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) {
    %1452 = @func_6879() /* ty=(Tensor[(2, 10, 2), float32], Tensor[(4, 13, 16), float64], Tensor[(4, 60), float64]) */;
    %1453 = @func_5483() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1454 = @func_6142() /* ty=(Tensor[(14, 15, 16), float64], Tensor[(2, 10, 2), int32]) */;
    %1455 = @func_5681() /* ty=(Tensor[(2, 10, 2), float32],) */;
    %1456 = %1452.1;
    %1457 = %1453.0;
    %1458 = %1454.1;
    %1459 = %1455.0;
    (%1456, %1457, %1458, %1459)
  };
  %1460() /* ty=(Tensor[(4, 13, 16), float64], Tensor[(2, 10, 2), float32], Tensor[(2, 10, 2), int32], Tensor[(2, 10, 2), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen603/build/output.py:5035: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen603/build/output.py", line 5040, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(960) tvmgen_default_fused_bitwise_or_kernel0(ushort* __restrict__ T_bitwise_or, ushort* __restrict__ placeholder, ushort* __restrict__ placeholder1) {
  T_bitwise_or[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] | placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


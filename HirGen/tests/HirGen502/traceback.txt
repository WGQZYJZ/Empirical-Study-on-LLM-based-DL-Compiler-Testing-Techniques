==========mod==========
#[version = "0.0.5"]
def @func_6067(%var_5949: Tensor[(10, 4, 12), float32], %var_6015: Tensor[(3136), float32], %var_6030: Tensor[(297), float64]) -> (Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) {
  %0 = @func_3427() /* ty=Tensor[(10, 4, 12), float32] */;
  %1 = cast(%var_5949, dtype="int64") /* ty=Tensor[(10, 4, 12), int64] */;
  %2 = shape_of(%0, dtype="int32") /* ty=Tensor[(3), int32] */;
  %3 = cast(%0, dtype="int64") /* ty=Tensor[(10, 4, 12), int64] */;
  %4 = dyn.reshape(%1, %2, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %5 = cast(meta[relay.Constant][0] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(297), uint16] */, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %7 = reshape(%5, newshape=[]) /* ty=uint16 */;
  %8 = reshape(%6, newshape=[297, 1]) /* ty=Tensor[(297, 1), uint16] */;
  %9 = @func_5310(%7, %8) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %10 = cast(meta[relay.Constant][2] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %11 = cast(%var_6015, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %12 = reshape(%10, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %13 = reshape(%11, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %14 = @func_2631(%12, %13) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(297), uint16] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %16 = sigmoid(%15) /* ty=Tensor[(297), float64] */;
  %17 = cast(%var_6030, dtype="int64") /* ty=Tensor[(297), int64] */;
  %18 = shape_of(%16, dtype="int32") /* ty=Tensor[(1), int32] */;
  %19 = cast(%16, dtype="int64") /* ty=Tensor[(297), int64] */;
  %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?), int64] */;
  %21 = cast(meta[relay.Constant][3] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %22 = reshape(%21, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %23 = @func_3692(%22) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) */;
  %24 = cast(meta[relay.Constant][3] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %25 = reshape(%24, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %26 = @func_1726(%25) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) */;
  %27 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %28 = cast(%var_6030, dtype="float64") /* ty=Tensor[(297), float64] */;
  %29 = left_shift(%3, %4) /* ty=Tensor[(10, 4, 12), int64] */;
  %30 = %9.0;
  %31 = %14.4;
  %32 = add(%19, %20) /* ty=Tensor[(297), int64] */;
  %33 = %23.2;
  %34 = %26.1;
  %35 = %27.0;
  %36 = log(%28) /* ty=Tensor[(297), float64] */;
  (%29, %30, meta[relay.Constant][0] /* ty=uint16 */, %31, meta[relay.Constant][2] /* ty=Tensor[(700), float64] */, %var_6015, %32, %33, meta[relay.Constant][3] /* ty=Tensor[(176), uint32] */, %34, %35, %36)
}

def @func_10275() -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) {
  %37 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %38 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %39 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %40 = @func_7301() /* ty=Tensor[(10, 4, 12), float32] */;
  %41 = %37.0;
  %42 = %38.2;
  %43 = %39.0;
  (%40, %41, %42, %43)
}

def @func_13434() -> (Tensor[(10, 4, 12), float32], Tensor[(6, 7, 5), float32], Tensor[(210), float32]) {
  %44 = @func_5731() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %46 = reshape(%45, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float32] */;
  %47 = @func_10645(%46) /* ty=(Tensor[(6, 7, 5), float32],) */;
  %48 = %44.0;
  %49 = %47.0;
  (%48, %49, meta[relay.Constant][4] /* ty=Tensor[(210), float32] */)
}

def @func_3977(%var_3962: Tensor[(15, 13, 5), uint8], %var_3963: Tensor[(15, 13, 5), uint8]) -> (Tensor[(15, 13, 5), uint8], Tensor[(12, 5, 5), float32]) {
  %50 = cast(%var_3963, dtype="uint8") /* ty=Tensor[(15, 13, 5), uint8] */;
  %51 = shape_of(%var_3962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(%var_3962, dtype="uint8") /* ty=Tensor[(15, 13, 5), uint8] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %54 = logical_xor(%52, %53) /* ty=Tensor[(15, 13, 5), uint8] */;
  %55 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  (%54, %55)
}

def @func_13092() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %56 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %57 = @func_11223() /* ty=Tensor[(10, 4, 12), float64] */;
  %58 = %56.0;
  (%57, %58)
}

def @func_7935() -> (Tensor[(10, 4, 12), float64], Tensor[(12, 5, 5), float32]) {
  %59 = @func_7757() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %60 = %59.0;
  %61 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  (%60, %61)
}

def @func_1339(%var_1303: Tensor[(4, 4, 11), uint32], %var_1304: Tensor[(4, 4, 11), uint32]) -> (Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) {
  %62 = cast(%var_1304, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %63 = shape_of(%var_1303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %64 = cast(%var_1303, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %66 = less(%64, %65) /* ty=Tensor[(4, 4, 11), bool] */;
  %67 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 4, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %71 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %72 = greater_equal(%69, %70) /* ty=Tensor[(4, 4, 11), bool] */;
  %73 = %71.0;
  (%72, %73)
}

def @func_8200() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %74 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %75 = %74.0;
  %76 = cast(%75, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %77 = reshape(%76, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %78 = @func_665(%77) /* ty=(Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */;
  %79 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %80 = %78.1;
  %81 = %79.0;
  %82 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %83 = @func_7184() /* ty=Tensor[(10, 4, 12), float32] */;
  (%75, %80, %81, %82, %83)
}

def @func_5911() -> Tensor[(10, 4, 12), float64] {
  %84 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %84.5
}

def @func_11223() -> Tensor[(10, 4, 12), float64] {
  @func_5911() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_7184() -> Tensor[(10, 4, 12), float32] {
  %85 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %85.0
}

def @func_4524() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %86 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %87 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  %88 = %86.0;
  %89 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  (%87, %88, %89)
}

def @func_8270() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %90 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %91 = %90.0;
  %92 = @func_5439() /* ty=Tensor[(10, 4, 12), float32] */;
  (%91, %92)
}

def @func_3412(%var_3405: Tensor[(10, 4, 12), float32]) -> Tensor[(10, 4, 12), uint32] {
  %93 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %94 = %93.0;
  %95 = cast(%var_3405, dtype="uint32") /* ty=Tensor[(10, 4, 12), uint32] */;
  %96 = shape_of(%94, dtype="int32") /* ty=Tensor[(3), int32] */;
  %97 = cast(%94, dtype="uint32") /* ty=Tensor[(10, 4, 12), uint32] */;
  %98 = dyn.reshape(%95, %96, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%97, %98) /* ty=Tensor[(10, 4, 12), uint32] */
}

def @func_5505() -> (Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32]) {
  %99 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %100 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %101 = %99.0;
  (%100, %101)
}

def @func_5731() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %102 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %103 = @func_5158() /* ty=Tensor[(10, 4, 12), float32] */;
  (%102, %103)
}

def @func_7377(%var_7365: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(297), float64]) {
  %104 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %105 = %104.0;
  %106 = cast(%105, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %107 = reshape(%106, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %108 = @func_3427() /* ty=Tensor[(10, 4, 12), float32] */;
  %109 = cast(%108, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %110 = cast(%var_7365, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %111 = cast(meta[relay.Constant][6] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %112 = reshape(%109, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %113 = reshape(%110, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %114 = reshape(%111, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %115 = @func_6067(%112, %113, %114) /* ty=(Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) */;
  %116 = @func_3412(%107) /* ty=Tensor[(10, 4, 12), uint32] */;
  %117 = @func_7301() /* ty=Tensor[(10, 4, 12), float32] */;
  %118 = %115.9;
  (%108, %105, %116, %117, %118, %var_7365, meta[relay.Constant][6] /* ty=Tensor[(297), float64] */)
}

def @func_2631(%var_2542: Tensor[(10, 10, 7), float64], %var_2628: Tensor[(3136), float32]) -> (Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %119 = cast(%var_2542, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
  %120 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %121 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %122 = cast(%var_2628, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %123 = reshape(%122, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %124 = @func_937(%123) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %125 = sin(%119) /* ty=Tensor[(10, 10, 7), float64] */;
  %126 = %120.0;
  %127 = %121.0;
  %128 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %129 = %124.1;
  (%125, %126, %127, %128, %129, %var_2628)
}

def @func_9670() -> (Tensor[(10, 4, 12), float32],) {
  %130 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %131 = %130.0;
  (%131,)
}

def @func_7282() -> Tensor[(10, 4, 12), float64] {
  %132 = @func_5031() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %132.1
}

def @func_5310(%var_5290: uint16, %var_5291: Tensor[(297, 1), uint16]) -> (Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %133 = cast(meta[relay.Constant][7] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %134 = cast(%var_5290, dtype="uint16") /* ty=uint16 */;
  %135 = cast(%var_5291, dtype="uint16") /* ty=Tensor[(297, 1), uint16] */;
  %136 = reshape(%133, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float32] */;
  %137 = reshape(%134, newshape=[]) /* ty=uint16 */;
  %138 = reshape(%135, newshape=[297]) /* ty=Tensor[(297), uint16] */;
  %139 = @func_2325(%136, %137, %138) /* ty=(Tensor[(8, 6, 11), uint32], Tensor[(176), uint32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %140 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %141 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %142 = @func_3553() /* ty=Tensor[(10, 4, 12), float32] */;
  %143 = %139.3;
  %144 = %140.1;
  %145 = %141.0;
  (%142, %143, meta[relay.Constant][7] /* ty=Tensor[(528), float32] */, %var_5290, %var_5291, %144, %145)
}

def @func_3427() -> Tensor[(10, 4, 12), float32] {
  %146 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %146.0
}

def @func_5398(%var_5322: Tensor[(16, 6, 10), int64], %var_5323: Tensor[(16, 6, 10), int64]) -> (Tensor[(16, 6, 10), int64], Tensor[(16, 6, 10), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32]) {
  %147 = cast(%var_5323, dtype="int64") /* ty=Tensor[(16, 6, 10), int64] */;
  %148 = shape_of(%var_5322, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%var_5322, dtype="int64") /* ty=Tensor[(16, 6, 10), int64] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %151 = cast(%var_5323, dtype="float64") /* ty=Tensor[(16, 6, 10), float64] */;
  %152 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %153 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %154 = maximum(%149, %150) /* ty=Tensor[(16, 6, 10), int64] */;
  %155 = cos(%151) /* ty=Tensor[(16, 6, 10), float64] */;
  %156 = %152.0;
  %157 = %153.0;
  (%154, %155, %156, %157)
}

def @func_11643() -> Tensor[(10, 4, 12), float64] {
  %158 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %158.0
}

def @func_12182() -> Tensor[(10, 4, 12), float64] {
  %159 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %159.1
}

def @func_12507(%var_12505: Tensor[(1274), uint8]) -> (Tensor[(10, 4, 12), float32], Tensor[(12, 1, 4), float32], float32, Tensor[(48), float32], Tensor[(1274), uint8]) {
  %160 = cast(8.91757f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %161 = cast(meta[relay.Constant][8] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %162 = cast(%var_12505, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %163 = reshape(%160, newshape=[]) /* ty=float32 */;
  %164 = reshape(%161, newshape=[12, 1, 4]) /* ty=Tensor[(12, 1, 4), float32] */;
  %165 = reshape(%162, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), uint8] */;
  %166 = @func_12223(%163, %164, %165) /* ty=(Tensor[(12, 1, 4), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1, 1274), uint8]) */;
  %167 = @func_5158() /* ty=Tensor[(10, 4, 12), float32] */;
  %168 = %166.0;
  (%167, %168, 8.91757f /* ty=float32 */, meta[relay.Constant][8] /* ty=Tensor[(48), float32] */, %var_12505)
}

def @func_11528(%var_11452: Tensor[(14, 8, 10), int32], %var_11463: Tensor[(176), uint32], %var_11504: Tensor[(14, 8, 10), int8], %var_11518: Tensor[(14, 8, 10), int8]) -> (Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), uint8], Tensor[(14, 8, 10), bool], Tensor[(10, 4, 12), float32], Tensor[(14, 8, 10), float64]) {
  %169 = cast(%var_11463, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %170 = reshape(%169, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %171 = @func_3692(%170) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) */;
  %172 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 8, 10), int32] */, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
  %173 = sinh(%172) /* ty=Tensor[(14, 8, 10), float64] */;
  %174 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 8, 10), int32] */, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%173, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %178 = cast(%var_11452, dtype="int32") /* ty=Tensor[(14, 8, 10), int32] */;
  %179 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(14, 8, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %180 = cast(meta[relay.Constant][9] /* ty=Tensor[(14, 8, 10), int32] */, dtype="int32") /* ty=Tensor[(14, 8, 10), int32] */;
  %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %182 = bitwise_xor(%180, %181) /* ty=Tensor[(14, 8, 10), int32] */;
  %183 = cast(%var_11452, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
  %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%182, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %187 = cast(%182, dtype="int8") /* ty=Tensor[(14, 8, 10), int8] */;
  %188 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %189 = cast(%173, dtype="int8") /* ty=Tensor[(14, 8, 10), int8] */;
  %190 = dyn.reshape(%187, %188, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %191 = multiply(%189, %190) /* ty=Tensor[(14, 8, 10), int8] */;
  %192 = cast(%var_11504, dtype="uint8") /* ty=Tensor[(14, 8, 10), uint8] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%191, dtype="uint8") /* ty=Tensor[(14, 8, 10), uint8] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %196 = cast(%var_11518, dtype="bool") /* ty=Tensor[(14, 8, 10), bool] */;
  %197 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%191, dtype="bool") /* ty=Tensor[(14, 8, 10), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = cast(%191, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
  %201 = asinh(%200) /* ty=Tensor[(14, 8, 10), float32] */;
  %202 = cast(%201, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
  %203 = %171.0;
  %204 = divide(%176, %177) /* ty=Tensor[(14, 8, 10), float32] */;
  %205 = floor_divide(%185, %186) /* ty=Tensor[(14, 8, 10), float32] */;
  %206 = left_shift(%194, %195) /* ty=Tensor[(14, 8, 10), uint8] */;
  %207 = logical_or(%198, %199) /* ty=Tensor[(14, 8, 10), bool] */;
  %208 = @func_9690() /* ty=Tensor[(10, 4, 12), float32] */;
  %209 = atanh(%202) /* ty=Tensor[(14, 8, 10), float64] */;
  (%203, %var_11463, %204, %205, %206, %207, %208, %209)
}

def @func_13525() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %210 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %211 = %210.0;
  %212 = @func_5911() /* ty=Tensor[(10, 4, 12), float64] */;
  (%211, %212)
}

def @func_1758() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %213 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %214 = %213.0;
  %215 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  (%214, %215)
}

def @func_12791(%var_12783: Tensor[(392, 8), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(12, 1, 4), float32], Tensor[(1274), uint8], Tensor[(3136), float64], Tensor[(392, 8), float32], Tensor[(10, 4, 12), float32]) {
  %216 = cast(meta[relay.Constant][10] /* ty=Tensor[(1274), uint8] */, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %217 = reshape(%216, newshape=[1274]) /* ty=Tensor[(1274), uint8] */;
  %218 = @func_12507(%217) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(12, 1, 4), float32], float32, Tensor[(48), float32], Tensor[(1274), uint8]) */;
  %219 = cast(%var_12783, dtype="float32") /* ty=Tensor[(392, 8), float32] */;
  %220 = reshape(%219, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %221 = @func_12017(%220) /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(3136), float64], Tensor[(10, 4, 12), float32]) */;
  %222 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %223 = %218.1;
  %224 = %221.2;
  %225 = @func_6492() /* ty=Tensor[(10, 4, 12), float32] */;
  (%222, %223, meta[relay.Constant][10] /* ty=Tensor[(1274), uint8] */, %224, %var_12783, %225)
}

def @func_1377() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %226 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %227 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %228 = %226.1;
  (%227, %228)
}

def @func_12444() -> (Tensor[(10, 4, 12), float32],) {
  %229 = @func_8270() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %230 = %229.1;
  (%230,)
}

def @func_11954() -> (Tensor[(10, 4, 12), float32], Tensor[(12, 14, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float64]) {
  %231 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %232 = @func_10105() /* ty=Tensor[(12, 14, 12), float64] */;
  %233 = cast(%232, dtype="float32") /* ty=Tensor[(12, 14, 12), float32] */;
  %234 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
  %235 = @func_9481() /* ty=(Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %236 = %231.0;
  %237 = log2(%233) /* ty=Tensor[(12, 14, 12), float32] */;
  %238 = %234.0;
  %239 = %235.1;
  (%236, %237, %238, %239)
}

def @func_3223() -> Tensor[(10, 4, 12), float32] {
  %240 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
  %240.2
}

def @func_1693() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) {
  %241 = cast(meta[relay.Constant][11] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %242 = reshape(%241, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %243 = @func_937(%242) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %244 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  %245 = %243.0;
  (%244, %245, meta[relay.Constant][11] /* ty=Tensor[(3136), float32] */)
}

def @func_8629() -> (Tensor[(10, 4, 12), float32],) {
  %246 = @func_3396() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %247 = %246.2;
  (%247,)
}

def @func_5439() -> Tensor[(10, 4, 12), float32] {
  @func_3725() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_11012() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %248 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %249 = %248.0;
  %250 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  (%249, %250)
}

def @func_5883() -> (Tensor[(10, 4, 12), float64],) {
  %251 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %252 = %251.0;
  (%252,)
}

def @func_1865() -> Tensor[(10, 4, 12), float32] {
  %253 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %253.0
}

def @func_3937() -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) {
  %254 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %255 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
  %256 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %257 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %258 = %257.0;
  %259 = cast(%258, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
  %260 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %261 = cast(%256, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
  %262 = dyn.reshape(%259, %260, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %263 = %254.1;
  %264 = %255.2;
  %265 = less(%261, %262) /* ty=Tensor[(10, 4, 12), bool] */;
  (%263, %264, %265)
}

def @func_581() -> Tensor[(10, 4, 12), float32] {
  %266 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %266.0
}

def @func_8661() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %267 = @func_1936() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %268 = @func_6846() /* ty=(Tensor[(176), float32],) */;
  %269 = @func_7067() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32]) */;
  %270 = %267.1;
  %271 = %268.0;
  %272 = @func_3553() /* ty=Tensor[(10, 4, 12), float32] */;
  %273 = %269.1;
  (%270, %271, %272, %273)
}

def @func_13699() -> Tensor[(10, 4, 12), float32] {
  %274 = @func_9353() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %274.0
}

def @func_3795() -> (Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %275 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %276 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %277 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %278 = %275.3;
  %279 = %276.0;
  %280 = %277.0;
  (%278, %279, %280)
}

def @func_8824() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 88), uint32], Tensor[(10, 4, 12), float32]) {
  %281 = @func_4733() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) */;
  %282 = cast(meta[relay.Constant][12] /* ty=Tensor[(2, 88), uint32] */, dtype="uint32") /* ty=Tensor[(2, 88), uint32] */;
  %283 = reshape(%282, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %284 = @func_1726(%283) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) */;
  %285 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %286 = %281.1;
  %287 = %284.1;
  %288 = %285.1;
  (%286, %287, meta[relay.Constant][12] /* ty=Tensor[(2, 88), uint32] */, %288)
}

def @func_13463() -> (Tensor[(10, 4, 12), float32],) {
  %289 = @func_9690() /* ty=Tensor[(10, 4, 12), float32] */;
  (%289,)
}

def @func_2246() -> (Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  %290 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %291 = cast(meta[relay.Constant][13] /* ty=Tensor[(88, 2), uint32] */, dtype="uint32") /* ty=Tensor[(88, 2), uint32] */;
  %292 = reshape(%291, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %293 = @func_1726(%292) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) */;
  %294 = %293.2;
  %295 = cast(%294, dtype="float32") /* ty=Tensor[(176), float32] */;
  %296 = asin(%295) /* ty=Tensor[(176), float32] */;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(176), float32] */;
  %298 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %299 = %290.0;
  %300 = log10(%297) /* ty=Tensor[(176), float32] */;
  (%298, meta[relay.Constant][13] /* ty=Tensor[(88, 2), uint32] */, %299, %300)
}

def @func_796() -> (Tensor[(10, 4, 12), float32],) {
  %301 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  (%301,)
}

def @func_1275() -> Tensor[(10, 4, 12), float32] {
  @func_809() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_1936() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %302 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %303 = @func_1693() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) */;
  %304 = %302.1;
  %305 = %303.0;
  (%304, %305)
}

def @func_665(%var_654: Tensor[(10, 4, 12), float32]) -> (Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) {
  %306 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %307 = cast(%var_654, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
  %308 = shape_of(%306, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%306, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %311 = cast(%306, dtype="float64") /* ty=Tensor[(10, 4, 12), float64] */;
  %312 = less_equal(%309, %310) /* ty=Tensor[(10, 4, 12), bool] */;
  %313 = acosh(%311) /* ty=Tensor[(10, 4, 12), float64] */;
  (%312, %313)
}

def @func_2986(%var_2976: Tensor[(14, 10, 5), int16]) -> Tensor[(14, 10, 5), int16] {
  %314 = cast(meta[relay.Constant][14] /* ty=Tensor[(14, 10, 5), int16] */, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
  %315 = shape_of(%var_2976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %316 = cast(%var_2976, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
  %317 = dyn.reshape(%314, %315, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  subtract(%316, %317) /* ty=Tensor[(14, 10, 5), int16] */
}

def @func_5585() -> (Tensor[(14, 14, 16), float64],) {
  %318 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %319 = %318.0;
  (%319,)
}

def @func_3033() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  %320 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %321 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %322 = %320.0;
  %323 = %321.3;
  (%322, %323)
}

def @func_6177(%var_6133: Tensor[(16, 3, 9), float64], %var_6157: Tensor[(1, 700), int16], %var_6158: Tensor[(3136), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(3136), float32], Tensor[(16, 3, 9), float64], Tensor[(4, 700), uint8]) {
  %324 = cast(%var_6157, dtype="int16") /* ty=Tensor[(1, 700), int16] */;
  %325 = cast(%var_6158, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %326 = reshape(%324, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %327 = reshape(%325, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %328 = @func_4473(%326, %327) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
  %329 = cast(%var_6133, dtype="float64") /* ty=Tensor[(16, 3, 9), float64] */;
  %330 = sin(%329) /* ty=Tensor[(16, 3, 9), float64] */;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(16, 3, 9), float64] */;
  %332 = cast(%var_6157, dtype="uint8") /* ty=Tensor[(1, 700), uint8] */;
  %333 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 700), int16] */, dtype="uint8") /* ty=Tensor[(4, 700), uint8] */;
  %334 = %328.0;
  %335 = sigmoid(%331) /* ty=Tensor[(16, 3, 9), float64] */;
  %336 = left_shift(%332, %333) /* ty=Tensor[(4, 700), uint8] */;
  (%334, %var_6158, %335, %336)
}

def @func_2325(%var_2255: Tensor[(8, 6, 11), float32], %var_2287: uint16, %var_2288: Tensor[(297), uint16]) -> (Tensor[(8, 6, 11), uint32], Tensor[(176), uint32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %337 = cast(%var_2255, dtype="float32") /* ty=Tensor[(8, 6, 11), float32] */;
  %338 = sinh(%337) /* ty=Tensor[(8, 6, 11), float32] */;
  %339 = cast(%338, dtype="uint32") /* ty=Tensor[(8, 6, 11), uint32] */;
  %340 = shape_of(%var_2255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%var_2255, dtype="uint32") /* ty=Tensor[(8, 6, 11), uint32] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %343 = cast(%var_2287, dtype="uint16") /* ty=uint16 */;
  %344 = cast(%var_2288, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %345 = reshape(%343, newshape=[]) /* ty=uint16 */;
  %346 = reshape(%344, newshape=[9, 11, 3]) /* ty=Tensor[(9, 11, 3), uint16] */;
  %347 = @func_2023(%345, %346) /* ty=(Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) */;
  %348 = right_shift(%341, %342) /* ty=Tensor[(8, 6, 11), uint32] */;
  %349 = %347.1;
  %350 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %351 = @func_1275() /* ty=Tensor[(10, 4, 12), float32] */;
  (%348, %349, %var_2287, %var_2288, %350, %351)
}

def @func_8108(%var_8068: Tensor[(10, 4, 12), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %352 = @func_6737() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %353 = @func_5505() /* ty=(Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32]) */;
  %354 = @func_2712() /* ty=Tensor[(10, 4, 12), float32] */;
  %355 = cast(%var_8068, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
  %356 = shape_of(%354, dtype="int32") /* ty=Tensor[(3), int32] */;
  %357 = cast(%354, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
  %358 = dyn.reshape(%355, %356, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %359 = cast(meta[relay.Constant][16] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %360 = reshape(%359, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %361 = @func_937(%360) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %362 = %352.0;
  %363 = %353.1;
  %364 = logical_or(%357, %358) /* ty=Tensor[(10, 4, 12), bool] */;
  %365 = %361.1;
  (%362, %363, %364, %365, meta[relay.Constant][16] /* ty=Tensor[(3136), float32] */)
}

def @func_8904() -> Tensor[(10, 4, 12), float32] {
  %366 = @func_7986() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %366.0
}

def @func_7067() -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32]) {
  %367 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %368 = @func_4269() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
  %369 = %367.0;
  %370 = %368.1;
  (%369, %370)
}

def @func_13166() -> Tensor[(10, 4, 12), float64] {
  %371 = @func_5668() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %371.0
}

def @func_12121() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  %372 = @func_3709() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %373 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %374 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
  %375 = %372.0;
  %376 = %373.0;
  %377 = %374.0;
  (%375, %376, %377)
}

def @func_7824(%var_7781: Tensor[(12, 5, 5), float32], %var_7795: Tensor[(1232), int32], %var_7811: Tensor[(12, 5, 5), float32]) -> (Tensor[(12, 5, 5), uint32], Tensor[(11, 8, 14), bool], Tensor[(1232), int32], Tensor[(12, 5, 5), uint8], Tensor[(12, 5, 5), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %378 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %379 = cast(%var_7781, dtype="uint32") /* ty=Tensor[(12, 5, 5), uint32] */;
  %380 = shape_of(%378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%378, dtype="uint32") /* ty=Tensor[(12, 5, 5), uint32] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %383 = cast(%var_7795, dtype="int32") /* ty=Tensor[(1232), int32] */;
  %384 = cast(%var_7795, dtype="int32") /* ty=Tensor[(1232), int32] */;
  %385 = reshape(%383, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
  %386 = reshape(%384, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
  %387 = @func_3535(%385, %386) /* ty=(Tensor[(11, 8, 14), bool],) */;
  %388 = cast(%var_7811, dtype="uint8") /* ty=Tensor[(12, 5, 5), uint8] */;
  %389 = shape_of(%var_7781, dtype="int32") /* ty=Tensor[(3), int32] */;
  %390 = cast(%var_7781, dtype="uint8") /* ty=Tensor[(12, 5, 5), uint8] */;
  %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %392 = cast(%var_7781, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
  %393 = @func_2758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %394 = right_shift(%381, %382) /* ty=Tensor[(12, 5, 5), uint32] */;
  %395 = %387.0;
  %396 = minimum(%390, %391) /* ty=Tensor[(12, 5, 5), uint8] */;
  %397 = sin(%392) /* ty=Tensor[(12, 5, 5), float64] */;
  %398 = %393.0;
  %399 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  (%394, %395, %var_7795, %396, %397, %398, %399)
}

def @func_6492() -> Tensor[(10, 4, 12), float32] {
  %400 = @func_2389() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %400.1
}

def @func_1903() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %401 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %402 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  (%401, %402)
}

def @func_8969(%var_8966: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %403 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %404 = @func_8761() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %405 = cast(%var_8966, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %406 = reshape(%405, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %407 = @func_2519(%406) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %408 = %403.0;
  %409 = %404.1;
  %410 = %407.2;
  (%408, %409, %410, %var_8966)
}

def @func_10041() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %411 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %412 = @func_7757() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %413 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %414 = %411.0;
  %415 = %412.0;
  %416 = %413.0;
  (%414, %415, %416)
}

def @func_11805() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %417 = @func_3223() /* ty=Tensor[(10, 4, 12), float32] */;
  %418 = @func_2643() /* ty=Tensor[(10, 4, 12), float32] */;
  (%417, %418)
}

def @func_12331() -> (Tensor[(10, 4, 12), float64], Tensor[(2, 5, 6), float32], uint16, Tensor[(3, 8, 8), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64], Tensor[(1, 297), float64]) {
  %419 = cast(meta[relay.Constant][17] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %420 = reshape(%419, newshape=[]) /* ty=uint16 */;
  %421 = @func_4966(%420) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(2, 5, 6), float32]) */;
  %422 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %423 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 297), float64] */, dtype="float64") /* ty=Tensor[(1, 297), float64] */;
  %424 = reshape(%423, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %425 = @func_7152(%424) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), float64], Tensor[(14, 10, 5), int16], Tensor[(10, 4, 12), float32]) */;
  %426 = @func_12182() /* ty=Tensor[(10, 4, 12), float64] */;
  %427 = %421.1;
  %428 = @func_9267() /* ty=Tensor[(3, 8, 8), float64] */;
  %429 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  %430 = %422.0;
  %431 = %425.3;
  (%426, %427, meta[relay.Constant][17] /* ty=uint16 */, %428, %429, %430, %431, meta[relay.Constant][18] /* ty=Tensor[(1, 297), float64] */)
}

def @func_3449() -> Tensor[(12, 5, 5), float32] {
  %432 = cast(meta[relay.Constant][19] /* ty=Tensor[(12, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
  log10(%432) /* ty=Tensor[(12, 5, 5), float32] */
}

def @func_9772(%var_9767: Tensor[(2, 16, 14), float32]) -> (Tensor[(2, 16, 14), float32],) {
  %433 = cast(%var_9767, dtype="float32") /* ty=Tensor[(2, 16, 14), float32] */;
  %434 = sinh(%433) /* ty=Tensor[(2, 16, 14), float32] */;
  (%434,)
}

def @func_10245() -> Tensor[(10, 4, 12), float32] {
  @func_1865() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_760(%var_700: Tensor[(520), int8], %var_701: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  %435 = cast(%var_700, dtype="int8") /* ty=Tensor[(520), int8] */;
  %436 = cast(%var_700, dtype="int8") /* ty=Tensor[(520), int8] */;
  %437 = cast(%var_701, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %438 = cast(%var_701, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %439 = reshape(%435, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %440 = reshape(%436, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %441 = reshape(%437, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %442 = reshape(%438, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float64] */;
  %443 = @func_351(%439, %440, %441, %442) /* ty=(Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) */;
  %444 = cast(%var_701, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %445 = reshape(%444, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %446 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %447 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %448 = %443.0;
  %449 = cast(%448, dtype="int8") /* ty=Tensor[(10, 4, 13), int8] */;
  %450 = cast(%448, dtype="int8") /* ty=Tensor[(10, 4, 13), int8] */;
  %451 = @func_42(%445) /* ty=Tensor[(14, 14, 16), float64] */;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
  %453 = cast(%var_701, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %454 = reshape(%449, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %455 = reshape(%450, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %456 = reshape(%452, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %457 = reshape(%453, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float64] */;
  %458 = @func_351(%454, %455, %456, %457) /* ty=(Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) */;
  %459 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %460 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %461 = %446.0;
  %462 = %447.0;
  %463 = %458.1;
  (%459, %448, %var_700, %var_701, %460, %451, %461, %462, %463)
}

def @func_3960() -> (Tensor[(10, 4, 12), float32],) {
  %464 = @func_3725() /* ty=Tensor[(10, 4, 12), float32] */;
  (%464,)
}

def @func_1726(%var_1716: Tensor[(176), uint32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) {
  %465 = cast(%var_1716, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %466 = cast(%var_1716, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %467 = reshape(%465, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %468 = reshape(%466, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %469 = @func_1339(%467, %468) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) */;
  %470 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %471 = %469.1;
  (%470, %471, %var_1716)
}

def @func_13776() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %472 = @func_7895() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %473 = %472.0;
  %474 = @func_11223() /* ty=Tensor[(10, 4, 12), float64] */;
  (%473, %474)
}

def @func_2788() -> (Tensor[(10, 4, 12), float32],) {
  %475 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %476 = %475.0;
  (%476,)
}

def @func_809() -> Tensor[(10, 4, 12), float32] {
  %477 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %477.0
}

def @func_6923() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32]) {
  %478 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %479 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %480 = cast(%479, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %481 = reshape(%480, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %482 = %478.0;
  %483 = @func_3412(%481) /* ty=Tensor[(10, 4, 12), uint32] */;
  (%482, %479, %483)
}

def @func_10645(%var_10637: Tensor[(6, 7, 5), float32]) -> (Tensor[(6, 7, 5), float32],) {
  %484 = cast(%var_10637, dtype="float32") /* ty=Tensor[(6, 7, 5), float32] */;
  %485 = sin(%484) /* ty=Tensor[(6, 7, 5), float32] */;
  (%485,)
}

def @func_985(%var_960: Tensor[(520), int8]) -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) {
  %486 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %487 = %486.5;
  %488 = cast(%487, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %489 = cast(%var_960, dtype="int8") /* ty=Tensor[(520), int8] */;
  %490 = cast(meta[relay.Constant][20] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %491 = reshape(%489, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %492 = reshape(%490, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %493 = @func_760(%491, %492) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
  %494 = %493.2;
  %495 = cast(%494, dtype="int8") /* ty=Tensor[(520), int8] */;
  %496 = cast(meta[relay.Constant][20] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %497 = reshape(%495, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %498 = reshape(%496, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %499 = @func_760(%497, %498) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
  %500 = sqrt(%488) /* ty=Tensor[(10, 4, 12), float32] */;
  %501 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %502 = %499.2;
  (%500, %494, %var_960, meta[relay.Constant][20] /* ty=Tensor[(3136), float32] */, %501, %502)
}

def @func_5668() -> (Tensor[(10, 4, 12), float64],) {
  %503 = @func_1444() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %504 = %503.0;
  (%504,)
}

def @func_12223(%var_12184: float32, %var_12185: Tensor[(12, 1, 4), float32], %var_12212: Tensor[(1, 1274), uint8]) -> (Tensor[(12, 1, 4), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1, 1274), uint8]) {
  %505 = cast(%var_12184, dtype="float32") /* ty=float32 */;
  %506 = cast(%var_12185, dtype="float32") /* ty=Tensor[(12, 1, 4), float32] */;
  %507 = cast(%var_12212, dtype="uint8") /* ty=Tensor[(1, 1274), uint8] */;
  %508 = reshape(%507, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %509 = minimum(%505, %506) /* ty=Tensor[(12, 1, 4), float32] */;
  %510 = @func_3725() /* ty=Tensor[(10, 4, 12), float32] */;
  %511 = @func_2137(%508) /* ty=Tensor[(14, 13, 7), uint8] */;
  (%509, %510, %511, %var_12212)
}

def @main() -> (Tensor[(1, 11, 15), float64],) {
  %512 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %513 = acosh(%512) /* ty=Tensor[(1, 11, 15), float64] */;
  %514 = cast(%513, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %515 = atan(%514) /* ty=Tensor[(1, 11, 15), float64] */;
  (%515,)
}

def @func_2111(%var_2092: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) {
  %516 = cast(%var_2092, dtype="float32") /* ty=Tensor[(14, 3, 7), float32] */;
  %517 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(14, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %518 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 7), float32] */;
  %519 = dyn.reshape(%516, %517, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %520 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %521 = cast(%var_2092, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %522 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(14, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %523 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %524 = dyn.reshape(%521, %522, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %525 = floor_mod(%518, %519) /* ty=Tensor[(14, 3, 7), float32] */;
  %526 = %520.0;
  %527 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %528 = logical_or(%523, %524) /* ty=Tensor[(14, 3, 7), bool] */;
  (%525, %526, %527, %528)
}

def @func_10077() -> Tensor[(10, 4, 12), float32] {
  %529 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %529.0
}

def @func_12017(%var_11994: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(3136), float64], Tensor[(10, 4, 12), float32]) {
  %530 = @func_9481() /* ty=(Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %531 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %532 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %533 = %532.2;
  %534 = cast(%var_11994, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %535 = shape_of(%533, dtype="int32") /* ty=Tensor[(1), int32] */;
  %536 = cast(%533, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?), float64] */;
  %538 = %530.2;
  %539 = %531.0;
  %540 = power(%536, %537) /* ty=Tensor[(3136), float64] */;
  %541 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  (%538, %539, %540, %541)
}

def @func_4921() -> Tensor[(4, 1, 6), float32] {
  %542 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
  %542.3
}

def @func_5861() -> Tensor[(10, 4, 12), float32] {
  %543 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %543.0
}

def @func_6342(%var_6306: Tensor[(8, 154), int32], %var_6316: Tensor[(20, 48), int64]) -> (Tensor[(12, 5, 5), float32], Tensor[(8, 154), float64], Tensor[(20, 48), float64], Tensor[(10, 4, 12), float32]) {
  %544 = @func_4733() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) */;
  %545 = cast(%var_6306, dtype="int32") /* ty=Tensor[(8, 154), int32] */;
  %546 = cast(%var_6306, dtype="int32") /* ty=Tensor[(8, 154), int32] */;
  %547 = reshape(%545, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
  %548 = reshape(%546, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
  %549 = @func_3535(%547, %548) /* ty=(Tensor[(11, 8, 14), bool],) */;
  %550 = %549.0;
  %551 = cast(%550, dtype="float64") /* ty=Tensor[(11, 8, 14), float64] */;
  %552 = shape_of(%var_6306, dtype="int32") /* ty=Tensor[(2), int32] */;
  %553 = cast(%var_6306, dtype="float64") /* ty=Tensor[(8, 154), float64] */;
  %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %555 = cast(%var_6316, dtype="int64") /* ty=Tensor[(20, 48), int64] */;
  %556 = cast(%var_6316, dtype="int64") /* ty=Tensor[(20, 48), int64] */;
  %557 = reshape(%555, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), int64] */;
  %558 = reshape(%556, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), int64] */;
  %559 = @func_5398(%557, %558) /* ty=(Tensor[(16, 6, 10), int64], Tensor[(16, 6, 10), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32]) */;
  %560 = %559.1;
  %561 = cast(%560, dtype="float64") /* ty=Tensor[(16, 6, 10), float64] */;
  %562 = shape_of(%var_6316, dtype="int32") /* ty=Tensor[(2), int32] */;
  %563 = cast(%var_6316, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %564 = dyn.reshape(%561, %562, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %565 = @func_1936() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %566 = %544.6;
  %567 = power(%553, %554) /* ty=Tensor[(8, 154), float64] */;
  %568 = floor_divide(%563, %564) /* ty=Tensor[(20, 48), float64] */;
  %569 = %565.0;
  (%566, %567, %568, %569)
}

def @func_574() -> (Tensor[(10, 4, 12), float32],) {
  %570 = cast(meta[relay.Constant][23] /* ty=Tensor[(10, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %571 = cosh(%570) /* ty=Tensor[(10, 4, 12), float32] */;
  (%571,)
}

def @func_10090() -> Tensor[(10, 4, 12), float32] {
  %572 = @func_7986() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %572.0
}

def @func_8761() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %573 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %574 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %575 = %573.2;
  (%574, %575)
}

def @func_1444() -> (Tensor[(10, 4, 12), float64],) {
  %576 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %577 = %576.4;
  (%577,)
}

def @func_13566() -> (Tensor[(10, 4, 12), float32],) {
  %578 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %579 = %578.0;
  (%579,)
}

def @func_10563(%var_10551: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64], Tensor[(10, 4, 12), float32]) {
  %580 = cast(%var_10551, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
  %581 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %582 = tan(%580) /* ty=Tensor[(12, 9, 11), float64] */;
  %583 = %581.0;
  (%582, %583)
}

def @func_13141(%var_13128: Tensor[(700), float64], %var_13129: Tensor[(294), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool], Tensor[(700), float64], Tensor[(294), float32], Tensor[(10, 4, 12), float64], Tensor[(4, 12, 8), float64], float64, Tensor[(96, 4), float64]) {
  %584 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %585 = cast(%var_13128, dtype="float64") /* ty=Tensor[(700), float64] */;
  %586 = cast(%var_13129, dtype="float32") /* ty=Tensor[(294), float32] */;
  %587 = reshape(%585, newshape=[700]) /* ty=Tensor[(700), float64] */;
  %588 = reshape(%586, newshape=[294]) /* ty=Tensor[(294), float32] */;
  %589 = @func_5226(%587, %588) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(14, 3, 7), bool], Tensor[(294), float32]) */;
  %590 = cast(5.49434f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %591 = cast(meta[relay.Constant][24] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %592 = reshape(%590, newshape=[]) /* ty=float64 */;
  %593 = reshape(%591, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), float64] */;
  %594 = %584.0;
  %595 = %589.5;
  %596 = @func_9032() /* ty=Tensor[(10, 4, 12), float64] */;
  %597 = @func_12715(%592, %593) /* ty=Tensor[(4, 12, 8), float64] */;
  (%594, %595, %var_13128, %var_13129, %596, %597, 5.49434f64 /* ty=float64 */, meta[relay.Constant][24] /* ty=Tensor[(96, 4), float64] */)
}

def @func_9710() -> Tensor[(700), float64] {
  %598 = @func_9583() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), bool]) */;
  %598.2
}

def @func_5776() -> (Tensor[(10, 4, 12), float32],) {
  %599 = @func_4642() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %600 = %599.1;
  (%600,)
}

def @func_3553() -> Tensor[(10, 4, 12), float32] {
  %601 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %601.0
}

def @func_5031() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %602 = @func_4269() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
  %603 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %604 = %602.1;
  %605 = %603.0;
  (%604, %605)
}

def @func_7152(%var_7113: Tensor[(297), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), float64], Tensor[(14, 10, 5), int16], Tensor[(10, 4, 12), float32]) {
  %606 = @func_3709() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %607 = %606.1;
  %608 = cast(%607, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %609 = cast(meta[relay.Constant][25] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %610 = cast(%var_7113, dtype="float64") /* ty=Tensor[(297), float64] */;
  %611 = reshape(%608, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %612 = reshape(%609, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %613 = reshape(%610, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %614 = @func_6067(%611, %612, %613) /* ty=(Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) */;
  %615 = %614.4;
  %616 = cast(%615, dtype="int16") /* ty=Tensor[(700), int16] */;
  %617 = reshape(%616, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %618 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %619 = @func_2986(%617) /* ty=Tensor[(14, 10, 5), int16] */;
  %620 = %618.0;
  (%607, %615, meta[relay.Constant][25] /* ty=Tensor[(3136), float32] */, %var_7113, %619, %620)
}

def @func_10709() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %621 = @func_9107() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %622 = %621.3;
  %623 = @func_3553() /* ty=Tensor[(10, 4, 12), float32] */;
  (%622, %623)
}

def @func_12394() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %624 = @func_10077() /* ty=Tensor[(10, 4, 12), float32] */;
  %625 = @func_8904() /* ty=Tensor[(10, 4, 12), float32] */;
  (%624, %625)
}

def @func_10547() -> Tensor[(10, 4, 12), float32] {
  %626 = @func_3795() /* ty=(Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %626.1
}

def @func_7620() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %627 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %628 = @func_7184() /* ty=Tensor[(10, 4, 12), float32] */;
  (%627, %628)
}

def @func_9583() -> (Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), bool]) {
  %629 = @func_7239() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) */;
  %630 = @func_7239() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) */;
  %631 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %632 = %629.5;
  %633 = @func_8904() /* ty=Tensor[(10, 4, 12), float32] */;
  %634 = %630.2;
  %635 = %631.2;
  (%632, %633, %634, %635)
}

def @func_2686() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %636 = @func_1936() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %637 = cast(meta[relay.Constant][26] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %638 = reshape(%637, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %639 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %640 = %636.0;
  %641 = @func_42(%638) /* ty=Tensor[(14, 14, 16), float64] */;
  (%639, %640, %641, meta[relay.Constant][26] /* ty=Tensor[(3136), float32] */)
}

def @func_623() -> (Tensor[(10, 4, 12), float32],) {
  %642 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %643 = %642.0;
  (%643,)
}

def @func_6265() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %644 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %645 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %646 = %644.0;
  %647 = %645.0;
  (%646, %647)
}

def @func_11409(%var_11370: float32, %var_11371: Tensor[(6, 1, 16), float32]) -> (Tensor[(6, 1, 16), float32], Tensor[(6, 1, 16), bool]) {
  %648 = cast(%var_11370, dtype="float32") /* ty=float32 */;
  %649 = cast(%var_11371, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
  %650 = cast(%var_11371, dtype="float64") /* ty=Tensor[(6, 1, 16), float64] */;
  %651 = cast(%var_11370, dtype="float64") /* ty=float64 */;
  %652 = divide(%650, %651) /* ty=Tensor[(6, 1, 16), float64] */;
  %653 = cast(%var_11370, dtype="bool") /* ty=bool */;
  %654 = cast(%652, dtype="bool") /* ty=Tensor[(6, 1, 16), bool] */;
  %655 = minimum(%648, %649) /* ty=Tensor[(6, 1, 16), float32] */;
  %656 = greater(%653, %654) /* ty=Tensor[(6, 1, 16), bool] */;
  (%655, %656)
}

def @func_9417() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %657 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %658 = @func_5031() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %659 = %657.0;
  %660 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %661 = %658.1;
  (%659, %660, %661)
}

def @func_42(%var_4: Tensor[(14, 14, 16), float32]) -> Tensor[(14, 14, 16), float64] {
  %662 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 1, 16), float32] */, dtype="bool") /* ty=Tensor[(14, 1, 16), bool] */;
  %663 = cast(%var_4, dtype="bool") /* ty=Tensor[(14, 14, 16), bool] */;
  %664 = not_equal(%662, %663) /* ty=Tensor[(14, 14, 16), bool] */;
  %665 = cast(%664, dtype="float64") /* ty=Tensor[(14, 14, 16), float64] */;
  asinh(%665) /* ty=Tensor[(14, 14, 16), float64] */
}

def @func_10217() -> (Tensor[(15, 13, 11), bool],) {
  %666 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %667 = sigmoid(%666) /* ty=Tensor[(15, 13, 11), float64] */;
  %668 = cast(meta[relay.Constant][28] /* ty=Tensor[(15, 13, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %669 = shape_of(%667, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%667, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %672 = equal(%670, %671) /* ty=Tensor[(15, 13, 11), bool] */;
  (%672,)
}

def @func_9353() -> (Tensor[(10, 4, 12), float32],) {
  %673 = @func_2712() /* ty=Tensor[(10, 4, 12), float32] */;
  (%673,)
}

def @func_9032() -> Tensor[(10, 4, 12), float64] {
  %674 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %674.0
}

def @func_351(%var_312: Tensor[(10, 4, 13), int8], %var_313: Tensor[(10, 4, 13), int8], %var_328: Tensor[(3136), float32], %var_334: Tensor[(14, 14, 16), float64]) -> (Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) {
  %675 = cast(%var_313, dtype="bool") /* ty=Tensor[(10, 4, 13), bool] */;
  %676 = shape_of(%var_312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%var_312, dtype="bool") /* ty=Tensor[(10, 4, 13), bool] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %679 = cast(%var_328, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %680 = reshape(%679, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %681 = cast(%var_328, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %682 = reshape(%681, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %683 = @func_42(%682) /* ty=Tensor[(14, 14, 16), float64] */;
  %684 = cast(%var_334, dtype="uint8") /* ty=Tensor[(14, 14, 16), uint8] */;
  %685 = shape_of(%683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %686 = cast(%683, dtype="uint8") /* ty=Tensor[(14, 14, 16), uint8] */;
  %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %688 = minimum(%686, %687) /* ty=Tensor[(14, 14, 16), uint8] */;
  %689 = cast(%688, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
  %690 = reshape(%689, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %691 = less_equal(%677, %678) /* ty=Tensor[(10, 4, 13), bool] */;
  %692 = @func_42(%680) /* ty=Tensor[(14, 14, 16), float64] */;
  %693 = @func_42(%690) /* ty=Tensor[(14, 14, 16), float64] */;
  (%691, %692, %var_328, %688, %693)
}

def @func_937(%var_932: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %694 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %695 = %694.5;
  %696 = cast(%695, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %697 = cast(%var_932, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %698 = reshape(%697, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %699 = log10(%696) /* ty=Tensor[(10, 4, 12), float32] */;
  %700 = @func_42(%698) /* ty=Tensor[(14, 14, 16), float64] */;
  (%699, %700, %var_932)
}

def @func_10733() -> (Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) {
  %701 = @func_8270() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %702 = %701.0;
  %703 = @func_4921() /* ty=Tensor[(4, 1, 6), float32] */;
  (%702, %703)
}

def @func_2643() -> Tensor[(10, 4, 12), float32] {
  %704 = @func_2432() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %704.0
}

def @func_3396() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %705 = @func_2432() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %706 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %707 = %705.0;
  %708 = %706.0;
  %709 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  (%707, %708, %709)
}

def @func_9994(%var_9963: Tensor[(520), int8], %var_9975: uint16, %var_9976: Tensor[(297), uint16]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %710 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %711 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %712 = cast(%var_9963, dtype="int8") /* ty=Tensor[(520), int8] */;
  %713 = reshape(%712, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %714 = @func_985(%713) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) */;
  %715 = cast(%var_9975, dtype="uint16") /* ty=uint16 */;
  %716 = cast(%var_9976, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %717 = reshape(%715, newshape=[]) /* ty=uint16 */;
  %718 = reshape(%716, newshape=[297, 1]) /* ty=Tensor[(297, 1), uint16] */;
  %719 = @func_5310(%717, %718) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %720 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %721 = @func_3709() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %722 = %710.0;
  %723 = %711.0;
  %724 = %714.5;
  %725 = %719.5;
  %726 = %720.0;
  %727 = %721.1;
  (%722, %723, %724, %var_9963, %725, %var_9975, %var_9976, %726, %727)
}

def @func_3263() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %728 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %729 = %728.0;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %731 = reshape(%730, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %732 = @func_665(%731) /* ty=(Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */;
  %733 = %732.1;
  (%729, %733)
}

def @func_6597() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %734 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %735 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %736 = %734.0;
  %737 = %735.1;
  (%736, %737)
}

def @func_9267() -> Tensor[(3, 8, 8), float64] {
  %738 = cast(meta[relay.Constant][29] /* ty=Tensor[(3, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 8), float64] */;
  acos(%738) /* ty=Tensor[(3, 8, 8), float64] */
}

def @func_10477() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %739 = @func_9107() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %740 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %741 = %739.1;
  %742 = %740.4;
  (%741, %742)
}

def @func_12715(%var_12708: float64, %var_12709: Tensor[(4, 12, 8), float64]) -> Tensor[(4, 12, 8), float64] {
  %743 = cast(%var_12708, dtype="float64") /* ty=float64 */;
  %744 = cast(%var_12709, dtype="float64") /* ty=Tensor[(4, 12, 8), float64] */;
  mod(%743, %744) /* ty=Tensor[(4, 12, 8), float64] */
}

def @func_13193() -> Tensor[(10, 4, 12), float32] {
  %745 = @func_13092() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %745.1
}

def @func_4353() -> Tensor[(14, 14, 16), float64] {
  %746 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %746.0
}

def @func_13897(%var_13878: Tensor[(10, 2, 12), uint16]) -> (Tensor[(10, 2, 12), bool], Tensor[(10, 4, 12), float32]) {
  %747 = cast(meta[relay.Constant][30] /* ty=Tensor[(10, 2, 12), uint16] */, dtype="bool") /* ty=Tensor[(10, 2, 12), bool] */;
  %748 = shape_of(%var_13878, dtype="int32") /* ty=Tensor[(3), int32] */;
  %749 = cast(%var_13878, dtype="bool") /* ty=Tensor[(10, 2, 12), bool] */;
  %750 = dyn.reshape(%747, %748, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %751 = greater_equal(%749, %750) /* ty=Tensor[(10, 2, 12), bool] */;
  %752 = @func_9690() /* ty=Tensor[(10, 4, 12), float32] */;
  (%751, %752)
}

def @func_2758() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %753 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %754 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %755 = %753.1;
  %756 = %754.0;
  (%755, %756)
}

def @func_12532() -> Tensor[(10, 4, 12), float32] {
  %757 = @func_10041() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %757.0
}

def @func_7866(%var_7850: Tensor[(7, 13, 8), float64]) -> (Tensor[(7, 13, 8), float64],) {
  %758 = cast(%var_7850, dtype="float64") /* ty=Tensor[(7, 13, 8), float64] */;
  %759 = cos(%758) /* ty=Tensor[(7, 13, 8), float64] */;
  %760 = cast(%var_7850, dtype="float64") /* ty=Tensor[(7, 13, 8), float64] */;
  %761 = shape_of(%759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %762 = cast(%759, dtype="float64") /* ty=Tensor[(7, 13, 8), float64] */;
  %763 = dyn.reshape(%760, %761, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %764 = floor_divide(%762, %763) /* ty=Tensor[(7, 13, 8), float64] */;
  (%764,)
}

def @func_8459() -> Tensor[(10, 4, 12), float64] {
  %765 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %765.0
}

def @func_13728() -> Tensor[(10, 4, 12), float32] {
  %766 = @func_11104() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %766.0
}

def @func_10223(%var_10219: Tensor[(14, 6, 2), float64]) -> Tensor[(14, 6, 2), float64] {
  %767 = cast(%var_10219, dtype="float64") /* ty=Tensor[(14, 6, 2), float64] */;
  exp(%767) /* ty=Tensor[(14, 6, 2), float64] */
}

def @func_9223() -> Tensor[(10, 4, 12), float32] {
  @func_3223() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_9245() -> Tensor[(10, 4, 12), float32] {
  %768 = @func_9107() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %768.2
}

def @func_2519(%var_2468: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %769 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %770 = cast(%var_2468, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %771 = reshape(%770, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %772 = @func_937(%771) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %773 = %769.0;
  %774 = %772.0;
  %775 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %776 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  (%773, %774, %var_2468, %775, %776)
}

def @func_3725() -> Tensor[(10, 4, 12), float32] {
  @func_2643() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_10383() -> (Tensor[(10, 4, 12), float32], Tensor[(15, 13, 11), float64]) {
  %777 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %778 = @func_10217() /* ty=(Tensor[(15, 13, 11), bool],) */;
  %779 = %778.0;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
  %781 = %777.0;
  %782 = atan(%780) /* ty=Tensor[(15, 13, 11), float64] */;
  (%781, %782)
}

def @func_12489(%var_12471: int16) -> (Tensor[(2, 7, 1), bool],) {
  %783 = cast(%var_12471, dtype="bool") /* ty=bool */;
  %784 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 7, 1), int16] */, dtype="bool") /* ty=Tensor[(2, 7, 1), bool] */;
  %785 = greater_equal(%783, %784) /* ty=Tensor[(2, 7, 1), bool] */;
  (%785,)
}

def @func_11833() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  %786 = @func_2432() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %787 = @func_10615() /* ty=(Tensor[(176), float32],) */;
  %788 = %786.0;
  %789 = %787.0;
  (%788, %789)
}

def @func_1978() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) {
  %790 = @func_1693() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) */;
  %791 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %792 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %793 = cast(meta[relay.Constant][32] /* ty=Tensor[(4, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
  %794 = cosh(%793) /* ty=Tensor[(4, 1, 6), float64] */;
  %795 = cast(%794, dtype="float32") /* ty=Tensor[(4, 1, 6), float32] */;
  %796 = %790.1;
  %797 = %791.0;
  %798 = %792.0;
  %799 = sinh(%795) /* ty=Tensor[(4, 1, 6), float32] */;
  (%796, %797, %798, %799)
}

def @func_7757() -> (Tensor[(10, 4, 12), float64],) {
  %800 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %801 = %800.0;
  (%801,)
}

def @func_9646() -> Tensor[(10, 4, 12), float32] {
  @func_2712() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_5226(%var_5211: Tensor[(700), float64], %var_5217: Tensor[(294), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(14, 3, 7), bool], Tensor[(294), float32]) {
  %802 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %803 = cast(%var_5211, dtype="float64") /* ty=Tensor[(700), float64] */;
  %804 = cast(meta[relay.Constant][33] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %805 = reshape(%803, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %806 = reshape(%804, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %807 = @func_2631(%805, %806) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %808 = cast(%var_5217, dtype="float32") /* ty=Tensor[(294), float32] */;
  %809 = reshape(%808, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %810 = @func_2111(%809) /* ty=(Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) */;
  %811 = %802.0;
  %812 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %813 = %807.5;
  %814 = %810.3;
  (%811, %812, %813, %var_5211, meta[relay.Constant][33] /* ty=Tensor[(3136), float32] */, %814, %var_5217)
}

def @func_2389() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %815 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %816 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %817 = %815.0;
  %818 = %816.1;
  (%817, %818)
}

def @func_7301() -> Tensor[(10, 4, 12), float32] {
  @func_1577() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_11104() -> (Tensor[(10, 4, 12), float32],) {
  %819 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %820 = %819.0;
  (%820,)
}

def @func_13604(%var_13571: Tensor[(10, 15, 13), int32], %var_13572: Tensor[(10, 15, 13), int32]) -> (Tensor[(10, 15, 13), bool],) {
  %821 = cast(%var_13572, dtype="bool") /* ty=Tensor[(10, 15, 13), bool] */;
  %822 = shape_of(%var_13571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %823 = cast(%var_13571, dtype="bool") /* ty=Tensor[(10, 15, 13), bool] */;
  %824 = dyn.reshape(%821, %822, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %825 = not_equal(%823, %824) /* ty=Tensor[(10, 15, 13), bool] */;
  (%825,)
}

def @func_5158() -> Tensor[(10, 4, 12), float32] {
  %826 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %826.0
}

def @func_8852() -> (Tensor[(10, 4, 12), float64],) {
  %827 = @func_5668() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %828 = %827.0;
  (%828,)
}

def @func_11428() -> Tensor[(10, 4, 12), float32] {
  @func_9492() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_6415() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %829 = @func_2758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %830 = @func_3795() /* ty=(Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %831 = %829.1;
  %832 = %830.1;
  (%831, %832)
}

def @func_7895() -> (Tensor[(10, 4, 12), float64],) {
  %833 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %834 = %833.1;
  (%834,)
}

def @func_9887(%var_9853: Tensor[(49, 6), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(49, 6), float32], Tensor[(297), uint16]) {
  %835 = @func_8200() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %836 = @func_5668() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %837 = cast(%var_9853, dtype="float32") /* ty=Tensor[(49, 6), float32] */;
  %838 = reshape(%837, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %839 = @func_2111(%838) /* ty=(Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) */;
  %840 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %841 = %835.4;
  %842 = %836.0;
  %843 = %839.1;
  %844 = %840.3;
  (%841, %842, %843, %var_9853, %844)
}

def @func_4642() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %845 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %846 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
  %847 = %845.0;
  %848 = %846.1;
  (%847, %848)
}

def @func_9291(%var_9279: Tensor[(9, 2, 9), float64]) -> Tensor[(9, 2, 9), float64] {
  %849 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
  %850 = cast(%var_9279, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
  maximum(%849, %850) /* ty=Tensor[(9, 2, 9), float64] */
}

def @func_11033() -> (Tensor[(14, 14, 16), float64],) {
  %851 = @func_6218() /* ty=(Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64]) */;
  %852 = %851.1;
  (%852,)
}

def @func_13012() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %853 = @func_2389() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %854 = @func_3334() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %855 = @func_6923() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32]) */;
  %856 = @func_10275() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */;
  %857 = %853.1;
  %858 = %854.1;
  %859 = @func_2643() /* ty=Tensor[(10, 4, 12), float32] */;
  %860 = @func_9646() /* ty=Tensor[(10, 4, 12), float32] */;
  %861 = %855.1;
  %862 = %856.3;
  (%857, %858, %859, %860, %861, %862)
}

def @func_8595() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %863 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %864 = @func_3396() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %865 = %863.1;
  %866 = %864.2;
  (%865, %866)
}

def @func_12096(%var_12029: Tensor[(12, 10, 11), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), float32], Tensor[(12, 10, 11), float64], Tensor[(7, 13, 8), float64], Tensor[(728), float64]) {
  %867 = @func_8629() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %868 = cast(%var_12029, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
  %869 = log10(%868) /* ty=Tensor[(12, 10, 11), float64] */;
  %870 = cast(%869, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
  %871 = cast(meta[relay.Constant][35] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
  %872 = reshape(%871, newshape=[7, 13, 8]) /* ty=Tensor[(7, 13, 8), float64] */;
  %873 = @func_7866(%872) /* ty=(Tensor[(7, 13, 8), float64],) */;
  %874 = %867.0;
  %875 = @func_9710() /* ty=Tensor[(700), float64] */;
  %876 = @func_10245() /* ty=Tensor[(10, 4, 12), float32] */;
  %877 = cosh(%870) /* ty=Tensor[(12, 10, 11), float64] */;
  %878 = %873.0;
  (%874, %875, %876, %877, %878, meta[relay.Constant][35] /* ty=Tensor[(728), float64] */)
}

def @func_11283(%var_11278: Tensor[(5, 140), float64], %var_11279: Tensor[(3136), float32]) -> (Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(5, 140), float64], Tensor[(3136), float32]) {
  %879 = @func_7239() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) */;
  %880 = cast(%var_11278, dtype="float64") /* ty=Tensor[(5, 140), float64] */;
  %881 = cast(%var_11279, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %882 = reshape(%880, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %883 = reshape(%881, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %884 = @func_2631(%882, %883) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %885 = %879.4;
  %886 = @func_9646() /* ty=Tensor[(10, 4, 12), float32] */;
  %887 = %884.1;
  (%885, %886, %887, %var_11278, %var_11279)
}

def @func_6561() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %888 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %889 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
  %890 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %891 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %892 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %893 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %894 = %888.0;
  %895 = %889.0;
  %896 = %890.0;
  %897 = %891.0;
  %898 = %892.0;
  %899 = %893.0;
  (%894, %895, %896, %897, %898, %899)
}

def @func_2053() -> (Tensor[(10, 4, 12), float32],) {
  %900 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  (%900,)
}

def @func_9654() -> (Tensor[(10, 4, 12), float32],) {
  %901 = @func_9353() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %902 = %901.0;
  (%902,)
}

def @func_7522() -> (Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %903 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %904 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %905 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %906 = %903.0;
  %907 = %904.0;
  %908 = @func_2643() /* ty=Tensor[(10, 4, 12), float32] */;
  (%905, %906, %907, %908)
}

def @func_9107() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %909 = @func_4642() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %910 = @func_6561() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %911 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %912 = %910.5;
  %913 = cast(%912, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %914 = reshape(%913, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %915 = @func_8108(%914) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %916 = @func_8629() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %917 = %909.1;
  %918 = %911.0;
  %919 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %920 = %915.1;
  %921 = %916.0;
  (%917, %912, %918, %919, %920, %921)
}

def @func_3167() -> (Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) {
  %922 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %923 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %924 = cast(meta[relay.Constant][37] /* ty=Tensor[(297), uint16] */, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %925 = reshape(%923, newshape=[]) /* ty=uint16 */;
  %926 = reshape(%924, newshape=[9, 11, 3]) /* ty=Tensor[(9, 11, 3), uint16] */;
  %927 = @func_2023(%925, %926) /* ty=(Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) */;
  %928 = %922.1;
  %929 = %927.1;
  (%928, %929, meta[relay.Constant][36] /* ty=uint16 */, meta[relay.Constant][37] /* ty=Tensor[(297), uint16] */)
}

def @func_3073(%var_3062: Tensor[(16, 12, 10), float64], %var_3068: Tensor[(3136), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %930 = cast(%var_3062, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %931 = cast(%var_3068, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %932 = reshape(%931, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %933 = cosh(%930) /* ty=Tensor[(16, 12, 10), float64] */;
  %934 = @func_42(%932) /* ty=Tensor[(14, 14, 16), float64] */;
  (%933, %934, %var_3068)
}

def @func_10615() -> (Tensor[(176), float32],) {
  %935 = @func_8661() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %936 = %935.1;
  (%936,)
}

def @func_7239() -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) {
  %937 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
  %938 = cast(meta[relay.Constant][38] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %939 = %937.0;
  %940 = cast(%939, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
  %941 = reshape(%938, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %942 = reshape(%940, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %943 = @func_2631(%941, %942) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %944 = cast(%939, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
  %945 = cast(meta[relay.Constant][38] /* ty=Tensor[(700), float64] */, dtype="int16") /* ty=Tensor[(700), int16] */;
  %946 = cast(meta[relay.Constant][39] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %947 = reshape(%944, newshape=[2, 1568]) /* ty=Tensor[(2, 1568), float32] */;
  %948 = reshape(%945, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %949 = reshape(%946, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %950 = @func_4207(%947, %948, %949) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) */;
  %951 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %952 = %943.3;
  %953 = %950.1;
  %954 = %951.2;
  (%939, %952, meta[relay.Constant][38] /* ty=Tensor[(700), float64] */, %953, meta[relay.Constant][39] /* ty=Tensor[(1920), float64] */, %954)
}

def @func_9492() -> Tensor[(10, 4, 12), float32] {
  %955 = @func_4642() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %955.0
}

def @func_10543() -> Tensor[(10, 4, 12), float32] {
  @func_2712() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_3334() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %956 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %957 = %956.0;
  %958 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  (%957, %958)
}

def @func_8236() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float64]) {
  %959 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %960 = %959.2;
  %961 = cast(%960, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %962 = reshape(%961, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %963 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %964 = @func_3412(%962) /* ty=Tensor[(10, 4, 12), uint32] */;
  %965 = %963.0;
  (%960, %964, %965)
}

def @func_2432() -> (Tensor[(10, 4, 12), float32],) {
  %966 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %967 = %966.1;
  (%967,)
}

def @func_3571() -> (Tensor[(10, 4, 12), float32],) {
  %968 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %969 = %968.1;
  (%969,)
}

def @func_13631() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %970 = @func_7620() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %971 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %972 = %970.0;
  %973 = %971.1;
  (%972, %973)
}

def @func_4473(%var_4423: Tensor[(700), int16], %var_4449: Tensor[(3136), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) {
  %974 = cast(%var_4423, dtype="int16") /* ty=Tensor[(700), int16] */;
  %975 = reshape(%974, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %976 = cast(meta[relay.Constant][40] /* ty=Tensor[(5, 104), int8] */, dtype="int8") /* ty=Tensor[(5, 104), int8] */;
  %977 = cast(%var_4449, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %978 = reshape(%976, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %979 = reshape(%977, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %980 = @func_760(%978, %979) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
  %981 = @func_2758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %982 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %983 = @func_2986(%975) /* ty=Tensor[(14, 10, 5), int16] */;
  %984 = %980.4;
  %985 = %981.1;
  (%982, %983, %var_4423, %984, meta[relay.Constant][40] /* ty=Tensor[(5, 104), int8] */, %var_4449, %985)
}

def @func_4841(%var_4828: Tensor[(2, 8, 1), float64]) -> (Tensor[(2, 8, 5), float64],) {
  %986 = cast(%var_4828, dtype="float64") /* ty=Tensor[(2, 8, 1), float64] */;
  %987 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
  %988 = divide(%986, %987) /* ty=Tensor[(2, 8, 5), float64] */;
  (%988,)
}

def @func_6218() -> (Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64]) {
  %989 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %990 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
  %991 = %989.2;
  %992 = %990.0;
  (%991, %992)
}

def @func_6669() -> (uint16, Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float64]) {
  %993 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %994 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %995 = cast(meta[relay.Constant][42] /* ty=Tensor[(700), int16] */, dtype="int16") /* ty=Tensor[(700), int16] */;
  %996 = reshape(%995, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %997 = @func_1444() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %998 = %993.2;
  %999 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %1000 = %994.0;
  %1001 = @func_6492() /* ty=Tensor[(10, 4, 12), float32] */;
  %1002 = @func_2986(%996) /* ty=Tensor[(14, 10, 5), int16] */;
  %1003 = %997.0;
  (%998, %999, %1000, %1001, %1002, meta[relay.Constant][42] /* ty=Tensor[(700), int16] */, %1003)
}

def @func_3709() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1004 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1005 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %1006 = %1004.0;
  (%1005, %1006)
}

def @func_9690() -> Tensor[(10, 4, 12), float32] {
  @func_6492() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_4966(%var_4939: uint16) -> (Tensor[(10, 4, 12), float32], Tensor[(2, 5, 6), float32]) {
  %1007 = cast(%var_4939, dtype="uint16") /* ty=uint16 */;
  %1008 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 5, 6), uint16] */, dtype="uint16") /* ty=Tensor[(2, 5, 6), uint16] */;
  %1009 = left_shift(%1007, %1008) /* ty=Tensor[(2, 5, 6), uint16] */;
  %1010 = cast(%1009, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %1011 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %1012 = acosh(%1010) /* ty=Tensor[(2, 5, 6), float32] */;
  (%1011, %1012)
}

def @func_6122(%var_6113: Tensor[(7, 13, 15), float64]) -> (Tensor[(7, 13, 15), float64], Tensor[(10, 4, 12), float32]) {
  %1013 = cast(%var_6113, dtype="float64") /* ty=Tensor[(7, 13, 15), float64] */;
  %1014 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1015 = sinh(%1013) /* ty=Tensor[(7, 13, 15), float64] */;
  %1016 = %1014.0;
  (%1015, %1016)
}

def @func_7252(%var_7249: uint16) -> (Tensor[(10, 4, 12), float32], Tensor[(528), float32], uint16, Tensor[(297), uint16]) {
  %1017 = @func_6265() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1018 = cast(%var_7249, dtype="uint16") /* ty=uint16 */;
  %1019 = cast(meta[relay.Constant][44] /* ty=Tensor[(297), uint16] */, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %1020 = reshape(%1018, newshape=[]) /* ty=uint16 */;
  %1021 = reshape(%1019, newshape=[297, 1]) /* ty=Tensor[(297, 1), uint16] */;
  %1022 = @func_5310(%1020, %1021) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1023 = %1017.0;
  %1024 = %1022.2;
  (%1023, %1024, %var_7249, meta[relay.Constant][44] /* ty=Tensor[(297), uint16] */)
}

def @func_8531(%var_8499: Tensor[(16), float64], %var_8521: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(2, 8, 5), float64], Tensor[(16), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) {
  %1025 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1026 = cast(%var_8499, dtype="float64") /* ty=Tensor[(16), float64] */;
  %1027 = reshape(%1026, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), float64] */;
  %1028 = @func_4841(%1027) /* ty=(Tensor[(2, 8, 5), float64],) */;
  %1029 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1030 = cast(%var_8521, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1031 = reshape(%1030, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1032 = @func_937(%1031) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1033 = %1025.1;
  %1034 = %1028.0;
  %1035 = %1029.2;
  %1036 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %1037 = %1032.0;
  (%1033, %1034, %var_8499, %1035, %1036, %1037, %var_8521)
}

def @func_5814(%var_5799: Tensor[(700), int16], %var_5800: Tensor[(1920), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), uint8], Tensor[(3136), float32], Tensor[(700), int16], Tensor[(1920), float64], Tensor[(10, 4, 12), float32]) {
  %1038 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1039 = @func_3795() /* ty=(Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1040 = @func_5731() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1041 = cast(meta[relay.Constant][45] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1042 = cast(%var_5799, dtype="int16") /* ty=Tensor[(700), int16] */;
  %1043 = cast(%var_5800, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1044 = reshape(%1041, newshape=[2, 1568]) /* ty=Tensor[(2, 1568), float32] */;
  %1045 = reshape(%1042, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %1046 = reshape(%1043, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %1047 = @func_4207(%1044, %1045, %1046) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) */;
  %1048 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1049 = %1038.0;
  %1050 = %1039.2;
  %1051 = %1040.1;
  %1052 = %1047.2;
  %1053 = %1048.0;
  (%1049, %1050, %1051, %1052, meta[relay.Constant][45] /* ty=Tensor[(3136), float32] */, %var_5799, %var_5800, %1053)
}

def @func_4269() -> (Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) {
  %1054 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1055 = %1054.3;
  %1056 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1055, %1056)
}

def @func_11346() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1057 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %1058 = @func_9359() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1059 = %1057.0;
  %1060 = %1058.0;
  (%1059, %1060)
}

def @func_3500(%var_3483: Tensor[(1274), uint8]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1274), uint8]) {
  %1061 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1062 = cast(%var_3483, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %1063 = reshape(%1062, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %1064 = %1061.0;
  %1065 = @func_2137(%1063) /* ty=Tensor[(14, 13, 7), uint8] */;
  (%1064, %1065, %var_3483)
}

def @func_10829() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1066 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
  %1067 = @func_6669() /* ty=(uint16, Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float64]) */;
  %1068 = %1066.0;
  %1069 = %1067.2;
  (%1068, %1069)
}

def @func_4733() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) {
  %1070 = @func_4269() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
  %1071 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1072 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1073 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 104), int8] */, dtype="int8") /* ty=Tensor[(5, 104), int8] */;
  %1074 = cast(meta[relay.Constant][46] /* ty=Tensor[(5, 104), int8] */, dtype="int8") /* ty=Tensor[(5, 104), int8] */;
  %1075 = cast(meta[relay.Constant][47] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1076 = cast(meta[relay.Constant][47] /* ty=Tensor[(3136), float32] */, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %1077 = reshape(%1073, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %1078 = reshape(%1074, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %1079 = reshape(%1075, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1080 = reshape(%1076, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float64] */;
  %1081 = @func_351(%1077, %1078, %1079, %1080) /* ty=(Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) */;
  %1082 = cast(meta[relay.Constant][48] /* ty=Tensor[(975), uint8] */, dtype="uint8") /* ty=Tensor[(975), uint8] */;
  %1083 = cast(meta[relay.Constant][48] /* ty=Tensor[(975), uint8] */, dtype="uint8") /* ty=Tensor[(975), uint8] */;
  %1084 = reshape(%1082, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), uint8] */;
  %1085 = reshape(%1083, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), uint8] */;
  %1086 = @func_3977(%1084, %1085) /* ty=(Tensor[(15, 13, 5), uint8], Tensor[(12, 5, 5), float32]) */;
  %1087 = %1070.1;
  %1088 = %1071.0;
  %1089 = %1072.0;
  %1090 = %1081.3;
  %1091 = %1086.1;
  (%1087, %1088, %1089, %1090, meta[relay.Constant][46] /* ty=Tensor[(5, 104), int8] */, meta[relay.Constant][47] /* ty=Tensor[(3136), float32] */, %1091, meta[relay.Constant][48] /* ty=Tensor[(975), uint8] */)
}

def @func_11703() -> Tensor[(10, 4, 12), float32] {
  @func_3553() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_6447() -> Tensor[(10, 4, 12), float32] {
  %1092 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1092.1
}

def @func_4978(%var_4971: Tensor[(6, 8, 5), float64]) -> (Tensor[(6, 8, 5), float64],) {
  %1093 = cast(%var_4971, dtype="float64") /* ty=Tensor[(6, 8, 5), float64] */;
  %1094 = atanh(%1093) /* ty=Tensor[(6, 8, 5), float64] */;
  (%1094,)
}

def @func_3692(%var_3642: Tensor[(176), uint32]) -> (Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) {
  %1095 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1096 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %1097 = %1096.1;
  %1098 = cast(%var_3642, dtype="bool") /* ty=Tensor[(176), bool] */;
  %1099 = shape_of(%1097, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1100 = cast(%1097, dtype="bool") /* ty=Tensor[(176), bool] */;
  %1101 = dyn.reshape(%1098, %1099, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1102 = %1095.1;
  %1103 = equal(%1100, %1101) /* ty=Tensor[(176), bool] */;
  %1104 = @func_3223() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1102, %1103, %1104)
}

def @func_3535(%var_3523: Tensor[(11, 8, 14), int32], %var_3524: Tensor[(11, 8, 14), int32]) -> (Tensor[(11, 8, 14), bool],) {
  %1105 = cast(%var_3524, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
  %1106 = shape_of(%var_3523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1107 = cast(%var_3523, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
  %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1109 = less(%1107, %1108) /* ty=Tensor[(11, 8, 14), bool] */;
  (%1109,)
}

def @func_6737() -> (Tensor[(10, 4, 12), float32],) {
  %1110 = @func_2712() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1110,)
}

def @func_2023(%var_1980: uint16, %var_1981: Tensor[(9, 11, 3), uint16]) -> (Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) {
  %1111 = cast(%var_1980, dtype="uint16") /* ty=uint16 */;
  %1112 = cast(%var_1981, dtype="uint16") /* ty=Tensor[(9, 11, 3), uint16] */;
  %1113 = cast(meta[relay.Constant][49] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %1114 = cast(meta[relay.Constant][49] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %1115 = reshape(%1113, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %1116 = reshape(%1114, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %1117 = @func_1339(%1115, %1116) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) */;
  %1118 = %1117.0;
  %1119 = cast(%var_1980, dtype="uint16") /* ty=uint16 */;
  %1120 = cast(%1118, dtype="uint16") /* ty=Tensor[(4, 4, 11), uint16] */;
  %1121 = subtract(%1111, %1112) /* ty=Tensor[(9, 11, 3), uint16] */;
  %1122 = maximum(%1119, %1120) /* ty=Tensor[(4, 4, 11), uint16] */;
  (%1121, meta[relay.Constant][49] /* ty=Tensor[(176), uint32] */, %1122)
}

def @func_1577() -> Tensor[(10, 4, 12), float32] {
  @func_680() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_909() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1123 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1124 = cast(meta[relay.Constant][50] /* ty=Tensor[(520), int8] */, dtype="int8") /* ty=Tensor[(520), int8] */;
  %1125 = cast(meta[relay.Constant][51] /* ty=Tensor[(3136, 1), float32] */, dtype="float32") /* ty=Tensor[(3136, 1), float32] */;
  %1126 = reshape(%1124, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %1127 = reshape(%1125, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1128 = @func_760(%1126, %1127) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
  %1129 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %1130 = cast(%1129, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %1131 = cast(%1129, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %1132 = %1123.0;
  %1133 = %1128.7;
  %1134 = erf(%1130) /* ty=Tensor[(10, 4, 12), float32] */;
  %1135 = rsqrt(%1131) /* ty=Tensor[(10, 4, 12), float32] */;
  %1136 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1132, %1133, meta[relay.Constant][50] /* ty=Tensor[(520), int8] */, meta[relay.Constant][51] /* ty=Tensor[(3136, 1), float32] */, %1134, %1135, %1136)
}

def @func_10684() -> (Tensor[(10, 4, 12), float32],) {
  %1137 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1137,)
}

def @func_13046() -> (Tensor[(10, 4, 12), float32],) {
  %1138 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1139 = %1138.0;
  (%1139,)
}

def @func_1204() -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %1140 = cast(meta[relay.Constant][52] /* ty=Tensor[(520), int8] */, dtype="int8") /* ty=Tensor[(520), int8] */;
  %1141 = reshape(%1140, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %1142 = @func_985(%1141) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) */;
  %1143 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1144 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1145 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %1146 = %1142.2;
  %1147 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %1148 = %1143.0;
  %1149 = %1144.0;
  (%1145, %1146, meta[relay.Constant][52] /* ty=Tensor[(520), int8] */, %1147, %1148, %1149)
}

def @func_9359() -> (Tensor[(10, 4, 12), float32],) {
  %1150 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1150,)
}

def @func_5112() -> (Tensor[(14, 14, 16), float64],) {
  %1151 = @func_4353() /* ty=Tensor[(14, 14, 16), float64] */;
  (%1151,)
}

def @func_9118() -> Tensor[(10, 4, 12), float32] {
  %1152 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1152.0
}

def @func_1025() -> Tensor[(10, 4, 12), float32] {
  %1153 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1153.0
}

def @func_1266() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %1154 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1155 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1156 = %1154.0;
  %1157 = %1155.0;
  (%1156, %1157)
}

def @func_680() -> Tensor[(10, 4, 12), float32] {
  %1158 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1158.0
}

def @func_10336() -> (Tensor[(10, 4, 12), float32],) {
  %1159 = @func_9353() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1160 = %1159.0;
  (%1160,)
}

def @func_13863(%var_13826: Tensor[(700), int16]) -> (Tensor[(10, 4, 12), float32], Tensor[(432, 1), float64], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 224), float32]) {
  %1161 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1162 = @func_13046() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1163 = @func_9670() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1164 = cast(meta[relay.Constant][53] /* ty=Tensor[(432, 1), float64] */, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
  %1165 = cast(%var_13826, dtype="int16") /* ty=Tensor[(700), int16] */;
  %1166 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 224), float32] */, dtype="float32") /* ty=Tensor[(14, 224), float32] */;
  %1167 = reshape(%1164, newshape=[16, 3, 9]) /* ty=Tensor[(16, 3, 9), float64] */;
  %1168 = reshape(%1165, newshape=[1, 700]) /* ty=Tensor[(1, 700), int16] */;
  %1169 = reshape(%1166, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1170 = @func_6177(%1167, %1168, %1169) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(3136), float32], Tensor[(16, 3, 9), float64], Tensor[(4, 700), uint8]) */;
  %1171 = %1170.1;
  %1172 = cast(%1171, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1173 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(14, 224), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1174 = cast(meta[relay.Constant][54] /* ty=Tensor[(14, 224), float32] */, dtype="float32") /* ty=Tensor[(14, 224), float32] */;
  %1175 = dyn.reshape(%1172, %1173, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1176 = %1161.0;
  %1177 = %1162.0;
  %1178 = %1163.0;
  %1179 = minimum(%1174, %1175) /* ty=Tensor[(14, 224), float32] */;
  (%1176, meta[relay.Constant][53] /* ty=Tensor[(432, 1), float64] */, %var_13826, %1177, %1178, %1179)
}

def @func_2712() -> Tensor[(10, 4, 12), float32] {
  %1180 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1180.1
}

def @func_12904(%var_12895: Tensor[(12, 14, 12), float64]) -> Tensor[(12, 14, 12), float32] {
  %1181 = @func_10105() /* ty=Tensor[(12, 14, 12), float64] */;
  %1182 = cast(%var_12895, dtype="float32") /* ty=Tensor[(12, 14, 12), float32] */;
  %1183 = shape_of(%1181, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1184 = cast(%1181, dtype="float32") /* ty=Tensor[(12, 14, 12), float32] */;
  %1185 = dyn.reshape(%1182, %1183, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%1184, %1185) /* ty=Tensor[(12, 14, 12), float32] */
}

def @func_10965() -> Tensor[(10, 4, 12), float32] {
  %1186 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1186.0
}

def @func_11617(%var_11551: Tensor[(15, 6, 15), int64], %var_11552: Tensor[(15, 6, 15), int64], %var_11589: Tensor[(700), int16], %var_11590: Tensor[(2, 960), float64]) -> (Tensor[(15, 6, 15), int64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(700), int16], Tensor[(2, 960), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  %1187 = cast(%var_11552, dtype="int64") /* ty=Tensor[(15, 6, 15), int64] */;
  %1188 = shape_of(%var_11551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(%var_11551, dtype="int64") /* ty=Tensor[(15, 6, 15), int64] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1191 = cast(%var_11589, dtype="int16") /* ty=Tensor[(700), int16] */;
  %1192 = cast(%var_11590, dtype="float64") /* ty=Tensor[(2, 960), float64] */;
  %1193 = reshape(%1191, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %1194 = reshape(%1192, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %1195 = @func_5814(%1193, %1194) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), uint8], Tensor[(3136), float32], Tensor[(700), int16], Tensor[(1920), float64], Tensor[(10, 4, 12), float32]) */;
  %1196 = cast(%var_11590, dtype="float32") /* ty=Tensor[(2, 960), float32] */;
  %1197 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %1198 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1199 = subtract(%1189, %1190) /* ty=Tensor[(15, 6, 15), int64] */;
  %1200 = @func_10547() /* ty=Tensor[(10, 4, 12), float32] */;
  %1201 = %1195.0;
  %1202 = sin(%1196) /* ty=Tensor[(2, 960), float32] */;
  %1203 = @func_6447() /* ty=Tensor[(10, 4, 12), float32] */;
  %1204 = %1197.0;
  %1205 = %1198.1;
  (%1199, %1200, %1201, %var_11589, %1202, %1203, %1204, %1205)
}

def @func_4207(%var_4144: Tensor[(2, 1568), float32], %var_4180: Tensor[(700), int16], %var_4189: Tensor[(1920), float64]) -> (Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) {
  %1206 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 1568), float32] */, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1207 = reshape(%1206, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %1208 = cast(%var_4144, dtype="uint8") /* ty=Tensor[(2, 1568), uint8] */;
  %1209 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(2, 1568), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1210 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 1568), float32] */, dtype="uint8") /* ty=Tensor[(2, 1568), uint8] */;
  %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1212 = cast(%var_4180, dtype="int16") /* ty=Tensor[(700), int16] */;
  %1213 = reshape(%1212, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %1214 = cast(%var_4189, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1215 = cast(meta[relay.Constant][55] /* ty=Tensor[(2, 1568), float32] */, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1216 = reshape(%1214, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float64] */;
  %1217 = reshape(%1215, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1218 = @func_3073(%1216, %1217) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1219 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1220 = cast(%var_4144, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1221 = sqrt(%1220) /* ty=Tensor[(2, 1568), float32] */;
  %1222 = cast(%1221, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1223 = exp(%1222) /* ty=Tensor[(2, 1568), float32] */;
  %1224 = cast(%1223, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1225 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %1226 = @func_42(%1207) /* ty=Tensor[(14, 14, 16), float64] */;
  %1227 = bitwise_and(%1210, %1211) /* ty=Tensor[(2, 1568), uint8] */;
  %1228 = @func_2986(%1213) /* ty=Tensor[(14, 10, 5), int16] */;
  %1229 = %1218.2;
  %1230 = %1219.0;
  %1231 = sin(%1224) /* ty=Tensor[(2, 1568), float32] */;
  (%1225, %1226, %1227, %1228, %var_4180, %1229, %var_4189, %1230, %1231)
}

def @func_12814(%var_12809: Tensor[(10, 6, 12), float32]) -> Tensor[(10, 6, 12), float32] {
  %1232 = cast(%var_12809, dtype="float32") /* ty=Tensor[(10, 6, 12), float32] */;
  atan(%1232) /* ty=Tensor[(10, 6, 12), float32] */
}

def @func_2137(%var_2122: Tensor[(14, 13, 7), uint8]) -> Tensor[(14, 13, 7), uint8] {
  %1233 = cast(%var_2122, dtype="uint8") /* ty=Tensor[(14, 13, 7), uint8] */;
  %1234 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(14, 13, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1235 = cast(meta[relay.Constant][56] /* ty=Tensor[(14, 13, 7), uint8] */, dtype="uint8") /* ty=Tensor[(14, 13, 7), uint8] */;
  %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  subtract(%1235, %1236) /* ty=Tensor[(14, 13, 7), uint8] */
}

def @func_2963() -> (Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %1237 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1238 = cast(meta[relay.Constant][57] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1239 = reshape(%1238, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1240 = @func_937(%1239) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1241 = %1237.0;
  %1242 = %1240.1;
  (%1241, %1242, meta[relay.Constant][57] /* ty=Tensor[(3136), float32] */)
}

def @func_5071() -> (Tensor[(10, 4, 12), float32],) {
  %1243 = @func_3334() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1244 = %1243.1;
  (%1244,)
}

def @func_9481() -> (Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %1245 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %1246 = @func_7895() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1247 = %1245.1;
  %1248 = @func_9032() /* ty=Tensor[(10, 4, 12), float64] */;
  %1249 = %1246.0;
  (%1247, %1248, %1249)
}

def @func_12521() -> (Tensor[(10, 4, 12), float32],) {
  %1250 = @func_11104() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1251 = %1250.0;
  (%1251,)
}

def @func_12569() -> (Tensor[(10, 4, 12), float32],) {
  %1252 = @func_3427() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1252,)
}

def @func_2866(%var_2821: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 10, 7), float64], Tensor[(700), float64], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %1253 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1254 = cast(meta[relay.Constant][58] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %1255 = cast(%var_2821, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1256 = reshape(%1254, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %1257 = reshape(%1255, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1258 = @func_2631(%1256, %1257) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1259 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1260 = @func_2389() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %1261 = cast(%var_2821, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1262 = cast(%var_2821, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1263 = reshape(%1262, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1264 = @func_937(%1263) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1265 = %1253.1;
  %1266 = %1258.0;
  %1267 = %1259.0;
  %1268 = %1260.0;
  %1269 = acosh(%1261) /* ty=Tensor[(3136), float32] */;
  %1270 = %1264.2;
  (%1265, %1266, meta[relay.Constant][58] /* ty=Tensor[(700), float64] */, %1267, %1268, %1269, %1270)
}

def @func_2912() -> (Tensor[(10, 4, 12), float32],) {
  %1271 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1272 = %1271.0;
  (%1272,)
}

def @func_7986() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %1273 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1274 = @func_6561() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %1275 = %1273.0;
  %1276 = %1274.4;
  (%1275, %1276)
}

def @func_1109() -> (Tensor[(10, 4, 12), float64],) {
  %1277 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1278 = %1277.0;
  %1279 = cast(%1278, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %1280 = log(%1279) /* ty=Tensor[(10, 4, 12), float32] */;
  %1281 = cast(%1280, dtype="float64") /* ty=Tensor[(10, 4, 12), float64] */;
  %1282 = sinh(%1281) /* ty=Tensor[(10, 4, 12), float64] */;
  (%1282,)
}

def @func_10105() -> Tensor[(12, 14, 12), float64] {
  %1283 = cast(meta[relay.Constant][59] /* ty=Tensor[(12, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 12), float64] */;
  rsqrt(%1283) /* ty=Tensor[(12, 14, 12), float64] */
}

def @func_6846() -> (Tensor[(176), float32],) {
  %1284 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %1285 = %1284.1;
  (%1285,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12183() -> Tensor[(10, 4, 12), float64] {
  %1 = fn () -> Tensor[(10, 4, 12), float64] {
    %0 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
    %0.1
  };
  %1() /* ty=Tensor[(10, 4, 12), float64] */
}

def @main() -> (Tensor[(1, 11, 15), float64],) {
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(1, 11, 15), float64] */, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %3 = acosh(%2) /* ty=Tensor[(1, 11, 15), float64] */;
  %4 = cast(%3, dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %5 = atan(%4) /* ty=Tensor[(1, 11, 15), float64] */;
  (%5,)
}

def @func_12394() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %6 = @func_10077() /* ty=Tensor[(10, 4, 12), float32] */;
  %7 = @func_8904() /* ty=Tensor[(10, 4, 12), float32] */;
  (%6, %7)
}

def @func_2111(%var_2092: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) {
  %8 = cast(%var_2092, dtype="float32") /* ty=Tensor[(14, 3, 7), float32] */;
  %9 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 3, 7), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 7), float32] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %12 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %13 = cast(%var_2092, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %14 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(14, 3, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 3, 7), float32] */, dtype="bool") /* ty=Tensor[(14, 3, 7), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %17 = floor_mod(%10, %11) /* ty=Tensor[(14, 3, 7), float32] */;
  %18 = %12.0;
  %19 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %20 = logical_or(%15, %16) /* ty=Tensor[(14, 3, 7), bool] */;
  (%17, %18, %19, %20)
}

def @func_1378() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %24 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %21 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
    %22 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
    %23 = %21.1;
    (%22, %23)
  };
  %24() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_6847() -> (Tensor[(176), float32],) {
  %27 = fn () -> (Tensor[(176), float32],) {
    %25 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
    %26 = %25.1;
    (%26,)
  };
  %27() /* ty=(Tensor[(176), float32],) */
}

def @func_10077() -> Tensor[(10, 4, 12), float32] {
  %28 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %28.0
}

def @func_910() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %43 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %29 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(520), int8] */, dtype="int8") /* ty=Tensor[(520), int8] */;
    %31 = cast(meta[relay.Constant][3] /* ty=Tensor[(3136, 1), float32] */, dtype="float32") /* ty=Tensor[(3136, 1), float32] */;
    %32 = reshape(%30, newshape=[520]) /* ty=Tensor[(520), int8] */;
    %33 = reshape(%31, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %34 = @func_760(%32, %33) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
    %35 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
    %36 = cast(%35, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
    %37 = cast(%35, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
    %38 = %29.0;
    %39 = %34.7;
    %40 = erf(%36) /* ty=Tensor[(10, 4, 12), float32] */;
    %41 = rsqrt(%37) /* ty=Tensor[(10, 4, 12), float32] */;
    %42 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
    (%38, %39, meta[relay.Constant][2] /* ty=Tensor[(520), int8] */, meta[relay.Constant][3] /* ty=Tensor[(3136, 1), float32] */, %40, %41, %42)
  };
  %43() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_13434() -> (Tensor[(10, 4, 12), float32], Tensor[(6, 7, 5), float32], Tensor[(210), float32]) {
  %44 = @func_5731() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %45 = cast(meta[relay.Constant][4] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %46 = reshape(%45, newshape=[6, 7, 5]) /* ty=Tensor[(6, 7, 5), float32] */;
  %47 = @func_10645(%46) /* ty=(Tensor[(6, 7, 5), float32],) */;
  %48 = %44.0;
  %49 = %47.0;
  (%48, %49, meta[relay.Constant][4] /* ty=Tensor[(210), float32] */)
}

def @func_9648() -> Tensor[(10, 4, 12), float32] {
  @func_9646() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_10041() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %50 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %51 = @func_7757() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %52 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %53 = %50.0;
  %54 = %51.0;
  %55 = %52.0;
  (%53, %54, %55)
}

def @func_2788() -> (Tensor[(10, 4, 12), float32],) {
  %56 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %57 = %56.0;
  (%57,)
}

def @func_2137(%var_2122: Tensor[(14, 13, 7), uint8]) -> Tensor[(14, 13, 7), uint8] {
  %58 = cast(%var_2122, dtype="uint8") /* ty=Tensor[(14, 13, 7), uint8] */;
  %59 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(14, 13, 7), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(14, 13, 7), uint8] */, dtype="uint8") /* ty=Tensor[(14, 13, 7), uint8] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  subtract(%60, %61) /* ty=Tensor[(14, 13, 7), uint8] */
}

def @func_1903() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %62 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %63 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  (%62, %63)
}

def @func_2248() -> (Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */
}

def @func_10090() -> Tensor[(10, 4, 12), float32] {
  %64 = @func_7986() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %64.0
}

def @func_6671() -> (uint16, Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float64]) {
  @func_6669() /* ty=(uint16, Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float64]) */
}

def @func_5401(%var_5399: Tensor[(16, 6, 10), int64], %var_5400: Tensor[(16, 6, 10), int64]) -> (Tensor[(16, 6, 10), int64], Tensor[(16, 6, 10), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32]) {
  %76 = fn (%var_5322: Tensor[(16, 6, 10), int64], %var_5323: Tensor[(16, 6, 10), int64]) -> (Tensor[(16, 6, 10), int64], Tensor[(16, 6, 10), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32]) {
    %65 = cast(%var_5323, dtype="int64") /* ty=Tensor[(16, 6, 10), int64] */;
    %66 = shape_of(%var_5322, dtype="int32") /* ty=Tensor[(3), int32] */;
    %67 = cast(%var_5322, dtype="int64") /* ty=Tensor[(16, 6, 10), int64] */;
    %68 = dyn.reshape(%65, %66, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %69 = cast(%var_5323, dtype="float64") /* ty=Tensor[(16, 6, 10), float64] */;
    %70 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
    %71 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %72 = maximum(%67, %68) /* ty=Tensor[(16, 6, 10), int64] */;
    %73 = cos(%69) /* ty=Tensor[(16, 6, 10), float64] */;
    %74 = %70.0;
    %75 = %71.0;
    (%72, %73, %74, %75)
  };
  %76(%var_5399, %var_5400) /* ty=(Tensor[(16, 6, 10), int64], Tensor[(16, 6, 10), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32]) */
}

def @func_9654() -> (Tensor[(10, 4, 12), float32],) {
  %77 = @func_9353() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %78 = %77.0;
  (%78,)
}

def @func_7152(%var_7113: Tensor[(297), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), float64], Tensor[(14, 10, 5), int16], Tensor[(10, 4, 12), float32]) {
  %79 = @func_3709() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %80 = %79.1;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %82 = cast(meta[relay.Constant][6] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %83 = cast(%var_7113, dtype="float64") /* ty=Tensor[(297), float64] */;
  %84 = reshape(%81, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %85 = reshape(%82, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %86 = reshape(%83, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %87 = @func_6067(%84, %85, %86) /* ty=(Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) */;
  %88 = %87.4;
  %89 = cast(%88, dtype="int16") /* ty=Tensor[(700), int16] */;
  %90 = reshape(%89, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %91 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %92 = @func_2986(%90) /* ty=Tensor[(14, 10, 5), int16] */;
  %93 = %91.0;
  (%80, %88, meta[relay.Constant][6] /* ty=Tensor[(3136), float32] */, %var_7113, %92, %93)
}

def @func_4922() -> Tensor[(4, 1, 6), float32] {
  %95 = fn () -> Tensor[(4, 1, 6), float32] {
    %94 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
    %94.3
  };
  %95() /* ty=Tensor[(4, 1, 6), float32] */
}

def @func_7622() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_7620() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_7523() -> (Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %102 = fn () -> (Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %96 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %97 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %98 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
    %99 = %96.0;
    %100 = %97.0;
    %101 = @func_2643() /* ty=Tensor[(10, 4, 12), float32] */;
    (%98, %99, %100, %101)
  };
  %102() /* ty=(Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_2988(%var_2987: Tensor[(14, 10, 5), int16]) -> Tensor[(14, 10, 5), int16] {
  %107 = fn (%var_2976: Tensor[(14, 10, 5), int16]) -> Tensor[(14, 10, 5), int16] {
    %103 = cast(meta[relay.Constant][7] /* ty=Tensor[(14, 10, 5), int16] */, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
    %104 = shape_of(%var_2976, dtype="int32") /* ty=Tensor[(3), int32] */;
    %105 = cast(%var_2976, dtype="int16") /* ty=Tensor[(14, 10, 5), int16] */;
    %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    subtract(%105, %106) /* ty=Tensor[(14, 10, 5), int16] */
  };
  %107(%var_2987) /* ty=Tensor[(14, 10, 5), int16] */
}

def @func_5505() -> (Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32]) {
  %108 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %109 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %110 = %108.0;
  (%109, %110)
}

def @func_8906() -> Tensor[(10, 4, 12), float32] {
  @func_8904() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_9583() -> (Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), bool]) {
  %111 = @func_7239() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) */;
  %112 = @func_7239() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) */;
  %113 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %114 = %111.5;
  %115 = @func_8904() /* ty=Tensor[(10, 4, 12), float32] */;
  %116 = %112.2;
  %117 = %113.2;
  (%114, %115, %116, %117)
}

def @func_3224() -> Tensor[(10, 4, 12), float32] {
  %119 = fn () -> Tensor[(10, 4, 12), float32] {
    %118 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
    %118.2
  };
  %119() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_8237() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float64]) {
  %127 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float64]) {
    %120 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
    %121 = %120.2;
    %122 = cast(%121, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
    %123 = reshape(%122, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
    %124 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %125 = @func_3412(%123) /* ty=Tensor[(10, 4, 12), uint32] */;
    %126 = %124.0;
    (%121, %125, %126)
  };
  %127() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float64]) */
}

def @func_12510(%var_12508: Tensor[(1274), uint8]) -> (Tensor[(10, 4, 12), float32], Tensor[(12, 1, 4), float32], float32, Tensor[(48), float32], Tensor[(1274), uint8]) {
  @func_12507(%var_12508) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(12, 1, 4), float32], float32, Tensor[(48), float32], Tensor[(1274), uint8]) */
}

def @func_2760() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_2758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_2912() -> (Tensor[(10, 4, 12), float32],) {
  %128 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %129 = %128.0;
  (%129,)
}

def @func_4354() -> Tensor[(14, 14, 16), float64] {
  %131 = fn () -> Tensor[(14, 14, 16), float64] {
    %130 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
    %130.0
  };
  %131() /* ty=Tensor[(14, 14, 16), float64] */
}

def @func_7377(%var_7365: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(297), float64]) {
  %132 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %133 = %132.0;
  %134 = cast(%133, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %135 = reshape(%134, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %136 = @func_3427() /* ty=Tensor[(10, 4, 12), float32] */;
  %137 = cast(%136, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %138 = cast(%var_7365, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %139 = cast(meta[relay.Constant][8] /* ty=Tensor[(297), float64] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %140 = reshape(%137, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %141 = reshape(%138, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %142 = reshape(%139, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %143 = @func_6067(%140, %141, %142) /* ty=(Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) */;
  %144 = @func_3412(%135) /* ty=Tensor[(10, 4, 12), uint32] */;
  %145 = @func_7301() /* ty=Tensor[(10, 4, 12), float32] */;
  %146 = %143.9;
  (%136, %133, %144, %145, %146, %var_7365, meta[relay.Constant][8] /* ty=Tensor[(297), float64] */)
}

def @func_9223() -> Tensor[(10, 4, 12), float32] {
  @func_3223() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_3412(%var_3405: Tensor[(10, 4, 12), float32]) -> Tensor[(10, 4, 12), uint32] {
  %147 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %148 = %147.0;
  %149 = cast(%var_3405, dtype="uint32") /* ty=Tensor[(10, 4, 12), uint32] */;
  %150 = shape_of(%148, dtype="int32") /* ty=Tensor[(3), int32] */;
  %151 = cast(%148, dtype="uint32") /* ty=Tensor[(10, 4, 12), uint32] */;
  %152 = dyn.reshape(%149, %150, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  multiply(%151, %152) /* ty=Tensor[(10, 4, 12), uint32] */
}

def @func_13608(%var_13606: Tensor[(10, 15, 13), int32], %var_13607: Tensor[(10, 15, 13), int32]) -> (Tensor[(10, 15, 13), bool],) {
  @func_13604(%var_13606, %var_13607) /* ty=(Tensor[(10, 15, 13), bool],) */
}

def @func_1026() -> Tensor[(10, 4, 12), float32] {
  %154 = fn () -> Tensor[(10, 4, 12), float32] {
    %153 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %153.0
  };
  %154() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_2391() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  @func_2389() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_9034() -> Tensor[(10, 4, 12), float64] {
  @func_9032() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_9246() -> Tensor[(10, 4, 12), float32] {
  %156 = fn () -> Tensor[(10, 4, 12), float32] {
    %155 = @func_9107() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %155.2
  };
  %156() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_9772(%var_9767: Tensor[(2, 16, 14), float32]) -> (Tensor[(2, 16, 14), float32],) {
  %157 = cast(%var_9767, dtype="float32") /* ty=Tensor[(2, 16, 14), float32] */;
  %158 = sinh(%157) /* ty=Tensor[(2, 16, 14), float32] */;
  (%158,)
}

def @func_10647(%var_10646: Tensor[(6, 7, 5), float32]) -> (Tensor[(6, 7, 5), float32],) {
  %161 = fn (%var_10637: Tensor[(6, 7, 5), float32]) -> (Tensor[(6, 7, 5), float32],) {
    %159 = cast(%var_10637, dtype="float32") /* ty=Tensor[(6, 7, 5), float32] */;
    %160 = sin(%159) /* ty=Tensor[(6, 7, 5), float32] */;
    (%160,)
  };
  %161(%var_10646) /* ty=(Tensor[(6, 7, 5), float32],) */
}

def @func_6561() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %162 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %163 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
  %164 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %165 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %166 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %167 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %168 = %162.0;
  %169 = %163.0;
  %170 = %164.0;
  %171 = %165.0;
  %172 = %166.0;
  %173 = %167.0;
  (%168, %169, %170, %171, %172, %173)
}

def @func_3797() -> (Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_3795() /* ty=(Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_12571() -> (Tensor[(10, 4, 12), float32],) {
  @func_12569() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_13167() -> Tensor[(10, 4, 12), float64] {
  %175 = fn () -> Tensor[(10, 4, 12), float64] {
    %174 = @func_5668() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %174.0
  };
  %175() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_8761() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %176 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %177 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %178 = %176.2;
  (%177, %178)
}

def @func_11703() -> Tensor[(10, 4, 12), float32] {
  @func_3553() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_10544() -> Tensor[(10, 4, 12), float32] {
  %179 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_2712() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %179() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_2519(%var_2468: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %180 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %181 = cast(%var_2468, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %182 = reshape(%181, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %183 = @func_937(%182) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %184 = %180.0;
  %185 = %183.0;
  %186 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %187 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  (%184, %185, %var_2468, %186, %187)
}

def @func_10616() -> (Tensor[(176), float32],) {
  %190 = fn () -> (Tensor[(176), float32],) {
    %188 = @func_8661() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %189 = %188.1;
    (%189,)
  };
  %190() /* ty=(Tensor[(176), float32],) */
}

def @func_4643() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %195 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %191 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %192 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
    %193 = %191.0;
    %194 = %192.1;
    (%193, %194)
  };
  %195() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_12904(%var_12895: Tensor[(12, 14, 12), float64]) -> Tensor[(12, 14, 12), float32] {
  %196 = @func_10105() /* ty=Tensor[(12, 14, 12), float64] */;
  %197 = cast(%var_12895, dtype="float32") /* ty=Tensor[(12, 14, 12), float32] */;
  %198 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %199 = cast(%196, dtype="float32") /* ty=Tensor[(12, 14, 12), float32] */;
  %200 = dyn.reshape(%197, %198, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  multiply(%199, %200) /* ty=Tensor[(12, 14, 12), float32] */
}

def @func_1110() -> (Tensor[(10, 4, 12), float64],) {
  %207 = fn () -> (Tensor[(10, 4, 12), float64],) {
    %201 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %202 = %201.0;
    %203 = cast(%202, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
    %204 = log(%203) /* ty=Tensor[(10, 4, 12), float32] */;
    %205 = cast(%204, dtype="float64") /* ty=Tensor[(10, 4, 12), float64] */;
    %206 = sinh(%205) /* ty=Tensor[(10, 4, 12), float64] */;
    (%206,)
  };
  %207() /* ty=(Tensor[(10, 4, 12), float64],) */
}

def @func_5440() -> Tensor[(10, 4, 12), float32] {
  %208 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_3725() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %208() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_2964() -> (Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %215 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
    %209 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %210 = cast(meta[relay.Constant][9] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %211 = reshape(%210, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %212 = @func_937(%211) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %213 = %209.0;
    %214 = %212.1;
    (%213, %214, meta[relay.Constant][9] /* ty=Tensor[(3136), float32] */)
  };
  %215() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */
}

def @func_3709() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %216 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %217 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %218 = %216.0;
  (%217, %218)
}

def @func_11348() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_11346() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_2325(%var_2255: Tensor[(8, 6, 11), float32], %var_2287: uint16, %var_2288: Tensor[(297), uint16]) -> (Tensor[(8, 6, 11), uint32], Tensor[(176), uint32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %219 = cast(%var_2255, dtype="float32") /* ty=Tensor[(8, 6, 11), float32] */;
  %220 = sinh(%219) /* ty=Tensor[(8, 6, 11), float32] */;
  %221 = cast(%220, dtype="uint32") /* ty=Tensor[(8, 6, 11), uint32] */;
  %222 = shape_of(%var_2255, dtype="int32") /* ty=Tensor[(3), int32] */;
  %223 = cast(%var_2255, dtype="uint32") /* ty=Tensor[(8, 6, 11), uint32] */;
  %224 = dyn.reshape(%221, %222, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %225 = cast(%var_2287, dtype="uint16") /* ty=uint16 */;
  %226 = cast(%var_2288, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %227 = reshape(%225, newshape=[]) /* ty=uint16 */;
  %228 = reshape(%226, newshape=[9, 11, 3]) /* ty=Tensor[(9, 11, 3), uint16] */;
  %229 = @func_2023(%227, %228) /* ty=(Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) */;
  %230 = right_shift(%223, %224) /* ty=Tensor[(8, 6, 11), uint32] */;
  %231 = %229.1;
  %232 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %233 = @func_1275() /* ty=Tensor[(10, 4, 12), float32] */;
  (%230, %231, %var_2287, %var_2288, %232, %233)
}

def @func_11012() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %234 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %235 = %234.0;
  %236 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  (%235, %236)
}

def @func_7155(%var_7153: Tensor[(297), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), float64], Tensor[(14, 10, 5), int16], Tensor[(10, 4, 12), float32]) {
  @func_7152(%var_7153) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), float64], Tensor[(14, 10, 5), int16], Tensor[(10, 4, 12), float32]) */
}

def @func_9887(%var_9853: Tensor[(49, 6), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(49, 6), float32], Tensor[(297), uint16]) {
  %237 = @func_8200() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %238 = @func_5668() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %239 = cast(%var_9853, dtype="float32") /* ty=Tensor[(49, 6), float32] */;
  %240 = reshape(%239, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %241 = @func_2111(%240) /* ty=(Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) */;
  %242 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %243 = %237.4;
  %244 = %238.0;
  %245 = %241.1;
  %246 = %242.3;
  (%243, %244, %245, %var_9853, %246)
}

def @func_10336() -> (Tensor[(10, 4, 12), float32],) {
  %247 = @func_9353() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %248 = %247.0;
  (%248,)
}

def @func_13899(%var_13898: Tensor[(10, 2, 12), uint16]) -> (Tensor[(10, 2, 12), bool], Tensor[(10, 4, 12), float32]) {
  %255 = fn (%var_13878: Tensor[(10, 2, 12), uint16]) -> (Tensor[(10, 2, 12), bool], Tensor[(10, 4, 12), float32]) {
    %249 = cast(meta[relay.Constant][10] /* ty=Tensor[(10, 2, 12), uint16] */, dtype="bool") /* ty=Tensor[(10, 2, 12), bool] */;
    %250 = shape_of(%var_13878, dtype="int32") /* ty=Tensor[(3), int32] */;
    %251 = cast(%var_13878, dtype="bool") /* ty=Tensor[(10, 2, 12), bool] */;
    %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %253 = greater_equal(%251, %252) /* ty=Tensor[(10, 2, 12), bool] */;
    %254 = @func_9690() /* ty=Tensor[(10, 4, 12), float32] */;
    (%253, %254)
  };
  %255(%var_13898) /* ty=(Tensor[(10, 2, 12), bool], Tensor[(10, 4, 12), float32]) */
}

def @func_3415(%var_3413: Tensor[(10, 4, 12), float32]) -> Tensor[(10, 4, 12), uint32] {
  @func_3412(%var_3413) /* ty=Tensor[(10, 4, 12), uint32] */
}

def @func_760(%var_700: Tensor[(520), int8], %var_701: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  %256 = cast(%var_700, dtype="int8") /* ty=Tensor[(520), int8] */;
  %257 = cast(%var_700, dtype="int8") /* ty=Tensor[(520), int8] */;
  %258 = cast(%var_701, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %259 = cast(%var_701, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %260 = reshape(%256, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %261 = reshape(%257, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %262 = reshape(%258, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %263 = reshape(%259, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float64] */;
  %264 = @func_351(%260, %261, %262, %263) /* ty=(Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) */;
  %265 = cast(%var_701, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %266 = reshape(%265, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %267 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %268 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %269 = %264.0;
  %270 = cast(%269, dtype="int8") /* ty=Tensor[(10, 4, 13), int8] */;
  %271 = cast(%269, dtype="int8") /* ty=Tensor[(10, 4, 13), int8] */;
  %272 = @func_42(%266) /* ty=Tensor[(14, 14, 16), float64] */;
  %273 = cast(%272, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
  %274 = cast(%var_701, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %275 = reshape(%270, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %276 = reshape(%271, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %277 = reshape(%273, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %278 = reshape(%274, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float64] */;
  %279 = @func_351(%275, %276, %277, %278) /* ty=(Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) */;
  %280 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %281 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %282 = %267.0;
  %283 = %268.0;
  %284 = %279.1;
  (%280, %269, %var_700, %var_701, %281, %272, %282, %283, %284)
}

def @func_8663() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_8661() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_12223(%var_12184: float32, %var_12185: Tensor[(12, 1, 4), float32], %var_12212: Tensor[(1, 1274), uint8]) -> (Tensor[(12, 1, 4), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1, 1274), uint8]) {
  %285 = cast(%var_12184, dtype="float32") /* ty=float32 */;
  %286 = cast(%var_12185, dtype="float32") /* ty=Tensor[(12, 1, 4), float32] */;
  %287 = cast(%var_12212, dtype="uint8") /* ty=Tensor[(1, 1274), uint8] */;
  %288 = reshape(%287, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
  %289 = minimum(%285, %286) /* ty=Tensor[(12, 1, 4), float32] */;
  %290 = @func_3725() /* ty=Tensor[(10, 4, 12), float32] */;
  %291 = @func_2137(%288) /* ty=Tensor[(14, 13, 7), uint8] */;
  (%289, %290, %291, %var_12212)
}

def @func_11645() -> Tensor[(10, 4, 12), float64] {
  @func_11643() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_3451() -> Tensor[(12, 5, 5), float32] {
  @func_3449() /* ty=Tensor[(12, 5, 5), float32] */
}

def @func_3938() -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) {
  %304 = fn () -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) {
    %292 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %293 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
    %294 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
    %295 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %296 = %295.0;
    %297 = cast(%296, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
    %298 = shape_of(%294, dtype="int32") /* ty=Tensor[(3), int32] */;
    %299 = cast(%294, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
    %300 = dyn.reshape(%297, %298, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %301 = %292.1;
    %302 = %293.2;
    %303 = less(%299, %300) /* ty=Tensor[(10, 4, 12), bool] */;
    (%301, %302, %303)
  };
  %304() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */
}

def @func_3539(%var_3537: Tensor[(11, 8, 14), int32], %var_3538: Tensor[(11, 8, 14), int32]) -> (Tensor[(11, 8, 14), bool],) {
  @func_3535(%var_3537, %var_3538) /* ty=(Tensor[(11, 8, 14), bool],) */
}

def @func_9890(%var_9888: Tensor[(49, 6), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(49, 6), float32], Tensor[(297), uint16]) {
  @func_9887(%var_9888) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(49, 6), float32], Tensor[(297), uint16]) */
}

def @func_5114() -> (Tensor[(14, 14, 16), float64],) {
  @func_5112() /* ty=(Tensor[(14, 14, 16), float64],) */
}

def @func_12098(%var_12097: Tensor[(12, 10, 11), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), float32], Tensor[(12, 10, 11), float64], Tensor[(7, 13, 8), float64], Tensor[(728), float64]) {
  %317 = fn (%var_12029: Tensor[(12, 10, 11), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), float32], Tensor[(12, 10, 11), float64], Tensor[(7, 13, 8), float64], Tensor[(728), float64]) {
    %305 = @func_8629() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %306 = cast(%var_12029, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
    %307 = log10(%306) /* ty=Tensor[(12, 10, 11), float64] */;
    %308 = cast(%307, dtype="float64") /* ty=Tensor[(12, 10, 11), float64] */;
    %309 = cast(meta[relay.Constant][11] /* ty=Tensor[(728), float64] */, dtype="float64") /* ty=Tensor[(728), float64] */;
    %310 = reshape(%309, newshape=[7, 13, 8]) /* ty=Tensor[(7, 13, 8), float64] */;
    %311 = @func_7866(%310) /* ty=(Tensor[(7, 13, 8), float64],) */;
    %312 = %305.0;
    %313 = @func_9710() /* ty=Tensor[(700), float64] */;
    %314 = @func_10245() /* ty=Tensor[(10, 4, 12), float32] */;
    %315 = cosh(%308) /* ty=Tensor[(12, 10, 11), float64] */;
    %316 = %311.0;
    (%312, %313, %314, %315, %316, meta[relay.Constant][11] /* ty=Tensor[(728), float64] */)
  };
  %317(%var_12097) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), float32], Tensor[(12, 10, 11), float64], Tensor[(7, 13, 8), float64], Tensor[(728), float64]) */
}

def @func_1936() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %318 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %319 = @func_1693() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) */;
  %320 = %318.1;
  %321 = %319.0;
  (%320, %321)
}

def @func_13012() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %322 = @func_2389() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %323 = @func_3334() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %324 = @func_6923() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32]) */;
  %325 = @func_10275() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */;
  %326 = %322.1;
  %327 = %323.1;
  %328 = @func_2643() /* ty=Tensor[(10, 4, 12), float32] */;
  %329 = @func_9646() /* ty=Tensor[(10, 4, 12), float32] */;
  %330 = %324.1;
  %331 = %325.3;
  (%326, %327, %328, %329, %330, %331)
}

def @func_2522(%var_2520: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_2519(%var_2520) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_3535(%var_3523: Tensor[(11, 8, 14), int32], %var_3524: Tensor[(11, 8, 14), int32]) -> (Tensor[(11, 8, 14), bool],) {
  %332 = cast(%var_3524, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
  %333 = shape_of(%var_3523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %334 = cast(%var_3523, dtype="bool") /* ty=Tensor[(11, 8, 14), bool] */;
  %335 = dyn.reshape(%332, %333, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %336 = less(%334, %335) /* ty=Tensor[(11, 8, 14), bool] */;
  (%336,)
}

def @func_12569() -> (Tensor[(10, 4, 12), float32],) {
  %337 = @func_3427() /* ty=Tensor[(10, 4, 12), float32] */;
  (%337,)
}

def @func_13566() -> (Tensor[(10, 4, 12), float32],) {
  %338 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %339 = %338.0;
  (%339,)
}

def @func_11955() -> (Tensor[(10, 4, 12), float32], Tensor[(12, 14, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float64]) {
  %349 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(12, 14, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float64]) {
    %340 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %341 = @func_10105() /* ty=Tensor[(12, 14, 12), float64] */;
    %342 = cast(%341, dtype="float32") /* ty=Tensor[(12, 14, 12), float32] */;
    %343 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
    %344 = @func_9481() /* ty=(Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
    %345 = %340.0;
    %346 = log2(%342) /* ty=Tensor[(12, 14, 12), float32] */;
    %347 = %343.0;
    %348 = %344.1;
    (%345, %346, %347, %348)
  };
  %349() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(12, 14, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float64]) */
}

def @func_2868(%var_2867: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 10, 7), float64], Tensor[(700), float64], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %368 = fn (%var_2821: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 10, 7), float64], Tensor[(700), float64], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64], Tensor[(3136), float32], Tensor[(3136), float32]) {
    %350 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %351 = cast(meta[relay.Constant][12] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
    %352 = cast(%var_2821, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %353 = reshape(%351, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
    %354 = reshape(%352, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %355 = @func_2631(%353, %354) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %356 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %357 = @func_2389() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
    %358 = cast(%var_2821, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %359 = cast(%var_2821, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %360 = reshape(%359, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %361 = @func_937(%360) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %362 = %350.1;
    %363 = %355.0;
    %364 = %356.0;
    %365 = %357.0;
    %366 = acosh(%358) /* ty=Tensor[(3136), float32] */;
    %367 = %361.2;
    (%362, %363, meta[relay.Constant][12] /* ty=Tensor[(700), float64] */, %364, %365, %366, %367)
  };
  %368(%var_2867) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 10, 7), float64], Tensor[(700), float64], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64], Tensor[(3136), float32], Tensor[(3136), float32]) */
}

def @func_4526() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_9360() -> (Tensor[(10, 4, 12), float32],) {
  %370 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %369 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
    (%369,)
  };
  %370() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_11106() -> (Tensor[(10, 4, 12), float32],) {
  @func_11104() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_12445() -> (Tensor[(10, 4, 12), float32],) {
  %373 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %371 = @func_8270() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %372 = %371.1;
    (%372,)
  };
  %373() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_4843(%var_4842: Tensor[(2, 8, 1), float64]) -> (Tensor[(2, 8, 5), float64],) {
  %377 = fn (%var_4828: Tensor[(2, 8, 1), float64]) -> (Tensor[(2, 8, 5), float64],) {
    %374 = cast(%var_4828, dtype="float64") /* ty=Tensor[(2, 8, 1), float64] */;
    %375 = cast(meta[relay.Constant][13] /* ty=Tensor[(2, 8, 5), float64] */, dtype="float64") /* ty=Tensor[(2, 8, 5), float64] */;
    %376 = divide(%374, %375) /* ty=Tensor[(2, 8, 5), float64] */;
    (%376,)
  };
  %377(%var_4842) /* ty=(Tensor[(2, 8, 5), float64],) */
}

def @func_8629() -> (Tensor[(10, 4, 12), float32],) {
  %378 = @func_3396() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %379 = %378.2;
  (%379,)
}

def @func_1268() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_9419() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  @func_9417() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */
}

def @func_10043() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  @func_10041() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_11223() -> Tensor[(10, 4, 12), float64] {
  @func_5911() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_12532() -> Tensor[(10, 4, 12), float32] {
  %380 = @func_10041() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %380.0
}

def @func_11617(%var_11551: Tensor[(15, 6, 15), int64], %var_11552: Tensor[(15, 6, 15), int64], %var_11589: Tensor[(700), int16], %var_11590: Tensor[(2, 960), float64]) -> (Tensor[(15, 6, 15), int64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(700), int16], Tensor[(2, 960), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  %381 = cast(%var_11552, dtype="int64") /* ty=Tensor[(15, 6, 15), int64] */;
  %382 = shape_of(%var_11551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%var_11551, dtype="int64") /* ty=Tensor[(15, 6, 15), int64] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %385 = cast(%var_11589, dtype="int16") /* ty=Tensor[(700), int16] */;
  %386 = cast(%var_11590, dtype="float64") /* ty=Tensor[(2, 960), float64] */;
  %387 = reshape(%385, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %388 = reshape(%386, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %389 = @func_5814(%387, %388) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), uint8], Tensor[(3136), float32], Tensor[(700), int16], Tensor[(1920), float64], Tensor[(10, 4, 12), float32]) */;
  %390 = cast(%var_11590, dtype="float32") /* ty=Tensor[(2, 960), float32] */;
  %391 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %392 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %393 = subtract(%383, %384) /* ty=Tensor[(15, 6, 15), int64] */;
  %394 = @func_10547() /* ty=Tensor[(10, 4, 12), float32] */;
  %395 = %389.0;
  %396 = sin(%390) /* ty=Tensor[(2, 960), float32] */;
  %397 = @func_6447() /* ty=Tensor[(10, 4, 12), float32] */;
  %398 = %391.0;
  %399 = %392.1;
  (%393, %394, %395, %var_11589, %396, %397, %398, %399)
}

def @func_6219() -> (Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64]) {
  %404 = fn () -> (Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64]) {
    %400 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
    %401 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
    %402 = %400.2;
    %403 = %401.0;
    (%402, %403)
  };
  %404() /* ty=(Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64]) */
}

def @func_4524() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %405 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %406 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  %407 = %405.0;
  %408 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  (%406, %407, %408)
}

def @func_12793(%var_12792: Tensor[(392, 8), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(12, 1, 4), float32], Tensor[(1274), uint8], Tensor[(3136), float64], Tensor[(392, 8), float32], Tensor[(10, 4, 12), float32]) {
  %419 = fn (%var_12783: Tensor[(392, 8), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(12, 1, 4), float32], Tensor[(1274), uint8], Tensor[(3136), float64], Tensor[(392, 8), float32], Tensor[(10, 4, 12), float32]) {
    %409 = cast(meta[relay.Constant][14] /* ty=Tensor[(1274), uint8] */, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
    %410 = reshape(%409, newshape=[1274]) /* ty=Tensor[(1274), uint8] */;
    %411 = @func_12507(%410) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(12, 1, 4), float32], float32, Tensor[(48), float32], Tensor[(1274), uint8]) */;
    %412 = cast(%var_12783, dtype="float32") /* ty=Tensor[(392, 8), float32] */;
    %413 = reshape(%412, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %414 = @func_12017(%413) /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(3136), float64], Tensor[(10, 4, 12), float32]) */;
    %415 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
    %416 = %411.1;
    %417 = %414.2;
    %418 = @func_6492() /* ty=Tensor[(10, 4, 12), float32] */;
    (%415, %416, meta[relay.Constant][14] /* ty=Tensor[(1274), uint8] */, %417, %var_12783, %418)
  };
  %419(%var_12792) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(12, 1, 4), float32], Tensor[(1274), uint8], Tensor[(3136), float64], Tensor[(392, 8), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_9107() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %420 = @func_4642() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %421 = @func_6561() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %422 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %423 = %421.5;
  %424 = cast(%423, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %425 = reshape(%424, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %426 = @func_8108(%425) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %427 = @func_8629() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %428 = %420.1;
  %429 = %422.0;
  %430 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %431 = %426.1;
  %432 = %427.0;
  (%428, %423, %429, %430, %431, %432)
}

def @func_9109() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_9107() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_13631() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %433 = @func_7620() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %434 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %435 = %433.0;
  %436 = %434.1;
  (%435, %436)
}

def @func_3694(%var_3693: Tensor[(176), uint32]) -> (Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) {
  %447 = fn (%var_3642: Tensor[(176), uint32]) -> (Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) {
    %437 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %438 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
    %439 = %438.1;
    %440 = cast(%var_3642, dtype="bool") /* ty=Tensor[(176), bool] */;
    %441 = shape_of(%439, dtype="int32") /* ty=Tensor[(1), int32] */;
    %442 = cast(%439, dtype="bool") /* ty=Tensor[(176), bool] */;
    %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?), bool] */;
    %444 = %437.1;
    %445 = equal(%442, %443) /* ty=Tensor[(176), bool] */;
    %446 = @func_3223() /* ty=Tensor[(10, 4, 12), float32] */;
    (%444, %445, %446)
  };
  %447(%var_3693) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) */
}

def @func_581() -> Tensor[(10, 4, 12), float32] {
  %448 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %448.0
}

def @func_2713() -> Tensor[(10, 4, 12), float32] {
  %450 = fn () -> Tensor[(10, 4, 12), float32] {
    %449 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %449.1
  };
  %450() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_13865(%var_13864: Tensor[(700), int16]) -> (Tensor[(10, 4, 12), float32], Tensor[(432, 1), float64], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 224), float32]) {
  %470 = fn (%var_13826: Tensor[(700), int16]) -> (Tensor[(10, 4, 12), float32], Tensor[(432, 1), float64], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 224), float32]) {
    %451 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %452 = @func_13046() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %453 = @func_9670() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %454 = cast(meta[relay.Constant][15] /* ty=Tensor[(432, 1), float64] */, dtype="float64") /* ty=Tensor[(432, 1), float64] */;
    %455 = cast(%var_13826, dtype="int16") /* ty=Tensor[(700), int16] */;
    %456 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 224), float32] */, dtype="float32") /* ty=Tensor[(14, 224), float32] */;
    %457 = reshape(%454, newshape=[16, 3, 9]) /* ty=Tensor[(16, 3, 9), float64] */;
    %458 = reshape(%455, newshape=[1, 700]) /* ty=Tensor[(1, 700), int16] */;
    %459 = reshape(%456, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %460 = @func_6177(%457, %458, %459) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(3136), float32], Tensor[(16, 3, 9), float64], Tensor[(4, 700), uint8]) */;
    %461 = %460.1;
    %462 = cast(%461, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %463 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(14, 224), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %464 = cast(meta[relay.Constant][16] /* ty=Tensor[(14, 224), float32] */, dtype="float32") /* ty=Tensor[(14, 224), float32] */;
    %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %466 = %451.0;
    %467 = %452.0;
    %468 = %453.0;
    %469 = minimum(%464, %465) /* ty=Tensor[(14, 224), float32] */;
    (%466, meta[relay.Constant][15] /* ty=Tensor[(432, 1), float64] */, %var_13826, %467, %468, %469)
  };
  %470(%var_13864) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(432, 1), float64], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 224), float32]) */
}

def @func_10548() -> Tensor[(10, 4, 12), float32] {
  %472 = fn () -> Tensor[(10, 4, 12), float32] {
    %471 = @func_3795() /* ty=(Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %471.1
  };
  %472() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_11429() -> Tensor[(10, 4, 12), float32] {
  %473 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_9492() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %473() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_13047() -> (Tensor[(10, 4, 12), float32],) {
  %476 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %474 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %475 = %474.0;
    (%475,)
  };
  %476() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_3033() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  %477 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %478 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %479 = %477.0;
  %480 = %478.3;
  (%479, %480)
}

def @func_5112() -> (Tensor[(14, 14, 16), float64],) {
  %481 = @func_4353() /* ty=Tensor[(14, 14, 16), float64] */;
  (%481,)
}

def @func_12489(%var_12471: int16) -> (Tensor[(2, 7, 1), bool],) {
  %482 = cast(%var_12471, dtype="bool") /* ty=bool */;
  %483 = cast(meta[relay.Constant][17] /* ty=Tensor[(2, 7, 1), int16] */, dtype="bool") /* ty=Tensor[(2, 7, 1), bool] */;
  %484 = greater_equal(%482, %483) /* ty=Tensor[(2, 7, 1), bool] */;
  (%484,)
}

def @func_7759() -> (Tensor[(10, 4, 12), float64],) {
  @func_7757() /* ty=(Tensor[(10, 4, 12), float64],) */
}

def @func_13144(%var_13142: Tensor[(700), float64], %var_13143: Tensor[(294), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool], Tensor[(700), float64], Tensor[(294), float32], Tensor[(10, 4, 12), float64], Tensor[(4, 12, 8), float64], float64, Tensor[(96, 4), float64]) {
  %499 = fn (%var_13128: Tensor[(700), float64], %var_13129: Tensor[(294), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool], Tensor[(700), float64], Tensor[(294), float32], Tensor[(10, 4, 12), float64], Tensor[(4, 12, 8), float64], float64, Tensor[(96, 4), float64]) {
    %485 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %486 = cast(%var_13128, dtype="float64") /* ty=Tensor[(700), float64] */;
    %487 = cast(%var_13129, dtype="float32") /* ty=Tensor[(294), float32] */;
    %488 = reshape(%486, newshape=[700]) /* ty=Tensor[(700), float64] */;
    %489 = reshape(%487, newshape=[294]) /* ty=Tensor[(294), float32] */;
    %490 = @func_5226(%488, %489) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(14, 3, 7), bool], Tensor[(294), float32]) */;
    %491 = cast(5.49434f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %492 = cast(meta[relay.Constant][18] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
    %493 = reshape(%491, newshape=[]) /* ty=float64 */;
    %494 = reshape(%492, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), float64] */;
    %495 = %485.0;
    %496 = %490.5;
    %497 = @func_9032() /* ty=Tensor[(10, 4, 12), float64] */;
    %498 = @func_12715(%493, %494) /* ty=Tensor[(4, 12, 8), float64] */;
    (%495, %496, %var_13128, %var_13129, %497, %498, 5.49434f64 /* ty=float64 */, meta[relay.Constant][18] /* ty=Tensor[(96, 4), float64] */)
  };
  %499(%var_13142, %var_13143) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool], Tensor[(700), float64], Tensor[(294), float32], Tensor[(10, 4, 12), float64], Tensor[(4, 12, 8), float64], float64, Tensor[(96, 4), float64]) */
}

def @func_13194() -> Tensor[(10, 4, 12), float32] {
  %501 = fn () -> Tensor[(10, 4, 12), float32] {
    %500 = @func_13092() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
    %500.1
  };
  %501() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_1343(%var_1341: Tensor[(4, 4, 11), uint32], %var_1342: Tensor[(4, 4, 11), uint32]) -> (Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) {
  @func_1339(%var_1341, %var_1342) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) */
}

def @func_4473(%var_4423: Tensor[(700), int16], %var_4449: Tensor[(3136), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) {
  %502 = cast(%var_4423, dtype="int16") /* ty=Tensor[(700), int16] */;
  %503 = reshape(%502, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %504 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 104), int8] */, dtype="int8") /* ty=Tensor[(5, 104), int8] */;
  %505 = cast(%var_4449, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %506 = reshape(%504, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %507 = reshape(%505, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %508 = @func_760(%506, %507) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
  %509 = @func_2758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %510 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %511 = @func_2986(%503) /* ty=Tensor[(14, 10, 5), int16] */;
  %512 = %508.4;
  %513 = %509.1;
  (%510, %511, %var_4423, %512, meta[relay.Constant][19] /* ty=Tensor[(5, 104), int8] */, %var_4449, %513)
}

def @func_5913() -> Tensor[(10, 4, 12), float64] {
  @func_5911() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_2027(%var_2025: uint16, %var_2026: Tensor[(9, 11, 3), uint16]) -> (Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) {
  @func_2023(%var_2025, %var_2026) /* ty=(Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) */
}

def @func_2023(%var_1980: uint16, %var_1981: Tensor[(9, 11, 3), uint16]) -> (Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) {
  %514 = cast(%var_1980, dtype="uint16") /* ty=uint16 */;
  %515 = cast(%var_1981, dtype="uint16") /* ty=Tensor[(9, 11, 3), uint16] */;
  %516 = cast(meta[relay.Constant][20] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %517 = cast(meta[relay.Constant][20] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %518 = reshape(%516, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %519 = reshape(%517, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %520 = @func_1339(%518, %519) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) */;
  %521 = %520.0;
  %522 = cast(%var_1980, dtype="uint16") /* ty=uint16 */;
  %523 = cast(%521, dtype="uint16") /* ty=Tensor[(4, 4, 11), uint16] */;
  %524 = subtract(%514, %515) /* ty=Tensor[(9, 11, 3), uint16] */;
  %525 = maximum(%522, %523) /* ty=Tensor[(4, 4, 11), uint16] */;
  (%524, meta[relay.Constant][20] /* ty=Tensor[(176), uint32] */, %525)
}

def @func_9225() -> Tensor[(10, 4, 12), float32] {
  @func_9223() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_11225() -> Tensor[(10, 4, 12), float64] {
  @func_11223() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_1276() -> Tensor[(10, 4, 12), float32] {
  %526 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_809() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %526() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_1578() -> Tensor[(10, 4, 12), float32] {
  %527 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_680() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %527() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_3554() -> Tensor[(10, 4, 12), float32] {
  %529 = fn () -> Tensor[(10, 4, 12), float32] {
    %528 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %528.0
  };
  %529() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_6924() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32]) {
  %536 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32]) {
    %530 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %531 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
    %532 = cast(%531, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
    %533 = reshape(%532, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
    %534 = %530.0;
    %535 = @func_3412(%533) /* ty=Tensor[(10, 4, 12), uint32] */;
    (%534, %531, %535)
  };
  %536() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32]) */
}

def @func_10734() -> (Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) {
  %540 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) {
    %537 = @func_8270() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %538 = %537.0;
    %539 = @func_4921() /* ty=Tensor[(4, 1, 6), float32] */;
    (%538, %539)
  };
  %540() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */
}

def @func_2645() -> Tensor[(10, 4, 12), float32] {
  @func_2643() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_798() -> (Tensor[(10, 4, 12), float32],) {
  @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_356(%var_352: Tensor[(10, 4, 13), int8], %var_353: Tensor[(10, 4, 13), int8], %var_354: Tensor[(3136), float32], %var_355: Tensor[(14, 14, 16), float64]) -> (Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) {
  %560 = fn (%var_312: Tensor[(10, 4, 13), int8], %var_313: Tensor[(10, 4, 13), int8], %var_328: Tensor[(3136), float32], %var_334: Tensor[(14, 14, 16), float64]) -> (Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) {
    %541 = cast(%var_313, dtype="bool") /* ty=Tensor[(10, 4, 13), bool] */;
    %542 = shape_of(%var_312, dtype="int32") /* ty=Tensor[(3), int32] */;
    %543 = cast(%var_312, dtype="bool") /* ty=Tensor[(10, 4, 13), bool] */;
    %544 = dyn.reshape(%541, %542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %545 = cast(%var_328, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %546 = reshape(%545, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
    %547 = cast(%var_328, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %548 = reshape(%547, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
    %549 = @func_42(%548) /* ty=Tensor[(14, 14, 16), float64] */;
    %550 = cast(%var_334, dtype="uint8") /* ty=Tensor[(14, 14, 16), uint8] */;
    %551 = shape_of(%549, dtype="int32") /* ty=Tensor[(3), int32] */;
    %552 = cast(%549, dtype="uint8") /* ty=Tensor[(14, 14, 16), uint8] */;
    %553 = dyn.reshape(%550, %551, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %554 = minimum(%552, %553) /* ty=Tensor[(14, 14, 16), uint8] */;
    %555 = cast(%554, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
    %556 = reshape(%555, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
    %557 = less_equal(%543, %544) /* ty=Tensor[(10, 4, 13), bool] */;
    %558 = @func_42(%546) /* ty=Tensor[(14, 14, 16), float64] */;
    %559 = @func_42(%556) /* ty=Tensor[(14, 14, 16), float64] */;
    (%557, %558, %var_328, %554, %559)
  };
  %560(%var_352, %var_353, %var_354, %var_355) /* ty=(Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) */
}

def @func_1693() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) {
  %561 = cast(meta[relay.Constant][21] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %562 = reshape(%561, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %563 = @func_937(%562) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %564 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  %565 = %563.0;
  (%564, %565, meta[relay.Constant][21] /* ty=Tensor[(3136), float32] */)
}

def @func_4733() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) {
  %566 = @func_4269() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
  %567 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %568 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %569 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 104), int8] */, dtype="int8") /* ty=Tensor[(5, 104), int8] */;
  %570 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 104), int8] */, dtype="int8") /* ty=Tensor[(5, 104), int8] */;
  %571 = cast(meta[relay.Constant][23] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %572 = cast(meta[relay.Constant][23] /* ty=Tensor[(3136), float32] */, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %573 = reshape(%569, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %574 = reshape(%570, newshape=[10, 4, 13]) /* ty=Tensor[(10, 4, 13), int8] */;
  %575 = reshape(%571, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %576 = reshape(%572, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float64] */;
  %577 = @func_351(%573, %574, %575, %576) /* ty=(Tensor[(10, 4, 13), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32], Tensor[(14, 14, 16), uint8], Tensor[(14, 14, 16), float64]) */;
  %578 = cast(meta[relay.Constant][24] /* ty=Tensor[(975), uint8] */, dtype="uint8") /* ty=Tensor[(975), uint8] */;
  %579 = cast(meta[relay.Constant][24] /* ty=Tensor[(975), uint8] */, dtype="uint8") /* ty=Tensor[(975), uint8] */;
  %580 = reshape(%578, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), uint8] */;
  %581 = reshape(%579, newshape=[15, 13, 5]) /* ty=Tensor[(15, 13, 5), uint8] */;
  %582 = @func_3977(%580, %581) /* ty=(Tensor[(15, 13, 5), uint8], Tensor[(12, 5, 5), float32]) */;
  %583 = %566.1;
  %584 = %567.0;
  %585 = %568.0;
  %586 = %577.3;
  %587 = %582.1;
  (%583, %584, %585, %586, meta[relay.Constant][22] /* ty=Tensor[(5, 104), int8] */, meta[relay.Constant][23] /* ty=Tensor[(3136), float32] */, %587, meta[relay.Constant][24] /* ty=Tensor[(975), uint8] */)
}

def @func_3077(%var_3075: Tensor[(16, 12, 10), float64], %var_3076: Tensor[(3136), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  @func_3073(%var_3075, %var_3076) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */
}

def @func_9670() -> (Tensor[(10, 4, 12), float32],) {
  %588 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %589 = %588.0;
  (%589,)
}

def @func_10105() -> Tensor[(12, 14, 12), float64] {
  %590 = cast(meta[relay.Constant][25] /* ty=Tensor[(12, 14, 12), float64] */, dtype="float64") /* ty=Tensor[(12, 14, 12), float64] */;
  rsqrt(%590) /* ty=Tensor[(12, 14, 12), float64] */
}

def @func_6067(%var_5949: Tensor[(10, 4, 12), float32], %var_6015: Tensor[(3136), float32], %var_6030: Tensor[(297), float64]) -> (Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) {
  %591 = @func_3427() /* ty=Tensor[(10, 4, 12), float32] */;
  %592 = cast(%var_5949, dtype="int64") /* ty=Tensor[(10, 4, 12), int64] */;
  %593 = shape_of(%591, dtype="int32") /* ty=Tensor[(3), int32] */;
  %594 = cast(%591, dtype="int64") /* ty=Tensor[(10, 4, 12), int64] */;
  %595 = dyn.reshape(%592, %593, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %596 = cast(meta[relay.Constant][26] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %597 = cast(meta[relay.Constant][27] /* ty=Tensor[(297), uint16] */, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %598 = reshape(%596, newshape=[]) /* ty=uint16 */;
  %599 = reshape(%597, newshape=[297, 1]) /* ty=Tensor[(297, 1), uint16] */;
  %600 = @func_5310(%598, %599) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %601 = cast(meta[relay.Constant][28] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %602 = cast(%var_6015, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %603 = reshape(%601, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %604 = reshape(%602, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %605 = @func_2631(%603, %604) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %606 = cast(meta[relay.Constant][27] /* ty=Tensor[(297), uint16] */, dtype="float64") /* ty=Tensor[(297), float64] */;
  %607 = sigmoid(%606) /* ty=Tensor[(297), float64] */;
  %608 = cast(%var_6030, dtype="int64") /* ty=Tensor[(297), int64] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(1), int32] */;
  %610 = cast(%607, dtype="int64") /* ty=Tensor[(297), int64] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?), int64] */;
  %612 = cast(meta[relay.Constant][29] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %613 = reshape(%612, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %614 = @func_3692(%613) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) */;
  %615 = cast(meta[relay.Constant][29] /* ty=Tensor[(176), uint32] */, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %616 = reshape(%615, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %617 = @func_1726(%616) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) */;
  %618 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %619 = cast(%var_6030, dtype="float64") /* ty=Tensor[(297), float64] */;
  %620 = left_shift(%594, %595) /* ty=Tensor[(10, 4, 12), int64] */;
  %621 = %600.0;
  %622 = %605.4;
  %623 = add(%610, %611) /* ty=Tensor[(297), int64] */;
  %624 = %614.2;
  %625 = %617.1;
  %626 = %618.0;
  %627 = log(%619) /* ty=Tensor[(297), float64] */;
  (%620, %621, meta[relay.Constant][26] /* ty=uint16 */, %622, meta[relay.Constant][28] /* ty=Tensor[(700), float64] */, %var_6015, %623, %624, meta[relay.Constant][29] /* ty=Tensor[(176), uint32] */, %625, %626, %627)
}

def @func_8904() -> Tensor[(10, 4, 12), float32] {
  %628 = @func_7986() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %628.0
}

def @func_8661() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %629 = @func_1936() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %630 = @func_6846() /* ty=(Tensor[(176), float32],) */;
  %631 = @func_7067() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32]) */;
  %632 = %629.1;
  %633 = %630.0;
  %634 = @func_3553() /* ty=Tensor[(10, 4, 12), float32] */;
  %635 = %631.1;
  (%632, %633, %634, %635)
}

def @func_9493() -> Tensor[(10, 4, 12), float32] {
  %637 = fn () -> Tensor[(10, 4, 12), float32] {
    %636 = @func_4642() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %636.0
  };
  %637() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_10223(%var_10219: Tensor[(14, 6, 2), float64]) -> Tensor[(14, 6, 2), float64] {
  %638 = cast(%var_10219, dtype="float64") /* ty=Tensor[(14, 6, 2), float64] */;
  exp(%638) /* ty=Tensor[(14, 6, 2), float64] */
}

def @func_11412(%var_11410: float32, %var_11411: Tensor[(6, 1, 16), float32]) -> (Tensor[(6, 1, 16), float32], Tensor[(6, 1, 16), bool]) {
  %648 = fn (%var_11370: float32, %var_11371: Tensor[(6, 1, 16), float32]) -> (Tensor[(6, 1, 16), float32], Tensor[(6, 1, 16), bool]) {
    %639 = cast(%var_11370, dtype="float32") /* ty=float32 */;
    %640 = cast(%var_11371, dtype="float32") /* ty=Tensor[(6, 1, 16), float32] */;
    %641 = cast(%var_11371, dtype="float64") /* ty=Tensor[(6, 1, 16), float64] */;
    %642 = cast(%var_11370, dtype="float64") /* ty=float64 */;
    %643 = divide(%641, %642) /* ty=Tensor[(6, 1, 16), float64] */;
    %644 = cast(%var_11370, dtype="bool") /* ty=bool */;
    %645 = cast(%643, dtype="bool") /* ty=Tensor[(6, 1, 16), bool] */;
    %646 = minimum(%639, %640) /* ty=Tensor[(6, 1, 16), float32] */;
    %647 = greater(%644, %645) /* ty=Tensor[(6, 1, 16), bool] */;
    (%646, %647)
  };
  %648(%var_11410, %var_11411) /* ty=(Tensor[(6, 1, 16), float32], Tensor[(6, 1, 16), bool]) */
}

def @func_3167() -> (Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) {
  %649 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %650 = cast(meta[relay.Constant][30] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %651 = cast(meta[relay.Constant][31] /* ty=Tensor[(297), uint16] */, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %652 = reshape(%650, newshape=[]) /* ty=uint16 */;
  %653 = reshape(%651, newshape=[9, 11, 3]) /* ty=Tensor[(9, 11, 3), uint16] */;
  %654 = @func_2023(%652, %653) /* ty=(Tensor[(9, 11, 3), uint16], Tensor[(176), uint32], Tensor[(4, 4, 11), uint16]) */;
  %655 = %649.1;
  %656 = %654.1;
  (%655, %656, meta[relay.Constant][30] /* ty=uint16 */, meta[relay.Constant][31] /* ty=Tensor[(297), uint16] */)
}

def @func_2140(%var_2138: Tensor[(14, 13, 7), uint8]) -> Tensor[(14, 13, 7), uint8] {
  @func_2137(%var_2138) /* ty=Tensor[(14, 13, 7), uint8] */
}

def @func_11533(%var_11529: Tensor[(14, 8, 10), int32], %var_11530: Tensor[(176), uint32], %var_11531: Tensor[(14, 8, 10), int8], %var_11532: Tensor[(14, 8, 10), int8]) -> (Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), uint8], Tensor[(14, 8, 10), bool], Tensor[(10, 4, 12), float32], Tensor[(14, 8, 10), float64]) {
  %698 = fn (%var_11452: Tensor[(14, 8, 10), int32], %var_11463: Tensor[(176), uint32], %var_11504: Tensor[(14, 8, 10), int8], %var_11518: Tensor[(14, 8, 10), int8]) -> (Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), uint8], Tensor[(14, 8, 10), bool], Tensor[(10, 4, 12), float32], Tensor[(14, 8, 10), float64]) {
    %657 = cast(%var_11463, dtype="uint32") /* ty=Tensor[(176), uint32] */;
    %658 = reshape(%657, newshape=[176]) /* ty=Tensor[(176), uint32] */;
    %659 = @func_3692(%658) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), bool], Tensor[(10, 4, 12), float32]) */;
    %660 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 8, 10), int32] */, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
    %661 = sinh(%660) /* ty=Tensor[(14, 8, 10), float64] */;
    %662 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 8, 10), int32] */, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
    %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %664 = cast(%661, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
    %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %666 = cast(%var_11452, dtype="int32") /* ty=Tensor[(14, 8, 10), int32] */;
    %667 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(14, 8, 10), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %668 = cast(meta[relay.Constant][32] /* ty=Tensor[(14, 8, 10), int32] */, dtype="int32") /* ty=Tensor[(14, 8, 10), int32] */;
    %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %670 = bitwise_xor(%668, %669) /* ty=Tensor[(14, 8, 10), int32] */;
    %671 = cast(%var_11452, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
    %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
    %673 = cast(%670, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
    %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %675 = cast(%670, dtype="int8") /* ty=Tensor[(14, 8, 10), int8] */;
    %676 = shape_of(%661, dtype="int32") /* ty=Tensor[(3), int32] */;
    %677 = cast(%661, dtype="int8") /* ty=Tensor[(14, 8, 10), int8] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %679 = multiply(%677, %678) /* ty=Tensor[(14, 8, 10), int8] */;
    %680 = cast(%var_11504, dtype="uint8") /* ty=Tensor[(14, 8, 10), uint8] */;
    %681 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
    %682 = cast(%679, dtype="uint8") /* ty=Tensor[(14, 8, 10), uint8] */;
    %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %684 = cast(%var_11518, dtype="bool") /* ty=Tensor[(14, 8, 10), bool] */;
    %685 = shape_of(%679, dtype="int32") /* ty=Tensor[(3), int32] */;
    %686 = cast(%679, dtype="bool") /* ty=Tensor[(14, 8, 10), bool] */;
    %687 = dyn.reshape(%684, %685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %688 = cast(%679, dtype="float32") /* ty=Tensor[(14, 8, 10), float32] */;
    %689 = asinh(%688) /* ty=Tensor[(14, 8, 10), float32] */;
    %690 = cast(%689, dtype="float64") /* ty=Tensor[(14, 8, 10), float64] */;
    %691 = %659.0;
    %692 = divide(%664, %665) /* ty=Tensor[(14, 8, 10), float32] */;
    %693 = floor_divide(%673, %674) /* ty=Tensor[(14, 8, 10), float32] */;
    %694 = left_shift(%682, %683) /* ty=Tensor[(14, 8, 10), uint8] */;
    %695 = logical_or(%686, %687) /* ty=Tensor[(14, 8, 10), bool] */;
    %696 = @func_9690() /* ty=Tensor[(10, 4, 12), float32] */;
    %697 = atanh(%690) /* ty=Tensor[(14, 8, 10), float64] */;
    (%691, %var_11463, %692, %693, %694, %695, %696, %697)
  };
  %698(%var_11529, %var_11530, %var_11531, %var_11532) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), float32], Tensor[(14, 8, 10), uint8], Tensor[(14, 8, 10), bool], Tensor[(10, 4, 12), float32], Tensor[(14, 8, 10), float64]) */
}

def @func_5585() -> (Tensor[(14, 14, 16), float64],) {
  %699 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %700 = %699.0;
  (%700,)
}

def @func_13526() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %704 = fn () -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
    %701 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %702 = %701.0;
    %703 = @func_5911() /* ty=Tensor[(10, 4, 12), float64] */;
    (%702, %703)
  };
  %704() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */
}

def @func_13633() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_13631() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_6346(%var_6344: Tensor[(8, 154), int32], %var_6345: Tensor[(20, 48), int64]) -> (Tensor[(12, 5, 5), float32], Tensor[(8, 154), float64], Tensor[(20, 48), float64], Tensor[(10, 4, 12), float32]) {
  @func_6342(%var_6344, %var_6345) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(8, 154), float64], Tensor[(20, 48), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_11034() -> (Tensor[(14, 14, 16), float64],) {
  %707 = fn () -> (Tensor[(14, 14, 16), float64],) {
    %705 = @func_6218() /* ty=(Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64]) */;
    %706 = %705.1;
    (%706,)
  };
  %707() /* ty=(Tensor[(14, 14, 16), float64],) */
}

def @func_10478() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %712 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
    %708 = @func_9107() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %709 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
    %710 = %708.1;
    %711 = %709.4;
    (%710, %711)
  };
  %712() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */
}

def @func_9417() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %713 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %714 = @func_5031() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %715 = %713.0;
  %716 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %717 = %714.1;
  (%715, %716, %717)
}

def @func_10246() -> Tensor[(10, 4, 12), float32] {
  %718 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_1865() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %718() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_7987() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %723 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
    %719 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %720 = @func_6561() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
    %721 = %719.0;
    %722 = %720.4;
    (%721, %722)
  };
  %723() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */
}

def @func_8852() -> (Tensor[(10, 4, 12), float64],) {
  %724 = @func_5668() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %725 = %724.0;
  (%725,)
}

def @func_6737() -> (Tensor[(10, 4, 12), float32],) {
  %726 = @func_2712() /* ty=Tensor[(10, 4, 12), float32] */;
  (%726,)
}

def @func_12814(%var_12809: Tensor[(10, 6, 12), float32]) -> Tensor[(10, 6, 12), float32] {
  %727 = cast(%var_12809, dtype="float32") /* ty=Tensor[(10, 6, 12), float32] */;
  atan(%727) /* ty=Tensor[(10, 6, 12), float32] */
}

def @func_10275() -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) {
  %728 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %729 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
  %730 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %731 = @func_7301() /* ty=Tensor[(10, 4, 12), float32] */;
  %732 = %728.0;
  %733 = %729.2;
  %734 = %730.0;
  (%731, %732, %733, %734)
}

def @func_623() -> (Tensor[(10, 4, 12), float32],) {
  %735 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %736 = %735.0;
  (%736,)
}

def @func_575() -> (Tensor[(10, 4, 12), float32],) {
  %739 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %737 = cast(meta[relay.Constant][33] /* ty=Tensor[(10, 4, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
    %738 = cosh(%737) /* ty=Tensor[(10, 4, 12), float32] */;
    (%738,)
  };
  %739() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_5587() -> (Tensor[(14, 14, 16), float64],) {
  @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */
}

def @func_3981(%var_3979: Tensor[(15, 13, 5), uint8], %var_3980: Tensor[(15, 13, 5), uint8]) -> (Tensor[(15, 13, 5), uint8], Tensor[(12, 5, 5), float32]) {
  @func_3977(%var_3979, %var_3980) /* ty=(Tensor[(15, 13, 5), uint8], Tensor[(12, 5, 5), float32]) */
}

def @func_1865() -> Tensor[(10, 4, 12), float32] {
  %740 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %740.0
}

def @func_6415() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %741 = @func_2758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %742 = @func_3795() /* ty=(Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %743 = %741.1;
  %744 = %742.1;
  (%743, %744)
}

def @func_9585() -> (Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), bool]) {
  @func_9583() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), bool]) */
}

def @func_3711() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_3709() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_667(%var_666: Tensor[(10, 4, 12), float32]) -> (Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) {
  %753 = fn (%var_654: Tensor[(10, 4, 12), float32]) -> (Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) {
    %745 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
    %746 = cast(%var_654, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
    %747 = shape_of(%745, dtype="int32") /* ty=Tensor[(3), int32] */;
    %748 = cast(%745, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
    %749 = dyn.reshape(%746, %747, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %750 = cast(%745, dtype="float64") /* ty=Tensor[(10, 4, 12), float64] */;
    %751 = less_equal(%748, %749) /* ty=Tensor[(10, 4, 12), bool] */;
    %752 = acosh(%750) /* ty=Tensor[(10, 4, 12), float64] */;
    (%751, %752)
  };
  %753(%var_666) /* ty=(Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */
}

def @func_9672() -> (Tensor[(10, 4, 12), float32],) {
  @func_9670() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_9775(%var_9773: Tensor[(2, 16, 14), float32]) -> (Tensor[(2, 16, 14), float32],) {
  @func_9772(%var_9773) /* ty=(Tensor[(2, 16, 14), float32],) */
}

def @func_5230(%var_5228: Tensor[(700), float64], %var_5229: Tensor[(294), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(14, 3, 7), bool], Tensor[(294), float32]) {
  @func_5226(%var_5228, %var_5229) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(14, 3, 7), bool], Tensor[(294), float32]) */
}

def @func_764(%var_762: Tensor[(520), int8], %var_763: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  @func_760(%var_762, %var_763) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */
}

def @func_7620() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %754 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %755 = @func_7184() /* ty=Tensor[(10, 4, 12), float32] */;
  (%754, %755)
}

def @func_2790() -> (Tensor[(10, 4, 12), float32],) {
  @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_5313(%var_5311: uint16, %var_5312: Tensor[(297, 1), uint16]) -> (Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %769 = fn (%var_5290: uint16, %var_5291: Tensor[(297, 1), uint16]) -> (Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %756 = cast(meta[relay.Constant][34] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %757 = cast(%var_5290, dtype="uint16") /* ty=uint16 */;
    %758 = cast(%var_5291, dtype="uint16") /* ty=Tensor[(297, 1), uint16] */;
    %759 = reshape(%756, newshape=[8, 6, 11]) /* ty=Tensor[(8, 6, 11), float32] */;
    %760 = reshape(%757, newshape=[]) /* ty=uint16 */;
    %761 = reshape(%758, newshape=[297]) /* ty=Tensor[(297), uint16] */;
    %762 = @func_2325(%759, %760, %761) /* ty=(Tensor[(8, 6, 11), uint32], Tensor[(176), uint32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %763 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %764 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %765 = @func_3553() /* ty=Tensor[(10, 4, 12), float32] */;
    %766 = %762.3;
    %767 = %763.1;
    %768 = %764.0;
    (%765, %766, meta[relay.Constant][34] /* ty=Tensor[(528), float32] */, %var_5290, %var_5291, %767, %768)
  };
  %769(%var_5311, %var_5312) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_2389() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %770 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %771 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %772 = %770.0;
  %773 = %771.1;
  (%772, %773)
}

def @func_13568() -> (Tensor[(10, 4, 12), float32],) {
  @func_13566() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_10686() -> (Tensor[(10, 4, 12), float32],) {
  @func_10684() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_10338() -> (Tensor[(10, 4, 12), float32],) {
  @func_10336() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_7241() -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) {
  @func_7239() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) */
}

def @func_13604(%var_13571: Tensor[(10, 15, 13), int32], %var_13572: Tensor[(10, 15, 13), int32]) -> (Tensor[(10, 15, 13), bool],) {
  %774 = cast(%var_13572, dtype="bool") /* ty=Tensor[(10, 15, 13), bool] */;
  %775 = shape_of(%var_13571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %776 = cast(%var_13571, dtype="bool") /* ty=Tensor[(10, 15, 13), bool] */;
  %777 = dyn.reshape(%774, %775, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %778 = not_equal(%776, %777) /* ty=Tensor[(10, 15, 13), bool] */;
  (%778,)
}

def @func_796() -> (Tensor[(10, 4, 12), float32],) {
  %779 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  (%779,)
}

def @func_811() -> Tensor[(10, 4, 12), float32] {
  @func_809() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_1446() -> (Tensor[(10, 4, 12), float64],) {
  @func_1444() /* ty=(Tensor[(10, 4, 12), float64],) */
}

def @func_13436() -> (Tensor[(10, 4, 12), float32], Tensor[(6, 7, 5), float32], Tensor[(210), float32]) {
  @func_13434() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(6, 7, 5), float32], Tensor[(210), float32]) */
}

def @func_5814(%var_5799: Tensor[(700), int16], %var_5800: Tensor[(1920), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), uint8], Tensor[(3136), float32], Tensor[(700), int16], Tensor[(1920), float64], Tensor[(10, 4, 12), float32]) {
  %780 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %781 = @func_3795() /* ty=(Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %782 = @func_5731() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %783 = cast(meta[relay.Constant][35] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %784 = cast(%var_5799, dtype="int16") /* ty=Tensor[(700), int16] */;
  %785 = cast(%var_5800, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %786 = reshape(%783, newshape=[2, 1568]) /* ty=Tensor[(2, 1568), float32] */;
  %787 = reshape(%784, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %788 = reshape(%785, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %789 = @func_4207(%786, %787, %788) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) */;
  %790 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %791 = %780.0;
  %792 = %781.2;
  %793 = %782.1;
  %794 = %789.2;
  %795 = %790.0;
  (%791, %792, %793, %794, meta[relay.Constant][35] /* ty=Tensor[(3136), float32] */, %var_5799, %var_5800, %795)
}

def @func_7254(%var_7253: uint16) -> (Tensor[(10, 4, 12), float32], Tensor[(528), float32], uint16, Tensor[(297), uint16]) {
  %804 = fn (%var_7249: uint16) -> (Tensor[(10, 4, 12), float32], Tensor[(528), float32], uint16, Tensor[(297), uint16]) {
    %796 = @func_6265() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %797 = cast(%var_7249, dtype="uint16") /* ty=uint16 */;
    %798 = cast(meta[relay.Constant][36] /* ty=Tensor[(297), uint16] */, dtype="uint16") /* ty=Tensor[(297), uint16] */;
    %799 = reshape(%797, newshape=[]) /* ty=uint16 */;
    %800 = reshape(%798, newshape=[297, 1]) /* ty=Tensor[(297, 1), uint16] */;
    %801 = @func_5310(%799, %800) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %802 = %796.0;
    %803 = %801.2;
    (%802, %803, %var_7249, meta[relay.Constant][36] /* ty=Tensor[(297), uint16] */)
  };
  %804(%var_7253) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(528), float32], uint16, Tensor[(297), uint16]) */
}

def @func_8595() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %805 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %806 = @func_3396() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %807 = %805.1;
  %808 = %806.2;
  (%807, %808)
}

def @func_8969(%var_8966: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %809 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %810 = @func_8761() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %811 = cast(%var_8966, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %812 = reshape(%811, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %813 = @func_2519(%812) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %814 = %809.0;
  %815 = %810.1;
  %816 = %813.2;
  (%814, %815, %816, %var_8966)
}

def @func_1758() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %817 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %818 = %817.0;
  %819 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  (%818, %819)
}

def @func_3726() -> Tensor[(10, 4, 12), float32] {
  %820 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_2643() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %820() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_6447() -> Tensor[(10, 4, 12), float32] {
  %821 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %821.1
}

def @func_3428() -> Tensor[(10, 4, 12), float32] {
  %823 = fn () -> Tensor[(10, 4, 12), float32] {
    %822 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %822.0
  };
  %823() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_5160() -> Tensor[(10, 4, 12), float32] {
  @func_5158() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_9482() -> (Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %829 = fn () -> (Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
    %824 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
    %825 = @func_7895() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %826 = %824.1;
    %827 = @func_9032() /* ty=Tensor[(10, 4, 12), float64] */;
    %828 = %825.0;
    (%826, %827, %828)
  };
  %829() /* ty=(Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */
}

def @func_6449() -> Tensor[(10, 4, 12), float32] {
  @func_6447() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_5669() -> (Tensor[(10, 4, 12), float64],) {
  %832 = fn () -> (Tensor[(10, 4, 12), float64],) {
    %830 = @func_1444() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %831 = %830.0;
    (%831,)
  };
  %832() /* ty=(Tensor[(10, 4, 12), float64],) */
}

def @func_1695() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) {
  @func_1693() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) */
}

def @func_5072() -> (Tensor[(10, 4, 12), float32],) {
  %835 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %833 = @func_3334() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %834 = %833.1;
    (%834,)
  };
  %835() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_6669() -> (uint16, Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float64]) {
  %836 = @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */;
  %837 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %838 = cast(meta[relay.Constant][37] /* ty=Tensor[(700), int16] */, dtype="int16") /* ty=Tensor[(700), int16] */;
  %839 = reshape(%838, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %840 = @func_1444() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %841 = %836.2;
  %842 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
  %843 = %837.0;
  %844 = @func_6492() /* ty=Tensor[(10, 4, 12), float32] */;
  %845 = @func_2986(%839) /* ty=Tensor[(14, 10, 5), int16] */;
  %846 = %840.0;
  (%841, %842, %843, %844, %845, meta[relay.Constant][37] /* ty=Tensor[(700), int16] */, %846)
}

def @func_7896() -> (Tensor[(10, 4, 12), float64],) {
  %849 = fn () -> (Tensor[(10, 4, 12), float64],) {
    %847 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
    %848 = %847.1;
    (%848,)
  };
  %849() /* ty=(Tensor[(10, 4, 12), float64],) */
}

def @func_9120() -> Tensor[(10, 4, 12), float32] {
  @func_9118() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_3265() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */
}

def @func_13093() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %853 = fn () -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
    %850 = @func_5071() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %851 = @func_11223() /* ty=Tensor[(10, 4, 12), float64] */;
    %852 = %850.0;
    (%851, %852)
  };
  %853() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_10226(%var_10224: Tensor[(14, 6, 2), float64]) -> Tensor[(14, 6, 2), float64] {
  @func_10223(%var_10224) /* ty=Tensor[(14, 6, 2), float64] */
}

def @func_1867() -> Tensor[(10, 4, 12), float32] {
  @func_1865() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_9268() -> Tensor[(3, 8, 8), float64] {
  %855 = fn () -> Tensor[(3, 8, 8), float64] {
    %854 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 8, 8), float64] */, dtype="float64") /* ty=Tensor[(3, 8, 8), float64] */;
    acos(%854) /* ty=Tensor[(3, 8, 8), float64] */
  };
  %855() /* ty=Tensor[(3, 8, 8), float64] */
}

def @func_7282() -> Tensor[(10, 4, 12), float64] {
  %856 = @func_5031() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */;
  %856.1
}

def @func_8763() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_8761() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_12718(%var_12716: float64, %var_12717: Tensor[(4, 12, 8), float64]) -> Tensor[(4, 12, 8), float64] {
  %859 = fn (%var_12708: float64, %var_12709: Tensor[(4, 12, 8), float64]) -> Tensor[(4, 12, 8), float64] {
    %857 = cast(%var_12708, dtype="float64") /* ty=float64 */;
    %858 = cast(%var_12709, dtype="float64") /* ty=Tensor[(4, 12, 8), float64] */;
    mod(%857, %858) /* ty=Tensor[(4, 12, 8), float64] */
  };
  %859(%var_12716, %var_12717) /* ty=Tensor[(4, 12, 8), float64] */
}

def @func_1339(%var_1303: Tensor[(4, 4, 11), uint32], %var_1304: Tensor[(4, 4, 11), uint32]) -> (Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) {
  %860 = cast(%var_1304, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %861 = shape_of(%var_1303, dtype="int32") /* ty=Tensor[(3), int32] */;
  %862 = cast(%var_1303, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %863 = dyn.reshape(%860, %861, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %864 = less(%862, %863) /* ty=Tensor[(4, 4, 11), bool] */;
  %865 = cast(meta[relay.Constant][39] /* ty=Tensor[(4, 4, 11), bool] */, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %866 = shape_of(%864, dtype="int32") /* ty=Tensor[(3), int32] */;
  %867 = cast(%864, dtype="bool") /* ty=Tensor[(4, 4, 11), bool] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %869 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %870 = greater_equal(%867, %868) /* ty=Tensor[(4, 4, 11), bool] */;
  %871 = %869.0;
  (%870, %871)
}

def @func_1979() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) {
  %882 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) {
    %872 = @func_1693() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) */;
    %873 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %874 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %875 = cast(meta[relay.Constant][40] /* ty=Tensor[(4, 1, 6), float64] */, dtype="float64") /* ty=Tensor[(4, 1, 6), float64] */;
    %876 = cosh(%875) /* ty=Tensor[(4, 1, 6), float64] */;
    %877 = cast(%876, dtype="float32") /* ty=Tensor[(4, 1, 6), float32] */;
    %878 = %872.1;
    %879 = %873.0;
    %880 = %874.0;
    %881 = sinh(%877) /* ty=Tensor[(4, 1, 6), float32] */;
    (%878, %879, %880, %881)
  };
  %882() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */
}

def @func_2114(%var_2112: Tensor[(14, 3, 7), float32]) -> (Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) {
  @func_2111(%var_2112) /* ty=(Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) */
}

def @func_5911() -> Tensor[(10, 4, 12), float64] {
  %883 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %883.5
}

def @func_11643() -> Tensor[(10, 4, 12), float64] {
  %884 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %884.0
}

def @func_1204() -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %885 = cast(meta[relay.Constant][41] /* ty=Tensor[(520), int8] */, dtype="int8") /* ty=Tensor[(520), int8] */;
  %886 = reshape(%885, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %887 = @func_985(%886) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) */;
  %888 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %889 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %890 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %891 = %887.2;
  %892 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %893 = %888.0;
  %894 = %889.0;
  (%890, %891, meta[relay.Constant][41] /* ty=Tensor[(520), int8] */, %892, %893, %894)
}

def @func_9690() -> Tensor[(10, 4, 12), float32] {
  @func_6492() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_6417() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_6415() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_10107() -> Tensor[(12, 14, 12), float64] {
  @func_10105() /* ty=Tensor[(12, 14, 12), float64] */
}

def @func_9354() -> (Tensor[(10, 4, 12), float32],) {
  %896 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %895 = @func_2712() /* ty=Tensor[(10, 4, 12), float32] */;
    (%895,)
  };
  %896() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_6563() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  @func_6561() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_12333() -> (Tensor[(10, 4, 12), float64], Tensor[(2, 5, 6), float32], uint16, Tensor[(3, 8, 8), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64], Tensor[(1, 297), float64]) {
  @func_12331() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(2, 5, 6), float32], uint16, Tensor[(3, 8, 8), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64], Tensor[(1, 297), float64]) */
}

def @func_6494() -> Tensor[(10, 4, 12), float32] {
  @func_6492() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_3961() -> (Tensor[(10, 4, 12), float32],) {
  %898 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %897 = @func_3725() /* ty=Tensor[(10, 4, 12), float32] */;
    (%897,)
  };
  %898() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_1905() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_8854() -> (Tensor[(10, 4, 12), float64],) {
  @func_8852() /* ty=(Tensor[(10, 4, 12), float64],) */
}

def @func_13728() -> Tensor[(10, 4, 12), float32] {
  %899 = @func_11104() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %899.0
}

def @func_10965() -> Tensor[(10, 4, 12), float32] {
  %900 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %900.0
}

def @func_1726(%var_1716: Tensor[(176), uint32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) {
  %901 = cast(%var_1716, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %902 = cast(%var_1716, dtype="uint32") /* ty=Tensor[(176), uint32] */;
  %903 = reshape(%901, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %904 = reshape(%902, newshape=[4, 4, 11]) /* ty=Tensor[(4, 4, 11), uint32] */;
  %905 = @func_1339(%903, %904) /* ty=(Tensor[(4, 4, 11), bool], Tensor[(10, 4, 12), float32]) */;
  %906 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %907 = %905.1;
  (%906, %907, %var_1716)
}

def @func_8460() -> Tensor[(10, 4, 12), float64] {
  %909 = fn () -> Tensor[(10, 4, 12), float64] {
    %908 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
    %908.0
  };
  %909() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_2246() -> (Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  %910 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %911 = cast(meta[relay.Constant][42] /* ty=Tensor[(88, 2), uint32] */, dtype="uint32") /* ty=Tensor[(88, 2), uint32] */;
  %912 = reshape(%911, newshape=[176]) /* ty=Tensor[(176), uint32] */;
  %913 = @func_1726(%912) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) */;
  %914 = %913.2;
  %915 = cast(%914, dtype="float32") /* ty=Tensor[(176), float32] */;
  %916 = asin(%915) /* ty=Tensor[(176), float32] */;
  %917 = cast(%916, dtype="float32") /* ty=Tensor[(176), float32] */;
  %918 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %919 = %910.0;
  %920 = log10(%917) /* ty=Tensor[(176), float32] */;
  (%918, meta[relay.Constant][42] /* ty=Tensor[(88, 2), uint32] */, %919, %920)
}

def @func_3263() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %921 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %922 = %921.0;
  %923 = cast(%922, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %924 = reshape(%923, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %925 = @func_665(%924) /* ty=(Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */;
  %926 = %925.1;
  (%922, %926)
}

def @func_1760() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_3571() -> (Tensor[(10, 4, 12), float32],) {
  %927 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %928 = %927.1;
  (%928,)
}

def @func_4966(%var_4939: uint16) -> (Tensor[(10, 4, 12), float32], Tensor[(2, 5, 6), float32]) {
  %929 = cast(%var_4939, dtype="uint16") /* ty=uint16 */;
  %930 = cast(meta[relay.Constant][43] /* ty=Tensor[(2, 5, 6), uint16] */, dtype="uint16") /* ty=Tensor[(2, 5, 6), uint16] */;
  %931 = left_shift(%929, %930) /* ty=Tensor[(2, 5, 6), uint16] */;
  %932 = cast(%931, dtype="float32") /* ty=Tensor[(2, 5, 6), float32] */;
  %933 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %934 = acosh(%932) /* ty=Tensor[(2, 5, 6), float32] */;
  (%933, %934)
}

def @func_9994(%var_9963: Tensor[(520), int8], %var_9975: uint16, %var_9976: Tensor[(297), uint16]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %935 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %936 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %937 = cast(%var_9963, dtype="int8") /* ty=Tensor[(520), int8] */;
  %938 = reshape(%937, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %939 = @func_985(%938) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) */;
  %940 = cast(%var_9975, dtype="uint16") /* ty=uint16 */;
  %941 = cast(%var_9976, dtype="uint16") /* ty=Tensor[(297), uint16] */;
  %942 = reshape(%940, newshape=[]) /* ty=uint16 */;
  %943 = reshape(%941, newshape=[297, 1]) /* ty=Tensor[(297, 1), uint16] */;
  %944 = @func_5310(%942, %943) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(297), uint16], Tensor[(528), float32], uint16, Tensor[(297, 1), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %945 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %946 = @func_3709() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %947 = %935.0;
  %948 = %936.0;
  %949 = %939.5;
  %950 = %944.5;
  %951 = %945.0;
  %952 = %946.1;
  (%947, %948, %949, %var_9963, %950, %var_9975, %var_9976, %951, %952)
}

def @func_1729(%var_1727: Tensor[(176), uint32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) {
  @func_1726(%var_1727) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) */
}

def @func_5776() -> (Tensor[(10, 4, 12), float32],) {
  %953 = @func_4642() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %954 = %953.1;
  (%954,)
}

def @func_6182(%var_6179: Tensor[(16, 3, 9), float64], %var_6180: Tensor[(1, 700), int16], %var_6181: Tensor[(3136), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(3136), float32], Tensor[(16, 3, 9), float64], Tensor[(4, 700), uint8]) {
  @func_6177(%var_6179, %var_6180, %var_6181) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(3136), float32], Tensor[(16, 3, 9), float64], Tensor[(4, 700), uint8]) */
}

def @func_5031() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  %955 = @func_4269() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
  %956 = @func_3263() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %957 = %955.1;
  %958 = %956.0;
  (%957, %958)
}

def @func_12522() -> (Tensor[(10, 4, 12), float32],) {
  %961 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %959 = @func_11104() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %960 = %959.0;
    (%960,)
  };
  %961() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_7936() -> (Tensor[(10, 4, 12), float64], Tensor[(12, 5, 5), float32]) {
  %965 = fn () -> (Tensor[(10, 4, 12), float64], Tensor[(12, 5, 5), float32]) {
    %962 = @func_7757() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %963 = %962.0;
    %964 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
    (%963, %964)
  };
  %965() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(12, 5, 5), float32]) */
}

def @func_4981(%var_4979: Tensor[(6, 8, 5), float64]) -> (Tensor[(6, 8, 5), float64],) {
  @func_4978(%var_4979) /* ty=(Tensor[(6, 8, 5), float64],) */
}

def @func_10830() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %970 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %966 = @func_1978() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(4, 1, 6), float32]) */;
    %967 = @func_6669() /* ty=(uint16, Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float64]) */;
    %968 = %966.0;
    %969 = %967.2;
    (%968, %969)
  };
  %970() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_9646() -> Tensor[(10, 4, 12), float32] {
  @func_2712() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_12019(%var_12018: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(3136), float64], Tensor[(10, 4, 12), float32]) {
  %983 = fn (%var_11994: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(3136), float64], Tensor[(10, 4, 12), float32]) {
    %971 = @func_9481() /* ty=(Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
    %972 = @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %973 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %974 = %973.2;
    %975 = cast(%var_11994, dtype="float64") /* ty=Tensor[(3136), float64] */;
    %976 = shape_of(%974, dtype="int32") /* ty=Tensor[(1), int32] */;
    %977 = cast(%974, dtype="float64") /* ty=Tensor[(3136), float64] */;
    %978 = dyn.reshape(%975, %976, newshape=[]) /* ty=Tensor[(?), float64] */;
    %979 = %971.2;
    %980 = %972.0;
    %981 = power(%977, %978) /* ty=Tensor[(3136), float64] */;
    %982 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
    (%979, %980, %981, %982)
  };
  %983(%var_12018) /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(3136), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_6072(%var_6069: Tensor[(10, 4, 12), float32], %var_6070: Tensor[(3136), float32], %var_6071: Tensor[(297), float64]) -> (Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) {
  @func_6067(%var_6069, %var_6070, %var_6071) /* ty=(Tensor[(10, 4, 12), int64], Tensor[(10, 4, 12), float32], uint16, Tensor[(14, 14, 16), float64], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), int64], Tensor[(10, 4, 12), float32], Tensor[(176), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64]) */
}

def @func_9656() -> (Tensor[(10, 4, 12), float32],) {
  @func_9654() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_1266() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) {
  %984 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %985 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %986 = %984.0;
  %987 = %985.0;
  (%986, %987)
}

def @func_8631() -> (Tensor[(10, 4, 12), float32],) {
  @func_8629() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_12907(%var_12905: Tensor[(12, 14, 12), float64]) -> Tensor[(12, 14, 12), float32] {
  @func_12904(%var_12905) /* ty=Tensor[(12, 14, 12), float32] */
}

def @func_11834() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  %992 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
    %988 = @func_2432() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %989 = @func_10615() /* ty=(Tensor[(176), float32],) */;
    %990 = %988.0;
    %991 = %989.0;
    (%990, %991)
  };
  %992() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */
}

def @func_13465() -> (Tensor[(10, 4, 12), float32],) {
  @func_13463() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_2433() -> (Tensor[(10, 4, 12), float32],) {
  %995 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %993 = @func_1266() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
    %994 = %993.1;
    (%994,)
  };
  %995() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_5226(%var_5211: Tensor[(700), float64], %var_5217: Tensor[(294), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(14, 3, 7), bool], Tensor[(294), float32]) {
  %996 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %997 = cast(%var_5211, dtype="float64") /* ty=Tensor[(700), float64] */;
  %998 = cast(meta[relay.Constant][44] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %999 = reshape(%997, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %1000 = reshape(%998, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1001 = @func_2631(%999, %1000) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1002 = cast(%var_5217, dtype="float32") /* ty=Tensor[(294), float32] */;
  %1003 = reshape(%1002, newshape=[14, 3, 7]) /* ty=Tensor[(14, 3, 7), float32] */;
  %1004 = @func_2111(%1003) /* ty=(Tensor[(14, 3, 7), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 3, 7), bool]) */;
  %1005 = %996.0;
  %1006 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  %1007 = %1001.5;
  %1008 = %1004.3;
  (%1005, %1006, %1007, %var_5211, meta[relay.Constant][44] /* ty=Tensor[(3136), float32] */, %1008, %var_5217)
}

def @func_2635(%var_2633: Tensor[(10, 10, 7), float64], %var_2634: Tensor[(3136), float32]) -> (Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  @func_2631(%var_2633, %var_2634) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */
}

def @func_13778() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  @func_13776() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */
}

def @func_988(%var_986: Tensor[(520), int8]) -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) {
  @func_985(%var_986) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) */
}

def @func_583() -> Tensor[(10, 4, 12), float32] {
  @func_581() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_12492(%var_12490: int16) -> (Tensor[(2, 7, 1), bool],) {
  @func_12489(%var_12490) /* ty=(Tensor[(2, 7, 1), bool],) */
}

def @func_6342(%var_6306: Tensor[(8, 154), int32], %var_6316: Tensor[(20, 48), int64]) -> (Tensor[(12, 5, 5), float32], Tensor[(8, 154), float64], Tensor[(20, 48), float64], Tensor[(10, 4, 12), float32]) {
  %1009 = @func_4733() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) */;
  %1010 = cast(%var_6306, dtype="int32") /* ty=Tensor[(8, 154), int32] */;
  %1011 = cast(%var_6306, dtype="int32") /* ty=Tensor[(8, 154), int32] */;
  %1012 = reshape(%1010, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
  %1013 = reshape(%1011, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
  %1014 = @func_3535(%1012, %1013) /* ty=(Tensor[(11, 8, 14), bool],) */;
  %1015 = %1014.0;
  %1016 = cast(%1015, dtype="float64") /* ty=Tensor[(11, 8, 14), float64] */;
  %1017 = shape_of(%var_6306, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1018 = cast(%var_6306, dtype="float64") /* ty=Tensor[(8, 154), float64] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1020 = cast(%var_6316, dtype="int64") /* ty=Tensor[(20, 48), int64] */;
  %1021 = cast(%var_6316, dtype="int64") /* ty=Tensor[(20, 48), int64] */;
  %1022 = reshape(%1020, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), int64] */;
  %1023 = reshape(%1021, newshape=[16, 6, 10]) /* ty=Tensor[(16, 6, 10), int64] */;
  %1024 = @func_5398(%1022, %1023) /* ty=(Tensor[(16, 6, 10), int64], Tensor[(16, 6, 10), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32]) */;
  %1025 = %1024.1;
  %1026 = cast(%1025, dtype="float64") /* ty=Tensor[(16, 6, 10), float64] */;
  %1027 = shape_of(%var_6316, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1028 = cast(%var_6316, dtype="float64") /* ty=Tensor[(20, 48), float64] */;
  %1029 = dyn.reshape(%1026, %1027, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1030 = @func_1936() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1031 = %1009.6;
  %1032 = power(%1018, %1019) /* ty=Tensor[(8, 154), float64] */;
  %1033 = floor_divide(%1028, %1029) /* ty=Tensor[(20, 48), float64] */;
  %1034 = %1030.0;
  (%1031, %1032, %1033, %1034)
}

def @func_12817(%var_12815: Tensor[(10, 6, 12), float32]) -> Tensor[(10, 6, 12), float32] {
  @func_12814(%var_12815) /* ty=Tensor[(10, 6, 12), float32] */
}

def @func_3795() -> (Tensor[(176), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1035 = @func_2246() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(88, 2), uint32], Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %1036 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %1037 = @func_2053() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1038 = %1035.3;
  %1039 = %1036.0;
  %1040 = %1037.0;
  (%1038, %1039, %1040)
}

def @func_10565(%var_10564: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64], Tensor[(10, 4, 12), float32]) {
  %1045 = fn (%var_10551: Tensor[(12, 9, 11), float64]) -> (Tensor[(12, 9, 11), float64], Tensor[(10, 4, 12), float32]) {
    %1041 = cast(%var_10551, dtype="float64") /* ty=Tensor[(12, 9, 11), float64] */;
    %1042 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %1043 = tan(%1041) /* ty=Tensor[(12, 9, 11), float64] */;
    %1044 = %1042.0;
    (%1043, %1044)
  };
  %1045(%var_10564) /* ty=(Tensor[(12, 9, 11), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_3334() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1046 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1047 = %1046.0;
  %1048 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1047, %1048)
}

def @func_11286(%var_11284: Tensor[(5, 140), float64], %var_11285: Tensor[(3136), float32]) -> (Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(5, 140), float64], Tensor[(3136), float32]) {
  %1058 = fn (%var_11278: Tensor[(5, 140), float64], %var_11279: Tensor[(3136), float32]) -> (Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(5, 140), float64], Tensor[(3136), float32]) {
    %1049 = @func_7239() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) */;
    %1050 = cast(%var_11278, dtype="float64") /* ty=Tensor[(5, 140), float64] */;
    %1051 = cast(%var_11279, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1052 = reshape(%1050, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
    %1053 = reshape(%1051, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %1054 = @func_2631(%1052, %1053) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %1055 = %1049.4;
    %1056 = @func_9646() /* ty=Tensor[(10, 4, 12), float32] */;
    %1057 = %1054.1;
    (%1055, %1056, %1057, %var_11278, %var_11279)
  };
  %1058(%var_11284, %var_11285) /* ty=(Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(5, 140), float64], Tensor[(3136), float32]) */
}

def @func_4212(%var_4209: Tensor[(2, 1568), float32], %var_4210: Tensor[(700), int16], %var_4211: Tensor[(1920), float64]) -> (Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) {
  @func_4207(%var_4209, %var_4210, %var_4211) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) */
}

def @func_13700() -> Tensor[(10, 4, 12), float32] {
  %1060 = fn () -> Tensor[(10, 4, 12), float32] {
    %1059 = @func_9353() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1059.0
  };
  %1060() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_2758() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1061 = @func_1377() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1062 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1063 = %1061.1;
  %1064 = %1062.0;
  (%1063, %1064)
}

def @func_11705() -> Tensor[(10, 4, 12), float32] {
  @func_11703() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_5733() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_5731() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_5158() -> Tensor[(10, 4, 12), float32] {
  %1065 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1065.0
}

def @func_681() -> Tensor[(10, 4, 12), float32] {
  %1067 = fn () -> Tensor[(10, 4, 12), float32] {
    %1066 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1066.0
  };
  %1067() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_12507(%var_12505: Tensor[(1274), uint8]) -> (Tensor[(10, 4, 12), float32], Tensor[(12, 1, 4), float32], float32, Tensor[(48), float32], Tensor[(1274), uint8]) {
  %1068 = cast(8.91757f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1069 = cast(meta[relay.Constant][45] /* ty=Tensor[(48), float32] */, dtype="float32") /* ty=Tensor[(48), float32] */;
  %1070 = cast(%var_12505, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
  %1071 = reshape(%1068, newshape=[]) /* ty=float32 */;
  %1072 = reshape(%1069, newshape=[12, 1, 4]) /* ty=Tensor[(12, 1, 4), float32] */;
  %1073 = reshape(%1070, newshape=[1, 1274]) /* ty=Tensor[(1, 1274), uint8] */;
  %1074 = @func_12223(%1071, %1072, %1073) /* ty=(Tensor[(12, 1, 4), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1, 1274), uint8]) */;
  %1075 = @func_5158() /* ty=Tensor[(10, 4, 12), float32] */;
  %1076 = %1074.0;
  (%1075, %1076, 8.91757f /* ty=float32 */, meta[relay.Constant][45] /* ty=Tensor[(48), float32] */, %var_12505)
}

def @func_8110(%var_8109: Tensor[(10, 4, 12), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %1091 = fn (%var_8068: Tensor[(10, 4, 12), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
    %1077 = @func_6737() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1078 = @func_5505() /* ty=(Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32]) */;
    %1079 = @func_2712() /* ty=Tensor[(10, 4, 12), float32] */;
    %1080 = cast(%var_8068, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
    %1081 = shape_of(%1079, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1082 = cast(%1079, dtype="bool") /* ty=Tensor[(10, 4, 12), bool] */;
    %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1084 = cast(meta[relay.Constant][46] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1085 = reshape(%1084, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %1086 = @func_937(%1085) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %1087 = %1077.0;
    %1088 = %1078.1;
    %1089 = logical_or(%1082, %1083) /* ty=Tensor[(10, 4, 12), bool] */;
    %1090 = %1086.1;
    (%1087, %1088, %1089, %1090, meta[relay.Constant][46] /* ty=Tensor[(3136), float32] */)
  };
  %1091(%var_8109) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */
}

def @func_8202() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_8200() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_11807() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_11805() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_9999(%var_9996: Tensor[(520), int8], %var_9997: uint16, %var_9998: Tensor[(297), uint16]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_9994(%var_9996, %var_9997, %var_9998) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_809() -> Tensor[(10, 4, 12), float32] {
  %1092 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1092.0
}

def @func_4735() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) {
  @func_4733() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) */
}

def @func_7185() -> Tensor[(10, 4, 12), float32] {
  %1094 = fn () -> Tensor[(10, 4, 12), float32] {
    %1093 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1093.0
  };
  %1094() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_2643() -> Tensor[(10, 4, 12), float32] {
  %1095 = @func_2432() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1095.0
}

def @func_7284() -> Tensor[(10, 4, 12), float64] {
  @func_7282() /* ty=Tensor[(10, 4, 12), float64] */
}

def @func_6739() -> (Tensor[(10, 4, 12), float32],) {
  @func_6737() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_1206() -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */
}

def @func_11805() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1096 = @func_3223() /* ty=Tensor[(10, 4, 12), float32] */;
  %1097 = @func_2643() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1096, %1097)
}

def @func_12396() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_12394() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_8825() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 88), uint32], Tensor[(10, 4, 12), float32]) {
  %1106 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 88), uint32], Tensor[(10, 4, 12), float32]) {
    %1098 = @func_4733() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), uint8], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(12, 5, 5), float32], Tensor[(975), uint8]) */;
    %1099 = cast(meta[relay.Constant][47] /* ty=Tensor[(2, 88), uint32] */, dtype="uint32") /* ty=Tensor[(2, 88), uint32] */;
    %1100 = reshape(%1099, newshape=[176]) /* ty=Tensor[(176), uint32] */;
    %1101 = @func_1726(%1100) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(176), uint32]) */;
    %1102 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1103 = %1098.1;
    %1104 = %1101.1;
    %1105 = %1102.1;
    (%1103, %1104, meta[relay.Constant][47] /* ty=Tensor[(2, 88), uint32] */, %1105)
  };
  %1106() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 88), uint32], Tensor[(10, 4, 12), float32]) */
}

def @func_10684() -> (Tensor[(10, 4, 12), float32],) {
  %1107 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1107,)
}

def @func_3977(%var_3962: Tensor[(15, 13, 5), uint8], %var_3963: Tensor[(15, 13, 5), uint8]) -> (Tensor[(15, 13, 5), uint8], Tensor[(12, 5, 5), float32]) {
  %1108 = cast(%var_3963, dtype="uint8") /* ty=Tensor[(15, 13, 5), uint8] */;
  %1109 = shape_of(%var_3962, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1110 = cast(%var_3962, dtype="uint8") /* ty=Tensor[(15, 13, 5), uint8] */;
  %1111 = dyn.reshape(%1108, %1109, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1112 = logical_xor(%1110, %1111) /* ty=Tensor[(15, 13, 5), uint8] */;
  %1113 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  (%1112, %1113)
}

def @func_5818(%var_5816: Tensor[(700), int16], %var_5817: Tensor[(1920), float64]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), uint8], Tensor[(3136), float32], Tensor[(700), int16], Tensor[(1920), float64], Tensor[(10, 4, 12), float32]) {
  @func_5814(%var_5816, %var_5817) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), uint8], Tensor[(3136), float32], Tensor[(700), int16], Tensor[(1920), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_7757() -> (Tensor[(10, 4, 12), float64],) {
  %1114 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1115 = %1114.0;
  (%1115,)
}

def @func_6124(%var_6123: Tensor[(7, 13, 15), float64]) -> (Tensor[(7, 13, 15), float64], Tensor[(10, 4, 12), float32]) {
  %1120 = fn (%var_6113: Tensor[(7, 13, 15), float64]) -> (Tensor[(7, 13, 15), float64], Tensor[(10, 4, 12), float32]) {
    %1116 = cast(%var_6113, dtype="float64") /* ty=Tensor[(7, 13, 15), float64] */;
    %1117 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1118 = sinh(%1116) /* ty=Tensor[(7, 13, 15), float64] */;
    %1119 = %1117.0;
    (%1118, %1119)
  };
  %1120(%var_6123) /* ty=(Tensor[(7, 13, 15), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_10710() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1124 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %1121 = @func_9107() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1122 = %1121.3;
    %1123 = @func_3553() /* ty=Tensor[(10, 4, 12), float32] */;
    (%1122, %1123)
  };
  %1124() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_2914() -> (Tensor[(10, 4, 12), float32],) {
  @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_8200() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1125 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1126 = %1125.0;
  %1127 = cast(%1126, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %1128 = reshape(%1127, newshape=[10, 4, 12]) /* ty=Tensor[(10, 4, 12), float32] */;
  %1129 = @func_665(%1128) /* ty=(Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */;
  %1130 = @func_1758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1131 = %1129.1;
  %1132 = %1130.0;
  %1133 = @func_581() /* ty=Tensor[(10, 4, 12), float32] */;
  %1134 = @func_7184() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1126, %1131, %1132, %1133, %1134)
}

def @func_9032() -> Tensor[(10, 4, 12), float64] {
  %1135 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1135.0
}

def @func_12122() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  %1142 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
    %1136 = @func_3709() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1137 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1138 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
    %1139 = %1136.0;
    %1140 = %1137.0;
    %1141 = %1138.0;
    (%1139, %1140, %1141)
  };
  %1142() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */
}

def @func_12331() -> (Tensor[(10, 4, 12), float64], Tensor[(2, 5, 6), float32], uint16, Tensor[(3, 8, 8), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(297), float64], Tensor[(1, 297), float64]) {
  %1143 = cast(meta[relay.Constant][48] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %1144 = reshape(%1143, newshape=[]) /* ty=uint16 */;
  %1145 = @func_4966(%1144) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(2, 5, 6), float32]) */;
  %1146 = @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1147 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 297), float64] */, dtype="float64") /* ty=Tensor[(1, 297), float64] */;
  %1148 = reshape(%1147, newshape=[297]) /* ty=Tensor[(297), float64] */;
  %1149 = @func_7152(%1148) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(3136), float32], Tensor[(297), float64], Tensor[(14, 10, 5), int16], Tensor[(10, 4, 12), float32]) */;
  %1150 = @func_12182() /* ty=Tensor[(10, 4, 12), float64] */;
  %1151 = %1145.1;
  %1152 = @func_9267() /* ty=Tensor[(3, 8, 8), float64] */;
  %1153 = @func_1025() /* ty=Tensor[(10, 4, 12), float32] */;
  %1154 = %1146.0;
  %1155 = %1149.3;
  (%1150, %1151, meta[relay.Constant][48] /* ty=uint16 */, %1152, %1153, %1154, %1155, meta[relay.Constant][49] /* ty=Tensor[(1, 297), float64] */)
}

def @func_3169() -> (Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) {
  @func_3167() /* ty=(Tensor[(520), int8], Tensor[(176), uint32], uint16, Tensor[(297), uint16]) */
}

def @func_2631(%var_2542: Tensor[(10, 10, 7), float64], %var_2628: Tensor[(3136), float32]) -> (Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %1156 = cast(%var_2542, dtype="float64") /* ty=Tensor[(10, 10, 7), float64] */;
  %1157 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1158 = @func_574() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1159 = cast(%var_2628, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1160 = reshape(%1159, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1161 = @func_937(%1160) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1162 = sin(%1156) /* ty=Tensor[(10, 10, 7), float64] */;
  %1163 = %1157.0;
  %1164 = %1158.0;
  %1165 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %1166 = %1161.1;
  (%1162, %1163, %1164, %1165, %1166, %var_2628)
}

def @func_5884() -> (Tensor[(10, 4, 12), float64],) {
  %1169 = fn () -> (Tensor[(10, 4, 12), float64],) {
    %1167 = @func_1109() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %1168 = %1167.0;
    (%1168,)
  };
  %1169() /* ty=(Tensor[(10, 4, 12), float64],) */
}

def @func_625() -> (Tensor[(10, 4, 12), float32],) {
  @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_8597() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_8595() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_3396() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1170 = @func_2432() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1171 = @func_796() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1172 = %1170.0;
  %1173 = %1171.0;
  %1174 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1172, %1173, %1174)
}

def @func_9291(%var_9279: Tensor[(9, 2, 9), float64]) -> Tensor[(9, 2, 9), float64] {
  %1175 = cast(meta[relay.Constant][50] /* ty=Tensor[(1, 2, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 2, 9), float64] */;
  %1176 = cast(%var_9279, dtype="float64") /* ty=Tensor[(9, 2, 9), float64] */;
  maximum(%1175, %1176) /* ty=Tensor[(9, 2, 9), float64] */
}

def @func_2330(%var_2327: Tensor[(8, 6, 11), float32], %var_2328: uint16, %var_2329: Tensor[(297), uint16]) -> (Tensor[(8, 6, 11), uint32], Tensor[(176), uint32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_2325(%var_2327, %var_2328, %var_2329) /* ty=(Tensor[(8, 6, 11), uint32], Tensor[(176), uint32], uint16, Tensor[(297), uint16], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_12228(%var_12225: float32, %var_12226: Tensor[(12, 1, 4), float32], %var_12227: Tensor[(1, 1274), uint8]) -> (Tensor[(12, 1, 4), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1, 1274), uint8]) {
  @func_12223(%var_12225, %var_12226, %var_12227) /* ty=(Tensor[(12, 1, 4), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1, 1274), uint8]) */
}

def @func_5507() -> (Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32]) {
  @func_5505() /* ty=(Tensor[(12, 5, 5), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_8534(%var_8532: Tensor[(16), float64], %var_8533: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(2, 8, 5), float64], Tensor[(16), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) {
  %1190 = fn (%var_8499: Tensor[(16), float64], %var_8521: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(2, 8, 5), float64], Tensor[(16), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) {
    %1177 = @func_1903() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1178 = cast(%var_8499, dtype="float64") /* ty=Tensor[(16), float64] */;
    %1179 = reshape(%1178, newshape=[2, 8, 1]) /* ty=Tensor[(2, 8, 1), float64] */;
    %1180 = @func_4841(%1179) /* ty=(Tensor[(2, 8, 5), float64],) */;
    %1181 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1182 = cast(%var_8521, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1183 = reshape(%1182, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %1184 = @func_937(%1183) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %1185 = %1177.1;
    %1186 = %1180.0;
    %1187 = %1181.2;
    %1188 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
    %1189 = %1184.0;
    (%1185, %1186, %var_8499, %1187, %1188, %1189, %var_8521)
  };
  %1190(%var_8532, %var_8533) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(2, 8, 5), float64], Tensor[(16), float64], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32]) */
}

def @func_10384() -> (Tensor[(10, 4, 12), float32], Tensor[(15, 13, 11), float64]) {
  %1197 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(15, 13, 11), float64]) {
    %1191 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1192 = @func_10217() /* ty=(Tensor[(15, 13, 11), bool],) */;
    %1193 = %1192.0;
    %1194 = cast(%1193, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
    %1195 = %1191.0;
    %1196 = atan(%1194) /* ty=Tensor[(15, 13, 11), float64] */;
    (%1195, %1196)
  };
  %1197() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(15, 13, 11), float64]) */
}

def @func_13463() -> (Tensor[(10, 4, 12), float32],) {
  %1198 = @func_9690() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1198,)
}

def @func_10277() -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) {
  @func_10275() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(10, 4, 12), bool], Tensor[(10, 4, 12), float64]) */
}

def @func_3336() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_3334() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_3502(%var_3501: Tensor[(1274), uint8]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1274), uint8]) {
  %1204 = fn (%var_3483: Tensor[(1274), uint8]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1274), uint8]) {
    %1199 = @func_623() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1200 = cast(%var_3483, dtype="uint8") /* ty=Tensor[(1274), uint8] */;
    %1201 = reshape(%1200, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), uint8] */;
    %1202 = %1199.0;
    %1203 = @func_2137(%1201) /* ty=Tensor[(14, 13, 7), uint8] */;
    (%1202, %1203, %var_3483)
  };
  %1204(%var_3501) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 13, 7), uint8], Tensor[(1274), uint8]) */
}

def @func_7828(%var_7825: Tensor[(12, 5, 5), float32], %var_7826: Tensor[(1232), int32], %var_7827: Tensor[(12, 5, 5), float32]) -> (Tensor[(12, 5, 5), uint32], Tensor[(11, 8, 14), bool], Tensor[(1232), int32], Tensor[(12, 5, 5), uint8], Tensor[(12, 5, 5), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1227 = fn (%var_7781: Tensor[(12, 5, 5), float32], %var_7795: Tensor[(1232), int32], %var_7811: Tensor[(12, 5, 5), float32]) -> (Tensor[(12, 5, 5), uint32], Tensor[(11, 8, 14), bool], Tensor[(1232), int32], Tensor[(12, 5, 5), uint8], Tensor[(12, 5, 5), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %1205 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
    %1206 = cast(%var_7781, dtype="uint32") /* ty=Tensor[(12, 5, 5), uint32] */;
    %1207 = shape_of(%1205, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1208 = cast(%1205, dtype="uint32") /* ty=Tensor[(12, 5, 5), uint32] */;
    %1209 = dyn.reshape(%1206, %1207, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1210 = cast(%var_7795, dtype="int32") /* ty=Tensor[(1232), int32] */;
    %1211 = cast(%var_7795, dtype="int32") /* ty=Tensor[(1232), int32] */;
    %1212 = reshape(%1210, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
    %1213 = reshape(%1211, newshape=[11, 8, 14]) /* ty=Tensor[(11, 8, 14), int32] */;
    %1214 = @func_3535(%1212, %1213) /* ty=(Tensor[(11, 8, 14), bool],) */;
    %1215 = cast(%var_7811, dtype="uint8") /* ty=Tensor[(12, 5, 5), uint8] */;
    %1216 = shape_of(%var_7781, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1217 = cast(%var_7781, dtype="uint8") /* ty=Tensor[(12, 5, 5), uint8] */;
    %1218 = dyn.reshape(%1215, %1216, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1219 = cast(%var_7781, dtype="float64") /* ty=Tensor[(12, 5, 5), float64] */;
    %1220 = @func_2758() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1221 = right_shift(%1208, %1209) /* ty=Tensor[(12, 5, 5), uint32] */;
    %1222 = %1214.0;
    %1223 = minimum(%1217, %1218) /* ty=Tensor[(12, 5, 5), uint8] */;
    %1224 = sin(%1219) /* ty=Tensor[(12, 5, 5), float64] */;
    %1225 = %1220.0;
    %1226 = @func_1865() /* ty=Tensor[(10, 4, 12), float32] */;
    (%1221, %1222, %var_7795, %1223, %1224, %1225, %1226)
  };
  %1227(%var_7825, %var_7826, %var_7827) /* ty=(Tensor[(12, 5, 5), uint32], Tensor[(11, 8, 14), bool], Tensor[(1232), int32], Tensor[(12, 5, 5), uint8], Tensor[(12, 5, 5), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_4207(%var_4144: Tensor[(2, 1568), float32], %var_4180: Tensor[(700), int16], %var_4189: Tensor[(1920), float64]) -> (Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) {
  %1228 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 1568), float32] */, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1229 = reshape(%1228, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %1230 = cast(%var_4144, dtype="uint8") /* ty=Tensor[(2, 1568), uint8] */;
  %1231 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(2, 1568), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1232 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 1568), float32] */, dtype="uint8") /* ty=Tensor[(2, 1568), uint8] */;
  %1233 = dyn.reshape(%1230, %1231, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %1234 = cast(%var_4180, dtype="int16") /* ty=Tensor[(700), int16] */;
  %1235 = reshape(%1234, newshape=[14, 10, 5]) /* ty=Tensor[(14, 10, 5), int16] */;
  %1236 = cast(%var_4189, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1237 = cast(meta[relay.Constant][51] /* ty=Tensor[(2, 1568), float32] */, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1238 = reshape(%1236, newshape=[16, 12, 10]) /* ty=Tensor[(16, 12, 10), float64] */;
  %1239 = reshape(%1237, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1240 = @func_3073(%1238, %1239) /* ty=(Tensor[(16, 12, 10), float64], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1241 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1242 = cast(%var_4144, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1243 = sqrt(%1242) /* ty=Tensor[(2, 1568), float32] */;
  %1244 = cast(%1243, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1245 = exp(%1244) /* ty=Tensor[(2, 1568), float32] */;
  %1246 = cast(%1245, dtype="float32") /* ty=Tensor[(2, 1568), float32] */;
  %1247 = @func_3449() /* ty=Tensor[(12, 5, 5), float32] */;
  %1248 = @func_42(%1229) /* ty=Tensor[(14, 14, 16), float64] */;
  %1249 = bitwise_and(%1232, %1233) /* ty=Tensor[(2, 1568), uint8] */;
  %1250 = @func_2986(%1235) /* ty=Tensor[(14, 10, 5), int16] */;
  %1251 = %1240.2;
  %1252 = %1241.0;
  %1253 = sin(%1246) /* ty=Tensor[(2, 1568), float32] */;
  (%1247, %1248, %1249, %1250, %var_4180, %1251, %var_4189, %1252, %1253)
}

def @func_10092() -> Tensor[(10, 4, 12), float32] {
  @func_10090() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_3398() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_3396() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_8972(%var_8970: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(3136), float32]) {
  @func_8969(%var_8970) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */
}

def @func_9294(%var_9292: Tensor[(9, 2, 9), float64]) -> Tensor[(9, 2, 9), float64] {
  @func_9291(%var_9292) /* ty=Tensor[(9, 2, 9), float64] */
}

def @func_9118() -> Tensor[(10, 4, 12), float32] {
  %1254 = @func_3960() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1254.0
}

def @func_6492() -> Tensor[(10, 4, 12), float32] {
  %1255 = @func_2389() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
  %1255.1
}

def @func_7068() -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32]) {
  %1260 = fn () -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32]) {
    %1256 = @func_3937() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), bool]) */;
    %1257 = @func_4269() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
    %1258 = %1256.0;
    %1259 = %1257.1;
    (%1258, %1259)
  };
  %1260() /* ty=(Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32]) */
}

def @func_985(%var_960: Tensor[(520), int8]) -> (Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8]) {
  %1261 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
  %1262 = %1261.5;
  %1263 = cast(%1262, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
  %1264 = cast(%var_960, dtype="int8") /* ty=Tensor[(520), int8] */;
  %1265 = cast(meta[relay.Constant][52] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1266 = reshape(%1264, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %1267 = reshape(%1265, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1268 = @func_760(%1266, %1267) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
  %1269 = %1268.2;
  %1270 = cast(%1269, dtype="int8") /* ty=Tensor[(520), int8] */;
  %1271 = cast(meta[relay.Constant][52] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1272 = reshape(%1270, newshape=[520]) /* ty=Tensor[(520), int8] */;
  %1273 = reshape(%1271, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1274 = @func_760(%1272, %1273) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 13), bool], Tensor[(520), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */;
  %1275 = sqrt(%1263) /* ty=Tensor[(10, 4, 12), float32] */;
  %1276 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
  %1277 = %1274.2;
  (%1275, %1269, %var_960, meta[relay.Constant][52] /* ty=Tensor[(3136), float32] */, %1276, %1277)
}

def @func_3035() -> (Tensor[(10, 4, 12), float32], Tensor[(176), float32]) {
  @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */
}

def @func_10218() -> (Tensor[(15, 13, 11), bool],) {
  %1285 = fn () -> (Tensor[(15, 13, 11), bool],) {
    %1278 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 13, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 13, 11), float64] */;
    %1279 = sigmoid(%1278) /* ty=Tensor[(15, 13, 11), float64] */;
    %1280 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 13, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
    %1281 = shape_of(%1279, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1282 = cast(%1279, dtype="bool") /* ty=Tensor[(15, 13, 11), bool] */;
    %1283 = dyn.reshape(%1280, %1281, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1284 = equal(%1282, %1283) /* ty=Tensor[(15, 13, 11), bool] */;
    (%1284,)
  };
  %1285() /* ty=(Tensor[(15, 13, 11), bool],) */
}

def @func_13730() -> Tensor[(10, 4, 12), float32] {
  @func_13728() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_11014() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_11012() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_4969(%var_4967: uint16) -> (Tensor[(10, 4, 12), float32], Tensor[(2, 5, 6), float32]) {
  @func_4966(%var_4967) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(2, 5, 6), float32]) */
}

def @func_13014() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  @func_13012() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */
}

def @func_7380(%var_7378: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(297), float64]) {
  @func_7377(%var_7378) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), uint32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(3136), float32], Tensor[(297), float64]) */
}

def @func_3449() -> Tensor[(12, 5, 5), float32] {
  %1286 = cast(meta[relay.Constant][54] /* ty=Tensor[(12, 5, 5), float32] */, dtype="float32") /* ty=Tensor[(12, 5, 5), float32] */;
  log10(%1286) /* ty=Tensor[(12, 5, 5), float32] */
}

def @func_8271() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1290 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %1287 = @func_2912() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1288 = %1287.0;
    %1289 = @func_5439() /* ty=Tensor[(10, 4, 12), float32] */;
    (%1288, %1289)
  };
  %1290() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_5778() -> (Tensor[(10, 4, 12), float32],) {
  @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_3073(%var_3062: Tensor[(16, 12, 10), float64], %var_3068: Tensor[(3136), float32]) -> (Tensor[(16, 12, 10), float64], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %1291 = cast(%var_3062, dtype="float64") /* ty=Tensor[(16, 12, 10), float64] */;
  %1292 = cast(%var_3068, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1293 = reshape(%1292, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
  %1294 = cosh(%1291) /* ty=Tensor[(16, 12, 10), float64] */;
  %1295 = @func_42(%1293) /* ty=Tensor[(14, 14, 16), float64] */;
  (%1294, %1295, %var_3068)
}

def @func_2054() -> (Tensor[(10, 4, 12), float32],) {
  %1297 = fn () -> (Tensor[(10, 4, 12), float32],) {
    %1296 = @func_1577() /* ty=Tensor[(10, 4, 12), float32] */;
    (%1296,)
  };
  %1297() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_4978(%var_4971: Tensor[(6, 8, 5), float64]) -> (Tensor[(6, 8, 5), float64],) {
  %1298 = cast(%var_4971, dtype="float64") /* ty=Tensor[(6, 8, 5), float64] */;
  %1299 = atanh(%1298) /* ty=Tensor[(6, 8, 5), float64] */;
  (%1299,)
}

def @func_44(%var_43: Tensor[(14, 14, 16), float32]) -> Tensor[(14, 14, 16), float64] {
  %1304 = fn (%var_4: Tensor[(14, 14, 16), float32]) -> Tensor[(14, 14, 16), float64] {
    %1300 = cast(meta[relay.Constant][55] /* ty=Tensor[(14, 1, 16), float32] */, dtype="bool") /* ty=Tensor[(14, 1, 16), bool] */;
    %1301 = cast(%var_4, dtype="bool") /* ty=Tensor[(14, 14, 16), bool] */;
    %1302 = not_equal(%1300, %1301) /* ty=Tensor[(14, 14, 16), bool] */;
    %1303 = cast(%1302, dtype="float64") /* ty=Tensor[(14, 14, 16), float64] */;
    asinh(%1303) /* ty=Tensor[(14, 14, 16), float64] */
  };
  %1304(%var_43) /* ty=Tensor[(14, 14, 16), float64] */
}

def @func_4477(%var_4475: Tensor[(700), int16], %var_4476: Tensor[(3136), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) {
  @func_4473(%var_4475, %var_4476) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_7302() -> Tensor[(10, 4, 12), float32] {
  %1305 = fn () -> Tensor[(10, 4, 12), float32] {
    @func_1577() /* ty=Tensor[(10, 4, 12), float32] */
  };
  %1305() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_12534() -> Tensor[(10, 4, 12), float32] {
  @func_12532() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_6266() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1310 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
    %1306 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1307 = @func_2788() /* ty=(Tensor[(10, 4, 12), float32],) */;
    %1308 = %1306.0;
    %1309 = %1307.0;
    (%1308, %1309)
  };
  %1310() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_7239() -> (Tensor[(14, 14, 16), float64], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(14, 14, 16), float64], Tensor[(1920), float64], Tensor[(3136), float32]) {
  %1311 = @func_5585() /* ty=(Tensor[(14, 14, 16), float64],) */;
  %1312 = cast(meta[relay.Constant][56] /* ty=Tensor[(700), float64] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %1313 = %1311.0;
  %1314 = cast(%1313, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
  %1315 = reshape(%1312, newshape=[10, 10, 7]) /* ty=Tensor[(10, 10, 7), float64] */;
  %1316 = reshape(%1314, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1317 = @func_2631(%1315, %1316) /* ty=(Tensor[(10, 10, 7), float64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1318 = cast(%1313, dtype="float32") /* ty=Tensor[(14, 14, 16), float32] */;
  %1319 = cast(meta[relay.Constant][56] /* ty=Tensor[(700), float64] */, dtype="int16") /* ty=Tensor[(700), int16] */;
  %1320 = cast(meta[relay.Constant][57] /* ty=Tensor[(1920), float64] */, dtype="float64") /* ty=Tensor[(1920), float64] */;
  %1321 = reshape(%1318, newshape=[2, 1568]) /* ty=Tensor[(2, 1568), float32] */;
  %1322 = reshape(%1319, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %1323 = reshape(%1320, newshape=[1920]) /* ty=Tensor[(1920), float64] */;
  %1324 = @func_4207(%1321, %1322, %1323) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 14, 16), float64], Tensor[(2, 1568), uint8], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(3136), float32], Tensor[(1920), float64], Tensor[(10, 4, 12), float32], Tensor[(2, 1568), float32]) */;
  %1325 = @func_2963() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
  %1326 = %1317.3;
  %1327 = %1324.1;
  %1328 = %1325.2;
  (%1313, %1326, meta[relay.Constant][56] /* ty=Tensor[(700), float64] */, %1327, meta[relay.Constant][57] /* ty=Tensor[(1920), float64] */, %1328)
}

def @func_5033() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) {
  @func_5031() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64]) */
}

def @func_1938() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  @func_1936() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_11104() -> (Tensor[(10, 4, 12), float32],) {
  %1329 = @func_5776() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1330 = %1329.0;
  (%1330,)
}

def @func_5731() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1331 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
  %1332 = @func_5158() /* ty=Tensor[(10, 4, 12), float32] */;
  (%1331, %1332)
}

def @func_2687() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %1339 = fn () -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
    %1333 = @func_1936() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1334 = cast(meta[relay.Constant][58] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1335 = reshape(%1334, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
    %1336 = @func_809() /* ty=Tensor[(10, 4, 12), float32] */;
    %1337 = %1333.0;
    %1338 = @func_42(%1335) /* ty=Tensor[(14, 14, 16), float64] */;
    (%1336, %1337, %1338, meta[relay.Constant][58] /* ty=Tensor[(3136), float32] */)
  };
  %1339() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */
}

def @func_7868(%var_7867: Tensor[(7, 13, 8), float64]) -> (Tensor[(7, 13, 8), float64],) {
  %1347 = fn (%var_7850: Tensor[(7, 13, 8), float64]) -> (Tensor[(7, 13, 8), float64],) {
    %1340 = cast(%var_7850, dtype="float64") /* ty=Tensor[(7, 13, 8), float64] */;
    %1341 = cos(%1340) /* ty=Tensor[(7, 13, 8), float64] */;
    %1342 = cast(%var_7850, dtype="float64") /* ty=Tensor[(7, 13, 8), float64] */;
    %1343 = shape_of(%1341, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1344 = cast(%1341, dtype="float64") /* ty=Tensor[(7, 13, 8), float64] */;
    %1345 = dyn.reshape(%1342, %1343, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1346 = floor_divide(%1344, %1345) /* ty=Tensor[(7, 13, 8), float64] */;
    (%1346,)
  };
  %1347(%var_7867) /* ty=(Tensor[(7, 13, 8), float64],) */
}

def @func_939(%var_938: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
  %1355 = fn (%var_932: Tensor[(3136), float32]) -> (Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) {
    %1348 = @func_909() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(3136, 1), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) */;
    %1349 = %1348.5;
    %1350 = cast(%1349, dtype="float32") /* ty=Tensor[(10, 4, 12), float32] */;
    %1351 = cast(%var_932, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1352 = reshape(%1351, newshape=[14, 14, 16]) /* ty=Tensor[(14, 14, 16), float32] */;
    %1353 = log10(%1350) /* ty=Tensor[(10, 4, 12), float32] */;
    %1354 = @func_42(%1352) /* ty=Tensor[(14, 14, 16), float64] */;
    (%1353, %1354, %var_932)
  };
  %1355(%var_938) /* ty=(Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */
}

def @func_3573() -> (Tensor[(10, 4, 12), float32],) {
  @func_3571() /* ty=(Tensor[(10, 4, 12), float32],) */
}

def @func_10967() -> Tensor[(10, 4, 12), float32] {
  @func_10965() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_9711() -> Tensor[(700), float64] {
  %1357 = fn () -> Tensor[(700), float64] {
    %1356 = @func_9583() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32], Tensor[(700), float64], Tensor[(10, 4, 12), bool]) */;
    %1356.2
  };
  %1357() /* ty=Tensor[(700), float64] */
}

def @func_5862() -> Tensor[(10, 4, 12), float32] {
  %1359 = fn () -> Tensor[(10, 4, 12), float32] {
    %1358 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
    %1358.0
  };
  %1359() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_6177(%var_6133: Tensor[(16, 3, 9), float64], %var_6157: Tensor[(1, 700), int16], %var_6158: Tensor[(3136), float32]) -> (Tensor[(12, 5, 5), float32], Tensor[(3136), float32], Tensor[(16, 3, 9), float64], Tensor[(4, 700), uint8]) {
  %1360 = cast(%var_6157, dtype="int16") /* ty=Tensor[(1, 700), int16] */;
  %1361 = cast(%var_6158, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1362 = reshape(%1360, newshape=[700]) /* ty=Tensor[(700), int16] */;
  %1363 = reshape(%1361, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1364 = @func_4473(%1362, %1363) /* ty=(Tensor[(12, 5, 5), float32], Tensor[(14, 10, 5), int16], Tensor[(700), int16], Tensor[(10, 4, 12), float32], Tensor[(5, 104), int8], Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */;
  %1365 = cast(%var_6133, dtype="float64") /* ty=Tensor[(16, 3, 9), float64] */;
  %1366 = sin(%1365) /* ty=Tensor[(16, 3, 9), float64] */;
  %1367 = cast(%1366, dtype="float64") /* ty=Tensor[(16, 3, 9), float64] */;
  %1368 = cast(%var_6157, dtype="uint8") /* ty=Tensor[(1, 700), uint8] */;
  %1369 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 700), int16] */, dtype="uint8") /* ty=Tensor[(4, 700), uint8] */;
  %1370 = %1364.0;
  %1371 = sigmoid(%1367) /* ty=Tensor[(16, 3, 9), float64] */;
  %1372 = left_shift(%1368, %1369) /* ty=Tensor[(4, 700), uint8] */;
  (%1370, %var_6158, %1371, %1372)
}

def @func_11623(%var_11619: Tensor[(15, 6, 15), int64], %var_11620: Tensor[(15, 6, 15), int64], %var_11621: Tensor[(700), int16], %var_11622: Tensor[(2, 960), float64]) -> (Tensor[(15, 6, 15), int64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(700), int16], Tensor[(2, 960), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) {
  @func_11617(%var_11619, %var_11620, %var_11621, %var_11622) /* ty=(Tensor[(15, 6, 15), int64], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(700), int16], Tensor[(2, 960), float32], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64]) */
}

def @func_1444() -> (Tensor[(10, 4, 12), float64],) {
  %1373 = @func_1204() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(520), int8], Tensor[(520), int8], Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */;
  %1374 = %1373.4;
  (%1374,)
}

def @func_6598() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %1379 = fn () -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
    %1375 = @func_5883() /* ty=(Tensor[(10, 4, 12), float64],) */;
    %1376 = @func_4524() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float32]) */;
    %1377 = %1375.0;
    %1378 = %1376.1;
    (%1377, %1378)
  };
  %1379() /* ty=(Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) */
}

def @func_9692() -> Tensor[(10, 4, 12), float32] {
  @func_9690() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_4270() -> (Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) {
  %1383 = fn () -> (Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) {
    %1380 = @func_2686() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32], Tensor[(14, 14, 16), float64], Tensor[(3136), float32]) */;
    %1381 = %1380.3;
    %1382 = @func_680() /* ty=Tensor[(10, 4, 12), float32] */;
    (%1381, %1382)
  };
  %1383() /* ty=(Tensor[(3136), float32], Tensor[(10, 4, 12), float32]) */
}

def @func_11346() -> (Tensor[(10, 4, 12), float32], Tensor[(10, 4, 12), float32]) {
  %1384 = @func_3033() /* ty=(Tensor[(10, 4, 12), float32], Tensor[(176), float32]) */;
  %1385 = @func_9359() /* ty=(Tensor[(10, 4, 12), float32],) */;
  %1386 = %1384.0;
  %1387 = %1385.0;
  (%1386, %1387)
}

def @func_10079() -> Tensor[(10, 4, 12), float32] {
  @func_10077() /* ty=Tensor[(10, 4, 12), float32] */
}

def @func_13776() -> (Tensor[(10, 4, 12), float64], Tensor[(10, 4, 12), float64]) {
  %1388 = @func_7895() /* ty=(Tensor[(10, 4, 12), float64],) */;
  %1389 = %1388.0;
  %1390 = @func_11223() /* ty=Tensor[(10, 4, 12), float64] */;
  (%1389, %1390)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen502/build/output.py:4840: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen502/build/output.py:4845: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen502/build/output.py:4866: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')

===================================
#[version = "0.0.5"]
def @main() -> ((Tensor[(1, 11, 15), float64],), ()) {
  let %x: Tensor[(1, 11, 15), float64] = meta[relay.Constant][0] /* ty=Tensor[(1, 11, 15), float64] */;
  let %x1: Tensor[(1, 11, 15), float64] = zeros_like(%x) /* ty=Tensor[(1, 11, 15), float64] */;
  let %x2: (Tensor[(1, 11, 15), float64],) = (%x,);
  %0 = zeros(shape=[1, 11, 15], dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  let %x3: (Tensor[(1, 11, 15), float64],) = (%0,);
  %1 = ones(shape=[1, 11, 15], dtype="float64") /* ty=Tensor[(1, 11, 15), float64] */;
  %2 = (%1,);
  %3 = %2.0;
  %4 = (
    let %x4: Tensor[(1, 11, 15), float64] = add(%x1, %3) /* ty=Tensor[(1, 11, 15), float64] */;
    ()
  );
  (%x2, %4)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen502/build/output.py", line 4871, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(165) tvmgen_default_fused_zeros_kernel0(double* __restrict__ T_full) {
  T_full[(((int)threadIdx.x))] = 0.000000e+00;
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


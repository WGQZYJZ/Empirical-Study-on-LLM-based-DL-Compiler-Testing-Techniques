import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_55 = relay.var("var_55", dtype = "float64", shape = (4, 7, 2))#candidate|55|(4, 7, 2)|var|float64
uop_56 = relay.log(var_55.astype('float64')) # shape=(4, 7, 2)
bop_60 = relay.multiply(var_55.astype('uint32'), relay.reshape(uop_56.astype('uint32'), relay.shape_of(var_55))) # shape=(4, 7, 2)
bop_69 = relay.logical_xor(bop_60.astype('int8'), relay.reshape(uop_56.astype('int8'), relay.shape_of(bop_60))) # shape=(4, 7, 2)
output = relay.Tuple([bop_69,])
output2 = relay.Tuple([bop_69,])
func_76 = relay.Function([var_55,], output)
mod['func_76'] = func_76
mod = relay.transform.InferType()(mod)
var_77 = relay.var("var_77", dtype = "float64", shape = (4, 7, 2))#candidate|77|(4, 7, 2)|var|float64
output = func_76(var_77)
func_78 = relay.Function([var_77], output)
mutated_mod['func_78'] = func_78
mutated_mod = relay.transform.InferType()(mutated_mod)
var_80 = relay.var("var_80", dtype = "float32", shape = (11, 13, 10))#candidate|80|(11, 13, 10)|var|float32
var_81 = relay.var("var_81", dtype = "float32", shape = (11, 13, 10))#candidate|81|(11, 13, 10)|var|float32
bop_82 = relay.not_equal(var_80.astype('bool'), relay.reshape(var_81.astype('bool'), relay.shape_of(var_80))) # shape=(11, 13, 10)
bop_97 = relay.bitwise_and(bop_82.astype('int16'), relay.reshape(var_81.astype('int16'), relay.shape_of(bop_82))) # shape=(11, 13, 10)
output = bop_97
output2 = bop_97
func_111 = relay.Function([var_80,var_81,], output)
mod['func_111'] = func_111
mod = relay.transform.InferType()(mod)
var_112 = relay.var("var_112", dtype = "float32", shape = (11, 13, 10))#candidate|112|(11, 13, 10)|var|float32
var_113 = relay.var("var_113", dtype = "float32", shape = (11, 13, 10))#candidate|113|(11, 13, 10)|var|float32
output = func_111(var_112,var_113,)
func_114 = relay.Function([var_112,var_113,], output)
mutated_mod['func_114'] = func_114
mutated_mod = relay.transform.InferType()(mutated_mod)
const_384 = relay.const(0.109392, dtype = "float32")#candidate|384|()|const|float32
var_385 = relay.var("var_385", dtype = "float32", shape = (3, 7, 15))#candidate|385|(3, 7, 15)|var|float32
bop_386 = relay.floor_divide(const_384.astype('float32'), var_385.astype('float32')) # shape=(3, 7, 15)
uop_407 = relay.sinh(bop_386.astype('float32')) # shape=(3, 7, 15)
uop_410 = relay.log2(uop_407.astype('float64')) # shape=(3, 7, 15)
uop_412 = relay.log(uop_410.astype('float32')) # shape=(3, 7, 15)
func_76_call = mod.get_global_var('func_76')
func_78_call = mutated_mod.get_global_var('func_78')
var_417 = relay.var("var_417", dtype = "float64", shape = (56,))#candidate|417|(56,)|var|float64
call_416 = relay.TupleGetItem(func_76_call(relay.reshape(var_417.astype('float64'), [4, 7, 2])), 0)
call_418 = relay.TupleGetItem(func_78_call(relay.reshape(var_417.astype('float64'), [4, 7, 2])), 0)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
var_420 = relay.var("var_420", dtype = "float32", shape = (1430,))#candidate|420|(1430,)|var|float32
call_419 = func_111_call(relay.reshape(var_420.astype('float32'), [11, 13, 10]), relay.reshape(var_420.astype('float32'), [11, 13, 10]), )
call_421 = func_111_call(relay.reshape(var_420.astype('float32'), [11, 13, 10]), relay.reshape(var_420.astype('float32'), [11, 13, 10]), )
output = relay.Tuple([uop_412,call_416,var_417,call_419,var_420,])
output2 = relay.Tuple([uop_412,call_418,var_417,call_421,var_420,])
func_433 = relay.Function([var_385,var_417,var_420,], output)
mod['func_433'] = func_433
mod = relay.transform.InferType()(mod)
var_434 = relay.var("var_434", dtype = "float32", shape = (3, 7, 15))#candidate|434|(3, 7, 15)|var|float32
var_435 = relay.var("var_435", dtype = "float64", shape = (56,))#candidate|435|(56,)|var|float64
var_436 = relay.var("var_436", dtype = "float32", shape = (1430,))#candidate|436|(1430,)|var|float32
output = func_433(var_434,var_435,var_436,)
func_437 = relay.Function([var_434,var_435,var_436,], output)
mutated_mod['func_437'] = func_437
mutated_mod = relay.transform.InferType()(mutated_mod)
const_483 = relay.const([[[2.460890,2.764461,7.102769,-1.839618,6.029555,-2.335441,4.396455,-9.976891,-1.062286,5.347231,-7.370836,9.394994,-3.858572,-2.961319,4.236097,-7.417878],[3.142877,3.567191,-0.435815,7.934012,8.400972,5.590987,6.847893,-9.028867,-8.907053,-3.515305,3.766992,-4.561212,-3.103554,-7.702872,-4.115137,-1.420442],[0.950080,-1.762297,2.011500,0.111171,-2.234019,-0.292250,-8.726333,4.390988,-6.170113,8.014711,7.657067,-6.653786,5.205097,8.684602,1.542443,8.763501],[8.714369,5.172856,-1.191180,4.419567,4.276201,-5.399580,3.454092,-7.547446,2.294745,2.634720,-2.835942,-8.723979,9.692035,5.290164,6.659746,5.841676],[6.475437,-5.890833,2.165999,-9.052650,8.357711,8.969793,-1.032937,-7.643632,5.596482,-6.919398,1.456893,8.037103,8.351275,-2.350468,-3.886471,7.872171],[-4.593937,3.544881,-0.435441,-7.040473,-2.870036,-8.159087,-4.581386,-0.242467,-0.198192,1.566003,-6.516892,-3.320005,8.875596,-8.405539,-0.879328,6.453850],[3.376864,4.713856,-0.079870,5.681596,8.592570,5.293275,4.107935,8.325302,4.448856,4.641411,-0.684024,8.101057,-5.221765,3.398439,1.104682,4.387953],[3.685761,-5.472222,8.585750,-8.290390,1.447817,-8.641643,7.711269,6.285632,-3.164654,-9.197870,-4.933187,-8.880279,-6.569270,-9.419437,1.484852,-7.192169],[-4.807257,-6.983661,6.165123,-6.672724,9.023802,8.671238,-7.631597,0.973513,3.154055,7.584968,2.693818,8.235791,0.931845,9.346618,3.546861,9.671061],[7.135888,3.949485,-0.537393,1.518900,-3.301202,0.064887,4.601833,9.075534,-1.958652,1.131969,6.330908,4.473963,-4.635848,4.295552,7.475080,8.561483],[-7.877851,8.130050,-4.132931,-2.801492,8.220096,0.488795,-8.984624,6.855931,-1.442033,-5.812874,9.281960,-3.556204,3.490399,-6.710622,7.958314,9.106707],[-0.887385,-4.750874,8.906306,-1.601169,-1.775591,-8.751260,-7.271984,-3.208722,-5.256753,-9.756889,-6.993683,8.175227,-7.233534,-8.534316,8.700072,-7.556914],[-4.753961,-5.256477,2.297566,-3.162351,-1.314460,6.476971,7.416622,9.382601,-6.195525,3.882331,4.722915,-4.810627,-6.560773,7.712726,-3.553069,-2.898700],[-4.379563,1.924569,9.835517,-7.059357,-7.373515,-0.647114,7.307532,2.349045,-4.451724,-7.126246,4.715165,3.275720,-4.009314,8.742985,-9.182347,6.088752],[-0.104612,7.756809,0.784042,4.214328,0.100264,7.749257,-6.701599,-8.365924,6.594992,-3.431096,-0.914803,6.663066,-1.591154,6.362363,-4.553889,0.027836],[3.905108,-1.713579,-8.648584,-1.131865,6.497134,-8.465235,-3.137739,-6.034963,-7.111062,-6.694422,7.430384,2.072965,-1.479366,-0.489904,9.926691,2.848407]],[[-8.803587,8.495490,-2.315514,-9.857815,1.985713,6.063853,-7.964645,-8.314963,-7.185330,0.839406,-7.957983,8.774548,0.966758,6.495725,7.572322,-7.970745],[-0.737023,8.621315,5.304082,-3.619767,-1.223476,4.059304,-2.356011,2.643857,-3.098185,-4.417216,0.781998,-4.839928,7.426725,-3.511688,-6.478080,0.145122],[-7.122959,1.615433,-6.871688,6.252784,8.418728,6.347941,-0.853561,-9.395909,5.985748,3.925630,-7.310857,-6.827243,6.172310,3.658927,7.336008,-2.929815],[6.097979,6.693209,5.876231,-9.784878,3.624822,-0.369338,3.703737,5.142176,5.264037,9.629550,-0.392991,-2.673921,-6.769375,0.904555,-3.495816,-8.105939],[-5.425244,3.255991,-9.435349,-8.153988,-8.150016,9.254096,-8.690427,-3.116299,4.945364,4.287441,0.233721,0.549198,3.705242,3.951032,-1.450155,3.804795],[-8.442817,-3.729213,0.634708,-8.892819,-3.286312,9.142274,-6.151083,-7.861448,7.301026,5.904686,4.574381,7.521024,-5.403469,-4.597678,-4.517948,3.740926],[2.229891,0.215829,-8.771340,-6.508443,7.843362,9.916091,2.808596,6.534260,-3.392035,-4.992628,4.728904,-9.946398,-4.757062,-4.633701,6.901694,6.784896],[0.605638,8.277953,7.838755,-0.341797,0.807272,-5.669305,-2.149622,6.186058,0.757375,-2.609769,8.817826,-1.546473,-9.514590,-8.342546,-6.115084,-2.955345],[-5.580087,8.547423,9.411371,-0.632821,-8.247561,7.516805,-6.453485,3.435102,-2.908524,-3.514682,-9.862988,-8.248602,4.886778,-9.278955,-6.779374,-0.335138],[-1.169130,-8.361974,2.890475,-1.967212,-0.960667,-4.930542,8.947896,-2.191054,-0.319318,3.224238,7.981265,8.962724,4.913478,-2.707960,-4.976555,-6.076446],[-2.454936,-8.762723,-7.666651,6.531318,-2.274202,1.092177,2.235736,-2.884935,2.857862,6.407391,5.852863,3.665854,-9.529954,-8.450712,-7.443959,-0.984579],[-9.190130,4.546379,1.160534,0.022345,-5.709394,6.825539,-0.423453,2.944394,-3.186461,-3.087183,2.754542,-8.966069,4.434394,-6.236721,3.901269,-8.007976],[2.782764,-7.208098,2.116682,5.214349,2.480932,2.832340,-6.100354,1.039550,2.818997,-6.127857,6.325979,0.288273,5.484479,1.107514,-1.960216,-1.682704],[1.772274,-4.550528,-6.364175,-4.908925,0.533537,7.622346,7.778140,-2.850689,-3.369074,3.324565,1.827894,-1.770591,3.483735,2.696006,-2.602686,1.280633],[7.200757,-0.767567,5.230579,6.078791,-7.011552,-9.940312,0.367494,4.684654,8.131003,5.141522,3.557291,-3.368334,3.716628,-7.896899,3.607056,7.483853],[7.897162,0.224809,1.700716,6.084208,1.390116,3.729432,-2.750416,1.940455,0.861576,-2.652057,-7.273742,3.562334,8.900104,4.230332,-1.810140,9.875897]],[[-1.349210,-3.854001,5.963135,-7.415219,-9.220868,2.416299,-0.424839,-3.324445,3.276151,-9.282392,5.612509,-6.629519,0.810157,-1.919102,-9.737084,3.858742],[-6.511482,-3.336409,-7.065193,-1.282473,-3.694716,7.508527,-7.937039,8.070627,0.616865,-8.762072,8.289026,9.991938,-9.349981,-4.631981,7.159772,-7.388782],[-0.946090,8.936091,4.959131,2.999507,2.974346,-5.334645,-9.198298,6.979854,8.346648,7.423608,-1.840286,1.203347,-1.268713,-5.642623,9.689036,5.128784],[4.304990,-9.884205,-9.643514,3.616122,1.904407,-3.322330,3.789916,5.743067,9.071648,9.899855,4.246782,-8.597107,2.803471,7.666372,7.408794,-1.077215],[9.112289,2.348093,-0.717754,0.563050,-7.860601,2.854811,3.563250,-7.737907,3.472177,8.548905,-2.319505,-3.747063,-9.528349,9.232734,-1.034917,-5.449695],[-4.586729,-1.352881,-3.432300,-4.488079,3.098871,-2.212551,-0.486809,8.887490,1.261039,-0.351701,-5.004326,7.519473,-7.424008,5.744782,-4.424605,-3.047628],[7.764804,6.070068,-9.838215,9.780655,6.160767,4.216101,-0.555332,-3.392394,8.338672,-5.799578,5.406312,-2.698509,-7.871240,4.551634,5.283777,6.165123],[-8.064693,4.848410,8.413375,-1.618150,-9.119224,-6.932545,-2.902983,-8.895750,-8.418967,6.795920,-2.732499,8.168592,5.058727,5.439160,0.194967,-5.462680],[2.503781,-8.435683,-0.740713,-1.500040,-2.602534,3.670536,5.827804,-0.433447,-7.913974,3.002696,0.306163,5.916433,0.150551,-8.431169,-6.465618,-8.404666],[-2.245855,-0.231769,3.634834,5.602330,5.118404,-8.099274,2.534860,-6.956397,3.898959,-9.617385,9.187201,4.767831,2.196846,2.006119,-4.256234,0.889815],[-1.271034,6.512928,-3.823747,-4.260428,-3.196034,-4.248640,0.510878,9.010293,0.574021,-4.163355,-3.134096,0.173607,7.753228,9.175049,2.006984,-4.056205],[-0.040815,5.447879,-7.277431,-0.914259,4.241832,-3.328170,-2.859914,3.439432,-2.469931,-7.569977,0.451419,-5.221346,-6.618252,2.348426,-7.343901,0.725540],[3.479433,-8.583689,-8.811222,-9.924333,5.019265,8.836048,4.531671,1.067720,-9.153794,-1.110811,-0.727843,-0.159789,-7.593777,-0.572806,7.469047,3.481386],[-3.828575,-5.238252,-1.870986,-2.204117,-3.004408,8.878958,-5.643006,5.228761,-4.993618,2.051817,-4.216317,0.496241,1.280960,6.224728,-3.565405,6.458900],[-6.464766,5.141937,1.327544,6.734365,1.345943,0.436709,2.626904,-2.898217,-2.391866,-5.154023,3.104194,8.651110,6.225490,2.634748,8.574869,1.451105],[4.554705,-2.454983,-3.917268,-0.021271,3.249199,-4.509355,-3.902193,-5.484916,-1.012435,3.118457,3.436637,-9.512486,8.956354,-9.513587,-2.930295,7.342470]]], dtype = "float32")#candidate|483|(3, 16, 16)|const|float32
uop_484 = relay.asinh(const_483.astype('float32')) # shape=(3, 16, 16)
bop_486 = relay.left_shift(uop_484.astype('int8'), relay.reshape(const_483.astype('int8'), relay.shape_of(uop_484))) # shape=(3, 16, 16)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_495 = relay.const([-5.943664,9.940488,1.227721,1.251432,-5.320001,3.506410,2.587318,-5.534123,1.338181,8.038950,-3.662225,-8.694925,7.909485,7.017792,-4.426116,-4.808983,6.610049,0.681092,7.335348,1.047812,-4.268290,-2.568495,6.034684,-1.078825,9.850318,6.719247,2.484613,-0.751657,8.585635,6.376156,-5.187397,-9.729082,-1.957606,-9.671434,-2.346124,4.862398,-2.504640,7.921802,-0.485599,7.587934,5.128637,7.664267,-6.830444,6.192318,3.932104,-3.152774,-2.274442,7.345318,-2.581036,-9.969058,-9.182200,1.849892,0.612877,-0.724216,-4.647763,4.381512,9.840752,9.921696,4.906108,4.512118,3.696729,-3.988794,-1.979266,-7.750740,5.915083,-4.845781,-6.386416,-3.555503,-3.537860,1.583469,-7.970799,-6.294577,0.805830,-4.985486,-2.373680,-6.447660,0.783715,-4.182925,-9.952604,-2.568154,3.178803,8.290451,4.280328,-7.257070,0.957566,-7.628197,-8.180036,5.646416,-1.767021,-1.725418,5.500584,0.668623,2.780357,-8.344504,-9.363691,4.381313,5.997739,-9.264527,2.592633,-7.919131,-6.708520,-8.088902,7.382035,6.890184,6.821042,2.909781,-9.981204,4.103006,-9.367021,7.219575,5.731076,-8.164410,-0.457728,0.995430,6.472529,-4.118638,-9.817223,2.041292,-2.542893,-5.881063,-4.531985,-1.042407,-0.005912,1.686268,1.103117,2.389594,6.798213,-4.571878,-9.808543,0.543116,7.168041,-0.232465,2.231954,-3.514863,-8.058674,3.988630,-5.111915,1.776944,-5.286745,3.232183,2.755706,-6.427831,-6.056820,-2.439854,-7.435485,1.012054,5.516601,8.533472,5.213472,-7.695735,-0.297862,-9.036532,8.387968,3.056735,-5.334803,-7.572064,-9.858448,1.031901,5.786911,3.888293,6.674016,9.604869,-6.718419,2.019305,-2.269391,9.375562,-4.258328,4.820621,9.860587,6.399156,6.500919,-4.860975,-5.424820,5.612497,6.745257,5.232745,5.176606,-6.814186,0.773592,0.039448,1.192539,8.920959,-0.374817,-2.470536,6.322986,-2.462965,1.891713,-8.124199,-8.267336,4.057200,3.467132,-7.439456,0.681670,-6.479722,7.343092,3.938653,6.856314,-4.969526,5.826062,6.766226,-7.201225,-4.966192,-6.062990,3.663382,-4.356138,5.368056,3.827957,-3.486589,-8.602491,2.086683,-2.282517,-9.897436,2.888596,3.811595,8.398191,-5.954764,-5.268982,0.029742,5.175124,6.899667,4.400872,7.899814,0.257434,-9.476550,2.628423,9.178604,-8.126771,3.891094,-6.737275,-0.285920,1.411047,9.361230,0.603890,3.806172,5.433254,-3.480086,8.225981,0.928433,1.792175,-7.882861,6.782256,-9.656287,8.627867,-4.029988,0.959997,-9.466081,1.197437,-9.582490,-1.817260,2.686126,0.709281,9.759228,-7.219446,9.105588,-6.919996,-1.032816,9.747743,3.140225,-8.120792,-6.388486,-5.261137,-5.764294,-6.506603,7.476845,-8.604898,-3.803041,-5.182060,-6.431835,-6.440950,8.829691,7.391609,-8.995183,-7.352360,-5.435921,1.975303,-7.313702,1.996494,9.710929,-2.818701,-6.475714,-4.085229,-5.358703,-7.661413,9.469537,-7.850940,1.876895,-6.630254,-1.360318,3.256186,2.260866,9.102944,5.792583,-5.726082,-5.235536,0.820082,-1.220979,9.590134,-9.811541,5.984247,-3.895467,-8.230595,-0.471962,5.264629,-9.517936,9.013185,-4.715653,4.940820,4.694529,-4.237303,-9.799136,-9.161231,7.273551,0.990800,-1.561294,1.782029,-1.152625,-4.243858,-3.401878,2.492834,8.070200,-1.536249,5.302530,8.919145,-5.403931,-6.571320,2.337119,9.803565,-1.020962,-7.758163,7.562711,8.889538,-5.686289,-8.010347,-5.156503,7.773525,-4.468421,8.258557,9.113806,-0.943159,-1.845997,6.032069,-9.854495,7.034470,4.790132,3.706283,7.631858,9.696303,-7.632930,1.068478,6.862494,-0.873094,-3.812648,-1.639114,-9.119502,7.147117,7.305735,-8.104929,1.473150,2.579943,-4.893872,-0.833348,5.916182,1.696416,5.336588,-5.613702,1.498709,2.412943,-6.765762,8.516607,-3.595386,-5.623939,2.277591,4.158105,-4.422560,-9.763893,8.157618,-5.027027,-0.623756,5.055045,-2.295523,-4.183368,-5.921598,-8.568092,3.281181,-0.093917,-3.319410,-9.933990,3.571441,8.334786,-5.075075,-8.354471,-8.685411,-3.399710,-4.619372,-6.779493,-8.029445,-0.956389,-4.775831,8.360296,1.577245,-6.044469,-7.739335,5.672632,-9.539077,3.271178,-4.756883,1.396587,3.956054,2.038865,3.434184,-2.105468,1.340015,-1.362964,1.155447,3.504563,5.447844,9.907530,-8.324475,-5.491715,7.308157,3.834769,8.219703,-7.578771,4.390172,1.628143,9.043032,-6.897088,-0.307777,3.549343,-0.121486,-7.658780,-2.799272,-3.545616,3.597942,4.937497,-4.741994,-5.189026,5.281363,-7.809455,5.392063,1.428619,-1.413967,7.528046,4.536092,-0.675506,8.801567,6.697430,-8.000489,6.498386,-6.616863,-7.054938,8.385704,5.250520,3.094592,6.553123,6.101434,-3.418358,-0.443958,-4.766273,-3.458078,-8.032046,-4.766851,9.007399,5.504573,-6.235764,3.120728,-2.315782,1.836273,-8.122762,-3.144955,6.376531,-3.292620,1.740862,6.092200,-7.377731,-3.332767,-2.492331,3.062972,-6.143221,-9.004290,-2.998262,5.459229,-0.512671,-8.753926,-7.810518,0.830497,-6.672213,7.991146,-2.219861,-8.681608,-1.676581,2.569361,3.705172,-1.338478,7.389803,-3.297433,-6.008814,6.083044,-4.411146,4.290630,-1.122226,0.958843,5.852069,-8.860419,0.283751,-5.664464,0.100386,-6.829659,-5.872413,-6.697892,8.661220,-5.587191,9.670867,8.558282,8.237752,-2.861277,9.070467,7.505982,-8.066032,-4.590731,-8.832506,6.610921,4.725813,-9.837755,-1.790500,1.511590,4.821917,8.050680,6.464967,-3.741168,-4.761810,-3.460677,-3.292031,-7.081830,1.691020,0.470995,9.401455,-4.743577,-5.902516,2.883247,0.116376,7.856760,-4.085108,8.126055,7.129315,-3.771787,-4.583826,6.285619,-4.422266,5.909022,-3.260320,3.530688,4.178170,-0.652935,-7.664040,-3.536058,9.839436,-7.245669,5.895258,7.130829,-1.438259,-0.051887,1.961453,0.823916,3.814893,2.251607,6.551377,4.164264,-7.865674,7.754173,8.796368,7.868485,9.079321,-5.998415,1.340149,0.150153,-8.185955,8.429717,1.259240,6.570182,3.281008,-0.642069,-9.847186,-0.227184,-9.149588,0.289715,2.656726,-1.310400,0.862965,2.036901,-5.420792,-1.080443,-2.471597,-5.873387,-5.920600,-0.357746,3.210656,1.865484,2.397273,-1.778555,5.785675,7.228043,-1.745572,2.366952,4.491306,1.331362,8.101384,-5.761465,0.424127,2.311577,-3.844695,7.798010,-7.916452,7.945649,-1.281054,3.161774,-9.485304,1.700622,-9.970004,-4.260782,3.785123,-5.221780,5.406956,3.350706,8.351686,-6.425346,-9.141617,9.811832,-6.530113,-2.908915,7.463903,-1.789206,3.744995,-2.641244,-5.647931,5.565357,-0.112302,-0.894284,-7.080201,-1.960158,-0.285911,1.801229,4.776066,-1.086548,-7.133396,-4.099061,-8.785756,1.327292,-8.203331,-3.536039,-6.040680,2.969169,7.290071,-0.957742,7.290748,4.261074,2.886880,-0.107389,-7.794749,1.514642,-6.131768,-8.950138,-2.289063,-6.727855,1.427295,-4.191916,-5.326454,7.431698,6.874431,9.244773,-9.634314,3.141676,0.656101,-6.662762,-0.364227,-3.534033,-7.398858,0.563397,-5.386422,1.157005,-5.409408,8.913398,5.707017,-3.614376,-7.191971,3.583058,1.701263,7.251744,4.545669,-3.403801,4.978051,-8.654399,7.938424,-8.267479,3.950955,0.760267,2.981010,-9.796095,4.871170,-4.279628,-4.828166,7.585187,-8.108605,-6.987004,-5.956733,8.052585,-7.699609,8.266841,3.419487,8.739839,-4.782728,6.137843,-1.860402,-2.970631,-5.093722,0.660855,0.083285,-5.196705,0.213281,2.855217,6.365742,3.576640,-1.541662,6.915396,1.809085,-7.499620,-8.049978,0.113306,0.960150,-7.181769,-9.113770,-8.456528,-4.083389,0.343618,4.499968,-6.032677,1.324410,-2.766857,-3.788996,-6.678644,9.590885,1.397374,-5.332203,-6.372752,2.665559,9.985371,-2.285915,9.856105,3.651336,0.652149,0.640821,3.058192,0.665273,-2.502943,-6.149918,0.687239,2.476676,3.481619,-2.978874,6.633903,-1.306089,7.287862,-9.926969,-0.492180,-5.572193,-9.633630,2.660415,-1.271240,-2.788299,-6.155884,2.264340,-2.758925,7.957602,-7.091012,5.795860,0.145438,3.592820,-9.755646,1.116342,3.213127,-9.610322,4.948704,6.472386,2.017790,-2.524156,-7.764578,0.368393,-8.355650,-3.166037,-6.446999,-4.530399,-6.829832,4.340094,9.456265,0.965396,-6.121866,-5.498564,9.859223,9.983282,4.361755,-7.686272,-1.038773,-5.812214,-7.288718,2.316193,-6.031364,-0.852560,8.174039,-7.312769,-0.030324,3.502865,7.830803,-0.531133,-2.753180,7.459007,1.589415,9.342138,-9.142056,-7.609445,2.251566,8.235312,2.645983,-7.163724,7.343393,3.287614,-0.863222,-6.353263,3.638971,-8.986098,5.635238,4.206413,1.579003,-3.017266,8.926412,8.320153,-5.888882,-5.641724,-3.278214,0.930598,5.296779,-8.767141,0.851880,-8.312314,8.823368,-4.241096,-3.537374,-8.507189,8.120695,5.586384,9.943006,2.442338,-4.833963,-9.967931,-1.653279,-5.009670,-8.892473,3.670792,-5.752277,-8.346553,-4.309656,-0.060417,3.832935,-3.846654,7.687785,2.697796,-4.103221,-1.230685,-3.545751,-1.952108,-5.772744,7.954986,0.103924,0.246842,-2.996835,2.380219,-3.988187,4.285454,-9.481563,-3.061653,-6.323712,4.139282,-6.354720,9.293012,-7.059828,2.836405,-7.590014,3.219074,8.970740,3.056507,0.580887,-8.083118,-4.491930,5.136496,-5.188770,-5.978367,5.317037,5.649690,-9.352588,-4.488755,-1.133228,5.272149,-6.088507,-4.471495,7.411997,8.729659,0.933687,3.324982,-2.238252,-4.596757,-1.022258,8.707563,-7.906440,-9.971542,2.377133,4.202689,-3.631379,-4.878260,-2.436782,1.995176,6.307159,-0.774835,-1.745057,-5.976943,-6.710815,9.607080,-6.621782,-0.030387,-7.165572,1.938509,9.857510,2.858688,0.099674,6.947148,2.555700,-1.856335,4.936423,1.944319,-1.197858,-9.409605,-0.887628,0.239106,-1.868979,-5.712956,-9.854134,-6.789242,-9.987044,-7.086353,-8.510789,5.449661,-4.560291,-1.034007,-5.713614,8.972520,3.020492,3.745729,-0.556513,-4.598560,-5.230532,3.605083,-0.905749,3.954075,6.811233,2.554999,6.375233,4.568545,-0.082737,2.940036,9.563178,6.797410,1.862949,0.706522,8.925993,-0.901146,-2.966987,6.242161,-7.315105,1.238220,-5.379498,9.264431,-9.974501,6.805904,-6.158062,9.072006,7.825196,-0.836539,-7.508788,-5.264387,-2.757502,5.440462,-2.117239,9.995369,5.644052,2.763470,1.652488,3.983196,4.244078,-9.565803,-5.060143,-7.551372,-5.283027,-0.542839,-1.435482,3.209771,6.470379,7.373586,2.228393,-2.663135,3.835165,-6.287610,-2.989790,-6.366092,-4.489421,6.402762,9.848157,-0.583837,5.683417,-2.533819,-8.880812,-1.973244,-6.801102,8.370924,-8.425344,9.375841,1.423073,5.170970,9.895883,-5.788421,-6.281586,-8.547410,0.545106,-9.280473,5.809730,-3.089443,-7.781087,-0.457821,-3.184719,-8.670108,3.110854,-3.801092,2.782695,7.501006,-7.328262,-4.012671,5.015168,-0.153987,5.635571,3.021779,9.649219,-4.376790,-9.607009,-6.511372,4.369237,-2.500404,-9.443531,7.894584,-9.266586,9.473311,-2.542417,0.819162,-8.389190,-3.621486,-8.490720,8.480258,0.494021,5.120252,-3.986632,-8.439680,-6.502645,-2.895776,-7.947566,-2.373893,-9.995082,7.331130,3.215371,8.160461,-9.459813,-5.765051,7.512397,-6.974644,3.494874,9.090992,9.746689,3.640129,-8.699116,3.124237,-6.686226,5.737339,6.151651,5.615914,9.970432,-3.326934,8.770309,0.126153,-1.830849,3.328402,3.080773,2.127404,3.873531,5.520288,9.093902,-8.903077,-2.927632,-8.436815,-5.863662,2.447131,-5.951606,6.754486,-9.452420,5.513294,-4.055480,-9.658541,0.403833,-4.331382,7.204657,-1.034080,-0.994440,-1.277851,-3.979167,-3.350437,-7.197955,-8.934868,-5.071738,-6.314342,-2.818223,9.866988,5.970203,9.474226,-9.393392,4.982533,0.764854,-2.977336,-5.237229,-3.281296,4.348652,4.864272,-4.215206,8.190277,2.216835,8.889578,8.253040,-8.630273,2.025861,1.340127,6.677389,9.878464,-1.811164,8.798039,-1.245327,9.746125,-0.277615,4.466567,-7.603197,6.838865,2.424072,-4.615484,-0.849291,2.459316,-4.433352,5.655947,9.104331,-7.451188,-8.913396,-4.056545,2.701955,-9.767098,-1.268416,8.206027,-7.824321,-5.772216,2.669861,-2.078562,5.217440,5.538364,-9.449167,2.762588,6.083763,4.663929,2.536242,-8.351988,5.616497,2.972996,9.464714,4.077394,2.540169,7.439885,-7.270867,-5.915500,4.282267,6.815909,-2.166663,0.937871,-6.446884,1.863497,-8.718090,-3.856271,0.517297,5.768265,-7.950478,-1.750900,-9.943767,4.339750,-8.660760,-7.259002,2.314240,3.598618,-0.019790,-8.692419,-1.314899,2.614581,6.341574,-0.770249,7.555996,6.835162,-2.026922,2.997494,7.767489,6.577323,7.301631,5.433923,2.603302,-0.284610,3.825510,-0.507005,6.725169,-3.759069,-0.238258,3.730472,-5.676626,3.010698,-8.224259,2.487252,7.008406,7.291896,-4.002924,-7.399007,-5.465683,-4.421755,8.407544,0.248602,-0.027775,8.044817,-1.607845,-5.081740,-5.214357,-1.433260,-2.272136,-5.952174,-3.192528,-9.785418,7.150429,5.236340,-5.691896,1.428530,-0.575610,-5.491872,2.999568,1.604225,-8.890839,-0.471995,-5.076106,4.053219,9.344893,-7.850779,-6.530680,-3.638984,1.528596,0.047827,8.488006,9.510638,2.355792,-3.445505,-3.301868,-7.519423,9.978130,1.311569,6.665012,5.368442,-3.697846,7.135893,-3.061876,-7.626504,4.764564,8.131925,4.514784,-8.294289,-3.424733,8.747592,7.133485,6.568420,-0.448263,-1.181126,-9.186501,-3.272539,2.922600,8.172422,-0.549223,-4.613839,6.749833,-3.639498,-9.680624,0.382646,-1.399558,3.660208,-4.663613,-7.248047,7.256030,4.853308,-7.559090,8.302597,4.111344,-2.688827,-7.777076,4.666148,-8.203016,-1.048931,-7.098520,-5.269369,-2.406247,-4.831034,-2.693825,-6.790917,4.089652,5.039304,1.527954,-8.782873,5.708394,-9.874165,8.089638,3.133817,-1.735900,-6.749363,9.631359,1.206771,9.606971,3.304881,-0.839948,9.583204,4.076330,-6.850902,4.248636,6.901476,4.295760,7.058274,5.319924,-0.579519,-4.342967,-4.950359,4.728223,-4.367716,-3.623386,8.754735,6.855254,-3.036721,1.747976,3.173430,1.894742,-8.278185,2.815914,4.749211,-8.814423,-5.160179,4.537071,6.597538,-4.275568,3.268695,0.925348,3.866310,7.871556,8.138287,-8.114781,-1.129925,8.586727,-1.070052,-0.406921,7.919064,-2.805266,2.852060,-9.442158,-4.150102,-8.585996,9.119974,-9.755930,-1.848926,6.060366,9.232039,2.174461,4.598590,-2.512897,7.108608,-6.202715,2.538572,-2.249996,-0.951868,4.443182,8.234632,-9.302990,4.145361,6.499829,-2.522216,6.514576,3.615247,5.059467,1.235322,-0.112053,-6.840291,1.280270,6.318053,7.385530,4.278407,9.712443,-1.745952,0.603524,-9.153358,-4.755232,7.596661,-5.132182,-0.092155,-2.539660,9.537234,-8.154616,7.159181,-7.951397,7.490248,-2.916487,-7.500092,0.528257,4.908283,9.051412,3.776315,-9.755294], dtype = "float32")#candidate|495|(1430,)|const|float32
call_494 = func_111_call(relay.reshape(const_495.astype('float32'), [11, 13, 10]), relay.reshape(const_495.astype('float32'), [11, 13, 10]), )
call_496 = func_111_call(relay.reshape(const_495.astype('float32'), [11, 13, 10]), relay.reshape(const_495.astype('float32'), [11, 13, 10]), )
output = relay.Tuple([bop_486,call_494,const_495,])
output2 = relay.Tuple([bop_486,call_496,const_495,])
func_501 = relay.Function([], output)
mod['func_501'] = func_501
mod = relay.transform.InferType()(mod)
mutated_mod['func_501'] = func_501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_501_call = mutated_mod.get_global_var('func_501')
call_502 = func_501_call()
output = call_502
func_503 = relay.Function([], output)
mutated_mod['func_503'] = func_503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_506 = relay.TupleGetItem(func_501_call(), 1)
call_507 = relay.TupleGetItem(func_503_call(), 1)
var_519 = relay.var("var_519", dtype = "int16", shape = (11, 13, 10))#candidate|519|(11, 13, 10)|var|int16
bop_520 = relay.floor_mod(call_506.astype('float64'), relay.reshape(var_519.astype('float64'), relay.shape_of(call_506))) # shape=(11, 13, 10)
bop_523 = relay.floor_mod(call_507.astype('float64'), relay.reshape(var_519.astype('float64'), relay.shape_of(call_507))) # shape=(11, 13, 10)
var_524 = relay.var("var_524", dtype = "int16", shape = (11, 13, 10))#candidate|524|(11, 13, 10)|var|int16
bop_525 = relay.less_equal(call_506.astype('bool'), relay.reshape(var_524.astype('bool'), relay.shape_of(call_506))) # shape=(11, 13, 10)
bop_528 = relay.less_equal(call_507.astype('bool'), relay.reshape(var_524.astype('bool'), relay.shape_of(call_507))) # shape=(11, 13, 10)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
call_556 = func_111_call(relay.reshape(bop_525.astype('float32'), [11, 13, 10]), relay.reshape(call_506.astype('float32'), [11, 13, 10]), )
call_557 = func_111_call(relay.reshape(bop_525.astype('float32'), [11, 13, 10]), relay.reshape(call_506.astype('float32'), [11, 13, 10]), )
bop_588 = relay.logical_or(bop_525.astype('bool'), relay.reshape(call_556.astype('bool'), relay.shape_of(bop_525))) # shape=(11, 13, 10)
bop_591 = relay.logical_or(bop_528.astype('bool'), relay.reshape(call_557.astype('bool'), relay.shape_of(bop_528))) # shape=(11, 13, 10)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
call_599 = func_111_call(relay.reshape(var_519.astype('float32'), [11, 13, 10]), relay.reshape(bop_520.astype('float32'), [11, 13, 10]), )
call_600 = func_111_call(relay.reshape(var_519.astype('float32'), [11, 13, 10]), relay.reshape(bop_520.astype('float32'), [11, 13, 10]), )
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
var_604 = relay.var("var_604", dtype = "float32", shape = (315,))#candidate|604|(315,)|var|float32
const_605 = relay.const([-0.197871,1.930195,9.112985,-3.196481,3.044507,-5.292474,-4.889463,-6.922181,9.494651,-7.382055,-3.217641,-1.000362,4.927545,-9.454664,-9.460241,3.133616,5.973187,5.064889,9.499211,1.924129,-7.229591,-2.835302,-5.427233,-4.934759,4.104709,-7.476026,6.529983,-5.980928,3.960892,6.105797,-1.911090,-4.221715,1.109688,-9.811253,3.214962,7.151862,3.656439,3.021407,-8.455997,-6.354731,-9.077720,6.591999,1.614226,-8.323442,-0.382763,-4.917828,4.220094,-2.502294,-0.070083,0.589360,9.779929,-7.849957,-9.442638,-2.793681,6.001612,-0.888043], dtype = "float64")#candidate|605|(56,)|const|float64
call_603 = relay.TupleGetItem(func_433_call(relay.reshape(var_604.astype('float32'), [3, 7, 15]), relay.reshape(const_605.astype('float64'), [56,]), relay.reshape(bop_588.astype('float32'), [1430,]), ), 1)
call_606 = relay.TupleGetItem(func_437_call(relay.reshape(var_604.astype('float32'), [3, 7, 15]), relay.reshape(const_605.astype('float64'), [56,]), relay.reshape(bop_588.astype('float32'), [1430,]), ), 1)
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
call_618 = relay.TupleGetItem(func_433_call(relay.reshape(var_604.astype('float32'), [3, 7, 15]), relay.reshape(const_605.astype('float64'), [56,]), relay.reshape(call_599.astype('float32'), [1430,]), ), 3)
call_619 = relay.TupleGetItem(func_437_call(relay.reshape(var_604.astype('float32'), [3, 7, 15]), relay.reshape(const_605.astype('float64'), [56,]), relay.reshape(call_599.astype('float32'), [1430,]), ), 3)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_624 = relay.TupleGetItem(func_501_call(), 1)
call_625 = relay.TupleGetItem(func_503_call(), 1)
uop_638 = relay.asin(var_604.astype('float32')) # shape=(315,)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_641 = relay.TupleGetItem(func_501_call(), 2)
call_642 = relay.TupleGetItem(func_503_call(), 2)
var_643 = relay.var("var_643", dtype = "float32", shape = (315,))#candidate|643|(315,)|var|float32
bop_644 = relay.greater(uop_638.astype('bool'), relay.reshape(var_643.astype('bool'), relay.shape_of(uop_638))) # shape=(315,)
output = relay.Tuple([bop_520,bop_588,call_599,call_603,const_605,call_618,call_624,call_641,bop_644,])
output2 = relay.Tuple([bop_523,bop_591,call_600,call_606,const_605,call_619,call_625,call_642,bop_644,])
func_648 = relay.Function([var_519,var_524,var_604,var_643,], output)
mod['func_648'] = func_648
mod = relay.transform.InferType()(mod)
var_649 = relay.var("var_649", dtype = "int16", shape = (11, 13, 10))#candidate|649|(11, 13, 10)|var|int16
var_650 = relay.var("var_650", dtype = "int16", shape = (11, 13, 10))#candidate|650|(11, 13, 10)|var|int16
var_651 = relay.var("var_651", dtype = "float32", shape = (315,))#candidate|651|(315,)|var|float32
var_652 = relay.var("var_652", dtype = "float32", shape = (315,))#candidate|652|(315,)|var|float32
output = func_648(var_649,var_650,var_651,var_652,)
func_653 = relay.Function([var_649,var_650,var_651,var_652,], output)
mutated_mod['func_653'] = func_653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_663 = relay.TupleGetItem(func_501_call(), 0)
call_664 = relay.TupleGetItem(func_503_call(), 0)
var_671 = relay.var("var_671", dtype = "int8", shape = (3, 16, 16))#candidate|671|(3, 16, 16)|var|int8
bop_672 = relay.less(call_663.astype('bool'), relay.reshape(var_671.astype('bool'), relay.shape_of(call_663))) # shape=(3, 16, 16)
bop_675 = relay.less(call_664.astype('bool'), relay.reshape(var_671.astype('bool'), relay.shape_of(call_664))) # shape=(3, 16, 16)
func_76_call = mod.get_global_var('func_76')
func_78_call = mutated_mod.get_global_var('func_78')
const_677 = relay.const([-8.135094,5.727274,-3.120952,-4.905503,7.501857,-1.098533,6.743553,7.633167,-0.703710,-0.109447,-9.658465,9.969582,3.577547,3.719066,3.215961,2.116608,9.756510,1.444576,0.227295,-8.144901,1.898891,2.886582,4.064065,2.225444,-6.731795,3.933618,-2.357481,0.095158,1.051293,-2.725459,-9.691929,-3.479063,8.089076,5.885260,6.371670,7.755686,-3.615842,7.212747,3.451956,3.332177,-7.264802,-6.805939,-7.330561,-9.694964,-1.807122,-6.194760,-3.993791,-2.844263,-9.725568,0.079691,2.375111,-7.297511,0.214546,-5.150884,-0.881824,-3.099889], dtype = "float64")#candidate|677|(56,)|const|float64
call_676 = relay.TupleGetItem(func_76_call(relay.reshape(const_677.astype('float64'), [4, 7, 2])), 0)
call_678 = relay.TupleGetItem(func_78_call(relay.reshape(const_677.astype('float64'), [4, 7, 2])), 0)
output = relay.Tuple([bop_672,call_676,const_677,])
output2 = relay.Tuple([bop_675,call_678,const_677,])
func_692 = relay.Function([var_671,], output)
mod['func_692'] = func_692
mod = relay.transform.InferType()(mod)
var_693 = relay.var("var_693", dtype = "int8", shape = (3, 16, 16))#candidate|693|(3, 16, 16)|var|int8
output = func_692(var_693)
func_694 = relay.Function([var_693], output)
mutated_mod['func_694'] = func_694
mutated_mod = relay.transform.InferType()(mutated_mod)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_718 = relay.TupleGetItem(func_501_call(), 2)
call_719 = relay.TupleGetItem(func_503_call(), 2)
func_692_call = mod.get_global_var('func_692')
func_694_call = mutated_mod.get_global_var('func_694')
const_736 = relay.const([-4,-9,7,-2,1,-8,7,-1,-8,2,-10,-6,-10,-3,3,2,-2,-2,7,5,2,-2,-1,3,-4,3,5,8,-6,8,4,-9,-8,-5,-7,-4,-4,-5,1,-6,2,10,-9,-3,-1,4,-8,2,-6,-5,-9,-9,5,-10,3,-1,9,4,-10,-3,-7,-8,4,3,7,2,-6,1,-8,-8,-10,7,10,7,10,3,-9,-2,-1,2,4,-5,6,2,8,-4,-6,-6,-6,-8,-3,2,2,-4,1,-10,-9,-3,-3,-8,4,-9,-6,-9,-10,-7,-8,4,4,-2,5,8,-8,-10,8,10,-1,-4,-4,9,8,6,6,-5,-1,5,-8,9,-6,5,-8,-7,3,-7,-4,2,4,-9,1,3,10,7,3,-4,-6,4,-3,4,2,-7,-10,8,9,6,-1,2,-9,9,-5,-10,9,5,-4,-2,-10,3,-7,4,8,6,1,1,6,-1,-3,4,-6,6,7,8,-4,-7,-2,7,-3,1,10,5,4,-9,-10,6,1,5,9,-7,-4,4,-7,8,-5,-7,3,-2,-9,-1,-3,4,9,4,-3,-1,-5,-3,-7,4,1,8,5,-8,-1,5,8,-10,9,6,-2,8,-3,2,5,-1,-9,-8,-9,1,7,-7,-5,1,10,-5,6,2,8,7,-1,-8,9,5,6,9,-1,-8,3,8,9,-6,9,-4,1,10,2,-2,-6,9,2,5,4,10,7,1,-5,2,-6,-3,-8,8,-1,-10,-9,8,9,-7,-1,2,-6,5,-1,-5,3,-3,9,4,-2,-8,5,2,-1,9,-5,9,4,-3,1,2,-6,-9,-6,6,7,-1,-9,-6,-4,-10,6,2,-1,6,3,-8,-3,-5,-7,-1,4,-7,-8,1,10,3,-1,5,-10,-6,1,3,2,-6,-6,3,10,-10,7,-2,-5,2,-10,9,-9,4,-10,5,2,1,6,-9,-6,-7,-2,-9,-4,2,9,5,-6,-8,-5,-6,-2,-8,-1,-9,5,1,4,6,-10,-1,10,8,4,-2,-1,-9,-5,3,3,-4,-9,8,6,1,-2,6,-10,-8,2,-5,-8,6,-1,-1,3,3,-2,-5,-4,-6,-1,-6,7,-7,-4,10,7,5,-6,-10,-2,1,3,4,-4,-4,3,8,-6,8,7,1,-5,10,5,-8,-5,2,-7,-5,-7,10,1,-9,-2,6,-7,3,-5,3,5,6,-2,-9,-5,2,3,1,9,-10,8,-10,3,7,6,-8,1,2,2,-2,6,-10,-7,3,-10,-7,-9,3,10,-1,-2,-9,3,-6,-3,-4,6,7,5,-9,7,3,-3,-9,8,3,-9,3,-6,-8,9,7,6,-9,8,-3,-2,-10,-5,-1,-8,-1,7,-8,-2,1,8,9,3,-4,3,-5,-6,-1,-3,3,7,8,-9,8,-5,-5,8,-9,-9,4,-2,9,4,-10,4,-8,-9,-8,7,10,-6,6,-6,-5,-10,8,-7,-2,9,-10,7,-8,8,-5,-2,4,-9,-2,-7,-1,-7,9,-8,-9,-6,1,-8,-2,-3,-9,3,2,6,-8,-2,-10,-7,-5,1,-1,-2,2,1,4,2,-10,-9,-6,8,-9,-10,9,7,4,7,-9,-10,-9,-5,-5,-8,-2,9,3,-2,6,-1,-1,1,10,-3,-9,10,-3,10,-1,-5,5,-3,-9,-1,6,4,-2,-5,2,-1,-10,-8,-7,-3,7,3,1,-10,-8,-9,-3,-2,-7,9,-4,2,-3,-6,-9,1,8,5,10,2,-6,-2,4,-6,-2,10,-9,-9,3,5,6,-5,7,-6,7,5,-8,2,5,-3,-7,1,5,10,-5,7,8,8,4,-4,-1,-4,-8,-3,6,-9,8,9,-10,-1,-2,8,2,7,7,7,-2,9,9,4,7,-8,-3,-8,6,8,8,9,-2,-6,-8,9,5,-2,9,10,9,-8,-5,-5,-6,6,-9,-3,-1,-1,3,-1,-7,3,-8,1,10,-10,-8,3,-10,-5,6,-1,7,10,-2,-8,-3,-9,3,10,9,-8,7,-10,-4,5,5,9,-7,-1,9,2,-10], dtype = "int8")#candidate|736|(768,)|const|int8
call_735 = relay.TupleGetItem(func_692_call(relay.reshape(const_736.astype('int8'), [3, 16, 16])), 0)
call_737 = relay.TupleGetItem(func_694_call(relay.reshape(const_736.astype('int8'), [3, 16, 16])), 0)
uop_738 = relay.atanh(call_735.astype('float64')) # shape=(3, 16, 16)
uop_740 = relay.atanh(call_737.astype('float64')) # shape=(3, 16, 16)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_745 = relay.TupleGetItem(func_501_call(), 2)
call_746 = relay.TupleGetItem(func_503_call(), 2)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
call_753 = func_111_call(relay.reshape(call_745.astype('float32'), [11, 13, 10]), relay.reshape(call_745.astype('float32'), [11, 13, 10]), )
call_754 = func_111_call(relay.reshape(call_745.astype('float32'), [11, 13, 10]), relay.reshape(call_745.astype('float32'), [11, 13, 10]), )
bop_762 = relay.multiply(uop_738.astype('uint32'), relay.reshape(const_736.astype('uint32'), relay.shape_of(uop_738))) # shape=(3, 16, 16)
bop_765 = relay.multiply(uop_740.astype('uint32'), relay.reshape(const_736.astype('uint32'), relay.shape_of(uop_740))) # shape=(3, 16, 16)
output = relay.Tuple([call_718,call_745,call_753,bop_762,])
output2 = relay.Tuple([call_719,call_746,call_754,bop_765,])
func_766 = relay.Function([], output)
mod['func_766'] = func_766
mod = relay.transform.InferType()(mod)
mutated_mod['func_766'] = func_766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_766_call = mutated_mod.get_global_var('func_766')
call_767 = func_766_call()
output = call_767
func_768 = relay.Function([], output)
mutated_mod['func_768'] = func_768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_769 = relay.TupleGetItem(func_501_call(), 0)
call_770 = relay.TupleGetItem(func_503_call(), 0)
output = call_769
output2 = call_770
func_772 = relay.Function([], output)
mod['func_772'] = func_772
mod = relay.transform.InferType()(mod)
mutated_mod['func_772'] = func_772
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mutated_mod.get_global_var('func_772')
call_773 = func_772_call()
output = call_773
func_774 = relay.Function([], output)
mutated_mod['func_774'] = func_774
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_838 = func_772_call()
call_839 = func_772_call()
output = relay.Tuple([call_838,])
output2 = relay.Tuple([call_839,])
func_848 = relay.Function([], output)
mod['func_848'] = func_848
mod = relay.transform.InferType()(mod)
mutated_mod['func_848'] = func_848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_848_call = mutated_mod.get_global_var('func_848')
call_849 = func_848_call()
output = call_849
func_850 = relay.Function([], output)
mutated_mod['func_850'] = func_850
mutated_mod = relay.transform.InferType()(mutated_mod)
var_859 = relay.var("var_859", dtype = "float32", shape = (9, 4, 1))#candidate|859|(9, 4, 1)|var|float32
const_860 = relay.const([[[-2.127102,-3.783498,4.778615,4.317544,6.947847],[-9.181350,-2.425030,-1.343873,-9.071655,-0.049552],[9.386650,6.865485,-7.799227,2.075485,3.382026],[9.430268,0.610854,-6.494571,8.317355,-4.876729]],[[-0.903978,-4.609227,-5.614986,2.129035,9.579473],[-9.661498,7.633076,2.355106,-5.581759,4.484070],[2.724190,1.921265,3.050793,1.856434,7.368983],[2.449770,-7.434883,1.449716,-2.391010,-2.165031]],[[-0.349519,1.281003,-2.263320,-1.013731,2.112696],[-1.027211,-8.605219,6.315684,4.021267,-9.984984],[-0.877782,-3.493754,7.521060,3.651922,7.222325],[6.192407,4.550630,1.038843,4.174670,-5.913928]],[[9.600084,7.899116,-8.541093,6.917253,7.578745],[-0.344171,-4.856245,0.963768,-9.032367,5.750368],[-8.831498,-3.888701,0.594159,2.702790,1.512306],[7.681170,-4.279254,-0.064972,3.900610,-3.952820]],[[-9.116877,-1.994775,5.080938,-5.604288,7.425933],[4.598431,2.919118,9.380886,2.368433,5.628701],[-3.413245,-6.414712,-7.921141,7.749258,-2.500537],[-0.582179,-7.406546,2.684268,-7.963975,-9.796762]],[[-0.493336,4.045813,3.548243,-7.469650,9.059861],[1.964782,4.583826,-2.252359,-4.673156,0.187129],[9.883173,0.448862,2.495003,-2.463644,4.044632],[8.989688,-6.818074,5.344623,0.960637,9.305845]],[[6.558743,-8.665291,-5.391527,-5.559429,-8.949326],[4.455600,-7.614557,6.048266,-4.670827,6.438527],[-6.972432,7.310695,-4.937910,-8.583673,-5.416173],[-0.626420,-3.090920,-7.904131,-6.978200,-7.198691]],[[2.336459,-5.104685,-9.163527,6.455780,3.691401],[-2.677996,0.641190,2.666157,-1.343854,3.072763],[1.903102,1.934732,-7.780816,-7.771649,-8.130521],[5.807278,-2.811271,1.219371,4.985309,1.828542]],[[-5.092096,9.226510,8.896163,7.805441,-7.160949],[7.800037,-8.657530,-2.900337,-6.482679,6.143579],[0.221264,-4.924193,8.173315,-1.081221,-8.939579],[5.140120,-1.833751,-3.306971,9.225529,5.928495]]], dtype = "float32")#candidate|860|(9, 4, 5)|const|float32
bop_861 = relay.greater_equal(var_859.astype('bool'), const_860.astype('bool')) # shape=(9, 4, 5)
output = relay.Tuple([bop_861,])
output2 = relay.Tuple([bop_861,])
func_865 = relay.Function([var_859,], output)
mod['func_865'] = func_865
mod = relay.transform.InferType()(mod)
mutated_mod['func_865'] = func_865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_866 = relay.var("var_866", dtype = "float32", shape = (9, 4, 1))#candidate|866|(9, 4, 1)|var|float32
func_865_call = mutated_mod.get_global_var('func_865')
call_867 = func_865_call(var_866)
output = call_867
func_868 = relay.Function([var_866], output)
mutated_mod['func_868'] = func_868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_848_call = mod.get_global_var('func_848')
func_850_call = mutated_mod.get_global_var('func_850')
call_906 = relay.TupleGetItem(func_848_call(), 0)
call_907 = relay.TupleGetItem(func_850_call(), 0)
const_908 = relay.const([[[-7,5,1,-3,-5,8,-7,-7,6,3,3,-8,-1,-3,-5,8],[-3,8,-10,5,-1,7,3,-6,-3,7,-7,10,-5,-4,9,4],[4,-6,-2,-10,-5,10,-10,-7,5,10,2,2,3,8,8,4],[6,8,2,-1,-4,6,-7,-6,8,-4,6,-8,2,10,9,-3],[3,-3,1,3,2,1,2,-2,5,-3,-2,1,8,-5,7,-4],[-1,-5,-8,8,-8,1,-6,10,-1,-4,3,-8,-9,10,10,6],[10,4,2,9,-2,-9,5,2,2,8,3,10,10,-8,5,-4],[7,-4,1,-8,6,-3,-7,-5,-3,8,-1,-8,8,1,-1,-10],[-4,-7,8,10,-5,4,-10,-2,-4,-8,9,-5,-1,-2,-1,1],[7,-2,5,8,5,-1,3,-7,-6,-1,9,3,4,4,-8,-3],[-3,1,-7,8,-10,-6,-6,9,5,6,6,6,7,-7,5,1],[5,5,-10,3,-6,3,9,2,2,10,9,1,-7,4,-8,-9],[-6,4,-9,-8,-3,5,-4,8,6,7,-5,5,5,-4,-4,-8],[7,-8,9,3,8,-6,6,-8,3,10,-4,-1,-2,-3,-8,-7],[-1,5,-1,-1,-6,-1,2,-5,-7,-6,9,9,2,8,-1,9],[1,1,10,-1,3,-9,3,2,8,-8,-5,8,9,7,2,1]],[[10,5,7,6,-10,-5,-8,3,-4,5,-10,-7,9,-8,-2,6],[4,-1,9,-9,4,-6,-2,2,-1,-5,10,-1,-8,1,1,-3],[9,4,-3,9,-8,2,3,5,-1,-7,4,9,1,3,5,5],[-10,-2,-5,-10,5,2,-8,-3,9,7,10,-7,-5,-2,-8,6],[7,3,-10,-2,7,-4,3,3,7,-7,-7,9,7,-2,-6,5],[6,-5,10,-1,3,3,3,8,-7,9,9,8,7,3,8,-9],[5,-3,1,-2,-1,10,3,6,-1,4,2,6,-1,7,6,-8],[-1,-5,-8,9,-4,-5,-5,6,7,5,-1,-1,9,-4,7,5],[-4,10,-9,-1,-8,-9,7,-10,-5,-4,-8,-1,-6,-4,-8,10],[-1,-3,-1,-3,-1,1,-6,-4,8,7,4,4,2,2,-1,3],[-3,2,3,3,6,3,5,-2,7,10,7,1,4,-1,-6,-8],[-1,4,-6,9,1,5,-9,-8,8,8,-3,-9,4,3,4,-10],[-2,10,-1,9,1,7,-2,-8,4,8,-7,-4,8,-3,-9,-9],[9,-6,-8,-2,10,1,-6,-2,5,10,8,-2,-1,1,10,-10],[9,9,2,8,-5,-4,8,-3,-8,2,7,4,-1,-10,5,1],[-10,3,4,-4,10,9,-5,-10,7,3,-8,-4,4,-1,7,-2]],[[2,7,-9,-4,10,-9,-10,-8,-1,-1,-9,-9,10,-9,1,4],[-1,9,3,-10,-1,-7,-8,-5,7,-9,2,9,-7,9,-2,-9],[-5,2,4,-10,-1,-5,4,-9,6,9,-5,10,-9,-9,-3,3],[-1,-5,-8,-9,3,-9,3,-10,-7,9,-9,3,-9,8,-3,1],[7,8,-2,-6,2,-4,5,-6,-4,2,5,3,10,-7,2,6],[5,-5,-4,3,-6,2,10,-2,4,-2,-3,-2,-6,-5,-8,-10],[-8,9,-7,5,9,5,-7,6,4,8,-2,-8,1,9,-6,-2],[3,6,6,-3,9,4,6,-7,9,8,8,-2,-1,8,-9,4],[4,1,-1,4,-4,-8,-2,1,-10,5,-4,5,-9,3,-3,-9],[6,6,-4,-7,-1,-9,8,4,-8,6,-7,9,3,-3,10,-5],[2,2,-2,-6,-4,7,6,3,-2,8,-9,-7,-9,-1,2,5],[-7,-10,8,5,-3,-5,4,3,-7,7,-7,10,-5,-5,9,9],[-7,-7,6,-6,-4,8,-10,-6,-1,5,-7,6,-6,-7,2,-10],[-8,3,-1,-3,-3,3,-1,2,-1,-9,-10,10,-5,10,6,6],[1,8,-10,6,-1,7,-7,-1,6,9,-5,1,-10,5,4,-8],[3,-4,-6,-8,-1,-8,-4,9,10,-5,8,5,10,4,3,9]]], dtype = "int8")#candidate|908|(3, 16, 16)|const|int8
bop_909 = relay.logical_xor(call_906.astype('int64'), relay.reshape(const_908.astype('int64'), relay.shape_of(call_906))) # shape=(3, 16, 16)
bop_912 = relay.logical_xor(call_907.astype('int64'), relay.reshape(const_908.astype('int64'), relay.shape_of(call_907))) # shape=(3, 16, 16)
uop_921 = relay.asin(bop_909.astype('float64')) # shape=(3, 16, 16)
uop_923 = relay.asin(bop_912.astype('float64')) # shape=(3, 16, 16)
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
const_925 = relay.const([-9.158940,-5.738713,3.820007,0.898787,-8.459885,1.222684,-0.631583,7.940689,-5.594946,-9.400527,-6.677718,-7.134360,-2.425153,4.618956,2.380526,2.154256,3.955220,-1.684952,-9.371613,-6.297880,5.276162,-7.645770,-3.228464,-6.301231,-0.070180,-4.768321,6.324284,-4.636963,-4.353244,2.170340,-0.189059,1.134945,-5.215375,-4.149640,7.546444,6.778827,9.808110,-7.506490,8.993100,-5.288898,5.172379,3.444878,9.962427,-3.616543,2.778604,0.995666,-6.559600,2.953145,-8.267921,0.881017,-8.917330,-2.590749,2.064788,-4.314569,5.827585,-9.468141,3.339661,4.535200,6.452424,1.925553,4.352764,8.935176,1.223187,-9.543711,-6.157119,-5.022039,6.150512,-6.808060,1.306886,7.871739,1.796117,-3.669884,1.236394,2.579335,0.368331,7.243577,7.219578,1.330756,-4.400361,-7.144098,6.933184,0.781744,3.438550,4.145444,-3.510904,5.814536,-8.155087,9.314534,5.191370,0.136217,6.412950,3.666546,9.543775,8.559757,5.809354,-8.158862,-6.309999,9.747967,-1.187581,5.309596,4.102703,-8.843079,-3.310218,-6.809616,9.101029,-0.600252,-3.495505,3.885198,-0.542230,5.644249,6.242321,6.780455,-9.529327,6.473514,2.857425,1.989721,-2.438706,5.679972,0.690179,-2.587894,2.074327,9.043918,0.195001,4.450443,-2.104902,7.923213,-9.192580,3.643135,4.565655,7.520565,1.822035,8.673130,0.361920,-0.006457,-5.187565,5.705381,-1.583421,-2.956465,7.167533,5.429654,-0.600269,4.951908,7.753171,1.046843,-8.646958,-7.775139,-1.029667,0.049809,-9.646052,-6.678082,-8.486911,-1.495531,1.680275,-0.478682,-2.571679,-0.505015,-2.156298,8.747962,-9.861597,-9.239015,-4.605244,9.206155,9.319103,-1.499532,-9.804778,-0.233240,-3.478550,5.288983,7.313915,-6.826391,-6.302020,7.199849,0.603887,-4.808515,8.325128,-2.234917,5.141453,-1.934032,-5.376288,-1.089676,-1.293307,6.201608,3.010082,-8.271884,8.203999,-9.419457,9.382705,-1.681713,2.007914,-3.986216,-6.222951,-5.533419,-1.752801,-8.217811,2.433419,-2.301463,8.637098,-5.715445,-4.247799,-5.493591,3.442857,8.581535,-2.015082,9.359804,4.468082,-6.908065,-2.465351,8.584483,-6.082637,8.884455,4.060932,6.182815,-6.685834,1.479585,-0.208235,-5.135523,8.510761,-3.989307,7.165025,0.508832,5.769835,-3.410104,-8.399028,4.145599,9.413333,-6.641495,-0.894726,-1.434522,5.501069,8.497337,0.028091,1.117188,-1.392647,-5.351329,-4.308891,-6.339927,4.036046,5.342879,-9.983899,-6.359900,-3.042910,-6.476368,-9.431386,0.377267,0.943236,3.320332,-7.074871,9.473966,-3.020838,-0.529839,2.091586,6.663219,-3.357698,-7.793624,3.447510,-2.847778,1.190524,-0.179535,5.065249,6.397129,-2.189335,7.768973,8.382897,9.065543,-9.342373,-7.689458,-8.495857,4.532790,4.936354,-3.355752,-0.616941,-4.781404,9.538666,-2.089933,-3.646457,7.552129,-1.231528,7.701823,1.213732,-9.791568,-1.792010,1.041927,-6.751564,1.668388,-7.954240,-8.008289,0.762525,-3.041361,5.813373,1.577899,-9.559377,-6.155528,-7.019240,1.998787,5.971098,4.422129,-4.108479,-7.364856,6.337062,-9.507271,3.844608,0.331033,9.438931,-2.555658,-1.496481,-1.356331,-3.723800,0.916742,-3.035242,0.748629,-8.046020,-9.710193,7.648250,0.495018,-6.005028], dtype = "float32")#candidate|925|(315,)|const|float32
const_926 = relay.const([[-4.594635,-7.380559],[4.057238,-7.206150],[-6.798953,-2.032927],[-6.912828,-7.680876],[-9.184950,4.164177],[8.253803,9.754792],[0.552420,-5.914171],[7.020127,6.840602],[1.984929,-5.745621],[1.962467,-6.371847],[-5.130366,-0.983416],[-0.354310,-6.342436],[2.880354,6.245200],[-2.219590,1.878089],[8.684386,-3.447219],[-3.032129,-9.355566],[2.470258,-3.407084],[4.612108,-0.483759],[9.439870,-1.347936],[3.494651,1.575593],[9.326859,-0.724714],[4.957046,6.864714],[3.872529,7.076593],[2.977999,0.469030],[-1.286992,3.728820],[-6.691683,3.736406],[4.866656,-9.071968],[-3.844326,7.304360]], dtype = "float64")#candidate|926|(28, 2)|const|float64
var_927 = relay.var("var_927", dtype = "float32", shape = (1430,))#candidate|927|(1430,)|var|float32
call_924 = relay.TupleGetItem(func_433_call(relay.reshape(const_925.astype('float32'), [3, 7, 15]), relay.reshape(const_926.astype('float64'), [56,]), relay.reshape(var_927.astype('float32'), [1430,]), ), 1)
call_928 = relay.TupleGetItem(func_437_call(relay.reshape(const_925.astype('float32'), [3, 7, 15]), relay.reshape(const_926.astype('float64'), [56,]), relay.reshape(var_927.astype('float32'), [1430,]), ), 1)
output = relay.Tuple([uop_921,call_924,const_925,const_926,var_927,])
output2 = relay.Tuple([uop_923,call_928,const_925,const_926,var_927,])
func_930 = relay.Function([var_927,], output)
mod['func_930'] = func_930
mod = relay.transform.InferType()(mod)
mutated_mod['func_930'] = func_930
mutated_mod = relay.transform.InferType()(mutated_mod)
var_931 = relay.var("var_931", dtype = "float32", shape = (1430,))#candidate|931|(1430,)|var|float32
func_930_call = mutated_mod.get_global_var('func_930')
call_932 = func_930_call(var_931)
output = call_932
func_933 = relay.Function([var_931], output)
mutated_mod['func_933'] = func_933
mutated_mod = relay.transform.InferType()(mutated_mod)
func_766_call = mod.get_global_var('func_766')
func_768_call = mutated_mod.get_global_var('func_768')
call_996 = relay.TupleGetItem(func_766_call(), 1)
call_997 = relay.TupleGetItem(func_768_call(), 1)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_1012 = relay.TupleGetItem(func_501_call(), 0)
call_1013 = relay.TupleGetItem(func_503_call(), 0)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_1017 = relay.TupleGetItem(func_501_call(), 2)
call_1018 = relay.TupleGetItem(func_503_call(), 2)
output = relay.Tuple([call_996,call_1012,call_1017,])
output2 = relay.Tuple([call_997,call_1013,call_1018,])
func_1029 = relay.Function([], output)
mod['func_1029'] = func_1029
mod = relay.transform.InferType()(mod)
output = func_1029()
func_1030 = relay.Function([], output)
mutated_mod['func_1030'] = func_1030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_1071 = func_772_call()
call_1072 = func_772_call()
uop_1095 = relay.exp(call_1071.astype('float32')) # shape=(3, 16, 16)
uop_1097 = relay.exp(call_1072.astype('float32')) # shape=(3, 16, 16)
func_648_call = mod.get_global_var('func_648')
func_653_call = mutated_mod.get_global_var('func_653')
var_1100 = relay.var("var_1100", dtype = "int16", shape = (143, 10))#candidate|1100|(143, 10)|var|int16
const_1101 = relay.const([-2.386954,8.333917,-9.915202,-4.439435,5.544144,-2.204198,6.194856,4.064079,-8.553954,-7.101487,5.228337,8.649704,7.039050,5.143586,-9.047797,7.428258,9.574342,8.833568,4.396665,-0.460423,-3.322142,-6.480650,-9.748986,-1.223512,9.807558,4.030918,-3.869051,-1.621002,9.992685,-4.294080,-6.741988,-9.058325,-7.294120,-0.470137,8.498844,-7.549209,9.556176,-9.203650,2.860636,-0.912520,3.350446,2.205036,5.023145,6.173411,3.254959,-6.881178,0.347927,4.034880,2.203955,-1.028571,-3.728928,-5.237910,4.593070,-4.436196,5.268295,-2.607649,-1.229291,-9.697255,9.340785,2.468048,-7.071764,-8.524819,-0.001661,7.586719,0.318313,7.987506,8.200840,8.271529,-8.027148,4.047964,9.863644,-1.836693,3.651727,5.654461,-7.004687,2.844707,-2.980266,9.099386,1.947666,-8.824591,-4.753195,-5.325885,3.997422,-8.532120,1.868906,-0.381315,3.263580,0.165473,1.862611,0.753005,9.459956,-8.635651,0.118555,-1.005199,8.555579,3.298654,-7.610272,8.907259,-8.833382,2.014374,6.375036,-5.776574,-3.253353,4.428489,-3.690225,-8.314716,7.623830,9.513652,-3.312202,8.814006,4.166798,2.263194,-2.395983,0.261646,-1.954780,9.727409,-9.342744,9.803554,7.783615,4.399227,7.772214,7.528293,-5.398528,3.656886,-4.941683,-9.493777,-7.234137,-0.002458,-8.582617,0.515781,-7.728015,-0.117746,-9.279960,-7.950657,-9.633552,6.629852,7.398962,-9.218980,7.958090,-0.449388,-4.681298,0.336841,-9.588494,-9.081690,-4.717759,5.073146,-2.464854,0.600867,1.564455,-2.100138,9.990776,-7.165873,-8.273458,7.124757,-9.407647,1.986214,-5.798464,4.983442,-9.707367,-7.047155,2.093449,-4.293944,2.683023,-4.486707,6.818376,4.483459,-7.888943,4.617192,-4.837232,8.075771,-2.781928,-2.262441,9.392101,1.206355,2.956287,-1.355310,7.508291,-0.010783,2.950750,-0.377936,2.599476,3.751275,7.197122,-6.097275,8.894200,-5.642210,-2.079971,6.205552,4.790206,-2.116303,-1.123872,4.486672,5.706704,-7.108122,2.948839,6.921618,-5.871006,-2.247709,4.503982,-5.965282,-8.183112,-8.032506,8.231686,9.441359,-6.936226,5.454794,-1.742302,-4.517414,-7.792415,-2.756583,8.740832,-2.952971,2.860487,8.702749,5.460535,9.823765,6.268170,-3.388727,5.723486,4.926371,5.632609,-7.142937,5.826408,5.394199,-1.960838,4.253897,8.136977,3.559386,2.918129,9.216864,-2.546276,-7.577459,-1.137333,-1.966679,-3.529604,9.569961,-7.981393,-3.040273,1.270504,8.173833,6.161238,4.858499,-1.072719,0.541003,-7.139618,-5.676142,-7.162075,-1.020871,-4.268351,-5.645755,-3.821226,-7.665053,-0.023401,-9.621914,7.165279,4.852913,0.616131,9.296241,0.973102,7.424879,-2.019736,9.460502,-0.997119,9.327662,-6.269263,-2.843156,-1.239360,-2.836620,7.824388,-3.502156,-4.457224,9.132921,-8.873507,-5.181508,-9.639360,4.253594,5.165276,6.573984,-2.523790,-2.003134,-8.619793,8.680019,-2.553193,1.477182,9.023666,-0.009916,0.697166,1.341230,-3.480598,-7.672975,5.627842,5.874781,-0.277871,-7.984713,-8.462914,9.590225,8.357158,4.558128,-5.763718,3.958514,-4.655326,-2.469445,-4.928575,9.616469,4.692624,9.429007,-3.934212,3.627103,9.625783,7.460415,4.000664,-5.865798,-7.668054,-8.951812,4.550282], dtype = "float32")#candidate|1101|(315,)|const|float32
call_1099 = relay.TupleGetItem(func_648_call(relay.reshape(var_1100.astype('int16'), [11, 13, 10]), relay.reshape(var_1100.astype('int16'), [11, 13, 10]), relay.reshape(const_1101.astype('float32'), [315,]), relay.reshape(const_1101.astype('float32'), [315,]), ), 2)
call_1102 = relay.TupleGetItem(func_653_call(relay.reshape(var_1100.astype('int16'), [11, 13, 10]), relay.reshape(var_1100.astype('int16'), [11, 13, 10]), relay.reshape(const_1101.astype('float32'), [315,]), relay.reshape(const_1101.astype('float32'), [315,]), ), 2)
func_766_call = mod.get_global_var('func_766')
func_768_call = mutated_mod.get_global_var('func_768')
call_1110 = relay.TupleGetItem(func_766_call(), 1)
call_1111 = relay.TupleGetItem(func_768_call(), 1)
output = relay.Tuple([uop_1095,call_1099,var_1100,const_1101,call_1110,])
output2 = relay.Tuple([uop_1097,call_1102,var_1100,const_1101,call_1111,])
func_1115 = relay.Function([var_1100,], output)
mod['func_1115'] = func_1115
mod = relay.transform.InferType()(mod)
mutated_mod['func_1115'] = func_1115
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1116 = relay.var("var_1116", dtype = "int16", shape = (143, 10))#candidate|1116|(143, 10)|var|int16
func_1115_call = mutated_mod.get_global_var('func_1115')
call_1117 = func_1115_call(var_1116)
output = call_1117
func_1118 = relay.Function([var_1116], output)
mutated_mod['func_1118'] = func_1118
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_1133 = func_772_call()
call_1134 = func_772_call()
var_1137 = relay.var("var_1137", dtype = "int8", shape = (3, 16, 16))#candidate|1137|(3, 16, 16)|var|int8
bop_1138 = relay.not_equal(call_1133.astype('bool'), relay.reshape(var_1137.astype('bool'), relay.shape_of(call_1133))) # shape=(3, 16, 16)
bop_1141 = relay.not_equal(call_1134.astype('bool'), relay.reshape(var_1137.astype('bool'), relay.shape_of(call_1134))) # shape=(3, 16, 16)
var_1149 = relay.var("var_1149", dtype = "bool", shape = (3, 16, 16))#candidate|1149|(3, 16, 16)|var|bool
bop_1150 = relay.right_shift(bop_1138.astype('int16'), relay.reshape(var_1149.astype('int16'), relay.shape_of(bop_1138))) # shape=(3, 16, 16)
bop_1153 = relay.right_shift(bop_1141.astype('int16'), relay.reshape(var_1149.astype('int16'), relay.shape_of(bop_1141))) # shape=(3, 16, 16)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
var_1155 = relay.var("var_1155", dtype = "float32", shape = (715, 2))#candidate|1155|(715, 2)|var|float32
call_1154 = func_111_call(relay.reshape(var_1155.astype('float32'), [11, 13, 10]), relay.reshape(var_1155.astype('float32'), [11, 13, 10]), )
call_1156 = func_111_call(relay.reshape(var_1155.astype('float32'), [11, 13, 10]), relay.reshape(var_1155.astype('float32'), [11, 13, 10]), )
uop_1160 = relay.tan(bop_1150.astype('float64')) # shape=(3, 16, 16)
uop_1162 = relay.tan(bop_1153.astype('float64')) # shape=(3, 16, 16)
uop_1164 = relay.cosh(uop_1160.astype('float64')) # shape=(3, 16, 16)
uop_1166 = relay.cosh(uop_1162.astype('float64')) # shape=(3, 16, 16)
output = relay.Tuple([call_1154,var_1155,uop_1164,])
output2 = relay.Tuple([call_1156,var_1155,uop_1166,])
func_1168 = relay.Function([var_1137,var_1149,var_1155,], output)
mod['func_1168'] = func_1168
mod = relay.transform.InferType()(mod)
var_1169 = relay.var("var_1169", dtype = "int8", shape = (3, 16, 16))#candidate|1169|(3, 16, 16)|var|int8
var_1170 = relay.var("var_1170", dtype = "bool", shape = (3, 16, 16))#candidate|1170|(3, 16, 16)|var|bool
var_1171 = relay.var("var_1171", dtype = "float32", shape = (715, 2))#candidate|1171|(715, 2)|var|float32
output = func_1168(var_1169,var_1170,var_1171,)
func_1172 = relay.Function([var_1169,var_1170,var_1171,], output)
mutated_mod['func_1172'] = func_1172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_1179 = relay.TupleGetItem(func_501_call(), 2)
call_1180 = relay.TupleGetItem(func_503_call(), 2)
output = relay.Tuple([call_1179,])
output2 = relay.Tuple([call_1180,])
func_1183 = relay.Function([], output)
mod['func_1183'] = func_1183
mod = relay.transform.InferType()(mod)
output = func_1183()
func_1184 = relay.Function([], output)
mutated_mod['func_1184'] = func_1184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_1215 = func_772_call()
call_1216 = func_772_call()
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
var_1226 = relay.var("var_1226", dtype = "int16", shape = (1430,))#candidate|1226|(1430,)|var|int16
call_1225 = relay.TupleGetItem(func_1115_call(relay.reshape(var_1226.astype('int16'), [143, 10])), 1)
call_1227 = relay.TupleGetItem(func_1118_call(relay.reshape(var_1226.astype('int16'), [143, 10])), 1)
const_1228 = relay.const([-4,-1,8,5,-6,-7,-2,-5,-4,-9,-1,-4,9,8,-5,-9,1,7,4,7,4,7,8,-10,-10,9,-10,-10,10,2,5,6,5,-7,5,1,10,7,9,10,-6,1,-3,5,-9,1,-2,1,-2,6,-4,9,2,4,3,3,5,7,4,-3,1,-8,3,-8,-8,4,-1,8,9,7,5,3,-3,-8,-2,-2,7,4,9,-6,-8,9,-3,3,8,-4,-9,1,-7,8,1,10,10,-9,10,8,-8,-7,5,-5,-1,3,7,-3,4,2,3,-5,-10,4,2,7,-8,-2,-8,3,7,-3,-2,9,-8,-3,-6,4,3,-5,-7,-4,1,-5,3,10,5,-6,-8,7,7,6,8,-9,-5,5,-9,8,-3,8,-2,7,2,6,-8,7,-3,-1,3,2,-4,-4,6,-2,-3,-6,-1,-4,-8,-6,-5,6,-5,1,-6,-8,1,-5,1,7,-2,-3,-8,7,-9,-6,5,4,-8,-10,9,-7,9,7,-1,-8,-7,-7,7,-5,-6,-1,-3,-1,-10,-5,8,-9,-4,-10,1,2,-10,5,3,-4,-10,-10,-3,-4,-1,-4,-1,-7,-1,3,-5,-2,-2,-2,8,3,-4,1,-5,10,3,6,-7,10,10,-2,8,1,2,6,3,7,6,5,-2,7,1,1,6,7,-7,-2,2,7,-7,1,-4,-7,8,-10,-9,8,-10,-9,10,-2,-3,-2,-6,-9,1,2,8,-4,3,7,-2,-1,3,9,-6,-2,3,-5,2,3,4,7,-7,10,-6,10,-3,-8,-3,-2,8,-9,8,10,-6,1,8,-3,10,3,-10,2,5,2,9,-8,-7,-5,-9,-5,8,4,-6,9,10,-10,6,-4,3,1,-9,6,4,-1,8,9,-3,-2,-1,3,-6,2,6,-4,-3,1,-4,9,10,-4,-7,-6,5,7,2,7,-4,9,6,-1,8,2,10,-3,-1,-3,-9,9,9,-2,-8,9,10,4,-9,7,-8,1,-2,10,-1,-4,-2,-4,6,1,7,-8,6,-2,-8,4,10,5,2,-7,-8,5,1,8,7,3,-9,-10,-2,4,3,-5,-5,-7,6,4,-3,2,10,3,-3,-1,7,1,-4,-9,-3,2,-7,-9,-2,-6,1,1,2,-9,2,9,-9,-9,3,2,4,-8,-2,5,7,1,3,-7,7,10,-6,-9,9,-10,5,10,3,-2,2,-8,-3,7,10,1,-2,9,1,-2,3,3,-3,9,3,-2,-3,6,-9,1,8,9,4,7,3,4,-5,-7,-3,6,-10,-9,-7,10,-7,-5,1,-7,1,10,7,-1,-4,1,-5,-1,3,9,-6,-6,-7,10,-5,5,-10,10,-1,-10,-9,10,5,-8,-3,8,5,-2,7,4,-8,-9,-4,-8,2,-9,8,-3,-3,3,8,-3,7,7,7,7,-10,6,5,-10,1,-8,-1,1,-1,-9,-6,-4,-10,-9,2,-4,10,8,-5,4,2,-4,2,8,-10,4,1,-2,-1,-2,5,-7,8,-2,-8,7,-8,-4,6,4,10,5,8,-4,6,-9,-2,6,4,10,-4,-1,-10,5,-6,4,-8,7,4,-2,5,-1,-10,6,-5,-7,5,-5,2,3,-10,-3,-3,4,-2,-8,-10,6,6,-7,8,3,-9,-2,-8,-8,-9,-9,-1,-2,9,-2,10,10,-9,10,10,-5,-2,9,-10,-2,-10,-3,-2,-6,6,-2,7,4,-1,-7,8,10,-1,-3,6,1,-6,8,1,1,-3,6,6,-8,-4,8,9,3,-6,10,-2,9,7,-6,-1,-8,9,-4,1,4,9,7,-7,-7,-7,-5,7,-6,1,-5,-8,-9,-4,-4,7,2,9,3,10,-10,-6,-7,-1,1,7,-6,-8,4,8,-9,-7,2,-10,3,-6,10,-8,-6,2,-10,-3,3,-1,-5,6,-5,-5,-8,-1,-7,-4,10,-4,8,6,-4,-6,2,6,8,3,5,-10,3,6,8,-8,9,-7,-7,-8,-1,10,2,3,9,3,4,-1,-5,-10,4,-3,10,-3,-10,10,5,-9,7,7,9,-2,-1,1,-9,-9,7,-9,2,7,-2,7,8,-4,-9,-5,-1,9,-9,8,-1,2,-10,6,2,6,-10,-1,9,5,6,-4,6,-9,-6,-6,5,-5,-8,9,-4,-6,-7,5,4,-4,2,9,3,-7,-4,-6,-1,-6,-1,1,-9,4,-5,2,10,2,-5,-2,-9,-7,-9,4,3,-1,4,-4,10,-8,6,6,5,-10,9,9,10,-10,9,1,5,-8,3,-3,9,-9,1,-1,-1,7,2,7,1,2,-3,-4,6,-1,-6,-3,-6,-10,-6,-1,1,-9,3,-4,5,-6,1,-1,6,8,-4,6,3,-7,6,-8,-8,-7,-4,7,1,10,-5,-10,2,-2,-9,6,-6,-1,-3,-9,-5,-1,-1,8,4,-3,8,-2,1,9,-6,-4,-10,-7,3,3,4,8,-4,7,-4,-9,-4,-5,6,-7,-10,5,7,2,-7,9,-9,-7,1,1,4,2,-10,5,10,6,-4,-10,10,10,-5,9,3,-6,-1,4,6,5,2,2,1,-3,-9,-7,-5,6,-5,-5,-2,7,-10,9,4,4,4,-7,3,2,-3,1,-8,-9,6,3,6,1,10,2,6,9,1,4,8,-6,-9,-10,-7,-9,-4,1,2,-6,4,6,5,9,-3,-1,-3,3,-5,-8,-1,-5,9,7,-10,4,2,-5,5,-4,-8,-9,-4,-2,5,-5,-7,5,8,5,-4,3,9,4,1,2,5,-10,-4,-1,-2,-9,-7,-5,4,-3,1,4,-2,-1,6,-2,-7,-1,-7,-1,-9,10,-5,-10,-4,-9,7,-4,2,3,1,1,10,-8,-6,-5,-1,8,-9,7,1,10,-1,-8,2,-3,9,-10,7,5,8,6,-5,7,5,9,10,-4,6,4,-5,2,2,-4,-1,-2,-9,10,5,9,-1,-7,-10,2,5,3,-4,6,6,-6,-9,7,7,9,5,5,6,7,-3,1,6,9,-10,7,-7,4,9,1,9,1,9,1,8,-3,-8,2,-10,-5,8,-6,-3,2,-2,-2,-4,-8,-1,-2,7,-1,-2,1,3,-2,-6,-7,-9,-2,3,-5,-7,4,3,8,-1,-7,1,5,-1,-7,5,7,5,8,-3,7,-7,-9,-4,2,-5,10,-6,10,-4,-6,4,-5,-3,7,8,-6,-4,5,2,-7,6,-1,-4,2,1,-5,9,2,-4,8,4,5,10,9,-7,9,4,8,2,-4,-5,-7,-10,8,9,-4,-1,4,10,3,8,3,-3,-7,-10,-7,-1,-1,3,-5,-7,-9,7,-2,-7,-4,-9,6,-9,-7,6,-4,-10,8,-4,10,-9,4,2,-4,-2,-3,-7,-3,4,3,-5,6,2,3,-6,-9,-1,2,-8,-4,7,1,6,10,5,-9,2,10,-1,10,-3,4,-4,9,5,4,1,-5,1,-7,1,-9,-5,-5,-9,4,7,-7,-8,-5,-10,-4,4,7,7,2,-2,-8,-9,3,-1,-9,7,-1,4,8,5,-4,5,4,5,-9,6,-4,-2,2,-8,-4,-9,-1,-1,9,-3,6,-4,10,-8,-8,6,-9,1,-4,4,-3,2,-8,-3,2,-1,5,-9,-5,-2,1,-7,8,4,6,-1,3,-4,-8,-9,6,9,3,4,6,3,6,10,7,-6,-3,5,-10,-6,-10,9,3,5,7,-6,-7,-10,8,-7,-5,-7,7,2,-10,8,-3,6,-6,-4,2,5,8,4,-7,-10,-1,-9,-8,10,3,-8,6,2,6,-6], dtype = "int16")#candidate|1228|(1430,)|const|int16
bop_1229 = relay.floor_mod(var_1226.astype('float32'), relay.reshape(const_1228.astype('float32'), relay.shape_of(var_1226))) # shape=(1430,)
output = relay.Tuple([call_1215,call_1225,bop_1229,])
output2 = relay.Tuple([call_1216,call_1227,bop_1229,])
func_1236 = relay.Function([var_1226,], output)
mod['func_1236'] = func_1236
mod = relay.transform.InferType()(mod)
var_1237 = relay.var("var_1237", dtype = "int16", shape = (1430,))#candidate|1237|(1430,)|var|int16
output = func_1236(var_1237)
func_1238 = relay.Function([var_1237], output)
mutated_mod['func_1238'] = func_1238
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1311 = relay.var("var_1311", dtype = "float32", shape = (10, 8, 8))#candidate|1311|(10, 8, 8)|var|float32
uop_1312 = relay.sqrt(var_1311.astype('float32')) # shape=(10, 8, 8)
bop_1318 = relay.add(uop_1312.astype('int16'), relay.reshape(var_1311.astype('int16'), relay.shape_of(uop_1312))) # shape=(10, 8, 8)
func_76_call = mod.get_global_var('func_76')
func_78_call = mutated_mod.get_global_var('func_78')
var_1323 = relay.var("var_1323", dtype = "float64", shape = (56,))#candidate|1323|(56,)|var|float64
call_1322 = relay.TupleGetItem(func_76_call(relay.reshape(var_1323.astype('float64'), [4, 7, 2])), 0)
call_1324 = relay.TupleGetItem(func_78_call(relay.reshape(var_1323.astype('float64'), [4, 7, 2])), 0)
var_1343 = relay.var("var_1343", dtype = "float32", shape = (10, 8, 8))#candidate|1343|(10, 8, 8)|var|float32
bop_1344 = relay.subtract(uop_1312.astype('uint8'), relay.reshape(var_1343.astype('uint8'), relay.shape_of(uop_1312))) # shape=(10, 8, 8)
var_1355 = relay.var("var_1355", dtype = "float32", shape = (10, 8, 8))#candidate|1355|(10, 8, 8)|var|float32
bop_1356 = relay.floor_divide(uop_1312.astype('float32'), relay.reshape(var_1355.astype('float32'), relay.shape_of(uop_1312))) # shape=(10, 8, 8)
func_930_call = mod.get_global_var('func_930')
func_933_call = mutated_mod.get_global_var('func_933')
const_1366 = relay.const([6.426229,-1.089709,-4.116462,-8.241610,-4.665274,-9.753438,5.490828,5.699760,-6.800355,8.130614,-2.970926,3.482187,1.142209,9.631591,-6.093418,-5.985985,-2.232768,-6.760918,6.327812,3.917043,-6.033507,-8.211852,2.963899,7.203167,-6.974812,1.580920,-8.280368,-4.157676,-1.712776,-1.820407,-7.273613,1.835082,3.665314,-9.927185,-8.471833,-3.633181,5.365708,1.047017,-8.173256,2.382011,0.369284,-6.152803,9.963543,1.048159,-4.805225,-5.867337,-5.117483,2.738390,-8.317012,-6.010178,-2.206431,0.425827,3.529584,-5.666789,5.611072,9.728035,-4.139432,-5.327531,-1.836333,1.302085,9.420026,-5.566965,0.816216,9.770524,6.405153,8.259534,7.486450,5.104965,3.610648,-5.206038,5.291758,0.169702,8.257505,-8.095811,5.081496,7.960773,1.994914,-8.961582,6.505369,-2.405949,1.814234,-2.148130,-5.556474,-6.268508,1.234410,5.208642,-1.258872,-9.277286,-9.352527,2.484889,6.546082,3.889381,-1.198025,1.236669,4.495372,-2.165168,0.230842,9.039516,7.796759,1.072381,6.235016,2.453544,7.585810,7.839087,-1.519237,8.455382,6.687852,4.018332,-5.623911,-2.860997,-5.870992,5.710296,9.204974,-8.374333,-0.585599,-0.719901,-7.959750,3.295014,5.139483,9.448121,1.055413,1.477736,9.775721,8.926531,-3.613205,-4.881621,-1.268885,-0.853851,-9.470227,-7.907030,7.520819,-5.744605,5.804706,1.019125,7.199465,-9.705815,-5.448843,5.280773,-0.090244,6.062354,-5.957646,-1.353257,8.980594,0.277171,5.521957,-5.994529,-1.139938,-0.645466,-8.833137,-1.334231,-2.632526,4.494398,7.665829,2.679182,6.682762,-0.748949,-2.533047,-2.479147,7.992890,3.295715,-4.241319,9.252187,3.671249,-8.498567,-1.158085,9.192334,2.777824,1.605874,9.951232,5.885416,3.243410,8.976176,-3.894593,-2.067254,2.744656,-6.142777,2.333724,-5.761193,6.665333,5.657268,3.620634,-3.761343,4.537958,0.319252,-2.170115,6.600773,-4.062375,3.440398,-3.372980,1.814858,-6.524238,9.528512,6.006787,-0.556399,-6.854999,-9.737655,-8.697447,9.940844,-2.887038,-1.384482,5.156475,4.955226,-5.744012,-8.265386,-0.133116,-9.878220,9.780344,-5.353292,0.303463,2.412330,-5.782028,-8.604020,-8.070226,-6.413771,-7.806255,-2.589167,-8.939485,-6.130332,-9.702957,-7.145546,-1.713207,7.700918,-9.789061,-5.272074,-8.205477,-4.794593,-0.128988,4.633560,-5.696125,6.090482,1.458487,-1.731132,2.095561,-8.527348,8.972726,-9.192596,-4.990512,6.396034,-6.597105,-8.989956,3.656804,9.338610,9.642246,-3.230760,4.817742,2.133900,9.178176,-3.618657,-9.013109,9.368596,6.473040,2.459077,3.765853,1.163644,-5.799517,3.767218,-2.627390,9.017817,8.506840,7.038786,-1.571695,5.499794,-6.431287,-1.188359,4.902154,-6.336761,-9.803630,-6.062480,-6.720587,1.155904,8.427225,-6.658703,0.104642,-3.847301,2.519064,2.551600,-1.302458,-6.360306,7.527185,0.191457,-6.916743,4.816283,3.860834,-2.929909,2.167095,-1.112061,-6.349182,-3.896069,3.308124,5.565757,-1.355538,-6.520256,8.859730,1.418429,7.736092,7.730506,-6.098139,-7.877350,-7.174978,2.314811,-2.328411,1.788414,-2.369097,2.256755,-2.918694,1.841631,6.959871,9.285158,-3.412965,7.323053,2.424506,4.290563,-4.170607,3.642387,-9.499797,-9.328137,-9.156457,-6.124473,-8.519527,-0.975821,-0.945015,4.710439,8.301298,-8.307319,-7.420399,-7.585339,1.769799,5.147942,3.963489,-9.581051,-2.475176,8.099177,-5.719498,5.038296,8.143583,5.495133,1.771673,7.182668,1.912809,-1.897716,-3.743359,5.073446,-8.595695,9.592871,5.477096,-7.062716,-8.484956,6.026902,4.781214,7.504104,-0.727001,-8.490040,-1.521662,1.887690,4.253153,5.138289,-2.507844,0.211642,1.014320,-1.043241,1.300064,-0.535756,-6.900419,-6.624813,7.402963,-0.687206,7.693071,0.688814,0.122799,0.387487,2.972638,-6.990555,-2.343804,-5.952673,-9.084869,-2.808494,1.314388,5.038510,-6.299332,4.273421,-4.739180,-2.740816,-0.748172,0.964498,-0.251447,0.773599,6.202441,8.951541,1.927627,3.610110,-5.763121,2.466301,7.361929,-7.301163,0.113741,8.684982,8.306468,7.707227,1.847651,8.552810,9.471361,2.046988,-0.127703,-9.559000,0.483476,3.232848,-8.891655,3.978697,-8.465914,6.679398,-5.066208,7.921866,-2.674434,4.208559,2.169218,3.500055,5.307749,9.172635,5.329473,-2.454828,1.417753,4.612797,-8.820974,9.877860,-1.855802,-3.142380,1.512413,-5.047543,-5.402921,-0.726898,3.469912,6.666086,-1.276449,-1.848787,-0.719313,-8.799741,8.831859,8.786586,9.909379,-0.802324,-5.509604,-1.882135,-1.698355,4.382886,-3.262407,-6.929921,-9.532820,9.724017,-7.906728,-3.696672,-5.196141,-6.256506,-7.098776,8.274448,3.822443,8.319950,1.303409,3.799672,6.623196,-7.157313,-0.034001,9.067304,-2.773790,-9.832481,-1.243432,-2.325772,8.518874,-7.561896,-5.708719,5.050163,6.402078,3.338998,-4.437590,-5.864697,-0.164000,-0.799463,4.674629,9.952742,-4.344936,-4.268850,-8.640466,2.095597,-5.478190,-0.542952,5.916279,-5.319059,-6.168673,1.799937,-9.878470,-5.182266,4.784935,-2.454636,-8.195449,-7.218880,5.543472,-6.416207,5.741637,9.510927,6.503749,4.326411,-3.679498,-8.086997,1.871788,5.811951,7.788726,-0.957144,-4.315057,-6.291820,-9.250506,1.581640,0.309242,-1.611110,7.604152,-7.401665,1.963279,-1.646044,2.768892,-5.761785,-3.032658,8.331996,-8.443470,-0.290818,-5.480053,9.370963,-0.945891,-8.241781,-8.069362,-3.944468,-2.872397,6.698058,-5.897853,1.056510,-3.017593,9.369866,-9.091687,-5.716239,-8.192933,1.329676,8.810849,-7.199480,-9.517518,-9.063557,5.321345,-6.950433,9.098617,1.923862,2.772681,-0.675948,-2.702612,6.649379,-7.564260,4.527831,-0.313776,8.221270,-0.719984,2.409278,-1.605840,1.410602,8.929146,1.228385,6.179695,-8.496634,-6.509435,-4.503482,-9.310198,2.594224,-6.586305,-5.127711,4.371436,-5.087619,3.040186,-1.793562,6.270208,5.205001,-1.635623,-2.585156,1.278771,-8.309800,8.943427,-7.344661,-4.007832,-4.930469,5.289356,-5.316984,-8.323677,-9.573412,-9.301331,7.536828,-9.686628,-4.238363,9.034185,8.782416,-4.882919,-4.975300,-0.786304,1.681413,-7.809100,4.574525,-7.063540,3.118443,7.359980,-5.494973,-6.239885,1.681720,-0.922198,8.998838,-6.735994,-8.379662,2.663514,-2.511644,-1.070176,-1.360599,5.283802,-1.285121,5.318055,-5.381438,7.013701,4.867752,-5.003085,-2.984662,-9.754501,3.110179,-3.244110,4.870173,-6.549918,-0.416305,-4.750345,-1.125102,-0.114571,9.637537,-1.937318,-2.879925,2.018660,8.486285,5.743182,-2.288321,-1.012794,-6.476091,-0.652918,-1.335563,-2.167536,3.153339,9.491564,-5.628830,-8.562475,-2.156404,-6.311616,-9.570113,-2.089140,4.474370,5.823281,3.926140,2.823948,8.467846,-1.475804,8.165000,-0.197064,0.181349,-8.109543,1.838755,9.907898,8.483327,2.433487,7.989443,7.282205,0.067531,5.694640,-8.492222,-3.626505,-5.694731,2.030754,4.994069,-8.020831,-3.943762,9.875241,4.735596,6.131524,-3.453307,-4.260386,-7.772678,-5.367041,-8.552771,-2.204976,5.449171,-9.430935,8.462282,2.223303,7.720784,3.879184,-5.457512,-6.784809,-2.992778,-5.741553,-9.275262,-2.441953,-1.430415,-6.380122,-0.352986,-6.186556,7.552900,6.196224,-2.364813,-7.475879,-1.785271,3.182322,-6.672459,-7.391099,1.275337,4.498967,3.288260,-4.173106,-3.157449,6.456372,-8.268649,-3.647863,-8.606969,-8.417920,-4.156825,6.078988,7.194236,2.003856,-5.201911,-4.144401,-4.231571,7.171895,2.640304,-5.826239,-1.192483,2.674849,4.200176,-9.341009,1.436548,-8.718305,6.367961,6.099954,1.042670,-2.003563,-6.116398,2.477227,-9.886025,5.945141,4.306361,-8.646910,2.450777,-5.551988,5.702291,-2.649669,8.935245,9.825848,-8.685697,6.820496,4.359923,9.063805,-3.553501,8.714847,4.684168,9.049890,-8.710855,-0.151897,7.678500,-8.520325,-4.287988,4.360500,6.183053,-7.376913,5.416952,5.996078,-5.428930,9.322654,-8.375582,5.174158,2.300167,-3.593045,-5.776816,2.311128,3.406077,7.685751,-7.439636,3.498062,6.318346,-1.200238,-6.745431,2.796584,-9.069785,8.574252,0.864481,0.991524,2.072556,-3.779948,-8.475965,0.144388,1.166626,8.081795,-2.729099,-6.894166,8.410538,-1.982652,-2.240638,-8.320717,-6.023525,2.353335,-4.840936,-9.196446,-6.110075,-9.921578,-3.283373,-7.612686,-0.248881,-0.886736,7.513661,-4.846864,9.766348,-6.374348,-2.082586,-8.229861,-0.979182,6.569985,-9.010778,9.500599,-5.278246,-8.395279,4.668364,8.358142,-9.178445,-5.948507,-6.427834,-3.133953,-8.819575,0.683741,2.690832,8.505702,-2.830228,4.502521,1.207514,5.056741,-9.426250,-6.171053,0.933573,7.233226,7.945565,5.855713,-9.239640,3.066145,-0.190037,7.298184,1.207363,7.715178,9.917982,-5.687806,3.026284,1.607067,3.154110,-5.744799,5.427569,0.716650,2.278426,-3.781487,-7.256263,-8.385222,-9.087190,2.442753,7.204569,2.436576,1.553568,5.817954,-1.668240,-4.053398,-5.058768,-1.022767,-3.208769,5.884249,-6.187221,9.409839,0.269449,4.169910,2.670436,8.182167,7.479265,-5.833945,4.098184,-8.643748,-1.857969,6.599636,5.474178,-1.826546,2.287606,5.552466,5.545606,7.949287,8.622689,-9.463615,0.095874,1.561465,2.015642,0.882630,6.432413,-7.721053,-6.999744,-9.290729,3.560682,8.230848,-7.179512,-4.832038,9.994471,5.329057,-4.644318,6.021426,1.052550,-3.582842,-2.481550,7.992715,8.172664,2.895312,-8.883097,4.409152,-4.460694,-7.482168,-5.851027,-7.422642,-9.313967,-3.445073,-9.757402,-2.378598,-5.073951,-5.536271,-8.914430,-2.785244,6.042321,2.857085,6.459500,0.449961,5.791130,4.169914,-9.633355,8.094053,6.976701,5.753822,-1.808082,4.408374,-9.291053,2.439199,-5.263746,0.434993,-8.518697,6.379558,8.631214,2.031039,-0.937788,-4.837823,3.915208,-0.958424,8.103654,-7.889043,3.207775,-9.959350,5.241713,7.950184,8.910965,2.965685,1.993026,-2.190225,3.355712,-5.821758,-5.335992,-3.662025,-0.829796,-3.377801,-1.327788,3.270536,-4.261326,5.616313,-6.650990,3.125363,6.578432,9.159925,2.580409,-4.964344,5.851865,1.537600,2.674552,4.594315,-0.329385,-9.646269,-8.440591,-9.679935,9.631558,-3.026476,-1.391302,-2.454644,-0.927249,5.298925,8.894738,-7.152359,-0.746397,-5.186706,1.915502,2.581085,2.546478,-7.627517,-2.408870,-7.408212,2.742660,0.838095,0.185410,4.303780,9.910344,1.470350,-9.939748,7.512946,3.373598,8.845715,-3.664413,-4.673209,-3.680605,1.673219,-3.240802,-8.944868,2.883686,6.259449,6.963250,-6.490277,0.310816,0.398795,-6.146707,-0.591795,-4.957576,-3.307001,5.075604,-1.131702,-3.691670,-4.418052,-9.015101,-7.915752,-2.173005,-2.777124,-4.372091,-0.021154,-6.720409,-4.443883,-3.199212,0.755581,-2.812659,2.874119,-8.797508,3.069323,-6.308282,4.416182,-1.273201,-9.797298,-4.944228,3.950091,7.196601,-6.372730,5.258181,-8.612136,-2.331871,1.771313,-3.465547,-5.452963,-3.424228,3.435686,6.325445,6.772905,-1.713275,-8.603226,-1.646901,1.974189,6.329067,-0.979447,-9.606554,-9.982579,-2.638815,8.190175,5.089310,3.340049,4.441099,-9.724025,-4.769213,1.358176,1.866937,0.951583,8.543787,1.807139,-2.535781,6.210926,9.438810,5.401531,8.605549,-9.731407,-6.878545,9.476539,-1.142458,-7.272136,8.119479,5.315591,6.797521,3.400427,6.425645,9.804615,-8.693750,5.840195,0.409681,5.705404,0.330210,2.245735,4.662598,-9.320219,-9.007050,-5.105006,-3.291087,-2.795697,-7.582391,-2.835214,-7.551063,-1.329857,-9.786747,-8.155573,-0.031179,9.901475,8.222760,-6.616055,0.808745,-9.500045,4.721275,3.384076,-4.435949,-8.026233,0.978532,3.887328,-4.249178,-2.708233,9.456800,-9.752793,-0.733033,5.679552,-6.686976,4.060746,-8.885413,8.859894,-7.881494,5.292879,-1.531901,-1.187508,-3.050920,-2.429320,6.112116,-0.385858,9.477146,-0.587111,-1.661726,-6.545399,1.128936,-8.381736,1.455685,-3.113177,-6.722188,9.815783,4.201868,7.139856,9.508759,-8.614310,-5.871537,2.652318,-9.155481,-2.833902,8.817949,7.895368,-4.306162,3.015089,-4.393860,1.161982,1.281825,5.683306,-7.979639,6.829905,-8.018807,-6.657137,-0.324273,8.495661,-7.904176,5.486202,-7.167905,-2.163097,-3.927951,-9.141164,9.039522,4.173634,-1.047164,4.516237,9.397663,-5.121929,7.491800,8.301159,-5.793429,-3.847030,-5.366291,1.379425,-3.160175,1.971742,8.662513,6.240104,0.276469,6.486224,-5.328511,6.489946,4.672417,0.556408,-7.893513,-5.352412,0.195510,6.328378,-6.093019,-6.675601,9.886942,1.872078,-3.728230,7.966415,-8.191640,6.363982,-9.684054,-9.361440,7.491751,-5.094264,-2.921132,-5.513217,8.843776,0.140897,-3.765268,-6.144042,4.893542,-6.488799,8.896560,-8.502283,4.527018,-5.964905,-1.361550,8.225768,-8.233173,0.331880,5.678462,6.081270,-0.443171,-1.656277,-5.144368,-9.604469,2.942464,2.606005,-1.249785,-5.438753,-1.181220,9.440461,9.874037,-8.645152,-2.923054,4.587116,9.889696,-6.763329,5.476902,1.199840,-8.406298,-2.861563,-9.965798,-0.355771,3.459570,-9.235784,7.731834,-1.229973,8.596858,-0.080156,-9.440588,8.313214,-5.016193,6.050763,-4.905630,-5.211430,-8.689351,-7.874399,-6.244344,-0.383704,4.594982,2.627025,-2.990937,-2.927289,-4.330743,-5.981904,-6.002073,1.380877,5.934186,-6.201883,9.053979,-2.015840,3.275429,-3.758419,0.947425,4.275364,-2.030862,0.389949,-0.499050,-1.728447,8.147598,-4.305477,-7.326137,-7.131721,-3.539212,5.324895,9.938275,-9.871258,9.993669,4.984423,4.289184,6.045541,9.208209,-0.639673,-1.209072,3.239356,5.955332,5.295141,7.135541,-3.198431,2.690637,9.923448,4.533157,2.159769,-3.705448,-7.808605,-2.800324,8.695307,-3.707734,3.966513,-3.500841,-5.231893,-5.688795,3.463234,-9.987016,-5.023966,-1.290825,-3.870745,1.110195,-0.875918,-6.951480,6.153687,-7.169269,9.395062,-3.495361,-0.533571,5.263808,6.997628,-3.716993,3.449648,-4.293359,-2.680343,7.094445,-1.537057,0.071809,-9.450810,1.682884,-8.731031,2.626957,0.380308,-9.083086,-3.159144,-3.579350,-0.577925,1.544668,7.253223,5.906366,-1.623644,5.186839,9.042314,9.700500,-4.182320,6.067367,-5.639992,-7.102692,-0.084205,4.115798,-3.015853,-6.277161,4.114563,-2.914629,4.128015,-6.840599,-3.751592,2.185918,-0.602576,-9.456244,1.096433,7.502320,-7.293426,7.562177,5.288047,3.248862,0.697996,-8.521516,4.243417,2.252387,-1.655821,-1.400476,2.653747,-5.341957,-0.247942,1.090973,-2.870471,-7.824646,-4.727882,4.862118,-3.096998,-7.696784,9.619788,-9.426205,2.198773,1.985654,-1.202505,0.896751,5.574167,6.048221,-7.333501,-7.330356,-0.666392,5.259011,-3.835399,-2.604327,3.249701,-9.441043,9.042289,-7.129394,8.351015,-4.184733,9.641499,6.406059], dtype = "float32")#candidate|1366|(1430,)|const|float32
call_1365 = relay.TupleGetItem(func_930_call(relay.reshape(const_1366.astype('float32'), [1430,])), 2)
call_1367 = relay.TupleGetItem(func_933_call(relay.reshape(const_1366.astype('float32'), [1430,])), 2)
bop_1380 = relay.bitwise_or(bop_1344.astype('uint64'), relay.reshape(bop_1318.astype('uint64'), relay.shape_of(bop_1344))) # shape=(10, 8, 8)
output = relay.Tuple([call_1322,var_1323,bop_1356,call_1365,const_1366,bop_1380,])
output2 = relay.Tuple([call_1324,var_1323,bop_1356,call_1367,const_1366,bop_1380,])
func_1392 = relay.Function([var_1311,var_1323,var_1343,var_1355,], output)
mod['func_1392'] = func_1392
mod = relay.transform.InferType()(mod)
mutated_mod['func_1392'] = func_1392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1392_call = mutated_mod.get_global_var('func_1392')
var_1394 = relay.var("var_1394", dtype = "float32", shape = (10, 8, 8))#candidate|1394|(10, 8, 8)|var|float32
var_1395 = relay.var("var_1395", dtype = "float64", shape = (56,))#candidate|1395|(56,)|var|float64
var_1396 = relay.var("var_1396", dtype = "float32", shape = (10, 8, 8))#candidate|1396|(10, 8, 8)|var|float32
var_1397 = relay.var("var_1397", dtype = "float32", shape = (10, 8, 8))#candidate|1397|(10, 8, 8)|var|float32
call_1393 = func_1392_call(var_1394,var_1395,var_1396,var_1397,)
output = call_1393
func_1398 = relay.Function([var_1394,var_1395,var_1396,var_1397,], output)
mutated_mod['func_1398'] = func_1398
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1469 = relay.var("var_1469", dtype = "float32", shape = (3, 6, 15))#candidate|1469|(3, 6, 15)|var|float32
uop_1470 = relay.log(var_1469.astype('float32')) # shape=(3, 6, 15)
func_692_call = mod.get_global_var('func_692')
func_694_call = mutated_mod.get_global_var('func_694')
var_1477 = relay.var("var_1477", dtype = "int8", shape = (768,))#candidate|1477|(768,)|var|int8
call_1476 = relay.TupleGetItem(func_692_call(relay.reshape(var_1477.astype('int8'), [3, 16, 16])), 2)
call_1478 = relay.TupleGetItem(func_694_call(relay.reshape(var_1477.astype('int8'), [3, 16, 16])), 2)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_1487 = relay.const([-5.883372,2.833615,7.931949,6.138676,3.950542,3.639908,-6.893405,-6.637456,3.383082,6.082391,-3.981203,-5.918058,-2.475829,-8.658491,-7.065685,-8.871447,6.474979,-8.667859,1.108399,0.937525,-0.018017,-6.844198,-8.519588,-5.709398,3.757713,-1.941668,-8.106817,1.937162,-3.048740,-6.961513,-8.482773,0.540006,-2.925319,-5.144350,2.246390,8.617072,7.854553,-3.573964,-6.855739,0.722841,-8.211512,1.341683,-9.834894,-9.031490,-8.498432,3.860549,8.813435,-1.386587,-0.478954,3.973792,-8.105680,-9.909978,-6.109214,7.656935,0.476381,0.026602,-8.942559,-2.786586,6.435653,9.384634,9.481268,-8.376885,3.820969,7.176824,-8.586487,-9.280140,7.408119,-3.048118,9.878009,-6.832451,-4.116471,0.963528,7.593421,3.449931,-3.763894,-1.620034,-6.414245,-2.487768,-0.992635,1.771217,-5.091809,0.991196,-7.618150,4.860007,-1.132020,-4.094732,0.424243,0.453367,4.705563,-4.107016,-8.079970,-8.231229,3.377229,-3.898661,-9.919913,-9.323249,6.094429,-4.060120,5.501925,-8.031783,5.500903,-1.741987,-8.039241,8.030612,5.967017,4.991927,1.543498,-9.066561,-2.035562,-3.965167,-6.793592,3.948381,-5.212294,-9.571508,9.940191,3.839136,4.260835,-6.850348,-8.041083,-4.372274,6.500916,0.165533,1.300451,1.987670,-8.527426,-7.297076,0.563574,9.191468,7.828683,3.224107,-3.958124,2.066887,4.237734,5.585552,-1.303647,0.440839,7.146370,-3.552545,-4.411557,-0.490329,4.244807,7.412496,-9.921171,-1.655597,-8.284930,-4.752432,2.365683,4.413534,0.925982,-9.843808,-3.644951,6.904280,-8.539391,-4.106475,-3.257127,6.783680,0.202067,-8.262862,3.687192,5.657819,-0.062549,-6.220566,8.909290,-9.993581,-7.822148,-2.590129,-4.181554,-0.504891,9.978909,6.581241,1.876987,5.286235,-0.837358,-0.982163,8.882876,7.426053,-8.909615,9.685625,5.951657,-6.086913,-1.962460,-8.344851,6.299462,6.511950,6.906717,-8.266016,7.865037,8.990212,2.225537,-3.075542,9.950751,-4.154436,6.910693,-9.712801,-7.232800,7.633510,2.973475,6.484969,-5.426956,-0.526540,-6.797389,4.815377,-7.184855,9.988240,-2.101987,-2.540768,9.514441,5.906477,-9.477034,-5.656868,2.810213,8.969303,2.884545,5.620936,2.399630,-9.763939,-4.840244,-8.920620,-1.770212,-4.421843,2.871343,7.860298,3.775641,1.395847,-3.733416,-6.725708,3.180458,-6.828027,4.573468,1.082448,0.182002,-1.936353,8.113821,4.243020,-8.626524,-8.983573,-7.970280,-4.741036,1.409042,-3.615724,8.012948,5.977870,-1.400344,-0.883995,7.528176,8.137263,8.588421,-0.192701,-1.313315,-4.792242,3.816383,-5.007153,-1.182592,2.052746,-3.267321,4.937700,9.540198,3.454704,8.777977,4.290434,4.047516,1.158139,-5.727764,1.399291,0.417827,2.902003,-6.994408,4.652969,-3.816482,-9.465290,-5.801409,5.933396,-5.697735,1.489491,-2.870339,-3.445546,3.476410,-6.745542,3.382577,-7.335588,1.846460,7.935818,0.167980,0.664903,-9.518693,2.801722,3.708433,-6.555384,3.112485,1.214074,-8.024157,2.974377,-7.029209,2.701690,4.744961,-8.886968,1.108552,-4.683579,-6.198378,-7.652709,-0.265661,1.723190,-6.824583,2.359167,-7.011814,7.389838,4.920348,-7.550188,-7.648071,2.516821,-2.925406,3.842672,-8.929513,-5.105911,4.804040,1.951834,-5.972531,5.047253,-1.346638,-8.569649,-9.554597,5.660381,-3.772634,7.286276,4.024315,-2.682423,-4.211682,7.754846,-0.944192,-6.208121,-3.099170,4.664558,-3.766755,-5.397477,7.006564,3.827725,-8.802893,0.153434,2.761188,-4.194248,-3.090691,-3.973596,-5.049871,3.928312,5.205131,-6.562647,7.185415,3.273415,-2.383570,-1.665630,-4.184699,7.025846,-2.869506,-2.809985,1.688255,-0.638759,1.862203,4.253408,-7.621926,-1.353071,-3.282632,8.500742,-8.870641,9.118351,-9.355823,2.428014,-0.965038,-8.147657,6.490098,-4.552888,2.734376,-6.999944,6.470110,-2.994540,-5.137891,8.864374,8.110458,-6.985002,2.659957,-7.328814,6.066591,1.709546,6.630065,-7.270120,-2.408390,0.908927,2.027198,-1.632467,2.566701,-5.036585,-1.708163,-1.492487,3.007594,8.109440,0.285534,-4.434121,3.623826,-4.122636,0.607540,-7.840339,2.493193,0.988524,8.605916,2.627291,-7.588226,9.948611,5.164871,-3.090558,-0.139619,-9.002122,-1.035362,9.039466,-3.543172,-0.229254,-0.768476,4.222178,-9.287401,9.291518,-8.800910,3.753146,-9.076120,3.889867,-7.485481,-8.289227,-6.188125,-2.096215,-7.472790,-4.791150,7.561357,-6.307739,8.521397,8.125514,9.611248,-9.380530,5.156333,-4.325056,-9.778439,-7.054631,-1.071273,2.800744,9.752227,9.530544,6.065381,-7.574262,-9.250628,3.670463,-9.686311,8.290155,2.706285,3.997140,6.553624,-6.799576,-7.062393,1.946132,-1.164490,9.954211,-4.607842,9.309763,-0.172700,1.878041,-0.520201,5.257538,1.095031,-9.174810,-9.191396,-5.248170,-7.734616,1.203499,8.593506,8.037640,0.085488,3.487435,6.218142,-7.283915,-7.116554,-7.275247,-8.577422,4.240974,-3.590028,-3.785324,3.935899,1.204712,4.669273,-2.062668,1.627768,-4.521595,-1.470537,-5.827450,-8.176356,-7.269873,-9.193315,-7.118839,-5.968423,4.259989,9.729861,8.378045,-7.495177,-6.271163,8.066970,-8.271154,-7.896302,7.139717,-1.757344,-0.487673,-0.526985,5.088242,7.043402,0.183058,5.970650,0.282756,-8.844386,8.432319,2.320336,8.545891,2.997677,2.734611,-6.617014,-7.473770,-6.949889,-7.079012,3.087806,-8.273666,9.878744,-8.874495,-3.742827,1.832726,-6.054555,2.947334,7.946731,-2.186454,-1.872362,-3.872164,5.752477,2.757009,-1.391870,-5.331365,0.677823,-8.988487,4.694799,7.354275,-1.095923,-0.178878,1.003117,-1.342837,-8.609911,4.526704,-9.187237,-3.419090,0.315626,-6.346447,7.133958,4.511917,9.289000,4.165405,1.493765,-3.839100,1.652511,-2.155377,-9.145474,1.981704,-2.580936,2.745866,1.707864,-1.242367,8.920577,-4.779654,1.219703,6.714783,2.901621,4.850509,1.032545,7.491291,0.612002,7.172214,-6.823947,-4.836400,-8.395336,-7.932929,9.187998,-3.329470,3.269102,1.142632,-1.625696,9.810263,0.990643,-2.261853,-3.850670,-5.270634,-0.055339,5.231968,-9.843802,6.044719,7.602959,-2.710883,-8.209596,3.545407,6.364902,-4.995617,6.532778,-4.590227,9.529024,9.896533,-7.517534,5.318229,6.033886,9.428742,-2.792512,-5.109191,-2.708273,5.489040,5.286014,-3.409816,1.466619,7.221602,-6.590049,-7.218928,-9.340388,0.076408,1.107038,6.460811,7.865376,-8.229950,5.258466,8.518068,-4.126080,-1.821854,9.572190,-4.254310,-3.359612,9.684227,6.714049,-7.212399,8.887988,-0.268439,-8.410257,-6.137546,4.844850,0.955074,8.865979,-8.666194,3.067760,-8.370914,-3.063542,-0.021105,-7.652273,4.944075,4.094303,2.626788,-4.623111,7.780736,-0.638905,-3.562574,-9.841980,-4.561488,9.309260,9.635876,-7.283262,6.756884,6.964225,6.961013,-3.633224,5.679856,-0.371786,-4.109001,9.443486,2.475746,9.502816,3.912407,2.071618,-4.184722,-1.112196,-1.955898,8.621312,3.388545,3.339305,-2.246860,-4.676917,0.161304,-6.627334,6.404970,2.511560,9.861746,-7.169575,-5.628249,0.869845,-1.808743,2.850827,-2.611692,5.741993,3.502291,-6.453080,-5.614365,2.945060,0.219389,6.293427,1.419431,0.515001,-0.460200,8.455786,2.043418,9.656395,3.044737,-5.120573,2.612162,1.672945,-7.550118,-9.681707,-6.794304,-2.251500,1.459261,-1.341335,-9.512869,-0.526336,-3.440878,-0.206398,-7.419479,0.414598,-1.782752,4.988970,2.337670,-7.934206,-3.496688,-0.943288,-5.589132,-0.611722,0.707022,9.478856,-3.812182,-9.546405,8.688976,-1.096394,-8.824895,0.923598,-8.271933,-2.871533,-1.963175,4.888320,1.753617,8.001714,8.813681,7.560005,3.359352,-8.812749,-5.573087,-2.928884,0.379861,8.842409,-1.290932,-1.326137,9.421562,9.502899,3.193814,-5.382479,-9.874276,2.821529,3.361464,-8.328810,2.875535,-4.520221,6.441936,4.248906,-6.659459,-3.787053,-7.259967,1.873478,3.892869,0.770023,6.821721,4.395624,9.524418,1.963870,-9.082304,0.509651,9.348845,0.949012,-6.183090,9.521085,-5.984027,-0.679158,4.695951,-3.946792,-4.920355,3.301074,-4.705862,4.896261,0.295409,-3.718668,3.936875,0.379016,-0.509115,5.663361,-9.569898,4.594874,3.364486,2.188644,9.965905,3.697074,7.618842,6.977919,-8.324909,4.674889,-0.670353,7.916392,-4.268052,-8.893271,3.696949,5.881017,-4.398586,-9.760287,-8.280279,-2.026644,-1.907361,5.031592,3.548430,1.661357,-1.119302,3.354969,-8.144402,-0.946613,-7.906507,3.646768,-5.796208,6.634279,0.694405,-9.967630,3.994798,0.371620,1.274571,4.002779,-8.168161,-3.878003,7.042943,0.435956,-8.357688,-6.571085,-3.046606,-7.984129,4.170822,6.544112,-3.024259,-2.090746,4.303540,9.965497,0.591739,4.055128,3.472295,-3.935672,3.139626,-0.723229,3.904834,-1.100748,2.420589,-6.930725,-4.027193,0.826123,-9.031419,-8.242484,-6.618122,-2.528461,-3.002432,5.978582,8.322555,6.628918,6.916551,-7.805000,-4.451447,-3.975548,5.297182,-2.921852,-1.379915,-4.546833,-8.585076,-3.146886,-9.042684,-8.091286,-8.802657,-5.585225,4.548673,8.434217,-4.599395,2.120397,-9.689732,-8.761765,-5.567477,-4.282534,-4.056159,4.907500,4.371999,0.683900,-1.130924,2.189359,5.381188,-1.385673,5.303250,3.816592,5.513502,-2.996941,-3.700815,-4.196582,-0.321974,-6.698113,7.753459,7.957451,4.040226,7.952966,-6.120292,5.560795,-6.153250,-7.447210,9.491520,8.665742,-9.292240,-0.868830,-1.188712,0.745014,0.189743,-6.670078,-7.309301,-7.303817,-0.081951,8.572197,-3.504245,8.920485,2.827884,-7.974462,3.218291,3.541984,2.347603,8.513641,-0.333474,-7.265078,-5.141884,9.519778,-7.037793,-9.517717,3.849411,1.877218,-4.943919,-4.339879,-3.312867,-8.796264,0.025301,3.946042,-8.992940,-5.704161,-4.940392,-6.078242,2.497141,5.436497,1.619971,4.365878,3.858535,-6.720659,0.714362,2.671953,0.128048,3.237893,-3.675404,-8.537768,1.860498,6.649088,3.470307,-2.551269,8.164232,8.053728,-3.579618,9.046209,8.083015,3.276570,6.652394,6.519337,4.852149,9.598040,9.439402,-0.045364,-9.401803,-8.391697,4.142184,7.573180,-4.253196,-5.930329,0.120391,7.479664,2.783074,1.147418,1.889587,-3.177755,9.548397,-8.220246,7.150356,-8.947305,9.609274,2.035049,6.719687,4.859970,1.701550,-3.616231,-4.240556,-3.161095,1.462446,-8.261608,-9.233492,4.536831,-6.515660,-0.085770,-4.851680,1.704871,-2.466434,-5.402846,3.080154,8.593103,9.315941,7.684823,2.370044,-4.709805,7.376996,-3.420191,8.737676,-1.296920,1.048350,6.476281,4.827905,4.193959,8.184589,7.688143,-7.813108,-0.500929,9.914692,7.183394,7.378843,1.300502,-6.094505,-9.723204,5.806417,6.390443,8.241662,-6.317926,7.578920,-0.182465,2.617376,-0.360624,6.486860,-5.414175,-2.826934,7.233643,1.382936,4.253131,-2.090288,8.267875,-8.705795,5.200854,2.009103,-3.177224,7.770524,4.239626,-8.037998,-5.846859,-6.585075,-4.576407,-1.750862,-6.398682,-1.551460,1.950399,3.564384,-4.689168,2.886180,-4.469735,9.224058,-0.851394,5.169920,-5.203688,0.880822,0.263794,7.618238,-0.010753,-0.595480,0.734938,-1.156725,4.471228,2.054814,7.979400,2.381514,0.664254,-2.820626,-6.969825,6.420311,-5.331930,4.519405,1.562046,9.330229,2.420085,-5.809208,6.640715,7.193397,1.917688,-1.857649,-3.894166,-4.683376,8.238071,6.626427,-2.201474,-7.069932,0.397563,5.019454,-7.210448,-9.350612,-4.455015,-9.785246,-7.748291,-8.348833,-7.694211,-3.178271,2.748388,-4.562232,-2.068896,-6.738920,-3.888797,6.866491,-2.968551,-3.870081,5.921445,-3.127109,-0.035282,5.235163,5.315162,-5.888883,4.010680,-2.401174,7.734644,5.090767,-5.246620,-1.954643,-3.626771,-5.758702,-6.162952,7.868634,4.298479,2.199106,-2.408481,-3.752779,4.891700,3.154612,-4.493203,7.001891,-9.373141,9.949301,-1.233381,1.065840,2.234053,8.763618,7.921135,4.201835,5.073194,-6.389170,-2.158096,2.997641,1.340452,-2.217952,-3.768087,9.346001,-6.718233,4.764667,-4.576884,7.007819,-6.750171,-9.123315,7.111679,-2.666340,-6.558312,-4.747215,-0.183122,-5.907488,-1.504491,8.776818,-2.034652,6.754434,3.585906,7.104024,3.136919,4.095855,-7.720750,2.938983,3.361558,-5.003767,-8.358079,-3.011752,-4.523135,-3.450324,1.713651,7.079826,-2.626700,-6.679545,0.824234,-7.868507,-2.452563,-3.773167,2.453923,-3.937024,6.126460,-9.808815,1.650575,-3.812206,-8.273756,-9.500140,-1.014473,1.125685,-2.186579,-0.128401,-3.998314,1.440174,-3.948980,2.721632,4.052987,1.986289,-8.978384,6.017255,-9.220991,7.000027,-4.519231,5.757324,4.615866,-3.297638,-9.886718,6.698489,8.306596,-8.557031,-0.143016,8.777367,0.333260,-9.122326,-4.446254,-5.005976,-7.795327,7.733765,1.161524,6.837777,-0.271484,7.914859,7.910589,9.154733,2.128336,-5.428693,8.991677,7.405091,-7.097374,-2.819176,2.000049,-3.743880,-3.484701,2.600261,-3.502666,-8.002120,-2.116669,4.499114,-9.501275,-4.731203,-5.522958,6.895032,-7.933292,2.546373,-9.750967,4.409086,-4.807890,2.202073,-6.026339,-9.399849,-7.718598,2.386349,-6.155359,-9.961863,3.228722,-3.426355,5.773290,9.447519,9.675422,1.770780,-4.280274,8.427098,-6.139215,0.440241,1.988629,6.722787,-1.474781,-8.695480,5.745886,5.150914,6.908959,2.513405,4.349626,-7.922747,2.705843,-9.609354,4.654871,-7.041418,2.076414,-8.865062,2.880978,-3.945625,-7.610076,9.346746,8.316840,-9.128231,-7.697633,2.225921,-0.292109,-1.082874,7.852105,4.602541,1.588551,-7.243275,0.419560,9.125280,-9.786689,-3.283297,0.319426,6.990158,-8.907735,7.415528,0.672144,-6.112741,7.484820,6.120371,4.651434,8.921521,-0.819757,9.245626,-9.663043,-5.296520,-0.502716,5.737238,-6.086401,-9.691268,-2.573751,-8.260096,9.346592,5.493606,1.423199,0.070989,9.568919,0.390244,2.571507,8.753750,-6.229151,-7.180371,-8.570223,-4.779380,-8.068271,6.898371,-6.080596,-3.655209,-2.786165,-4.856148,-1.532681,-4.555078,-5.218782,8.335610,3.833241,5.566811,5.119645,-8.397826,6.034324,-4.902235,-2.291967,-5.256671,9.668112,-3.771674,-3.402823,-0.022213,-6.471564,-1.995325,-0.510576,-4.026011,-3.427273,7.238592,-5.129817,5.966006,-8.967428,1.317011,9.318780,-2.517407,7.524965,-5.959458,7.397773,-2.661223,-8.524211,9.716202,7.502383,-7.133574,6.551332,0.300610,1.709428,-8.803881,-3.614023,-4.024310,7.236545,7.143882,9.131008,9.975468,-0.091957,8.408501,-0.136306,3.475707,-1.201136,-5.646572,-7.988135,8.106229,-2.443266,7.140735,-6.796879,0.374693,-1.353244,-1.903619,-4.789535,7.511141,8.464208,3.149858,4.749322,9.171222,-4.711499,9.870189,6.479901,8.005064,-2.215821,7.213340,-0.101821,8.440470,1.352551,0.122071,3.817096,-6.442890], dtype = "float32")#candidate|1487|(1430,)|const|float32
call_1486 = func_111_call(relay.reshape(const_1487.astype('float32'), [11, 13, 10]), relay.reshape(const_1487.astype('float32'), [11, 13, 10]), )
call_1488 = func_111_call(relay.reshape(const_1487.astype('float32'), [11, 13, 10]), relay.reshape(const_1487.astype('float32'), [11, 13, 10]), )
output = relay.Tuple([uop_1470,call_1476,var_1477,call_1486,const_1487,])
output2 = relay.Tuple([uop_1470,call_1478,var_1477,call_1488,const_1487,])
func_1500 = relay.Function([var_1469,var_1477,], output)
mod['func_1500'] = func_1500
mod = relay.transform.InferType()(mod)
var_1501 = relay.var("var_1501", dtype = "float32", shape = (3, 6, 15))#candidate|1501|(3, 6, 15)|var|float32
var_1502 = relay.var("var_1502", dtype = "int8", shape = (768,))#candidate|1502|(768,)|var|int8
output = func_1500(var_1501,var_1502,)
func_1503 = relay.Function([var_1501,var_1502,], output)
mutated_mod['func_1503'] = func_1503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_848_call = mod.get_global_var('func_848')
func_850_call = mutated_mod.get_global_var('func_850')
call_1512 = relay.TupleGetItem(func_848_call(), 0)
call_1513 = relay.TupleGetItem(func_850_call(), 0)
output = relay.Tuple([call_1512,])
output2 = relay.Tuple([call_1513,])
func_1516 = relay.Function([], output)
mod['func_1516'] = func_1516
mod = relay.transform.InferType()(mod)
output = func_1516()
func_1517 = relay.Function([], output)
mutated_mod['func_1517'] = func_1517
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1588 = relay.var("var_1588", dtype = "float64", shape = (9, 6, 15))#candidate|1588|(9, 6, 15)|var|float64
uop_1589 = relay.sigmoid(var_1588.astype('float64')) # shape=(9, 6, 15)
output = uop_1589
output2 = uop_1589
func_1601 = relay.Function([var_1588,], output)
mod['func_1601'] = func_1601
mod = relay.transform.InferType()(mod)
var_1602 = relay.var("var_1602", dtype = "float64", shape = (9, 6, 15))#candidate|1602|(9, 6, 15)|var|float64
output = func_1601(var_1602)
func_1603 = relay.Function([var_1602], output)
mutated_mod['func_1603'] = func_1603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_1605 = relay.TupleGetItem(func_1029_call(), 2)
call_1606 = relay.TupleGetItem(func_1030_call(), 2)
uop_1618 = relay.asinh(call_1605.astype('float64')) # shape=(1430,)
uop_1620 = relay.asinh(call_1606.astype('float64')) # shape=(1430,)
output = uop_1618
output2 = uop_1620
func_1621 = relay.Function([], output)
mod['func_1621'] = func_1621
mod = relay.transform.InferType()(mod)
output = func_1621()
func_1622 = relay.Function([], output)
mutated_mod['func_1622'] = func_1622
mutated_mod = relay.transform.InferType()(mutated_mod)
func_848_call = mod.get_global_var('func_848')
func_850_call = mutated_mod.get_global_var('func_850')
call_1658 = relay.TupleGetItem(func_848_call(), 0)
call_1659 = relay.TupleGetItem(func_850_call(), 0)
uop_1662 = relay.log2(call_1658.astype('float32')) # shape=(3, 16, 16)
uop_1664 = relay.log2(call_1659.astype('float32')) # shape=(3, 16, 16)
const_1667 = relay.const([[[8.969567,4.392138,-2.682083,-3.704719,6.952284,-7.262998,2.397474,-8.697910,5.892340,7.802645,-6.742274,0.912881,-1.753067,-0.273285,5.055656,5.895261],[-8.156621,7.283333,-6.078886,1.974608,6.126241,-8.634211,-4.113049,-0.823536,-5.261371,5.178735,4.398758,-6.766885,5.980512,-6.707888,-1.040995,-0.810363],[-2.699495,-9.411157,2.054226,5.114634,9.164629,-2.412417,-2.124149,-6.801047,-8.631164,6.812443,-7.116384,7.078186,-6.587224,6.475756,5.239784,5.387198],[6.117447,-8.004818,-7.707565,9.827376,1.888573,6.799577,-8.533986,-4.448547,4.412743,-1.604148,-3.608081,-0.872596,3.724028,4.173338,2.824428,0.935816],[-1.028892,0.048316,4.731486,7.912487,-6.975572,-5.142439,-3.469606,2.120669,4.639202,9.506588,-3.720294,-1.685663,9.022480,-4.194984,1.309353,-3.077929],[-2.175733,-0.702018,-3.682474,-7.622969,-4.169555,-2.107871,-7.432681,-1.920172,5.504924,8.410777,9.177526,-9.624841,7.034802,7.829186,-4.456607,0.342005],[-8.275899,-2.593107,7.730889,8.990982,6.675756,-4.690598,-2.057115,1.767711,-7.211446,1.046501,3.675292,2.701369,-3.984347,6.919359,-6.878825,6.847871],[-0.426842,4.879685,9.011162,7.142098,-1.590264,-6.624463,-1.652085,2.529175,-3.275973,5.801621,-5.492181,-1.033901,5.015242,9.295151,-2.588369,-6.899513],[-0.286185,-5.924300,4.275671,-0.848714,3.594966,-0.540831,4.144853,9.075680,-1.183450,7.186379,7.226892,1.927875,0.449968,-5.783297,-1.855630,-7.563763],[-9.166014,-7.732406,-4.787084,-9.557355,8.610487,9.280405,-0.151848,-5.958146,9.778226,9.473579,1.978843,-8.000256,0.925210,9.440770,2.706757,-6.284367],[-7.215676,0.851990,8.088910,3.226567,-7.588294,1.142460,2.018035,0.857071,4.499395,2.896070,-1.075337,5.643040,-0.484576,5.873234,-5.017123,6.403970],[-4.156237,0.223539,-4.861997,-1.284354,-3.670878,0.472608,5.969731,-3.651215,9.161716,5.327000,7.162883,7.164474,2.250325,-1.689001,-1.750139,2.196038],[-2.680269,9.439826,1.604106,-4.691225,3.762595,0.579011,-2.629022,-0.481001,9.857731,8.169266,-5.589833,-0.246442,5.337888,-2.910465,-0.208163,-3.383500],[-0.737682,-6.619390,4.087286,0.508554,-5.985567,1.252169,7.969009,5.798660,-8.903201,9.302376,0.967011,-6.295273,-5.000378,8.340002,-2.523203,-5.121332],[2.757042,-9.893979,4.280597,3.908387,-1.716786,-9.977188,-8.621987,-7.801093,1.931697,-9.426911,1.097453,7.791578,5.336613,8.488997,4.356041,-8.561005],[-7.908794,7.855928,3.837799,9.710526,-0.334134,6.938339,3.804014,5.443732,2.765427,-1.087332,-5.052637,4.600627,-7.683007,-1.779641,-1.977625,-8.772412]],[[2.336739,-8.398760,-3.674356,3.072846,5.624740,-6.260269,-8.509035,3.378915,3.701453,0.423127,-6.853392,2.649127,0.568863,-0.157230,-0.093689,-7.399295],[-7.778261,-1.591108,-1.799906,9.227586,-1.137426,0.159871,6.004107,8.677956,-7.021122,0.556973,9.275810,9.862720,-5.525771,-9.424426,-0.229246,-4.643260],[0.782279,5.031667,-9.230242,3.272755,-3.814786,-6.401077,-1.236791,-2.888094,-9.394352,2.925286,-0.936913,-9.604925,-5.349535,-3.023668,5.598474,5.586298],[8.515856,-6.278550,-0.878899,7.323007,-5.446866,-5.234196,7.627979,8.596193,-8.042892,7.905163,3.394471,7.019280,-4.664398,-2.394450,8.712161,-8.204802],[5.273593,-9.056833,-1.607406,-0.833179,2.081023,1.620188,-7.087844,-0.348558,1.244954,8.230813,1.769556,-0.180902,-5.761901,3.818175,2.151134,9.902439],[1.924501,-1.221023,9.020148,-5.276486,3.029797,1.727991,8.283548,7.897237,2.195885,5.409341,7.619320,-8.084836,2.531209,2.604718,6.534913,5.078805],[0.443625,-3.284334,-1.486549,4.788008,7.861198,3.682838,0.617823,3.101059,-9.161895,5.714696,0.761240,8.880989,-2.871888,1.845032,0.051458,-4.414248],[-6.711370,2.313085,5.250693,-4.923222,9.775073,8.988933,-2.987100,0.018169,-6.516146,8.784175,-4.566921,-2.119709,4.334679,-3.290552,-8.696587,6.005846],[-1.719663,5.551964,-3.401442,-6.535286,-1.324974,-5.879506,-3.685046,2.009418,-9.785296,-3.172655,2.900606,0.295031,-3.938828,-7.708044,-5.116800,4.397243],[-1.044551,1.056171,3.366752,3.237220,3.253720,-7.321149,1.012226,-6.813392,-4.773863,7.109894,1.536619,3.803832,-9.236015,-7.337454,8.145392,4.720383],[4.116431,-5.174874,-8.447905,-8.237152,1.705013,-1.891834,-0.683438,1.552731,6.395999,-3.276798,2.394295,2.860914,9.801933,3.082961,3.344351,4.074683],[1.997229,4.124598,2.919679,1.751801,0.618662,8.725651,6.301924,-4.554908,2.780084,7.380403,-7.771150,9.995589,1.151458,0.061350,0.696890,9.755911],[-9.536483,5.219063,-5.502201,9.355813,-6.108983,3.978898,5.986695,-5.589749,-7.133542,5.082053,-4.174576,1.631748,7.170928,6.877633,6.062848,3.189098],[2.399107,4.615838,-8.121294,6.821839,9.667432,-5.918372,7.943507,-9.333549,-1.447869,-2.974230,-6.455123,-8.256042,-9.411782,-0.540737,-4.640462,-0.728559],[-4.054001,4.191215,-2.526704,0.423578,7.028029,-8.566102,3.854135,9.002003,-0.702949,-1.145202,3.674784,6.458655,-4.240682,8.963088,7.628783,6.225369],[9.502816,-1.280327,2.582636,8.269222,5.769417,5.665916,-2.296613,6.514905,5.418013,3.823340,-6.570843,-6.204845,7.220471,-3.522591,3.058881,-1.981112]],[[-6.886550,-6.503916,1.716510,9.529287,3.528585,3.999973,5.611191,1.063376,-3.433486,1.393987,6.284440,-2.897036,7.919150,8.331262,-8.800837,7.167610],[3.517427,-9.010990,0.303899,6.275077,0.917656,8.463173,0.027113,9.802789,6.776654,6.513940,-2.319052,1.794921,-4.752009,0.573638,0.289273,3.312319],[-8.966147,6.426472,3.022881,3.188366,0.558593,8.835544,3.236177,-9.723602,2.438071,0.269410,4.644645,0.031369,7.555350,-8.761297,7.410932,3.241856],[-2.596382,-6.880437,-6.509863,-8.140126,-5.550953,-3.928260,-5.172937,-0.374475,-6.892750,9.905479,0.591685,3.569136,5.288135,2.868382,-6.231612,8.170656],[2.994607,-6.685719,1.746443,3.781423,4.416274,9.748811,-4.578881,8.139151,2.805909,5.566402,-7.899017,6.551826,-5.979506,-5.453885,-8.689606,0.608415],[0.604288,6.937167,-9.626993,-8.329181,-3.011504,5.472203,-1.737156,-9.341172,-6.327108,-8.843526,-9.424591,-2.311077,-7.541775,3.991829,-3.011176,-7.153801],[4.389780,-1.218527,-1.232155,4.685484,-9.924589,9.043348,2.472960,-5.451473,9.630596,-0.268478,3.652579,7.219993,-2.077345,-6.032679,6.918750,-4.544687],[-8.390817,1.161970,-6.595002,5.252816,8.498543,3.612697,-9.795584,-2.229010,-6.064373,-6.336884,-1.963912,1.789523,-8.652479,4.302091,-3.892867,-1.882546],[0.857233,2.718244,-6.929444,-6.595711,3.037292,6.121327,-5.281792,-9.678203,-2.380163,-1.392913,-5.412784,0.569654,2.872889,-0.950716,7.441007,-5.904534],[-1.011352,-0.089697,-7.369118,0.358766,-6.064102,-3.236339,-4.074116,0.059014,1.463597,5.704207,6.517168,-5.072941,-4.529465,-3.983347,-1.375555,-3.286649],[-4.545673,4.475085,0.175682,-0.309962,4.331429,-8.458337,1.337219,4.864402,6.640226,-2.261436,2.205581,7.503374,-8.009869,5.891219,-3.432296,2.621621],[-5.587887,-7.246129,6.003608,4.749896,1.383774,9.546872,5.832146,1.054414,8.727314,4.088422,-9.889141,-7.960010,-6.114514,5.950212,0.463269,8.233496],[-6.740289,-2.510188,4.156864,-1.300439,0.880773,2.150350,-1.795501,-4.377049,5.304661,6.897400,-3.736708,-6.680744,5.532872,-9.319131,-8.020948,3.913738],[2.455165,8.873699,0.659552,6.759914,3.957111,-5.994091,4.312176,4.898012,-6.286428,-8.444850,5.383165,-6.545125,4.668298,1.095222,-8.112827,-2.215233],[-9.964483,-9.402716,5.754418,9.878887,7.419482,0.694018,-8.525058,9.824373,1.518177,1.181148,-9.446969,0.425832,-2.814156,9.154846,5.381828,-8.507091],[5.503911,-6.109677,-9.533170,1.654697,7.076470,-9.645335,-7.349354,-1.466723,-6.358911,-8.398514,1.084392,-8.490383,-0.911649,2.259022,5.703623,-7.002813]]], dtype = "float32")#candidate|1667|(3, 16, 16)|const|float32
bop_1668 = relay.logical_and(uop_1662.astype('bool'), relay.reshape(const_1667.astype('bool'), relay.shape_of(uop_1662))) # shape=(3, 16, 16)
bop_1671 = relay.logical_and(uop_1664.astype('bool'), relay.reshape(const_1667.astype('bool'), relay.shape_of(uop_1664))) # shape=(3, 16, 16)
output = relay.Tuple([bop_1668,])
output2 = relay.Tuple([bop_1671,])
func_1680 = relay.Function([], output)
mod['func_1680'] = func_1680
mod = relay.transform.InferType()(mod)
mutated_mod['func_1680'] = func_1680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mutated_mod.get_global_var('func_1680')
call_1681 = func_1680_call()
output = call_1681
func_1682 = relay.Function([], output)
mutated_mod['func_1682'] = func_1682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1621_call = mod.get_global_var('func_1621')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_1750 = func_1621_call()
call_1751 = func_1621_call()
output = relay.Tuple([call_1750,])
output2 = relay.Tuple([call_1751,])
func_1752 = relay.Function([], output)
mod['func_1752'] = func_1752
mod = relay.transform.InferType()(mod)
mutated_mod['func_1752'] = func_1752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1752_call = mutated_mod.get_global_var('func_1752')
call_1753 = func_1752_call()
output = call_1753
func_1754 = relay.Function([], output)
mutated_mod['func_1754'] = func_1754
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1759 = relay.var("var_1759", dtype = "float64", shape = (11, 8, 2))#candidate|1759|(11, 8, 2)|var|float64
uop_1760 = relay.acos(var_1759.astype('float64')) # shape=(11, 8, 2)
output = uop_1760
output2 = uop_1760
func_1778 = relay.Function([var_1759,], output)
mod['func_1778'] = func_1778
mod = relay.transform.InferType()(mod)
mutated_mod['func_1778'] = func_1778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1779 = relay.var("var_1779", dtype = "float64", shape = (11, 8, 2))#candidate|1779|(11, 8, 2)|var|float64
func_1778_call = mutated_mod.get_global_var('func_1778')
call_1780 = func_1778_call(var_1779)
output = call_1780
func_1781 = relay.Function([var_1779], output)
mutated_mod['func_1781'] = func_1781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_848_call = mod.get_global_var('func_848')
func_850_call = mutated_mod.get_global_var('func_850')
call_1783 = relay.TupleGetItem(func_848_call(), 0)
call_1784 = relay.TupleGetItem(func_850_call(), 0)
func_1601_call = mod.get_global_var('func_1601')
func_1603_call = mutated_mod.get_global_var('func_1603')
const_1791 = relay.const([[-7.644525,7.306438,2.825402,-2.591211,-3.764898,-0.094938,2.235027,1.260362,-5.711051,-2.659962],[-5.227847,-6.776062,9.809929,6.582133,-6.780039,-2.342260,7.608223,0.666867,-6.198709,9.965920],[1.609558,3.036752,-0.657597,-2.235610,9.377072,-7.200062,1.565393,5.903270,-1.489602,-1.975804],[5.277296,7.065828,-4.750301,4.516807,9.101039,1.280789,-9.592581,4.203613,-8.812363,0.010859],[-1.029174,5.979975,-9.245292,-4.225123,-0.091323,-9.215563,2.242059,-0.972089,-3.080080,9.243720],[-7.726611,-5.904177,0.799439,6.917613,-1.845775,-1.643196,-1.109824,-0.919513,-5.810153,-5.913958],[7.517595,-0.176110,-2.427872,-8.692392,-1.973480,-3.887302,-3.707310,0.754857,-8.116605,6.362804],[-3.244019,-9.080453,-5.080595,2.746511,4.870690,6.318984,-9.012979,-2.490834,-2.425290,-4.806742],[-5.532257,1.809200,6.454658,-6.513074,2.125612,-3.141268,9.673822,-4.036128,7.883943,-3.602570],[5.873555,9.603759,6.529356,9.985736,-8.722790,-7.656742,-5.351836,-7.851738,4.903334,-6.689265],[-8.392498,-2.858680,8.666430,4.825394,-7.531425,3.857592,6.261219,-2.011731,-6.572266,-4.272553],[1.780648,5.165496,-8.469225,5.280373,2.222473,-8.045673,1.524380,7.170546,-9.857398,1.854963],[3.591818,-6.501276,-1.280587,6.772646,-7.407561,7.084303,8.749898,-0.611157,-6.057451,8.778682],[1.324837,-9.641148,-3.113328,1.191736,-3.232795,1.006839,9.171983,9.238921,-2.082520,2.172260],[-0.468502,-5.163591,0.134071,-9.132187,8.973477,1.015041,2.367462,6.328990,-6.775430,-3.749052],[0.744160,-0.803352,-8.615457,-6.710889,-2.143210,2.530284,4.178235,-8.393045,-8.574260,-7.047288],[-4.040311,-4.246249,1.825622,5.871986,-5.726269,3.187346,-3.187811,2.055846,7.129444,4.821901],[9.941628,-5.621773,0.964625,4.190651,8.899553,7.630734,-8.876422,-8.912445,0.618107,2.656636],[7.187033,1.026372,-5.013843,-2.002912,7.042126,2.622505,6.992470,4.652481,3.202418,-5.003432],[-4.403145,-0.982480,-1.687818,9.839768,7.145396,9.813868,7.948583,-7.104922,7.931276,0.859019],[-8.772281,8.846606,-1.420384,-0.134534,-0.254225,5.829668,-1.437035,5.764024,-1.272226,-0.627448],[8.965569,-4.404405,4.966426,-5.564625,-5.344351,0.523923,-3.487492,-5.380775,4.966500,-2.221943],[8.080245,-7.434197,-8.378103,-4.240962,-8.701606,-0.350940,8.934138,-0.579700,0.635544,0.380995],[-7.401340,-4.547815,-8.687348,-5.246046,-6.382112,2.198907,-4.852994,0.640172,5.206358,9.954304],[7.571147,7.153262,-3.168328,9.807750,-8.387139,5.079975,4.688198,9.497784,-6.883457,1.568109],[0.842480,0.581871,-7.294740,-1.177993,-4.780533,-4.501800,5.574913,-8.019815,1.710754,2.250122],[8.649637,8.932026,-8.406811,-8.755351,-4.378767,3.296998,-2.922039,3.361018,-0.295506,-4.750193],[7.576388,-6.872324,-5.982200,-7.859105,-0.472079,7.261048,4.356961,-1.380096,7.714608,-7.444167],[-6.700352,4.398855,-8.580092,8.742212,-5.583063,-3.048283,-4.984005,-6.129737,4.593936,1.168808],[-8.333479,1.553223,7.383289,-6.861838,-5.190782,-9.869098,-5.060991,8.669342,-5.310239,3.255401],[-5.206500,-8.313819,-3.142307,5.349819,4.613831,1.287798,7.673918,7.581802,-0.494356,-0.026448],[0.073458,4.575831,-6.022649,-4.974835,-3.520761,-0.930629,4.381393,5.177465,2.875633,-4.733026],[4.536258,9.117205,-0.083501,2.093431,-0.445804,-0.816823,-3.114293,3.762555,-2.137316,5.244612],[-1.633502,-0.477761,-0.404929,1.351548,-3.137029,5.164483,-1.976048,8.689660,9.009219,2.702185],[-7.176227,8.397329,-2.953683,7.194465,8.491471,4.500070,-2.193112,5.928968,2.643061,7.174115],[-5.044083,-8.773756,8.829051,-1.391927,-6.179811,-6.351153,9.978092,-0.226983,-8.690053,-1.511114],[-1.250509,8.992709,3.761494,-9.379995,-9.129060,2.684744,-6.062165,7.664055,0.013497,-1.743132],[6.846756,-9.093196,8.076677,-7.817737,-3.469693,7.122694,-0.591726,-3.367450,0.802131,4.999074],[-9.537306,5.099834,-4.824095,-6.121763,-1.771970,5.445952,7.404937,-1.263127,-2.430642,-2.303905],[2.036890,-8.986761,2.447297,-6.614562,2.479686,-8.569172,-5.386103,-6.117178,-2.226933,-9.369211],[3.278671,-0.400320,3.024371,8.696486,-0.100661,-5.393029,1.822223,5.053114,1.034633,-5.957687],[9.329101,-6.019737,-2.986869,-3.638175,5.862585,7.098367,6.605808,3.328032,-1.128647,-3.556044],[1.524300,-3.754656,6.857521,5.492772,5.516479,1.250586,-4.463824,-4.977417,-1.316821,3.359735],[0.210133,7.750054,-3.379241,7.661569,3.923827,0.851353,2.728356,-8.532159,-6.323645,4.279008],[7.061013,-5.863406,5.121303,-0.048279,-8.601042,5.061628,-1.134598,-9.702150,-0.450937,0.447647],[4.301819,-2.035249,-0.007484,-3.790482,-4.996255,7.495801,-1.628071,6.492918,-3.663314,-8.069679],[3.001741,6.179883,-0.108158,-4.359428,0.188978,-2.109455,9.612201,3.617681,3.864332,-0.105058],[-3.572958,3.670982,6.595806,-1.230709,-6.434113,-1.713987,-5.492381,7.829836,1.436174,7.832449],[1.315625,-1.929589,-0.663444,5.273408,4.921616,1.901196,0.492562,-7.664316,9.425335,-2.418908],[7.972080,5.142544,-3.468295,-6.442993,3.532180,9.803207,-4.160072,7.286051,9.941893,-6.755736],[-7.144136,-1.364018,9.551314,-5.706449,0.774520,-9.005128,-7.644183,2.686068,2.655754,-8.674240],[2.030948,0.776024,0.074125,7.251950,6.742687,7.915508,4.701369,9.258669,9.912961,-0.390402],[0.586637,8.998134,-3.333959,-1.460950,9.367844,-5.590206,-1.765268,-3.876612,-1.611693,2.113283],[7.016050,8.160371,-3.936874,6.719709,6.058910,1.902214,7.812646,-6.377063,7.206659,3.542361],[2.247065,4.800351,8.686061,-2.178465,7.872669,-3.705036,-1.362142,-1.610519,-6.287750,-9.370437],[5.851092,-9.365458,1.497856,-6.162934,-4.600980,3.224229,-9.120036,0.423081,-5.052427,7.814743],[3.195930,-9.154649,-6.394826,8.459278,8.801712,-2.656007,7.186972,8.748127,2.179661,6.649782],[6.953003,6.255097,8.480420,2.003301,-4.678979,-1.950658,-2.509066,-6.007596,8.805068,-2.149840],[1.623159,5.968864,3.655020,6.625551,-7.852203,-1.442204,3.806735,2.882129,5.170755,-3.343364],[-9.387507,7.028645,-5.317552,2.559600,1.003780,-9.244928,-2.382170,8.250165,-7.758909,-5.465473],[6.012927,-8.360118,-1.427946,-2.818730,-8.533180,-8.372077,9.408188,-8.533483,5.856395,9.927054],[1.073944,5.139653,1.469506,4.599002,-8.285153,-1.161298,5.579648,-9.792744,7.651595,6.454346],[-5.970564,-9.534198,2.123503,1.718975,-6.058773,-2.134992,-1.821655,8.352987,-8.463476,9.663174],[-9.618586,1.024064,-3.926794,8.649204,-3.942144,3.938721,-9.076808,-4.837799,-3.786747,-7.735112],[-6.480336,-4.403131,2.916659,-1.302528,1.310191,-7.012038,3.871466,2.643110,2.401739,2.288949],[7.801646,-7.655669,-8.736371,3.128614,-2.017299,5.205372,-0.611520,9.709757,3.855877,-8.348630],[0.797412,-8.009827,-3.322814,-3.691575,4.998305,6.819661,7.770240,-2.136621,-3.976212,-9.639764],[-9.773156,6.653234,-0.793344,-2.678349,-9.847341,-4.465837,8.484882,-4.868537,-6.257951,9.036523],[7.745205,-0.433371,3.569098,-0.768727,-4.480209,-0.961002,6.508665,-6.972575,1.234856,6.166095],[8.111135,2.510354,1.731438,-3.503849,0.596306,4.856324,-0.180996,9.634509,-3.791009,6.524898],[-7.552075,7.378078,4.110878,1.554163,-0.691216,-8.262799,-3.704860,-9.530726,4.605273,2.977406],[5.139164,1.616944,-3.526872,4.463052,6.033007,-7.933213,-3.801056,1.647347,2.944360,-7.968268],[7.305656,9.249795,4.221082,8.586707,-5.395025,1.401305,1.167173,3.217896,4.149566,0.548035],[9.407463,-8.415016,0.113352,3.932619,1.992198,1.434155,-8.881988,-5.613898,-4.096786,-7.082341],[6.921822,-9.476694,0.799034,-2.849849,-6.259377,1.084335,9.375628,-4.123478,1.057900,3.587446],[4.690392,0.450018,0.640118,4.701672,-7.284393,-2.265908,4.062433,-6.654982,-4.083857,4.978982],[-9.253274,-0.989693,5.950806,3.729855,-7.590553,9.485316,3.851578,9.128730,-1.367753,-9.092290],[2.418341,-6.013754,-8.042962,8.433146,-5.371330,2.685108,3.153156,-0.774102,-3.455999,1.514623],[9.808090,2.729298,7.890881,0.262909,3.478556,-0.710970,2.230779,-5.908350,-7.074370,-9.369210],[-4.723604,1.442726,-3.246480,-3.738628,2.353720,3.196249,-3.124271,2.455370,-2.582327,-2.234541],[0.555432,-1.691876,7.711039,-5.641383,-3.802467,-9.158631,-7.333575,-5.028503,-1.282279,-4.134061]], dtype = "float64")#candidate|1791|(81, 10)|const|float64
call_1790 = func_1601_call(relay.reshape(const_1791.astype('float64'), [9, 6, 15]))
call_1792 = func_1601_call(relay.reshape(const_1791.astype('float64'), [9, 6, 15]))
bop_1797 = relay.bitwise_and(call_1790.astype('int16'), relay.reshape(const_1791.astype('int16'), relay.shape_of(call_1790))) # shape=(9, 6, 15)
bop_1800 = relay.bitwise_and(call_1792.astype('int16'), relay.reshape(const_1791.astype('int16'), relay.shape_of(call_1792))) # shape=(9, 6, 15)
output = relay.Tuple([call_1783,bop_1797,])
output2 = relay.Tuple([call_1784,bop_1800,])
func_1808 = relay.Function([], output)
mod['func_1808'] = func_1808
mod = relay.transform.InferType()(mod)
mutated_mod['func_1808'] = func_1808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mutated_mod.get_global_var('func_1808')
call_1809 = func_1808_call()
output = call_1809
func_1810 = relay.Function([], output)
mutated_mod['func_1810'] = func_1810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_1816 = func_772_call()
call_1817 = func_772_call()
output = call_1816
output2 = call_1817
func_1829 = relay.Function([], output)
mod['func_1829'] = func_1829
mod = relay.transform.InferType()(mod)
output = func_1829()
func_1830 = relay.Function([], output)
mutated_mod['func_1830'] = func_1830
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_1869 = relay.TupleGetItem(func_1183_call(), 0)
call_1870 = relay.TupleGetItem(func_1184_call(), 0)
func_1621_call = mod.get_global_var('func_1621')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_1873 = func_1621_call()
call_1874 = func_1621_call()
output = relay.Tuple([call_1869,call_1873,])
output2 = relay.Tuple([call_1870,call_1874,])
func_1882 = relay.Function([], output)
mod['func_1882'] = func_1882
mod = relay.transform.InferType()(mod)
output = func_1882()
func_1883 = relay.Function([], output)
mutated_mod['func_1883'] = func_1883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_1894 = relay.TupleGetItem(func_1029_call(), 2)
call_1895 = relay.TupleGetItem(func_1030_call(), 2)
var_1912 = relay.var("var_1912", dtype = "float32", shape = (1430,))#candidate|1912|(1430,)|var|float32
bop_1913 = relay.mod(call_1894.astype('float32'), relay.reshape(var_1912.astype('float32'), relay.shape_of(call_1894))) # shape=(1430,)
bop_1916 = relay.mod(call_1895.astype('float32'), relay.reshape(var_1912.astype('float32'), relay.shape_of(call_1895))) # shape=(1430,)
bop_1940 = relay.less(var_1912.astype('bool'), relay.reshape(call_1894.astype('bool'), relay.shape_of(var_1912))) # shape=(1430,)
bop_1943 = relay.less(var_1912.astype('bool'), relay.reshape(call_1895.astype('bool'), relay.shape_of(var_1912))) # shape=(1430,)
output = relay.Tuple([bop_1913,bop_1940,])
output2 = relay.Tuple([bop_1916,bop_1943,])
func_1944 = relay.Function([var_1912,], output)
mod['func_1944'] = func_1944
mod = relay.transform.InferType()(mod)
var_1945 = relay.var("var_1945", dtype = "float32", shape = (1430,))#candidate|1945|(1430,)|var|float32
output = func_1944(var_1945)
func_1946 = relay.Function([var_1945], output)
mutated_mod['func_1946'] = func_1946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_1975 = relay.TupleGetItem(func_1808_call(), 1)
call_1976 = relay.TupleGetItem(func_1810_call(), 1)
output = relay.Tuple([call_1975,])
output2 = relay.Tuple([call_1976,])
func_1990 = relay.Function([], output)
mod['func_1990'] = func_1990
mod = relay.transform.InferType()(mod)
output = func_1990()
func_1991 = relay.Function([], output)
mutated_mod['func_1991'] = func_1991
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2025 = relay.TupleGetItem(func_1808_call(), 1)
call_2026 = relay.TupleGetItem(func_1810_call(), 1)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_2044 = func_772_call()
call_2045 = func_772_call()
output = relay.Tuple([call_2025,call_2044,])
output2 = relay.Tuple([call_2026,call_2045,])
func_2050 = relay.Function([], output)
mod['func_2050'] = func_2050
mod = relay.transform.InferType()(mod)
mutated_mod['func_2050'] = func_2050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2050_call = mutated_mod.get_global_var('func_2050')
call_2051 = func_2050_call()
output = call_2051
func_2052 = relay.Function([], output)
mutated_mod['func_2052'] = func_2052
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1680_call = mod.get_global_var('func_1680')
func_1682_call = mutated_mod.get_global_var('func_1682')
call_2069 = relay.TupleGetItem(func_1680_call(), 0)
call_2070 = relay.TupleGetItem(func_1682_call(), 0)
output = call_2069
output2 = call_2070
func_2086 = relay.Function([], output)
mod['func_2086'] = func_2086
mod = relay.transform.InferType()(mod)
mutated_mod['func_2086'] = func_2086
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mutated_mod.get_global_var('func_2086')
call_2087 = func_2086_call()
output = call_2087
func_2088 = relay.Function([], output)
mutated_mod['func_2088'] = func_2088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_848_call = mod.get_global_var('func_848')
func_850_call = mutated_mod.get_global_var('func_850')
call_2092 = relay.TupleGetItem(func_848_call(), 0)
call_2093 = relay.TupleGetItem(func_850_call(), 0)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_2094 = relay.TupleGetItem(func_501_call(), 1)
call_2095 = relay.TupleGetItem(func_503_call(), 1)
output = relay.Tuple([call_2092,call_2094,])
output2 = relay.Tuple([call_2093,call_2095,])
func_2097 = relay.Function([], output)
mod['func_2097'] = func_2097
mod = relay.transform.InferType()(mod)
mutated_mod['func_2097'] = func_2097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mutated_mod.get_global_var('func_2097')
call_2098 = func_2097_call()
output = call_2098
func_2099 = relay.Function([], output)
mutated_mod['func_2099'] = func_2099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_2233 = func_1829_call()
call_2234 = func_1829_call()
output = relay.Tuple([call_2233,])
output2 = relay.Tuple([call_2234,])
func_2237 = relay.Function([], output)
mod['func_2237'] = func_2237
mod = relay.transform.InferType()(mod)
output = func_2237()
func_2238 = relay.Function([], output)
mutated_mod['func_2238'] = func_2238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2249 = relay.TupleGetItem(func_1808_call(), 1)
call_2250 = relay.TupleGetItem(func_1810_call(), 1)
var_2254 = relay.var("var_2254", dtype = "int16", shape = (9, 6, 15))#candidate|2254|(9, 6, 15)|var|int16
bop_2255 = relay.less_equal(call_2249.astype('bool'), relay.reshape(var_2254.astype('bool'), relay.shape_of(call_2249))) # shape=(9, 6, 15)
bop_2258 = relay.less_equal(call_2250.astype('bool'), relay.reshape(var_2254.astype('bool'), relay.shape_of(call_2250))) # shape=(9, 6, 15)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
var_2260 = relay.var("var_2260", dtype = "float32", shape = (11, 130))#candidate|2260|(11, 130)|var|float32
call_2259 = relay.TupleGetItem(func_1944_call(relay.reshape(var_2260.astype('float32'), [1430,])), 1)
call_2261 = relay.TupleGetItem(func_1946_call(relay.reshape(var_2260.astype('float32'), [1430,])), 1)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_2267 = relay.TupleGetItem(func_1183_call(), 0)
call_2268 = relay.TupleGetItem(func_1184_call(), 0)
output = relay.Tuple([bop_2255,call_2259,var_2260,call_2267,])
output2 = relay.Tuple([bop_2258,call_2261,var_2260,call_2268,])
func_2277 = relay.Function([var_2254,var_2260,], output)
mod['func_2277'] = func_2277
mod = relay.transform.InferType()(mod)
var_2278 = relay.var("var_2278", dtype = "int16", shape = (9, 6, 15))#candidate|2278|(9, 6, 15)|var|int16
var_2279 = relay.var("var_2279", dtype = "float32", shape = (11, 130))#candidate|2279|(11, 130)|var|float32
output = func_2277(var_2278,var_2279,)
func_2280 = relay.Function([var_2278,var_2279,], output)
mutated_mod['func_2280'] = func_2280
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1516_call = mod.get_global_var('func_1516')
func_1517_call = mutated_mod.get_global_var('func_1517')
call_2289 = relay.TupleGetItem(func_1516_call(), 0)
call_2290 = relay.TupleGetItem(func_1517_call(), 0)
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
var_2297 = relay.var("var_2297", dtype = "float32", shape = (1430,))#candidate|2297|(1430,)|var|float32
call_2296 = relay.TupleGetItem(func_1944_call(relay.reshape(var_2297.astype('float32'), [1430,])), 0)
call_2298 = relay.TupleGetItem(func_1946_call(relay.reshape(var_2297.astype('float32'), [1430,])), 0)
func_1882_call = mod.get_global_var('func_1882')
func_1883_call = mutated_mod.get_global_var('func_1883')
call_2303 = relay.TupleGetItem(func_1882_call(), 0)
call_2304 = relay.TupleGetItem(func_1883_call(), 0)
uop_2305 = relay.atanh(call_2303.astype('float32')) # shape=(1430,)
uop_2307 = relay.atanh(call_2304.astype('float32')) # shape=(1430,)
uop_2308 = relay.asin(uop_2305.astype('float64')) # shape=(1430,)
uop_2310 = relay.asin(uop_2307.astype('float64')) # shape=(1430,)
output = relay.Tuple([call_2289,call_2296,var_2297,uop_2308,])
output2 = relay.Tuple([call_2290,call_2298,var_2297,uop_2310,])
func_2327 = relay.Function([var_2297,], output)
mod['func_2327'] = func_2327
mod = relay.transform.InferType()(mod)
var_2328 = relay.var("var_2328", dtype = "float32", shape = (1430,))#candidate|2328|(1430,)|var|float32
output = func_2327(var_2328)
func_2329 = relay.Function([var_2328], output)
mutated_mod['func_2329'] = func_2329
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2344 = relay.const([[[-3.308671],[6.554731],[1.728320],[7.872430],[-5.419396],[-9.934642],[-6.466073],[3.478622],[-4.913631],[-0.132746],[0.064690],[-6.062703],[-9.932341],[6.921537]],[[-2.208816],[-5.947307],[4.836755],[8.628159],[-6.610571],[3.110701],[5.601048],[2.607431],[-3.724106],[-5.248678],[4.784862],[-9.475395],[1.265180],[-1.095045]],[[2.254289],[7.564250],[-3.945263],[-3.038263],[-7.915290],[-4.419450],[-0.342368],[2.719794],[-7.373917],[-6.896280],[3.645711],[4.355039],[8.792743],[3.852830]],[[5.465397],[-9.391985],[6.277311],[-7.494079],[-3.775147],[5.486241],[-9.243020],[5.237979],[4.925004],[-3.983890],[6.306525],[0.243853],[8.909026],[5.168918]],[[-5.958158],[5.387641],[-8.621671],[-8.369409],[-2.749762],[0.538692],[3.906835],[4.855703],[1.549943],[-3.767521],[6.788688],[-9.822998],[6.564137],[1.809455]],[[-0.212427],[-8.473812],[6.140634],[-8.654876],[9.370999],[0.904074],[4.569991],[-8.095181],[-0.770820],[4.297985],[-2.437984],[-0.311794],[-2.080742],[3.222245]],[[-1.104041],[3.151846],[5.167311],[7.324143],[8.708035],[3.254213],[-0.160537],[-0.662535],[8.190027],[-0.879022],[-7.193742],[9.770235],[-5.096455],[-2.162544]],[[-6.527848],[-4.702091],[-8.115860],[-9.452772],[9.491252],[-6.447062],[3.137335],[-0.121262],[0.609822],[-9.472867],[2.978482],[-5.865502],[-7.808064],[9.441622]],[[1.410158],[9.193474],[9.696333],[2.030032],[7.371983],[1.734438],[1.905584],[-5.521071],[3.551150],[7.156887],[0.449930],[-3.625657],[-9.540231],[2.134975]],[[-7.243138],[6.871311],[-2.156327],[-2.779599],[8.072700],[-5.087742],[1.175206],[3.171925],[8.564474],[2.740131],[-9.511091],[2.980916],[-3.255391],[2.715671]],[[-7.332669],[4.295787],[3.336587],[8.730383],[-1.925350],[6.306151],[8.351850],[-8.433969],[5.635511],[3.410174],[1.700997],[-0.443013],[9.551577],[-0.064610]],[[8.828931],[5.734473],[-6.338941],[-5.589833],[2.572011],[7.292174],[7.759754],[8.777214],[-8.145307],[3.537666],[-7.652669],[0.647122],[-6.703070],[7.891961]]], dtype = "float32")#candidate|2344|(12, 14, 1)|const|float32
var_2345 = relay.var("var_2345", dtype = "float32", shape = (12, 14, 11))#candidate|2345|(12, 14, 11)|var|float32
bop_2346 = relay.maximum(const_2344.astype('float32'), var_2345.astype('float32')) # shape=(12, 14, 11)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_2351 = relay.TupleGetItem(func_1029_call(), 2)
call_2352 = relay.TupleGetItem(func_1030_call(), 2)
output = relay.Tuple([bop_2346,call_2351,])
output2 = relay.Tuple([bop_2346,call_2352,])
func_2355 = relay.Function([var_2345,], output)
mod['func_2355'] = func_2355
mod = relay.transform.InferType()(mod)
var_2356 = relay.var("var_2356", dtype = "float32", shape = (12, 14, 11))#candidate|2356|(12, 14, 11)|var|float32
output = func_2355(var_2356)
func_2357 = relay.Function([var_2356], output)
mutated_mod['func_2357'] = func_2357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1990_call = mod.get_global_var('func_1990')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_2388 = relay.TupleGetItem(func_1990_call(), 0)
call_2389 = relay.TupleGetItem(func_1991_call(), 0)
uop_2394 = relay.asin(call_2388.astype('float32')) # shape=(9, 6, 15)
uop_2396 = relay.asin(call_2389.astype('float32')) # shape=(9, 6, 15)
uop_2397 = relay.erf(uop_2394.astype('float32')) # shape=(9, 6, 15)
uop_2399 = relay.erf(uop_2396.astype('float32')) # shape=(9, 6, 15)
uop_2400 = relay.sinh(uop_2397.astype('float64')) # shape=(9, 6, 15)
uop_2402 = relay.sinh(uop_2399.astype('float64')) # shape=(9, 6, 15)
func_930_call = mod.get_global_var('func_930')
func_933_call = mutated_mod.get_global_var('func_933')
var_2405 = relay.var("var_2405", dtype = "float32", shape = (1430,))#candidate|2405|(1430,)|var|float32
call_2404 = relay.TupleGetItem(func_930_call(relay.reshape(var_2405.astype('float32'), [1430,])), 3)
call_2406 = relay.TupleGetItem(func_933_call(relay.reshape(var_2405.astype('float32'), [1430,])), 3)
uop_2414 = relay.atanh(uop_2400.astype('float32')) # shape=(9, 6, 15)
uop_2416 = relay.atanh(uop_2402.astype('float32')) # shape=(9, 6, 15)
func_1990_call = mod.get_global_var('func_1990')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_2417 = relay.TupleGetItem(func_1990_call(), 0)
call_2418 = relay.TupleGetItem(func_1991_call(), 0)
output = relay.Tuple([call_2404,var_2405,uop_2414,call_2417,])
output2 = relay.Tuple([call_2406,var_2405,uop_2416,call_2418,])
func_2426 = relay.Function([var_2405,], output)
mod['func_2426'] = func_2426
mod = relay.transform.InferType()(mod)
var_2427 = relay.var("var_2427", dtype = "float32", shape = (1430,))#candidate|2427|(1430,)|var|float32
output = func_2426(var_2427)
func_2428 = relay.Function([var_2427], output)
mutated_mod['func_2428'] = func_2428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_2430 = relay.TupleGetItem(func_1183_call(), 0)
call_2431 = relay.TupleGetItem(func_1184_call(), 0)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_2452 = relay.TupleGetItem(func_501_call(), 1)
call_2453 = relay.TupleGetItem(func_503_call(), 1)
func_1392_call = mod.get_global_var('func_1392')
func_1398_call = mutated_mod.get_global_var('func_1398')
var_2455 = relay.var("var_2455", dtype = "float32", shape = (20, 32))#candidate|2455|(20, 32)|var|float32
const_2456 = relay.const([-4.240742,-1.058499,1.740054,4.226301,-7.592390,1.094417,-3.205676,-3.966013,5.058046,2.251496,-0.571519,-1.702474,-8.418517,-5.572344,5.126866,0.536789,-9.527147,-1.089768,-3.308692,-0.790626,-0.400304,5.612765,-7.042530,4.061335,-0.859983,-2.949021,-1.063237,9.269485,8.008441,-7.481354,-0.853726,-1.543992,6.703616,-0.850545,-5.017617,2.535983,-4.070534,1.530835,-8.502322,-1.066591,0.338998,-5.583662,-7.217134,-7.297627,7.467711,-2.268948,-5.432889,-5.562046,4.545023,-7.072504,5.888014,-7.693199,-1.078263,-9.316657,-9.166408,-5.462884], dtype = "float64")#candidate|2456|(56,)|const|float64
call_2454 = relay.TupleGetItem(func_1392_call(relay.reshape(var_2455.astype('float32'), [10, 8, 8]), relay.reshape(const_2456.astype('float64'), [56,]), relay.reshape(var_2455.astype('float32'), [10, 8, 8]), relay.reshape(var_2455.astype('float32'), [10, 8, 8]), ), 3)
call_2457 = relay.TupleGetItem(func_1398_call(relay.reshape(var_2455.astype('float32'), [10, 8, 8]), relay.reshape(const_2456.astype('float64'), [56,]), relay.reshape(var_2455.astype('float32'), [10, 8, 8]), relay.reshape(var_2455.astype('float32'), [10, 8, 8]), ), 3)
output = relay.Tuple([call_2430,call_2452,call_2454,var_2455,const_2456,])
output2 = relay.Tuple([call_2431,call_2453,call_2457,var_2455,const_2456,])
func_2458 = relay.Function([var_2455,], output)
mod['func_2458'] = func_2458
mod = relay.transform.InferType()(mod)
mutated_mod['func_2458'] = func_2458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2459 = relay.var("var_2459", dtype = "float32", shape = (20, 32))#candidate|2459|(20, 32)|var|float32
func_2458_call = mutated_mod.get_global_var('func_2458')
call_2460 = func_2458_call(var_2459)
output = call_2460
func_2461 = relay.Function([var_2459], output)
mutated_mod['func_2461'] = func_2461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2493 = relay.TupleGetItem(func_1808_call(), 0)
call_2494 = relay.TupleGetItem(func_1810_call(), 0)
var_2498 = relay.var("var_2498", dtype = "int8", shape = (3, 16, 16))#candidate|2498|(3, 16, 16)|var|int8
bop_2499 = relay.subtract(call_2493.astype('uint16'), relay.reshape(var_2498.astype('uint16'), relay.shape_of(call_2493))) # shape=(3, 16, 16)
bop_2502 = relay.subtract(call_2494.astype('uint16'), relay.reshape(var_2498.astype('uint16'), relay.shape_of(call_2494))) # shape=(3, 16, 16)
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
const_2509 = relay.const([[1.925052,1.255944,5.501331,3.611640,-7.528065,6.305105,8.253006,-2.120851,6.018682,-3.932239],[3.025555,-6.096145,1.690086,7.324441,4.248828,0.073963,3.092367,-5.212486,-4.697131,-1.536665],[-9.006508,8.266081,-5.088738,-9.074300,8.604522,8.129197,1.029532,-6.378889,-6.332578,8.518804],[-9.213865,-8.500553,9.651387,8.262469,-7.004846,-4.584436,6.434473,-2.163602,3.812611,3.437691],[4.623888,6.864904,-3.843753,-1.785042,0.972250,-8.140692,-3.699570,-9.579931,0.019604,4.935496],[6.466502,-5.238369,8.846068,-0.485711,-5.732494,-2.081859,-8.149978,-5.289319,4.689529,7.979417],[-9.878921,6.516801,4.142947,-1.569436,4.367150,-8.925955,6.516889,8.233323,-0.707238,-5.823761],[8.840691,-6.342168,-6.539155,-3.718974,5.452364,0.838838,1.852158,-6.735148,-0.504590,4.448088],[2.813296,-7.767126,9.488129,0.642441,4.629236,-2.833701,-3.927009,-2.943579,9.268024,0.437453],[4.671544,2.918648,1.182831,4.058946,-6.749092,3.004193,-4.721770,8.254509,1.290503,8.959247],[-7.033803,3.615172,3.376951,0.719351,-5.666457,8.865758,5.374225,-5.850506,5.784737,-6.346151],[-5.411924,4.776123,7.781555,-2.495384,4.011978,1.000734,3.911390,0.103568,4.247354,-7.473071],[3.670195,7.110292,-9.835840,3.845809,4.195810,2.646488,8.408380,-0.308828,8.451924,1.739170],[9.490009,-9.422534,6.491488,5.933192,3.493073,-1.363945,1.841949,0.433544,2.930256,8.138919],[4.792846,-1.251744,3.739847,6.415782,-0.226208,-9.823673,-9.561104,-8.106578,-1.886427,-4.400331],[5.542296,-5.040373,-4.981299,-7.961907,-5.731284,-2.528799,6.889096,-7.639605,4.841778,1.112996],[-4.898639,0.365688,8.056788,-3.471957,4.970418,9.883777,7.859634,-2.607282,1.744762,9.737601],[-0.469824,1.027410,-5.327159,7.025164,-4.188214,6.710286,-0.813127,6.148633,7.117378,6.220171],[-1.227686,7.113391,-1.056817,5.798538,7.752595,8.832647,-5.860717,0.020433,-5.437714,-0.388320],[3.853434,9.987955,8.346895,8.138514,-4.506627,3.540033,8.465908,-0.149258,-9.124710,-0.701213],[-2.258617,-5.061978,-3.350452,1.113449,-0.294475,8.665392,-2.571047,6.615334,7.204560,-3.254442],[2.205732,-6.780792,-2.343495,-3.221485,-9.884133,-0.099309,-0.225379,9.329436,-7.939379,4.484493],[3.742541,4.704536,2.229307,2.507488,6.429630,-3.737014,3.120907,-3.924029,3.586333,2.009863],[1.990531,-7.406784,-4.530550,-7.716080,-2.684042,4.695923,1.990866,2.996275,0.076729,3.731693],[-3.450330,8.955746,4.238043,-7.195829,-0.274881,-3.251376,4.016343,2.459890,6.947302,5.128999],[2.623656,7.386372,7.309696,0.131524,8.163429,0.705523,-2.730247,9.796317,-8.307580,-5.058470],[6.121025,-9.356695,3.708519,-6.392631,-5.622784,-4.361362,-8.567895,-6.245576,3.258118,-7.525451],[-7.100699,-6.023559,-4.352347,-3.133171,5.846689,3.285679,-1.611802,-2.865339,2.062570,-8.519695],[-6.722157,8.258165,-7.569526,-0.968045,5.828168,-9.861554,-6.681025,-1.509673,-7.523484,-0.228035],[9.307654,5.416418,8.729175,5.145009,-9.692485,-9.194008,7.399309,-4.501211,4.647535,7.526681],[6.360046,3.205682,-6.619066,5.189278,-6.991912,8.965268,4.055693,0.693847,-6.093787,-2.300358],[-9.281831,0.449179,-4.053161,3.090562,-6.582863,0.839710,-2.070990,0.374671,-5.728795,-7.293307],[-3.338745,5.313770,-2.459680,5.135075,8.888496,2.605444,-7.799171,2.254623,-2.200362,0.401914],[9.761538,1.119782,6.293099,6.238976,1.380156,-3.122015,4.022223,3.904946,2.908923,-3.237297],[-7.389420,-0.800862,-8.051259,-0.244846,5.669896,9.004958,-4.278584,-5.682811,5.922261,0.067896],[3.229662,6.925658,6.168627,-5.573586,4.404938,-5.872440,9.955366,-0.861976,-9.547434,-5.099023],[-3.403297,1.492658,-1.737793,-7.013588,6.326721,-1.263100,-4.539356,6.354289,1.484088,-1.675723],[-2.151216,-7.630033,2.371463,6.781134,9.514471,4.901302,2.138601,-2.253253,1.991764,9.175625],[4.596195,7.269126,1.529552,0.705341,3.699614,7.988934,-7.493627,8.459561,5.620616,-9.349241],[-5.922056,-9.873990,-2.838595,-8.220594,-8.356760,-1.139202,6.562451,7.562616,-8.219541,3.652168],[-3.550249,5.226344,8.104643,-0.873527,8.847678,1.073510,6.002400,9.547036,7.931266,6.988672],[2.969451,6.269478,8.008962,-0.222718,4.656159,4.370435,-3.991213,4.199512,2.958330,-3.530520],[-6.323742,1.298990,-3.528909,5.645972,-8.275871,2.767566,-8.095624,-8.016096,9.314435,9.265577],[0.249100,-3.516878,6.447390,3.551335,4.835553,0.372644,1.890033,0.196260,7.060389,3.116845],[7.144824,9.971859,1.608323,-7.397506,-2.501930,-0.813020,-2.596556,-1.696591,-3.473728,3.491835],[4.088956,9.273831,4.721961,-0.630421,7.189301,-4.954241,-1.154090,-5.961018,1.745652,-0.869825],[-4.163647,5.129578,9.183733,-1.975891,9.680811,-8.233180,-0.013389,-0.957796,-0.399776,-3.009932],[-1.792576,8.674628,-4.788141,8.883706,-5.641540,-0.376208,-7.056979,7.525698,7.468172,0.112708],[9.334624,4.385005,3.143775,9.494880,2.217572,5.294942,-8.862756,-2.474367,-9.075792,4.127866],[-8.810853,1.186961,3.965127,-0.144252,-4.452709,-0.251168,5.953445,8.782389,0.344261,2.372771],[-3.561409,-9.287021,4.417920,3.874677,-4.764607,-6.145489,-4.571251,8.127744,-5.421203,-0.327374],[6.442445,2.529888,0.435183,1.366769,1.718011,7.396062,6.457301,7.488238,-1.459482,-8.063554],[4.897202,4.938000,-8.945310,0.753506,4.804920,6.000240,-4.296661,3.481619,2.261888,-0.015817],[5.842497,-4.765113,-2.099754,4.674985,9.030493,9.997812,-3.070655,-8.419527,-3.653550,-2.901513],[-7.756688,-4.974548,-1.804348,-4.755082,4.701523,-5.059311,-7.407282,5.426118,-7.129631,8.971258],[3.744597,-8.159953,-5.540210,-7.548462,7.245523,-0.109336,0.716103,-2.256262,-7.485273,8.427318],[-2.952356,4.770665,0.306204,1.549247,3.503107,5.095463,7.427111,5.658840,-2.548803,-7.463796],[-5.490155,8.956066,-8.509342,5.332006,-3.654283,-0.295026,-3.156870,1.668132,-2.699935,-3.974057],[-4.492127,-3.791912,6.116430,9.996877,-8.102775,5.691213,-7.328044,-1.094046,5.967711,0.539171],[-9.331526,-5.504319,8.082633,-5.863704,-6.957503,-8.404321,-7.396968,-3.927206,-0.241416,-8.741332],[-3.106254,9.344961,-5.313746,9.540305,4.579450,-6.302763,-9.455493,-1.932564,-4.032774,8.049698],[6.214566,9.765218,9.881879,-5.210014,8.708262,-9.912296,-6.096835,-1.690282,7.771933,-0.972771],[0.571037,-0.759174,5.028275,4.554928,-5.551335,-4.810933,-6.076959,9.794479,-0.311929,9.930694],[-9.723351,4.281372,1.635188,-7.448551,2.630363,7.553217,9.535943,-4.851384,9.322013,-4.447361],[-1.310700,3.496078,2.033864,-4.627165,-9.839636,6.388561,9.471635,-5.052645,9.662837,4.023844],[6.476397,4.704584,6.063602,-3.312303,6.249968,-6.845207,5.758614,5.947259,-8.575166,-9.641738],[3.888439,-5.024352,-6.123618,-5.502092,5.308791,-0.219313,-2.025578,4.600013,4.313732,-8.880444],[-7.384047,1.573246,2.577656,-1.576047,-9.639137,-1.508679,5.598974,4.133137,5.465774,5.672628],[9.418782,-9.752989,5.399550,7.858401,5.346127,2.068774,-3.477379,3.459167,7.603808,-3.705036],[4.462241,-9.108251,8.097836,-9.918696,2.046165,9.212352,-0.533601,-7.352473,2.583090,-5.424249],[-8.401449,-0.954372,-9.259407,-6.969083,-1.640467,-4.484878,4.062573,-9.456548,-8.039958,-1.572280],[-9.948008,-1.346470,8.488282,-6.490003,4.169617,1.089576,-1.049232,-5.081936,9.903574,9.662233],[9.055620,6.351903,-5.672975,1.044594,6.108139,-2.429085,2.015263,-9.700995,2.636571,1.072380],[7.191064,-1.502445,4.856402,2.448881,7.978959,-2.077249,-9.631104,-1.554438,7.467691,1.988479],[5.299550,-7.472272,-4.557251,1.342005,4.309519,-8.001706,5.919021,-8.245703,-0.081456,5.475124],[-8.235424,-5.191631,-5.872917,7.584757,9.908112,-4.795467,-8.009257,4.789357,4.645998,1.091633],[-9.608149,3.636043,-8.590347,-1.866576,8.908705,9.376019,4.295230,-2.293051,-9.914545,3.742100],[-7.305487,-7.355484,-3.741251,-7.702785,-1.693326,-3.714651,1.153103,-1.135832,6.964325,-8.926466],[-0.189474,6.000107,-4.383365,6.815107,0.021911,-2.044441,-3.962520,6.580033,-4.974758,-6.116365],[0.214061,3.987737,9.747054,-3.600752,-5.622022,9.455732,-0.366628,-1.378082,4.707448,6.871310],[-4.947096,-5.714451,-3.105082,5.824696,9.330835,9.142852,-9.667112,-3.489315,-3.736839,3.485264],[2.885124,-2.436597,9.366440,-5.854206,-2.221713,9.250787,9.865241,-8.901755,3.491986,2.636634],[9.021211,4.501061,9.090170,9.503996,4.080570,7.391817,-1.302502,-6.759132,-1.496163,-4.649946],[1.007283,-6.575120,7.212847,-0.277371,-9.975773,-9.396049,2.911167,-1.583849,9.956036,-7.569664],[-4.816184,7.630710,4.963912,-5.347295,5.999777,3.162553,-4.923871,3.829510,-0.538469,6.503167],[0.869048,-0.674562,9.612046,-3.354947,5.784118,0.634143,-3.658844,-9.133125,5.728127,4.836122],[1.759337,2.748844,-0.493418,3.111898,-7.490518,-6.430161,-6.178043,-9.738789,8.564117,-2.275963],[-7.943278,-1.890205,6.197761,-8.654505,4.116575,6.595684,-7.845850,-9.403714,9.820741,5.914156],[-8.915992,-7.194367,0.479997,8.048073,0.673547,7.171619,0.707362,-3.372852,-1.800574,7.144911],[-0.098818,-4.644752,7.622545,-2.691968,-9.477857,3.353494,0.877471,-1.664119,-5.205088,7.014224],[7.927274,8.192582,-3.527868,8.958616,3.625333,-4.796676,0.240589,-2.393273,5.936221,-9.952632],[4.042269,1.368910,6.733976,2.631490,0.818361,8.793557,9.183951,5.522602,-3.421231,-3.755285],[-3.768490,2.190823,3.560291,-9.493864,-2.007150,-0.660464,-9.830170,-1.834842,8.970689,-9.349357],[-8.049797,-6.315536,-6.458703,5.566281,-1.711105,-1.619832,-8.413057,0.588870,-5.453091,4.219108],[-2.536485,-9.244768,0.618146,-2.734368,-4.232962,0.259025,-2.427551,-8.072912,2.691332,3.131539],[7.343256,-8.513413,9.562784,4.363354,-1.045924,2.029636,-8.796913,0.655044,-0.307239,5.446557],[-0.539386,-5.715870,-6.534341,-9.967166,-4.197816,1.349154,6.121022,-1.349374,0.658166,-1.494554],[-0.586027,-1.388157,4.215259,-0.776434,2.342295,-4.555061,-7.170330,-3.393266,0.384939,-5.890959],[-0.599408,8.212723,-0.283649,2.872435,2.440422,9.235212,8.544562,9.652460,4.822818,-7.780555],[6.393782,7.206671,2.549895,-6.020441,-6.753940,9.608374,-7.952863,-5.010012,-8.087520,6.445877],[-1.232528,5.497745,-4.425212,-2.678693,-0.019785,5.553411,-0.441551,2.178672,-8.046529,-1.750939],[-5.720389,-5.175153,4.322534,6.934446,-8.708931,8.572430,2.744026,-5.322943,2.312974,-8.491524],[9.661082,0.064167,-2.644861,-5.411929,-9.179942,9.337047,-1.466485,-5.015681,-2.481091,2.468366],[-1.907636,4.851025,3.650496,4.509410,5.280944,-5.166547,1.103374,-0.903380,-8.743935,0.116568],[0.807795,6.473539,-6.621667,8.818460,-2.524612,0.141256,-3.877173,-1.203002,-4.854299,-3.048564],[4.905820,-7.100569,5.724373,-9.755512,2.688100,-2.192890,-7.382715,-2.415661,4.928454,-1.725532],[-0.232248,-6.566486,-2.326540,-9.622667,7.277917,-6.550097,9.960071,6.539032,3.268250,-4.209648],[1.165950,-7.865751,3.753647,-1.698964,-4.576208,-1.404768,-0.899110,9.313320,2.941386,2.783337],[8.008694,-5.304972,3.209216,2.386264,4.823266,1.195890,-4.700486,4.899188,0.269445,3.820924],[-2.163877,-5.104055,-3.166431,6.865509,-7.439996,-5.926583,7.538247,-2.612512,1.960803,2.720330],[-5.243829,3.395215,-1.488701,-8.197604,1.435298,-4.666574,3.564428,-1.812572,-5.767699,8.856452],[3.661636,-0.628163,-8.010523,3.357173,-2.106825,2.992359,7.827008,-1.606301,6.814153,3.821850],[-6.145201,-8.956427,1.653622,4.904171,-8.955713,-6.237327,0.611911,-3.729433,5.957206,0.453472],[6.723007,-1.970618,4.826741,-7.921737,9.509536,4.821469,6.248062,1.984034,4.744847,4.482408],[-0.580319,0.414756,-7.559858,2.032176,3.379763,-5.209267,6.532417,0.828951,8.616115,6.702925],[-4.701934,-5.763105,-2.857003,-0.725073,-6.685384,-8.686971,1.905940,-8.928675,6.922083,9.086570],[-8.511426,9.973411,6.237663,8.517135,0.877382,9.517899,3.182256,3.028024,-2.290316,4.645077],[4.942319,3.843846,1.401977,8.685983,5.294794,7.883068,-4.025688,-6.659816,-3.349854,-0.371824],[-9.812381,0.325674,6.823663,-3.909453,-4.125042,-1.757925,6.345653,-3.601318,-5.948483,1.463893],[-2.691770,4.200454,-8.780948,-3.243779,7.091255,-1.681759,0.497642,-4.580681,-0.241560,-1.253091],[-0.420405,6.968891,-6.028876,9.095949,1.124805,-4.820649,8.779815,-2.306206,2.875350,-1.517180],[2.447882,9.289772,-5.241605,0.726514,-3.941325,5.582262,-9.401519,-8.346526,-1.134845,8.131648],[-4.720196,-0.451004,-0.797261,9.555868,9.958519,-7.437701,-7.209199,3.347785,9.768596,-1.592012],[-2.214151,4.491298,-3.462397,8.846832,1.516461,-8.185745,7.647878,1.729131,1.766586,4.804702],[0.230879,3.336721,2.828536,-0.345057,1.783346,-0.430164,9.275883,-1.374917,5.596781,-7.099006],[0.954364,4.025483,4.107772,-5.141781,7.295603,-3.496124,1.266373,8.772357,-0.610990,-9.781402],[-2.195037,-5.922339,-5.722541,4.265759,-9.172362,-2.410961,-5.034494,-6.058956,-3.983697,-6.954556],[8.353573,-5.620221,-4.427268,8.011125,-9.884744,-0.712656,2.746636,-7.570416,3.885281,7.587115],[0.189889,0.417345,6.072381,-7.012769,-5.426153,-1.379957,0.473739,9.333323,-5.895792,-6.605885],[-5.513809,9.169815,9.379363,1.545695,5.086189,7.010108,-9.629637,-2.225000,-5.095029,8.949424],[5.574934,-1.133231,0.468588,-2.429050,6.531859,-5.176817,2.282361,5.032015,1.394983,6.888082],[7.629145,7.063713,-1.397090,-5.427235,-3.257247,0.021741,7.739127,-6.535572,4.247036,-8.782436],[-6.772273,-4.683755,-0.708092,-0.206952,-3.346140,-2.570764,-2.870077,9.363183,1.295320,-2.963570],[-2.552298,3.503976,8.964466,-6.637050,-8.018727,7.287809,7.524837,-0.279497,2.737610,3.124865],[-8.097324,-4.432912,1.630714,6.579556,0.159542,2.397154,-3.179134,0.787531,-5.162171,-8.950093],[-9.792851,4.989232,-5.833430,9.794601,3.674625,6.588321,-2.492330,-7.413195,-1.170417,-4.491897],[8.304027,4.371125,-3.215460,-0.799206,-0.474984,2.747465,-3.868082,-5.451736,-8.037630,3.452028],[-8.728555,4.309511,-2.775419,-4.573019,-3.203204,-9.684306,-4.592611,7.394007,-5.546950,-9.616477],[-8.149231,2.656324,-3.149945,5.396618,1.455434,-9.335755,-5.895334,-6.994039,-3.479834,5.903208],[9.758071,-9.371194,8.089256,-6.355378,1.480703,-9.558493,-7.509448,1.405155,5.180464,5.224878],[1.236163,-8.636486,7.115236,-8.350030,8.915611,-0.411549,5.797071,1.248448,-3.166107,-0.586959],[-2.870565,-7.161037,-4.672743,8.146133,-8.081749,-9.799984,8.471517,7.180080,2.174252,-0.526409],[0.038893,6.986364,0.519178,2.764079,-5.027912,-7.102201,-6.988146,5.731353,-4.229339,-4.999744]], dtype = "float32")#candidate|2509|(143, 10)|const|float32
call_2508 = func_111_call(relay.reshape(const_2509.astype('float32'), [11, 13, 10]), relay.reshape(const_2509.astype('float32'), [11, 13, 10]), )
call_2510 = func_111_call(relay.reshape(const_2509.astype('float32'), [11, 13, 10]), relay.reshape(const_2509.astype('float32'), [11, 13, 10]), )
output = relay.Tuple([bop_2499,call_2508,const_2509,])
output2 = relay.Tuple([bop_2502,call_2510,const_2509,])
func_2536 = relay.Function([var_2498,], output)
mod['func_2536'] = func_2536
mod = relay.transform.InferType()(mod)
mutated_mod['func_2536'] = func_2536
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2537 = relay.var("var_2537", dtype = "int8", shape = (3, 16, 16))#candidate|2537|(3, 16, 16)|var|int8
func_2536_call = mutated_mod.get_global_var('func_2536')
call_2538 = func_2536_call(var_2537)
output = call_2538
func_2539 = relay.Function([var_2537], output)
mutated_mod['func_2539'] = func_2539
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1990_call = mod.get_global_var('func_1990')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_2579 = relay.TupleGetItem(func_1990_call(), 0)
call_2580 = relay.TupleGetItem(func_1991_call(), 0)
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
var_2582 = relay.var("var_2582", dtype = "float32", shape = (315,))#candidate|2582|(315,)|var|float32
const_2583 = relay.const([9.894255,4.276055,-6.865398,5.720515,2.828488,-2.950220,7.571986,-1.546025,7.498939,9.042455,-7.950933,9.742942,-0.685332,-4.446428,8.752659,-8.659416,6.389215,-3.448557,3.232662,-2.560804,-9.740938,7.289355,8.286080,2.310566,-4.346552,9.946996,3.111615,-3.850872,9.372934,9.047350,-1.497703,-9.970578,-2.129677,9.161299,-7.186316,-5.560091,-4.414837,-5.073044,5.295516,-8.922952,-5.356743,-2.309239,1.956613,2.877038,-0.447385,8.095703,2.085032,-8.409568,4.668169,8.517014,9.993806,-8.672921,-2.061592,0.112805,6.482345,1.893082], dtype = "float64")#candidate|2583|(56,)|const|float64
var_2584 = relay.var("var_2584", dtype = "float32", shape = (1430,))#candidate|2584|(1430,)|var|float32
call_2581 = relay.TupleGetItem(func_433_call(relay.reshape(var_2582.astype('float32'), [3, 7, 15]), relay.reshape(const_2583.astype('float64'), [56,]), relay.reshape(var_2584.astype('float32'), [1430,]), ), 4)
call_2585 = relay.TupleGetItem(func_437_call(relay.reshape(var_2582.astype('float32'), [3, 7, 15]), relay.reshape(const_2583.astype('float64'), [56,]), relay.reshape(var_2584.astype('float32'), [1430,]), ), 4)
bop_2588 = relay.less_equal(var_2584.astype('bool'), relay.reshape(call_2581.astype('bool'), relay.shape_of(var_2584))) # shape=(1430,)
bop_2591 = relay.less_equal(var_2584.astype('bool'), relay.reshape(call_2585.astype('bool'), relay.shape_of(var_2584))) # shape=(1430,)
output = relay.Tuple([call_2579,var_2582,const_2583,bop_2588,])
output2 = relay.Tuple([call_2580,var_2582,const_2583,bop_2591,])
func_2596 = relay.Function([var_2582,var_2584,], output)
mod['func_2596'] = func_2596
mod = relay.transform.InferType()(mod)
var_2597 = relay.var("var_2597", dtype = "float32", shape = (315,))#candidate|2597|(315,)|var|float32
var_2598 = relay.var("var_2598", dtype = "float32", shape = (1430,))#candidate|2598|(1430,)|var|float32
output = func_2596(var_2597,var_2598,)
func_2599 = relay.Function([var_2597,var_2598,], output)
mutated_mod['func_2599'] = func_2599
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1808_call = mod.get_global_var('func_1808')
func_1810_call = mutated_mod.get_global_var('func_1810')
call_2610 = relay.TupleGetItem(func_1808_call(), 1)
call_2611 = relay.TupleGetItem(func_1810_call(), 1)
uop_2614 = relay.asinh(call_2610.astype('float32')) # shape=(9, 6, 15)
uop_2616 = relay.asinh(call_2611.astype('float32')) # shape=(9, 6, 15)
func_2596_call = mod.get_global_var('func_2596')
func_2599_call = mutated_mod.get_global_var('func_2599')
const_2621 = relay.const([-9.463945,0.077431,-9.239557,-7.996936,0.388763,2.691533,-9.165365,-3.283498,1.286340,-7.102431,-2.350418,-8.112803,0.367040,8.700835,4.328227,-3.684281,4.405891,-2.225327,9.691160,4.466277,-0.193068,-9.485957,8.076856,-6.182047,0.638348,-0.905350,-5.235343,-9.752612,8.917532,8.345208,8.054686,-4.222336,8.333645,-3.906026,-8.336990,8.340381,1.376162,6.715601,-6.108974,1.243338,-8.487490,3.832947,-3.278108,4.969113,9.849934,-4.087221,-9.954077,4.983510,-3.926587,-4.258169,6.859476,5.325820,-8.022413,6.865022,-3.712428,-0.747805,4.082334,-0.405983,2.440870,4.659079,-9.848728,7.060368,-0.954537,-3.879519,-3.869182,0.959248,3.430957,-8.580834,7.339340,-1.393472,-4.409524,2.462613,4.923249,-2.267580,7.102925,7.585783,4.595655,-1.893465,-8.544409,-8.665275,0.411374,-6.413476,-6.997637,-2.544206,0.233036,-3.524161,9.501428,0.614759,7.615013,5.301604,3.244835,-0.198536,0.772169,-4.056814,8.448037,2.582812,4.794956,8.665545,-1.718510,3.010965,3.366998,-8.055283,0.166023,4.444140,3.063859,9.534942,4.111552,9.542576,-0.714799,-9.903847,0.045449,2.455466,-0.159011,-3.289336,-2.051412,-6.876054,0.413167,7.769172,-1.818472,9.493553,0.803110,-7.208532,-7.622599,-1.902669,9.691569,0.064352,-3.733363,8.304336,8.415803,8.019228,-3.777662,9.440555,-0.270263,-9.655707,9.611927,-7.135056,2.018146,-6.628137,7.641391,-7.985910,3.219264,8.131966,-9.791112,-9.809937,-1.065510,-7.528630,8.807926,4.728189,-3.137665,-9.382833,5.839259,-0.484461,1.727892,5.798822,0.157281,-1.641758,0.159127,-4.380363,-6.809903,6.433586,1.825727,2.912543,-5.456198,-7.670157,2.866307,-4.472063,-4.929134,3.621477,6.233729,-6.649333,-4.465108,-9.294599,-8.105107,-0.545189,8.352117,5.862874,3.938486,-0.324055,3.449404,-4.306538,7.739994,-3.118975,6.807449,-5.802915,-9.482723,-8.421698,1.425599,-9.707231,2.457610,-1.508065,-5.390449,1.025629,1.976578,2.197430,1.762139,4.261302,1.937178,-9.819192,6.301598,3.234876,7.874804,-0.975610,-4.076152,-4.129854,7.513988,1.651652,-4.907605,4.231017,-0.820081,6.676410,-3.349809,-1.445019,-7.439699,5.497483,5.339059,7.965570,-0.251740,3.041198,-1.191694,-3.344355,0.867219,1.632830,3.029654,6.567841,-2.867262,3.284632,7.016479,-5.734172,-6.342512,0.319316,-9.138393,-8.077395,-5.243731,-5.999796,4.809428,3.856326,-4.440074,-5.351604,4.889401,1.150908,-5.931417,3.868489,-6.920707,2.420999,0.032578,0.459673,0.974312,-1.957775,1.060960,-6.446844,3.312990,0.709510,5.266616,0.186917,9.577965,-5.625205,7.227375,7.101424,5.845598,-6.129355,6.354409,-6.332128,6.135882,1.170140,6.765459,0.425793,8.228024,-9.549913,4.748725,8.466790,-1.461296,-8.543828,9.403827,-1.998642,4.391892,7.672249,-8.337057,0.292126,-5.563445,-0.883884,1.663988,2.516616,9.834349,2.344638,7.010786,6.310986,-3.502638,-7.495000,-2.267408,-2.746549,3.757643,-1.101606,7.158096,-3.026325,-9.807092,-0.086121,-8.255591,-5.091508,5.828500,-5.693029,1.980443,9.610369,-4.042291,2.759453,-9.666901,-0.606115,-4.860744,0.025358,-1.431737,4.255517,-8.766370,-1.766700,7.818917,-4.487185,-7.087451], dtype = "float32")#candidate|2621|(315,)|const|float32
var_2622 = relay.var("var_2622", dtype = "float32", shape = (1430,))#candidate|2622|(1430,)|var|float32
call_2620 = relay.TupleGetItem(func_2596_call(relay.reshape(const_2621.astype('float32'), [315,]), relay.reshape(var_2622.astype('float32'), [1430,]), ), 2)
call_2623 = relay.TupleGetItem(func_2599_call(relay.reshape(const_2621.astype('float32'), [315,]), relay.reshape(var_2622.astype('float32'), [1430,]), ), 2)
output = relay.Tuple([uop_2614,call_2620,const_2621,var_2622,])
output2 = relay.Tuple([uop_2616,call_2623,const_2621,var_2622,])
func_2630 = relay.Function([var_2622,], output)
mod['func_2630'] = func_2630
mod = relay.transform.InferType()(mod)
var_2631 = relay.var("var_2631", dtype = "float32", shape = (1430,))#candidate|2631|(1430,)|var|float32
output = func_2630(var_2631)
func_2632 = relay.Function([var_2631], output)
mutated_mod['func_2632'] = func_2632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1621_call = mod.get_global_var('func_1621')
func_1622_call = mutated_mod.get_global_var('func_1622')
call_2690 = func_1621_call()
call_2691 = func_1621_call()
output = call_2690
output2 = call_2691
func_2693 = relay.Function([], output)
mod['func_2693'] = func_2693
mod = relay.transform.InferType()(mod)
output = func_2693()
func_2694 = relay.Function([], output)
mutated_mod['func_2694'] = func_2694
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2753 = relay.var("var_2753", dtype = "float32", shape = (14, 16, 1))#candidate|2753|(14, 16, 1)|var|float32
uop_2754 = relay.acosh(var_2753.astype('float32')) # shape=(14, 16, 1)
uop_2758 = relay.rsqrt(uop_2754.astype('float32')) # shape=(14, 16, 1)
func_1829_call = mod.get_global_var('func_1829')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_2760 = func_1829_call()
call_2761 = func_1829_call()
output = relay.Tuple([uop_2758,call_2760,])
output2 = relay.Tuple([uop_2758,call_2761,])
func_2770 = relay.Function([var_2753,], output)
mod['func_2770'] = func_2770
mod = relay.transform.InferType()(mod)
mutated_mod['func_2770'] = func_2770
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2771 = relay.var("var_2771", dtype = "float32", shape = (14, 16, 1))#candidate|2771|(14, 16, 1)|var|float32
func_2770_call = mutated_mod.get_global_var('func_2770')
call_2772 = func_2770_call(var_2771)
output = call_2772
func_2773 = relay.Function([var_2771], output)
mutated_mod['func_2773'] = func_2773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1990_call = mod.get_global_var('func_1990')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_2821 = relay.TupleGetItem(func_1990_call(), 0)
call_2822 = relay.TupleGetItem(func_1991_call(), 0)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_2853 = relay.TupleGetItem(func_1183_call(), 0)
call_2854 = relay.TupleGetItem(func_1184_call(), 0)
output = relay.Tuple([call_2821,call_2853,])
output2 = relay.Tuple([call_2822,call_2854,])
func_2859 = relay.Function([], output)
mod['func_2859'] = func_2859
mod = relay.transform.InferType()(mod)
mutated_mod['func_2859'] = func_2859
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mutated_mod.get_global_var('func_2859')
call_2860 = func_2859_call()
output = call_2860
func_2861 = relay.Function([], output)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_2870 = func_2086_call()
call_2871 = func_2086_call()
output = relay.Tuple([call_2870,])
output2 = relay.Tuple([call_2871,])
func_2876 = relay.Function([], output)
mod['func_2876'] = func_2876
mod = relay.transform.InferType()(mod)
mutated_mod['func_2876'] = func_2876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2876_call = mutated_mod.get_global_var('func_2876')
call_2877 = func_2876_call()
output = call_2877
func_2878 = relay.Function([], output)
mutated_mod['func_2878'] = func_2878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1752_call = mod.get_global_var('func_1752')
func_1754_call = mutated_mod.get_global_var('func_1754')
call_2904 = relay.TupleGetItem(func_1752_call(), 0)
call_2905 = relay.TupleGetItem(func_1754_call(), 0)
uop_2910 = relay.acos(call_2904.astype('float64')) # shape=(1430,)
uop_2912 = relay.acos(call_2905.astype('float64')) # shape=(1430,)
bop_2917 = relay.maximum(call_2904.astype('int8'), relay.reshape(uop_2910.astype('int8'), relay.shape_of(call_2904))) # shape=(1430,)
bop_2920 = relay.maximum(call_2905.astype('int8'), relay.reshape(uop_2912.astype('int8'), relay.shape_of(call_2905))) # shape=(1430,)
output = relay.Tuple([bop_2917,])
output2 = relay.Tuple([bop_2920,])
func_2927 = relay.Function([], output)
mod['func_2927'] = func_2927
mod = relay.transform.InferType()(mod)
mutated_mod['func_2927'] = func_2927
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2927_call = mutated_mod.get_global_var('func_2927')
call_2928 = func_2927_call()
output = call_2928
func_2929 = relay.Function([], output)
mutated_mod['func_2929'] = func_2929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_2933 = func_2086_call()
call_2934 = func_2086_call()
output = call_2933
output2 = call_2934
func_2949 = relay.Function([], output)
mod['func_2949'] = func_2949
mod = relay.transform.InferType()(mod)
mutated_mod['func_2949'] = func_2949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mutated_mod.get_global_var('func_2949')
call_2950 = func_2949_call()
output = call_2950
func_2951 = relay.Function([], output)
mutated_mod['func_2951'] = func_2951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2954 = relay.var("var_2954", dtype = "float32", shape = (6, 16, 7))#candidate|2954|(6, 16, 7)|var|float32
var_2955 = relay.var("var_2955", dtype = "float32", shape = (6, 16, 7))#candidate|2955|(6, 16, 7)|var|float32
bop_2956 = relay.floor_divide(var_2954.astype('float32'), relay.reshape(var_2955.astype('float32'), relay.shape_of(var_2954))) # shape=(6, 16, 7)
uop_2961 = relay.acosh(bop_2956.astype('float64')) # shape=(6, 16, 7)
output = uop_2961
output2 = uop_2961
func_2965 = relay.Function([var_2954,var_2955,], output)
mod['func_2965'] = func_2965
mod = relay.transform.InferType()(mod)
mutated_mod['func_2965'] = func_2965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2965_call = mutated_mod.get_global_var('func_2965')
var_2967 = relay.var("var_2967", dtype = "float32", shape = (6, 16, 7))#candidate|2967|(6, 16, 7)|var|float32
var_2968 = relay.var("var_2968", dtype = "float32", shape = (6, 16, 7))#candidate|2968|(6, 16, 7)|var|float32
call_2966 = func_2965_call(var_2967,var_2968,)
output = call_2966
func_2969 = relay.Function([var_2967,var_2968,], output)
mutated_mod['func_2969'] = func_2969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_2983 = relay.TupleGetItem(func_2097_call(), 1)
call_2984 = relay.TupleGetItem(func_2099_call(), 1)
uop_2996 = relay.sin(call_2983.astype('float32')) # shape=(11, 13, 10)
uop_2998 = relay.sin(call_2984.astype('float32')) # shape=(11, 13, 10)
func_648_call = mod.get_global_var('func_648')
func_653_call = mutated_mod.get_global_var('func_653')
var_3001 = relay.var("var_3001", dtype = "float32", shape = (35, 9))#candidate|3001|(35, 9)|var|float32
call_3000 = relay.TupleGetItem(func_648_call(relay.reshape(uop_2996.astype('int16'), [11, 13, 10]), relay.reshape(uop_2996.astype('int16'), [11, 13, 10]), relay.reshape(var_3001.astype('float32'), [315,]), relay.reshape(var_3001.astype('float32'), [315,]), ), 0)
call_3002 = relay.TupleGetItem(func_653_call(relay.reshape(uop_2996.astype('int16'), [11, 13, 10]), relay.reshape(uop_2996.astype('int16'), [11, 13, 10]), relay.reshape(var_3001.astype('float32'), [315,]), relay.reshape(var_3001.astype('float32'), [315,]), ), 0)
func_1392_call = mod.get_global_var('func_1392')
func_1398_call = mutated_mod.get_global_var('func_1398')
const_3009 = relay.const([-1.382396,-3.503814,2.403673,-4.479285,-0.854720,9.028803,-8.223114,0.666629,8.171742,8.009089,-1.072086,-8.739237,6.443569,-2.394025,1.906608,-4.848216,8.945920,9.343749,2.158979,5.301201,-8.301837,0.432956,-2.747640,-8.678191,1.905634,6.996308,7.039732,9.122866,6.039041,-1.919181,-4.962559,0.314108,9.624071,-9.880659,-6.102583,6.612318,6.587021,5.898049,8.374146,9.519998,-3.031809,-8.454425,-6.943663,-7.617776,3.885445,4.185169,2.612041,-4.280789,8.035046,3.257859,-4.025408,-4.551467,9.494525,5.911255,3.380663,6.287583,-0.674901,6.786484,3.248358,-6.044422,-2.316391,9.778883,-1.736293,2.173668,-6.468175,-2.815670,7.998944,-7.903571,-0.983455,6.320086,1.935035,7.189875,-1.372122,-9.502434,-8.819865,6.279128,-1.457669,-6.586011,-0.383630,-6.444373,5.420317,4.627107,4.200401,3.246079,4.168876,0.979475,-2.002273,-7.706758,-2.640917,-0.827873,-8.970567,1.942600,-6.782088,5.178984,4.961524,-7.284242,-3.406857,3.925572,9.342040,-5.610816,1.828806,8.775335,-5.452167,4.613733,2.803230,-8.096677,7.190975,-4.319895,1.489740,-3.050456,-9.298896,1.864222,-1.673875,-5.931402,-9.419981,-8.089689,2.904244,8.738366,-9.404701,-3.268034,-1.144521,2.173606,-5.249517,-2.860096,7.916978,1.159597,7.358101,4.581095,1.239961,8.004954,-3.914651,-8.417156,-6.847116,2.910740,-2.003296,-7.213411,-5.906907,-2.448842,3.845038,1.031538,9.256845,-6.559107,9.967646,-3.827355,-7.261646,-9.121636,7.477761,-5.611853,-1.797458,-3.827206,2.789884,-3.304591,-7.439115,-2.038084,7.190783,0.271949,-3.445635,0.317863,2.782477,7.634867,9.483807,-3.599627,-2.343501,-3.980694,-8.532294,7.520849,5.446409,-7.686341,-9.732967,-3.717416,-3.654470,-0.137279,5.592377,-6.067060,8.414564,-0.044975,-5.494630,2.485532,7.641716,8.267185,0.017380,4.442048,-0.834430,-8.017810,7.155742,-7.367096,-6.264189,-0.350620,-2.291571,-8.822343,-1.908949,3.536711,3.349289,1.766715,-4.425743,3.945043,0.342556,8.521559,-9.822749,-6.235501,-8.180812,3.043380,3.969585,-7.770505,-3.685978,6.320280,-6.662609,8.505346,-4.421348,-4.822433,-4.042057,-0.566705,0.127104,4.880157,1.966379,6.217722,9.938299,8.342412,-2.275020,-3.976286,-8.536797,-3.259167,-5.596197,4.469628,-9.170226,-2.445748,8.604147,7.678710,-1.892822,-6.751881,-6.543263,4.904477,-0.666263,6.333254,-2.956765,6.253021,5.908374,5.777672,-0.528079,-5.709193,2.847735,7.322123,7.847193,5.148784,4.540529,-5.969987,0.740327,2.681403,-2.249313,-8.525583,3.133049,7.660287,9.390529,-3.551227,8.302220,5.279494,6.107885,2.991328,1.048410,-2.912784,-1.769634,-6.541493,-0.892115,1.175905,-0.307037,-7.277882,-7.213165,5.611469,-0.891633,5.271888,-9.696940,-3.364454,4.997997,4.812898,-0.277105,5.186309,-8.556391,-4.645407,-8.092772,9.283768,-8.389474,-0.035160,1.018212,-8.874716,2.109431,-9.941758,-2.581122,-3.315472,-1.448580,-8.614139,5.647139,-9.669469,-5.540379,3.951708,-7.203500,7.114536,-0.039912,9.033952,6.186201,5.993479,4.870853,4.313952,0.924518,7.977273,9.360404,-7.505615,-8.519750,-5.676751,-9.572852,4.467424,-6.258750,3.282633,-5.378767,-4.109157,-3.564275,-3.882455,6.302179,-0.918040,7.825391,7.635258,7.754300,-8.959016,-3.041991,-0.981905,-7.350550,2.202437,3.774884,6.365889,-7.288228,1.083276,0.963421,-3.544096,3.036206,8.981594,6.652589,5.911145,6.224700,-8.870696,-7.128410,-7.116375,-7.898735,3.017546,-7.359942,4.310198,5.586285,2.543129,-9.815845,3.174634,-2.100053,7.656647,8.131854,0.971496,-1.640737,-0.635790,-8.516982,4.650128,1.637435,-9.749426,9.586247,-3.599180,1.301023,4.860760,1.111800,4.667053,-0.450786,1.952710,-7.857506,-5.853711,-3.279113,6.345993,4.261378,9.725452,-0.467510,-8.443925,8.471647,-4.589612,-9.583940,5.996133,-1.766731,-4.924941,8.928760,5.678900,-0.683495,-0.844119,-7.344649,1.937406,-5.303466,-9.625668,4.389856,-4.184938,1.268898,1.756825,-4.443707,-4.289581,2.563526,5.795515,-3.175787,-1.340996,-9.556656,-1.953279,5.584899,-1.289284,-5.267017,-8.424205,0.722679,1.241218,6.926557,6.664753,0.597481,-6.976976,-2.155095,1.208066,-1.668224,8.530919,-1.108592,-4.369096,9.524089,5.053640,5.712690,4.572636,-0.889146,-1.308317,4.048235,2.639374,6.939711,-6.966735,-5.093362,-9.752933,5.705017,0.392589,7.410375,5.094092,2.494216,8.525605,-1.123445,2.195221,9.113843,-3.296106,8.863573,7.408394,-0.323844,-7.502742,0.250268,9.161468,-2.363472,-3.370486,-1.896098,3.433816,-1.906579,8.057195,3.267886,8.018221,-1.367079,-7.488496,7.803639,-7.781735,6.053423,-5.714149,8.301881,1.185635,7.685207,-3.288177,-2.518969,7.911654,-0.465334,8.221844,6.941931,-6.071088,4.003961,-7.256080,-4.394975,-3.085162,3.079050,-4.870174,-1.966127,2.330800,2.090723,-4.058492,6.358850,-7.025449,-4.945307,9.532757,-3.473983,9.440382,-7.403172,-1.971903,-8.894334,-4.259681,-2.222785,-8.282098,7.721112,-5.356218,0.709464,-1.304956,-4.504403,-1.194623,-5.447701,-9.762830,4.630398,-8.142213,4.801249,-7.895508,1.649376,-5.839559,4.750283,3.242740,-1.595057,9.425831,-0.718400,-2.576028,-8.546395,5.134964,-3.492859,3.890124,3.691927,-6.729397,0.733131,-6.506873,6.324023,-5.845402,5.125232,6.742729,8.940025,-4.371435,-5.283577,-2.185650,3.044882,-2.373895,4.895049,-2.571136,8.911606,-5.620017,6.498098,-5.334959,1.672109,-4.350556,-7.881084,-2.964858,-8.805635,9.606428,1.284643,-0.729925,0.246315,-9.280152,-5.785567,8.433345,4.024930,-3.072504,-1.795169,-1.535089,8.256413,-0.198781,-9.086401,0.710025,2.130185,-0.092886,-6.882919,-3.661940,6.564291,6.085934,2.672891,7.220414,-7.470297,7.174119,-6.316489,-9.833636,-5.218158,1.039813,6.565900,-1.823472,5.719292,2.083963,3.819754,1.317698,-9.490867,-3.894660,0.012706,5.439067,-1.608118,-1.457404,-9.351509,-7.497886,-7.386720,1.964926,4.051694,-3.282581,-6.360667,-8.859657,4.688103,-6.076995,-4.516167,2.099410,7.413346,8.390223,-8.334425,-7.596483,-3.535651,4.489989,1.807420,-9.569177,-6.280302,9.300180,-0.174837,-9.969393,-7.695255,-6.538398,-8.349515,-9.634525,-3.965127,1.421806,-6.456644,7.211781,-5.922039,5.402701,3.409258,-0.722161,-6.701323,4.948597,-9.902543,5.282238,-0.726188,2.047265,5.589957,-2.001037,-3.502163,-3.742608,-5.363934,4.403742,1.537531,-6.922038,7.760645,-1.703921,-2.363407,-5.948756,-4.351340,5.383160,7.728797,2.534770,9.764201,-1.743901], dtype = "float32")#candidate|3009|(640,)|const|float32
const_3010 = relay.const([[-3.963632,-7.325634,1.610313,-3.565020,1.782896,1.762099,5.342139,8.123788,-6.669091,6.645953,-8.513405,-3.656090,-9.721394,2.221488,0.277628,2.170611,8.698698,-1.725986,4.973022,2.676348,4.078679,-7.444387,-3.133781,-6.364661,6.112773,-6.761103,-8.095661,-0.177974,-1.658900,3.885424,-5.259240,3.078421,-4.496402,-9.870730,-9.271233,-0.421606,-3.355731,-1.866256,1.371301,1.505360,8.838507,-0.815026,-0.517276,-1.657067,-7.293689,-4.185134,-9.832644,8.853955,1.877808,-3.454021,1.095033,-8.959950,-6.253424,-4.769793,9.328222,-8.018864]], dtype = "float64")#candidate|3010|(1, 56)|const|float64
call_3008 = relay.TupleGetItem(func_1392_call(relay.reshape(const_3009.astype('float32'), [10, 8, 8]), relay.reshape(const_3010.astype('float64'), [56,]), relay.reshape(const_3009.astype('float32'), [10, 8, 8]), relay.reshape(const_3009.astype('float32'), [10, 8, 8]), ), 2)
call_3011 = relay.TupleGetItem(func_1398_call(relay.reshape(const_3009.astype('float32'), [10, 8, 8]), relay.reshape(const_3010.astype('float64'), [56,]), relay.reshape(const_3009.astype('float32'), [10, 8, 8]), relay.reshape(const_3009.astype('float32'), [10, 8, 8]), ), 2)
bop_3016 = relay.add(uop_2996.astype('int64'), relay.reshape(call_3000.astype('int64'), relay.shape_of(uop_2996))) # shape=(11, 13, 10)
bop_3019 = relay.add(uop_2998.astype('int64'), relay.reshape(call_3002.astype('int64'), relay.shape_of(uop_2998))) # shape=(11, 13, 10)
const_3034 = relay.const([[[5.740985,3.025835,1.823564,-4.756909,7.672601,2.947558,-3.636244,-2.079235,3.658176,-8.424648],[3.048373,-0.606061,8.682935,-0.255178,9.765445,-0.299435,-4.600225,-5.411210,6.425694,1.702244],[-3.656930,1.928071,8.425943,-1.097459,8.566814,8.700532,2.573825,-1.811365,1.214228,6.334320],[-4.599764,-8.658853,4.194297,3.526712,7.499003,-5.477386,1.397641,7.642028,5.846859,3.005906],[-3.818712,8.791373,-3.933102,3.033216,5.002171,-2.203305,-5.464498,-9.806218,-8.881071,-4.028065],[5.635200,4.824807,-8.088359,3.795257,-8.521207,-3.810737,6.759955,1.241347,7.248671,4.995265],[9.388186,3.706761,-3.961250,9.330653,7.809442,6.106404,-6.111015,3.024988,3.052000,-3.888486],[-1.924182,-1.639665,5.489222,9.513370,-6.066063,1.185422,6.587954,2.164582,-2.262181,-6.396446],[-1.498980,-3.848144,-9.710512,-1.027081,-9.950027,6.084201,1.890456,-0.444551,6.003987,-2.989338],[4.578283,9.506611,-6.296763,-0.152553,-5.390823,-6.688492,-7.753924,3.055511,-5.614596,-5.979332],[4.716180,1.971135,-0.059964,4.481631,-7.653595,5.341249,1.905150,-8.676167,-0.652572,-3.651298],[5.129516,4.141035,-9.445930,-1.102799,-2.117150,4.453142,-6.251343,0.297468,9.654456,0.832316],[-1.654411,7.360885,0.001412,0.700078,-0.866672,-5.361368,-3.893376,-2.877436,8.511827,3.950335]],[[2.240301,9.228859,-7.721967,-2.861349,6.717333,3.523383,9.140302,6.599141,-1.991774,-7.789803],[-2.852419,-0.419501,-0.806655,1.404682,5.953850,-7.039699,-7.664127,-4.487211,-5.382182,-9.205267],[-6.782598,8.486079,-0.950934,4.967025,9.711755,4.119107,-6.138329,-8.456667,-9.955993,-0.474210],[-5.085449,9.289195,-6.766650,9.399488,-3.886816,-3.121880,2.335265,-2.358263,-8.255836,-6.551259],[2.389681,-4.246292,6.952185,3.830546,-7.814558,2.907445,-9.538308,2.938421,1.421998,9.352514],[-1.046726,-4.956949,3.327644,1.488133,-1.562686,0.194346,-0.043887,-7.350049,-5.094639,3.466657],[3.510447,4.573327,0.082006,6.893035,-6.662763,2.462584,-0.968293,-1.734076,-8.936992,-2.127058],[-8.934722,9.435290,3.631115,-0.405776,1.109857,-6.627747,1.593152,-7.022436,7.210014,5.580559],[-2.491414,-7.232679,-3.276482,-1.148225,8.683838,-6.625143,-0.362587,-1.345908,9.935158,0.073759],[-9.413828,1.127227,1.119987,0.521955,4.116607,-3.362815,0.317219,6.876820,-7.083068,-4.261271],[-9.060566,1.976878,-3.704422,-6.342383,-9.101003,-1.609965,1.449857,-6.300998,9.083535,8.713200],[-9.314088,-1.102513,8.867305,-9.632207,9.797153,2.392797,2.388269,-1.816072,-8.943471,7.898196],[-4.909139,0.614018,7.644061,2.783698,5.853154,-5.403490,-2.155284,1.396691,-8.199509,6.526478]],[[5.402945,1.248460,6.628404,-7.845515,-6.224522,2.015067,-3.833298,-1.148525,-9.399470,-0.266968],[7.842297,-8.360490,-2.691441,7.252773,7.358105,-0.203986,2.443033,1.637083,-1.506134,-5.745449],[5.309256,9.819429,-6.789981,3.196539,3.759837,9.949581,-1.142161,1.678350,3.209903,1.262149],[7.495755,8.262522,9.169299,-7.202471,4.051949,-0.918599,-4.236329,-4.022479,-2.882819,0.952752],[1.701767,-5.432380,-5.663789,-7.089829,-2.484014,-7.333625,-1.973723,-5.044695,-3.906459,2.033662],[3.085720,-1.640701,5.832338,-2.890202,0.324048,-5.239398,-5.938942,-0.299616,-8.454244,2.384575],[9.562615,-6.206260,3.029389,1.559504,5.509344,6.062443,1.633864,-6.957311,-3.908852,-6.456326],[8.349408,4.728554,9.545363,-4.648457,-6.158051,-0.122049,-1.431581,9.375035,1.620175,0.620059],[0.848102,7.359032,3.311795,-8.036026,-5.774898,5.812955,8.328809,-7.603852,-3.889355,-6.951914],[-3.283025,-6.900912,4.046262,-8.077846,1.970319,-2.729473,4.811657,8.372868,8.209539,-1.280374],[-1.652401,2.852567,-5.059804,-7.298990,8.410190,-3.218067,1.097377,-6.193255,-7.096843,8.190119],[-2.235433,5.148799,1.624632,-1.709274,-6.426389,-8.468290,-2.517273,-8.502274,7.438185,-6.371557],[7.762549,-2.119169,1.252055,7.281272,-6.984487,1.343266,-9.764333,-6.761938,1.090032,2.601567]],[[5.244814,-2.422831,5.466602,2.762008,7.126871,5.656737,-7.626296,6.970643,-0.398251,8.545097],[4.585468,-1.571183,6.375210,7.041564,0.522240,-6.249690,1.623288,8.441132,3.333743,6.362499],[-9.034182,5.233412,8.866824,-2.316176,-4.064447,-8.806896,5.637837,2.188660,0.442923,3.233339],[8.043114,0.530035,6.155998,-6.084908,6.832049,9.959803,-4.457514,-1.126111,-0.774755,-4.194650],[6.740977,-6.442712,7.405723,9.937797,5.932935,0.162262,4.127616,8.531314,2.694632,8.157655],[7.602448,-4.619391,-3.114683,2.754125,-9.099297,4.392579,-4.251200,-4.502515,0.581798,-5.306869],[-1.695875,-8.829742,1.708565,-7.872992,7.088815,7.037498,5.064428,-4.722439,9.070115,-0.174876],[1.499165,2.402257,1.761660,0.784427,3.241374,1.163367,-4.001576,2.469557,4.399752,-4.190648],[-0.271517,-9.422971,-6.108312,0.522677,-9.053573,6.842353,0.269441,-4.643193,-6.851245,6.669626],[7.856328,0.279388,-5.089804,2.371270,0.157489,-9.351863,-1.538458,4.088439,-5.073698,-1.108309],[-3.565523,-0.669634,-1.024754,-5.008066,0.956429,-9.134523,2.652648,-0.533742,8.780141,7.502086],[0.814124,-2.830820,-4.651402,-5.837682,-1.188887,-0.253519,-1.836410,-7.249186,6.483361,8.176508],[-0.779962,9.900624,-3.822984,-3.025478,-6.565340,-1.405307,6.073802,7.633683,-0.348506,-3.919885]],[[-2.160585,5.041276,-9.503390,9.459633,-7.657235,-4.151794,-3.126170,-9.583866,2.840293,-9.417873],[0.180187,4.306224,2.040327,-5.384566,3.024969,-3.830605,6.954928,-9.753551,8.290575,8.580299],[4.912177,0.592179,-7.406236,-7.990262,-4.709427,7.967269,9.510488,-4.868281,5.063225,-9.472419],[-4.911418,-1.635831,-4.506238,7.764412,-1.856439,6.242967,-4.099966,0.094273,8.765313,-0.646728],[1.847062,0.719364,-8.862581,4.683736,-9.726466,-8.328969,2.130118,8.948577,-2.725326,5.364966],[4.112063,-2.440484,5.179595,-4.245777,1.977146,-7.673862,-8.070646,1.201115,-5.686791,-3.903684],[-8.511458,9.433452,8.635514,4.040715,6.435108,-4.887031,4.825587,-7.323335,3.804382,7.167767],[1.406195,3.626271,1.806584,-3.419053,7.801400,5.898380,-0.984693,3.900097,6.685959,1.910038],[-6.020408,2.249879,-1.060780,-1.878423,7.094548,-5.651713,-5.915763,-3.485191,-8.502256,2.968284],[-9.711986,4.121570,3.297085,-6.409105,0.617207,4.718570,-4.805520,8.784010,-9.200489,-6.806225],[-4.439522,-2.919788,-1.868760,-6.196250,1.357734,-7.799698,-1.344221,-0.275577,2.252133,-3.509854],[-3.783677,-9.783017,3.716480,5.822610,6.306074,5.103673,-4.848665,-6.510964,-2.944430,3.681461],[-0.615172,5.938834,4.327318,-9.307036,0.963576,1.857396,-7.392795,-8.137277,-1.394413,4.378560]],[[3.637792,7.415188,-5.914653,-5.480085,-8.580728,1.996068,1.557216,-2.535690,-0.852054,6.193239],[3.375098,-2.656593,-0.591967,1.873218,-5.583191,0.480547,6.024401,-2.523501,-0.852944,9.724563],[-9.288286,-2.489960,0.016949,7.854533,8.325100,8.168426,8.594461,4.919800,-6.513627,-5.629369],[4.288067,-6.115438,-3.296760,8.151365,0.909273,-4.506178,1.659302,-8.214102,5.266647,-4.239433],[-4.352678,3.901295,3.323362,-2.375050,-8.449868,5.037818,-4.155404,-8.156526,-1.295975,5.251517],[-3.228194,6.977545,-1.585380,6.034594,3.699105,9.217331,1.022774,-9.352372,4.181482,4.975889],[0.850642,3.201589,-7.161313,1.361173,5.192010,5.548750,-6.749684,1.413349,-7.424522,-8.904857],[4.702141,1.077965,-2.733607,4.904490,-4.221592,6.202314,3.706825,7.655626,6.743201,-7.315324],[-0.624279,-1.237668,6.702737,8.545497,-8.085872,5.116332,6.199953,9.011441,-9.031607,2.627848],[9.118771,9.643346,-1.344005,-8.677784,3.518230,-8.989339,-9.412102,-3.546597,6.400012,2.426391],[2.874043,5.808284,-8.650389,-1.616400,5.077269,1.989897,0.005819,-4.318161,-0.146367,7.278288],[3.735555,8.197139,-7.076098,5.767963,3.758839,-2.208613,-0.260661,-2.738267,-1.129445,6.895677],[-2.784360,-3.088449,8.179676,5.381448,7.584320,2.568877,1.469463,5.723048,-6.820879,2.034888]],[[0.674534,-1.843034,9.588745,-7.449607,-7.500907,3.724736,2.859959,-9.360695,-0.955252,-9.777077],[-3.335126,7.911468,-7.192094,5.702230,8.688313,-9.422991,-0.954881,-3.989509,1.632896,4.027705],[1.745680,5.873335,-9.179364,0.026864,4.017516,6.480331,-7.255824,7.301705,0.588027,2.644984],[8.867767,0.547214,1.211003,8.490482,8.125408,-0.183519,-8.432388,3.745520,4.611073,9.143804],[-0.737854,-7.204593,7.196538,7.056810,-7.985266,-8.977673,-5.295078,-8.043548,7.113429,6.472045],[-9.958716,2.621987,0.932159,-7.246864,-6.985762,2.807188,-5.395184,0.923039,-0.869447,-8.872784],[2.705816,-9.178492,-7.149442,0.409854,4.104290,-6.142317,-1.581358,-8.604828,-3.132652,-0.931574],[-4.590738,0.614520,6.100652,7.219628,4.887713,0.623427,-3.959270,9.257943,-7.162417,-2.996487],[1.781603,5.931477,5.834025,3.019489,-0.259850,-6.902100,3.313551,0.848769,-2.987954,-2.914945],[-2.190230,-0.802798,-2.376154,-7.562156,9.861931,-4.063171,7.037247,-9.954163,0.508247,7.960422],[-7.720961,-1.456248,9.860438,-2.961488,-8.811382,-6.614934,-9.112744,8.278424,-3.091580,2.402778],[3.679997,-6.211545,-2.754881,8.324838,-5.717729,7.041143,-2.750598,-6.041525,-4.340538,8.852469],[-3.897506,3.801557,-6.154163,6.290385,-9.635304,-4.759288,-4.266296,2.996883,-0.660391,-7.690592]],[[6.630672,1.206954,8.401420,7.322828,-9.398707,4.114037,-4.573107,-9.769046,7.608871,8.757522],[-2.505764,7.818955,-0.812605,5.845064,8.332903,0.559986,-0.355219,-4.674652,4.972972,6.018036],[-3.618015,-1.489419,6.272799,-0.994455,-2.030552,8.037672,5.858747,3.552205,1.091697,-5.729976],[-5.699859,3.825027,-9.142643,-2.396965,2.285187,-4.221875,-7.902992,4.560476,9.982975,8.947489],[4.486541,-1.093643,4.591093,5.016484,9.119830,-9.057245,3.276916,-2.943658,6.712054,2.709789],[-5.206008,5.249613,-4.554628,-8.492604,-5.562251,7.101897,-0.651011,-8.724512,0.853292,-8.630187],[-6.899224,-8.092664,-0.066613,6.802362,-9.040793,5.252758,-5.831433,1.614171,1.644329,-0.617876],[8.223803,2.823420,-9.326132,-6.182602,8.050058,-5.428738,6.771329,-0.975037,4.595342,5.799239],[-8.161018,-7.477916,9.661050,-2.860443,1.633006,-9.993417,-8.653416,2.180336,-4.596151,2.722276],[-6.393624,4.874118,-6.975880,-5.903031,1.803626,5.658655,-5.191382,1.929697,-6.591171,-2.354394],[-9.893748,-6.475579,-4.240600,5.302626,2.884739,4.544004,-3.626374,2.640403,-9.470390,-3.085324],[-4.637159,6.644654,9.833943,-5.474348,-4.668794,-8.120977,-3.447572,-9.966420,-6.235144,4.514306],[-8.954178,2.771603,9.933489,9.301493,-2.375444,1.680848,-2.223797,8.621067,8.601837,4.056600]],[[-6.332927,8.839445,-8.865050,-2.543779,3.279537,6.439660,-1.100802,4.973172,6.198033,4.754080],[-8.615850,-2.208963,8.594455,3.760083,-4.602949,8.969044,-6.403626,2.642849,-9.902688,2.942371],[1.809808,7.472722,9.417814,7.473650,4.971180,5.640448,9.708085,-2.933026,8.324000,-1.052872],[-4.949538,2.109574,-3.016846,-1.892413,-3.715249,-0.327463,-3.089868,5.349042,-9.627071,-9.958139],[1.520023,-4.632688,-1.749847,4.549500,-7.141243,1.593765,3.310798,8.724870,1.294029,-0.676738],[9.030458,2.989799,-8.647716,1.120306,4.225009,3.327441,4.985517,9.711142,-4.583603,-6.793013],[-7.755940,-4.767643,-5.765327,1.032174,5.577241,3.379838,6.619698,-1.494864,8.327711,-7.972498],[8.459252,0.747026,3.281096,-7.107386,3.540773,-0.885090,-9.961217,-7.497935,-8.257034,-0.714682],[1.497078,-7.890747,-6.700810,4.423646,8.534742,-2.949099,5.208976,1.297758,2.788814,-0.433911],[-9.741963,-6.468945,9.846858,5.271050,7.656901,1.889110,3.840695,1.452068,-8.779865,6.409084],[-9.760840,3.388207,6.760135,6.216022,-2.215715,-7.220619,-7.979548,-9.021320,6.626473,-9.114630],[6.375100,0.975157,9.008513,0.345358,5.464570,1.938494,-5.983580,6.796700,-0.966185,-9.510487],[4.224895,9.046633,-1.594721,2.300192,-4.868114,-6.640824,-2.657206,-7.068855,-8.963216,2.601756]],[[2.668649,8.778889,3.205748,3.932129,7.964229,3.877758,-3.426460,7.038912,-1.363785,-6.467219],[-2.169560,-2.309920,8.034416,-0.009547,-4.308637,6.227009,7.845441,-0.735694,-7.334306,-9.872510],[9.438610,-0.554236,-1.188852,-6.434262,-7.748390,1.409420,4.505135,8.529376,9.801024,-0.479977],[-0.722939,1.435751,3.466032,-2.599295,5.594479,4.441670,-7.030452,6.492451,7.930857,1.989774],[-7.243356,-8.362443,4.937719,-3.438401,-5.051754,-4.051753,2.116102,-2.587598,9.835566,-5.113548],[5.959723,-9.999185,2.075101,-7.065040,7.870648,-0.775183,1.840854,-9.011762,3.163629,0.801100],[3.413750,-0.736117,3.790627,6.821390,5.475432,5.140441,-1.369794,4.745755,6.906211,-2.132160],[1.434971,5.636478,-3.906581,2.037188,-3.169202,5.049057,1.907780,-0.794497,-9.099967,2.405107],[3.463222,-8.440478,-8.167957,3.817557,6.953082,0.904344,2.617994,6.110970,-9.404032,0.284336],[6.789646,-8.773634,-1.695900,6.992416,8.010097,-7.943276,-8.222086,-6.780846,-7.376215,-1.181158],[1.905766,4.731520,-6.772621,-8.161748,9.953360,-1.622688,-0.875684,8.802141,9.454242,4.801296],[-9.695077,-4.659435,-4.328284,4.692331,-5.490433,9.201304,8.370100,-1.462010,1.821950,-6.162917],[-9.442505,-2.464764,-9.164133,3.781389,-5.687270,-5.880275,9.445184,8.661879,5.199218,-6.092763]],[[5.642691,0.048998,-6.531988,-8.737646,0.686895,4.001376,0.857709,-7.612367,2.613529,-8.613889],[2.813346,-2.967943,8.820414,-9.998822,1.301743,-8.944465,-6.467419,0.400326,-1.361096,1.702657],[9.766492,1.385333,-5.498118,-5.792289,-2.406608,7.247210,3.202415,-7.109960,-6.046819,3.396163],[7.174381,-8.566815,7.870064,3.916441,6.090619,1.480365,6.393320,-2.967778,4.363826,6.597896],[4.928115,5.417464,4.970035,1.637121,-3.991475,8.837252,-0.607147,-3.124277,3.028687,3.132057],[-1.281429,2.889117,-6.785115,6.908049,-6.860190,2.721977,8.396970,-9.236906,-2.427170,-8.966841],[-4.669095,-0.309007,3.944263,5.145649,-3.397735,-0.605834,9.654091,-5.760951,9.575448,1.664616],[1.004520,0.272865,0.417282,0.975305,9.764965,6.346384,1.040536,-9.889197,-0.957444,4.066837],[4.507031,3.623875,-5.645686,-9.828965,9.303926,7.765495,-1.572326,2.369468,5.122302,0.819333],[2.298901,-8.539694,-0.093363,9.452237,-3.731609,-9.757056,-2.808463,1.241907,3.365863,-6.417834],[0.713727,0.678593,-9.109909,-3.456689,8.470957,-2.650120,-4.969383,5.925161,-7.387328,5.299973],[-3.110486,-6.728895,3.266197,6.460989,6.720402,8.399666,6.925408,-2.561082,2.212393,4.689349],[-8.222964,1.074704,3.197417,8.166956,-7.840428,-5.711215,-7.776518,6.020796,-7.594350,7.487091]]], dtype = "float32")#candidate|3034|(11, 13, 10)|const|float32
bop_3035 = relay.mod(uop_2996.astype('float32'), relay.reshape(const_3034.astype('float32'), relay.shape_of(uop_2996))) # shape=(11, 13, 10)
bop_3038 = relay.mod(uop_2998.astype('float32'), relay.reshape(const_3034.astype('float32'), relay.shape_of(uop_2998))) # shape=(11, 13, 10)
output = relay.Tuple([var_3001,call_3008,const_3009,const_3010,bop_3016,bop_3035,])
output2 = relay.Tuple([var_3001,call_3011,const_3009,const_3010,bop_3019,bop_3038,])
func_3042 = relay.Function([var_3001,], output)
mod['func_3042'] = func_3042
mod = relay.transform.InferType()(mod)
var_3043 = relay.var("var_3043", dtype = "float32", shape = (35, 9))#candidate|3043|(35, 9)|var|float32
output = func_3042(var_3043)
func_3044 = relay.Function([var_3043], output)
mutated_mod['func_3044'] = func_3044
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2876_call = mod.get_global_var('func_2876')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_3054 = relay.TupleGetItem(func_2876_call(), 0)
call_3055 = relay.TupleGetItem(func_2878_call(), 0)
const_3076 = relay.const([[[False,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True],[True,True,True,True,False,True,True,False,True,False,False,False,False,True,False,False],[False,False,False,True,False,False,False,True,False,False,True,True,False,True,False,True],[True,True,False,True,False,False,True,True,False,False,True,False,True,False,True,True],[False,True,True,False,True,True,False,False,False,True,True,False,False,True,False,True],[False,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False],[True,True,True,True,True,True,True,True,False,False,True,False,True,True,False,True],[False,False,False,False,False,True,True,False,True,True,True,True,True,False,True,True],[True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False],[False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,False],[True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False],[True,True,True,False,False,True,False,True,False,True,False,True,False,False,True,True],[False,False,True,True,True,True,True,False,True,True,False,True,True,True,False,False],[False,True,True,False,False,True,False,False,True,False,True,True,True,True,False,True],[True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,True],[True,False,True,False,False,True,False,True,False,False,False,True,True,False,False,False]],[[True,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False],[True,False,False,True,False,True,False,False,True,False,True,False,False,True,False,True],[True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True],[False,False,False,False,True,False,False,False,False,True,False,False,True,False,False,False],[False,False,True,True,True,False,False,True,False,True,False,False,True,True,False,False],[True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,True],[False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True],[True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,False],[True,True,True,False,False,True,False,False,True,True,False,False,False,False,True,False],[True,True,False,False,True,False,False,True,False,False,True,False,True,True,False,False],[False,True,False,False,False,True,True,True,False,True,False,True,False,True,True,True],[False,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False],[True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True],[True,True,False,True,True,True,True,True,True,False,False,True,False,False,True,True],[False,True,False,True,True,True,False,False,False,True,True,True,False,True,False,True],[False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False]],[[True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,False],[True,True,False,True,True,False,True,True,False,True,False,False,True,True,False,False],[True,True,False,True,False,False,True,True,True,False,False,True,True,False,True,False],[True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True],[True,True,False,True,True,True,False,False,True,False,True,False,True,True,False,False],[True,False,True,True,True,True,True,False,True,True,True,False,True,True,True,False],[False,True,True,False,False,False,False,True,False,False,True,True,True,False,False,False],[False,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True],[False,True,True,True,True,True,False,False,True,False,True,False,False,True,False,False],[False,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False],[False,False,True,True,False,False,True,True,False,True,False,False,False,False,False,True],[False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True],[False,False,False,False,False,False,True,False,True,True,False,True,False,False,False,False],[True,False,True,True,True,True,False,True,False,False,True,True,False,True,False,False],[True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True],[True,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True]]], dtype = "bool")#candidate|3076|(3, 16, 16)|const|bool
bop_3077 = relay.logical_or(call_3054.astype('bool'), relay.reshape(const_3076.astype('bool'), relay.shape_of(call_3054))) # shape=(3, 16, 16)
bop_3080 = relay.logical_or(call_3055.astype('bool'), relay.reshape(const_3076.astype('bool'), relay.shape_of(call_3055))) # shape=(3, 16, 16)
func_2770_call = mod.get_global_var('func_2770')
func_2773_call = mutated_mod.get_global_var('func_2773')
const_3089 = relay.const([[2.270633,-1.249300,0.118225,-4.338493,-1.066893,1.034054,-5.389333,3.738848,-5.539796,-2.491787,3.662047,0.212373,-5.792599,7.151742,6.247064,-7.567621,9.315862,-7.817792,0.563097,9.535645,6.441291,-9.192396,4.318693,0.217718,2.030537,2.885825,7.235093,-9.662349],[1.334314,-8.612982,4.097524,0.909192,7.964482,0.621660,-4.667494,5.355277,-3.652051,-1.341557,7.734118,9.826530,7.545962,7.609421,3.633965,-5.777335,4.867160,4.195267,2.927196,-4.180178,8.441980,1.757191,-9.354753,2.077845,-1.728129,4.539475,-7.946942,-2.624019],[6.278854,-4.121502,5.854539,4.671560,-2.012425,8.848183,5.623870,-1.843296,-2.408772,-6.174750,-3.213845,1.208851,5.046651,-5.755902,6.403673,2.408647,8.056632,-1.754884,-2.400550,6.568422,-6.638690,-9.786304,-6.561474,-1.362952,3.431526,-8.128713,0.046052,-3.614995],[-8.353746,-0.649235,-3.816329,-0.522499,3.089069,-3.899358,-5.075409,-2.503763,6.179761,-1.379087,-5.237316,-5.823973,0.106683,7.825585,-7.085293,-2.583803,0.447705,-8.839769,-1.679117,1.798729,1.739376,-7.232172,5.080517,3.035445,5.580994,9.029289,-3.018205,3.472115],[-7.838567,-6.659235,7.031626,2.968666,2.101229,-4.140837,-4.111796,-7.797961,5.921644,6.900069,4.223186,6.236111,-1.070117,-6.774459,-7.642772,-4.076410,5.710838,2.115832,5.568851,0.818718,5.675412,3.971148,0.299511,4.030365,-0.075029,9.805182,6.125839,-8.340485],[1.788433,4.577219,4.792315,-3.507061,-0.932116,5.155121,-4.168196,9.241541,-3.580644,1.926389,-0.762708,-0.477127,8.598414,-1.650106,2.593430,-9.173298,-8.288309,-3.986838,-3.595377,-6.895395,3.818846,-9.519530,-2.976114,6.602457,-9.230145,-3.629437,1.069085,1.795831],[-5.965279,-5.659315,9.812028,1.134699,-8.606818,8.231793,-2.867050,4.626308,8.353933,-8.244953,3.203172,-9.456160,-5.957411,-4.731214,0.136111,6.572967,-6.872419,8.104973,-4.411050,3.949653,6.357335,8.416223,-3.564237,5.630960,2.842060,0.122396,1.487827,-1.864105],[-3.466449,9.445781,0.916007,4.921819,-3.305229,5.191601,5.734887,9.485345,2.928839,0.941358,-7.750110,7.691649,-1.303765,-0.060652,-9.481814,5.622028,-0.623305,-2.111586,8.643067,2.566345,3.759184,2.786213,5.335675,3.354856,1.762126,-2.009278,3.288554,0.571922]], dtype = "float32")#candidate|3089|(8, 28)|const|float32
call_3088 = relay.TupleGetItem(func_2770_call(relay.reshape(const_3089.astype('float32'), [14, 16, 1])), 1)
call_3090 = relay.TupleGetItem(func_2773_call(relay.reshape(const_3089.astype('float32'), [14, 16, 1])), 1)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_3099 = relay.TupleGetItem(func_1183_call(), 0)
call_3100 = relay.TupleGetItem(func_1184_call(), 0)
func_1516_call = mod.get_global_var('func_1516')
func_1517_call = mutated_mod.get_global_var('func_1517')
call_3103 = relay.TupleGetItem(func_1516_call(), 0)
call_3104 = relay.TupleGetItem(func_1517_call(), 0)
var_3115 = relay.var("var_3115", dtype = "float32", shape = (8, 28))#candidate|3115|(8, 28)|var|float32
bop_3116 = relay.greater_equal(const_3089.astype('bool'), relay.reshape(var_3115.astype('bool'), relay.shape_of(const_3089))) # shape=(8, 28)
output = relay.Tuple([bop_3077,call_3088,call_3099,call_3103,bop_3116,])
output2 = relay.Tuple([bop_3080,call_3090,call_3100,call_3104,bop_3116,])
func_3121 = relay.Function([var_3115,], output)
mod['func_3121'] = func_3121
mod = relay.transform.InferType()(mod)
var_3122 = relay.var("var_3122", dtype = "float32", shape = (8, 28))#candidate|3122|(8, 28)|var|float32
output = func_3121(var_3122)
func_3123 = relay.Function([var_3122], output)
mutated_mod['func_3123'] = func_3123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_766_call = mod.get_global_var('func_766')
func_768_call = mutated_mod.get_global_var('func_768')
call_3142 = relay.TupleGetItem(func_766_call(), 3)
call_3143 = relay.TupleGetItem(func_768_call(), 3)
func_76_call = mod.get_global_var('func_76')
func_78_call = mutated_mod.get_global_var('func_78')
var_3145 = relay.var("var_3145", dtype = "float64", shape = (56,))#candidate|3145|(56,)|var|float64
call_3144 = relay.TupleGetItem(func_76_call(relay.reshape(var_3145.astype('float64'), [4, 7, 2])), 0)
call_3146 = relay.TupleGetItem(func_78_call(relay.reshape(var_3145.astype('float64'), [4, 7, 2])), 0)
uop_3147 = relay.acosh(call_3144.astype('float64')) # shape=(4, 7, 2)
uop_3149 = relay.acosh(call_3146.astype('float64')) # shape=(4, 7, 2)
func_2327_call = mod.get_global_var('func_2327')
func_2329_call = mutated_mod.get_global_var('func_2329')
var_3151 = relay.var("var_3151", dtype = "float32", shape = (1430,))#candidate|3151|(1430,)|var|float32
call_3150 = relay.TupleGetItem(func_2327_call(relay.reshape(var_3151.astype('float32'), [1430,])), 2)
call_3152 = relay.TupleGetItem(func_2329_call(relay.reshape(var_3151.astype('float32'), [1430,])), 2)
output = relay.Tuple([call_3142,var_3145,uop_3147,call_3150,var_3151,])
output2 = relay.Tuple([call_3143,var_3145,uop_3149,call_3152,var_3151,])
func_3155 = relay.Function([var_3145,var_3151,], output)
mod['func_3155'] = func_3155
mod = relay.transform.InferType()(mod)
mutated_mod['func_3155'] = func_3155
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3155_call = mutated_mod.get_global_var('func_3155')
var_3157 = relay.var("var_3157", dtype = "float64", shape = (56,))#candidate|3157|(56,)|var|float64
var_3158 = relay.var("var_3158", dtype = "float32", shape = (1430,))#candidate|3158|(1430,)|var|float32
call_3156 = func_3155_call(var_3157,var_3158,)
output = call_3156
func_3159 = relay.Function([var_3157,var_3158,], output)
mutated_mod['func_3159'] = func_3159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2859_call = mod.get_global_var('func_2859')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_3163 = relay.TupleGetItem(func_2859_call(), 1)
call_3164 = relay.TupleGetItem(func_2861_call(), 1)
func_501_call = mod.get_global_var('func_501')
func_503_call = mutated_mod.get_global_var('func_503')
call_3170 = relay.TupleGetItem(func_501_call(), 2)
call_3171 = relay.TupleGetItem(func_503_call(), 2)
const_3172 = relay.const([5.282780,-5.021243,5.031078,2.783730,9.207407,-3.195135,-0.736097,0.875502,-6.556516,0.239388,2.263663,0.889954,5.219923,-4.498774,-0.059297,-4.937658,-9.456530,0.921808,-2.929332,2.713135,1.166605,0.225857,4.132670,-3.758344,-2.085708,3.342784,9.089461,6.600100,3.935125,-2.706228,-0.495597,2.009740,-2.307715,-1.028151,-1.437936,-1.398712,3.594713,0.696343,4.801486,2.368307,4.888880,1.270440,7.762034,4.814584,-4.676687,-3.568885,2.476335,9.323858,-4.768596,-4.129308,5.605365,3.346292,-0.683008,-7.881415,-8.407132,1.251281,-9.248293,-1.589955,-8.426099,-2.893763,-1.121487,0.330357,9.768468,2.300222,-3.110283,-6.773992,-3.555405,6.088666,-6.991472,-1.772975,0.255197,6.862193,-8.317338,9.609006,9.483711,3.866252,-4.374747,0.838872,2.682095,-1.662974,-0.795569,-8.743305,-0.213544,4.476234,0.385286,8.281335,-7.841654,-6.371962,-2.525090,3.405976,4.076881,7.797648,4.174521,0.268597,9.292538,-9.009452,-5.604026,7.962269,-5.784838,-7.302752,-6.309306,-3.380289,-6.584294,-5.700250,-2.874822,-3.031732,-5.594905,-2.432447,0.259479,9.431807,4.286303,-8.935150,-3.084307,-9.837299,8.155143,-9.988041,-3.593562,-8.942811,2.092521,9.448373,-2.011694,3.406869,-5.487222,-5.195715,-1.294170,-0.679716,2.945698,8.003932,-8.553921,6.453223,-7.672236,-7.506491,-1.184143,0.905841,2.114556,-2.457060,6.057965,-7.047174,3.322421,9.728995,-9.165562,1.182737,-7.796789,0.795741,-1.686694,-9.997186,-0.626633,6.398917,6.620104,-3.476804,4.740404,-3.432482,3.103240,-3.955244,4.589404,-9.881161,-8.835883,-9.984064,-5.089173,7.779067,-5.649497,-4.002976,-6.451288,5.816597,-4.601708,-8.513608,-8.426871,-3.327187,-3.492031,-0.841231,-3.944135,4.514967,-6.016456,-6.563137,-1.377696,6.681755,1.121664,2.097716,9.515308,-8.342132,4.525123,-8.121290,5.904704,7.706870,0.950423,-9.304136,-9.108586,-6.236183,0.174270,7.392976,9.737735,-3.427117,-4.223720,-6.296956,-6.477845,-4.435560,-1.388305,-7.982784,8.642629,9.518713,8.707257,1.396783,4.726432,8.568360,-4.171081,-6.698044,0.450786,-0.846213,4.357960,-2.996911,0.515528,0.236242,0.623175,-1.035999,7.394475,6.757980,7.301501,-9.535924,2.373383,2.614726,-7.151697,4.622097,-5.351370,-7.049511,-8.156628,5.175368,0.028286,5.454568,-6.943209,3.237240,5.808919,1.191683,2.626214,-7.270958,6.632919,-6.563334,0.310345,1.228661,-4.517796,6.386383,-6.907161,-5.476713,7.265561,-2.124285,6.609048,7.690433,8.235733,9.969646,-7.905272,0.340376,6.412464,-1.250124,0.942341,-9.261810,6.904698,-6.740297,4.187085,9.669177,4.842572,-2.225259,3.342408,3.803896,-1.704183,-6.014204,-3.372811,-5.003789,6.926279,7.917763,1.192124,-1.186356,3.747386,-0.329855,-3.105690,-0.882715,-5.696514,-6.628218,-1.946451,-9.270420,0.391530,-6.812004,-1.950596,4.179660,4.461229,-6.078430,2.922935,3.560185,0.751961,9.491409,2.132874,8.660669,-9.221359,3.729359,-9.337483,-2.022432,-1.839799,5.777251,2.858993,4.209937,7.140681,0.596841,-6.155690,-5.062177,9.260870,9.875961,0.624529,-8.243551,0.605536,-0.276115,2.207900,1.951623,4.640162,-1.231260,1.864899,6.649323,0.452214,7.219264,6.118484,0.995094,2.447899,7.370063,-1.467715,1.804071,-5.204057,0.382099,-2.531439,8.531616,5.168194,-5.242543,1.880593,-3.630667,6.777961,7.511192,8.123643,1.920246,0.502340,3.799456,-3.474686,9.948258,-5.053268,-0.943056,5.025440,3.628005,0.227316,-7.448089,2.712595,8.575239,-5.406506,-9.637043,8.808565,7.437512,-0.148059,-3.360518,9.445725,8.703351,-1.158744,-0.113719,-5.875151,5.299656,3.926647,-4.489721,-5.828616,5.282526,-4.587661,-2.594287,0.267089,2.713820,-6.526703,-1.441554,0.585937,3.436337,9.933931,-9.882599,9.197292,4.014729,9.094196,-9.712161,5.164733,-5.322171,6.018641,-6.952092,-3.896724,-1.522831,2.384219,-1.751101,2.762329,8.765805,5.944133,-6.007320,0.772992,-6.754566,7.713725,-9.384740,-1.834670,7.096551,5.078044,4.183598,9.029930,-1.363340,-1.022714,6.126424,-0.604794,6.852544,-6.161116,7.993158,9.846651,-9.059587,-5.673633,-0.775613,-8.554278,-5.567368,8.529098,5.929545,9.457738,6.850756,8.971390,1.152980,5.135244,2.300931,-2.426976,0.307488,-3.868475,0.266903,-7.125138,-2.042374,5.196483,-1.601721,-9.528368,7.520312,0.198378,9.672209,1.619488,2.304138,8.474913,0.175970,7.791966,-4.988839,-7.270541,-9.634789,4.555357,9.069854,4.137699,7.271652,-5.928940,2.448535,3.680972,-4.901519,-3.942154,-8.111119,-0.799413,7.915395,-6.053205,-1.792068,4.192880,-0.395125,0.324684,4.894969,1.133301,-5.770786,8.317033,-8.305267,-4.858317,-3.612230,-8.012126,7.369232,-9.931819,-8.807374,-7.633106,0.584912,3.296077,-5.041262,-7.841284,5.681564,-3.416873,4.938200,0.932879,-4.101336,-8.836242,-1.877844,2.411866,0.498784,9.903319,3.820391,-1.689062,7.789782,-8.228822,-1.423035,-4.009780,-9.620046,7.550481,-7.260309,9.313133,2.965782,9.987528,-0.079809,1.818232,-7.858784,7.894383,-4.050145,5.686238,1.251742,1.743697,-4.657885,1.752734,-7.445776,-1.379814,-9.756983,1.133719,1.663078,0.256428,-5.041218,8.659099,9.890290,-3.669539,6.155461,-4.368902,7.412258,-4.898271,6.093697,-3.144551,7.794690,-3.272758,5.004691,4.672980,1.680203,-0.158966,4.322480,-4.798254,9.172797,-1.800270,-8.930227,2.690370,-2.118273,1.401907,-5.232678,6.298866,-9.624979,5.933196,3.737866,-0.685102,0.698527,-6.294866,2.314347,-5.601824,5.138154,7.150499,6.024856,2.210833,-1.904729,2.605090,4.384727,-3.979467,-7.456419,8.434258,-4.180328,-3.713886,-3.439070,-9.476565,-2.032898,-5.222048,6.026134,4.587538,4.558006,-1.750868,-4.106373,-8.472197,-8.916864,5.514368,-1.930783,9.363359,8.074400,-1.406882,-1.675363,4.550253,7.545618,5.912207,3.486081,2.130754,1.291281,-6.550293,9.984066,0.241163,-0.773918,5.092804,7.103200,0.702206,-8.917065,3.573177,8.255758,4.127454,-1.405555,4.219652,-7.839951,-8.860319,6.132464,3.221178,2.841744,-9.810247,2.102535,-4.973701,-7.669232,1.318644,-4.608890,-6.464064,6.499969,-2.053032,-7.281044,9.568396,1.727681,-0.899137,4.696541,3.770828,3.305619,-4.487463,2.297149,9.811073,-1.900053,0.513330,4.079209,-2.659593,3.040890,9.094138,6.800394,-3.596177,-4.936954,2.002718,-5.647070,6.816066,-0.082999,4.213240,-7.931559,-5.679433,2.899980,9.472851,3.349161,-9.476204,3.479785,-0.921094,-8.425685,1.704223,6.303798,-8.562924,3.427019,3.399283,9.979295,-2.221121,-9.061607,9.634628,-3.406949,-0.403899,-7.883121,-5.559757,-7.656015,-0.326486,-1.440115,-7.805496,-1.197809,6.467610,-5.650022,-8.553472,4.058080,6.989417,4.758784,-8.309518,-1.213704,8.771217,4.088195,-4.905255,-0.649965,-5.680632,-6.074820,-0.454585,-3.011439,-4.231268,5.730646,-0.892928,7.670833,-3.897618,-7.648126,-7.134723,9.450538,-4.367663,-4.636938,6.375796,6.339503,4.463830,-5.207693,6.496951,4.848420,5.151148,-3.821630,-0.222127,0.784788,-2.727587,9.480849,-0.699731,-2.879731,7.303595,3.372392,9.217330,-7.030163,-6.853196,-0.665575,7.712867,-9.894622,-7.119913,6.772715,-5.392052,5.777303,-6.424715,-5.555442,-3.680793,9.233338,6.612543,-3.530618,-5.776148,4.588576,7.560711,-3.782894,2.667081,9.186599,6.496064,-9.039199,2.402766,-6.668395,-0.782180,6.639780,2.275289,-8.024193,4.216125,4.118297,-3.489857,3.839488,-8.798152,-6.972650,-1.041467,-4.868956,-8.377285,3.847279,-8.915305,-8.884639,-4.933328,1.001060,-0.572114,-9.527732,-3.051856,8.057357,-1.549467,-8.319730,-4.482383,4.322577,-4.414212,-3.581040,-4.107283,6.161361,4.388259,-5.411030,9.127027,2.154957,4.810991,6.992915,8.731463,-4.331290,2.443549,9.310876,-5.453474,-7.041998,-0.787870,6.926348,3.818593,1.572777,-1.424413,-7.435504,-2.210804,-3.220048,-4.694254,4.025291,-6.631953,1.841283,1.066820,-5.394454,2.391639,-5.373732,5.445764,3.780799,-9.363189,-6.346762,-2.984595,-8.632807,-2.793424,-8.917537,1.231255,8.285206,-1.042192,7.161078,5.431447,8.266465,3.555414,-7.748532,7.674714,6.551256,-4.528769,4.195319,-7.449891,7.983916,-1.639184,3.534641,-4.058030,2.325105,-9.258375,-1.480540,-6.563147,-1.172097,1.044201,4.553641,-9.336970,7.088969,-9.480211,9.363664,-8.813222,4.453544,9.034707,-4.407918,5.808473,-0.545198,9.942410,4.907532,-2.466449,5.365280,-3.870300,-8.466824,4.546452,-5.798262,-0.778881,-7.066624,-9.125543,3.372943,2.996840,8.000303,-6.575446,-8.372359,-6.457183,4.052357,0.526324,8.063415,7.709688,2.722394,2.017742,-2.434631,9.971233,-7.377350,5.473925,7.282483,-0.547410,4.019930,-3.175434,-1.564314,-4.128091,4.781239,-4.304012,0.728314,9.614244,-7.047455,-6.521038,-0.704511,5.858885,-7.852794,9.892762,2.634687,-7.707864,-5.859438,-9.412245,-4.847309,-6.567123,5.805271,-6.107394,9.266845,4.254505,-2.722723,-0.956786,7.378947,7.904652,-2.684413,-7.494969,-2.836459,6.724855,9.506111,9.922187,-0.654040,-2.548815,-4.751727,-9.988871,-6.303180,7.332339,-2.522763,6.691816,-7.239111,4.817108,5.364662,-3.973913,-6.498959,-7.405811,-6.185642,5.086887,-1.258042,-2.734656,-5.936704,-3.428010,-4.169098,0.929421,4.328051,-5.506192,-6.871903,0.853602,5.117523,2.815834,3.136771,-6.890977,-3.956176,-2.350167,7.304361,9.196060,5.655889,-2.922431,-4.579983,-7.274942,-3.660253,6.771155,-1.731511,7.788602,-8.789854,-3.093747,-5.238169,1.153882,-8.092368,1.244516,-0.045559,-2.894352,-3.402502,8.265842,-6.040143,2.818120,3.286460,6.924993,0.292319,7.662359,-7.153329,5.669508,-5.356104,2.746927,-1.933502,-0.500597,8.556399,-4.202093,9.135706,-8.998410,-9.263293,4.424175,-9.987304,1.766364,9.920816,-8.090645,-1.135039,-0.602189,-3.417735,-6.466389,3.427424,-5.223474,3.213913,-1.208560,-9.906735,-0.965635,-3.353022,-3.375147,2.103530,-6.851780,8.576551,-2.457351,-5.386717,-9.593520,-7.537798,3.987023,-3.918266,-5.297140,3.259528,-9.499062,-5.938838,-5.901545,-8.227936,2.136865,-8.106268,-2.720975,-0.636789,-4.714569,-3.582020,-7.787774,5.725961,-7.169383,1.340247,8.950407,7.310427,-5.455082,-4.142372,3.709555,-0.002436,-6.911676,-6.368345,-0.773219,0.681011,-9.018641,0.105506,-2.868472,-6.067623,-9.333232,-0.399557,-9.019645,-1.609080,1.287140,5.751154,8.059724,9.350983,7.543125,7.306940,9.903353,-4.101254,-2.298640,-8.815053,-9.207259,2.221248,-8.896071,-5.444289,3.049882,1.304819,8.556681,6.371163,-7.249037,2.347822,5.208046,7.939918,5.488633,-1.862101,-8.486630,9.660186,0.948446,3.542881,-7.915350,7.848099,-8.771754,-3.645032,5.830928,1.084672,-6.028345,5.885564,5.571703,-2.066904,-9.292542,-6.484215,1.813581,9.166746,-1.833662,-2.067932,-5.277631,-2.927482,4.723555,3.600151,4.939486,-2.057363,7.410879,5.488298,8.276267,0.397241,-5.750619,-7.973641,3.289148,-4.510844,-3.446675,-9.277679,-6.172549,-1.075735,5.951247,4.584712,-5.553834,9.129405,9.941626,-8.252375,-4.594768,3.375521,8.003568,2.644607,2.196119,-0.357544,-3.868751,8.180388,9.565976,-0.120586,3.318172,1.275597,-8.519145,1.369643,5.382009,-6.027077,4.201687,-2.474196,2.986725,-3.259359,-6.650252,-8.145492,1.310076,6.615343,2.726052,-2.736197,8.556264,-5.927623,-1.426218,-9.611974,2.256631,9.165273,-7.175720,5.646255,5.327064,-6.249802,-3.038278,8.721154,-5.741056,5.345220,-3.646024,-5.962694,8.991819,3.975589,-7.057624,-1.888142,-5.351397,8.261446,7.138088,-2.848767,-4.691623,-4.316554,-8.965906,-5.903575,5.660805,-3.486526,1.829701,9.919248,-8.517584,-5.462017,-4.904877,-1.997407,4.646730,2.617395,8.103197,1.266032,7.491594,-0.975232,6.553677,-3.049829,-7.865018,7.966388,-1.179343,0.751860,7.949160,0.854385,-4.239552,5.439314,5.351585,-1.350329,-5.320135,-9.522555,-9.797312,8.390823,-9.827924,-0.837401,1.885119,-1.255852,-6.704955,-1.926048,-9.097837,-2.307839,1.848615,-4.200523,-2.114128,5.651309,-9.647322,-4.289063,2.153092,4.462142,-9.281429,-3.978901,9.887202,2.592191,-2.994462,3.368682,9.497093,8.073498,3.955745,-4.639731,3.563524,4.489309,0.857584,-8.238012,1.593408,-3.798979,9.329327,5.329546,-7.142450,-2.346585,-5.171941,3.433886,2.244333,5.520687,-0.734157,2.595704,9.619252,8.143349,-7.009830,2.645151,1.402784,5.190083,0.731171,7.288294,7.097911,-5.562407,-7.789978,-4.379907,8.885213,-7.953001,4.808748,6.863315,-2.028796,8.889913,-5.141887,3.286946,1.108110,-0.957038,2.538757,-4.667292,9.571404,6.541336,-4.132575,-5.310286,8.349663,4.925272,-3.907703,6.190846,7.433602,6.175876,-4.842906,-4.583207,-4.634597,-7.754499,-2.896806,-9.348930,8.828647,3.092879,4.345171,7.906843,0.463610,1.801616,1.014466,-7.699863,-9.810486,-6.209884,-4.820085,-1.851530,0.199780,5.766343,6.873767,-0.311224,1.822695,-9.453817,3.796745,6.737068,-7.221087,-3.108943,1.633047,-7.932525,-0.185331,-7.939046,4.474749,8.757770,0.610691,0.022405,6.218112,-0.592134,5.031888,2.584606,-2.969922,7.751076,-0.381769,2.037461,7.230816,8.548892,-2.400889,-6.551165,-4.640622,2.710957,-8.719610,-2.758558,-9.281639,-8.056932,9.483907,-5.809176,-2.006368,-3.275067,3.123090,0.205145,6.752320,-9.369192,-5.379079,-3.735946,6.349998,0.704802,-7.863242,9.313603,-5.317851,-0.405133,4.409540,1.218028,1.420299,-2.823295,7.840936,7.614952,-8.369782,9.070074,-2.584122,1.024143,7.245114,-6.656061,-6.311019,-5.979091,4.934584,-5.083646,1.952727,5.352216,3.971045,5.749592,6.967760,-0.647575,-1.141393,-4.394963,7.540230,-5.699268,-7.389162,-7.425209,-4.303848,9.593078,7.353811,1.812998,-6.663797,7.787952,-0.435653,-9.196629,8.441774,-3.443457,-6.475844,9.608242,-8.345215,-8.499965,-5.916416,-3.796967,8.312337,-7.775979,0.764577,2.418355,-9.623508,-2.040835,8.489120,-6.043599,6.816398,5.547002,-0.398985,0.973150,-3.645695,5.913352,-3.090371,-8.492570,-0.087799,-4.654796,-2.554530,2.389853,8.271255,9.871768,-7.533117,9.627299,-6.775787,-1.347539,1.652265,-7.827084,9.065556,-0.486640,7.396826,-3.267030,-8.002316,9.752583,-6.125826,2.865794,-4.582455,5.545342,1.359448,-1.047897,5.686546,-1.031873,-2.792763,-5.543577,-8.844786,4.514030,8.338277,1.835099,6.803403,-8.841956,9.754348,0.317773,0.543670,3.490552,9.726813,-7.611290,-3.536376,-2.054032,6.603617,-5.434145,8.355322,4.615627,1.240279,-1.902679,-8.621920,5.784724,4.120280,6.839905,9.060051,6.739360,6.010039,3.695850], dtype = "float32")#candidate|3172|(1430,)|const|float32
bop_3173 = relay.multiply(call_3163.astype('float32'), relay.reshape(const_3172.astype('float32'), relay.shape_of(call_3163))) # shape=(1430,)
bop_3176 = relay.multiply(call_3164.astype('float32'), relay.reshape(const_3172.astype('float32'), relay.shape_of(call_3164))) # shape=(1430,)
output = relay.Tuple([call_3170,bop_3173,])
output2 = relay.Tuple([call_3171,bop_3176,])
func_3177 = relay.Function([], output)
mod['func_3177'] = func_3177
mod = relay.transform.InferType()(mod)
output = func_3177()
func_3178 = relay.Function([], output)
mutated_mod['func_3178'] = func_3178
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3210 = relay.var("var_3210", dtype = "float32", shape = (10, 2, 8))#candidate|3210|(10, 2, 8)|var|float32
uop_3211 = relay.atanh(var_3210.astype('float32')) # shape=(10, 2, 8)
output = uop_3211
output2 = uop_3211
func_3215 = relay.Function([var_3210,], output)
mod['func_3215'] = func_3215
mod = relay.transform.InferType()(mod)
var_3216 = relay.var("var_3216", dtype = "float32", shape = (10, 2, 8))#candidate|3216|(10, 2, 8)|var|float32
output = func_3215(var_3216)
func_3217 = relay.Function([var_3216], output)
mutated_mod['func_3217'] = func_3217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_3219 = func_2086_call()
call_3220 = func_2086_call()
func_111_call = mod.get_global_var('func_111')
func_114_call = mutated_mod.get_global_var('func_114')
var_3222 = relay.var("var_3222", dtype = "float32", shape = (715, 2))#candidate|3222|(715, 2)|var|float32
call_3221 = func_111_call(relay.reshape(var_3222.astype('float32'), [11, 13, 10]), relay.reshape(var_3222.astype('float32'), [11, 13, 10]), )
call_3223 = func_111_call(relay.reshape(var_3222.astype('float32'), [11, 13, 10]), relay.reshape(var_3222.astype('float32'), [11, 13, 10]), )
func_1990_call = mod.get_global_var('func_1990')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_3227 = relay.TupleGetItem(func_1990_call(), 0)
call_3228 = relay.TupleGetItem(func_1991_call(), 0)
func_1500_call = mod.get_global_var('func_1500')
func_1503_call = mutated_mod.get_global_var('func_1503')
const_3234 = relay.const([-8.389239,-8.108686,8.199248,2.235973,-2.770279,-7.021740,0.252276,-8.877415,5.583316,-1.000974,9.581087,-0.507807,5.173845,-4.351438,-7.727954,9.628797,-3.165931,4.374940,6.591974,-6.315367,8.180827,-6.380513,-8.355230,7.881412,-0.699643,-7.440292,-9.614156,6.502556,-9.093520,-4.674375,8.035444,-8.678615,3.108229,2.590760,-3.047889,-0.812951,-6.360043,-0.616991,6.532844,-8.622672,-9.089627,4.850232,-5.523181,-7.140234,5.344008,8.934719,9.629259,-5.285213,-7.613714,7.152695,0.554794,-0.647807,-2.389632,1.803259,-3.461851,-2.317044,-7.590560,6.353637,-5.271926,-4.672798,-5.733863,-1.523203,1.879442,-3.041705,1.050567,-2.324936,5.661629,-9.841131,-7.868078,-0.329708,-0.128604,8.316989,-8.524164,5.348420,-3.327355,-2.200195,0.674069,-4.170157,9.227843,-2.919094,9.742886,-5.473485,0.138170,-1.817900,-8.754335,2.381794,1.721904,0.855570,9.872328,-0.009765,-8.744347,9.751889,-4.797558,-8.012307,-0.717873,-6.245531,-9.114904,8.455494,4.793650,4.934033,-9.837218,-2.903244,6.075638,3.647026,-2.975691,-7.257566,3.908656,4.642208,-7.898886,6.370344,-5.394466,-5.407906,-2.569350,7.148806,8.537786,0.181420,7.199812,-2.645227,-9.119175,7.432685,0.253595,7.991423,7.954804,-2.367204,8.041841,7.296260,2.966115,-8.224264,0.979326,-9.002929,-8.371582,-2.692286,3.553527,-1.251370,-7.846459,7.981773,5.551735,-2.411135,4.490518,-5.428809,6.315858,-8.796430,9.394680,-2.167414,-4.623838,-9.661757,4.828370,-3.610837,6.951793,-6.217119,4.176204,6.924225,-4.623599,6.322671,3.202294,-3.858501,5.475105,2.370539,7.209283,9.682835,-5.478356,-9.455901,-2.836819,2.246270,1.249189,-5.183404,5.275763,-7.667202,8.771317,3.139385,9.774979,7.024001,-5.081160,-1.492162,3.187858,-4.150145,4.326663,6.149684,5.193942,1.173060,-4.133454,3.410308,7.528080,3.146083,-5.820641,2.476176,5.738462,-6.875007,-2.397402,9.052923,5.902928,2.858402,7.820543,-8.225825,1.493196,1.730990,3.995303,3.430759,-0.853413,-2.450879,4.341664,8.774486,-7.658263,8.863805,-2.002128,-0.027864,-9.725033,-1.665695,-1.857725,-2.768089,-4.453643,4.920383,7.000642,-8.659134,-0.251634,-1.560032,9.122282,-3.216627,9.433589,-8.079046,-1.380370,9.540613,-1.382009,-1.076428,8.104715,4.229885,5.260235,6.522113,5.622911,-0.776481,-6.473453,-1.786783,-4.917033,-2.677319,-2.714573,1.161294,0.584292,6.418325,-8.123134,7.409457,-8.064497,5.595963,4.011124,-4.133843,0.099764,-0.696232,5.627974,2.816704,2.134300,-9.586380,-6.844689,4.064473,-3.190887,3.085634,-2.957883,-7.478980,7.412139,-8.042488,7.587630,-8.939708,-9.602369,-9.636584,4.736728,7.221623,7.790394,-9.677347,-6.323631,-1.205438,-1.106611,3.767840], dtype = "float32")#candidate|3234|(270,)|const|float32
call_3233 = relay.TupleGetItem(func_1500_call(relay.reshape(const_3234.astype('float32'), [3, 6, 15]), relay.reshape(call_3219.astype('int8'), [768,]), ), 4)
call_3235 = relay.TupleGetItem(func_1503_call(relay.reshape(const_3234.astype('float32'), [3, 6, 15]), relay.reshape(call_3219.astype('int8'), [768,]), ), 4)
uop_3254 = relay.sigmoid(var_3222.astype('float64')) # shape=(715, 2)
func_2693_call = mod.get_global_var('func_2693')
func_2694_call = mutated_mod.get_global_var('func_2694')
call_3267 = func_2693_call()
call_3268 = func_2693_call()
bop_3284 = relay.less(uop_3254.astype('bool'), relay.reshape(var_3222.astype('bool'), relay.shape_of(uop_3254))) # shape=(715, 2)
output = relay.Tuple([call_3219,call_3221,call_3227,call_3233,const_3234,call_3267,bop_3284,])
output2 = relay.Tuple([call_3220,call_3223,call_3228,call_3235,const_3234,call_3268,bop_3284,])
func_3290 = relay.Function([var_3222,], output)
mod['func_3290'] = func_3290
mod = relay.transform.InferType()(mod)
mutated_mod['func_3290'] = func_3290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3291 = relay.var("var_3291", dtype = "float32", shape = (715, 2))#candidate|3291|(715, 2)|var|float32
func_3290_call = mutated_mod.get_global_var('func_3290')
call_3292 = func_3290_call(var_3291)
output = call_3292
func_3293 = relay.Function([var_3291], output)
mutated_mod['func_3293'] = func_3293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2876_call = mod.get_global_var('func_2876')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_3330 = relay.TupleGetItem(func_2876_call(), 0)
call_3331 = relay.TupleGetItem(func_2878_call(), 0)
output = relay.Tuple([call_3330,])
output2 = relay.Tuple([call_3331,])
func_3334 = relay.Function([], output)
mod['func_3334'] = func_3334
mod = relay.transform.InferType()(mod)
output = func_3334()
func_3335 = relay.Function([], output)
mutated_mod['func_3335'] = func_3335
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1184_call = mutated_mod.get_global_var('func_1184')
call_3381 = relay.TupleGetItem(func_1183_call(), 0)
call_3382 = relay.TupleGetItem(func_1184_call(), 0)
output = relay.Tuple([call_3381,])
output2 = relay.Tuple([call_3382,])
func_3392 = relay.Function([], output)
mod['func_3392'] = func_3392
mod = relay.transform.InferType()(mod)
mutated_mod['func_3392'] = func_3392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3392_call = mutated_mod.get_global_var('func_3392')
call_3393 = func_3392_call()
output = call_3393
func_3394 = relay.Function([], output)
mutated_mod['func_3394'] = func_3394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_3418 = func_772_call()
call_3419 = func_772_call()
output = relay.Tuple([call_3418,])
output2 = relay.Tuple([call_3419,])
func_3421 = relay.Function([], output)
mod['func_3421'] = func_3421
mod = relay.transform.InferType()(mod)
output = func_3421()
func_3422 = relay.Function([], output)
mutated_mod['func_3422'] = func_3422
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3425 = relay.var("var_3425", dtype = "float32", shape = (9, 9, 2))#candidate|3425|(9, 9, 2)|var|float32
var_3426 = relay.var("var_3426", dtype = "float32", shape = (9, 9, 2))#candidate|3426|(9, 9, 2)|var|float32
bop_3427 = relay.mod(var_3425.astype('float32'), relay.reshape(var_3426.astype('float32'), relay.shape_of(var_3425))) # shape=(9, 9, 2)
uop_3433 = relay.acosh(bop_3427.astype('float64')) # shape=(9, 9, 2)
const_3440 = relay.const([[[9.697068,0.670563],[-9.976926,1.547526],[-2.460561,6.115537],[-3.169264,9.781518],[7.876209,-0.744945],[-4.415470,5.143292],[-8.710279,-2.177607],[9.596874,-4.872037],[-3.008206,-4.607699]],[[2.748869,-7.872590],[-3.126837,-9.319285],[-5.348394,-9.180426],[3.655019,-3.132496],[-1.050241,-2.157008],[9.355462,-8.985714],[-3.795812,1.087468],[-0.716853,8.594108],[7.750207,0.214070]],[[0.441834,-7.980033],[4.222159,-7.837184],[-5.407835,-2.908500],[-7.117526,1.073172],[6.582104,-0.525676],[-8.792849,-4.990099],[0.401717,-9.445590],[4.056821,-3.515193],[3.436325,1.469167]],[[-9.775777,-2.957565],[-2.771978,6.904465],[5.016761,-6.314840],[-1.202594,-4.151531],[1.768356,5.399807],[7.852466,9.099117],[5.646078,5.559549],[5.552363,-4.164159],[-2.193434,-1.513706]],[[6.165425,-0.024105],[-9.441002,-9.718541],[7.900387,3.265513],[8.820831,-4.322964],[-8.820733,-4.563909],[6.722934,-6.486303],[-3.318936,-9.002190],[6.444572,3.752365],[-8.384991,5.855932]],[[9.796689,3.337271],[5.471834,4.666470],[6.558892,4.588510],[9.062176,-3.272461],[3.586388,1.208376],[6.244677,3.876654],[-7.289795,8.590689],[-8.365387,0.010795],[-4.135370,-2.038653]],[[1.808581,3.533004],[8.152955,-5.278205],[-5.130846,-3.033244],[-8.968127,8.385590],[3.745695,-2.674273],[5.458885,4.289468],[4.041870,8.010985],[8.500648,9.892139],[0.780025,-8.175063]],[[4.400806,-9.759325],[3.912119,2.386173],[-7.210600,6.137119],[8.729477,-9.796769],[3.650080,-3.580738],[-2.506522,3.898090],[-9.145764,5.504584],[1.530810,-6.588703],[-4.209766,-9.077508]],[[0.329449,9.070757],[-6.256119,-9.308993],[3.195011,-4.782768],[-6.369154,8.121196],[3.952065,-6.237135],[7.038715,2.015929],[9.427481,6.405072],[-4.378788,6.449464],[2.559964,-1.990031]]], dtype = "float64")#candidate|3440|(9, 9, 2)|const|float64
bop_3441 = relay.power(uop_3433.astype('float32'), relay.reshape(const_3440.astype('float32'), relay.shape_of(uop_3433))) # shape=(9, 9, 2)
output = bop_3441
output2 = bop_3441
func_3444 = relay.Function([var_3425,var_3426,], output)
mod['func_3444'] = func_3444
mod = relay.transform.InferType()(mod)
var_3445 = relay.var("var_3445", dtype = "float32", shape = (9, 9, 2))#candidate|3445|(9, 9, 2)|var|float32
var_3446 = relay.var("var_3446", dtype = "float32", shape = (9, 9, 2))#candidate|3446|(9, 9, 2)|var|float32
output = func_3444(var_3445,var_3446,)
func_3447 = relay.Function([var_3445,var_3446,], output)
mutated_mod['func_3447'] = func_3447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3334_call = mod.get_global_var('func_3334')
func_3335_call = mutated_mod.get_global_var('func_3335')
call_3452 = relay.TupleGetItem(func_3334_call(), 0)
call_3453 = relay.TupleGetItem(func_3335_call(), 0)
output = relay.Tuple([call_3452,])
output2 = relay.Tuple([call_3453,])
func_3456 = relay.Function([], output)
mod['func_3456'] = func_3456
mod = relay.transform.InferType()(mod)
mutated_mod['func_3456'] = func_3456
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3456_call = mutated_mod.get_global_var('func_3456')
call_3457 = func_3456_call()
output = call_3457
func_3458 = relay.Function([], output)
mutated_mod['func_3458'] = func_3458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3459 = relay.var("var_3459", dtype = "float32", shape = (4, 2, 5))#candidate|3459|(4, 2, 5)|var|float32
uop_3460 = relay.asinh(var_3459.astype('float32')) # shape=(4, 2, 5)
func_2596_call = mod.get_global_var('func_2596')
func_2599_call = mutated_mod.get_global_var('func_2599')
var_3463 = relay.var("var_3463", dtype = "float32", shape = (315,))#candidate|3463|(315,)|var|float32
var_3464 = relay.var("var_3464", dtype = "float32", shape = (715, 2))#candidate|3464|(715, 2)|var|float32
call_3462 = relay.TupleGetItem(func_2596_call(relay.reshape(var_3463.astype('float32'), [315,]), relay.reshape(var_3464.astype('float32'), [1430,]), ), 3)
call_3465 = relay.TupleGetItem(func_2599_call(relay.reshape(var_3463.astype('float32'), [315,]), relay.reshape(var_3464.astype('float32'), [1430,]), ), 3)
output = relay.Tuple([uop_3460,call_3462,var_3463,var_3464,])
output2 = relay.Tuple([uop_3460,call_3465,var_3463,var_3464,])
func_3467 = relay.Function([var_3459,var_3463,var_3464,], output)
mod['func_3467'] = func_3467
mod = relay.transform.InferType()(mod)
var_3468 = relay.var("var_3468", dtype = "float32", shape = (4, 2, 5))#candidate|3468|(4, 2, 5)|var|float32
var_3469 = relay.var("var_3469", dtype = "float32", shape = (315,))#candidate|3469|(315,)|var|float32
var_3470 = relay.var("var_3470", dtype = "float32", shape = (715, 2))#candidate|3470|(715, 2)|var|float32
output = func_3467(var_3468,var_3469,var_3470,)
func_3471 = relay.Function([var_3468,var_3469,var_3470,], output)
mutated_mod['func_3471'] = func_3471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2237_call = mod.get_global_var('func_2237')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_3481 = relay.TupleGetItem(func_2237_call(), 0)
call_3482 = relay.TupleGetItem(func_2238_call(), 0)
output = relay.Tuple([call_3481,])
output2 = relay.Tuple([call_3482,])
func_3488 = relay.Function([], output)
mod['func_3488'] = func_3488
mod = relay.transform.InferType()(mod)
mutated_mod['func_3488'] = func_3488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3488_call = mutated_mod.get_global_var('func_3488')
call_3489 = func_3488_call()
output = call_3489
func_3490 = relay.Function([], output)
mutated_mod['func_3490'] = func_3490
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3494 = relay.var("var_3494", dtype = "int8", shape = (2, 16, 7))#candidate|3494|(2, 16, 7)|var|int8
const_3495 = relay.const([[[6,-10,9,3,8,8,-10],[1,9,-7,-4,3,-2,-6],[-6,4,2,4,-5,1,2],[9,10,-4,-5,8,-3,5],[-8,8,10,8,5,-3,-1],[-4,-4,5,-3,5,-9,9],[3,-9,-3,-5,-8,4,4],[-6,4,8,-2,-3,1,3],[10,3,-6,-2,-9,1,-9],[3,-4,10,8,5,-10,-5],[8,-10,1,-10,6,-5,1],[6,-3,-5,9,-5,3,7],[10,-4,-3,7,-8,3,10],[-10,-6,-1,7,-5,1,-3],[10,6,5,8,-4,4,-3],[5,4,2,-4,-10,9,9]],[[-5,-4,4,7,-2,7,-2],[-8,-7,6,-10,5,3,7],[1,4,8,-1,8,2,-2],[3,-10,-7,-4,2,3,-10],[-3,10,2,-9,10,3,-7],[7,3,-3,3,-4,5,2],[5,6,-10,-1,-2,5,10],[1,2,-5,10,-2,8,-1],[-3,-2,-7,-6,5,-1,8],[1,5,-5,10,4,10,2],[-1,2,5,10,-2,-1,6],[6,-10,-1,-6,2,10,5],[-1,9,-9,-5,3,-6,-2],[4,1,-1,4,5,-2,-8],[-2,-2,2,-6,10,-5,7],[-10,10,-8,-1,-1,-4,-8]]], dtype = "int8")#candidate|3495|(2, 16, 7)|const|int8
bop_3496 = relay.greater_equal(var_3494.astype('bool'), relay.reshape(const_3495.astype('bool'), relay.shape_of(var_3494))) # shape=(2, 16, 7)
bop_3499 = relay.bitwise_or(const_3495.astype('int8'), relay.reshape(bop_3496.astype('int8'), relay.shape_of(const_3495))) # shape=(2, 16, 7)
func_2859_call = mod.get_global_var('func_2859')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_3502 = relay.TupleGetItem(func_2859_call(), 0)
call_3503 = relay.TupleGetItem(func_2861_call(), 0)
func_1236_call = mod.get_global_var('func_1236')
func_1238_call = mutated_mod.get_global_var('func_1238')
const_3505 = relay.const([[4,-3,4,8,7,-6,3,7,1,3,-6,10,1,-10,6,3,1,-7,-1,-8,-3,3,8,7,-5,9,-5,5,1,-6,-1,-6,-5,9,2,-6,4,10,-3,-9,5,-2,-9,6,-2,6,1,8,-7,-6,4,1,-5,-10,-7,-7,-7,3,-3,5,-1,-9,-2,-2,5,5,4,-7,-8,5,6,-6,-2,10,-7,-1,7,-5,-8,-8,-7,-4,1,-9,-8,2,8,-8,8,6,-6,-8,-8,10,1,10,-10,-8,6,10,2,10,4,8,10,9,-10,7,-9,-7,4,8,-2,7,-4,3,-2,5,3,-10,-7,6,-6,-7,-9,-7,2,1,2,3],[6,3,9,6,1,-4,4,8,-3,7,9,-9,9,-6,-7,-10,-3,2,1,3,-1,10,6,-7,3,3,8,-7,-1,2,10,-10,5,6,-10,-7,5,-8,7,8,-9,-4,-4,-6,1,-4,9,7,-7,-9,-1,10,6,-5,-3,-3,-7,-1,-7,5,-6,3,4,-1,-3,8,1,-10,-3,-9,7,1,8,-4,-1,-7,9,-4,9,1,-10,-6,6,7,8,-8,-8,10,10,-3,4,-8,9,5,1,-10,5,-1,1,-10,4,5,-6,-7,10,7,-1,6,-9,8,6,-9,3,4,8,4,-2,3,5,-4,2,-8,6,-3,-4,3,10,-3,-3,-8],[10,2,-10,-2,5,-9,-7,1,10,6,-6,3,2,8,2,-6,-7,-6,3,1,6,-6,6,6,-3,9,-3,5,8,-1,-1,-3,-7,-5,-9,-8,-6,-9,2,-8,8,-4,8,6,-5,6,-6,-6,10,-3,10,5,6,8,-7,-4,-2,6,8,-7,1,-10,-2,1,-2,10,-6,9,9,3,-4,3,-3,-7,10,-5,5,9,-4,9,5,-7,4,-4,-3,-3,3,-4,-4,7,-7,7,10,1,-6,-9,10,1,-3,-9,1,-5,7,-1,2,-6,-10,1,1,-3,2,8,-1,-6,-4,-5,6,-9,1,3,-8,4,-4,-10,-9,-3,-9,1,-10,6],[-1,-8,1,7,9,-5,8,7,-6,-10,3,4,-4,2,1,5,1,8,-3,3,-4,9,10,8,6,-9,-1,1,-7,9,-2,-1,-10,-4,3,-4,-8,8,10,3,4,-3,4,-10,8,2,-4,3,-9,6,4,8,-3,-9,-4,7,4,-3,-5,-3,2,4,-8,1,-6,1,7,4,-6,2,-7,10,-10,-2,-5,9,10,-5,-2,6,-1,10,4,9,6,2,10,-5,-4,-7,-1,8,4,10,10,-4,10,-1,7,-8,1,6,-3,-4,-9,-8,9,-4,1,-1,-9,-2,-10,-7,2,1,7,-5,-10,9,-1,-2,5,5,9,7,-10,8,3,-6],[1,8,-7,-8,3,-6,6,-5,5,9,4,1,6,-4,5,3,9,3,6,3,-1,-4,-9,8,-8,8,-6,8,10,-10,-1,-8,4,-6,-5,2,8,-10,4,10,8,6,9,-5,-3,2,8,6,-3,4,9,-1,1,-3,1,9,-1,3,-6,-7,-3,-6,-10,5,-5,1,-5,3,6,-3,9,-8,4,10,-10,-2,5,6,-10,-1,9,1,8,2,-9,-3,-6,9,-2,1,-6,-7,-10,-8,-1,5,3,-6,1,-5,4,7,8,-1,4,4,-4,1,-1,4,10,-4,9,-5,7,-9,7,10,-3,-8,2,7,1,1,6,6,7,10,9,6],[-5,-8,2,-10,10,4,-1,9,10,6,7,4,1,2,7,-9,-3,-7,-4,2,6,-5,8,9,-3,-5,-6,-6,1,10,-4,-2,-3,-3,-7,-2,-2,2,-2,-9,-7,-5,1,1,-7,-2,7,9,-3,8,9,5,-8,3,-7,4,7,6,-1,2,7,3,5,5,-6,10,-4,9,9,1,-6,-1,-4,-3,-5,5,8,-9,1,3,-8,3,5,5,3,3,10,-2,-2,-1,9,-2,-5,-2,-6,2,-5,7,6,-7,7,-10,-3,-3,-9,-3,-2,7,-5,-2,3,4,-10,9,2,-8,-5,9,-1,4,-9,-2,3,6,8,10,3,-9,-6,10],[-6,10,7,1,4,-9,4,3,1,-7,9,-8,1,7,8,7,6,-7,-7,-2,-8,3,2,-1,-5,-2,6,-9,9,-6,5,-5,1,5,-4,8,-8,4,-4,5,-3,-6,-8,8,2,6,-9,10,5,-7,-4,1,-5,4,-1,-3,-5,-5,-5,-10,-9,6,-9,8,-4,5,2,-8,4,-10,-2,-1,-3,9,1,7,-8,-8,9,-5,2,9,-7,-3,-10,5,-8,-8,-5,9,8,8,6,5,3,-8,-9,9,5,-8,-6,8,1,5,5,-4,7,-9,7,10,-5,4,-7,-1,-6,-9,3,-8,-5,10,6,-5,5,8,9,1,8,7,10,-8],[-8,-3,-4,5,4,1,1,-3,-9,10,6,-1,9,-10,5,-7,4,-4,-9,-10,-4,2,-5,2,3,2,-3,6,1,1,3,-1,-6,-5,-1,7,-6,-1,-4,-6,4,8,3,1,9,1,8,1,6,8,-3,-3,5,-1,-8,8,7,3,-10,-5,4,5,10,5,-1,5,9,-2,-3,-5,-10,-7,9,-6,-4,-9,8,10,9,-6,-10,4,-9,6,-7,-7,4,-3,-3,1,9,6,6,-7,-1,3,4,-3,-4,-6,-9,-10,-8,5,2,-9,-10,10,10,8,2,5,1,-8,-8,-7,-9,10,-8,9,5,-4,-2,8,4,5,1,2,9,-6],[4,4,8,1,2,-9,7,-9,-8,2,5,9,-1,-8,9,-7,-9,6,-8,-7,-6,-5,-10,1,5,1,1,8,1,2,1,-4,-4,-10,-9,1,3,-8,4,10,-1,9,-3,5,2,5,-9,-6,1,-3,2,6,2,8,-3,3,-1,7,-9,7,8,-7,-3,9,-10,4,6,7,6,-4,-2,-3,9,-7,2,2,-10,-8,3,-6,-10,2,4,6,5,-1,8,1,5,8,6,7,10,-6,3,-3,-4,-10,6,-8,-7,7,-2,3,-8,5,2,9,-5,2,-9,-10,-1,1,6,8,10,-9,6,2,-6,10,-6,9,-6,-9,7,9,-8,7],[4,9,3,-6,1,-4,2,-2,-5,-10,-3,9,8,10,-10,2,-10,-8,9,3,2,5,-3,4,10,-10,-5,-5,-7,-9,-9,1,-1,4,4,10,-5,2,5,-8,2,-10,-9,9,7,4,-8,7,5,7,-1,5,-3,-5,-7,-3,-3,5,7,9,-10,2,-8,-7,-2,-4,3,-8,8,-5,8,-3,3,6,-2,6,6,9,-8,-10,-1,3,4,10,-7,-9,5,10,10,9,-9,-3,2,-2,10,-1,4,5,-5,2,-4,-1,-4,8,-4,-5,10,1,-2,2,-3,-3,7,9,-6,6,-3,-8,7,-1,3,-6,-6,6,-10,-1,1,3,5,2],[2,-1,6,-10,-7,5,-6,4,-10,3,-9,2,-10,10,7,-7,3,-2,1,-3,4,10,-1,-4,-3,10,1,3,-8,-7,6,-2,3,-9,9,-5,-2,-2,9,5,-5,5,-6,9,1,7,-1,-8,6,-3,1,-5,-2,7,7,5,-6,9,-9,6,-6,1,3,-6,-9,1,6,7,6,-9,-6,4,7,4,4,9,-2,-9,-10,-3,3,-2,-3,-7,3,-2,2,-10,1,-6,5,-5,6,3,1,6,1,5,7,3,-1,8,10,4,-4,-4,-4,6,-7,7,-5,3,10,-10,-3,-6,7,-8,2,8,-10,4,3,5,9,7,-4,-1,-10,3]], dtype = "int16")#candidate|3505|(11, 130)|const|int16
call_3504 = relay.TupleGetItem(func_1236_call(relay.reshape(const_3505.astype('int16'), [1430,])), 0)
call_3506 = relay.TupleGetItem(func_1238_call(relay.reshape(const_3505.astype('int16'), [1430,])), 0)
uop_3511 = relay.sqrt(call_3504.astype('float32')) # shape=(3, 16, 16)
uop_3513 = relay.sqrt(call_3506.astype('float32')) # shape=(3, 16, 16)
func_2693_call = mod.get_global_var('func_2693')
func_2694_call = mutated_mod.get_global_var('func_2694')
call_3514 = func_2693_call()
call_3515 = func_2693_call()
output = relay.Tuple([bop_3499,call_3502,const_3505,uop_3511,call_3514,])
output2 = relay.Tuple([bop_3499,call_3503,const_3505,uop_3513,call_3515,])
func_3520 = relay.Function([var_3494,], output)
mod['func_3520'] = func_3520
mod = relay.transform.InferType()(mod)
mutated_mod['func_3520'] = func_3520
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3521 = relay.var("var_3521", dtype = "int8", shape = (2, 16, 7))#candidate|3521|(2, 16, 7)|var|int8
func_3520_call = mutated_mod.get_global_var('func_3520')
call_3522 = func_3520_call(var_3521)
output = call_3522
func_3523 = relay.Function([var_3521], output)
mutated_mod['func_3523'] = func_3523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3488_call = mod.get_global_var('func_3488')
func_3490_call = mutated_mod.get_global_var('func_3490')
call_3569 = relay.TupleGetItem(func_3488_call(), 0)
call_3570 = relay.TupleGetItem(func_3490_call(), 0)
output = relay.Tuple([call_3569,])
output2 = relay.Tuple([call_3570,])
func_3571 = relay.Function([], output)
mod['func_3571'] = func_3571
mod = relay.transform.InferType()(mod)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3571_call = mutated_mod.get_global_var('func_3571')
call_3572 = func_3571_call()
output = call_3572
func_3573 = relay.Function([], output)
mutated_mod['func_3573'] = func_3573
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_3574 = func_2086_call()
call_3575 = func_2086_call()
func_1944_call = mod.get_global_var('func_1944')
func_1946_call = mutated_mod.get_global_var('func_1946')
var_3579 = relay.var("var_3579", dtype = "float32", shape = (143, 10))#candidate|3579|(143, 10)|var|float32
call_3578 = relay.TupleGetItem(func_1944_call(relay.reshape(var_3579.astype('float32'), [1430,])), 1)
call_3580 = relay.TupleGetItem(func_1946_call(relay.reshape(var_3579.astype('float32'), [1430,])), 1)
var_3583 = relay.var("var_3583", dtype = "bool", shape = (1430,))#candidate|3583|(1430,)|var|bool
bop_3584 = relay.bitwise_or(call_3578.astype('int16'), relay.reshape(var_3583.astype('int16'), relay.shape_of(call_3578))) # shape=(1430,)
bop_3587 = relay.bitwise_or(call_3580.astype('int16'), relay.reshape(var_3583.astype('int16'), relay.shape_of(call_3580))) # shape=(1430,)
uop_3588 = relay.atan(var_3583.astype('float64')) # shape=(1430,)
bop_3597 = relay.equal(uop_3588.astype('bool'), relay.reshape(bop_3584.astype('bool'), relay.shape_of(uop_3588))) # shape=(1430,)
bop_3600 = relay.equal(uop_3588.astype('bool'), relay.reshape(bop_3587.astype('bool'), relay.shape_of(uop_3588))) # shape=(1430,)
bop_3602 = relay.floor_divide(uop_3588.astype('float32'), relay.reshape(var_3583.astype('float32'), relay.shape_of(uop_3588))) # shape=(1430,)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
var_3609 = relay.var("var_3609", dtype = "float32", shape = (224,))#candidate|3609|(224,)|var|float32
call_3608 = relay.TupleGetItem(func_3121_call(relay.reshape(var_3609.astype('float32'), [8, 28])), 1)
call_3610 = relay.TupleGetItem(func_3123_call(relay.reshape(var_3609.astype('float32'), [8, 28])), 1)
uop_3613 = relay.rsqrt(bop_3597.astype('float32')) # shape=(1430,)
uop_3615 = relay.rsqrt(bop_3600.astype('float32')) # shape=(1430,)
output = relay.Tuple([call_3574,var_3579,bop_3602,call_3608,var_3609,uop_3613,])
output2 = relay.Tuple([call_3575,var_3579,bop_3602,call_3610,var_3609,uop_3615,])
func_3620 = relay.Function([var_3579,var_3583,var_3609,], output)
mod['func_3620'] = func_3620
mod = relay.transform.InferType()(mod)
mutated_mod['func_3620'] = func_3620
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3620_call = mutated_mod.get_global_var('func_3620')
var_3622 = relay.var("var_3622", dtype = "float32", shape = (143, 10))#candidate|3622|(143, 10)|var|float32
var_3623 = relay.var("var_3623", dtype = "bool", shape = (1430,))#candidate|3623|(1430,)|var|bool
var_3624 = relay.var("var_3624", dtype = "float32", shape = (224,))#candidate|3624|(224,)|var|float32
call_3621 = func_3620_call(var_3622,var_3623,var_3624,)
output = call_3621
func_3625 = relay.Function([var_3622,var_3623,var_3624,], output)
mutated_mod['func_3625'] = func_3625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2949_call = mod.get_global_var('func_2949')
func_2951_call = mutated_mod.get_global_var('func_2951')
call_3742 = func_2949_call()
call_3743 = func_2949_call()
func_766_call = mod.get_global_var('func_766')
func_768_call = mutated_mod.get_global_var('func_768')
call_3750 = relay.TupleGetItem(func_766_call(), 3)
call_3751 = relay.TupleGetItem(func_768_call(), 3)
output = relay.Tuple([call_3742,call_3750,])
output2 = relay.Tuple([call_3743,call_3751,])
func_3759 = relay.Function([], output)
mod['func_3759'] = func_3759
mod = relay.transform.InferType()(mod)
mutated_mod['func_3759'] = func_3759
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3759_call = mutated_mod.get_global_var('func_3759')
call_3760 = func_3759_call()
output = call_3760
func_3761 = relay.Function([], output)
mutated_mod['func_3761'] = func_3761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2086_call = mod.get_global_var('func_2086')
func_2088_call = mutated_mod.get_global_var('func_2088')
call_3789 = func_2086_call()
call_3790 = func_2086_call()
output = call_3789
output2 = call_3790
func_3791 = relay.Function([], output)
mod['func_3791'] = func_3791
mod = relay.transform.InferType()(mod)
mutated_mod['func_3791'] = func_3791
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3791_call = mutated_mod.get_global_var('func_3791')
call_3792 = func_3791_call()
output = call_3792
func_3793 = relay.Function([], output)
mutated_mod['func_3793'] = func_3793
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3886 = relay.const(2, dtype = "int64")#candidate|3886|()|const|int64
var_3887 = relay.var("var_3887", dtype = "int64", shape = (2, 10, 12))#candidate|3887|(2, 10, 12)|var|int64
bop_3888 = relay.less_equal(const_3886.astype('bool'), var_3887.astype('bool')) # shape=(2, 10, 12)
output = bop_3888
output2 = bop_3888
func_3891 = relay.Function([var_3887,], output)
mod['func_3891'] = func_3891
mod = relay.transform.InferType()(mod)
mutated_mod['func_3891'] = func_3891
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3892 = relay.var("var_3892", dtype = "int64", shape = (2, 10, 12))#candidate|3892|(2, 10, 12)|var|int64
func_3891_call = mutated_mod.get_global_var('func_3891')
call_3893 = func_3891_call(var_3892)
output = call_3893
func_3894 = relay.Function([var_3892], output)
mutated_mod['func_3894'] = func_3894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1990_call = mod.get_global_var('func_1990')
func_1991_call = mutated_mod.get_global_var('func_1991')
call_3974 = relay.TupleGetItem(func_1990_call(), 0)
call_3975 = relay.TupleGetItem(func_1991_call(), 0)
func_1236_call = mod.get_global_var('func_1236')
func_1238_call = mutated_mod.get_global_var('func_1238')
const_3983 = relay.const([[3,-6,2,-4,4,8,1,-9,-9,7],[-10,6,-8,-10,6,-7,-7,7,-4,6],[-8,-2,-8,-3,1,-8,-5,-4,7,-6],[-4,-1,8,2,-8,10,3,-8,-4,-7],[-8,-3,-1,8,2,2,-8,9,-2,6],[1,9,-1,-6,-5,7,10,-6,8,9],[-9,6,-6,3,-7,-10,-6,-2,-4,-1],[3,-2,-9,-4,-4,7,-3,-3,7,7],[-5,-2,-3,-10,-5,6,1,9,-6,-7],[5,6,-8,-1,2,-10,-4,-10,7,6],[8,-9,9,9,2,-10,3,-9,4,5],[-7,-7,-7,7,-4,7,-6,1,6,-5],[-9,7,10,2,-5,3,1,-10,4,4],[2,-10,-10,6,-4,-4,3,-4,7,-8],[-2,-4,-9,-5,4,1,-1,-6,5,-6],[-2,-3,-4,-1,-4,5,10,-2,4,1],[5,5,6,-8,5,3,6,6,4,3],[4,3,7,-2,1,10,9,5,-1,8],[6,-5,7,2,-9,-7,-3,9,-8,-3],[-6,6,-2,-3,-3,-9,2,1,7,1],[6,-1,2,9,10,-8,6,-6,-6,-9],[9,8,-4,-3,10,-7,5,7,7,-5],[9,7,-9,2,-9,-4,1,-4,-1,-5],[2,-9,-7,4,2,1,5,7,-1,3],[1,10,1,8,2,5,3,-3,-10,-6],[-8,-6,-7,1,3,7,1,-10,3,6],[-1,-1,5,-9,-3,-1,-2,-8,-1,6],[-2,2,10,8,9,-9,5,7,4,-4],[10,7,-2,10,3,9,-9,-1,-2,4],[-2,-4,-3,-6,-6,1,6,6,3,5],[-4,-1,7,3,2,-1,-8,-3,5,-7],[10,4,6,-5,-10,6,5,6,-1,3],[4,-10,-10,-5,-2,5,10,9,-3,-6],[-5,6,10,-3,-1,-6,2,-9,-1,-5],[-7,-7,2,-1,-10,-8,9,-6,6,-2],[6,1,-8,-10,7,3,8,8,-8,6],[8,-3,-8,8,8,10,-1,-4,3,7],[-9,-3,4,8,-10,8,-8,7,-9,9],[-4,-1,-10,-4,-9,5,3,3,-9,9],[-5,9,9,-9,-10,4,-5,-9,-2,-2],[-3,-6,-6,6,-2,-9,4,-10,4,1],[-8,-8,-2,10,9,4,10,10,3,-5],[5,-3,2,1,-3,-1,-7,-3,-7,4],[8,10,10,-8,-10,-7,5,-3,3,6],[-6,8,8,-4,-8,-1,-8,6,2,2],[-5,4,-1,8,1,-4,10,2,-5,3],[9,-10,6,7,-10,-8,10,-6,9,6],[9,-8,-2,-9,1,10,7,-6,-8,8],[4,2,8,-4,3,8,8,10,-6,-6],[-10,-6,-10,7,5,-7,-3,-10,8,-7],[-4,10,-1,-3,-1,4,7,10,2,5],[-5,6,-3,9,2,2,-3,7,5,10],[9,9,6,5,-7,5,5,9,8,9],[4,-6,-4,-10,3,6,8,9,-3,1],[-5,1,8,7,-8,5,-8,8,4,-2],[9,-10,-1,10,5,5,8,1,-8,1],[5,-7,-5,-6,4,-7,-5,-2,7,-2],[3,-2,3,-6,-2,-6,-1,3,-7,-8],[-8,-6,1,9,9,-2,-9,5,8,5],[-6,-8,-4,-6,9,-4,8,-9,-7,7],[-2,-10,3,-6,-7,-2,4,4,2,-10],[4,9,-3,1,1,-10,6,5,-7,4],[-4,9,-8,-5,-2,3,-9,8,-3,6],[8,6,-7,-5,5,-8,-6,6,-1,6],[6,-1,-4,-8,9,-10,9,-1,10,-9],[-7,-4,6,-1,-1,-10,6,1,-10,6],[1,8,-5,-4,-9,10,2,1,1,2],[-10,-8,-4,6,-6,-5,2,6,-4,-2],[3,-9,5,-10,-3,-8,-5,-9,5,-4],[2,7,5,-1,2,-10,-7,-10,8,-9],[-6,-3,-3,-1,2,9,-7,7,-8,8],[6,-6,4,5,10,4,3,7,2,6],[3,7,2,9,6,1,-5,7,5,-5],[8,-8,-7,-8,-3,2,-10,8,-6,-1],[6,4,-8,-5,3,-7,7,1,-10,-4],[3,-3,-6,-4,-7,5,-8,-7,10,-9],[-1,-3,2,4,-2,9,4,-8,-10,-3],[1,4,-6,8,-2,8,-3,-4,4,-1],[4,-2,9,-1,4,9,3,-5,-4,-5],[-9,-2,6,1,1,6,9,6,-10,8],[2,-9,1,-3,6,3,-3,-10,-10,8],[-3,9,-2,2,3,-6,-9,9,9,-7],[10,-2,5,-1,-5,8,-3,1,-3,9],[-5,10,-10,-4,-1,-5,10,-5,1,2],[6,5,-1,7,9,2,1,-6,1,1],[10,6,-3,-5,-8,10,10,-5,2,-5],[-10,-5,-8,-1,2,2,5,-3,8,5],[-6,-4,-2,7,3,-7,6,-3,4,3],[5,9,5,10,-10,1,-2,2,6,-10],[-1,1,8,4,-7,7,6,3,5,-3],[10,3,-1,-6,6,5,2,7,-9,1],[9,9,3,7,7,5,5,1,-2,-2],[-2,6,-10,-3,5,8,-3,1,1,8],[-7,-7,-2,8,-5,4,7,3,-4,-8],[-4,5,5,5,-2,-6,-7,-1,3,-5],[-10,-10,-1,-4,-1,4,-1,5,2,2],[5,3,2,3,3,-6,6,-10,8,2],[10,-5,4,7,-1,2,-8,8,-8,7],[-8,2,8,-3,-10,6,-2,1,2,-3],[-8,9,-9,7,-7,-9,-9,10,-5,-4],[7,-4,-4,4,2,10,-4,7,-5,3],[1,6,-4,-5,-9,-3,10,5,2,-1],[1,-6,10,2,-10,-7,6,-8,2,-9],[-4,-9,-2,10,8,-10,-5,-5,2,10],[10,-10,5,-7,5,7,-10,6,3,-6],[1,9,2,1,-9,5,-10,-8,-7,1],[-2,-1,-7,4,5,10,-6,2,-2,6],[-3,1,-8,-10,5,-6,2,-1,6,-10],[5,-7,-8,3,-1,1,9,-9,10,-5],[1,-4,-1,-1,-8,6,-10,8,-3,9],[-1,-9,-2,-1,-10,-7,-6,-5,4,3],[-8,9,3,7,10,1,-6,-4,-3,-1],[9,-5,1,-3,-5,-8,5,-2,-7,-6],[4,-10,2,-9,7,5,9,1,9,4],[-10,8,2,-6,8,7,3,-4,-9,7],[4,2,-3,3,10,-7,-10,8,2,2],[-7,-4,8,5,-3,-5,-6,10,3,1],[-9,-2,3,2,3,7,-6,-2,1,2],[-10,10,-4,-5,-4,-8,7,3,-9,9],[-10,4,9,10,3,-3,7,-9,4,7],[4,-10,-7,-3,9,-10,8,6,-10,-7],[-6,-6,-6,3,-10,-9,-8,-5,3,1],[2,2,5,-9,-4,-10,9,-3,-2,6],[-1,-6,3,1,-3,-9,-4,-7,6,-6],[4,-1,5,-9,-4,-8,-9,3,-8,-9],[7,-8,-8,-9,-2,-5,4,-1,-3,5],[5,-4,8,10,2,-10,7,9,4,-10],[-5,-3,4,-6,-6,6,-4,8,10,1],[9,-10,-9,2,8,-10,-10,2,8,-2],[-10,-8,1,-8,3,-4,1,9,-4,5],[-6,3,-9,9,-2,2,9,6,-5,10],[6,-2,-7,-8,5,-3,8,4,-10,5],[-2,-7,8,-1,-10,4,-5,2,9,-5],[3,5,3,-9,2,8,-4,7,8,8],[10,-3,-8,9,5,6,-1,9,10,-8],[3,-10,-10,-10,6,-6,10,1,4,-9],[-3,7,6,9,-6,-10,-2,-8,9,3],[-6,10,-8,-3,-3,1,7,-2,-6,9],[-8,10,3,-4,-6,6,6,7,8,-6],[4,7,-7,-4,-1,-4,-4,-1,-4,7],[-2,1,10,-3,10,9,9,5,6,3],[-2,6,-3,1,2,7,-5,-3,6,5],[-7,10,-2,-6,-2,-8,5,-8,-1,-6]], dtype = "int16")#candidate|3983|(143, 10)|const|int16
call_3982 = relay.TupleGetItem(func_1236_call(relay.reshape(const_3983.astype('int16'), [1430,])), 1)
call_3984 = relay.TupleGetItem(func_1238_call(relay.reshape(const_3983.astype('int16'), [1430,])), 1)
output = relay.Tuple([call_3974,call_3982,const_3983,])
output2 = relay.Tuple([call_3975,call_3984,const_3983,])
func_3990 = relay.Function([], output)
mod['func_3990'] = func_3990
mod = relay.transform.InferType()(mod)
mutated_mod['func_3990'] = func_3990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3990_call = mutated_mod.get_global_var('func_3990')
call_3991 = func_3990_call()
output = call_3991
func_3992 = relay.Function([], output)
mutated_mod['func_3992'] = func_3992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_766_call = mod.get_global_var('func_766')
func_768_call = mutated_mod.get_global_var('func_768')
call_4007 = relay.TupleGetItem(func_766_call(), 0)
call_4008 = relay.TupleGetItem(func_768_call(), 0)
var_4013 = relay.var("var_4013", dtype = "float32", shape = (1430,))#candidate|4013|(1430,)|var|float32
bop_4014 = relay.not_equal(call_4007.astype('bool'), relay.reshape(var_4013.astype('bool'), relay.shape_of(call_4007))) # shape=(1430,)
bop_4017 = relay.not_equal(call_4008.astype('bool'), relay.reshape(var_4013.astype('bool'), relay.shape_of(call_4008))) # shape=(1430,)
var_4018 = relay.var("var_4018", dtype = "float32", shape = (1430,))#candidate|4018|(1430,)|var|float32
bop_4019 = relay.subtract(var_4013.astype('float32'), relay.reshape(var_4018.astype('float32'), relay.shape_of(var_4013))) # shape=(1430,)
output = relay.Tuple([bop_4014,bop_4019,])
output2 = relay.Tuple([bop_4017,bop_4019,])
func_4022 = relay.Function([var_4013,var_4018,], output)
mod['func_4022'] = func_4022
mod = relay.transform.InferType()(mod)
mutated_mod['func_4022'] = func_4022
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4022_call = mutated_mod.get_global_var('func_4022')
var_4024 = relay.var("var_4024", dtype = "float32", shape = (1430,))#candidate|4024|(1430,)|var|float32
var_4025 = relay.var("var_4025", dtype = "float32", shape = (1430,))#candidate|4025|(1430,)|var|float32
call_4023 = func_4022_call(var_4024,var_4025,)
output = call_4023
func_4026 = relay.Function([var_4024,var_4025,], output)
mutated_mod['func_4026'] = func_4026
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1882_call = mod.get_global_var('func_1882')
func_1883_call = mutated_mod.get_global_var('func_1883')
call_4109 = relay.TupleGetItem(func_1882_call(), 1)
call_4110 = relay.TupleGetItem(func_1883_call(), 1)
output = call_4109
output2 = call_4110
func_4111 = relay.Function([], output)
mod['func_4111'] = func_4111
mod = relay.transform.InferType()(mod)
output = func_4111()
func_4112 = relay.Function([], output)
mutated_mod['func_4112'] = func_4112
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4155 = relay.var("var_4155", dtype = "float64", shape = (12, 4, 6))#candidate|4155|(12, 4, 6)|var|float64
const_4156 = relay.const([[[-3.586476,3.992637,-5.881371,-0.162657,6.154041,-5.037320],[-0.084163,-8.416234,-5.412950,0.097059,4.361727,6.878702],[6.165401,2.769903,-4.962573,-6.914818,-8.757879,-2.031812],[-0.576973,6.866505,1.289919,-0.491954,-6.633542,9.121525]],[[1.535776,-0.139490,-1.702471,-1.733911,5.419285,9.882343],[-6.545415,1.672317,-4.089262,-2.236274,-8.506687,-8.990784],[3.017713,6.263845,8.725446,-7.252681,-5.538538,8.759906],[-5.370594,-7.209262,9.735670,-5.149431,1.902145,9.291706]],[[2.677409,-0.415273,2.247738,-7.599214,-5.337123,4.379257],[-4.136004,-8.139801,-7.442155,-7.440164,3.969376,-3.210397],[-7.310322,-7.970316,-2.876562,1.572944,2.173539,-9.168053],[-8.984742,2.723815,-4.193975,-6.943991,-9.589788,8.477704]],[[-6.631595,-4.757387,-7.737257,1.542124,9.416660,7.207012],[4.375943,2.132489,-3.394201,4.524537,-5.779457,3.249453],[8.320034,-2.155041,-1.915006,-1.572572,8.450064,-5.588326],[-7.702609,-6.083672,-3.624202,5.439809,9.751457,-5.684771]],[[-0.945724,-2.328895,2.097902,-8.863718,-1.523829,-1.573958],[-9.319548,7.999147,0.179836,-8.426402,4.091561,7.746287],[-6.660237,1.021414,-8.585643,2.077323,-6.709756,7.293793],[-3.440191,-9.205116,-0.104504,0.766234,-9.415560,-4.681866]],[[5.219875,6.422705,-3.985703,-5.409103,1.196186,-0.554430],[9.201852,2.218621,3.374033,3.082565,-4.032690,-4.879853],[2.240173,5.710921,0.661476,5.880862,-0.551303,9.636894],[-1.049601,9.153757,-8.774805,3.930699,-5.812212,0.244159]],[[0.653386,6.917286,-0.798021,1.803649,5.099000,8.566384],[-8.230431,7.076691,1.031594,5.394557,-7.541037,-7.610679],[-8.937792,8.242506,-3.223946,8.020834,5.836287,0.677866],[-6.557522,5.532103,5.600157,-1.594854,-9.961550,1.271558]],[[2.569574,0.705686,2.988824,-5.185587,3.488936,-6.459223],[-6.732413,5.136293,-5.573031,5.539616,3.168260,0.620286],[-9.242758,9.992122,2.902392,-9.345285,9.826965,6.618181],[7.940076,7.623815,7.806687,-4.192786,0.308205,6.826341]],[[-4.115014,-8.420862,-7.658417,3.445280,-2.290352,3.111298],[0.156732,-3.025091,6.273891,7.218681,7.946968,6.669781],[3.609207,-7.921816,5.925654,-9.112781,-3.652086,-9.006133],[-3.086031,4.542337,-5.791515,0.629160,6.730114,-1.160555]],[[7.747710,7.402999,-0.479795,2.048288,4.132551,-8.478725],[5.345110,-3.116727,-4.739277,-1.750414,-4.130997,7.666412],[-9.742492,-5.788113,-8.966677,-7.152757,3.860737,-8.335071],[-6.099815,7.824935,0.483588,6.527076,-4.998524,-2.742347]],[[-3.478227,-1.919752,5.032383,7.108850,-9.288454,9.568437],[-7.459864,-7.593463,0.671488,-1.354010,-3.098492,9.614267],[9.684241,-0.994761,9.030677,-2.722461,-1.215645,-9.841359],[-4.897080,2.329389,-8.437148,9.620661,5.973475,-2.498006]],[[-9.388980,-7.822071,-3.752914,-7.178449,-4.363311,5.582580],[-9.325366,9.503401,-2.536311,-3.067855,1.352683,0.721501],[-6.478344,3.667407,-2.504161,-9.776640,-6.099825,9.046578],[1.714050,-8.776960,2.221801,5.522406,-3.532505,-8.399544]]], dtype = "float64")#candidate|4156|(12, 4, 6)|const|float64
bop_4157 = relay.divide(var_4155.astype('float64'), relay.reshape(const_4156.astype('float64'), relay.shape_of(var_4155))) # shape=(12, 4, 6)
output = relay.Tuple([bop_4157,])
output2 = relay.Tuple([bop_4157,])
func_4165 = relay.Function([var_4155,], output)
mod['func_4165'] = func_4165
mod = relay.transform.InferType()(mod)
mutated_mod['func_4165'] = func_4165
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4166 = relay.var("var_4166", dtype = "float64", shape = (12, 4, 6))#candidate|4166|(12, 4, 6)|var|float64
func_4165_call = mutated_mod.get_global_var('func_4165')
call_4167 = func_4165_call(var_4166)
output = call_4167
func_4168 = relay.Function([var_4166], output)
mutated_mod['func_4168'] = func_4168
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4195 = relay.var("var_4195", dtype = "uint16", shape = (14, 5, 14))#candidate|4195|(14, 5, 14)|var|uint16
const_4196 = relay.const([[[-10,8,8,-8,2,-8,-2,8,-5,-7,9,4,8,-2],[-2,8,1,-9,6,9,-9,-4,9,-8,-5,7,-4,-9],[-4,1,1,10,-9,-10,8,-3,-6,8,9,2,-1,-7],[-10,9,-9,-2,10,-4,-2,-4,-4,7,-5,9,-1,5],[-10,6,1,3,-6,10,-8,-4,9,-3,6,6,7,5]],[[-4,9,-5,5,-10,5,5,1,2,-6,-5,5,-8,-3],[4,-2,-8,-4,6,10,8,-2,-3,-8,10,5,2,-5],[8,-7,5,5,-10,8,-8,2,6,-3,-8,-5,7,-4],[-9,-1,-6,-1,8,6,-5,-4,3,-3,1,-9,6,-9],[-3,4,-1,-10,3,-10,9,1,-8,-9,2,-9,7,-3]],[[-1,8,5,-5,8,3,-9,4,-9,-2,-1,-10,-4,-7],[-7,7,-3,4,-8,-6,4,-8,4,-1,-9,10,5,-3],[8,-3,10,-5,-7,-5,-7,1,-10,-4,-5,5,-5,5],[4,-10,-8,9,3,5,2,2,8,-1,-4,-3,8,-2],[5,-5,-5,-3,-10,-3,6,-10,7,-8,-9,3,5,-2]],[[-6,-8,-4,-9,-9,-4,-5,-1,-6,-1,-7,7,-9,-7],[10,7,-6,6,7,-10,10,-7,-2,5,-1,10,5,-4],[-2,9,2,8,1,9,9,-6,3,5,-6,-1,7,7],[-3,-8,-1,6,5,3,-6,-3,2,-6,-7,-10,1,9],[5,2,6,10,9,3,10,9,8,10,5,7,-7,4]],[[8,-6,9,8,9,5,6,3,3,1,-6,-3,9,1],[-7,-1,-8,6,6,5,6,3,-9,7,8,3,-8,-3],[6,-2,10,-6,2,-8,-7,-4,-4,-4,-3,4,10,-5],[4,7,3,3,-5,-2,2,-7,-4,4,8,-2,1,-2],[1,-9,-7,-7,6,-4,10,9,-5,-2,7,-8,6,-8]],[[3,-7,-9,-1,5,-7,-7,-3,6,-8,-10,1,-10,4],[8,-4,4,-9,-2,-1,6,9,8,10,-5,6,-3,-3],[-7,-9,-3,-10,-6,1,-7,2,-10,-1,-2,2,-1,3],[5,-5,4,-1,-8,-5,-10,-10,-1,-4,-5,9,6,-5],[10,-1,3,-9,-1,-8,-3,-3,1,2,6,-5,1,-8]],[[-3,-5,10,-8,-3,4,1,-3,6,7,-9,-1,7,6],[8,-6,-9,-6,7,4,4,4,-1,-10,-4,4,6,-8],[9,-10,2,-2,6,-9,-5,-1,-2,-4,3,-8,1,-10],[-7,-1,-4,5,-6,6,8,-5,8,-2,4,-3,-2,-3],[5,1,2,8,4,4,2,-3,7,3,-7,-8,-5,-7]],[[-4,-1,4,2,-7,-5,-6,10,-1,8,1,3,-10,-9],[4,3,4,8,7,5,-10,4,9,4,5,6,-7,5],[10,2,10,3,-9,-2,-10,-10,-7,-6,8,-6,4,-10],[3,-8,-1,-8,-4,-5,-9,-9,5,-9,6,9,-5,-9],[-9,2,6,6,10,8,-4,-9,9,-3,-1,-7,8,-3]],[[4,-4,2,-6,5,8,5,-1,9,3,-8,-2,-1,-6],[-8,-1,-10,5,2,2,5,-5,6,-1,-4,2,-3,10],[5,10,-4,8,-10,8,6,1,10,2,-10,2,7,7],[-8,3,-3,-1,-8,5,-1,9,-4,7,-4,3,-1,-9],[7,-8,3,2,-6,6,-9,-1,-5,6,-1,-5,-1,1]],[[1,10,-8,-7,-2,10,2,-2,-9,1,-1,5,-3,9],[9,6,3,-2,-6,3,-7,-6,9,2,-8,1,-2,-5],[9,9,-5,-1,-2,-9,-1,-6,3,9,-9,1,-4,9],[1,10,-8,-9,5,3,-3,4,3,4,2,-2,-2,10],[-7,1,5,-9,10,7,-8,-3,-3,4,-6,3,-10,1]],[[-10,-8,-2,-7,2,-9,6,10,-6,-4,7,-4,6,5],[4,10,8,3,8,-4,-9,-3,-9,-8,5,2,2,6],[-5,4,8,-7,1,-4,-3,-9,1,7,6,-5,-9,-2],[-4,9,-1,3,6,-4,10,-7,-6,5,-2,-9,8,-1],[2,-8,-4,-8,-9,-4,10,1,8,5,8,-3,-2,9]],[[6,-7,-3,-5,-1,4,5,-2,-8,7,4,-1,-1,3],[9,-3,1,-5,4,-3,-4,-2,7,-6,-10,-10,-4,-7],[7,8,1,5,1,10,10,2,-2,-5,-10,-5,-3,-9],[8,-1,7,5,3,1,7,-1,7,-5,8,8,-10,-10],[-8,7,4,-2,-7,8,4,6,-3,2,-8,8,6,6]],[[1,-8,-7,-6,5,4,5,-4,3,4,-4,-5,1,2],[1,3,6,-10,6,-5,-4,-5,-1,9,6,2,-10,-4],[-2,10,4,3,5,-2,7,-4,-6,-1,-5,-5,-6,2],[-5,8,-5,-1,4,-1,-9,-1,-2,-9,-3,7,1,-10],[-8,4,3,3,4,8,-9,-6,4,5,4,4,4,-7]],[[3,3,-2,-7,3,-4,5,5,-5,-2,-2,-4,-3,-4],[-10,-4,-8,4,-8,-6,2,-7,4,-1,-7,-7,-4,-5],[-1,-3,-10,6,6,10,3,-6,-8,2,-7,2,-7,-2],[3,-7,-6,5,-9,-4,3,10,1,-10,9,2,4,9],[-6,4,6,-2,-4,-8,10,-8,7,-8,2,-9,10,6]]], dtype = "uint16")#candidate|4196|(14, 5, 14)|const|uint16
bop_4197 = relay.multiply(var_4195.astype('uint16'), relay.reshape(const_4196.astype('uint16'), relay.shape_of(var_4195))) # shape=(14, 5, 14)
output = relay.Tuple([bop_4197,])
output2 = relay.Tuple([bop_4197,])
func_4204 = relay.Function([var_4195,], output)
mod['func_4204'] = func_4204
mod = relay.transform.InferType()(mod)
var_4205 = relay.var("var_4205", dtype = "uint16", shape = (14, 5, 14))#candidate|4205|(14, 5, 14)|var|uint16
output = func_4204(var_4205)
func_4206 = relay.Function([var_4205], output)
mutated_mod['func_4206'] = func_4206
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3421_call = mod.get_global_var('func_3421')
func_3422_call = mutated_mod.get_global_var('func_3422')
call_4211 = relay.TupleGetItem(func_3421_call(), 0)
call_4212 = relay.TupleGetItem(func_3422_call(), 0)
func_3042_call = mod.get_global_var('func_3042')
func_3044_call = mutated_mod.get_global_var('func_3044')
var_4215 = relay.var("var_4215", dtype = "float32", shape = (5, 63))#candidate|4215|(5, 63)|var|float32
call_4214 = relay.TupleGetItem(func_3042_call(relay.reshape(var_4215.astype('float32'), [35, 9])), 4)
call_4216 = relay.TupleGetItem(func_3044_call(relay.reshape(var_4215.astype('float32'), [35, 9])), 4)
output = relay.Tuple([call_4211,call_4214,var_4215,])
output2 = relay.Tuple([call_4212,call_4216,var_4215,])
func_4227 = relay.Function([var_4215,], output)
mod['func_4227'] = func_4227
mod = relay.transform.InferType()(mod)
var_4228 = relay.var("var_4228", dtype = "float32", shape = (5, 63))#candidate|4228|(5, 63)|var|float32
output = func_4227(var_4228)
func_4229 = relay.Function([var_4228], output)
mutated_mod['func_4229'] = func_4229
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4244 = relay.const([[[-8.223206,9.871551,3.735943],[3.712553,-9.373757,-4.218146],[-5.987081,-7.038322,-8.955045],[4.010879,-8.646157,-0.580454],[-2.450243,4.739791,3.894269],[-0.450601,-8.389323,8.111671],[5.235839,-9.990895,-3.636578],[9.468494,5.282024,9.174451],[-7.608616,0.266460,-3.903987],[0.736735,7.643734,-6.330106],[2.328445,-9.179851,-6.371711],[-2.371451,1.316585,1.583173],[1.408149,-0.670584,1.201560],[-9.790869,-9.846598,-3.913121],[0.606168,-0.793633,-5.412344]],[[7.514037,8.900025,-3.969690],[-0.522126,2.348333,5.090448],[7.823635,-4.603102,-5.037467],[-3.835138,3.263794,-2.703157],[9.993720,8.900492,-2.996631],[4.045010,-4.892739,-0.490256],[-8.663982,3.377093,-5.584204],[9.667111,1.393738,5.240921],[8.458663,-2.080088,1.210087],[-6.928757,0.415649,-3.561142],[2.750942,0.268262,-7.150485],[-8.131512,-4.915308,4.875804],[9.825674,3.161615,-2.690224],[-6.456342,-3.162269,-6.163072],[9.487675,-2.966000,-9.815164]],[[-4.253025,-9.567056,2.068341],[6.507429,-3.744843,1.650646],[-6.690048,-2.562482,6.344948],[1.479770,-4.522438,3.930307],[5.245828,9.966041,0.776829],[-4.190292,1.805305,6.653809],[6.623548,9.021309,8.839820],[6.955893,9.537177,0.360366],[-8.320741,-7.653140,-6.958064],[6.652241,-3.090686,2.677901],[5.143042,9.451381,3.890285],[3.652307,-0.698806,-3.679024],[-0.862010,1.653229,2.980439],[-2.699600,3.139306,-5.685828],[-5.928493,0.874860,-1.796863]],[[-7.851211,-0.132366,-5.002735],[6.473253,9.898954,-2.990940],[2.191769,9.458746,-1.422820],[8.205001,9.330952,2.940242],[-7.581744,7.925971,-7.506800],[-4.045933,9.755831,4.363884],[-7.314489,-7.479887,-4.594570],[8.620312,8.713907,-5.435868],[5.756276,-7.105427,1.599527],[-3.977512,-1.553601,3.301591],[8.409500,4.407663,6.635326],[6.466345,4.725248,3.457020],[-7.036620,1.261636,8.631091],[-3.850748,1.467447,6.241461],[-1.567952,-4.463560,-5.720351]],[[-4.926593,-4.070878,-1.825214],[-3.453110,7.505627,5.369396],[7.969660,-4.237132,8.673204],[-6.388733,-9.348617,6.870045],[-9.159611,-6.852741,-0.338639],[9.717838,-1.647518,-3.414061],[7.189971,-6.627850,6.202028],[2.309115,-9.973998,3.047513],[6.713604,3.888112,-7.351594],[-5.008562,-9.034153,7.629084],[4.345004,3.378033,-2.179751],[-7.964168,-7.378673,2.765891],[8.280946,-2.502463,-8.045482],[1.411055,-8.323445,2.560405],[5.989881,9.778792,-3.615024]],[[-1.586509,9.497218,-9.622763],[-4.645558,5.131147,6.230004],[-3.222060,1.929477,-8.026147],[-5.321667,-0.741213,-0.716996],[3.356088,9.578414,-1.790802],[-0.784804,9.286706,-5.479050],[4.353419,-5.518563,-0.555483],[2.302247,-3.732897,8.446362],[-6.281202,0.749981,-0.079232],[3.827897,2.069765,2.719118],[-3.555287,3.675441,7.645740],[5.168929,-9.161424,-8.175462],[-4.659589,2.575641,-6.424067],[8.012607,-7.144631,7.373717],[8.434940,6.693893,0.503148]],[[-7.065259,-8.426006,7.955238],[1.472399,-2.368466,1.786109],[-0.099790,6.281519,-9.466632],[8.676173,-2.992915,-6.262724],[-8.659107,-2.004505,2.649389],[-5.770653,-4.800050,2.668549],[8.717536,-7.829831,-8.590935],[-8.698167,8.712864,-2.610189],[2.551028,-9.595605,8.673221],[-3.655281,-5.683522,5.989733],[-4.532400,8.301436,-9.404011],[1.235702,1.224187,-3.074047],[7.421044,9.262179,-1.705263],[-1.613814,5.436511,2.675653],[-6.829801,-3.060038,3.068365]],[[-5.753934,-7.454423,-0.025411],[-4.111545,-2.690126,5.743803],[8.226961,7.875650,-1.780951],[-8.219827,4.904193,1.054962],[-1.348030,-4.520628,-0.790180],[9.829138,-8.305752,-9.980922],[-2.419075,-1.827621,-1.856226],[4.632863,-4.252917,-3.754998],[-6.332768,0.430585,-4.987024],[5.097684,-4.578289,-0.878871],[4.707900,6.887335,1.680959],[-4.868097,-8.390044,-0.984119],[-0.563428,-9.668657,-5.419333],[4.043555,9.423515,-5.216167],[0.418184,6.600851,-9.623091]],[[-4.720327,7.262622,5.767954],[5.996648,-5.712145,-7.282880],[9.172863,1.302881,2.893521],[-2.034186,-9.705163,1.672675],[-4.370873,-9.289816,2.738834],[1.607885,-9.595798,5.972388],[3.925114,1.120621,7.328558],[-3.729034,7.291631,-0.401904],[3.681310,9.361364,3.679502],[-4.638668,-0.399286,9.240413],[3.287225,8.816306,4.960827],[4.723117,-3.927911,-8.331109],[-0.801537,-4.929118,-7.546629],[-5.116952,3.307483,-2.977769],[5.074508,-9.710442,8.125283]],[[7.171966,-9.780744,5.391236],[6.707852,-7.981088,3.824063],[4.646687,7.975994,8.769889],[0.118061,1.153376,-8.904864],[5.682456,3.579231,3.161569],[8.038080,0.700596,2.075986],[0.154183,-2.875618,-1.733146],[-4.910494,4.500690,9.010147],[-6.647130,8.822594,-0.444577],[1.585890,8.871728,2.563833],[3.626581,7.652064,8.519863],[0.618655,4.424526,-3.379832],[-6.372142,-2.178252,3.389332],[-4.022097,-2.950256,4.795128],[8.160314,-6.738896,9.529239]],[[1.625869,-5.034455,-4.312494],[-5.119399,-1.887465,2.299716],[2.542609,7.361143,1.144803],[-9.679060,-3.562311,1.555394],[3.334272,-4.466037,3.727140],[6.790429,9.854109,0.464274],[5.861320,5.763075,-9.584009],[3.205278,-0.961057,6.655408],[4.824760,-8.482234,-4.008684],[2.928929,-1.521369,6.826317],[-6.558348,0.944175,-8.517784],[5.270192,-9.709207,9.885750],[0.480897,-4.189347,0.370481],[1.355191,1.889039,7.903687],[-9.210864,0.807950,-2.173443]],[[-1.738089,-8.150435,-7.692126],[6.798688,-2.302383,0.229469],[-5.503950,-8.522198,-0.078385],[-2.632274,-0.882632,9.366345],[5.100270,4.417821,0.477638],[5.977680,-4.465655,1.076371],[-5.476883,-7.052264,-8.060463],[-1.278482,-7.003400,5.695148],[-1.512293,-8.663119,-2.199901],[-3.691375,4.064173,-4.280639],[-8.556609,1.039424,1.354547],[9.684135,2.926470,3.795307],[0.127006,-1.369935,-2.370999],[1.763557,1.568287,-7.456097],[1.551404,6.708958,-9.294656]]], dtype = "float32")#candidate|4244|(12, 15, 3)|const|float32
uop_4245 = relay.cos(const_4244.astype('float32')) # shape=(12, 15, 3)
const_4255 = relay.const([[[-3.717505,3.718318,6.061286],[-9.414567,6.834839,-7.873169],[-2.225327,-2.018181,8.671238],[-4.782448,-2.126048,6.732498],[-8.313501,1.585743,-6.624911],[-9.012214,-3.213091,3.982002],[1.853156,7.559392,-2.846489],[-8.578085,-9.710176,8.757847],[1.153016,9.690016,9.244240],[-7.798759,5.401925,-9.927698],[-3.817713,4.659399,-8.250467],[-4.703127,-4.380954,-3.512985],[1.937768,3.637043,4.957336],[-0.685966,-4.914790,-9.263621],[-3.398417,2.911889,7.520447]],[[0.330237,-1.406090,-8.596086],[6.876013,-0.532437,-7.482498],[-4.516958,7.248619,-8.720615],[3.953974,2.273719,-5.659932],[5.179201,-5.879030,-8.570254],[-7.017357,5.448696,-0.417784],[4.809946,-5.218049,-8.759803],[-6.286009,0.090930,-1.319367],[-0.605156,-5.062404,-3.170525],[-6.731102,0.325690,-1.346211],[-4.101782,-5.928952,-1.296561],[2.592216,-3.479752,6.714990],[2.585399,-7.963217,-7.061750],[-3.182099,-2.421457,-6.027854],[5.838081,-0.805798,-8.600222]],[[-8.094968,-1.107763,-2.757631],[-6.804696,-2.561863,-0.545967],[0.895501,-5.616439,-4.802199],[-2.791189,7.793814,3.217397],[4.323070,-1.565989,9.850204],[2.468884,2.942534,-2.120685],[-7.865124,-9.983813,-6.214455],[-9.163726,-6.770585,6.423187],[3.597652,4.435197,-3.149380],[3.527126,6.409483,3.007511],[-6.364068,-6.129464,-3.940244],[6.332516,6.584632,-5.141351],[-7.858435,0.254373,5.089946],[0.410245,7.919571,0.763907],[9.974870,2.687890,3.815875]],[[-9.968539,4.768775,9.311460],[1.360507,-7.718581,-1.692260],[-5.311545,-5.894304,4.518694],[-4.389448,-4.394044,2.976174],[5.249308,-1.405949,8.737648],[-8.452055,9.422397,0.679602],[8.782815,-8.139048,8.260086],[-8.650667,2.581004,-7.520089],[-6.820759,-1.836722,-3.347041],[3.439167,-0.179219,-6.862237],[5.844235,3.229769,1.032168],[2.017078,-6.782831,-5.362162],[5.785746,6.004359,2.084271],[3.053156,5.416286,0.650807],[-6.639615,2.518920,-5.141793]],[[-5.409671,-8.870784,8.385711],[-2.794465,5.962532,-6.721829],[8.455353,-7.445322,-4.417960],[-8.836341,-5.025524,5.217524],[9.546619,-1.266583,2.008025],[-2.168808,-2.229962,7.490473],[-7.679920,-1.029002,-4.618223],[-0.124454,-0.988168,5.133746],[-8.115145,6.668768,0.312963],[-6.993997,-9.699924,2.833906],[-4.681492,0.957002,1.685511],[-9.679544,7.168634,4.937545],[6.760678,3.669402,-9.547530],[-1.258644,-7.974028,4.470386],[7.675776,-8.075420,-4.762309]],[[2.870709,9.616821,3.162948],[0.479458,4.372615,9.788985],[7.156308,-4.681376,-6.183028],[5.462902,2.151356,-2.263893],[2.616627,1.956166,2.608453],[6.801532,-0.892610,-7.022478],[4.885622,5.429486,-7.248526],[2.125771,7.064114,-1.127770],[2.766073,-4.431337,2.630003],[8.755787,-0.437823,-2.267729],[2.995190,-3.831679,-5.944242],[5.657508,1.517853,-5.368202],[6.233637,7.778274,1.145381],[9.373086,1.243196,-7.735134],[-1.998799,7.420104,-9.331524]],[[5.926315,8.981651,0.229835],[-4.440081,-2.866511,3.137055],[4.757467,-1.061613,0.593794],[-8.962706,-1.553922,-5.827374],[-0.460676,7.907303,-0.329185],[8.020521,0.273157,7.850068],[-9.490130,1.333882,5.812003],[-6.395239,-2.593883,7.491021],[-1.073445,-4.412121,9.626532],[1.723490,8.274344,8.304699],[-6.517056,3.338754,-1.655184],[-7.739859,-5.923996,1.577941],[-1.883728,-9.550711,-5.266456],[-2.542928,3.414760,-4.306439],[-0.334911,-9.802133,-4.145657]],[[9.788961,-7.559381,-7.831049],[1.888206,-0.961384,-1.962886],[-3.982479,0.694804,0.859701],[-4.549004,-9.424166,-2.695551],[0.114644,1.876606,0.214623],[0.229894,-4.196135,6.031672],[-1.077491,-9.885409,9.552351],[-1.324051,0.274608,-0.862763],[-6.364884,3.857794,8.765716],[4.564884,-6.016338,-2.867246],[-6.251161,-6.964487,-7.251258],[6.642417,-5.767029,5.557564],[-9.754697,1.254395,7.654855],[0.144765,3.437143,-8.762049],[-7.760714,0.275037,-4.785768]],[[-0.086697,9.785468,-4.933896],[6.905521,5.642901,5.547071],[3.483467,-4.871507,5.043492],[-9.455474,3.386106,1.775049],[-6.167957,6.847864,-9.997595],[-7.572600,-6.468195,6.740828],[6.667242,-2.116148,7.697835],[3.436994,-6.706669,2.141659],[2.936049,-7.266043,3.086130],[-8.475275,7.039900,0.371298],[-7.300760,5.797477,-4.859868],[4.712511,0.217319,-2.648589],[8.819849,0.463146,9.648350],[3.901645,-1.216873,-5.147321],[-1.591930,-8.810264,-4.258196]],[[7.069579,0.530809,-2.201079],[-3.961512,0.641047,7.996236],[-0.415605,2.753888,-0.083603],[-2.967470,1.621130,3.866165],[4.485845,-5.818915,-4.926828],[4.015565,0.340530,-6.673635],[-0.432392,0.423548,-4.015924],[8.353710,1.631233,-0.686546],[-6.789135,-8.297853,6.561841],[1.909859,6.498323,-0.554670],[-8.004842,5.101024,-4.645368],[8.677870,-4.341463,-5.404315],[-0.320912,5.096047,-9.464130],[9.889592,5.362763,-8.165758],[-4.433967,1.423632,-4.099749]],[[3.930459,7.118533,-0.476072],[-1.225455,4.155723,9.530169],[3.256281,6.111778,4.535906],[-6.258946,-5.326768,-3.735536],[-4.973555,-4.150130,-8.039178],[-3.932668,-4.502421,5.927625],[8.393905,-0.178592,-1.741053],[9.055061,7.599183,9.444051],[-0.314236,-5.590844,0.758390],[-7.125232,1.814111,1.507785],[0.347188,4.759855,6.970473],[-3.466549,-1.983287,0.797887],[-5.388778,-2.066423,-2.989411],[2.535404,3.575712,0.632939],[-9.781877,-2.836624,6.900370]],[[-6.707386,9.924299,-6.367261],[-9.635122,-6.618878,2.179408],[6.459919,-1.298630,-9.070724],[1.781204,1.660838,3.666895],[1.106632,-7.502137,3.314657],[9.006599,-3.770548,3.071125],[-4.397856,-0.231139,-1.381971],[-5.559102,1.522811,1.109283],[5.150433,8.982219,0.655792],[-8.900917,7.058163,-3.772413],[-2.634018,-5.811745,8.267087],[7.460083,5.850051,-3.285093],[0.510067,1.763892,4.524132],[-5.827587,-2.048585,4.271329],[-8.273462,-8.243714,7.333215]]], dtype = "float32")#candidate|4255|(12, 15, 3)|const|float32
bop_4256 = relay.right_shift(uop_4245.astype('int32'), relay.reshape(const_4255.astype('int32'), relay.shape_of(uop_4245))) # shape=(12, 15, 3)
uop_4262 = relay.atan(uop_4245.astype('float64')) # shape=(12, 15, 3)
output = relay.Tuple([bop_4256,uop_4262,])
output2 = relay.Tuple([bop_4256,uop_4262,])
func_4268 = relay.Function([], output)
mod['func_4268'] = func_4268
mod = relay.transform.InferType()(mod)
output = func_4268()
func_4269 = relay.Function([], output)
mutated_mod['func_4269'] = func_4269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1029_call = mod.get_global_var('func_1029')
func_1030_call = mutated_mod.get_global_var('func_1030')
call_4270 = relay.TupleGetItem(func_1029_call(), 1)
call_4271 = relay.TupleGetItem(func_1030_call(), 1)
func_3121_call = mod.get_global_var('func_3121')
func_3123_call = mutated_mod.get_global_var('func_3123')
const_4273 = relay.const([-8.354633,6.795058,-5.834940,-9.346985,8.853352,2.597302,-1.782205,-7.811921,3.203059,9.260477,4.200843,-1.733637,-6.811333,-9.736392,8.099478,4.334522,7.119183,-6.255763,-6.695786,2.259770,-8.810400,-7.663871,8.891620,-6.621864,1.559557,-8.777110,1.967362,0.290440,-4.140233,-9.857841,5.555687,0.969021,-0.329936,-7.893868,0.821354,-5.627492,1.293458,-0.362817,-1.557310,3.974116,-9.747818,-0.647003,1.488605,7.100958,9.515304,9.965758,-5.916039,8.782689,-3.379459,7.615731,4.926972,7.176004,-8.220452,4.555258,-1.478181,4.152965,-8.152283,5.654534,9.461487,5.514150,-4.645136,2.713444,-0.525750,3.042679,5.765449,-5.522613,1.072237,5.780001,4.719997,-5.228431,1.620454,1.995175,2.429897,8.580646,5.479781,7.774699,4.821302,-6.361220,9.157440,-3.926291,6.678827,8.609722,-8.560104,-7.469765,-8.914605,-8.701068,-4.634932,1.759352,-2.030661,-6.409413,-7.741555,0.979926,0.186711,3.993101,5.551701,2.699449,-6.339648,6.881185,5.188819,-2.663567,-5.215385,3.763481,-5.606893,-7.221795,-6.606334,1.265040,-8.306322,-2.242829,-8.812075,-0.180624,-9.221353,-4.666576,2.872108,7.194999,-6.359317,-2.958961,-4.013413,6.844327,-1.018975,9.451262,6.420350,7.873866,8.047949,4.488847,0.003706,-4.506452,0.009747,-1.250072,-7.445449,5.239291,-9.704432,-5.555466,4.032809,0.593379,2.839052,-9.780301,0.700421,8.682753,-5.405444,5.028422,-5.853211,9.154396,-3.576150,-2.105945,0.813218,1.418185,6.091600,1.948256,-7.907288,3.463692,8.704552,-8.779988,9.455753,-1.035724,-0.246700,-2.607454,5.708902,-5.075125,4.410101,-3.868002,-0.721310,-5.102272,9.430909,-8.599455,5.258075,-8.265968,-9.289840,9.654552,-3.967058,1.034169,1.457861,1.710761,9.527591,0.347395,9.787950,6.961083,7.065016,5.337633,2.601822,-0.726717,6.706455,-0.901978,3.558439,-5.649035,7.261602,-5.282422,1.429715,6.505664,0.628998,3.107976,-3.633241,-5.732927,2.541837,4.627630,-8.397681,5.592570,-6.611598,0.079570,8.497093,6.993542,1.471693,-7.723108,2.911934,3.875524,-7.711099,3.174164,6.320876,-9.651980,-2.006316,-0.856308,-5.405506,-9.002877,6.462580,-9.228316,7.685073,9.415007,-2.163910,7.901875,1.837320,-4.767895,-3.806179,-7.333283,-0.049084,-9.126014], dtype = "float32")#candidate|4273|(224,)|const|float32
call_4272 = relay.TupleGetItem(func_3121_call(relay.reshape(const_4273.astype('float32'), [8, 28])), 0)
call_4274 = relay.TupleGetItem(func_3123_call(relay.reshape(const_4273.astype('float32'), [8, 28])), 0)
func_2426_call = mod.get_global_var('func_2426')
func_2428_call = mutated_mod.get_global_var('func_2428')
const_4276 = relay.const([-6.226359,9.069198,9.411391,7.783481,-7.533428,7.200370,-8.879597,-0.090942,0.196792,-3.671376,4.982842,-0.326107,2.876706,9.025583,-2.560632,-8.114813,0.492640,-0.336120,0.816627,-0.033275,-7.083657,1.527253,8.949385,-7.228627,-7.446220,-4.848912,5.103953,-6.829977,0.861623,-3.895451,-0.444118,-4.834417,-9.429939,-2.957925,7.480206,0.308330,-9.796879,-5.979406,1.586071,-9.770444,0.374864,5.222556,-4.787123,8.250189,0.437901,1.344374,3.312939,-7.806264,9.643838,7.060282,3.318960,-0.623992,5.085375,7.126250,7.599918,-2.546856,-7.334823,-7.992538,2.892046,-1.089793,9.171838,-4.320254,5.604300,-6.225855,4.286761,2.713813,6.998447,-1.611869,5.006102,4.845966,-7.172397,6.846504,7.829453,2.284940,-5.516379,-6.438110,9.107226,-2.615363,6.134292,6.085593,-7.775080,1.016907,5.361653,3.654666,0.909421,2.781389,-0.044381,-5.343112,-9.176421,9.304928,2.782848,-0.099595,-5.625713,5.164003,-4.595458,0.490822,-8.461817,-8.384344,-0.497786,-9.208098,-5.424621,0.185473,-2.008022,-8.288618,1.618317,8.221535,5.850792,-2.708899,-8.900653,8.224554,-4.929101,-7.979498,3.736271,-0.691339,-0.415009,4.885865,5.416444,7.038026,-6.797849,-5.375932,8.859635,-8.094834,-7.158010,2.763971,2.054488,1.799288,0.286727,-1.875892,-3.833808,-2.447363,1.771421,6.677819,9.325773,-3.422915,-3.020726,1.149285,4.114910,7.552560,-1.703258,-9.830085,1.717800,-6.920962,4.580267,-0.421166,5.758618,-7.075771,-9.349795,2.063349,7.208465,-9.343095,0.123735,6.392832,3.110893,-3.498725,6.907552,9.987199,-6.290755,8.538595,-2.620829,6.525369,4.381636,-5.235226,4.847254,1.989140,-9.403639,-6.167342,4.097797,-6.706951,-1.495108,7.322130,6.871330,4.294735,-7.662577,-6.298232,-4.170279,-5.467736,7.374078,2.909602,4.778503,3.769324,-5.705325,1.959717,-7.693551,5.234991,-0.926163,-8.442568,2.044761,8.544718,6.116057,3.523723,7.008432,5.081534,-4.056492,6.947549,8.557558,4.092070,-7.458384,8.109474,-2.625826,-8.582313,0.661756,5.366640,-1.745566,-8.861058,-7.442589,8.746102,-2.446346,-6.843657,4.421968,-6.126249,7.281942,2.563589,-1.975680,-7.632613,2.569164,3.618089,1.836324,4.894379,2.835824,8.550660,1.519803,4.796908,5.571969,0.464374,4.709892,4.140545,3.209452,-9.593769,-7.903130,5.597009,1.707692,-5.431467,9.615560,-8.712782,-3.750292,-8.710181,-8.465074,2.211308,6.581805,1.395691,-8.858397,3.029557,9.045713,3.650288,-0.962988,1.842767,3.801240,2.272986,8.987027,8.085915,9.508711,-1.002039,6.316623,-2.962014,-8.157588,3.049936,-2.721783,-8.710219,-6.056608,7.086738,-7.245251,6.150203,3.260522,-7.194302,-0.826394,-5.101644,4.466868,-3.880482,-4.226619,-1.039351,-1.367666,0.962411,-8.097900,-1.847163,6.293548,-7.716704,-6.360942,9.362194,-9.023640,-3.320024,9.158911,-5.031554,7.578662,7.568529,7.336702,-3.620032,7.422694,9.557092,-9.218046,-7.292644,2.911003,6.446315,-7.761747,6.412897,5.886520,-1.696549,-9.061307,9.635089,3.166398,0.510269,-6.091540,-9.148342,8.329592,-5.493613,1.404318,3.036865,1.462495,-2.897237,0.702663,-4.763430,2.968081,3.873356,6.683211,-1.338999,3.176300,-2.162703,9.179169,8.852200,-0.945870,-9.114619,4.165007,-7.641756,0.478101,-6.457426,5.621248,3.665041,4.010228,-1.811998,7.485157,0.443839,1.012519,0.960921,-5.631815,7.449933,-2.828820,-4.231223,-9.992281,-7.776802,6.614462,-2.422428,7.161361,-7.451904,2.087704,6.175481,4.388796,5.941244,-7.277830,4.329932,-3.515773,0.461792,7.756577,-8.207955,6.857713,2.841583,1.233694,7.780039,2.912086,-9.760752,-7.982127,1.670053,-6.410613,-0.255480,1.453882,-5.143544,0.031055,-2.510468,3.419352,-5.491485,9.360854,-3.181638,0.766737,9.211954,5.901554,8.767464,-6.322344,2.059195,-4.698941,8.303937,5.366183,4.767377,-4.948632,4.500716,-1.898118,-6.265984,5.255421,-2.238654,-3.534338,5.755665,5.176446,8.215567,-2.386243,5.818185,5.051448,-1.643011,-7.846680,2.629588,-0.047600,-8.948269,-6.951215,-9.434150,5.069921,-3.981620,1.183854,8.963959,1.431989,-2.465922,7.532512,-8.092258,-2.767509,-5.343664,-6.045530,9.811327,-3.673719,9.814914,-3.690610,7.648702,-1.946264,8.423442,1.629196,1.112828,-9.415265,-1.703884,5.503207,-8.222740,-9.773688,-5.330678,-7.710190,8.007758,3.656708,6.078073,-5.353000,-6.645604,-7.643759,-5.465911,-8.089849,-5.604987,9.931834,1.963548,9.671121,7.611862,-3.922605,-8.141708,4.649295,0.082703,-1.226467,7.721278,3.249090,-4.008074,0.934223,-2.724894,-2.339047,-5.946548,9.959226,-4.395782,6.867269,-5.887958,4.503022,-8.714974,-3.361688,9.461569,-7.111167,-7.823012,-4.801141,-9.234806,0.012565,-6.197911,5.975720,-6.622262,-4.827225,-5.889171,-5.126257,5.450927,9.687706,-7.399345,8.731634,9.524899,-8.489599,-2.660338,-9.968934,9.045679,1.167373,8.741586,-9.498276,5.984735,-0.815834,9.017047,0.423528,-1.012882,-5.831137,-9.635127,-9.153979,-8.316316,9.800910,-0.123354,3.416707,-4.009050,7.594976,1.934401,7.733488,-2.940467,-5.316542,-2.640357,-5.581611,7.568057,0.397998,-0.224044,2.394763,1.583315,9.379819,-2.623200,9.856376,8.386561,-8.527160,-4.168251,-4.083919,1.864209,-8.707310,-5.470943,-6.713503,-9.506831,1.922652,9.545626,7.089960,-7.108081,-7.407588,1.012119,2.608829,-7.802978,7.289821,5.031696,4.715573,5.837947,-0.585913,-3.106321,0.983506,-8.236883,-7.266848,5.939071,-8.553035,-8.098031,-3.863595,-3.182516,6.213388,0.016482,-9.366974,-1.904815,8.678798,3.254366,8.406617,-6.463872,-3.429173,9.447119,-5.462580,-5.718378,-1.788159,-4.461919,-1.486543,-3.591474,0.451937,7.275290,-5.319643,-1.166922,9.798416,2.115428,0.950204,8.852781,8.683311,-7.676855,0.818458,-2.011616,-6.427573,-7.233004,-9.598310,-5.271926,-4.412831,8.190671,7.614188,-5.957350,8.390018,8.068523,1.984046,8.579870,6.422236,-8.779364,-5.435106,6.743104,9.237739,-0.114937,-8.232260,-0.881632,-6.307071,-8.977434,0.388227,-8.884849,-2.797188,8.457069,-4.127083,-4.035029,8.732307,-0.272740,-2.734414,-5.042897,3.890716,9.474803,7.798506,-0.270378,0.819556,3.868046,1.588940,9.568420,5.200995,9.968084,2.645942,6.198746,-9.117588,5.731612,6.775999,1.032699,-7.783391,2.586516,-2.284277,8.086462,-7.140046,-6.776574,-5.830903,5.343686,-7.264809,4.411775,7.676243,-0.028881,-4.319117,-3.220379,0.877328,-7.344287,-4.576030,9.861957,7.747534,-2.668434,6.130600,2.067894,-7.924288,3.840639,5.232395,1.953368,-6.704254,-5.798361,7.137022,-6.490129,-1.208888,-3.357080,-8.370744,6.871112,-0.324848,5.146513,-7.547164,0.591323,-6.097392,-6.844930,0.681201,-2.810851,4.153396,-0.337556,5.151571,-9.109101,9.060715,-3.408810,-4.012984,6.946990,4.394376,6.746612,1.543365,-4.760332,6.815156,6.348370,-0.579068,-6.131835,-8.472823,-8.378151,-3.342619,-2.837851,8.902573,3.288919,-2.020258,-2.766751,-9.675534,-8.912940,-5.851733,4.419074,3.084641,-3.916047,-5.808730,1.277663,9.110865,-9.604954,-7.020315,6.344547,3.447920,-4.047181,5.258715,7.990222,-1.368127,5.535478,-0.699702,-1.762080,3.305139,-9.362568,-2.903214,9.984707,3.297159,6.023390,-3.010682,-4.118664,9.859482,7.396039,4.227478,-8.480651,-9.658587,1.031107,-2.460725,-4.954722,-3.961017,8.095336,3.428722,3.994237,-7.382909,-5.961317,5.539297,-1.965587,3.829586,-0.782550,-2.894756,-6.633050,-9.414112,-3.620798,-9.295260,5.418333,0.809279,5.559172,3.698848,6.955573,3.314835,-9.615127,-2.977669,0.283053,-3.745474,8.683592,5.061020,-9.174981,5.171917,-7.862708,6.538273,-7.961356,3.824423,5.114799,-8.528135,-7.730554,5.892812,4.309582,-1.192626,7.664820,-1.720438,0.646401,7.838094,8.554640,-0.517759,-1.136574,4.021736,-8.077869,-1.835241,7.152575,3.158200,-7.628553,-7.775634,-0.093865,-6.487508,-6.454172,-9.714279,-2.189648,6.777740,-2.963813,-4.380334,7.056915,-1.728360,-2.922172,-3.127915,9.252114,5.973431,-6.693548,8.267397,-4.889367,-8.607945,-8.388471,4.056269,-9.765882,8.844089,-3.224953,3.793612,3.432336,-2.076233,-5.219810,-4.887947,-4.917323,6.489697,3.287982,9.554192,0.690132,-8.275206,3.020334,-0.803437,-1.606761,-9.000681,9.799359,3.237677,7.185748,-2.097993,-9.918482,-2.139611,4.915677,7.105412,-5.908104,-0.769288,-1.986367,-6.656606,-6.091640,-0.644725,-6.541329,-7.199489,-2.526428,-8.938002,9.752042,-3.176373,4.872087,-2.091026,-2.229528,-7.373297,-1.337489,-6.666025,9.472849,-9.385602,-5.510456,0.600136,-6.303083,-3.117090,9.365220,-6.250723,-8.731694,-1.574458,6.326182,-2.139041,-2.562290,4.036154,2.539700,3.713244,-4.893140,9.606468,-1.064962,1.605045,-5.733052,-7.541655,-5.872700,-0.008262,3.167471,6.308752,3.306997,-5.598571,-1.913357,-7.388268,-4.031897,-5.424238,-9.486810,6.568052,-6.439009,4.977852,-3.655661,-7.612902,-1.801419,4.079759,1.008057,9.732879,-2.309515,-2.492802,0.866297,6.600912,6.910777,-5.824127,6.655600,-3.858694,-7.943506,-6.923116,0.027431,0.181612,6.844645,8.682284,5.607204,8.345757,6.490060,-1.023958,-1.066739,-8.248520,-7.500678,8.597051,-8.604354,6.293654,5.070688,7.458013,0.216593,4.430728,-6.545661,8.187960,6.756800,2.932764,8.403882,5.409230,9.212578,7.954343,-7.068229,2.821029,-9.675515,5.466907,-6.408477,9.583143,6.250781,-5.628906,2.408987,-4.265883,-9.264504,5.246156,7.619021,-7.380037,-4.241173,-7.020640,-7.822115,9.235693,0.688911,8.544233,-2.476239,7.417443,1.778638,2.105083,5.122413,4.540704,4.945800,3.325526,0.984909,-3.361377,8.932409,-9.114925,-3.421477,7.982875,-5.459621,-9.631912,2.283864,-7.093339,8.168090,7.590308,5.801502,3.040452,-6.932342,-7.096240,-9.856689,5.976793,5.155138,0.870452,-7.861059,3.960703,2.596194,4.929235,1.080329,0.551491,4.926487,-0.937542,3.964169,1.747339,-9.622581,8.397614,-3.869130,5.800942,-1.155247,-2.356064,6.616720,8.232761,6.951339,0.103074,2.599846,7.829849,4.776768,3.407967,7.380423,-9.934432,-0.777385,-0.871967,7.197210,9.204514,3.220527,-9.855855,6.910052,6.640712,-8.312415,-8.304183,-4.087425,-0.799818,0.809677,-0.737843,-3.336132,-3.279700,2.832423,-4.735636,-7.787345,-8.799754,0.905780,-2.755403,1.458248,2.878804,-9.326682,2.718528,7.663932,7.235627,0.481742,-5.501004,-9.629233,6.547156,1.902082,-4.919647,7.449827,4.327305,7.180902,5.987602,-1.394464,-2.016360,-3.785239,6.856421,0.161146,-1.748601,-5.805515,1.198930,-6.408331,-3.152598,-7.103123,2.195052,-4.736419,-4.657385,6.719277,-3.752764,-9.049823,-1.145049,-1.230016,-3.927185,-1.489410,-8.664031,6.383871,-0.660198,-9.261782,-0.508509,0.913073,-3.352236,-4.499895,-4.182554,0.297902,5.910270,9.959184,-7.864239,8.114976,-3.658951,-0.975339,7.514599,-2.619719,5.805058,-4.647522,9.901491,9.052103,3.454008,-7.657702,9.902270,-5.446741,2.215396,3.227578,7.283794,-2.464694,-6.288118,6.337790,4.209197,4.728692,-9.282747,-5.282004,-9.671518,-2.924061,8.547344,9.683808,-9.447840,-3.166780,5.192743,3.960140,-6.581922,-0.784947,-1.395000,-2.558954,6.211811,-5.166459,-2.957026,2.075956,1.022707,-6.645720,-5.344486,1.327174,-2.714695,-6.807770,1.030424,-1.394076,-4.327425,6.351130,-0.815824,-2.481601,0.261047,-7.985920,6.903349,-3.042020,4.432492,9.124986,-8.398067,-8.805860,-9.606363,0.474853,-1.894951,-7.001442,-4.598979,-7.223531,1.664371,6.689340,3.684207,-0.848243,5.968797,3.650644,-3.070214,1.000859,-5.646078,1.564158,-5.513292,-5.910591,-3.087612,7.895066,-8.252569,-7.174793,-7.191441,8.773959,7.285311,-2.404137,-0.780565,9.459176,2.173684,-0.404632,-7.411041,-3.415419,-9.381364,6.157118,5.513007,1.399547,-8.240812,-0.846841,6.801969,3.689174,0.968893,-1.484305,6.868214,-5.064603,-5.673791,-7.398571,-5.455188,5.380635,-2.192883,-4.589362,-3.604459,8.528025,2.238741,6.135878,7.213394,3.328736,9.255302,4.268314,8.794663,3.018624,-9.278842,-8.618531,-0.301402,4.382691,-4.610748,7.689258,1.233543,-8.437438,-7.289171,-1.058398,-8.116797,-7.215704,3.136008,-9.034588,-1.318300,-3.922028,-7.496080,6.297540,-2.081947,1.032691,-5.535896,6.432251,3.948410,-0.631394,-4.431178,-6.280639,-4.841331,-1.668971,-5.275562,-0.934731,-2.258941,7.587623,0.264192,5.871436,1.234109,1.553223,1.728720,0.472907,-0.066042,-0.781957,-3.277664,9.941486,-5.012429,-2.104150,-7.073967,7.458133,7.047317,6.608797,7.123287,8.657200,5.017015,1.671451,5.461326,-1.066621,-5.891503,-3.792055,9.706336,-0.975646,4.227966,-3.668437,5.283481,-1.902343,-5.231293,-6.606515,0.077281,-5.349976,-9.863935,9.904699,-8.147452,1.681002,5.213790,-5.084487,6.871569,-5.367822,0.283054,-5.778900,-5.087516,-2.370300,6.662322,-9.432994,-2.462597,4.269686,-3.075940,-5.606261,-0.682935,-0.296259,-6.495888,-0.816561,9.096236,-5.820511,2.522320,2.633622,-6.735408,-3.948575,-2.407107,-3.830356,3.170407,5.542754,-3.235362,9.362772,8.880350,-4.767147,-7.639052,4.819688,8.504320,-0.117209,5.438427,-9.663164,8.754647,5.748133,-5.365898,-2.301827,1.719595,8.396891,-5.479018,0.954703,-5.410847,0.880164,-0.101358,-6.953969,-7.311184,2.186541,1.098270,0.070105,-4.106633,-9.188147,-1.066674,7.370853,1.846227,-8.877359,0.019545,1.153672,1.068437,-5.323086,-6.344309,-4.028295,0.017180,-3.991928,8.592253,-4.420825,-1.045707,-0.849887,3.926642,-7.918085,0.952465,-2.937337,-5.948324,-0.206582,-0.713301,-8.476703,-7.460459,-8.003100,-5.853083,-7.566004,-7.142280,1.178711,2.766102,-8.351980,0.747117,7.134008,2.618923,6.424880,-9.279432,7.203209,-1.207274,1.076834,-7.047789,5.512551,-2.972090,3.943545,-1.767022,2.821153,-6.279299,-7.622405,-1.677489,-2.943722,-2.600226,-1.806200,-1.992023,0.098945,8.796590,4.293778,-4.909509,-6.218774,-2.612729,-6.330973,-4.842280,-3.815893,3.079758,0.842137,3.011696,0.669810,8.771220,-4.956909,8.067500,6.419135,-3.906741,8.294188,9.577734,8.536518,4.626352,-0.345761,5.881967,-3.305958,6.629527,-4.809573,-6.690778,-4.822521,6.537722,8.933810,1.907437,9.217451,5.005074,-8.372969,-0.262394,-8.144327,3.487429,-8.525555,2.034664,4.538312,-8.799154,0.922152,0.211373,-3.974426,-5.234037,-2.511844,-9.496435,4.829755,-1.063861,-9.175827,7.352183,-6.738797,9.262973,9.806910,0.591586,-0.441205,2.467671,-7.235503,7.986310,4.105169,-0.121841,1.133358,-2.990390,-3.180324,8.293286,6.642002,3.626964,1.797190,-4.719764,-4.224917], dtype = "float32")#candidate|4276|(1430,)|const|float32
call_4275 = relay.TupleGetItem(func_2426_call(relay.reshape(const_4276.astype('float32'), [1430,])), 3)
call_4277 = relay.TupleGetItem(func_2428_call(relay.reshape(const_4276.astype('float32'), [1430,])), 3)
output = relay.Tuple([call_4270,call_4272,const_4273,call_4275,const_4276,])
output2 = relay.Tuple([call_4271,call_4274,const_4273,call_4277,const_4276,])
func_4278 = relay.Function([], output)
mod['func_4278'] = func_4278
mod = relay.transform.InferType()(mod)
mutated_mod['func_4278'] = func_4278
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4278_call = mutated_mod.get_global_var('func_4278')
call_4279 = func_4278_call()
output = call_4279
func_4280 = relay.Function([], output)
mutated_mod['func_4280'] = func_4280
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4311 = relay.var("var_4311", dtype = "bool", shape = (13, 16, 8))#candidate|4311|(13, 16, 8)|var|bool
const_4312 = relay.const([[[True,True,False,True,True,True,True,False],[False,False,True,False,True,True,False,False],[True,False,True,False,True,False,False,True],[False,True,False,True,False,True,False,True],[False,False,False,True,False,True,False,False],[False,True,False,True,False,False,True,True],[False,True,False,True,True,False,True,True],[False,True,True,False,False,True,False,True],[True,False,False,True,False,False,True,False],[False,False,True,False,False,True,False,True],[False,False,False,True,False,True,False,False],[False,True,True,True,False,True,False,False],[True,False,True,True,True,True,True,True],[True,True,True,True,False,True,False,False],[True,True,True,False,False,True,False,True],[True,True,False,True,False,False,True,False]],[[False,True,True,True,False,True,False,True],[False,False,False,False,True,True,False,True],[False,True,True,False,False,True,True,True],[True,True,True,True,True,False,True,False],[True,True,True,True,False,False,False,False],[False,True,False,True,False,False,False,False],[True,True,False,True,True,False,True,False],[True,False,True,True,False,True,True,False],[False,False,True,False,False,False,False,False],[True,False,False,True,False,False,True,True],[False,True,False,True,True,True,True,True],[True,False,False,False,True,True,False,True],[True,True,True,False,True,True,False,False],[True,False,True,True,True,False,False,True],[False,True,False,True,False,True,False,False],[True,False,False,True,True,False,False,True]],[[True,False,True,True,True,True,True,True],[False,True,False,True,True,True,False,True],[False,False,True,False,True,True,False,False],[False,False,True,True,False,False,False,False],[False,True,True,True,True,False,False,True],[True,True,False,True,False,False,False,False],[False,True,False,True,True,True,True,True],[True,True,False,False,True,True,False,True],[False,True,False,True,True,True,False,True],[False,False,False,False,False,False,False,False],[False,False,True,True,True,True,False,True],[False,False,True,True,True,True,False,False],[False,False,True,True,True,False,False,True],[False,False,True,True,True,True,True,True],[False,True,False,True,False,False,False,False],[False,True,True,False,False,True,False,False]],[[True,True,False,True,True,False,False,False],[True,False,True,False,True,False,True,True],[True,True,True,True,True,True,True,True],[True,False,True,True,True,True,False,True],[True,False,False,False,False,False,False,True],[False,True,True,False,False,False,True,True],[True,False,True,False,False,False,False,True],[True,True,False,False,True,False,True,False],[False,True,False,True,False,True,False,False],[False,False,False,False,False,False,False,False],[False,True,False,False,True,False,True,False],[False,False,True,True,False,False,True,True],[False,True,False,False,False,False,False,True],[False,True,True,True,True,True,True,True],[False,True,False,False,False,True,False,False],[True,True,True,False,False,False,True,False]],[[True,True,False,False,True,False,True,False],[True,False,True,False,False,False,False,False],[True,False,False,True,True,True,True,True],[False,False,True,False,False,False,False,False],[True,False,False,False,True,True,False,False],[True,True,True,True,True,True,False,True],[True,False,False,False,True,False,True,False],[False,False,False,True,False,True,True,True],[True,True,False,False,False,False,True,True],[False,False,True,True,True,True,False,False],[True,True,False,True,True,False,True,True],[False,True,False,True,False,True,False,False],[False,False,False,False,True,True,False,True],[True,True,False,False,False,True,False,True],[False,True,False,True,True,True,False,True],[True,True,False,True,False,True,True,True]],[[True,False,True,False,True,True,True,True],[False,False,True,False,True,False,False,True],[True,False,False,False,False,False,True,True],[True,False,False,False,True,False,True,False],[False,False,True,True,False,False,False,False],[False,False,True,True,False,True,False,True],[True,False,True,True,True,False,False,False],[False,True,False,True,True,True,False,True],[False,True,False,False,True,True,False,False],[True,True,True,True,False,False,False,False],[False,True,True,True,True,False,False,False],[True,False,True,False,False,True,True,False],[False,True,False,False,False,False,False,True],[False,True,False,False,True,False,False,False],[True,False,True,True,False,True,True,True],[False,False,True,False,False,False,False,False]],[[True,False,False,False,False,False,True,False],[False,False,True,True,False,True,True,False],[True,True,True,True,False,False,False,False],[False,True,False,False,True,False,True,True],[False,True,True,True,False,False,True,False],[False,False,True,True,False,True,True,True],[False,False,True,False,False,True,True,False],[True,True,True,False,False,False,True,False],[True,False,True,True,True,True,True,True],[True,True,False,True,False,True,True,False],[True,False,False,True,True,True,False,False],[True,True,True,True,True,False,True,False],[True,True,False,False,False,True,True,True],[False,False,True,False,True,False,False,True],[False,True,False,True,False,False,False,True],[True,True,False,False,True,False,True,False]],[[True,True,False,True,False,False,False,True],[False,True,True,True,True,False,False,True],[True,True,True,True,True,True,True,True],[False,True,True,True,True,False,False,False],[True,False,True,False,False,False,True,False],[True,False,False,True,False,False,False,True],[True,True,True,True,False,False,False,False],[True,True,False,True,False,False,True,True],[False,True,True,True,True,False,True,False],[True,True,True,True,False,False,True,True],[True,False,False,False,False,False,False,True],[False,False,False,False,False,False,True,True],[True,True,False,False,True,True,False,False],[True,False,False,True,False,True,False,True],[True,True,True,True,True,False,False,True],[False,True,True,True,True,True,False,False]],[[False,False,False,True,True,False,False,False],[False,False,True,False,True,False,False,False],[True,True,True,False,True,True,False,False],[False,True,True,True,False,True,True,False],[True,True,False,False,False,False,True,False],[False,False,True,True,False,True,True,True],[False,False,False,False,True,False,False,False],[True,True,True,False,False,True,False,True],[False,False,True,False,False,False,True,False],[True,False,True,True,True,False,True,True],[False,True,True,False,True,True,False,False],[False,True,False,False,False,True,True,True],[True,True,True,False,True,False,False,False],[False,False,False,True,False,True,True,True],[False,False,True,True,False,True,True,False],[False,False,True,True,True,False,False,False]],[[True,True,False,True,False,True,True,False],[True,True,False,True,False,True,False,False],[True,True,True,True,False,True,False,True],[True,True,False,False,True,False,False,True],[True,True,False,True,False,True,False,True],[True,False,False,True,True,True,False,False],[False,True,False,True,False,False,False,True],[True,False,True,False,False,False,True,True],[True,True,True,True,True,True,False,False],[True,False,True,False,True,True,False,False],[True,False,True,True,False,True,True,True],[True,False,False,True,False,True,False,True],[True,True,False,False,False,False,False,True],[True,True,True,False,True,False,False,False],[False,True,True,True,False,False,False,True],[True,False,False,True,False,True,True,True]],[[False,True,True,True,False,True,False,True],[False,False,True,True,False,False,True,False],[True,True,True,False,True,False,True,False],[False,False,False,False,True,True,True,True],[False,False,False,False,True,True,True,False],[True,True,True,True,True,True,True,False],[False,True,False,True,True,False,False,True],[False,False,False,True,True,True,False,True],[False,True,False,True,False,True,True,True],[False,True,False,True,False,True,False,False],[False,False,True,True,False,True,True,False],[True,True,True,False,False,False,False,False],[True,False,False,True,True,True,False,False],[False,False,True,False,True,True,False,False],[False,False,True,False,True,False,True,True],[True,False,True,False,False,True,False,True]],[[True,False,False,True,False,False,True,False],[False,False,True,False,False,True,False,False],[True,True,False,True,False,True,False,True],[False,True,True,False,True,False,False,False],[False,False,True,False,True,False,True,True],[True,False,True,True,True,True,True,True],[True,True,False,True,True,False,False,True],[True,False,True,False,False,True,True,False],[False,False,True,True,True,False,False,False],[False,False,True,True,True,False,False,False],[True,False,True,False,False,False,True,False],[False,True,False,False,False,True,False,False],[False,True,True,True,True,False,True,True],[False,False,True,True,False,True,False,True],[False,True,False,False,True,True,False,True],[False,True,True,True,False,False,True,False]],[[True,True,True,True,True,False,False,True],[False,True,False,False,True,False,False,True],[False,False,True,True,True,False,True,False],[True,False,True,True,False,False,False,False],[True,True,True,False,False,True,True,False],[True,False,True,False,False,True,True,False],[True,False,False,False,False,True,False,True],[True,True,True,False,False,True,False,True],[False,True,False,False,False,True,True,True],[True,False,True,False,True,False,False,False],[True,False,False,True,True,True,True,True],[False,False,True,False,True,True,False,True],[False,False,False,False,True,True,False,True],[True,True,True,False,False,True,False,True],[False,False,False,True,True,True,False,False],[True,True,False,False,False,False,False,False]]], dtype = "bool")#candidate|4312|(13, 16, 8)|const|bool
bop_4313 = relay.logical_or(var_4311.astype('bool'), relay.reshape(const_4312.astype('bool'), relay.shape_of(var_4311))) # shape=(13, 16, 8)
func_3456_call = mod.get_global_var('func_3456')
func_3458_call = mutated_mod.get_global_var('func_3458')
call_4329 = relay.TupleGetItem(func_3456_call(), 0)
call_4330 = relay.TupleGetItem(func_3458_call(), 0)
output = relay.Tuple([bop_4313,call_4329,])
output2 = relay.Tuple([bop_4313,call_4330,])
func_4333 = relay.Function([var_4311,], output)
mod['func_4333'] = func_4333
mod = relay.transform.InferType()(mod)
mutated_mod['func_4333'] = func_4333
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4334 = relay.var("var_4334", dtype = "bool", shape = (13, 16, 8))#candidate|4334|(13, 16, 8)|var|bool
func_4333_call = mutated_mod.get_global_var('func_4333')
call_4335 = func_4333_call(var_4334)
output = call_4335
func_4336 = relay.Function([var_4334], output)
mutated_mod['func_4336'] = func_4336
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_4359 = relay.TupleGetItem(func_2097_call(), 1)
call_4360 = relay.TupleGetItem(func_2099_call(), 1)
func_2355_call = mod.get_global_var('func_2355')
func_2357_call = mutated_mod.get_global_var('func_2357')
var_4362 = relay.var("var_4362", dtype = "float32", shape = (1848,))#candidate|4362|(1848,)|var|float32
call_4361 = relay.TupleGetItem(func_2355_call(relay.reshape(var_4362.astype('float32'), [12, 14, 11])), 1)
call_4363 = relay.TupleGetItem(func_2357_call(relay.reshape(var_4362.astype('float32'), [12, 14, 11])), 1)
output = relay.Tuple([call_4359,call_4361,var_4362,])
output2 = relay.Tuple([call_4360,call_4363,var_4362,])
func_4364 = relay.Function([var_4362,], output)
mod['func_4364'] = func_4364
mod = relay.transform.InferType()(mod)
var_4365 = relay.var("var_4365", dtype = "float32", shape = (1848,))#candidate|4365|(1848,)|var|float32
output = func_4364(var_4365)
func_4366 = relay.Function([var_4365], output)
mutated_mod['func_4366'] = func_4366
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3334_call = mod.get_global_var('func_3334')
func_3335_call = mutated_mod.get_global_var('func_3335')
call_4380 = relay.TupleGetItem(func_3334_call(), 0)
call_4381 = relay.TupleGetItem(func_3335_call(), 0)
func_3759_call = mod.get_global_var('func_3759')
func_3761_call = mutated_mod.get_global_var('func_3761')
call_4393 = relay.TupleGetItem(func_3759_call(), 1)
call_4394 = relay.TupleGetItem(func_3761_call(), 1)
func_2426_call = mod.get_global_var('func_2426')
func_2428_call = mutated_mod.get_global_var('func_2428')
var_4400 = relay.var("var_4400", dtype = "float32", shape = (1430, 1))#candidate|4400|(1430, 1)|var|float32
call_4399 = relay.TupleGetItem(func_2426_call(relay.reshape(var_4400.astype('float32'), [1430,])), 3)
call_4401 = relay.TupleGetItem(func_2428_call(relay.reshape(var_4400.astype('float32'), [1430,])), 3)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_4405 = relay.TupleGetItem(func_1115_call(relay.reshape(var_4400.astype('int16'), [143, 10])), 3)
call_4406 = relay.TupleGetItem(func_1118_call(relay.reshape(var_4400.astype('int16'), [143, 10])), 3)
uop_4414 = relay.log(call_4380.astype('float32')) # shape=(3, 16, 16)
uop_4416 = relay.log(call_4381.astype('float32')) # shape=(3, 16, 16)
output = relay.Tuple([call_4393,call_4399,var_4400,call_4405,uop_4414,])
output2 = relay.Tuple([call_4394,call_4401,var_4400,call_4406,uop_4416,])
func_4417 = relay.Function([var_4400,], output)
mod['func_4417'] = func_4417
mod = relay.transform.InferType()(mod)
var_4418 = relay.var("var_4418", dtype = "float32", shape = (1430, 1))#candidate|4418|(1430, 1)|var|float32
output = func_4417(var_4418)
func_4419 = relay.Function([var_4418], output)
mutated_mod['func_4419'] = func_4419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1829_call = mod.get_global_var('func_1829')
func_1830_call = mutated_mod.get_global_var('func_1830')
call_4444 = func_1829_call()
call_4445 = func_1829_call()
var_4466 = relay.var("var_4466", dtype = "int8", shape = (3, 16, 16))#candidate|4466|(3, 16, 16)|var|int8
bop_4467 = relay.mod(call_4444.astype('float64'), relay.reshape(var_4466.astype('float64'), relay.shape_of(call_4444))) # shape=(3, 16, 16)
bop_4470 = relay.mod(call_4445.astype('float64'), relay.reshape(var_4466.astype('float64'), relay.shape_of(call_4445))) # shape=(3, 16, 16)
func_2927_call = mod.get_global_var('func_2927')
func_2929_call = mutated_mod.get_global_var('func_2929')
call_4477 = relay.TupleGetItem(func_2927_call(), 0)
call_4478 = relay.TupleGetItem(func_2929_call(), 0)
output = relay.Tuple([bop_4467,call_4477,])
output2 = relay.Tuple([bop_4470,call_4478,])
func_4479 = relay.Function([var_4466,], output)
mod['func_4479'] = func_4479
mod = relay.transform.InferType()(mod)
var_4480 = relay.var("var_4480", dtype = "int8", shape = (3, 16, 16))#candidate|4480|(3, 16, 16)|var|int8
output = func_4479(var_4480)
func_4481 = relay.Function([var_4480], output)
mutated_mod['func_4481'] = func_4481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_772_call = mod.get_global_var('func_772')
func_774_call = mutated_mod.get_global_var('func_774')
call_4532 = func_772_call()
call_4533 = func_772_call()
func_4268_call = mod.get_global_var('func_4268')
func_4269_call = mutated_mod.get_global_var('func_4269')
call_4551 = relay.TupleGetItem(func_4268_call(), 1)
call_4552 = relay.TupleGetItem(func_4269_call(), 1)
func_433_call = mod.get_global_var('func_433')
func_437_call = mutated_mod.get_global_var('func_437')
const_4578 = relay.const([8.019695,-5.504120,9.403295,-1.028346,-7.605424,-0.775390,8.083182,-7.867123,-4.334799,-0.799827,3.065471,-7.777880,-7.616794,-1.511969,-9.212064,5.835642,-2.621700,1.553999,1.891790,6.401749,-0.445247,7.926050,8.850358,3.672077,-4.966805,-4.347087,9.576286,1.570779,4.226288,-2.635484,8.771005,9.463513,2.039081,4.578674,-2.127218,-4.820043,-2.048824,7.839124,9.602276,4.989166,-0.240897,-2.850145,-4.796778,4.614848,3.653971,-1.427032,6.913912,2.336877,-0.746358,2.914780,9.712256,-1.617739,-5.335767,3.059109,-3.367848,0.488262,5.267813,2.404448,-5.345589,9.185343,-1.600863,-5.538227,1.246734,-9.200802,-8.485785,-9.382880,4.499939,3.439872,-8.624845,6.894704,-7.988082,5.461437,-3.766529,2.708039,3.481945,9.827170,-1.429557,7.840980,4.208766,-0.970673,-0.168156,4.220794,6.777768,2.756524,2.399903,-6.961775,5.132406,1.030682,-7.146680,-1.807170,6.384316,4.249589,9.769097,5.041056,-5.374623,-3.404918,5.534053,-3.409398,5.172306,-8.197887,9.936654,-0.844376,0.513647,-3.844250,-4.528310,2.637114,-4.766543,-5.339121,-0.206906,-2.089584,9.365946,1.885973,-4.179813,6.695973,8.707750,3.840873,-9.479097,8.794850,0.446879,-8.691752,3.485316,-9.406915,-3.795570,6.329806,-1.626505,-3.183653,1.096185,-1.223879,3.944354,6.394540,-5.661954,0.873553,-6.689397,-1.169336,4.092163,1.042847,-0.782738,-7.212658,-7.308400,6.498780,-7.624837,-6.686875,9.787578,7.470699,-4.486478,8.699496,5.975556,-6.380729,-9.208626,-3.689264,2.259871,-1.151011,0.692007,-3.990330,-2.515006,-4.781535,4.377575,-4.737555,-0.565583,-1.222264,-8.921763,0.095895,-9.465520,3.896514,-3.916576,-9.734903,-3.357025,0.704303,-8.213096,6.380623,-1.989268,8.592123,0.705969,-1.605138,3.636696,-6.617915,2.023492,-8.695044,9.626699,-4.596225,9.232780,4.482158,8.763802,7.845550,3.220987,-0.857872,-3.533545,5.786325,-8.540949,1.751477,-4.583173,5.710266,8.225971,-0.121827,-8.102849,-4.719991,4.947621,3.159921,9.311919,-4.103881,6.290376,-5.885552,-4.207656,5.856081,1.139878,7.797764,7.456267,8.954701,-5.727666,8.990868,-6.461442,-8.672945,-1.203021,-7.070463,-0.370916,-8.844675,-7.832272,0.034945,-0.861237,9.322292,-5.144689,-5.532141,5.529765,-6.274976,5.569908,-8.537221,-6.447709,6.953427,-4.820229,-6.146032,4.294988,4.482450,3.879149,-4.916956,5.270803,1.213243,-7.798369,8.768038,-7.464827,6.138480,-0.097194,0.908334,-2.613665,1.446707,1.140002,8.655639,-9.367200,-8.482878,-1.846342,1.424404,-5.240919,1.352602,-3.527739,-3.658823,-7.833434,-6.282417,-2.208453,6.306843,8.707872,5.953527,-9.884303,2.896454,5.335899,-0.718066,-2.635793,-7.785835,3.914595,-5.067779,-5.404656,-3.787855,-1.064822,9.810657,-5.467212,-8.587982,9.984740,-5.638381,-0.794820,-7.277702,3.921313,0.707621,4.149003,-5.031660,4.029369,-0.955046,-8.563075,9.285396,-2.184789,4.673178,7.243337,-2.872806,4.203026,8.381370,-8.636213,-2.701064,-2.916889,2.188892,2.761683,-3.831700,-2.663470,-3.667803,4.666418,-9.103610,3.677622,0.166354,2.121656,0.741212,-5.709858,-8.243917,5.532340,7.015308,8.452741,5.700663,-0.863394,4.383933,-0.709417], dtype = "float32")#candidate|4578|(315,)|const|float32
const_4579 = relay.const([3.275696,0.582817,-3.355694,-8.907295,-6.260122,-2.290765,2.712150,4.267741,2.444376,-7.308459,9.589329,7.584832,3.910210,-6.604873,2.243637,-4.371287,-8.184027,1.715103,-0.770922,6.710237,5.494799,-1.615319,3.359416,7.817769,-7.585276,0.668709,-2.792430,-6.586034,-8.705190,3.957585,2.784900,3.500431,4.526136,-2.215491,-2.350751,-2.306963,1.607426,4.681238,-1.214701,8.078457,-3.147484,-9.222862,5.617454,-0.027237,-9.639891,-4.659119,-5.314849,1.757416,-7.683239,2.452884,8.844264,-9.358868,-8.776441,2.406425,-5.601937,6.396384], dtype = "float64")#candidate|4579|(56,)|const|float64
const_4580 = relay.const([[0.412482,-8.454792,9.608042,5.893782,-2.820035,-3.541107,-8.930860,-2.426201,-6.674500,-8.975225],[5.205253,-3.590022,0.339686,5.005968,9.371540,1.648608,-0.600673,-1.726334,-8.459426,-1.909795],[1.961784,-0.806168,3.314594,4.847833,-1.391103,7.135252,-1.895912,-8.814748,-2.200721,0.578655],[-6.889047,-7.435501,-8.729062,-7.217394,-7.909569,-7.824620,2.736577,3.061583,4.278323,-2.586012],[1.503951,1.295301,-9.267315,4.744045,6.202646,-9.335951,2.523130,-1.980331,1.695196,-9.374401],[-8.777224,3.775215,-0.441159,-5.605279,5.004773,5.210653,-0.750004,0.814431,-4.197185,7.457263],[5.249314,-7.934529,-5.964942,4.136497,4.311153,3.925156,-1.961853,-6.559672,-0.537667,-4.371676],[5.842392,-0.031977,-3.946660,-0.291026,-4.004957,4.875974,0.545936,3.766709,-7.689754,6.683124],[-0.700788,9.810194,-7.649288,5.097053,-1.930300,-2.855365,7.975825,-8.617981,-4.120000,4.743244],[-8.044004,8.757289,-0.365518,-1.163052,0.513087,-5.765277,-0.379357,-1.079610,7.016125,7.747007],[5.529130,-7.704538,-3.835162,-8.354840,4.830313,-2.813614,-4.222647,-4.137658,-0.125495,-1.513212],[-3.696967,8.241878,-2.377613,3.333848,-2.689110,-1.615905,4.625268,-6.770189,9.961982,-2.474996],[-8.131725,-9.049530,-8.445727,2.056802,8.927366,-1.742789,5.076632,3.798072,7.006844,5.794963],[2.968987,7.241823,-6.328854,4.190910,3.797856,4.163459,-0.533662,-6.501526,-3.877900,7.661346],[9.851926,7.665929,1.650715,3.139115,-7.306120,-7.221487,-0.262579,-8.198715,-1.529819,-2.682326],[7.103331,2.583602,0.695581,4.096126,-5.769918,-0.820382,-8.315831,-4.674524,-4.237530,6.405922],[-8.348348,-6.482920,5.367888,-9.184844,-3.221602,0.417869,-8.842617,4.807426,6.617830,4.545484],[7.714734,3.138275,2.918002,-6.690816,6.429279,-0.395858,5.385488,-7.541223,8.597540,-1.151416],[1.256612,-2.656398,6.276089,-5.890983,-2.272403,-9.307150,7.544302,4.000174,7.538325,-4.662647],[5.969587,-2.125559,8.809644,-4.784893,0.769146,3.791880,-9.739220,-8.112297,3.902244,-5.330830],[-6.018619,-0.512968,2.187667,9.543029,9.865205,7.210121,-9.012133,3.027561,4.164236,5.817269],[6.620185,0.638092,-8.883849,1.268426,-3.753390,8.874076,-1.302513,-7.202058,4.653489,-4.525347],[9.772088,-8.970517,4.361251,-7.125804,5.109288,-6.487501,-5.147252,-2.107217,1.467067,-3.506561],[-8.005808,4.294894,9.753049,-7.033247,1.703272,3.510007,-8.107444,-1.142313,-8.127052,-7.322735],[-8.806734,-1.909689,8.583788,8.852658,-5.972390,-9.860651,4.028324,3.934279,-6.666975,-2.639737],[-0.310782,-7.731125,2.688518,-0.286268,4.763913,4.712511,6.253538,-9.632804,-0.498754,-0.150955],[-2.269699,6.870983,-5.134608,-5.223794,-1.002962,-3.033231,7.417551,-7.283314,6.252406,-8.014516],[7.657034,1.966615,7.698176,2.770722,9.251189,-0.542593,8.777909,-2.691797,-5.948841,-8.697511],[1.861571,5.820974,1.953600,1.269411,-2.843280,-0.168723,1.105353,0.869041,9.453362,-7.487971],[-7.678348,-2.110428,5.709547,6.258324,-3.062991,-2.611208,-3.759877,-7.895575,7.192997,-0.046050],[9.721166,-7.082077,-5.161995,9.303753,-5.866282,9.099981,-5.657465,-3.582611,-7.784030,6.640372],[4.436185,-6.245051,7.282220,-2.225857,-5.297036,-5.347065,5.537955,-9.398862,-3.794431,7.996072],[5.979699,7.141160,3.485097,7.783443,5.107820,-8.839078,4.150427,-9.416467,2.995780,6.509564],[-2.268521,0.902472,-9.393441,5.017833,1.148815,-4.628396,3.552625,-5.677948,3.332493,-7.853464],[-8.699583,-2.846584,1.452374,-4.047898,8.284386,-6.607303,3.837866,7.665714,9.779194,3.956306],[8.403677,-3.024493,8.154797,6.111797,-0.815267,-6.239191,-9.325846,-4.109297,9.069779,-5.569462],[4.175939,-6.379480,-2.194320,-0.884827,3.518764,-5.209858,0.121306,2.638054,4.116739,-2.464243],[2.308161,-6.436186,5.472959,0.201693,7.310127,4.725410,6.912194,-4.780789,5.190837,5.960308],[-0.134032,9.474016,-6.400852,-5.428786,-8.475994,-8.700349,9.423178,1.192584,9.530146,-3.855895],[5.909361,6.668977,8.546640,-6.382016,3.760732,9.589432,-6.509520,1.783601,-0.865910,-6.693635],[-7.527205,-0.875060,-7.201204,-0.430830,-8.918559,-7.997486,-8.153191,-3.279213,2.811402,-6.766998],[9.251962,-5.050119,5.115470,-5.008423,-8.742337,-3.173572,5.603132,-5.083343,-8.978794,-0.030879],[8.698261,-2.740655,-0.243998,-0.709420,-8.944037,-7.607271,-3.828311,1.801606,6.745506,3.920031],[-3.477050,-7.889652,-3.940685,0.891221,-5.926704,-7.008467,7.760505,7.180450,6.005825,8.179583],[8.234155,6.637319,6.782096,6.085025,6.003602,-8.579782,-4.449056,3.546365,8.060887,8.289778],[-9.796237,-7.529519,9.743022,-1.542255,2.740773,-2.802504,1.991594,-0.205647,-3.832053,9.987665],[7.319429,5.794413,4.735734,-8.815817,-0.573010,-9.282435,0.887639,-1.404913,-1.309523,-5.362206],[-5.109988,-6.658993,-7.570581,-8.445973,-8.980289,-9.812786,6.947428,4.658688,1.833092,-9.993993],[-0.145405,-7.534889,3.065676,-6.867607,0.536271,7.014622,0.855809,-7.308516,-4.458667,-1.291585],[-2.912469,-8.081569,-0.565673,-7.011087,-2.414913,4.487236,5.403760,-9.106644,-7.311753,3.977186],[8.401970,-1.891772,-1.734331,3.666032,1.426439,-1.868213,-2.313905,-5.834211,-6.233723,-2.297983],[9.311378,3.503222,-5.500327,5.863103,-3.135223,-9.157551,2.442704,-1.437219,1.520867,-4.680479],[0.305955,0.815331,-3.019041,3.336633,-5.991649,4.140829,6.142577,2.304689,-2.478568,9.644930],[6.117913,4.618741,-6.563916,-9.562668,9.587298,-0.587887,7.484765,-6.802534,5.234353,4.459157],[-2.557550,9.276399,1.702598,4.105385,6.855445,3.022356,-4.836635,5.326418,-1.853279,1.616902],[6.580599,7.209284,4.349043,-1.004679,6.639455,-7.769339,-0.672015,8.031612,-6.453319,8.233535],[3.364593,-4.553218,6.227215,-3.483298,-6.567726,0.385086,-2.088774,-0.604425,1.059472,-6.338803],[-1.960737,-6.184553,1.280257,9.414895,-1.015836,4.468471,3.057159,1.115747,-1.590771,-4.164134],[4.707137,-8.754578,-1.360624,8.311516,7.163245,-4.911450,1.854167,-4.314226,2.390069,-0.432752],[-3.112229,1.220000,-1.794113,2.168926,5.108348,7.688804,6.041515,-5.730738,-6.838546,3.854391],[6.548632,-5.464427,-0.356854,0.128742,-1.857331,8.552987,-5.348992,-1.702005,-8.479759,5.663017],[8.807001,-8.941023,-7.187090,3.922514,5.839336,-5.443576,-9.927013,4.693629,7.672657,-5.091159],[-0.968480,-5.506616,7.157111,1.243045,-2.089648,4.401158,7.940982,7.895020,-5.100149,5.063368],[0.310560,-8.876880,-9.688771,3.241117,3.448600,8.865413,6.349722,-1.160513,-7.219659,-2.601943],[-0.342320,-0.788429,-1.437172,1.432988,-5.753212,-4.828006,-4.283256,-8.181970,-7.378019,-0.853670],[0.829026,4.688745,9.912882,1.852589,-9.105362,4.807117,8.177718,-6.248798,6.087671,-5.511566],[-0.307105,5.903693,-0.517135,4.691889,9.642661,-1.247384,9.964861,-9.082117,3.782822,-0.293238],[1.689626,-0.171503,-0.928821,-7.598964,-7.990007,3.324834,9.547959,7.116120,-2.348102,-5.518767],[-6.185787,4.143375,0.185351,-8.109903,6.270465,-3.634364,-1.882779,-7.891700,6.065467,-3.742733],[9.842157,9.790240,2.112054,-6.526877,0.311038,3.718338,4.126819,-7.964399,-2.089647,9.285175],[1.578919,0.075543,-1.190786,-9.746697,-8.056118,9.544617,6.799793,6.526180,3.255515,-7.619152],[-8.612283,-5.015010,-1.401800,-5.027907,-3.921738,9.625344,3.041631,1.886923,-8.619484,-6.024706],[4.319233,-7.062687,-2.744273,3.652109,-8.223647,-3.265496,8.937125,-6.135986,2.019961,8.611191],[6.293597,-7.678710,0.572324,-4.977639,9.249098,-4.328806,3.313855,6.727300,-9.561230,1.888398],[9.309067,-9.291420,3.465356,-4.393492,9.720220,-3.097423,-6.910360,-4.488895,-0.353952,8.297961],[4.160435,-2.466609,8.114545,-9.148807,-7.655345,-8.278208,5.020889,3.559193,0.551897,-5.742246],[1.531173,0.548784,5.806381,9.205789,8.816043,7.175584,-1.753259,8.873514,-9.074149,-9.808431],[2.226792,-8.442618,2.927923,4.349929,6.000059,2.519423,-9.175999,3.643681,-7.201844,-9.641663],[3.854951,-1.974896,3.675936,2.062356,9.900695,0.967068,-3.142551,-6.020063,6.320298,7.856158],[8.396378,0.529384,0.907659,8.124315,0.283986,6.831992,2.091187,-0.522484,0.688183,-9.548417],[1.885998,-3.716191,9.464673,9.492669,-1.827960,-1.456779,-3.458813,-5.324865,-8.640828,1.788273],[7.835399,-8.206970,7.704235,0.160905,0.244758,4.975114,0.331309,-7.141899,-6.449011,6.511678],[-3.609997,-0.764806,4.985849,9.108009,-6.557909,6.890885,6.174728,4.833567,8.351156,-5.536352],[-8.124525,1.257785,7.491146,4.579932,-1.520633,-7.825393,-9.251075,7.669386,3.726769,3.787241],[6.629085,8.133781,-3.975268,0.636124,-4.068969,-2.712050,-6.143442,-0.235020,-7.173952,6.312316],[8.737511,1.674678,6.717450,6.155367,9.098244,-2.725109,-7.361672,-8.887388,-9.179526,-9.688556],[4.439536,-7.590911,-6.535693,4.486934,-4.100537,8.481069,-1.095274,6.453170,8.108383,4.888325],[6.511669,-8.191218,0.105056,-2.377612,-2.255156,-2.703924,-6.771147,1.036355,-2.429029,1.239548],[-1.424251,-8.472846,1.507942,-4.579372,-6.200362,-2.055985,6.444252,2.444248,2.864885,4.650543],[-2.687712,0.119776,-4.005526,-0.395767,8.054051,0.924119,-4.374981,-2.598187,6.212696,3.390464],[-4.242167,5.611492,-4.843843,5.913182,-8.770654,2.983923,-4.743938,0.264635,-7.440309,3.661019],[2.275920,4.730480,-1.771743,-2.372866,-6.262431,-2.096692,8.661562,-5.522302,-4.698470,4.143696],[-1.643339,-8.523086,9.744928,4.984966,6.568044,8.145036,8.848299,-1.360799,-4.266855,0.236101],[-6.069952,-5.200645,1.473901,3.292356,-0.348486,9.589773,-0.697002,1.232567,9.049217,6.198058],[-0.684984,-8.459014,6.153650,3.710847,0.374983,-5.364444,-6.454104,6.234860,2.881655,-5.707584],[5.151440,3.802652,0.490609,4.044749,9.175283,0.501907,5.071490,-4.247086,-0.239797,-9.236477],[-1.534880,-4.493246,9.737267,6.751130,-2.568848,-0.643553,4.603351,6.103870,3.918758,4.569152],[6.888822,-4.516680,-1.873202,9.108126,-9.487920,-6.635333,-9.977339,-9.694409,-6.682173,1.822864],[7.333227,-2.732517,2.986644,3.292640,-1.267892,4.833585,4.497331,-9.265021,-3.358954,-7.783236],[-3.030597,-3.398668,1.586390,-7.749500,-4.846681,7.516853,-2.288535,-0.787259,8.744141,-1.004565],[-7.823148,-9.835948,5.229013,-4.935755,-6.463307,-4.605556,8.365733,-0.250276,6.077987,6.386996],[-1.462627,0.149114,-5.272816,-0.113561,6.593364,-2.541880,-6.922928,2.931260,6.143043,-1.737187],[0.350470,-5.602065,1.195878,7.492865,-9.533429,-7.817254,8.020430,2.388972,7.200005,-5.556205],[-5.299680,-0.579910,8.105866,-9.009337,5.598775,-0.924154,2.332754,-8.071008,6.857670,-9.479401],[-4.055942,-5.583442,-6.538499,6.093914,4.828174,3.723067,-0.245255,2.415158,8.209437,1.436682],[-1.684539,9.161729,-1.292358,-2.026032,-3.507030,1.538536,2.495459,-8.746852,7.183894,5.327544],[4.062810,-8.296984,-3.174417,3.892341,8.884240,1.204331,2.035620,-5.127612,-5.290785,1.551303],[2.320651,3.129561,5.328030,-7.990758,6.049295,2.336842,-9.094584,2.847258,5.001155,7.976041],[9.550841,-5.537738,4.628554,-2.713497,7.301707,-6.186256,3.145308,4.389236,-7.938487,8.763585],[0.259599,-0.202350,4.379606,9.291998,4.594274,9.280240,2.025181,9.874009,-0.212908,-5.927364],[8.203628,-3.097762,-0.465904,3.386506,-8.893880,-2.525555,-6.492890,0.479573,-3.018214,-0.921784],[8.297418,-9.967744,-9.789475,-1.273450,-6.917412,-5.743213,5.691639,-3.050837,2.555518,-5.418964],[-1.178400,0.894363,-4.510650,-8.946020,4.573806,-0.932784,3.927984,8.218390,-2.301578,-7.908643],[-1.538578,-7.531001,-3.935196,6.318564,8.402920,8.539689,6.483296,-8.051608,0.652396,-7.186331],[4.519609,-4.617791,-5.005553,-5.092827,2.088716,4.381470,-6.586442,9.596519,-9.122217,-5.627558],[8.853526,4.325158,-6.294600,-1.761803,6.043331,5.644602,7.232500,4.867580,8.986297,-9.052650],[-2.776662,5.763784,9.416958,7.926501,7.845714,0.823878,7.848751,6.777678,-0.227732,-2.080448],[0.145652,1.175890,8.403963,-5.448874,-1.264397,1.729300,-0.725562,2.508360,2.963283,7.111034],[-1.181397,0.994174,8.002350,-1.889274,-4.263096,7.620989,-2.031604,-9.506280,3.349782,-9.801036],[5.567213,7.233970,-9.634808,-6.762951,3.683640,4.555764,-3.299869,-6.320858,0.399467,-5.315177],[7.090691,7.305952,-2.879840,3.937749,-0.105381,9.671594,5.128541,4.121445,-0.868708,3.323338],[9.508867,7.441634,-1.767587,-6.024087,-6.145766,6.975320,-2.088535,5.713823,6.616416,8.015036],[6.332210,4.176375,7.739454,-6.927662,-6.866230,5.537941,-8.413452,-6.786293,-2.895910,4.597013],[0.891736,-0.771102,3.320425,-1.679948,-9.073001,3.012113,-7.954314,-4.335634,2.164374,2.577168],[2.071312,-3.555538,-9.686432,-2.650945,0.014489,7.582224,-0.253016,-8.576986,-8.053959,-1.750325],[-9.920477,-9.363796,4.570143,-8.026676,0.906685,-3.553690,2.873497,4.047850,5.929428,-6.671807],[1.536488,3.995821,-5.464785,4.005798,-5.789993,7.104377,6.488153,-4.132605,9.602657,-7.921247],[-0.063972,4.972056,0.209420,2.468676,-2.125601,3.600320,-4.100701,4.053453,-4.697867,7.702593],[5.679694,-5.605146,-8.937827,0.541626,8.181292,-0.083247,-7.201853,8.515392,-9.023257,3.348906],[2.667970,-5.588407,1.058178,-7.497970,5.233838,2.723602,-4.471259,2.756939,-2.486579,-1.981111],[-2.333837,3.026921,-3.580711,-0.252142,-4.510815,6.464513,-8.451709,8.367269,-6.390988,-8.667555],[2.329124,-6.396926,5.647011,-0.176531,-7.899760,4.612110,9.610697,6.435906,-8.127710,2.503076],[4.805893,-0.359920,-3.560885,-3.015377,3.903302,-2.880484,-0.080792,-1.955758,6.334158,7.156613],[-8.245974,-2.128144,0.328438,3.457269,-2.771222,-0.118330,-2.139886,1.400244,-4.034998,9.833599],[-9.423936,-7.821228,-8.053331,-9.379223,9.548463,1.411061,4.627578,-9.888168,7.995885,-1.781496],[-7.189380,-3.040343,9.972967,4.969448,6.635000,5.193872,3.044959,-4.791364,-7.314744,9.493730],[-7.710729,8.819964,-8.125805,-2.048608,-3.436294,0.944525,-9.861828,0.412733,-0.333928,6.376162],[7.021524,7.377429,2.739140,-5.435293,6.732638,4.933904,-7.443585,1.396824,-2.114368,-7.060151],[-9.541482,8.371709,1.908598,-4.153534,-9.427698,0.013843,-3.234886,-1.728783,-2.686396,6.080308],[-3.845653,5.018630,-8.032078,8.803190,4.278779,7.237488,-2.526553,-9.068791,6.341066,5.045121],[-2.901841,1.424325,9.266171,-2.824169,-0.278414,0.159490,2.461372,4.545452,1.253257,-8.514952],[-1.148200,-5.460143,0.394284,9.717261,2.221730,-0.826614,7.341138,-0.615833,2.910407,2.330554],[5.317832,-3.247760,6.518772,-5.431379,-5.481619,9.410618,-2.609236,0.936629,-3.196527,-3.648684]], dtype = "float32")#candidate|4580|(143, 10)|const|float32
call_4577 = relay.TupleGetItem(func_433_call(relay.reshape(const_4578.astype('float32'), [3, 7, 15]), relay.reshape(const_4579.astype('float64'), [56,]), relay.reshape(const_4580.astype('float32'), [1430,]), ), 1)
call_4581 = relay.TupleGetItem(func_437_call(relay.reshape(const_4578.astype('float32'), [3, 7, 15]), relay.reshape(const_4579.astype('float64'), [56,]), relay.reshape(const_4580.astype('float32'), [1430,]), ), 1)
output = relay.Tuple([call_4532,call_4551,call_4577,const_4578,const_4579,const_4580,])
output2 = relay.Tuple([call_4533,call_4552,call_4581,const_4578,const_4579,const_4580,])
func_4585 = relay.Function([], output)
mod['func_4585'] = func_4585
mod = relay.transform.InferType()(mod)
mutated_mod['func_4585'] = func_4585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4585_call = mutated_mod.get_global_var('func_4585')
call_4586 = func_4585_call()
output = call_4586
func_4587 = relay.Function([], output)
mutated_mod['func_4587'] = func_4587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2050_call = mod.get_global_var('func_2050')
func_2052_call = mutated_mod.get_global_var('func_2052')
call_4633 = relay.TupleGetItem(func_2050_call(), 0)
call_4634 = relay.TupleGetItem(func_2052_call(), 0)
var_4637 = relay.var("var_4637", dtype = "int16", shape = (9, 6, 15))#candidate|4637|(9, 6, 15)|var|int16
bop_4638 = relay.power(call_4633.astype('float64'), relay.reshape(var_4637.astype('float64'), relay.shape_of(call_4633))) # shape=(9, 6, 15)
bop_4641 = relay.power(call_4634.astype('float64'), relay.reshape(var_4637.astype('float64'), relay.shape_of(call_4634))) # shape=(9, 6, 15)
uop_4664 = relay.acosh(var_4637.astype('float32')) # shape=(9, 6, 15)
output = relay.Tuple([bop_4638,uop_4664,])
output2 = relay.Tuple([bop_4641,uop_4664,])
func_4667 = relay.Function([var_4637,], output)
mod['func_4667'] = func_4667
mod = relay.transform.InferType()(mod)
var_4668 = relay.var("var_4668", dtype = "int16", shape = (9, 6, 15))#candidate|4668|(9, 6, 15)|var|int16
output = func_4667(var_4668)
func_4669 = relay.Function([var_4668], output)
mutated_mod['func_4669'] = func_4669
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4585_call = mod.get_global_var('func_4585')
func_4587_call = mutated_mod.get_global_var('func_4587')
call_4671 = relay.TupleGetItem(func_4585_call(), 5)
call_4672 = relay.TupleGetItem(func_4587_call(), 5)
uop_4679 = relay.acosh(call_4671.astype('float64')) # shape=(143, 10)
uop_4681 = relay.acosh(call_4672.astype('float64')) # shape=(143, 10)
uop_4682 = relay.sin(uop_4679.astype('float64')) # shape=(143, 10)
uop_4684 = relay.sin(uop_4681.astype('float64')) # shape=(143, 10)
func_4227_call = mod.get_global_var('func_4227')
func_4229_call = mutated_mod.get_global_var('func_4229')
const_4688 = relay.const([-5.533139,9.948198,-4.582215,7.666060,-4.307234,-1.357258,-7.856258,-1.944997,-9.443978,-2.482149,-8.851457,-4.490556,7.637873,8.654100,-5.571947,7.090245,-5.995579,-0.584645,-4.842489,8.285384,-1.177061,5.747372,-2.132197,1.350540,1.110435,6.402017,-3.124453,-1.950031,-7.223226,-4.008869,-0.956821,2.643436,8.025938,0.170494,6.633452,-3.515005,-9.285164,4.963257,4.536856,9.617397,-6.181857,-4.980681,-7.186085,-8.946834,-0.587284,-1.589957,-6.818619,6.583494,7.608069,1.556505,-4.759331,-6.610960,3.643587,8.867618,-5.605415,7.036666,7.483374,7.214744,-3.538805,-7.507899,-5.035674,1.819316,5.188261,-2.538061,7.747298,9.938281,7.463922,-7.889337,4.434794,6.359295,1.361160,2.124411,-8.401877,-8.679769,-6.151861,-7.740515,9.155573,-6.042011,-9.327720,9.695544,-5.147963,9.517653,-8.016346,4.137422,-4.361938,1.867871,9.538667,-2.744707,4.707222,9.012263,-2.071213,8.343367,4.336280,-6.268422,-8.558484,-5.287542,-4.431476,0.243334,8.243646,5.875530,0.192572,4.743966,4.545928,7.726446,9.103027,-4.417031,-2.900969,8.603984,4.983579,4.041930,-4.305929,3.189610,-6.798046,2.505007,8.373032,1.679284,-4.221265,0.304818,-2.750032,-0.785310,2.484795,8.677207,-2.532347,-7.304034,-6.391531,-6.287077,5.640693,-2.349414,-0.219440,3.677766,-9.385159,-5.429095,-0.554126,-6.705119,-1.436915,-1.482853,6.399135,0.102363,-1.622094,-7.848978,-2.291933,6.791642,-5.209559,9.058860,-4.862369,-4.052108,7.717851,7.209428,-5.439795,-7.078193,-9.422581,6.700932,8.274030,-8.108468,-8.091925,-6.858874,5.542111,-4.679459,5.261717,-8.383230,-2.148633,-7.639601,0.540120,2.530055,0.750011,9.709016,-6.112145,-7.295038,1.515917,-8.876751,3.431397,-4.215630,-4.134050,-3.288811,-9.257671,6.237287,7.273699,-5.815722,1.086467,-9.618304,-6.335899,7.150991,-3.404012,-0.104247,-6.752327,4.985247,6.551364,-1.386579,-6.841817,-9.127696,2.561971,-2.152437,4.820154,8.463387,-7.214095,-0.456698,6.425786,-8.268057,5.835688,-2.938429,7.888898,6.658734,6.780998,-1.148758,-1.408263,6.065809,3.580516,-9.531668,-0.692922,1.119430,2.650810,0.783465,5.729762,7.510163,-5.355468,-3.339728,3.694232,4.639974,8.429654,5.922608,-5.681978,6.713386,-8.921900,-8.546320,-9.504795,8.141834,6.399510,-7.838849,-2.905055,6.459228,4.786342,-9.999704,6.213998,-4.109451,-4.050913,-0.458674,-2.547909,-9.936647,5.476014,9.921502,-4.887388,-1.688483,-0.460660,1.641038,-3.297658,6.848764,-5.749326,-0.545234,1.383552,7.920596,-5.960264,-5.941634,5.527639,3.395838,-0.144848,-7.559378,-0.954028,-8.954181,-4.231943,5.420958,8.354376,-2.883237,8.145175,6.302342,0.658190,-1.367791,9.803437,-4.044317,0.798727,0.505135,9.498464,-9.438165,-3.524662,-9.311198,-1.681404,2.197662,-8.508070,-6.615151,4.232985,6.262824,-7.131159,-8.046235,-1.859797,-8.331018,8.101979,9.836088,-0.129812,-4.347602,0.464022,7.202577,-7.551287,1.485316,-6.862276,-1.541942,3.907341,4.115129,2.337416,2.705320,-3.612403,7.049948,-2.006629,-5.355188,4.168725,6.676581,8.979696,-9.396240,-1.711770,9.665476,7.616378,-6.196519,3.717116,-1.721352,9.562874,-2.815007,-7.886382], dtype = "float32")#candidate|4688|(315,)|const|float32
call_4687 = relay.TupleGetItem(func_4227_call(relay.reshape(const_4688.astype('float32'), [5, 63])), 2)
call_4689 = relay.TupleGetItem(func_4229_call(relay.reshape(const_4688.astype('float32'), [5, 63])), 2)
func_4204_call = mod.get_global_var('func_4204')
func_4206_call = mutated_mod.get_global_var('func_4206')
var_4691 = relay.var("var_4691", dtype = "uint16", shape = (980,))#candidate|4691|(980,)|var|uint16
call_4690 = relay.TupleGetItem(func_4204_call(relay.reshape(var_4691.astype('uint16'), [14, 5, 14])), 0)
call_4692 = relay.TupleGetItem(func_4206_call(relay.reshape(var_4691.astype('uint16'), [14, 5, 14])), 0)
bop_4701 = relay.greater(uop_4682.astype('bool'), relay.reshape(call_4671.astype('bool'), relay.shape_of(uop_4682))) # shape=(143, 10)
bop_4704 = relay.greater(uop_4684.astype('bool'), relay.reshape(call_4672.astype('bool'), relay.shape_of(uop_4684))) # shape=(143, 10)
func_1392_call = mod.get_global_var('func_1392')
func_1398_call = mutated_mod.get_global_var('func_1398')
var_4718 = relay.var("var_4718", dtype = "float32", shape = (640,))#candidate|4718|(640,)|var|float32
const_4719 = relay.const([7.170893,5.527991,-9.675695,-1.387550,2.853532,-4.974573,0.748018,-2.938774,-6.089969,9.082456,2.424305,-0.018407,-7.574264,-1.680884,3.752657,-4.057761,4.261836,-7.625646,9.549144,-8.494525,1.194268,6.155919,4.480840,5.021467,-6.462475,-9.721954,5.422641,7.913154,-0.867299,0.822062,7.850751,-3.738578,-5.919553,-3.360544,7.374760,-7.147726,5.516957,2.235922,5.146749,8.393542,7.649865,2.211764,-2.907642,-5.246120,6.818609,1.786778,5.698357,0.056876,-2.794732,9.598266,4.058696,-8.129212,-3.018073,5.925673,-1.702719,6.436302], dtype = "float64")#candidate|4719|(56,)|const|float64
call_4717 = relay.TupleGetItem(func_1392_call(relay.reshape(var_4718.astype('float32'), [10, 8, 8]), relay.reshape(const_4719.astype('float64'), [56,]), relay.reshape(var_4718.astype('float32'), [10, 8, 8]), relay.reshape(var_4718.astype('float32'), [10, 8, 8]), ), 4)
call_4720 = relay.TupleGetItem(func_1398_call(relay.reshape(var_4718.astype('float32'), [10, 8, 8]), relay.reshape(const_4719.astype('float64'), [56,]), relay.reshape(var_4718.astype('float32'), [10, 8, 8]), relay.reshape(var_4718.astype('float32'), [10, 8, 8]), ), 4)
func_2770_call = mod.get_global_var('func_2770')
func_2773_call = mutated_mod.get_global_var('func_2773')
const_4726 = relay.const([[-6.173191,-7.422986,0.830203,-7.640715,2.080585,7.975111,9.471995,-9.216217,-2.958690,-2.580386,8.738363,5.081713,3.466645,2.951248,8.522991,2.763213,9.820701,-0.053532,-3.116586,6.212540,5.215923,0.875331,8.027232,0.560751,9.770801,-0.890633,4.752086,-0.060353],[-2.759437,5.136776,-6.140691,-4.984647,-9.332266,-8.718899,2.524064,-0.753883,-3.255370,-9.892853,-1.160575,0.227684,1.250561,-0.671387,-5.329887,-8.898643,-3.938471,-0.523497,-3.204155,-2.223355,5.313067,6.255146,-8.148991,1.958800,0.398894,2.203478,5.075618,-6.983595],[-4.607154,-2.937709,4.187207,6.211434,-8.093804,-7.070795,-2.529687,7.467915,-7.873672,8.079555,4.389077,6.556903,-8.403091,-4.204437,-2.746192,-7.967386,7.924228,0.222794,6.004879,9.007812,-0.177973,-3.689811,-5.106440,-7.517200,-2.996935,-7.909632,-2.422266,5.605955],[-4.075991,-6.349752,-6.706664,3.360174,5.313592,-6.565172,9.137956,-1.931094,-2.827980,3.202010,1.168598,6.026481,4.797602,3.673175,4.674053,-6.608127,-8.104250,-4.483005,3.135328,-7.871672,-8.980427,-6.811987,-1.482972,2.280960,8.351389,-7.378950,-6.946309,6.322642],[7.440170,6.094714,6.116308,-7.246714,6.163557,-7.493258,-7.444279,9.057989,7.885548,-3.270832,9.659696,-2.997962,-7.307591,9.729233,-7.817838,-6.367863,9.757614,0.949215,6.619750,-5.543143,-3.302498,-8.264165,8.051652,-9.211040,0.521966,6.200998,-4.875162,2.710183],[-9.369773,-2.801920,2.729581,-7.384323,-5.459510,3.973441,9.403885,-3.016576,-9.470491,-5.682854,1.062611,3.191171,4.109139,7.866707,-1.249173,8.003691,5.435749,-9.331175,-5.759955,6.669705,-0.049773,9.203883,-9.602205,2.918688,-0.993763,-6.773395,-7.821777,-8.106178],[-1.268902,-3.006569,-7.626005,7.796075,8.158713,2.661602,-4.293377,-1.776004,9.507157,-9.818807,-6.531582,3.561833,9.796069,-0.058003,6.569615,-3.304134,-9.598024,-8.589802,-5.391897,-7.330720,4.698707,0.029390,-1.070013,-4.866265,6.504727,8.357393,1.072193,-0.791104],[-0.929460,-9.368348,6.531370,-4.526385,6.012726,5.964994,-5.154224,6.856171,6.846384,-3.392988,9.143797,7.481972,6.357835,-5.237845,8.286790,-9.925218,5.730572,6.663669,8.439171,-3.059844,9.313033,-0.308356,4.334443,0.667645,-9.228893,-5.307939,2.714859,9.214039]], dtype = "float32")#candidate|4726|(8, 28)|const|float32
call_4725 = relay.TupleGetItem(func_2770_call(relay.reshape(const_4726.astype('float32'), [14, 16, 1])), 1)
call_4727 = relay.TupleGetItem(func_2773_call(relay.reshape(const_4726.astype('float32'), [14, 16, 1])), 1)
var_4732 = relay.var("var_4732", dtype = "bool", shape = (143, 10))#candidate|4732|(143, 10)|var|bool
bop_4733 = relay.greater_equal(bop_4701.astype('bool'), relay.reshape(var_4732.astype('bool'), relay.shape_of(bop_4701))) # shape=(143, 10)
bop_4736 = relay.greater_equal(bop_4704.astype('bool'), relay.reshape(var_4732.astype('bool'), relay.shape_of(bop_4704))) # shape=(143, 10)
func_1115_call = mod.get_global_var('func_1115')
func_1118_call = mutated_mod.get_global_var('func_1118')
call_4737 = relay.TupleGetItem(func_1115_call(relay.reshape(call_4717.astype('int16'), [143, 10])), 3)
call_4738 = relay.TupleGetItem(func_1118_call(relay.reshape(call_4717.astype('int16'), [143, 10])), 3)
uop_4739 = relay.exp(uop_4679.astype('float64')) # shape=(143, 10)
uop_4741 = relay.exp(uop_4681.astype('float64')) # shape=(143, 10)
uop_4744 = relay.erf(bop_4733.astype('float32')) # shape=(143, 10)
uop_4746 = relay.erf(bop_4736.astype('float32')) # shape=(143, 10)
output = relay.Tuple([call_4687,const_4688,call_4690,var_4691,call_4717,var_4718,const_4719,call_4725,const_4726,call_4737,uop_4739,uop_4744,])
output2 = relay.Tuple([call_4689,const_4688,call_4692,var_4691,call_4720,var_4718,const_4719,call_4727,const_4726,call_4738,uop_4741,uop_4746,])
F = relay.Function([var_4691,var_4718,var_4732,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_4691,var_4718,var_4732,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

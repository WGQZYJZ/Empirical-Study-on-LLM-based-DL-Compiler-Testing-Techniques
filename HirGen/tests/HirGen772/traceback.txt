==========mod==========
#[version = "0.0.5"]
def @func_1171() -> (Tensor[(5, 14, 13), float32],) {
  %0 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1 = %0.2;
  (%1,)
}

def @func_3103() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %2 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %3 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %4 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %5 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %6 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %7 = %2.1;
  %8 = %3.0;
  %9 = %4.0;
  %10 = %5.0;
  (%6, %7, %8, %9, %10)
}

def @func_2554() -> Tensor[(5, 14, 13), float32] {
  %11 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %11.0
}

def @func_15613() -> Tensor[(5, 14, 13), float32] {
  %12 = @func_10437() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32], Tensor[(5, 14, 13), float32]) */;
  %12.1
}

def @func_18573(%var_18571: Tensor[(16), float64]) -> (Tensor[(9, 9, 15), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64]) {
  %13 = @func_5094() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %14 = cast(%var_18571, dtype="float64") /* ty=Tensor[(16), float64] */;
  %15 = cast(%var_18571, dtype="float64") /* ty=Tensor[(16), float64] */;
  %16 = reshape(%14, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
  %17 = reshape(%15, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
  %18 = @func_7126(%16, %17) /* ty=(Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) */;
  %19 = %13.0;
  %20 = %18.1;
  (%19, %20, %var_18571)
}

def @func_1661() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) {
  %21 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %22 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 12), float32] */;
  %23 = acosh(%22) /* ty=Tensor[(14, 5, 12), float32] */;
  %24 = cast(meta[relay.Constant][0] /* ty=Tensor[(14, 5, 12), float32] */, dtype="uint32") /* ty=Tensor[(14, 5, 12), uint32] */;
  %25 = shape_of(%23, dtype="int32") /* ty=Tensor[(3), int32] */;
  %26 = cast(%23, dtype="uint32") /* ty=Tensor[(14, 5, 12), uint32] */;
  %27 = dyn.reshape(%24, %25, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %28 = @func_1620() /* ty=Tensor[(5, 14, 13), float32] */;
  %29 = %21.0;
  %30 = left_shift(%26, %27) /* ty=Tensor[(14, 5, 12), uint32] */;
  %31 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  (%28, %29, %30, %31)
}

def @func_8557() -> Tensor[(5, 14, 13), float32] {
  %32 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %32.1
}

def @func_3281() -> Tensor[(5, 11, 12), float32] {
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 12), float32] */;
  cosh(%33) /* ty=Tensor[(5, 11, 12), float32] */
}

def @func_9184(%var_9181: Tensor[(10, 12, 4), float32]) -> Tensor[(10, 12, 4), float32] {
  %34 = cast(%var_9181, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
  asin(%34) /* ty=Tensor[(10, 12, 4), float32] */
}

def @func_14040() -> Tensor[(5, 14, 13), float64] {
  %35 = @func_11014() /* ty=(Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %35.1
}

def @func_10290(%var_10287: Tensor[(4, 6, 9), float32]) -> (Tensor[(4, 6, 9), float32],) {
  %36 = cast(%var_10287, dtype="float32") /* ty=Tensor[(4, 6, 9), float32] */;
  %37 = acos(%36) /* ty=Tensor[(4, 6, 9), float32] */;
  (%37,)
}

def @func_509() -> Tensor[(5, 14, 13), float32] {
  %38 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %38.0
}

def @func_12476() -> Tensor[(5, 14, 13), float32] {
  %39 = @func_6310() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %39.1
}

def @func_3544(%var_3541: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) {
  %40 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %41 = cast(%var_3541, dtype="int32") /* ty=Tensor[(480), int32] */;
  %42 = cast(%var_3541, dtype="int32") /* ty=Tensor[(480), int32] */;
  %43 = reshape(%41, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %44 = reshape(%42, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %45 = @func_926(%43, %44) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %46 = %40.0;
  %47 = %45.1;
  (%46, %47, %var_3541)
}

def @func_3788(%var_3766: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(2, 240), int32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %48 = cast(%var_3766, dtype="bool") /* ty=Tensor[(700), bool] */;
  %49 = reshape(%48, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
  %50 = @func_3152() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 240), int32] */, dtype="int32") /* ty=Tensor[(2, 240), int32] */;
  %52 = reshape(%51, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %53 = @func_3491(%52) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %54 = cast(meta[relay.Constant][3] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %55 = cast(meta[relay.Constant][3] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %56 = reshape(%54, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %57 = reshape(%55, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %58 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
  %59 = @func_2727(%49) /* ty=Tensor[(5, 10, 14), bool] */;
  %60 = %50.0;
  %61 = %53.2;
  %62 = @func_161(%56, %57) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%58, %59, %var_3766, %60, %61, meta[relay.Constant][2] /* ty=Tensor[(2, 240), int32] */, %62, meta[relay.Constant][3] /* ty=Tensor[(1215), uint8] */)
}

def @func_10116() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) {
  %63 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %64 = @func_3232() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */;
  %65 = @func_9239() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %66 = %63.0;
  %67 = @func_7549() /* ty=Tensor[(5, 14, 13), float32] */;
  %68 = %64.1;
  %69 = %65.0;
  %70 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
  (%66, %67, %68, %69, %70)
}

def @func_10623() -> (Tensor[(5, 14, 13), float32],) {
  %71 = @func_4382() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %72 = %71.0;
  (%72,)
}

def @func_15961() -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %73 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %74 = @func_8504() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %75 = %73.3;
  %76 = %74.1;
  %77 = @func_8625() /* ty=Tensor[(5, 14, 13), float32] */;
  (%75, %76, %77)
}

def @func_18367() -> (Tensor[(480), int32],) {
  %78 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %79 = %78.2;
  (%79,)
}

def @func_15529() -> Tensor[(5, 14, 13), float32] {
  @func_11416() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_15975() -> Tensor[(5, 14, 13), float32] {
  @func_3842() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_409() -> (Tensor[(5, 14, 13), float32],) {
  %80 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
  (%80,)
}

def @func_14440() -> (Tensor[(1215), uint8],) {
  %81 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %82 = %81.2;
  (%82,)
}

def @func_2727(%var_2721: Tensor[(5, 10, 14), bool]) -> Tensor[(5, 10, 14), bool] {
  %83 = cast(%var_2721, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %84 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(5, 10, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %85 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 10, 14), bool] */, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
  %86 = dyn.reshape(%83, %84, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%85, %86) /* ty=Tensor[(5, 10, 14), bool] */
}

def @func_5301(%var_5262: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32]) {
  %87 = @func_5094() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %88 = cast(%var_5262, dtype="bool") /* ty=Tensor[(700), bool] */;
  %89 = reshape(%88, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %90 = @func_3788(%89) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(2, 240), int32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %91 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %92 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
  %93 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
  %94 = %87.0;
  %95 = %90.0;
  %96 = %91.1;
  (%92, %93, %94, %95, %var_5262, %96)
}

def @func_3232() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) {
  %97 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %98 = %97.0;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  %100 = sinh(%99) /* ty=Tensor[(9, 9, 15), float64] */;
  %101 = cast(%100, dtype="float32") /* ty=Tensor[(9, 9, 15), float32] */;
  %102 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %103 = asin(%101) /* ty=Tensor[(9, 9, 15), float32] */;
  (%102, %103)
}

def @func_9775() -> (Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) {
  %104 = @func_3889() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) */;
  %105 = @func_7152() /* ty=Tensor[(9, 9, 15), float32] */;
  %106 = %104.3;
  (%105, %106)
}

def @func_12311() -> (Tensor[(9, 9, 15), float32],) {
  %107 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %108 = %107.0;
  (%108,)
}

def @func_5384() -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %109 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %110 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %111 = %109.3;
  %112 = @func_5215() /* ty=Tensor[(5, 14, 13), float32] */;
  %113 = %110.4;
  (%111, %112, %113)
}

def @func_11038(%var_11030: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %114 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %115 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %116 = cast(%var_11030, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %117 = reshape(%116, newshape=[27, 45]) /* ty=Tensor[(27, 45), uint8] */;
  %118 = @func_4927(%117) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) */;
  %119 = @func_2578() /* ty=Tensor[(5, 14, 13), float32] */;
  %120 = %114.0;
  %121 = %115.1;
  %122 = %118.0;
  (%119, %120, %121, %122, %var_11030)
}

def @func_8625() -> Tensor[(5, 14, 13), float32] {
  @func_359() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2326() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %123 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %124 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %125 = %123.0;
  (%124, %125)
}

def @func_8975() -> (Tensor[(5, 14, 13), float32],) {
  %126 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  (%126,)
}

def @func_18022(%var_18013: Tensor[(81, 15), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %127 = @func_7022() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %128 = @func_14700() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %129 = cast(%var_18013, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %130 = reshape(%129, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %131 = @func_11038(%130) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %132 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  %133 = %127.0;
  %134 = %128.0;
  %135 = %131.3;
  (%132, %133, %134, %135, %var_18013)
}

def @func_16753() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %136 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %137 = %136.0;
  %138 = @func_9900() /* ty=Tensor[(5, 14, 13), float32] */;
  (%137, %138)
}

def @func_12289() -> Tensor[(5, 14, 13), float32] {
  %139 = @func_9540() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %139.0
}

def @func_13253() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %140 = cast(meta[relay.Constant][5] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %141 = reshape(%140, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
  %142 = @func_2045(%141) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
  %143 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  %144 = %142.3;
  (%143, %144, meta[relay.Constant][5] /* ty=Tensor[(1215), uint8] */)
}

def @func_16012() -> (Tensor[(9, 9, 15), float32],) {
  %145 = @func_12311() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %146 = %145.0;
  (%146,)
}

def @func_10183(%var_10144: Tensor[(1, 14, 8), float32]) -> (Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32]) {
  %147 = cast(%var_10144, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %148 = rsqrt(%147) /* ty=Tensor[(1, 14, 8), float32] */;
  %149 = cast(%148, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %150 = log2(%149) /* ty=Tensor[(1, 14, 8), float32] */;
  %151 = cast(%148, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %152 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %153 = cast(%150, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %155 = floor_divide(%153, %154) /* ty=Tensor[(?, 14, 8), float32] */;
  %156 = cast(%155, dtype="uint32") /* ty=Tensor[(?, 14, 8), uint32] */;
  %157 = shape_of(%150, dtype="int32") /* ty=Tensor[(3), int32] */;
  %158 = cast(%150, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %159 = dyn.reshape(%156, %157, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %160 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %161 = left_shift(%158, %159) /* ty=Tensor[(?, 14, 8), uint32] */;
  (%160, %161)
}

def @func_11450() -> (Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) {
  %162 = cast(meta[relay.Constant][6] /* ty=Tensor[(7, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 6), float32] */;
  %163 = sqrt(%162) /* ty=Tensor[(7, 3, 6), float32] */;
  %164 = cast(%163, dtype="float32") /* ty=Tensor[(7, 3, 6), float32] */;
  %165 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %166 = sinh(%164) /* ty=Tensor[(7, 3, 6), float32] */;
  %167 = %165.1;
  (%166, %167)
}

def @func_12729() -> (Tensor[(5, 6, 16), float32],) {
  %168 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %169 = %168.1;
  (%169,)
}

def @func_6007(%var_5979: Tensor[(2, 240), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int32], Tensor[(16, 6, 5), float32]) {
  %170 = cast(%var_5979, dtype="int32") /* ty=Tensor[(2, 240), int32] */;
  %171 = reshape(%170, newshape=[1, 480]) /* ty=Tensor[(1, 480), int32] */;
  %172 = @func_5624(%171) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) */;
  %173 = @func_4311() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %174 = @func_5645() /* ty=Tensor[(5, 14, 13), float32] */;
  %175 = %172.0;
  %176 = %173.2;
  (%174, %175, %var_5979, %176)
}

def @func_16814() -> Tensor[(5, 14, 13), float32] {
  @func_11188() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_6648(%var_6598: Tensor[(4, 7, 12), int8], %var_6599: Tensor[(4, 7, 12), int8], %var_6611: Tensor[(480), int32], %var_6640: Tensor[(1215), uint8]) -> (Tensor[(4, 7, 12), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) {
  %177 = cast(%var_6599, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
  %178 = shape_of(%var_6598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %179 = cast(%var_6598, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
  %180 = dyn.reshape(%177, %178, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %181 = cast(%var_6611, dtype="int32") /* ty=Tensor[(480), int32] */;
  %182 = reshape(%181, newshape=[1, 480]) /* ty=Tensor[(1, 480), int32] */;
  %183 = @func_5624(%182) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) */;
  %184 = cast(%var_6640, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %185 = reshape(%184, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %186 = @func_764(%185) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %187 = maximum(%179, %180) /* ty=Tensor[(4, 7, 12), int8] */;
  %188 = %183.1;
  %189 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %190 = %186.2;
  (%187, %188, %var_6611, %189, %190, %var_6640)
}

def @func_15169(%var_15165: Tensor[(9, 13, 8), int8]) -> (Tensor[(9, 13, 8), int8],) {
  %191 = cast(%var_15165, dtype="int8") /* ty=Tensor[(9, 13, 8), int8] */;
  %192 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(9, 13, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(meta[relay.Constant][7] /* ty=Tensor[(9, 13, 8), int8] */, dtype="int8") /* ty=Tensor[(9, 13, 8), int8] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %195 = right_shift(%193, %194) /* ty=Tensor[(9, 13, 8), int8] */;
  (%195,)
}

def @func_15430() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %196 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %197 = %196.0;
  %198 = @func_10839() /* ty=Tensor[(5, 14, 13), float32] */;
  (%197, %198)
}

def @func_5790() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %199 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %200 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %201 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %202 = %201.0;
  %203 = cast(%202, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %204 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %205 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %206 = %199.0;
  %207 = %200.0;
  %208 = @func_3292() /* ty=Tensor[(9, 9, 15), float32] */;
  %209 = cosh(%203) /* ty=Tensor[(5, 14, 13), float64] */;
  %210 = %204.0;
  (%205, %206, %207, %208, %209, %210)
}

def @func_13577() -> Tensor[(5, 14, 13), float32] {
  @func_4990() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_8011() -> (Tensor[(5, 14, 13), float32],) {
  %211 = @func_3842() /* ty=Tensor[(5, 14, 13), float32] */;
  (%211,)
}

def @func_9096(%var_9082: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %212 = @func_8888() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %213 = cast(%var_9082, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %214 = reshape(%213, newshape=[405, 3]) /* ty=Tensor[(405, 3), uint8] */;
  %215 = @func_5853(%214) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) */;
  %216 = cast(%var_9082, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %217 = reshape(%216, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %218 = @func_1259(%217) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) */;
  %219 = %212.1;
  %220 = %215.1;
  %221 = %218.2;
  (%219, %220, %var_9082, %221)
}

def @func_14106() -> Tensor[(5, 14, 13), float32] {
  @func_12289() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_9596() -> Tensor[(5, 14, 13), float32] {
  @func_5215() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_5142() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %222 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %223 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %224 = %222.0;
  %225 = %223.2;
  (%224, %225)
}

def @func_17421() -> (Tensor[(9, 9, 15), float32],) {
  %226 = @func_12598() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %227 = %226.0;
  (%227,)
}

def @func_9747() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %228 = @func_4382() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %229 = @func_9540() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %230 = %228.0;
  %231 = %229.0;
  (%230, %231)
}

def @func_10058() -> (Tensor[(5, 14, 13), float32],) {
  %232 = @func_2800() /* ty=Tensor[(5, 14, 13), float32] */;
  (%232,)
}

def @func_16588() -> (Tensor[(9, 9, 15), float32],) {
  %233 = @func_5094() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %234 = %233.0;
  (%234,)
}

def @func_9216() -> (Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) {
  %235 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %236 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %237 = %235.2;
  %238 = %236.1;
  (%237, %238)
}

def @func_2488() -> Tensor[(5, 14, 13), float32] {
  %239 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %239.2
}

def @func_15362() -> Tensor[(1215), float32] {
  %240 = @func_14440() /* ty=(Tensor[(1215), uint8],) */;
  %241 = %240.0;
  %242 = cast(%241, dtype="float32") /* ty=Tensor[(1215), float32] */;
  asin(%242) /* ty=Tensor[(1215), float32] */
}

def @func_1859() -> Tensor[(5, 14, 13), float32] {
  %243 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %243.1
}

def @func_7934() -> Tensor[(5, 14, 13), float32] {
  %244 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %244.0
}

def @func_6235(%var_6232: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
  %245 = @func_3292() /* ty=Tensor[(9, 9, 15), float32] */;
  %246 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(9, 9, 15), bool] */;
  %247 = shape_of(%245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %248 = cast(%245, dtype="bool") /* ty=Tensor[(9, 9, 15), bool] */;
  %249 = dyn.reshape(%246, %247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %250 = cast(%var_6232, dtype="int32") /* ty=Tensor[(480), int32] */;
  %251 = reshape(%250, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %252 = @func_3544(%251) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
  %253 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
  %254 = not_equal(%248, %249) /* ty=Tensor[(9, 9, 15), bool] */;
  %255 = %252.0;
  (%253, %254, %255, %var_6232)
}

def @func_12688() -> (Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) {
  %256 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
  %257 = %256.2;
  %258 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
  (%257, %258)
}

def @func_12522() -> Tensor[(5, 14, 13), float32] {
  @func_8704() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_11278() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %259 = @func_10032() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %260 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %261 = %259.0;
  %262 = %260.0;
  (%261, %262)
}

def @func_10312() -> (Tensor[(5, 14, 13), float32],) {
  %263 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %264 = %263.0;
  (%264,)
}

def @func_11124() -> (Tensor[(5, 11, 12), float32],) {
  %265 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
  (%265,)
}

def @func_4109() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %266 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %267 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %268 = %266.0;
  %269 = %267.0;
  (%268, %269)
}

def @func_9540() -> (Tensor[(5, 14, 13), float32],) {
  %270 = @func_8888() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %271 = %270.1;
  (%271,)
}

def @func_13355() -> (Tensor[(480, 1), float32],) {
  %272 = @func_9805() /* ty=Tensor[(480, 1), float32] */;
  (%272,)
}

def @func_11375() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %273 = @func_7934() /* ty=Tensor[(5, 14, 13), float32] */;
  %274 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
  %275 = @func_9859() /* ty=Tensor[(5, 14, 13), float32] */;
  (%273, %274, %275)
}

def @func_10032() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %276 = @func_9747() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %277 = %276.1;
  %278 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  (%277, %278)
}

def @func_12329(%var_12319: Tensor[(8, 9, 7), int64], %var_12320: Tensor[(8, 9, 7), int64]) -> Tensor[(8, 9, 7), int64] {
  %279 = cast(%var_12320, dtype="int64") /* ty=Tensor[(8, 9, 7), int64] */;
  %280 = shape_of(%var_12319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%var_12319, dtype="int64") /* ty=Tensor[(8, 9, 7), int64] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  add(%281, %282) /* ty=Tensor[(8, 9, 7), int64] */
}

def @func_13709() -> Tensor[(5, 14, 13), float32] {
  %283 = @func_10058() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %283.0
}

def @func_2660() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %284 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %285 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %286 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %287 = %284.0;
  %288 = %285.0;
  %289 = %286.0;
  (%287, %288, %289)
}

def @func_8078() -> (Tensor[(5, 14, 13), float32],) {
  %290 = @func_2905() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %291 = %290.0;
  (%291,)
}

def @func_18382() -> Tensor[(5, 14, 13), float32] {
  %292 = @func_16971() /* ty=(Tensor[(1215), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %292.1
}

def @func_14944() -> (Tensor[(5, 14, 13), float32],) {
  %293 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %294 = %293.0;
  (%294,)
}

def @func_5645() -> Tensor[(5, 14, 13), float32] {
  %295 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %295.3
}

def @func_14825() -> (Tensor[(5, 14, 13), float32],) {
  %296 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  (%296,)
}

def @func_1591() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %297 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %298 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %299 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %300 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %301 = %297.0;
  %302 = %298.2;
  %303 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
  %304 = %299.0;
  %305 = %300.0;
  (%301, %302, %303, %304, %305)
}

def @func_5582(%var_5541: Tensor[(1, 480), int64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(1, 480), int64], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 6, 16), int64]) {
  %306 = @func_4382() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %307 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %308 = cast(%var_5541, dtype="int64") /* ty=Tensor[(1, 480), int64] */;
  %309 = reshape(%308, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %310 = @func_1006(%309) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %311 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %312 = %310.1;
  %313 = cast(%312, dtype="int64") /* ty=Tensor[(5, 6, 16), int64] */;
  %314 = reshape(%313, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %315 = @func_1006(%314) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %316 = %306.0;
  %317 = %307.0;
  %318 = @func_3292() /* ty=Tensor[(9, 9, 15), float32] */;
  %319 = %311.0;
  %320 = %315.0;
  (%316, %317, %312, %var_5541, %318, %319, %320)
}

def @func_17637() -> (Tensor[(8, 9, 7), uint32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 140), bool]) {
  %321 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(8, 9, 7), uint32] */;
  %322 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(8, 9, 7), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %323 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(8, 9, 7), uint32] */;
  %324 = dyn.reshape(%321, %322, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %325 = @func_14700() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %326 = cast(meta[relay.Constant][11] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %327 = reshape(%326, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %328 = @func_17339(%327) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8]) */;
  %329 = cast(meta[relay.Constant][12] /* ty=Tensor[(5, 140), bool] */, dtype="bool") /* ty=Tensor[(5, 140), bool] */;
  %330 = reshape(%329, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %331 = @func_2896(%330) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %332 = logical_xor(%323, %324) /* ty=Tensor[(8, 9, 7), uint32] */;
  %333 = %325.0;
  %334 = %328.1;
  %335 = %331.1;
  (%332, %333, %334, meta[relay.Constant][11] /* ty=Tensor[(1215), uint8] */, %335, meta[relay.Constant][12] /* ty=Tensor[(5, 140), bool] */)
}

def @func_8704() -> Tensor[(5, 14, 13), float32] {
  @func_7934() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_18708() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %336 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %337 = @func_13910() /* ty=Tensor[(5, 14, 13), float32] */;
  %338 = %336.0;
  (%337, %338)
}

def @func_1406() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %339 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %340 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %341 = %339.1;
  %342 = %340.0;
  (%341, %342)
}

def @func_8263() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %343 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %344 = cast(meta[relay.Constant][13] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %345 = cast(meta[relay.Constant][13] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %346 = reshape(%344, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %347 = reshape(%345, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %348 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %349 = %343.1;
  %350 = @func_161(%346, %347) /* ty=Tensor[(9, 9, 15), uint8] */;
  %351 = %348.0;
  (%349, %350, meta[relay.Constant][13] /* ty=Tensor[(1215), uint8] */, %351)
}

def @func_17901(%var_17834: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) {
  %352 = @func_14213() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %353 = @func_17731() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %354 = cast(%var_17834, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %355 = reshape(%354, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %356 = @func_764(%355) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %357 = %356.1;
  %358 = cast(%357, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  %359 = @func_8857() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %360 = @func_9502() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %361 = @func_12311() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %362 = %352.0;
  %363 = %353.0;
  %364 = log10(%358) /* ty=Tensor[(9, 9, 15), float64] */;
  %365 = %359.0;
  %366 = %360.0;
  %367 = %361.0;
  (%362, %var_17834, %363, %364, %365, %366, %367)
}

def @func_17731() -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %368 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %369 = @func_15961() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %370 = @func_14093() /* ty=Tensor[(5, 14, 13), float32] */;
  %371 = %368.2;
  %372 = %369.1;
  (%370, %371, %372)
}

def @func_11416() -> Tensor[(5, 14, 13), float32] {
  %373 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %373.0
}

def @func_10717() -> (Tensor[(5, 14, 13), float32],) {
  %374 = @func_6844() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %375 = %374.1;
  (%375,)
}

def @func_834() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %376 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %377 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %378 = %376.0;
  %379 = %377.0;
  %380 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  (%378, %379, %380)
}

def @func_9645() -> Tensor[(5, 14, 13), float32] {
  %381 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %381.0
}

def @func_17436() -> (Tensor[(9, 9, 15), uint8],) {
  %382 = @func_5384() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %383 = %382.0;
  (%383,)
}

def @func_9712() -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %384 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %385 = @func_8591() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %386 = %384.0;
  %387 = %385.0;
  (%386, %387)
}

def @func_17069() -> Tensor[(5, 14, 13), float32] {
  %388 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %388.2
}

def @func_2598() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %389 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %390 = cast(meta[relay.Constant][14] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %391 = reshape(%390, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %392 = @func_764(%391) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %393 = %389.2;
  %394 = %392.0;
  (%393, %394, meta[relay.Constant][14] /* ty=Tensor[(1215), uint8] */)
}

def @func_11779() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480, 1), float64]) {
  %395 = @func_10976() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %396 = @func_6310() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %397 = @func_9540() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %398 = @func_9805() /* ty=Tensor[(480, 1), float32] */;
  %399 = cast(%398, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
  %400 = cos(%399) /* ty=Tensor[(480, 1), float64] */;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
  %402 = %395.1;
  %403 = %396.0;
  %404 = @func_11416() /* ty=Tensor[(5, 14, 13), float32] */;
  %405 = %397.0;
  %406 = log(%401) /* ty=Tensor[(480, 1), float64] */;
  (%402, %403, %404, %405, %406)
}

def @func_13183(%var_13178: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint16]) {
  %407 = @func_10116() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) */;
  %408 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %409 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %410 = %409.2;
  %411 = cast(%var_13178, dtype="uint16") /* ty=Tensor[(1215), uint16] */;
  %412 = shape_of(%410, dtype="int32") /* ty=Tensor[(1), int32] */;
  %413 = cast(%410, dtype="uint16") /* ty=Tensor[(1215), uint16] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %415 = %407.1;
  %416 = %408.3;
  %417 = right_shift(%413, %414) /* ty=Tensor[(1215), uint16] */;
  (%415, %416, %417)
}

def @func_6310() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %418 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %419 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
  %420 = %418.0;
  (%419, %420)
}

def @func_15686() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %421 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %422 = @func_10839() /* ty=Tensor[(5, 14, 13), float32] */;
  %423 = %421.1;
  %424 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  (%422, %423, %424)
}

def @func_1400() -> (Tensor[(5, 14, 13), float64],) {
  %425 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  %426 = cast(%425, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %427 = exp(%426) /* ty=Tensor[(5, 14, 13), float64] */;
  (%427,)
}

def @func_4705() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
  %428 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %429 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %430 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %433 = %428.1;
  %434 = %429.1;
  %435 = atanh(%432) /* ty=Tensor[(5, 14, 13), float64] */;
  (%433, %434, %435)
}

def @func_13034() -> (Tensor[(5, 14, 13), float32],) {
  %436 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %437 = %436.0;
  (%437,)
}

def @func_18545() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %438 = @func_7022() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %439 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %440 = %438.0;
  %441 = %439.3;
  %442 = @func_14106() /* ty=Tensor[(5, 14, 13), float32] */;
  %443 = @func_18382() /* ty=Tensor[(5, 14, 13), float32] */;
  (%440, %441, %442, %443)
}

def @func_3889() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) {
  %444 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %445 = cast(meta[relay.Constant][15] /* ty=Tensor[(480, 1), int32] */, dtype="int32") /* ty=Tensor[(480, 1), int32] */;
  %446 = reshape(%445, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %447 = @func_3491(%446) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %448 = cast(meta[relay.Constant][15] /* ty=Tensor[(480, 1), int32] */, dtype="float32") /* ty=Tensor[(480, 1), float32] */;
  %449 = %444.1;
  %450 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
  %451 = %447.0;
  %452 = rsqrt(%448) /* ty=Tensor[(480, 1), float32] */;
  (%449, %450, %451, %452)
}

def @func_18619() -> Tensor[(480), int64] {
  %453 = @func_14674() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %453.2
}

def @func_14321() -> Tensor[(5, 14, 13), float32] {
  %454 = @func_11779() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480, 1), float64]) */;
  %454.0
}

def @func_7212() -> Tensor[(5, 14, 13), float32] {
  %455 = @func_4311() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %455.6
}

def @func_15731(%var_15728: Tensor[(1650), float64], %var_15729: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1650), float64], Tensor[(480), int32]) {
  %456 = cast(%var_15728, dtype="float64") /* ty=Tensor[(1650), float64] */;
  %457 = cast(%var_15729, dtype="int32") /* ty=Tensor[(480), int32] */;
  %458 = reshape(%456, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float64] */;
  %459 = reshape(%457, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %460 = @func_11632(%458, %459) /* ty=(Tensor[(10, 15, 11), float64], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
  %461 = @func_11799() /* ty=Tensor[(5, 14, 13), float32] */;
  %462 = %460.1;
  (%461, %462, %var_15728, %var_15729)
}

def @func_14855() -> (Tensor[(5, 14, 13), float32],) {
  %463 = @func_10312() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %464 = %463.0;
  (%464,)
}

def @func_15815() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %465 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %466 = %465.0;
  %467 = @func_3757() /* ty=Tensor[(5, 14, 13), float32] */;
  (%466, %467)
}

def @func_17036(%var_17021: Tensor[(7, 10, 4), float32], %var_17022: Tensor[(7, 10, 4), float32]) -> (Tensor[(7, 10, 4), float32], Tensor[(5, 14, 13), float32]) {
  %468 = cast(%var_17022, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  %469 = shape_of(%var_17021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %470 = cast(%var_17021, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  %471 = dyn.reshape(%468, %469, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %472 = floor_divide(%470, %471) /* ty=Tensor[(7, 10, 4), float32] */;
  %473 = @func_10037() /* ty=Tensor[(5, 14, 13), float32] */;
  (%472, %473)
}

def @func_10518() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
  %474 = @func_4705() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
  %475 = @func_3757() /* ty=Tensor[(5, 14, 13), float32] */;
  %476 = %474.2;
  (%475, %476)
}

def @func_12755() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %477 = cast(meta[relay.Constant][16] /* ty=Tensor[(81, 15), uint8] */, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %478 = cast(meta[relay.Constant][16] /* ty=Tensor[(81, 15), uint8] */, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %479 = reshape(%477, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %480 = reshape(%478, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %481 = @func_5031(%479, %480) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */;
  %482 = @func_9645() /* ty=Tensor[(5, 14, 13), float32] */;
  %483 = %481.0;
  (%482, %483, meta[relay.Constant][16] /* ty=Tensor[(81, 15), uint8] */)
}

def @func_161(%var_156: Tensor[(9, 9, 15), uint8], %var_157: Tensor[(9, 9, 15), uint8]) -> Tensor[(9, 9, 15), uint8] {
  %484 = cast(%var_157, dtype="uint8") /* ty=Tensor[(9, 9, 15), uint8] */;
  %485 = shape_of(%var_156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(%var_156, dtype="uint8") /* ty=Tensor[(9, 9, 15), uint8] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%486, %487) /* ty=Tensor[(9, 9, 15), uint8] */
}

def @func_3842() -> Tensor[(5, 14, 13), float32] {
  %488 = @func_3152() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %488.0
}

def @func_4772() -> Tensor[(5, 14, 13), float32] {
  %489 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %489.0
}

def @func_17676() -> (Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(480), int64], Tensor[(5, 14, 13), float32]) {
  %490 = @func_7502() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %491 = cast(meta[relay.Constant][17] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %492 = cast(meta[relay.Constant][17] /* ty=Tensor[(480), int64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %493 = reshape(%491, newshape=[4, 120]) /* ty=Tensor[(4, 120), int64] */;
  %494 = reshape(%492, newshape=[4, 120]) /* ty=Tensor[(4, 120), float64] */;
  %495 = @func_8843(%493, %494) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(4, 120), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) */;
  %496 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %497 = %490.0;
  %498 = %495.6;
  %499 = %496.0;
  (%497, %498, meta[relay.Constant][17] /* ty=Tensor[(480), int64] */, %499)
}

def @func_10437() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32], Tensor[(5, 14, 13), float32]) {
  %500 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %501 = cast(meta[relay.Constant][18] /* ty=Tensor[(120, 4), int32] */, dtype="int32") /* ty=Tensor[(120, 4), int32] */;
  %502 = reshape(%501, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %503 = @func_3544(%502) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
  %504 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %505 = %500.0;
  %506 = %503.0;
  %507 = %504.0;
  (%505, %506, meta[relay.Constant][18] /* ty=Tensor[(120, 4), int32] */, %507)
}

def @func_2905() -> (Tensor[(5, 14, 13), float32],) {
  %508 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %509 = %508.1;
  (%509,)
}

def @func_5031(%var_5012: Tensor[(81, 15), uint8], %var_5019: Tensor[(81, 15), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %510 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %511 = cast(%var_5012, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %512 = reshape(%511, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
  %513 = @func_2045(%512) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
  %514 = cast(%var_5019, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %515 = shape_of(%var_5012, dtype="int32") /* ty=Tensor[(2), int32] */;
  %516 = cast(%var_5012, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %518 = %510.0;
  %519 = %513.3;
  %520 = minimum(%516, %517) /* ty=Tensor[(81, 15), uint8] */;
  (%518, %519, %520)
}

def @func_11188() -> Tensor[(5, 14, 13), float32] {
  %521 = @func_7022() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %521.0
}

def @func_18235(%var_18215: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64], Tensor[(1215), float32]) {
  %522 = cast(%var_18215, dtype="float64") /* ty=Tensor[(1, 12, 6), float64] */;
  %523 = log10(%522) /* ty=Tensor[(1, 12, 6), float64] */;
  %524 = @func_15362() /* ty=Tensor[(1215), float32] */;
  (%523, %524)
}

def @func_16604() -> (Tensor[(5, 14, 13), float32],) {
  %525 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %526 = %525.0;
  (%526,)
}

def @func_13632() -> (Tensor[(5, 14, 13), float32],) {
  %527 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %528 = %527.0;
  (%528,)
}

def @func_1089(%var_1060: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %529 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %530 = cast(%var_1060, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %531 = cast(%var_1060, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %532 = reshape(%530, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %533 = reshape(%531, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %534 = %529.0;
  %535 = @func_161(%532, %533) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%534, %535, %var_1060)
}

def @func_3865() -> Tensor[(5, 14, 13), float32] {
  %536 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %536.0
}

def @func_15007(%var_15004: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(480), int32]) {
  %537 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %538 = cast(%var_15004, dtype="int32") /* ty=Tensor[(480), int32] */;
  %539 = reshape(%538, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %540 = @func_6369(%539) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
  %541 = %537.0;
  %542 = %540.1;
  (%541, %542, %var_15004)
}

def @func_1006(%var_983: Tensor[(5, 6, 16), int64]) -> (Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) {
  %543 = cast(meta[relay.Constant][19] /* ty=Tensor[(5, 6, 16), int64] */, dtype="int64") /* ty=Tensor[(5, 6, 16), int64] */;
  %544 = shape_of(%var_983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %545 = cast(%var_983, dtype="int64") /* ty=Tensor[(5, 6, 16), int64] */;
  %546 = dyn.reshape(%543, %544, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %547 = cast(%var_983, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
  %548 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %549 = maximum(%545, %546) /* ty=Tensor[(5, 6, 16), int64] */;
  %550 = sin(%547) /* ty=Tensor[(5, 6, 16), float32] */;
  %551 = %548.0;
  (%549, %550, %551)
}

def @func_13344(%var_13332: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %552 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %553 = @func_11375() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %554 = cast(%var_13332, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %555 = reshape(%554, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %556 = @func_1089(%555) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %557 = %552.0;
  %558 = %553.0;
  %559 = %556.2;
  %560 = @func_11799() /* ty=Tensor[(5, 14, 13), float32] */;
  (%557, %558, %559, %var_13332, %560)
}

def @func_18652() -> (Tensor[(9, 9, 15), float32],) {
  %561 = @func_9775() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) */;
  %562 = %561.0;
  (%562,)
}

def @func_7710() -> (Tensor[(5, 14, 13), float32],) {
  %563 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %564 = %563.0;
  (%564,)
}

def @func_13882() -> (Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(9, 9, 15), float32]) {
  %565 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %566 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %567 = @func_3122() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) */;
  %568 = cast(meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %569 = reshape(%568, newshape=[4, 6, 9]) /* ty=Tensor[(4, 6, 9), float32] */;
  %570 = @func_10290(%569) /* ty=(Tensor[(4, 6, 9), float32],) */;
  %571 = %565.2;
  %572 = %566.0;
  %573 = %567.1;
  %574 = %570.0;
  %575 = @func_7152() /* ty=Tensor[(9, 9, 15), float32] */;
  (%571, %572, %573, %574, meta[relay.Constant][20] /* ty=Tensor[(216), float32] */, %575)
}

def @func_17166() -> (Tensor[(5, 14, 13), float32],) {
  %576 = @func_4990() /* ty=Tensor[(5, 14, 13), float32] */;
  (%576,)
}

def @func_3757() -> Tensor[(5, 14, 13), float32] {
  @func_359() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2859() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %577 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %578 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %579 = %577.1;
  %580 = %578.0;
  (%579, %580)
}

def @func_7022() -> (Tensor[(5, 14, 13), float32],) {
  %581 = @func_3757() /* ty=Tensor[(5, 14, 13), float32] */;
  (%581,)
}

def @func_7126(%var_7110: Tensor[(2, 2, 4), float64], %var_7120: Tensor[(2, 2, 4), float64]) -> (Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) {
  %582 = cast(%var_7110, dtype="float64") /* ty=Tensor[(2, 2, 4), float64] */;
  %583 = rsqrt(%582) /* ty=Tensor[(2, 2, 4), float64] */;
  %584 = cast(%583, dtype="float32") /* ty=Tensor[(2, 2, 4), float32] */;
  %585 = shape_of(%var_7110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %586 = cast(%var_7110, dtype="float32") /* ty=Tensor[(2, 2, 4), float32] */;
  %587 = dyn.reshape(%584, %585, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %588 = cast(%var_7120, dtype="uint8") /* ty=Tensor[(2, 2, 4), uint8] */;
  %589 = shape_of(%583, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%583, dtype="uint8") /* ty=Tensor[(2, 2, 4), uint8] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %592 = power(%586, %587) /* ty=Tensor[(2, 2, 4), float32] */;
  %593 = bitwise_xor(%590, %591) /* ty=Tensor[(2, 2, 4), uint8] */;
  (%592, %593)
}

def @func_17339(%var_17335: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8]) {
  %594 = cast(%var_17335, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %595 = reshape(%594, newshape=[9, 135]) /* ty=Tensor[(9, 135), uint8] */;
  %596 = @func_5945(%595) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) */;
  %597 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
  %598 = %596.5;
  (%597, %598, %var_17335)
}

def @func_5094() -> (Tensor[(9, 9, 15), float32],) {
  %599 = @func_3232() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */;
  %600 = %599.1;
  (%600,)
}

def @func_6844() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %601 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %602 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %603 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %604 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %605 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %606 = %601.0;
  %607 = %602.1;
  %608 = %603.4;
  %609 = %604.0;
  %610 = %605.0;
  (%606, %607, %608, %609, %610)
}

def @func_18257() -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32]) {
  %611 = @func_15154() /* ty=Tensor[(5, 11, 12), float32] */;
  %612 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
  (%611, %612)
}

def @func_8888() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %613 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %614 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %615 = %613.0;
  %616 = %614.2;
  (%615, %616)
}

def @func_9859() -> Tensor[(5, 14, 13), float32] {
  %617 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %617.2
}

def @func_13929() -> (Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32], Tensor[(112), float32], Tensor[(5, 14, 13), float32]) {
  %618 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %619 = cast(meta[relay.Constant][21] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %620 = reshape(%619, newshape=[1, 14, 8]) /* ty=Tensor[(1, 14, 8), float32] */;
  %621 = @func_10183(%620) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32]) */;
  %622 = @func_6844() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %623 = %618.0;
  %624 = %621.1;
  %625 = %622.1;
  (%623, %624, meta[relay.Constant][21] /* ty=Tensor[(112), float32] */, %625)
}

def @func_2228() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %626 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %627 = cast(meta[relay.Constant][22] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %628 = cast(meta[relay.Constant][22] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %629 = reshape(%627, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %630 = reshape(%628, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %631 = @func_926(%629, %630) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %632 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %633 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %634 = %626.0;
  %635 = %631.1;
  %636 = %632.0;
  %637 = %633.3;
  (%634, %635, meta[relay.Constant][22] /* ty=Tensor[(480), int32] */, %636, %637)
}

def @func_9399(%var_9384: Tensor[(16), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %638 = cast(%var_9384, dtype="float64") /* ty=Tensor[(16), float64] */;
  %639 = cast(%var_9384, dtype="float64") /* ty=Tensor[(16), float64] */;
  %640 = reshape(%638, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
  %641 = reshape(%639, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
  %642 = @func_7126(%640, %641) /* ty=(Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) */;
  %643 = cast(meta[relay.Constant][23] /* ty=Tensor[(81, 15), uint8] */, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %644 = reshape(%643, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %645 = @func_1089(%644) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %646 = @func_4990() /* ty=Tensor[(5, 14, 13), float32] */;
  %647 = %642.1;
  %648 = %645.0;
  (%646, %647, %var_9384, %648, meta[relay.Constant][23] /* ty=Tensor[(81, 15), uint8] */)
}

def @func_14418() -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %649 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %650 = @func_13817() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %651 = %649.0;
  %652 = %650.2;
  (%651, %652)
}

def @func_702() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %653 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %654 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %655 = %653.0;
  %656 = %654.0;
  (%655, %656)
}

def @func_4816(%var_4804: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), float32],) {
  %657 = cast(%var_4804, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
  %658 = log10(%657) /* ty=Tensor[(13, 3, 16), float32] */;
  (%658,)
}

def @func_2578() -> Tensor[(5, 14, 13), float32] {
  %659 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %659.2
}

def @func_16971() -> (Tensor[(1215), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %660 = @func_14440() /* ty=(Tensor[(1215), uint8],) */;
  %661 = %660.0;
  %662 = cast(meta[relay.Constant][24] /* ty=Tensor[(1215), uint8] */, dtype="bool") /* ty=Tensor[(1215), bool] */;
  %663 = shape_of(%661, dtype="int32") /* ty=Tensor[(1), int32] */;
  %664 = cast(%661, dtype="bool") /* ty=Tensor[(1215), bool] */;
  %665 = dyn.reshape(%662, %663, newshape=[]) /* ty=Tensor[(?), bool] */;
  %666 = @func_3889() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) */;
  %667 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %668 = equal(%664, %665) /* ty=Tensor[(1215), bool] */;
  %669 = %666.0;
  %670 = %667.0;
  (%668, %669, %670)
}

def @func_1701() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) {
  %671 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %672 = cast(meta[relay.Constant][25] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %673 = reshape(%672, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %674 = @func_1259(%673) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) */;
  %675 = cast(meta[relay.Constant][25] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %676 = cast(meta[relay.Constant][25] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %677 = reshape(%675, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %678 = reshape(%676, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %679 = %671.2;
  %680 = %674.2;
  %681 = @func_161(%677, %678) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%679, %680, meta[relay.Constant][25] /* ty=Tensor[(1215), uint8] */, %681)
}

def @func_18148(%var_18100: Tensor[(980, 1), int16]) -> (Tensor[(1, 700), bool], Tensor[(5, 14, 13), float32], Tensor[(980, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %682 = @func_16448() /* ty=(Tensor[(1215), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(1, 700), bool]) */;
  %683 = cast(%var_18100, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
  %684 = cast(%var_18100, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
  %685 = reshape(%683, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), int16] */;
  %686 = reshape(%684, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), int16] */;
  %687 = @func_14608(%685, %686) /* ty=(Tensor[(10, 14, 7), float64], Tensor[(5, 14, 13), float32]) */;
  %688 = cast(%var_18100, dtype="float32") /* ty=Tensor[(980, 1), float32] */;
  %689 = @func_10498() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %690 = @func_8666() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %691 = @func_15430() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %692 = %682.3;
  %693 = %687.1;
  %694 = sinh(%688) /* ty=Tensor[(980, 1), float32] */;
  %695 = %689.0;
  %696 = %690.0;
  %697 = %691.0;
  (%692, %693, %694, %695, %696, %697)
}

def @func_14296() -> (Tensor[(5, 14, 13), float32],) {
  %698 = @func_7710() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %699 = %698.0;
  (%699,)
}

def @func_17572() -> Tensor[(9, 9, 15), uint8] {
  %700 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %700.3
}

def @func_14920() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(7, 3, 6), float32]) {
  %701 = cast(meta[relay.Constant][26] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %702 = reshape(%701, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %703 = @func_1006(%702) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %704 = @func_11450() /* ty=(Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) */;
  %705 = @func_11247() /* ty=Tensor[(5, 14, 13), float32] */;
  %706 = @func_14625() /* ty=Tensor[(5, 14, 13), float32] */;
  %707 = %703.0;
  %708 = %704.0;
  (%705, %706, %707, meta[relay.Constant][26] /* ty=Tensor[(480), int64] */, %708)
}

def @func_1462() -> (Tensor[(5, 14, 13), float32],) {
  %709 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  (%709,)
}

def @func_12208(%var_12141: Tensor[(1, 13, 3), float64]) -> (Tensor[(1215), uint8], Tensor[(16, 14), float64], Tensor[(5, 14, 13), float32], Tensor[(?, 13, 3), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int64]) {
  %710 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 14), float64] */;
  %711 = reshape(%710, newshape=[14, 4, 4]) /* ty=Tensor[(14, 4, 4), float64] */;
  %712 = @func_4744(%711) /* ty=(Tensor[(14, 4, 4), float64], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) */;
  %713 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %714 = cast(%var_12141, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
  %715 = log(%714) /* ty=Tensor[(1, 13, 3), float64] */;
  %716 = cast(%var_12141, dtype="int8") /* ty=Tensor[(1, 13, 3), int8] */;
  %717 = shape_of(%715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %718 = cast(%715, dtype="int8") /* ty=Tensor[(1, 13, 3), int8] */;
  %719 = dyn.reshape(%716, %717, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %720 = cast(meta[relay.Constant][28] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %721 = reshape(%720, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %722 = @func_1006(%721) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %723 = %712.3;
  %724 = %713.0;
  %725 = right_shift(%718, %719) /* ty=Tensor[(?, 13, 3), int8] */;
  %726 = %722.2;
  (%723, meta[relay.Constant][27] /* ty=Tensor[(16, 14), float64] */, %724, %725, %726, meta[relay.Constant][28] /* ty=Tensor[(480), int64] */)
}

def @func_471() -> Tensor[(5, 14, 13), float32] {
  @func_359() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_14166() -> Tensor[(5, 14, 13), float32] {
  @func_10839() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_16582(%var_16578: Tensor[(2304), float32]) -> (Tensor[(5, 14, 13), float32], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) {
  %727 = cast(%var_16578, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %728 = cast(%var_16578, dtype="float32") /* ty=Tensor[(2304), float32] */;
  %729 = reshape(%727, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %730 = reshape(%728, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
  %731 = @func_10221(%729, %730) /* ty=(Tensor[(12, 12, 16), float32],) */;
  %732 = @func_14321() /* ty=Tensor[(5, 14, 13), float32] */;
  %733 = %731.0;
  (%732, %733, %var_16578)
}

def @func_5456() -> Tensor[(9, 9, 15), float32] {
  @func_3292() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_7462() -> (Tensor[(5, 14, 13), float32],) {
  %734 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %735 = %734.1;
  (%735,)
}

def @func_10221(%var_10213: Tensor[(12, 12, 16), float32], %var_10214: Tensor[(12, 12, 16), float32]) -> (Tensor[(12, 12, 16), float32],) {
  %736 = cast(%var_10214, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
  %737 = shape_of(%var_10213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%var_10213, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %740 = multiply(%738, %739) /* ty=Tensor[(12, 12, 16), float32] */;
  (%740,)
}

def @func_11632(%var_11605: Tensor[(10, 15, 11), float64], %var_11629: Tensor[(480), int32]) -> (Tensor[(10, 15, 11), float64], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) {
  %741 = cast(%var_11605, dtype="float64") /* ty=Tensor[(10, 15, 11), float64] */;
  %742 = cast(%var_11629, dtype="int32") /* ty=Tensor[(480), int32] */;
  %743 = cast(%var_11629, dtype="int32") /* ty=Tensor[(480), int32] */;
  %744 = reshape(%742, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %745 = reshape(%743, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %746 = @func_926(%744, %745) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %747 = tan(%741) /* ty=Tensor[(10, 15, 11), float64] */;
  %748 = %746.1;
  (%747, %748, %var_11629)
}

def @func_14700() -> (Tensor[(5, 14, 13), float32],) {
  %749 = @func_8504() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %750 = %749.1;
  (%750,)
}

def @func_7780() -> (Tensor[(5, 14, 13), float32],) {
  %751 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %752 = %751.1;
  (%752,)
}

def @func_14674() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %753 = @func_10312() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %754 = cast(meta[relay.Constant][29] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %755 = reshape(%754, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %756 = @func_1006(%755) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %757 = cast(meta[relay.Constant][30] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %758 = reshape(%757, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %759 = @func_764(%758) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %760 = %753.0;
  %761 = %756.0;
  %762 = @func_11188() /* ty=Tensor[(5, 14, 13), float32] */;
  %763 = %759.1;
  (%760, %761, meta[relay.Constant][29] /* ty=Tensor[(480), int64] */, %762, %763, meta[relay.Constant][30] /* ty=Tensor[(1215), uint8] */)
}

def @func_2045(%var_1999: Tensor[(3, 405), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) {
  %764 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %765 = cast(%var_1999, dtype="uint8") /* ty=Tensor[(3, 405), uint8] */;
  %766 = reshape(%765, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %767 = @func_1089(%766) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %768 = %767.2;
  %769 = cast(%768, dtype="bool") /* ty=Tensor[(1215), bool] */;
  %770 = shape_of(%var_1999, dtype="int32") /* ty=Tensor[(2), int32] */;
  %771 = cast(%var_1999, dtype="bool") /* ty=Tensor[(3, 405), bool] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %773 = cast(meta[relay.Constant][31] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %774 = reshape(%773, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %775 = @func_1822(%774) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %776 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %777 = @func_1844() /* ty=Tensor[(5, 14, 13), float32] */;
  %778 = %764.1;
  %779 = greater_equal(%771, %772) /* ty=Tensor[(3, 405), bool] */;
  %780 = %775.0;
  %781 = %776.2;
  (%777, %778, %779, %780, meta[relay.Constant][31] /* ty=Tensor[(1560), float64] */, %781)
}

def @func_3423(%var_3407: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) {
  %782 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %783 = cast(%var_3407, dtype="int32") /* ty=Tensor[(480), int32] */;
  %784 = cast(%var_3407, dtype="int32") /* ty=Tensor[(480), int32] */;
  %785 = reshape(%783, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %786 = reshape(%784, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %787 = @func_926(%785, %786) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %788 = @func_2859() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %789 = %782.0;
  %790 = %787.0;
  %791 = %788.1;
  (%789, %790, %var_3407, %791)
}

def @func_14721() -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %792 = @func_9712() /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %793 = @func_11278() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %794 = %792.0;
  %795 = %793.1;
  (%794, %795)
}

def @func_2243() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) {
  %796 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %797 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %798 = %796.1;
  (%797, %798)
}

def @func_10976() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %799 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %800 = @func_2578() /* ty=Tensor[(5, 14, 13), float32] */;
  %801 = %799.0;
  (%800, %801)
}

def @func_4990() -> Tensor[(5, 14, 13), float32] {
  %802 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %802.0
}

def @func_15852() -> (Tensor[(5, 14, 13), float32],) {
  %803 = @func_15219() /* ty=Tensor[(5, 14, 13), float32] */;
  (%803,)
}

def @func_8857() -> (Tensor[(5, 14, 13), float32],) {
  %804 = @func_7502() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %805 = %804.0;
  (%805,)
}

def @func_16536() -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %806 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %807 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %808 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %809 = %806.1;
  %810 = %807.0;
  %811 = @func_14166() /* ty=Tensor[(5, 14, 13), float32] */;
  %812 = %808.3;
  (%809, %810, %811, %812)
}

def @func_1963(%var_1946: Tensor[(4, 1, 10), float64]) -> Tensor[(4, 1, 10), float32] {
  %813 = cast(%var_1946, dtype="float64") /* ty=Tensor[(4, 1, 10), float64] */;
  %814 = asin(%813) /* ty=Tensor[(4, 1, 10), float64] */;
  %815 = cast(%814, dtype="float32") /* ty=Tensor[(4, 1, 10), float32] */;
  cos(%815) /* ty=Tensor[(4, 1, 10), float32] */
}

def @func_4311() -> (Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %816 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %817 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %818 = %817.0;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %820 = cast(meta[relay.Constant][32] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %821 = reshape(%820, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %822 = @func_3423(%821) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) */;
  %823 = cast(meta[relay.Constant][32] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %824 = %822.1;
  %825 = cast(%824, dtype="int32") /* ty=Tensor[(16, 6, 5), int32] */;
  %826 = reshape(%823, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %827 = reshape(%825, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %828 = @func_926(%826, %827) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %829 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %830 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %831 = %816.0;
  %832 = sqrt(%819) /* ty=Tensor[(5, 14, 13), float64] */;
  %833 = %828.0;
  %834 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
  %835 = %829.0;
  %836 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  %837 = %830.0;
  (%831, %832, %824, meta[relay.Constant][32] /* ty=Tensor[(480), int32] */, %833, %834, %835, %836, %837)
}

def @func_12074(%var_12071: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
  %838 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
  %839 = cast(%var_12071, dtype="int32") /* ty=Tensor[(480), int32] */;
  %840 = reshape(%839, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %841 = @func_3544(%840) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
  %842 = %838.3;
  %843 = @func_9596() /* ty=Tensor[(5, 14, 13), float32] */;
  %844 = @func_7934() /* ty=Tensor[(5, 14, 13), float32] */;
  %845 = %841.0;
  (%842, %843, %844, %845, %var_12071)
}

def @func_8504() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %846 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %847 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %848 = %846.4;
  %849 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %850 = %847.5;
  (%848, %849, %850)
}

def @func_3292() -> Tensor[(9, 9, 15), float32] {
  %851 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %851.0
}

def @func_11547() -> Tensor[(5, 14, 13), float32] {
  %852 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %852.0
}

def @func_1822(%var_1798: Tensor[(15, 8, 13), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) {
  %853 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %854 = cast(%var_1798, dtype="float64") /* ty=Tensor[(15, 8, 13), float64] */;
  %855 = sin(%854) /* ty=Tensor[(15, 8, 13), float64] */;
  %856 = cast(%855, dtype="float32") /* ty=Tensor[(15, 8, 13), float32] */;
  %857 = log2(%856) /* ty=Tensor[(15, 8, 13), float32] */;
  %858 = cast(%855, dtype="uint8") /* ty=Tensor[(15, 8, 13), uint8] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="uint8") /* ty=Tensor[(15, 8, 13), uint8] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %862 = %853.2;
  %863 = bitwise_xor(%860, %861) /* ty=Tensor[(15, 8, 13), uint8] */;
  (%862, %863)
}

def @func_4744(%var_4717: Tensor[(14, 4, 4), float64]) -> (Tensor[(14, 4, 4), float64], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) {
  %864 = cast(%var_4717, dtype="float64") /* ty=Tensor[(14, 4, 4), float64] */;
  %865 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(14, 4, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %866 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 4, 4), float64] */;
  %867 = dyn.reshape(%864, %865, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %868 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %869 = cast(meta[relay.Constant][34] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %870 = reshape(%869, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %871 = @func_1089(%870) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %872 = subtract(%866, %867) /* ty=Tensor[(14, 4, 4), float64] */;
  %873 = %868.0;
  %874 = %871.2;
  (%872, %873, %874, meta[relay.Constant][34] /* ty=Tensor[(1215), uint8] */)
}

def @func_15551(%var_15548: Tensor[(3, 405), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(3, 405), uint8]) {
  %875 = cast(%var_15548, dtype="uint8") /* ty=Tensor[(3, 405), uint8] */;
  %876 = reshape(%875, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %877 = @func_764(%876) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %878 = @func_13795() /* ty=Tensor[(5, 14, 13), float32] */;
  %879 = %877.1;
  (%878, %879, %var_15548)
}

def @func_18491() -> (Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
  %880 = @func_12311() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %881 = @func_4705() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
  %882 = %880.0;
  %883 = @func_15975() /* ty=Tensor[(5, 14, 13), float32] */;
  %884 = %881.2;
  (%882, %883, %884)
}

def @func_17226() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %885 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %886 = @func_11278() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %887 = %885.1;
  %888 = %886.0;
  (%887, %888)
}

def @func_7007(%var_6958: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480), int32], Tensor[(480), int32]) {
  %889 = @func_3979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(5, 14, 13), float32], Tensor[(700), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %890 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %891 = cast(%var_6958, dtype="int32") /* ty=Tensor[(480), int32] */;
  %892 = reshape(%891, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %893 = @func_3423(%892) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) */;
  %894 = %889.4;
  %895 = %890.0;
  %896 = %893.2;
  (%894, %895, %896, %var_6958)
}

def @func_18087(%var_18041: Tensor[(70, 10), bool], %var_18066: Tensor[(70, 10), float64], %var_18072: Tensor[(70, 10), uint16]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), float32], Tensor[(70, 10), int64], Tensor[(70, 10), bool]) {
  %897 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %898 = @func_3122() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) */;
  %899 = @func_17676() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(480), int64], Tensor[(5, 14, 13), float32]) */;
  %900 = %899.1;
  %901 = cast(meta[relay.Constant][35] /* ty=Tensor[(70, 10), bool] */, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %902 = shape_of(%900, dtype="int32") /* ty=Tensor[(2), int32] */;
  %903 = cast(%900, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %905 = cast(%900, dtype="float64") /* ty=Tensor[(70, 10), float64] */;
  %906 = atan(%905) /* ty=Tensor[(70, 10), float64] */;
  %907 = cast(%var_18041, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %908 = shape_of(%900, dtype="int32") /* ty=Tensor[(2), int32] */;
  %909 = cast(%900, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %910 = dyn.reshape(%907, %908, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %911 = multiply(%909, %910) /* ty=Tensor[(70, 10), float32] */;
  %912 = cast(%911, dtype="int64") /* ty=Tensor[(70, 10), int64] */;
  %913 = shape_of(%906, dtype="int32") /* ty=Tensor[(2), int32] */;
  %914 = cast(%906, dtype="int64") /* ty=Tensor[(70, 10), int64] */;
  %915 = dyn.reshape(%912, %913, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %916 = cast(%var_18066, dtype="uint16") /* ty=Tensor[(70, 10), uint16] */;
  %917 = shape_of(%906, dtype="int32") /* ty=Tensor[(2), int32] */;
  %918 = cast(%906, dtype="uint16") /* ty=Tensor[(70, 10), uint16] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %920 = left_shift(%918, %919) /* ty=Tensor[(70, 10), uint16] */;
  %921 = cast(%var_18072, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %922 = shape_of(%920, dtype="int32") /* ty=Tensor[(2), int32] */;
  %923 = cast(%920, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %924 = dyn.reshape(%921, %922, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %925 = %897.0;
  %926 = %898.0;
  %927 = floor_mod(%903, %904) /* ty=Tensor[(70, 10), float32] */;
  %928 = bitwise_and(%914, %915) /* ty=Tensor[(70, 10), int64] */;
  %929 = greater_equal(%923, %924) /* ty=Tensor[(70, 10), bool] */;
  (%925, %926, %927, %928, %929)
}

def @func_4605(%var_4601: Tensor[(1560), float64]) -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(5, 14, 13), float32]) {
  %930 = cast(%var_4601, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %931 = reshape(%930, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %932 = @func_1822(%931) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %933 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %934 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
  %935 = %932.0;
  %936 = %933.1;
  (%934, %935, %var_4601, %936)
}

def @func_7406(%var_7333: Tensor[(1, 4, 10), int16], %var_7334: Tensor[(12, 4, 10), int16], %var_7393: Tensor[(624), float32]) -> (Tensor[(12, 4, 10), float64], Tensor[(12, 4, 10), float32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %937 = cast(%var_7333, dtype="bool") /* ty=Tensor[(1, 4, 10), bool] */;
  %938 = cast(%var_7334, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
  %939 = less(%937, %938) /* ty=Tensor[(12, 4, 10), bool] */;
  %940 = cast(%939, dtype="float64") /* ty=Tensor[(12, 4, 10), float64] */;
  %941 = cast(%939, dtype="float64") /* ty=Tensor[(12, 4, 10), float64] */;
  %942 = acosh(%941) /* ty=Tensor[(12, 4, 10), float64] */;
  %943 = cast(%942, dtype="float32") /* ty=Tensor[(12, 4, 10), float32] */;
  %944 = cast(%var_7393, dtype="float32") /* ty=Tensor[(624), float32] */;
  %945 = reshape(%944, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
  %946 = @func_4816(%945) /* ty=(Tensor[(13, 3, 16), float32],) */;
  %947 = cast(%942, dtype="int32") /* ty=Tensor[(12, 4, 10), int32] */;
  %948 = reshape(%947, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %949 = @func_6235(%948) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
  %950 = erf(%940) /* ty=Tensor[(12, 4, 10), float64] */;
  %951 = log(%943) /* ty=Tensor[(12, 4, 10), float32] */;
  %952 = %946.0;
  %953 = %949.2;
  %954 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  (%950, %951, %952, %var_7393, %953, %954)
}

def @func_14213() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %955 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %956 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %957 = %955.3;
  %958 = @func_11416() /* ty=Tensor[(5, 14, 13), float32] */;
  %959 = @func_13795() /* ty=Tensor[(5, 14, 13), float32] */;
  %960 = %956.0;
  (%957, %958, %959, %960)
}

def @func_9144() -> (Tensor[(5, 14, 13), float32],) {
  %961 = @func_9015() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %962 = %961.1;
  (%962,)
}

def @func_7549() -> Tensor[(5, 14, 13), float32] {
  %963 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %963.1
}

def @func_981() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %964 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %965 = cast(meta[relay.Constant][36] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %966 = reshape(%965, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %967 = @func_764(%966) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %968 = %964.2;
  %969 = %967.0;
  (%968, %969, meta[relay.Constant][36] /* ty=Tensor[(1215), uint8] */)
}

def @func_3742() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %970 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %971 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %972 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %973 = cast(meta[relay.Constant][37] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %974 = reshape(%973, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %975 = @func_1089(%974) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %976 = %970.0;
  %977 = %971.0;
  %978 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
  %979 = %972.0;
  %980 = %975.1;
  (%976, %977, %978, %979, %980, meta[relay.Constant][37] /* ty=Tensor[(1215), uint8] */)
}

def @func_5624(%var_5611: Tensor[(1, 480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) {
  %981 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %982 = cast(%var_5611, dtype="int32") /* ty=Tensor[(1, 480), int32] */;
  %983 = reshape(%982, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %984 = @func_3423(%983) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) */;
  %985 = %981.0;
  %986 = %984.3;
  %987 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
  (%985, %986, %var_5611, %987)
}

def @func_10498() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %988 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %989 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %990 = %988.2;
  %991 = %989.2;
  (%990, %991)
}

def @func_1620() -> Tensor[(5, 14, 13), float32] {
  @func_509() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_15154() -> Tensor[(5, 11, 12), float32] {
  %992 = @func_11124() /* ty=(Tensor[(5, 11, 12), float32],) */;
  %992.0
}

def @func_11065() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %993 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  %994 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
  (%993, %994)
}

def @func_16448() -> (Tensor[(1215), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(1, 700), bool]) {
  %995 = cast(meta[relay.Constant][38] /* ty=Tensor[(1, 700), bool] */, dtype="bool") /* ty=Tensor[(1, 700), bool] */;
  %996 = reshape(%995, newshape=[70, 10]) /* ty=Tensor[(70, 10), bool] */;
  %997 = @func_12826(%996) /* ty=(Tensor[(480, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) */;
  %998 = @func_15362() /* ty=Tensor[(1215), float32] */;
  %999 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  %1000 = %997.2;
  (%998, %999, %1000, meta[relay.Constant][38] /* ty=Tensor[(1, 700), bool] */)
}

def @func_17125() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1001 = @func_5142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1002 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
  %1003 = %1001.1;
  (%1002, %1003)
}

def @func_16891(%var_16859: Tensor[(11, 14, 3), bool], %var_16860: Tensor[(11, 14, 3), bool]) -> (Tensor[(11, 14, 3), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(5, 14, 13), float32]) {
  %1004 = cast(%var_16860, dtype="bool") /* ty=Tensor[(11, 14, 3), bool] */;
  %1005 = shape_of(%var_16859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1006 = cast(%var_16859, dtype="bool") /* ty=Tensor[(11, 14, 3), bool] */;
  %1007 = dyn.reshape(%1004, %1005, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1008 = cast(meta[relay.Constant][39] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %1009 = reshape(%1008, newshape=[4, 6, 9]) /* ty=Tensor[(4, 6, 9), float32] */;
  %1010 = @func_10290(%1009) /* ty=(Tensor[(4, 6, 9), float32],) */;
  %1011 = @func_10518() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
  %1012 = logical_and(%1006, %1007) /* ty=Tensor[(11, 14, 3), bool] */;
  %1013 = %1010.0;
  %1014 = %1011.0;
  (%1012, %1013, meta[relay.Constant][39] /* ty=Tensor[(216), float32] */, %1014)
}

def @func_4382() -> (Tensor[(5, 14, 13), float32],) {
  %1015 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1016 = %1015.1;
  (%1016,)
}

def @func_11014() -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %1017 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %1018 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
  %1019 = %1017.0;
  %1020 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1018, %1019, %1020)
}

def @func_12598() -> (Tensor[(9, 9, 15), float32],) {
  %1021 = @func_6574() /* ty=Tensor[(9, 9, 15), float32] */;
  (%1021,)
}

def @func_3491(%var_3475: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) {
  %1022 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %1023 = cast(%var_3475, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1024 = cast(%var_3475, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1025 = reshape(%1023, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1026 = reshape(%1024, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1027 = @func_926(%1025, %1026) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1028 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1029 = %1027.2;
  %1030 = cast(%1029, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1031 = cast(%1029, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1032 = reshape(%1030, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1033 = reshape(%1031, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1034 = %1022.0;
  %1035 = %1028.0;
  %1036 = @func_161(%1032, %1033) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%1034, %1029, %var_3475, %1035, %1036)
}

def @func_359() -> Tensor[(5, 14, 13), float32] {
  %1037 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1037.0
}

def @func_9805() -> Tensor[(480, 1), float32] {
  %1038 = @func_9775() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) */;
  %1038.1
}

def @func_13817() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1039 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1040 = cast(meta[relay.Constant][40] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1041 = reshape(%1040, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1042 = @func_9096(%1041) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1043 = %1039.0;
  %1044 = %1042.1;
  (%1043, %1044, meta[relay.Constant][40] /* ty=Tensor[(1215), uint8] */)
}

def @func_898() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1045 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1046 = %1045.0;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(5, 14, 13), float32] */;
  %1048 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1049 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1050 = atan(%1047) /* ty=Tensor[(5, 14, 13), float32] */;
  %1051 = %1048.2;
  %1052 = %1049.0;
  (%1050, %1051, %1052)
}

def @func_7152() -> Tensor[(9, 9, 15), float32] {
  %1053 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %1053.0
}

def @func_1844() -> Tensor[(5, 14, 13), float32] {
  %1054 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1054.0
}

def @func_8666() -> (Tensor[(5, 14, 13), float32],) {
  %1055 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1056 = %1055.0;
  (%1056,)
}

def @func_4142() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1057 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1058 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %1059 = %1057.0;
  %1060 = %1058.0;
  (%1059, %1060)
}

def @func_7502() -> (Tensor[(5, 14, 13), float32],) {
  %1061 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1062 = %1061.2;
  (%1062,)
}

def @func_10839() -> Tensor[(5, 14, 13), float32] {
  %1063 = @func_10312() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1063.0
}

def @main() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) {
  %1064 = @func_9216() /* ty=(Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %1065 = @func_15961() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1066 = @func_15154() /* ty=Tensor[(5, 11, 12), float32] */;
  %1067 = cast(meta[relay.Constant][41] /* ty=Tensor[(5, 11, 12), float32] */, dtype="int8") /* ty=Tensor[(5, 11, 12), int8] */;
  %1068 = shape_of(%1066, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%1066, dtype="int8") /* ty=Tensor[(5, 11, 12), int8] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1071 = add(%1069, %1070) /* ty=Tensor[(5, 11, 12), int8] */;
  %1072 = cast(%1071, dtype="float32") /* ty=Tensor[(5, 11, 12), float32] */;
  %1073 = @func_11547() /* ty=Tensor[(5, 14, 13), float32] */;
  %1074 = %1064.1;
  %1075 = %1065.2;
  %1076 = cos(%1072) /* ty=Tensor[(5, 11, 12), float32] */;
  (%1073, %1074, %1075, %1076)
}

def @func_11987() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1077 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1078 = cast(meta[relay.Constant][42] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1079 = reshape(%1078, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1080 = @func_9096(%1079) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1081 = %1077.1;
  %1082 = %1080.3;
  (%1081, %1082, meta[relay.Constant][42] /* ty=Tensor[(1215), uint8] */)
}

def @func_18693() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1083 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %1084 = @func_16412() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1083, %1084)
}

def @func_15579() -> (Tensor[(5, 14, 13), float32],) {
  %1085 = @func_12476() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1085,)
}

def @func_10815() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1086 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1087 = cast(meta[relay.Constant][43] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1088 = reshape(%1087, newshape=[27, 45]) /* ty=Tensor[(27, 45), uint8] */;
  %1089 = @func_4927(%1088) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) */;
  %1090 = %1086.1;
  %1091 = %1089.1;
  (%1090, %1091, meta[relay.Constant][43] /* ty=Tensor[(1215), uint8] */)
}

def @func_5215() -> Tensor[(5, 14, 13), float32] {
  %1092 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1092.0
}

def @func_16483(%var_16467: Tensor[(480, 13), float32]) -> (Tensor[(480, 13), bool], Tensor[(480, 13), float32]) {
  %1093 = @func_3889() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) */;
  %1094 = %1093.3;
  %1095 = cast(%1094, dtype="bool") /* ty=Tensor[(480, 1), bool] */;
  %1096 = cast(%var_16467, dtype="bool") /* ty=Tensor[(480, 13), bool] */;
  %1097 = cast(%var_16467, dtype="float32") /* ty=Tensor[(480, 13), float32] */;
  %1098 = greater_equal(%1095, %1096) /* ty=Tensor[(480, 13), bool] */;
  %1099 = acosh(%1097) /* ty=Tensor[(480, 13), float32] */;
  (%1098, %1099)
}

def @func_14093() -> Tensor[(5, 14, 13), float32] {
  %1100 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1100.1
}

def @func_3979() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(5, 14, 13), float32], Tensor[(700), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1101 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1102 = cast(meta[relay.Constant][44] /* ty=Tensor[(700), bool] */, dtype="bool") /* ty=Tensor[(700), bool] */;
  %1103 = reshape(%1102, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
  %1104 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1105 = cast(meta[relay.Constant][44] /* ty=Tensor[(700), bool] */, dtype="float64") /* ty=Tensor[(700), float64] */;
  %1106 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1107 = cast(meta[relay.Constant][45] /* ty=Tensor[(405, 3), uint8] */, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %1108 = reshape(%1107, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
  %1109 = @func_2045(%1108) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
  %1110 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %1111 = cast(meta[relay.Constant][45] /* ty=Tensor[(405, 3), uint8] */, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %1112 = reshape(%1111, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
  %1113 = @func_2045(%1112) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
  %1114 = %1101.0;
  %1115 = @func_2727(%1103) /* ty=Tensor[(5, 10, 14), bool] */;
  %1116 = %1104.2;
  %1117 = erf(%1105) /* ty=Tensor[(700), float64] */;
  %1118 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %1119 = %1106.0;
  %1120 = %1109.3;
  %1121 = %1110.0;
  %1122 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
  %1123 = %1113.3;
  (%1114, %1115, %1116, %1117, %1118, %1119, %1120, meta[relay.Constant][45] /* ty=Tensor[(405, 3), uint8] */, %1121, %1122, %1123)
}

def @func_14489() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) {
  %1124 = cast(meta[relay.Constant][46] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1125 = reshape(%1124, newshape=[9, 135]) /* ty=Tensor[(9, 135), uint8] */;
  %1126 = @func_5945(%1125) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) */;
  %1127 = cast(meta[relay.Constant][47] /* ty=Tensor[(700), bool] */, dtype="bool") /* ty=Tensor[(700), bool] */;
  %1128 = reshape(%1127, newshape=[5, 140]) /* ty=Tensor[(5, 140), bool] */;
  %1129 = @func_13020(%1128) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 140), int8], Tensor[(5, 14, 13), float32]) */;
  %1130 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
  %1131 = %1126.0;
  %1132 = %1129.4;
  (%1130, %1131, meta[relay.Constant][46] /* ty=Tensor[(1215), uint8] */, %1132, meta[relay.Constant][47] /* ty=Tensor[(700), bool] */)
}

def @func_964() -> (Tensor[(5, 14, 13), float32],) {
  %1133 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1133,)
}

def @func_4870(%var_4850: int32, %var_4851: Tensor[(9, 3, 9), int32]) -> Tensor[(9, 3, 9), int32] {
  %1134 = cast(%var_4850, dtype="int32") /* ty=int32 */;
  %1135 = cast(%var_4851, dtype="int32") /* ty=Tensor[(9, 3, 9), int32] */;
  bitwise_or(%1134, %1135) /* ty=Tensor[(9, 3, 9), int32] */
}

def @func_1259(%var_1240: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) {
  %1136 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1137 = cast(%var_1240, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1138 = reshape(%1137, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1139 = @func_764(%1138) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1140 = cast(%var_1240, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %1141 = %1136.2;
  %1142 = %1139.2;
  %1143 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  %1144 = sqrt(%1140) /* ty=Tensor[(1215), float64] */;
  %1145 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1141, %1142, %1143, %1144, %1145)
}

def @func_5716(%var_5713: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32], Tensor[(1560), float64]) {
  %1146 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1147 = cast(%var_5713, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1148 = reshape(%1147, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %1149 = @func_4605(%1148) /* ty=(Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(5, 14, 13), float32]) */;
  %1150 = %1146.0;
  %1151 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %1152 = %1149.0;
  (%1150, %1151, %1152, %var_5713)
}

def @func_4927(%var_4924: Tensor[(27, 45), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) {
  %1153 = cast(%var_4924, dtype="uint8") /* ty=Tensor[(27, 45), uint8] */;
  %1154 = reshape(%1153, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1155 = @func_764(%1154) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1156 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
  %1157 = %1155.3;
  (%1156, %1157, %var_4924)
}

def @func_7183() -> Tensor[(5, 14, 13), float32] {
  @func_1844() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_926(%var_905: Tensor[(16, 6, 5), int32], %var_906: Tensor[(16, 6, 5), int32]) -> (Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %1158 = cast(%var_906, dtype="int32") /* ty=Tensor[(16, 6, 5), int32] */;
  %1159 = shape_of(%var_905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1160 = cast(%var_905, dtype="int32") /* ty=Tensor[(16, 6, 5), int32] */;
  %1161 = dyn.reshape(%1158, %1159, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1162 = add(%1160, %1161) /* ty=Tensor[(16, 6, 5), int32] */;
  %1163 = cast(%1162, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %1164 = cast(meta[relay.Constant][48] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1165 = cast(meta[relay.Constant][48] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1166 = reshape(%1164, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1167 = reshape(%1165, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1168 = cos(%1163) /* ty=Tensor[(16, 6, 5), float32] */;
  %1169 = @func_161(%1166, %1167) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%1168, %1169, meta[relay.Constant][48] /* ty=Tensor[(1215), uint8] */)
}

def @func_12866(%var_12831: uint32, %var_12832: Tensor[(11, 10, 15), uint32]) -> (Tensor[(11, 10, 15), bool],) {
  %1170 = cast(%var_12831, dtype="uint32") /* ty=uint32 */;
  %1171 = cast(%var_12832, dtype="uint32") /* ty=Tensor[(11, 10, 15), uint32] */;
  %1172 = subtract(%1170, %1171) /* ty=Tensor[(11, 10, 15), uint32] */;
  %1173 = cast(%var_12832, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %1174 = shape_of(%1172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1175 = cast(%1172, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %1176 = dyn.reshape(%1173, %1174, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1177 = greater_equal(%1175, %1176) /* ty=Tensor[(11, 10, 15), bool] */;
  (%1177,)
}

def @func_14551() -> Tensor[(1215), uint8] {
  %1178 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1178.2
}

def @func_13795() -> Tensor[(5, 14, 13), float32] {
  @func_13537() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13591() -> Tensor[(9, 9, 15), float32] {
  @func_7152() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_7064() -> Tensor[(5, 14, 13), float32] {
  @func_5645() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_8463(%var_8369: Tensor[(40, 12), int32], %var_8447: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(405, 3), uint32], Tensor[(16, 6, 5), float32], Tensor[(1215), float64], Tensor[(40, 12), float64], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %1179 = @func_4705() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
  %1180 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1181 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1182 = %1181.2;
  %1183 = cast(%1182, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1184 = reshape(%1183, newshape=[405, 3]) /* ty=Tensor[(405, 3), uint8] */;
  %1185 = @func_5853(%1184) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) */;
  %1186 = cast(%var_8369, dtype="int32") /* ty=Tensor[(40, 12), int32] */;
  %1187 = reshape(%1186, newshape=[2, 240]) /* ty=Tensor[(2, 240), int32] */;
  %1188 = @func_6007(%1187) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int32], Tensor[(16, 6, 5), float32]) */;
  %1189 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1190 = %1189.5;
  %1191 = cast(%1190, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %1192 = cast(%var_8369, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %1193 = cast(%var_8447, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1194 = reshape(%1193, newshape=[12, 130]) /* ty=Tensor[(12, 130), float64] */;
  %1195 = @func_3350(%1194) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(12, 130), float64]) */;
  %1196 = %1185.3;
  %1197 = cast(%1196, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %1198 = rsqrt(%1191) /* ty=Tensor[(1215), float64] */;
  %1199 = cast(%1198, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1200 = reshape(%1197, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1201 = reshape(%1199, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1202 = cast(%1190, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1203 = reshape(%1202, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1204 = @func_1089(%1203) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1205 = %1179.0;
  %1206 = %1180.3;
  %1207 = %1188.3;
  %1208 = asin(%1192) /* ty=Tensor[(40, 12), float64] */;
  %1209 = %1195.0;
  %1210 = @func_161(%1200, %1201) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1211 = %1204.2;
  (%1205, %1206, %1182, %1196, %1207, %1198, %1208, %1209, %var_8447, %1210, %1211)
}

def @func_13020(%var_12984: Tensor[(5, 140), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 140), int8], Tensor[(5, 14, 13), float32]) {
  %1212 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1213 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1214 = cast(%var_12984, dtype="bool") /* ty=Tensor[(5, 140), bool] */;
  %1215 = reshape(%1214, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %1216 = @func_2896(%1215) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %1217 = cast(meta[relay.Constant][49] /* ty=Tensor[(5, 140), bool] */, dtype="int8") /* ty=Tensor[(5, 140), int8] */;
  %1218 = shape_of(%var_12984, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1219 = cast(%var_12984, dtype="int8") /* ty=Tensor[(5, 140), int8] */;
  %1220 = dyn.reshape(%1217, %1218, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %1221 = @func_7502() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1222 = %1212.4;
  %1223 = %1213.2;
  %1224 = %1216.1;
  %1225 = subtract(%1219, %1220) /* ty=Tensor[(5, 140), int8] */;
  %1226 = %1221.0;
  (%1222, %1223, %1224, %1225, %1226)
}

def @func_13910() -> Tensor[(5, 14, 13), float32] {
  %1227 = @func_2905() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1227.0
}

def @func_12404(%var_12386: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32]) {
  %1228 = cast(%var_12386, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1229 = cast(%var_12386, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1230 = reshape(%1228, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1231 = reshape(%1229, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1232 = @func_926(%1230, %1231) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1233 = @func_7934() /* ty=Tensor[(5, 14, 13), float32] */;
  %1234 = %1232.0;
  (%1233, %1234, %var_12386)
}

def @func_3350(%var_3345: Tensor[(12, 130), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(12, 130), float64]) {
  %1235 = cast(%var_3345, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %1236 = reshape(%1235, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %1237 = @func_1822(%1236) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %1238 = @func_1844() /* ty=Tensor[(5, 14, 13), float32] */;
  %1239 = %1237.0;
  (%1238, %1239, %var_3345)
}

def @func_3122() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) {
  %1240 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1241 = cast(meta[relay.Constant][50] /* ty=Tensor[(70, 10), bool] */, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %1242 = reshape(%1241, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
  %1243 = %1240.0;
  %1244 = @func_2727(%1242) /* ty=Tensor[(5, 10, 14), bool] */;
  (%1243, %1244, meta[relay.Constant][50] /* ty=Tensor[(70, 10), bool] */)
}

def @func_2896(%var_2887: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) {
  %1245 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1246 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %1247 = cast(%var_2887, dtype="bool") /* ty=Tensor[(700), bool] */;
  %1248 = reshape(%1247, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
  %1249 = %1245.0;
  %1250 = %1246.1;
  %1251 = @func_2727(%1248) /* ty=Tensor[(5, 10, 14), bool] */;
  (%1249, %1250, %1251, %var_2887)
}

def @func_17304() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1252 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1253 = @func_4109() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1254 = %1252.0;
  %1255 = %1253.1;
  (%1254, %1255)
}

def @func_10037() -> Tensor[(5, 14, 13), float32] {
  @func_2800() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_326() -> (Tensor[(5, 14, 13), float32],) {
  %1256 = cast(meta[relay.Constant][51] /* ty=Tensor[(5, 14, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 13), float32] */;
  %1257 = cos(%1256) /* ty=Tensor[(5, 14, 13), float32] */;
  (%1257,)
}

def @func_13293(%var_13272: Tensor[(700), bool]) -> (Tensor[(5, 16, 8), uint64], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1258 = cast(meta[relay.Constant][53] /* ty=Tensor[(5, 16, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 16, 8), uint64] */;
  %1259 = shape_of(meta[relay.Constant][52] /* ty=Tensor[(5, 16, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1260 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 16, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 16, 8), uint64] */;
  %1261 = dyn.reshape(%1258, %1259, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1262 = cast(%var_13272, dtype="bool") /* ty=Tensor[(700), bool] */;
  %1263 = reshape(%1262, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %1264 = @func_2896(%1263) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %1265 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1266 = maximum(%1260, %1261) /* ty=Tensor[(5, 16, 8), uint64] */;
  %1267 = %1264.0;
  %1268 = @func_4990() /* ty=Tensor[(5, 14, 13), float32] */;
  %1269 = %1265.0;
  (%1266, %1267, %var_13272, %1268, %1269)
}

def @func_9991() -> (Tensor[(1215), uint8],) {
  %1270 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1271 = %1270.2;
  (%1271,)
}

def @func_9040() -> (Tensor[(5, 14, 13), float32],) {
  %1272 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1273 = %1272.2;
  (%1273,)
}

def @func_14387(%var_14353: Tensor[(13, 15, 4), float32], %var_14373: Tensor[(480), int32]) -> (Tensor[(10, 5, 2), bool], float64, Tensor[(480), int32], Tensor[(13, 15, 4), float64]) {
  %1274 = cast(-7.40495f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1275 = cast(%var_14373, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1276 = reshape(%1274, newshape=[]) /* ty=float64 */;
  %1277 = reshape(%1275, newshape=[120, 4]) /* ty=Tensor[(120, 4), int32] */;
  %1278 = @func_13433(%1276, %1277) /* ty=(Tensor[(10, 5, 2), bool], Tensor[(5, 14, 13), float32], Tensor[(10, 5, 2), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32]) */;
  %1279 = cast(%var_14353, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %1280 = sinh(%1279) /* ty=Tensor[(13, 15, 4), float32] */;
  %1281 = cast(%1280, dtype="float64") /* ty=Tensor[(13, 15, 4), float64] */;
  %1282 = %1278.0;
  %1283 = rsqrt(%1281) /* ty=Tensor[(13, 15, 4), float64] */;
  (%1282, -7.40495f64 /* ty=float64 */, %var_14373, %1283)
}

def @func_15219() -> Tensor[(5, 14, 13), float32] {
  @func_471() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_6426() -> (Tensor[(5, 14, 13), float64],) {
  %1284 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1285 = %1284.3;
  (%1285,)
}

def @func_8224() -> Tensor[(5, 14, 13), float32] {
  %1286 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1286.0
}

def @func_9502() -> (Tensor[(5, 14, 13), float32],) {
  %1287 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1288 = %1287.0;
  (%1288,)
}

def @func_17544() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %1289 = @func_11450() /* ty=(Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) */;
  %1290 = @func_6426() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %1291 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
  %1292 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1293 = cast(meta[relay.Constant][54] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1294 = cast(meta[relay.Constant][54] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1295 = reshape(%1293, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %1296 = reshape(%1294, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %1297 = @func_5031(%1295, %1296) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */;
  %1298 = @func_16252() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1299 = %1289.1;
  %1300 = %1290.0;
  %1301 = %1291.2;
  %1302 = %1292.0;
  %1303 = @func_13910() /* ty=Tensor[(5, 14, 13), float32] */;
  %1304 = %1297.1;
  %1305 = %1298.0;
  (%1299, %1300, %1301, %1302, %1303, %1304, meta[relay.Constant][54] /* ty=Tensor[(1215), uint8] */, %1305)
}

def @func_17806() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(40), int16], Tensor[(480), int16], Tensor[(24, 26), float32]) {
  %1306 = cast(meta[relay.Constant][55] /* ty=Tensor[(40), int16] */, dtype="int16") /* ty=Tensor[(40), int16] */;
  %1307 = cast(meta[relay.Constant][56] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %1308 = cast(meta[relay.Constant][57] /* ty=Tensor[(24, 26), float32] */, dtype="float32") /* ty=Tensor[(24, 26), float32] */;
  %1309 = reshape(%1306, newshape=[1, 4, 10]) /* ty=Tensor[(1, 4, 10), int16] */;
  %1310 = reshape(%1307, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int16] */;
  %1311 = reshape(%1308, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %1312 = @func_7406(%1309, %1310, %1311) /* ty=(Tensor[(12, 4, 10), float64], Tensor[(12, 4, 10), float32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1313 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  %1314 = %1312.5;
  (%1313, %1314, meta[relay.Constant][55] /* ty=Tensor[(40), int16] */, meta[relay.Constant][56] /* ty=Tensor[(480), int16] */, meta[relay.Constant][57] /* ty=Tensor[(24, 26), float32] */)
}

def @func_9900() -> Tensor[(5, 14, 13), float32] {
  %1315 = @func_9747() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1315.1
}

def @func_1433() -> (Tensor[(5, 14, 13), float32],) {
  %1316 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1317 = %1316.0;
  (%1317,)
}

def @func_13983(%var_13980: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1318 = cast(%var_13980, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1319 = reshape(%1318, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1320 = @func_13183(%1319) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint16]) */;
  %1321 = @func_13910() /* ty=Tensor[(5, 14, 13), float32] */;
  %1322 = %1320.1;
  (%1321, %1322, %var_13980)
}

def @func_589() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1323 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1324 = %1323.0;
  %1325 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %1326 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1324, %1325, %1326)
}

def @func_9176() -> Tensor[(5, 14, 13), float32] {
  @func_2454() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2975() -> (Tensor[(5, 14, 13), float32],) {
  %1327 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1328 = %1327.0;
  (%1328,)
}

def @func_12040() -> (Tensor[(5, 14, 13), float32],) {
  %1329 = @func_10717() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1330 = %1329.0;
  (%1330,)
}

def @func_5945(%var_5913: Tensor[(9, 135), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) {
  %1331 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1332 = cast(%var_5913, dtype="uint8") /* ty=Tensor[(9, 135), uint8] */;
  %1333 = reshape(%1332, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1334 = @func_764(%1333) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1335 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 240), int64] */, dtype="int64") /* ty=Tensor[(2, 240), int64] */;
  %1336 = reshape(%1335, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %1337 = @func_1006(%1336) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %1338 = %1331.0;
  %1339 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %1340 = %1334.1;
  %1341 = %1337.2;
  (%1338, %1339, %1340, %var_5913, %1341, meta[relay.Constant][58] /* ty=Tensor[(2, 240), int64] */)
}

def @func_7762(%var_7725: float32) -> (Tensor[(5, 14, 13), float32], Tensor[(1, 4, 4), uint64], Tensor[(5, 14, 13), float32]) {
  %1342 = @func_5790() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %1343 = cast(%var_7725, dtype="float32") /* ty=float32 */;
  %1344 = cast(meta[relay.Constant][59] /* ty=Tensor[(1, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(1, 4, 4), float32] */;
  %1345 = floor_divide(%1343, %1344) /* ty=Tensor[(1, 4, 4), float32] */;
  %1346 = cast(%var_7725, dtype="uint64") /* ty=uint64 */;
  %1347 = cast(%1345, dtype="uint64") /* ty=Tensor[(1, 4, 4), uint64] */;
  %1348 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %1349 = %1342.1;
  %1350 = right_shift(%1346, %1347) /* ty=Tensor[(1, 4, 4), uint64] */;
  %1351 = %1348.0;
  (%1349, %1350, %1351)
}

def @func_4246() -> (Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) {
  %1352 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 10), float64] */;
  %1353 = rsqrt(%1352) /* ty=Tensor[(13, 11, 10), float64] */;
  %1354 = cast(%1353, dtype="uint16") /* ty=Tensor[(13, 11, 10), uint16] */;
  %1355 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(13, 11, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1356 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 11, 10), float64] */, dtype="uint16") /* ty=Tensor[(13, 11, 10), uint16] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1358 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 10), float64] */;
  %1359 = cast(%1353, dtype="uint32") /* ty=Tensor[(13, 11, 10), uint32] */;
  %1360 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(13, 11, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1361 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 11, 10), float64] */, dtype="uint32") /* ty=Tensor[(13, 11, 10), uint32] */;
  %1362 = dyn.reshape(%1359, %1360, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1363 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1364 = subtract(%1356, %1357) /* ty=Tensor[(13, 11, 10), uint16] */;
  %1365 = log2(%1358) /* ty=Tensor[(13, 11, 10), float64] */;
  %1366 = right_shift(%1361, %1362) /* ty=Tensor[(13, 11, 10), uint32] */;
  %1367 = %1363.0;
  (%1364, %1365, %1366, %1367)
}

def @func_14625() -> Tensor[(5, 14, 13), float32] {
  @func_7183() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13433(%var_13397: float64, %var_13427: Tensor[(120, 4), int32]) -> (Tensor[(10, 5, 2), bool], Tensor[(5, 14, 13), float32], Tensor[(10, 5, 2), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32]) {
  %1368 = cast(%var_13397, dtype="bool") /* ty=bool */;
  %1369 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 5, 2), float64] */, dtype="bool") /* ty=Tensor[(10, 5, 2), bool] */;
  %1370 = @func_10976() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1371 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
  %1372 = cosh(%1371) /* ty=Tensor[(10, 5, 2), float64] */;
  %1373 = cast(%1372, dtype="float32") /* ty=Tensor[(10, 5, 2), float32] */;
  %1374 = cast(%var_13427, dtype="int32") /* ty=Tensor[(120, 4), int32] */;
  %1375 = reshape(%1374, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %1376 = @func_12074(%1375) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
  %1377 = equal(%1368, %1369) /* ty=Tensor[(10, 5, 2), bool] */;
  %1378 = %1370.1;
  %1379 = acosh(%1373) /* ty=Tensor[(10, 5, 2), float32] */;
  %1380 = %1376.0;
  (%1377, %1378, %1379, %1380, %var_13427)
}

def @func_9015() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1381 = @func_4311() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1382 = %1381.5;
  %1383 = @func_7212() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1382, %1383)
}

def @func_5853(%var_5839: Tensor[(405, 3), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) {
  %1384 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1385 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1386 = cast(%var_5839, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %1387 = cast(%var_5839, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %1388 = reshape(%1386, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %1389 = reshape(%1387, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %1390 = @func_5031(%1388, %1389) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */;
  %1391 = cast(meta[relay.Constant][62] /* ty=Tensor[(405, 3), uint8] */, dtype="uint32") /* ty=Tensor[(405, 3), uint32] */;
  %1392 = shape_of(%var_5839, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1393 = cast(%var_5839, dtype="uint32") /* ty=Tensor[(405, 3), uint32] */;
  %1394 = dyn.reshape(%1391, %1392, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %1395 = %1384.4;
  %1396 = %1385.3;
  %1397 = %1390.0;
  %1398 = bitwise_or(%1393, %1394) /* ty=Tensor[(405, 3), uint32] */;
  (%1395, %1396, %1397, %1398)
}

def @func_9239() -> (Tensor[(5, 14, 13), float32],) {
  %1399 = @func_8704() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1399,)
}

def @func_2454() -> Tensor[(5, 14, 13), float32] {
  %1400 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1400.0
}

def @func_2165() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1401 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1402 = cast(meta[relay.Constant][63] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %1403 = reshape(%1402, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %1404 = @func_1006(%1403) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %1405 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %1406 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %1407 = cast(%1406, dtype="float32") /* ty=Tensor[(5, 14, 13), float32] */;
  %1408 = cast(meta[relay.Constant][64] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1409 = reshape(%1408, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
  %1410 = @func_2045(%1409) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
  %1411 = %1401.0;
  %1412 = %1404.1;
  %1413 = %1405.0;
  %1414 = acosh(%1407) /* ty=Tensor[(5, 14, 13), float32] */;
  %1415 = %1410.0;
  (%1411, %1412, meta[relay.Constant][63] /* ty=Tensor[(480), int64] */, %1413, %1414, %1415, meta[relay.Constant][64] /* ty=Tensor[(1215), uint8] */)
}

def @func_15020() -> Tensor[(5, 14, 13), float32] {
  %1416 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1416.0
}

def @func_13473(%var_13458: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) {
  %1417 = cast(%var_13458, dtype="bool") /* ty=Tensor[(700), bool] */;
  %1418 = reshape(%1417, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %1419 = @func_5301(%1418) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32]) */;
  %1420 = @func_9859() /* ty=Tensor[(5, 14, 13), float32] */;
  %1421 = %1419.5;
  (%1420, %1421, %var_13458)
}

def @func_3152() -> (Tensor[(5, 14, 13), float32],) {
  %1422 = @func_2905() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1423 = %1422.0;
  (%1423,)
}

def @func_16252() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1424 = @func_14213() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1425 = @func_12476() /* ty=Tensor[(5, 14, 13), float32] */;
  %1426 = %1424.3;
  (%1425, %1426)
}

def @func_764(%var_745: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %1427 = cast(%var_745, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1428 = cast(%var_745, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1429 = reshape(%1427, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1430 = reshape(%1428, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1431 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1432 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %1433 = @func_161(%1429, %1430) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1434 = %1431.0;
  (%1432, %1433, %var_745, %1434)
}

def @func_7979() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1435 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1436 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1437 = %1435.0;
  %1438 = %1436.0;
  %1439 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1437, %1438, %1439)
}

def @func_16412() -> Tensor[(5, 14, 13), float32] {
  %1440 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1440.1
}

def @func_6369(%var_6367: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
  %1441 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1442 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1443 = cast(%var_6367, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1444 = reshape(%1443, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %1445 = @func_6235(%1444) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
  %1446 = %1441.0;
  %1447 = @func_5456() /* ty=Tensor[(9, 9, 15), float32] */;
  %1448 = %1442.2;
  %1449 = %1445.0;
  (%1446, %1447, %1448, %1449, %var_6367)
}

def @func_3514() -> (Tensor[(5, 14, 13), float32],) {
  %1450 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1451 = %1450.1;
  (%1451,)
}

def @func_12826(%var_12824: Tensor[(70, 10), bool]) -> (Tensor[(480, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) {
  %1452 = cast(%var_12824, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %1453 = reshape(%1452, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %1454 = @func_2896(%1453) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %1455 = @func_9805() /* ty=Tensor[(480, 1), float32] */;
  %1456 = %1454.1;
  (%1455, %1456, %var_12824)
}

def @func_16220() -> (Tensor[(5, 14, 13), float32],) {
  %1457 = @func_8224() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1457,)
}

def @func_9024() -> (Tensor[(5, 14, 13), float32],) {
  %1458 = @func_3152() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1459 = %1458.0;
  (%1459,)
}

def @func_6327(%var_6314: Tensor[(12, 15, 10), uint16]) -> Tensor[(12, 15, 10), uint16] {
  %1460 = cast(%var_6314, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %1461 = shape_of(meta[relay.Constant][65] /* ty=Tensor[(12, 15, 10), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1462 = cast(meta[relay.Constant][65] /* ty=Tensor[(12, 15, 10), uint16] */, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %1463 = dyn.reshape(%1460, %1461, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_or(%1462, %1463) /* ty=Tensor[(12, 15, 10), uint16] */
}

def @func_10409(%var_10405: Tensor[(8, 60), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(8, 60), int32]) {
  %1464 = @func_10032() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1465 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
  %1466 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1467 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1468 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1469 = cast(%var_10405, dtype="int32") /* ty=Tensor[(8, 60), int32] */;
  %1470 = reshape(%1469, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %1471 = @func_6235(%1470) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
  %1472 = %1464.0;
  %1473 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
  %1474 = %1465.2;
  %1475 = %1466.3;
  %1476 = %1467.0;
  %1477 = %1468.2;
  %1478 = %1471.2;
  (%1472, %1473, %1474, %1475, %1476, %1477, %1478, %var_10405)
}

def @func_8591() -> (Tensor[(5, 14, 13), float32],) {
  %1479 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1480 = %1479.0;
  (%1480,)
}

def @func_6574() -> Tensor[(9, 9, 15), float32] {
  @func_5456() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_13537() -> Tensor[(5, 14, 13), float32] {
  @func_2454() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_17090() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1481 = @func_10498() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1482 = %1481.0;
  %1483 = @func_13795() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1482, %1483)
}

def @func_18553() -> (Tensor[(5, 14, 13), float32],) {
  %1484 = @func_10815() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1485 = %1484.1;
  (%1485,)
}

def @func_8112() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1486 = @func_3232() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */;
  %1487 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1488 = %1486.0;
  %1489 = @func_2578() /* ty=Tensor[(5, 14, 13), float32] */;
  %1490 = %1487.0;
  (%1488, %1489, %1490)
}

def @func_2755(%var_2753: Tensor[(8, 60), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(8, 60), int32]) {
  %1491 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1492 = cast(%var_2753, dtype="int32") /* ty=Tensor[(8, 60), int32] */;
  %1493 = cast(%var_2753, dtype="int32") /* ty=Tensor[(8, 60), int32] */;
  %1494 = reshape(%1492, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1495 = reshape(%1493, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1496 = @func_926(%1494, %1495) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1497 = %1491.0;
  %1498 = %1496.1;
  (%1497, %1498, %var_2753)
}

def @func_11799() -> Tensor[(5, 14, 13), float32] {
  @func_7934() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2800() -> Tensor[(5, 14, 13), float32] {
  @func_509() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_15903(%var_15895: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) {
  %1499 = @func_15430() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1500 = cast(%var_15895, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1501 = reshape(%1500, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %1502 = @func_1822(%1501) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %1503 = %1499.1;
  %1504 = %1502.0;
  (%1503, %1504, %var_15895)
}

def @func_14608(%var_14562: Tensor[(10, 14, 7), int16], %var_14563: Tensor[(10, 14, 7), int16]) -> (Tensor[(10, 14, 7), float64], Tensor[(5, 14, 13), float32]) {
  %1505 = cast(%var_14563, dtype="int16") /* ty=Tensor[(10, 14, 7), int16] */;
  %1506 = shape_of(%var_14562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1507 = cast(%var_14562, dtype="int16") /* ty=Tensor[(10, 14, 7), int16] */;
  %1508 = dyn.reshape(%1505, %1506, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1509 = left_shift(%1507, %1508) /* ty=Tensor[(10, 14, 7), int16] */;
  %1510 = cast(%1509, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %1511 = shape_of(%var_14562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1512 = cast(%var_14562, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
  %1513 = dyn.reshape(%1510, %1511, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1514 = mod(%1512, %1513) /* ty=Tensor[(10, 14, 7), float64] */;
  %1515 = @func_11247() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1514, %1515)
}

def @func_11651(%var_11641: Tensor[(2, 7, 14), float64], %var_11642: Tensor[(2, 7, 14), float64]) -> (Tensor[(2, 7, 14), float64], Tensor[(5, 14, 13), float32]) {
  %1516 = cast(%var_11642, dtype="float64") /* ty=Tensor[(2, 7, 14), float64] */;
  %1517 = shape_of(%var_11641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1518 = cast(%var_11641, dtype="float64") /* ty=Tensor[(2, 7, 14), float64] */;
  %1519 = dyn.reshape(%1516, %1517, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1520 = @func_10976() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1521 = minimum(%1518, %1519) /* ty=Tensor[(2, 7, 14), float64] */;
  %1522 = %1520.0;
  (%1521, %1522)
}

def @func_2283() -> (Tensor[(9, 9, 15), float32],) {
  %1523 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %1524 = %1523.3;
  %1525 = cast(%1524, dtype="float32") /* ty=Tensor[(9, 9, 15), float32] */;
  %1526 = acosh(%1525) /* ty=Tensor[(9, 9, 15), float32] */;
  (%1526,)
}

def @func_11247() -> Tensor[(5, 14, 13), float32] {
  @func_4772() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_8843(%var_8792: Tensor[(4, 120), int64], %var_8810: Tensor[(4, 120), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(4, 120), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) {
  %1527 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1528 = cast(%var_8792, dtype="int64") /* ty=Tensor[(4, 120), int64] */;
  %1529 = reshape(%1528, newshape=[1, 480]) /* ty=Tensor[(1, 480), int64] */;
  %1530 = @func_5582(%1529) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(1, 480), int64], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 6, 16), int64]) */;
  %1531 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1532 = cast(%var_8792, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
  %1533 = log(%1532) /* ty=Tensor[(4, 120), float64] */;
  %1534 = cast(%var_8810, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
  %1535 = shape_of(%1533, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1536 = cast(%1533, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
  %1537 = dyn.reshape(%1534, %1535, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1538 = cast(meta[relay.Constant][66] /* ty=Tensor[(70, 10), bool] */, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %1539 = reshape(%1538, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %1540 = @func_2896(%1539) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %1541 = %1527.0;
  %1542 = %1530.0;
  %1543 = %1531.0;
  %1544 = @func_2800() /* ty=Tensor[(5, 14, 13), float32] */;
  %1545 = floor_mod(%1536, %1537) /* ty=Tensor[(4, 120), float32] */;
  %1546 = %1540.1;
  (%1541, %1542, %1543, %1544, %1545, %1546, meta[relay.Constant][66] /* ty=Tensor[(70, 10), bool] */)
}

def @func_18742() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) {
  %1547 = @func_13034() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1548 = cast(meta[relay.Constant][67] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1549 = reshape(%1548, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %1550 = @func_5716(%1549) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32], Tensor[(1560), float64]) */;
  %1551 = %1547.0;
  %1552 = %1550.1;
  (%1551, %1552, meta[relay.Constant][67] /* ty=Tensor[(1560), float64] */)
}

def @func_684() -> (Tensor[(5, 14, 13), float32],) {
  %1553 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1554 = %1553.1;
  (%1554,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7065() -> Tensor[(5, 14, 13), float32] {
  %0 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_5645() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %0() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_5216() -> Tensor[(5, 14, 13), float32] {
  %2 = fn () -> Tensor[(5, 14, 13), float32] {
    %1 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1.0
  };
  %2() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_982() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %9 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
    %3 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %4 = cast(meta[relay.Constant][0] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %5 = reshape(%4, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %6 = @func_764(%5) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %7 = %3.2;
    %8 = %6.0;
    (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(1215), uint8] */)
  };
  %9() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_8467(%var_8465: Tensor[(40, 12), int32], %var_8466: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(405, 3), uint32], Tensor[(16, 6, 5), float32], Tensor[(1215), float64], Tensor[(40, 12), float64], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  @func_8463(%var_8465, %var_8466) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(405, 3), uint32], Tensor[(16, 6, 5), float32], Tensor[(1215), float64], Tensor[(40, 12), float64], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */
}

def @func_8226() -> Tensor[(5, 14, 13), float32] {
  @func_8224() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_18694() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %12 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %10 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %11 = @func_16412() /* ty=Tensor[(5, 14, 13), float32] */;
    (%10, %11)
  };
  %12() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_11548() -> Tensor[(5, 14, 13), float32] {
  %14 = fn () -> Tensor[(5, 14, 13), float32] {
    %13 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %13.0
  };
  %14() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_8704() -> Tensor[(5, 14, 13), float32] {
  @func_7934() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2598() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %15 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %16 = cast(meta[relay.Constant][1] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %17 = reshape(%16, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %18 = @func_764(%17) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %19 = %15.2;
  %20 = %18.0;
  (%19, %20, meta[relay.Constant][1] /* ty=Tensor[(1215), uint8] */)
}

def @func_3104() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %30 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %21 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %22 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %23 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %24 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %25 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
    %26 = %21.1;
    %27 = %22.0;
    %28 = %23.0;
    %29 = %24.0;
    (%25, %26, %27, %28, %29)
  };
  %30() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_591() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_836() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_12210(%var_12209: Tensor[(1, 13, 3), float64]) -> (Tensor[(1215), uint8], Tensor[(16, 14), float64], Tensor[(5, 14, 13), float32], Tensor[(?, 13, 3), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int64]) {
  %48 = fn (%var_12141: Tensor[(1, 13, 3), float64]) -> (Tensor[(1215), uint8], Tensor[(16, 14), float64], Tensor[(5, 14, 13), float32], Tensor[(?, 13, 3), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int64]) {
    %31 = cast(meta[relay.Constant][2] /* ty=Tensor[(16, 14), float64] */, dtype="float64") /* ty=Tensor[(16, 14), float64] */;
    %32 = reshape(%31, newshape=[14, 4, 4]) /* ty=Tensor[(14, 4, 4), float64] */;
    %33 = @func_4744(%32) /* ty=(Tensor[(14, 4, 4), float64], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) */;
    %34 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %35 = cast(%var_12141, dtype="float64") /* ty=Tensor[(1, 13, 3), float64] */;
    %36 = log(%35) /* ty=Tensor[(1, 13, 3), float64] */;
    %37 = cast(%var_12141, dtype="int8") /* ty=Tensor[(1, 13, 3), int8] */;
    %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
    %39 = cast(%36, dtype="int8") /* ty=Tensor[(1, 13, 3), int8] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %41 = cast(meta[relay.Constant][3] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
    %42 = reshape(%41, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
    %43 = @func_1006(%42) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
    %44 = %33.3;
    %45 = %34.0;
    %46 = right_shift(%39, %40) /* ty=Tensor[(?, 13, 3), int8] */;
    %47 = %43.2;
    (%44, meta[relay.Constant][2] /* ty=Tensor[(16, 14), float64] */, %45, %46, %47, meta[relay.Constant][3] /* ty=Tensor[(480), int64] */)
  };
  %48(%var_12209) /* ty=(Tensor[(1215), uint8], Tensor[(16, 14), float64], Tensor[(5, 14, 13), float32], Tensor[(?, 13, 3), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int64]) */
}

def @func_6654(%var_6650: Tensor[(4, 7, 12), int8], %var_6651: Tensor[(4, 7, 12), int8], %var_6652: Tensor[(480), int32], %var_6653: Tensor[(1215), uint8]) -> (Tensor[(4, 7, 12), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) {
  @func_6648(%var_6650, %var_6651, %var_6652, %var_6653) /* ty=(Tensor[(4, 7, 12), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) */
}

def @func_8011() -> (Tensor[(5, 14, 13), float32],) {
  %49 = @func_3842() /* ty=Tensor[(5, 14, 13), float32] */;
  (%49,)
}

def @func_17637() -> (Tensor[(8, 9, 7), uint32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 140), bool]) {
  %50 = cast(meta[relay.Constant][5] /* ty=Tensor[(8, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(8, 9, 7), uint32] */;
  %51 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(8, 9, 7), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %52 = cast(meta[relay.Constant][4] /* ty=Tensor[(8, 9, 7), uint32] */, dtype="uint32") /* ty=Tensor[(8, 9, 7), uint32] */;
  %53 = dyn.reshape(%50, %51, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %54 = @func_14700() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %55 = cast(meta[relay.Constant][6] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %56 = reshape(%55, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %57 = @func_17339(%56) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8]) */;
  %58 = cast(meta[relay.Constant][7] /* ty=Tensor[(5, 140), bool] */, dtype="bool") /* ty=Tensor[(5, 140), bool] */;
  %59 = reshape(%58, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %60 = @func_2896(%59) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %61 = logical_xor(%52, %53) /* ty=Tensor[(8, 9, 7), uint32] */;
  %62 = %54.0;
  %63 = %57.1;
  %64 = %60.1;
  (%61, %62, %63, meta[relay.Constant][6] /* ty=Tensor[(1215), uint8] */, %64, meta[relay.Constant][7] /* ty=Tensor[(5, 140), bool] */)
}

def @func_13591() -> Tensor[(9, 9, 15), float32] {
  @func_7152() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_2578() -> Tensor[(5, 14, 13), float32] {
  %65 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %65.2
}

def @func_4706() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
  %74 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
    %66 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %67 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %68 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %69 = %68.0;
    %70 = cast(%69, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
    %71 = %66.1;
    %72 = %67.1;
    %73 = atanh(%70) /* ty=Tensor[(5, 14, 13), float64] */;
    (%71, %72, %73)
  };
  %74() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */
}

def @func_18148(%var_18100: Tensor[(980, 1), int16]) -> (Tensor[(1, 700), bool], Tensor[(5, 14, 13), float32], Tensor[(980, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %75 = @func_16448() /* ty=(Tensor[(1215), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(1, 700), bool]) */;
  %76 = cast(%var_18100, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
  %77 = cast(%var_18100, dtype="int16") /* ty=Tensor[(980, 1), int16] */;
  %78 = reshape(%76, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), int16] */;
  %79 = reshape(%77, newshape=[10, 14, 7]) /* ty=Tensor[(10, 14, 7), int16] */;
  %80 = @func_14608(%78, %79) /* ty=(Tensor[(10, 14, 7), float64], Tensor[(5, 14, 13), float32]) */;
  %81 = cast(%var_18100, dtype="float32") /* ty=Tensor[(980, 1), float32] */;
  %82 = @func_10498() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %83 = @func_8666() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %84 = @func_15430() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %85 = %75.3;
  %86 = %80.1;
  %87 = sinh(%81) /* ty=Tensor[(980, 1), float32] */;
  %88 = %82.0;
  %89 = %83.0;
  %90 = %84.0;
  (%85, %86, %87, %88, %89, %90)
}

def @func_12730() -> (Tensor[(5, 6, 16), float32],) {
  %93 = fn () -> (Tensor[(5, 6, 16), float32],) {
    %91 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %92 = %91.1;
    (%92,)
  };
  %93() /* ty=(Tensor[(5, 6, 16), float32],) */
}

def @func_17091() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %97 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %94 = @func_10498() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %95 = %94.0;
    %96 = @func_13795() /* ty=Tensor[(5, 14, 13), float32] */;
    (%95, %96)
  };
  %97() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_834() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %98 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %99 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %100 = %98.0;
  %101 = %99.0;
  %102 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  (%100, %101, %102)
}

def @func_13473(%var_13458: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) {
  %103 = cast(%var_13458, dtype="bool") /* ty=Tensor[(700), bool] */;
  %104 = reshape(%103, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %105 = @func_5301(%104) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32]) */;
  %106 = @func_9859() /* ty=Tensor[(5, 14, 13), float32] */;
  %107 = %105.5;
  (%106, %107, %var_13458)
}

def @func_9096(%var_9082: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %108 = @func_8888() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %109 = cast(%var_9082, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %110 = reshape(%109, newshape=[405, 3]) /* ty=Tensor[(405, 3), uint8] */;
  %111 = @func_5853(%110) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) */;
  %112 = cast(%var_9082, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %113 = reshape(%112, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %114 = @func_1259(%113) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) */;
  %115 = %108.1;
  %116 = %111.1;
  %117 = %114.2;
  (%115, %116, %var_9082, %117)
}

def @func_9240() -> (Tensor[(5, 14, 13), float32],) {
  %119 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %118 = @func_8704() /* ty=Tensor[(5, 14, 13), float32] */;
    (%118,)
  };
  %119() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_14094() -> Tensor[(5, 14, 13), float32] {
  %121 = fn () -> Tensor[(5, 14, 13), float32] {
    %120 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %120.1
  };
  %121() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_10225(%var_10223: Tensor[(12, 12, 16), float32], %var_10224: Tensor[(12, 12, 16), float32]) -> (Tensor[(12, 12, 16), float32],) {
  @func_10221(%var_10223, %var_10224) /* ty=(Tensor[(12, 12, 16), float32],) */
}

def @func_13186(%var_13184: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint16]) {
  @func_13183(%var_13184) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint16]) */
}

def @func_8506() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_8504() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_15687() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %126 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %122 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %123 = @func_10839() /* ty=Tensor[(5, 14, 13), float32] */;
    %124 = %122.1;
    %125 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
    (%123, %124, %125)
  };
  %126() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_13034() -> (Tensor[(5, 14, 13), float32],) {
  %127 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %128 = %127.0;
  (%128,)
}

def @func_7024() -> (Tensor[(5, 14, 13), float32],) {
  @func_7022() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_165(%var_163: Tensor[(9, 9, 15), uint8], %var_164: Tensor[(9, 9, 15), uint8]) -> Tensor[(9, 9, 15), uint8] {
  @func_161(%var_163, %var_164) /* ty=Tensor[(9, 9, 15), uint8] */
}

def @func_4746(%var_4745: Tensor[(14, 4, 4), float64]) -> (Tensor[(14, 4, 4), float64], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) {
  %140 = fn (%var_4717: Tensor[(14, 4, 4), float64]) -> (Tensor[(14, 4, 4), float64], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) {
    %129 = cast(%var_4717, dtype="float64") /* ty=Tensor[(14, 4, 4), float64] */;
    %130 = shape_of(meta[relay.Constant][8] /* ty=Tensor[(14, 4, 4), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %131 = cast(meta[relay.Constant][8] /* ty=Tensor[(14, 4, 4), float64] */, dtype="float64") /* ty=Tensor[(14, 4, 4), float64] */;
    %132 = dyn.reshape(%129, %130, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %133 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %134 = cast(meta[relay.Constant][9] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %135 = reshape(%134, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %136 = @func_1089(%135) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %137 = subtract(%131, %132) /* ty=Tensor[(14, 4, 4), float64] */;
    %138 = %133.0;
    %139 = %136.2;
    (%137, %138, %139, meta[relay.Constant][9] /* ty=Tensor[(1215), uint8] */)
  };
  %140(%var_4745) /* ty=(Tensor[(14, 4, 4), float64], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) */
}

def @func_511() -> Tensor[(5, 14, 13), float32] {
  @func_509() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_14441() -> (Tensor[(1215), uint8],) {
  %143 = fn () -> (Tensor[(1215), uint8],) {
    %141 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %142 = %141.2;
    (%142,)
  };
  %143() /* ty=(Tensor[(1215), uint8],) */
}

def @func_13537() -> Tensor[(5, 14, 13), float32] {
  @func_2454() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_10817() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  @func_10815() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_5853(%var_5839: Tensor[(405, 3), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) {
  %144 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %145 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %146 = cast(%var_5839, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %147 = cast(%var_5839, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %148 = reshape(%146, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %149 = reshape(%147, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %150 = @func_5031(%148, %149) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */;
  %151 = cast(meta[relay.Constant][10] /* ty=Tensor[(405, 3), uint8] */, dtype="uint32") /* ty=Tensor[(405, 3), uint32] */;
  %152 = shape_of(%var_5839, dtype="int32") /* ty=Tensor[(2), int32] */;
  %153 = cast(%var_5839, dtype="uint32") /* ty=Tensor[(405, 3), uint32] */;
  %154 = dyn.reshape(%151, %152, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %155 = %144.4;
  %156 = %145.3;
  %157 = %150.0;
  %158 = bitwise_or(%153, %154) /* ty=Tensor[(405, 3), uint32] */;
  (%155, %156, %157, %158)
}

def @func_1463() -> (Tensor[(5, 14, 13), float32],) {
  %160 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %159 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
    (%159,)
  };
  %160() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_10519() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
  %164 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
    %161 = @func_4705() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
    %162 = @func_3757() /* ty=Tensor[(5, 14, 13), float32] */;
    %163 = %161.2;
    (%162, %163)
  };
  %164() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */
}

def @func_3547(%var_3545: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) {
  @func_3544(%var_3545) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */
}

def @func_2045(%var_1999: Tensor[(3, 405), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) {
  %165 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %166 = cast(%var_1999, dtype="uint8") /* ty=Tensor[(3, 405), uint8] */;
  %167 = reshape(%166, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %168 = @func_1089(%167) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %169 = %168.2;
  %170 = cast(%169, dtype="bool") /* ty=Tensor[(1215), bool] */;
  %171 = shape_of(%var_1999, dtype="int32") /* ty=Tensor[(2), int32] */;
  %172 = cast(%var_1999, dtype="bool") /* ty=Tensor[(3, 405), bool] */;
  %173 = dyn.reshape(%170, %171, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %174 = cast(meta[relay.Constant][11] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %175 = reshape(%174, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %176 = @func_1822(%175) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %177 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %178 = @func_1844() /* ty=Tensor[(5, 14, 13), float32] */;
  %179 = %165.1;
  %180 = greater_equal(%172, %173) /* ty=Tensor[(3, 405), bool] */;
  %181 = %176.0;
  %182 = %177.2;
  (%178, %179, %180, %181, meta[relay.Constant][11] /* ty=Tensor[(1560), float64] */, %182)
}

def @func_10039() -> Tensor[(5, 14, 13), float32] {
  @func_10037() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_5144() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_5142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_10034() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_10032() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_1663() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) {
  @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */
}

def @func_3866() -> Tensor[(5, 14, 13), float32] {
  %184 = fn () -> Tensor[(5, 14, 13), float32] {
    %183 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %183.0
  };
  %184() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_11014() -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %185 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %186 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
  %187 = %185.0;
  %188 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
  (%186, %187, %188)
}

def @func_2907() -> (Tensor[(5, 14, 13), float32],) {
  @func_2905() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_11987() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %189 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %190 = cast(meta[relay.Constant][12] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %191 = reshape(%190, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %192 = @func_9096(%191) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %193 = %189.1;
  %194 = %192.3;
  (%193, %194, meta[relay.Constant][12] /* ty=Tensor[(1215), uint8] */)
}

def @func_1702() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) {
  %206 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) {
    %195 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %197 = reshape(%196, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %198 = @func_1259(%197) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) */;
    %199 = cast(meta[relay.Constant][13] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %200 = cast(meta[relay.Constant][13] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %201 = reshape(%199, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
    %202 = reshape(%200, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
    %203 = %195.2;
    %204 = %198.2;
    %205 = @func_161(%201, %202) /* ty=Tensor[(9, 9, 15), uint8] */;
    (%203, %204, meta[relay.Constant][13] /* ty=Tensor[(1215), uint8] */, %205)
  };
  %206() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */
}

def @func_4382() -> (Tensor[(5, 14, 13), float32],) {
  %207 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %208 = %207.1;
  (%208,)
}

def @func_4608(%var_4606: Tensor[(1560), float64]) -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(5, 14, 13), float32]) {
  @func_4605(%var_4606) /* ty=(Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_12291() -> Tensor[(5, 14, 13), float32] {
  @func_12289() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13183(%var_13178: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint16]) {
  %209 = @func_10116() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) */;
  %210 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %211 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %212 = %211.2;
  %213 = cast(%var_13178, dtype="uint16") /* ty=Tensor[(1215), uint16] */;
  %214 = shape_of(%212, dtype="int32") /* ty=Tensor[(1), int32] */;
  %215 = cast(%212, dtype="uint16") /* ty=Tensor[(1215), uint16] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %217 = %209.1;
  %218 = %210.3;
  %219 = right_shift(%215, %216) /* ty=Tensor[(1215), uint16] */;
  (%217, %218, %219)
}

def @func_7550() -> Tensor[(5, 14, 13), float32] {
  %221 = fn () -> Tensor[(5, 14, 13), float32] {
    %220 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %220.1
  };
  %221() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_1092(%var_1090: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  @func_1089(%var_1090) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */
}

def @func_8079() -> (Tensor[(5, 14, 13), float32],) {
  %224 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %222 = @func_2905() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %223 = %222.0;
    (%223,)
  };
  %224() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_13347(%var_13345: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  @func_13344(%var_13345) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */
}

def @func_16449() -> (Tensor[(1215), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(1, 700), bool]) {
  %231 = fn () -> (Tensor[(1215), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(1, 700), bool]) {
    %225 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 700), bool] */, dtype="bool") /* ty=Tensor[(1, 700), bool] */;
    %226 = reshape(%225, newshape=[70, 10]) /* ty=Tensor[(70, 10), bool] */;
    %227 = @func_12826(%226) /* ty=(Tensor[(480, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) */;
    %228 = @func_15362() /* ty=Tensor[(1215), float32] */;
    %229 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
    %230 = %227.2;
    (%228, %229, %230, meta[relay.Constant][14] /* ty=Tensor[(1, 700), bool] */)
  };
  %231() /* ty=(Tensor[(1215), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(1, 700), bool]) */
}

def @func_15903(%var_15895: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) {
  %232 = @func_15430() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %233 = cast(%var_15895, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %234 = reshape(%233, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %235 = @func_1822(%234) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %236 = %232.1;
  %237 = %235.0;
  (%236, %237, %var_15895)
}

def @func_17070() -> Tensor[(5, 14, 13), float32] {
  %239 = fn () -> Tensor[(5, 14, 13), float32] {
    %238 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %238.2
  };
  %239() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_17227() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %244 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %240 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %241 = @func_11278() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %242 = %240.1;
    %243 = %241.0;
    (%242, %243)
  };
  %244() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_4247() -> (Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) {
  %261 = fn () -> (Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) {
    %245 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 10), float64] */;
    %246 = rsqrt(%245) /* ty=Tensor[(13, 11, 10), float64] */;
    %247 = cast(%246, dtype="uint16") /* ty=Tensor[(13, 11, 10), uint16] */;
    %248 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(13, 11, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %249 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 11, 10), float64] */, dtype="uint16") /* ty=Tensor[(13, 11, 10), uint16] */;
    %250 = dyn.reshape(%247, %248, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %251 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 11, 10), float64] */, dtype="float64") /* ty=Tensor[(13, 11, 10), float64] */;
    %252 = cast(%246, dtype="uint32") /* ty=Tensor[(13, 11, 10), uint32] */;
    %253 = shape_of(meta[relay.Constant][15] /* ty=Tensor[(13, 11, 10), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %254 = cast(meta[relay.Constant][15] /* ty=Tensor[(13, 11, 10), float64] */, dtype="uint32") /* ty=Tensor[(13, 11, 10), uint32] */;
    %255 = dyn.reshape(%252, %253, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %256 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %257 = subtract(%249, %250) /* ty=Tensor[(13, 11, 10), uint16] */;
    %258 = log2(%251) /* ty=Tensor[(13, 11, 10), float64] */;
    %259 = right_shift(%254, %255) /* ty=Tensor[(13, 11, 10), uint32] */;
    %260 = %256.0;
    (%257, %258, %259, %260)
  };
  %261() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */
}

def @func_10624() -> (Tensor[(5, 14, 13), float32],) {
  %264 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %262 = @func_4382() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %263 = %262.0;
    (%263,)
  };
  %264() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_12826(%var_12824: Tensor[(70, 10), bool]) -> (Tensor[(480, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) {
  %265 = cast(%var_12824, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %266 = reshape(%265, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %267 = @func_2896(%266) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %268 = @func_9805() /* ty=Tensor[(480, 1), float32] */;
  %269 = %267.1;
  (%268, %269, %var_12824)
}

def @func_17678() -> (Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(480), int64], Tensor[(5, 14, 13), float32]) {
  @func_17676() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(480), int64], Tensor[(5, 14, 13), float32]) */
}

def @func_18022(%var_18013: Tensor[(81, 15), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %270 = @func_7022() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %271 = @func_14700() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %272 = cast(%var_18013, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %273 = reshape(%272, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %274 = @func_11038(%273) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %275 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  %276 = %270.0;
  %277 = %271.0;
  %278 = %274.3;
  (%275, %276, %277, %278, %var_18013)
}

def @func_5856(%var_5854: Tensor[(405, 3), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) {
  @func_5853(%var_5854) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) */
}

def @func_7007(%var_6958: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480), int32], Tensor[(480), int32]) {
  %279 = @func_3979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(5, 14, 13), float32], Tensor[(700), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %280 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %281 = cast(%var_6958, dtype="int32") /* ty=Tensor[(480), int32] */;
  %282 = reshape(%281, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %283 = @func_3423(%282) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) */;
  %284 = %279.4;
  %285 = %280.0;
  %286 = %283.2;
  (%284, %285, %286, %var_6958)
}

def @func_9187(%var_9185: Tensor[(10, 12, 4), float32]) -> Tensor[(10, 12, 4), float32] {
  @func_9184(%var_9185) /* ty=Tensor[(10, 12, 4), float32] */
}

def @func_15154() -> Tensor[(5, 11, 12), float32] {
  %287 = @func_11124() /* ty=(Tensor[(5, 11, 12), float32],) */;
  %287.0
}

def @func_10292(%var_10291: Tensor[(4, 6, 9), float32]) -> (Tensor[(4, 6, 9), float32],) {
  %290 = fn (%var_10287: Tensor[(4, 6, 9), float32]) -> (Tensor[(4, 6, 9), float32],) {
    %288 = cast(%var_10287, dtype="float32") /* ty=Tensor[(4, 6, 9), float32] */;
    %289 = acos(%288) /* ty=Tensor[(4, 6, 9), float32] */;
    (%289,)
  };
  %290(%var_10291) /* ty=(Tensor[(4, 6, 9), float32],) */
}

def @func_10840() -> Tensor[(5, 14, 13), float32] {
  %292 = fn () -> Tensor[(5, 14, 13), float32] {
    %291 = @func_10312() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %291.0
  };
  %292() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13023(%var_13021: Tensor[(5, 140), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 140), int8], Tensor[(5, 14, 13), float32]) {
  @func_13020(%var_13021) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 140), int8], Tensor[(5, 14, 13), float32]) */
}

def @func_10815() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %293 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %294 = cast(meta[relay.Constant][16] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %295 = reshape(%294, newshape=[27, 45]) /* ty=Tensor[(27, 45), uint8] */;
  %296 = @func_4927(%295) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) */;
  %297 = %293.1;
  %298 = %296.1;
  (%297, %298, meta[relay.Constant][16] /* ty=Tensor[(1215), uint8] */)
}

def @func_10719() -> (Tensor[(5, 14, 13), float32],) {
  @func_10717() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_11450() -> (Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) {
  %299 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 3, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 3, 6), float32] */;
  %300 = sqrt(%299) /* ty=Tensor[(7, 3, 6), float32] */;
  %301 = cast(%300, dtype="float32") /* ty=Tensor[(7, 3, 6), float32] */;
  %302 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %303 = sinh(%301) /* ty=Tensor[(7, 3, 6), float32] */;
  %304 = %302.1;
  (%303, %304)
}

def @func_15854() -> (Tensor[(5, 14, 13), float32],) {
  @func_15852() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_16604() -> (Tensor[(5, 14, 13), float32],) {
  %305 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %306 = %305.0;
  (%306,)
}

def @func_8706() -> Tensor[(5, 14, 13), float32] {
  @func_8704() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_6845() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %317 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %307 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %308 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %309 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %310 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %311 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %312 = %307.0;
    %313 = %308.1;
    %314 = %309.4;
    %315 = %310.0;
    %316 = %311.0;
    (%312, %313, %314, %315, %316)
  };
  %317() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_509() -> Tensor[(5, 14, 13), float32] {
  %318 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %318.0
}

def @func_15734(%var_15732: Tensor[(1650), float64], %var_15733: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1650), float64], Tensor[(480), int32]) {
  %326 = fn (%var_15728: Tensor[(1650), float64], %var_15729: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1650), float64], Tensor[(480), int32]) {
    %319 = cast(%var_15728, dtype="float64") /* ty=Tensor[(1650), float64] */;
    %320 = cast(%var_15729, dtype="int32") /* ty=Tensor[(480), int32] */;
    %321 = reshape(%319, newshape=[10, 15, 11]) /* ty=Tensor[(10, 15, 11), float64] */;
    %322 = reshape(%320, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %323 = @func_11632(%321, %322) /* ty=(Tensor[(10, 15, 11), float64], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
    %324 = @func_11799() /* ty=Tensor[(5, 14, 13), float32] */;
    %325 = %323.1;
    (%324, %325, %var_15728, %var_15729)
  };
  %326(%var_15732, %var_15733) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1650), float64], Tensor[(480), int32]) */
}

def @func_7980() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %332 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %327 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %328 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %329 = %327.0;
    %330 = %328.0;
    %331 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
    (%329, %330, %331)
  };
  %332() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_1006(%var_983: Tensor[(5, 6, 16), int64]) -> (Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) {
  %333 = cast(meta[relay.Constant][18] /* ty=Tensor[(5, 6, 16), int64] */, dtype="int64") /* ty=Tensor[(5, 6, 16), int64] */;
  %334 = shape_of(%var_983, dtype="int32") /* ty=Tensor[(3), int32] */;
  %335 = cast(%var_983, dtype="int64") /* ty=Tensor[(5, 6, 16), int64] */;
  %336 = dyn.reshape(%333, %334, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %337 = cast(%var_983, dtype="float32") /* ty=Tensor[(5, 6, 16), float32] */;
  %338 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %339 = maximum(%335, %336) /* ty=Tensor[(5, 6, 16), int64] */;
  %340 = sin(%337) /* ty=Tensor[(5, 6, 16), float32] */;
  %341 = %338.0;
  (%339, %340, %341)
}

def @func_18258() -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32]) {
  %344 = fn () -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32]) {
    %342 = @func_15154() /* ty=Tensor[(5, 11, 12), float32] */;
    %343 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
    (%342, %343)
  };
  %344() /* ty=(Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_17422() -> (Tensor[(9, 9, 15), float32],) {
  %347 = fn () -> (Tensor[(9, 9, 15), float32],) {
    %345 = @func_12598() /* ty=(Tensor[(9, 9, 15), float32],) */;
    %346 = %345.0;
    (%346,)
  };
  %347() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_15219() -> Tensor[(5, 14, 13), float32] {
  @func_471() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_1621() -> Tensor[(5, 14, 13), float32] {
  %348 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_509() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %348() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_5384() -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %349 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %350 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %351 = %349.3;
  %352 = @func_5215() /* ty=Tensor[(5, 14, 13), float32] */;
  %353 = %350.4;
  (%351, %352, %353)
}

def @func_5034(%var_5032: Tensor[(81, 15), uint8], %var_5033: Tensor[(81, 15), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %365 = fn (%var_5012: Tensor[(81, 15), uint8], %var_5019: Tensor[(81, 15), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
    %354 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %355 = cast(%var_5012, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
    %356 = reshape(%355, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
    %357 = @func_2045(%356) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
    %358 = cast(%var_5019, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
    %359 = shape_of(%var_5012, dtype="int32") /* ty=Tensor[(2), int32] */;
    %360 = cast(%var_5012, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
    %361 = dyn.reshape(%358, %359, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
    %362 = %354.0;
    %363 = %357.3;
    %364 = minimum(%360, %361) /* ty=Tensor[(81, 15), uint8] */;
    (%362, %363, %364)
  };
  %365(%var_5032, %var_5033) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */
}

def @func_2166() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %381 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
    %366 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %367 = cast(meta[relay.Constant][19] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
    %368 = reshape(%367, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
    %369 = @func_1006(%368) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
    %370 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
    %371 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %372 = cast(%371, dtype="float32") /* ty=Tensor[(5, 14, 13), float32] */;
    %373 = cast(meta[relay.Constant][20] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %374 = reshape(%373, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
    %375 = @func_2045(%374) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
    %376 = %366.0;
    %377 = %369.1;
    %378 = %370.0;
    %379 = acosh(%372) /* ty=Tensor[(5, 14, 13), float32] */;
    %380 = %375.0;
    (%376, %377, meta[relay.Constant][19] /* ty=Tensor[(480), int64] */, %378, %379, %380, meta[relay.Constant][20] /* ty=Tensor[(1215), uint8] */)
  };
  %381() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_17573() -> Tensor[(9, 9, 15), uint8] {
  %383 = fn () -> Tensor[(9, 9, 15), uint8] {
    %382 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
    %382.3
  };
  %383() /* ty=Tensor[(9, 9, 15), uint8] */
}

def @func_2490() -> Tensor[(5, 14, 13), float32] {
  @func_2488() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_16814() -> Tensor[(5, 14, 13), float32] {
  @func_11188() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_5645() -> Tensor[(5, 14, 13), float32] {
  %384 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %384.3
}

def @func_2228() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %385 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %386 = cast(meta[relay.Constant][21] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %387 = cast(meta[relay.Constant][21] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
  %388 = reshape(%386, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %389 = reshape(%387, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %390 = @func_926(%388, %389) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %391 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %392 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %393 = %385.0;
  %394 = %390.1;
  %395 = %391.0;
  %396 = %392.3;
  (%393, %394, meta[relay.Constant][21] /* ty=Tensor[(480), int32] */, %395, %396)
}

def @func_4772() -> Tensor[(5, 14, 13), float32] {
  %397 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %397.0
}

def @func_3294() -> Tensor[(9, 9, 15), float32] {
  @func_3292() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_2230() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_16971() -> (Tensor[(1215), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %398 = @func_14440() /* ty=(Tensor[(1215), uint8],) */;
  %399 = %398.0;
  %400 = cast(meta[relay.Constant][22] /* ty=Tensor[(1215), uint8] */, dtype="bool") /* ty=Tensor[(1215), bool] */;
  %401 = shape_of(%399, dtype="int32") /* ty=Tensor[(1), int32] */;
  %402 = cast(%399, dtype="bool") /* ty=Tensor[(1215), bool] */;
  %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?), bool] */;
  %404 = @func_3889() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) */;
  %405 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %406 = equal(%402, %403) /* ty=Tensor[(1215), bool] */;
  %407 = %404.0;
  %408 = %405.0;
  (%406, %407, %408)
}

def @func_7022() -> (Tensor[(5, 14, 13), float32],) {
  %409 = @func_3757() /* ty=Tensor[(5, 14, 13), float32] */;
  (%409,)
}

def @func_2283() -> (Tensor[(9, 9, 15), float32],) {
  %410 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %411 = %410.3;
  %412 = cast(%411, dtype="float32") /* ty=Tensor[(9, 9, 15), float32] */;
  %413 = acosh(%412) /* ty=Tensor[(9, 9, 15), float32] */;
  (%413,)
}

def @func_899() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %422 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %414 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %415 = %414.0;
    %416 = cast(%415, dtype="float32") /* ty=Tensor[(5, 14, 13), float32] */;
    %417 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %418 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %419 = atan(%416) /* ty=Tensor[(5, 14, 13), float32] */;
    %420 = %417.2;
    %421 = %418.0;
    (%419, %420, %421)
  };
  %422() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_8224() -> Tensor[(5, 14, 13), float32] {
  %423 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %423.0
}

def @func_5457() -> Tensor[(9, 9, 15), float32] {
  %424 = fn () -> Tensor[(9, 9, 15), float32] {
    @func_3292() /* ty=Tensor[(9, 9, 15), float32] */
  };
  %424() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_11040(%var_11039: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %434 = fn (%var_11030: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
    %425 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %426 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %427 = cast(%var_11030, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %428 = reshape(%427, newshape=[27, 45]) /* ty=Tensor[(27, 45), uint8] */;
    %429 = @func_4927(%428) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) */;
    %430 = @func_2578() /* ty=Tensor[(5, 14, 13), float32] */;
    %431 = %425.0;
    %432 = %426.1;
    %433 = %429.0;
    (%430, %431, %432, %433, %var_11030)
  };
  %434(%var_11039) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_13295(%var_13294: Tensor[(700), bool]) -> (Tensor[(5, 16, 8), uint64], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %447 = fn (%var_13272: Tensor[(700), bool]) -> (Tensor[(5, 16, 8), uint64], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %435 = cast(meta[relay.Constant][24] /* ty=Tensor[(5, 16, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 16, 8), uint64] */;
    %436 = shape_of(meta[relay.Constant][23] /* ty=Tensor[(5, 16, 8), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %437 = cast(meta[relay.Constant][23] /* ty=Tensor[(5, 16, 8), uint64] */, dtype="uint64") /* ty=Tensor[(5, 16, 8), uint64] */;
    %438 = dyn.reshape(%435, %436, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %439 = cast(%var_13272, dtype="bool") /* ty=Tensor[(700), bool] */;
    %440 = reshape(%439, newshape=[700]) /* ty=Tensor[(700), bool] */;
    %441 = @func_2896(%440) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
    %442 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %443 = maximum(%437, %438) /* ty=Tensor[(5, 16, 8), uint64] */;
    %444 = %441.0;
    %445 = @func_4990() /* ty=Tensor[(5, 14, 13), float32] */;
    %446 = %442.0;
    (%443, %444, %var_13272, %445, %446)
  };
  %447(%var_13294) /* ty=(Tensor[(5, 16, 8), uint64], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_14920() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(7, 3, 6), float32]) {
  %448 = cast(meta[relay.Constant][25] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %449 = reshape(%448, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %450 = @func_1006(%449) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %451 = @func_11450() /* ty=(Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) */;
  %452 = @func_11247() /* ty=Tensor[(5, 14, 13), float32] */;
  %453 = @func_14625() /* ty=Tensor[(5, 14, 13), float32] */;
  %454 = %450.0;
  %455 = %451.0;
  (%452, %453, %454, meta[relay.Constant][25] /* ty=Tensor[(480), int64] */, %455)
}

def @func_12311() -> (Tensor[(9, 9, 15), float32],) {
  %456 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %457 = %456.0;
  (%457,)
}

def @func_3790(%var_3789: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(2, 240), int32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %473 = fn (%var_3766: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(2, 240), int32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
    %458 = cast(%var_3766, dtype="bool") /* ty=Tensor[(700), bool] */;
    %459 = reshape(%458, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
    %460 = @func_3152() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %461 = cast(meta[relay.Constant][26] /* ty=Tensor[(2, 240), int32] */, dtype="int32") /* ty=Tensor[(2, 240), int32] */;
    %462 = reshape(%461, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %463 = @func_3491(%462) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
    %464 = cast(meta[relay.Constant][27] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %465 = cast(meta[relay.Constant][27] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %466 = reshape(%464, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
    %467 = reshape(%465, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
    %468 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
    %469 = @func_2727(%459) /* ty=Tensor[(5, 10, 14), bool] */;
    %470 = %460.0;
    %471 = %463.2;
    %472 = @func_161(%466, %467) /* ty=Tensor[(9, 9, 15), uint8] */;
    (%468, %469, %var_3766, %470, %471, meta[relay.Constant][26] /* ty=Tensor[(2, 240), int32] */, %472, meta[relay.Constant][27] /* ty=Tensor[(1215), uint8] */)
  };
  %473(%var_3789) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(2, 240), int32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */
}

def @func_14552() -> Tensor[(1215), uint8] {
  %475 = fn () -> Tensor[(1215), uint8] {
    %474 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %474.2
  };
  %475() /* ty=Tensor[(1215), uint8] */
}

def @func_12870(%var_12868: uint32, %var_12869: Tensor[(11, 10, 15), uint32]) -> (Tensor[(11, 10, 15), bool],) {
  @func_12866(%var_12868, %var_12869) /* ty=(Tensor[(11, 10, 15), bool],) */
}

def @func_13710() -> Tensor[(5, 14, 13), float32] {
  %477 = fn () -> Tensor[(5, 14, 13), float32] {
    %476 = @func_10058() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %476.0
  };
  %477() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_5386() -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_5384() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_14611(%var_14609: Tensor[(10, 14, 7), int16], %var_14610: Tensor[(10, 14, 7), int16]) -> (Tensor[(10, 14, 7), float64], Tensor[(5, 14, 13), float32]) {
  %489 = fn (%var_14562: Tensor[(10, 14, 7), int16], %var_14563: Tensor[(10, 14, 7), int16]) -> (Tensor[(10, 14, 7), float64], Tensor[(5, 14, 13), float32]) {
    %478 = cast(%var_14563, dtype="int16") /* ty=Tensor[(10, 14, 7), int16] */;
    %479 = shape_of(%var_14562, dtype="int32") /* ty=Tensor[(3), int32] */;
    %480 = cast(%var_14562, dtype="int16") /* ty=Tensor[(10, 14, 7), int16] */;
    %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %482 = left_shift(%480, %481) /* ty=Tensor[(10, 14, 7), int16] */;
    %483 = cast(%482, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
    %484 = shape_of(%var_14562, dtype="int32") /* ty=Tensor[(3), int32] */;
    %485 = cast(%var_14562, dtype="float64") /* ty=Tensor[(10, 14, 7), float64] */;
    %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %487 = mod(%485, %486) /* ty=Tensor[(10, 14, 7), float64] */;
    %488 = @func_11247() /* ty=Tensor[(5, 14, 13), float32] */;
    (%487, %488)
  };
  %489(%var_14609, %var_14610) /* ty=(Tensor[(10, 14, 7), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_411() -> (Tensor[(5, 14, 13), float32],) {
  @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_15553(%var_15552: Tensor[(3, 405), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(3, 405), uint8]) {
  %495 = fn (%var_15548: Tensor[(3, 405), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(3, 405), uint8]) {
    %490 = cast(%var_15548, dtype="uint8") /* ty=Tensor[(3, 405), uint8] */;
    %491 = reshape(%490, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %492 = @func_764(%491) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %493 = @func_13795() /* ty=Tensor[(5, 14, 13), float32] */;
    %494 = %492.1;
    (%493, %494, %var_15548)
  };
  %495(%var_15552) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(3, 405), uint8]) */
}

def @func_7782() -> (Tensor[(5, 14, 13), float32],) {
  @func_7780() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_1844() -> Tensor[(5, 14, 13), float32] {
  %496 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %496.0
}

def @func_13020(%var_12984: Tensor[(5, 140), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 140), int8], Tensor[(5, 14, 13), float32]) {
  %497 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %498 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %499 = cast(%var_12984, dtype="bool") /* ty=Tensor[(5, 140), bool] */;
  %500 = reshape(%499, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %501 = @func_2896(%500) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
  %502 = cast(meta[relay.Constant][28] /* ty=Tensor[(5, 140), bool] */, dtype="int8") /* ty=Tensor[(5, 140), int8] */;
  %503 = shape_of(%var_12984, dtype="int32") /* ty=Tensor[(2), int32] */;
  %504 = cast(%var_12984, dtype="int8") /* ty=Tensor[(5, 140), int8] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %506 = @func_7502() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %507 = %497.4;
  %508 = %498.2;
  %509 = %501.1;
  %510 = subtract(%504, %505) /* ty=Tensor[(5, 140), int8] */;
  %511 = %506.0;
  (%507, %508, %509, %510, %511)
}

def @func_16537() -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %519 = fn () -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %512 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %513 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %514 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %515 = %512.1;
    %516 = %513.0;
    %517 = @func_14166() /* ty=Tensor[(5, 14, 13), float32] */;
    %518 = %514.3;
    (%515, %516, %517, %518)
  };
  %519() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_17808() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(40), int16], Tensor[(480), int16], Tensor[(24, 26), float32]) {
  @func_17806() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(40), int16], Tensor[(480), int16], Tensor[(24, 26), float32]) */
}

def @func_17436() -> (Tensor[(9, 9, 15), uint8],) {
  %520 = @func_5384() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %521 = %520.0;
  (%521,)
}

def @func_18025(%var_18023: Tensor[(81, 15), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  @func_18022(%var_18023) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */
}

def @func_16973() -> (Tensor[(1215), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_16971() /* ty=(Tensor[(1215), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_17676() -> (Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(480), int64], Tensor[(5, 14, 13), float32]) {
  %522 = @func_7502() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %523 = cast(meta[relay.Constant][29] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %524 = cast(meta[relay.Constant][29] /* ty=Tensor[(480), int64] */, dtype="float64") /* ty=Tensor[(480), float64] */;
  %525 = reshape(%523, newshape=[4, 120]) /* ty=Tensor[(4, 120), int64] */;
  %526 = reshape(%524, newshape=[4, 120]) /* ty=Tensor[(4, 120), float64] */;
  %527 = @func_8843(%525, %526) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(4, 120), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) */;
  %528 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %529 = %522.0;
  %530 = %527.6;
  %531 = %528.0;
  (%529, %530, meta[relay.Constant][29] /* ty=Tensor[(480), int64] */, %531)
}

def @func_11632(%var_11605: Tensor[(10, 15, 11), float64], %var_11629: Tensor[(480), int32]) -> (Tensor[(10, 15, 11), float64], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) {
  %532 = cast(%var_11605, dtype="float64") /* ty=Tensor[(10, 15, 11), float64] */;
  %533 = cast(%var_11629, dtype="int32") /* ty=Tensor[(480), int32] */;
  %534 = cast(%var_11629, dtype="int32") /* ty=Tensor[(480), int32] */;
  %535 = reshape(%533, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %536 = reshape(%534, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %537 = @func_926(%535, %536) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %538 = tan(%532) /* ty=Tensor[(10, 15, 11), float64] */;
  %539 = %537.1;
  (%538, %539, %var_11629)
}

def @func_3350(%var_3345: Tensor[(12, 130), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(12, 130), float64]) {
  %540 = cast(%var_3345, dtype="float64") /* ty=Tensor[(12, 130), float64] */;
  %541 = reshape(%540, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %542 = @func_1822(%541) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %543 = @func_1844() /* ty=Tensor[(5, 14, 13), float32] */;
  %544 = %542.0;
  (%543, %544, %var_3345)
}

def @func_17036(%var_17021: Tensor[(7, 10, 4), float32], %var_17022: Tensor[(7, 10, 4), float32]) -> (Tensor[(7, 10, 4), float32], Tensor[(5, 14, 13), float32]) {
  %545 = cast(%var_17022, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  %546 = shape_of(%var_17021, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%var_17021, dtype="float32") /* ty=Tensor[(7, 10, 4), float32] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %549 = floor_divide(%547, %548) /* ty=Tensor[(7, 10, 4), float32] */;
  %550 = @func_10037() /* ty=Tensor[(5, 14, 13), float32] */;
  (%549, %550)
}

def @main() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) {
  %551 = @func_9217() /* ty=(Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %552 = @func_15962() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %553 = @func_15154() /* ty=Tensor[(5, 11, 12), float32] */;
  %554 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 11, 12), float32] */, dtype="int8") /* ty=Tensor[(5, 11, 12), int8] */;
  %555 = shape_of(%553, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%553, dtype="int8") /* ty=Tensor[(5, 11, 12), int8] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %558 = add(%556, %557) /* ty=Tensor[(5, 11, 12), int8] */;
  %559 = cast(%558, dtype="float32") /* ty=Tensor[(5, 11, 12), float32] */;
  %560 = @func_11547() /* ty=Tensor[(5, 14, 13), float32] */;
  %561 = %551.1;
  %562 = %552.2;
  %563 = cos(%559) /* ty=Tensor[(5, 11, 12), float32] */;
  (%560, %561, %562, %563)
}

def @func_1860() -> Tensor[(5, 14, 13), float32] {
  %565 = fn () -> Tensor[(5, 14, 13), float32] {
    %564 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
    %564.1
  };
  %565() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2800() -> Tensor[(5, 14, 13), float32] {
  @func_509() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_9503() -> (Tensor[(5, 14, 13), float32],) {
  %568 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %566 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %567 = %566.0;
    (%567,)
  };
  %568() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_18744() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) {
  @func_18742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) */
}

def @func_18554() -> (Tensor[(5, 14, 13), float32],) {
  %571 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %569 = @func_10815() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %570 = %569.1;
    (%570,)
  };
  %571() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_14922() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(7, 3, 6), float32]) {
  @func_14920() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(7, 3, 6), float32]) */
}

def @func_15815() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %572 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %573 = %572.0;
  %574 = @func_3757() /* ty=Tensor[(5, 14, 13), float32] */;
  (%573, %574)
}

def @func_2802() -> Tensor[(5, 14, 13), float32] {
  @func_2800() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2580() -> Tensor[(5, 14, 13), float32] {
  @func_2578() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_7935() -> Tensor[(5, 14, 13), float32] {
  %576 = fn () -> Tensor[(5, 14, 13), float32] {
    %575 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %575.0
  };
  %576() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2977() -> (Tensor[(5, 14, 13), float32],) {
  @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_13930() -> (Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32], Tensor[(112), float32], Tensor[(5, 14, 13), float32]) {
  %585 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32], Tensor[(112), float32], Tensor[(5, 14, 13), float32]) {
    %577 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %578 = cast(meta[relay.Constant][31] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %579 = reshape(%578, newshape=[1, 14, 8]) /* ty=Tensor[(1, 14, 8), float32] */;
    %580 = @func_10183(%579) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32]) */;
    %581 = @func_6844() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %582 = %577.0;
    %583 = %580.1;
    %584 = %581.1;
    (%582, %583, meta[relay.Constant][31] /* ty=Tensor[(112), float32] */, %584)
  };
  %585() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32], Tensor[(112), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_16753() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %586 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %587 = %586.0;
  %588 = @func_9900() /* ty=Tensor[(5, 14, 13), float32] */;
  (%587, %588)
}

def @func_6427() -> (Tensor[(5, 14, 13), float64],) {
  %591 = fn () -> (Tensor[(5, 14, 13), float64],) {
    %589 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %590 = %589.3;
    (%590,)
  };
  %591() /* ty=(Tensor[(5, 14, 13), float64],) */
}

def @func_4774() -> Tensor[(5, 14, 13), float32] {
  @func_4772() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_4143() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %596 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %592 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %593 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
    %594 = %592.0;
    %595 = %593.0;
    (%594, %595)
  };
  %596() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_9099(%var_9097: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  @func_9096(%var_9097) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */
}

def @func_13884() -> (Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(9, 9, 15), float32]) {
  @func_13882() /* ty=(Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(9, 9, 15), float32]) */
}

def @func_15529() -> Tensor[(5, 14, 13), float32] {
  @func_11416() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_8559() -> Tensor[(5, 14, 13), float32] {
  @func_8557() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_10037() -> Tensor[(5, 14, 13), float32] {
  @func_2800() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_18742() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) {
  %597 = @func_13034() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %598 = cast(meta[relay.Constant][32] /* ty=Tensor[(1560), float64] */, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %599 = reshape(%598, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
  %600 = @func_5716(%599) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32], Tensor[(1560), float64]) */;
  %601 = %597.0;
  %602 = %600.1;
  (%601, %602, meta[relay.Constant][32] /* ty=Tensor[(1560), float64] */)
}

def @func_9775() -> (Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) {
  %603 = @func_3889() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) */;
  %604 = @func_7152() /* ty=Tensor[(9, 9, 15), float32] */;
  %605 = %603.3;
  (%604, %605)
}

def @func_4818(%var_4817: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), float32],) {
  %608 = fn (%var_4804: Tensor[(13, 3, 16), float32]) -> (Tensor[(13, 3, 16), float32],) {
    %606 = cast(%var_4804, dtype="float32") /* ty=Tensor[(13, 3, 16), float32] */;
    %607 = log10(%606) /* ty=Tensor[(13, 3, 16), float32] */;
    (%607,)
  };
  %608(%var_4817) /* ty=(Tensor[(13, 3, 16), float32],) */
}

def @func_6312() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_6310() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_1661() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) {
  %609 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %610 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 5, 12), float32] */, dtype="float32") /* ty=Tensor[(14, 5, 12), float32] */;
  %611 = acosh(%610) /* ty=Tensor[(14, 5, 12), float32] */;
  %612 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 5, 12), float32] */, dtype="uint32") /* ty=Tensor[(14, 5, 12), uint32] */;
  %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(%611, dtype="uint32") /* ty=Tensor[(14, 5, 12), uint32] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %616 = @func_1620() /* ty=Tensor[(5, 14, 13), float32] */;
  %617 = %609.0;
  %618 = left_shift(%614, %615) /* ty=Tensor[(14, 5, 12), uint32] */;
  %619 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  (%616, %617, %618, %619)
}

def @func_5584(%var_5583: Tensor[(1, 480), int64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(1, 480), int64], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 6, 16), int64]) {
  %635 = fn (%var_5541: Tensor[(1, 480), int64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(1, 480), int64], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 6, 16), int64]) {
    %620 = @func_4382() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %621 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %622 = cast(%var_5541, dtype="int64") /* ty=Tensor[(1, 480), int64] */;
    %623 = reshape(%622, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
    %624 = @func_1006(%623) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
    %625 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
    %626 = %624.1;
    %627 = cast(%626, dtype="int64") /* ty=Tensor[(5, 6, 16), int64] */;
    %628 = reshape(%627, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
    %629 = @func_1006(%628) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
    %630 = %620.0;
    %631 = %621.0;
    %632 = @func_3292() /* ty=Tensor[(9, 9, 15), float32] */;
    %633 = %625.0;
    %634 = %629.0;
    (%630, %631, %626, %var_5541, %632, %633, %634)
  };
  %635(%var_5583) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(1, 480), int64], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 6, 16), int64]) */
}

def @func_3516() -> (Tensor[(5, 14, 13), float32],) {
  @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_3491(%var_3475: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) {
  %636 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %637 = cast(%var_3475, dtype="int32") /* ty=Tensor[(480), int32] */;
  %638 = cast(%var_3475, dtype="int32") /* ty=Tensor[(480), int32] */;
  %639 = reshape(%637, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %640 = reshape(%638, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %641 = @func_926(%639, %640) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %642 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %643 = %641.2;
  %644 = cast(%643, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %645 = cast(%643, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %646 = reshape(%644, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %647 = reshape(%645, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %648 = %636.0;
  %649 = %642.0;
  %650 = @func_161(%646, %647) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%648, %643, %var_3475, %649, %650)
}

def @func_16606() -> (Tensor[(5, 14, 13), float32],) {
  @func_16604() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_13476(%var_13474: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) {
  @func_13473(%var_13474) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) */
}

def @func_16252() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %651 = @func_14213() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %652 = @func_12476() /* ty=Tensor[(5, 14, 13), float32] */;
  %653 = %651.3;
  (%652, %653)
}

def @func_5304(%var_5302: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32]) {
  @func_5301(%var_5302) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32]) */
}

def @func_11636(%var_11634: Tensor[(10, 15, 11), float64], %var_11635: Tensor[(480), int32]) -> (Tensor[(10, 15, 11), float64], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) {
  @func_11632(%var_11634, %var_11635) /* ty=(Tensor[(10, 15, 11), float64], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */
}

def @func_17806() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(40), int16], Tensor[(480), int16], Tensor[(24, 26), float32]) {
  %654 = cast(meta[relay.Constant][34] /* ty=Tensor[(40), int16] */, dtype="int16") /* ty=Tensor[(40), int16] */;
  %655 = cast(meta[relay.Constant][35] /* ty=Tensor[(480), int16] */, dtype="int16") /* ty=Tensor[(480), int16] */;
  %656 = cast(meta[relay.Constant][36] /* ty=Tensor[(24, 26), float32] */, dtype="float32") /* ty=Tensor[(24, 26), float32] */;
  %657 = reshape(%654, newshape=[1, 4, 10]) /* ty=Tensor[(1, 4, 10), int16] */;
  %658 = reshape(%655, newshape=[12, 4, 10]) /* ty=Tensor[(12, 4, 10), int16] */;
  %659 = reshape(%656, newshape=[624]) /* ty=Tensor[(624), float32] */;
  %660 = @func_7406(%657, %658, %659) /* ty=(Tensor[(12, 4, 10), float64], Tensor[(12, 4, 10), float32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %661 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  %662 = %660.5;
  (%661, %662, meta[relay.Constant][34] /* ty=Tensor[(40), int16] */, meta[relay.Constant][35] /* ty=Tensor[(480), int16] */, meta[relay.Constant][36] /* ty=Tensor[(24, 26), float32] */)
}

def @func_9777() -> (Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) {
  @func_9775() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) */
}

def @func_18709() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %666 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %663 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %664 = @func_13910() /* ty=Tensor[(5, 14, 13), float32] */;
    %665 = %663.0;
    (%664, %665)
  };
  %666() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_5718(%var_5717: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32], Tensor[(1560), float64]) {
  %674 = fn (%var_5713: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32], Tensor[(1560), float64]) {
    %667 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %668 = cast(%var_5713, dtype="float64") /* ty=Tensor[(1560), float64] */;
    %669 = reshape(%668, newshape=[1560]) /* ty=Tensor[(1560), float64] */;
    %670 = @func_4605(%669) /* ty=(Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(5, 14, 13), float32]) */;
    %671 = %667.0;
    %672 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
    %673 = %670.0;
    (%671, %672, %673, %var_5713)
  };
  %674(%var_5717) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32], Tensor[(1560), float64]) */
}

def @func_12477() -> Tensor[(5, 14, 13), float32] {
  %676 = fn () -> Tensor[(5, 14, 13), float32] {
    %675 = @func_6310() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %675.1
  };
  %676() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_1435() -> (Tensor[(5, 14, 13), float32],) {
  @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_2899(%var_2897: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) {
  @func_2896(%var_2897) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */
}

def @func_1089(%var_1060: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %677 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %678 = cast(%var_1060, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %679 = cast(%var_1060, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %680 = reshape(%678, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %681 = reshape(%679, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %682 = %677.0;
  %683 = @func_161(%680, %681) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%682, %683, %var_1060)
}

def @func_9860() -> Tensor[(5, 14, 13), float32] {
  %685 = fn () -> Tensor[(5, 14, 13), float32] {
    %684 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %684.2
  };
  %685() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_18383() -> Tensor[(5, 14, 13), float32] {
  %687 = fn () -> Tensor[(5, 14, 13), float32] {
    %686 = @func_16971() /* ty=(Tensor[(1215), bool], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %686.1
  };
  %687() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_161(%var_156: Tensor[(9, 9, 15), uint8], %var_157: Tensor[(9, 9, 15), uint8]) -> Tensor[(9, 9, 15), uint8] {
  %688 = cast(%var_157, dtype="uint8") /* ty=Tensor[(9, 9, 15), uint8] */;
  %689 = shape_of(%var_156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%var_156, dtype="uint8") /* ty=Tensor[(9, 9, 15), uint8] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  multiply(%690, %691) /* ty=Tensor[(9, 9, 15), uint8] */
}

def @func_1433() -> (Tensor[(5, 14, 13), float32],) {
  %692 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %693 = %692.0;
  (%693,)
}

def @func_703() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %698 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %694 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %695 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %696 = %694.0;
    %697 = %695.0;
    (%696, %697)
  };
  %698() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_14674() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %699 = @func_10312() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %700 = cast(meta[relay.Constant][37] /* ty=Tensor[(480), int64] */, dtype="int64") /* ty=Tensor[(480), int64] */;
  %701 = reshape(%700, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
  %702 = @func_1006(%701) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
  %703 = cast(meta[relay.Constant][38] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %704 = reshape(%703, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %705 = @func_764(%704) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %706 = %699.0;
  %707 = %702.0;
  %708 = @func_11188() /* ty=Tensor[(5, 14, 13), float32] */;
  %709 = %705.1;
  (%706, %707, meta[relay.Constant][37] /* ty=Tensor[(480), int64] */, %708, %709, meta[relay.Constant][38] /* ty=Tensor[(1215), uint8] */)
}

def @func_11780() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480, 1), float64]) {
  %722 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480, 1), float64]) {
    %710 = @func_10976() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %711 = @func_6310() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %712 = @func_9540() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %713 = @func_9805() /* ty=Tensor[(480, 1), float32] */;
    %714 = cast(%713, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
    %715 = cos(%714) /* ty=Tensor[(480, 1), float64] */;
    %716 = cast(%715, dtype="float64") /* ty=Tensor[(480, 1), float64] */;
    %717 = %710.1;
    %718 = %711.0;
    %719 = @func_11416() /* ty=Tensor[(5, 14, 13), float32] */;
    %720 = %712.0;
    %721 = log(%716) /* ty=Tensor[(480, 1), float64] */;
    (%717, %718, %719, %720, %721)
  };
  %722() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480, 1), float64]) */
}

def @func_11278() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %723 = @func_10032() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %724 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %725 = %723.0;
  %726 = %724.0;
  (%725, %726)
}

def @func_17304() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %727 = @func_3103() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %728 = @func_4109() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %729 = %727.0;
  %730 = %728.1;
  (%729, %730)
}

def @func_17546() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  @func_17544() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */
}

def @func_1822(%var_1798: Tensor[(15, 8, 13), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) {
  %731 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %732 = cast(%var_1798, dtype="float64") /* ty=Tensor[(15, 8, 13), float64] */;
  %733 = sin(%732) /* ty=Tensor[(15, 8, 13), float64] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(15, 8, 13), float32] */;
  %735 = log2(%734) /* ty=Tensor[(15, 8, 13), float32] */;
  %736 = cast(%733, dtype="uint8") /* ty=Tensor[(15, 8, 13), uint8] */;
  %737 = shape_of(%735, dtype="int32") /* ty=Tensor[(3), int32] */;
  %738 = cast(%735, dtype="uint8") /* ty=Tensor[(15, 8, 13), uint8] */;
  %739 = dyn.reshape(%736, %737, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %740 = %731.2;
  %741 = bitwise_xor(%738, %739) /* ty=Tensor[(15, 8, 13), uint8] */;
  (%740, %741)
}

def @func_13796() -> Tensor[(5, 14, 13), float32] {
  %742 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_13537() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %742() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_16816() -> Tensor[(5, 14, 13), float32] {
  @func_16814() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_3353(%var_3351: Tensor[(12, 130), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(12, 130), float64]) {
  @func_3350(%var_3351) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(12, 130), float64]) */
}

def @func_5647() -> Tensor[(5, 14, 13), float32] {
  @func_5645() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_5792() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  @func_5790() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_15613() -> Tensor[(5, 14, 13), float32] {
  %743 = @func_10437() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32], Tensor[(5, 14, 13), float32]) */;
  %743.1
}

def @func_14107() -> Tensor[(5, 14, 13), float32] {
  %744 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_12289() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %744() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_18367() -> (Tensor[(480), int32],) {
  %745 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %746 = %745.2;
  (%746,)
}

def @func_14167() -> Tensor[(5, 14, 13), float32] {
  %747 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_10839() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %747() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13632() -> (Tensor[(5, 14, 13), float32],) {
  %748 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %749 = %748.0;
  (%749,)
}

def @func_13882() -> (Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(9, 9, 15), float32]) {
  %750 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %751 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %752 = @func_3122() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) */;
  %753 = cast(meta[relay.Constant][39] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %754 = reshape(%753, newshape=[4, 6, 9]) /* ty=Tensor[(4, 6, 9), float32] */;
  %755 = @func_10290(%754) /* ty=(Tensor[(4, 6, 9), float32],) */;
  %756 = %750.2;
  %757 = %751.0;
  %758 = %752.1;
  %759 = %755.0;
  %760 = @func_7152() /* ty=Tensor[(9, 9, 15), float32] */;
  (%756, %757, %758, %759, meta[relay.Constant][39] /* ty=Tensor[(216), float32] */, %760)
}

def @func_3980() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(5, 14, 13), float32], Tensor[(700), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %784 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(5, 14, 13), float32], Tensor[(700), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %761 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %762 = cast(meta[relay.Constant][40] /* ty=Tensor[(700), bool] */, dtype="bool") /* ty=Tensor[(700), bool] */;
    %763 = reshape(%762, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
    %764 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %765 = cast(meta[relay.Constant][40] /* ty=Tensor[(700), bool] */, dtype="float64") /* ty=Tensor[(700), float64] */;
    %766 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %767 = cast(meta[relay.Constant][41] /* ty=Tensor[(405, 3), uint8] */, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
    %768 = reshape(%767, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
    %769 = @func_2045(%768) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
    %770 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
    %771 = cast(meta[relay.Constant][41] /* ty=Tensor[(405, 3), uint8] */, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
    %772 = reshape(%771, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
    %773 = @func_2045(%772) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
    %774 = %761.0;
    %775 = @func_2727(%763) /* ty=Tensor[(5, 10, 14), bool] */;
    %776 = %764.2;
    %777 = erf(%765) /* ty=Tensor[(700), float64] */;
    %778 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %779 = %766.0;
    %780 = %769.3;
    %781 = %770.0;
    %782 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
    %783 = %773.3;
    (%774, %775, %776, %777, %778, %779, %780, meta[relay.Constant][41] /* ty=Tensor[(405, 3), uint8] */, %781, %782, %783)
  };
  %784() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(5, 14, 13), float32], Tensor[(700), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_10498() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %785 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %786 = @func_7979() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %787 = %785.2;
  %788 = %786.2;
  (%787, %788)
}

def @func_13634() -> (Tensor[(5, 14, 13), float32],) {
  @func_13632() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_8013() -> (Tensor[(5, 14, 13), float32],) {
  @func_8011() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_3153() -> (Tensor[(5, 14, 13), float32],) {
  %791 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %789 = @func_2905() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %790 = %789.0;
    (%790,)
  };
  %791() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_12688() -> (Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) {
  %792 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
  %793 = %792.2;
  %794 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
  (%793, %794)
}

def @func_16589() -> (Tensor[(9, 9, 15), float32],) {
  %797 = fn () -> (Tensor[(9, 9, 15), float32],) {
    %795 = @func_5094() /* ty=(Tensor[(9, 9, 15), float32],) */;
    %796 = %795.0;
    (%796,)
  };
  %797() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_8890() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_8888() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_15976() -> Tensor[(5, 14, 13), float32] {
  %798 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_3842() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %798() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_16413() -> Tensor[(5, 14, 13), float32] {
  %800 = fn () -> Tensor[(5, 14, 13), float32] {
    %799 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %799.1
  };
  %800() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_18237(%var_18236: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64], Tensor[(1215), float32]) {
  %804 = fn (%var_18215: Tensor[(1, 12, 6), float64]) -> (Tensor[(1, 12, 6), float64], Tensor[(1215), float32]) {
    %801 = cast(%var_18215, dtype="float64") /* ty=Tensor[(1, 12, 6), float64] */;
    %802 = log10(%801) /* ty=Tensor[(1, 12, 6), float64] */;
    %803 = @func_15362() /* ty=Tensor[(1215), float32] */;
    (%802, %803)
  };
  %804(%var_18236) /* ty=(Tensor[(1, 12, 6), float64], Tensor[(1215), float32]) */
}

def @func_8975() -> (Tensor[(5, 14, 13), float32],) {
  %805 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  (%805,)
}

def @func_2048(%var_2046: Tensor[(3, 405), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) {
  @func_2045(%var_2046) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */
}

def @func_7780() -> (Tensor[(5, 14, 13), float32],) {
  %806 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %807 = %806.1;
  (%807,)
}

def @func_10978() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_10976() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_8113() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %813 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %808 = @func_3232() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */;
    %809 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %810 = %808.0;
    %811 = @func_2578() /* ty=Tensor[(5, 14, 13), float32] */;
    %812 = %809.0;
    (%810, %811, %812)
  };
  %813() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_10186(%var_10184: Tensor[(1, 14, 8), float32]) -> (Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32]) {
  @func_10183(%var_10184) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32]) */
}

def @func_18652() -> (Tensor[(9, 9, 15), float32],) {
  %814 = @func_9775() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) */;
  %815 = %814.0;
  (%815,)
}

def @func_10438() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32], Tensor[(5, 14, 13), float32]) {
  %824 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32], Tensor[(5, 14, 13), float32]) {
    %816 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %817 = cast(meta[relay.Constant][42] /* ty=Tensor[(120, 4), int32] */, dtype="int32") /* ty=Tensor[(120, 4), int32] */;
    %818 = reshape(%817, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %819 = @func_3544(%818) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
    %820 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %821 = %816.0;
    %822 = %819.0;
    %823 = %820.0;
    (%821, %822, meta[relay.Constant][42] /* ty=Tensor[(120, 4), int32] */, %823)
  };
  %824() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32], Tensor[(5, 14, 13), float32]) */
}

def @func_9806() -> Tensor[(480, 1), float32] {
  %826 = fn () -> Tensor[(480, 1), float32] {
    %825 = @func_9775() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(480, 1), float32]) */;
    %825.1
  };
  %826() /* ty=Tensor[(480, 1), float32] */
}

def @func_15817() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_15815() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_14322() -> Tensor[(5, 14, 13), float32] {
  %828 = fn () -> Tensor[(5, 14, 13), float32] {
    %827 = @func_11779() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480, 1), float64]) */;
    %827.0
  };
  %828() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_965() -> (Tensor[(5, 14, 13), float32],) {
  %830 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %829 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    (%829,)
  };
  %830() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_13356() -> (Tensor[(480, 1), float32],) {
  %832 = fn () -> (Tensor[(480, 1), float32],) {
    %831 = @func_9805() /* ty=Tensor[(480, 1), float32] */;
    (%831,)
  };
  %832() /* ty=(Tensor[(480, 1), float32],) */
}

def @func_8846(%var_8844: Tensor[(4, 120), int64], %var_8845: Tensor[(4, 120), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(4, 120), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) {
  %853 = fn (%var_8792: Tensor[(4, 120), int64], %var_8810: Tensor[(4, 120), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(4, 120), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) {
    %833 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %834 = cast(%var_8792, dtype="int64") /* ty=Tensor[(4, 120), int64] */;
    %835 = reshape(%834, newshape=[1, 480]) /* ty=Tensor[(1, 480), int64] */;
    %836 = @func_5582(%835) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(1, 480), int64], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 6, 16), int64]) */;
    %837 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %838 = cast(%var_8792, dtype="float64") /* ty=Tensor[(4, 120), float64] */;
    %839 = log(%838) /* ty=Tensor[(4, 120), float64] */;
    %840 = cast(%var_8810, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
    %841 = shape_of(%839, dtype="int32") /* ty=Tensor[(2), int32] */;
    %842 = cast(%839, dtype="float32") /* ty=Tensor[(4, 120), float32] */;
    %843 = dyn.reshape(%840, %841, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %844 = cast(meta[relay.Constant][43] /* ty=Tensor[(70, 10), bool] */, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
    %845 = reshape(%844, newshape=[700]) /* ty=Tensor[(700), bool] */;
    %846 = @func_2896(%845) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) */;
    %847 = %833.0;
    %848 = %836.0;
    %849 = %837.0;
    %850 = @func_2800() /* ty=Tensor[(5, 14, 13), float32] */;
    %851 = floor_mod(%842, %843) /* ty=Tensor[(4, 120), float32] */;
    %852 = %846.1;
    (%847, %848, %849, %850, %851, %852, meta[relay.Constant][43] /* ty=Tensor[(70, 10), bool] */)
  };
  %853(%var_8844, %var_8845) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(4, 120), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) */
}

def @func_12332(%var_12330: Tensor[(8, 9, 7), int64], %var_12331: Tensor[(8, 9, 7), int64]) -> Tensor[(8, 9, 7), int64] {
  %858 = fn (%var_12319: Tensor[(8, 9, 7), int64], %var_12320: Tensor[(8, 9, 7), int64]) -> Tensor[(8, 9, 7), int64] {
    %854 = cast(%var_12320, dtype="int64") /* ty=Tensor[(8, 9, 7), int64] */;
    %855 = shape_of(%var_12319, dtype="int32") /* ty=Tensor[(3), int32] */;
    %856 = cast(%var_12319, dtype="int64") /* ty=Tensor[(8, 9, 7), int64] */;
    %857 = dyn.reshape(%854, %855, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    add(%856, %857) /* ty=Tensor[(8, 9, 7), int64] */
  };
  %858(%var_12330, %var_12331) /* ty=Tensor[(8, 9, 7), int64] */
}

def @func_16891(%var_16859: Tensor[(11, 14, 3), bool], %var_16860: Tensor[(11, 14, 3), bool]) -> (Tensor[(11, 14, 3), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(5, 14, 13), float32]) {
  %859 = cast(%var_16860, dtype="bool") /* ty=Tensor[(11, 14, 3), bool] */;
  %860 = shape_of(%var_16859, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%var_16859, dtype="bool") /* ty=Tensor[(11, 14, 3), bool] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %863 = cast(meta[relay.Constant][44] /* ty=Tensor[(216), float32] */, dtype="float32") /* ty=Tensor[(216), float32] */;
  %864 = reshape(%863, newshape=[4, 6, 9]) /* ty=Tensor[(4, 6, 9), float32] */;
  %865 = @func_10290(%864) /* ty=(Tensor[(4, 6, 9), float32],) */;
  %866 = @func_10518() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
  %867 = logical_and(%861, %862) /* ty=Tensor[(11, 14, 3), bool] */;
  %868 = %865.0;
  %869 = %866.0;
  (%867, %868, meta[relay.Constant][44] /* ty=Tensor[(216), float32] */, %869)
}

def @func_9042() -> (Tensor[(5, 14, 13), float32],) {
  @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_11190() -> Tensor[(5, 14, 13), float32] {
  @func_11188() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_11016() -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  @func_11014() /* ty=(Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_16254() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_16252() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_7213() -> Tensor[(5, 14, 13), float32] {
  %871 = fn () -> Tensor[(5, 14, 13), float32] {
    %870 = @func_4311() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %870.6
  };
  %871() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_6648(%var_6598: Tensor[(4, 7, 12), int8], %var_6599: Tensor[(4, 7, 12), int8], %var_6611: Tensor[(480), int32], %var_6640: Tensor[(1215), uint8]) -> (Tensor[(4, 7, 12), int8], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8]) {
  %872 = cast(%var_6599, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
  %873 = shape_of(%var_6598, dtype="int32") /* ty=Tensor[(3), int32] */;
  %874 = cast(%var_6598, dtype="int8") /* ty=Tensor[(4, 7, 12), int8] */;
  %875 = dyn.reshape(%872, %873, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %876 = cast(%var_6611, dtype="int32") /* ty=Tensor[(480), int32] */;
  %877 = reshape(%876, newshape=[1, 480]) /* ty=Tensor[(1, 480), int32] */;
  %878 = @func_5624(%877) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) */;
  %879 = cast(%var_6640, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %880 = reshape(%879, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %881 = @func_764(%880) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %882 = maximum(%874, %875) /* ty=Tensor[(4, 7, 12), int8] */;
  %883 = %878.1;
  %884 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %885 = %881.2;
  (%882, %883, %var_6611, %884, %885, %var_6640)
}

def @func_1825(%var_1823: Tensor[(15, 8, 13), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) {
  @func_1822(%var_1823) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */
}

def @func_9016() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %889 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %886 = @func_4311() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %887 = %886.5;
    %888 = @func_7212() /* ty=Tensor[(5, 14, 13), float32] */;
    (%887, %888)
  };
  %889() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_2327() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %893 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %890 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %891 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %892 = %890.0;
    (%891, %892)
  };
  %893() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_17167() -> (Tensor[(5, 14, 13), float32],) {
  %895 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %894 = @func_4990() /* ty=Tensor[(5, 14, 13), float32] */;
    (%894,)
  };
  %895() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_7010(%var_7008: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480), int32], Tensor[(480), int32]) {
  @func_7007(%var_7008) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480), int32], Tensor[(480), int32]) */
}

def @func_14700() -> (Tensor[(5, 14, 13), float32],) {
  %896 = @func_8504() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %897 = %896.1;
  (%897,)
}

def @func_11065() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %898 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  %899 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
  (%898, %899)
}

def @func_5096() -> (Tensor[(9, 9, 15), float32],) {
  @func_5094() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_11124() -> (Tensor[(5, 11, 12), float32],) {
  %900 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
  (%900,)
}

def @func_9402(%var_9400: Tensor[(16), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  @func_9399(%var_9400) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */
}

def @func_8977() -> (Tensor[(5, 14, 13), float32],) {
  @func_8975() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_15156() -> Tensor[(5, 11, 12), float32] {
  @func_15154() /* ty=Tensor[(5, 11, 12), float32] */
}

def @func_14857() -> (Tensor[(5, 14, 13), float32],) {
  @func_14855() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_12076(%var_12075: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
  %909 = fn (%var_12071: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
    %901 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
    %902 = cast(%var_12071, dtype="int32") /* ty=Tensor[(480), int32] */;
    %903 = reshape(%902, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %904 = @func_3544(%903) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
    %905 = %901.3;
    %906 = @func_9596() /* ty=Tensor[(5, 14, 13), float32] */;
    %907 = @func_7934() /* ty=Tensor[(5, 14, 13), float32] */;
    %908 = %904.0;
    (%905, %906, %907, %908, %var_12071)
  };
  %909(%var_12075) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */
}

def @func_3123() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) {
  %915 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) {
    %910 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %911 = cast(meta[relay.Constant][45] /* ty=Tensor[(70, 10), bool] */, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
    %912 = reshape(%911, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
    %913 = %910.0;
    %914 = @func_2727(%912) /* ty=Tensor[(5, 10, 14), bool] */;
    (%913, %914, meta[relay.Constant][45] /* ty=Tensor[(70, 10), bool] */)
  };
  %915() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) */
}

def @func_1009(%var_1007: Tensor[(5, 6, 16), int64]) -> (Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) {
  @func_1006(%var_1007) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_8463(%var_8369: Tensor[(40, 12), int32], %var_8447: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(405, 3), uint32], Tensor[(16, 6, 5), float32], Tensor[(1215), float64], Tensor[(40, 12), float64], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %916 = @func_4705() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
  %917 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %918 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %919 = %918.2;
  %920 = cast(%919, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %921 = reshape(%920, newshape=[405, 3]) /* ty=Tensor[(405, 3), uint8] */;
  %922 = @func_5853(%921) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(405, 3), uint32]) */;
  %923 = cast(%var_8369, dtype="int32") /* ty=Tensor[(40, 12), int32] */;
  %924 = reshape(%923, newshape=[2, 240]) /* ty=Tensor[(2, 240), int32] */;
  %925 = @func_6007(%924) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int32], Tensor[(16, 6, 5), float32]) */;
  %926 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %927 = %926.5;
  %928 = cast(%927, dtype="float64") /* ty=Tensor[(1215), float64] */;
  %929 = cast(%var_8369, dtype="float64") /* ty=Tensor[(40, 12), float64] */;
  %930 = cast(%var_8447, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %931 = reshape(%930, newshape=[12, 130]) /* ty=Tensor[(12, 130), float64] */;
  %932 = @func_3350(%931) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(12, 130), float64]) */;
  %933 = %922.3;
  %934 = cast(%933, dtype="uint8") /* ty=Tensor[(405, 3), uint8] */;
  %935 = rsqrt(%928) /* ty=Tensor[(1215), float64] */;
  %936 = cast(%935, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %937 = reshape(%934, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %938 = reshape(%936, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %939 = cast(%927, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %940 = reshape(%939, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %941 = @func_1089(%940) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %942 = %916.0;
  %943 = %917.3;
  %944 = %925.3;
  %945 = asin(%929) /* ty=Tensor[(40, 12), float64] */;
  %946 = %932.0;
  %947 = @func_161(%937, %938) /* ty=Tensor[(9, 9, 15), uint8] */;
  %948 = %941.2;
  (%942, %943, %919, %933, %944, %935, %945, %946, %var_8447, %947, %948)
}

def @func_17438() -> (Tensor[(9, 9, 15), uint8],) {
  @func_17436() /* ty=(Tensor[(9, 9, 15), uint8],) */
}

def @func_11801() -> Tensor[(5, 14, 13), float32] {
  @func_11799() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_8888() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %949 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %950 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %951 = %949.0;
  %952 = %950.2;
  (%951, %952)
}

def @func_9040() -> (Tensor[(5, 14, 13), float32],) {
  %953 = @func_1591() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %954 = %953.2;
  (%954,)
}

def @func_14420() -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  @func_14418() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_472() -> Tensor[(5, 14, 13), float32] {
  %955 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_359() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %955() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_930(%var_928: Tensor[(16, 6, 5), int32], %var_929: Tensor[(16, 6, 5), int32]) -> (Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  @func_926(%var_928, %var_929) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */
}

def @func_766(%var_765: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %964 = fn (%var_745: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
    %956 = cast(%var_745, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %957 = cast(%var_745, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %958 = reshape(%956, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
    %959 = reshape(%957, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
    %960 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %961 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %962 = @func_161(%958, %959) /* ty=Tensor[(9, 9, 15), uint8] */;
    %963 = %960.0;
    (%961, %962, %var_745, %963)
  };
  %964(%var_765) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */
}

def @func_5947(%var_5946: Tensor[(9, 135), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) {
  %976 = fn (%var_5913: Tensor[(9, 135), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) {
    %965 = @func_2975() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %966 = cast(%var_5913, dtype="uint8") /* ty=Tensor[(9, 135), uint8] */;
    %967 = reshape(%966, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %968 = @func_764(%967) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %969 = cast(meta[relay.Constant][46] /* ty=Tensor[(2, 240), int64] */, dtype="int64") /* ty=Tensor[(2, 240), int64] */;
    %970 = reshape(%969, newshape=[5, 6, 16]) /* ty=Tensor[(5, 6, 16), int64] */;
    %971 = @func_1006(%970) /* ty=(Tensor[(5, 6, 16), int64], Tensor[(5, 6, 16), float32], Tensor[(5, 14, 13), float32]) */;
    %972 = %965.0;
    %973 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %974 = %968.1;
    %975 = %971.2;
    (%972, %973, %974, %var_5913, %975, meta[relay.Constant][46] /* ty=Tensor[(2, 240), int64] */)
  };
  %976(%var_5946) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) */
}

def @func_15022() -> Tensor[(5, 14, 13), float32] {
  @func_15020() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_3494(%var_3492: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) {
  @func_3491(%var_3492) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */
}

def @func_15906(%var_15904: Tensor[(1560), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) {
  @func_15903(%var_15904) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64]) */
}

def @func_17732() -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %982 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
    %977 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %978 = @func_15961() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %979 = @func_14093() /* ty=Tensor[(5, 14, 13), float32] */;
    %980 = %977.2;
    %981 = %978.1;
    (%979, %980, %981)
  };
  %982() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */
}

def @func_8557() -> Tensor[(5, 14, 13), float32] {
  %983 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
  %983.1
}

def @func_8263() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %984 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %985 = cast(meta[relay.Constant][47] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %986 = cast(meta[relay.Constant][47] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %987 = reshape(%985, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %988 = reshape(%986, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %989 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %990 = %984.1;
  %991 = @func_161(%987, %988) /* ty=Tensor[(9, 9, 15), uint8] */;
  %992 = %989.0;
  (%990, %991, meta[relay.Constant][47] /* ty=Tensor[(1215), uint8] */, %992)
}

def @func_3743() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %1004 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
    %993 = @func_702() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %994 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %995 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
    %996 = cast(meta[relay.Constant][48] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %997 = reshape(%996, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %998 = @func_1089(%997) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %999 = %993.0;
    %1000 = %994.0;
    %1001 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
    %1002 = %995.0;
    %1003 = %998.1;
    (%999, %1000, %1001, %1002, %1003, meta[relay.Constant][48] /* ty=Tensor[(1215), uint8] */)
  };
  %1004() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */
}

def @func_7129(%var_7127: Tensor[(2, 2, 4), float64], %var_7128: Tensor[(2, 2, 4), float64]) -> (Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) {
  %1017 = fn (%var_7110: Tensor[(2, 2, 4), float64], %var_7120: Tensor[(2, 2, 4), float64]) -> (Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) {
    %1005 = cast(%var_7110, dtype="float64") /* ty=Tensor[(2, 2, 4), float64] */;
    %1006 = rsqrt(%1005) /* ty=Tensor[(2, 2, 4), float64] */;
    %1007 = cast(%1006, dtype="float32") /* ty=Tensor[(2, 2, 4), float32] */;
    %1008 = shape_of(%var_7110, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1009 = cast(%var_7110, dtype="float32") /* ty=Tensor[(2, 2, 4), float32] */;
    %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1011 = cast(%var_7120, dtype="uint8") /* ty=Tensor[(2, 2, 4), uint8] */;
    %1012 = shape_of(%1006, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1013 = cast(%1006, dtype="uint8") /* ty=Tensor[(2, 2, 4), uint8] */;
    %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1015 = power(%1009, %1010) /* ty=Tensor[(2, 2, 4), float32] */;
    %1016 = bitwise_xor(%1013, %1014) /* ty=Tensor[(2, 2, 4), uint8] */;
    (%1015, %1016)
  };
  %1017(%var_7127, %var_7128) /* ty=(Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) */
}

def @func_13819() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  @func_13817() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_14387(%var_14353: Tensor[(13, 15, 4), float32], %var_14373: Tensor[(480), int32]) -> (Tensor[(10, 5, 2), bool], float64, Tensor[(480), int32], Tensor[(13, 15, 4), float64]) {
  %1018 = cast(-7.40495f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1019 = cast(%var_14373, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1020 = reshape(%1018, newshape=[]) /* ty=float64 */;
  %1021 = reshape(%1019, newshape=[120, 4]) /* ty=Tensor[(120, 4), int32] */;
  %1022 = @func_13433(%1020, %1021) /* ty=(Tensor[(10, 5, 2), bool], Tensor[(5, 14, 13), float32], Tensor[(10, 5, 2), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32]) */;
  %1023 = cast(%var_14353, dtype="float32") /* ty=Tensor[(13, 15, 4), float32] */;
  %1024 = sinh(%1023) /* ty=Tensor[(13, 15, 4), float32] */;
  %1025 = cast(%1024, dtype="float64") /* ty=Tensor[(13, 15, 4), float64] */;
  %1026 = %1022.0;
  %1027 = rsqrt(%1025) /* ty=Tensor[(13, 15, 4), float64] */;
  (%1026, -7.40495f64 /* ty=float64 */, %var_14373, %1027)
}

def @func_1592() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1037 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1028 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1029 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1030 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1031 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1032 = %1028.0;
    %1033 = %1029.2;
    %1034 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
    %1035 = %1030.0;
    %1036 = %1031.0;
    (%1032, %1033, %1034, %1035, %1036)
  };
  %1037() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_5094() -> (Tensor[(9, 9, 15), float32],) {
  %1038 = @func_3232() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */;
  %1039 = %1038.1;
  (%1039,)
}

def @func_6237(%var_6236: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
  %1051 = fn (%var_6232: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
    %1040 = @func_3292() /* ty=Tensor[(9, 9, 15), float32] */;
    %1041 = cast(meta[relay.Constant][49] /* ty=Tensor[(9, 9, 15), float32] */, dtype="bool") /* ty=Tensor[(9, 9, 15), bool] */;
    %1042 = shape_of(%1040, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1043 = cast(%1040, dtype="bool") /* ty=Tensor[(9, 9, 15), bool] */;
    %1044 = dyn.reshape(%1041, %1042, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1045 = cast(%var_6232, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1046 = reshape(%1045, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1047 = @func_3544(%1046) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) */;
    %1048 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
    %1049 = not_equal(%1043, %1044) /* ty=Tensor[(9, 9, 15), bool] */;
    %1050 = %1047.0;
    (%1048, %1049, %1050, %var_6232)
  };
  %1051(%var_6236) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */
}

def @func_6330(%var_6328: Tensor[(12, 15, 10), uint16]) -> Tensor[(12, 15, 10), uint16] {
  @func_6327(%var_6328) /* ty=Tensor[(12, 15, 10), uint16] */
}

def @func_685() -> (Tensor[(5, 14, 13), float32],) {
  %1054 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1052 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1053 = %1052.1;
    (%1053,)
  };
  %1054() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_2555() -> Tensor[(5, 14, 13), float32] {
  %1056 = fn () -> Tensor[(5, 14, 13), float32] {
    %1055 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1055.0
  };
  %1056() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_12523() -> Tensor[(5, 14, 13), float32] {
  %1057 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_8704() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %1057() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13539() -> Tensor[(5, 14, 13), float32] {
  @func_13537() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_14490() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) {
  %1067 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) {
    %1058 = cast(meta[relay.Constant][50] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %1059 = reshape(%1058, newshape=[9, 135]) /* ty=Tensor[(9, 135), uint8] */;
    %1060 = @func_5945(%1059) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) */;
    %1061 = cast(meta[relay.Constant][51] /* ty=Tensor[(700), bool] */, dtype="bool") /* ty=Tensor[(700), bool] */;
    %1062 = reshape(%1061, newshape=[5, 140]) /* ty=Tensor[(5, 140), bool] */;
    %1063 = @func_13020(%1062) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 140), int8], Tensor[(5, 14, 13), float32]) */;
    %1064 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
    %1065 = %1060.0;
    %1066 = %1063.4;
    (%1064, %1065, meta[relay.Constant][50] /* ty=Tensor[(1215), uint8] */, %1066, meta[relay.Constant][51] /* ty=Tensor[(700), bool] */)
  };
  %1067() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(700), bool]) */
}

def @func_17904(%var_17902: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) {
  @func_17901(%var_17902) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */
}

def @func_12313() -> (Tensor[(9, 9, 15), float32],) {
  @func_12311() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_16012() -> (Tensor[(9, 9, 15), float32],) {
  %1068 = @func_12311() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %1069 = %1068.0;
  (%1069,)
}

def @func_8504() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1070 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %1071 = @func_2165() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), float32], Tensor[(480), int64], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1072 = %1070.4;
  %1073 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %1074 = %1071.5;
  (%1072, %1073, %1074)
}

def @func_2896(%var_2887: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool]) {
  %1075 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1076 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %1077 = cast(%var_2887, dtype="bool") /* ty=Tensor[(700), bool] */;
  %1078 = reshape(%1077, newshape=[5, 10, 14]) /* ty=Tensor[(5, 10, 14), bool] */;
  %1079 = %1075.0;
  %1080 = %1076.1;
  %1081 = @func_2727(%1078) /* ty=Tensor[(5, 10, 14), bool] */;
  (%1079, %1080, %1081, %var_2887)
}

def @func_8667() -> (Tensor[(5, 14, 13), float32],) {
  %1084 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1082 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1083 = %1082.0;
    (%1083,)
  };
  %1084() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_11654(%var_11652: Tensor[(2, 7, 14), float64], %var_11653: Tensor[(2, 7, 14), float64]) -> (Tensor[(2, 7, 14), float64], Tensor[(5, 14, 13), float32]) {
  %1092 = fn (%var_11641: Tensor[(2, 7, 14), float64], %var_11642: Tensor[(2, 7, 14), float64]) -> (Tensor[(2, 7, 14), float64], Tensor[(5, 14, 13), float32]) {
    %1085 = cast(%var_11642, dtype="float64") /* ty=Tensor[(2, 7, 14), float64] */;
    %1086 = shape_of(%var_11641, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1087 = cast(%var_11641, dtype="float64") /* ty=Tensor[(2, 7, 14), float64] */;
    %1088 = dyn.reshape(%1085, %1086, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1089 = @func_10976() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1090 = minimum(%1087, %1088) /* ty=Tensor[(2, 7, 14), float64] */;
    %1091 = %1089.0;
    (%1090, %1091)
  };
  %1092(%var_11652, %var_11653) /* ty=(Tensor[(2, 7, 14), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_13593() -> Tensor[(9, 9, 15), float32] {
  @func_13591() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_16014() -> (Tensor[(9, 9, 15), float32],) {
  @func_16012() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_589() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1093 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1094 = %1093.0;
  %1095 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  %1096 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1094, %1095, %1096)
}

def @func_4991() -> Tensor[(5, 14, 13), float32] {
  %1098 = fn () -> Tensor[(5, 14, 13), float32] {
    %1097 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1097.0
  };
  %1098() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_6371(%var_6370: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
  %1108 = fn (%var_6367: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) {
    %1099 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1100 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1101 = cast(%var_6367, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1102 = reshape(%1101, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1103 = @func_6235(%1102) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
    %1104 = %1099.0;
    %1105 = @func_5456() /* ty=Tensor[(9, 9, 15), float32] */;
    %1106 = %1100.2;
    %1107 = %1103.0;
    (%1104, %1105, %1106, %1107, %var_6367)
  };
  %1108(%var_6370) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */
}

def @func_7153() -> Tensor[(9, 9, 15), float32] {
  %1110 = fn () -> Tensor[(9, 9, 15), float32] {
    %1109 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
    %1109.0
  };
  %1110() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_13910() -> Tensor[(5, 14, 13), float32] {
  %1111 = @func_2905() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1111.0
}

def @func_13344(%var_13332: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %1112 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1113 = @func_11375() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1114 = cast(%var_13332, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1115 = reshape(%1114, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1116 = @func_1089(%1115) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1117 = %1112.0;
  %1118 = %1113.0;
  %1119 = %1116.2;
  %1120 = @func_11799() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1117, %1118, %1119, %var_13332, %1120)
}

def @func_7764(%var_7763: float32) -> (Tensor[(5, 14, 13), float32], Tensor[(1, 4, 4), uint64], Tensor[(5, 14, 13), float32]) {
  %1131 = fn (%var_7725: float32) -> (Tensor[(5, 14, 13), float32], Tensor[(1, 4, 4), uint64], Tensor[(5, 14, 13), float32]) {
    %1121 = @func_5790() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
    %1122 = cast(%var_7725, dtype="float32") /* ty=float32 */;
    %1123 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(1, 4, 4), float32] */;
    %1124 = floor_divide(%1122, %1123) /* ty=Tensor[(1, 4, 4), float32] */;
    %1125 = cast(%var_7725, dtype="uint64") /* ty=uint64 */;
    %1126 = cast(%1124, dtype="uint64") /* ty=Tensor[(1, 4, 4), uint64] */;
    %1127 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
    %1128 = %1121.1;
    %1129 = right_shift(%1125, %1126) /* ty=Tensor[(1, 4, 4), uint64] */;
    %1130 = %1127.0;
    (%1128, %1129, %1130)
  };
  %1131(%var_7763) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1, 4, 4), uint64], Tensor[(5, 14, 13), float32]) */
}

def @func_11417() -> Tensor[(5, 14, 13), float32] {
  %1133 = fn () -> Tensor[(5, 14, 13), float32] {
    %1132 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1132.0
  };
  %1133() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2600() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_14826() -> (Tensor[(5, 14, 13), float32],) {
  %1135 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1134 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_10032() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1136 = @func_9747() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1137 = %1136.1;
  %1138 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1137, %1138)
}

def @func_14676() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  @func_14674() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */
}

def @func_16755() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_16753() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_17126() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1142 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1139 = @func_5142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1140 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
    %1141 = %1139.1;
    (%1140, %1141)
  };
  %1142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_18151(%var_18149: Tensor[(980, 1), int16]) -> (Tensor[(1, 700), bool], Tensor[(5, 14, 13), float32], Tensor[(980, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_18148(%var_18149) /* ty=(Tensor[(1, 700), bool], Tensor[(5, 14, 13), float32], Tensor[(980, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_9991() -> (Tensor[(1215), uint8],) {
  %1143 = @func_2598() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1144 = %1143.2;
  (%1144,)
}

def @func_16485(%var_16484: Tensor[(480, 13), float32]) -> (Tensor[(480, 13), bool], Tensor[(480, 13), float32]) {
  %1152 = fn (%var_16467: Tensor[(480, 13), float32]) -> (Tensor[(480, 13), bool], Tensor[(480, 13), float32]) {
    %1145 = @func_3889() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) */;
    %1146 = %1145.3;
    %1147 = cast(%1146, dtype="bool") /* ty=Tensor[(480, 1), bool] */;
    %1148 = cast(%var_16467, dtype="bool") /* ty=Tensor[(480, 13), bool] */;
    %1149 = cast(%var_16467, dtype="float32") /* ty=Tensor[(480, 13), float32] */;
    %1150 = greater_equal(%1147, %1148) /* ty=Tensor[(480, 13), bool] */;
    %1151 = acosh(%1149) /* ty=Tensor[(480, 13), float32] */;
    (%1150, %1151)
  };
  %1152(%var_16484) /* ty=(Tensor[(480, 13), bool], Tensor[(480, 13), float32]) */
}

def @func_14721() -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %1153 = @func_9712() /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
  %1154 = @func_11278() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1155 = %1153.0;
  %1156 = %1154.1;
  (%1155, %1156)
}

def @func_7712() -> (Tensor[(5, 14, 13), float32],) {
  @func_7710() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_2975() -> (Tensor[(5, 14, 13), float32],) {
  %1157 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1158 = %1157.0;
  (%1158,)
}

def @func_6009(%var_6008: Tensor[(2, 240), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int32], Tensor[(16, 6, 5), float32]) {
  %1166 = fn (%var_5979: Tensor[(2, 240), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int32], Tensor[(16, 6, 5), float32]) {
    %1159 = cast(%var_5979, dtype="int32") /* ty=Tensor[(2, 240), int32] */;
    %1160 = reshape(%1159, newshape=[1, 480]) /* ty=Tensor[(1, 480), int32] */;
    %1161 = @func_5624(%1160) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) */;
    %1162 = @func_4311() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1163 = @func_5645() /* ty=Tensor[(5, 14, 13), float32] */;
    %1164 = %1161.0;
    %1165 = %1162.2;
    (%1163, %1164, %var_5979, %1165)
  };
  %1166(%var_6008) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int32], Tensor[(16, 6, 5), float32]) */
}

def @func_6327(%var_6314: Tensor[(12, 15, 10), uint16]) -> Tensor[(12, 15, 10), uint16] {
  %1167 = cast(%var_6314, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %1168 = shape_of(meta[relay.Constant][53] /* ty=Tensor[(12, 15, 10), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1169 = cast(meta[relay.Constant][53] /* ty=Tensor[(12, 15, 10), uint16] */, dtype="uint16") /* ty=Tensor[(12, 15, 10), uint16] */;
  %1170 = dyn.reshape(%1167, %1168, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_or(%1169, %1170) /* ty=Tensor[(12, 15, 10), uint16] */
}

def @func_13255() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  @func_13253() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_6310() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1171 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1172 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
  %1173 = %1171.0;
  (%1172, %1173)
}

def @func_11280() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_11278() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_9540() -> (Tensor[(5, 14, 13), float32],) {
  %1174 = @func_8888() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1175 = %1174.1;
  (%1175,)
}

def @func_1965(%var_1964: Tensor[(4, 1, 10), float64]) -> Tensor[(4, 1, 10), float32] {
  %1179 = fn (%var_1946: Tensor[(4, 1, 10), float64]) -> Tensor[(4, 1, 10), float32] {
    %1176 = cast(%var_1946, dtype="float64") /* ty=Tensor[(4, 1, 10), float64] */;
    %1177 = asin(%1176) /* ty=Tensor[(4, 1, 10), float64] */;
    %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(4, 1, 10), float32] */;
    cos(%1178) /* ty=Tensor[(4, 1, 10), float32] */
  };
  %1179(%var_1964) /* ty=Tensor[(4, 1, 10), float32] */
}

def @func_9025() -> (Tensor[(5, 14, 13), float32],) {
  %1182 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1180 = @func_3152() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1181 = %1180.0;
    (%1181,)
  };
  %1182() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_1261(%var_1260: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) {
  %1193 = fn (%var_1240: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) {
    %1183 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1184 = cast(%var_1240, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %1185 = reshape(%1184, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %1186 = @func_764(%1185) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %1187 = cast(%var_1240, dtype="float64") /* ty=Tensor[(1215), float64] */;
    %1188 = %1183.2;
    %1189 = %1186.2;
    %1190 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
    %1191 = sqrt(%1187) /* ty=Tensor[(1215), float64] */;
    %1192 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1188, %1189, %1190, %1191, %1192)
  };
  %1193(%var_1260) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(1215), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_3842() -> Tensor[(5, 14, 13), float32] {
  %1194 = @func_3152() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1194.0
}

def @func_10313() -> (Tensor[(5, 14, 13), float32],) {
  %1197 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1195 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1196 = %1195.0;
    (%1196,)
  };
  %1197() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_14723() -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  @func_14721() /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_14945() -> (Tensor[(5, 14, 13), float32],) {
  %1200 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1198 = @func_1462() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1199 = %1198.0;
    (%1199,)
  };
  %1200() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_15852() -> (Tensor[(5, 14, 13), float32],) {
  %1201 = @func_15219() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1201,)
}

def @func_17341(%var_17340: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8]) {
  %1207 = fn (%var_17335: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8]) {
    %1202 = cast(%var_17335, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %1203 = reshape(%1202, newshape=[9, 135]) /* ty=Tensor[(9, 135), uint8] */;
    %1204 = @func_5945(%1203) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(9, 135), uint8], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64]) */;
    %1205 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
    %1206 = %1204.5;
    (%1205, %1206, %var_17335)
  };
  %1207(%var_17340) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8]) */
}

def @func_7410(%var_7407: Tensor[(1, 4, 10), int16], %var_7408: Tensor[(12, 4, 10), int16], %var_7409: Tensor[(624), float32]) -> (Tensor[(12, 4, 10), float64], Tensor[(12, 4, 10), float32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1226 = fn (%var_7333: Tensor[(1, 4, 10), int16], %var_7334: Tensor[(12, 4, 10), int16], %var_7393: Tensor[(624), float32]) -> (Tensor[(12, 4, 10), float64], Tensor[(12, 4, 10), float32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1208 = cast(%var_7333, dtype="bool") /* ty=Tensor[(1, 4, 10), bool] */;
    %1209 = cast(%var_7334, dtype="bool") /* ty=Tensor[(12, 4, 10), bool] */;
    %1210 = less(%1208, %1209) /* ty=Tensor[(12, 4, 10), bool] */;
    %1211 = cast(%1210, dtype="float64") /* ty=Tensor[(12, 4, 10), float64] */;
    %1212 = cast(%1210, dtype="float64") /* ty=Tensor[(12, 4, 10), float64] */;
    %1213 = acosh(%1212) /* ty=Tensor[(12, 4, 10), float64] */;
    %1214 = cast(%1213, dtype="float32") /* ty=Tensor[(12, 4, 10), float32] */;
    %1215 = cast(%var_7393, dtype="float32") /* ty=Tensor[(624), float32] */;
    %1216 = reshape(%1215, newshape=[13, 3, 16]) /* ty=Tensor[(13, 3, 16), float32] */;
    %1217 = @func_4816(%1216) /* ty=(Tensor[(13, 3, 16), float32],) */;
    %1218 = cast(%1213, dtype="int32") /* ty=Tensor[(12, 4, 10), int32] */;
    %1219 = reshape(%1218, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1220 = @func_6235(%1219) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
    %1221 = erf(%1211) /* ty=Tensor[(12, 4, 10), float64] */;
    %1222 = log(%1214) /* ty=Tensor[(12, 4, 10), float32] */;
    %1223 = %1217.0;
    %1224 = %1220.2;
    %1225 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1221, %1222, %1223, %var_7393, %1224, %1225)
  };
  %1226(%var_7407, %var_7408, %var_7409) /* ty=(Tensor[(12, 4, 10), float64], Tensor[(12, 4, 10), float32], Tensor[(13, 3, 16), float32], Tensor[(624), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_2660() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1227 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1228 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1229 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1230 = %1227.0;
  %1231 = %1228.0;
  %1232 = %1229.0;
  (%1230, %1231, %1232)
}

def @func_10976() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1233 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1234 = @func_2578() /* ty=Tensor[(5, 14, 13), float32] */;
  %1235 = %1233.0;
  (%1234, %1235)
}

def @func_3757() -> Tensor[(5, 14, 13), float32] {
  @func_359() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2662() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_9712() -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %1236 = @func_1400() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %1237 = @func_8591() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1238 = %1236.0;
  %1239 = %1237.0;
  (%1238, %1239)
}

def @func_327() -> (Tensor[(5, 14, 13), float32],) {
  %1242 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1240 = cast(meta[relay.Constant][54] /* ty=Tensor[(5, 14, 13), float32] */, dtype="float32") /* ty=Tensor[(5, 14, 13), float32] */;
    %1241 = cos(%1240) /* ty=Tensor[(5, 14, 13), float32] */;
    (%1241,)
  };
  %1242() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_8265() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */
}

def @func_15430() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1243 = @func_7462() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1244 = %1243.0;
  %1245 = @func_10839() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1244, %1245)
}

def @func_11126() -> (Tensor[(5, 11, 12), float32],) {
  @func_11124() /* ty=(Tensor[(5, 11, 12), float32],) */
}

def @func_9597() -> Tensor[(5, 14, 13), float32] {
  %1246 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_5215() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %1246() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13253() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1247 = cast(meta[relay.Constant][55] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1248 = reshape(%1247, newshape=[3, 405]) /* ty=Tensor[(3, 405), uint8] */;
  %1249 = @func_2045(%1248) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(3, 405), bool], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(1215), uint8]) */;
  %1250 = @func_7064() /* ty=Tensor[(5, 14, 13), float32] */;
  %1251 = %1249.3;
  (%1250, %1251, meta[relay.Constant][55] /* ty=Tensor[(1215), uint8] */)
}

def @func_360() -> Tensor[(5, 14, 13), float32] {
  %1253 = fn () -> Tensor[(5, 14, 13), float32] {
    %1252 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1252.0
  };
  %1253() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_16221() -> (Tensor[(5, 14, 13), float32],) {
  %1255 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1254 = @func_8224() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1254,)
  };
  %1255() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_5301(%var_5262: Tensor[(700), bool]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(700), bool], Tensor[(5, 14, 13), float32]) {
  %1256 = @func_5094() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %1257 = cast(%var_5262, dtype="bool") /* ty=Tensor[(700), bool] */;
  %1258 = reshape(%1257, newshape=[700]) /* ty=Tensor[(700), bool] */;
  %1259 = @func_3788(%1258) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(700), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32], Tensor[(2, 240), int32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1260 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1261 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
  %1262 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
  %1263 = %1256.0;
  %1264 = %1259.0;
  %1265 = %1260.1;
  (%1261, %1262, %1263, %1264, %var_5262, %1265)
}

def @func_17639() -> (Tensor[(8, 9, 7), uint32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 140), bool]) {
  @func_17637() /* ty=(Tensor[(8, 9, 7), uint32], Tensor[(5, 14, 13), float32], Tensor[(2, 240), int64], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 140), bool]) */
}

def @func_14391(%var_14389: Tensor[(13, 15, 4), float32], %var_14390: Tensor[(480), int32]) -> (Tensor[(10, 5, 2), bool], float64, Tensor[(480), int32], Tensor[(13, 15, 4), float64]) {
  @func_14387(%var_14389, %var_14390) /* ty=(Tensor[(10, 5, 2), bool], float64, Tensor[(480), int32], Tensor[(13, 15, 4), float64]) */
}

def @func_9993() -> (Tensor[(1215), uint8],) {
  @func_9991() /* ty=(Tensor[(1215), uint8],) */
}

def @func_18491() -> (Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
  %1266 = @func_12311() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %1267 = @func_4705() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */;
  %1268 = %1266.0;
  %1269 = @func_15975() /* ty=Tensor[(5, 14, 13), float32] */;
  %1270 = %1267.2;
  (%1268, %1269, %1270)
}

def @func_9217() -> (Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) {
  %1275 = fn () -> (Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) {
    %1271 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
    %1272 = @func_4142() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1273 = %1271.2;
    %1274 = %1272.1;
    (%1273, %1274)
  };
  %1275() /* ty=(Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */
}

def @func_12690() -> (Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) {
  @func_12688() /* ty=(Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */
}

def @func_13436(%var_13434: float64, %var_13435: Tensor[(120, 4), int32]) -> (Tensor[(10, 5, 2), bool], Tensor[(5, 14, 13), float32], Tensor[(10, 5, 2), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32]) {
  %1289 = fn (%var_13397: float64, %var_13427: Tensor[(120, 4), int32]) -> (Tensor[(10, 5, 2), bool], Tensor[(5, 14, 13), float32], Tensor[(10, 5, 2), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32]) {
    %1276 = cast(%var_13397, dtype="bool") /* ty=bool */;
    %1277 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 5, 2), float64] */, dtype="bool") /* ty=Tensor[(10, 5, 2), bool] */;
    %1278 = @func_10976() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1279 = cast(meta[relay.Constant][56] /* ty=Tensor[(10, 5, 2), float64] */, dtype="float64") /* ty=Tensor[(10, 5, 2), float64] */;
    %1280 = cosh(%1279) /* ty=Tensor[(10, 5, 2), float64] */;
    %1281 = cast(%1280, dtype="float32") /* ty=Tensor[(10, 5, 2), float32] */;
    %1282 = cast(%var_13427, dtype="int32") /* ty=Tensor[(120, 4), int32] */;
    %1283 = reshape(%1282, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1284 = @func_12074(%1283) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
    %1285 = equal(%1276, %1277) /* ty=Tensor[(10, 5, 2), bool] */;
    %1286 = %1278.1;
    %1287 = acosh(%1281) /* ty=Tensor[(10, 5, 2), float32] */;
    %1288 = %1284.0;
    (%1285, %1286, %1287, %1288, %var_13427)
  };
  %1289(%var_13434, %var_13435) /* ty=(Tensor[(10, 5, 2), bool], Tensor[(5, 14, 13), float32], Tensor[(10, 5, 2), float32], Tensor[(5, 14, 13), float32], Tensor[(120, 4), int32]) */
}

def @func_9646() -> Tensor[(5, 14, 13), float32] {
  %1291 = fn () -> Tensor[(5, 14, 13), float32] {
    %1290 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1290.0
  };
  %1291() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13036() -> (Tensor[(5, 14, 13), float32],) {
  @func_13034() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_16895(%var_16893: Tensor[(11, 14, 3), bool], %var_16894: Tensor[(11, 14, 3), bool]) -> (Tensor[(11, 14, 3), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(5, 14, 13), float32]) {
  @func_16891(%var_16893, %var_16894) /* ty=(Tensor[(11, 14, 3), bool], Tensor[(4, 6, 9), float32], Tensor[(216), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_3282() -> Tensor[(5, 11, 12), float32] {
  %1293 = fn () -> Tensor[(5, 11, 12), float32] {
    %1292 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 11, 12), float32] */, dtype="float32") /* ty=Tensor[(5, 11, 12), float32] */;
    cosh(%1292) /* ty=Tensor[(5, 11, 12), float32] */
  };
  %1293() /* ty=Tensor[(5, 11, 12), float32] */
}

def @func_9145() -> (Tensor[(5, 14, 13), float32],) {
  %1296 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1294 = @func_9015() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1295 = %1294.1;
    (%1295,)
  };
  %1296() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_4312() -> (Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1319 = fn () -> (Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1297 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
    %1298 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1299 = %1298.0;
    %1300 = cast(%1299, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
    %1301 = cast(meta[relay.Constant][58] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1302 = reshape(%1301, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1303 = @func_3423(%1302) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) */;
    %1304 = cast(meta[relay.Constant][58] /* ty=Tensor[(480), int32] */, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1305 = %1303.1;
    %1306 = cast(%1305, dtype="int32") /* ty=Tensor[(16, 6, 5), int32] */;
    %1307 = reshape(%1304, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1308 = reshape(%1306, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1309 = @func_926(%1307, %1308) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %1310 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1311 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1312 = %1297.0;
    %1313 = sqrt(%1300) /* ty=Tensor[(5, 14, 13), float64] */;
    %1314 = %1309.0;
    %1315 = @func_2488() /* ty=Tensor[(5, 14, 13), float32] */;
    %1316 = %1310.0;
    %1317 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
    %1318 = %1311.0;
    (%1312, %1313, %1305, meta[relay.Constant][58] /* ty=Tensor[(480), int32] */, %1314, %1315, %1316, %1317, %1318)
  };
  %1319() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(16, 6, 5), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_4605(%var_4601: Tensor[(1560), float64]) -> (Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float32], Tensor[(1560), float64], Tensor[(5, 14, 13), float32]) {
  %1320 = cast(%var_4601, dtype="float64") /* ty=Tensor[(1560), float64] */;
  %1321 = reshape(%1320, newshape=[15, 8, 13]) /* ty=Tensor[(15, 8, 13), float64] */;
  %1322 = @func_1822(%1321) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(15, 8, 13), uint8]) */;
  %1323 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1324 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
  %1325 = %1322.0;
  %1326 = %1323.1;
  (%1324, %1325, %var_4601, %1326)
}

def @func_10221(%var_10213: Tensor[(12, 12, 16), float32], %var_10214: Tensor[(12, 12, 16), float32]) -> (Tensor[(12, 12, 16), float32],) {
  %1327 = cast(%var_10214, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
  %1328 = shape_of(%var_10213, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1329 = cast(%var_10213, dtype="float32") /* ty=Tensor[(12, 12, 16), float32] */;
  %1330 = dyn.reshape(%1327, %1328, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1331 = multiply(%1329, %1330) /* ty=Tensor[(12, 12, 16), float32] */;
  (%1331,)
}

def @func_4873(%var_4871: int32, %var_4872: Tensor[(9, 3, 9), int32]) -> Tensor[(9, 3, 9), int32] {
  %1334 = fn (%var_4850: int32, %var_4851: Tensor[(9, 3, 9), int32]) -> Tensor[(9, 3, 9), int32] {
    %1332 = cast(%var_4850, dtype="int32") /* ty=int32 */;
    %1333 = cast(%var_4851, dtype="int32") /* ty=Tensor[(9, 3, 9), int32] */;
    bitwise_or(%1332, %1333) /* ty=Tensor[(9, 3, 9), int32] */
  };
  %1334(%var_4871, %var_4872) /* ty=Tensor[(9, 3, 9), int32] */
}

def @func_15962() -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1340 = fn () -> (Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1335 = @func_1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(9, 9, 15), uint8]) */;
    %1336 = @func_8504() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1337 = %1335.3;
    %1338 = %1336.1;
    %1339 = @func_8625() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1337, %1338, %1339)
  };
  %1340() /* ty=(Tensor[(9, 9, 15), uint8], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_10500() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_10498() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_14855() -> (Tensor[(5, 14, 13), float32],) {
  %1341 = @func_10312() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1342 = %1341.0;
  (%1342,)
}

def @func_7710() -> (Tensor[(5, 14, 13), float32],) {
  %1343 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
  %1344 = %1343.0;
  (%1344,)
}

def @func_13817() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1345 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1346 = cast(meta[relay.Constant][59] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1347 = reshape(%1346, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1348 = @func_9096(%1347) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1349 = %1345.0;
  %1350 = %1348.1;
  (%1349, %1350, meta[relay.Constant][59] /* ty=Tensor[(1215), uint8] */)
}

def @func_10117() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) {
  %1359 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) {
    %1351 = @func_964() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1352 = @func_3232() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */;
    %1353 = @func_9239() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1354 = %1351.0;
    %1355 = @func_7549() /* ty=Tensor[(5, 14, 13), float32] */;
    %1356 = %1352.1;
    %1357 = %1353.0;
    %1358 = @func_3281() /* ty=Tensor[(5, 11, 12), float32] */;
    (%1354, %1355, %1356, %1357, %1358)
  };
  %1359() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 11, 12), float32]) */
}

def @func_9178() -> Tensor[(5, 14, 13), float32] {
  @func_9176() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_9399(%var_9384: Tensor[(16), float64]) -> (Tensor[(5, 14, 13), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %1360 = cast(%var_9384, dtype="float64") /* ty=Tensor[(16), float64] */;
  %1361 = cast(%var_9384, dtype="float64") /* ty=Tensor[(16), float64] */;
  %1362 = reshape(%1360, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
  %1363 = reshape(%1361, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
  %1364 = @func_7126(%1362, %1363) /* ty=(Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) */;
  %1365 = cast(meta[relay.Constant][60] /* ty=Tensor[(81, 15), uint8] */, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
  %1366 = reshape(%1365, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1367 = @func_1089(%1366) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1368 = @func_4990() /* ty=Tensor[(5, 14, 13), float32] */;
  %1369 = %1364.1;
  %1370 = %1367.0;
  (%1368, %1369, %var_9384, %1370, meta[relay.Constant][60] /* ty=Tensor[(81, 15), uint8] */)
}

def @func_9901() -> Tensor[(5, 14, 13), float32] {
  %1372 = fn () -> Tensor[(5, 14, 13), float32] {
    %1371 = @func_9747() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1371.1
  };
  %1372() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_3292() -> Tensor[(9, 9, 15), float32] {
  %1373 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %1373.0
}

def @func_15007(%var_15004: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(480), int32]) {
  %1374 = @func_2243() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
  %1375 = cast(%var_15004, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1376 = reshape(%1375, newshape=[480]) /* ty=Tensor[(480), int32] */;
  %1377 = @func_6369(%1376) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
  %1378 = %1374.0;
  %1379 = %1377.1;
  (%1378, %1379, %var_15004)
}

def @func_4384() -> (Tensor[(5, 14, 13), float32],) {
  @func_4382() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_7463() -> (Tensor[(5, 14, 13), float32],) {
  %1382 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1380 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
    %1381 = %1380.1;
    (%1381,)
  };
  %1382() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_5790() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  %1383 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1384 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1385 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1386 = %1385.0;
  %1387 = cast(%1386, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
  %1388 = @func_2660() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1389 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %1390 = %1383.0;
  %1391 = %1384.0;
  %1392 = @func_3292() /* ty=Tensor[(9, 9, 15), float32] */;
  %1393 = cosh(%1387) /* ty=Tensor[(5, 14, 13), float64] */;
  %1394 = %1388.0;
  (%1389, %1390, %1391, %1392, %1393, %1394)
}

def @func_11376() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1398 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1395 = @func_7934() /* ty=Tensor[(5, 14, 13), float32] */;
    %1396 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
    %1397 = @func_9859() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1395, %1396, %1397)
  };
  %1398() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_9542() -> (Tensor[(5, 14, 13), float32],) {
  @func_9540() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_2455() -> Tensor[(5, 14, 13), float32] {
  %1400 = fn () -> Tensor[(5, 14, 13), float32] {
    %1399 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1399.0
  };
  %1400() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2729(%var_2728: Tensor[(5, 10, 14), bool]) -> Tensor[(5, 10, 14), bool] {
  %1405 = fn (%var_2721: Tensor[(5, 10, 14), bool]) -> Tensor[(5, 10, 14), bool] {
    %1401 = cast(%var_2721, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
    %1402 = shape_of(meta[relay.Constant][61] /* ty=Tensor[(5, 10, 14), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1403 = cast(meta[relay.Constant][61] /* ty=Tensor[(5, 10, 14), bool] */, dtype="bool") /* ty=Tensor[(5, 10, 14), bool] */;
    %1404 = dyn.reshape(%1401, %1402, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_and(%1403, %1404) /* ty=Tensor[(5, 10, 14), bool] */
  };
  %1405(%var_2728) /* ty=Tensor[(5, 10, 14), bool] */
}

def @func_14041() -> Tensor[(5, 14, 13), float64] {
  %1407 = fn () -> Tensor[(5, 14, 13), float64] {
    %1406 = @func_11014() /* ty=(Tensor[(5, 11, 12), float32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
    %1406.1
  };
  %1407() /* ty=Tensor[(5, 14, 13), float64] */
}

def @func_8858() -> (Tensor[(5, 14, 13), float32],) {
  %1410 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1408 = @func_7502() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1409 = %1408.0;
    (%1409,)
  };
  %1410() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_15020() -> Tensor[(5, 14, 13), float32] {
  %1411 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1411.0
}

def @func_12406(%var_12405: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32]) {
  %1419 = fn (%var_12386: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32]) {
    %1412 = cast(%var_12386, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1413 = cast(%var_12386, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1414 = reshape(%1412, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1415 = reshape(%1413, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1416 = @func_926(%1414, %1415) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %1417 = @func_7934() /* ty=Tensor[(5, 14, 13), float32] */;
    %1418 = %1416.0;
    (%1417, %1418, %var_12386)
  };
  %1419(%var_12405) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32]) */
}

def @func_1172() -> (Tensor[(5, 14, 13), float32],) {
  %1422 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1420 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1421 = %1420.2;
    (%1421,)
  };
  %1422() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_1846() -> Tensor[(5, 14, 13), float32] {
  @func_1844() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_15363() -> Tensor[(1215), float32] {
  %1426 = fn () -> Tensor[(1215), float32] {
    %1423 = @func_14440() /* ty=(Tensor[(1215), uint8],) */;
    %1424 = %1423.0;
    %1425 = cast(%1424, dtype="float32") /* ty=Tensor[(1215), float32] */;
    asin(%1425) /* ty=Tensor[(1215), float32] */
  };
  %1426() /* ty=Tensor[(1215), float32] */
}

def @func_12829(%var_12827: Tensor[(70, 10), bool]) -> (Tensor[(480, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) {
  @func_12826(%var_12827) /* ty=(Tensor[(480, 1), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool]) */
}

def @func_18575(%var_18574: Tensor[(16), float64]) -> (Tensor[(9, 9, 15), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64]) {
  %1435 = fn (%var_18571: Tensor[(16), float64]) -> (Tensor[(9, 9, 15), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64]) {
    %1427 = @func_5094() /* ty=(Tensor[(9, 9, 15), float32],) */;
    %1428 = cast(%var_18571, dtype="float64") /* ty=Tensor[(16), float64] */;
    %1429 = cast(%var_18571, dtype="float64") /* ty=Tensor[(16), float64] */;
    %1430 = reshape(%1428, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
    %1431 = reshape(%1429, newshape=[2, 2, 4]) /* ty=Tensor[(2, 2, 4), float64] */;
    %1432 = @func_7126(%1430, %1431) /* ty=(Tensor[(2, 2, 4), float32], Tensor[(2, 2, 4), uint8]) */;
    %1433 = %1427.0;
    %1434 = %1432.1;
    (%1433, %1434, %var_18571)
  };
  %1435(%var_18574) /* ty=(Tensor[(9, 9, 15), float32], Tensor[(2, 2, 4), uint8], Tensor[(16), float64]) */
}

def @func_2285() -> (Tensor[(9, 9, 15), float32],) {
  @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_15169(%var_15165: Tensor[(9, 13, 8), int8]) -> (Tensor[(9, 13, 8), int8],) {
  %1436 = cast(%var_15165, dtype="int8") /* ty=Tensor[(9, 13, 8), int8] */;
  %1437 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(9, 13, 8), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1438 = cast(meta[relay.Constant][62] /* ty=Tensor[(9, 13, 8), int8] */, dtype="int8") /* ty=Tensor[(9, 13, 8), int8] */;
  %1439 = dyn.reshape(%1436, %1437, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1440 = right_shift(%1438, %1439) /* ty=Tensor[(9, 13, 8), int8] */;
  (%1440,)
}

def @func_3233() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) {
  %1448 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) {
    %1441 = @func_2283() /* ty=(Tensor[(9, 9, 15), float32],) */;
    %1442 = %1441.0;
    %1443 = cast(%1442, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
    %1444 = sinh(%1443) /* ty=Tensor[(9, 9, 15), float64] */;
    %1445 = cast(%1444, dtype="float32") /* ty=Tensor[(9, 9, 15), float32] */;
    %1446 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %1447 = asin(%1445) /* ty=Tensor[(9, 9, 15), float32] */;
    (%1446, %1447)
  };
  %1448() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) */
}

def @func_9184(%var_9181: Tensor[(10, 12, 4), float32]) -> Tensor[(10, 12, 4), float32] {
  %1449 = cast(%var_9181, dtype="float32") /* ty=Tensor[(10, 12, 4), float32] */;
  asin(%1449) /* ty=Tensor[(10, 12, 4), float32] */
}

def @func_18087(%var_18041: Tensor[(70, 10), bool], %var_18066: Tensor[(70, 10), float64], %var_18072: Tensor[(70, 10), uint16]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), float32], Tensor[(70, 10), int64], Tensor[(70, 10), bool]) {
  %1450 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1451 = @func_3122() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 10, 14), bool], Tensor[(70, 10), bool]) */;
  %1452 = @func_17676() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(70, 10), bool], Tensor[(480), int64], Tensor[(5, 14, 13), float32]) */;
  %1453 = %1452.1;
  %1454 = cast(meta[relay.Constant][63] /* ty=Tensor[(70, 10), bool] */, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %1455 = shape_of(%1453, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1456 = cast(%1453, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %1457 = dyn.reshape(%1454, %1455, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1458 = cast(%1453, dtype="float64") /* ty=Tensor[(70, 10), float64] */;
  %1459 = atan(%1458) /* ty=Tensor[(70, 10), float64] */;
  %1460 = cast(%var_18041, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %1461 = shape_of(%1453, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1462 = cast(%1453, dtype="float32") /* ty=Tensor[(70, 10), float32] */;
  %1463 = dyn.reshape(%1460, %1461, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1464 = multiply(%1462, %1463) /* ty=Tensor[(70, 10), float32] */;
  %1465 = cast(%1464, dtype="int64") /* ty=Tensor[(70, 10), int64] */;
  %1466 = shape_of(%1459, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1467 = cast(%1459, dtype="int64") /* ty=Tensor[(70, 10), int64] */;
  %1468 = dyn.reshape(%1465, %1466, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1469 = cast(%var_18066, dtype="uint16") /* ty=Tensor[(70, 10), uint16] */;
  %1470 = shape_of(%1459, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1471 = cast(%1459, dtype="uint16") /* ty=Tensor[(70, 10), uint16] */;
  %1472 = dyn.reshape(%1469, %1470, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %1473 = left_shift(%1471, %1472) /* ty=Tensor[(70, 10), uint16] */;
  %1474 = cast(%var_18072, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %1475 = shape_of(%1473, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1476 = cast(%1473, dtype="bool") /* ty=Tensor[(70, 10), bool] */;
  %1477 = dyn.reshape(%1474, %1475, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1478 = %1450.0;
  %1479 = %1451.0;
  %1480 = floor_mod(%1456, %1457) /* ty=Tensor[(70, 10), float32] */;
  %1481 = bitwise_and(%1467, %1468) /* ty=Tensor[(70, 10), int64] */;
  %1482 = greater_equal(%1476, %1477) /* ty=Tensor[(70, 10), bool] */;
  (%1478, %1479, %1480, %1481, %1482)
}

def @func_8626() -> Tensor[(5, 14, 13), float32] {
  %1483 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_359() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %1483() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_3544(%var_3541: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32]) {
  %1484 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1485 = cast(%var_3541, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1486 = cast(%var_3541, dtype="int32") /* ty=Tensor[(480), int32] */;
  %1487 = reshape(%1485, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1488 = reshape(%1486, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
  %1489 = @func_926(%1487, %1488) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1490 = %1484.0;
  %1491 = %1489.1;
  (%1490, %1491, %var_3541)
}

def @func_9176() -> Tensor[(5, 14, 13), float32] {
  @func_2454() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_2244() -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) {
  %1495 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) {
    %1492 = @func_2228() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */;
    %1493 = @func_471() /* ty=Tensor[(5, 14, 13), float32] */;
    %1494 = %1492.1;
    (%1493, %1494)
  };
  %1495() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */
}

def @func_18092(%var_18089: Tensor[(70, 10), bool], %var_18090: Tensor[(70, 10), float64], %var_18091: Tensor[(70, 10), uint16]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), float32], Tensor[(70, 10), int64], Tensor[(70, 10), bool]) {
  @func_18087(%var_18089, %var_18090, %var_18091) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(70, 10), float32], Tensor[(70, 10), int64], Tensor[(70, 10), bool]) */
}

def @func_11188() -> Tensor[(5, 14, 13), float32] {
  %1496 = @func_7022() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1496.0
}

def @func_11989() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  @func_11987() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_15580() -> (Tensor[(5, 14, 13), float32],) {
  %1498 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1497 = @func_12476() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1497,)
  };
  %1498() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_2860() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1503 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1499 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %1500 = @func_1433() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1501 = %1499.1;
    %1502 = %1500.0;
    (%1501, %1502)
  };
  %1503() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_15221() -> Tensor[(5, 14, 13), float32] {
  @func_15219() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_6575() -> Tensor[(9, 9, 15), float32] {
  %1504 = fn () -> Tensor[(9, 9, 15), float32] {
    @func_5456() /* ty=Tensor[(9, 9, 15), float32] */
  };
  %1504() /* ty=Tensor[(9, 9, 15), float32] */
}

def @func_2905() -> (Tensor[(5, 14, 13), float32],) {
  %1505 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1506 = %1505.1;
  (%1506,)
}

def @func_14702() -> (Tensor[(5, 14, 13), float32],) {
  @func_14700() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_926(%var_905: Tensor[(16, 6, 5), int32], %var_906: Tensor[(16, 6, 5), int32]) -> (Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) {
  %1507 = cast(%var_906, dtype="int32") /* ty=Tensor[(16, 6, 5), int32] */;
  %1508 = shape_of(%var_905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1509 = cast(%var_905, dtype="int32") /* ty=Tensor[(16, 6, 5), int32] */;
  %1510 = dyn.reshape(%1507, %1508, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1511 = add(%1509, %1510) /* ty=Tensor[(16, 6, 5), int32] */;
  %1512 = cast(%1511, dtype="float32") /* ty=Tensor[(16, 6, 5), float32] */;
  %1513 = cast(meta[relay.Constant][64] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1514 = cast(meta[relay.Constant][64] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1515 = reshape(%1513, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1516 = reshape(%1514, newshape=[9, 9, 15]) /* ty=Tensor[(9, 9, 15), uint8] */;
  %1517 = cos(%1512) /* ty=Tensor[(16, 6, 5), float32] */;
  %1518 = @func_161(%1515, %1516) /* ty=Tensor[(9, 9, 15), uint8] */;
  (%1517, %1518, meta[relay.Constant][64] /* ty=Tensor[(1215), uint8] */)
}

def @func_9714() -> (Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) {
  @func_9712() /* ty=(Tensor[(5, 14, 13), float64], Tensor[(5, 14, 13), float32]) */
}

def @func_15531() -> Tensor[(5, 14, 13), float32] {
  @func_15529() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_17544() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) {
  %1519 = @func_11450() /* ty=(Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) */;
  %1520 = @func_6426() /* ty=(Tensor[(5, 14, 13), float64],) */;
  %1521 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
  %1522 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1523 = cast(meta[relay.Constant][65] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1524 = cast(meta[relay.Constant][65] /* ty=Tensor[(1215), uint8] */, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1525 = reshape(%1523, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %1526 = reshape(%1524, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
  %1527 = @func_5031(%1525, %1526) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */;
  %1528 = @func_16252() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1529 = %1519.1;
  %1530 = %1520.0;
  %1531 = %1521.2;
  %1532 = %1522.0;
  %1533 = @func_13910() /* ty=Tensor[(5, 14, 13), float32] */;
  %1534 = %1527.1;
  %1535 = %1528.0;
  (%1529, %1530, %1531, %1532, %1533, %1534, meta[relay.Constant][65] /* ty=Tensor[(1215), uint8] */, %1535)
}

def @func_13578() -> Tensor[(5, 14, 13), float32] {
  %1536 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_4990() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %1536() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_10059() -> (Tensor[(5, 14, 13), float32],) {
  %1538 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1537 = @func_2800() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1537,)
  };
  %1538() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_14214() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1545 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1539 = @func_1661() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(14, 5, 12), uint32], Tensor[(5, 14, 13), float32]) */;
    %1540 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1541 = %1539.3;
    %1542 = @func_11416() /* ty=Tensor[(5, 14, 13), float32] */;
    %1543 = @func_13795() /* ty=Tensor[(5, 14, 13), float32] */;
    %1544 = %1540.0;
    (%1541, %1542, %1543, %1544)
  };
  %1545() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_5142() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1546 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1547 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1548 = %1546.0;
  %1549 = %1547.2;
  (%1548, %1549)
}

def @func_15615() -> Tensor[(5, 14, 13), float32] {
  @func_15613() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_14418() -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1550 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1551 = @func_13817() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
  %1552 = %1550.0;
  %1553 = %1551.2;
  (%1552, %1553)
}

def @func_18621() -> Tensor[(480), int64] {
  @func_18619() /* ty=Tensor[(480), int64] */
}

def @func_3844() -> Tensor[(5, 14, 13), float32] {
  @func_3842() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13985(%var_13984: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
  %1559 = fn (%var_13980: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) {
    %1554 = cast(%var_13980, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
    %1555 = reshape(%1554, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %1556 = @func_13183(%1555) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint16]) */;
    %1557 = @func_13910() /* ty=Tensor[(5, 14, 13), float32] */;
    %1558 = %1556.1;
    (%1557, %1558, %var_13980)
  };
  %1559(%var_13984) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */
}

def @func_1407() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1564 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1560 = @func_834() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1561 = @func_326() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1562 = %1560.1;
    %1563 = %1561.0;
    (%1562, %1563)
  };
  %1564() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_17040(%var_17038: Tensor[(7, 10, 4), float32], %var_17039: Tensor[(7, 10, 4), float32]) -> (Tensor[(7, 10, 4), float32], Tensor[(5, 14, 13), float32]) {
  @func_17036(%var_17038, %var_17039) /* ty=(Tensor[(7, 10, 4), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_12599() -> (Tensor[(9, 9, 15), float32],) {
  %1566 = fn () -> (Tensor[(9, 9, 15), float32],) {
    %1565 = @func_6574() /* ty=Tensor[(9, 9, 15), float32] */;
    (%1565,)
  };
  %1566() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_2488() -> Tensor[(5, 14, 13), float32] {
  %1567 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1567.2
}

def @func_409() -> (Tensor[(5, 14, 13), float32],) {
  %1568 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
  (%1568,)
}

def @func_10717() -> (Tensor[(5, 14, 13), float32],) {
  %1569 = @func_6844() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1570 = %1569.1;
  (%1570,)
}

def @func_15172(%var_15170: Tensor[(9, 13, 8), int8]) -> (Tensor[(9, 13, 8), int8],) {
  @func_15169(%var_15170) /* ty=(Tensor[(9, 13, 8), int8],) */
}

def @func_18654() -> (Tensor[(9, 9, 15), float32],) {
  @func_18652() /* ty=(Tensor[(9, 9, 15), float32],) */
}

def @func_11452() -> (Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) {
  @func_11450() /* ty=(Tensor[(7, 3, 6), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_11247() -> Tensor[(5, 14, 13), float32] {
  @func_4772() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_11249() -> Tensor[(5, 14, 13), float32] {
  @func_11247() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_17901(%var_17834: Tensor[(1215), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float64], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32]) {
  %1571 = @func_14213() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1572 = @func_17731() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1573 = cast(%var_17834, dtype="uint8") /* ty=Tensor[(1215), uint8] */;
  %1574 = reshape(%1573, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
  %1575 = @func_764(%1574) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
  %1576 = %1575.1;
  %1577 = cast(%1576, dtype="float64") /* ty=Tensor[(9, 9, 15), float64] */;
  %1578 = @func_8857() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1579 = @func_9502() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1580 = @func_12311() /* ty=(Tensor[(9, 9, 15), float32],) */;
  %1581 = %1571.0;
  %1582 = %1572.0;
  %1583 = log10(%1577) /* ty=Tensor[(9, 9, 15), float64] */;
  %1584 = %1578.0;
  %1585 = %1579.0;
  %1586 = %1580.0;
  (%1581, %var_17834, %1582, %1583, %1584, %1585, %1586)
}

def @func_18546() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1593 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1587 = @func_7022() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1588 = @func_3742() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %1589 = %1587.0;
    %1590 = %1588.3;
    %1591 = @func_14106() /* ty=Tensor[(5, 14, 13), float32] */;
    %1592 = @func_18382() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1589, %1590, %1591, %1592)
  };
  %1593() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_12042() -> (Tensor[(5, 14, 13), float32],) {
  @func_12040() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_12756() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
  %1601 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) {
    %1594 = cast(meta[relay.Constant][66] /* ty=Tensor[(81, 15), uint8] */, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
    %1595 = cast(meta[relay.Constant][66] /* ty=Tensor[(81, 15), uint8] */, dtype="uint8") /* ty=Tensor[(81, 15), uint8] */;
    %1596 = reshape(%1594, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
    %1597 = reshape(%1595, newshape=[81, 15]) /* ty=Tensor[(81, 15), uint8] */;
    %1598 = @func_5031(%1596, %1597) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */;
    %1599 = @func_9645() /* ty=Tensor[(5, 14, 13), float32] */;
    %1600 = %1598.0;
    (%1599, %1600, meta[relay.Constant][66] /* ty=Tensor[(81, 15), uint8] */)
  };
  %1601() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(81, 15), uint8]) */
}

def @func_4111() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_4109() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_7184() -> Tensor[(5, 14, 13), float32] {
  %1602 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_1844() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %1602() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_13912() -> Tensor[(5, 14, 13), float32] {
  @func_13910() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_10183(%var_10144: Tensor[(1, 14, 8), float32]) -> (Tensor[(5, 14, 13), float32], Tensor[(?, 14, 8), uint32]) {
  %1603 = cast(%var_10144, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %1604 = rsqrt(%1603) /* ty=Tensor[(1, 14, 8), float32] */;
  %1605 = cast(%1604, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %1606 = log2(%1605) /* ty=Tensor[(1, 14, 8), float32] */;
  %1607 = cast(%1604, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %1608 = shape_of(%1606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1609 = cast(%1606, dtype="float32") /* ty=Tensor[(1, 14, 8), float32] */;
  %1610 = dyn.reshape(%1607, %1608, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1611 = floor_divide(%1609, %1610) /* ty=Tensor[(?, 14, 8), float32] */;
  %1612 = cast(%1611, dtype="uint32") /* ty=Tensor[(?, 14, 8), uint32] */;
  %1613 = shape_of(%1606, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1614 = cast(%1606, dtype="uint32") /* ty=Tensor[(1, 14, 8), uint32] */;
  %1615 = dyn.reshape(%1612, %1613, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1616 = @func_2454() /* ty=Tensor[(5, 14, 13), float32] */;
  %1617 = left_shift(%1614, %1615) /* ty=Tensor[(?, 14, 8), uint32] */;
  (%1616, %1617)
}

def @func_3425(%var_3424: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) {
  %1628 = fn (%var_3407: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) {
    %1618 = @func_684() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1619 = cast(%var_3407, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1620 = cast(%var_3407, dtype="int32") /* ty=Tensor[(480), int32] */;
    %1621 = reshape(%1619, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1622 = reshape(%1620, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1623 = @func_926(%1621, %1622) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %1624 = @func_2859() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1625 = %1618.0;
    %1626 = %1623.0;
    %1627 = %1624.1;
    (%1625, %1626, %var_3407, %1627)
  };
  %1628(%var_3424) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) */
}

def @func_11067() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_11065() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_14297() -> (Tensor[(5, 14, 13), float32],) {
  %1631 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1629 = @func_7710() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1630 = %1629.0;
    (%1630,)
  };
  %1631() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_18619() -> Tensor[(480), int64] {
  %1632 = @func_14674() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 6, 16), int64], Tensor[(480), int64], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
  %1632.2
}

def @func_10411(%var_10410: Tensor[(8, 60), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(8, 60), int32]) {
  %1648 = fn (%var_10405: Tensor[(8, 60), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(8, 60), int32]) {
    %1633 = @func_10032() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1634 = @func_4246() /* ty=(Tensor[(13, 11, 10), uint16], Tensor[(13, 11, 10), float64], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32]) */;
    %1635 = @func_8263() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %1636 = @func_9040() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1637 = @func_8112() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1638 = cast(%var_10405, dtype="int32") /* ty=Tensor[(8, 60), int32] */;
    %1639 = reshape(%1638, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1640 = @func_6235(%1639) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), bool], Tensor[(5, 14, 13), float32], Tensor[(480), int32]) */;
    %1641 = %1633.0;
    %1642 = @func_3865() /* ty=Tensor[(5, 14, 13), float32] */;
    %1643 = %1634.2;
    %1644 = %1635.3;
    %1645 = %1636.0;
    %1646 = %1637.2;
    %1647 = %1640.2;
    (%1641, %1642, %1643, %1644, %1645, %1646, %1647, %var_10405)
  };
  %1648(%var_10410) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(13, 11, 10), uint32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(8, 60), int32]) */
}

def @func_8592() -> (Tensor[(5, 14, 13), float32],) {
  %1651 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1649 = @func_1171() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1650 = %1649.0;
    (%1650,)
  };
  %1651() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_12289() -> Tensor[(5, 14, 13), float32] {
  %1652 = @func_9540() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1652.0
}

def @func_4929(%var_4928: Tensor[(27, 45), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) {
  %1658 = fn (%var_4924: Tensor[(27, 45), uint8]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) {
    %1653 = cast(%var_4924, dtype="uint8") /* ty=Tensor[(27, 45), uint8] */;
    %1654 = reshape(%1653, newshape=[1215]) /* ty=Tensor[(1215), uint8] */;
    %1655 = @func_764(%1654) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8], Tensor[(5, 14, 13), float32]) */;
    %1656 = @func_359() /* ty=Tensor[(5, 14, 13), float32] */;
    %1657 = %1655.3;
    (%1656, %1657, %var_4924)
  };
  %1658(%var_4928) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(27, 45), uint8]) */
}

def @func_18493() -> (Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) {
  @func_18491() /* ty=(Tensor[(9, 9, 15), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64]) */
}

def @func_16584(%var_16583: Tensor[(2304), float32]) -> (Tensor[(5, 14, 13), float32], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) {
  %1666 = fn (%var_16578: Tensor[(2304), float32]) -> (Tensor[(5, 14, 13), float32], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) {
    %1659 = cast(%var_16578, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %1660 = cast(%var_16578, dtype="float32") /* ty=Tensor[(2304), float32] */;
    %1661 = reshape(%1659, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
    %1662 = reshape(%1660, newshape=[12, 12, 16]) /* ty=Tensor[(12, 12, 16), float32] */;
    %1663 = @func_10221(%1661, %1662) /* ty=(Tensor[(12, 12, 16), float32],) */;
    %1664 = @func_14321() /* ty=Tensor[(5, 14, 13), float32] */;
    %1665 = %1663.0;
    (%1664, %1665, %var_16578)
  };
  %1666(%var_16583) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(12, 12, 16), float32], Tensor[(2304), float32]) */
}

def @func_4109() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1667 = @func_409() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1668 = @func_3514() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1669 = %1667.0;
  %1670 = %1668.0;
  (%1669, %1670)
}

def @func_5626(%var_5625: Tensor[(1, 480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) {
  %1678 = fn (%var_5611: Tensor[(1, 480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) {
    %1671 = @func_898() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1672 = cast(%var_5611, dtype="int32") /* ty=Tensor[(1, 480), int32] */;
    %1673 = reshape(%1672, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1674 = @func_3423(%1673) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(16, 6, 5), float32], Tensor[(480), int32], Tensor[(5, 14, 13), float32]) */;
    %1675 = %1671.0;
    %1676 = %1674.3;
    %1677 = @func_2554() /* ty=Tensor[(5, 14, 13), float32] */;
    (%1675, %1676, %var_5611, %1677)
  };
  %1678(%var_5625) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1, 480), int32], Tensor[(5, 14, 13), float32]) */
}

def @func_12040() -> (Tensor[(5, 14, 13), float32],) {
  %1679 = @func_10717() /* ty=(Tensor[(5, 14, 13), float32],) */;
  %1680 = %1679.0;
  (%1680,)
}

def @func_12866(%var_12831: uint32, %var_12832: Tensor[(11, 10, 15), uint32]) -> (Tensor[(11, 10, 15), bool],) {
  %1681 = cast(%var_12831, dtype="uint32") /* ty=uint32 */;
  %1682 = cast(%var_12832, dtype="uint32") /* ty=Tensor[(11, 10, 15), uint32] */;
  %1683 = subtract(%1681, %1682) /* ty=Tensor[(11, 10, 15), uint32] */;
  %1684 = cast(%var_12832, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %1685 = shape_of(%1683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1686 = cast(%1683, dtype="bool") /* ty=Tensor[(11, 10, 15), bool] */;
  %1687 = dyn.reshape(%1684, %1685, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1688 = greater_equal(%1686, %1687) /* ty=Tensor[(11, 10, 15), bool] */;
  (%1688,)
}

def @func_7503() -> (Tensor[(5, 14, 13), float32],) {
  %1691 = fn () -> (Tensor[(5, 14, 13), float32],) {
    %1689 = @func_589() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1690 = %1689.2;
    (%1690,)
  };
  %1691() /* ty=(Tensor[(5, 14, 13), float32],) */
}

def @func_3759() -> Tensor[(5, 14, 13), float32] {
  @func_3757() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_11799() -> Tensor[(5, 14, 13), float32] {
  @func_7934() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_18369() -> (Tensor[(480), int32],) {
  @func_18367() /* ty=(Tensor[(480), int32],) */
}

def @func_3890() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) {
  %1701 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) {
    %1692 = @func_981() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(1215), uint8]) */;
    %1693 = cast(meta[relay.Constant][67] /* ty=Tensor[(480, 1), int32] */, dtype="int32") /* ty=Tensor[(480, 1), int32] */;
    %1694 = reshape(%1693, newshape=[480]) /* ty=Tensor[(480), int32] */;
    %1695 = @func_3491(%1694) /* ty=(Tensor[(5, 14, 13), float64], Tensor[(1215), uint8], Tensor[(480), int32], Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8]) */;
    %1696 = cast(meta[relay.Constant][67] /* ty=Tensor[(480, 1), int32] */, dtype="float32") /* ty=Tensor[(480, 1), float32] */;
    %1697 = %1692.1;
    %1698 = @func_1859() /* ty=Tensor[(5, 14, 13), float32] */;
    %1699 = %1695.0;
    %1700 = rsqrt(%1696) /* ty=Tensor[(480, 1), float32] */;
    (%1697, %1698, %1699, %1700)
  };
  %1701() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float64], Tensor[(480, 1), float32]) */
}

def @func_3514() -> (Tensor[(5, 14, 13), float32],) {
  %1702 = @func_1406() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
  %1703 = %1702.1;
  (%1703,)
}

def @func_15432() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_15430() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_9748() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  %1708 = fn () -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
    %1704 = @func_4382() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1705 = @func_9540() /* ty=(Tensor[(5, 14, 13), float32],) */;
    %1706 = %1704.0;
    %1707 = %1705.0;
    (%1706, %1707)
  };
  %1708() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_2757(%var_2756: Tensor[(8, 60), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(8, 60), int32]) {
  %1717 = fn (%var_2753: Tensor[(8, 60), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(8, 60), int32]) {
    %1709 = @func_2326() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */;
    %1710 = cast(%var_2753, dtype="int32") /* ty=Tensor[(8, 60), int32] */;
    %1711 = cast(%var_2753, dtype="int32") /* ty=Tensor[(8, 60), int32] */;
    %1712 = reshape(%1710, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1713 = reshape(%1711, newshape=[16, 6, 5]) /* ty=Tensor[(16, 6, 5), int32] */;
    %1714 = @func_926(%1712, %1713) /* ty=(Tensor[(16, 6, 5), float32], Tensor[(9, 9, 15), uint8], Tensor[(1215), uint8]) */;
    %1715 = %1709.0;
    %1716 = %1714.1;
    (%1715, %1716, %var_2753)
  };
  %1717(%var_2756) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), uint8], Tensor[(8, 60), int32]) */
}

def @func_17306() -> (Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) {
  @func_17304() /* ty=(Tensor[(5, 14, 13), float32], Tensor[(5, 14, 13), float32]) */
}

def @func_1401() -> (Tensor[(5, 14, 13), float64],) {
  %1721 = fn () -> (Tensor[(5, 14, 13), float64],) {
    %1718 = @func_509() /* ty=Tensor[(5, 14, 13), float32] */;
    %1719 = cast(%1718, dtype="float64") /* ty=Tensor[(5, 14, 13), float64] */;
    %1720 = exp(%1719) /* ty=Tensor[(5, 14, 13), float64] */;
    (%1720,)
  };
  %1721() /* ty=(Tensor[(5, 14, 13), float64],) */
}

def @func_14626() -> Tensor[(5, 14, 13), float32] {
  %1722 = fn () -> Tensor[(5, 14, 13), float32] {
    @func_7183() /* ty=Tensor[(5, 14, 13), float32] */
  };
  %1722() /* ty=Tensor[(5, 14, 13), float32] */
}

def @func_15010(%var_15008: Tensor[(480), int32]) -> (Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(480), int32]) {
  @func_15007(%var_15008) /* ty=(Tensor[(5, 14, 13), float32], Tensor[(9, 9, 15), float32], Tensor[(480), int32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen772/build/output.py", line 6209, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  79: TVMFuncCall
  78: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  77: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  76: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  75: tvm::transform::Pass::operator()(tvm::IRModule) const
  74: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  73: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  72: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  71: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  70: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  69: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [14:09:55] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


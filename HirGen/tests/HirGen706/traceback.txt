==========mod==========
#[version = "0.0.5"]
def @func_11363() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(616), float64], Tensor[(7, 8, 6), float64]) {
  %0 = @func_6125() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %2 = reshape(%1, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %3 = @func_10703(%2) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
  %4 = @func_10887() /* ty=(Tensor[(7, 8, 6), float64],) */;
  %5 = %0.0;
  %6 = %3.0;
  %7 = %4.0;
  (%5, %6, meta[relay.Constant][0] /* ty=Tensor[(616), float64] */, %7)
}

def @func_9799() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %8 = @func_9082() /* ty=Tensor[(7, ?, 10), uint16] */;
  %9 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%8, %9)
}

def @func_3599() -> (Tensor[(7, 1, 10), bool],) {
  %10 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %11 = %10.0;
  (%11,)
}

def @func_14624() -> Tensor[(7, ?, 10), uint16] {
  %12 = @func_13877() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %12.1
}

def @func_7139(%var_7129: Tensor[(7, 9, 10), float32]) -> (Tensor[(7, 9, 10), uint64], Tensor[(32), int64]) {
  %13 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %14 = %13.2;
  %15 = cast(%14, dtype="uint64") /* ty=Tensor[(7, ?, 10), uint64] */;
  %16 = cast(%var_7129, dtype="uint64") /* ty=Tensor[(7, 9, 10), uint64] */;
  %17 = add(%15, %16) /* ty=Tensor[(7, 9, 10), uint64] */;
  %18 = @func_4748() /* ty=Tensor[(32), int64] */;
  (%17, %18)
}

def @func_19349() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %19 = @func_13788() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %20 = @func_16272() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) */;
  %21 = %19.0;
  %22 = %20.0;
  (%21, %22)
}

def @func_3691() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) {
  %23 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %26 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %27 = %26.0;
  %28 = cast(%27, dtype="float32") /* ty=Tensor[(7, 1, 10), float32] */;
  %29 = cast(meta[relay.Constant][1] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %30 = reshape(%29, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %31 = @func_2849(%30) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) */;
  %32 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %33 = cosh(%25) /* ty=Tensor[(7, ?, 10), float64] */;
  %34 = log10(%28) /* ty=Tensor[(7, 1, 10), float32] */;
  %35 = %31.5;
  (%32, %33, %34, %35, meta[relay.Constant][1] /* ty=Tensor[(9), int16] */)
}

def @func_6125() -> (Tensor[(7, 1, 10), float64],) {
  %36 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %37 = %36.0;
  (%37,)
}

def @func_19712(%var_19646: Tensor[(11, 6, 7), int64], %var_19647: Tensor[(11, 6, 7), int64]) -> (Tensor[(11, 6, 7), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), bool], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %38 = cast(%var_19647, dtype="int64") /* ty=Tensor[(11, 6, 7), int64] */;
  %39 = shape_of(%var_19646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %40 = cast(%var_19646, dtype="int64") /* ty=Tensor[(11, 6, 7), int64] */;
  %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %42 = @func_14680() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %43 = cast(meta[relay.Constant][2] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %44 = reshape(%43, newshape=[9, 1]) /* ty=Tensor[(9, 1), int16] */;
  %45 = @func_16705(%44) /* ty=(Tensor[(32), int64], Tensor[(7, 9, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, 364, 10), bool]) */;
  %46 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %47 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %48 = @func_15793() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %49 = @func_4133() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %50 = minimum(%40, %41) /* ty=Tensor[(11, 6, 7), int64] */;
  %51 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %52 = %42.1;
  %53 = %45.1;
  %54 = @func_9378() /* ty=Tensor[(7, ?, 10), uint16] */;
  %55 = %46.0;
  %56 = %47.0;
  %57 = %48.0;
  %58 = %49.0;
  (%50, %51, %52, %53, meta[relay.Constant][2] /* ty=Tensor[(9), int16] */, %54, %55, %56, %57, %58)
}

def @func_3502() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_3920() -> (Tensor[(7, ?, 10), uint16],) {
  %59 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%59,)
}

def @func_12217() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %60 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %61 = %60.1;
  %62 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%61, %62)
}

def @func_12031() -> (Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) {
  %63 = @func_6145() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %64 = @func_10887() /* ty=(Tensor[(7, 8, 6), float64],) */;
  %65 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %66 = %63.0;
  %67 = %64.0;
  %68 = %65.0;
  (%66, %67, %68)
}

def @func_4897() -> (Tensor[(7, ?, 10), uint16],) {
  %69 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %70 = %69.0;
  (%70,)
}

def @func_8577(%var_8556: Tensor[(15, 7, 10), int16]) -> (Tensor[(15, 7, 10), int16], Tensor[(15, 7, 10), bool]) {
  %71 = cast(%var_8556, dtype="int16") /* ty=Tensor[(15, 7, 10), int16] */;
  %72 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(15, 7, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 7, 10), int16] */, dtype="int16") /* ty=Tensor[(15, 7, 10), int16] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %75 = cast(%var_8556, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %76 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(15, 7, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %77 = cast(meta[relay.Constant][3] /* ty=Tensor[(15, 7, 10), int16] */, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %79 = bitwise_xor(%73, %74) /* ty=Tensor[(15, 7, 10), int16] */;
  %80 = equal(%77, %78) /* ty=Tensor[(15, 7, 10), bool] */;
  (%79, %80)
}

def @func_14443() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) {
  %81 = @func_8742() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %82 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %83 = @func_6731() /* ty=(Tensor[(32), int64],) */;
  %84 = %81.0;
  %85 = @func_7522() /* ty=Tensor[(7, ?, 10), uint16] */;
  %86 = %82.1;
  %87 = %83.0;
  (%84, %85, %86, %87)
}

def @func_18419() -> Tensor[(7, ?, 10), uint16] {
  @func_6924() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_19465() -> Tensor[(7, ?, 10), float32] {
  %88 = @func_14024() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %88.0
}

def @func_4204(%var_4188: Tensor[(3, 16, 3), float64]) -> (Tensor[(3, 16, 3), bool],) {
  %89 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 16, 3), float64] */, dtype="bool") /* ty=Tensor[(3, 16, 3), bool] */;
  %90 = shape_of(%var_4188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%var_4188, dtype="bool") /* ty=Tensor[(3, 16, 3), bool] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %93 = greater_equal(%91, %92) /* ty=Tensor[(3, 16, 3), bool] */;
  (%93,)
}

def @func_10309() -> (Tensor[(7, ?, 10), uint16],) {
  %94 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %95 = %94.0;
  (%95,)
}

def @func_11966() -> (Tensor[(7, ?, 10), uint16],) {
  %96 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %97 = %96.0;
  (%97,)
}

def @func_17178() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32]) {
  %98 = @func_16335() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %99 = @func_11633() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %100 = @func_5123() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %101 = @func_15098() /* ty=(Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) */;
  %102 = @func_13603() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %103 = %98.0;
  %104 = %99.0;
  %105 = %100.0;
  %106 = %101.1;
  %107 = %102.0;
  (%103, %104, %105, %106, %107)
}

def @func_15584() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %108 = @func_6731() /* ty=(Tensor[(32), int64],) */;
  %109 = @func_5911() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64]) */;
  %110 = %108.0;
  %111 = %109.0;
  (%110, %111)
}

def @func_8011(%var_8007: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %112 = @func_6236() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %113 = cast(%var_8007, dtype="int64") /* ty=Tensor[(32), int64] */;
  %114 = reshape(%113, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %115 = @func_3801(%114) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %116 = %112.1;
  %117 = %115.1;
  (%116, %117, %var_8007)
}

def @func_12807() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %118 = @func_6274() /* ty=Tensor[(7, ?, 10), float32] */;
  %119 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%118, %119)
}

def @func_3964(%var_3954: Tensor[(1, 16, 9), float64]) -> (Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) {
  %120 = cast(%var_3954, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
  %121 = atan(%120) /* ty=Tensor[(1, 16, 9), float64] */;
  %122 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%121, %122)
}

def @func_7522() -> Tensor[(7, ?, 10), uint16] {
  %123 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %123.0
}

def @func_12189() -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(32), int64]) {
  %124 = @func_9285() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) */;
  %125 = @func_5768() /* ty=Tensor[(32), int64] */;
  %126 = %124.1;
  %127 = @func_4748() /* ty=Tensor[(32), int64] */;
  (%125, %126, %127)
}

def @func_4571(%var_4518: Tensor[(32), int64]) -> (Tensor[(32), int64], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), bool], Tensor[(350), bool]) {
  %128 = cast(%var_4518, dtype="int64") /* ty=Tensor[(32), int64] */;
  %129 = reshape(%128, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %130 = @func_3801(%129) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %131 = %130.3;
  %132 = @func_4133() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %133 = %132.0;
  %134 = cast(%133, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %135 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %136 = cast(%131, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %137 = dyn.reshape(%134, %135, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %138 = cast(%133, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %139 = shape_of(%131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%131, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %142 = cast(%var_4518, dtype="int64") /* ty=Tensor[(32), int64] */;
  %143 = reshape(%142, newshape=[32, 1]) /* ty=Tensor[(32, 1), int64] */;
  %144 = @func_2681(%143) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %145 = divide(%136, %137) /* ty=Tensor[(7, ?, 10), float64] */;
  %146 = logical_and(%140, %141) /* ty=Tensor[(7, ?, 10), bool] */;
  %147 = %144.4;
  (%var_4518, %145, %146, %147)
}

def @func_18974() -> (Tensor[(7, ?, 10), uint16],) {
  %148 = @func_11107() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%148,)
}

def @func_18382(%var_18277: Tensor[(7, 15, 10), uint16], %var_18315: Tensor[(7, 15, 10), uint16]) -> (Tensor[(7, 15, 10), bool], Tensor[(32), int64], Tensor[(7, 15, 10), float64], Tensor[(2, 4, 4), float32], Tensor[(4, 5, 13), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 14, 11), float64], Tensor[(154, 4), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %149 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %150 = %149.0;
  %151 = cast(%150, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %152 = cast(%var_18277, dtype="bool") /* ty=Tensor[(7, 15, 10), bool] */;
  %153 = @func_15023() /* ty=(Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) */;
  %154 = cast(%var_18315, dtype="float64") /* ty=Tensor[(7, 15, 10), float64] */;
  %155 = shape_of(%var_18277, dtype="int32") /* ty=Tensor[(3), int32] */;
  %156 = cast(%var_18277, dtype="float64") /* ty=Tensor[(7, 15, 10), float64] */;
  %157 = dyn.reshape(%154, %155, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %158 = @func_17389() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64]) */;
  %159 = %158.2;
  %160 = cast(%159, dtype="float32") /* ty=Tensor[(2, 4, 4), float32] */;
  %161 = @func_17422() /* ty=(Tensor[(4, 5, 13), float64],) */;
  %162 = @func_10977() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %163 = cast(meta[relay.Constant][5] /* ty=Tensor[(154, 4), float64] */, dtype="float64") /* ty=Tensor[(154, 4), float64] */;
  %164 = reshape(%163, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %165 = @func_10703(%164) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
  %166 = @func_10925() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %167 = less_equal(%151, %152) /* ty=Tensor[(7, 15, 10), bool] */;
  %168 = %153.0;
  %169 = floor_mod(%156, %157) /* ty=Tensor[(7, 15, 10), float64] */;
  %170 = acosh(%160) /* ty=Tensor[(2, 4, 4), float32] */;
  %171 = %161.0;
  %172 = %162.0;
  %173 = %165.1;
  %174 = %166.0;
  %175 = @func_10117() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%167, %168, %169, %170, %171, %172, %173, meta[relay.Constant][5] /* ty=Tensor[(154, 4), float64] */, %174, %175)
}

def @func_2439(%var_2334: Tensor[(32), int64], %var_2370: Tensor[(7, 5, 10), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) {
  %176 = cast(meta[relay.Constant][6] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %177 = cast(meta[relay.Constant][7] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %178 = reshape(%176, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %179 = reshape(%177, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %180 = @func_1903(%178, %179) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %181 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %182 = %181.1;
  %183 = cast(%182, dtype="int8") /* ty=Tensor[(7, 1, 10), int8] */;
  %184 = cast(%var_2370, dtype="int8") /* ty=Tensor[(7, 5, 10), int8] */;
  %185 = %180.2;
  %186 = cast(%185, dtype="int64") /* ty=Tensor[(32), int64] */;
  %187 = cast(%185, dtype="int64") /* ty=Tensor[(32), int64] */;
  %188 = reshape(%186, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %189 = reshape(%187, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %190 = cast(%var_2334, dtype="int64") /* ty=Tensor[(32), int64] */;
  %191 = cast(%var_2334, dtype="int64") /* ty=Tensor[(32), int64] */;
  %192 = reshape(%190, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %193 = reshape(%191, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %194 = @func_1139(%192, %193) /* ty=Tensor[(2, 4, 4), int64] */;
  %195 = cast(%194, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %196 = asinh(%195) /* ty=Tensor[(2, 4, 4), float64] */;
  %197 = cast(%196, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %198 = cast(meta[relay.Constant][6] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %199 = cast(meta[relay.Constant][7] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %200 = reshape(%198, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %201 = reshape(%199, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %202 = @func_1903(%200, %201) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %203 = %202.2;
  %204 = cast(%203, dtype="int64") /* ty=Tensor[(32), int64] */;
  %205 = reshape(%197, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %206 = reshape(%204, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %207 = cast(%203, dtype="float32") /* ty=Tensor[(32), float32] */;
  %208 = shape_of(%196, dtype="int32") /* ty=Tensor[(3), int32] */;
  %209 = cast(%196, dtype="float32") /* ty=Tensor[(2, 4, 4), float32] */;
  %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %211 = floor_mod(%209, %210) /* ty=Tensor[(2, 4, 4), float32] */;
  %212 = cast(%211, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %213 = cast(meta[relay.Constant][6] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %214 = cast(meta[relay.Constant][7] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %215 = reshape(%213, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %216 = reshape(%214, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %217 = @func_1903(%215, %216) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %218 = cast(meta[relay.Constant][6] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %219 = cast(meta[relay.Constant][7] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %220 = reshape(%218, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %221 = reshape(%219, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %222 = @func_1903(%220, %221) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %223 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %224 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %225 = left_shift(%183, %184) /* ty=Tensor[(7, 5, 10), int8] */;
  %226 = @func_1139(%188, %189) /* ty=Tensor[(2, 4, 4), int64] */;
  %227 = @func_1139(%205, %206) /* ty=Tensor[(2, 4, 4), int64] */;
  %228 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %229 = sigmoid(%212) /* ty=Tensor[(2, 4, 4), float64] */;
  %230 = %217.2;
  %231 = %222.0;
  (%223, %var_2334, %185, meta[relay.Constant][6] /* ty=Tensor[(9), int16] */, meta[relay.Constant][7] /* ty=Tensor[(108), int16] */, %224, %225, %226, %227, %228, %229, %230, %231)
}

def @func_19156() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %232 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %233 = @func_16272() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) */;
  %234 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %235 = %232.0;
  %236 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
  %237 = %233.3;
  %238 = %234.1;
  (%235, %236, %237, %238)
}

def @func_19263() -> Tensor[(7, ?, 10), uint16] {
  %239 = @func_18974() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %239.0
}

def @func_19551() -> Tensor[(9), int16] {
  %240 = @func_15023() /* ty=(Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) */;
  %240.2
}

def @func_17260() -> (Tensor[(7, ?, 10), uint16],) {
  %241 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%241,)
}

def @func_18835() -> (Tensor[(32), int64], Tensor[(2, 4, 4), int64]) {
  %242 = @func_17558() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(32), int64]) */;
  %243 = %242.1;
  %244 = cast(%243, dtype="int64") /* ty=Tensor[(32), int64] */;
  %245 = reshape(%244, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %246 = @func_3801(%245) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %247 = %246.1;
  (%243, %247)
}

def @func_18662() -> (Tensor[(7, ?, 10), uint16],) {
  %248 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %249 = %248.1;
  (%249,)
}

def @func_12897() -> (Tensor[(7, ?, 10), uint32],) {
  %250 = @func_8856() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(350), bool], Tensor[(7, ?, 10), float32]) */;
  %251 = %250.3;
  %252 = @func_12585() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %253 = %252.0;
  %254 = cast(%253, dtype="uint32") /* ty=Tensor[(7, ?, 10), uint32] */;
  %255 = shape_of(%251, dtype="int32") /* ty=Tensor[(3), int32] */;
  %256 = cast(%251, dtype="uint32") /* ty=Tensor[(7, ?, 10), uint32] */;
  %257 = dyn.reshape(%254, %255, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %258 = maximum(%256, %257) /* ty=Tensor[(7, ?, 10), uint32] */;
  (%258,)
}

def @func_12593() -> (Tensor[(7, ?, 10), float32],) {
  %259 = @func_8742() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %260 = %259.0;
  (%260,)
}

def @func_13974() -> (Tensor[(7, ?, 10), uint16],) {
  %261 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%261,)
}

def @func_16272() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) {
  %262 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %263 = @func_15098() /* ty=(Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) */;
  %264 = %263.1;
  %265 = @func_6379() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(616), float64], Tensor[(616), float64]) */;
  %266 = %265.0;
  %267 = cast(%266, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %268 = shape_of(%264, dtype="int32") /* ty=Tensor[(3), int32] */;
  %269 = cast(%264, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
  %270 = dyn.reshape(%267, %268, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %271 = @func_12897() /* ty=(Tensor[(7, ?, 10), uint32],) */;
  %272 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  %273 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
  %274 = %262.0;
  %275 = less_equal(%269, %270) /* ty=Tensor[(7, ?, 10), bool] */;
  %276 = %271.0;
  (%272, %273, %274, %275, %276)
}

def @func_4495(%var_4476: Tensor[(4, 3, 7), float32], %var_4485: Tensor[(8, 4), int64]) -> (Tensor[(4, 3, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(8, 4), int64], Tensor[(7, ?, 10), uint16]) {
  %277 = cast(%var_4476, dtype="float32") /* ty=Tensor[(4, 3, 7), float32] */;
  %278 = cast(%var_4485, dtype="int64") /* ty=Tensor[(8, 4), int64] */;
  %279 = reshape(%278, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %280 = @func_3801(%279) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %281 = cast(%var_4485, dtype="int64") /* ty=Tensor[(8, 4), int64] */;
  %282 = reshape(%281, newshape=[32, 1]) /* ty=Tensor[(32, 1), int64] */;
  %283 = @func_2681(%282) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %284 = exp(%277) /* ty=Tensor[(4, 3, 7), float32] */;
  %285 = %280.3;
  %286 = %283.6;
  (%284, %285, %var_4485, %286)
}

def @func_11009() -> Tensor[(7, ?, 10), uint16] {
  %287 = @func_5323() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %287.0
}

def @func_8620() -> Tensor[(9), int16] {
  %288 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %288.4
}

def @func_19091() -> Tensor[(7, 1, 10), float64] {
  %289 = @func_13877() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %289.0
}

def @func_18011() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32]) {
  %290 = @func_14049() /* ty=Tensor[(7, ?, 10), uint16] */;
  %291 = @func_11506() /* ty=Tensor[(7, ?, 10), float32] */;
  (%290, %291)
}

def @func_19617() -> (Tensor[(7, 1, 10), bool],) {
  %292 = @func_12697() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %293 = %292.1;
  (%293,)
}

def @func_10617() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %294 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
  %295 = @func_7522() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%294, %295)
}

def @func_16127() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(3, 2, 14), float64], Tensor[(84), float32], Tensor[(32), int64]) {
  %296 = @func_13118() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, 1, 10), bool], Tensor[(7, 5, 10), bool], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(3, 16, 3), bool], Tensor[(7, 1, 10), bool], Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %297 = cast(meta[relay.Constant][8] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %298 = reshape(%297, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %299 = @func_8011(%298) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %300 = cast(meta[relay.Constant][9] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %301 = reshape(%300, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), float32] */;
  %302 = @func_2544(%301) /* ty=(Tensor[(3, 2, 14), float64],) */;
  %303 = @func_13978() /* ty=(Tensor[(32), int64],) */;
  %304 = %296.0;
  %305 = %299.2;
  %306 = %302.0;
  %307 = %303.0;
  (%304, %305, meta[relay.Constant][8] /* ty=Tensor[(32), int64] */, %306, meta[relay.Constant][9] /* ty=Tensor[(84), float32] */, %307)
}

def @func_10845() -> Tensor[(7, ?, 10), uint16] {
  %308 = @func_5140() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %308.0
}

def @func_6731() -> (Tensor[(32), int64],) {
  %309 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %310 = %309.1;
  (%310,)
}

def @func_13603() -> (Tensor[(7, ?, 10), float32],) {
  %311 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %312 = %311.0;
  (%312,)
}

def @func_17718(%var_17694: Tensor[(1, 9), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), bool], Tensor[(364), float64], Tensor[(1, 9), int16]) {
  %313 = cast(meta[relay.Constant][10] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %314 = cast(%var_17694, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
  %315 = reshape(%313, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %316 = reshape(%314, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %317 = @func_4440(%315, %316) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %318 = @func_16342() /* ty=Tensor[(7, ?, 10), float32] */;
  %319 = %317.10;
  (%318, %319, meta[relay.Constant][10] /* ty=Tensor[(364), float64] */, %var_17694)
}

def @func_13187() -> (Tensor[(7, ?, 10), uint16],) {
  %320 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %321 = %320.0;
  (%321,)
}

def @func_3860() -> (Tensor[(32), int64],) {
  %322 = @func_3193() /* ty=Tensor[(32), int64] */;
  (%322,)
}

def @func_15942() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %323 = @func_11730() /* ty=Tensor[(7, ?, 10), uint16] */;
  %324 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%323, %324)
}

def @func_8218() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %325 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %326 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %327 = %325.0;
  %328 = %326.2;
  (%327, %328)
}

def @func_3264() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_5460() -> (Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %329 = @func_4897() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %332 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %333 = cast(%330, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %334 = sin(%331) /* ty=Tensor[(7, ?, 10), float64] */;
  %335 = %332.0;
  %336 = cos(%333) /* ty=Tensor[(7, ?, 10), float32] */;
  %337 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%334, %335, %336, %337)
}

def @func_11067(%var_11026: Tensor[(15, 7, 2), float32]) -> (Tensor[(15, 7, 2), float32], Tensor[(7, ?, 10), uint16]) {
  %338 = cast(%var_11026, dtype="float32") /* ty=Tensor[(15, 7, 2), float32] */;
  %339 = cos(%338) /* ty=Tensor[(15, 7, 2), float32] */;
  %340 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%339, %340)
}

def @func_15889() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %341 = @func_13196() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %342 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %343 = reshape(%342, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %344 = @func_9022(%343) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) */;
  %345 = %341.0;
  %346 = %344.0;
  (%345, %346, meta[relay.Constant][11] /* ty=Tensor[(144), float64] */)
}

def @func_3148() -> Tensor[(7, ?, 10), uint16] {
  @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_1903(%var_1871: Tensor[(1, 9, 1), int16], %var_1872: Tensor[(12, 9, 1), int16]) -> (Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %347 = cast(%var_1871, dtype="bool") /* ty=Tensor[(1, 9, 1), bool] */;
  %348 = cast(%var_1872, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
  %349 = greater_equal(%347, %348) /* ty=Tensor[(12, 9, 1), bool] */;
  %350 = cast(%349, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %351 = shape_of(%var_1872, dtype="int32") /* ty=Tensor[(3), int32] */;
  %352 = cast(%var_1872, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
  %353 = dyn.reshape(%350, %351, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %354 = cast(meta[relay.Constant][12] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %355 = cast(meta[relay.Constant][12] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %356 = reshape(%354, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %357 = reshape(%355, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %358 = bitwise_xor(%352, %353) /* ty=Tensor[(12, 9, ?), uint8] */;
  %359 = @func_1139(%356, %357) /* ty=Tensor[(2, 4, 4), int64] */;
  (%358, %359, meta[relay.Constant][12] /* ty=Tensor[(32), int64] */)
}

def @func_8184() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %360 = @func_7274() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %361 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
  %362 = %360.0;
  (%361, %362)
}

def @func_5323() -> (Tensor[(7, ?, 10), uint16],) {
  %363 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%363,)
}

def @func_8742() -> (Tensor[(7, ?, 10), float32],) {
  %364 = @func_5460() /* ty=(Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %365 = %364.2;
  (%365,)
}

def @func_12147(%var_12121: Tensor[(350), bool]) -> (Tensor[(2, 4, 4), int64], Tensor[(350), bool], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), float64]) {
  %366 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %367 = %366.2;
  %368 = cast(%367, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %369 = cast(%var_12121, dtype="bool") /* ty=Tensor[(350), bool] */;
  %370 = reshape(%368, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %371 = reshape(%369, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
  %372 = @func_2439(%370, %371) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
  %373 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %374 = cast(%367, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %375 = %372.7;
  %376 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %377 = %373.0;
  %378 = cos(%374) /* ty=Tensor[(2, 4, 4), float64] */;
  (%375, %var_12121, %376, %377, %378)
}

def @func_9542(%var_9488: bool, %var_9489: Tensor[(3, 7, 10), bool]) -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), int8]) {
  %379 = @func_8218() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %380 = %379.1;
  %381 = cast(%380, dtype="int64") /* ty=Tensor[(32), int64] */;
  %382 = reshape(%381, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %383 = @func_3801(%382) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %384 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %385 = cast(%var_9489, dtype="float32") /* ty=Tensor[(3, 7, 10), float32] */;
  %386 = atanh(%385) /* ty=Tensor[(3, 7, 10), float32] */;
  %387 = cast(%386, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %388 = atan(%387) /* ty=Tensor[(3, 7, 10), float64] */;
  %389 = cast(%388, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %390 = cast(%var_9488, dtype="bool") /* ty=bool */;
  %391 = cast(%var_9489, dtype="bool") /* ty=Tensor[(3, 7, 10), bool] */;
  %392 = logical_or(%390, %391) /* ty=Tensor[(3, 7, 10), bool] */;
  %393 = cast(%392, dtype="int8") /* ty=Tensor[(3, 7, 10), int8] */;
  %394 = shape_of(%388, dtype="int32") /* ty=Tensor[(3), int32] */;
  %395 = cast(%388, dtype="int8") /* ty=Tensor[(3, 7, 10), int8] */;
  %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %397 = %383.2;
  %398 = %384.0;
  %399 = log(%389) /* ty=Tensor[(3, 7, 10), float64] */;
  %400 = @func_6650() /* ty=Tensor[(7, ?, 10), uint16] */;
  %401 = subtract(%395, %396) /* ty=Tensor[(3, 7, 10), int8] */;
  (%380, %397, %398, %399, %400, %401)
}

def @func_9285() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) {
  %402 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %403 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
  %404 = %402.1;
  %405 = @func_6882() /* ty=Tensor[(32), int64] */;
  %406 = %403.0;
  (%404, %405, %406)
}

def @func_10977() -> (Tensor[(7, ?, 10), uint16],) {
  %407 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %408 = %407.0;
  (%408,)
}

def @main(%var_19857: Tensor[(7, 6, 13), float32], %var_19858: Tensor[(7, 6, 13), float32]) -> (Tensor[(7, 6, 13), float32],) {
  %409 = cast(%var_19858, dtype="float32") /* ty=Tensor[(7, 6, 13), float32] */;
  %410 = shape_of(%var_19857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %411 = cast(%var_19857, dtype="float32") /* ty=Tensor[(7, 6, 13), float32] */;
  %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %413 = divide(%411, %412) /* ty=Tensor[(7, 6, 13), float32] */;
  (%413,)
}

def @func_6274() -> Tensor[(7, ?, 10), float32] {
  %414 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
  %415 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  %416 = cast(%415, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %417 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%414, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%418, %419) /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_17244() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %420 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %421 = %420.0;
  %422 = @func_3502() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%421, %422)
}

def @func_15793() -> (Tensor[(7, ?, 10), float32],) {
  %423 = @func_14024() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %424 = %423.0;
  (%424,)
}

def @func_4038() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %425 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %426 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %427 = %425.0;
  %428 = %426.0;
  (%427, %428)
}

def @func_13764() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %429 = @func_13470() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %430 = %429.0;
  %431 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%430, %431)
}

def @func_14970() -> (Tensor[(7, ?, 10), uint16],) {
  %432 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %433 = %432.0;
  (%433,)
}

def @func_6882() -> Tensor[(32), int64] {
  @func_5768() /* ty=Tensor[(32), int64] */
}

def @func_8856() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(350), bool], Tensor[(7, ?, 10), float32]) {
  %434 = @func_4385() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %435 = cast(meta[relay.Constant][13] /* ty=Tensor[(350), bool] */, dtype="bool") /* ty=Tensor[(350), bool] */;
  %436 = reshape(%435, newshape=[350]) /* ty=Tensor[(350), bool] */;
  %437 = @func_7724(%436) /* ty=(Tensor[(15, 13, 7), float32], Tensor[(32), int64], Tensor[(12, 9, 350), uint8], Tensor[(7, ?, 10), uint16]) */;
  %438 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %439 = %434.0;
  %440 = %437.1;
  %441 = %438.1;
  (%439, %440, meta[relay.Constant][13] /* ty=Tensor[(350), bool] */, %441)
}

def @func_6860() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %442 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %443 = @func_4796() /* ty=Tensor[(32), int64] */;
  %444 = %442.0;
  %445 = @func_4796() /* ty=Tensor[(32), int64] */;
  (%443, %444, %445)
}

def @func_14867() -> Tensor[(7, ?, 10), float64] {
  %446 = @func_12741() /* ty=Tensor[(7, ?, 10), uint16] */;
  %447 = cast(%446, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  acosh(%447) /* ty=Tensor[(7, ?, 10), float64] */
}

def @func_5008() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %448 = cast(meta[relay.Constant][14] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %449 = reshape(%448, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %450 = @func_3801(%449) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %451 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %452 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  %453 = %450.1;
  (%451, %452, %453, meta[relay.Constant][14] /* ty=Tensor[(32), int64] */)
}

def @func_9022(%var_8998: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %454 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %455 = cast(meta[relay.Constant][15] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %456 = reshape(%455, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %457 = @func_3801(%456) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %458 = cast(%var_8998, dtype="float64") /* ty=Tensor[(144), float64] */;
  %459 = reshape(%458, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %460 = @func_3964(%459) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %461 = %454.0;
  %462 = %457.0;
  %463 = %460.1;
  (%461, %462, meta[relay.Constant][15] /* ty=Tensor[(32), int64] */, %463, %var_8998)
}

def @func_19305() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %464 = @func_12488() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %465 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
  %466 = %464.0;
  (%465, %466)
}

def @func_15269() -> (Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) {
  %467 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %468 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %469 = %467.0;
  %470 = %468.3;
  (%469, %470)
}

def @func_17517() -> (Tensor[(7, ?, 10), uint16],) {
  %471 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%471,)
}

def @func_16342() -> Tensor[(7, ?, 10), float32] {
  %472 = @func_15793() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %472.0
}

def @func_18049() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  %473 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %474 = @func_14680() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %475 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %476 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %477 = @func_17751() /* ty=(Tensor[(32), int64],) */;
  %478 = %473.0;
  %479 = %474.0;
  %480 = %475.0;
  %481 = %476.2;
  %482 = %477.0;
  (%478, %479, %480, %481, %482)
}

def @func_13118() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, 1, 10), bool], Tensor[(7, 5, 10), bool], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(3, 16, 3), bool], Tensor[(7, 1, 10), bool], Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %483 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %484 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %485 = @func_8645() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, 5, 10), bool], Tensor[(350), bool]) */;
  %486 = cast(meta[relay.Constant][16] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %487 = cast(meta[relay.Constant][16] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %488 = reshape(%486, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %489 = reshape(%487, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %490 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %491 = @func_7350() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %492 = @func_12272() /* ty=(Tensor[(7, 14, 10), uint16], Tensor[(3, 16, 3), bool], Tensor[(4, 36), float64]) */;
  %493 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %494 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %495 = @func_10255() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %496 = %485.1;
  %497 = cast(%496, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
  %498 = reshape(%497, newshape=[350]) /* ty=Tensor[(350), bool] */;
  %499 = @func_8127(%498) /* ty=(Tensor[(7, 4, 10), float32], Tensor[(7, 5, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 4, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %500 = %483.0;
  %501 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
  %502 = %484.0;
  %503 = @func_1139(%488, %489) /* ty=Tensor[(2, 4, 4), int64] */;
  %504 = %490.1;
  %505 = %491.2;
  %506 = %492.1;
  %507 = %493.1;
  %508 = %494.0;
  %509 = %495.1;
  %510 = %499.4;
  %511 = @func_11419() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%500, %501, %502, %496, %503, meta[relay.Constant][16] /* ty=Tensor[(32), int64] */, %504, %505, %506, %507, %508, %509, %510, %511)
}

def @func_2631() -> Tensor[(7, ?, 10), uint16] {
  @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_16808(%var_16784: float32, %var_16785: Tensor[(7, 14, 8), float32]) -> Tensor[(7, 14, 8), bool] {
  %512 = cast(%var_16784, dtype="bool") /* ty=bool */;
  %513 = cast(%var_16785, dtype="bool") /* ty=Tensor[(7, 14, 8), bool] */;
  not_equal(%512, %513) /* ty=Tensor[(7, 14, 8), bool] */
}

def @func_9703() -> (Tensor[(7, ?, 10), uint16],) {
  %514 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %515 = %514.0;
  (%515,)
}

def @func_13397() -> (Tensor[(7, 10, 10), float64], Tensor[(1, 7, 9), float64], Tensor[(7, ?, 10), uint16]) {
  %516 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %517 = %516.0;
  %518 = cast(%517, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %519 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 10, 10), uint16] */, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %520 = @func_4133() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %521 = divide(%518, %519) /* ty=Tensor[(7, 10, 10), float64] */;
  %522 = @func_11846() /* ty=Tensor[(1, 7, 9), float64] */;
  %523 = %520.0;
  (%521, %522, %523)
}

def @func_11890() -> (Tensor[(7, 1, 10), bool], Tensor[(32), int64]) {
  %524 = @func_6145() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %525 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %526 = %524.0;
  %527 = %525.2;
  (%526, %527)
}

def @func_12382() -> Tensor[(32), int64] {
  %528 = @func_12341() /* ty=(Tensor[(32), int64],) */;
  %528.0
}

def @func_10117() -> Tensor[(7, ?, 10), uint16] {
  @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_8479() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %529 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %530 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %531 = %530.0;
  %532 = cast(%531, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %533 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %534 = %529.0;
  %535 = sigmoid(%532) /* ty=Tensor[(7, ?, 10), float64] */;
  %536 = %533.0;
  (%534, %535, %536)
}

def @func_7110() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(630), uint16]) {
  %537 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %538 = cast(meta[relay.Constant][18] /* ty=Tensor[(630), uint16] */, dtype="uint16") /* ty=Tensor[(630), uint16] */;
  %539 = reshape(%538, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint16] */;
  %540 = @func_4838(%539) /* ty=(Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) */;
  %541 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %542 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %543 = %537.2;
  %544 = %540.1;
  (%541, %542, %543, %544, meta[relay.Constant][18] /* ty=Tensor[(630), uint16] */)
}

def @func_6108(%var_6018: Tensor[(616), float64], %var_6062: Tensor[(3, 63), int16], %var_6063: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float32], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(108), int16], Tensor[(3, 63), int16], Tensor[(9), int16], Tensor[(7, 1, 10), bool]) {
  %545 = cast(%var_6018, dtype="float64") /* ty=Tensor[(616), float64] */;
  %546 = reshape(%545, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %547 = @func_4623(%546) /* ty=(Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) */;
  %548 = cast(%var_6062, dtype="int16") /* ty=Tensor[(3, 63), int16] */;
  %549 = cast(%var_6063, dtype="int16") /* ty=Tensor[(9), int16] */;
  %550 = reshape(%548, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int16] */;
  %551 = reshape(%549, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %552 = @func_2599(%550, %551) /* ty=(Tensor[(3, 7, 9), int16], Tensor[(12, 9, ?), uint8], Tensor[(9), int16], Tensor[(108), int16]) */;
  %553 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %554 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  %555 = %547.0;
  %556 = @func_3193() /* ty=Tensor[(32), int64] */;
  %557 = @func_4748() /* ty=Tensor[(32), int64] */;
  %558 = %552.3;
  %559 = %553.0;
  (%554, %555, %var_6018, %556, %557, %558, %var_6062, %var_6063, %559)
}

def @func_14948() -> Tensor[(32), int64] {
  @func_14079() /* ty=Tensor[(32), int64] */
}

def @func_18448() -> (Tensor[(7, ?, 10), uint16],) {
  %560 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%560,)
}

def @func_11929() -> Tensor[(7, 1, 10), float64] {
  @func_10505() /* ty=Tensor[(7, 1, 10), float64] */
}

def @func_17782() -> (Tensor[(7, 9, 10), uint64],) {
  %561 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %562 = %561.0;
  %563 = cast(%562, dtype="uint64") /* ty=Tensor[(7, ?, 10), uint64] */;
  %564 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 9, 10), uint16] */, dtype="uint64") /* ty=Tensor[(7, 9, 10), uint64] */;
  %565 = bitwise_and(%563, %564) /* ty=Tensor[(7, 9, 10), uint64] */;
  (%565,)
}

def @func_5694(%var_5649: Tensor[(144), float64], %var_5658: Tensor[(120), float64], %var_5674: Tensor[(3, 3), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) {
  %566 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %567 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %568 = cast(%var_5649, dtype="float64") /* ty=Tensor[(144), float64] */;
  %569 = reshape(%568, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %570 = @func_3964(%569) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %571 = cast(%var_5658, dtype="float64") /* ty=Tensor[(120), float64] */;
  %572 = reshape(%571, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %573 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %574 = @func_5049() /* ty=Tensor[(7, ?, 10), uint16] */;
  %575 = cast(%var_5674, dtype="int16") /* ty=Tensor[(3, 3), int16] */;
  %576 = reshape(%575, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %577 = @func_2849(%576) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) */;
  %578 = %577.0;
  %579 = cast(%578, dtype="int64") /* ty=Tensor[(7, ?, 10), int64] */;
  %580 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %581 = cast(%574, dtype="int64") /* ty=Tensor[(7, ?, 10), int64] */;
  %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %583 = %566.1;
  %584 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  %585 = %567.0;
  %586 = %570.0;
  %587 = @func_5234(%572) /* ty=Tensor[(8, 3, 5), float64] */;
  %588 = %573.0;
  %589 = bitwise_and(%581, %582) /* ty=Tensor[(7, ?, 10), int64] */;
  (%583, %584, %585, %586, %var_5649, %587, %var_5658, %588, %var_5674, %589)
}

def @func_2864() -> (Tensor[(7, ?, 10), uint16],) {
  %590 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %591 = %590.1;
  (%591,)
}

def @func_19561() -> (Tensor[(7, ?, 10), uint16],) {
  %592 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %593 = %592.1;
  (%593,)
}

def @func_4748() -> Tensor[(32), int64] {
  @func_3193() /* ty=Tensor[(32), int64] */
}

def @func_11996() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), int64]) {
  %594 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %595 = %594.2;
  %596 = cast(%595, dtype="int64") /* ty=Tensor[(32), int64] */;
  %597 = cast(%595, dtype="int64") /* ty=Tensor[(32), int64] */;
  %598 = reshape(%596, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %599 = reshape(%597, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %600 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %601 = @func_1139(%598, %599) /* ty=Tensor[(2, 4, 4), int64] */;
  (%600, %595, %601)
}

def @func_6605() -> (Tensor[(7, ?, 10), uint16],) {
  %602 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%602,)
}

def @func_10404() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %603 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %604 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %605 = @func_3193() /* ty=Tensor[(32), int64] */;
  %606 = %603.0;
  %607 = %604.5;
  (%605, %606, %607)
}

def @func_8380(%var_8328: Tensor[(3, 1, 5), float64], %var_8339: Tensor[(120), float64], %var_8340: Tensor[(9, 1), int16]) -> (Tensor[(3, 3), int16], Tensor[(2, 72), float64], Tensor[(9, 120), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(3, ?, 5), float64]) {
  %608 = cast(meta[relay.Constant][20] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
  %609 = cast(%var_8339, dtype="float64") /* ty=Tensor[(120), float64] */;
  %610 = cast(%var_8340, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
  %611 = reshape(%608, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %612 = reshape(%609, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %613 = reshape(%610, newshape=[3, 3]) /* ty=Tensor[(3, 3), int16] */;
  %614 = @func_5694(%611, %612, %613) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) */;
  %615 = cast(%var_8340, dtype="uint16") /* ty=Tensor[(9, 1), uint16] */;
  %616 = cast(%var_8339, dtype="uint16") /* ty=Tensor[(120), uint16] */;
  %617 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %618 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %619 = cast(%var_8328, dtype="float64") /* ty=Tensor[(3, 1, 5), float64] */;
  %620 = acosh(%619) /* ty=Tensor[(3, 1, 5), float64] */;
  %621 = cast(%var_8328, dtype="bool") /* ty=Tensor[(3, 1, 5), bool] */;
  %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
  %623 = cast(%620, dtype="bool") /* ty=Tensor[(3, 1, 5), bool] */;
  %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %625 = greater_equal(%623, %624) /* ty=Tensor[(3, ?, 5), bool] */;
  %626 = cast(%625, dtype="float64") /* ty=Tensor[(3, ?, 5), float64] */;
  %627 = %614.8;
  %628 = bitwise_and(%615, %616) /* ty=Tensor[(9, 120), uint16] */;
  %629 = %617.3;
  %630 = %618.0;
  %631 = exp(%626) /* ty=Tensor[(3, ?, 5), float64] */;
  (%627, meta[relay.Constant][20] /* ty=Tensor[(2, 72), float64] */, %628, %629, %630, %631)
}

def @func_13470() -> (Tensor[(7, 1, 10), float64],) {
  %632 = @func_13196() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %633 = %632.0;
  (%633,)
}

def @func_7350() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) {
  %634 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %635 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %636 = %634.1;
  %637 = %635.1;
  %638 = @func_6882() /* ty=Tensor[(32), int64] */;
  (%636, %637, %638)
}

def @func_19637() -> (Tensor[(7, ?, 10), uint16],) {
  %639 = @func_19349() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %640 = %639.1;
  (%640,)
}

def @func_4226() -> (Tensor[(7, 1, 10), bool],) {
  %641 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %642 = %641.1;
  (%642,)
}

def @func_13346() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %643 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %644 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %645 = @func_11332() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %646 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %647 = %643.0;
  %648 = @func_11506() /* ty=Tensor[(7, ?, 10), float32] */;
  %649 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  %650 = %644.0;
  %651 = @func_3193() /* ty=Tensor[(32), int64] */;
  %652 = %645.0;
  %653 = @func_12741() /* ty=Tensor[(7, ?, 10), uint16] */;
  %654 = %646.0;
  (%647, %648, %649, %650, %651, %652, %653, %654)
}

def @func_19422() -> Tensor[(7, 1, 10), bool] {
  %655 = @func_11332() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %655.0
}

def @func_2599(%var_2584: Tensor[(3, 7, 9), int16], %var_2595: Tensor[(9), int16]) -> (Tensor[(3, 7, 9), int16], Tensor[(12, 9, ?), uint8], Tensor[(9), int16], Tensor[(108), int16]) {
  %656 = cast(meta[relay.Constant][21] /* ty=Tensor[(1, 7, 9), int16] */, dtype="int16") /* ty=Tensor[(1, 7, 9), int16] */;
  %657 = cast(%var_2584, dtype="int16") /* ty=Tensor[(3, 7, 9), int16] */;
  %658 = cast(%var_2595, dtype="int16") /* ty=Tensor[(9), int16] */;
  %659 = cast(meta[relay.Constant][22] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %660 = reshape(%658, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %661 = reshape(%659, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %662 = @func_1903(%660, %661) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %663 = bitwise_and(%656, %657) /* ty=Tensor[(3, 7, 9), int16] */;
  %664 = %662.0;
  (%663, %664, %var_2595, meta[relay.Constant][22] /* ty=Tensor[(108), int16] */)
}

def @func_15919() -> Tensor[(7, ?, 10), float32] {
  %665 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %665.0
}

def @func_13890() -> Tensor[(7, 1, 10), float64] {
  %666 = @func_12031() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) */;
  %666.2
}

def @func_18583() -> (Tensor[(7, ?, 10), uint16],) {
  %667 = @func_6907() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %668 = %667.1;
  (%668,)
}

def @func_4623(%var_4599: Tensor[(616), float64]) -> (Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) {
  %669 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %670 = cast(%var_4599, dtype="float64") /* ty=Tensor[(616), float64] */;
  %671 = cast(%var_4599, dtype="float64") /* ty=Tensor[(616), float64] */;
  %672 = reshape(%670, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %673 = reshape(%671, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %674 = @func_3384(%672, %673) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %675 = %669.2;
  %676 = %674.1;
  (%675, %676, %var_4599)
}

def @func_14079() -> Tensor[(32), int64] {
  %677 = @func_10255() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %677.1
}

def @func_16705(%var_16660: Tensor[(9, 1), int16]) -> (Tensor[(32), int64], Tensor[(7, 9, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, 364, 10), bool]) {
  %678 = cast(meta[relay.Constant][23] /* ty=Tensor[(364, 1), float64] */, dtype="float64") /* ty=Tensor[(364, 1), float64] */;
  %679 = cast(%var_16660, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
  %680 = reshape(%678, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %681 = reshape(%679, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %682 = @func_4440(%680, %681) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %683 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %684 = %683.1;
  %685 = cast(%684, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %686 = cast(%var_16660, dtype="bool") /* ty=Tensor[(9, 1), bool] */;
  %687 = @func_12807() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %688 = @func_6274() /* ty=Tensor[(7, ?, 10), float32] */;
  %689 = cast(meta[relay.Constant][23] /* ty=Tensor[(364, 1), float64] */, dtype="bool") /* ty=Tensor[(364, 1), bool] */;
  %690 = cast(%688, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %691 = %682.4;
  %692 = not_equal(%685, %686) /* ty=Tensor[(7, 9, 10), bool] */;
  %693 = %687.1;
  %694 = logical_or(%689, %690) /* ty=Tensor[(7, 364, 10), bool] */;
  (%691, %692, %693, %694)
}

def @func_12585() -> (Tensor[(7, ?, 10), uint16],) {
  %695 = @func_12050() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %696 = %695.0;
  (%696,)
}

def @func_14336() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %697 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %698 = @func_4748() /* ty=Tensor[(32), int64] */;
  %699 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
  %700 = %697.0;
  (%698, %699, %700)
}

def @func_17988() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(210), float32]) {
  %701 = cast(meta[relay.Constant][24] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %702 = reshape(%701, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), float32] */;
  %703 = @func_11067(%702) /* ty=(Tensor[(15, 7, 2), float32], Tensor[(7, ?, 10), uint16]) */;
  %704 = @func_10117() /* ty=Tensor[(7, ?, 10), uint16] */;
  %705 = %703.1;
  (%704, %705, meta[relay.Constant][24] /* ty=Tensor[(210), float32] */)
}

def @func_9298(%var_9287: Tensor[(10, 14, 4), float32]) -> (Tensor[(10, 14, 4), float32], Tensor[(7, ?, 10), uint16], Tensor[(9), int16]) {
  %706 = cast(%var_9287, dtype="float32") /* ty=Tensor[(10, 14, 4), float32] */;
  %707 = sinh(%706) /* ty=Tensor[(10, 14, 4), float32] */;
  %708 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  %709 = @func_8620() /* ty=Tensor[(9), int16] */;
  (%707, %708, %709)
}

def @func_3384(%var_3347: Tensor[(4, 14, 11), float64], %var_3348: Tensor[(4, 14, 11), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %710 = cast(%var_3348, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %711 = shape_of(%var_3347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %712 = cast(%var_3347, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %713 = dyn.reshape(%710, %711, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %714 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %715 = subtract(%712, %713) /* ty=Tensor[(4, 14, 11), float64] */;
  %716 = %714.0;
  %717 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%715, %716, %717)
}

def @func_12741() -> Tensor[(7, ?, 10), uint16] {
  @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_13678(%var_13673: Tensor[(13, 15, 8), float32], %var_13674: Tensor[(13, 15, 8), float32]) -> Tensor[(13, 15, 8), bool] {
  %718 = cast(%var_13674, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %719 = shape_of(%var_13673, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%var_13673, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%720, %721) /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_19082() -> (Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  %722 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %723 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %724 = @func_9285() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) */;
  %725 = %722.0;
  %726 = %723.0;
  %727 = %724.0;
  (%725, %726, %727)
}

def @func_19039(%var_18996: Tensor[(630), float32]) -> (Tensor[(32), int64], Tensor[(7, 9, 10), uint64], Tensor[(630), float32], Tensor[(7, ?, 10), uint16]) {
  %728 = @func_12341() /* ty=(Tensor[(32), int64],) */;
  %729 = cast(%var_18996, dtype="float32") /* ty=Tensor[(630), float32] */;
  %730 = reshape(%729, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), float32] */;
  %731 = @func_7139(%730) /* ty=(Tensor[(7, 9, 10), uint64], Tensor[(32), int64]) */;
  %732 = @func_14696() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %733 = %728.0;
  %734 = %731.0;
  %735 = %732.0;
  (%733, %734, %var_18996, %735)
}

def @func_3227() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  %736 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %737 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
  %738 = cast(%737, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %739 = %736.1;
  %740 = log(%738) /* ty=Tensor[(7, ?, 10), float32] */;
  (%739, %740)
}

def @func_4351() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %741 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %742 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  %743 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %744 = %743.0;
  %745 = cast(%744, dtype="int16") /* ty=Tensor[(7, 1, 10), int16] */;
  %746 = shape_of(%742, dtype="int32") /* ty=Tensor[(3), int32] */;
  %747 = cast(%742, dtype="int16") /* ty=Tensor[(7, ?, 10), int16] */;
  %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %749 = left_shift(%747, %748) /* ty=Tensor[(7, ?, 10), int16] */;
  %750 = cast(%749, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %751 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %752 = %741.1;
  %753 = rsqrt(%750) /* ty=Tensor[(7, ?, 10), float64] */;
  %754 = %751.0;
  (%752, %753, %754)
}

def @func_5164() -> (Tensor[(32), int64],) {
  %755 = @func_3193() /* ty=Tensor[(32), int64] */;
  (%755,)
}

def @func_3088() -> Tensor[(7, ?, 10), uint16] {
  @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_17422() -> (Tensor[(4, 5, 13), float64],) {
  %756 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 13), float64] */;
  %757 = acosh(%756) /* ty=Tensor[(4, 5, 13), float64] */;
  (%757,)
}

def @func_14750(%var_14727: Tensor[(16, 2), int64], %var_14736: Tensor[(9), int16]) -> (Tensor[(7, 10, 10), float64], Tensor[(32), int64], Tensor[(16, 2), int64], Tensor[(60, 2), bool], Tensor[(9), int16], Tensor[(120), float64]) {
  %758 = @func_13397() /* ty=(Tensor[(7, 10, 10), float64], Tensor[(1, 7, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %759 = cast(%var_14727, dtype="int64") /* ty=Tensor[(16, 2), int64] */;
  %760 = reshape(%759, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %761 = @func_10643(%760) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %762 = cast(%var_14736, dtype="int16") /* ty=Tensor[(9), int16] */;
  %763 = cast(meta[relay.Constant][26] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %764 = reshape(%762, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %765 = reshape(%763, newshape=[60, 2]) /* ty=Tensor[(60, 2), float64] */;
  %766 = @func_11293(%764, %765) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(9), int16], Tensor[(8, 3, 5), float64], Tensor[(32), int64], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(60, 2), bool]) */;
  %767 = %758.0;
  %768 = %761.2;
  %769 = %766.6;
  (%767, %768, %var_14727, %769, %var_14736, meta[relay.Constant][26] /* ty=Tensor[(120), float64] */)
}

def @func_6924() -> Tensor[(7, ?, 10), uint16] {
  %770 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %770.1
}

def @func_11846() -> Tensor[(1, 7, 9), float64] {
  %771 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 7, 9), float64] */;
  sqrt(%771) /* ty=Tensor[(1, 7, 9), float64] */
}

def @func_15206(%var_15175: Tensor[(7, 12, 10), uint16]) -> (Tensor[(7, 12, 10), float32], Tensor[(7, 1, 10), float64]) {
  %772 = @func_14680() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %773 = %772.0;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %775 = cast(%var_15175, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  %776 = divide(%774, %775) /* ty=Tensor[(7, 12, 10), float32] */;
  %777 = @func_10505() /* ty=Tensor[(7, 1, 10), float64] */;
  (%776, %777)
}

def @func_15742(%var_15732: Tensor[(1, 9), int16], %var_15733: Tensor[(108), int16]) -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16]) {
  %778 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %779 = @func_9799() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %780 = cast(%var_15732, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
  %781 = cast(%var_15733, dtype="int16") /* ty=Tensor[(108), int16] */;
  %782 = reshape(%780, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %783 = reshape(%781, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %784 = @func_1903(%782, %783) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %785 = %778.0;
  %786 = %779.1;
  %787 = %784.2;
  (%785, %786, %787, %var_15732, %var_15733)
}

def @func_16174() -> (Tensor[(7, ?, 10), float64],) {
  %788 = @func_14175() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64]) */;
  %789 = %788.1;
  (%789,)
}

def @func_19045() -> (Tensor[(7, ?, 10), uint16],) {
  %790 = @func_11107() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%790,)
}

def @func_3011() -> (Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %791 = cast(meta[relay.Constant][28] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %792 = cast(meta[relay.Constant][28] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %793 = reshape(%791, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %794 = reshape(%792, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %795 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %796 = %795.0;
  %797 = cast(%796, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %798 = @func_1139(%793, %794) /* ty=Tensor[(2, 4, 4), int64] */;
  %799 = cast(%798, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %800 = reshape(%799, newshape=[32, 1]) /* ty=Tensor[(32, 1), int64] */;
  %801 = @func_2681(%800) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %802 = asin(%797) /* ty=Tensor[(7, ?, 10), float32] */;
  %803 = %801.6;
  (%798, meta[relay.Constant][28] /* ty=Tensor[(32), int64] */, %802, %803)
}

def @func_15599() -> (Tensor[(7, 1, 10), float64],) {
  %804 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %805 = %804.0;
  (%805,)
}

def @func_16335() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %806 = @func_5323() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %807 = %806.0;
  %808 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%807, %808)
}

def @func_4717() -> (Tensor[(32), int64], Tensor[(7, 1, 10), bool]) {
  %809 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %810 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %811 = %809.0;
  %812 = %810.0;
  (%811, %812)
}

def @func_14049() -> Tensor[(7, ?, 10), uint16] {
  @func_11730() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_15432() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(32), int64]) {
  %813 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %814 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %815 = @func_10309() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %816 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %817 = @func_14563() /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %818 = @func_13943() /* ty=Tensor[(7, ?, 10), uint16] */;
  %819 = %813.1;
  %820 = %814.2;
  %821 = %815.0;
  %822 = %816.0;
  %823 = %817.1;
  (%818, %819, %820, %821, %822, %823)
}

def @func_18524() -> (Tensor[(7, 1, 10), bool],) {
  %824 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %825 = %824.1;
  (%825,)
}

def @func_5071() -> (Tensor[(7, ?, 10), uint16],) {
  %826 = @func_4385() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %827 = %826.0;
  (%827,)
}

def @func_2849(%var_2844: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) {
  %828 = cast(meta[relay.Constant][29] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %829 = cast(meta[relay.Constant][29] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %830 = reshape(%828, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %831 = reshape(%829, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %832 = cast(%var_2844, dtype="int16") /* ty=Tensor[(9), int16] */;
  %833 = cast(meta[relay.Constant][30] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %834 = reshape(%832, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %835 = reshape(%833, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %836 = @func_1903(%834, %835) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %837 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %838 = @func_1139(%830, %831) /* ty=Tensor[(2, 4, 4), int64] */;
  %839 = %836.2;
  (%837, %838, meta[relay.Constant][29] /* ty=Tensor[(32), int64] */, %839, %var_2844, meta[relay.Constant][30] /* ty=Tensor[(108), int16] */)
}

def @func_13788() -> (Tensor[(7, 1, 10), float64],) {
  %840 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %841 = %840.0;
  (%841,)
}

def @func_10643(%var_10641: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), float32], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %842 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %843 = cast(%var_10641, dtype="int64") /* ty=Tensor[(32), int64] */;
  %844 = cast(%var_10641, dtype="int64") /* ty=Tensor[(32), int64] */;
  %845 = reshape(%843, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %846 = reshape(%844, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %847 = %842.0;
  %848 = @func_1139(%845, %846) /* ty=Tensor[(2, 4, 4), int64] */;
  (%847, %848, %var_10641)
}

def @func_3978() -> Tensor[(7, ?, 10), uint16] {
  %849 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %849.0
}

def @func_18638() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %850 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %851 = @func_14696() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %852 = %850.0;
  %853 = %851.2;
  (%852, %853)
}

def @func_12539(%var_12532: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) {
  %854 = @func_11363() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(616), float64], Tensor[(7, 8, 6), float64]) */;
  %855 = cast(meta[relay.Constant][31] /* ty=Tensor[(1, 364), float64] */, dtype="float64") /* ty=Tensor[(1, 364), float64] */;
  %856 = cast(%var_12532, dtype="int16") /* ty=Tensor[(9), int16] */;
  %857 = reshape(%855, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %858 = reshape(%856, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %859 = @func_4440(%857, %858) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %860 = %854.1;
  %861 = %859.5;
  (%860, %861, meta[relay.Constant][31] /* ty=Tensor[(1, 364), float64] */, %var_12532)
}

def @func_15023() -> (Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) {
  %862 = @func_13571() /* ty=(Tensor[(32), int64],) */;
  %863 = cast(meta[relay.Constant][32] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %864 = reshape(%863, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %865 = @func_12539(%864) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) */;
  %866 = %862.0;
  %867 = %865.3;
  (%866, %867, meta[relay.Constant][32] /* ty=Tensor[(9), int16] */)
}

def @func_8519() -> Tensor[(7, 1, 10), bool] {
  %868 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %868.0
}

def @func_7360() -> Tensor[(7, ?, 10), uint16] {
  @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_6379() -> (Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(616), float64], Tensor[(616), float64]) {
  %869 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %870 = cast(meta[relay.Constant][33] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %871 = reshape(%870, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %872 = @func_4623(%871) /* ty=(Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) */;
  %873 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %874 = %869.4;
  %875 = %872.2;
  (%873, %874, %875, meta[relay.Constant][33] /* ty=Tensor[(616), float64] */)
}

def @func_10047() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 36), float64], Tensor[(120), float64], Tensor[(9), int16], Tensor[(7, 1, 10), float32], Tensor[(7, 16, 10), float64], Tensor[(32), int64]) {
  %876 = @func_9189() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %877 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %878 = cast(meta[relay.Constant][35] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %879 = cast(meta[relay.Constant][36] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %880 = reshape(%877, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %881 = reshape(%878, newshape=[120]) /* ty=Tensor[(120), float64] */;
  %882 = reshape(%879, newshape=[3, 3]) /* ty=Tensor[(3, 3), int16] */;
  %883 = @func_5694(%880, %881, %882) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) */;
  %884 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %885 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
  %886 = %885.1;
  %887 = cast(%886, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
  %888 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 16, 10), bool] */, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
  %889 = mod(%887, %888) /* ty=Tensor[(7, 16, 10), float64] */;
  %890 = cast(%889, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
  %891 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %892 = %876.0;
  %893 = %883.1;
  %894 = %884.2;
  %895 = sigmoid(%890) /* ty=Tensor[(7, 16, 10), float64] */;
  %896 = %891.1;
  (%892, %893, meta[relay.Constant][34] /* ty=Tensor[(4, 36), float64] */, meta[relay.Constant][35] /* ty=Tensor[(120), float64] */, meta[relay.Constant][36] /* ty=Tensor[(9), int16] */, %894, %895, %896)
}

def @func_7724(%var_7701: Tensor[(350), bool]) -> (Tensor[(15, 13, 7), float32], Tensor[(32), int64], Tensor[(12, 9, 350), uint8], Tensor[(7, ?, 10), uint16]) {
  %897 = cast(meta[relay.Constant][38] /* ty=Tensor[(15, 13, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %898 = @func_3193() /* ty=Tensor[(32), int64] */;
  %899 = cast(%898, dtype="int64") /* ty=Tensor[(32), int64] */;
  %900 = cast(%var_7701, dtype="bool") /* ty=Tensor[(350), bool] */;
  %901 = reshape(%899, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %902 = reshape(%900, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
  %903 = @func_2439(%901, %902) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
  %904 = %903.12;
  %905 = cast(%904, dtype="uint8") /* ty=Tensor[(12, 9, ?), uint8] */;
  %906 = cast(%var_7701, dtype="uint8") /* ty=Tensor[(350), uint8] */;
  %907 = @func_6605() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %908 = log(%897) /* ty=Tensor[(15, 13, 7), float32] */;
  %909 = left_shift(%905, %906) /* ty=Tensor[(12, 9, 350), uint8] */;
  %910 = %907.0;
  (%908, %898, %909, %910)
}

def @func_7200() -> (Tensor[(7, ?, 10), uint16],) {
  %911 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %912 = %911.0;
  (%912,)
}

def @func_17389() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64]) {
  %913 = @func_12217() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %914 = @func_6882() /* ty=Tensor[(32), int64] */;
  %915 = cast(%914, dtype="int64") /* ty=Tensor[(32), int64] */;
  %916 = reshape(%915, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %917 = @func_8011(%916) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %918 = %913.1;
  %919 = %917.1;
  (%914, %918, %919)
}

def @func_10487() -> Tensor[(7, ?, 10), uint16] {
  @func_6650() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_13593() -> (Tensor[(7, ?, 10), uint16],) {
  %920 = @func_13346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %921 = %920.3;
  (%921,)
}

def @func_19116() -> (Tensor[(7, ?, 10), uint16],) {
  %922 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%922,)
}

def @func_11419() -> Tensor[(7, ?, 10), uint16] {
  %923 = @func_7274() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %923.0
}

def @func_5970() -> (Tensor[(7, ?, 10), uint16],) {
  %924 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %925 = %924.0;
  (%925,)
}

def @func_8645() -> (Tensor[(7, ?, 10), float32], Tensor[(7, 5, 10), bool], Tensor[(350), bool]) {
  %926 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %927 = cast(meta[relay.Constant][39] /* ty=Tensor[(350), bool] */, dtype="bool") /* ty=Tensor[(350), bool] */;
  %928 = reshape(%927, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
  %929 = @func_7032(%928) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) */;
  %930 = %926.2;
  %931 = %929.1;
  (%930, %931, meta[relay.Constant][39] /* ty=Tensor[(350), bool] */)
}

def @func_13943() -> Tensor[(7, ?, 10), uint16] {
  %932 = @func_9799() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %932.0
}

def @func_10887() -> (Tensor[(7, 8, 6), float64],) {
  %933 = cast(meta[relay.Constant][40] /* ty=Tensor[(7, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %934 = log10(%933) /* ty=Tensor[(7, 8, 6), float64] */;
  (%934,)
}

def @func_9082() -> Tensor[(7, ?, 10), uint16] {
  @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_18732() -> (Tensor[(7, ?, 10), uint16],) {
  %935 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %936 = %935.0;
  (%936,)
}

def @func_5049() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_9189() -> (Tensor[(7, 1, 10), float64],) {
  %937 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %938 = %937.0;
  (%938,)
}

def @func_4440(%var_4391: Tensor[(4, 13, 7), float64], %var_4407: Tensor[(1, 9), int16]) -> (Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
  %939 = cast(%var_4391, dtype="float64") /* ty=Tensor[(4, 13, 7), float64] */;
  %940 = asin(%939) /* ty=Tensor[(4, 13, 7), float64] */;
  %941 = cast(%940, dtype="float32") /* ty=Tensor[(4, 13, 7), float32] */;
  %942 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %943 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %944 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %945 = cast(%var_4407, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
  %946 = cast(meta[relay.Constant][41] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %947 = reshape(%945, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %948 = reshape(%946, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %949 = @func_1903(%947, %948) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %950 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %951 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %952 = reshape(%950, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %953 = reshape(%951, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %954 = @func_3384(%952, %953) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %955 = @func_4385() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %956 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %957 = sigmoid(%941) /* ty=Tensor[(4, 13, 7), float32] */;
  %958 = %942.3;
  %959 = %943.0;
  %960 = %944.1;
  %961 = %949.2;
  %962 = %954.2;
  %963 = %955.0;
  %964 = %956.1;
  (%957, %958, %959, %960, %961, %var_4407, meta[relay.Constant][41] /* ty=Tensor[(108), int16] */, %962, meta[relay.Constant][42] /* ty=Tensor[(616), float64] */, %963, %964)
}

def @func_15551() -> (Tensor[(7, 1, 10), float64],) {
  %965 = @func_14761() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %966 = %965.0;
  (%966,)
}

def @func_15955() -> (Tensor[(144), float64],) {
  %967 = @func_14231() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(3, 16, 3), bool], Tensor[(144), float64], Tensor[(7, ?, 10), uint16]) */;
  %968 = %967.2;
  (%968,)
}

def @func_16775() -> Tensor[(7, ?, 10), uint8] {
  %969 = @func_15098() /* ty=(Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) */;
  %969.0
}

def @func_14024() -> (Tensor[(7, ?, 10), float32],) {
  %970 = @func_12593() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %971 = %970.0;
  (%971,)
}

def @func_6650() -> Tensor[(7, ?, 10), uint16] {
  @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_10464(%var_10422: Tensor[(7, 12, 10), bool]) -> (Tensor[(7, 12, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) {
  %972 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %973 = %972.0;
  %974 = cast(%973, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
  %975 = cast(%var_10422, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %976 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %977 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %978 = not_equal(%974, %975) /* ty=Tensor[(7, 12, 10), bool] */;
  %979 = %976.0;
  %980 = %977.3;
  (%978, %979, %980)
}

def @func_14761() -> (Tensor[(7, 1, 10), float64],) {
  %981 = @func_9189() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %982 = %981.0;
  (%982,)
}

def @func_12050() -> (Tensor[(7, ?, 10), uint16],) {
  %983 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%983,)
}

def @func_15647(%var_15623: Tensor[(9), int16]) -> (Tensor[(7, 8, 6), float64], Tensor[(1, 364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16]) {
  %984 = @func_12031() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) */;
  %985 = %984.1;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %987 = cast(%var_15623, dtype="int16") /* ty=Tensor[(9), int16] */;
  %988 = reshape(%987, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %989 = @func_12539(%988) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) */;
  %990 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %991 = asinh(%986) /* ty=Tensor[(7, 8, 6), float64] */;
  %992 = %989.2;
  %993 = %990.0;
  (%991, %992, %var_15623, %993)
}

def @func_11633() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %994 = @func_5140() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %995 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
  %996 = %994.1;
  (%995, %996)
}

def @func_7032(%var_7006: Tensor[(7, 5, 10), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) {
  %997 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %998 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %999 = %998.0;
  %1000 = cast(%999, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
  %1001 = cast(%var_7006, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
  %1002 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1003 = %1002.0;
  %1004 = cast(%1003, dtype="uint8") /* ty=Tensor[(7, ?, 10), uint8] */;
  %1005 = cast(%var_7006, dtype="uint8") /* ty=Tensor[(7, 5, 10), uint8] */;
  %1006 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %1007 = %997.0;
  %1008 = greater_equal(%1000, %1001) /* ty=Tensor[(7, 5, 10), bool] */;
  %1009 = add(%1004, %1005) /* ty=Tensor[(7, 5, 10), uint8] */;
  %1010 = %1006.1;
  (%1007, %1008, %1009, %1010)
}

def @func_6171(%var_6165: Tensor[(5, 9, 4), uint16]) -> (Tensor[(5, 9, 4), uint16],) {
  %1011 = cast(%var_6165, dtype="uint16") /* ty=Tensor[(5, 9, 4), uint16] */;
  %1012 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(5, 9, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1013 = cast(meta[relay.Constant][43] /* ty=Tensor[(5, 9, 4), uint16] */, dtype="uint16") /* ty=Tensor[(5, 9, 4), uint16] */;
  %1014 = dyn.reshape(%1011, %1012, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1015 = minimum(%1013, %1014) /* ty=Tensor[(5, 9, 4), uint16] */;
  (%1015,)
}

def @func_8911(%var_8904: Tensor[(72, 2), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(72, 2), int32], Tensor[(7, ?, 10), uint16]) {
  %1016 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1017 = cast(meta[relay.Constant][44] /* ty=Tensor[(72, 2), float64] */, dtype="float64") /* ty=Tensor[(72, 2), float64] */;
  %1018 = reshape(%1017, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %1019 = @func_3964(%1018) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %1020 = cast(%var_8904, dtype="int32") /* ty=Tensor[(72, 2), int32] */;
  %1021 = shape_of(meta[relay.Constant][44] /* ty=Tensor[(72, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1022 = cast(meta[relay.Constant][44] /* ty=Tensor[(72, 2), float64] */, dtype="int32") /* ty=Tensor[(72, 2), int32] */;
  %1023 = dyn.reshape(%1020, %1021, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %1024 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1025 = %1016.0;
  %1026 = %1019.1;
  %1027 = add(%1022, %1023) /* ty=Tensor[(72, 2), int32] */;
  %1028 = %1024.0;
  (%1025, %1026, %1027, %1028)
}

def @func_16405() -> (Tensor[(7, 1, 10), bool],) {
  %1029 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1030 = %1029.1;
  (%1030,)
}

def @func_5077() -> Tensor[(7, ?, 10), uint16] {
  @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_10271() -> Tensor[(32), int64] {
  @func_6882() /* ty=Tensor[(32), int64] */
}

def @func_3801(%var_3774: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1031 = cast(%var_3774, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1032 = cast(%var_3774, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1033 = reshape(%1031, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1034 = reshape(%1032, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1035 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1036 = @func_1139(%1033, %1034) /* ty=Tensor[(2, 4, 4), int64] */;
  %1037 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1035, %1036, %var_3774, %1037)
}

def @func_2703() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1038 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1039 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1038, %1039)
}

def @func_6475() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  %1040 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1041 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %1042 = %1040.1;
  %1043 = %1041.1;
  (%1042, %1043)
}

def @func_5181() -> (Tensor[(7, 1, 10), float64],) {
  %1044 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1045 = %1044.0;
  %1046 = cast(%1045, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
  %1047 = sqrt(%1046) /* ty=Tensor[(7, 1, 10), float64] */;
  (%1047,)
}

def @func_12697() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %1048 = @func_12488() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1049 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1050 = %1048.0;
  %1051 = %1049.0;
  %1052 = @func_10487() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1050, %1051, %1052)
}

def @func_10505() -> Tensor[(7, 1, 10), float64] {
  @func_6630() /* ty=Tensor[(7, 1, 10), float64] */
}

def @func_10164() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1053 = @func_3193() /* ty=Tensor[(32), int64] */;
  %1054 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1053, %1054)
}

def @func_6236() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1055 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1056 = @func_5049() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1055, %1056)
}

def @func_14680() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1057 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1058 = %1057.1;
  %1059 = @func_10117() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1058, %1059)
}

def @func_3435() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %1060 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %1061 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1062 = %1060.0;
  %1063 = %1061.0;
  (%1062, %1063)
}

def @func_15495() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1064 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1065 = @func_13346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1066 = @func_6236() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1067 = @func_4748() /* ty=Tensor[(32), int64] */;
  %1068 = %1064.0;
  %1069 = %1065.7;
  %1070 = %1066.0;
  (%1067, %1068, %1069, %1070)
}

def @func_19835(%var_19821: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %1071 = @func_13346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1072 = @func_6145() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1073 = cast(%var_19821, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1074 = reshape(%1073, newshape=[72, 2]) /* ty=Tensor[(72, 2), float64] */;
  %1075 = @func_8911(%1074) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(72, 2), int32], Tensor[(7, ?, 10), uint16]) */;
  %1076 = %1071.0;
  %1077 = %1072.0;
  %1078 = %1075.1;
  (%1076, %1077, %1078, %var_19821)
}

def @func_5911() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64]) {
  %1079 = cast(meta[relay.Constant][45] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1080 = cast(meta[relay.Constant][45] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1081 = reshape(%1079, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %1082 = reshape(%1080, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %1083 = @func_3384(%1081, %1082) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1084 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %1085 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1086 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1087 = %1083.1;
  %1088 = %1084.0;
  %1089 = @func_5768() /* ty=Tensor[(32), int64] */;
  (%1085, %1086, %1087, meta[relay.Constant][45] /* ty=Tensor[(616), float64] */, %1088, %1089)
}

def @func_9068(%var_9061: Tensor[(7, 1, 10), uint16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64]) {
  %1090 = @func_6924() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1091 = cast(%var_9061, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
  %1092 = shape_of(%1090, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1093 = cast(%1090, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %1094 = dyn.reshape(%1091, %1092, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1095 = @func_7522() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1096 = floor_divide(%1093, %1094) /* ty=Tensor[(7, ?, 10), float64] */;
  (%1095, %1096)
}

def @func_11723(%var_11681: Tensor[(32), int64], %var_11688: Tensor[(350), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(32), float32], Tensor[(32), int64], Tensor[(350), bool], Tensor[(32), int64], bool, Tensor[(210), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1097 = @func_5071() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1098 = @func_7350() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %1099 = %1098.1;
  %1100 = cast(%var_11681, dtype="float32") /* ty=Tensor[(32), float32] */;
  %1101 = shape_of(%1099, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1102 = cast(%1099, dtype="float32") /* ty=Tensor[(32), float32] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1104 = cast(%1099, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1105 = cast(%var_11688, dtype="bool") /* ty=Tensor[(350), bool] */;
  %1106 = reshape(%1104, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1107 = reshape(%1105, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
  %1108 = @func_2439(%1106, %1107) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
  %1109 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %1110 = cast(meta[relay.Constant][46] /* ty=Tensor[(210), bool] */, dtype="bool") /* ty=Tensor[(210), bool] */;
  %1111 = reshape(%1109, newshape=[]) /* ty=bool */;
  %1112 = reshape(%1110, newshape=[3, 7, 10]) /* ty=Tensor[(3, 7, 10), bool] */;
  %1113 = @func_9542(%1111, %1112) /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), int8]) */;
  %1114 = @func_5140() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1115 = %1097.0;
  %1116 = divide(%1102, %1103) /* ty=Tensor[(32), float32] */;
  %1117 = %1108.1;
  %1118 = %1113.0;
  %1119 = %1114.1;
  %1120 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1121 = @func_10845() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1115, %1116, %1117, %var_11688, %1118, False /* ty=bool */, meta[relay.Constant][46] /* ty=Tensor[(210), bool] */, %1119, %1120, %1121)
}

def @func_12488() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1122 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1123 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1124 = @func_6882() /* ty=Tensor[(32), int64] */;
  %1125 = %1122.0;
  (%1123, %1124, %1125)
}

def @func_7232() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1126 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1127 = @func_6924() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1128 = %1126.0;
  (%1127, %1128)
}

def @func_4385() -> (Tensor[(7, ?, 10), uint16],) {
  %1129 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1129,)
}

def @func_5561(%var_5548: Tensor[(6, 15, 4), uint32]) -> (Tensor[(6, 15, 4), uint32], Tensor[(32), int64]) {
  %1130 = cast(meta[relay.Constant][47] /* ty=Tensor[(6, 15, 4), uint32] */, dtype="uint32") /* ty=Tensor[(6, 15, 4), uint32] */;
  %1131 = shape_of(%var_5548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1132 = cast(%var_5548, dtype="uint32") /* ty=Tensor[(6, 15, 4), uint32] */;
  %1133 = dyn.reshape(%1130, %1131, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1134 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %1135 = maximum(%1132, %1133) /* ty=Tensor[(6, 15, 4), uint32] */;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @func_6907() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %1137 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1138 = @func_6605() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1139 = %1137.0;
  %1140 = %1138.0;
  (%1139, %1140)
}

def @func_5489() -> Tensor[(7, ?, 10), uint16] {
  %1141 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1141.0
}

def @func_17611() -> (Tensor[(7, ?, 10), float32],) {
  %1142 = @func_12807() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_5140() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1144 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1145 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1146 = %1144.0;
  %1147 = %1145.0;
  (%1146, %1147)
}

def @func_11730() -> Tensor[(7, ?, 10), uint16] {
  %1148 = @func_10977() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1148.0
}

def @func_4133() -> (Tensor[(7, ?, 10), uint16],) {
  %1149 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1150 = %1149.0;
  (%1150,)
}

def @func_4307() -> (Tensor[(7, ?, 10), uint16],) {
  %1151 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1152 = %1151.0;
  (%1152,)
}

def @func_2544(%var_2519: Tensor[(3, 2, 14), float32]) -> (Tensor[(3, 2, 14), float64],) {
  %1153 = cast(%var_2519, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
  %1154 = sqrt(%1153) /* ty=Tensor[(3, 2, 14), float32] */;
  %1155 = cast(%1154, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
  %1156 = sinh(%1155) /* ty=Tensor[(3, 2, 14), float64] */;
  (%1156,)
}

def @func_2301() -> Tensor[(7, ?, 10), uint16] {
  %1157 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1157.0
}

def @func_13740(%var_13705: Tensor[(189), int16], %var_13706: Tensor[(9), int16]) -> (Tensor[(7, 1, 10), bool], Tensor[(9), int16], Tensor[(616), float64], Tensor[(189), int16], Tensor[(9), int16]) {
  %1158 = @func_11332() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1159 = cast(meta[relay.Constant][48] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1160 = cast(%var_13705, dtype="int16") /* ty=Tensor[(189), int16] */;
  %1161 = cast(%var_13706, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1162 = reshape(%1159, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %1163 = reshape(%1160, newshape=[3, 63]) /* ty=Tensor[(3, 63), int16] */;
  %1164 = reshape(%1161, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %1165 = @func_6108(%1162, %1163, %1164) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float32], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(108), int16], Tensor[(3, 63), int16], Tensor[(9), int16], Tensor[(7, 1, 10), bool]) */;
  %1166 = %1158.0;
  %1167 = %1165.7;
  (%1166, %1167, meta[relay.Constant][48] /* ty=Tensor[(616), float64] */, %var_13705, %var_13706)
}

def @func_16455() -> Tensor[(7, 2, 10), int8] {
  %1168 = @func_13603() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1169 = %1168.0;
  %1170 = cast(%1169, dtype="int8") /* ty=Tensor[(7, ?, 10), int8] */;
  %1171 = cast(meta[relay.Constant][49] /* ty=Tensor[(7, 2, 10), float32] */, dtype="int8") /* ty=Tensor[(7, 2, 10), int8] */;
  bitwise_xor(%1170, %1171) /* ty=Tensor[(7, 2, 10), int8] */
}

def @func_9378() -> Tensor[(7, ?, 10), uint16] {
  %1172 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1172.0
}

def @func_15364() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %1173 = @func_13571() /* ty=(Tensor[(32), int64],) */;
  %1174 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1175 = %1173.0;
  (%1174, %1175)
}

def @func_8127(%var_8075: Tensor[(350), bool]) -> (Tensor[(7, 4, 10), float32], Tensor[(7, 5, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 4, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %1176 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1177 = %1176.1;
  %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %1179 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 4, 10), float64] */, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
  %1180 = cast(%var_8075, dtype="bool") /* ty=Tensor[(350), bool] */;
  %1181 = reshape(%1180, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
  %1182 = @func_7032(%1181) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) */;
  %1183 = %1182.1;
  %1184 = cast(%var_8075, dtype="uint16") /* ty=Tensor[(350), uint16] */;
  %1185 = shape_of(%1183, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1186 = cast(%1183, dtype="uint16") /* ty=Tensor[(7, 5, 10), uint16] */;
  %1187 = dyn.reshape(%1184, %1185, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1188 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1189 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 4, 10), float64] */, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
  %1190 = minimum(%1178, %1179) /* ty=Tensor[(7, 4, 10), float32] */;
  %1191 = minimum(%1186, %1187) /* ty=Tensor[(7, 5, 10), uint16] */;
  %1192 = %1188.0;
  %1193 = sqrt(%1189) /* ty=Tensor[(7, 4, 10), float32] */;
  %1194 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1190, %1191, %1192, %1193, %1194)
}

def @func_16929() -> (Tensor[(7, ?, 10), uint16],) {
  %1195 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1195,)
}

def @func_7274() -> (Tensor[(7, ?, 10), uint16],) {
  %1196 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1196,)
}

def @func_1139(%var_1124: Tensor[(2, 4, 4), int64], %var_1125: Tensor[(2, 4, 4), int64]) -> Tensor[(2, 4, 4), int64] {
  %1197 = cast(%var_1125, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %1198 = shape_of(%var_1124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1199 = cast(%var_1124, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %1200 = dyn.reshape(%1197, %1198, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%1199, %1200) /* ty=Tensor[(2, 4, 4), int64] */
}

def @func_8205() -> (Tensor[(7, ?, 10), uint16],) {
  %1201 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1201,)
}

def @func_14696() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1202 = @func_5323() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1203 = @func_5071() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1204 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1205 = %1202.0;
  %1206 = %1203.0;
  (%1204, %1205, %1206)
}

def @func_16903() -> (Tensor[(7, ?, 10), uint32],) {
  %1207 = @func_16272() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) */;
  %1208 = %1207.4;
  (%1208,)
}

def @func_10255() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  %1209 = @func_6907() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %1210 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %1211 = %1209.0;
  %1212 = %1210.0;
  (%1211, %1212)
}

def @func_12871() -> (Tensor[(7, ?, 10), uint16],) {
  %1213 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1214 = %1213.1;
  (%1214,)
}

def @func_6346() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1215 = @func_4897() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1216 = @func_5123() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1217 = cast(meta[relay.Constant][51] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1218 = reshape(%1217, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %1219 = @func_3964(%1218) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %1220 = %1215.0;
  %1221 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1222 = %1216.0;
  %1223 = %1219.1;
  %1224 = @func_3193() /* ty=Tensor[(32), int64] */;
  %1225 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1220, %1221, %1222, %1223, meta[relay.Constant][51] /* ty=Tensor[(144), float64] */, %1224, %1225)
}

def @func_13978() -> (Tensor[(32), int64],) {
  %1226 = @func_10271() /* ty=Tensor[(32), int64] */;
  (%1226,)
}

def @func_17641() -> (Tensor[(7, ?, 10), uint16],) {
  %1227 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1228 = %1227.0;
  (%1228,)
}

def @func_10767() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  %1229 = @func_9285() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) */;
  %1230 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1231 = %1229.0;
  %1232 = %1230.3;
  (%1231, %1232)
}

def @func_9436(%var_9390: Tensor[(32, 1), int64]) -> (Tensor[(32), int64], Tensor[(7, 32, 10), float64]) {
  %1233 = cast(%var_9390, dtype="int64") /* ty=Tensor[(32, 1), int64] */;
  %1234 = reshape(%1233, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1235 = @func_8011(%1234) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1236 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
  %1237 = cast(%1236, dtype="uint8") /* ty=Tensor[(7, 1, 10), uint8] */;
  %1238 = cast(%var_9390, dtype="uint8") /* ty=Tensor[(32, 1), uint8] */;
  %1239 = logical_xor(%1237, %1238) /* ty=Tensor[(7, 32, 10), uint8] */;
  %1240 = cast(%1239, dtype="float64") /* ty=Tensor[(7, 32, 10), float64] */;
  %1241 = cosh(%1240) /* ty=Tensor[(7, 32, 10), float64] */;
  %1242 = cast(%1241, dtype="float32") /* ty=Tensor[(7, 32, 10), float32] */;
  %1243 = atan(%1242) /* ty=Tensor[(7, 32, 10), float32] */;
  %1244 = cast(%1239, dtype="bool") /* ty=Tensor[(7, 32, 10), bool] */;
  %1245 = shape_of(%1243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1246 = cast(%1243, dtype="bool") /* ty=Tensor[(7, 32, 10), bool] */;
  %1247 = dyn.reshape(%1244, %1245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1248 = less(%1246, %1247) /* ty=Tensor[(7, 32, 10), bool] */;
  %1249 = cast(%1248, dtype="float64") /* ty=Tensor[(7, 32, 10), float64] */;
  %1250 = %1235.2;
  %1251 = erf(%1249) /* ty=Tensor[(7, 32, 10), float64] */;
  (%1250, %1251)
}

def @func_12272() -> (Tensor[(7, 14, 10), uint16], Tensor[(3, 16, 3), bool], Tensor[(4, 36), float64]) {
  %1252 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1253 = %1252.0;
  %1254 = cast(%1253, dtype="uint16") /* ty=Tensor[(7, ?, 10), uint16] */;
  %1255 = cast(meta[relay.Constant][52] /* ty=Tensor[(7, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(7, 14, 10), uint16] */;
  %1256 = cast(meta[relay.Constant][53] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
  %1257 = reshape(%1256, newshape=[3, 16, 3]) /* ty=Tensor[(3, 16, 3), float64] */;
  %1258 = @func_4204(%1257) /* ty=(Tensor[(3, 16, 3), bool],) */;
  %1259 = maximum(%1254, %1255) /* ty=Tensor[(7, 14, 10), uint16] */;
  %1260 = %1258.0;
  (%1259, %1260, meta[relay.Constant][53] /* ty=Tensor[(4, 36), float64] */)
}

def @func_13571() -> (Tensor[(32), int64],) {
  %1261 = @func_4796() /* ty=Tensor[(32), int64] */;
  (%1261,)
}

def @func_10925() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %1262 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1263 = @func_3502() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1264 = %1262.3;
  (%1263, %1264)
}

def @func_6145() -> (Tensor[(7, 1, 10), bool],) {
  %1265 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
  %1266 = %1265.1;
  (%1266,)
}

def @func_5768() -> Tensor[(32), int64] {
  %1267 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %1267.0
}

def @func_15098() -> (Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) {
  %1268 = @func_14761() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %1269 = %1268.0;
  %1270 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1271 = cast(%1270, dtype="uint8") /* ty=Tensor[(7, ?, 10), uint8] */;
  %1272 = shape_of(%1269, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1273 = cast(%1269, dtype="uint8") /* ty=Tensor[(7, 1, 10), uint8] */;
  %1274 = dyn.reshape(%1271, %1272, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1275 = logical_xor(%1273, %1274) /* ty=Tensor[(7, ?, 10), uint8] */;
  %1276 = @func_11929() /* ty=Tensor[(7, 1, 10), float64] */;
  (%1275, %1276)
}

def @func_17751() -> (Tensor[(32), int64],) {
  %1277 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1278 = %1277.0;
  (%1278,)
}

def @func_9659(%var_9652: Tensor[(120), float64]) -> (Tensor[(32), int64], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
  %1279 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %1280 = cast(%var_9652, dtype="float64") /* ty=Tensor[(120), float64] */;
  %1281 = reshape(%1280, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %1282 = %1279.0;
  %1283 = @func_5234(%1281) /* ty=Tensor[(8, 3, 5), float64] */;
  (%1282, %1283, %var_9652)
}

def @func_17051() -> (Tensor[(32), int64], Tensor[(7, 1, 10), float64]) {
  %1284 = @func_9189() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %1285 = @func_4748() /* ty=Tensor[(32), int64] */;
  %1286 = %1284.0;
  (%1285, %1286)
}

def @func_5123() -> (Tensor[(7, ?, 10), float32],) {
  %1287 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1288 = %1287.0;
  (%1288,)
}

def @func_11293(%var_11202: Tensor[(9), int16], %var_11207: Tensor[(60, 2), float64]) -> (Tensor[(7, ?, 10), float32], Tensor[(9), int16], Tensor[(8, 3, 5), float64], Tensor[(32), int64], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(60, 2), bool]) {
  %1289 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %1290 = cast(%var_11207, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
  %1291 = reshape(%1290, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
  %1292 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %1293 = cast(%var_11202, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1294 = reshape(%1293, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %1295 = @func_5518(%1294) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1296 = %1295.0;
  %1297 = @func_3502() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1298 = cast(%1297, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %1299 = shape_of(%1296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1300 = cast(%1296, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
  %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1302 = @func_10309() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1303 = cast(%var_11207, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %1304 = sqrt(%1303) /* ty=Tensor[(60, 2), float32] */;
  %1305 = cast(%1304, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %1306 = shape_of(%var_11207, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1307 = cast(%var_11207, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
  %1308 = dyn.reshape(%1305, %1306, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1309 = %1289.0;
  %1310 = @func_5234(%1291) /* ty=Tensor[(8, 3, 5), float64] */;
  %1311 = %1292.0;
  %1312 = greater_equal(%1300, %1301) /* ty=Tensor[(7, ?, 10), bool] */;
  %1313 = %1302.0;
  %1314 = not_equal(%1307, %1308) /* ty=Tensor[(60, 2), bool] */;
  (%1309, %var_11202, %1310, %1311, %1312, %1313, %1314)
}

def @func_11506() -> Tensor[(7, ?, 10), float32] {
  %1315 = @func_8742() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1315.0
}

def @func_13984() -> (Tensor[(32), int64],) {
  %1316 = @func_11890() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(32), int64]) */;
  %1317 = %1316.1;
  (%1317,)
}

def @func_14563() -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1318 = @func_10925() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1319 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1320 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1321 = %1318.1;
  %1322 = %1319.0;
  %1323 = %1320.0;
  (%1321, %1322, %1323)
}

def @func_12341() -> (Tensor[(32), int64],) {
  %1324 = @func_12189() /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(32), int64]) */;
  %1325 = %1324.1;
  (%1325,)
}

def @func_3193() -> Tensor[(32), int64] {
  %1326 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %1326.1
}

def @func_6630() -> Tensor[(7, 1, 10), float64] {
  %1327 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %1327.0
}

def @func_14386(%var_14358: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %1328 = cast(%var_14358, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1329 = reshape(%1328, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %1330 = @func_3964(%1329) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %1331 = @func_5049() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1332 = %1330.1;
  (%1331, %1332, %var_14358)
}

def @func_5373() -> (Tensor[(7, ?, 10), uint16],) {
  %1333 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1334 = %1333.0;
  (%1334,)
}

def @func_3474() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_5234(%var_5228: Tensor[(8, 3, 5), float64]) -> Tensor[(8, 3, 5), float64] {
  %1335 = cast(%var_5228, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
  atanh(%1335) /* ty=Tensor[(8, 3, 5), float64] */
}

def @func_13877() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %1336 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1337 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
  %1338 = %1336.0;
  (%1337, %1338)
}

def @func_14175() -> (Tensor[(32), int64], Tensor[(7, ?, 10), float64]) {
  %1339 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1340 = %1339.2;
  %1341 = cast(%1340, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1342 = reshape(%1341, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1343 = @func_4571(%1342) /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), bool], Tensor[(350), bool]) */;
  %1344 = %1343.1;
  (%1340, %1344)
}

def @func_4097() -> (Tensor[(7, ?, 10), float32],) {
  %1345 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1346 = %1345.0;
  %1347 = cast(%1346, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %1348 = asinh(%1347) /* ty=Tensor[(7, ?, 10), float32] */;
  (%1348,)
}

def @func_4838(%var_4804: Tensor[(7, 9, 10), uint16]) -> (Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) {
  %1349 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1350 = cast(%1349, dtype="int32") /* ty=Tensor[(7, ?, 10), int32] */;
  %1351 = cast(%var_4804, dtype="int32") /* ty=Tensor[(7, 9, 10), int32] */;
  %1352 = cast(%var_4804, dtype="float64") /* ty=Tensor[(7, 9, 10), float64] */;
  %1353 = minimum(%1350, %1351) /* ty=Tensor[(7, 9, 10), int32] */;
  %1354 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1355 = asinh(%1352) /* ty=Tensor[(7, 9, 10), float64] */;
  (%1353, %1354, %1355)
}

def @func_5518(%var_5504: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1356 = cast(meta[relay.Constant][54] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %1357 = cast(%var_5504, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1358 = reshape(%1356, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %1359 = reshape(%1357, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %1360 = @func_4440(%1358, %1359) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1361 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1362 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1363 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1364 = %1360.2;
  %1365 = %1361.0;
  %1366 = %1362.0;
  (%1363, %1364, meta[relay.Constant][54] /* ty=Tensor[(364), float64] */, %var_5504, %1365, %1366)
}

def @func_16986() -> Tensor[(7, ?, 10), float64] {
  %1367 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1367.1
}

def @func_13816() -> (Tensor[(7, 1, 10), float64],) {
  %1368 = @func_10617() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1369 = %1368.0;
  (%1369,)
}

def @func_17965() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint32]) {
  %1370 = @func_16903() /* ty=(Tensor[(7, ?, 10), uint32],) */;
  %1371 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1372 = %1370.0;
  (%1371, %1372)
}

def @func_10328() -> Tensor[(7, ?, 10), uint16] {
  @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_6207() -> (Tensor[(7, ?, 10), uint16],) {
  %1373 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %1374 = %1373.1;
  (%1374,)
}

def @func_19743() -> Tensor[(7, ?, 10), float64] {
  %1375 = @func_14175() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64]) */;
  %1375.1
}

def @func_11332() -> (Tensor[(7, 1, 10), bool],) {
  %1376 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
  (%1376,)
}

def @func_18506(%var_18502: Tensor[(14, 5, 14), float64]) -> (Tensor[(14, 5, 14), float64],) {
  %1377 = cast(%var_18502, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
  %1378 = acos(%1377) /* ty=Tensor[(14, 5, 14), float64] */;
  (%1378,)
}

def @func_19189() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
  %1379 = @func_17517() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1380 = @func_4226() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1381 = %1379.0;
  %1382 = %1380.0;
  (%1381, %1382)
}

def @func_17558() -> (Tensor[(7, 1, 10), float64], Tensor[(32), int64]) {
  %1383 = @func_13764() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1384 = @func_13984() /* ty=(Tensor[(32), int64],) */;
  %1385 = %1383.0;
  %1386 = %1384.0;
  (%1385, %1386)
}

def @func_18157(%var_18112: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1387 = @func_16335() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1388 = cast(%var_18112, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1389 = reshape(%1388, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %1390 = @func_15647(%1389) /* ty=(Tensor[(7, 8, 6), float64], Tensor[(1, 364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16]) */;
  %1391 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1392 = %1387.1;
  %1393 = %1390.3;
  %1394 = %1391.2;
  %1395 = @func_11009() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1392, %1393, %var_18112, %1394, %1395)
}

def @func_3910() -> Tensor[(7, ?, 10), uint16] {
  @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_2922() -> Tensor[(7, ?, 10), uint16] {
  @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_10215() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(560), float32]) {
  %1396 = @func_5071() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1397 = cast(meta[relay.Constant][55] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
  %1398 = reshape(%1397, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), float32] */;
  %1399 = @func_9298(%1398) /* ty=(Tensor[(10, 14, 4), float32], Tensor[(7, ?, 10), uint16], Tensor[(9), int16]) */;
  %1400 = @func_9378() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1401 = %1396.0;
  %1402 = %1399.1;
  (%1400, %1401, %1402, meta[relay.Constant][55] /* ty=Tensor[(560), float32] */)
}

def @func_2681(%var_2654: Tensor[(32, 1), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %1403 = cast(%var_2654, dtype="int64") /* ty=Tensor[(32, 1), int64] */;
  %1404 = cast(meta[relay.Constant][56] /* ty=Tensor[(350), bool] */, dtype="bool") /* ty=Tensor[(350), bool] */;
  %1405 = reshape(%1403, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1406 = reshape(%1404, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
  %1407 = @func_2439(%1405, %1406) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
  %1408 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1409 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1410 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1411 = %1407.1;
  %1412 = %1408.1;
  %1413 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1409, %1410, %1411, %var_2654, meta[relay.Constant][56] /* ty=Tensor[(350), bool] */, %1412, %1413)
}

def @func_14349() -> Tensor[(7, ?, 10), uint16] {
  %1414 = @func_9799() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1414.1
}

def @func_10703(%var_10691: Tensor[(616), float64]) -> (Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
  %1415 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1416 = cast(%var_10691, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1417 = cast(%var_10691, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1418 = reshape(%1416, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %1419 = reshape(%1417, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %1420 = @func_3384(%1418, %1419) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1421 = %1415.0;
  %1422 = %1420.0;
  (%1421, %1422, %var_10691)
}

def @func_16858() -> Tensor[(7, ?, 10), float32] {
  %1423 = @func_12807() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %1423.0
}

def @func_16015() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1424 = @func_4897() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1425 = @func_12697() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %1426 = @func_12050() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1427 = %1424.0;
  %1428 = %1425.2;
  %1429 = %1426.0;
  (%1427, %1428, %1429)
}

def @func_11107() -> Tensor[(7, ?, 10), uint16] {
  @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_2267() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
  %1430 = cast(meta[relay.Constant][58] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1431 = cast(meta[relay.Constant][57] /* ty=Tensor[(7, 1, 10), uint64] */, dtype="uint64") /* ty=Tensor[(7, 1, 10), uint64] */;
  %1432 = right_shift(%1430, %1431) /* ty=Tensor[(7, 1, 10), uint64] */;
  %1433 = cast(%1432, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
  %1434 = shape_of(meta[relay.Constant][57] /* ty=Tensor[(7, 1, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1435 = cast(meta[relay.Constant][57] /* ty=Tensor[(7, 1, 10), uint64] */, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
  %1436 = dyn.reshape(%1433, %1434, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1437 = cast(meta[relay.Constant][58] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %1438 = cast(%1432, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
  %1439 = subtract(%1435, %1436) /* ty=Tensor[(7, ?, 10), uint16] */;
  %1440 = equal(%1437, %1438) /* ty=Tensor[(7, 1, 10), bool] */;
  (%1439, %1440)
}

def @func_13196() -> (Tensor[(7, 1, 10), float64],) {
  %1441 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1442 = %1441.0;
  (%1442,)
}

def @func_14231() -> (Tensor[(7, 1, 10), bool], Tensor[(3, 16, 3), bool], Tensor[(144), float64], Tensor[(7, ?, 10), uint16]) {
  %1443 = @func_4226() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1444 = cast(meta[relay.Constant][59] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1445 = reshape(%1444, newshape=[3, 16, 3]) /* ty=Tensor[(3, 16, 3), float64] */;
  %1446 = @func_4204(%1445) /* ty=(Tensor[(3, 16, 3), bool],) */;
  %1447 = %1443.0;
  %1448 = %1446.0;
  %1449 = @func_11107() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1447, %1448, meta[relay.Constant][59] /* ty=Tensor[(144), float64] */, %1449)
}

def @func_16875() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1450 = @func_13877() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1451 = @func_6907() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %1452 = %1450.1;
  %1453 = %1451.1;
  (%1452, %1453)
}

def @func_17654() -> (Tensor[(7, ?, 10), float32], Tensor[(7, 9, 10), int32], Tensor[(630, 1), uint16]) {
  %1454 = @func_12593() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1455 = cast(meta[relay.Constant][60] /* ty=Tensor[(630, 1), uint16] */, dtype="uint16") /* ty=Tensor[(630, 1), uint16] */;
  %1456 = reshape(%1455, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint16] */;
  %1457 = @func_4838(%1456) /* ty=(Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) */;
  %1458 = %1454.0;
  %1459 = %1457.0;
  (%1458, %1459, meta[relay.Constant][60] /* ty=Tensor[(630, 1), uint16] */)
}

def @func_4796() -> Tensor[(32), int64] {
  %1460 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
  %1460.0
}

def @func_10576() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1461 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1462 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1463 = %1461.1;
  %1464 = %1462.0;
  (%1463, %1464)
}

def @func_8686(%var_8668: Tensor[(15, 5, 1), float32]) -> (Tensor[(630), uint16], Tensor[(32), int64], Tensor[(15, 5, 1), float64]) {
  %1465 = @func_7110() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(630), uint16]) */;
  %1466 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1467 = cast(%var_8668, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
  %1468 = acos(%1467) /* ty=Tensor[(15, 5, 1), float32] */;
  %1469 = cast(%1468, dtype="float64") /* ty=Tensor[(15, 5, 1), float64] */;
  %1470 = %1465.4;
  %1471 = %1466.0;
  %1472 = log10(%1469) /* ty=Tensor[(15, 5, 1), float64] */;
  (%1470, %1471, %1472)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_2849(%var_2844: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) {
  %0 = cast(meta[relay.Constant][0] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %2 = reshape(%0, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %3 = reshape(%1, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %4 = cast(%var_2844, dtype="int16") /* ty=Tensor[(9), int16] */;
  %5 = cast(meta[relay.Constant][1] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %6 = reshape(%4, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %7 = reshape(%5, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %8 = @func_1903(%6, %7) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %9 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %10 = @func_1139(%2, %3) /* ty=Tensor[(2, 4, 4), int64] */;
  %11 = %8.2;
  (%9, %10, meta[relay.Constant][0] /* ty=Tensor[(32), int64] */, %11, %var_2844, meta[relay.Constant][1] /* ty=Tensor[(108), int16] */)
}

def @func_2865() -> (Tensor[(7, ?, 10), uint16],) {
  %14 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %12 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %13 = %12.1;
    (%13,)
  };
  %14() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_17721(%var_17719: Tensor[(1, 9), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), bool], Tensor[(364), float64], Tensor[(1, 9), int16]) {
  @func_17718(%var_17719) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), bool], Tensor[(364), float64], Tensor[(1, 9), int16]) */
}

def @func_16775() -> Tensor[(7, ?, 10), uint8] {
  %15 = @func_15098() /* ty=(Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) */;
  %15.0
}

def @func_6208() -> (Tensor[(7, ?, 10), uint16],) {
  %18 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %16 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %17 = %16.1;
    (%17,)
  };
  %18() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_14350() -> Tensor[(7, ?, 10), uint16] {
  %20 = fn () -> Tensor[(7, ?, 10), uint16] {
    %19 = @func_9799() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %19.1
  };
  %20() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_12898() -> (Tensor[(7, ?, 10), uint32],) {
  %30 = fn () -> (Tensor[(7, ?, 10), uint32],) {
    %21 = @func_8856() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(350), bool], Tensor[(7, ?, 10), float32]) */;
    %22 = %21.3;
    %23 = @func_12585() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %24 = %23.0;
    %25 = cast(%24, dtype="uint32") /* ty=Tensor[(7, ?, 10), uint32] */;
    %26 = shape_of(%22, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%22, dtype="uint32") /* ty=Tensor[(7, ?, 10), uint32] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %29 = maximum(%27, %28) /* ty=Tensor[(7, ?, 10), uint32] */;
    (%29,)
  };
  %30() /* ty=(Tensor[(7, ?, 10), uint32],) */
}

def @func_18664() -> (Tensor[(7, ?, 10), uint16],) {
  @func_18662() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_19158() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16]) {
  @func_19156() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16]) */
}

def @func_10767() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  %31 = @func_9285() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) */;
  %32 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %33 = %31.0;
  %34 = %32.3;
  (%33, %34)
}

def @func_10464(%var_10422: Tensor[(7, 12, 10), bool]) -> (Tensor[(7, 12, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) {
  %35 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %36 = %35.0;
  %37 = cast(%36, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
  %38 = cast(%var_10422, dtype="bool") /* ty=Tensor[(7, 12, 10), bool] */;
  %39 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %40 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %41 = not_equal(%37, %38) /* ty=Tensor[(7, 12, 10), bool] */;
  %42 = %39.0;
  %43 = %40.3;
  (%41, %42, %43)
}

def @func_3912() -> Tensor[(7, ?, 10), uint16] {
  @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_13119() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, 1, 10), bool], Tensor[(7, 5, 10), bool], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(3, 16, 3), bool], Tensor[(7, 1, 10), bool], Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %73 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, 1, 10), bool], Tensor[(7, 5, 10), bool], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(3, 16, 3), bool], Tensor[(7, 1, 10), bool], Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %44 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %45 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
    %46 = @func_8645() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, 5, 10), bool], Tensor[(350), bool]) */;
    %47 = cast(meta[relay.Constant][2] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
    %48 = cast(meta[relay.Constant][2] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
    %49 = reshape(%47, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
    %50 = reshape(%48, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
    %51 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %52 = @func_7350() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
    %53 = @func_12272() /* ty=(Tensor[(7, 14, 10), uint16], Tensor[(3, 16, 3), bool], Tensor[(4, 36), float64]) */;
    %54 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %55 = @func_5164() /* ty=(Tensor[(32), int64],) */;
    %56 = @func_10255() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
    %57 = %46.1;
    %58 = cast(%57, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
    %59 = reshape(%58, newshape=[350]) /* ty=Tensor[(350), bool] */;
    %60 = @func_8127(%59) /* ty=(Tensor[(7, 4, 10), float32], Tensor[(7, 5, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 4, 10), float32], Tensor[(7, ?, 10), uint16]) */;
    %61 = %44.0;
    %62 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
    %63 = %45.0;
    %64 = @func_1139(%49, %50) /* ty=Tensor[(2, 4, 4), int64] */;
    %65 = %51.1;
    %66 = %52.2;
    %67 = %53.1;
    %68 = %54.1;
    %69 = %55.0;
    %70 = %56.1;
    %71 = %60.4;
    %72 = @func_11419() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%61, %62, %63, %57, %64, meta[relay.Constant][2] /* ty=Tensor[(32), int64] */, %65, %66, %67, %68, %69, %70, %71, %72)
  };
  %73() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, 1, 10), bool], Tensor[(7, 5, 10), bool], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(3, 16, 3), bool], Tensor[(7, 1, 10), bool], Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_4625(%var_4624: Tensor[(616), float64]) -> (Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) {
  %82 = fn (%var_4599: Tensor[(616), float64]) -> (Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) {
    %74 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
    %75 = cast(%var_4599, dtype="float64") /* ty=Tensor[(616), float64] */;
    %76 = cast(%var_4599, dtype="float64") /* ty=Tensor[(616), float64] */;
    %77 = reshape(%75, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %78 = reshape(%76, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %79 = @func_3384(%77, %78) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %80 = %74.2;
    %81 = %79.1;
    (%80, %81, %var_4599)
  };
  %82(%var_4624) /* ty=(Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) */
}

def @func_17613() -> (Tensor[(7, ?, 10), float32],) {
  @func_17611() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_19349() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %83 = @func_13788() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %84 = @func_16272() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) */;
  %85 = %83.0;
  %86 = %84.0;
  (%85, %86)
}

def @func_4444(%var_4442: Tensor[(4, 13, 7), float64], %var_4443: Tensor[(1, 9), int16]) -> (Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
  @func_4440(%var_4442, %var_4443) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */
}

def @func_14750(%var_14727: Tensor[(16, 2), int64], %var_14736: Tensor[(9), int16]) -> (Tensor[(7, 10, 10), float64], Tensor[(32), int64], Tensor[(16, 2), int64], Tensor[(60, 2), bool], Tensor[(9), int16], Tensor[(120), float64]) {
  %87 = @func_13397() /* ty=(Tensor[(7, 10, 10), float64], Tensor[(1, 7, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %88 = cast(%var_14727, dtype="int64") /* ty=Tensor[(16, 2), int64] */;
  %89 = reshape(%88, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %90 = @func_10643(%89) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %91 = cast(%var_14736, dtype="int16") /* ty=Tensor[(9), int16] */;
  %92 = cast(meta[relay.Constant][3] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
  %93 = reshape(%91, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %94 = reshape(%92, newshape=[60, 2]) /* ty=Tensor[(60, 2), float64] */;
  %95 = @func_11293(%93, %94) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(9), int16], Tensor[(8, 3, 5), float64], Tensor[(32), int64], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(60, 2), bool]) */;
  %96 = %87.0;
  %97 = %90.2;
  %98 = %95.6;
  (%96, %97, %var_14727, %98, %var_14736, meta[relay.Constant][3] /* ty=Tensor[(120), float64] */)
}

def @func_5078() -> Tensor[(7, ?, 10), uint16] {
  %99 = fn () -> Tensor[(7, ?, 10), uint16] {
    @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */
  };
  %99() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_4038() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %100 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %101 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %102 = %100.0;
  %103 = %101.0;
  (%102, %103)
}

def @func_6171(%var_6165: Tensor[(5, 9, 4), uint16]) -> (Tensor[(5, 9, 4), uint16],) {
  %104 = cast(%var_6165, dtype="uint16") /* ty=Tensor[(5, 9, 4), uint16] */;
  %105 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(5, 9, 4), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %106 = cast(meta[relay.Constant][4] /* ty=Tensor[(5, 9, 4), uint16] */, dtype="uint16") /* ty=Tensor[(5, 9, 4), uint16] */;
  %107 = dyn.reshape(%104, %105, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %108 = minimum(%106, %107) /* ty=Tensor[(5, 9, 4), uint16] */;
  (%108,)
}

def @func_6925() -> Tensor[(7, ?, 10), uint16] {
  %110 = fn () -> Tensor[(7, ?, 10), uint16] {
    %109 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %109.1
  };
  %110() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_9301(%var_9299: Tensor[(10, 14, 4), float32]) -> (Tensor[(10, 14, 4), float32], Tensor[(7, ?, 10), uint16], Tensor[(9), int16]) {
  @func_9298(%var_9299) /* ty=(Tensor[(10, 14, 4), float32], Tensor[(7, ?, 10), uint16], Tensor[(9), int16]) */
}

def @func_4226() -> (Tensor[(7, 1, 10), bool],) {
  %111 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %112 = %111.1;
  (%112,)
}

def @func_10118() -> Tensor[(7, ?, 10), uint16] {
  %113 = fn () -> Tensor[(7, ?, 10), uint16] {
    @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */
  };
  %113() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_14867() -> Tensor[(7, ?, 10), float64] {
  %114 = @func_12741() /* ty=Tensor[(7, ?, 10), uint16] */;
  %115 = cast(%114, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  acosh(%115) /* ty=Tensor[(7, ?, 10), float64] */
}

def @func_9661(%var_9660: Tensor[(120), float64]) -> (Tensor[(32), int64], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
  %121 = fn (%var_9652: Tensor[(120), float64]) -> (Tensor[(32), int64], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) {
    %116 = @func_5164() /* ty=(Tensor[(32), int64],) */;
    %117 = cast(%var_9652, dtype="float64") /* ty=Tensor[(120), float64] */;
    %118 = reshape(%117, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
    %119 = %116.0;
    %120 = @func_5234(%118) /* ty=Tensor[(8, 3, 5), float64] */;
    (%119, %120, %var_9652)
  };
  %121(%var_9660) /* ty=(Tensor[(32), int64], Tensor[(8, 3, 5), float64], Tensor[(120), float64]) */
}

def @func_4097() -> (Tensor[(7, ?, 10), float32],) {
  %122 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %123 = %122.0;
  %124 = cast(%123, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %125 = asinh(%124) /* ty=Tensor[(7, ?, 10), float32] */;
  (%125,)
}

def @func_2599(%var_2584: Tensor[(3, 7, 9), int16], %var_2595: Tensor[(9), int16]) -> (Tensor[(3, 7, 9), int16], Tensor[(12, 9, ?), uint8], Tensor[(9), int16], Tensor[(108), int16]) {
  %126 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 7, 9), int16] */, dtype="int16") /* ty=Tensor[(1, 7, 9), int16] */;
  %127 = cast(%var_2584, dtype="int16") /* ty=Tensor[(3, 7, 9), int16] */;
  %128 = cast(%var_2595, dtype="int16") /* ty=Tensor[(9), int16] */;
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %130 = reshape(%128, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %131 = reshape(%129, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %132 = @func_1903(%130, %131) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %133 = bitwise_and(%126, %127) /* ty=Tensor[(3, 7, 9), int16] */;
  %134 = %132.0;
  (%133, %134, %var_2595, meta[relay.Constant][6] /* ty=Tensor[(108), int16] */)
}

def @func_4798() -> Tensor[(32), int64] {
  @func_4796() /* ty=Tensor[(32), int64] */
}

def @func_10619() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  @func_10617() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_8184() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %135 = @func_7274() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %136 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
  %137 = %135.0;
  (%136, %137)
}

def @func_6174(%var_6172: Tensor[(5, 9, 4), uint16]) -> (Tensor[(5, 9, 4), uint16],) {
  @func_6171(%var_6172) /* ty=(Tensor[(5, 9, 4), uint16],) */
}

def @func_2922() -> Tensor[(7, ?, 10), uint16] {
  @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @main(%var_19857: Tensor[(7, 6, 13), float32], %var_19858: Tensor[(7, 6, 13), float32]) -> (Tensor[(7, 6, 13), float32],) {
  %138 = cast(%var_19858, dtype="float32") /* ty=Tensor[(7, 6, 13), float32] */;
  %139 = shape_of(%var_19857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %140 = cast(%var_19857, dtype="float32") /* ty=Tensor[(7, 6, 13), float32] */;
  %141 = dyn.reshape(%138, %139, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %142 = divide(%140, %141) /* ty=Tensor[(7, 6, 13), float32] */;
  (%142,)
}

def @func_7201() -> (Tensor[(7, ?, 10), uint16],) {
  %145 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %143 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %144 = %143.0;
    (%144,)
  };
  %145() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_9083() -> Tensor[(7, ?, 10), uint16] {
  %146 = fn () -> Tensor[(7, ?, 10), uint16] {
    @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */
  };
  %146() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_7275() -> (Tensor[(7, ?, 10), uint16],) {
  %148 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %147 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%147,)
  };
  %148() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_17643() -> (Tensor[(7, ?, 10), uint16],) {
  @func_17641() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_6477() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  @func_6475() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */
}

def @func_9439(%var_9437: Tensor[(32, 1), int64]) -> (Tensor[(32), int64], Tensor[(7, 32, 10), float64]) {
  @func_9436(%var_9437) /* ty=(Tensor[(32), int64], Tensor[(7, 32, 10), float64]) */
}

def @func_12383() -> Tensor[(32), int64] {
  %150 = fn () -> Tensor[(32), int64] {
    %149 = @func_12341() /* ty=(Tensor[(32), int64],) */;
    %149.0
  };
  %150() /* ty=Tensor[(32), int64] */
}

def @func_17611() -> (Tensor[(7, ?, 10), float32],) {
  %151 = @func_12807() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %152 = %151.0;
  (%152,)
}

def @func_15270() -> (Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) {
  %157 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) {
    %153 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %154 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
    %155 = %153.0;
    %156 = %154.3;
    (%155, %156)
  };
  %157() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) */
}

def @func_4498(%var_4496: Tensor[(4, 3, 7), float32], %var_4497: Tensor[(8, 4), int64]) -> (Tensor[(4, 3, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(8, 4), int64], Tensor[(7, ?, 10), uint16]) {
  %168 = fn (%var_4476: Tensor[(4, 3, 7), float32], %var_4485: Tensor[(8, 4), int64]) -> (Tensor[(4, 3, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(8, 4), int64], Tensor[(7, ?, 10), uint16]) {
    %158 = cast(%var_4476, dtype="float32") /* ty=Tensor[(4, 3, 7), float32] */;
    %159 = cast(%var_4485, dtype="int64") /* ty=Tensor[(8, 4), int64] */;
    %160 = reshape(%159, newshape=[32]) /* ty=Tensor[(32), int64] */;
    %161 = @func_3801(%160) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %162 = cast(%var_4485, dtype="int64") /* ty=Tensor[(8, 4), int64] */;
    %163 = reshape(%162, newshape=[32, 1]) /* ty=Tensor[(32, 1), int64] */;
    %164 = @func_2681(%163) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %165 = exp(%158) /* ty=Tensor[(4, 3, 7), float32] */;
    %166 = %161.3;
    %167 = %164.6;
    (%165, %166, %var_4485, %167)
  };
  %168(%var_4496, %var_4497) /* ty=(Tensor[(4, 3, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(8, 4), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_16127() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(3, 2, 14), float64], Tensor[(84), float32], Tensor[(32), int64]) {
  %169 = @func_13118() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, 1, 10), bool], Tensor[(7, 5, 10), bool], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(3, 16, 3), bool], Tensor[(7, 1, 10), bool], Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %170 = cast(meta[relay.Constant][7] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %171 = reshape(%170, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %172 = @func_8011(%171) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %173 = cast(meta[relay.Constant][8] /* ty=Tensor[(84), float32] */, dtype="float32") /* ty=Tensor[(84), float32] */;
  %174 = reshape(%173, newshape=[3, 2, 14]) /* ty=Tensor[(3, 2, 14), float32] */;
  %175 = @func_2544(%174) /* ty=(Tensor[(3, 2, 14), float64],) */;
  %176 = @func_13978() /* ty=(Tensor[(32), int64],) */;
  %177 = %169.0;
  %178 = %172.2;
  %179 = %175.0;
  %180 = %176.0;
  (%177, %178, meta[relay.Constant][7] /* ty=Tensor[(32), int64] */, %179, meta[relay.Constant][8] /* ty=Tensor[(84), float32] */, %180)
}

def @func_10489() -> Tensor[(7, ?, 10), uint16] {
  @func_10487() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_5234(%var_5228: Tensor[(8, 3, 5), float64]) -> Tensor[(8, 3, 5), float64] {
  %181 = cast(%var_5228, dtype="float64") /* ty=Tensor[(8, 3, 5), float64] */;
  atanh(%181) /* ty=Tensor[(8, 3, 5), float64] */
}

def @func_5374() -> (Tensor[(7, ?, 10), uint16],) {
  %184 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %182 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %183 = %182.0;
    (%183,)
  };
  %184() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_7351() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) {
  %190 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) {
    %185 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %186 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %187 = %185.1;
    %188 = %186.1;
    %189 = @func_6882() /* ty=Tensor[(32), int64] */;
    (%187, %188, %189)
  };
  %190() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */
}

def @func_19091() -> Tensor[(7, 1, 10), float64] {
  %191 = @func_13877() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %191.0
}

def @func_14443() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) {
  %192 = @func_8742() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %193 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %194 = @func_6731() /* ty=(Tensor[(32), int64],) */;
  %195 = %192.0;
  %196 = @func_7522() /* ty=Tensor[(7, ?, 10), uint16] */;
  %197 = %193.1;
  %198 = %194.0;
  (%195, %196, %197, %198)
}

def @func_10506() -> Tensor[(7, 1, 10), float64] {
  %199 = fn () -> Tensor[(7, 1, 10), float64] {
    @func_6630() /* ty=Tensor[(7, 1, 10), float64] */
  };
  %199() /* ty=Tensor[(7, 1, 10), float64] */
}

def @func_16812(%var_16810: float32, %var_16811: Tensor[(7, 14, 8), float32]) -> Tensor[(7, 14, 8), bool] {
  @func_16808(%var_16810, %var_16811) /* ty=Tensor[(7, 14, 8), bool] */
}

def @func_5072() -> (Tensor[(7, ?, 10), uint16],) {
  %202 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %200 = @func_4385() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %201 = %200.0;
    (%201,)
  };
  %202() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_4898() -> (Tensor[(7, ?, 10), uint16],) {
  %205 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %203 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %204 = %203.0;
    (%204,)
  };
  %205() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_13572() -> (Tensor[(32), int64],) {
  %207 = fn () -> (Tensor[(32), int64],) {
    %206 = @func_4796() /* ty=Tensor[(32), int64] */;
    (%206,)
  };
  %207() /* ty=(Tensor[(32), int64],) */
}

def @func_15099() -> (Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) {
  %217 = fn () -> (Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) {
    %208 = @func_14761() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %209 = %208.0;
    %210 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
    %211 = cast(%210, dtype="uint8") /* ty=Tensor[(7, ?, 10), uint8] */;
    %212 = shape_of(%209, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%209, dtype="uint8") /* ty=Tensor[(7, 1, 10), uint8] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %215 = logical_xor(%213, %214) /* ty=Tensor[(7, ?, 10), uint8] */;
    %216 = @func_11929() /* ty=Tensor[(7, 1, 10), float64] */;
    (%215, %216)
  };
  %217() /* ty=(Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) */
}

def @func_6276() -> Tensor[(7, ?, 10), float32] {
  @func_6274() /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_18160(%var_18158: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  @func_18157(%var_18158) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_19306() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %221 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %218 = @func_12488() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %219 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
    %220 = %218.0;
    (%219, %220)
  };
  %221() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_3476() -> Tensor[(7, ?, 10), uint16] {
  @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_11730() -> Tensor[(7, ?, 10), uint16] {
  %222 = @func_10977() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %222.0
}

def @func_19838(%var_19836: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  @func_19835(%var_19836) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) */
}

def @func_19265() -> Tensor[(7, ?, 10), uint16] {
  @func_19263() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_10847() -> Tensor[(7, ?, 10), uint16] {
  @func_10845() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_19047() -> (Tensor[(7, ?, 10), uint16],) {
  @func_19045() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_4207(%var_4205: Tensor[(3, 16, 3), float64]) -> (Tensor[(3, 16, 3), bool],) {
  @func_4204(%var_4205) /* ty=(Tensor[(3, 16, 3), bool],) */
}

def @func_13817() -> (Tensor[(7, 1, 10), float64],) {
  %225 = fn () -> (Tensor[(7, 1, 10), float64],) {
    %223 = @func_10617() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %224 = %223.0;
    (%224,)
  };
  %225() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_3090() -> Tensor[(7, ?, 10), uint16] {
  @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_17260() -> (Tensor[(7, ?, 10), uint16],) {
  %226 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%226,)
}

def @func_5912() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64]) {
  %238 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64]) {
    %227 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %228 = cast(meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %229 = reshape(%227, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %230 = reshape(%228, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %231 = @func_3384(%229, %230) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %232 = @func_5164() /* ty=(Tensor[(32), int64],) */;
    %233 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
    %234 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
    %235 = %231.1;
    %236 = %232.0;
    %237 = @func_5768() /* ty=Tensor[(32), int64] */;
    (%233, %234, %235, meta[relay.Constant][9] /* ty=Tensor[(616), float64] */, %236, %237)
  };
  %238() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64]) */
}

def @func_16129() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(3, 2, 14), float64], Tensor[(84), float32], Tensor[(32), int64]) {
  @func_16127() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(3, 2, 14), float64], Tensor[(84), float32], Tensor[(32), int64]) */
}

def @func_8220() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  @func_8218() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */
}

def @func_15956() -> (Tensor[(144), float64],) {
  %241 = fn () -> (Tensor[(144), float64],) {
    %239 = @func_14231() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(3, 16, 3), bool], Tensor[(144), float64], Tensor[(7, ?, 10), uint16]) */;
    %240 = %239.2;
    (%240,)
  };
  %241() /* ty=(Tensor[(144), float64],) */
}

def @func_3979() -> Tensor[(7, ?, 10), uint16] {
  %243 = fn () -> Tensor[(7, ?, 10), uint16] {
    %242 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %242.0
  };
  %243() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_8207() -> (Tensor[(7, ?, 10), uint16],) {
  @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_3088() -> Tensor[(7, ?, 10), uint16] {
  @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_17180() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32]) {
  @func_17178() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32]) */
}

def @func_15495() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %244 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %245 = @func_13346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %246 = @func_6236() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %247 = @func_4748() /* ty=Tensor[(32), int64] */;
  %248 = %244.0;
  %249 = %245.7;
  %250 = %246.0;
  (%247, %248, %249, %250)
}

def @func_14564() -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %257 = fn () -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
    %251 = @func_10925() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %252 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %253 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %254 = %251.1;
    %255 = %252.0;
    %256 = %253.0;
    (%254, %255, %256)
  };
  %257() /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_16175() -> (Tensor[(7, ?, 10), float64],) {
  %260 = fn () -> (Tensor[(7, ?, 10), float64],) {
    %258 = @func_14175() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64]) */;
    %259 = %258.1;
    (%259,)
  };
  %260() /* ty=(Tensor[(7, ?, 10), float64],) */
}

def @func_10165() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %263 = fn () -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
    %261 = @func_3193() /* ty=Tensor[(32), int64] */;
    %262 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%261, %262)
  };
  %263() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_11296(%var_11294: Tensor[(9), int16], %var_11295: Tensor[(60, 2), float64]) -> (Tensor[(7, ?, 10), float32], Tensor[(9), int16], Tensor[(8, 3, 5), float64], Tensor[(32), int64], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(60, 2), bool]) {
  %290 = fn (%var_11202: Tensor[(9), int16], %var_11207: Tensor[(60, 2), float64]) -> (Tensor[(7, ?, 10), float32], Tensor[(9), int16], Tensor[(8, 3, 5), float64], Tensor[(32), int64], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(60, 2), bool]) {
    %264 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
    %265 = cast(%var_11207, dtype="float64") /* ty=Tensor[(60, 2), float64] */;
    %266 = reshape(%265, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
    %267 = @func_5164() /* ty=(Tensor[(32), int64],) */;
    %268 = cast(%var_11202, dtype="int16") /* ty=Tensor[(9), int16] */;
    %269 = reshape(%268, newshape=[9]) /* ty=Tensor[(9), int16] */;
    %270 = @func_5518(%269) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %271 = %270.0;
    %272 = @func_3502() /* ty=Tensor[(7, ?, 10), uint16] */;
    %273 = cast(%272, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %274 = shape_of(%271, dtype="int32") /* ty=Tensor[(3), int32] */;
    %275 = cast(%271, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %276 = dyn.reshape(%273, %274, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %277 = @func_10309() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %278 = cast(%var_11207, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
    %279 = sqrt(%278) /* ty=Tensor[(60, 2), float32] */;
    %280 = cast(%279, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
    %281 = shape_of(%var_11207, dtype="int32") /* ty=Tensor[(2), int32] */;
    %282 = cast(%var_11207, dtype="bool") /* ty=Tensor[(60, 2), bool] */;
    %283 = dyn.reshape(%280, %281, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %284 = %264.0;
    %285 = @func_5234(%266) /* ty=Tensor[(8, 3, 5), float64] */;
    %286 = %267.0;
    %287 = greater_equal(%275, %276) /* ty=Tensor[(7, ?, 10), bool] */;
    %288 = %277.0;
    %289 = not_equal(%282, %283) /* ty=Tensor[(60, 2), bool] */;
    (%284, %var_11202, %285, %286, %287, %288, %289)
  };
  %290(%var_11294, %var_11295) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(9), int16], Tensor[(8, 3, 5), float64], Tensor[(32), int64], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(60, 2), bool]) */
}

def @func_15434() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(32), int64]) {
  @func_15432() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(32), int64]) */
}

def @func_8014(%var_8012: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  @func_8011(%var_8012) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */
}

def @func_17423() -> (Tensor[(4, 5, 13), float64],) {
  %293 = fn () -> (Tensor[(4, 5, 13), float64],) {
    %291 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 5, 13), float64] */, dtype="float64") /* ty=Tensor[(4, 5, 13), float64] */;
    %292 = acosh(%291) /* ty=Tensor[(4, 5, 13), float64] */;
    (%292,)
  };
  %293() /* ty=(Tensor[(4, 5, 13), float64],) */
}

def @func_5971() -> (Tensor[(7, ?, 10), uint16],) {
  %296 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %294 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %295 = %294.0;
    (%295,)
  };
  %296() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_12342() -> (Tensor[(32), int64],) {
  %299 = fn () -> (Tensor[(32), int64],) {
    %297 = @func_12189() /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(32), int64]) */;
    %298 = %297.1;
    (%298,)
  };
  %299() /* ty=(Tensor[(32), int64],) */
}

def @func_9546(%var_9544: bool, %var_9545: Tensor[(3, 7, 10), bool]) -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), int8]) {
  @func_9542(%var_9544, %var_9545) /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), int8]) */
}

def @func_13986() -> (Tensor[(32), int64],) {
  @func_13984() /* ty=(Tensor[(32), int64],) */
}

def @func_19156() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %300 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %301 = @func_16272() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) */;
  %302 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %303 = %300.0;
  %304 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
  %305 = %301.3;
  %306 = %302.1;
  (%303, %304, %305, %306)
}

def @func_5237(%var_5235: Tensor[(8, 3, 5), float64]) -> Tensor[(8, 3, 5), float64] {
  @func_5234(%var_5235) /* ty=Tensor[(8, 3, 5), float64] */
}

def @func_12217() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %307 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %308 = %307.1;
  %309 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%308, %309)
}

def @func_9705() -> (Tensor[(7, ?, 10), uint16],) {
  @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_8519() -> Tensor[(7, 1, 10), bool] {
  %310 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %310.0
}

def @func_11996() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), int64]) {
  %311 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %312 = %311.2;
  %313 = cast(%312, dtype="int64") /* ty=Tensor[(32), int64] */;
  %314 = cast(%312, dtype="int64") /* ty=Tensor[(32), int64] */;
  %315 = reshape(%313, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %316 = reshape(%314, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %317 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %318 = @func_1139(%315, %316) /* ty=Tensor[(2, 4, 4), int64] */;
  (%317, %312, %318)
}

def @func_14233() -> (Tensor[(7, 1, 10), bool], Tensor[(3, 16, 3), bool], Tensor[(144), float64], Tensor[(7, ?, 10), uint16]) {
  @func_14231() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(3, 16, 3), bool], Tensor[(144), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_5051() -> Tensor[(7, ?, 10), uint16] {
  @func_5049() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_6733() -> (Tensor[(32), int64],) {
  @func_6731() /* ty=(Tensor[(32), int64],) */
}

def @func_17178() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32]) {
  %319 = @func_16335() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %320 = @func_11633() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %321 = @func_5123() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %322 = @func_15098() /* ty=(Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) */;
  %323 = @func_13603() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %324 = %319.0;
  %325 = %320.0;
  %326 = %321.0;
  %327 = %322.1;
  %328 = %323.0;
  (%324, %325, %326, %327, %328)
}

def @func_18975() -> (Tensor[(7, ?, 10), uint16],) {
  %330 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %329 = @func_11107() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%329,)
  };
  %330() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_11109() -> Tensor[(7, ?, 10), uint16] {
  @func_11107() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_8186() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_19562() -> (Tensor[(7, ?, 10), uint16],) {
  %333 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %331 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %332 = %331.1;
    (%332,)
  };
  %333() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_13765() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %337 = fn () -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
    %334 = @func_13470() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %335 = %334.0;
    %336 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%335, %336)
  };
  %337() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_5520(%var_5519: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %349 = fn (%var_5504: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %338 = cast(meta[relay.Constant][11] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
    %339 = cast(%var_5504, dtype="int16") /* ty=Tensor[(9), int16] */;
    %340 = reshape(%338, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
    %341 = reshape(%339, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
    %342 = @func_4440(%340, %341) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %343 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %344 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %345 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
    %346 = %342.2;
    %347 = %343.0;
    %348 = %344.0;
    (%345, %346, meta[relay.Constant][11] /* ty=Tensor[(364), float64] */, %var_5504, %347, %348)
  };
  %349(%var_5519) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_10888() -> (Tensor[(7, 8, 6), float64],) {
  %352 = fn () -> (Tensor[(7, 8, 6), float64],) {
    %350 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 8, 6), float64] */, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
    %351 = log10(%350) /* ty=Tensor[(7, 8, 6), float64] */;
    (%351,)
  };
  %352() /* ty=(Tensor[(7, 8, 6), float64],) */
}

def @func_8480() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %361 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) {
    %353 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %354 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %355 = %354.0;
    %356 = cast(%355, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
    %357 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %358 = %353.0;
    %359 = sigmoid(%356) /* ty=Tensor[(7, ?, 10), float64] */;
    %360 = %357.0;
    (%358, %359, %360)
  };
  %361() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_4840(%var_4839: Tensor[(7, 9, 10), uint16]) -> (Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) {
  %369 = fn (%var_4804: Tensor[(7, 9, 10), uint16]) -> (Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) {
    %362 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
    %363 = cast(%362, dtype="int32") /* ty=Tensor[(7, ?, 10), int32] */;
    %364 = cast(%var_4804, dtype="int32") /* ty=Tensor[(7, 9, 10), int32] */;
    %365 = cast(%var_4804, dtype="float64") /* ty=Tensor[(7, 9, 10), float64] */;
    %366 = minimum(%363, %364) /* ty=Tensor[(7, 9, 10), int32] */;
    %367 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
    %368 = asinh(%365) /* ty=Tensor[(7, 9, 10), float64] */;
    (%366, %367, %368)
  };
  %369(%var_4839) /* ty=(Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) */
}

def @func_10405() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %375 = fn () -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
    %370 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %371 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %372 = @func_3193() /* ty=Tensor[(32), int64] */;
    %373 = %370.0;
    %374 = %371.5;
    (%372, %373, %374)
  };
  %375() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */
}

def @func_8742() -> (Tensor[(7, ?, 10), float32],) {
  %376 = @func_5460() /* ty=(Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %377 = %376.2;
  (%377,)
}

def @func_2443(%var_2441: Tensor[(32), int64], %var_2442: Tensor[(7, 5, 10), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) {
  @func_2439(%var_2441, %var_2442) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */
}

def @func_9800() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %380 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %378 = @func_9082() /* ty=Tensor[(7, ?, 10), uint16] */;
    %379 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%378, %379)
  };
  %380() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_10769() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */
}

def @func_12149(%var_12148: Tensor[(350), bool]) -> (Tensor[(2, 4, 4), int64], Tensor[(350), bool], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), float64]) {
  %394 = fn (%var_12121: Tensor[(350), bool]) -> (Tensor[(2, 4, 4), int64], Tensor[(350), bool], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), float64]) {
    %381 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
    %382 = %381.2;
    %383 = cast(%382, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
    %384 = cast(%var_12121, dtype="bool") /* ty=Tensor[(350), bool] */;
    %385 = reshape(%383, newshape=[32]) /* ty=Tensor[(32), int64] */;
    %386 = reshape(%384, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
    %387 = @func_2439(%385, %386) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
    %388 = @func_3860() /* ty=(Tensor[(32), int64],) */;
    %389 = cast(%382, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
    %390 = %387.7;
    %391 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
    %392 = %388.0;
    %393 = cos(%389) /* ty=Tensor[(2, 4, 4), float64] */;
    (%390, %var_12121, %391, %392, %393)
  };
  %394(%var_12148) /* ty=(Tensor[(2, 4, 4), int64], Tensor[(350), bool], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), float64]) */
}

def @func_8577(%var_8556: Tensor[(15, 7, 10), int16]) -> (Tensor[(15, 7, 10), int16], Tensor[(15, 7, 10), bool]) {
  %395 = cast(%var_8556, dtype="int16") /* ty=Tensor[(15, 7, 10), int16] */;
  %396 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 7, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %397 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 7, 10), int16] */, dtype="int16") /* ty=Tensor[(15, 7, 10), int16] */;
  %398 = dyn.reshape(%395, %396, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %399 = cast(%var_8556, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %400 = shape_of(meta[relay.Constant][13] /* ty=Tensor[(15, 7, 10), int16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 7, 10), int16] */, dtype="bool") /* ty=Tensor[(15, 7, 10), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = bitwise_xor(%397, %398) /* ty=Tensor[(15, 7, 10), int16] */;
  %404 = equal(%401, %402) /* ty=Tensor[(15, 7, 10), bool] */;
  (%403, %404)
}

def @func_3504() -> Tensor[(7, ?, 10), uint16] {
  @func_3502() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_13984() -> (Tensor[(32), int64],) {
  %405 = @func_11890() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(32), int64]) */;
  %406 = %405.1;
  (%406,)
}

def @func_8622() -> Tensor[(9), int16] {
  @func_8620() /* ty=Tensor[(9), int16] */
}

def @func_17784() -> (Tensor[(7, 9, 10), uint64],) {
  @func_17782() /* ty=(Tensor[(7, 9, 10), uint64],) */
}

def @func_13198() -> (Tensor[(7, 1, 10), float64],) {
  @func_13196() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_17753() -> (Tensor[(32), int64],) {
  @func_17751() /* ty=(Tensor[(32), int64],) */
}

def @func_11847() -> Tensor[(1, 7, 9), float64] {
  %408 = fn () -> Tensor[(1, 7, 9), float64] {
    %407 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 7, 9), float64] */, dtype="float64") /* ty=Tensor[(1, 7, 9), float64] */;
    sqrt(%407) /* ty=Tensor[(1, 7, 9), float64] */
  };
  %408() /* ty=Tensor[(1, 7, 9), float64] */
}

def @func_12741() -> Tensor[(7, ?, 10), uint16] {
  @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_14624() -> Tensor[(7, ?, 10), uint16] {
  %409 = @func_13877() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %409.1
}

def @func_11998() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), int64]) {
  @func_11996() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(2, 4, 4), int64]) */
}

def @func_13978() -> (Tensor[(32), int64],) {
  %410 = @func_10271() /* ty=Tensor[(32), int64] */;
  (%410,)
}

def @func_16337() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_16335() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_4353() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) {
  @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_10257() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  @func_10255() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */
}

def @func_8129(%var_8128: Tensor[(350), bool]) -> (Tensor[(7, 4, 10), float32], Tensor[(7, 5, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 4, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %430 = fn (%var_8075: Tensor[(350), bool]) -> (Tensor[(7, 4, 10), float32], Tensor[(7, 5, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 4, 10), float32], Tensor[(7, ?, 10), uint16]) {
    %411 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %412 = %411.1;
    %413 = cast(%412, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
    %414 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 4, 10), float64] */, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
    %415 = cast(%var_8075, dtype="bool") /* ty=Tensor[(350), bool] */;
    %416 = reshape(%415, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
    %417 = @func_7032(%416) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) */;
    %418 = %417.1;
    %419 = cast(%var_8075, dtype="uint16") /* ty=Tensor[(350), uint16] */;
    %420 = shape_of(%418, dtype="int32") /* ty=Tensor[(3), int32] */;
    %421 = cast(%418, dtype="uint16") /* ty=Tensor[(7, 5, 10), uint16] */;
    %422 = dyn.reshape(%419, %420, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %423 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %424 = cast(meta[relay.Constant][15] /* ty=Tensor[(7, 4, 10), float64] */, dtype="float32") /* ty=Tensor[(7, 4, 10), float32] */;
    %425 = minimum(%413, %414) /* ty=Tensor[(7, 4, 10), float32] */;
    %426 = minimum(%421, %422) /* ty=Tensor[(7, 5, 10), uint16] */;
    %427 = %423.0;
    %428 = sqrt(%424) /* ty=Tensor[(7, 4, 10), float32] */;
    %429 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%425, %426, %427, %428, %429)
  };
  %430(%var_8128) /* ty=(Tensor[(7, 4, 10), float32], Tensor[(7, 5, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 4, 10), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_7361() -> Tensor[(7, ?, 10), uint16] {
  %431 = fn () -> Tensor[(7, ?, 10), uint16] {
    @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */
  };
  %431() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_12872() -> (Tensor[(7, ?, 10), uint16],) {
  %434 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %432 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %433 = %432.1;
    (%433,)
  };
  %434() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_10646(%var_10644: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), float32], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  @func_10643(%var_10644) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */
}

def @func_13891() -> Tensor[(7, 1, 10), float64] {
  %436 = fn () -> Tensor[(7, 1, 10), float64] {
    %435 = @func_12031() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) */;
    %435.2
  };
  %436() /* ty=Tensor[(7, 1, 10), float64] */
}

def @func_19638() -> (Tensor[(7, ?, 10), uint16],) {
  %439 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %437 = @func_19349() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %438 = %437.1;
    (%438,)
  };
  %439() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_19263() -> Tensor[(7, ?, 10), uint16] {
  %440 = @func_18974() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %440.0
}

def @func_19117() -> (Tensor[(7, ?, 10), uint16],) {
  %442 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %441 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%441,)
  };
  %442() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_18450() -> (Tensor[(7, ?, 10), uint16],) {
  @func_18448() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_10271() -> Tensor[(32), int64] {
  @func_6882() /* ty=Tensor[(32), int64] */
}

def @func_3600() -> (Tensor[(7, 1, 10), bool],) {
  %445 = fn () -> (Tensor[(7, 1, 10), bool],) {
    %443 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
    %444 = %443.0;
    (%444,)
  };
  %445() /* ty=(Tensor[(7, 1, 10), bool],) */
}

def @func_4796() -> Tensor[(32), int64] {
  %446 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
  %446.0
}

def @func_5325() -> (Tensor[(7, ?, 10), uint16],) {
  @func_5323() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_3387(%var_3385: Tensor[(4, 14, 11), float64], %var_3386: Tensor[(4, 14, 11), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %455 = fn (%var_3347: Tensor[(4, 14, 11), float64], %var_3348: Tensor[(4, 14, 11), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %447 = cast(%var_3348, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
    %448 = shape_of(%var_3347, dtype="int32") /* ty=Tensor[(3), int32] */;
    %449 = cast(%var_3347, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
    %450 = dyn.reshape(%447, %448, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %451 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %452 = subtract(%449, %450) /* ty=Tensor[(4, 14, 11), float64] */;
    %453 = %451.0;
    %454 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%452, %453, %454)
  };
  %455(%var_3385, %var_3386) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_16405() -> (Tensor[(7, 1, 10), bool],) {
  %456 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %457 = %456.1;
  (%457,)
}

def @func_17965() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint32]) {
  %458 = @func_16903() /* ty=(Tensor[(7, ?, 10), uint32],) */;
  %459 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %460 = %458.0;
  (%459, %460)
}

def @func_8914(%var_8912: Tensor[(72, 2), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(72, 2), int32], Tensor[(7, ?, 10), uint16]) {
  @func_8911(%var_8912) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(72, 2), int32], Tensor[(7, ?, 10), uint16]) */
}

def @func_13788() -> (Tensor[(7, 1, 10), float64],) {
  %461 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %462 = %461.0;
  (%462,)
}

def @func_12490() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  @func_12488() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_9703() -> (Tensor[(7, ?, 10), uint16],) {
  %463 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %464 = %463.0;
  (%464,)
}

def @func_11732() -> Tensor[(7, ?, 10), uint16] {
  @func_11730() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_14231() -> (Tensor[(7, 1, 10), bool], Tensor[(3, 16, 3), bool], Tensor[(144), float64], Tensor[(7, ?, 10), uint16]) {
  %465 = @func_4226() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %466 = cast(meta[relay.Constant][16] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %467 = reshape(%466, newshape=[3, 16, 3]) /* ty=Tensor[(3, 16, 3), float64] */;
  %468 = @func_4204(%467) /* ty=(Tensor[(3, 16, 3), bool],) */;
  %469 = %465.0;
  %470 = %468.0;
  %471 = @func_11107() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%469, %470, meta[relay.Constant][16] /* ty=Tensor[(144), float64] */, %471)
}

def @func_14762() -> (Tensor[(7, 1, 10), float64],) {
  %474 = fn () -> (Tensor[(7, 1, 10), float64],) {
    %472 = @func_9189() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %473 = %472.0;
    (%473,)
  };
  %474() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_14338() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_14336() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_17782() -> (Tensor[(7, 9, 10), uint64],) {
  %475 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %476 = %475.0;
  %477 = cast(%476, dtype="uint64") /* ty=Tensor[(7, ?, 10), uint64] */;
  %478 = cast(meta[relay.Constant][17] /* ty=Tensor[(7, 9, 10), uint16] */, dtype="uint64") /* ty=Tensor[(7, 9, 10), uint64] */;
  %479 = bitwise_and(%477, %478) /* ty=Tensor[(7, 9, 10), uint64] */;
  (%479,)
}

def @func_10255() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  %480 = @func_6907() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %481 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %482 = %480.0;
  %483 = %481.0;
  (%482, %483)
}

def @func_19190() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
  %488 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
    %484 = @func_17517() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %485 = @func_4226() /* ty=(Tensor[(7, 1, 10), bool],) */;
    %486 = %484.0;
    %487 = %485.0;
    (%486, %487)
  };
  %488() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */
}

def @func_2924() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_6883() -> Tensor[(32), int64] {
  %489 = fn () -> Tensor[(32), int64] {
    @func_5768() /* ty=Tensor[(32), int64] */
  };
  %489() /* ty=Tensor[(32), int64] */
}

def @func_15650(%var_15648: Tensor[(9), int16]) -> (Tensor[(7, 8, 6), float64], Tensor[(1, 364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16]) {
  @func_15647(%var_15648) /* ty=(Tensor[(7, 8, 6), float64], Tensor[(1, 364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16]) */
}

def @func_13594() -> (Tensor[(7, ?, 10), uint16],) {
  %492 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %490 = @func_13346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %491 = %490.3;
    (%491,)
  };
  %492() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_17246() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  @func_17244() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_15206(%var_15175: Tensor[(7, 12, 10), uint16]) -> (Tensor[(7, 12, 10), float32], Tensor[(7, 1, 10), float64]) {
  %493 = @func_14680() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %494 = %493.0;
  %495 = cast(%494, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %496 = cast(%var_15175, dtype="float32") /* ty=Tensor[(7, 12, 10), float32] */;
  %497 = divide(%495, %496) /* ty=Tensor[(7, 12, 10), float32] */;
  %498 = @func_10505() /* ty=Tensor[(7, 1, 10), float64] */;
  (%497, %498)
}

def @func_6908() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %503 = fn () -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
    %499 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %500 = @func_6605() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %501 = %499.0;
    %502 = %500.0;
    (%501, %502)
  };
  %503() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_8646() -> (Tensor[(7, ?, 10), float32], Tensor[(7, 5, 10), bool], Tensor[(350), bool]) {
  %510 = fn () -> (Tensor[(7, ?, 10), float32], Tensor[(7, 5, 10), bool], Tensor[(350), bool]) {
    %504 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
    %505 = cast(meta[relay.Constant][18] /* ty=Tensor[(350), bool] */, dtype="bool") /* ty=Tensor[(350), bool] */;
    %506 = reshape(%505, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
    %507 = @func_7032(%506) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) */;
    %508 = %504.2;
    %509 = %507.1;
    (%508, %509, meta[relay.Constant][18] /* ty=Tensor[(350), bool] */)
  };
  %510() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, 5, 10), bool], Tensor[(350), bool]) */
}

def @func_7233() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %514 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %511 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %512 = @func_6924() /* ty=Tensor[(7, ?, 10), uint16] */;
    %513 = %511.0;
    (%512, %513)
  };
  %514() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_11507() -> Tensor[(7, ?, 10), float32] {
  %516 = fn () -> Tensor[(7, ?, 10), float32] {
    %515 = @func_8742() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %515.0
  };
  %516() /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_3266() -> Tensor[(7, ?, 10), uint16] {
  @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_6475() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  %517 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %518 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %519 = %517.1;
  %520 = %518.1;
  (%519, %520)
}

def @func_17262() -> (Tensor[(7, ?, 10), uint16],) {
  @func_17260() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_6379() -> (Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(616), float64], Tensor[(616), float64]) {
  %521 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %522 = cast(meta[relay.Constant][19] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %523 = reshape(%522, newshape=[616]) /* ty=Tensor[(616), float64] */;
  %524 = @func_4623(%523) /* ty=(Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) */;
  %525 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %526 = %521.4;
  %527 = %524.2;
  (%525, %526, %527, meta[relay.Constant][19] /* ty=Tensor[(616), float64] */)
}

def @func_10216() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(560), float32]) {
  %535 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(560), float32]) {
    %528 = @func_5071() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %529 = cast(meta[relay.Constant][20] /* ty=Tensor[(560), float32] */, dtype="float32") /* ty=Tensor[(560), float32] */;
    %530 = reshape(%529, newshape=[10, 14, 4]) /* ty=Tensor[(10, 14, 4), float32] */;
    %531 = @func_9298(%530) /* ty=(Tensor[(10, 14, 4), float32], Tensor[(7, ?, 10), uint16], Tensor[(9), int16]) */;
    %532 = @func_9378() /* ty=Tensor[(7, ?, 10), uint16] */;
    %533 = %528.0;
    %534 = %531.1;
    (%532, %533, %534, meta[relay.Constant][20] /* ty=Tensor[(560), float32] */)
  };
  %535() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(560), float32]) */
}

def @func_11010() -> Tensor[(7, ?, 10), uint16] {
  %537 = fn () -> Tensor[(7, ?, 10), uint16] {
    %536 = @func_5323() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %536.0
  };
  %537() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_14949() -> Tensor[(32), int64] {
  %538 = fn () -> Tensor[(32), int64] {
    @func_14079() /* ty=Tensor[(32), int64] */
  };
  %538() /* ty=Tensor[(32), int64] */
}

def @func_17052() -> (Tensor[(32), int64], Tensor[(7, 1, 10), float64]) {
  %542 = fn () -> (Tensor[(32), int64], Tensor[(7, 1, 10), float64]) {
    %539 = @func_9189() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %540 = @func_4748() /* ty=Tensor[(32), int64] */;
    %541 = %539.0;
    (%540, %541)
  };
  %542() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), float64]) */
}

def @func_5461() -> (Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %552 = fn () -> (Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
    %543 = @func_4897() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %544 = %543.0;
    %545 = cast(%544, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
    %546 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
    %547 = cast(%544, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
    %548 = sin(%545) /* ty=Tensor[(7, ?, 10), float64] */;
    %549 = %546.0;
    %550 = cos(%547) /* ty=Tensor[(7, ?, 10), float32] */;
    %551 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%548, %549, %550, %551)
  };
  %552() /* ty=(Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_19743() -> Tensor[(7, ?, 10), float64] {
  %553 = @func_14175() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64]) */;
  %553.1
}

def @func_5561(%var_5548: Tensor[(6, 15, 4), uint32]) -> (Tensor[(6, 15, 4), uint32], Tensor[(32), int64]) {
  %554 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 15, 4), uint32] */, dtype="uint32") /* ty=Tensor[(6, 15, 4), uint32] */;
  %555 = shape_of(%var_5548, dtype="int32") /* ty=Tensor[(3), int32] */;
  %556 = cast(%var_5548, dtype="uint32") /* ty=Tensor[(6, 15, 4), uint32] */;
  %557 = dyn.reshape(%554, %555, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %558 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %559 = maximum(%556, %557) /* ty=Tensor[(6, 15, 4), uint32] */;
  %560 = %558.0;
  (%559, %560)
}

def @func_7522() -> Tensor[(7, ?, 10), uint16] {
  %561 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %561.0
}

def @func_9190() -> (Tensor[(7, 1, 10), float64],) {
  %564 = fn () -> (Tensor[(7, 1, 10), float64],) {
    %562 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %563 = %562.0;
    (%563,)
  };
  %564() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_3195() -> Tensor[(32), int64] {
  @func_3193() /* ty=Tensor[(32), int64] */
}

def @func_17751() -> (Tensor[(32), int64],) {
  %565 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %566 = %565.0;
  (%566,)
}

def @func_3264() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_8911(%var_8904: Tensor[(72, 2), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(72, 2), int32], Tensor[(7, ?, 10), uint16]) {
  %567 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %568 = cast(meta[relay.Constant][22] /* ty=Tensor[(72, 2), float64] */, dtype="float64") /* ty=Tensor[(72, 2), float64] */;
  %569 = reshape(%568, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %570 = @func_3964(%569) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %571 = cast(%var_8904, dtype="int32") /* ty=Tensor[(72, 2), int32] */;
  %572 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(72, 2), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %573 = cast(meta[relay.Constant][22] /* ty=Tensor[(72, 2), float64] */, dtype="int32") /* ty=Tensor[(72, 2), int32] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %575 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %576 = %567.0;
  %577 = %570.1;
  %578 = add(%573, %574) /* ty=Tensor[(72, 2), int32] */;
  %579 = %575.0;
  (%576, %577, %578, %579)
}

def @func_4228() -> (Tensor[(7, 1, 10), bool],) {
  @func_4226() /* ty=(Tensor[(7, 1, 10), bool],) */
}

def @func_5165() -> (Tensor[(32), int64],) {
  %581 = fn () -> (Tensor[(32), int64],) {
    %580 = @func_3193() /* ty=Tensor[(32), int64] */;
    (%580,)
  };
  %581() /* ty=(Tensor[(32), int64],) */
}

def @func_2852(%var_2850: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) {
  @func_2849(%var_2850) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) */
}

def @func_7034(%var_7033: Tensor[(7, 5, 10), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) {
  %596 = fn (%var_7006: Tensor[(7, 5, 10), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) {
    %582 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %583 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
    %584 = %583.0;
    %585 = cast(%584, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
    %586 = cast(%var_7006, dtype="bool") /* ty=Tensor[(7, 5, 10), bool] */;
    %587 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %588 = %587.0;
    %589 = cast(%588, dtype="uint8") /* ty=Tensor[(7, ?, 10), uint8] */;
    %590 = cast(%var_7006, dtype="uint8") /* ty=Tensor[(7, 5, 10), uint8] */;
    %591 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %592 = %582.0;
    %593 = greater_equal(%585, %586) /* ty=Tensor[(7, 5, 10), bool] */;
    %594 = add(%589, %590) /* ty=Tensor[(7, 5, 10), uint8] */;
    %595 = %591.1;
    (%592, %593, %594, %595)
  };
  %596(%var_7033) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), bool], Tensor[(7, 5, 10), uint8], Tensor[(7, ?, 10), uint16]) */
}

def @func_5181() -> (Tensor[(7, 1, 10), float64],) {
  %597 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %598 = %597.0;
  %599 = cast(%598, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
  %600 = sqrt(%599) /* ty=Tensor[(7, 1, 10), float64] */;
  (%600,)
}

def @func_8011(%var_8007: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %601 = @func_6236() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %602 = cast(%var_8007, dtype="int64") /* ty=Tensor[(32), int64] */;
  %603 = reshape(%602, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %604 = @func_3801(%603) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %605 = %601.1;
  %606 = %604.1;
  (%605, %606, %var_8007)
}

def @func_10578() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_10576() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_12031() -> (Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) {
  %607 = @func_6145() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %608 = @func_10887() /* ty=(Tensor[(7, 8, 6), float64],) */;
  %609 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %610 = %607.0;
  %611 = %608.0;
  %612 = %609.0;
  (%610, %611, %612)
}

def @func_2632() -> Tensor[(7, ?, 10), uint16] {
  %613 = fn () -> Tensor[(7, ?, 10), uint16] {
    @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */
  };
  %613() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_4099() -> (Tensor[(7, ?, 10), float32],) {
  @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_3227() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  %614 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %615 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
  %616 = cast(%615, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %617 = %614.1;
  %618 = log(%616) /* ty=Tensor[(7, ?, 10), float32] */;
  (%617, %618)
}

def @func_9025(%var_9023: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  @func_9022(%var_9023) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) */
}

def @func_8856() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(350), bool], Tensor[(7, ?, 10), float32]) {
  %619 = @func_4385() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %620 = cast(meta[relay.Constant][23] /* ty=Tensor[(350), bool] */, dtype="bool") /* ty=Tensor[(350), bool] */;
  %621 = reshape(%620, newshape=[350]) /* ty=Tensor[(350), bool] */;
  %622 = @func_7724(%621) /* ty=(Tensor[(15, 13, 7), float32], Tensor[(32), int64], Tensor[(12, 9, 350), uint8], Tensor[(7, ?, 10), uint16]) */;
  %623 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %624 = %619.0;
  %625 = %622.1;
  %626 = %623.1;
  (%624, %625, meta[relay.Constant][23] /* ty=Tensor[(350), bool] */, %626)
}

def @func_3691() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) {
  %627 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %628 = %627.0;
  %629 = cast(%628, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %630 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float32") /* ty=Tensor[(7, 1, 10), float32] */;
  %633 = cast(meta[relay.Constant][24] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %634 = reshape(%633, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %635 = @func_2849(%634) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) */;
  %636 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %637 = cosh(%629) /* ty=Tensor[(7, ?, 10), float64] */;
  %638 = log10(%632) /* ty=Tensor[(7, 1, 10), float32] */;
  %639 = %635.5;
  (%636, %637, %638, %639, meta[relay.Constant][24] /* ty=Tensor[(9), int16] */)
}

def @func_12586() -> (Tensor[(7, ?, 10), uint16],) {
  %642 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %640 = @func_12050() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %641 = %640.0;
    (%641,)
  };
  %642() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_11420() -> Tensor[(7, ?, 10), uint16] {
  %644 = fn () -> Tensor[(7, ?, 10), uint16] {
    %643 = @func_7274() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %643.0
  };
  %644() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_3693() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) {
  @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */
}

def @func_10617() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %645 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
  %646 = @func_7522() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%645, %646)
}

def @func_12190() -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(32), int64]) {
  %651 = fn () -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(32), int64]) {
    %647 = @func_9285() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) */;
    %648 = @func_5768() /* ty=Tensor[(32), int64] */;
    %649 = %647.1;
    %650 = @func_4748() /* ty=Tensor[(32), int64] */;
    (%648, %649, %650)
  };
  %651() /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(32), int64]) */
}

def @func_3193() -> Tensor[(32), int64] {
  %652 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %652.1
}

def @func_15553() -> (Tensor[(7, 1, 10), float64],) {
  @func_15551() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_15942() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %653 = @func_11730() /* ty=Tensor[(7, ?, 10), uint16] */;
  %654 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%653, %654)
}

def @func_6731() -> (Tensor[(32), int64],) {
  %655 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %656 = %655.1;
  (%656,)
}

def @func_5183() -> (Tensor[(7, 1, 10), float64],) {
  @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_10643(%var_10641: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), float32], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %657 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %658 = cast(%var_10641, dtype="int64") /* ty=Tensor[(32), int64] */;
  %659 = cast(%var_10641, dtype="int64") /* ty=Tensor[(32), int64] */;
  %660 = reshape(%658, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %661 = reshape(%659, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %662 = %657.0;
  %663 = @func_1139(%660, %661) /* ty=Tensor[(2, 4, 4), int64] */;
  (%662, %663, %var_10641)
}

def @func_9070(%var_9069: Tensor[(7, 1, 10), uint16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64]) {
  %671 = fn (%var_9061: Tensor[(7, 1, 10), uint16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64]) {
    %664 = @func_6924() /* ty=Tensor[(7, ?, 10), uint16] */;
    %665 = cast(%var_9061, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
    %666 = shape_of(%664, dtype="int32") /* ty=Tensor[(3), int32] */;
    %667 = cast(%664, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
    %668 = dyn.reshape(%665, %666, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %669 = @func_7522() /* ty=Tensor[(7, ?, 10), uint16] */;
    %670 = floor_divide(%667, %668) /* ty=Tensor[(7, ?, 10), float64] */;
    (%669, %670)
  };
  %671(%var_9069) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64]) */
}

def @func_13681(%var_13679: Tensor[(13, 15, 8), float32], %var_13680: Tensor[(13, 15, 8), float32]) -> Tensor[(13, 15, 8), bool] {
  %676 = fn (%var_13673: Tensor[(13, 15, 8), float32], %var_13674: Tensor[(13, 15, 8), float32]) -> Tensor[(13, 15, 8), bool] {
    %672 = cast(%var_13674, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    %673 = shape_of(%var_13673, dtype="int32") /* ty=Tensor[(3), int32] */;
    %674 = cast(%var_13673, dtype="bool") /* ty=Tensor[(13, 15, 8), bool] */;
    %675 = dyn.reshape(%672, %673, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%674, %675) /* ty=Tensor[(13, 15, 8), bool] */
  };
  %676(%var_13679, %var_13680) /* ty=Tensor[(13, 15, 8), bool] */
}

def @func_15944() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_15942() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_12541(%var_12540: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) {
  %685 = fn (%var_12532: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) {
    %677 = @func_11363() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(616), float64], Tensor[(7, 8, 6), float64]) */;
    %678 = cast(meta[relay.Constant][25] /* ty=Tensor[(1, 364), float64] */, dtype="float64") /* ty=Tensor[(1, 364), float64] */;
    %679 = cast(%var_12532, dtype="int16") /* ty=Tensor[(9), int16] */;
    %680 = reshape(%678, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
    %681 = reshape(%679, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
    %682 = @func_4440(%680, %681) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %683 = %677.1;
    %684 = %682.5;
    (%683, %684, meta[relay.Constant][25] /* ty=Tensor[(1, 364), float64] */, %var_12532)
  };
  %685(%var_12540) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) */
}

def @func_16273() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) {
  %701 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) {
    %686 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %687 = @func_15098() /* ty=(Tensor[(7, ?, 10), uint8], Tensor[(7, 1, 10), float64]) */;
    %688 = %687.1;
    %689 = @func_6379() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(616), float64], Tensor[(616), float64]) */;
    %690 = %689.0;
    %691 = cast(%690, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %692 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
    %693 = cast(%688, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
    %694 = dyn.reshape(%691, %692, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %695 = @func_12897() /* ty=(Tensor[(7, ?, 10), uint32],) */;
    %696 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
    %697 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
    %698 = %686.0;
    %699 = less_equal(%693, %694) /* ty=Tensor[(7, ?, 10), bool] */;
    %700 = %695.0;
    (%696, %697, %698, %699, %700)
  };
  %701() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) */
}

def @func_13397() -> (Tensor[(7, 10, 10), float64], Tensor[(1, 7, 9), float64], Tensor[(7, ?, 10), uint16]) {
  %702 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %703 = %702.0;
  %704 = cast(%703, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %705 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 10, 10), uint16] */, dtype="float64") /* ty=Tensor[(7, 10, 10), float64] */;
  %706 = @func_4133() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %707 = divide(%704, %705) /* ty=Tensor[(7, 10, 10), float64] */;
  %708 = @func_11846() /* ty=Tensor[(1, 7, 9), float64] */;
  %709 = %706.0;
  (%707, %708, %709)
}

def @func_14336() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %710 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %711 = @func_4748() /* ty=Tensor[(32), int64] */;
  %712 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
  %713 = %710.0;
  (%711, %712, %713)
}

def @func_15889() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %714 = @func_13196() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %715 = cast(meta[relay.Constant][27] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %716 = reshape(%715, newshape=[144]) /* ty=Tensor[(144), float64] */;
  %717 = @func_9022(%716) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) */;
  %718 = %714.0;
  %719 = %717.0;
  (%718, %719, meta[relay.Constant][27] /* ty=Tensor[(144), float64] */)
}

def @func_17641() -> (Tensor[(7, ?, 10), uint16],) {
  %720 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %721 = %720.0;
  (%721,)
}

def @func_4386() -> (Tensor[(7, ?, 10), uint16],) {
  %723 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %722 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%722,)
  };
  %723() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_8384(%var_8381: Tensor[(3, 1, 5), float64], %var_8382: Tensor[(120), float64], %var_8383: Tensor[(9, 1), int16]) -> (Tensor[(3, 3), int16], Tensor[(2, 72), float64], Tensor[(9, 120), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(3, ?, 5), float64]) {
  %748 = fn (%var_8328: Tensor[(3, 1, 5), float64], %var_8339: Tensor[(120), float64], %var_8340: Tensor[(9, 1), int16]) -> (Tensor[(3, 3), int16], Tensor[(2, 72), float64], Tensor[(9, 120), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(3, ?, 5), float64]) {
    %724 = cast(meta[relay.Constant][28] /* ty=Tensor[(2, 72), float64] */, dtype="float64") /* ty=Tensor[(2, 72), float64] */;
    %725 = cast(%var_8339, dtype="float64") /* ty=Tensor[(120), float64] */;
    %726 = cast(%var_8340, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
    %727 = reshape(%724, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %728 = reshape(%725, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %729 = reshape(%726, newshape=[3, 3]) /* ty=Tensor[(3, 3), int16] */;
    %730 = @func_5694(%727, %728, %729) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) */;
    %731 = cast(%var_8340, dtype="uint16") /* ty=Tensor[(9, 1), uint16] */;
    %732 = cast(%var_8339, dtype="uint16") /* ty=Tensor[(120), uint16] */;
    %733 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %734 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
    %735 = cast(%var_8328, dtype="float64") /* ty=Tensor[(3, 1, 5), float64] */;
    %736 = acosh(%735) /* ty=Tensor[(3, 1, 5), float64] */;
    %737 = cast(%var_8328, dtype="bool") /* ty=Tensor[(3, 1, 5), bool] */;
    %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
    %739 = cast(%736, dtype="bool") /* ty=Tensor[(3, 1, 5), bool] */;
    %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %741 = greater_equal(%739, %740) /* ty=Tensor[(3, ?, 5), bool] */;
    %742 = cast(%741, dtype="float64") /* ty=Tensor[(3, ?, 5), float64] */;
    %743 = %730.8;
    %744 = bitwise_and(%731, %732) /* ty=Tensor[(9, 120), uint16] */;
    %745 = %733.3;
    %746 = %734.0;
    %747 = exp(%742) /* ty=Tensor[(3, ?, 5), float64] */;
    (%743, meta[relay.Constant][28] /* ty=Tensor[(2, 72), float64] */, %744, %745, %746, %747)
  };
  %748(%var_8381, %var_8382, %var_8383) /* ty=(Tensor[(3, 3), int16], Tensor[(2, 72), float64], Tensor[(9, 120), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(3, ?, 5), float64]) */
}

def @func_2302() -> Tensor[(7, ?, 10), uint16] {
  %750 = fn () -> Tensor[(7, ?, 10), uint16] {
    %749 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %749.0
  };
  %750() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_5490() -> Tensor[(7, ?, 10), uint16] {
  %752 = fn () -> Tensor[(7, ?, 10), uint16] {
    %751 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %751.0
  };
  %752() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_12051() -> (Tensor[(7, ?, 10), uint16],) {
  %754 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %753 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%753,)
  };
  %754() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_10467(%var_10465: Tensor[(7, 12, 10), bool]) -> (Tensor[(7, 12, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) {
  @func_10464(%var_10465) /* ty=(Tensor[(7, 12, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(108), int16]) */
}

def @func_11891() -> (Tensor[(7, 1, 10), bool], Tensor[(32), int64]) {
  %759 = fn () -> (Tensor[(7, 1, 10), bool], Tensor[(32), int64]) {
    %755 = @func_6145() /* ty=(Tensor[(7, 1, 10), bool],) */;
    %756 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %757 = %755.0;
    %758 = %756.2;
    (%757, %758)
  };
  %759() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(32), int64]) */
}

def @func_14697() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %765 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %760 = @func_5323() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %761 = @func_5071() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %762 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
    %763 = %760.0;
    %764 = %761.0;
    (%762, %763, %764)
  };
  %765() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_16707(%var_16706: Tensor[(9, 1), int16]) -> (Tensor[(32), int64], Tensor[(7, 9, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, 364, 10), bool]) {
  %783 = fn (%var_16660: Tensor[(9, 1), int16]) -> (Tensor[(32), int64], Tensor[(7, 9, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, 364, 10), bool]) {
    %766 = cast(meta[relay.Constant][29] /* ty=Tensor[(364, 1), float64] */, dtype="float64") /* ty=Tensor[(364, 1), float64] */;
    %767 = cast(%var_16660, dtype="int16") /* ty=Tensor[(9, 1), int16] */;
    %768 = reshape(%766, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
    %769 = reshape(%767, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
    %770 = @func_4440(%768, %769) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %771 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
    %772 = %771.1;
    %773 = cast(%772, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %774 = cast(%var_16660, dtype="bool") /* ty=Tensor[(9, 1), bool] */;
    %775 = @func_12807() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
    %776 = @func_6274() /* ty=Tensor[(7, ?, 10), float32] */;
    %777 = cast(meta[relay.Constant][29] /* ty=Tensor[(364, 1), float64] */, dtype="bool") /* ty=Tensor[(364, 1), bool] */;
    %778 = cast(%776, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %779 = %770.4;
    %780 = not_equal(%773, %774) /* ty=Tensor[(7, 9, 10), bool] */;
    %781 = %775.1;
    %782 = logical_or(%777, %778) /* ty=Tensor[(7, 364, 10), bool] */;
    (%779, %780, %781, %782)
  };
  %783(%var_16706) /* ty=(Tensor[(32), int64], Tensor[(7, 9, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, 364, 10), bool]) */
}

def @func_18732() -> (Tensor[(7, ?, 10), uint16],) {
  %784 = @func_9703() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %785 = %784.0;
  (%785,)
}

def @func_16876() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %790 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %786 = @func_13877() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %787 = @func_6907() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
    %788 = %786.1;
    %789 = %787.1;
    (%788, %789)
  };
  %790() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_17655() -> (Tensor[(7, ?, 10), float32], Tensor[(7, 9, 10), int32], Tensor[(630, 1), uint16]) {
  %797 = fn () -> (Tensor[(7, ?, 10), float32], Tensor[(7, 9, 10), int32], Tensor[(630, 1), uint16]) {
    %791 = @func_12593() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %792 = cast(meta[relay.Constant][30] /* ty=Tensor[(630, 1), uint16] */, dtype="uint16") /* ty=Tensor[(630, 1), uint16] */;
    %793 = reshape(%792, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint16] */;
    %794 = @func_4838(%793) /* ty=(Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) */;
    %795 = %791.0;
    %796 = %794.0;
    (%795, %796, meta[relay.Constant][30] /* ty=Tensor[(630, 1), uint16] */)
  };
  %797() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, 9, 10), int32], Tensor[(630, 1), uint16]) */
}

def @func_16987() -> Tensor[(7, ?, 10), float64] {
  %799 = fn () -> Tensor[(7, ?, 10), float64] {
    %798 = @func_4351() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %798.1
  };
  %799() /* ty=Tensor[(7, ?, 10), float64] */
}

def @func_15891() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  @func_15889() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) */
}

def @func_6126() -> (Tensor[(7, 1, 10), float64],) {
  %802 = fn () -> (Tensor[(7, 1, 10), float64],) {
    %800 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %801 = %800.0;
    (%801,)
  };
  %802() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_15600() -> (Tensor[(7, 1, 10), float64],) {
  %805 = fn () -> (Tensor[(7, 1, 10), float64],) {
    %803 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
    %804 = %803.0;
    (%804,)
  };
  %805() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_13605() -> (Tensor[(7, ?, 10), float32],) {
  @func_13603() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_10926() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %809 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
    %806 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
    %807 = @func_3502() /* ty=Tensor[(7, ?, 10), uint16] */;
    %808 = %806.3;
    (%807, %808)
  };
  %809() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */
}

def @func_2603(%var_2601: Tensor[(3, 7, 9), int16], %var_2602: Tensor[(9), int16]) -> (Tensor[(3, 7, 9), int16], Tensor[(12, 9, ?), uint8], Tensor[(9), int16], Tensor[(108), int16]) {
  @func_2599(%var_2601, %var_2602) /* ty=(Tensor[(3, 7, 9), int16], Tensor[(12, 9, ?), uint8], Tensor[(9), int16], Tensor[(108), int16]) */
}

def @func_15551() -> (Tensor[(7, 1, 10), float64],) {
  %810 = @func_14761() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %811 = %810.0;
  (%811,)
}

def @func_9436(%var_9390: Tensor[(32, 1), int64]) -> (Tensor[(32), int64], Tensor[(7, 32, 10), float64]) {
  %812 = cast(%var_9390, dtype="int64") /* ty=Tensor[(32, 1), int64] */;
  %813 = reshape(%812, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %814 = @func_8011(%813) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %815 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
  %816 = cast(%815, dtype="uint8") /* ty=Tensor[(7, 1, 10), uint8] */;
  %817 = cast(%var_9390, dtype="uint8") /* ty=Tensor[(32, 1), uint8] */;
  %818 = logical_xor(%816, %817) /* ty=Tensor[(7, 32, 10), uint8] */;
  %819 = cast(%818, dtype="float64") /* ty=Tensor[(7, 32, 10), float64] */;
  %820 = cosh(%819) /* ty=Tensor[(7, 32, 10), float64] */;
  %821 = cast(%820, dtype="float32") /* ty=Tensor[(7, 32, 10), float32] */;
  %822 = atan(%821) /* ty=Tensor[(7, 32, 10), float32] */;
  %823 = cast(%818, dtype="bool") /* ty=Tensor[(7, 32, 10), bool] */;
  %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
  %825 = cast(%822, dtype="bool") /* ty=Tensor[(7, 32, 10), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %827 = less(%825, %826) /* ty=Tensor[(7, 32, 10), bool] */;
  %828 = cast(%827, dtype="float64") /* ty=Tensor[(7, 32, 10), float64] */;
  %829 = %814.2;
  %830 = erf(%828) /* ty=Tensor[(7, 32, 10), float64] */;
  (%829, %830)
}

def @func_3861() -> (Tensor[(32), int64],) {
  %832 = fn () -> (Tensor[(32), int64],) {
    %831 = @func_3193() /* ty=Tensor[(32), int64] */;
    (%831,)
  };
  %832() /* ty=(Tensor[(32), int64],) */
}

def @func_19041(%var_19040: Tensor[(630), float32]) -> (Tensor[(32), int64], Tensor[(7, 9, 10), uint64], Tensor[(630), float32], Tensor[(7, ?, 10), uint16]) {
  %841 = fn (%var_18996: Tensor[(630), float32]) -> (Tensor[(32), int64], Tensor[(7, 9, 10), uint64], Tensor[(630), float32], Tensor[(7, ?, 10), uint16]) {
    %833 = @func_12341() /* ty=(Tensor[(32), int64],) */;
    %834 = cast(%var_18996, dtype="float32") /* ty=Tensor[(630), float32] */;
    %835 = reshape(%834, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), float32] */;
    %836 = @func_7139(%835) /* ty=(Tensor[(7, 9, 10), uint64], Tensor[(32), int64]) */;
    %837 = @func_14696() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %838 = %833.0;
    %839 = %836.0;
    %840 = %837.0;
    (%838, %839, %var_18996, %840)
  };
  %841(%var_19040) /* ty=(Tensor[(32), int64], Tensor[(7, 9, 10), uint64], Tensor[(630), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_18836() -> (Tensor[(32), int64], Tensor[(2, 4, 4), int64]) {
  %848 = fn () -> (Tensor[(32), int64], Tensor[(2, 4, 4), int64]) {
    %842 = @func_17558() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(32), int64]) */;
    %843 = %842.1;
    %844 = cast(%843, dtype="int64") /* ty=Tensor[(32), int64] */;
    %845 = reshape(%844, newshape=[32]) /* ty=Tensor[(32), int64] */;
    %846 = @func_3801(%845) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %847 = %846.1;
    (%843, %847)
  };
  %848() /* ty=(Tensor[(32), int64], Tensor[(2, 4, 4), int64]) */
}

def @func_10328() -> Tensor[(7, ?, 10), uint16] {
  @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_12699() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  @func_12697() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */
}

def @func_17988() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(210), float32]) {
  %849 = cast(meta[relay.Constant][31] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %850 = reshape(%849, newshape=[15, 7, 2]) /* ty=Tensor[(15, 7, 2), float32] */;
  %851 = @func_11067(%850) /* ty=(Tensor[(15, 7, 2), float32], Tensor[(7, ?, 10), uint16]) */;
  %852 = @func_10117() /* ty=Tensor[(7, ?, 10), uint16] */;
  %853 = %851.1;
  (%852, %853, meta[relay.Constant][31] /* ty=Tensor[(210), float32] */)
}

def @func_5323() -> (Tensor[(7, ?, 10), uint16],) {
  %854 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%854,)
}

def @func_6381() -> (Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(616), float64], Tensor[(616), float64]) {
  @func_6379() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(616), float64], Tensor[(616), float64]) */
}

def @func_16930() -> (Tensor[(7, ?, 10), uint16],) {
  %856 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %855 = @func_7360() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%855,)
  };
  %856() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_6606() -> (Tensor[(7, ?, 10), uint16],) {
  %858 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %857 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%857,)
  };
  %858() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_12593() -> (Tensor[(7, ?, 10), float32],) {
  %859 = @func_8742() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %860 = %859.0;
  (%860,)
}

def @func_17967() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint32]) {
  @func_17965() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint32]) */
}

def @func_19835(%var_19821: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %861 = @func_13346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %862 = @func_6145() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %863 = cast(%var_19821, dtype="float64") /* ty=Tensor[(144), float64] */;
  %864 = reshape(%863, newshape=[72, 2]) /* ty=Tensor[(72, 2), float64] */;
  %865 = @func_8911(%864) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(72, 2), int32], Tensor[(7, ?, 10), uint16]) */;
  %866 = %861.0;
  %867 = %862.0;
  %868 = %865.1;
  (%866, %867, %868, %var_19821)
}

def @func_13975() -> (Tensor[(7, ?, 10), uint16],) {
  %870 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %869 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%869,)
  };
  %870() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_5698(%var_5695: Tensor[(144), float64], %var_5696: Tensor[(120), float64], %var_5697: Tensor[(3, 3), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) {
  %895 = fn (%var_5649: Tensor[(144), float64], %var_5658: Tensor[(120), float64], %var_5674: Tensor[(3, 3), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) {
    %871 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
    %872 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %873 = cast(%var_5649, dtype="float64") /* ty=Tensor[(144), float64] */;
    %874 = reshape(%873, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
    %875 = @func_3964(%874) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
    %876 = cast(%var_5658, dtype="float64") /* ty=Tensor[(120), float64] */;
    %877 = reshape(%876, newshape=[8, 3, 5]) /* ty=Tensor[(8, 3, 5), float64] */;
    %878 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %879 = @func_5049() /* ty=Tensor[(7, ?, 10), uint16] */;
    %880 = cast(%var_5674, dtype="int16") /* ty=Tensor[(3, 3), int16] */;
    %881 = reshape(%880, newshape=[9]) /* ty=Tensor[(9), int16] */;
    %882 = @func_2849(%881) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16]) */;
    %883 = %882.0;
    %884 = cast(%883, dtype="int64") /* ty=Tensor[(7, ?, 10), int64] */;
    %885 = shape_of(%879, dtype="int32") /* ty=Tensor[(3), int32] */;
    %886 = cast(%879, dtype="int64") /* ty=Tensor[(7, ?, 10), int64] */;
    %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %888 = %871.1;
    %889 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
    %890 = %872.0;
    %891 = %875.0;
    %892 = @func_5234(%877) /* ty=Tensor[(8, 3, 5), float64] */;
    %893 = %878.0;
    %894 = bitwise_and(%886, %887) /* ty=Tensor[(7, ?, 10), int64] */;
    (%888, %889, %890, %891, %var_5649, %892, %var_5658, %893, %var_5674, %894)
  };
  %895(%var_5695, %var_5696, %var_5697) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) */
}

def @func_4749() -> Tensor[(32), int64] {
  %896 = fn () -> Tensor[(32), int64] {
    @func_3193() /* ty=Tensor[(32), int64] */
  };
  %896() /* ty=Tensor[(32), int64] */
}

def @func_18640() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_18638() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_16456() -> Tensor[(7, 2, 10), int8] {
  %901 = fn () -> Tensor[(7, 2, 10), int8] {
    %897 = @func_13603() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %898 = %897.0;
    %899 = cast(%898, dtype="int8") /* ty=Tensor[(7, ?, 10), int8] */;
    %900 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 2, 10), float32] */, dtype="int8") /* ty=Tensor[(7, 2, 10), int8] */;
    bitwise_xor(%899, %900) /* ty=Tensor[(7, 2, 10), int8] */
  };
  %901() /* ty=Tensor[(7, 2, 10), int8] */
}

def @func_8688(%var_8687: Tensor[(15, 5, 1), float32]) -> (Tensor[(630), uint16], Tensor[(32), int64], Tensor[(15, 5, 1), float64]) {
  %910 = fn (%var_8668: Tensor[(15, 5, 1), float32]) -> (Tensor[(630), uint16], Tensor[(32), int64], Tensor[(15, 5, 1), float64]) {
    %902 = @func_7110() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(630), uint16]) */;
    %903 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %904 = cast(%var_8668, dtype="float32") /* ty=Tensor[(15, 5, 1), float32] */;
    %905 = acos(%904) /* ty=Tensor[(15, 5, 1), float32] */;
    %906 = cast(%905, dtype="float64") /* ty=Tensor[(15, 5, 1), float64] */;
    %907 = %902.4;
    %908 = %903.0;
    %909 = log10(%906) /* ty=Tensor[(15, 5, 1), float64] */;
    (%907, %908, %909)
  };
  %910(%var_8687) /* ty=(Tensor[(630), uint16], Tensor[(32), int64], Tensor[(15, 5, 1), float64]) */
}

def @func_7141(%var_7140: Tensor[(7, 9, 10), float32]) -> (Tensor[(7, 9, 10), uint64], Tensor[(32), int64]) {
  %917 = fn (%var_7129: Tensor[(7, 9, 10), float32]) -> (Tensor[(7, 9, 10), uint64], Tensor[(32), int64]) {
    %911 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %912 = %911.2;
    %913 = cast(%912, dtype="uint64") /* ty=Tensor[(7, ?, 10), uint64] */;
    %914 = cast(%var_7129, dtype="uint64") /* ty=Tensor[(7, 9, 10), uint64] */;
    %915 = add(%913, %914) /* ty=Tensor[(7, 9, 10), uint64] */;
    %916 = @func_4748() /* ty=Tensor[(32), int64] */;
    (%915, %916)
  };
  %917(%var_7140) /* ty=(Tensor[(7, 9, 10), uint64], Tensor[(32), int64]) */
}

def @func_8744() -> (Tensor[(7, ?, 10), float32],) {
  @func_8742() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_15920() -> Tensor[(7, ?, 10), float32] {
  %919 = fn () -> Tensor[(7, ?, 10), float32] {
    %918 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
    %918.0
  };
  %919() /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_13399() -> (Tensor[(7, 10, 10), float64], Tensor[(1, 7, 9), float64], Tensor[(7, ?, 10), uint16]) {
  @func_13397() /* ty=(Tensor[(7, 10, 10), float64], Tensor[(1, 7, 9), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_17389() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64]) {
  %920 = @func_12217() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %921 = @func_6882() /* ty=Tensor[(32), int64] */;
  %922 = cast(%921, dtype="int64") /* ty=Tensor[(32), int64] */;
  %923 = reshape(%922, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %924 = @func_8011(%923) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %925 = %920.1;
  %926 = %924.1;
  (%921, %925, %926)
}

def @func_4719() -> (Tensor[(32), int64], Tensor[(7, 1, 10), bool]) {
  @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */
}

def @func_11333() -> (Tensor[(7, 1, 10), bool],) {
  %928 = fn () -> (Tensor[(7, 1, 10), bool],) {
    %927 = @func_8519() /* ty=Tensor[(7, 1, 10), bool] */;
    (%927,)
  };
  %928() /* ty=(Tensor[(7, 1, 10), bool],) */
}

def @func_3502() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_8580(%var_8578: Tensor[(15, 7, 10), int16]) -> (Tensor[(15, 7, 10), int16], Tensor[(15, 7, 10), bool]) {
  @func_8577(%var_8578) /* ty=(Tensor[(15, 7, 10), int16], Tensor[(15, 7, 10), bool]) */
}

def @func_4309() -> (Tensor[(7, ?, 10), uint16],) {
  @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_14626() -> Tensor[(7, ?, 10), uint16] {
  @func_14624() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_5768() -> Tensor[(32), int64] {
  %929 = @func_5164() /* ty=(Tensor[(32), int64],) */;
  %929.0
}

def @func_6112(%var_6109: Tensor[(616), float64], %var_6110: Tensor[(3, 63), int16], %var_6111: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float32], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(108), int16], Tensor[(3, 63), int16], Tensor[(9), int16], Tensor[(7, 1, 10), bool]) {
  %945 = fn (%var_6018: Tensor[(616), float64], %var_6062: Tensor[(3, 63), int16], %var_6063: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float32], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(108), int16], Tensor[(3, 63), int16], Tensor[(9), int16], Tensor[(7, 1, 10), bool]) {
    %930 = cast(%var_6018, dtype="float64") /* ty=Tensor[(616), float64] */;
    %931 = reshape(%930, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %932 = @func_4623(%931) /* ty=(Tensor[(7, 1, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(616), float64]) */;
    %933 = cast(%var_6062, dtype="int16") /* ty=Tensor[(3, 63), int16] */;
    %934 = cast(%var_6063, dtype="int16") /* ty=Tensor[(9), int16] */;
    %935 = reshape(%933, newshape=[3, 7, 9]) /* ty=Tensor[(3, 7, 9), int16] */;
    %936 = reshape(%934, newshape=[9]) /* ty=Tensor[(9), int16] */;
    %937 = @func_2599(%935, %936) /* ty=(Tensor[(3, 7, 9), int16], Tensor[(12, 9, ?), uint8], Tensor[(9), int16], Tensor[(108), int16]) */;
    %938 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
    %939 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
    %940 = %932.0;
    %941 = @func_3193() /* ty=Tensor[(32), int64] */;
    %942 = @func_4748() /* ty=Tensor[(32), int64] */;
    %943 = %937.3;
    %944 = %938.0;
    (%939, %940, %var_6018, %941, %942, %943, %var_6062, %var_6063, %944)
  };
  %945(%var_6109, %var_6110, %var_6111) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float32], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(108), int16], Tensor[(3, 63), int16], Tensor[(9), int16], Tensor[(7, 1, 10), bool]) */
}

def @func_13790() -> (Tensor[(7, 1, 10), float64],) {
  @func_13788() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_3012() -> (Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %959 = fn () -> (Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
    %946 = cast(meta[relay.Constant][33] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
    %947 = cast(meta[relay.Constant][33] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
    %948 = reshape(%946, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
    %949 = reshape(%947, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
    %950 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %951 = %950.0;
    %952 = cast(%951, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
    %953 = @func_1139(%948, %949) /* ty=Tensor[(2, 4, 4), int64] */;
    %954 = cast(%953, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
    %955 = reshape(%954, newshape=[32, 1]) /* ty=Tensor[(32, 1), int64] */;
    %956 = @func_2681(%955) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %957 = asin(%952) /* ty=Tensor[(7, ?, 10), float32] */;
    %958 = %956.6;
    (%953, meta[relay.Constant][33] /* ty=Tensor[(32), int64] */, %957, %958)
  };
  %959() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_16808(%var_16784: float32, %var_16785: Tensor[(7, 14, 8), float32]) -> Tensor[(7, 14, 8), bool] {
  %960 = cast(%var_16784, dtype="bool") /* ty=bool */;
  %961 = cast(%var_16785, dtype="bool") /* ty=Tensor[(7, 14, 8), bool] */;
  not_equal(%960, %961) /* ty=Tensor[(7, 14, 8), bool] */
}

def @func_14388(%var_14387: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %967 = fn (%var_14358: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
    %962 = cast(%var_14358, dtype="float64") /* ty=Tensor[(144), float64] */;
    %963 = reshape(%962, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
    %964 = @func_3964(%963) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
    %965 = @func_5049() /* ty=Tensor[(7, ?, 10), uint16] */;
    %966 = %964.1;
    (%965, %966, %var_14358)
  };
  %967(%var_14387) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) */
}

def @func_12595() -> (Tensor[(7, ?, 10), float32],) {
  @func_12593() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_17718(%var_17694: Tensor[(1, 9), int16]) -> (Tensor[(7, ?, 10), float32], Tensor[(7, 1, 10), bool], Tensor[(364), float64], Tensor[(1, 9), int16]) {
  %968 = cast(meta[relay.Constant][34] /* ty=Tensor[(364), float64] */, dtype="float64") /* ty=Tensor[(364), float64] */;
  %969 = cast(%var_17694, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
  %970 = reshape(%968, newshape=[4, 13, 7]) /* ty=Tensor[(4, 13, 7), float64] */;
  %971 = reshape(%969, newshape=[1, 9]) /* ty=Tensor[(1, 9), int16] */;
  %972 = @func_4440(%970, %971) /* ty=(Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %973 = @func_16342() /* ty=Tensor[(7, ?, 10), float32] */;
  %974 = %972.10;
  (%973, %974, meta[relay.Constant][34] /* ty=Tensor[(364), float64] */, %var_17694)
}

def @func_3966(%var_3965: Tensor[(1, 16, 9), float64]) -> (Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) {
  %978 = fn (%var_3954: Tensor[(1, 16, 9), float64]) -> (Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) {
    %975 = cast(%var_3954, dtype="float64") /* ty=Tensor[(1, 16, 9), float64] */;
    %976 = atan(%975) /* ty=Tensor[(1, 16, 9), float64] */;
    %977 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%976, %977)
  };
  %978(%var_3965) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_14681() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %982 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %979 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %980 = %979.1;
    %981 = @func_10117() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%980, %981)
  };
  %982() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_14970() -> (Tensor[(7, ?, 10), uint16],) {
  %983 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %984 = %983.0;
  (%984,)
}

def @func_4204(%var_4188: Tensor[(3, 16, 3), float64]) -> (Tensor[(3, 16, 3), bool],) {
  %985 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 16, 3), float64] */, dtype="bool") /* ty=Tensor[(3, 16, 3), bool] */;
  %986 = shape_of(%var_4188, dtype="int32") /* ty=Tensor[(3), int32] */;
  %987 = cast(%var_4188, dtype="bool") /* ty=Tensor[(3, 16, 3), bool] */;
  %988 = dyn.reshape(%985, %986, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %989 = greater_equal(%987, %988) /* ty=Tensor[(3, 16, 3), bool] */;
  (%989,)
}

def @func_15745(%var_15743: Tensor[(1, 9), int16], %var_15744: Tensor[(108), int16]) -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16]) {
  %1000 = fn (%var_15732: Tensor[(1, 9), int16], %var_15733: Tensor[(108), int16]) -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16]) {
    %990 = @func_5164() /* ty=(Tensor[(32), int64],) */;
    %991 = @func_9799() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %992 = cast(%var_15732, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
    %993 = cast(%var_15733, dtype="int16") /* ty=Tensor[(108), int16] */;
    %994 = reshape(%992, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
    %995 = reshape(%993, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
    %996 = @func_1903(%994, %995) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
    %997 = %990.0;
    %998 = %991.1;
    %999 = %996.2;
    (%997, %998, %999, %var_15732, %var_15733)
  };
  %1000(%var_15743, %var_15744) /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16]) */
}

def @func_10273() -> Tensor[(32), int64] {
  @func_10271() /* ty=Tensor[(32), int64] */
}

def @func_14869() -> Tensor[(7, ?, 10), float64] {
  @func_14867() /* ty=Tensor[(7, ?, 10), float64] */
}

def @func_15585() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1005 = fn () -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
    %1001 = @func_6731() /* ty=(Tensor[(32), int64],) */;
    %1002 = @func_5911() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64]) */;
    %1003 = %1001.0;
    %1004 = %1002.0;
    (%1003, %1004)
  };
  %1005() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_12697() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %1006 = @func_12488() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1007 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1008 = %1006.0;
  %1009 = %1007.0;
  %1010 = @func_10487() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1008, %1009, %1010)
}

def @func_10048() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 36), float64], Tensor[(120), float64], Tensor[(9), int16], Tensor[(7, 1, 10), float32], Tensor[(7, 16, 10), float64], Tensor[(32), int64]) {
  %1032 = fn () -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 36), float64], Tensor[(120), float64], Tensor[(9), int16], Tensor[(7, 1, 10), float32], Tensor[(7, 16, 10), float64], Tensor[(32), int64]) {
    %1011 = @func_9189() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %1012 = cast(meta[relay.Constant][36] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %1013 = cast(meta[relay.Constant][37] /* ty=Tensor[(120), float64] */, dtype="float64") /* ty=Tensor[(120), float64] */;
    %1014 = cast(meta[relay.Constant][38] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
    %1015 = reshape(%1012, newshape=[144]) /* ty=Tensor[(144), float64] */;
    %1016 = reshape(%1013, newshape=[120]) /* ty=Tensor[(120), float64] */;
    %1017 = reshape(%1014, newshape=[3, 3]) /* ty=Tensor[(3, 3), int16] */;
    %1018 = @func_5694(%1015, %1016, %1017) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(1, 16, 9), float64], Tensor[(144), float64], Tensor[(8, 3, 5), float64], Tensor[(120), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 3), int16], Tensor[(7, ?, 10), int64]) */;
    %1019 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
    %1020 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
    %1021 = %1020.1;
    %1022 = cast(%1021, dtype="float64") /* ty=Tensor[(7, 1, 10), float64] */;
    %1023 = cast(meta[relay.Constant][39] /* ty=Tensor[(7, 16, 10), bool] */, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
    %1024 = mod(%1022, %1023) /* ty=Tensor[(7, 16, 10), float64] */;
    %1025 = cast(%1024, dtype="float64") /* ty=Tensor[(7, 16, 10), float64] */;
    %1026 = @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %1027 = %1011.0;
    %1028 = %1018.1;
    %1029 = %1019.2;
    %1030 = sigmoid(%1025) /* ty=Tensor[(7, 16, 10), float64] */;
    %1031 = %1026.1;
    (%1027, %1028, meta[relay.Constant][36] /* ty=Tensor[(4, 36), float64] */, meta[relay.Constant][37] /* ty=Tensor[(120), float64] */, meta[relay.Constant][38] /* ty=Tensor[(9), int16] */, %1029, %1030, %1031)
  };
  %1032() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 36), float64], Tensor[(120), float64], Tensor[(9), int16], Tensor[(7, 1, 10), float32], Tensor[(7, 16, 10), float64], Tensor[(32), int64]) */
}

def @func_7727(%var_7725: Tensor[(350), bool]) -> (Tensor[(15, 13, 7), float32], Tensor[(32), int64], Tensor[(12, 9, 350), uint8], Tensor[(7, ?, 10), uint16]) {
  @func_7724(%var_7725) /* ty=(Tensor[(15, 13, 7), float32], Tensor[(32), int64], Tensor[(12, 9, 350), uint8], Tensor[(7, ?, 10), uint16]) */
}

def @func_19745() -> Tensor[(7, ?, 10), float64] {
  @func_19743() /* ty=Tensor[(7, ?, 10), float64] */
}

def @func_16335() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1033 = @func_5323() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1034 = %1033.0;
  %1035 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1034, %1035)
}

def @func_19618() -> (Tensor[(7, 1, 10), bool],) {
  %1038 = fn () -> (Tensor[(7, 1, 10), bool],) {
    %1036 = @func_12697() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %1037 = %1036.1;
    (%1037,)
  };
  %1038() /* ty=(Tensor[(7, 1, 10), bool],) */
}

def @func_16777() -> Tensor[(7, ?, 10), uint8] {
  @func_16775() /* ty=Tensor[(7, ?, 10), uint8] */
}

def @func_9378() -> Tensor[(7, ?, 10), uint16] {
  %1039 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1039.0
}

def @func_13603() -> (Tensor[(7, ?, 10), float32],) {
  %1040 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_19083() -> (Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  %1048 = fn () -> (Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
    %1042 = @func_5164() /* ty=(Tensor[(32), int64],) */;
    %1043 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
    %1044 = @func_9285() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) */;
    %1045 = %1042.0;
    %1046 = %1043.0;
    %1047 = %1044.0;
    (%1045, %1046, %1047)
  };
  %1048() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */
}

def @func_18448() -> (Tensor[(7, ?, 10), uint16],) {
  %1049 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1049,)
}

def @func_13878() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %1053 = fn () -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
    %1050 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1051 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
    %1052 = %1050.0;
    (%1051, %1052)
  };
  %1053() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_2683(%var_2682: Tensor[(32, 1), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %1065 = fn (%var_2654: Tensor[(32, 1), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
    %1054 = cast(%var_2654, dtype="int64") /* ty=Tensor[(32, 1), int64] */;
    %1055 = cast(meta[relay.Constant][40] /* ty=Tensor[(350), bool] */, dtype="bool") /* ty=Tensor[(350), bool] */;
    %1056 = reshape(%1054, newshape=[32]) /* ty=Tensor[(32), int64] */;
    %1057 = reshape(%1055, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
    %1058 = @func_2439(%1056, %1057) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
    %1059 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %1060 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1061 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1062 = %1058.1;
    %1063 = %1059.1;
    %1064 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1060, %1061, %1062, %var_2654, meta[relay.Constant][40] /* ty=Tensor[(350), bool] */, %1063, %1064)
  };
  %1065(%var_2682) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */
}

def @func_11967() -> (Tensor[(7, ?, 10), uint16],) {
  %1068 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %1066 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1067 = %1066.0;
    (%1067,)
  };
  %1068() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_8620() -> Tensor[(9), int16] {
  %1069 = @func_3691() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, 1, 10), float32], Tensor[(108), int16], Tensor[(9), int16]) */;
  %1069.4
}

def @func_8218() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %1070 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1071 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1072 = %1070.0;
  %1073 = %1071.2;
  (%1072, %1073)
}

def @func_19466() -> Tensor[(7, ?, 10), float32] {
  %1075 = fn () -> Tensor[(7, ?, 10), float32] {
    %1074 = @func_14024() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %1074.0
  };
  %1075() /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_14080() -> Tensor[(32), int64] {
  %1077 = fn () -> Tensor[(32), int64] {
    %1076 = @func_10255() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
    %1076.1
  };
  %1077() /* ty=Tensor[(32), int64] */
}

def @func_18583() -> (Tensor[(7, ?, 10), uint16],) {
  %1078 = @func_6907() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %1079 = %1078.1;
  (%1079,)
}

def @func_3437() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */
}

def @func_11634() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %1083 = fn () -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
    %1080 = @func_5140() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1081 = @func_6630() /* ty=Tensor[(7, 1, 10), float64] */;
    %1082 = %1080.1;
    (%1081, %1082)
  };
  %1083() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_7524() -> Tensor[(7, ?, 10), uint16] {
  @func_7522() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_4440(%var_4391: Tensor[(4, 13, 7), float64], %var_4407: Tensor[(1, 9), int16]) -> (Tensor[(4, 13, 7), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(1, 9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(616), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
  %1084 = cast(%var_4391, dtype="float64") /* ty=Tensor[(4, 13, 7), float64] */;
  %1085 = asin(%1084) /* ty=Tensor[(4, 13, 7), float64] */;
  %1086 = cast(%1085, dtype="float32") /* ty=Tensor[(4, 13, 7), float32] */;
  %1087 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
  %1088 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1089 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %1090 = cast(%var_4407, dtype="int16") /* ty=Tensor[(1, 9), int16] */;
  %1091 = cast(meta[relay.Constant][41] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %1092 = reshape(%1090, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %1093 = reshape(%1091, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %1094 = @func_1903(%1092, %1093) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1095 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1096 = cast(meta[relay.Constant][42] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
  %1097 = reshape(%1095, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %1098 = reshape(%1096, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
  %1099 = @func_3384(%1097, %1098) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1100 = @func_4385() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1101 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1102 = sigmoid(%1086) /* ty=Tensor[(4, 13, 7), float32] */;
  %1103 = %1087.3;
  %1104 = %1088.0;
  %1105 = %1089.1;
  %1106 = %1094.2;
  %1107 = %1099.2;
  %1108 = %1100.0;
  %1109 = %1101.1;
  (%1102, %1103, %1104, %1105, %1106, %var_4407, meta[relay.Constant][41] /* ty=Tensor[(108), int16] */, %1107, meta[relay.Constant][42] /* ty=Tensor[(616), float64] */, %1108, %1109)
}

def @func_4717() -> (Tensor[(32), int64], Tensor[(7, 1, 10), bool]) {
  %1110 = @func_3860() /* ty=(Tensor[(32), int64],) */;
  %1111 = @func_3599() /* ty=(Tensor[(7, 1, 10), bool],) */;
  %1112 = %1110.0;
  %1113 = %1111.0;
  (%1112, %1113)
}

def @func_9022(%var_8998: Tensor[(144), float64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(144), float64]) {
  %1114 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1115 = cast(meta[relay.Constant][43] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1116 = reshape(%1115, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1117 = @func_3801(%1116) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1118 = cast(%var_8998, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1119 = reshape(%1118, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %1120 = @func_3964(%1119) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %1121 = %1114.0;
  %1122 = %1117.0;
  %1123 = %1120.1;
  (%1121, %1122, meta[relay.Constant][43] /* ty=Tensor[(32), int64] */, %1123, %var_8998)
}

def @func_5564(%var_5562: Tensor[(6, 15, 4), uint32]) -> (Tensor[(6, 15, 4), uint32], Tensor[(32), int64]) {
  @func_5561(%var_5562) /* ty=(Tensor[(6, 15, 4), uint32], Tensor[(32), int64]) */
}

def @func_10705(%var_10704: Tensor[(616), float64]) -> (Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
  %1132 = fn (%var_10691: Tensor[(616), float64]) -> (Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) {
    %1124 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %1125 = cast(%var_10691, dtype="float64") /* ty=Tensor[(616), float64] */;
    %1126 = cast(%var_10691, dtype="float64") /* ty=Tensor[(616), float64] */;
    %1127 = reshape(%1125, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %1128 = reshape(%1126, newshape=[4, 14, 11]) /* ty=Tensor[(4, 14, 11), float64] */;
    %1129 = @func_3384(%1127, %1128) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1130 = %1124.0;
    %1131 = %1129.0;
    (%1130, %1131, %var_10691)
  };
  %1132(%var_10704) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */
}

def @func_5124() -> (Tensor[(7, ?, 10), float32],) {
  %1135 = fn () -> (Tensor[(7, ?, 10), float32],) {
    %1133 = @func_4097() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %1134 = %1133.0;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_4040() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  @func_4038() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */
}

def @func_13470() -> (Tensor[(7, 1, 10), float64],) {
  %1136 = @func_13196() /* ty=(Tensor[(7, 1, 10), float64],) */;
  %1137 = %1136.0;
  (%1137,)
}

def @func_19552() -> Tensor[(9), int16] {
  %1139 = fn () -> Tensor[(9), int16] {
    %1138 = @func_15023() /* ty=(Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) */;
    %1138.2
  };
  %1139() /* ty=Tensor[(9), int16] */
}

def @func_16407() -> (Tensor[(7, 1, 10), bool],) {
  @func_16405() /* ty=(Tensor[(7, 1, 10), bool],) */
}

def @func_2546(%var_2545: Tensor[(3, 2, 14), float32]) -> (Tensor[(3, 2, 14), float64],) {
  %1144 = fn (%var_2519: Tensor[(3, 2, 14), float32]) -> (Tensor[(3, 2, 14), float64],) {
    %1140 = cast(%var_2519, dtype="float32") /* ty=Tensor[(3, 2, 14), float32] */;
    %1141 = sqrt(%1140) /* ty=Tensor[(3, 2, 14), float32] */;
    %1142 = cast(%1141, dtype="float64") /* ty=Tensor[(3, 2, 14), float64] */;
    %1143 = sinh(%1142) /* ty=Tensor[(3, 2, 14), float64] */;
    (%1143,)
  };
  %1144(%var_2545) /* ty=(Tensor[(3, 2, 14), float64],) */
}

def @func_18506(%var_18502: Tensor[(14, 5, 14), float64]) -> (Tensor[(14, 5, 14), float64],) {
  %1145 = cast(%var_18502, dtype="float64") /* ty=Tensor[(14, 5, 14), float64] */;
  %1146 = acos(%1145) /* ty=Tensor[(14, 5, 14), float64] */;
  (%1146,)
}

def @func_5770() -> Tensor[(32), int64] {
  @func_5768() /* ty=Tensor[(32), int64] */
}

def @func_3229() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) {
  @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */
}

def @func_1143(%var_1141: Tensor[(2, 4, 4), int64], %var_1142: Tensor[(2, 4, 4), int64]) -> Tensor[(2, 4, 4), int64] {
  @func_1139(%var_1141, %var_1142) /* ty=Tensor[(2, 4, 4), int64] */
}

def @func_3474() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_11930() -> Tensor[(7, 1, 10), float64] {
  %1147 = fn () -> Tensor[(7, 1, 10), float64] {
    @func_10505() /* ty=Tensor[(7, 1, 10), float64] */
  };
  %1147() /* ty=Tensor[(7, 1, 10), float64] */
}

def @func_7111() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(630), uint16]) {
  %1156 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(630), uint16]) {
    %1148 = @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
    %1149 = cast(meta[relay.Constant][44] /* ty=Tensor[(630), uint16] */, dtype="uint16") /* ty=Tensor[(630), uint16] */;
    %1150 = reshape(%1149, newshape=[7, 9, 10]) /* ty=Tensor[(7, 9, 10), uint16] */;
    %1151 = @func_4838(%1150) /* ty=(Tensor[(7, 9, 10), int32], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), float64]) */;
    %1152 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1153 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1154 = %1148.2;
    %1155 = %1151.1;
    (%1152, %1153, %1154, %1155, meta[relay.Constant][44] /* ty=Tensor[(630), uint16] */)
  };
  %1156() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(630), uint16]) */
}

def @func_18050() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
  %1167 = fn () -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(32), int64]) {
    %1157 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
    %1158 = @func_14680() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1159 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1160 = @func_3011() /* ty=(Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
    %1161 = @func_17751() /* ty=(Tensor[(32), int64],) */;
    %1162 = %1157.0;
    %1163 = %1158.0;
    %1164 = %1159.0;
    %1165 = %1160.2;
    %1166 = %1161.0;
    (%1162, %1163, %1164, %1165, %1166)
  };
  %1167() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */
}

def @func_5008() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %1168 = cast(meta[relay.Constant][45] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1169 = reshape(%1168, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1170 = @func_3801(%1169) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1171 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1172 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1173 = %1170.1;
  (%1171, %1172, %1173, meta[relay.Constant][45] /* ty=Tensor[(32), int64] */)
}

def @func_9286() -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) {
  %1179 = fn () -> (Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) {
    %1174 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
    %1175 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
    %1176 = %1174.1;
    %1177 = @func_6882() /* ty=Tensor[(32), int64] */;
    %1178 = %1175.0;
    (%1176, %1177, %1178)
  };
  %1179() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64], Tensor[(32), int64]) */
}

def @func_14445() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) {
  @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */
}

def @func_6236() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1180 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1181 = @func_5049() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1180, %1181)
}

def @func_18638() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1182 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1183 = @func_14696() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1184 = %1182.0;
  %1185 = %1183.2;
  (%1184, %1185)
}

def @func_16905() -> (Tensor[(7, ?, 10), uint32],) {
  @func_16903() /* ty=(Tensor[(7, ?, 10), uint32],) */
}

def @func_6861() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %1190 = fn () -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
    %1186 = @func_5373() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1187 = @func_4796() /* ty=Tensor[(32), int64] */;
    %1188 = %1186.0;
    %1189 = @func_4796() /* ty=Tensor[(32), int64] */;
    (%1187, %1188, %1189)
  };
  %1190() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */
}

def @func_17560() -> (Tensor[(7, 1, 10), float64], Tensor[(32), int64]) {
  @func_17558() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(32), int64]) */
}

def @func_19715(%var_19713: Tensor[(11, 6, 7), int64], %var_19714: Tensor[(11, 6, 7), int64]) -> (Tensor[(11, 6, 7), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), bool], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %1212 = fn (%var_19646: Tensor[(11, 6, 7), int64], %var_19647: Tensor[(11, 6, 7), int64]) -> (Tensor[(11, 6, 7), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), bool], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
    %1191 = cast(%var_19647, dtype="int64") /* ty=Tensor[(11, 6, 7), int64] */;
    %1192 = shape_of(%var_19646, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1193 = cast(%var_19646, dtype="int64") /* ty=Tensor[(11, 6, 7), int64] */;
    %1194 = dyn.reshape(%1191, %1192, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1195 = @func_14680() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1196 = cast(meta[relay.Constant][46] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
    %1197 = reshape(%1196, newshape=[9, 1]) /* ty=Tensor[(9, 1), int16] */;
    %1198 = @func_16705(%1197) /* ty=(Tensor[(32), int64], Tensor[(7, 9, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, 364, 10), bool]) */;
    %1199 = @func_8205() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1200 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %1201 = @func_15793() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %1202 = @func_4133() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1203 = minimum(%1193, %1194) /* ty=Tensor[(11, 6, 7), int64] */;
    %1204 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1205 = %1195.1;
    %1206 = %1198.1;
    %1207 = @func_9378() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1208 = %1199.0;
    %1209 = %1200.0;
    %1210 = %1201.0;
    %1211 = %1202.0;
    (%1203, %1204, %1205, %1206, meta[relay.Constant][46] /* ty=Tensor[(9), int16] */, %1207, %1208, %1209, %1210, %1211)
  };
  %1212(%var_19713, %var_19714) /* ty=(Tensor[(11, 6, 7), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 9, 10), bool], Tensor[(9), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_3435() -> (Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) {
  %1213 = @func_3227() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), float32]) */;
  %1214 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1215 = %1213.0;
  %1216 = %1214.0;
  (%1215, %1216)
}

def @func_3801(%var_3774: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1217 = cast(%var_3774, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1218 = cast(%var_3774, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1219 = reshape(%1217, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1220 = reshape(%1218, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1221 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1222 = @func_1139(%1219, %1220) /* ty=Tensor[(2, 4, 4), int64] */;
  %1223 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1221, %1222, %var_3774, %1223)
}

def @func_9380() -> Tensor[(7, ?, 10), uint16] {
  @func_9378() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_5141() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1228 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %1224 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1225 = @func_2703() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1226 = %1224.0;
    %1227 = %1225.0;
    (%1226, %1227)
  };
  %1228() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_3149() -> Tensor[(7, ?, 10), uint16] {
  %1229 = fn () -> Tensor[(7, ?, 10), uint16] {
    @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */
  };
  %1229() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_10310() -> (Tensor[(7, ?, 10), uint16],) {
  %1232 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %1230 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
    %1231 = %1230.0;
    (%1231,)
  };
  %1232() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_5049() -> Tensor[(7, ?, 10), uint16] {
  @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_1139(%var_1124: Tensor[(2, 4, 4), int64], %var_1125: Tensor[(2, 4, 4), int64]) -> Tensor[(2, 4, 4), int64] {
  %1233 = cast(%var_1125, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %1234 = shape_of(%var_1124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1235 = cast(%var_1124, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %1236 = dyn.reshape(%1233, %1234, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  bitwise_xor(%1235, %1236) /* ty=Tensor[(2, 4, 4), int64] */
}

def @func_11364() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(616), float64], Tensor[(7, 8, 6), float64]) {
  %1245 = fn () -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(616), float64], Tensor[(7, 8, 6), float64]) {
    %1237 = @func_6125() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %1238 = cast(meta[relay.Constant][47] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %1239 = reshape(%1238, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %1240 = @func_10703(%1239) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
    %1241 = @func_10887() /* ty=(Tensor[(7, 8, 6), float64],) */;
    %1242 = %1237.0;
    %1243 = %1240.0;
    %1244 = %1241.0;
    (%1242, %1243, meta[relay.Constant][47] /* ty=Tensor[(616), float64] */, %1244)
  };
  %1245() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), float32], Tensor[(616), float64], Tensor[(7, 8, 6), float64]) */
}

def @func_9298(%var_9287: Tensor[(10, 14, 4), float32]) -> (Tensor[(10, 14, 4), float32], Tensor[(7, ?, 10), uint16], Tensor[(9), int16]) {
  %1246 = cast(%var_9287, dtype="float32") /* ty=Tensor[(10, 14, 4), float32] */;
  %1247 = sinh(%1246) /* ty=Tensor[(10, 14, 4), float32] */;
  %1248 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1249 = @func_8620() /* ty=Tensor[(9), int16] */;
  (%1247, %1248, %1249)
}

def @func_17244() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %1250 = @func_10767() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(32), int64]) */;
  %1251 = %1250.0;
  %1252 = @func_3502() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1251, %1252)
}

def @func_16343() -> Tensor[(7, ?, 10), float32] {
  %1254 = fn () -> Tensor[(7, ?, 10), float32] {
    %1253 = @func_15793() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %1253.0
  };
  %1254() /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_14049() -> Tensor[(7, ?, 10), uint16] {
  @func_11730() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_5010() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  @func_5008() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */
}

def @func_4307() -> (Tensor[(7, ?, 10), uint16],) {
  %1255 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1256 = %1255.0;
  (%1256,)
}

def @func_3910() -> Tensor[(7, ?, 10), uint16] {
  @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_12273() -> (Tensor[(7, 14, 10), uint16], Tensor[(3, 16, 3), bool], Tensor[(4, 36), float64]) {
  %1266 = fn () -> (Tensor[(7, 14, 10), uint16], Tensor[(3, 16, 3), bool], Tensor[(4, 36), float64]) {
    %1257 = @func_6207() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1258 = %1257.0;
    %1259 = cast(%1258, dtype="uint16") /* ty=Tensor[(7, ?, 10), uint16] */;
    %1260 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 14, 10), uint16] */, dtype="uint16") /* ty=Tensor[(7, 14, 10), uint16] */;
    %1261 = cast(meta[relay.Constant][49] /* ty=Tensor[(4, 36), float64] */, dtype="float64") /* ty=Tensor[(4, 36), float64] */;
    %1262 = reshape(%1261, newshape=[3, 16, 3]) /* ty=Tensor[(3, 16, 3), float64] */;
    %1263 = @func_4204(%1262) /* ty=(Tensor[(3, 16, 3), bool],) */;
    %1264 = maximum(%1259, %1260) /* ty=Tensor[(7, 14, 10), uint16] */;
    %1265 = %1263.0;
    (%1264, %1265, meta[relay.Constant][49] /* ty=Tensor[(4, 36), float64] */)
  };
  %1266() /* ty=(Tensor[(7, 14, 10), uint16], Tensor[(3, 16, 3), bool], Tensor[(4, 36), float64]) */
}

def @func_3804(%var_3802: Tensor[(32), int64]) -> (Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  @func_3801(%var_3802) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_10487() -> Tensor[(7, ?, 10), uint16] {
  @func_6650() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_13943() -> Tensor[(7, ?, 10), uint16] {
  %1267 = @func_9799() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1267.0
}

def @func_15209(%var_15207: Tensor[(7, 12, 10), uint16]) -> (Tensor[(7, 12, 10), float32], Tensor[(7, 1, 10), float64]) {
  @func_15206(%var_15207) /* ty=(Tensor[(7, 12, 10), float32], Tensor[(7, 1, 10), float64]) */
}

def @func_18662() -> (Tensor[(7, ?, 10), uint16],) {
  %1268 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %1269 = %1268.1;
  (%1269,)
}

def @func_14026() -> (Tensor[(7, ?, 10), float32],) {
  @func_14024() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_6145() -> (Tensor[(7, 1, 10), bool],) {
  %1270 = @func_4717() /* ty=(Tensor[(32), int64], Tensor[(7, 1, 10), bool]) */;
  %1271 = %1270.1;
  (%1271,)
}

def @func_17518() -> (Tensor[(7, ?, 10), uint16],) {
  %1273 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %1272 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1272,)
  };
  %1273() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_18524() -> (Tensor[(7, 1, 10), bool],) {
  %1274 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1275 = %1274.1;
  (%1275,)
}

def @func_13945() -> Tensor[(7, ?, 10), uint16] {
  @func_13943() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_6147() -> (Tensor[(7, 1, 10), bool],) {
  @func_6145() /* ty=(Tensor[(7, 1, 10), bool],) */
}

def @func_15647(%var_15623: Tensor[(9), int16]) -> (Tensor[(7, 8, 6), float64], Tensor[(1, 364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16]) {
  %1276 = @func_12031() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) */;
  %1277 = %1276.1;
  %1278 = cast(%1277, dtype="float64") /* ty=Tensor[(7, 8, 6), float64] */;
  %1279 = cast(%var_15623, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1280 = reshape(%1279, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %1281 = @func_12539(%1280) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) */;
  %1282 = @func_5970() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1283 = asinh(%1278) /* ty=Tensor[(7, 8, 6), float64] */;
  %1284 = %1281.2;
  %1285 = %1282.0;
  (%1283, %1284, %var_15623, %1285)
}

def @func_10977() -> (Tensor[(7, ?, 10), uint16],) {
  %1286 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1287 = %1286.0;
  (%1287,)
}

def @func_12488() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1288 = @func_7200() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1289 = @func_3910() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1290 = @func_6882() /* ty=Tensor[(32), int64] */;
  %1291 = %1288.0;
  (%1289, %1290, %1291)
}

def @func_2439(%var_2334: Tensor[(32), int64], %var_2370: Tensor[(7, 5, 10), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) {
  %1292 = cast(meta[relay.Constant][50] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1293 = cast(meta[relay.Constant][51] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %1294 = reshape(%1292, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %1295 = reshape(%1293, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %1296 = @func_1903(%1294, %1295) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1297 = @func_2267() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */;
  %1298 = %1297.1;
  %1299 = cast(%1298, dtype="int8") /* ty=Tensor[(7, 1, 10), int8] */;
  %1300 = cast(%var_2370, dtype="int8") /* ty=Tensor[(7, 5, 10), int8] */;
  %1301 = %1296.2;
  %1302 = cast(%1301, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1303 = cast(%1301, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1304 = reshape(%1302, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1305 = reshape(%1303, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1306 = cast(%var_2334, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1307 = cast(%var_2334, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1308 = reshape(%1306, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1309 = reshape(%1307, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1310 = @func_1139(%1308, %1309) /* ty=Tensor[(2, 4, 4), int64] */;
  %1311 = cast(%1310, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %1312 = asinh(%1311) /* ty=Tensor[(2, 4, 4), float64] */;
  %1313 = cast(%1312, dtype="int64") /* ty=Tensor[(2, 4, 4), int64] */;
  %1314 = cast(meta[relay.Constant][50] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1315 = cast(meta[relay.Constant][51] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %1316 = reshape(%1314, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %1317 = reshape(%1315, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %1318 = @func_1903(%1316, %1317) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1319 = %1318.2;
  %1320 = cast(%1319, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1321 = reshape(%1313, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1322 = reshape(%1320, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
  %1323 = cast(%1319, dtype="float32") /* ty=Tensor[(32), float32] */;
  %1324 = shape_of(%1312, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1325 = cast(%1312, dtype="float32") /* ty=Tensor[(2, 4, 4), float32] */;
  %1326 = dyn.reshape(%1323, %1324, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1327 = floor_mod(%1325, %1326) /* ty=Tensor[(2, 4, 4), float32] */;
  %1328 = cast(%1327, dtype="float64") /* ty=Tensor[(2, 4, 4), float64] */;
  %1329 = cast(meta[relay.Constant][50] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1330 = cast(meta[relay.Constant][51] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %1331 = reshape(%1329, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %1332 = reshape(%1330, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %1333 = @func_1903(%1331, %1332) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1334 = cast(meta[relay.Constant][50] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1335 = cast(meta[relay.Constant][51] /* ty=Tensor[(108), int16] */, dtype="int16") /* ty=Tensor[(108), int16] */;
  %1336 = reshape(%1334, newshape=[1, 9, 1]) /* ty=Tensor[(1, 9, 1), int16] */;
  %1337 = reshape(%1335, newshape=[12, 9, 1]) /* ty=Tensor[(12, 9, 1), int16] */;
  %1338 = @func_1903(%1336, %1337) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */;
  %1339 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1340 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1341 = left_shift(%1299, %1300) /* ty=Tensor[(7, 5, 10), int8] */;
  %1342 = @func_1139(%1304, %1305) /* ty=Tensor[(2, 4, 4), int64] */;
  %1343 = @func_1139(%1321, %1322) /* ty=Tensor[(2, 4, 4), int64] */;
  %1344 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1345 = sigmoid(%1328) /* ty=Tensor[(2, 4, 4), float64] */;
  %1346 = %1333.2;
  %1347 = %1338.0;
  (%1339, %var_2334, %1301, meta[relay.Constant][50] /* ty=Tensor[(9), int16] */, meta[relay.Constant][51] /* ty=Tensor[(108), int16] */, %1340, %1341, %1342, %1343, %1344, %1345, %1346, %1347)
}

def @func_10330() -> Tensor[(7, ?, 10), uint16] {
  @func_10328() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_11107() -> Tensor[(7, ?, 10), uint16] {
  @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_18419() -> Tensor[(7, ?, 10), uint16] {
  @func_6924() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_15364() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  %1348 = @func_13571() /* ty=(Tensor[(32), int64],) */;
  %1349 = @func_3264() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1350 = %1348.0;
  (%1349, %1350)
}

def @func_14051() -> Tensor[(7, ?, 10), uint16] {
  @func_14049() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_19423() -> Tensor[(7, 1, 10), bool] {
  %1352 = fn () -> Tensor[(7, 1, 10), bool] {
    %1351 = @func_11332() /* ty=(Tensor[(7, 1, 10), bool],) */;
    %1351.0
  };
  %1352() /* ty=Tensor[(7, 1, 10), bool] */
}

def @func_6274() -> Tensor[(7, ?, 10), float32] {
  %1353 = @func_3148() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1354 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1355 = cast(%1354, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %1356 = shape_of(%1353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1357 = cast(%1353, dtype="float32") /* ty=Tensor[(7, ?, 10), float32] */;
  %1358 = dyn.reshape(%1355, %1356, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  power(%1357, %1358) /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_19351() -> (Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) {
  @func_19349() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */
}

def @func_18509(%var_18507: Tensor[(14, 5, 14), float64]) -> (Tensor[(14, 5, 14), float64],) {
  @func_18506(%var_18507) /* ty=(Tensor[(14, 5, 14), float64],) */
}

def @func_4573(%var_4572: Tensor[(32), int64]) -> (Tensor[(32), int64], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), bool], Tensor[(350), bool]) {
  %1379 = fn (%var_4518: Tensor[(32), int64]) -> (Tensor[(32), int64], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), bool], Tensor[(350), bool]) {
    %1359 = cast(%var_4518, dtype="int64") /* ty=Tensor[(32), int64] */;
    %1360 = reshape(%1359, newshape=[32]) /* ty=Tensor[(32), int64] */;
    %1361 = @func_3801(%1360) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
    %1362 = %1361.3;
    %1363 = @func_4133() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1364 = %1363.0;
    %1365 = cast(%1364, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
    %1366 = shape_of(%1362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1367 = cast(%1362, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
    %1368 = dyn.reshape(%1365, %1366, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1369 = cast(%1364, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %1370 = shape_of(%1362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1371 = cast(%1362, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %1372 = dyn.reshape(%1369, %1370, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1373 = cast(%var_4518, dtype="int64") /* ty=Tensor[(32), int64] */;
    %1374 = reshape(%1373, newshape=[32, 1]) /* ty=Tensor[(32, 1), int64] */;
    %1375 = @func_2681(%1374) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32, 1), int64], Tensor[(350), bool], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %1376 = divide(%1367, %1368) /* ty=Tensor[(7, ?, 10), float64] */;
    %1377 = logical_and(%1371, %1372) /* ty=Tensor[(7, ?, 10), bool] */;
    %1378 = %1375.4;
    (%var_4518, %1376, %1377, %1378)
  };
  %1379(%var_4572) /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), bool], Tensor[(350), bool]) */
}

def @func_17990() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(210), float32]) {
  @func_17988() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(210), float32]) */
}

def @func_18421() -> Tensor[(7, ?, 10), uint16] {
  @func_18419() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_19093() -> Tensor[(7, 1, 10), float64] {
  @func_19091() /* ty=Tensor[(7, 1, 10), float64] */
}

def @func_4134() -> (Tensor[(7, ?, 10), uint16],) {
  %1382 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %1380 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1381 = %1380.0;
    (%1381,)
  };
  %1382() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_10845() -> Tensor[(7, ?, 10), uint16] {
  %1383 = @func_5140() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1383.0
}

def @func_17558() -> (Tensor[(7, 1, 10), float64], Tensor[(32), int64]) {
  %1384 = @func_13764() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1385 = @func_13984() /* ty=(Tensor[(32), int64],) */;
  %1386 = %1384.0;
  %1387 = %1385.0;
  (%1386, %1387)
}

def @func_16903() -> (Tensor[(7, ?, 10), uint32],) {
  %1388 = @func_16272() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), bool], Tensor[(7, ?, 10), uint32]) */;
  %1389 = %1388.4;
  (%1389,)
}

def @func_8858() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(350), bool], Tensor[(7, ?, 10), float32]) {
  @func_8856() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(350), bool], Tensor[(7, ?, 10), float32]) */
}

def @func_17391() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64]) {
  @func_17389() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64]) */
}

def @func_3921() -> (Tensor[(7, ?, 10), uint16],) {
  %1391 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %1390 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1390,)
  };
  %1391() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_8521() -> Tensor[(7, 1, 10), bool] {
  @func_8519() /* ty=Tensor[(7, 1, 10), bool] */
}

def @func_12808() -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
  %1394 = fn () -> (Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) {
    %1392 = @func_6274() /* ty=Tensor[(7, ?, 10), float32] */;
    %1393 = @func_3474() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1392, %1393)
  };
  %1394() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_15024() -> (Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) {
  %1401 = fn () -> (Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) {
    %1395 = @func_13571() /* ty=(Tensor[(32), int64],) */;
    %1396 = cast(meta[relay.Constant][52] /* ty=Tensor[(9), int16] */, dtype="int16") /* ty=Tensor[(9), int16] */;
    %1397 = reshape(%1396, newshape=[9]) /* ty=Tensor[(9), int16] */;
    %1398 = @func_12539(%1397) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(1, 9), int16], Tensor[(1, 364), float64], Tensor[(9), int16]) */;
    %1399 = %1395.0;
    %1400 = %1398.3;
    (%1399, %1400, meta[relay.Constant][52] /* ty=Tensor[(9), int16] */)
  };
  %1401() /* ty=(Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) */
}

def @func_7724(%var_7701: Tensor[(350), bool]) -> (Tensor[(15, 13, 7), float32], Tensor[(32), int64], Tensor[(12, 9, 350), uint8], Tensor[(7, ?, 10), uint16]) {
  %1402 = cast(meta[relay.Constant][53] /* ty=Tensor[(15, 13, 7), float32] */, dtype="float32") /* ty=Tensor[(15, 13, 7), float32] */;
  %1403 = @func_3193() /* ty=Tensor[(32), int64] */;
  %1404 = cast(%1403, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1405 = cast(%var_7701, dtype="bool") /* ty=Tensor[(350), bool] */;
  %1406 = reshape(%1404, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1407 = reshape(%1405, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
  %1408 = @func_2439(%1406, %1407) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
  %1409 = %1408.12;
  %1410 = cast(%1409, dtype="uint8") /* ty=Tensor[(12, 9, ?), uint8] */;
  %1411 = cast(%var_7701, dtype="uint8") /* ty=Tensor[(350), uint8] */;
  %1412 = @func_6605() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1413 = log(%1402) /* ty=Tensor[(15, 13, 7), float32] */;
  %1414 = left_shift(%1410, %1411) /* ty=Tensor[(12, 9, 350), uint8] */;
  %1415 = %1412.0;
  (%1413, %1403, %1414, %1415)
}

def @func_8205() -> (Tensor[(7, ?, 10), uint16],) {
  %1416 = @func_3978() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1416,)
}

def @func_15366() -> (Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) {
  @func_15364() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */
}

def @func_4351() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), uint16]) {
  %1417 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %1418 = @func_3088() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1419 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %1420 = %1419.0;
  %1421 = cast(%1420, dtype="int16") /* ty=Tensor[(7, 1, 10), int16] */;
  %1422 = shape_of(%1418, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1423 = cast(%1418, dtype="int16") /* ty=Tensor[(7, ?, 10), int16] */;
  %1424 = dyn.reshape(%1421, %1422, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1425 = left_shift(%1423, %1424) /* ty=Tensor[(7, ?, 10), int16] */;
  %1426 = cast(%1425, dtype="float64") /* ty=Tensor[(7, ?, 10), float64] */;
  %1427 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1428 = %1417.1;
  %1429 = rsqrt(%1426) /* ty=Tensor[(7, ?, 10), float64] */;
  %1430 = %1427.0;
  (%1428, %1429, %1430)
}

def @func_16016() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1437 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %1431 = @func_4897() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1432 = @func_12697() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
    %1433 = @func_12050() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1434 = %1431.0;
    %1435 = %1432.2;
    %1436 = %1433.0;
    (%1434, %1435, %1436)
  };
  %1437() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_6346() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1438 = @func_4897() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1439 = @func_5123() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1440 = cast(meta[relay.Constant][54] /* ty=Tensor[(144), float64] */, dtype="float64") /* ty=Tensor[(144), float64] */;
  %1441 = reshape(%1440, newshape=[1, 16, 9]) /* ty=Tensor[(1, 16, 9), float64] */;
  %1442 = @func_3964(%1441) /* ty=(Tensor[(1, 16, 9), float64], Tensor[(7, ?, 10), uint16]) */;
  %1443 = %1438.0;
  %1444 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1445 = %1439.0;
  %1446 = %1442.1;
  %1447 = @func_3193() /* ty=Tensor[(32), int64] */;
  %1448 = @func_2922() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1443, %1444, %1445, %1446, meta[relay.Constant][54] /* ty=Tensor[(144), float64] */, %1447, %1448)
}

def @func_1906(%var_1904: Tensor[(1, 9, 1), int16], %var_1905: Tensor[(12, 9, 1), int16]) -> (Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
  %1462 = fn (%var_1871: Tensor[(1, 9, 1), int16], %var_1872: Tensor[(12, 9, 1), int16]) -> (Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) {
    %1449 = cast(%var_1871, dtype="bool") /* ty=Tensor[(1, 9, 1), bool] */;
    %1450 = cast(%var_1872, dtype="bool") /* ty=Tensor[(12, 9, 1), bool] */;
    %1451 = greater_equal(%1449, %1450) /* ty=Tensor[(12, 9, 1), bool] */;
    %1452 = cast(%1451, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %1453 = shape_of(%var_1872, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1454 = cast(%var_1872, dtype="uint8") /* ty=Tensor[(12, 9, 1), uint8] */;
    %1455 = dyn.reshape(%1452, %1453, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1456 = cast(meta[relay.Constant][55] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
    %1457 = cast(meta[relay.Constant][55] /* ty=Tensor[(32), int64] */, dtype="int64") /* ty=Tensor[(32), int64] */;
    %1458 = reshape(%1456, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
    %1459 = reshape(%1457, newshape=[2, 4, 4]) /* ty=Tensor[(2, 4, 4), int64] */;
    %1460 = bitwise_xor(%1454, %1455) /* ty=Tensor[(12, 9, ?), uint8] */;
    %1461 = @func_1139(%1458, %1459) /* ty=Tensor[(2, 4, 4), int64] */;
    (%1460, %1461, meta[relay.Constant][55] /* ty=Tensor[(32), int64] */)
  };
  %1462(%var_1904, %var_1905) /* ty=(Tensor[(12, 9, ?), uint8], Tensor[(2, 4, 4), int64], Tensor[(32), int64]) */
}

def @func_13347() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1475 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %1463 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1464 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1465 = @func_11332() /* ty=(Tensor[(7, 1, 10), bool],) */;
    %1466 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1467 = %1463.0;
    %1468 = @func_11506() /* ty=Tensor[(7, ?, 10), float32] */;
    %1469 = @func_5077() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1470 = %1464.0;
    %1471 = @func_3193() /* ty=Tensor[(32), int64] */;
    %1472 = %1465.0;
    %1473 = @func_12741() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1474 = %1466.0;
    (%1467, %1468, %1469, %1470, %1471, %1472, %1473, %1474)
  };
  %1475() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_6631() -> Tensor[(7, 1, 10), float64] {
  %1477 = fn () -> Tensor[(7, 1, 10), float64] {
    %1476 = @func_5181() /* ty=(Tensor[(7, 1, 10), float64],) */;
    %1476.0
  };
  %1477() /* ty=Tensor[(7, 1, 10), float64] */
}

def @func_10979() -> (Tensor[(7, ?, 10), uint16],) {
  @func_10977() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_13472() -> (Tensor[(7, 1, 10), float64],) {
  @func_13470() /* ty=(Tensor[(7, 1, 10), float64],) */
}

def @func_15432() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool], Tensor[(32), int64]) {
  %1478 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %1479 = @func_14443() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
  %1480 = @func_10309() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1481 = @func_3435() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, ?, 10), uint16]) */;
  %1482 = @func_14563() /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1483 = @func_13943() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1484 = %1478.1;
  %1485 = %1479.2;
  %1486 = %1480.0;
  %1487 = %1481.0;
  %1488 = %1482.1;
  (%1483, %1484, %1485, %1486, %1487, %1488)
}

def @func_18012() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32]) {
  %1491 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32]) {
    %1489 = @func_14049() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1490 = @func_11506() /* ty=Tensor[(7, ?, 10), float32] */;
    (%1489, %1490)
  };
  %1491() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32]) */
}

def @func_15497() -> (Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_15495() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_10576() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1492 = @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1493 = @func_3920() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1494 = %1492.1;
  %1495 = %1493.0;
  (%1494, %1495)
}

def @func_18526() -> (Tensor[(7, 1, 10), bool],) {
  @func_18524() /* ty=(Tensor[(7, 1, 10), bool],) */
}

def @func_15794() -> (Tensor[(7, ?, 10), float32],) {
  %1498 = fn () -> (Tensor[(7, ?, 10), float32],) {
    %1496 = @func_14024() /* ty=(Tensor[(7, ?, 10), float32],) */;
    %1497 = %1496.0;
    (%1497,)
  };
  %1498() /* ty=(Tensor[(7, ?, 10), float32],) */
}

def @func_14176() -> (Tensor[(32), int64], Tensor[(7, ?, 10), float64]) {
  %1505 = fn () -> (Tensor[(32), int64], Tensor[(7, ?, 10), float64]) {
    %1499 = @func_10404() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %1500 = %1499.2;
    %1501 = cast(%1500, dtype="int64") /* ty=Tensor[(32), int64] */;
    %1502 = reshape(%1501, newshape=[32]) /* ty=Tensor[(32), int64] */;
    %1503 = @func_4571(%1502) /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64], Tensor[(7, ?, 10), bool], Tensor[(350), bool]) */;
    %1504 = %1503.1;
    (%1500, %1504)
  };
  %1505() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), float64]) */
}

def @func_18385(%var_18383: Tensor[(7, 15, 10), uint16], %var_18384: Tensor[(7, 15, 10), uint16]) -> (Tensor[(7, 15, 10), bool], Tensor[(32), int64], Tensor[(7, 15, 10), float64], Tensor[(2, 4, 4), float32], Tensor[(4, 5, 13), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 14, 11), float64], Tensor[(154, 4), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1533 = fn (%var_18277: Tensor[(7, 15, 10), uint16], %var_18315: Tensor[(7, 15, 10), uint16]) -> (Tensor[(7, 15, 10), bool], Tensor[(32), int64], Tensor[(7, 15, 10), float64], Tensor[(2, 4, 4), float32], Tensor[(4, 5, 13), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 14, 11), float64], Tensor[(154, 4), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %1506 = @func_7232() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1507 = %1506.0;
    %1508 = cast(%1507, dtype="bool") /* ty=Tensor[(7, ?, 10), bool] */;
    %1509 = cast(%var_18277, dtype="bool") /* ty=Tensor[(7, 15, 10), bool] */;
    %1510 = @func_15023() /* ty=(Tensor[(32), int64], Tensor[(9), int16], Tensor[(9), int16]) */;
    %1511 = cast(%var_18315, dtype="float64") /* ty=Tensor[(7, 15, 10), float64] */;
    %1512 = shape_of(%var_18277, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1513 = cast(%var_18277, dtype="float64") /* ty=Tensor[(7, 15, 10), float64] */;
    %1514 = dyn.reshape(%1511, %1512, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1515 = @func_17389() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64]) */;
    %1516 = %1515.2;
    %1517 = cast(%1516, dtype="float32") /* ty=Tensor[(2, 4, 4), float32] */;
    %1518 = @func_17422() /* ty=(Tensor[(4, 5, 13), float64],) */;
    %1519 = @func_10977() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1520 = cast(meta[relay.Constant][56] /* ty=Tensor[(154, 4), float64] */, dtype="float64") /* ty=Tensor[(154, 4), float64] */;
    %1521 = reshape(%1520, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %1522 = @func_10703(%1521) /* ty=(Tensor[(7, ?, 10), float32], Tensor[(4, 14, 11), float64], Tensor[(616), float64]) */;
    %1523 = @func_10925() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
    %1524 = less_equal(%1508, %1509) /* ty=Tensor[(7, 15, 10), bool] */;
    %1525 = %1510.0;
    %1526 = floor_mod(%1513, %1514) /* ty=Tensor[(7, 15, 10), float64] */;
    %1527 = acosh(%1517) /* ty=Tensor[(2, 4, 4), float32] */;
    %1528 = %1518.0;
    %1529 = %1519.0;
    %1530 = %1522.1;
    %1531 = %1523.0;
    %1532 = @func_10117() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1524, %1525, %1526, %1527, %1528, %1529, %1530, meta[relay.Constant][56] /* ty=Tensor[(154, 4), float64] */, %1531, %1532)
  };
  %1533(%var_18383, %var_18384) /* ty=(Tensor[(7, 15, 10), bool], Tensor[(32), int64], Tensor[(7, 15, 10), float64], Tensor[(2, 4, 4), float32], Tensor[(4, 5, 13), float64], Tensor[(7, ?, 10), uint16], Tensor[(4, 14, 11), float64], Tensor[(154, 4), float64], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_13743(%var_13741: Tensor[(189), int16], %var_13742: Tensor[(9), int16]) -> (Tensor[(7, 1, 10), bool], Tensor[(9), int16], Tensor[(616), float64], Tensor[(189), int16], Tensor[(9), int16]) {
  %1544 = fn (%var_13705: Tensor[(189), int16], %var_13706: Tensor[(9), int16]) -> (Tensor[(7, 1, 10), bool], Tensor[(9), int16], Tensor[(616), float64], Tensor[(189), int16], Tensor[(9), int16]) {
    %1534 = @func_11332() /* ty=(Tensor[(7, 1, 10), bool],) */;
    %1535 = cast(meta[relay.Constant][57] /* ty=Tensor[(616), float64] */, dtype="float64") /* ty=Tensor[(616), float64] */;
    %1536 = cast(%var_13705, dtype="int16") /* ty=Tensor[(189), int16] */;
    %1537 = cast(%var_13706, dtype="int16") /* ty=Tensor[(9), int16] */;
    %1538 = reshape(%1535, newshape=[616]) /* ty=Tensor[(616), float64] */;
    %1539 = reshape(%1536, newshape=[3, 63]) /* ty=Tensor[(3, 63), int16] */;
    %1540 = reshape(%1537, newshape=[9]) /* ty=Tensor[(9), int16] */;
    %1541 = @func_6108(%1538, %1539, %1540) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), float32], Tensor[(616), float64], Tensor[(32), int64], Tensor[(32), int64], Tensor[(108), int16], Tensor[(3, 63), int16], Tensor[(9), int16], Tensor[(7, 1, 10), bool]) */;
    %1542 = %1534.0;
    %1543 = %1541.7;
    (%1542, %1543, meta[relay.Constant][57] /* ty=Tensor[(616), float64] */, %var_13705, %var_13706)
  };
  %1544(%var_13741, %var_13742) /* ty=(Tensor[(7, 1, 10), bool], Tensor[(9), int16], Tensor[(616), float64], Tensor[(189), int16], Tensor[(9), int16]) */
}

def @func_18734() -> (Tensor[(7, ?, 10), uint16],) {
  @func_18732() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_14024() -> (Tensor[(7, ?, 10), float32],) {
  %1545 = @func_12593() /* ty=(Tensor[(7, ?, 10), float32],) */;
  %1546 = %1545.0;
  (%1546,)
}

def @func_11726(%var_11724: Tensor[(32), int64], %var_11725: Tensor[(350), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(32), float32], Tensor[(32), int64], Tensor[(350), bool], Tensor[(32), int64], bool, Tensor[(210), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1572 = fn (%var_11681: Tensor[(32), int64], %var_11688: Tensor[(350), bool]) -> (Tensor[(7, ?, 10), uint16], Tensor[(32), float32], Tensor[(32), int64], Tensor[(350), bool], Tensor[(32), int64], bool, Tensor[(210), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %1547 = @func_5071() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1548 = @func_7350() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64]) */;
    %1549 = %1548.1;
    %1550 = cast(%var_11681, dtype="float32") /* ty=Tensor[(32), float32] */;
    %1551 = shape_of(%1549, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1552 = cast(%1549, dtype="float32") /* ty=Tensor[(32), float32] */;
    %1553 = dyn.reshape(%1550, %1551, newshape=[]) /* ty=Tensor[(?), float32] */;
    %1554 = cast(%1549, dtype="int64") /* ty=Tensor[(32), int64] */;
    %1555 = cast(%var_11688, dtype="bool") /* ty=Tensor[(350), bool] */;
    %1556 = reshape(%1554, newshape=[32]) /* ty=Tensor[(32), int64] */;
    %1557 = reshape(%1555, newshape=[7, 5, 10]) /* ty=Tensor[(7, 5, 10), bool] */;
    %1558 = @func_2439(%1556, %1557) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64], Tensor[(32), int64], Tensor[(9), int16], Tensor[(108), int16], Tensor[(7, ?, 10), uint16], Tensor[(7, 5, 10), int8], Tensor[(2, 4, 4), int64], Tensor[(2, 4, 4), int64], Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), float64], Tensor[(32), int64], Tensor[(12, 9, ?), uint8]) */;
    %1559 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %1560 = cast(meta[relay.Constant][58] /* ty=Tensor[(210), bool] */, dtype="bool") /* ty=Tensor[(210), bool] */;
    %1561 = reshape(%1559, newshape=[]) /* ty=bool */;
    %1562 = reshape(%1560, newshape=[3, 7, 10]) /* ty=Tensor[(3, 7, 10), bool] */;
    %1563 = @func_9542(%1561, %1562) /* ty=(Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), int8]) */;
    %1564 = @func_5140() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
    %1565 = %1547.0;
    %1566 = divide(%1552, %1553) /* ty=Tensor[(32), float32] */;
    %1567 = %1558.1;
    %1568 = %1563.0;
    %1569 = %1564.1;
    %1570 = @func_5489() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1571 = @func_10845() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1565, %1566, %1567, %var_11688, %1568, False /* ty=bool */, meta[relay.Constant][58] /* ty=Tensor[(210), bool] */, %1569, %1570, %1571)
  };
  %1572(%var_11724, %var_11725) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), float32], Tensor[(32), int64], Tensor[(350), bool], Tensor[(32), int64], bool, Tensor[(210), bool], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_12743() -> Tensor[(7, ?, 10), uint16] {
  @func_12741() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_13188() -> (Tensor[(7, ?, 10), uint16],) {
  %1575 = fn () -> (Tensor[(7, ?, 10), uint16],) {
    %1573 = @func_2864() /* ty=(Tensor[(7, ?, 10), uint16],) */;
    %1574 = %1573.0;
    (%1574,)
  };
  %1575() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_9542(%var_9488: bool, %var_9489: Tensor[(3, 7, 10), bool]) -> (Tensor[(32), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), float64], Tensor[(7, ?, 10), uint16], Tensor[(3, 7, 10), int8]) {
  %1576 = @func_8218() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1577 = %1576.1;
  %1578 = cast(%1577, dtype="int64") /* ty=Tensor[(32), int64] */;
  %1579 = reshape(%1578, newshape=[32]) /* ty=Tensor[(32), int64] */;
  %1580 = @func_3801(%1579) /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(2, 4, 4), int64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */;
  %1581 = @func_4307() /* ty=(Tensor[(7, ?, 10), uint16],) */;
  %1582 = cast(%var_9489, dtype="float32") /* ty=Tensor[(3, 7, 10), float32] */;
  %1583 = atanh(%1582) /* ty=Tensor[(3, 7, 10), float32] */;
  %1584 = cast(%1583, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %1585 = atan(%1584) /* ty=Tensor[(3, 7, 10), float64] */;
  %1586 = cast(%1585, dtype="float64") /* ty=Tensor[(3, 7, 10), float64] */;
  %1587 = cast(%var_9488, dtype="bool") /* ty=bool */;
  %1588 = cast(%var_9489, dtype="bool") /* ty=Tensor[(3, 7, 10), bool] */;
  %1589 = logical_or(%1587, %1588) /* ty=Tensor[(3, 7, 10), bool] */;
  %1590 = cast(%1589, dtype="int8") /* ty=Tensor[(3, 7, 10), int8] */;
  %1591 = shape_of(%1585, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1592 = cast(%1585, dtype="int8") /* ty=Tensor[(3, 7, 10), int8] */;
  %1593 = dyn.reshape(%1590, %1591, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1594 = %1580.2;
  %1595 = %1581.0;
  %1596 = log(%1586) /* ty=Tensor[(3, 7, 10), float64] */;
  %1597 = @func_6650() /* ty=Tensor[(7, ?, 10), uint16] */;
  %1598 = subtract(%1592, %1593) /* ty=Tensor[(3, 7, 10), int8] */;
  (%1577, %1594, %1595, %1596, %1597, %1598)
}

def @func_13980() -> (Tensor[(32), int64],) {
  @func_13978() /* ty=(Tensor[(32), int64],) */
}

def @func_16859() -> Tensor[(7, ?, 10), float32] {
  %1600 = fn () -> Tensor[(7, ?, 10), float32] {
    %1599 = @func_12807() /* ty=(Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16]) */;
    %1599.0
  };
  %1600() /* ty=Tensor[(7, ?, 10), float32] */
}

def @func_13196() -> (Tensor[(7, 1, 10), float64],) {
  %1601 = @func_8184() /* ty=(Tensor[(7, 1, 10), float64], Tensor[(7, ?, 10), uint16]) */;
  %1602 = %1601.0;
  (%1602,)
}

def @func_2704() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  %1605 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
    %1603 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    %1604 = @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1603, %1604)
  };
  %1605() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_14754(%var_14752: Tensor[(16, 2), int64], %var_14753: Tensor[(9), int16]) -> (Tensor[(7, 10, 10), float64], Tensor[(32), int64], Tensor[(16, 2), int64], Tensor[(60, 2), bool], Tensor[(9), int16], Tensor[(120), float64]) {
  @func_14750(%var_14752, %var_14753) /* ty=(Tensor[(7, 10, 10), float64], Tensor[(32), int64], Tensor[(16, 2), int64], Tensor[(60, 2), bool], Tensor[(9), int16], Tensor[(120), float64]) */
}

def @func_6238() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_6236() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_18157(%var_18112: Tensor[(9), int16]) -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(9), int16], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  %1606 = @func_16335() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */;
  %1607 = cast(%var_18112, dtype="int16") /* ty=Tensor[(9), int16] */;
  %1608 = reshape(%1607, newshape=[9]) /* ty=Tensor[(9), int16] */;
  %1609 = @func_15647(%1608) /* ty=(Tensor[(7, 8, 6), float64], Tensor[(1, 364), float64], Tensor[(9), int16], Tensor[(7, ?, 10), uint16]) */;
  %1610 = @func_6860() /* ty=(Tensor[(32), int64], Tensor[(7, ?, 10), uint16], Tensor[(32), int64]) */;
  %1611 = %1606.1;
  %1612 = %1609.3;
  %1613 = %1610.2;
  %1614 = @func_11009() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1611, %1612, %var_18112, %1613, %1614)
}

def @func_12219() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) {
  @func_12217() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16]) */
}

def @func_18585() -> (Tensor[(7, ?, 10), uint16],) {
  @func_18583() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_2268() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
  %1626 = fn () -> (Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) {
    %1615 = cast(meta[relay.Constant][60] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %1616 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 1, 10), uint64] */, dtype="uint64") /* ty=Tensor[(7, 1, 10), uint64] */;
    %1617 = right_shift(%1615, %1616) /* ty=Tensor[(7, 1, 10), uint64] */;
    %1618 = cast(%1617, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
    %1619 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(7, 1, 10), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1620 = cast(meta[relay.Constant][59] /* ty=Tensor[(7, 1, 10), uint64] */, dtype="uint16") /* ty=Tensor[(7, 1, 10), uint16] */;
    %1621 = dyn.reshape(%1618, %1619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1622 = cast(meta[relay.Constant][60] /* ty=uint64 */, dtype="bool") /* ty=bool */;
    %1623 = cast(%1617, dtype="bool") /* ty=Tensor[(7, 1, 10), bool] */;
    %1624 = subtract(%1620, %1621) /* ty=Tensor[(7, ?, 10), uint16] */;
    %1625 = equal(%1622, %1623) /* ty=Tensor[(7, 1, 10), bool] */;
    (%1624, %1625)
  };
  %1626() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, 1, 10), bool]) */
}

def @func_6651() -> Tensor[(7, ?, 10), uint16] {
  %1627 = fn () -> Tensor[(7, ?, 10), uint16] {
    @func_2301() /* ty=Tensor[(7, ?, 10), uint16] */
  };
  %1627() /* ty=Tensor[(7, ?, 10), uint16] */
}

def @func_11069(%var_11068: Tensor[(15, 7, 2), float32]) -> (Tensor[(15, 7, 2), float32], Tensor[(7, ?, 10), uint16]) {
  %1631 = fn (%var_11026: Tensor[(15, 7, 2), float32]) -> (Tensor[(15, 7, 2), float32], Tensor[(7, ?, 10), uint16]) {
    %1628 = cast(%var_11026, dtype="float32") /* ty=Tensor[(15, 7, 2), float32] */;
    %1629 = cos(%1628) /* ty=Tensor[(15, 7, 2), float32] */;
    %1630 = @func_2631() /* ty=Tensor[(7, ?, 10), uint16] */;
    (%1629, %1630)
  };
  %1631(%var_11068) /* ty=(Tensor[(15, 7, 2), float32], Tensor[(7, ?, 10), uint16]) */
}

def @func_19045() -> (Tensor[(7, ?, 10), uint16],) {
  %1632 = @func_11107() /* ty=Tensor[(7, ?, 10), uint16] */;
  (%1632,)
}

def @func_14972() -> (Tensor[(7, ?, 10), uint16],) {
  @func_14970() /* ty=(Tensor[(7, ?, 10), uint16],) */
}

def @func_6348() -> (Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) {
  @func_6346() /* ty=(Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), uint16], Tensor[(7, ?, 10), float32], Tensor[(7, ?, 10), uint16], Tensor[(144), float64], Tensor[(32), int64], Tensor[(7, ?, 10), uint16]) */
}

def @func_12033() -> (Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) {
  @func_12031() /* ty=(Tensor[(7, 1, 10), bool], Tensor[(7, 8, 6), float64], Tensor[(7, 1, 10), float64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen706/build/output.py:5930: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen706/build/output.py", line 5935, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(546) tvmgen_default_fused_reshape_divide_kernel0(float* __restrict__ T_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_divide[(((int)threadIdx.x))] = (placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))]);
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_3797(%var_3758: Tensor[(8, 1, 7), float64], %var_3781: Tensor[(26, 3), float32]) -> (Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) {
  %0 = cast(%var_3758, dtype="float64") /* ty=Tensor[(8, 1, 7), float64] */;
  %1 = sin(%0) /* ty=Tensor[(8, 1, 7), float64] */;
  %2 = cast(%1, dtype="uint16") /* ty=Tensor[(8, 1, 7), uint16] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(8, 11, 7), float64] */, dtype="uint16") /* ty=Tensor[(8, 11, 7), uint16] */;
  %4 = add(%2, %3) /* ty=Tensor[(8, 11, 7), uint16] */;
  %5 = cast(%4, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
  %6 = cast(meta[relay.Constant][1] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %7 = cast(%var_3781, dtype="float32") /* ty=Tensor[(26, 3), float32] */;
  %8 = reshape(%6, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %9 = reshape(%7, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %10 = @func_1006(%8, %9) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %12 = reshape(%11, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %13 = @func_258(%12) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %14 = tan(%5) /* ty=Tensor[(8, 11, 7), float64] */;
  %15 = %10.1;
  %16 = %13.0;
  (%14, %15, meta[relay.Constant][1] /* ty=Tensor[(528), float32] */, %var_3781, %16, meta[relay.Constant][2] /* ty=Tensor[(144), float32] */)
}

def @func_11811() -> (Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) {
  %17 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %18 = cast(meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %19 = reshape(%18, newshape=[12, 2, 6]) /* ty=Tensor[(12, 2, 6), float32] */;
  %20 = cast(meta[relay.Constant][4] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %21 = cast(meta[relay.Constant][4] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %22 = cast(meta[relay.Constant][5] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %23 = reshape(%20, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
  %24 = reshape(%21, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
  %25 = reshape(%22, newshape=[24, 16]) /* ty=Tensor[(24, 16), float64] */;
  %26 = @func_9662(%23, %24, %25) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) */;
  %27 = %17.1;
  %28 = @func_7386(%19) /* ty=Tensor[(12, 2, 6), float32] */;
  %29 = %26.2;
  (%27, %28, meta[relay.Constant][3] /* ty=Tensor[(144), float32] */, %29, meta[relay.Constant][4] /* ty=Tensor[(168), float32] */, meta[relay.Constant][5] /* ty=Tensor[(384), float64] */)
}

def @func_12278() -> (Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) {
  %30 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %31 = cast(meta[relay.Constant][6] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %32 = reshape(%31, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
  %33 = @func_11671(%32) /* ty=(Tensor[(4, 5, 2), float32],) */;
  %34 = %30.1;
  %35 = %33.0;
  (%34, %35, meta[relay.Constant][6] /* ty=Tensor[(40), float32] */)
}

def @func_16844(%var_16832: Tensor[(78), float32]) -> (Tensor[(5, 13, 12), float64], Tensor[(56), float64], Tensor[(78), float32]) {
  %36 = @func_12278() /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
  %37 = %36.0;
  %38 = cast(%37, dtype="float64") /* ty=Tensor[(5, 13, 12), float64] */;
  %39 = cast(%var_16832, dtype="float32") /* ty=Tensor[(78), float32] */;
  %40 = reshape(%39, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %41 = @func_15060(%40) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) */;
  %42 = atanh(%38) /* ty=Tensor[(5, 13, 12), float64] */;
  %43 = %41.2;
  (%42, %43, %var_16832)
}

def @func_16032(%var_16025: Tensor[(9, 140), float32]) -> (Tensor[(168), float32], Tensor[(9, 140), float64]) {
  %44 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %45 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
  %46 = %45.0;
  %47 = cast(%var_16025, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
  %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(2), int32] */;
  %49 = cast(%46, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
  %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %51 = %44.0;
  %52 = floor_divide(%49, %50) /* ty=Tensor[(9, 140), float64] */;
  (%51, %52)
}

def @func_16736() -> (Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) {
  %53 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %54 = %53.0;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %56 = cast(meta[relay.Constant][7] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %57 = reshape(%55, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %58 = reshape(%56, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %59 = @func_1006(%57, %58) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %60 = %59.2;
  %61 = cast(meta[relay.Constant][7] /* ty=Tensor[(78), float32] */, dtype="bool") /* ty=Tensor[(78), bool] */;
  %62 = shape_of(%60, dtype="int32") /* ty=Tensor[(1), int32] */;
  %63 = cast(%60, dtype="bool") /* ty=Tensor[(78), bool] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?), bool] */;
  %65 = equal(%63, %64) /* ty=Tensor[(78), bool] */;
  %66 = cast(%60, dtype="uint16") /* ty=Tensor[(78), uint16] */;
  %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(1), int32] */;
  %68 = cast(%65, dtype="uint16") /* ty=Tensor[(78), uint16] */;
  %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %70 = left_shift(%68, %69) /* ty=Tensor[(78), uint16] */;
  (%54, %70)
}

def @func_8764(%var_8759: Tensor[(7, 2, 12), uint16], %var_8760: Tensor[(7, 2, 12), uint16]) -> (Tensor[(7, 2, 12), uint16],) {
  %71 = cast(%var_8760, dtype="uint16") /* ty=Tensor[(7, 2, 12), uint16] */;
  %72 = shape_of(%var_8759, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(%var_8759, dtype="uint16") /* ty=Tensor[(7, 2, 12), uint16] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %75 = bitwise_and(%73, %74) /* ty=Tensor[(7, 2, 12), uint16] */;
  (%75,)
}

def @func_15949() -> (Tensor[(168), float32], Tensor[(144), float32], Tensor[(168), float32]) {
  %76 = @func_13116() /* ty=(Tensor[(168), float32],) */;
  %77 = @func_13116() /* ty=(Tensor[(168), float32],) */;
  %78 = %76.0;
  %79 = @func_14248() /* ty=Tensor[(144), float32] */;
  %80 = %77.0;
  (%78, %79, %80)
}

def @func_258(%var_233: Tensor[(9, 1, 16), float32]) -> (Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) {
  %81 = cast(%var_233, dtype="float32") /* ty=Tensor[(9, 1, 16), float32] */;
  %82 = cast(%var_233, dtype="float32") /* ty=Tensor[(9, 1, 16), float32] */;
  %83 = cast(meta[relay.Constant][8] /* ty=Tensor[(1274, 1), float32] */, dtype="float32") /* ty=Tensor[(1274, 1), float32] */;
  %84 = reshape(%83, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float32] */;
  %85 = @func_108(%84) /* ty=(Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) */;
  %86 = log2(%81) /* ty=Tensor[(9, 1, 16), float32] */;
  %87 = rsqrt(%82) /* ty=Tensor[(9, 1, 16), float32] */;
  %88 = %85.0;
  (%86, %87, %88, meta[relay.Constant][8] /* ty=Tensor[(1274, 1), float32] */)
}

def @func_14204(%var_14183: Tensor[(5, 4, 5), bool]) -> (Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) {
  %89 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %90 = cast(%var_14183, dtype="bool") /* ty=Tensor[(5, 4, 5), bool] */;
  %91 = cast(meta[relay.Constant][9] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %92 = reshape(%91, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float32] */;
  %93 = @func_5022(%92) /* ty=(Tensor[(11, 2, 13), float32],) */;
  %94 = logical_or(%89, %90) /* ty=Tensor[(5, 4, 5), bool] */;
  %95 = %93.0;
  %96 = @func_13821() /* ty=Tensor[(3, 11, 16), float64] */;
  (%94, %95, meta[relay.Constant][9] /* ty=Tensor[(286), float32] */, %96)
}

def @func_17280(%var_17237: Tensor[(18, 100), float64], %var_17253: Tensor[(18, 100), float64]) -> (Tensor[(168), float32], Tensor[(11, 12, 9), bool], Tensor[(528), float64], Tensor[(616), float32], Tensor[(18, 100), float64], Tensor[(18, 100), int8]) {
  %97 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %98 = @func_16594() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(11, 12, 9), bool], Tensor[(1188), float64]) */;
  %99 = cast(%var_17237, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %100 = reshape(%99, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %101 = @func_12842(%100) /* ty=(Tensor[(528), float64], Tensor[(528), float32], Tensor[(1800), float64]) */;
  %102 = %98.1;
  %103 = cast(%102, dtype="float64") /* ty=Tensor[(11, 12, 9), float64] */;
  %104 = reshape(%103, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %105 = @func_15438(%104) /* ty=(Tensor[(168), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(1680), float32], float32, Tensor[(3, 11, 16), float64], Tensor[(24, 16), float64]) */;
  %106 = cast(%var_17253, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %107 = shape_of(%var_17237, dtype="int32") /* ty=Tensor[(2), int32] */;
  %108 = cast(%var_17237, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %110 = cast(%var_17253, dtype="int8") /* ty=Tensor[(18, 100), int8] */;
  %111 = shape_of(%var_17237, dtype="int32") /* ty=Tensor[(2), int32] */;
  %112 = cast(%var_17237, dtype="int8") /* ty=Tensor[(18, 100), int8] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %114 = %97.0;
  %115 = %101.0;
  %116 = %105.1;
  %117 = divide(%108, %109) /* ty=Tensor[(18, 100), float64] */;
  %118 = add(%112, %113) /* ty=Tensor[(18, 100), int8] */;
  (%114, %102, %115, %116, %117, %118)
}

def @func_17844() -> (Tensor[(1800), float64], Tensor[(168), float32], Tensor[(144), float32]) {
  %119 = @func_12696() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) */;
  %120 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %121 = %119.1;
  %122 = %120.0;
  %123 = @func_14248() /* ty=Tensor[(144), float32] */;
  (%121, %122, %123)
}

def @func_1378(%var_1362: Tensor[(13, 6, 6), float64], %var_1363: Tensor[(13, 6, 6), float64]) -> (Tensor[(13, 6, 6), float64],) {
  %124 = cast(%var_1363, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  %125 = shape_of(%var_1362, dtype="int32") /* ty=Tensor[(3), int32] */;
  %126 = cast(%var_1362, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  %127 = dyn.reshape(%124, %125, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %128 = divide(%126, %127) /* ty=Tensor[(13, 6, 6), float64] */;
  (%128,)
}

def @func_16901() -> (Tensor[(78), float64],) {
  %129 = @func_16736() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) */;
  %130 = %129.1;
  %131 = cast(%130, dtype="float64") /* ty=Tensor[(78), float64] */;
  %132 = acosh(%131) /* ty=Tensor[(78), float64] */;
  (%132,)
}

def @func_18111(%var_18085: Tensor[(7, 182), float32], %var_18106: Tensor[(7, 182), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(9, 140), float64], Tensor[(1260), float32], Tensor[(14, 13, 7), float64], Tensor[(7, 182), bool]) {
  %133 = @func_15391() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %134 = @func_12126() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %135 = cast(meta[relay.Constant][10] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %136 = reshape(%135, newshape=[9, 140]) /* ty=Tensor[(9, 140), float32] */;
  %137 = @func_16032(%136) /* ty=(Tensor[(168), float32], Tensor[(9, 140), float64]) */;
  %138 = cast(%var_18085, dtype="float32") /* ty=Tensor[(7, 182), float32] */;
  %139 = reshape(%138, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
  %140 = @func_13896(%139) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) */;
  %141 = cast(%var_18106, dtype="bool") /* ty=Tensor[(7, 182), bool] */;
  %142 = shape_of(%var_18085, dtype="int32") /* ty=Tensor[(2), int32] */;
  %143 = cast(%var_18085, dtype="bool") /* ty=Tensor[(7, 182), bool] */;
  %144 = dyn.reshape(%141, %142, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %145 = %133.0;
  %146 = %134.0;
  %147 = %137.1;
  %148 = %140.1;
  %149 = logical_and(%143, %144) /* ty=Tensor[(7, 182), bool] */;
  (%145, %146, %147, meta[relay.Constant][10] /* ty=Tensor[(1260), float32] */, %148, %149)
}

def @func_975(%var_947: Tensor[(13, 2, 3), float32]) -> Tensor[(13, 2, 3), float32] {
  %150 = cast(%var_947, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
  exp(%150) /* ty=Tensor[(13, 2, 3), float32] */
}

def @func_18611(%var_18596: Tensor[(54, 10), float32]) -> (Tensor[(168), float32], Tensor[(168), float32], Tensor[(4, 6, 7), float32], Tensor[(54, 10), float32], Tensor[(286), float32], Tensor[(5, 13, 12), bool]) {
  %151 = @func_13461() /* ty=(Tensor[(168), float32],) */;
  %152 = cast(%var_18596, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %153 = cast(meta[relay.Constant][11] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %154 = reshape(%152, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %155 = reshape(%153, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %156 = @func_15020(%154, %155) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) */;
  %157 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %158 = @func_16755() /* ty=Tensor[(168), float32] */;
  %159 = %151.0;
  %160 = %156.0;
  %161 = %157.0;
  (%158, %159, %160, %var_18596, meta[relay.Constant][11] /* ty=Tensor[(286), float32] */, %161)
}

def @func_18510(%var_18432: Tensor[(286), float32], %var_18461: Tensor[(78), float32]) -> (Tensor[(540), float32], Tensor[(286), float32], Tensor[(8, 11, 7), float64], Tensor[(56), float64], Tensor[(78), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(4, 5, 2), int16]) {
  %162 = cast(%var_18432, dtype="float32") /* ty=Tensor[(286), float32] */;
  %163 = reshape(%162, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %164 = @func_17731(%163) /* ty=(Tensor[(9, 140), float32], Tensor[(192, 2), float64], Tensor[(540), float32], Tensor[(286), int8]) */;
  %165 = cast(meta[relay.Constant][12] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %166 = cast(%var_18461, dtype="float32") /* ty=Tensor[(78), float32] */;
  %167 = reshape(%165, newshape=[8, 1, 7]) /* ty=Tensor[(8, 1, 7), float64] */;
  %168 = reshape(%166, newshape=[26, 3]) /* ty=Tensor[(26, 3), float32] */;
  %169 = @func_3797(%167, %168) /* ty=(Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) */;
  %170 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %171 = cast(meta[relay.Constant][13] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %172 = reshape(%170, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %173 = reshape(%171, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %174 = @func_8764(%172, %173) /* ty=(Tensor[(7, 2, 12), uint16],) */;
  %175 = @func_13729() /* ty=(Tensor[(4, 5, 2), float32],) */;
  %176 = %175.0;
  %177 = cast(%176, dtype="float32") /* ty=Tensor[(4, 5, 2), float32] */;
  %178 = sigmoid(%177) /* ty=Tensor[(4, 5, 2), float32] */;
  %179 = cast(%178, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %180 = cos(%179) /* ty=Tensor[(4, 5, 2), float64] */;
  %181 = cast(%176, dtype="int16") /* ty=Tensor[(4, 5, 2), int16] */;
  %182 = shape_of(%180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %183 = cast(%180, dtype="int16") /* ty=Tensor[(4, 5, 2), int16] */;
  %184 = dyn.reshape(%181, %182, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %185 = %164.2;
  %186 = %169.0;
  %187 = %174.0;
  %188 = minimum(%183, %184) /* ty=Tensor[(4, 5, 2), int16] */;
  (%185, %var_18432, %186, meta[relay.Constant][12] /* ty=Tensor[(56), float64] */, %var_18461, %187, meta[relay.Constant][13] /* ty=Tensor[(168), uint16] */, %188)
}

def @func_15197() -> Tensor[(5, 13, 12), bool] {
  %189 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %189.0
}

def @func_11766() -> (Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) {
  %190 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %191 = cast(meta[relay.Constant][14] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %192 = cast(meta[relay.Constant][14] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
  %193 = cast(meta[relay.Constant][15] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
  %194 = reshape(%191, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
  %195 = reshape(%192, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
  %196 = reshape(%193, newshape=[24, 16]) /* ty=Tensor[(24, 16), float64] */;
  %197 = @func_9662(%194, %195, %196) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) */;
  %198 = %190.2;
  %199 = %197.0;
  (%198, %199, meta[relay.Constant][14] /* ty=Tensor[(168), float32] */, meta[relay.Constant][15] /* ty=Tensor[(384), float64] */)
}

def @func_12290() -> Tensor[(168), float32] {
  %200 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %200.0
}

def @func_9243(%var_9240: Tensor[(12, 16, 2), float64]) -> (Tensor[(12, 16, 2), float64],) {
  %201 = cast(%var_9240, dtype="float64") /* ty=Tensor[(12, 16, 2), float64] */;
  %202 = cos(%201) /* ty=Tensor[(12, 16, 2), float64] */;
  (%202,)
}

def @func_12295() -> (Tensor[(3, 11, 16), float64],) {
  %203 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  (%203,)
}

def @func_15391() -> (Tensor[(3, 11, 16), float64],) {
  %204 = @func_12696() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) */;
  %205 = %204.0;
  (%205,)
}

def @func_15020(%var_15012: Tensor[(540), float32], %var_15013: Tensor[(286), float32]) -> (Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) {
  %206 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
  %207 = cast(%var_15012, dtype="float32") /* ty=Tensor[(540), float32] */;
  %208 = cast(%var_15013, dtype="float32") /* ty=Tensor[(286), float32] */;
  %209 = reshape(%207, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %210 = reshape(%208, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %211 = @func_9623(%209, %210) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %212 = %206.1;
  %213 = %211.3;
  (%212, %213, %var_15012, %var_15013)
}

def @func_14320() -> (Tensor[(168), float32],) {
  %214 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %215 = %214.0;
  (%215,)
}

def @func_17928(%var_17871: Tensor[(1430), int16]) -> (Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) {
  %216 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %217 = cast(%var_17871, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %218 = cast(%var_17871, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %219 = reshape(%217, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %220 = reshape(%218, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %221 = @func_10917(%219, %220) /* ty=(Tensor[(10, 11, 13), int16],) */;
  %222 = %216.0;
  %223 = %221.0;
  (%222, %223, %var_17871)
}

def @func_1313(%var_1294: Tensor[(15, 15, 8), float64]) -> (Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) {
  %224 = cast(%var_1294, dtype="float64") /* ty=Tensor[(15, 15, 8), float64] */;
  %225 = cast(meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %226 = cast(meta[relay.Constant][17] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %227 = reshape(%225, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %228 = reshape(%226, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %229 = @func_1006(%227, %228) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %230 = sqrt(%224) /* ty=Tensor[(15, 15, 8), float64] */;
  %231 = %229.1;
  (%230, %231, meta[relay.Constant][16] /* ty=Tensor[(528), float32] */, meta[relay.Constant][17] /* ty=Tensor[(78), float32] */)
}

def @func_13196() -> (Tensor[(3, 11, 16), float64],) {
  %232 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %233 = %232.0;
  (%233,)
}

def @func_17673(%var_17637: Tensor[(468), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(5, 13, 12), bool], Tensor[(11, 12, 9), bool], Tensor[(168), float32], Tensor[(10, 11, 13), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64], Tensor[(1188, 144), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(168), float32]) {
  %234 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %235 = @func_15892() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %236 = cast(meta[relay.Constant][18] /* ty=Tensor[(1188, 1), float64] */, dtype="float64") /* ty=Tensor[(1188, 1), float64] */;
  %237 = cast(meta[relay.Constant][18] /* ty=Tensor[(1188, 1), float64] */, dtype="float64") /* ty=Tensor[(1188, 1), float64] */;
  %238 = reshape(%236, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %239 = reshape(%237, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %240 = @func_2003(%238, %239) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %241 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %242 = @func_16386() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) */;
  %243 = cast(%var_17637, dtype="float64") /* ty=Tensor[(468), float64] */;
  %244 = cast(%var_17637, dtype="float64") /* ty=Tensor[(468), float64] */;
  %245 = reshape(%243, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %246 = reshape(%244, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %247 = @func_1378(%245, %246) /* ty=(Tensor[(13, 6, 6), float64],) */;
  %248 = %242.2;
  %249 = cast(%248, dtype="int16") /* ty=Tensor[(10, 11, 13), int16] */;
  %250 = reshape(%249, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
  %251 = @func_15037(%250) /* ty=(Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) */;
  %252 = %251.0;
  %253 = cast(%252, dtype="float32") /* ty=Tensor[(144), float32] */;
  %254 = cast(meta[relay.Constant][18] /* ty=Tensor[(1188, 1), float64] */, dtype="float32") /* ty=Tensor[(1188, 1), float32] */;
  %255 = cast(meta[relay.Constant][19] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %256 = %247.0;
  %257 = cast(%256, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  %258 = reshape(%255, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %259 = reshape(%257, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
  %260 = @func_1587(%258, %259) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
  %261 = %234.0;
  %262 = %235.0;
  %263 = %240.0;
  %264 = %241.0;
  %265 = power(%253, %254) /* ty=Tensor[(1188, 144), float32] */;
  %266 = %260.5;
  %267 = @func_17133() /* ty=Tensor[(168), float32] */;
  (%261, %262, %263, %264, %248, %256, %var_17637, %265, %266, meta[relay.Constant][19] /* ty=Tensor[(1260), float32] */, %267)
}

def @func_15892() -> (Tensor[(5, 13, 12), bool],) {
  %268 = @func_15197() /* ty=Tensor[(5, 13, 12), bool] */;
  (%268,)
}

def @func_15156(%var_15146: int16, %var_15150: Tensor[(1, 100), bool]) -> (Tensor[(3, 11, 16), float64], Tensor[(168), float32], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(3, 11, 16), float64], Tensor[(1, 100), bool]) {
  %269 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %270 = @func_14320() /* ty=(Tensor[(168), float32],) */;
  %271 = cast(%var_15146, dtype="int16") /* ty=int16 */;
  %272 = cast(meta[relay.Constant][20] /* ty=Tensor[(4096), int16] */, dtype="int16") /* ty=Tensor[(4096), int16] */;
  %273 = reshape(%271, newshape=[]) /* ty=int16 */;
  %274 = reshape(%272, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
  %275 = @func_7980(%273, %274) /* ty=(Tensor[(16, 16, 16), float32],) */;
  %276 = cast(%var_15150, dtype="bool") /* ty=Tensor[(1, 100), bool] */;
  %277 = reshape(%276, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), bool] */;
  %278 = @func_14204(%277) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) */;
  %279 = %269.0;
  %280 = %270.0;
  %281 = %275.0;
  %282 = %278.3;
  (%279, %280, %281, %var_15146, meta[relay.Constant][20] /* ty=Tensor[(4096), int16] */, %282, %var_15150)
}

def @func_12186(%var_12183: Tensor[(468), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64]) {
  %283 = @func_12126() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %284 = cast(meta[relay.Constant][21] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %285 = cast(meta[relay.Constant][22] /* ty=Tensor[(4096), int16] */, dtype="int16") /* ty=Tensor[(4096), int16] */;
  %286 = reshape(%284, newshape=[]) /* ty=int16 */;
  %287 = reshape(%285, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
  %288 = @func_7980(%286, %287) /* ty=(Tensor[(16, 16, 16), float32],) */;
  %289 = cast(%var_12183, dtype="float64") /* ty=Tensor[(468), float64] */;
  %290 = cast(%var_12183, dtype="float64") /* ty=Tensor[(468), float64] */;
  %291 = reshape(%289, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %292 = reshape(%290, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %293 = @func_1378(%291, %292) /* ty=(Tensor[(13, 6, 6), float64],) */;
  %294 = %283.0;
  %295 = %288.0;
  %296 = %293.0;
  (%294, %295, meta[relay.Constant][21] /* ty=int16 */, meta[relay.Constant][22] /* ty=Tensor[(4096), int16] */, %296, %var_12183)
}

def @func_18391(%var_18385: Tensor[(2, 20), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) {
  %297 = @func_18335() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %298 = cast(%var_18385, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %299 = reshape(%298, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %300 = @func_12786(%299) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
  %301 = %297.0;
  %302 = %300.2;
  (%301, %302, %var_18385)
}

def @func_11015(%var_10929: Tensor[(14, 4, 2), float64], %var_10934: Tensor[(78), float32], %var_10989: Tensor[(540), float32], %var_10998: Tensor[(14, 4, 2), float64], %var_11008: Tensor[(1188), float64], %var_11012: Tensor[(882), float64]) -> (Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(11, 2, 13), float32], Tensor[(540), float32], Tensor[(13, 22), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(14, 4, 2), bool], Tensor[(11, 12, 9), bool], Tensor[(1188), float64], Tensor[(7, 14, 9), float32], Tensor[(882), float64]) {
  %303 = cast(meta[relay.Constant][23] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %304 = cast(%var_10934, dtype="float32") /* ty=Tensor[(78), float32] */;
  %305 = reshape(%303, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %306 = reshape(%304, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %307 = @func_1006(%305, %306) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %308 = cast(meta[relay.Constant][24] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %309 = reshape(%308, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float32] */;
  %310 = @func_108(%309) /* ty=(Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) */;
  %311 = cast(%var_10989, dtype="float32") /* ty=Tensor[(540), float32] */;
  %312 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 22), float32] */, dtype="float32") /* ty=Tensor[(13, 22), float32] */;
  %313 = reshape(%311, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %314 = reshape(%312, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %315 = @func_9623(%313, %314) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %316 = cast(meta[relay.Constant][26] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %317 = cast(meta[relay.Constant][26] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %318 = reshape(%316, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %319 = reshape(%317, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %320 = @func_8764(%318, %319) /* ty=(Tensor[(7, 2, 12), uint16],) */;
  %321 = cast(%var_10929, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %322 = erf(%321) /* ty=Tensor[(14, 4, 2), float64] */;
  %323 = cast(%322, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %324 = acos(%323) /* ty=Tensor[(14, 4, 2), float64] */;
  %325 = cast(%var_10998, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %326 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %327 = cast(%324, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %328 = dyn.reshape(%325, %326, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %329 = cast(%var_11008, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %330 = cast(%var_11008, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %331 = reshape(%329, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %332 = reshape(%330, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %333 = @func_2003(%331, %332) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %334 = cast(%var_11012, dtype="float64") /* ty=Tensor[(882), float64] */;
  %335 = reshape(%334, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), float64] */;
  %336 = @func_7492(%335) /* ty=(Tensor[(7, 14, 9), float32],) */;
  %337 = %307.2;
  %338 = %310.1;
  %339 = %315.1;
  %340 = %320.0;
  %341 = greater_equal(%327, %328) /* ty=Tensor[(14, 4, 2), bool] */;
  %342 = %333.0;
  %343 = %336.0;
  (%337, meta[relay.Constant][23] /* ty=Tensor[(528), float32] */, %var_10934, %338, meta[relay.Constant][24] /* ty=Tensor[(1274), float32] */, %339, %var_10989, meta[relay.Constant][25] /* ty=Tensor[(13, 22), float32] */, %340, meta[relay.Constant][26] /* ty=Tensor[(168), uint16] */, %341, %342, %var_11008, %343, %var_11012)
}

def @func_17788() -> (Tensor[(3, 11, 16), float64],) {
  %344 = @func_17069() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(144), float32]) */;
  %345 = %344.0;
  (%345,)
}

def @func_16452(%var_16442: Tensor[(1188), float64]) -> (Tensor[(5, 13, 12), bool], int16, int16, Tensor[(1188), float64]) {
  %346 = cast(meta[relay.Constant][27] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %347 = cast(%var_16442, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %348 = reshape(%346, newshape=[]) /* ty=int16 */;
  %349 = reshape(%347, newshape=[18, 66]) /* ty=Tensor[(18, 66), float64] */;
  %350 = @func_14512(%348, %349) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(4, 7, 9), float32], Tensor[(32), bool], Tensor[(252), float32], Tensor[(11, 12, 9), bool], Tensor[(18, 66), float64]) */;
  %351 = @func_15197() /* ty=Tensor[(5, 13, 12), bool] */;
  %352 = %350.3;
  (%351, %352, meta[relay.Constant][27] /* ty=int16 */, %var_16442)
}

def @func_14021(%var_13998: Tensor[(10, 9, 16), float32], %var_13999: Tensor[(10, 9, 16), float32], %var_14010: Tensor[(364), uint32]) -> (Tensor[(10, 9, 16), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) {
  %353 = cast(%var_13999, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %354 = shape_of(%var_13998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %355 = cast(%var_13998, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %356 = dyn.reshape(%353, %354, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %357 = cast(%var_14010, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %358 = reshape(%357, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), uint32] */;
  %359 = divide(%355, %356) /* ty=Tensor[(10, 9, 16), float32] */;
  %360 = @func_11631(%358) /* ty=Tensor[(4, 7, 13), bool] */;
  (%359, %360, %var_14010)
}

def @func_11537(%var_11517: Tensor[(3, 2, 12), float32]) -> (Tensor[(3, 2, 12), float32], Tensor[(78), float32], Tensor[(1800), float64]) {
  %361 = cast(%var_11517, dtype="float32") /* ty=Tensor[(3, 2, 12), float32] */;
  %362 = cast(meta[relay.Constant][28] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %363 = reshape(%362, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %364 = @func_1313(%363) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %365 = log10(%361) /* ty=Tensor[(3, 2, 12), float32] */;
  %366 = %364.3;
  (%365, %366, meta[relay.Constant][28] /* ty=Tensor[(1800), float64] */)
}

def @func_9623(%var_9593: Tensor[(9, 6, 10), float32], %var_9610: Tensor[(286), float32]) -> (Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) {
  %367 = cast(%var_9593, dtype="float32") /* ty=Tensor[(9, 6, 10), float32] */;
  %368 = cast(%var_9610, dtype="float32") /* ty=Tensor[(286), float32] */;
  %369 = reshape(%368, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float32] */;
  %370 = @func_5022(%369) /* ty=(Tensor[(11, 2, 13), float32],) */;
  %371 = cast(meta[relay.Constant][29] /* ty=Tensor[(192, 2), float64] */, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %372 = reshape(%371, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), float64] */;
  %373 = @func_9243(%372) /* ty=(Tensor[(12, 16, 2), float64],) */;
  %374 = atanh(%367) /* ty=Tensor[(9, 6, 10), float32] */;
  %375 = %370.0;
  %376 = %373.0;
  (%374, %375, %var_9610, %376, meta[relay.Constant][29] /* ty=Tensor[(192, 2), float64] */)
}

def @func_14942() -> (Tensor[(3, 11, 16), float64],) {
  %377 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %378 = %377.0;
  (%378,)
}

def @func_2003(%var_1944: Tensor[(11, 12, 9), float64], %var_1945: Tensor[(11, 12, 9), float64]) -> (Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) {
  %379 = cast(%var_1945, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
  %380 = shape_of(%var_1944, dtype="int32") /* ty=Tensor[(3), int32] */;
  %381 = cast(%var_1944, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
  %382 = dyn.reshape(%379, %380, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %383 = cast(meta[relay.Constant][30] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %384 = cast(meta[relay.Constant][31] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %385 = reshape(%383, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %386 = reshape(%384, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %387 = @func_1006(%385, %386) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %388 = cast(meta[relay.Constant][30] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %389 = %387.1;
  %390 = cast(%389, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
  %391 = reshape(%388, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %392 = reshape(%390, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %393 = @func_1006(%391, %392) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %394 = not_equal(%381, %382) /* ty=Tensor[(11, 12, 9), bool] */;
  %395 = %393.1;
  (%394, %389, meta[relay.Constant][30] /* ty=Tensor[(528), float32] */, meta[relay.Constant][31] /* ty=Tensor[(78), float32] */, %395)
}

def @func_18047(%var_18026: Tensor[(4, 5, 2), float32]) -> (Tensor[(9, 140), float32], Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), bool]) {
  %396 = @func_15892() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %397 = @func_13729() /* ty=(Tensor[(4, 5, 2), float32],) */;
  %398 = %397.0;
  %399 = cast(%var_18026, dtype="bool") /* ty=Tensor[(4, 5, 2), bool] */;
  %400 = shape_of(%398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %401 = cast(%398, dtype="bool") /* ty=Tensor[(4, 5, 2), bool] */;
  %402 = dyn.reshape(%399, %400, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %403 = @func_16612() /* ty=Tensor[(9, 140), float32] */;
  %404 = %396.0;
  %405 = equal(%401, %402) /* ty=Tensor[(4, 5, 2), bool] */;
  (%403, %404, %405)
}

def @func_16217(%var_16200: Tensor[(5, 13, 12), bool]) -> (Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), bool]) {
  %406 = @func_15197() /* ty=Tensor[(5, 13, 12), bool] */;
  %407 = cast(%var_16200, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
  %408 = shape_of(%406, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%406, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %411 = @func_15892() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %412 = divide(%409, %410) /* ty=Tensor[(5, 13, 12), float32] */;
  %413 = %411.0;
  (%412, %413)
}

def @func_17973(%var_17965: Tensor[(9, 6, 6), float32]) -> Tensor[(9, 6, 6), float32] {
  %414 = cast(%var_17965, dtype="float32") /* ty=Tensor[(9, 6, 6), float32] */;
  erf(%414) /* ty=Tensor[(9, 6, 6), float32] */
}

def @func_4214(%var_4184: Tensor[(4, 7, 9), float32], %var_4185: Tensor[(4, 7, 9), float32]) -> (Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) {
  %415 = cast(%var_4185, dtype="float32") /* ty=Tensor[(4, 7, 9), float32] */;
  %416 = shape_of(%var_4184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%var_4184, dtype="float32") /* ty=Tensor[(4, 7, 9), float32] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %419 = cast(meta[relay.Constant][32] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %420 = cast(meta[relay.Constant][33] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %421 = reshape(%419, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %422 = reshape(%420, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
  %423 = @func_1587(%421, %422) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
  %424 = floor_divide(%417, %418) /* ty=Tensor[(4, 7, 9), float32] */;
  %425 = %423.5;
  (%424, %425, meta[relay.Constant][32] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][33] /* ty=Tensor[(468), float64] */)
}

def @func_15369() -> (Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(13, 6), float32]) {
  %426 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %427 = cast(meta[relay.Constant][34] /* ty=Tensor[(13, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
  %428 = reshape(%427, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %429 = @func_15060(%428) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) */;
  %430 = %426.0;
  %431 = %429.1;
  (%430, %431, meta[relay.Constant][34] /* ty=Tensor[(13, 6), float32] */)
}

def @func_16342(%var_16335: Tensor[(2, 11, 13), float64]) -> Tensor[(2, 11, 13), float64] {
  %432 = cast(%var_16335, dtype="float64") /* ty=Tensor[(2, 11, 13), float64] */;
  asin(%432) /* ty=Tensor[(2, 11, 13), float64] */
}

def @func_12786(%var_12783: Tensor[(40), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) {
  %433 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %434 = cast(%var_12783, dtype="float32") /* ty=Tensor[(40), float32] */;
  %435 = reshape(%434, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
  %436 = @func_11671(%435) /* ty=(Tensor[(4, 5, 2), float32],) */;
  %437 = %433.1;
  %438 = %436.0;
  (%437, %438, %var_12783)
}

def @func_14377() -> Tensor[(3, 11, 16), float64] {
  %439 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %439.0
}

def @func_9662(%var_9642: Tensor[(4, 6, 7), float32], %var_9643: Tensor[(4, 6, 7), float32], %var_9653: Tensor[(24, 16), float64]) -> (Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) {
  %440 = cast(%var_9643, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
  %441 = shape_of(%var_9642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%var_9642, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %444 = cast(%var_9653, dtype="float64") /* ty=Tensor[(24, 16), float64] */;
  %445 = reshape(%444, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), float64] */;
  %446 = @func_9243(%445) /* ty=(Tensor[(12, 16, 2), float64],) */;
  %447 = mod(%442, %443) /* ty=Tensor[(4, 6, 7), float32] */;
  %448 = %446.0;
  (%447, %448, %var_9653)
}

def @func_7610(%var_7568: Tensor[(2, 3, 3), uint16], %var_7580: Tensor[(54, 22), float64], %var_7605: Tensor[(1800), float64]) -> (Tensor[(2, 3, 3), bool], Tensor[(1274, 1), float32], Tensor[(616), float32], Tensor[(54, 22), float64], Tensor[(1680), float32], Tensor[(9, 1, 16), float32], Tensor[(572), uint16], Tensor[(1800), float64]) {
  %449 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="bool") /* ty=bool */;
  %450 = cast(%var_7568, dtype="bool") /* ty=Tensor[(2, 3, 3), bool] */;
  %451 = cast(meta[relay.Constant][36] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %452 = cast(%var_7580, dtype="float64") /* ty=Tensor[(54, 22), float64] */;
  %453 = cast(meta[relay.Constant][37] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %454 = cast(meta[relay.Constant][36] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %455 = cast(meta[relay.Constant][35] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
  %456 = reshape(%451, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
  %457 = reshape(%452, newshape=[1, 1188]) /* ty=Tensor[(1, 1188), float64] */;
  %458 = reshape(%453, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %459 = reshape(%454, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
  %460 = reshape(%455, newshape=[]) /* ty=float32 */;
  %461 = @func_4448(%456, %457, %458, %459, %460) /* ty=(Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) */;
  %462 = cast(meta[relay.Constant][38] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %463 = cast(meta[relay.Constant][38] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %464 = cast(%var_7605, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %465 = reshape(%462, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %466 = reshape(%463, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %467 = reshape(%464, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %468 = @func_3927(%465, %466, %467) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
  %469 = greater(%449, %450) /* ty=Tensor[(2, 3, 3), bool] */;
  %470 = %461.11;
  %471 = %468.3;
  (%469, %470, meta[relay.Constant][36] /* ty=Tensor[(616), float32] */, %var_7580, meta[relay.Constant][37] /* ty=Tensor[(1680), float32] */, %471, meta[relay.Constant][38] /* ty=Tensor[(572), uint16] */, %var_7605)
}

def @func_8580(%var_8528: Tensor[(10, 9, 1), bool], %var_8529: Tensor[(10, 9, 1), bool], %var_8551: Tensor[(3, 600), float64]) -> (Tensor[(10, 9, ?), bool], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(3, 600), float64]) {
  %472 = cast(%var_8529, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
  %473 = shape_of(%var_8528, dtype="int32") /* ty=Tensor[(3), int32] */;
  %474 = cast(%var_8528, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
  %475 = dyn.reshape(%472, %473, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %476 = cast(meta[relay.Constant][39] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %477 = cast(meta[relay.Constant][39] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %478 = cast(%var_8551, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
  %479 = reshape(%476, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %480 = reshape(%477, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %481 = reshape(%478, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %482 = @func_3927(%479, %480, %481) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
  %483 = cast(%var_8551, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
  %484 = log10(%483) /* ty=Tensor[(3, 600), float64] */;
  %485 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 600), float64] */, dtype="uint32") /* ty=Tensor[(3, 600), uint32] */;
  %486 = shape_of(%var_8551, dtype="int32") /* ty=Tensor[(2), int32] */;
  %487 = cast(%var_8551, dtype="uint32") /* ty=Tensor[(3, 600), uint32] */;
  %488 = dyn.reshape(%485, %486, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %489 = logical_xor(%487, %488) /* ty=Tensor[(3, 600), uint32] */;
  %490 = cast(%489, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
  %491 = shape_of(%484, dtype="int32") /* ty=Tensor[(2), int32] */;
  %492 = cast(%484, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %494 = logical_and(%474, %475) /* ty=Tensor[(10, 9, ?), bool] */;
  %495 = %482.6;
  %496 = mod(%492, %493) /* ty=Tensor[(3, 600), float64] */;
  (%494, %495, meta[relay.Constant][39] /* ty=Tensor[(572), uint16] */, %496)
}

def @func_16267() -> Tensor[(5, 13, 12), bool] {
  %497 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
  %497.1
}

def @func_15521(%var_15499: Tensor[(1, 286), float32], %var_15509: Tensor[(18), uint16], %var_15510: Tensor[(1188), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(540), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(54, 22), float64], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(1800), float64]) {
  %498 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %499 = cast(meta[relay.Constant][41] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %500 = cast(%var_15499, dtype="float32") /* ty=Tensor[(1, 286), float32] */;
  %501 = reshape(%499, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %502 = reshape(%500, newshape=[13, 22]) /* ty=Tensor[(13, 22), float32] */;
  %503 = @func_14874(%501, %502) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(13, 22), float32]) */;
  %504 = cast(%var_15509, dtype="uint16") /* ty=Tensor[(18), uint16] */;
  %505 = cast(%var_15510, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %506 = cast(meta[relay.Constant][42] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %507 = reshape(%504, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), uint16] */;
  %508 = reshape(%505, newshape=[54, 22]) /* ty=Tensor[(54, 22), float64] */;
  %509 = reshape(%506, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %510 = @func_7610(%507, %508, %509) /* ty=(Tensor[(2, 3, 3), bool], Tensor[(1274, 1), float32], Tensor[(616), float32], Tensor[(54, 22), float64], Tensor[(1680), float32], Tensor[(9, 1, 16), float32], Tensor[(572), uint16], Tensor[(1800), float64]) */;
  %511 = %498.0;
  %512 = %503.2;
  %513 = %510.3;
  (%511, %512, meta[relay.Constant][41] /* ty=Tensor[(540), float32] */, %var_15499, %513, %var_15509, %var_15510, meta[relay.Constant][42] /* ty=Tensor[(1800), float64] */)
}

def @func_12792() -> (Tensor[(168), float32],) {
  %514 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
  %515 = %514.2;
  (%515,)
}

def @func_12126() -> (Tensor[(3, 11, 16), float64],) {
  %516 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  (%516,)
}

def @func_3728(%var_3721: float32) -> (Tensor[(3, 2, 12), float32],) {
  %517 = cast(%var_3721, dtype="float32") /* ty=float32 */;
  %518 = cast(meta[relay.Constant][43] /* ty=Tensor[(3, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 12), float32] */;
  %519 = divide(%517, %518) /* ty=Tensor[(3, 2, 12), float32] */;
  (%519,)
}

def @func_14056() -> (Tensor[(168), float32], Tensor[(13, 6, 6), float64], Tensor[(9, 140), float32], Tensor[(468), float64]) {
  %520 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %521 = cast(meta[relay.Constant][44] /* ty=Tensor[(9, 140), float32] */, dtype="float32") /* ty=Tensor[(9, 140), float32] */;
  %522 = cast(meta[relay.Constant][45] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %523 = reshape(%521, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %524 = reshape(%522, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
  %525 = @func_1587(%523, %524) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
  %526 = %520.0;
  %527 = %525.3;
  (%526, %527, meta[relay.Constant][44] /* ty=Tensor[(9, 140), float32] */, meta[relay.Constant][45] /* ty=Tensor[(468), float64] */)
}

def @func_16386() -> (Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) {
  %528 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %529 = cast(meta[relay.Constant][46] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %530 = reshape(%529, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %531 = @func_13581(%530) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(1188), float64]) */;
  %532 = cast(meta[relay.Constant][47] /* ty=Tensor[(715, 2), int16] */, dtype="int16") /* ty=Tensor[(715, 2), int16] */;
  %533 = reshape(%532, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
  %534 = @func_15037(%533) /* ty=(Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) */;
  %535 = cast(meta[relay.Constant][46] /* ty=Tensor[(1188), float64] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %536 = sin(%535) /* ty=Tensor[(1188), float32] */;
  %537 = cast(%536, dtype="float32") /* ty=Tensor[(1188), float32] */;
  %538 = cast(%536, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %539 = %528.0;
  %540 = %531.0;
  %541 = %534.1;
  %542 = erf(%537) /* ty=Tensor[(1188), float32] */;
  %543 = asinh(%538) /* ty=Tensor[(1188), float64] */;
  (%539, %540, %541, meta[relay.Constant][47] /* ty=Tensor[(715, 2), int16] */, %542, %543)
}

def @func_14615(%var_14608: Tensor[(364), uint32], %var_14613: Tensor[(637, 2), float32]) -> (Tensor[(384), float64], Tensor[(3, 11, 16), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16], Tensor[(528), float64], Tensor[(364), uint32], Tensor[(637, 2), float64], Tensor[(637, 2), float32]) {
  %544 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %545 = @func_14362() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %546 = %545.0;
  %547 = cast(%546, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %548 = cast(meta[relay.Constant][48] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %549 = cast(meta[relay.Constant][48] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %550 = reshape(%548, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %551 = reshape(%549, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %552 = @func_10917(%550, %551) /* ty=(Tensor[(10, 11, 13), int16],) */;
  %553 = cast(%var_14608, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %554 = reshape(%553, newshape=[364]) /* ty=Tensor[(364), uint32] */;
  %555 = @func_11717(%554) /* ty=(Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */;
  %556 = cast(%var_14613, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
  %557 = reshape(%556, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
  %558 = @func_13896(%557) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) */;
  %559 = %544.0;
  %560 = exp(%547) /* ty=Tensor[(3, 11, 16), float32] */;
  %561 = %552.0;
  %562 = %555.0;
  %563 = %558.2;
  (%559, %560, %561, meta[relay.Constant][48] /* ty=Tensor[(1430), int16] */, %562, %var_14608, %563, %var_14613)
}

def @func_17526(%var_17518: Tensor[(91, 4), uint32], %var_17519: Tensor[(7, 182), float32]) -> (Tensor[(168), float32], Tensor[(528), float64], Tensor[(91, 4), uint32], Tensor[(7, 182), float32]) {
  %564 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %565 = cast(%var_17518, dtype="uint32") /* ty=Tensor[(91, 4), uint32] */;
  %566 = cast(%var_17519, dtype="float32") /* ty=Tensor[(7, 182), float32] */;
  %567 = reshape(%565, newshape=[364]) /* ty=Tensor[(364), uint32] */;
  %568 = reshape(%566, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
  %569 = @func_14615(%567, %568) /* ty=(Tensor[(384), float64], Tensor[(3, 11, 16), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16], Tensor[(528), float64], Tensor[(364), uint32], Tensor[(637, 2), float64], Tensor[(637, 2), float32]) */;
  %570 = %564.0;
  %571 = %569.4;
  (%570, %571, %var_17518, %var_17519)
}

def @func_17731(%var_17718: Tensor[(286), float32]) -> (Tensor[(9, 140), float32], Tensor[(192, 2), float64], Tensor[(540), float32], Tensor[(286), int8]) {
  %572 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
  %573 = cast(meta[relay.Constant][49] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %574 = cast(meta[relay.Constant][50] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %575 = reshape(%573, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %576 = reshape(%574, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %577 = @func_9623(%575, %576) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %578 = cast(%var_17718, dtype="int8") /* ty=Tensor[(286), int8] */;
  %579 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(286), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %580 = cast(meta[relay.Constant][50] /* ty=Tensor[(286), float32] */, dtype="int8") /* ty=Tensor[(286), int8] */;
  %581 = dyn.reshape(%578, %579, newshape=[]) /* ty=Tensor[(?), int8] */;
  %582 = %572.0;
  %583 = %577.4;
  %584 = minimum(%580, %581) /* ty=Tensor[(286), int8] */;
  (%582, %583, meta[relay.Constant][49] /* ty=Tensor[(540), float32] */, %584)
}

def @func_11474(%var_11458: Tensor[(5, 13, 12), bool], %var_11459: Tensor[(5, 13, 12), bool]) -> (Tensor[(5, 13, 12), bool],) {
  %585 = cast(%var_11459, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
  %586 = shape_of(%var_11458, dtype="int32") /* ty=Tensor[(3), int32] */;
  %587 = cast(%var_11458, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
  %588 = dyn.reshape(%585, %586, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %589 = logical_and(%587, %588) /* ty=Tensor[(5, 13, 12), bool] */;
  (%589,)
}

def @func_13116() -> (Tensor[(168), float32],) {
  %590 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %591 = %590.0;
  (%591,)
}

def @func_15637() -> Tensor[(40), float32] {
  %592 = @func_12278() /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
  %592.2
}

def @func_18651(%var_18621: Tensor[(12, 4, 1), int32]) -> (Tensor[(12, 4, 13), int32], Tensor[(168), float32], Tensor[(3, 11, 16), float64], Tensor[(168), float32]) {
  %593 = cast(%var_18621, dtype="int32") /* ty=Tensor[(12, 4, 1), int32] */;
  %594 = cast(meta[relay.Constant][51] /* ty=Tensor[(12, 4, 13), int32] */, dtype="int32") /* ty=Tensor[(12, 4, 13), int32] */;
  %595 = @func_13461() /* ty=(Tensor[(168), float32],) */;
  %596 = bitwise_or(%593, %594) /* ty=Tensor[(12, 4, 13), int32] */;
  %597 = %595.0;
  %598 = @func_15744() /* ty=Tensor[(3, 11, 16), float64] */;
  %599 = @func_12290() /* ty=Tensor[(168), float32] */;
  (%596, %597, %598, %599)
}

def @func_18374() -> (Tensor[(4, 6, 7), float32], Tensor[(3, 11, 16), float64]) {
  %600 = @func_15993() /* ty=(Tensor[(4, 6, 7), float32],) */;
  %601 = @func_16386() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) */;
  %602 = %600.0;
  %603 = %601.1;
  (%602, %603)
}

def @func_17344() -> Tensor[(168), float32] {
  %604 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %604.0
}

def @func_13308() -> (Tensor[(168), float32],) {
  %605 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %606 = %605.0;
  (%606,)
}

def @func_17437(%var_17413: Tensor[(9, 140), float32]) -> (Tensor[(9, 140), bool], Tensor[(9, 140), float64]) {
  %607 = @func_16772() /* ty=Tensor[(9, 140), float32] */;
  %608 = cast(%var_17413, dtype="bool") /* ty=Tensor[(9, 140), bool] */;
  %609 = shape_of(%607, dtype="int32") /* ty=Tensor[(2), int32] */;
  %610 = cast(%607, dtype="bool") /* ty=Tensor[(9, 140), bool] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %612 = cast(%var_17413, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
  %613 = shape_of(%607, dtype="int32") /* ty=Tensor[(2), int32] */;
  %614 = cast(%607, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %616 = equal(%610, %611) /* ty=Tensor[(9, 140), bool] */;
  %617 = power(%614, %615) /* ty=Tensor[(9, 140), float64] */;
  (%616, %617)
}

def @func_11997() -> (Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) {
  %618 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
  %619 = cast(meta[relay.Constant][52] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %620 = cast(meta[relay.Constant][52] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %621 = reshape(%619, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), bool] */;
  %622 = reshape(%620, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), bool] */;
  %623 = @func_11474(%621, %622) /* ty=(Tensor[(5, 13, 12), bool],) */;
  %624 = %618.3;
  %625 = %623.0;
  (%624, %625, meta[relay.Constant][52] /* ty=Tensor[(780), bool] */)
}

def @func_13729() -> (Tensor[(4, 5, 2), float32],) {
  %626 = @func_12278() /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
  %627 = %626.1;
  (%627,)
}

def @func_15598() -> (Tensor[(9, 140), float32],) {
  %628 = @func_14067() /* ty=Tensor[(9, 140), float32] */;
  (%628,)
}

def @func_17014() -> (Tensor[(144), float32], Tensor[(12, 16, 2), float64], Tensor[(540, 1), float32], Tensor[(286), float32]) {
  %629 = cast(meta[relay.Constant][53] /* ty=Tensor[(540, 1), float32] */, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
  %630 = cast(meta[relay.Constant][54] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %631 = reshape(%629, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %632 = reshape(%630, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %633 = @func_9623(%631, %632) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %634 = @func_14248() /* ty=Tensor[(144), float32] */;
  %635 = %633.3;
  (%634, %635, meta[relay.Constant][53] /* ty=Tensor[(540, 1), float32] */, meta[relay.Constant][54] /* ty=Tensor[(286), float32] */)
}

def @func_17188(%var_17175: Tensor[(14, 16, 10), float64]) -> (Tensor[(14, 16, 10), float64], Tensor[(528), float32], Tensor[(1260), float32], Tensor[(468), float64]) {
  %636 = cast(%var_17175, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
  %637 = cast(meta[relay.Constant][55] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %638 = cast(meta[relay.Constant][56] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %639 = reshape(%637, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %640 = reshape(%638, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
  %641 = @func_1587(%639, %640) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
  %642 = acosh(%636) /* ty=Tensor[(14, 16, 10), float64] */;
  %643 = %641.1;
  (%642, %643, meta[relay.Constant][55] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][56] /* ty=Tensor[(468), float64] */)
}

def @main(%var_18693: Tensor[(13, 7, 4), float64]) -> Tensor[(13, 7, 4), float32] {
  %644 = cast(%var_18693, dtype="float64") /* ty=Tensor[(13, 7, 4), float64] */;
  %645 = asinh(%644) /* ty=Tensor[(13, 7, 4), float64] */;
  %646 = cast(%645, dtype="float32") /* ty=Tensor[(13, 7, 4), float32] */;
  cosh(%646) /* ty=Tensor[(13, 7, 4), float32] */
}

def @func_15438(%var_15419: Tensor[(1188), float64]) -> (Tensor[(168), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(1680), float32], float32, Tensor[(3, 11, 16), float64], Tensor[(24, 16), float64]) {
  %647 = @func_13461() /* ty=(Tensor[(168), float32],) */;
  %648 = cast(%var_15419, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %649 = cast(meta[relay.Constant][57] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %650 = cast(6.36428f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %651 = reshape(%648, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %652 = reshape(%649, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %653 = reshape(%650, newshape=[]) /* ty=float32 */;
  %654 = @func_14121(%651, %652, %653) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32], Tensor[(1680), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(12, 140), float32], float32) */;
  %655 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
  %656 = %647.0;
  %657 = %654.4;
  %658 = @func_13821() /* ty=Tensor[(3, 11, 16), float64] */;
  %659 = %655.3;
  (%656, %657, %var_15419, meta[relay.Constant][57] /* ty=Tensor[(1680), float32] */, 6.36428f /* ty=float32 */, %658, %659)
}

def @func_14267(%var_14264: Tensor[(540), float32]) -> (Tensor[(144), float32], Tensor[(1188), float64], Tensor[(360), uint16], Tensor[(540), float32], Tensor[(286), float32]) {
  %660 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
  %661 = cast(meta[relay.Constant][58] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %662 = cast(meta[relay.Constant][58] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
  %663 = cast(%var_14264, dtype="float32") /* ty=Tensor[(540), float32] */;
  %664 = cast(meta[relay.Constant][59] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %665 = reshape(%661, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), uint16] */;
  %666 = reshape(%662, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), uint16] */;
  %667 = reshape(%663, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %668 = reshape(%664, newshape=[13, 22]) /* ty=Tensor[(13, 22), float32] */;
  %669 = @func_12596(%665, %666, %667, %668) /* ty=(Tensor[(12, 15, 2), bool], Tensor[(112), float64], Tensor[(78), float32], Tensor[(540), float32], Tensor[(1188), float64], Tensor[(1, 882), float64], Tensor[(13, 22), float64]) */;
  %670 = %660.0;
  %671 = %669.4;
  (%670, %671, meta[relay.Constant][58] /* ty=Tensor[(360), uint16] */, %var_14264, meta[relay.Constant][59] /* ty=Tensor[(286), float32] */)
}

def @func_13581(%var_13555: Tensor[(1188), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(1188), float64]) {
  %672 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %673 = cast(%var_13555, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %674 = cast(%var_13555, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %675 = reshape(%673, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %676 = reshape(%674, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %677 = @func_2003(%675, %676) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %678 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  %679 = %672.0;
  %680 = %677.2;
  (%678, %679, %680, %var_13555)
}

def @func_12615(%var_12610: Tensor[(10, 2, 11), float64]) -> (Tensor[(10, 2, 11), float64],) {
  %681 = cast(%var_12610, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
  %682 = log10(%681) /* ty=Tensor[(10, 2, 11), float64] */;
  (%682,)
}

def @func_4448(%var_4315: Tensor[(11, 7, 8), float32], %var_4354: Tensor[(1, 1188), float64], %var_4396: Tensor[(1680), float32], %var_4423: Tensor[(11, 7, 8), float32], %var_4442: float32) -> (Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) {
  %683 = cast(%var_4315, dtype="float32") /* ty=Tensor[(11, 7, 8), float32] */;
  %684 = acos(%683) /* ty=Tensor[(11, 7, 8), float32] */;
  %685 = cast(%var_4315, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%684, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = greater(%687, %688) /* ty=Tensor[(11, 7, 8), bool] */;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(11, 7, 8), float32] */;
  %691 = cast(meta[relay.Constant][60] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %692 = reshape(%691, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %693 = @func_1313(%692) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %694 = cast(%var_4354, dtype="float64") /* ty=Tensor[(1, 1188), float64] */;
  %695 = cast(%var_4354, dtype="float64") /* ty=Tensor[(1, 1188), float64] */;
  %696 = reshape(%694, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %697 = reshape(%695, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %698 = @func_2003(%696, %697) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %699 = cast(meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %700 = %698.4;
  %701 = cast(%700, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
  %702 = reshape(%699, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %703 = reshape(%701, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %704 = @func_1006(%702, %703) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %705 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %706 = reshape(%705, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float32] */;
  %707 = cast(meta[relay.Constant][62] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %708 = reshape(%707, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %709 = @func_258(%708) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %710 = cast(meta[relay.Constant][62] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %711 = reshape(%710, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %712 = @func_258(%711) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %713 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %714 = reshape(%713, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float32] */;
  %715 = cast(%684, dtype="float32") /* ty=Tensor[(11, 7, 8), float32] */;
  %716 = asinh(%715) /* ty=Tensor[(11, 7, 8), float32] */;
  %717 = cast(%var_4423, dtype="float64") /* ty=Tensor[(11, 7, 8), float64] */;
  %718 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %719 = cast(%716, dtype="float64") /* ty=Tensor[(11, 7, 8), float64] */;
  %720 = dyn.reshape(%717, %718, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %721 = cast(meta[relay.Constant][60] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %722 = reshape(%721, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %723 = @func_1313(%722) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %724 = cast(%var_4442, dtype="float32") /* ty=float32 */;
  %725 = reshape(%724, newshape=[]) /* ty=float32 */;
  %726 = @func_3728(%725) /* ty=(Tensor[(3, 2, 12), float32],) */;
  %727 = atan(%690) /* ty=Tensor[(11, 7, 8), float32] */;
  %728 = %693.3;
  %729 = %704.1;
  %730 = @func_3394(%706) /* ty=Tensor[(7, 15, 16), float32] */;
  %731 = %709.2;
  %732 = %712.3;
  %733 = @func_3394(%714) /* ty=Tensor[(7, 15, 16), float32] */;
  %734 = mod(%719, %720) /* ty=Tensor[(11, 7, 8), float64] */;
  %735 = %723.0;
  %736 = %726.0;
  (%727, %728, meta[relay.Constant][60] /* ty=Tensor[(1800), float64] */, %700, %var_4354, %729, meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, %730, %var_4396, %731, meta[relay.Constant][62] /* ty=Tensor[(144), float32] */, %732, %733, %734, %735, %736, %var_4442)
}

def @func_12842(%var_12817: Tensor[(1800), float64]) -> (Tensor[(528), float64], Tensor[(528), float32], Tensor[(1800), float64]) {
  %737 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
  %738 = cast(%var_12817, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %739 = reshape(%738, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %740 = @func_1313(%739) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %741 = %737.0;
  %742 = %740.2;
  (%741, %742, %var_12817)
}

def @func_15744() -> Tensor[(3, 11, 16), float64] {
  @func_13821() /* ty=Tensor[(3, 11, 16), float64] */
}

def @func_15993() -> (Tensor[(4, 6, 7), float32],) {
  %743 = @func_12874() /* ty=(Tensor[(4, 6, 7), float32],) */;
  %744 = %743.0;
  (%744,)
}

def @func_13461() -> (Tensor[(168), float32],) {
  %745 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %746 = %745.0;
  (%746,)
}

def @func_7386(%var_7380: Tensor[(12, 2, 6), float32]) -> Tensor[(12, 2, 6), float32] {
  %747 = cast(%var_7380, dtype="float32") /* ty=Tensor[(12, 2, 6), float32] */;
  tan(%747) /* ty=Tensor[(12, 2, 6), float32] */
}

def @func_14248() -> Tensor[(144), float32] {
  %748 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
  %748.0
}

def @func_7492(%var_7458: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float32],) {
  %749 = cast(%var_7458, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
  %750 = log10(%749) /* ty=Tensor[(7, 14, 9), float64] */;
  %751 = cast(meta[relay.Constant][63] /* ty=Tensor[(7, 14, 9), float64] */, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(3), int32] */;
  %753 = cast(%750, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %755 = greater(%753, %754) /* ty=Tensor[(7, 14, 9), bool] */;
  %756 = cast(%755, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
  %757 = asin(%756) /* ty=Tensor[(7, 14, 9), float32] */;
  (%757,)
}

def @func_10917(%var_10905: Tensor[(10, 11, 13), int16], %var_10906: Tensor[(10, 11, 13), int16]) -> (Tensor[(10, 11, 13), int16],) {
  %758 = cast(%var_10906, dtype="int16") /* ty=Tensor[(10, 11, 13), int16] */;
  %759 = shape_of(%var_10905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%var_10905, dtype="int16") /* ty=Tensor[(10, 11, 13), int16] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %762 = maximum(%760, %761) /* ty=Tensor[(10, 11, 13), int16] */;
  (%762,)
}

def @func_108(%var_51: Tensor[(14, 13, 7), float32]) -> (Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) {
  %763 = cast(%var_51, dtype="float32") /* ty=Tensor[(14, 13, 7), float32] */;
  %764 = exp(%763) /* ty=Tensor[(14, 13, 7), float32] */;
  %765 = cast(%var_51, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(3), int32] */;
  %767 = cast(%764, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %769 = cast(%764, dtype="float64") /* ty=Tensor[(14, 13, 7), float64] */;
  %770 = logical_and(%767, %768) /* ty=Tensor[(14, 13, 7), bool] */;
  %771 = log10(%769) /* ty=Tensor[(14, 13, 7), float64] */;
  (%770, %771)
}

def @func_1006(%var_991: Tensor[(11, 4, 12), float32], %var_997: Tensor[(78), float32]) -> (Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) {
  %772 = cast(%var_991, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %773 = cast(%var_997, dtype="float32") /* ty=Tensor[(78), float32] */;
  %774 = reshape(%773, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float32] */;
  %775 = log(%772) /* ty=Tensor[(11, 4, 12), float32] */;
  %776 = @func_975(%774) /* ty=Tensor[(13, 2, 3), float32] */;
  (%775, %776, %var_997)
}

def @func_16594() -> (Tensor[(3, 11, 16), float64], Tensor[(11, 12, 9), bool], Tensor[(1188), float64]) {
  %777 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %778 = cast(meta[relay.Constant][64] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %779 = cast(meta[relay.Constant][64] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %780 = reshape(%778, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %781 = reshape(%779, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %782 = @func_2003(%780, %781) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %783 = %777.0;
  %784 = %782.0;
  (%783, %784, meta[relay.Constant][64] /* ty=Tensor[(1188), float64] */)
}

def @func_18242(%var_18220: Tensor[(78), uint16]) -> (Tensor[(78), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32]) {
  %785 = @func_16736() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) */;
  %786 = %785.1;
  %787 = cast(%var_18220, dtype="float32") /* ty=Tensor[(78), float32] */;
  %788 = shape_of(%786, dtype="int32") /* ty=Tensor[(1), int32] */;
  %789 = cast(%786, dtype="float32") /* ty=Tensor[(78), float32] */;
  %790 = dyn.reshape(%787, %788, newshape=[]) /* ty=Tensor[(?), float32] */;
  %791 = cast(meta[relay.Constant][65] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %792 = reshape(%791, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float32] */;
  %793 = @func_5022(%792) /* ty=(Tensor[(11, 2, 13), float32],) */;
  %794 = floor_divide(%789, %790) /* ty=Tensor[(78), float32] */;
  %795 = %793.0;
  (%794, %795, meta[relay.Constant][65] /* ty=Tensor[(286), float32] */)
}

def @func_11903() -> (Tensor[(168), float32],) {
  %796 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
  %797 = %796.4;
  (%797,)
}

def @func_17133() -> Tensor[(168), float32] {
  @func_16755() /* ty=Tensor[(168), float32] */
}

def @func_12380(%var_12319: Tensor[(7, 6, 4), bool], %var_12351: Tensor[(144), float32]) -> (Tensor[(7, 6, 4), bool], Tensor[(384), float64], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(12, 16, 2), float64]) {
  %798 = cast(meta[relay.Constant][66] /* ty=Tensor[(7, 6, 4), bool] */, dtype="bool") /* ty=Tensor[(7, 6, 4), bool] */;
  %799 = shape_of(%var_12319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %800 = cast(%var_12319, dtype="bool") /* ty=Tensor[(7, 6, 4), bool] */;
  %801 = dyn.reshape(%798, %799, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %802 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %803 = cast(%var_12351, dtype="float32") /* ty=Tensor[(144), float32] */;
  %804 = reshape(%803, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %805 = @func_258(%804) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %806 = %802.0;
  %807 = cast(%806, dtype="float64") /* ty=Tensor[(384), float64] */;
  %808 = reshape(%807, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), float64] */;
  %809 = @func_9243(%808) /* ty=(Tensor[(12, 16, 2), float64],) */;
  %810 = logical_or(%800, %801) /* ty=Tensor[(7, 6, 4), bool] */;
  %811 = %805.2;
  %812 = %809.0;
  (%810, %806, %811, %var_12351, %812)
}

def @func_14512(%var_14492: int16, %var_14508: Tensor[(18, 66), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(4, 7, 9), float32], Tensor[(32), bool], Tensor[(252), float32], Tensor[(11, 12, 9), bool], Tensor[(18, 66), float64]) {
  %813 = @func_12696() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) */;
  %814 = @func_12126() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %815 = cast(%var_14492, dtype="int16") /* ty=int16 */;
  %816 = cast(meta[relay.Constant][67] /* ty=Tensor[(4096), int16] */, dtype="int16") /* ty=Tensor[(4096), int16] */;
  %817 = reshape(%815, newshape=[]) /* ty=int16 */;
  %818 = reshape(%816, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
  %819 = @func_7980(%817, %818) /* ty=(Tensor[(16, 16, 16), float32],) */;
  %820 = cast(meta[relay.Constant][68] /* ty=Tensor[(32), bool] */, dtype="bool") /* ty=Tensor[(32), bool] */;
  %821 = cast(meta[relay.Constant][69] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %822 = reshape(%820, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), bool] */;
  %823 = reshape(%821, newshape=[252, 1]) /* ty=Tensor[(252, 1), float32] */;
  %824 = @func_6084(%822, %823) /* ty=(Tensor[(8, 4, 10), bool], Tensor[(4, 7, 9), float32], Tensor[(252, 1), float32]) */;
  %825 = cast(%var_14508, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
  %826 = cast(%var_14508, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
  %827 = reshape(%825, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %828 = reshape(%826, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %829 = @func_2003(%827, %828) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %830 = %813.0;
  %831 = %814.0;
  %832 = %819.0;
  %833 = %824.1;
  %834 = %829.0;
  (%830, %831, %832, %var_14492, meta[relay.Constant][67] /* ty=Tensor[(4096), int16] */, %833, meta[relay.Constant][68] /* ty=Tensor[(32), bool] */, meta[relay.Constant][69] /* ty=Tensor[(252), float32] */, %834, %var_14508)
}

def @func_1587(%var_1522: Tensor[(14, 6, 15), float32], %var_1542: Tensor[(234, 2), float64]) -> (Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) {
  %835 = cast(meta[relay.Constant][70] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %836 = cast(meta[relay.Constant][71] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %837 = reshape(%835, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %838 = reshape(%836, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %839 = @func_1006(%837, %838) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %840 = cast(%var_1542, dtype="float64") /* ty=Tensor[(234, 2), float64] */;
  %841 = cast(%var_1542, dtype="float64") /* ty=Tensor[(234, 2), float64] */;
  %842 = reshape(%840, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %843 = reshape(%841, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %844 = @func_1378(%842, %843) /* ty=(Tensor[(13, 6, 6), float64],) */;
  %845 = cast(meta[relay.Constant][70] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %846 = %839.2;
  %847 = cast(%846, dtype="float32") /* ty=Tensor[(78), float32] */;
  %848 = reshape(%845, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %849 = reshape(%847, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %850 = @func_1006(%848, %849) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %851 = cast(%var_1522, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %852 = sqrt(%851) /* ty=Tensor[(14, 6, 15), float32] */;
  %853 = cast(%852, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %854 = cast(meta[relay.Constant][70] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %855 = cast(%846, dtype="float32") /* ty=Tensor[(78), float32] */;
  %856 = reshape(%854, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %857 = reshape(%855, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %858 = @func_1006(%856, %857) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %859 = cast(%var_1522, dtype="int64") /* ty=Tensor[(14, 6, 15), int64] */;
  %860 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %861 = cast(%852, dtype="int64") /* ty=Tensor[(14, 6, 15), int64] */;
  %862 = dyn.reshape(%859, %860, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %863 = %844.0;
  %864 = %850.1;
  %865 = rsqrt(%853) /* ty=Tensor[(14, 6, 15), float32] */;
  %866 = %858.0;
  %867 = left_shift(%861, %862) /* ty=Tensor[(14, 6, 15), int64] */;
  (%846, meta[relay.Constant][70] /* ty=Tensor[(528), float32] */, meta[relay.Constant][71] /* ty=Tensor[(78), float32] */, %863, %var_1542, %864, %865, %866, %867)
}

def @func_13896(%var_13872: Tensor[(637, 2), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) {
  %868 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %869 = cast(%var_13872, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
  %870 = reshape(%869, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float32] */;
  %871 = @func_108(%870) /* ty=(Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) */;
  %872 = %871.1;
  %873 = cast(%872, dtype="float64") /* ty=Tensor[(14, 13, 7), float64] */;
  %874 = cast(%var_13872, dtype="float64") /* ty=Tensor[(637, 2), float64] */;
  %875 = %868.0;
  %876 = atanh(%873) /* ty=Tensor[(14, 13, 7), float64] */;
  %877 = atanh(%874) /* ty=Tensor[(637, 2), float64] */;
  (%875, %876, %877)
}

def @func_14121(%var_14109: Tensor[(1188), float64], %var_14110: Tensor[(12, 140), float32], %var_14111: float32) -> (Tensor[(4, 6, 7), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32], Tensor[(1680), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(12, 140), float32], float32) {
  %878 = @func_12874() /* ty=(Tensor[(4, 6, 7), float32],) */;
  %879 = cast(meta[relay.Constant][72] /* ty=Tensor[(364), uint32] */, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %880 = reshape(%879, newshape=[364]) /* ty=Tensor[(364), uint32] */;
  %881 = @func_11717(%880) /* ty=(Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */;
  %882 = cast(meta[relay.Constant][73] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %883 = cast(%var_14109, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %884 = cast(%var_14110, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %885 = cast(meta[relay.Constant][73] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %886 = cast(%var_14111, dtype="float32") /* ty=float32 */;
  %887 = reshape(%882, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
  %888 = reshape(%883, newshape=[1, 1188]) /* ty=Tensor[(1, 1188), float64] */;
  %889 = reshape(%884, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %890 = reshape(%885, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
  %891 = reshape(%886, newshape=[]) /* ty=float32 */;
  %892 = @func_4448(%887, %888, %889, %890, %891) /* ty=(Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) */;
  %893 = %878.0;
  %894 = %881.1;
  %895 = %892.8;
  (%893, %894, meta[relay.Constant][72] /* ty=Tensor[(364), uint32] */, %895, meta[relay.Constant][73] /* ty=Tensor[(616), float32] */, %var_14109, %var_14110, %var_14111)
}

def @func_13151() -> (Tensor[(144), float32], Tensor[(5, 13, 12), bool]) {
  %896 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
  %897 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %898 = %896.2;
  %899 = %897.1;
  (%898, %899)
}

def @func_11671(%var_11668: Tensor[(4, 5, 2), float32]) -> (Tensor[(4, 5, 2), float32],) {
  %900 = cast(%var_11668, dtype="float32") /* ty=Tensor[(4, 5, 2), float32] */;
  %901 = sqrt(%900) /* ty=Tensor[(4, 5, 2), float32] */;
  (%901,)
}

def @func_16054(%var_16046: Tensor[(9, 4, 16), uint64]) -> Tensor[(9, 4, 16), uint64] {
  %902 = cast(meta[relay.Constant][74] /* ty=Tensor[(9, 4, 1), uint64] */, dtype="uint64") /* ty=Tensor[(9, 4, 1), uint64] */;
  %903 = cast(%var_16046, dtype="uint64") /* ty=Tensor[(9, 4, 16), uint64] */;
  left_shift(%902, %903) /* ty=Tensor[(9, 4, 16), uint64] */
}

def @func_12596(%var_12552: Tensor[(12, 15, 2), uint16], %var_12553: Tensor[(12, 15, 2), uint16], %var_12565: Tensor[(540), float32], %var_12580: Tensor[(13, 22), float32]) -> (Tensor[(12, 15, 2), bool], Tensor[(112), float64], Tensor[(78), float32], Tensor[(540), float32], Tensor[(1188), float64], Tensor[(1, 882), float64], Tensor[(13, 22), float64]) {
  %904 = cast(%var_12553, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
  %905 = shape_of(%var_12552, dtype="int32") /* ty=Tensor[(3), int32] */;
  %906 = cast(%var_12552, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
  %907 = dyn.reshape(%904, %905, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %908 = cast(meta[relay.Constant][75] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %909 = cast(meta[relay.Constant][76] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %910 = cast(%var_12565, dtype="float32") /* ty=Tensor[(540), float32] */;
  %911 = cast(meta[relay.Constant][75] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
  %912 = cast(meta[relay.Constant][77] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %913 = cast(meta[relay.Constant][78] /* ty=Tensor[(1, 882), float64] */, dtype="float64") /* ty=Tensor[(1, 882), float64] */;
  %914 = reshape(%908, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
  %915 = reshape(%909, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %916 = reshape(%910, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %917 = reshape(%911, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
  %918 = reshape(%912, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %919 = reshape(%913, newshape=[882]) /* ty=Tensor[(882), float64] */;
  %920 = @func_11015(%914, %915, %916, %917, %918, %919) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(11, 2, 13), float32], Tensor[(540), float32], Tensor[(13, 22), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(14, 4, 2), bool], Tensor[(11, 12, 9), bool], Tensor[(1188), float64], Tensor[(7, 14, 9), float32], Tensor[(882), float64]) */;
  %921 = %920.7;
  %922 = cast(%var_12580, dtype="uint64") /* ty=Tensor[(13, 22), uint64] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(2), int32] */;
  %924 = cast(%921, dtype="uint64") /* ty=Tensor[(13, 22), uint64] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %926 = add(%924, %925) /* ty=Tensor[(13, 22), uint64] */;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(13, 22), float64] */;
  %928 = less_equal(%906, %907) /* ty=Tensor[(12, 15, 2), bool] */;
  %929 = erf(%927) /* ty=Tensor[(13, 22), float64] */;
  (%928, meta[relay.Constant][75] /* ty=Tensor[(112), float64] */, meta[relay.Constant][76] /* ty=Tensor[(78), float32] */, %var_12565, meta[relay.Constant][77] /* ty=Tensor[(1188), float64] */, meta[relay.Constant][78] /* ty=Tensor[(1, 882), float64] */, %929)
}

def @func_5022(%var_5017: Tensor[(11, 2, 13), float32]) -> (Tensor[(11, 2, 13), float32],) {
  %930 = cast(meta[relay.Constant][79] /* ty=Tensor[(11, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
  %931 = shape_of(%var_5017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %932 = cast(%var_5017, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
  %933 = dyn.reshape(%930, %931, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %934 = floor_divide(%932, %933) /* ty=Tensor[(11, 2, 13), float32] */;
  (%934,)
}

def @func_15837() -> (Tensor[(3, 11, 16), float64], Tensor[(18), uint16], Tensor[(286), float32], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(3, 8, 6), int32], Tensor[(144), int32], Tensor[(528), float64]) {
  %935 = cast(meta[relay.Constant][80] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %936 = cast(meta[relay.Constant][81] /* ty=Tensor[(18), uint16] */, dtype="uint16") /* ty=Tensor[(18), uint16] */;
  %937 = cast(meta[relay.Constant][82] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %938 = reshape(%935, newshape=[1, 286]) /* ty=Tensor[(1, 286), float32] */;
  %939 = reshape(%936, newshape=[18]) /* ty=Tensor[(18), uint16] */;
  %940 = reshape(%937, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %941 = @func_15521(%938, %939, %940) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(540), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(54, 22), float64], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(1800), float64]) */;
  %942 = cast(meta[relay.Constant][83] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
  %943 = cast(meta[relay.Constant][83] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
  %944 = reshape(%942, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
  %945 = reshape(%943, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
  %946 = @func_2264(%944, %945) /* ty=(Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) */;
  %947 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %948 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  %949 = %941.5;
  %950 = %946.0;
  %951 = %947.2;
  (%948, %949, meta[relay.Constant][80] /* ty=Tensor[(286), float32] */, meta[relay.Constant][81] /* ty=Tensor[(18), uint16] */, meta[relay.Constant][82] /* ty=Tensor[(1188), float64] */, %950, meta[relay.Constant][83] /* ty=Tensor[(144), int32] */, %951)
}

def @func_18177() -> (Tensor[(3, 11, 16), float64], Tensor[(168), float32]) {
  %952 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %953 = @func_13821() /* ty=Tensor[(3, 11, 16), float64] */;
  %954 = %952.0;
  (%953, %954)
}

def @func_6084(%var_6070: Tensor[(8, 4, 1), bool], %var_6080: Tensor[(252, 1), float32]) -> (Tensor[(8, 4, 10), bool], Tensor[(4, 7, 9), float32], Tensor[(252, 1), float32]) {
  %955 = cast(%var_6070, dtype="bool") /* ty=Tensor[(8, 4, 1), bool] */;
  %956 = cast(meta[relay.Constant][84] /* ty=Tensor[(8, 4, 10), bool] */, dtype="bool") /* ty=Tensor[(8, 4, 10), bool] */;
  %957 = cast(%var_6080, dtype="float32") /* ty=Tensor[(252, 1), float32] */;
  %958 = cast(%var_6080, dtype="float32") /* ty=Tensor[(252, 1), float32] */;
  %959 = reshape(%957, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %960 = reshape(%958, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %961 = @func_4214(%959, %960) /* ty=(Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) */;
  %962 = logical_or(%955, %956) /* ty=Tensor[(8, 4, 10), bool] */;
  %963 = %961.0;
  (%962, %963, %var_6080)
}

def @func_17551() -> Tensor[(168), float32] {
  %964 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %964.0
}

def @func_3927(%var_3869: Tensor[(13, 4, 11), uint16], %var_3870: Tensor[(13, 4, 11), uint16], %var_3895: Tensor[(1800), float64]) -> (Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) {
  %965 = cast(meta[relay.Constant][85] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %966 = reshape(%965, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float32] */;
  %967 = cast(%var_3869, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %968 = shape_of(%var_3870, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%var_3870, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %971 = cast(meta[relay.Constant][86] /* ty=Tensor[(2, 72), int32] */, dtype="int32") /* ty=Tensor[(2, 72), int32] */;
  %972 = cast(meta[relay.Constant][86] /* ty=Tensor[(2, 72), int32] */, dtype="int32") /* ty=Tensor[(2, 72), int32] */;
  %973 = reshape(%971, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
  %974 = reshape(%972, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
  %975 = @func_2264(%973, %974) /* ty=(Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) */;
  %976 = cast(%var_3895, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %977 = reshape(%976, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %978 = @func_1313(%977) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %979 = cast(%var_3870, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %980 = shape_of(%var_3869, dtype="int32") /* ty=Tensor[(3), int32] */;
  %981 = cast(%var_3869, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
  %982 = dyn.reshape(%979, %980, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %983 = greater_equal(%981, %982) /* ty=Tensor[(13, 4, 11), bool] */;
  %984 = cast(%983, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
  %985 = %978.0;
  %986 = cast(%985, dtype="float64") /* ty=Tensor[(15, 15, 8), float64] */;
  %987 = reshape(%986, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %988 = @func_1313(%987) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %989 = @func_3394(%966) /* ty=Tensor[(7, 15, 16), float32] */;
  %990 = mod(%969, %970) /* ty=Tensor[(13, 4, 11), float64] */;
  %991 = %975.1;
  %992 = sigmoid(%984) /* ty=Tensor[(13, 4, 11), float32] */;
  %993 = %988.3;
  (%989, meta[relay.Constant][85] /* ty=Tensor[(1680), float32] */, %990, %991, meta[relay.Constant][86] /* ty=Tensor[(2, 72), int32] */, %985, %var_3895, %992, %993)
}

def @func_11449() -> (Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) {
  %994 = cast(meta[relay.Constant][87] /* ty=Tensor[(4, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 1), float32] */;
  %995 = acos(%994) /* ty=Tensor[(4, 7, 1), float32] */;
  %996 = cast(%995, dtype="uint32") /* ty=Tensor[(4, 7, 1), uint32] */;
  %997 = shape_of(meta[relay.Constant][87] /* ty=Tensor[(4, 7, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %998 = cast(meta[relay.Constant][87] /* ty=Tensor[(4, 7, 1), float32] */, dtype="uint32") /* ty=Tensor[(4, 7, 1), uint32] */;
  %999 = dyn.reshape(%996, %997, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1000 = cast(meta[relay.Constant][88] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1001 = cast(meta[relay.Constant][88] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
  %1002 = reshape(%1000, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float64] */;
  %1003 = reshape(%1001, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float64] */;
  %1004 = right_shift(%998, %999) /* ty=Tensor[(4, 7, ?), uint32] */;
  %1005 = @func_4876(%1002, %1003) /* ty=Tensor[(3, 11, 16), float64] */;
  (%1004, %1005, meta[relay.Constant][88] /* ty=Tensor[(528), float64] */)
}

def @func_15292(%var_15215: Tensor[(100), bool], %var_15225: Tensor[(540), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(11, 2, 13), float32], Tensor[(100), bool], Tensor[(1188), float64], Tensor[(540), float32], Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(1800), float64], Tensor[(4, 6, 7), float32], Tensor[(192, 2), float64]) {
  %1006 = cast(%var_15215, dtype="bool") /* ty=Tensor[(100), bool] */;
  %1007 = reshape(%1006, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), bool] */;
  %1008 = @func_14204(%1007) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) */;
  %1009 = cast(%var_15225, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1010 = reshape(%1009, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %1011 = @func_14267(%1010) /* ty=(Tensor[(144), float32], Tensor[(1188), float64], Tensor[(360), uint16], Tensor[(540), float32], Tensor[(286), float32]) */;
  %1012 = @func_14362() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1013 = cast(meta[relay.Constant][89] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %1014 = cast(meta[relay.Constant][89] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %1015 = cast(meta[relay.Constant][90] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %1016 = reshape(%1013, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %1017 = reshape(%1014, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %1018 = reshape(%1015, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %1019 = @func_3927(%1016, %1017, %1018) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
  %1020 = @func_12874() /* ty=(Tensor[(4, 6, 7), float32],) */;
  %1021 = cast(%var_15225, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1022 = %1008.1;
  %1023 = cast(%1022, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
  %1024 = reshape(%1021, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %1025 = reshape(%1023, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %1026 = @func_9623(%1024, %1025) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %1027 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  %1028 = %1011.1;
  %1029 = %1012.0;
  %1030 = %1019.6;
  %1031 = %1020.0;
  %1032 = %1026.4;
  (%1027, %1022, %var_15215, %1028, %var_15225, %1029, %1030, meta[relay.Constant][89] /* ty=Tensor[(572), uint16] */, meta[relay.Constant][90] /* ty=Tensor[(1800), float64] */, %1031, %1032)
}

def @func_16546(%var_16517: Tensor[(20, 2), float32], %var_16520: Tensor[(2, 720), float32], %var_16532: Tensor[(252), float32]) -> (Tensor[(168), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(4, 5, 2), float32], Tensor[(20, 2), float32], Tensor[(10, 9, 16), float32], Tensor[(2, 720), float32], Tensor[(364), uint32], Tensor[(13, 2, 3), float32], Tensor[(252), float32], Tensor[(168), float32], Tensor[(3, 11, 16), float64]) {
  %1033 = @func_15949() /* ty=(Tensor[(168), float32], Tensor[(144), float32], Tensor[(168), float32]) */;
  %1034 = cast(meta[relay.Constant][91] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %1035 = reshape(%1034, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
  %1036 = @func_13896(%1035) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) */;
  %1037 = cast(%var_16517, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
  %1038 = reshape(%1037, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
  %1039 = @func_11671(%1038) /* ty=(Tensor[(4, 5, 2), float32],) */;
  %1040 = cast(%var_16520, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %1041 = cast(%var_16520, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
  %1042 = cast(meta[relay.Constant][92] /* ty=Tensor[(364), uint32] */, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %1043 = reshape(%1040, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), float32] */;
  %1044 = reshape(%1041, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), float32] */;
  %1045 = reshape(%1042, newshape=[364]) /* ty=Tensor[(364), uint32] */;
  %1046 = @func_14021(%1043, %1044, %1045) /* ty=(Tensor[(10, 9, 16), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */;
  %1047 = cast(%var_16532, dtype="float32") /* ty=Tensor[(252), float32] */;
  %1048 = cast(%var_16532, dtype="float32") /* ty=Tensor[(252), float32] */;
  %1049 = reshape(%1047, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %1050 = reshape(%1048, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %1051 = @func_4214(%1049, %1050) /* ty=(Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) */;
  %1052 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %1053 = %1033.0;
  %1054 = %1036.1;
  %1055 = %1039.0;
  %1056 = %1046.0;
  %1057 = %1051.1;
  %1058 = %1052.0;
  %1059 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  (%1053, %1054, meta[relay.Constant][91] /* ty=Tensor[(1274), float32] */, %1055, %var_16517, %1056, %var_16520, meta[relay.Constant][92] /* ty=Tensor[(364), uint32] */, %1057, %var_16532, %1058, %1059)
}

def @func_12874() -> (Tensor[(4, 6, 7), float32],) {
  %1060 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
  %1061 = %1060.1;
  (%1061,)
}

def @func_13667() -> (Tensor[(5, 13, 12), bool],) {
  %1062 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
  %1063 = %1062.1;
  (%1063,)
}

def @func_11864() -> Tensor[(3, 11, 16), float64] {
  %1064 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %1064.1
}

def @func_16612() -> Tensor[(9, 140), float32] {
  %1065 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
  %1065.0
}

def @func_16772() -> Tensor[(9, 140), float32] {
  %1066 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
  %1066.0
}

def @func_12696() -> (Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) {
  %1067 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %1068 = cast(meta[relay.Constant][94] /* ty=Tensor[(572, 1), uint16] */, dtype="uint16") /* ty=Tensor[(572, 1), uint16] */;
  %1069 = cast(meta[relay.Constant][94] /* ty=Tensor[(572, 1), uint16] */, dtype="uint16") /* ty=Tensor[(572, 1), uint16] */;
  %1070 = cast(meta[relay.Constant][93] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %1071 = reshape(%1068, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %1072 = reshape(%1069, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %1073 = reshape(%1070, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %1074 = @func_3927(%1071, %1072, %1073) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
  %1075 = %1074.1;
  %1076 = cast(meta[relay.Constant][94] /* ty=Tensor[(572, 1), uint16] */, dtype="bool") /* ty=Tensor[(572, 1), bool] */;
  %1077 = cast(%1075, dtype="bool") /* ty=Tensor[(1680), bool] */;
  %1078 = %1067.1;
  %1079 = less(%1076, %1077) /* ty=Tensor[(572, 1680), bool] */;
  (%1078, meta[relay.Constant][93] /* ty=Tensor[(1800), float64] */, %1079)
}

def @func_14694() -> (Tensor[(168), float32],) {
  %1080 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %1081 = %1080.0;
  (%1081,)
}

def @func_16331(%var_16319: Tensor[(14, 16, 13), uint8]) -> Tensor[(14, 16, 13), uint8] {
  %1082 = cast(meta[relay.Constant][95] /* ty=Tensor[(14, 16, 13), uint8] */, dtype="uint8") /* ty=Tensor[(14, 16, 13), uint8] */;
  %1083 = shape_of(%var_16319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%var_16319, dtype="uint8") /* ty=Tensor[(14, 16, 13), uint8] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_and(%1084, %1085) /* ty=Tensor[(14, 16, 13), uint8] */
}

def @func_13821() -> Tensor[(3, 11, 16), float64] {
  %1086 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1086.0
}

def @func_17069() -> (Tensor[(3, 11, 16), float64], Tensor[(144), float32]) {
  %1087 = @func_15391() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1088 = @func_17014() /* ty=(Tensor[(144), float32], Tensor[(12, 16, 2), float64], Tensor[(540, 1), float32], Tensor[(286), float32]) */;
  %1089 = %1087.0;
  %1090 = %1088.0;
  (%1089, %1090)
}

def @func_16755() -> Tensor[(168), float32] {
  %1091 = @func_13461() /* ty=(Tensor[(168), float32],) */;
  %1091.0
}

def @func_4876(%var_4868: Tensor[(3, 11, 16), float64], %var_4869: Tensor[(3, 11, 16), float64]) -> Tensor[(3, 11, 16), float64] {
  %1092 = cast(%var_4869, dtype="float64") /* ty=Tensor[(3, 11, 16), float64] */;
  %1093 = shape_of(%var_4868, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1094 = cast(%var_4868, dtype="float64") /* ty=Tensor[(3, 11, 16), float64] */;
  %1095 = dyn.reshape(%1092, %1093, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  mod(%1094, %1095) /* ty=Tensor[(3, 11, 16), float64] */
}

def @func_18335() -> (Tensor[(3, 11, 16), float64],) {
  %1096 = @func_14377() /* ty=Tensor[(3, 11, 16), float64] */;
  (%1096,)
}

def @func_14067() -> Tensor[(9, 140), float32] {
  %1097 = @func_14056() /* ty=(Tensor[(168), float32], Tensor[(13, 6, 6), float64], Tensor[(9, 140), float32], Tensor[(468), float64]) */;
  %1097.2
}

def @func_7980(%var_7966: int16, %var_7967: Tensor[(16, 16, 16), int16]) -> (Tensor[(16, 16, 16), float32],) {
  %1098 = cast(%var_7966, dtype="int16") /* ty=int16 */;
  %1099 = cast(%var_7967, dtype="int16") /* ty=Tensor[(16, 16, 16), int16] */;
  %1100 = bitwise_and(%1098, %1099) /* ty=Tensor[(16, 16, 16), int16] */;
  %1101 = cast(%1100, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  %1102 = cosh(%1101) /* ty=Tensor[(16, 16, 16), float32] */;
  (%1102,)
}

def @func_14749(%var_14723: float64, %var_14731: Tensor[(528), float32]) -> (Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(1, 78), float32], Tensor[(?, 9, 3), float64]) {
  %1103 = cast(%var_14731, dtype="float32") /* ty=Tensor[(528), float32] */;
  %1104 = cast(meta[relay.Constant][96] /* ty=Tensor[(1, 78), float32] */, dtype="float32") /* ty=Tensor[(1, 78), float32] */;
  %1105 = reshape(%1103, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %1106 = reshape(%1104, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %1107 = @func_1006(%1105, %1106) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %1108 = cast(%var_14723, dtype="float64") /* ty=float64 */;
  %1109 = cast(meta[relay.Constant][97] /* ty=Tensor[(1, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %1110 = minimum(%1108, %1109) /* ty=Tensor[(1, 9, 3), float64] */;
  %1111 = cast(meta[relay.Constant][97] /* ty=Tensor[(1, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %1112 = shape_of(%1110, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1113 = cast(%1110, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %1114 = dyn.reshape(%1111, %1112, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1115 = %1107.0;
  %1116 = power(%1113, %1114) /* ty=Tensor[(?, 9, 3), float64] */;
  (%1115, %var_14731, meta[relay.Constant][96] /* ty=Tensor[(1, 78), float32] */, %1116)
}

def @func_14874(%var_14860: Tensor[(540), float32], %var_14861: Tensor[(13, 22), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(13, 22), float32]) {
  %1117 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %1118 = cast(%var_14860, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1119 = cast(%var_14861, dtype="float32") /* ty=Tensor[(13, 22), float32] */;
  %1120 = reshape(%1118, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %1121 = reshape(%1119, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %1122 = @func_9623(%1120, %1121) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %1123 = %1117.0;
  %1124 = %1122.3;
  (%1123, %1124, %var_14860, %var_14861)
}

def @func_2264(%var_2219: Tensor[(3, 8, 6), int32], %var_2220: Tensor[(3, 8, 6), int32]) -> (Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) {
  %1125 = cast(%var_2220, dtype="int32") /* ty=Tensor[(3, 8, 6), int32] */;
  %1126 = shape_of(%var_2219, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1127 = cast(%var_2219, dtype="int32") /* ty=Tensor[(3, 8, 6), int32] */;
  %1128 = dyn.reshape(%1125, %1126, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1129 = cast(%var_2219, dtype="float32") /* ty=Tensor[(3, 8, 6), float32] */;
  %1130 = reshape(%1129, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %1131 = @func_258(%1130) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %1132 = cast(meta[relay.Constant][98] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %1133 = cast(meta[relay.Constant][98] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %1134 = reshape(%1132, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %1135 = reshape(%1133, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %1136 = @func_2003(%1134, %1135) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %1137 = bitwise_xor(%1127, %1128) /* ty=Tensor[(3, 8, 6), int32] */;
  %1138 = %1131.0;
  %1139 = %1136.3;
  (%1137, %1138, %1139, meta[relay.Constant][98] /* ty=Tensor[(1188), float64] */)
}

def @func_3394(%var_3385: Tensor[(7, 15, 16), float32]) -> Tensor[(7, 15, 16), float32] {
  %1140 = cast(meta[relay.Constant][99] /* ty=Tensor[(7, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 16), float32] */;
  %1141 = shape_of(%var_3385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1142 = cast(%var_3385, dtype="float32") /* ty=Tensor[(7, 15, 16), float32] */;
  %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1142, %1143) /* ty=Tensor[(7, 15, 16), float32] */
}

def @func_14362() -> (Tensor[(3, 11, 16), float64],) {
  %1144 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1145 = %1144.0;
  (%1145,)
}

def @func_11717(%var_11699: Tensor[(364), uint32]) -> (Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) {
  %1146 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %1147 = cast(%var_11699, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %1148 = reshape(%1147, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), uint32] */;
  %1149 = %1146.2;
  %1150 = @func_11631(%1148) /* ty=Tensor[(4, 7, 13), bool] */;
  (%1149, %1150, %var_11699)
}

def @func_16992(%var_16924: Tensor[(1, 286), float32], %var_16930: Tensor[(468), float64]) -> (Tensor[(286), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(3, 11, 16), float64], Tensor[(468), float64], Tensor[(24, 16), float64], Tensor[(3, 11, 16), float64]) {
  %1151 = cast(meta[relay.Constant][100] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1152 = cast(%var_16924, dtype="float32") /* ty=Tensor[(1, 286), float32] */;
  %1153 = reshape(%1151, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %1154 = reshape(%1152, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %1155 = @func_15020(%1153, %1154) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) */;
  %1156 = cast(%var_16930, dtype="float64") /* ty=Tensor[(468), float64] */;
  %1157 = reshape(%1156, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %1158 = @func_12186(%1157) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64]) */;
  %1159 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
  %1160 = %1159.3;
  %1161 = cast(%1160, dtype="float64") /* ty=Tensor[(24, 16), float64] */;
  %1162 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1163 = %1155.3;
  %1164 = %1158.0;
  %1165 = log(%1161) /* ty=Tensor[(24, 16), float64] */;
  %1166 = %1162.0;
  (%1163, meta[relay.Constant][100] /* ty=Tensor[(540), float32] */, %var_16924, %1164, %var_16930, %1165, %1166)
}

def @func_11631(%var_11614: Tensor[(4, 7, 13), uint32]) -> Tensor[(4, 7, 13), bool] {
  %1167 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %1168 = %1167.0;
  %1169 = cast(%1168, dtype="int16") /* ty=Tensor[(4, 7, ?), int16] */;
  %1170 = cast(%var_11614, dtype="int16") /* ty=Tensor[(4, 7, 13), int16] */;
  %1171 = add(%1169, %1170) /* ty=Tensor[(4, 7, 13), int16] */;
  %1172 = cast(%1171, dtype="bool") /* ty=Tensor[(4, 7, 13), bool] */;
  %1173 = cast(%1168, dtype="bool") /* ty=Tensor[(4, 7, ?), bool] */;
  equal(%1172, %1173) /* ty=Tensor[(4, 7, 13), bool] */
}

def @func_15060(%var_15048: Tensor[(78), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) {
  %1174 = cast(meta[relay.Constant][101] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %1175 = cast(%var_15048, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1176 = reshape(%1174, newshape=[8, 1, 7]) /* ty=Tensor[(8, 1, 7), float64] */;
  %1177 = reshape(%1175, newshape=[26, 3]) /* ty=Tensor[(26, 3), float32] */;
  %1178 = @func_3797(%1176, %1177) /* ty=(Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) */;
  %1179 = @func_14377() /* ty=Tensor[(3, 11, 16), float64] */;
  %1180 = %1178.2;
  (%1179, %1180, meta[relay.Constant][101] /* ty=Tensor[(56), float64] */, %var_15048)
}

def @func_15037(%var_15033: Tensor[(1430), int16]) -> (Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) {
  %1181 = cast(%var_15033, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %1182 = cast(%var_15033, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %1183 = reshape(%1181, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %1184 = reshape(%1182, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %1185 = @func_10917(%1183, %1184) /* ty=(Tensor[(10, 11, 13), int16],) */;
  %1186 = @func_14248() /* ty=Tensor[(144), float32] */;
  %1187 = %1185.0;
  (%1186, %1187, %var_15033)
}

def @func_16184() -> (Tensor[(780), bool],) {
  %1188 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %1189 = %1188.2;
  (%1189,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_18337() -> (Tensor[(3, 11, 16), float64],) {
  @func_18335() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_1381(%var_1379: Tensor[(13, 6, 6), float64], %var_1380: Tensor[(13, 6, 6), float64]) -> (Tensor[(13, 6, 6), float64],) {
  %5 = fn (%var_1362: Tensor[(13, 6, 6), float64], %var_1363: Tensor[(13, 6, 6), float64]) -> (Tensor[(13, 6, 6), float64],) {
    %0 = cast(%var_1363, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
    %1 = shape_of(%var_1362, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(%var_1362, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %4 = divide(%2, %3) /* ty=Tensor[(13, 6, 6), float64] */;
    (%4,)
  };
  %5(%var_1379, %var_1380) /* ty=(Tensor[(13, 6, 6), float64],) */
}

def @func_14943() -> (Tensor[(3, 11, 16), float64],) {
  %8 = fn () -> (Tensor[(3, 11, 16), float64],) {
    %6 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
    %7 = %6.0;
    (%7,)
  };
  %8() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_16902() -> (Tensor[(78), float64],) {
  %13 = fn () -> (Tensor[(78), float64],) {
    %9 = @func_16736() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) */;
    %10 = %9.1;
    %11 = cast(%10, dtype="float64") /* ty=Tensor[(78), float64] */;
    %12 = acosh(%11) /* ty=Tensor[(78), float64] */;
    (%12,)
  };
  %13() /* ty=(Tensor[(78), float64],) */
}

def @func_18177() -> (Tensor[(3, 11, 16), float64], Tensor[(168), float32]) {
  %14 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %15 = @func_13821() /* ty=Tensor[(3, 11, 16), float64] */;
  %16 = %14.0;
  (%15, %16)
}

def @func_17790() -> (Tensor[(3, 11, 16), float64],) {
  @func_17788() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_14878(%var_14876: Tensor[(540), float32], %var_14877: Tensor[(13, 22), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(13, 22), float32]) {
  @func_14874(%var_14876, %var_14877) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(13, 22), float32]) */
}

def @func_16184() -> (Tensor[(780), bool],) {
  %17 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %18 = %17.2;
  (%18,)
}

def @func_18244(%var_18243: Tensor[(78), uint16]) -> (Tensor[(78), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32]) {
  %30 = fn (%var_18220: Tensor[(78), uint16]) -> (Tensor[(78), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32]) {
    %19 = @func_16736() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) */;
    %20 = %19.1;
    %21 = cast(%var_18220, dtype="float32") /* ty=Tensor[(78), float32] */;
    %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(1), int32] */;
    %23 = cast(%20, dtype="float32") /* ty=Tensor[(78), float32] */;
    %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), float32] */;
    %25 = cast(meta[relay.Constant][0] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
    %26 = reshape(%25, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float32] */;
    %27 = @func_5022(%26) /* ty=(Tensor[(11, 2, 13), float32],) */;
    %28 = floor_divide(%23, %24) /* ty=Tensor[(78), float32] */;
    %29 = %27.0;
    (%28, %29, meta[relay.Constant][0] /* ty=Tensor[(286), float32] */)
  };
  %30(%var_18243) /* ty=(Tensor[(78), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32]) */
}

def @func_10917(%var_10905: Tensor[(10, 11, 13), int16], %var_10906: Tensor[(10, 11, 13), int16]) -> (Tensor[(10, 11, 13), int16],) {
  %31 = cast(%var_10906, dtype="int16") /* ty=Tensor[(10, 11, 13), int16] */;
  %32 = shape_of(%var_10905, dtype="int32") /* ty=Tensor[(3), int32] */;
  %33 = cast(%var_10905, dtype="int16") /* ty=Tensor[(10, 11, 13), int16] */;
  %34 = dyn.reshape(%31, %32, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %35 = maximum(%33, %34) /* ty=Tensor[(10, 11, 13), int16] */;
  (%35,)
}

def @func_17846() -> (Tensor[(1800), float64], Tensor[(168), float32], Tensor[(144), float32]) {
  @func_17844() /* ty=(Tensor[(1800), float64], Tensor[(168), float32], Tensor[(144), float32]) */
}

def @func_15159(%var_15157: int16, %var_15158: Tensor[(1, 100), bool]) -> (Tensor[(3, 11, 16), float64], Tensor[(168), float32], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(3, 11, 16), float64], Tensor[(1, 100), bool]) {
  %50 = fn (%var_15146: int16, %var_15150: Tensor[(1, 100), bool]) -> (Tensor[(3, 11, 16), float64], Tensor[(168), float32], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(3, 11, 16), float64], Tensor[(1, 100), bool]) {
    %36 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
    %37 = @func_14320() /* ty=(Tensor[(168), float32],) */;
    %38 = cast(%var_15146, dtype="int16") /* ty=int16 */;
    %39 = cast(meta[relay.Constant][1] /* ty=Tensor[(4096), int16] */, dtype="int16") /* ty=Tensor[(4096), int16] */;
    %40 = reshape(%38, newshape=[]) /* ty=int16 */;
    %41 = reshape(%39, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
    %42 = @func_7980(%40, %41) /* ty=(Tensor[(16, 16, 16), float32],) */;
    %43 = cast(%var_15150, dtype="bool") /* ty=Tensor[(1, 100), bool] */;
    %44 = reshape(%43, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), bool] */;
    %45 = @func_14204(%44) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) */;
    %46 = %36.0;
    %47 = %37.0;
    %48 = %42.0;
    %49 = %45.3;
    (%46, %47, %48, %var_15146, meta[relay.Constant][1] /* ty=Tensor[(4096), int16] */, %49, %var_15150)
  };
  %50(%var_15157, %var_15158) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(168), float32], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(3, 11, 16), float64], Tensor[(1, 100), bool]) */
}

def @func_15062(%var_15061: Tensor[(78), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) {
  %58 = fn (%var_15048: Tensor[(78), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) {
    %51 = cast(meta[relay.Constant][2] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
    %52 = cast(%var_15048, dtype="float32") /* ty=Tensor[(78), float32] */;
    %53 = reshape(%51, newshape=[8, 1, 7]) /* ty=Tensor[(8, 1, 7), float64] */;
    %54 = reshape(%52, newshape=[26, 3]) /* ty=Tensor[(26, 3), float32] */;
    %55 = @func_3797(%53, %54) /* ty=(Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) */;
    %56 = @func_14377() /* ty=Tensor[(3, 11, 16), float64] */;
    %57 = %55.2;
    (%56, %57, meta[relay.Constant][2] /* ty=Tensor[(56), float64] */, %var_15048)
  };
  %58(%var_15061) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) */
}

def @func_18049(%var_18048: Tensor[(4, 5, 2), float32]) -> (Tensor[(9, 140), float32], Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), bool]) {
  %69 = fn (%var_18026: Tensor[(4, 5, 2), float32]) -> (Tensor[(9, 140), float32], Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), bool]) {
    %59 = @func_15892() /* ty=(Tensor[(5, 13, 12), bool],) */;
    %60 = @func_13729() /* ty=(Tensor[(4, 5, 2), float32],) */;
    %61 = %60.0;
    %62 = cast(%var_18026, dtype="bool") /* ty=Tensor[(4, 5, 2), bool] */;
    %63 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
    %64 = cast(%61, dtype="bool") /* ty=Tensor[(4, 5, 2), bool] */;
    %65 = dyn.reshape(%62, %63, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %66 = @func_16612() /* ty=Tensor[(9, 140), float32] */;
    %67 = %59.0;
    %68 = equal(%64, %65) /* ty=Tensor[(4, 5, 2), bool] */;
    (%66, %67, %68)
  };
  %69(%var_18048) /* ty=(Tensor[(9, 140), float32], Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), bool]) */
}

def @func_14021(%var_13998: Tensor[(10, 9, 16), float32], %var_13999: Tensor[(10, 9, 16), float32], %var_14010: Tensor[(364), uint32]) -> (Tensor[(10, 9, 16), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) {
  %70 = cast(%var_13999, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %71 = shape_of(%var_13998, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%var_13998, dtype="float32") /* ty=Tensor[(10, 9, 16), float32] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %74 = cast(%var_14010, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %75 = reshape(%74, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), uint32] */;
  %76 = divide(%72, %73) /* ty=Tensor[(10, 9, 16), float32] */;
  %77 = @func_11631(%75) /* ty=Tensor[(4, 7, 13), bool] */;
  (%76, %77, %var_14010)
}

def @func_11631(%var_11614: Tensor[(4, 7, 13), uint32]) -> Tensor[(4, 7, 13), bool] {
  %78 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %79 = %78.0;
  %80 = cast(%79, dtype="int16") /* ty=Tensor[(4, 7, ?), int16] */;
  %81 = cast(%var_11614, dtype="int16") /* ty=Tensor[(4, 7, 13), int16] */;
  %82 = add(%80, %81) /* ty=Tensor[(4, 7, 13), int16] */;
  %83 = cast(%82, dtype="bool") /* ty=Tensor[(4, 7, 13), bool] */;
  %84 = cast(%79, dtype="bool") /* ty=Tensor[(4, 7, ?), bool] */;
  equal(%83, %84) /* ty=Tensor[(4, 7, 13), bool] */
}

def @func_13584(%var_13582: Tensor[(1188), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(1188), float64]) {
  @func_13581(%var_13582) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(1188), float64]) */
}

def @func_7494(%var_7493: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float32],) {
  %94 = fn (%var_7458: Tensor[(7, 14, 9), float64]) -> (Tensor[(7, 14, 9), float32],) {
    %85 = cast(%var_7458, dtype="float64") /* ty=Tensor[(7, 14, 9), float64] */;
    %86 = log10(%85) /* ty=Tensor[(7, 14, 9), float64] */;
    %87 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 14, 9), float64] */, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
    %88 = shape_of(%86, dtype="int32") /* ty=Tensor[(3), int32] */;
    %89 = cast(%86, dtype="bool") /* ty=Tensor[(7, 14, 9), bool] */;
    %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %91 = greater(%89, %90) /* ty=Tensor[(7, 14, 9), bool] */;
    %92 = cast(%91, dtype="float32") /* ty=Tensor[(7, 14, 9), float32] */;
    %93 = asin(%92) /* ty=Tensor[(7, 14, 9), float32] */;
    (%93,)
  };
  %94(%var_7493) /* ty=(Tensor[(7, 14, 9), float32],) */
}

def @func_15371() -> (Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(13, 6), float32]) {
  @func_15369() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(13, 6), float32]) */
}

def @func_16614() -> Tensor[(9, 140), float32] {
  @func_16612() /* ty=Tensor[(9, 140), float32] */
}

def @func_16387() -> (Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) {
  %111 = fn () -> (Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) {
    %95 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
    %96 = cast(meta[relay.Constant][4] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %97 = reshape(%96, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %98 = @func_13581(%97) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(1188), float64]) */;
    %99 = cast(meta[relay.Constant][5] /* ty=Tensor[(715, 2), int16] */, dtype="int16") /* ty=Tensor[(715, 2), int16] */;
    %100 = reshape(%99, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
    %101 = @func_15037(%100) /* ty=(Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) */;
    %102 = cast(meta[relay.Constant][4] /* ty=Tensor[(1188), float64] */, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %103 = sin(%102) /* ty=Tensor[(1188), float32] */;
    %104 = cast(%103, dtype="float32") /* ty=Tensor[(1188), float32] */;
    %105 = cast(%103, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %106 = %95.0;
    %107 = %98.0;
    %108 = %101.1;
    %109 = erf(%104) /* ty=Tensor[(1188), float32] */;
    %110 = asinh(%105) /* ty=Tensor[(1188), float64] */;
    (%106, %107, %108, meta[relay.Constant][5] /* ty=Tensor[(715, 2), int16] */, %109, %110)
  };
  %111() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) */
}

def @func_15037(%var_15033: Tensor[(1430), int16]) -> (Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) {
  %112 = cast(%var_15033, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %113 = cast(%var_15033, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %114 = reshape(%112, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %115 = reshape(%113, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %116 = @func_10917(%114, %115) /* ty=(Tensor[(10, 11, 13), int16],) */;
  %117 = @func_14248() /* ty=Tensor[(144), float32] */;
  %118 = %116.0;
  (%117, %118, %var_15033)
}

def @func_15600() -> (Tensor[(9, 140), float32],) {
  @func_15598() /* ty=(Tensor[(9, 140), float32],) */
}

def @func_16596() -> (Tensor[(3, 11, 16), float64], Tensor[(11, 12, 9), bool], Tensor[(1188), float64]) {
  @func_16594() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(11, 12, 9), bool], Tensor[(1188), float64]) */
}

def @func_15197() -> Tensor[(5, 13, 12), bool] {
  %119 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %119.0
}

def @func_17676(%var_17674: Tensor[(468), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(5, 13, 12), bool], Tensor[(11, 12, 9), bool], Tensor[(168), float32], Tensor[(10, 11, 13), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64], Tensor[(1188, 144), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(168), float32]) {
  @func_17673(%var_17674) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(5, 13, 12), bool], Tensor[(11, 12, 9), bool], Tensor[(168), float32], Tensor[(10, 11, 13), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64], Tensor[(1188, 144), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(168), float32]) */
}

def @func_17731(%var_17718: Tensor[(286), float32]) -> (Tensor[(9, 140), float32], Tensor[(192, 2), float64], Tensor[(540), float32], Tensor[(286), int8]) {
  %120 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
  %121 = cast(meta[relay.Constant][6] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %122 = cast(meta[relay.Constant][7] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %123 = reshape(%121, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %124 = reshape(%122, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %125 = @func_9623(%123, %124) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %126 = cast(%var_17718, dtype="int8") /* ty=Tensor[(286), int8] */;
  %127 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(286), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %128 = cast(meta[relay.Constant][7] /* ty=Tensor[(286), float32] */, dtype="int8") /* ty=Tensor[(286), int8] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?), int8] */;
  %130 = %120.0;
  %131 = %125.4;
  %132 = minimum(%128, %129) /* ty=Tensor[(286), int8] */;
  (%130, %131, meta[relay.Constant][6] /* ty=Tensor[(540), float32] */, %132)
}

def @func_17071() -> (Tensor[(3, 11, 16), float64], Tensor[(144), float32]) {
  @func_17069() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(144), float32]) */
}

def @func_18651(%var_18621: Tensor[(12, 4, 1), int32]) -> (Tensor[(12, 4, 13), int32], Tensor[(168), float32], Tensor[(3, 11, 16), float64], Tensor[(168), float32]) {
  %133 = cast(%var_18621, dtype="int32") /* ty=Tensor[(12, 4, 1), int32] */;
  %134 = cast(meta[relay.Constant][8] /* ty=Tensor[(12, 4, 13), int32] */, dtype="int32") /* ty=Tensor[(12, 4, 13), int32] */;
  %135 = @func_13461() /* ty=(Tensor[(168), float32],) */;
  %136 = bitwise_or(%133, %134) /* ty=Tensor[(12, 4, 13), int32] */;
  %137 = %135.0;
  %138 = @func_15744() /* ty=Tensor[(3, 11, 16), float64] */;
  %139 = @func_12290() /* ty=Tensor[(168), float32] */;
  (%136, %137, %138, %139)
}

def @func_18510(%var_18432: Tensor[(286), float32], %var_18461: Tensor[(78), float32]) -> (Tensor[(540), float32], Tensor[(286), float32], Tensor[(8, 11, 7), float64], Tensor[(56), float64], Tensor[(78), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(4, 5, 2), int16]) {
  %140 = cast(%var_18432, dtype="float32") /* ty=Tensor[(286), float32] */;
  %141 = reshape(%140, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %142 = @func_17731(%141) /* ty=(Tensor[(9, 140), float32], Tensor[(192, 2), float64], Tensor[(540), float32], Tensor[(286), int8]) */;
  %143 = cast(meta[relay.Constant][9] /* ty=Tensor[(56), float64] */, dtype="float64") /* ty=Tensor[(56), float64] */;
  %144 = cast(%var_18461, dtype="float32") /* ty=Tensor[(78), float32] */;
  %145 = reshape(%143, newshape=[8, 1, 7]) /* ty=Tensor[(8, 1, 7), float64] */;
  %146 = reshape(%144, newshape=[26, 3]) /* ty=Tensor[(26, 3), float32] */;
  %147 = @func_3797(%145, %146) /* ty=(Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) */;
  %148 = cast(meta[relay.Constant][10] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %149 = cast(meta[relay.Constant][10] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %150 = reshape(%148, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %151 = reshape(%149, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %152 = @func_8764(%150, %151) /* ty=(Tensor[(7, 2, 12), uint16],) */;
  %153 = @func_13729() /* ty=(Tensor[(4, 5, 2), float32],) */;
  %154 = %153.0;
  %155 = cast(%154, dtype="float32") /* ty=Tensor[(4, 5, 2), float32] */;
  %156 = sigmoid(%155) /* ty=Tensor[(4, 5, 2), float32] */;
  %157 = cast(%156, dtype="float64") /* ty=Tensor[(4, 5, 2), float64] */;
  %158 = cos(%157) /* ty=Tensor[(4, 5, 2), float64] */;
  %159 = cast(%154, dtype="int16") /* ty=Tensor[(4, 5, 2), int16] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="int16") /* ty=Tensor[(4, 5, 2), int16] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %163 = %142.2;
  %164 = %147.0;
  %165 = %152.0;
  %166 = minimum(%161, %162) /* ty=Tensor[(4, 5, 2), int16] */;
  (%163, %var_18432, %164, meta[relay.Constant][9] /* ty=Tensor[(56), float64] */, %var_18461, %165, meta[relay.Constant][10] /* ty=Tensor[(168), uint16] */, %166)
}

def @func_17283(%var_17281: Tensor[(18, 100), float64], %var_17282: Tensor[(18, 100), float64]) -> (Tensor[(168), float32], Tensor[(11, 12, 9), bool], Tensor[(528), float64], Tensor[(616), float32], Tensor[(18, 100), float64], Tensor[(18, 100), int8]) {
  %189 = fn (%var_17237: Tensor[(18, 100), float64], %var_17253: Tensor[(18, 100), float64]) -> (Tensor[(168), float32], Tensor[(11, 12, 9), bool], Tensor[(528), float64], Tensor[(616), float32], Tensor[(18, 100), float64], Tensor[(18, 100), int8]) {
    %167 = @func_11903() /* ty=(Tensor[(168), float32],) */;
    %168 = @func_16594() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(11, 12, 9), bool], Tensor[(1188), float64]) */;
    %169 = cast(%var_17237, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
    %170 = reshape(%169, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %171 = @func_12842(%170) /* ty=(Tensor[(528), float64], Tensor[(528), float32], Tensor[(1800), float64]) */;
    %172 = %168.1;
    %173 = cast(%172, dtype="float64") /* ty=Tensor[(11, 12, 9), float64] */;
    %174 = reshape(%173, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %175 = @func_15438(%174) /* ty=(Tensor[(168), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(1680), float32], float32, Tensor[(3, 11, 16), float64], Tensor[(24, 16), float64]) */;
    %176 = cast(%var_17253, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
    %177 = shape_of(%var_17237, dtype="int32") /* ty=Tensor[(2), int32] */;
    %178 = cast(%var_17237, dtype="float64") /* ty=Tensor[(18, 100), float64] */;
    %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %180 = cast(%var_17253, dtype="int8") /* ty=Tensor[(18, 100), int8] */;
    %181 = shape_of(%var_17237, dtype="int32") /* ty=Tensor[(2), int32] */;
    %182 = cast(%var_17237, dtype="int8") /* ty=Tensor[(18, 100), int8] */;
    %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %184 = %167.0;
    %185 = %171.0;
    %186 = %175.1;
    %187 = divide(%178, %179) /* ty=Tensor[(18, 100), float64] */;
    %188 = add(%182, %183) /* ty=Tensor[(18, 100), int8] */;
    (%184, %172, %185, %186, %187, %188)
  };
  %189(%var_17281, %var_17282) /* ty=(Tensor[(168), float32], Tensor[(11, 12, 9), bool], Tensor[(528), float64], Tensor[(616), float32], Tensor[(18, 100), float64], Tensor[(18, 100), int8]) */
}

def @func_18514(%var_18512: Tensor[(286), float32], %var_18513: Tensor[(78), float32]) -> (Tensor[(540), float32], Tensor[(286), float32], Tensor[(8, 11, 7), float64], Tensor[(56), float64], Tensor[(78), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(4, 5, 2), int16]) {
  @func_18510(%var_18512, %var_18513) /* ty=(Tensor[(540), float32], Tensor[(286), float32], Tensor[(8, 11, 7), float64], Tensor[(56), float64], Tensor[(78), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(4, 5, 2), int16]) */
}

def @func_14512(%var_14492: int16, %var_14508: Tensor[(18, 66), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(4, 7, 9), float32], Tensor[(32), bool], Tensor[(252), float32], Tensor[(11, 12, 9), bool], Tensor[(18, 66), float64]) {
  %190 = @func_12696() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) */;
  %191 = @func_12126() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %192 = cast(%var_14492, dtype="int16") /* ty=int16 */;
  %193 = cast(meta[relay.Constant][11] /* ty=Tensor[(4096), int16] */, dtype="int16") /* ty=Tensor[(4096), int16] */;
  %194 = reshape(%192, newshape=[]) /* ty=int16 */;
  %195 = reshape(%193, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
  %196 = @func_7980(%194, %195) /* ty=(Tensor[(16, 16, 16), float32],) */;
  %197 = cast(meta[relay.Constant][12] /* ty=Tensor[(32), bool] */, dtype="bool") /* ty=Tensor[(32), bool] */;
  %198 = cast(meta[relay.Constant][13] /* ty=Tensor[(252), float32] */, dtype="float32") /* ty=Tensor[(252), float32] */;
  %199 = reshape(%197, newshape=[8, 4, 1]) /* ty=Tensor[(8, 4, 1), bool] */;
  %200 = reshape(%198, newshape=[252, 1]) /* ty=Tensor[(252, 1), float32] */;
  %201 = @func_6084(%199, %200) /* ty=(Tensor[(8, 4, 10), bool], Tensor[(4, 7, 9), float32], Tensor[(252, 1), float32]) */;
  %202 = cast(%var_14508, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
  %203 = cast(%var_14508, dtype="float64") /* ty=Tensor[(18, 66), float64] */;
  %204 = reshape(%202, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %205 = reshape(%203, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %206 = @func_2003(%204, %205) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %207 = %190.0;
  %208 = %191.0;
  %209 = %196.0;
  %210 = %201.1;
  %211 = %206.0;
  (%207, %208, %209, %var_14492, meta[relay.Constant][11] /* ty=Tensor[(4096), int16] */, %210, meta[relay.Constant][12] /* ty=Tensor[(32), bool] */, meta[relay.Constant][13] /* ty=Tensor[(252), float32] */, %211, %var_14508)
}

def @func_14320() -> (Tensor[(168), float32],) {
  %212 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %213 = %212.0;
  (%213,)
}

def @func_12380(%var_12319: Tensor[(7, 6, 4), bool], %var_12351: Tensor[(144), float32]) -> (Tensor[(7, 6, 4), bool], Tensor[(384), float64], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(12, 16, 2), float64]) {
  %214 = cast(meta[relay.Constant][14] /* ty=Tensor[(7, 6, 4), bool] */, dtype="bool") /* ty=Tensor[(7, 6, 4), bool] */;
  %215 = shape_of(%var_12319, dtype="int32") /* ty=Tensor[(3), int32] */;
  %216 = cast(%var_12319, dtype="bool") /* ty=Tensor[(7, 6, 4), bool] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %218 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %219 = cast(%var_12351, dtype="float32") /* ty=Tensor[(144), float32] */;
  %220 = reshape(%219, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %221 = @func_258(%220) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %222 = %218.0;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(384), float64] */;
  %224 = reshape(%223, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), float64] */;
  %225 = @func_9243(%224) /* ty=(Tensor[(12, 16, 2), float64],) */;
  %226 = logical_or(%216, %217) /* ty=Tensor[(7, 6, 4), bool] */;
  %227 = %221.2;
  %228 = %225.0;
  (%226, %222, %227, %var_12351, %228)
}

def @func_7389(%var_7387: Tensor[(12, 2, 6), float32]) -> Tensor[(12, 2, 6), float32] {
  @func_7386(%var_7387) /* ty=Tensor[(12, 2, 6), float32] */
}

def @func_258(%var_233: Tensor[(9, 1, 16), float32]) -> (Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) {
  %229 = cast(%var_233, dtype="float32") /* ty=Tensor[(9, 1, 16), float32] */;
  %230 = cast(%var_233, dtype="float32") /* ty=Tensor[(9, 1, 16), float32] */;
  %231 = cast(meta[relay.Constant][15] /* ty=Tensor[(1274, 1), float32] */, dtype="float32") /* ty=Tensor[(1274, 1), float32] */;
  %232 = reshape(%231, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float32] */;
  %233 = @func_108(%232) /* ty=(Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) */;
  %234 = log2(%229) /* ty=Tensor[(9, 1, 16), float32] */;
  %235 = rsqrt(%230) /* ty=Tensor[(9, 1, 16), float32] */;
  %236 = %233.0;
  (%234, %235, %236, meta[relay.Constant][15] /* ty=Tensor[(1274, 1), float32] */)
}

def @func_12601(%var_12597: Tensor[(12, 15, 2), uint16], %var_12598: Tensor[(12, 15, 2), uint16], %var_12599: Tensor[(540), float32], %var_12600: Tensor[(13, 22), float32]) -> (Tensor[(12, 15, 2), bool], Tensor[(112), float64], Tensor[(78), float32], Tensor[(540), float32], Tensor[(1188), float64], Tensor[(1, 882), float64], Tensor[(13, 22), float64]) {
  %263 = fn (%var_12552: Tensor[(12, 15, 2), uint16], %var_12553: Tensor[(12, 15, 2), uint16], %var_12565: Tensor[(540), float32], %var_12580: Tensor[(13, 22), float32]) -> (Tensor[(12, 15, 2), bool], Tensor[(112), float64], Tensor[(78), float32], Tensor[(540), float32], Tensor[(1188), float64], Tensor[(1, 882), float64], Tensor[(13, 22), float64]) {
    %237 = cast(%var_12553, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
    %238 = shape_of(%var_12552, dtype="int32") /* ty=Tensor[(3), int32] */;
    %239 = cast(%var_12552, dtype="bool") /* ty=Tensor[(12, 15, 2), bool] */;
    %240 = dyn.reshape(%237, %238, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %241 = cast(meta[relay.Constant][16] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %242 = cast(meta[relay.Constant][17] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
    %243 = cast(%var_12565, dtype="float32") /* ty=Tensor[(540), float32] */;
    %244 = cast(meta[relay.Constant][16] /* ty=Tensor[(112), float64] */, dtype="float64") /* ty=Tensor[(112), float64] */;
    %245 = cast(meta[relay.Constant][18] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %246 = cast(meta[relay.Constant][19] /* ty=Tensor[(1, 882), float64] */, dtype="float64") /* ty=Tensor[(1, 882), float64] */;
    %247 = reshape(%241, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
    %248 = reshape(%242, newshape=[78]) /* ty=Tensor[(78), float32] */;
    %249 = reshape(%243, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %250 = reshape(%244, newshape=[14, 4, 2]) /* ty=Tensor[(14, 4, 2), float64] */;
    %251 = reshape(%245, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %252 = reshape(%246, newshape=[882]) /* ty=Tensor[(882), float64] */;
    %253 = @func_11015(%247, %248, %249, %250, %251, %252) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(11, 2, 13), float32], Tensor[(540), float32], Tensor[(13, 22), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(14, 4, 2), bool], Tensor[(11, 12, 9), bool], Tensor[(1188), float64], Tensor[(7, 14, 9), float32], Tensor[(882), float64]) */;
    %254 = %253.7;
    %255 = cast(%var_12580, dtype="uint64") /* ty=Tensor[(13, 22), uint64] */;
    %256 = shape_of(%254, dtype="int32") /* ty=Tensor[(2), int32] */;
    %257 = cast(%254, dtype="uint64") /* ty=Tensor[(13, 22), uint64] */;
    %258 = dyn.reshape(%255, %256, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %259 = add(%257, %258) /* ty=Tensor[(13, 22), uint64] */;
    %260 = cast(%259, dtype="float64") /* ty=Tensor[(13, 22), float64] */;
    %261 = less_equal(%239, %240) /* ty=Tensor[(12, 15, 2), bool] */;
    %262 = erf(%260) /* ty=Tensor[(13, 22), float64] */;
    (%261, meta[relay.Constant][16] /* ty=Tensor[(112), float64] */, meta[relay.Constant][17] /* ty=Tensor[(78), float32] */, %var_12565, meta[relay.Constant][18] /* ty=Tensor[(1188), float64] */, meta[relay.Constant][19] /* ty=Tensor[(1, 882), float64] */, %262)
  };
  %263(%var_12597, %var_12598, %var_12599, %var_12600) /* ty=(Tensor[(12, 15, 2), bool], Tensor[(112), float64], Tensor[(78), float32], Tensor[(540), float32], Tensor[(1188), float64], Tensor[(1, 882), float64], Tensor[(13, 22), float64]) */
}

def @func_11450() -> (Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) {
  %276 = fn () -> (Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) {
    %264 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 7, 1), float32] */;
    %265 = acos(%264) /* ty=Tensor[(4, 7, 1), float32] */;
    %266 = cast(%265, dtype="uint32") /* ty=Tensor[(4, 7, 1), uint32] */;
    %267 = shape_of(meta[relay.Constant][20] /* ty=Tensor[(4, 7, 1), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %268 = cast(meta[relay.Constant][20] /* ty=Tensor[(4, 7, 1), float32] */, dtype="uint32") /* ty=Tensor[(4, 7, 1), uint32] */;
    %269 = dyn.reshape(%266, %267, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %270 = cast(meta[relay.Constant][21] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %271 = cast(meta[relay.Constant][21] /* ty=Tensor[(528), float64] */, dtype="float64") /* ty=Tensor[(528), float64] */;
    %272 = reshape(%270, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float64] */;
    %273 = reshape(%271, newshape=[3, 11, 16]) /* ty=Tensor[(3, 11, 16), float64] */;
    %274 = right_shift(%268, %269) /* ty=Tensor[(4, 7, ?), uint32] */;
    %275 = @func_4876(%272, %273) /* ty=Tensor[(3, 11, 16), float64] */;
    (%274, %275, meta[relay.Constant][21] /* ty=Tensor[(528), float64] */)
  };
  %276() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */
}

def @func_12278() -> (Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) {
  %277 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %278 = cast(meta[relay.Constant][22] /* ty=Tensor[(40), float32] */, dtype="float32") /* ty=Tensor[(40), float32] */;
  %279 = reshape(%278, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
  %280 = @func_11671(%279) /* ty=(Tensor[(4, 5, 2), float32],) */;
  %281 = %277.1;
  %282 = %280.0;
  (%281, %282, meta[relay.Constant][22] /* ty=Tensor[(40), float32] */)
}

def @func_12875() -> (Tensor[(4, 6, 7), float32],) {
  %285 = fn () -> (Tensor[(4, 6, 7), float32],) {
    %283 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
    %284 = %283.1;
    (%284,)
  };
  %285() /* ty=(Tensor[(4, 6, 7), float32],) */
}

def @func_13310() -> (Tensor[(168), float32],) {
  @func_13308() /* ty=(Tensor[(168), float32],) */
}

def @func_16454(%var_16453: Tensor[(1188), float64]) -> (Tensor[(5, 13, 12), bool], int16, int16, Tensor[(1188), float64]) {
  %293 = fn (%var_16442: Tensor[(1188), float64]) -> (Tensor[(5, 13, 12), bool], int16, int16, Tensor[(1188), float64]) {
    %286 = cast(meta[relay.Constant][23] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %287 = cast(%var_16442, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %288 = reshape(%286, newshape=[]) /* ty=int16 */;
    %289 = reshape(%287, newshape=[18, 66]) /* ty=Tensor[(18, 66), float64] */;
    %290 = @func_14512(%288, %289) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(4, 7, 9), float32], Tensor[(32), bool], Tensor[(252), float32], Tensor[(11, 12, 9), bool], Tensor[(18, 66), float64]) */;
    %291 = @func_15197() /* ty=Tensor[(5, 13, 12), bool] */;
    %292 = %290.3;
    (%291, %292, meta[relay.Constant][23] /* ty=int16 */, %var_16442)
  };
  %293(%var_16453) /* ty=(Tensor[(5, 13, 12), bool], int16, int16, Tensor[(1188), float64]) */
}

def @func_12697() -> (Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) {
  %307 = fn () -> (Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) {
    %294 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
    %295 = cast(meta[relay.Constant][25] /* ty=Tensor[(572, 1), uint16] */, dtype="uint16") /* ty=Tensor[(572, 1), uint16] */;
    %296 = cast(meta[relay.Constant][25] /* ty=Tensor[(572, 1), uint16] */, dtype="uint16") /* ty=Tensor[(572, 1), uint16] */;
    %297 = cast(meta[relay.Constant][24] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %298 = reshape(%295, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
    %299 = reshape(%296, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
    %300 = reshape(%297, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %301 = @func_3927(%298, %299, %300) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
    %302 = %301.1;
    %303 = cast(meta[relay.Constant][25] /* ty=Tensor[(572, 1), uint16] */, dtype="bool") /* ty=Tensor[(572, 1), bool] */;
    %304 = cast(%302, dtype="bool") /* ty=Tensor[(1680), bool] */;
    %305 = %294.1;
    %306 = less(%303, %304) /* ty=Tensor[(572, 1680), bool] */;
    (%305, meta[relay.Constant][24] /* ty=Tensor[(1800), float64] */, %306)
  };
  %307() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) */
}

def @func_16774() -> Tensor[(9, 140), float32] {
  @func_16772() /* ty=Tensor[(9, 140), float32] */
}

def @func_11477(%var_11475: Tensor[(5, 13, 12), bool], %var_11476: Tensor[(5, 13, 12), bool]) -> (Tensor[(5, 13, 12), bool],) {
  %313 = fn (%var_11458: Tensor[(5, 13, 12), bool], %var_11459: Tensor[(5, 13, 12), bool]) -> (Tensor[(5, 13, 12), bool],) {
    %308 = cast(%var_11459, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
    %309 = shape_of(%var_11458, dtype="int32") /* ty=Tensor[(3), int32] */;
    %310 = cast(%var_11458, dtype="bool") /* ty=Tensor[(5, 13, 12), bool] */;
    %311 = dyn.reshape(%308, %309, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %312 = logical_and(%310, %311) /* ty=Tensor[(5, 13, 12), bool] */;
    (%312,)
  };
  %313(%var_11475, %var_11476) /* ty=(Tensor[(5, 13, 12), bool],) */
}

def @func_11812() -> (Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) {
  %327 = fn () -> (Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) {
    %314 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
    %315 = cast(meta[relay.Constant][26] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %316 = reshape(%315, newshape=[12, 2, 6]) /* ty=Tensor[(12, 2, 6), float32] */;
    %317 = cast(meta[relay.Constant][27] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %318 = cast(meta[relay.Constant][27] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %319 = cast(meta[relay.Constant][28] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %320 = reshape(%317, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
    %321 = reshape(%318, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
    %322 = reshape(%319, newshape=[24, 16]) /* ty=Tensor[(24, 16), float64] */;
    %323 = @func_9662(%320, %321, %322) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) */;
    %324 = %314.1;
    %325 = @func_7386(%316) /* ty=Tensor[(12, 2, 6), float32] */;
    %326 = %323.2;
    (%324, %325, meta[relay.Constant][26] /* ty=Tensor[(144), float32] */, %326, meta[relay.Constant][27] /* ty=Tensor[(168), float32] */, meta[relay.Constant][28] /* ty=Tensor[(384), float64] */)
  };
  %327() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */
}

def @func_17553() -> Tensor[(168), float32] {
  @func_17551() /* ty=Tensor[(168), float32] */
}

def @func_11674(%var_11672: Tensor[(4, 5, 2), float32]) -> (Tensor[(4, 5, 2), float32],) {
  @func_11671(%var_11672) /* ty=(Tensor[(4, 5, 2), float32],) */
}

def @func_11767() -> (Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) {
  %338 = fn () -> (Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) {
    %328 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
    %329 = cast(meta[relay.Constant][29] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %330 = cast(meta[relay.Constant][29] /* ty=Tensor[(168), float32] */, dtype="float32") /* ty=Tensor[(168), float32] */;
    %331 = cast(meta[relay.Constant][30] /* ty=Tensor[(384), float64] */, dtype="float64") /* ty=Tensor[(384), float64] */;
    %332 = reshape(%329, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
    %333 = reshape(%330, newshape=[4, 6, 7]) /* ty=Tensor[(4, 6, 7), float32] */;
    %334 = reshape(%331, newshape=[24, 16]) /* ty=Tensor[(24, 16), float64] */;
    %335 = @func_9662(%332, %333, %334) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) */;
    %336 = %328.2;
    %337 = %335.0;
    (%336, %337, meta[relay.Constant][29] /* ty=Tensor[(168), float32] */, meta[relay.Constant][30] /* ty=Tensor[(384), float64] */)
  };
  %338() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */
}

def @func_14249() -> Tensor[(144), float32] {
  %340 = fn () -> Tensor[(144), float32] {
    %339 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
    %339.0
  };
  %340() /* ty=Tensor[(144), float32] */
}

def @func_4448(%var_4315: Tensor[(11, 7, 8), float32], %var_4354: Tensor[(1, 1188), float64], %var_4396: Tensor[(1680), float32], %var_4423: Tensor[(11, 7, 8), float32], %var_4442: float32) -> (Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) {
  %341 = cast(%var_4315, dtype="float32") /* ty=Tensor[(11, 7, 8), float32] */;
  %342 = acos(%341) /* ty=Tensor[(11, 7, 8), float32] */;
  %343 = cast(%var_4315, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  %344 = shape_of(%342, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%342, dtype="bool") /* ty=Tensor[(11, 7, 8), bool] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %347 = greater(%345, %346) /* ty=Tensor[(11, 7, 8), bool] */;
  %348 = cast(%347, dtype="float32") /* ty=Tensor[(11, 7, 8), float32] */;
  %349 = cast(meta[relay.Constant][31] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %350 = reshape(%349, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %351 = @func_1313(%350) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %352 = cast(%var_4354, dtype="float64") /* ty=Tensor[(1, 1188), float64] */;
  %353 = cast(%var_4354, dtype="float64") /* ty=Tensor[(1, 1188), float64] */;
  %354 = reshape(%352, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %355 = reshape(%353, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %356 = @func_2003(%354, %355) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %357 = cast(meta[relay.Constant][32] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %358 = %356.4;
  %359 = cast(%358, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
  %360 = reshape(%357, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %361 = reshape(%359, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %362 = @func_1006(%360, %361) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %363 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %364 = reshape(%363, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float32] */;
  %365 = cast(meta[relay.Constant][33] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %366 = reshape(%365, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %367 = @func_258(%366) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %368 = cast(meta[relay.Constant][33] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
  %369 = reshape(%368, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
  %370 = @func_258(%369) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
  %371 = cast(%var_4396, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %372 = reshape(%371, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float32] */;
  %373 = cast(%342, dtype="float32") /* ty=Tensor[(11, 7, 8), float32] */;
  %374 = asinh(%373) /* ty=Tensor[(11, 7, 8), float32] */;
  %375 = cast(%var_4423, dtype="float64") /* ty=Tensor[(11, 7, 8), float64] */;
  %376 = shape_of(%374, dtype="int32") /* ty=Tensor[(3), int32] */;
  %377 = cast(%374, dtype="float64") /* ty=Tensor[(11, 7, 8), float64] */;
  %378 = dyn.reshape(%375, %376, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %379 = cast(meta[relay.Constant][31] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %380 = reshape(%379, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %381 = @func_1313(%380) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %382 = cast(%var_4442, dtype="float32") /* ty=float32 */;
  %383 = reshape(%382, newshape=[]) /* ty=float32 */;
  %384 = @func_3728(%383) /* ty=(Tensor[(3, 2, 12), float32],) */;
  %385 = atan(%348) /* ty=Tensor[(11, 7, 8), float32] */;
  %386 = %351.3;
  %387 = %362.1;
  %388 = @func_3394(%364) /* ty=Tensor[(7, 15, 16), float32] */;
  %389 = %367.2;
  %390 = %370.3;
  %391 = @func_3394(%372) /* ty=Tensor[(7, 15, 16), float32] */;
  %392 = mod(%377, %378) /* ty=Tensor[(11, 7, 8), float64] */;
  %393 = %381.0;
  %394 = %384.0;
  (%385, %386, meta[relay.Constant][31] /* ty=Tensor[(1800), float64] */, %358, %var_4354, %387, meta[relay.Constant][32] /* ty=Tensor[(528), float32] */, %388, %var_4396, %389, meta[relay.Constant][33] /* ty=Tensor[(144), float32] */, %390, %391, %392, %393, %394, %var_4442)
}

def @func_7980(%var_7966: int16, %var_7967: Tensor[(16, 16, 16), int16]) -> (Tensor[(16, 16, 16), float32],) {
  %395 = cast(%var_7966, dtype="int16") /* ty=int16 */;
  %396 = cast(%var_7967, dtype="int16") /* ty=Tensor[(16, 16, 16), int16] */;
  %397 = bitwise_and(%395, %396) /* ty=Tensor[(16, 16, 16), int16] */;
  %398 = cast(%397, dtype="float32") /* ty=Tensor[(16, 16, 16), float32] */;
  %399 = cosh(%398) /* ty=Tensor[(16, 16, 16), float32] */;
  (%399,)
}

def @func_8584(%var_8581: Tensor[(10, 9, 1), bool], %var_8582: Tensor[(10, 9, 1), bool], %var_8583: Tensor[(3, 600), float64]) -> (Tensor[(10, 9, ?), bool], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(3, 600), float64]) {
  %425 = fn (%var_8528: Tensor[(10, 9, 1), bool], %var_8529: Tensor[(10, 9, 1), bool], %var_8551: Tensor[(3, 600), float64]) -> (Tensor[(10, 9, ?), bool], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(3, 600), float64]) {
    %400 = cast(%var_8529, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
    %401 = shape_of(%var_8528, dtype="int32") /* ty=Tensor[(3), int32] */;
    %402 = cast(%var_8528, dtype="bool") /* ty=Tensor[(10, 9, 1), bool] */;
    %403 = dyn.reshape(%400, %401, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %404 = cast(meta[relay.Constant][34] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
    %405 = cast(meta[relay.Constant][34] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
    %406 = cast(%var_8551, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
    %407 = reshape(%404, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
    %408 = reshape(%405, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
    %409 = reshape(%406, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %410 = @func_3927(%407, %408, %409) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
    %411 = cast(%var_8551, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
    %412 = log10(%411) /* ty=Tensor[(3, 600), float64] */;
    %413 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 600), float64] */, dtype="uint32") /* ty=Tensor[(3, 600), uint32] */;
    %414 = shape_of(%var_8551, dtype="int32") /* ty=Tensor[(2), int32] */;
    %415 = cast(%var_8551, dtype="uint32") /* ty=Tensor[(3, 600), uint32] */;
    %416 = dyn.reshape(%413, %414, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %417 = logical_xor(%415, %416) /* ty=Tensor[(3, 600), uint32] */;
    %418 = cast(%417, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
    %419 = shape_of(%412, dtype="int32") /* ty=Tensor[(2), int32] */;
    %420 = cast(%412, dtype="float64") /* ty=Tensor[(3, 600), float64] */;
    %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %422 = logical_and(%402, %403) /* ty=Tensor[(10, 9, ?), bool] */;
    %423 = %410.6;
    %424 = mod(%420, %421) /* ty=Tensor[(3, 600), float64] */;
    (%422, %423, meta[relay.Constant][34] /* ty=Tensor[(572), uint16] */, %424)
  };
  %425(%var_8581, %var_8582, %var_8583) /* ty=(Tensor[(10, 9, ?), bool], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(3, 600), float64]) */
}

def @func_16219(%var_16218: Tensor[(5, 13, 12), bool]) -> (Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), bool]) {
  %434 = fn (%var_16200: Tensor[(5, 13, 12), bool]) -> (Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), bool]) {
    %426 = @func_15197() /* ty=Tensor[(5, 13, 12), bool] */;
    %427 = cast(%var_16200, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
    %428 = shape_of(%426, dtype="int32") /* ty=Tensor[(3), int32] */;
    %429 = cast(%426, dtype="float32") /* ty=Tensor[(5, 13, 12), float32] */;
    %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %431 = @func_15892() /* ty=(Tensor[(5, 13, 12), bool],) */;
    %432 = divide(%429, %430) /* ty=Tensor[(5, 13, 12), float32] */;
    %433 = %431.0;
    (%432, %433)
  };
  %434(%var_16218) /* ty=(Tensor[(5, 13, 12), float32], Tensor[(5, 13, 12), bool]) */
}

def @func_3731(%var_3729: float32) -> (Tensor[(3, 2, 12), float32],) {
  @func_3728(%var_3729) /* ty=(Tensor[(3, 2, 12), float32],) */
}

def @func_16738() -> (Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) {
  @func_16736() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) */
}

def @func_14269(%var_14268: Tensor[(540), float32]) -> (Tensor[(144), float32], Tensor[(1188), float64], Tensor[(360), uint16], Tensor[(540), float32], Tensor[(286), float32]) {
  %447 = fn (%var_14264: Tensor[(540), float32]) -> (Tensor[(144), float32], Tensor[(1188), float64], Tensor[(360), uint16], Tensor[(540), float32], Tensor[(286), float32]) {
    %435 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
    %436 = cast(meta[relay.Constant][36] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
    %437 = cast(meta[relay.Constant][36] /* ty=Tensor[(360), uint16] */, dtype="uint16") /* ty=Tensor[(360), uint16] */;
    %438 = cast(%var_14264, dtype="float32") /* ty=Tensor[(540), float32] */;
    %439 = cast(meta[relay.Constant][37] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
    %440 = reshape(%436, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), uint16] */;
    %441 = reshape(%437, newshape=[12, 15, 2]) /* ty=Tensor[(12, 15, 2), uint16] */;
    %442 = reshape(%438, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %443 = reshape(%439, newshape=[13, 22]) /* ty=Tensor[(13, 22), float32] */;
    %444 = @func_12596(%440, %441, %442, %443) /* ty=(Tensor[(12, 15, 2), bool], Tensor[(112), float64], Tensor[(78), float32], Tensor[(540), float32], Tensor[(1188), float64], Tensor[(1, 882), float64], Tensor[(13, 22), float64]) */;
    %445 = %435.0;
    %446 = %444.4;
    (%445, %446, meta[relay.Constant][36] /* ty=Tensor[(360), uint16] */, %var_14264, meta[relay.Constant][37] /* ty=Tensor[(286), float32] */)
  };
  %447(%var_14268) /* ty=(Tensor[(144), float32], Tensor[(1188), float64], Tensor[(360), uint16], Tensor[(540), float32], Tensor[(286), float32]) */
}

def @func_15893() -> (Tensor[(5, 13, 12), bool],) {
  %449 = fn () -> (Tensor[(5, 13, 12), bool],) {
    %448 = @func_15197() /* ty=Tensor[(5, 13, 12), bool] */;
    (%448,)
  };
  %449() /* ty=(Tensor[(5, 13, 12), bool],) */
}

def @func_13198() -> (Tensor[(3, 11, 16), float64],) {
  @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_14363() -> (Tensor[(3, 11, 16), float64],) {
  %452 = fn () -> (Tensor[(3, 11, 16), float64],) {
    %450 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
    %451 = %450.0;
    (%451,)
  };
  %452() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_17345() -> Tensor[(168), float32] {
  %454 = fn () -> Tensor[(168), float32] {
    %453 = @func_11903() /* ty=(Tensor[(168), float32],) */;
    %453.0
  };
  %454() /* ty=Tensor[(168), float32] */
}

def @func_16550(%var_16547: Tensor[(20, 2), float32], %var_16548: Tensor[(2, 720), float32], %var_16549: Tensor[(252), float32]) -> (Tensor[(168), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(4, 5, 2), float32], Tensor[(20, 2), float32], Tensor[(10, 9, 16), float32], Tensor[(2, 720), float32], Tensor[(364), uint32], Tensor[(13, 2, 3), float32], Tensor[(252), float32], Tensor[(168), float32], Tensor[(3, 11, 16), float64]) {
  %482 = fn (%var_16517: Tensor[(20, 2), float32], %var_16520: Tensor[(2, 720), float32], %var_16532: Tensor[(252), float32]) -> (Tensor[(168), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(4, 5, 2), float32], Tensor[(20, 2), float32], Tensor[(10, 9, 16), float32], Tensor[(2, 720), float32], Tensor[(364), uint32], Tensor[(13, 2, 3), float32], Tensor[(252), float32], Tensor[(168), float32], Tensor[(3, 11, 16), float64]) {
    %455 = @func_15949() /* ty=(Tensor[(168), float32], Tensor[(144), float32], Tensor[(168), float32]) */;
    %456 = cast(meta[relay.Constant][38] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
    %457 = reshape(%456, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
    %458 = @func_13896(%457) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) */;
    %459 = cast(%var_16517, dtype="float32") /* ty=Tensor[(20, 2), float32] */;
    %460 = reshape(%459, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
    %461 = @func_11671(%460) /* ty=(Tensor[(4, 5, 2), float32],) */;
    %462 = cast(%var_16520, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
    %463 = cast(%var_16520, dtype="float32") /* ty=Tensor[(2, 720), float32] */;
    %464 = cast(meta[relay.Constant][39] /* ty=Tensor[(364), uint32] */, dtype="uint32") /* ty=Tensor[(364), uint32] */;
    %465 = reshape(%462, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), float32] */;
    %466 = reshape(%463, newshape=[10, 9, 16]) /* ty=Tensor[(10, 9, 16), float32] */;
    %467 = reshape(%464, newshape=[364]) /* ty=Tensor[(364), uint32] */;
    %468 = @func_14021(%465, %466, %467) /* ty=(Tensor[(10, 9, 16), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */;
    %469 = cast(%var_16532, dtype="float32") /* ty=Tensor[(252), float32] */;
    %470 = cast(%var_16532, dtype="float32") /* ty=Tensor[(252), float32] */;
    %471 = reshape(%469, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
    %472 = reshape(%470, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
    %473 = @func_4214(%471, %472) /* ty=(Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) */;
    %474 = @func_13308() /* ty=(Tensor[(168), float32],) */;
    %475 = %455.0;
    %476 = %458.1;
    %477 = %461.0;
    %478 = %468.0;
    %479 = %473.1;
    %480 = %474.0;
    %481 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
    (%475, %476, meta[relay.Constant][38] /* ty=Tensor[(1274), float32] */, %477, %var_16517, %478, %var_16520, meta[relay.Constant][39] /* ty=Tensor[(364), uint32] */, %479, %var_16532, %480, %481)
  };
  %482(%var_16547, %var_16548, %var_16549) /* ty=(Tensor[(168), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(4, 5, 2), float32], Tensor[(20, 2), float32], Tensor[(10, 9, 16), float32], Tensor[(2, 720), float32], Tensor[(364), uint32], Tensor[(13, 2, 3), float32], Tensor[(252), float32], Tensor[(168), float32], Tensor[(3, 11, 16), float64]) */
}

def @func_4218(%var_4216: Tensor[(4, 7, 9), float32], %var_4217: Tensor[(4, 7, 9), float32]) -> (Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) {
  @func_4214(%var_4216, %var_4217) /* ty=(Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) */
}

def @func_17015() -> (Tensor[(144), float32], Tensor[(12, 16, 2), float64], Tensor[(540, 1), float32], Tensor[(286), float32]) {
  %490 = fn () -> (Tensor[(144), float32], Tensor[(12, 16, 2), float64], Tensor[(540, 1), float32], Tensor[(286), float32]) {
    %483 = cast(meta[relay.Constant][40] /* ty=Tensor[(540, 1), float32] */, dtype="float32") /* ty=Tensor[(540, 1), float32] */;
    %484 = cast(meta[relay.Constant][41] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
    %485 = reshape(%483, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
    %486 = reshape(%484, newshape=[286]) /* ty=Tensor[(286), float32] */;
    %487 = @func_9623(%485, %486) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
    %488 = @func_14248() /* ty=Tensor[(144), float32] */;
    %489 = %487.3;
    (%488, %489, meta[relay.Constant][40] /* ty=Tensor[(540, 1), float32] */, meta[relay.Constant][41] /* ty=Tensor[(286), float32] */)
  };
  %490() /* ty=(Tensor[(144), float32], Tensor[(12, 16, 2), float64], Tensor[(540, 1), float32], Tensor[(286), float32]) */
}

def @func_18654(%var_18652: Tensor[(12, 4, 1), int32]) -> (Tensor[(12, 4, 13), int32], Tensor[(168), float32], Tensor[(3, 11, 16), float64], Tensor[(168), float32]) {
  @func_18651(%var_18652) /* ty=(Tensor[(12, 4, 13), int32], Tensor[(168), float32], Tensor[(3, 11, 16), float64], Tensor[(168), float32]) */
}

def @func_15638() -> Tensor[(40), float32] {
  %492 = fn () -> Tensor[(40), float32] {
    %491 = @func_12278() /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
    %491.2
  };
  %492() /* ty=Tensor[(40), float32] */
}

def @func_1010(%var_1008: Tensor[(11, 4, 12), float32], %var_1009: Tensor[(78), float32]) -> (Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) {
  @func_1006(%var_1008, %var_1009) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */
}

def @func_6088(%var_6086: Tensor[(8, 4, 1), bool], %var_6087: Tensor[(252, 1), float32]) -> (Tensor[(8, 4, 10), bool], Tensor[(4, 7, 9), float32], Tensor[(252, 1), float32]) {
  @func_6084(%var_6086, %var_6087) /* ty=(Tensor[(8, 4, 10), bool], Tensor[(4, 7, 9), float32], Tensor[(252, 1), float32]) */
}

def @func_9245(%var_9244: Tensor[(12, 16, 2), float64]) -> (Tensor[(12, 16, 2), float64],) {
  %495 = fn (%var_9240: Tensor[(12, 16, 2), float64]) -> (Tensor[(12, 16, 2), float64],) {
    %493 = cast(%var_9240, dtype="float64") /* ty=Tensor[(12, 16, 2), float64] */;
    %494 = cos(%493) /* ty=Tensor[(12, 16, 2), float64] */;
    (%494,)
  };
  %495(%var_9244) /* ty=(Tensor[(12, 16, 2), float64],) */
}

def @func_13821() -> Tensor[(3, 11, 16), float64] {
  %496 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %496.0
}

def @func_15838() -> (Tensor[(3, 11, 16), float64], Tensor[(18), uint16], Tensor[(286), float32], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(3, 8, 6), int32], Tensor[(144), int32], Tensor[(528), float64]) {
  %514 = fn () -> (Tensor[(3, 11, 16), float64], Tensor[(18), uint16], Tensor[(286), float32], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(3, 8, 6), int32], Tensor[(144), int32], Tensor[(528), float64]) {
    %497 = cast(meta[relay.Constant][42] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
    %498 = cast(meta[relay.Constant][43] /* ty=Tensor[(18), uint16] */, dtype="uint16") /* ty=Tensor[(18), uint16] */;
    %499 = cast(meta[relay.Constant][44] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %500 = reshape(%497, newshape=[1, 286]) /* ty=Tensor[(1, 286), float32] */;
    %501 = reshape(%498, newshape=[18]) /* ty=Tensor[(18), uint16] */;
    %502 = reshape(%499, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
    %503 = @func_15521(%500, %501, %502) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(540), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(54, 22), float64], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(1800), float64]) */;
    %504 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
    %505 = cast(meta[relay.Constant][45] /* ty=Tensor[(144), int32] */, dtype="int32") /* ty=Tensor[(144), int32] */;
    %506 = reshape(%504, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
    %507 = reshape(%505, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
    %508 = @func_2264(%506, %507) /* ty=(Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) */;
    %509 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
    %510 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
    %511 = %503.5;
    %512 = %508.0;
    %513 = %509.2;
    (%510, %511, meta[relay.Constant][42] /* ty=Tensor[(286), float32] */, meta[relay.Constant][43] /* ty=Tensor[(18), uint16] */, meta[relay.Constant][44] /* ty=Tensor[(1188), float64] */, %512, meta[relay.Constant][45] /* ty=Tensor[(144), int32] */, %513)
  };
  %514() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(18), uint16], Tensor[(286), float32], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(3, 8, 6), int32], Tensor[(144), int32], Tensor[(528), float64]) */
}

def @func_14204(%var_14183: Tensor[(5, 4, 5), bool]) -> (Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) {
  %515 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %516 = cast(%var_14183, dtype="bool") /* ty=Tensor[(5, 4, 5), bool] */;
  %517 = cast(meta[relay.Constant][46] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %518 = reshape(%517, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float32] */;
  %519 = @func_5022(%518) /* ty=(Tensor[(11, 2, 13), float32],) */;
  %520 = logical_or(%515, %516) /* ty=Tensor[(5, 4, 5), bool] */;
  %521 = %519.0;
  %522 = @func_13821() /* ty=Tensor[(3, 11, 16), float64] */;
  (%520, %521, meta[relay.Constant][46] /* ty=Tensor[(286), float32] */, %522)
}

def @func_17530(%var_17528: Tensor[(91, 4), uint32], %var_17529: Tensor[(7, 182), float32]) -> (Tensor[(168), float32], Tensor[(528), float64], Tensor[(91, 4), uint32], Tensor[(7, 182), float32]) {
  @func_17526(%var_17528, %var_17529) /* ty=(Tensor[(168), float32], Tensor[(528), float64], Tensor[(91, 4), uint32], Tensor[(7, 182), float32]) */
}

def @func_17734(%var_17732: Tensor[(286), float32]) -> (Tensor[(9, 140), float32], Tensor[(192, 2), float64], Tensor[(540), float32], Tensor[(286), int8]) {
  @func_17731(%var_17732) /* ty=(Tensor[(9, 140), float32], Tensor[(192, 2), float64], Tensor[(540), float32], Tensor[(286), int8]) */
}

def @func_16056(%var_16055: Tensor[(9, 4, 16), uint64]) -> Tensor[(9, 4, 16), uint64] {
  %525 = fn (%var_16046: Tensor[(9, 4, 16), uint64]) -> Tensor[(9, 4, 16), uint64] {
    %523 = cast(meta[relay.Constant][47] /* ty=Tensor[(9, 4, 1), uint64] */, dtype="uint64") /* ty=Tensor[(9, 4, 1), uint64] */;
    %524 = cast(%var_16046, dtype="uint64") /* ty=Tensor[(9, 4, 16), uint64] */;
    left_shift(%523, %524) /* ty=Tensor[(9, 4, 16), uint64] */
  };
  %525(%var_16055) /* ty=Tensor[(9, 4, 16), uint64] */
}

def @func_18114(%var_18112: Tensor[(7, 182), float32], %var_18113: Tensor[(7, 182), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(9, 140), float64], Tensor[(1260), float32], Tensor[(14, 13, 7), float64], Tensor[(7, 182), bool]) {
  %543 = fn (%var_18085: Tensor[(7, 182), float32], %var_18106: Tensor[(7, 182), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(9, 140), float64], Tensor[(1260), float32], Tensor[(14, 13, 7), float64], Tensor[(7, 182), bool]) {
    %526 = @func_15391() /* ty=(Tensor[(3, 11, 16), float64],) */;
    %527 = @func_12126() /* ty=(Tensor[(3, 11, 16), float64],) */;
    %528 = cast(meta[relay.Constant][48] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
    %529 = reshape(%528, newshape=[9, 140]) /* ty=Tensor[(9, 140), float32] */;
    %530 = @func_16032(%529) /* ty=(Tensor[(168), float32], Tensor[(9, 140), float64]) */;
    %531 = cast(%var_18085, dtype="float32") /* ty=Tensor[(7, 182), float32] */;
    %532 = reshape(%531, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
    %533 = @func_13896(%532) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) */;
    %534 = cast(%var_18106, dtype="bool") /* ty=Tensor[(7, 182), bool] */;
    %535 = shape_of(%var_18085, dtype="int32") /* ty=Tensor[(2), int32] */;
    %536 = cast(%var_18085, dtype="bool") /* ty=Tensor[(7, 182), bool] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %538 = %526.0;
    %539 = %527.0;
    %540 = %530.1;
    %541 = %533.1;
    %542 = logical_and(%536, %537) /* ty=Tensor[(7, 182), bool] */;
    (%538, %539, %540, meta[relay.Constant][48] /* ty=Tensor[(1260), float32] */, %541, %542)
  };
  %543(%var_18112, %var_18113) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(9, 140), float64], Tensor[(1260), float32], Tensor[(14, 13, 7), float64], Tensor[(7, 182), bool]) */
}

def @func_18391(%var_18385: Tensor[(2, 20), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) {
  %544 = @func_18335() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %545 = cast(%var_18385, dtype="float32") /* ty=Tensor[(2, 20), float32] */;
  %546 = reshape(%545, newshape=[40]) /* ty=Tensor[(40), float32] */;
  %547 = @func_12786(%546) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
  %548 = %544.0;
  %549 = %547.2;
  (%548, %549, %var_18385)
}

def @func_18611(%var_18596: Tensor[(54, 10), float32]) -> (Tensor[(168), float32], Tensor[(168), float32], Tensor[(4, 6, 7), float32], Tensor[(54, 10), float32], Tensor[(286), float32], Tensor[(5, 13, 12), bool]) {
  %550 = @func_13461() /* ty=(Tensor[(168), float32],) */;
  %551 = cast(%var_18596, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %552 = cast(meta[relay.Constant][49] /* ty=Tensor[(286), float32] */, dtype="float32") /* ty=Tensor[(286), float32] */;
  %553 = reshape(%551, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %554 = reshape(%552, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %555 = @func_15020(%553, %554) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) */;
  %556 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %557 = @func_16755() /* ty=Tensor[(168), float32] */;
  %558 = %550.0;
  %559 = %555.0;
  %560 = %556.0;
  (%557, %558, %559, %var_18596, meta[relay.Constant][49] /* ty=Tensor[(286), float32] */, %560)
}

def @func_13462() -> (Tensor[(168), float32],) {
  %563 = fn () -> (Tensor[(168), float32],) {
    %561 = @func_11903() /* ty=(Tensor[(168), float32],) */;
    %562 = %561.0;
    (%562,)
  };
  %563() /* ty=(Tensor[(168), float32],) */
}

def @func_11023(%var_11017: Tensor[(14, 4, 2), float64], %var_11018: Tensor[(78), float32], %var_11019: Tensor[(540), float32], %var_11020: Tensor[(14, 4, 2), float64], %var_11021: Tensor[(1188), float64], %var_11022: Tensor[(882), float64]) -> (Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(11, 2, 13), float32], Tensor[(540), float32], Tensor[(13, 22), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(14, 4, 2), bool], Tensor[(11, 12, 9), bool], Tensor[(1188), float64], Tensor[(7, 14, 9), float32], Tensor[(882), float64]) {
  @func_11015(%var_11017, %var_11018, %var_11019, %var_11020, %var_11021, %var_11022) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(11, 2, 13), float32], Tensor[(540), float32], Tensor[(13, 22), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(14, 4, 2), bool], Tensor[(11, 12, 9), bool], Tensor[(1188), float64], Tensor[(7, 14, 9), float32], Tensor[(882), float64]) */
}

def @func_15292(%var_15215: Tensor[(100), bool], %var_15225: Tensor[(540), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(11, 2, 13), float32], Tensor[(100), bool], Tensor[(1188), float64], Tensor[(540), float32], Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(1800), float64], Tensor[(4, 6, 7), float32], Tensor[(192, 2), float64]) {
  %564 = cast(%var_15215, dtype="bool") /* ty=Tensor[(100), bool] */;
  %565 = reshape(%564, newshape=[5, 4, 5]) /* ty=Tensor[(5, 4, 5), bool] */;
  %566 = @func_14204(%565) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) */;
  %567 = cast(%var_15225, dtype="float32") /* ty=Tensor[(540), float32] */;
  %568 = reshape(%567, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %569 = @func_14267(%568) /* ty=(Tensor[(144), float32], Tensor[(1188), float64], Tensor[(360), uint16], Tensor[(540), float32], Tensor[(286), float32]) */;
  %570 = @func_14362() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %571 = cast(meta[relay.Constant][50] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %572 = cast(meta[relay.Constant][50] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
  %573 = cast(meta[relay.Constant][51] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %574 = reshape(%571, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %575 = reshape(%572, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
  %576 = reshape(%573, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
  %577 = @func_3927(%574, %575, %576) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
  %578 = @func_12874() /* ty=(Tensor[(4, 6, 7), float32],) */;
  %579 = cast(%var_15225, dtype="float32") /* ty=Tensor[(540), float32] */;
  %580 = %566.1;
  %581 = cast(%580, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
  %582 = reshape(%579, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %583 = reshape(%581, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %584 = @func_9623(%582, %583) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %585 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  %586 = %569.1;
  %587 = %570.0;
  %588 = %577.6;
  %589 = %578.0;
  %590 = %584.4;
  (%585, %580, %var_15215, %586, %var_15225, %587, %588, meta[relay.Constant][50] /* ty=Tensor[(572), uint16] */, meta[relay.Constant][51] /* ty=Tensor[(1800), float64] */, %589, %590)
}

def @func_15391() -> (Tensor[(3, 11, 16), float64],) {
  %591 = @func_12696() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) */;
  %592 = %591.0;
  (%592,)
}

def @func_14207(%var_14205: Tensor[(5, 4, 5), bool]) -> (Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) {
  @func_14204(%var_14205) /* ty=(Tensor[(5, 4, 5), bool], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(3, 11, 16), float64]) */
}

def @func_14753(%var_14751: float64, %var_14752: Tensor[(528), float32]) -> (Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(1, 78), float32], Tensor[(?, 9, 3), float64]) {
  @func_14749(%var_14751, %var_14752) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(1, 78), float32], Tensor[(?, 9, 3), float64]) */
}

def @func_11997() -> (Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) {
  %593 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
  %594 = cast(meta[relay.Constant][52] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %595 = cast(meta[relay.Constant][52] /* ty=Tensor[(780), bool] */, dtype="bool") /* ty=Tensor[(780), bool] */;
  %596 = reshape(%594, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), bool] */;
  %597 = reshape(%595, newshape=[5, 13, 12]) /* ty=Tensor[(5, 13, 12), bool] */;
  %598 = @func_11474(%596, %597) /* ty=(Tensor[(5, 13, 12), bool],) */;
  %599 = %593.3;
  %600 = %598.0;
  (%599, %600, meta[relay.Constant][52] /* ty=Tensor[(780), bool] */)
}

def @func_11866() -> Tensor[(3, 11, 16), float64] {
  @func_11864() /* ty=Tensor[(3, 11, 16), float64] */
}

def @func_15393() -> (Tensor[(3, 11, 16), float64],) {
  @func_15391() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_16736() -> (Tensor[(3, 11, 16), float64], Tensor[(78), uint16]) {
  %601 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %602 = %601.0;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %604 = cast(meta[relay.Constant][53] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %605 = reshape(%603, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %606 = reshape(%604, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %607 = @func_1006(%605, %606) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %608 = %607.2;
  %609 = cast(meta[relay.Constant][53] /* ty=Tensor[(78), float32] */, dtype="bool") /* ty=Tensor[(78), bool] */;
  %610 = shape_of(%608, dtype="int32") /* ty=Tensor[(1), int32] */;
  %611 = cast(%608, dtype="bool") /* ty=Tensor[(78), bool] */;
  %612 = dyn.reshape(%609, %610, newshape=[]) /* ty=Tensor[(?), bool] */;
  %613 = equal(%611, %612) /* ty=Tensor[(78), bool] */;
  %614 = cast(%608, dtype="uint16") /* ty=Tensor[(78), uint16] */;
  %615 = shape_of(%613, dtype="int32") /* ty=Tensor[(1), int32] */;
  %616 = cast(%613, dtype="uint16") /* ty=Tensor[(78), uint16] */;
  %617 = dyn.reshape(%614, %615, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %618 = left_shift(%616, %617) /* ty=Tensor[(78), uint16] */;
  (%602, %618)
}

def @func_15023(%var_15021: Tensor[(540), float32], %var_15022: Tensor[(286), float32]) -> (Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) {
  %627 = fn (%var_15012: Tensor[(540), float32], %var_15013: Tensor[(286), float32]) -> (Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) {
    %619 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
    %620 = cast(%var_15012, dtype="float32") /* ty=Tensor[(540), float32] */;
    %621 = cast(%var_15013, dtype="float32") /* ty=Tensor[(286), float32] */;
    %622 = reshape(%620, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
    %623 = reshape(%621, newshape=[286]) /* ty=Tensor[(286), float32] */;
    %624 = @func_9623(%622, %623) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
    %625 = %619.1;
    %626 = %624.3;
    (%625, %626, %var_15012, %var_15013)
  };
  %627(%var_15021, %var_15022) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) */
}

def @func_14377() -> Tensor[(3, 11, 16), float64] {
  %628 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %628.0
}

def @func_15949() -> (Tensor[(168), float32], Tensor[(144), float32], Tensor[(168), float32]) {
  %629 = @func_13116() /* ty=(Tensor[(168), float32],) */;
  %630 = @func_13116() /* ty=(Tensor[(168), float32],) */;
  %631 = %629.0;
  %632 = @func_14248() /* ty=Tensor[(144), float32] */;
  %633 = %630.0;
  (%631, %632, %633)
}

def @func_16756() -> Tensor[(168), float32] {
  %635 = fn () -> Tensor[(168), float32] {
    %634 = @func_13461() /* ty=(Tensor[(168), float32],) */;
    %634.0
  };
  %635() /* ty=Tensor[(168), float32] */
}

def @func_1313(%var_1294: Tensor[(15, 15, 8), float64]) -> (Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) {
  %636 = cast(%var_1294, dtype="float64") /* ty=Tensor[(15, 15, 8), float64] */;
  %637 = cast(meta[relay.Constant][54] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %638 = cast(meta[relay.Constant][55] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %639 = reshape(%637, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %640 = reshape(%638, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %641 = @func_1006(%639, %640) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %642 = sqrt(%636) /* ty=Tensor[(15, 15, 8), float64] */;
  %643 = %641.1;
  (%642, %643, meta[relay.Constant][54] /* ty=Tensor[(528), float32] */, meta[relay.Constant][55] /* ty=Tensor[(78), float32] */)
}

def @func_4214(%var_4184: Tensor[(4, 7, 9), float32], %var_4185: Tensor[(4, 7, 9), float32]) -> (Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) {
  %644 = cast(%var_4185, dtype="float32") /* ty=Tensor[(4, 7, 9), float32] */;
  %645 = shape_of(%var_4184, dtype="int32") /* ty=Tensor[(3), int32] */;
  %646 = cast(%var_4184, dtype="float32") /* ty=Tensor[(4, 7, 9), float32] */;
  %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %648 = cast(meta[relay.Constant][56] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %649 = cast(meta[relay.Constant][57] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %650 = reshape(%648, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %651 = reshape(%649, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
  %652 = @func_1587(%650, %651) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
  %653 = floor_divide(%646, %647) /* ty=Tensor[(4, 7, 9), float32] */;
  %654 = %652.5;
  (%653, %654, meta[relay.Constant][56] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][57] /* ty=Tensor[(468), float64] */)
}

def @func_17975(%var_17974: Tensor[(9, 6, 6), float32]) -> Tensor[(9, 6, 6), float32] {
  %656 = fn (%var_17965: Tensor[(9, 6, 6), float32]) -> Tensor[(9, 6, 6), float32] {
    %655 = cast(%var_17965, dtype="float32") /* ty=Tensor[(9, 6, 6), float32] */;
    erf(%655) /* ty=Tensor[(9, 6, 6), float32] */
  };
  %656(%var_17974) /* ty=Tensor[(9, 6, 6), float32] */
}

def @func_15040(%var_15038: Tensor[(1430), int16]) -> (Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) {
  @func_15037(%var_15038) /* ty=(Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) */
}

def @func_14615(%var_14608: Tensor[(364), uint32], %var_14613: Tensor[(637, 2), float32]) -> (Tensor[(384), float64], Tensor[(3, 11, 16), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16], Tensor[(528), float64], Tensor[(364), uint32], Tensor[(637, 2), float64], Tensor[(637, 2), float32]) {
  %657 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
  %658 = @func_14362() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %659 = %658.0;
  %660 = cast(%659, dtype="float32") /* ty=Tensor[(3, 11, 16), float32] */;
  %661 = cast(meta[relay.Constant][58] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %662 = cast(meta[relay.Constant][58] /* ty=Tensor[(1430), int16] */, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %663 = reshape(%661, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %664 = reshape(%662, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %665 = @func_10917(%663, %664) /* ty=(Tensor[(10, 11, 13), int16],) */;
  %666 = cast(%var_14608, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %667 = reshape(%666, newshape=[364]) /* ty=Tensor[(364), uint32] */;
  %668 = @func_11717(%667) /* ty=(Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */;
  %669 = cast(%var_14613, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
  %670 = reshape(%669, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
  %671 = @func_13896(%670) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) */;
  %672 = %657.0;
  %673 = exp(%660) /* ty=Tensor[(3, 11, 16), float32] */;
  %674 = %665.0;
  %675 = %668.0;
  %676 = %671.2;
  (%672, %673, %674, meta[relay.Constant][58] /* ty=Tensor[(1430), int16] */, %675, %var_14608, %676, %var_14613)
}

def @func_5024(%var_5023: Tensor[(11, 2, 13), float32]) -> (Tensor[(11, 2, 13), float32],) {
  %682 = fn (%var_5017: Tensor[(11, 2, 13), float32]) -> (Tensor[(11, 2, 13), float32],) {
    %677 = cast(meta[relay.Constant][59] /* ty=Tensor[(11, 2, 13), float32] */, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
    %678 = shape_of(%var_5017, dtype="int32") /* ty=Tensor[(3), int32] */;
    %679 = cast(%var_5017, dtype="float32") /* ty=Tensor[(11, 2, 13), float32] */;
    %680 = dyn.reshape(%677, %678, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %681 = floor_divide(%679, %680) /* ty=Tensor[(11, 2, 13), float32] */;
    (%681,)
  };
  %682(%var_5023) /* ty=(Tensor[(11, 2, 13), float32],) */
}

def @func_1316(%var_1314: Tensor[(15, 15, 8), float64]) -> (Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) {
  @func_1313(%var_1314) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */
}

def @func_11905() -> (Tensor[(168), float32],) {
  @func_11903() /* ty=(Tensor[(168), float32],) */
}

def @func_7984(%var_7982: int16, %var_7983: Tensor[(16, 16, 16), int16]) -> (Tensor[(16, 16, 16), float32],) {
  @func_7980(%var_7982, %var_7983) /* ty=(Tensor[(16, 16, 16), float32],) */
}

def @func_14126(%var_14123: Tensor[(1188), float64], %var_14124: Tensor[(12, 140), float32], %var_14125: float32) -> (Tensor[(4, 6, 7), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32], Tensor[(1680), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(12, 140), float32], float32) {
  @func_14121(%var_14123, %var_14124, %var_14125) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32], Tensor[(1680), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(12, 140), float32], float32) */
}

def @func_3800(%var_3798: Tensor[(8, 1, 7), float64], %var_3799: Tensor[(26, 3), float32]) -> (Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) {
  %700 = fn (%var_3758: Tensor[(8, 1, 7), float64], %var_3781: Tensor[(26, 3), float32]) -> (Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) {
    %683 = cast(%var_3758, dtype="float64") /* ty=Tensor[(8, 1, 7), float64] */;
    %684 = sin(%683) /* ty=Tensor[(8, 1, 7), float64] */;
    %685 = cast(%684, dtype="uint16") /* ty=Tensor[(8, 1, 7), uint16] */;
    %686 = cast(meta[relay.Constant][60] /* ty=Tensor[(8, 11, 7), float64] */, dtype="uint16") /* ty=Tensor[(8, 11, 7), uint16] */;
    %687 = add(%685, %686) /* ty=Tensor[(8, 11, 7), uint16] */;
    %688 = cast(%687, dtype="float64") /* ty=Tensor[(8, 11, 7), float64] */;
    %689 = cast(meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %690 = cast(%var_3781, dtype="float32") /* ty=Tensor[(26, 3), float32] */;
    %691 = reshape(%689, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %692 = reshape(%690, newshape=[78]) /* ty=Tensor[(78), float32] */;
    %693 = @func_1006(%691, %692) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
    %694 = cast(meta[relay.Constant][62] /* ty=Tensor[(144), float32] */, dtype="float32") /* ty=Tensor[(144), float32] */;
    %695 = reshape(%694, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
    %696 = @func_258(%695) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
    %697 = tan(%688) /* ty=Tensor[(8, 11, 7), float64] */;
    %698 = %693.1;
    %699 = %696.0;
    (%697, %698, meta[relay.Constant][61] /* ty=Tensor[(528), float32] */, %var_3781, %699, meta[relay.Constant][62] /* ty=Tensor[(144), float32] */)
  };
  %700(%var_3798, %var_3799) /* ty=(Tensor[(8, 11, 7), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(26, 3), float32], Tensor[(9, 1, 16), float32], Tensor[(144), float32]) */
}

def @func_14619(%var_14617: Tensor[(364), uint32], %var_14618: Tensor[(637, 2), float32]) -> (Tensor[(384), float64], Tensor[(3, 11, 16), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16], Tensor[(528), float64], Tensor[(364), uint32], Tensor[(637, 2), float64], Tensor[(637, 2), float32]) {
  @func_14615(%var_14617, %var_14618) /* ty=(Tensor[(384), float64], Tensor[(3, 11, 16), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16], Tensor[(528), float64], Tensor[(364), uint32], Tensor[(637, 2), float64], Tensor[(637, 2), float32]) */
}

def @func_13898(%var_13897: Tensor[(637, 2), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) {
  %711 = fn (%var_13872: Tensor[(637, 2), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) {
    %701 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
    %702 = cast(%var_13872, dtype="float32") /* ty=Tensor[(637, 2), float32] */;
    %703 = reshape(%702, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float32] */;
    %704 = @func_108(%703) /* ty=(Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) */;
    %705 = %704.1;
    %706 = cast(%705, dtype="float64") /* ty=Tensor[(14, 13, 7), float64] */;
    %707 = cast(%var_13872, dtype="float64") /* ty=Tensor[(637, 2), float64] */;
    %708 = %701.0;
    %709 = atanh(%706) /* ty=Tensor[(14, 13, 7), float64] */;
    %710 = atanh(%707) /* ty=Tensor[(637, 2), float64] */;
    (%708, %709, %710)
  };
  %711(%var_13897) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(14, 13, 7), float64], Tensor[(637, 2), float64]) */
}

def @func_14379() -> Tensor[(3, 11, 16), float64] {
  @func_14377() /* ty=Tensor[(3, 11, 16), float64] */
}

def @func_11634(%var_11632: Tensor[(4, 7, 13), uint32]) -> Tensor[(4, 7, 13), bool] {
  @func_11631(%var_11632) /* ty=Tensor[(4, 7, 13), bool] */
}

def @func_17135() -> Tensor[(168), float32] {
  @func_17133() /* ty=Tensor[(168), float32] */
}

def @func_14068() -> Tensor[(9, 140), float32] {
  %713 = fn () -> Tensor[(9, 140), float32] {
    %712 = @func_14056() /* ty=(Tensor[(168), float32], Tensor[(13, 6, 6), float64], Tensor[(9, 140), float32], Tensor[(468), float64]) */;
    %712.2
  };
  %713() /* ty=Tensor[(9, 140), float32] */
}

def @func_16594() -> (Tensor[(3, 11, 16), float64], Tensor[(11, 12, 9), bool], Tensor[(1188), float64]) {
  %714 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %715 = cast(meta[relay.Constant][63] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %716 = cast(meta[relay.Constant][63] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %717 = reshape(%715, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %718 = reshape(%716, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %719 = @func_2003(%717, %718) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %720 = %714.0;
  %721 = %719.0;
  (%720, %721, meta[relay.Constant][63] /* ty=Tensor[(1188), float64] */)
}

def @func_16992(%var_16924: Tensor[(1, 286), float32], %var_16930: Tensor[(468), float64]) -> (Tensor[(286), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(3, 11, 16), float64], Tensor[(468), float64], Tensor[(24, 16), float64], Tensor[(3, 11, 16), float64]) {
  %722 = cast(meta[relay.Constant][64] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %723 = cast(%var_16924, dtype="float32") /* ty=Tensor[(1, 286), float32] */;
  %724 = reshape(%722, newshape=[540]) /* ty=Tensor[(540), float32] */;
  %725 = reshape(%723, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %726 = @func_15020(%724, %725) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(286), float32]) */;
  %727 = cast(%var_16930, dtype="float64") /* ty=Tensor[(468), float64] */;
  %728 = reshape(%727, newshape=[468]) /* ty=Tensor[(468), float64] */;
  %729 = @func_12186(%728) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64]) */;
  %730 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
  %731 = %730.3;
  %732 = cast(%731, dtype="float64") /* ty=Tensor[(24, 16), float64] */;
  %733 = @func_13196() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %734 = %726.3;
  %735 = %729.0;
  %736 = log(%732) /* ty=Tensor[(24, 16), float64] */;
  %737 = %733.0;
  (%734, meta[relay.Constant][64] /* ty=Tensor[(540), float32] */, %var_16924, %735, %var_16930, %736, %737)
}

def @func_12188(%var_12187: Tensor[(468), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64]) {
  %752 = fn (%var_12183: Tensor[(468), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64]) {
    %738 = @func_12126() /* ty=(Tensor[(3, 11, 16), float64],) */;
    %739 = cast(meta[relay.Constant][65] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %740 = cast(meta[relay.Constant][66] /* ty=Tensor[(4096), int16] */, dtype="int16") /* ty=Tensor[(4096), int16] */;
    %741 = reshape(%739, newshape=[]) /* ty=int16 */;
    %742 = reshape(%740, newshape=[16, 16, 16]) /* ty=Tensor[(16, 16, 16), int16] */;
    %743 = @func_7980(%741, %742) /* ty=(Tensor[(16, 16, 16), float32],) */;
    %744 = cast(%var_12183, dtype="float64") /* ty=Tensor[(468), float64] */;
    %745 = cast(%var_12183, dtype="float64") /* ty=Tensor[(468), float64] */;
    %746 = reshape(%744, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
    %747 = reshape(%745, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
    %748 = @func_1378(%746, %747) /* ty=(Tensor[(13, 6, 6), float64],) */;
    %749 = %738.0;
    %750 = %743.0;
    %751 = %748.0;
    (%749, %750, meta[relay.Constant][65] /* ty=int16 */, meta[relay.Constant][66] /* ty=Tensor[(4096), int16] */, %751, %var_12183)
  };
  %752(%var_12187) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64]) */
}

def @func_261(%var_259: Tensor[(9, 1, 16), float32]) -> (Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) {
  @func_258(%var_259) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */
}

def @func_12617(%var_12616: Tensor[(10, 2, 11), float64]) -> (Tensor[(10, 2, 11), float64],) {
  %755 = fn (%var_12610: Tensor[(10, 2, 11), float64]) -> (Tensor[(10, 2, 11), float64],) {
    %753 = cast(%var_12610, dtype="float64") /* ty=Tensor[(10, 2, 11), float64] */;
    %754 = log10(%753) /* ty=Tensor[(10, 2, 11), float64] */;
    (%754,)
  };
  %755(%var_12616) /* ty=(Tensor[(10, 2, 11), float64],) */
}

def @func_1587(%var_1522: Tensor[(14, 6, 15), float32], %var_1542: Tensor[(234, 2), float64]) -> (Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) {
  %756 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %757 = cast(meta[relay.Constant][68] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
  %758 = reshape(%756, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %759 = reshape(%757, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %760 = @func_1006(%758, %759) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %761 = cast(%var_1542, dtype="float64") /* ty=Tensor[(234, 2), float64] */;
  %762 = cast(%var_1542, dtype="float64") /* ty=Tensor[(234, 2), float64] */;
  %763 = reshape(%761, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %764 = reshape(%762, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %765 = @func_1378(%763, %764) /* ty=(Tensor[(13, 6, 6), float64],) */;
  %766 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %767 = %760.2;
  %768 = cast(%767, dtype="float32") /* ty=Tensor[(78), float32] */;
  %769 = reshape(%766, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %770 = reshape(%768, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %771 = @func_1006(%769, %770) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %772 = cast(%var_1522, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %773 = sqrt(%772) /* ty=Tensor[(14, 6, 15), float32] */;
  %774 = cast(%773, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %775 = cast(meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %776 = cast(%767, dtype="float32") /* ty=Tensor[(78), float32] */;
  %777 = reshape(%775, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %778 = reshape(%776, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %779 = @func_1006(%777, %778) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %780 = cast(%var_1522, dtype="int64") /* ty=Tensor[(14, 6, 15), int64] */;
  %781 = shape_of(%773, dtype="int32") /* ty=Tensor[(3), int32] */;
  %782 = cast(%773, dtype="int64") /* ty=Tensor[(14, 6, 15), int64] */;
  %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %784 = %765.0;
  %785 = %771.1;
  %786 = rsqrt(%774) /* ty=Tensor[(14, 6, 15), float32] */;
  %787 = %779.0;
  %788 = left_shift(%782, %783) /* ty=Tensor[(14, 6, 15), int64] */;
  (%767, meta[relay.Constant][67] /* ty=Tensor[(528), float32] */, meta[relay.Constant][68] /* ty=Tensor[(78), float32] */, %784, %var_1542, %785, %786, %787, %788)
}

def @func_9666(%var_9663: Tensor[(4, 6, 7), float32], %var_9664: Tensor[(4, 6, 7), float32], %var_9665: Tensor[(24, 16), float64]) -> (Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) {
  %798 = fn (%var_9642: Tensor[(4, 6, 7), float32], %var_9643: Tensor[(4, 6, 7), float32], %var_9653: Tensor[(24, 16), float64]) -> (Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) {
    %789 = cast(%var_9643, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
    %790 = shape_of(%var_9642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %791 = cast(%var_9642, dtype="float32") /* ty=Tensor[(4, 6, 7), float32] */;
    %792 = dyn.reshape(%789, %790, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %793 = cast(%var_9653, dtype="float64") /* ty=Tensor[(24, 16), float64] */;
    %794 = reshape(%793, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), float64] */;
    %795 = @func_9243(%794) /* ty=(Tensor[(12, 16, 2), float64],) */;
    %796 = mod(%791, %792) /* ty=Tensor[(4, 6, 7), float32] */;
    %797 = %795.0;
    (%796, %797, %var_9653)
  };
  %798(%var_9663, %var_9664, %var_9665) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(12, 16, 2), float64], Tensor[(24, 16), float64]) */
}

def @func_17191(%var_17189: Tensor[(14, 16, 10), float64]) -> (Tensor[(14, 16, 10), float64], Tensor[(528), float32], Tensor[(1260), float32], Tensor[(468), float64]) {
  @func_17188(%var_17189) /* ty=(Tensor[(14, 16, 10), float64], Tensor[(528), float32], Tensor[(1260), float32], Tensor[(468), float64]) */
}

def @func_11864() -> Tensor[(3, 11, 16), float64] {
  %799 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
  %799.1
}

def @main(%var_18693: Tensor[(13, 7, 4), float64]) -> Tensor[(13, 7, 4), float32] {
  %800 = cast(%var_18693, dtype="float64") /* ty=Tensor[(13, 7, 4), float64] */;
  %801 = asinh(%800) /* ty=Tensor[(13, 7, 4), float64] */;
  %802 = cast(%801, dtype="float32") /* ty=Tensor[(13, 7, 4), float32] */;
  cosh(%802) /* ty=Tensor[(13, 7, 4), float32] */
}

def @func_111(%var_109: Tensor[(14, 13, 7), float32]) -> (Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) {
  @func_108(%var_109) /* ty=(Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) */
}

def @func_10921(%var_10919: Tensor[(10, 11, 13), int16], %var_10920: Tensor[(10, 11, 13), int16]) -> (Tensor[(10, 11, 13), int16],) {
  @func_10917(%var_10919, %var_10920) /* ty=(Tensor[(10, 11, 13), int16],) */
}

def @func_17526(%var_17518: Tensor[(91, 4), uint32], %var_17519: Tensor[(7, 182), float32]) -> (Tensor[(168), float32], Tensor[(528), float64], Tensor[(91, 4), uint32], Tensor[(7, 182), float32]) {
  %803 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %804 = cast(%var_17518, dtype="uint32") /* ty=Tensor[(91, 4), uint32] */;
  %805 = cast(%var_17519, dtype="float32") /* ty=Tensor[(7, 182), float32] */;
  %806 = reshape(%804, newshape=[364]) /* ty=Tensor[(364), uint32] */;
  %807 = reshape(%805, newshape=[637, 2]) /* ty=Tensor[(637, 2), float32] */;
  %808 = @func_14615(%806, %807) /* ty=(Tensor[(384), float64], Tensor[(3, 11, 16), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16], Tensor[(528), float64], Tensor[(364), uint32], Tensor[(637, 2), float64], Tensor[(637, 2), float32]) */;
  %809 = %803.0;
  %810 = %808.4;
  (%809, %810, %var_17518, %var_17519)
}

def @func_11999() -> (Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) {
  @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */
}

def @func_17551() -> Tensor[(168), float32] {
  %811 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %811.0
}

def @func_14695() -> (Tensor[(168), float32],) {
  %814 = fn () -> (Tensor[(168), float32],) {
    %812 = @func_11903() /* ty=(Tensor[(168), float32],) */;
    %813 = %812.0;
    (%813,)
  };
  %814() /* ty=(Tensor[(168), float32],) */
}

def @func_13730() -> (Tensor[(4, 5, 2), float32],) {
  %817 = fn () -> (Tensor[(4, 5, 2), float32],) {
    %815 = @func_12278() /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
    %816 = %815.1;
    (%816,)
  };
  %817() /* ty=(Tensor[(4, 5, 2), float32],) */
}

def @func_15199() -> Tensor[(5, 13, 12), bool] {
  @func_15197() /* ty=Tensor[(5, 13, 12), bool] */
}

def @func_3394(%var_3385: Tensor[(7, 15, 16), float32]) -> Tensor[(7, 15, 16), float32] {
  %818 = cast(meta[relay.Constant][69] /* ty=Tensor[(7, 15, 16), float32] */, dtype="float32") /* ty=Tensor[(7, 15, 16), float32] */;
  %819 = shape_of(%var_3385, dtype="int32") /* ty=Tensor[(3), int32] */;
  %820 = cast(%var_3385, dtype="float32") /* ty=Tensor[(7, 15, 16), float32] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%820, %821) /* ty=Tensor[(7, 15, 16), float32] */
}

def @func_15441(%var_15439: Tensor[(1188), float64]) -> (Tensor[(168), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(1680), float32], float32, Tensor[(3, 11, 16), float64], Tensor[(24, 16), float64]) {
  @func_15438(%var_15439) /* ty=(Tensor[(168), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(1680), float32], float32, Tensor[(3, 11, 16), float64], Tensor[(24, 16), float64]) */
}

def @func_13823() -> Tensor[(3, 11, 16), float64] {
  @func_13821() /* ty=Tensor[(3, 11, 16), float64] */
}

def @func_14057() -> (Tensor[(168), float32], Tensor[(13, 6, 6), float64], Tensor[(9, 140), float32], Tensor[(468), float64]) {
  %830 = fn () -> (Tensor[(168), float32], Tensor[(13, 6, 6), float64], Tensor[(9, 140), float32], Tensor[(468), float64]) {
    %822 = @func_13308() /* ty=(Tensor[(168), float32],) */;
    %823 = cast(meta[relay.Constant][70] /* ty=Tensor[(9, 140), float32] */, dtype="float32") /* ty=Tensor[(9, 140), float32] */;
    %824 = cast(meta[relay.Constant][71] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
    %825 = reshape(%823, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
    %826 = reshape(%824, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
    %827 = @func_1587(%825, %826) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
    %828 = %822.0;
    %829 = %827.3;
    (%828, %829, meta[relay.Constant][70] /* ty=Tensor[(9, 140), float32] */, meta[relay.Constant][71] /* ty=Tensor[(468), float64] */)
  };
  %830() /* ty=(Tensor[(168), float32], Tensor[(13, 6, 6), float64], Tensor[(9, 140), float32], Tensor[(468), float64]) */
}

def @func_15369() -> (Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(13, 6), float32]) {
  %831 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %832 = cast(meta[relay.Constant][72] /* ty=Tensor[(13, 6), float32] */, dtype="float32") /* ty=Tensor[(13, 6), float32] */;
  %833 = reshape(%832, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %834 = @func_15060(%833) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) */;
  %835 = %831.0;
  %836 = %834.1;
  (%835, %836, meta[relay.Constant][72] /* ty=Tensor[(13, 6), float32] */)
}

def @func_11671(%var_11668: Tensor[(4, 5, 2), float32]) -> (Tensor[(4, 5, 2), float32],) {
  %837 = cast(%var_11668, dtype="float32") /* ty=Tensor[(4, 5, 2), float32] */;
  %838 = sqrt(%837) /* ty=Tensor[(4, 5, 2), float32] */;
  (%838,)
}

def @func_12292() -> Tensor[(168), float32] {
  @func_12290() /* ty=Tensor[(168), float32] */
}

def @func_13117() -> (Tensor[(168), float32],) {
  %841 = fn () -> (Tensor[(168), float32],) {
    %839 = @func_12792() /* ty=(Tensor[(168), float32],) */;
    %840 = %839.0;
    (%840,)
  };
  %841() /* ty=(Tensor[(168), float32],) */
}

def @func_16034(%var_16033: Tensor[(9, 140), float32]) -> (Tensor[(168), float32], Tensor[(9, 140), float64]) {
  %851 = fn (%var_16025: Tensor[(9, 140), float32]) -> (Tensor[(168), float32], Tensor[(9, 140), float64]) {
    %842 = @func_12792() /* ty=(Tensor[(168), float32],) */;
    %843 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
    %844 = %843.0;
    %845 = cast(%var_16025, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
    %846 = shape_of(%844, dtype="int32") /* ty=Tensor[(2), int32] */;
    %847 = cast(%844, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
    %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %849 = %842.0;
    %850 = floor_divide(%847, %848) /* ty=Tensor[(9, 140), float64] */;
    (%849, %850)
  };
  %851(%var_16033) /* ty=(Tensor[(168), float32], Tensor[(9, 140), float64]) */
}

def @func_16996(%var_16994: Tensor[(1, 286), float32], %var_16995: Tensor[(468), float64]) -> (Tensor[(286), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(3, 11, 16), float64], Tensor[(468), float64], Tensor[(24, 16), float64], Tensor[(3, 11, 16), float64]) {
  @func_16992(%var_16994, %var_16995) /* ty=(Tensor[(286), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(3, 11, 16), float64], Tensor[(468), float64], Tensor[(24, 16), float64], Tensor[(3, 11, 16), float64]) */
}

def @func_17069() -> (Tensor[(3, 11, 16), float64], Tensor[(144), float32]) {
  %852 = @func_15391() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %853 = @func_17014() /* ty=(Tensor[(144), float32], Tensor[(12, 16, 2), float64], Tensor[(540, 1), float32], Tensor[(286), float32]) */;
  %854 = %852.0;
  %855 = %853.0;
  (%854, %855)
}

def @func_11015(%var_10929: Tensor[(14, 4, 2), float64], %var_10934: Tensor[(78), float32], %var_10989: Tensor[(540), float32], %var_10998: Tensor[(14, 4, 2), float64], %var_11008: Tensor[(1188), float64], %var_11012: Tensor[(882), float64]) -> (Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(14, 13, 7), float64], Tensor[(1274), float32], Tensor[(11, 2, 13), float32], Tensor[(540), float32], Tensor[(13, 22), float32], Tensor[(7, 2, 12), uint16], Tensor[(168), uint16], Tensor[(14, 4, 2), bool], Tensor[(11, 12, 9), bool], Tensor[(1188), float64], Tensor[(7, 14, 9), float32], Tensor[(882), float64]) {
  %856 = cast(meta[relay.Constant][73] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
  %857 = cast(%var_10934, dtype="float32") /* ty=Tensor[(78), float32] */;
  %858 = reshape(%856, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %859 = reshape(%857, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %860 = @func_1006(%858, %859) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %861 = cast(meta[relay.Constant][74] /* ty=Tensor[(1274), float32] */, dtype="float32") /* ty=Tensor[(1274), float32] */;
  %862 = reshape(%861, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), float32] */;
  %863 = @func_108(%862) /* ty=(Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) */;
  %864 = cast(%var_10989, dtype="float32") /* ty=Tensor[(540), float32] */;
  %865 = cast(meta[relay.Constant][75] /* ty=Tensor[(13, 22), float32] */, dtype="float32") /* ty=Tensor[(13, 22), float32] */;
  %866 = reshape(%864, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %867 = reshape(%865, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %868 = @func_9623(%866, %867) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %869 = cast(meta[relay.Constant][76] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %870 = cast(meta[relay.Constant][76] /* ty=Tensor[(168), uint16] */, dtype="uint16") /* ty=Tensor[(168), uint16] */;
  %871 = reshape(%869, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %872 = reshape(%870, newshape=[7, 2, 12]) /* ty=Tensor[(7, 2, 12), uint16] */;
  %873 = @func_8764(%871, %872) /* ty=(Tensor[(7, 2, 12), uint16],) */;
  %874 = cast(%var_10929, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %875 = erf(%874) /* ty=Tensor[(14, 4, 2), float64] */;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(14, 4, 2), float64] */;
  %877 = acos(%876) /* ty=Tensor[(14, 4, 2), float64] */;
  %878 = cast(%var_10998, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %879 = shape_of(%877, dtype="int32") /* ty=Tensor[(3), int32] */;
  %880 = cast(%877, dtype="bool") /* ty=Tensor[(14, 4, 2), bool] */;
  %881 = dyn.reshape(%878, %879, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %882 = cast(%var_11008, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %883 = cast(%var_11008, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %884 = reshape(%882, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %885 = reshape(%883, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %886 = @func_2003(%884, %885) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %887 = cast(%var_11012, dtype="float64") /* ty=Tensor[(882), float64] */;
  %888 = reshape(%887, newshape=[7, 14, 9]) /* ty=Tensor[(7, 14, 9), float64] */;
  %889 = @func_7492(%888) /* ty=(Tensor[(7, 14, 9), float32],) */;
  %890 = %860.2;
  %891 = %863.1;
  %892 = %868.1;
  %893 = %873.0;
  %894 = greater_equal(%880, %881) /* ty=Tensor[(14, 4, 2), bool] */;
  %895 = %886.0;
  %896 = %889.0;
  (%890, meta[relay.Constant][73] /* ty=Tensor[(528), float32] */, %var_10934, %891, meta[relay.Constant][74] /* ty=Tensor[(1274), float32] */, %892, %var_10989, meta[relay.Constant][75] /* ty=Tensor[(13, 22), float32] */, %893, meta[relay.Constant][76] /* ty=Tensor[(168), uint16] */, %894, %895, %var_11008, %896, %var_11012)
}

def @func_17788() -> (Tensor[(3, 11, 16), float64],) {
  %897 = @func_17069() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(144), float32]) */;
  %898 = %897.0;
  (%898,)
}

def @func_18394(%var_18392: Tensor[(2, 20), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) {
  @func_18391(%var_18392) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(40), float32], Tensor[(2, 20), float32]) */
}

def @func_4879(%var_4877: Tensor[(3, 11, 16), float64], %var_4878: Tensor[(3, 11, 16), float64]) -> Tensor[(3, 11, 16), float64] {
  %903 = fn (%var_4868: Tensor[(3, 11, 16), float64], %var_4869: Tensor[(3, 11, 16), float64]) -> Tensor[(3, 11, 16), float64] {
    %899 = cast(%var_4869, dtype="float64") /* ty=Tensor[(3, 11, 16), float64] */;
    %900 = shape_of(%var_4868, dtype="int32") /* ty=Tensor[(3), int32] */;
    %901 = cast(%var_4868, dtype="float64") /* ty=Tensor[(3, 11, 16), float64] */;
    %902 = dyn.reshape(%899, %900, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    mod(%901, %902) /* ty=Tensor[(3, 11, 16), float64] */
  };
  %903(%var_4877, %var_4878) /* ty=Tensor[(3, 11, 16), float64] */
}

def @func_15994() -> (Tensor[(4, 6, 7), float32],) {
  %906 = fn () -> (Tensor[(4, 6, 7), float32],) {
    %904 = @func_12874() /* ty=(Tensor[(4, 6, 7), float32],) */;
    %905 = %904.0;
    (%905,)
  };
  %906() /* ty=(Tensor[(4, 6, 7), float32],) */
}

def @func_9627(%var_9625: Tensor[(9, 6, 10), float32], %var_9626: Tensor[(286), float32]) -> (Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) {
  @func_9623(%var_9625, %var_9626) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */
}

def @func_977(%var_976: Tensor[(13, 2, 3), float32]) -> Tensor[(13, 2, 3), float32] {
  %908 = fn (%var_947: Tensor[(13, 2, 3), float32]) -> Tensor[(13, 2, 3), float32] {
    %907 = cast(%var_947, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
    exp(%907) /* ty=Tensor[(13, 2, 3), float32] */
  };
  %908(%var_976) /* ty=Tensor[(13, 2, 3), float32] */
}

def @func_15525(%var_15522: Tensor[(1, 286), float32], %var_15523: Tensor[(18), uint16], %var_15524: Tensor[(1188), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(540), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(54, 22), float64], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(1800), float64]) {
  %925 = fn (%var_15499: Tensor[(1, 286), float32], %var_15509: Tensor[(18), uint16], %var_15510: Tensor[(1188), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(540), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(54, 22), float64], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(1800), float64]) {
    %909 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
    %910 = cast(meta[relay.Constant][77] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %911 = cast(%var_15499, dtype="float32") /* ty=Tensor[(1, 286), float32] */;
    %912 = reshape(%910, newshape=[540]) /* ty=Tensor[(540), float32] */;
    %913 = reshape(%911, newshape=[13, 22]) /* ty=Tensor[(13, 22), float32] */;
    %914 = @func_14874(%912, %913) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(13, 22), float32]) */;
    %915 = cast(%var_15509, dtype="uint16") /* ty=Tensor[(18), uint16] */;
    %916 = cast(%var_15510, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %917 = cast(meta[relay.Constant][78] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %918 = reshape(%915, newshape=[2, 3, 3]) /* ty=Tensor[(2, 3, 3), uint16] */;
    %919 = reshape(%916, newshape=[54, 22]) /* ty=Tensor[(54, 22), float64] */;
    %920 = reshape(%917, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %921 = @func_7610(%918, %919, %920) /* ty=(Tensor[(2, 3, 3), bool], Tensor[(1274, 1), float32], Tensor[(616), float32], Tensor[(54, 22), float64], Tensor[(1680), float32], Tensor[(9, 1, 16), float32], Tensor[(572), uint16], Tensor[(1800), float64]) */;
    %922 = %909.0;
    %923 = %914.2;
    %924 = %921.3;
    (%922, %923, meta[relay.Constant][77] /* ty=Tensor[(540), float32] */, %var_15499, %924, %var_15509, %var_15510, meta[relay.Constant][78] /* ty=Tensor[(1800), float64] */)
  };
  %925(%var_15522, %var_15523, %var_15524) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(540), float32], Tensor[(540), float32], Tensor[(1, 286), float32], Tensor[(54, 22), float64], Tensor[(18), uint16], Tensor[(1188), float64], Tensor[(1800), float64]) */
}

def @func_17440(%var_17438: Tensor[(9, 140), float32]) -> (Tensor[(9, 140), bool], Tensor[(9, 140), float64]) {
  @func_17437(%var_17438) /* ty=(Tensor[(9, 140), bool], Tensor[(9, 140), float64]) */
}

def @func_9623(%var_9593: Tensor[(9, 6, 10), float32], %var_9610: Tensor[(286), float32]) -> (Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) {
  %926 = cast(%var_9593, dtype="float32") /* ty=Tensor[(9, 6, 10), float32] */;
  %927 = cast(%var_9610, dtype="float32") /* ty=Tensor[(286), float32] */;
  %928 = reshape(%927, newshape=[11, 2, 13]) /* ty=Tensor[(11, 2, 13), float32] */;
  %929 = @func_5022(%928) /* ty=(Tensor[(11, 2, 13), float32],) */;
  %930 = cast(meta[relay.Constant][79] /* ty=Tensor[(192, 2), float64] */, dtype="float64") /* ty=Tensor[(192, 2), float64] */;
  %931 = reshape(%930, newshape=[12, 16, 2]) /* ty=Tensor[(12, 16, 2), float64] */;
  %932 = @func_9243(%931) /* ty=(Tensor[(12, 16, 2), float64],) */;
  %933 = atanh(%926) /* ty=Tensor[(9, 6, 10), float32] */;
  %934 = %929.0;
  %935 = %932.0;
  (%933, %934, %var_9610, %935, meta[relay.Constant][79] /* ty=Tensor[(192, 2), float64] */)
}

def @func_11537(%var_11517: Tensor[(3, 2, 12), float32]) -> (Tensor[(3, 2, 12), float32], Tensor[(78), float32], Tensor[(1800), float64]) {
  %936 = cast(%var_11517, dtype="float32") /* ty=Tensor[(3, 2, 12), float32] */;
  %937 = cast(meta[relay.Constant][80] /* ty=Tensor[(1800), float64] */, dtype="float64") /* ty=Tensor[(1800), float64] */;
  %938 = reshape(%937, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
  %939 = @func_1313(%938) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
  %940 = log10(%936) /* ty=Tensor[(3, 2, 12), float32] */;
  %941 = %939.3;
  (%940, %941, meta[relay.Constant][80] /* ty=Tensor[(1800), float64] */)
}

def @func_6084(%var_6070: Tensor[(8, 4, 1), bool], %var_6080: Tensor[(252, 1), float32]) -> (Tensor[(8, 4, 10), bool], Tensor[(4, 7, 9), float32], Tensor[(252, 1), float32]) {
  %942 = cast(%var_6070, dtype="bool") /* ty=Tensor[(8, 4, 1), bool] */;
  %943 = cast(meta[relay.Constant][81] /* ty=Tensor[(8, 4, 10), bool] */, dtype="bool") /* ty=Tensor[(8, 4, 10), bool] */;
  %944 = cast(%var_6080, dtype="float32") /* ty=Tensor[(252, 1), float32] */;
  %945 = cast(%var_6080, dtype="float32") /* ty=Tensor[(252, 1), float32] */;
  %946 = reshape(%944, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %947 = reshape(%945, newshape=[4, 7, 9]) /* ty=Tensor[(4, 7, 9), float32] */;
  %948 = @func_4214(%946, %947) /* ty=(Tensor[(4, 7, 9), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(468), float64]) */;
  %949 = logical_or(%942, %943) /* ty=Tensor[(8, 4, 10), bool] */;
  %950 = %948.0;
  (%949, %950, %var_6080)
}

def @func_3728(%var_3721: float32) -> (Tensor[(3, 2, 12), float32],) {
  %951 = cast(%var_3721, dtype="float32") /* ty=float32 */;
  %952 = cast(meta[relay.Constant][82] /* ty=Tensor[(3, 2, 12), float32] */, dtype="float32") /* ty=Tensor[(3, 2, 12), float32] */;
  %953 = divide(%951, %952) /* ty=Tensor[(3, 2, 12), float32] */;
  (%953,)
}

def @func_12280() -> (Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) {
  @func_12278() /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */
}

def @func_15438(%var_15419: Tensor[(1188), float64]) -> (Tensor[(168), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(1680), float32], float32, Tensor[(3, 11, 16), float64], Tensor[(24, 16), float64]) {
  %954 = @func_13461() /* ty=(Tensor[(168), float32],) */;
  %955 = cast(%var_15419, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %956 = cast(meta[relay.Constant][83] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
  %957 = cast(6.36428f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %958 = reshape(%955, newshape=[1188]) /* ty=Tensor[(1188), float64] */;
  %959 = reshape(%956, newshape=[12, 140]) /* ty=Tensor[(12, 140), float32] */;
  %960 = reshape(%957, newshape=[]) /* ty=float32 */;
  %961 = @func_14121(%958, %959, %960) /* ty=(Tensor[(4, 6, 7), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32], Tensor[(1680), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(12, 140), float32], float32) */;
  %962 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
  %963 = %954.0;
  %964 = %961.4;
  %965 = @func_13821() /* ty=Tensor[(3, 11, 16), float64] */;
  %966 = %962.3;
  (%963, %964, %var_15419, meta[relay.Constant][83] /* ty=Tensor[(1680), float32] */, 6.36428f /* ty=float32 */, %965, %966)
}

def @func_12296() -> (Tensor[(3, 11, 16), float64],) {
  %968 = fn () -> (Tensor[(3, 11, 16), float64],) {
    %967 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
    (%967,)
  };
  %968() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_14749(%var_14723: float64, %var_14731: Tensor[(528), float32]) -> (Tensor[(11, 4, 12), float32], Tensor[(528), float32], Tensor[(1, 78), float32], Tensor[(?, 9, 3), float64]) {
  %969 = cast(%var_14731, dtype="float32") /* ty=Tensor[(528), float32] */;
  %970 = cast(meta[relay.Constant][84] /* ty=Tensor[(1, 78), float32] */, dtype="float32") /* ty=Tensor[(1, 78), float32] */;
  %971 = reshape(%969, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
  %972 = reshape(%970, newshape=[78]) /* ty=Tensor[(78), float32] */;
  %973 = @func_1006(%971, %972) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
  %974 = cast(%var_14723, dtype="float64") /* ty=float64 */;
  %975 = cast(meta[relay.Constant][85] /* ty=Tensor[(1, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %976 = minimum(%974, %975) /* ty=Tensor[(1, 9, 3), float64] */;
  %977 = cast(meta[relay.Constant][85] /* ty=Tensor[(1, 9, 3), float64] */, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %978 = shape_of(%976, dtype="int32") /* ty=Tensor[(3), int32] */;
  %979 = cast(%976, dtype="float64") /* ty=Tensor[(1, 9, 3), float64] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %981 = %973.0;
  %982 = power(%979, %980) /* ty=Tensor[(?, 9, 3), float64] */;
  (%981, %var_14731, meta[relay.Constant][84] /* ty=Tensor[(1, 78), float32] */, %982)
}

def @func_16186() -> (Tensor[(780), bool],) {
  @func_16184() /* ty=(Tensor[(780), bool],) */
}

def @func_2006(%var_2004: Tensor[(11, 12, 9), float64], %var_2005: Tensor[(11, 12, 9), float64]) -> (Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) {
  %1000 = fn (%var_1944: Tensor[(11, 12, 9), float64], %var_1945: Tensor[(11, 12, 9), float64]) -> (Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) {
    %983 = cast(%var_1945, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
    %984 = shape_of(%var_1944, dtype="int32") /* ty=Tensor[(3), int32] */;
    %985 = cast(%var_1944, dtype="bool") /* ty=Tensor[(11, 12, 9), bool] */;
    %986 = dyn.reshape(%983, %984, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %987 = cast(meta[relay.Constant][86] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %988 = cast(meta[relay.Constant][87] /* ty=Tensor[(78), float32] */, dtype="float32") /* ty=Tensor[(78), float32] */;
    %989 = reshape(%987, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %990 = reshape(%988, newshape=[78]) /* ty=Tensor[(78), float32] */;
    %991 = @func_1006(%989, %990) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
    %992 = cast(meta[relay.Constant][86] /* ty=Tensor[(528), float32] */, dtype="float32") /* ty=Tensor[(528), float32] */;
    %993 = %991.1;
    %994 = cast(%993, dtype="float32") /* ty=Tensor[(13, 2, 3), float32] */;
    %995 = reshape(%992, newshape=[11, 4, 12]) /* ty=Tensor[(11, 4, 12), float32] */;
    %996 = reshape(%994, newshape=[78]) /* ty=Tensor[(78), float32] */;
    %997 = @func_1006(%995, %996) /* ty=(Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) */;
    %998 = not_equal(%985, %986) /* ty=Tensor[(11, 12, 9), bool] */;
    %999 = %997.1;
    (%998, %993, meta[relay.Constant][86] /* ty=Tensor[(528), float32] */, meta[relay.Constant][87] /* ty=Tensor[(78), float32] */, %999)
  };
  %1000(%var_2004, %var_2005) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */
}

def @func_14322() -> (Tensor[(168), float32],) {
  @func_14320() /* ty=(Tensor[(168), float32],) */
}

def @func_7386(%var_7380: Tensor[(12, 2, 6), float32]) -> Tensor[(12, 2, 6), float32] {
  %1001 = cast(%var_7380, dtype="float32") /* ty=Tensor[(12, 2, 6), float32] */;
  tan(%1001) /* ty=Tensor[(12, 2, 6), float32] */
}

def @func_4455(%var_4450: Tensor[(11, 7, 8), float32], %var_4451: Tensor[(1, 1188), float64], %var_4452: Tensor[(1680), float32], %var_4453: Tensor[(11, 7, 8), float32], %var_4454: float32) -> (Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) {
  @func_4448(%var_4450, %var_4451, %var_4452, %var_4453, %var_4454) /* ty=(Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) */
}

def @func_12844(%var_12843: Tensor[(1800), float64]) -> (Tensor[(528), float64], Tensor[(528), float32], Tensor[(1800), float64]) {
  %1008 = fn (%var_12817: Tensor[(1800), float64]) -> (Tensor[(528), float64], Tensor[(528), float32], Tensor[(1800), float64]) {
    %1002 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
    %1003 = cast(%var_12817, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %1004 = reshape(%1003, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
    %1005 = @func_1313(%1004) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
    %1006 = %1002.0;
    %1007 = %1005.2;
    (%1006, %1007, %var_12817)
  };
  %1008(%var_12843) /* ty=(Tensor[(528), float64], Tensor[(528), float32], Tensor[(1800), float64]) */
}

def @func_18374() -> (Tensor[(4, 6, 7), float32], Tensor[(3, 11, 16), float64]) {
  %1009 = @func_15993() /* ty=(Tensor[(4, 6, 7), float32],) */;
  %1010 = @func_16386() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) */;
  %1011 = %1009.0;
  %1012 = %1010.1;
  (%1011, %1012)
}

def @func_16612() -> Tensor[(9, 140), float32] {
  %1013 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
  %1013.0
}

def @func_16268() -> Tensor[(5, 13, 12), bool] {
  %1015 = fn () -> Tensor[(5, 13, 12), bool] {
    %1014 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
    %1014.1
  };
  %1015() /* ty=Tensor[(5, 13, 12), bool] */
}

def @func_2267(%var_2265: Tensor[(3, 8, 6), int32], %var_2266: Tensor[(3, 8, 6), int32]) -> (Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) {
  %1031 = fn (%var_2219: Tensor[(3, 8, 6), int32], %var_2220: Tensor[(3, 8, 6), int32]) -> (Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) {
    %1016 = cast(%var_2220, dtype="int32") /* ty=Tensor[(3, 8, 6), int32] */;
    %1017 = shape_of(%var_2219, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1018 = cast(%var_2219, dtype="int32") /* ty=Tensor[(3, 8, 6), int32] */;
    %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %1020 = cast(%var_2219, dtype="float32") /* ty=Tensor[(3, 8, 6), float32] */;
    %1021 = reshape(%1020, newshape=[9, 1, 16]) /* ty=Tensor[(9, 1, 16), float32] */;
    %1022 = @func_258(%1021) /* ty=(Tensor[(9, 1, 16), float32], Tensor[(9, 1, 16), float32], Tensor[(14, 13, 7), bool], Tensor[(1274, 1), float32]) */;
    %1023 = cast(meta[relay.Constant][88] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %1024 = cast(meta[relay.Constant][88] /* ty=Tensor[(1188), float64] */, dtype="float64") /* ty=Tensor[(1188), float64] */;
    %1025 = reshape(%1023, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
    %1026 = reshape(%1024, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
    %1027 = @func_2003(%1025, %1026) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
    %1028 = bitwise_xor(%1018, %1019) /* ty=Tensor[(3, 8, 6), int32] */;
    %1029 = %1022.0;
    %1030 = %1027.3;
    (%1028, %1029, %1030, meta[relay.Constant][88] /* ty=Tensor[(1188), float64] */)
  };
  %1031(%var_2265, %var_2266) /* ty=(Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) */
}

def @func_12290() -> Tensor[(168), float32] {
  %1032 = @func_11903() /* ty=(Tensor[(168), float32],) */;
  %1032.0
}

def @func_14874(%var_14860: Tensor[(540), float32], %var_14861: Tensor[(13, 22), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(12, 16, 2), float64], Tensor[(540), float32], Tensor[(13, 22), float32]) {
  %1033 = @func_13667() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %1034 = cast(%var_14860, dtype="float32") /* ty=Tensor[(540), float32] */;
  %1035 = cast(%var_14861, dtype="float32") /* ty=Tensor[(13, 22), float32] */;
  %1036 = reshape(%1034, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), float32] */;
  %1037 = reshape(%1035, newshape=[286]) /* ty=Tensor[(286), float32] */;
  %1038 = @func_9623(%1036, %1037) /* ty=(Tensor[(9, 6, 10), float32], Tensor[(11, 2, 13), float32], Tensor[(286), float32], Tensor[(12, 16, 2), float64], Tensor[(192, 2), float64]) */;
  %1039 = %1033.0;
  %1040 = %1038.3;
  (%1039, %1040, %var_14860, %var_14861)
}

def @func_1591(%var_1589: Tensor[(14, 6, 15), float32], %var_1590: Tensor[(234, 2), float64]) -> (Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) {
  @func_1587(%var_1589, %var_1590) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */
}

def @func_11903() -> (Tensor[(168), float32],) {
  %1041 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
  %1042 = %1041.4;
  (%1042,)
}

def @func_15745() -> Tensor[(3, 11, 16), float64] {
  %1043 = fn () -> Tensor[(3, 11, 16), float64] {
    @func_13821() /* ty=Tensor[(3, 11, 16), float64] */
  };
  %1043() /* ty=Tensor[(3, 11, 16), float64] */
}

def @func_17437(%var_17413: Tensor[(9, 140), float32]) -> (Tensor[(9, 140), bool], Tensor[(9, 140), float64]) {
  %1044 = @func_16772() /* ty=Tensor[(9, 140), float32] */;
  %1045 = cast(%var_17413, dtype="bool") /* ty=Tensor[(9, 140), bool] */;
  %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1047 = cast(%1044, dtype="bool") /* ty=Tensor[(9, 140), bool] */;
  %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1049 = cast(%var_17413, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
  %1050 = shape_of(%1044, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1051 = cast(%1044, dtype="float64") /* ty=Tensor[(9, 140), float64] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1053 = equal(%1047, %1048) /* ty=Tensor[(9, 140), bool] */;
  %1054 = power(%1051, %1052) /* ty=Tensor[(9, 140), float64] */;
  (%1053, %1054)
}

def @func_15951() -> (Tensor[(168), float32], Tensor[(144), float32], Tensor[(168), float32]) {
  @func_15949() /* ty=(Tensor[(168), float32], Tensor[(144), float32], Tensor[(168), float32]) */
}

def @func_12793() -> (Tensor[(168), float32],) {
  %1057 = fn () -> (Tensor[(168), float32],) {
    %1055 = @func_11766() /* ty=(Tensor[(528), float64], Tensor[(4, 6, 7), float32], Tensor[(168), float32], Tensor[(384), float64]) */;
    %1056 = %1055.2;
    (%1056,)
  };
  %1057() /* ty=(Tensor[(168), float32],) */
}

def @func_13196() -> (Tensor[(3, 11, 16), float64],) {
  %1058 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1059 = %1058.0;
  (%1059,)
}

def @func_17931(%var_17929: Tensor[(1430), int16]) -> (Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) {
  @func_17928(%var_17929) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) */
}

def @func_17188(%var_17175: Tensor[(14, 16, 10), float64]) -> (Tensor[(14, 16, 10), float64], Tensor[(528), float32], Tensor[(1260), float32], Tensor[(468), float64]) {
  %1060 = cast(%var_17175, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
  %1061 = cast(meta[relay.Constant][89] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1062 = cast(meta[relay.Constant][90] /* ty=Tensor[(468), float64] */, dtype="float64") /* ty=Tensor[(468), float64] */;
  %1063 = reshape(%1061, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1064 = reshape(%1062, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
  %1065 = @func_1587(%1063, %1064) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
  %1066 = acosh(%1060) /* ty=Tensor[(14, 16, 10), float64] */;
  %1067 = %1065.1;
  (%1066, %1067, meta[relay.Constant][89] /* ty=Tensor[(1260), float32] */, meta[relay.Constant][90] /* ty=Tensor[(468), float64] */)
}

def @func_12127() -> (Tensor[(3, 11, 16), float64],) {
  %1069 = fn () -> (Tensor[(3, 11, 16), float64],) {
    %1068 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
    (%1068,)
  };
  %1069() /* ty=(Tensor[(3, 11, 16), float64],) */
}

def @func_3397(%var_3395: Tensor[(7, 15, 16), float32]) -> Tensor[(7, 15, 16), float32] {
  @func_3394(%var_3395) /* ty=Tensor[(7, 15, 16), float32] */
}

def @func_8767(%var_8765: Tensor[(7, 2, 12), uint16], %var_8766: Tensor[(7, 2, 12), uint16]) -> (Tensor[(7, 2, 12), uint16],) {
  %1075 = fn (%var_8759: Tensor[(7, 2, 12), uint16], %var_8760: Tensor[(7, 2, 12), uint16]) -> (Tensor[(7, 2, 12), uint16],) {
    %1070 = cast(%var_8760, dtype="uint16") /* ty=Tensor[(7, 2, 12), uint16] */;
    %1071 = shape_of(%var_8759, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1072 = cast(%var_8759, dtype="uint16") /* ty=Tensor[(7, 2, 12), uint16] */;
    %1073 = dyn.reshape(%1070, %1071, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1074 = bitwise_and(%1072, %1073) /* ty=Tensor[(7, 2, 12), uint16] */;
    (%1074,)
  };
  %1075(%var_8765, %var_8766) /* ty=(Tensor[(7, 2, 12), uint16],) */
}

def @func_7614(%var_7611: Tensor[(2, 3, 3), uint16], %var_7612: Tensor[(54, 22), float64], %var_7613: Tensor[(1800), float64]) -> (Tensor[(2, 3, 3), bool], Tensor[(1274, 1), float32], Tensor[(616), float32], Tensor[(54, 22), float64], Tensor[(1680), float32], Tensor[(9, 1, 16), float32], Tensor[(572), uint16], Tensor[(1800), float64]) {
  %1099 = fn (%var_7568: Tensor[(2, 3, 3), uint16], %var_7580: Tensor[(54, 22), float64], %var_7605: Tensor[(1800), float64]) -> (Tensor[(2, 3, 3), bool], Tensor[(1274, 1), float32], Tensor[(616), float32], Tensor[(54, 22), float64], Tensor[(1680), float32], Tensor[(9, 1, 16), float32], Tensor[(572), uint16], Tensor[(1800), float64]) {
    %1076 = cast(meta[relay.Constant][91] /* ty=uint16 */, dtype="bool") /* ty=bool */;
    %1077 = cast(%var_7568, dtype="bool") /* ty=Tensor[(2, 3, 3), bool] */;
    %1078 = cast(meta[relay.Constant][92] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
    %1079 = cast(%var_7580, dtype="float64") /* ty=Tensor[(54, 22), float64] */;
    %1080 = cast(meta[relay.Constant][93] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %1081 = cast(meta[relay.Constant][92] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
    %1082 = cast(meta[relay.Constant][91] /* ty=uint16 */, dtype="float32") /* ty=float32 */;
    %1083 = reshape(%1078, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
    %1084 = reshape(%1079, newshape=[1, 1188]) /* ty=Tensor[(1, 1188), float64] */;
    %1085 = reshape(%1080, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
    %1086 = reshape(%1081, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
    %1087 = reshape(%1082, newshape=[]) /* ty=float32 */;
    %1088 = @func_4448(%1083, %1084, %1085, %1086, %1087) /* ty=(Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) */;
    %1089 = cast(meta[relay.Constant][94] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
    %1090 = cast(meta[relay.Constant][94] /* ty=Tensor[(572), uint16] */, dtype="uint16") /* ty=Tensor[(572), uint16] */;
    %1091 = cast(%var_7605, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %1092 = reshape(%1089, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
    %1093 = reshape(%1090, newshape=[13, 4, 11]) /* ty=Tensor[(13, 4, 11), uint16] */;
    %1094 = reshape(%1091, newshape=[1800]) /* ty=Tensor[(1800), float64] */;
    %1095 = @func_3927(%1092, %1093, %1094) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */;
    %1096 = greater(%1076, %1077) /* ty=Tensor[(2, 3, 3), bool] */;
    %1097 = %1088.11;
    %1098 = %1095.3;
    (%1096, %1097, meta[relay.Constant][92] /* ty=Tensor[(616), float32] */, %var_7580, meta[relay.Constant][93] /* ty=Tensor[(1680), float32] */, %1098, meta[relay.Constant][94] /* ty=Tensor[(572), uint16] */, %var_7605)
  };
  %1099(%var_7611, %var_7612, %var_7613) /* ty=(Tensor[(2, 3, 3), bool], Tensor[(1274, 1), float32], Tensor[(616), float32], Tensor[(54, 22), float64], Tensor[(1680), float32], Tensor[(9, 1, 16), float32], Tensor[(572), uint16], Tensor[(1800), float64]) */
}

def @func_13668() -> (Tensor[(5, 13, 12), bool],) {
  %1102 = fn () -> (Tensor[(5, 13, 12), bool],) {
    %1100 = @func_13151() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */;
    %1101 = %1100.1;
    (%1101,)
  };
  %1102() /* ty=(Tensor[(5, 13, 12), bool],) */
}

def @func_16333(%var_16332: Tensor[(14, 16, 13), uint8]) -> Tensor[(14, 16, 13), uint8] {
  %1107 = fn (%var_16319: Tensor[(14, 16, 13), uint8]) -> Tensor[(14, 16, 13), uint8] {
    %1103 = cast(meta[relay.Constant][95] /* ty=Tensor[(14, 16, 13), uint8] */, dtype="uint8") /* ty=Tensor[(14, 16, 13), uint8] */;
    %1104 = shape_of(%var_16319, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1105 = cast(%var_16319, dtype="uint8") /* ty=Tensor[(14, 16, 13), uint8] */;
    %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    bitwise_and(%1105, %1106) /* ty=Tensor[(14, 16, 13), uint8] */
  };
  %1107(%var_16332) /* ty=Tensor[(14, 16, 13), uint8] */
}

def @func_16344(%var_16343: Tensor[(2, 11, 13), float64]) -> Tensor[(2, 11, 13), float64] {
  %1109 = fn (%var_16335: Tensor[(2, 11, 13), float64]) -> Tensor[(2, 11, 13), float64] {
    %1108 = cast(%var_16335, dtype="float64") /* ty=Tensor[(2, 11, 13), float64] */;
    asin(%1108) /* ty=Tensor[(2, 11, 13), float64] */
  };
  %1109(%var_16343) /* ty=Tensor[(2, 11, 13), float64] */
}

def @func_16772() -> Tensor[(9, 140), float32] {
  %1110 = @func_15598() /* ty=(Tensor[(9, 140), float32],) */;
  %1110.0
}

def @func_17133() -> Tensor[(168), float32] {
  @func_16755() /* ty=Tensor[(168), float32] */
}

def @func_17844() -> (Tensor[(1800), float64], Tensor[(168), float32], Tensor[(144), float32]) {
  %1111 = @func_12696() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572, 1680), bool]) */;
  %1112 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %1113 = %1111.1;
  %1114 = %1112.0;
  %1115 = @func_14248() /* ty=Tensor[(144), float32] */;
  (%1113, %1114, %1115)
}

def @func_14121(%var_14109: Tensor[(1188), float64], %var_14110: Tensor[(12, 140), float32], %var_14111: float32) -> (Tensor[(4, 6, 7), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32], Tensor[(1680), float32], Tensor[(616), float32], Tensor[(1188), float64], Tensor[(12, 140), float32], float32) {
  %1116 = @func_12874() /* ty=(Tensor[(4, 6, 7), float32],) */;
  %1117 = cast(meta[relay.Constant][96] /* ty=Tensor[(364), uint32] */, dtype="uint32") /* ty=Tensor[(364), uint32] */;
  %1118 = reshape(%1117, newshape=[364]) /* ty=Tensor[(364), uint32] */;
  %1119 = @func_11717(%1118) /* ty=(Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */;
  %1120 = cast(meta[relay.Constant][97] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %1121 = cast(%var_14109, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %1122 = cast(%var_14110, dtype="float32") /* ty=Tensor[(12, 140), float32] */;
  %1123 = cast(meta[relay.Constant][97] /* ty=Tensor[(616), float32] */, dtype="float32") /* ty=Tensor[(616), float32] */;
  %1124 = cast(%var_14111, dtype="float32") /* ty=float32 */;
  %1125 = reshape(%1120, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
  %1126 = reshape(%1121, newshape=[1, 1188]) /* ty=Tensor[(1, 1188), float64] */;
  %1127 = reshape(%1122, newshape=[1680]) /* ty=Tensor[(1680), float32] */;
  %1128 = reshape(%1123, newshape=[11, 7, 8]) /* ty=Tensor[(11, 7, 8), float32] */;
  %1129 = reshape(%1124, newshape=[]) /* ty=float32 */;
  %1130 = @func_4448(%1125, %1126, %1127, %1128, %1129) /* ty=(Tensor[(11, 7, 8), float32], Tensor[(78), float32], Tensor[(1800), float64], Tensor[(13, 2, 3), float32], Tensor[(1, 1188), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(1274, 1), float32], Tensor[(7, 15, 16), float32], Tensor[(11, 7, 8), float64], Tensor[(15, 15, 8), float64], Tensor[(3, 2, 12), float32], float32) */;
  %1131 = %1116.0;
  %1132 = %1119.1;
  %1133 = %1130.8;
  (%1131, %1132, meta[relay.Constant][96] /* ty=Tensor[(364), uint32] */, %1133, meta[relay.Constant][97] /* ty=Tensor[(616), float32] */, %var_14109, %var_14110, %var_14111)
}

def @func_18376() -> (Tensor[(4, 6, 7), float32], Tensor[(3, 11, 16), float64]) {
  @func_18374() /* ty=(Tensor[(4, 6, 7), float32], Tensor[(3, 11, 16), float64]) */
}

def @func_13581(%var_13555: Tensor[(1188), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(1188), float64]) {
  %1134 = @func_12295() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1135 = cast(%var_13555, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %1136 = cast(%var_13555, dtype="float64") /* ty=Tensor[(1188), float64] */;
  %1137 = reshape(%1135, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %1138 = reshape(%1136, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %1139 = @func_2003(%1137, %1138) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %1140 = @func_11864() /* ty=Tensor[(3, 11, 16), float64] */;
  %1141 = %1134.0;
  %1142 = %1139.2;
  (%1140, %1141, %1142, %var_13555)
}

def @func_17673(%var_17637: Tensor[(468), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(5, 13, 12), bool], Tensor[(11, 12, 9), bool], Tensor[(168), float32], Tensor[(10, 11, 13), int16], Tensor[(13, 6, 6), float64], Tensor[(468), float64], Tensor[(1188, 144), float32], Tensor[(13, 2, 3), float32], Tensor[(1260), float32], Tensor[(168), float32]) {
  %1143 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1144 = @func_15892() /* ty=(Tensor[(5, 13, 12), bool],) */;
  %1145 = cast(meta[relay.Constant][98] /* ty=Tensor[(1188, 1), float64] */, dtype="float64") /* ty=Tensor[(1188, 1), float64] */;
  %1146 = cast(meta[relay.Constant][98] /* ty=Tensor[(1188, 1), float64] */, dtype="float64") /* ty=Tensor[(1188, 1), float64] */;
  %1147 = reshape(%1145, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %1148 = reshape(%1146, newshape=[11, 12, 9]) /* ty=Tensor[(11, 12, 9), float64] */;
  %1149 = @func_2003(%1147, %1148) /* ty=(Tensor[(11, 12, 9), bool], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 2, 3), float32]) */;
  %1150 = @func_13308() /* ty=(Tensor[(168), float32],) */;
  %1151 = @func_16386() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(715, 2), int16], Tensor[(1188), float32], Tensor[(1188), float64]) */;
  %1152 = cast(%var_17637, dtype="float64") /* ty=Tensor[(468), float64] */;
  %1153 = cast(%var_17637, dtype="float64") /* ty=Tensor[(468), float64] */;
  %1154 = reshape(%1152, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %1155 = reshape(%1153, newshape=[13, 6, 6]) /* ty=Tensor[(13, 6, 6), float64] */;
  %1156 = @func_1378(%1154, %1155) /* ty=(Tensor[(13, 6, 6), float64],) */;
  %1157 = %1151.2;
  %1158 = cast(%1157, dtype="int16") /* ty=Tensor[(10, 11, 13), int16] */;
  %1159 = reshape(%1158, newshape=[1430]) /* ty=Tensor[(1430), int16] */;
  %1160 = @func_15037(%1159) /* ty=(Tensor[(144), float32], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) */;
  %1161 = %1160.0;
  %1162 = cast(%1161, dtype="float32") /* ty=Tensor[(144), float32] */;
  %1163 = cast(meta[relay.Constant][98] /* ty=Tensor[(1188, 1), float64] */, dtype="float32") /* ty=Tensor[(1188, 1), float32] */;
  %1164 = cast(meta[relay.Constant][99] /* ty=Tensor[(1260), float32] */, dtype="float32") /* ty=Tensor[(1260), float32] */;
  %1165 = %1156.0;
  %1166 = cast(%1165, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  %1167 = reshape(%1164, newshape=[14, 6, 15]) /* ty=Tensor[(14, 6, 15), float32] */;
  %1168 = reshape(%1166, newshape=[234, 2]) /* ty=Tensor[(234, 2), float64] */;
  %1169 = @func_1587(%1167, %1168) /* ty=(Tensor[(78), float32], Tensor[(528), float32], Tensor[(78), float32], Tensor[(13, 6, 6), float64], Tensor[(234, 2), float64], Tensor[(13, 2, 3), float32], Tensor[(14, 6, 15), float32], Tensor[(11, 4, 12), float32], Tensor[(14, 6, 15), int64]) */;
  %1170 = %1143.0;
  %1171 = %1144.0;
  %1172 = %1149.0;
  %1173 = %1150.0;
  %1174 = power(%1162, %1163) /* ty=Tensor[(1188, 144), float32] */;
  %1175 = %1169.5;
  %1176 = @func_17133() /* ty=Tensor[(168), float32] */;
  (%1170, %1171, %1172, %1173, %1157, %1165, %var_17637, %1174, %1175, meta[relay.Constant][99] /* ty=Tensor[(1260), float32] */, %1176)
}

def @func_18614(%var_18612: Tensor[(54, 10), float32]) -> (Tensor[(168), float32], Tensor[(168), float32], Tensor[(4, 6, 7), float32], Tensor[(54, 10), float32], Tensor[(286), float32], Tensor[(5, 13, 12), bool]) {
  @func_18611(%var_18612) /* ty=(Tensor[(168), float32], Tensor[(168), float32], Tensor[(4, 6, 7), float32], Tensor[(54, 10), float32], Tensor[(286), float32], Tensor[(5, 13, 12), bool]) */
}

def @func_18179() -> (Tensor[(3, 11, 16), float64], Tensor[(168), float32]) {
  @func_18177() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(168), float32]) */
}

def @func_15296(%var_15294: Tensor[(100), bool], %var_15295: Tensor[(540), float32]) -> (Tensor[(3, 11, 16), float64], Tensor[(11, 2, 13), float32], Tensor[(100), bool], Tensor[(1188), float64], Tensor[(540), float32], Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(1800), float64], Tensor[(4, 6, 7), float32], Tensor[(192, 2), float64]) {
  @func_15292(%var_15294, %var_15295) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(11, 2, 13), float32], Tensor[(100), bool], Tensor[(1188), float64], Tensor[(540), float32], Tensor[(3, 11, 16), float64], Tensor[(1800), float64], Tensor[(572), uint16], Tensor[(1800), float64], Tensor[(4, 6, 7), float32], Tensor[(192, 2), float64]) */
}

def @func_14516(%var_14514: int16, %var_14515: Tensor[(18, 66), float64]) -> (Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(4, 7, 9), float32], Tensor[(32), bool], Tensor[(252), float32], Tensor[(11, 12, 9), bool], Tensor[(18, 66), float64]) {
  @func_14512(%var_14514, %var_14515) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(3, 11, 16), float64], Tensor[(16, 16, 16), float32], int16, Tensor[(4096), int16], Tensor[(4, 7, 9), float32], Tensor[(32), bool], Tensor[(252), float32], Tensor[(11, 12, 9), bool], Tensor[(18, 66), float64]) */
}

def @func_11540(%var_11538: Tensor[(3, 2, 12), float32]) -> (Tensor[(3, 2, 12), float32], Tensor[(78), float32], Tensor[(1800), float64]) {
  @func_11537(%var_11538) /* ty=(Tensor[(3, 2, 12), float32], Tensor[(78), float32], Tensor[(1800), float64]) */
}

def @func_18335() -> (Tensor[(3, 11, 16), float64],) {
  %1177 = @func_14377() /* ty=Tensor[(3, 11, 16), float64] */;
  (%1177,)
}

def @func_12788(%var_12787: Tensor[(40), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) {
  %1184 = fn (%var_12783: Tensor[(40), float32]) -> (Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) {
    %1178 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
    %1179 = cast(%var_12783, dtype="float32") /* ty=Tensor[(40), float32] */;
    %1180 = reshape(%1179, newshape=[4, 5, 2]) /* ty=Tensor[(4, 5, 2), float32] */;
    %1181 = @func_11671(%1180) /* ty=(Tensor[(4, 5, 2), float32],) */;
    %1182 = %1178.1;
    %1183 = %1181.0;
    (%1182, %1183, %var_12783)
  };
  %1184(%var_12787) /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */
}

def @func_15598() -> (Tensor[(9, 140), float32],) {
  %1185 = @func_14067() /* ty=Tensor[(9, 140), float32] */;
  (%1185,)
}

def @func_108(%var_51: Tensor[(14, 13, 7), float32]) -> (Tensor[(14, 13, 7), bool], Tensor[(14, 13, 7), float64]) {
  %1186 = cast(%var_51, dtype="float32") /* ty=Tensor[(14, 13, 7), float32] */;
  %1187 = exp(%1186) /* ty=Tensor[(14, 13, 7), float32] */;
  %1188 = cast(%var_51, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %1189 = shape_of(%1187, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1190 = cast(%1187, dtype="bool") /* ty=Tensor[(14, 13, 7), bool] */;
  %1191 = dyn.reshape(%1188, %1189, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1192 = cast(%1187, dtype="float64") /* ty=Tensor[(14, 13, 7), float64] */;
  %1193 = logical_and(%1190, %1191) /* ty=Tensor[(14, 13, 7), bool] */;
  %1194 = log10(%1192) /* ty=Tensor[(14, 13, 7), float64] */;
  (%1193, %1194)
}

def @func_13308() -> (Tensor[(168), float32],) {
  %1195 = @func_12792() /* ty=(Tensor[(168), float32],) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_16846(%var_16845: Tensor[(78), float32]) -> (Tensor[(5, 13, 12), float64], Tensor[(56), float64], Tensor[(78), float32]) {
  %1205 = fn (%var_16832: Tensor[(78), float32]) -> (Tensor[(5, 13, 12), float64], Tensor[(56), float64], Tensor[(78), float32]) {
    %1197 = @func_12278() /* ty=(Tensor[(5, 13, 12), bool], Tensor[(4, 5, 2), float32], Tensor[(40), float32]) */;
    %1198 = %1197.0;
    %1199 = cast(%1198, dtype="float64") /* ty=Tensor[(5, 13, 12), float64] */;
    %1200 = cast(%var_16832, dtype="float32") /* ty=Tensor[(78), float32] */;
    %1201 = reshape(%1200, newshape=[78]) /* ty=Tensor[(78), float32] */;
    %1202 = @func_15060(%1201) /* ty=(Tensor[(3, 11, 16), float64], Tensor[(528), float32], Tensor[(56), float64], Tensor[(78), float32]) */;
    %1203 = atanh(%1199) /* ty=Tensor[(5, 13, 12), float64] */;
    %1204 = %1202.2;
    (%1203, %1204, %var_16832)
  };
  %1205(%var_16845) /* ty=(Tensor[(5, 13, 12), float64], Tensor[(56), float64], Tensor[(78), float32]) */
}

def @func_3931(%var_3928: Tensor[(13, 4, 11), uint16], %var_3929: Tensor[(13, 4, 11), uint16], %var_3930: Tensor[(1800), float64]) -> (Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) {
  %1235 = fn (%var_3869: Tensor[(13, 4, 11), uint16], %var_3870: Tensor[(13, 4, 11), uint16], %var_3895: Tensor[(1800), float64]) -> (Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) {
    %1206 = cast(meta[relay.Constant][100] /* ty=Tensor[(1680), float32] */, dtype="float32") /* ty=Tensor[(1680), float32] */;
    %1207 = reshape(%1206, newshape=[7, 15, 16]) /* ty=Tensor[(7, 15, 16), float32] */;
    %1208 = cast(%var_3869, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
    %1209 = shape_of(%var_3870, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1210 = cast(%var_3870, dtype="float64") /* ty=Tensor[(13, 4, 11), float64] */;
    %1211 = dyn.reshape(%1208, %1209, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1212 = cast(meta[relay.Constant][101] /* ty=Tensor[(2, 72), int32] */, dtype="int32") /* ty=Tensor[(2, 72), int32] */;
    %1213 = cast(meta[relay.Constant][101] /* ty=Tensor[(2, 72), int32] */, dtype="int32") /* ty=Tensor[(2, 72), int32] */;
    %1214 = reshape(%1212, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
    %1215 = reshape(%1213, newshape=[3, 8, 6]) /* ty=Tensor[(3, 8, 6), int32] */;
    %1216 = @func_2264(%1214, %1215) /* ty=(Tensor[(3, 8, 6), int32], Tensor[(9, 1, 16), float32], Tensor[(78), float32], Tensor[(1188), float64]) */;
    %1217 = cast(%var_3895, dtype="float64") /* ty=Tensor[(1800), float64] */;
    %1218 = reshape(%1217, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
    %1219 = @func_1313(%1218) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
    %1220 = cast(%var_3870, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
    %1221 = shape_of(%var_3869, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1222 = cast(%var_3869, dtype="bool") /* ty=Tensor[(13, 4, 11), bool] */;
    %1223 = dyn.reshape(%1220, %1221, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1224 = greater_equal(%1222, %1223) /* ty=Tensor[(13, 4, 11), bool] */;
    %1225 = cast(%1224, dtype="float32") /* ty=Tensor[(13, 4, 11), float32] */;
    %1226 = %1219.0;
    %1227 = cast(%1226, dtype="float64") /* ty=Tensor[(15, 15, 8), float64] */;
    %1228 = reshape(%1227, newshape=[15, 15, 8]) /* ty=Tensor[(15, 15, 8), float64] */;
    %1229 = @func_1313(%1228) /* ty=(Tensor[(15, 15, 8), float64], Tensor[(13, 2, 3), float32], Tensor[(528), float32], Tensor[(78), float32]) */;
    %1230 = @func_3394(%1207) /* ty=Tensor[(7, 15, 16), float32] */;
    %1231 = mod(%1210, %1211) /* ty=Tensor[(13, 4, 11), float64] */;
    %1232 = %1216.1;
    %1233 = sigmoid(%1225) /* ty=Tensor[(13, 4, 11), float32] */;
    %1234 = %1229.3;
    (%1230, meta[relay.Constant][100] /* ty=Tensor[(1680), float32] */, %1231, %1232, meta[relay.Constant][101] /* ty=Tensor[(2, 72), int32] */, %1226, %var_3895, %1233, %1234)
  };
  %1235(%var_3928, %var_3929, %var_3930) /* ty=(Tensor[(7, 15, 16), float32], Tensor[(1680), float32], Tensor[(13, 4, 11), float64], Tensor[(9, 1, 16), float32], Tensor[(2, 72), int32], Tensor[(15, 15, 8), float64], Tensor[(1800), float64], Tensor[(13, 4, 11), float32], Tensor[(78), float32]) */
}

def @func_1006(%var_991: Tensor[(11, 4, 12), float32], %var_997: Tensor[(78), float32]) -> (Tensor[(11, 4, 12), float32], Tensor[(13, 2, 3), float32], Tensor[(78), float32]) {
  %1236 = cast(%var_991, dtype="float32") /* ty=Tensor[(11, 4, 12), float32] */;
  %1237 = cast(%var_997, dtype="float32") /* ty=Tensor[(78), float32] */;
  %1238 = reshape(%1237, newshape=[13, 2, 3]) /* ty=Tensor[(13, 2, 3), float32] */;
  %1239 = log(%1236) /* ty=Tensor[(11, 4, 12), float32] */;
  %1240 = @func_975(%1238) /* ty=Tensor[(13, 2, 3), float32] */;
  (%1239, %1240, %var_997)
}

def @func_11719(%var_11718: Tensor[(364), uint32]) -> (Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) {
  %1246 = fn (%var_11699: Tensor[(364), uint32]) -> (Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) {
    %1241 = @func_11449() /* ty=(Tensor[(4, 7, ?), uint32], Tensor[(3, 11, 16), float64], Tensor[(528), float64]) */;
    %1242 = cast(%var_11699, dtype="uint32") /* ty=Tensor[(364), uint32] */;
    %1243 = reshape(%1242, newshape=[4, 7, 13]) /* ty=Tensor[(4, 7, 13), uint32] */;
    %1244 = %1241.2;
    %1245 = @func_11631(%1243) /* ty=Tensor[(4, 7, 13), bool] */;
    (%1244, %1245, %var_11699)
  };
  %1246(%var_11718) /* ty=(Tensor[(528), float64], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */
}

def @func_14026(%var_14023: Tensor[(10, 9, 16), float32], %var_14024: Tensor[(10, 9, 16), float32], %var_14025: Tensor[(364), uint32]) -> (Tensor[(10, 9, 16), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) {
  @func_14021(%var_14023, %var_14024, %var_14025) /* ty=(Tensor[(10, 9, 16), float32], Tensor[(4, 7, 13), bool], Tensor[(364), uint32]) */
}

def @func_12384(%var_12382: Tensor[(7, 6, 4), bool], %var_12383: Tensor[(144), float32]) -> (Tensor[(7, 6, 4), bool], Tensor[(384), float64], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(12, 16, 2), float64]) {
  @func_12380(%var_12382, %var_12383) /* ty=(Tensor[(7, 6, 4), bool], Tensor[(384), float64], Tensor[(14, 13, 7), bool], Tensor[(144), float32], Tensor[(12, 16, 2), float64]) */
}

def @func_17928(%var_17871: Tensor[(1430), int16]) -> (Tensor[(3, 11, 16), float64], Tensor[(10, 11, 13), int16], Tensor[(1430), int16]) {
  %1247 = @func_14942() /* ty=(Tensor[(3, 11, 16), float64],) */;
  %1248 = cast(%var_17871, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %1249 = cast(%var_17871, dtype="int16") /* ty=Tensor[(1430), int16] */;
  %1250 = reshape(%1248, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %1251 = reshape(%1249, newshape=[10, 11, 13]) /* ty=Tensor[(10, 11, 13), int16] */;
  %1252 = @func_10917(%1250, %1251) /* ty=(Tensor[(10, 11, 13), int16],) */;
  %1253 = %1247.0;
  %1254 = %1252.0;
  (%1253, %1254, %var_17871)
}

def @func_13152() -> (Tensor[(144), float32], Tensor[(5, 13, 12), bool]) {
  %1259 = fn () -> (Tensor[(144), float32], Tensor[(5, 13, 12), bool]) {
    %1255 = @func_11811() /* ty=(Tensor[(3, 11, 16), float64], Tensor[(12, 2, 6), float32], Tensor[(144), float32], Tensor[(24, 16), float64], Tensor[(168), float32], Tensor[(384), float64]) */;
    %1256 = @func_11997() /* ty=(Tensor[(384), float64], Tensor[(5, 13, 12), bool], Tensor[(780), bool]) */;
    %1257 = %1255.2;
    %1258 = %1256.1;
    (%1257, %1258)
  };
  %1259() /* ty=(Tensor[(144), float32], Tensor[(5, 13, 12), bool]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen864/build/output.py:3044: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen864/build/output.py", line 3049, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(364) tvmgen_default_fused_asinh_cast_cosh_kernel0(float* __restrict__ T_cosh, double* __restrict__ placeholder) {
  T_cosh[(((int)threadIdx.x))] = coshf(((float)asinh(placeholder[(((int)threadIdx.x))])));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


==========mod==========
#[version = "0.0.5"]
def @func_2829(%var_2761: Tensor[(7, 1, 4), float64]) -> (Tensor[(7, 1, 4), float64], Tensor[(7, ?, 4), uint32], Tensor[(7, 1, 4), float32]) {
  %0 = cast(%var_2761, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
  %1 = cast(%var_2761, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
  %2 = erf(%1) /* ty=Tensor[(7, 1, 4), float64] */;
  %3 = cast(%2, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %4 = shape_of(%var_2761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%var_2761, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %7 = greater(%5, %6) /* ty=Tensor[(7, ?, 4), bool] */;
  %8 = cast(%7, dtype="bool") /* ty=Tensor[(7, ?, 4), bool] */;
  %9 = shape_of(%var_2761, dtype="int32") /* ty=Tensor[(3), int32] */;
  %10 = cast(%var_2761, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
  %11 = dyn.reshape(%8, %9, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %12 = equal(%10, %11) /* ty=Tensor[(7, ?, 4), bool] */;
  %13 = cast(%12, dtype="float32") /* ty=Tensor[(7, ?, 4), float32] */;
  %14 = acosh(%13) /* ty=Tensor[(7, ?, 4), float32] */;
  %15 = cast(%7, dtype="uint32") /* ty=Tensor[(7, ?, 4), uint32] */;
  %16 = shape_of(%14, dtype="int32") /* ty=Tensor[(3), int32] */;
  %17 = cast(%14, dtype="uint32") /* ty=Tensor[(7, ?, 4), uint32] */;
  %18 = dyn.reshape(%15, %16, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %19 = cast(%var_2761, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
  %20 = cos(%0) /* ty=Tensor[(7, 1, 4), float64] */;
  %21 = bitwise_or(%17, %18) /* ty=Tensor[(7, ?, 4), uint32] */;
  %22 = log10(%19) /* ty=Tensor[(7, 1, 4), float32] */;
  (%20, %21, %22)
}

def @func_10808(%var_10766: Tensor[(2100), uint8], %var_10794: Tensor[(336, 1), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(216), uint8], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16]) {
  %23 = cast(meta[relay.Constant][0] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %24 = cast(%var_10766, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %25 = reshape(%23, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %26 = reshape(%24, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint8] */;
  %27 = @func_7228(%25, %26) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) */;
  %28 = cast(%var_10794, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %29 = reshape(%28, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %30 = @func_2532(%29) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %31 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %32 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %33 = %27.2;
  %34 = %30.0;
  %35 = %31.1;
  (%32, %33, meta[relay.Constant][0] /* ty=Tensor[(216), uint8] */, %var_10766, %34, %var_10794, %35)
}

def @func_11839(%var_11834: uint8) -> (Tensor[(11, 13, 6), float64], Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(1, 192), int16], uint8) {
  %36 = @func_4966() /* ty=Tensor[(11, 13, 6), uint64] */;
  %37 = cast(%36, dtype="float64") /* ty=Tensor[(11, 13, 6), float64] */;
  %38 = @func_6401() /* ty=Tensor[(15, 2, 7), float32] */;
  %39 = cast(%38, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %41 = cast(meta[relay.Constant][2] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %42 = cast(meta[relay.Constant][3] /* ty=Tensor[(1, 192), int16] */, dtype="int16") /* ty=Tensor[(1, 192), int16] */;
  %43 = cast(%var_11834, dtype="uint8") /* ty=uint8 */;
  %44 = reshape(%39, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %45 = reshape(%40, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %46 = reshape(%41, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
  %47 = reshape(%42, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
  %48 = reshape(%43, newshape=[]) /* ty=uint8 */;
  %49 = @func_5065(%44, %45, %46, %47, %48) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
  %50 = cosh(%37) /* ty=Tensor[(11, 13, 6), float64] */;
  %51 = %49.3;
  (%50, %38, %51, meta[relay.Constant][1] /* ty=Tensor[(1050), int32] */, meta[relay.Constant][2] /* ty=Tensor[(336), float32] */, meta[relay.Constant][3] /* ty=Tensor[(1, 192), int16] */, %var_11834)
}

def @func_10951() -> (Tensor[(15, 2, 7), float32],) {
  %52 = @func_9352() /* ty=Tensor[(15, 2, 7), float32] */;
  (%52,)
}

def @func_4934() -> (Tensor[(15, 2, 7), int16], Tensor[(2100), uint8], Tensor[(2100), uint8]) {
  %53 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %54 = cast(meta[relay.Constant][4] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %55 = reshape(%54, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %56 = @func_4694(%55) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
  %57 = %53.1;
  %58 = %56.2;
  (%57, %58, meta[relay.Constant][4] /* ty=Tensor[(2100), uint8] */)
}

def @func_6187(%var_6174: uint8) -> (Tensor[(90), bool], Tensor[(15, 2, 7), bool], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(15, 2, 7), bool]) {
  %59 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
  %60 = cast(meta[relay.Constant][5] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %61 = cast(meta[relay.Constant][6] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %62 = cast(%var_6174, dtype="uint8") /* ty=uint8 */;
  %63 = cast(meta[relay.Constant][7] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %64 = reshape(%60, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %65 = reshape(%61, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %66 = reshape(%62, newshape=[]) /* ty=uint8 */;
  %67 = reshape(%63, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %68 = @func_3408(%64, %65, %66, %67) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %69 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %70 = %69.0;
  %71 = cast(%70, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %72 = cast(%var_6174, dtype="bool") /* ty=bool */;
  %73 = %59.7;
  %74 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  %75 = %68.1;
  %76 = greater(%71, %72) /* ty=Tensor[(15, 2, 7), bool] */;
  (%73, %74, %75, meta[relay.Constant][5] /* ty=Tensor[(336, 1), float32] */, meta[relay.Constant][6] /* ty=Tensor[(192), int16] */, meta[relay.Constant][7] /* ty=Tensor[(2100), uint8] */, %76)
}

def @func_2532(%var_2521: Tensor[(7, 4, 12), float32]) -> (Tensor[(7, 4, 12), bool],) {
  %77 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 1), float32] */;
  %78 = cast(%var_2521, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
  %79 = floor_divide(%77, %78) /* ty=Tensor[(7, 4, 12), float32] */;
  %80 = cast(%79, dtype="bool") /* ty=Tensor[(7, 4, 12), bool] */;
  %81 = shape_of(%var_2521, dtype="int32") /* ty=Tensor[(3), int32] */;
  %82 = cast(%var_2521, dtype="bool") /* ty=Tensor[(7, 4, 12), bool] */;
  %83 = dyn.reshape(%80, %81, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %84 = logical_or(%82, %83) /* ty=Tensor[(7, 4, 12), bool] */;
  (%84,)
}

def @func_2404(%var_2296: Tensor[(12, 6, 13), uint16], %var_2297: Tensor[(12, 6, 13), uint16], %var_2336: Tensor[(1050), int32], %var_2390: Tensor[(216), uint8], %var_2391: Tensor[(2100), uint8]) -> (Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) {
  %85 = cast(%var_2297, dtype="uint16") /* ty=Tensor[(12, 6, 13), uint16] */;
  %86 = shape_of(%var_2296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %87 = cast(%var_2296, dtype="uint16") /* ty=Tensor[(12, 6, 13), uint16] */;
  %88 = dyn.reshape(%85, %86, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %89 = cast(meta[relay.Constant][9] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %90 = reshape(%89, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %91 = @func_320(%90) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %92 = cast(meta[relay.Constant][10] /* ty=Tensor[(20, 72), float64] */, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %93 = cast(meta[relay.Constant][10] /* ty=Tensor[(20, 72), float64] */, dtype="bool") /* ty=Tensor[(20, 72), bool] */;
  %94 = reshape(%92, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %95 = reshape(%93, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %96 = @func_943(%94, %95) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %97 = cast(%var_2336, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %98 = cast(%var_2336, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %99 = reshape(%97, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %100 = reshape(%98, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %101 = cast(meta[relay.Constant][11] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %102 = reshape(%101, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
  %103 = @func_1196(%102) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) */;
  %104 = %96.2;
  %105 = cast(%104, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %106 = reshape(%105, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %107 = @func_320(%106) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %108 = cast(%var_2296, dtype="float32") /* ty=Tensor[(12, 6, 13), float32] */;
  %109 = sin(%108) /* ty=Tensor[(12, 6, 13), float32] */;
  %110 = cast(%109, dtype="float64") /* ty=Tensor[(12, 6, 13), float64] */;
  %111 = acos(%110) /* ty=Tensor[(12, 6, 13), float64] */;
  %112 = cast(%111, dtype="float64") /* ty=Tensor[(12, 6, 13), float64] */;
  %113 = rsqrt(%112) /* ty=Tensor[(12, 6, 13), float64] */;
  %114 = cast(%var_2297, dtype="uint8") /* ty=Tensor[(12, 6, 13), uint8] */;
  %115 = shape_of(%113, dtype="int32") /* ty=Tensor[(3), int32] */;
  %116 = cast(%113, dtype="uint8") /* ty=Tensor[(12, 6, 13), uint8] */;
  %117 = dyn.reshape(%114, %115, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %118 = cast(%var_2390, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %119 = cast(%var_2390, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %120 = cast(%var_2391, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %121 = reshape(%118, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %122 = reshape(%119, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %123 = reshape(%120, newshape=[1, 2100]) /* ty=Tensor[(1, 2100), uint8] */;
  %124 = @func_1773(%121, %122, %123) /* ty=(Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) */;
  %125 = cast(meta[relay.Constant][10] /* ty=Tensor[(20, 72), float64] */, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %126 = cast(meta[relay.Constant][10] /* ty=Tensor[(20, 72), float64] */, dtype="bool") /* ty=Tensor[(20, 72), bool] */;
  %127 = reshape(%125, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %128 = reshape(%126, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %129 = @func_943(%127, %128) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %130 = left_shift(%87, %88) /* ty=Tensor[(12, 6, 13), uint16] */;
  %131 = %91.0;
  %132 = @func_2159(%99, %100) /* ty=Tensor[(7, 15, 10), int32] */;
  %133 = %103.0;
  %134 = %107.0;
  %135 = bitwise_or(%116, %117) /* ty=Tensor[(12, 6, 13), uint8] */;
  %136 = %124.0;
  %137 = %129.3;
  (%130, %131, meta[relay.Constant][9] /* ty=Tensor[(858), uint64] */, %104, meta[relay.Constant][10] /* ty=Tensor[(20, 72), float64] */, %132, %var_2336, %133, meta[relay.Constant][11] /* ty=Tensor[(1400), float64] */, %134, %135, %136, %var_2390, %var_2391, %137)
}

def @func_5095() -> Tensor[(11, 13, 6), uint64] {
  %138 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %138.2
}

def @func_3618(%var_3601: Tensor[(8, 24), int16], %var_3602: uint8, %var_3609: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(336), float32], Tensor[(336), float32], uint8, Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(8, 24), float32]) {
  %139 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %140 = cast(meta[relay.Constant][12] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %141 = cast(%var_3601, dtype="int16") /* ty=Tensor[(8, 24), int16] */;
  %142 = cast(%var_3602, dtype="uint8") /* ty=uint8 */;
  %143 = reshape(%140, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %144 = reshape(%141, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %145 = reshape(%142, newshape=[]) /* ty=uint8 */;
  %146 = @func_3551(%143, %144, %145) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) */;
  %147 = %146.2;
  %148 = cast(%147, dtype="float32") /* ty=Tensor[(336), float32] */;
  %149 = cast(%var_3601, dtype="int16") /* ty=Tensor[(8, 24), int16] */;
  %150 = cast(%var_3602, dtype="uint8") /* ty=uint8 */;
  %151 = cast(%var_3609, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %152 = reshape(%148, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %153 = reshape(%149, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %154 = reshape(%150, newshape=[]) /* ty=uint8 */;
  %155 = reshape(%151, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %156 = @func_3408(%152, %153, %154, %155) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %157 = cast(%var_3601, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %158 = atanh(%157) /* ty=Tensor[(8, 24), float32] */;
  %159 = cast(%158, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %160 = %139.0;
  %161 = %156.4;
  %162 = log(%159) /* ty=Tensor[(8, 24), float32] */;
  (%160, %147, meta[relay.Constant][12] /* ty=Tensor[(336), float32] */, %var_3602, %161, %var_3609, %162)
}

def @func_5065(%var_5013: Tensor[(15, 2, 7), float32], %var_5027: Tensor[(1050), int32], %var_5044: Tensor[(168, 2), float32], %var_5045: Tensor[(192, 1), int16], %var_5046: uint8) -> (Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) {
  %163 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %164 = cast(%var_5013, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %165 = shape_of(%163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(%163, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %168 = cast(%var_5027, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %169 = cast(%var_5027, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %170 = reshape(%168, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %171 = reshape(%169, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %172 = @func_3977() /* ty=Tensor[(15, 2, 7), float32] */;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %174 = cast(%var_5044, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %175 = cast(%var_5045, dtype="int16") /* ty=Tensor[(192, 1), int16] */;
  %176 = cast(%var_5046, dtype="uint8") /* ty=uint8 */;
  %177 = reshape(%174, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %178 = reshape(%175, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %179 = reshape(%176, newshape=[]) /* ty=uint8 */;
  %180 = @func_3551(%177, %178, %179) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) */;
  %181 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %182 = cast(%181, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %183 = reshape(%182, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %184 = power(%166, %167) /* ty=Tensor[(15, 2, 7), float64] */;
  %185 = @func_2159(%170, %171) /* ty=Tensor[(7, 15, 10), int32] */;
  %186 = log2(%173) /* ty=Tensor[(15, 2, 7), float64] */;
  %187 = %180.5;
  %188 = @func_3933(%183) /* ty=Tensor[(15, 2, 7), int16] */;
  (%184, %181, %185, %var_5027, %186, %187, %var_5044, %var_5045, %var_5046, %188)
}

def @func_5249() -> (Tensor[(15, 2, 7), float32],) {
  %189 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
  (%189,)
}

def @func_4127(%var_4110: Tensor[(15, 2, 7), float32]) -> Tensor[(15, 2, 7), float64] {
  %190 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %191 = cast(%var_4110, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %192 = shape_of(%190, dtype="int32") /* ty=Tensor[(3), int32] */;
  %193 = cast(%190, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %194 = dyn.reshape(%191, %192, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%193, %194) /* ty=Tensor[(15, 2, 7), float64] */
}

def @func_7541() -> (Tensor[(15, 2, 7), bool],) {
  %195 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
  %196 = cast(meta[relay.Constant][13] /* ty=Tensor[(15, 2, 7), int16] */, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%195, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %200 = greater_equal(%198, %199) /* ty=Tensor[(15, 2, 7), bool] */;
  (%200,)
}

def @func_5979(%var_5911: Tensor[(858), uint64], %var_5949: Tensor[(858), float64]) -> (Tensor[(15, 2, 7), int16], Tensor[(7, 4, 12), bool], Tensor[(336), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(858), uint64], Tensor[(858), float32]) {
  %201 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %202 = cast(meta[relay.Constant][14] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %203 = reshape(%202, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %204 = @func_2532(%203) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %205 = cast(%var_5911, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %206 = reshape(%205, newshape=[1, 858]) /* ty=Tensor[(1, 858), uint64] */;
  %207 = @func_4809(%206) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(1, 858), uint64]) */;
  %208 = cast(%var_5911, dtype="float64") /* ty=Tensor[(858), float64] */;
  %209 = log2(%208) /* ty=Tensor[(858), float64] */;
  %210 = cast(%var_5949, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(1), int32] */;
  %212 = cast(%209, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %214 = bitwise_xor(%212, %213) /* ty=Tensor[(858), uint64] */;
  %215 = cast(%214, dtype="bool") /* ty=Tensor[(858), bool] */;
  %216 = shape_of(%209, dtype="int32") /* ty=Tensor[(1), int32] */;
  %217 = cast(%209, dtype="bool") /* ty=Tensor[(858), bool] */;
  %218 = dyn.reshape(%215, %216, newshape=[]) /* ty=Tensor[(?), bool] */;
  %219 = logical_or(%217, %218) /* ty=Tensor[(858), bool] */;
  %220 = cast(%219, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %221 = reshape(%220, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %222 = @func_4646(%221) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %223 = cast(%209, dtype="float32") /* ty=Tensor[(858), float32] */;
  %224 = %201.0;
  %225 = %204.0;
  %226 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
  %227 = %207.1;
  %228 = %222.2;
  %229 = atanh(%223) /* ty=Tensor[(858), float32] */;
  (%224, %225, meta[relay.Constant][14] /* ty=Tensor[(336), float32] */, %226, %227, %219, %228, %229)
}

def @func_8990() -> (Tensor[(15, 2, 7), bool],) {
  %230 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  (%230,)
}

def @func_8387() -> Tensor[(15, 2, 7), float32] {
  @func_6805() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_6111(%var_6042: Tensor[(15, 8, 2), float64], %var_6076: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(15, 8, 2), float32], Tensor[(15, 10, 14), uint8]) {
  %231 = cast(meta[relay.Constant][15] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %232 = cast(%var_6076, dtype="int16") /* ty=Tensor[(192), int16] */;
  %233 = cast(meta[relay.Constant][16] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %234 = cast(meta[relay.Constant][17] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %235 = reshape(%231, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %236 = reshape(%232, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %237 = reshape(%233, newshape=[]) /* ty=uint8 */;
  %238 = reshape(%234, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %239 = @func_3408(%235, %236, %237, %238) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %240 = cast(%var_6042, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %241 = sigmoid(%240) /* ty=Tensor[(15, 8, 2), float64] */;
  %242 = cast(%241, dtype="float32") /* ty=Tensor[(15, 8, 2), float32] */;
  %243 = cast(meta[relay.Constant][16] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %244 = reshape(%243, newshape=[]) /* ty=uint8 */;
  %245 = @func_4879(%244) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(15, 10, 14), uint8], Tensor[(1050), int32]) */;
  %246 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
  %247 = %239.5;
  %248 = acos(%242) /* ty=Tensor[(15, 8, 2), float32] */;
  %249 = %245.4;
  (%246, %247, meta[relay.Constant][15] /* ty=Tensor[(336), float32] */, %var_6076, meta[relay.Constant][16] /* ty=uint8 */, meta[relay.Constant][17] /* ty=Tensor[(2100), uint8] */, %248, %249)
}

def @func_12015() -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) {
  %250 = @func_9229() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %251 = @func_4966() /* ty=Tensor[(11, 13, 6), uint64] */;
  %252 = %250.0;
  (%251, %252)
}

def @func_4195() -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %253 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %254 = cast(%253, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %255 = reshape(%254, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %256 = cast(meta[relay.Constant][18] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %257 = reshape(%256, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %258 = @func_320(%257) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %259 = @func_3933(%255) /* ty=Tensor[(15, 2, 7), int16] */;
  %260 = %258.0;
  (%253, %259, %260, meta[relay.Constant][18] /* ty=Tensor[(858), uint64] */)
}

def @func_4879(%var_4870: uint8) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(15, 10, 14), uint8], Tensor[(1050), int32]) {
  %261 = cast(%var_4870, dtype="uint8") /* ty=uint8 */;
  %262 = cast(meta[relay.Constant][19] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %263 = reshape(%261, newshape=[]) /* ty=uint8 */;
  %264 = reshape(%262, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %265 = @func_1596(%263, %264) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %266 = cast(meta[relay.Constant][19] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %267 = cast(meta[relay.Constant][20] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %268 = reshape(%266, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %269 = reshape(%267, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %270 = @func_4062(%268, %269) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
  %271 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %272 = %265.0;
  %273 = %270.1;
  (%271, %272, %var_4870, meta[relay.Constant][19] /* ty=Tensor[(2100), uint8] */, %273, meta[relay.Constant][20] /* ty=Tensor[(1050), int32] */)
}

def @func_8720(%var_8683: Tensor[(2100), uint8], %var_8691: Tensor[(112), uint64], %var_8701: Tensor[(858), uint64], %var_8704: Tensor[(858), uint64]) -> (Tensor[(15, 2, 7), int16], Tensor[(216), uint8], Tensor[(2100), uint8], int16, Tensor[(112), uint64], Tensor[(1456), uint64], Tensor[(336), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(216, 1), float64]) {
  %274 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %275 = cast(meta[relay.Constant][21] /* ty=Tensor[(216, 1), uint8] */, dtype="uint8") /* ty=Tensor[(216, 1), uint8] */;
  %276 = cast(%var_8683, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %277 = reshape(%275, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %278 = reshape(%276, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint8] */;
  %279 = @func_7228(%277, %278) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) */;
  %280 = cast(%var_8691, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %281 = cast(meta[relay.Constant][22] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %282 = cast(meta[relay.Constant][23] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %283 = reshape(%280, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), uint64] */;
  %284 = reshape(%281, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), uint64] */;
  %285 = reshape(%282, newshape=[336]) /* ty=Tensor[(336), int16] */;
  %286 = @func_8487(%283, %284, %285) /* ty=(Tensor[(16, 7, 13), uint64], Tensor[(8, 7, 6), int16], int16, Tensor[(16, 7, 336), float64]) */;
  %287 = cast(%var_8701, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %288 = reshape(%287, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %289 = @func_320(%288) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %290 = cast(%var_8704, dtype="bool") /* ty=Tensor[(858), bool] */;
  %291 = shape_of(%var_8701, dtype="int32") /* ty=Tensor[(1), int32] */;
  %292 = cast(%var_8701, dtype="bool") /* ty=Tensor[(858), bool] */;
  %293 = dyn.reshape(%290, %291, newshape=[]) /* ty=Tensor[(?), bool] */;
  %294 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %295 = @func_7802() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(192), int16], Tensor[(15, 2, 7), bool]) */;
  %296 = cast(meta[relay.Constant][21] /* ty=Tensor[(216, 1), uint8] */, dtype="float64") /* ty=Tensor[(216, 1), float64] */;
  %297 = %274.0;
  %298 = %279.2;
  %299 = %286.2;
  %300 = %289.0;
  %301 = equal(%292, %293) /* ty=Tensor[(858), bool] */;
  %302 = %294.0;
  %303 = %295.0;
  %304 = erf(%296) /* ty=Tensor[(216, 1), float64] */;
  (%297, %298, %var_8683, %299, %var_8691, meta[relay.Constant][22] /* ty=Tensor[(1456), uint64] */, meta[relay.Constant][23] /* ty=Tensor[(336), int16] */, %300, %301, %302, %303, %304)
}

def @func_7129(%var_7122: Tensor[(8, 16, 7), float32], %var_7123: Tensor[(8, 16, 7), float32]) -> (Tensor[(8, 16, 7), float32],) {
  %305 = cast(%var_7123, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %306 = shape_of(%var_7122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%var_7122, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %309 = floor_mod(%307, %308) /* ty=Tensor[(8, 16, 7), float32] */;
  (%309,)
}

def @func_3950() -> Tensor[(15, 2, 7), float32] {
  %310 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %310.0
}

def @func_9229() -> (Tensor[(15, 2, 7), float32],) {
  %311 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %312 = %311.0;
  %313 = cast(%312, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %314 = tan(%313) /* ty=Tensor[(15, 2, 7), float32] */;
  (%314,)
}

def @func_5713(%var_5700: Tensor[(336), float32]) -> (Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(7, 4, 12), bool], Tensor[(336), float32]) {
  %315 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %316 = cast(meta[relay.Constant][24] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %317 = cast(meta[relay.Constant][25] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %318 = reshape(%316, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %319 = reshape(%317, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %320 = @func_4062(%318, %319) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
  %321 = cast(%var_5700, dtype="float32") /* ty=Tensor[(336), float32] */;
  %322 = reshape(%321, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %323 = @func_2532(%322) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %324 = %315.0;
  %325 = %320.5;
  %326 = %323.0;
  (%324, %325, meta[relay.Constant][24] /* ty=Tensor[(2100), uint8] */, meta[relay.Constant][25] /* ty=Tensor[(1050), int32] */, %326, %var_5700)
}

def @func_1960(%var_1937: Tensor[(9, 2, 5), bool], %var_1938: Tensor[(9, 2, 5), bool]) -> (Tensor[(9, 2, 5), bool],) {
  %327 = cast(%var_1938, dtype="bool") /* ty=Tensor[(9, 2, 5), bool] */;
  %328 = shape_of(%var_1937, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%var_1937, dtype="bool") /* ty=Tensor[(9, 2, 5), bool] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %331 = logical_and(%329, %330) /* ty=Tensor[(9, 2, 5), bool] */;
  (%331,)
}

def @func_943(%var_895: Tensor[(12, 8, 15), float64], %var_913: Tensor[(12, 8, 15), bool]) -> (Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %332 = cast(%var_895, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %333 = log2(%332) /* ty=Tensor[(12, 8, 15), float64] */;
  %334 = cast(%var_895, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %335 = shape_of(%333, dtype="int32") /* ty=Tensor[(3), int32] */;
  %336 = cast(%333, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %337 = dyn.reshape(%334, %335, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %338 = less_equal(%336, %337) /* ty=Tensor[(12, 8, 15), bool] */;
  %339 = cast(%var_913, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %340 = shape_of(%338, dtype="int32") /* ty=Tensor[(3), int32] */;
  %341 = cast(%338, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %342 = dyn.reshape(%339, %340, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %343 = cast(%var_895, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %344 = cast(meta[relay.Constant][26] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %345 = reshape(%344, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %346 = @func_320(%345) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %347 = floor_mod(%341, %342) /* ty=Tensor[(12, 8, 15), float64] */;
  %348 = exp(%343) /* ty=Tensor[(12, 8, 15), float64] */;
  %349 = %346.0;
  (%347, %348, %349, meta[relay.Constant][26] /* ty=Tensor[(858), uint64] */)
}

def @func_7094(%var_7086: Tensor[(336), float32]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], uint8, Tensor[(336), float32], uint8) {
  %350 = @func_5826() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %351 = cast(%var_7086, dtype="float32") /* ty=Tensor[(336), float32] */;
  %352 = cast(meta[relay.Constant][27] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %353 = reshape(%351, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %354 = reshape(%352, newshape=[]) /* ty=uint8 */;
  %355 = @func_5652(%353, %354) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
  %356 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  %357 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
  %358 = %350.0;
  %359 = %355.5;
  (%356, %357, %358, %359, %var_7086, meta[relay.Constant][27] /* ty=uint8 */)
}

def @func_5420(%var_5390: Tensor[(192), int16], %var_5405: Tensor[(936), uint16], %var_5406: Tensor[(1, 1050), int32], %var_5407: Tensor[(216), uint8]) -> (Tensor[(15, 2, 7), int16], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(936), uint16], Tensor[(1, 1050), int32], Tensor[(216), uint8]) {
  %360 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %361 = cast(%var_5390, dtype="int16") /* ty=Tensor[(192), int16] */;
  %362 = cast(meta[relay.Constant][28] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %363 = cast(meta[relay.Constant][29] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %364 = reshape(%361, newshape=[8, 24]) /* ty=Tensor[(8, 24), int16] */;
  %365 = reshape(%362, newshape=[]) /* ty=uint8 */;
  %366 = reshape(%363, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %367 = @func_3618(%364, %365, %366) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(336), float32], Tensor[(336), float32], uint8, Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(8, 24), float32]) */;
  %368 = cast(%var_5405, dtype="uint16") /* ty=Tensor[(936), uint16] */;
  %369 = cast(%var_5405, dtype="uint16") /* ty=Tensor[(936), uint16] */;
  %370 = cast(%var_5406, dtype="int32") /* ty=Tensor[(1, 1050), int32] */;
  %371 = cast(%var_5407, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %372 = cast(meta[relay.Constant][29] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %373 = reshape(%368, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
  %374 = reshape(%369, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
  %375 = reshape(%370, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %376 = reshape(%371, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %377 = reshape(%372, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %378 = @func_2404(%373, %374, %375, %376, %377) /* ty=(Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) */;
  %379 = %360.1;
  %380 = %367.2;
  %381 = %378.3;
  (%379, %380, %var_5390, meta[relay.Constant][28] /* ty=uint8 */, meta[relay.Constant][29] /* ty=Tensor[(2100), uint8] */, %381, %var_5405, %var_5406, %var_5407)
}

def @func_7319(%var_7301: Tensor[(1050), int32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float32]) {
  %382 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %383 = cast(%var_7301, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %384 = cast(%var_7301, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %385 = reshape(%383, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %386 = reshape(%384, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %387 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %388 = %382.0;
  %389 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %390 = @func_2159(%385, %386) /* ty=Tensor[(7, 15, 10), int32] */;
  %391 = %387.0;
  (%388, %389, %390, %var_7301, %391)
}

def @func_7854() -> Tensor[(15, 2, 7), float32] {
  @func_6442() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_11497() -> (Tensor[(15, 2, 7), int16],) {
  %392 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %393 = %392.0;
  (%393,)
}

def @func_5452(%var_5445: Tensor[(5, 8, 4), int64]) -> (Tensor[(5, 8, 4), int64],) {
  %394 = cast(meta[relay.Constant][30] /* ty=Tensor[(5, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
  %395 = shape_of(%var_5445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %396 = cast(%var_5445, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
  %397 = dyn.reshape(%394, %395, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %398 = bitwise_xor(%396, %397) /* ty=Tensor[(5, 8, 4), int64] */;
  (%398,)
}

def @func_5380(%var_5372: Tensor[(2100), uint8]) -> (int16, Tensor[(15, 10, 14), uint8], Tensor[(2100), uint8]) {
  %399 = @func_4991() /* ty=(Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
  %400 = %399.2;
  %401 = cast(%400, dtype="uint8") /* ty=uint8 */;
  %402 = cast(%var_5372, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %403 = reshape(%401, newshape=[]) /* ty=uint8 */;
  %404 = reshape(%402, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %405 = @func_1596(%403, %404) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %406 = %405.0;
  (%400, %406, %var_5372)
}

def @func_2159(%var_2147: Tensor[(7, 15, 10), int32], %var_2148: Tensor[(7, 15, 10), int32]) -> Tensor[(7, 15, 10), int32] {
  %407 = cast(%var_2148, dtype="int32") /* ty=Tensor[(7, 15, 10), int32] */;
  %408 = shape_of(%var_2147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %409 = cast(%var_2147, dtype="int32") /* ty=Tensor[(7, 15, 10), int32] */;
  %410 = dyn.reshape(%407, %408, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_or(%409, %410) /* ty=Tensor[(7, 15, 10), int32] */
}

def @func_6418() -> (Tensor[(15, 2, 7), float32],) {
  %411 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  (%411,)
}

def @func_9595(%var_9589: Tensor[(11, 2, 12), float64]) -> (Tensor[(11, 2, 12), float64],) {
  %412 = cast(%var_9589, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
  %413 = atan(%412) /* ty=Tensor[(11, 2, 12), float64] */;
  (%413,)
}

def @func_6024() -> (Tensor[(15, 2, 7), float32],) {
  %414 = @func_3977() /* ty=Tensor[(15, 2, 7), float32] */;
  (%414,)
}

def @func_7203() -> Tensor[(15, 2, 7), float32] {
  @func_6442() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_9493() -> Tensor[(15, 2, 7), float32] {
  @func_9352() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_10054() -> (Tensor[(15, 2, 7), bool],) {
  %415 = @func_7541() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %416 = %415.0;
  (%416,)
}

def @func_10960() -> Tensor[(9, 2, 5), bool] {
  %417 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
  %417.6
}

def @func_8131() -> Tensor[(15, 2, 7), int16] {
  %418 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %418.0
}

def @func_4727() -> (Tensor[(15, 2, 7), int16],) {
  %419 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %420 = %419.0;
  (%420,)
}

def @func_10385() -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float64], Tensor[(210), float32]) {
  %421 = cast(meta[relay.Constant][31] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
  %422 = reshape(%421, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %423 = @func_5095() /* ty=Tensor[(11, 13, 6), uint64] */;
  %424 = @func_4127(%422) /* ty=Tensor[(15, 2, 7), float64] */;
  (%423, %424, meta[relay.Constant][31] /* ty=Tensor[(210), float32] */)
}

def @func_11593() -> Tensor[(15, 2, 7), float32] {
  @func_7509() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_4399() -> (Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) {
  %425 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
  %426 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 78), uint64] */, dtype="uint64") /* ty=Tensor[(11, 78), uint64] */;
  %427 = reshape(%426, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %428 = @func_320(%427) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %429 = cast(meta[relay.Constant][33] /* ty=Tensor[(11, 78), uint64] */, dtype="int8") /* ty=Tensor[(11, 78), int8] */;
  %430 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(11, 78), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %431 = cast(meta[relay.Constant][32] /* ty=Tensor[(11, 78), uint64] */, dtype="int8") /* ty=Tensor[(11, 78), int8] */;
  %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %433 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %434 = cast(meta[relay.Constant][34] /* ty=Tensor[(15, 2, 7), float32] */, dtype="int32") /* ty=Tensor[(15, 2, 7), int32] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="int32") /* ty=Tensor[(15, 2, 7), int32] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %438 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %439 = cast(meta[relay.Constant][35] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %440 = cast(meta[relay.Constant][35] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
  %441 = reshape(%439, newshape=[9, 2, 5]) /* ty=Tensor[(9, 2, 5), bool] */;
  %442 = reshape(%440, newshape=[9, 2, 5]) /* ty=Tensor[(9, 2, 5), bool] */;
  %443 = @func_1960(%441, %442) /* ty=(Tensor[(9, 2, 5), bool],) */;
  %444 = %425.2;
  %445 = %428.0;
  %446 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
  %447 = bitwise_xor(%431, %432) /* ty=Tensor[(11, 78), int8] */;
  %448 = left_shift(%436, %437) /* ty=Tensor[(15, 2, 7), int32] */;
  %449 = %438.0;
  %450 = %443.0;
  (%444, %445, %446, %447, %448, %449, %450, meta[relay.Constant][35] /* ty=Tensor[(90), bool] */)
}

def @func_9144() -> (Tensor[(15, 2, 7), bool], Tensor[(11, 13, 6), uint64]) {
  %451 = @func_8990() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %452 = @func_8664() /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) */;
  %453 = %451.0;
  %454 = %452.0;
  (%453, %454)
}

def @func_4506(%var_4487: Tensor[(15, 2, 7), float32]) -> (Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) {
  %455 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %456 = cast(%455, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %457 = cast(meta[relay.Constant][36] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %458 = cast(meta[relay.Constant][36] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %459 = reshape(%457, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %460 = reshape(%458, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %461 = @func_686(%459, %460) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %462 = cast(%var_4487, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
  %463 = shape_of(%455, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%455, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %466 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %467 = acosh(%456) /* ty=Tensor[(15, 2, 7), float64] */;
  %468 = %461.1;
  %469 = subtract(%464, %465) /* ty=Tensor[(15, 2, 7), uint8] */;
  %470 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
  %471 = %466.0;
  (%467, %468, meta[relay.Constant][36] /* ty=Tensor[(192), int16] */, %469, %470, %471)
}

def @func_11962() -> (Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) {
  %472 = @func_11271() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(192), int16], Tensor[(858), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), int16], Tensor[(1, 2100), uint8], Tensor[(4, 28), uint64], Tensor[(15, 2, 7), float32]) */;
  %473 = @func_10661() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) */;
  %474 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
  %475 = @func_11748() /* ty=Tensor[(9, 2, 5), bool] */;
  %476 = %472.7;
  %477 = %473.0;
  (%474, %475, %476, %477)
}

def @func_4085(%var_4074: Tensor[(15, 2, 7), float32]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float64]) {
  %478 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %479 = %478.0;
  %480 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 2, 7), float32] */, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %481 = shape_of(%479, dtype="int32") /* ty=Tensor[(3), int32] */;
  %482 = cast(%479, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %483 = dyn.reshape(%480, %481, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %484 = cast(%var_4074, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
  %485 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(15, 2, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %486 = cast(meta[relay.Constant][37] /* ty=Tensor[(15, 2, 7), float32] */, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
  %487 = dyn.reshape(%484, %485, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %488 = cast(%var_4074, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %489 = logical_and(%482, %483) /* ty=Tensor[(15, 2, 7), bool] */;
  %490 = bitwise_xor(%486, %487) /* ty=Tensor[(15, 2, 7), uint8] */;
  %491 = atanh(%488) /* ty=Tensor[(15, 2, 7), float64] */;
  (%489, %490, %491)
}

def @func_1196(%var_1121: Tensor[(10, 14, 10), float64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) {
  %492 = cast(meta[relay.Constant][38] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %493 = reshape(%492, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %494 = @func_320(%493) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %495 = cast(%var_1121, dtype="float64") /* ty=Tensor[(10, 14, 10), float64] */;
  %496 = asin(%495) /* ty=Tensor[(10, 14, 10), float64] */;
  %497 = cast(%496, dtype="float64") /* ty=Tensor[(10, 14, 10), float64] */;
  %498 = log(%497) /* ty=Tensor[(10, 14, 10), float64] */;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(10, 14, 10), float64] */;
  %500 = %494.0;
  %501 = cast(%500, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %502 = reshape(%501, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %503 = @func_320(%502) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %504 = acosh(%499) /* ty=Tensor[(10, 14, 10), float64] */;
  %505 = %503.0;
  (%500, meta[relay.Constant][38] /* ty=Tensor[(858), uint64] */, %504, %505)
}

def @func_3691(%var_3666: Tensor[(15, 2, 7), float32], %var_3674: uint8, %var_3682: Tensor[(336), float32], %var_3683: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(192), int16], Tensor[(7, 4, 12), float64]) {
  %506 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %507 = %506.0;
  %508 = cast(%var_3666, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %510 = cast(%507, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %512 = cast(%var_3674, dtype="uint8") /* ty=uint8 */;
  %513 = cast(meta[relay.Constant][39] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %514 = reshape(%512, newshape=[]) /* ty=uint8 */;
  %515 = reshape(%513, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %516 = @func_1596(%514, %515) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %517 = cast(%var_3682, dtype="float32") /* ty=Tensor[(336), float32] */;
  %518 = cast(%var_3683, dtype="int16") /* ty=Tensor[(192), int16] */;
  %519 = cast(%var_3674, dtype="uint8") /* ty=uint8 */;
  %520 = %516.0;
  %521 = cast(%520, dtype="uint8") /* ty=Tensor[(15, 10, 14), uint8] */;
  %522 = reshape(%517, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %523 = reshape(%518, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %524 = reshape(%519, newshape=[]) /* ty=uint8 */;
  %525 = reshape(%521, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %526 = @func_3408(%522, %523, %524, %525) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %527 = %526.1;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %529 = less_equal(%510, %511) /* ty=Tensor[(15, 2, 7), bool] */;
  %530 = acos(%528) /* ty=Tensor[(7, 4, 12), float64] */;
  (%529, %520, %var_3674, meta[relay.Constant][39] /* ty=Tensor[(2100), uint8] */, %var_3682, %var_3683, %530)
}

def @func_7670() -> Tensor[(15, 2, 7), float32] {
  %531 = @func_6418() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %531.0
}

def @func_9877() -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) {
  %532 = @func_7813() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %533 = %532.0;
  %534 = @func_7003() /* ty=Tensor[(15, 2, 7), float64] */;
  (%533, %534)
}

def @func_10281() -> Tensor[(15, 2, 7), int16] {
  %535 = @func_9397() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %535.0
}

def @func_11111() -> Tensor[(15, 2, 7), float32] {
  %536 = @func_9477() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 2, 2), bool], Tensor[(32), float64]) */;
  %536.0
}

def @func_8817(%var_8798: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), float64], Tensor[(2100), uint8]) {
  %537 = cast(%var_8798, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %538 = reshape(%537, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %539 = @func_4694(%538) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
  %540 = cast(%var_8798, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %541 = cast(%var_8798, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %542 = reshape(%541, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %543 = @func_4694(%542) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
  %544 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %545 = %539.1;
  %546 = atan(%540) /* ty=Tensor[(2100), float64] */;
  %547 = %543.2;
  (%544, %545, %546, %547)
}

def @func_4966() -> Tensor[(11, 13, 6), uint64] {
  %548 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %548.2
}

def @func_1773(%var_1748: Tensor[(8, 9, 3), uint8], %var_1749: Tensor[(8, 9, 3), uint8], %var_1768: Tensor[(1, 2100), uint8]) -> (Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) {
  %549 = cast(%var_1749, dtype="bool") /* ty=Tensor[(8, 9, 3), bool] */;
  %550 = shape_of(%var_1748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_1748, dtype="bool") /* ty=Tensor[(8, 9, 3), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = cast(meta[relay.Constant][40] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %554 = cast(%var_1768, dtype="uint8") /* ty=Tensor[(1, 2100), uint8] */;
  %555 = reshape(%553, newshape=[]) /* ty=uint8 */;
  %556 = reshape(%554, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %557 = @func_1596(%555, %556) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %558 = not_equal(%551, %552) /* ty=Tensor[(8, 9, 3), bool] */;
  %559 = %557.0;
  (%558, %559, meta[relay.Constant][40] /* ty=uint8 */, %var_1768)
}

def @func_5652(%var_5648: Tensor[(336), float32], %var_5650: uint8) -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) {
  %560 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %561 = %560.0;
  %562 = cast(%561, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %563 = cast(meta[relay.Constant][41] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %564 = cast(%var_5648, dtype="float32") /* ty=Tensor[(336), float32] */;
  %565 = cast(meta[relay.Constant][42] /* ty=Tensor[(24, 8), int16] */, dtype="int16") /* ty=Tensor[(24, 8), int16] */;
  %566 = cast(%var_5650, dtype="uint8") /* ty=uint8 */;
  %567 = reshape(%562, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %568 = reshape(%563, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %569 = reshape(%564, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
  %570 = reshape(%565, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
  %571 = reshape(%566, newshape=[]) /* ty=uint8 */;
  %572 = @func_5065(%567, %568, %569, %570, %571) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
  %573 = %572.4;
  (%561, %573, meta[relay.Constant][41] /* ty=Tensor[(1050), int32] */, %var_5648, meta[relay.Constant][42] /* ty=Tensor[(24, 8), int16] */, %var_5650)
}

def @func_7228(%var_7222: Tensor[(216), uint8], %var_7223: Tensor[(30, 70), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) {
  %574 = cast(%var_7222, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %575 = cast(%var_7222, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %576 = cast(%var_7223, dtype="uint8") /* ty=Tensor[(30, 70), uint8] */;
  %577 = reshape(%574, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %578 = reshape(%575, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %579 = reshape(%576, newshape=[1, 2100]) /* ty=Tensor[(1, 2100), uint8] */;
  %580 = @func_1773(%577, %578, %579) /* ty=(Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) */;
  %581 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
  %582 = %580.0;
  (%581, %582, %var_7222, %var_7223)
}

def @func_4646(%var_4642: Tensor[(858), uint64]) -> (Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %583 = cast(meta[relay.Constant][44] /* ty=Tensor[(16, 3, 5), int8] */, dtype="int8") /* ty=Tensor[(16, 3, 5), int8] */;
  %584 = shape_of(meta[relay.Constant][43] /* ty=Tensor[(16, 3, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %585 = cast(meta[relay.Constant][43] /* ty=Tensor[(16, 3, 5), int8] */, dtype="int8") /* ty=Tensor[(16, 3, 5), int8] */;
  %586 = dyn.reshape(%583, %584, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %587 = cast(%var_4642, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %588 = reshape(%587, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %589 = @func_320(%588) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %590 = left_shift(%585, %586) /* ty=Tensor[(16, 3, 5), int8] */;
  %591 = %589.0;
  (%590, %591, %var_4642)
}

def @func_8107() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) {
  %592 = @func_8023() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %593 = @func_8023() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %594 = %592.0;
  %595 = %593.0;
  (%594, %595)
}

def @func_3551(%var_3523: Tensor[(336), float32], %var_3524: Tensor[(192), int16], %var_3525: uint8) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) {
  %596 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %597 = cast(%var_3523, dtype="float32") /* ty=Tensor[(336), float32] */;
  %598 = cast(%var_3524, dtype="int16") /* ty=Tensor[(192), int16] */;
  %599 = cast(%var_3525, dtype="uint8") /* ty=uint8 */;
  %600 = cast(meta[relay.Constant][45] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %601 = reshape(%597, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %602 = reshape(%598, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %603 = reshape(%599, newshape=[]) /* ty=uint8 */;
  %604 = reshape(%600, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %605 = @func_3408(%601, %602, %603, %604) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %606 = cast(meta[relay.Constant][46] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
  %607 = reshape(%606, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float64] */;
  %608 = @func_2829(%607) /* ty=(Tensor[(7, 1, 4), float64], Tensor[(7, ?, 4), uint32], Tensor[(7, 1, 4), float32]) */;
  %609 = %596.0;
  %610 = %605.5;
  %611 = %608.0;
  (%609, %610, %var_3523, %var_3524, %var_3525, meta[relay.Constant][45] /* ty=Tensor[(2100), uint8] */, %611, meta[relay.Constant][46] /* ty=Tensor[(28), float64] */)
}

def @func_4612() -> Tensor[(15, 2, 7), float32] {
  @func_3956() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_8922(%var_8915: Tensor[(896), float32]) -> (Tensor[(90), bool], Tensor[(8, 16, 7), float32], Tensor[(896), float32]) {
  %612 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
  %613 = cast(%var_8915, dtype="float32") /* ty=Tensor[(896), float32] */;
  %614 = cast(%var_8915, dtype="float32") /* ty=Tensor[(896), float32] */;
  %615 = reshape(%613, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), float32] */;
  %616 = reshape(%614, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), float32] */;
  %617 = @func_7129(%615, %616) /* ty=(Tensor[(8, 16, 7), float32],) */;
  %618 = %612.7;
  %619 = %617.0;
  (%618, %619, %var_8915)
}

def @func_3874(%var_3813: Tensor[(1440), float64], %var_3839: Tensor[(216), uint8], %var_3857: Tensor[(96, 2), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(10, 14, 10), float64], Tensor[(12, 8, 15), float64], Tensor[(1440), float64], Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(468, 2), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(16, 6, 2), bool], Tensor[(96, 2), int16], Tensor[(1400), uint32]) {
  %620 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %621 = cast(meta[relay.Constant][47] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %622 = reshape(%621, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
  %623 = @func_1196(%622) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) */;
  %624 = cast(meta[relay.Constant][48] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %625 = cast(meta[relay.Constant][48] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %626 = reshape(%624, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %627 = reshape(%625, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %628 = cast(meta[relay.Constant][47] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %629 = reshape(%628, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
  %630 = @func_1196(%629) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) */;
  %631 = cast(%var_3813, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %632 = cast(%var_3813, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %633 = reshape(%631, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %634 = reshape(%632, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %635 = @func_943(%633, %634) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %636 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %637 = cast(meta[relay.Constant][49] /* ty=Tensor[(468, 2), uint16] */, dtype="uint16") /* ty=Tensor[(468, 2), uint16] */;
  %638 = cast(meta[relay.Constant][49] /* ty=Tensor[(468, 2), uint16] */, dtype="uint16") /* ty=Tensor[(468, 2), uint16] */;
  %639 = cast(meta[relay.Constant][48] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %640 = cast(%var_3839, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %641 = cast(meta[relay.Constant][50] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %642 = reshape(%637, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
  %643 = reshape(%638, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
  %644 = reshape(%639, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %645 = reshape(%640, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %646 = reshape(%641, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %647 = @func_2404(%642, %643, %644, %645, %646) /* ty=(Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) */;
  %648 = cast(%var_3857, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
  %649 = cast(%var_3857, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
  %650 = reshape(%648, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %651 = reshape(%649, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %652 = @func_686(%650, %651) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %653 = cast(meta[relay.Constant][47] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %654 = acos(%653) /* ty=Tensor[(1400), float64] */;
  %655 = cast(%654, dtype="float32") /* ty=Tensor[(1400), float32] */;
  %656 = asin(%655) /* ty=Tensor[(1400), float32] */;
  %657 = cast(%656, dtype="float32") /* ty=Tensor[(1400), float32] */;
  %658 = sinh(%657) /* ty=Tensor[(1400), float32] */;
  %659 = cast(%658, dtype="uint32") /* ty=Tensor[(1400), uint32] */;
  %660 = shape_of(%654, dtype="int32") /* ty=Tensor[(1), int32] */;
  %661 = cast(%654, dtype="uint32") /* ty=Tensor[(1400), uint32] */;
  %662 = dyn.reshape(%659, %660, newshape=[]) /* ty=Tensor[(?), uint32] */;
  %663 = %620.0;
  %664 = %623.0;
  %665 = @func_2159(%626, %627) /* ty=Tensor[(7, 15, 10), int32] */;
  %666 = %630.2;
  %667 = %635.1;
  %668 = %636.0;
  %669 = %647.11;
  %670 = %652.0;
  %671 = bitwise_and(%661, %662) /* ty=Tensor[(1400), uint32] */;
  (%663, %664, %665, meta[relay.Constant][48] /* ty=Tensor[(1050), int32] */, %666, %667, %var_3813, %668, %669, meta[relay.Constant][49] /* ty=Tensor[(468, 2), uint16] */, %var_3839, meta[relay.Constant][50] /* ty=Tensor[(2100), uint8] */, %670, %var_3857, %671)
}

def @func_5826() -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) {
  %672 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
  %673 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %674 = %672.0;
  (%673, %674)
}

def @func_8023() -> (Tensor[(15, 2, 7), int16],) {
  %675 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %676 = %675.1;
  (%676,)
}

def @func_10492() -> Tensor[(15, 2, 7), int16] {
  %677 = @func_10269() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %677.0
}

def @func_11939(%var_11924: Tensor[(48), float32]) -> (Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(3, 4, 4), uint64], Tensor[(48), float32], Tensor[(15, 2, 7), bool]) {
  %678 = @func_7137() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %679 = cast(meta[relay.Constant][51] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %680 = reshape(%679, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %681 = @func_4646(%680) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %682 = cast(%var_11924, dtype="float32") /* ty=Tensor[(48), float32] */;
  %683 = cast(%var_11924, dtype="float64") /* ty=Tensor[(48), float64] */;
  %684 = reshape(%682, newshape=[3, 4, 4]) /* ty=Tensor[(3, 4, 4), float32] */;
  %685 = reshape(%683, newshape=[3, 4, 4]) /* ty=Tensor[(3, 4, 4), float64] */;
  %686 = @func_8990() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %687 = %678.0;
  %688 = %681.1;
  %689 = @func_11461(%684, %685) /* ty=Tensor[(3, 4, 4), uint64] */;
  %690 = %686.0;
  (%687, %688, meta[relay.Constant][51] /* ty=Tensor[(858), uint64] */, %689, %var_11924, %690)
}

def @func_3933(%var_3928: Tensor[(15, 2, 7), float32]) -> Tensor[(15, 2, 7), int16] {
  %691 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %692 = %691.0;
  %693 = cast(%var_3928, dtype="int16") /* ty=Tensor[(15, 2, 7), int16] */;
  %694 = shape_of(%692, dtype="int32") /* ty=Tensor[(3), int32] */;
  %695 = cast(%692, dtype="int16") /* ty=Tensor[(15, 2, 7), int16] */;
  %696 = dyn.reshape(%693, %694, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%695, %696) /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_7745() -> (Tensor[(15, 2, 7), float32],) {
  %697 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
  (%697,)
}

def @func_4062(%var_3995: Tensor[(2100), uint8], %var_4030: Tensor[(1050), int32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) {
  %698 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %699 = cast(meta[relay.Constant][52] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %700 = cast(%var_3995, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %701 = reshape(%699, newshape=[]) /* ty=uint8 */;
  %702 = reshape(%700, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %703 = @func_1596(%701, %702) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %704 = cast(%var_4030, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %705 = cast(%var_4030, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %706 = reshape(%704, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %707 = reshape(%705, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %708 = cast(meta[relay.Constant][53] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(96, 2), int16] */, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
  %710 = cast(meta[relay.Constant][52] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %711 = cast(%var_3995, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %712 = reshape(%708, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %713 = reshape(%709, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %714 = reshape(%710, newshape=[]) /* ty=uint8 */;
  %715 = reshape(%711, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %716 = @func_3408(%712, %713, %714, %715) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %717 = %716.1;
  %718 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 4, 12), bool] */, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %719 = shape_of(%717, dtype="int32") /* ty=Tensor[(3), int32] */;
  %720 = cast(%717, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %722 = %698.0;
  %723 = %703.0;
  %724 = @func_2159(%706, %707) /* ty=Tensor[(7, 15, 10), int32] */;
  %725 = mod(%720, %721) /* ty=Tensor[(7, 4, 12), float64] */;
  (%722, %723, meta[relay.Constant][52] /* ty=uint8 */, %var_3995, %724, %var_4030, meta[relay.Constant][53] /* ty=Tensor[(2, 168), float32] */, meta[relay.Constant][54] /* ty=Tensor[(96, 2), int16] */, %725)
}

def @func_7137() -> (Tensor[(15, 2, 7), int16],) {
  %726 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %727 = %726.0;
  (%727,)
}

def @func_5553() -> (Tensor[(15, 2, 7), int16], Tensor[(192), int16]) {
  %728 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
  %729 = cast(%728, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %730 = reshape(%729, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %731 = @func_4506(%730) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %732 = %731.2;
  (%728, %732)
}

def @func_4337() -> (Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) {
  %733 = @func_3977() /* ty=Tensor[(15, 2, 7), float32] */;
  %734 = cast(%733, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %735 = reshape(%734, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %736 = cast(meta[relay.Constant][56] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %737 = cast(meta[relay.Constant][56] /* ty=Tensor[(1440), float64] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %738 = reshape(%736, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %739 = reshape(%737, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %740 = @func_943(%738, %739) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %741 = %740.3;
  %742 = cast(%741, dtype="float32") /* ty=Tensor[(858), float32] */;
  %743 = @func_4127(%735) /* ty=Tensor[(15, 2, 7), float64] */;
  %744 = rsqrt(%742) /* ty=Tensor[(858), float32] */;
  (%733, meta[relay.Constant][56] /* ty=Tensor[(1440), float64] */, %743, %744)
}

def @func_4809(%var_4803: Tensor[(1, 858), uint64]) -> (Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(1, 858), uint64]) {
  %745 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %746 = cast(%var_4803, dtype="uint64") /* ty=Tensor[(1, 858), uint64] */;
  %747 = reshape(%746, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %748 = @func_4646(%747) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %749 = %745.0;
  %750 = %748.1;
  (%749, %750, %var_4803)
}

def @func_5276(%var_5251: Tensor[(8, 2, 2), float64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(1440), float64], Tensor[(8, 2, 2), bool]) {
  %751 = cast(meta[relay.Constant][57] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %752 = cast(meta[relay.Constant][57] /* ty=Tensor[(1440), float64] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %753 = reshape(%751, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %754 = reshape(%752, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %755 = @func_943(%753, %754) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %756 = cast(%var_5251, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
  %757 = asinh(%756) /* ty=Tensor[(8, 2, 2), float64] */;
  %758 = cast(%var_5251, dtype="bool") /* ty=Tensor[(8, 2, 2), bool] */;
  %759 = shape_of(%757, dtype="int32") /* ty=Tensor[(3), int32] */;
  %760 = cast(%757, dtype="bool") /* ty=Tensor[(8, 2, 2), bool] */;
  %761 = dyn.reshape(%758, %759, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %762 = %755.2;
  %763 = logical_and(%760, %761) /* ty=Tensor[(8, 2, 2), bool] */;
  (%762, meta[relay.Constant][57] /* ty=Tensor[(1440), float64] */, %763)
}

def @func_11407(%var_11393: Tensor[(2, 7, 10), float32]) -> (Tensor[(2, 7, 10), float32],) {
  %764 = cast(meta[relay.Constant][58] /* ty=Tensor[(2, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(2, 7, 1), float32] */;
  %765 = cast(%var_11393, dtype="float32") /* ty=Tensor[(2, 7, 10), float32] */;
  %766 = mod(%764, %765) /* ty=Tensor[(2, 7, 10), float32] */;
  (%766,)
}

def @func_7003() -> Tensor[(15, 2, 7), float64] {
  %767 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
  %767.2
}

def @func_6923(%var_6882: Tensor[(2100), float64]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(2100), bool]) {
  %768 = cast(meta[relay.Constant][59] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %769 = reshape(%768, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %770 = @func_4694(%769) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
  %771 = cast(meta[relay.Constant][59] /* ty=Tensor[(2100), uint8] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %772 = acos(%771) /* ty=Tensor[(2100), float64] */;
  %773 = cast(%var_6882, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(1), int32] */;
  %775 = cast(%772, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?), bool] */;
  %777 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %778 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
  %779 = %770.0;
  %780 = logical_and(%775, %776) /* ty=Tensor[(2100), bool] */;
  (%777, %778, %779, %780)
}

def @func_10269() -> (Tensor[(15, 2, 7), int16],) {
  %781 = @func_9397() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %782 = %781.0;
  (%782,)
}

def @func_4915() -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) {
  %783 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %784 = %783.0;
  %785 = cast(%784, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %786 = reshape(%785, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %787 = @func_3933(%786) /* ty=Tensor[(15, 2, 7), int16] */;
  (%784, %787)
}

def @func_10646() -> (Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8]) {
  %788 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %789 = cast(meta[relay.Constant][60] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %790 = reshape(%789, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %791 = @func_9673(%790) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) */;
  %792 = %788.0;
  %793 = %791.1;
  (%792, %793, meta[relay.Constant][60] /* ty=Tensor[(2100), uint8] */)
}

def @func_7813() -> (Tensor[(15, 2, 7), bool],) {
  %794 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  (%794,)
}

def @func_5172() -> Tensor[(15, 2, 7), float32] {
  %795 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %795.0
}

def @func_10230(%var_10165: Tensor[(2100), uint8], %var_10166: Tensor[(336), float32], %var_10170: Tensor[(5, 90), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(15, 3, 10), float32], Tensor[(5, 90), float32], Tensor[(24, 8), float32], Tensor[(24, 8), float64], Tensor[(15, 2, 7), int16]) {
  %796 = cast(%var_10170, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
  %797 = reshape(%796, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), float32] */;
  %798 = @func_6005(%797) /* ty=(Tensor[(15, 3, 10), float32],) */;
  %799 = cast(%var_10165, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %800 = cast(%var_10166, dtype="float32") /* ty=Tensor[(336), float32] */;
  %801 = reshape(%799, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %802 = reshape(%800, newshape=[24, 14]) /* ty=Tensor[(24, 14), float32] */;
  %803 = @func_7443(%801, %802) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(24, 8), int16], Tensor[(24, 14), float32], uint8) */;
  %804 = %803.4;
  %805 = cast(%804, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %806 = asin(%805) /* ty=Tensor[(24, 8), float64] */;
  %807 = cast(%806, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %808 = cast(%806, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %809 = sigmoid(%808) /* ty=Tensor[(24, 8), float32] */;
  %810 = cast(%809, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
  %811 = sinh(%810) /* ty=Tensor[(24, 8), float32] */;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
  %813 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %814 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
  %815 = %798.0;
  %816 = atan(%807) /* ty=Tensor[(24, 8), float32] */;
  %817 = sin(%812) /* ty=Tensor[(24, 8), float64] */;
  %818 = %813.1;
  (%814, %var_10165, %var_10166, %815, %var_10170, %816, %817, %818)
}

def @func_7389(%var_7375: Tensor[(5, 210), int32], %var_7376: Tensor[(336), float32], %var_7377: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(5, 210), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) {
  %819 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %820 = @func_7041() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %821 = %820.0;
  %822 = cast(%821, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %823 = cast(%var_7375, dtype="int32") /* ty=Tensor[(5, 210), int32] */;
  %824 = cast(%var_7376, dtype="float32") /* ty=Tensor[(336), float32] */;
  %825 = cast(%var_7377, dtype="int16") /* ty=Tensor[(192), int16] */;
  %826 = cast(meta[relay.Constant][61] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %827 = reshape(%822, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %828 = reshape(%823, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %829 = reshape(%824, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
  %830 = reshape(%825, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
  %831 = reshape(%826, newshape=[]) /* ty=uint8 */;
  %832 = @func_5065(%827, %828, %829, %830, %831) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
  %833 = %819.0;
  %834 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
  %835 = %832.2;
  (%833, %834, %821, %835, %var_7375, %var_7376, %var_7377, meta[relay.Constant][61] /* ty=uint8 */)
}

def @func_11660(%var_11626: Tensor[(2100), uint8], %var_11647: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(15, 2, 7), int16], Tensor[(2100), bool]) {
  %836 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %837 = @func_7137() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %838 = cast(%var_11626, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %839 = reshape(%838, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %840 = @func_9673(%839) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) */;
  %841 = %840.2;
  %842 = cast(%var_11647, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(1), int32] */;
  %844 = cast(%841, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?), bool] */;
  %846 = @func_6805() /* ty=Tensor[(15, 2, 7), float32] */;
  %847 = %836.1;
  %848 = %837.0;
  %849 = equal(%844, %845) /* ty=Tensor[(2100), bool] */;
  (%846, %847, %var_11626, %848, %849)
}

def @func_10464(%var_10425: Tensor[(1, 7, 6), float32], %var_10431: Tensor[(858), uint64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), uint8], Tensor[(105, 2), float32], Tensor[(?, 7, 6), bool]) {
  %850 = cast(%var_10431, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %851 = reshape(%850, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %852 = @func_4646(%851) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %853 = cast(meta[relay.Constant][62] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
  %854 = reshape(%853, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %855 = @func_4085(%854) /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float64]) */;
  %856 = cast(%var_10425, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
  %857 = cosh(%856) /* ty=Tensor[(1, 7, 6), float32] */;
  %858 = cast(%var_10425, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %859 = shape_of(%857, dtype="int32") /* ty=Tensor[(3), int32] */;
  %860 = cast(%857, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %861 = dyn.reshape(%858, %859, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %862 = %852.1;
  %863 = %855.1;
  %864 = greater_equal(%860, %861) /* ty=Tensor[(?, 7, 6), bool] */;
  (%862, %var_10431, %863, meta[relay.Constant][62] /* ty=Tensor[(105, 2), float32] */, %864)
}

def @func_7802() -> (Tensor[(15, 2, 7), float32], Tensor[(192), int16], Tensor[(15, 2, 7), bool]) {
  %865 = @func_7041() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %866 = %865.0;
  %867 = cast(%866, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %868 = reshape(%867, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %869 = @func_4506(%868) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %870 = @func_7541() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %871 = %869.2;
  %872 = %870.0;
  (%866, %871, %872)
}

def @func_7236() -> (Tensor[(336), int16],) {
  %873 = @func_4991() /* ty=(Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
  %874 = %873.3;
  (%874,)
}

def @func_11077() -> (Tensor[(15, 2, 7), bool], Tensor[(9, 14, 11), int64], Tensor[(1386), int64]) {
  %875 = @func_9213() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %876 = cast(meta[relay.Constant][63] /* ty=Tensor[(1386), int64] */, dtype="int64") /* ty=Tensor[(1386), int64] */;
  %877 = cast(meta[relay.Constant][63] /* ty=Tensor[(1386), int64] */, dtype="int64") /* ty=Tensor[(1386), int64] */;
  %878 = reshape(%876, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int64] */;
  %879 = reshape(%877, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int64] */;
  %880 = @func_4268(%878, %879) /* ty=(Tensor[(9, 14, 11), int64],) */;
  %881 = %875.0;
  %882 = %880.0;
  (%881, %882, meta[relay.Constant][63] /* ty=Tensor[(1386), int64] */)
}

def @func_8664() -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) {
  %883 = @func_4966() /* ty=Tensor[(11, 13, 6), uint64] */;
  %884 = @func_8513() /* ty=Tensor[(15, 2, 7), float32] */;
  (%883, %884)
}

def @func_8282() -> (Tensor[(15, 2, 7), float32],) {
  %885 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
  (%885,)
}

def @func_8513() -> Tensor[(15, 2, 7), float32] {
  @func_7670() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_8234(%var_8229: int32, %var_8230: Tensor[(16, 14, 5), int32]) -> (Tensor[(16, 14, 5), int32],) {
  %886 = cast(%var_8229, dtype="int32") /* ty=int32 */;
  %887 = cast(%var_8230, dtype="int32") /* ty=Tensor[(16, 14, 5), int32] */;
  %888 = multiply(%886, %887) /* ty=Tensor[(16, 14, 5), int32] */;
  (%888,)
}

def @func_3408(%var_3363: Tensor[(2, 168), float32], %var_3378: Tensor[(192), int16], %var_3385: uint8, %var_3386: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) {
  %889 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %890 = cast(%var_3363, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %891 = reshape(%890, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %892 = @func_2532(%891) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %893 = cast(%var_3378, dtype="int16") /* ty=Tensor[(192), int16] */;
  %894 = cast(%var_3378, dtype="int16") /* ty=Tensor[(192), int16] */;
  %895 = reshape(%893, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %896 = reshape(%894, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %897 = @func_686(%895, %896) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %898 = cast(%var_3385, dtype="uint8") /* ty=uint8 */;
  %899 = cast(%var_3386, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %900 = reshape(%898, newshape=[]) /* ty=uint8 */;
  %901 = reshape(%899, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %902 = @func_1596(%900, %901) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %903 = cast(meta[relay.Constant][64] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %904 = cast(meta[relay.Constant][64] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %905 = reshape(%903, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %906 = reshape(%904, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %907 = %889.0;
  %908 = %892.0;
  %909 = %897.2;
  %910 = %902.0;
  %911 = @func_2159(%905, %906) /* ty=Tensor[(7, 15, 10), int32] */;
  (%907, %908, %var_3363, %909, %var_3378, %910, %var_3385, %var_3386, %911, meta[relay.Constant][64] /* ty=Tensor[(1050), int32] */)
}

def @func_9673(%var_9670: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) {
  %912 = cast(%var_9670, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %913 = reshape(%912, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %914 = @func_8817(%913) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), float64], Tensor[(2100), uint8]) */;
  %915 = @func_9493() /* ty=Tensor[(15, 2, 7), float32] */;
  %916 = %914.1;
  (%915, %916, %var_9670)
}

def @func_4268(%var_4262: Tensor[(9, 14, 11), int64], %var_4263: Tensor[(9, 14, 11), int64]) -> (Tensor[(9, 14, 11), int64],) {
  %917 = cast(%var_4263, dtype="int64") /* ty=Tensor[(9, 14, 11), int64] */;
  %918 = shape_of(%var_4262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %919 = cast(%var_4262, dtype="int64") /* ty=Tensor[(9, 14, 11), int64] */;
  %920 = dyn.reshape(%917, %918, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %921 = bitwise_or(%919, %920) /* ty=Tensor[(9, 14, 11), int64] */;
  (%921,)
}

def @func_5871() -> (Tensor[(15, 2, 7), bool],) {
  %922 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  (%922,)
}

def @func_6401() -> Tensor[(15, 2, 7), float32] {
  @func_4612() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_9010() -> (Tensor[(15, 2, 7), float32],) {
  %923 = @func_7052() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %924 = %923.0;
  (%924,)
}

def @func_5612() -> Tensor[(15, 2, 7), bool] {
  %925 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %926 = %925.0;
  %927 = cast(%926, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %928 = sigmoid(%927) /* ty=Tensor[(15, 2, 7), float64] */;
  %929 = cast(%926, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %930 = shape_of(%928, dtype="int32") /* ty=Tensor[(3), int32] */;
  %931 = cast(%928, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %932 = dyn.reshape(%929, %930, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%931, %932) /* ty=Tensor[(15, 2, 7), bool] */
}

def @func_4991() -> (Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) {
  %933 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
  %934 = cast(meta[relay.Constant][65] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %935 = cast(meta[relay.Constant][66] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %936 = reshape(%934, newshape=[]) /* ty=int16 */;
  %937 = reshape(%935, newshape=[8, 7, 6]) /* ty=Tensor[(8, 7, 6), int16] */;
  %938 = %933.3;
  %939 = @func_1017(%936, %937) /* ty=Tensor[(8, 7, 6), int16] */;
  (%938, %939, meta[relay.Constant][65] /* ty=int16 */, meta[relay.Constant][66] /* ty=Tensor[(336), int16] */)
}

def @func_11271() -> (Tensor[(15, 2, 7), bool], Tensor[(192), int16], Tensor[(858), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), int16], Tensor[(1, 2100), uint8], Tensor[(4, 28), uint64], Tensor[(15, 2, 7), float32]) {
  %940 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  %941 = cast(%940, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %942 = reshape(%941, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %943 = @func_4506(%942) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %944 = cast(meta[relay.Constant][67] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %945 = cast(meta[relay.Constant][67] /* ty=Tensor[(858), uint64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %946 = reshape(%944, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %947 = reshape(%945, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %948 = @func_5979(%946, %947) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(7, 4, 12), bool], Tensor[(336), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(858), uint64], Tensor[(858), float32]) */;
  %949 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 2100), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2100), uint8] */;
  %950 = cast(meta[relay.Constant][69] /* ty=Tensor[(4, 28), uint64] */, dtype="uint64") /* ty=Tensor[(4, 28), uint64] */;
  %951 = cast(meta[relay.Constant][67] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %952 = %948.6;
  %953 = cast(%952, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %954 = reshape(%949, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %955 = reshape(%950, newshape=[112]) /* ty=Tensor[(112), uint64] */;
  %956 = reshape(%951, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %957 = reshape(%953, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %958 = @func_8720(%954, %955, %956, %957) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(216), uint8], Tensor[(2100), uint8], int16, Tensor[(112), uint64], Tensor[(1456), uint64], Tensor[(336), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(216, 1), float64]) */;
  %959 = @func_10671() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %960 = %943.2;
  %961 = %958.0;
  %962 = %959.0;
  (%940, %960, %952, meta[relay.Constant][67] /* ty=Tensor[(858), uint64] */, %961, meta[relay.Constant][68] /* ty=Tensor[(1, 2100), uint8] */, meta[relay.Constant][69] /* ty=Tensor[(4, 28), uint64] */, %962)
}

def @func_3306() -> (Tensor[(15, 2, 7), float32],) {
  %963 = cast(meta[relay.Constant][70] /* ty=Tensor[(15, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %964 = rsqrt(%963) /* ty=Tensor[(15, 2, 7), float64] */;
  %965 = cast(%964, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %966 = asin(%965) /* ty=Tensor[(15, 2, 7), float32] */;
  (%966,)
}

def @func_9352() -> Tensor[(15, 2, 7), float32] {
  %967 = @func_6024() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %967.0
}

def @func_11206() -> (Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], Tensor[(15, 2, 7), float64]) {
  %968 = @func_7137() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %969 = @func_4991() /* ty=(Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
  %970 = %968.0;
  %971 = cast(%970, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %972 = reshape(%971, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %973 = %969.1;
  %974 = @func_4127(%972) /* ty=Tensor[(15, 2, 7), float64] */;
  (%970, %973, %974)
}

def @func_6442() -> Tensor[(15, 2, 7), float32] {
  @func_3956() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_10892(%var_10851: Tensor[(1050), int32], %var_10852: Tensor[(216), uint8], %var_10853: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 3, 10), float32], Tensor[(450), float32], Tensor[(20, 72), float64], Tensor[(6, 156), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(1050), float64], Tensor[(15, 2, 7), float64]) {
  %975 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %976 = cast(meta[relay.Constant][71] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
  %977 = reshape(%976, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), float32] */;
  %978 = @func_6005(%977) /* ty=(Tensor[(15, 3, 10), float32],) */;
  %979 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 156), uint16] */, dtype="uint16") /* ty=Tensor[(6, 156), uint16] */;
  %980 = cast(meta[relay.Constant][72] /* ty=Tensor[(6, 156), uint16] */, dtype="uint16") /* ty=Tensor[(6, 156), uint16] */;
  %981 = cast(%var_10851, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %982 = cast(%var_10852, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %983 = cast(%var_10853, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %984 = reshape(%979, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
  %985 = reshape(%980, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
  %986 = reshape(%981, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %987 = reshape(%982, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %988 = reshape(%983, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %989 = @func_2404(%984, %985, %986, %987, %988) /* ty=(Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) */;
  %990 = cast(%var_10851, dtype="float64") /* ty=Tensor[(1050), float64] */;
  %991 = %975.1;
  %992 = cast(%991, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %993 = reshape(%992, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %994 = %978.0;
  %995 = %989.4;
  %996 = @func_5095() /* ty=Tensor[(11, 13, 6), uint64] */;
  %997 = sinh(%990) /* ty=Tensor[(1050), float64] */;
  %998 = @func_4127(%993) /* ty=Tensor[(15, 2, 7), float64] */;
  (%991, %994, meta[relay.Constant][71] /* ty=Tensor[(450), float32] */, %995, meta[relay.Constant][72] /* ty=Tensor[(6, 156), uint16] */, %var_10852, %var_10853, %996, %997, %998)
}

def @func_3977() -> Tensor[(15, 2, 7), float32] {
  %999 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %999.0
}

def @func_7509() -> Tensor[(15, 2, 7), float32] {
  @func_5172() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_686(%var_642: Tensor[(16, 6, 2), int16], %var_643: Tensor[(16, 6, 2), int16]) -> (Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %1000 = cast(%var_643, dtype="bool") /* ty=Tensor[(16, 6, 2), bool] */;
  %1001 = shape_of(%var_642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1002 = cast(%var_642, dtype="bool") /* ty=Tensor[(16, 6, 2), bool] */;
  %1003 = dyn.reshape(%1000, %1001, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1004 = cast(meta[relay.Constant][73] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %1005 = reshape(%1004, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %1006 = @func_320(%1005) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %1007 = less_equal(%1002, %1003) /* ty=Tensor[(16, 6, 2), bool] */;
  %1008 = %1006.0;
  (%1007, %1008, meta[relay.Constant][73] /* ty=Tensor[(858), uint64] */)
}

def @func_4556() -> (Tensor[(15, 2, 7), int16],) {
  %1009 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1010 = %1009.1;
  (%1010,)
}

def @func_12252(%var_12241: Tensor[(15, 4, 2), float64]) -> Tensor[(15, 4, 2), float32] {
  %1011 = cast(%var_12241, dtype="float64") /* ty=Tensor[(15, 4, 2), float64] */;
  %1012 = asin(%1011) /* ty=Tensor[(15, 4, 2), float64] */;
  %1013 = cast(%var_12241, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
  %1014 = shape_of(%1012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%1012, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%1015, %1016) /* ty=Tensor[(15, 4, 2), float32] */
}

def @func_10103(%var_10101: uint8) -> (Tensor[(192), int16], Tensor[(1050), int32], Tensor[(336), float32], uint8) {
  %1017 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %1018 = cast(meta[relay.Constant][74] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1019 = cast(%var_10101, dtype="uint8") /* ty=uint8 */;
  %1020 = reshape(%1018, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %1021 = reshape(%1019, newshape=[]) /* ty=uint8 */;
  %1022 = @func_5652(%1020, %1021) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
  %1023 = %1017.1;
  %1024 = %1022.2;
  (%1023, %1024, meta[relay.Constant][74] /* ty=Tensor[(336), float32] */, %var_10101)
}

def @func_7443(%var_7430: Tensor[(2100), uint8], %var_7437: Tensor[(24, 14), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(24, 8), int16], Tensor[(24, 14), float32], uint8) {
  %1025 = cast(%var_7430, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %1026 = cast(meta[relay.Constant][75] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %1027 = reshape(%1025, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %1028 = reshape(%1026, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %1029 = @func_4062(%1027, %1028) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
  %1030 = cast(%var_7437, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
  %1031 = cast(meta[relay.Constant][76] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %1032 = reshape(%1030, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %1033 = reshape(%1031, newshape=[]) /* ty=uint8 */;
  %1034 = @func_5652(%1032, %1033) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
  %1035 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %1036 = %1029.0;
  %1037 = %1034.4;
  (%1035, %1036, %var_7430, meta[relay.Constant][75] /* ty=Tensor[(1050), int32] */, %1037, %var_7437, meta[relay.Constant][76] /* ty=uint8 */)
}

def @func_12132(%var_12088: Tensor[(336), int16]) -> (Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) {
  %1038 = @func_11497() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %1039 = cast(meta[relay.Constant][77] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1040 = cast(%var_12088, dtype="int16") /* ty=Tensor[(336), int16] */;
  %1041 = reshape(%1039, newshape=[]) /* ty=int16 */;
  %1042 = reshape(%1040, newshape=[8, 7, 6]) /* ty=Tensor[(8, 7, 6), int16] */;
  %1043 = %1038.0;
  %1044 = @func_1017(%1041, %1042) /* ty=Tensor[(8, 7, 6), int16] */;
  (%1043, %1044, meta[relay.Constant][77] /* ty=int16 */, %var_12088)
}

def @func_6626(%var_6615: Tensor[(1050, 1), int32], %var_6616: Tensor[(336), float32], %var_6618: uint8) -> (Tensor[(15, 2, 7), float32], uint8, Tensor[(1050, 1), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) {
  %1045 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1046 = %1045.0;
  %1047 = cast(%1046, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %1048 = cast(%var_6615, dtype="int32") /* ty=Tensor[(1050, 1), int32] */;
  %1049 = cast(%var_6616, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1050 = cast(meta[relay.Constant][78] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %1051 = cast(%var_6618, dtype="uint8") /* ty=uint8 */;
  %1052 = reshape(%1047, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %1053 = reshape(%1048, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %1054 = reshape(%1049, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
  %1055 = reshape(%1050, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
  %1056 = reshape(%1051, newshape=[]) /* ty=uint8 */;
  %1057 = @func_5065(%1052, %1053, %1054, %1055, %1056) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
  %1058 = %1057.8;
  (%1046, %1058, %var_6615, %var_6616, meta[relay.Constant][78] /* ty=Tensor[(192), int16] */, %var_6618)
}

def @func_12192() -> (Tensor[(15, 2, 7), int16],) {
  %1059 = @func_7291() /* ty=Tensor[(15, 2, 7), int16] */;
  (%1059,)
}

def @func_1017(%var_1012: int16, %var_1013: Tensor[(8, 7, 6), int16]) -> Tensor[(8, 7, 6), int16] {
  %1060 = cast(%var_1012, dtype="int16") /* ty=int16 */;
  %1061 = cast(%var_1013, dtype="int16") /* ty=Tensor[(8, 7, 6), int16] */;
  add(%1060, %1061) /* ty=Tensor[(8, 7, 6), int16] */
}

def @func_4855() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
  %1062 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1063 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
  %1064 = %1062.0;
  (%1063, %1064)
}

def @func_11461(%var_11437: Tensor[(3, 4, 4), float32], %var_11449: Tensor[(3, 4, 4), float64]) -> Tensor[(3, 4, 4), uint64] {
  %1065 = cast(%var_11437, dtype="float32") /* ty=Tensor[(3, 4, 4), float32] */;
  %1066 = sigmoid(%1065) /* ty=Tensor[(3, 4, 4), float32] */;
  %1067 = cast(%1066, dtype="float64") /* ty=Tensor[(3, 4, 4), float64] */;
  %1068 = shape_of(%var_11437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1069 = cast(%var_11437, dtype="float64") /* ty=Tensor[(3, 4, 4), float64] */;
  %1070 = dyn.reshape(%1067, %1068, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1071 = mod(%1069, %1070) /* ty=Tensor[(3, 4, 4), float64] */;
  %1072 = cast(%var_11449, dtype="uint64") /* ty=Tensor[(3, 4, 4), uint64] */;
  %1073 = shape_of(%1071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1074 = cast(%1071, dtype="uint64") /* ty=Tensor[(3, 4, 4), uint64] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  multiply(%1074, %1075) /* ty=Tensor[(3, 4, 4), uint64] */
}

def @func_4773() -> Tensor[(15, 2, 7), int16] {
  %1076 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %1076.0
}

def @func_7677() -> (Tensor[(336), int16],) {
  %1077 = @func_7236() /* ty=(Tensor[(336), int16],) */;
  %1078 = %1077.0;
  (%1078,)
}

def @func_8552(%var_8520: Tensor[(5, 10, 12), float32], %var_8521: Tensor[(5, 10, 12), float32], %var_8542: uint8) -> (Tensor[(5, 10, 12), float32], Tensor[(24, 8), int16], Tensor[(1, 336), float32], uint8) {
  %1079 = cast(%var_8521, dtype="float32") /* ty=Tensor[(5, 10, 12), float32] */;
  %1080 = shape_of(%var_8520, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1081 = cast(%var_8520, dtype="float32") /* ty=Tensor[(5, 10, 12), float32] */;
  %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1083 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 336), float32] */, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
  %1084 = cast(%var_8542, dtype="uint8") /* ty=uint8 */;
  %1085 = reshape(%1083, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %1086 = reshape(%1084, newshape=[]) /* ty=uint8 */;
  %1087 = @func_5652(%1085, %1086) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
  %1088 = floor_mod(%1081, %1082) /* ty=Tensor[(5, 10, 12), float32] */;
  %1089 = %1087.4;
  (%1088, %1089, meta[relay.Constant][79] /* ty=Tensor[(1, 336), float32] */, %var_8542)
}

def @func_10360() -> Tensor[(15, 2, 7), int16] {
  %1090 = @func_8023() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %1090.0
}

def @func_320(%var_314: Tensor[(11, 13, 6), uint64]) -> (Tensor[(11, 13, 6), uint64],) {
  %1091 = cast(meta[relay.Constant][80] /* ty=Tensor[(1, 13, 6), uint64] */, dtype="uint64") /* ty=Tensor[(1, 13, 6), uint64] */;
  %1092 = cast(%var_314, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %1093 = logical_xor(%1091, %1092) /* ty=Tensor[(11, 13, 6), uint64] */;
  (%1093,)
}

def @func_11748() -> Tensor[(9, 2, 5), bool] {
  @func_10960() /* ty=Tensor[(9, 2, 5), bool] */
}

def @func_9477() -> (Tensor[(15, 2, 7), float32], Tensor[(8, 2, 2), bool], Tensor[(32), float64]) {
  %1094 = @func_6024() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1095 = cast(meta[relay.Constant][81] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
  %1096 = reshape(%1095, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float64] */;
  %1097 = @func_5276(%1096) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1440), float64], Tensor[(8, 2, 2), bool]) */;
  %1098 = %1094.0;
  %1099 = %1097.2;
  (%1098, %1099, meta[relay.Constant][81] /* ty=Tensor[(32), float64] */)
}

def @func_11032() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
  %1100 = @func_8664() /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) */;
  %1101 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
  %1102 = %1100.1;
  (%1101, %1102)
}

def @func_10661() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) {
  %1103 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %1104 = %1103.0;
  %1105 = cast(%1104, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %1106 = reshape(%1105, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %1107 = @func_3933(%1106) /* ty=Tensor[(15, 2, 7), int16] */;
  (%1104, %1107)
}

def @func_6805() -> Tensor[(15, 2, 7), float32] {
  @func_3950() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_6005(%var_6002: Tensor[(15, 3, 10), float32]) -> (Tensor[(15, 3, 10), float32],) {
  %1108 = cast(%var_6002, dtype="float32") /* ty=Tensor[(15, 3, 10), float32] */;
  %1109 = sqrt(%1108) /* ty=Tensor[(15, 3, 10), float32] */;
  (%1109,)
}

def @func_4160() -> Tensor[(15, 2, 7), float32] {
  %1110 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1110.0
}

def @func_7052() -> (Tensor[(15, 2, 7), float32],) {
  %1111 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1112 = %1111.0;
  (%1112,)
}

def @func_7291() -> Tensor[(15, 2, 7), int16] {
  %1113 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %1113.0
}

def @func_9047() -> (Tensor[(15, 2, 7), int16],) {
  %1114 = @func_7291() /* ty=Tensor[(15, 2, 7), int16] */;
  (%1114,)
}

def @func_3956() -> Tensor[(15, 2, 7), float32] {
  @func_3950() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_9397() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
  %1115 = @func_5826() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %1116 = @func_8131() /* ty=Tensor[(15, 2, 7), int16] */;
  %1117 = %1115.1;
  (%1116, %1117)
}

def @func_8487(%var_8453: Tensor[(16, 7, 1), uint64], %var_8454: Tensor[(16, 7, 13), uint64], %var_8463: Tensor[(336), int16]) -> (Tensor[(16, 7, 13), uint64], Tensor[(8, 7, 6), int16], int16, Tensor[(16, 7, 336), float64]) {
  %1118 = cast(%var_8453, dtype="uint64") /* ty=Tensor[(16, 7, 1), uint64] */;
  %1119 = cast(%var_8454, dtype="uint64") /* ty=Tensor[(16, 7, 13), uint64] */;
  %1120 = cast(meta[relay.Constant][82] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1121 = cast(%var_8463, dtype="int16") /* ty=Tensor[(336), int16] */;
  %1122 = reshape(%1120, newshape=[]) /* ty=int16 */;
  %1123 = reshape(%1121, newshape=[8, 7, 6]) /* ty=Tensor[(8, 7, 6), int16] */;
  %1124 = cast(%var_8453, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
  %1125 = asin(%1124) /* ty=Tensor[(16, 7, 1), float64] */;
  %1126 = cast(%1125, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
  %1127 = cast(%var_8463, dtype="float64") /* ty=Tensor[(336), float64] */;
  %1128 = bitwise_or(%1118, %1119) /* ty=Tensor[(16, 7, 13), uint64] */;
  %1129 = @func_1017(%1122, %1123) /* ty=Tensor[(8, 7, 6), int16] */;
  %1130 = divide(%1126, %1127) /* ty=Tensor[(16, 7, 336), float64] */;
  (%1128, %1129, meta[relay.Constant][82] /* ty=int16 */, %1130)
}

def @func_12144() -> Tensor[(15, 2, 7), int16] {
  %1131 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %1131.0
}

def @func_10671() -> (Tensor[(15, 2, 7), float32],) {
  %1132 = @func_7052() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1133 = %1132.0;
  (%1133,)
}

def @func_11694() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), bool]) {
  %1134 = @func_7813() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %1135 = @func_10281() /* ty=Tensor[(15, 2, 7), int16] */;
  %1136 = %1134.0;
  (%1135, %1136)
}

def @main(%var_12343: Tensor[(168, 2), int16]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(168, 2), int16], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(16, 6, 2), bool], Tensor[(192), int16], Tensor[(1050, 2), bool], Tensor[(15, 2, 7), int16], Tensor[(1050, 2), float64]) {
  %1137 = @func_9877() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) */;
  %1138 = @func_9877() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) */;
  %1139 = cast(meta[relay.Constant][83] /* ty=Tensor[(1050, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1050, 2), uint8] */;
  %1140 = reshape(%1139, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %1141 = @func_9673(%1140) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) */;
  %1142 = cast(meta[relay.Constant][84] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %1143 = cast(meta[relay.Constant][84] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %1144 = reshape(%1142, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %1145 = reshape(%1143, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %1146 = @func_686(%1144, %1145) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1147 = cast(%var_12343, dtype="int16") /* ty=Tensor[(168, 2), int16] */;
  %1148 = reshape(%1147, newshape=[336]) /* ty=Tensor[(336), int16] */;
  %1149 = @func_12132(%1148) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
  %1150 = %1149.2;
  %1151 = cast(meta[relay.Constant][83] /* ty=Tensor[(1050, 2), uint8] */, dtype="bool") /* ty=Tensor[(1050, 2), bool] */;
  %1152 = cast(%1150, dtype="bool") /* ty=bool */;
  %1153 = @func_11694() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), bool]) */;
  %1154 = cast(meta[relay.Constant][83] /* ty=Tensor[(1050, 2), uint8] */, dtype="float64") /* ty=Tensor[(1050, 2), float64] */;
  %1155 = %1137.0;
  %1156 = %1138.1;
  %1157 = @func_8513() /* ty=Tensor[(15, 2, 7), float32] */;
  %1158 = @func_7203() /* ty=Tensor[(15, 2, 7), float32] */;
  %1159 = %1141.2;
  %1160 = %1146.0;
  %1161 = logical_or(%1151, %1152) /* ty=Tensor[(1050, 2), bool] */;
  %1162 = %1153.0;
  %1163 = erf(%1154) /* ty=Tensor[(1050, 2), float64] */;
  (%1155, %1156, %1157, %var_12343, %1158, %1159, %1160, meta[relay.Constant][84] /* ty=Tensor[(192), int16] */, %1161, %1162, %1163)
}

def @func_4411() -> (Tensor[(15, 2, 7), float32],) {
  %1164 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  (%1164,)
}

def @func_9213() -> (Tensor[(15, 2, 7), bool],) {
  %1165 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  (%1165,)
}

def @func_10730() -> Tensor[(15, 2, 7), int16] {
  %1166 = @func_9397() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %1166.0
}

def @func_4694(%var_4691: Tensor[(2100), uint8]) -> (Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) {
  %1167 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
  %1168 = cast(%var_4691, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %1169 = cast(meta[relay.Constant][85] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %1170 = reshape(%1168, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %1171 = reshape(%1169, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %1172 = @func_4062(%1170, %1171) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
  %1173 = %1167.1;
  %1174 = %1172.5;
  (%1173, %1174, %var_4691, meta[relay.Constant][85] /* ty=Tensor[(1050), int32] */)
}

def @func_10605(%var_10530: Tensor[(42), float32], %var_10541: uint8, %var_10542: Tensor[(3, 700), uint8], %var_10565: Tensor[(210, 1), float32]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(42), float32], Tensor[(192), int16], Tensor[(3, 700), uint8], Tensor[(2, 168), bool], Tensor[(11, 13, 6), uint64], Tensor[(210, 336), uint8]) {
  %1175 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1176 = cast(%var_10530, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1177 = %1175.2;
  %1178 = cast(%1177, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %1179 = reshape(%1176, newshape=[1, 7, 6]) /* ty=Tensor[(1, 7, 6), float32] */;
  %1180 = reshape(%1178, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %1181 = @func_10464(%1179, %1180) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), uint8], Tensor[(105, 2), float32], Tensor[(?, 7, 6), bool]) */;
  %1182 = cast(meta[relay.Constant][87] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1183 = cast(meta[relay.Constant][86] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %1184 = cast(%var_10541, dtype="uint8") /* ty=uint8 */;
  %1185 = cast(%var_10542, dtype="uint8") /* ty=Tensor[(3, 700), uint8] */;
  %1186 = reshape(%1182, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %1187 = reshape(%1183, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %1188 = reshape(%1184, newshape=[]) /* ty=uint8 */;
  %1189 = reshape(%1185, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %1190 = @func_3408(%1186, %1187, %1188, %1189) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %1191 = %1190.2;
  %1192 = cast(%1191, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %1193 = cast(%var_10541, dtype="bool") /* ty=bool */;
  %1194 = cast(%var_10565, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %1195 = reshape(%1194, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %1196 = @func_4506(%1195) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %1197 = cast(meta[relay.Constant][87] /* ty=Tensor[(336), float32] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1198 = cast(%var_10565, dtype="uint8") /* ty=Tensor[(210, 1), uint8] */;
  %1199 = %1181.1;
  %1200 = greater_equal(%1192, %1193) /* ty=Tensor[(2, 168), bool] */;
  %1201 = %1196.1;
  %1202 = bitwise_xor(%1197, %1198) /* ty=Tensor[(210, 336), uint8] */;
  (%1177, %1199, %var_10530, meta[relay.Constant][86] /* ty=Tensor[(192), int16] */, %var_10542, %1200, %1201, %1202)
}

def @func_7041() -> (Tensor[(15, 2, 7), float32],) {
  %1203 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
  %1204 = %1203.2;
  (%1204,)
}

def @func_1596(%var_1587: uint8, %var_1588: Tensor[(15, 10, 14), uint8]) -> (Tensor[(15, 10, 14), uint8],) {
  %1205 = cast(%var_1587, dtype="uint8") /* ty=uint8 */;
  %1206 = cast(%var_1588, dtype="uint8") /* ty=Tensor[(15, 10, 14), uint8] */;
  %1207 = bitwise_or(%1205, %1206) /* ty=Tensor[(15, 10, 14), uint8] */;
  (%1207,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_12254(%var_12253: Tensor[(15, 4, 2), float64]) -> Tensor[(15, 4, 2), float32] {
  %6 = fn (%var_12241: Tensor[(15, 4, 2), float64]) -> Tensor[(15, 4, 2), float32] {
    %0 = cast(%var_12241, dtype="float64") /* ty=Tensor[(15, 4, 2), float64] */;
    %1 = asin(%0) /* ty=Tensor[(15, 4, 2), float64] */;
    %2 = cast(%var_12241, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
    %3 = shape_of(%1, dtype="int32") /* ty=Tensor[(3), int32] */;
    %4 = cast(%1, dtype="float32") /* ty=Tensor[(15, 4, 2), float32] */;
    %5 = dyn.reshape(%2, %3, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%4, %5) /* ty=Tensor[(15, 4, 2), float32] */
  };
  %6(%var_12253) /* ty=Tensor[(15, 4, 2), float32] */
}

def @func_4646(%var_4642: Tensor[(858), uint64]) -> (Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 3, 5), int8] */, dtype="int8") /* ty=Tensor[(16, 3, 5), int8] */;
  %8 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(16, 3, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(16, 3, 5), int8] */, dtype="int8") /* ty=Tensor[(16, 3, 5), int8] */;
  %10 = dyn.reshape(%7, %8, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %11 = cast(%var_4642, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %12 = reshape(%11, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %13 = @func_320(%12) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %14 = left_shift(%9, %10) /* ty=Tensor[(16, 3, 5), int8] */;
  %15 = %13.0;
  (%14, %15, %var_4642)
}

def @func_7054() -> (Tensor[(15, 2, 7), float32],) {
  @func_7052() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_1196(%var_1121: Tensor[(10, 14, 10), float64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) {
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %17 = reshape(%16, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %18 = @func_320(%17) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %19 = cast(%var_1121, dtype="float64") /* ty=Tensor[(10, 14, 10), float64] */;
  %20 = asin(%19) /* ty=Tensor[(10, 14, 10), float64] */;
  %21 = cast(%20, dtype="float64") /* ty=Tensor[(10, 14, 10), float64] */;
  %22 = log(%21) /* ty=Tensor[(10, 14, 10), float64] */;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(10, 14, 10), float64] */;
  %24 = %18.0;
  %25 = cast(%24, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %26 = reshape(%25, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %27 = @func_320(%26) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %28 = acosh(%23) /* ty=Tensor[(10, 14, 10), float64] */;
  %29 = %27.0;
  (%24, meta[relay.Constant][2] /* ty=Tensor[(858), uint64] */, %28, %29)
}

def @func_4508(%var_4507: Tensor[(15, 2, 7), float32]) -> (Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) {
  %47 = fn (%var_4487: Tensor[(15, 2, 7), float32]) -> (Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) {
    %30 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
    %31 = cast(%30, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
    %32 = cast(meta[relay.Constant][3] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
    %33 = cast(meta[relay.Constant][3] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
    %34 = reshape(%32, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
    %35 = reshape(%33, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
    %36 = @func_686(%34, %35) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %37 = cast(%var_4487, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
    %38 = shape_of(%30, dtype="int32") /* ty=Tensor[(3), int32] */;
    %39 = cast(%30, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
    %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %41 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %42 = acosh(%31) /* ty=Tensor[(15, 2, 7), float64] */;
    %43 = %36.1;
    %44 = subtract(%39, %40) /* ty=Tensor[(15, 2, 7), uint8] */;
    %45 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
    %46 = %41.0;
    (%42, %43, meta[relay.Constant][3] /* ty=Tensor[(192), int16] */, %44, %45, %46)
  };
  %47(%var_4507) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */
}

def @func_1963(%var_1961: Tensor[(9, 2, 5), bool], %var_1962: Tensor[(9, 2, 5), bool]) -> (Tensor[(9, 2, 5), bool],) {
  %53 = fn (%var_1937: Tensor[(9, 2, 5), bool], %var_1938: Tensor[(9, 2, 5), bool]) -> (Tensor[(9, 2, 5), bool],) {
    %48 = cast(%var_1938, dtype="bool") /* ty=Tensor[(9, 2, 5), bool] */;
    %49 = shape_of(%var_1937, dtype="int32") /* ty=Tensor[(3), int32] */;
    %50 = cast(%var_1937, dtype="bool") /* ty=Tensor[(9, 2, 5), bool] */;
    %51 = dyn.reshape(%48, %49, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %52 = logical_and(%50, %51) /* ty=Tensor[(9, 2, 5), bool] */;
    (%52,)
  };
  %53(%var_1961, %var_1962) /* ty=(Tensor[(9, 2, 5), bool],) */
}

def @func_4195() -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %54 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %55 = cast(%54, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %56 = reshape(%55, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %57 = cast(meta[relay.Constant][4] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %58 = reshape(%57, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %59 = @func_320(%58) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %60 = @func_3933(%56) /* ty=Tensor[(15, 2, 7), int16] */;
  %61 = %59.0;
  (%54, %60, %61, meta[relay.Constant][4] /* ty=Tensor[(858), uint64] */)
}

def @func_5065(%var_5013: Tensor[(15, 2, 7), float32], %var_5027: Tensor[(1050), int32], %var_5044: Tensor[(168, 2), float32], %var_5045: Tensor[(192, 1), int16], %var_5046: uint8) -> (Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) {
  %62 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %63 = cast(%var_5013, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %64 = shape_of(%62, dtype="int32") /* ty=Tensor[(3), int32] */;
  %65 = cast(%62, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %66 = dyn.reshape(%63, %64, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %67 = cast(%var_5027, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %68 = cast(%var_5027, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %69 = reshape(%67, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %70 = reshape(%68, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %71 = @func_3977() /* ty=Tensor[(15, 2, 7), float32] */;
  %72 = cast(%71, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %73 = cast(%var_5044, dtype="float32") /* ty=Tensor[(168, 2), float32] */;
  %74 = cast(%var_5045, dtype="int16") /* ty=Tensor[(192, 1), int16] */;
  %75 = cast(%var_5046, dtype="uint8") /* ty=uint8 */;
  %76 = reshape(%73, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %77 = reshape(%74, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %78 = reshape(%75, newshape=[]) /* ty=uint8 */;
  %79 = @func_3551(%76, %77, %78) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) */;
  %80 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %82 = reshape(%81, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %83 = power(%65, %66) /* ty=Tensor[(15, 2, 7), float64] */;
  %84 = @func_2159(%69, %70) /* ty=Tensor[(7, 15, 10), int32] */;
  %85 = log2(%72) /* ty=Tensor[(15, 2, 7), float64] */;
  %86 = %79.5;
  %87 = @func_3933(%82) /* ty=Tensor[(15, 2, 7), int16] */;
  (%83, %80, %84, %var_5027, %85, %86, %var_5044, %var_5045, %var_5046, %87)
}

def @func_12134(%var_12133: Tensor[(336), int16]) -> (Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) {
  %95 = fn (%var_12088: Tensor[(336), int16]) -> (Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) {
    %88 = @func_11497() /* ty=(Tensor[(15, 2, 7), int16],) */;
    %89 = cast(meta[relay.Constant][5] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %90 = cast(%var_12088, dtype="int16") /* ty=Tensor[(336), int16] */;
    %91 = reshape(%89, newshape=[]) /* ty=int16 */;
    %92 = reshape(%90, newshape=[8, 7, 6]) /* ty=Tensor[(8, 7, 6), int16] */;
    %93 = %88.0;
    %94 = @func_1017(%91, %92) /* ty=Tensor[(8, 7, 6), int16] */;
    (%93, %94, meta[relay.Constant][5] /* ty=int16 */, %var_12088)
  };
  %95(%var_12133) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */
}

def @func_11594() -> Tensor[(15, 2, 7), float32] {
  %96 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_7509() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %96() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_5613() -> Tensor[(15, 2, 7), bool] {
  %105 = fn () -> Tensor[(15, 2, 7), bool] {
    %97 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
    %98 = %97.0;
    %99 = cast(%98, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
    %100 = sigmoid(%99) /* ty=Tensor[(15, 2, 7), float64] */;
    %101 = cast(%98, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
    %102 = shape_of(%100, dtype="int32") /* ty=Tensor[(3), int32] */;
    %103 = cast(%100, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
    %104 = dyn.reshape(%101, %102, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%103, %104) /* ty=Tensor[(15, 2, 7), bool] */
  };
  %105() /* ty=Tensor[(15, 2, 7), bool] */
}

def @func_2159(%var_2147: Tensor[(7, 15, 10), int32], %var_2148: Tensor[(7, 15, 10), int32]) -> Tensor[(7, 15, 10), int32] {
  %106 = cast(%var_2148, dtype="int32") /* ty=Tensor[(7, 15, 10), int32] */;
  %107 = shape_of(%var_2147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %108 = cast(%var_2147, dtype="int32") /* ty=Tensor[(7, 15, 10), int32] */;
  %109 = dyn.reshape(%106, %107, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_or(%108, %109) /* ty=Tensor[(7, 15, 10), int32] */
}

def @func_7671() -> Tensor[(15, 2, 7), float32] {
  %111 = fn () -> Tensor[(15, 2, 7), float32] {
    %110 = @func_6418() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %110.0
  };
  %111() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_1773(%var_1748: Tensor[(8, 9, 3), uint8], %var_1749: Tensor[(8, 9, 3), uint8], %var_1768: Tensor[(1, 2100), uint8]) -> (Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) {
  %112 = cast(%var_1749, dtype="bool") /* ty=Tensor[(8, 9, 3), bool] */;
  %113 = shape_of(%var_1748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_1748, dtype="bool") /* ty=Tensor[(8, 9, 3), bool] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %116 = cast(meta[relay.Constant][6] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %117 = cast(%var_1768, dtype="uint8") /* ty=Tensor[(1, 2100), uint8] */;
  %118 = reshape(%116, newshape=[]) /* ty=uint8 */;
  %119 = reshape(%117, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %120 = @func_1596(%118, %119) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %121 = not_equal(%114, %115) /* ty=Tensor[(8, 9, 3), bool] */;
  %122 = %120.0;
  (%121, %122, meta[relay.Constant][6] /* ty=uint8 */, %var_1768)
}

def @func_7446(%var_7444: Tensor[(2100), uint8], %var_7445: Tensor[(24, 14), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(24, 8), int16], Tensor[(24, 14), float32], uint8) {
  %136 = fn (%var_7430: Tensor[(2100), uint8], %var_7437: Tensor[(24, 14), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(24, 8), int16], Tensor[(24, 14), float32], uint8) {
    %123 = cast(%var_7430, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %124 = cast(meta[relay.Constant][7] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %125 = reshape(%123, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %126 = reshape(%124, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %127 = @func_4062(%125, %126) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
    %128 = cast(%var_7437, dtype="float32") /* ty=Tensor[(24, 14), float32] */;
    %129 = cast(meta[relay.Constant][8] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %130 = reshape(%128, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %131 = reshape(%129, newshape=[]) /* ty=uint8 */;
    %132 = @func_5652(%130, %131) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
    %133 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
    %134 = %127.0;
    %135 = %132.4;
    (%133, %134, %var_7430, meta[relay.Constant][7] /* ty=Tensor[(1050), int32] */, %135, %var_7437, meta[relay.Constant][8] /* ty=uint8 */)
  };
  %136(%var_7444, %var_7445) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(24, 8), int16], Tensor[(24, 14), float32], uint8) */
}

def @func_8387() -> Tensor[(15, 2, 7), float32] {
  @func_6805() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_320(%var_314: Tensor[(11, 13, 6), uint64]) -> (Tensor[(11, 13, 6), uint64],) {
  %137 = cast(meta[relay.Constant][9] /* ty=Tensor[(1, 13, 6), uint64] */, dtype="uint64") /* ty=Tensor[(1, 13, 6), uint64] */;
  %138 = cast(%var_314, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %139 = logical_xor(%137, %138) /* ty=Tensor[(11, 13, 6), uint64] */;
  (%139,)
}

def @func_8238(%var_8236: int32, %var_8237: Tensor[(16, 14, 5), int32]) -> (Tensor[(16, 14, 5), int32],) {
  @func_8234(%var_8236, %var_8237) /* ty=(Tensor[(16, 14, 5), int32],) */
}

def @func_7052() -> (Tensor[(15, 2, 7), float32],) {
  %140 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %141 = %140.0;
  (%141,)
}

def @func_7137() -> (Tensor[(15, 2, 7), int16],) {
  %142 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %143 = %142.0;
  (%143,)
}

def @func_8131() -> Tensor[(15, 2, 7), int16] {
  %144 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %144.0
}

def @func_4197() -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */
}

def @func_3691(%var_3666: Tensor[(15, 2, 7), float32], %var_3674: uint8, %var_3682: Tensor[(336), float32], %var_3683: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(192), int16], Tensor[(7, 4, 12), float64]) {
  %145 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %146 = %145.0;
  %147 = cast(%var_3666, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %148 = shape_of(%146, dtype="int32") /* ty=Tensor[(3), int32] */;
  %149 = cast(%146, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %150 = dyn.reshape(%147, %148, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %151 = cast(%var_3674, dtype="uint8") /* ty=uint8 */;
  %152 = cast(meta[relay.Constant][10] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %153 = reshape(%151, newshape=[]) /* ty=uint8 */;
  %154 = reshape(%152, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %155 = @func_1596(%153, %154) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %156 = cast(%var_3682, dtype="float32") /* ty=Tensor[(336), float32] */;
  %157 = cast(%var_3683, dtype="int16") /* ty=Tensor[(192), int16] */;
  %158 = cast(%var_3674, dtype="uint8") /* ty=uint8 */;
  %159 = %155.0;
  %160 = cast(%159, dtype="uint8") /* ty=Tensor[(15, 10, 14), uint8] */;
  %161 = reshape(%156, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %162 = reshape(%157, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %163 = reshape(%158, newshape=[]) /* ty=uint8 */;
  %164 = reshape(%160, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %165 = @func_3408(%161, %162, %163, %164) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %166 = %165.1;
  %167 = cast(%166, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
  %168 = less_equal(%149, %150) /* ty=Tensor[(15, 2, 7), bool] */;
  %169 = acos(%167) /* ty=Tensor[(7, 4, 12), float64] */;
  (%168, %159, %var_3674, meta[relay.Constant][10] /* ty=Tensor[(2100), uint8] */, %var_3682, %var_3683, %169)
}

def @func_10673() -> (Tensor[(15, 2, 7), float32],) {
  @func_10671() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_7293() -> Tensor[(15, 2, 7), int16] {
  @func_7291() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_10106(%var_10104: uint8) -> (Tensor[(192), int16], Tensor[(1050), int32], Tensor[(336), float32], uint8) {
  @func_10103(%var_10104) /* ty=(Tensor[(192), int16], Tensor[(1050), int32], Tensor[(336), float32], uint8) */
}

def @func_7139() -> (Tensor[(15, 2, 7), int16],) {
  @func_7137() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_9493() -> Tensor[(15, 2, 7), float32] {
  @func_9352() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_5655(%var_5653: Tensor[(336), float32], %var_5654: uint8) -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) {
  %184 = fn (%var_5648: Tensor[(336), float32], %var_5650: uint8) -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) {
    %170 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
    %171 = %170.0;
    %172 = cast(%171, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %173 = cast(meta[relay.Constant][11] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %174 = cast(%var_5648, dtype="float32") /* ty=Tensor[(336), float32] */;
    %175 = cast(meta[relay.Constant][12] /* ty=Tensor[(24, 8), int16] */, dtype="int16") /* ty=Tensor[(24, 8), int16] */;
    %176 = cast(%var_5650, dtype="uint8") /* ty=uint8 */;
    %177 = reshape(%172, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %178 = reshape(%173, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %179 = reshape(%174, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
    %180 = reshape(%175, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
    %181 = reshape(%176, newshape=[]) /* ty=uint8 */;
    %182 = @func_5065(%177, %178, %179, %180, %181) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
    %183 = %182.4;
    (%171, %183, meta[relay.Constant][11] /* ty=Tensor[(1050), int32] */, %var_5648, meta[relay.Constant][12] /* ty=Tensor[(24, 8), int16] */, %var_5650)
  };
  %184(%var_5653, %var_5654) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */
}

def @func_7677() -> (Tensor[(336), int16],) {
  %185 = @func_7236() /* ty=(Tensor[(336), int16],) */;
  %186 = %185.0;
  (%186,)
}

def @func_9229() -> (Tensor[(15, 2, 7), float32],) {
  %187 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %188 = %187.0;
  %189 = cast(%188, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %190 = tan(%189) /* ty=Tensor[(15, 2, 7), float32] */;
  (%190,)
}

def @func_11695() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), bool]) {
  %194 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), bool]) {
    %191 = @func_7813() /* ty=(Tensor[(15, 2, 7), bool],) */;
    %192 = @func_10281() /* ty=Tensor[(15, 2, 7), int16] */;
    %193 = %191.0;
    (%192, %193)
  };
  %194() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), bool]) */
}

def @func_4916() -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) {
  %200 = fn () -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) {
    %195 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %196 = %195.0;
    %197 = cast(%196, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %198 = reshape(%197, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %199 = @func_3933(%198) /* ty=Tensor[(15, 2, 7), int16] */;
    (%196, %199)
  };
  %200() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */
}

def @func_4411() -> (Tensor[(15, 2, 7), float32],) {
  %201 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  (%201,)
}

def @func_323(%var_321: Tensor[(11, 13, 6), uint64]) -> (Tensor[(11, 13, 6), uint64],) {
  @func_320(%var_321) /* ty=(Tensor[(11, 13, 6), uint64],) */
}

def @func_4966() -> Tensor[(11, 13, 6), uint64] {
  %202 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %202.2
}

def @func_4268(%var_4262: Tensor[(9, 14, 11), int64], %var_4263: Tensor[(9, 14, 11), int64]) -> (Tensor[(9, 14, 11), int64],) {
  %203 = cast(%var_4263, dtype="int64") /* ty=Tensor[(9, 14, 11), int64] */;
  %204 = shape_of(%var_4262, dtype="int32") /* ty=Tensor[(3), int32] */;
  %205 = cast(%var_4262, dtype="int64") /* ty=Tensor[(9, 14, 11), int64] */;
  %206 = dyn.reshape(%203, %204, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %207 = bitwise_or(%205, %206) /* ty=Tensor[(9, 14, 11), int64] */;
  (%207,)
}

def @func_6005(%var_6002: Tensor[(15, 3, 10), float32]) -> (Tensor[(15, 3, 10), float32],) {
  %208 = cast(%var_6002, dtype="float32") /* ty=Tensor[(15, 3, 10), float32] */;
  %209 = sqrt(%208) /* ty=Tensor[(15, 3, 10), float32] */;
  (%209,)
}

def @func_10360() -> Tensor[(15, 2, 7), int16] {
  %210 = @func_8023() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %210.0
}

def @func_7132(%var_7130: Tensor[(8, 16, 7), float32], %var_7131: Tensor[(8, 16, 7), float32]) -> (Tensor[(8, 16, 7), float32],) {
  %216 = fn (%var_7122: Tensor[(8, 16, 7), float32], %var_7123: Tensor[(8, 16, 7), float32]) -> (Tensor[(8, 16, 7), float32],) {
    %211 = cast(%var_7123, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
    %212 = shape_of(%var_7122, dtype="int32") /* ty=Tensor[(3), int32] */;
    %213 = cast(%var_7122, dtype="float32") /* ty=Tensor[(8, 16, 7), float32] */;
    %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %215 = floor_mod(%213, %214) /* ty=Tensor[(8, 16, 7), float32] */;
    (%215,)
  };
  %216(%var_7130, %var_7131) /* ty=(Tensor[(8, 16, 7), float32],) */
}

def @func_12192() -> (Tensor[(15, 2, 7), int16],) {
  %217 = @func_7291() /* ty=Tensor[(15, 2, 7), int16] */;
  (%217,)
}

def @func_7236() -> (Tensor[(336), int16],) {
  %218 = @func_4991() /* ty=(Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
  %219 = %218.3;
  (%219,)
}

def @func_10730() -> Tensor[(15, 2, 7), int16] {
  %220 = @func_9397() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %220.0
}

def @func_4773() -> Tensor[(15, 2, 7), int16] {
  %221 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %221.0
}

def @func_5279(%var_5277: Tensor[(8, 2, 2), float64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(1440), float64], Tensor[(8, 2, 2), bool]) {
  @func_5276(%var_5277) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1440), float64], Tensor[(8, 2, 2), bool]) */
}

def @func_10662() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) {
  %227 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) {
    %222 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
    %223 = %222.0;
    %224 = cast(%223, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %225 = reshape(%224, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %226 = @func_3933(%225) /* ty=Tensor[(15, 2, 7), int16] */;
    (%223, %226)
  };
  %227() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) */
}

def @func_11962() -> (Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) {
  %228 = @func_11271() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(192), int16], Tensor[(858), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), int16], Tensor[(1, 2100), uint8], Tensor[(4, 28), uint64], Tensor[(15, 2, 7), float32]) */;
  %229 = @func_10661() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) */;
  %230 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
  %231 = @func_11748() /* ty=Tensor[(9, 2, 5), bool] */;
  %232 = %228.7;
  %233 = %229.0;
  (%230, %231, %232, %233)
}

def @func_7510() -> Tensor[(15, 2, 7), float32] {
  %234 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_5172() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %234() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_3979() -> Tensor[(15, 2, 7), float32] {
  @func_3977() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_6926(%var_6924: Tensor[(2100), float64]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(2100), bool]) {
  @func_6923(%var_6924) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(2100), bool]) */
}

def @func_7232(%var_7230: Tensor[(216), uint8], %var_7231: Tensor[(30, 70), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) {
  @func_7228(%var_7230, %var_7231) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) */
}

def @func_3408(%var_3363: Tensor[(2, 168), float32], %var_3378: Tensor[(192), int16], %var_3385: uint8, %var_3386: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) {
  %235 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %236 = cast(%var_3363, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
  %237 = reshape(%236, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %238 = @func_2532(%237) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %239 = cast(%var_3378, dtype="int16") /* ty=Tensor[(192), int16] */;
  %240 = cast(%var_3378, dtype="int16") /* ty=Tensor[(192), int16] */;
  %241 = reshape(%239, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %242 = reshape(%240, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %243 = @func_686(%241, %242) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %244 = cast(%var_3385, dtype="uint8") /* ty=uint8 */;
  %245 = cast(%var_3386, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %246 = reshape(%244, newshape=[]) /* ty=uint8 */;
  %247 = reshape(%245, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %248 = @func_1596(%246, %247) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %249 = cast(meta[relay.Constant][13] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %250 = cast(meta[relay.Constant][13] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %251 = reshape(%249, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %252 = reshape(%250, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %253 = %235.0;
  %254 = %238.0;
  %255 = %243.2;
  %256 = %248.0;
  %257 = @func_2159(%251, %252) /* ty=Tensor[(7, 15, 10), int32] */;
  (%253, %254, %var_3363, %255, %var_3378, %256, %var_3385, %var_3386, %257, meta[relay.Constant][13] /* ty=Tensor[(1050), int32] */)
}

def @func_3952() -> Tensor[(15, 2, 7), float32] {
  @func_3950() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_4338() -> (Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) {
  %270 = fn () -> (Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) {
    %258 = @func_3977() /* ty=Tensor[(15, 2, 7), float32] */;
    %259 = cast(%258, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %260 = reshape(%259, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %261 = cast(meta[relay.Constant][14] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %262 = cast(meta[relay.Constant][14] /* ty=Tensor[(1440), float64] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
    %263 = reshape(%261, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
    %264 = reshape(%262, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
    %265 = @func_943(%263, %264) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %266 = %265.3;
    %267 = cast(%266, dtype="float32") /* ty=Tensor[(858), float32] */;
    %268 = @func_4127(%260) /* ty=Tensor[(15, 2, 7), float64] */;
    %269 = rsqrt(%267) /* ty=Tensor[(858), float32] */;
    (%258, meta[relay.Constant][14] /* ty=Tensor[(1440), float64] */, %268, %269)
  };
  %270() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */
}

def @func_7856() -> Tensor[(15, 2, 7), float32] {
  @func_7854() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_8726(%var_8722: Tensor[(2100), uint8], %var_8723: Tensor[(112), uint64], %var_8724: Tensor[(858), uint64], %var_8725: Tensor[(858), uint64]) -> (Tensor[(15, 2, 7), int16], Tensor[(216), uint8], Tensor[(2100), uint8], int16, Tensor[(112), uint64], Tensor[(1456), uint64], Tensor[(336), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(216, 1), float64]) {
  @func_8720(%var_8722, %var_8723, %var_8724, %var_8725) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(216), uint8], Tensor[(2100), uint8], int16, Tensor[(112), uint64], Tensor[(1456), uint64], Tensor[(336), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(216, 1), float64]) */
}

def @func_3414(%var_3410: Tensor[(2, 168), float32], %var_3411: Tensor[(192), int16], %var_3412: uint8, %var_3413: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) {
  @func_3408(%var_3410, %var_3411, %var_3412, %var_3413) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */
}

def @func_8991() -> (Tensor[(15, 2, 7), bool],) {
  %272 = fn () -> (Tensor[(15, 2, 7), bool],) {
    %271 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
    (%271,)
  };
  %272() /* ty=(Tensor[(15, 2, 7), bool],) */
}

def @func_947(%var_945: Tensor[(12, 8, 15), float64], %var_946: Tensor[(12, 8, 15), bool]) -> (Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  @func_943(%var_945, %var_946) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */
}

def @func_7204() -> Tensor[(15, 2, 7), float32] {
  %273 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_6442() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %273() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_6008(%var_6006: Tensor[(15, 3, 10), float32]) -> (Tensor[(15, 3, 10), float32],) {
  @func_6005(%var_6006) /* ty=(Tensor[(15, 3, 10), float32],) */
}

def @func_10961() -> Tensor[(9, 2, 5), bool] {
  %275 = fn () -> Tensor[(9, 2, 5), bool] {
    %274 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
    %274.6
  };
  %275() /* ty=Tensor[(9, 2, 5), bool] */
}

def @func_10386() -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float64], Tensor[(210), float32]) {
  %280 = fn () -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float64], Tensor[(210), float32]) {
    %276 = cast(meta[relay.Constant][15] /* ty=Tensor[(210), float32] */, dtype="float32") /* ty=Tensor[(210), float32] */;
    %277 = reshape(%276, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %278 = @func_5095() /* ty=Tensor[(11, 13, 6), uint64] */;
    %279 = @func_4127(%277) /* ty=Tensor[(15, 2, 7), float64] */;
    (%278, %279, meta[relay.Constant][15] /* ty=Tensor[(210), float32] */)
  };
  %280() /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float64], Tensor[(210), float32]) */
}

def @func_11273() -> (Tensor[(15, 2, 7), bool], Tensor[(192), int16], Tensor[(858), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), int16], Tensor[(1, 2100), uint8], Tensor[(4, 28), uint64], Tensor[(15, 2, 7), float32]) {
  @func_11271() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(192), int16], Tensor[(858), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), int16], Tensor[(1, 2100), uint8], Tensor[(4, 28), uint64], Tensor[(15, 2, 7), float32]) */
}

def @func_11841(%var_11840: uint8) -> (Tensor[(11, 13, 6), float64], Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(1, 192), int16], uint8) {
  %297 = fn (%var_11834: uint8) -> (Tensor[(11, 13, 6), float64], Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(1, 192), int16], uint8) {
    %281 = @func_4966() /* ty=Tensor[(11, 13, 6), uint64] */;
    %282 = cast(%281, dtype="float64") /* ty=Tensor[(11, 13, 6), float64] */;
    %283 = @func_6401() /* ty=Tensor[(15, 2, 7), float32] */;
    %284 = cast(%283, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %285 = cast(meta[relay.Constant][16] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %286 = cast(meta[relay.Constant][17] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
    %287 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 192), int16] */, dtype="int16") /* ty=Tensor[(1, 192), int16] */;
    %288 = cast(%var_11834, dtype="uint8") /* ty=uint8 */;
    %289 = reshape(%284, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %290 = reshape(%285, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %291 = reshape(%286, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
    %292 = reshape(%287, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
    %293 = reshape(%288, newshape=[]) /* ty=uint8 */;
    %294 = @func_5065(%289, %290, %291, %292, %293) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
    %295 = cosh(%282) /* ty=Tensor[(11, 13, 6), float64] */;
    %296 = %294.3;
    (%295, %283, %296, meta[relay.Constant][16] /* ty=Tensor[(1050), int32] */, meta[relay.Constant][17] /* ty=Tensor[(336), float32] */, meta[relay.Constant][18] /* ty=Tensor[(1, 192), int16] */, %var_11834)
  };
  %297(%var_11840) /* ty=(Tensor[(11, 13, 6), float64], Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(1, 192), int16], uint8) */
}

def @func_4557() -> (Tensor[(15, 2, 7), int16],) {
  %300 = fn () -> (Tensor[(15, 2, 7), int16],) {
    %298 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %299 = %298.1;
    (%299,)
  };
  %300() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_5250() -> (Tensor[(15, 2, 7), float32],) {
  %302 = fn () -> (Tensor[(15, 2, 7), float32],) {
    %301 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
    (%301,)
  };
  %302() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_9213() -> (Tensor[(15, 2, 7), bool],) {
  %303 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  (%303,)
}

def @func_7094(%var_7086: Tensor[(336), float32]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], uint8, Tensor[(336), float32], uint8) {
  %304 = @func_5826() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %305 = cast(%var_7086, dtype="float32") /* ty=Tensor[(336), float32] */;
  %306 = cast(meta[relay.Constant][19] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %307 = reshape(%305, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %308 = reshape(%306, newshape=[]) /* ty=uint8 */;
  %309 = @func_5652(%307, %308) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
  %310 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  %311 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
  %312 = %304.0;
  %313 = %309.5;
  (%310, %311, %312, %313, %var_7086, meta[relay.Constant][19] /* ty=uint8 */)
}

def @func_10464(%var_10425: Tensor[(1, 7, 6), float32], %var_10431: Tensor[(858), uint64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), uint8], Tensor[(105, 2), float32], Tensor[(?, 7, 6), bool]) {
  %314 = cast(%var_10431, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %315 = reshape(%314, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %316 = @func_4646(%315) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %317 = cast(meta[relay.Constant][20] /* ty=Tensor[(105, 2), float32] */, dtype="float32") /* ty=Tensor[(105, 2), float32] */;
  %318 = reshape(%317, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %319 = @func_4085(%318) /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float64]) */;
  %320 = cast(%var_10425, dtype="float32") /* ty=Tensor[(1, 7, 6), float32] */;
  %321 = cosh(%320) /* ty=Tensor[(1, 7, 6), float32] */;
  %322 = cast(%var_10425, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %323 = shape_of(%321, dtype="int32") /* ty=Tensor[(3), int32] */;
  %324 = cast(%321, dtype="bool") /* ty=Tensor[(1, 7, 6), bool] */;
  %325 = dyn.reshape(%322, %323, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %326 = %316.1;
  %327 = %319.1;
  %328 = greater_equal(%324, %325) /* ty=Tensor[(?, 7, 6), bool] */;
  (%326, %var_10431, %327, meta[relay.Constant][20] /* ty=Tensor[(105, 2), float32] */, %328)
}

def @func_10055() -> (Tensor[(15, 2, 7), bool],) {
  %331 = fn () -> (Tensor[(15, 2, 7), bool],) {
    %329 = @func_7541() /* ty=(Tensor[(15, 2, 7), bool],) */;
    %330 = %329.0;
    (%330,)
  };
  %331() /* ty=(Tensor[(15, 2, 7), bool],) */
}

def @func_5455(%var_5453: Tensor[(5, 8, 4), int64]) -> (Tensor[(5, 8, 4), int64],) {
  @func_5452(%var_5453) /* ty=(Tensor[(5, 8, 4), int64],) */
}

def @func_11939(%var_11924: Tensor[(48), float32]) -> (Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(3, 4, 4), uint64], Tensor[(48), float32], Tensor[(15, 2, 7), bool]) {
  %332 = @func_7137() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %333 = cast(meta[relay.Constant][21] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %334 = reshape(%333, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %335 = @func_4646(%334) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %336 = cast(%var_11924, dtype="float32") /* ty=Tensor[(48), float32] */;
  %337 = cast(%var_11924, dtype="float64") /* ty=Tensor[(48), float64] */;
  %338 = reshape(%336, newshape=[3, 4, 4]) /* ty=Tensor[(3, 4, 4), float32] */;
  %339 = reshape(%337, newshape=[3, 4, 4]) /* ty=Tensor[(3, 4, 4), float64] */;
  %340 = @func_8990() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %341 = %332.0;
  %342 = %335.1;
  %343 = @func_11461(%338, %339) /* ty=Tensor[(3, 4, 4), uint64] */;
  %344 = %340.0;
  (%341, %342, meta[relay.Constant][21] /* ty=Tensor[(858), uint64] */, %343, %var_11924, %344)
}

def @func_5713(%var_5700: Tensor[(336), float32]) -> (Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(7, 4, 12), bool], Tensor[(336), float32]) {
  %345 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %346 = cast(meta[relay.Constant][22] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %347 = cast(meta[relay.Constant][23] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %348 = reshape(%346, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %349 = reshape(%347, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %350 = @func_4062(%348, %349) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
  %351 = cast(%var_5700, dtype="float32") /* ty=Tensor[(336), float32] */;
  %352 = reshape(%351, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %353 = @func_2532(%352) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %354 = %345.0;
  %355 = %350.5;
  %356 = %353.0;
  (%354, %355, meta[relay.Constant][22] /* ty=Tensor[(2100), uint8] */, meta[relay.Constant][23] /* ty=Tensor[(1050), int32] */, %356, %var_5700)
}

def @func_9478() -> (Tensor[(15, 2, 7), float32], Tensor[(8, 2, 2), bool], Tensor[(32), float64]) {
  %363 = fn () -> (Tensor[(15, 2, 7), float32], Tensor[(8, 2, 2), bool], Tensor[(32), float64]) {
    %357 = @func_6024() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %358 = cast(meta[relay.Constant][24] /* ty=Tensor[(32), float64] */, dtype="float64") /* ty=Tensor[(32), float64] */;
    %359 = reshape(%358, newshape=[8, 2, 2]) /* ty=Tensor[(8, 2, 2), float64] */;
    %360 = @func_5276(%359) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1440), float64], Tensor[(8, 2, 2), bool]) */;
    %361 = %357.0;
    %362 = %360.2;
    (%361, %362, meta[relay.Constant][24] /* ty=Tensor[(32), float64] */)
  };
  %363() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 2, 2), bool], Tensor[(32), float64]) */
}

def @func_10646() -> (Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8]) {
  %364 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %365 = cast(meta[relay.Constant][25] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %366 = reshape(%365, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %367 = @func_9673(%366) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) */;
  %368 = %364.0;
  %369 = %367.1;
  (%368, %369, meta[relay.Constant][25] /* ty=Tensor[(2100), uint8] */)
}

def @func_5827() -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) {
  %373 = fn () -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) {
    %370 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
    %371 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
    %372 = %370.0;
    (%371, %372)
  };
  %373() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */
}

def @func_11461(%var_11437: Tensor[(3, 4, 4), float32], %var_11449: Tensor[(3, 4, 4), float64]) -> Tensor[(3, 4, 4), uint64] {
  %374 = cast(%var_11437, dtype="float32") /* ty=Tensor[(3, 4, 4), float32] */;
  %375 = sigmoid(%374) /* ty=Tensor[(3, 4, 4), float32] */;
  %376 = cast(%375, dtype="float64") /* ty=Tensor[(3, 4, 4), float64] */;
  %377 = shape_of(%var_11437, dtype="int32") /* ty=Tensor[(3), int32] */;
  %378 = cast(%var_11437, dtype="float64") /* ty=Tensor[(3, 4, 4), float64] */;
  %379 = dyn.reshape(%376, %377, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %380 = mod(%378, %379) /* ty=Tensor[(3, 4, 4), float64] */;
  %381 = cast(%var_11449, dtype="uint64") /* ty=Tensor[(3, 4, 4), uint64] */;
  %382 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %383 = cast(%380, dtype="uint64") /* ty=Tensor[(3, 4, 4), uint64] */;
  %384 = dyn.reshape(%381, %382, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  multiply(%383, %384) /* ty=Tensor[(3, 4, 4), uint64] */
}

def @func_2411(%var_2406: Tensor[(12, 6, 13), uint16], %var_2407: Tensor[(12, 6, 13), uint16], %var_2408: Tensor[(1050), int32], %var_2409: Tensor[(216), uint8], %var_2410: Tensor[(2100), uint8]) -> (Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) {
  @func_2404(%var_2406, %var_2407, %var_2408, %var_2409, %var_2410) /* ty=(Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) */
}

def @func_6443() -> Tensor[(15, 2, 7), float32] {
  %385 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_3956() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %385() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_4856() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
  %389 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
    %386 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %387 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
    %388 = %386.0;
    (%387, %388)
  };
  %389() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */
}

def @func_11271() -> (Tensor[(15, 2, 7), bool], Tensor[(192), int16], Tensor[(858), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), int16], Tensor[(1, 2100), uint8], Tensor[(4, 28), uint64], Tensor[(15, 2, 7), float32]) {
  %390 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  %391 = cast(%390, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %392 = reshape(%391, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %393 = @func_4506(%392) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %394 = cast(meta[relay.Constant][26] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %395 = cast(meta[relay.Constant][26] /* ty=Tensor[(858), uint64] */, dtype="float64") /* ty=Tensor[(858), float64] */;
  %396 = reshape(%394, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %397 = reshape(%395, newshape=[858]) /* ty=Tensor[(858), float64] */;
  %398 = @func_5979(%396, %397) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(7, 4, 12), bool], Tensor[(336), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(858), uint64], Tensor[(858), float32]) */;
  %399 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 2100), uint8] */, dtype="uint8") /* ty=Tensor[(1, 2100), uint8] */;
  %400 = cast(meta[relay.Constant][28] /* ty=Tensor[(4, 28), uint64] */, dtype="uint64") /* ty=Tensor[(4, 28), uint64] */;
  %401 = cast(meta[relay.Constant][26] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %402 = %398.6;
  %403 = cast(%402, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %404 = reshape(%399, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %405 = reshape(%400, newshape=[112]) /* ty=Tensor[(112), uint64] */;
  %406 = reshape(%401, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %407 = reshape(%403, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %408 = @func_8720(%404, %405, %406, %407) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(216), uint8], Tensor[(2100), uint8], int16, Tensor[(112), uint64], Tensor[(1456), uint64], Tensor[(336), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(216, 1), float64]) */;
  %409 = @func_10671() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %410 = %393.2;
  %411 = %408.0;
  %412 = %409.0;
  (%390, %410, %402, meta[relay.Constant][26] /* ty=Tensor[(858), uint64] */, %411, meta[relay.Constant][27] /* ty=Tensor[(1, 2100), uint8] */, meta[relay.Constant][28] /* ty=Tensor[(4, 28), uint64] */, %412)
}

def @func_1021(%var_1019: int16, %var_1020: Tensor[(8, 7, 6), int16]) -> Tensor[(8, 7, 6), int16] {
  @func_1017(%var_1019, %var_1020) /* ty=Tensor[(8, 7, 6), int16] */
}

def @func_4400() -> (Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) {
  %439 = fn () -> (Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) {
    %413 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
    %414 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 78), uint64] */, dtype="uint64") /* ty=Tensor[(11, 78), uint64] */;
    %415 = reshape(%414, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
    %416 = @func_320(%415) /* ty=(Tensor[(11, 13, 6), uint64],) */;
    %417 = cast(meta[relay.Constant][30] /* ty=Tensor[(11, 78), uint64] */, dtype="int8") /* ty=Tensor[(11, 78), int8] */;
    %418 = shape_of(meta[relay.Constant][29] /* ty=Tensor[(11, 78), uint64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %419 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 78), uint64] */, dtype="int8") /* ty=Tensor[(11, 78), int8] */;
    %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %421 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
    %422 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 2, 7), float32] */, dtype="int32") /* ty=Tensor[(15, 2, 7), int32] */;
    %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
    %424 = cast(%421, dtype="int32") /* ty=Tensor[(15, 2, 7), int32] */;
    %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %426 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %427 = cast(meta[relay.Constant][32] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
    %428 = cast(meta[relay.Constant][32] /* ty=Tensor[(90), bool] */, dtype="bool") /* ty=Tensor[(90), bool] */;
    %429 = reshape(%427, newshape=[9, 2, 5]) /* ty=Tensor[(9, 2, 5), bool] */;
    %430 = reshape(%428, newshape=[9, 2, 5]) /* ty=Tensor[(9, 2, 5), bool] */;
    %431 = @func_1960(%429, %430) /* ty=(Tensor[(9, 2, 5), bool],) */;
    %432 = %413.2;
    %433 = %416.0;
    %434 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
    %435 = bitwise_xor(%419, %420) /* ty=Tensor[(11, 78), int8] */;
    %436 = left_shift(%424, %425) /* ty=Tensor[(15, 2, 7), int32] */;
    %437 = %426.0;
    %438 = %431.0;
    (%432, %433, %434, %435, %436, %437, %438, meta[relay.Constant][32] /* ty=Tensor[(90), bool] */)
  };
  %439() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */
}

def @func_6115(%var_6113: Tensor[(15, 8, 2), float64], %var_6114: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(15, 8, 2), float32], Tensor[(15, 10, 14), uint8]) {
  @func_6111(%var_6113, %var_6114) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(15, 8, 2), float32], Tensor[(15, 10, 14), uint8]) */
}

def @func_11112() -> Tensor[(15, 2, 7), float32] {
  %441 = fn () -> Tensor[(15, 2, 7), float32] {
    %440 = @func_9477() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 2, 2), bool], Tensor[(32), float64]) */;
    %440.0
  };
  %441() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_7004() -> Tensor[(15, 2, 7), float64] {
  %443 = fn () -> Tensor[(15, 2, 7), float64] {
    %442 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
    %442.2
  };
  %443() /* ty=Tensor[(15, 2, 7), float64] */
}

def @func_8514() -> Tensor[(15, 2, 7), float32] {
  %444 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_7670() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %444() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_7322(%var_7320: Tensor[(1050), int32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float32]) {
  @func_7319(%var_7320) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float32]) */
}

def @func_3555(%var_3552: Tensor[(336), float32], %var_3553: Tensor[(192), int16], %var_3554: uint8) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) {
  %461 = fn (%var_3523: Tensor[(336), float32], %var_3524: Tensor[(192), int16], %var_3525: uint8) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) {
    %445 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %446 = cast(%var_3523, dtype="float32") /* ty=Tensor[(336), float32] */;
    %447 = cast(%var_3524, dtype="int16") /* ty=Tensor[(192), int16] */;
    %448 = cast(%var_3525, dtype="uint8") /* ty=uint8 */;
    %449 = cast(meta[relay.Constant][33] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %450 = reshape(%446, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
    %451 = reshape(%447, newshape=[192]) /* ty=Tensor[(192), int16] */;
    %452 = reshape(%448, newshape=[]) /* ty=uint8 */;
    %453 = reshape(%449, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %454 = @func_3408(%450, %451, %452, %453) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
    %455 = cast(meta[relay.Constant][34] /* ty=Tensor[(28), float64] */, dtype="float64") /* ty=Tensor[(28), float64] */;
    %456 = reshape(%455, newshape=[7, 1, 4]) /* ty=Tensor[(7, 1, 4), float64] */;
    %457 = @func_2829(%456) /* ty=(Tensor[(7, 1, 4), float64], Tensor[(7, ?, 4), uint32], Tensor[(7, 1, 4), float32]) */;
    %458 = %445.0;
    %459 = %454.5;
    %460 = %457.0;
    (%458, %459, %var_3523, %var_3524, %var_3525, meta[relay.Constant][33] /* ty=Tensor[(2100), uint8] */, %460, meta[relay.Constant][34] /* ty=Tensor[(28), float64] */)
  };
  %461(%var_3552, %var_3553, %var_3554) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) */
}

def @func_3618(%var_3601: Tensor[(8, 24), int16], %var_3602: uint8, %var_3609: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(336), float32], Tensor[(336), float32], uint8, Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(8, 24), float32]) {
  %462 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %463 = cast(meta[relay.Constant][35] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %464 = cast(%var_3601, dtype="int16") /* ty=Tensor[(8, 24), int16] */;
  %465 = cast(%var_3602, dtype="uint8") /* ty=uint8 */;
  %466 = reshape(%463, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %467 = reshape(%464, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %468 = reshape(%465, newshape=[]) /* ty=uint8 */;
  %469 = @func_3551(%466, %467, %468) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(7, 1, 4), float64], Tensor[(28), float64]) */;
  %470 = %469.2;
  %471 = cast(%470, dtype="float32") /* ty=Tensor[(336), float32] */;
  %472 = cast(%var_3601, dtype="int16") /* ty=Tensor[(8, 24), int16] */;
  %473 = cast(%var_3602, dtype="uint8") /* ty=uint8 */;
  %474 = cast(%var_3609, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %475 = reshape(%471, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %476 = reshape(%472, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %477 = reshape(%473, newshape=[]) /* ty=uint8 */;
  %478 = reshape(%474, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %479 = @func_3408(%475, %476, %477, %478) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %480 = cast(%var_3601, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %481 = atanh(%480) /* ty=Tensor[(8, 24), float32] */;
  %482 = cast(%481, dtype="float32") /* ty=Tensor[(8, 24), float32] */;
  %483 = %462.0;
  %484 = %479.4;
  %485 = log(%482) /* ty=Tensor[(8, 24), float32] */;
  (%483, %470, meta[relay.Constant][35] /* ty=Tensor[(336), float32] */, %var_3602, %484, %var_3609, %485)
}

def @func_5452(%var_5445: Tensor[(5, 8, 4), int64]) -> (Tensor[(5, 8, 4), int64],) {
  %486 = cast(meta[relay.Constant][36] /* ty=Tensor[(5, 8, 4), int64] */, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
  %487 = shape_of(%var_5445, dtype="int32") /* ty=Tensor[(3), int32] */;
  %488 = cast(%var_5445, dtype="int64") /* ty=Tensor[(5, 8, 4), int64] */;
  %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %490 = bitwise_xor(%488, %489) /* ty=Tensor[(5, 8, 4), int64] */;
  (%490,)
}

def @func_6187(%var_6174: uint8) -> (Tensor[(90), bool], Tensor[(15, 2, 7), bool], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(15, 2, 7), bool]) {
  %491 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
  %492 = cast(meta[relay.Constant][37] /* ty=Tensor[(336, 1), float32] */, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %493 = cast(meta[relay.Constant][38] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %494 = cast(%var_6174, dtype="uint8") /* ty=uint8 */;
  %495 = cast(meta[relay.Constant][39] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %496 = reshape(%492, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %497 = reshape(%493, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %498 = reshape(%494, newshape=[]) /* ty=uint8 */;
  %499 = reshape(%495, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %500 = @func_3408(%496, %497, %498, %499) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %501 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %502 = %501.0;
  %503 = cast(%502, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %504 = cast(%var_6174, dtype="bool") /* ty=bool */;
  %505 = %491.7;
  %506 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  %507 = %500.1;
  %508 = greater(%503, %504) /* ty=Tensor[(15, 2, 7), bool] */;
  (%505, %506, %507, meta[relay.Constant][37] /* ty=Tensor[(336, 1), float32] */, meta[relay.Constant][38] /* ty=Tensor[(192), int16] */, meta[relay.Constant][39] /* ty=Tensor[(2100), uint8] */, %508)
}

def @func_5173() -> Tensor[(15, 2, 7), float32] {
  %510 = fn () -> Tensor[(15, 2, 7), float32] {
    %509 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %509.0
  };
  %510() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_1199(%var_1197: Tensor[(10, 14, 10), float64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) {
  @func_1196(%var_1197) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) */
}

def @func_3977() -> Tensor[(15, 2, 7), float32] {
  %511 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %511.0
}

def @func_4161() -> Tensor[(15, 2, 7), float32] {
  %513 = fn () -> Tensor[(15, 2, 7), float32] {
    %512 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %512.0
  };
  %513() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_6806() -> Tensor[(15, 2, 7), float32] {
  %514 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_3950() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %514() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_3957() -> Tensor[(15, 2, 7), float32] {
  %515 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_3950() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %515() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_4879(%var_4870: uint8) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(15, 10, 14), uint8], Tensor[(1050), int32]) {
  %516 = cast(%var_4870, dtype="uint8") /* ty=uint8 */;
  %517 = cast(meta[relay.Constant][40] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %518 = reshape(%516, newshape=[]) /* ty=uint8 */;
  %519 = reshape(%517, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
  %520 = @func_1596(%518, %519) /* ty=(Tensor[(15, 10, 14), uint8],) */;
  %521 = cast(meta[relay.Constant][40] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %522 = cast(meta[relay.Constant][41] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %523 = reshape(%521, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %524 = reshape(%522, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
  %525 = @func_4062(%523, %524) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
  %526 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %527 = %520.0;
  %528 = %525.1;
  (%526, %527, %var_4870, meta[relay.Constant][40] /* ty=Tensor[(2100), uint8] */, %528, meta[relay.Constant][41] /* ty=Tensor[(1050), int32] */)
}

def @func_11078() -> (Tensor[(15, 2, 7), bool], Tensor[(9, 14, 11), int64], Tensor[(1386), int64]) {
  %537 = fn () -> (Tensor[(15, 2, 7), bool], Tensor[(9, 14, 11), int64], Tensor[(1386), int64]) {
    %529 = @func_9213() /* ty=(Tensor[(15, 2, 7), bool],) */;
    %530 = cast(meta[relay.Constant][42] /* ty=Tensor[(1386), int64] */, dtype="int64") /* ty=Tensor[(1386), int64] */;
    %531 = cast(meta[relay.Constant][42] /* ty=Tensor[(1386), int64] */, dtype="int64") /* ty=Tensor[(1386), int64] */;
    %532 = reshape(%530, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int64] */;
    %533 = reshape(%531, newshape=[9, 14, 11]) /* ty=Tensor[(9, 14, 11), int64] */;
    %534 = @func_4268(%532, %533) /* ty=(Tensor[(9, 14, 11), int64],) */;
    %535 = %529.0;
    %536 = %534.0;
    (%535, %536, meta[relay.Constant][42] /* ty=Tensor[(1386), int64] */)
  };
  %537() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(9, 14, 11), int64], Tensor[(1386), int64]) */
}

def @func_690(%var_688: Tensor[(16, 6, 2), int16], %var_689: Tensor[(16, 6, 2), int16]) -> (Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  @func_686(%var_688, %var_689) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */
}

def @func_943(%var_895: Tensor[(12, 8, 15), float64], %var_913: Tensor[(12, 8, 15), bool]) -> (Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %538 = cast(%var_895, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %539 = log2(%538) /* ty=Tensor[(12, 8, 15), float64] */;
  %540 = cast(%var_895, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="bool") /* ty=Tensor[(12, 8, 15), bool] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %544 = less_equal(%542, %543) /* ty=Tensor[(12, 8, 15), bool] */;
  %545 = cast(%var_913, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %546 = shape_of(%544, dtype="int32") /* ty=Tensor[(3), int32] */;
  %547 = cast(%544, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %549 = cast(%var_895, dtype="float64") /* ty=Tensor[(12, 8, 15), float64] */;
  %550 = cast(meta[relay.Constant][43] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %551 = reshape(%550, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %552 = @func_320(%551) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %553 = floor_mod(%547, %548) /* ty=Tensor[(12, 8, 15), float64] */;
  %554 = exp(%549) /* ty=Tensor[(12, 8, 15), float64] */;
  %555 = %552.0;
  (%553, %554, %555, meta[relay.Constant][43] /* ty=Tensor[(858), uint64] */)
}

def @func_4065(%var_4063: Tensor[(2100), uint8], %var_4064: Tensor[(1050), int32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) {
  %584 = fn (%var_3995: Tensor[(2100), uint8], %var_4030: Tensor[(1050), int32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) {
    %556 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %557 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %558 = cast(%var_3995, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %559 = reshape(%557, newshape=[]) /* ty=uint8 */;
    %560 = reshape(%558, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
    %561 = @func_1596(%559, %560) /* ty=(Tensor[(15, 10, 14), uint8],) */;
    %562 = cast(%var_4030, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %563 = cast(%var_4030, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %564 = reshape(%562, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
    %565 = reshape(%563, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
    %566 = cast(meta[relay.Constant][45] /* ty=Tensor[(2, 168), float32] */, dtype="float32") /* ty=Tensor[(2, 168), float32] */;
    %567 = cast(meta[relay.Constant][46] /* ty=Tensor[(96, 2), int16] */, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
    %568 = cast(meta[relay.Constant][44] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %569 = cast(%var_3995, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %570 = reshape(%566, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
    %571 = reshape(%567, newshape=[192]) /* ty=Tensor[(192), int16] */;
    %572 = reshape(%568, newshape=[]) /* ty=uint8 */;
    %573 = reshape(%569, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %574 = @func_3408(%570, %571, %572, %573) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
    %575 = %574.1;
    %576 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 4, 12), bool] */, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
    %577 = shape_of(%575, dtype="int32") /* ty=Tensor[(3), int32] */;
    %578 = cast(%575, dtype="float64") /* ty=Tensor[(7, 4, 12), float64] */;
    %579 = dyn.reshape(%576, %577, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %580 = %556.0;
    %581 = %561.0;
    %582 = @func_2159(%564, %565) /* ty=Tensor[(7, 15, 10), int32] */;
    %583 = mod(%578, %579) /* ty=Tensor[(7, 4, 12), float64] */;
    (%580, %581, meta[relay.Constant][44] /* ty=uint8 */, %var_3995, %582, %var_4030, meta[relay.Constant][45] /* ty=Tensor[(2, 168), float32] */, meta[relay.Constant][46] /* ty=Tensor[(96, 2), int16] */, %583)
  };
  %584(%var_4063, %var_4064) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */
}

def @func_10648() -> (Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8]) {
  @func_10646() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8]) */
}

def @func_8108() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) {
  %589 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) {
    %585 = @func_8023() /* ty=(Tensor[(15, 2, 7), int16],) */;
    %586 = @func_8023() /* ty=(Tensor[(15, 2, 7), int16],) */;
    %587 = %585.0;
    %588 = %586.0;
    (%587, %588)
  };
  %589() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), int16]) */
}

def @func_10282() -> Tensor[(15, 2, 7), int16] {
  %591 = fn () -> Tensor[(15, 2, 7), int16] {
    %590 = @func_9397() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
    %590.0
  };
  %591() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_5382(%var_5381: Tensor[(2100), uint8]) -> (int16, Tensor[(15, 10, 14), uint8], Tensor[(2100), uint8]) {
  %600 = fn (%var_5372: Tensor[(2100), uint8]) -> (int16, Tensor[(15, 10, 14), uint8], Tensor[(2100), uint8]) {
    %592 = @func_4991() /* ty=(Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
    %593 = %592.2;
    %594 = cast(%593, dtype="uint8") /* ty=uint8 */;
    %595 = cast(%var_5372, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %596 = reshape(%594, newshape=[]) /* ty=uint8 */;
    %597 = reshape(%595, newshape=[15, 10, 14]) /* ty=Tensor[(15, 10, 14), uint8] */;
    %598 = @func_1596(%596, %597) /* ty=(Tensor[(15, 10, 14), uint8],) */;
    %599 = %598.0;
    (%593, %599, %var_5372)
  };
  %600(%var_5381) /* ty=(int16, Tensor[(15, 10, 14), uint8], Tensor[(2100), uint8]) */
}

def @func_7802() -> (Tensor[(15, 2, 7), float32], Tensor[(192), int16], Tensor[(15, 2, 7), bool]) {
  %601 = @func_7041() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %602 = %601.0;
  %603 = cast(%602, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
  %604 = reshape(%603, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %605 = @func_4506(%604) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %606 = @func_7541() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %607 = %605.2;
  %608 = %606.0;
  (%602, %607, %608)
}

def @func_9354() -> Tensor[(15, 2, 7), float32] {
  @func_9352() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_10234(%var_10231: Tensor[(2100), uint8], %var_10232: Tensor[(336), float32], %var_10233: Tensor[(5, 90), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(15, 3, 10), float32], Tensor[(5, 90), float32], Tensor[(24, 8), float32], Tensor[(24, 8), float64], Tensor[(15, 2, 7), int16]) {
  %632 = fn (%var_10165: Tensor[(2100), uint8], %var_10166: Tensor[(336), float32], %var_10170: Tensor[(5, 90), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(15, 3, 10), float32], Tensor[(5, 90), float32], Tensor[(24, 8), float32], Tensor[(24, 8), float64], Tensor[(15, 2, 7), int16]) {
    %609 = cast(%var_10170, dtype="float32") /* ty=Tensor[(5, 90), float32] */;
    %610 = reshape(%609, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), float32] */;
    %611 = @func_6005(%610) /* ty=(Tensor[(15, 3, 10), float32],) */;
    %612 = cast(%var_10165, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %613 = cast(%var_10166, dtype="float32") /* ty=Tensor[(336), float32] */;
    %614 = reshape(%612, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %615 = reshape(%613, newshape=[24, 14]) /* ty=Tensor[(24, 14), float32] */;
    %616 = @func_7443(%614, %615) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(24, 8), int16], Tensor[(24, 14), float32], uint8) */;
    %617 = %616.4;
    %618 = cast(%617, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
    %619 = asin(%618) /* ty=Tensor[(24, 8), float64] */;
    %620 = cast(%619, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
    %621 = cast(%619, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
    %622 = sigmoid(%621) /* ty=Tensor[(24, 8), float32] */;
    %623 = cast(%622, dtype="float32") /* ty=Tensor[(24, 8), float32] */;
    %624 = sinh(%623) /* ty=Tensor[(24, 8), float32] */;
    %625 = cast(%624, dtype="float64") /* ty=Tensor[(24, 8), float64] */;
    %626 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
    %627 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
    %628 = %611.0;
    %629 = atan(%620) /* ty=Tensor[(24, 8), float32] */;
    %630 = sin(%625) /* ty=Tensor[(24, 8), float64] */;
    %631 = %626.1;
    (%627, %var_10165, %var_10166, %628, %var_10170, %629, %630, %631)
  };
  %632(%var_10231, %var_10232, %var_10233) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(15, 3, 10), float32], Tensor[(5, 90), float32], Tensor[(24, 8), float32], Tensor[(24, 8), float64], Tensor[(15, 2, 7), int16]) */
}

def @func_11407(%var_11393: Tensor[(2, 7, 10), float32]) -> (Tensor[(2, 7, 10), float32],) {
  %633 = cast(meta[relay.Constant][48] /* ty=Tensor[(2, 7, 1), float32] */, dtype="float32") /* ty=Tensor[(2, 7, 1), float32] */;
  %634 = cast(%var_11393, dtype="float32") /* ty=Tensor[(2, 7, 10), float32] */;
  %635 = mod(%633, %634) /* ty=Tensor[(2, 7, 10), float32] */;
  (%635,)
}

def @func_1596(%var_1587: uint8, %var_1588: Tensor[(15, 10, 14), uint8]) -> (Tensor[(15, 10, 14), uint8],) {
  %636 = cast(%var_1587, dtype="uint8") /* ty=uint8 */;
  %637 = cast(%var_1588, dtype="uint8") /* ty=Tensor[(15, 10, 14), uint8] */;
  %638 = bitwise_or(%636, %637) /* ty=Tensor[(15, 10, 14), uint8] */;
  (%638,)
}

def @func_8666() -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) {
  @func_8664() /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) */
}

def @func_10671() -> (Tensor[(15, 2, 7), float32],) {
  %639 = @func_7052() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %640 = %639.0;
  (%640,)
}

def @func_9215() -> (Tensor[(15, 2, 7), bool],) {
  @func_9213() /* ty=(Tensor[(15, 2, 7), bool],) */
}

def @func_1017(%var_1012: int16, %var_1013: Tensor[(8, 7, 6), int16]) -> Tensor[(8, 7, 6), int16] {
  %641 = cast(%var_1012, dtype="int16") /* ty=int16 */;
  %642 = cast(%var_1013, dtype="int16") /* ty=Tensor[(8, 7, 6), int16] */;
  add(%641, %642) /* ty=Tensor[(8, 7, 6), int16] */
}

def @func_7291() -> Tensor[(15, 2, 7), int16] {
  %643 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %643.0
}

def @func_2163(%var_2161: Tensor[(7, 15, 10), int32], %var_2162: Tensor[(7, 15, 10), int32]) -> Tensor[(7, 15, 10), int32] {
  @func_2159(%var_2161, %var_2162) /* ty=Tensor[(7, 15, 10), int32] */
}

def @func_4127(%var_4110: Tensor[(15, 2, 7), float32]) -> Tensor[(15, 2, 7), float64] {
  %644 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %645 = cast(%var_4110, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %646 = shape_of(%644, dtype="int32") /* ty=Tensor[(3), int32] */;
  %647 = cast(%644, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
  %648 = dyn.reshape(%645, %646, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%647, %648) /* ty=Tensor[(15, 2, 7), float64] */
}

def @func_9144() -> (Tensor[(15, 2, 7), bool], Tensor[(11, 13, 6), uint64]) {
  %649 = @func_8990() /* ty=(Tensor[(15, 2, 7), bool],) */;
  %650 = @func_8664() /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) */;
  %651 = %649.0;
  %652 = %650.0;
  (%651, %652)
}

def @func_6111(%var_6042: Tensor[(15, 8, 2), float64], %var_6076: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(15, 8, 2), float32], Tensor[(15, 10, 14), uint8]) {
  %653 = cast(meta[relay.Constant][49] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %654 = cast(%var_6076, dtype="int16") /* ty=Tensor[(192), int16] */;
  %655 = cast(meta[relay.Constant][50] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %656 = cast(meta[relay.Constant][51] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %657 = reshape(%653, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %658 = reshape(%654, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %659 = reshape(%655, newshape=[]) /* ty=uint8 */;
  %660 = reshape(%656, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %661 = @func_3408(%657, %658, %659, %660) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %662 = cast(%var_6042, dtype="float64") /* ty=Tensor[(15, 8, 2), float64] */;
  %663 = sigmoid(%662) /* ty=Tensor[(15, 8, 2), float64] */;
  %664 = cast(%663, dtype="float32") /* ty=Tensor[(15, 8, 2), float32] */;
  %665 = cast(meta[relay.Constant][50] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
  %666 = reshape(%665, newshape=[]) /* ty=uint8 */;
  %667 = @func_4879(%666) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(15, 10, 14), uint8], Tensor[(1050), int32]) */;
  %668 = @func_3950() /* ty=Tensor[(15, 2, 7), float32] */;
  %669 = %661.5;
  %670 = acos(%664) /* ty=Tensor[(15, 8, 2), float32] */;
  %671 = %667.4;
  (%668, %669, meta[relay.Constant][49] /* ty=Tensor[(336), float32] */, %var_6076, meta[relay.Constant][50] /* ty=uint8 */, meta[relay.Constant][51] /* ty=Tensor[(2100), uint8] */, %670, %671)
}

def @func_6419() -> (Tensor[(15, 2, 7), float32],) {
  %673 = fn () -> (Tensor[(15, 2, 7), float32],) {
    %672 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
    (%672,)
  };
  %673() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_6025() -> (Tensor[(15, 2, 7), float32],) {
  %675 = fn () -> (Tensor[(15, 2, 7), float32],) {
    %674 = @func_3977() /* ty=Tensor[(15, 2, 7), float32] */;
    (%674,)
  };
  %675() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_12194() -> (Tensor[(15, 2, 7), int16],) {
  @func_12192() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_4614() -> Tensor[(15, 2, 7), float32] {
  @func_4612() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_3950() -> Tensor[(15, 2, 7), float32] {
  %676 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %676.0
}

def @func_11660(%var_11626: Tensor[(2100), uint8], %var_11647: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(15, 2, 7), int16], Tensor[(2100), bool]) {
  %677 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %678 = @func_7137() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %679 = cast(%var_11626, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %680 = reshape(%679, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %681 = @func_9673(%680) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) */;
  %682 = %681.2;
  %683 = cast(%var_11647, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %684 = shape_of(%682, dtype="int32") /* ty=Tensor[(1), int32] */;
  %685 = cast(%682, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?), bool] */;
  %687 = @func_6805() /* ty=Tensor[(15, 2, 7), float32] */;
  %688 = %677.1;
  %689 = %678.0;
  %690 = equal(%685, %686) /* ty=Tensor[(2100), bool] */;
  (%687, %688, %var_11626, %689, %690)
}

def @func_3307() -> (Tensor[(15, 2, 7), float32],) {
  %695 = fn () -> (Tensor[(15, 2, 7), float32],) {
    %691 = cast(meta[relay.Constant][52] /* ty=Tensor[(15, 2, 7), float64] */, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
    %692 = rsqrt(%691) /* ty=Tensor[(15, 2, 7), float64] */;
    %693 = cast(%692, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %694 = asin(%693) /* ty=Tensor[(15, 2, 7), float32] */;
    (%694,)
  };
  %695() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_8284() -> (Tensor[(15, 2, 7), float32],) {
  @func_8282() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_6630(%var_6627: Tensor[(1050, 1), int32], %var_6628: Tensor[(336), float32], %var_6629: uint8) -> (Tensor[(15, 2, 7), float32], uint8, Tensor[(1050, 1), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) {
  %710 = fn (%var_6615: Tensor[(1050, 1), int32], %var_6616: Tensor[(336), float32], %var_6618: uint8) -> (Tensor[(15, 2, 7), float32], uint8, Tensor[(1050, 1), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) {
    %696 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %697 = %696.0;
    %698 = cast(%697, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %699 = cast(%var_6615, dtype="int32") /* ty=Tensor[(1050, 1), int32] */;
    %700 = cast(%var_6616, dtype="float32") /* ty=Tensor[(336), float32] */;
    %701 = cast(meta[relay.Constant][53] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
    %702 = cast(%var_6618, dtype="uint8") /* ty=uint8 */;
    %703 = reshape(%698, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %704 = reshape(%699, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %705 = reshape(%700, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
    %706 = reshape(%701, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
    %707 = reshape(%702, newshape=[]) /* ty=uint8 */;
    %708 = @func_5065(%703, %704, %705, %706, %707) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
    %709 = %708.8;
    (%697, %709, %var_6615, %var_6616, meta[relay.Constant][53] /* ty=Tensor[(192), int16] */, %var_6618)
  };
  %710(%var_6627, %var_6628, %var_6629) /* ty=(Tensor[(15, 2, 7), float32], uint8, Tensor[(1050, 1), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) */
}

def @func_11499() -> (Tensor[(15, 2, 7), int16],) {
  @func_11497() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_3878(%var_3875: Tensor[(1440), float64], %var_3876: Tensor[(216), uint8], %var_3877: Tensor[(96, 2), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(10, 14, 10), float64], Tensor[(12, 8, 15), float64], Tensor[(1440), float64], Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(468, 2), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(16, 6, 2), bool], Tensor[(96, 2), int16], Tensor[(1400), uint32]) {
  %763 = fn (%var_3813: Tensor[(1440), float64], %var_3839: Tensor[(216), uint8], %var_3857: Tensor[(96, 2), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(10, 14, 10), float64], Tensor[(12, 8, 15), float64], Tensor[(1440), float64], Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(468, 2), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(16, 6, 2), bool], Tensor[(96, 2), int16], Tensor[(1400), uint32]) {
    %711 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %712 = cast(meta[relay.Constant][54] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %713 = reshape(%712, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
    %714 = @func_1196(%713) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) */;
    %715 = cast(meta[relay.Constant][55] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %716 = cast(meta[relay.Constant][55] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %717 = reshape(%715, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
    %718 = reshape(%716, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
    %719 = cast(meta[relay.Constant][54] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %720 = reshape(%719, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
    %721 = @func_1196(%720) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) */;
    %722 = cast(%var_3813, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %723 = cast(%var_3813, dtype="bool") /* ty=Tensor[(1440), bool] */;
    %724 = reshape(%722, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
    %725 = reshape(%723, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
    %726 = @func_943(%724, %725) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %727 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %728 = cast(meta[relay.Constant][56] /* ty=Tensor[(468, 2), uint16] */, dtype="uint16") /* ty=Tensor[(468, 2), uint16] */;
    %729 = cast(meta[relay.Constant][56] /* ty=Tensor[(468, 2), uint16] */, dtype="uint16") /* ty=Tensor[(468, 2), uint16] */;
    %730 = cast(meta[relay.Constant][55] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %731 = cast(%var_3839, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %732 = cast(meta[relay.Constant][57] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %733 = reshape(%728, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
    %734 = reshape(%729, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
    %735 = reshape(%730, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %736 = reshape(%731, newshape=[216]) /* ty=Tensor[(216), uint8] */;
    %737 = reshape(%732, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %738 = @func_2404(%733, %734, %735, %736, %737) /* ty=(Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) */;
    %739 = cast(%var_3857, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
    %740 = cast(%var_3857, dtype="int16") /* ty=Tensor[(96, 2), int16] */;
    %741 = reshape(%739, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
    %742 = reshape(%740, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
    %743 = @func_686(%741, %742) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %744 = cast(meta[relay.Constant][54] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
    %745 = acos(%744) /* ty=Tensor[(1400), float64] */;
    %746 = cast(%745, dtype="float32") /* ty=Tensor[(1400), float32] */;
    %747 = asin(%746) /* ty=Tensor[(1400), float32] */;
    %748 = cast(%747, dtype="float32") /* ty=Tensor[(1400), float32] */;
    %749 = sinh(%748) /* ty=Tensor[(1400), float32] */;
    %750 = cast(%749, dtype="uint32") /* ty=Tensor[(1400), uint32] */;
    %751 = shape_of(%745, dtype="int32") /* ty=Tensor[(1), int32] */;
    %752 = cast(%745, dtype="uint32") /* ty=Tensor[(1400), uint32] */;
    %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?), uint32] */;
    %754 = %711.0;
    %755 = %714.0;
    %756 = @func_2159(%717, %718) /* ty=Tensor[(7, 15, 10), int32] */;
    %757 = %721.2;
    %758 = %726.1;
    %759 = %727.0;
    %760 = %738.11;
    %761 = %743.0;
    %762 = bitwise_and(%752, %753) /* ty=Tensor[(1400), uint32] */;
    (%754, %755, %756, meta[relay.Constant][55] /* ty=Tensor[(1050), int32] */, %757, %758, %var_3813, %759, %760, meta[relay.Constant][56] /* ty=Tensor[(468, 2), uint16] */, %var_3839, meta[relay.Constant][57] /* ty=Tensor[(2100), uint8] */, %761, %var_3857, %762)
  };
  %763(%var_3875, %var_3876, %var_3877) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(10, 14, 10), float64], Tensor[(12, 8, 15), float64], Tensor[(1440), float64], Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(468, 2), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(16, 6, 2), bool], Tensor[(96, 2), int16], Tensor[(1400), uint32]) */
}

def @func_10270() -> (Tensor[(15, 2, 7), int16],) {
  %766 = fn () -> (Tensor[(15, 2, 7), int16],) {
    %764 = @func_9397() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
    %765 = %764.0;
    (%765,)
  };
  %766() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_7804() -> (Tensor[(15, 2, 7), float32], Tensor[(192), int16], Tensor[(15, 2, 7), bool]) {
  @func_7802() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(192), int16], Tensor[(15, 2, 7), bool]) */
}

def @func_10896(%var_10893: Tensor[(1050), int32], %var_10894: Tensor[(216), uint8], %var_10895: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 3, 10), float32], Tensor[(450), float32], Tensor[(20, 72), float64], Tensor[(6, 156), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(1050), float64], Tensor[(15, 2, 7), float64]) {
  %791 = fn (%var_10851: Tensor[(1050), int32], %var_10852: Tensor[(216), uint8], %var_10853: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 3, 10), float32], Tensor[(450), float32], Tensor[(20, 72), float64], Tensor[(6, 156), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(1050), float64], Tensor[(15, 2, 7), float64]) {
    %767 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
    %768 = cast(meta[relay.Constant][58] /* ty=Tensor[(450), float32] */, dtype="float32") /* ty=Tensor[(450), float32] */;
    %769 = reshape(%768, newshape=[15, 3, 10]) /* ty=Tensor[(15, 3, 10), float32] */;
    %770 = @func_6005(%769) /* ty=(Tensor[(15, 3, 10), float32],) */;
    %771 = cast(meta[relay.Constant][59] /* ty=Tensor[(6, 156), uint16] */, dtype="uint16") /* ty=Tensor[(6, 156), uint16] */;
    %772 = cast(meta[relay.Constant][59] /* ty=Tensor[(6, 156), uint16] */, dtype="uint16") /* ty=Tensor[(6, 156), uint16] */;
    %773 = cast(%var_10851, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %774 = cast(%var_10852, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %775 = cast(%var_10853, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %776 = reshape(%771, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
    %777 = reshape(%772, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
    %778 = reshape(%773, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %779 = reshape(%774, newshape=[216]) /* ty=Tensor[(216), uint8] */;
    %780 = reshape(%775, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %781 = @func_2404(%776, %777, %778, %779, %780) /* ty=(Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) */;
    %782 = cast(%var_10851, dtype="float64") /* ty=Tensor[(1050), float64] */;
    %783 = %767.1;
    %784 = cast(%783, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %785 = reshape(%784, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %786 = %770.0;
    %787 = %781.4;
    %788 = @func_5095() /* ty=Tensor[(11, 13, 6), uint64] */;
    %789 = sinh(%782) /* ty=Tensor[(1050), float64] */;
    %790 = @func_4127(%785) /* ty=Tensor[(15, 2, 7), float64] */;
    (%783, %786, meta[relay.Constant][58] /* ty=Tensor[(450), float32] */, %787, meta[relay.Constant][59] /* ty=Tensor[(6, 156), uint16] */, %var_10852, %var_10853, %788, %789, %790)
  };
  %791(%var_10893, %var_10894, %var_10895) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 3, 10), float32], Tensor[(450), float32], Tensor[(20, 72), float64], Tensor[(6, 156), uint16], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(1050), float64], Tensor[(15, 2, 7), float64]) */
}

def @func_7228(%var_7222: Tensor[(216), uint8], %var_7223: Tensor[(30, 70), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) {
  %792 = cast(%var_7222, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %793 = cast(%var_7222, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %794 = cast(%var_7223, dtype="uint8") /* ty=Tensor[(30, 70), uint8] */;
  %795 = reshape(%792, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %796 = reshape(%793, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %797 = reshape(%794, newshape=[1, 2100]) /* ty=Tensor[(1, 2100), uint8] */;
  %798 = @func_1773(%795, %796, %797) /* ty=(Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) */;
  %799 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
  %800 = %798.0;
  (%799, %800, %var_7222, %var_7223)
}

def @func_9146() -> (Tensor[(15, 2, 7), bool], Tensor[(11, 13, 6), uint64]) {
  @func_9144() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(11, 13, 6), uint64]) */
}

def @func_10611(%var_10607: Tensor[(42), float32], %var_10608: uint8, %var_10609: Tensor[(3, 700), uint8], %var_10610: Tensor[(210, 1), float32]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(42), float32], Tensor[(192), int16], Tensor[(3, 700), uint8], Tensor[(2, 168), bool], Tensor[(11, 13, 6), uint64], Tensor[(210, 336), uint8]) {
  @func_10605(%var_10607, %var_10608, %var_10609, %var_10610) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(42), float32], Tensor[(192), int16], Tensor[(3, 700), uint8], Tensor[(2, 168), bool], Tensor[(11, 13, 6), uint64], Tensor[(210, 336), uint8]) */
}

def @func_3936(%var_3934: Tensor[(15, 2, 7), float32]) -> Tensor[(15, 2, 7), int16] {
  @func_3933(%var_3934) /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_10952() -> (Tensor[(15, 2, 7), float32],) {
  %802 = fn () -> (Tensor[(15, 2, 7), float32],) {
    %801 = @func_9352() /* ty=Tensor[(15, 2, 7), float32] */;
    (%801,)
  };
  %802() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @main(%var_12343: Tensor[(168, 2), int16]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(168, 2), int16], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(16, 6, 2), bool], Tensor[(192), int16], Tensor[(1050, 2), bool], Tensor[(15, 2, 7), int16], Tensor[(1050, 2), float64]) {
  %803 = @func_9878() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) */;
  %804 = @func_9878() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) */;
  %805 = cast(meta[relay.Constant][60] /* ty=Tensor[(1050, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1050, 2), uint8] */;
  %806 = reshape(%805, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %807 = @func_9675(%806) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) */;
  %808 = cast(meta[relay.Constant][61] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %809 = cast(meta[relay.Constant][61] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %810 = reshape(%808, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %811 = reshape(%809, newshape=[16, 6, 2]) /* ty=Tensor[(16, 6, 2), int16] */;
  %812 = @func_690(%810, %811) /* ty=(Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %813 = cast(%var_12343, dtype="int16") /* ty=Tensor[(168, 2), int16] */;
  %814 = reshape(%813, newshape=[336]) /* ty=Tensor[(336), int16] */;
  %815 = @func_12134(%814) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
  %816 = %815.2;
  %817 = cast(meta[relay.Constant][60] /* ty=Tensor[(1050, 2), uint8] */, dtype="bool") /* ty=Tensor[(1050, 2), bool] */;
  %818 = cast(%816, dtype="bool") /* ty=bool */;
  %819 = @func_11695() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), bool]) */;
  %820 = cast(meta[relay.Constant][60] /* ty=Tensor[(1050, 2), uint8] */, dtype="float64") /* ty=Tensor[(1050, 2), float64] */;
  %821 = %803.0;
  %822 = %804.1;
  %823 = @func_8513() /* ty=Tensor[(15, 2, 7), float32] */;
  %824 = @func_7203() /* ty=Tensor[(15, 2, 7), float32] */;
  %825 = %807.2;
  %826 = %812.0;
  %827 = logical_or(%817, %818) /* ty=Tensor[(1050, 2), bool] */;
  %828 = %819.0;
  %829 = erf(%820) /* ty=Tensor[(1050, 2), float64] */;
  (%821, %822, %823, %var_12343, %824, %825, %826, meta[relay.Constant][61] /* ty=Tensor[(192), int16] */, %827, %828, %829)
}

def @func_5072(%var_5067: Tensor[(15, 2, 7), float32], %var_5068: Tensor[(1050), int32], %var_5069: Tensor[(168, 2), float32], %var_5070: Tensor[(192, 1), int16], %var_5071: uint8) -> (Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) {
  @func_5065(%var_5067, %var_5068, %var_5069, %var_5070, %var_5071) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */
}

def @func_1600(%var_1598: uint8, %var_1599: Tensor[(15, 10, 14), uint8]) -> (Tensor[(15, 10, 14), uint8],) {
  @func_1596(%var_1598, %var_1599) /* ty=(Tensor[(15, 10, 14), uint8],) */
}

def @func_4727() -> (Tensor[(15, 2, 7), int16],) {
  %830 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %831 = %830.0;
  (%831,)
}

def @func_7238() -> (Tensor[(336), int16],) {
  @func_7236() /* ty=(Tensor[(336), int16],) */
}

def @func_10468(%var_10466: Tensor[(1, 7, 6), float32], %var_10467: Tensor[(858), uint64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), uint8], Tensor[(105, 2), float32], Tensor[(?, 7, 6), bool]) {
  @func_10464(%var_10466, %var_10467) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), uint8], Tensor[(105, 2), float32], Tensor[(?, 7, 6), bool]) */
}

def @func_4612() -> Tensor[(15, 2, 7), float32] {
  @func_3956() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_9048() -> (Tensor[(15, 2, 7), int16],) {
  %833 = fn () -> (Tensor[(15, 2, 7), int16],) {
    %832 = @func_7291() /* ty=Tensor[(15, 2, 7), int16] */;
    (%832,)
  };
  %833() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_11465(%var_11463: Tensor[(3, 4, 4), float32], %var_11464: Tensor[(3, 4, 4), float64]) -> Tensor[(3, 4, 4), uint64] {
  @func_11461(%var_11463, %var_11464) /* ty=Tensor[(3, 4, 4), uint64] */
}

def @func_10732() -> Tensor[(15, 2, 7), int16] {
  @func_10730() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_7393(%var_7390: Tensor[(5, 210), int32], %var_7391: Tensor[(336), float32], %var_7392: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(5, 210), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) {
  %851 = fn (%var_7375: Tensor[(5, 210), int32], %var_7376: Tensor[(336), float32], %var_7377: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(5, 210), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) {
    %834 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %835 = @func_7041() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %836 = %835.0;
    %837 = cast(%836, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %838 = cast(%var_7375, dtype="int32") /* ty=Tensor[(5, 210), int32] */;
    %839 = cast(%var_7376, dtype="float32") /* ty=Tensor[(336), float32] */;
    %840 = cast(%var_7377, dtype="int16") /* ty=Tensor[(192), int16] */;
    %841 = cast(meta[relay.Constant][62] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %842 = reshape(%837, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %843 = reshape(%838, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %844 = reshape(%839, newshape=[168, 2]) /* ty=Tensor[(168, 2), float32] */;
    %845 = reshape(%840, newshape=[192, 1]) /* ty=Tensor[(192, 1), int16] */;
    %846 = reshape(%841, newshape=[]) /* ty=uint8 */;
    %847 = @func_5065(%842, %843, %844, %845, %846) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float64], Tensor[(2100), uint8], Tensor[(168, 2), float32], Tensor[(192, 1), int16], uint8, Tensor[(15, 2, 7), int16]) */;
    %848 = %834.0;
    %849 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
    %850 = %847.2;
    (%848, %849, %836, %850, %var_7375, %var_7376, %var_7377, meta[relay.Constant][62] /* ty=uint8 */)
  };
  %851(%var_7390, %var_7391, %var_7392) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(5, 210), int32], Tensor[(336), float32], Tensor[(192), int16], uint8) */
}

def @func_9495() -> Tensor[(15, 2, 7), float32] {
  @func_9493() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_5979(%var_5911: Tensor[(858), uint64], %var_5949: Tensor[(858), float64]) -> (Tensor[(15, 2, 7), int16], Tensor[(7, 4, 12), bool], Tensor[(336), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(858), uint64], Tensor[(858), float32]) {
  %852 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %853 = cast(meta[relay.Constant][63] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %854 = reshape(%853, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %855 = @func_2532(%854) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %856 = cast(%var_5911, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %857 = reshape(%856, newshape=[1, 858]) /* ty=Tensor[(1, 858), uint64] */;
  %858 = @func_4809(%857) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(1, 858), uint64]) */;
  %859 = cast(%var_5911, dtype="float64") /* ty=Tensor[(858), float64] */;
  %860 = log2(%859) /* ty=Tensor[(858), float64] */;
  %861 = cast(%var_5949, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %862 = shape_of(%860, dtype="int32") /* ty=Tensor[(1), int32] */;
  %863 = cast(%860, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %864 = dyn.reshape(%861, %862, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %865 = bitwise_xor(%863, %864) /* ty=Tensor[(858), uint64] */;
  %866 = cast(%865, dtype="bool") /* ty=Tensor[(858), bool] */;
  %867 = shape_of(%860, dtype="int32") /* ty=Tensor[(1), int32] */;
  %868 = cast(%860, dtype="bool") /* ty=Tensor[(858), bool] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?), bool] */;
  %870 = logical_or(%868, %869) /* ty=Tensor[(858), bool] */;
  %871 = cast(%870, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %872 = reshape(%871, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %873 = @func_4646(%872) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %874 = cast(%860, dtype="float32") /* ty=Tensor[(858), float32] */;
  %875 = %852.0;
  %876 = %855.0;
  %877 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
  %878 = %858.1;
  %879 = %873.2;
  %880 = atanh(%874) /* ty=Tensor[(858), float32] */;
  (%875, %876, meta[relay.Constant][63] /* ty=Tensor[(336), float32] */, %877, %878, %870, %879, %880)
}

def @func_7042() -> (Tensor[(15, 2, 7), float32],) {
  %883 = fn () -> (Tensor[(15, 2, 7), float32],) {
    %881 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
    %882 = %881.2;
    (%882,)
  };
  %883() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_6402() -> Tensor[(15, 2, 7), float32] {
  %884 = fn () -> Tensor[(15, 2, 7), float32] {
    @func_4612() /* ty=Tensor[(15, 2, 7), float32] */
  };
  %884() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_7543() -> (Tensor[(15, 2, 7), bool],) {
  @func_7541() /* ty=(Tensor[(15, 2, 7), bool],) */
}

def @func_4272(%var_4270: Tensor[(9, 14, 11), int64], %var_4271: Tensor[(9, 14, 11), int64]) -> (Tensor[(9, 14, 11), int64],) {
  @func_4268(%var_4270, %var_4271) /* ty=(Tensor[(9, 14, 11), int64],) */
}

def @func_2831(%var_2830: Tensor[(7, 1, 4), float64]) -> (Tensor[(7, 1, 4), float64], Tensor[(7, ?, 4), uint32], Tensor[(7, 1, 4), float32]) {
  %908 = fn (%var_2761: Tensor[(7, 1, 4), float64]) -> (Tensor[(7, 1, 4), float64], Tensor[(7, ?, 4), uint32], Tensor[(7, 1, 4), float32]) {
    %885 = cast(%var_2761, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
    %886 = cast(%var_2761, dtype="float64") /* ty=Tensor[(7, 1, 4), float64] */;
    %887 = erf(%886) /* ty=Tensor[(7, 1, 4), float64] */;
    %888 = cast(%887, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
    %889 = shape_of(%var_2761, dtype="int32") /* ty=Tensor[(3), int32] */;
    %890 = cast(%var_2761, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
    %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %892 = greater(%890, %891) /* ty=Tensor[(7, ?, 4), bool] */;
    %893 = cast(%892, dtype="bool") /* ty=Tensor[(7, ?, 4), bool] */;
    %894 = shape_of(%var_2761, dtype="int32") /* ty=Tensor[(3), int32] */;
    %895 = cast(%var_2761, dtype="bool") /* ty=Tensor[(7, 1, 4), bool] */;
    %896 = dyn.reshape(%893, %894, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %897 = equal(%895, %896) /* ty=Tensor[(7, ?, 4), bool] */;
    %898 = cast(%897, dtype="float32") /* ty=Tensor[(7, ?, 4), float32] */;
    %899 = acosh(%898) /* ty=Tensor[(7, ?, 4), float32] */;
    %900 = cast(%892, dtype="uint32") /* ty=Tensor[(7, ?, 4), uint32] */;
    %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
    %902 = cast(%899, dtype="uint32") /* ty=Tensor[(7, ?, 4), uint32] */;
    %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %904 = cast(%var_2761, dtype="float32") /* ty=Tensor[(7, 1, 4), float32] */;
    %905 = cos(%885) /* ty=Tensor[(7, 1, 4), float64] */;
    %906 = bitwise_or(%902, %903) /* ty=Tensor[(7, ?, 4), uint32] */;
    %907 = log10(%904) /* ty=Tensor[(7, 1, 4), float32] */;
    (%905, %906, %907)
  };
  %908(%var_2830) /* ty=(Tensor[(7, 1, 4), float64], Tensor[(7, ?, 4), uint32], Tensor[(7, 1, 4), float32]) */
}

def @func_5872() -> (Tensor[(15, 2, 7), bool],) {
  %910 = fn () -> (Tensor[(15, 2, 7), bool],) {
    %909 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
    (%909,)
  };
  %910() /* ty=(Tensor[(15, 2, 7), bool],) */
}

def @func_686(%var_642: Tensor[(16, 6, 2), int16], %var_643: Tensor[(16, 6, 2), int16]) -> (Tensor[(16, 6, 2), bool], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  %911 = cast(%var_643, dtype="bool") /* ty=Tensor[(16, 6, 2), bool] */;
  %912 = shape_of(%var_642, dtype="int32") /* ty=Tensor[(3), int32] */;
  %913 = cast(%var_642, dtype="bool") /* ty=Tensor[(16, 6, 2), bool] */;
  %914 = dyn.reshape(%911, %912, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %915 = cast(meta[relay.Constant][64] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %916 = reshape(%915, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %917 = @func_320(%916) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %918 = less_equal(%913, %914) /* ty=Tensor[(16, 6, 2), bool] */;
  %919 = %917.0;
  (%918, %919, meta[relay.Constant][64] /* ty=Tensor[(858), uint64] */)
}

def @func_3933(%var_3928: Tensor[(15, 2, 7), float32]) -> Tensor[(15, 2, 7), int16] {
  %920 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %921 = %920.0;
  %922 = cast(%var_3928, dtype="int16") /* ty=Tensor[(15, 2, 7), int16] */;
  %923 = shape_of(%921, dtype="int32") /* ty=Tensor[(3), int32] */;
  %924 = cast(%921, dtype="int16") /* ty=Tensor[(15, 2, 7), int16] */;
  %925 = dyn.reshape(%922, %923, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  add(%924, %925) /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_10812(%var_10810: Tensor[(2100), uint8], %var_10811: Tensor[(336, 1), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(216), uint8], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16]) {
  @func_10808(%var_10810, %var_10811) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(216), uint8], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16]) */
}

def @func_7679() -> (Tensor[(336), int16],) {
  @func_7677() /* ty=(Tensor[(336), int16],) */
}

def @func_8924(%var_8923: Tensor[(896), float32]) -> (Tensor[(90), bool], Tensor[(8, 16, 7), float32], Tensor[(896), float32]) {
  %934 = fn (%var_8915: Tensor[(896), float32]) -> (Tensor[(90), bool], Tensor[(8, 16, 7), float32], Tensor[(896), float32]) {
    %926 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
    %927 = cast(%var_8915, dtype="float32") /* ty=Tensor[(896), float32] */;
    %928 = cast(%var_8915, dtype="float32") /* ty=Tensor[(896), float32] */;
    %929 = reshape(%927, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), float32] */;
    %930 = reshape(%928, newshape=[8, 16, 7]) /* ty=Tensor[(8, 16, 7), float32] */;
    %931 = @func_7129(%929, %930) /* ty=(Tensor[(8, 16, 7), float32],) */;
    %932 = %926.7;
    %933 = %931.0;
    (%932, %933, %var_8915)
  };
  %934(%var_8923) /* ty=(Tensor[(90), bool], Tensor[(8, 16, 7), float32], Tensor[(896), float32]) */
}

def @func_4729() -> (Tensor[(15, 2, 7), int16],) {
  @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_11207() -> (Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], Tensor[(15, 2, 7), float64]) {
  %942 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], Tensor[(15, 2, 7), float64]) {
    %935 = @func_7137() /* ty=(Tensor[(15, 2, 7), int16],) */;
    %936 = @func_4991() /* ty=(Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */;
    %937 = %935.0;
    %938 = cast(%937, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %939 = reshape(%938, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %940 = %936.1;
    %941 = @func_4127(%939) /* ty=Tensor[(15, 2, 7), float64] */;
    (%937, %940, %941)
  };
  %942() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(8, 7, 6), int16], Tensor[(15, 2, 7), float64]) */
}

def @func_5554() -> (Tensor[(15, 2, 7), int16], Tensor[(192), int16]) {
  %948 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(192), int16]) {
    %943 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
    %944 = cast(%943, dtype="float32") /* ty=Tensor[(15, 2, 7), float32] */;
    %945 = reshape(%944, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
    %946 = @func_4506(%945) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
    %947 = %946.2;
    (%943, %947)
  };
  %948() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */
}

def @func_8389() -> Tensor[(15, 2, 7), float32] {
  @func_8387() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_8664() -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) {
  %949 = @func_4966() /* ty=Tensor[(11, 13, 6), uint64] */;
  %950 = @func_8513() /* ty=Tensor[(15, 2, 7), float32] */;
  (%949, %950)
}

def @func_11748() -> Tensor[(9, 2, 5), bool] {
  @func_10960() /* ty=Tensor[(9, 2, 5), bool] */
}

def @func_3623(%var_3620: Tensor[(8, 24), int16], %var_3621: uint8, %var_3622: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(336), float32], Tensor[(336), float32], uint8, Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(8, 24), float32]) {
  @func_3618(%var_3620, %var_3621, %var_3622) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(336), float32], Tensor[(336), float32], uint8, Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(8, 24), float32]) */
}

def @func_11664(%var_11662: Tensor[(2100), uint8], %var_11663: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(15, 2, 7), int16], Tensor[(2100), bool]) {
  @func_11660(%var_11662, %var_11663) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(2100), uint8], Tensor[(15, 2, 7), int16], Tensor[(2100), bool]) */
}

def @func_11964() -> (Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) {
  @func_11962() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */
}

def @func_12145() -> Tensor[(15, 2, 7), int16] {
  %952 = fn () -> Tensor[(15, 2, 7), int16] {
    %951 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
    %951.0
  };
  %952() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_2534(%var_2533: Tensor[(7, 4, 12), float32]) -> (Tensor[(7, 4, 12), bool],) {
  %961 = fn (%var_2521: Tensor[(7, 4, 12), float32]) -> (Tensor[(7, 4, 12), bool],) {
    %953 = cast(meta[relay.Constant][65] /* ty=Tensor[(7, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 1), float32] */;
    %954 = cast(%var_2521, dtype="float32") /* ty=Tensor[(7, 4, 12), float32] */;
    %955 = floor_divide(%953, %954) /* ty=Tensor[(7, 4, 12), float32] */;
    %956 = cast(%955, dtype="bool") /* ty=Tensor[(7, 4, 12), bool] */;
    %957 = shape_of(%var_2521, dtype="int32") /* ty=Tensor[(3), int32] */;
    %958 = cast(%var_2521, dtype="bool") /* ty=Tensor[(7, 4, 12), bool] */;
    %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %960 = logical_or(%958, %959) /* ty=Tensor[(7, 4, 12), bool] */;
    (%960,)
  };
  %961(%var_2533) /* ty=(Tensor[(7, 4, 12), bool],) */
}

def @func_10808(%var_10766: Tensor[(2100), uint8], %var_10794: Tensor[(336, 1), float32]) -> (Tensor[(15, 2, 7), float32], Tensor[(216), uint8], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16]) {
  %962 = cast(meta[relay.Constant][66] /* ty=Tensor[(216), uint8] */, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %963 = cast(%var_10766, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %964 = reshape(%962, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %965 = reshape(%963, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint8] */;
  %966 = @func_7228(%964, %965) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) */;
  %967 = cast(%var_10794, dtype="float32") /* ty=Tensor[(336, 1), float32] */;
  %968 = reshape(%967, newshape=[7, 4, 12]) /* ty=Tensor[(7, 4, 12), float32] */;
  %969 = @func_2532(%968) /* ty=(Tensor[(7, 4, 12), bool],) */;
  %970 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %971 = @func_3956() /* ty=Tensor[(15, 2, 7), float32] */;
  %972 = %966.2;
  %973 = %969.0;
  %974 = %970.1;
  (%971, %972, meta[relay.Constant][66] /* ty=Tensor[(216), uint8] */, %var_10766, %973, %var_10794, %974)
}

def @func_7541() -> (Tensor[(15, 2, 7), bool],) {
  %975 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
  %976 = cast(meta[relay.Constant][67] /* ty=Tensor[(15, 2, 7), int16] */, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %977 = shape_of(%975, dtype="int32") /* ty=Tensor[(3), int32] */;
  %978 = cast(%975, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
  %979 = dyn.reshape(%976, %977, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %980 = greater_equal(%978, %979) /* ty=Tensor[(15, 2, 7), bool] */;
  (%980,)
}

def @func_9231() -> (Tensor[(15, 2, 7), float32],) {
  @func_9229() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_10103(%var_10101: uint8) -> (Tensor[(192), int16], Tensor[(1050), int32], Tensor[(336), float32], uint8) {
  %981 = @func_5553() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(192), int16]) */;
  %982 = cast(meta[relay.Constant][68] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %983 = cast(%var_10101, dtype="uint8") /* ty=uint8 */;
  %984 = reshape(%982, newshape=[336]) /* ty=Tensor[(336), float32] */;
  %985 = reshape(%983, newshape=[]) /* ty=uint8 */;
  %986 = @func_5652(%984, %985) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
  %987 = %981.1;
  %988 = %986.2;
  (%987, %988, meta[relay.Constant][68] /* ty=Tensor[(336), float32] */, %var_10101)
}

def @func_1778(%var_1775: Tensor[(8, 9, 3), uint8], %var_1776: Tensor[(8, 9, 3), uint8], %var_1777: Tensor[(1, 2100), uint8]) -> (Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) {
  @func_1773(%var_1775, %var_1776, %var_1777) /* ty=(Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) */
}

def @func_4968() -> Tensor[(11, 13, 6), uint64] {
  @func_4966() /* ty=Tensor[(11, 13, 6), uint64] */
}

def @func_4935() -> (Tensor[(15, 2, 7), int16], Tensor[(2100), uint8], Tensor[(2100), uint8]) {
  %995 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(2100), uint8], Tensor[(2100), uint8]) {
    %989 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
    %990 = cast(meta[relay.Constant][69] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %991 = reshape(%990, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %992 = @func_4694(%991) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
    %993 = %989.1;
    %994 = %992.2;
    (%993, %994, meta[relay.Constant][69] /* ty=Tensor[(2100), uint8] */)
  };
  %995() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(2100), uint8], Tensor[(2100), uint8]) */
}

def @func_7854() -> Tensor[(15, 2, 7), float32] {
  @func_6442() /* ty=Tensor[(15, 2, 7), float32] */
}

def @func_4087(%var_4086: Tensor[(15, 2, 7), float32]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float64]) {
  %1010 = fn (%var_4074: Tensor[(15, 2, 7), float32]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float64]) {
    %996 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %997 = %996.0;
    %998 = cast(meta[relay.Constant][70] /* ty=Tensor[(15, 2, 7), float32] */, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
    %999 = shape_of(%997, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1000 = cast(%997, dtype="bool") /* ty=Tensor[(15, 2, 7), bool] */;
    %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1002 = cast(%var_4074, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
    %1003 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(15, 2, 7), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1004 = cast(meta[relay.Constant][70] /* ty=Tensor[(15, 2, 7), float32] */, dtype="uint8") /* ty=Tensor[(15, 2, 7), uint8] */;
    %1005 = dyn.reshape(%1002, %1003, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1006 = cast(%var_4074, dtype="float64") /* ty=Tensor[(15, 2, 7), float64] */;
    %1007 = logical_and(%1000, %1001) /* ty=Tensor[(15, 2, 7), bool] */;
    %1008 = bitwise_xor(%1004, %1005) /* ty=Tensor[(15, 2, 7), uint8] */;
    %1009 = atanh(%1006) /* ty=Tensor[(15, 2, 7), float64] */;
    (%1007, %1008, %1009)
  };
  %1010(%var_4086) /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float64]) */
}

def @func_8491(%var_8488: Tensor[(16, 7, 1), uint64], %var_8489: Tensor[(16, 7, 13), uint64], %var_8490: Tensor[(336), int16]) -> (Tensor[(16, 7, 13), uint64], Tensor[(8, 7, 6), int16], int16, Tensor[(16, 7, 336), float64]) {
  %1024 = fn (%var_8453: Tensor[(16, 7, 1), uint64], %var_8454: Tensor[(16, 7, 13), uint64], %var_8463: Tensor[(336), int16]) -> (Tensor[(16, 7, 13), uint64], Tensor[(8, 7, 6), int16], int16, Tensor[(16, 7, 336), float64]) {
    %1011 = cast(%var_8453, dtype="uint64") /* ty=Tensor[(16, 7, 1), uint64] */;
    %1012 = cast(%var_8454, dtype="uint64") /* ty=Tensor[(16, 7, 13), uint64] */;
    %1013 = cast(meta[relay.Constant][71] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1014 = cast(%var_8463, dtype="int16") /* ty=Tensor[(336), int16] */;
    %1015 = reshape(%1013, newshape=[]) /* ty=int16 */;
    %1016 = reshape(%1014, newshape=[8, 7, 6]) /* ty=Tensor[(8, 7, 6), int16] */;
    %1017 = cast(%var_8453, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
    %1018 = asin(%1017) /* ty=Tensor[(16, 7, 1), float64] */;
    %1019 = cast(%1018, dtype="float64") /* ty=Tensor[(16, 7, 1), float64] */;
    %1020 = cast(%var_8463, dtype="float64") /* ty=Tensor[(336), float64] */;
    %1021 = bitwise_or(%1011, %1012) /* ty=Tensor[(16, 7, 13), uint64] */;
    %1022 = @func_1017(%1015, %1016) /* ty=Tensor[(8, 7, 6), int16] */;
    %1023 = divide(%1019, %1020) /* ty=Tensor[(16, 7, 336), float64] */;
    (%1021, %1022, meta[relay.Constant][71] /* ty=int16 */, %1023)
  };
  %1024(%var_8488, %var_8489, %var_8490) /* ty=(Tensor[(16, 7, 13), uint64], Tensor[(8, 7, 6), int16], int16, Tensor[(16, 7, 336), float64]) */
}

def @func_5276(%var_5251: Tensor[(8, 2, 2), float64]) -> (Tensor[(11, 13, 6), uint64], Tensor[(1440), float64], Tensor[(8, 2, 2), bool]) {
  %1025 = cast(meta[relay.Constant][72] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %1026 = cast(meta[relay.Constant][72] /* ty=Tensor[(1440), float64] */, dtype="bool") /* ty=Tensor[(1440), bool] */;
  %1027 = reshape(%1025, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %1028 = reshape(%1026, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %1029 = @func_943(%1027, %1028) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1030 = cast(%var_5251, dtype="float64") /* ty=Tensor[(8, 2, 2), float64] */;
  %1031 = asinh(%1030) /* ty=Tensor[(8, 2, 2), float64] */;
  %1032 = cast(%var_5251, dtype="bool") /* ty=Tensor[(8, 2, 2), bool] */;
  %1033 = shape_of(%1031, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1034 = cast(%1031, dtype="bool") /* ty=Tensor[(8, 2, 2), bool] */;
  %1035 = dyn.reshape(%1032, %1033, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1036 = %1029.2;
  %1037 = logical_and(%1034, %1035) /* ty=Tensor[(8, 2, 2), bool] */;
  (%1036, meta[relay.Constant][72] /* ty=Tensor[(1440), float64] */, %1037)
}

def @func_6923(%var_6882: Tensor[(2100), float64]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(11, 13, 6), uint64], Tensor[(2100), bool]) {
  %1038 = cast(meta[relay.Constant][73] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %1039 = reshape(%1038, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %1040 = @func_4694(%1039) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
  %1041 = cast(meta[relay.Constant][73] /* ty=Tensor[(2100), uint8] */, dtype="float64") /* ty=Tensor[(2100), float64] */;
  %1042 = acos(%1041) /* ty=Tensor[(2100), float64] */;
  %1043 = cast(%var_6882, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(2100), bool] */;
  %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1047 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %1048 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
  %1049 = %1040.0;
  %1050 = logical_and(%1045, %1046) /* ty=Tensor[(2100), bool] */;
  (%1047, %1048, %1049, %1050)
}

def @func_7813() -> (Tensor[(15, 2, 7), bool],) {
  %1051 = @func_5612() /* ty=Tensor[(15, 2, 7), bool] */;
  (%1051,)
}

def @func_8024() -> (Tensor[(15, 2, 7), int16],) {
  %1054 = fn () -> (Tensor[(15, 2, 7), int16],) {
    %1052 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
    %1053 = %1052.1;
    (%1053,)
  };
  %1054() /* ty=(Tensor[(15, 2, 7), int16],) */
}

def @func_4696(%var_4695: Tensor[(2100), uint8]) -> (Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) {
  %1063 = fn (%var_4691: Tensor[(2100), uint8]) -> (Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) {
    %1055 = @func_4399() /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32], Tensor[(11, 78), int8], Tensor[(15, 2, 7), int32], Tensor[(15, 2, 7), float32], Tensor[(9, 2, 5), bool], Tensor[(90), bool]) */;
    %1056 = cast(%var_4691, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %1057 = cast(meta[relay.Constant][74] /* ty=Tensor[(1050), int32] */, dtype="int32") /* ty=Tensor[(1050), int32] */;
    %1058 = reshape(%1056, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %1059 = reshape(%1057, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %1060 = @func_4062(%1058, %1059) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(2, 168), float32], Tensor[(96, 2), int16], Tensor[(7, 4, 12), float64]) */;
    %1061 = %1055.1;
    %1062 = %1060.5;
    (%1061, %1062, %var_4691, meta[relay.Constant][74] /* ty=Tensor[(1050), int32] */)
  };
  %1063(%var_4695) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */
}

def @func_4992() -> (Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) {
  %1071 = fn () -> (Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) {
    %1064 = @func_4337() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1440), float64], Tensor[(15, 2, 7), float64], Tensor[(858), float32]) */;
    %1065 = cast(meta[relay.Constant][75] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %1066 = cast(meta[relay.Constant][76] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
    %1067 = reshape(%1065, newshape=[]) /* ty=int16 */;
    %1068 = reshape(%1066, newshape=[8, 7, 6]) /* ty=Tensor[(8, 7, 6), int16] */;
    %1069 = %1064.3;
    %1070 = @func_1017(%1067, %1068) /* ty=Tensor[(8, 7, 6), int16] */;
    (%1069, %1070, meta[relay.Constant][75] /* ty=int16 */, meta[relay.Constant][76] /* ty=Tensor[(336), int16] */)
  };
  %1071() /* ty=(Tensor[(858), float32], Tensor[(8, 7, 6), int16], int16, Tensor[(336), int16]) */
}

def @func_4882(%var_4880: uint8) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(15, 10, 14), uint8], Tensor[(1050), int32]) {
  @func_4879(%var_4880) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(15, 10, 14), uint8], Tensor[(1050), int32]) */
}

def @func_8819(%var_8818: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), float64], Tensor[(2100), uint8]) {
  %1083 = fn (%var_8798: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), float64], Tensor[(2100), uint8]) {
    %1072 = cast(%var_8798, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %1073 = reshape(%1072, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %1074 = @func_4694(%1073) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
    %1075 = cast(%var_8798, dtype="float64") /* ty=Tensor[(2100), float64] */;
    %1076 = cast(%var_8798, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %1077 = reshape(%1076, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %1078 = @func_4694(%1077) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32]) */;
    %1079 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
    %1080 = %1074.1;
    %1081 = atan(%1075) /* ty=Tensor[(2100), float64] */;
    %1082 = %1078.2;
    (%1079, %1080, %1081, %1082)
  };
  %1083(%var_8818) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), float64], Tensor[(2100), uint8]) */
}

def @func_7319(%var_7301: Tensor[(1050), int32]) -> (Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(15, 2, 7), float32]) {
  %1084 = @func_3306() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1085 = cast(%var_7301, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %1086 = cast(%var_7301, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %1087 = reshape(%1085, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %1088 = reshape(%1086, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %1089 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
  %1090 = %1084.0;
  %1091 = @func_4160() /* ty=Tensor[(15, 2, 7), float32] */;
  %1092 = @func_2159(%1087, %1088) /* ty=Tensor[(7, 15, 10), int32] */;
  %1093 = %1089.0;
  (%1090, %1091, %1092, %var_7301, %1093)
}

def @func_9011() -> (Tensor[(15, 2, 7), float32],) {
  %1096 = fn () -> (Tensor[(15, 2, 7), float32],) {
    %1094 = @func_7052() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %1095 = %1094.0;
    (%1095,)
  };
  %1096() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_5425(%var_5421: Tensor[(192), int16], %var_5422: Tensor[(936), uint16], %var_5423: Tensor[(1, 1050), int32], %var_5424: Tensor[(216), uint8]) -> (Tensor[(15, 2, 7), int16], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(936), uint16], Tensor[(1, 1050), int32], Tensor[(216), uint8]) {
  %1119 = fn (%var_5390: Tensor[(192), int16], %var_5405: Tensor[(936), uint16], %var_5406: Tensor[(1, 1050), int32], %var_5407: Tensor[(216), uint8]) -> (Tensor[(15, 2, 7), int16], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(936), uint16], Tensor[(1, 1050), int32], Tensor[(216), uint8]) {
    %1097 = @func_4915() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16]) */;
    %1098 = cast(%var_5390, dtype="int16") /* ty=Tensor[(192), int16] */;
    %1099 = cast(meta[relay.Constant][77] /* ty=uint8 */, dtype="uint8") /* ty=uint8 */;
    %1100 = cast(meta[relay.Constant][78] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %1101 = reshape(%1098, newshape=[8, 24]) /* ty=Tensor[(8, 24), int16] */;
    %1102 = reshape(%1099, newshape=[]) /* ty=uint8 */;
    %1103 = reshape(%1100, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %1104 = @func_3618(%1101, %1102, %1103) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(336), float32], Tensor[(336), float32], uint8, Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(8, 24), float32]) */;
    %1105 = cast(%var_5405, dtype="uint16") /* ty=Tensor[(936), uint16] */;
    %1106 = cast(%var_5405, dtype="uint16") /* ty=Tensor[(936), uint16] */;
    %1107 = cast(%var_5406, dtype="int32") /* ty=Tensor[(1, 1050), int32] */;
    %1108 = cast(%var_5407, dtype="uint8") /* ty=Tensor[(216), uint8] */;
    %1109 = cast(meta[relay.Constant][78] /* ty=Tensor[(2100), uint8] */, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %1110 = reshape(%1105, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
    %1111 = reshape(%1106, newshape=[12, 6, 13]) /* ty=Tensor[(12, 6, 13), uint16] */;
    %1112 = reshape(%1107, newshape=[1050]) /* ty=Tensor[(1050), int32] */;
    %1113 = reshape(%1108, newshape=[216]) /* ty=Tensor[(216), uint8] */;
    %1114 = reshape(%1109, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %1115 = @func_2404(%1110, %1111, %1112, %1113, %1114) /* ty=(Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) */;
    %1116 = %1097.1;
    %1117 = %1104.2;
    %1118 = %1115.3;
    (%1116, %1117, %var_5390, meta[relay.Constant][77] /* ty=uint8 */, meta[relay.Constant][78] /* ty=Tensor[(2100), uint8] */, %1118, %var_5405, %var_5406, %var_5407)
  };
  %1119(%var_5421, %var_5422, %var_5423, %var_5424) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(336), float32], Tensor[(192), int16], uint8, Tensor[(2100), uint8], Tensor[(11, 13, 6), uint64], Tensor[(936), uint16], Tensor[(1, 1050), int32], Tensor[(216), uint8]) */
}

def @func_5096() -> Tensor[(11, 13, 6), uint64] {
  %1121 = fn () -> Tensor[(11, 13, 6), uint64] {
    %1120 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %1120.2
  };
  %1121() /* ty=Tensor[(11, 13, 6), uint64] */
}

def @func_8556(%var_8553: Tensor[(5, 10, 12), float32], %var_8554: Tensor[(5, 10, 12), float32], %var_8555: uint8) -> (Tensor[(5, 10, 12), float32], Tensor[(24, 8), int16], Tensor[(1, 336), float32], uint8) {
  %1133 = fn (%var_8520: Tensor[(5, 10, 12), float32], %var_8521: Tensor[(5, 10, 12), float32], %var_8542: uint8) -> (Tensor[(5, 10, 12), float32], Tensor[(24, 8), int16], Tensor[(1, 336), float32], uint8) {
    %1122 = cast(%var_8521, dtype="float32") /* ty=Tensor[(5, 10, 12), float32] */;
    %1123 = shape_of(%var_8520, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1124 = cast(%var_8520, dtype="float32") /* ty=Tensor[(5, 10, 12), float32] */;
    %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1126 = cast(meta[relay.Constant][79] /* ty=Tensor[(1, 336), float32] */, dtype="float32") /* ty=Tensor[(1, 336), float32] */;
    %1127 = cast(%var_8542, dtype="uint8") /* ty=uint8 */;
    %1128 = reshape(%1126, newshape=[336]) /* ty=Tensor[(336), float32] */;
    %1129 = reshape(%1127, newshape=[]) /* ty=uint8 */;
    %1130 = @func_5652(%1128, %1129) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float64], Tensor[(1050), int32], Tensor[(336), float32], Tensor[(24, 8), int16], uint8) */;
    %1131 = floor_mod(%1124, %1125) /* ty=Tensor[(5, 10, 12), float32] */;
    %1132 = %1130.4;
    (%1131, %1132, meta[relay.Constant][79] /* ty=Tensor[(1, 336), float32] */, %var_8542)
  };
  %1133(%var_8553, %var_8554, %var_8555) /* ty=(Tensor[(5, 10, 12), float32], Tensor[(24, 8), int16], Tensor[(1, 336), float32], uint8) */
}

def @func_7097(%var_7095: Tensor[(336), float32]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], uint8, Tensor[(336), float32], uint8) {
  @func_7094(%var_7095) /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], uint8, Tensor[(336), float32], uint8) */
}

def @func_11033() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
  %1137 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
    %1134 = @func_8664() /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) */;
    %1135 = @func_4773() /* ty=Tensor[(15, 2, 7), int16] */;
    %1136 = %1134.1;
    (%1135, %1136)
  };
  %1137() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */
}

def @func_4130(%var_4128: Tensor[(15, 2, 7), float32]) -> Tensor[(15, 2, 7), float64] {
  @func_4127(%var_4128) /* ty=Tensor[(15, 2, 7), float64] */
}

def @func_7747() -> (Tensor[(15, 2, 7), float32],) {
  @func_7745() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_9597(%var_9596: Tensor[(11, 2, 12), float64]) -> (Tensor[(11, 2, 12), float64],) {
  %1140 = fn (%var_9589: Tensor[(11, 2, 12), float64]) -> (Tensor[(11, 2, 12), float64],) {
    %1138 = cast(%var_9589, dtype="float64") /* ty=Tensor[(11, 2, 12), float64] */;
    %1139 = atan(%1138) /* ty=Tensor[(11, 2, 12), float64] */;
    (%1139,)
  };
  %1140(%var_9596) /* ty=(Tensor[(11, 2, 12), float64],) */
}

def @func_9352() -> Tensor[(15, 2, 7), float32] {
  %1141 = @func_6024() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1141.0
}

def @func_11497() -> (Tensor[(15, 2, 7), int16],) {
  %1142 = @func_4855() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_11750() -> Tensor[(9, 2, 5), bool] {
  @func_11748() /* ty=Tensor[(9, 2, 5), bool] */
}

def @func_5716(%var_5714: Tensor[(336), float32]) -> (Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(7, 4, 12), bool], Tensor[(336), float32]) {
  @func_5713(%var_5714) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(1050), int32], Tensor[(2100), uint8], Tensor[(1050), int32], Tensor[(7, 4, 12), bool], Tensor[(336), float32]) */
}

def @func_4775() -> Tensor[(15, 2, 7), int16] {
  @func_4773() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_9398() -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
  %1147 = fn () -> (Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) {
    %1144 = @func_5826() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
    %1145 = @func_8131() /* ty=Tensor[(15, 2, 7), int16] */;
    %1146 = %1144.1;
    (%1145, %1146)
  };
  %1147() /* ty=(Tensor[(15, 2, 7), int16], Tensor[(15, 2, 7), float32]) */
}

def @func_12016() -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) {
  %1151 = fn () -> (Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) {
    %1148 = @func_9229() /* ty=(Tensor[(15, 2, 7), float32],) */;
    %1149 = @func_4966() /* ty=Tensor[(11, 13, 6), uint64] */;
    %1150 = %1148.0;
    (%1149, %1150)
  };
  %1151() /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(15, 2, 7), float32]) */
}

def @func_7815() -> (Tensor[(15, 2, 7), bool],) {
  @func_7813() /* ty=(Tensor[(15, 2, 7), bool],) */
}

def @func_2404(%var_2296: Tensor[(12, 6, 13), uint16], %var_2297: Tensor[(12, 6, 13), uint16], %var_2336: Tensor[(1050), int32], %var_2390: Tensor[(216), uint8], %var_2391: Tensor[(2100), uint8]) -> (Tensor[(12, 6, 13), uint16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(11, 13, 6), uint64], Tensor[(20, 72), float64], Tensor[(7, 15, 10), int32], Tensor[(1050), int32], Tensor[(11, 13, 6), uint64], Tensor[(1400), float64], Tensor[(11, 13, 6), uint64], Tensor[(12, 6, 13), uint8], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(2100), uint8], Tensor[(858), uint64]) {
  %1152 = cast(%var_2297, dtype="uint16") /* ty=Tensor[(12, 6, 13), uint16] */;
  %1153 = shape_of(%var_2296, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1154 = cast(%var_2296, dtype="uint16") /* ty=Tensor[(12, 6, 13), uint16] */;
  %1155 = dyn.reshape(%1152, %1153, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1156 = cast(meta[relay.Constant][80] /* ty=Tensor[(858), uint64] */, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %1157 = reshape(%1156, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %1158 = @func_320(%1157) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %1159 = cast(meta[relay.Constant][81] /* ty=Tensor[(20, 72), float64] */, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %1160 = cast(meta[relay.Constant][81] /* ty=Tensor[(20, 72), float64] */, dtype="bool") /* ty=Tensor[(20, 72), bool] */;
  %1161 = reshape(%1159, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %1162 = reshape(%1160, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %1163 = @func_943(%1161, %1162) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1164 = cast(%var_2336, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %1165 = cast(%var_2336, dtype="int32") /* ty=Tensor[(1050), int32] */;
  %1166 = reshape(%1164, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %1167 = reshape(%1165, newshape=[7, 15, 10]) /* ty=Tensor[(7, 15, 10), int32] */;
  %1168 = cast(meta[relay.Constant][82] /* ty=Tensor[(1400), float64] */, dtype="float64") /* ty=Tensor[(1400), float64] */;
  %1169 = reshape(%1168, newshape=[10, 14, 10]) /* ty=Tensor[(10, 14, 10), float64] */;
  %1170 = @func_1196(%1169) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(10, 14, 10), float64], Tensor[(11, 13, 6), uint64]) */;
  %1171 = %1163.2;
  %1172 = cast(%1171, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %1173 = reshape(%1172, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %1174 = @func_320(%1173) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %1175 = cast(%var_2296, dtype="float32") /* ty=Tensor[(12, 6, 13), float32] */;
  %1176 = sin(%1175) /* ty=Tensor[(12, 6, 13), float32] */;
  %1177 = cast(%1176, dtype="float64") /* ty=Tensor[(12, 6, 13), float64] */;
  %1178 = acos(%1177) /* ty=Tensor[(12, 6, 13), float64] */;
  %1179 = cast(%1178, dtype="float64") /* ty=Tensor[(12, 6, 13), float64] */;
  %1180 = rsqrt(%1179) /* ty=Tensor[(12, 6, 13), float64] */;
  %1181 = cast(%var_2297, dtype="uint8") /* ty=Tensor[(12, 6, 13), uint8] */;
  %1182 = shape_of(%1180, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1183 = cast(%1180, dtype="uint8") /* ty=Tensor[(12, 6, 13), uint8] */;
  %1184 = dyn.reshape(%1181, %1182, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1185 = cast(%var_2390, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1186 = cast(%var_2390, dtype="uint8") /* ty=Tensor[(216), uint8] */;
  %1187 = cast(%var_2391, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %1188 = reshape(%1185, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %1189 = reshape(%1186, newshape=[8, 9, 3]) /* ty=Tensor[(8, 9, 3), uint8] */;
  %1190 = reshape(%1187, newshape=[1, 2100]) /* ty=Tensor[(1, 2100), uint8] */;
  %1191 = @func_1773(%1188, %1189, %1190) /* ty=(Tensor[(8, 9, 3), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(1, 2100), uint8]) */;
  %1192 = cast(meta[relay.Constant][81] /* ty=Tensor[(20, 72), float64] */, dtype="float64") /* ty=Tensor[(20, 72), float64] */;
  %1193 = cast(meta[relay.Constant][81] /* ty=Tensor[(20, 72), float64] */, dtype="bool") /* ty=Tensor[(20, 72), bool] */;
  %1194 = reshape(%1192, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), float64] */;
  %1195 = reshape(%1193, newshape=[12, 8, 15]) /* ty=Tensor[(12, 8, 15), bool] */;
  %1196 = @func_943(%1194, %1195) /* ty=(Tensor[(12, 8, 15), float64], Tensor[(12, 8, 15), float64], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1197 = left_shift(%1154, %1155) /* ty=Tensor[(12, 6, 13), uint16] */;
  %1198 = %1158.0;
  %1199 = @func_2159(%1166, %1167) /* ty=Tensor[(7, 15, 10), int32] */;
  %1200 = %1170.0;
  %1201 = %1174.0;
  %1202 = bitwise_or(%1183, %1184) /* ty=Tensor[(12, 6, 13), uint8] */;
  %1203 = %1191.0;
  %1204 = %1196.3;
  (%1197, %1198, meta[relay.Constant][80] /* ty=Tensor[(858), uint64] */, %1171, meta[relay.Constant][81] /* ty=Tensor[(20, 72), float64] */, %1199, %var_2336, %1200, meta[relay.Constant][82] /* ty=Tensor[(1400), float64] */, %1201, %1202, %1203, %var_2390, %var_2391, %1204)
}

def @func_5983(%var_5981: Tensor[(858), uint64], %var_5982: Tensor[(858), float64]) -> (Tensor[(15, 2, 7), int16], Tensor[(7, 4, 12), bool], Tensor[(336), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(858), uint64], Tensor[(858), float32]) {
  @func_5979(%var_5981, %var_5982) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(7, 4, 12), bool], Tensor[(336), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(858), uint64], Tensor[(858), float32]) */
}

def @func_4413() -> (Tensor[(15, 2, 7), float32],) {
  @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */
}

def @func_7745() -> (Tensor[(15, 2, 7), float32],) {
  %1205 = @func_6442() /* ty=Tensor[(15, 2, 7), float32] */;
  (%1205,)
}

def @func_8282() -> (Tensor[(15, 2, 7), float32],) {
  %1206 = @func_5172() /* ty=Tensor[(15, 2, 7), float32] */;
  (%1206,)
}

def @func_9878() -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) {
  %1210 = fn () -> (Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) {
    %1207 = @func_7813() /* ty=(Tensor[(15, 2, 7), bool],) */;
    %1208 = %1207.0;
    %1209 = @func_7003() /* ty=Tensor[(15, 2, 7), float64] */;
    (%1208, %1209)
  };
  %1210() /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 2, 7), float64]) */
}

def @func_10492() -> Tensor[(15, 2, 7), int16] {
  %1211 = @func_10269() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %1211.0
}

def @func_10362() -> Tensor[(15, 2, 7), int16] {
  @func_10360() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_4649(%var_4647: Tensor[(858), uint64]) -> (Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) {
  @func_4646(%var_4647) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */
}

def @func_8234(%var_8229: int32, %var_8230: Tensor[(16, 14, 5), int32]) -> (Tensor[(16, 14, 5), int32],) {
  %1212 = cast(%var_8229, dtype="int32") /* ty=int32 */;
  %1213 = cast(%var_8230, dtype="int32") /* ty=Tensor[(16, 14, 5), int32] */;
  %1214 = multiply(%1212, %1213) /* ty=Tensor[(16, 14, 5), int32] */;
  (%1214,)
}

def @func_8720(%var_8683: Tensor[(2100), uint8], %var_8691: Tensor[(112), uint64], %var_8701: Tensor[(858), uint64], %var_8704: Tensor[(858), uint64]) -> (Tensor[(15, 2, 7), int16], Tensor[(216), uint8], Tensor[(2100), uint8], int16, Tensor[(112), uint64], Tensor[(1456), uint64], Tensor[(336), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), bool], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32], Tensor[(216, 1), float64]) {
  %1215 = @func_4556() /* ty=(Tensor[(15, 2, 7), int16],) */;
  %1216 = cast(meta[relay.Constant][83] /* ty=Tensor[(216, 1), uint8] */, dtype="uint8") /* ty=Tensor[(216, 1), uint8] */;
  %1217 = cast(%var_8683, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
  %1218 = reshape(%1216, newshape=[216]) /* ty=Tensor[(216), uint8] */;
  %1219 = reshape(%1217, newshape=[30, 70]) /* ty=Tensor[(30, 70), uint8] */;
  %1220 = @func_7228(%1218, %1219) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(8, 9, 3), bool], Tensor[(216), uint8], Tensor[(30, 70), uint8]) */;
  %1221 = cast(%var_8691, dtype="uint64") /* ty=Tensor[(112), uint64] */;
  %1222 = cast(meta[relay.Constant][84] /* ty=Tensor[(1456), uint64] */, dtype="uint64") /* ty=Tensor[(1456), uint64] */;
  %1223 = cast(meta[relay.Constant][85] /* ty=Tensor[(336), int16] */, dtype="int16") /* ty=Tensor[(336), int16] */;
  %1224 = reshape(%1221, newshape=[16, 7, 1]) /* ty=Tensor[(16, 7, 1), uint64] */;
  %1225 = reshape(%1222, newshape=[16, 7, 13]) /* ty=Tensor[(16, 7, 13), uint64] */;
  %1226 = reshape(%1223, newshape=[336]) /* ty=Tensor[(336), int16] */;
  %1227 = @func_8487(%1224, %1225, %1226) /* ty=(Tensor[(16, 7, 13), uint64], Tensor[(8, 7, 6), int16], int16, Tensor[(16, 7, 336), float64]) */;
  %1228 = cast(%var_8701, dtype="uint64") /* ty=Tensor[(858), uint64] */;
  %1229 = reshape(%1228, newshape=[11, 13, 6]) /* ty=Tensor[(11, 13, 6), uint64] */;
  %1230 = @func_320(%1229) /* ty=(Tensor[(11, 13, 6), uint64],) */;
  %1231 = cast(%var_8704, dtype="bool") /* ty=Tensor[(858), bool] */;
  %1232 = shape_of(%var_8701, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1233 = cast(%var_8701, dtype="bool") /* ty=Tensor[(858), bool] */;
  %1234 = dyn.reshape(%1231, %1232, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1235 = @func_4411() /* ty=(Tensor[(15, 2, 7), float32],) */;
  %1236 = @func_7802() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(192), int16], Tensor[(15, 2, 7), bool]) */;
  %1237 = cast(meta[relay.Constant][83] /* ty=Tensor[(216, 1), uint8] */, dtype="float64") /* ty=Tensor[(216, 1), float64] */;
  %1238 = %1215.0;
  %1239 = %1220.2;
  %1240 = %1227.2;
  %1241 = %1230.0;
  %1242 = equal(%1233, %1234) /* ty=Tensor[(858), bool] */;
  %1243 = %1235.0;
  %1244 = %1236.0;
  %1245 = erf(%1237) /* ty=Tensor[(216, 1), float64] */;
  (%1238, %1239, %var_8683, %1240, %var_8691, meta[relay.Constant][84] /* ty=Tensor[(1456), uint64] */, meta[relay.Constant][85] /* ty=Tensor[(336), int16] */, %1241, %1242, %1243, %1244, %1245)
}

def @func_3697(%var_3693: Tensor[(15, 2, 7), float32], %var_3694: uint8, %var_3695: Tensor[(336), float32], %var_3696: Tensor[(192), int16]) -> (Tensor[(15, 2, 7), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(192), int16], Tensor[(7, 4, 12), float64]) {
  @func_3691(%var_3693, %var_3694, %var_3695, %var_3696) /* ty=(Tensor[(15, 2, 7), bool], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(336), float32], Tensor[(192), int16], Tensor[(7, 4, 12), float64]) */
}

def @func_9675(%var_9674: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) {
  %1251 = fn (%var_9670: Tensor[(2100), uint8]) -> (Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) {
    %1246 = cast(%var_9670, dtype="uint8") /* ty=Tensor[(2100), uint8] */;
    %1247 = reshape(%1246, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
    %1248 = @func_8817(%1247) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), float64], Tensor[(2100), uint8]) */;
    %1249 = @func_9493() /* ty=Tensor[(15, 2, 7), float32] */;
    %1250 = %1248.1;
    (%1249, %1250, %var_9670)
  };
  %1251(%var_9674) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(1050), int32], Tensor[(2100), uint8]) */
}

def @func_11942(%var_11940: Tensor[(48), float32]) -> (Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(3, 4, 4), uint64], Tensor[(48), float32], Tensor[(15, 2, 7), bool]) {
  @func_11939(%var_11940) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(3, 4, 4), uint64], Tensor[(48), float32], Tensor[(15, 2, 7), bool]) */
}

def @func_10605(%var_10530: Tensor[(42), float32], %var_10541: uint8, %var_10542: Tensor[(3, 700), uint8], %var_10565: Tensor[(210, 1), float32]) -> (Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(42), float32], Tensor[(192), int16], Tensor[(3, 700), uint8], Tensor[(2, 168), bool], Tensor[(11, 13, 6), uint64], Tensor[(210, 336), uint8]) {
  %1252 = @func_4195() /* ty=(Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
  %1253 = cast(%var_10530, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1254 = %1252.2;
  %1255 = cast(%1254, dtype="uint64") /* ty=Tensor[(11, 13, 6), uint64] */;
  %1256 = reshape(%1253, newshape=[1, 7, 6]) /* ty=Tensor[(1, 7, 6), float32] */;
  %1257 = reshape(%1255, newshape=[858]) /* ty=Tensor[(858), uint64] */;
  %1258 = @func_10464(%1256, %1257) /* ty=(Tensor[(11, 13, 6), uint64], Tensor[(858), uint64], Tensor[(15, 2, 7), uint8], Tensor[(105, 2), float32], Tensor[(?, 7, 6), bool]) */;
  %1259 = cast(meta[relay.Constant][87] /* ty=Tensor[(336), float32] */, dtype="float32") /* ty=Tensor[(336), float32] */;
  %1260 = cast(meta[relay.Constant][86] /* ty=Tensor[(192), int16] */, dtype="int16") /* ty=Tensor[(192), int16] */;
  %1261 = cast(%var_10541, dtype="uint8") /* ty=uint8 */;
  %1262 = cast(%var_10542, dtype="uint8") /* ty=Tensor[(3, 700), uint8] */;
  %1263 = reshape(%1259, newshape=[2, 168]) /* ty=Tensor[(2, 168), float32] */;
  %1264 = reshape(%1260, newshape=[192]) /* ty=Tensor[(192), int16] */;
  %1265 = reshape(%1261, newshape=[]) /* ty=uint8 */;
  %1266 = reshape(%1262, newshape=[2100]) /* ty=Tensor[(2100), uint8] */;
  %1267 = @func_3408(%1263, %1264, %1265, %1266) /* ty=(Tensor[(15, 2, 7), float32], Tensor[(7, 4, 12), bool], Tensor[(2, 168), float32], Tensor[(858), uint64], Tensor[(192), int16], Tensor[(15, 10, 14), uint8], uint8, Tensor[(2100), uint8], Tensor[(7, 15, 10), int32], Tensor[(1050), int32]) */;
  %1268 = %1267.2;
  %1269 = cast(%1268, dtype="bool") /* ty=Tensor[(2, 168), bool] */;
  %1270 = cast(%var_10541, dtype="bool") /* ty=bool */;
  %1271 = cast(%var_10565, dtype="float32") /* ty=Tensor[(210, 1), float32] */;
  %1272 = reshape(%1271, newshape=[15, 2, 7]) /* ty=Tensor[(15, 2, 7), float32] */;
  %1273 = @func_4506(%1272) /* ty=(Tensor[(15, 2, 7), float64], Tensor[(11, 13, 6), uint64], Tensor[(192), int16], Tensor[(15, 2, 7), uint8], Tensor[(15, 2, 7), float32], Tensor[(15, 2, 7), float32]) */;
  %1274 = cast(meta[relay.Constant][87] /* ty=Tensor[(336), float32] */, dtype="uint8") /* ty=Tensor[(336), uint8] */;
  %1275 = cast(%var_10565, dtype="uint8") /* ty=Tensor[(210, 1), uint8] */;
  %1276 = %1258.1;
  %1277 = greater_equal(%1269, %1270) /* ty=Tensor[(2, 168), bool] */;
  %1278 = %1273.1;
  %1279 = bitwise_xor(%1274, %1275) /* ty=Tensor[(210, 336), uint8] */;
  (%1254, %1276, %var_10530, meta[relay.Constant][86] /* ty=Tensor[(192), int16] */, %var_10542, %1277, %1278, %1279)
}

def @func_6190(%var_6188: uint8) -> (Tensor[(90), bool], Tensor[(15, 2, 7), bool], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(15, 2, 7), bool]) {
  @func_6187(%var_6188) /* ty=(Tensor[(90), bool], Tensor[(15, 2, 7), bool], Tensor[(7, 4, 12), bool], Tensor[(336, 1), float32], Tensor[(192), int16], Tensor[(2100), uint8], Tensor[(15, 2, 7), bool]) */
}

def @func_10494() -> Tensor[(15, 2, 7), int16] {
  @func_10492() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_11410(%var_11408: Tensor[(2, 7, 10), float32]) -> (Tensor[(2, 7, 10), float32],) {
  @func_11407(%var_11408) /* ty=(Tensor[(2, 7, 10), float32],) */
}

def @func_8133() -> Tensor[(15, 2, 7), int16] {
  @func_8131() /* ty=Tensor[(15, 2, 7), int16] */
}

def @func_4811(%var_4810: Tensor[(1, 858), uint64]) -> (Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(1, 858), uint64]) {
  %1286 = fn (%var_4803: Tensor[(1, 858), uint64]) -> (Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(1, 858), uint64]) {
    %1280 = @func_4727() /* ty=(Tensor[(15, 2, 7), int16],) */;
    %1281 = cast(%var_4803, dtype="uint64") /* ty=Tensor[(1, 858), uint64] */;
    %1282 = reshape(%1281, newshape=[858]) /* ty=Tensor[(858), uint64] */;
    %1283 = @func_4646(%1282) /* ty=(Tensor[(16, 3, 5), int8], Tensor[(11, 13, 6), uint64], Tensor[(858), uint64]) */;
    %1284 = %1280.0;
    %1285 = %1283.1;
    (%1284, %1285, %var_4803)
  };
  %1286(%var_4810) /* ty=(Tensor[(15, 2, 7), int16], Tensor[(11, 13, 6), uint64], Tensor[(1, 858), uint64]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen651/build/output.py", line 3342, in <module>
    graph, lib, params = relay.build(mod, target='llvm')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  98: TVMFuncCall
  97: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  96: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  95: tvm::relay::backend::RelayBuildModule::OptimizeImpl(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&)
  94: tvm::transform::Pass::operator()(tvm::IRModule) const
  93: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  92: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  91: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  90: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  89: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::DynamicToStatic()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  88: tvm::relay::DynamicToStatic(tvm::relay::Function, tvm::IRModule)
  87: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  86: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  85: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  84: _ZN3tvm5relay1
  83: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  82: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  81: _ZZN3tvm5relay11ExprFunc
  80: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  79: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  78: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  77: tvm::relay::DynamicToStaticMutator::DispatchVisitExpr(tvm::RelayExpr const&)
  76: _ZN3tvm5relay1
  75: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  74: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  73: _ZZN3tvm5relay11ExprFunc
  72: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  71: tvm::relay::DynamicToStaticMutator::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  70: std::_Function_handler<tvm::RelayExpr (tvm::relay::CallNode const*), tvm::relay::DynamicToStaticMutator::DynamicToStaticMutator(tvm::IRModule, tvm::relay::Function)::{lambda(tvm::relay::CallNode const*)#1}>::_M_invoke(std::_Any_data const&, tvm::relay::CallNode const*&&)
  69: tvm::relay::DynamicToStaticMutator::PrepareArgs(tvm::relay::CallNode const*)
  68: tvm::relay::DynamicToStaticMutator::PrepareInput(tvm::RelayExpr const&)
  67: tvm::transform::Pass::operator()(tvm::IRModule) const
  66: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  65: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  64: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::transform::FoldConstant()::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  63: tvm::relay::transform::FoldConstantExpr(tvm::RelayExpr const&, tvm::IRModule const&)
  62: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  61: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  60: _ZN3tvm5relay1
  59: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  58: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  57: _ZZN3tvm5relay11ExprFunc
  56: tvm::relay::transform::(anonymous namespace)::ConstantFolder::VisitExpr_(tvm::relay::FunctionNode const*)
  55: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  54: tvm::relay::MixedModeMutator::VisitExpr(tvm::RelayExpr const&)
  53: tvm::relay::MixedModeMutator::VisitLeaf(tvm::RelayExpr const&)
  52: _ZN3tvm5relay1
  51: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  50: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  49: _ZZN3tvm5relay11ExprFunc
  48: tvm::relay::MixedModeMutator::VisitExpr_(tvm::relay::CallNode const*)
  47: tvm::relay::transform::(anonymous namespace)::ConstantFolder::Rewrite_(tvm::relay::CallNode const*, tvm::RelayExpr const&)
  46: tvm::relay::transform::(anonymous namespace)::ConstantFolder::ConstEvaluate(tvm::RelayExpr const&)
  45: tvm::relay::Eval(tvm::RelayExpr, tvm::runtime::Map<tvm::GlobalTypeVar, tvm::TypeData, void, void>, std::unordered_set<tvm::runtime::String, std::hash<tvm::runtime::String>, std::equal_to<tvm::runtime::String>, std::allocator<tvm::runtime::String> >, DLDevice, tvm::Target)
  44: tvm::relay::Prepare(tvm::IRModule, tvm::CompilationConfig)
  43: tvm::transform::Pass::operator()(tvm::IRModule) const
  42: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  41: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  40: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  39: tvm::transform::SequentialNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  38: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  37: tvm::transform::ModulePassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  36: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::IRModule (tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTEPass(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)::{lambda(tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  35: tvm::relay::tec::LowerTE(tvm::IRModule const&, std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, std::function<void (tvm::relay::Function)>)
  34: tvm::transform::Pass::operator()(tvm::IRModule) const
  33: tvm::transform::Pass::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  32: tvm::relay::transform::FunctionPassNode::operator()(tvm::IRModule, tvm::transform::PassContext const&) const
  31: tvm::runtime::TypedPackedFunc<tvm::relay::Function (tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)>::AssignTypedLambda<tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1}>(tvm::relay::tec::LowerTensorExpr(std::unordered_map<DLDeviceType, tvm::Target, tvm::relay::backend::EnumClassHash, std::equal_to<DLDeviceType>, std::allocator<std::pair<DLDeviceType const, tvm::Target> > >, tvm::runtime::String const&, tvm::relay::tec::TECompiler, std::function<void (tvm::relay::Function)>)::{lambda(tvm::relay::Function, tvm::IRModule, tvm::transform::PassContext)#1})::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  30: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  29: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  28: _ZZN3tvm5relay11ExprFunc
  27: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  26: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::FunctionNode const*)
  25: _ZN3tvm5relay9
  24: tvm::relay::ExprMutator::VisitExpr_(tvm::relay::FunctionNode const*)
  23: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  22: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  21: _ZZN3tvm5relay11ExprFunc
  20: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::LetNode const*)
  19: tvm::relay::tec::LowerTensorExprMutator::PreVisitLetBinding_(tvm::relay::Var const&, tvm::RelayExpr const&)
  18: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  17: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  16: _ZZN3tvm5relay11ExprFunc
  15: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  14: tvm::relay::ExprMutator::VisitExpr(tvm::RelayExpr const&)
  13: tvm::relay::ExprFunctor<tvm::RelayExpr (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  12: _ZZN3tvm5relay11ExprFunc
  11: tvm::relay::transform::DeviceAwareExprMutator::VisitExpr_(tvm::relay::CallNode const*)
  10: tvm::relay::tec::LowerTensorExprMutator::DeviceAwareVisitExpr_(tvm::relay::CallNode const*)
  9: tvm::relay::tec::LowerTensorExprMutator::MakeLoweredCall(tvm::relay::Function, tvm::runtime::Array<tvm::RelayExpr, void>, tvm::runtime::Array<tvm::Type, void>, tvm::Span, tvm::Target)
  8: tvm::relay::tec::TECompilerImpl::LowerShapeFuncInternal(tvm::relay::tec::CCacheKey const&)
  7: tvm::relay::tec::ShapeFuncFor(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  6: tvm::relay::tec::MakeShapeFunc::Create(tvm::relay::Function const&, tvm::Target const&, std::function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > (std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)>)
  5: tvm::relay::tec::MakeShapeFunc::VisitExpr(tvm::RelayExpr const&)
  4: tvm::relay::backend::MemoizedExprTranslator<tvm::runtime::Array<tvm::te::Tensor, void> >::VisitExpr(tvm::RelayExpr const&)
  3: tvm::relay::ExprFunctor<tvm::runtime::Array<tvm::te::Tensor, void> (tvm::RelayExpr const&)>::VisitExpr(tvm::RelayExpr const&)
  2: _ZZN3tvm5relay11ExprFunc
  1: tvm::relay::tec::MakeShapeFunc::VisitExpr_(tvm::relay::CallNode const*)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/relay/op/dyn/_transform.py", line 92, in dynamic_reshape_shape_func
    return [_reshape_shape_func_input_data(*inputs, out_ndims[0])]
  File "/home/yujunzhe/.local/lib/python3.9/site-packages/decorator.py", line 232, in fun
    return caller(func, *(extras + args), **kw)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/__init__.py", line 60, in wrapped_func
    return source_to_op(src, args, func.__globals__, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 634, in source_to_op
    parser = parse_python(src, args, symbols, closure_vars)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 604, in parse_python
    parser.parsed_body = parser.visit(root)
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 229, in visit_Module
    return self.visit(node.body[0])
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 242, in visit_FunctionDef
    res = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 506, in visit_For
    body = visit_list_to_block(self.visit, node.body)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 419, in visit_If
    else_body = visit_list_to_block(self.visit, node.orelse)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in visit_list_to_block
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 58, in <listcomp>
    lst = [visit(stmt) for stmt in lst if not utils.is_docstring(stmt)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 406, in visit_If
    cond = self.analyzer.simplify(self.visit(node.test))
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 432, in visit_Compare
    ops = [self.visit(node.left)]
  File "/home/yujunzhe/anaconda3/envs/tvm0.8/lib/python3.9/ast.py", line 409, in visit
    return visitor(node)
  File "/home/yujunzhe/tvm/python/tvm/te/hybrid/parser.py", line 389, in visit_Subscript
    return tvm.tir.ProducerLoad(arr, args)
  File "/home/yujunzhe/tvm/python/tvm/tir/expr.py", line 1078, in __init__
    self.__init_handle_by_constructor__(
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/object.py", line 136, in __init_handle_by_constructor__
    handle = __init_by_constructor__(fconstructor, args)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 260, in __init_handle_by_constructor__
    raise get_last_ffi_error()
  3: TVMFuncCall
  2: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  1: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  4: TVMFuncCall
  3: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::runtime::TypedPackedFunc<tvm::tir::ProducerLoad (tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)>::AssignTypedLambda<tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}>(tvm::tir::__mk_TVM137::{lambda(tvm::tir::DataProducer, tvm::runtime::Array<tvm::PrimExpr, void>, tvm::Span)#1}, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  2: tvm::runtime::TVMMovableArgValueWithContext_::operator tvm::runtime::Array<tvm::PrimExpr, void><tvm::runtime::Array<tvm::PrimExpr, void> >() const
  1: tvm::runtime::Array<tvm::PrimExpr, void> tvm::runtime::TVMPODValue_::AsObjectRef<tvm::runtime::Array<tvm::PrimExpr, void> >() const
  0: _ZN3tvm7runtime6deta
  File "/home/yujunzhe/tvm/include/tvm/runtime/packed_func.h", line 714
TVMError: In function tir.ProducerLoad: error while converting argument 1: [13:45:19] /home/yujunzhe/tvm/include/tvm/runtime/packed_func.h:1611: 
---------------------------------------------------------------
An error occurred during the execution of TVM.
For more information, please see: https://tvm.apache.org/docs/errors.html
---------------------------------------------------------------

  Check failed: type_code_ == kTVMObjectHandle (0 vs. 8) : expected Object but got int


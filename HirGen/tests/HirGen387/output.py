import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_514 = relay.var("var_514", dtype = "int32", shape = (8, 9, 4))#candidate|514|(8, 9, 4)|var|int32
var_515 = relay.var("var_515", dtype = "int32", shape = (8, 9, 4))#candidate|515|(8, 9, 4)|var|int32
bop_516 = relay.logical_xor(var_514.astype('int32'), relay.reshape(var_515.astype('int32'), relay.shape_of(var_514))) # shape=(8, 9, 4)
output = bop_516
output2 = bop_516
func_519 = relay.Function([var_514,var_515,], output)
mod['func_519'] = func_519
mod = relay.transform.InferType()(mod)
var_520 = relay.var("var_520", dtype = "int32", shape = (8, 9, 4))#candidate|520|(8, 9, 4)|var|int32
var_521 = relay.var("var_521", dtype = "int32", shape = (8, 9, 4))#candidate|521|(8, 9, 4)|var|int32
output = func_519(var_520,var_521,)
func_522 = relay.Function([var_520,var_521,], output)
mutated_mod['func_522'] = func_522
mutated_mod = relay.transform.InferType()(mutated_mod)
var_946 = relay.var("var_946", dtype = "float32", shape = (2, 1, 14))#candidate|946|(2, 1, 14)|var|float32
uop_947 = relay.log(var_946.astype('float32')) # shape=(2, 1, 14)
uop_949 = relay.rsqrt(uop_947.astype('float64')) # shape=(2, 1, 14)
func_519_call = mod.get_global_var('func_519')
func_522_call = mutated_mod.get_global_var('func_522')
const_959 = relay.const([-8,-2,-7,-4,8,5,-9,-5,2,10,-1,-2,-8,2,8,-3,-4,-5,-2,6,-6,3,9,8,3,-9,-7,-1,3,6,-5,-6,-5,-10,4,6,6,7,9,-1,5,7,10,6,3,5,-2,7,-3,-4,-2,9,2,-5,5,-1,5,10,-8,-1,10,-7,6,-2,8,10,-6,9,-6,9,2,2,10,5,2,-6,-1,-7,-6,7,-4,-5,-5,10,-9,-7,-9,-10,-2,-6,10,-7,5,-5,-10,9,9,-6,-8,-10,-3,10,5,-10,5,-3,10,-6,-3,-7,5,-9,-2,3,-9,-9,-7,6,-10,-10,4,2,3,-8,8,9,3,-10,-1,5,5,4,-6,5,-9,-5,-8,7,-4,6,-10,9,-3,8,-1,7,10,9,4,-6,-1,-5,7,-10,7,-4,5,2,-2,3,7,1,-3,-5,-6,-7,-9,8,4,-6,-8,-8,4,10,-10,1,-4,5,3,-4,1,8,6,6,5,-1,-2,5,-6,-2,-9,6,-5,5,-2,-9,-2,1,-4,-8,-8,-4,-7,-6,6,-1,-3,2,-1,8,-4,4,-7,-6,3,1,-2,-2,4,3,-10,-6,-3,-4,3,-8,2,-5,-9,9,-4,3,-7,-6,-7,-10,-3,-3,-5,1,-9,-5,10,-8,-10,3,1,-1,-5,9,3,-10,-8,-5,7,10,-4,7,-4,5,3,-7,5,3,4,9,-3,-8,-1,-3,8,4,-8,-7,7,-6,9,-7,3,2,3,-9,-2,9,-9,-4,8,8], dtype = "int32")#candidate|959|(288,)|const|int32
call_958 = func_519_call(relay.reshape(const_959.astype('int32'), [8, 9, 4]), relay.reshape(const_959.astype('int32'), [8, 9, 4]), )
call_960 = func_519_call(relay.reshape(const_959.astype('int32'), [8, 9, 4]), relay.reshape(const_959.astype('int32'), [8, 9, 4]), )
output = relay.Tuple([uop_949,call_958,const_959,])
output2 = relay.Tuple([uop_949,call_960,const_959,])
func_971 = relay.Function([var_946,], output)
mod['func_971'] = func_971
mod = relay.transform.InferType()(mod)
var_972 = relay.var("var_972", dtype = "float32", shape = (2, 1, 14))#candidate|972|(2, 1, 14)|var|float32
output = func_971(var_972)
func_973 = relay.Function([var_972], output)
mutated_mod['func_973'] = func_973
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1001 = relay.var("var_1001", dtype = "int8", shape = (7, 8, 16))#candidate|1001|(7, 8, 16)|var|int8
var_1002 = relay.var("var_1002", dtype = "int8", shape = (7, 8, 16))#candidate|1002|(7, 8, 16)|var|int8
bop_1003 = relay.bitwise_and(var_1001.astype('int8'), relay.reshape(var_1002.astype('int8'), relay.shape_of(var_1001))) # shape=(7, 8, 16)
output = bop_1003
output2 = bop_1003
func_1006 = relay.Function([var_1001,var_1002,], output)
mod['func_1006'] = func_1006
mod = relay.transform.InferType()(mod)
var_1007 = relay.var("var_1007", dtype = "int8", shape = (7, 8, 16))#candidate|1007|(7, 8, 16)|var|int8
var_1008 = relay.var("var_1008", dtype = "int8", shape = (7, 8, 16))#candidate|1008|(7, 8, 16)|var|int8
output = func_1006(var_1007,var_1008,)
func_1009 = relay.Function([var_1007,var_1008,], output)
mutated_mod['func_1009'] = func_1009
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1041 = relay.var("var_1041", dtype = "float64", shape = (7, 5, 7))#candidate|1041|(7, 5, 7)|var|float64
uop_1042 = relay.sqrt(var_1041.astype('float64')) # shape=(7, 5, 7)
uop_1046 = relay.erf(uop_1042.astype('float32')) # shape=(7, 5, 7)
bop_1058 = relay.add(uop_1046.astype('int32'), relay.reshape(var_1041.astype('int32'), relay.shape_of(uop_1046))) # shape=(7, 5, 7)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
const_1062 = relay.const([6.721612,-5.226691,-6.590458,0.614355,-6.348456,-0.847731,1.035610,1.384824,-6.219478,-2.649535,-4.042422,-7.205740,1.354535,7.231364,-3.344915,6.303640,8.216183,-1.341089,-9.850706,-5.845496,7.800573,6.188185,8.925946,0.042783,3.871734,-5.833170,1.464586,-0.607082], dtype = "float32")#candidate|1062|(28,)|const|float32
call_1061 = relay.TupleGetItem(func_971_call(relay.reshape(const_1062.astype('float32'), [2, 1, 14])), 0)
call_1063 = relay.TupleGetItem(func_973_call(relay.reshape(const_1062.astype('float32'), [2, 1, 14])), 0)
output = relay.Tuple([bop_1058,call_1061,const_1062,])
output2 = relay.Tuple([bop_1058,call_1063,const_1062,])
func_1064 = relay.Function([var_1041,], output)
mod['func_1064'] = func_1064
mod = relay.transform.InferType()(mod)
mutated_mod['func_1064'] = func_1064
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1065 = relay.var("var_1065", dtype = "float64", shape = (7, 5, 7))#candidate|1065|(7, 5, 7)|var|float64
func_1064_call = mutated_mod.get_global_var('func_1064')
call_1066 = func_1064_call(var_1065)
output = call_1066
func_1067 = relay.Function([var_1065], output)
mutated_mod['func_1067'] = func_1067
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1272 = relay.const([[[2.331908,-2.190447,7.500285,-0.139351,-8.028874,2.749105,-4.276282,-2.201855],[-5.636804,-5.759225,-7.641934,-2.396285,-9.163094,1.639491,-8.060677,-1.588814],[7.443126,7.052758,-4.599873,1.071662,-0.675098,-8.677267,-7.745648,2.653491],[1.423784,-3.406287,-1.428161,3.286945,-1.379610,5.402073,3.523223,-5.908475],[-2.086871,6.970664,6.916675,3.550671,-0.232897,-3.329975,6.972124,6.709037],[3.616420,-0.588375,-9.029609,2.009582,-0.220427,7.535376,-7.284374,-4.886608]],[[-0.216056,0.588726,2.367548,8.092826,-7.303702,-0.255389,2.231793,-6.395712],[-7.538321,9.846729,-6.106659,7.277933,0.727332,1.113891,-1.962673,1.826963],[1.422616,-2.381572,7.857557,-3.982868,-7.984755,9.327643,-2.807746,-8.094997],[-0.364995,2.896896,-5.438741,7.382633,-1.135248,8.614350,0.104355,9.978843],[9.913680,7.018175,5.072410,-1.786960,-0.675065,-3.760348,-8.458792,6.395357],[-6.084230,5.616860,3.340096,-3.217628,9.965783,-8.757761,-9.730350,-1.514995]],[[-4.302380,6.057234,8.606979,8.337627,4.631582,2.111889,-5.386187,7.506754],[2.706750,-5.985342,9.891832,-1.055158,-3.646909,7.906501,-6.999178,7.983086],[9.992374,6.142378,-4.279775,0.779288,-7.664046,4.841373,6.945367,6.348103],[-7.280926,-6.572635,-6.280039,-1.219951,7.606667,-6.361205,9.125039,-0.983464],[-8.893732,-6.672510,-9.115730,-6.168734,-4.349034,-6.034818,-5.615842,-0.212026],[5.170866,1.752612,-2.803627,-2.223544,8.552412,8.710088,-5.457560,-0.818340]],[[2.221048,-4.483484,-9.782868,-0.944446,-1.420128,-6.076294,-9.721160,9.067988],[9.233214,-6.693335,9.408623,-4.774595,3.966392,6.113088,5.160509,-8.591783],[-1.329549,7.494362,2.018989,4.447209,-6.324614,2.914496,3.515789,-4.464317],[7.121469,-6.556578,0.830648,8.438083,-9.035131,0.758944,-9.579709,0.490139],[-8.196547,8.791981,-1.325005,7.931783,1.660909,-8.631046,-6.452283,3.275844],[8.260943,-2.997777,-6.944887,1.753322,-6.545185,8.836708,-0.357213,-0.253699]],[[7.240771,-9.572528,-3.627893,-9.613144,-7.347132,-9.734492,0.483506,-2.088835],[9.836300,6.298775,5.648492,9.980038,3.550353,-3.800636,7.260996,-3.731795],[9.523173,-8.428377,5.162500,2.765196,6.964645,-9.456648,4.059300,6.827970],[1.232902,0.580829,0.842980,-8.282049,0.363521,-4.855927,9.132909,5.294860],[-6.873747,4.700743,-7.329336,1.467261,-0.997450,-5.935277,3.540307,8.140987],[-9.592672,4.383355,3.252618,6.018469,-9.028417,1.766810,-3.307549,-5.242431]],[[-4.220499,-4.481380,-9.545934,0.844655,8.673447,8.122359,1.100700,2.014196],[1.815906,-3.171523,0.715834,8.638696,0.370585,1.775792,7.516033,-1.822921],[9.989427,-9.956405,7.832578,1.799746,5.365702,1.842486,6.861069,-0.826848],[9.740692,0.585357,-6.085838,-3.417132,2.838472,-8.943415,-2.328470,-9.278327],[8.884293,4.995456,-7.342928,-4.246247,0.457241,4.980147,-6.010818,1.050857],[-2.405277,-6.589682,4.767658,-5.054759,6.386636,0.661630,-3.384169,1.771147]],[[-6.394539,-3.741421,3.029587,-5.059150,-1.480139,5.178514,-1.428267,-4.399127],[6.719145,9.027191,1.548294,1.432774,-7.952940,-7.802400,9.918260,3.267275],[2.659906,-0.373433,-4.702383,6.204231,-2.738883,2.674836,-3.703971,0.527339],[4.122971,-0.810682,5.873966,5.342319,3.154878,-4.585268,8.415944,-9.861120],[9.078027,-4.234961,-4.987185,-0.822153,-8.386307,7.493442,6.122975,1.710881],[3.528637,1.731067,8.901731,9.723616,4.671344,8.582243,8.763819,6.131423]],[[8.143253,-8.225573,3.881455,-2.729678,-8.041662,-2.926852,2.510628,-4.279625],[-6.767648,9.498351,-0.765559,-4.517545,-9.076899,4.809128,2.861223,-0.598211],[-5.673108,-9.495523,1.479917,4.938752,-8.096379,7.912478,2.544064,5.338380],[7.038483,-5.496265,1.643718,4.792814,-0.968045,5.498164,6.647973,-5.364107],[-3.125198,-6.034050,-7.045236,4.823795,5.758406,-6.937273,4.882124,-1.680239],[-1.241049,-5.644385,5.325888,2.123619,-2.175839,-3.737505,-1.769063,9.066703]],[[4.049052,-1.128399,-7.086813,9.454281,-7.161191,-1.659605,4.690656,-5.454175],[6.696088,7.325764,2.273462,0.997773,8.711365,7.916932,-9.199430,-6.086705],[-4.352054,1.572283,-7.944317,6.469804,-8.559121,-0.875896,-5.793606,4.648576],[-4.562563,4.019901,9.711884,4.893973,-6.698156,-6.019902,-5.321739,-8.213740],[5.049651,9.170939,-6.125081,-7.044340,-7.942334,-1.373164,-6.493896,7.185481],[-3.247725,-8.459785,0.458417,-0.534043,-8.808327,-6.148341,6.871629,-9.061994]],[[7.711928,1.730417,-8.902160,-7.932230,-6.577159,0.178965,2.538897,3.268748],[9.355195,0.450270,-9.401353,-9.301001,9.020537,5.788643,-5.804289,7.727806],[8.691106,1.840370,3.836524,-1.459522,8.149156,-8.631431,-1.849247,-4.250942],[9.702143,-4.900424,-5.062478,-9.626570,-7.673131,-4.790018,2.351066,-1.295750],[-4.794033,-6.027864,2.464563,-9.250791,7.766245,7.892761,-1.906972,8.540029],[-1.866044,5.160294,5.587023,-3.933286,9.803024,-4.730595,-2.366149,3.870304]],[[-9.220289,-5.415050,2.144192,-7.297383,6.768021,-1.171968,-5.819253,1.260741],[-2.468214,7.147528,0.515572,4.910540,-3.914448,2.274315,-0.629821,-7.459653],[3.932510,-5.741884,7.258865,0.202784,7.179885,-4.959142,0.877220,-5.145764],[9.767180,0.093505,9.600675,2.221956,-9.329009,-6.522429,-5.424317,-4.936814],[-3.949278,-3.470746,0.166616,-7.099560,7.904105,-6.479175,6.218693,-0.411960],[-1.194468,2.022797,-1.718566,-4.549861,6.375737,8.661743,5.975232,7.979964]],[[8.969527,4.331569,9.761021,5.334719,-6.727313,-5.696965,-7.140287,-3.621080],[-9.121819,-7.735912,8.401887,-3.271545,0.233986,-5.827990,6.532545,-9.924169],[5.099240,2.768762,-9.729529,0.984917,6.580065,-7.855714,2.645857,-4.289628],[-2.168606,-4.395920,8.945116,-5.743788,3.611284,6.197424,3.019931,5.883166],[9.685811,4.631678,8.732915,2.816206,-1.588276,-4.372283,-1.010646,-4.747662],[6.017193,-4.697260,0.859070,5.606731,9.989493,6.524930,3.992151,5.681898]],[[5.823300,-4.597393,-3.843475,2.320375,5.157612,-0.277012,9.103208,-5.473625],[4.237754,1.146413,4.829606,6.452574,-1.357998,1.014693,0.798932,-1.716196],[-7.748033,2.203096,-7.654029,8.430488,-0.210398,-5.297352,-2.022205,-8.009240],[8.461579,-8.099281,6.548578,-2.081303,-6.741420,7.753610,-4.258063,1.989874],[-0.946429,9.818847,1.916470,-5.781245,-0.644911,6.375932,7.550198,1.605495],[-6.086324,5.198935,6.982313,3.123165,-1.637951,-7.638302,-3.324856,3.005184]],[[-2.158934,-8.862700,1.356020,-7.430899,8.182364,7.041296,8.990542,9.238009],[-6.264827,6.596063,-9.066633,-8.175509,2.225603,-7.708139,-9.852209,-9.961336],[-3.410601,-9.380127,3.419215,-7.392080,6.910967,4.599748,-6.397879,-8.996953],[-2.334735,-1.664133,-3.309857,7.414022,0.661709,3.872903,6.995070,6.168762],[-5.644274,8.251342,-8.384577,-3.135803,3.745475,-0.249995,3.856102,9.460761],[7.301243,-4.981024,-0.513106,1.988832,7.136032,2.286632,0.663331,4.387482]],[[-1.124210,7.094069,-4.163935,-7.248642,-2.782102,4.976268,9.494281,6.035889],[-6.528421,-4.607665,7.733807,8.826085,6.228580,7.129049,1.505584,-1.152238],[6.455225,-1.057184,-1.212782,-8.697491,8.866237,-4.472405,-4.156439,2.378544],[8.671320,8.865686,-9.434043,-7.763354,3.037343,-1.243855,-6.060671,-5.394392],[-7.304264,0.194787,-0.272042,7.230152,9.464719,-6.801287,6.981517,-5.372662],[-5.168661,1.463063,-5.339363,-6.805694,8.287686,-0.784275,2.385341,-2.291070]],[[8.400059,-4.293160,5.424904,-9.912752,4.999375,-9.976125,-2.281902,-4.688453],[-8.332695,5.386117,5.907996,-9.217159,-4.154534,-5.034605,9.981859,-7.735183],[-5.675859,-0.629224,-7.908517,-1.130727,-7.048978,4.689247,1.315710,0.814384],[1.230031,6.099598,-3.713265,-2.484629,-9.844300,-6.194469,9.039756,4.032778],[-4.315023,3.449954,-4.560327,-8.054520,-6.761239,7.889731,3.938934,3.337705],[-9.468356,7.763580,-0.462820,5.698868,-3.908986,-5.000945,-1.688702,7.629627]]], dtype = "float64")#candidate|1272|(16, 6, 8)|const|float64
uop_1273 = relay.exp(const_1272.astype('float64')) # shape=(16, 6, 8)
func_1064_call = mod.get_global_var('func_1064')
func_1067_call = mutated_mod.get_global_var('func_1067')
var_1276 = relay.var("var_1276", dtype = "float64", shape = (245,))#candidate|1276|(245,)|var|float64
call_1275 = relay.TupleGetItem(func_1064_call(relay.reshape(var_1276.astype('float64'), [7, 5, 7])), 2)
call_1277 = relay.TupleGetItem(func_1067_call(relay.reshape(var_1276.astype('float64'), [7, 5, 7])), 2)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
call_1279 = relay.TupleGetItem(func_971_call(relay.reshape(call_1275.astype('float32'), [2, 1, 14])), 1)
call_1280 = relay.TupleGetItem(func_973_call(relay.reshape(call_1275.astype('float32'), [2, 1, 14])), 1)
output = relay.Tuple([uop_1273,call_1275,var_1276,call_1279,])
output2 = relay.Tuple([uop_1273,call_1277,var_1276,call_1280,])
func_1289 = relay.Function([var_1276,], output)
mod['func_1289'] = func_1289
mod = relay.transform.InferType()(mod)
mutated_mod['func_1289'] = func_1289
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1290 = relay.var("var_1290", dtype = "float64", shape = (245,))#candidate|1290|(245,)|var|float64
func_1289_call = mutated_mod.get_global_var('func_1289')
call_1291 = func_1289_call(var_1290)
output = call_1291
func_1292 = relay.Function([var_1290], output)
mutated_mod['func_1292'] = func_1292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1581 = relay.var("var_1581", dtype = "uint64", shape = ())#candidate|1581|()|var|uint64
const_1582 = relay.const([[[10,-7,9,4,-3,5,-4,10,-10,9,-6,6,-9],[10,3,-2,-7,7,-8,9,-5,-7,-5,-7,6,9],[-7,2,6,-3,-1,1,5,6,-7,7,9,1,10],[9,5,10,4,7,-3,-8,-9,-4,5,10,-3,3],[2,8,-3,-10,6,10,3,2,2,-2,-9,5,-4],[-7,1,-3,-8,-7,-9,-9,8,-6,9,-6,-8,-1],[-5,-2,-9,-8,-8,5,1,9,8,6,9,4,-2],[10,1,6,6,-4,6,7,-2,-2,-4,-4,10,6],[-4,9,5,7,-9,-1,-10,3,-7,-1,-5,-4,3],[1,10,3,2,-9,1,2,-8,6,9,5,2,-7],[-9,5,-10,5,6,3,8,-6,7,-1,-10,-4,-6]],[[7,5,4,6,5,-10,6,-6,5,-1,5,8,5],[-2,-8,-10,-8,-10,10,-6,2,3,1,6,-5,6],[5,7,1,-2,10,4,8,2,10,3,3,1,-7],[-1,-4,-4,8,-2,3,-8,6,10,-5,-4,-4,6],[-2,3,-6,4,1,10,1,8,3,-4,-9,-5,-9],[-7,3,-10,4,6,8,-7,-8,-8,-6,3,-4,10],[-3,6,-3,7,-10,-3,-10,2,9,-9,-8,-7,5],[6,7,3,-1,2,-5,10,-5,2,3,7,5,10],[3,10,5,9,3,2,4,8,2,-7,-4,-4,2],[9,-7,3,-6,10,-8,-5,-3,-7,-2,8,-6,3],[-3,6,-8,5,6,5,-8,7,-6,-10,-1,7,1]],[[-1,10,6,-1,-9,9,-4,1,-9,8,8,10,2],[3,7,5,-5,-2,-8,-5,-3,2,-1,1,-1,-8],[1,-5,1,4,-5,8,4,1,4,-9,-10,8,-4],[-5,-6,-2,-3,1,6,-4,4,9,3,-10,-5,5],[1,-1,2,8,1,6,8,9,-5,-4,-8,-7,-4],[9,-5,7,10,1,-5,10,8,1,-5,9,-5,9],[6,4,10,-9,8,2,-5,-9,-1,-8,5,4,-10],[-10,-4,8,-2,7,-8,8,2,3,3,10,1,3],[-5,-7,-10,2,3,-3,4,8,8,-7,10,-10,4],[-6,-5,-4,-8,7,-8,-1,1,-8,5,9,4,6],[8,6,3,10,3,-10,4,8,-8,-3,-6,-6,-8]],[[6,10,7,-7,9,-7,10,2,-2,9,8,-10,8],[1,6,-8,-3,-4,6,3,1,-6,-1,-3,5,-4],[3,4,-1,5,6,2,2,8,-9,-5,3,3,10],[-9,-10,-9,-1,4,8,1,-3,-1,-3,4,4,-2],[1,-10,-1,-7,4,-4,9,-8,7,10,4,-6,-4],[9,-2,-2,-4,5,5,-8,9,5,2,-4,-3,-1],[-10,6,-9,-2,3,3,8,5,-1,-4,7,-8,-3],[7,1,-6,7,4,4,7,10,5,10,-3,4,-1],[7,7,-4,-9,-2,-3,-5,-5,3,-6,-3,-10,2],[-4,-9,5,-4,9,7,-2,-10,-8,-4,-4,4,-7],[-1,-2,8,-9,-2,-6,-7,6,-2,-4,5,-9,-6]],[[3,3,9,-7,-8,8,6,10,-6,-7,-2,1,1],[-10,3,1,8,-8,-9,9,-3,-3,-4,-1,1,-3],[4,10,7,4,-8,10,1,4,-6,-9,7,-8,-6],[-3,4,1,7,-3,-3,-8,4,-8,7,-8,2,-2],[1,2,-6,8,1,9,-3,4,-3,-9,-10,3,7],[-10,1,10,1,-3,6,-8,1,5,-4,-9,1,4],[-5,1,-10,-10,5,7,1,5,-9,4,-4,3,-8],[-5,-2,-2,-5,8,-8,-10,-8,10,-7,7,-10,6],[-2,2,-3,8,-5,10,-5,-7,7,-5,4,-4,-8],[7,-6,4,3,-5,-2,-10,3,-8,8,-1,-3,-2],[10,10,-9,-8,9,10,-9,-8,9,-9,-8,1,2]],[[-3,-6,4,10,-6,10,-3,-7,2,-1,-6,-6,3],[1,2,-7,10,9,-1,-9,-8,-10,-9,6,-2,2],[7,10,4,5,-5,-2,-8,-1,7,-6,9,8,5],[-1,-2,3,-1,-1,-6,-2,9,-8,-2,-3,-8,-8],[7,5,1,-6,-9,2,4,6,8,-5,-9,-3,1],[-3,-7,6,-4,-3,-6,-8,10,6,3,-7,7,9],[4,-8,8,-4,10,-8,-2,1,-1,-5,-9,6,1],[3,3,6,4,4,7,8,9,-4,-8,-9,4,-10],[4,-2,-9,-3,-7,-2,4,2,6,-9,-7,-8,-9],[-3,-10,5,3,9,4,-6,10,1,-6,5,6,-8],[6,7,-2,10,7,8,-5,-2,8,2,-6,3,-8]],[[5,-2,-7,9,-6,6,5,-1,3,-1,-7,-1,-8],[-1,-10,-1,5,7,4,7,7,5,-7,6,-4,-5],[5,-9,-4,5,-3,10,-10,1,-3,3,2,-3,-8],[-10,-3,5,-10,2,-7,9,-1,-8,-8,-4,-9,-10],[-7,-1,1,9,-6,-3,-9,2,1,-7,-4,5,6],[-10,8,-8,-4,-2,-2,-10,-5,7,-7,-1,-2,-3],[3,-8,-9,6,10,-2,2,-7,5,5,10,4,-10],[-8,-1,-1,-8,5,-7,5,-2,-10,-1,1,6,-5],[-5,-6,2,-9,4,7,-9,1,1,3,-3,10,-2],[1,6,-6,3,-5,-3,-7,-6,-3,7,3,2,-3],[-1,-10,-5,-2,-6,-9,-8,3,-3,-2,-3,6,-1]],[[-9,-4,-7,-7,-1,7,-3,-2,2,-1,5,3,2],[4,-7,-6,-5,3,7,-8,-4,2,8,10,-7,-2],[4,10,3,-4,7,1,2,4,3,8,5,-5,-5],[2,7,-4,1,-8,8,-5,2,8,9,3,-4,-9],[2,-3,-10,-9,-10,7,9,-6,-7,-3,-8,-3,5],[-8,9,-1,1,10,-10,8,3,1,-1,8,-9,-7],[6,-3,9,1,9,1,-5,-3,9,6,9,6,4],[9,7,-2,7,-5,5,6,-7,7,-5,10,2,-10],[3,2,-9,3,-7,10,-10,-2,-10,-10,5,-2,8],[8,8,-2,1,-8,-4,-8,-6,5,-3,1,-7,-2],[-10,3,-8,7,-7,5,-2,-10,-6,5,5,9,9]],[[1,3,-8,-2,1,2,-6,-5,-8,-5,-3,-7,4],[10,-1,-7,7,-8,3,8,9,-1,10,7,-5,8],[-3,6,-8,5,7,2,2,-1,-3,10,-8,9,9],[7,6,3,10,-1,8,-10,7,-9,3,5,-8,9],[8,-1,2,2,-3,9,4,4,7,-7,5,5,-7],[-5,7,-10,-2,3,-8,1,-2,9,-4,8,-8,-6],[-2,-2,-1,-5,-2,5,-5,-7,-3,-6,-3,-1,-9],[-8,5,-9,-5,9,1,6,6,-9,-8,-5,7,8],[-8,8,-9,4,2,-4,-6,3,-4,3,10,2,-10],[-1,-8,-8,-9,4,5,-3,-1,2,-9,-7,5,4],[1,3,2,-10,-4,-7,-7,4,-6,6,5,5,4]],[[6,1,5,3,5,4,6,-4,-1,-5,-10,4,-8],[-6,1,-6,-1,5,3,6,5,-3,-5,7,7,-3],[-3,-5,-5,6,2,1,1,1,-7,-1,-6,5,-3],[-9,4,-9,10,8,8,-1,7,6,-9,-3,-4,9],[1,1,-6,-4,4,-7,-1,10,-8,10,3,3,-2],[8,-1,4,-1,-5,7,9,-5,8,1,5,-8,-5],[10,-5,-6,-6,10,-8,7,9,-3,5,-5,5,-10],[-5,7,3,10,10,3,-3,-8,-3,2,-10,8,-4],[10,-1,10,-3,8,4,4,-3,10,9,7,-6,3],[6,3,8,-9,-4,-3,-8,2,8,-8,4,-9,7],[-6,4,8,3,-8,-3,-10,-8,3,-5,-9,-1,-5]],[[4,-10,9,3,5,1,-3,1,-10,4,-3,5,1],[10,-1,-9,-1,8,-4,3,-2,-9,5,-2,10,-2],[-2,10,3,7,9,10,6,-9,-9,-10,-7,8,9],[-9,-4,2,10,-9,-4,-8,4,-2,-8,-1,-5,7],[-1,6,-5,-1,-7,-4,6,1,-4,4,1,-10,-9],[3,5,-6,9,8,-6,-2,3,2,-3,-1,6,-7],[-3,3,10,-6,9,1,1,-9,-10,1,-1,5,8],[1,3,-10,-2,8,8,-7,3,5,7,4,7,1],[8,1,1,-1,-9,3,-3,-5,5,8,-10,-4,6],[-6,-3,2,4,9,-7,-2,-1,-8,-5,5,-7,-10],[5,7,1,-8,-2,-8,-6,-4,7,-9,-10,-5,2]],[[-9,-3,7,2,-1,7,9,-2,6,2,-10,5,-1],[8,3,4,-10,-8,6,1,5,9,-7,-9,-8,2],[-3,-9,3,-8,9,6,-10,-8,-6,-6,-9,5,7],[-1,-8,-4,2,-5,3,9,7,3,4,6,2,-3],[8,-9,3,-1,-4,1,-10,-1,2,-7,7,-8,1],[3,9,-6,-3,1,6,-6,-7,-6,-3,-2,-9,4],[8,9,10,-5,-5,6,-8,1,-1,4,-3,-6,7],[1,-6,-2,-9,-4,-10,-7,-1,-2,-10,-1,-3,10],[5,-2,4,8,10,-4,10,7,-8,8,9,-8,-6],[-9,-6,-5,-5,-5,2,-8,-5,1,-10,-9,7,10],[9,5,9,-2,-3,9,-4,6,10,-8,6,-2,2]],[[-5,-9,2,-2,-3,1,9,-4,3,-3,-6,2,-7],[3,-5,3,3,4,1,-10,-9,2,6,-6,-4,7],[9,-3,-8,-8,-3,-2,4,-2,3,9,-5,-2,9],[-8,-5,2,-4,2,3,-6,4,3,-5,-3,8,-4],[7,2,2,-6,6,-2,-4,4,-8,-6,-10,10,-5],[-6,7,6,6,7,-9,-6,4,7,4,-7,-4,5],[-3,1,-8,-1,-7,-8,-4,-10,9,-7,-3,10,6],[2,-10,3,-3,-1,1,7,-6,8,3,2,5,-6],[-4,8,6,9,10,-9,-6,6,-2,-3,2,-10,-3],[-7,-4,7,-1,-7,6,3,7,10,4,-9,1,-7],[-7,-7,1,-7,9,2,-8,7,4,1,-1,5,9]]], dtype = "uint64")#candidate|1582|(13, 11, 13)|const|uint64
bop_1583 = relay.logical_xor(var_1581.astype('uint64'), const_1582.astype('uint64')) # shape=(13, 11, 13)
output = bop_1583
output2 = bop_1583
func_1586 = relay.Function([var_1581,], output)
mod['func_1586'] = func_1586
mod = relay.transform.InferType()(mod)
var_1587 = relay.var("var_1587", dtype = "uint64", shape = ())#candidate|1587|()|var|uint64
output = func_1586(var_1587)
func_1588 = relay.Function([var_1587], output)
mutated_mod['func_1588'] = func_1588
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1618 = relay.var("var_1618", dtype = "float64", shape = (16, 6, 6))#candidate|1618|(16, 6, 6)|var|float64
uop_1619 = relay.asin(var_1618.astype('float64')) # shape=(16, 6, 6)
output = uop_1619
output2 = uop_1619
func_1628 = relay.Function([var_1618,], output)
mod['func_1628'] = func_1628
mod = relay.transform.InferType()(mod)
var_1629 = relay.var("var_1629", dtype = "float64", shape = (16, 6, 6))#candidate|1629|(16, 6, 6)|var|float64
output = func_1628(var_1629)
func_1630 = relay.Function([var_1629], output)
mutated_mod['func_1630'] = func_1630
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1750 = relay.var("var_1750", dtype = "float64", shape = (10, 11, 3))#candidate|1750|(10, 11, 3)|var|float64
uop_1751 = relay.sqrt(var_1750.astype('float64')) # shape=(10, 11, 3)
bop_1759 = relay.not_equal(uop_1751.astype('bool'), relay.reshape(var_1750.astype('bool'), relay.shape_of(uop_1751))) # shape=(10, 11, 3)
func_1289_call = mod.get_global_var('func_1289')
func_1292_call = mutated_mod.get_global_var('func_1292')
const_1763 = relay.const([-6.480110,5.605385,1.659998,-9.264928,-4.461827,-4.122364,2.066855,6.571884,1.148445,-9.381565,9.052781,-1.357339,-2.035485,6.774932,-2.075533,-4.444990,-6.645570,6.038147,5.477196,7.809630,1.578727,2.321997,-9.821779,8.896731,4.483984,-8.810068,-7.138843,-6.345064,-8.051774,-4.714348,-2.136038,-0.154085,-4.486465,-9.454486,9.078875,-3.957693,-2.321418,8.700677,-0.833885,-8.285324,2.814736,7.896441,0.522663,-6.562333,0.683838,-4.244811,4.032887,-7.919750,-2.546100,5.295550,-0.591546,1.695109,2.353581,-6.254378,9.031022,-1.164789,1.293022,-9.000511,9.884862,-3.922936,-1.253609,-0.926192,8.181568,0.921145,-3.097497,9.426853,-1.411309,0.763492,-8.123193,-2.209436,-4.919819,-9.479067,-4.139842,-8.286679,1.852210,-6.520441,-3.098560,8.922918,-8.676350,3.772957,8.781681,5.676419,5.347690,-0.367870,-1.810109,0.103430,0.082394,-4.077558,7.170792,5.050336,-7.540805,-5.550564,-1.753263,-9.295101,-2.410414,7.673998,5.728856,-3.494219,8.321358,-6.431472,4.479146,-7.115374,1.981887,-1.350722,-4.779899,7.486987,2.940174,0.881981,6.840493,-4.197852,5.651436,7.956308,1.293821,-6.001607,-7.344081,-9.092279,-8.904028,-4.880302,-3.613803,-1.750325,-1.137393,1.170508,1.544154,-4.619538,-7.024757,5.641499,-9.106162,-9.285404,-6.468532,8.362186,5.974340,-2.952527,-7.996669,3.131482,8.236991,6.063003,3.888357,0.542205,6.558791,8.993803,7.269716,-1.027234,-5.306523,4.702330,4.375689,8.724623,-6.811536,-2.183748,6.039186,6.270926,-8.996438,-3.274982,3.509319,-6.210328,9.340657,8.469361,-9.850436,7.709906,-0.110387,0.893294,5.125630,6.010780,-9.315869,-3.199053,1.828329,-5.700460,6.226394,-5.136742,9.581586,8.169995,-9.267319,3.344854,-5.322477,5.047894,3.072292,-3.260922,-6.603722,-6.192826,-1.195351,-9.098182,7.685245,2.151338,8.630191,7.536300,-8.421164,-8.412485,9.995165,-1.754201,-1.144943,4.393685,-9.783078,-7.064357,7.070012,-7.556690,2.764671,7.362263,4.645487,5.801300,-1.476002,8.313131,-7.426109,-0.750271,6.657280,7.610084,-5.209992,6.494474,2.671243,8.513750,9.809059,-9.489305,-4.220415,2.127897,-5.426115,0.327302,5.634221,4.718358,-6.909044,-6.982142,-9.322350,4.699132,-3.384689,-5.353870,-7.137943,-2.038438,0.391911,-4.404634,-8.445428,3.959078,0.411958,-1.679416,-1.801841,-5.500861,1.517932,-1.404875,-7.881372,-8.321360,3.482185,-3.818428,8.941652,8.688896,8.377569,-2.889306,5.528503,-0.413284,-7.649312], dtype = "float64")#candidate|1763|(245,)|const|float64
call_1762 = relay.TupleGetItem(func_1289_call(relay.reshape(const_1763.astype('float64'), [245,])), 2)
call_1764 = relay.TupleGetItem(func_1292_call(relay.reshape(const_1763.astype('float64'), [245,])), 2)
output = relay.Tuple([bop_1759,call_1762,const_1763,])
output2 = relay.Tuple([bop_1759,call_1764,const_1763,])
func_1766 = relay.Function([var_1750,], output)
mod['func_1766'] = func_1766
mod = relay.transform.InferType()(mod)
mutated_mod['func_1766'] = func_1766
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1767 = relay.var("var_1767", dtype = "float64", shape = (10, 11, 3))#candidate|1767|(10, 11, 3)|var|float64
func_1766_call = mutated_mod.get_global_var('func_1766')
call_1768 = func_1766_call(var_1767)
output = call_1768
func_1769 = relay.Function([var_1767], output)
mutated_mod['func_1769'] = func_1769
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1868 = relay.var("var_1868", dtype = "float32", shape = (3, 10, 4))#candidate|1868|(3, 10, 4)|var|float32
var_1869 = relay.var("var_1869", dtype = "float32", shape = (3, 10, 4))#candidate|1869|(3, 10, 4)|var|float32
bop_1870 = relay.less(var_1868.astype('bool'), relay.reshape(var_1869.astype('bool'), relay.shape_of(var_1868))) # shape=(3, 10, 4)
func_519_call = mod.get_global_var('func_519')
func_522_call = mutated_mod.get_global_var('func_522')
var_1875 = relay.var("var_1875", dtype = "int32", shape = (288,))#candidate|1875|(288,)|var|int32
call_1874 = func_519_call(relay.reshape(var_1875.astype('int32'), [8, 9, 4]), relay.reshape(var_1875.astype('int32'), [8, 9, 4]), )
call_1876 = func_519_call(relay.reshape(var_1875.astype('int32'), [8, 9, 4]), relay.reshape(var_1875.astype('int32'), [8, 9, 4]), )
bop_1882 = relay.minimum(bop_1870.astype('uint64'), relay.reshape(var_1869.astype('uint64'), relay.shape_of(bop_1870))) # shape=(3, 10, 4)
bop_1885 = relay.greater_equal(bop_1882.astype('bool'), relay.reshape(var_1868.astype('bool'), relay.shape_of(bop_1882))) # shape=(3, 10, 4)
output = relay.Tuple([call_1874,var_1875,bop_1885,])
output2 = relay.Tuple([call_1876,var_1875,bop_1885,])
func_1906 = relay.Function([var_1868,var_1869,var_1875,], output)
mod['func_1906'] = func_1906
mod = relay.transform.InferType()(mod)
var_1907 = relay.var("var_1907", dtype = "float32", shape = (3, 10, 4))#candidate|1907|(3, 10, 4)|var|float32
var_1908 = relay.var("var_1908", dtype = "float32", shape = (3, 10, 4))#candidate|1908|(3, 10, 4)|var|float32
var_1909 = relay.var("var_1909", dtype = "int32", shape = (288,))#candidate|1909|(288,)|var|int32
output = func_1906(var_1907,var_1908,var_1909,)
func_1910 = relay.Function([var_1907,var_1908,var_1909,], output)
mutated_mod['func_1910'] = func_1910
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1977 = relay.var("var_1977", dtype = "float64", shape = (1, 4, 13))#candidate|1977|(1, 4, 13)|var|float64
uop_1978 = relay.erf(var_1977.astype('float64')) # shape=(1, 4, 13)
output = uop_1978
output2 = uop_1978
func_1980 = relay.Function([var_1977,], output)
mod['func_1980'] = func_1980
mod = relay.transform.InferType()(mod)
mutated_mod['func_1980'] = func_1980
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1981 = relay.var("var_1981", dtype = "float64", shape = (1, 4, 13))#candidate|1981|(1, 4, 13)|var|float64
func_1980_call = mutated_mod.get_global_var('func_1980')
call_1982 = func_1980_call(var_1981)
output = call_1982
func_1983 = relay.Function([var_1981], output)
mutated_mod['func_1983'] = func_1983
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2069 = relay.var("var_2069", dtype = "float64", shape = (4, 15, 5))#candidate|2069|(4, 15, 5)|var|float64
uop_2070 = relay.log(var_2069.astype('float64')) # shape=(4, 15, 5)
output = relay.Tuple([uop_2070,])
output2 = relay.Tuple([uop_2070,])
func_2082 = relay.Function([var_2069,], output)
mod['func_2082'] = func_2082
mod = relay.transform.InferType()(mod)
mutated_mod['func_2082'] = func_2082
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2083 = relay.var("var_2083", dtype = "float64", shape = (4, 15, 5))#candidate|2083|(4, 15, 5)|var|float64
func_2082_call = mutated_mod.get_global_var('func_2082')
call_2084 = func_2082_call(var_2083)
output = call_2084
func_2085 = relay.Function([var_2083], output)
mutated_mod['func_2085'] = func_2085
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2275 = relay.var("var_2275", dtype = "float32", shape = (11, 10, 10))#candidate|2275|(11, 10, 10)|var|float32
uop_2276 = relay.acos(var_2275.astype('float32')) # shape=(11, 10, 10)
func_1980_call = mod.get_global_var('func_1980')
func_1983_call = mutated_mod.get_global_var('func_1983')
const_2290 = relay.const([[-0.683590],[-5.270366],[-0.998835],[-7.192127],[-1.976620],[2.673897],[9.725858],[-3.676416],[6.163312],[-5.820893],[-1.863212],[-7.600097],[6.457475],[-2.405179],[-8.596070],[-8.759408],[8.320374],[6.986609],[-0.837361],[-3.126643],[6.275608],[8.605631],[-6.421901],[-9.355216],[9.855500],[-6.528289],[-7.717304],[-5.822540],[-1.248906],[2.959171],[9.673836],[6.164183],[1.175911],[-8.361676],[-4.278751],[-7.178881],[-5.411108],[3.843486],[6.734407],[-5.725116],[-6.065558],[2.452399],[5.673040],[-7.531200],[-7.883538],[-1.496528],[-1.742714],[8.695493],[7.073179],[6.667876],[-9.550558],[8.225764]], dtype = "float64")#candidate|2290|(52, 1)|const|float64
call_2289 = func_1980_call(relay.reshape(const_2290.astype('float64'), [1, 4, 13]))
call_2291 = func_1980_call(relay.reshape(const_2290.astype('float64'), [1, 4, 13]))
bop_2294 = relay.floor_mod(var_2275.astype('float64'), relay.reshape(uop_2276.astype('float64'), relay.shape_of(var_2275))) # shape=(11, 10, 10)
output = relay.Tuple([call_2289,const_2290,bop_2294,])
output2 = relay.Tuple([call_2291,const_2290,bop_2294,])
func_2298 = relay.Function([var_2275,], output)
mod['func_2298'] = func_2298
mod = relay.transform.InferType()(mod)
mutated_mod['func_2298'] = func_2298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2299 = relay.var("var_2299", dtype = "float32", shape = (11, 10, 10))#candidate|2299|(11, 10, 10)|var|float32
func_2298_call = mutated_mod.get_global_var('func_2298')
call_2300 = func_2298_call(var_2299)
output = call_2300
func_2301 = relay.Function([var_2299], output)
mutated_mod['func_2301'] = func_2301
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2423 = relay.var("var_2423", dtype = "uint64", shape = ())#candidate|2423|()|var|uint64
var_2424 = relay.var("var_2424", dtype = "uint64", shape = (14, 2, 7))#candidate|2424|(14, 2, 7)|var|uint64
bop_2425 = relay.multiply(var_2423.astype('uint64'), var_2424.astype('uint64')) # shape=(14, 2, 7)
bop_2428 = relay.greater(var_2423.astype('bool'), bop_2425.astype('bool')) # shape=(14, 2, 7)
output = bop_2428
output2 = bop_2428
func_2431 = relay.Function([var_2423,var_2424,], output)
mod['func_2431'] = func_2431
mod = relay.transform.InferType()(mod)
var_2432 = relay.var("var_2432", dtype = "uint64", shape = ())#candidate|2432|()|var|uint64
var_2433 = relay.var("var_2433", dtype = "uint64", shape = (14, 2, 7))#candidate|2433|(14, 2, 7)|var|uint64
output = func_2431(var_2432,var_2433,)
func_2434 = relay.Function([var_2432,var_2433,], output)
mutated_mod['func_2434'] = func_2434
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2474 = relay.var("var_2474", dtype = "float64", shape = (14, 14, 16))#candidate|2474|(14, 14, 16)|var|float64
uop_2475 = relay.sqrt(var_2474.astype('float64')) # shape=(14, 14, 16)
output = uop_2475
output2 = uop_2475
func_2477 = relay.Function([var_2474,], output)
mod['func_2477'] = func_2477
mod = relay.transform.InferType()(mod)
mutated_mod['func_2477'] = func_2477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2478 = relay.var("var_2478", dtype = "float64", shape = (14, 14, 16))#candidate|2478|(14, 14, 16)|var|float64
func_2477_call = mutated_mod.get_global_var('func_2477')
call_2479 = func_2477_call(var_2478)
output = call_2479
func_2480 = relay.Function([var_2478], output)
mutated_mod['func_2480'] = func_2480
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2687 = relay.var("var_2687", dtype = "float64", shape = (13, 8, 14))#candidate|2687|(13, 8, 14)|var|float64
uop_2688 = relay.exp(var_2687.astype('float64')) # shape=(13, 8, 14)
output = uop_2688
output2 = uop_2688
func_2690 = relay.Function([var_2687,], output)
mod['func_2690'] = func_2690
mod = relay.transform.InferType()(mod)
var_2691 = relay.var("var_2691", dtype = "float64", shape = (13, 8, 14))#candidate|2691|(13, 8, 14)|var|float64
output = func_2690(var_2691)
func_2692 = relay.Function([var_2691], output)
mutated_mod['func_2692'] = func_2692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2853 = relay.var("var_2853", dtype = "float32", shape = ())#candidate|2853|()|var|float32
const_2854 = relay.const([[[-1.182910,5.831010,9.441645,7.731298,2.867649],[1.258326,-4.999545,4.819876,-0.995188,9.438795],[-2.323743,-6.025456,1.666692,4.112843,4.371565],[-5.153359,0.903649,8.063546,-0.218423,4.332199],[-9.592694,3.595663,7.127529,8.774514,1.766097],[1.251120,7.250629,-1.871971,1.387987,6.627668],[-9.192402,-6.883088,3.586440,7.995491,-2.388108],[0.996567,1.239575,-5.528866,0.536213,-8.819938],[-0.766386,-3.638271,4.741934,-0.286716,-6.815680],[6.412371,-4.358622,4.618513,-0.560579,6.070288],[2.085304,9.691011,-2.101074,3.519716,3.066471],[-0.938999,8.453892,6.313450,-5.587950,6.118383],[-3.167776,8.318042,-6.102529,-2.314302,9.202040]],[[-3.222805,8.432889,3.072579,6.840314,4.231714],[6.566786,-5.536709,5.242785,2.799334,0.621407],[-9.279144,-3.453514,-3.095616,-4.402482,6.977878],[7.655815,8.764369,6.786863,-8.174427,1.506288],[1.005530,8.015295,-6.783805,-2.504468,-0.626928],[-2.261614,3.157406,2.076767,-8.730043,-0.691050],[3.522898,8.615901,-7.556181,-9.548620,9.902091],[6.159724,-5.626733,-2.421602,4.533700,-9.852829],[-6.110520,-7.014653,8.637861,-3.813233,-2.692454],[2.934658,-3.505390,-8.799144,0.146331,5.223801],[-1.919834,-1.984160,2.725221,7.349477,6.000865],[8.970551,1.990524,8.976664,6.748264,-5.815658],[-8.095822,0.584109,-0.680402,-1.472458,-4.528432]],[[-9.089514,-9.506524,3.323902,9.711927,-3.592759],[5.201798,-0.803452,3.034152,2.558029,3.202183],[-8.778862,-7.005599,-1.952948,9.092040,-8.637313],[-7.374114,5.103442,7.913414,8.594890,4.743548],[0.868052,2.084724,2.773006,5.007136,5.860692],[-9.150257,0.995455,7.724289,2.979375,-5.586673],[5.163972,-0.602946,7.281026,0.953025,-6.024804],[-4.143074,4.575751,-2.944354,-2.930914,-9.940174],[-1.662321,-8.644091,7.097385,-2.819586,-4.639843],[-4.531233,3.193248,-2.933515,3.522569,0.279802],[0.138630,1.493773,3.207851,6.980996,-0.410168],[8.967405,6.047388,-7.571002,-2.888401,4.212533],[8.143636,-1.433478,2.370073,1.975653,-3.124812]],[[-0.865351,-5.914325,5.072718,1.506043,7.768828],[-0.536433,8.158942,-7.588142,-7.723027,-4.642598],[-7.251282,2.884133,-5.102027,7.226069,0.428194],[1.982939,2.918066,-1.455911,8.455913,-6.323083],[1.874014,-1.740333,-2.700074,-0.273293,3.452175],[-2.863225,-3.565538,-5.844130,-0.051658,-4.329309],[0.104723,-3.176911,2.832138,0.238830,-0.136593],[6.730243,-9.983013,-9.086429,8.157226,0.668385],[2.623909,-0.722249,-4.708308,2.100518,-3.306350],[-4.620395,5.483683,8.700575,9.717025,2.283146],[-9.499726,6.427728,-6.276504,8.748016,-9.409405],[-0.717721,-0.171167,0.992384,0.850657,-9.586321],[-5.481785,-7.491672,0.375152,-1.386298,-5.923678]],[[-8.471491,0.789578,-7.356512,-9.864853,4.528191],[-7.028053,-7.941786,-0.138307,2.805335,-6.688842],[1.038354,5.201185,-7.632799,4.937982,6.481849],[7.155983,-7.685564,-1.387252,-3.764029,-6.565485],[9.237789,-3.328291,-8.935667,-9.793125,-7.596438],[3.228798,3.146815,2.600839,7.483185,4.759644],[8.180210,-7.189562,6.793390,-8.916675,6.150591],[3.530841,6.965519,9.128250,-1.847218,-9.780374],[-8.772541,-2.838852,-7.572759,-2.839177,3.735648],[-6.242896,-8.459602,-4.025275,6.839780,0.287262],[-2.936221,-0.407378,-8.180814,3.628664,5.643124],[-0.622713,1.427348,1.457574,-7.102961,9.400101],[3.432067,-9.270125,-9.426338,1.150086,3.200663]],[[1.613778,3.644291,-2.551287,2.227684,-2.218073],[9.412285,-8.716244,-6.703654,-0.642933,1.620624],[-8.795060,7.633023,-1.355030,1.640275,-1.380198],[7.893685,-1.635921,8.706981,-3.244094,-5.464842],[5.652105,4.005330,-1.314378,5.193159,5.099811],[-3.900634,-7.941930,-8.838059,-9.849714,-7.602134],[6.392354,-7.596706,3.709089,-1.669668,-7.712954],[-0.350353,-0.959611,1.803472,3.561193,7.960760],[-9.418151,-9.387789,4.433927,6.177662,8.275891],[-9.438443,0.245341,-5.454557,-5.804090,2.939443],[-0.160145,-7.149490,6.569701,2.215810,0.321118],[5.470018,2.521366,-7.811061,1.524032,-0.280926],[1.967681,2.234092,5.943221,1.142272,-9.946937]],[[-4.226718,1.592931,8.718677,-3.346744,1.942234],[3.600508,6.873572,0.002122,6.264345,-6.101337],[0.459614,2.721036,-7.840499,-4.950531,-3.344108],[-8.599475,9.777655,-4.654080,1.444417,-3.899357],[-0.667550,1.607235,-1.562514,3.499378,6.654352],[3.426031,3.310302,9.474545,2.782158,-5.198425],[-5.778720,-4.988671,-3.452155,-6.151740,7.649331],[-3.735093,-6.956833,-8.432448,-3.475383,5.950165],[4.962148,-8.873455,6.974139,-2.737535,-8.242644],[-0.043670,-2.772431,-0.872681,7.015697,-6.046331],[1.945964,-9.949803,-8.506309,-1.546420,-2.067571],[4.881491,-0.321729,6.007866,9.830580,-5.794727],[-6.823950,4.138101,4.631638,1.622036,-3.300369]],[[-7.454717,-3.196211,-7.402958,2.903331,-0.149072],[-5.450852,3.943995,5.260375,-2.496314,-3.737224],[-7.769296,0.844109,7.775539,-9.707519,-1.592431],[-6.403769,-1.597331,2.630454,-6.556391,-3.023789],[5.302678,-5.480104,8.672905,6.362535,-5.384259],[2.221412,-3.749683,-6.274970,5.172303,-3.423531],[-1.629452,-4.718350,2.723554,8.888440,-1.666986],[-2.104616,-3.582135,-0.537634,1.325799,5.457959],[-4.069013,-1.872209,8.333160,-3.571900,5.553131],[-8.484725,-7.424333,9.618773,2.585524,0.481405],[-2.010828,8.077277,-1.085881,-4.812576,8.864630],[0.519884,-0.475826,-3.722981,8.147615,0.342017],[7.198935,-9.667428,-7.799194,8.914703,-0.259305]],[[-0.604079,8.264628,2.752395,3.517409,2.621602],[9.417592,-9.479421,-4.630408,5.715495,-3.156174],[1.205861,3.290463,0.290020,4.702982,6.212248],[7.895126,-7.170619,3.578991,-8.786055,0.566220],[9.637373,-7.398280,6.244004,-4.641869,-9.311073],[2.520738,-6.943071,2.544857,-6.696439,-4.092149],[-9.651668,0.858971,-3.673829,-7.709782,-7.920031],[-8.879866,-1.730099,0.806014,-0.944992,8.912548],[-7.903030,-7.517673,2.269925,-5.021060,-0.291844],[5.761478,-7.187491,3.898022,6.816969,2.924293],[8.645368,3.486670,9.975808,1.238499,-6.214400],[-8.218502,4.008043,5.647055,7.257994,5.926385],[-5.875098,-8.572422,8.391825,-1.421443,-0.333356]],[[-8.325707,6.547976,7.193972,4.951775,-1.396184],[6.742061,-6.308064,6.151540,1.232076,-8.067795],[-1.496426,5.570250,1.875141,-7.294761,3.200288],[-8.701134,1.717196,1.838199,-0.295798,4.692904],[-1.698880,0.804719,-6.620930,-2.588857,8.045743],[-0.505288,-2.740509,1.147713,-6.265651,4.882361],[-2.111771,-5.494848,1.554778,-2.001353,-0.355698],[3.302568,1.551478,3.435054,1.076689,5.323934],[-6.342585,9.129644,-8.697891,4.089513,-6.217931],[-0.586296,-5.338445,-2.802069,2.100306,1.394543],[7.703025,-2.272250,3.223806,-6.508157,-6.563506],[-8.206617,1.142281,0.766814,-4.858463,-7.746614],[6.485644,5.664856,3.820081,5.048604,-2.626351]]], dtype = "float32")#candidate|2854|(10, 13, 5)|const|float32
bop_2855 = relay.divide(var_2853.astype('float32'), const_2854.astype('float32')) # shape=(10, 13, 5)
output = relay.Tuple([bop_2855,])
output2 = relay.Tuple([bop_2855,])
func_2859 = relay.Function([var_2853,], output)
mod['func_2859'] = func_2859
mod = relay.transform.InferType()(mod)
var_2860 = relay.var("var_2860", dtype = "float32", shape = ())#candidate|2860|()|var|float32
output = func_2859(var_2860)
func_2861 = relay.Function([var_2860], output)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2869 = relay.const([[[7,-3,3,-7,10],[2,1,5,-7,-10],[10,9,-2,8,9],[3,-3,6,-8,2],[5,3,-5,6,1],[10,-10,3,9,-7]],[[9,6,-6,9,-7],[10,-6,8,1,-3],[9,-8,-10,8,-4],[-8,7,-6,-8,7],[-7,7,-1,-7,8],[7,-1,8,-5,1]],[[-3,4,-4,-3,5],[-10,-6,-10,-4,9],[8,3,10,3,8],[-7,-4,1,1,-2],[1,-3,-3,-3,-1],[-10,10,-8,-5,-8]],[[-4,5,7,-6,9],[7,4,-8,2,-3],[-6,1,8,-8,8],[-9,-2,10,10,8],[-6,1,6,6,-3],[-2,-3,6,-10,-8]],[[10,-1,-2,2,7],[-3,-6,2,6,-1],[-6,-1,-5,2,-3],[4,-8,6,5,3],[-9,-4,1,-8,-3],[-9,1,10,8,1]],[[-4,5,-1,-3,-8],[-8,-3,3,-10,4],[-9,2,4,7,-6],[1,5,-6,-6,3],[-5,2,-7,3,-5],[1,-9,-3,-7,-3]],[[9,4,2,10,-9],[2,8,-4,-1,10],[-4,-2,-4,-6,-5],[5,-4,10,1,4],[7,-5,-1,9,4],[10,2,10,6,8]],[[-6,-9,-4,-6,1],[6,-7,-4,-8,4],[4,-9,-5,4,-5],[-7,7,-1,5,7],[-1,-5,-2,9,-1],[3,9,4,10,-7]]], dtype = "uint64")#candidate|2869|(8, 6, 5)|const|uint64
var_2870 = relay.var("var_2870", dtype = "uint64", shape = (8, 6, 5))#candidate|2870|(8, 6, 5)|var|uint64
bop_2871 = relay.subtract(const_2869.astype('uint64'), relay.reshape(var_2870.astype('uint64'), relay.shape_of(const_2869))) # shape=(8, 6, 5)
bop_2882 = relay.floor_mod(var_2870.astype('float64'), relay.reshape(const_2869.astype('float64'), relay.shape_of(var_2870))) # shape=(8, 6, 5)
uop_2890 = relay.tan(var_2870.astype('float64')) # shape=(8, 6, 5)
output = relay.Tuple([bop_2871,bop_2882,uop_2890,])
output2 = relay.Tuple([bop_2871,bop_2882,uop_2890,])
func_2898 = relay.Function([var_2870,], output)
mod['func_2898'] = func_2898
mod = relay.transform.InferType()(mod)
mutated_mod['func_2898'] = func_2898
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2899 = relay.var("var_2899", dtype = "uint64", shape = (8, 6, 5))#candidate|2899|(8, 6, 5)|var|uint64
func_2898_call = mutated_mod.get_global_var('func_2898')
call_2900 = func_2898_call(var_2899)
output = call_2900
func_2901 = relay.Function([var_2899], output)
mutated_mod['func_2901'] = func_2901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2949 = relay.var("var_2949", dtype = "uint64", shape = ())#candidate|2949|()|var|uint64
var_2950 = relay.var("var_2950", dtype = "uint64", shape = (8, 14, 13))#candidate|2950|(8, 14, 13)|var|uint64
bop_2951 = relay.less(var_2949.astype('bool'), var_2950.astype('bool')) # shape=(8, 14, 13)
bop_2963 = relay.subtract(var_2949.astype('int64'), var_2950.astype('int64')) # shape=(8, 14, 13)
func_2859_call = mod.get_global_var('func_2859')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_2967 = relay.TupleGetItem(func_2859_call(relay.reshape(var_2949.astype('float32'), [])), 0)
call_2968 = relay.TupleGetItem(func_2861_call(relay.reshape(var_2949.astype('float32'), [])), 0)
uop_2990 = relay.sin(bop_2951.astype('float32')) # shape=(8, 14, 13)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
call_2999 = func_2690_call(relay.reshape(uop_2990.astype('float64'), [13, 8, 14]))
call_3000 = func_2690_call(relay.reshape(uop_2990.astype('float64'), [13, 8, 14]))
output = relay.Tuple([bop_2963,call_2967,uop_2990,call_2999,])
output2 = relay.Tuple([bop_2963,call_2968,uop_2990,call_3000,])
func_3002 = relay.Function([var_2949,var_2950,], output)
mod['func_3002'] = func_3002
mod = relay.transform.InferType()(mod)
var_3003 = relay.var("var_3003", dtype = "uint64", shape = ())#candidate|3003|()|var|uint64
var_3004 = relay.var("var_3004", dtype = "uint64", shape = (8, 14, 13))#candidate|3004|(8, 14, 13)|var|uint64
output = func_3002(var_3003,var_3004,)
func_3005 = relay.Function([var_3003,var_3004,], output)
mutated_mod['func_3005'] = func_3005
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3175 = relay.var("var_3175", dtype = "bool", shape = ())#candidate|3175|()|var|bool
var_3176 = relay.var("var_3176", dtype = "bool", shape = (5, 2, 7))#candidate|3176|(5, 2, 7)|var|bool
bop_3177 = relay.logical_or(var_3175.astype('bool'), var_3176.astype('bool')) # shape=(5, 2, 7)
output = bop_3177
output2 = bop_3177
func_3189 = relay.Function([var_3175,var_3176,], output)
mod['func_3189'] = func_3189
mod = relay.transform.InferType()(mod)
var_3190 = relay.var("var_3190", dtype = "bool", shape = ())#candidate|3190|()|var|bool
var_3191 = relay.var("var_3191", dtype = "bool", shape = (5, 2, 7))#candidate|3191|(5, 2, 7)|var|bool
output = func_3189(var_3190,var_3191,)
func_3192 = relay.Function([var_3190,var_3191,], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3703 = relay.var("var_3703", dtype = "uint16", shape = (7, 16, 3))#candidate|3703|(7, 16, 3)|var|uint16
var_3704 = relay.var("var_3704", dtype = "uint16", shape = (7, 16, 3))#candidate|3704|(7, 16, 3)|var|uint16
bop_3705 = relay.add(var_3703.astype('uint16'), relay.reshape(var_3704.astype('uint16'), relay.shape_of(var_3703))) # shape=(7, 16, 3)
output = relay.Tuple([bop_3705,])
output2 = relay.Tuple([bop_3705,])
func_3710 = relay.Function([var_3703,var_3704,], output)
mod['func_3710'] = func_3710
mod = relay.transform.InferType()(mod)
mutated_mod['func_3710'] = func_3710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mutated_mod.get_global_var('func_3710')
var_3712 = relay.var("var_3712", dtype = "uint16", shape = (7, 16, 3))#candidate|3712|(7, 16, 3)|var|uint16
var_3713 = relay.var("var_3713", dtype = "uint16", shape = (7, 16, 3))#candidate|3713|(7, 16, 3)|var|uint16
call_3711 = func_3710_call(var_3712,var_3713,)
output = call_3711
func_3714 = relay.Function([var_3712,var_3713,], output)
mutated_mod['func_3714'] = func_3714
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3736 = relay.const([[[-3.069938,-0.198404,-5.325077,0.373038,-1.479874,-4.408091,6.450221],[-8.732277,-6.739122,3.768415,-9.088330,-3.132795,-0.593847,1.734793],[-3.726138,0.317670,4.107260,9.174142,7.288012,-6.245305,9.082978],[5.273361,-2.660598,-1.905316,8.171092,-7.018006,8.892919,3.503161],[-7.920644,-8.204823,-3.745699,0.801985,1.940872,7.359252,8.483063],[-9.289235,-3.242465,-8.421121,-0.872955,3.830820,-1.449391,5.408986],[-6.773466,5.341721,2.658007,-1.095021,-6.623252,6.838508,-1.869307],[-2.502624,-2.825939,0.229288,-9.180088,-9.765382,-3.794949,-2.337527],[8.978271,-8.134261,2.968632,4.765201,6.938540,-0.770363,2.672131],[9.307292,-6.311274,-0.667535,4.073005,4.706248,4.245467,-2.485708],[9.154483,-2.495359,-6.110424,6.637771,-6.503055,-4.303316,-0.350255],[1.505062,7.646992,6.249109,4.791427,-7.286545,0.305570,-4.951055],[7.866171,-4.597750,-6.905434,-5.815942,-6.194251,-0.038011,-4.345649]],[[-4.550122,3.978846,-9.932685,4.541273,-5.371204,7.334928,8.401486],[-5.776863,2.989856,-7.649622,-0.772361,-6.588021,8.812740,-8.861012],[-3.892104,-8.280715,3.010274,-0.632292,-9.914886,-2.878748,-6.023337],[-2.635786,-2.632085,-8.304513,-1.760306,-5.314032,2.398324,9.816486],[5.802689,-5.563417,-7.719016,-1.286279,-3.642265,-7.329790,-2.056302],[7.769018,-2.825510,-5.209104,-6.268417,8.172598,2.384886,1.581811],[-7.389709,6.959855,4.371863,1.918928,0.960498,8.169494,6.330930],[-5.806270,-2.553877,-2.653360,1.810412,-6.945839,5.814804,0.187474],[7.302356,4.095366,8.174081,3.614132,-3.464222,9.037347,-5.607411],[2.003922,-5.924294,-2.358286,8.104913,6.706200,3.505360,-0.218125],[1.489916,-6.546751,0.787863,4.823743,-4.907996,0.216134,5.034142],[-1.863333,0.030312,0.925340,-9.045504,7.969100,3.568086,-7.589152],[-3.085315,3.382610,-3.761582,-8.123782,-4.404114,8.096283,-8.689451]],[[2.695068,7.672063,0.726942,-8.918901,-5.356446,-7.028421,-9.453102],[-1.213775,0.930199,-8.769740,5.627322,-8.620201,-9.645830,2.447494],[2.224377,-2.048320,7.267204,6.227083,-7.866234,-3.224715,-0.045316],[-3.657277,-9.410677,0.310533,6.656059,-6.519093,5.112778,-1.677275],[2.546056,9.154248,7.475353,-0.134633,5.628546,-8.331444,0.630680],[-0.433251,8.763912,-6.018952,6.217600,9.217624,6.053520,4.231964],[-7.507366,-0.318143,8.663769,9.660200,7.966387,-0.476106,9.102292],[3.589273,4.129092,-9.872525,-5.183193,-7.362739,-9.471586,7.457522],[0.957149,-0.268851,-6.851704,-9.270256,-3.755092,5.742774,1.740806],[-2.672368,-1.935842,1.782570,9.524762,-3.953863,-5.214728,-8.505523],[8.788637,5.493369,-4.243618,-4.258319,-7.012561,9.640655,-2.590584],[4.272252,-0.859393,-3.296013,9.057598,-1.004337,9.481588,-5.213080],[7.257507,4.583161,-2.946582,8.919598,-2.046646,-8.147970,-0.742243]],[[-1.520332,-6.737157,-8.151625,7.654141,2.991918,-1.757666,-9.776894],[-7.175120,-4.312094,9.514917,-5.636237,-8.287241,-3.948409,-7.915426],[3.713422,-4.691360,9.957842,9.717412,9.584190,2.599082,7.319282],[-6.434180,2.589415,8.856279,-1.521365,2.191673,-9.274800,1.790379],[2.576952,7.247430,-1.281400,-5.321388,-6.840310,-1.748080,-9.186155],[-9.330362,9.919136,4.032608,-5.246190,-4.646718,2.202318,6.111133],[5.658189,3.902786,-8.159551,-9.624055,-3.358494,1.707575,-8.156131],[6.497249,3.616560,8.955658,-0.547784,4.745297,8.324577,-0.238961],[-9.377409,-9.275491,-9.993064,-8.291032,7.695174,5.304178,2.724403],[-3.349465,-9.154016,-7.325573,-5.656710,8.343448,1.348588,7.028048],[-1.830727,6.928981,4.056117,6.008603,7.455536,8.415889,-9.606552],[9.135357,5.854137,4.725508,7.127775,3.158769,7.949127,-1.542438],[2.967785,4.584797,7.438566,-9.793901,7.134625,-6.042183,8.117788]],[[8.976716,1.386132,7.072915,-1.742865,-7.281115,7.221436,3.527760],[-2.610284,8.840346,0.748945,-4.305873,9.556195,-9.187703,-8.125959],[-0.777840,-7.219712,6.486806,-8.751935,-4.197697,3.356505,-0.703544],[-2.144474,-0.984330,2.137275,-4.198272,-4.260412,-9.603558,-5.212443],[-8.290359,4.815384,-6.677013,-6.695888,0.181597,2.327178,-2.846138],[6.021560,9.512818,-3.850058,-4.315282,9.631292,3.079724,0.147305],[9.358307,-8.785132,-7.789244,-6.198298,0.758461,-5.491838,0.472024],[-6.405401,3.795599,-7.402688,7.845516,-8.756869,6.345461,-3.620651],[5.512276,-5.368874,7.503169,7.649366,-8.227925,9.577973,-6.751018],[8.161313,3.513139,4.322293,1.904844,1.645838,5.598029,-2.683461],[1.231743,4.579404,4.743104,1.116922,-7.331665,-8.836298,3.169639],[-7.810476,-4.939183,1.342457,2.628301,-0.418991,2.809338,8.117507],[2.884676,3.268002,-9.183722,8.292154,-5.134602,8.332857,2.934515]]], dtype = "float64")#candidate|3736|(5, 13, 7)|const|float64
uop_3737 = relay.rsqrt(const_3736.astype('float64')) # shape=(5, 13, 7)
func_2431_call = mod.get_global_var('func_2431')
func_2434_call = mutated_mod.get_global_var('func_2434')
const_3741 = relay.const(7, dtype = "uint64")#candidate|3741|()|const|uint64
const_3742 = relay.const([-3,2,9,6,-4,-7,2,5,1,3,-7,-5,8,-10,9,2,-8,2,2,-3,-2,5,4,-9,2,-6,-10,-9,8,-5,9,-10,6,4,9,-4,8,6,-9,-8,9,-10,-4,9,-8,-10,4,4,4,-7,7,-6,1,8,7,3,-1,-4,3,6,6,10,6,9,4,-4,5,8,2,-10,-4,-4,7,10,9,-5,10,6,-1,-7,-9,6,1,-2,1,-1,-4,-10,2,4,3,-8,-5,10,-7,1,-8,-2,2,-9,5,-8,6,3,-7,9,4,-7,-2,-5,4,7,-2,8,-4,-6,10,9,1,3,-8,-10,-2,1,3,-4,-1,-8,1,-6,-6,3,4,1,-3,3,-7,-4,-1,-2,3,1,7,7,-9,3,5,1,-8,-7,5,10,7,2,9,10,9,3,3,6,-5,7,-4,1,1,1,-10,-1,-5,2,-6,-5,6,-5,-10,-2,9,-4,10,-5,5,-8,-8,-1,1,-6,-10,1,1,-6,6,-7,-1,-10,-6,3], dtype = "uint64")#candidate|3742|(196,)|const|uint64
call_3740 = func_2431_call(relay.reshape(const_3741.astype('uint64'), []), relay.reshape(const_3742.astype('uint64'), [14, 2, 7]), )
call_3743 = func_2431_call(relay.reshape(const_3741.astype('uint64'), []), relay.reshape(const_3742.astype('uint64'), [14, 2, 7]), )
uop_3748 = relay.sqrt(uop_3737.astype('float64')) # shape=(5, 13, 7)
uop_3777 = relay.tan(uop_3748.astype('float32')) # shape=(5, 13, 7)
bop_3787 = relay.logical_xor(uop_3777.astype('int16'), const_3741.astype('int16')) # shape=(5, 13, 7)
output = relay.Tuple([call_3740,const_3742,bop_3787,])
output2 = relay.Tuple([call_3743,const_3742,bop_3787,])
func_3790 = relay.Function([], output)
mod['func_3790'] = func_3790
mod = relay.transform.InferType()(mod)
mutated_mod['func_3790'] = func_3790
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mutated_mod.get_global_var('func_3790')
call_3791 = func_3790_call()
output = call_3791
func_3792 = relay.Function([], output)
mutated_mod['func_3792'] = func_3792
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3799 = relay.var("var_3799", dtype = "int16", shape = (8, 5, 10))#candidate|3799|(8, 5, 10)|var|int16
const_3800 = relay.const([[[-1,1,-5,-8,-3,-6,6,-4,-8,3],[3,-6,-6,-5,-7,3,7,8,6,-9],[-6,10,4,10,-6,-6,2,7,4,5],[9,1,-5,-10,-4,2,3,1,-7,1],[-5,2,3,-9,1,10,3,6,10,-9]],[[-4,-4,4,-8,8,4,-8,-3,8,-8],[6,-1,-9,7,4,4,6,6,-3,10],[-4,7,5,-3,-3,-3,6,8,-2,5],[-10,3,6,7,-4,3,5,9,1,4],[2,-1,-1,6,-5,-9,-1,-4,-10,8]],[[-9,-1,10,-2,-4,5,4,-4,6,-10],[10,-9,-2,10,3,7,1,-6,-1,-2],[-7,-1,-2,9,5,-2,-1,-8,3,6],[-7,9,2,-9,-6,-8,-7,-5,3,8],[5,3,-10,-8,10,-2,-8,3,8,5]],[[-2,-8,-1,1,-9,10,-10,2,5,-4],[6,9,8,-4,-5,-2,-1,7,5,5],[-6,2,9,7,-3,-8,8,-3,-1,-3],[-7,5,-5,-1,2,-8,1,6,3,-4],[6,-3,1,-9,4,-1,6,8,-10,-4]],[[5,3,-2,-7,-2,-1,-5,3,10,-8],[-5,-5,5,-4,2,-7,2,10,9,-10],[8,-1,6,9,-7,2,8,-5,-9,-7],[-9,-6,4,-6,5,8,-7,-8,-5,9],[-6,8,-8,-6,-3,10,7,4,3,-8]],[[6,-6,7,6,-3,-7,-7,2,9,-4],[10,8,-9,-3,-2,3,-7,3,-2,-7],[5,5,-1,7,6,-4,-3,-6,-5,-7],[9,7,8,3,8,-7,6,-2,9,-6],[-1,1,-3,8,-7,-6,-4,6,10,4]],[[-9,-10,-2,-1,2,-6,-10,-8,-8,-2],[1,5,1,-7,-1,1,-3,7,3,-6],[9,-9,3,-3,-6,-9,-3,2,8,-4],[-2,10,-4,-1,-9,2,-3,5,10,8],[-5,3,-1,-1,-6,-9,10,4,-8,-2]],[[1,3,7,-9,-7,5,6,-9,4,-8],[-7,-9,-6,-4,7,1,2,-2,-3,-7],[2,4,1,4,5,8,-9,-10,9,9],[-10,5,-4,10,-10,10,3,9,-9,-1],[-7,10,-7,2,6,3,-2,7,-5,-5]]], dtype = "int16")#candidate|3800|(8, 5, 10)|const|int16
bop_3801 = relay.maximum(var_3799.astype('int16'), relay.reshape(const_3800.astype('int16'), relay.shape_of(var_3799))) # shape=(8, 5, 10)
output = relay.Tuple([bop_3801,])
output2 = relay.Tuple([bop_3801,])
func_3809 = relay.Function([var_3799,], output)
mod['func_3809'] = func_3809
mod = relay.transform.InferType()(mod)
mutated_mod['func_3809'] = func_3809
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3810 = relay.var("var_3810", dtype = "int16", shape = (8, 5, 10))#candidate|3810|(8, 5, 10)|var|int16
func_3809_call = mutated_mod.get_global_var('func_3809')
call_3811 = func_3809_call(var_3810)
output = call_3811
func_3812 = relay.Function([var_3810], output)
mutated_mod['func_3812'] = func_3812
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_3850 = relay.TupleGetItem(func_3790_call(), 1)
call_3851 = relay.TupleGetItem(func_3792_call(), 1)
uop_3857 = relay.log10(call_3850.astype('float64')) # shape=(196,)
uop_3859 = relay.log10(call_3851.astype('float64')) # shape=(196,)
output = relay.Tuple([uop_3857,])
output2 = relay.Tuple([uop_3859,])
func_3864 = relay.Function([], output)
mod['func_3864'] = func_3864
mod = relay.transform.InferType()(mod)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mutated_mod.get_global_var('func_3864')
call_3865 = func_3864_call()
output = call_3865
func_3866 = relay.Function([], output)
mutated_mod['func_3866'] = func_3866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3951 = relay.var("var_3951", dtype = "float64", shape = (4, 4, 4))#candidate|3951|(4, 4, 4)|var|float64
uop_3952 = relay.sin(var_3951.astype('float64')) # shape=(4, 4, 4)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_3961 = relay.TupleGetItem(func_3790_call(), 1)
call_3962 = relay.TupleGetItem(func_3792_call(), 1)
output = relay.Tuple([uop_3952,call_3961,])
output2 = relay.Tuple([uop_3952,call_3962,])
func_3966 = relay.Function([var_3951,], output)
mod['func_3966'] = func_3966
mod = relay.transform.InferType()(mod)
mutated_mod['func_3966'] = func_3966
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3967 = relay.var("var_3967", dtype = "float64", shape = (4, 4, 4))#candidate|3967|(4, 4, 4)|var|float64
func_3966_call = mutated_mod.get_global_var('func_3966')
call_3968 = func_3966_call(var_3967)
output = call_3968
func_3969 = relay.Function([var_3967], output)
mutated_mod['func_3969'] = func_3969
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_4094 = relay.TupleGetItem(func_3790_call(), 1)
call_4095 = relay.TupleGetItem(func_3792_call(), 1)
const_4098 = relay.const([-7,-1,-10,-9,-10,-4,5,-6,9,-6,-8,7,4,-5,-1,-6,-9,-3,1,7,3,4,7,10,4,6,-7,-1,2,9,-2,-4,-4,-2,-8,-8,2,-10,2,4,8,-9,4,-5,9,-2,2,3,-10,3,-6,1,-3,-7,-3,-2,-1,-3,2,-1,-5,-3,6,5,3,-8,-10,-8,-9,1,-8,-2,-3,-3,-6,-7,9,10,-6,-5,-6,9,-1,-3,4,4,-5,10,-3,5,1,-10,4,8,-8,10,-6,-10,-7,-9,6,-4,10,-1,9,2,-9,-10,4,-4,1,-6,4,3,-10,-4,-6,7,10,-8,-5,-9,-3,-9,7,1,7,4,-3,3,-9,-8,-5,10,-3,4,-9,4,2,-10,5,6,9,3,8,5,-3,4,-8,-3,3,10,-2,5,-8,-4,6,-6,1,5,5,7,-3,-6,-5,5,-10,-9,9,-8,-9,-1,2,8,-5,3,4,-10,10,9,8,-3,-7,1,-8,-5,3,2,1,9,4,10,1,-5,7,-6], dtype = "uint64")#candidate|4098|(196,)|const|uint64
bop_4099 = relay.logical_or(call_4094.astype('bool'), relay.reshape(const_4098.astype('bool'), relay.shape_of(call_4094))) # shape=(196,)
bop_4102 = relay.logical_or(call_4095.astype('bool'), relay.reshape(const_4098.astype('bool'), relay.shape_of(call_4095))) # shape=(196,)
func_2898_call = mod.get_global_var('func_2898')
func_2901_call = mutated_mod.get_global_var('func_2901')
var_4115 = relay.var("var_4115", dtype = "uint64", shape = (1, 240))#candidate|4115|(1, 240)|var|uint64
call_4114 = relay.TupleGetItem(func_2898_call(relay.reshape(var_4115.astype('uint64'), [8, 6, 5])), 2)
call_4116 = relay.TupleGetItem(func_2901_call(relay.reshape(var_4115.astype('uint64'), [8, 6, 5])), 2)
func_2431_call = mod.get_global_var('func_2431')
func_2434_call = mutated_mod.get_global_var('func_2434')
var_4121 = relay.var("var_4121", dtype = "uint64", shape = ())#candidate|4121|()|var|uint64
call_4120 = func_2431_call(relay.reshape(var_4121.astype('uint64'), []), relay.reshape(call_4094.astype('uint64'), [14, 2, 7]), )
call_4122 = func_2431_call(relay.reshape(var_4121.astype('uint64'), []), relay.reshape(call_4094.astype('uint64'), [14, 2, 7]), )
func_2298_call = mod.get_global_var('func_2298')
func_2301_call = mutated_mod.get_global_var('func_2301')
var_4126 = relay.var("var_4126", dtype = "float32", shape = (1100,))#candidate|4126|(1100,)|var|float32
call_4125 = relay.TupleGetItem(func_2298_call(relay.reshape(var_4126.astype('float32'), [11, 10, 10])), 1)
call_4127 = relay.TupleGetItem(func_2301_call(relay.reshape(var_4126.astype('float32'), [11, 10, 10])), 1)
output = relay.Tuple([bop_4099,call_4114,var_4115,call_4120,var_4121,call_4125,var_4126,])
output2 = relay.Tuple([bop_4102,call_4116,var_4115,call_4122,var_4121,call_4127,var_4126,])
func_4135 = relay.Function([var_4115,var_4121,var_4126,], output)
mod['func_4135'] = func_4135
mod = relay.transform.InferType()(mod)
var_4136 = relay.var("var_4136", dtype = "uint64", shape = (1, 240))#candidate|4136|(1, 240)|var|uint64
var_4137 = relay.var("var_4137", dtype = "uint64", shape = ())#candidate|4137|()|var|uint64
var_4138 = relay.var("var_4138", dtype = "float32", shape = (1100,))#candidate|4138|(1100,)|var|float32
output = func_4135(var_4136,var_4137,var_4138,)
func_4139 = relay.Function([var_4136,var_4137,var_4138,], output)
mutated_mod['func_4139'] = func_4139
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_4154 = relay.TupleGetItem(func_3790_call(), 1)
call_4155 = relay.TupleGetItem(func_3792_call(), 1)
func_3809_call = mod.get_global_var('func_3809')
func_3812_call = mutated_mod.get_global_var('func_3812')
const_4157 = relay.const([6,5,9,-1,8,-8,-3,5,10,-2,6,-9,-7,-4,4,-8,-5,10,-10,7,-4,-7,3,2,1,-2,-6,-2,5,7,-5,-2,7,-6,-2,5,8,-4,5,-6,1,-5,-10,2,-3,5,-4,-10,-6,8,-1,-5,-6,-2,6,-9,-6,4,3,9,4,6,8,9,-4,5,9,-4,10,7,-4,3,-5,5,-2,6,8,-2,-7,4,7,5,-1,2,-5,-7,9,6,-6,2,5,2,9,2,6,-5,5,-8,9,8,-8,2,7,-1,-8,1,-2,-9,-8,5,6,6,10,-8,1,-2,4,-8,1,-4,-2,-4,-9,-5,5,10,10,5,-9,8,10,2,-5,5,-8,6,-5,6,5,-2,1,-4,-9,10,3,-9,-1,8,-9,-1,3,1,-8,-5,-6,5,-8,-8,-9,6,-8,4,-6,-5,-7,-4,-4,2,9,6,2,-7,-4,9,5,5,10,5,4,-1,-4,1,7,9,1,-5,9,-5,-7,6,2,5,3,-6,-10,7,-1,2,-4,-7,-10,-7,-4,-4,9,-5,3,2,10,2,6,-3,-8,4,8,6,-6,7,-7,3,2,6,-7,-9,8,-6,1,-1,4,10,9,-2,-10,4,-1,-5,4,6,2,8,-7,6,2,6,3,2,5,-4,4,-4,5,-7,3,-10,-1,8,-1,-5,-10,-10,10,-2,5,-1,5,3,-7,1,-4,-6,7,2,-6,10,-1,-8,4,7,9,-8,3,6,-4,9,-6,-2,1,-9,-4,-5,-1,7,5,5,-1,-10,-6,4,1,-7,-2,-10,-6,10,-9,-4,-7,6,-4,8,5,2,4,3,-1,4,1,6,4,7,2,4,2,-3,-2,-4,1,-10,3,-2,-4,-8,10,-2,2,6,1,-3,-1,-1,-9,9,2,7,-1,-10,3,9,3,-8,1,7,5,4,8,10,-4,-9,8,-2,5,5,-1,1,-8,-9,4,-10,7,6,1,5,7,-10,10,-6,-7,2,5,-1,4,-1,-7,-9,5,2,-3,9,-10,3,-4,-4,-9,-6,10,9,-9,-10,1,3], dtype = "int16")#candidate|4157|(400,)|const|int16
call_4156 = relay.TupleGetItem(func_3809_call(relay.reshape(const_4157.astype('int16'), [8, 5, 10])), 0)
call_4158 = relay.TupleGetItem(func_3812_call(relay.reshape(const_4157.astype('int16'), [8, 5, 10])), 0)
output = relay.Tuple([call_4154,call_4156,const_4157,])
output2 = relay.Tuple([call_4155,call_4158,const_4157,])
func_4161 = relay.Function([], output)
mod['func_4161'] = func_4161
mod = relay.transform.InferType()(mod)
mutated_mod['func_4161'] = func_4161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4161_call = mutated_mod.get_global_var('func_4161')
call_4162 = func_4161_call()
output = call_4162
func_4163 = relay.Function([], output)
mutated_mod['func_4163'] = func_4163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mod.get_global_var('func_3864')
func_3866_call = mutated_mod.get_global_var('func_3866')
call_4175 = relay.TupleGetItem(func_3864_call(), 0)
call_4176 = relay.TupleGetItem(func_3866_call(), 0)
func_2431_call = mod.get_global_var('func_2431')
func_2434_call = mutated_mod.get_global_var('func_2434')
var_4184 = relay.var("var_4184", dtype = "uint64", shape = ())#candidate|4184|()|var|uint64
call_4183 = func_2431_call(relay.reshape(var_4184.astype('uint64'), []), relay.reshape(call_4175.astype('uint64'), [14, 2, 7]), )
call_4185 = func_2431_call(relay.reshape(var_4184.astype('uint64'), []), relay.reshape(call_4175.astype('uint64'), [14, 2, 7]), )
output = relay.Tuple([call_4175,call_4183,var_4184,])
output2 = relay.Tuple([call_4176,call_4185,var_4184,])
func_4197 = relay.Function([var_4184,], output)
mod['func_4197'] = func_4197
mod = relay.transform.InferType()(mod)
var_4198 = relay.var("var_4198", dtype = "uint64", shape = ())#candidate|4198|()|var|uint64
output = func_4197(var_4198)
func_4199 = relay.Function([var_4198], output)
mutated_mod['func_4199'] = func_4199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_4209 = relay.TupleGetItem(func_3790_call(), 0)
call_4210 = relay.TupleGetItem(func_3792_call(), 0)
uop_4211 = relay.tan(call_4209.astype('float32')) # shape=(14, 2, 7)
uop_4213 = relay.tan(call_4210.astype('float32')) # shape=(14, 2, 7)
output = uop_4211
output2 = uop_4213
func_4215 = relay.Function([], output)
mod['func_4215'] = func_4215
mod = relay.transform.InferType()(mod)
mutated_mod['func_4215'] = func_4215
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4215_call = mutated_mod.get_global_var('func_4215')
call_4216 = func_4215_call()
output = call_4216
func_4217 = relay.Function([], output)
mutated_mod['func_4217'] = func_4217
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4215_call = mod.get_global_var('func_4215')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_4223 = func_4215_call()
call_4224 = func_4215_call()
output = call_4223
output2 = call_4224
func_4254 = relay.Function([], output)
mod['func_4254'] = func_4254
mod = relay.transform.InferType()(mod)
mutated_mod['func_4254'] = func_4254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4254_call = mutated_mod.get_global_var('func_4254')
call_4255 = func_4254_call()
output = call_4255
func_4256 = relay.Function([], output)
mutated_mod['func_4256'] = func_4256
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_4264 = relay.TupleGetItem(func_3790_call(), 0)
call_4265 = relay.TupleGetItem(func_3792_call(), 0)
output = relay.Tuple([call_4264,])
output2 = relay.Tuple([call_4265,])
func_4275 = relay.Function([], output)
mod['func_4275'] = func_4275
mod = relay.transform.InferType()(mod)
output = func_4275()
func_4276 = relay.Function([], output)
mutated_mod['func_4276'] = func_4276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4254_call = mod.get_global_var('func_4254')
func_4256_call = mutated_mod.get_global_var('func_4256')
call_4334 = func_4254_call()
call_4335 = func_4254_call()
func_4135_call = mod.get_global_var('func_4135')
func_4139_call = mutated_mod.get_global_var('func_4139')
const_4387 = relay.const([1,6,1,1,-4,3,-5,-10,6,-1,6,-1,9,-1,1,6,1,-5,5,-4,5,4,2,8,3,-3,9,-5,6,-3,-8,-10,-1,1,1,5,-7,-9,-5,10,-6,9,7,-4,-2,1,-5,8,7,2,-7,5,7,6,9,-2,-9,10,6,8,-10,5,1,3,-5,6,-1,-9,-3,10,10,-8,-2,-4,2,-6,4,-10,-5,3,-8,-3,9,9,6,5,1,5,-10,4,5,-6,1,6,-9,-7,7,7,-3,-8,-6,-5,4,4,10,-10,8,-6,2,-5,8,-9,2,-2,4,4,-3,-1,-8,5,-3,-5,-8,7,10,2,-6,6,1,-4,8,-9,6,9,4,-4,-8,-9,-1,-8,-10,10,5,3,3,-3,5,3,-3,-7,-6,-6,-1,1,-3,2,1,-7,-9,-4,-8,-5,-8,-4,1,-10,4,1,2,7,5,7,1,-4,-6,3,3,7,-6,-4,6,-4,-1,6,-9,9,2,1,9,6,-2,-1,6,-10,-1,-9,-10,7,-8,-5,6,2,-9,3,-6,5,-7,5,-4,-8,-1,4,-8,3,6,2,3,3,-6,-1,-5,-2,-5,-10,4,-6,2,6,-4,5,-10,-3,-2,-6,3,1,-8,-2,2,1], dtype = "uint64")#candidate|4387|(240,)|const|uint64
const_4388 = relay.const(-6, dtype = "uint64")#candidate|4388|()|const|uint64
const_4389 = relay.const([[6.486209],[-6.636202],[5.547095],[-9.764444],[-5.138451],[9.594305],[1.572844],[3.465645],[-9.165526],[5.523584],[-4.855940],[-4.446140],[-6.985530],[-0.069566],[-6.419522],[-6.411427],[-1.597305],[4.133046],[7.692511],[-8.276958],[-3.822173],[-7.808130],[-5.345555],[-4.671634],[-5.028628],[0.105849],[-8.836545],[-3.828032],[7.121902],[2.503369],[3.494715],[1.408196],[-8.639815],[7.537517],[-7.624869],[-0.591691],[7.763946],[4.347199],[-1.758448],[6.215557],[4.964429],[1.303183],[-4.805157],[-6.880805],[-7.232270],[3.846701],[9.189797],[4.974086],[3.428167],[7.681705],[-2.231553],[-4.374639],[3.161899],[-2.036294],[1.595482],[-6.554350],[-5.478666],[-9.239123],[8.254991],[-0.960927],[4.641815],[6.276392],[-4.509702],[-1.215389],[-1.891044],[-4.784690],[5.984777],[-9.107499],[-3.269501],[-7.815185],[-1.835696],[-0.186288],[-1.172452],[9.179004],[8.978815],[9.880720],[0.693637],[8.430138],[-2.191842],[9.118629],[5.050870],[0.745771],[-7.901808],[5.795871],[-0.098053],[0.716481],[9.768247],[0.409013],[-3.807168],[4.026844],[-6.217806],[-1.930810],[-3.810102],[-0.957381],[-5.812733],[6.871706],[5.044368],[-0.263979],[-4.318897],[-3.871574],[-5.405622],[-5.870700],[3.420440],[6.635364],[-5.034493],[6.733732],[-5.284684],[4.371363],[0.326403],[2.090034],[8.894452],[8.495644],[0.623629],[0.599114],[-5.029851],[8.261130],[2.344815],[-3.817120],[2.074054],[-3.484261],[-4.783965],[7.663177],[-7.301414],[7.958418],[-8.799026],[4.436209],[6.406309],[-1.984291],[-8.642027],[9.127734],[2.079266],[8.364114],[-6.937670],[4.028365],[-1.453791],[5.776002],[4.933190],[7.370159],[4.613695],[7.305727],[0.961619],[-4.276987],[9.338900],[8.674700],[-6.863597],[-8.728070],[1.938396],[-4.866046],[0.846689],[-7.740018],[2.477455],[6.826850],[-9.357201],[-7.934525],[1.838761],[1.179108],[-9.028335],[-4.790283],[-4.864538],[-2.374883],[-1.438354],[-5.710220],[-5.335489],[1.174370],[-1.144989],[0.320250],[6.963078],[-9.663224],[2.441581],[-3.896166],[-9.379263],[0.282591],[0.631353],[-5.449934],[-0.617617],[-5.587243],[-6.440509],[-7.253842],[8.450162],[-0.114209],[0.575027],[0.998972],[-5.280443],[-3.824877],[8.254491],[6.977539],[-4.426780],[-3.052282],[-0.508523],[0.618859],[2.553639],[9.869589],[-0.686552],[1.770230],[0.348392],[3.659513],[5.540745],[1.185517],[-6.545535],[-8.368516],[-8.582376],[9.901397],[-4.298472],[-7.358603],[1.791046],[3.944569],[2.684717],[-4.473542],[9.067158],[6.507424],[7.264028],[7.572769],[-5.904999],[0.239501],[7.319525],[-4.799488],[9.311832],[-5.786181],[2.355824],[-5.751890],[6.097595],[-8.216723],[-1.680905],[-5.851095],[-1.305889],[-9.294018],[0.760943],[-5.023295],[-0.638267],[-9.697267],[4.510529],[-6.852703],[8.892023],[9.903854],[6.769901],[5.166661],[5.269915],[-4.974824],[-7.720418],[2.717043],[-9.137232],[-4.957799],[-9.045218],[2.564155],[-4.985997],[-5.195367],[-4.849745],[-6.558167],[2.795351],[6.164559],[8.809124],[0.303668],[-6.490831],[-5.234446],[8.307235],[4.577634],[9.910858],[4.270235],[-1.298762],[7.251924],[-8.315381],[0.187739],[-1.095586],[-1.659447],[2.810582],[-4.810000],[-8.721405],[1.889531],[0.684526],[8.223664],[-3.862313],[3.474068],[0.173557],[7.463200],[1.797845],[-5.127222],[-7.919319],[6.346120],[-6.262289],[-9.547447],[2.467745],[-9.092415],[4.492101],[-5.857648],[-5.713228],[6.015078],[-5.318102],[-0.693751],[3.876029],[0.831578],[-6.061210],[-5.810724],[7.621753],[8.098617],[-1.083220],[6.111567],[3.406287],[0.764977],[-0.626137],[2.206176],[-3.545865],[7.608250],[0.574774],[-4.668955],[1.358318],[-6.330160],[1.871660],[-0.176228],[-8.467924],[-0.288870],[3.443815],[-6.088041],[-2.937792],[0.599287],[0.183793],[1.030202],[0.962903],[-0.954771],[-0.895336],[4.364320],[-9.811386],[-0.137549],[3.673790],[9.857825],[-6.051100],[-9.108825],[9.752052],[-3.201424],[-5.250828],[-0.927367],[0.299246],[5.890206],[-8.958024],[7.655625],[-7.363659],[-7.104114],[-9.162930],[8.933343],[3.970969],[7.010924],[-8.436752],[-8.100862],[-1.087306],[1.362350],[-1.792575],[-6.321462],[1.348392],[6.707990],[5.872559],[4.455749],[2.292246],[6.137953],[-6.722702],[5.109178],[0.926979],[8.844895],[-8.103468],[2.570002],[3.268847],[-6.222960],[2.319569],[3.781111],[-6.108042],[-3.624998],[5.137345],[-7.636950],[-5.479532],[5.387054],[-0.209299],[-3.972968],[8.132261],[6.867128],[8.407308],[5.435555],[-9.579624],[8.883143],[-8.075046],[-9.938610],[2.100187],[0.033072],[-8.154505],[9.867361],[0.116061],[3.583196],[-6.107089],[5.656144],[-8.914834],[3.961440],[2.660904],[-8.097410],[-0.064196],[5.629954],[-3.081904],[-9.211441],[3.075335],[-4.974974],[2.322355],[-1.987988],[-0.123715],[-9.477784],[3.879979],[6.576170],[-6.448306],[-8.622930],[4.521110],[7.774184],[-7.136300],[-8.088553],[7.111250],[-1.035196],[-7.051772],[-9.687008],[-3.963856],[-5.349390],[4.333506],[2.397185],[-8.393007],[-9.593666],[-2.945122],[0.481290],[1.775899],[6.029893],[2.234188],[-4.541532],[-1.955324],[8.106189],[1.460380],[-5.364987],[-3.274318],[4.892924],[6.168536],[3.785304],[3.661862],[1.114813],[-0.821822],[6.820997],[7.068626],[6.996389],[-2.098013],[9.690149],[-2.317326],[-5.082088],[4.413150],[1.231329],[4.200476],[5.735531],[-2.942076],[5.504794],[-7.885746],[8.199930],[3.728497],[-0.724831],[4.153142],[9.195780],[8.995428],[6.853692],[-4.185670],[3.396676],[-8.663891],[4.473970],[6.423662],[0.408151],[5.584277],[8.564117],[5.600428],[-5.457623],[8.448728],[8.528070],[-0.984799],[7.455604],[-4.834035],[8.546795],[-3.594987],[-5.087385],[-7.469275],[-5.000570],[-3.255433],[6.009790],[-3.282316],[4.440606],[8.723369],[-6.169671],[-7.802716],[9.111844],[5.852278],[-5.959718],[7.931953],[-3.482591],[-2.888083],[6.093942],[-4.312537],[7.231362],[4.234405],[8.554875],[1.921179],[2.681008],[-2.111155],[-2.209634],[0.818241],[-5.074873],[-8.040429],[-8.317971],[-3.250842],[0.949357],[2.411259],[4.531165],[-7.511760],[-0.394142],[3.267307],[-3.137510],[-8.135985],[2.854947],[8.616859],[1.512121],[-2.262819],[3.002456],[-1.684572],[-7.673924],[-6.398105],[-6.206622],[-8.063144],[-9.369311],[-5.084680],[-6.650992],[-0.165447],[-0.896943],[-6.288983],[4.681258],[0.297098],[5.962252],[-3.617657],[-7.459634],[-9.250234],[-2.552524],[-8.550785],[4.387783],[-9.652372],[-4.780725],[-7.688520],[6.031060],[5.048650],[-6.930795],[5.760068],[6.887931],[-6.512945],[-1.657883],[-8.687597],[-9.403954],[-4.551313],[1.142670],[5.542634],[1.086116],[-4.761651],[-1.493106],[0.671973],[9.299801],[5.991787],[-2.701349],[-9.239905],[-8.941875],[-4.174898],[2.982351],[6.587842],[-0.220332],[-2.804099],[9.237938],[-8.069634],[-3.100279],[-9.777161],[6.272252],[-4.976905],[-4.586914],[-1.793373],[-3.456005],[-3.299133],[-4.796858],[-2.944406],[7.458103],[4.173032],[7.488962],[-4.356605],[8.452104],[1.270072],[0.624879],[-1.883066],[8.416273],[-6.906477],[-5.918358],[9.152238],[8.926644],[1.920938],[-1.897619],[3.901010],[-9.321542],[7.159161],[0.934015],[-6.660327],[-0.860574],[-7.480277],[2.662621],[4.547511],[1.077624],[-7.124875],[-3.976504],[-9.620883],[6.195267],[2.644312],[4.956285],[-6.717617],[3.337638],[6.473929],[3.429759],[5.369825],[-0.590162],[3.854302],[-4.768863],[-6.967134],[-6.572131],[-2.297901],[-1.481744],[-7.468701],[-2.138577],[-0.485437],[8.724678],[3.895518],[-0.192432],[3.219898],[-8.159650],[-6.868682],[-1.922256],[-1.130945],[-0.455867],[-4.013058],[4.332309],[0.096159],[5.760910],[-5.257060],[-5.126671],[-9.822202],[8.195653],[-8.960112],[-5.726023],[4.421674],[9.545463],[3.230139],[8.407241],[-8.699612],[2.325904],[2.601042],[5.238574],[-8.143508],[-3.481150],[2.331272],[8.541359],[-2.800995],[5.047042],[8.683113],[-5.617504],[5.099589],[-5.095861],[4.903197],[-8.764670],[4.210269],[-4.738597],[2.138382],[1.011767],[1.498198],[-5.068940],[-7.571353],[-3.087938],[-5.497411],[-0.308974],[6.611046],[-6.447398],[-8.153020],[-8.740042],[-4.317947],[1.812137],[-4.375421],[-1.999636],[-7.905218],[8.557617],[-7.468720],[-5.493243],[-9.141995],[9.045441],[-1.142310],[-0.860583],[3.701200],[-4.287590],[6.753034],[1.804847],[-7.991677],[8.084654],[7.897225],[-7.147790],[5.147673],[2.686218],[4.945485],[3.466703],[-2.433340],[-6.032374],[-1.605860],[-7.433048],[7.453567],[1.716682],[1.051102],[-9.022326],[8.438564],[-7.565319],[-2.687835],[-2.561248],[0.359567],[8.049625],[3.857665],[-8.455973],[5.740788],[1.831371],[7.031236],[6.323681],[-7.009605],[1.070272],[-5.903117],[4.448092],[4.278870],[-4.829551],[-1.953853],[3.754630],[-2.341937],[-0.717426],[7.324577],[8.495353],[4.605212],[-9.271783],[-6.410465],[5.281850],[-6.820564],[1.953552],[7.360452],[5.502061],[-6.317290],[-5.080392],[-3.535651],[-7.352323],[-3.956122],[1.289659],[6.417096],[-6.120562],[9.910546],[2.926795],[0.543580],[-9.402437],[7.025506],[-0.843113],[1.125916],[1.976780],[7.129383],[-3.649477],[-1.270421],[-8.784547],[-2.666743],[-0.735693],[-1.584287],[-0.605548],[-3.983396],[9.096523],[5.895008],[7.100679],[5.635305],[9.294784],[5.158757],[0.696377],[-5.725074],[7.224878],[-0.040147],[7.763434],[5.877343],[5.183979],[-7.765807],[9.015314],[6.773688],[-8.437109],[-0.419049],[-9.979284],[0.780995],[-2.611707],[-7.297346],[5.443273],[-9.425666],[6.946399],[-9.485265],[4.343038],[0.590691],[7.385734],[-0.894474],[-1.411780],[-7.713047],[-5.151202],[-9.542886],[-5.595859],[-4.601462],[1.692973],[-9.924653],[1.810668],[8.540694],[-4.326593],[8.144690],[0.861688],[-5.276615],[2.802737],[0.122562],[-3.945093],[-0.432826],[-7.212012],[2.162479],[9.142688],[-8.464930],[4.637182],[0.936741],[3.543593],[1.995745],[6.878319],[0.171783],[8.812470],[2.951312],[-2.497206],[-8.899003],[-6.819219],[-5.243629],[-7.109296],[-2.727084],[3.992445],[-4.330305],[1.118251],[-7.195848],[-5.445049],[-4.833076],[-3.297811],[-6.207610],[4.768844],[-1.037516],[-9.568830],[8.044766],[-9.895752],[9.682706],[7.811623],[-4.357699],[-9.430158],[1.516184],[-6.200663],[-1.445537],[-9.816764],[-8.739453],[-3.168493],[-4.161907],[6.193313],[-7.101721],[-7.974956],[-3.679252],[6.326815],[7.589243],[7.804137],[2.732839],[-5.076613],[-9.891321],[-8.099400],[8.548858],[1.422608],[-7.077592],[-2.651479],[-2.379059],[4.301520],[6.788862],[-4.669276],[-9.581180],[1.701257],[-0.128175],[7.404953],[8.293162],[7.073477],[7.166072],[-0.749272],[-9.432308],[-5.251153],[-5.190391],[7.228171],[-8.605144],[5.904155],[-6.367764],[-2.343544],[7.262627],[-0.241378],[-5.538884],[0.555134],[2.195852],[1.804647],[2.174609],[2.868737],[-3.285671],[-7.371182],[-5.455680],[2.547643],[-6.926348],[-9.723545],[-3.503271],[-2.683800],[6.978729],[9.413903],[-7.576414],[5.470733],[6.339496],[-2.252255],[-8.175185],[-2.028749],[-7.874918],[7.824477],[7.755529],[8.067012],[3.166166],[-2.365739],[-8.056836],[4.580586],[-6.089038],[-2.777919],[-5.408691],[-8.348405],[-0.588978],[-3.309876],[7.735514],[2.212968],[7.587595],[-9.085373],[7.229776],[-1.937930],[-5.602839],[-6.173605],[5.262063],[-8.793267],[9.710221],[0.770266],[-1.889951],[2.594276],[-5.015378],[7.522566],[3.569099],[1.816402],[-1.182377],[5.606076],[-0.819381],[-1.943261],[-6.894280],[3.285304],[4.700289],[7.735542],[-8.290107],[-2.771717],[8.413742],[-0.088928],[4.030019],[8.020490],[-0.651713],[3.681994],[-0.073769],[2.456552],[-0.648020],[6.308021],[-9.881094],[4.271635],[-1.901916],[-7.535438],[3.423404],[4.030904],[7.064994],[-9.775557],[-6.400942],[6.378803],[3.374671],[7.180415],[7.359553],[-9.088610],[-5.227118],[-8.032138],[-4.821102],[-3.715093],[0.469238],[-7.662311],[3.708683],[0.147558],[7.990719],[6.918545],[7.352822],[-5.345644],[8.821018],[-4.992677],[-3.718738],[7.709810],[8.432686],[-2.282825],[3.740294],[-5.893809],[2.860685],[6.006083],[4.211941],[8.672852],[-7.156892],[-3.811828],[3.072061],[-3.626696],[-5.020102],[6.555702],[1.567205],[4.759102],[6.226264],[7.268969],[2.040667],[1.361348],[-5.620642],[6.800671],[4.993694],[-3.444094],[-5.664528],[3.866823],[1.213769],[-0.115844],[-7.534233],[3.854285],[-3.685749],[-9.221395],[-8.569317],[-5.502651],[-8.113194],[-7.923012],[-8.625668],[-7.218633],[3.408506],[-0.792445],[4.049732],[2.156977],[5.141191],[-8.595893],[-1.668277],[-6.328315],[-5.653822],[-9.488624],[-5.805089],[-2.452418],[-5.889526],[1.372516],[8.098180],[-9.825993],[-4.999639],[-9.750322],[-3.377457],[-7.807971],[2.594108],[2.995914],[-3.761408],[6.031948],[4.204710],[3.930628],[-0.254637],[-6.454465],[7.895064],[-7.612460],[9.426656],[7.364162],[0.117291],[4.911295],[3.313626],[6.357615],[-2.345725],[-9.936785],[-2.265906],[4.452229],[7.463118],[2.102653],[5.807557],[-0.921368],[1.973968],[5.444168],[4.063207],[-0.094073],[-5.691844],[-3.867936],[-2.819483],[-0.636450],[7.155305],[7.954368],[-5.126902],[3.473752],[-1.500731],[-3.302962],[-3.972130],[-6.908545],[2.222091],[-9.505590],[-6.986528],[4.962747],[-5.127438],[-3.267694]], dtype = "float32")#candidate|4389|(1100, 1)|const|float32
call_4386 = relay.TupleGetItem(func_4135_call(relay.reshape(const_4387.astype('uint64'), [1, 240]), relay.reshape(const_4388.astype('uint64'), []), relay.reshape(const_4389.astype('float32'), [1100,]), ), 6)
call_4390 = relay.TupleGetItem(func_4139_call(relay.reshape(const_4387.astype('uint64'), [1, 240]), relay.reshape(const_4388.astype('uint64'), []), relay.reshape(const_4389.astype('float32'), [1100,]), ), 6)
output = relay.Tuple([call_4334,call_4386,const_4387,const_4388,const_4389,])
output2 = relay.Tuple([call_4335,call_4390,const_4387,const_4388,const_4389,])
func_4392 = relay.Function([], output)
mod['func_4392'] = func_4392
mod = relay.transform.InferType()(mod)
mutated_mod['func_4392'] = func_4392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mutated_mod.get_global_var('func_4392')
call_4393 = func_4392_call()
output = call_4393
func_4394 = relay.Function([], output)
mutated_mod['func_4394'] = func_4394
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_4395 = relay.TupleGetItem(func_3790_call(), 2)
call_4396 = relay.TupleGetItem(func_3792_call(), 2)
var_4402 = relay.var("var_4402", dtype = "int16", shape = (5, 13, 7))#candidate|4402|(5, 13, 7)|var|int16
bop_4403 = relay.floor_mod(call_4395.astype('float32'), relay.reshape(var_4402.astype('float32'), relay.shape_of(call_4395))) # shape=(5, 13, 7)
bop_4406 = relay.floor_mod(call_4396.astype('float32'), relay.reshape(var_4402.astype('float32'), relay.shape_of(call_4396))) # shape=(5, 13, 7)
output = bop_4403
output2 = bop_4406
func_4407 = relay.Function([var_4402,], output)
mod['func_4407'] = func_4407
mod = relay.transform.InferType()(mod)
mutated_mod['func_4407'] = func_4407
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4408 = relay.var("var_4408", dtype = "int16", shape = (5, 13, 7))#candidate|4408|(5, 13, 7)|var|int16
func_4407_call = mutated_mod.get_global_var('func_4407')
call_4409 = func_4407_call(var_4408)
output = call_4409
func_4410 = relay.Function([var_4408], output)
mutated_mod['func_4410'] = func_4410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mod.get_global_var('func_3864')
func_3866_call = mutated_mod.get_global_var('func_3866')
call_4412 = relay.TupleGetItem(func_3864_call(), 0)
call_4413 = relay.TupleGetItem(func_3866_call(), 0)
func_4407_call = mod.get_global_var('func_4407')
func_4410_call = mutated_mod.get_global_var('func_4410')
const_4432 = relay.const([[-5,5,8,7,7,7,10],[2,-5,-2,-4,-3,-2,3],[-2,-7,7,-2,-10,-5,4],[8,1,-4,2,3,2,-2],[-6,10,1,-5,-9,-5,8],[5,-3,-8,6,-1,9,-2],[-9,-5,1,-4,-3,5,8],[3,10,-9,-3,-7,10,-5],[1,10,-4,-4,-2,-1,7],[-9,4,10,9,8,10,-1],[3,-1,-5,-4,-6,6,-9],[3,3,-3,-3,4,4,-4],[-7,-5,10,3,-7,-6,7],[10,-1,2,-6,-2,7,1],[-7,-6,-9,-5,4,-4,-6],[3,2,-7,-10,-6,3,-5],[7,-2,2,-9,6,8,3],[-1,2,-10,1,7,8,8],[-5,-2,1,-7,9,-4,9],[6,-5,10,-3,4,-2,5],[-8,1,-6,-6,-6,-1,-10],[-9,10,10,2,-5,-2,1],[1,4,-1,-1,-10,5,1],[-1,3,-9,-5,8,-10,-6],[-1,-8,5,10,-1,-2,-1],[4,-2,-2,-7,8,1,-1],[9,5,6,-2,9,4,6],[-8,-4,-8,9,1,-8,-8],[-5,2,-8,-5,2,3,3],[3,7,4,-6,-8,-2,-3],[-8,-1,-3,10,-10,6,-4],[5,-8,5,-10,7,-3,4],[-3,-8,-9,-7,-10,4,2],[3,-8,-1,9,-4,-7,6],[5,5,-9,9,10,10,3],[-1,3,8,4,-8,7,1],[-2,-4,-9,4,-2,3,1],[5,9,-6,1,2,5,-6],[1,-6,4,-9,-9,-8,8],[-4,-9,10,4,-8,1,-10],[-9,1,-4,4,-9,3,-8],[10,4,-2,4,1,-9,4],[-9,8,-1,-10,10,-4,-9],[-6,8,10,9,-7,3,10],[6,-1,8,-5,-2,1,10],[-8,2,3,-9,2,-6,-10],[4,10,4,5,5,-9,6],[9,-7,3,3,9,-3,-10],[7,-8,10,3,3,5,9],[-3,8,-8,-8,-4,1,3],[-2,10,10,2,-8,-3,-4],[-9,4,7,3,-5,-10,-4],[-4,-2,-9,-8,2,9,7],[-3,2,-4,-3,6,-8,-8],[2,7,8,-2,4,6,-2],[-8,-8,-7,-2,-5,-2,2],[4,6,4,3,5,-1,-5],[-4,3,-5,-4,1,3,-2],[9,-5,-6,10,-6,-1,8],[9,8,-2,7,2,-10,-9],[1,10,-7,-4,9,10,6],[-6,3,10,9,2,9,-7],[-9,2,8,-1,-10,-6,6],[2,-9,-6,4,-4,8,-8],[4,-6,10,4,-3,-2,9]], dtype = "int16")#candidate|4432|(65, 7)|const|int16
call_4431 = func_4407_call(relay.reshape(const_4432.astype('int16'), [5, 13, 7]))
call_4433 = func_4407_call(relay.reshape(const_4432.astype('int16'), [5, 13, 7]))
uop_4443 = relay.sqrt(const_4432.astype('float32')) # shape=(65, 7)
output = relay.Tuple([call_4412,call_4431,uop_4443,])
output2 = relay.Tuple([call_4413,call_4433,uop_4443,])
func_4446 = relay.Function([], output)
mod['func_4446'] = func_4446
mod = relay.transform.InferType()(mod)
output = func_4446()
func_4447 = relay.Function([], output)
mutated_mod['func_4447'] = func_4447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_4466 = relay.TupleGetItem(func_4161_call(), 2)
call_4467 = relay.TupleGetItem(func_4163_call(), 2)
func_1906_call = mod.get_global_var('func_1906')
func_1910_call = mutated_mod.get_global_var('func_1910')
const_4475 = relay.const([-7.042907,9.405127,7.045491,6.464807,-1.001631,3.421080,-2.752395,-5.364895,6.191400,1.682550,-7.200113,2.303807,0.179031,-2.005791,-7.111589,-4.204385,-1.703149,-3.283006,-0.412635,-4.742494,-3.414702,3.994782,-0.268350,-6.784252,-0.647053,-7.894874,8.087621,-2.207754,-6.120010,9.675794,-8.614598,9.585728,8.600114,-9.535856,0.040162,-7.983590,-7.269276,-7.102212,9.926159,-6.248206,-1.001497,-0.938090,5.487299,-5.493015,6.533875,-3.893409,5.658033,8.785833,2.017983,-6.955317,-6.055962,-9.456958,4.202899,-4.069377,5.616146,-0.911240,6.773627,5.707223,7.634947,-0.721718,4.977785,9.190441,-0.381717,7.013577,-0.192331,-7.485820,0.142690,-8.260578,6.687594,3.071354,1.679286,-6.797001,3.534608,8.078240,5.543464,9.136341,4.235647,-8.217880,4.074061,4.172924,3.499437,2.814444,3.382205,1.080132,-5.273379,0.640078,-8.872493,-8.139466,-6.535095,3.551343,1.455001,-7.770148,4.583869,-9.655935,1.303676,-0.263579,6.624746,5.092189,6.228506,0.933288,5.510738,-6.722528,-1.382397,3.538804,-4.887786,-0.339009,-2.239805,-5.425825,6.840306,-3.299139,7.428781,-2.504432,-7.035839,4.088958,-2.020005,3.482297,7.118315,-6.282158,-9.796827,-0.600934], dtype = "float32")#candidate|4475|(120,)|const|float32
var_4476 = relay.var("var_4476", dtype = "int32", shape = (8, 36))#candidate|4476|(8, 36)|var|int32
call_4474 = relay.TupleGetItem(func_1906_call(relay.reshape(const_4475.astype('float32'), [3, 10, 4]), relay.reshape(const_4475.astype('float32'), [3, 10, 4]), relay.reshape(var_4476.astype('int32'), [288,]), ), 0)
call_4477 = relay.TupleGetItem(func_1910_call(relay.reshape(const_4475.astype('float32'), [3, 10, 4]), relay.reshape(const_4475.astype('float32'), [3, 10, 4]), relay.reshape(var_4476.astype('int32'), [288,]), ), 0)
func_2431_call = mod.get_global_var('func_2431')
func_2434_call = mutated_mod.get_global_var('func_2434')
const_4483 = relay.const(4, dtype = "uint64")#candidate|4483|()|const|uint64
const_4484 = relay.const([[-7,2],[4,2],[6,-6],[3,-5],[2,-5],[-9,-9],[-10,-9],[-4,-8],[7,-6],[-7,-4],[2,-2],[-9,9],[-5,4],[1,-10],[-10,10],[9,6],[-8,-9],[-9,-10],[5,5],[-8,-3],[9,8],[3,-1],[-8,-8],[10,5],[4,-5],[-6,-3],[-4,3],[5,9],[-7,3],[5,-2],[6,-10],[-2,6],[-8,9],[3,-3],[4,-3],[3,-2],[6,-8],[-3,4],[10,8],[10,10],[-5,9],[2,-7],[9,-5],[9,-3],[-5,8],[3,7],[-7,-9],[-9,4],[-7,1],[7,8],[-5,10],[-2,-3],[-6,-3],[2,-4],[5,7],[-2,7],[3,1],[-6,-8],[3,7],[1,-10],[-10,5],[5,2],[-5,-5],[9,8],[-9,-4],[9,-6],[-9,8],[4,4],[5,7],[-1,1],[7,2],[-7,9],[-9,-1],[-6,3],[-1,-5],[2,-10],[-1,4],[-5,5],[-10,-9],[7,-5],[5,-7],[4,-6],[2,1],[-3,9],[-7,3],[10,7],[6,9],[5,2],[-1,-1],[-10,3],[8,-5],[6,-4],[-9,-6],[-8,-2],[-8,-10],[8,-3],[10,5],[10,-1]], dtype = "uint64")#candidate|4484|(98, 2)|const|uint64
call_4482 = func_2431_call(relay.reshape(const_4483.astype('uint64'), []), relay.reshape(const_4484.astype('uint64'), [14, 2, 7]), )
call_4485 = func_2431_call(relay.reshape(const_4483.astype('uint64'), []), relay.reshape(const_4484.astype('uint64'), [14, 2, 7]), )
var_4513 = relay.var("var_4513", dtype = "int32", shape = (8, 36))#candidate|4513|(8, 36)|var|int32
bop_4514 = relay.greater_equal(var_4476.astype('bool'), relay.reshape(var_4513.astype('bool'), relay.shape_of(var_4476))) # shape=(8, 36)
output = relay.Tuple([call_4466,call_4474,const_4475,call_4482,const_4483,const_4484,bop_4514,])
output2 = relay.Tuple([call_4467,call_4477,const_4475,call_4485,const_4483,const_4484,bop_4514,])
func_4520 = relay.Function([var_4476,var_4513,], output)
mod['func_4520'] = func_4520
mod = relay.transform.InferType()(mod)
mutated_mod['func_4520'] = func_4520
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4520_call = mutated_mod.get_global_var('func_4520')
var_4522 = relay.var("var_4522", dtype = "int32", shape = (8, 36))#candidate|4522|(8, 36)|var|int32
var_4523 = relay.var("var_4523", dtype = "int32", shape = (8, 36))#candidate|4523|(8, 36)|var|int32
call_4521 = func_4520_call(var_4522,var_4523,)
output = call_4521
func_4524 = relay.Function([var_4522,var_4523,], output)
mutated_mod['func_4524'] = func_4524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_4672 = relay.TupleGetItem(func_3790_call(), 1)
call_4673 = relay.TupleGetItem(func_3792_call(), 1)
var_4682 = relay.var("var_4682", dtype = "uint64", shape = (196,))#candidate|4682|(196,)|var|uint64
bop_4683 = relay.add(call_4672.astype('uint32'), relay.reshape(var_4682.astype('uint32'), relay.shape_of(call_4672))) # shape=(196,)
bop_4686 = relay.add(call_4673.astype('uint32'), relay.reshape(var_4682.astype('uint32'), relay.shape_of(call_4673))) # shape=(196,)
output = relay.Tuple([bop_4683,])
output2 = relay.Tuple([bop_4686,])
func_4701 = relay.Function([var_4682,], output)
mod['func_4701'] = func_4701
mod = relay.transform.InferType()(mod)
var_4702 = relay.var("var_4702", dtype = "uint64", shape = (196,))#candidate|4702|(196,)|var|uint64
output = func_4701(var_4702)
func_4703 = relay.Function([var_4702], output)
mutated_mod['func_4703'] = func_4703
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4705 = relay.const([[[8.499993,1.400079,4.980115,-7.616601,-6.008451],[2.288608,9.808029,4.555778,9.372413,-6.401126]],[[1.637258,-9.118611,-3.470287,-2.883083,4.680229],[-3.854093,-6.659297,6.588739,5.942329,4.440466]],[[-3.309747,-7.853260,-5.814901,3.981253,-5.259238],[-1.494338,-1.549970,-2.152626,9.918236,0.837985]],[[-6.179532,-9.043062,8.905288,-4.241294,1.610840],[-4.170217,-7.649921,5.694592,-1.749675,5.654331]],[[0.647677,-4.494390,-9.425294,-8.792581,7.063571],[-2.440363,1.085937,-8.114871,2.767754,-0.498439]],[[-5.082156,-5.257640,0.686335,-0.225272,4.801434],[2.036366,3.599683,-8.146986,-7.602868,-3.648281]],[[-5.806613,3.798889,3.889782,-0.322035,-1.735244],[1.795456,2.300165,6.798172,0.497232,-7.804716]],[[1.900096,2.170456,-3.841676,4.705546,2.225731],[-2.478774,-8.087044,0.340458,-5.345010,-5.887219]]], dtype = "float64")#candidate|4705|(8, 2, 5)|const|float64
uop_4706 = relay.cosh(const_4705.astype('float64')) # shape=(8, 2, 5)
uop_4711 = relay.log10(const_4705.astype('float32')) # shape=(8, 2, 5)
func_3864_call = mod.get_global_var('func_3864')
func_3866_call = mutated_mod.get_global_var('func_3866')
call_4714 = relay.TupleGetItem(func_3864_call(), 0)
call_4715 = relay.TupleGetItem(func_3866_call(), 0)
output = relay.Tuple([uop_4706,uop_4711,call_4714,])
output2 = relay.Tuple([uop_4706,uop_4711,call_4715,])
func_4718 = relay.Function([], output)
mod['func_4718'] = func_4718
mod = relay.transform.InferType()(mod)
output = func_4718()
func_4719 = relay.Function([], output)
mutated_mod['func_4719'] = func_4719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_4720 = relay.TupleGetItem(func_4392_call(), 3)
call_4721 = relay.TupleGetItem(func_4394_call(), 3)
func_2859_call = mod.get_global_var('func_2859')
func_2861_call = mutated_mod.get_global_var('func_2861')
call_4723 = relay.TupleGetItem(func_2859_call(relay.reshape(call_4720.astype('float32'), [])), 0)
call_4724 = relay.TupleGetItem(func_2861_call(relay.reshape(call_4720.astype('float32'), [])), 0)
uop_4730 = relay.log(call_4723.astype('float64')) # shape=(10, 13, 5)
uop_4732 = relay.log(call_4724.astype('float64')) # shape=(10, 13, 5)
bop_4738 = relay.multiply(uop_4730.astype('uint16'), relay.reshape(call_4723.astype('uint16'), relay.shape_of(uop_4730))) # shape=(10, 13, 5)
bop_4741 = relay.multiply(uop_4732.astype('uint16'), relay.reshape(call_4724.astype('uint16'), relay.shape_of(uop_4732))) # shape=(10, 13, 5)
const_4746 = relay.const([[[-2.197203,-9.851684,1.177410,2.473252,9.243429],[-8.597293,-1.058345,-5.309634,-7.570583,1.584248],[9.207283,-6.832254,-5.047445,1.799984,6.547482],[0.243592,-4.002222,-9.935203,-0.341108,2.367477],[-3.693208,-0.039115,1.882500,-6.887540,-6.762802],[-6.026322,9.037901,5.288816,-7.001380,6.878339],[9.363255,0.812899,-7.127853,0.344123,-2.542099],[-3.136365,-7.906743,4.808650,-4.749401,-7.515803],[-3.911555,-1.143183,2.701522,7.548454,-8.535139],[0.099027,1.174688,8.289775,-1.759146,1.491818],[7.940808,2.657955,-2.600661,7.237319,-9.272405],[-4.224098,-5.948815,-5.806656,-6.747160,-7.080806],[-5.141549,-6.758650,-0.464243,2.420039,-0.825281]],[[1.854988,2.283119,0.529439,-8.183633,-9.372577],[-1.589877,7.096967,2.317072,-7.999719,8.105170],[-4.794620,-9.021748,-2.866332,-8.077790,1.789143],[-8.828653,-7.898014,-9.721040,4.746435,8.666743],[8.260612,-8.536529,-2.246367,8.993437,5.813302],[1.227979,-5.771000,-2.920279,2.939108,1.569046],[4.247722,9.162218,0.296964,-7.936329,-8.117135],[-4.883291,8.114317,-1.488269,-3.001412,5.580137],[8.751682,4.332666,-8.576325,-1.666050,-8.185306],[4.993302,1.905956,8.507844,-2.179485,8.211077],[5.590510,-5.734292,7.367499,6.525275,-5.398316],[6.649083,9.474730,-2.569147,3.137500,1.542881],[-8.984189,9.799986,-6.680134,-8.084392,-2.675606]],[[1.332998,3.898693,8.490759,4.861335,-7.043926],[0.608066,7.194318,-4.166281,-6.518308,-2.422547],[2.469888,-7.875382,-6.542674,4.238813,2.022937],[-6.217746,-4.780255,7.587875,-6.550618,-1.582071],[-1.997990,4.226733,-2.129662,6.250586,9.062857],[2.782975,-2.873081,9.571703,-7.101350,0.488028],[8.865730,-6.933330,8.335493,9.620783,-4.361241],[-5.004261,2.615157,-7.301077,8.092081,-9.997926],[9.505330,7.952362,-0.836524,-9.036235,-3.690781],[-2.713978,-7.613710,5.040365,-3.959875,6.258188],[-9.780752,-9.981570,6.908074,5.542929,-8.750961],[0.414932,5.119046,-7.069388,-0.332835,-1.335049],[-0.783045,-2.248369,-9.650774,7.895077,-3.460907]],[[5.555264,-9.860944,-0.124311,5.573340,2.869835],[8.707334,5.838536,7.684850,-7.440635,1.280281],[-9.056552,-8.472935,-0.349923,-8.262295,3.400654],[-0.477099,5.294868,-0.234484,1.591328,-6.802740],[-6.403745,8.501077,-3.882224,6.650307,-3.590742],[-0.031500,-8.803014,7.332616,3.911121,-6.882780],[-6.680903,8.753864,-7.655194,6.608849,5.024941],[-2.868918,-0.670276,-3.409709,-4.794129,3.129416],[-8.964278,-8.162272,-1.165521,0.230062,6.201920],[1.905807,-6.507483,-5.861304,-0.772301,-9.006676],[1.033347,8.252998,9.407728,-8.416300,9.202255],[-1.762732,5.981440,9.728291,7.918448,6.236824],[-0.387316,-6.623574,-5.536257,7.745174,5.964479]],[[-9.921969,-2.112426,-2.576270,8.471298,-7.949739],[-4.129100,-6.959973,0.230340,-2.548205,-5.132733],[1.128351,-8.174595,-5.210121,-0.834612,9.546479],[2.960736,-2.334044,-9.276415,7.886520,-4.692940],[-5.898853,8.227117,-1.049698,-7.181313,7.271697],[0.538430,-6.967064,-7.969948,-7.769500,-8.180401],[-9.504640,9.110898,-3.791118,3.070536,-9.757187],[8.494252,2.894920,1.371920,6.016704,-9.014119],[1.815695,4.798347,9.396534,-4.997659,7.656310],[1.605405,-0.149210,-0.426589,-9.334242,0.929182],[1.995616,-7.657685,9.288005,0.433688,5.407057],[2.834049,3.375947,-7.404785,-1.741629,-3.687028],[-4.539288,-3.452573,-3.398622,9.231445,-8.080325]],[[2.651562,8.958174,-7.186937,-6.018461,5.123362],[2.632409,-3.914449,9.871498,7.794660,8.488164],[4.124768,-2.219493,-8.649731,4.969752,6.194843],[-8.230533,1.267395,-2.280951,-8.926525,2.956226],[9.913623,-8.458446,4.635346,-2.728098,-8.042261],[-4.098833,6.533027,5.033603,-7.817225,0.492890],[-3.104815,-8.462870,1.404349,-3.356022,3.890938],[9.860687,-9.077361,-6.765011,-4.744543,8.563667],[-4.424553,-4.951888,-4.329983,-6.302237,-1.742267],[-3.377532,2.708798,2.048144,-3.379761,8.986088],[6.796766,-1.769995,-1.505427,-5.453090,5.766688],[0.339261,2.379369,-5.560568,3.556995,-2.646142],[-3.568344,4.394385,-0.731526,1.790978,-8.608005]],[[-4.786893,6.648946,8.343870,-6.021846,-8.400179],[4.651096,0.831568,-3.450255,-1.324852,-6.034078],[7.561855,-9.929763,1.745041,2.783836,6.278130],[2.963426,-8.434605,-1.896911,-1.299334,4.712749],[-4.437338,9.090606,9.585290,0.602425,0.969009],[1.642510,5.756238,3.555906,-5.223766,5.848281],[-5.053998,2.658600,3.628560,9.662196,-1.166215],[1.053876,4.355335,7.683050,-5.785048,8.445492],[-0.336246,-8.755312,-3.050163,-9.518273,4.797703],[-5.785474,-2.921965,-2.553625,6.036294,-1.301813],[-5.331864,-2.351081,-2.589594,-1.630625,4.384594],[-7.569997,-9.645672,0.385294,6.907353,0.702923],[4.385360,-8.326970,-1.931255,2.645985,-6.700821]],[[8.680673,8.375969,6.434805,5.818743,-8.513214],[7.183596,8.222964,-9.024987,-7.280150,-1.597662],[-1.920290,6.770737,-0.806012,7.354309,4.071136],[4.502284,-7.722853,-5.540712,-5.490237,0.332694],[-0.948315,0.976443,0.322601,-6.267970,5.360969],[6.766572,-8.686072,3.749776,-5.841281,5.334423],[-2.632451,4.599654,8.111184,-7.367737,7.266292],[9.325269,-6.244376,3.977936,-5.952152,9.391458],[9.496556,1.589600,1.135489,-2.861154,5.760552],[8.901517,-0.339886,-9.771163,6.976499,2.787392],[-1.787598,-5.506873,7.173579,-6.347493,-6.206297],[-8.145806,7.582791,9.583551,-6.299089,-2.144283],[5.106299,0.093869,-7.142288,-5.535001,2.742350]],[[8.306769,-7.459342,-7.862146,6.981448,5.064963],[5.424763,1.448621,8.568879,2.125829,-2.814628],[3.394589,-9.461892,8.344236,-4.959927,-0.245517],[5.200537,1.055686,1.636950,-1.814928,2.127421],[-0.608564,6.302000,2.976298,2.361803,-4.806431],[-0.099003,8.779035,-9.919881,-6.585588,-1.126902],[-0.564393,-8.420850,1.038050,-2.741250,-0.328962],[5.788577,-9.185045,9.040621,0.109111,-7.612883],[-4.867659,8.546626,7.703082,1.223864,-0.139540],[-2.345710,2.680768,3.162568,6.201792,-5.518579],[8.461157,-9.577157,-2.095214,6.040605,-0.411369],[8.823463,-4.752861,9.937595,3.740503,8.815990],[-4.212117,-0.340528,-2.257878,3.513872,6.921128]],[[-4.504732,4.876200,-2.438356,-1.364793,-9.224126],[-5.490579,6.144042,-0.734389,-1.382912,6.527825],[-4.351404,-2.251949,-9.977478,-7.855668,-4.041374],[6.507072,-7.015319,7.042733,3.384365,-9.555028],[3.623852,3.034458,3.038490,3.254247,0.535799],[-7.940761,-2.140011,5.882957,8.898322,-6.070223],[8.687157,-2.157892,5.555674,5.597018,7.875141],[-2.191136,-6.469126,-2.268998,2.369769,0.733025],[-9.754404,-2.576371,-4.982322,7.778730,7.481253],[6.035885,-3.321390,-7.864738,-1.222574,-1.937169],[1.186602,-1.716153,-3.160102,-0.894471,-4.451240],[6.644013,6.033659,6.258574,3.497093,7.579354],[8.861839,6.634602,9.696634,4.302427,6.809019]]], dtype = "float64")#candidate|4746|(10, 13, 5)|const|float64
bop_4747 = relay.greater_equal(uop_4730.astype('bool'), relay.reshape(const_4746.astype('bool'), relay.shape_of(uop_4730))) # shape=(10, 13, 5)
bop_4750 = relay.greater_equal(uop_4732.astype('bool'), relay.reshape(const_4746.astype('bool'), relay.shape_of(uop_4732))) # shape=(10, 13, 5)
func_1064_call = mod.get_global_var('func_1064')
func_1067_call = mutated_mod.get_global_var('func_1067')
var_4755 = relay.var("var_4755", dtype = "float64", shape = (35, 7))#candidate|4755|(35, 7)|var|float64
call_4754 = relay.TupleGetItem(func_1064_call(relay.reshape(var_4755.astype('float64'), [7, 5, 7])), 2)
call_4756 = relay.TupleGetItem(func_1067_call(relay.reshape(var_4755.astype('float64'), [7, 5, 7])), 2)
func_2431_call = mod.get_global_var('func_2431')
func_2434_call = mutated_mod.get_global_var('func_2434')
const_4759 = relay.const([[-1,-3],[-8,-9],[-3,-3],[2,-1],[-8,1],[-7,3],[-5,-9],[-3,5],[6,6],[-3,8],[-6,6],[2,6],[-8,3],[5,7],[7,3],[6,5],[-8,-5],[-5,-8],[3,-8],[-3,6],[1,-9],[3,8],[-3,-1],[1,-3],[6,1],[-1,2],[-2,9],[-5,9],[4,2],[-5,7],[-3,8],[-4,-2],[-9,2],[3,5],[4,-3],[1,-5],[-9,2],[9,-3],[-10,6],[-2,-6],[3,-2],[-4,2],[-3,9],[6,-8],[-4,8],[-2,6],[1,-7],[2,5],[-5,-4],[6,-9],[10,2],[5,-2],[2,2],[2,-7],[-2,8],[-10,-1],[-10,4],[-10,4],[2,-7],[-7,3],[10,3],[-5,-7],[-7,-3],[9,-1],[-9,-6],[9,-1],[7,-7],[-9,-4],[-8,-3],[9,4],[-6,-2],[2,-6],[10,2],[-2,-10],[10,-3],[-8,10],[-4,-10],[6,9],[-2,-8],[4,-5],[-4,2],[9,4],[9,-10],[4,2],[-4,3],[6,-1],[10,-3],[1,-9],[-7,2],[-2,9],[4,6],[-1,8],[-3,-7],[-10,7],[8,-6],[-10,-6],[5,4],[4,9]], dtype = "uint64")#candidate|4759|(98, 2)|const|uint64
call_4758 = func_2431_call(relay.reshape(call_4720.astype('uint64'), []), relay.reshape(const_4759.astype('uint64'), [14, 2, 7]), )
call_4760 = func_2431_call(relay.reshape(call_4720.astype('uint64'), []), relay.reshape(const_4759.astype('uint64'), [14, 2, 7]), )
var_4767 = relay.var("var_4767", dtype = "uint16", shape = (10, 13, 5))#candidate|4767|(10, 13, 5)|var|uint16
bop_4768 = relay.mod(bop_4738.astype('float64'), relay.reshape(var_4767.astype('float64'), relay.shape_of(bop_4738))) # shape=(10, 13, 5)
bop_4771 = relay.mod(bop_4741.astype('float64'), relay.reshape(var_4767.astype('float64'), relay.shape_of(bop_4741))) # shape=(10, 13, 5)
uop_4773 = relay.log2(bop_4768.astype('float64')) # shape=(10, 13, 5)
uop_4775 = relay.log2(bop_4771.astype('float64')) # shape=(10, 13, 5)
output = relay.Tuple([call_4720,bop_4747,call_4754,var_4755,call_4758,const_4759,uop_4773,])
output2 = relay.Tuple([call_4721,bop_4750,call_4756,var_4755,call_4760,const_4759,uop_4775,])
func_4780 = relay.Function([var_4755,var_4767,], output)
mod['func_4780'] = func_4780
mod = relay.transform.InferType()(mod)
var_4781 = relay.var("var_4781", dtype = "float64", shape = (35, 7))#candidate|4781|(35, 7)|var|float64
var_4782 = relay.var("var_4782", dtype = "uint16", shape = (10, 13, 5))#candidate|4782|(10, 13, 5)|var|uint16
output = func_4780(var_4781,var_4782,)
func_4783 = relay.Function([var_4781,var_4782,], output)
mutated_mod['func_4783'] = func_4783
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_4800 = relay.TupleGetItem(func_4161_call(), 0)
call_4801 = relay.TupleGetItem(func_4163_call(), 0)
output = relay.Tuple([call_4800,])
output2 = relay.Tuple([call_4801,])
func_4803 = relay.Function([], output)
mod['func_4803'] = func_4803
mod = relay.transform.InferType()(mod)
output = func_4803()
func_4804 = relay.Function([], output)
mutated_mod['func_4804'] = func_4804
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4215_call = mod.get_global_var('func_4215')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_4829 = func_4215_call()
call_4830 = func_4215_call()
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_4839 = relay.TupleGetItem(func_4161_call(), 1)
call_4840 = relay.TupleGetItem(func_4163_call(), 1)
output = relay.Tuple([call_4829,call_4839,])
output2 = relay.Tuple([call_4830,call_4840,])
func_4841 = relay.Function([], output)
mod['func_4841'] = func_4841
mod = relay.transform.InferType()(mod)
mutated_mod['func_4841'] = func_4841
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4841_call = mutated_mod.get_global_var('func_4841')
call_4842 = func_4841_call()
output = call_4842
func_4843 = relay.Function([], output)
mutated_mod['func_4843'] = func_4843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mod.get_global_var('func_3864')
func_3866_call = mutated_mod.get_global_var('func_3866')
call_4852 = relay.TupleGetItem(func_3864_call(), 0)
call_4853 = relay.TupleGetItem(func_3866_call(), 0)
func_4446_call = mod.get_global_var('func_4446')
func_4447_call = mutated_mod.get_global_var('func_4447')
call_4866 = relay.TupleGetItem(func_4446_call(), 0)
call_4867 = relay.TupleGetItem(func_4447_call(), 0)
output = relay.Tuple([call_4852,call_4866,])
output2 = relay.Tuple([call_4853,call_4867,])
func_4871 = relay.Function([], output)
mod['func_4871'] = func_4871
mod = relay.transform.InferType()(mod)
mutated_mod['func_4871'] = func_4871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mutated_mod.get_global_var('func_4871')
call_4872 = func_4871_call()
output = call_4872
func_4873 = relay.Function([], output)
mutated_mod['func_4873'] = func_4873
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4254_call = mod.get_global_var('func_4254')
func_4256_call = mutated_mod.get_global_var('func_4256')
call_4881 = func_4254_call()
call_4882 = func_4254_call()
output = call_4881
output2 = call_4882
func_4895 = relay.Function([], output)
mod['func_4895'] = func_4895
mod = relay.transform.InferType()(mod)
output = func_4895()
func_4896 = relay.Function([], output)
mutated_mod['func_4896'] = func_4896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_4905 = relay.TupleGetItem(func_4161_call(), 0)
call_4906 = relay.TupleGetItem(func_4163_call(), 0)
uop_4909 = relay.exp(call_4905.astype('float32')) # shape=(196,)
uop_4911 = relay.exp(call_4906.astype('float32')) # shape=(196,)
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
const_4923 = relay.const(4, dtype = "uint64")#candidate|4923|()|const|uint64
call_4922 = func_1586_call(relay.reshape(const_4923.astype('uint64'), []))
call_4924 = func_1586_call(relay.reshape(const_4923.astype('uint64'), []))
var_4931 = relay.var("var_4931", dtype = "uint64", shape = (13, 11, 13))#candidate|4931|(13, 11, 13)|var|uint64
bop_4932 = relay.logical_and(call_4922.astype('bool'), relay.reshape(var_4931.astype('bool'), relay.shape_of(call_4922))) # shape=(13, 11, 13)
bop_4935 = relay.logical_and(call_4924.astype('bool'), relay.reshape(var_4931.astype('bool'), relay.shape_of(call_4924))) # shape=(13, 11, 13)
func_4275_call = mod.get_global_var('func_4275')
func_4276_call = mutated_mod.get_global_var('func_4276')
call_4944 = relay.TupleGetItem(func_4275_call(), 0)
call_4945 = relay.TupleGetItem(func_4276_call(), 0)
bop_4947 = relay.logical_xor(uop_4909.astype('uint8'), relay.reshape(call_4905.astype('uint8'), relay.shape_of(uop_4909))) # shape=(196,)
bop_4950 = relay.logical_xor(uop_4911.astype('uint8'), relay.reshape(call_4906.astype('uint8'), relay.shape_of(uop_4911))) # shape=(196,)
output = relay.Tuple([const_4923,bop_4932,call_4944,bop_4947,])
output2 = relay.Tuple([const_4923,bop_4935,call_4945,bop_4950,])
func_4952 = relay.Function([var_4931,], output)
mod['func_4952'] = func_4952
mod = relay.transform.InferType()(mod)
mutated_mod['func_4952'] = func_4952
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4953 = relay.var("var_4953", dtype = "uint64", shape = (13, 11, 13))#candidate|4953|(13, 11, 13)|var|uint64
func_4952_call = mutated_mod.get_global_var('func_4952')
call_4954 = func_4952_call(var_4953)
output = call_4954
func_4955 = relay.Function([var_4953], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mod.get_global_var('func_3864')
func_3866_call = mutated_mod.get_global_var('func_3866')
call_4998 = relay.TupleGetItem(func_3864_call(), 0)
call_4999 = relay.TupleGetItem(func_3866_call(), 0)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
const_5001 = relay.const([8.003610,3.526738,6.303679,-8.068412,-1.118261,7.182690,-1.912666,3.662880,-8.105242,6.228054,6.514021,-5.343730,-6.039035,2.424388,2.432109,-1.869984,2.010710,9.335323,4.434185,-9.915994,5.599142,-8.198380,-7.168508,-9.038753,-4.674123,3.163126,9.420581,-9.629024,-1.877911,9.468226,-8.682799,-4.422375,-3.704484,-0.539841,7.274292,4.764932,7.498323,-5.473610,-7.380118,-5.875738,-4.975188,-0.663437,2.119524,6.906051,-9.742043,-3.207224,3.549535,-8.466498,-5.804424,1.010058,1.475982,-4.026126,-2.921827,3.682279,-2.484958,5.293459,0.716733,-4.458960,5.661788,-5.246669,0.483540,-7.566331,8.577555,-2.489618,1.282057,0.729279,-2.744253,0.604400,-7.928957,1.512379,-6.306652,9.382212,-6.918298,6.113951,-2.186539,-9.390309,-6.668481,-7.050240,5.673938,5.181789,-3.262854,-1.856618,-8.416203,2.355225,-8.941447,9.392871,1.689893,-6.295784,8.303440,3.752655,-5.115130,9.696817,-0.806511,-4.241999,-9.931886,0.632853,8.116218,4.715203,5.358944,-4.501859,-2.856712,8.622700,6.879485,2.324170,1.489123,-1.441903,-6.365543,-9.174350,5.150017,0.186801,-6.041745,-6.839648,-4.130107,8.350845,-3.238654,7.439658,-0.046693,-2.868646,-6.997217,-8.763793,2.489069,1.886919,-9.614558,-9.589922,4.917429,9.903045,-3.159635,1.181542,6.059192,2.709546,-8.432930,-8.705888,8.401820,-9.595938,3.385690,8.745067,0.366399,-5.074769,-7.013226,6.519725,-4.056591,5.982719,-7.680656,6.291138,7.757341,8.639889,4.865441,-9.294695,1.208746,8.327036,1.661845,0.633047,7.705185,-3.970136,-2.271496,9.844888,-4.820497,-4.562019,7.470900,4.362950,-8.879762,8.434743,-4.978680,-2.995007,-3.014747,-1.114410,-6.089448,4.558069,-0.019618,4.195514,5.048529,6.442414,9.341840,2.444027,-5.247163,5.550186,1.739948,-1.631123,3.744572,5.283625,-2.608470,0.505006,2.498849,4.585272,3.662060,8.147526,8.327459,-1.296573,-1.989772,-8.355533,-3.769391,7.306241,-1.203467,-6.870855,-0.370647,7.992888,5.137081,7.301667,7.181107,-0.763438,0.732043,-4.774754,0.719620,8.657928,-8.995036,-4.353052,0.943997,-8.065470,5.419126,0.624930,2.816375,8.717337,-0.882621,7.393622,5.814719,-1.868394,7.963678,4.323373,9.174126,-3.150402,-5.601496,9.166111,-9.256856,6.142504,-6.701996,9.487261,-8.144388,-3.318236,3.386064,-3.156051,-6.944447,3.346783,5.502271,-9.780197,5.888465,-1.137272,1.393686,-1.808405,-6.365823,4.419143,-7.512249,-8.409770,2.667276,8.285840,-1.955096,9.839877,-8.159803,9.685926,-9.358518,5.891217,-8.929685,3.756213,1.266934,-6.602487,-0.196893,-0.621717,-4.188086,7.062293,7.592369,4.593962,-3.232773,-8.437429,0.558673,1.837815,3.559850,-1.318149,-1.525779,8.941287,1.607470,3.189851,-2.183667,-1.384848,-2.535327,-2.999527,0.069293,-2.269004,1.668312,-7.834873,-3.169232,-1.389432,-4.906069,9.987169,-6.313732,-2.515105,-5.023754,0.822636,6.156802,-3.103646,2.088002,-9.529422,-0.957541,2.063563,1.166852,-2.657190,4.427083,-0.603330,3.626441,-9.717395,-2.990219,9.717781,9.135324,9.489084,2.568383,-7.541729,7.864863,1.799510,1.032632,4.583486,-5.194400,-6.790629,-6.470499,-8.413067,0.387215,2.845662,3.514225,-3.175742,-7.569040,-3.776932,0.765951,-1.057030,9.852686,-0.312043,-8.816808,5.514341,-1.119326,-2.492398,-1.065062,-8.582216,-3.435140,-6.799696,4.488151,-6.542389,-1.537640,1.861153,9.057482,-4.070566,1.303733,-3.744455,-0.803802,-8.026421,9.543776,3.748767,9.282520,6.994799,-4.074214,-1.527626,2.407788,7.326231,4.471260,6.587720,-9.969004,8.216471,4.142283,-1.612627,4.812183,-3.957742,9.765079,7.566054,1.524361,-5.992572,-9.029463,6.778347,5.408582,6.351878,8.539756,-2.375251,8.317593,2.587113,4.041047,-1.633679,7.748228,1.528855,3.672829,7.578524,-7.749808,-5.246790,-5.965346,-3.080096,-9.523348,-7.431269,-8.569185,7.348478,-4.422766,-9.121472,-7.391387,4.068289,0.981032,1.473620,6.472188,-3.559611,-2.554368,-1.103182,-0.993630,9.685044,-5.078184,9.323479,-9.858465,-2.247387,5.986453,-9.811559,-9.610317,4.549023,-3.940121,-4.992739,-4.050670,5.712891,8.406547,0.279162,-1.374892,-1.698890,6.842790,-1.299035,-3.296096,-8.468309,0.761340,-7.721588,-5.778002,-2.404849,-7.894068,-1.476588,1.649862,1.529916,2.118138,-6.072339,7.829096,6.438807,-9.631247,-8.894786,-3.705324,6.925276,0.923558,6.108848,0.747442,4.706986,-5.284625,-9.589518,9.081955,-9.832834,2.200063,6.876210,5.572879,4.434898,-9.068306,5.334524,-2.187083,-5.595485,-9.757132,-5.826498,9.135053,6.153396,3.476865,9.688149,5.844327,-8.634305,9.722770,-6.656138,-9.363946,-4.930590,1.902823,9.409125,-6.875919,-7.298551,-8.392559,5.624810,-1.127608,7.940931,-7.428149,-5.851090,2.233685,-0.709521,-5.226835,0.955579,-0.448809,4.065256,5.801056,-7.098457,6.573785,-3.438784,9.940316,9.804719,-6.649742,8.662929,-6.849557,8.400009,-1.835110,-4.340400,-2.657862,2.951822,4.505256,-5.015795,-2.542867,2.627309,5.449939,0.873612,1.084586,-3.991734,3.665821,-5.726598,-2.978270,6.886252,-8.756459,4.000448,-7.616294,8.278593,-5.790905,-7.903481,-1.652362,-6.297960,-5.142182,-5.321031,-8.112139,6.699054,9.189694,5.836613,1.157005,-3.434988,-1.571444,-5.383369,1.577481,9.378764,-9.009677,-0.629768,8.716753,-7.868161,-0.183103,9.886206,-0.588269,-5.086913,-1.895911,7.106160,3.583163,3.228576,0.413499,-9.127268,-1.829139,-5.944717,3.564240,9.564812,3.759489,-2.897043,4.273597,9.768951,7.890982,7.737532,4.703792,1.537261,-7.044863,4.906947,7.528715,-6.956841,6.040044,-2.447136,1.937088,2.921924,2.849123,-8.562518,3.742150,-3.591629,-9.052464,-5.176989,-5.111040,-9.523490,5.641857,8.022526,9.710517,-9.389896,-7.745351,8.160488,-2.979474,8.257007,8.318705,-9.142077,5.403874,1.814438,-2.635866,1.073304,9.119260,-4.274298,4.197933,2.569233,4.516747,8.095742,-0.477770,-6.402880,0.743772,6.491060,0.010957,4.773894,-1.170520,-2.648292,7.330600,-4.755583,9.724603,6.238147,-0.801877,0.974121,-5.075147,8.887790,-7.369339,0.045733,1.336325,-0.081840,5.703210,9.519904,-7.896996,-4.542262,-3.650584,-3.152040,7.807566,-2.455782,8.961790,-7.494054,5.446718,-9.119590,3.130378,1.462543,-1.275585,9.719409,-5.014698,-8.561545,3.706462,-4.826407,4.272671,7.935451,-9.448338,-4.432193,-4.963694,7.674394,-4.922808,5.918997,2.730649,2.955416,-1.878914,2.402648,6.165714,9.282653,2.192737,-8.178884,-7.547695,8.257417,-6.595861,-0.064707,-8.307425,-2.950049,-8.981785,-1.548275,-9.293629,7.751707,7.434159,0.932881,-6.529889,1.649583,-1.143135,-8.945673,6.700578,9.389669,8.429244,-7.289687,7.171642,1.168047,-8.984792,-9.344767,6.424299,6.286722,-4.012372,9.594738,6.179308,-0.736115,3.282104,6.775320,9.680764,-3.768797,-3.355542,-8.214830,0.057237,9.489862,-0.670238,-6.203661,-0.783603,-9.483846,1.283952,2.906670,-2.376759,-1.463467,3.444364,-0.027433,4.381571,4.562423,-2.950539,3.196020,1.558231,1.909356,-3.546402,0.841299,-1.260599,-9.188869,-8.242186,-9.868694,5.365226,-4.792577,-5.590789,9.404900,4.243290,-0.564953,7.022860,3.494071,-0.879833,-5.798549,-2.394957,1.630374,9.178832,-2.503360,-1.733267,-9.100031,-9.943312,-6.571910,4.045344,-0.830020,-3.551299,-1.143503,-5.394894,2.570534,6.130140,-4.484004,7.451376,-3.157813,9.395384,-3.008020,3.333922,3.383460,3.620412,7.050755,-9.787180,4.600357,-9.243177,-6.457168,4.315894,2.799332,5.333133,3.513214,-8.784802,9.339020,-6.436412,0.735961,-8.021550,1.794640,-3.417578,-3.308146,-3.891288,0.901663,-5.497716,-3.813726,5.601978,-2.707963,6.920978,-4.702791,0.472940,8.878436,8.149658,6.931094,8.642858,-0.402021,6.907836,-5.484988,-5.082742,-5.015219,5.496500,7.402162,1.011060,7.026269,6.712502,-5.501113,3.726106,-9.683494,-3.590384,-6.443761,9.762724,5.830523,-7.699256,-7.093811,3.755642,2.792148,4.417546,-3.437603,-9.020336,1.911885,0.677482,-0.583539,4.604945,7.512767,-5.426643,-0.909725,-7.542495,5.415397,6.815604,-2.495977,-9.458299,-1.995997,-4.461556,-4.431829,-2.202268,-9.572078,0.466944,2.382044,4.326604,-2.263264,-5.769773,9.559479,-7.160395,4.456754,8.723512,4.089974,5.728631,7.416228,-5.884581,-4.152438,-9.882253,-2.900622,5.535182,-5.799800,-5.495991,0.700684,4.915227,-2.365872,0.006931,-1.148337,3.826630,-6.997745,7.935710,-2.507777,-4.696415,-2.359586,4.261071,-3.284714,-0.107552,5.712072,-1.972075,-5.875171,-5.538574,5.549226,-6.282236,-5.004114,0.509045,8.455771,-0.203778,-4.164500,-2.770791,9.239205,7.080655,5.438464,9.354926,6.539094,6.291357,5.672417,-6.472353,8.516065,-0.529989,-1.305294,-8.030727,-9.087813,3.147260,8.568994,-4.250995,0.307975,4.046469,3.990374,4.424348,-1.985281,-4.154327,-4.575840,-3.651824,-4.580064,6.323188,9.441914,-8.022654,6.765836,-4.805527,0.295169,2.482356,7.917979,2.752928,9.989744,1.637699,3.779725,-2.923760,-4.255988,0.815235,8.963692,3.260992,4.416441,9.171620,2.991563,2.578857,-3.658543,1.519379,5.230515,-1.614857,8.594008,-9.231657,-5.062647,9.007667,-2.448499,1.732927,5.811151,-6.728708,-8.887510,8.844485,9.313198,-5.222212,-9.665972,0.061963,7.880808,-4.611230,4.493016,5.845141,8.254225,-3.391571,-5.153894,-2.477860,-3.706131,-6.489739,-3.248639,-0.859137,-7.723355,3.802992,-9.239490,1.542667,-4.691965,3.002124,-8.360700,3.863568,5.422899,8.873952,6.703818,7.182759,-9.213437,-2.602118,-0.465280,3.585277,-7.301021,7.864442,7.616326,-3.722638,-7.825023,-8.493612,-7.705771,6.727807,0.921218,3.303147,-0.628903,8.527858,-6.003403,2.509608,-9.009373,-0.792904,2.104550,-7.912718,-1.907843,-5.639634,-5.815498,2.371973,9.806658,-1.169886,-7.767404,7.143100,-2.856989,5.254713,1.193352,8.321047,2.019561,-8.446367,0.769980,-7.498001,3.226403,7.048288,0.382874,-2.911201,8.470090,1.869886,9.785802,-3.075299,2.635858,-8.473120,-4.661212,7.576673,2.117499,-5.793637,-8.340347,-7.497265,0.975409,7.461509,3.196876,2.950272,-5.652576,-6.607454,-6.297759,1.624897,-3.658080,-2.728599,-5.756477,9.605261,3.905010,-3.978110,-2.879491,2.456108,-2.614950,-2.415753,-3.562550,-7.500830,-6.087944,-9.687930,9.026614,8.493345,-4.929148,-4.229837,9.941677,-1.711600,2.732270,-3.740815,-5.201233,-5.688428,-9.096811,-7.954569,-3.950305,4.023125,7.130383,7.521158,9.453901,-7.521434,-8.890453,-9.386588,-2.681091,-0.801776,-4.327118,9.408621,-1.576752,3.115381,-0.897168,-0.772863,7.997189,-3.314610,6.122176,4.978769,-9.101738,-3.985730,6.069023,-6.811962,-1.807659,3.742640,6.408953,8.748204,-0.707330,-1.492022,-8.740951,-3.179213,-0.157318,-8.462851,-7.522282,-5.706302,4.013523,-7.204612,-5.707584,9.284809,4.804019,5.317889,2.445283,1.522351,8.307628,8.393286,-7.634154,2.022577,-2.308264,-6.988470,-7.548072,6.642050,-3.802684,-0.816137,-6.005226,2.068950,-3.772605,-2.764536,6.350674,-6.349911,8.638028,-5.004987,8.025617,-3.613699,5.012631,-4.739768,2.537674,6.889459,9.126344,-5.296264,3.521067,-6.733719,-1.508100,-2.064033,-9.588146,7.407374,-0.219529,8.587573,3.914885,8.375647,-3.912909,-6.796118,6.517782,1.584494,7.035838,-3.229969,5.854206,2.437467,3.263710,6.688276,-4.843288,2.602179,-6.086194,-1.231479,-1.543044,-7.367222,8.901063,-8.744823,0.423744,-1.715726,-5.512315,3.294957,2.764882,2.307117,-3.842285,-3.262258,2.977287,6.697729,-0.643689,-5.110570,3.424375,7.810550,7.255835,3.340719,-2.139509,-4.778985,-6.554581,-8.040131,-9.191745,-4.656241,0.734281,1.629864,-6.588213,-9.154041,-7.896986,0.250618,-6.364225,-5.176603,8.431733,-8.905419,9.664486,-5.046749,-0.423753,7.747749,-3.460331,-7.415351,-6.602783,2.450725,-6.273095,6.238320,-4.856060,1.472039,-6.268655,-1.059986,5.358422,3.197887,9.096378,8.096764,-3.733205,-5.464510,-7.710784,-7.195791,-9.551836,-7.018070,-4.822912,3.956961,-6.611598,8.090102,3.551883,-7.555942,-1.799361,5.361952,5.007183,5.780579,-0.759263,2.923418,-8.864112,8.115787,1.180553,-2.753403,-1.435515,-4.405177,-3.708122,6.113617,1.602036,-7.930864,4.573301,-4.087988,-6.350743,-0.586703,8.195967,-1.301501,-9.607641,2.202381,9.219534,5.809654,5.780249,-8.779055,7.436440,7.022213,-0.680330,-2.084031,-6.790544,-8.410760,-6.266954,7.763682,-9.626285,-8.294081,5.434950,-1.942542,9.468562,-0.904972,7.154285,-5.571809,-7.981352,-8.067864,1.371644,-7.084245,5.533431,5.917368,-9.970834,0.987770,-6.483291,6.645029,4.599670,-4.320724,9.480768,-3.963481,2.937147,4.782495,-8.693860,-1.951365,-9.899737,0.177510,-4.833698,9.013884,0.502045,1.736614,-7.345122,-1.475987,6.238536,-3.759157,2.845535,5.275316,2.830665,2.965978,-3.840875,-0.382752,-1.899835,-3.956430,-1.213301,5.178370,2.064524,1.044228,6.537441,9.228071,-5.749473,0.773763,-0.761882,-7.103163,0.571785,-8.754795,-2.563205,-1.695360,-3.018081,4.682825,9.717625,7.197431,5.192469,-5.491165,-0.138843,1.362210,-5.751580,-6.545247,-5.685180,-1.526360,-3.444311,5.870726,6.131827,-0.235690,3.409551,-3.020049,-3.745379,8.212770,-8.059579,1.749703,0.655226,2.854766,4.606011,8.763951,2.632188,-8.609427,-6.647903,-7.764735,5.102848,1.985151,-2.539404,2.970966,8.353938,-8.223607,9.255213,-8.664375,4.377999,-3.524430,-4.592814,-2.973259,1.524712,8.110190,-8.622529,-2.327616,-3.242628,-3.811707,6.877795,-3.770337,-4.533452,1.986801,-3.230547,6.281017,8.143334,-5.842328,9.446662,0.913347,2.374984,-9.995856,-4.739996,-9.659604,-6.786179,8.352997,-9.604518,4.829221,1.333805,-2.353002,-9.913162,7.127619,8.482061,8.779512,-2.013539,-1.160064,-6.261919,6.075187,1.281846,5.559107,7.226782,0.728508,-6.513417,-3.779359,3.414612,6.661918,-2.928011,-0.700311,5.694603,-8.753916,-5.440101,1.370472,1.708510,-7.248751,-5.404023,2.025117,-1.437698,-6.287635,0.895969,-6.184741,8.301147,-6.330542,-7.198520,-5.743869,3.006288,4.604456,5.113104,-1.940801,-6.106207,0.861468,-5.997164,-9.975305,6.806775,-1.741247,0.772194,-7.812625,-8.879066,5.447783,9.001225,-4.170279,-6.923528,-4.942696,9.201000,7.265907,6.070894,-2.844881,9.519058,6.589667,2.132896,3.118329,-4.565618,-3.265013,-1.037927,-9.692241,7.148918,-5.084425,-2.323345,5.991850,5.835175,2.902336,9.745326,3.641349,-5.249635,6.489310,-7.030410,6.632270,-9.677105,4.478836,7.746102,-4.167290,6.098872,-1.762211,-0.722643,9.921352,-8.658437,-6.886101,-4.923836,-1.114480,-1.927879,4.224410,-2.935662,-5.118948,-7.579040,-0.113362,2.238469,-1.713005,7.254797,-6.142451,-3.290717,-5.720492,4.456570,-9.672853,-7.107415,-2.586123,-8.271199,5.335877,-9.976757,-4.870340,0.213328,-6.572537,7.300313], dtype = "float64")#candidate|5001|(1456,)|const|float64
call_5000 = func_2690_call(relay.reshape(const_5001.astype('float64'), [13, 8, 14]))
call_5002 = func_2690_call(relay.reshape(const_5001.astype('float64'), [13, 8, 14]))
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
const_5006 = relay.const(10, dtype = "uint64")#candidate|5006|()|const|uint64
call_5005 = func_1586_call(relay.reshape(const_5006.astype('uint64'), []))
call_5007 = func_1586_call(relay.reshape(const_5006.astype('uint64'), []))
output = relay.Tuple([call_4998,call_5000,const_5001,call_5005,const_5006,])
output2 = relay.Tuple([call_4999,call_5002,const_5001,call_5007,const_5006,])
func_5010 = relay.Function([], output)
mod['func_5010'] = func_5010
mod = relay.transform.InferType()(mod)
output = func_5010()
func_5011 = relay.Function([], output)
mutated_mod['func_5011'] = func_5011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_5018 = relay.TupleGetItem(func_4871_call(), 0)
call_5019 = relay.TupleGetItem(func_4873_call(), 0)
output = call_5018
output2 = call_5019
func_5028 = relay.Function([], output)
mod['func_5028'] = func_5028
mod = relay.transform.InferType()(mod)
output = func_5028()
func_5029 = relay.Function([], output)
mutated_mod['func_5029'] = func_5029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5051 = relay.var("var_5051", dtype = "int64", shape = (15, 13, 15))#candidate|5051|(15, 13, 15)|var|int64
var_5052 = relay.var("var_5052", dtype = "int64", shape = (15, 13, 15))#candidate|5052|(15, 13, 15)|var|int64
bop_5053 = relay.less_equal(var_5051.astype('bool'), relay.reshape(var_5052.astype('bool'), relay.shape_of(var_5051))) # shape=(15, 13, 15)
func_3809_call = mod.get_global_var('func_3809')
func_3812_call = mutated_mod.get_global_var('func_3812')
var_5067 = relay.var("var_5067", dtype = "int16", shape = (400,))#candidate|5067|(400,)|var|int16
call_5066 = relay.TupleGetItem(func_3809_call(relay.reshape(var_5067.astype('int16'), [8, 5, 10])), 0)
call_5068 = relay.TupleGetItem(func_3812_call(relay.reshape(var_5067.astype('int16'), [8, 5, 10])), 0)
output = relay.Tuple([bop_5053,call_5066,var_5067,])
output2 = relay.Tuple([bop_5053,call_5068,var_5067,])
func_5072 = relay.Function([var_5051,var_5052,var_5067,], output)
mod['func_5072'] = func_5072
mod = relay.transform.InferType()(mod)
mutated_mod['func_5072'] = func_5072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5072_call = mutated_mod.get_global_var('func_5072')
var_5074 = relay.var("var_5074", dtype = "int64", shape = (15, 13, 15))#candidate|5074|(15, 13, 15)|var|int64
var_5075 = relay.var("var_5075", dtype = "int64", shape = (15, 13, 15))#candidate|5075|(15, 13, 15)|var|int64
var_5076 = relay.var("var_5076", dtype = "int16", shape = (400,))#candidate|5076|(400,)|var|int16
call_5073 = func_5072_call(var_5074,var_5075,var_5076,)
output = call_5073
func_5077 = relay.Function([var_5074,var_5075,var_5076,], output)
mutated_mod['func_5077'] = func_5077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_5111 = relay.TupleGetItem(func_5010_call(), 0)
call_5112 = relay.TupleGetItem(func_5011_call(), 0)
func_4701_call = mod.get_global_var('func_4701')
func_4703_call = mutated_mod.get_global_var('func_4703')
call_5130 = relay.TupleGetItem(func_4701_call(relay.reshape(call_5111.astype('uint64'), [196,])), 0)
call_5131 = relay.TupleGetItem(func_4703_call(relay.reshape(call_5111.astype('uint64'), [196,])), 0)
output = relay.Tuple([call_5111,call_5130,])
output2 = relay.Tuple([call_5112,call_5131,])
func_5136 = relay.Function([], output)
mod['func_5136'] = func_5136
mod = relay.transform.InferType()(mod)
output = func_5136()
func_5137 = relay.Function([], output)
mutated_mod['func_5137'] = func_5137
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_5178 = relay.TupleGetItem(func_3790_call(), 1)
call_5179 = relay.TupleGetItem(func_3792_call(), 1)
var_5180 = relay.var("var_5180", dtype = "uint64", shape = (196,))#candidate|5180|(196,)|var|uint64
bop_5181 = relay.bitwise_and(call_5178.astype('int64'), relay.reshape(var_5180.astype('int64'), relay.shape_of(call_5178))) # shape=(196,)
bop_5184 = relay.bitwise_and(call_5179.astype('int64'), relay.reshape(var_5180.astype('int64'), relay.shape_of(call_5179))) # shape=(196,)
var_5187 = relay.var("var_5187", dtype = "int64", shape = (196,))#candidate|5187|(196,)|var|int64
bop_5188 = relay.minimum(bop_5181.astype('uint32'), relay.reshape(var_5187.astype('uint32'), relay.shape_of(bop_5181))) # shape=(196,)
bop_5191 = relay.minimum(bop_5184.astype('uint32'), relay.reshape(var_5187.astype('uint32'), relay.shape_of(bop_5184))) # shape=(196,)
var_5210 = relay.var("var_5210", dtype = "uint32", shape = (196,))#candidate|5210|(196,)|var|uint32
bop_5211 = relay.divide(bop_5188.astype('float32'), relay.reshape(var_5210.astype('float32'), relay.shape_of(bop_5188))) # shape=(196,)
bop_5214 = relay.divide(bop_5191.astype('float32'), relay.reshape(var_5210.astype('float32'), relay.shape_of(bop_5191))) # shape=(196,)
output = bop_5211
output2 = bop_5214
func_5217 = relay.Function([var_5180,var_5187,var_5210,], output)
mod['func_5217'] = func_5217
mod = relay.transform.InferType()(mod)
var_5218 = relay.var("var_5218", dtype = "uint64", shape = (196,))#candidate|5218|(196,)|var|uint64
var_5219 = relay.var("var_5219", dtype = "int64", shape = (196,))#candidate|5219|(196,)|var|int64
var_5220 = relay.var("var_5220", dtype = "uint32", shape = (196,))#candidate|5220|(196,)|var|uint32
output = func_5217(var_5218,var_5219,var_5220,)
func_5221 = relay.Function([var_5218,var_5219,var_5220,], output)
mutated_mod['func_5221'] = func_5221
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5245 = relay.var("var_5245", dtype = "float64", shape = (2, 4, 11))#candidate|5245|(2, 4, 11)|var|float64
var_5246 = relay.var("var_5246", dtype = "float64", shape = (2, 4, 11))#candidate|5246|(2, 4, 11)|var|float64
bop_5247 = relay.floor_mod(var_5245.astype('float64'), relay.reshape(var_5246.astype('float64'), relay.shape_of(var_5245))) # shape=(2, 4, 11)
func_3710_call = mod.get_global_var('func_3710')
func_3714_call = mutated_mod.get_global_var('func_3714')
var_5251 = relay.var("var_5251", dtype = "uint16", shape = (2, 168))#candidate|5251|(2, 168)|var|uint16
call_5250 = relay.TupleGetItem(func_3710_call(relay.reshape(var_5251.astype('uint16'), [7, 16, 3]), relay.reshape(var_5251.astype('uint16'), [7, 16, 3]), ), 0)
call_5252 = relay.TupleGetItem(func_3714_call(relay.reshape(var_5251.astype('uint16'), [7, 16, 3]), relay.reshape(var_5251.astype('uint16'), [7, 16, 3]), ), 0)
output = relay.Tuple([bop_5247,call_5250,var_5251,])
output2 = relay.Tuple([bop_5247,call_5252,var_5251,])
func_5259 = relay.Function([var_5245,var_5246,var_5251,], output)
mod['func_5259'] = func_5259
mod = relay.transform.InferType()(mod)
mutated_mod['func_5259'] = func_5259
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5259_call = mutated_mod.get_global_var('func_5259')
var_5261 = relay.var("var_5261", dtype = "float64", shape = (2, 4, 11))#candidate|5261|(2, 4, 11)|var|float64
var_5262 = relay.var("var_5262", dtype = "float64", shape = (2, 4, 11))#candidate|5262|(2, 4, 11)|var|float64
var_5263 = relay.var("var_5263", dtype = "uint16", shape = (2, 168))#candidate|5263|(2, 168)|var|uint16
call_5260 = func_5259_call(var_5261,var_5262,var_5263,)
output = call_5260
func_5264 = relay.Function([var_5261,var_5262,var_5263,], output)
mutated_mod['func_5264'] = func_5264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5280 = relay.var("var_5280", dtype = "float64", shape = (1, 4, 8))#candidate|5280|(1, 4, 8)|var|float64
uop_5281 = relay.rsqrt(var_5280.astype('float64')) # shape=(1, 4, 8)
output = relay.Tuple([uop_5281,])
output2 = relay.Tuple([uop_5281,])
func_5286 = relay.Function([var_5280,], output)
mod['func_5286'] = func_5286
mod = relay.transform.InferType()(mod)
mutated_mod['func_5286'] = func_5286
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5287 = relay.var("var_5287", dtype = "float64", shape = (1, 4, 8))#candidate|5287|(1, 4, 8)|var|float64
func_5286_call = mutated_mod.get_global_var('func_5286')
call_5288 = func_5286_call(var_5287)
output = call_5288
func_5289 = relay.Function([var_5287], output)
mutated_mod['func_5289'] = func_5289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_5297 = func_5028_call()
call_5298 = func_5028_call()
output = call_5297
output2 = call_5298
func_5302 = relay.Function([], output)
mod['func_5302'] = func_5302
mod = relay.transform.InferType()(mod)
output = func_5302()
func_5303 = relay.Function([], output)
mutated_mod['func_5303'] = func_5303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4841_call = mod.get_global_var('func_4841')
func_4843_call = mutated_mod.get_global_var('func_4843')
call_5368 = relay.TupleGetItem(func_4841_call(), 0)
call_5369 = relay.TupleGetItem(func_4843_call(), 0)
output = call_5368
output2 = call_5369
func_5378 = relay.Function([], output)
mod['func_5378'] = func_5378
mod = relay.transform.InferType()(mod)
output = func_5378()
func_5379 = relay.Function([], output)
mutated_mod['func_5379'] = func_5379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_5386 = relay.TupleGetItem(func_4392_call(), 3)
call_5387 = relay.TupleGetItem(func_4394_call(), 3)
output = call_5386
output2 = call_5387
func_5418 = relay.Function([], output)
mod['func_5418'] = func_5418
mod = relay.transform.InferType()(mod)
mutated_mod['func_5418'] = func_5418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5418_call = mutated_mod.get_global_var('func_5418')
call_5419 = func_5418_call()
output = call_5419
func_5420 = relay.Function([], output)
mutated_mod['func_5420'] = func_5420
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5447 = relay.var("var_5447", dtype = "float32", shape = (8, 15, 6))#candidate|5447|(8, 15, 6)|var|float32
uop_5448 = relay.sqrt(var_5447.astype('float32')) # shape=(8, 15, 6)
func_4803_call = mod.get_global_var('func_4803')
func_4804_call = mutated_mod.get_global_var('func_4804')
call_5452 = relay.TupleGetItem(func_4803_call(), 0)
call_5453 = relay.TupleGetItem(func_4804_call(), 0)
output = relay.Tuple([uop_5448,call_5452,])
output2 = relay.Tuple([uop_5448,call_5453,])
func_5457 = relay.Function([var_5447,], output)
mod['func_5457'] = func_5457
mod = relay.transform.InferType()(mod)
mutated_mod['func_5457'] = func_5457
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5458 = relay.var("var_5458", dtype = "float32", shape = (8, 15, 6))#candidate|5458|(8, 15, 6)|var|float32
func_5457_call = mutated_mod.get_global_var('func_5457')
call_5459 = func_5457_call(var_5458)
output = call_5459
func_5460 = relay.Function([var_5458], output)
mutated_mod['func_5460'] = func_5460
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5498 = relay.var("var_5498", dtype = "int16", shape = ())#candidate|5498|()|var|int16
const_5499 = relay.const([[[-9,-6],[-10,-4],[9,9],[-1,-4],[6,-2]],[[-2,9],[1,-8],[5,6],[2,7],[-6,2]],[[-6,-7],[1,-10],[1,-2],[-2,-6],[9,9]],[[1,-2],[-7,4],[9,1],[8,-10],[7,6]],[[3,5],[-10,-10],[7,5],[-7,1],[-5,9]],[[1,-9],[8,-8],[1,-5],[1,-10],[10,-10]],[[-1,5],[3,2],[-10,-1],[-3,-2],[2,-7]],[[3,7],[-3,4],[1,2],[-2,-10],[2,-10]],[[6,-3],[-2,1],[-4,-6],[2,10],[-4,-1]],[[-10,-7],[-2,7],[10,8],[9,-5],[6,-4]],[[4,-7],[5,2],[-2,2],[-7,-6],[5,-5]],[[-1,3],[4,-10],[5,3],[1,-8],[9,-6]],[[4,-5],[-9,4],[-6,-1],[1,6],[5,6]],[[-7,-1],[-10,7],[-8,2],[-2,-5],[-10,5]],[[7,3],[-3,3],[-5,7],[-9,4],[-5,1]],[[-3,7],[2,8],[-2,-9],[10,-7],[3,10]]], dtype = "int16")#candidate|5499|(16, 5, 2)|const|int16
bop_5500 = relay.bitwise_xor(var_5498.astype('int16'), const_5499.astype('int16')) # shape=(16, 5, 2)
output = bop_5500
output2 = bop_5500
func_5504 = relay.Function([var_5498,], output)
mod['func_5504'] = func_5504
mod = relay.transform.InferType()(mod)
var_5505 = relay.var("var_5505", dtype = "int16", shape = ())#candidate|5505|()|var|int16
output = func_5504(var_5505)
func_5506 = relay.Function([var_5505], output)
mutated_mod['func_5506'] = func_5506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5418_call = mod.get_global_var('func_5418')
func_5420_call = mutated_mod.get_global_var('func_5420')
call_5540 = func_5418_call()
call_5541 = func_5418_call()
func_4718_call = mod.get_global_var('func_4718')
func_4719_call = mutated_mod.get_global_var('func_4719')
call_5564 = relay.TupleGetItem(func_4718_call(), 0)
call_5565 = relay.TupleGetItem(func_4719_call(), 0)
uop_5569 = relay.tan(call_5564.astype('float64')) # shape=(8, 2, 5)
uop_5571 = relay.tan(call_5565.astype('float64')) # shape=(8, 2, 5)
uop_5578 = relay.log(uop_5569.astype('float32')) # shape=(8, 2, 5)
uop_5580 = relay.log(uop_5571.astype('float32')) # shape=(8, 2, 5)
func_3966_call = mod.get_global_var('func_3966')
func_3969_call = mutated_mod.get_global_var('func_3969')
const_5601 = relay.const([6.437923,3.029947,-1.167674,2.155294,-1.066045,5.757178,1.230885,-8.349736,2.768908,-4.297821,-5.319331,-0.221886,9.945128,9.586921,7.081959,-1.726342,3.953982,2.957308,-9.947690,-9.960640,-6.337308,4.806754,2.545564,2.115505,-9.834551,-4.685392,5.324637,6.423977,8.776355,1.014529,9.551937,-6.800609,-5.717262,7.144972,-0.807562,1.446565,8.568301,-5.860191,-2.552746,8.242965,-0.248000,1.905563,-9.661441,-8.368097,-3.628742,-7.882684,-6.165361,-2.495688,8.017686,1.351985,-8.163347,-5.391289,6.270993,-1.431178,-7.174670,-9.290304,0.090509,0.533977,-0.300135,5.758940,9.409209,6.181870,-2.155508,-4.462963], dtype = "float64")#candidate|5601|(64,)|const|float64
call_5600 = relay.TupleGetItem(func_3966_call(relay.reshape(const_5601.astype('float64'), [4, 4, 4])), 1)
call_5602 = relay.TupleGetItem(func_3969_call(relay.reshape(const_5601.astype('float64'), [4, 4, 4])), 1)
func_4135_call = mod.get_global_var('func_4135')
func_4139_call = mutated_mod.get_global_var('func_4139')
const_5604 = relay.const([-2,-2,5,9,2,1,-4,9,6,-5,4,-8,-7,6,9,-5,-10,-2,-7,-4,-8,10,8,7,5,-6,2,-6,8,4,5,-8,6,-2,1,-2,3,-3,1,6,2,7,-9,4,6,5,-9,10,5,8,10,-6,-10,-5,-1,-9,6,-6,2,10,-9,-1,10,-6,3,-10,4,7,9,6,-4,10,2,5,-7,4,-2,6,6,6,6,4,5,5,-5,1,-8,1,10,-6,3,-5,-6,-6,5,-4,7,2,-3,-6,-9,-10,-10,7,-9,7,4,6,4,-2,3,9,-8,-3,-7,-9,-8,3,4,-7,4,6,7,8,5,8,10,9,10,8,1,-6,-10,6,-1,-6,9,5,-3,5,6,5,3,-3,8,-2,1,-7,-9,3,-7,6,-3,10,-5,4,-10,-7,-5,-8,2,-1,8,-3,2,-6,7,5,-3,5,-3,1,-10,-6,9,-7,4,3,7,-10,2,-7,9,8,-10,2,-4,7,-1,8,-9,-10,-4,-8,9,-9,3,1,-2,4,1,-5,10,8,7,3,2,10,8,-4,-5,9,1,-9,-6,4,10,-2,-3,2,-6,-7,-10,-4,-4,-5,-3,8,4,-6,-2,-10,10,-3,-4,-3,1,1,-7,-10], dtype = "uint64")#candidate|5604|(240,)|const|uint64
var_5605 = relay.var("var_5605", dtype = "float32", shape = (1100,))#candidate|5605|(1100,)|var|float32
call_5603 = relay.TupleGetItem(func_4135_call(relay.reshape(const_5604.astype('uint64'), [1, 240]), relay.reshape(call_5540.astype('uint64'), []), relay.reshape(var_5605.astype('float32'), [1100,]), ), 6)
call_5606 = relay.TupleGetItem(func_4139_call(relay.reshape(const_5604.astype('uint64'), [1, 240]), relay.reshape(call_5540.astype('uint64'), []), relay.reshape(var_5605.astype('float32'), [1100,]), ), 6)
bop_5610 = relay.right_shift(uop_5569.astype('uint8'), relay.reshape(call_5564.astype('uint8'), relay.shape_of(uop_5569))) # shape=(8, 2, 5)
bop_5613 = relay.right_shift(uop_5571.astype('uint8'), relay.reshape(call_5565.astype('uint8'), relay.shape_of(uop_5571))) # shape=(8, 2, 5)
var_5619 = relay.var("var_5619", dtype = "float64", shape = (8, 2, 5))#candidate|5619|(8, 2, 5)|var|float64
bop_5620 = relay.logical_and(uop_5569.astype('bool'), relay.reshape(var_5619.astype('bool'), relay.shape_of(uop_5569))) # shape=(8, 2, 5)
bop_5623 = relay.logical_and(uop_5571.astype('bool'), relay.reshape(var_5619.astype('bool'), relay.shape_of(uop_5571))) # shape=(8, 2, 5)
bop_5624 = relay.less_equal(bop_5610.astype('bool'), relay.reshape(var_5619.astype('bool'), relay.shape_of(bop_5610))) # shape=(8, 2, 5)
bop_5627 = relay.less_equal(bop_5613.astype('bool'), relay.reshape(var_5619.astype('bool'), relay.shape_of(bop_5613))) # shape=(8, 2, 5)
bop_5628 = relay.not_equal(uop_5578.astype('bool'), relay.reshape(bop_5610.astype('bool'), relay.shape_of(uop_5578))) # shape=(8, 2, 5)
bop_5631 = relay.not_equal(uop_5580.astype('bool'), relay.reshape(bop_5613.astype('bool'), relay.shape_of(uop_5580))) # shape=(8, 2, 5)
output = relay.Tuple([call_5540,call_5600,const_5601,call_5603,const_5604,var_5605,bop_5620,bop_5624,bop_5628,])
output2 = relay.Tuple([call_5541,call_5602,const_5601,call_5606,const_5604,var_5605,bop_5623,bop_5627,bop_5631,])
func_5642 = relay.Function([var_5605,var_5619,], output)
mod['func_5642'] = func_5642
mod = relay.transform.InferType()(mod)
var_5643 = relay.var("var_5643", dtype = "float32", shape = (1100,))#candidate|5643|(1100,)|var|float32
var_5644 = relay.var("var_5644", dtype = "float64", shape = (8, 2, 5))#candidate|5644|(8, 2, 5)|var|float64
output = func_5642(var_5643,var_5644,)
func_5645 = relay.Function([var_5643,var_5644,], output)
mutated_mod['func_5645'] = func_5645
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5136_call = mod.get_global_var('func_5136')
func_5137_call = mutated_mod.get_global_var('func_5137')
call_5660 = relay.TupleGetItem(func_5136_call(), 1)
call_5661 = relay.TupleGetItem(func_5137_call(), 1)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_5662 = relay.TupleGetItem(func_4871_call(), 0)
call_5663 = relay.TupleGetItem(func_4873_call(), 0)
func_5642_call = mod.get_global_var('func_5642')
func_5645_call = mutated_mod.get_global_var('func_5645')
const_5670 = relay.const([7.402662,-2.603242,2.488967,-6.477583,-1.002902,-4.256698,3.712117,4.845945,6.016567,-9.021587,3.844679,-8.600992,-9.634514,4.940156,5.718831,8.391859,-6.153700,0.474283,9.074467,2.666094,1.692351,0.122012,-6.888855,9.144528,3.121772,-6.366592,-8.013015,0.288507,1.648862,-4.583966,0.304002,4.286706,8.012637,4.197976,-8.183396,3.567387,-6.193359,-5.473719,4.335839,-7.587125,-7.144490,4.676586,-4.809220,1.958765,-7.914107,-6.616547,8.190895,4.671726,-7.706352,-1.729908,-0.232275,-6.151410,-4.771619,9.342907,-7.786659,-4.971023,3.044385,8.642698,-4.651844,0.161474,-2.400668,-4.612748,5.393150,-7.785584,-2.614383,-8.351915,-1.851048,8.959075,-9.714394,5.140360,4.905939,8.705962,0.096436,-8.423008,3.941740,-0.109849,3.361888,3.058570,1.105320,-7.502262,-4.418236,-8.592349,6.851473,3.289423,-6.048234,-5.024854,8.227394,-3.453472,-9.435120,-5.900027,-6.532507,7.376000,-0.286829,-7.578182,-1.926800,7.194603,-7.608284,-7.363226,-3.923116,9.337789,-5.275378,-8.395980,3.981626,-9.136695,8.672000,3.282828,-0.944209,1.010703,9.706356,-0.439843,-8.866980,5.038623,5.299870,-5.363731,5.147870,-8.657522,6.651643,6.186511,-7.233776,-2.804062,3.091997,1.710127,-6.001203,-9.558937,5.288682,4.166238,-0.056273,-3.254841,-4.648279,1.219532,-6.822679,4.446907,-9.859733,-4.989592,8.407315,-5.526558,-5.283752,-7.741536,-2.540216,-4.372650,0.737691,1.544249,-8.100868,8.214646,-3.180672,1.530165,-8.808448,-5.629300,3.098634,3.479224,6.068876,1.841303,-2.981270,-7.218140,-2.434252,-7.588866,3.943508,-4.502675,4.369104,-5.453738,-0.438188,-6.583235,5.553465,-6.580393,4.675892,3.719039,3.137492,-3.085477,-8.073589,9.258167,6.168832,-2.753455,8.775646,2.304892,-0.531967,9.395864,0.241136,7.301152,-6.285673,7.872859,-5.473670,4.610138,-4.946866,3.268427,-5.514461,2.152755,-7.391546,-0.610031,-3.831026,-0.798714,-9.044859,-4.974474,9.685929,-3.583687,5.982110,1.444984,-6.776932,6.707521,-9.449032,8.356912,8.635534,-9.362384,-8.532372,-0.533219,-7.340645,2.120101,-6.225855,-8.852698,9.693051,3.816130,6.919672,-5.115593,0.203826,-2.741093,-0.681178,1.437776,-5.736016,0.202816,-5.692434,-1.013452,-4.530572,1.365020,1.456694,-7.781395,-8.057747,1.045816,-3.902136,9.552016,5.046605,0.669758,7.727050,-0.575305,3.760415,-8.722708,7.567999,-1.280595,-7.634034,-3.713461,-7.580538,9.307103,-7.866219,-2.675359,-8.343241,6.634407,0.373307,-2.186344,8.641719,-1.115356,-3.823516,-0.189534,2.424831,-1.024931,7.240998,6.152737,3.620525,-0.957792,4.707141,9.986317,1.838968,-0.773517,5.255379,6.262900,8.261334,7.657845,1.152326,9.780839,9.366722,-2.223473,-4.935536,-2.372223,-2.003702,7.702473,6.167332,-3.433765,2.991277,5.202198,8.786516,0.758703,-2.819732,-8.501552,3.681326,7.964574,7.099622,4.224116,5.733605,-5.140821,-1.025243,-8.848937,-5.593533,-3.957855,1.728258,-5.668286,9.002236,5.729762,4.328574,8.947123,5.895034,8.663492,-8.726953,-5.433838,-5.927558,-0.820451,-2.738408,-0.422372,7.989748,5.094087,-8.662876,5.041239,0.587824,6.711375,-5.957976,0.657355,5.879550,6.321087,8.043538,-2.943583,-6.213250,2.329960,7.476941,1.140811,-0.940069,4.526202,-6.245550,-1.606712,8.337686,-8.282974,-9.736750,6.345167,-9.186058,-8.755427,-4.896847,0.568814,1.341798,8.100418,-8.897086,4.357981,1.838675,1.650184,8.899492,-5.464457,-1.748838,-4.193274,-0.793081,-1.693683,-8.290382,5.470793,6.770739,3.476672,1.620070,0.193067,5.480280,-3.979540,2.728407,7.337017,-7.276798,7.484999,-0.615076,8.350272,1.987698,-5.212253,-2.936031,-4.732312,-3.564014,-6.038596,5.933775,-6.470570,-8.357561,3.195191,-7.007939,-4.251317,-2.070299,4.803717,-6.718995,-5.470775,9.936142,9.697384,-2.350467,5.156184,-1.978875,-0.741134,-1.596759,-4.113758,6.812429,-0.476238,-9.020643,-4.639349,8.245882,-4.444456,1.744016,7.937487,0.028982,-2.280140,9.745420,-4.604134,-5.402875,0.739117,2.481859,9.035728,1.534807,6.847915,8.980618,2.710367,3.568536,-4.338762,-5.481495,3.738001,-2.972872,6.616292,-5.991057,2.241584,-4.788891,0.423416,4.037839,-2.799371,-3.535004,-8.817384,-4.283870,-2.964171,7.925306,-0.942671,2.537915,7.164375,1.154896,1.915106,7.749543,-3.865923,1.531348,7.573994,5.256825,3.801428,5.290987,7.946245,4.824259,-6.212171,-5.031771,-7.585503,-6.301298,2.440645,-8.214181,4.389804,-4.154464,5.498139,9.662967,-1.837291,1.025146,2.151882,7.446105,-7.468046,-8.739002,-9.682289,2.934209,-0.446274,-7.903751,6.202826,-4.580462,-1.663452,0.182446,-5.840083,5.305035,2.608149,7.173693,9.063424,2.925044,3.578335,-6.023561,-2.813894,7.334326,-7.305870,-4.931695,-1.981414,-5.645806,7.090913,3.580390,4.423242,-0.794442,5.365679,2.502275,4.607692,-7.896911,-3.268778,-0.599272,-8.230865,-7.067876,7.830469,-6.114561,6.933714,6.883925,-8.591970,0.791410,6.857727,-7.958571,7.140822,8.960626,-6.124331,3.286930,7.879543,3.947626,0.992224,-3.916563,9.535605,9.053730,2.576481,3.571262,6.732312,1.373327,9.589061,2.889040,0.169778,7.203477,-9.580747,7.784842,-9.946698,4.036359,-5.816270,-3.281205,-9.035768,-7.606947,-8.700900,-0.383794,-7.036945,-3.227675,5.316623,-4.681567,4.307640,0.993980,7.845762,7.328254,0.649763,7.955678,-1.441757,7.689467,3.272775,-6.932196,-8.144197,5.237660,0.365612,-1.451554,5.896416,1.501979,-0.922623,-5.790723,9.636890,3.230705,-2.719380,-5.642909,-1.288383,-2.394409,-1.989997,-3.573027,7.171627,7.069940,2.078155,6.765135,6.903917,0.074985,4.207983,5.420789,6.692010,-4.108586,7.503955,-8.200191,-5.747244,-3.251829,-5.390757,8.140637,-4.422747,-7.572789,-6.905602,8.269762,-0.200614,9.503709,-0.081351,3.389154,4.043598,-2.961551,-8.200394,7.878643,6.931885,9.672441,-6.873719,0.189196,-9.925347,-9.565833,3.364616,-3.841197,9.765280,-9.714245,-6.496284,0.216314,9.946346,-0.260870,8.931143,-8.826380,6.845183,-5.747500,7.619037,8.660635,4.022333,-2.051752,3.996628,-6.236547,9.290719,-3.936589,-5.299064,0.670873,6.447028,-1.380841,1.430677,4.994265,-3.207542,-5.217610,6.851580,0.051109,-4.229488,-6.517895,-7.404044,-3.122754,4.843318,9.883666,-6.299632,0.338669,6.519697,-9.780796,-1.055453,3.162484,5.090829,-3.907903,7.997034,7.273083,-0.426682,1.945362,9.209162,-0.667306,6.431628,-7.748071,-7.955851,9.819166,6.944280,1.040584,-5.599893,5.189629,-3.826018,-6.174208,6.902653,1.449646,8.400808,9.208162,-2.967496,0.079179,3.795108,-1.583356,2.114496,7.598096,5.676069,3.125884,-4.826872,-6.010490,-0.642049,-1.501436,-9.925635,1.242873,5.101477,-4.588426,-4.944740,8.633223,-4.694901,-9.311039,3.930220,-7.699150,-8.690496,-9.316693,-6.337822,8.240329,-4.508312,9.507678,-3.321654,-9.575624,6.110259,9.197085,7.940328,8.652310,-7.990862,3.268246,-1.848115,2.998918,6.977444,5.219669,-2.138975,4.294764,-4.122070,0.526137,4.721870,-0.589214,9.402020,7.027724,-7.734073,-1.044595,-3.444182,4.833333,9.634043,8.659116,-7.223833,6.809394,2.482154,8.827599,8.118222,-4.599149,9.959339,7.942279,4.791916,3.643511,9.301913,-6.026974,5.391868,-2.994999,-1.319685,-1.892444,-7.427691,6.205184,-0.226261,-4.045424,-5.362156,-9.182775,2.938326,-1.344977,-2.685587,3.243351,4.355969,5.150523,5.345410,6.881284,7.866504,-1.463746,4.734853,-9.919005,2.262062,1.373684,3.485680,5.214169,6.400389,9.604536,3.494686,-0.052903,3.802111,5.455410,9.481444,-8.169417,-7.979378,3.430827,3.501118,1.457376,-2.334615,-2.673890,4.102554,-1.124331,5.274719,-8.932969,-7.537132,7.318058,8.238451,-7.301004,8.571531,5.873503,-9.750382,-7.038403,-8.503090,-4.109457,-6.893836,3.230278,-8.313636,0.164902,7.543976,-5.245400,-2.413438,0.155486,-9.806492,-5.892392,2.960432,-6.445442,-2.128423,8.698248,-5.802780,0.761681,-8.921802,-8.874817,4.115495,-5.773587,-7.621478,-2.548757,-7.523383,-3.065950,-1.890273,-9.622365,-0.738876,2.535776,6.146361,-7.568180,-1.484287,4.586859,-1.534277,1.580929,8.368162,-5.444817,-3.332941,-4.679327,8.818254,6.201822,0.178231,3.442661,-9.480907,5.391348,5.995000,-8.664211,2.820228,-2.337284,2.587363,9.940498,3.676588,-9.471359,6.442056,-8.698515,2.040497,-8.709700,8.179364,1.100738,-1.809855,-7.214220,-8.155872,8.707384,-7.868856,6.999198,2.142400,-3.281202,-2.537143,-8.539663,9.014807,-8.778855,-1.003380,4.184479,-3.219304,-8.455951,0.403164,-9.071426,3.989364,-0.805556,4.893182,1.854245,-7.661830,0.479924,9.068072,-2.124613,-6.592165,9.824557,1.295742,1.025648,2.834411,-1.035407,-8.883486,-5.708508,-2.381293,6.100004,-7.120361,-5.305575,-9.803811,-6.952599,3.043541,-5.585161,9.472598,6.043865,-3.820253,4.555239,-2.025668,9.855787,-0.992651,-3.034984,-5.962596,3.705540,-9.647602,1.724317,3.437226,-6.148694,0.134931,5.466431,6.733772,6.244100,1.128690,9.733876,0.343813,-4.089964,5.688363,-5.674427,-9.268371,-7.948190,-6.788946,8.488393,3.973056,-4.536754,-0.452464,-1.359209,-7.305741,4.928639,-7.473775,6.759816,3.498655,8.890276,-6.077418,-4.044637,2.641108,-8.826282,4.326837,-7.697343,1.516347,9.381582,-4.056359,7.649054,8.397741,-0.618528,-3.270109,5.456831,9.246439,-1.020450,8.218878,-7.728260,2.135194,-2.938710,-9.958710,-8.848055,6.593185,3.632796,2.526937,2.584889,5.645918,-3.881904,4.369893,-2.598635,-0.208262,8.817514,6.124298,9.980478,-4.946056,5.319769,-9.409357,-6.609829,2.950138,5.902412,2.652798,-3.808899,-6.674692,-0.729733,-7.119120,-1.672299,9.969277,-5.161635,6.584007,5.192783,6.257193,-3.887010,-1.785795,-7.541312,-9.050070,-2.119685,-6.737306,-3.042597,3.017015,-3.324755,4.518364,3.424331,-7.340780,-9.672518,7.426222,4.014419,-2.005313,-3.103352,8.415252,6.924022,-8.551512,7.230149,-9.891317,7.667076,-0.561703,9.576794,-8.707331,-9.256980,0.995337,-6.518049,-7.897822,1.826226,0.578303,-0.893988,-6.846549,-4.445668,9.177038,8.026980,0.009681,-4.858963,3.530383,-3.007817,-0.798358,-8.827471,0.783734,-7.059983,5.262724,-1.556121,0.006726,3.668436,-8.588281,-4.311863,5.077793,0.820801,-7.210808,-4.748009,-9.253726,4.118194,2.212783,-2.738139,-5.260213,-6.259526,-9.356703,-6.198090,2.039232,-6.790580,7.133604,-8.247712,-2.045958,8.587714,3.035053,-9.566677,-7.726820,-7.197549,-1.011101,-9.436614,1.929467,-1.378399,-3.893759,1.990402,-6.540674,6.112036,-1.108387,-6.942519,-8.872748,5.411445,4.098141,3.201464,9.399106,6.879743,-8.154234,-9.626701,-5.988978,8.083805,5.338822,2.426183,-1.992199,1.284321,-1.478983,-0.414156,4.701498,-1.781079,7.550959,7.564450,0.910723,-9.247618,-8.768931,0.842056,5.039236,9.504925,5.692506,-3.250783,-3.970774,-2.320458,4.138775,6.851110,-9.260920,1.740787,0.570784,-5.586929,7.323533,-3.598073,8.862504,1.323156,-0.835091,5.415574,9.192370,-9.284401,4.946633,-9.837872,7.186176,9.180001,2.212247,1.940251,9.595533,7.912752,7.113957,2.213310,3.944312,7.136598,5.107210,9.281656,1.439160,-5.546140,-2.003478], dtype = "float32")#candidate|5670|(1100,)|const|float32
const_5671 = relay.const([9.021627,-4.670739,-6.533458,-6.413612,-7.447053,1.864957,-4.709332,-9.739386,5.568868,-7.392663,-8.052676,-1.382111,-2.066050,1.776309,-3.185202,-4.521300,5.183831,-4.034687,7.154918,2.854446,-6.189147,0.679499,3.522244,6.677543,5.714091,4.235387,1.881475,5.332781,-9.609066,2.038950,-8.345561,-9.884293,-1.202260,-8.448543,3.307274,-7.252144,-3.200046,-5.771281,1.913340,-7.367116,9.805278,8.178813,9.074346,-2.330375,7.511782,-8.023811,-4.962895,-5.152057,-3.272456,-6.288074,-4.873100,1.948766,-8.003862,4.279677,7.210948,-9.208074,9.108034,3.458775,-1.048235,2.258254,-8.896965,-9.406764,-8.482647,4.408121,3.481839,7.696028,-2.504522,-6.128422,-5.433141,5.897193,-5.403113,1.348376,1.724654,-3.874703,-9.382401,4.846102,-7.871780,8.650574,-7.743568,3.215260], dtype = "float64")#candidate|5671|(80,)|const|float64
call_5669 = relay.TupleGetItem(func_5642_call(relay.reshape(const_5670.astype('float32'), [1100,]), relay.reshape(const_5671.astype('float64'), [8, 2, 5]), ), 0)
call_5672 = relay.TupleGetItem(func_5645_call(relay.reshape(const_5670.astype('float32'), [1100,]), relay.reshape(const_5671.astype('float64'), [8, 2, 5]), ), 0)
output = relay.Tuple([call_5660,call_5662,call_5669,const_5670,const_5671,])
output2 = relay.Tuple([call_5661,call_5663,call_5672,const_5670,const_5671,])
func_5683 = relay.Function([], output)
mod['func_5683'] = func_5683
mod = relay.transform.InferType()(mod)
mutated_mod['func_5683'] = func_5683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5683_call = mutated_mod.get_global_var('func_5683')
call_5684 = func_5683_call()
output = call_5684
func_5685 = relay.Function([], output)
mutated_mod['func_5685'] = func_5685
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5732 = relay.var("var_5732", dtype = "uint64", shape = (7, 15, 11))#candidate|5732|(7, 15, 11)|var|uint64
var_5733 = relay.var("var_5733", dtype = "uint64", shape = (7, 15, 11))#candidate|5733|(7, 15, 11)|var|uint64
bop_5734 = relay.right_shift(var_5732.astype('uint64'), relay.reshape(var_5733.astype('uint64'), relay.shape_of(var_5732))) # shape=(7, 15, 11)
uop_5739 = relay.acosh(var_5732.astype('float64')) # shape=(7, 15, 11)
func_4701_call = mod.get_global_var('func_4701')
func_4703_call = mutated_mod.get_global_var('func_4703')
const_5744 = relay.const([2,-3,-5,-2,9,-2,-3,3,-6,-4,5,8,6,-7,3,-8,5,-5,-2,-3,5,9,-4,-8,5,7,-1,-8,-4,-9,-10,-3,2,7,-7,3,6,7,-4,-10,6,-3,-4,-3,7,-7,-3,-1,-8,-7,9,-6,1,4,-8,-8,-2,3,-1,6,10,-4,4,6,-4,-7,-4,-9,-6,-4,-9,-3,3,-9,-2,-2,-6,5,-4,4,-7,-2,-5,8,3,-8,-4,5,6,-2,7,-3,2,5,-1,5,-1,9,-7,-5,-8,-5,5,10,4,-2,-5,5,4,-5,-10,-5,7,-5,2,7,7,4,3,-3,-5,-9,-9,10,-6,-10,-7,-7,8,1,6,-2,3,4,10,-3,2,5,-6,-5,-2,-9,10,3,10,10,3,6,9,-2,-7,4,-6,-1,8,5,2,8,1,-2,7,-6,5,8,4,-3,-6,-10,-9,-7,8,-6,-7,2,8,-1,-5,7,9,-4,-7,3,7,8,-4,-5,-8,-3,-5,-4,-1,8,-10,-8,10,1], dtype = "uint64")#candidate|5744|(196,)|const|uint64
call_5743 = relay.TupleGetItem(func_4701_call(relay.reshape(const_5744.astype('uint64'), [196,])), 0)
call_5745 = relay.TupleGetItem(func_4703_call(relay.reshape(const_5744.astype('uint64'), [196,])), 0)
bop_5746 = relay.divide(uop_5739.astype('float64'), relay.reshape(var_5732.astype('float64'), relay.shape_of(uop_5739))) # shape=(7, 15, 11)
output = relay.Tuple([bop_5734,call_5743,const_5744,bop_5746,])
output2 = relay.Tuple([bop_5734,call_5745,const_5744,bop_5746,])
func_5757 = relay.Function([var_5732,var_5733,], output)
mod['func_5757'] = func_5757
mod = relay.transform.InferType()(mod)
var_5758 = relay.var("var_5758", dtype = "uint64", shape = (7, 15, 11))#candidate|5758|(7, 15, 11)|var|uint64
var_5759 = relay.var("var_5759", dtype = "uint64", shape = (7, 15, 11))#candidate|5759|(7, 15, 11)|var|uint64
output = func_5757(var_5758,var_5759,)
func_5760 = relay.Function([var_5758,var_5759,], output)
mutated_mod['func_5760'] = func_5760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5302_call = mod.get_global_var('func_5302')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_5776 = func_5302_call()
call_5777 = func_5302_call()
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_5795 = relay.TupleGetItem(func_4871_call(), 0)
call_5796 = relay.TupleGetItem(func_4873_call(), 0)
output = relay.Tuple([call_5776,call_5795,])
output2 = relay.Tuple([call_5777,call_5796,])
func_5798 = relay.Function([], output)
mod['func_5798'] = func_5798
mod = relay.transform.InferType()(mod)
mutated_mod['func_5798'] = func_5798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5798_call = mutated_mod.get_global_var('func_5798')
call_5799 = func_5798_call()
output = call_5799
func_5800 = relay.Function([], output)
mutated_mod['func_5800'] = func_5800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4215_call = mod.get_global_var('func_4215')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_5854 = func_4215_call()
call_5855 = func_4215_call()
uop_5858 = relay.exp(call_5854.astype('float32')) # shape=(14, 2, 7)
uop_5860 = relay.exp(call_5855.astype('float32')) # shape=(14, 2, 7)
output = uop_5858
output2 = uop_5860
func_5863 = relay.Function([], output)
mod['func_5863'] = func_5863
mod = relay.transform.InferType()(mod)
output = func_5863()
func_5864 = relay.Function([], output)
mutated_mod['func_5864'] = func_5864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4254_call = mod.get_global_var('func_4254')
func_4256_call = mutated_mod.get_global_var('func_4256')
call_5870 = func_4254_call()
call_5871 = func_4254_call()
output = relay.Tuple([call_5870,])
output2 = relay.Tuple([call_5871,])
func_5872 = relay.Function([], output)
mod['func_5872'] = func_5872
mod = relay.transform.InferType()(mod)
mutated_mod['func_5872'] = func_5872
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mutated_mod.get_global_var('func_5872')
call_5873 = func_5872_call()
output = call_5873
func_5874 = relay.Function([], output)
mutated_mod['func_5874'] = func_5874
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_5884 = func_5028_call()
call_5885 = func_5028_call()
output = call_5884
output2 = call_5885
func_5899 = relay.Function([], output)
mod['func_5899'] = func_5899
mod = relay.transform.InferType()(mod)
mutated_mod['func_5899'] = func_5899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mutated_mod.get_global_var('func_5899')
call_5900 = func_5899_call()
output = call_5900
func_5901 = relay.Function([], output)
mutated_mod['func_5901'] = func_5901
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5931 = relay.var("var_5931", dtype = "float64", shape = (12, 8, 11))#candidate|5931|(12, 8, 11)|var|float64
const_5932 = relay.const([[[-3.718997,-8.323145,-9.837889,1.078218,4.626076,7.162867,6.801706,-4.250096,6.413356,-0.088954,-0.107628],[8.497985,-9.235964,8.890659,-8.713499,5.956147,-0.697952,1.005810,-1.935738,5.538920,4.190739,0.677073],[7.453550,-6.145975,7.579467,-6.516875,4.032416,-1.757359,-2.143033,-4.000857,-6.818370,9.127077,-9.849319],[9.932039,-9.681209,-4.253384,-9.260887,-9.950336,2.692079,-9.528504,3.216112,-7.187782,-9.338989,-3.017082],[-5.646478,0.843281,5.463445,-0.554143,-3.981774,-2.602676,-5.834049,-7.885708,-9.396662,-6.384369,0.241548],[-6.506627,7.674488,1.723248,1.088164,5.483879,8.477303,-7.465220,6.716667,-4.086341,-9.413152,-1.365001],[1.932898,6.424992,-8.297446,7.025432,-3.758113,-3.939242,5.397855,-5.678914,-4.312840,-5.267258,-1.401441],[-1.728279,1.117533,6.071765,1.296353,8.241674,7.443603,-5.687186,-7.926055,4.600134,2.186783,1.716118]],[[-5.635669,5.372765,5.139875,-6.670294,-5.365473,9.364443,8.733777,9.836943,3.888133,7.924124,-9.877177],[-8.519821,3.418756,3.468106,6.149043,9.352278,-8.743158,-9.158948,3.616261,-0.619615,9.604856,7.773102],[-9.743046,2.750102,3.734819,-0.112742,-8.483167,7.439326,2.121942,-6.384268,4.043611,-1.804611,-2.177768],[4.284357,3.658383,8.610286,5.094213,3.592740,-8.259923,0.997599,4.865053,6.872862,-8.279762,3.396631],[2.830669,0.905328,-9.625789,3.155026,-5.570347,-7.652236,-4.647942,2.208655,-6.405779,1.232816,3.010889],[4.414787,4.757081,6.482687,9.523499,0.397998,-7.928239,6.048695,-5.634460,-4.380361,1.184214,-6.432329],[-0.010961,6.670983,-9.597428,1.274150,-4.436832,-7.022733,1.989304,5.884964,-7.934953,-6.259037,9.758545],[3.768254,-1.481902,4.182980,-3.861141,1.106257,9.969441,-6.935708,1.223097,5.378482,-5.988617,5.802574]],[[6.661774,-3.678335,3.310192,6.743014,-7.453343,-5.346793,-5.161179,-3.170345,0.966296,8.804524,-7.178446],[-2.400508,-8.000102,9.133550,0.549564,-4.237163,-2.151547,3.367042,1.647593,-6.641393,2.159938,-9.407934],[-5.832998,5.096193,-8.574971,-8.474461,-8.583691,0.774861,4.097624,9.224526,1.957616,2.836831,-8.383369],[-1.844446,8.649638,7.856788,4.724952,-2.335025,-5.924512,-6.990102,7.349735,2.980946,3.384183,-4.677044],[-3.048583,-5.108398,6.732182,9.504582,-1.800790,-3.890652,-4.476675,-5.700072,2.573540,-7.683268,-5.494119],[1.430758,5.095512,6.234962,1.077649,5.870012,5.969556,0.924792,-6.751360,-0.455064,-9.048077,-2.518543],[-7.389090,1.974240,-0.888927,8.387459,-9.533327,-9.763441,-8.610226,-9.770421,1.049309,8.081644,0.670875],[8.272314,5.946991,-3.639001,-3.601560,-6.666706,-9.767484,6.535236,6.257458,6.925663,4.900758,-1.009246]],[[-3.405174,1.171009,-7.253134,-8.449990,0.052172,5.284869,-4.817561,1.064621,6.545287,4.731031,9.337212],[-6.847532,-2.736319,-5.838709,7.630572,8.483034,6.700317,7.467666,5.955993,-4.406004,3.975668,7.080116],[2.357069,2.520289,-8.072573,-5.675007,3.699878,5.620677,9.977464,0.896705,-0.011658,-4.541845,6.286722],[6.152497,5.995954,6.449849,-7.832497,-0.982954,9.689830,-0.596951,7.987870,7.518066,8.215985,-7.377413],[-5.791364,4.736917,-4.626343,4.390793,9.938015,-6.058085,-7.461085,2.817797,-8.837901,-7.669669,0.738751],[3.142151,-1.699967,3.077823,4.070382,-7.604091,0.163252,-8.040038,9.370572,9.146658,9.351674,8.286174],[-7.936048,-3.087103,5.792788,-8.161733,0.358611,1.306340,9.730453,0.978508,-8.663292,-5.429114,2.049659],[0.826521,-2.229637,7.292531,-2.617422,1.386905,4.204167,0.771314,0.962159,-5.122886,2.813757,-8.003325]],[[-5.422190,-2.889526,1.032312,5.899179,4.496017,5.035418,9.635206,4.496270,5.737414,-6.586849,-2.759530],[1.163515,-6.376632,-5.745708,4.854083,-8.409404,-5.273071,-8.428965,3.264207,-7.926745,-9.172621,5.723917],[-8.116902,0.885431,5.025066,5.893396,1.183972,9.815604,-9.894734,-0.252451,-2.013421,8.894346,1.197828],[-0.880403,3.542919,3.921654,-3.427257,-2.344774,-5.370280,7.523972,0.115147,8.898160,6.353192,-2.102214],[5.803131,-8.538648,0.699967,-7.169974,8.090789,-5.851374,-8.863749,8.407723,-5.893890,2.173104,4.034501],[-0.956925,6.975986,-5.630053,6.154706,-0.201016,4.896189,-7.355482,6.178768,0.472690,-5.561903,0.566740],[7.813578,3.657566,-1.052106,-0.577288,1.625730,6.608374,1.489872,-4.718743,-7.984640,4.097682,3.606397],[6.503547,-0.171042,6.097343,-4.696603,4.983002,9.410814,2.987100,-4.943422,-2.492287,-1.734982,-9.498840]],[[5.767147,-2.156146,-4.295805,7.966336,-3.941179,-1.020876,3.454325,2.166131,-4.671983,2.295679,6.584917],[-5.791363,8.905633,-6.097731,-1.024307,0.005563,9.597620,9.079617,7.624269,9.760798,2.907334,-9.421388],[9.949473,-4.072390,7.190842,-8.020202,-8.688097,-5.170061,4.637304,-4.329265,3.320029,8.923100,6.762746],[-2.324860,7.731454,-4.548982,2.407222,1.377891,-0.056805,0.265259,9.978871,0.198846,-8.774146,9.051042],[-4.975738,0.351134,3.320818,-1.209778,7.965959,2.956850,-4.222187,-6.810492,5.529748,-1.756672,6.867779],[2.162488,7.839154,8.548409,-9.353777,7.094412,-8.821331,-7.075249,6.175360,-5.300374,-1.458564,6.140960],[-0.145221,-4.645604,2.389374,3.569147,-0.406999,-9.157566,1.659667,1.695294,-4.948889,-1.848187,4.404851],[4.140380,5.215375,-9.801761,4.248120,-2.497076,0.746821,6.344939,-8.058352,4.776993,8.920528,-8.594593]],[[4.499736,-8.967440,0.473574,-0.818615,-2.671189,4.912968,-5.334514,3.374395,-5.173139,3.647322,-7.225448],[-0.863077,1.642120,-7.198842,0.439966,-3.346634,-4.545392,2.407084,3.029859,5.655577,9.583329,-6.982861],[-6.616029,5.778820,3.176819,-5.587174,-6.822624,-0.590291,-0.610036,-0.423918,-1.510391,2.652446,-6.773137],[-1.376298,-5.902399,4.882869,-5.528524,7.153888,1.305028,7.566920,8.063778,-7.151245,4.456009,-7.577238],[2.901889,5.314959,0.001367,9.234265,4.503298,0.424091,2.069139,7.859696,-8.771290,-6.331018,-0.115460],[8.421624,8.031716,5.295839,-4.697562,-1.967667,-4.340257,3.951776,-1.495274,5.744784,-1.344444,-6.011329],[3.920485,-0.759620,-3.862838,2.916422,-1.460078,4.666813,5.563612,-8.738211,-7.440644,4.978824,1.475030],[-1.532506,5.448294,2.089087,-2.783322,5.570241,-7.849841,-8.083175,-0.976407,4.727919,-3.326138,-4.994630]],[[1.882845,2.772520,-2.677304,-7.262822,-7.766243,6.824623,0.113297,0.635489,-4.696429,7.624936,-3.050467],[-2.861258,-0.227042,-3.498376,-3.469338,-2.187895,6.109437,6.549205,-1.233580,8.791955,-5.419568,4.439866],[-5.300872,5.234285,1.164540,0.999337,-8.835234,8.145818,0.482830,7.300993,-8.288018,8.978450,-2.704956],[6.933107,-8.011825,3.503888,-8.909210,-7.285767,7.103110,0.905304,5.912529,1.090156,-5.408444,-1.945470],[-6.471429,5.014421,4.377520,-3.778499,8.279840,-2.334527,8.662623,-6.927497,-6.641551,-0.021259,1.019324],[2.244621,-4.579725,-7.616428,4.600065,-7.338819,5.333463,-6.607141,-1.521730,-2.349162,2.491981,2.913897],[-5.587754,-7.375481,3.634374,-2.357521,-5.762580,1.891312,-6.528935,-9.222140,-1.743188,7.126317,-4.666821],[-1.796727,8.266400,5.235014,5.924127,7.476261,-0.856182,8.286494,-3.350939,-6.919004,6.175536,7.322685]],[[-2.148691,6.766432,-0.277290,-0.663447,-6.348216,2.280118,9.573870,-1.446926,5.726090,-4.884848,3.634193],[6.728551,4.938167,3.638261,0.542816,1.977089,-4.354341,-9.285754,8.450865,5.102999,9.048650,8.452363],[0.499724,-0.107489,3.541725,9.020047,-9.456482,-8.664272,-3.808611,-1.363118,-4.592799,4.404947,-6.522858],[9.715275,-9.867585,4.222266,8.579225,-0.431265,8.562827,-7.820995,7.214919,4.890041,-9.031269,-0.629926],[1.872237,7.083295,-6.593358,-8.747864,-7.734794,-2.419552,3.462868,0.880632,3.083343,4.201986,-4.478182],[3.059159,9.939424,7.396896,0.394604,8.752109,-7.716183,-2.768285,2.205508,3.375617,5.975130,0.995691],[6.439998,9.166103,-4.518730,1.348166,-4.568521,9.502307,-8.815232,-5.377644,-3.362251,-6.974068,-4.201022],[3.840259,-7.135027,6.191600,-2.332025,-2.769187,2.705099,-8.567439,-1.486665,-7.299209,6.699608,0.242938]],[[-8.522901,7.451713,2.576855,6.571536,-5.147593,5.635938,8.156390,-8.316934,9.140859,-7.317774,0.737462],[8.440043,-5.452640,-1.304058,0.300873,1.780392,3.556903,-2.689358,8.808725,-4.457107,-0.791527,-5.494185],[5.657156,3.209314,4.792301,6.377500,0.817876,-3.327722,8.079307,8.078972,-4.432928,-0.641744,0.754515],[-1.812342,2.456447,-2.805648,5.142214,6.714354,-6.600387,6.338226,-9.184206,-9.772372,4.258607,-0.814302],[9.901115,2.470684,-9.851304,-1.284477,-2.954984,-2.182046,9.017835,0.870723,8.520771,6.238885,-5.648477],[0.787776,-8.398129,-0.833331,8.989109,-3.319116,-2.586961,-5.202943,9.633651,-5.813616,-4.946839,3.801214],[3.860547,-0.533050,-5.403147,-1.055371,-2.130839,9.517717,6.306527,9.774034,-6.612971,-5.543626,1.235239],[-8.849325,0.612644,4.410997,6.892333,9.494681,5.667978,-3.753494,-6.180126,-2.932822,-1.601447,3.223631]],[[8.161893,-6.646231,-0.816366,-3.970268,-7.305217,-5.527009,2.005129,6.784988,2.209592,-0.752783,-3.063623],[-1.972912,6.033724,3.377587,-1.625133,-4.776264,4.508809,-6.459169,5.533042,-5.278154,0.890605,6.244643],[-7.676049,1.980020,3.957686,-7.900392,-9.537945,-8.885391,-5.068968,-9.611088,-8.200946,-3.948854,8.880494],[0.219500,-5.564540,-3.452005,3.214446,-7.498462,-8.243869,9.926880,6.702086,7.125014,-7.209192,-9.336054],[-3.454877,6.087044,5.036398,-0.407107,-0.040518,6.596290,6.825529,-3.287653,0.828404,-9.094995,5.459043],[5.566256,-6.433380,-9.395064,2.327571,9.401271,8.787409,-2.393143,-3.785361,-5.325312,7.377547,5.259388],[6.419896,1.635934,8.684172,4.774248,6.674086,7.276902,8.314907,-3.678952,-5.097198,-5.742969,-7.059112],[-0.062199,-9.260009,-8.002164,-1.805129,-4.159304,9.632255,-2.069005,-0.064309,7.295982,6.077204,5.461538]],[[6.677752,4.793323,6.429650,0.960286,-8.531803,-0.864217,-2.942275,-5.294668,0.099755,0.677502,-7.048217],[3.487425,4.272893,-4.560191,1.736839,5.692183,7.195327,4.169321,6.243018,1.128082,-4.020746,-5.770406],[-8.056410,-6.755263,6.508802,-8.890828,7.902033,-6.598834,7.397058,3.062152,-2.431415,4.681425,2.673145],[-7.852953,5.338374,3.956144,-3.556928,4.748577,-0.663965,-6.705262,8.727276,-6.207548,-6.403376,2.086818],[1.948416,-4.266077,2.498909,-2.502285,-3.418751,2.140101,-9.711953,-0.016540,-3.169947,4.958436,8.453823],[0.536111,-6.426573,4.274379,-5.971977,-2.602512,-4.805965,-1.856579,-3.217878,-8.987480,0.012083,9.985900],[-5.169325,-9.104689,9.914930,-5.203210,8.268500,6.811543,6.539399,-2.471864,6.740900,2.223196,-7.285167],[3.437329,-2.035809,4.047820,-9.149764,0.286047,-5.848383,7.222599,4.410534,-4.675812,0.374013,6.184153]]], dtype = "float64")#candidate|5932|(12, 8, 11)|const|float64
bop_5933 = relay.mod(var_5931.astype('float64'), relay.reshape(const_5932.astype('float64'), relay.shape_of(var_5931))) # shape=(12, 8, 11)
func_5072_call = mod.get_global_var('func_5072')
func_5077_call = mutated_mod.get_global_var('func_5077')
const_5938 = relay.const([-6,-4,-2,-6,-7,8,-9,-3,-3,4,-6,10,9,8,-2,8,1,-10,6,-5,-9,5,2,-10,-4,-6,3,-8,2,2,4,-2,9,9,-8,-10,-9,-6,-2,-5,-1,7,-9,-6,9,-4,5,-10,-8,2,5,-4,7,-5,-6,-7,3,1,-9,2,-5,2,2,6,1,7,-10,-10,9,-5,-6,-4,-6,-1,-1,4,-1,6,8,-5,-2,5,-3,8,-8,9,-5,5,7,8,-8,6,9,-5,5,-6,-4,8,5,9,9,9,10,-7,7,7,-2,-7,6,-9,-3,6,5,-5,10,-4,-4,2,5,3,9,-1,4,1,1,-8,5,6,-10,2,6,8,9,6,-3,9,-2,4,-8,3,-7,8,9,-3,4,10,1,2,1,-5,-8,8,-3,-3,9,4,10,-9,-5,-9,-10,-1,-10,1,10,8,8,-7,10,4,9,-7,-8,-8,-9,-4,-10,9,7,-1,-4,4,-7,-3,-4,-6,4,1,-10,-7,-8,7,7,7,-6,10,9,1,6,3,-2,-2,-2,10,-2,10,-9,9,3,-9,-4,8,-4,9,7,-1,-1,-7,6,5,-6,9,4,-3,-1,7,-1,9,5,5,-10,-1,9,-3,7,2,-3,-1,8,5,6,7,8,-3,5,-5,6,5,-5,-10,-6,-8,-5,7,4,-7,5,-10,-1,6,-4,-3,8,-6,4,-7,-10,1,-5,3,10,2,3,6,8,9,2,2,10,3,6,6,5,5,4,9,-7,9,6,1,-9,6,4,1,10,10,4,-3,-1,-10,8,1,2,-3,-7,-2,9,-8,-8,7,-5,-3,2,9,-6,-10,-8,-10,-5,1,-1,8,3,-3,7,8,-8,10,-8,-3,5,1,-6,-6,-5,-3,-9,6,-1,2,2,9,-2,-8,-5,7,6,-5,-10,-5,7,-3,3,8,-10,-1,10,-2,6,-5,3,-4,1,-5,-2,5,-10,-8,10,6,-6,-2,-6,1,4,-4,-7,8,-10,8,-3,1,-3,-8,-5,-3,-3,9,7,3,7,10,8,5,-1,9,-8,-9,9,4,-6,-7,1,-10,8,-2,1,-3,8,-4,-1,-4,5,-1,-3,-8,-3,-9,1,-5,-1,5,8,10,6,-6,-8,7,4,-6,3,7,9,2,-5,8,-3,9,-3,-7,2,-9,4,4,1,4,-5,2,6,5,-1,9,-8,-5,-5,3,8,8,5,9,-1,4,5,-2,-1,2,2,6,-10,-2,-5,-2,6,-6,-3,10,7,2,9,-5,-2,2,10,3,-9,5,-1,-9,-1,7,10,-10,1,-1,7,-3,-2,-3,3,2,-1,7,6,-9,1,-10,5,-9,3,9,7,9,6,-2,7,10,3,-2,-5,7,-8,8,1,2,-9,-4,-4,6,6,-9,-3,3,-8,6,-7,-9,4,-10,5,8,4,10,4,8,-3,-1,7,2,-10,-7,5,-3,3,3,3,4,1,5,-10,-3,9,-9,1,-2,-2,-9,-4,6,-4,-7,-10,4,7,-7,4,9,-8,-2,2,10,-2,2,9,-5,-9,-2,5,2,-7,8,1,-5,-8,7,-10,5,-6,-7,-7,10,3,6,-7,-10,7,4,-7,-8,7,-6,-2,8,-10,-3,-5,4,4,-8,6,5,-7,-3,9,1,7,-2,2,7,5,10,2,8,4,8,5,5,-4,8,10,-1,9,-5,5,3,-1,-8,7,-10,-3,10,4,9,4,1,-7,2,-6,-6,-9,1,-4,-5,-4,-3,-5,-4,-10,5,8,-1,-8,2,-10,-5,9,-10,-4,5,2,-6,1,-6,-10,-7,8,-5,1,-10,-6,-1,-10,8,-6,3,-1,4,6,-6,-2,-7,1,5,-7,-4,-2,8,5,-8,-10,-8,-2,6,-2,-6,-5,5,3,9,-6,3,-9,-10,8,5,10,3,-8,10,1,-6,-9,6,10,-1,10,4,6,4,-3,4,-2,5,-5,-2,3,5,-7,-1,8,-3,8,8,1,-10,10,-10,-10,-4,2,-3,2,-4,-1,-7,-8,7,-10,-2,6,-9,-5,-9,-4,1,-9,-10,4,-3,10,4,-2,6,6,7,7,8,-3,-8,-10,-2,5,1,5,-6,5,4,1,-1,7,8,-4,-5,-3,-5,-2,-5,10,-8,-1,-1,-6,-4,-5,5,3,-6,-2,-7,6,2,-10,8,-3,4,-1,-10,9,6,-9,6,6,10,-6,3,-8,3,1,7,-8,-8,5,5,-2,-6,2,2,7,-4,-10,5,3,7,9,-8,4,-5,-5,-10,3,-7,-9,3,-4,9,7,1,3,-3,-1,-1,-6,3,9,10,1,-9,8,-8,-8,-4,2,4,-3,-10,-8,9,-7,7,6,-10,-5,-9,10,3,6,-4,5,4,4,2,6,8,-4,1,-10,-6,1,-8,-5,-8,10,-7,-1,3,-6,-9,-8,6,-10,1,10,-7,-5,2,5,8,4,-2,-8,-10,2,9,-4,2,-3,-6,-10,-4,9,2,-5,-1,10,4,10,4,-3,4,7,-3,-6,-3,-3,1,2,6,-8,6,2,-5,4,-8,2,6,5,8,-8,2,-8,3,-8,7,10,3,-3,-8,-8,6,6,7,-1,7,-8,1,1,3,-7,-5,-4,-10,-7,-6,3,-4,5,-2,-8,6,-5,-9,-2,-6,-5,-5,9,7,-2,-2,-8,5,8,10,6,2,-10,8,7,1,6,2,1,-3,4,-9,-4,6,2,9,-9,-9,-6,-2,-2,-7,-1,4,-8,-7,4,5,-2,9,-4,-2,-1,-3,-8,2,-2,-8,9,4,-1,-10,-9,-3,7,-5,-4,5,5,-4,6,5,-6,10,-7,3,-7,2,-9,7,1,-6,-8,-10,-10,8,-10,-4,7,2,-10,1,7,3,2,-1,-3,-8,9,-4,2,-6,6,-1,-6,9,5,3,-5,7,10,2,6,-4,6,5,-9,-2,-5,-10,-3,8,10,9,2,5,-3,-5,5,-3,5,-10,-1,1,-5,-8,1,6,7,-7,3,-9,8,-7,-1,-5,10,-3,8,-6,7,1,10,-7,5,6,-5,6,8,8,6,10,-9,-7,-8,-7,-9,-3,6,-5,-6,-10,-5,6,-4,7,-8,-5,9,-1,7,6,-8,2,-10,6,-8,-1,-7,-6,-1,-8,-9,3,5,9,-4,5,-3,-6,5,-1,10,-6,8,5,-7,8,6,-6,-5,-10,-7,1,-3,4,-10,-3,-6,-5,-4,-4,5,-9,-3,-1,-9,9,7,7,-8,-2,-4,7,5,-6,6,10,-2,-2,3,5,-6,7,4,-5,-4,1,1,10,3,5,-6,9,-5,2,6,-9,2,6,-1,-8,-8,-3,-8,5,8,9,8,-9,10,-10,-9,-9,-6,-6,-5,-9,3,2,-6,-3,8,6,1,-8,9,9,6,6,4,8,-6,10,1,-3,10,9,9,5,-3,2,10,9,-1,9,-6,-5,-6,-4,-9,-3,-2,-7,10,-2,7,-4,-7,-5,7,-6,-3,-7,-5,5,7,-1,10,1,-1,4,7,5,2,-4,5,2,-10,8,-10,-9,1,-6,-9,-3,-10,-10,-7,-4,-6,8,10,-1,10,6,-2,-5,-7,4,-9,-8,-5,7,3,9,-10,1,8,10,1,6,-3,6,3,7,6,1,6,-3,9,-10,-10,9,-5,6,9,9,4,-1,3,8,-5,-3,7,2,10,7,3,10,6,-1,-9,-6,-6,-1,-7,2,-10,-5,-3,-4,-6,-4,8,-6,3,9,10,6,-4,-4,-8,5,1,6,6,6,-3,-3,-8,3,-8,3,10,1,8,9,4,-5,-5,-9,-1,6,-9,4,10,9,4,6,-1,9,4,5,-3,5,1,2,-10,7,7,-7,1,-7,-5,-8,-9,8,-9,3,5,-2,1,10,2,1,1,8,-1,6,7,-4,4,-2,-7,5,-3,10,-2,-7,10,-6,3,2,1,10,5,-6,10,-2,-5,10,-5,-3,-1,-1,-6,1,-3,3,-2,-1,1,-7,-5,7,-5,9,-7,7,3,-8,-7,8,1,-3,8,-1,-1,-9,7,-8,3,4,-10,-6,1,1,3,7,5,-7,3,-2,-6,3,-7,6,10,7,-1,2,9,1,3,3,5,10,2,4,-1,1,-10,7,9,10,9,3,3,7,1,5,4,5,5,3,-6,5,5,6,8,-5,7,-2,-3,8,10,9,-7,9,-2,10,-1,6,9,-10,-9,1,-5,6,-3,-2,-6,-9,3,-6,2,-5,-3,9,-4,-8,-3,8,-3,6,9,-10,-8,9,-7,-8,-3,4,-7,-7,-1,3,3,4,8,-3,-7,-3,2,-8,-8,-9,-1,-6,-5,9,-7,10,6,9,3,2,-5,-6,-8,7,3,7,-1,2,8,-2,6,7,7,5,-8,-1,-1,-9,3,4,-3,10,8,2,5,-2,-9,2,-5,-5,3,7,6,4,-3,7,-3,-2,1,6,-9,5,-7,3,4,-6,-7,-5,-10,-4,9,-1,-10,-3,8,-7,10,-4,-10,1,-6,-5,2,5,8,7,1,-2,-10,2,-8,4,2,5,6,6,-4,4,-10,10,-8,-7,-4,8,8,1,-8,4,-2,1,-4,9,-7,-6,1,7,10,6,7,-7,5,-10,2,4,2,3,4,6,6,-10,-5,-6,-3,10,-10,4,6,2,-8,3,2,6,9,-9,3,1,6,-6,4,8,6,9,6,9,8,3,-7,9,-2,-2,-6,4,2,3,-7,-8,-5,-4,-10,6,-4,-1,-8,10,7,-5,-5,-8,-9,1,-6,-1,-7,3,-8,7,-5,-7,-9,3,7,2,6,-6,-3,-5,7,-1,8,4,-2,-10,-3,2,-1,1,-2,9,5,7,6,8,-5,-10,2,1,-8,10,5,3,-6,6,-7,8,-4,-9,-6,-6,5,-5,3,-10,-6,-2,4,-9,-10,-10,3,9,4,10,5,10,3,7,-1,6,-9,10,-4,4,5,-10,-4,10,7,8,7,3,5,-7,-9,4,1,-1,-5,6,-9,-10,5,8,1,5,-6,-9,10,-7,-9,9,5,5,-5,9,9,-6,1,-6,2,10,10,6,7,1,4,-8,-1,10,5,-9,-3,9,-1,-6,-6,10,8,-8,-1,3,-10,-8,-3,9,10,-4,-5,8,-8,8,3,-2,5,-7,2,4,10,-4,-2,3,-1,6,-2,1,-9,5,-8,-4,-10,1,-3,-3,7,-8,-10,-1,-9,-6,-1,2,5,-3,-6,-8,-10,-8,4,-5,-1,-1,7,-2,1,9,5,2,-9,-5,-2,1,3,-2,-3,9,-4,-4,2,-7,-6,-5,-6,-2,-1,-1,-1,-2,4,-1,-5,-2,3,-9,-4,10,-1,-10,1,3,9,5,-6,6,3,8,2,-8,-8,9,-1,9,-1,2,-10,-6,-9,-3,-7,9,-8,9,-7,-2,4,-6,-10,9,-3,-5,-6,-4,-1,-3,5,8,9,3,6,2,7,-5,2,-10,4,7,-6,6,5,-6,9,4,-5,3,-2,-1,2,6,9,6,3,1,4,9,-7,2,2,4,-10,-9,4,1,-4,-10,7,6,1,9,5,7,-4,-7,-4,2,-10,6,10,9,-8,-9,-5,3,2,-3,2,8,8,10,6,4,4,-9,-9,10,-7,10,-4,10,-7,-5,-1,-4,-8,-1,-10,-2,6,1,-10,-5,-2,1,-10,-3,1,5,-1,-3,5,5,8,10,-9,-1,1,-7,1,-10,8,9,3,3,6,5,9,-7,-5,1,7,2,8,-3,-9,3,8,9,9,-7,10,-6,-2,-8,-7,3,-10,2,-4,10,-9,1,4,-1,3,-8,4,4,5,4,-10,8,10,10,6,-9,3,-2,-1,-4,5,-7,-5,4,2,4,5,-4,1,-10,5,1,9,-9,-8,-5,4,-3,-7,-9,-7,3,-4,-6,2,-1,5,-9,5,7,10,10,7,2,-2,-3,5,-8,2,3,10,-2,-6,-3,8,6,-3,-3,2,4,-8,3,-2,10,5,-9,7,-3,-2,-4,6,8,8,2,7,-6,-5,-8,-9,3,2,-10,3,2,10,6,7,9,-5,7,-9,9,-9,-10,-5,-4,-7,8,8,7,-5,7,-7,7,-7,6,-7,-9,9,-7,-4,-3,-7,-3,10,-4,3,9,8,-3,-2,1,1,-8,-1,7,7,-8,-3,-9,1,10,-7,-3,6,-7,5,8,10,-6,-10,-8,-5,3,-7,2,8,-3,2,-7,2,-7,-4,2,-8,4,-3,8,1,5,4,8,-9,6,-7,-10,-8,5,-9,-5,7,-8,4,-6,7,-2,9,2,1,9,-10,-6,-5,10,7,-2,9,-5,-6,-9,-4,-4,3,1,4,9,-1,4,-5,2,2,-6,-6,3,2,4,2,-9,6,8,-1,5,1,10,4,8,7,-6,-5,-6,-10,4,-10,9,-2,5,-2,-7,-8,9,-2,7,-10,-2,-3,-5,1,-4,-2,-5,8,10,-10,4,-8,9,9,9,10,-6,2,-5,1,-1,2,7,-8,3,6,6,-2,1,-3,-3,-2,6,-2,-6,-2,-4,-5,-6,8,10,9,-7,1,4,-8,6,6,5,-7,-1,-8,-3,7,-9,-1,10,-5,2,-7,-9,-1,-5,9,9,1,-4,6,-5,9,2,2,-9,-1,2,-7,-2,-6,-9,9,2,7,-2,-5,8,2,1,1,1,-5,1,4,10,2,-6,7,-2,5,-7,-2,2,4,8,-7,9,-1,-2,2,4,3,-5,-9,-5,3,-5,-7,-9,-2,8,7,1,-6,5,-7,3,3,2,-7,6,-1,6,-8,10,-3,1,-6,10,-5,1,5,4,2,-10,7,10,9,-9,-1,8,7,-6,10,-4,-10,-7,-9,-5,-10,-1,-10,-4,-8,-5,2,-3,-3,-4,4,7,5,10,-8,-6,-9,5,9,-10,4,6,-1,9,-7,-6,-2,-4,9,-10,9,7,-4,-9,4,2,5,8,-6,-9,-9,-3,-9,10,10,-7,8,9,6,7,-7,2,4,9,4,-2,-2,5,-3,-9,7,-4,-2,8,-2,10,3,-3,-1,-8,8,-9,8,-4,-1,6,1,-4,4,2,1,5,-5,3,-1,-10,-5,-1,-1,4,8,-1,-9,-3,-8,-10,9,3,6,-8,8,-5,-5,6,1,-9,9,9,6,2,7,3,7,-7,-3,-7,-5,6,1,7,3,1,7,-1,-4,-6,-2,6,-6,-2,2,-2,4,-6,-9,6,-10,-5,9,-9,-8,5,-6,1,5,-3,-5,-3,-2,-5,-1,-4,-10,-7,4,3,1,-1,-8,-10,-6,-2,-5,-1,4,-9,-8,6,-3,-8,-9,8,10,8,4,3,-1,10,-9,-5,8,8,7,4,6,-7,-5,-6,4,5,4,-7,-4,-10,-9,-8,9,3,-1,-5,8,-4,7,-10,-8,1,4,6,7,2,3,3,5,9,2,5,-8,-5,-10,7,1,-9,-8,-4,3,10,-8,-9,8,1,3,-2,-2,5,-3,10,-10,2,6,-2,-5,-6,-7,6,-4,-7,-2,10,-7,7,-7,7,-6,5,6,10,10,-2,2,2,6,4,8,1,-9,7,-5,-3,-1,4,8,9,-1,-6,-1,-8,-10,5,6,-5,-6,1,5,4,-4,5,6,3,5,2,-8,4,-3,-7,-7,-2,-5,4,-8,-7,-1,-6,8,-6,-9,-10,-9,6,-3,10,5,3,-6,-1,-7,7,-3,-5,-4,-2,9,9,-6,9,8,-9,3,5,9,4,-4,-4,-5,6,1,-10,3,10,6], dtype = "int64")#candidate|5938|(2925,)|const|int64
const_5939 = relay.const([7,-3,7,8,-8,7,-5,-4,-1,7,-3,4,-7,3,2,-9,-9,7,-8,-8,-8,-4,9,-8,-2,10,3,1,6,8,-4,-7,9,1,-9,-4,5,9,-6,4,-3,3,-10,-4,2,4,-8,1,7,7,-4,-2,-8,4,-2,-2,-7,-9,-3,5,6,1,2,-5,7,-4,2,-1,1,-4,8,-7,5,1,-2,1,-8,4,-4,9,-3,-2,3,7,1,-8,-9,3,1,-10,-4,1,-3,2,-7,1,-7,5,10,-3,-3,-1,6,-6,10,1,9,6,10,1,10,-5,7,-7,2,-8,-3,-9,3,-7,3,8,10,4,-3,-5,-7,2,-2,10,10,-1,9,1,5,-6,6,10,10,-5,-7,10,5,-9,-2,3,9,7,3,-9,-8,9,-10,9,1,7,-6,-1,8,8,-8,-5,4,-4,-2,7,5,3,3,7,7,1,10,6,3,-9,-4,10,8,7,5,1,10,-7,-7,-8,-8,-10,2,-6,10,7,-2,6,-1,2,-6,7,-1,10,1,-4,8,7,10,6,1,-5,-2,-6,3,10,3,9,6,-1,9,5,-9,-7,8,-10,9,-5,-8,8,9,3,9,-5,3,-9,-1,-8,-9,-1,10,-9,7,-2,2,-6,-9,-2,-3,1,-3,6,9,6,1,-6,-7,10,8,6,-3,9,-3,10,8,-10,6,-4,-10,-4,6,-1,-6,6,4,-3,6,9,-3,-3,-4,1,-9,-6,3,-1,1,-3,-3,-10,3,-4,-5,8,5,8,-4,-1,4,-3,7,-10,-8,-7,4,-9,-3,7,9,-6,7,-4,-5,-6,-2,7,-5,-10,-10,5,6,-10,-9,7,-2,-10,8,-10,9,-1,-4,-2,5,-1,1,-6,10,-6,-3,-4,-5,-4,10,-8,-7,-2,9,-10,-8,-7,7,-7,-1,3,-7,9,-3,7,-4,-2,3,-3,-10,7,4,-8,-7,-7,10,-2,-8,9,3,-3,-10,-1,-1,-5,7,-8,6,-1,10,3,7,9,6,7,3,-10,6,-5,-6,-5,-4,2,-8,-5,9,2,-3,1,6,-3], dtype = "int16")#candidate|5939|(400,)|const|int16
call_5937 = relay.TupleGetItem(func_5072_call(relay.reshape(const_5938.astype('int64'), [15, 13, 15]), relay.reshape(const_5938.astype('int64'), [15, 13, 15]), relay.reshape(const_5939.astype('int16'), [400,]), ), 2)
call_5940 = relay.TupleGetItem(func_5077_call(relay.reshape(const_5938.astype('int64'), [15, 13, 15]), relay.reshape(const_5938.astype('int64'), [15, 13, 15]), relay.reshape(const_5939.astype('int16'), [400,]), ), 2)
uop_5945 = relay.asin(const_5938.astype('float32')) # shape=(2925,)
func_4275_call = mod.get_global_var('func_4275')
func_4276_call = mutated_mod.get_global_var('func_4276')
call_5961 = relay.TupleGetItem(func_4275_call(), 0)
call_5962 = relay.TupleGetItem(func_4276_call(), 0)
output = relay.Tuple([bop_5933,call_5937,const_5939,uop_5945,call_5961,])
output2 = relay.Tuple([bop_5933,call_5940,const_5939,uop_5945,call_5962,])
func_5975 = relay.Function([var_5931,], output)
mod['func_5975'] = func_5975
mod = relay.transform.InferType()(mod)
mutated_mod['func_5975'] = func_5975
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5976 = relay.var("var_5976", dtype = "float64", shape = (12, 8, 11))#candidate|5976|(12, 8, 11)|var|float64
func_5975_call = mutated_mod.get_global_var('func_5975')
call_5977 = func_5975_call(var_5976)
output = call_5977
func_5978 = relay.Function([var_5976], output)
mutated_mod['func_5978'] = func_5978
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_5996 = func_5028_call()
call_5997 = func_5028_call()
func_4718_call = mod.get_global_var('func_4718')
func_4719_call = mutated_mod.get_global_var('func_4719')
call_6001 = relay.TupleGetItem(func_4718_call(), 0)
call_6002 = relay.TupleGetItem(func_4719_call(), 0)
func_3864_call = mod.get_global_var('func_3864')
func_3866_call = mutated_mod.get_global_var('func_3866')
call_6007 = relay.TupleGetItem(func_3864_call(), 0)
call_6008 = relay.TupleGetItem(func_3866_call(), 0)
const_6010 = relay.const([[[-6.753075,-5.338043,-1.474994,2.652676,-9.931859],[-9.092986,-4.360651,-5.595847,-1.293652,9.939542]],[[8.222783,-0.731856,-5.527562,-5.874593,5.421718],[-7.149969,4.791847,7.104979,-4.723302,2.583477]],[[-9.653591,-9.240207,-3.353301,-5.416771,4.461643],[-0.747826,-8.420198,-1.150317,-8.124245,-1.467790]],[[-9.425156,1.606012,6.845591,-1.939029,-4.587127],[-3.055842,3.687977,5.307237,9.753693,-6.172774]],[[-1.416880,5.709324,7.866983,7.916607,-3.884547],[8.938163,-1.568822,-1.618716,0.995793,7.837828]],[[8.943528,-5.973518,-6.660181,-9.729226,8.614337],[-0.099192,9.188594,-3.355922,0.685225,3.143049]],[[8.774776,0.291892,3.036119,-1.771464,-8.888734],[-6.510690,8.986343,-6.668816,4.348960,-2.993993]],[[-1.703713,-5.676034,-6.635760,-2.138987,-1.562961],[-8.980235,2.312456,-6.078768,3.858646,1.040660]]], dtype = "float64")#candidate|6010|(8, 2, 5)|const|float64
bop_6011 = relay.equal(call_6001.astype('bool'), relay.reshape(const_6010.astype('bool'), relay.shape_of(call_6001))) # shape=(8, 2, 5)
bop_6014 = relay.equal(call_6002.astype('bool'), relay.reshape(const_6010.astype('bool'), relay.shape_of(call_6002))) # shape=(8, 2, 5)
output = relay.Tuple([call_5996,call_6007,bop_6011,])
output2 = relay.Tuple([call_5997,call_6008,bop_6014,])
func_6016 = relay.Function([], output)
mod['func_6016'] = func_6016
mod = relay.transform.InferType()(mod)
output = func_6016()
func_6017 = relay.Function([], output)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_6050 = relay.TupleGetItem(func_4871_call(), 0)
call_6051 = relay.TupleGetItem(func_4873_call(), 0)
output = call_6050
output2 = call_6051
func_6056 = relay.Function([], output)
mod['func_6056'] = func_6056
mod = relay.transform.InferType()(mod)
output = func_6056()
func_6057 = relay.Function([], output)
mutated_mod['func_6057'] = func_6057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4215_call = mod.get_global_var('func_4215')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_6096 = func_4215_call()
call_6097 = func_4215_call()
func_3002_call = mod.get_global_var('func_3002')
func_3005_call = mutated_mod.get_global_var('func_3005')
const_6101 = relay.const(-9, dtype = "uint64")#candidate|6101|()|const|uint64
var_6102 = relay.var("var_6102", dtype = "uint64", shape = (1456,))#candidate|6102|(1456,)|var|uint64
call_6100 = relay.TupleGetItem(func_3002_call(relay.reshape(const_6101.astype('uint64'), []), relay.reshape(var_6102.astype('uint64'), [8, 14, 13]), ), 0)
call_6103 = relay.TupleGetItem(func_3005_call(relay.reshape(const_6101.astype('uint64'), []), relay.reshape(var_6102.astype('uint64'), [8, 14, 13]), ), 0)
func_971_call = mod.get_global_var('func_971')
func_973_call = mutated_mod.get_global_var('func_973')
var_6138 = relay.var("var_6138", dtype = "float32", shape = (28,))#candidate|6138|(28,)|var|float32
call_6137 = relay.TupleGetItem(func_971_call(relay.reshape(var_6138.astype('float32'), [2, 1, 14])), 1)
call_6139 = relay.TupleGetItem(func_973_call(relay.reshape(var_6138.astype('float32'), [2, 1, 14])), 1)
output = relay.Tuple([call_6096,call_6100,const_6101,var_6102,call_6137,var_6138,])
output2 = relay.Tuple([call_6097,call_6103,const_6101,var_6102,call_6139,var_6138,])
func_6143 = relay.Function([var_6102,var_6138,], output)
mod['func_6143'] = func_6143
mod = relay.transform.InferType()(mod)
mutated_mod['func_6143'] = func_6143
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6143_call = mutated_mod.get_global_var('func_6143')
var_6145 = relay.var("var_6145", dtype = "uint64", shape = (1456,))#candidate|6145|(1456,)|var|uint64
var_6146 = relay.var("var_6146", dtype = "float32", shape = (28,))#candidate|6146|(28,)|var|float32
call_6144 = func_6143_call(var_6145,var_6146,)
output = call_6144
func_6147 = relay.Function([var_6145,var_6146,], output)
mutated_mod['func_6147'] = func_6147
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4718_call = mod.get_global_var('func_4718')
func_4719_call = mutated_mod.get_global_var('func_4719')
call_6155 = relay.TupleGetItem(func_4718_call(), 0)
call_6156 = relay.TupleGetItem(func_4719_call(), 0)
uop_6168 = relay.exp(call_6155.astype('float64')) # shape=(8, 2, 5)
uop_6170 = relay.exp(call_6156.astype('float64')) # shape=(8, 2, 5)
output = relay.Tuple([uop_6168,])
output2 = relay.Tuple([uop_6170,])
func_6171 = relay.Function([], output)
mod['func_6171'] = func_6171
mod = relay.transform.InferType()(mod)
mutated_mod['func_6171'] = func_6171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6171_call = mutated_mod.get_global_var('func_6171')
call_6172 = func_6171_call()
output = call_6172
func_6173 = relay.Function([], output)
mutated_mod['func_6173'] = func_6173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4718_call = mod.get_global_var('func_4718')
func_4719_call = mutated_mod.get_global_var('func_4719')
call_6209 = relay.TupleGetItem(func_4718_call(), 1)
call_6210 = relay.TupleGetItem(func_4719_call(), 1)
func_1766_call = mod.get_global_var('func_1766')
func_1769_call = mutated_mod.get_global_var('func_1769')
const_6218 = relay.const([9.210354,-3.697649,5.125056,2.407024,4.095781,4.063409,2.107059,-5.611306,9.218898,9.653783,-3.634153,-2.403652,8.948661,-2.409029,-2.949187,6.997662,-9.481723,-6.427839,-6.436263,7.176495,9.024948,-3.427978,7.468884,2.238409,-3.906474,-2.921933,-0.634658,7.243892,4.880924,-5.312830,-4.642626,1.795278,-7.443881,-1.162905,-8.624826,-1.957572,-3.716764,-1.841263,0.566464,-6.708373,-6.333621,-0.782255,-7.205155,-5.847726,4.881489,6.208662,2.992826,-8.547203,-5.776093,-2.180895,8.543851,-7.695784,7.754856,8.000193,-0.482335,-6.921931,-0.955306,2.202518,7.579252,-2.496492,8.273134,-8.652978,-6.047285,-3.846806,9.442139,8.848647,9.828402,-2.087678,7.376844,4.175256,-3.414557,-8.430496,2.497570,1.254806,-8.445371,6.260882,6.424192,-8.493378,5.946098,-4.183039,2.399794,5.067227,6.346672,-6.494588,1.238738,7.979642,7.996144,-0.442042,8.134974,8.453831,7.824343,9.095712,-3.838343,-8.501755,-9.646976,-5.768397,8.092951,-5.038453,-4.334096,6.387262,6.624703,7.798011,-3.736355,4.266125,8.352970,5.164473,9.348138,1.266444,-6.116612,4.334134,-4.577190,0.966849,4.127934,-9.486794,-8.142050,7.688024,-8.914921,-6.609719,-9.944457,3.487102,1.352173,-5.399677,9.682065,-1.232596,-3.760049,9.714528,-3.313145,-4.460330,-8.117764,9.344904,-9.399769,-2.808377,9.271012,5.694211,-0.776794,1.153161,-0.527941,1.121138,4.263577,9.918273,8.722420,-8.540355,6.271249,-2.635410,3.570394,-0.509912,-0.056058,9.678153,-0.612183,-4.203222,9.340530,-8.362219,5.770425,3.808325,2.389744,-8.676627,9.158641,-1.363280,9.814702,7.800876,-9.639198,-5.554856,-6.644074,-1.105671,0.953575,-1.402977,-8.704457,-2.104389,-9.428740,-5.142792,-5.541045,-2.982478,9.351794,6.731365,6.633523,-2.317859,-1.794942,5.895776,-0.852295,1.822813,-4.087730,-3.514344,-7.812249,-1.811078,-6.843281,3.569513,-1.747562,1.056804,-2.435076,-7.026443,1.996327,-4.020575,-0.648453,-9.770322,7.023953,-6.528676,7.686915,1.927656,7.299407,-2.122434,-7.298219,-6.346395,-0.737423,3.521248,-5.638960,-6.253630,-8.774380,-7.609471,-8.171568,9.994853,-7.138481,2.319965,-2.201403,-3.296425,8.505597,9.784319,-8.048383,-8.996002,9.203511,4.435482,1.928553,0.523343,-3.296695,-8.810282,6.710891,0.772017,8.350068,7.253635,3.098729,8.493083,6.890455,-5.629472,7.772775,-7.741469,-9.797517,-0.179921,7.798890,6.871937,7.125038,3.272482,6.081006,7.128392,0.581380,-6.918612,-9.257870,8.566383,0.301453,2.997781,-0.226232,5.849749,0.053270,9.962134,-5.267898,2.591136,-8.804850,-3.948993,1.406152,2.122261,-0.769685,7.175586,5.757754,-2.410526,-8.632500,7.212413,1.375269,-2.073138,4.647413,-0.165931,-6.837517,0.063383,-1.159421,2.245619,2.269265,-8.513252,-7.041504,-7.249464,4.321130,-5.640493,-1.893458,-1.703450,4.006170,2.906964,-5.808056,-6.308379,4.637435,-8.581693,2.494937,0.502028,-6.401901,-7.633103,2.706495,-4.730455,-1.301672,-4.619173,7.588151,-6.585535,8.927546,3.187198,0.566414,4.873027,0.731594,-6.376082,1.579096,-9.693502,-7.628213,-1.903665,9.074696,-8.288073,-1.293814,9.183915,7.887667,-4.907388,0.938080,6.063902,2.832234,3.522972,-3.225641,3.607805,2.319560,8.084334,-2.542967,2.218668,-6.364740,5.916083,-6.656707,-8.553910,6.266183,8.091452,-7.334463,7.434591], dtype = "float64")#candidate|6218|(330,)|const|float64
call_6217 = relay.TupleGetItem(func_1766_call(relay.reshape(const_6218.astype('float64'), [10, 11, 3])), 1)
call_6219 = relay.TupleGetItem(func_1769_call(relay.reshape(const_6218.astype('float64'), [10, 11, 3])), 1)
output = relay.Tuple([call_6209,call_6217,const_6218,])
output2 = relay.Tuple([call_6210,call_6219,const_6218,])
func_6220 = relay.Function([], output)
mod['func_6220'] = func_6220
mod = relay.transform.InferType()(mod)
mutated_mod['func_6220'] = func_6220
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6220_call = mutated_mod.get_global_var('func_6220')
call_6221 = func_6220_call()
output = call_6221
func_6222 = relay.Function([], output)
mutated_mod['func_6222'] = func_6222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5136_call = mod.get_global_var('func_5136')
func_5137_call = mutated_mod.get_global_var('func_5137')
call_6241 = relay.TupleGetItem(func_5136_call(), 0)
call_6242 = relay.TupleGetItem(func_5137_call(), 0)
output = relay.Tuple([call_6241,])
output2 = relay.Tuple([call_6242,])
func_6247 = relay.Function([], output)
mod['func_6247'] = func_6247
mod = relay.transform.InferType()(mod)
output = func_6247()
func_6248 = relay.Function([], output)
mutated_mod['func_6248'] = func_6248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5136_call = mod.get_global_var('func_5136')
func_5137_call = mutated_mod.get_global_var('func_5137')
call_6293 = relay.TupleGetItem(func_5136_call(), 0)
call_6294 = relay.TupleGetItem(func_5137_call(), 0)
func_6016_call = mod.get_global_var('func_6016')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6298 = relay.TupleGetItem(func_6016_call(), 0)
call_6299 = relay.TupleGetItem(func_6017_call(), 0)
func_5286_call = mod.get_global_var('func_5286')
func_5289_call = mutated_mod.get_global_var('func_5289')
const_6318 = relay.const([-7.754228,-6.773338,0.909466,5.355495,5.953756,0.927263,2.276521,7.070143,-6.970023,6.522756,0.116688,9.727085,9.120012,-7.497703,-1.730936,-4.794559,-1.782675,-3.559285,5.656033,-5.833048,8.466017,8.639707,-6.096513,-4.264861,-0.728169,-7.880150,-2.452230,-3.750354,-0.447524,-4.135463,6.411328,2.987682], dtype = "float64")#candidate|6318|(32,)|const|float64
call_6317 = relay.TupleGetItem(func_5286_call(relay.reshape(const_6318.astype('float64'), [1, 4, 8])), 0)
call_6319 = relay.TupleGetItem(func_5289_call(relay.reshape(const_6318.astype('float64'), [1, 4, 8])), 0)
output = relay.Tuple([call_6293,call_6298,call_6317,const_6318,])
output2 = relay.Tuple([call_6294,call_6299,call_6319,const_6318,])
func_6357 = relay.Function([], output)
mod['func_6357'] = func_6357
mod = relay.transform.InferType()(mod)
mutated_mod['func_6357'] = func_6357
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6357_call = mutated_mod.get_global_var('func_6357')
call_6358 = func_6357_call()
output = call_6358
func_6359 = relay.Function([], output)
mutated_mod['func_6359'] = func_6359
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6373 = relay.var("var_6373", dtype = "uint8", shape = (6, 1, 6))#candidate|6373|(6, 1, 6)|var|uint8
var_6374 = relay.var("var_6374", dtype = "uint8", shape = (6, 3, 6))#candidate|6374|(6, 3, 6)|var|uint8
bop_6375 = relay.minimum(var_6373.astype('uint8'), var_6374.astype('uint8')) # shape=(6, 3, 6)
uop_6380 = relay.log2(bop_6375.astype('float64')) # shape=(6, 3, 6)
output = uop_6380
output2 = uop_6380
func_6387 = relay.Function([var_6373,var_6374,], output)
mod['func_6387'] = func_6387
mod = relay.transform.InferType()(mod)
var_6388 = relay.var("var_6388", dtype = "uint8", shape = (6, 1, 6))#candidate|6388|(6, 1, 6)|var|uint8
var_6389 = relay.var("var_6389", dtype = "uint8", shape = (6, 3, 6))#candidate|6389|(6, 3, 6)|var|uint8
output = func_6387(var_6388,var_6389,)
func_6390 = relay.Function([var_6388,var_6389,], output)
mutated_mod['func_6390'] = func_6390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_6392 = relay.TupleGetItem(func_5010_call(), 0)
call_6393 = relay.TupleGetItem(func_5011_call(), 0)
output = call_6392
output2 = call_6393
func_6398 = relay.Function([], output)
mod['func_6398'] = func_6398
mod = relay.transform.InferType()(mod)
output = func_6398()
func_6399 = relay.Function([], output)
mutated_mod['func_6399'] = func_6399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5899_call = mod.get_global_var('func_5899')
func_5901_call = mutated_mod.get_global_var('func_5901')
call_6408 = func_5899_call()
call_6409 = func_5899_call()
output = call_6408
output2 = call_6409
func_6418 = relay.Function([], output)
mod['func_6418'] = func_6418
mod = relay.transform.InferType()(mod)
output = func_6418()
func_6419 = relay.Function([], output)
mutated_mod['func_6419'] = func_6419
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_6437 = relay.TupleGetItem(func_4871_call(), 0)
call_6438 = relay.TupleGetItem(func_4873_call(), 0)
func_4718_call = mod.get_global_var('func_4718')
func_4719_call = mutated_mod.get_global_var('func_4719')
call_6459 = relay.TupleGetItem(func_4718_call(), 2)
call_6460 = relay.TupleGetItem(func_4719_call(), 2)
output = relay.Tuple([call_6437,call_6459,])
output2 = relay.Tuple([call_6438,call_6460,])
func_6464 = relay.Function([], output)
mod['func_6464'] = func_6464
mod = relay.transform.InferType()(mod)
mutated_mod['func_6464'] = func_6464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6464_call = mutated_mod.get_global_var('func_6464')
call_6465 = func_6464_call()
output = call_6465
func_6466 = relay.Function([], output)
mutated_mod['func_6466'] = func_6466
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6467 = relay.var("var_6467", dtype = "bool", shape = (12, 12, 2))#candidate|6467|(12, 12, 2)|var|bool
const_6468 = relay.const([[[True,False],[True,True],[True,True],[False,True],[False,False],[False,False],[True,True],[True,True],[False,True],[True,True],[False,True],[False,True]],[[False,True],[False,True],[False,True],[False,True],[True,True],[False,True],[True,False],[False,True],[True,True],[True,False],[False,False],[True,False]],[[False,True],[False,False],[False,False],[True,False],[True,True],[False,True],[False,False],[False,False],[True,True],[True,False],[True,True],[True,False]],[[False,True],[True,True],[True,False],[True,True],[True,True],[False,False],[True,True],[False,False],[True,False],[True,True],[False,False],[True,False]],[[True,False],[False,False],[False,False],[True,False],[True,False],[True,False],[False,True],[False,False],[False,False],[False,False],[True,False],[False,False]],[[True,False],[False,True],[False,True],[True,True],[False,False],[True,False],[False,False],[False,True],[False,False],[True,True],[True,True],[True,True]],[[True,True],[True,True],[True,False],[True,False],[False,True],[False,False],[True,True],[True,True],[True,False],[True,True],[True,True],[False,True]],[[True,False],[False,False],[True,True],[False,True],[False,True],[False,False],[True,True],[False,True],[True,False],[True,False],[False,False],[True,True]],[[True,False],[True,False],[True,True],[True,True],[True,False],[True,True],[True,True],[False,False],[True,False],[False,False],[True,False],[False,False]],[[True,True],[False,True],[False,True],[False,True],[True,True],[True,True],[True,False],[False,False],[False,True],[True,False],[True,True],[False,False]],[[True,False],[False,True],[False,False],[True,True],[False,False],[False,False],[True,True],[True,True],[False,False],[False,True],[False,False],[False,True]],[[True,True],[True,False],[True,True],[False,False],[True,True],[True,True],[True,True],[True,True],[True,True],[True,False],[False,False],[True,True]]], dtype = "bool")#candidate|6468|(12, 12, 2)|const|bool
bop_6469 = relay.logical_and(var_6467.astype('bool'), relay.reshape(const_6468.astype('bool'), relay.shape_of(var_6467))) # shape=(12, 12, 2)
bop_6479 = relay.greater_equal(const_6468.astype('bool'), relay.reshape(var_6467.astype('bool'), relay.shape_of(const_6468))) # shape=(12, 12, 2)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_6487 = relay.TupleGetItem(func_5010_call(), 1)
call_6488 = relay.TupleGetItem(func_5011_call(), 1)
output = relay.Tuple([bop_6469,bop_6479,call_6487,])
output2 = relay.Tuple([bop_6469,bop_6479,call_6488,])
func_6491 = relay.Function([var_6467,], output)
mod['func_6491'] = func_6491
mod = relay.transform.InferType()(mod)
mutated_mod['func_6491'] = func_6491
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6492 = relay.var("var_6492", dtype = "bool", shape = (12, 12, 2))#candidate|6492|(12, 12, 2)|var|bool
func_6491_call = mutated_mod.get_global_var('func_6491')
call_6493 = func_6491_call(var_6492)
output = call_6493
func_6494 = relay.Function([var_6492], output)
mutated_mod['func_6494'] = func_6494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6464_call = mod.get_global_var('func_6464')
func_6466_call = mutated_mod.get_global_var('func_6466')
call_6587 = relay.TupleGetItem(func_6464_call(), 1)
call_6588 = relay.TupleGetItem(func_6466_call(), 1)
output = relay.Tuple([call_6587,])
output2 = relay.Tuple([call_6588,])
func_6596 = relay.Function([], output)
mod['func_6596'] = func_6596
mod = relay.transform.InferType()(mod)
output = func_6596()
func_6597 = relay.Function([], output)
mutated_mod['func_6597'] = func_6597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4275_call = mod.get_global_var('func_4275')
func_4276_call = mutated_mod.get_global_var('func_4276')
call_6641 = relay.TupleGetItem(func_4275_call(), 0)
call_6642 = relay.TupleGetItem(func_4276_call(), 0)
uop_6646 = relay.atanh(call_6641.astype('float64')) # shape=(14, 2, 7)
uop_6648 = relay.atanh(call_6642.astype('float64')) # shape=(14, 2, 7)
uop_6663 = relay.log2(uop_6646.astype('float32')) # shape=(14, 2, 7)
uop_6665 = relay.log2(uop_6648.astype('float32')) # shape=(14, 2, 7)
output = relay.Tuple([uop_6663,])
output2 = relay.Tuple([uop_6665,])
func_6668 = relay.Function([], output)
mod['func_6668'] = func_6668
mod = relay.transform.InferType()(mod)
output = func_6668()
func_6669 = relay.Function([], output)
mutated_mod['func_6669'] = func_6669
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6705 = relay.constdtype = "float32")#candidate|6705|(7, 2, 16)|const|float32
var_6706 = relay.var("var_6706", dtype = "float32", shape = (7, 2, 16))#candidate|6706|(7, 2, 16)|var|float32
bop_6707 = relay.mod(const_6705.astype('float32'), relay.reshape(var_6706.astype('float32'), relay.shape_of(const_6705))) # shape=(7, 2, 16)
func_4407_call = mod.get_global_var('func_4407')
func_4410_call = mutated_mod.get_global_var('func_4410')
var_6720 = relay.var("var_6720", dtype = "int16", shape = (455,))#candidate|6720|(455,)|var|int16
call_6719 = func_4407_call(relay.reshape(var_6720.astype('int16'), [5, 13, 7]))
call_6721 = func_4407_call(relay.reshape(var_6720.astype('int16'), [5, 13, 7]))
bop_6724 = relay.floor_divide(var_6720.astype('float32'), relay.reshape(call_6719.astype('float32'), relay.shape_of(var_6720))) # shape=(455,)
bop_6727 = relay.floor_divide(var_6720.astype('float32'), relay.reshape(call_6721.astype('float32'), relay.shape_of(var_6720))) # shape=(455,)
output = relay.Tuple([bop_6707,bop_6724,])
output2 = relay.Tuple([bop_6707,bop_6727,])
func_6730 = relay.Function([var_6706,var_6720,], output)
mod['func_6730'] = func_6730
mod = relay.transform.InferType()(mod)
var_6731 = relay.var("var_6731", dtype = "float32", shape = (7, 2, 16))#candidate|6731|(7, 2, 16)|var|float32
var_6732 = relay.var("var_6732", dtype = "int16", shape = (455,))#candidate|6732|(455,)|var|int16
output = func_6730(var_6731,var_6732,)
func_6733 = relay.Function([var_6731,var_6732,], output)
mutated_mod['func_6733'] = func_6733
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6596_call = mod.get_global_var('func_6596')
func_6597_call = mutated_mod.get_global_var('func_6597')
call_6754 = relay.TupleGetItem(func_6596_call(), 0)
call_6755 = relay.TupleGetItem(func_6597_call(), 0)
output = relay.Tuple([call_6754,])
output2 = relay.Tuple([call_6755,])
func_6799 = relay.Function([], output)
mod['func_6799'] = func_6799
mod = relay.transform.InferType()(mod)
mutated_mod['func_6799'] = func_6799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6799_call = mutated_mod.get_global_var('func_6799')
call_6800 = func_6799_call()
output = call_6800
func_6801 = relay.Function([], output)
mutated_mod['func_6801'] = func_6801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6596_call = mod.get_global_var('func_6596')
func_6597_call = mutated_mod.get_global_var('func_6597')
call_6802 = relay.TupleGetItem(func_6596_call(), 0)
call_6803 = relay.TupleGetItem(func_6597_call(), 0)
output = call_6802
output2 = call_6803
func_6816 = relay.Function([], output)
mod['func_6816'] = func_6816
mod = relay.transform.InferType()(mod)
mutated_mod['func_6816'] = func_6816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6816_call = mutated_mod.get_global_var('func_6816')
call_6817 = func_6816_call()
output = call_6817
func_6818 = relay.Function([], output)
mutated_mod['func_6818'] = func_6818
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6879 = relay.const([[[-5.638214,-5.046387,-2.990607,-9.870092,-6.177422,8.927773,-6.636630,5.720158,7.658675,-7.407936,-3.458502],[2.589578,5.618759,2.150794,-2.962388,-7.722791,-4.609512,-7.618643,-9.392693,-9.372648,2.848473,5.907224],[-5.829593,3.830673,1.512058,-0.691780,-6.417009,4.624324,7.430243,-7.570074,-3.198208,-2.566467,2.081244],[8.496324,4.568535,-1.851276,6.561667,-3.624376,-0.248132,-4.245574,-6.275820,4.066547,-6.139197,-3.307458],[9.860447,5.433022,5.496595,-0.199465,-6.938226,4.164387,-6.008787,-0.232054,5.974058,6.450836,-1.199108],[1.516937,-6.400788,2.569363,-3.462364,-7.182840,-0.041115,6.832329,-5.378179,-6.708990,8.632149,-5.387573]],[[0.538906,-8.648571,-6.299703,-2.177445,0.049125,6.949804,-9.095568,-7.289590,-0.457374,-5.267601,-9.039659],[-9.569179,-8.456329,-0.659720,-3.704176,7.174620,4.977031,0.980580,0.674891,2.709167,0.770075,7.066462],[4.496740,-5.174735,-7.070438,2.256931,-8.928980,2.975229,-6.869720,0.416820,4.215405,7.259574,-1.295643],[-9.529701,-0.410369,-4.600041,-6.131645,-5.743147,0.986614,0.080303,3.588902,-2.145598,-6.502974,-8.113721],[9.305489,-6.721130,-0.201350,-3.728567,-8.070933,5.839262,-2.625664,-8.170323,0.041703,-1.255514,-9.715543],[-9.377994,-7.750590,6.492920,9.475632,-1.802384,7.631538,1.137413,-7.407641,-6.883988,-8.574019,3.648690]],[[5.245776,8.733152,-1.392203,6.312575,0.022829,5.223522,2.709450,-1.911119,-3.653472,6.736751,7.226125],[-9.254483,-2.210204,-6.550365,-1.178436,5.556648,-5.283198,-9.190125,7.522684,6.706860,2.718771,-1.256390],[0.312071,9.642804,1.630351,-5.510658,1.343337,-4.274341,5.916345,-1.856703,9.709735,-0.499082,-6.091375],[-1.735327,-3.300214,-2.963642,-6.172381,-5.401725,-1.611371,-8.294832,3.046583,-9.858726,9.557077,-5.958462],[-7.996889,-8.165438,1.775303,1.941681,6.650557,6.295348,2.637262,7.516318,-4.309559,0.666580,-7.246529],[2.422560,-3.882002,-0.095189,-1.185954,7.388487,-2.253492,-5.533079,-5.969896,8.314632,-5.672343,2.629066]],[[9.602374,0.624754,3.622697,-5.345741,-9.717916,1.287017,0.854126,-8.911601,-1.155688,-5.572963,8.455018],[-1.703521,-0.943217,4.241543,-5.571784,-5.394949,-1.455544,-9.545044,6.551612,2.164550,-0.166203,-1.374137],[-4.308587,5.270824,-0.308939,6.630803,3.380913,7.473735,-2.098314,-3.939968,-2.388839,-3.830856,-2.826673],[-7.012316,2.898768,-4.491769,-5.647146,3.295849,7.039821,8.078300,3.968306,-5.710839,2.693691,-0.372324],[-9.654813,-4.732319,-5.210795,0.007286,9.110875,-7.265325,2.184803,-7.586646,7.047196,5.958627,3.778362],[8.562334,3.474048,2.200036,5.330967,-7.772079,-4.076088,-3.302914,1.103836,0.676063,6.061100,7.412381]],[[-4.178389,-4.662170,-9.206287,4.539367,2.109901,-9.834010,-5.425173,3.536360,7.989813,0.569109,-9.867182],[-5.499765,-3.933085,0.555676,1.835213,-8.362930,-2.840044,-4.326631,-0.256167,-2.032232,-6.924290,4.426582],[-0.906310,-9.052686,-8.090241,5.719525,-3.035703,6.332891,-7.712663,-4.500429,5.496194,5.372171,-7.609766],[-6.101442,2.154709,-4.882918,2.653940,-9.448607,-3.022315,-7.332411,1.800740,3.640909,7.345485,-8.921318],[5.595204,-0.323727,1.250407,6.175657,4.363222,9.029130,-7.268254,-9.441371,4.462891,-9.802863,9.941280],[-7.928241,-4.267452,-4.911966,-2.632234,2.779373,-5.379507,4.630179,-4.465396,3.847855,-3.717783,-3.357308]],[[-4.114162,9.004449,-7.791662,4.103519,-7.347471,-9.439140,6.731506,-1.777653,7.427065,-0.493400,1.980141],[3.324752,-3.321215,0.851315,5.492056,5.199338,-0.322223,4.930445,-9.945798,3.505479,9.507218,-7.496942],[-6.928061,-0.717908,-1.402621,3.697527,-5.124318,6.693854,9.493040,-1.686501,3.387430,-9.660511,-4.353126],[-1.499140,-6.090803,3.237917,0.859368,6.831960,-8.427964,3.792518,-6.060279,3.422657,5.983232,2.458262],[0.636204,-6.709946,3.906663,7.890351,-1.321491,4.982736,6.881333,-2.583326,-9.022335,-2.512819,-6.412616],[1.810599,8.876721,4.985747,-9.274813,7.292204,-0.448113,-3.930388,7.737920,5.656070,2.761529,-7.806536]],[[6.083435,8.735232,-1.750734,0.322155,4.915171,6.655519,2.341978,5.809755,6.073414,1.392687,-4.586680],[-3.366606,7.830104,-7.515429,-0.509839,5.789490,3.431357,1.675999,9.907332,-6.312679,3.570206,6.361140],[3.376127,-0.630810,4.768456,-5.855530,0.199404,4.561579,3.851116,4.644485,7.030623,0.930615,7.244085],[-3.206431,5.017475,9.526943,3.453825,3.790778,-0.647871,5.576894,-4.085909,4.292996,-5.489522,-5.559497],[-2.409910,4.685751,5.085016,8.888257,7.796331,5.865108,-3.296362,-3.777740,5.606494,-2.506519,3.431760],[3.798490,-4.000841,-1.894803,-5.722991,-4.075847,-7.895001,-5.446308,-6.254855,3.019208,5.756899,7.263020]],[[7.753429,4.678824,3.236238,-9.829860,-9.884125,-4.805576,2.693791,7.241112,-4.512101,-2.436952,-6.992347],[-0.194830,-1.159127,-5.005220,-8.193422,-6.919886,9.478428,-3.147789,5.484589,-2.682791,-3.140200,-3.119217],[0.715957,1.564884,3.539829,-7.364553,-9.347012,2.818267,-1.396192,3.527351,5.458670,7.128343,0.828006],[1.666181,-5.077906,-5.354667,9.370112,-4.610898,8.525115,-8.121555,-9.139340,-2.705713,3.150728,0.828628],[2.649953,-6.919102,-7.535327,-9.787901,3.406004,1.045976,9.951572,-0.250229,-4.186350,5.792951,9.213696],[7.205238,-0.266699,-4.026073,6.698593,-7.572455,-8.567512,1.437073,-5.142182,6.620194,5.322293,2.821323]],[[-9.698495,2.128724,0.801928,-9.265489,-9.357004,-6.797049,1.126471,-7.296207,-0.846979,-0.087106,7.693553],[-6.091398,1.761624,5.187621,-3.619231,7.781837,6.543652,9.746451,5.142374,6.944603,8.478370,-0.986013],[-2.695951,1.910047,4.495594,-1.737484,7.969543,-1.017785,-7.891838,-5.289664,5.623447,9.227154,-6.652595],[6.852193,6.550531,-4.689586,-8.214375,3.891811,3.580410,3.406480,-6.176960,-5.153750,-2.830435,-7.034623],[-7.947347,6.431589,-4.034834,-3.554430,-8.790219,-4.975688,-3.965013,-7.045734,-7.616519,-7.003230,8.879890],[-1.923810,7.981691,1.226717,-6.765871,-1.740294,-0.123152,-1.716822,-4.224076,-3.344481,-1.160645,-4.371568]],[[2.823504,9.226265,8.396354,7.512404,3.931356,-9.613132,-5.824037,7.754973,-6.374778,-1.228647,8.136266],[9.672074,5.875307,-3.963561,5.744270,2.083898,-7.265875,-3.034588,-7.907825,-5.416187,1.026613,-0.112647],[-2.113293,-3.888110,4.932381,-2.526272,7.878560,-0.667632,8.636278,-3.624850,-6.292066,7.272594,-5.280993],[-9.757652,1.830994,9.368977,3.890152,2.497904,2.563102,-1.768857,-8.726899,1.923961,0.517018,-9.606859],[9.016031,8.055043,-9.599356,-3.040065,-7.332791,1.848099,9.125439,-7.764422,-8.978234,-7.951573,-5.648671],[-7.327038,4.957056,-8.470293,-1.582025,8.775640,-2.806000,3.942665,5.218408,0.766698,-6.122987,-9.738537]],[[8.770153,-6.751344,-9.894186,2.306157,-0.440431,1.844101,-4.150184,-6.863492,-3.465964,-4.433784,-2.064380],[-5.305058,8.760845,6.644093,-0.718264,9.310962,-8.985631,-6.940473,-5.392718,9.952701,6.689393,8.164451],[0.326537,-4.508920,8.332136,-1.864532,-9.521147,-3.549449,-8.480402,9.557364,5.832891,9.666680,4.840472],[-9.315345,5.279120,-2.531629,-5.086033,-8.827193,9.301716,8.932979,4.078032,-2.714664,-6.703713,4.989749],[-3.988242,-9.028343,8.074147,7.475771,8.736275,5.879541,-4.198496,3.652406,8.119257,-4.500622,5.963743],[3.285621,3.668784,-4.540668,-8.908637,-0.112320,5.576684,-3.833606,-6.390972,2.661180,3.820389,5.189959]],[[-8.222487,-7.989930,-2.515674,-2.128740,1.338423,1.195787,0.872867,-3.949427,6.080755,-9.353521,6.768013],[-0.333396,-1.302574,5.278734,-1.944840,4.323265,-8.213156,-5.853734,-6.053356,-9.044079,-4.916106,-7.207026],[2.571411,-2.035701,-7.078032,4.813316,9.635114,8.055718,7.701489,-7.972603,7.376222,-8.060744,6.806711],[7.020273,8.174931,7.587451,6.570467,2.176789,7.308466,9.734263,-4.847401,7.973415,-6.525424,-8.710420],[-5.821495,1.569126,-7.404062,8.631033,-2.582025,-4.623447,-8.863385,-0.794610,1.986733,-7.891037,2.016043],[-1.599747,8.719051,0.058037,4.835917,9.357887,-0.214074,3.299117,3.508233,5.356592,4.159825,8.740463]],[[9.808292,2.746584,-5.115153,6.856402,-9.446389,5.034870,-2.631363,5.245440,-4.962184,6.891492,-0.888888],[-7.576011,0.458474,1.013319,3.543467,-9.327833,-4.326045,0.802917,1.503009,-0.681609,1.493636,8.620463],[6.363267,7.453600,-1.734617,-9.046829,0.928955,-6.028929,-2.792357,-2.189438,-6.777644,2.925819,-4.700558],[1.790272,4.592949,8.478800,-0.217674,-3.581046,-6.409221,7.988302,-3.649547,5.794988,-7.508117,-7.365948],[5.731546,-9.844880,6.838653,7.486174,4.085340,-3.839639,-4.155568,0.045771,-6.689703,-3.672816,2.846030],[3.468501,-4.681799,7.075833,-6.787942,3.583864,-0.865204,-1.312044,0.953913,-8.784466,-5.162718,-2.948239]],[[-9.233764,5.988574,8.019498,8.576736,-3.899779,3.318307,0.102850,3.914697,-6.841719,-5.289197,9.265678],[6.290538,-4.155122,9.623319,-9.089457,6.706508,5.251749,6.233764,8.609515,7.368246,-0.460091,-6.248848],[4.650687,6.298637,-2.326023,9.229446,-7.613633,0.491132,-0.067836,-3.863580,-2.049743,6.920563,-7.883429],[-8.009952,-4.182035,5.891666,-7.630994,-8.787868,-9.251257,-5.392931,6.500519,-6.651225,-0.464894,-4.743446],[-2.121609,1.979517,2.344474,-2.058961,6.116812,8.697848,-0.410463,-2.831062,-9.169340,-5.866971,3.562142],[2.582121,-0.435454,-2.803063,3.970574,2.927236,9.863936,-3.747519,-4.975841,0.481370,-2.778914,3.292639]],[[6.433896,9.901378,-4.126386,-8.381368,-0.035534,9.221488,5.081864,8.179285,-6.378633,-9.602638,5.049012],[-8.163996,8.262247,-3.098108,-5.041669,-8.210719,8.721444,3.362268,-3.317314,9.656300,-8.690717,3.200016],[6.483309,-1.789498,-6.579469,8.879605,-0.014922,6.413721,0.444341,6.776933,6.043008,-4.413843,3.590023],[-4.684479,9.572090,5.959630,-0.830036,-8.597167,1.558708,-9.895303,4.146025,-1.509863,2.671604,-3.308567],[6.636121,1.499489,5.729554,7.084711,2.757768,-2.161555,-0.991008,-2.675459,0.792347,-5.423384,-3.238427],[-7.801418,-8.298175,1.100740,-4.108953,7.645183,6.112013,-9.591254,-5.715076,5.781275,3.175185,-2.680223]]], dtype = "float32")#candidate|6879|(15, 6, 11)|const|float32
uop_6880 = relay.asin(const_6879.astype('float32')) # shape=(15, 6, 11)
func_6056_call = mod.get_global_var('func_6056')
func_6057_call = mutated_mod.get_global_var('func_6057')
call_6892 = func_6056_call()
call_6893 = func_6056_call()
output = relay.Tuple([uop_6880,call_6892,])
output2 = relay.Tuple([uop_6880,call_6893,])
func_6899 = relay.Function([], output)
mod['func_6899'] = func_6899
mod = relay.transform.InferType()(mod)
output = func_6899()
func_6900 = relay.Function([], output)
mutated_mod['func_6900'] = func_6900
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4446_call = mod.get_global_var('func_4446')
func_4447_call = mutated_mod.get_global_var('func_4447')
call_6923 = relay.TupleGetItem(func_4446_call(), 0)
call_6924 = relay.TupleGetItem(func_4447_call(), 0)
func_4197_call = mod.get_global_var('func_4197')
func_4199_call = mutated_mod.get_global_var('func_4199')
const_6938 = relay.const(-10, dtype = "uint64")#candidate|6938|()|const|uint64
call_6937 = relay.TupleGetItem(func_4197_call(relay.reshape(const_6938.astype('uint64'), [])), 0)
call_6939 = relay.TupleGetItem(func_4199_call(relay.reshape(const_6938.astype('uint64'), [])), 0)
func_4197_call = mod.get_global_var('func_4197')
func_4199_call = mutated_mod.get_global_var('func_4199')
call_6944 = relay.TupleGetItem(func_4197_call(relay.reshape(const_6938.astype('uint64'), [])), 1)
call_6945 = relay.TupleGetItem(func_4199_call(relay.reshape(const_6938.astype('uint64'), [])), 1)
func_5863_call = mod.get_global_var('func_5863')
func_5864_call = mutated_mod.get_global_var('func_5864')
call_6954 = func_5863_call()
call_6955 = func_5863_call()
output = relay.Tuple([call_6923,call_6937,const_6938,call_6944,call_6954,])
output2 = relay.Tuple([call_6924,call_6939,const_6938,call_6945,call_6955,])
func_6972 = relay.Function([], output)
mod['func_6972'] = func_6972
mod = relay.transform.InferType()(mod)
mutated_mod['func_6972'] = func_6972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6972_call = mutated_mod.get_global_var('func_6972')
call_6973 = func_6972_call()
output = call_6973
func_6974 = relay.Function([], output)
mutated_mod['func_6974'] = func_6974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6220_call = mod.get_global_var('func_6220')
func_6222_call = mutated_mod.get_global_var('func_6222')
call_6981 = relay.TupleGetItem(func_6220_call(), 2)
call_6982 = relay.TupleGetItem(func_6222_call(), 2)
uop_6983 = relay.sqrt(call_6981.astype('float64')) # shape=(330,)
uop_6985 = relay.sqrt(call_6982.astype('float64')) # shape=(330,)
const_7006 = relay.const([2.282770,-0.364245,-2.536973,-0.680330,-3.945844,-3.511331,-3.720285,-9.663275,-8.268017,8.211500,0.775130,2.466997,0.701927,-8.684266,-0.783299,-8.491098,9.587727,1.055172,-1.941151,1.801504,-4.354689,3.996368,-1.800560,-1.035747,6.249980,2.290104,-2.610851,-9.482281,9.345567,-8.337423,-6.218746,1.338607,6.427956,8.937704,-8.716989,-4.609673,2.745384,-1.180665,1.530566,-9.776663,-8.060592,9.202416,-3.791078,-5.983808,1.276273,0.886302,7.389522,3.914596,9.115500,2.056171,7.672928,8.231290,3.137280,-9.684071,-0.568172,4.833341,8.644627,-1.409599,-6.043743,7.580060,4.213045,1.513681,8.992109,-8.318564,-5.815570,4.550525,0.116346,-1.388527,-6.932825,-8.960014,1.202085,1.640592,-9.705772,-3.787895,0.924163,-3.747825,-7.543684,2.597010,1.914896,6.192909,3.585485,6.315450,8.361795,-8.245113,3.397767,-9.998695,-0.963013,6.425162,8.202428,-0.751604,5.914560,-8.756890,-3.103652,0.549528,0.691151,4.337061,0.388836,7.758008,-2.045322,-9.587592,-6.062889,-3.272891,1.869178,-5.606605,2.942606,0.334607,4.609365,1.456178,8.915098,8.550184,0.139234,-2.606330,-7.416478,9.541132,8.382621,-7.594849,-0.684912,-3.038944,-6.288859,3.139094,3.773573,-8.298923,-9.159413,5.507536,-0.863347,-4.854276,0.757758,7.810635,-6.284525,2.921277,-3.303703,-5.901998,-4.399890,-6.878400,8.106837,0.985548,-4.055867,1.041306,8.878063,9.316271,-1.240860,0.888607,-4.136247,0.889121,5.809449,-8.068409,-5.122758,-5.533845,4.755250,5.838588,-7.184603,-9.149772,-9.918816,3.637605,-6.238502,1.819679,-5.174291,-8.766259,2.531020,-1.117195,-0.793733,8.562403,9.365338,-7.527199,-6.166759,4.707618,-3.411947,-1.128982,6.430886,-4.623867,-4.443142,-4.814623,-0.790912,3.134875,-3.080771,-8.257670,-7.970994,7.609084,0.359008,-4.118267,8.514809,3.756993,0.668615,-1.852028,2.986283,-9.853985,3.121469,6.049035,-9.445578,4.415298,-4.786308,0.168560,4.910131,-3.744930,-5.528219,2.659446,-0.204758,9.932978,-7.805246,-8.340743,-5.707479,5.258804,-0.547424,3.657974,1.726692,7.797783,-2.623199,-4.610001,-9.319220,1.550539,5.355195,-2.924887,6.408461,-3.497319,-0.070460,5.744545,9.029915,-3.363243,8.651323,-2.646213,-4.165257,-1.698864,4.053625,4.604673,0.427238,-5.600154,1.668980,-1.610428,6.018627,-6.195699,-6.093067,-9.618800,-0.369312,3.014498,2.985758,-6.251356,9.774767,-3.679076,4.908314,-4.772841,-8.706967,3.563269,-8.290785,-1.323533,-6.138013,5.158285,5.943274,3.556195,-2.854153,3.774989,-2.257856,3.762929,5.512872,-7.773052,3.920502,2.769591,-9.881407,9.400672,8.708396,-6.460949,-0.026097,-6.724044,7.639976,5.120197,-4.660926,9.014715,-2.772292,-3.002898,0.311395,-9.820410,-5.101338,-9.426093,4.853208,3.935885,-6.877430,-5.366561,4.967786,-7.414747,-3.168093,-7.489491,-0.594672,-9.513288,-3.475561,-9.078691,4.859604,4.769853,2.861031,-6.083609,8.049648,0.225382,7.872126,1.903587,-2.162914,-0.869615,4.431841,5.819697,-6.576171,4.880201,-5.164565,-2.639916,-8.643577,8.955822,-2.168167,-0.979164,9.852142,9.493827,-6.246163,8.195496,-6.316800,5.846398,-3.448608,5.521066,-9.824229,-0.775365,6.763624,8.393313,-9.448207,4.868280,-1.425299,-1.013349,6.064416,5.149427,-2.155441,-9.657736,-4.908490,4.490705,-1.349261,0.398132,6.091443,4.914236], dtype = "float64")#candidate|7006|(330,)|const|float64
bop_7007 = relay.subtract(uop_6983.astype('uint32'), relay.reshape(const_7006.astype('uint32'), relay.shape_of(uop_6983))) # shape=(330,)
bop_7010 = relay.subtract(uop_6985.astype('uint32'), relay.reshape(const_7006.astype('uint32'), relay.shape_of(uop_6985))) # shape=(330,)
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_7026 = relay.TupleGetItem(func_4161_call(), 0)
call_7027 = relay.TupleGetItem(func_4163_call(), 0)
func_3966_call = mod.get_global_var('func_3966')
func_3969_call = mutated_mod.get_global_var('func_3969')
const_7037 = relay.const([-8.528782,-5.039882,-5.415668,5.691914,-4.671229,9.365833,6.682653,-5.382797,-1.805724,-2.035737,1.652964,5.179492,0.857685,0.406982,7.934976,-6.529088,-9.352120,5.106084,9.230315,7.861484,4.770719,6.075295,8.281951,-6.601917,8.551103,2.590458,2.748102,-2.692672,6.867121,3.798391,-1.139796,-3.465935,-8.296421,9.766626,5.171385,1.833136,5.589479,1.868470,4.331400,4.424334,-4.715752,1.498117,7.709671,8.818976,-8.421637,6.482616,-5.802348,9.735074,0.990553,-4.020946,-9.358604,8.303912,-7.200704,-1.737006,8.258344,-9.518281,9.481231,5.681136,8.497970,6.986893,2.360772,-7.190344,-0.099049,-4.497596], dtype = "float64")#candidate|7037|(64,)|const|float64
call_7036 = relay.TupleGetItem(func_3966_call(relay.reshape(const_7037.astype('float64'), [4, 4, 4])), 1)
call_7038 = relay.TupleGetItem(func_3969_call(relay.reshape(const_7037.astype('float64'), [4, 4, 4])), 1)
output = relay.Tuple([bop_7007,call_7026,call_7036,const_7037,])
output2 = relay.Tuple([bop_7010,call_7027,call_7038,const_7037,])
func_7039 = relay.Function([], output)
mod['func_7039'] = func_7039
mod = relay.transform.InferType()(mod)
output = func_7039()
func_7040 = relay.Function([], output)
mutated_mod['func_7040'] = func_7040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mod.get_global_var('func_6016')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_7050 = relay.TupleGetItem(func_6016_call(), 1)
call_7051 = relay.TupleGetItem(func_6017_call(), 1)
uop_7066 = relay.asinh(call_7050.astype('float64')) # shape=(196,)
uop_7068 = relay.asinh(call_7051.astype('float64')) # shape=(196,)
output = relay.Tuple([uop_7066,])
output2 = relay.Tuple([uop_7068,])
func_7075 = relay.Function([], output)
mod['func_7075'] = func_7075
mod = relay.transform.InferType()(mod)
mutated_mod['func_7075'] = func_7075
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7075_call = mutated_mod.get_global_var('func_7075')
call_7076 = func_7075_call()
output = call_7076
func_7077 = relay.Function([], output)
mutated_mod['func_7077'] = func_7077
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4392_call = mod.get_global_var('func_4392')
func_4394_call = mutated_mod.get_global_var('func_4394')
call_7095 = relay.TupleGetItem(func_4392_call(), 3)
call_7096 = relay.TupleGetItem(func_4394_call(), 3)
func_2690_call = mod.get_global_var('func_2690')
func_2692_call = mutated_mod.get_global_var('func_2692')
const_7110 = relay.const([-4.202871,-7.040445,-8.470182,6.960763,-5.813326,-1.613133,1.287724,7.409102,4.888181,-1.559003,-3.285997,6.400972,3.389922,5.979804,-1.703273,3.932824,9.361129,5.346690,5.202834,0.560832,1.145262,-3.008607,-7.003912,-7.340625,-5.700931,7.101194,4.656337,-5.003644,-6.779522,7.480868,7.559013,-4.283721,-3.633908,4.124684,-2.454561,-1.044485,-1.568762,-1.624315,-8.931004,-6.523663,0.615997,-7.617244,-9.785528,7.022358,-6.177126,4.450022,-3.957675,-8.685831,4.993543,-8.125523,-2.005868,1.806935,-1.081473,-1.479691,-7.167363,4.553041,-0.380063,-7.061507,-3.095408,-3.375066,-4.051577,0.195969,2.996611,-9.943567,8.831701,-4.399356,6.979822,-5.511723,-9.935540,-9.156716,1.642548,-4.779801,1.752324,-9.269225,4.737086,3.125589,-7.897007,-4.684025,-5.564790,-5.708781,0.870488,-1.057379,1.710985,-4.915505,8.586613,-7.927771,-6.110411,-1.114691,-8.574124,-6.049310,9.387486,0.921813,-3.979267,1.952170,-2.534749,-1.475419,7.601092,-8.579869,4.086179,-8.980045,-5.004303,3.088739,0.528140,-1.435384,-0.187317,5.540750,-9.138385,2.379518,-4.954865,-0.423274,-6.210625,7.432143,5.411413,-8.246055,-1.691317,2.757150,-6.280990,-1.968418,-9.892967,7.849491,3.278925,2.748981,1.025325,-2.290341,9.716593,6.058949,3.500748,2.289788,-2.377832,5.616643,-8.749200,6.549703,6.655732,7.050245,7.565348,-1.406262,5.436624,-5.946261,-9.892472,9.646541,0.686613,4.613097,9.782793,8.461517,3.874444,-6.265647,8.122399,-4.052884,4.805193,7.941864,-8.191730,7.267819,4.126044,-9.616006,-9.997084,5.183103,-7.029426,-4.149433,-6.482403,-3.581489,-9.521721,9.305811,-4.872588,-7.706681,6.365121,-4.667122,6.872617,-1.919727,-6.653222,-9.903877,-2.588478,-8.821434,4.586581,-0.427313,4.961996,5.889336,8.220007,4.254912,-4.535496,-7.564855,1.882325,3.441021,-0.205960,9.119672,-2.305201,-9.875361,-5.310611,-1.567559,4.319531,5.862095,7.887176,5.953013,1.032546,-8.608487,-5.438467,-7.134278,-3.184433,2.163483,7.763966,8.984750,-2.690628,-1.265417,-1.870676,-1.534317,4.634613,-3.925870,-4.828380,5.529661,9.007172,1.484567,-8.759197,3.179862,7.254233,-6.675995,-3.435541,9.549214,9.468004,2.986966,-9.515259,2.744555,5.806437,-2.449854,8.071346,9.385272,4.193986,3.162789,-8.592629,-7.854487,4.718898,-0.985092,-0.999324,-6.047971,2.095653,-6.684623,-7.806470,7.426839,3.936622,1.325028,-9.215461,2.160810,-2.115770,1.842924,-8.164516,-5.805117,-8.089592,8.957484,-7.965020,-2.522924,3.432401,3.356636,3.418531,7.865486,-4.369376,8.253976,0.445382,3.517634,4.720457,2.964487,-2.770271,7.591339,-2.278407,-9.327299,1.016964,3.046181,4.589258,-8.483317,5.486306,9.316531,-8.267930,-1.733155,-1.705002,9.658921,0.791982,2.061160,2.842559,-4.884037,8.923872,-7.327843,-2.353324,3.503938,0.057429,-7.362655,7.976174,-9.208425,-2.441752,0.794713,-4.733447,7.904020,8.674073,-1.574332,5.743125,6.342204,9.684129,3.838184,2.058363,4.163568,-5.473166,1.502676,8.867033,-6.759876,3.643924,-1.469477,-8.285875,0.661822,-4.265287,-1.265047,-3.118253,-1.803649,-0.071485,9.493322,-3.598608,-8.616136,-1.501045,-1.351713,2.068513,-1.516475,6.053478,7.865110,-7.287317,1.922455,-6.031034,-6.423041,0.864875,-1.870444,8.714859,6.696377,-9.054252,-4.509964,-3.808857,-9.655719,3.522039,-6.670931,-7.648046,1.583714,-2.802483,8.187600,-8.972654,0.475607,0.946728,8.059804,-4.236456,-1.058401,-8.836804,6.282074,-4.416133,9.182576,-5.795358,-4.978004,2.611390,7.845157,-8.657421,-9.433535,3.518225,6.601776,1.294846,3.309557,5.885906,-1.297555,-8.120942,-7.469669,6.369247,4.526805,1.022714,-4.180969,2.496064,-0.546384,4.057731,-2.738268,9.248081,6.527755,2.508158,-0.119557,-7.363053,-5.343600,-3.485173,1.347519,-1.318011,-8.482973,-0.810549,-4.838329,-8.926955,-7.333787,0.925822,-3.651641,-6.734093,0.512928,-1.020292,-9.623730,-4.743212,-8.394778,-5.410321,0.622733,-9.581959,-5.817042,-1.962484,-0.606675,-2.836739,-1.914294,1.177124,-8.185980,-4.279591,0.414557,5.767445,-7.841128,0.354351,-2.084092,-7.173453,-8.445214,3.336160,-8.926443,-4.807842,2.443499,4.866986,-6.548641,-4.488880,-4.959640,5.314270,-7.563550,6.705581,-6.882444,1.178231,-8.964687,-9.796721,-8.338032,-7.223558,-8.425299,7.983284,0.138326,8.607587,8.222641,-3.674035,2.074314,-4.623625,-9.955986,-3.707616,-0.147542,3.505327,6.089379,0.858721,-3.892097,-3.343711,-8.288137,-8.396455,-0.873649,-1.700605,8.976469,3.407548,-5.565857,-0.542313,-6.533940,4.560390,-9.098487,7.467359,3.068776,8.145498,-9.626877,-5.675903,5.165197,-1.024874,-9.726062,-5.726925,7.245361,-6.755882,9.257627,-9.159623,0.750574,-5.487074,5.747446,-4.681721,-5.056823,-3.727730,2.217015,-5.373321,9.740524,9.511823,1.388706,1.046807,8.793601,-3.585061,8.769862,-7.150922,-5.779647,-8.422579,2.950322,-3.358490,0.993325,-9.614284,0.517877,7.850101,-2.293157,9.338203,-5.072236,-5.858598,-5.217738,-2.022255,-2.074446,7.068795,4.763277,-0.640935,-3.558843,7.479571,5.380892,-9.781487,-0.035873,7.649535,-2.587752,-6.559696,8.790545,3.607418,1.721989,9.793834,-0.468521,-5.663995,2.020248,-5.885546,-4.714539,5.208525,-2.617521,-1.768570,5.706132,2.959808,-2.001736,3.512967,-3.776479,-5.458151,-1.786210,0.828772,-2.660552,7.240796,-8.473072,9.889159,9.660331,-1.768078,-4.142183,-9.313399,-4.355949,-6.340874,4.552970,9.636720,-0.298199,2.658168,4.041315,7.651876,-7.870841,4.672832,7.654391,4.498660,8.783574,-3.987643,7.069254,-8.383796,-0.115640,-6.762106,-8.484420,4.821927,8.589408,3.379788,-2.938334,-2.591874,6.143836,3.337764,-8.201352,1.671501,7.537382,-9.184654,-7.977145,-5.623959,8.837041,-9.867451,-9.734241,-6.129115,-8.122595,3.265396,-9.215038,-5.995589,3.222571,-7.850325,-6.597978,-8.647803,7.664243,-5.411994,3.982745,-8.573099,-1.352031,-6.424678,3.095420,-7.113434,-8.212259,-5.170155,-0.461385,6.429081,-0.625892,4.297009,2.092271,-7.056626,-7.143985,3.475127,-0.401459,-0.356640,-4.126891,3.158407,5.678343,-9.377877,8.975352,4.871675,5.834546,-9.620692,-5.055689,-8.899265,5.662404,9.484996,-8.227767,5.140531,-1.775852,0.519643,-2.745497,-5.164650,-2.640411,6.193865,6.933588,5.684632,9.543763,2.826522,-4.800072,-1.410705,-0.209474,6.921933,-3.110118,9.037240,3.546730,9.148651,-8.098659,9.615466,-6.708243,-5.618141,5.793328,-5.682014,4.259021,1.474762,-8.417032,2.053240,1.109559,7.154150,0.393730,-1.554240,2.283204,-9.353708,-5.433428,-5.712576,6.795432,-3.659557,7.087932,9.375333,-9.699855,-0.210733,-9.923308,-5.359832,-2.395441,1.978508,-5.760817,-2.308424,-9.122931,2.984074,9.627927,0.319645,0.353845,8.778988,5.965896,7.623947,7.021223,-6.089880,-5.133743,6.192615,-7.712565,-6.209186,5.826209,-6.353412,-5.289155,-2.866701,2.697535,-5.402544,4.893925,2.204205,-5.257238,8.904152,-0.970579,-1.785230,-8.100525,-5.147373,-2.096433,7.906216,6.568012,8.006622,-7.982387,7.298802,-8.985170,-9.936474,-7.240587,-2.590576,-0.693335,-6.150047,4.939561,4.478063,5.201164,-1.254290,9.016105,7.843785,6.811338,-1.167707,-4.572887,7.808364,6.038416,-3.418046,-8.167391,-0.043781,-2.392312,4.415057,5.376662,2.471205,-5.069975,1.216849,-0.783687,3.786388,8.094716,7.131304,1.292861,-2.137309,-0.967175,-6.361817,1.611227,9.085739,-8.242749,2.835289,-4.081332,-5.194988,-6.397460,-3.787001,-7.156740,-6.400657,3.670039,5.128935,7.046157,5.595742,-9.260823,-8.996782,-1.611589,-5.164284,-1.114383,7.448608,-8.015222,-6.375304,6.098327,9.448127,-5.794401,6.088469,9.149833,-9.674338,4.820225,-3.840466,-2.449601,4.477774,8.995472,8.802129,-3.551236,-4.221935,-2.792706,0.850065,9.209142,8.302725,0.945603,1.779381,6.532956,5.836948,0.344626,-4.329533,-2.849267,-7.894612,0.171780,9.688068,-0.995052,5.306105,-5.967051,-8.491236,4.239689,0.450475,9.808745,-4.829950,8.891105,5.017347,4.587614,-3.433930,5.127873,5.940491,-9.849497,-6.169143,-8.269831,7.185722,3.323340,-3.264402,2.325325,2.006355,-5.596216,6.147634,2.498670,-0.489411,-0.497692,-6.188240,-9.080252,6.971056,-9.139263,6.264740,0.232652,-5.588135,2.021046,1.282170,-5.276875,7.767198,-3.998070,-0.331051,3.448004,5.444541,7.356370,0.124379,2.327626,-7.692671,0.736810,9.318850,-7.918164,2.672065,-7.926766,-4.311912,2.081697,-8.126445,-6.148351,6.427611,8.433632,-3.243516,-6.559175,-2.857675,-4.922797,4.838561,4.593887,-8.646653,-5.857147,8.770548,-5.257813,-0.194260,9.645035,-3.485854,1.665185,6.122878,-0.189888,-1.793836,4.645757,-5.652694,8.408317,1.138271,-1.324585,1.057690,4.232919,-6.259998,-7.040452,3.722749,2.846967,-5.112650,1.796253,6.304442,0.199194,-9.511456,0.542810,-8.944935,1.278220,7.673746,1.896262,-7.836802,3.459128,-1.520259,9.199325,5.102937,1.483367,-7.082583,3.923840,-4.097746,2.748119,2.804049,-0.245659,4.174078,-3.368425,0.459188,9.671399,-1.802957,-3.156847,4.618865,6.582043,-5.855330,-7.189746,9.023531,0.279669,-9.512253,5.278821,8.594378,8.885901,1.950404,6.620592,5.173390,-3.951066,6.781734,-1.132825,4.869651,8.303027,7.891039,-9.296244,8.286537,-5.280785,-0.171546,6.567524,8.674163,-7.064845,-4.532283,-0.095109,3.461747,-4.599651,4.704056,6.463997,-4.605228,8.600131,-6.542782,-4.166392,4.323295,0.451273,-4.699994,0.249341,4.430273,-7.877583,8.555251,0.203737,-4.161609,4.885843,-3.237785,-2.601564,7.754114,-8.278896,5.021350,9.818421,-7.978370,-5.802133,3.966840,-7.951892,3.504006,9.819871,3.574648,9.401448,-8.152735,-9.066861,7.242764,0.019054,-7.074847,-8.463780,-7.457643,-1.514294,-0.412288,-5.668207,-2.327496,-7.736028,6.665087,-9.652756,-4.171636,-6.249508,-8.709122,-6.453089,9.657936,-9.470271,6.364947,7.256773,-6.376819,-9.911180,-3.722264,-2.022185,-9.475717,3.616125,-0.238680,-4.123661,6.094369,6.940549,0.891636,-0.067288,1.618383,-4.115313,9.751517,2.415379,0.872506,6.144655,-1.600747,-9.323539,-9.489011,-0.877172,0.564611,-1.286698,-9.711179,-3.679627,8.397153,-3.762981,0.107557,1.122960,8.854555,-4.622704,3.882667,-2.224079,-1.385463,-9.582076,-9.047375,1.578539,3.977110,9.151906,-5.736219,-6.017495,-3.185704,-4.933172,0.906484,-7.129346,-0.520370,-8.383400,-0.856112,0.647792,5.441091,-1.307554,4.815315,-9.036359,4.354837,-3.265091,8.324403,4.629416,6.998175,-7.572075,7.869929,0.567433,9.017367,7.551841,1.891020,-7.802379,-8.646288,-1.308872,3.868657,7.145783,-3.585993,-0.382338,-5.227450,5.860027,9.345338,-6.913997,1.954772,5.062497,8.216040,-0.222793,7.923047,-1.264694,0.873495,4.676306,9.970663,5.384256,-5.985628,1.107845,8.322743,0.215731,-0.906865,-6.479910,9.256691,0.233855,-1.495761,8.897707,-6.454238,-6.944644,2.323861,-5.435007,-3.934825,-7.970232,8.738571,5.841339,2.924970,-4.722137,-6.847139,8.013840,-3.083338,0.361561,-4.862339,-6.872935,-2.710580,9.424399,8.945948,-8.699917,8.790049,-4.327566,-2.219654,-8.283038,-5.016938,-7.537838,1.478708,4.438727,-9.242266,-7.946869,6.424785,8.869876,9.285185,4.565963,0.527392,-5.934123,0.978361,7.649757,-5.086291,9.825546,-0.493974,-6.405557,7.050534,2.687567,-1.515823,-6.087287,2.080948,3.950434,-3.820127,9.198856,-6.009167,8.489520,-0.590847,4.294071,-2.032089,-6.016450,-4.123543,-8.112296,-0.478123,8.490961,2.379533,-8.839561,-4.175863,-6.620581,1.946059,-5.244349,0.874060,6.257070,-0.362577,3.222627,1.727021,-8.503494,-3.896668,6.871429,-5.548071,2.965979,-1.842084,-0.410482,9.417031,-4.425326,-6.642174,-8.174906,-8.766807,-2.777299,-1.535572,5.099722,2.129473,-3.371413,-4.972403,-3.076872,-7.274090,-5.198257,2.181714,1.026725,9.917616,0.696434,-1.415544,-6.601319,0.037900,-3.403999,-4.524219,3.350294,4.555815,2.747151,9.230821,-0.163989,6.342302,4.627073,-4.825161,6.042497,-2.513033,9.988869,-3.356435,6.016707,-4.320357,9.871495,3.585862,-8.137697,-6.573863,-6.348511,2.451311,-6.239530,6.538036,-8.252852,-7.743864,-7.163976,-4.285290,-4.648036,1.671421,1.331982,8.494516,-8.722064,7.529800,5.741242,-9.682545,-0.290080,-1.468909,-3.356508,-0.003674,7.901499,-0.806729,5.127138,-0.960444,5.119848,7.677685,9.884579,7.333528,5.096116,3.030946,7.892158,-7.192992,4.413717,-1.092338,-2.958049,-9.063417,2.287579,4.570898,-1.363212,-7.310729,3.246304,-3.175596,-0.195623,-2.429608,-1.654342,-1.988877,4.817010,6.833626,-9.287611,-3.072920,-4.169640,-8.114548,7.829506,-0.263069,8.110499,4.661384,-3.541790,-6.648169,-9.778235,-9.827673,-8.775280,-5.929648,8.016428,-8.088673,0.456486,7.940949,-0.325706,8.204896,0.401522,4.753872,4.807908,-3.480153,-9.236483,-5.963644,5.936229,3.916242,-3.419194,-7.506356,-7.152003,9.137980,4.892808,8.453804,-8.658908,-8.483657,1.073404,1.484526,-2.184736,-0.949331,-7.791831,5.766764,-8.625735,3.830146,-9.683207,-7.906386,-1.538571,-5.067508,-0.249463,7.818153,6.504383,1.837021,6.352760,4.703289,-4.952923,-0.102375,-2.023861,-4.710009,0.733768,8.712063,3.217458,-5.225738,7.374368,-7.235799,-7.953305,7.149793,6.476219,-6.663062,0.367938,-6.940928,-3.095251,-4.863265,9.052574,1.591431,-4.631505,-8.546769,-3.042147,2.771741,-5.834892,-0.890563,-8.109912,-3.945174,-4.749711,-9.175364,-0.004263,7.580521,-4.823030,7.653983,-3.834112,-7.937803,-8.097362,5.983193,6.502861,-1.312316,-7.445989,-3.814044,-7.679942,-4.735894,-4.738017,-4.722210,0.205319,7.566717,7.227724,3.817672,6.050377,-5.786688,2.745061,-1.202997,1.251847,-7.275421,1.174529,-9.344838,4.488941,-4.315680,9.411844,-1.761191,-8.458476,-6.457782,-8.970089,-9.913680,7.135362,9.380464,-4.995564,5.839450,0.667808,3.961320,2.980167,-0.774486,-8.716507,-1.914576,-7.969075,-0.233024,-9.716489,-6.853713,8.557581,-9.784051,-2.100323,1.127803,1.083661,-5.409190,-3.554442,-2.252031,4.910499,-3.620182,9.351774,8.555037,7.148577,4.642944,6.205593,-2.317579,-4.919056,1.169931,0.538578,7.665037,-2.835645,8.031171,3.344818,-8.007084,-4.724090,-3.849070,6.581323,9.149941,1.406844,-6.043471,8.992836,2.251278,1.317069,-9.416154,8.572540,0.504918,0.944414,-9.211881,-4.572313,3.112956,7.531566,7.106692,4.713086,2.079739,3.878900,5.921611,1.345082,-8.784180,-5.224927,6.380572,-5.986536,3.732868,4.774191,-4.604587,-4.817317,-7.925142,1.358144,-9.808411,7.185720,1.769207,9.498613,4.609378,-0.455680,8.802196,-5.014149,-0.108245,8.070597,-3.333531,-6.331518,4.057524,-5.506336,-1.774996,8.276827,-2.226853,4.990179,7.301977,6.808130,3.238987,-5.744664,-0.272663,0.651407,7.268984,-8.370589,9.488985,-2.512688], dtype = "float64")#candidate|7110|(1456,)|const|float64
call_7109 = func_2690_call(relay.reshape(const_7110.astype('float64'), [13, 8, 14]))
call_7111 = func_2690_call(relay.reshape(const_7110.astype('float64'), [13, 8, 14]))
output = relay.Tuple([call_7095,call_7109,const_7110,])
output2 = relay.Tuple([call_7096,call_7111,const_7110,])
func_7113 = relay.Function([], output)
mod['func_7113'] = func_7113
mod = relay.transform.InferType()(mod)
output = func_7113()
func_7114 = relay.Function([], output)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5378_call = mod.get_global_var('func_5378')
func_5379_call = mutated_mod.get_global_var('func_5379')
call_7126 = func_5378_call()
call_7127 = func_5378_call()
output = relay.Tuple([call_7126,])
output2 = relay.Tuple([call_7127,])
func_7132 = relay.Function([], output)
mod['func_7132'] = func_7132
mod = relay.transform.InferType()(mod)
mutated_mod['func_7132'] = func_7132
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7132_call = mutated_mod.get_global_var('func_7132')
call_7133 = func_7132_call()
output = call_7133
func_7134 = relay.Function([], output)
mutated_mod['func_7134'] = func_7134
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7151 = relay.const([[[7,-4,6,-9,-5,4,4,4,-4,9,4,2,-2,-6],[3,2,-6,4,-8,-3,-9,10,-10,1,-3,-2,6,10]],[[4,-2,8,8,2,-5,7,1,4,-3,-8,-6,5,-5],[4,8,1,-5,-3,2,5,6,-5,9,-10,2,7,6]],[[8,4,7,9,1,9,-5,1,-8,3,4,1,-6,-2],[10,6,1,9,-1,8,-10,-8,-7,8,-4,9,5,-1]],[[-2,8,3,2,-6,-4,9,1,-8,-8,-5,-2,-7,8],[8,7,-4,-4,8,5,-8,1,2,9,-10,-6,-3,-6]],[[7,4,-5,9,-3,8,-10,-5,1,-8,-9,-2,-3,-6],[7,9,-5,-3,-2,-2,5,6,5,6,9,-9,-10,-7]],[[-1,1,4,4,-3,-2,9,-1,5,2,1,6,-1,-10],[7,-5,-2,-6,8,-8,7,5,-5,10,4,-10,9,6]],[[-2,-10,6,9,6,6,7,3,5,10,4,2,2,-4],[-9,-3,-9,-1,-10,4,-8,-8,-6,9,-10,-3,-10,4]],[[-6,-5,1,5,-2,-6,9,-8,2,-1,10,-10,-10,-7],[-8,4,-9,9,8,-1,-2,-3,-9,-7,-9,-9,-8,-9]],[[4,9,-7,5,6,8,-8,4,-8,-3,10,-9,-8,-9],[-9,-5,4,-4,8,9,-3,-8,5,-3,3,-1,-5,3]]], dtype = "uint16")#candidate|7151|(9, 2, 14)|const|uint16
const_7152 = relay.const([[[-1,-7,4,-6,4,-5,-5,-9,-9,7,-4,-5,-1,-5],[10,8,-8,4,6,-8,-6,-7,3,2,-7,-4,-9,10]],[[-8,10,2,1,5,-9,-5,-3,-1,-4,4,-8,4,-2],[1,-5,-6,6,7,7,5,2,4,-1,-6,1,2,3]],[[-1,10,-6,10,-2,-9,6,-10,1,-10,-9,-1,-7,-5],[2,-4,-4,7,-1,-1,7,-3,-5,3,7,2,-6,1]],[[3,-2,-5,-10,-3,10,-5,-7,2,-5,-5,4,4,7],[6,5,7,6,6,-2,4,2,-2,2,-1,10,5,-7]],[[9,1,6,-7,-5,-5,-1,-1,9,-4,4,-5,-3,2],[-9,9,5,-3,7,-3,3,5,-7,8,-10,6,-8,-1]],[[-4,-9,2,-10,9,9,5,10,2,-1,2,6,10,7],[1,-9,1,-9,-9,3,6,5,5,-7,-3,-9,-8,8]],[[-5,5,3,4,-5,8,-3,1,-4,-9,4,-10,-6,3],[-2,-1,-5,6,2,1,-2,-9,-1,-4,-9,-6,1,-3]],[[2,1,6,-4,8,-9,7,-8,-1,6,9,9,-5,2],[-8,4,-10,8,7,-7,10,-5,-7,8,10,-2,-3,7]],[[-3,-3,6,4,4,-2,-2,6,-2,-10,4,7,-1,-2],[-9,2,2,6,5,-3,-10,10,1,-5,-4,4,-3,1]]], dtype = "uint16")#candidate|7152|(9, 2, 14)|const|uint16
bop_7153 = relay.bitwise_or(const_7151.astype('uint16'), relay.reshape(const_7152.astype('uint16'), relay.shape_of(const_7151))) # shape=(9, 2, 14)
output = relay.Tuple([bop_7153,])
output2 = relay.Tuple([bop_7153,])
func_7166 = relay.Function([], output)
mod['func_7166'] = func_7166
mod = relay.transform.InferType()(mod)
mutated_mod['func_7166'] = func_7166
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7166_call = mutated_mod.get_global_var('func_7166')
call_7167 = func_7166_call()
output = call_7167
func_7168 = relay.Function([], output)
mutated_mod['func_7168'] = func_7168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4718_call = mod.get_global_var('func_4718')
func_4719_call = mutated_mod.get_global_var('func_4719')
call_7203 = relay.TupleGetItem(func_4718_call(), 1)
call_7204 = relay.TupleGetItem(func_4719_call(), 1)
func_6220_call = mod.get_global_var('func_6220')
func_6222_call = mutated_mod.get_global_var('func_6222')
call_7215 = relay.TupleGetItem(func_6220_call(), 2)
call_7216 = relay.TupleGetItem(func_6222_call(), 2)
func_2898_call = mod.get_global_var('func_2898')
func_2901_call = mutated_mod.get_global_var('func_2901')
var_7230 = relay.var("var_7230", dtype = "uint64", shape = (1, 240))#candidate|7230|(1, 240)|var|uint64
call_7229 = relay.TupleGetItem(func_2898_call(relay.reshape(var_7230.astype('uint64'), [8, 6, 5])), 2)
call_7231 = relay.TupleGetItem(func_2901_call(relay.reshape(var_7230.astype('uint64'), [8, 6, 5])), 2)
func_4780_call = mod.get_global_var('func_4780')
func_4783_call = mutated_mod.get_global_var('func_4783')
var_7236 = relay.var("var_7236", dtype = "float64", shape = (245,))#candidate|7236|(245,)|var|float64
var_7237 = relay.var("var_7237", dtype = "uint16", shape = (650,))#candidate|7237|(650,)|var|uint16
call_7235 = relay.TupleGetItem(func_4780_call(relay.reshape(var_7236.astype('float64'), [35, 7]), relay.reshape(var_7237.astype('uint16'), [10, 13, 5]), ), 2)
call_7238 = relay.TupleGetItem(func_4783_call(relay.reshape(var_7236.astype('float64'), [35, 7]), relay.reshape(var_7237.astype('uint16'), [10, 13, 5]), ), 2)
output = relay.Tuple([call_7203,call_7215,call_7229,var_7230,call_7235,var_7236,var_7237,])
output2 = relay.Tuple([call_7204,call_7216,call_7231,var_7230,call_7238,var_7236,var_7237,])
func_7239 = relay.Function([var_7230,var_7236,var_7237,], output)
mod['func_7239'] = func_7239
mod = relay.transform.InferType()(mod)
mutated_mod['func_7239'] = func_7239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7239_call = mutated_mod.get_global_var('func_7239')
var_7241 = relay.var("var_7241", dtype = "uint64", shape = (1, 240))#candidate|7241|(1, 240)|var|uint64
var_7242 = relay.var("var_7242", dtype = "float64", shape = (245,))#candidate|7242|(245,)|var|float64
var_7243 = relay.var("var_7243", dtype = "uint16", shape = (650,))#candidate|7243|(650,)|var|uint16
call_7240 = func_7239_call(var_7241,var_7242,var_7243,)
output = call_7240
func_7244 = relay.Function([var_7241,var_7242,var_7243,], output)
mutated_mod['func_7244'] = func_7244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6816_call = mod.get_global_var('func_6816')
func_6818_call = mutated_mod.get_global_var('func_6818')
call_7294 = func_6816_call()
call_7295 = func_6816_call()
output = relay.Tuple([call_7294,])
output2 = relay.Tuple([call_7295,])
func_7302 = relay.Function([], output)
mod['func_7302'] = func_7302
mod = relay.transform.InferType()(mod)
mutated_mod['func_7302'] = func_7302
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7302_call = mutated_mod.get_global_var('func_7302')
call_7303 = func_7302_call()
output = call_7303
func_7304 = relay.Function([], output)
mutated_mod['func_7304'] = func_7304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5872_call = mod.get_global_var('func_5872')
func_5874_call = mutated_mod.get_global_var('func_5874')
call_7342 = relay.TupleGetItem(func_5872_call(), 0)
call_7343 = relay.TupleGetItem(func_5874_call(), 0)
func_6972_call = mod.get_global_var('func_6972')
func_6974_call = mutated_mod.get_global_var('func_6974')
call_7364 = relay.TupleGetItem(func_6972_call(), 1)
call_7365 = relay.TupleGetItem(func_6974_call(), 1)
bop_7386 = relay.maximum(call_7342.astype('float32'), relay.reshape(call_7364.astype('float32'), relay.shape_of(call_7342))) # shape=(14, 2, 7)
bop_7389 = relay.maximum(call_7343.astype('float32'), relay.reshape(call_7365.astype('float32'), relay.shape_of(call_7343))) # shape=(14, 2, 7)
func_5378_call = mod.get_global_var('func_5378')
func_5379_call = mutated_mod.get_global_var('func_5379')
call_7396 = func_5378_call()
call_7397 = func_5378_call()
output = relay.Tuple([bop_7386,call_7396,])
output2 = relay.Tuple([bop_7389,call_7397,])
func_7401 = relay.Function([], output)
mod['func_7401'] = func_7401
mod = relay.transform.InferType()(mod)
output = func_7401()
func_7402 = relay.Function([], output)
mutated_mod['func_7402'] = func_7402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3864_call = mod.get_global_var('func_3864')
func_3866_call = mutated_mod.get_global_var('func_3866')
call_7442 = relay.TupleGetItem(func_3864_call(), 0)
call_7443 = relay.TupleGetItem(func_3866_call(), 0)
uop_7472 = relay.sinh(call_7442.astype('float32')) # shape=(196,)
uop_7474 = relay.sinh(call_7443.astype('float32')) # shape=(196,)
output = relay.Tuple([uop_7472,])
output2 = relay.Tuple([uop_7474,])
func_7476 = relay.Function([], output)
mod['func_7476'] = func_7476
mod = relay.transform.InferType()(mod)
output = func_7476()
func_7477 = relay.Function([], output)
mutated_mod['func_7477'] = func_7477
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7492 = relay.var("var_7492", dtype = "float64", shape = (12, 4, 15))#candidate|7492|(12, 4, 15)|var|float64
uop_7493 = relay.log10(var_7492.astype('float64')) # shape=(12, 4, 15)
func_6171_call = mod.get_global_var('func_6171')
func_6173_call = mutated_mod.get_global_var('func_6173')
call_7495 = relay.TupleGetItem(func_6171_call(), 0)
call_7496 = relay.TupleGetItem(func_6173_call(), 0)
func_3710_call = mod.get_global_var('func_3710')
func_3714_call = mutated_mod.get_global_var('func_3714')
var_7501 = relay.var("var_7501", dtype = "uint16", shape = (336,))#candidate|7501|(336,)|var|uint16
call_7500 = relay.TupleGetItem(func_3710_call(relay.reshape(var_7501.astype('uint16'), [7, 16, 3]), relay.reshape(var_7501.astype('uint16'), [7, 16, 3]), ), 0)
call_7502 = relay.TupleGetItem(func_3714_call(relay.reshape(var_7501.astype('uint16'), [7, 16, 3]), relay.reshape(var_7501.astype('uint16'), [7, 16, 3]), ), 0)
func_4871_call = mod.get_global_var('func_4871')
func_4873_call = mutated_mod.get_global_var('func_4873')
call_7503 = relay.TupleGetItem(func_4871_call(), 0)
call_7504 = relay.TupleGetItem(func_4873_call(), 0)
func_6387_call = mod.get_global_var('func_6387')
func_6390_call = mutated_mod.get_global_var('func_6390')
var_7508 = relay.var("var_7508", dtype = "uint8", shape = (36,))#candidate|7508|(36,)|var|uint8
var_7509 = relay.var("var_7509", dtype = "uint8", shape = (1, 108))#candidate|7509|(1, 108)|var|uint8
call_7507 = func_6387_call(relay.reshape(var_7508.astype('uint8'), [6, 1, 6]), relay.reshape(var_7509.astype('uint8'), [6, 3, 6]), )
call_7510 = func_6387_call(relay.reshape(var_7508.astype('uint8'), [6, 1, 6]), relay.reshape(var_7509.astype('uint8'), [6, 3, 6]), )
output = relay.Tuple([uop_7493,call_7495,call_7500,var_7501,call_7503,call_7507,var_7508,var_7509,])
output2 = relay.Tuple([uop_7493,call_7496,call_7502,var_7501,call_7504,call_7510,var_7508,var_7509,])
func_7520 = relay.Function([var_7492,var_7501,var_7508,var_7509,], output)
mod['func_7520'] = func_7520
mod = relay.transform.InferType()(mod)
var_7521 = relay.var("var_7521", dtype = "float64", shape = (12, 4, 15))#candidate|7521|(12, 4, 15)|var|float64
var_7522 = relay.var("var_7522", dtype = "uint16", shape = (336,))#candidate|7522|(336,)|var|uint16
var_7523 = relay.var("var_7523", dtype = "uint8", shape = (36,))#candidate|7523|(36,)|var|uint8
var_7524 = relay.var("var_7524", dtype = "uint8", shape = (1, 108))#candidate|7524|(1, 108)|var|uint8
output = func_7520(var_7521,var_7522,var_7523,var_7524,)
func_7525 = relay.Function([var_7521,var_7522,var_7523,var_7524,], output)
mutated_mod['func_7525'] = func_7525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6016_call = mod.get_global_var('func_6016')
func_6017_call = mutated_mod.get_global_var('func_6017')
call_7537 = relay.TupleGetItem(func_6016_call(), 2)
call_7538 = relay.TupleGetItem(func_6017_call(), 2)
func_1586_call = mod.get_global_var('func_1586')
func_1588_call = mutated_mod.get_global_var('func_1588')
var_7540 = relay.var("var_7540", dtype = "uint64", shape = ())#candidate|7540|()|var|uint64
call_7539 = func_1586_call(relay.reshape(var_7540.astype('uint64'), []))
call_7541 = func_1586_call(relay.reshape(var_7540.astype('uint64'), []))
func_7113_call = mod.get_global_var('func_7113')
func_7114_call = mutated_mod.get_global_var('func_7114')
call_7558 = relay.TupleGetItem(func_7113_call(), 2)
call_7559 = relay.TupleGetItem(func_7114_call(), 2)
output = relay.Tuple([call_7537,call_7539,var_7540,call_7558,])
output2 = relay.Tuple([call_7538,call_7541,var_7540,call_7559,])
func_7563 = relay.Function([var_7540,], output)
mod['func_7563'] = func_7563
mod = relay.transform.InferType()(mod)
var_7564 = relay.var("var_7564", dtype = "uint64", shape = ())#candidate|7564|()|var|uint64
output = func_7563(var_7564)
func_7565 = relay.Function([var_7564], output)
mutated_mod['func_7565'] = func_7565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_7642 = func_5028_call()
call_7643 = func_5028_call()
output = relay.Tuple([call_7642,])
output2 = relay.Tuple([call_7643,])
func_7649 = relay.Function([], output)
mod['func_7649'] = func_7649
mod = relay.transform.InferType()(mod)
mutated_mod['func_7649'] = func_7649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7649_call = mutated_mod.get_global_var('func_7649')
call_7650 = func_7649_call()
output = call_7650
func_7651 = relay.Function([], output)
mutated_mod['func_7651'] = func_7651
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7039_call = mod.get_global_var('func_7039')
func_7040_call = mutated_mod.get_global_var('func_7040')
call_7674 = relay.TupleGetItem(func_7039_call(), 1)
call_7675 = relay.TupleGetItem(func_7040_call(), 1)
output = call_7674
output2 = call_7675
func_7683 = relay.Function([], output)
mod['func_7683'] = func_7683
mod = relay.transform.InferType()(mod)
output = func_7683()
func_7684 = relay.Function([], output)
mutated_mod['func_7684'] = func_7684
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3790_call = mod.get_global_var('func_3790')
func_3792_call = mutated_mod.get_global_var('func_3792')
call_7685 = relay.TupleGetItem(func_3790_call(), 1)
call_7686 = relay.TupleGetItem(func_3792_call(), 1)
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_7690 = relay.TupleGetItem(func_4161_call(), 1)
call_7691 = relay.TupleGetItem(func_4163_call(), 1)
func_2082_call = mod.get_global_var('func_2082')
func_2085_call = mutated_mod.get_global_var('func_2085')
var_7709 = relay.var("var_7709", dtype = "float64", shape = (300,))#candidate|7709|(300,)|var|float64
call_7708 = relay.TupleGetItem(func_2082_call(relay.reshape(var_7709.astype('float64'), [4, 15, 5])), 0)
call_7710 = relay.TupleGetItem(func_2085_call(relay.reshape(var_7709.astype('float64'), [4, 15, 5])), 0)
func_6056_call = mod.get_global_var('func_6056')
func_6057_call = mutated_mod.get_global_var('func_6057')
call_7721 = func_6056_call()
call_7722 = func_6056_call()
func_7649_call = mod.get_global_var('func_7649')
func_7651_call = mutated_mod.get_global_var('func_7651')
call_7726 = relay.TupleGetItem(func_7649_call(), 0)
call_7727 = relay.TupleGetItem(func_7651_call(), 0)
output = relay.Tuple([call_7685,call_7690,call_7708,var_7709,call_7721,call_7726,])
output2 = relay.Tuple([call_7686,call_7691,call_7710,var_7709,call_7722,call_7727,])
func_7730 = relay.Function([var_7709,], output)
mod['func_7730'] = func_7730
mod = relay.transform.InferType()(mod)
var_7731 = relay.var("var_7731", dtype = "float64", shape = (300,))#candidate|7731|(300,)|var|float64
output = func_7730(var_7731)
func_7732 = relay.Function([var_7731], output)
mutated_mod['func_7732'] = func_7732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5010_call = mod.get_global_var('func_5010')
func_5011_call = mutated_mod.get_global_var('func_5011')
call_7752 = relay.TupleGetItem(func_5010_call(), 4)
call_7753 = relay.TupleGetItem(func_5011_call(), 4)
output = relay.Tuple([call_7752,])
output2 = relay.Tuple([call_7753,])
func_7754 = relay.Function([], output)
mod['func_7754'] = func_7754
mod = relay.transform.InferType()(mod)
output = func_7754()
func_7755 = relay.Function([], output)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7039_call = mod.get_global_var('func_7039')
func_7040_call = mutated_mod.get_global_var('func_7040')
call_7777 = relay.TupleGetItem(func_7039_call(), 0)
call_7778 = relay.TupleGetItem(func_7040_call(), 0)
const_7791 = relay.const([-6,-8,8,-6,-3,-5,1,7,-8,2,9,-7,-4,7,-1,-7,-7,-7,4,-3,4,-1,-1,3,-9,5,-6,8,5,5,-6,-3,7,8,-5,-10,9,6,-8,-9,-1,-7,-1,1,10,9,6,1,-4,-7,-1,8,6,2,-2,-3,7,3,6,-3,-8,4,-6,9,5,-7,-3,-6,10,5,1,6,-9,-6,-1,-1,3,4,2,9,9,4,2,1,10,-3,-5,8,8,-8,5,9,-7,-7,-4,6,4,-5,10,8,3,10,2,1,4,-10,-9,6,2,4,-2,1,-10,10,-4,1,-2,7,-1,-4,8,-5,-3,-4,8,10,8,-4,10,10,6,3,-2,-10,1,-1,7,9,-9,-4,-2,-7,-10,1,-6,-5,-10,-10,1,9,-5,-10,-8,-4,-1,-4,-7,-5,1,-6,-5,-1,9,1,-1,-1,-3,-1,-9,8,3,5,4,-6,4,-3,-3,5,-8,-4,-9,5,6,-2,1,7,3,-4,1,-3,-2,-5,-3,-6,9,9,-5,-9,-10,-7,1,5,-5,-3,8,3,-4,-4,-9,7,-2,-5,1,-7,-2,-4,-8,9,7,-2,-9,7,-1,10,5,7,4,-2,3,7,-4,2,-9,5,-4,3,2,-7,-4,5,4,5,-4,-2,8,4,-2,2,-9,7,6,7,1,10,-8,-3,7,-10,-6,-9,4,6,2,-7,-5,-4,-6,8,4,-1,3,5,-3,-2,-9,-5,4,1,9,7,-2,-4,10,6,-10,-8,-10,-6,10,-3,-6,-4,-2,-8,-2,-5,-6,3,-3,-1,5,-9,-2,9,2,1,-4,10,-9,-7,3,-5,2,-6,6,-1,7,-7,4,1,10,6,8,-10,-4,7,-8,8,-10,-9], dtype = "uint32")#candidate|7791|(330,)|const|uint32
bop_7792 = relay.bitwise_and(call_7777.astype('uint16'), relay.reshape(const_7791.astype('uint16'), relay.shape_of(call_7777))) # shape=(330,)
bop_7795 = relay.bitwise_and(call_7778.astype('uint16'), relay.reshape(const_7791.astype('uint16'), relay.shape_of(call_7778))) # shape=(330,)
func_4841_call = mod.get_global_var('func_4841')
func_4843_call = mutated_mod.get_global_var('func_4843')
call_7800 = relay.TupleGetItem(func_4841_call(), 0)
call_7801 = relay.TupleGetItem(func_4843_call(), 0)
output = relay.Tuple([bop_7792,call_7800,])
output2 = relay.Tuple([bop_7795,call_7801,])
func_7806 = relay.Function([], output)
mod['func_7806'] = func_7806
mod = relay.transform.InferType()(mod)
output = func_7806()
func_7807 = relay.Function([], output)
mutated_mod['func_7807'] = func_7807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_7886 = relay.TupleGetItem(func_4161_call(), 1)
call_7887 = relay.TupleGetItem(func_4163_call(), 1)
func_5899_call = mod.get_global_var('func_5899')
func_5901_call = mutated_mod.get_global_var('func_5901')
call_7908 = func_5899_call()
call_7909 = func_5899_call()
var_7910 = relay.var("var_7910", dtype = "int16", shape = (8, 5, 10))#candidate|7910|(8, 5, 10)|var|int16
bop_7911 = relay.left_shift(call_7886.astype('uint32'), relay.reshape(var_7910.astype('uint32'), relay.shape_of(call_7886))) # shape=(8, 5, 10)
bop_7914 = relay.left_shift(call_7887.astype('uint32'), relay.reshape(var_7910.astype('uint32'), relay.shape_of(call_7887))) # shape=(8, 5, 10)
output = relay.Tuple([call_7908,bop_7911,])
output2 = relay.Tuple([call_7909,bop_7914,])
func_7920 = relay.Function([var_7910,], output)
mod['func_7920'] = func_7920
mod = relay.transform.InferType()(mod)
mutated_mod['func_7920'] = func_7920
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7921 = relay.var("var_7921", dtype = "int16", shape = (8, 5, 10))#candidate|7921|(8, 5, 10)|var|int16
func_7920_call = mutated_mod.get_global_var('func_7920')
call_7922 = func_7920_call(var_7921)
output = call_7922
func_7923 = relay.Function([var_7921], output)
mutated_mod['func_7923'] = func_7923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7959 = relay.var("var_7959", dtype = "float64", shape = (2, 1, 16))#candidate|7959|(2, 1, 16)|var|float64
var_7960 = relay.var("var_7960", dtype = "float64", shape = (2, 5, 16))#candidate|7960|(2, 5, 16)|var|float64
bop_7961 = relay.floor_mod(var_7959.astype('float64'), var_7960.astype('float64')) # shape=(2, 5, 16)
output = relay.Tuple([bop_7961,])
output2 = relay.Tuple([bop_7961,])
func_7968 = relay.Function([var_7959,var_7960,], output)
mod['func_7968'] = func_7968
mod = relay.transform.InferType()(mod)
var_7969 = relay.var("var_7969", dtype = "float64", shape = (2, 1, 16))#candidate|7969|(2, 1, 16)|var|float64
var_7970 = relay.var("var_7970", dtype = "float64", shape = (2, 5, 16))#candidate|7970|(2, 5, 16)|var|float64
output = func_7968(var_7969,var_7970,)
func_7971 = relay.Function([var_7969,var_7970,], output)
mutated_mod['func_7971'] = func_7971
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5028_call = mod.get_global_var('func_5028')
func_5029_call = mutated_mod.get_global_var('func_5029')
call_7973 = func_5028_call()
call_7974 = func_5028_call()
func_7132_call = mod.get_global_var('func_7132')
func_7134_call = mutated_mod.get_global_var('func_7134')
call_7987 = relay.TupleGetItem(func_7132_call(), 0)
call_7988 = relay.TupleGetItem(func_7134_call(), 0)
func_5302_call = mod.get_global_var('func_5302')
func_5303_call = mutated_mod.get_global_var('func_5303')
call_7991 = func_5302_call()
call_7992 = func_5302_call()
func_4215_call = mod.get_global_var('func_4215')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_7993 = func_4215_call()
call_7994 = func_4215_call()
func_4215_call = mod.get_global_var('func_4215')
func_4217_call = mutated_mod.get_global_var('func_4217')
call_8012 = func_4215_call()
call_8013 = func_4215_call()
bop_8014 = relay.bitwise_xor(call_7973.astype('uint16'), relay.reshape(call_7991.astype('uint16'), relay.shape_of(call_7973))) # shape=(196,)
bop_8017 = relay.bitwise_xor(call_7974.astype('uint16'), relay.reshape(call_7992.astype('uint16'), relay.shape_of(call_7974))) # shape=(196,)
output = relay.Tuple([call_7987,call_7993,call_8012,bop_8014,])
output2 = relay.Tuple([call_7988,call_7994,call_8013,bop_8017,])
func_8019 = relay.Function([], output)
mod['func_8019'] = func_8019
mod = relay.transform.InferType()(mod)
mutated_mod['func_8019'] = func_8019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8019_call = mutated_mod.get_global_var('func_8019')
call_8020 = func_8019_call()
output = call_8020
func_8021 = relay.Function([], output)
mutated_mod['func_8021'] = func_8021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7132_call = mod.get_global_var('func_7132')
func_7134_call = mutated_mod.get_global_var('func_7134')
call_8032 = relay.TupleGetItem(func_7132_call(), 0)
call_8033 = relay.TupleGetItem(func_7134_call(), 0)
output = relay.Tuple([call_8032,])
output2 = relay.Tuple([call_8033,])
func_8054 = relay.Function([], output)
mod['func_8054'] = func_8054
mod = relay.transform.InferType()(mod)
output = func_8054()
func_8055 = relay.Function([], output)
mutated_mod['func_8055'] = func_8055
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7649_call = mod.get_global_var('func_7649')
func_7651_call = mutated_mod.get_global_var('func_7651')
call_8084 = relay.TupleGetItem(func_7649_call(), 0)
call_8085 = relay.TupleGetItem(func_7651_call(), 0)
output = call_8084
output2 = call_8085
func_8090 = relay.Function([], output)
mod['func_8090'] = func_8090
mod = relay.transform.InferType()(mod)
output = func_8090()
func_8091 = relay.Function([], output)
mutated_mod['func_8091'] = func_8091
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8131 = relay.var("var_8131", dtype = "float32", shape = (7, 2, 10))#candidate|8131|(7, 2, 10)|var|float32
const_8132 = relay.const([[[-7.429269,-7.446766,-2.930838,5.743343,7.389278,7.129525,-7.640064,-5.036234,-7.691316,1.361195],[8.996995,5.643705,-7.640547,-5.842081,3.214071,-8.481175,-2.227679,-3.309114,2.965497,-8.037286]],[[-1.933691,1.083204,4.591746,-8.877436,-5.065088,1.683521,-1.464381,-4.066432,-4.239959,0.257628],[-8.304685,2.591836,-2.808390,7.273500,-4.709264,-7.004521,-3.121619,2.779274,5.635993,3.648746]],[[4.440019,6.464137,0.468761,5.042318,9.364670,6.842439,-4.283960,-3.314713,-1.640629,6.527458],[0.448808,-7.730613,9.631302,5.907331,7.867002,8.905328,2.390159,-9.470979,-1.438149,-8.734109]],[[-5.471431,0.480371,6.041186,-1.482023,-6.127116,-9.665125,7.963950,1.229695,-6.098449,-2.931638],[7.077727,5.517888,-0.886142,4.722721,0.042883,-0.028644,-4.787315,-5.358890,7.461800,5.390307]],[[-6.177538,5.591500,-5.776455,8.975371,-4.970664,-0.366816,6.124544,-3.741790,1.681071,-0.328866],[-8.190814,9.415745,-8.816979,-6.138012,-1.579971,3.998134,7.514323,-3.933483,0.313189,-6.574349]],[[3.506472,2.694070,-8.782776,5.841207,-6.837890,-2.767708,-0.124037,3.571049,-5.332625,8.759396],[0.099088,8.967453,9.139667,9.092318,1.955063,-0.043287,-2.436607,5.873060,-8.774916,5.922557]],[[-1.609873,2.345730,9.632612,-9.998826,-1.026882,-8.385908,-1.636187,-6.595128,5.904173,8.497370],[2.483664,-5.865984,4.550212,3.892575,-8.992944,-9.612844,-0.250891,5.080695,-7.427089,6.435113]]], dtype = "float32")#candidate|8132|(7, 2, 10)|const|float32
bop_8133 = relay.power(var_8131.astype('float32'), relay.reshape(const_8132.astype('float32'), relay.shape_of(var_8131))) # shape=(7, 2, 10)
func_4407_call = mod.get_global_var('func_4407')
func_4410_call = mutated_mod.get_global_var('func_4410')
const_8150 = relay.const([-1,-9,-8,-3,-4,-3,5,-2,-10,-1,10,2,2,10,4,-9,2,9,3,-2,-7,3,10,8,-6,10,-9,-9,-8,6,10,-8,-5,4,-10,-9,1,8,7,-1,7,8,-4,6,-6,5,-2,-8,-9,-7,9,6,7,-1,-10,-9,6,4,4,1,4,6,8,-5,8,-5,-9,9,5,-2,4,3,-9,-9,6,-3,-5,-10,-4,-1,-6,-9,7,3,-6,8,-4,-10,-9,8,-1,10,9,-1,3,-3,-8,6,-8,9,3,8,10,2,8,-9,-8,-5,8,-10,-7,2,5,1,8,-1,-7,8,-6,-9,8,-1,6,5,-9,-7,-10,-2,-10,10,10,6,-8,-5,5,-9,3,-1,-4,-6,-3,-1,-3,-8,3,8,-1,3,9,4,-3,8,2,8,8,-1,5,6,5,1,-3,-3,3,4,3,7,2,3,-7,-10,-5,7,-4,-7,6,9,7,4,10,-6,-7,-1,10,-2,7,1,-6,-1,1,1,8,-9,-4,8,2,-6,-9,-7,-5,4,-5,-5,5,-3,-5,-6,-6,1,9,-3,3,9,10,-9,-8,-6,-1,-6,-6,5,-3,6,5,9,-5,4,-4,10,-8,7,-3,9,-4,10,-3,-3,5,8,-5,3,-1,-9,-9,-9,7,3,10,6,6,-6,-1,7,-8,-8,-4,-4,10,-10,-2,6,-4,3,-2,10,5,8,4,-3,-4,7,4,1,-7,-4,9,-10,10,6,10,-1,1,10,9,-10,-6,9,8,-7,2,-4,1,5,-7,5,-7,4,-6,-5,-2,7,10,10,-7,-3,-8,3,2,3,9,9,-2,5,-1,-4,5,-3,-9,-5,9,9,-6,7,10,-7,5,4,3,9,10,-9,7,2,-2,-6,4,8,-8,5,-2,5,-10,-9,10,7,1,5,-5,-8,3,-7,7,-6,-10,-3,5,2,-8,-8,-8,8,-8,-9,-7,1,-9,6,6,3,5,8,5,-5,2,-3,8,-10,-2,1,-6,-1,1,-4,-9,2,-4,-4,-2,-4,-4,-5,-6,-9,3,-10,-10,-5,8,7,6,-1,-10,1,-6,6,-2,2,-5,-10,9,-7,-1,-2,-10,6,8,6,4,10,2,10,9,4,3,10,4,-4,8,3,5,-3,7,-1,-7,-1,-8,-3,-2,-1,-2,8,-8,2,8,-5,-7,8,-8,-4,-3,-3,7,8,-6,-6,-9], dtype = "int16")#candidate|8150|(455,)|const|int16
call_8149 = func_4407_call(relay.reshape(const_8150.astype('int16'), [5, 13, 7]))
call_8151 = func_4407_call(relay.reshape(const_8150.astype('int16'), [5, 13, 7]))
func_7113_call = mod.get_global_var('func_7113')
func_7114_call = mutated_mod.get_global_var('func_7114')
call_8153 = relay.TupleGetItem(func_7113_call(), 1)
call_8154 = relay.TupleGetItem(func_7114_call(), 1)
output = relay.Tuple([bop_8133,call_8149,const_8150,call_8153,])
output2 = relay.Tuple([bop_8133,call_8151,const_8150,call_8154,])
func_8156 = relay.Function([var_8131,], output)
mod['func_8156'] = func_8156
mod = relay.transform.InferType()(mod)
mutated_mod['func_8156'] = func_8156
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8157 = relay.var("var_8157", dtype = "float32", shape = (7, 2, 10))#candidate|8157|(7, 2, 10)|var|float32
func_8156_call = mutated_mod.get_global_var('func_8156')
call_8158 = func_8156_call(var_8157)
output = call_8158
func_8159 = relay.Function([var_8157], output)
mutated_mod['func_8159'] = func_8159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4161_call = mod.get_global_var('func_4161')
func_4163_call = mutated_mod.get_global_var('func_4163')
call_8176 = relay.TupleGetItem(func_4161_call(), 2)
call_8177 = relay.TupleGetItem(func_4163_call(), 2)
output = relay.Tuple([call_8176,])
output2 = relay.Tuple([call_8177,])
func_8183 = relay.Function([], output)
mod['func_8183'] = func_8183
mod = relay.transform.InferType()(mod)
mutated_mod['func_8183'] = func_8183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8183_call = mutated_mod.get_global_var('func_8183')
call_8184 = func_8183_call()
output = call_8184
func_8185 = relay.Function([], output)
mutated_mod['func_8185'] = func_8185
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8347 = relay.var("var_8347", dtype = "float64", shape = (5, 9, 1))#candidate|8347|(5, 9, 1)|var|float64
uop_8348 = relay.sinh(var_8347.astype('float64')) # shape=(5, 9, 1)
output = relay.Tuple([uop_8348,])
output2 = relay.Tuple([uop_8348,])
func_8350 = relay.Function([var_8347,], output)
mod['func_8350'] = func_8350
mod = relay.transform.InferType()(mod)
mutated_mod['func_8350'] = func_8350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8351 = relay.var("var_8351", dtype = "float64", shape = (5, 9, 1))#candidate|8351|(5, 9, 1)|var|float64
func_8350_call = mutated_mod.get_global_var('func_8350')
call_8352 = func_8350_call(var_8351)
output = call_8352
func_8353 = relay.Function([var_8351], output)
mutated_mod['func_8353'] = func_8353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6247_call = mod.get_global_var('func_6247')
func_6248_call = mutated_mod.get_global_var('func_6248')
call_8362 = relay.TupleGetItem(func_6247_call(), 0)
call_8363 = relay.TupleGetItem(func_6248_call(), 0)
func_4254_call = mod.get_global_var('func_4254')
func_4256_call = mutated_mod.get_global_var('func_4256')
call_8379 = func_4254_call()
call_8380 = func_4254_call()
uop_8384 = relay.atan(call_8362.astype('float64')) # shape=(196,)
uop_8386 = relay.atan(call_8363.astype('float64')) # shape=(196,)
output = relay.Tuple([call_8379,uop_8384,])
output2 = relay.Tuple([call_8380,uop_8386,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

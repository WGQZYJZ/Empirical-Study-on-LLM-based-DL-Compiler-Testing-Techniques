import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_60 = relay.var("var_60", dtype = "float64", shape = (14, 7, 9))#candidate|60|(14, 7, 9)|var|float64
uop_61 = relay.sigmoid(var_60.astype('float64')) # shape=(14, 7, 9)
output = uop_61
output2 = uop_61
func_71 = relay.Function([var_60,], output)
mod['func_71'] = func_71
mod = relay.transform.InferType()(mod)
mutated_mod['func_71'] = func_71
mutated_mod = relay.transform.InferType()(mutated_mod)
var_72 = relay.var("var_72", dtype = "float64", shape = (14, 7, 9))#candidate|72|(14, 7, 9)|var|float64
func_71_call = mutated_mod.get_global_var('func_71')
call_73 = func_71_call(var_72)
output = call_73
func_74 = relay.Function([var_72], output)
mutated_mod['func_74'] = func_74
mutated_mod = relay.transform.InferType()(mutated_mod)
var_89 = relay.var("var_89", dtype = "int64", shape = (9, 3, 2))#candidate|89|(9, 3, 2)|var|int64
var_90 = relay.var("var_90", dtype = "int64", shape = (9, 3, 2))#candidate|90|(9, 3, 2)|var|int64
bop_91 = relay.less(var_89.astype('bool'), relay.reshape(var_90.astype('bool'), relay.shape_of(var_89))) # shape=(9, 3, 2)
uop_101 = relay.cos(var_89.astype('float32')) # shape=(9, 3, 2)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
var_105 = relay.var("var_105", dtype = "float64", shape = (882,))#candidate|105|(882,)|var|float64
call_104 = func_71_call(relay.reshape(var_105.astype('float64'), [14, 7, 9]))
call_106 = func_71_call(relay.reshape(var_105.astype('float64'), [14, 7, 9]))
output = relay.Tuple([bop_91,uop_101,call_104,var_105,])
output2 = relay.Tuple([bop_91,uop_101,call_106,var_105,])
func_112 = relay.Function([var_89,var_90,var_105,], output)
mod['func_112'] = func_112
mod = relay.transform.InferType()(mod)
mutated_mod['func_112'] = func_112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_112_call = mutated_mod.get_global_var('func_112')
var_114 = relay.var("var_114", dtype = "int64", shape = (9, 3, 2))#candidate|114|(9, 3, 2)|var|int64
var_115 = relay.var("var_115", dtype = "int64", shape = (9, 3, 2))#candidate|115|(9, 3, 2)|var|int64
var_116 = relay.var("var_116", dtype = "float64", shape = (882,))#candidate|116|(882,)|var|float64
call_113 = func_112_call(var_114,var_115,var_116,)
output = call_113
func_117 = relay.Function([var_114,var_115,var_116,], output)
mutated_mod['func_117'] = func_117
mutated_mod = relay.transform.InferType()(mutated_mod)
var_223 = relay.var("var_223", dtype = "int16", shape = ())#candidate|223|()|var|int16
var_224 = relay.var("var_224", dtype = "int16", shape = (1, 5, 2))#candidate|224|(1, 5, 2)|var|int16
bop_225 = relay.maximum(var_223.astype('int16'), var_224.astype('int16')) # shape=(1, 5, 2)
bop_229 = relay.floor_divide(var_224.astype('float64'), relay.reshape(bop_225.astype('float64'), relay.shape_of(var_224))) # shape=(1, 5, 2)
func_112_call = mod.get_global_var('func_112')
func_117_call = mutated_mod.get_global_var('func_117')
const_235 = relay.const([1,3,-2,5,-1,3,8,2,2,8,-9,1,1,-5,-3,4,-2,10,-7,9,5,5,-8,9,6,10,-4,-3,-9,10,1,-5,-2,-4,-4,-9,5,-4,3,-6,1,-4,5,1,-10,-5,6,1,-7,-1,9,9,5,8], dtype = "int64")#candidate|235|(54,)|const|int64
var_236 = relay.var("var_236", dtype = "float64", shape = (882,))#candidate|236|(882,)|var|float64
call_234 = relay.TupleGetItem(func_112_call(relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(var_236.astype('float64'), [882,]), ), 1)
call_237 = relay.TupleGetItem(func_117_call(relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(var_236.astype('float64'), [882,]), ), 1)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
call_240 = func_71_call(relay.reshape(var_236.astype('float64'), [14, 7, 9]))
call_241 = func_71_call(relay.reshape(var_236.astype('float64'), [14, 7, 9]))
func_112_call = mod.get_global_var('func_112')
func_117_call = mutated_mod.get_global_var('func_117')
call_243 = relay.TupleGetItem(func_112_call(relay.reshape(call_234.astype('int64'), [9, 3, 2]), relay.reshape(call_234.astype('int64'), [9, 3, 2]), relay.reshape(call_240.astype('float64'), [882,]), ), 3)
call_244 = relay.TupleGetItem(func_117_call(relay.reshape(call_234.astype('int64'), [9, 3, 2]), relay.reshape(call_234.astype('int64'), [9, 3, 2]), relay.reshape(call_240.astype('float64'), [882,]), ), 3)
uop_252 = relay.acosh(bop_225.astype('float64')) # shape=(1, 5, 2)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
call_257 = func_71_call(relay.reshape(var_236.astype('float64'), [14, 7, 9]))
call_258 = func_71_call(relay.reshape(var_236.astype('float64'), [14, 7, 9]))
var_262 = relay.var("var_262", dtype = "float64", shape = (882,))#candidate|262|(882,)|var|float64
bop_263 = relay.maximum(call_243.astype('uint16'), relay.reshape(var_262.astype('uint16'), relay.shape_of(call_243))) # shape=(882,)
bop_266 = relay.maximum(call_244.astype('uint16'), relay.reshape(var_262.astype('uint16'), relay.shape_of(call_244))) # shape=(882,)
uop_268 = relay.acos(uop_252.astype('float32')) # shape=(1, 5, 2)
func_112_call = mod.get_global_var('func_112')
func_117_call = mutated_mod.get_global_var('func_117')
call_284 = relay.TupleGetItem(func_112_call(relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(call_234.astype('int64'), [9, 3, 2]), relay.reshape(call_243.astype('float64'), [882,]), ), 0)
call_285 = relay.TupleGetItem(func_117_call(relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(call_234.astype('int64'), [9, 3, 2]), relay.reshape(call_243.astype('float64'), [882,]), ), 0)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
call_286 = func_71_call(relay.reshape(bop_263.astype('float64'), [14, 7, 9]))
call_287 = func_71_call(relay.reshape(bop_263.astype('float64'), [14, 7, 9]))
uop_293 = relay.cos(uop_268.astype('float32')) # shape=(1, 5, 2)
func_112_call = mod.get_global_var('func_112')
func_117_call = mutated_mod.get_global_var('func_117')
call_299 = relay.TupleGetItem(func_112_call(relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(call_257.astype('float64'), [882,]), ), 0)
call_300 = relay.TupleGetItem(func_117_call(relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(const_235.astype('int64'), [9, 3, 2]), relay.reshape(call_257.astype('float64'), [882,]), ), 0)
output = relay.Tuple([bop_229,call_234,const_235,var_236,call_240,call_257,bop_263,call_284,call_286,uop_293,call_299,])
output2 = relay.Tuple([bop_229,call_237,const_235,var_236,call_241,call_258,bop_266,call_285,call_287,uop_293,call_300,])
func_303 = relay.Function([var_223,var_224,var_236,var_262,], output)
mod['func_303'] = func_303
mod = relay.transform.InferType()(mod)
mutated_mod['func_303'] = func_303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_303_call = mutated_mod.get_global_var('func_303')
var_305 = relay.var("var_305", dtype = "int16", shape = ())#candidate|305|()|var|int16
var_306 = relay.var("var_306", dtype = "int16", shape = (1, 5, 2))#candidate|306|(1, 5, 2)|var|int16
var_307 = relay.var("var_307", dtype = "float64", shape = (882,))#candidate|307|(882,)|var|float64
var_308 = relay.var("var_308", dtype = "float64", shape = (882,))#candidate|308|(882,)|var|float64
call_304 = func_303_call(var_305,var_306,var_307,var_308,)
output = call_304
func_309 = relay.Function([var_305,var_306,var_307,var_308,], output)
mutated_mod['func_309'] = func_309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_753 = relay.var("var_753", dtype = "float32", shape = (9, 15, 16))#candidate|753|(9, 15, 16)|var|float32
uop_754 = relay.tan(var_753.astype('float32')) # shape=(9, 15, 16)
bop_760 = relay.minimum(uop_754.astype('int16'), relay.reshape(var_753.astype('int16'), relay.shape_of(uop_754))) # shape=(9, 15, 16)
bop_767 = relay.bitwise_and(bop_760.astype('int16'), relay.reshape(uop_754.astype('int16'), relay.shape_of(bop_760))) # shape=(9, 15, 16)
output = relay.Tuple([bop_767,])
output2 = relay.Tuple([bop_767,])
func_779 = relay.Function([var_753,], output)
mod['func_779'] = func_779
mod = relay.transform.InferType()(mod)
var_780 = relay.var("var_780", dtype = "float32", shape = (9, 15, 16))#candidate|780|(9, 15, 16)|var|float32
output = func_779(var_780)
func_781 = relay.Function([var_780], output)
mutated_mod['func_781'] = func_781
mutated_mod = relay.transform.InferType()(mutated_mod)
var_926 = relay.var("var_926", dtype = "float32", shape = (11, 9, 1))#candidate|926|(11, 9, 1)|var|float32
uop_927 = relay.log(var_926.astype('float32')) # shape=(11, 9, 1)
func_779_call = mod.get_global_var('func_779')
func_781_call = mutated_mod.get_global_var('func_781')
var_930 = relay.var("var_930", dtype = "float32", shape = (2160,))#candidate|930|(2160,)|var|float32
call_929 = relay.TupleGetItem(func_779_call(relay.reshape(var_930.astype('float32'), [9, 15, 16])), 0)
call_931 = relay.TupleGetItem(func_781_call(relay.reshape(var_930.astype('float32'), [9, 15, 16])), 0)
output = relay.Tuple([uop_927,call_929,var_930,])
output2 = relay.Tuple([uop_927,call_931,var_930,])
func_938 = relay.Function([var_926,var_930,], output)
mod['func_938'] = func_938
mod = relay.transform.InferType()(mod)
var_939 = relay.var("var_939", dtype = "float32", shape = (11, 9, 1))#candidate|939|(11, 9, 1)|var|float32
var_940 = relay.var("var_940", dtype = "float32", shape = (2160,))#candidate|940|(2160,)|var|float32
output = func_938(var_939,var_940,)
func_941 = relay.Function([var_939,var_940,], output)
mutated_mod['func_941'] = func_941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1005 = relay.var("var_1005", dtype = "uint16", shape = (2, 2, 6))#candidate|1005|(2, 2, 6)|var|uint16
const_1006 = relay.const([[[-1,-5,3,3,-1,-10],[10,-9,-3,5,-4,-8]],[[3,-9,2,7,2,-8],[-5,10,-6,8,8,8]]], dtype = "uint16")#candidate|1006|(2, 2, 6)|const|uint16
bop_1007 = relay.subtract(var_1005.astype('uint16'), relay.reshape(const_1006.astype('uint16'), relay.shape_of(var_1005))) # shape=(2, 2, 6)
func_938_call = mod.get_global_var('func_938')
func_941_call = mutated_mod.get_global_var('func_941')
var_1029 = relay.var("var_1029", dtype = "float32", shape = (99,))#candidate|1029|(99,)|var|float32
const_1030 = relay.const([6.307290,-4.434956,-2.714919,0.377572,2.259809,-5.948694,-6.723255,8.325108,2.890534,-1.792144,-0.661140,0.095967,-4.956896,0.625836,-2.272512,0.915244,9.077036,5.764517,-8.176180,1.833685,2.664080,2.211959,-4.345312,-6.431108,1.865711,8.446419,3.801881,6.976506,-8.999110,2.646163,1.032162,-8.251415,9.955281,-4.218236,3.160353,0.360844,9.691065,-7.812303,1.433662,-0.384146,3.104055,-6.257022,-7.895579,0.058540,-5.258148,0.995311,6.775280,-4.519817,8.755504,7.870403,-6.877482,-2.900119,7.001952,1.226194,7.152161,-1.466764,1.132649,7.357675,-3.157909,9.928453,-3.675626,-8.601859,-6.525998,-3.309524,2.964053,-7.736913,-9.580413,-7.535740,-2.120049,-7.205772,3.155098,-3.579291,6.655257,-9.229819,-8.020750,-5.254145,7.394887,1.728616,7.399992,3.635501,3.880081,5.318292,-2.156902,9.265121,9.720211,1.595786,-7.170592,-0.743004,5.896023,9.499187,-1.546620,-7.601402,-2.978973,5.745182,0.060700,7.714610,2.121189,-2.121964,-2.075167,-6.369072,8.002182,-2.992308,4.095259,1.652469,7.733239,6.467559,-8.547678,4.629015,0.543517,3.014565,-1.629899,7.101538,9.329401,2.981666,2.725309,6.054924,3.918982,8.652613,-1.385788,-3.228032,0.664902,0.872201,0.978466,0.751239,-3.884347,-5.718522,1.398894,-7.164898,1.955653,-3.987543,1.181919,-8.603108,8.179239,8.696690,-2.743314,5.885172,4.502301,-9.197629,-4.451467,7.554896,-1.599420,8.067587,7.521893,-1.946179,9.008491,-0.713196,-9.532232,-7.886349,-7.510374,-2.832707,5.602514,-4.032182,-2.867637,2.805257,-5.324579,6.877022,-7.842611,-9.685322,-3.083568,5.182993,6.463494,-6.473285,-0.866432,2.797484,0.061473,3.905037,-9.194530,1.562474,-3.275551,2.642347,-2.069887,2.640480,6.512801,-0.561816,-7.303425,0.917193,2.387496,-8.065379,-1.959501,-4.793544,6.941448,-0.072790,-8.937927,-3.489272,6.059470,7.192618,3.791162,-0.096496,3.472894,-6.761055,-3.881527,5.663449,-1.896342,3.322150,-1.621747,-0.156831,-2.221723,8.709932,-9.922845,3.303103,6.046809,7.356035,-0.266405,9.746774,1.610430,2.318657,7.135852,4.485768,-5.982752,5.576317,8.648853,-2.435466,-2.284922,-2.529546,-4.019304,-6.573227,-9.268508,-6.285386,-4.066144,-1.568429,9.227705,0.751724,3.118081,-0.010322,-5.971657,-4.478104,1.369540,2.171313,-9.910079,7.444833,0.514163,-9.629908,5.572333,-0.450866,-7.399002,4.372923,0.388197,-3.389946,-7.414945,-2.785674,-2.043102,-5.813437,-5.910938,-0.092044,5.444098,0.873473,8.131751,-4.547705,-9.712971,-8.992383,-3.756194,-5.063055,8.842789,-8.577234,-2.981404,-6.396485,6.325282,-9.909646,-0.699918,-3.380702,-9.404903,-9.570825,3.211312,7.194705,-8.881187,-1.118842,4.023645,-9.079899,5.708436,-8.037150,0.397341,9.895966,0.201552,-0.181767,-3.311880,8.154462,-8.054791,-6.042695,6.057260,4.269484,-3.191821,-1.739043,9.661235,-5.355258,7.195061,-0.464554,9.027658,2.247039,8.145235,-3.309785,-4.434240,7.641868,4.097409,-1.967905,5.597129,-3.397615,1.752047,7.414771,1.667496,7.841415,6.983812,-3.937302,6.619344,0.955372,0.476353,-3.832594,-7.854252,0.531503,-4.246954,-4.872686,6.018340,9.613823,8.867897,1.235909,-5.047799,6.170310,-0.704215,-9.109140,3.577033,6.509647,5.324230,-5.002350,2.137825,5.513638,9.042499,7.666757,9.172763,0.980074,7.658243,2.412042,9.727610,6.622468,-0.965417,-0.464078,-0.054521,5.798730,1.006747,2.007365,2.671288,-0.145045,-7.169156,1.790590,-8.528837,-8.315948,-5.255903,1.957278,-6.359721,3.004965,-5.419627,-1.018366,4.897546,-2.264334,0.433837,1.602496,2.689334,0.499663,3.819729,9.515642,2.439949,-3.694202,3.905630,8.092170,-8.177902,2.299173,-1.574636,8.765816,0.804814,4.873610,2.521642,4.596410,-0.853975,-0.836835,3.323149,-1.850769,9.013589,-5.244946,-2.389118,-2.950480,6.367394,-8.404856,1.270008,3.463327,2.066383,6.102136,-3.626653,7.087481,6.546732,-4.171350,7.930633,5.901584,1.915782,-9.244310,-5.062606,3.945568,-7.129185,8.202578,4.687316,-7.220276,6.328387,-2.976800,-8.011344,2.001414,6.351980,-0.233531,-0.081315,-4.295916,-6.403047,9.954438,5.784931,-9.244429,-9.502920,-0.005087,-5.485412,7.011353,-8.595924,3.388215,9.086444,7.665876,4.181074,-2.871765,6.653753,6.483240,2.431795,-4.269543,3.060500,-4.788403,2.084074,-7.838818,4.507173,5.247436,4.901566,-2.480373,6.867629,1.438818,9.933145,-5.947494,-6.990204,-4.733766,8.805792,2.884722,7.072101,-1.979489,-2.365751,2.811789,-2.427465,9.975730,3.929889,6.907746,3.863776,0.192228,-5.245550,-0.797673,-9.061930,-2.340459,8.219949,-9.052709,0.217862,8.297479,1.670833,9.710752,-2.197961,3.783528,-5.312468,-1.702325,-3.362325,-3.115863,-4.371815,7.380403,-9.484756,-8.809887,1.444190,-7.029624,7.366323,-1.881634,-0.452941,9.168838,2.345747,3.006875,5.912237,5.426154,0.499027,-3.643840,-8.148497,-2.899261,2.471646,4.246705,-8.364269,9.562815,1.532307,-4.342092,3.041906,-2.040372,8.814359,-0.084919,-8.316410,-9.580187,8.744104,1.835544,-6.973716,-9.023568,-6.435360,1.185356,-7.547624,-3.315721,-9.054641,9.739919,-6.430793,-7.367683,2.202318,-2.641537,8.357891,-1.360626,9.923140,-2.253354,7.919761,9.479625,-1.540311,-0.533967,7.139411,1.509682,-1.170684,3.848503,-3.027593,-6.927055,-9.938000,3.720893,3.454135,1.377228,7.520221,-1.617912,-9.103130,-0.268483,-3.336893,4.358692,-3.671332,-6.246611,-3.789036,2.975958,8.230245,-4.616809,1.992413,6.177325,2.070544,3.495126,1.299426,-6.052400,-7.536517,-8.417409,3.886664,-2.839866,-8.601094,-1.705973,1.789615,-8.808203,2.444474,-2.841232,-3.944571,4.922133,-6.854090,3.309313,3.685163,-8.792762,-2.247659,-2.153322,-6.588180,6.736559,9.702311,6.629628,-5.777151,-7.523035,0.023754,-8.505829,-4.517744,9.771570,-5.140213,-6.146940,-4.783458,5.884692,-3.852196,7.976880,4.921906,4.466032,-8.398168,6.030175,-2.040122,7.472161,-1.956773,-9.895963,8.771869,-9.252152,-0.792778,0.571948,7.817909,8.893973,7.665021,-3.677125,-2.863351,6.413570,7.802540,3.972751,-8.430607,7.942800,-6.005011,-2.633340,9.431192,2.637538,5.845363,7.078684,-4.130668,-0.105434,2.197751,-1.996949,6.150304,-3.208015,-3.456491,-9.262572,-6.890758,3.247913,1.330249,0.950478,-4.393254,-9.090518,4.634032,-0.521247,0.127651,2.929200,-5.500741,-3.655066,-4.703852,-6.320786,-2.202086,0.988938,-3.714823,2.154581,-6.887504,-9.262842,5.851301,0.776594,-1.517711,-3.726253,-6.275923,-4.227666,9.897016,-1.640940,-7.690748,-9.210710,-9.854207,2.430789,5.680013,-4.452258,9.990279,-2.135096,-5.985081,-9.152889,-8.432512,-9.756904,-6.996560,2.645382,1.971935,0.676201,-8.431638,-7.725357,-4.354177,9.271916,-1.968652,6.394793,-2.867863,-0.788419,8.916905,-8.063488,-0.641635,8.847291,6.339156,-0.840966,-0.451708,-4.728135,-2.114389,0.771565,5.617733,-0.105384,7.142806,5.522196,5.768143,-1.700118,-1.749123,-8.975825,2.233106,-7.920830,-1.398708,1.965718,-2.887643,9.277356,-4.621706,7.645964,6.565139,8.438569,-6.283415,3.134721,-9.130348,-0.308482,-8.746761,8.039027,-7.645904,-5.087561,5.897825,-6.462531,-3.349379,-3.187730,-0.519699,-9.137790,0.863910,-6.280271,-7.748670,0.285300,4.475268,-8.637308,6.204056,9.518658,5.260227,-6.552826,7.115067,-1.490491,2.887494,-0.196975,9.582541,2.713228,-4.130976,-5.123697,2.706937,-0.468888,3.493678,-5.151452,-2.338979,3.195415,-0.436913,-2.368849,-1.539356,0.658276,8.158868,6.109824,-0.621669,5.866476,8.523257,7.032264,-4.172425,6.322290,-6.520739,-7.513841,-5.188040,-7.566581,2.684045,-1.900551,-0.132496,4.250988,-0.804709,-7.342747,-0.512277,5.085880,6.116229,-5.177863,-3.715249,4.634652,-7.423983,-3.224392,7.967346,9.538691,5.608435,-2.886173,3.834850,-2.532268,8.771007,-6.754059,-4.892727,6.316980,-5.979447,4.095193,0.687717,-3.773319,-2.155002,-9.121318,4.953048,8.607769,-6.567738,-0.292707,9.204980,5.384394,4.493913,-6.651888,9.541283,0.501648,-8.108990,2.451265,-3.307044,5.939385,-9.859141,-7.675422,0.810912,-9.061151,-3.972256,8.885084,2.442253,-8.577864,-6.706710,7.251176,-3.634428,3.846249,2.319955,-8.960564,-7.861309,2.819551,-6.984528,7.370984,3.437999,4.416946,-9.422954,7.765405,9.225917,7.435314,3.667099,8.465689,1.909574,-6.016413,6.504870,-7.287612,-6.435684,-9.165693,-0.155753,-7.070346,-6.736047,8.634464,-4.521552,-2.236832,-9.864116,2.159808,-9.821146,9.379310,9.884427,5.666438,-9.643985,9.245252,3.783191,7.984398,5.740551,7.034192,1.462385,-4.080401,3.939681,1.111486,-5.172597,6.249404,-1.237683,0.227899,-0.038283,-8.284875,-9.324044,9.491656,-2.124675,0.774402,-3.072299,7.988295,1.828985,6.470473,-6.869460,-3.482403,4.891327,-4.278090,-9.853744,-2.590491,-8.310882,-8.275677,-6.975247,-9.102258,-8.988275,-0.277613,-7.500130,4.940101,4.533208,-3.821369,9.588941,4.994076,5.411585,-1.563536,1.722411,-8.954527,-7.291755,-2.045211,4.221866,5.090853,2.303716,-7.965217,6.825466,5.072379,5.515888,-0.173826,7.984281,0.118726,5.752293,-7.664645,-7.986040,-9.262926,1.807229,2.929406,4.512178,2.195581,-8.808102,-1.125515,3.877473,7.910538,-1.217985,9.834217,5.661135,-3.772283,6.267182,4.498397,7.308077,-7.841690,-3.172563,3.693106,-5.720830,-5.917208,3.302086,-4.441105,2.779442,9.452466,0.419426,2.277577,8.663429,-8.948342,-1.438335,8.093525,7.418431,5.224162,2.488957,-3.680526,2.129913,2.387792,8.377933,2.682798,2.964160,-5.316977,9.108055,5.509807,5.323746,2.682904,8.831695,-1.443334,-5.646542,-7.166667,-6.330778,8.582491,-7.585768,-4.396264,-7.901212,-6.933383,-2.687484,2.716040,-7.439564,5.552773,-5.502184,1.850366,7.009956,-7.482817,6.516033,5.593273,8.231322,5.780819,2.729580,-7.707350,4.594820,8.588802,8.875137,-9.299884,7.634045,-0.417885,-9.989903,6.242398,7.024846,-2.259435,3.332897,-5.710371,-1.245113,-8.669657,-4.424851,-2.513835,4.763978,0.158679,-0.554012,-5.013760,8.434468,1.240817,-0.172400,3.281027,-8.359223,0.503805,-5.423156,3.056217,4.237140,-3.529132,-2.835520,-6.876217,5.015729,-6.386143,9.461662,5.101325,6.733543,-0.943962,-8.251916,4.334438,0.790387,-9.860198,7.047628,3.906700,1.660655,-8.671920,-7.827252,3.131886,-1.861666,2.636944,-9.123837,8.078320,2.382213,1.070166,1.051104,-5.558410,0.043127,-7.781805,-6.901697,-4.213781,-8.265845,0.918522,2.180354,-7.616462,9.384423,6.785514,-9.391484,8.065458,-6.326611,2.317479,-7.214592,7.975033,-7.336805,-3.413553,6.370918,-8.522833,5.122205,-5.379506,-3.205124,-3.967232,-8.453908,6.340253,-1.098637,-0.381671,-3.367074,2.948916,0.599411,-8.912836,-8.407893,5.219603,6.271213,4.669269,6.771378,1.698313,-2.108956,7.805307,6.771339,-4.895741,-5.076839,4.063089,-1.603989,2.150656,6.614599,-4.911666,-2.397153,1.649069,6.855983,-6.671541,-4.826836,6.460199,0.693722,9.900453,3.736914,7.667271,-9.926575,-5.845575,8.207666,-2.896856,-6.603067,-8.290961,-4.574686,-6.826703,3.019473,0.924706,2.813580,-0.691054,3.454624,8.419143,0.009150,-2.297579,5.658986,8.273844,-7.422386,4.478702,-5.597284,1.800720,3.874393,-5.075475,-9.362389,-6.694352,-2.105179,2.585102,-0.108506,1.605988,3.482777,6.693583,-0.951558,1.966775,3.529697,7.287165,-5.120666,-4.095308,9.492397,-9.067216,-9.497825,1.361957,-3.537027,0.223504,3.993788,-7.499700,-0.889926,-3.976867,-8.642705,-2.122909,-1.387425,4.219755,-5.391947,1.938531,3.068278,-5.236144,-5.753712,-6.432909,-2.744672,-2.941065,-4.701708,-5.241301,-2.061939,-8.502537,-3.772898,-5.989091,-0.008446,0.234603,-1.347043,-9.813761,0.630428,6.780370,-5.730139,-7.153125,0.409865,9.439195,6.591647,7.362087,-5.735968,7.769581,-9.466544,6.750793,3.336119,9.518231,2.433556,9.461668,-4.063671,5.362646,1.213509,4.316021,-0.148635,-1.844037,-8.122255,5.931109,6.384546,8.776094,3.203774,4.527872,-2.019010,-9.981202,-4.450435,-1.111799,-8.135332,-2.769700,7.298569,9.440662,-4.365519,3.360618,5.555726,7.379378,9.395132,-8.947115,7.470306,-9.299650,-1.889334,-5.186968,-6.900182,-3.411472,-8.322995,-7.036963,-3.616872,9.554290,-3.955913,-7.339220,4.738398,-2.337294,-5.595072,4.587087,-4.539008,1.947037,-9.689771,-8.116641,-7.257863,-1.834460,0.254226,-9.596016,-2.314701,-3.895691,3.957856,-5.731340,-5.650321,4.979798,8.459085,-6.853347,-8.167014,-4.547207,7.470506,-0.498323,6.579479,-2.602338,4.820963,5.079115,-6.154600,-2.299788,-9.945411,7.615908,-1.272104,8.030644,7.042553,1.101285,-6.655838,6.013888,-8.218629,9.964757,-1.736174,-2.384787,8.920129,5.758705,7.167801,9.608736,-7.326707,-3.383892,8.969560,-2.694963,-3.098706,9.395683,3.366110,-0.177425,-5.241898,-3.853300,-9.968970,-2.564426,-1.794235,6.849979,-3.258055,6.646272,8.839868,0.953195,2.063454,-4.865069,7.321280,-8.315767,-5.493090,1.992863,1.123126,5.393212,-1.615547,4.424810,3.717345,2.243706,0.771960,-7.448685,-1.267810,2.763128,8.576911,0.963923,7.709554,0.732769,1.631518,-5.252731,-4.128973,-4.582431,-3.751082,4.871354,-0.132805,4.142031,4.440629,9.981204,0.737882,-2.208196,-0.265070,2.830561,1.944151,8.690337,5.333278,4.784280,0.318511,0.343937,5.348706,0.593359,2.872835,8.333076,-1.427703,-1.512496,-4.005418,-6.134586,9.075091,-6.998115,-4.962623,4.761634,-4.514533,-1.477549,-2.752515,8.496663,-7.774979,7.611018,7.286464,8.979067,8.560425,6.194028,-6.743990,-5.809832,5.040594,-8.904137,-1.259948,-3.025184,2.221607,-6.606565,-6.641644,9.052142,-4.951239,-8.959392,-3.646203,8.825906,6.742662,3.335397,-4.359818,5.225416,-1.969814,-7.042338,2.425915,3.452702,6.844876,-9.950085,1.946035,-2.130594,8.892889,6.961177,-8.278173,1.364681,0.742995,8.832738,1.012722,-9.999475,1.528665,-1.220518,0.339886,2.596525,-9.519881,-3.067872,7.509652,6.476844,9.471493,-6.735619,-2.374862,3.678885,-9.416821,9.205024,-0.495820,-3.639900,-6.651978,-0.274362,-8.688301,-3.165104,-3.220220,9.011120,-6.096905,-5.263394,2.108014,1.540253,-9.536233,-2.762860,-8.737171,-0.487269,4.700884,-8.609612,-4.277456,1.914086,-8.639674,1.052835,-2.686693,-8.425232,3.551458,-1.461750,-8.647704,-0.705592,-2.695816,7.411607,8.544659,4.168549,-5.401516,-8.228960,9.334895,-2.232003,-9.988720,-5.702386,-6.440247,4.135765,4.295392,-0.984924,2.316226,-3.006755,2.972624,-8.781010,-5.665188,3.394612,4.408706,3.039781,4.822037,-9.764394,5.711604,-6.268431,-2.191019,0.315199,4.156412,2.182850,0.349799,2.796915,3.727211,6.724179,8.369109,9.663087,-3.622459,8.552588,-1.986049,8.031409,-0.371718,4.554028,3.148847,-8.471549,-0.490344,-4.508058,-5.763779,7.708278,5.957084,0.740626,5.471506,-7.375050,1.059268,-2.359026,6.250217,0.456185,1.032317,-9.259632,9.918146,-1.005511,-5.041180,3.380145,-5.549193,7.073386,8.632471,-0.276450,9.157507,4.059665,3.149710,-7.065664,4.538060,-9.377879,-7.734751,-0.617016,-5.991288,4.304924,5.682242,3.933644,0.210104,3.201013,6.402693,-2.847939,-5.466535,5.667430,2.697831,7.286703,6.412140,6.023975,-0.597050,8.771400,-7.916377,-3.178772,-6.868319,8.417991,-3.326772,-8.938322,4.331305,-1.171357,-9.910946,8.953798,3.362718,2.945543,-8.934184,-1.475637,-9.001540,8.678217,-0.439417,-8.774685,7.260349,1.120063,-9.423044,7.801921,-4.211354,-4.398983,3.122177,-4.305770,-1.114393,3.445367,-6.522998,9.829180,-8.783619,-5.169622,-8.099620,8.974512,-9.154413,1.342589,-6.523238,-4.081690,-3.483126,-1.393241,-8.999853,-2.303351,-4.297792,-2.909784,4.233947,2.318386,-7.674767,2.573111,-1.214062,9.341676,3.690835,8.291457,3.759720,-9.180674,-1.009890,-5.925122,5.949451,3.592937,-5.140716,-1.583437,-2.721737,9.431794,8.677255,2.635164,3.908882,5.255264,-3.761521,9.935089,-8.890468,3.714622,-8.518321,-2.804215,3.980021,9.311797,4.006711,4.519682,5.909347,-2.788777,3.440424,-7.979927,-5.540038,8.653887,-5.228509,6.577002,-0.552886,-5.064351,-3.742686,-3.552367,-2.376040,5.315479,-3.639571,5.520611,-9.157248,-5.275814,-1.143721,-2.456417,-5.684739,0.836596,-7.464913,-6.433952,4.026377,7.847163,8.815699,0.814106,9.335458,5.003178,-7.365030,8.864858,-1.869508,-9.996226,-7.300261,-3.667210,7.024856,-7.839116,-4.543948,-9.094311,9.396547,2.032762,-3.267855,-6.609371,2.438259,1.966859,2.212455,-0.221400,-4.649512,-9.135354,-0.388642,-1.869859,-5.739087,1.535070,3.331564,-7.049857,-5.204255,8.429301,4.826680,-6.627943,2.954726,-7.745763,5.512049,-6.367796,7.147503,-7.315616,4.101785,4.698621,1.778118,-4.064981,0.104173,1.289414,-5.609455,-8.569954,3.648923,0.655210,-7.360497,2.389049,-8.185410,4.155671,-5.347558,6.314561,-1.455778,4.631430,-1.315957,-1.944896,-1.676435,8.932825,-5.626774,-7.652152,-4.592188,-4.764755,5.293715,-0.560306,-0.504998,-4.542139,-2.086201,-9.188587,-6.754222,-3.539242,-5.846503,-2.072694,9.191047,2.455267,8.790781,9.719184,3.090170,-9.748317,6.924626,0.632738,7.298675,-5.705846,0.266931,-3.267797,-0.284982,-7.850608,-8.878290,0.181128,-4.043201,1.716770,8.441015,-5.948485,7.523384,9.663776,1.416263,-0.795042,-6.356636,-0.052604,2.547527,-7.121640,-1.183962,-7.267575,8.455877,-0.465270,9.086815,-3.895674,-0.469626,5.657709,6.171452,-5.172715,9.917512,2.740508,2.723318,-8.718002,9.233570,-2.318587,5.649405,-5.427826,-2.701057,4.135662,-1.618619,-9.883930,-1.990995,-7.963752,7.743651,-2.387988,7.736652,-1.262838,-2.496292,-2.971086,5.190778,5.369570,5.780224,-9.929328,-5.719821,1.004500,3.385531,5.761164,-3.426789,9.776732,-0.753003,-5.654644,-0.437717,-3.105988,8.193528,-2.680310,9.580197,-6.169171,3.800717,-5.859226,-2.925487,-8.388975,-5.934080,7.851463,-7.319506,-2.963661,-5.139662,-0.716121,9.748942,0.907833,0.123942,-1.466590,8.770594,-5.307272,0.819288,-4.256798,-6.404070,2.636901,-3.327245,6.037111,4.552985,5.947478,7.092920,-1.812691,-2.494778,4.993933,9.102124,-6.618766,-5.713812,0.018336,-8.605803,0.812831,6.895654,0.816526,7.630096,-6.310202,-4.264815,3.810437,6.976453,-3.430247,5.041311,-8.109322,7.209800,-1.583884,0.498928,1.463753,3.657162,-4.552719,2.272473,8.144355,8.034248,-6.706698,0.878945,7.963325,7.429828,6.469979,5.258195,-6.921741,-7.418717,6.439433,-9.663116,8.687923,3.037598,-1.121021,8.485360,-9.894620,8.719829,-0.034923,-1.743338,-5.632589,-4.186338,-1.012459,3.422266,-6.062585,1.516670,2.497482,7.955906,-2.211511,-0.712585,3.954247,-3.660644,-0.139685,-6.476230,-7.493081,-7.031271,6.384771,-1.280352,2.901911,-3.883194,-1.351054,2.925460,1.370848,-3.876211,1.942618,3.075125,7.901091,-3.975147,1.903210,-7.835463,6.967505,-0.948991,7.429828,0.715758,-6.336961,2.787407,5.320499,-6.608799,6.716128,-2.470774,-3.422718,8.702339,8.733178,2.262045,3.820342,4.167575,9.842502,8.007641,-2.296806,7.142642,-1.656323,1.676049,8.012478,-3.063121,3.698147,3.031619,-5.483502,3.647108,5.814517,3.662503,-4.485474,9.407163,-7.761882,4.406114,0.329663,-8.380730,9.872449,-1.537503,5.182158,5.722975,8.795322,-3.023918,3.100623,-3.566619,8.969709,4.886088,-0.285441,0.701369,1.666374,3.633662,1.681727,-9.261754,-5.416686,7.256567,-6.404551,-0.119406,6.998732,2.098787,-7.551597,2.329961,3.669223,5.547012,-9.026766,8.897440,2.373967,-6.187368,-8.913919,9.695335,9.146164,-2.210529,4.566338,-5.582035,-7.911286,-9.913107,8.514705,-3.458279,-6.740283,-8.865425,-1.691545,9.849192,-1.047735,-9.867942,-4.677868,4.064922,-5.998629,0.243480,-2.219467,-2.079112,-9.982962,5.697523,1.225949,-7.424481,-1.947401,-5.571499,-1.537682,-6.943950,5.236739,1.357921,3.700056,-0.599287,0.731852,7.806183,5.286717,-8.074856,-7.283847,6.095300,2.707097,-9.607313,-4.820576,-8.200809,-6.055364,9.163845,4.595444,4.607474,-9.070217,-5.068990,-3.641594,0.203666,5.933633,1.462986,-7.864778,0.673891,-6.227022,2.905173,-8.476273,-5.784135,-0.934504,8.887488,-0.091511,-4.396152,-4.508653,-7.600375,0.038378,-7.217723,1.381096,-9.814497,-3.469577,6.597696,4.827563,4.354742,-2.792513,-0.682751,7.296568,-2.210425,0.022893,-3.010427,4.336667,-0.876489,5.691075,-1.062688,-1.023442,-5.348985,-6.358356,4.515701,-1.109081,-4.636730,-1.829433,9.298810,-3.026754,-3.625882,1.680204,5.221692,9.652279,4.577989,-8.039906,-4.345758,-5.270742,3.191052,-2.123614,4.048802,5.764702,-7.337295,-1.123872,8.155600,9.040048,-7.499655,6.812300,-5.237558,8.242755,4.577236,5.467030,-4.206309,-7.379132,-0.407157,5.530685,7.468579,2.345693,-3.163033,3.093321,-3.111107,8.534531,3.949278,-8.173818,-7.398516,4.907587,9.271568,1.918152,7.214310,5.402569,-1.133380,7.052230,4.744311,7.681738,-3.012716,-4.329972,-4.645949,-9.502149,-4.505106,5.347825,-6.396211,-8.320354,3.015781,-9.344760,1.481451,-9.998157,-4.920397,9.775998,8.620938,2.730207,1.642965,-4.789490,-6.402437,-4.117011,-6.315100,1.601147,-9.244838,-2.323645,3.332207,-0.875476,4.715291,-3.240634,-4.232042,3.906116,4.699034,-2.498194,-6.335500,-8.093577,6.516788,9.217694,-7.292777,-1.984309,-8.528813,-6.410400,2.862117,-4.713220,3.118627,-1.798055,-5.398510,7.550604,0.438383,3.874209,3.376650,-5.453699,-8.439705,-3.526109,-0.592821,6.398665,2.168805,-9.373051,2.929601,2.735797,8.109947,-2.367984,-8.765959,8.565133,4.177616,6.419051,-1.752239,3.481001,-1.811739,2.512052,7.083775,1.701403,-4.563474,7.911966,4.854379,3.481716,4.657473,-2.217589,6.311738,3.037016,-9.691833,4.921784,-7.467902,6.564891,-6.664411,5.716577,-5.521632,7.560639,-6.087615,-7.676243,8.390524,-5.021088,2.264973,-0.783024,2.556774,-3.040479,2.754757,-3.164143,-0.720484,-2.835902,7.567190,-7.401905,-6.809342,-0.228622,4.114958,-8.245098], dtype = "float32")#candidate|1030|(2160,)|const|float32
call_1028 = relay.TupleGetItem(func_938_call(relay.reshape(var_1029.astype('float32'), [11, 9, 1]), relay.reshape(const_1030.astype('float32'), [2160,]), ), 0)
call_1031 = relay.TupleGetItem(func_941_call(relay.reshape(var_1029.astype('float32'), [11, 9, 1]), relay.reshape(const_1030.astype('float32'), [2160,]), ), 0)
bop_1035 = relay.left_shift(const_1030.astype('uint16'), call_1028.astype('uint16')) # shape=(11, 9, 2160)
bop_1038 = relay.left_shift(const_1030.astype('uint16'), call_1031.astype('uint16')) # shape=(11, 9, 2160)
output = relay.Tuple([bop_1007,var_1029,bop_1035,])
output2 = relay.Tuple([bop_1007,var_1029,bop_1038,])
func_1039 = relay.Function([var_1005,var_1029,], output)
mod['func_1039'] = func_1039
mod = relay.transform.InferType()(mod)
mutated_mod['func_1039'] = func_1039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1039_call = mutated_mod.get_global_var('func_1039')
var_1041 = relay.var("var_1041", dtype = "uint16", shape = (2, 2, 6))#candidate|1041|(2, 2, 6)|var|uint16
var_1042 = relay.var("var_1042", dtype = "float32", shape = (99,))#candidate|1042|(99,)|var|float32
call_1040 = func_1039_call(var_1041,var_1042,)
output = call_1040
func_1043 = relay.Function([var_1041,var_1042,], output)
mutated_mod['func_1043'] = func_1043
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1183 = relay.var("var_1183", dtype = "int8", shape = (3, 15, 7))#candidate|1183|(3, 15, 7)|var|int8
var_1184 = relay.var("var_1184", dtype = "int8", shape = (3, 15, 7))#candidate|1184|(3, 15, 7)|var|int8
bop_1185 = relay.bitwise_and(var_1183.astype('int8'), relay.reshape(var_1184.astype('int8'), relay.shape_of(var_1183))) # shape=(3, 15, 7)
output = relay.Tuple([bop_1185,])
output2 = relay.Tuple([bop_1185,])
func_1191 = relay.Function([var_1183,var_1184,], output)
mod['func_1191'] = func_1191
mod = relay.transform.InferType()(mod)
mutated_mod['func_1191'] = func_1191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1191_call = mutated_mod.get_global_var('func_1191')
var_1193 = relay.var("var_1193", dtype = "int8", shape = (3, 15, 7))#candidate|1193|(3, 15, 7)|var|int8
var_1194 = relay.var("var_1194", dtype = "int8", shape = (3, 15, 7))#candidate|1194|(3, 15, 7)|var|int8
call_1192 = func_1191_call(var_1193,var_1194,)
output = call_1192
func_1195 = relay.Function([var_1193,var_1194,], output)
mutated_mod['func_1195'] = func_1195
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1595 = relay.var("var_1595", dtype = "float32", shape = (16, 2, 9))#candidate|1595|(16, 2, 9)|var|float32
uop_1596 = relay.cos(var_1595.astype('float32')) # shape=(16, 2, 9)
output = relay.Tuple([uop_1596,])
output2 = relay.Tuple([uop_1596,])
func_1598 = relay.Function([var_1595,], output)
mod['func_1598'] = func_1598
mod = relay.transform.InferType()(mod)
mutated_mod['func_1598'] = func_1598
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1599 = relay.var("var_1599", dtype = "float32", shape = (16, 2, 9))#candidate|1599|(16, 2, 9)|var|float32
func_1598_call = mutated_mod.get_global_var('func_1598')
call_1600 = func_1598_call(var_1599)
output = call_1600
func_1601 = relay.Function([var_1599], output)
mutated_mod['func_1601'] = func_1601
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1714 = relay.var("var_1714", dtype = "float64", shape = (12, 15, 14))#candidate|1714|(12, 15, 14)|var|float64
uop_1715 = relay.exp(var_1714.astype('float64')) # shape=(12, 15, 14)
uop_1734 = relay.rsqrt(var_1714.astype('float64')) # shape=(12, 15, 14)
bop_1745 = relay.multiply(var_1714.astype('int64'), relay.reshape(uop_1715.astype('int64'), relay.shape_of(var_1714))) # shape=(12, 15, 14)
func_303_call = mod.get_global_var('func_303')
func_309_call = mutated_mod.get_global_var('func_309')
var_1749 = relay.var("var_1749", dtype = "int16", shape = ())#candidate|1749|()|var|int16
var_1750 = relay.var("var_1750", dtype = "int16", shape = (10,))#candidate|1750|(10,)|var|int16
const_1751 = relay.const([-7.702135,-6.102265,0.575672,7.553751,0.172943,-9.459851,-6.480010,-8.324389,-7.676060,-4.133846,5.986744,-9.240848,-6.374658,7.936713,4.260560,-1.831310,6.296462,7.498107,2.986534,-9.785939,5.579632,-2.261938,-8.138308,6.051340,-0.957318,8.483998,8.157705,5.780644,0.441856,4.368655,-2.685773,-5.208303,-7.826521,1.259791,2.891929,-6.916800,-0.386359,-6.813876,-1.643036,0.728321,1.844225,-6.211266,4.931335,-5.805321,8.891746,2.597072,-7.965144,7.064081,5.416207,-3.627264,7.208595,2.117317,1.339222,-2.335600,3.293722,-7.887483,-7.378003,6.939543,2.724421,-1.914076,7.441049,-9.576539,3.501502,9.021131,-0.683369,0.737552,-9.537916,-4.194107,-7.039439,4.532813,-3.088748,-0.506381,4.288887,-6.377911,-2.429115,6.395953,-0.246735,3.257472,2.395422,-9.363304,-9.156735,4.389644,-4.617546,9.881467,-8.681090,5.809449,-9.543477,9.532903,1.318544,-9.328134,-5.992590,-9.084022,-1.080235,2.532539,-8.135201,4.599485,5.434328,6.892366,-9.963120,6.847643,-6.594333,-7.650593,-2.034783,-5.746239,2.441795,9.671289,-8.370988,4.546647,1.073519,-0.615580,-5.784343,7.567936,5.389212,-9.901713,2.621306,-1.571439,-7.804419,-5.708587,2.805029,-9.327431,-1.587664,-0.129458,3.987743,2.041439,-6.541904,-3.088343,9.908885,7.514179,4.204121,1.141581,7.230769,-5.492281,-7.956152,-6.686433,3.276296,-2.905227,9.384263,-8.638635,-7.805199,5.577475,0.934272,-5.790445,7.065441,4.509578,7.021977,3.701661,5.131221,-2.090028,8.552875,3.888098,5.117424,-8.881707,-2.740763,-6.380331,-8.037051,-9.845522,2.091371,-9.989601,-0.803401,3.181781,-0.272187,-7.234618,-6.524626,2.547997,4.098953,-7.910902,0.159390,4.839460,3.038164,-7.355154,-6.441138,-1.273371,6.423693,-8.192917,-0.769967,0.589389,2.386062,-4.154004,-9.095596,4.563666,-2.622790,6.727910,-9.244275,-9.104480,-7.672172,7.607422,8.132880,-7.415322,-5.493913,-6.788567,2.689080,-0.515392,6.934279,-4.620087,-0.104029,3.981777,-5.133054,-0.207397,-1.375719,-2.393691,-6.938255,2.064769,1.247268,-7.736278,-7.366087,2.999625,6.915367,-3.576857,-3.522260,-6.592424,-8.279207,-6.600748,-0.808636,5.461514,1.398185,9.838215,2.172746,2.340181,5.726644,4.089473,-3.935622,1.719019,-6.709502,-8.532439,-0.194385,2.751800,-2.036552,5.482379,6.043959,6.190829,5.879987,-9.122010,4.114341,1.711763,8.790036,5.842781,4.692397,3.812490,-0.652735,2.923831,9.090511,-2.971433,-2.047811,-8.980656,-5.279855,-8.043994,7.786523,9.368953,-5.047995,5.391352,5.822587,6.655705,8.822290,-5.266118,-9.592250,-7.250712,-2.441675,1.202340,9.522921,-8.692493,-0.806640,6.025340,0.016832,-7.147145,2.803176,-6.163764,-9.545430,-5.506556,-5.554033,-6.356533,-7.402417,-8.102939,7.892172,9.206018,-1.977212,-1.429621,-7.870176,-5.261639,-6.326069,7.069675,-2.148807,-6.847188,5.024696,-9.380485,4.092075,-3.853536,6.856477,7.854190,-4.892206,2.993034,-5.544251,4.451716,8.520153,5.233459,3.647072,-1.015043,-5.058506,-0.920943,5.932223,4.449864,0.710283,-2.214617,6.707429,8.500534,-4.120431,-3.606842,4.248221,7.851384,0.312312,-8.910508,9.018069,-1.057953,-4.288262,2.577033,4.342291,-9.647994,-2.951491,3.596104,-2.420971,3.527155,-6.209719,-0.942022,-2.248694,-6.521659,-2.401060,-1.714134,7.100273,7.310764,8.102820,7.792166,8.486264,-2.641080,-4.106226,2.482618,-5.982340,3.616683,-1.798849,-2.976824,3.309915,-3.763297,-0.589614,6.991888,2.162141,4.809626,3.613928,0.130160,-9.428657,-2.091726,-0.427657,-3.000301,6.465552,2.993381,5.853894,-7.337065,-7.194672,-9.509300,1.477362,9.012823,-3.290884,7.409266,6.333896,-0.999992,-5.687746,4.509276,4.939850,-9.023343,0.109518,-3.304438,8.818761,-5.242108,-4.297390,-2.581898,-0.743192,-9.686942,-5.894231,3.474315,6.343197,-9.574885,-8.532178,-3.133198,6.121766,-6.437154,-1.920278,2.979588,2.229266,8.369751,-2.107273,2.808233,6.715676,4.751603,-3.181837,-9.881861,-1.551630,3.224446,-6.444097,-7.175656,-5.271996,-9.721261,-2.553953,4.431286,9.130632,0.939017,-4.217939,2.657174,-9.207977,-0.502272,4.676131,-8.137315,7.712027,-3.015838,1.089194,0.928130,-0.511267,-1.312774,0.303820,-0.380307,5.083163,-7.940407,4.823966,5.735206,-9.232364,-8.586320,-7.486396,5.998909,-0.378983,0.667908,1.419405,-0.068950,8.767158,-3.015376,-1.321785,6.667214,-3.041597,7.659501,2.135815,6.966411,-8.287689,8.303741,8.640875,-5.592217,3.999858,4.505639,-7.695545,-1.903509,7.195444,-3.901777,6.314549,3.954616,5.952741,2.570754,6.812247,-5.600805,-3.551763,7.592089,3.049856,-2.923156,9.851710,5.830699,1.357917,1.478978,-8.370181,-8.556941,-1.799711,7.783298,-7.295964,-1.771320,0.083883,-4.340802,2.094067,6.903134,7.778368,0.713480,-2.544651,3.514509,-2.441005,-3.678669,-1.611466,-5.758984,-7.766153,6.759792,8.497509,-3.223646,-4.531080,-6.182615,-6.676129,-1.599664,1.755594,2.792323,-0.435219,1.679497,7.435172,0.655046,-5.060158,-5.921165,2.140419,-9.729701,-5.247102,-4.134254,8.533356,-6.723121,-4.276425,8.966365,-8.888595,2.709349,8.021160,9.439912,-5.389902,9.724246,-0.165688,3.131221,2.374661,-1.828260,9.992571,-1.717359,-7.444135,-7.183846,-9.961111,-9.628813,-3.417445,2.930326,2.174843,7.934180,-4.854329,-1.170612,-7.164704,-2.541199,1.622606,8.848711,7.830593,4.343876,-9.322588,5.505071,-0.194147,6.464005,3.667658,-9.154668,5.735015,5.958730,-4.304256,9.080917,0.815919,-3.304537,-1.614358,6.335880,-9.445260,9.505508,3.582845,7.390643,3.658411,-2.011808,2.561664,4.429430,-9.820647,-8.700896,-5.082720,-3.137300,-4.601109,8.085393,-1.135455,-2.133869,5.060171,-2.093166,-5.948284,-1.959903,-6.973554,2.636748,-3.217772,6.310634,5.270034,7.604629,6.339523,4.464814,5.595524,-8.691724,-4.166720,-8.894796,3.139731,-4.115541,-0.414142,4.477742,3.745651,-4.102241,5.386727,6.484810,-8.463583,-6.015102,-2.007777,0.987840,-2.509188,1.662867,-9.574867,9.896127,-1.252138,-4.864390,-9.586040,-8.014949,-3.564596,4.010152,-7.196072,-7.534942,-6.539546,-4.465118,-3.739014,-8.450007,8.609178,0.753738,6.802069,1.008327,-3.404215,-9.643448,6.512457,9.831775,2.481079,5.620160,9.245402,-9.625702,1.067378,-5.813961,-2.113514,-7.361209,-6.934129,-3.046478,-9.951394,-3.743092,8.755055,-6.224226,0.315346,-4.028075,-1.055813,-1.358924,5.316555,0.186339,1.278432,-4.434768,-6.238650,2.540315,3.587748,-5.953461,-5.105711,-1.187913,5.846897,-2.481714,-0.771648,-8.334266,3.196841,-9.713353,3.003718,1.235582,5.052557,0.220934,-2.652443,7.118073,-7.960540,-5.256845,-2.666291,-0.154284,2.589025,-9.060249,2.974557,-2.337304,6.795067,3.421887,1.232290,6.840458,-9.656906,-8.375439,3.063614,-0.161146,-6.797143,-5.799699,-3.042876,-2.590628,-3.071244,5.700436,8.197024,-6.417231,0.706939,-2.408124,-8.377337,5.492175,-3.825742,8.032666,2.405174,4.099638,-2.823555,-5.285153,-5.162026,-2.104649,2.095573,-8.945557,-8.270033,8.220849,-9.089087,-0.107828,9.987604,1.290930,5.045655,-4.538432,8.526879,-1.878418,5.192421,-8.300039,-9.750176,-9.227514,-5.229370,-4.288164,3.733030,-6.447195,1.567541,-5.709522,2.596126,-3.752458,0.820889,4.844854,-7.307123,-8.402536,9.829520,2.626409,-7.041675,3.964066,-4.336600,2.301622,-1.750131,5.683220,-1.566921,-3.825153,-2.160439,-3.404636,3.974585,-1.882197,-5.268233,-9.445119,9.476291,8.043167,9.343738,-9.681789,-4.050082,-6.038781,-0.706317,1.799996,3.997541,-9.028677,-4.485468,4.612796,-7.030190,-5.972016,4.223914,-5.069317,-0.461271,-3.894981,8.341765,-7.435361,-1.133236,-6.679701,-5.224299,1.259950,5.027048,4.753456,-8.795257,-6.928966,-4.138920,0.539078,4.988850,-3.076069,4.604845,8.192166,-7.330966,9.318703,-2.243015,2.527048,6.968079,0.784801,-9.870787,-8.438204,1.034429,7.882268,7.339839,5.936753,4.073360,5.933587,-4.365294,8.340324,-6.597492,7.481562,-3.055299,1.672413,7.269394,-6.762892,-0.043720,4.927146,6.544746,0.001443,1.135562,6.034048,6.149918,-5.872935,-8.208927,-9.325240,-8.762594,4.765173,-7.845326,-8.596873,4.697526,2.385482,8.796587,-3.035706,9.364415,-4.338609,-8.535606,2.166801,-8.132541,-5.747057,3.590777,8.747518,-7.231598,-2.819585,9.406047,2.181545,-4.518371,-5.645254,3.460799,-7.990038,4.100251,4.664636,6.837750,8.108962,-7.172099,-1.834755,-4.212666,5.191080,-2.704857,0.635363,-8.550600,8.539149,0.317003,1.982249,-3.598821,5.191796,-9.534012,7.869054,-8.521992,6.741234,-2.561934,-3.346024,7.190949,-4.463584,-2.303326,4.665456,-4.083860,5.333016,7.152245,-5.117905,-9.366313,2.570786,-8.723130,-2.346576,5.294269,-4.312271,0.497680,-6.307645,-9.205313,0.758854,-1.353159,-9.733953,3.305317,-8.932989,-8.922828,-8.483243,-6.753995,9.879450,-0.798382,2.053237,6.365660,-6.168869,0.097636,7.254210,6.508268,-6.641143,4.537169,-5.583250,-8.766565,2.436915], dtype = "float64")#candidate|1751|(882,)|const|float64
call_1748 = relay.TupleGetItem(func_303_call(relay.reshape(var_1749.astype('int16'), []), relay.reshape(var_1750.astype('int16'), [1, 5, 2]), relay.reshape(const_1751.astype('float64'), [882,]), relay.reshape(const_1751.astype('float64'), [882,]), ), 6)
call_1752 = relay.TupleGetItem(func_309_call(relay.reshape(var_1749.astype('int16'), []), relay.reshape(var_1750.astype('int16'), [1, 5, 2]), relay.reshape(const_1751.astype('float64'), [882,]), relay.reshape(const_1751.astype('float64'), [882,]), ), 6)
output = relay.Tuple([uop_1734,bop_1745,call_1748,var_1749,var_1750,const_1751,])
output2 = relay.Tuple([uop_1734,bop_1745,call_1752,var_1749,var_1750,const_1751,])
func_1753 = relay.Function([var_1714,var_1749,var_1750,], output)
mod['func_1753'] = func_1753
mod = relay.transform.InferType()(mod)
mutated_mod['func_1753'] = func_1753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1753_call = mutated_mod.get_global_var('func_1753')
var_1755 = relay.var("var_1755", dtype = "float64", shape = (12, 15, 14))#candidate|1755|(12, 15, 14)|var|float64
var_1756 = relay.var("var_1756", dtype = "int16", shape = ())#candidate|1756|()|var|int16
var_1757 = relay.var("var_1757", dtype = "int16", shape = (10,))#candidate|1757|(10,)|var|int16
call_1754 = func_1753_call(var_1755,var_1756,var_1757,)
output = call_1754
func_1758 = relay.Function([var_1755,var_1756,var_1757,], output)
mutated_mod['func_1758'] = func_1758
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1771 = relay.var("var_1771", dtype = "float32", shape = (5, 15, 4))#candidate|1771|(5, 15, 4)|var|float32
uop_1772 = relay.exp(var_1771.astype('float32')) # shape=(5, 15, 4)
output = relay.Tuple([uop_1772,])
output2 = relay.Tuple([uop_1772,])
func_1775 = relay.Function([var_1771,], output)
mod['func_1775'] = func_1775
mod = relay.transform.InferType()(mod)
mutated_mod['func_1775'] = func_1775
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1776 = relay.var("var_1776", dtype = "float32", shape = (5, 15, 4))#candidate|1776|(5, 15, 4)|var|float32
func_1775_call = mutated_mod.get_global_var('func_1775')
call_1777 = func_1775_call(var_1776)
output = call_1777
func_1778 = relay.Function([var_1776], output)
mutated_mod['func_1778'] = func_1778
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1791 = relay.var("var_1791", dtype = "float32", shape = (13, 4, 7))#candidate|1791|(13, 4, 7)|var|float32
uop_1792 = relay.acosh(var_1791.astype('float32')) # shape=(13, 4, 7)
bop_1795 = relay.add(uop_1792.astype('float32'), relay.reshape(var_1791.astype('float32'), relay.shape_of(uop_1792))) # shape=(13, 4, 7)
func_1598_call = mod.get_global_var('func_1598')
func_1601_call = mutated_mod.get_global_var('func_1601')
const_1800 = relay.const([-5.676564,-8.950179,-7.735081,-1.013737,-3.134400,-5.882908,-4.878309,-9.999471,-7.243778,-0.829429,1.781266,-1.066468,5.431012,7.728251,7.732549,1.007957,3.869777,3.316084,1.799933,-7.862159,0.488488,-9.750671,6.141340,-3.831948,7.703751,4.779335,-5.576572,-0.423205,3.011030,-8.636308,-6.694340,0.960974,3.551151,4.166053,-2.417579,0.793497,-5.958626,5.911910,-5.074653,0.637366,-7.643312,-5.633963,7.827966,2.218646,-0.653028,6.383528,3.773035,9.670164,1.557752,3.158893,-8.521182,-0.078393,5.706100,-6.945030,1.470022,1.825174,-0.806192,-1.692175,-5.556143,-2.888569,6.348129,6.527758,-0.107348,-8.325103,0.989799,6.542404,-0.952025,6.160368,6.331838,9.403324,6.982071,6.471697,-1.455736,5.416186,1.242656,1.952063,3.943468,9.040134,0.946872,-9.838839,5.202413,-1.404525,1.762137,3.491814,4.492068,9.718528,6.864035,-9.590078,5.861004,-5.992068,-0.808755,4.793520,-8.214832,4.922154,-8.409605,8.522302,-1.329390,5.852121,0.491628,-7.478177,1.969986,0.380056,-0.794790,-0.494401,-4.670716,-4.338728,7.525289,-6.351426,-8.763670,3.734606,6.360847,4.191641,1.648206,9.598352,7.974549,5.892836,-4.804996,-9.251863,8.932203,-5.151958,9.249819,-9.014438,-8.191816,9.923315,-6.544132,-5.300932,2.907614,5.054655,-3.417917,4.360221,4.365064,3.128633,4.649529,-1.832517,-7.689795,-8.353665,-5.833945,-2.902693,-0.281136,3.626219,6.436660,-7.192793,1.501433,6.251586,2.342524,-6.363192,8.876263,-4.599626,3.545821,4.047935,3.516266,6.079932,-6.304727,-5.751223,5.266783,-8.305585,4.361529,9.857437,-5.303050,3.846563,8.063745,-0.252577,6.675340,-7.891105,-8.971399,-9.251956,6.547521,0.078718,-1.757045,-9.379206,2.060343,-6.316306,-0.035309,-3.210033,-7.849088,-2.703345,4.334304,-6.427982,7.464478,0.989184,2.249883,3.454045,9.462585,-8.646778,-1.365632,-4.036887,1.682436,0.089069,-0.066355,9.479033,3.186548,1.806698,-5.882565,1.285831,-1.874133,6.592504,-7.500726,-7.068057,9.323301,9.396970,-3.679552,-9.815325,-4.347459,6.884667,5.648247,9.700712,-0.773576,6.937624,9.737970,-3.442415,9.390504,8.890204,-7.284801,8.523976,-0.816336,5.076521,-4.568555,2.696352,3.947004,-2.942494,4.894382,5.693282,-2.676260,-6.825220,5.782740,9.002635,2.719174,7.131536,-4.938596,1.153918,2.670625,9.974471,-9.676795,3.218802,2.979495,-2.447074,9.731775,-2.058012,-8.517199,7.751815,5.608529,-0.385935,0.550785,-4.005614,7.881455,0.025725,5.733022,-4.386298,7.909212,9.871854,2.796330,6.131277,-3.754259,-4.778805,-2.952171,-1.315101,-8.459802,-2.616776,-8.861985,-4.218272,0.126668,2.523185,-5.676115,-4.204539,4.151691,6.423595,-5.477190,1.286100,-5.249087,4.736203,-0.683493,0.724574,2.761816,-2.757166,-6.213651,4.332848,-5.254376,-3.110888,-0.130290,-0.224461,6.894289,6.124902,-2.597873,-5.865085,-8.050930,-9.992877,6.814285,-0.407628], dtype = "float32")#candidate|1800|(288,)|const|float32
call_1799 = relay.TupleGetItem(func_1598_call(relay.reshape(const_1800.astype('float32'), [16, 2, 9])), 0)
call_1801 = relay.TupleGetItem(func_1601_call(relay.reshape(const_1800.astype('float32'), [16, 2, 9])), 0)
func_1775_call = mod.get_global_var('func_1775')
func_1778_call = mutated_mod.get_global_var('func_1778')
const_1805 = relay.const([[-0.975400],[-4.262319],[-2.600750],[-4.869291],[4.415678],[-5.618969],[1.970452],[8.595158],[-9.339093],[6.044640],[2.737224],[-5.850363],[-5.777317],[-1.956027],[5.324988],[0.345969],[-4.857273],[-5.558145],[-3.478801],[-6.206757],[-7.052997],[-1.347681],[-5.003681],[-8.495292],[-7.983899],[-6.686320],[4.456933],[6.418335],[3.845684],[-1.169069],[9.319919],[-7.459975],[3.030700],[-3.054878],[2.578140],[-6.735471],[-2.979183],[-5.325478],[-9.582352],[9.358671],[-5.527573],[-8.366068],[-6.218115],[8.865571],[7.470005],[-2.706515],[-9.505934],[-2.230025],[-4.134455],[3.365422],[-8.788990],[1.156732],[-9.120933],[4.480161],[-2.701407],[-7.763790],[0.278813],[1.454123],[-8.379698],[1.397176],[-6.147142],[-3.490038],[-6.056534],[0.977888],[-7.133001],[4.942940],[-1.368201],[4.297124],[-4.604981],[6.553381],[1.504528],[5.624620],[-9.247873],[-6.828939],[5.648603],[-6.841262],[2.740234],[-4.048296],[6.410214],[-4.547304],[-9.206162],[-3.669516],[3.670016],[-7.850221],[9.017541],[-6.196265],[0.968274],[0.215930],[-4.080826],[-3.719988],[0.321159],[-3.411083],[-8.564983],[-2.153119],[-8.876228],[7.790368],[-9.758456],[1.389741],[7.215594],[8.839900],[7.122672],[7.751804],[7.892389],[-8.507281],[-2.756895],[-2.143499],[4.105877],[-8.723022],[2.425408],[4.305963],[-8.744725],[2.088338],[5.241785],[-8.518566],[-4.768748],[3.564894],[3.786703],[-0.496828],[4.988417],[7.183402],[3.502303],[6.152405],[-5.650281],[-2.746940],[-5.751641],[7.274422],[-8.551114],[-2.321741],[9.996027],[-0.056134],[-5.247139],[9.166779],[-6.801253],[6.476366],[-0.385937],[4.619436],[-2.902376],[-7.587085],[5.693099],[-4.392725],[-7.196495],[-8.596313],[-9.152692],[-4.400041],[5.931797],[9.776585],[-0.912784],[5.460859],[-5.480246],[-7.943826],[9.796751],[9.934615],[-4.221637],[-3.598224],[-5.686371],[-3.176625],[-5.503637],[-6.995836],[2.643178],[-2.895699],[1.213681],[-8.783454],[-1.530386],[8.623603],[-6.684430],[8.300240],[0.726407],[1.654060],[-4.430908],[2.382051],[3.099932],[-0.260663],[-7.179116],[-9.177351],[0.508861],[-3.713407],[4.715002],[3.669892],[8.492039],[-8.917205],[-2.835663],[6.332120],[-7.588236],[-2.468148],[0.432059],[-1.043953],[0.264208],[-2.840861],[5.983303],[7.683525],[-5.599964],[7.229987],[-7.538431],[1.128204],[3.154790],[-8.327762],[-5.997696],[-8.052163],[-7.434967],[8.711654],[-7.591599],[-0.316596],[-9.435221],[-1.221282],[-0.198071],[5.432479],[8.879729],[-9.641426],[5.381883],[7.343632],[6.659815],[-9.214525],[-8.761004],[3.114469],[3.186220],[-7.272752],[-2.367054],[6.574732],[4.058090],[-5.044322],[0.434654],[-5.493966],[-6.223103],[9.935955],[3.496309],[3.444840],[-9.097324],[-6.931538],[-8.326119],[1.804134],[-8.383938],[5.781385],[6.550337],[-6.838165],[-0.030186],[-6.036713],[-9.650270],[7.194385],[5.842029],[-9.666137],[7.339364],[3.306688],[8.645429],[-9.978837],[1.151067],[-5.814575],[8.846162],[-5.896081],[-2.976006],[-3.342936],[8.032791],[1.174447],[3.275711],[4.848253],[8.068912],[7.427559],[6.369097],[-3.879719],[-4.306874],[-6.771090],[-4.658693],[-1.161880],[-8.037933],[-4.923682],[6.829029],[-0.378883],[1.811826],[-9.411836],[-0.520530],[6.484871],[1.604701],[-5.544555],[-4.128930],[9.782641],[-2.696904],[-0.742448],[-0.554092],[-9.878131],[-2.256200],[-0.572652],[2.627343],[-7.951613],[-8.454727],[-6.751926],[-2.358868],[-5.730483],[-6.764079],[-7.974861],[4.447027],[-2.674676],[1.157725],[-7.242169],[8.223900],[7.466400],[-7.273093],[6.951527],[-6.539721],[-7.323206],[-3.213992],[5.105109]], dtype = "float32")#candidate|1805|(300, 1)|const|float32
call_1804 = relay.TupleGetItem(func_1775_call(relay.reshape(const_1805.astype('float32'), [5, 15, 4])), 0)
call_1806 = relay.TupleGetItem(func_1778_call(relay.reshape(const_1805.astype('float32'), [5, 15, 4])), 0)
bop_1807 = relay.greater(const_1805.astype('bool'), const_1800.astype('bool')) # shape=(300, 288)
uop_1811 = relay.cosh(bop_1795.astype('float32')) # shape=(13, 4, 7)
bop_1813 = relay.logical_xor(uop_1811.astype('uint8'), relay.reshape(bop_1795.astype('uint8'), relay.shape_of(uop_1811))) # shape=(13, 4, 7)
var_1820 = relay.var("var_1820", dtype = "float32", shape = (13, 4, 7))#candidate|1820|(13, 4, 7)|var|float32
bop_1821 = relay.logical_and(bop_1795.astype('bool'), relay.reshape(var_1820.astype('bool'), relay.shape_of(bop_1795))) # shape=(13, 4, 7)
func_1598_call = mod.get_global_var('func_1598')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_1829 = relay.TupleGetItem(func_1598_call(relay.reshape(const_1800.astype('float32'), [16, 2, 9])), 0)
call_1830 = relay.TupleGetItem(func_1601_call(relay.reshape(const_1800.astype('float32'), [16, 2, 9])), 0)
bop_1837 = relay.maximum(bop_1813.astype('int32'), relay.reshape(var_1791.astype('int32'), relay.shape_of(bop_1813))) # shape=(13, 4, 7)
bop_1843 = relay.mod(uop_1792.astype('float64'), relay.reshape(bop_1821.astype('float64'), relay.shape_of(uop_1792))) # shape=(13, 4, 7)
bop_1848 = relay.subtract(bop_1837.astype('float64'), relay.reshape(uop_1792.astype('float64'), relay.shape_of(bop_1837))) # shape=(13, 4, 7)
func_71_call = mod.get_global_var('func_71')
func_74_call = mutated_mod.get_global_var('func_74')
var_1876 = relay.var("var_1876", dtype = "float64", shape = (882,))#candidate|1876|(882,)|var|float64
call_1875 = func_71_call(relay.reshape(var_1876.astype('float64'), [14, 7, 9]))
call_1877 = func_71_call(relay.reshape(var_1876.astype('float64'), [14, 7, 9]))
func_1598_call = mod.get_global_var('func_1598')
func_1601_call = mutated_mod.get_global_var('func_1601')
call_1880 = relay.TupleGetItem(func_1598_call(relay.reshape(call_1829.astype('float32'), [16, 2, 9])), 0)
call_1881 = relay.TupleGetItem(func_1601_call(relay.reshape(call_1829.astype('float32'), [16, 2, 9])), 0)
func_1775_call = mod.get_global_var('func_1775')
func_1778_call = mutated_mod.get_global_var('func_1778')
call_1882 = relay.TupleGetItem(func_1775_call(relay.reshape(call_1804.astype('float32'), [5, 15, 4])), 0)
call_1883 = relay.TupleGetItem(func_1778_call(relay.reshape(call_1804.astype('float32'), [5, 15, 4])), 0)
func_1191_call = mod.get_global_var('func_1191')
func_1195_call = mutated_mod.get_global_var('func_1195')
var_1886 = relay.var("var_1886", dtype = "int8", shape = (315,))#candidate|1886|(315,)|var|int8
call_1885 = relay.TupleGetItem(func_1191_call(relay.reshape(var_1886.astype('int8'), [3, 15, 7]), relay.reshape(var_1886.astype('int8'), [3, 15, 7]), ), 0)
call_1887 = relay.TupleGetItem(func_1195_call(relay.reshape(var_1886.astype('int8'), [3, 15, 7]), relay.reshape(var_1886.astype('int8'), [3, 15, 7]), ), 0)
uop_1888 = relay.cos(bop_1813.astype('float32')) # shape=(13, 4, 7)
output = relay.Tuple([call_1799,call_1804,bop_1807,call_1829,bop_1843,bop_1848,call_1875,var_1876,call_1880,call_1882,call_1885,var_1886,uop_1888,])
output2 = relay.Tuple([call_1801,call_1806,bop_1807,call_1830,bop_1843,bop_1848,call_1877,var_1876,call_1881,call_1883,call_1887,var_1886,uop_1888,])
func_1897 = relay.Function([var_1791,var_1820,var_1876,var_1886,], output)
mod['func_1897'] = func_1897
mod = relay.transform.InferType()(mod)
mutated_mod['func_1897'] = func_1897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1897_call = mutated_mod.get_global_var('func_1897')
var_1899 = relay.var("var_1899", dtype = "float32", shape = (13, 4, 7))#candidate|1899|(13, 4, 7)|var|float32
var_1900 = relay.var("var_1900", dtype = "float32", shape = (13, 4, 7))#candidate|1900|(13, 4, 7)|var|float32
var_1901 = relay.var("var_1901", dtype = "float64", shape = (882,))#candidate|1901|(882,)|var|float64
var_1902 = relay.var("var_1902", dtype = "int8", shape = (315,))#candidate|1902|(315,)|var|int8
call_1898 = func_1897_call(var_1899,var_1900,var_1901,var_1902,)
output = call_1898
func_1903 = relay.Function([var_1899,var_1900,var_1901,var_1902,], output)
mutated_mod['func_1903'] = func_1903
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1917 = relay.var("var_1917", dtype = "float64", shape = (1, 11, 11))#candidate|1917|(1, 11, 11)|var|float64
var_1918 = relay.var("var_1918", dtype = "float64", shape = (13, 11, 11))#candidate|1918|(13, 11, 11)|var|float64
bop_1919 = relay.mod(var_1917.astype('float64'), var_1918.astype('float64')) # shape=(13, 11, 11)
func_1039_call = mod.get_global_var('func_1039')
func_1043_call = mutated_mod.get_global_var('func_1043')
var_1931 = relay.var("var_1931", dtype = "uint16", shape = (24,))#candidate|1931|(24,)|var|uint16
const_1932 = relay.const([-0.136490,-6.773914,-6.646631,0.868783,0.774353,-9.884280,-8.025766,-2.641373,2.610535,-4.737551,0.703183,-7.218968,7.318513,1.885164,-1.041741,3.996879,-2.767059,-5.366551,-0.735107,-9.614457,-6.296933,-7.600758,-9.615873,7.686097,4.845870,-1.394507,5.544588,5.459214,1.908708,0.604426,3.035478,-5.034427,-6.144910,-6.714819,-5.795319,-8.916353,9.860180,-0.641015,-6.214816,-0.371431,2.917258,-3.860369,9.787118,0.838689,-2.206800,-5.575759,9.280769,6.809144,-9.239374,-1.528931,-7.242748,9.134651,3.121881,-2.468323,-9.598558,-4.175114,4.626799,-7.965901,-3.386790,0.928967,8.581741,-7.966064,-9.177551,-8.502020,1.238204,-7.383439,-6.245513,-8.032318,2.300521,4.469816,9.661081,5.405031,-7.381023,4.749332,9.213124,3.101912,3.733989,5.794736,8.278716,-8.420555,-8.984644,7.876427,-7.213637,5.367154,-1.210038,4.355634,-7.588958,-4.446961,4.859548,3.639419,8.384819,6.574508,-0.642226,-7.406166,-5.161912,-3.335628,2.205987,9.512162,0.033094], dtype = "float32")#candidate|1932|(99,)|const|float32
call_1930 = relay.TupleGetItem(func_1039_call(relay.reshape(var_1931.astype('uint16'), [2, 2, 6]), relay.reshape(const_1932.astype('float32'), [99,]), ), 1)
call_1933 = relay.TupleGetItem(func_1043_call(relay.reshape(var_1931.astype('uint16'), [2, 2, 6]), relay.reshape(const_1932.astype('float32'), [99,]), ), 1)
output = relay.Tuple([bop_1919,call_1930,var_1931,const_1932,])
output2 = relay.Tuple([bop_1919,call_1933,var_1931,const_1932,])
func_1942 = relay.Function([var_1917,var_1918,var_1931,], output)
mod['func_1942'] = func_1942
mod = relay.transform.InferType()(mod)
mutated_mod['func_1942'] = func_1942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1942_call = mutated_mod.get_global_var('func_1942')
var_1944 = relay.var("var_1944", dtype = "float64", shape = (1, 11, 11))#candidate|1944|(1, 11, 11)|var|float64
var_1945 = relay.var("var_1945", dtype = "float64", shape = (13, 11, 11))#candidate|1945|(13, 11, 11)|var|float64
var_1946 = relay.var("var_1946", dtype = "uint16", shape = (24,))#candidate|1946|(24,)|var|uint16
call_1943 = func_1942_call(var_1944,var_1945,var_1946,)
output = call_1943
func_1947 = relay.Function([var_1944,var_1945,var_1946,], output)
mutated_mod['func_1947'] = func_1947
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2056 = relay.var("var_2056", dtype = "float64", shape = (7, 16, 3))#candidate|2056|(7, 16, 3)|var|float64
uop_2057 = relay.cos(var_2056.astype('float64')) # shape=(7, 16, 3)
output = relay.Tuple([uop_2057,])
output2 = relay.Tuple([uop_2057,])
func_2069 = relay.Function([var_2056,], output)
mod['func_2069'] = func_2069
mod = relay.transform.InferType()(mod)
mutated_mod['func_2069'] = func_2069
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2070 = relay.var("var_2070", dtype = "float64", shape = (7, 16, 3))#candidate|2070|(7, 16, 3)|var|float64
func_2069_call = mutated_mod.get_global_var('func_2069')
call_2071 = func_2069_call(var_2070)
output = call_2071
func_2072 = relay.Function([var_2070], output)
mutated_mod['func_2072'] = func_2072
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2237 = relay.var("var_2237", dtype = "float32", shape = ())#candidate|2237|()|var|float32
var_2238 = relay.var("var_2238", dtype = "float32", shape = (8, 11, 4))#candidate|2238|(8, 11, 4)|var|float32
bop_2239 = relay.floor_divide(var_2237.astype('float32'), var_2238.astype('float32')) # shape=(8, 11, 4)
func_1191_call = mod.get_global_var('func_1191')
func_1195_call = mutated_mod.get_global_var('func_1195')
var_2248 = relay.var("var_2248", dtype = "int8", shape = (5, 63))#candidate|2248|(5, 63)|var|int8
call_2247 = relay.TupleGetItem(func_1191_call(relay.reshape(var_2248.astype('int8'), [3, 15, 7]), relay.reshape(var_2248.astype('int8'), [3, 15, 7]), ), 0)
call_2249 = relay.TupleGetItem(func_1195_call(relay.reshape(var_2248.astype('int8'), [3, 15, 7]), relay.reshape(var_2248.astype('int8'), [3, 15, 7]), ), 0)
output = relay.Tuple([bop_2239,call_2247,var_2248,])
output2 = relay.Tuple([bop_2239,call_2249,var_2248,])
func_2254 = relay.Function([var_2237,var_2238,var_2248,], output)
mod['func_2254'] = func_2254
mod = relay.transform.InferType()(mod)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2254_call = mutated_mod.get_global_var('func_2254')
var_2256 = relay.var("var_2256", dtype = "float32", shape = ())#candidate|2256|()|var|float32
var_2257 = relay.var("var_2257", dtype = "float32", shape = (8, 11, 4))#candidate|2257|(8, 11, 4)|var|float32
var_2258 = relay.var("var_2258", dtype = "int8", shape = (5, 63))#candidate|2258|(5, 63)|var|int8
call_2255 = func_2254_call(var_2256,var_2257,var_2258,)
output = call_2255
func_2259 = relay.Function([var_2256,var_2257,var_2258,], output)
mutated_mod['func_2259'] = func_2259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2356 = relay.var("var_2356", dtype = "uint64", shape = (8, 5, 13))#candidate|2356|(8, 5, 13)|var|uint64
var_2357 = relay.var("var_2357", dtype = "uint64", shape = (8, 5, 13))#candidate|2357|(8, 5, 13)|var|uint64
bop_2358 = relay.greater(var_2356.astype('bool'), relay.reshape(var_2357.astype('bool'), relay.shape_of(var_2356))) # shape=(8, 5, 13)
bop_2361 = relay.bitwise_and(var_2357.astype('uint8'), relay.reshape(var_2356.astype('uint8'), relay.shape_of(var_2357))) # shape=(8, 5, 13)
func_112_call = mod.get_global_var('func_112')
func_117_call = mutated_mod.get_global_var('func_117')
const_2375 = relay.const([6,8,10,3,6,2,-5,-9,9,-2,-4,-9,-10,3,1,-9,-6,3,2,9,9,6,-10,1,-8,2,-6,5,9,3,2,5,3,-3,3,3,-5,8,-3,-5,-1,-2,-10,-2,-5,-9,9,6,-3,8,-2,9,-1,1], dtype = "int64")#candidate|2375|(54,)|const|int64
const_2376 = relay.const([-4.685989,-7.220672,-0.603191,7.506219,9.045509,7.482918,6.514383,9.378782,4.015180,-8.340978,7.971213,-6.794710,-8.716781,1.215697,6.927785,-9.216559,2.869626,-1.912876,-4.581591,2.044825,-7.794227,3.954476,9.402656,-7.066530,-0.058405,8.315816,-7.158873,-8.228170,0.142498,-8.140970,-7.247759,-1.008476,4.379704,6.269651,0.965804,-5.903908,7.744138,6.713263,-2.681753,-6.515953,-2.551563,-3.202256,5.228369,-3.482308,-2.551233,-5.896850,0.419060,-0.465274,9.850088,-9.216150,-6.841008,-7.684435,3.672852,-7.906970,8.460535,-7.742780,-0.323626,-5.161811,5.327929,4.348618,6.494978,-6.437680,-7.913751,-4.875249,-1.796123,-7.703538,5.033562,8.346329,-9.180984,-4.309701,-2.382181,-0.364807,0.440446,-0.496450,6.971002,-2.517060,3.722981,5.840852,7.077709,-1.273289,6.854612,-7.887591,3.630586,0.015768,5.921936,-1.866151,-8.274685,6.133926,7.175667,-8.375656,2.843112,-3.527681,-5.534602,-0.833506,3.839392,5.392599,-3.389588,3.298902,9.610942,4.013413,-1.221556,-2.106552,-4.074933,-9.070550,-0.985188,-6.917907,9.385051,-5.981764,3.046553,4.060795,4.794904,8.565795,-8.266278,-7.955831,3.825444,-6.845872,7.763454,-0.700017,-0.173702,9.113989,1.815269,-9.073539,-1.261388,-2.065048,-6.431816,-8.006575,6.174216,5.487388,-1.297807,6.587098,7.122530,7.138199,1.277094,0.974062,-6.120912,-8.179312,-0.418945,-9.117171,5.536810,-3.351859,-3.157677,-1.950438,-0.901957,8.673583,1.622139,-8.170102,8.147776,3.232139,3.399777,-7.646448,8.992948,-0.465307,-2.152440,9.755433,8.037051,6.077624,-9.698294,0.075140,7.672276,-4.100890,-3.839115,3.755999,-5.740629,-5.379803,2.445390,-6.764407,5.367125,0.781871,8.269195,3.160116,-2.163463,2.197788,-8.753900,-4.204856,1.503932,-3.229274,3.639152,8.753845,-1.423125,-7.632231,5.321267,8.512708,2.144521,-0.748039,4.576236,9.076716,-2.988887,-9.563168,-0.469049,-1.810652,3.665966,3.078118,-7.676012,6.945609,-5.675137,3.456914,-6.731654,-8.152749,3.672182,-3.113589,-5.592220,-6.059513,-7.019469,-7.952341,6.182481,2.527636,5.515946,-0.504926,3.290533,8.798826,3.115303,8.837611,1.683851,3.193798,-8.163324,2.246249,0.855317,0.573473,-7.794609,-9.849403,-2.574962,3.838904,-5.120647,-9.211894,2.210458,8.938401,-2.039176,-3.170028,-4.890336,-8.332548,0.327743,-0.761311,5.228287,7.791188,7.745809,-1.712719,0.443918,7.583413,8.479300,1.620673,9.106835,9.896909,-4.319643,4.376676,1.380798,6.996457,8.185905,2.393067,-0.021419,6.837280,0.433129,2.397603,6.161585,-1.771741,-3.743935,0.935564,4.389955,1.639822,-7.147922,-7.162332,-7.811439,-2.069800,7.729034,0.158382,-3.089255,2.528856,-4.207124,-4.347003,-7.141135,-9.678665,4.497764,-4.557323,-1.531027,-9.238397,7.668345,-9.054386,-6.629562,2.537261,-0.712217,3.506827,1.916740,-4.859960,-7.236532,1.832020,-7.020971,5.031668,6.059984,-9.611696,-1.311023,-3.911420,9.185658,1.541609,-9.647202,-0.901968,7.410201,6.372700,-5.804784,-9.183457,8.346131,5.218446,4.591080,3.814601,3.739804,-4.447680,-4.063933,3.667206,2.666128,7.937683,3.458580,5.176588,-4.775680,-3.156375,-6.918277,7.333662,-4.741527,8.509751,3.779949,2.982077,-8.974359,-1.917754,-5.496952,8.919710,8.843284,7.060791,-9.146776,8.745517,-2.840166,5.674925,9.617347,-9.108699,-5.206198,3.861174,-6.897043,-3.777281,0.734231,5.145499,-7.234607,4.772359,3.676200,-6.643263,9.375611,-4.830959,5.561351,3.921760,-0.298225,5.379658,2.014187,2.517609,7.298065,4.212203,-6.289665,-0.032746,3.251143,-8.351914,9.907156,-5.997026,8.954850,-4.293501,-3.985499,7.418490,9.981779,3.944616,2.118360,-7.034626,-4.128353,8.726169,-9.313932,4.053258,-3.070909,-0.846178,3.572151,-3.673241,-5.837156,6.351181,-1.409117,6.183488,0.743109,5.652384,8.480561,1.725377,4.630311,9.236354,7.693441,3.218869,-4.673441,7.677914,-9.052749,-2.058437,-6.644208,0.008457,-4.351125,-7.743627,-8.849908,6.131015,0.510780,9.093113,8.228868,-5.798682,-9.102277,-4.765031,8.589843,-5.396491,-0.906174,-8.138160,-1.419718,3.550908,3.849764,8.418861,8.706075,1.942615,4.344386,9.917666,7.053264,5.149971,7.295823,8.651217,6.008957,-9.938531,-7.022549,-3.097352,2.509957,-1.898456,2.743247,-9.560081,-8.328289,8.994364,-6.077524,-1.351752,-8.920383,9.944103,-9.374296,6.852694,-8.572148,3.532641,-8.036574,-6.720473,1.802029,-2.391685,-3.410717,-3.470016,8.269904,-1.505710,-0.940368,8.654295,5.757549,9.710767,3.139100,6.308485,-4.656317,8.511166,9.017420,-4.701330,-0.870097,4.663945,8.192372,2.439210,-9.922245,4.810018,-3.019702,2.749924,8.761089,6.055822,5.547922,4.104095,7.642784,0.497599,-8.336196,-7.266801,-3.238433,3.209031,1.982791,-3.840131,-3.979862,-3.695841,8.999861,-8.211138,-7.714437,6.514817,7.080859,-2.342002,8.478147,2.194333,2.952554,-7.015697,4.480055,-2.028045,-9.014719,-0.881973,-3.869711,-2.717232,6.157891,-9.645209,-3.490291,8.681474,-3.711939,9.497321,8.517814,4.989719,-7.492907,1.533919,6.214701,-3.501502,-7.015091,4.295024,0.442494,-1.607154,-0.695579,7.145778,0.446554,-4.145066,-3.718494,4.969782,-3.316244,-5.542027,4.114295,2.353126,1.446416,-1.649837,-1.302531,-7.942056,8.997365,-0.297927,-4.824435,1.929674,1.370902,3.775109,5.344395,9.150016,-4.045979,-0.247184,1.697309,-6.329026,0.420528,3.091107,-9.008163,8.859450,-2.897920,-3.454640,0.868216,-9.575337,1.817512,-9.167540,2.419955,1.361787,-7.354599,9.257896,6.043924,-5.815658,-1.937035,-2.673403,-0.401342,1.472609,-0.972291,2.602921,4.517207,-3.968488,1.011151,8.548144,-7.757330,-3.370048,-7.321194,4.779026,-4.179870,-6.446645,6.976315,8.520457,-5.576793,-3.217471,-6.039565,6.526799,-6.397928,0.436570,-1.613916,-8.549242,6.291919,6.422756,-3.772156,4.902525,6.349415,4.910690,-9.743281,-2.741446,4.836321,1.226504,-7.298210,4.765502,-3.280971,-5.229638,3.624502,-5.360378,-9.463673,-2.610731,-5.488105,9.261893,5.448639,-6.328246,8.903928,7.239314,3.762693,4.935574,6.233953,-9.282973,6.361336,-6.385535,6.645195,0.942822,5.674696,-3.791797,4.736548,9.046585,2.644146,-0.195386,-6.881694,3.401753,2.311112,9.183490,-3.698975,-1.334025,-3.037574,-5.306961,1.909511,2.496134,-3.181632,-7.587497,4.651713,-6.539440,1.527947,-6.711473,-1.177640,-8.474062,-0.160979,-3.579084,3.250281,-3.837810,-1.147575,-4.315051,-5.598188,-2.060067,3.366312,-5.868141,-8.498246,8.604972,9.076192,5.865010,-8.091361,2.653588,0.702872,1.745499,5.505637,-5.680592,-4.398233,1.307282,6.178123,7.147912,9.822781,1.762608,6.862758,8.614840,-5.374959,-8.370047,-6.338281,3.114609,-1.563858,2.318734,-3.637588,0.617667,-5.994279,1.717856,-0.907073,-3.043616,-3.178512,0.230747,3.682629,9.839175,6.870305,-0.783518,9.839629,1.977299,-1.915070,1.643047,-1.134105,7.274237,-0.868461,-0.016598,-8.156398,-6.505826,9.071364,-2.534217,-1.037103,-1.685021,3.150874,-5.736950,5.808174,-1.365712,-0.548678,-4.758897,-1.993009,7.064020,7.437190,7.297166,-6.327094,-3.225083,5.980124,-7.340461,-2.025940,0.335229,2.138067,2.305115,0.273347,-7.839169,8.349564,7.803721,7.721533,-2.277855,-1.709206,-6.266982,2.310672,-4.907291,2.549689,5.814770,-6.516631,2.273232,-4.727363,-3.862541,3.100629,8.397287,7.537228,-6.341687,9.249122,3.223587,4.958515,-1.888001,5.200998,8.183168,-3.036908,-9.286082,-1.624092,-8.166581,-5.110115,-8.756800,-1.114483,1.812401,-9.459521,-1.299225,-9.068591,-7.496603,6.058295,1.853240,9.025912,1.125089,1.112145,-0.660264,7.737728,-8.249253,4.766656,9.994586,-1.235590,-7.324274,0.045152,-5.621115,-4.757939,1.681358,3.704206,-2.013337,9.141915,-1.279015,-5.310018,-0.456607,-8.380111,7.964289,-7.270586,5.289655,4.611747,5.627747,-6.372477,2.735983,-0.977864,-0.442392,2.006868,5.282003,-3.192487,8.879390,-3.711361,-2.216221,-7.808901,1.201624,5.044111,5.254614,-7.677205,8.446668,-9.024334,9.644880,8.364506,-5.686059,1.251335,8.664137,-2.019382,-1.608886,7.384761,4.443995,-1.430849,-1.626818,7.958788,1.155183,-0.032233,-4.002892,7.799854,-3.032478,4.494746,4.951002,-1.826123,-4.312727,8.759978,7.589305,5.431959,-5.294241,3.839971,5.564857,-8.656687,-8.100120,0.271130,3.783786,4.408393,3.237459,-5.784463,0.276377,-0.553919,5.304467,-2.285973,-7.129431,0.016808,7.776157,7.958159,4.920575,3.803528,-5.488919,-5.142102,0.163342,5.993864,-7.680245,6.900534,-5.792323,0.050080,2.952494,1.770504,-4.951988,-2.779353,8.982686,-9.264271,4.236903,3.940566,3.550896,7.329431,7.066232,0.010887,0.318808,0.686427,-5.821423,5.615819,-8.169644,5.398032,-3.136198,-7.381533,0.263203,-9.620818,8.371837,6.806294,-8.987146,8.065531,0.352448,3.082775,-9.669033,7.462612,-5.929768,-3.127966,7.924079,2.092727,-3.806720,0.032015,-0.278476,-1.149368,1.685615], dtype = "float64")#candidate|2376|(882,)|const|float64
call_2374 = relay.TupleGetItem(func_112_call(relay.reshape(const_2375.astype('int64'), [9, 3, 2]), relay.reshape(const_2375.astype('int64'), [9, 3, 2]), relay.reshape(const_2376.astype('float64'), [882,]), ), 1)
call_2377 = relay.TupleGetItem(func_117_call(relay.reshape(const_2375.astype('int64'), [9, 3, 2]), relay.reshape(const_2375.astype('int64'), [9, 3, 2]), relay.reshape(const_2376.astype('float64'), [882,]), ), 1)
uop_2378 = relay.rsqrt(bop_2358.astype('float64')) # shape=(8, 5, 13)
output = relay.Tuple([bop_2361,call_2374,const_2375,const_2376,uop_2378,])
output2 = relay.Tuple([bop_2361,call_2377,const_2375,const_2376,uop_2378,])
func_2392 = relay.Function([var_2356,var_2357,], output)
mod['func_2392'] = func_2392
mod = relay.transform.InferType()(mod)
var_2393 = relay.var("var_2393", dtype = "uint64", shape = (8, 5, 13))#candidate|2393|(8, 5, 13)|var|uint64
var_2394 = relay.var("var_2394", dtype = "uint64", shape = (8, 5, 13))#candidate|2394|(8, 5, 13)|var|uint64
output = func_2392(var_2393,var_2394,)
func_2395 = relay.Function([var_2393,var_2394,], output)
mutated_mod['func_2395'] = func_2395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2598 = relay.var("var_2598", dtype = "float64", shape = (15, 3, 5))#candidate|2598|(15, 3, 5)|var|float64
uop_2599 = relay.acos(var_2598.astype('float64')) # shape=(15, 3, 5)
uop_2615 = relay.log2(var_2598.astype('float64')) # shape=(15, 3, 5)
func_1897_call = mod.get_global_var('func_1897')
func_1903_call = mutated_mod.get_global_var('func_1903')
var_2640 = relay.var("var_2640", dtype = "float32", shape = (364,))#candidate|2640|(364,)|var|float32
var_2641 = relay.var("var_2641", dtype = "float64", shape = (882,))#candidate|2641|(882,)|var|float64
var_2642 = relay.var("var_2642", dtype = "int8", shape = (315,))#candidate|2642|(315,)|var|int8
call_2639 = relay.TupleGetItem(func_1897_call(relay.reshape(var_2640.astype('float32'), [13, 4, 7]), relay.reshape(var_2640.astype('float32'), [13, 4, 7]), relay.reshape(var_2641.astype('float64'), [882,]), relay.reshape(var_2642.astype('int8'), [315,]), ), 3)
call_2643 = relay.TupleGetItem(func_1903_call(relay.reshape(var_2640.astype('float32'), [13, 4, 7]), relay.reshape(var_2640.astype('float32'), [13, 4, 7]), relay.reshape(var_2641.astype('float64'), [882,]), relay.reshape(var_2642.astype('int8'), [315,]), ), 3)
output = relay.Tuple([uop_2599,uop_2615,call_2639,var_2640,var_2641,var_2642,])
output2 = relay.Tuple([uop_2599,uop_2615,call_2643,var_2640,var_2641,var_2642,])
func_2647 = relay.Function([var_2598,var_2640,var_2641,var_2642,], output)
mod['func_2647'] = func_2647
mod = relay.transform.InferType()(mod)
mutated_mod['func_2647'] = func_2647
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2647_call = mutated_mod.get_global_var('func_2647')
var_2649 = relay.var("var_2649", dtype = "float64", shape = (15, 3, 5))#candidate|2649|(15, 3, 5)|var|float64
var_2650 = relay.var("var_2650", dtype = "float32", shape = (364,))#candidate|2650|(364,)|var|float32
var_2651 = relay.var("var_2651", dtype = "float64", shape = (882,))#candidate|2651|(882,)|var|float64
var_2652 = relay.var("var_2652", dtype = "int8", shape = (315,))#candidate|2652|(315,)|var|int8
call_2648 = func_2647_call(var_2649,var_2650,var_2651,var_2652,)
output = call_2648
func_2653 = relay.Function([var_2649,var_2650,var_2651,var_2652,], output)
mutated_mod['func_2653'] = func_2653
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3323 = relay.var("var_3323", dtype = "float64", shape = (7, 5, 9))#candidate|3323|(7, 5, 9)|var|float64
uop_3324 = relay.tan(var_3323.astype('float64')) # shape=(7, 5, 9)
output = uop_3324
output2 = uop_3324
func_3329 = relay.Function([var_3323,], output)
mod['func_3329'] = func_3329
mod = relay.transform.InferType()(mod)
var_3330 = relay.var("var_3330", dtype = "float64", shape = (7, 5, 9))#candidate|3330|(7, 5, 9)|var|float64
output = func_3329(var_3330)
func_3331 = relay.Function([var_3330], output)
mutated_mod['func_3331'] = func_3331
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3482 = relay.var("var_3482", dtype = "uint8", shape = (10, 9, 12))#candidate|3482|(10, 9, 12)|var|uint8
const_3483 = relay.const([[[8,6,4,5,7,-8,-10,10,-8,2,-5,-8],[5,8,4,2,7,-2,-7,-7,-2,-7,-7,8],[-4,-5,-5,-10,4,8,5,-10,7,-1,8,1],[2,4,-4,5,3,7,-2,10,-6,-3,-8,1],[-4,2,-2,-4,8,4,-8,-2,-10,1,-7,-9],[9,1,-5,-5,-5,-3,-7,-1,-4,-8,7,-5],[8,-10,-7,7,-1,5,9,6,-6,-2,7,7],[10,8,-7,4,-1,2,5,3,-6,-3,10,-2],[8,7,-7,9,-4,-7,-1,8,-7,-9,-8,8]],[[3,-2,1,-7,-7,-6,-3,-4,-3,-7,1,-4],[4,3,-6,-9,-4,-1,-2,-6,3,5,-9,2],[-9,-6,-2,1,4,1,4,-8,-10,3,-7,3],[1,5,-7,3,6,8,-10,6,-2,-5,-7,-7],[1,-9,1,10,9,3,4,2,5,-8,1,-10],[-10,-1,7,-4,-2,-9,-6,-6,-4,-9,-6,8],[2,-8,-9,6,-3,-6,9,-9,6,1,-8,-5],[5,-1,-6,2,-5,1,-9,3,5,10,-3,2],[-10,-1,1,1,1,-9,-2,-7,1,1,4,-2]],[[5,-3,-5,-10,-10,-1,7,9,3,5,8,2],[-9,-1,-9,1,7,4,1,-4,5,3,7,-9],[1,6,7,9,1,8,5,5,5,1,-3,8],[2,9,-3,-2,2,4,-5,5,4,-7,-7,10],[-4,-10,8,5,7,-9,-10,-7,-8,4,-7,-3],[-6,-2,5,-5,-3,-5,2,10,2,4,-2,-6],[3,6,-3,-2,9,2,-6,-2,3,-9,-5,-4],[2,-1,-10,-5,-9,2,-7,-10,8,2,-8,-2],[-4,-6,2,8,-10,8,-7,3,-1,-9,9,7]],[[-1,1,5,-10,4,10,6,10,6,-5,1,1],[3,2,-9,-1,-2,-10,4,8,8,4,5,-9],[3,5,2,-6,8,-8,1,-7,-10,9,-9,-1],[-4,-10,-8,9,-6,5,-2,4,-1,5,2,2],[-3,7,2,8,3,-7,10,2,2,-4,8,-2],[-2,10,3,7,7,-7,-6,-4,-6,1,9,-1],[-3,-5,5,-10,6,-1,4,-4,-4,9,-9,-8],[-6,-10,4,-5,-8,-8,10,10,-9,-5,-8,1],[2,-3,-3,-6,2,3,9,3,-10,2,10,-6]],[[-10,-2,-1,-2,5,6,8,8,-9,-8,-10,-8],[3,-2,10,1,-10,8,-6,-6,10,8,3,-10],[8,1,-8,-8,-6,3,8,-6,7,-10,8,3],[-8,-6,8,3,3,-3,2,-3,4,6,9,10],[8,8,-8,4,3,-8,5,8,7,10,-5,-10],[8,-2,-8,1,-4,1,-10,-9,4,-6,1,8],[5,9,-2,10,-9,-5,5,-4,-4,1,2,7],[-9,9,-6,10,-7,-3,10,-7,6,-5,-9,-7],[5,-9,10,-5,10,9,-10,-9,-7,-6,-8,7]],[[6,-2,-2,9,1,-6,-3,-9,4,-9,6,3],[-2,4,3,-3,-7,5,-8,-9,-10,9,6,6],[-6,6,5,-9,10,9,7,2,1,-3,2,7],[9,-5,3,-6,-6,-5,4,10,-9,7,2,-10],[-9,-1,7,10,3,-10,7,-7,10,6,4,-10],[-6,9,-6,-3,5,5,4,-7,-3,5,-7,-4],[2,3,-5,-1,7,1,10,-8,7,-7,9,10],[-3,1,-5,6,-5,5,1,-3,5,-2,5,10],[-5,5,-10,-7,9,-4,-5,2,-9,-1,3,9]],[[-5,5,-2,4,-1,-3,-5,6,2,-8,10,8],[9,10,-3,-1,9,-10,10,-10,4,-4,8,3],[-1,7,-5,3,-4,7,1,8,6,2,-2,7],[-8,7,4,-3,2,-6,-7,-10,-1,10,7,-3],[4,6,-8,3,7,-1,9,4,8,-8,-9,7],[5,2,-5,-4,-10,6,5,-7,9,-3,-6,10],[9,8,-6,9,-10,5,8,6,-10,-8,-2,-9],[-5,-9,-1,2,5,-9,-4,-2,9,-10,7,-5],[-8,1,-9,1,5,2,7,6,-5,4,-3,-4]],[[4,-9,9,7,10,7,10,-3,8,-1,-1,-10],[3,-6,10,9,3,6,-4,9,-3,-3,-8,8],[-4,-2,9,3,-4,8,-8,-10,7,-3,9,6],[2,-4,8,6,-2,-10,10,3,-4,-10,8,-3],[5,5,-2,3,10,4,-9,1,1,-2,-5,-7],[-6,1,-6,-8,-4,5,5,2,5,-3,-8,-6],[6,-10,-5,-1,-5,-4,9,-1,6,-1,-4,-6],[10,-3,-6,5,-7,2,-1,2,7,6,7,-1],[5,-3,6,8,-1,-2,10,-8,2,8,4,1]],[[7,7,9,8,-1,-3,-2,-3,-1,-9,-4,-7],[-8,-2,-6,-4,-4,-8,9,7,9,-9,10,-4],[-8,-4,-2,9,-8,4,7,9,-9,2,-1,9],[8,10,1,1,-1,-10,-5,-4,-3,9,4,-1],[2,-10,2,-4,-9,-10,-2,-10,7,-5,2,-7],[6,4,3,3,-7,-2,-6,1,5,-8,4,8],[-9,-8,-10,5,-3,6,-2,-3,3,2,-6,-5],[-6,-5,-2,-4,6,1,6,-4,4,-5,10,-9],[-5,-4,-4,9,-1,-10,9,-3,5,3,-1,10]],[[-8,4,-5,2,-4,1,5,-7,6,1,-3,-10],[-10,10,1,-7,-7,8,-3,-9,9,6,2,2],[1,3,2,2,8,3,4,-10,-4,10,-1,6],[-1,-5,4,-2,3,-10,-1,-6,4,2,-3,8],[3,5,-7,5,1,-2,7,3,1,4,-6,5],[-2,-8,1,2,-4,-9,6,-10,4,-6,-9,-3],[-10,4,-9,-6,10,-8,1,-7,5,-7,-2,1],[-2,8,-4,2,10,-2,9,-4,3,7,9,9],[10,8,3,-9,-6,6,10,6,6,-10,7,3]]], dtype = "uint8")#candidate|3483|(10, 9, 12)|const|uint8
bop_3484 = relay.equal(var_3482.astype('bool'), relay.reshape(const_3483.astype('bool'), relay.shape_of(var_3482))) # shape=(10, 9, 12)
func_2069_call = mod.get_global_var('func_2069')
func_2072_call = mutated_mod.get_global_var('func_2072')
const_3501 = relay.const([-8.822512,-6.797638,-8.046611,-9.950321,-7.015426,-0.828702,-0.087848,4.658946,3.436272,-2.957142,9.114933,-5.968953,-2.488044,9.285364,6.178204,9.107718,8.211016,-8.023302,-6.519002,2.910415,0.525425,-6.350987,8.122810,6.742057,-4.028903,-7.408646,8.307635,9.600163,-8.061791,-9.613104,6.352615,8.236751,6.856801,5.252469,1.023987,-3.406268,-3.106094,-1.477363,3.659174,8.101423,8.718507,4.388932,-5.736070,-5.383710,2.026253,9.217155,-2.885139,5.286799,-0.721974,7.509094,-5.751714,3.199133,-3.760588,-5.107695,1.140281,4.670899,0.982116,2.788947,-4.122967,-3.445134,-3.720982,-4.593839,1.433529,9.853892,-8.688823,2.546783,-4.706616,-1.684069,-6.718651,-1.085310,-5.708532,-8.513153,9.456070,2.681758,2.900656,3.414796,3.837989,7.294879,-4.598587,2.814193,4.399222,4.354426,5.388164,6.579132,-7.284781,9.310499,8.911764,-5.186934,2.275353,-5.990574,-3.469443,9.564343,-8.148702,-0.855111,5.899003,4.496303,-9.029602,-3.194299,-6.629435,0.920676,-0.880375,2.195796,-0.708591,-7.680128,-2.446081,-3.354062,-0.095232,-4.769386,-4.950132,1.509448,-1.190106,4.360640,4.705907,-6.988469,4.187147,-3.353768,-4.921228,2.659270,-9.259871,1.865054,9.826607,0.503104,4.197831,-9.834208,-1.236158,5.772696,-4.092109,9.263198,-3.069505,-3.175720,3.048759,6.301163,-8.349433,-5.429891,-7.579177,9.713356,6.582350,-9.506302,6.274837,9.321135,-6.586871,-8.814026,8.763863,3.030356,-7.778415,7.939868,-8.405025,2.335672,2.449872,4.786038,6.987899,3.417682,6.717633,1.964906,-5.823055,-0.153323,9.886083,-0.144242,-2.391162,6.447932,0.393727,-0.639695,2.921965,-0.175514,8.407665,5.732001,0.180539,-9.375448,-9.377180,1.286217,-5.446547,3.876329,-0.802700,-1.802606,7.892505,2.728506,-9.586608,0.156550,-3.986048,-7.145542,3.008888,-6.151535,2.434337,-2.436171,9.824503,-9.230948,1.987261,4.005641,2.231505,0.189842,2.340643,4.476407,-7.612435,-0.051723,0.688863,3.612462,-3.197491,2.994690,-5.074570,3.548184,6.037914,3.215603,2.883048,-4.321044,-7.276174,-0.844091,2.579963,2.544803,-7.958755,-4.479903,-2.066248,-4.524105,3.425333,-4.183016,3.786154,1.253265,-1.801851,-8.020119,-4.622168,-8.143486,-7.357232,-5.402930,2.296235,1.332323,1.641237,7.559764,7.084061,-7.853422,5.404350,-5.950919,-3.904329,6.557311,-3.439916,8.102709,-2.513840,6.458789,-4.479838,-9.985699,6.970900,4.311045,1.330952,2.630358,-0.786190,-0.964258,-6.748693,8.933574,-7.095682,9.267807,-2.330304,3.410798,0.278421,1.935554,3.468346,5.688059,3.878048,7.345085,0.242899,-9.874417,5.383473,2.072093,9.181024,-5.426344,5.538594,2.740146,-1.444964,-0.795919,4.169052,3.160957,-8.292713,-1.321506,7.910737,-0.449803,-1.871025,3.612017,9.671507,6.963363,4.781283,8.611847,-0.718946,-9.835454,1.314223,-6.147177,-2.567219,8.528951,-2.180689,-5.392389,-6.531063,-8.104003,5.074774,-4.799246,-3.855384,-0.051443,3.759546,-2.063800,-2.495462,9.220300,3.904728,-1.575306,5.771967,-3.286188,6.888058,-6.093351,-5.517424,-6.191873,-4.534587,-8.450303,9.039276,-6.038747,-9.196027,-0.089575,9.876335,7.012263,4.479522,-5.112945,5.441229,-1.186262,1.479491,-6.534766,5.244828,-7.868086,3.906690,-1.494718,4.264341,-7.406781,5.434753,-2.739576,-3.253960,7.270387,4.021317,-8.848355,4.983710,-8.358514,9.540100,-8.148585,8.448676,-9.440405], dtype = "float64")#candidate|3501|(336,)|const|float64
call_3500 = relay.TupleGetItem(func_2069_call(relay.reshape(const_3501.astype('float64'), [7, 16, 3])), 0)
call_3502 = relay.TupleGetItem(func_2072_call(relay.reshape(const_3501.astype('float64'), [7, 16, 3])), 0)
output = relay.Tuple([bop_3484,call_3500,const_3501,])
output2 = relay.Tuple([bop_3484,call_3502,const_3501,])
func_3514 = relay.Function([var_3482,], output)
mod['func_3514'] = func_3514
mod = relay.transform.InferType()(mod)
var_3515 = relay.var("var_3515", dtype = "uint8", shape = (10, 9, 12))#candidate|3515|(10, 9, 12)|var|uint8
output = func_3514(var_3515)
func_3516 = relay.Function([var_3515], output)
mutated_mod['func_3516'] = func_3516
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3647 = relay.const([[[2,4,6,-10,-10,-3,-3,-7,-5,-10,-6,-1],[-8,-3,-4,2,8,3,-1,1,5,4,-10,-10],[-8,6,-3,4,-1,-8,3,-10,-7,-7,7,10],[1,-9,7,-5,-2,-8,-9,6,1,-4,5,-5],[8,-1,-1,4,6,-10,5,-5,6,1,6,-3]],[[5,-3,-3,5,10,6,-8,3,6,-7,9,-9],[7,-10,9,-2,-3,7,3,9,7,-7,6,8],[-3,4,-9,9,-2,1,-4,-8,-7,-5,6,-6],[-7,-7,-4,6,4,-9,10,-10,-7,-4,3,-8],[-8,3,-4,6,-3,-6,-9,-4,10,-7,3,3]],[[-6,3,-2,2,-3,-1,-5,10,-1,4,-9,-5],[6,-1,7,1,4,3,-4,-3,9,5,2,-1],[-2,-5,5,-1,-1,-10,-8,-2,-6,8,1,6],[-5,3,6,10,-10,10,4,6,6,4,10,8],[-4,-3,-6,-4,-10,10,-2,4,7,9,5,-9]],[[-3,7,-10,9,-9,-8,3,-6,10,9,-8,5],[-6,9,10,-2,-10,6,4,-3,-8,-8,4,4],[-1,7,5,-5,4,4,-1,-7,-5,-10,-10,2],[7,-1,-5,6,-7,5,4,-4,-5,4,-5,6],[6,1,-2,-6,-4,-9,-1,4,7,1,-3,-10]],[[3,4,-5,-10,-8,-8,5,-7,-10,-7,-1,-8],[-4,10,6,-6,5,7,-10,-2,-9,7,6,-4],[-2,9,5,4,10,5,-5,5,10,-10,10,-7],[6,-6,1,1,2,-9,-1,4,-8,-5,9,2],[1,-8,-6,1,-2,-4,-6,8,-7,3,-3,-9]],[[-8,-3,4,6,9,-8,2,9,-8,-9,-2,-4],[-6,-6,6,8,-10,10,-10,1,10,-8,-1,-6],[-2,5,2,2,8,4,5,-7,7,-1,2,6],[-1,4,-1,-3,3,-8,9,2,-10,-1,-10,-10],[-6,4,10,9,6,5,4,-2,-8,-4,10,2]],[[2,-3,-2,1,-3,-5,7,-6,7,-10,-9,-2],[3,-4,1,3,9,-8,-8,-8,-6,-5,7,5],[5,7,-8,-1,-4,-5,2,8,3,-4,-7,-3],[-3,3,2,-4,-3,-8,-9,-3,-7,7,6,1],[-1,2,7,-10,-6,10,3,2,6,-9,3,9]],[[-2,-9,2,-10,5,3,-9,-2,-8,-2,8,-6],[-8,-3,-7,-10,7,-7,-1,1,1,10,7,-7],[-6,-5,-5,-3,6,-3,-6,-1,-4,3,-7,1],[-10,-8,-3,-3,5,5,9,-4,-4,7,2,5],[10,3,-2,-5,-5,1,-9,-1,10,-4,-6,3]]], dtype = "uint8")#candidate|3647|(8, 5, 12)|const|uint8
const_3648 = relay.const([[[1,-6,3,-1,7,-3,-6,9,9,-10,9,-5],[6,3,9,-10,1,-3,1,-7,6,1,9,1],[-8,-2,-4,-5,2,6,1,-2,-4,-9,10,3],[-7,9,-2,3,-3,9,4,10,4,-7,-2,9],[5,10,3,-3,-8,6,5,2,-6,7,-6,6]],[[-3,-7,2,-2,4,-4,5,-9,10,-5,-7,-4],[9,-5,-8,-7,5,-7,-7,-6,1,10,-7,-9],[4,-3,2,-4,-9,-5,1,8,-7,-3,-4,-7],[-6,10,-4,10,4,9,-1,6,3,6,5,-7],[9,-7,8,-9,-1,-8,10,4,-3,2,5,3]],[[1,-1,-1,1,8,-4,-3,1,-2,10,-10,9],[-5,-7,-9,10,8,-10,-8,1,-10,2,-10,9],[3,5,2,-7,5,1,2,5,1,-1,6,-4],[-8,2,-1,-9,10,8,-8,-1,8,-6,-3,2],[-8,-2,-6,-5,-5,4,7,2,9,-9,6,-9]],[[-4,-5,-10,9,-10,6,-9,10,-7,-4,10,-10],[-8,6,-9,-8,-2,9,8,1,1,3,8,6],[8,8,5,-6,6,-7,-7,-7,-8,10,-4,-5],[10,-7,-1,-4,2,-8,-1,-10,-6,-2,-3,-1],[-5,8,-4,6,-1,2,5,-5,-9,4,9,7]],[[-2,-6,7,-6,8,4,7,6,3,3,6,-7],[-3,5,6,5,10,-2,9,-1,-2,-9,-5,8],[-2,9,9,3,6,3,-9,-1,10,-7,-1,-5],[3,1,-8,-7,-8,-8,-2,-10,-10,-2,9,-9],[-7,9,-5,1,10,-6,-1,-9,-1,7,-10,2]],[[7,-9,7,7,-4,-10,-3,-7,-2,-1,9,-1],[9,-4,4,8,-1,-10,-7,-10,7,10,-2,-1],[3,7,-4,-2,8,-1,-3,-6,10,-3,-4,5],[-5,-1,3,3,-6,8,3,-2,-8,-3,-3,-5],[6,-7,-9,4,-1,-2,9,-10,8,-4,10,1]],[[-8,-6,5,6,-7,4,7,-3,4,-3,-1,-7],[-3,-7,8,8,4,9,-5,-1,-7,-2,4,3],[9,1,10,-8,-1,-5,-4,-7,7,8,-2,-6],[-5,-5,2,-6,-5,2,7,8,6,8,-6,-6],[2,5,-2,-3,9,-5,6,-3,-8,-8,-4,4]],[[-10,8,9,9,10,7,6,1,8,8,7,8],[-4,-4,-3,-8,3,10,-2,7,-2,-3,4,4],[10,-9,1,6,-4,-6,7,9,-10,5,-8,1],[5,-10,10,5,6,-10,-9,-6,5,9,6,3],[9,-7,10,-8,-5,-6,-2,6,-2,5,-1,6]]], dtype = "uint8")#candidate|3648|(8, 5, 12)|const|uint8
bop_3649 = relay.not_equal(const_3647.astype('bool'), relay.reshape(const_3648.astype('bool'), relay.shape_of(const_3647))) # shape=(8, 5, 12)
output = bop_3649
output2 = bop_3649
func_3652 = relay.Function([], output)
mod['func_3652'] = func_3652
mod = relay.transform.InferType()(mod)
output = func_3652()
func_3653 = relay.Function([], output)
mutated_mod['func_3653'] = func_3653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_3668 = func_3652_call()
call_3669 = func_3652_call()
var_3672 = relay.var("var_3672", dtype = "bool", shape = (8, 5, 12))#candidate|3672|(8, 5, 12)|var|bool
bop_3673 = relay.greater_equal(call_3668.astype('bool'), relay.reshape(var_3672.astype('bool'), relay.shape_of(call_3668))) # shape=(8, 5, 12)
bop_3676 = relay.greater_equal(call_3669.astype('bool'), relay.reshape(var_3672.astype('bool'), relay.shape_of(call_3669))) # shape=(8, 5, 12)
uop_3682 = relay.log2(call_3668.astype('float32')) # shape=(8, 5, 12)
uop_3684 = relay.log2(call_3669.astype('float32')) # shape=(8, 5, 12)
func_2392_call = mod.get_global_var('func_2392')
func_2395_call = mutated_mod.get_global_var('func_2395')
const_3687 = relay.const([[-7,-4,-1,-6,-7,7,5,9,4,3,7,-9,-4,1,-6,-7,-3,-7,9,-1,-2,-6,10,4,5,5,9,-2,8,-10,-8,7,-9,6,-6,4,-7,-7,-8,-2,-10,-4,-3,-1,-2,5,-9,1,-7,-8,6,-2],[-4,2,2,4,-3,3,7,-6,7,8,4,-6,6,3,-5,7,-6,3,4,-3,8,-2,-10,-5,-10,4,4,-4,-5,-4,-3,-2,-1,8,2,4,-7,-8,-5,-5,8,8,1,-4,-8,-7,-9,-10,1,8,1,-7],[8,-7,-10,5,-10,-2,4,7,4,5,-10,6,4,7,3,6,-1,4,5,-1,-4,-8,-1,-2,-7,-8,1,10,-7,-3,-3,4,3,-7,-7,5,-3,10,6,-9,-9,1,3,5,10,-2,8,9,2,-2,-6,2],[8,5,4,-10,-3,2,2,-7,7,5,5,-7,-10,8,5,-7,-4,8,6,-2,9,-4,1,-3,-1,4,-2,5,-1,10,-4,9,-9,5,-7,4,-1,8,10,-2,2,8,-6,-8,9,3,4,3,-10,-9,-7,4],[-1,-2,6,3,8,1,-8,3,8,-1,9,-8,-2,8,1,-7,-4,5,-3,-9,-4,8,-1,9,6,-4,4,4,10,-7,-3,3,-5,9,-9,-10,-1,4,9,1,-3,-10,8,5,7,-9,8,10,-2,-1,9,5],[2,-2,-3,6,-8,3,4,4,-1,2,6,-3,2,3,-9,-1,-8,-2,8,6,-8,-3,-10,4,9,3,7,-8,-1,-2,9,-3,-10,9,5,-3,-8,-5,-3,-2,-4,-10,2,-2,8,5,-1,6,3,7,-5,-5],[7,3,-1,-2,1,-8,1,6,-5,-7,-9,-8,-2,-2,-7,2,-9,6,2,-2,2,-4,1,-2,-8,5,-6,2,9,-7,-3,4,3,-9,-8,8,3,2,-1,-2,-5,-8,1,-9,4,-9,-4,-6,-3,-4,5,2],[3,4,10,4,-1,4,-2,2,-8,10,4,-9,-10,7,-4,-5,-4,-2,3,8,10,-7,5,-6,-10,3,2,-2,-4,10,-9,6,4,-6,5,2,-5,6,8,-5,8,-4,-1,-3,-7,-2,7,-10,5,9,-1,5],[-10,10,-1,-6,-10,-9,9,5,-6,4,6,-6,1,2,4,2,8,-2,4,10,-10,-6,-3,-7,-9,-4,-5,7,-4,2,6,-4,5,-3,-5,4,4,-6,-10,-7,4,-5,2,8,10,-5,-3,1,8,8,9,-1],[-1,-3,10,1,3,-2,7,10,10,-4,-6,-1,-10,-8,-1,3,5,-5,6,-8,4,-4,10,10,9,2,-8,-2,4,-7,-10,-8,-8,2,1,-3,-2,7,10,3,-1,7,-10,10,-2,10,9,8,1,1,4,8]], dtype = "uint64")#candidate|3687|(10, 52)|const|uint64
call_3686 = relay.TupleGetItem(func_2392_call(relay.reshape(const_3687.astype('uint64'), [8, 5, 13]), relay.reshape(const_3687.astype('uint64'), [8, 5, 13]), ), 3)
call_3688 = relay.TupleGetItem(func_2395_call(relay.reshape(const_3687.astype('uint64'), [8, 5, 13]), relay.reshape(const_3687.astype('uint64'), [8, 5, 13]), ), 3)
bop_3691 = relay.logical_xor(uop_3682.astype('uint8'), relay.reshape(bop_3673.astype('uint8'), relay.shape_of(uop_3682))) # shape=(8, 5, 12)
bop_3694 = relay.logical_xor(uop_3684.astype('uint8'), relay.reshape(bop_3676.astype('uint8'), relay.shape_of(uop_3684))) # shape=(8, 5, 12)
bop_3695 = relay.minimum(call_3668.astype('uint8'), relay.reshape(bop_3673.astype('uint8'), relay.shape_of(call_3668))) # shape=(8, 5, 12)
bop_3698 = relay.minimum(call_3669.astype('uint8'), relay.reshape(bop_3676.astype('uint8'), relay.shape_of(call_3669))) # shape=(8, 5, 12)
func_112_call = mod.get_global_var('func_112')
func_117_call = mutated_mod.get_global_var('func_117')
var_3708 = relay.var("var_3708", dtype = "int64", shape = (54,))#candidate|3708|(54,)|var|int64
call_3707 = relay.TupleGetItem(func_112_call(relay.reshape(var_3708.astype('int64'), [9, 3, 2]), relay.reshape(var_3708.astype('int64'), [9, 3, 2]), relay.reshape(call_3686.astype('float64'), [882,]), ), 0)
call_3709 = relay.TupleGetItem(func_117_call(relay.reshape(var_3708.astype('int64'), [9, 3, 2]), relay.reshape(var_3708.astype('int64'), [9, 3, 2]), relay.reshape(call_3686.astype('float64'), [882,]), ), 0)
func_1775_call = mod.get_global_var('func_1775')
func_1778_call = mutated_mod.get_global_var('func_1778')
var_3713 = relay.var("var_3713", dtype = "float32", shape = (300,))#candidate|3713|(300,)|var|float32
call_3712 = relay.TupleGetItem(func_1775_call(relay.reshape(var_3713.astype('float32'), [5, 15, 4])), 0)
call_3714 = relay.TupleGetItem(func_1778_call(relay.reshape(var_3713.astype('float32'), [5, 15, 4])), 0)
uop_3718 = relay.rsqrt(var_3713.astype('float32')) # shape=(300,)
output = relay.Tuple([call_3686,const_3687,bop_3691,bop_3695,call_3707,var_3708,call_3712,uop_3718,])
output2 = relay.Tuple([call_3688,const_3687,bop_3694,bop_3698,call_3709,var_3708,call_3714,uop_3718,])
func_3727 = relay.Function([var_3672,var_3708,var_3713,], output)
mod['func_3727'] = func_3727
mod = relay.transform.InferType()(mod)
mutated_mod['func_3727'] = func_3727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3727_call = mutated_mod.get_global_var('func_3727')
var_3729 = relay.var("var_3729", dtype = "bool", shape = (8, 5, 12))#candidate|3729|(8, 5, 12)|var|bool
var_3730 = relay.var("var_3730", dtype = "int64", shape = (54,))#candidate|3730|(54,)|var|int64
var_3731 = relay.var("var_3731", dtype = "float32", shape = (300,))#candidate|3731|(300,)|var|float32
call_3728 = func_3727_call(var_3729,var_3730,var_3731,)
output = call_3728
func_3732 = relay.Function([var_3729,var_3730,var_3731,], output)
mutated_mod['func_3732'] = func_3732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_3751 = func_3652_call()
call_3752 = func_3652_call()
output = relay.Tuple([call_3751,])
output2 = relay.Tuple([call_3752,])
func_3764 = relay.Function([], output)
mod['func_3764'] = func_3764
mod = relay.transform.InferType()(mod)
mutated_mod['func_3764'] = func_3764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mutated_mod.get_global_var('func_3764')
call_3765 = func_3764_call()
output = call_3765
func_3766 = relay.Function([], output)
mutated_mod['func_3766'] = func_3766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_3781 = relay.TupleGetItem(func_3764_call(), 0)
call_3782 = relay.TupleGetItem(func_3766_call(), 0)
output = relay.Tuple([call_3781,])
output2 = relay.Tuple([call_3782,])
func_3800 = relay.Function([], output)
mod['func_3800'] = func_3800
mod = relay.transform.InferType()(mod)
output = func_3800()
func_3801 = relay.Function([], output)
mutated_mod['func_3801'] = func_3801
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_3814 = relay.TupleGetItem(func_3764_call(), 0)
call_3815 = relay.TupleGetItem(func_3766_call(), 0)
output = relay.Tuple([call_3814,])
output2 = relay.Tuple([call_3815,])
func_3819 = relay.Function([], output)
mod['func_3819'] = func_3819
mod = relay.transform.InferType()(mod)
mutated_mod['func_3819'] = func_3819
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mutated_mod.get_global_var('func_3819')
call_3820 = func_3819_call()
output = call_3820
func_3821 = relay.Function([], output)
mutated_mod['func_3821'] = func_3821
mutated_mod = relay.transform.InferType()(mutated_mod)
const_3822 = relay.const([[[7,6,-4,-3,1],[-1,7,5,1,-7],[10,-7,6,4,-7],[5,-2,3,2,-8],[7,-6,-5,8,-4],[10,-3,-1,-1,4],[1,-3,10,8,-5],[7,-6,-6,-3,-6],[3,1,10,-4,-8],[-2,-8,1,-2,-2]],[[-5,-9,-1,1,-3],[-2,-2,-2,-6,5],[5,-2,-2,-10,10],[-1,10,-6,-7,6],[-6,6,-1,10,5],[1,3,-10,6,9],[-4,3,-10,-5,-7],[-7,-9,-3,-3,6],[-8,-7,-2,-8,-9],[-6,-9,6,-9,-8]],[[-4,-3,10,-3,-9],[-1,8,10,7,10],[-4,10,9,-5,-1],[-7,8,9,-6,-10],[-1,-1,-9,1,-6],[-3,-9,-6,-10,-7],[1,-7,-5,-8,-7],[5,-9,7,7,5],[8,8,4,-8,-4],[-7,-8,-6,1,4]],[[-2,5,7,-1,-1],[10,8,-9,-9,-7],[1,-9,-8,-3,-9],[-6,10,-4,7,-1],[-4,10,-6,-2,-7],[9,-3,-8,-1,10],[10,3,-7,-6,4],[3,-6,-10,1,9],[-1,5,-5,4,5],[-10,-10,-6,-1,1]],[[10,5,-8,-10,9],[8,-8,-5,-7,-2],[3,-9,6,9,-8],[5,8,-3,5,5],[3,-3,8,5,-6],[-8,-9,-3,-4,2],[-7,-9,-5,1,-8],[-3,10,3,5,-3],[-4,-2,-2,6,7],[6,-3,9,9,-1]],[[6,7,1,6,-7],[6,2,2,3,9],[-6,-6,-2,-10,-4],[-6,-6,-8,3,2],[3,-9,10,-10,-1],[-6,6,7,-8,-6],[9,-5,-7,1,-7],[7,-5,-6,10,-9],[-4,8,-7,-5,4],[-7,7,8,-5,1]],[[-6,-1,-7,-5,2],[5,-6,-6,-8,8],[-6,6,7,5,-5],[-5,7,9,4,8],[-7,-3,-6,8,4],[7,-10,-3,-7,2],[-7,10,-6,7,-4],[-7,-9,-7,-1,-10],[-10,-5,10,-1,8],[-6,2,-10,-6,8]],[[3,-10,-8,-7,2],[6,-4,4,10,-10],[9,-5,3,-9,2],[8,5,-8,-7,-3],[-2,-2,-1,10,-4],[-4,-6,3,-4,-8],[-10,-2,4,-7,4],[-9,1,5,-10,7],[-5,4,-8,3,-9],[-10,7,5,1,2]],[[4,-6,-5,-6,5],[-6,2,4,-8,6],[7,-10,8,-8,7],[-6,3,5,10,2],[5,-8,1,1,-10],[-9,-10,3,-6,7],[-1,4,5,-2,1],[4,6,-4,-5,-6],[-1,2,-8,1,4],[-5,3,8,1,4]],[[-8,7,-10,10,-6],[-8,5,-8,7,-7],[7,7,-3,7,7],[-5,10,8,5,-5],[8,7,7,8,-7],[4,-7,6,-6,-4],[-6,7,-3,8,-6],[-6,-10,10,10,-9],[3,1,-4,1,-1],[10,-4,-5,-3,4]]], dtype = "int16")#candidate|3822|(10, 10, 5)|const|int16
var_3823 = relay.var("var_3823", dtype = "int16", shape = (10, 10, 5))#candidate|3823|(10, 10, 5)|var|int16
bop_3824 = relay.greater_equal(const_3822.astype('bool'), relay.reshape(var_3823.astype('bool'), relay.shape_of(const_3822))) # shape=(10, 10, 5)
var_3828 = relay.var("var_3828", dtype = "bool", shape = (10, 10, 5))#candidate|3828|(10, 10, 5)|var|bool
bop_3829 = relay.left_shift(bop_3824.astype('int32'), relay.reshape(var_3828.astype('int32'), relay.shape_of(bop_3824))) # shape=(10, 10, 5)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_3836 = func_3652_call()
call_3837 = func_3652_call()
uop_3839 = relay.atan(const_3822.astype('float64')) # shape=(10, 10, 5)
output = relay.Tuple([bop_3829,call_3836,uop_3839,])
output2 = relay.Tuple([bop_3829,call_3837,uop_3839,])
func_3843 = relay.Function([var_3823,var_3828,], output)
mod['func_3843'] = func_3843
mod = relay.transform.InferType()(mod)
mutated_mod['func_3843'] = func_3843
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3843_call = mutated_mod.get_global_var('func_3843')
var_3845 = relay.var("var_3845", dtype = "int16", shape = (10, 10, 5))#candidate|3845|(10, 10, 5)|var|int16
var_3846 = relay.var("var_3846", dtype = "bool", shape = (10, 10, 5))#candidate|3846|(10, 10, 5)|var|bool
call_3844 = func_3843_call(var_3845,var_3846,)
output = call_3844
func_3847 = relay.Function([var_3845,var_3846,], output)
mutated_mod['func_3847'] = func_3847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_3884 = relay.TupleGetItem(func_3819_call(), 0)
call_3885 = relay.TupleGetItem(func_3821_call(), 0)
var_3888 = relay.var("var_3888", dtype = "bool", shape = (8, 5, 12))#candidate|3888|(8, 5, 12)|var|bool
bop_3889 = relay.bitwise_or(call_3884.astype('uint8'), relay.reshape(var_3888.astype('uint8'), relay.shape_of(call_3884))) # shape=(8, 5, 12)
bop_3892 = relay.bitwise_or(call_3885.astype('uint8'), relay.reshape(var_3888.astype('uint8'), relay.shape_of(call_3885))) # shape=(8, 5, 12)
const_3895 = relay.const([[[1,3,1,-8,-9,-7,-5,-4,1,-6,-2,-5],[10,-8,9,-2,-7,-10,-10,-1,3,7,8,3],[-5,-10,-5,5,-7,10,1,8,-4,-8,-7,5],[-1,-7,6,-8,-9,6,-3,1,-6,-8,10,-4],[-2,-3,5,8,2,5,-7,9,-1,-2,-7,-8]],[[4,1,2,10,-10,-3,-1,-1,6,1,10,9],[-6,-8,4,8,-2,3,6,7,8,-1,3,-2],[-9,-4,6,10,6,4,6,9,-3,-3,8,5],[2,-5,-9,5,1,-8,-5,-8,10,3,6,-5],[4,7,8,6,-9,6,-7,7,2,-6,8,10]],[[-5,-4,-2,-1,-5,-8,10,4,4,-9,-2,-10],[4,3,-9,-7,-3,9,-10,-2,9,-9,-4,10],[4,1,-6,10,7,1,4,4,1,-5,-2,-5],[8,1,6,2,-1,-5,1,6,-9,-8,8,-2],[-3,-9,5,7,-7,-5,-8,-4,9,-5,-5,10]],[[1,-8,-10,-8,-9,-10,-1,8,-3,-5,-2,-1],[6,-1,8,-6,-1,-8,5,4,2,-8,8,3],[1,-6,6,-5,-3,5,10,-10,4,-2,3,2],[-7,-10,-8,-10,-2,-5,-2,-1,7,-6,-9,-7],[-6,3,2,-5,-8,8,10,9,2,8,-4,-1]],[[-9,7,-5,1,3,1,1,-6,4,7,2,6],[1,10,-5,4,9,-1,8,-8,-10,-4,-6,2],[-6,4,6,-2,3,10,-4,-3,-8,7,-10,6],[-5,-1,-3,-3,-1,-5,-6,-3,10,9,10,6],[10,-5,-10,10,-1,8,-3,3,7,-10,6,4]],[[-7,-9,-8,-6,-2,-9,-1,-8,2,-6,-7,9],[-6,7,-2,-9,5,-5,-5,-1,1,-9,-3,-5],[-5,9,10,5,9,-10,-4,-10,-7,2,-8,-10],[7,1,8,-4,-7,-4,5,2,1,4,1,6],[3,-1,-3,1,-10,-9,-10,-1,9,3,5,7]],[[9,1,7,7,7,2,7,-9,8,7,-4,7],[4,-7,-7,-4,6,-4,3,5,-7,10,-2,5],[1,-8,-2,6,4,4,-8,8,4,-6,-3,-8],[10,8,-1,2,5,-4,-4,3,-6,1,-5,-7],[-3,9,6,10,-7,7,-1,9,10,5,8,4]],[[-6,7,6,-4,8,6,-3,1,-5,10,-9,4],[-4,3,-8,5,4,7,7,10,7,3,-4,-1],[-7,5,-10,5,-7,-6,-7,-10,5,2,1,1],[-10,7,1,3,9,-3,-6,-2,1,9,-3,1],[-8,-3,-7,-6,-9,2,-1,7,10,8,10,-10]]], dtype = "uint8")#candidate|3895|(8, 5, 12)|const|uint8
bop_3896 = relay.bitwise_and(bop_3889.astype('int64'), relay.reshape(const_3895.astype('int64'), relay.shape_of(bop_3889))) # shape=(8, 5, 12)
bop_3899 = relay.bitwise_and(bop_3892.astype('int64'), relay.reshape(const_3895.astype('int64'), relay.shape_of(bop_3892))) # shape=(8, 5, 12)
output = bop_3896
output2 = bop_3899
func_3904 = relay.Function([var_3888,], output)
mod['func_3904'] = func_3904
mod = relay.transform.InferType()(mod)
mutated_mod['func_3904'] = func_3904
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3905 = relay.var("var_3905", dtype = "bool", shape = (8, 5, 12))#candidate|3905|(8, 5, 12)|var|bool
func_3904_call = mutated_mod.get_global_var('func_3904')
call_3906 = func_3904_call(var_3905)
output = call_3906
func_3907 = relay.Function([var_3905], output)
mutated_mod['func_3907'] = func_3907
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3800_call = mod.get_global_var('func_3800')
func_3801_call = mutated_mod.get_global_var('func_3801')
call_3980 = relay.TupleGetItem(func_3800_call(), 0)
call_3981 = relay.TupleGetItem(func_3801_call(), 0)
output = relay.Tuple([call_3980,])
output2 = relay.Tuple([call_3981,])
func_4004 = relay.Function([], output)
mod['func_4004'] = func_4004
mod = relay.transform.InferType()(mod)
output = func_4004()
func_4005 = relay.Function([], output)
mutated_mod['func_4005'] = func_4005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mod.get_global_var('func_4004')
func_4005_call = mutated_mod.get_global_var('func_4005')
call_4016 = relay.TupleGetItem(func_4004_call(), 0)
call_4017 = relay.TupleGetItem(func_4005_call(), 0)
func_1191_call = mod.get_global_var('func_1191')
func_1195_call = mutated_mod.get_global_var('func_1195')
const_4026 = relay.const([[8,6,-4],[-9,5,-7],[3,7,-9],[-4,-8,-9],[1,3,-1],[-10,1,-10],[-9,2,-3],[8,-8,-8],[6,10,-6],[3,4,-5],[-6,-1,-4],[-4,9,7],[-6,10,10],[8,9,9],[6,5,7],[6,-6,2],[7,-1,3],[-10,4,2],[-7,-9,-10],[-4,-10,8],[-8,3,-1],[-3,3,7],[-3,7,-7],[1,-1,2],[9,-10,2],[6,-4,5],[-6,-6,-4],[4,-9,5],[10,-2,6],[-4,8,4],[4,2,-1],[-5,-5,3],[-3,-9,8],[10,1,8],[-4,4,6],[3,-10,-10],[-2,-7,4],[-8,-8,3],[10,3,5],[-9,-6,2],[1,-4,10],[1,8,1],[-7,-3,4],[1,7,-5],[7,-3,7],[7,-3,-2],[-6,7,10],[-8,-6,3],[4,4,-8],[-8,-3,10],[-6,-9,-1],[-2,-3,-2],[6,1,10],[-2,8,10],[2,-2,8],[-4,-10,-5],[-5,7,7],[-2,-1,5],[-7,-10,10],[2,7,-7],[-6,3,-4],[-7,5,-7],[-5,-7,4],[-8,6,7],[-7,10,-10],[2,5,-2],[-4,-8,-4],[3,-5,-6],[10,-1,3],[4,4,-5],[-10,2,2],[4,2,-5],[10,6,8],[-6,5,7],[-5,7,7],[-6,2,-2],[-10,10,-2],[-8,5,-10],[5,1,3],[-7,1,8],[7,4,-1],[-4,5,-5],[-1,9,-9],[8,5,2],[-9,6,5],[9,7,-1],[-2,-9,1],[5,-9,9],[-3,9,-10],[6,4,-1],[-6,-10,8],[1,-10,-8],[-6,-4,-9],[-2,4,2],[6,5,-10],[6,-9,-6],[10,6,10],[3,-8,1],[-2,2,6],[-9,-10,2],[-1,3,-9],[-6,8,8],[-9,-6,-8],[6,1,5],[10,2,10]], dtype = "int8")#candidate|4026|(105, 3)|const|int8
call_4025 = relay.TupleGetItem(func_1191_call(relay.reshape(const_4026.astype('int8'), [3, 15, 7]), relay.reshape(const_4026.astype('int8'), [3, 15, 7]), ), 0)
call_4027 = relay.TupleGetItem(func_1195_call(relay.reshape(const_4026.astype('int8'), [3, 15, 7]), relay.reshape(const_4026.astype('int8'), [3, 15, 7]), ), 0)
func_1598_call = mod.get_global_var('func_1598')
func_1601_call = mutated_mod.get_global_var('func_1601')
const_4035 = relay.const([[0.377507],[-7.483699],[-2.537389],[-7.519743],[8.948828],[7.394112],[9.439615],[-9.599548],[-1.767829],[0.611903],[-7.592963],[-3.742169],[-5.817117],[5.736007],[-5.393712],[-0.781505],[-5.207250],[-4.647162],[5.625285],[-0.878560],[-6.064135],[1.024084],[8.439894],[-7.269907],[-9.340471],[-1.800038],[9.453455],[8.816821],[-9.870531],[-6.003237],[-9.826398],[-4.442316],[5.209510],[7.656505],[-2.275185],[-8.902616],[-0.985294],[-5.784724],[3.699350],[2.863621],[-9.150058],[-8.321969],[-6.894581],[6.033236],[-1.091248],[-2.453057],[-6.670880],[1.111220],[0.892497],[5.630840],[0.080175],[-9.095272],[5.025975],[4.828246],[6.787727],[8.021906],[-5.736721],[9.603301],[9.594961],[6.649566],[-6.817191],[0.783236],[5.838753],[4.421593],[8.255888],[-2.425386],[-9.876918],[-0.103152],[5.789813],[-4.769169],[6.702779],[-1.607304],[8.413505],[-5.350172],[2.913275],[-0.006211],[6.303572],[-9.989669],[0.298624],[2.545708],[-4.358720],[7.525778],[-0.208125],[3.246117],[5.316145],[-1.801590],[7.656161],[-5.017229],[-4.673341],[6.794535],[-1.394284],[-9.390257],[3.527218],[-5.953572],[-1.490940],[-0.585073],[1.679202],[0.016398],[3.658102],[9.127481],[-5.985455],[5.209131],[5.152854],[-3.423675],[8.028285],[8.084473],[2.158402],[1.682020],[-3.072260],[9.293553],[-4.854873],[-6.565730],[7.140291],[4.883710],[-8.665562],[9.720104],[2.077572],[-9.798136],[-1.065356],[-6.447250],[-3.356159],[-8.303720],[6.758957],[4.608882],[3.731153],[-1.697392],[-3.695303],[-0.423549],[-5.032294],[-4.082367],[-9.806077],[1.627933],[8.830500],[-9.890248],[-0.640407],[0.187828],[-5.802759],[2.935882],[9.408543],[-7.285366],[0.255812],[-4.306222],[7.694963],[-2.711351],[5.930928],[-4.675405],[-1.967804],[5.054917],[1.933391],[-2.607722],[-7.352855],[-6.039739],[1.911316],[2.535837],[-3.233485],[5.113365],[-6.384146],[3.238968],[-6.359911],[-0.493450],[9.488937],[-4.498780],[-9.172717],[0.329049],[0.025352],[-5.050247],[8.870036],[9.892720],[-3.202894],[2.536884],[-1.512821],[-7.416387],[1.084355],[-3.260384],[2.463531],[0.895017],[5.443604],[5.000763],[1.723004],[1.943172],[-3.329060],[-1.790688],[-4.767901],[-7.584616],[-1.032732],[-2.898284],[-4.212465],[-9.293014],[-3.110928],[-2.443110],[3.080433],[-3.912658],[1.126352],[-7.349988],[-7.078059],[2.116753],[2.226225],[-1.682343],[8.292902],[-2.753687],[2.219652],[-0.836958],[-4.409672],[3.755431],[2.432528],[-6.627816],[9.916427],[2.278362],[-7.232930],[2.270923],[8.681381],[4.283231],[-5.333765],[4.557263],[-5.556988],[-7.996455],[-6.656287],[-6.749782],[0.881122],[9.228305],[2.122194],[6.670753],[5.552402],[1.767958],[-7.074711],[-8.741755],[5.860158],[1.714387],[-1.722462],[-4.957852],[-2.856335],[-5.523232],[3.197681],[5.915399],[-7.440971],[-5.702885],[5.396120],[-0.349138],[-8.269977],[-8.890238],[-7.701304],[5.789497],[6.740076],[7.176451],[3.746795],[-7.780361],[-9.371578],[-4.581001],[7.756227],[-6.555537],[-7.623999],[2.588194],[-5.046878],[-9.145189],[7.567252],[-9.561449],[-6.054731],[-4.290958],[-8.262893],[3.713108],[7.453286],[7.918305],[-8.471036],[1.500395],[-1.332843],[4.343487],[-4.085015],[-1.877226],[-4.578114],[-4.158955],[6.115230],[4.641953],[-5.887233],[0.925073],[4.946003],[-9.540221],[5.591923],[2.884534],[0.201517],[1.995653],[-0.932008],[-4.881304],[-0.599948],[-2.092826],[-4.684639],[-9.379784],[8.935593],[2.128418]], dtype = "float32")#candidate|4035|(288, 1)|const|float32
call_4034 = relay.TupleGetItem(func_1598_call(relay.reshape(const_4035.astype('float32'), [16, 2, 9])), 0)
call_4036 = relay.TupleGetItem(func_1601_call(relay.reshape(const_4035.astype('float32'), [16, 2, 9])), 0)
output = relay.Tuple([call_4016,call_4025,const_4026,call_4034,const_4035,])
output2 = relay.Tuple([call_4017,call_4027,const_4026,call_4036,const_4035,])
func_4038 = relay.Function([], output)
mod['func_4038'] = func_4038
mod = relay.transform.InferType()(mod)
output = func_4038()
func_4039 = relay.Function([], output)
mutated_mod['func_4039'] = func_4039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_4073 = relay.TupleGetItem(func_4038_call(), 1)
call_4074 = relay.TupleGetItem(func_4039_call(), 1)
output = call_4073
output2 = call_4074
func_4096 = relay.Function([], output)
mod['func_4096'] = func_4096
mod = relay.transform.InferType()(mod)
mutated_mod['func_4096'] = func_4096
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4096_call = mutated_mod.get_global_var('func_4096')
call_4097 = func_4096_call()
output = call_4097
func_4098 = relay.Function([], output)
mutated_mod['func_4098'] = func_4098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_4239 = relay.TupleGetItem(func_3819_call(), 0)
call_4240 = relay.TupleGetItem(func_3821_call(), 0)
func_3514_call = mod.get_global_var('func_3514')
func_3516_call = mutated_mod.get_global_var('func_3516')
const_4246 = relay.const([-4,-10,7,8,-10,1,-10,6,4,-6,-10,9,-4,5,9,-1,2,-5,5,-4,-6,-1,-7,-6,2,4,-6,8,-7,2,-5,-10,6,-6,1,-6,-7,5,3,-5,-1,9,-3,1,-1,8,6,5,-5,5,-2,-5,7,5,1,-6,-10,-2,-3,-4,6,2,-2,-5,9,3,2,-2,-7,-10,-6,3,-3,-10,-7,-1,-8,6,2,-5,3,10,-7,4,-9,4,-3,1,1,-6,-8,3,2,6,-3,2,-10,-1,7,2,-2,-1,-5,-4,-8,7,7,-1,-1,10,-7,-10,-7,5,8,9,-6,-8,-5,-7,1,8,-4,-7,-8,-9,-1,4,-1,3,-6,3,5,5,4,-4,8,4,-2,6,-10,-5,-5,-1,5,10,-6,-5,4,2,4,4,-7,3,-9,-9,6,-2,-2,9,-8,-1,4,7,8,6,7,-1,8,6,-2,8,1,-1,4,-10,-9,-7,7,-10,5,-6,-8,7,-10,5,9,2,-3,3,-2,-10,-4,-3,10,7,-1,-6,-9,-7,5,2,3,-4,-8,-6,9,-1,-2,5,10,-7,-4,-2,-7,3,10,8,3,4,8,-2,-5,-10,-7,-8,9,-10,8,8,-2,7,-8,9,-6,3,-2,-1,-7,-1,7,3,-5,-9,-6,8,7,4,-2,-9,6,2,-6,-5,5,-9,-7,10,-5,5,-7,-1,-10,-4,-8,1,-4,1,8,-4,2,-9,6,-1,2,4,10,-8,2,5,4,3,-10,1,-10,5,10,1,5,7,-7,-9,-6,-7,8,8,9,3,8,9,10,-10,-8,-4,-2,-10,-2,3,-5,-8,-4,6,-10,3,2,-5,-6,1,-7,-6,-8,5,-5,-9,1,-5,4,8,-2,-1,5,-7,3,4,6,7,8,3,-10,-6,-8,6,4,-5,7,1,1,4,9,-4,-9,9,2,-5,-4,3,-3,3,5,6,-3,-7,-6,-10,10,-9,2,-8,-10,7,3,-6,-1,6,9,1,8,8,-8,8,-2,-6,-7,-1,7,-10,9,1,-9,7,8,1,5,-1,-10,8,-7,8,-9,2,-6,8,-10,-5,-7,-8,10,2,-3,-8,-3,-6,-1,4,-3,7,9,-3,6,10,10,-8,-9,6,3,-4,-8,-7,-5,8,7,7,3,-9,-8,10,-8,8,7,9,6,6,-6,-3,-4,-10,8,-1,9,-10,8,5,-8,-1,-5,-7,-6,4,-6,2,10,4,-1,-1,-2,5,10,-6,-3,3,7,-8,1,-4,1,-8,8,-8,-7,-7,-9,1,-6,-6,-1,-8,7,3,8,-8,3,-9,-9,2,-8,-5,3,6,2,-10,-3,3,-2,9,-6,-10,-2,-10,8,5,2,4,-7,-7,-4,-3,-3,6,-5,-9,1,-9,-10,2,-2,-5,10,-10,-2,7,1,-5,-6,-2,-6,-1,-10,-10,1,10,2,6,7,-10,-10,-6,-8,-7,-2,7,-10,6,9,2,-9,-3,-8,-2,2,5,-8,-7,4,1,5,-7,-6,-8,-9,7,3,-9,-9,-7,1,-5,6,7,7,7,6,10,-7,9,9,3,5,6,-3,5,6,4,5,2,-9,-6,1,7,4,-3,3,6,10,-4,-4,8,10,-2,5,-6,2,-7,10,2,-1,9,-3,-4,9,-9,-4,5,-8,10,2,8,-10,7,-1,5,4,-8,1,3,7,-4,-6,8,5,-9,-3,-1,4,-4,6,8,5,8,-7,5,10,6,8,4,-1,-10,-10,7,8,-10,3,4,-6,-4,-3,1,-10,-1,-1,2,8,8,3,-3,-9,3,2,7,-2,-3,10,8,10,-8,4,5,-2,-9,8,-5,-4,-8,8,4,-8,4,-2,-8,4,5,6,10,-5,-2,-1,-2,5,-1,7,4,-6,-3,-1,-1,9,-2,8,-2,1,7,-2,8,9,2,-9,-1,-5,3,7,10,2,10,4,-4,-9,8,10,-9,-7,6,7,1,4,-7,-10,7,-1,-5,-3,1,-9,-3,4,7,5,7,1,-6,-2,7,2,-5,3,7,6,-9,-6,4,-6,-1,-4,-5,-6,1,-3,-9,2,-7,1,-2,1,-4,4,9,10,-1,8,-9,-6,-2,7,-8,-3,-6,1,3,-9,-1,4,-3,9,9,1,-2,8,-9,-3,-6,2,-3,9,-4,-1,-1,4,9,1,1,-6,8,6,1,-4,8,-8,-6,-6,-5,-7,6,-2,3,5,-5,6,6,-3,-3,-3,-1,-3,8,-1,-10,9,8,-1,5,6,6,3,5,-9,1,1,-5,-2,6,5,-10,10,-6,-10,4,10,7,1,9,2,2,-3,8,9,9,-7,-8,10,7,-4,-5,10,8,-5,1,-7,9,-9,7,10,-2,8,4,-4,5,4,4,3,-7,-9,8,-1,-5,-5,-10,10,-1,-10,6,8,3,3,-5,-9,9,-1,3,-3,6,-3,-2,-6,3,6,1,-3,5,2,-6,-4,-9,1,1,-2,-3,-1,10,-6,7,-4,-7,5,-5,-3,9,6,-2,-2,1,10,-1,-7,-10,5,6,-6,-8,-6,-9,4,6,-8,6,-3,-3,1,6,4,2,3,-1,-4,1,2,8,-10,7,-5,7,10,-1,-6,10,2,1,3,-6,1,-6,9,-10,-8,-6,-9,-1,5,-1,-10,10,4,-9,3,1,-7,8,1,-7,-6,2,-8,-4,4,5,-6,-7,-8,5,-4,-7,5,6,-7,3,-6,9,-7,-8,-10,-6,-9,9,1,-1,2,5,5,-3,4,8,-2,-5,-1,1,-5,-10,-2,-2,-2,-6,-2,4,-2,-2,5,-6,6,-6,-4,8,6,6,8,-8,2,7,-7,-1,-9,5,2,1,-1,-5,-3,-6,5,-6,-1,-3,2,-7], dtype = "uint8")#candidate|4246|(1080,)|const|uint8
call_4245 = relay.TupleGetItem(func_3514_call(relay.reshape(const_4246.astype('uint8'), [10, 9, 12])), 2)
call_4247 = relay.TupleGetItem(func_3516_call(relay.reshape(const_4246.astype('uint8'), [10, 9, 12])), 2)
uop_4248 = relay.cosh(call_4239.astype('float64')) # shape=(8, 5, 12)
uop_4250 = relay.cosh(call_4240.astype('float64')) # shape=(8, 5, 12)
uop_4254 = relay.asin(uop_4248.astype('float32')) # shape=(8, 5, 12)
uop_4256 = relay.asin(uop_4250.astype('float32')) # shape=(8, 5, 12)
output = relay.Tuple([call_4245,const_4246,uop_4254,])
output2 = relay.Tuple([call_4247,const_4246,uop_4256,])
func_4257 = relay.Function([], output)
mod['func_4257'] = func_4257
mod = relay.transform.InferType()(mod)
mutated_mod['func_4257'] = func_4257
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4257_call = mutated_mod.get_global_var('func_4257')
call_4258 = func_4257_call()
output = call_4258
func_4259 = relay.Function([], output)
mutated_mod['func_4259'] = func_4259
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4262 = relay.var("var_4262", dtype = "float32", shape = (15, 10, 8))#candidate|4262|(15, 10, 8)|var|float32
uop_4263 = relay.sigmoid(var_4262.astype('float32')) # shape=(15, 10, 8)
uop_4272 = relay.asin(var_4262.astype('float32')) # shape=(15, 10, 8)
func_779_call = mod.get_global_var('func_779')
func_781_call = mutated_mod.get_global_var('func_781')
const_4279 = relay.const([0.956171,7.322010,8.915834,1.227696,1.062064,-7.484161,4.483502,7.196959,4.177375,9.753752,-7.967652,-8.658528,4.251507,-6.886806,0.399265,4.395598,7.201391,-4.727904,2.333389,1.228805,-2.815151,-6.623549,5.534719,-1.228640,-5.829013,6.959514,2.580083,4.981999,-2.908589,8.613160,4.066946,-5.843007,7.780974,-1.057440,5.434435,2.469420,3.913564,0.407202,9.048215,2.239316,0.340924,-4.264498,-8.721318,4.025577,-0.511713,-3.245668,-7.410551,-4.243438,1.298846,-1.628017,-7.445784,1.726552,5.383463,-4.768918,-1.595717,-5.931767,-5.260707,-2.107159,-8.973336,3.399727,-0.018132,-4.450807,1.010252,-7.029260,0.760881,7.083563,-8.436267,1.692985,9.108127,-2.862507,9.806356,1.379993,-6.315686,-1.696460,1.773806,0.824167,9.071514,-3.029674,-9.171617,-5.018607,8.881390,6.452877,-8.302702,6.636318,-3.937171,0.277598,-7.897210,-3.134721,-6.617106,5.231295,-2.892982,8.028088,0.843755,-1.623759,-8.830633,6.187856,-7.699554,9.891940,-3.416824,-8.102672,-1.222081,-6.914783,-3.916681,4.296686,-9.549180,3.135047,5.429529,-3.405823,-6.640266,-1.546681,4.365849,0.937272,-9.959108,-6.463673,3.926564,-2.220278,-3.809288,6.361012,4.043596,7.219809,2.169743,-2.352712,1.531425,1.253591,-7.541577,-4.541474,-7.728306,3.485524,-5.559463,7.245054,4.332950,-4.617098,-8.411258,-5.143260,-2.426097,3.843164,-2.028819,5.715982,3.651845,-1.660912,-6.279690,9.502407,-8.828258,-0.343837,7.256684,-0.126379,7.795757,-4.108366,-0.893178,3.624460,0.979005,5.099984,-7.201745,1.775925,1.973882,0.785551,2.972606,-3.242660,-7.145234,-1.860946,-9.651834,-0.016651,4.363487,-1.194870,5.284120,2.094364,-5.824617,5.579602,1.619548,-9.344694,-3.019480,-5.007897,0.129952,1.857955,5.893183,9.240800,-9.349392,2.239998,-4.124797,-3.879250,1.598466,-4.335238,-4.794971,0.511318,5.576752,-5.624564,3.474257,1.596668,-2.659658,-1.237204,-4.678141,1.455146,1.036958,7.566765,-7.249496,-7.160895,5.119122,-3.620645,-8.039569,2.848872,9.420125,1.096534,-7.501014,7.131381,5.504622,5.084042,3.589670,-9.033193,9.665858,6.151546,7.936988,-3.267271,-9.856309,-8.429196,-7.967868,-4.128738,-2.527905,-2.266728,-4.759632,3.890637,-2.770706,-4.311677,6.188291,-8.065313,-4.238013,7.718426,5.631385,-5.628527,-0.328418,-2.906951,-1.285152,-2.859530,-4.619642,1.950446,2.338175,-5.544805,1.550717,9.167147,-0.371904,-0.706779,0.943119,-4.552720,8.962248,1.090546,-7.038833,-7.452350,-1.272477,3.571215,7.838234,-8.213467,3.837344,-1.844349,8.911861,2.662157,-3.747933,-4.510916,3.088904,-4.897510,2.456225,-5.826567,-1.588929,-4.674449,-5.738333,1.770983,-3.728451,-7.360927,9.662808,3.212179,-2.115929,-2.230619,-5.148656,6.789730,0.997627,-2.591061,3.763539,-5.807005,0.349597,-2.879268,-9.993898,5.604484,7.634452,-0.008676,2.990053,0.597845,8.061317,-3.556562,-1.620972,5.430208,6.743413,-8.579795,0.383749,-6.573428,1.641021,-7.225021,8.937483,0.533885,8.500203,5.934272,9.342771,-2.299459,-4.850213,-4.488635,-8.462983,-6.466581,5.771056,-6.245953,-6.898102,0.716214,-7.519491,6.155753,7.183914,-0.996380,0.315134,2.455590,1.821078,2.676486,-8.364377,-2.544681,2.550545,4.908200,-3.494472,6.208953,-2.910743,-5.780749,-4.124617,-4.678167,-6.502611,-9.673515,-0.162446,-1.899307,-6.924809,4.228791,6.623049,7.565068,0.258215,4.456186,4.526421,-4.096309,2.958818,-0.713250,-4.556396,-9.544643,7.986635,-2.790273,-9.076469,6.660477,-2.507205,-1.728979,6.220389,0.922051,-6.298873,-4.665771,8.331643,2.520027,7.893069,3.247024,8.896146,9.398878,-4.179829,-5.495248,-0.155236,8.407393,4.097731,6.802667,-4.850810,2.632934,8.145186,-8.992170,-1.215537,-3.680802,6.077808,1.054759,0.650785,9.880332,3.443301,-3.436641,-4.312332,-8.354919,7.263471,-2.604167,-6.450638,-0.557676,2.163552,7.701036,0.995884,3.060153,9.211351,9.802408,3.332296,-9.805326,-2.458998,8.401516,6.645126,-6.919544,7.120317,-8.164995,-8.139640,6.777583,0.905123,7.536846,-2.240449,6.398854,-5.794394,-4.308071,7.569012,-0.866895,-9.554371,-6.744571,6.700098,-3.539782,1.472650,4.647126,-4.745777,1.530825,9.093348,-3.821132,-7.746457,2.709627,-8.027606,-7.065421,-3.373124,6.633191,-8.829784,-1.072604,0.845100,-1.883729,2.591591,-0.204509,6.874680,5.413589,3.267419,-0.230963,4.827947,-5.026024,-2.708870,-7.333736,5.820350,4.776082,9.931886,7.799318,-1.887974,-6.765069,0.127591,3.510374,-8.936400,7.470331,-3.205168,3.675651,2.501616,4.647172,0.322798,6.864087,-8.848726,-4.179536,-1.714878,-2.656706,-9.365499,4.062117,7.522137,-5.428636,4.769090,0.878438,2.707303,-8.104241,-2.674807,-0.371591,2.928831,-7.423808,-4.533974,0.643348,3.167996,-9.698511,-0.809889,7.964130,-3.265296,-7.667162,-3.841912,-7.668822,-9.703788,-2.011652,-0.350956,-4.869704,-3.867216,8.170438,-5.972716,-3.459103,-6.966501,5.995697,-0.325966,9.413887,-8.439921,-0.859199,6.891152,-3.178101,4.712511,2.543135,-4.944890,9.621106,-2.473558,5.870224,-5.400949,-7.326325,-8.407241,1.119334,7.111737,-3.227119,-9.991585,-9.707027,2.235328,-8.221823,2.168822,-6.819968,4.749387,8.167146,3.343661,-0.487264,-2.489899,-2.339508,-9.093577,3.446916,-7.137297,1.071112,-7.156492,4.237921,7.368151,1.539564,6.160612,-0.189267,2.894035,-1.499113,-6.877931,-8.166741,-4.320161,-7.200500,4.320388,-3.372083,0.657484,-6.774078,2.082739,6.431818,0.688523,5.525663,-7.764941,-2.226299,2.499320,-1.871757,0.231809,-1.099135,-1.531773,5.954796,-4.821852,9.842316,5.783452,-7.560714,0.555543,9.050117,-0.673175,9.084561,-7.719468,-7.333798,5.086433,-1.698485,-2.848097,-7.195309,6.196723,-2.761499,2.118358,5.177029,1.477742,8.573124,7.803228,-8.595944,4.468226,-1.535088,6.050924,-4.731191,-9.398367,5.067416,8.612058,1.670056,3.699247,1.591787,2.225876,-5.003236,-4.083482,-2.092972,-2.670608,5.317136,-7.185539,-1.787951,-8.414484,-9.014019,3.390509,0.761402,8.966405,4.670391,-2.390868,2.235092,5.181517,7.034855,1.035389,5.220629,-0.239417,-7.710773,-7.357819,-2.528491,4.001142,7.077626,-3.269008,0.830253,9.690161,7.442449,2.214845,-2.287139,-0.269693,-8.359996,5.478501,5.842412,-3.404893,-0.595699,-8.921455,-1.487413,-9.533681,-9.329976,-4.206590,-2.654210,-2.012321,-3.256677,9.857253,-4.905639,-6.762780,3.961834,-5.300151,4.395812,-8.312784,-9.441978,-6.161150,-4.739749,-3.267606,2.140960,5.016141,8.194888,5.099992,5.931564,-5.536842,-0.390005,9.382474,-4.799656,3.944714,-8.658577,9.869820,-1.487033,1.389050,-1.878345,-7.063612,1.320932,-1.891381,8.159577,-0.137890,-7.648195,4.643071,1.241013,-1.585881,-7.548219,2.559865,-0.810900,6.061648,-5.043826,4.788511,1.522934,-8.838239,7.779537,5.111952,5.386669,-4.866259,-5.784351,-2.272575,-1.949366,1.407063,-0.562894,0.479379,5.146501,-0.498288,-3.123255,0.645454,2.302575,-6.185396,-6.626884,2.273618,2.097423,4.869152,4.808230,0.159378,-5.544525,7.119054,1.971042,5.935065,7.811307,-9.184561,-0.015692,5.504278,7.210078,-2.709851,4.619696,9.843007,7.820203,-4.619683,5.061285,-4.110029,-6.995891,-9.633063,7.620334,6.155263,0.505423,-0.983664,2.198851,8.894990,5.225997,-4.856876,-1.506728,9.982010,-5.269742,-3.395276,0.425404,4.321992,-2.237355,3.738646,-2.841049,2.664679,-1.546218,2.570968,2.859398,-7.842352,-2.755912,-5.744221,2.616101,9.887389,6.862415,0.718191,-9.593754,1.024228,-1.045487,-8.191417,3.444646,9.978897,5.123480,2.909076,7.629837,0.506431,-8.583665,-9.655623,1.744151,5.760906,-3.204680,4.257900,0.111827,6.274212,7.561902,-8.860059,2.752782,-3.672576,-8.733284,-3.421207,-2.149244,-5.319709,5.950439,-9.489829,-2.623324,3.943867,-1.616156,2.642884,6.235937,2.974141,2.670681,4.373184,1.499730,9.102174,7.774209,-0.542632,-5.585218,-7.990763,2.303546,-9.235765,-9.816875,-0.839776,2.879914,1.119907,6.168402,9.673602,-0.046008,4.352069,3.041439,-1.233908,-3.622637,-8.418957,5.319377,-6.592025,3.051506,-8.388606,8.520143,-5.538548,-6.560556,7.633568,-5.692641,-4.945842,-5.687098,8.173762,8.775446,-3.408498,-6.954452,-8.473244,-0.111906,-8.791345,6.462870,2.715842,-4.053840,3.049811,5.840653,-3.612175,-2.652636,5.833955,-2.982057,-0.938001,-8.306407,-6.314118,9.504396,-5.099335,6.012389,2.221456,2.280507,0.222627,-7.889008,-3.883713,-2.743896,5.815459,-3.612548,3.421039,6.283909,-8.311932,-3.651663,-4.672095,8.093969,3.411551,-7.416167,4.491922,-9.937459,7.335571,-9.950330,-0.064020,-5.687652,5.827792,-7.002696,4.429730,-2.856172,4.468938,-3.709704,-1.392637,-3.929276,7.331164,-5.848345,-6.688934,6.372379,6.536246,-0.096930,-4.346600,5.893704,8.010163,-9.490117,-4.804051,-2.410785,-4.230642,5.320074,-2.861317,-4.365897,-8.482774,-6.650941,5.875388,-9.971311,7.539138,4.323687,9.396018,7.019765,-2.770374,-0.126272,-7.618898,0.278402,1.912781,3.448170,-3.392899,9.100770,-0.554592,-2.325383,-0.967933,-0.991386,3.244405,0.745747,0.067194,5.389948,8.355188,-8.349927,-5.557683,-4.037400,-2.703462,7.218677,7.285633,-1.708088,-6.319625,-2.931166,8.492756,8.127002,-7.523571,-0.006878,5.424957,4.031091,1.392443,7.088193,1.101375,7.096962,8.750682,0.114271,-1.362916,5.667585,-7.501250,2.142448,-4.960708,-3.572788,1.770251,-2.604633,-9.395587,5.021626,2.886007,1.817529,-1.311717,0.479096,1.678687,2.424827,-3.874212,-6.097220,-6.203000,-1.251389,-8.186775,3.516254,3.622731,7.326082,4.799058,9.375078,0.983411,-1.520573,-0.451731,8.066458,-8.348051,7.777853,6.878383,0.186373,6.024402,6.606123,-5.876185,9.392325,-0.463904,0.953058,-1.924290,1.807876,3.037320,7.670529,1.739046,2.854055,2.747860,-4.130702,-5.935437,-7.832153,8.929136,-3.591417,-1.672122,-8.818640,-9.436544,7.885823,-4.813436,-9.558328,-9.869751,5.116818,-8.086190,5.856037,0.532678,0.421072,8.216405,0.985777,0.280191,-0.679485,-6.385065,-7.652589,-0.386124,6.299244,-5.673372,-3.948976,0.045544,-9.964721,-4.915115,-0.331049,0.016402,6.683277,9.845779,-7.474065,-0.120460,7.991965,9.474938,5.134718,5.046839,-9.709771,-9.317244,-8.018728,0.251542,-0.197237,-5.145108,4.054893,-1.153901,-1.679109,-1.316212,-6.715392,9.099684,0.707928,0.265345,-0.771803,2.310070,1.258481,9.836764,3.117098,-6.107123,-5.937363,-5.708132,4.392600,-0.546033,0.124715,-2.647510,-0.131488,0.183626,-9.651779,-9.645692,5.489119,0.172031,-4.749472,-9.958067,2.620802,1.747391,3.314144,-5.640347,-1.154696,-6.165300,9.419962,6.870507,-1.796607,8.202808,5.220327,1.167024,6.082330,2.473772,8.602325,3.624128,4.746254,-2.484872,6.661118,6.680574,7.146988,2.573601,-9.369651,-5.479957,2.201854,5.547393,-6.886779,7.434395,3.912954,2.253938,-8.486438,-1.551090,2.748228,-3.612715,2.721346,-2.974403,0.056627,6.077151,-9.386591,-8.368128,7.342847,-9.191653,-9.924182,4.535588,8.521132,-1.694943,4.361163,9.159120,8.848894,6.898049,1.748419,6.392977,4.533014,-8.203533,3.999530,3.037590,-8.279529,-0.695720,7.036883,-8.526219,-4.347012,-2.392919,8.494201,-7.573235,7.882608,1.328911,5.868134,0.724287,0.077237,-8.200237,-8.975266,4.702788,9.527734,4.882786,2.259973,1.624153,-9.751999,-0.784818,2.112095,-0.973395,-0.838754,9.065639,1.932411,7.995661,-5.422169,8.189801,2.343213,0.356615,-9.193229,-8.815358,8.330425,2.628537,5.830665,1.278446,-1.652667,-0.572710,-6.129893,-6.196194,-2.006037,-7.114248,6.720168,-8.807843,5.096980,0.500719,-5.597014,8.914514,-3.076347,-7.968654,-8.811831,-1.872730,4.007860,-7.915830,1.204960,1.024640,-4.955723,-5.861776,7.948669,-3.916619,3.887170,-3.894256,0.984446,4.206865,-7.534281,-6.981628,4.971134,6.655699,2.714319,-0.407331,-0.649545,-7.372141,-0.343288,-3.790410,1.801005,-8.826311,5.832271,1.553947,-9.639899,-3.575059,-3.138081,-1.967203,2.038032,-1.010312,3.630411,7.941350,1.841509,-0.138109,9.271166,9.333281,2.163230,9.984396,6.898174,-5.388816,0.821400,-2.680827,8.914234,4.847457,0.845846,1.649467,3.581012,-8.990801,-4.860849,-9.776311,-5.510756,6.383739,0.496614,-1.365939,4.544412,-3.887658,0.071573,-9.086099,8.395790,8.468399,3.339782,4.695694,-9.309279,7.162375,-3.729453,-8.757352,-7.384955,9.767345,-7.114447,-5.536787,-7.752761,-6.478253,5.560561,-6.199321,-0.740719,6.240329,-9.565366,-6.991958,7.185911,6.193913,3.947596,-6.963620,7.433468,5.648072,7.337206,8.717109,4.754764,0.298123,-5.192800,9.298579,4.136410,0.871411,-0.066634,-4.399861,3.204008,1.829723,8.574099,-0.712197,7.626558,-6.108058,6.608602,-4.106109,1.512279,-3.047836,1.736453,2.684366,-1.053887,-6.527904,-6.674478,-8.492688,7.328256,9.125024,0.734815,7.805283,4.309615,7.740068,-5.950892,2.694501,8.489308,1.849140,-5.510650,-4.612951,7.141557,6.006833,9.270827,-5.057926,3.451032,-5.546052,3.753577,-7.290985,3.315086,-4.015508,2.944755,-8.393579,4.012766,-6.434684,-1.589221,-0.675530,2.586853,9.356382,-4.514018,5.590185,1.057270,-9.275063,-3.655679,-7.791895,5.068244,9.510582,-2.205181,3.599582,6.724856,8.067866,-2.467525,-7.324035,2.834527,3.488333,2.303997,-7.376844,-5.983534,4.537768,7.295630,-6.539723,-6.113682,9.133011,0.505945,-5.989072,-7.999238,-3.368060,-9.975215,4.111762,1.525931,8.967014,8.074095,0.188684,-5.681696,-9.685443,-3.332578,-4.891476,-4.900119,-8.666826,2.438525,0.609146,-3.451930,-2.986861,-6.822855,3.797138,-0.612006,-6.456664,-8.696637,7.591849,-6.451226,-6.930054,4.915039,-5.747255,-0.123766,0.638978,7.144547,-5.207446,6.654030,-2.183631,-3.420533,8.995972,-5.219867,-7.711440,2.516800,-3.083394,-3.030021,4.869647,0.728017,9.467308,-7.062523,6.832089,6.164321,4.001230,6.797205,-6.696031,5.113327,-1.263332,2.700763,-4.286534,8.258708,6.561605,6.471829,2.507171,-1.007438,6.858928,6.887616,-6.217869,-8.122305,5.342439,-8.301930,3.857921,7.327746,2.179097,-7.790975,-6.902242,-0.833304,9.369507,-1.318152,9.005678,-5.883089,2.973034,9.854391,-2.437327,5.542975,0.531207,-4.010097,-0.402106,8.180010,-8.651852,7.140517,8.661945,-7.813074,-5.081632,9.241194,9.214312,-3.885410,6.143832,6.130038,6.871798,-8.413757,-3.191572,5.127181,-5.460678,-1.158602,-5.351676,4.675591,-5.778535,5.740157,-3.323187,-3.798000,-1.113783,-9.744125,-6.890790,2.503687,2.635144,0.933437,-2.810832,-4.351740,2.866174,-0.692377,-6.108407,9.015207,7.568573,9.125806,1.573495,-5.535806,-5.980490,6.312596,-6.796456,-1.929898,-7.703601,6.866469,-6.816407,-4.401291,-2.360463,-1.077110,-4.853677,4.470201,-1.702076,-6.100418,-9.174495,8.001990,2.494499,-3.200603,7.686402,6.704841,-2.895471,2.853064,-1.104746,-3.252466,-0.058519,-2.744040,-6.941014,-2.305026,-7.220282,-9.151039,7.194960,-5.617001,-3.988194,-6.264333,4.991374,-3.989904,-7.220927,7.901753,3.499756,-0.678313,-7.975929,-3.484314,-5.566023,5.450499,5.239674,-7.062706,3.921743,-6.592197,1.501969,1.578592,-9.285443,-0.011715,2.847442,-1.220920,6.713942,-8.218682,6.252529,-8.311670,-7.682336,-7.765438,7.819108,-2.611635,0.992743,-1.244811,-0.308594,-5.109523,5.924117,0.976817,-2.055960,4.904848,-8.466333,1.260272,7.925007,-7.695772,5.090125,6.406894,4.741188,6.319570,-3.889101,8.546162,9.122910,-0.026350,-6.600488,-8.958292,8.568014,-1.253189,6.680888,8.378567,3.587303,-2.338403,-0.801054,4.711788,-5.458758,3.934094,-9.797721,8.897363,-4.748575,5.756528,5.823106,2.148079,6.661104,5.234760,9.373402,0.793383,-6.269937,8.065522,-0.953757,-3.341842,1.088107,8.053066,-7.190017,1.204197,-6.520871,3.930395,-1.009595,-7.984676,-8.640208,6.541946,-0.283387,-0.670039,-3.976607,-1.626466,-0.463183,8.388925,-5.165801,6.233069,4.908663,2.650910,7.655001,-0.511146,3.561307,-2.675560,-5.534299,4.949579,-6.770670,8.915797,5.919137,0.888617,-7.287941,8.170571,-0.746610,3.527328,5.976443,0.942586,6.523974,2.803943,9.843279,-7.388383,2.051719,-5.525484,3.578304,-2.770270,6.739729,-6.401590,1.689503,-5.327843,-6.126087,8.398384,-7.636093,8.815415,-4.067709,-4.013608,-9.057416,7.351091,-7.671171,7.892122,7.680187,-3.770996,-1.545765,-8.771015,-6.065825,7.589215,-9.599275,8.511492,9.033658,-6.464063,3.759197,7.411852,4.604007,4.077014,8.498161,7.015678,-4.913784,1.172223,-8.694640,-3.794745,8.565822,-8.294400,1.000605,-0.818589,-1.364464,-9.043268,-3.922476,4.938412,1.226275,6.491416,1.615443,9.699131,3.419128,-0.847828,7.842385,-1.469240,-7.533584,-1.090553,-9.628739,5.842897,-7.676089,-2.614034,7.086877,-0.891957,-8.279514,1.121860,7.528351,-1.681729,-8.450025,-1.787217,9.982917,-0.770022,2.724974,4.033657,2.094339,-4.080946,9.522620,-1.385462,-2.701594,9.729646,6.754293,7.514873,9.973595,1.226296,-3.262756,0.938541,-3.139305,-0.926132,6.432239,-4.523384,-3.944121,-1.004246,0.514422,-4.041920,4.291805,5.299673,6.749733,4.899137,-5.825602,-3.450414,0.439180,-0.251343,2.596004,1.356398,7.373725,2.414928,7.666582,5.494207,9.941702,-5.449317,7.053156,5.984266,-7.619176,6.578152,9.584664,-2.017670,-8.928687,-9.242762,9.247651,-7.153189,8.450016,-9.836248,1.225978,-2.864776,5.141196,5.557398,-7.700559,6.467488,-4.974399,7.909474,-2.931055,-1.430180,-7.838493,-4.551336,-0.810934,-3.480288,4.306892,-4.947911,-9.861485,4.356339,-3.321436,-4.157289,0.598409,3.044377,0.884995,0.416309,-4.824737,-7.349192,-5.256267,-5.504340,2.318453,2.753470,7.248880,1.757765,-9.475099,-2.637755,4.130003,3.851086,-8.127063,-2.419306,6.498311,-1.367481,2.383069,-0.048723,0.618879,4.157545,-9.397409,3.264890,-1.865085,1.654978,2.049467,8.857798,8.082282,9.707923,-3.606856,7.224429,2.747575,4.759900,-6.752247,4.384264,1.769444,-0.777263,5.475938,3.283652,-6.854924,-5.366132,-1.706630,-6.712671,-8.773438,-1.892672,-0.730499,-6.361007,5.216731,-8.264778,8.534671,6.330683,-5.406727,-3.168376,-6.075509,-6.420064,6.387985,-3.523945,-3.620918,5.399062,4.778053,5.690951,5.637299,4.793441,-0.089712,-5.738410,2.172098,-5.705028,6.585237,8.348647,-8.747461,-3.982399,-5.258626,-4.133864,3.327327,0.150217,7.169211,-2.579854,-0.907309,8.979066,-3.871015,3.137733,2.802169,6.931324,-9.033426,-0.039090,-6.709497,-8.081188,-9.243430,-3.123998,-0.498447,-2.403953,-2.458597,-9.556925,-7.276513,3.701951,8.586181,8.554814,-5.245679,9.147133,1.530531,-2.501043,-8.945058,8.451914,1.470653,0.909118,4.720266,1.581252,-1.566275,9.822360,1.546040,8.486568,8.386637,9.185428,-5.721485,-7.042365,3.290496,3.033928,-2.802463,-9.657365,-0.322034,4.182702,0.740699,-7.121074,5.267636,-6.456342,-4.531506,8.031604,-9.213110,-7.501540,-1.071082,3.784650,5.860441,1.645439,4.324432,0.078969,6.340505,9.958070,9.928705,5.680411,2.201618,3.065619,0.611209,8.198817,9.163523,-0.443333,9.453492,9.797051,4.520742,-5.627320,-3.715665,-4.614359,-2.343489,-2.317954,4.916036,-3.295325,-2.449700,1.438771,2.346862,9.846761,-7.204197,-5.397668,3.233273,-2.561488,-4.603340,5.561287,-1.446383,5.800606,-4.399490,-3.739962,5.660224,-8.710228,-5.278292,6.439460,7.415663,-9.675997,5.289431,9.354196,4.375250,9.957511,-3.605481,-2.043409,-5.587780,0.425557,-9.239107,8.513890,5.096070,6.986208,9.259394,6.456061,8.081556,-1.643693,-3.374096,-4.452171,8.392742,0.437644,-4.632135,-3.960456,5.123773,4.543176,2.600618,9.389527,3.848329,-4.377070,-8.916217,0.845466,2.056088,-0.371272,0.797696,7.409351,-7.659037,-9.278394,8.265020,8.034347,-3.586836,-7.553722,6.980509,-2.047080,-4.725495,6.734050,-7.857363,-7.632141,-4.849466,6.520607,9.536965,-0.791247,-4.974118,9.093807,5.705146,-3.628650,8.939080,9.226699,1.524067,1.624544,-4.813391,-1.388280,9.374477,2.114616,3.350921,9.902238,8.557418,-7.450617,-4.301403,8.602644,-8.228923,-0.600177,-8.581114,5.688097,4.693666,0.904496,2.598501,1.318806,8.354366,7.340208,5.259929,9.470806,-5.989460,-5.390936,7.082223,7.895682,-0.625170,-4.123741,6.971268,-1.514624,-0.797532,3.627844,9.602158,2.869751,2.512225,7.236104,4.622370,6.322387,-5.263133,2.028470,-6.509295,9.890217,-3.768540,6.834135,7.306476,-8.601248,-2.066880,-7.675625,-1.804719,-6.301470,-0.314029,3.340686,-3.041807,3.382715,-3.417095,4.059204,4.269181,3.989785,-2.526008,-2.686494,-3.689542,3.591812,-1.670385,-1.425079,7.560259,-2.109724,-1.992464,-5.076061,-1.483864,9.789434,-1.938932,2.485464,-6.548319,1.245376,-9.393425,-6.583544,-0.027888,4.632768,3.272748,-5.440912,-0.930473,-3.630611,-9.882091,8.603179,5.701936,0.193482,0.158315,8.867075,-9.260790,-2.362447,-3.065986,9.059762,7.977139,2.556874,3.525216,0.503324,-3.217302,-3.138616,-1.141663,-8.276979,8.961695,2.293018,-2.529144,-1.913293,5.871896,2.792252,5.955322,2.332588,9.228043,-3.845959,-3.511051,-6.343663,1.101000,0.402249,7.902330,7.555803,8.825313,8.093212,-6.725856,-1.299834,0.399528,3.395535,0.254564,2.720693,-3.638931,3.954861,2.078356,8.739138,-6.962701,8.089652,-0.958449,-7.127184,8.000663,-0.846306,7.441385,-5.248861,-5.666058,-8.439767,-0.355725,8.137409,5.134519,2.151417,-0.817333,5.046843,3.048465,-1.307746,-1.597634,6.372810,4.989922,8.388175,2.049774,2.316424,0.295917,1.053331,6.924191,-0.306676,5.283220,0.663672,5.794586,-7.551038,4.204611,-9.300155,-5.714602,-8.144392,1.963718,-8.980489,8.058700,0.545262,8.538552,-0.590705,1.131318,5.054334,-5.539790,-6.551621,-4.503990,-8.725694,-0.538241,3.330422,-7.160107,-6.806580,2.521858,-1.812602,-7.727821,5.323070,-1.962259,-8.384937,2.786206,-0.116291,-3.368564,8.191096,-5.392399,4.919534,-2.428910,6.450761,-1.104480,7.247066], dtype = "float32")#candidate|4279|(2160,)|const|float32
call_4278 = relay.TupleGetItem(func_779_call(relay.reshape(const_4279.astype('float32'), [9, 15, 16])), 0)
call_4280 = relay.TupleGetItem(func_781_call(relay.reshape(const_4279.astype('float32'), [9, 15, 16])), 0)
bop_4283 = relay.equal(uop_4263.astype('bool'), relay.reshape(uop_4272.astype('bool'), relay.shape_of(uop_4263))) # shape=(15, 10, 8)
bop_4288 = relay.multiply(uop_4263.astype('uint16'), relay.reshape(uop_4272.astype('uint16'), relay.shape_of(uop_4263))) # shape=(15, 10, 8)
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_4296 = func_4096_call()
call_4297 = func_4096_call()
uop_4303 = relay.asinh(bop_4283.astype('float32')) # shape=(15, 10, 8)
output = relay.Tuple([call_4278,const_4279,bop_4288,call_4296,uop_4303,])
output2 = relay.Tuple([call_4280,const_4279,bop_4288,call_4297,uop_4303,])
func_4316 = relay.Function([var_4262,], output)
mod['func_4316'] = func_4316
mod = relay.transform.InferType()(mod)
var_4317 = relay.var("var_4317", dtype = "float32", shape = (15, 10, 8))#candidate|4317|(15, 10, 8)|var|float32
output = func_4316(var_4317)
func_4318 = relay.Function([var_4317], output)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_4320 = relay.TupleGetItem(func_3764_call(), 0)
call_4321 = relay.TupleGetItem(func_3766_call(), 0)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
var_4337 = relay.var("var_4337", dtype = "float64", shape = (315,))#candidate|4337|(315,)|var|float64
call_4336 = func_3329_call(relay.reshape(var_4337.astype('float64'), [7, 5, 9]))
call_4338 = func_3329_call(relay.reshape(var_4337.astype('float64'), [7, 5, 9]))
bop_4340 = relay.logical_and(call_4336.astype('bool'), relay.reshape(var_4337.astype('bool'), relay.shape_of(call_4336))) # shape=(7, 5, 9)
bop_4343 = relay.logical_and(call_4338.astype('bool'), relay.reshape(var_4337.astype('bool'), relay.shape_of(call_4338))) # shape=(7, 5, 9)
var_4353 = relay.var("var_4353", dtype = "bool", shape = (7, 5, 9))#candidate|4353|(7, 5, 9)|var|bool
bop_4354 = relay.logical_or(bop_4340.astype('bool'), relay.reshape(var_4353.astype('bool'), relay.shape_of(bop_4340))) # shape=(7, 5, 9)
bop_4357 = relay.logical_or(bop_4343.astype('bool'), relay.reshape(var_4353.astype('bool'), relay.shape_of(bop_4343))) # shape=(7, 5, 9)
uop_4372 = relay.log10(bop_4340.astype('float32')) # shape=(7, 5, 9)
uop_4374 = relay.log10(bop_4343.astype('float32')) # shape=(7, 5, 9)
func_938_call = mod.get_global_var('func_938')
func_941_call = mutated_mod.get_global_var('func_941')
var_4385 = relay.var("var_4385", dtype = "float32", shape = (99,))#candidate|4385|(99,)|var|float32
const_4386 = relay.const([[-3.324111,-0.831882,4.571819,9.145025,-3.747962,8.673485,-5.010674,-6.635116,6.376896,-0.731200,5.228271,7.174728],[3.965172,-4.515987,-8.649725,3.523136,-5.249427,6.611670,-3.163745,1.670683,-1.177427,3.608374,-6.698212,-2.137529],[4.106148,4.011246,0.696325,-7.169855,-9.167763,-8.548515,6.901443,6.289888,-0.572904,5.437511,2.185311,7.318705],[1.270562,-7.649290,-1.158231,5.777295,-7.267003,-6.533111,-7.082077,-7.890466,-3.489714,2.150302,-8.941961,7.315614],[8.576390,0.385491,7.378372,5.117569,2.659629,-7.251023,-6.441228,0.334240,8.509090,9.412787,-2.145454,-4.911997],[-7.955572,-2.108247,-0.228269,6.879170,-0.993087,7.976158,-2.155585,2.174936,-1.453154,8.126921,9.619894,9.248030],[4.956958,-7.169593,-6.286645,-3.231426,6.743640,2.885827,-1.345564,6.871764,1.020051,6.681256,4.537301,5.556161],[-6.524907,0.562128,-4.969038,-7.405151,8.560347,6.346006,5.964613,-6.374872,6.976868,1.156297,6.714968,-0.635110],[8.566133,-8.490944,-9.261529,-5.159741,-6.958279,8.009869,1.748559,-9.075475,-7.131600,-8.157013,3.363509,-3.477201],[6.063004,2.661757,3.088978,0.686886,5.829985,4.053438,-2.901118,-6.736553,4.626658,6.433943,-3.424453,6.758133],[5.848241,-6.715760,4.458514,3.564791,-0.232078,8.014924,7.574131,-2.806674,-1.675596,-9.506426,-0.346136,9.818157],[-8.082985,-7.577888,2.908177,-1.092820,4.977193,5.941419,5.757613,6.836438,4.766799,1.421366,-3.893899,1.157572],[-9.920365,5.218222,4.267202,-8.706913,1.817517,-9.136102,6.722489,5.143082,3.267090,7.956658,-6.970523,4.020972],[2.814667,-3.955046,-2.785141,-8.665128,3.730536,5.391330,-8.949950,5.950655,-7.999850,-4.534596,-9.084737,8.787885],[2.599084,-3.908492,4.845305,2.044556,5.407572,-7.527378,-7.323132,-1.555417,-0.693809,-1.268635,3.246982,-6.177646],[8.295357,0.711423,9.221188,1.483605,5.543484,-1.458368,9.401798,8.595302,4.235025,4.055318,-2.169190,1.013400],[1.842225,-2.255747,6.510472,7.617204,4.466803,-7.095334,3.852791,3.926819,-3.704775,0.485353,-0.221634,-7.807307],[4.937851,4.282832,8.183628,-7.345087,-0.023733,9.767952,-1.311112,-9.550925,-3.184257,-7.730787,-0.164583,-3.436990],[9.059360,4.887720,1.705205,8.237250,3.544935,-7.859444,8.084579,1.101890,4.197756,-8.324670,8.292219,-6.971830],[4.978334,8.691140,-7.456808,-6.755147,-6.074547,3.668495,1.088351,-8.546771,4.245218,1.609452,6.343967,-9.761754],[-6.612657,-1.819865,3.758080,5.197614,5.772665,2.524290,-4.101270,3.522473,2.479588,-8.733133,6.565668,4.344433],[-8.583373,-8.026891,0.180533,-4.613951,6.339388,-9.283743,4.304819,2.886588,-7.713189,1.963397,2.661725,6.777983],[9.556588,3.791815,-7.527896,-3.545620,-2.132472,5.108089,2.459925,1.523884,-4.402970,-9.948870,8.712382,2.646569],[-4.048129,-7.875400,6.083287,-5.668611,-5.696665,-6.140628,-2.595575,7.544527,3.715093,-4.802172,-6.637150,0.619752],[3.667140,4.038627,6.160032,8.134062,7.764718,2.031875,4.722951,0.691304,-3.278861,9.176416,-0.190710,5.830501],[5.509776,0.417963,9.896767,-2.964465,-9.472101,7.750457,-4.835699,2.206490,-4.359172,0.775951,-6.719241,9.373173],[-5.542817,3.716146,6.290355,-9.791682,-1.363873,7.246472,-2.645797,8.957682,0.478446,-9.909727,6.675791,6.499231],[2.356084,1.715587,5.611081,-3.275347,4.255418,4.180002,-7.134622,5.455905,6.481179,-3.470049,9.833987,-9.970006],[-0.806808,-0.906215,-5.285817,6.153460,-5.614009,3.705424,-5.002834,0.210641,9.317078,-4.459184,-4.230064,-3.493924],[-2.696135,3.191013,-9.581941,-8.107585,3.535884,-5.769683,-6.630021,6.360508,8.128278,1.044549,-2.309500,0.228842],[8.708177,7.104741,-0.806749,6.080541,-3.878918,-4.647764,-5.485089,2.951586,2.937899,1.974467,9.766052,8.864941],[1.412073,-8.320770,9.880983,1.935972,-1.461131,7.675290,-1.786873,4.657969,1.433116,-5.930050,9.468869,3.245722],[7.358301,-7.671835,6.486056,5.171369,-3.722821,-6.246805,-2.679882,-5.247022,-8.895333,8.186124,-2.290558,9.511264],[-7.704609,5.178021,8.310115,-5.117403,0.967255,-2.947628,-0.567909,2.055222,7.721420,2.272299,4.940665,-5.386738],[9.632766,5.150512,2.531578,9.032192,-4.576577,0.546703,-9.426486,-1.927694,-2.172342,-4.873888,8.463950,-3.737312],[-1.706960,-6.660038,1.933682,5.642922,-2.053337,4.277173,-8.014050,6.226078,7.515216,-3.794794,-7.116055,-3.023560],[6.946672,-9.157285,-3.355027,-7.414390,-3.223898,4.869800,3.346041,-5.642124,2.242555,8.825418,-9.362646,-2.430977],[8.721381,5.099162,0.716689,4.804250,3.740590,4.336734,-2.193521,-5.623418,-6.492649,-6.316016,-6.770603,4.817670],[-8.827164,6.265180,9.297701,0.488115,1.993183,9.185148,-7.913444,4.381102,-4.865110,0.005311,-6.788073,0.994080],[6.512980,3.388486,-7.480142,5.879468,4.453212,9.371834,-6.899040,-5.320994,-8.393937,8.701918,-4.437665,-2.211718],[6.368143,4.363415,0.575305,2.923503,-0.216945,-1.421251,7.023209,-0.600790,6.479542,-7.088733,-5.517710,2.050892],[-1.315934,7.672339,1.270037,3.282507,0.524386,4.085018,7.786945,-3.421778,4.697494,-8.556492,-9.423196,5.672898],[-1.250466,-5.190207,-4.571278,3.485635,-7.386550,6.644652,-1.030033,-3.445205,2.112199,-0.263363,-5.599468,7.050215],[-7.754488,9.732401,-1.916040,-6.943634,-1.310140,7.674943,-9.946425,6.541419,7.407193,-4.191380,9.160934,8.482970],[-2.517327,0.503980,-3.816551,-6.460822,-6.583279,-5.706716,5.782569,9.300881,0.027311,-4.246646,-6.845859,-6.159946],[5.445411,6.272880,0.900365,8.938844,0.501173,0.524440,3.653073,-9.543342,6.645603,-6.054295,8.970445,-9.538235],[-6.331554,-2.780188,-8.269438,-1.305502,5.454378,-5.460273,5.223245,5.202215,-9.161073,-7.875246,-5.501099,1.643285],[2.011502,-9.828071,0.124162,2.540041,-3.815166,-6.735559,-2.047944,-8.257476,2.670939,3.842141,-7.604442,7.728744],[2.987035,5.146986,-8.191866,1.325191,-9.916979,-7.482486,-8.345732,-1.436383,7.310816,0.786070,6.656730,0.786881],[-4.289061,3.148469,7.098029,4.594281,7.360383,2.874444,4.332026,1.617954,-6.127999,9.198558,-4.259996,2.678214],[2.935549,4.932294,-6.772698,3.341136,2.889127,-5.304077,9.556501,1.305443,-3.468724,-2.248678,3.452296,5.682444],[7.676856,-9.263977,-7.870484,4.105082,-9.696019,4.657106,2.016017,2.823069,4.578289,-0.330716,1.032182,6.493368],[-7.572832,3.033745,-4.281014,7.194686,-4.239184,4.297531,-2.622856,-3.090444,5.636171,7.866053,-1.541253,-8.711613],[-9.079996,-0.666632,-2.178742,4.742487,7.134694,8.192584,-4.910552,9.380190,-0.008604,0.161341,5.992308,-9.628369],[5.626518,9.713269,-3.229827,-6.769639,-2.156948,1.986934,-1.269009,0.212696,2.253905,5.954849,-0.302079,-3.254444],[3.747818,0.137049,4.614817,-3.235465,3.865106,-0.569173,7.492609,7.597891,0.994507,-8.809016,6.988845,4.684219],[-0.084360,-9.099201,7.414755,-6.748106,8.106923,8.991931,9.155161,0.516258,-6.916544,-4.913099,-5.706637,5.622856],[-3.800423,-0.041827,-0.801479,6.670231,-4.088015,2.437958,-3.618777,0.320308,2.904322,6.002168,-7.626029,9.458010],[-4.878108,-5.842813,9.947321,8.458197,5.116068,-0.575948,3.836761,0.272198,9.659328,-6.436310,-1.642186,2.237402],[-3.336932,-9.250580,-0.775179,6.194867,2.364919,9.238912,-5.167620,4.754935,-1.494055,8.220382,2.248098,-1.941570],[9.734121,-0.588317,-6.231154,2.431872,-9.493991,1.048685,0.473788,-6.456803,-7.711034,-9.682078,-2.805981,-1.730443],[7.233782,-5.813641,-2.355617,8.370314,3.864508,9.257963,-5.066509,4.352436,-6.124140,9.842021,0.073369,4.354328],[1.108039,-2.049662,0.138070,3.984090,-5.829065,1.262279,-0.898933,-2.160845,-8.274019,9.094919,-4.841434,-5.671407],[3.005612,8.509332,6.188219,-3.013462,-1.304854,-9.036720,6.523573,-7.872262,2.712563,1.585445,-8.579673,-3.783389],[0.552240,6.625861,-0.038732,6.528982,2.539566,-5.034674,0.132078,-9.975822,-7.066494,4.893343,-1.610472,9.068294],[7.408596,7.260077,4.118260,-2.119870,2.141556,-3.246008,8.073954,4.360119,-4.782850,2.506758,-4.369186,3.678828],[-9.687220,-9.914990,-6.235734,2.845177,-8.777418,-5.251741,-1.986104,6.783167,-6.454811,0.640521,4.846268,0.086547],[-4.798074,5.559188,-9.303284,1.126634,9.584143,2.817242,-8.395590,0.448643,8.240109,-9.857140,-8.176228,7.111336],[7.232635,7.887346,1.858842,2.031936,4.353845,-3.903672,3.288841,6.126702,1.942883,0.973944,2.107435,3.467243],[-0.639797,-8.367545,6.741724,7.003835,-7.703144,2.682260,6.728745,7.392784,0.871986,-9.512408,-7.635255,0.788670],[-8.785642,6.573486,3.451872,-3.439404,-0.497819,-2.727836,-7.574787,-0.477966,-9.419534,-7.881011,-8.155757,5.561926],[7.316845,1.452300,6.682579,-7.645766,7.552736,6.253406,-6.962786,-2.525104,-6.085537,-3.993815,-8.741165,4.563873],[-8.104536,2.834799,4.391942,-1.064412,-1.094551,-2.153982,-1.218999,-0.182067,-4.408429,-4.707106,2.684031,3.348037],[0.417674,2.197283,4.958250,5.094099,-4.033810,-2.374506,3.514996,2.762163,-0.665926,2.690498,-8.247498,-0.073842],[5.702398,5.634332,5.163177,-0.736371,-9.180558,1.476762,-4.794671,6.145548,2.431116,-4.253270,-2.230474,-8.845464],[-6.506812,9.915132,4.231938,3.866844,-4.404930,-6.896064,-9.001012,-3.295190,-6.466658,-2.605394,-0.214495,7.554475],[4.858400,-9.641510,3.819832,1.015459,-4.747345,-5.624507,-9.199713,-1.061977,-4.555311,1.862432,0.989157,5.504767],[6.988846,-9.591109,8.926514,7.390146,-4.420473,-7.443599,-8.389110,1.630670,-6.150929,5.316218,3.666925,5.649783],[-2.841042,-8.088075,7.374377,1.692067,5.565224,-3.730302,4.922846,-6.925145,-0.014187,-7.174051,-8.546365,9.928763],[4.738830,0.226905,0.454106,8.620616,9.747280,8.419268,5.274597,2.322745,6.447221,-9.583285,0.778433,-3.634883],[2.504142,6.130187,-5.248965,8.353804,8.175892,-0.865971,0.362392,-4.678471,-8.953543,8.107350,-4.250730,-2.916355],[6.355186,-3.848073,3.661895,-7.464847,4.050390,-2.927035,-9.567587,-1.919057,4.710406,-3.400756,-2.965390,0.411425],[7.674466,-0.653674,-8.245380,3.765351,2.751690,-3.840425,-0.440920,-8.934391,-8.374712,1.444803,-8.139091,-3.648087],[-0.814018,-2.354875,3.574164,5.098376,2.184974,-6.335079,7.314361,6.099096,-6.648463,7.901419,-0.888748,-5.947169],[4.686371,9.603075,1.298126,2.314251,0.413491,-9.576716,6.930949,7.459875,-5.449535,-0.853204,7.560707,-0.283953],[-5.473938,-2.086724,8.659113,6.060270,-5.416794,-7.928044,8.876694,9.341721,-4.322436,5.437943,-5.746995,-7.674741],[8.523592,-7.307194,-1.365760,-1.212863,-4.506932,2.208041,9.476037,-8.854582,8.371051,-4.417334,-8.926678,0.366125],[5.590026,7.354829,6.033154,-2.876814,-9.602858,3.293098,-1.550934,7.429754,-1.103707,-5.085292,-3.365219,5.658132],[-6.384918,-9.648225,-7.472960,9.267408,-7.537295,8.997427,-9.237227,-7.907528,-0.510984,1.506891,2.924110,8.038426],[7.909382,-2.895664,7.664412,6.038580,0.270703,-2.999552,-3.636800,5.684452,-3.442398,-0.780423,4.413735,-7.522453],[2.708140,-4.625680,-3.541200,-0.513632,3.457251,7.610354,5.659170,-1.825189,-1.873084,-8.244663,-5.573334,-7.630217],[-2.818563,0.866452,4.924564,2.719484,4.795476,-5.540076,2.056133,1.904741,9.893581,9.984239,-8.605262,3.795074],[5.415810,8.304671,8.814237,-4.125885,-0.602767,7.393620,8.541469,-8.573066,-8.637750,2.058685,-0.303531,0.637679],[3.415021,-6.262493,-7.728462,9.855343,8.164929,-0.878774,-7.338243,-2.534397,-1.539623,-5.799003,-5.740852,9.553417],[0.612899,-6.253065,4.110476,9.555412,3.037333,-5.914798,4.503584,0.411575,-4.447780,-2.825634,-4.163914,-3.305116],[-4.200270,4.044046,8.431474,-3.000849,6.108942,-4.490419,-7.983844,9.455386,0.595369,7.946251,8.749424,3.073699],[-5.253192,-5.717013,-6.390355,-5.222483,-8.173213,9.381205,-2.491693,-1.831204,7.462466,-1.986682,9.426715,1.936811],[-0.760858,8.990378,4.947296,9.469979,-3.792657,-7.597133,-9.203614,-5.534516,-6.902814,1.141031,1.779371,-4.380686],[-9.211287,-5.607759,7.164030,8.114228,-1.506158,2.240842,6.463134,-1.847878,5.413103,7.236120,6.053073,-3.155317],[6.263853,-7.629605,1.395992,9.886017,6.302957,7.181995,0.878439,-7.182046,-4.870607,2.388335,6.137326,4.912809],[4.684012,-3.732019,-2.379337,-2.771203,-3.903060,-6.415987,-6.696379,-8.075199,4.989166,-8.559324,-1.151844,1.107970],[-5.966405,-5.631334,-0.942693,-6.377949,-6.273979,-4.440113,7.465831,5.239081,6.588953,-4.875116,4.675214,6.608441],[-0.672331,-8.537968,8.895760,2.793210,-0.715777,6.161855,-8.633150,-5.386875,-6.271688,6.132385,-8.042478,-3.856377],[9.407494,4.557764,6.113123,8.023292,-8.077922,-5.219165,4.129971,1.034151,7.332503,-2.037899,7.268763,4.792356],[9.435646,6.922894,8.434351,0.992776,-2.892426,1.557000,-6.196615,-0.209203,-8.142407,-9.711406,-6.253235,-3.417783],[-1.527678,9.494235,2.117325,1.117556,-4.315413,-3.687254,-5.033782,-9.427547,-0.785400,-3.009150,-5.924896,5.483919],[0.073666,7.661489,-3.143917,-7.192560,-5.394622,-0.685442,-8.556665,1.796006,-7.582355,-1.681263,7.706828,-0.392541],[-0.667388,-8.797901,9.114303,-8.924629,4.658868,-7.948989,0.686672,-1.626944,9.939793,0.682964,7.206537,-8.819125],[6.943251,-0.922748,4.563312,-0.563447,-5.510226,-9.226526,6.518645,-5.928692,-2.690540,-2.906917,6.888683,-2.079157],[6.944588,-8.167468,-9.306768,-9.376430,1.688035,-3.252560,0.836410,5.327849,-3.232270,3.182349,-5.694871,-4.587899],[6.358137,-4.459012,-1.077058,4.875306,-5.109631,-4.655097,-0.392777,-7.534199,0.057125,-2.725368,-1.632884,-7.194746],[9.736397,-0.957217,-5.903359,5.971548,0.090773,-0.964065,-9.372193,7.232380,-4.617030,7.440977,-5.216110,-6.244791],[-2.516184,3.491812,-1.837621,8.998991,6.304107,3.971303,1.687074,3.138757,-9.693825,-5.446212,0.679986,-4.431176],[4.859009,-9.641010,9.869676,8.523867,5.840570,-6.940608,7.839929,-1.476021,2.939118,-6.021133,-2.114279,2.943084],[8.886338,1.481688,1.072392,-7.827051,8.170209,7.797715,-6.744391,-8.067637,3.721367,4.146561,2.172104,5.526565],[-3.872524,2.764720,-2.993098,2.227159,-5.269873,-8.587138,-5.040515,-1.660617,-7.776233,8.395522,-2.563148,-7.378588],[-9.687882,-2.913333,2.177626,0.459947,5.974738,-3.891582,2.147850,-1.548408,-5.418332,-6.713610,6.114679,-0.322178],[-7.374361,-0.584055,-0.658064,-6.834904,3.053092,-5.872797,-0.570110,-6.614470,-9.540397,5.752614,-1.255883,7.548642],[3.222756,-4.719506,-5.788449,-3.725733,-5.484820,5.898144,0.002001,5.324972,5.822657,-0.825063,9.300727,7.516554],[6.996839,-6.394939,-0.694456,6.201358,3.399842,2.697647,-0.934164,-2.582281,-9.462889,4.922110,9.717959,-8.330021],[-9.311440,-9.272405,1.384850,5.304858,1.968943,0.162170,5.543837,7.790122,-6.820416,-7.121781,-9.383986,3.887182],[4.674106,-0.016357,3.484932,4.030266,9.897259,-4.020058,1.638320,-4.220424,4.175615,1.139842,-1.410801,4.772674],[5.347429,1.210379,-7.430874,-0.815457,-5.017499,-9.593436,-7.112725,0.782419,8.873346,-6.971994,-8.501155,9.829540],[-2.764523,-5.071234,7.111416,0.422907,-3.701106,-9.384575,8.437181,-3.814086,-0.782081,-8.562767,-6.302533,-4.256675],[0.560547,-9.889843,0.509848,4.969196,-8.940206,-4.028053,2.032758,-2.637527,2.140937,-7.107772,-1.559147,-9.674359],[2.025029,0.344165,-9.069885,0.100456,-3.602657,9.244759,-6.874945,-3.892685,7.150676,-2.691087,-3.964055,-3.974237],[-4.826820,9.895612,6.863020,4.063781,-2.501666,-2.077548,-0.290550,-9.289301,3.228726,5.781855,-5.795761,0.493796],[-2.954337,-6.160229,-8.252142,-6.329003,0.480662,2.050016,6.512946,1.190039,8.224113,1.359586,7.145883,4.858743],[0.386083,-4.086632,-3.543534,4.679470,-0.479016,1.981736,-0.842532,9.013604,7.793881,-4.441332,7.697929,-0.566984],[2.658320,-9.810994,0.952825,-1.085336,-3.590224,-9.491686,-7.046566,-2.056756,0.898992,9.684179,1.880854,4.296611],[-0.043007,-0.556702,9.025692,-3.202895,-7.587521,-2.884918,-9.365436,-0.933051,6.508766,0.544944,7.049068,-7.045635],[-8.024611,-5.976589,-1.431150,-4.814700,-3.359855,-1.210096,-6.944780,-4.824540,-4.676708,-5.215291,5.798697,2.341556],[-8.295387,-6.009325,-5.443782,-5.716745,7.621884,9.340362,1.090671,-4.515336,-0.345039,2.458591,1.861142,2.637034],[-9.214434,0.395414,-5.752295,6.435582,4.508655,-8.496765,-2.503625,-7.788059,-4.816607,-8.747663,-7.654572,0.729804],[8.349001,8.649355,-9.506273,-4.052627,-7.533977,3.273536,0.166509,7.657778,-4.059287,-7.199429,2.549454,-5.831905],[-4.357743,8.722614,6.402746,7.608900,3.815144,-3.042579,6.081464,8.697838,-4.309536,8.764557,3.322263,-3.887396],[-8.658112,-0.543464,-1.756242,3.791262,7.096340,1.556548,4.404993,-5.734094,9.483265,4.681763,5.538539,-3.228410],[0.060407,9.406426,3.871015,-4.927788,0.090074,9.866808,-2.982956,-2.895452,9.445047,-9.643724,6.107377,2.674799],[8.097054,3.054540,7.005299,-0.173414,9.944670,0.224790,-1.666653,9.602598,4.281972,6.133607,9.197440,5.265482],[2.458201,-2.442937,-3.067138,4.999561,-0.171388,3.467847,-1.163471,-8.898314,7.881006,-6.478121,3.097671,7.887851],[-9.101778,-6.237863,5.257179,-0.747298,-6.758988,6.493712,1.485805,-6.770615,0.255023,9.227217,-9.757336,-8.483738],[-7.151079,6.098715,-8.186747,-3.401289,7.146939,-0.879318,-9.619919,6.137586,8.304486,-9.413128,2.301014,-0.568897],[-6.757867,-8.814644,4.860858,-1.128301,-2.975250,-0.798491,6.503704,2.535614,1.555536,0.233127,4.480579,-6.639697],[4.649936,6.694714,-9.183305,0.483364,3.685710,7.170888,-7.027519,-1.330284,8.634555,2.639189,2.955734,8.818883],[3.374251,4.463009,5.857016,5.788912,-7.505805,7.996741,9.062411,7.830706,-5.908223,7.209833,-0.007491,8.673299],[-4.925759,-6.954229,-7.159956,9.624034,-8.545781,-4.661717,-0.567565,-7.131570,-6.577092,1.540198,6.787401,-6.405546],[6.484449,-5.773301,-7.023969,1.670413,8.761032,-9.877455,1.597778,6.931309,-2.337218,1.563013,8.134493,1.556690],[7.552947,7.193985,3.261614,0.606555,-3.137159,0.670074,9.513920,1.311494,-6.425575,-5.114089,7.283531,-5.897119],[6.064686,2.422682,3.663039,-4.514290,9.439217,5.425777,-1.988832,-9.921159,3.081209,9.156018,-3.571606,0.655859],[-1.415009,7.416810,0.501134,-9.013114,0.191636,2.490052,-8.620445,-3.292959,-1.661852,5.823852,-7.884608,1.883495],[4.229939,-0.497188,0.075235,-7.250355,-7.333905,-6.379061,0.759158,-1.878392,-8.194055,-8.655949,-6.959548,-5.512834],[-5.458206,5.575363,8.198555,-7.283550,7.599901,2.961590,-4.597899,-8.380403,4.722960,-4.585828,2.343468,1.222524],[8.068096,3.585328,-9.729867,-7.238698,3.119783,7.860707,-9.964269,9.009239,7.833498,-8.758315,-6.305101,-6.211096],[2.986064,2.742344,9.157447,-7.813253,-9.652293,-8.664157,-6.746683,9.230100,-4.632654,-8.302203,6.804124,-5.348726],[-1.958602,-4.616862,-2.879101,-2.919649,-9.289656,-8.384765,6.357057,-8.775957,-8.731775,-3.823200,6.675565,-7.586555],[3.261882,-0.909736,-5.595591,4.517722,7.500962,-5.700847,-3.560889,-3.288262,-8.253948,-7.620487,8.881605,7.030463],[-7.619816,-3.756638,1.663744,6.672763,-5.442880,9.533106,8.060343,7.538375,6.532681,-6.036162,0.278597,-6.640274],[5.111889,9.607087,0.700781,4.584677,-0.107278,1.485134,-5.945611,-0.361384,-7.335268,-4.567283,-7.252100,-7.835725],[3.352692,4.366594,7.986765,-3.562267,3.003652,-4.244136,-2.357399,-2.487376,6.304654,-4.978106,-1.908825,-1.804193],[2.266992,-3.744027,8.192266,1.033075,0.929176,8.998942,-5.101811,-9.724194,5.916696,-9.868942,-2.721374,-3.586078],[-4.893958,2.681945,-1.197862,9.603883,-3.396205,2.721182,-1.796611,-2.990052,-3.335211,2.059716,4.213806,-8.672593],[-8.062942,-5.900767,1.805182,-5.856580,-1.282787,-1.335693,-8.963492,-5.183850,-9.234458,-0.589035,-8.319352,-9.135245],[-8.946412,6.726871,4.111206,-4.361940,-5.620021,-7.096223,2.886265,7.752451,6.515559,-7.618449,9.827000,-7.799722],[4.066885,-5.934939,-4.825951,-7.591176,-7.562987,-7.624310,9.194038,1.273442,-5.121544,3.332770,9.048480,8.453617],[-0.345770,-1.665889,-4.802574,2.535697,7.304026,5.564366,2.545041,-7.966316,0.341062,7.925178,5.042043,-8.694813],[2.365260,7.668077,-2.302680,7.991728,3.197899,-9.898382,-0.178513,5.053774,2.805755,3.310156,-1.274161,9.413547],[4.691692,-5.831160,5.246104,-6.457126,-4.082025,6.297460,-2.190691,9.645315,-9.986032,9.503657,-3.319596,-8.451991],[2.112825,-1.410531,1.557171,8.285850,-7.095605,3.138230,-4.993827,-4.638821,-5.132254,9.542157,-9.737646,-1.451827],[-0.874386,-3.619649,-5.023401,-3.154637,-7.831022,4.843988,-3.224283,-2.728440,-2.736451,4.266420,2.244897,3.167335],[4.897275,-0.757053,0.994161,5.697089,-9.288160,-0.775862,-6.883319,-0.905259,9.986485,8.896075,-7.189522,2.332370],[8.184771,3.009206,-9.196008,-7.909680,3.624562,-3.789127,2.011384,-5.761938,3.125863,-2.642263,-8.377008,-2.388793],[-2.641108,7.407300,-8.063571,6.476344,6.802806,-8.726526,0.830542,-2.810314,-8.391028,-0.846458,-8.112068,9.663217],[3.498473,8.166285,5.985433,-9.380846,2.632629,-5.590258,-4.017912,-0.563204,8.871525,9.842495,0.344537,2.350733],[-0.422262,-7.842044,7.890801,-4.228895,5.068443,-6.392137,-7.872670,1.844835,-6.337667,2.388960,9.381689,2.363060],[-9.782357,-0.543139,-0.532340,5.488470,5.936077,8.860511,-6.544064,3.884730,8.967002,-3.549148,-3.804724,-0.625914],[0.849498,0.505981,0.166560,9.994915,-4.604220,1.094830,-4.029280,0.190414,-4.653431,-5.803174,0.784905,8.775106],[8.366793,-3.272466,5.375347,-1.260108,-4.227648,3.051616,-0.374418,4.665391,-9.439099,4.883454,-0.705753,-0.412620],[7.564909,7.384101,6.844042,-9.277986,-1.361143,-5.459903,2.014408,-1.861816,4.080936,5.054254,3.321859,-4.797885],[5.574537,-8.660980,-8.890117,6.084705,2.070592,-5.743358,4.521785,5.673821,2.717342,3.831901,-2.214872,-0.774272],[0.018372,-1.758739,2.879402,8.891314,-4.864082,-6.040357,-7.256820,9.694669,-1.480243,-3.782500,-3.378269,7.013762]], dtype = "float32")#candidate|4386|(180, 12)|const|float32
call_4384 = relay.TupleGetItem(func_938_call(relay.reshape(var_4385.astype('float32'), [11, 9, 1]), relay.reshape(const_4386.astype('float32'), [2160,]), ), 1)
call_4387 = relay.TupleGetItem(func_941_call(relay.reshape(var_4385.astype('float32'), [11, 9, 1]), relay.reshape(const_4386.astype('float32'), [2160,]), ), 1)
func_4096_call = mod.get_global_var('func_4096')
func_4098_call = mutated_mod.get_global_var('func_4098')
call_4399 = func_4096_call()
call_4400 = func_4096_call()
uop_4411 = relay.log(uop_4372.astype('float64')) # shape=(7, 5, 9)
uop_4413 = relay.log(uop_4374.astype('float64')) # shape=(7, 5, 9)
bop_4415 = relay.less(uop_4411.astype('bool'), relay.reshape(call_4336.astype('bool'), relay.shape_of(uop_4411))) # shape=(7, 5, 9)
bop_4418 = relay.less(uop_4413.astype('bool'), relay.reshape(call_4338.astype('bool'), relay.shape_of(uop_4413))) # shape=(7, 5, 9)
output = relay.Tuple([call_4320,bop_4354,call_4384,var_4385,const_4386,call_4399,bop_4415,])
output2 = relay.Tuple([call_4321,bop_4357,call_4387,var_4385,const_4386,call_4400,bop_4418,])
func_4423 = relay.Function([var_4337,var_4353,var_4385,], output)
mod['func_4423'] = func_4423
mod = relay.transform.InferType()(mod)
var_4424 = relay.var("var_4424", dtype = "float64", shape = (315,))#candidate|4424|(315,)|var|float64
var_4425 = relay.var("var_4425", dtype = "bool", shape = (7, 5, 9))#candidate|4425|(7, 5, 9)|var|bool
var_4426 = relay.var("var_4426", dtype = "float32", shape = (99,))#candidate|4426|(99,)|var|float32
output = func_4423(var_4424,var_4425,var_4426,)
func_4427 = relay.Function([var_4424,var_4425,var_4426,], output)
mutated_mod['func_4427'] = func_4427
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mod.get_global_var('func_4004')
func_4005_call = mutated_mod.get_global_var('func_4005')
call_4444 = relay.TupleGetItem(func_4004_call(), 0)
call_4445 = relay.TupleGetItem(func_4005_call(), 0)
output = relay.Tuple([call_4444,])
output2 = relay.Tuple([call_4445,])
func_4458 = relay.Function([], output)
mod['func_4458'] = func_4458
mod = relay.transform.InferType()(mod)
mutated_mod['func_4458'] = func_4458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mutated_mod.get_global_var('func_4458')
call_4459 = func_4458_call()
output = call_4459
func_4460 = relay.Function([], output)
mutated_mod['func_4460'] = func_4460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mod.get_global_var('func_4458')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_4487 = relay.TupleGetItem(func_4458_call(), 0)
call_4488 = relay.TupleGetItem(func_4460_call(), 0)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_4494 = relay.TupleGetItem(func_3819_call(), 0)
call_4495 = relay.TupleGetItem(func_3821_call(), 0)
bop_4496 = relay.right_shift(call_4487.astype('int16'), relay.reshape(call_4494.astype('int16'), relay.shape_of(call_4487))) # shape=(8, 5, 12)
bop_4499 = relay.right_shift(call_4488.astype('int16'), relay.reshape(call_4495.astype('int16'), relay.shape_of(call_4488))) # shape=(8, 5, 12)
output = bop_4496
output2 = bop_4499
func_4502 = relay.Function([], output)
mod['func_4502'] = func_4502
mod = relay.transform.InferType()(mod)
output = func_4502()
func_4503 = relay.Function([], output)
mutated_mod['func_4503'] = func_4503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4502_call = mod.get_global_var('func_4502')
func_4503_call = mutated_mod.get_global_var('func_4503')
call_4528 = func_4502_call()
call_4529 = func_4502_call()
const_4530 = relay.const([[[7,6,-4,9,-6,2,7,-2,-8,-7,-3,5],[7,-6,-5,-9,-8,8,-8,4,9,-3,7,-7],[4,-7,-8,4,4,6,-6,2,2,10,6,-1],[9,-1,1,-3,-2,3,-1,-7,6,6,10,8],[7,-9,1,10,-4,-6,1,-2,-8,-4,4,7]],[[5,-2,1,-7,9,3,-6,9,4,-8,5,-9],[-7,-5,4,-8,3,-6,-1,3,10,9,-9,-9],[6,-1,7,5,2,-4,-1,-7,-6,1,7,7],[-1,7,-7,-4,-4,-3,2,-7,-7,1,5,4],[-1,9,8,7,-4,-9,1,-3,8,-5,5,7]],[[3,2,5,9,9,-6,-4,8,9,9,1,-4],[10,-9,1,9,-3,-4,-6,-8,1,-4,9,2],[-9,10,5,-9,5,-9,6,-2,8,-9,1,9],[-1,8,5,10,3,4,-5,-10,-10,9,-7,-7],[9,7,-3,-1,-1,6,8,-2,7,-8,8,5]],[[9,6,-4,-10,8,2,-6,-6,1,5,-2,-2],[-2,3,2,-7,-1,6,-3,10,-6,3,-5,-10],[-2,8,1,-3,2,-2,4,-5,10,4,-2,7],[7,9,-8,10,6,-4,-8,10,4,6,9,5],[-7,-7,3,6,-1,-4,5,-10,4,6,2,-3]],[[7,-4,-1,10,-8,-4,8,-3,-6,-1,-2,10],[5,-7,-3,5,10,-10,10,8,4,1,3,-4],[-4,7,-6,-2,-6,-1,-1,-1,-6,1,-1,-6],[-2,-1,-2,3,-10,1,-9,10,-6,-6,-5,-8],[-10,-9,-10,7,1,-9,3,-8,-2,10,4,9]],[[-10,6,4,6,-5,-2,-9,8,-7,2,9,-4],[9,-4,-3,-2,8,8,-2,-3,-1,-5,-5,10],[-2,-1,-10,-1,10,-1,-8,8,1,-5,4,3],[4,8,2,1,-10,-6,9,1,-3,-2,5,5],[8,10,-8,7,-10,-1,-3,-8,-7,3,-2,-5]],[[9,5,9,-10,2,9,5,-3,-3,9,9,8],[4,1,-8,-2,-8,-10,1,-6,-2,-4,-2,-1],[-3,10,-10,7,-4,9,-9,-8,9,3,-10,2],[3,10,-5,2,-3,-10,-3,-6,-7,8,7,-2],[3,-8,-4,6,8,-5,-7,3,-9,3,-3,-8]],[[6,-8,-1,-3,6,9,2,1,1,7,3,8],[-6,-6,1,-9,10,-2,-10,5,-6,7,-2,-10],[-4,-1,-6,9,-9,8,10,7,-7,-1,5,2],[-2,7,-7,7,3,-8,-4,-8,-3,2,-6,-3],[9,-1,-10,6,-3,-6,-2,-2,8,2,9,6]]], dtype = "int16")#candidate|4530|(8, 5, 12)|const|int16
bop_4531 = relay.power(call_4528.astype('float32'), relay.reshape(const_4530.astype('float32'), relay.shape_of(call_4528))) # shape=(8, 5, 12)
bop_4534 = relay.power(call_4529.astype('float32'), relay.reshape(const_4530.astype('float32'), relay.shape_of(call_4529))) # shape=(8, 5, 12)
output = bop_4531
output2 = bop_4534
func_4536 = relay.Function([], output)
mod['func_4536'] = func_4536
mod = relay.transform.InferType()(mod)
output = func_4536()
func_4537 = relay.Function([], output)
mutated_mod['func_4537'] = func_4537
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4606 = relay.var("var_4606", dtype = "int32", shape = ())#candidate|4606|()|var|int32
var_4607 = relay.var("var_4607", dtype = "int32", shape = (15, 10, 4))#candidate|4607|(15, 10, 4)|var|int32
bop_4608 = relay.bitwise_xor(var_4606.astype('int32'), var_4607.astype('int32')) # shape=(15, 10, 4)
uop_4613 = relay.log2(var_4607.astype('float64')) # shape=(15, 10, 4)
func_4316_call = mod.get_global_var('func_4316')
func_4318_call = mutated_mod.get_global_var('func_4318')
var_4626 = relay.var("var_4626", dtype = "float32", shape = (1200,))#candidate|4626|(1200,)|var|float32
call_4625 = relay.TupleGetItem(func_4316_call(relay.reshape(var_4626.astype('float32'), [15, 10, 8])), 1)
call_4627 = relay.TupleGetItem(func_4318_call(relay.reshape(var_4626.astype('float32'), [15, 10, 8])), 1)
func_1753_call = mod.get_global_var('func_1753')
func_1758_call = mutated_mod.get_global_var('func_1758')
var_4634 = relay.var("var_4634", dtype = "float64", shape = (2520,))#candidate|4634|(2520,)|var|float64
const_4635 = relay.const([-10,-3,4,-5,1,-8,5,4,-9,-2], dtype = "int16")#candidate|4635|(10,)|const|int16
call_4633 = relay.TupleGetItem(func_1753_call(relay.reshape(var_4634.astype('float64'), [12, 15, 14]), relay.reshape(var_4606.astype('int16'), []), relay.reshape(const_4635.astype('int16'), [10,]), ), 2)
call_4636 = relay.TupleGetItem(func_1758_call(relay.reshape(var_4634.astype('float64'), [12, 15, 14]), relay.reshape(var_4606.astype('int16'), []), relay.reshape(const_4635.astype('int16'), [10,]), ), 2)
uop_4656 = relay.erf(uop_4613.astype('float32')) # shape=(15, 10, 4)
output = relay.Tuple([bop_4608,call_4625,var_4626,call_4633,var_4634,const_4635,uop_4656,])
output2 = relay.Tuple([bop_4608,call_4627,var_4626,call_4636,var_4634,const_4635,uop_4656,])
func_4661 = relay.Function([var_4606,var_4607,var_4626,var_4634,], output)
mod['func_4661'] = func_4661
mod = relay.transform.InferType()(mod)
mutated_mod['func_4661'] = func_4661
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4661_call = mutated_mod.get_global_var('func_4661')
var_4663 = relay.var("var_4663", dtype = "int32", shape = ())#candidate|4663|()|var|int32
var_4664 = relay.var("var_4664", dtype = "int32", shape = (15, 10, 4))#candidate|4664|(15, 10, 4)|var|int32
var_4665 = relay.var("var_4665", dtype = "float32", shape = (1200,))#candidate|4665|(1200,)|var|float32
var_4666 = relay.var("var_4666", dtype = "float64", shape = (2520,))#candidate|4666|(2520,)|var|float64
call_4662 = func_4661_call(var_4663,var_4664,var_4665,var_4666,)
output = call_4662
func_4667 = relay.Function([var_4663,var_4664,var_4665,var_4666,], output)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4536_call = mod.get_global_var('func_4536')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_4715 = func_4536_call()
call_4716 = func_4536_call()
output = relay.Tuple([call_4715,])
output2 = relay.Tuple([call_4716,])
func_4733 = relay.Function([], output)
mod['func_4733'] = func_4733
mod = relay.transform.InferType()(mod)
output = func_4733()
func_4734 = relay.Function([], output)
mutated_mod['func_4734'] = func_4734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3764_call = mod.get_global_var('func_3764')
func_3766_call = mutated_mod.get_global_var('func_3766')
call_4795 = relay.TupleGetItem(func_3764_call(), 0)
call_4796 = relay.TupleGetItem(func_3766_call(), 0)
func_4004_call = mod.get_global_var('func_4004')
func_4005_call = mutated_mod.get_global_var('func_4005')
call_4800 = relay.TupleGetItem(func_4004_call(), 0)
call_4801 = relay.TupleGetItem(func_4005_call(), 0)
func_112_call = mod.get_global_var('func_112')
func_117_call = mutated_mod.get_global_var('func_117')
const_4807 = relay.const([[-4,10,5,4,9,7,9,9,-2,7,9,9,-4,4,8,9,-6,3],[10,1,1,9,-7,-10,-7,4,-4,-9,3,4,-7,5,-1,7,8,-3],[8,-1,-10,-4,5,-2,3,7,5,7,-4,7,1,-9,6,9,3,8]], dtype = "int64")#candidate|4807|(3, 18)|const|int64
const_4808 = relay.const([-5.258121,-6.387604,-5.212327,-5.308215,-1.280214,-4.913170,-3.692167,-6.130642,-9.201666,-9.583794,7.650641,-0.400031,-2.535101,-5.875687,3.838599,-7.656649,-3.937216,6.604998,-2.814217,2.108738,-7.059060,-2.500546,5.820459,-5.652997,-5.571470,-4.503864,-7.168447,-6.355769,1.904014,-3.431378,-2.467157,9.807776,0.700840,7.202502,-2.528511,-2.987357,-8.336647,9.081630,-6.251611,2.143363,1.817121,-8.875618,-2.380791,-4.593500,2.744825,-9.447414,7.216451,-7.502093,7.534124,-7.407977,-9.632132,-6.150907,5.739093,-2.315801,-7.944094,-0.898642,2.756197,5.439445,-7.860204,-7.411718,-9.217470,3.854463,-4.844213,8.027019,7.023383,2.402601,-8.427747,-8.732064,6.179762,7.156702,-0.170317,0.652429,-0.173666,8.691342,-7.868701,-9.442100,8.404097,-6.378427,3.130676,3.008068,7.263811,-6.735487,-9.786858,6.511990,-4.586057,7.175256,0.852946,-7.281499,6.313614,-4.045028,9.940188,5.193791,-6.204762,-6.277902,2.747967,-1.369817,-3.618496,-9.693824,0.965494,0.845273,5.316971,-1.069967,5.400084,-4.547390,-6.259724,5.231104,-5.320171,-1.298159,-8.382114,-9.419328,-7.044630,9.129174,-4.810583,-1.865804,8.357439,7.336967,-7.422457,2.279413,-1.737346,7.219138,-4.011407,9.072585,5.008058,8.917836,-9.787674,3.628429,-8.325615,-4.836028,-7.879519,-2.661703,-2.367408,-4.493190,2.921398,-0.630221,-6.684938,9.176551,-4.238889,8.462633,-8.303392,-4.493165,-5.878959,-7.905533,-2.021236,6.031662,8.088073,-8.306549,4.613263,-7.239248,3.879250,1.825477,-6.991377,-5.548296,5.840311,-4.096702,6.714540,-9.551395,-5.907720,-7.935544,6.035051,-6.106742,-2.837733,-9.091636,8.188051,-0.185564,-0.488641,-4.405085,-1.970689,7.792828,-0.382165,-1.781992,-2.225521,-9.880356,3.803200,8.589200,-2.341140,6.671797,7.342637,2.296449,-9.882631,0.838144,8.074798,-2.577809,-3.397434,0.935789,3.311450,-7.247340,-3.642355,3.605418,-8.766811,6.741437,-8.083303,7.967513,-0.433875,-5.102389,-6.475744,8.091903,-4.449417,-5.482930,-0.314227,7.278512,5.280344,7.674188,-6.525940,3.628918,-0.468491,-2.498312,6.868837,-7.434231,-9.643550,-5.604153,-8.018771,-2.798576,7.887390,8.580508,-9.345051,-7.340726,9.550722,5.629280,-7.742187,-5.047404,1.816583,2.414246,-7.203562,4.088306,-2.457205,3.902173,9.276269,3.583907,-4.178714,-5.449529,-9.325762,-8.334113,7.996853,6.113127,-0.852017,-0.833214,-2.481135,-2.716094,3.657279,0.968461,-5.324139,-8.732203,-9.438881,-2.493388,-5.851120,5.999457,7.513425,-5.720922,-6.565773,-4.596564,6.056612,-2.798286,-1.965534,-9.599790,-2.705667,-4.972602,0.944441,3.135445,-0.648597,-3.988362,-4.649858,5.762552,-9.117206,-9.766364,-4.093551,2.791199,1.980406,5.072074,9.010598,2.930881,-0.063816,-3.200145,-7.137965,3.601076,7.571079,-3.798670,-4.918447,-9.335615,9.789725,5.188553,5.265747,-1.560096,-0.207308,9.300785,5.590218,-3.206763,-4.469721,4.916541,-9.730585,2.356998,1.742383,1.409778,-1.226972,-0.075211,3.795697,8.668459,-9.549942,5.655026,1.081407,-8.521407,-8.294654,-7.434411,6.973454,0.741012,2.552699,-3.914805,-0.448851,-4.064401,1.056656,8.414515,-9.566156,6.687368,-2.551152,5.137715,9.830527,-4.721908,-9.895814,-2.823517,2.328023,5.478720,4.841569,6.485142,-2.325462,-8.763779,-3.782758,-8.602444,-0.900340,2.244676,-1.257971,-3.807896,8.395001,8.531205,-4.268060,6.743024,-3.141334,-9.895211,-6.434495,4.580828,8.460575,-6.960777,0.605316,-8.374606,6.739980,-8.326732,-7.142454,8.561924,-7.417496,-9.669692,2.194582,-3.995260,-5.121793,2.049689,-1.616191,3.822812,-6.859145,3.867510,-3.901321,3.000848,4.710334,-1.038708,-1.521554,5.654158,-3.520551,5.939458,-6.757253,6.130849,-5.844301,8.326012,-2.987054,-1.573016,7.042391,-4.173748,0.493934,8.149123,-2.813599,9.901763,8.356612,5.238985,-3.762138,3.284594,-7.388899,8.287498,5.201703,8.210027,-0.883523,-4.378269,1.639084,1.228277,-7.580720,0.441843,-3.341598,-4.864185,-3.430124,-7.339138,-2.979830,2.039527,-8.193198,-5.035089,4.613091,0.782671,4.394931,9.534278,2.455410,-0.266883,7.366542,-1.573405,-4.757919,-1.028447,-2.143065,9.242291,-2.348273,9.060846,6.359973,5.758908,5.968061,-3.227679,-4.141204,1.157766,0.769069,-0.182144,0.929350,-5.487677,3.314677,-6.285749,7.918545,-7.990743,-7.437681,0.664182,2.871321,2.760880,3.066270,-5.196801,5.869676,1.572723,8.155010,-3.338322,-4.764404,-8.910467,6.722334,0.818859,-0.123292,-9.765518,7.570154,-4.912149,-9.101936,3.513696,-9.433112,-4.227182,3.967366,-1.752383,1.926387,-3.686092,4.197767,4.929424,4.875818,-3.891843,-0.897640,4.392364,-1.114462,7.160623,2.861333,-5.881138,-0.756243,5.281509,6.207127,-1.756165,-4.892246,-6.013890,8.524484,-5.571294,0.066408,-8.524665,-5.507042,3.211446,3.243569,0.803100,-7.565286,-3.849713,-1.091482,-3.414461,3.228094,-7.048359,8.296495,-5.169553,-9.761772,-1.097143,8.321516,-5.575803,-5.652076,-8.359814,-0.489139,-7.079877,3.475868,4.101661,-5.493859,6.923045,-5.601911,-5.167544,8.588741,-9.387454,4.314670,1.361443,0.851709,-5.578010,5.250881,4.222518,3.477977,-2.576142,6.545412,-6.676379,-0.553910,4.705652,-5.914094,-9.619474,-9.866102,8.973283,5.793949,-7.523215,-4.759953,-0.286866,2.142566,3.583242,5.690920,-4.315766,7.104533,9.362164,-6.463444,-6.783063,-3.754604,-8.553824,9.007469,-1.504470,-9.986236,2.266849,-6.845165,7.295324,-4.361438,-2.284223,-9.293195,-5.471302,5.622238,4.747266,-0.103893,-0.708014,9.188819,-3.167295,1.384457,7.291438,9.276870,-1.203456,3.663268,-1.627499,2.798448,5.282828,9.262057,3.856766,8.424011,-2.770947,6.925872,-8.102281,-9.287607,0.303122,-7.966897,8.202340,-8.787618,4.356967,1.007254,5.593349,-8.418091,5.172224,-1.939331,-2.196762,2.803460,8.965352,-8.887545,2.794126,-5.314558,-1.143328,-9.344745,5.585415,3.787904,-9.594552,-0.933763,6.744739,-8.107768,-8.214006,-5.568048,2.420275,6.841137,-4.633760,-6.012770,-8.770363,-9.280490,6.052478,6.188963,4.377852,0.650662,7.991875,6.539185,-5.660505,8.063712,-3.024758,-7.140231,-0.567462,7.690187,5.355025,-0.687112,-3.426021,-9.565247,2.346661,-6.896528,-6.629269,-7.667174,8.587786,4.083527,-2.226389,-5.697808,-7.135449,-3.111022,2.708124,7.539088,4.623552,-3.342527,-2.285785,-3.334261,-1.764606,7.916148,-3.439043,4.968895,5.722565,-9.788802,9.419585,7.228616,5.554656,-9.595527,4.224405,4.229974,-3.369228,-3.250851,-5.981818,-2.690747,-1.504355,1.199786,-8.932146,-7.432371,9.775877,2.491994,-5.699515,-9.913528,-7.231133,-2.466182,-3.155848,-8.606275,2.018539,-9.846812,2.335174,5.736715,-9.844843,1.153214,9.390833,-6.538127,-5.799559,4.152944,-7.780354,-8.024592,0.400155,-6.378331,-5.643935,-4.425488,-3.595857,9.598567,9.561690,8.746196,0.346667,-2.735850,-7.254319,-0.362888,-9.754453,6.602160,1.912306,8.794158,-4.317553,9.423400,6.129203,3.893910,-3.123276,1.535979,3.416688,4.582519,8.959591,2.233316,-9.331234,-8.044494,7.076247,-0.562345,5.842370,0.087347,0.172297,-2.256327,-9.892960,-5.832230,-5.039018,4.655554,-1.452095,1.648255,-5.304947,-1.179544,-1.626467,-8.721673,-9.497155,-9.661370,-1.488501,-2.063335,-7.529525,-3.278903,-9.685299,1.621032,0.953215,-1.284767,6.869316,9.951459,-1.687330,9.984411,8.631178,-3.564784,-7.713714,6.781213,2.505411,-9.872294,0.460214,-2.795023,-4.748188,-3.980453,-3.292091,6.950652,-1.345744,-3.254733,-4.710000,5.318226,0.052035,-1.960508,1.299028,-4.401188,2.351869,-0.589377,-1.589256,-5.922528,1.004560,-6.699775,6.405351,9.789235,-7.491662,-6.860030,1.386062,-8.458860,4.703937,-1.361279,2.365087,7.154863,-7.240753,4.031318,2.317394,7.175920,-1.577982,-2.219331,4.918296,-0.197740,6.100233,6.529940,-5.637124,9.999453,-6.404994,-6.972044,0.459367,-4.532273,-3.961830,-4.973649,2.749178,-3.039647,1.145644,9.154314,-8.350955,-7.037688,-0.065441,7.620376,-1.034561,-0.626302,-4.454570,-6.096551,9.766573,2.639979,-1.590934,0.064614,6.355690,2.454669,-0.632588,-5.530269,-5.740893,4.714150,-7.625726,-9.494672,4.541000,9.782283,6.735759,2.440037,-3.108891,-5.507606,-3.231639,-8.860312,8.011507,-6.733903,-1.714515,2.205394,-5.951167,1.866893,3.806794,2.531280,-0.974242,-3.351838,-0.369423,-2.961416,1.492957,2.208985,-9.250264,9.825445,9.909069,-6.432293,-6.587797,6.399810,-7.137016,7.049362,-7.720038,-6.377464,2.431702,-0.124943,6.236038,-1.531935,-1.302626,-6.128912,1.503327,-0.572024,-2.549775,-0.323834,-7.471571,5.354732,-5.108178,-5.861090,2.529875,-7.239170,-4.350017,-4.473165,7.731405,-2.926780,-3.684779,6.272527,-9.279067,-0.717865,-8.927044,-5.138540,-3.267205,8.981282,-0.385081,5.188473,-7.095754,6.785169,1.808665,-9.964775,-6.268724,-7.701861,-9.768804,9.143942,8.816473,1.157698,-0.129035,3.432764,8.208543,-0.858814,-5.862414,3.193786,6.958743,1.847055,-1.404813], dtype = "float64")#candidate|4808|(882,)|const|float64
call_4806 = relay.TupleGetItem(func_112_call(relay.reshape(const_4807.astype('int64'), [9, 3, 2]), relay.reshape(const_4807.astype('int64'), [9, 3, 2]), relay.reshape(const_4808.astype('float64'), [882,]), ), 1)
call_4809 = relay.TupleGetItem(func_117_call(relay.reshape(const_4807.astype('int64'), [9, 3, 2]), relay.reshape(const_4807.astype('int64'), [9, 3, 2]), relay.reshape(const_4808.astype('float64'), [882,]), ), 1)
func_4458_call = mod.get_global_var('func_4458')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_4811 = relay.TupleGetItem(func_4458_call(), 0)
call_4812 = relay.TupleGetItem(func_4460_call(), 0)
output = relay.Tuple([call_4795,call_4800,call_4806,const_4807,const_4808,call_4811,])
output2 = relay.Tuple([call_4796,call_4801,call_4809,const_4807,const_4808,call_4812,])
func_4816 = relay.Function([], output)
mod['func_4816'] = func_4816
mod = relay.transform.InferType()(mod)
mutated_mod['func_4816'] = func_4816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4816_call = mutated_mod.get_global_var('func_4816')
call_4817 = func_4816_call()
output = call_4817
func_4818 = relay.Function([], output)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_4830 = func_3652_call()
call_4831 = func_3652_call()
output = call_4830
output2 = call_4831
func_4835 = relay.Function([], output)
mod['func_4835'] = func_4835
mod = relay.transform.InferType()(mod)
mutated_mod['func_4835'] = func_4835
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mutated_mod.get_global_var('func_4835')
call_4836 = func_4835_call()
output = call_4836
func_4837 = relay.Function([], output)
mutated_mod['func_4837'] = func_4837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_4943 = relay.TupleGetItem(func_4038_call(), 0)
call_4944 = relay.TupleGetItem(func_4039_call(), 0)
uop_4945 = relay.tan(call_4943.astype('float32')) # shape=(8, 5, 12)
uop_4947 = relay.tan(call_4944.astype('float32')) # shape=(8, 5, 12)
output = uop_4945
output2 = uop_4947
func_4958 = relay.Function([], output)
mod['func_4958'] = func_4958
mod = relay.transform.InferType()(mod)
mutated_mod['func_4958'] = func_4958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4958_call = mutated_mod.get_global_var('func_4958')
call_4959 = func_4958_call()
output = call_4959
func_4960 = relay.Function([], output)
mutated_mod['func_4960'] = func_4960
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4987 = relay.var("var_4987", dtype = "float32", shape = (13, 12, 12))#candidate|4987|(13, 12, 12)|var|float32
uop_4988 = relay.atan(var_4987.astype('float32')) # shape=(13, 12, 12)
output = uop_4988
output2 = uop_4988
func_4996 = relay.Function([var_4987,], output)
mod['func_4996'] = func_4996
mod = relay.transform.InferType()(mod)
mutated_mod['func_4996'] = func_4996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4997 = relay.var("var_4997", dtype = "float32", shape = (13, 12, 12))#candidate|4997|(13, 12, 12)|var|float32
func_4996_call = mutated_mod.get_global_var('func_4996')
call_4998 = func_4996_call(var_4997)
output = call_4998
func_4999 = relay.Function([var_4997], output)
mutated_mod['func_4999'] = func_4999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4004_call = mod.get_global_var('func_4004')
func_4005_call = mutated_mod.get_global_var('func_4005')
call_5001 = relay.TupleGetItem(func_4004_call(), 0)
call_5002 = relay.TupleGetItem(func_4005_call(), 0)
uop_5011 = relay.erf(call_5001.astype('float64')) # shape=(8, 5, 12)
uop_5013 = relay.erf(call_5002.astype('float64')) # shape=(8, 5, 12)
uop_5017 = relay.log10(uop_5011.astype('float64')) # shape=(8, 5, 12)
uop_5019 = relay.log10(uop_5013.astype('float64')) # shape=(8, 5, 12)
output = relay.Tuple([uop_5017,])
output2 = relay.Tuple([uop_5019,])
func_5020 = relay.Function([], output)
mod['func_5020'] = func_5020
mod = relay.transform.InferType()(mod)
output = func_5020()
func_5021 = relay.Function([], output)
mutated_mod['func_5021'] = func_5021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5085 = relay.TupleGetItem(func_3819_call(), 0)
call_5086 = relay.TupleGetItem(func_3821_call(), 0)
output = relay.Tuple([call_5085,])
output2 = relay.Tuple([call_5086,])
func_5089 = relay.Function([], output)
mod['func_5089'] = func_5089
mod = relay.transform.InferType()(mod)
mutated_mod['func_5089'] = func_5089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5089_call = mutated_mod.get_global_var('func_5089')
call_5090 = func_5089_call()
output = call_5090
func_5091 = relay.Function([], output)
mutated_mod['func_5091'] = func_5091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4458_call = mod.get_global_var('func_4458')
func_4460_call = mutated_mod.get_global_var('func_4460')
call_5121 = relay.TupleGetItem(func_4458_call(), 0)
call_5122 = relay.TupleGetItem(func_4460_call(), 0)
const_5138 = relay.const([[[False,False,False,True,False,True,False,True,True,True,True,False],[True,False,False,True,False,False,False,False,True,True,False,False],[True,False,False,False,True,False,False,True,False,False,False,True],[False,False,False,True,True,True,True,True,True,True,False,True],[True,False,True,True,True,True,True,True,True,True,True,True]],[[False,True,False,False,False,True,True,False,True,True,True,True],[False,False,False,False,True,False,True,True,True,True,False,False],[False,True,True,False,True,False,True,True,False,True,True,False],[False,True,False,False,False,True,True,True,True,True,True,False],[True,False,True,False,True,True,True,False,True,False,False,False]],[[True,True,True,True,False,False,True,True,True,True,True,False],[False,False,True,True,True,False,True,False,False,True,True,False],[False,False,False,True,False,False,True,True,True,False,False,True],[True,True,False,False,False,True,False,False,True,True,True,False],[True,True,True,False,False,False,False,False,False,False,False,False]],[[False,True,False,True,False,False,False,True,False,True,True,False],[False,False,True,False,True,False,False,True,True,True,True,True],[True,True,False,True,True,False,False,True,True,False,False,True],[False,False,False,False,True,False,True,False,False,False,False,True],[False,False,False,False,False,True,True,True,False,True,True,True]],[[True,True,False,True,True,False,False,True,True,True,False,False],[True,True,False,True,True,False,False,True,True,True,True,True],[False,True,False,True,False,True,False,False,False,True,True,True],[True,True,True,False,False,True,True,True,False,True,False,True],[False,True,False,True,False,False,False,False,True,False,True,True]],[[False,False,True,False,True,False,False,False,False,True,True,False],[False,False,False,False,True,False,True,True,True,True,False,True],[True,False,False,False,True,True,False,True,True,True,True,False],[False,True,True,False,False,False,False,False,False,False,False,True],[True,True,True,False,True,True,False,False,False,False,True,True]],[[True,True,False,True,False,True,True,False,True,False,False,True],[False,True,False,False,True,False,False,False,False,True,True,True],[False,True,True,False,True,False,True,False,True,True,True,False],[True,True,False,False,True,True,True,False,False,True,False,True],[False,False,False,False,True,True,True,False,False,False,False,True]],[[True,False,True,False,True,True,False,False,False,True,False,True],[False,False,True,False,True,False,True,True,False,True,True,False],[False,False,False,False,True,False,True,False,False,True,False,False],[False,True,False,False,False,True,True,False,True,True,False,False],[True,True,False,True,True,True,True,True,False,True,False,True]]], dtype = "bool")#candidate|5138|(8, 5, 12)|const|bool
bop_5139 = relay.logical_or(call_5121.astype('bool'), relay.reshape(const_5138.astype('bool'), relay.shape_of(call_5121))) # shape=(8, 5, 12)
bop_5142 = relay.logical_or(call_5122.astype('bool'), relay.reshape(const_5138.astype('bool'), relay.shape_of(call_5122))) # shape=(8, 5, 12)
func_938_call = mod.get_global_var('func_938')
func_941_call = mutated_mod.get_global_var('func_941')
var_5157 = relay.var("var_5157", dtype = "float32", shape = (33, 3))#candidate|5157|(33, 3)|var|float32
var_5158 = relay.var("var_5158", dtype = "float32", shape = (180, 12))#candidate|5158|(180, 12)|var|float32
call_5156 = relay.TupleGetItem(func_938_call(relay.reshape(var_5157.astype('float32'), [11, 9, 1]), relay.reshape(var_5158.astype('float32'), [2160,]), ), 0)
call_5159 = relay.TupleGetItem(func_941_call(relay.reshape(var_5157.astype('float32'), [11, 9, 1]), relay.reshape(var_5158.astype('float32'), [2160,]), ), 0)
bop_5162 = relay.floor_mod(call_5156.astype('float64'), relay.reshape(var_5157.astype('float64'), relay.shape_of(call_5156))) # shape=(11, 9, 1)
bop_5165 = relay.floor_mod(call_5159.astype('float64'), relay.reshape(var_5157.astype('float64'), relay.shape_of(call_5159))) # shape=(11, 9, 1)
uop_5171 = relay.erf(var_5158.astype('float64')) # shape=(180, 12)
output = relay.Tuple([bop_5139,bop_5162,uop_5171,])
output2 = relay.Tuple([bop_5142,bop_5165,uop_5171,])
func_5179 = relay.Function([var_5157,var_5158,], output)
mod['func_5179'] = func_5179
mod = relay.transform.InferType()(mod)
var_5180 = relay.var("var_5180", dtype = "float32", shape = (33, 3))#candidate|5180|(33, 3)|var|float32
var_5181 = relay.var("var_5181", dtype = "float32", shape = (180, 12))#candidate|5181|(180, 12)|var|float32
output = func_5179(var_5180,var_5181,)
func_5182 = relay.Function([var_5180,var_5181,], output)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5020_call = mod.get_global_var('func_5020')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_5228 = relay.TupleGetItem(func_5020_call(), 0)
call_5229 = relay.TupleGetItem(func_5021_call(), 0)
output = relay.Tuple([call_5228,])
output2 = relay.Tuple([call_5229,])
func_5231 = relay.Function([], output)
mod['func_5231'] = func_5231
mod = relay.transform.InferType()(mod)
output = func_5231()
func_5232 = relay.Function([], output)
mutated_mod['func_5232'] = func_5232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5233 = relay.TupleGetItem(func_3819_call(), 0)
call_5234 = relay.TupleGetItem(func_3821_call(), 0)
var_5236 = relay.var("var_5236", dtype = "bool", shape = (8, 5, 12))#candidate|5236|(8, 5, 12)|var|bool
bop_5237 = relay.left_shift(call_5233.astype('uint32'), relay.reshape(var_5236.astype('uint32'), relay.shape_of(call_5233))) # shape=(8, 5, 12)
bop_5240 = relay.left_shift(call_5234.astype('uint32'), relay.reshape(var_5236.astype('uint32'), relay.shape_of(call_5234))) # shape=(8, 5, 12)
output = bop_5237
output2 = bop_5240
func_5241 = relay.Function([var_5236,], output)
mod['func_5241'] = func_5241
mod = relay.transform.InferType()(mod)
var_5242 = relay.var("var_5242", dtype = "bool", shape = (8, 5, 12))#candidate|5242|(8, 5, 12)|var|bool
output = func_5241(var_5242)
func_5243 = relay.Function([var_5242], output)
mutated_mod['func_5243'] = func_5243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_5250 = func_4835_call()
call_5251 = func_4835_call()
var_5253 = relay.var("var_5253", dtype = "bool", shape = (8, 5, 12))#candidate|5253|(8, 5, 12)|var|bool
bop_5254 = relay.floor_divide(call_5250.astype('float32'), relay.reshape(var_5253.astype('float32'), relay.shape_of(call_5250))) # shape=(8, 5, 12)
bop_5257 = relay.floor_divide(call_5251.astype('float32'), relay.reshape(var_5253.astype('float32'), relay.shape_of(call_5251))) # shape=(8, 5, 12)
output = bop_5254
output2 = bop_5257
func_5287 = relay.Function([var_5253,], output)
mod['func_5287'] = func_5287
mod = relay.transform.InferType()(mod)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5288 = relay.var("var_5288", dtype = "bool", shape = (8, 5, 12))#candidate|5288|(8, 5, 12)|var|bool
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5289 = func_5287_call(var_5288)
output = call_5289
func_5290 = relay.Function([var_5288], output)
mutated_mod['func_5290'] = func_5290
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5292 = relay.var("var_5292", dtype = "int32", shape = (9, 1, 1))#candidate|5292|(9, 1, 1)|var|int32
const_5293 = relay.const([[[-1,-2],[6,-10],[-2,8]],[[-4,4],[-7,2],[4,6]],[[-1,-9],[-10,-8],[1,9]],[[5,-4],[2,1],[-7,7]],[[-7,-5],[-2,-8],[10,9]],[[-10,1],[8,1],[-7,-10]],[[-6,-6],[-6,-4],[10,4]],[[2,5],[9,2],[-3,-3]],[[2,4],[-8,2],[-7,-7]]], dtype = "int32")#candidate|5293|(9, 3, 2)|const|int32
bop_5294 = relay.bitwise_xor(var_5292.astype('int32'), const_5293.astype('int32')) # shape=(9, 3, 2)
output = bop_5294
output2 = bop_5294
func_5302 = relay.Function([var_5292,], output)
mod['func_5302'] = func_5302
mod = relay.transform.InferType()(mod)
var_5303 = relay.var("var_5303", dtype = "int32", shape = (9, 1, 1))#candidate|5303|(9, 1, 1)|var|int32
output = func_5302(var_5303)
func_5304 = relay.Function([var_5303], output)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5308 = relay.TupleGetItem(func_3819_call(), 0)
call_5309 = relay.TupleGetItem(func_3821_call(), 0)
output = call_5308
output2 = call_5309
func_5314 = relay.Function([], output)
mod['func_5314'] = func_5314
mod = relay.transform.InferType()(mod)
mutated_mod['func_5314'] = func_5314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5314_call = mutated_mod.get_global_var('func_5314')
call_5315 = func_5314_call()
output = call_5315
func_5316 = relay.Function([], output)
mutated_mod['func_5316'] = func_5316
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5323 = relay.var("var_5323", dtype = "float64", shape = (7, 14, 12))#candidate|5323|(7, 14, 12)|var|float64
uop_5324 = relay.asin(var_5323.astype('float64')) # shape=(7, 14, 12)
uop_5338 = relay.tan(var_5323.astype('float32')) # shape=(7, 14, 12)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_5346 = func_4835_call()
call_5347 = func_4835_call()
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_5349 = relay.TupleGetItem(func_4038_call(), 1)
call_5350 = relay.TupleGetItem(func_4039_call(), 1)
bop_5351 = relay.subtract(uop_5324.astype('uint16'), relay.reshape(var_5323.astype('uint16'), relay.shape_of(uop_5324))) # shape=(7, 14, 12)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_5359 = func_4835_call()
call_5360 = func_4835_call()
func_5179_call = mod.get_global_var('func_5179')
func_5182_call = mutated_mod.get_global_var('func_5182')
const_5374 = relay.const([-4.695345,-2.520578,1.236817,-3.749200,9.985666,9.135189,-8.134269,9.362442,4.033707,-8.454997,-0.605046,2.546581,-2.562733,6.767823,1.294461,8.466059,-4.382838,-3.832139,1.799880,5.426183,-1.596550,9.464925,1.885299,7.376028,-0.793605,8.944211,-9.854141,4.367623,9.857847,-1.233911,8.194576,-5.132706,1.113203,-2.835853,0.592384,-6.498095,-5.511009,-5.073782,-0.973081,-4.138720,4.275172,-4.552735,0.372183,-3.008552,-7.038603,9.530015,-4.884569,-6.636807,-9.407435,9.537419,-3.830306,5.552044,3.409993,4.441657,0.360761,7.903466,3.221674,9.460528,2.354652,7.464256,-4.661768,2.202892,-9.556702,9.455432,-7.564740,5.440494,-3.448747,3.993453,-2.953671,9.632963,7.458759,8.051931,-0.630372,0.744521,-2.283810,-4.965673,0.057060,-9.255039,7.970280,-4.395202,-5.079040,-2.206884,-6.384130,-0.921047,-3.986934,-3.803572,-4.244918,-5.733180,-4.989018,-9.552816,-4.345999,-5.123045,8.494229,-2.171676,-5.834051,-7.955196,-6.389877,1.283556,2.308447], dtype = "float32")#candidate|5374|(99,)|const|float32
const_5375 = relay.const([0.380906,4.819916,4.286674,1.713334,0.907102,-3.169567,6.672589,-4.142352,-5.062921,-4.105927,2.551647,4.343530,7.202642,-9.185696,2.201476,-2.631979,-2.567816,-4.428230,-0.499523,8.024439,-4.885102,4.451931,5.553922,3.120015,-1.803774,6.288763,-6.924521,-9.279564,9.687722,-8.614417,-4.084236,7.464355,9.877032,-5.335427,0.439525,0.304956,8.157853,8.096163,-8.393946,-8.509910,-0.163488,-3.763617,0.737893,-1.206465,6.990831,1.217531,1.503843,-6.301991,-2.298406,-4.632950,7.286498,2.783635,-9.167968,7.347317,4.242173,1.722559,6.511970,-1.329438,-7.090207,4.709311,-9.368062,-8.131245,2.072415,-8.364911,6.409232,7.798720,-7.451041,-8.023140,2.485387,7.957965,9.606659,-4.467694,-0.080741,8.259744,5.498572,-9.117073,7.106558,-5.435450,-8.456963,5.433950,6.593709,-4.776747,9.019932,1.485090,-9.674770,-3.706070,7.976674,9.549176,0.022281,1.085781,8.270284,-6.304167,-7.254034,-9.947512,1.826815,-8.059948,-0.531180,-5.905526,2.050460,4.290524,-5.386080,-3.722998,-4.460886,0.083339,-2.588630,2.742219,9.375205,8.619765,-2.239834,-6.333121,2.637274,-5.470806,4.287929,6.278641,-3.170125,-9.920908,-1.782876,4.241558,-9.572810,5.287043,9.979625,0.254646,-3.728242,-0.585374,-4.906269,6.095768,3.493681,5.431686,-9.228987,-6.979029,3.187212,-1.059234,1.014248,0.560992,-2.363259,-7.333596,8.231239,-3.076333,-9.658290,-9.696023,3.980274,-1.988706,8.392929,8.285217,4.982339,6.326083,6.681854,-3.148940,5.933712,-4.641414,-6.332847,2.885778,-6.002869,-3.939023,-2.376012,8.495410,-7.947939,-6.030748,-6.834319,6.460050,6.945702,-7.580682,-6.517626,4.664446,-2.395326,-6.931034,2.862662,-5.260089,3.294853,-3.828085,8.723158,-3.276560,-8.118186,-1.953698,-0.417539,-4.452719,-6.702287,-3.831923,1.281235,-5.557859,-1.456981,1.691313,-4.875364,3.207061,-0.090449,8.623414,-1.291496,7.542002,-0.892970,3.055648,1.779835,6.287466,-5.493200,4.636238,4.264538,-2.115630,-4.136416,8.265578,5.408936,-3.783890,9.127999,-2.403044,4.375718,-6.224882,3.050718,7.255667,2.155703,-9.940312,-6.335797,2.305385,4.224745,0.602705,3.889413,-3.434822,-5.197374,-4.519338,-3.658351,9.274375,-1.221757,0.028117,9.592042,3.386234,6.036442,-2.650333,1.758135,-1.726205,4.285431,-8.744681,-6.787015,-0.906300,3.876336,-8.342689,3.099588,-5.964417,3.375411,0.493368,-6.885960,0.481384,-7.784626,0.672711,-8.052668,-0.280316,-6.958886,-7.295006,8.470546,3.575112,-2.246476,-5.185053,5.520969,3.497399,-8.927816,8.813195,0.053185,7.817660,-7.924380,9.870572,-3.803947,2.225697,-9.757345,1.170259,-1.196377,7.311085,8.541278,-6.158538,-6.817569,7.033148,-1.629022,8.206551,-3.875303,5.101734,0.859967,3.395882,-9.371624,-1.894745,-8.970368,-6.541704,-4.663002,6.961510,3.898995,-8.810794,-6.104715,-2.400607,-0.778412,-0.923258,-9.938757,-4.674121,4.057715,9.791747,-3.474786,-1.010923,-8.428403,0.660206,-3.484173,-9.748376,-6.622728,4.960741,-0.248865,1.690545,6.615964,3.413058,8.122936,-4.619840,6.593163,-8.519035,1.796812,3.549173,6.493680,4.923797,6.368171,0.930489,-9.310262,-3.667831,-6.910591,-7.044425,-1.298516,-5.571641,0.238811,-1.374269,-9.929513,-4.039055,8.301806,2.302594,-5.826277,4.047677,-9.411994,4.256004,8.161335,-0.246054,9.073035,-4.420653,-3.989556,0.524135,0.248335,8.413965,-8.089414,4.765936,9.119481,-4.614601,2.560436,1.713412,-2.190043,1.657113,0.952380,7.703641,-0.994083,-8.902156,-8.715585,-0.131506,6.541726,-2.200625,6.798370,2.759107,-5.405722,-8.360893,7.103129,-9.165803,-3.328111,-7.005128,0.664672,-5.013082,0.094441,-6.385087,-1.915875,7.639935,-8.526653,6.901534,0.886591,-8.935886,-9.858817,-7.309537,9.530842,3.626734,-6.324522,0.555209,8.107229,2.351150,-4.518295,3.658100,-8.292320,-6.394693,-5.499374,-2.283381,-3.098062,3.082219,0.205699,5.985270,-4.134840,-8.803296,-6.311916,-8.682616,4.416432,-8.459896,-7.235320,-0.921179,-9.641108,7.027842,-9.234103,-5.516417,5.415334,1.279897,6.611611,2.488691,4.109514,-2.882113,0.945706,8.366310,-7.929535,-6.871330,4.321290,5.881256,4.148409,-7.616109,-8.507655,-8.987281,9.780809,-1.078631,-1.546439,-5.800632,5.992775,7.317821,-5.486897,7.012577,-9.587164,1.024434,-5.471716,8.423024,3.908259,1.860504,9.130525,7.858635,1.691348,9.286541,2.257925,1.756108,6.652602,9.722152,-2.413536,-7.876196,-5.586081,-2.741180,1.448367,-6.465389,-3.097300,-6.552115,-2.282771,-7.291499,-1.526835,6.831691,3.050975,-1.725660,-3.277009,-9.004123,3.644102,3.143653,-9.231216,-7.466821,-7.855251,0.284766,8.613071,-8.360364,3.401071,6.834034,-9.557081,-2.658609,-6.951387,-3.834792,-7.192608,1.915375,-1.725000,-9.009227,-8.926973,-3.151223,4.306797,1.132068,4.136151,-5.443500,-1.386673,-2.009923,2.812784,4.540030,-7.577263,-8.623213,-3.229250,-0.031507,-5.915137,-9.559982,8.979690,6.782403,-9.022691,9.956822,-2.027424,-2.123455,-7.827544,-8.931445,2.302376,0.476860,8.496201,8.843222,9.810477,-1.955117,-2.821361,-8.971045,9.018631,-2.367987,9.411008,-6.237040,-8.204003,-4.802916,1.940218,-3.176368,-0.237608,-7.089742,2.674354,-0.107592,2.263837,-6.841622,0.265760,-2.694122,9.156866,-7.269210,-0.291041,-3.021893,3.569599,6.677049,1.505457,-1.320451,3.734517,-2.519606,-5.797092,6.609905,9.473723,2.139941,4.896175,-0.873774,-0.226123,4.427490,7.438551,6.698531,-0.991061,1.105169,-4.577327,-5.375277,0.828181,-5.134308,5.918065,1.158677,-0.768083,5.746110,-6.539554,-7.470725,-4.867885,-2.945447,3.860025,-5.002118,-5.539001,-6.648943,3.104912,1.635252,5.840331,-2.840592,3.701745,6.491289,-0.069449,6.139009,-4.371826,-3.379578,2.167069,-4.101802,-6.594703,7.268889,2.520511,-4.016378,-5.369032,8.023478,6.798156,-6.488200,1.902517,-0.311764,-6.394831,9.437855,2.985416,4.283132,-2.122930,-6.149447,-2.847170,3.537873,4.499784,3.870799,5.625417,7.612974,-6.753006,-2.380693,1.372827,-9.595365,-5.067469,1.499258,4.505278,0.301632,-9.932632,-7.895917,9.072535,-5.320639,9.881760,-0.453825,-0.051322,-1.061055,1.816431,3.333972,3.329235,-4.072243,7.618364,-0.612736,-8.607130,-4.295591,3.358116,0.472473,-7.889708,6.104802,9.643022,4.824913,3.019453,8.310564,-7.349206,3.050546,-5.990319,7.669512,7.593386,-0.557032,1.551369,8.111581,9.085390,4.085798,-5.583198,-5.908548,-3.614219,-5.681703,5.321774,-4.227255,-1.325123,4.737114,2.676795,-4.982030,-5.148696,-7.518031,3.899016,-8.267452,8.533065,-2.129778,-2.013715,7.977924,-7.887347,-5.627686,5.869568,4.176534,8.270003,-2.228585,-9.040714,8.000931,7.766213,-7.147656,6.934331,-2.992691,3.655081,3.541532,2.749422,-4.084244,-6.131771,3.305692,-6.410003,6.300952,7.352274,-3.371108,-2.862912,2.696369,-6.385626,-6.460630,-9.927448,-9.325904,4.914300,-1.466752,-7.120951,1.175502,3.469156,6.652585,2.996647,6.841899,-1.484584,-2.642905,-2.769737,1.984139,-9.858176,-9.277811,-4.383022,-3.992972,-6.372652,-9.000560,6.683211,4.005047,-0.580289,-5.832661,7.056213,-4.386411,-0.773101,-2.837955,-8.823376,3.282927,6.417703,-0.535764,-9.004151,-7.239926,5.981316,7.643460,-9.813664,1.836125,4.262253,-7.709126,-3.698292,2.868905,-3.735932,7.316546,2.772234,5.572622,-0.598853,-2.112983,-4.583828,-6.022657,8.037801,-8.343590,-8.905098,-4.998073,-7.838739,5.310808,8.556624,5.728116,-0.296517,0.207396,1.702125,4.734848,-3.820207,-1.056074,-4.416094,-9.279831,-8.707895,9.229644,-3.593559,7.808659,-9.983800,8.261540,2.133835,1.469993,6.957086,2.106573,5.728576,7.869142,-1.127867,-3.788605,-0.269696,-6.824359,-3.449047,1.345887,1.146794,2.567695,2.188853,8.448681,9.791400,8.258176,4.310434,3.180407,5.553877,-8.060725,-4.937119,-7.356620,1.009935,2.784111,-4.765440,2.135823,5.891132,4.282353,3.670639,3.355986,-9.259058,-3.531520,3.389190,-0.792787,-5.595155,-4.426288,-7.347433,9.163848,1.167001,4.100056,2.318444,6.578097,5.848853,-7.732627,-4.053381,6.364691,-6.515435,-1.745519,6.626901,-5.920833,-8.430155,-2.492013,9.053481,-9.867446,-5.791991,-3.006470,-7.411676,7.552813,-6.380869,5.732378,3.796272,8.910504,-4.083227,-3.694111,4.278628,3.898602,0.732607,-6.768544,7.059441,-7.500973,-4.494729,2.786722,-4.959348,-0.420207,-0.761647,5.405582,-4.920603,1.244273,7.227065,-4.754441,-8.269525,-7.313003,8.731873,-0.635503,0.802200,-1.664678,6.919208,3.822464,-2.105916,0.745715,7.618647,3.882821,7.852212,-8.165941,-1.488042,6.014470,-6.859828,-4.092212,-1.658897,-1.764879,5.359242,0.762468,-0.996133,5.834657,-9.503738,-9.678141,9.564150,8.742776,-9.768877,6.013547,-6.556427,-5.672866,-4.835621,-7.849394,5.307274,1.114239,-9.832653,-5.495319,8.596010,6.595151,-0.443306,1.059078,2.117257,-8.149720,-5.999244,-6.008699,3.781925,4.492107,-0.730070,-1.148245,-9.486735,-0.092568,2.159099,2.040551,-7.540014,-3.605601,-1.636996,4.434894,0.496642,-3.563800,0.053236,-7.850472,8.240879,9.887588,-0.683834,7.105228,8.536027,5.836811,-3.886361,7.992626,3.299303,9.207846,0.429152,-9.404871,3.953700,-8.180005,2.038548,9.562414,-9.741725,-5.611010,-1.657291,7.707280,-2.450354,-6.291053,0.328974,9.336066,-9.514602,8.950514,9.073533,-1.115438,-5.766760,-9.268756,6.157245,-5.354405,-4.079561,-7.787368,-5.776849,-0.538175,-0.713721,-7.109930,-3.825870,3.953957,-1.032199,-5.534676,-2.756864,-0.300685,7.955799,-8.431205,-8.177071,-8.717920,-8.605765,-3.152323,-7.478991,1.992716,9.077371,-6.810484,1.586264,-9.527923,-6.940267,-3.839967,9.818803,5.761090,4.077400,-7.974134,-1.978832,-3.455912,3.611006,-6.162771,4.864967,9.813572,1.321711,-0.671680,2.529946,-0.812518,1.118282,-5.293750,-8.094543,2.890563,2.248242,7.062070,-1.582405,-8.528878,-1.600837,9.436044,-0.154213,3.899853,-3.231001,9.452137,-4.236515,-6.254580,-3.512298,5.153687,-7.278956,-4.951686,-4.243032,-7.561739,2.316106,-5.665170,2.490456,5.021073,-0.475581,3.250979,-9.584539,-0.431688,-5.836451,-6.930934,5.333591,7.689162,-9.772944,-2.606165,-7.609191,8.123869,5.536146,4.286168,7.993890,8.503078,2.522900,-5.556007,6.561314,6.916643,6.845579,-1.447142,1.925135,1.786188,7.423933,-8.559073,-4.314219,4.885995,8.881979,-3.673118,7.559997,9.263355,-7.391527,-2.770122,-5.433259,8.792550,6.066656,8.750442,-7.775043,-5.720373,-9.185047,6.664365,-8.655033,-9.993897,5.398300,-6.447317,-3.195803,-6.029779,9.471170,-7.687360,-7.172931,-1.651310,6.859421,-2.579971,-9.096276,7.245016,8.644462,4.246976,0.981712,7.658341,-9.829625,0.697082,1.652765,3.590029,-5.857418,6.774887,8.612406,-2.488179,3.814160,-2.853388,3.870744,-8.502792,-4.453738,-2.813852,6.497766,3.122162,2.787756,1.027642,-5.570385,-4.321711,-8.442141,1.957134,9.946918,1.684353,-4.999745,-5.777268,1.762404,-1.601180,-1.935512,-3.129249,-6.686306,5.066971,-9.787092,0.235101,2.409038,-3.526786,1.648809,9.793258,0.446780,5.353370,4.695317,-6.732835,-8.256453,-7.147771,9.189383,-4.693113,-8.513137,-1.614199,-2.837114,5.642077,1.827322,-0.622873,4.442170,8.904520,-2.903151,-3.827441,-1.364262,-3.678867,9.807836,3.139953,0.059594,5.531837,1.788610,0.948599,1.828377,8.226056,-9.798356,1.593889,3.255091,-9.824782,9.854481,5.706537,2.632676,-7.735350,7.288078,-7.308255,5.303799,-0.230618,1.477874,3.981598,3.274869,4.784180,-1.417129,0.170773,2.944429,2.839554,8.277227,-7.754602,-0.924420,4.626331,-9.724763,1.165939,8.886117,-8.791176,0.630778,9.022533,-5.071912,-6.483563,6.035416,-8.112267,3.202552,0.524219,7.885674,-2.921680,-1.581269,5.196071,5.565792,2.036131,-3.393311,0.578657,5.601360,-9.788800,8.100522,-4.906829,7.724126,1.038699,-5.916999,6.784538,-0.171078,4.325596,7.736758,5.072858,8.093687,-3.427619,-6.859382,6.920789,-6.955569,9.286982,-9.430022,5.322938,-2.835130,5.801786,6.389673,-4.512754,-5.100931,1.975101,-4.665596,-1.021134,1.164696,-8.489142,-4.620433,0.469198,9.102557,-2.439003,-1.374466,0.277817,-1.451470,4.338246,6.740981,9.466043,2.472171,-1.415298,8.476406,-7.161207,6.676896,-4.942217,-8.757722,-8.108754,-3.354024,-9.168773,-5.193313,5.174823,-4.060635,2.417357,0.115792,3.604481,9.058386,-3.855185,-8.420912,1.111221,6.652201,3.537831,7.916015,-2.160071,-4.243163,-0.253028,-0.222251,7.703322,-7.067784,6.810214,4.580747,-6.264413,-1.773401,9.372484,0.519448,-4.144418,-0.555371,1.691306,5.211334,4.226188,-7.277754,8.553705,7.671214,2.446008,4.613985,8.040353,5.356378,2.527272,3.265107,-3.368235,3.671764,2.403466,-5.375447,7.650545,-1.776201,7.895550,-5.665893,-9.309360,3.232412,2.839949,-1.360737,4.105952,-9.188080,5.872314,7.961272,6.503393,-5.696525,-2.476734,1.933627,-2.159418,-8.044244,-3.374612,-5.360342,-2.067218,-1.277587,-8.414092,1.747263,-0.450188,-6.886178,0.755009,9.926960,-4.274588,5.573611,-8.737055,-6.245571,1.812451,-9.603909,8.202125,-7.320521,-2.505868,5.479777,7.175838,-7.745868,3.350422,5.151268,-2.388473,4.184466,-2.195594,4.527882,3.459271,3.612832,-1.157322,-0.348424,6.527345,7.093494,0.767323,-8.062571,5.163731,-0.973335,-0.154478,9.189909,-1.567712,9.697307,-9.857094,8.029669,2.561008,-7.717080,-8.437207,6.772622,9.571618,2.051870,-9.158459,6.194626,-9.472663,-2.774048,8.819059,2.629305,-3.102568,-2.332531,9.685751,-6.053135,-4.019918,-8.141677,6.934000,-3.164000,-9.836289,1.190944,-3.924435,7.377653,-8.178004,7.305128,4.064845,7.052899,4.645176,-6.901781,1.321833,0.979336,0.480266,-4.759616,-3.605145,4.345291,-9.822443,5.400725,4.181707,1.110747,-1.594859,7.110563,5.951526,4.879452,-4.920740,5.780279,-0.723956,-5.923170,-0.262625,-2.175532,9.247243,9.817284,-7.946802,-9.801208,3.195419,8.565148,-7.735479,-6.154335,9.274319,3.497721,0.910648,5.114498,7.341553,-6.810128,-2.619487,-6.723223,-1.071532,8.160312,-1.211899,5.274793,4.295115,3.927526,1.376163,5.733540,6.514571,2.747794,8.695829,-4.323367,-5.198537,-8.687372,1.928036,-1.809633,-2.455103,-1.488478,-0.250094,6.293882,-7.969852,3.259944,-3.529180,-6.193363,7.648598,-8.512738,-7.582878,-3.648507,0.889991,4.649582,3.760460,8.454350,6.200123,9.450342,9.725535,9.229891,1.721904,2.945115,1.425295,-4.359187,4.327920,4.968592,5.268622,-8.452425,-2.083232,-5.733158,-3.754274,-1.426874,1.334304,2.605787,-0.628786,7.180421,2.276238,9.333976,-2.007818,-6.147553,-3.110750,-8.976818,7.614979,7.764139,-7.841790,3.709573,6.831417,6.568076,1.044834,5.269750,2.592147,-9.253415,0.859533,-5.748087,6.474402,-7.977630,-8.329588,4.755008,9.711496,-5.595642,-0.086534,-4.321253,1.844767,0.317573,-8.042348,-8.224889,3.866054,4.281929,-4.256714,-8.758919,-3.679685,6.012220,2.373246,-4.033697,7.227081,1.584004,-5.672150,6.939936,6.824991,2.509317,8.399703,1.013599,-6.077944,-2.249381,-5.854268,-9.151639,1.959412,-7.627195,-5.854726,8.942575,3.811522,-9.435659,3.508037,2.034615,-7.805328,-8.732799,-4.563014,-5.119142,-6.902017,6.509694,5.374858,8.925786,0.429597,-3.914747,-8.946232,-4.357819,-7.041184,-0.040465,-6.502160,-2.031424,-7.518820,6.255003,-4.887178,7.886466,-9.177388,-5.109141,-7.580208,-1.582211,3.252678,6.144426,-6.782868,2.736195,-8.323127,-9.611484,7.998206,0.448926,-4.877389,-2.333487,-1.053142,2.453461,-1.801364,9.914563,-7.352499,-3.083646,-4.292181,7.854570,9.918345,3.412122,-2.969202,2.369459,-3.285120,9.080283,5.247421,8.477891,9.062151,-5.247824,-1.796214,-8.933508,2.952247,-0.378173,5.094644,-4.211595,-5.952213,-0.458575,-4.769656,-0.555713,8.899389,4.838992,0.423483,-9.912666,2.333440,-8.116115,-3.818891,-1.021681,-5.979111,3.520878,0.336398,-4.347481,6.001609,-3.703967,-5.251744,-5.389502,6.087179,-9.144988,9.215168,0.092850,8.518447,-5.504724,5.402292,7.657083,-5.849660,8.239681,2.511409,3.729196,-7.651671,-6.654187,8.365418,-6.503779,-6.408345,2.510339,-5.306377,-0.379225,0.383096,2.030683,-7.176263,-9.373663,-3.770396,-1.224314,4.494376,-3.255350,6.181655,9.738385,-8.416359,9.539446,-6.185683,-4.363634,-3.550505,4.128937,0.462925,-8.601990,4.857872,-7.930144,-1.946814,3.523161,0.681648,9.717261,-4.504187,0.695247,6.173801,8.008628,7.859846,-0.844153,3.071597,2.682734,-4.676394,-5.721766,-6.896460,2.135473,7.151150,5.300536,9.237575,6.607222,8.213647,-7.728358,-7.138823,-1.342156,6.100117,0.356205,-0.262908,7.844346,-4.180265,7.789208,3.854331,9.639564,6.105453,8.759620,1.826233,3.631696,9.283664,7.235646,0.384106,6.376974,-5.094081,3.483298,-4.984955,-6.209819,-7.293760,5.056968,-1.758320,-1.519422,4.019033,-3.276778,5.314847,0.178702,6.641837,-6.483541,5.909499,9.170014,-5.466720,-4.768069,-1.376161,4.849810,-5.954560,-4.207744,7.681981,8.075277,-6.488708,1.808058,9.329319,-7.501970,-7.291114,5.103796,-6.610282,2.214277,-8.467142,6.699492,-2.856540,3.957105,-4.881772,-9.023094,6.179655,-2.582707,1.439351,5.920072,2.519581,-0.681690,-2.483615,5.050449,-5.999595,1.062305,-2.289923,4.616231,8.688505,-4.168830,-8.830701,0.977369,-9.178485,7.739910,8.794260,-2.069030,-3.905312,-0.764322,-7.816462,-8.837247,0.166165,8.018198,-8.969795,-5.873383,-2.361517,1.606292,0.606633,-0.550208,1.429556,-4.699549,-5.251489,6.979116,5.498685,5.658461,8.123442,-3.890461,0.926739,-9.123046,7.219225,2.565936,3.647773,-9.350101,5.713683,-8.425175,8.909160,7.438421,5.200970,-2.533595,6.617657,9.298351,8.973621,9.708599,3.996176,7.349839,-3.251925,-5.044104,8.353704,9.557450,1.487830,3.648715,-1.269367,-4.016802,6.282608,-7.743742,-5.543177,9.673299,7.066010,-0.562736,4.206713,7.951193,-5.773261,2.422938,0.393737,-3.855493,1.275352,5.413952,4.526580,6.279121,-4.570018,9.759990,3.312457,7.072389,4.663136,-7.759132,8.965856,-8.942820,7.756093,0.048805,-6.372260,-6.785526,-5.504448,2.666430,6.957630,-2.371091,-4.248496,5.306745,7.832624,2.799444,-3.503037,0.736253,4.116154,-1.235695,4.152648,3.382570,1.647506,3.140361,5.217205,0.368810,-3.997544,1.448884,3.448834,-5.850987,8.486647,2.854397,9.597360,7.307400,5.794447,-3.523771,0.935649,-0.072987,5.400060,-3.544956,9.721579,8.129312,-6.849183,-7.202786,4.318069,-9.516286,-3.883179,1.449951,-4.627873,0.867741,-8.094898,-9.108594,4.905634,-9.024942,7.948109,-2.532111,1.894609,-0.068600,-2.554790,2.754133,8.934736,-7.003746,-3.895684,-5.854841,-9.500699,-8.942380,8.982931,-7.944984,4.589725,8.040693,-9.733270,7.295354,7.826315,8.485989,3.692666,-3.227680,-6.902698,-5.271916,-6.988136,4.031521,-2.167957,1.589287,-6.899720,6.678857,-4.937623,-5.798697,-2.689231,-2.312200,2.462370,9.001658,7.451969,-9.163170,-1.611139,-6.170289,3.305817,1.092074,8.100310,9.764368,-2.298319,7.606663,7.131816,1.543116,-5.989992,8.097018,0.488345,-2.949883,-8.638816,-2.328341,1.871081,6.802111,-4.155176,3.498432,7.253692,-4.869400,8.765109,1.112847,1.371204,-7.232255,-3.837685,-6.283022,-3.065866,-4.656348,3.839536,2.160465,8.132494,1.745791,3.360413,4.041735,4.468235,-5.908852,-8.095980,7.448461,5.216013,6.503527,8.663259,8.673814,-0.623098,4.254955,6.249600,-6.241447,3.626557,-1.032150,-1.251784,-9.140459,6.745009,-4.500219,-9.473193,-5.322065,6.655448,1.779598,0.951749,-4.900727,7.841352,9.187324,-5.810828,8.297471,2.426984,-8.348433,-7.106172,7.783928,-7.896971,3.726789,1.956831,-1.799074,3.676238,1.923517,-2.677177,-2.627560,5.278954,-6.291877,5.525223,-7.250146,-1.080822,2.518392,9.119158,-0.069601,-9.151844,-2.217234,5.516104,2.149543,-5.295063,1.433365,-5.865704,-1.562593,9.835430,-1.569407,4.672757,1.829886,0.403860,-0.101045,4.009980,-7.034943,-5.593768,1.167207,5.058816,-1.490298,-7.354324,7.853629,6.908794,-7.978878,-3.563559,7.547133,3.820472,3.368004,2.054137,4.514343,2.859683,5.038800,-8.756561,9.042624,9.343651,-6.434228,-5.855677,-9.058126,8.187231,-9.337941,5.635053,2.271249,3.158424,-2.273251,-4.103955,3.555785,3.881765,3.860407,-3.702988,-8.937393,-6.214164,3.508591,-2.780082,-6.043834,-3.790914,0.087596,3.515972,2.130016,-3.686398,6.026501,0.120480,-9.853477,1.952334,1.220632,-1.047382,9.600052,-1.991900,4.166334,8.930234,-2.498452,9.788896,2.718652,2.132203,8.088726,-9.412234,-7.269787,2.687583,5.288074,2.452895,-7.136328,-6.327553,-5.289078,-5.476370,6.020655,-1.184208,-9.163452,9.684188,-7.437882,-1.708052,-1.275691,-6.352713,-0.561144,3.607034,1.067913,-7.787467,7.937393,6.884563,3.806402,3.693885,4.916113,0.357073,9.122680,-6.366915,4.846932,4.460980,8.042568,-0.547112,-2.370071,9.595882,-7.002479,4.883900,-1.057578,-3.482353,6.942016,-9.029154,5.842355,-3.565642,7.308799,-7.241661,9.992138,-2.177455,0.307317,-3.683580,3.271846,0.236651,-7.065300,8.200780,-3.183720,-9.021861,0.994791,-4.829808,-7.310006,-9.715335,2.969617,-1.272422,-3.996981,-4.590249,-8.809165,6.439147,-8.344485,7.795195,-1.275701,-0.686601,-7.729349,-1.947618,7.305745,-4.468962,7.071261,4.018423,3.021799,0.574595,6.332573,-8.403484,-5.068542,0.529180,-3.217379,7.713156,9.621025,1.127415,8.384043,2.763769,5.491521,-6.193786,-6.843919,1.782716,-3.688330,-4.100377,-4.289180,7.291543,-7.091506,-1.253255,9.687835,2.497549,1.143588,0.915649,-5.393416,6.611266,-1.690092,-7.178560,-3.764844,1.594018,-7.781207,-0.528095,-4.102174,-3.372302,-9.071545,0.359632,-3.969637,-8.541790,-1.904050,-3.948662,-3.494132,-0.769943,-9.980506,-6.390253,-9.504188,0.858811,8.373272,-7.072150,3.887933,-5.303789,9.538843,2.956286,1.110432,9.158812,8.662116,-2.223129,1.263237,5.752095,-0.285866,-2.487782], dtype = "float32")#candidate|5375|(2160,)|const|float32
call_5373 = relay.TupleGetItem(func_5179_call(relay.reshape(const_5374.astype('float32'), [33, 3]), relay.reshape(const_5375.astype('float32'), [180, 12]), ), 0)
call_5376 = relay.TupleGetItem(func_5182_call(relay.reshape(const_5374.astype('float32'), [33, 3]), relay.reshape(const_5375.astype('float32'), [180, 12]), ), 0)
func_3800_call = mod.get_global_var('func_3800')
func_3801_call = mutated_mod.get_global_var('func_3801')
call_5379 = relay.TupleGetItem(func_3800_call(), 0)
call_5380 = relay.TupleGetItem(func_3801_call(), 0)
var_5386 = relay.var("var_5386", dtype = "float64", shape = (7, 14, 12))#candidate|5386|(7, 14, 12)|var|float64
bop_5387 = relay.multiply(uop_5324.astype('int64'), relay.reshape(var_5386.astype('int64'), relay.shape_of(uop_5324))) # shape=(7, 14, 12)
output = relay.Tuple([uop_5338,call_5346,call_5349,bop_5351,call_5359,call_5373,const_5374,const_5375,call_5379,bop_5387,])
output2 = relay.Tuple([uop_5338,call_5347,call_5350,bop_5351,call_5360,call_5376,const_5374,const_5375,call_5380,bop_5387,])
func_5405 = relay.Function([var_5323,var_5386,], output)
mod['func_5405'] = func_5405
mod = relay.transform.InferType()(mod)
mutated_mod['func_5405'] = func_5405
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5405_call = mutated_mod.get_global_var('func_5405')
var_5407 = relay.var("var_5407", dtype = "float64", shape = (7, 14, 12))#candidate|5407|(7, 14, 12)|var|float64
var_5408 = relay.var("var_5408", dtype = "float64", shape = (7, 14, 12))#candidate|5408|(7, 14, 12)|var|float64
call_5406 = func_5405_call(var_5407,var_5408,)
output = call_5406
func_5409 = relay.Function([var_5407,var_5408,], output)
mutated_mod['func_5409'] = func_5409
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_5445 = func_4835_call()
call_5446 = func_4835_call()
func_1775_call = mod.get_global_var('func_1775')
func_1778_call = mutated_mod.get_global_var('func_1778')
var_5459 = relay.var("var_5459", dtype = "float32", shape = (300,))#candidate|5459|(300,)|var|float32
call_5458 = relay.TupleGetItem(func_1775_call(relay.reshape(var_5459.astype('float32'), [5, 15, 4])), 0)
call_5460 = relay.TupleGetItem(func_1778_call(relay.reshape(var_5459.astype('float32'), [5, 15, 4])), 0)
output = relay.Tuple([call_5445,call_5458,var_5459,])
output2 = relay.Tuple([call_5446,call_5460,var_5459,])
func_5473 = relay.Function([var_5459,], output)
mod['func_5473'] = func_5473
mod = relay.transform.InferType()(mod)
mutated_mod['func_5473'] = func_5473
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5474 = relay.var("var_5474", dtype = "float32", shape = (300,))#candidate|5474|(300,)|var|float32
func_5473_call = mutated_mod.get_global_var('func_5473')
call_5475 = func_5473_call(var_5474)
output = call_5475
func_5476 = relay.Function([var_5474], output)
mutated_mod['func_5476'] = func_5476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4257_call = mod.get_global_var('func_4257')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_5544 = relay.TupleGetItem(func_4257_call(), 2)
call_5545 = relay.TupleGetItem(func_4259_call(), 2)
output = relay.Tuple([call_5544,])
output2 = relay.Tuple([call_5545,])
func_5553 = relay.Function([], output)
mod['func_5553'] = func_5553
mod = relay.transform.InferType()(mod)
output = func_5553()
func_5554 = relay.Function([], output)
mutated_mod['func_5554'] = func_5554
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5020_call = mod.get_global_var('func_5020')
func_5021_call = mutated_mod.get_global_var('func_5021')
call_5572 = relay.TupleGetItem(func_5020_call(), 0)
call_5573 = relay.TupleGetItem(func_5021_call(), 0)
uop_5574 = relay.acosh(call_5572.astype('float64')) # shape=(8, 5, 12)
uop_5576 = relay.acosh(call_5573.astype('float64')) # shape=(8, 5, 12)
output = uop_5574
output2 = uop_5576
func_5622 = relay.Function([], output)
mod['func_5622'] = func_5622
mod = relay.transform.InferType()(mod)
output = func_5622()
func_5623 = relay.Function([], output)
mutated_mod['func_5623'] = func_5623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4536_call = mod.get_global_var('func_4536')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_5649 = func_4536_call()
call_5650 = func_4536_call()
func_4733_call = mod.get_global_var('func_4733')
func_4734_call = mutated_mod.get_global_var('func_4734')
call_5658 = relay.TupleGetItem(func_4733_call(), 0)
call_5659 = relay.TupleGetItem(func_4734_call(), 0)
output = relay.Tuple([call_5649,call_5658,])
output2 = relay.Tuple([call_5650,call_5659,])
func_5668 = relay.Function([], output)
mod['func_5668'] = func_5668
mod = relay.transform.InferType()(mod)
mutated_mod['func_5668'] = func_5668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5668_call = mutated_mod.get_global_var('func_5668')
call_5669 = func_5668_call()
output = call_5669
func_5670 = relay.Function([], output)
mutated_mod['func_5670'] = func_5670
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5622_call = mod.get_global_var('func_5622')
func_5623_call = mutated_mod.get_global_var('func_5623')
call_5674 = func_5622_call()
call_5675 = func_5622_call()
func_1775_call = mod.get_global_var('func_1775')
func_1778_call = mutated_mod.get_global_var('func_1778')
const_5688 = relay.const([2.146991,1.499917,-1.734517,-3.947415,8.897590,9.489871,9.427869,-2.599510,6.425114,-0.620769,2.414765,-3.126652,2.438085,-7.967305,-2.700430,-8.144732,5.282208,-0.484374,-9.153362,2.303936,-2.081883,-7.876593,4.879479,-8.206482,5.221454,5.838756,4.965052,8.240125,1.167696,-6.621680,5.920613,8.473377,-4.042902,1.029280,-1.321537,-0.778003,4.971245,4.531064,-8.282537,2.028531,-5.569439,-0.347162,8.374930,2.150776,9.184524,-1.193192,-3.056001,3.511642,-8.055536,3.653062,9.126901,7.267089,-4.078186,9.598185,8.920003,-3.545820,8.821113,5.911985,-4.243677,-4.891674,-4.043226,1.295675,-3.311968,2.765796,5.599977,-6.096484,7.782043,0.871207,-1.779168,-6.669743,7.761463,1.964212,5.316490,6.815269,2.589562,2.824536,1.765890,-8.660177,1.233106,-4.328450,-7.388428,4.416969,-8.041909,-3.417844,7.739981,-6.191630,1.336891,-7.303256,5.845435,5.315234,0.404821,-7.556508,0.004155,-9.712810,5.907856,9.876708,8.626316,0.974725,6.837169,-1.457019,-4.409536,6.801588,9.285822,-6.708907,-6.989323,9.709047,-6.225762,-6.480271,0.215916,-4.245942,9.753495,-0.258570,-4.124560,-8.730218,6.705558,-6.766580,-6.390582,-6.880755,2.030104,-4.745847,-8.533348,2.518033,5.694090,-7.943860,1.438806,8.132272,-8.930785,5.264891,4.258034,-5.961719,8.200989,-6.639494,-3.431454,2.460600,8.455524,2.860567,7.262244,-6.010241,-0.264343,2.310543,9.740006,-9.606286,3.530223,-2.266248,-9.776903,3.215390,-1.627174,3.920412,-7.466349,-9.586396,-9.770309,3.825350,0.021438,-5.933076,-2.241671,6.648599,4.823069,4.511846,2.182213,9.481062,-6.744927,4.812488,1.432815,-4.589278,6.477579,8.726938,-7.931897,-7.276230,0.893346,-3.081712,-3.891350,6.350993,7.337802,-6.556199,3.346999,-8.294047,4.798860,-1.508242,-1.274405,-5.160511,6.674123,4.627386,7.550570,3.703265,1.036173,-4.032200,5.834589,6.849175,8.216610,-6.044901,6.774474,-5.603515,-0.229916,6.717404,5.941782,5.550722,-1.314917,1.333074,-9.896708,-6.258989,-5.078960,4.856561,-7.066446,-0.443563,4.531661,-0.575893,-5.953730,9.602764,0.666325,4.755776,-2.564907,-9.029903,-7.561583,-1.454421,-7.723630,-3.185225,-6.974295,2.425691,-7.067733,-9.464415,-5.039989,-9.566980,6.232013,6.810195,5.716942,-5.097111,5.855775,-4.703057,-9.007072,-3.572069,2.412223,7.133249,4.240313,-2.981510,-9.714618,5.277898,-7.387454,8.861890,2.914175,-4.392839,-6.359256,-5.372993,1.236437,2.678430,-1.382784,1.939384,-3.998142,0.019465,4.509480,6.458831,-5.594717,-0.207671,-9.161335,-8.902908,-2.828434,-8.444822,9.122948,1.111074,2.846364,-5.324722,-2.597062,2.530666,-5.179311,-4.374296,4.066031,-9.394159,-6.965578,-9.154003,-6.914451,-7.108089,1.645847,5.766724,-7.485468,-7.218858,1.551613,1.397168,-4.952090,-9.597592,2.588548,-3.993329,-9.874200,-5.138051,9.594276,-6.122075,1.592511,-5.105816,8.885070,-6.065225,-4.372720,-8.702927,7.827822,-3.683737,-4.174912,4.702992,0.187764,-4.582986,-4.783873,3.286161,9.180269,3.250773], dtype = "float32")#candidate|5688|(300,)|const|float32
call_5687 = relay.TupleGetItem(func_1775_call(relay.reshape(const_5688.astype('float32'), [5, 15, 4])), 0)
call_5689 = relay.TupleGetItem(func_1778_call(relay.reshape(const_5688.astype('float32'), [5, 15, 4])), 0)
output = relay.Tuple([call_5674,call_5687,const_5688,])
output2 = relay.Tuple([call_5675,call_5689,const_5688,])
func_5690 = relay.Function([], output)
mod['func_5690'] = func_5690
mod = relay.transform.InferType()(mod)
output = func_5690()
func_5691 = relay.Function([], output)
mutated_mod['func_5691'] = func_5691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5692 = relay.TupleGetItem(func_3819_call(), 0)
call_5693 = relay.TupleGetItem(func_3821_call(), 0)
func_3329_call = mod.get_global_var('func_3329')
func_3331_call = mutated_mod.get_global_var('func_3331')
var_5695 = relay.var("var_5695", dtype = "float64", shape = (35, 9))#candidate|5695|(35, 9)|var|float64
call_5694 = func_3329_call(relay.reshape(var_5695.astype('float64'), [7, 5, 9]))
call_5696 = func_3329_call(relay.reshape(var_5695.astype('float64'), [7, 5, 9]))
bop_5697 = relay.mod(var_5695.astype('float64'), relay.reshape(call_5694.astype('float64'), relay.shape_of(var_5695))) # shape=(35, 9)
bop_5700 = relay.mod(var_5695.astype('float64'), relay.reshape(call_5696.astype('float64'), relay.shape_of(var_5695))) # shape=(35, 9)
func_5473_call = mod.get_global_var('func_5473')
func_5476_call = mutated_mod.get_global_var('func_5476')
const_5733 = relay.const([[1.770714,-8.452382,3.941697,6.346121,2.995031,-4.781880],[-5.182631,5.460737,9.735240,-3.230239,-2.867374,-4.543902],[-6.693442,3.719381,2.461078,-5.695553,6.184694,-5.218199],[-2.384231,6.603937,-9.067939,-8.857056,8.836579,1.238318],[1.260716,6.699598,-7.458187,-2.667080,6.771898,4.257816],[8.974974,3.497509,-5.898867,5.468534,8.412337,-5.471424],[-8.507956,-8.963849,0.505647,-9.915812,5.417514,-5.566355],[6.816082,5.640592,7.127205,-8.605556,-3.759534,4.732023],[8.171363,-6.294227,-6.104297,-8.557113,1.530654,-9.965374],[-7.881701,-5.356593,5.159806,2.940731,6.261457,7.605342],[4.596956,0.452014,-1.195092,-4.214200,-7.381357,-3.851142],[-4.082809,4.240219,-4.826833,-3.022665,5.057739,-5.462236],[6.131850,5.546524,-2.769125,4.824780,-5.749396,-8.169129],[-3.324058,-8.122081,7.583001,6.597529,-9.763174,3.535687],[-5.664606,9.121007,-6.912579,-7.585046,-0.798109,-2.917907],[1.006212,-9.173653,7.941982,-9.243550,-5.612043,-3.116132],[0.569972,9.107431,-3.125966,-5.549420,-1.297314,-3.310914],[-2.443840,-2.114940,1.980113,5.897332,0.958332,-3.622661],[-9.498940,-8.602847,-1.194128,-4.719436,-8.141825,2.765285],[1.186857,5.224716,9.705236,-9.981059,5.323129,-0.280307],[-2.580050,0.072580,-9.438917,-9.724327,-2.006041,9.982343],[8.115142,-6.868695,3.677521,-8.230381,-2.595488,-1.292741],[-1.014241,9.817046,1.900959,-4.826736,6.470235,0.002419],[5.337518,2.783615,-8.143414,-3.897239,-5.833081,7.844689],[-8.599716,-6.109417,-5.199345,5.160312,-9.713913,-6.582700],[-6.644083,9.882821,-3.296539,0.313113,-5.801371,6.392167],[9.468054,-9.494055,-0.485773,0.507000,8.031997,4.976375],[-6.875588,-8.492897,0.941794,2.836913,1.923582,-0.861494],[8.038429,-4.685830,-2.234434,3.302939,7.465081,2.472209],[5.828928,3.624804,4.575185,-2.922885,1.438200,-3.050231],[6.321943,-1.069340,-0.667690,-6.026890,7.112710,0.761485],[-3.810162,7.717537,-0.022395,-1.315507,-1.450924,-3.527979],[-6.130665,7.423282,-5.009929,6.007751,8.065477,-6.892002],[-1.683980,-9.199589,9.621083,3.542662,-3.960255,-5.574698],[5.017586,-3.604302,-3.450405,3.318440,-6.929319,-8.090602],[-4.018409,-2.691625,6.387155,4.247471,-0.408785,8.564556],[3.785705,3.383321,-1.691086,-9.222509,-0.524443,3.111632],[-7.088255,-3.751027,2.982282,9.390857,-5.292228,-3.220319],[-0.272861,5.884756,5.616060,4.938414,1.458870,-9.833114],[-5.282425,1.577120,4.069290,2.604630,-2.142878,-2.943057],[-6.602076,2.636322,-1.496238,-3.586263,-0.077768,4.439895],[8.848927,-4.550671,0.327264,-0.884310,-6.413049,4.323792],[-8.881683,7.608127,-3.479727,-3.544405,6.246523,7.564328],[6.500338,-2.585620,1.904626,0.469891,-1.842752,2.566797],[-4.177512,8.493599,5.957334,7.851650,7.415592,-8.676990],[-3.966654,-9.145135,7.157648,0.260493,-1.404706,-9.001483],[8.907812,-1.618674,1.517245,-9.037158,7.620076,-1.437024],[-1.005768,-8.557893,-1.399750,3.134376,6.871406,-8.559337],[4.612612,-7.843535,-6.851149,0.138293,-2.585488,7.262576],[6.487544,-4.174502,-1.472368,2.927061,-7.260977,-7.247137]], dtype = "float32")#candidate|5733|(50, 6)|const|float32
call_5732 = relay.TupleGetItem(func_5473_call(relay.reshape(const_5733.astype('float32'), [300,])), 1)
call_5734 = relay.TupleGetItem(func_5476_call(relay.reshape(const_5733.astype('float32'), [300,])), 1)
func_4502_call = mod.get_global_var('func_4502')
func_4503_call = mutated_mod.get_global_var('func_4503')
call_5735 = func_4502_call()
call_5736 = func_4502_call()
var_5738 = relay.var("var_5738", dtype = "float64", shape = (35, 9))#candidate|5738|(35, 9)|var|float64
bop_5739 = relay.logical_and(var_5695.astype('bool'), relay.reshape(var_5738.astype('bool'), relay.shape_of(var_5695))) # shape=(35, 9)
bop_5746 = relay.power(bop_5697.astype('float64'), relay.reshape(call_5694.astype('float64'), relay.shape_of(bop_5697))) # shape=(35, 9)
bop_5749 = relay.power(bop_5700.astype('float64'), relay.reshape(call_5696.astype('float64'), relay.shape_of(bop_5700))) # shape=(35, 9)
func_5622_call = mod.get_global_var('func_5622')
func_5623_call = mutated_mod.get_global_var('func_5623')
call_5751 = func_5622_call()
call_5752 = func_5622_call()
output = relay.Tuple([call_5692,call_5732,const_5733,call_5735,bop_5739,bop_5746,call_5751,])
output2 = relay.Tuple([call_5693,call_5734,const_5733,call_5736,bop_5739,bop_5749,call_5752,])
func_5757 = relay.Function([var_5695,var_5738,], output)
mod['func_5757'] = func_5757
mod = relay.transform.InferType()(mod)
var_5758 = relay.var("var_5758", dtype = "float64", shape = (35, 9))#candidate|5758|(35, 9)|var|float64
var_5759 = relay.var("var_5759", dtype = "float64", shape = (35, 9))#candidate|5759|(35, 9)|var|float64
output = func_5757(var_5758,var_5759,)
func_5760 = relay.Function([var_5758,var_5759,], output)
mutated_mod['func_5760'] = func_5760
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_5792 = func_3652_call()
call_5793 = func_3652_call()
const_5808 = relay.const([[[False,True,False,True,False,False,False,False,True,True,False,False],[False,False,False,False,True,True,True,True,False,True,False,False],[False,True,True,True,True,False,False,False,False,False,True,False],[False,True,True,True,False,True,True,False,True,True,False,False],[False,False,True,False,True,True,True,True,True,False,True,False]],[[True,True,False,True,True,False,True,True,True,False,False,False],[True,True,False,True,True,True,True,True,True,True,False,False],[False,True,False,True,True,True,False,False,False,False,True,True],[False,True,False,False,True,False,False,True,True,False,False,False],[True,True,False,False,False,False,True,True,True,True,False,False]],[[False,False,True,False,True,False,True,True,True,True,True,True],[True,True,False,False,False,False,True,True,True,True,False,False],[True,True,True,False,False,True,False,False,False,True,False,True],[False,True,False,True,False,False,False,True,True,False,True,True],[False,False,True,False,True,True,False,False,False,True,False,False]],[[False,True,False,False,False,False,True,False,True,False,False,True],[False,False,False,True,True,True,True,True,False,False,True,True],[True,True,False,True,False,False,True,True,True,True,True,False],[True,True,False,False,True,False,True,True,True,True,False,False],[False,True,True,False,True,True,False,False,False,False,True,True]],[[False,False,False,False,True,True,False,False,False,False,False,True],[True,True,False,False,False,True,False,True,False,True,True,False],[False,True,False,True,True,False,False,False,False,False,False,False],[True,False,False,False,False,True,True,True,False,False,True,True],[True,True,False,True,True,True,True,True,True,False,False,False]],[[False,False,False,False,False,False,False,False,False,True,False,True],[False,True,False,False,True,False,True,False,True,True,False,False],[True,True,False,False,True,False,False,True,True,True,False,True],[True,False,True,False,True,True,True,True,True,True,False,False],[True,True,True,True,True,True,True,False,False,True,False,False]],[[False,False,True,True,True,True,False,True,False,False,True,True],[True,False,True,False,True,True,True,True,False,False,False,True],[True,True,True,True,True,True,True,True,False,True,False,True],[False,False,False,False,False,True,False,False,True,True,False,True],[False,True,False,False,True,False,False,False,True,True,False,False]],[[True,True,True,True,False,True,False,True,False,True,True,False],[False,True,False,False,False,True,True,False,False,True,True,False],[True,True,False,False,False,False,True,True,False,False,False,False],[False,True,True,False,False,True,False,False,False,True,False,True],[False,True,True,False,False,False,False,True,True,True,False,False]]], dtype = "bool")#candidate|5808|(8, 5, 12)|const|bool
bop_5809 = relay.bitwise_xor(call_5792.astype('uint64'), relay.reshape(const_5808.astype('uint64'), relay.shape_of(call_5792))) # shape=(8, 5, 12)
bop_5812 = relay.bitwise_xor(call_5793.astype('uint64'), relay.reshape(const_5808.astype('uint64'), relay.shape_of(call_5793))) # shape=(8, 5, 12)
output = relay.Tuple([bop_5809,])
output2 = relay.Tuple([bop_5812,])
func_5815 = relay.Function([], output)
mod['func_5815'] = func_5815
mod = relay.transform.InferType()(mod)
output = func_5815()
func_5816 = relay.Function([], output)
mutated_mod['func_5816'] = func_5816
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3800_call = mod.get_global_var('func_3800')
func_3801_call = mutated_mod.get_global_var('func_3801')
call_5823 = relay.TupleGetItem(func_3800_call(), 0)
call_5824 = relay.TupleGetItem(func_3801_call(), 0)
output = call_5823
output2 = call_5824
func_5838 = relay.Function([], output)
mod['func_5838'] = func_5838
mod = relay.transform.InferType()(mod)
output = func_5838()
func_5839 = relay.Function([], output)
mutated_mod['func_5839'] = func_5839
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5840 = relay.const([[[-6.461263,-0.576562,-6.249774,5.965388,-3.573276,8.732860,-5.436557,4.018516,8.945859,-2.418700],[3.319474,7.782989,1.041159,0.369840,7.794197,-4.955346,2.873403,-5.982910,4.748267,-2.186813],[1.268700,0.389031,-8.928374,-5.416197,5.783640,-3.895036,2.458925,-2.491090,-7.805538,1.432532],[-2.018079,1.522445,-9.072211,0.922747,4.999508,6.812482,2.180309,1.079958,4.263973,2.195865],[-2.303554,-9.021210,3.899016,-9.035539,-1.326811,5.255866,-1.491765,-8.212174,-4.191988,-6.945391],[7.775062,9.146668,-5.770554,2.995987,-9.306659,-7.639459,-0.930840,6.220576,7.890634,9.962843],[4.127034,-5.576677,4.041905,-6.130227,-4.054802,3.786482,-8.332069,-2.528000,0.821871,6.610786]],[[-6.789801,-3.706155,-7.072633,-6.533588,-6.739997,5.370309,-0.602563,2.081768,8.605540,6.082684],[-4.795495,2.395460,4.945003,0.200437,2.361038,1.445557,-2.887258,-4.575863,8.717086,-1.853427],[-3.950437,1.829325,5.081295,-7.134866,-4.265853,-6.736336,2.125844,0.440695,0.811921,6.116995],[5.956898,-6.840757,6.290108,-4.628969,7.562862,-0.749426,0.639362,-5.587570,-9.242013,4.440740],[-7.972365,0.169677,3.810895,0.475431,6.948647,-4.909772,1.528433,-0.173907,1.666520,9.378468],[9.359926,6.820586,3.334367,0.379726,-3.586690,-4.446061,-1.103178,-9.822154,-4.816838,-9.767480],[0.282086,0.231248,3.685622,5.887408,-7.573725,4.635829,-2.464226,-0.260902,-7.224719,1.041719]],[[-8.085441,0.774739,6.985106,3.708599,4.835495,2.206883,-5.509433,3.116880,-9.572734,-7.127430],[5.170136,-1.458926,-7.531983,3.911681,-1.836274,-9.351971,-0.920962,3.667953,4.491080,-1.284988],[-5.230919,1.223917,-9.003780,-9.815584,4.381512,3.438690,-8.083857,-9.114289,5.693984,8.108715],[-5.252714,-1.056121,1.545984,-8.613902,-8.801158,-1.791787,-2.980934,4.780560,-7.977164,8.298143],[3.930586,0.047172,-1.016286,-6.930867,1.464232,1.529286,2.187867,3.345965,7.006616,-9.370788],[-1.643891,-8.596163,-6.511160,8.205818,7.446582,3.337330,3.846523,-1.321451,-3.963077,7.708050],[-4.764784,-9.750318,3.297258,0.774142,7.189102,-0.857854,-9.317906,5.969001,9.174668,1.675762]],[[1.701029,6.830702,2.242913,2.269952,-1.441246,-7.154867,4.508965,5.142143,-9.961474,-9.161578],[-4.464426,9.517339,9.269601,0.203817,1.245682,-2.979461,9.752887,2.349305,8.944608,7.301480],[-0.780719,8.007659,-2.334531,-9.980381,6.961968,-6.160521,3.352858,-5.757152,-2.560887,8.107578],[-2.184866,7.526725,7.640262,1.703289,8.721588,9.414265,-8.225089,9.581542,1.882467,9.369256],[-9.648510,-9.660037,5.911307,4.823528,-6.719184,4.427891,-1.328464,1.577252,0.198026,-6.433642],[0.908936,-1.234406,-2.431752,-9.842064,1.721601,-2.394784,1.350672,-6.032215,2.765143,8.677539],[-0.371560,8.466110,3.667117,4.017119,4.927447,5.229640,5.297452,-8.745462,7.370950,7.497507]],[[-0.640612,9.854734,-7.348787,-1.772157,3.804605,6.819017,-2.108274,-6.576703,0.010402,-1.029352],[2.883122,9.504013,-0.040511,5.336010,-4.802996,-4.781475,-3.504879,7.174802,7.755558,1.257824],[2.431947,3.400697,9.628689,3.503099,1.504735,1.475944,5.967493,1.197314,-7.446098,4.519845],[0.628233,5.407089,6.306505,-6.818069,-6.455446,9.010232,-3.768704,9.423207,-8.670979,5.488732],[-0.194672,3.531740,0.057634,2.498334,6.101850,0.979928,6.469091,-8.608828,7.018716,0.472381],[-2.950483,0.971155,7.561951,-6.681885,9.342801,3.371300,-7.482252,2.021665,2.321163,4.396451],[9.614454,2.119134,4.796598,-7.031087,-0.320748,-3.382517,-2.267964,-8.808954,-2.295126,-9.979696]],[[-2.487841,-9.940144,-8.985947,-7.270411,-5.014115,-4.367960,-1.014832,-1.580398,9.531888,-9.792659],[0.531779,7.891009,-9.928348,8.985300,-7.586967,-2.263150,-7.002522,-0.489823,-5.480939,-1.060055],[-6.861425,4.879209,3.876321,1.034009,-2.409344,-9.348210,-4.319167,5.923754,6.883094,-6.501203],[-8.540245,-9.647960,6.521395,7.229496,-9.646047,-9.082316,-7.213394,0.105719,-2.931056,6.511013],[3.187116,-4.225889,9.386693,-6.287677,-7.427668,-5.208222,-8.811779,0.702769,4.448396,9.701544],[4.708734,8.391337,7.674324,5.085784,4.764642,-1.407837,-7.288528,-6.047014,9.196243,1.034627],[2.437086,-8.220340,-0.425697,6.450034,9.624219,6.179153,7.658198,-9.994963,-4.602256,-5.701585]],[[-0.872936,-2.007638,6.176053,-0.012091,6.484383,-0.207733,-1.725128,-3.273100,7.293575,-7.559462],[6.247642,8.601719,-3.990027,8.902370,7.891262,-2.709951,8.247520,-9.404753,-0.330920,9.409320],[-0.056497,-2.006403,-1.799963,-9.482728,9.675254,-9.199875,-8.771552,5.616758,-7.812218,1.547635],[-1.536574,3.768505,-3.303066,-4.368976,7.057675,5.199880,8.714448,-3.923762,-5.344989,0.486364],[0.798710,-3.655842,1.647591,1.393558,3.119994,7.692169,-4.621954,6.450456,1.440400,0.852787],[0.921344,-9.703583,6.598198,-5.472121,8.545584,4.678324,-2.742697,4.312926,5.065164,2.157753],[4.771297,-7.531371,6.674816,7.486389,4.413718,5.798842,3.682787,6.313015,-4.163705,-6.370158]],[[-0.603153,3.477035,-6.235415,-9.967457,5.648772,-6.253784,2.877686,-6.888712,-3.081549,6.905389],[3.484894,-9.936588,-8.664818,1.892335,9.050542,1.874248,7.522820,-1.006220,4.947012,3.900205],[-4.015198,5.799944,-2.825292,7.025957,7.044925,-9.073719,7.956838,3.496671,-3.251594,5.412566],[6.843318,2.360889,6.329209,-8.513718,7.464473,4.920939,6.297311,1.230697,-8.526084,-7.548745],[0.451469,-7.724691,4.391069,-9.896387,-8.077948,9.110741,-8.969773,-0.293447,8.402061,-4.080746],[-1.720525,-2.170737,6.458002,6.982483,-7.765463,9.546884,-0.521046,8.741422,-2.914177,-1.401932],[3.735121,-7.972868,-1.171008,0.219725,4.291228,-5.721452,7.061070,9.030066,-5.573174,-8.434331]],[[-2.501829,-0.388410,-8.621266,-8.775808,-1.538421,1.270448,-2.570653,6.269665,9.073767,-6.119549],[1.399887,-0.675001,-3.426741,4.006429,1.926483,2.726161,8.665384,-8.063746,2.334579,-0.779674],[7.978524,3.928976,5.277056,2.145605,9.322667,5.261671,-4.345958,2.867611,0.430338,-2.939032],[6.600081,-5.855619,8.351383,-7.980605,6.299262,-9.132086,-8.423200,1.412297,8.132171,-5.228711],[-0.059920,8.742839,-7.728738,0.411602,1.940181,-8.633424,-9.643806,0.229131,5.420262,-2.595510],[8.035750,-5.893755,9.874947,9.797266,-7.891937,4.820630,-3.083987,1.164082,-1.835508,-5.428902],[-0.359974,-1.966445,-1.392772,5.651064,2.942977,-7.265377,-2.412580,-0.048013,-8.128071,-2.769073]],[[-1.512365,-6.526643,-5.985745,5.308007,-7.268702,-9.103939,-8.792048,4.317916,8.754377,-3.041328],[8.940425,7.132088,7.248060,4.726591,3.801945,-8.982347,1.759038,-3.701415,2.124835,-9.881553],[-5.054724,-6.914626,6.750145,7.554701,-2.514129,3.100285,-7.159519,-9.526193,3.759002,-4.718221],[6.646478,-2.661241,9.909902,3.656024,-5.201238,-3.435601,-8.355428,8.575788,4.584021,-9.064985],[-7.806750,7.954459,-7.430636,1.244126,0.886242,7.049383,-7.861279,9.638963,-5.406515,-9.041193],[9.121746,7.140167,-1.972054,3.752274,8.673659,2.430107,-5.376637,5.765009,-9.881253,-2.914585],[-7.915977,2.450228,3.596962,-8.604591,6.721260,-4.091564,2.002133,-2.250732,-9.024362,5.771768]]], dtype = "float32")#candidate|5840|(10, 7, 10)|const|float32
var_5841 = relay.var("var_5841", dtype = "float32", shape = (10, 7, 10))#candidate|5841|(10, 7, 10)|var|float32
bop_5842 = relay.power(const_5840.astype('float32'), relay.reshape(var_5841.astype('float32'), relay.shape_of(const_5840))) # shape=(10, 7, 10)
uop_5853 = relay.erf(var_5841.astype('float32')) # shape=(10, 7, 10)
func_4536_call = mod.get_global_var('func_4536')
func_4537_call = mutated_mod.get_global_var('func_4537')
call_5856 = func_4536_call()
call_5857 = func_4536_call()
var_5866 = relay.var("var_5866", dtype = "float32", shape = (10, 7, 10))#candidate|5866|(10, 7, 10)|var|float32
bop_5867 = relay.greater(var_5841.astype('bool'), relay.reshape(var_5866.astype('bool'), relay.shape_of(var_5841))) # shape=(10, 7, 10)
func_4038_call = mod.get_global_var('func_4038')
func_4039_call = mutated_mod.get_global_var('func_4039')
call_5873 = relay.TupleGetItem(func_4038_call(), 0)
call_5874 = relay.TupleGetItem(func_4039_call(), 0)
func_2069_call = mod.get_global_var('func_2069')
func_2072_call = mutated_mod.get_global_var('func_2072')
const_5876 = relay.const([-5.625829,-3.606331,7.041217,6.669153,7.940253,3.902255,-5.383582,-7.240688,5.626001,4.451196,-5.531680,-6.264837,1.230765,-4.121683,2.546867,-9.445308,-0.390877,-2.502063,-1.406551,-5.057899,-2.090830,9.770689,9.686846,7.753066,-7.583433,2.343723,5.081785,5.465459,2.433842,7.430667,2.917112,-5.457332,-2.865802,4.307469,-7.267147,-5.870278,9.654953,4.471121,2.552266,4.997776,0.292379,-8.631360,-1.128189,-7.000215,7.989715,-4.636542,9.309935,-4.325707,-6.828065,-1.500641,1.570186,1.464096,7.444294,3.662234,7.164019,-0.706726,8.649381,2.207635,-0.394047,-8.765222,3.718581,-7.737988,6.912372,7.874512,-3.356897,0.363962,-3.691279,-6.830649,9.543068,7.668738,8.643755,-6.512617,-8.788843,-0.228018,2.141276,6.018713,-4.645238,6.209884,-5.048594,2.689161,-4.652550,7.602073,5.919073,-5.008955,7.153398,8.762323,7.179619,-7.006111,-2.266458,0.414497,5.738093,-4.313814,-6.475844,6.419088,-4.502549,-7.046267,5.484825,-3.209818,9.006988,-9.243982,-9.409475,9.335902,1.732760,2.305898,1.265303,0.167396,4.538326,-2.031778,3.633226,3.795179,-9.352463,-6.499177,9.402823,-2.621577,-4.233722,7.789759,-0.368757,-5.155996,-7.888298,0.302823,-5.560083,-5.905202,8.622562,-2.814403,6.928446,-5.281000,5.642669,5.752490,1.831573,4.600111,-3.783986,-9.163458,-5.701576,-6.492456,4.746119,-9.619807,-6.901525,3.560198,0.413662,-7.160170,0.199471,-8.691188,-7.980995,2.526914,5.093414,7.376768,-2.025523,-8.380685,-1.612740,9.495779,5.976519,-9.658338,4.986732,9.388553,5.001986,6.611934,-6.010942,9.959778,4.248819,5.790110,5.719611,2.593260,-7.443078,-7.842503,-7.918727,-1.063810,7.836012,-7.260904,3.386110,9.762691,0.992955,2.014267,-0.622640,-3.120384,-3.188569,-3.951559,-0.545939,3.376393,-0.279697,-6.909240,0.022028,-7.707393,8.053816,0.509254,-4.953042,9.837431,6.246433,6.552555,9.996091,-2.036084,2.320766,4.050020,-4.146953,3.363284,1.131738,2.449908,-8.431789,2.282013,-2.073540,-4.543132,-4.400577,5.234407,6.677098,1.457599,-2.390660,-0.482851,2.351345,-1.332877,-9.327503,-2.671540,2.655866,-5.847261,5.439160,6.886296,0.472275,-9.044214,8.505732,9.543775,-0.761966,1.907450,-0.427809,3.300158,1.257480,5.034811,9.076175,7.740480,-0.602761,-9.738990,-9.489992,4.165374,-0.233695,7.232162,0.096004,-2.931108,0.087194,8.329670,0.052161,9.252367,-4.439132,-6.585763,-9.603502,-8.312496,5.535735,-5.839006,-3.324307,2.832468,5.284166,-1.858438,-6.323453,1.760769,-5.219239,8.515578,5.646365,-0.851478,-6.348879,8.521282,7.788846,0.127756,-6.241371,-2.324430,1.782862,5.826029,-7.015529,-8.887313,-7.876506,-4.805763,-7.693392,-1.987120,9.153522,3.675253,0.119701,-7.745252,-7.617147,-1.416727,-7.524192,2.157784,-9.694582,-2.699938,-4.283536,2.173429,-0.368876,8.690027,-1.929198,-4.194029,-9.455061,0.765638,-3.079849,-4.751891,7.158575,-5.639368,6.348343,2.544392,-1.226071,-9.308719,-8.791812,-0.695046,-9.880899,1.067703,7.578307,-7.898736,2.252171,-9.484312,9.875278,-3.669368,8.331285,-3.190938,-6.478747,-1.101799,-9.301358,8.446376,2.193805,7.345423,5.523402,-7.003361,2.427975,9.433282,-9.968320,-6.561057,-4.971744,-8.842992,2.439527,7.869278,-5.628593,4.636763,-5.720374,-5.393521,-1.699101,1.423211,-1.462479,-0.583332,-8.447586,9.604828,0.822892,4.813220,-3.387745,4.693813], dtype = "float64")#candidate|5876|(336,)|const|float64
call_5875 = relay.TupleGetItem(func_2069_call(relay.reshape(const_5876.astype('float64'), [7, 16, 3])), 0)
call_5877 = relay.TupleGetItem(func_2072_call(relay.reshape(const_5876.astype('float64'), [7, 16, 3])), 0)
output = relay.Tuple([bop_5842,uop_5853,call_5856,bop_5867,call_5873,call_5875,const_5876,])
output2 = relay.Tuple([bop_5842,uop_5853,call_5857,bop_5867,call_5874,call_5877,const_5876,])
func_5879 = relay.Function([var_5841,var_5866,], output)
mod['func_5879'] = func_5879
mod = relay.transform.InferType()(mod)
mutated_mod['func_5879'] = func_5879
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5879_call = mutated_mod.get_global_var('func_5879')
var_5881 = relay.var("var_5881", dtype = "float32", shape = (10, 7, 10))#candidate|5881|(10, 7, 10)|var|float32
var_5882 = relay.var("var_5882", dtype = "float32", shape = (10, 7, 10))#candidate|5882|(10, 7, 10)|var|float32
call_5880 = func_5879_call(var_5881,var_5882,)
output = call_5880
func_5883 = relay.Function([var_5881,var_5882,], output)
mutated_mod['func_5883'] = func_5883
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3819_call = mod.get_global_var('func_3819')
func_3821_call = mutated_mod.get_global_var('func_3821')
call_5914 = relay.TupleGetItem(func_3819_call(), 0)
call_5915 = relay.TupleGetItem(func_3821_call(), 0)
output = relay.Tuple([call_5914,])
output2 = relay.Tuple([call_5915,])
func_5923 = relay.Function([], output)
mod['func_5923'] = func_5923
mod = relay.transform.InferType()(mod)
output = func_5923()
func_5924 = relay.Function([], output)
mutated_mod['func_5924'] = func_5924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4733_call = mod.get_global_var('func_4733')
func_4734_call = mutated_mod.get_global_var('func_4734')
call_5960 = relay.TupleGetItem(func_4733_call(), 0)
call_5961 = relay.TupleGetItem(func_4734_call(), 0)
func_4257_call = mod.get_global_var('func_4257')
func_4259_call = mutated_mod.get_global_var('func_4259')
call_5962 = relay.TupleGetItem(func_4257_call(), 2)
call_5963 = relay.TupleGetItem(func_4259_call(), 2)
func_4316_call = mod.get_global_var('func_4316')
func_4318_call = mutated_mod.get_global_var('func_4318')
const_5975 = relay.const([6.142580,7.318521,0.163184,-8.839404,0.202536,7.314431,0.552817,5.602147,2.126210,7.989949,-6.777950,-7.432287,-5.074384,4.971815,8.548231,8.634799,-8.139340,-1.627139,7.264626,7.199080,-5.290965,8.330993,-4.684393,5.071542,-4.955637,7.873906,3.206733,-4.933643,1.062774,-0.038203,-7.248902,3.191664,-1.610228,-3.307142,3.099159,-4.573644,-9.330404,4.698808,-5.327183,-1.546298,6.988251,-5.689128,-5.765426,-9.022521,-6.517550,-3.737667,4.984736,-1.210573,5.975401,9.531441,-4.516419,-3.037528,7.479511,8.617408,-2.907436,-1.630215,3.435174,4.152631,3.279321,6.112609,-9.863302,-0.400642,-4.913654,4.854532,0.800073,-2.476616,-2.601313,0.006764,-1.472646,8.224177,-6.036935,-3.064529,-0.223116,3.215271,-3.131920,-2.535605,-1.125049,-3.748735,9.950980,-3.954661,-2.426823,-4.140260,8.250543,-0.885790,-9.779517,0.744073,9.418417,5.385086,0.227894,9.299903,5.893422,-0.301093,5.192080,-3.344721,-5.723452,0.649194,3.371677,1.787168,4.019262,-3.391179,8.275976,9.303262,-0.554096,5.662507,4.955599,2.670624,-5.789144,0.353217,-2.127792,-4.272869,-0.443482,8.076328,3.777393,9.324567,-7.030593,-3.571147,5.114863,-9.336725,-3.889318,3.576598,-4.435452,0.539639,-2.964126,-2.283606,-1.885794,5.568414,8.173739,4.350506,4.300464,7.458239,-4.088651,9.462083,5.382436,9.336590,2.871918,-3.387413,6.452779,-3.139044,-3.024540,-5.031772,3.835295,5.770063,-5.593254,5.935858,4.252602,2.516674,3.422109,6.629368,-5.767226,-5.258800,6.185413,-5.845816,-7.612195,-1.305011,7.222358,-4.126734,-8.023250,5.804705,-8.424609,-0.132479,-8.769517,3.160795,2.642961,-8.613605,-2.083868,8.108283,1.260597,-3.659270,7.395245,-0.441658,-6.666756,3.827688,7.059227,9.217096,-0.999430,7.891453,-0.802304,-2.284998,-1.750954,6.322397,9.973135,-0.068993,-1.819344,7.908843,-3.318224,0.697005,-1.006724,1.591980,0.147738,7.107486,2.547095,-3.137062,3.139348,1.259261,-7.917971,-6.457673,7.123673,-6.913532,-7.294741,9.456212,-2.935414,5.170958,-0.732549,-2.653992,3.385471,9.894062,-9.330141,-2.949372,-5.352717,6.423833,0.522237,-0.071680,4.450569,-9.812894,-8.488972,-0.405989,-1.761584,8.548094,-9.931651,6.420911,6.894495,-6.924422,-0.633186,-2.309245,-0.114300,7.746710,4.792956,6.055166,4.585666,-2.079529,0.466968,-4.935119,-1.462910,-3.699044,2.576295,4.436278,-9.420070,-5.598763,-2.344258,1.026211,3.360435,-6.548059,0.899422,3.810810,-2.039462,-2.073531,-4.873964,9.604954,0.194662,2.936522,9.019801,8.827235,3.691547,0.323120,-6.143729,-2.444039,0.929881,3.338526,-5.437590,2.899357,-1.492351,9.715247,-2.449838,-1.583486,-6.744836,-1.541597,-6.525120,-5.694958,-7.416536,4.071316,-2.721766,-6.807472,6.841475,-8.100674,-2.791891,-7.036533,-3.649216,1.952129,-8.749327,-7.227342,2.451901,7.558228,-7.787801,5.123752,6.671267,-2.140283,9.106184,6.170911,-7.457954,-5.670634,-7.350019,6.520771,-4.140282,2.130584,-5.835671,-9.270234,0.576063,7.511762,1.369627,-1.539329,-1.824018,-5.310457,3.258434,-8.655928,-0.524579,-8.104506,8.854746,8.137814,-9.039328,-3.323811,-6.586763,-0.045669,-5.875689,6.538872,6.352089,-1.006611,-4.609795,8.269415,9.317208,6.485875,-7.964733,-4.420658,-3.588520,-0.990577,-3.887887,6.915627,1.689070,-9.654246,-2.554402,2.323380,5.711691,3.740010,-2.849786,0.482882,-0.552340,5.915287,-7.733627,-0.648209,1.797083,4.742815,1.072702,-5.764976,6.730285,6.085878,1.256204,2.834218,-6.389088,-8.360656,9.179907,-5.314207,8.914509,-5.482607,1.450914,-4.570078,8.667445,4.660636,-1.989280,4.629142,-3.570672,8.659067,8.973512,8.918907,9.738381,8.634888,7.474713,-2.792721,4.633436,4.527686,5.526351,-8.234675,8.242449,-0.462954,3.470728,1.519937,-4.999958,5.854755,9.771182,3.487702,2.861266,9.511608,4.881682,5.565218,3.247928,8.134769,-7.325048,1.699480,9.872766,1.483616,-7.775253,9.732254,-5.569537,-4.068833,8.861235,-8.210119,-2.293481,0.835452,-1.245393,5.105655,7.151655,-9.373223,-1.159588,-4.492269,0.321368,-7.390626,-5.496838,-7.169839,6.930908,7.501093,1.116736,4.295845,9.982895,9.045761,8.498803,4.808529,2.501999,-0.426023,-3.884095,-8.604747,-4.204633,1.727367,-4.385418,9.001703,-8.213610,-2.673241,6.681754,-6.258504,-6.125052,-0.693035,-4.988250,2.665953,3.932752,2.198867,-4.759727,-5.810335,-2.004867,5.261253,7.689083,-1.301701,3.701311,5.769538,-4.348619,-4.592045,3.026522,-8.020437,-5.405998,-1.372823,7.656928,0.441035,5.980972,1.779279,1.645216,-8.423537,6.605497,0.633372,0.269439,1.955167,-4.779176,-2.132505,-0.109812,1.303516,-1.628066,5.922555,2.674447,1.589659,-7.294394,-8.110625,-6.565143,-7.726947,-5.435269,-7.088853,2.770218,3.620633,6.836469,2.516389,9.161127,3.184617,-1.841611,0.941781,0.208297,-5.307649,2.706636,-5.133930,8.494239,-2.652258,-7.476376,5.641891,-8.278033,2.427943,1.063364,-5.139454,3.450779,-1.209217,-2.080018,6.253785,8.782200,1.622394,-5.070150,-9.634305,-2.209150,7.090571,1.653665,-1.070428,-0.818490,-3.705524,3.433752,-8.760761,-5.963393,-1.157341,-6.644271,-9.359173,-3.837297,1.498879,0.614326,-9.677243,-8.979671,-7.860732,5.591213,9.639192,-4.208484,8.404181,-1.161764,-4.110782,-1.488607,9.883678,-5.801837,-1.660531,8.875072,-4.636338,6.045454,1.163341,-2.654215,-6.556969,-8.625603,0.299698,1.458925,-9.107554,-7.357327,-9.904650,-4.168098,-3.434100,5.080281,3.417485,-3.977927,-0.063634,-3.385259,6.230527,1.641504,-9.819669,2.383716,1.514500,-0.799252,3.793217,-6.882356,-4.044809,0.189263,-3.459815,5.258493,-7.821954,2.920918,-3.125715,-7.166246,-4.675543,6.984168,3.433636,9.247605,7.992052,1.379898,-5.186248,-6.047883,-2.990128,2.488044,-5.063360,-1.756599,-9.079963,1.866420,5.980272,-1.574804,-6.869364,6.072184,3.302353,-1.233236,-6.937269,4.693788,8.263057,3.558235,9.793767,-4.854232,-4.933463,-4.604150,-5.105099,9.497947,1.764034,-2.748584,7.872233,-4.208099,-1.650285,0.784458,-8.741712,4.298181,-9.561121,0.144046,-8.314116,1.260804,-9.412718,0.236464,-2.320441,-0.169695,0.112630,9.248215,-9.907329,0.034551,-8.798627,-2.402227,2.068464,-5.311101,-5.624934,7.169806,-4.446378,3.727441,2.477707,3.807554,9.417198,1.737900,-4.346779,6.498629,-2.828515,4.942212,3.981273,9.743370,-0.085838,-0.290909,4.400801,0.390019,1.174159,-6.949539,7.362105,-5.136202,-5.590322,5.425383,-8.875326,6.383482,4.838507,7.060029,-2.480647,8.712165,-8.249103,-1.694919,-6.457331,6.983731,-0.820216,-0.458720,-5.849353,9.300616,-9.803425,6.499386,7.437436,-2.664748,-6.846127,-7.145856,-4.537596,4.111427,9.230984,0.149874,6.079284,8.515565,-2.285479,8.542409,-0.624384,7.084740,-8.344543,9.021926,-1.697187,-4.801321,4.826298,0.607916,7.031026,7.498366,-5.113462,-5.165817,8.550204,-4.714257,5.247433,-2.489305,-9.101448,-2.606778,7.801500,-3.086392,5.845911,-8.122482,8.927337,0.198141,-1.833835,-2.648128,4.043267,-7.334605,-3.839552,-5.688565,-4.213088,-9.215239,3.122548,3.929900,-5.332073,-7.459284,4.786020,4.593723,-1.394647,5.637094,0.910289,-7.457673,-2.001818,7.425872,8.536639,-4.390895,1.855760,-9.252952,9.974983,5.211537,9.429222,-5.716659,-9.501514,-1.853036,-2.404184,6.833935,8.394246,-6.791924,-7.991226,-8.987862,2.381960,1.125098,6.754122,7.374476,-8.338399,3.861719,-8.574435,-6.827555,9.614675,-0.766855,-7.108235,0.032374,4.564831,8.304545,2.356697,5.015508,-3.639371,8.377248,-8.895913,-6.067731,7.495086,-2.252837,8.189995,-8.238289,5.480762,-8.895361,-6.079883,9.012683,8.450160,4.097900,2.703900,-4.490039,-5.946890,3.375261,-7.647587,7.819053,4.602839,-1.419297,-6.329159,6.807789,2.255054,2.154503,6.284961,7.283643,3.949491,-2.534668,9.258978,-6.085897,-6.451980,-6.835535,5.160461,1.945751,9.923162,-8.163597,-0.897367,-6.147464,1.109002,-6.413280,-8.667560,-2.456011,-7.505115,-7.969166,9.688179,5.666203,6.799613,-9.779977,2.908834,6.743755,4.152054,-7.466620,-8.980193,1.553684,-9.870072,-1.925970,2.695281,-9.785989,5.658139,8.177878,4.723682,9.658469,-5.067598,-6.227441,1.592808,8.934225,1.425289,-9.521856,-9.241027,4.492819,4.114252,1.156658,-0.033785,6.067882,1.255929,-9.822214,4.547367,2.070550,-7.045335,-4.493823,7.871539,-1.516777,8.935586,-5.102842,6.353650,2.921693,-3.931493,2.532241,-5.489176,-9.358147,-4.550041,6.452815,-5.261127,8.750706,-7.945290,-3.633295,7.528807,-6.603056,-0.984353,-2.634526,-9.618593,-4.524766,5.284530,-2.444163,-2.917786,1.196794,5.211236,4.419445,1.953119,-1.308816,-6.480545,4.172986,-4.495691,-5.298798,1.428890,-9.520421,-4.155731,-1.008562,-1.870169,-5.023793,6.353798,2.723567,-2.447258,2.472323,-4.867538,9.859193,-1.109754,-1.622037,-2.241301,1.839699,-3.563908,3.328279,6.656735,-1.416273,-6.307836,-7.145739,-3.609062,2.275311,-2.283730,-3.598201,-2.126393,2.446908,-8.960289,6.519679,4.659897,-0.172188,-7.483959,-7.440531,1.550619,-9.064723,0.181170,-8.648990,-3.174214,-3.853944,-0.955989,3.228311,-7.583164,0.683272,2.033294,8.228369,-0.366974,-5.150538,-5.444030,-2.905767,8.998473,8.214676,1.644625,-1.054389,0.158667,7.425880,4.785195,4.600914,5.808104,-7.114183,9.443665,7.490921,-5.229374,7.917880,0.032584,-9.883067,-4.059885,3.438787,7.821441,7.680547,4.865092,-6.962437,-4.013084,-8.712949,3.929582,-6.872194,7.124760,-8.089051,5.650935,-4.018387,9.839200,3.313537,-2.597865,8.706035,-0.080333,3.018452,9.297387,-5.937482,4.716904,-9.837627,7.393454,5.349608,-7.990452,-9.148755,7.803509,-2.458501,-2.173316,-7.185156,9.993897,-4.956427,3.102975,3.791664,-3.002753,-6.297293,-7.985021,-4.597670,3.350972,-2.483009,4.444061,4.999698,6.856537,9.471143,4.470647,3.363991,4.245494,-9.850830,5.550036,-8.982033,6.196084,0.371440,4.379023,8.579115,6.329197,-1.122914,0.081025,-6.411874,-8.052948,-9.782962,6.037229,-4.171426,6.627467,1.977591,-0.415175,-9.456941,-8.690560,9.321783,1.213002,-4.019414,0.171826,6.558324,-9.711539,0.060181,3.122941,-2.630048,5.989246,-8.907092,8.412594,9.589374,3.911118,2.818231,5.481336,0.921068,-1.039687,-7.969469,-4.079483,-3.345877,2.875880,8.401573,5.395133,4.959682,-9.290569,4.286011,-2.104515,1.286780,7.980448,9.460650,-2.165391,3.918762,5.921847,-9.558911,-8.523060,-4.046813,-8.629819,-5.691957,-2.662477,0.014223,7.456618,-1.018097,9.564153,6.544831,7.108684,-7.227619,0.779966,-5.330617,2.206916,0.058919,8.098939,2.475382,2.712242,4.682717,2.814115,0.470334,6.559664,-1.491055,0.183138,0.962717,1.219384,-0.389920,-4.834953,2.338213,8.612583,4.827691,-8.143152,1.306289,-5.592843,3.851628,2.008931,8.145024,1.409569,1.458324,5.159736,4.711377,-6.416131,-5.353129,-9.846918,-5.694568,-0.269671,-9.461870,-3.171607,-1.544398,-1.213887,6.790809,-8.867731,-6.408172,-3.723630,1.760987,5.190166,-4.787502,-9.214658,-5.371138,-2.285059,4.814867,-0.078917,-7.190950,0.751955,0.591466,-9.980768,1.100634,1.395853,-9.623076,1.505607,-2.446905,-2.848846,6.826863,3.923093,7.686303,-9.270759,-7.835942,-6.647762,-4.611642,8.159139,7.952543,-4.625373,9.934790,8.082097,2.848955,2.738413,6.045327,1.737178,-6.625392,-8.100497,-2.166325,-9.641456,7.476132,6.149390,-9.798209,4.130943,0.180126,-8.149225,-9.237891,-9.103957,8.904721,2.455597,-7.562208,0.448695,0.218641,-7.525825,-9.472072,-9.521595,-6.010372,0.439686,-5.461053,-5.882096,-3.014681,-3.109959,-2.389161,9.847252,-8.381347,-6.432967,4.823618,-9.230892,8.341276,-4.975647,9.042677,3.478742,1.862166,0.521981,-3.164139,8.153730,-4.755821,2.584899,-9.033470,-5.629299,8.204275,1.637946,-6.401524,8.581345,4.588434,-3.107863,-4.858824,-6.836670,-6.710449,1.634865,1.532706,-4.783302,4.313654,0.612400,-9.491120,-5.227223,-2.567486,-2.757590,5.706132,0.350954,9.288562,-3.927812,3.836035,9.830626,-7.335547,-8.678495,5.180346,0.741112,-8.703353,3.551518,6.683446,-0.680530,4.484006,-2.403729,-4.352475,7.654036,1.699795,9.147552], dtype = "float32")#candidate|5975|(1200,)|const|float32
call_5974 = relay.TupleGetItem(func_4316_call(relay.reshape(const_5975.astype('float32'), [15, 10, 8])), 2)
call_5976 = relay.TupleGetItem(func_4318_call(relay.reshape(const_5975.astype('float32'), [15, 10, 8])), 2)
func_4816_call = mod.get_global_var('func_4816')
func_4818_call = mutated_mod.get_global_var('func_4818')
call_5980 = relay.TupleGetItem(func_4816_call(), 5)
call_5981 = relay.TupleGetItem(func_4818_call(), 5)
output = relay.Tuple([call_5960,call_5962,call_5974,const_5975,call_5980,])
output2 = relay.Tuple([call_5961,call_5963,call_5976,const_5975,call_5981,])
func_6000 = relay.Function([], output)
mod['func_6000'] = func_6000
mod = relay.transform.InferType()(mod)
output = func_6000()
func_6001 = relay.Function([], output)
mutated_mod['func_6001'] = func_6001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5690_call = mod.get_global_var('func_5690')
func_5691_call = mutated_mod.get_global_var('func_5691')
call_6005 = relay.TupleGetItem(func_5690_call(), 1)
call_6006 = relay.TupleGetItem(func_5691_call(), 1)
var_6010 = relay.var("var_6010", dtype = "float32", shape = (5, 15, 4))#candidate|6010|(5, 15, 4)|var|float32
bop_6011 = relay.less_equal(call_6005.astype('bool'), relay.reshape(var_6010.astype('bool'), relay.shape_of(call_6005))) # shape=(5, 15, 4)
bop_6014 = relay.less_equal(call_6006.astype('bool'), relay.reshape(var_6010.astype('bool'), relay.shape_of(call_6006))) # shape=(5, 15, 4)
uop_6017 = relay.tan(bop_6011.astype('float32')) # shape=(5, 15, 4)
uop_6019 = relay.tan(bop_6014.astype('float32')) # shape=(5, 15, 4)
bop_6020 = relay.floor_mod(uop_6017.astype('float64'), relay.reshape(call_6005.astype('float64'), relay.shape_of(uop_6017))) # shape=(5, 15, 4)
bop_6023 = relay.floor_mod(uop_6019.astype('float64'), relay.reshape(call_6006.astype('float64'), relay.shape_of(uop_6019))) # shape=(5, 15, 4)
func_5473_call = mod.get_global_var('func_5473')
func_5476_call = mutated_mod.get_global_var('func_5476')
call_6027 = relay.TupleGetItem(func_5473_call(relay.reshape(var_6010.astype('float32'), [300,])), 1)
call_6028 = relay.TupleGetItem(func_5476_call(relay.reshape(var_6010.astype('float32'), [300,])), 1)
output = relay.Tuple([bop_6020,call_6027,])
output2 = relay.Tuple([bop_6023,call_6028,])
func_6033 = relay.Function([var_6010,], output)
mod['func_6033'] = func_6033
mod = relay.transform.InferType()(mod)
var_6034 = relay.var("var_6034", dtype = "float32", shape = (5, 15, 4))#candidate|6034|(5, 15, 4)|var|float32
output = func_6033(var_6034)
func_6035 = relay.Function([var_6034], output)
mutated_mod['func_6035'] = func_6035
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3652_call = mod.get_global_var('func_3652')
func_3653_call = mutated_mod.get_global_var('func_3653')
call_6209 = func_3652_call()
call_6210 = func_3652_call()
uop_6223 = relay.sinh(call_6209.astype('float32')) # shape=(8, 5, 12)
uop_6225 = relay.sinh(call_6210.astype('float32')) # shape=(8, 5, 12)
uop_6227 = relay.atanh(call_6209.astype('float32')) # shape=(8, 5, 12)
uop_6229 = relay.atanh(call_6210.astype('float32')) # shape=(8, 5, 12)
func_2392_call = mod.get_global_var('func_2392')
func_2395_call = mutated_mod.get_global_var('func_2395')
const_6235 = relay.const([-2,-1,-8,9,-10,-1,1,-4,3,-7,10,2,-8,4,-4,3,6,6,-6,2,-9,-5,-10,-3,-5,-6,10,2,8,6,-9,-9,-3,-10,4,-7,4,5,-4,-9,-9,-7,2,8,5,2,-5,10,-8,8,-4,-4,8,-4,-6,-3,-9,-5,-2,-1,-9,1,-5,-1,-1,4,-6,6,6,8,5,8,-4,7,5,10,-2,-5,2,-2,5,-10,4,4,-6,-3,-6,4,-5,-5,-8,4,6,9,-7,2,-8,-4,-6,4,3,-2,-2,8,-7,8,9,-9,3,-4,-10,-4,-9,-3,-7,9,-6,-10,7,-4,2,-2,-3,-6,9,-7,-6,-7,7,2,-7,-5,-9,-9,-2,3,-6,5,-7,6,-10,-7,1,-3,-6,-4,5,-5,-6,-3,1,2,-2,-5,-7,7,3,8,-9,-4,-8,-7,-10,7,1,4,-7,-9,3,-2,-6,-10,2,-3,-8,8,-5,-9,9,1,-8,-4,-9,-8,7,-5,-6,2,-10,10,1,-4,-3,3,8,6,7,3,-2,-10,-10,4,9,-5,-2,-9,-5,1,-5,-3,-8,-1,8,-5,-6,9,-2,-3,8,2,-4,-5,1,8,10,-10,-10,-7,4,9,7,-7,1,-1,-7,1,1,2,-1,9,4,2,-10,-2,-1,6,9,8,-3,-10,-2,-2,4,7,6,9,-5,4,9,2,1,9,-3,-9,-6,5,-10,2,-2,-1,5,8,10,9,-2,-9,-1,2,-7,-10,-1,-2,-3,5,3,2,6,2,-4,7,-2,-6,7,6,-8,-7,-1,-10,-3,-10,2,6,3,-6,-9,-10,1,1,-5,-2,-3,-4,9,-1,-8,1,-2,-10,7,10,10,4,-8,-7,-3,-8,7,-5,3,-9,4,2,8,-10,9,8,2,9,8,4,7,2,-3,10,-10,8,-2,-1,-4,5,3,-3,7,4,9,9,-2,-10,7,-1,-3,-2,-1,5,-5,1,8,-10,5,2,-4,10,1,10,-9,4,10,-9,10,8,-6,3,2,-9,-9,-1,-2,-8,-8,-1,-9,-1,3,-4,3,6,1,-3,3,8,-5,-7,-9,-9,5,-5,7,5,-7,-10,-1,2,-8,-2,9,4,-10,-10,-6,-5,-1,5,-8,5,-9,6,3,-1,2,-1,7,6,6,8,5,3,6,3,10,9,-4,1,-10,-8,10,-5,7,-6,-7,5,10,7,7,9,-9,9,1,1,-6,6,-8,-3,-4,8,-3,-3,-10,-8,2,6,-4,-5,9,-6,2,-9,5,-7,-10,10,9,-8,-8,8,2,1,1,10,-1,2,-10,-6,-4,-4,10,-2,1,-8,4,9,9,1,8,-9,8,2,4,-3,-1,-5,-4,9,-4,-2,-2,6,5,-1,-1,-1], dtype = "uint64")#candidate|6235|(520,)|const|uint64
call_6234 = relay.TupleGetItem(func_2392_call(relay.reshape(const_6235.astype('uint64'), [8, 5, 13]), relay.reshape(const_6235.astype('uint64'), [8, 5, 13]), ), 3)
call_6236 = relay.TupleGetItem(func_2395_call(relay.reshape(const_6235.astype('uint64'), [8, 5, 13]), relay.reshape(const_6235.astype('uint64'), [8, 5, 13]), ), 3)
func_1191_call = mod.get_global_var('func_1191')
func_1195_call = mutated_mod.get_global_var('func_1195')
var_6253 = relay.var("var_6253", dtype = "int8", shape = (315,))#candidate|6253|(315,)|var|int8
call_6252 = relay.TupleGetItem(func_1191_call(relay.reshape(var_6253.astype('int8'), [3, 15, 7]), relay.reshape(var_6253.astype('int8'), [3, 15, 7]), ), 0)
call_6254 = relay.TupleGetItem(func_1195_call(relay.reshape(var_6253.astype('int8'), [3, 15, 7]), relay.reshape(var_6253.astype('int8'), [3, 15, 7]), ), 0)
output = relay.Tuple([uop_6223,uop_6227,call_6234,const_6235,call_6252,var_6253,])
output2 = relay.Tuple([uop_6225,uop_6229,call_6236,const_6235,call_6254,var_6253,])
func_6257 = relay.Function([var_6253,], output)
mod['func_6257'] = func_6257
mod = relay.transform.InferType()(mod)
mutated_mod['func_6257'] = func_6257
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6258 = relay.var("var_6258", dtype = "int8", shape = (315,))#candidate|6258|(315,)|var|int8
func_6257_call = mutated_mod.get_global_var('func_6257')
call_6259 = func_6257_call(var_6258)
output = call_6259
func_6260 = relay.Function([var_6258], output)
mutated_mod['func_6260'] = func_6260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4835_call = mod.get_global_var('func_4835')
func_4837_call = mutated_mod.get_global_var('func_4837')
call_6402 = func_4835_call()
call_6403 = func_4835_call()
const_6406 = relay.const([[[False,True,True,False,True,True,True,True,True,True,False,False],[False,False,False,False,True,True,True,False,False,True,False,True],[False,False,True,False,False,False,True,False,True,False,False,False],[True,True,True,False,True,False,False,True,False,False,False,True],[True,True,True,True,False,True,False,False,True,False,True,True]],[[False,False,True,True,False,False,True,True,True,True,True,False],[True,True,False,True,False,False,True,True,True,False,True,True],[False,True,True,True,True,False,True,True,False,False,False,False],[False,False,True,False,True,False,False,False,False,False,True,False],[False,False,True,True,True,False,False,True,False,False,False,True]],[[False,True,True,True,False,True,True,False,True,True,False,False],[True,True,False,True,True,False,True,False,False,True,True,True],[True,False,False,True,False,True,True,False,False,False,True,False],[True,True,True,True,False,True,True,True,False,False,True,False],[False,False,False,False,True,True,False,True,True,False,False,True]],[[True,True,False,False,True,True,False,True,False,True,False,False],[True,True,False,True,True,True,True,True,True,True,False,True],[True,False,False,False,False,False,False,False,False,False,False,True],[True,False,False,False,False,False,False,True,False,False,False,True],[True,False,True,True,True,True,False,False,True,False,True,True]],[[False,True,True,False,True,True,False,False,False,False,False,False],[True,True,True,True,True,True,False,True,True,True,False,True],[False,False,True,True,False,False,True,False,True,False,True,False],[False,True,True,False,True,True,False,False,False,True,True,False],[False,False,True,False,True,True,True,False,True,False,True,True]],[[True,False,True,False,True,False,True,True,True,False,True,True],[True,True,True,False,False,True,False,False,True,True,False,False],[False,True,False,True,False,False,False,True,False,True,True,True],[False,False,False,True,False,True,False,False,False,False,False,False],[True,False,True,False,True,True,False,True,True,True,False,True]],[[True,False,False,True,True,True,True,True,False,True,True,False],[True,True,False,True,True,False,False,False,False,True,False,True],[False,True,False,True,False,False,False,True,False,False,False,False],[False,True,True,False,True,False,False,False,False,True,True,True],[True,True,False,False,False,False,True,True,True,False,False,True]],[[False,True,False,True,True,True,True,True,False,False,True,True],[True,False,True,True,True,True,False,False,False,False,False,True],[True,False,False,False,False,False,False,False,True,False,True,True],[True,False,False,False,True,False,True,False,False,True,True,True],[False,True,True,False,False,False,True,True,False,True,True,False]]], dtype = "bool")#candidate|6406|(8, 5, 12)|const|bool
bop_6407 = relay.logical_and(call_6402.astype('bool'), relay.reshape(const_6406.astype('bool'), relay.shape_of(call_6402))) # shape=(8, 5, 12)
bop_6410 = relay.logical_and(call_6403.astype('bool'), relay.reshape(const_6406.astype('bool'), relay.shape_of(call_6403))) # shape=(8, 5, 12)
func_5241_call = mod.get_global_var('func_5241')
func_5243_call = mutated_mod.get_global_var('func_5243')
call_6411 = func_5241_call(relay.reshape(const_6406.astype('bool'), [8, 5, 12]))
call_6412 = func_5241_call(relay.reshape(const_6406.astype('bool'), [8, 5, 12]))
func_5231_call = mod.get_global_var('func_5231')
func_5232_call = mutated_mod.get_global_var('func_5232')
call_6417 = relay.TupleGetItem(func_5231_call(), 0)
call_6418 = relay.TupleGetItem(func_5232_call(), 0)
output = relay.Tuple([bop_6407,call_6411,call_6417,])
output2 = relay.Tuple([bop_6410,call_6412,call_6418,])
func_6423 = relay.Function([], output)
mod['func_6423'] = func_6423
mod = relay.transform.InferType()(mod)
output = func_6423()
func_6424 = relay.Function([], output)
mutated_mod['func_6424'] = func_6424
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4502_call = mod.get_global_var('func_4502')
func_4503_call = mutated_mod.get_global_var('func_4503')
call_6433 = func_4502_call()
call_6434 = func_4502_call()
output = relay.Tuple([call_6433,])
output2 = relay.Tuple([call_6434,])
func_6441 = relay.Function([], output)
mod['func_6441'] = func_6441
mod = relay.transform.InferType()(mod)
output = func_6441()
func_6442 = relay.Function([], output)
mutated_mod['func_6442'] = func_6442
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6470 = relay.var("var_6470", dtype = "float32", shape = (2, 5, 14))#candidate|6470|(2, 5, 14)|var|float32
uop_6471 = relay.sinh(var_6470.astype('float32')) # shape=(2, 5, 14)
output = relay.Tuple([uop_6471,])
output2 = relay.Tuple([uop_6471,])
func_6486 = relay.Function([var_6470,], output)
mod['func_6486'] = func_6486
mod = relay.transform.InferType()(mod)
var_6487 = relay.var("var_6487", dtype = "float32", shape = (2, 5, 14))#candidate|6487|(2, 5, 14)|var|float32
output = func_6486(var_6487)
func_6488 = relay.Function([var_6487], output)
mutated_mod['func_6488'] = func_6488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5815_call = mod.get_global_var('func_5815')
func_5816_call = mutated_mod.get_global_var('func_5816')
call_6503 = relay.TupleGetItem(func_5815_call(), 0)
call_6504 = relay.TupleGetItem(func_5816_call(), 0)
output = call_6503
output2 = call_6504
func_6512 = relay.Function([], output)
mod['func_6512'] = func_6512
mod = relay.transform.InferType()(mod)
output = func_6512()
func_6513 = relay.Function([], output)
mutated_mod['func_6513'] = func_6513
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6516 = relay.var("var_6516", dtype = "float32", shape = (6, 4, 16))#candidate|6516|(6, 4, 16)|var|float32
uop_6517 = relay.acosh(var_6516.astype('float32')) # shape=(6, 4, 16)
output = uop_6517
output2 = uop_6517
func_6520 = relay.Function([var_6516,], output)
mod['func_6520'] = func_6520
mod = relay.transform.InferType()(mod)
var_6521 = relay.var("var_6521", dtype = "float32", shape = (6, 4, 16))#candidate|6521|(6, 4, 16)|var|float32
output = func_6520(var_6521)
func_6522 = relay.Function([var_6521], output)
mutated_mod['func_6522'] = func_6522
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5314_call = mod.get_global_var('func_5314')
func_5316_call = mutated_mod.get_global_var('func_5316')
call_6548 = func_5314_call()
call_6549 = func_5314_call()
func_5690_call = mod.get_global_var('func_5690')
func_5691_call = mutated_mod.get_global_var('func_5691')
call_6558 = relay.TupleGetItem(func_5690_call(), 1)
call_6559 = relay.TupleGetItem(func_5691_call(), 1)
func_6000_call = mod.get_global_var('func_6000')
func_6001_call = mutated_mod.get_global_var('func_6001')
call_6561 = relay.TupleGetItem(func_6000_call(), 4)
call_6562 = relay.TupleGetItem(func_6001_call(), 4)
func_1039_call = mod.get_global_var('func_1039')
func_1043_call = mutated_mod.get_global_var('func_1043')
const_6571 = relay.const([[-1,-6,9,7,-9,8,1,-6,-8,6,6,9],[1,-4,1,3,-6,10,2,3,-8,3,-6,10]], dtype = "uint16")#candidate|6571|(2, 12)|const|uint16
const_6572 = relay.const([4.990707,9.274990,0.320326,3.947888,8.160367,8.788894,4.372153,-5.567412,-5.203130,-8.960920,2.301468,-1.434193,-6.720348,-4.699871,4.147462,-4.078348,-2.814042,4.918778,-3.252936,-9.497419,0.060970,4.417915,8.141449,0.846895,8.239325,9.917039,-7.456736,-0.377643,6.931654,-7.115915,7.172277,-0.293177,-8.711477,0.944247,-2.353825,-6.177619,-0.946557,2.992746,-8.977322,8.951310,-1.630884,-7.900093,4.695949,9.511177,1.504727,7.487414,-7.105271,0.498165,0.773811,3.365718,-5.222706,3.678759,-1.001933,0.271408,1.700584,-2.625387,8.625950,-4.929076,-5.508003,4.105490,-1.265550,-6.064845,-9.070590,2.018970,-2.892899,-0.706511,1.093673,1.691366,-6.968849,-0.356716,-5.658939,8.396607,6.462287,-0.714122,5.098921,4.385246,-5.997625,7.588431,1.567240,3.503212,8.649610,7.639443,4.844826,-8.581333,3.026686,-4.895871,-5.280824,9.853601,3.193539,6.963201,9.897481,-2.212350,-5.125967,6.782851,2.465024,9.330321,-2.764079,3.483263,-0.028980], dtype = "float32")#candidate|6572|(99,)|const|float32
call_6570 = relay.TupleGetItem(func_1039_call(relay.reshape(const_6571.astype('uint16'), [2, 2, 6]), relay.reshape(const_6572.astype('float32'), [99,]), ), 2)
call_6573 = relay.TupleGetItem(func_1043_call(relay.reshape(const_6571.astype('uint16'), [2, 2, 6]), relay.reshape(const_6572.astype('float32'), [99,]), ), 2)
uop_6577 = relay.asin(const_6572.astype('float64')) # shape=(99,)
output = relay.Tuple([call_6548,call_6558,call_6561,call_6570,const_6571,uop_6577,])
output2 = relay.Tuple([call_6549,call_6559,call_6562,call_6573,const_6571,uop_6577,])
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_1592() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) {
  %0 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %1 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %2 = @func_1530() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %3 = %0.0;
  %4 = @func_261() /* ty=Tensor[(1120), float32] */;
  %5 = %1.1;
  %6 = %2.0;
  (%3, %4, %5, %6)
}

def @func_4685() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) {
  %7 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(250, 1), float32] */, dtype="float32") /* ty=Tensor[(250, 1), float32] */;
  %9 = reshape(%8, newshape=[250]) /* ty=Tensor[(250), float32] */;
  %10 = @func_1159(%9) /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %11 = cast(meta[relay.Constant][0] /* ty=Tensor[(250, 1), float32] */, dtype="float64") /* ty=Tensor[(250, 1), float64] */;
  %12 = %7.0;
  %13 = %10.0;
  %14 = @func_1420() /* ty=Tensor[(1120), float32] */;
  %15 = acosh(%11) /* ty=Tensor[(250, 1), float64] */;
  (%12, %13, %14, %15)
}

def @func_5144(%var_5118: Tensor[(12, 2, 11), float64]) -> Tensor[(12, 2, 11), float64] {
  %16 = cast(%var_5118, dtype="float64") /* ty=Tensor[(12, 2, 11), float64] */;
  log(%16) /* ty=Tensor[(12, 2, 11), float64] */
}

def @func_2252() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %17 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %18 = @func_261() /* ty=Tensor[(1120), float32] */;
  %19 = %17.0;
  (%18, %19)
}

def @func_17365(%var_17351: Tensor[(5, 3, 1), uint16], %var_17352: Tensor[(5, 3, 1), uint16]) -> (Tensor[(5, 3, ?), uint16],) {
  %20 = cast(%var_17352, dtype="uint16") /* ty=Tensor[(5, 3, 1), uint16] */;
  %21 = shape_of(%var_17351, dtype="int32") /* ty=Tensor[(3), int32] */;
  %22 = cast(%var_17351, dtype="uint16") /* ty=Tensor[(5, 3, 1), uint16] */;
  %23 = dyn.reshape(%20, %21, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %24 = right_shift(%22, %23) /* ty=Tensor[(5, 3, ?), uint16] */;
  (%24,)
}

def @func_3593() -> (Tensor[(7, 4, 4), float32],) {
  %25 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %26 = %25.1;
  (%26,)
}

def @func_9137() -> (Tensor[(7, 4, 4), float32],) {
  %27 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %28 = %27.1;
  (%28,)
}

def @func_14640() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 3, 16), bool]) {
  %29 = @func_7791() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %30 = @func_10780() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(14, 3, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 16), float32] */;
  %32 = erf(%31) /* ty=Tensor[(14, 3, 16), float32] */;
  %33 = cast(%32, dtype="float32") /* ty=Tensor[(14, 3, 16), float32] */;
  %34 = cos(%33) /* ty=Tensor[(14, 3, 16), float32] */;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(14, 3, 16), float64] */;
  %36 = atanh(%35) /* ty=Tensor[(14, 3, 16), float64] */;
  %37 = cast(%32, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %38 = shape_of(%36, dtype="int32") /* ty=Tensor[(3), int32] */;
  %39 = cast(%36, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %40 = dyn.reshape(%37, %38, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %41 = %29.0;
  %42 = %30.0;
  %43 = not_equal(%39, %40) /* ty=Tensor[(14, 3, 16), bool] */;
  (%41, %42, %43)
}

def @func_17065(%var_17060: Tensor[(250), float32]) -> (Tensor[(7, 10, 16), bool], Tensor[(250), float32], Tensor[(250), float32]) {
  %44 = cast(%var_17060, dtype="float32") /* ty=Tensor[(250), float32] */;
  %45 = reshape(%44, newshape=[250]) /* ty=Tensor[(250), float32] */;
  %46 = @func_1159(%45) /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %47 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %48 = %46.2;
  (%47, %48, %var_17060)
}

def @func_5459() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %49 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %50 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
  %51 = %49.0;
  %52 = %50.0;
  (%51, %52)
}

def @func_901(%var_888: Tensor[(7, 10, 16), float32]) -> (Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) {
  %53 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %54 = %53.1;
  %55 = cast(%var_888, dtype="uint32") /* ty=Tensor[(7, 10, 16), uint32] */;
  %56 = shape_of(%54, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%54, dtype="uint32") /* ty=Tensor[(7, 10, 16), uint32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %59 = cast(meta[relay.Constant][2] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %60 = reshape(%59, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %61 = @func_605(%60) /* ty=(Tensor[(7, 4, 4), float64],) */;
  %62 = maximum(%57, %58) /* ty=Tensor[(7, 10, 16), uint32] */;
  %63 = %61.0;
  (%62, %63, meta[relay.Constant][2] /* ty=Tensor[(112), float32] */)
}

def @func_2375() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %64 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %65 = %64.0;
  %66 = @func_1420() /* ty=Tensor[(1120), float32] */;
  (%65, %66)
}

def @func_15479() -> Tensor[(1120), float32] {
  %67 = @func_8104() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %67.2
}

def @func_15609() -> (Tensor[(1120), float32],) {
  %68 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %69 = %68.1;
  (%69,)
}

def @func_15906() -> (Tensor[(7, 4, 4), float64], Tensor[(11, 15, 5), float32]) {
  %70 = @func_15141() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %71 = %70.0;
  %72 = cast(%71, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %73 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
  %74 = erf(%72) /* ty=Tensor[(7, 4, 4), float64] */;
  %75 = %73.2;
  (%74, %75)
}

def @func_11788() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float64]) {
  %76 = @func_10780() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %77 = %76.0;
  %78 = cast(%77, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %79 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %80 = sigmoid(%78) /* ty=Tensor[(7, 4, 4), float64] */;
  (%79, %80)
}

def @func_14440() -> Tensor[(1120), float32] {
  %81 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %81.1
}

def @func_13289() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %82 = @func_11544() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %83 = @func_794() /* ty=Tensor[(1120), float32] */;
  %84 = %82.0;
  (%83, %84)
}

def @func_10284(%var_10278: Tensor[(10, 3), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(15, 6, 9), float64], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32]) {
  %85 = @func_9948() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %86 = @func_8315() /* ty=(Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) */;
  %87 = cast(%var_10278, dtype="float32") /* ty=Tensor[(10, 3), float32] */;
  %88 = reshape(%87, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %89 = @func_3110(%88) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %90 = %85.0;
  %91 = %86.0;
  %92 = %89.5;
  (%90, %91, %92, %var_10278)
}

def @func_1530() -> (Tensor[(7, 10, 16), bool],) {
  %93 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  (%93,)
}

def @func_13915() -> (Tensor[(1120), float32],) {
  %94 = @func_6786() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %95 = %94.1;
  (%95,)
}

def @func_3525(%var_3474: Tensor[(9, 2, 7), float32], %var_3485: Tensor[(9, 2, 7), float32], %var_3519: Tensor[(2, 560), float32]) -> (Tensor[(9, 2, 7), float32], Tensor[(7, 4, 4), float64], Tensor[(2, 560), float32]) {
  %96 = cast(%var_3474, dtype="float32") /* ty=Tensor[(9, 2, 7), float32] */;
  %97 = atanh(%96) /* ty=Tensor[(9, 2, 7), float32] */;
  %98 = cast(%var_3485, dtype="float32") /* ty=Tensor[(9, 2, 7), float32] */;
  %99 = shape_of(%97, dtype="int32") /* ty=Tensor[(3), int32] */;
  %100 = cast(%97, dtype="float32") /* ty=Tensor[(9, 2, 7), float32] */;
  %101 = dyn.reshape(%98, %99, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %102 = cast(%var_3519, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
  %103 = reshape(%102, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %104 = @func_901(%103) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %105 = maximum(%100, %101) /* ty=Tensor[(9, 2, 7), float32] */;
  %106 = %104.1;
  (%105, %106, %var_3519)
}

def @func_10378() -> (Tensor[(1120), float32],) {
  %107 = @func_5775() /* ty=Tensor[(1120), float32] */;
  (%107,)
}

def @func_16077() -> (Tensor[(7, 10, 16), bool],) {
  %108 = @func_5096() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %109 = %108.1;
  (%109,)
}

def @func_3748() -> (Tensor[(7, 4, 4), float32],) {
  %110 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %111 = %110.0;
  (%111,)
}

def @func_11136() -> (Tensor[(1120), float32],) {
  %112 = @func_2375() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %113 = %112.1;
  (%113,)
}

def @func_9948() -> (Tensor[(7, 4, 4), float32],) {
  %114 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %115 = %114.0;
  (%115,)
}

def @func_2436() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) {
  %116 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %117 = %116.1;
  %118 = cast(%117, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %119 = reshape(%118, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %120 = @func_1420() /* ty=Tensor[(1120), float32] */;
  %121 = @func_10(%119) /* ty=Tensor[(7, 10, 16), float32] */;
  (%117, %120, %121)
}

def @func_10901() -> Tensor[(1120), float32] {
  @func_9799() /* ty=Tensor[(1120), float32] */
}

def @func_3755() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %122 = @func_1237() /* ty=(Tensor[(1120), float32],) */;
  %123 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %124 = %122.0;
  %125 = %123.1;
  (%124, %125)
}

def @func_14806() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %126 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
  %127 = %126.0;
  %128 = @func_5288() /* ty=Tensor[(1120), float32] */;
  (%127, %128)
}

def @func_16493() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %129 = @func_8739() /* ty=(Tensor[(1120), float32],) */;
  %130 = @func_11214() /* ty=(Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32, Tensor[(7, 4, 4), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool]) */;
  %131 = %129.0;
  %132 = %130.3;
  (%131, %132)
}

def @func_1834() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %133 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %134 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %135 = %133.0;
  (%134, %135)
}

def @func_9568(%var_9465: Tensor[(7, 10, 16), int32]) -> (Tensor[(11, 15, 5), float32], Tensor[(11, 15, 5), bool], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(14, 16, 10), float32]) {
  %136 = @func_8782() /* ty=(Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) */;
  %137 = %136.1;
  %138 = cast(%137, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %139 = reshape(%138, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %140 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %141 = %140.0;
  %142 = cast(%141, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %143 = @func_4322() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %144 = @func_4379() /* ty=Tensor[(7, 10, 16), int32] */;
  %145 = cast(%var_9465, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %146 = shape_of(%144, dtype="int32") /* ty=Tensor[(3), int32] */;
  %147 = cast(%144, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %149 = @func_3724() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %150 = @func_8715() /* ty=Tensor[(14, 16, 10), float64] */;
  %151 = cast(%150, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
  %152 = @func_4254(%139) /* ty=Tensor[(11, 15, 5), bool] */;
  %153 = asinh(%142) /* ty=Tensor[(7, 4, 4), float32] */;
  %154 = %143.1;
  %155 = equal(%147, %148) /* ty=Tensor[(7, 10, 16), bool] */;
  %156 = %149.0;
  %157 = @func_5482() /* ty=Tensor[(1120), float32] */;
  %158 = log2(%151) /* ty=Tensor[(14, 16, 10), float32] */;
  (%137, %152, %153, %154, %155, %156, %157, %158)
}

def @func_2882() -> (Tensor[(7, 10, 16), bool],) {
  %159 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  (%159,)
}

def @func_1006() -> (Tensor[(11, 15, 5), float32],) {
  %160 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %161 = cosh(%160) /* ty=Tensor[(11, 15, 5), float32] */;
  (%161,)
}

def @func_14306() -> (Tensor[(1120), float32],) {
  %162 = @func_5288() /* ty=Tensor[(1120), float32] */;
  (%162,)
}

def @func_8456() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %163 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %164 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %165 = %163.0;
  %166 = @func_2064() /* ty=Tensor[(1120), float32] */;
  %167 = @func_5735() /* ty=Tensor[(1120), float32] */;
  %168 = %164.1;
  (%165, %166, %167, %168)
}

def @func_911() -> Tensor[(7, 4, 4), float32] {
  %169 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %169.1
}

def @func_1661() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %170 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %171 = @func_261() /* ty=Tensor[(1120), float32] */;
  (%170, %171)
}

def @func_1047() -> (Tensor[(1120), float32],) {
  %172 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %173 = %172.1;
  (%173,)
}

def @func_10509() -> (Tensor[(7, 10, 16), float64], Tensor[(1120), float32]) {
  %174 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="float64") /* ty=Tensor[(7, 10, 16), float64] */;
  %177 = @func_4685() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) */;
  %178 = asin(%176) /* ty=Tensor[(7, 10, 16), float64] */;
  %179 = %177.2;
  (%178, %179)
}

def @func_1390() -> (Tensor[(11, 15, 5), float32],) {
  %180 = @func_1006() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %181 = %180.0;
  (%181,)
}

def @func_2320() -> Tensor[(1120), float32] {
  @func_794() /* ty=Tensor[(1120), float32] */
}

def @func_11972() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(16, 7, 4), bool], Tensor[(1120), float32]) {
  %182 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %183 = @func_6932() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) */;
  %184 = cast(meta[relay.Constant][4] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %185 = cast(meta[relay.Constant][4] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %186 = reshape(%184, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %187 = reshape(%185, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %188 = @func_6036(%186, %187) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) */;
  %189 = %188.0;
  %190 = cast(meta[relay.Constant][4] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
  %192 = cast(%189, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %194 = @func_6708() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %195 = %182.0;
  %196 = %183.0;
  %197 = greater(%192, %193) /* ty=Tensor[(16, 7, 4), bool] */;
  %198 = %194.0;
  (%195, %196, %197, %198)
}

def @func_5096() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) {
  %199 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %200 = @func_3347() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %201 = %199.2;
  %202 = %200.0;
  (%201, %202)
}

def @func_16799() -> (Tensor[(7, 4, 4), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %203 = @func_9169() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %204 = cast(meta[relay.Constant][5] /* ty=Tensor[(250), float32] */, dtype="float32") /* ty=Tensor[(250), float32] */;
  %205 = reshape(%204, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
  %206 = %203.0;
  %207 = @func_835(%205) /* ty=Tensor[(5, 5, 10), float32] */;
  (%206, %207, meta[relay.Constant][5] /* ty=Tensor[(250), float32] */)
}

def @func_12646() -> Tensor[(1120), float32] {
  %208 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
  %208.1
}

def @func_5844(%var_5836: Tensor[(1155), float64]) -> (Tensor[(11, 15, 5), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1155), float64], Tensor[(7, 4, 4), float32]) {
  %209 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %210 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %211 = %210.0;
  %212 = cast(%211, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %213 = reshape(%212, newshape=[560, 2]) /* ty=Tensor[(560, 2), float32] */;
  %214 = @func_5727(%213) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(560, 2), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), bool]) */;
  %215 = cast(%var_5836, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %216 = reshape(%215, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float64] */;
  %217 = @func_4853(%216) /* ty=(Tensor[(15, 7, 11), float64], Tensor[(1120), float32], Tensor[(15, 7, 11), bool], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %218 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %219 = %209.0;
  %220 = %214.2;
  %221 = %217.5;
  %222 = %218.0;
  (%219, %211, %220, %221, %var_5836, %222)
}

def @func_2038() -> (Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %223 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %224 = %223.1;
  %225 = cast(%224, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %226 = reshape(%225, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), bool] */;
  %227 = @func_492(%226) /* ty=(Tensor[(7, 10, 16), bool],) */;
  %228 = %227.0;
  %229 = cast(%224, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %230 = shape_of(%228, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%228, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %233 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %234 = logical_or(%231, %232) /* ty=Tensor[(7, 10, 16), bool] */;
  %235 = %233.0;
  (%234, %235)
}

def @func_15807() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %236 = @func_15558() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %237 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %238 = @func_6419() /* ty=Tensor[(1120), float32] */;
  %239 = @func_13660() /* ty=Tensor[(1120), float32] */;
  %240 = %236.0;
  %241 = %237.0;
  (%238, %239, %240, %241)
}

def @func_17029() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), bool], Tensor[(112), float32]) {
  %242 = @func_10378() /* ty=(Tensor[(1120), float32],) */;
  %243 = cast(meta[relay.Constant][6] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %244 = reshape(%243, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %245 = @func_16184(%244) /* ty=(Tensor[(7, 4, 4), bool],) */;
  %246 = %242.0;
  %247 = %245.0;
  (%246, %247, meta[relay.Constant][6] /* ty=Tensor[(112), float32] */)
}

def @func_14957() -> Tensor[(1120), float32] {
  @func_12051() /* ty=Tensor[(1120), float32] */
}

def @func_12835() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %248 = @func_5054() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %249 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %250 = @func_2121() /* ty=Tensor[(1120), float32] */;
  %251 = %248.0;
  %252 = %249.0;
  (%250, %251, %252)
}

def @func_8350(%var_8339: Tensor[(13, 3, 13), int64], %var_8340: Tensor[(13, 3, 13), int64]) -> Tensor[(13, 3, 13), int64] {
  %253 = cast(%var_8340, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
  %254 = shape_of(%var_8339, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(%var_8339, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  minimum(%255, %256) /* ty=Tensor[(13, 3, 13), int64] */
}

def @func_9409() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %257 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
  %258 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %259 = %257.0;
  %260 = %258.0;
  (%259, %260)
}

def @func_15579() -> (Tensor[(13, 3, 8), float64],) {
  %261 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
  %262 = %261.0;
  (%262,)
}

def @func_10699() -> Tensor[(1120), float32] {
  @func_1500() /* ty=Tensor[(1120), float32] */
}

def @func_5922() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %263 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %264 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %265 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %266 = %263.0;
  %267 = %264.0;
  %268 = %265.1;
  (%266, %267, %268)
}

def @func_13660() -> Tensor[(1120), float32] {
  %269 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %269.1
}

def @func_14489() -> (Tensor[(7, 4, 4), float32],) {
  %270 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %271 = %270.1;
  (%271,)
}

def @func_15658() -> Tensor[(1120), float32] {
  %272 = @func_5784() /* ty=(Tensor[(1120), float32],) */;
  %272.0
}

def @func_11291() -> (Tensor[(1120), float32], Tensor[(1, 30), float32], Tensor[(324), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %273 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %274 = cast(meta[relay.Constant][7] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %275 = reshape(%274, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %276 = @func_6376(%275) /* ty=(Tensor[(3, 9, 12), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1, 30), float32]) */;
  %277 = @func_3938() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %278 = @func_4962() /* ty=(Tensor[(1120), float32],) */;
  %279 = %273.1;
  %280 = %276.3;
  %281 = %277.1;
  %282 = %278.0;
  (%279, %280, meta[relay.Constant][7] /* ty=Tensor[(324), float64] */, %281, %282)
}

def @func_12589() -> (Tensor[(7, 4, 4), float32],) {
  %283 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %284 = %283.1;
  (%284,)
}

def @func_11544() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %285 = @func_3755() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %286 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %287 = @func_5775() /* ty=Tensor[(1120), float32] */;
  %288 = @func_9799() /* ty=Tensor[(1120), float32] */;
  %289 = %285.1;
  %290 = %286.1;
  (%287, %288, %289, %290)
}

def @func_9723() -> (Tensor[(1120), float32],) {
  %291 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
  %292 = %291.0;
  (%292,)
}

def @func_10120() -> Tensor[(1120), float32] {
  %293 = @func_2436() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) */;
  %293.0
}

def @func_14036() -> (Tensor[(1120), float32], Tensor[(14, 16, 10), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %294 = @func_13844() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %295 = @func_11072() /* ty=(Tensor[(14, 16, 10), float64], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %296 = %295.0;
  %297 = cast(%296, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
  %298 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
  %299 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %300 = %294.1;
  %301 = sin(%297) /* ty=Tensor[(14, 16, 10), float64] */;
  %302 = %298.0;
  %303 = %299.1;
  (%300, %301, %302, %303)
}

def @func_1420() -> Tensor[(1120), float32] {
  %304 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %304.1
}

def @func_12477(%var_12433: float32, %var_12434: Tensor[(16, 10, 1), float32]) -> (Tensor[(16, 10, 1), uint64], Tensor[(16, 10, 1), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %305 = cast(%var_12433, dtype="bool") /* ty=bool */;
  %306 = cast(%var_12434, dtype="bool") /* ty=Tensor[(16, 10, 1), bool] */;
  %307 = not_equal(%305, %306) /* ty=Tensor[(16, 10, 1), bool] */;
  %308 = cast(%var_12433, dtype="uint64") /* ty=uint64 */;
  %309 = cast(%307, dtype="uint64") /* ty=Tensor[(16, 10, 1), uint64] */;
  %310 = cast(%var_12433, dtype="bool") /* ty=bool */;
  %311 = cast(%var_12434, dtype="bool") /* ty=Tensor[(16, 10, 1), bool] */;
  %312 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %313 = minimum(%308, %309) /* ty=Tensor[(16, 10, 1), uint64] */;
  %314 = less(%310, %311) /* ty=Tensor[(16, 10, 1), bool] */;
  %315 = @func_7360() /* ty=Tensor[(7, 4, 4), float32] */;
  %316 = %312.1;
  (%313, %314, %315, %316)
}

def @func_5997() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %317 = @func_261() /* ty=Tensor[(1120), float32] */;
  %318 = @func_5482() /* ty=Tensor[(1120), float32] */;
  %319 = @func_2121() /* ty=Tensor[(1120), float32] */;
  (%317, %318, %319)
}

def @func_9008(%var_8978: Tensor[(5, 50), float32], %var_8979: Tensor[(144), float32]) -> (Tensor[(1120), float32], Tensor[(144, 1), float32], Tensor[(5, 50), float32], Tensor[(144), float32]) {
  %320 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %321 = cast(%var_8978, dtype="float32") /* ty=Tensor[(5, 50), float32] */;
  %322 = cast(%var_8979, dtype="float32") /* ty=Tensor[(144), float32] */;
  %323 = cast(%var_8978, dtype="float64") /* ty=Tensor[(5, 50), float64] */;
  %324 = reshape(%321, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
  %325 = reshape(%322, newshape=[144, 1]) /* ty=Tensor[(144, 1), float32] */;
  %326 = reshape(%323, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
  %327 = @func_7186(%324, %325, %326) /* ty=(Tensor[(5, 5, 10), uint64], Tensor[(6, 3, 8), float32], Tensor[(144, 1), float32], Tensor[(5, 5, 10), bool], Tensor[(5, 5, 10), float32]) */;
  %328 = %320.0;
  %329 = %327.2;
  (%328, %329, %var_8978, %var_8979)
}

def @func_9237() -> Tensor[(7, 4, 4), float32] {
  %330 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %330.0
}

def @func_15402() -> (Tensor[(9, 3, 5), float32],) {
  %331 = cast(meta[relay.Constant][8] /* ty=Tensor[(9, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
  %332 = tan(%331) /* ty=Tensor[(9, 3, 5), float32] */;
  (%332,)
}

def @func_14259(%var_14179: Tensor[(112), float32], %var_14201: Tensor[(825), float32]) -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float64], Tensor[(112), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(7, 10, 16), bool], float32, Tensor[(16, 8), float32], Tensor[(1120), float32]) {
  %333 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
  %334 = cast(%var_14179, dtype="float32") /* ty=Tensor[(112), float32] */;
  %335 = reshape(%334, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %336 = @func_11096() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %337 = cast(%var_14201, dtype="float32") /* ty=Tensor[(825), float32] */;
  %338 = reshape(%337, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %339 = cast(-0.921279f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %340 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 8), float32] */;
  %341 = reshape(%339, newshape=[]) /* ty=float32 */;
  %342 = reshape(%340, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %343 = @func_11403(%341, %342) /* ty=(Tensor[(16, 1, 8), float32], Tensor[(7, 10, 16), bool]) */;
  %344 = @func_8456() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %345 = @func_5288() /* ty=Tensor[(1120), float32] */;
  %346 = %333.0;
  %347 = @func_8385(%335) /* ty=Tensor[(7, 4, 4), float64] */;
  %348 = @func_6419() /* ty=Tensor[(1120), float32] */;
  %349 = %336.0;
  %350 = @func_4254(%338) /* ty=Tensor[(11, 15, 5), bool] */;
  %351 = %343.1;
  %352 = %344.1;
  (%345, %346, %347, %var_14179, %348, %349, %350, %var_14201, %351, -0.921279f /* ty=float32 */, meta[relay.Constant][9] /* ty=Tensor[(16, 8), float32] */, %352)
}

def @func_1237() -> (Tensor[(1120), float32],) {
  %353 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %354 = %353.2;
  (%354,)
}

def @func_10824() -> (Tensor[(11, 1, 3), float32], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32], Tensor[(30), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32]) {
  %355 = cast(meta[relay.Constant][10] /* ty=Tensor[(11, 1, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 3), float32] */;
  %356 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %357 = cast(meta[relay.Constant][11] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %358 = reshape(%357, newshape=[10, 3]) /* ty=Tensor[(10, 3), float32] */;
  %359 = @func_10284(%358) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(15, 6, 9), float64], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32]) */;
  %360 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %361 = @func_10085() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %362 = sinh(%355) /* ty=Tensor[(11, 1, 3), float32] */;
  %363 = %356.3;
  %364 = %359.3;
  %365 = %360.1;
  %366 = %361.0;
  (%362, %363, %364, meta[relay.Constant][11] /* ty=Tensor[(30), float32] */, %365, %366)
}

def @func_11447() -> (Tensor[(1120), float32],) {
  %367 = @func_794() /* ty=Tensor[(1120), float32] */;
  (%367,)
}

def @func_10887(%var_10849: Tensor[(12, 2, 4), bool]) -> Tensor[(12, 2, 4), bool] {
  %368 = cast(meta[relay.Constant][12] /* ty=Tensor[(12, 2, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
  %369 = shape_of(%var_10849, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%var_10849, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%370, %371) /* ty=Tensor[(12, 2, 4), bool] */
}

def @func_8385(%var_8369: Tensor[(7, 4, 4), float32]) -> Tensor[(7, 4, 4), float64] {
  %372 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %373 = %372.0;
  %374 = cast(%var_8369, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %375 = shape_of(%373, dtype="int32") /* ty=Tensor[(3), int32] */;
  %376 = cast(%373, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %377 = dyn.reshape(%374, %375, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%376, %377) /* ty=Tensor[(7, 4, 4), float64] */
}

def @func_13499() -> (Tensor[(1120), float32],) {
  %378 = @func_4105() /* ty=(Tensor[(1120), float32],) */;
  %379 = %378.0;
  (%379,)
}

def @func_189() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) {
  %380 = cast(meta[relay.Constant][13] /* ty=Tensor[(7, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %381 = cast(meta[relay.Constant][14] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %382 = reshape(%381, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %383 = atanh(%380) /* ty=Tensor[(7, 4, 4), float32] */;
  %384 = @func_10(%382) /* ty=Tensor[(7, 10, 16), float32] */;
  (%383, %384, meta[relay.Constant][14] /* ty=Tensor[(1120), float32] */)
}

def @func_7702() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) {
  %385 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %386 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
  %387 = cast(meta[relay.Constant][15] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %388 = reshape(%387, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %389 = @func_3110(%388) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %390 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %391 = %385.0;
  %392 = %386.0;
  %393 = %389.5;
  %394 = %390.0;
  (%391, %392, %393, meta[relay.Constant][15] /* ty=Tensor[(30, 1), float32] */, %394)
}

def @func_10(%var_5: Tensor[(7, 10, 16), float32]) -> Tensor[(7, 10, 16), float32] {
  %395 = cast(%var_5, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  log(%395) /* ty=Tensor[(7, 10, 16), float32] */
}

def @func_4640() -> Tensor[(7, 10, 16), bool] {
  %396 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %396.1
}

def @func_15350() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %397 = @func_14296() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %398 = @func_10217() /* ty=Tensor[(1120), float32] */;
  %399 = %397.0;
  %400 = @func_10699() /* ty=Tensor[(1120), float32] */;
  (%398, %399, %400)
}

def @func_8626() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %401 = @func_4105() /* ty=(Tensor[(1120), float32],) */;
  %402 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %403 = %401.0;
  %404 = @func_7360() /* ty=Tensor[(7, 4, 4), float32] */;
  (%402, %403, %404)
}

def @func_8897() -> (Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %405 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %406 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %407 = %405.0;
  (%406, %407)
}

def @func_2942() -> (Tensor[(1120), float32],) {
  %408 = @func_2064() /* ty=Tensor[(1120), float32] */;
  (%408,)
}

def @func_9042() -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(1120), float32]) {
  %409 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
  %410 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %411 = %409.0;
  %412 = %410.0;
  %413 = @func_2064() /* ty=Tensor[(1120), float32] */;
  (%411, %412, %413)
}

def @func_3701(%var_3645: Tensor[(12, 4, 1), float32]) -> (Tensor[(12, 4, 1), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), bool], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %414 = cast(%var_3645, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
  %415 = cast(meta[relay.Constant][16] /* ty=Tensor[(1120), bool] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %416 = reshape(%415, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), bool] */;
  %417 = @func_492(%416) /* ty=(Tensor[(7, 10, 16), bool],) */;
  %418 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %419 = atanh(%414) /* ty=Tensor[(12, 4, 1), float32] */;
  %420 = %417.0;
  %421 = @func_957() /* ty=Tensor[(1120), float32] */;
  %422 = %418.1;
  (%419, %420, meta[relay.Constant][16] /* ty=Tensor[(1120), bool] */, %421, %422)
}

def @func_3938() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %423 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %424 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %425 = %423.2;
  %426 = %424.1;
  (%425, %426)
}

def @func_541() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %427 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %428 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %429 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %430 = %427.0;
  %431 = %428.0;
  %432 = %429.0;
  (%430, %431, %432)
}

def @func_10142() -> Tensor[(1120), float32] {
  %433 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %433.1
}

def @func_12426() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %434 = @func_3938() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %435 = %434.1;
  %436 = @func_957() /* ty=Tensor[(1120), float32] */;
  (%435, %436)
}

def @func_5482() -> Tensor[(1120), float32] {
  %437 = @func_3805() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) */;
  %437.0
}

def @func_6141() -> (Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %438 = cast(meta[relay.Constant][17] /* ty=Tensor[(6, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %439 = sinh(%438) /* ty=Tensor[(6, 5, 9), float32] */;
  %440 = cast(%439, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %441 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %442 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %443 = sigmoid(%440) /* ty=Tensor[(6, 5, 9), float32] */;
  %444 = %441.1;
  %445 = %442.0;
  (%443, %444, %445)
}

def @func_14783() -> Tensor[(7, 10, 16), bool] {
  %446 = @func_7218() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %446.0
}

def @func_9700() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %447 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
  %448 = %447.0;
  %449 = @func_2064() /* ty=Tensor[(1120), float32] */;
  (%448, %449)
}

def @func_5288() -> Tensor[(1120), float32] {
  @func_1420() /* ty=Tensor[(1120), float32] */
}

def @func_1883() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %450 = @func_1218() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %451 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %452 = %450.0;
  %453 = %451.0;
  (%452, %453)
}

def @func_2121() -> Tensor[(1120), float32] {
  @func_1500() /* ty=Tensor[(1120), float32] */
}

def @func_6540(%var_6535: Tensor[(5, 14, 3), int64], %var_6536: Tensor[(5, 14, 3), int64]) -> Tensor[(5, 14, 3), bool] {
  %454 = cast(%var_6536, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %455 = shape_of(%var_6535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %456 = cast(%var_6535, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %457 = dyn.reshape(%454, %455, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%456, %457) /* ty=Tensor[(5, 14, 3), bool] */
}

def @func_11740() -> (Tensor[(1120), float32],) {
  %458 = @func_1500() /* ty=Tensor[(1120), float32] */;
  (%458,)
}

def @func_15758() -> Tensor[(1120), float32] {
  %459 = @func_1218() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %459.0
}

def @func_12906(%var_12889: Tensor[(14, 13, 10), float32]) -> (Tensor[(14, 13, 10), bool],) {
  %460 = cast(%var_12889, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
  %461 = asin(%460) /* ty=Tensor[(14, 13, 10), float32] */;
  %462 = cast(%var_12889, dtype="bool") /* ty=Tensor[(14, 13, 10), bool] */;
  %463 = shape_of(%461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %464 = cast(%461, dtype="bool") /* ty=Tensor[(14, 13, 10), bool] */;
  %465 = dyn.reshape(%462, %463, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %466 = less_equal(%464, %465) /* ty=Tensor[(14, 13, 10), bool] */;
  (%466,)
}

def @func_4945() -> Tensor[(1120), float32] {
  %467 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %467.0
}

def @func_2082() -> (Tensor[(7, 4, 4), float32],) {
  %468 = @func_911() /* ty=Tensor[(7, 4, 4), float32] */;
  (%468,)
}

def @func_4916() -> (Tensor[(7, 10, 16), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %469 = @func_4379() /* ty=Tensor[(7, 10, 16), int32] */;
  %470 = cast(%469, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %471 = reshape(%470, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), bool] */;
  %472 = @func_492(%471) /* ty=(Tensor[(7, 10, 16), bool],) */;
  %473 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
  %474 = %472.0;
  %475 = %473.0;
  (%469, %474, %475)
}

def @func_11072() -> (Tensor[(14, 16, 10), float64], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %476 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %477 = @func_8715() /* ty=Tensor[(14, 16, 10), float64] */;
  %478 = @func_1420() /* ty=Tensor[(1120), float32] */;
  %479 = %476.0;
  (%477, %478, %479)
}

def @func_16008(%var_15996: Tensor[(144), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(125, 2), float32], Tensor[(144), float32]) {
  %480 = cast(meta[relay.Constant][18] /* ty=Tensor[(125, 2), float32] */, dtype="float32") /* ty=Tensor[(125, 2), float32] */;
  %481 = cast(%var_15996, dtype="float32") /* ty=Tensor[(144), float32] */;
  %482 = reshape(%480, newshape=[5, 50]) /* ty=Tensor[(5, 50), float32] */;
  %483 = reshape(%481, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %484 = @func_9008(%482, %483) /* ty=(Tensor[(1120), float32], Tensor[(144, 1), float32], Tensor[(5, 50), float32], Tensor[(144), float32]) */;
  %485 = @func_794() /* ty=Tensor[(1120), float32] */;
  %486 = %484.0;
  (%485, %486, meta[relay.Constant][18] /* ty=Tensor[(125, 2), float32] */, %var_15996)
}

def @func_13431(%var_13419: Tensor[(13, 5, 5), float64]) -> Tensor[(13, 5, 5), float64] {
  %487 = cast(%var_13419, dtype="float64") /* ty=Tensor[(13, 5, 5), float64] */;
  acosh(%487) /* ty=Tensor[(13, 5, 5), float64] */
}

def @func_11596() -> (Tensor[(1120), float32],) {
  %488 = @func_8051() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %489 = %488.1;
  (%489,)
}

def @func_5727(%var_5706: Tensor[(560, 2), float32]) -> (Tensor[(7, 10, 16), uint32], Tensor[(560, 2), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), bool]) {
  %490 = cast(%var_5706, dtype="float32") /* ty=Tensor[(560, 2), float32] */;
  %491 = reshape(%490, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %492 = @func_901(%491) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %493 = @func_911() /* ty=Tensor[(7, 4, 4), float32] */;
  %494 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %498 = %492.0;
  %499 = @func_957() /* ty=Tensor[(1120), float32] */;
  %500 = logical_or(%496, %497) /* ty=Tensor[(7, 4, 4), bool] */;
  (%498, %var_5706, %499, %500)
}

def @func_9169() -> (Tensor[(7, 4, 4), float32],) {
  %501 = @func_3724() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %502 = %501.1;
  (%502,)
}

def @func_12729(%var_12716: Tensor[(96, 1), bool]) -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(12, 2, 4), bool], Tensor[(96, 1), bool], Tensor[(1120), float32]) {
  %503 = @func_8051() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %504 = @func_3908() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %505 = %504.0;
  %506 = cast(%505, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %507 = cast(%var_12716, dtype="bool") /* ty=Tensor[(96, 1), bool] */;
  %508 = reshape(%507, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %509 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %510 = %503.1;
  %511 = sigmoid(%506) /* ty=Tensor[(11, 15, 5), float32] */;
  %512 = @func_10887(%508) /* ty=Tensor[(12, 2, 4), bool] */;
  %513 = %509.0;
  (%510, %511, %512, %var_12716, %513)
}

def @func_13194() -> Tensor[(1120), float32] {
  @func_1420() /* ty=Tensor[(1120), float32] */
}

def @func_3110(%var_3054: Tensor[(30), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %514 = cast(%var_3054, dtype="float32") /* ty=Tensor[(30), float32] */;
  %515 = reshape(%514, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), float32] */;
  %516 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %517 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %518 = @func_261() /* ty=Tensor[(1120), float32] */;
  %519 = @func_261() /* ty=Tensor[(1120), float32] */;
  %520 = @func_2598(%515) /* ty=Tensor[(?, 10, 3), int8] */;
  %521 = %516.0;
  %522 = %517.1;
  (%518, %519, %520, %var_3054, %521, %522)
}

def @func_17344() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %523 = @func_5633() /* ty=(Tensor[(1120), float32],) */;
  %524 = @func_15239() /* ty=Tensor[(1120), float32] */;
  %525 = %523.0;
  (%524, %525)
}

def @func_11096() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %526 = @func_5422() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %527 = %526.0;
  %528 = @func_8808() /* ty=Tensor[(1120), float32] */;
  (%527, %528)
}

def @func_7599(%var_7579: Tensor[(825), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(6, 5, 9), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(1120), float32]) {
  %529 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %530 = @func_6141() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %531 = cast(%var_7579, dtype="float32") /* ty=Tensor[(825), float32] */;
  %532 = reshape(%531, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %533 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %534 = %529.0;
  %535 = %530.0;
  %536 = @func_4254(%532) /* ty=Tensor[(11, 15, 5), bool] */;
  %537 = %533.0;
  (%534, %535, %536, %var_7579, %537)
}

def @func_605(%var_596: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), float64],) {
  %538 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %539 = %538.0;
  %540 = cast(%var_596, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %541 = shape_of(%539, dtype="int32") /* ty=Tensor[(3), int32] */;
  %542 = cast(%539, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %543 = dyn.reshape(%540, %541, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %544 = mod(%542, %543) /* ty=Tensor[(7, 4, 4), float64] */;
  (%544,)
}

def @func_17044() -> Tensor[(7, 4, 4), bool] {
  %545 = @func_17029() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), bool], Tensor[(112), float32]) */;
  %545.1
}

def @func_17559() -> (Tensor[(1120), float32],) {
  %546 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %547 = %546.0;
  (%547,)
}

def @func_6419() -> Tensor[(1120), float32] {
  %548 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %548.0
}

def @func_6036(%var_6010: Tensor[(16, 7, 4), bool], %var_6011: Tensor[(16, 7, 4), bool]) -> (Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) {
  %549 = cast(%var_6011, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %550 = shape_of(%var_6010, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_6010, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %554 = logical_or(%551, %552) /* ty=Tensor[(16, 7, 4), bool] */;
  %555 = %553.0;
  (%554, %555)
}

def @func_2598(%var_2551: Tensor[(1, 10, 3), float32]) -> Tensor[(?, 10, 3), int8] {
  %556 = cast(%var_2551, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
  %557 = sqrt(%556) /* ty=Tensor[(1, 10, 3), float32] */;
  %558 = cast(%557, dtype="bool") /* ty=Tensor[(1, 10, 3), bool] */;
  %559 = shape_of(%var_2551, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%var_2551, dtype="bool") /* ty=Tensor[(1, 10, 3), bool] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %562 = logical_or(%560, %561) /* ty=Tensor[(?, 10, 3), bool] */;
  %563 = cast(%557, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
  %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
  %565 = cast(%562, dtype="float64") /* ty=Tensor[(?, 10, 3), float64] */;
  %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %567 = floor_divide(%565, %566) /* ty=Tensor[(?, 10, 3), float64] */;
  %568 = cast(%567, dtype="int8") /* ty=Tensor[(?, 10, 3), int8] */;
  %569 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %570 = cast(%557, dtype="int8") /* ty=Tensor[(1, 10, 3), int8] */;
  %571 = dyn.reshape(%568, %569, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  subtract(%570, %571) /* ty=Tensor[(?, 10, 3), int8] */
}

def @func_794() -> Tensor[(1120), float32] {
  %572 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %572.0
}

def @func_10309() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %573 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %574 = @func_9723() /* ty=(Tensor[(1120), float32],) */;
  %575 = %573.0;
  %576 = %574.0;
  (%575, %576)
}

def @func_5735() -> Tensor[(1120), float32] {
  %577 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
  %577.0
}

def @func_355() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %578 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %579 = %578.0;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %581 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %582 = sin(%580) /* ty=Tensor[(7, 4, 4), float32] */;
  %583 = %581.0;
  (%582, %583)
}

def @func_7147(%var_7141: Tensor[(1456), float32]) -> (Tensor[(5, 5, 10), float32], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) {
  %584 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %585 = cast(%var_7141, dtype="float32") /* ty=Tensor[(1456), float32] */;
  %586 = reshape(%585, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %587 = @func_1948(%586) /* ty=(Tensor[(13, 8, 14), float32],) */;
  %588 = %584.1;
  %589 = %587.0;
  (%588, %589, %var_7141)
}

def @func_4165() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %590 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %591 = %590.0;
  %592 = cast(%591, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %593 = reshape(%592, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %594 = @func_4043(%593) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64], Tensor[(1120), float32]) */;
  %595 = %594.0;
  (%591, %595)
}

def @func_4962() -> (Tensor[(1120), float32],) {
  %596 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
  %597 = %596.0;
  (%597,)
}

def @func_2492() -> (Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %598 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %599 = cast(meta[relay.Constant][20] /* ty=Tensor[(250), float32] */, dtype="float32") /* ty=Tensor[(250), float32] */;
  %600 = reshape(%599, newshape=[250]) /* ty=Tensor[(250), float32] */;
  %601 = @func_1159(%600) /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %602 = cast(meta[relay.Constant][20] /* ty=Tensor[(250), float32] */, dtype="float32") /* ty=Tensor[(250), float32] */;
  %603 = %598.1;
  %604 = %601.1;
  %605 = cosh(%602) /* ty=Tensor[(250), float32] */;
  (%603, %604, %605)
}

def @func_15470() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %606 = @func_12206() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %607 = @func_7360() /* ty=Tensor[(7, 4, 4), float32] */;
  %608 = %606.0;
  (%607, %608)
}

def @func_13731() -> (Tensor[(7, 4, 4), float32],) {
  %609 = @func_10780() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %610 = %609.3;
  (%610,)
}

def @func_4471() -> Tensor[(1120), float32] {
  %611 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %611.2
}

def @func_688(%var_683: float32) -> (Tensor[(6, 4, 1), float32],) {
  %612 = cast(%var_683, dtype="float32") /* ty=float32 */;
  %613 = cast(meta[relay.Constant][21] /* ty=Tensor[(6, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 1), float32] */;
  %614 = floor_mod(%612, %613) /* ty=Tensor[(6, 4, 1), float32] */;
  (%614,)
}

def @func_553() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %615 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %616 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %617 = %615.0;
  (%616, %617)
}

def @func_8739() -> (Tensor[(1120), float32],) {
  %618 = @func_1237() /* ty=(Tensor[(1120), float32],) */;
  %619 = %618.0;
  (%619,)
}

def @func_1029() -> (Tensor[(1120), float32],) {
  %620 = @func_794() /* ty=Tensor[(1120), float32] */;
  (%620,)
}

def @func_5422() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %621 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %622 = @func_3805() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) */;
  %623 = %621.0;
  %624 = %622.1;
  (%623, %624)
}

def @func_4603() -> (Tensor[(1120), float32],) {
  %625 = @func_4141() /* ty=(Tensor[(1120), float32],) */;
  %626 = %625.0;
  (%626,)
}

def @func_5518(%var_5505: Tensor[(13, 13, 10), int16], %var_5506: Tensor[(13, 13, 10), int16]) -> (Tensor[(13, 13, 10), bool], Tensor[(1120), float32]) {
  %627 = cast(%var_5506, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
  %628 = shape_of(%var_5505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %629 = cast(%var_5505, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
  %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %631 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %632 = greater_equal(%629, %630) /* ty=Tensor[(13, 13, 10), bool] */;
  %633 = %631.0;
  (%632, %633)
}

def @func_9113() -> (Tensor[(1120), float32],) {
  %634 = @func_8051() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %635 = %634.0;
  (%635,)
}

def @func_13981() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), float64], Tensor[(1120), float32]) {
  %636 = @func_13844() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %637 = @func_3593() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %638 = @func_9100() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %639 = %638.2;
  %640 = cast(%639, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %641 = reshape(%640, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), int32] */;
  %642 = @func_9568(%641) /* ty=(Tensor[(11, 15, 5), float32], Tensor[(11, 15, 5), bool], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(14, 16, 10), float32]) */;
  %643 = %642.0;
  %644 = cast(%643, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
  %645 = %636.1;
  %646 = %637.0;
  %647 = log(%644) /* ty=Tensor[(11, 15, 5), float64] */;
  %648 = @func_1500() /* ty=Tensor[(1120), float32] */;
  (%645, %646, %639, %647, %648)
}

def @func_4141() -> (Tensor[(1120), float32],) {
  %649 = @func_957() /* ty=Tensor[(1120), float32] */;
  (%649,)
}

def @func_7659() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %650 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %651 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %652 = %650.1;
  %653 = %651.1;
  (%652, %653)
}

def @func_4322() -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %654 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %655 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %656 = %654.0;
  %657 = %655.1;
  (%656, %657)
}

def @func_10780() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %658 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %659 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
  %660 = @func_5967() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %661 = %658.0;
  %662 = %659.1;
  %663 = @func_10217() /* ty=Tensor[(1120), float32] */;
  %664 = %660.0;
  (%661, %662, %663, %664)
}

def @func_15245() -> Tensor[(7, 10, 16), bool] {
  %665 = @func_6786() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %665.0
}

def @func_5584() -> (Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) {
  %666 = cast(meta[relay.Constant][23] /* ty=Tensor[(13, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
  %667 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(13, 3, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %668 = cast(meta[relay.Constant][22] /* ty=Tensor[(13, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
  %669 = dyn.reshape(%666, %667, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %670 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %671 = power(%668, %669) /* ty=Tensor[(13, 3, 8), float64] */;
  %672 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %673 = %670.0;
  (%671, %672, %673)
}

def @func_7186(%var_7158: Tensor[(5, 5, 10), float32], %var_7169: Tensor[(144, 1), float32], %var_7175: Tensor[(5, 5, 10), float64]) -> (Tensor[(5, 5, 10), uint64], Tensor[(6, 3, 8), float32], Tensor[(144, 1), float32], Tensor[(5, 5, 10), bool], Tensor[(5, 5, 10), float32]) {
  %674 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %675 = %674.1;
  %676 = cast(%var_7158, dtype="uint64") /* ty=Tensor[(5, 5, 10), uint64] */;
  %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%675, dtype="uint64") /* ty=Tensor[(5, 5, 10), uint64] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %680 = cast(%var_7169, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
  %681 = reshape(%680, newshape=[6, 3, 8]) /* ty=Tensor[(6, 3, 8), float32] */;
  %682 = @func_6075(%681) /* ty=(Tensor[(6, 3, 8), float32],) */;
  %683 = cast(%var_7158, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %684 = tan(%683) /* ty=Tensor[(5, 5, 10), float64] */;
  %685 = cast(%var_7175, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %686 = shape_of(%684, dtype="int32") /* ty=Tensor[(3), int32] */;
  %687 = cast(%684, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %688 = dyn.reshape(%685, %686, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %689 = cast(%684, dtype="float32") /* ty=Tensor[(5, 5, 10), float32] */;
  %690 = bitwise_xor(%678, %679) /* ty=Tensor[(5, 5, 10), uint64] */;
  %691 = %682.0;
  %692 = equal(%687, %688) /* ty=Tensor[(5, 5, 10), bool] */;
  %693 = log10(%689) /* ty=Tensor[(5, 5, 10), float32] */;
  (%690, %691, %var_7169, %692, %693)
}

def @func_5961() -> (Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32]) {
  %694 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %695 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %696 = %694.0;
  %697 = %695.0;
  (%696, %697)
}

def @func_1334() -> (Tensor[(7, 4, 4), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64]) {
  %698 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %699 = %698.0;
  %700 = cast(meta[relay.Constant][24] /* ty=Tensor[(7, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%699, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = @func_1218() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %705 = cast(%699, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %706 = less_equal(%702, %703) /* ty=Tensor[(7, 4, 4), bool] */;
  %707 = %704.1;
  %708 = acosh(%705) /* ty=Tensor[(7, 4, 4), float64] */;
  (%706, %707, %708)
}

def @func_9978() -> (Tensor[(1120), float32],) {
  %709 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %710 = %709.1;
  (%710,)
}

def @func_16121(%var_16105: Tensor[(7, 10, 16), bool]) -> Tensor[(7, 10, 16), uint8] {
  %711 = @func_4640() /* ty=Tensor[(7, 10, 16), bool] */;
  %712 = cast(%var_16105, dtype="uint8") /* ty=Tensor[(7, 10, 16), uint8] */;
  %713 = shape_of(%711, dtype="int32") /* ty=Tensor[(3), int32] */;
  %714 = cast(%711, dtype="uint8") /* ty=Tensor[(7, 10, 16), uint8] */;
  %715 = dyn.reshape(%712, %713, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  subtract(%714, %715) /* ty=Tensor[(7, 10, 16), uint8] */
}

def @func_6791() -> (Tensor[(1120), float32],) {
  %716 = @func_5633() /* ty=(Tensor[(1120), float32],) */;
  %717 = %716.0;
  (%717,)
}

def @func_10344() -> Tensor[(7, 4, 4), float32] {
  %718 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %718.3
}

def @func_4379() -> Tensor[(7, 10, 16), int32] {
  %719 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %720 = %719.1;
  %721 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 10, 16), float32] */, dtype="int32") /* ty=Tensor[(7, 10, 16), int32] */;
  %722 = shape_of(%720, dtype="int32") /* ty=Tensor[(3), int32] */;
  %723 = cast(%720, dtype="int32") /* ty=Tensor[(7, 10, 16), int32] */;
  %724 = dyn.reshape(%721, %722, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%723, %724) /* ty=Tensor[(7, 10, 16), int32] */
}

def @func_17266(%var_17212: Tensor[(780), float32], %var_17237: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(15, 4, 13), float32], Tensor[(780), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32], Tensor[(96), bool], Tensor[(1120), float32]) {
  %725 = @func_4141() /* ty=(Tensor[(1120), float32],) */;
  %726 = cast(%var_17212, dtype="float32") /* ty=Tensor[(780), float32] */;
  %727 = cast(%var_17212, dtype="float32") /* ty=Tensor[(780), float32] */;
  %728 = reshape(%726, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
  %729 = reshape(%727, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
  %730 = cast(%var_17237, dtype="bool") /* ty=Tensor[(96), bool] */;
  %731 = reshape(%730, newshape=[96]) /* ty=Tensor[(96), bool] */;
  %732 = @func_16305(%731) /* ty=(Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %733 = @func_11096() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %734 = %725.0;
  %735 = @func_15758() /* ty=Tensor[(1120), float32] */;
  %736 = @func_4398(%728, %729) /* ty=Tensor[(15, 4, 13), float32] */;
  %737 = @func_9957() /* ty=Tensor[(7, 10, 16), float32] */;
  %738 = %732.5;
  %739 = %733.0;
  (%734, %735, %736, %var_17212, %737, %738, %var_17237, %739)
}

def @func_14296() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %740 = @func_12426() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %741 = @func_13499() /* ty=(Tensor[(1120), float32],) */;
  %742 = @func_12835() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %743 = %740.0;
  %744 = %741.0;
  %745 = %742.2;
  (%743, %744, %745)
}

def @func_1948(%var_1942: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32],) {
  %746 = cast(%var_1942, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %747 = log10(%746) /* ty=Tensor[(13, 8, 14), float32] */;
  (%747,)
}

def @func_7508() -> (Tensor[(1120), float32],) {
  %748 = @func_5784() /* ty=(Tensor[(1120), float32],) */;
  %749 = %748.0;
  (%749,)
}

def @func_12206() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %750 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %751 = %750.1;
  %752 = @func_9237() /* ty=Tensor[(7, 4, 4), float32] */;
  (%751, %752)
}

def @func_7016() -> (Tensor[(1120), float32],) {
  %753 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
  %754 = %753.0;
  (%754,)
}

def @func_12547(%var_12542: Tensor[(48, 2), bool]) -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(48, 2), bool]) {
  %755 = cast(%var_12542, dtype="bool") /* ty=Tensor[(48, 2), bool] */;
  %756 = reshape(%755, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %757 = @func_5735() /* ty=Tensor[(1120), float32] */;
  %758 = @func_10887(%756) /* ty=Tensor[(12, 2, 4), bool] */;
  (%757, %758, %var_12542)
}

def @func_1500() -> Tensor[(1120), float32] {
  %759 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %759.2
}

def @func_6708() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %760 = @func_6419() /* ty=Tensor[(1120), float32] */;
  %761 = @func_1500() /* ty=Tensor[(1120), float32] */;
  (%760, %761)
}

def @func_13184() -> (Tensor[(7, 4, 4), float32],) {
  %762 = @func_6141() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %763 = %762.2;
  (%763,)
}

def @func_4853(%var_4752: Tensor[(15, 7, 11), float64]) -> (Tensor[(15, 7, 11), float64], Tensor[(1120), float32], Tensor[(15, 7, 11), bool], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %764 = cast(%var_4752, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
  %765 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(15, 7, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %766 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
  %767 = dyn.reshape(%764, %765, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %768 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %769 = cast(meta[relay.Constant][26] /* ty=Tensor[(15, 7, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
  %770 = shape_of(%var_4752, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(%var_4752, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %773 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %774 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %775 = floor_divide(%766, %767) /* ty=Tensor[(15, 7, 11), float64] */;
  %776 = %768.0;
  %777 = greater_equal(%771, %772) /* ty=Tensor[(15, 7, 11), bool] */;
  %778 = @func_2320() /* ty=Tensor[(1120), float32] */;
  %779 = %773.0;
  %780 = %774.1;
  %781 = @func_957() /* ty=Tensor[(1120), float32] */;
  (%775, %776, %777, %778, %779, %780, %781)
}

def @func_7827() -> (Tensor[(1120), float32], Tensor[(2, 560), float64]) {
  %782 = @func_6932() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) */;
  %783 = %782.1;
  %784 = cast(%783, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %785 = asin(%784) /* ty=Tensor[(2, 560), float64] */;
  %786 = cast(%783, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
  %787 = shape_of(%785, dtype="int32") /* ty=Tensor[(2), int32] */;
  %788 = cast(%785, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
  %789 = dyn.reshape(%786, %787, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %790 = not_equal(%788, %789) /* ty=Tensor[(2, 560), bool] */;
  %791 = cast(%783, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %792 = shape_of(%790, dtype="int32") /* ty=Tensor[(2), int32] */;
  %793 = cast(%790, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %794 = dyn.reshape(%791, %792, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %795 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %796 = floor_mod(%793, %794) /* ty=Tensor[(2, 560), float64] */;
  (%795, %796)
}

def @func_10217() -> Tensor[(1120), float32] {
  @func_10120() /* ty=Tensor[(1120), float32] */
}

def @func_17520() -> Tensor[(1120), float32] {
  %797 = @func_13866() /* ty=(Tensor[(1120), float32],) */;
  %797.0
}

def @func_4565() -> (Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(8, 182), float32], Tensor[(1120), float32]) {
  %798 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 182), float32] */, dtype="float32") /* ty=Tensor[(8, 182), float32] */;
  %799 = reshape(%798, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %800 = @func_1948(%799) /* ty=(Tensor[(13, 8, 14), float32],) */;
  %801 = @func_2121() /* ty=Tensor[(1120), float32] */;
  %802 = %800.0;
  %803 = @func_261() /* ty=Tensor[(1120), float32] */;
  (%801, %802, meta[relay.Constant][27] /* ty=Tensor[(8, 182), float32] */, %803)
}

def @func_3805() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) {
  %804 = @func_2436() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) */;
  %805 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %806 = cast(meta[relay.Constant][28] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
  %807 = reshape(%806, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %808 = @func_1948(%807) /* ty=(Tensor[(13, 8, 14), float32],) */;
  %809 = %804.0;
  %810 = %805.0;
  %811 = %808.0;
  (%809, %810, %811, meta[relay.Constant][28] /* ty=Tensor[(1, 1456), float32] */)
}

def @func_3908() -> (Tensor[(11, 15, 5), float32],) {
  %812 = @func_1006() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %813 = %812.0;
  (%813,)
}

def @func_14551() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(448), bool], Tensor[(7, 4, 4), float32]) {
  %814 = @func_5967() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %815 = cast(meta[relay.Constant][29] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %816 = cast(meta[relay.Constant][29] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %817 = reshape(%815, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %818 = reshape(%816, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %819 = @func_6036(%817, %818) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) */;
  %820 = @func_14489() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %821 = %814.0;
  %822 = %819.1;
  %823 = %820.0;
  (%821, %822, meta[relay.Constant][29] /* ty=Tensor[(448), bool] */, %823)
}

def @func_8855() -> (Tensor[(7, 4, 4), float64],) {
  %824 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %825 = %824.1;
  %826 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 4, 4), float32] */, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %827 = shape_of(%825, dtype="int32") /* ty=Tensor[(3), int32] */;
  %828 = cast(%825, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %829 = dyn.reshape(%826, %827, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %830 = floor_mod(%828, %829) /* ty=Tensor[(7, 4, 4), float64] */;
  (%830,)
}

def @func_14754() -> (Tensor[(1120), float32],) {
  %831 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %832 = %831.0;
  (%832,)
}

def @func_14330() -> (Tensor[(1120), float32],) {
  %833 = @func_8456() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %834 = %833.2;
  (%834,)
}

def @func_13908() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %835 = @func_12677() /* ty=(Tensor[(1120), float32],) */;
  %836 = @func_3755() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %837 = %835.0;
  %838 = %836.1;
  (%837, %838)
}

def @func_3347() -> (Tensor[(7, 10, 16), bool],) {
  %839 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %840 = %839.0;
  (%840,)
}

def @func_5404() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %841 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
  %842 = @func_957() /* ty=Tensor[(1120), float32] */;
  %843 = %841.0;
  %844 = @func_4471() /* ty=Tensor[(1120), float32] */;
  (%842, %843, %844)
}

def @func_14376() -> (Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %845 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %846 = @func_8626() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %847 = %845.0;
  %848 = %846.2;
  %849 = @func_5288() /* ty=Tensor[(1120), float32] */;
  (%847, %848, %849)
}

def @func_15141() -> (Tensor[(7, 4, 4), float32],) {
  %850 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %851 = %850.1;
  (%851,)
}

def @func_11678(%var_11666: Tensor[(48), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(48), float32], Tensor[(7, 10, 16), float32]) {
  %852 = @func_7508() /* ty=(Tensor[(1120), float32],) */;
  %853 = cast(%var_11666, dtype="float32") /* ty=Tensor[(48), float32] */;
  %854 = reshape(%853, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), float32] */;
  %855 = @func_3701(%854) /* ty=(Tensor[(12, 4, 1), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %856 = %852.0;
  %857 = cast(%856, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %858 = reshape(%857, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %859 = %855.4;
  %860 = @func_10(%858) /* ty=Tensor[(7, 10, 16), float32] */;
  (%856, %859, %var_11666, %860)
}

def @func_413() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %861 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %862 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %863 = %862.1;
  %864 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %865 = %864.2;
  %866 = cast(%865, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %867 = shape_of(%863, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(%863, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %870 = %861.2;
  %871 = logical_and(%868, %869) /* ty=Tensor[(7, 10, 16), bool] */;
  (%870, %871)
}

def @func_9100() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %872 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %873 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %874 = %872.1;
  %875 = %873.0;
  %876 = @func_1420() /* ty=Tensor[(1120), float32] */;
  %877 = @func_7934() /* ty=Tensor[(1120), float32] */;
  (%874, %875, %876, %877)
}

def @func_835(%var_826: Tensor[(5, 5, 10), float32]) -> Tensor[(5, 5, 10), float32] {
  %878 = cast(%var_826, dtype="float32") /* ty=Tensor[(5, 5, 10), float32] */;
  asinh(%878) /* ty=Tensor[(5, 5, 10), float32] */
}

def @main(%var_17612: Tensor[(5, 16, 1), int16], %var_17613: Tensor[(5, 16, 16), int16]) -> (Tensor[(5, 16, 16), int16],) {
  %879 = cast(%var_17612, dtype="int16") /* ty=Tensor[(5, 16, 1), int16] */;
  %880 = cast(%var_17613, dtype="int16") /* ty=Tensor[(5, 16, 16), int16] */;
  %881 = left_shift(%879, %880) /* ty=Tensor[(5, 16, 16), int16] */;
  (%881,)
}

def @func_4254(%var_4246: Tensor[(11, 15, 5), float32]) -> Tensor[(11, 15, 5), bool] {
  %882 = @func_1006() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %883 = %882.0;
  %884 = cast(%var_4246, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
  %885 = shape_of(%883, dtype="int32") /* ty=Tensor[(3), int32] */;
  %886 = cast(%883, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
  %887 = dyn.reshape(%884, %885, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%886, %887) /* ty=Tensor[(11, 15, 5), bool] */
}

def @func_16530() -> (Tensor[(1120), float32],) {
  %888 = @func_8315() /* ty=(Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) */;
  %889 = %888.1;
  (%889,)
}

def @func_5775() -> Tensor[(1120), float32] {
  %890 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %890.2
}

def @func_5054() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %891 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %892 = %891.0;
  %893 = @func_1420() /* ty=Tensor[(1120), float32] */;
  (%892, %893)
}

def @func_9684(%var_9666: Tensor[(2, 13, 10), float32]) -> (Tensor[(2, 13, 10), float32], Tensor[(7, 10, 16), bool]) {
  %894 = cast(%var_9666, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %895 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %896 = acosh(%894) /* ty=Tensor[(2, 13, 10), float32] */;
  %897 = %895.1;
  (%896, %897)
}

def @func_2178() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %898 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
  %899 = %898.0;
  %900 = @func_794() /* ty=Tensor[(1120), float32] */;
  (%899, %900)
}

def @func_989() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %901 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %902 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %903 = %901.0;
  %904 = %902.0;
  (%903, %904)
}

def @func_2527() -> (Tensor[(7, 4, 4), float32],) {
  %905 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %906 = %905.1;
  (%906,)
}

def @func_9799() -> Tensor[(1120), float32] {
  %907 = @func_4105() /* ty=(Tensor[(1120), float32],) */;
  %907.0
}

def @func_11626() -> Tensor[(1120), float32] {
  @func_1420() /* ty=Tensor[(1120), float32] */
}

def @func_8051() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %908 = @func_7347() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %909 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %910 = %908.1;
  %911 = %909.0;
  (%910, %911)
}

def @func_3309() -> (Tensor[(1120), float32],) {
  %912 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %913 = %912.1;
  (%913,)
}

def @func_17458(%var_17442: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(96), bool], Tensor[(780), float32], Tensor[(96), bool]) {
  %914 = cast(meta[relay.Constant][31] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
  %915 = cast(%var_17442, dtype="bool") /* ty=Tensor[(96), bool] */;
  %916 = reshape(%914, newshape=[780]) /* ty=Tensor[(780), float32] */;
  %917 = reshape(%915, newshape=[96]) /* ty=Tensor[(96), bool] */;
  %918 = @func_17266(%916, %917) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(15, 4, 13), float32], Tensor[(780), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32], Tensor[(96), bool], Tensor[(1120), float32]) */;
  %919 = @func_794() /* ty=Tensor[(1120), float32] */;
  %920 = %918.6;
  (%919, %920, meta[relay.Constant][31] /* ty=Tensor[(780), float32] */, %var_17442)
}

def @func_15922() -> Tensor[(1120), float32] {
  %921 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %921.0
}

def @func_6932() -> (Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) {
  %922 = @func_6791() /* ty=(Tensor[(1120), float32],) */;
  %923 = cast(meta[relay.Constant][32] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %924 = cast(meta[relay.Constant][32] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
  %925 = %922.0;
  %926 = cast(%925, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %927 = reshape(%923, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), float32] */;
  %928 = reshape(%924, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), float32] */;
  %929 = reshape(%926, newshape=[2, 560]) /* ty=Tensor[(2, 560), float32] */;
  %930 = @func_3525(%927, %928, %929) /* ty=(Tensor[(9, 2, 7), float32], Tensor[(7, 4, 4), float64], Tensor[(2, 560), float32]) */;
  %931 = %930.2;
  (%925, %931, meta[relay.Constant][32] /* ty=Tensor[(126), float32] */)
}

def @func_6786() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %932 = @func_6141() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %933 = %932.1;
  %934 = @func_4471() /* ty=Tensor[(1120), float32] */;
  (%933, %934)
}

def @func_15558() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %935 = @func_14296() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %936 = @func_1420() /* ty=Tensor[(1120), float32] */;
  %937 = %935.2;
  (%936, %937)
}

def @func_3126(%var_3120: Tensor[(8, 15, 8), uint8], %var_3121: Tensor[(8, 15, 8), uint8]) -> (Tensor[(8, 15, 8), uint8],) {
  %938 = cast(%var_3121, dtype="uint8") /* ty=Tensor[(8, 15, 8), uint8] */;
  %939 = shape_of(%var_3120, dtype="int32") /* ty=Tensor[(3), int32] */;
  %940 = cast(%var_3120, dtype="uint8") /* ty=Tensor[(8, 15, 8), uint8] */;
  %941 = dyn.reshape(%938, %939, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %942 = logical_xor(%940, %941) /* ty=Tensor[(8, 15, 8), uint8] */;
  (%942,)
}

def @func_563() -> (Tensor[(1120), float32],) {
  %943 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %944 = %943.0;
  (%944,)
}

def @func_6261() -> (Tensor[(7, 10, 16), bool],) {
  %945 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %946 = %945.0;
  (%946,)
}

def @func_10020() -> (Tensor[(1120), float32],) {
  %947 = @func_7702() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) */;
  %948 = %947.0;
  (%948,)
}

def @func_11883() -> (Tensor[(1120), float32],) {
  %949 = @func_5404() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %950 = %949.1;
  (%950,)
}

def @func_11173() -> Tensor[(1120), float32] {
  %951 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %951.0
}

def @func_13844() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %952 = @func_7827() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float64]) */;
  %953 = @func_7347() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %954 = %952.0;
  %955 = %953.1;
  %956 = @func_11173() /* ty=Tensor[(1120), float32] */;
  (%954, %955, %956)
}

def @func_5967() -> (Tensor[(7, 4, 4), float32],) {
  %957 = @func_1334() /* ty=(Tensor[(7, 4, 4), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64]) */;
  %958 = %957.1;
  (%958,)
}

def @func_13199() -> (Tensor[(7, 4, 4), float32],) {
  %959 = @func_9169() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %960 = %959.0;
  (%960,)
}

def @func_13100() -> (Tensor[(1120), float32],) {
  %961 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %962 = %961.0;
  (%962,)
}

def @func_16888(%var_16873: Tensor[(16, 1, 7), uint16], %var_16874: Tensor[(16, 1, 7), uint16]) -> Tensor[(16, ?, 7), float32] {
  %963 = cast(%var_16874, dtype="uint16") /* ty=Tensor[(16, 1, 7), uint16] */;
  %964 = shape_of(%var_16873, dtype="int32") /* ty=Tensor[(3), int32] */;
  %965 = cast(%var_16873, dtype="uint16") /* ty=Tensor[(16, 1, 7), uint16] */;
  %966 = dyn.reshape(%963, %964, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %967 = right_shift(%965, %966) /* ty=Tensor[(16, ?, 7), uint16] */;
  %968 = cast(%967, dtype="float32") /* ty=Tensor[(16, ?, 7), float32] */;
  cosh(%968) /* ty=Tensor[(16, ?, 7), float32] */
}

def @func_2764() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %969 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
  %970 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %971 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %972 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %973 = %969.0;
  %974 = %970.0;
  %975 = %971.0;
  %976 = %972.0;
  (%973, %974, %975, %976)
}

def @func_16836() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %977 = @func_15807() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %978 = @func_10699() /* ty=Tensor[(1120), float32] */;
  %979 = %977.3;
  (%978, %979)
}

def @func_4105() -> (Tensor[(1120), float32],) {
  %980 = @func_794() /* ty=Tensor[(1120), float32] */;
  (%980,)
}

def @func_16356(%var_16317: Tensor[(2, 224), bool], %var_16318: Tensor[(960), uint8], %var_16335: Tensor[(2, 224), bool]) -> (Tensor[(7, 10, 16), uint32], Tensor[(960), uint8], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(2, 224), int8], Tensor[(16, 7, 4), float32]) {
  %981 = @func_7470() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */;
  %982 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %983 = @func_15906() /* ty=(Tensor[(7, 4, 4), float64], Tensor[(11, 15, 5), float32]) */;
  %984 = cast(%var_16335, dtype="int8") /* ty=Tensor[(2, 224), int8] */;
  %985 = shape_of(%var_16317, dtype="int32") /* ty=Tensor[(2), int32] */;
  %986 = cast(%var_16317, dtype="int8") /* ty=Tensor[(2, 224), int8] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %988 = cast(%var_16317, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %989 = cast(%var_16318, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %990 = reshape(%988, newshape=[1, 448]) /* ty=Tensor[(1, 448), bool] */;
  %991 = reshape(%989, newshape=[960]) /* ty=Tensor[(960), uint8] */;
  %992 = @func_6483(%990, %991) /* ty=(Tensor[(1120), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32], Tensor[(16, 7, 4), bool], Tensor[(1, 448), bool], Tensor[(8, 15, 8), uint8], Tensor[(960), uint8]) */;
  %993 = %992.3;
  %994 = cast(%993, dtype="float64") /* ty=Tensor[(16, 7, 4), float64] */;
  %995 = asin(%994) /* ty=Tensor[(16, 7, 4), float64] */;
  %996 = cast(%995, dtype="float32") /* ty=Tensor[(16, 7, 4), float32] */;
  %997 = %981.1;
  %998 = %982.1;
  %999 = %983.1;
  %1000 = left_shift(%986, %987) /* ty=Tensor[(2, 224), int8] */;
  %1001 = log(%996) /* ty=Tensor[(16, 7, 4), float32] */;
  (%997, %var_16318, %998, %999, %1000, %1001)
}

def @func_16585() -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1002 = @func_5967() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1003 = @func_4685() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) */;
  %1004 = @func_13100() /* ty=(Tensor[(1120), float32],) */;
  %1005 = %1002.0;
  %1006 = %1003.2;
  %1007 = %1004.0;
  (%1005, %1006, %1007)
}

def @func_8285() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %1008 = @func_5404() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1009 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1010 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1011 = @func_6419() /* ty=Tensor[(1120), float32] */;
  %1012 = @func_911() /* ty=Tensor[(7, 4, 4), float32] */;
  %1013 = %1008.0;
  %1014 = %1009.0;
  %1015 = %1010.0;
  (%1011, %1012, %1013, %1014, %1015)
}

def @func_8715() -> Tensor[(14, 16, 10), float64] {
  %1016 = cast(meta[relay.Constant][33] /* ty=Tensor[(14, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
  atan(%1016) /* ty=Tensor[(14, 16, 10), float64] */
}

def @func_13866() -> (Tensor[(1120), float32],) {
  %1017 = @func_261() /* ty=Tensor[(1120), float32] */;
  (%1017,)
}

def @func_957() -> Tensor[(1120), float32] {
  %1018 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %1018.0
}

def @func_15182() -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(2, 48), bool], Tensor[(7, 10, 16), bool]) {
  %1019 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %1020 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 48), bool] */, dtype="bool") /* ty=Tensor[(2, 48), bool] */;
  %1021 = reshape(%1020, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %1022 = @func_7218() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1023 = %1019.0;
  %1024 = @func_10887(%1021) /* ty=Tensor[(12, 2, 4), bool] */;
  %1025 = %1022.0;
  (%1023, %1024, meta[relay.Constant][34] /* ty=Tensor[(2, 48), bool] */, %1025)
}

def @func_12332() -> Tensor[(7, 10, 16), bool] {
  %1026 = @func_2882() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1026.0
}

def @func_15239() -> Tensor[(1120), float32] {
  %1027 = @func_7470() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */;
  %1027.0
}

def @func_1159(%var_1129: Tensor[(250), float32]) -> (Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %1028 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %1029 = cast(%var_1129, dtype="float32") /* ty=Tensor[(250), float32] */;
  %1030 = reshape(%1029, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
  %1031 = %1028.0;
  %1032 = @func_835(%1030) /* ty=Tensor[(5, 5, 10), float32] */;
  (%1031, %1032, %var_1129)
}

def @func_2064() -> Tensor[(1120), float32] {
  @func_261() /* ty=Tensor[(1120), float32] */
}

def @func_8516() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) {
  %1033 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %1034 = %1033.1;
  %1035 = cast(%1034, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %1036 = reshape(%1035, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %1037 = @func_6207(%1036) /* ty=(Tensor[(7, 4, 4), int32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1038 = @func_1530() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1039 = @func_4141() /* ty=(Tensor[(1120), float32],) */;
  %1040 = %1038.0;
  %1041 = cast(%1040, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1042 = reshape(%1041, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %1043 = @func_901(%1042) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %1044 = %1037.0;
  %1045 = %1039.0;
  %1046 = %1043.0;
  (%1034, %1044, %1040, %1045, %1046)
}

def @func_12241() -> Tensor[(1120), float32] {
  %1047 = @func_3938() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %1047.0
}

def @func_261() -> Tensor[(1120), float32] {
  %1048 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1048.2
}

def @func_12677() -> (Tensor[(1120), float32],) {
  %1049 = @func_11883() /* ty=(Tensor[(1120), float32],) */;
  %1050 = %1049.0;
  (%1050,)
}

def @func_10637() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) {
  %1051 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %1052 = @func_6791() /* ty=(Tensor[(1120), float32],) */;
  %1053 = @func_6786() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %1054 = cast(-3.92992f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1055 = reshape(%1054, newshape=[]) /* ty=float32 */;
  %1056 = @func_688(%1055) /* ty=(Tensor[(6, 4, 1), float32],) */;
  %1057 = %1051.2;
  %1058 = %1052.0;
  %1059 = %1053.1;
  %1060 = %1056.0;
  (%1057, %1058, %1059, %1060, -3.92992f /* ty=float32 */)
}

def @func_1735() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %1061 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1062 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %1063 = %1061.0;
  %1064 = %1062.1;
  (%1063, %1064)
}

def @func_3192() -> (Tensor[(7, 4, 4), float32],) {
  %1065 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1066 = %1065.0;
  (%1066,)
}

def @func_4350(%var_4342: Tensor[(250), float32]) -> (Tensor[(7, 10, 16), bool], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %1067 = @func_2882() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1068 = cast(%var_4342, dtype="float32") /* ty=Tensor[(250), float32] */;
  %1069 = reshape(%1068, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
  %1070 = %1067.0;
  %1071 = @func_835(%1069) /* ty=Tensor[(5, 5, 10), float32] */;
  (%1070, %1071, %var_4342)
}

def @func_8782() -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) {
  %1072 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1073 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
  %1074 = %1072.1;
  %1075 = %1073.2;
  (%1074, %1075)
}

def @func_15731(%var_15715: Tensor[(1690), int16]) -> (Tensor[(7, 4, 4), bool], Tensor[(1120), float32], Tensor[(13, 13, 10), bool], Tensor[(1690), int16]) {
  %1076 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1077 = %1076.0;
  %1078 = cast(%1077, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %1079 = log(%1078) /* ty=Tensor[(7, 4, 4), float32] */;
  %1080 = cast(%1077, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %1081 = shape_of(%1079, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1082 = cast(%1079, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %1083 = dyn.reshape(%1080, %1081, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1084 = cast(%var_15715, dtype="int16") /* ty=Tensor[(1690), int16] */;
  %1085 = cast(%var_15715, dtype="int16") /* ty=Tensor[(1690), int16] */;
  %1086 = reshape(%1084, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), int16] */;
  %1087 = reshape(%1085, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), int16] */;
  %1088 = @func_5518(%1086, %1087) /* ty=(Tensor[(13, 13, 10), bool], Tensor[(1120), float32]) */;
  %1089 = greater_equal(%1082, %1083) /* ty=Tensor[(7, 4, 4), bool] */;
  %1090 = @func_15239() /* ty=Tensor[(1120), float32] */;
  %1091 = %1088.0;
  (%1089, %1090, %1091, %var_15715)
}

def @func_16936() -> (Tensor[(1120), float32],) {
  %1092 = @func_5997() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1093 = %1092.2;
  (%1093,)
}

def @func_6207(%var_6173: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), int32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %1094 = @func_5096() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %1095 = %1094.0;
  %1096 = cast(%var_6173, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %1097 = shape_of(%1095, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1098 = cast(%1095, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %1099 = dyn.reshape(%1096, %1097, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1100 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %1101 = cast(%var_6173, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %1102 = bitwise_xor(%1098, %1099) /* ty=Tensor[(7, 4, 4), int32] */;
  %1103 = %1100.1;
  %1104 = log10(%1101) /* ty=Tensor[(7, 4, 4), float32] */;
  (%1102, %1103, %1104)
}

def @func_17606() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %1105 = @func_7702() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) */;
  %1106 = @func_16077() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1107 = @func_9799() /* ty=Tensor[(1120), float32] */;
  %1108 = %1105.2;
  %1109 = %1106.0;
  %1110 = @func_5735() /* ty=Tensor[(1120), float32] */;
  (%1107, %1108, %1109, %1110)
}

def @func_16184(%var_16141: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), bool],) {
  %1111 = @func_14640() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 3, 16), bool]) */;
  %1112 = %1111.0;
  %1113 = cast(%var_16141, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %1114 = shape_of(%1112, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1115 = cast(%1112, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
  %1116 = dyn.reshape(%1113, %1114, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1117 = greater(%1115, %1116) /* ty=Tensor[(7, 4, 4), bool] */;
  (%1117,)
}

def @func_9377() -> (Tensor[(1120), float32],) {
  %1118 = @func_5288() /* ty=Tensor[(1120), float32] */;
  (%1118,)
}

def @func_9957() -> Tensor[(7, 10, 16), float32] {
  %1119 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1119.1
}

def @func_10566() -> (Tensor[(7, 10, 16), bool],) {
  %1120 = @func_4640() /* ty=Tensor[(7, 10, 16), bool] */;
  (%1120,)
}

def @func_13414() -> Tensor[(7, 4, 4), float32] {
  %1121 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %1121.1
}

def @func_11214() -> (Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32, Tensor[(7, 4, 4), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool]) {
  %1122 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %1123 = cast(2.98812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1124 = reshape(%1123, newshape=[]) /* ty=float32 */;
  %1125 = @func_688(%1124) /* ty=(Tensor[(6, 4, 1), float32],) */;
  %1126 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1127 = cast(meta[relay.Constant][35] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1128 = reshape(%1127, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %1129 = %1122.1;
  %1130 = %1125.0;
  %1131 = %1126.1;
  %1132 = @func_10887(%1128) /* ty=Tensor[(12, 2, 4), bool] */;
  (%1129, %1130, 2.98812f /* ty=float32 */, %1131, %1132, meta[relay.Constant][35] /* ty=Tensor[(96), bool] */)
}

def @func_6075(%var_6047: Tensor[(6, 3, 8), float32]) -> (Tensor[(6, 3, 8), float32],) {
  %1133 = cast(%var_6047, dtype="float32") /* ty=Tensor[(6, 3, 8), float32] */;
  %1134 = log(%1133) /* ty=Tensor[(6, 3, 8), float32] */;
  (%1134,)
}

def @func_492(%var_463: Tensor[(7, 10, 16), bool]) -> (Tensor[(7, 10, 16), bool],) {
  %1135 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %1136 = cast(%var_463, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1137 = shape_of(%1135, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1138 = cast(%1135, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1140 = mod(%1138, %1139) /* ty=Tensor[(7, 10, 16), float32] */;
  %1141 = cast(%1140, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %1142 = shape_of(%var_463, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1143 = cast(%var_463, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
  %1144 = dyn.reshape(%1141, %1142, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1145 = less_equal(%1143, %1144) /* ty=Tensor[(7, 10, 16), bool] */;
  (%1145,)
}

def @func_8808() -> Tensor[(1120), float32] {
  %1146 = @func_8285() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %1146.0
}

def @func_10962() -> Tensor[(1120), float32] {
  %1147 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1147.0
}

def @func_15083() -> Tensor[(7, 10, 16), bool] {
  %1148 = @func_13331() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1148.0
}

def @func_5680() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %1149 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1150 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1151 = @func_3347() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1152 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %1153 = %1149.1;
  %1154 = %1150.0;
  %1155 = %1151.0;
  %1156 = %1152.0;
  (%1153, %1154, %1155, %1156)
}

def @func_1357(%var_1350: Tensor[(112), float32]) -> (Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) {
  %1157 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1158 = cast(%var_1350, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1159 = reshape(%1158, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %1160 = @func_605(%1159) /* ty=(Tensor[(7, 4, 4), float64],) */;
  %1161 = %1157.1;
  %1162 = %1160.0;
  (%1161, %1162, %var_1350)
}

def @func_5216() -> (Tensor[(1120), float32],) {
  %1163 = @func_2320() /* ty=Tensor[(1120), float32] */;
  (%1163,)
}

def @func_10085() -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %1164 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1165 = @func_8104() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1166 = %1164.0;
  %1167 = %1165.0;
  (%1166, %1167)
}

def @func_14695() -> Tensor[(1120), float32] {
  %1168 = @func_7470() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */;
  %1168.0
}

def @func_4043(%var_4005: Tensor[(1120), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64], Tensor[(1120), float32]) {
  %1169 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1170 = cast(%var_4005, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1171 = reshape(%1170, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %1172 = @func_901(%1171) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %1173 = %1169.0;
  %1174 = %1172.1;
  (%1173, %1174, %var_4005)
}

def @func_8104() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1175 = @func_7016() /* ty=(Tensor[(1120), float32],) */;
  %1176 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1177 = @func_7016() /* ty=(Tensor[(1120), float32],) */;
  %1178 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1179 = %1175.0;
  %1180 = %1176.0;
  %1181 = %1177.0;
  %1182 = %1178.1;
  (%1179, %1180, %1181, %1182)
}

def @func_6376(%var_6339: Tensor[(3, 9, 12), float64]) -> (Tensor[(3, 9, 12), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1, 30), float32]) {
  %1183 = cast(%var_6339, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %1184 = cast(meta[relay.Constant][36] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %1185 = reshape(%1184, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %1186 = @func_3110(%1185) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1187 = sin(%1183) /* ty=Tensor[(3, 9, 12), float64] */;
  %1188 = @func_5735() /* ty=Tensor[(1120), float32] */;
  %1189 = %1186.0;
  (%1187, %1188, %1189, meta[relay.Constant][36] /* ty=Tensor[(1, 30), float32] */)
}

def @func_17498() -> Tensor[(1120), float32] {
  %1190 = @func_14330() /* ty=(Tensor[(1120), float32],) */;
  %1190.0
}

def @func_15634() -> (Tensor[(7, 10, 16), bool],) {
  %1191 = @func_7218() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1192 = %1191.0;
  (%1192,)
}

def @func_7934() -> Tensor[(1120), float32] {
  %1193 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %1193.0
}

def @func_11870() -> (Tensor[(11, 15, 5), float32],) {
  %1194 = @func_3908() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %1195 = %1194.0;
  (%1195,)
}

def @func_7791() -> (Tensor[(7, 4, 4), float32],) {
  %1196 = @func_3593() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1197 = %1196.0;
  (%1197,)
}

def @func_2984(%var_2975: Tensor[(7, 4, 4), float64]) -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), int32]) {
  %1198 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1199 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %1200 = %1199.2;
  %1201 = cast(%1200, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %1202 = tan(%1201) /* ty=Tensor[(7, 4, 4), float64] */;
  %1203 = cast(%var_2975, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %1204 = shape_of(%1202, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1205 = cast(%1202, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %1206 = dyn.reshape(%1203, %1204, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %1207 = %1198.1;
  %1208 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %1209 = maximum(%1205, %1206) /* ty=Tensor[(7, 4, 4), int32] */;
  (%1207, %1208, %1209)
}

def @func_431() -> Tensor[(7, 10, 16), bool] {
  %1210 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %1210.1
}

def @func_15514() -> Tensor[(1120), float32] {
  %1211 = @func_3805() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) */;
  %1211.1
}

def @func_7360() -> Tensor[(7, 4, 4), float32] {
  %1212 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1212.0
}

def @func_1218() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %1213 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %1214 = @func_261() /* ty=Tensor[(1120), float32] */;
  %1215 = %1213.0;
  (%1214, %1215)
}

def @func_12854() -> Tensor[(1120), float32] {
  @func_9799() /* ty=Tensor[(1120), float32] */
}

def @func_5201() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1216 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1217 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1218 = %1216.1;
  %1219 = %1217.3;
  (%1218, %1219)
}

def @func_6483(%var_6467: Tensor[(1, 448), bool], %var_6476: Tensor[(960), uint8]) -> (Tensor[(1120), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32], Tensor[(16, 7, 4), bool], Tensor[(1, 448), bool], Tensor[(8, 15, 8), uint8], Tensor[(960), uint8]) {
  %1220 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %1221 = %1220.0;
  %1222 = cast(%1221, dtype="float64") /* ty=Tensor[(1120), float64] */;
  %1223 = @func_1530() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1224 = @func_5961() /* ty=(Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32]) */;
  %1225 = cast(%var_6467, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %1226 = cast(%var_6467, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
  %1227 = reshape(%1225, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %1228 = reshape(%1226, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %1229 = @func_6036(%1227, %1228) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) */;
  %1230 = cast(%var_6476, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %1231 = cast(%var_6476, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %1232 = reshape(%1230, newshape=[8, 15, 8]) /* ty=Tensor[(8, 15, 8), uint8] */;
  %1233 = reshape(%1231, newshape=[8, 15, 8]) /* ty=Tensor[(8, 15, 8), uint8] */;
  %1234 = @func_3126(%1232, %1233) /* ty=(Tensor[(8, 15, 8), uint8],) */;
  %1235 = exp(%1222) /* ty=Tensor[(1120), float64] */;
  %1236 = %1223.0;
  %1237 = %1224.0;
  %1238 = %1229.0;
  %1239 = %1234.0;
  (%1235, %1236, %1237, %1238, %var_6467, %1239, %var_6476)
}

def @func_9305(%var_9296: Tensor[(6, 4, 2), int8]) -> (Tensor[(6, 4, 2), bool],) {
  %1240 = cast(%var_9296, dtype="bool") /* ty=Tensor[(6, 4, 2), bool] */;
  %1241 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(6, 4, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1242 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 4, 2), int8] */, dtype="bool") /* ty=Tensor[(6, 4, 2), bool] */;
  %1243 = dyn.reshape(%1240, %1241, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1244 = not_equal(%1242, %1243) /* ty=Tensor[(6, 4, 2), bool] */;
  (%1244,)
}

def @func_7347() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1245 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
  %1246 = %1245.0;
  %1247 = @func_261() /* ty=Tensor[(1120), float32] */;
  (%1246, %1247)
}

def @func_3724() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %1248 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
  %1249 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1250 = %1248.0;
  %1251 = %1249.0;
  (%1250, %1251)
}

def @func_14873() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1252 = @func_5404() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1253 = @func_4685() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) */;
  %1254 = %1252.0;
  %1255 = %1253.0;
  (%1254, %1255)
}

def @func_4398(%var_4392: Tensor[(15, 4, 13), float32], %var_4393: Tensor[(15, 4, 13), float32]) -> Tensor[(15, 4, 13), float32] {
  %1256 = cast(%var_4393, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %1257 = shape_of(%var_4392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1258 = cast(%var_4392, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %1259 = dyn.reshape(%1256, %1257, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1258, %1259) /* ty=Tensor[(15, 4, 13), float32] */
}

def @func_15844() -> Tensor[(1120), float32] {
  @func_15239() /* ty=Tensor[(1120), float32] */
}

def @func_5633() -> (Tensor[(1120), float32],) {
  %1260 = @func_5288() /* ty=Tensor[(1120), float32] */;
  (%1260,)
}

def @func_7218() -> (Tensor[(7, 10, 16), bool],) {
  %1261 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  (%1261,)
}

def @func_4424() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %1262 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1263 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %1264 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1265 = %1262.0;
  %1266 = %1263.3;
  %1267 = %1264.0;
  (%1265, %1266, %1267)
}

def @func_5784() -> (Tensor[(1120), float32],) {
  %1268 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1269 = %1268.1;
  (%1269,)
}

def @func_11833(%var_11792: Tensor[(11, 16, 7), uint16]) -> (Tensor[(11, 16, 7), bool], Tensor[(11, 16, 7), float64]) {
  %1270 = cast(%var_11792, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %1271 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(11, 16, 7), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1272 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 16, 7), uint16] */, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %1273 = dyn.reshape(%1270, %1271, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1274 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 16, 7), uint16] */, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %1275 = shape_of(%var_11792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1276 = cast(%var_11792, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %1277 = dyn.reshape(%1274, %1275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1278 = not_equal(%1276, %1277) /* ty=Tensor[(11, 16, 7), bool] */;
  %1279 = cast(%1278, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %1280 = less_equal(%1272, %1273) /* ty=Tensor[(11, 16, 7), bool] */;
  %1281 = rsqrt(%1279) /* ty=Tensor[(11, 16, 7), float64] */;
  (%1280, %1281)
}

def @func_11403(%var_11357: float32, %var_11358: Tensor[(16, 1, 8), float32]) -> (Tensor[(16, 1, 8), float32], Tensor[(7, 10, 16), bool]) {
  %1282 = cast(%var_11357, dtype="float32") /* ty=float32 */;
  %1283 = cast(%var_11358, dtype="float32") /* ty=Tensor[(16, 1, 8), float32] */;
  %1284 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
  %1285 = power(%1282, %1283) /* ty=Tensor[(16, 1, 8), float32] */;
  %1286 = %1284.0;
  (%1285, %1286)
}

def @func_7470() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) {
  %1287 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1288 = %1287.0;
  %1289 = cast(%1288, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1290 = reshape(%1289, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %1291 = @func_901(%1290) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %1292 = %1291.0;
  (%1288, %1292)
}

def @func_9903() -> (Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float64], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %1293 = @func_2882() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1294 = %1293.0;
  %1295 = cast(%1294, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1296 = cast(%1294, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1297 = cast(%1294, dtype="float64") /* ty=Tensor[(7, 10, 16), float64] */;
  %1298 = @func_8782() /* ty=(Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) */;
  %1299 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1300 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1301 = @func_7016() /* ty=(Tensor[(1120), float32],) */;
  %1302 = sinh(%1295) /* ty=Tensor[(7, 10, 16), float32] */;
  %1303 = atanh(%1296) /* ty=Tensor[(7, 10, 16), float32] */;
  %1304 = acosh(%1297) /* ty=Tensor[(7, 10, 16), float64] */;
  %1305 = %1298.0;
  %1306 = %1299.1;
  %1307 = %1300.0;
  %1308 = %1301.0;
  (%1302, %1303, %1304, %1305, %1306, %1307, %1308)
}

def @func_13331() -> (Tensor[(7, 10, 16), bool],) {
  %1309 = @func_5096() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %1310 = %1309.1;
  (%1310,)
}

def @func_8315() -> (Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) {
  %1311 = cast(meta[relay.Constant][39] /* ty=Tensor[(15, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
  %1312 = @func_5784() /* ty=(Tensor[(1120), float32],) */;
  %1313 = exp(%1311) /* ty=Tensor[(15, 6, 9), float64] */;
  %1314 = %1312.0;
  (%1313, %1314)
}

def @func_16619() -> Tensor[(1120), float32] {
  %1315 = @func_3724() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1315.0
}

def @func_16305(%var_16265: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) {
  %1316 = @func_15609() /* ty=(Tensor[(1120), float32],) */;
  %1317 = cast(%var_16265, dtype="bool") /* ty=Tensor[(96), bool] */;
  %1318 = reshape(%1317, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %1319 = @func_15239() /* ty=Tensor[(1120), float32] */;
  %1320 = cast(%1319, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1321 = reshape(%1320, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %1322 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1323 = %1316.0;
  %1324 = @func_10887(%1318) /* ty=Tensor[(12, 2, 4), bool] */;
  %1325 = @func_10(%1321) /* ty=Tensor[(7, 10, 16), float32] */;
  %1326 = %1322.0;
  (%1323, %1324, %var_16265, %1319, %1325, %1326)
}

def @func_12051() -> Tensor[(1120), float32] {
  %1327 = @func_11136() /* ty=(Tensor[(1120), float32],) */;
  %1327.0
}

def @func_16041() -> Tensor[(7, 4, 4), float32] {
  %1328 = @func_13199() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1328.0
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_10020() -> (Tensor[(1120), float32],) {
  %0 = @func_7702() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) */;
  %1 = %0.0;
  (%1,)
}

def @func_4946() -> Tensor[(1120), float32] {
  %3 = fn () -> Tensor[(1120), float32] {
    %2 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %2.0
  };
  %3() /* ty=Tensor[(1120), float32] */
}

def @func_11074() -> (Tensor[(14, 16, 10), float64], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  @func_11072() /* ty=(Tensor[(14, 16, 10), float64], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_4352(%var_4351: Tensor[(250), float32]) -> (Tensor[(7, 10, 16), bool], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %9 = fn (%var_4342: Tensor[(250), float32]) -> (Tensor[(7, 10, 16), bool], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
    %4 = @func_2882() /* ty=(Tensor[(7, 10, 16), bool],) */;
    %5 = cast(%var_4342, dtype="float32") /* ty=Tensor[(250), float32] */;
    %6 = reshape(%5, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
    %7 = %4.0;
    %8 = @func_835(%6) /* ty=Tensor[(5, 5, 10), float32] */;
    (%7, %8, %var_4342)
  };
  %9(%var_4351) /* ty=(Tensor[(7, 10, 16), bool], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */
}

def @func_13660() -> Tensor[(1120), float32] {
  %10 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %10.1
}

def @func_15240() -> Tensor[(1120), float32] {
  %12 = fn () -> Tensor[(1120), float32] {
    %11 = @func_7470() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */;
    %11.0
  };
  %12() /* ty=Tensor[(1120), float32] */
}

def @func_3193() -> (Tensor[(7, 4, 4), float32],) {
  %15 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %13 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %14 = %13.0;
    (%14,)
  };
  %15() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_16837() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %19 = fn () -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
    %16 = @func_15807() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %17 = @func_10699() /* ty=Tensor[(1120), float32] */;
    %18 = %16.3;
    (%17, %18)
  };
  %19() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_2944() -> (Tensor[(1120), float32],) {
  @func_2942() /* ty=(Tensor[(1120), float32],) */
}

def @func_9801() -> Tensor[(1120), float32] {
  @func_9799() /* ty=Tensor[(1120), float32] */
}

def @func_5461() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_15844() -> Tensor[(1120), float32] {
  @func_15239() /* ty=Tensor[(1120), float32] */
}

def @func_262() -> Tensor[(1120), float32] {
  %21 = fn () -> Tensor[(1120), float32] {
    %20 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %20.2
  };
  %21() /* ty=Tensor[(1120), float32] */
}

def @func_6540(%var_6535: Tensor[(5, 14, 3), int64], %var_6536: Tensor[(5, 14, 3), int64]) -> Tensor[(5, 14, 3), bool] {
  %22 = cast(%var_6536, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %23 = shape_of(%var_6535, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%var_6535, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less(%24, %25) /* ty=Tensor[(5, 14, 3), bool] */
}

def @func_9307(%var_9306: Tensor[(6, 4, 2), int8]) -> (Tensor[(6, 4, 2), bool],) {
  %31 = fn (%var_9296: Tensor[(6, 4, 2), int8]) -> (Tensor[(6, 4, 2), bool],) {
    %26 = cast(%var_9296, dtype="bool") /* ty=Tensor[(6, 4, 2), bool] */;
    %27 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(6, 4, 2), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %28 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 4, 2), int8] */, dtype="bool") /* ty=Tensor[(6, 4, 2), bool] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %30 = not_equal(%28, %29) /* ty=Tensor[(6, 4, 2), bool] */;
    (%30,)
  };
  %31(%var_9306) /* ty=(Tensor[(6, 4, 2), bool],) */
}

def @func_10(%var_5: Tensor[(7, 10, 16), float32]) -> Tensor[(7, 10, 16), float32] {
  %32 = cast(%var_5, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  log(%32) /* ty=Tensor[(7, 10, 16), float32] */
}

def @func_15246() -> Tensor[(7, 10, 16), bool] {
  %34 = fn () -> Tensor[(7, 10, 16), bool] {
    %33 = @func_6786() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
    %33.0
  };
  %34() /* ty=Tensor[(7, 10, 16), bool] */
}

def @func_7218() -> (Tensor[(7, 10, 16), bool],) {
  %35 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  (%35,)
}

def @func_8717() -> Tensor[(14, 16, 10), float64] {
  @func_8715() /* ty=Tensor[(14, 16, 10), float64] */
}

def @func_565() -> (Tensor[(1120), float32],) {
  @func_563() /* ty=(Tensor[(1120), float32],) */
}

def @func_4686() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) {
  %45 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) {
    %36 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
    %37 = cast(meta[relay.Constant][1] /* ty=Tensor[(250, 1), float32] */, dtype="float32") /* ty=Tensor[(250, 1), float32] */;
    %38 = reshape(%37, newshape=[250]) /* ty=Tensor[(250), float32] */;
    %39 = @func_1159(%38) /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(250, 1), float32] */, dtype="float64") /* ty=Tensor[(250, 1), float64] */;
    %41 = %36.0;
    %42 = %39.0;
    %43 = @func_1420() /* ty=Tensor[(1120), float32] */;
    %44 = acosh(%40) /* ty=Tensor[(250, 1), float64] */;
    (%41, %42, %43, %44)
  };
  %45() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) */
}

def @func_9011(%var_9009: Tensor[(5, 50), float32], %var_9010: Tensor[(144), float32]) -> (Tensor[(1120), float32], Tensor[(144, 1), float32], Tensor[(5, 50), float32], Tensor[(144), float32]) {
  %56 = fn (%var_8978: Tensor[(5, 50), float32], %var_8979: Tensor[(144), float32]) -> (Tensor[(1120), float32], Tensor[(144, 1), float32], Tensor[(5, 50), float32], Tensor[(144), float32]) {
    %46 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
    %47 = cast(%var_8978, dtype="float32") /* ty=Tensor[(5, 50), float32] */;
    %48 = cast(%var_8979, dtype="float32") /* ty=Tensor[(144), float32] */;
    %49 = cast(%var_8978, dtype="float64") /* ty=Tensor[(5, 50), float64] */;
    %50 = reshape(%47, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
    %51 = reshape(%48, newshape=[144, 1]) /* ty=Tensor[(144, 1), float32] */;
    %52 = reshape(%49, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float64] */;
    %53 = @func_7186(%50, %51, %52) /* ty=(Tensor[(5, 5, 10), uint64], Tensor[(6, 3, 8), float32], Tensor[(144, 1), float32], Tensor[(5, 5, 10), bool], Tensor[(5, 5, 10), float32]) */;
    %54 = %46.0;
    %55 = %53.2;
    (%54, %55, %var_8978, %var_8979)
  };
  %56(%var_9009, %var_9010) /* ty=(Tensor[(1120), float32], Tensor[(144, 1), float32], Tensor[(5, 50), float32], Tensor[(144), float32]) */
}

def @func_3704(%var_3702: Tensor[(12, 4, 1), float32]) -> (Tensor[(12, 4, 1), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), bool], Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_3701(%var_3702) /* ty=(Tensor[(12, 4, 1), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_9570(%var_9569: Tensor[(7, 10, 16), int32]) -> (Tensor[(11, 15, 5), float32], Tensor[(11, 15, 5), bool], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(14, 16, 10), float32]) {
  %80 = fn (%var_9465: Tensor[(7, 10, 16), int32]) -> (Tensor[(11, 15, 5), float32], Tensor[(11, 15, 5), bool], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(14, 16, 10), float32]) {
    %57 = @func_8782() /* ty=(Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) */;
    %58 = %57.1;
    %59 = cast(%58, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
    %60 = reshape(%59, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
    %61 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %62 = %61.0;
    %63 = cast(%62, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
    %64 = @func_4322() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
    %65 = @func_4379() /* ty=Tensor[(7, 10, 16), int32] */;
    %66 = cast(%var_9465, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
    %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%65, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %70 = @func_3724() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %71 = @func_8715() /* ty=Tensor[(14, 16, 10), float64] */;
    %72 = cast(%71, dtype="float32") /* ty=Tensor[(14, 16, 10), float32] */;
    %73 = @func_4254(%60) /* ty=Tensor[(11, 15, 5), bool] */;
    %74 = asinh(%63) /* ty=Tensor[(7, 4, 4), float32] */;
    %75 = %64.1;
    %76 = equal(%68, %69) /* ty=Tensor[(7, 10, 16), bool] */;
    %77 = %70.0;
    %78 = @func_5482() /* ty=Tensor[(1120), float32] */;
    %79 = log2(%72) /* ty=Tensor[(14, 16, 10), float32] */;
    (%58, %73, %74, %75, %76, %77, %78, %79)
  };
  %80(%var_9569) /* ty=(Tensor[(11, 15, 5), float32], Tensor[(11, 15, 5), bool], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(14, 16, 10), float32]) */
}

def @func_7702() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) {
  %81 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %82 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
  %83 = cast(meta[relay.Constant][2] /* ty=Tensor[(30, 1), float32] */, dtype="float32") /* ty=Tensor[(30, 1), float32] */;
  %84 = reshape(%83, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %85 = @func_3110(%84) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %86 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %87 = %81.0;
  %88 = %82.0;
  %89 = %85.5;
  %90 = %86.0;
  (%87, %88, %89, meta[relay.Constant][2] /* ty=Tensor[(30, 1), float32] */, %90)
}

def @func_13868() -> (Tensor[(1120), float32],) {
  @func_13866() /* ty=(Tensor[(1120), float32],) */
}

def @func_11740() -> (Tensor[(1120), float32],) {
  %91 = @func_1500() /* ty=Tensor[(1120), float32] */;
  (%91,)
}

def @func_1031() -> (Tensor[(1120), float32],) {
  @func_1029() /* ty=(Tensor[(1120), float32],) */
}

def @func_2494() -> (Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */
}

def @func_189() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) {
  %92 = cast(meta[relay.Constant][3] /* ty=Tensor[(7, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %93 = cast(meta[relay.Constant][4] /* ty=Tensor[(1120), float32] */, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %94 = reshape(%93, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %95 = atanh(%92) /* ty=Tensor[(7, 4, 4), float32] */;
  %96 = @func_10(%94) /* ty=Tensor[(7, 10, 16), float32] */;
  (%95, %96, meta[relay.Constant][4] /* ty=Tensor[(1120), float32] */)
}

def @func_7149(%var_7148: Tensor[(1456), float32]) -> (Tensor[(5, 5, 10), float32], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) {
  %103 = fn (%var_7141: Tensor[(1456), float32]) -> (Tensor[(5, 5, 10), float32], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) {
    %97 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %98 = cast(%var_7141, dtype="float32") /* ty=Tensor[(1456), float32] */;
    %99 = reshape(%98, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
    %100 = @func_1948(%99) /* ty=(Tensor[(13, 8, 14), float32],) */;
    %101 = %97.1;
    %102 = %100.0;
    (%101, %102, %var_7141)
  };
  %103(%var_7148) /* ty=(Tensor[(5, 5, 10), float32], Tensor[(13, 8, 14), float32], Tensor[(1456), float32]) */
}

def @func_1663() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_5218() -> (Tensor[(1120), float32],) {
  @func_5216() /* ty=(Tensor[(1120), float32],) */
}

def @func_1049() -> (Tensor[(1120), float32],) {
  @func_1047() /* ty=(Tensor[(1120), float32],) */
}

def @func_17046() -> Tensor[(7, 4, 4), bool] {
  @func_17044() /* ty=Tensor[(7, 4, 4), bool] */
}

def @func_16121(%var_16105: Tensor[(7, 10, 16), bool]) -> Tensor[(7, 10, 16), uint8] {
  %104 = @func_4640() /* ty=Tensor[(7, 10, 16), bool] */;
  %105 = cast(%var_16105, dtype="uint8") /* ty=Tensor[(7, 10, 16), uint8] */;
  %106 = shape_of(%104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %107 = cast(%104, dtype="uint8") /* ty=Tensor[(7, 10, 16), uint8] */;
  %108 = dyn.reshape(%105, %106, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  subtract(%107, %108) /* ty=Tensor[(7, 10, 16), uint8] */
}

def @func_15142() -> (Tensor[(7, 4, 4), float32],) {
  %111 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %109 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %110 = %109.1;
    (%110,)
  };
  %111() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_13910() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_13908() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_5729(%var_5728: Tensor[(560, 2), float32]) -> (Tensor[(7, 10, 16), uint32], Tensor[(560, 2), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), bool]) {
  %123 = fn (%var_5706: Tensor[(560, 2), float32]) -> (Tensor[(7, 10, 16), uint32], Tensor[(560, 2), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), bool]) {
    %112 = cast(%var_5706, dtype="float32") /* ty=Tensor[(560, 2), float32] */;
    %113 = reshape(%112, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
    %114 = @func_901(%113) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
    %115 = @func_911() /* ty=Tensor[(7, 4, 4), float32] */;
    %116 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %117 = shape_of(%115, dtype="int32") /* ty=Tensor[(3), int32] */;
    %118 = cast(%115, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %119 = dyn.reshape(%116, %117, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %120 = %114.0;
    %121 = @func_957() /* ty=Tensor[(1120), float32] */;
    %122 = logical_or(%118, %119) /* ty=Tensor[(7, 4, 4), bool] */;
    (%120, %var_5706, %121, %122)
  };
  %123(%var_5728) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(560, 2), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), bool]) */
}

def @func_6486(%var_6484: Tensor[(1, 448), bool], %var_6485: Tensor[(960), uint8]) -> (Tensor[(1120), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32], Tensor[(16, 7, 4), bool], Tensor[(1, 448), bool], Tensor[(8, 15, 8), uint8], Tensor[(960), uint8]) {
  %144 = fn (%var_6467: Tensor[(1, 448), bool], %var_6476: Tensor[(960), uint8]) -> (Tensor[(1120), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32], Tensor[(16, 7, 4), bool], Tensor[(1, 448), bool], Tensor[(8, 15, 8), uint8], Tensor[(960), uint8]) {
    %124 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %125 = %124.0;
    %126 = cast(%125, dtype="float64") /* ty=Tensor[(1120), float64] */;
    %127 = @func_1530() /* ty=(Tensor[(7, 10, 16), bool],) */;
    %128 = @func_5961() /* ty=(Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32]) */;
    %129 = cast(%var_6467, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
    %130 = cast(%var_6467, dtype="bool") /* ty=Tensor[(1, 448), bool] */;
    %131 = reshape(%129, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
    %132 = reshape(%130, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
    %133 = @func_6036(%131, %132) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) */;
    %134 = cast(%var_6476, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %135 = cast(%var_6476, dtype="uint8") /* ty=Tensor[(960), uint8] */;
    %136 = reshape(%134, newshape=[8, 15, 8]) /* ty=Tensor[(8, 15, 8), uint8] */;
    %137 = reshape(%135, newshape=[8, 15, 8]) /* ty=Tensor[(8, 15, 8), uint8] */;
    %138 = @func_3126(%136, %137) /* ty=(Tensor[(8, 15, 8), uint8],) */;
    %139 = exp(%126) /* ty=Tensor[(1120), float64] */;
    %140 = %127.0;
    %141 = %128.0;
    %142 = %133.0;
    %143 = %138.0;
    (%139, %140, %141, %142, %var_6467, %143, %var_6476)
  };
  %144(%var_6484, %var_6485) /* ty=(Tensor[(1120), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32], Tensor[(16, 7, 4), bool], Tensor[(1, 448), bool], Tensor[(8, 15, 8), uint8], Tensor[(960), uint8]) */
}

def @func_8457() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %151 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %145 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
    %146 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %147 = %145.0;
    %148 = @func_2064() /* ty=Tensor[(1120), float32] */;
    %149 = @func_5735() /* ty=Tensor[(1120), float32] */;
    %150 = %146.1;
    (%147, %148, %149, %150)
  };
  %151() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_14784() -> Tensor[(7, 10, 16), bool] {
  %153 = fn () -> Tensor[(7, 10, 16), bool] {
    %152 = @func_7218() /* ty=(Tensor[(7, 10, 16), bool],) */;
    %152.0
  };
  %153() /* ty=Tensor[(7, 10, 16), bool] */
}

def @func_4381() -> Tensor[(7, 10, 16), int32] {
  @func_4379() /* ty=Tensor[(7, 10, 16), int32] */
}

def @func_2884() -> (Tensor[(7, 10, 16), bool],) {
  @func_2882() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_3112(%var_3111: Tensor[(30), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %163 = fn (%var_3054: Tensor[(30), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
    %154 = cast(%var_3054, dtype="float32") /* ty=Tensor[(30), float32] */;
    %155 = reshape(%154, newshape=[1, 10, 3]) /* ty=Tensor[(1, 10, 3), float32] */;
    %156 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
    %157 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
    %158 = @func_261() /* ty=Tensor[(1120), float32] */;
    %159 = @func_261() /* ty=Tensor[(1120), float32] */;
    %160 = @func_2598(%155) /* ty=Tensor[(?, 10, 3), int8] */;
    %161 = %156.0;
    %162 = %157.1;
    (%158, %159, %160, %var_3054, %161, %162)
  };
  %163(%var_3111) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_12242() -> Tensor[(1120), float32] {
  %165 = fn () -> Tensor[(1120), float32] {
    %164 = @func_3938() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %164.0
  };
  %165() /* ty=Tensor[(1120), float32] */
}

def @func_2882() -> (Tensor[(7, 10, 16), bool],) {
  %166 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  (%166,)
}

def @func_5634() -> (Tensor[(1120), float32],) {
  %168 = fn () -> (Tensor[(1120), float32],) {
    %167 = @func_5288() /* ty=Tensor[(1120), float32] */;
    (%167,)
  };
  %168() /* ty=(Tensor[(1120), float32],) */
}

def @func_12591() -> (Tensor[(7, 4, 4), float32],) {
  @func_12589() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_17031() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), bool], Tensor[(112), float32]) {
  @func_17029() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), bool], Tensor[(112), float32]) */
}

def @func_542() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %175 = fn () -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
    %169 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %170 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %171 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %172 = %169.0;
    %173 = %170.0;
    %174 = %171.0;
    (%172, %173, %174)
  };
  %175() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */
}

def @func_9948() -> (Tensor[(7, 4, 4), float32],) {
  %176 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %177 = %176.0;
  (%177,)
}

def @func_4855(%var_4854: Tensor[(15, 7, 11), float64]) -> (Tensor[(15, 7, 11), float64], Tensor[(1120), float32], Tensor[(15, 7, 11), bool], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %196 = fn (%var_4752: Tensor[(15, 7, 11), float64]) -> (Tensor[(15, 7, 11), float64], Tensor[(1120), float32], Tensor[(15, 7, 11), bool], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
    %178 = cast(%var_4752, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
    %179 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(15, 7, 11), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %180 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 7, 11), float64] */, dtype="float64") /* ty=Tensor[(15, 7, 11), float64] */;
    %181 = dyn.reshape(%178, %179, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %182 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %183 = cast(meta[relay.Constant][6] /* ty=Tensor[(15, 7, 11), float64] */, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
    %184 = shape_of(%var_4752, dtype="int32") /* ty=Tensor[(3), int32] */;
    %185 = cast(%var_4752, dtype="bool") /* ty=Tensor[(15, 7, 11), bool] */;
    %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %187 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
    %188 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %189 = floor_divide(%180, %181) /* ty=Tensor[(15, 7, 11), float64] */;
    %190 = %182.0;
    %191 = greater_equal(%185, %186) /* ty=Tensor[(15, 7, 11), bool] */;
    %192 = @func_2320() /* ty=Tensor[(1120), float32] */;
    %193 = %187.0;
    %194 = %188.1;
    %195 = @func_957() /* ty=Tensor[(1120), float32] */;
    (%189, %190, %191, %192, %193, %194, %195)
  };
  %196(%var_4854) /* ty=(Tensor[(15, 7, 11), float64], Tensor[(1120), float32], Tensor[(15, 7, 11), bool], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */
}

def @func_5997() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %197 = @func_261() /* ty=Tensor[(1120), float32] */;
  %198 = @func_5482() /* ty=Tensor[(1120), float32] */;
  %199 = @func_2121() /* ty=Tensor[(1120), float32] */;
  (%197, %198, %199)
}

def @func_837(%var_836: Tensor[(5, 5, 10), float32]) -> Tensor[(5, 5, 10), float32] {
  %201 = fn (%var_826: Tensor[(5, 5, 10), float32]) -> Tensor[(5, 5, 10), float32] {
    %200 = cast(%var_826, dtype="float32") /* ty=Tensor[(5, 5, 10), float32] */;
    asinh(%200) /* ty=Tensor[(5, 5, 10), float32] */
  };
  %201(%var_836) /* ty=Tensor[(5, 5, 10), float32] */
}

def @func_11291() -> (Tensor[(1120), float32], Tensor[(1, 30), float32], Tensor[(324), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %202 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %203 = cast(meta[relay.Constant][7] /* ty=Tensor[(324), float64] */, dtype="float64") /* ty=Tensor[(324), float64] */;
  %204 = reshape(%203, newshape=[3, 9, 12]) /* ty=Tensor[(3, 9, 12), float64] */;
  %205 = @func_6376(%204) /* ty=(Tensor[(3, 9, 12), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1, 30), float32]) */;
  %206 = @func_3938() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %207 = @func_4962() /* ty=(Tensor[(1120), float32],) */;
  %208 = %202.1;
  %209 = %205.3;
  %210 = %206.1;
  %211 = %207.0;
  (%208, %209, meta[relay.Constant][7] /* ty=Tensor[(324), float64] */, %210, %211)
}

def @func_1029() -> (Tensor[(1120), float32],) {
  %212 = @func_794() /* ty=Tensor[(1120), float32] */;
  (%212,)
}

def @func_2942() -> (Tensor[(1120), float32],) {
  %213 = @func_2064() /* ty=Tensor[(1120), float32] */;
  (%213,)
}

def @func_2436() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) {
  %214 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %215 = %214.1;
  %216 = cast(%215, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %217 = reshape(%216, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %218 = @func_1420() /* ty=Tensor[(1120), float32] */;
  %219 = @func_10(%217) /* ty=Tensor[(7, 10, 16), float32] */;
  (%215, %218, %219)
}

def @func_11885() -> (Tensor[(1120), float32],) {
  @func_11883() /* ty=(Tensor[(1120), float32],) */
}

def @func_6544(%var_6542: Tensor[(5, 14, 3), int64], %var_6543: Tensor[(5, 14, 3), int64]) -> Tensor[(5, 14, 3), bool] {
  @func_6540(%var_6542, %var_6543) /* ty=Tensor[(5, 14, 3), bool] */
}

def @func_16186(%var_16185: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), bool],) {
  %227 = fn (%var_16141: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), bool],) {
    %220 = @func_14640() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 3, 16), bool]) */;
    %221 = %220.0;
    %222 = cast(%var_16141, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %223 = shape_of(%221, dtype="int32") /* ty=Tensor[(3), int32] */;
    %224 = cast(%221, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %226 = greater(%224, %225) /* ty=Tensor[(7, 4, 4), bool] */;
    (%226,)
  };
  %227(%var_16185) /* ty=(Tensor[(7, 4, 4), bool],) */
}

def @func_5290() -> Tensor[(1120), float32] {
  @func_5288() /* ty=Tensor[(1120), float32] */
}

def @func_9702() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_9700() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_14307() -> (Tensor[(1120), float32],) {
  %229 = fn () -> (Tensor[(1120), float32],) {
    %228 = @func_5288() /* ty=Tensor[(1120), float32] */;
    (%228,)
  };
  %229() /* ty=(Tensor[(1120), float32],) */
}

def @func_1335() -> (Tensor[(7, 4, 4), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64]) {
  %241 = fn () -> (Tensor[(7, 4, 4), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64]) {
    %230 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %231 = %230.0;
    %232 = cast(meta[relay.Constant][8] /* ty=Tensor[(7, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %233 = shape_of(%231, dtype="int32") /* ty=Tensor[(3), int32] */;
    %234 = cast(%231, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %235 = dyn.reshape(%232, %233, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %236 = @func_1218() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %237 = cast(%231, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
    %238 = less_equal(%234, %235) /* ty=Tensor[(7, 4, 4), bool] */;
    %239 = %236.1;
    %240 = acosh(%237) /* ty=Tensor[(7, 4, 4), float64] */;
    (%238, %239, %240)
  };
  %241() /* ty=(Tensor[(7, 4, 4), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64]) */
}

def @func_10143() -> Tensor[(1120), float32] {
  %243 = fn () -> Tensor[(1120), float32] {
    %242 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %242.1
  };
  %243() /* ty=Tensor[(1120), float32] */
}

def @func_11742() -> (Tensor[(1120), float32],) {
  @func_11740() /* ty=(Tensor[(1120), float32],) */
}

def @func_13(%var_11: Tensor[(7, 10, 16), float32]) -> Tensor[(7, 10, 16), float32] {
  @func_10(%var_11) /* ty=Tensor[(7, 10, 16), float32] */
}

def @func_4917() -> (Tensor[(7, 10, 16), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %251 = fn () -> (Tensor[(7, 10, 16), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
    %244 = @func_4379() /* ty=Tensor[(7, 10, 16), int32] */;
    %245 = cast(%244, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
    %246 = reshape(%245, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), bool] */;
    %247 = @func_492(%246) /* ty=(Tensor[(7, 10, 16), bool],) */;
    %248 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
    %249 = %247.0;
    %250 = %248.0;
    (%244, %249, %250)
  };
  %251() /* ty=(Tensor[(7, 10, 16), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_13414() -> Tensor[(7, 4, 4), float32] {
  %252 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %252.1
}

def @func_6421() -> Tensor[(1120), float32] {
  @func_6419() /* ty=Tensor[(1120), float32] */
}

def @func_16586() -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %259 = fn () -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %253 = @func_5967() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %254 = @func_4685() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) */;
    %255 = @func_13100() /* ty=(Tensor[(1120), float32],) */;
    %256 = %253.0;
    %257 = %254.2;
    %258 = %255.0;
    (%256, %257, %258)
  };
  %259() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_12207() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %263 = fn () -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
    %260 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %261 = %260.1;
    %262 = @func_9237() /* ty=Tensor[(7, 4, 4), float32] */;
    (%261, %262)
  };
  %263() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_4402(%var_4400: Tensor[(15, 4, 13), float32], %var_4401: Tensor[(15, 4, 13), float32]) -> Tensor[(15, 4, 13), float32] {
  @func_4398(%var_4400, %var_4401) /* ty=Tensor[(15, 4, 13), float32] */
}

def @func_1047() -> (Tensor[(1120), float32],) {
  %264 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %265 = %264.1;
  (%265,)
}

def @func_12550(%var_12548: Tensor[(48, 2), bool]) -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(48, 2), bool]) {
  @func_12547(%var_12548) /* ty=(Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(48, 2), bool]) */
}

def @func_12677() -> (Tensor[(1120), float32],) {
  %266 = @func_11883() /* ty=(Tensor[(1120), float32],) */;
  %267 = %266.0;
  (%267,)
}

def @func_5962() -> (Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32]) {
  %272 = fn () -> (Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32]) {
    %268 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
    %269 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %270 = %268.0;
    %271 = %269.0;
    (%270, %271)
  };
  %272() /* ty=(Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_1661() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %273 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %274 = @func_261() /* ty=Tensor[(1120), float32] */;
  (%273, %274)
}

def @func_9170() -> (Tensor[(7, 4, 4), float32],) {
  %277 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %275 = @func_3724() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %276 = %275.1;
    (%276,)
  };
  %277() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_8518() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) {
  @func_8516() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */
}

def @func_15083() -> Tensor[(7, 10, 16), bool] {
  %278 = @func_13331() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %278.0
}

def @func_15760() -> Tensor[(1120), float32] {
  @func_15758() /* ty=Tensor[(1120), float32] */
}

def @func_3724() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %279 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
  %280 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %281 = %279.0;
  %282 = %280.0;
  (%281, %282)
}

def @func_10824() -> (Tensor[(11, 1, 3), float32], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32], Tensor[(30), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32]) {
  %283 = cast(meta[relay.Constant][9] /* ty=Tensor[(11, 1, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 1, 3), float32] */;
  %284 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %285 = cast(meta[relay.Constant][10] /* ty=Tensor[(30), float32] */, dtype="float32") /* ty=Tensor[(30), float32] */;
  %286 = reshape(%285, newshape=[10, 3]) /* ty=Tensor[(10, 3), float32] */;
  %287 = @func_10284(%286) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(15, 6, 9), float64], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32]) */;
  %288 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %289 = @func_10085() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %290 = sinh(%283) /* ty=Tensor[(11, 1, 3), float32] */;
  %291 = %284.3;
  %292 = %287.3;
  %293 = %288.1;
  %294 = %289.0;
  (%290, %291, %292, meta[relay.Constant][10] /* ty=Tensor[(30), float32] */, %293, %294)
}

def @func_14959() -> Tensor[(1120), float32] {
  @func_14957() /* ty=Tensor[(1120), float32] */
}

def @func_1006() -> (Tensor[(11, 15, 5), float32],) {
  %295 = cast(meta[relay.Constant][11] /* ty=Tensor[(11, 15, 5), float32] */, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
  %296 = cosh(%295) /* ty=Tensor[(11, 15, 5), float32] */;
  (%296,)
}

def @func_13199() -> (Tensor[(7, 4, 4), float32],) {
  %297 = @func_9169() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %298 = %297.0;
  (%298,)
}

def @func_7186(%var_7158: Tensor[(5, 5, 10), float32], %var_7169: Tensor[(144, 1), float32], %var_7175: Tensor[(5, 5, 10), float64]) -> (Tensor[(5, 5, 10), uint64], Tensor[(6, 3, 8), float32], Tensor[(144, 1), float32], Tensor[(5, 5, 10), bool], Tensor[(5, 5, 10), float32]) {
  %299 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %300 = %299.1;
  %301 = cast(%var_7158, dtype="uint64") /* ty=Tensor[(5, 5, 10), uint64] */;
  %302 = shape_of(%300, dtype="int32") /* ty=Tensor[(3), int32] */;
  %303 = cast(%300, dtype="uint64") /* ty=Tensor[(5, 5, 10), uint64] */;
  %304 = dyn.reshape(%301, %302, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %305 = cast(%var_7169, dtype="float32") /* ty=Tensor[(144, 1), float32] */;
  %306 = reshape(%305, newshape=[6, 3, 8]) /* ty=Tensor[(6, 3, 8), float32] */;
  %307 = @func_6075(%306) /* ty=(Tensor[(6, 3, 8), float32],) */;
  %308 = cast(%var_7158, dtype="float64") /* ty=Tensor[(5, 5, 10), float64] */;
  %309 = tan(%308) /* ty=Tensor[(5, 5, 10), float64] */;
  %310 = cast(%var_7175, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %311 = shape_of(%309, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%309, dtype="bool") /* ty=Tensor[(5, 5, 10), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = cast(%309, dtype="float32") /* ty=Tensor[(5, 5, 10), float32] */;
  %315 = bitwise_xor(%303, %304) /* ty=Tensor[(5, 5, 10), uint64] */;
  %316 = %307.0;
  %317 = equal(%312, %313) /* ty=Tensor[(5, 5, 10), bool] */;
  %318 = log10(%314) /* ty=Tensor[(5, 5, 10), float32] */;
  (%315, %316, %var_7169, %317, %318)
}

def @func_14754() -> (Tensor[(1120), float32],) {
  %319 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %320 = %319.0;
  (%320,)
}

def @func_16621() -> Tensor[(1120), float32] {
  @func_16619() /* ty=Tensor[(1120), float32] */
}

def @func_8782() -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) {
  %321 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %322 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
  %323 = %321.1;
  %324 = %322.2;
  (%323, %324)
}

def @func_2377() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_2375() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_688(%var_683: float32) -> (Tensor[(6, 4, 1), float32],) {
  %325 = cast(%var_683, dtype="float32") /* ty=float32 */;
  %326 = cast(meta[relay.Constant][12] /* ty=Tensor[(6, 4, 1), float32] */, dtype="float32") /* ty=Tensor[(6, 4, 1), float32] */;
  %327 = floor_mod(%325, %326) /* ty=Tensor[(6, 4, 1), float32] */;
  (%327,)
}

def @func_14697() -> Tensor[(1120), float32] {
  @func_14695() /* ty=Tensor[(1120), float32] */
}

def @func_795() -> Tensor[(1120), float32] {
  %329 = fn () -> Tensor[(1120), float32] {
    %328 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %328.0
  };
  %329() /* ty=Tensor[(1120), float32] */
}

def @func_16011(%var_16009: Tensor[(144), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(125, 2), float32], Tensor[(144), float32]) {
  @func_16008(%var_16009) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(125, 2), float32], Tensor[(144), float32]) */
}

def @func_16307(%var_16306: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) {
  %341 = fn (%var_16265: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) {
    %330 = @func_15609() /* ty=(Tensor[(1120), float32],) */;
    %331 = cast(%var_16265, dtype="bool") /* ty=Tensor[(96), bool] */;
    %332 = reshape(%331, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
    %333 = @func_15239() /* ty=Tensor[(1120), float32] */;
    %334 = cast(%333, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %335 = reshape(%334, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
    %336 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %337 = %330.0;
    %338 = @func_10887(%332) /* ty=Tensor[(12, 2, 4), bool] */;
    %339 = @func_10(%335) /* ty=Tensor[(7, 10, 16), float32] */;
    %340 = %336.0;
    (%337, %338, %var_16265, %333, %339, %340)
  };
  %341(%var_16306) /* ty=(Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */
}

def @func_13915() -> (Tensor[(1120), float32],) {
  %342 = @func_6786() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %343 = %342.1;
  (%343,)
}

def @func_3525(%var_3474: Tensor[(9, 2, 7), float32], %var_3485: Tensor[(9, 2, 7), float32], %var_3519: Tensor[(2, 560), float32]) -> (Tensor[(9, 2, 7), float32], Tensor[(7, 4, 4), float64], Tensor[(2, 560), float32]) {
  %344 = cast(%var_3474, dtype="float32") /* ty=Tensor[(9, 2, 7), float32] */;
  %345 = atanh(%344) /* ty=Tensor[(9, 2, 7), float32] */;
  %346 = cast(%var_3485, dtype="float32") /* ty=Tensor[(9, 2, 7), float32] */;
  %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
  %348 = cast(%345, dtype="float32") /* ty=Tensor[(9, 2, 7), float32] */;
  %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %350 = cast(%var_3519, dtype="float32") /* ty=Tensor[(2, 560), float32] */;
  %351 = reshape(%350, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %352 = @func_901(%351) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %353 = maximum(%348, %349) /* ty=Tensor[(9, 2, 7), float32] */;
  %354 = %352.1;
  (%353, %354, %var_3519)
}

def @func_6207(%var_6173: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), int32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %355 = @func_5096() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %356 = %355.0;
  %357 = cast(%var_6173, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %358 = shape_of(%356, dtype="int32") /* ty=Tensor[(3), int32] */;
  %359 = cast(%356, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %361 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %362 = cast(%var_6173, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %363 = bitwise_xor(%359, %360) /* ty=Tensor[(7, 4, 4), int32] */;
  %364 = %361.1;
  %365 = log10(%362) /* ty=Tensor[(7, 4, 4), float32] */;
  (%363, %364, %365)
}

def @func_11097() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %369 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %366 = @func_5422() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %367 = %366.0;
    %368 = @func_8808() /* ty=Tensor[(1120), float32] */;
    (%367, %368)
  };
  %369() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_8317() -> (Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) {
  @func_8315() /* ty=(Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) */
}

def @func_10639() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) {
  @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */
}

def @func_14756() -> (Tensor[(1120), float32],) {
  @func_14754() /* ty=(Tensor[(1120), float32],) */
}

def @func_17365(%var_17351: Tensor[(5, 3, 1), uint16], %var_17352: Tensor[(5, 3, 1), uint16]) -> (Tensor[(5, 3, ?), uint16],) {
  %370 = cast(%var_17352, dtype="uint16") /* ty=Tensor[(5, 3, 1), uint16] */;
  %371 = shape_of(%var_17351, dtype="int32") /* ty=Tensor[(3), int32] */;
  %372 = cast(%var_17351, dtype="uint16") /* ty=Tensor[(5, 3, 1), uint16] */;
  %373 = dyn.reshape(%370, %371, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %374 = right_shift(%372, %373) /* ty=Tensor[(5, 3, ?), uint16] */;
  (%374,)
}

def @func_3594() -> (Tensor[(7, 4, 4), float32],) {
  %377 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %375 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %376 = %375.1;
    (%376,)
  };
  %377() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_14642() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 3, 16), bool]) {
  @func_14640() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 3, 16), bool]) */
}

def @func_3530(%var_3527: Tensor[(9, 2, 7), float32], %var_3528: Tensor[(9, 2, 7), float32], %var_3529: Tensor[(2, 560), float32]) -> (Tensor[(9, 2, 7), float32], Tensor[(7, 4, 4), float64], Tensor[(2, 560), float32]) {
  @func_3525(%var_3527, %var_3528, %var_3529) /* ty=(Tensor[(9, 2, 7), float32], Tensor[(7, 4, 4), float64], Tensor[(2, 560), float32]) */
}

def @func_12547(%var_12542: Tensor[(48, 2), bool]) -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(48, 2), bool]) {
  %378 = cast(%var_12542, dtype="bool") /* ty=Tensor[(48, 2), bool] */;
  %379 = reshape(%378, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %380 = @func_5735() /* ty=Tensor[(1120), float32] */;
  %381 = @func_10887(%379) /* ty=Tensor[(12, 2, 4), bool] */;
  (%380, %381, %var_12542)
}

def @func_11974() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(16, 7, 4), bool], Tensor[(1120), float32]) {
  @func_11972() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(16, 7, 4), bool], Tensor[(1120), float32]) */
}

def @func_432() -> Tensor[(7, 10, 16), bool] {
  %383 = fn () -> Tensor[(7, 10, 16), bool] {
    %382 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %382.1
  };
  %383() /* ty=Tensor[(7, 10, 16), bool] */
}

def @func_2322() -> Tensor[(1120), float32] {
  @func_2320() /* ty=Tensor[(1120), float32] */
}

def @func_16494() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %388 = fn () -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
    %384 = @func_8739() /* ty=(Tensor[(1120), float32],) */;
    %385 = @func_11214() /* ty=(Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32, Tensor[(7, 4, 4), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool]) */;
    %386 = %384.0;
    %387 = %385.3;
    (%386, %387)
  };
  %388() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_7704() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) {
  @func_7702() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_903(%var_902: Tensor[(7, 10, 16), float32]) -> (Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) {
  %400 = fn (%var_888: Tensor[(7, 10, 16), float32]) -> (Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) {
    %389 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %390 = %389.1;
    %391 = cast(%var_888, dtype="uint32") /* ty=Tensor[(7, 10, 16), uint32] */;
    %392 = shape_of(%390, dtype="int32") /* ty=Tensor[(3), int32] */;
    %393 = cast(%390, dtype="uint32") /* ty=Tensor[(7, 10, 16), uint32] */;
    %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %395 = cast(meta[relay.Constant][13] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
    %396 = reshape(%395, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
    %397 = @func_605(%396) /* ty=(Tensor[(7, 4, 4), float64],) */;
    %398 = maximum(%393, %394) /* ty=Tensor[(7, 10, 16), uint32] */;
    %399 = %397.0;
    (%398, %399, meta[relay.Constant][13] /* ty=Tensor[(112), float32] */)
  };
  %400(%var_902) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */
}

def @func_10219() -> Tensor[(1120), float32] {
  @func_10217() /* ty=Tensor[(1120), float32] */
}

def @func_4165() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %401 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %402 = %401.0;
  %403 = cast(%402, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %404 = reshape(%403, newshape=[1120]) /* ty=Tensor[(1120), float32] */;
  %405 = @func_4043(%404) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64], Tensor[(1120), float32]) */;
  %406 = %405.0;
  (%402, %406)
}

def @func_3348() -> (Tensor[(7, 10, 16), bool],) {
  %409 = fn () -> (Tensor[(7, 10, 16), bool],) {
    %407 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
    %408 = %407.0;
    (%408,)
  };
  %409() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_9724() -> (Tensor[(1120), float32],) {
  %412 = fn () -> (Tensor[(1120), float32],) {
    %410 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
    %411 = %410.0;
    (%411,)
  };
  %412() /* ty=(Tensor[(1120), float32],) */
}

def @func_9378() -> (Tensor[(1120), float32],) {
  %414 = fn () -> (Tensor[(1120), float32],) {
    %413 = @func_5288() /* ty=Tensor[(1120), float32] */;
    (%413,)
  };
  %414() /* ty=(Tensor[(1120), float32],) */
}

def @func_16008(%var_15996: Tensor[(144), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(125, 2), float32], Tensor[(144), float32]) {
  %415 = cast(meta[relay.Constant][14] /* ty=Tensor[(125, 2), float32] */, dtype="float32") /* ty=Tensor[(125, 2), float32] */;
  %416 = cast(%var_15996, dtype="float32") /* ty=Tensor[(144), float32] */;
  %417 = reshape(%415, newshape=[5, 50]) /* ty=Tensor[(5, 50), float32] */;
  %418 = reshape(%416, newshape=[144]) /* ty=Tensor[(144), float32] */;
  %419 = @func_9008(%417, %418) /* ty=(Tensor[(1120), float32], Tensor[(144, 1), float32], Tensor[(5, 50), float32], Tensor[(144), float32]) */;
  %420 = @func_794() /* ty=Tensor[(1120), float32] */;
  %421 = %419.0;
  (%420, %421, meta[relay.Constant][14] /* ty=Tensor[(125, 2), float32] */, %var_15996)
}

def @func_14377() -> (Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %427 = fn () -> (Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
    %422 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
    %423 = @func_8626() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %424 = %422.0;
    %425 = %423.2;
    %426 = @func_5288() /* ty=Tensor[(1120), float32] */;
    (%424, %425, %426)
  };
  %427() /* ty=(Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */
}

def @func_16361(%var_16358: Tensor[(2, 224), bool], %var_16359: Tensor[(960), uint8], %var_16360: Tensor[(2, 224), bool]) -> (Tensor[(7, 10, 16), uint32], Tensor[(960), uint8], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(2, 224), int8], Tensor[(16, 7, 4), float32]) {
  @func_16356(%var_16358, %var_16359, %var_16360) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(960), uint8], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(2, 224), int8], Tensor[(16, 7, 4), float32]) */
}

def @func_5681() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %436 = fn () -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
    %428 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %429 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %430 = @func_3347() /* ty=(Tensor[(7, 10, 16), bool],) */;
    %431 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %432 = %428.1;
    %433 = %429.0;
    %434 = %430.0;
    %435 = %431.0;
    (%432, %433, %434, %435)
  };
  %436() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */
}

def @main(%var_17612: Tensor[(5, 16, 1), int16], %var_17613: Tensor[(5, 16, 16), int16]) -> (Tensor[(5, 16, 16), int16],) {
  %437 = cast(%var_17612, dtype="int16") /* ty=Tensor[(5, 16, 1), int16] */;
  %438 = cast(%var_17613, dtype="int16") /* ty=Tensor[(5, 16, 16), int16] */;
  %439 = left_shift(%437, %438) /* ty=Tensor[(5, 16, 16), int16] */;
  (%439,)
}

def @func_11678(%var_11666: Tensor[(48), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(48), float32], Tensor[(7, 10, 16), float32]) {
  %440 = @func_7508() /* ty=(Tensor[(1120), float32],) */;
  %441 = cast(%var_11666, dtype="float32") /* ty=Tensor[(48), float32] */;
  %442 = reshape(%441, newshape=[12, 4, 1]) /* ty=Tensor[(12, 4, 1), float32] */;
  %443 = @func_3701(%442) /* ty=(Tensor[(12, 4, 1), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %444 = %440.0;
  %445 = cast(%444, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %446 = reshape(%445, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %447 = %443.4;
  %448 = @func_10(%446) /* ty=Tensor[(7, 10, 16), float32] */;
  (%444, %447, %var_11666, %448)
}

def @func_10826() -> (Tensor[(11, 1, 3), float32], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32], Tensor[(30), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32]) {
  @func_10824() /* ty=(Tensor[(11, 1, 3), float32], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32], Tensor[(30), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_2375() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %449 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %450 = %449.0;
  %451 = @func_1420() /* ty=Tensor[(1120), float32] */;
  (%450, %451)
}

def @func_15846() -> Tensor[(1120), float32] {
  @func_15844() /* ty=Tensor[(1120), float32] */
}

def @func_5201() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %452 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %453 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %454 = %452.1;
  %455 = %453.3;
  (%454, %455)
}

def @func_6379(%var_6377: Tensor[(3, 9, 12), float64]) -> (Tensor[(3, 9, 12), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1, 30), float32]) {
  @func_6376(%var_6377) /* ty=(Tensor[(3, 9, 12), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1, 30), float32]) */
}

def @func_3309() -> (Tensor[(1120), float32],) {
  %456 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %457 = %456.1;
  (%457,)
}

def @func_5522(%var_5520: Tensor[(13, 13, 10), int16], %var_5521: Tensor[(13, 13, 10), int16]) -> (Tensor[(13, 13, 10), bool], Tensor[(1120), float32]) {
  @func_5518(%var_5520, %var_5521) /* ty=(Tensor[(13, 13, 10), bool], Tensor[(1120), float32]) */
}

def @func_3701(%var_3645: Tensor[(12, 4, 1), float32]) -> (Tensor[(12, 4, 1), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), bool], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %458 = cast(%var_3645, dtype="float32") /* ty=Tensor[(12, 4, 1), float32] */;
  %459 = cast(meta[relay.Constant][15] /* ty=Tensor[(1120), bool] */, dtype="bool") /* ty=Tensor[(1120), bool] */;
  %460 = reshape(%459, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), bool] */;
  %461 = @func_492(%460) /* ty=(Tensor[(7, 10, 16), bool],) */;
  %462 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %463 = atanh(%458) /* ty=Tensor[(12, 4, 1), float32] */;
  %464 = %461.0;
  %465 = @func_957() /* ty=Tensor[(1120), float32] */;
  %466 = %462.1;
  (%463, %464, meta[relay.Constant][15] /* ty=Tensor[(1120), bool] */, %465, %466)
}

def @func_9114() -> (Tensor[(1120), float32],) {
  %469 = fn () -> (Tensor[(1120), float32],) {
    %467 = @func_8051() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %468 = %467.0;
    (%468,)
  };
  %469() /* ty=(Tensor[(1120), float32],) */
}

def @func_1502() -> Tensor[(1120), float32] {
  @func_1500() /* ty=Tensor[(1120), float32] */
}

def @func_16356(%var_16317: Tensor[(2, 224), bool], %var_16318: Tensor[(960), uint8], %var_16335: Tensor[(2, 224), bool]) -> (Tensor[(7, 10, 16), uint32], Tensor[(960), uint8], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(2, 224), int8], Tensor[(16, 7, 4), float32]) {
  %470 = @func_7470() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */;
  %471 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %472 = @func_15906() /* ty=(Tensor[(7, 4, 4), float64], Tensor[(11, 15, 5), float32]) */;
  %473 = cast(%var_16335, dtype="int8") /* ty=Tensor[(2, 224), int8] */;
  %474 = shape_of(%var_16317, dtype="int32") /* ty=Tensor[(2), int32] */;
  %475 = cast(%var_16317, dtype="int8") /* ty=Tensor[(2, 224), int8] */;
  %476 = dyn.reshape(%473, %474, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %477 = cast(%var_16317, dtype="bool") /* ty=Tensor[(2, 224), bool] */;
  %478 = cast(%var_16318, dtype="uint8") /* ty=Tensor[(960), uint8] */;
  %479 = reshape(%477, newshape=[1, 448]) /* ty=Tensor[(1, 448), bool] */;
  %480 = reshape(%478, newshape=[960]) /* ty=Tensor[(960), uint8] */;
  %481 = @func_6483(%479, %480) /* ty=(Tensor[(1120), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32], Tensor[(16, 7, 4), bool], Tensor[(1, 448), bool], Tensor[(8, 15, 8), uint8], Tensor[(960), uint8]) */;
  %482 = %481.3;
  %483 = cast(%482, dtype="float64") /* ty=Tensor[(16, 7, 4), float64] */;
  %484 = asin(%483) /* ty=Tensor[(16, 7, 4), float64] */;
  %485 = cast(%484, dtype="float32") /* ty=Tensor[(16, 7, 4), float32] */;
  %486 = %470.1;
  %487 = %471.1;
  %488 = %472.1;
  %489 = left_shift(%475, %476) /* ty=Tensor[(2, 224), int8] */;
  %490 = log(%485) /* ty=Tensor[(16, 7, 4), float32] */;
  (%486, %var_16318, %487, %488, %489, %490)
}

def @func_14296() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %491 = @func_12426() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %492 = @func_13499() /* ty=(Tensor[(1120), float32],) */;
  %493 = @func_12835() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %494 = %491.0;
  %495 = %492.0;
  %496 = %493.2;
  (%494, %495, %496)
}

def @func_14298() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_14296() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_7660() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %501 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %497 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %498 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %499 = %497.1;
    %500 = %498.1;
    (%499, %500)
  };
  %501() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_1834() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %502 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %503 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %504 = %502.0;
  (%503, %504)
}

def @func_8898() -> (Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %508 = fn () -> (Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
    %505 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %506 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
    %507 = %505.0;
    (%506, %507)
  };
  %508() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */
}

def @func_8628() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  @func_8626() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_2492() -> (Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %509 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %510 = cast(meta[relay.Constant][16] /* ty=Tensor[(250), float32] */, dtype="float32") /* ty=Tensor[(250), float32] */;
  %511 = reshape(%510, newshape=[250]) /* ty=Tensor[(250), float32] */;
  %512 = @func_1159(%511) /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
  %513 = cast(meta[relay.Constant][16] /* ty=Tensor[(250), float32] */, dtype="float32") /* ty=Tensor[(250), float32] */;
  %514 = %509.1;
  %515 = %512.1;
  %516 = cosh(%513) /* ty=Tensor[(250), float32] */;
  (%514, %515, %516)
}

def @func_15923() -> Tensor[(1120), float32] {
  %518 = fn () -> Tensor[(1120), float32] {
    %517 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
    %517.0
  };
  %518() /* ty=Tensor[(1120), float32] */
}

def @func_13917() -> (Tensor[(1120), float32],) {
  @func_13915() /* ty=(Tensor[(1120), float32],) */
}

def @func_6791() -> (Tensor[(1120), float32],) {
  %519 = @func_5633() /* ty=(Tensor[(1120), float32],) */;
  %520 = %519.0;
  (%520,)
}

def @func_9905() -> (Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float64], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  @func_9903() /* ty=(Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float64], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */
}

def @func_17608() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  @func_17606() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_17521() -> Tensor[(1120), float32] {
  %522 = fn () -> Tensor[(1120), float32] {
    %521 = @func_13866() /* ty=(Tensor[(1120), float32],) */;
    %521.0
  };
  %522() /* ty=Tensor[(1120), float32] */
}

def @func_10510() -> (Tensor[(7, 10, 16), float64], Tensor[(1120), float32]) {
  %529 = fn () -> (Tensor[(7, 10, 16), float64], Tensor[(1120), float32]) {
    %523 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
    %524 = %523.0;
    %525 = cast(%524, dtype="float64") /* ty=Tensor[(7, 10, 16), float64] */;
    %526 = @func_4685() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) */;
    %527 = asin(%525) /* ty=Tensor[(7, 10, 16), float64] */;
    %528 = %526.2;
    (%527, %528)
  };
  %529() /* ty=(Tensor[(7, 10, 16), float64], Tensor[(1120), float32]) */
}

def @func_14874() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %534 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %530 = @func_5404() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %531 = @func_4685() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(250, 1), float64]) */;
    %532 = %530.0;
    %533 = %531.0;
    (%532, %533)
  };
  %534() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_2254() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_6786() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %535 = @func_6141() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %536 = %535.1;
  %537 = @func_4471() /* ty=Tensor[(1120), float32] */;
  (%536, %537)
}

def @func_5096() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) {
  %538 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %539 = @func_3347() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %540 = %538.2;
  %541 = %539.0;
  (%540, %541)
}

def @func_10085() -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %542 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %543 = @func_8104() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %544 = %542.0;
  %545 = %543.0;
  (%544, %545)
}

def @func_8626() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %546 = @func_4105() /* ty=(Tensor[(1120), float32],) */;
  %547 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %548 = %546.0;
  %549 = @func_7360() /* ty=Tensor[(7, 4, 4), float32] */;
  (%547, %548, %549)
}

def @func_16937() -> (Tensor[(1120), float32],) {
  %552 = fn () -> (Tensor[(1120), float32],) {
    %550 = @func_5997() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %551 = %550.2;
    (%551,)
  };
  %552() /* ty=(Tensor[(1120), float32],) */
}

def @func_2984(%var_2975: Tensor[(7, 4, 4), float64]) -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), int32]) {
  %553 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %554 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %555 = %554.2;
  %556 = cast(%555, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %557 = tan(%556) /* ty=Tensor[(7, 4, 4), float64] */;
  %558 = cast(%var_2975, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %559 = shape_of(%557, dtype="int32") /* ty=Tensor[(3), int32] */;
  %560 = cast(%557, dtype="int32") /* ty=Tensor[(7, 4, 4), int32] */;
  %561 = dyn.reshape(%558, %559, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %562 = %553.1;
  %563 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  %564 = maximum(%560, %561) /* ty=Tensor[(7, 4, 4), int32] */;
  (%562, %563, %564)
}

def @func_6210(%var_6208: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), int32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  @func_6207(%var_6208) /* ty=(Tensor[(7, 4, 4), int32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_9138() -> (Tensor[(7, 4, 4), float32],) {
  %567 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %565 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
    %566 = %565.1;
    (%566,)
  };
  %567() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_7827() -> (Tensor[(1120), float32], Tensor[(2, 560), float64]) {
  %568 = @func_6932() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) */;
  %569 = %568.1;
  %570 = cast(%569, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %571 = asin(%570) /* ty=Tensor[(2, 560), float64] */;
  %572 = cast(%569, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(2), int32] */;
  %574 = cast(%571, dtype="bool") /* ty=Tensor[(2, 560), bool] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %576 = not_equal(%574, %575) /* ty=Tensor[(2, 560), bool] */;
  %577 = cast(%569, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(2), int32] */;
  %579 = cast(%576, dtype="float64") /* ty=Tensor[(2, 560), float64] */;
  %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %581 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %582 = floor_mod(%579, %580) /* ty=Tensor[(2, 560), float64] */;
  (%581, %582)
}

def @func_12856() -> Tensor[(1120), float32] {
  @func_12854() /* ty=Tensor[(1120), float32] */
}

def @func_15351() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %587 = fn () -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
    %583 = @func_14296() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %584 = @func_10217() /* ty=Tensor[(1120), float32] */;
    %585 = %583.0;
    %586 = @func_10699() /* ty=Tensor[(1120), float32] */;
    (%584, %585, %586)
  };
  %587() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_414() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %599 = fn () -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
    %588 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %589 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %590 = %589.1;
    %591 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %592 = %591.2;
    %593 = cast(%592, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %594 = shape_of(%590, dtype="int32") /* ty=Tensor[(3), int32] */;
    %595 = cast(%590, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
    %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %597 = %588.2;
    %598 = logical_and(%595, %596) /* ty=Tensor[(7, 10, 16), bool] */;
    (%597, %598)
  };
  %599() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_11214() -> (Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32, Tensor[(7, 4, 4), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool]) {
  %600 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %601 = cast(2.98812f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %602 = reshape(%601, newshape=[]) /* ty=float32 */;
  %603 = @func_688(%602) /* ty=(Tensor[(6, 4, 1), float32],) */;
  %604 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %605 = cast(meta[relay.Constant][17] /* ty=Tensor[(96), bool] */, dtype="bool") /* ty=Tensor[(96), bool] */;
  %606 = reshape(%605, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %607 = %600.1;
  %608 = %603.0;
  %609 = %604.1;
  %610 = @func_10887(%606) /* ty=Tensor[(12, 2, 4), bool] */;
  (%607, %608, 2.98812f /* ty=float32 */, %609, %610, meta[relay.Constant][17] /* ty=Tensor[(96), bool] */)
}

def @func_12051() -> Tensor[(1120), float32] {
  %611 = @func_11136() /* ty=(Tensor[(1120), float32],) */;
  %611.0
}

def @func_15659() -> Tensor[(1120), float32] {
  %613 = fn () -> Tensor[(1120), float32] {
    %612 = @func_5784() /* ty=(Tensor[(1120), float32],) */;
    %612.0
  };
  %613() /* ty=Tensor[(1120), float32] */
}

def @func_5288() -> Tensor[(1120), float32] {
  @func_1420() /* ty=Tensor[(1120), float32] */
}

def @func_4641() -> Tensor[(7, 10, 16), bool] {
  %615 = fn () -> Tensor[(7, 10, 16), bool] {
    %614 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %614.1
  };
  %615() /* ty=Tensor[(7, 10, 16), bool] */
}

def @func_11870() -> (Tensor[(11, 15, 5), float32],) {
  %616 = @func_3908() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %617 = %616.0;
  (%617,)
}

def @func_1357(%var_1350: Tensor[(112), float32]) -> (Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) {
  %618 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %619 = cast(%var_1350, dtype="float32") /* ty=Tensor[(112), float32] */;
  %620 = reshape(%619, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %621 = @func_605(%620) /* ty=(Tensor[(7, 4, 4), float64],) */;
  %622 = %618.1;
  %623 = %621.0;
  (%622, %623, %var_1350)
}

def @func_9238() -> Tensor[(7, 4, 4), float32] {
  %625 = fn () -> Tensor[(7, 4, 4), float32] {
    %624 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %624.0
  };
  %625() /* ty=Tensor[(7, 4, 4), float32] */
}

def @func_7348() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %629 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %626 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
    %627 = %626.0;
    %628 = @func_261() /* ty=Tensor[(1120), float32] */;
    (%627, %628)
  };
  %629() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_5405() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %634 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %630 = @func_3309() /* ty=(Tensor[(1120), float32],) */;
    %631 = @func_957() /* ty=Tensor[(1120), float32] */;
    %632 = %630.0;
    %633 = @func_4471() /* ty=Tensor[(1120), float32] */;
    (%631, %632, %633)
  };
  %634() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_990() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %639 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %635 = @func_563() /* ty=(Tensor[(1120), float32],) */;
    %636 = @func_563() /* ty=(Tensor[(1120), float32],) */;
    %637 = %635.0;
    %638 = %636.0;
    (%637, %638)
  };
  %639() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_691(%var_689: float32) -> (Tensor[(6, 4, 1), float32],) {
  @func_688(%var_689) /* ty=(Tensor[(6, 4, 1), float32],) */
}

def @func_357() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_6709() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %642 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %640 = @func_6419() /* ty=Tensor[(1120), float32] */;
    %641 = @func_1500() /* ty=Tensor[(1120), float32] */;
    (%640, %641)
  };
  %642() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_2180() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_7829() -> (Tensor[(1120), float32], Tensor[(2, 560), float64]) {
  @func_7827() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float64]) */
}

def @func_15610() -> (Tensor[(1120), float32],) {
  %645 = fn () -> (Tensor[(1120), float32],) {
    %643 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
    %644 = %643.1;
    (%644,)
  };
  %645() /* ty=(Tensor[(1120), float32],) */
}

def @func_11833(%var_11792: Tensor[(11, 16, 7), uint16]) -> (Tensor[(11, 16, 7), bool], Tensor[(11, 16, 7), float64]) {
  %646 = cast(%var_11792, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %647 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(11, 16, 7), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %648 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 16, 7), uint16] */, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %649 = dyn.reshape(%646, %647, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %650 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 16, 7), uint16] */, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %651 = shape_of(%var_11792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %652 = cast(%var_11792, dtype="bool") /* ty=Tensor[(11, 16, 7), bool] */;
  %653 = dyn.reshape(%650, %651, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %654 = not_equal(%652, %653) /* ty=Tensor[(11, 16, 7), bool] */;
  %655 = cast(%654, dtype="float64") /* ty=Tensor[(11, 16, 7), float64] */;
  %656 = less_equal(%648, %649) /* ty=Tensor[(11, 16, 7), bool] */;
  %657 = rsqrt(%655) /* ty=Tensor[(11, 16, 7), float64] */;
  (%656, %657)
}

def @func_9799() -> Tensor[(1120), float32] {
  %658 = @func_4105() /* ty=(Tensor[(1120), float32],) */;
  %658.0
}

def @func_4565() -> (Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(8, 182), float32], Tensor[(1120), float32]) {
  %659 = cast(meta[relay.Constant][19] /* ty=Tensor[(8, 182), float32] */, dtype="float32") /* ty=Tensor[(8, 182), float32] */;
  %660 = reshape(%659, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
  %661 = @func_1948(%660) /* ty=(Tensor[(13, 8, 14), float32],) */;
  %662 = @func_2121() /* ty=Tensor[(1120), float32] */;
  %663 = %661.0;
  %664 = @func_261() /* ty=Tensor[(1120), float32] */;
  (%662, %663, meta[relay.Constant][19] /* ty=Tensor[(8, 182), float32] */, %664)
}

def @func_14263(%var_14261: Tensor[(112), float32], %var_14262: Tensor[(825), float32]) -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float64], Tensor[(112), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(7, 10, 16), bool], float32, Tensor[(16, 8), float32], Tensor[(1120), float32]) {
  @func_14259(%var_14261, %var_14262) /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float64], Tensor[(112), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(7, 10, 16), bool], float32, Tensor[(16, 8), float32], Tensor[(1120), float32]) */
}

def @func_8051() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %665 = @func_7347() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %666 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %667 = %665.1;
  %668 = %666.0;
  (%667, %668)
}

def @func_5776() -> Tensor[(1120), float32] {
  %670 = fn () -> Tensor[(1120), float32] {
    %669 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %669.2
  };
  %670() /* ty=Tensor[(1120), float32] */
}

def @func_6793() -> (Tensor[(1120), float32],) {
  @func_6791() /* ty=(Tensor[(1120), float32],) */
}

def @func_4143() -> (Tensor[(1120), float32],) {
  @func_4141() /* ty=(Tensor[(1120), float32],) */
}

def @func_2600(%var_2599: Tensor[(1, 10, 3), float32]) -> Tensor[(?, 10, 3), int8] {
  %687 = fn (%var_2551: Tensor[(1, 10, 3), float32]) -> Tensor[(?, 10, 3), int8] {
    %671 = cast(%var_2551, dtype="float32") /* ty=Tensor[(1, 10, 3), float32] */;
    %672 = sqrt(%671) /* ty=Tensor[(1, 10, 3), float32] */;
    %673 = cast(%672, dtype="bool") /* ty=Tensor[(1, 10, 3), bool] */;
    %674 = shape_of(%var_2551, dtype="int32") /* ty=Tensor[(3), int32] */;
    %675 = cast(%var_2551, dtype="bool") /* ty=Tensor[(1, 10, 3), bool] */;
    %676 = dyn.reshape(%673, %674, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %677 = logical_or(%675, %676) /* ty=Tensor[(?, 10, 3), bool] */;
    %678 = cast(%672, dtype="float64") /* ty=Tensor[(1, 10, 3), float64] */;
    %679 = shape_of(%677, dtype="int32") /* ty=Tensor[(3), int32] */;
    %680 = cast(%677, dtype="float64") /* ty=Tensor[(?, 10, 3), float64] */;
    %681 = dyn.reshape(%678, %679, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %682 = floor_divide(%680, %681) /* ty=Tensor[(?, 10, 3), float64] */;
    %683 = cast(%682, dtype="int8") /* ty=Tensor[(?, 10, 3), int8] */;
    %684 = shape_of(%672, dtype="int32") /* ty=Tensor[(3), int32] */;
    %685 = cast(%672, dtype="int8") /* ty=Tensor[(1, 10, 3), int8] */;
    %686 = dyn.reshape(%683, %684, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    subtract(%685, %686) /* ty=Tensor[(?, 10, 3), int8] */
  };
  %687(%var_2599) /* ty=Tensor[(?, 10, 3), int8] */
}

def @func_10217() -> Tensor[(1120), float32] {
  @func_10120() /* ty=Tensor[(1120), float32] */
}

def @func_10903() -> Tensor[(1120), float32] {
  @func_10901() /* ty=Tensor[(1120), float32] */
}

def @func_13195() -> Tensor[(1120), float32] {
  %688 = fn () -> Tensor[(1120), float32] {
    @func_1420() /* ty=Tensor[(1120), float32] */
  };
  %688() /* ty=Tensor[(1120), float32] */
}

def @func_16619() -> Tensor[(1120), float32] {
  %689 = @func_3724() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %689.0
}

def @func_15403() -> (Tensor[(9, 3, 5), float32],) {
  %692 = fn () -> (Tensor[(9, 3, 5), float32],) {
    %690 = cast(meta[relay.Constant][20] /* ty=Tensor[(9, 3, 5), float32] */, dtype="float32") /* ty=Tensor[(9, 3, 5), float32] */;
    %691 = tan(%690) /* ty=Tensor[(9, 3, 5), float32] */;
    (%691,)
  };
  %692() /* ty=(Tensor[(9, 3, 5), float32],) */
}

def @func_2987(%var_2985: Tensor[(7, 4, 4), float64]) -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), int32]) {
  @func_2984(%var_2985) /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), int32]) */
}

def @func_11597() -> (Tensor[(1120), float32],) {
  %695 = fn () -> (Tensor[(1120), float32],) {
    %693 = @func_8051() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %694 = %693.1;
    (%694,)
  };
  %695() /* ty=(Tensor[(1120), float32],) */
}

def @func_10567() -> (Tensor[(7, 10, 16), bool],) {
  %697 = fn () -> (Tensor[(7, 10, 16), bool],) {
    %696 = @func_4640() /* ty=Tensor[(7, 10, 16), bool] */;
    (%696,)
  };
  %697() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_1390() -> (Tensor[(11, 15, 5), float32],) {
  %698 = @func_1006() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %699 = %698.0;
  (%699,)
}

def @func_15184() -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(2, 48), bool], Tensor[(7, 10, 16), bool]) {
  @func_15182() /* ty=(Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(2, 48), bool], Tensor[(7, 10, 16), bool]) */
}

def @func_2438() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) {
  @func_2436() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) */
}

def @func_13981() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), float64], Tensor[(1120), float32]) {
  %700 = @func_13844() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %701 = @func_3593() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %702 = @func_9100() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %703 = %702.2;
  %704 = cast(%703, dtype="int32") /* ty=Tensor[(1120), int32] */;
  %705 = reshape(%704, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), int32] */;
  %706 = @func_9568(%705) /* ty=(Tensor[(11, 15, 5), float32], Tensor[(11, 15, 5), bool], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(14, 16, 10), float32]) */;
  %707 = %706.0;
  %708 = cast(%707, dtype="float64") /* ty=Tensor[(11, 15, 5), float64] */;
  %709 = %700.1;
  %710 = %701.0;
  %711 = log(%708) /* ty=Tensor[(11, 15, 5), float64] */;
  %712 = @func_1500() /* ty=Tensor[(1120), float32] */;
  (%709, %710, %703, %711, %712)
}

def @func_4424() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %713 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %714 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
  %715 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %716 = %713.0;
  %717 = %714.3;
  %718 = %715.0;
  (%716, %717, %718)
}

def @func_12333() -> Tensor[(7, 10, 16), bool] {
  %720 = fn () -> Tensor[(7, 10, 16), bool] {
    %719 = @func_2882() /* ty=(Tensor[(7, 10, 16), bool],) */;
    %719.0
  };
  %720() /* ty=Tensor[(7, 10, 16), bool] */
}

def @func_12426() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %721 = @func_3938() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %722 = %721.1;
  %723 = @func_957() /* ty=Tensor[(1120), float32] */;
  (%722, %723)
}

def @func_6263() -> (Tensor[(7, 10, 16), bool],) {
  @func_6261() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_12731(%var_12730: Tensor[(96, 1), bool]) -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(12, 2, 4), bool], Tensor[(96, 1), bool], Tensor[(1120), float32]) {
  %735 = fn (%var_12716: Tensor[(96, 1), bool]) -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(12, 2, 4), bool], Tensor[(96, 1), bool], Tensor[(1120), float32]) {
    %724 = @func_8051() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %725 = @func_3908() /* ty=(Tensor[(11, 15, 5), float32],) */;
    %726 = %725.0;
    %727 = cast(%726, dtype="float32") /* ty=Tensor[(11, 15, 5), float32] */;
    %728 = cast(%var_12716, dtype="bool") /* ty=Tensor[(96, 1), bool] */;
    %729 = reshape(%728, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
    %730 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %731 = %724.1;
    %732 = sigmoid(%727) /* ty=Tensor[(11, 15, 5), float32] */;
    %733 = @func_10887(%729) /* ty=Tensor[(12, 2, 4), bool] */;
    %734 = %730.0;
    (%731, %732, %733, %var_12716, %734)
  };
  %735(%var_12730) /* ty=(Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(12, 2, 4), bool], Tensor[(96, 1), bool], Tensor[(1120), float32]) */
}

def @func_11173() -> Tensor[(1120), float32] {
  %736 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %736.0
}

def @func_12428() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  @func_12426() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_13416() -> Tensor[(7, 4, 4), float32] {
  @func_13414() /* ty=Tensor[(7, 4, 4), float32] */
}

def @func_7191(%var_7188: Tensor[(5, 5, 10), float32], %var_7189: Tensor[(144, 1), float32], %var_7190: Tensor[(5, 5, 10), float64]) -> (Tensor[(5, 5, 10), uint64], Tensor[(6, 3, 8), float32], Tensor[(144, 1), float32], Tensor[(5, 5, 10), bool], Tensor[(5, 5, 10), float32]) {
  @func_7186(%var_7188, %var_7189, %var_7190) /* ty=(Tensor[(5, 5, 10), uint64], Tensor[(6, 3, 8), float32], Tensor[(144, 1), float32], Tensor[(5, 5, 10), bool], Tensor[(5, 5, 10), float32]) */
}

def @func_912() -> Tensor[(7, 4, 4), float32] {
  %738 = fn () -> Tensor[(7, 4, 4), float32] {
    %737 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %737.1
  };
  %738() /* ty=Tensor[(7, 4, 4), float32] */
}

def @func_15516() -> Tensor[(1120), float32] {
  @func_15514() /* ty=Tensor[(1120), float32] */
}

def @func_13983() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), float64], Tensor[(1120), float32]) {
  @func_13981() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), float64], Tensor[(1120), float32]) */
}

def @func_12854() -> Tensor[(1120), float32] {
  @func_9799() /* ty=Tensor[(1120), float32] */
}

def @func_7508() -> (Tensor[(1120), float32],) {
  %739 = @func_5784() /* ty=(Tensor[(1120), float32],) */;
  %740 = %739.0;
  (%740,)
}

def @func_7471() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) {
  %747 = fn () -> (Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) {
    %741 = @func_1661() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %742 = %741.0;
    %743 = cast(%742, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %744 = reshape(%743, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
    %745 = @func_901(%744) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
    %746 = %745.0;
    (%742, %746)
  };
  %747() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */
}

def @func_15481() -> Tensor[(1120), float32] {
  @func_15479() /* ty=Tensor[(1120), float32] */
}

def @func_16042() -> Tensor[(7, 4, 4), float32] {
  %749 = fn () -> Tensor[(7, 4, 4), float32] {
    %748 = @func_13199() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %748.0
  };
  %749() /* ty=Tensor[(7, 4, 4), float32] */
}

def @func_8741() -> (Tensor[(1120), float32],) {
  @func_8739() /* ty=(Tensor[(1120), float32],) */
}

def @func_8104() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %750 = @func_7016() /* ty=(Tensor[(1120), float32],) */;
  %751 = @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %752 = @func_7016() /* ty=(Tensor[(1120), float32],) */;
  %753 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %754 = %750.0;
  %755 = %751.0;
  %756 = %752.0;
  %757 = %753.1;
  (%754, %755, %756, %757)
}

def @func_7792() -> (Tensor[(7, 4, 4), float32],) {
  %760 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %758 = @func_3593() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %759 = %758.0;
    (%759,)
  };
  %760() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_5482() -> Tensor[(1120), float32] {
  %761 = @func_3805() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) */;
  %761.0
}

def @func_13101() -> (Tensor[(1120), float32],) {
  %764 = fn () -> (Tensor[(1120), float32],) {
    %762 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %763 = %762.0;
    (%763,)
  };
  %764() /* ty=(Tensor[(1120), float32],) */
}

def @func_1737() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_8855() -> (Tensor[(7, 4, 4), float64],) {
  %765 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %766 = %765.1;
  %767 = cast(meta[relay.Constant][21] /* ty=Tensor[(7, 4, 4), float32] */, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %768 = shape_of(%766, dtype="int32") /* ty=Tensor[(3), int32] */;
  %769 = cast(%766, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %770 = dyn.reshape(%767, %768, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %771 = floor_mod(%769, %770) /* ty=Tensor[(7, 4, 4), float64] */;
  (%771,)
}

def @func_11545() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %778 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
    %772 = @func_3755() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %773 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
    %774 = @func_5775() /* ty=Tensor[(1120), float32] */;
    %775 = @func_9799() /* ty=Tensor[(1120), float32] */;
    %776 = %772.1;
    %777 = %773.1;
    (%774, %775, %776, %777)
  };
  %778() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_10782() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  @func_10780() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_8715() -> Tensor[(14, 16, 10), float64] {
  %779 = cast(meta[relay.Constant][22] /* ty=Tensor[(14, 16, 10), float64] */, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
  atan(%779) /* ty=Tensor[(14, 16, 10), float64] */
}

def @func_6039(%var_6037: Tensor[(16, 7, 4), bool], %var_6038: Tensor[(16, 7, 4), bool]) -> (Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) {
  %787 = fn (%var_6010: Tensor[(16, 7, 4), bool], %var_6011: Tensor[(16, 7, 4), bool]) -> (Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) {
    %780 = cast(%var_6011, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
    %781 = shape_of(%var_6010, dtype="int32") /* ty=Tensor[(3), int32] */;
    %782 = cast(%var_6010, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
    %783 = dyn.reshape(%780, %781, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %784 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
    %785 = logical_or(%782, %783) /* ty=Tensor[(16, 7, 4), bool] */;
    %786 = %784.0;
    (%785, %786)
  };
  %787(%var_6037, %var_6038) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) */
}

def @func_10964() -> Tensor[(1120), float32] {
  @func_10962() /* ty=Tensor[(1120), float32] */
}

def @func_15907() -> (Tensor[(7, 4, 4), float64], Tensor[(11, 15, 5), float32]) {
  %794 = fn () -> (Tensor[(7, 4, 4), float64], Tensor[(11, 15, 5), float32]) {
    %788 = @func_15141() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %789 = %788.0;
    %790 = cast(%789, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
    %791 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
    %792 = erf(%790) /* ty=Tensor[(7, 4, 4), float64] */;
    %793 = %791.2;
    (%792, %793)
  };
  %794() /* ty=(Tensor[(7, 4, 4), float64], Tensor[(11, 15, 5), float32]) */
}

def @func_11681(%var_11679: Tensor[(48), float32]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(48), float32], Tensor[(7, 10, 16), float32]) {
  @func_11678(%var_11679) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(48), float32], Tensor[(7, 10, 16), float32]) */
}

def @func_1532() -> (Tensor[(7, 10, 16), bool],) {
  @func_1530() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_16124(%var_16122: Tensor[(7, 10, 16), bool]) -> Tensor[(7, 10, 16), uint8] {
  @func_16121(%var_16122) /* ty=Tensor[(7, 10, 16), uint8] */
}

def @func_11626() -> Tensor[(1120), float32] {
  @func_1420() /* ty=Tensor[(1120), float32] */
}

def @func_9950() -> (Tensor[(7, 4, 4), float32],) {
  @func_9948() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_11788() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float64]) {
  %795 = @func_10780() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %796 = %795.0;
  %797 = cast(%796, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %798 = @func_1500() /* ty=Tensor[(1120), float32] */;
  %799 = sigmoid(%797) /* ty=Tensor[(7, 4, 4), float64] */;
  (%798, %799)
}

def @func_10889(%var_10888: Tensor[(12, 2, 4), bool]) -> Tensor[(12, 2, 4), bool] {
  %804 = fn (%var_10849: Tensor[(12, 2, 4), bool]) -> Tensor[(12, 2, 4), bool] {
    %800 = cast(meta[relay.Constant][23] /* ty=Tensor[(12, 2, 4), bool] */, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
    %801 = shape_of(%var_10849, dtype="int32") /* ty=Tensor[(3), int32] */;
    %802 = cast(%var_10849, dtype="bool") /* ty=Tensor[(12, 2, 4), bool] */;
    %803 = dyn.reshape(%800, %801, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%802, %803) /* ty=Tensor[(12, 2, 4), bool] */
  };
  %804(%var_10888) /* ty=Tensor[(12, 2, 4), bool] */
}

def @func_2178() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %805 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
  %806 = %805.0;
  %807 = @func_794() /* ty=Tensor[(1120), float32] */;
  (%806, %807)
}

def @func_12679() -> (Tensor[(1120), float32],) {
  @func_12677() /* ty=(Tensor[(1120), float32],) */
}

def @func_4426() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_10901() -> Tensor[(1120), float32] {
  @func_9799() /* ty=Tensor[(1120), float32] */
}

def @func_11216() -> (Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32, Tensor[(7, 4, 4), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool]) {
  @func_11214() /* ty=(Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32, Tensor[(7, 4, 4), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool]) */
}

def @func_2065() -> Tensor[(1120), float32] {
  %808 = fn () -> Tensor[(1120), float32] {
    @func_261() /* ty=Tensor[(1120), float32] */
  };
  %808() /* ty=Tensor[(1120), float32] */
}

def @func_8857() -> (Tensor[(7, 4, 4), float64],) {
  @func_8855() /* ty=(Tensor[(7, 4, 4), float64],) */
}

def @func_1420() -> Tensor[(1120), float32] {
  %809 = @func_989() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %809.1
}

def @func_3938() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %810 = @func_2764() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %811 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %812 = %810.2;
  %813 = %811.1;
  (%812, %813)
}

def @func_6143() -> (Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  @func_6141() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */
}

def @func_13499() -> (Tensor[(1120), float32],) {
  %814 = @func_4105() /* ty=(Tensor[(1120), float32],) */;
  %815 = %814.0;
  (%815,)
}

def @func_14552() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(448), bool], Tensor[(7, 4, 4), float32]) {
  %826 = fn () -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(448), bool], Tensor[(7, 4, 4), float32]) {
    %816 = @func_5967() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %817 = cast(meta[relay.Constant][24] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %818 = cast(meta[relay.Constant][24] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
    %819 = reshape(%817, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
    %820 = reshape(%818, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
    %821 = @func_6036(%819, %820) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) */;
    %822 = @func_14489() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %823 = %816.0;
    %824 = %821.1;
    %825 = %822.0;
    (%823, %824, meta[relay.Constant][24] /* ty=Tensor[(448), bool] */, %825)
  };
  %826() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(448), bool], Tensor[(7, 4, 4), float32]) */
}

def @func_13431(%var_13419: Tensor[(13, 5, 5), float64]) -> Tensor[(13, 5, 5), float64] {
  %827 = cast(%var_13419, dtype="float64") /* ty=Tensor[(13, 5, 5), float64] */;
  acosh(%827) /* ty=Tensor[(13, 5, 5), float64] */
}

def @func_9043() -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(1120), float32]) {
  %833 = fn () -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(1120), float32]) {
    %828 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
    %829 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
    %830 = %828.0;
    %831 = %829.0;
    %832 = @func_2064() /* ty=Tensor[(1120), float32] */;
    (%830, %831, %832)
  };
  %833() /* ty=(Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(1120), float32]) */
}

def @func_12589() -> (Tensor[(7, 4, 4), float32],) {
  %834 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %835 = %834.1;
  (%835,)
}

def @func_5999() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_5997() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_11836(%var_11834: Tensor[(11, 16, 7), uint16]) -> (Tensor[(11, 16, 7), bool], Tensor[(11, 16, 7), float64]) {
  @func_11833(%var_11834) /* ty=(Tensor[(11, 16, 7), bool], Tensor[(11, 16, 7), float64]) */
}

def @func_7510() -> (Tensor[(1120), float32],) {
  @func_7508() /* ty=(Tensor[(1120), float32],) */
}

def @func_2039() -> (Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %849 = fn () -> (Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
    %836 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
    %837 = %836.1;
    %838 = cast(%837, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %839 = reshape(%838, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), bool] */;
    %840 = @func_492(%839) /* ty=(Tensor[(7, 10, 16), bool],) */;
    %841 = %840.0;
    %842 = cast(%837, dtype="bool") /* ty=Tensor[(1120), bool] */;
    %843 = shape_of(%841, dtype="int32") /* ty=Tensor[(3), int32] */;
    %844 = cast(%841, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
    %845 = dyn.reshape(%842, %843, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %846 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %847 = logical_or(%844, %845) /* ty=Tensor[(7, 10, 16), bool] */;
    %848 = %846.0;
    (%847, %848)
  };
  %849() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */
}

def @func_9979() -> (Tensor[(1120), float32],) {
  %852 = fn () -> (Tensor[(1120), float32],) {
    %850 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %851 = %850.1;
    (%851,)
  };
  %852() /* ty=(Tensor[(1120), float32],) */
}

def @func_10637() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) {
  %853 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %854 = @func_6791() /* ty=(Tensor[(1120), float32],) */;
  %855 = @func_6786() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %856 = cast(-3.92992f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %857 = reshape(%856, newshape=[]) /* ty=float32 */;
  %858 = @func_688(%857) /* ty=(Tensor[(6, 4, 1), float32],) */;
  %859 = %853.2;
  %860 = %854.0;
  %861 = %855.1;
  %862 = %858.0;
  (%859, %860, %861, %862, -3.92992f /* ty=float32 */)
}

def @func_5786() -> (Tensor[(1120), float32],) {
  @func_5784() /* ty=(Tensor[(1120), float32],) */
}

def @func_11293() -> (Tensor[(1120), float32], Tensor[(1, 30), float32], Tensor[(324), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  @func_11291() /* ty=(Tensor[(1120), float32], Tensor[(1, 30), float32], Tensor[(324), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_15733(%var_15732: Tensor[(1690), int16]) -> (Tensor[(7, 4, 4), bool], Tensor[(1120), float32], Tensor[(13, 13, 10), bool], Tensor[(1690), int16]) {
  %879 = fn (%var_15715: Tensor[(1690), int16]) -> (Tensor[(7, 4, 4), bool], Tensor[(1120), float32], Tensor[(13, 13, 10), bool], Tensor[(1690), int16]) {
    %863 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %864 = %863.0;
    %865 = cast(%864, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
    %866 = log(%865) /* ty=Tensor[(7, 4, 4), float32] */;
    %867 = cast(%864, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %868 = shape_of(%866, dtype="int32") /* ty=Tensor[(3), int32] */;
    %869 = cast(%866, dtype="bool") /* ty=Tensor[(7, 4, 4), bool] */;
    %870 = dyn.reshape(%867, %868, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %871 = cast(%var_15715, dtype="int16") /* ty=Tensor[(1690), int16] */;
    %872 = cast(%var_15715, dtype="int16") /* ty=Tensor[(1690), int16] */;
    %873 = reshape(%871, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), int16] */;
    %874 = reshape(%872, newshape=[13, 13, 10]) /* ty=Tensor[(13, 13, 10), int16] */;
    %875 = @func_5518(%873, %874) /* ty=(Tensor[(13, 13, 10), bool], Tensor[(1120), float32]) */;
    %876 = greater_equal(%869, %870) /* ty=Tensor[(7, 4, 4), bool] */;
    %877 = @func_15239() /* ty=Tensor[(1120), float32] */;
    %878 = %875.0;
    (%876, %877, %878, %var_15715)
  };
  %879(%var_15732) /* ty=(Tensor[(7, 4, 4), bool], Tensor[(1120), float32], Tensor[(13, 13, 10), bool], Tensor[(1690), int16]) */
}

def @func_15470() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %880 = @func_12206() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %881 = @func_7360() /* ty=Tensor[(7, 4, 4), float32] */;
  %882 = %880.0;
  (%881, %882)
}

def @func_608(%var_606: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), float64],) {
  @func_605(%var_606) /* ty=(Tensor[(7, 4, 4), float64],) */
}

def @func_8808() -> Tensor[(1120), float32] {
  %883 = @func_8285() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %883.0
}

def @func_10346() -> Tensor[(7, 4, 4), float32] {
  @func_10344() /* ty=Tensor[(7, 4, 4), float32] */
}

def @func_15514() -> Tensor[(1120), float32] {
  %884 = @func_3805() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) */;
  %884.1
}

def @func_17498() -> Tensor[(1120), float32] {
  %885 = @func_14330() /* ty=(Tensor[(1120), float32],) */;
  %885.0
}

def @func_3910() -> (Tensor[(11, 15, 5), float32],) {
  @func_3908() /* ty=(Tensor[(11, 15, 5), float32],) */
}

def @func_1836() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_5844(%var_5836: Tensor[(1155), float64]) -> (Tensor[(11, 15, 5), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1155), float64], Tensor[(7, 4, 4), float32]) {
  %886 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %887 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %888 = %887.0;
  %889 = cast(%888, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %890 = reshape(%889, newshape=[560, 2]) /* ty=Tensor[(560, 2), float32] */;
  %891 = @func_5727(%890) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(560, 2), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), bool]) */;
  %892 = cast(%var_5836, dtype="float64") /* ty=Tensor[(1155), float64] */;
  %893 = reshape(%892, newshape=[15, 7, 11]) /* ty=Tensor[(15, 7, 11), float64] */;
  %894 = @func_4853(%893) /* ty=(Tensor[(15, 7, 11), float64], Tensor[(1120), float32], Tensor[(15, 7, 11), bool], Tensor[(1120), float32], Tensor[(11, 15, 5), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %895 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %896 = %886.0;
  %897 = %891.2;
  %898 = %894.5;
  %899 = %895.0;
  (%896, %888, %897, %898, %var_5836, %899)
}

def @func_2082() -> (Tensor[(7, 4, 4), float32],) {
  %900 = @func_911() /* ty=Tensor[(7, 4, 4), float32] */;
  (%900,)
}

def @func_1951(%var_1949: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32],) {
  @func_1948(%var_1949) /* ty=(Tensor[(13, 8, 14), float32],) */
}

def @func_3311() -> (Tensor[(1120), float32],) {
  @func_3309() /* ty=(Tensor[(1120), float32],) */
}

def @func_5847(%var_5845: Tensor[(1155), float64]) -> (Tensor[(11, 15, 5), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1155), float64], Tensor[(7, 4, 4), float32]) {
  @func_5844(%var_5845) /* ty=(Tensor[(11, 15, 5), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1155), float64], Tensor[(7, 4, 4), float32]) */
}

def @func_8353(%var_8351: Tensor[(13, 3, 13), int64], %var_8352: Tensor[(13, 3, 13), int64]) -> Tensor[(13, 3, 13), int64] {
  %905 = fn (%var_8339: Tensor[(13, 3, 13), int64], %var_8340: Tensor[(13, 3, 13), int64]) -> Tensor[(13, 3, 13), int64] {
    %901 = cast(%var_8340, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
    %902 = shape_of(%var_8339, dtype="int32") /* ty=Tensor[(3), int32] */;
    %903 = cast(%var_8339, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
    %904 = dyn.reshape(%901, %902, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    minimum(%903, %904) /* ty=Tensor[(13, 3, 13), int64] */
  };
  %905(%var_8351, %var_8352) /* ty=Tensor[(13, 3, 13), int64] */
}

def @func_1161(%var_1160: Tensor[(250), float32]) -> (Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %911 = fn (%var_1129: Tensor[(250), float32]) -> (Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
    %906 = @func_563() /* ty=(Tensor[(1120), float32],) */;
    %907 = cast(%var_1129, dtype="float32") /* ty=Tensor[(250), float32] */;
    %908 = reshape(%907, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
    %909 = %906.0;
    %910 = @func_835(%908) /* ty=Tensor[(5, 5, 10), float32] */;
    (%909, %910, %var_1129)
  };
  %911(%var_1160) /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */
}

def @func_10344() -> Tensor[(7, 4, 4), float32] {
  %912 = @func_5680() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %912.3
}

def @func_13866() -> (Tensor[(1120), float32],) {
  %913 = @func_261() /* ty=Tensor[(1120), float32] */;
  (%913,)
}

def @func_4379() -> Tensor[(7, 10, 16), int32] {
  %914 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %915 = %914.1;
  %916 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 10, 16), float32] */, dtype="int32") /* ty=Tensor[(7, 10, 16), int32] */;
  %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%915, dtype="int32") /* ty=Tensor[(7, 10, 16), int32] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  bitwise_and(%918, %919) /* ty=Tensor[(7, 10, 16), int32] */
}

def @func_12481(%var_12479: float32, %var_12480: Tensor[(16, 10, 1), float32]) -> (Tensor[(16, 10, 1), uint64], Tensor[(16, 10, 1), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  @func_12477(%var_12479, %var_12480) /* ty=(Tensor[(16, 10, 1), uint64], Tensor[(16, 10, 1), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_13662() -> Tensor[(1120), float32] {
  @func_13660() /* ty=Tensor[(1120), float32] */
}

def @func_11972() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(16, 7, 4), bool], Tensor[(1120), float32]) {
  %920 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %921 = @func_6932() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) */;
  %922 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %923 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %924 = reshape(%922, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %925 = reshape(%923, newshape=[16, 7, 4]) /* ty=Tensor[(16, 7, 4), bool] */;
  %926 = @func_6036(%924, %925) /* ty=(Tensor[(16, 7, 4), bool], Tensor[(7, 10, 16), bool]) */;
  %927 = %926.0;
  %928 = cast(meta[relay.Constant][26] /* ty=Tensor[(448), bool] */, dtype="bool") /* ty=Tensor[(448), bool] */;
  %929 = shape_of(%927, dtype="int32") /* ty=Tensor[(3), int32] */;
  %930 = cast(%927, dtype="bool") /* ty=Tensor[(16, 7, 4), bool] */;
  %931 = dyn.reshape(%928, %929, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %932 = @func_6708() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %933 = %920.0;
  %934 = %921.0;
  %935 = greater(%930, %931) /* ty=Tensor[(16, 7, 4), bool] */;
  %936 = %932.0;
  (%933, %934, %935, %936)
}

def @func_10379() -> (Tensor[(1120), float32],) {
  %938 = fn () -> (Tensor[(1120), float32],) {
    %937 = @func_5775() /* ty=Tensor[(1120), float32] */;
    (%937,)
  };
  %938() /* ty=(Tensor[(1120), float32],) */
}

def @func_14807() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %942 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %939 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
    %940 = %939.0;
    %941 = @func_5288() /* ty=Tensor[(1120), float32] */;
    (%940, %941)
  };
  %942() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_12836() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %948 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %943 = @func_5054() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %944 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %945 = @func_2121() /* ty=Tensor[(1120), float32] */;
    %946 = %943.0;
    %947 = %944.0;
    (%945, %946, %947)
  };
  %948() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_15808() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  %955 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
    %949 = @func_15558() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %950 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
    %951 = @func_6419() /* ty=Tensor[(1120), float32] */;
    %952 = @func_13660() /* ty=Tensor[(1120), float32] */;
    %953 = %949.0;
    %954 = %950.0;
    (%951, %952, %953, %954)
  };
  %955() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_15559() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %959 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %956 = @func_14296() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %957 = @func_1420() /* ty=Tensor[(1120), float32] */;
    %958 = %956.2;
    (%957, %958)
  };
  %959() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_9410() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %964 = fn () -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
    %960 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
    %961 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %962 = %960.0;
    %963 = %961.0;
    (%962, %963)
  };
  %964() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_14640() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(14, 3, 16), bool]) {
  %965 = @func_7791() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %966 = @func_10780() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %967 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 3, 16), float32] */, dtype="float32") /* ty=Tensor[(14, 3, 16), float32] */;
  %968 = erf(%967) /* ty=Tensor[(14, 3, 16), float32] */;
  %969 = cast(%968, dtype="float32") /* ty=Tensor[(14, 3, 16), float32] */;
  %970 = cos(%969) /* ty=Tensor[(14, 3, 16), float32] */;
  %971 = cast(%970, dtype="float64") /* ty=Tensor[(14, 3, 16), float64] */;
  %972 = atanh(%971) /* ty=Tensor[(14, 3, 16), float64] */;
  %973 = cast(%968, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %974 = shape_of(%972, dtype="int32") /* ty=Tensor[(3), int32] */;
  %975 = cast(%972, dtype="bool") /* ty=Tensor[(14, 3, 16), bool] */;
  %976 = dyn.reshape(%973, %974, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %977 = %965.0;
  %978 = %966.0;
  %979 = not_equal(%975, %976) /* ty=Tensor[(14, 3, 16), bool] */;
  (%977, %978, %979)
}

def @func_17344() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %980 = @func_5633() /* ty=(Tensor[(1120), float32],) */;
  %981 = @func_15239() /* ty=Tensor[(1120), float32] */;
  %982 = %980.0;
  (%981, %982)
}

def @func_6141() -> (Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) {
  %983 = cast(meta[relay.Constant][28] /* ty=Tensor[(6, 5, 9), float32] */, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %984 = sinh(%983) /* ty=Tensor[(6, 5, 9), float32] */;
  %985 = cast(%984, dtype="float32") /* ty=Tensor[(6, 5, 9), float32] */;
  %986 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %987 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %988 = sigmoid(%985) /* ty=Tensor[(6, 5, 9), float32] */;
  %989 = %986.1;
  %990 = %987.0;
  (%988, %989, %990)
}

def @func_7935() -> Tensor[(1120), float32] {
  %992 = fn () -> Tensor[(1120), float32] {
    %991 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %991.0
  };
  %992() /* ty=Tensor[(1120), float32] */
}

def @func_1883() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %993 = @func_1218() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %994 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %995 = %993.0;
  %996 = %994.0;
  (%995, %996)
}

def @func_1239() -> (Tensor[(1120), float32],) {
  @func_1237() /* ty=(Tensor[(1120), float32],) */
}

def @func_1500() -> Tensor[(1120), float32] {
  %997 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %997.2
}

def @func_3908() -> (Tensor[(11, 15, 5), float32],) {
  %998 = @func_1006() /* ty=(Tensor[(11, 15, 5), float32],) */;
  %999 = %998.0;
  (%999,)
}

def @func_5423() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1004 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %1000 = @func_1592() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
    %1001 = @func_3805() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) */;
    %1002 = %1000.0;
    %1003 = %1001.1;
    (%1002, %1003)
  };
  %1004() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_5147(%var_5145: Tensor[(12, 2, 11), float64]) -> Tensor[(12, 2, 11), float64] {
  @func_5144(%var_5145) /* ty=Tensor[(12, 2, 11), float64] */
}

def @func_6933() -> (Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) {
  %1015 = fn () -> (Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) {
    %1005 = @func_6791() /* ty=(Tensor[(1120), float32],) */;
    %1006 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1007 = cast(meta[relay.Constant][29] /* ty=Tensor[(126), float32] */, dtype="float32") /* ty=Tensor[(126), float32] */;
    %1008 = %1005.0;
    %1009 = cast(%1008, dtype="float32") /* ty=Tensor[(1120), float32] */;
    %1010 = reshape(%1006, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), float32] */;
    %1011 = reshape(%1007, newshape=[9, 2, 7]) /* ty=Tensor[(9, 2, 7), float32] */;
    %1012 = reshape(%1009, newshape=[2, 560]) /* ty=Tensor[(2, 560), float32] */;
    %1013 = @func_3525(%1010, %1011, %1012) /* ty=(Tensor[(9, 2, 7), float32], Tensor[(7, 4, 4), float64], Tensor[(2, 560), float32]) */;
    %1014 = %1013.2;
    (%1008, %1014, meta[relay.Constant][29] /* ty=Tensor[(126), float32] */)
  };
  %1015() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float32], Tensor[(126), float32]) */
}

def @func_8784() -> (Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) {
  @func_8782() /* ty=(Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) */
}

def @func_3940() -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) {
  @func_3938() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_14259(%var_14179: Tensor[(112), float32], %var_14201: Tensor[(825), float32]) -> (Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float64], Tensor[(112), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(7, 10, 16), bool], float32, Tensor[(16, 8), float32], Tensor[(1120), float32]) {
  %1016 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
  %1017 = cast(%var_14179, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1018 = reshape(%1017, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %1019 = @func_11096() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1020 = cast(%var_14201, dtype="float32") /* ty=Tensor[(825), float32] */;
  %1021 = reshape(%1020, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
  %1022 = cast(-0.921279f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1023 = cast(meta[relay.Constant][30] /* ty=Tensor[(16, 8), float32] */, dtype="float32") /* ty=Tensor[(16, 8), float32] */;
  %1024 = reshape(%1022, newshape=[]) /* ty=float32 */;
  %1025 = reshape(%1023, newshape=[16, 1, 8]) /* ty=Tensor[(16, 1, 8), float32] */;
  %1026 = @func_11403(%1024, %1025) /* ty=(Tensor[(16, 1, 8), float32], Tensor[(7, 10, 16), bool]) */;
  %1027 = @func_8456() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1028 = @func_5288() /* ty=Tensor[(1120), float32] */;
  %1029 = %1016.0;
  %1030 = @func_8385(%1018) /* ty=Tensor[(7, 4, 4), float64] */;
  %1031 = @func_6419() /* ty=Tensor[(1120), float32] */;
  %1032 = %1019.0;
  %1033 = @func_4254(%1021) /* ty=Tensor[(11, 15, 5), bool] */;
  %1034 = %1026.1;
  %1035 = %1027.1;
  (%1028, %1029, %1030, %var_14179, %1031, %1032, %1033, %var_14201, %1034, -0.921279f /* ty=float32 */, meta[relay.Constant][30] /* ty=Tensor[(16, 8), float32] */, %1035)
}

def @func_11406(%var_11404: float32, %var_11405: Tensor[(16, 1, 8), float32]) -> (Tensor[(16, 1, 8), float32], Tensor[(7, 10, 16), bool]) {
  %1041 = fn (%var_11357: float32, %var_11358: Tensor[(16, 1, 8), float32]) -> (Tensor[(16, 1, 8), float32], Tensor[(7, 10, 16), bool]) {
    %1036 = cast(%var_11357, dtype="float32") /* ty=float32 */;
    %1037 = cast(%var_11358, dtype="float32") /* ty=Tensor[(16, 1, 8), float32] */;
    %1038 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
    %1039 = power(%1036, %1037) /* ty=Tensor[(16, 1, 8), float32] */;
    %1040 = %1038.0;
    (%1039, %1040)
  };
  %1041(%var_11404, %var_11405) /* ty=(Tensor[(16, 1, 8), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_17606() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %1042 = @func_7702() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(30, 1), float32], Tensor[(7, 4, 4), float32]) */;
  %1043 = @func_16077() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1044 = @func_9799() /* ty=Tensor[(1120), float32] */;
  %1045 = %1042.2;
  %1046 = %1043.0;
  %1047 = @func_5735() /* ty=Tensor[(1120), float32] */;
  (%1044, %1045, %1046, %1047)
}

def @func_11136() -> (Tensor[(1120), float32],) {
  %1048 = @func_2375() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1049 = %1048.1;
  (%1049,)
}

def @func_8810() -> Tensor[(1120), float32] {
  @func_8808() /* ty=Tensor[(1120), float32] */
}

def @func_5459() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1050 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %1051 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
  %1052 = %1050.0;
  %1053 = %1051.0;
  (%1052, %1053)
}

def @func_13201() -> (Tensor[(7, 4, 4), float32],) {
  @func_13199() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_10022() -> (Tensor[(1120), float32],) {
  @func_10020() /* ty=(Tensor[(1120), float32],) */
}

def @func_13732() -> (Tensor[(7, 4, 4), float32],) {
  %1056 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %1054 = @func_10780() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %1055 = %1054.3;
    (%1055,)
  };
  %1056() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_11883() -> (Tensor[(1120), float32],) {
  %1057 = @func_5404() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1058 = %1057.1;
  (%1058,)
}

def @func_14491() -> (Tensor[(7, 4, 4), float32],) {
  @func_14489() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_10962() -> Tensor[(1120), float32] {
  %1059 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1059.0
}

def @func_494(%var_493: Tensor[(7, 10, 16), bool]) -> (Tensor[(7, 10, 16), bool],) {
  %1071 = fn (%var_463: Tensor[(7, 10, 16), bool]) -> (Tensor[(7, 10, 16), bool],) {
    %1060 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
    %1061 = cast(%var_463, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
    %1062 = shape_of(%1060, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1063 = cast(%1060, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
    %1064 = dyn.reshape(%1061, %1062, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1065 = mod(%1063, %1064) /* ty=Tensor[(7, 10, 16), float32] */;
    %1066 = cast(%1065, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
    %1067 = shape_of(%var_463, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1068 = cast(%var_463, dtype="bool") /* ty=Tensor[(7, 10, 16), bool] */;
    %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1070 = less_equal(%1068, %1069) /* ty=Tensor[(7, 10, 16), bool] */;
    (%1070,)
  };
  %1071(%var_493) /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_4398(%var_4392: Tensor[(15, 4, 13), float32], %var_4393: Tensor[(15, 4, 13), float32]) -> Tensor[(15, 4, 13), float32] {
  %1072 = cast(%var_4393, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %1073 = shape_of(%var_4392, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1074 = cast(%var_4392, dtype="float32") /* ty=Tensor[(15, 4, 13), float32] */;
  %1075 = dyn.reshape(%1072, %1073, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%1074, %1075) /* ty=Tensor[(15, 4, 13), float32] */
}

def @func_5216() -> (Tensor[(1120), float32],) {
  %1076 = @func_2320() /* ty=Tensor[(1120), float32] */;
  (%1076,)
}

def @func_3749() -> (Tensor[(7, 4, 4), float32],) {
  %1079 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %1077 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %1078 = %1077.0;
    (%1078,)
  };
  %1079() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_15580() -> (Tensor[(13, 3, 8), float64],) {
  %1082 = fn () -> (Tensor[(13, 3, 8), float64],) {
    %1080 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
    %1081 = %1080.0;
    (%1081,)
  };
  %1082() /* ty=(Tensor[(13, 3, 8), float64],) */
}

def @func_4603() -> (Tensor[(1120), float32],) {
  %1083 = @func_4141() /* ty=(Tensor[(1120), float32],) */;
  %1084 = %1083.0;
  (%1084,)
}

def @func_15479() -> Tensor[(1120), float32] {
  %1085 = @func_8104() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1085.2
}

def @func_1735() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %1086 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1087 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %1088 = %1086.0;
  %1089 = %1087.1;
  (%1088, %1089)
}

def @func_5055() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1093 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %1090 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1091 = %1090.0;
    %1092 = @func_1420() /* ty=Tensor[(1120), float32] */;
    (%1091, %1092)
  };
  %1093() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_5967() -> (Tensor[(7, 4, 4), float32],) {
  %1094 = @func_1334() /* ty=(Tensor[(7, 4, 4), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64]) */;
  %1095 = %1094.1;
  (%1095,)
}

def @func_1392() -> (Tensor[(11, 15, 5), float32],) {
  @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */
}

def @func_5203() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_5201() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_8053() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_8051() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_2084() -> (Tensor[(7, 4, 4), float32],) {
  @func_2082() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_6788() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  @func_6786() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_2123() -> Tensor[(1120), float32] {
  @func_2121() /* ty=Tensor[(1120), float32] */
}

def @func_1948(%var_1942: Tensor[(13, 8, 14), float32]) -> (Tensor[(13, 8, 14), float32],) {
  %1096 = cast(%var_1942, dtype="float32") /* ty=Tensor[(13, 8, 14), float32] */;
  %1097 = log10(%1096) /* ty=Tensor[(13, 8, 14), float32] */;
  (%1097,)
}

def @func_2121() -> Tensor[(1120), float32] {
  @func_1500() /* ty=Tensor[(1120), float32] */
}

def @func_4043(%var_4005: Tensor[(1120), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64], Tensor[(1120), float32]) {
  %1098 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1099 = cast(%var_4005, dtype="float32") /* ty=Tensor[(1120), float32] */;
  %1100 = reshape(%1099, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %1101 = @func_901(%1100) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %1102 = %1098.0;
  %1103 = %1101.1;
  (%1102, %1103, %var_4005)
}

def @func_15085() -> Tensor[(7, 10, 16), bool] {
  @func_15083() /* ty=Tensor[(7, 10, 16), bool] */
}

def @func_4605() -> (Tensor[(1120), float32],) {
  @func_4603() /* ty=(Tensor[(1120), float32],) */
}

def @func_9958() -> Tensor[(7, 10, 16), float32] {
  %1105 = fn () -> Tensor[(7, 10, 16), float32] {
    %1104 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %1104.1
  };
  %1105() /* ty=Tensor[(7, 10, 16), float32] */
}

def @func_6261() -> (Tensor[(7, 10, 16), bool],) {
  %1106 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %1107 = %1106.0;
  (%1107,)
}

def @func_17346() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_17344() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_13434(%var_13432: Tensor[(13, 5, 5), float64]) -> Tensor[(13, 5, 5), float64] {
  @func_13431(%var_13432) /* ty=Tensor[(13, 5, 5), float64] */
}

def @func_5144(%var_5118: Tensor[(12, 2, 11), float64]) -> Tensor[(12, 2, 11), float64] {
  %1108 = cast(%var_5118, dtype="float64") /* ty=Tensor[(12, 2, 11), float64] */;
  log(%1108) /* ty=Tensor[(12, 2, 11), float64] */
}

def @func_3755() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1109 = @func_1237() /* ty=(Tensor[(1120), float32],) */;
  %1110 = @func_553() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
  %1111 = %1109.0;
  %1112 = %1110.1;
  (%1111, %1112)
}

def @func_5784() -> (Tensor[(1120), float32],) {
  %1113 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1114 = %1113.1;
  (%1114,)
}

def @func_14695() -> Tensor[(1120), float32] {
  %1115 = @func_7470() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) */;
  %1115.0
}

def @func_10700() -> Tensor[(1120), float32] {
  %1116 = fn () -> Tensor[(1120), float32] {
    @func_1500() /* ty=Tensor[(1120), float32] */
  };
  %1116() /* ty=Tensor[(1120), float32] */
}

def @func_14331() -> (Tensor[(1120), float32],) {
  %1119 = fn () -> (Tensor[(1120), float32],) {
    %1117 = @func_8456() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1118 = %1117.2;
    (%1118,)
  };
  %1119() /* ty=(Tensor[(1120), float32],) */
}

def @func_9101() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1126 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %1120 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1121 = @func_2492() /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %1122 = %1120.1;
    %1123 = %1121.0;
    %1124 = @func_1420() /* ty=Tensor[(1120), float32] */;
    %1125 = @func_7934() /* ty=Tensor[(1120), float32] */;
    (%1122, %1123, %1124, %1125)
  };
  %1126() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_1593() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) {
  %1134 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) {
    %1127 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
    %1128 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %1129 = @func_1530() /* ty=(Tensor[(7, 10, 16), bool],) */;
    %1130 = %1127.0;
    %1131 = @func_261() /* ty=Tensor[(1120), float32] */;
    %1132 = %1128.1;
    %1133 = %1129.0;
    (%1130, %1131, %1132, %1133)
  };
  %1134() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_6078(%var_6076: Tensor[(6, 3, 8), float32]) -> (Tensor[(6, 3, 8), float32],) {
  @func_6075(%var_6076) /* ty=(Tensor[(6, 3, 8), float32],) */
}

def @func_10780() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %1135 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1136 = @func_5584() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */;
  %1137 = @func_5967() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1138 = %1135.0;
  %1139 = %1136.1;
  %1140 = @func_10217() /* ty=Tensor[(1120), float32] */;
  %1141 = %1137.0;
  (%1138, %1139, %1140, %1141)
}

def @func_12477(%var_12433: float32, %var_12434: Tensor[(16, 10, 1), float32]) -> (Tensor[(16, 10, 1), uint64], Tensor[(16, 10, 1), bool], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %1142 = cast(%var_12433, dtype="bool") /* ty=bool */;
  %1143 = cast(%var_12434, dtype="bool") /* ty=Tensor[(16, 10, 1), bool] */;
  %1144 = not_equal(%1142, %1143) /* ty=Tensor[(16, 10, 1), bool] */;
  %1145 = cast(%var_12433, dtype="uint64") /* ty=uint64 */;
  %1146 = cast(%1144, dtype="uint64") /* ty=Tensor[(16, 10, 1), uint64] */;
  %1147 = cast(%var_12433, dtype="bool") /* ty=bool */;
  %1148 = cast(%var_12434, dtype="bool") /* ty=Tensor[(16, 10, 1), bool] */;
  %1149 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1150 = minimum(%1145, %1146) /* ty=Tensor[(16, 10, 1), uint64] */;
  %1151 = less(%1147, %1148) /* ty=Tensor[(16, 10, 1), bool] */;
  %1152 = @func_7360() /* ty=Tensor[(7, 4, 4), float32] */;
  %1153 = %1149.1;
  (%1150, %1151, %1152, %1153)
}

def @func_7360() -> Tensor[(7, 4, 4), float32] {
  %1154 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1154.0
}

def @func_11872() -> (Tensor[(11, 15, 5), float32],) {
  @func_11870() /* ty=(Tensor[(11, 15, 5), float32],) */
}

def @func_8387(%var_8386: Tensor[(7, 4, 4), float32]) -> Tensor[(7, 4, 4), float64] {
  %1161 = fn (%var_8369: Tensor[(7, 4, 4), float32]) -> Tensor[(7, 4, 4), float64] {
    %1155 = @func_2527() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %1156 = %1155.0;
    %1157 = cast(%var_8369, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
    %1158 = shape_of(%1156, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1159 = cast(%1156, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
    %1160 = dyn.reshape(%1157, %1158, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%1159, %1160) /* ty=Tensor[(7, 4, 4), float64] */
  };
  %1161(%var_8386) /* ty=Tensor[(7, 4, 4), float64] */
}

def @func_11628() -> Tensor[(1120), float32] {
  @func_11626() /* ty=Tensor[(1120), float32] */
}

def @func_8739() -> (Tensor[(1120), float32],) {
  %1162 = @func_1237() /* ty=(Tensor[(1120), float32],) */;
  %1163 = %1162.0;
  (%1163,)
}

def @func_12647() -> Tensor[(1120), float32] {
  %1165 = fn () -> Tensor[(1120), float32] {
    %1164 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
    %1164.1
  };
  %1165() /* ty=Tensor[(1120), float32] */
}

def @func_15182() -> (Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(2, 48), bool], Tensor[(7, 10, 16), bool]) {
  %1166 = @func_563() /* ty=(Tensor[(1120), float32],) */;
  %1167 = cast(meta[relay.Constant][31] /* ty=Tensor[(2, 48), bool] */, dtype="bool") /* ty=Tensor[(2, 48), bool] */;
  %1168 = reshape(%1167, newshape=[12, 2, 4]) /* ty=Tensor[(12, 2, 4), bool] */;
  %1169 = @func_7218() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1170 = %1166.0;
  %1171 = @func_10887(%1168) /* ty=Tensor[(12, 2, 4), bool] */;
  %1172 = %1169.0;
  (%1170, %1171, meta[relay.Constant][31] /* ty=Tensor[(2, 48), bool] */, %1172)
}

def @func_1237() -> (Tensor[(1120), float32],) {
  %1173 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1174 = %1173.2;
  (%1174,)
}

def @func_563() -> (Tensor[(1120), float32],) {
  %1175 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %1176 = %1175.0;
  (%1176,)
}

def @func_4256(%var_4255: Tensor[(11, 15, 5), float32]) -> Tensor[(11, 15, 5), bool] {
  %1183 = fn (%var_4246: Tensor[(11, 15, 5), float32]) -> Tensor[(11, 15, 5), bool] {
    %1177 = @func_1006() /* ty=(Tensor[(11, 15, 5), float32],) */;
    %1178 = %1177.0;
    %1179 = cast(%var_4246, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
    %1180 = shape_of(%1178, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1181 = cast(%1178, dtype="bool") /* ty=Tensor[(11, 15, 5), bool] */;
    %1182 = dyn.reshape(%1179, %1180, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater(%1181, %1182) /* ty=Tensor[(11, 15, 5), bool] */
  };
  %1183(%var_4255) /* ty=Tensor[(11, 15, 5), bool] */
}

def @func_7017() -> (Tensor[(1120), float32],) {
  %1186 = fn () -> (Tensor[(1120), float32],) {
    %1184 = @func_2942() /* ty=(Tensor[(1120), float32],) */;
    %1185 = %1184.0;
    (%1185,)
  };
  %1186() /* ty=(Tensor[(1120), float32],) */
}

def @func_4105() -> (Tensor[(1120), float32],) {
  %1187 = @func_794() /* ty=Tensor[(1120), float32] */;
  (%1187,)
}

def @func_355() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %1188 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1189 = %1188.0;
  %1190 = cast(%1189, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %1191 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1192 = sin(%1190) /* ty=Tensor[(7, 4, 4), float32] */;
  %1193 = %1191.0;
  (%1192, %1193)
}

def @func_5098() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) {
  @func_5096() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_16531() -> (Tensor[(1120), float32],) {
  %1196 = fn () -> (Tensor[(1120), float32],) {
    %1194 = @func_8315() /* ty=(Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) */;
    %1195 = %1194.1;
    (%1195,)
  };
  %1196() /* ty=(Tensor[(1120), float32],) */
}

def @func_4323() -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %1201 = fn () -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
    %1197 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %1198 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1199 = %1197.0;
    %1200 = %1198.1;
    (%1199, %1200)
  };
  %1201() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */
}

def @func_10286(%var_10285: Tensor[(10, 3), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(15, 6, 9), float64], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32]) {
  %1210 = fn (%var_10278: Tensor[(10, 3), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(15, 6, 9), float64], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32]) {
    %1202 = @func_9948() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %1203 = @func_8315() /* ty=(Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) */;
    %1204 = cast(%var_10278, dtype="float32") /* ty=Tensor[(10, 3), float32] */;
    %1205 = reshape(%1204, newshape=[30]) /* ty=Tensor[(30), float32] */;
    %1206 = @func_3110(%1205) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %1207 = %1202.0;
    %1208 = %1203.0;
    %1209 = %1206.5;
    (%1207, %1208, %1209, %var_10278)
  };
  %1210(%var_10285) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(15, 6, 9), float64], Tensor[(7, 4, 4), float32], Tensor[(10, 3), float32]) */
}

def @func_17500() -> Tensor[(1120), float32] {
  @func_17498() /* ty=Tensor[(1120), float32] */
}

def @func_11072() -> (Tensor[(14, 16, 10), float64], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %1211 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
  %1212 = @func_8715() /* ty=Tensor[(14, 16, 10), float64] */;
  %1213 = @func_1420() /* ty=Tensor[(1120), float32] */;
  %1214 = %1211.0;
  (%1212, %1213, %1214)
}

def @func_11448() -> (Tensor[(1120), float32],) {
  %1216 = fn () -> (Tensor[(1120), float32],) {
    %1215 = @func_794() /* ty=Tensor[(1120), float32] */;
    (%1215,)
  };
  %1216() /* ty=(Tensor[(1120), float32],) */
}

def @func_1219() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %1220 = fn () -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
    %1217 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %1218 = @func_261() /* ty=Tensor[(1120), float32] */;
    %1219 = %1217.0;
    (%1218, %1219)
  };
  %1220() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_4046(%var_4044: Tensor[(1120), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64], Tensor[(1120), float32]) {
  @func_4043(%var_4044) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float64], Tensor[(1120), float32]) */
}

def @func_13845() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1226 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %1221 = @func_7827() /* ty=(Tensor[(1120), float32], Tensor[(2, 560), float64]) */;
    %1222 = @func_7347() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1223 = %1221.0;
    %1224 = %1222.1;
    %1225 = @func_11173() /* ty=Tensor[(1120), float32] */;
    (%1223, %1224, %1225)
  };
  %1226() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_13908() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1227 = @func_12677() /* ty=(Tensor[(1120), float32],) */;
  %1228 = @func_3755() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1229 = %1227.0;
  %1230 = %1228.1;
  (%1229, %1230)
}

def @func_9903() -> (Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 10, 16), float64], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  %1231 = @func_2882() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1232 = %1231.0;
  %1233 = cast(%1232, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1234 = cast(%1232, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1235 = cast(%1232, dtype="float64") /* ty=Tensor[(7, 10, 16), float64] */;
  %1236 = @func_8782() /* ty=(Tensor[(1120), float32], Tensor[(11, 15, 5), float32]) */;
  %1237 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1238 = @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
  %1239 = @func_7016() /* ty=(Tensor[(1120), float32],) */;
  %1240 = sinh(%1233) /* ty=Tensor[(7, 10, 16), float32] */;
  %1241 = atanh(%1234) /* ty=Tensor[(7, 10, 16), float32] */;
  %1242 = acosh(%1235) /* ty=Tensor[(7, 10, 16), float64] */;
  %1243 = %1236.0;
  %1244 = %1237.1;
  %1245 = %1238.0;
  %1246 = %1239.0;
  (%1240, %1241, %1242, %1243, %1244, %1245, %1246)
}

def @func_17560() -> (Tensor[(1120), float32],) {
  %1249 = fn () -> (Tensor[(1120), float32],) {
    %1247 = @func_9409() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %1248 = %1247.0;
    (%1248,)
  };
  %1249() /* ty=(Tensor[(1120), float32],) */
}

def @func_191() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) {
  @func_189() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */
}

def @func_554() -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %1253 = fn () -> (Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
    %1250 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %1251 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
    %1252 = %1250.0;
    (%1251, %1252)
  };
  %1253() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_5923() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  %1260 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
    %1254 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %1255 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %1256 = @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %1257 = %1254.0;
    %1258 = %1255.0;
    %1259 = %1256.1;
    (%1257, %1258, %1259)
  };
  %1260() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_6419() -> Tensor[(1120), float32] {
  %1261 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1261.0
}

def @func_2765() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1270 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
    %1262 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
    %1263 = @func_1834() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1264 = @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1265 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %1266 = %1262.0;
    %1267 = %1263.0;
    %1268 = %1264.0;
    %1269 = %1265.0;
    (%1266, %1267, %1268, %1269)
  };
  %1270() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_13290() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1274 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
    %1271 = @func_11544() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
    %1272 = @func_794() /* ty=Tensor[(1120), float32] */;
    %1273 = %1271.0;
    (%1272, %1273)
  };
  %1274() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_5518(%var_5505: Tensor[(13, 13, 10), int16], %var_5506: Tensor[(13, 13, 10), int16]) -> (Tensor[(13, 13, 10), bool], Tensor[(1120), float32]) {
  %1275 = cast(%var_5506, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
  %1276 = shape_of(%var_5505, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1277 = cast(%var_5505, dtype="bool") /* ty=Tensor[(13, 13, 10), bool] */;
  %1278 = dyn.reshape(%1275, %1276, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1279 = @func_1047() /* ty=(Tensor[(1120), float32],) */;
  %1280 = greater_equal(%1277, %1278) /* ty=Tensor[(13, 13, 10), bool] */;
  %1281 = %1279.0;
  (%1280, %1281)
}

def @func_5736() -> Tensor[(1120), float32] {
  %1283 = fn () -> Tensor[(1120), float32] {
    %1282 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
    %1282.0
  };
  %1283() /* ty=Tensor[(1120), float32] */
}

def @func_14957() -> Tensor[(1120), float32] {
  @func_12051() /* ty=Tensor[(1120), float32] */
}

def @func_16078() -> (Tensor[(7, 10, 16), bool],) {
  %1286 = fn () -> (Tensor[(7, 10, 16), bool],) {
    %1284 = @func_5096() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
    %1285 = %1284.1;
    (%1285,)
  };
  %1286() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_605(%var_596: Tensor[(7, 4, 4), float32]) -> (Tensor[(7, 4, 4), float64],) {
  %1287 = @func_355() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %1288 = %1287.0;
  %1289 = cast(%var_596, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %1290 = shape_of(%1288, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1291 = cast(%1288, dtype="float64") /* ty=Tensor[(7, 4, 4), float64] */;
  %1292 = dyn.reshape(%1289, %1290, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1293 = mod(%1291, %1292) /* ty=Tensor[(7, 4, 4), float64] */;
  (%1293,)
}

def @func_7220() -> (Tensor[(7, 10, 16), bool],) {
  @func_7218() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_8315() -> (Tensor[(15, 6, 9), float64], Tensor[(1120), float32]) {
  %1294 = cast(meta[relay.Constant][32] /* ty=Tensor[(15, 6, 9), float64] */, dtype="float64") /* ty=Tensor[(15, 6, 9), float64] */;
  %1295 = @func_5784() /* ty=(Tensor[(1120), float32],) */;
  %1296 = exp(%1294) /* ty=Tensor[(15, 6, 9), float64] */;
  %1297 = %1295.0;
  (%1296, %1297)
}

def @func_3757() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_3755() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_2320() -> Tensor[(1120), float32] {
  @func_794() /* ty=Tensor[(1120), float32] */
}

def @func_17067(%var_17066: Tensor[(250), float32]) -> (Tensor[(7, 10, 16), bool], Tensor[(250), float32], Tensor[(250), float32]) {
  %1303 = fn (%var_17060: Tensor[(250), float32]) -> (Tensor[(7, 10, 16), bool], Tensor[(250), float32], Tensor[(250), float32]) {
    %1298 = cast(%var_17060, dtype="float32") /* ty=Tensor[(250), float32] */;
    %1299 = reshape(%1298, newshape=[250]) /* ty=Tensor[(250), float32] */;
    %1300 = @func_1159(%1299) /* ty=(Tensor[(1120), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */;
    %1301 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
    %1302 = %1300.2;
    (%1301, %1302, %var_17060)
  };
  %1303(%var_17066) /* ty=(Tensor[(7, 10, 16), bool], Tensor[(250), float32], Tensor[(250), float32]) */
}

def @func_4167() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  @func_4165() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_11138() -> (Tensor[(1120), float32],) {
  @func_11136() /* ty=(Tensor[(1120), float32],) */
}

def @func_11790() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float64]) {
  @func_11788() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float64]) */
}

def @func_13185() -> (Tensor[(7, 4, 4), float32],) {
  %1306 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %1304 = @func_6141() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
    %1305 = %1304.2;
    (%1305,)
  };
  %1306() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_8287() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  @func_8285() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_1885() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_1883() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_9700() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1307 = @func_1029() /* ty=(Tensor[(1120), float32],) */;
  %1308 = %1307.0;
  %1309 = @func_2064() /* ty=Tensor[(1120), float32] */;
  (%1308, %1309)
}

def @func_2528() -> (Tensor[(7, 4, 4), float32],) {
  %1312 = fn () -> (Tensor[(7, 4, 4), float32],) {
    %1310 = @func_541() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */;
    %1311 = %1310.1;
    (%1311,)
  };
  %1312() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_5484() -> Tensor[(1120), float32] {
  @func_5482() /* ty=Tensor[(1120), float32] */
}

def @func_1530() -> (Tensor[(7, 10, 16), bool],) {
  %1313 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
  (%1313,)
}

def @func_17460(%var_17459: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(96), bool], Tensor[(780), float32], Tensor[(96), bool]) {
  %1321 = fn (%var_17442: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(96), bool], Tensor[(780), float32], Tensor[(96), bool]) {
    %1314 = cast(meta[relay.Constant][33] /* ty=Tensor[(780), float32] */, dtype="float32") /* ty=Tensor[(780), float32] */;
    %1315 = cast(%var_17442, dtype="bool") /* ty=Tensor[(96), bool] */;
    %1316 = reshape(%1314, newshape=[780]) /* ty=Tensor[(780), float32] */;
    %1317 = reshape(%1315, newshape=[96]) /* ty=Tensor[(96), bool] */;
    %1318 = @func_17266(%1316, %1317) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(15, 4, 13), float32], Tensor[(780), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32], Tensor[(96), bool], Tensor[(1120), float32]) */;
    %1319 = @func_794() /* ty=Tensor[(1120), float32] */;
    %1320 = %1318.6;
    (%1319, %1320, meta[relay.Constant][33] /* ty=Tensor[(780), float32] */, %var_17442)
  };
  %1321(%var_17459) /* ty=(Tensor[(1120), float32], Tensor[(96), bool], Tensor[(780), float32], Tensor[(96), bool]) */
}

def @func_10311() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_10309() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_1422() -> Tensor[(1120), float32] {
  @func_1420() /* ty=Tensor[(1120), float32] */
}

def @func_6075(%var_6047: Tensor[(6, 3, 8), float32]) -> (Tensor[(6, 3, 8), float32],) {
  %1322 = cast(%var_6047, dtype="float32") /* ty=Tensor[(6, 3, 8), float32] */;
  %1323 = log(%1322) /* ty=Tensor[(6, 3, 8), float32] */;
  (%1323,)
}

def @func_7601(%var_7600: Tensor[(825), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(6, 5, 9), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(1120), float32]) {
  %1333 = fn (%var_7579: Tensor[(825), float32]) -> (Tensor[(7, 4, 4), float32], Tensor[(6, 5, 9), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(1120), float32]) {
    %1324 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
    %1325 = @func_6141() /* ty=(Tensor[(6, 5, 9), float32], Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
    %1326 = cast(%var_7579, dtype="float32") /* ty=Tensor[(825), float32] */;
    %1327 = reshape(%1326, newshape=[11, 15, 5]) /* ty=Tensor[(11, 15, 5), float32] */;
    %1328 = @func_2178() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1329 = %1324.0;
    %1330 = %1325.0;
    %1331 = @func_4254(%1327) /* ty=Tensor[(11, 15, 5), bool] */;
    %1332 = %1328.0;
    (%1329, %1330, %1331, %var_7579, %1332)
  };
  %1333(%var_7600) /* ty=(Tensor[(7, 4, 4), float32], Tensor[(6, 5, 9), float32], Tensor[(11, 15, 5), bool], Tensor[(825), float32], Tensor[(1120), float32]) */
}

def @func_4472() -> Tensor[(1120), float32] {
  %1335 = fn () -> Tensor[(1120), float32] {
    %1334 = @func_4424() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */;
    %1334.2
  };
  %1335() /* ty=Tensor[(1120), float32] */
}

def @func_8516() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), int32], Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), uint32]) {
  %1336 = @func_2038() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(7, 4, 4), float32]) */;
  %1337 = %1336.1;
  %1338 = cast(%1337, dtype="float32") /* ty=Tensor[(7, 4, 4), float32] */;
  %1339 = reshape(%1338, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %1340 = @func_6207(%1339) /* ty=(Tensor[(7, 4, 4), int32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1341 = @func_1530() /* ty=(Tensor[(7, 10, 16), bool],) */;
  %1342 = @func_4141() /* ty=(Tensor[(1120), float32],) */;
  %1343 = %1341.0;
  %1344 = cast(%1343, dtype="float32") /* ty=Tensor[(7, 10, 16), float32] */;
  %1345 = reshape(%1344, newshape=[7, 10, 16]) /* ty=Tensor[(7, 10, 16), float32] */;
  %1346 = @func_901(%1345) /* ty=(Tensor[(7, 10, 16), uint32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */;
  %1347 = %1340.0;
  %1348 = %1342.0;
  %1349 = %1346.0;
  (%1337, %1347, %1343, %1348, %1349)
}

def @func_1008() -> (Tensor[(11, 15, 5), float32],) {
  @func_1006() /* ty=(Tensor[(11, 15, 5), float32],) */
}

def @func_13332() -> (Tensor[(7, 10, 16), bool],) {
  %1352 = fn () -> (Tensor[(7, 10, 16), bool],) {
    %1350 = @func_5096() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 10, 16), bool]) */;
    %1351 = %1350.1;
    (%1351,)
  };
  %1352() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_14441() -> Tensor[(1120), float32] {
  %1354 = fn () -> Tensor[(1120), float32] {
    %1353 = @func_5459() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1353.1
  };
  %1354() /* ty=Tensor[(1120), float32] */
}

def @func_13501() -> (Tensor[(1120), float32],) {
  @func_13499() /* ty=(Tensor[(1120), float32],) */
}

def @func_3806() -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) {
  %1363 = fn () -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) {
    %1355 = @func_2436() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) */;
    %1356 = @func_563() /* ty=(Tensor[(1120), float32],) */;
    %1357 = cast(meta[relay.Constant][34] /* ty=Tensor[(1, 1456), float32] */, dtype="float32") /* ty=Tensor[(1, 1456), float32] */;
    %1358 = reshape(%1357, newshape=[13, 8, 14]) /* ty=Tensor[(13, 8, 14), float32] */;
    %1359 = @func_1948(%1358) /* ty=(Tensor[(13, 8, 14), float32],) */;
    %1360 = %1355.0;
    %1361 = %1356.0;
    %1362 = %1359.0;
    (%1360, %1361, %1362, meta[relay.Constant][34] /* ty=Tensor[(1, 1456), float32] */)
  };
  %1363() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(1, 1456), float32]) */
}

def @func_16800() -> (Tensor[(7, 4, 4), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
  %1369 = fn () -> (Tensor[(7, 4, 4), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) {
    %1364 = @func_9169() /* ty=(Tensor[(7, 4, 4), float32],) */;
    %1365 = cast(meta[relay.Constant][35] /* ty=Tensor[(250), float32] */, dtype="float32") /* ty=Tensor[(250), float32] */;
    %1366 = reshape(%1365, newshape=[5, 5, 10]) /* ty=Tensor[(5, 5, 10), float32] */;
    %1367 = %1364.0;
    %1368 = @func_835(%1366) /* ty=Tensor[(5, 5, 10), float32] */;
    (%1367, %1368, meta[relay.Constant][35] /* ty=Tensor[(250), float32] */)
  };
  %1369() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(5, 5, 10), float32], Tensor[(250), float32]) */
}

def @func_4141() -> (Tensor[(1120), float32],) {
  %1370 = @func_957() /* ty=Tensor[(1120), float32] */;
  (%1370,)
}

def @func_14037() -> (Tensor[(1120), float32], Tensor[(14, 16, 10), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
  %1381 = fn () -> (Tensor[(1120), float32], Tensor[(14, 16, 10), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) {
    %1371 = @func_13844() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1372 = @func_11072() /* ty=(Tensor[(14, 16, 10), float64], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
    %1373 = %1372.0;
    %1374 = cast(%1373, dtype="float64") /* ty=Tensor[(14, 16, 10), float64] */;
    %1375 = @func_10637() /* ty=(Tensor[(7, 10, 16), bool], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(6, 4, 1), float32], float32) */;
    %1376 = @func_2252() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1377 = %1371.1;
    %1378 = sin(%1374) /* ty=Tensor[(14, 16, 10), float64] */;
    %1379 = %1375.0;
    %1380 = %1376.1;
    (%1377, %1378, %1379, %1380)
  };
  %1381() /* ty=(Tensor[(1120), float32], Tensor[(14, 16, 10), float64], Tensor[(7, 10, 16), bool], Tensor[(1120), float32]) */
}

def @func_14489() -> (Tensor[(7, 4, 4), float32],) {
  %1382 = @func_1735() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */;
  %1383 = %1382.1;
  (%1383,)
}

def @func_4962() -> (Tensor[(1120), float32],) {
  %1384 = @func_4603() /* ty=(Tensor[(1120), float32],) */;
  %1385 = %1384.0;
  (%1385,)
}

def @func_8106() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) {
  @func_8104() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */
}

def @func_4567() -> (Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(8, 182), float32], Tensor[(1120), float32]) {
  @func_4565() /* ty=(Tensor[(1120), float32], Tensor[(13, 8, 14), float32], Tensor[(8, 182), float32], Tensor[(1120), float32]) */
}

def @func_15758() -> Tensor[(1120), float32] {
  %1386 = @func_1218() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1386.0
}

def @func_7362() -> Tensor[(7, 4, 4), float32] {
  @func_7360() /* ty=Tensor[(7, 4, 4), float32] */
}

def @func_15472() -> (Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  @func_15470() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_1360(%var_1358: Tensor[(112), float32]) -> (Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) {
  @func_1357(%var_1358) /* ty=(Tensor[(7, 10, 16), float32], Tensor[(7, 4, 4), float64], Tensor[(112), float32]) */
}

def @func_4107() -> (Tensor[(1120), float32],) {
  @func_4105() /* ty=(Tensor[(1120), float32],) */
}

def @func_12053() -> Tensor[(1120), float32] {
  @func_12051() /* ty=Tensor[(1120), float32] */
}

def @func_4964() -> (Tensor[(1120), float32],) {
  @func_4962() /* ty=(Tensor[(1120), float32],) */
}

def @func_10309() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1387 = @func_7659() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1388 = @func_9723() /* ty=(Tensor[(1120), float32],) */;
  %1389 = %1387.0;
  %1390 = %1388.0;
  (%1389, %1390)
}

def @func_16891(%var_16889: Tensor[(16, 1, 7), uint16], %var_16890: Tensor[(16, 1, 7), uint16]) -> Tensor[(16, ?, 7), float32] {
  %1397 = fn (%var_16873: Tensor[(16, 1, 7), uint16], %var_16874: Tensor[(16, 1, 7), uint16]) -> Tensor[(16, ?, 7), float32] {
    %1391 = cast(%var_16874, dtype="uint16") /* ty=Tensor[(16, 1, 7), uint16] */;
    %1392 = shape_of(%var_16873, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1393 = cast(%var_16873, dtype="uint16") /* ty=Tensor[(16, 1, 7), uint16] */;
    %1394 = dyn.reshape(%1391, %1392, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1395 = right_shift(%1393, %1394) /* ty=Tensor[(16, ?, 7), uint16] */;
    %1396 = cast(%1395, dtype="float32") /* ty=Tensor[(16, ?, 7), float32] */;
    cosh(%1396) /* ty=Tensor[(16, ?, 7), float32] */
  };
  %1397(%var_16889, %var_16890) /* ty=Tensor[(16, ?, 7), float32] */
}

def @func_958() -> Tensor[(1120), float32] {
  %1399 = fn () -> Tensor[(1120), float32] {
    %1398 = @func_563() /* ty=(Tensor[(1120), float32],) */;
    %1398.0
  };
  %1399() /* ty=Tensor[(1120), float32] */
}

def @func_9684(%var_9666: Tensor[(2, 13, 10), float32]) -> (Tensor[(2, 13, 10), float32], Tensor[(7, 10, 16), bool]) {
  %1400 = cast(%var_9666, dtype="float32") /* ty=Tensor[(2, 13, 10), float32] */;
  %1401 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %1402 = acosh(%1400) /* ty=Tensor[(2, 13, 10), float32] */;
  %1403 = %1401.1;
  (%1402, %1403)
}

def @func_10087() -> (Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) {
  @func_10085() /* ty=(Tensor[(7, 4, 4), float32], Tensor[(1120), float32]) */
}

def @func_9687(%var_9685: Tensor[(2, 13, 10), float32]) -> (Tensor[(2, 13, 10), float32], Tensor[(7, 10, 16), bool]) {
  @func_9684(%var_9685) /* ty=(Tensor[(2, 13, 10), float32], Tensor[(7, 10, 16), bool]) */
}

def @func_12908(%var_12907: Tensor[(14, 13, 10), float32]) -> (Tensor[(14, 13, 10), bool],) {
  %1411 = fn (%var_12889: Tensor[(14, 13, 10), float32]) -> (Tensor[(14, 13, 10), bool],) {
    %1404 = cast(%var_12889, dtype="float32") /* ty=Tensor[(14, 13, 10), float32] */;
    %1405 = asin(%1404) /* ty=Tensor[(14, 13, 10), float32] */;
    %1406 = cast(%var_12889, dtype="bool") /* ty=Tensor[(14, 13, 10), bool] */;
    %1407 = shape_of(%1405, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1408 = cast(%1405, dtype="bool") /* ty=Tensor[(14, 13, 10), bool] */;
    %1409 = dyn.reshape(%1406, %1407, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1410 = less_equal(%1408, %1409) /* ty=Tensor[(14, 13, 10), bool] */;
    (%1410,)
  };
  %1411(%var_12907) /* ty=(Tensor[(14, 13, 10), bool],) */
}

def @func_17029() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), bool], Tensor[(112), float32]) {
  %1412 = @func_10378() /* ty=(Tensor[(1120), float32],) */;
  %1413 = cast(meta[relay.Constant][36] /* ty=Tensor[(112), float32] */, dtype="float32") /* ty=Tensor[(112), float32] */;
  %1414 = reshape(%1413, newshape=[7, 4, 4]) /* ty=Tensor[(7, 4, 4), float32] */;
  %1415 = @func_16184(%1414) /* ty=(Tensor[(7, 4, 4), bool],) */;
  %1416 = %1412.0;
  %1417 = %1415.0;
  (%1416, %1417, meta[relay.Constant][36] /* ty=Tensor[(112), float32] */)
}

def @func_17044() -> Tensor[(7, 4, 4), bool] {
  %1418 = @func_17029() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), bool], Tensor[(112), float32]) */;
  %1418.1
}

def @func_5969() -> (Tensor[(7, 4, 4), float32],) {
  @func_5967() /* ty=(Tensor[(7, 4, 4), float32],) */
}

def @func_11175() -> Tensor[(1120), float32] {
  @func_11173() /* ty=Tensor[(1120), float32] */
}

def @func_17369(%var_17367: Tensor[(5, 3, 1), uint16], %var_17368: Tensor[(5, 3, 1), uint16]) -> (Tensor[(5, 3, ?), uint16],) {
  @func_17365(%var_17367, %var_17368) /* ty=(Tensor[(5, 3, ?), uint16],) */
}

def @func_3129(%var_3127: Tensor[(8, 15, 8), uint8], %var_3128: Tensor[(8, 15, 8), uint8]) -> (Tensor[(8, 15, 8), uint8],) {
  %1424 = fn (%var_3120: Tensor[(8, 15, 8), uint8], %var_3121: Tensor[(8, 15, 8), uint8]) -> (Tensor[(8, 15, 8), uint8],) {
    %1419 = cast(%var_3121, dtype="uint8") /* ty=Tensor[(8, 15, 8), uint8] */;
    %1420 = shape_of(%var_3120, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1421 = cast(%var_3120, dtype="uint8") /* ty=Tensor[(8, 15, 8), uint8] */;
    %1422 = dyn.reshape(%1419, %1420, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1423 = logical_xor(%1421, %1422) /* ty=Tensor[(8, 15, 8), uint8] */;
    (%1423,)
  };
  %1424(%var_3127, %var_3128) /* ty=(Tensor[(8, 15, 8), uint8],) */
}

def @func_3726() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) {
  @func_3724() /* ty=(Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */
}

def @func_5585() -> (Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) {
  %1433 = fn () -> (Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) {
    %1425 = cast(meta[relay.Constant][38] /* ty=Tensor[(13, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
    %1426 = shape_of(meta[relay.Constant][37] /* ty=Tensor[(13, 3, 8), float64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1427 = cast(meta[relay.Constant][37] /* ty=Tensor[(13, 3, 8), float64] */, dtype="float64") /* ty=Tensor[(13, 3, 8), float64] */;
    %1428 = dyn.reshape(%1425, %1426, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1429 = @func_1390() /* ty=(Tensor[(11, 15, 5), float32],) */;
    %1430 = power(%1427, %1428) /* ty=Tensor[(13, 3, 8), float64] */;
    %1431 = @func_431() /* ty=Tensor[(7, 10, 16), bool] */;
    %1432 = %1429.0;
    (%1430, %1431, %1432)
  };
  %1433() /* ty=(Tensor[(13, 3, 8), float64], Tensor[(7, 10, 16), bool], Tensor[(11, 15, 5), float32]) */
}

def @func_15635() -> (Tensor[(7, 10, 16), bool],) {
  %1436 = fn () -> (Tensor[(7, 10, 16), bool],) {
    %1434 = @func_7218() /* ty=(Tensor[(7, 10, 16), bool],) */;
    %1435 = %1434.0;
    (%1435,)
  };
  %1436() /* ty=(Tensor[(7, 10, 16), bool],) */
}

def @func_17269(%var_17267: Tensor[(780), float32], %var_17268: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(15, 4, 13), float32], Tensor[(780), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32], Tensor[(96), bool], Tensor[(1120), float32]) {
  %1452 = fn (%var_17212: Tensor[(780), float32], %var_17237: Tensor[(96), bool]) -> (Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(15, 4, 13), float32], Tensor[(780), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32], Tensor[(96), bool], Tensor[(1120), float32]) {
    %1437 = @func_4141() /* ty=(Tensor[(1120), float32],) */;
    %1438 = cast(%var_17212, dtype="float32") /* ty=Tensor[(780), float32] */;
    %1439 = cast(%var_17212, dtype="float32") /* ty=Tensor[(780), float32] */;
    %1440 = reshape(%1438, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
    %1441 = reshape(%1439, newshape=[15, 4, 13]) /* ty=Tensor[(15, 4, 13), float32] */;
    %1442 = cast(%var_17237, dtype="bool") /* ty=Tensor[(96), bool] */;
    %1443 = reshape(%1442, newshape=[96]) /* ty=Tensor[(96), bool] */;
    %1444 = @func_16305(%1443) /* ty=(Tensor[(1120), float32], Tensor[(12, 2, 4), bool], Tensor[(96), bool], Tensor[(1120), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32]) */;
    %1445 = @func_11096() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32]) */;
    %1446 = %1437.0;
    %1447 = @func_15758() /* ty=Tensor[(1120), float32] */;
    %1448 = @func_4398(%1440, %1441) /* ty=Tensor[(15, 4, 13), float32] */;
    %1449 = @func_9957() /* ty=Tensor[(7, 10, 16), float32] */;
    %1450 = %1444.5;
    %1451 = %1445.0;
    (%1446, %1447, %1448, %var_17212, %1449, %1450, %var_17237, %1451)
  };
  %1452(%var_17267, %var_17268) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(15, 4, 13), float32], Tensor[(780), float32], Tensor[(7, 10, 16), float32], Tensor[(1120), float32], Tensor[(96), bool], Tensor[(1120), float32]) */
}

def @func_2252() -> (Tensor[(1120), float32], Tensor[(1120), float32]) {
  %1453 = @func_413() /* ty=(Tensor[(1120), float32], Tensor[(7, 10, 16), bool]) */;
  %1454 = @func_261() /* ty=Tensor[(1120), float32] */;
  %1455 = %1453.0;
  (%1454, %1455)
}

def @func_6376(%var_6339: Tensor[(3, 9, 12), float64]) -> (Tensor[(3, 9, 12), float64], Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1, 30), float32]) {
  %1456 = cast(%var_6339, dtype="float64") /* ty=Tensor[(3, 9, 12), float64] */;
  %1457 = cast(meta[relay.Constant][39] /* ty=Tensor[(1, 30), float32] */, dtype="float32") /* ty=Tensor[(1, 30), float32] */;
  %1458 = reshape(%1457, newshape=[30]) /* ty=Tensor[(30), float32] */;
  %1459 = @func_3110(%1458) /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(?, 10, 3), int8], Tensor[(30), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32]) */;
  %1460 = sin(%1456) /* ty=Tensor[(3, 9, 12), float64] */;
  %1461 = @func_5735() /* ty=Tensor[(1120), float32] */;
  %1462 = %1459.0;
  (%1460, %1461, %1462, meta[relay.Constant][39] /* ty=Tensor[(1, 30), float32] */)
}

def @func_10121() -> Tensor[(1120), float32] {
  %1464 = fn () -> Tensor[(1120), float32] {
    %1463 = @func_2436() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(7, 10, 16), float32]) */;
    %1463.0
  };
  %1464() /* ty=Tensor[(1120), float32] */
}

def @func_8285() -> (Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(1120), float32], Tensor[(7, 4, 4), float32], Tensor[(7, 4, 4), float32]) {
  %1465 = @func_5404() /* ty=(Tensor[(1120), float32], Tensor[(1120), float32], Tensor[(1120), float32]) */;
  %1466 = @func_3748() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1467 = @func_3192() /* ty=(Tensor[(7, 4, 4), float32],) */;
  %1468 = @func_6419() /* ty=Tensor[(1120), float32] */;
  %1469 = @func_911() /* ty=Tensor[(7, 4, 4), float32] */;
  %1470 = %1465.0;
  %1471 = %1466.0;
  %1472 = %1467.0;
  (%1468, %1469, %1470, %1471, %1472)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen638/build/output.py:5760: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen638/build/output.py", line 5765, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_left_shift_kernel0(short* __restrict__ T_left_shift, short* __restrict__ placeholder, short* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 4) + (((int)threadIdx.x) >> 8)) < 5) {
    if (((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)) < 80) {
      if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1280) {
        T_left_shift[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[(((((int)blockIdx.x) * 64) + (((int)threadIdx.x) >> 4)))] << placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
      }
    }
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


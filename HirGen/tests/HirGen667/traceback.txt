==========mod==========
#[version = "0.0.5"]
def @func_9502() -> (Tensor[(8, 11, 10), float32],) {
  %0 = @func_7991() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(156), float32]) */;
  %1 = %0.0;
  (%1,)
}

def @func_2861(%var_2813: Tensor[(1232), float32], %var_2830: Tensor[(2880), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), uint32], Tensor[(1232), float32], Tensor[(2160), int64], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(8, 11, 10), bool]) {
  %2 = cast(%var_2813, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %3 = reshape(%2, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
  %4 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
  %5 = cast(8.44046f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %6 = cast(%var_2830, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %7 = reshape(%5, newshape=[]) /* ty=float32 */;
  %8 = reshape(%6, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %9 = @func_749(%7, %8) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %10 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %11 = @func_1926(%3) /* ty=Tensor[(14, 8, 11), uint32] */;
  %12 = %4.4;
  %13 = %9.2;
  %14 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  (%10, %11, %var_2813, %12, %13, 8.44046f /* ty=float32 */, %var_2830, %14)
}

def @func_2712() -> Tensor[(8, 11, 10), bool] {
  %15 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %15.0
}

def @func_9568() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  %16 = @func_2712() /* ty=Tensor[(8, 11, 10), bool] */;
  %17 = cast(%16, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %18 = reshape(%17, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), bool] */;
  %19 = @func_1211(%18) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */;
  %20 = %19.2;
  (%16, %20)
}

def @func_2339() -> Tensor[(8, 11, 10), bool] {
  @func_2132() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_1128() -> (Tensor[(8, 11, 10), bool],) {
  %21 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  (%21,)
}

def @func_973(%var_935: Tensor[(5, 7, 6), float64], %var_936: Tensor[(5, 7, 6), float64]) -> (Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  %22 = cast(%var_936, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %23 = shape_of(%var_935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %24 = cast(%var_935, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %25 = dyn.reshape(%22, %23, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %26 = cast(meta[relay.Constant][0] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %28 = reshape(%26, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %29 = reshape(%27, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %30 = power(%24, %25) /* ty=Tensor[(5, 7, 6), float64] */;
  %31 = @func_372(%28, %29) /* ty=Tensor[(6, 3, 4), float32] */;
  (%30, %31, meta[relay.Constant][0] /* ty=Tensor[(72), float32] */)
}

def @func_1991() -> Tensor[(1, 1232), float32] {
  %32 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
  %32.2
}

def @func_2896() -> (Tensor[(8, 11, 10), bool],) {
  %33 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  (%33,)
}

def @func_6038() -> (Tensor[(8, 11, 10), float64],) {
  %34 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  %35 = cast(%34, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %36 = cos(%35) /* ty=Tensor[(8, 11, 10), float64] */;
  (%36,)
}

def @func_3301() -> (Tensor[(8, 11, 10), bool],) {
  %37 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %38 = %37.0;
  (%38,)
}

def @func_2236() -> Tensor[(8, 11, 10), bool] {
  %39 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %39.0
}

def @func_3710() -> Tensor[(8, 11, 10), bool] {
  @func_1584() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_3116() -> (Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) {
  %40 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %41 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 11, 10), float32] */, dtype="uint32") /* ty=Tensor[(8, 11, 10), uint32] */;
  %42 = shape_of(%40, dtype="int32") /* ty=Tensor[(3), int32] */;
  %43 = cast(%40, dtype="uint32") /* ty=Tensor[(8, 11, 10), uint32] */;
  %44 = dyn.reshape(%41, %42, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %46 = reshape(%45, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %47 = @func_1252(%46) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
  %48 = bitwise_and(%43, %44) /* ty=Tensor[(8, 11, 10), uint32] */;
  %49 = %47.6;
  (%48, %49, meta[relay.Constant][2] /* ty=Tensor[(156), float32] */)
}

def @func_3400() -> Tensor[(210), float64] {
  %50 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
  %50.1
}

def @func_6718() -> Tensor[(1848), bool] {
  %51 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %51.2
}

def @func_4317() -> Tensor[(8, 11, 10), bool] {
  %52 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %52.0
}

def @func_6948() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %53 = @func_5784() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %54 = @func_5861() /* ty=(Tensor[(156), float32], Tensor[(8, 11, 10), bool]) */;
  %55 = %53.1;
  %56 = %54.1;
  (%55, %56)
}

def @func_4787() -> Tensor[(8, 11, 10), bool] {
  @func_4317() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_7808() -> Tensor[(8, 11, 10), float32] {
  @func_3283() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_8269() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) {
  %57 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %58 = cast(meta[relay.Constant][3] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %59 = reshape(%58, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
  %60 = @func_1309(%59) /* ty=(Tensor[(14, 8, 11), float32],) */;
  %61 = %57.0;
  %62 = %60.0;
  (%61, %62, meta[relay.Constant][3] /* ty=Tensor[(1232), float32] */)
}

def @func_8352() -> (Tensor[(8, 11, 10), bool],) {
  %63 = @func_2896() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %64 = %63.0;
  (%64,)
}

def @func_7303() -> (Tensor[(6, 3, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %65 = @func_5231() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) */;
  %66 = @func_7250() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %67 = %65.1;
  %68 = @func_6603() /* ty=Tensor[(8, 11, 10), bool] */;
  %69 = %66.0;
  (%67, %68, %69)
}

def @func_5961(%var_5958: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) {
  %70 = @func_5691() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %71 = cast(meta[relay.Constant][4] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %72 = reshape(%71, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %73 = @func_1252(%72) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
  %74 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %75 = cast(%var_5958, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %76 = reshape(%75, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
  %77 = @func_2749(%76) /* ty=(Tensor[(1848), int64],) */;
  %78 = %70.1;
  %79 = %73.7;
  %80 = @func_2132() /* ty=Tensor[(8, 11, 10), bool] */;
  %81 = %74.0;
  %82 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  %83 = %77.0;
  (%78, %79, meta[relay.Constant][4] /* ty=Tensor[(156), float32] */, %80, %81, %82, %83, %var_5958)
}

def @func_10202(%var_10193: Tensor[(2160), int64]) -> (Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) {
  %84 = @func_6351() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %85 = cast(%var_10193, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %86 = reshape(%85, newshape=[2160]) /* ty=Tensor[(2160), int64] */;
  %87 = @func_9139(%86) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), uint8], Tensor[(8, 11, 10), bool]) */;
  %88 = %84.1;
  %89 = %87.3;
  (%88, %89, %var_10193)
}

def @func_6313() -> (Tensor[(8, 11, 10), float64],) {
  %90 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %91 = %90.0;
  (%91,)
}

def @func_8768() -> (Tensor[(15, 16, 4), float64],) {
  %92 = @func_4421() /* ty=Tensor[(15, 16, 4), float64] */;
  (%92,)
}

def @func_10757(%var_10713: Tensor[(4, 308), float32], %var_10714: Tensor[(2880), float32], %var_10733: Tensor[(4, 308), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(15, 16, 4), float64], Tensor[(4, 308), bool], Tensor[(8, 11, 10), bool]) {
  %93 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %94 = cast(%var_10733, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
  %95 = shape_of(%var_10713, dtype="int32") /* ty=Tensor[(2), int32] */;
  %96 = cast(%var_10713, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
  %97 = dyn.reshape(%94, %95, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %98 = mod(%96, %97) /* ty=Tensor[(4, 308), float64] */;
  %99 = cast(%98, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
  %100 = log2(%99) /* ty=Tensor[(4, 308), float64] */;
  %101 = cast(%var_10713, dtype="float32") /* ty=Tensor[(4, 308), float32] */;
  %102 = cast(%var_10714, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %103 = reshape(%101, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %104 = reshape(%102, newshape=[2880]) /* ty=Tensor[(2880), float32] */;
  %105 = @func_2861(%103, %104) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), uint32], Tensor[(1232), float32], Tensor[(2160), int64], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(8, 11, 10), bool]) */;
  %106 = %105.2;
  %107 = cast(%106, dtype="bool") /* ty=Tensor[(1232), bool] */;
  %108 = shape_of(%100, dtype="int32") /* ty=Tensor[(2), int32] */;
  %109 = cast(%100, dtype="bool") /* ty=Tensor[(4, 308), bool] */;
  %110 = dyn.reshape(%107, %108, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %111 = @func_6245() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %112 = @func_9536() /* ty=Tensor[(8, 11, 10), bool] */;
  %113 = %93.0;
  %114 = logical_and(%109, %110) /* ty=Tensor[(4, 308), bool] */;
  %115 = %111.0;
  (%112, %var_10714, %113, %114, %115)
}

def @func_5231() -> (Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) {
  %116 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
  %117 = cast(meta[relay.Constant][5] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
  %119 = reshape(%117, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %120 = reshape(%118, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %121 = @func_973(%119, %120) /* ty=(Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %122 = %116.0;
  %123 = %121.1;
  (%122, %123, meta[relay.Constant][5] /* ty=Tensor[(105, 2), float64] */)
}

def @func_4421() -> Tensor[(15, 16, 4), float64] {
  %124 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %124.0
}

def @func_11110() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %125 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %126 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %127 = %125.3;
  %128 = %126.0;
  (%127, %128)
}

def @func_9830(%var_9814: Tensor[(14, 2, 15), float32]) -> (Tensor[(14, 2, 15), float32], Tensor[(14, 2, 15), float32], Tensor[(8, 11, 10), float64], Tensor[(14, 2, 15), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %129 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
  %130 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
  %131 = @func_6173() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %132 = cast(%var_9814, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %133 = shape_of(meta[relay.Constant][6] /* ty=Tensor[(14, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %134 = cast(meta[relay.Constant][6] /* ty=Tensor[(14, 2, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %136 = @func_9502() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %137 = atan(%129) /* ty=Tensor[(14, 2, 15), float32] */;
  %138 = log2(%130) /* ty=Tensor[(14, 2, 15), float32] */;
  %139 = %131.0;
  %140 = greater_equal(%134, %135) /* ty=Tensor[(14, 2, 15), bool] */;
  %141 = %136.0;
  %142 = @func_4801() /* ty=Tensor[(8, 11, 10), bool] */;
  (%137, %138, %139, %140, %141, %142)
}

def @func_1057(%var_985: Tensor[(11, 12, 14), bool], %var_986: Tensor[(11, 12, 14), bool], %var_991: float32, %var_992: Tensor[(1, 2880), float32], %var_1043: Tensor[(210), float64], %var_1053: Tensor[(156), int32]) -> (Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) {
  %143 = cast(%var_991, dtype="float32") /* ty=float32 */;
  %144 = cast(%var_992, dtype="float32") /* ty=Tensor[(1, 2880), float32] */;
  %145 = reshape(%143, newshape=[]) /* ty=float32 */;
  %146 = reshape(%144, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %147 = @func_749(%145, %146) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %148 = cast(%var_991, dtype="float32") /* ty=float32 */;
  %149 = cast(%var_992, dtype="float32") /* ty=Tensor[(1, 2880), float32] */;
  %150 = reshape(%148, newshape=[]) /* ty=float32 */;
  %151 = reshape(%149, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %152 = @func_749(%150, %151) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %153 = cast(%var_985, dtype="float32") /* ty=Tensor[(11, 12, 14), float32] */;
  %154 = erf(%153) /* ty=Tensor[(11, 12, 14), float32] */;
  %155 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 12, 14), float32] */, dtype="float64") /* ty=Tensor[(11, 12, 14), float64] */;
  %156 = shape_of(%154, dtype="int32") /* ty=Tensor[(3), int32] */;
  %157 = cast(%154, dtype="float64") /* ty=Tensor[(11, 12, 14), float64] */;
  %158 = dyn.reshape(%155, %156, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %159 = cast(%var_991, dtype="float32") /* ty=float32 */;
  %160 = %152.0;
  %161 = cast(%160, dtype="float32") /* ty=Tensor[(12, 16, 15), float32] */;
  %162 = reshape(%159, newshape=[]) /* ty=float32 */;
  %163 = reshape(%161, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %164 = @func_749(%162, %163) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %165 = cast(%var_1043, dtype="float64") /* ty=Tensor[(210), float64] */;
  %166 = cast(%var_1043, dtype="float64") /* ty=Tensor[(210), float64] */;
  %167 = reshape(%165, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %168 = reshape(%166, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %169 = @func_973(%167, %168) /* ty=(Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %170 = cast(%var_1053, dtype="int32") /* ty=Tensor[(156), int32] */;
  %171 = cast(%var_1053, dtype="int32") /* ty=Tensor[(156), int32] */;
  %172 = reshape(%170, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %173 = reshape(%171, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %174 = @func_583(%172, %173) /* ty=(Tensor[(13, 3, 4), int32],) */;
  %175 = cast(%var_986, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
  %176 = shape_of(%var_985, dtype="int32") /* ty=Tensor[(3), int32] */;
  %177 = cast(%var_985, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
  %178 = dyn.reshape(%175, %176, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %179 = logical_or(%177, %178) /* ty=Tensor[(11, 12, 14), bool] */;
  %180 = cast(%179, dtype="float32") /* ty=Tensor[(11, 12, 14), float32] */;
  %181 = %147.2;
  %182 = divide(%157, %158) /* ty=Tensor[(11, 12, 14), float64] */;
  %183 = %164.1;
  %184 = %169.0;
  %185 = %174.0;
  %186 = atan(%180) /* ty=Tensor[(11, 12, 14), float32] */;
  (%181, %var_991, %var_992, %160, %182, %183, %184, %var_1043, %185, %var_1053, %186)
}

def @func_6060(%var_6047: Tensor[(10, 9, 12), int64]) -> (Tensor[(10, 9, 12), int64],) {
  %187 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(1, 9, 12), int64] */;
  %188 = cast(%var_6047, dtype="int64") /* ty=Tensor[(10, 9, 12), int64] */;
  %189 = subtract(%187, %188) /* ty=Tensor[(10, 9, 12), int64] */;
  (%189,)
}

def @func_9922() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32]) {
  %190 = @func_7303() /* ty=(Tensor[(6, 3, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %191 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %192 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %193 = @func_6878() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(210), float64]) */;
  %194 = @func_4697() /* ty=(Tensor[(1, 1232), float32],) */;
  %195 = %194.0;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
  %197 = %190.1;
  %198 = %191.0;
  %199 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
  %200 = %192.1;
  %201 = %193.1;
  %202 = cos(%196) /* ty=Tensor[(1, 1232), float32] */;
  (%197, %198, %199, %200, %201, %202)
}

def @func_1513() -> Tensor[(8, 11, 10), bool] {
  %203 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %203.0
}

def @func_1673() -> (Tensor[(8, 11, 10), bool],) {
  %204 = @func_1608() /* ty=Tensor[(8, 11, 10), bool] */;
  (%204,)
}

def @func_7444() -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), int32], Tensor[(1848), float64], Tensor[(1848), int16], Tensor[(1848), uint16]) {
  %205 = @func_5231() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) */;
  %206 = cast(meta[relay.Constant][9] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %207 = cast(meta[relay.Constant][10] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %208 = reshape(%206, newshape=[6, 308]) /* ty=Tensor[(6, 308), bool] */;
  %209 = reshape(%207, newshape=[156]) /* ty=Tensor[(156), int32] */;
  %210 = @func_1281(%208, %209) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) */;
  %211 = cast(meta[relay.Constant][9] /* ty=Tensor[(1848), bool] */, dtype="float64") /* ty=Tensor[(1848), float64] */;
  %212 = cast(meta[relay.Constant][9] /* ty=Tensor[(1848), bool] */, dtype="float64") /* ty=Tensor[(1848), float64] */;
  %213 = asin(%212) /* ty=Tensor[(1848), float64] */;
  %214 = cast(meta[relay.Constant][9] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %215 = shape_of(%213, dtype="int32") /* ty=Tensor[(1), int32] */;
  %216 = cast(%213, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %217 = dyn.reshape(%214, %215, newshape=[]) /* ty=Tensor[(?), bool] */;
  %218 = logical_or(%216, %217) /* ty=Tensor[(1848), bool] */;
  %219 = cast(%218, dtype="int16") /* ty=Tensor[(1848), int16] */;
  %220 = shape_of(%213, dtype="int32") /* ty=Tensor[(1), int32] */;
  %221 = cast(%213, dtype="int16") /* ty=Tensor[(1848), int16] */;
  %222 = dyn.reshape(%219, %220, newshape=[]) /* ty=Tensor[(?), int16] */;
  %223 = cast(%213, dtype="uint8") /* ty=Tensor[(1848), uint8] */;
  %224 = shape_of(%218, dtype="int32") /* ty=Tensor[(1), int32] */;
  %225 = cast(%218, dtype="uint8") /* ty=Tensor[(1848), uint8] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %227 = left_shift(%225, %226) /* ty=Tensor[(1848), uint8] */;
  %228 = cast(%227, dtype="uint16") /* ty=Tensor[(1848), uint16] */;
  %229 = shape_of(%218, dtype="int32") /* ty=Tensor[(1), int32] */;
  %230 = cast(%218, dtype="uint16") /* ty=Tensor[(1848), uint16] */;
  %231 = dyn.reshape(%228, %229, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %232 = %205.0;
  %233 = %210.4;
  %234 = log10(%211) /* ty=Tensor[(1848), float64] */;
  %235 = bitwise_or(%221, %222) /* ty=Tensor[(1848), int16] */;
  %236 = bitwise_xor(%230, %231) /* ty=Tensor[(1848), uint16] */;
  (%232, %233, meta[relay.Constant][10] /* ty=Tensor[(156), int32] */, %234, %235, %236)
}

def @func_8578() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32], Tensor[(6, 3, 4), float32]) {
  %237 = @func_7587() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %238 = @func_6136() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) */;
  %239 = @func_5231() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) */;
  %240 = %237.0;
  %241 = %238.5;
  %242 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
  %243 = %239.1;
  (%240, %241, %242, %243)
}

def @func_9139(%var_9108: Tensor[(2160), int64]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), uint8], Tensor[(8, 11, 10), bool]) {
  %244 = @func_8269() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %245 = cast(meta[relay.Constant][11] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %246 = cast(meta[relay.Constant][12] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %247 = reshape(%245, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int64] */;
  %248 = reshape(%246, newshape=[9, 16, 15]) /* ty=Tensor[(9, 16, 15), int64] */;
  %249 = @func_1973(%247, %248) /* ty=(Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %250 = cast(%var_9108, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %251 = shape_of(meta[relay.Constant][12] /* ty=Tensor[(2160), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %252 = cast(meta[relay.Constant][12] /* ty=Tensor[(2160), int64] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %254 = @func_7808() /* ty=Tensor[(8, 11, 10), float32] */;
  %255 = cast(%254, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %256 = reshape(%255, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), bool] */;
  %257 = @func_1211(%256) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */;
  %258 = %244.0;
  %259 = %249.2;
  %260 = multiply(%252, %253) /* ty=Tensor[(2160), uint8] */;
  %261 = %257.0;
  (%258, %254, %259, meta[relay.Constant][11] /* ty=Tensor[(144), int64] */, %260, %261)
}

def @func_1429() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) {
  %262 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 1232), float32] */, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
  %263 = reshape(%262, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
  %264 = @func_1309(%263) /* ty=(Tensor[(14, 8, 11), float32],) */;
  %265 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %266 = %264.0;
  (%265, %266, meta[relay.Constant][13] /* ty=Tensor[(1, 1232), float32] */)
}

def @func_9463() -> (Tensor[(8, 11, 10), bool],) {
  %267 = @func_4801() /* ty=Tensor[(8, 11, 10), bool] */;
  (%267,)
}

def @func_10807() -> (Tensor[(8, 11, 10), bool],) {
  %268 = @func_6948() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %269 = %268.1;
  (%269,)
}

def @func_12268() -> Tensor[(8, 11, 10), bool] {
  %270 = @func_6948() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %270.0
}

def @func_3920(%var_3906: Tensor[(16, 12, 1), float64]) -> Tensor[(16, 12, 1), float64] {
  %271 = cast(%var_3906, dtype="float64") /* ty=Tensor[(16, 12, 1), float64] */;
  tan(%271) /* ty=Tensor[(16, 12, 1), float64] */
}

def @func_7517() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64]) {
  %272 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %273 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %274 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %275 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  %276 = %272.0;
  %277 = %273.1;
  %278 = %274.0;
  (%275, %276, %277, %278)
}

def @func_13371() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float32]) {
  %279 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %280 = @func_6136() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) */;
  %281 = %279.1;
  %282 = %280.2;
  (%281, %282)
}

def @func_13958() -> Tensor[(8, 11, 10), bool] {
  @func_3710() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_372(%var_357: Tensor[(6, 3, 4), float32], %var_358: Tensor[(6, 3, 4), float32]) -> Tensor[(6, 3, 4), float32] {
  %283 = cast(%var_358, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %284 = shape_of(%var_357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %285 = cast(%var_357, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %286 = dyn.reshape(%283, %284, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%285, %286) /* ty=Tensor[(6, 3, 4), float32] */
}

def @func_1693() -> Tensor[(8, 11, 10), bool] {
  %287 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %287.0
}

def @func_4350() -> (Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) {
  %288 = cast(meta[relay.Constant][14] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %289 = cast(meta[relay.Constant][15] /* ty=Tensor[(60, 36), int64] */, dtype="int64") /* ty=Tensor[(60, 36), int64] */;
  %290 = reshape(%288, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int64] */;
  %291 = reshape(%289, newshape=[9, 16, 15]) /* ty=Tensor[(9, 16, 15), int64] */;
  %292 = @func_1973(%290, %291) /* ty=(Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %293 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %294 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
  %295 = %292.1;
  %296 = %293.0;
  (%294, %295, meta[relay.Constant][14] /* ty=Tensor[(144), int64] */, meta[relay.Constant][15] /* ty=Tensor[(60, 36), int64] */, %296)
}

def @func_4480(%var_4453: Tensor[(13, 11, 3), float32]) -> (Tensor[(13, 11, 3), float32],) {
  %297 = cast(%var_4453, dtype="float32") /* ty=Tensor[(13, 11, 3), float32] */;
  %298 = acosh(%297) /* ty=Tensor[(13, 11, 3), float32] */;
  (%298,)
}

def @func_5784() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %299 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %300 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  %301 = %299.0;
  (%300, %301)
}

def @func_10282() -> Tensor[(8, 11, 10), bool] {
  %302 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %302.0
}

def @func_11174() -> Tensor[(8, 11, 10), bool] {
  %303 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %303.0
}

def @func_13630(%var_13608: Tensor[(2, 1, 16), int8], %var_13609: Tensor[(2, 1, 16), int8]) -> (Tensor[(2, ?, 16), int8], Tensor[(8, 11, 10), bool]) {
  %304 = cast(%var_13609, dtype="int8") /* ty=Tensor[(2, 1, 16), int8] */;
  %305 = shape_of(%var_13608, dtype="int32") /* ty=Tensor[(3), int32] */;
  %306 = cast(%var_13608, dtype="int8") /* ty=Tensor[(2, 1, 16), int8] */;
  %307 = dyn.reshape(%304, %305, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %308 = bitwise_or(%306, %307) /* ty=Tensor[(2, ?, 16), int8] */;
  %309 = @func_9308() /* ty=Tensor[(8, 11, 10), bool] */;
  (%308, %309)
}

def @func_5000(%var_4903: Tensor[(7, 13, 13), bool], %var_4904: Tensor[(7, 13, 13), bool]) -> (Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) {
  %310 = cast(%var_4904, dtype="bool") /* ty=Tensor[(7, 13, 13), bool] */;
  %311 = shape_of(%var_4903, dtype="int32") /* ty=Tensor[(3), int32] */;
  %312 = cast(%var_4903, dtype="bool") /* ty=Tensor[(7, 13, 13), bool] */;
  %313 = dyn.reshape(%310, %311, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %314 = @func_3116() /* ty=(Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) */;
  %315 = cast(meta[relay.Constant][16] /* ty=Tensor[(616, 2), float32] */, dtype="float32") /* ty=Tensor[(616, 2), float32] */;
  %316 = reshape(%315, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %317 = @func_3866(%316) /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %318 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %319 = logical_and(%312, %313) /* ty=Tensor[(7, 13, 13), bool] */;
  %320 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  %321 = %314.2;
  %322 = %317.5;
  %323 = %318.0;
  (%319, %320, %321, %322, meta[relay.Constant][16] /* ty=Tensor[(616, 2), float32] */, %323)
}

def @func_1211(%var_1184: Tensor[(8, 11, 10), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) {
  %324 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %325 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %326 = cast(%var_1184, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  %327 = shape_of(%325, dtype="int32") /* ty=Tensor[(3), int32] */;
  %328 = cast(%325, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  %329 = dyn.reshape(%326, %327, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %330 = divide(%328, %329) /* ty=Tensor[(8, 11, 10), float32] */;
  %331 = cast(%330, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %332 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %333 = %332.0;
  %334 = cast(%333, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  %335 = %324.0;
  %336 = atan(%331) /* ty=Tensor[(8, 11, 10), float64] */;
  %337 = tan(%334) /* ty=Tensor[(8, 11, 10), float32] */;
  (%335, %336, %337)
}

def @func_5290(%var_5280: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(1848), bool], Tensor[(1848), bool], float32) {
  %338 = cast(%var_5280, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %339 = cast(-9.21912f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %340 = reshape(%338, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
  %341 = reshape(%339, newshape=[]) /* ty=float32 */;
  %342 = @func_2979(%340, %341) /* ty=(Tensor[(880), bool], Tensor[(210), float64], Tensor[(1848), bool], float32, Tensor[(2880), float32], Tensor[(5, 42), float64], Tensor[(156), int32]) */;
  %343 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  %344 = %342.2;
  (%343, %344, %var_5280, -9.21912f /* ty=float32 */)
}

def @func_5571() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %345 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %346 = %345.0;
  %347 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  (%346, %347)
}

def @func_8696() -> (Tensor[(8, 11, 10), bool],) {
  %348 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  (%348,)
}

def @func_8127() -> (Tensor[(156), float32],) {
  %349 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
  %350 = %349.0;
  (%350,)
}

def @func_8183() -> (Tensor[(8, 11, 10), bool],) {
  %351 = @func_5784() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %352 = %351.0;
  (%352,)
}

def @func_887(%var_863: Tensor[(4, 1, 11), float32]) -> (Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(4, ?, 11), uint32], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  %353 = cast(meta[relay.Constant][17] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %354 = cast(meta[relay.Constant][17] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %355 = reshape(%353, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %356 = reshape(%354, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %357 = @func_583(%355, %356) /* ty=(Tensor[(13, 3, 4), int32],) */;
  %358 = cast(%var_863, dtype="float32") /* ty=Tensor[(4, 1, 11), float32] */;
  %359 = acos(%358) /* ty=Tensor[(4, 1, 11), float32] */;
  %360 = cast(%var_863, dtype="uint32") /* ty=Tensor[(4, 1, 11), uint32] */;
  %361 = shape_of(%359, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%359, dtype="uint32") /* ty=Tensor[(4, 1, 11), uint32] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %364 = cast(meta[relay.Constant][18] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %365 = cast(meta[relay.Constant][18] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %366 = reshape(%364, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %367 = reshape(%365, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %368 = %357.0;
  %369 = bitwise_and(%362, %363) /* ty=Tensor[(4, ?, 11), uint32] */;
  %370 = @func_372(%366, %367) /* ty=Tensor[(6, 3, 4), float32] */;
  (%368, meta[relay.Constant][17] /* ty=Tensor[(156), int32] */, %369, %370, meta[relay.Constant][18] /* ty=Tensor[(72), float32] */)
}

def @func_14058() -> Tensor[(8, 11, 10), bool] {
  @func_9529() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_11482() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %371 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %372 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %373 = %371.0;
  (%372, %373)
}

def @func_3377() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64]) {
  %374 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
  %375 = @func_2414() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %376 = %374.0;
  %377 = %375.0;
  (%376, %377)
}

def @func_9714() -> (Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) {
  %378 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
  %379 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %380 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 12, 4), float32] */, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
  %381 = exp(%380) /* ty=Tensor[(2, 12, 4), float64] */;
  %382 = cast(meta[relay.Constant][19] /* ty=Tensor[(2, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
  %383 = shape_of(%381, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%381, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %386 = @func_7678() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %387 = cos(%378) /* ty=Tensor[(2, 12, 4), float32] */;
  %388 = %379.0;
  %389 = subtract(%384, %385) /* ty=Tensor[(2, 12, 4), float32] */;
  %390 = %386.0;
  (%387, %388, %389, %390)
}

def @func_12690() -> (Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) {
  %391 = @func_11482() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %392 = cast(meta[relay.Constant][20] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %393 = cast(meta[relay.Constant][21] /* ty=Tensor[(264), uint8] */, dtype="uint8") /* ty=Tensor[(264), uint8] */;
  %394 = reshape(%392, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), uint8] */;
  %395 = reshape(%393, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint8] */;
  %396 = @func_12040(%394, %395) /* ty=(Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) */;
  %397 = %391.0;
  %398 = %396.2;
  (%397, %398, meta[relay.Constant][20] /* ty=Tensor[(24), uint8] */, meta[relay.Constant][21] /* ty=Tensor[(264), uint8] */)
}

def @func_2771() -> (Tensor[(15, 16, 4), float64],) {
  %399 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %400 = %399.0;
  (%400,)
}

def @func_2212() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %401 = @func_1608() /* ty=Tensor[(8, 11, 10), bool] */;
  %402 = @func_1693() /* ty=Tensor[(8, 11, 10), bool] */;
  %403 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  (%401, %402, %403)
}

def @func_13926() -> Tensor[(8, 11, 10), bool] {
  %404 = @func_11343() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %404.4
}

def @func_2097() -> Tensor[(8, 11, 10), float32] {
  %405 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %406 = cast(%405, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  sigmoid(%406) /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_11963() -> (Tensor[(156), float32],) {
  %407 = @func_7991() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(156), float32]) */;
  %408 = %407.1;
  (%408,)
}

def @func_5159(%var_5135: uint64, %var_5136: Tensor[(9, 7, 4), uint64]) -> (Tensor[(9, 7, 4), bool], Tensor[(15, 16, 4), float64], Tensor[(880), bool], Tensor[(8, 11, 10), bool]) {
  %409 = cast(%var_5135, dtype="bool") /* ty=bool */;
  %410 = cast(%var_5136, dtype="bool") /* ty=Tensor[(9, 7, 4), bool] */;
  %411 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %412 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %413 = less_equal(%409, %410) /* ty=Tensor[(9, 7, 4), bool] */;
  %414 = %411.0;
  %415 = %412.2;
  %416 = @func_1608() /* ty=Tensor[(8, 11, 10), bool] */;
  (%413, %414, %415, %416)
}

def @func_10970() -> Tensor[(8, 11, 10), bool] {
  %417 = @func_5182() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %417.1
}

def @func_3283() -> Tensor[(8, 11, 10), float32] {
  @func_2097() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_3139() -> (Tensor[(15, 16, 4), float64],) {
  %418 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %419 = %418.0;
  (%419,)
}

def @func_1252(%var_1234: Tensor[(13, 3, 4), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) {
  %420 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %421 = cast(meta[relay.Constant][23] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %422 = cast(meta[relay.Constant][23] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %423 = reshape(%421, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %424 = reshape(%422, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %425 = @func_973(%423, %424) /* ty=(Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %426 = cast(meta[relay.Constant][22] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %427 = cast(meta[relay.Constant][22] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %428 = reshape(%426, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %429 = reshape(%427, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %430 = @func_583(%428, %429) /* ty=(Tensor[(13, 3, 4), int32],) */;
  %431 = %430.0;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(13, 3, 4), float32] */;
  %433 = sinh(%432) /* ty=Tensor[(13, 3, 4), float32] */;
  %434 = cast(%var_1234, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
  %436 = cast(%433, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %438 = greater(%436, %437) /* ty=Tensor[(13, 3, 4), bool] */;
  %439 = cast(%433, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %440 = shape_of(%438, dtype="int32") /* ty=Tensor[(3), int32] */;
  %441 = cast(%438, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %442 = dyn.reshape(%439, %440, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %443 = cast(3.54367f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %444 = cast(meta[relay.Constant][24] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %445 = reshape(%443, newshape=[]) /* ty=float32 */;
  %446 = reshape(%444, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %447 = @func_749(%445, %446) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %448 = %420.0;
  %449 = %425.0;
  %450 = logical_and(%441, %442) /* ty=Tensor[(13, 3, 4), bool] */;
  %451 = %447.0;
  (%448, meta[relay.Constant][22] /* ty=Tensor[(156), int32] */, %449, meta[relay.Constant][23] /* ty=Tensor[(210), float64] */, %450, %451, 3.54367f /* ty=float32 */, meta[relay.Constant][24] /* ty=Tensor[(2880), float32] */)
}

def @func_13416(%var_13404: Tensor[(11, 14, 9), uint64], %var_13405: Tensor[(11, 14, 9), uint64]) -> (Tensor[(11, 14, 9), float64],) {
  %452 = cast(%var_13405, dtype="uint64") /* ty=Tensor[(11, 14, 9), uint64] */;
  %453 = shape_of(%var_13404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%var_13404, dtype="uint64") /* ty=Tensor[(11, 14, 9), uint64] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %456 = bitwise_or(%454, %455) /* ty=Tensor[(11, 14, 9), uint64] */;
  %457 = cast(%456, dtype="float64") /* ty=Tensor[(11, 14, 9), float64] */;
  %458 = exp(%457) /* ty=Tensor[(11, 14, 9), float64] */;
  (%458,)
}

def @func_10265(%var_10225: Tensor[(2, 10, 10), int32]) -> (Tensor[(2, 10, 10), bool], Tensor[(8, 11, 10), bool]) {
  %459 = cast(meta[relay.Constant][25] /* ty=Tensor[(2, 10, 10), int32] */, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %460 = shape_of(%var_10225, dtype="int32") /* ty=Tensor[(3), int32] */;
  %461 = cast(%var_10225, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
  %462 = dyn.reshape(%459, %460, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %463 = equal(%461, %462) /* ty=Tensor[(2, 10, 10), bool] */;
  %464 = @func_3710() /* ty=Tensor[(8, 11, 10), bool] */;
  (%463, %464)
}

def @func_10068() -> (Tensor[(8, 11, 10), float32],) {
  %465 = @func_8648() /* ty=Tensor[(8, 11, 10), float32] */;
  (%465,)
}

def @func_1121() -> Tensor[(8, 11, 10), bool] {
  %466 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 11, 10), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %467 = shape_of(meta[relay.Constant][26] /* ty=Tensor[(8, 11, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %468 = cast(meta[relay.Constant][26] /* ty=Tensor[(8, 11, 10), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%468, %469) /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_2512(%var_2467: Tensor[(2, 13, 1), float64], %var_2468: Tensor[(2, 13, 1), float64]) -> (Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) {
  %470 = cast(%var_2468, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
  %471 = shape_of(%var_2467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %472 = cast(%var_2467, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
  %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %474 = cast(meta[relay.Constant][28] /* ty=Tensor[(22, 2), float32] */, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
  %475 = reshape(%474, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
  %476 = @func_887(%475) /* ty=(Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(4, ?, 11), uint32], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %477 = divide(%472, %473) /* ty=Tensor[(2, 13, ?), float64] */;
  %478 = %476.3;
  (%477, %478, meta[relay.Constant][28] /* ty=Tensor[(22, 2), float32] */)
}

def @func_5521(%var_5470: Tensor[(13, 5, 3), float64]) -> (Tensor[(13, 5, 3), bool], Tensor[(8, 11, 10), bool]) {
  %479 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %480 = cast(%var_5470, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
  %481 = floor_divide(%479, %480) /* ty=Tensor[(13, 5, 3), float64] */;
  %482 = cast(meta[relay.Constant][29] /* ty=Tensor[(13, 5, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %483 = cast(%481, dtype="bool") /* ty=Tensor[(13, 5, 3), bool] */;
  %484 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %485 = not_equal(%482, %483) /* ty=Tensor[(13, 5, 3), bool] */;
  %486 = %484.0;
  (%485, %486)
}

def @func_7548() -> (Tensor[(8, 11, 10), bool],) {
  %487 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  (%487,)
}

def @func_1926(%var_1896: Tensor[(14, 8, 11), float32]) -> Tensor[(14, 8, 11), uint32] {
  %488 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
  %489 = %488.1;
  %490 = cast(%var_1896, dtype="uint32") /* ty=Tensor[(14, 8, 11), uint32] */;
  %491 = shape_of(%489, dtype="int32") /* ty=Tensor[(3), int32] */;
  %492 = cast(%489, dtype="uint32") /* ty=Tensor[(14, 8, 11), uint32] */;
  %493 = dyn.reshape(%490, %491, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%492, %493) /* ty=Tensor[(14, 8, 11), uint32] */
}

def @func_3493() -> (Tensor[(15, 16, 4), float64],) {
  %494 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %495 = %494.0;
  (%495,)
}

def @func_4264(%var_4261: Tensor[(78, 2), int32]) -> (Tensor[(8, 11, 10), float64], float32, Tensor[(1848), bool], Tensor[(78, 2), int32]) {
  %496 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %497 = cast(meta[relay.Constant][30] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %498 = cast(%var_4261, dtype="int32") /* ty=Tensor[(78, 2), int32] */;
  %499 = reshape(%497, newshape=[6, 308]) /* ty=Tensor[(6, 308), bool] */;
  %500 = reshape(%498, newshape=[156]) /* ty=Tensor[(156), int32] */;
  %501 = @func_1281(%499, %500) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) */;
  %502 = %496.0;
  %503 = %501.3;
  (%502, %503, meta[relay.Constant][30] /* ty=Tensor[(1848), bool] */, %var_4261)
}

def @func_3261() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %504 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  %505 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %506 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  (%504, %505, %506)
}

def @func_4046() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) {
  %507 = @func_3163() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %508 = cast(meta[relay.Constant][31] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %509 = reshape(%508, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %510 = @func_3866(%509) /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %511 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %512 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  %513 = %507.0;
  %514 = %510.3;
  (%511, %512, %513, %514, meta[relay.Constant][31] /* ty=Tensor[(1232), float32] */)
}

def @func_1973(%var_1950: Tensor[(9, 16, 1), int64], %var_1951: Tensor[(9, 16, 15), int64]) -> (Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %515 = cast(%var_1950, dtype="int64") /* ty=Tensor[(9, 16, 1), int64] */;
  %516 = cast(%var_1951, dtype="int64") /* ty=Tensor[(9, 16, 15), int64] */;
  %517 = right_shift(%515, %516) /* ty=Tensor[(9, 16, 15), int64] */;
  %518 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %519 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  (%517, %518, %519)
}

def @func_13500() -> (Tensor[(8, 11, 10), float32],) {
  %520 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %521 = %520.0;
  (%521,)
}

def @func_8381() -> Tensor[(8, 11, 10), float64] {
  %522 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %522.0
}

def @func_8648() -> Tensor[(8, 11, 10), float32] {
  %523 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %524 = cast(%523, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  acos(%524) /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_2460() -> Tensor[(8, 11, 10), bool] {
  %525 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %525.0
}

def @func_8523() -> Tensor[(8, 11, 10), bool] {
  %526 = @func_5182() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %526.0
}

def @func_12071() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %527 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %528 = @func_5691() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %529 = %527.0;
  %530 = %528.0;
  (%529, %530)
}

def @func_6136() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) {
  %531 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %532 = cast(meta[relay.Constant][32] /* ty=Tensor[(1232, 1), float32] */, dtype="float32") /* ty=Tensor[(1232, 1), float32] */;
  %533 = reshape(%532, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %534 = @func_1823(%533) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %535 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  %536 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  %537 = %531.1;
  %538 = %534.1;
  %539 = @func_2712() /* ty=Tensor[(8, 11, 10), bool] */;
  (%535, %536, %537, %538, meta[relay.Constant][32] /* ty=Tensor[(1232, 1), float32] */, %539)
}

def @func_3768() -> Tensor[(8, 11, 10), bool] {
  %540 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %540.1
}

def @func_10564() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64]) {
  %541 = @func_9714() /* ty=(Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) */;
  %542 = %541.1;
  %543 = @func_8942() /* ty=Tensor[(8, 11, 10), float64] */;
  (%542, %543)
}

def @func_4801() -> Tensor[(8, 11, 10), bool] {
  %544 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %544.1
}

def @func_7113() -> (Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) {
  %545 = @func_3342() /* ty=Tensor[(8, 11, 10), float64] */;
  %546 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  (%545, %546)
}

def @func_9026() -> (Tensor[(7, 1, 12), uint16], Tensor[(8, 11, 10), bool]) {
  %547 = cast(meta[relay.Constant][33] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
  %548 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 1, 12), uint16] */, dtype="uint16") /* ty=Tensor[(7, 1, 12), uint16] */;
  %549 = multiply(%547, %548) /* ty=Tensor[(7, 1, 12), uint16] */;
  %550 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  (%549, %550)
}

def @func_9529() -> Tensor[(8, 11, 10), bool] {
  %551 = @func_7587() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %551.0
}

def @func_9587() -> Tensor[(8, 11, 10), bool] {
  @func_4787() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_8441(%var_8413: Tensor[(9, 1232), float32]) -> (Tensor[(9, 1232), uint16], Tensor[(9, 1232), int64]) {
  %552 = @func_4697() /* ty=(Tensor[(1, 1232), float32],) */;
  %553 = %552.0;
  %554 = cast(%553, dtype="bool") /* ty=Tensor[(1, 1232), bool] */;
  %555 = cast(%var_8413, dtype="bool") /* ty=Tensor[(9, 1232), bool] */;
  %556 = less(%554, %555) /* ty=Tensor[(9, 1232), bool] */;
  %557 = cast(%556, dtype="uint16") /* ty=Tensor[(9, 1232), uint16] */;
  %558 = cast(%553, dtype="uint16") /* ty=Tensor[(1, 1232), uint16] */;
  %559 = cast(%556, dtype="int64") /* ty=Tensor[(9, 1232), int64] */;
  %560 = cast(%553, dtype="int64") /* ty=Tensor[(1, 1232), int64] */;
  %561 = bitwise_or(%557, %558) /* ty=Tensor[(9, 1232), uint16] */;
  %562 = left_shift(%559, %560) /* ty=Tensor[(9, 1232), int64] */;
  (%561, %562)
}

def @func_2162() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) {
  %563 = cast(meta[relay.Constant][35] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %564 = cast(meta[relay.Constant][36] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %565 = reshape(%563, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int64] */;
  %566 = reshape(%564, newshape=[9, 16, 15]) /* ty=Tensor[(9, 16, 15), int64] */;
  %567 = @func_1973(%565, %566) /* ty=(Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %568 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %569 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %570 = %567.1;
  (%568, %569, %570, meta[relay.Constant][35] /* ty=Tensor[(144), int64] */, meta[relay.Constant][36] /* ty=Tensor[(2160), int64] */)
}

def @func_1608() -> Tensor[(8, 11, 10), bool] {
  @func_1513() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4186(%var_4172: Tensor[(6, 3, 7), float32], %var_4173: Tensor[(6, 3, 7), float32]) -> (Tensor[(6, 3, 7), float32], Tensor[(22, 2), float32], Tensor[(26), float64]) {
  %571 = cast(%var_4173, dtype="float32") /* ty=Tensor[(6, 3, 7), float32] */;
  %572 = shape_of(%var_4172, dtype="int32") /* ty=Tensor[(3), int32] */;
  %573 = cast(%var_4172, dtype="float32") /* ty=Tensor[(6, 3, 7), float32] */;
  %574 = dyn.reshape(%571, %572, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %575 = cast(meta[relay.Constant][37] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %576 = cast(meta[relay.Constant][37] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %577 = reshape(%575, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
  %578 = reshape(%576, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
  %579 = @func_2512(%577, %578) /* ty=(Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) */;
  %580 = mod(%573, %574) /* ty=Tensor[(6, 3, 7), float32] */;
  %581 = %579.2;
  (%580, %581, meta[relay.Constant][37] /* ty=Tensor[(26), float64] */)
}

def @func_6467(%var_6459: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) {
  %582 = @func_4848() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) */;
  %583 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %584 = cast(%var_6459, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %585 = reshape(%584, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
  %586 = @func_2749(%585) /* ty=(Tensor[(1848), int64],) */;
  %587 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  %588 = %582.1;
  %589 = %583.1;
  %590 = %586.0;
  (%587, %588, %589, %590, %var_6459)
}

def @func_1467() -> (Tensor[(8, 11, 10), bool],) {
  %591 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  (%591,)
}

def @func_9308() -> Tensor[(8, 11, 10), bool] {
  %592 = @func_6351() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %592.0
}

def @func_12846(%var_12835: Tensor[(15, 16, 4), float64]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), bool], Tensor[(8, 11, 10), float64]) {
  %593 = @func_8768() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %594 = %593.0;
  %595 = cast(%var_12835, dtype="bool") /* ty=Tensor[(15, 16, 4), bool] */;
  %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
  %597 = cast(%594, dtype="bool") /* ty=Tensor[(15, 16, 4), bool] */;
  %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %599 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  %600 = @func_2923() /* ty=Tensor[(8, 11, 10), float32] */;
  %601 = logical_and(%597, %598) /* ty=Tensor[(15, 16, 4), bool] */;
  %602 = @func_8942() /* ty=Tensor[(8, 11, 10), float64] */;
  (%599, %600, %601, %602)
}

def @func_13283() -> (Tensor[(8, 11, 10), bool], Tensor[(7, 1, 12), float64], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) {
  %603 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %604 = @func_9026() /* ty=(Tensor[(7, 1, 12), uint16], Tensor[(8, 11, 10), bool]) */;
  %605 = %604.0;
  %606 = cast(%605, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %607 = @func_3377() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64]) */;
  %608 = %603.1;
  %609 = asin(%606) /* ty=Tensor[(7, 1, 12), float64] */;
  %610 = %607.1;
  %611 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
  (%608, %609, %610, %611)
}

def @main() -> Tensor[(9, 12, 12), bool] {
  %612 = cast(meta[relay.Constant][39] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %613 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %614 = cast(meta[relay.Constant][38] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%614, %615) /* ty=Tensor[(9, 12, 12), bool] */
}

def @func_13167() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %616 = @func_7652() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %617 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %618 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %619 = %616.1;
  %620 = %617.0;
  %621 = %618.1;
  (%619, %620, %621)
}

def @func_5691() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %622 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %623 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %624 = %622.1;
  %625 = %623.0;
  (%624, %625)
}

def @func_5182() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %626 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %627 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %628 = %626.0;
  (%627, %628)
}

def @func_10462() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  %629 = @func_9568() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) */;
  %630 = @func_7678() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %631 = @func_6919() /* ty=Tensor[(15, 16, 4), float64] */;
  %632 = %629.0;
  %633 = %630.0;
  (%631, %632, %633)
}

def @func_8901() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %634 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %635 = %634.0;
  %636 = @func_2339() /* ty=Tensor[(8, 11, 10), bool] */;
  (%635, %636)
}

def @func_3565() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %637 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %638 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %639 = %637.0;
  %640 = %638.0;
  (%639, %640)
}

def @func_6603() -> Tensor[(8, 11, 10), bool] {
  %641 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %641.0
}

def @func_10682() -> (Tensor[(15, 16, 4), float64],) {
  %642 = @func_4421() /* ty=Tensor[(15, 16, 4), float64] */;
  (%642,)
}

def @func_9283() -> (Tensor[(8, 11, 10), float32],) {
  %643 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %644 = %643.0;
  (%644,)
}

def @func_10122() -> (Tensor[(8, 11, 10), bool],) {
  %645 = @func_8269() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %646 = %645.0;
  (%646,)
}

def @func_5414() -> Tensor[(8, 11, 10), bool] {
  @func_3768() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_12361(%var_12330: Tensor[(24), uint8]) -> (Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) {
  %647 = @func_11343() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %648 = cast(%var_12330, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %649 = cast(meta[relay.Constant][40] /* ty=Tensor[(264), uint8] */, dtype="uint8") /* ty=Tensor[(264), uint8] */;
  %650 = reshape(%648, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), uint8] */;
  %651 = reshape(%649, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint8] */;
  %652 = @func_12040(%650, %651) /* ty=(Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) */;
  %653 = %647.4;
  %654 = %652.2;
  (%653, %654, %var_12330, meta[relay.Constant][40] /* ty=Tensor[(264), uint8] */)
}

def @func_13600() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(1232), float32], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  %655 = @func_8578() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32], Tensor[(6, 3, 4), float32]) */;
  %656 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %657 = cast(meta[relay.Constant][41] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %658 = reshape(%657, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %659 = @func_1823(%658) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %660 = @func_12071() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %661 = %655.1;
  %662 = @func_12268() /* ty=Tensor[(8, 11, 10), bool] */;
  %663 = %656.1;
  %664 = %659.1;
  %665 = @func_9625() /* ty=Tensor[(1848), bool] */;
  %666 = %660.0;
  %667 = @func_8847() /* ty=Tensor[(8, 11, 10), float32] */;
  (%661, %662, %663, %664, meta[relay.Constant][41] /* ty=Tensor[(1232), float32] */, %665, %666, %667)
}

def @func_7991() -> (Tensor[(8, 11, 10), float32], Tensor[(156), float32]) {
  %668 = @func_7157() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %669 = %668.0;
  %670 = cast(%669, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  %671 = exp(%670) /* ty=Tensor[(8, 11, 10), float32] */;
  %672 = @func_3795() /* ty=Tensor[(156), float32] */;
  (%671, %672)
}

def @func_7678() -> (Tensor[(8, 11, 10), float32],) {
  %673 = @func_3283() /* ty=Tensor[(8, 11, 10), float32] */;
  (%673,)
}

def @func_3785() -> Tensor[(8, 11, 10), bool] {
  @func_1584() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_11531(%var_11488: Tensor[(16, 3, 9), bool]) -> (Tensor[(16, 3, 9), bool], Tensor[(8, 11, 10), float32]) {
  %674 = cast(%var_11488, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %675 = shape_of(meta[relay.Constant][42] /* ty=Tensor[(16, 3, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %676 = cast(meta[relay.Constant][42] /* ty=Tensor[(16, 3, 9), bool] */, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
  %677 = dyn.reshape(%674, %675, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %678 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %679 = logical_and(%676, %677) /* ty=Tensor[(16, 3, 9), bool] */;
  %680 = %678.0;
  (%679, %680)
}

def @func_4697() -> (Tensor[(1, 1232), float32],) {
  %681 = @func_4350() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) */;
  %682 = %681.0;
  %683 = cast(%682, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
  %684 = sin(%683) /* ty=Tensor[(1, 1232), float32] */;
  (%684,)
}

def @func_4641() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) {
  %685 = cast(meta[relay.Constant][43] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %686 = reshape(%685, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
  %687 = @func_1309(%686) /* ty=(Tensor[(14, 8, 11), float32],) */;
  %688 = cast(meta[relay.Constant][44] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %689 = reshape(%688, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %690 = @func_1252(%689) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
  %691 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
  %692 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
  %693 = %687.0;
  %694 = %690.5;
  %695 = %691.0;
  (%692, %693, meta[relay.Constant][43] /* ty=Tensor[(1232), float32] */, %694, meta[relay.Constant][44] /* ty=Tensor[(156), float32] */, %695)
}

def @func_583(%var_569: Tensor[(13, 3, 4), int32], %var_570: Tensor[(13, 3, 4), int32]) -> (Tensor[(13, 3, 4), int32],) {
  %696 = cast(%var_570, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %697 = shape_of(%var_569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %698 = cast(%var_569, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %699 = dyn.reshape(%696, %697, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %700 = add(%698, %699) /* ty=Tensor[(13, 3, 4), int32] */;
  (%700,)
}

def @func_8847() -> Tensor[(8, 11, 10), float32] {
  @func_2923() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_3058() -> (Tensor[(8, 11, 10), bool],) {
  %701 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
  %702 = %701.0;
  (%702,)
}

def @func_4848() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) {
  %703 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %704 = @func_2460() /* ty=Tensor[(8, 11, 10), bool] */;
  %705 = %703.4;
  (%704, %705)
}

def @func_7905() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) {
  %706 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %707 = cast(meta[relay.Constant][45] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %708 = reshape(%707, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %709 = @func_1823(%708) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %710 = %706.0;
  %711 = %709.4;
  (%710, %711, meta[relay.Constant][45] /* ty=Tensor[(1232), float32] */)
}

def @func_6173() -> (Tensor[(8, 11, 10), float64],) {
  %712 = @func_2414() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %713 = %712.0;
  (%713,)
}

def @func_5398(%var_5298: Tensor[(9, 7, 12), float32], %var_5377: Tensor[(429), float32]) -> (Tensor[(8, 11, 10), float32], Tensor[(1232), float32], Tensor[(9, 7, 12), uint16], Tensor[(9, 7, 12), float32], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(8, 11, 10), bool]) {
  %714 = @func_4046() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */;
  %715 = cast(%var_5298, dtype="float32") /* ty=Tensor[(9, 7, 12), float32] */;
  %716 = asinh(%715) /* ty=Tensor[(9, 7, 12), float32] */;
  %717 = cast(%var_5298, dtype="float64") /* ty=Tensor[(9, 7, 12), float64] */;
  %718 = exp(%717) /* ty=Tensor[(9, 7, 12), float64] */;
  %719 = cast(%718, dtype="uint16") /* ty=Tensor[(9, 7, 12), uint16] */;
  %720 = shape_of(%716, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%716, dtype="uint16") /* ty=Tensor[(9, 7, 12), uint16] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %723 = cast(%var_5298, dtype="float32") /* ty=Tensor[(9, 7, 12), float32] */;
  %724 = sinh(%723) /* ty=Tensor[(9, 7, 12), float32] */;
  %725 = cast(%724, dtype="float64") /* ty=Tensor[(9, 7, 12), float64] */;
  %726 = log2(%725) /* ty=Tensor[(9, 7, 12), float64] */;
  %727 = cast(%726, dtype="float32") /* ty=Tensor[(9, 7, 12), float32] */;
  %728 = cast(-1.05087f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %729 = cast(meta[relay.Constant][46] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %730 = reshape(%728, newshape=[]) /* ty=float32 */;
  %731 = reshape(%729, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %732 = @func_749(%730, %731) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %733 = cast(%var_5377, dtype="float32") /* ty=Tensor[(429), float32] */;
  %734 = reshape(%733, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
  %735 = @func_4480(%734) /* ty=(Tensor[(13, 11, 3), float32],) */;
  %736 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %737 = @func_2923() /* ty=Tensor[(8, 11, 10), float32] */;
  %738 = %714.4;
  %739 = minimum(%721, %722) /* ty=Tensor[(9, 7, 12), uint16] */;
  %740 = atanh(%727) /* ty=Tensor[(9, 7, 12), float32] */;
  %741 = %732.2;
  %742 = %735.0;
  %743 = %736.0;
  (%737, %738, %739, %740, %741, -1.05087f /* ty=float32 */, meta[relay.Constant][46] /* ty=Tensor[(2880), float32] */, %742, %var_5377, %743)
}

def @func_7652() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %744 = @func_5610() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(13, 3, 4), int32], Tensor[(156), int32]) */;
  %745 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %746 = %744.1;
  %747 = %745.0;
  (%746, %747)
}

def @func_3901() -> (Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) {
  %748 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %749 = cast(meta[relay.Constant][47] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %750 = reshape(%749, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
  %751 = @func_2749(%750) /* ty=(Tensor[(1848), int64],) */;
  %752 = cast(meta[relay.Constant][48] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %753 = reshape(%752, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %754 = @func_1823(%753) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %755 = %748.0;
  %756 = %751.0;
  %757 = @func_3768() /* ty=Tensor[(8, 11, 10), bool] */;
  %758 = %754.2;
  (%755, %756, meta[relay.Constant][47] /* ty=Tensor[(1848), bool] */, %757, %758, meta[relay.Constant][48] /* ty=Tensor[(1232), float32] */)
}

def @func_8862() -> (Tensor[(8, 11, 10), float32],) {
  %759 = @func_7808() /* ty=Tensor[(8, 11, 10), float32] */;
  (%759,)
}

def @func_1584() -> Tensor[(8, 11, 10), bool] {
  @func_1121() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_11011(%var_10975: Tensor[(12, 1, 6), float64], %var_10976: Tensor[(12, 11, 6), float64]) -> Tensor[(12, 11, 6), bool] {
  %760 = cast(%var_10975, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
  %761 = cast(%var_10976, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %762 = less(%760, %761) /* ty=Tensor[(12, 11, 6), bool] */;
  %763 = cast(%var_10976, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %764 = shape_of(%762, dtype="int32") /* ty=Tensor[(3), int32] */;
  %765 = cast(%762, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %766 = dyn.reshape(%763, %764, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%765, %766) /* ty=Tensor[(12, 11, 6), bool] */
}

def @func_12297() -> Tensor[(8, 11, 10), bool] {
  %767 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %767.0
}

def @func_2132() -> Tensor[(8, 11, 10), bool] {
  %768 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %768.0
}

def @func_12446() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %769 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %770 = @func_9714() /* ty=(Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) */;
  %771 = %769.0;
  %772 = %770.1;
  (%771, %772)
}

def @func_11151() -> (Tensor[(1848), bool], Tensor[(1848), int64]) {
  %773 = @func_9625() /* ty=Tensor[(1848), bool] */;
  %774 = cast(%773, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %775 = reshape(%774, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
  %776 = @func_2749(%775) /* ty=(Tensor[(1848), int64],) */;
  %777 = %776.0;
  (%773, %777)
}

def @func_12484() -> Tensor[(8, 11, 10), bool] {
  @func_12268() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_6752() -> Tensor[(8, 11, 10), float32] {
  @func_3283() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_12457() -> (Tensor[(8, 11, 10), float32],) {
  %778 = @func_8648() /* ty=Tensor[(8, 11, 10), float32] */;
  (%778,)
}

def @func_6545(%var_6508: Tensor[(1183), bool]) -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(1183), bool], Tensor[(10, 9, 12), int64], Tensor[(270, 4), int64], Tensor[(8, 11, 10), uint32]) {
  %779 = cast(%var_6508, dtype="bool") /* ty=Tensor[(1183), bool] */;
  %780 = cast(%var_6508, dtype="bool") /* ty=Tensor[(1183), bool] */;
  %781 = reshape(%779, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
  %782 = reshape(%780, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
  %783 = @func_5000(%781, %782) /* ty=(Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) */;
  %784 = cast(meta[relay.Constant][49] /* ty=Tensor[(270, 4), int64] */, dtype="int64") /* ty=Tensor[(270, 4), int64] */;
  %785 = reshape(%784, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), int64] */;
  %786 = @func_6060(%785) /* ty=(Tensor[(10, 9, 12), int64],) */;
  %787 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %788 = %783.1;
  %789 = %786.0;
  %790 = @func_5108() /* ty=Tensor[(8, 11, 10), uint32] */;
  (%787, %788, %var_6508, %789, meta[relay.Constant][49] /* ty=Tensor[(270, 4), int64] */, %790)
}

def @func_9655() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %791 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  %792 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  (%791, %792)
}

def @func_2065() -> (Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %793 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %794 = cast(%793, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %795 = cast(meta[relay.Constant][50] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
  %796 = reshape(%795, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
  %797 = @func_1252(%796) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
  %798 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %799 = rsqrt(%794) /* ty=Tensor[(8, 11, 10), float64] */;
  %800 = %797.6;
  %801 = %798.0;
  %802 = @func_1693() /* ty=Tensor[(8, 11, 10), bool] */;
  (%799, %800, meta[relay.Constant][50] /* ty=Tensor[(156), float32] */, %801, %802)
}

def @func_13875() -> (Tensor[(8, 11, 10), bool],) {
  %803 = @func_8352() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %804 = %803.0;
  (%804,)
}

def @func_13087() -> (Tensor[(1, 1232), float32], Tensor[(60, 36), bool], Tensor[(2160), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1183), bool], Tensor[(1183), bool]) {
  %805 = @func_4350() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) */;
  %806 = cast(meta[relay.Constant][51] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %807 = reshape(%806, newshape=[60, 36]) /* ty=Tensor[(60, 36), int64] */;
  %808 = @func_7038(%807) /* ty=(Tensor[(14, 8, 11), float32], Tensor[(60, 36), bool], Tensor[(8, 11, 10), bool]) */;
  %809 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %810 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %811 = cast(meta[relay.Constant][52] /* ty=Tensor[(1183), bool] */, dtype="bool") /* ty=Tensor[(1183), bool] */;
  %812 = reshape(%811, newshape=[1183]) /* ty=Tensor[(1183), bool] */;
  %813 = @func_6545(%812) /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(1183), bool], Tensor[(10, 9, 12), int64], Tensor[(270, 4), int64], Tensor[(8, 11, 10), uint32]) */;
  %814 = %805.0;
  %815 = %808.1;
  %816 = %809.1;
  %817 = %810.0;
  %818 = %813.2;
  (%814, %815, meta[relay.Constant][51] /* ty=Tensor[(2160), int64] */, %816, %817, %818, meta[relay.Constant][52] /* ty=Tensor[(1183), bool] */)
}

def @func_8222(%var_8206: int8, %var_8207: Tensor[(195), int8]) -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], int8, Tensor[(195), int8], Tensor[(390), int8]) {
  %819 = cast(%var_8206, dtype="int8") /* ty=int8 */;
  %820 = cast(%var_8207, dtype="int8") /* ty=Tensor[(195), int8] */;
  %821 = cast(meta[relay.Constant][53] /* ty=Tensor[(390), int8] */, dtype="int8") /* ty=Tensor[(390), int8] */;
  %822 = reshape(%819, newshape=[]) /* ty=int8 */;
  %823 = reshape(%820, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), int8] */;
  %824 = reshape(%821, newshape=[13, 2, 15]) /* ty=Tensor[(13, 2, 15), int8] */;
  %825 = @func_4232(%822, %823, %824) /* ty=(Tensor[(13, 1, 15), int8], Tensor[(13, 2, 15), bool], Tensor[(8, 11, 10), bool]) */;
  %826 = @func_3283() /* ty=Tensor[(8, 11, 10), float32] */;
  %827 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
  %828 = %825.2;
  (%826, %827, %828, %var_8206, %var_8207, meta[relay.Constant][53] /* ty=Tensor[(390), int8] */)
}

def @func_10370() -> Tensor[(14, 8, 11), float32] {
  %829 = @func_4848() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) */;
  %829.1
}

def @func_14159(%var_14157: Tensor[(13, 91), bool]) -> (Tensor[(156), float32], Tensor[(15, 16, 4), float64], Tensor[(13, 91), bool]) {
  %830 = @func_7991() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(156), float32]) */;
  %831 = cast(%var_14157, dtype="bool") /* ty=Tensor[(13, 91), bool] */;
  %832 = cast(%var_14157, dtype="bool") /* ty=Tensor[(13, 91), bool] */;
  %833 = reshape(%831, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
  %834 = reshape(%832, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
  %835 = @func_5000(%833, %834) /* ty=(Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) */;
  %836 = %830.1;
  %837 = %835.5;
  (%836, %837, %var_14157)
}

def @func_4232(%var_4204: int8, %var_4205: Tensor[(13, 1, 15), int8], %var_4212: Tensor[(13, 2, 15), int8]) -> (Tensor[(13, 1, 15), int8], Tensor[(13, 2, 15), bool], Tensor[(8, 11, 10), bool]) {
  %838 = cast(%var_4204, dtype="int8") /* ty=int8 */;
  %839 = cast(%var_4205, dtype="int8") /* ty=Tensor[(13, 1, 15), int8] */;
  %840 = cast(%var_4205, dtype="bool") /* ty=Tensor[(13, 1, 15), bool] */;
  %841 = cast(%var_4212, dtype="bool") /* ty=Tensor[(13, 2, 15), bool] */;
  %842 = @func_3301() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %843 = right_shift(%838, %839) /* ty=Tensor[(13, 1, 15), int8] */;
  %844 = logical_and(%840, %841) /* ty=Tensor[(13, 2, 15), bool] */;
  %845 = %842.0;
  (%843, %844, %845)
}

def @func_6396() -> (Tensor[(8, 11, 10), bool], Tensor[(7, 10, 15), int64]) {
  %846 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
  %847 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 15), float32] */;
  %848 = sinh(%847) /* ty=Tensor[(7, 10, 15), float32] */;
  %849 = cast(meta[relay.Constant][54] /* ty=Tensor[(7, 10, 15), float32] */, dtype="int64") /* ty=Tensor[(7, 10, 15), int64] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(3), int32] */;
  %851 = cast(%848, dtype="int64") /* ty=Tensor[(7, 10, 15), int64] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %853 = %846.2;
  %854 = bitwise_or(%851, %852) /* ty=Tensor[(7, 10, 15), int64] */;
  (%853, %854)
}

def @func_5610() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(13, 3, 4), int32], Tensor[(156), int32]) {
  %855 = @func_4848() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) */;
  %856 = cast(meta[relay.Constant][55] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %857 = cast(meta[relay.Constant][55] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %858 = reshape(%856, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %859 = reshape(%857, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %860 = @func_583(%858, %859) /* ty=(Tensor[(13, 3, 4), int32],) */;
  %861 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  %862 = %855.0;
  %863 = %860.0;
  (%861, %862, %863, meta[relay.Constant][55] /* ty=Tensor[(156), int32] */)
}

def @func_4102(%var_4094: Tensor[(8, 11, 10), float32]) -> (Tensor[(8, 11, 10), bool],) {
  %864 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %865 = %864.0;
  %866 = cast(%var_4094, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %867 = shape_of(%865, dtype="int32") /* ty=Tensor[(3), int32] */;
  %868 = cast(%865, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %869 = dyn.reshape(%866, %867, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %870 = less(%868, %869) /* ty=Tensor[(8, 11, 10), bool] */;
  (%870,)
}

def @func_1309(%var_1294: Tensor[(14, 8, 11), float32]) -> (Tensor[(14, 8, 11), float32],) {
  %871 = cast(%var_1294, dtype="float32") /* ty=Tensor[(14, 8, 11), float32] */;
  %872 = asin(%871) /* ty=Tensor[(14, 8, 11), float32] */;
  (%872,)
}

def @func_9625() -> Tensor[(1848), bool] {
  %873 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
  %873.2
}

def @func_1823(%var_1810: Tensor[(1232), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) {
  %874 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %875 = %874.0;
  %876 = cast(%875, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %877 = cast(%var_1810, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %878 = reshape(%877, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
  %879 = @func_1309(%878) /* ty=(Tensor[(14, 8, 11), float32],) */;
  %880 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %881 = atanh(%876) /* ty=Tensor[(8, 11, 10), float64] */;
  %882 = %879.0;
  %883 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  (%880, %881, %882, %var_1810, %883)
}

def @func_13486() -> Tensor[(8, 11, 10), bool] {
  %884 = @func_6948() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %884.1
}

def @func_5763() -> (Tensor[(8, 11, 10), bool],) {
  %885 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %886 = %885.0;
  (%886,)
}

def @func_8152() -> (Tensor[(3, 12, 10), float64],) {
  %887 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %888 = cosh(%887) /* ty=Tensor[(3, 12, 10), float64] */;
  (%888,)
}

def @func_6878() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(210), float64]) {
  %889 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %890 = @func_5763() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %891 = %889.0;
  %892 = %890.0;
  %893 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %894 = @func_3400() /* ty=Tensor[(210), float64] */;
  (%891, %892, %893, %894)
}

def @func_3163() -> (Tensor[(8, 11, 10), bool],) {
  %895 = @func_1693() /* ty=Tensor[(8, 11, 10), bool] */;
  (%895,)
}

def @func_6919() -> Tensor[(15, 16, 4), float64] {
  %896 = @func_3493() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %896.0
}

def @func_3992() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %897 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %898 = %897.0;
  %899 = @func_2339() /* ty=Tensor[(8, 11, 10), bool] */;
  (%898, %899)
}

def @func_9536() -> Tensor[(8, 11, 10), bool] {
  %900 = @func_8696() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %900.0
}

def @func_5742() -> (Tensor[(1232), float32], Tensor[(8, 11, 10), bool], Tensor[(880), float32]) {
  %901 = @func_4046() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */;
  %902 = cast(meta[relay.Constant][57] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
  %903 = reshape(%902, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), float32] */;
  %904 = @func_4102(%903) /* ty=(Tensor[(8, 11, 10), bool],) */;
  %905 = %901.4;
  %906 = %904.0;
  (%905, %906, meta[relay.Constant][57] /* ty=Tensor[(880), float32] */)
}

def @func_11815() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %907 = @func_6245() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %908 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %909 = %907.0;
  %910 = %908.0;
  (%909, %910)
}

def @func_10037(%var_9970: uint64, %var_10021: Tensor[(195), float64]) -> (Tensor[(14, 12, 6), bool], Tensor[(4, 1, 3), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(195), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %911 = cast(%var_9970, dtype="bool") /* ty=bool */;
  %912 = cast(meta[relay.Constant][58] /* ty=Tensor[(14, 12, 6), uint64] */, dtype="bool") /* ty=Tensor[(14, 12, 6), bool] */;
  %913 = cast(%var_9970, dtype="float64") /* ty=float64 */;
  %914 = cast(meta[relay.Constant][59] /* ty=Tensor[(4, 1, 3), uint64] */, dtype="float64") /* ty=Tensor[(4, 1, 3), float64] */;
  %915 = divide(%913, %914) /* ty=Tensor[(4, 1, 3), float64] */;
  %916 = cast(%915, dtype="float64") /* ty=Tensor[(4, 1, 3), float64] */;
  %917 = cast(%var_10021, dtype="float64") /* ty=Tensor[(195), float64] */;
  %918 = reshape(%917, newshape=[13, 5, 3]) /* ty=Tensor[(13, 5, 3), float64] */;
  %919 = @func_5521(%918) /* ty=(Tensor[(13, 5, 3), bool], Tensor[(8, 11, 10), bool]) */;
  %920 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %921 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %922 = not_equal(%911, %912) /* ty=Tensor[(14, 12, 6), bool] */;
  %923 = log2(%916) /* ty=Tensor[(4, 1, 3), float64] */;
  %924 = @func_9536() /* ty=Tensor[(8, 11, 10), bool] */;
  %925 = %919.1;
  %926 = %920.0;
  %927 = %921.0;
  (%922, %923, %924, %925, %var_10021, %926, %927)
}

def @func_7250() -> (Tensor[(8, 11, 10), bool],) {
  %928 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
  (%928,)
}

def @func_3342() -> Tensor[(8, 11, 10), float64] {
  %929 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %930 = cast(%929, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  cosh(%930) /* ty=Tensor[(8, 11, 10), float64] */
}

def @func_10343() -> Tensor[(8, 11, 10), float64] {
  %931 = @func_6173() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %931.0
}

def @func_11899() -> (Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) {
  %932 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %933 = @func_8246() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), float32]) */;
  %934 = %932.0;
  %935 = %933.1;
  (%934, %935)
}

def @func_12469() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %936 = @func_11764() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %937 = %936.2;
  %938 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  (%937, %938)
}

def @func_11764() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %939 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %940 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %941 = @func_8768() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %942 = @func_11110() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %943 = %939.0;
  %944 = %940.0;
  %945 = %941.0;
  %946 = %942.0;
  (%943, %944, %945, %946)
}

def @func_8246() -> (Tensor[(1, 1232), float32], Tensor[(8, 11, 10), float32]) {
  %947 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
  %948 = @func_6752() /* ty=Tensor[(8, 11, 10), float32] */;
  (%947, %948)
}

def @func_13452() -> Tensor[(1, 1232), float32] {
  %949 = @func_4697() /* ty=(Tensor[(1, 1232), float32],) */;
  %950 = %949.0;
  %951 = cast(%950, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
  sigmoid(%951) /* ty=Tensor[(1, 1232), float32] */
}

def @func_13763(%var_13727: Tensor[(429), float32]) -> (Tensor[(8, 11, 10), float64], Tensor[(429), bool], Tensor[(13, 11, 3), int32]) {
  %952 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %953 = cast(%var_13727, dtype="float32") /* ty=Tensor[(429), float32] */;
  %954 = reshape(%953, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
  %955 = @func_4480(%954) /* ty=(Tensor[(13, 11, 3), float32],) */;
  %956 = %955.0;
  %957 = cast(%956, dtype="bool") /* ty=Tensor[(13, 11, 3), bool] */;
  %958 = shape_of(%var_13727, dtype="int32") /* ty=Tensor[(1), int32] */;
  %959 = cast(%var_13727, dtype="bool") /* ty=Tensor[(429), bool] */;
  %960 = dyn.reshape(%957, %958, newshape=[]) /* ty=Tensor[(?), bool] */;
  %961 = cast(%var_13727, dtype="int32") /* ty=Tensor[(429), int32] */;
  %962 = shape_of(%956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %963 = cast(%956, dtype="int32") /* ty=Tensor[(13, 11, 3), int32] */;
  %964 = dyn.reshape(%961, %962, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %965 = %952.0;
  %966 = logical_and(%959, %960) /* ty=Tensor[(429), bool] */;
  %967 = add(%963, %964) /* ty=Tensor[(13, 11, 3), int32] */;
  (%965, %966, %967)
}

def @func_7950(%var_7939: Tensor[(4, 15, 16), bool], %var_7940: Tensor[(4, 15, 16), bool]) -> (Tensor[(4, 15, 16), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %968 = cast(%var_7940, dtype="bool") /* ty=Tensor[(4, 15, 16), bool] */;
  %969 = shape_of(%var_7939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %970 = cast(%var_7939, dtype="bool") /* ty=Tensor[(4, 15, 16), bool] */;
  %971 = dyn.reshape(%968, %969, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %972 = @func_6245() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %973 = logical_and(%970, %971) /* ty=Tensor[(4, 15, 16), bool] */;
  %974 = %972.0;
  %975 = @func_4801() /* ty=Tensor[(8, 11, 10), bool] */;
  (%973, %974, %975)
}

def @func_6351() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %976 = @func_3785() /* ty=Tensor[(8, 11, 10), bool] */;
  %977 = @func_2132() /* ty=Tensor[(8, 11, 10), bool] */;
  (%976, %977)
}

def @func_11591() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %978 = @func_11482() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %979 = @func_4046() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */;
  %980 = %978.0;
  %981 = %979.2;
  (%980, %981)
}

def @func_12040(%var_12014: Tensor[(1, 6, 4), uint8], %var_12015: Tensor[(11, 6, 4), uint8]) -> (Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) {
  %982 = cast(%var_12014, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %983 = cast(%var_12015, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
  %984 = @func_8152() /* ty=(Tensor[(3, 12, 10), float64],) */;
  %985 = cast(%var_12014, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
  %986 = cast(meta[relay.Constant][60] /* ty=Tensor[(3, 6, 4), uint8] */, dtype="bool") /* ty=Tensor[(3, 6, 4), bool] */;
  %987 = less(%982, %983) /* ty=Tensor[(11, 6, 4), bool] */;
  %988 = %984.0;
  %989 = less_equal(%985, %986) /* ty=Tensor[(3, 6, 4), bool] */;
  (%987, %988, %989)
}

def @func_1351() -> (Tensor[(8, 11, 10), bool],) {
  %990 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  (%990,)
}

def @func_10591(%var_10586: Tensor[(10, 13, 7), float32]) -> (Tensor[(10, 13, 7), float32],) {
  %991 = cast(%var_10586, dtype="float32") /* ty=Tensor[(10, 13, 7), float32] */;
  %992 = acosh(%991) /* ty=Tensor[(10, 13, 7), float32] */;
  (%992,)
}

def @func_11343() -> (Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %993 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %994 = @func_10682() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %995 = @func_8862() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %996 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %997 = %993.1;
  %998 = %994.0;
  %999 = %995.0;
  %1000 = %996.0;
  %1001 = @func_8056() /* ty=Tensor[(8, 11, 10), bool] */;
  (%997, %998, %999, %1000, %1001)
}

def @func_3795() -> Tensor[(156), float32] {
  %1002 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1002.2
}

def @func_3866(%var_3839: Tensor[(1232), float32]) -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) {
  %1003 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %1004 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1005 = cast(%var_3839, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %1006 = reshape(%1005, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %1007 = @func_1823(%1006) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %1008 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1009 = %1003.0;
  %1010 = %1004.0;
  %1011 = @func_3400() /* ty=Tensor[(210), float64] */;
  %1012 = %1007.0;
  %1013 = %1008.2;
  (%1009, %1010, %1011, %1012, %var_3839, %1013)
}

def @func_6480() -> (Tensor[(8, 11, 10), bool],) {
  %1014 = @func_6351() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1015 = %1014.1;
  (%1015,)
}

def @func_7198(%var_7173: Tensor[(8, 16, 2), uint64], %var_7174: Tensor[(8, 16, 2), uint64]) -> (Tensor[(8, 16, 2), uint64], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 16, 2), float32]) {
  %1016 = cast(%var_7174, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
  %1017 = shape_of(%var_7173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1018 = cast(%var_7173, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
  %1019 = dyn.reshape(%1016, %1017, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1020 = @func_4641() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) */;
  %1021 = cast(%var_7173, dtype="float32") /* ty=Tensor[(8, 16, 2), float32] */;
  %1022 = multiply(%1018, %1019) /* ty=Tensor[(8, 16, 2), uint64] */;
  %1023 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %1024 = %1020.1;
  %1025 = asinh(%1021) /* ty=Tensor[(8, 16, 2), float32] */;
  (%1022, %1023, %1024, %1025)
}

def @func_2678() -> (Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) {
  %1026 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1027 = cast(meta[relay.Constant][61] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %1028 = %1026.2;
  %1029 = cast(%1028, dtype="int32") /* ty=Tensor[(156), int32] */;
  %1030 = reshape(%1027, newshape=[6, 308]) /* ty=Tensor[(6, 308), bool] */;
  %1031 = reshape(%1029, newshape=[156]) /* ty=Tensor[(156), int32] */;
  %1032 = @func_1281(%1030, %1031) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) */;
  %1033 = %1032.5;
  (%1028, %1033, meta[relay.Constant][61] /* ty=Tensor[(1848), bool] */)
}

def @func_9350(%var_9336: Tensor[(1848), int16]) -> (Tensor[(8, 11, 10), bool], Tensor[(1848), bool]) {
  %1034 = @func_7444() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), int32], Tensor[(1848), float64], Tensor[(1848), int16], Tensor[(1848), uint16]) */;
  %1035 = %1034.4;
  %1036 = cast(%var_9336, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %1037 = shape_of(%1035, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1038 = cast(%1035, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %1039 = dyn.reshape(%1036, %1037, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1040 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  %1041 = greater(%1038, %1039) /* ty=Tensor[(1848), bool] */;
  (%1040, %1041)
}

def @func_11550() -> (Tensor[(156), float32], Tensor[(15, 16, 4), float64]) {
  %1042 = @func_5861() /* ty=(Tensor[(156), float32], Tensor[(8, 11, 10), bool]) */;
  %1043 = @func_11343() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1044 = %1042.0;
  %1045 = %1043.1;
  (%1044, %1045)
}

def @func_12780() -> Tensor[(15, 16, 4), float64] {
  %1046 = @func_10913() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(15, 16, 4), float64]) */;
  %1046.1
}

def @func_2321() -> Tensor[(8, 11, 10), bool] {
  @func_1693() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_2414() -> (Tensor[(8, 11, 10), float64],) {
  %1047 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1048 = %1047.0;
  %1049 = cast(%1048, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %1050 = sin(%1049) /* ty=Tensor[(8, 11, 10), float64] */;
  (%1050,)
}

def @func_7587() -> (Tensor[(8, 11, 10), bool],) {
  %1051 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  (%1051,)
}

def @func_3026() -> (Tensor[(8, 11, 10), float32],) {
  %1052 = @func_2923() /* ty=Tensor[(8, 11, 10), float32] */;
  (%1052,)
}

def @func_6488() -> (Tensor[(8, 11, 10), float32],) {
  %1053 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %1054 = %1053.0;
  (%1054,)
}

def @func_6017(%var_6005: Tensor[(8, 7, 4), float64]) -> (Tensor[(8, 7, 4), float64], Tensor[(8, 11, 10), bool]) {
  %1055 = cast(meta[relay.Constant][62] /* ty=Tensor[(8, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %1056 = shape_of(%var_6005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(%var_6005, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1059 = @func_3301() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1060 = mod(%1057, %1058) /* ty=Tensor[(8, 7, 4), float64] */;
  %1061 = %1059.0;
  (%1060, %1061)
}

def @func_2628() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) {
  %1062 = cast(meta[relay.Constant][63] /* ty=Tensor[(15, 16, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 16, 4), float64] */;
  %1063 = cast(meta[relay.Constant][64] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %1064 = reshape(%1063, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), bool] */;
  %1065 = @func_1211(%1064) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */;
  %1066 = log10(%1062) /* ty=Tensor[(15, 16, 4), float64] */;
  %1067 = %1065.1;
  (%1066, %1067, meta[relay.Constant][64] /* ty=Tensor[(880), bool] */)
}

def @func_5861() -> (Tensor[(156), float32], Tensor[(8, 11, 10), bool]) {
  %1068 = @func_3795() /* ty=Tensor[(156), float32] */;
  %1069 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  (%1068, %1069)
}

def @func_7038(%var_7022: Tensor[(60, 36), int64]) -> (Tensor[(14, 8, 11), float32], Tensor[(60, 36), bool], Tensor[(8, 11, 10), bool]) {
  %1070 = @func_4641() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) */;
  %1071 = @func_4350() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) */;
  %1072 = %1071.3;
  %1073 = cast(%var_7022, dtype="bool") /* ty=Tensor[(60, 36), bool] */;
  %1074 = shape_of(%1072, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1075 = cast(%1072, dtype="bool") /* ty=Tensor[(60, 36), bool] */;
  %1076 = dyn.reshape(%1073, %1074, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1077 = %1070.1;
  %1078 = less(%1075, %1076) /* ty=Tensor[(60, 36), bool] */;
  %1079 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  (%1077, %1078, %1079)
}

def @func_2923() -> Tensor[(8, 11, 10), float32] {
  %1080 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1081 = %1080.0;
  %1082 = cast(%1081, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  asin(%1082) /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_2979(%var_2973: Tensor[(1848), bool], %var_2974: float32) -> (Tensor[(880), bool], Tensor[(210), float64], Tensor[(1848), bool], float32, Tensor[(2880), float32], Tensor[(5, 42), float64], Tensor[(156), int32]) {
  %1083 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %1084 = cast(%var_2973, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %1085 = cast(%var_2973, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %1086 = cast(%var_2974, dtype="float32") /* ty=float32 */;
  %1087 = cast(meta[relay.Constant][65] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %1088 = cast(meta[relay.Constant][66] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %1089 = cast(meta[relay.Constant][67] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %1090 = reshape(%1084, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
  %1091 = reshape(%1085, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
  %1092 = reshape(%1086, newshape=[]) /* ty=float32 */;
  %1093 = reshape(%1087, newshape=[1, 2880]) /* ty=Tensor[(1, 2880), float32] */;
  %1094 = reshape(%1088, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1095 = reshape(%1089, newshape=[156]) /* ty=Tensor[(156), int32] */;
  %1096 = @func_1057(%1090, %1091, %1092, %1093, %1094, %1095) /* ty=(Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) */;
  %1097 = %1083.2;
  %1098 = %1096.7;
  (%1097, %1098, %var_2973, %var_2974, meta[relay.Constant][65] /* ty=Tensor[(2880), float32] */, meta[relay.Constant][66] /* ty=Tensor[(5, 42), float64] */, meta[relay.Constant][67] /* ty=Tensor[(156), int32] */)
}

def @func_7157() -> (Tensor[(8, 11, 10), bool],) {
  %1099 = @func_3163() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1100 = %1099.0;
  (%1100,)
}

def @func_2749(%var_2744: Tensor[(1848), bool]) -> (Tensor[(1848), int64],) {
  %1101 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
  %1102 = %1101.2;
  %1103 = cast(%var_2744, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %1104 = shape_of(%1102, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1105 = cast(%1102, dtype="int64") /* ty=Tensor[(1848), int64] */;
  %1106 = dyn.reshape(%1103, %1104, newshape=[]) /* ty=Tensor[(?), int64] */;
  %1107 = add(%1105, %1106) /* ty=Tensor[(1848), int64] */;
  (%1107,)
}

def @func_5108() -> Tensor[(8, 11, 10), uint32] {
  %1108 = @func_3116() /* ty=(Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) */;
  %1108.0
}

def @func_8056() -> Tensor[(8, 11, 10), bool] {
  %1109 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1109.1
}

def @func_9401() -> Tensor[(8, 11, 10), bool] {
  %1110 = @func_3301() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1110.0
}

def @func_6304() -> Tensor[(8, 11, 10), bool] {
  %1111 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %1111.2
}

def @func_1281(%var_1271: Tensor[(6, 308), bool], %var_1275: Tensor[(156), int32]) -> (Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) {
  %1112 = cast(%var_1271, dtype="bool") /* ty=Tensor[(6, 308), bool] */;
  %1113 = cast(%var_1271, dtype="bool") /* ty=Tensor[(6, 308), bool] */;
  %1114 = cast(4.35489f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1115 = cast(meta[relay.Constant][68] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %1116 = cast(meta[relay.Constant][69] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1117 = cast(%var_1275, dtype="int32") /* ty=Tensor[(156), int32] */;
  %1118 = reshape(%1112, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
  %1119 = reshape(%1113, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
  %1120 = reshape(%1114, newshape=[]) /* ty=float32 */;
  %1121 = reshape(%1115, newshape=[1, 2880]) /* ty=Tensor[(1, 2880), float32] */;
  %1122 = reshape(%1116, newshape=[210]) /* ty=Tensor[(210), float64] */;
  %1123 = reshape(%1117, newshape=[156]) /* ty=Tensor[(156), int32] */;
  %1124 = @func_1057(%1118, %1119, %1120, %1121, %1122, %1123) /* ty=(Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) */;
  %1125 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %1126 = %1124.4;
  (%1125, %1126, %var_1271, 4.35489f /* ty=float32 */, meta[relay.Constant][68] /* ty=Tensor[(2880), float32] */, meta[relay.Constant][69] /* ty=Tensor[(210), float64] */, %var_1275)
}

def @func_10174() -> Tensor[(8, 11, 10), bool] {
  @func_3710() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_10913() -> (Tensor[(8, 11, 10), float64], Tensor[(15, 16, 4), float64]) {
  %1127 = @func_2414() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %1128 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %1129 = %1127.0;
  %1130 = %1128.0;
  (%1129, %1130)
}

def @func_12237() -> (Tensor[(15, 16, 4), float64], Tensor[(1848), bool], Tensor[(2, 13, ?), float64], Tensor[(13, 2), float64]) {
  %1131 = @func_10682() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %1132 = cast(meta[relay.Constant][70] /* ty=Tensor[(13, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
  %1133 = cast(meta[relay.Constant][70] /* ty=Tensor[(13, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
  %1134 = reshape(%1132, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
  %1135 = reshape(%1133, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
  %1136 = @func_2512(%1134, %1135) /* ty=(Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) */;
  %1137 = %1131.0;
  %1138 = @func_9625() /* ty=Tensor[(1848), bool] */;
  %1139 = %1136.0;
  (%1137, %1138, %1139, meta[relay.Constant][70] /* ty=Tensor[(13, 2), float64] */)
}

def @func_6245() -> (Tensor[(8, 11, 10), bool],) {
  %1140 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  (%1140,)
}

def @func_8942() -> Tensor[(8, 11, 10), float64] {
  @func_8381() /* ty=Tensor[(8, 11, 10), float64] */
}

def @func_749(%var_734: float32, %var_735: Tensor[(12, 16, 15), float32]) -> (Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  %1141 = cast(%var_734, dtype="bool") /* ty=bool */;
  %1142 = cast(%var_735, dtype="bool") /* ty=Tensor[(12, 16, 15), bool] */;
  %1143 = cast(meta[relay.Constant][71] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1144 = cast(meta[relay.Constant][71] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %1145 = reshape(%1143, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %1146 = reshape(%1144, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %1147 = less_equal(%1141, %1142) /* ty=Tensor[(12, 16, 15), bool] */;
  %1148 = @func_372(%1145, %1146) /* ty=Tensor[(6, 3, 4), float32] */;
  (%1147, %1148, meta[relay.Constant][71] /* ty=Tensor[(72), float32] */)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6136() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) {
  %0 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(1232, 1), float32] */, dtype="float32") /* ty=Tensor[(1232, 1), float32] */;
  %2 = reshape(%1, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %3 = @func_1823(%2) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %4 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  %5 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  %6 = %0.1;
  %7 = %3.1;
  %8 = @func_2712() /* ty=Tensor[(8, 11, 10), bool] */;
  (%4, %5, %6, %7, meta[relay.Constant][0] /* ty=Tensor[(1232, 1), float32] */, %8)
}

def @func_3787() -> Tensor[(8, 11, 10), bool] {
  @func_3785() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4236(%var_4233: int8, %var_4234: Tensor[(13, 1, 15), int8], %var_4235: Tensor[(13, 2, 15), int8]) -> (Tensor[(13, 1, 15), int8], Tensor[(13, 2, 15), bool], Tensor[(8, 11, 10), bool]) {
  %17 = fn (%var_4204: int8, %var_4205: Tensor[(13, 1, 15), int8], %var_4212: Tensor[(13, 2, 15), int8]) -> (Tensor[(13, 1, 15), int8], Tensor[(13, 2, 15), bool], Tensor[(8, 11, 10), bool]) {
    %9 = cast(%var_4204, dtype="int8") /* ty=int8 */;
    %10 = cast(%var_4205, dtype="int8") /* ty=Tensor[(13, 1, 15), int8] */;
    %11 = cast(%var_4205, dtype="bool") /* ty=Tensor[(13, 1, 15), bool] */;
    %12 = cast(%var_4212, dtype="bool") /* ty=Tensor[(13, 2, 15), bool] */;
    %13 = @func_3301() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %14 = right_shift(%9, %10) /* ty=Tensor[(13, 1, 15), int8] */;
    %15 = logical_and(%11, %12) /* ty=Tensor[(13, 2, 15), bool] */;
    %16 = %13.0;
    (%14, %15, %16)
  };
  %17(%var_4233, %var_4234, %var_4235) /* ty=(Tensor[(13, 1, 15), int8], Tensor[(13, 2, 15), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_9142(%var_9140: Tensor[(2160), int64]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), uint8], Tensor[(8, 11, 10), bool]) {
  @func_9139(%var_9140) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), uint8], Tensor[(8, 11, 10), bool]) */
}

def @func_7950(%var_7939: Tensor[(4, 15, 16), bool], %var_7940: Tensor[(4, 15, 16), bool]) -> (Tensor[(4, 15, 16), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %18 = cast(%var_7940, dtype="bool") /* ty=Tensor[(4, 15, 16), bool] */;
  %19 = shape_of(%var_7939, dtype="int32") /* ty=Tensor[(3), int32] */;
  %20 = cast(%var_7939, dtype="bool") /* ty=Tensor[(4, 15, 16), bool] */;
  %21 = dyn.reshape(%18, %19, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %22 = @func_6245() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %23 = logical_and(%20, %21) /* ty=Tensor[(4, 15, 16), bool] */;
  %24 = %22.0;
  %25 = @func_4801() /* ty=Tensor[(8, 11, 10), bool] */;
  (%23, %24, %25)
}

def @func_7201(%var_7199: Tensor[(8, 16, 2), uint64], %var_7200: Tensor[(8, 16, 2), uint64]) -> (Tensor[(8, 16, 2), uint64], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 16, 2), float32]) {
  %36 = fn (%var_7173: Tensor[(8, 16, 2), uint64], %var_7174: Tensor[(8, 16, 2), uint64]) -> (Tensor[(8, 16, 2), uint64], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 16, 2), float32]) {
    %26 = cast(%var_7174, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
    %27 = shape_of(%var_7173, dtype="int32") /* ty=Tensor[(3), int32] */;
    %28 = cast(%var_7173, dtype="uint64") /* ty=Tensor[(8, 16, 2), uint64] */;
    %29 = dyn.reshape(%26, %27, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %30 = @func_4641() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) */;
    %31 = cast(%var_7173, dtype="float32") /* ty=Tensor[(8, 16, 2), float32] */;
    %32 = multiply(%28, %29) /* ty=Tensor[(8, 16, 2), uint64] */;
    %33 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
    %34 = %30.1;
    %35 = asinh(%31) /* ty=Tensor[(8, 16, 2), float32] */;
    (%32, %33, %34, %35)
  };
  %36(%var_7199, %var_7200) /* ty=(Tensor[(8, 16, 2), uint64], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 16, 2), float32]) */
}

def @func_10370() -> Tensor[(14, 8, 11), float32] {
  %37 = @func_4848() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) */;
  %37.1
}

def @func_1122() -> Tensor[(8, 11, 10), bool] {
  %42 = fn () -> Tensor[(8, 11, 10), bool] {
    %38 = cast(meta[relay.Constant][2] /* ty=Tensor[(8, 11, 10), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %39 = shape_of(meta[relay.Constant][1] /* ty=Tensor[(8, 11, 10), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(meta[relay.Constant][1] /* ty=Tensor[(8, 11, 10), float32] */, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%40, %41) /* ty=Tensor[(8, 11, 10), bool] */
  };
  %42() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_11550() -> (Tensor[(156), float32], Tensor[(15, 16, 4), float64]) {
  %43 = @func_5861() /* ty=(Tensor[(156), float32], Tensor[(8, 11, 10), bool]) */;
  %44 = @func_11343() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %45 = %43.0;
  %46 = %44.1;
  (%45, %46)
}

def @func_11151() -> (Tensor[(1848), bool], Tensor[(1848), int64]) {
  %47 = @func_9625() /* ty=Tensor[(1848), bool] */;
  %48 = cast(%47, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %49 = reshape(%48, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
  %50 = @func_2749(%49) /* ty=(Tensor[(1848), int64],) */;
  %51 = %50.0;
  (%47, %51)
}

def @func_372(%var_357: Tensor[(6, 3, 4), float32], %var_358: Tensor[(6, 3, 4), float32]) -> Tensor[(6, 3, 4), float32] {
  %52 = cast(%var_358, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %53 = shape_of(%var_357, dtype="int32") /* ty=Tensor[(3), int32] */;
  %54 = cast(%var_357, dtype="float32") /* ty=Tensor[(6, 3, 4), float32] */;
  %55 = dyn.reshape(%52, %53, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%54, %55) /* ty=Tensor[(6, 3, 4), float32] */
}

def @func_5398(%var_5298: Tensor[(9, 7, 12), float32], %var_5377: Tensor[(429), float32]) -> (Tensor[(8, 11, 10), float32], Tensor[(1232), float32], Tensor[(9, 7, 12), uint16], Tensor[(9, 7, 12), float32], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(8, 11, 10), bool]) {
  %56 = @func_4046() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */;
  %57 = cast(%var_5298, dtype="float32") /* ty=Tensor[(9, 7, 12), float32] */;
  %58 = asinh(%57) /* ty=Tensor[(9, 7, 12), float32] */;
  %59 = cast(%var_5298, dtype="float64") /* ty=Tensor[(9, 7, 12), float64] */;
  %60 = exp(%59) /* ty=Tensor[(9, 7, 12), float64] */;
  %61 = cast(%60, dtype="uint16") /* ty=Tensor[(9, 7, 12), uint16] */;
  %62 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %63 = cast(%58, dtype="uint16") /* ty=Tensor[(9, 7, 12), uint16] */;
  %64 = dyn.reshape(%61, %62, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %65 = cast(%var_5298, dtype="float32") /* ty=Tensor[(9, 7, 12), float32] */;
  %66 = sinh(%65) /* ty=Tensor[(9, 7, 12), float32] */;
  %67 = cast(%66, dtype="float64") /* ty=Tensor[(9, 7, 12), float64] */;
  %68 = log2(%67) /* ty=Tensor[(9, 7, 12), float64] */;
  %69 = cast(%68, dtype="float32") /* ty=Tensor[(9, 7, 12), float32] */;
  %70 = cast(-1.05087f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %71 = cast(meta[relay.Constant][3] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %72 = reshape(%70, newshape=[]) /* ty=float32 */;
  %73 = reshape(%71, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %74 = @func_749(%72, %73) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %75 = cast(%var_5377, dtype="float32") /* ty=Tensor[(429), float32] */;
  %76 = reshape(%75, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
  %77 = @func_4480(%76) /* ty=(Tensor[(13, 11, 3), float32],) */;
  %78 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %79 = @func_2923() /* ty=Tensor[(8, 11, 10), float32] */;
  %80 = %56.4;
  %81 = minimum(%63, %64) /* ty=Tensor[(9, 7, 12), uint16] */;
  %82 = atanh(%69) /* ty=Tensor[(9, 7, 12), float32] */;
  %83 = %74.2;
  %84 = %77.0;
  %85 = %78.0;
  (%79, %80, %81, %82, %83, -1.05087f /* ty=float32 */, meta[relay.Constant][3] /* ty=Tensor[(2880), float32] */, %84, %var_5377, %85)
}

def @func_8862() -> (Tensor[(8, 11, 10), float32],) {
  %86 = @func_7808() /* ty=Tensor[(8, 11, 10), float32] */;
  (%86,)
}

def @func_9310() -> Tensor[(8, 11, 10), bool] {
  @func_9308() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4350() -> (Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) {
  %87 = cast(meta[relay.Constant][4] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %88 = cast(meta[relay.Constant][5] /* ty=Tensor[(60, 36), int64] */, dtype="int64") /* ty=Tensor[(60, 36), int64] */;
  %89 = reshape(%87, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int64] */;
  %90 = reshape(%88, newshape=[9, 16, 15]) /* ty=Tensor[(9, 16, 15), int64] */;
  %91 = @func_1973(%89, %90) /* ty=(Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %92 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %93 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
  %94 = %91.1;
  %95 = %92.0;
  (%93, %94, meta[relay.Constant][4] /* ty=Tensor[(144), int64] */, meta[relay.Constant][5] /* ty=Tensor[(60, 36), int64] */, %95)
}

def @func_12781() -> Tensor[(15, 16, 4), float64] {
  %97 = fn () -> Tensor[(15, 16, 4), float64] {
    %96 = @func_10913() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(15, 16, 4), float64]) */;
    %96.1
  };
  %97() /* ty=Tensor[(15, 16, 4), float64] */
}

def @func_8902() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %101 = fn () -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
    %98 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %99 = %98.0;
    %100 = @func_2339() /* ty=Tensor[(8, 11, 10), bool] */;
    (%99, %100)
  };
  %101() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_9833(%var_9831: Tensor[(14, 2, 15), float32]) -> (Tensor[(14, 2, 15), float32], Tensor[(14, 2, 15), float32], Tensor[(8, 11, 10), float64], Tensor[(14, 2, 15), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  @func_9830(%var_9831) /* ty=(Tensor[(14, 2, 15), float32], Tensor[(14, 2, 15), float32], Tensor[(8, 11, 10), float64], Tensor[(14, 2, 15), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_13285() -> (Tensor[(8, 11, 10), bool], Tensor[(7, 1, 12), float64], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) {
  @func_13283() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(7, 1, 12), float64], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) */
}

def @func_3027() -> (Tensor[(8, 11, 10), float32],) {
  %103 = fn () -> (Tensor[(8, 11, 10), float32],) {
    %102 = @func_2923() /* ty=Tensor[(8, 11, 10), float32] */;
    (%102,)
  };
  %103() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_5786() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_5784() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_11482() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %104 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %105 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %106 = %104.0;
  (%105, %106)
}

def @func_11593() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_11591() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_9923() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32]) {
  %120 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32]) {
    %107 = @func_7303() /* ty=(Tensor[(6, 3, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %108 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %109 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %110 = @func_6878() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(210), float64]) */;
    %111 = @func_4697() /* ty=(Tensor[(1, 1232), float32],) */;
    %112 = %111.0;
    %113 = cast(%112, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
    %114 = %107.1;
    %115 = %108.0;
    %116 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
    %117 = %109.1;
    %118 = %110.1;
    %119 = cos(%113) /* ty=Tensor[(1, 1232), float32] */;
    (%114, %115, %116, %117, %118, %119)
  };
  %120() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32]) */
}

def @func_10566() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64]) {
  @func_10564() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64]) */
}

def @func_2630() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) {
  @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */
}

def @func_5292(%var_5291: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(1848), bool], Tensor[(1848), bool], float32) {
  %128 = fn (%var_5280: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(1848), bool], Tensor[(1848), bool], float32) {
    %121 = cast(%var_5280, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %122 = cast(-9.21912f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %123 = reshape(%121, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
    %124 = reshape(%122, newshape=[]) /* ty=float32 */;
    %125 = @func_2979(%123, %124) /* ty=(Tensor[(880), bool], Tensor[(210), float64], Tensor[(1848), bool], float32, Tensor[(2880), float32], Tensor[(5, 42), float64], Tensor[(156), int32]) */;
    %126 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
    %127 = %125.2;
    (%126, %127, %var_5280, -9.21912f /* ty=float32 */)
  };
  %128(%var_5291) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(1848), bool], Tensor[(1848), bool], float32) */
}

def @func_12471() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  @func_12469() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */
}

def @func_6950() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_6948() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_9530() -> Tensor[(8, 11, 10), bool] {
  %130 = fn () -> Tensor[(8, 11, 10), bool] {
    %129 = @func_7587() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %129.0
  };
  %130() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_7680() -> (Tensor[(8, 11, 10), float32],) {
  @func_7678() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_12239() -> (Tensor[(15, 16, 4), float64], Tensor[(1848), bool], Tensor[(2, 13, ?), float64], Tensor[(13, 2), float64]) {
  @func_12237() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), bool], Tensor[(2, 13, ?), float64], Tensor[(13, 2), float64]) */
}

def @func_10761(%var_10758: Tensor[(4, 308), float32], %var_10759: Tensor[(2880), float32], %var_10760: Tensor[(4, 308), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(15, 16, 4), float64], Tensor[(4, 308), bool], Tensor[(8, 11, 10), bool]) {
  %154 = fn (%var_10713: Tensor[(4, 308), float32], %var_10714: Tensor[(2880), float32], %var_10733: Tensor[(4, 308), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(15, 16, 4), float64], Tensor[(4, 308), bool], Tensor[(8, 11, 10), bool]) {
    %131 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
    %132 = cast(%var_10733, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
    %133 = shape_of(%var_10713, dtype="int32") /* ty=Tensor[(2), int32] */;
    %134 = cast(%var_10713, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
    %135 = dyn.reshape(%132, %133, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %136 = mod(%134, %135) /* ty=Tensor[(4, 308), float64] */;
    %137 = cast(%136, dtype="float64") /* ty=Tensor[(4, 308), float64] */;
    %138 = log2(%137) /* ty=Tensor[(4, 308), float64] */;
    %139 = cast(%var_10713, dtype="float32") /* ty=Tensor[(4, 308), float32] */;
    %140 = cast(%var_10714, dtype="float32") /* ty=Tensor[(2880), float32] */;
    %141 = reshape(%139, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
    %142 = reshape(%140, newshape=[2880]) /* ty=Tensor[(2880), float32] */;
    %143 = @func_2861(%141, %142) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), uint32], Tensor[(1232), float32], Tensor[(2160), int64], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(8, 11, 10), bool]) */;
    %144 = %143.2;
    %145 = cast(%144, dtype="bool") /* ty=Tensor[(1232), bool] */;
    %146 = shape_of(%138, dtype="int32") /* ty=Tensor[(2), int32] */;
    %147 = cast(%138, dtype="bool") /* ty=Tensor[(4, 308), bool] */;
    %148 = dyn.reshape(%145, %146, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %149 = @func_6245() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %150 = @func_9536() /* ty=Tensor[(8, 11, 10), bool] */;
    %151 = %131.0;
    %152 = logical_and(%147, %148) /* ty=Tensor[(4, 308), bool] */;
    %153 = %149.0;
    (%150, %var_10714, %151, %152, %153)
  };
  %154(%var_10758, %var_10759, %var_10760) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(15, 16, 4), float64], Tensor[(4, 308), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_10174() -> Tensor[(8, 11, 10), bool] {
  @func_3710() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4423() -> Tensor[(15, 16, 4), float64] {
  @func_4421() /* ty=Tensor[(15, 16, 4), float64] */
}

def @func_4697() -> (Tensor[(1, 1232), float32],) {
  %155 = @func_4350() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) */;
  %156 = %155.0;
  %157 = cast(%156, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
  %158 = sin(%157) /* ty=Tensor[(1, 1232), float32] */;
  (%158,)
}

def @func_3869(%var_3867: Tensor[(1232), float32]) -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) {
  @func_3866(%var_3867) /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_10068() -> (Tensor[(8, 11, 10), float32],) {
  %159 = @func_8648() /* ty=Tensor[(8, 11, 10), float32] */;
  (%159,)
}

def @func_9504() -> (Tensor[(8, 11, 10), float32],) {
  @func_9502() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_3495() -> (Tensor[(15, 16, 4), float64],) {
  @func_3493() /* ty=(Tensor[(15, 16, 4), float64],) */
}

def @func_2773() -> (Tensor[(15, 16, 4), float64],) {
  @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */
}

def @func_6482() -> (Tensor[(8, 11, 10), bool],) {
  @func_6480() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_1693() -> Tensor[(8, 11, 10), bool] {
  %160 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %160.0
}

def @func_3284() -> Tensor[(8, 11, 10), float32] {
  %161 = fn () -> Tensor[(8, 11, 10), float32] {
    @func_2097() /* ty=Tensor[(8, 11, 10), float32] */
  };
  %161() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_4189(%var_4187: Tensor[(6, 3, 7), float32], %var_4188: Tensor[(6, 3, 7), float32]) -> (Tensor[(6, 3, 7), float32], Tensor[(22, 2), float32], Tensor[(26), float64]) {
  %173 = fn (%var_4172: Tensor[(6, 3, 7), float32], %var_4173: Tensor[(6, 3, 7), float32]) -> (Tensor[(6, 3, 7), float32], Tensor[(22, 2), float32], Tensor[(26), float64]) {
    %162 = cast(%var_4173, dtype="float32") /* ty=Tensor[(6, 3, 7), float32] */;
    %163 = shape_of(%var_4172, dtype="int32") /* ty=Tensor[(3), int32] */;
    %164 = cast(%var_4172, dtype="float32") /* ty=Tensor[(6, 3, 7), float32] */;
    %165 = dyn.reshape(%162, %163, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %166 = cast(meta[relay.Constant][6] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
    %167 = cast(meta[relay.Constant][6] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
    %168 = reshape(%166, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
    %169 = reshape(%167, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
    %170 = @func_2512(%168, %169) /* ty=(Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) */;
    %171 = mod(%164, %165) /* ty=Tensor[(6, 3, 7), float32] */;
    %172 = %170.2;
    (%171, %172, meta[relay.Constant][6] /* ty=Tensor[(26), float64] */)
  };
  %173(%var_4187, %var_4188) /* ty=(Tensor[(6, 3, 7), float32], Tensor[(22, 2), float32], Tensor[(26), float64]) */
}

def @func_7954(%var_7952: Tensor[(4, 15, 16), bool], %var_7953: Tensor[(4, 15, 16), bool]) -> (Tensor[(4, 15, 16), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_7950(%var_7952, %var_7953) /* ty=(Tensor[(4, 15, 16), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_6880() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(210), float64]) {
  @func_6878() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(210), float64]) */
}

def @func_13371() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float32]) {
  %174 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %175 = @func_6136() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) */;
  %176 = %174.1;
  %177 = %175.2;
  (%176, %177)
}

def @func_6752() -> Tensor[(8, 11, 10), float32] {
  @func_3283() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_8943() -> Tensor[(8, 11, 10), float64] {
  %178 = fn () -> Tensor[(8, 11, 10), float64] {
    @func_8381() /* ty=Tensor[(8, 11, 10), float64] */
  };
  %178() /* ty=Tensor[(8, 11, 10), float64] */
}

def @func_13487() -> Tensor[(8, 11, 10), bool] {
  %180 = fn () -> Tensor[(8, 11, 10), bool] {
    %179 = @func_6948() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %179.1
  };
  %180() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_11964() -> (Tensor[(156), float32],) {
  %183 = fn () -> (Tensor[(156), float32],) {
    %181 = @func_7991() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(156), float32]) */;
    %182 = %181.1;
    (%182,)
  };
  %183() /* ty=(Tensor[(156), float32],) */
}

def @func_1309(%var_1294: Tensor[(14, 8, 11), float32]) -> (Tensor[(14, 8, 11), float32],) {
  %184 = cast(%var_1294, dtype="float32") /* ty=Tensor[(14, 8, 11), float32] */;
  %185 = asin(%184) /* ty=Tensor[(14, 8, 11), float32] */;
  (%185,)
}

def @func_1608() -> Tensor[(8, 11, 10), bool] {
  @func_1513() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_10372() -> Tensor[(14, 8, 11), float32] {
  @func_10370() /* ty=Tensor[(14, 8, 11), float32] */
}

def @func_9715() -> (Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) {
  %199 = fn () -> (Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) {
    %186 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
    %187 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %188 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 12, 4), float32] */, dtype="float64") /* ty=Tensor[(2, 12, 4), float64] */;
    %189 = exp(%188) /* ty=Tensor[(2, 12, 4), float64] */;
    %190 = cast(meta[relay.Constant][7] /* ty=Tensor[(2, 12, 4), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
    %191 = shape_of(%189, dtype="int32") /* ty=Tensor[(3), int32] */;
    %192 = cast(%189, dtype="float32") /* ty=Tensor[(2, 12, 4), float32] */;
    %193 = dyn.reshape(%190, %191, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %194 = @func_7678() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %195 = cos(%186) /* ty=Tensor[(2, 12, 4), float32] */;
    %196 = %187.0;
    %197 = subtract(%192, %193) /* ty=Tensor[(2, 12, 4), float32] */;
    %198 = %194.0;
    (%195, %196, %197, %198)
  };
  %199() /* ty=(Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) */
}

def @func_2861(%var_2813: Tensor[(1232), float32], %var_2830: Tensor[(2880), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), uint32], Tensor[(1232), float32], Tensor[(2160), int64], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(8, 11, 10), bool]) {
  %200 = cast(%var_2813, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %201 = reshape(%200, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
  %202 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
  %203 = cast(8.44046f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %204 = cast(%var_2830, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %205 = reshape(%203, newshape=[]) /* ty=float32 */;
  %206 = reshape(%204, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %207 = @func_749(%205, %206) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %208 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %209 = @func_1926(%201) /* ty=Tensor[(14, 8, 11), uint32] */;
  %210 = %202.4;
  %211 = %207.2;
  %212 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  (%208, %209, %var_2813, %210, %211, 8.44046f /* ty=float32 */, %var_2830, %212)
}

def @func_11011(%var_10975: Tensor[(12, 1, 6), float64], %var_10976: Tensor[(12, 11, 6), float64]) -> Tensor[(12, 11, 6), bool] {
  %213 = cast(%var_10975, dtype="bool") /* ty=Tensor[(12, 1, 6), bool] */;
  %214 = cast(%var_10976, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %215 = less(%213, %214) /* ty=Tensor[(12, 11, 6), bool] */;
  %216 = cast(%var_10976, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %217 = shape_of(%215, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%215, dtype="bool") /* ty=Tensor[(12, 11, 6), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%218, %219) /* ty=Tensor[(12, 11, 6), bool] */
}

def @func_11552() -> (Tensor[(156), float32], Tensor[(15, 16, 4), float64]) {
  @func_11550() /* ty=(Tensor[(156), float32], Tensor[(15, 16, 4), float64]) */
}

def @func_13763(%var_13727: Tensor[(429), float32]) -> (Tensor[(8, 11, 10), float64], Tensor[(429), bool], Tensor[(13, 11, 3), int32]) {
  %220 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %221 = cast(%var_13727, dtype="float32") /* ty=Tensor[(429), float32] */;
  %222 = reshape(%221, newshape=[13, 11, 3]) /* ty=Tensor[(13, 11, 3), float32] */;
  %223 = @func_4480(%222) /* ty=(Tensor[(13, 11, 3), float32],) */;
  %224 = %223.0;
  %225 = cast(%224, dtype="bool") /* ty=Tensor[(13, 11, 3), bool] */;
  %226 = shape_of(%var_13727, dtype="int32") /* ty=Tensor[(1), int32] */;
  %227 = cast(%var_13727, dtype="bool") /* ty=Tensor[(429), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?), bool] */;
  %229 = cast(%var_13727, dtype="int32") /* ty=Tensor[(429), int32] */;
  %230 = shape_of(%224, dtype="int32") /* ty=Tensor[(3), int32] */;
  %231 = cast(%224, dtype="int32") /* ty=Tensor[(13, 11, 3), int32] */;
  %232 = dyn.reshape(%229, %230, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %233 = %220.0;
  %234 = logical_and(%227, %228) /* ty=Tensor[(429), bool] */;
  %235 = add(%231, %232) /* ty=Tensor[(13, 11, 3), int32] */;
  (%233, %234, %235)
}

def @func_5182() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %236 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %237 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
  %238 = %236.0;
  (%237, %238)
}

def @func_6480() -> (Tensor[(8, 11, 10), bool],) {
  %239 = @func_6351() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %240 = %239.1;
  (%240,)
}

def @func_6547(%var_6546: Tensor[(1183), bool]) -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(1183), bool], Tensor[(10, 9, 12), int64], Tensor[(270, 4), int64], Tensor[(8, 11, 10), uint32]) {
  %253 = fn (%var_6508: Tensor[(1183), bool]) -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(1183), bool], Tensor[(10, 9, 12), int64], Tensor[(270, 4), int64], Tensor[(8, 11, 10), uint32]) {
    %241 = cast(%var_6508, dtype="bool") /* ty=Tensor[(1183), bool] */;
    %242 = cast(%var_6508, dtype="bool") /* ty=Tensor[(1183), bool] */;
    %243 = reshape(%241, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
    %244 = reshape(%242, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
    %245 = @func_5000(%243, %244) /* ty=(Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) */;
    %246 = cast(meta[relay.Constant][8] /* ty=Tensor[(270, 4), int64] */, dtype="int64") /* ty=Tensor[(270, 4), int64] */;
    %247 = reshape(%246, newshape=[10, 9, 12]) /* ty=Tensor[(10, 9, 12), int64] */;
    %248 = @func_6060(%247) /* ty=(Tensor[(10, 9, 12), int64],) */;
    %249 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
    %250 = %245.1;
    %251 = %248.0;
    %252 = @func_5108() /* ty=Tensor[(8, 11, 10), uint32] */;
    (%249, %250, %var_6508, %251, meta[relay.Constant][8] /* ty=Tensor[(270, 4), int64] */, %252)
  };
  %253(%var_6546) /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(1183), bool], Tensor[(10, 9, 12), int64], Tensor[(270, 4), int64], Tensor[(8, 11, 10), uint32]) */
}

def @func_7519() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64]) {
  @func_7517() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64]) */
}

def @func_2163() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) {
  %262 = fn () -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) {
    %254 = cast(meta[relay.Constant][9] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
    %255 = cast(meta[relay.Constant][10] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
    %256 = reshape(%254, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int64] */;
    %257 = reshape(%255, newshape=[9, 16, 15]) /* ty=Tensor[(9, 16, 15), int64] */;
    %258 = @func_1973(%256, %257) /* ty=(Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %259 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
    %260 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
    %261 = %258.1;
    (%259, %260, %261, meta[relay.Constant][9] /* ty=Tensor[(144), int64] */, meta[relay.Constant][10] /* ty=Tensor[(2160), int64] */)
  };
  %262() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */
}

def @func_2713() -> Tensor[(8, 11, 10), bool] {
  %264 = fn () -> Tensor[(8, 11, 10), bool] {
    %263 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %263.0
  };
  %264() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_3377() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64]) {
  %265 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
  %266 = @func_2414() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %267 = %265.0;
  %268 = %266.0;
  (%267, %268)
}

def @func_9536() -> Tensor[(8, 11, 10), bool] {
  %269 = @func_8696() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %269.0
}

def @func_8152() -> (Tensor[(3, 12, 10), float64],) {
  %270 = cast(meta[relay.Constant][11] /* ty=Tensor[(3, 12, 10), float64] */, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %271 = cosh(%270) /* ty=Tensor[(3, 12, 10), float64] */;
  (%271,)
}

def @func_8525() -> Tensor[(8, 11, 10), bool] {
  @func_8523() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_12846(%var_12835: Tensor[(15, 16, 4), float64]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), bool], Tensor[(8, 11, 10), float64]) {
  %272 = @func_8768() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %273 = %272.0;
  %274 = cast(%var_12835, dtype="bool") /* ty=Tensor[(15, 16, 4), bool] */;
  %275 = shape_of(%273, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(%273, dtype="bool") /* ty=Tensor[(15, 16, 4), bool] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %278 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  %279 = @func_2923() /* ty=Tensor[(8, 11, 10), float32] */;
  %280 = logical_and(%276, %277) /* ty=Tensor[(15, 16, 4), bool] */;
  %281 = @func_8942() /* ty=Tensor[(8, 11, 10), float64] */;
  (%278, %279, %280, %281)
}

def @func_2133() -> Tensor[(8, 11, 10), bool] {
  %283 = fn () -> Tensor[(8, 11, 10), bool] {
    %282 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %282.0
  };
  %283() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_13502() -> (Tensor[(8, 11, 10), float32],) {
  @func_13500() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_2066() -> (Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %294 = fn () -> (Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %284 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    %285 = cast(%284, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
    %286 = cast(meta[relay.Constant][12] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %287 = reshape(%286, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
    %288 = @func_1252(%287) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
    %289 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %290 = rsqrt(%285) /* ty=Tensor[(8, 11, 10), float64] */;
    %291 = %288.6;
    %292 = %289.0;
    %293 = @func_1693() /* ty=Tensor[(8, 11, 10), bool] */;
    (%290, %291, meta[relay.Constant][12] /* ty=Tensor[(156), float32] */, %292, %293)
  };
  %294() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_2923() -> Tensor[(8, 11, 10), float32] {
  %295 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %296 = %295.0;
  %297 = cast(%296, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  asin(%297) /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_9465() -> (Tensor[(8, 11, 10), bool],) {
  @func_9463() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_3301() -> (Tensor[(8, 11, 10), bool],) {
  %298 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %299 = %298.0;
  (%299,)
}

def @func_4318() -> Tensor[(8, 11, 10), bool] {
  %301 = fn () -> Tensor[(8, 11, 10), bool] {
    %300 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %300.0
  };
  %301() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_7678() -> (Tensor[(8, 11, 10), float32],) {
  %302 = @func_3283() /* ty=Tensor[(8, 11, 10), float32] */;
  (%302,)
}

def @func_9403() -> Tensor[(8, 11, 10), bool] {
  @func_9401() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_11175() -> Tensor[(8, 11, 10), bool] {
  %304 = fn () -> Tensor[(8, 11, 10), bool] {
    %303 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %303.0
  };
  %304() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4047() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) {
  %313 = fn () -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) {
    %305 = @func_3163() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %306 = cast(meta[relay.Constant][13] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
    %307 = reshape(%306, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
    %308 = @func_3866(%307) /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
    %309 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
    %310 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
    %311 = %305.0;
    %312 = %308.3;
    (%309, %310, %311, %312, meta[relay.Constant][13] /* ty=Tensor[(1232), float32] */)
  };
  %313() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */
}

def @func_12072() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %318 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %314 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %315 = @func_5691() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %316 = %314.0;
    %317 = %315.0;
    (%316, %317)
  };
  %318() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_5763() -> (Tensor[(8, 11, 10), bool],) {
  %319 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %320 = %319.0;
  (%320,)
}

def @func_3059() -> (Tensor[(8, 11, 10), bool],) {
  %323 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %321 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
    %322 = %321.0;
    (%322,)
  };
  %323() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_2628() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) {
  %324 = cast(meta[relay.Constant][14] /* ty=Tensor[(15, 16, 4), float64] */, dtype="float64") /* ty=Tensor[(15, 16, 4), float64] */;
  %325 = cast(meta[relay.Constant][15] /* ty=Tensor[(880), bool] */, dtype="bool") /* ty=Tensor[(880), bool] */;
  %326 = reshape(%325, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), bool] */;
  %327 = @func_1211(%326) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */;
  %328 = log10(%324) /* ty=Tensor[(15, 16, 4), float64] */;
  %329 = %327.1;
  (%328, %329, meta[relay.Constant][15] /* ty=Tensor[(880), bool] */)
}

def @func_1352() -> (Tensor[(8, 11, 10), bool],) {
  %331 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %330 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    (%330,)
  };
  %331() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_3140() -> (Tensor[(15, 16, 4), float64],) {
  %334 = fn () -> (Tensor[(15, 16, 4), float64],) {
    %332 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
    %333 = %332.0;
    (%333,)
  };
  %334() /* ty=(Tensor[(15, 16, 4), float64],) */
}

def @func_10267(%var_10266: Tensor[(2, 10, 10), int32]) -> (Tensor[(2, 10, 10), bool], Tensor[(8, 11, 10), bool]) {
  %341 = fn (%var_10225: Tensor[(2, 10, 10), int32]) -> (Tensor[(2, 10, 10), bool], Tensor[(8, 11, 10), bool]) {
    %335 = cast(meta[relay.Constant][16] /* ty=Tensor[(2, 10, 10), int32] */, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
    %336 = shape_of(%var_10225, dtype="int32") /* ty=Tensor[(3), int32] */;
    %337 = cast(%var_10225, dtype="bool") /* ty=Tensor[(2, 10, 10), bool] */;
    %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %339 = equal(%337, %338) /* ty=Tensor[(2, 10, 10), bool] */;
    %340 = @func_3710() /* ty=Tensor[(8, 11, 10), bool] */;
    (%339, %340)
  };
  %341(%var_10266) /* ty=(Tensor[(2, 10, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_2897() -> (Tensor[(8, 11, 10), bool],) {
  %343 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %342 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    (%342,)
  };
  %343() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_4104(%var_4103: Tensor[(8, 11, 10), float32]) -> (Tensor[(8, 11, 10), bool],) {
  %351 = fn (%var_4094: Tensor[(8, 11, 10), float32]) -> (Tensor[(8, 11, 10), bool],) {
    %344 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %345 = %344.0;
    %346 = cast(%var_4094, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %347 = shape_of(%345, dtype="int32") /* ty=Tensor[(3), int32] */;
    %348 = cast(%345, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
    %349 = dyn.reshape(%346, %347, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %350 = less(%348, %349) /* ty=Tensor[(8, 11, 10), bool] */;
    (%350,)
  };
  %351(%var_4103) /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_11484() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_11482() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_8382() -> Tensor[(8, 11, 10), float64] {
  %353 = fn () -> Tensor[(8, 11, 10), float64] {
    %352 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
    %352.0
  };
  %353() /* ty=Tensor[(8, 11, 10), float64] */
}

def @func_12446() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %354 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %355 = @func_9714() /* ty=(Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) */;
  %356 = %354.0;
  %357 = %355.1;
  (%356, %357)
}

def @func_5610() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(13, 3, 4), int32], Tensor[(156), int32]) {
  %358 = @func_4848() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) */;
  %359 = cast(meta[relay.Constant][17] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %360 = cast(meta[relay.Constant][17] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %361 = reshape(%359, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %362 = reshape(%360, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %363 = @func_583(%361, %362) /* ty=(Tensor[(13, 3, 4), int32],) */;
  %364 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  %365 = %358.0;
  %366 = %363.0;
  (%364, %365, %366, meta[relay.Constant][17] /* ty=Tensor[(156), int32] */)
}

def @func_8523() -> Tensor[(8, 11, 10), bool] {
  %367 = @func_5182() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %367.0
}

def @func_6063(%var_6061: Tensor[(10, 9, 12), int64]) -> (Tensor[(10, 9, 12), int64],) {
  @func_6060(%var_6061) /* ty=(Tensor[(10, 9, 12), int64],) */
}

def @func_5232() -> (Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) {
  %376 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) {
    %368 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
    %369 = cast(meta[relay.Constant][18] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %370 = cast(meta[relay.Constant][18] /* ty=Tensor[(105, 2), float64] */, dtype="float64") /* ty=Tensor[(105, 2), float64] */;
    %371 = reshape(%369, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
    %372 = reshape(%370, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
    %373 = @func_973(%371, %372) /* ty=(Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
    %374 = %368.0;
    %375 = %373.1;
    (%374, %375, meta[relay.Constant][18] /* ty=Tensor[(105, 2), float64] */)
  };
  %376() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) */
}

def @func_11815() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %377 = @func_6245() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %378 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %379 = %377.0;
  %380 = %378.0;
  (%379, %380)
}

def @func_10205(%var_10203: Tensor[(2160), int64]) -> (Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) {
  @func_10202(%var_10203) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */
}

def @func_8769() -> (Tensor[(15, 16, 4), float64],) {
  %382 = fn () -> (Tensor[(15, 16, 4), float64],) {
    %381 = @func_4421() /* ty=Tensor[(15, 16, 4), float64] */;
    (%381,)
  };
  %382() /* ty=(Tensor[(15, 16, 4), float64],) */
}

def @func_7906() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) {
  %389 = fn () -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) {
    %383 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
    %384 = cast(meta[relay.Constant][19] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
    %385 = reshape(%384, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
    %386 = @func_1823(%385) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
    %387 = %383.0;
    %388 = %386.4;
    (%387, %388, meta[relay.Constant][19] /* ty=Tensor[(1232), float32] */)
  };
  %389() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */
}

def @func_6919() -> Tensor[(15, 16, 4), float64] {
  %390 = @func_3493() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %390.0
}

def @func_9655() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %391 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  %392 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  (%391, %392)
}

def @func_8578() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32], Tensor[(6, 3, 4), float32]) {
  %393 = @func_7587() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %394 = @func_6136() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) */;
  %395 = @func_5231() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) */;
  %396 = %393.0;
  %397 = %394.5;
  %398 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
  %399 = %395.1;
  (%396, %397, %398, %399)
}

def @func_5159(%var_5135: uint64, %var_5136: Tensor[(9, 7, 4), uint64]) -> (Tensor[(9, 7, 4), bool], Tensor[(15, 16, 4), float64], Tensor[(880), bool], Tensor[(8, 11, 10), bool]) {
  %400 = cast(%var_5135, dtype="bool") /* ty=bool */;
  %401 = cast(%var_5136, dtype="bool") /* ty=Tensor[(9, 7, 4), bool] */;
  %402 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %403 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %404 = less_equal(%400, %401) /* ty=Tensor[(9, 7, 4), bool] */;
  %405 = %402.0;
  %406 = %403.2;
  %407 = @func_1608() /* ty=Tensor[(8, 11, 10), bool] */;
  (%404, %405, %406, %407)
}

def @func_5108() -> Tensor[(8, 11, 10), uint32] {
  %408 = @func_3116() /* ty=(Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) */;
  %408.0
}

def @func_9627() -> Tensor[(1848), bool] {
  @func_9625() /* ty=Tensor[(1848), bool] */
}

def @func_14059() -> Tensor[(8, 11, 10), bool] {
  %409 = fn () -> Tensor[(8, 11, 10), bool] {
    @func_9529() /* ty=Tensor[(8, 11, 10), bool] */
  };
  %409() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_5743() -> (Tensor[(1232), float32], Tensor[(8, 11, 10), bool], Tensor[(880), float32]) {
  %416 = fn () -> (Tensor[(1232), float32], Tensor[(8, 11, 10), bool], Tensor[(880), float32]) {
    %410 = @func_4046() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */;
    %411 = cast(meta[relay.Constant][20] /* ty=Tensor[(880), float32] */, dtype="float32") /* ty=Tensor[(880), float32] */;
    %412 = reshape(%411, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), float32] */;
    %413 = @func_4102(%412) /* ty=(Tensor[(8, 11, 10), bool],) */;
    %414 = %410.4;
    %415 = %413.0;
    (%414, %415, meta[relay.Constant][20] /* ty=Tensor[(880), float32] */)
  };
  %416() /* ty=(Tensor[(1232), float32], Tensor[(8, 11, 10), bool], Tensor[(880), float32]) */
}

def @func_6605() -> Tensor[(8, 11, 10), bool] {
  @func_6603() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_9568() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  %417 = @func_2712() /* ty=Tensor[(8, 11, 10), bool] */;
  %418 = cast(%417, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %419 = reshape(%418, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), bool] */;
  %420 = @func_1211(%419) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */;
  %421 = %420.2;
  (%417, %421)
}

def @func_6038() -> (Tensor[(8, 11, 10), float64],) {
  %422 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  %423 = cast(%422, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
  %424 = cos(%423) /* ty=Tensor[(8, 11, 10), float64] */;
  (%424,)
}

def @func_2982(%var_2980: Tensor[(1848), bool], %var_2981: float32) -> (Tensor[(880), bool], Tensor[(210), float64], Tensor[(1848), bool], float32, Tensor[(2880), float32], Tensor[(5, 42), float64], Tensor[(156), int32]) {
  %441 = fn (%var_2973: Tensor[(1848), bool], %var_2974: float32) -> (Tensor[(880), bool], Tensor[(210), float64], Tensor[(1848), bool], float32, Tensor[(2880), float32], Tensor[(5, 42), float64], Tensor[(156), int32]) {
    %425 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
    %426 = cast(%var_2973, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %427 = cast(%var_2973, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %428 = cast(%var_2974, dtype="float32") /* ty=float32 */;
    %429 = cast(meta[relay.Constant][21] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
    %430 = cast(meta[relay.Constant][22] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
    %431 = cast(meta[relay.Constant][23] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
    %432 = reshape(%426, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
    %433 = reshape(%427, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
    %434 = reshape(%428, newshape=[]) /* ty=float32 */;
    %435 = reshape(%429, newshape=[1, 2880]) /* ty=Tensor[(1, 2880), float32] */;
    %436 = reshape(%430, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %437 = reshape(%431, newshape=[156]) /* ty=Tensor[(156), int32] */;
    %438 = @func_1057(%432, %433, %434, %435, %436, %437) /* ty=(Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) */;
    %439 = %425.2;
    %440 = %438.7;
    (%439, %440, %var_2973, %var_2974, meta[relay.Constant][21] /* ty=Tensor[(2880), float32] */, meta[relay.Constant][22] /* ty=Tensor[(5, 42), float64] */, meta[relay.Constant][23] /* ty=Tensor[(156), int32] */)
  };
  %441(%var_2980, %var_2981) /* ty=(Tensor[(880), bool], Tensor[(210), float64], Tensor[(1848), bool], float32, Tensor[(2880), float32], Tensor[(5, 42), float64], Tensor[(156), int32]) */
}

def @func_7548() -> (Tensor[(8, 11, 10), bool],) {
  %442 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  (%442,)
}

def @func_973(%var_935: Tensor[(5, 7, 6), float64], %var_936: Tensor[(5, 7, 6), float64]) -> (Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  %443 = cast(%var_936, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %444 = shape_of(%var_935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%var_935, dtype="float64") /* ty=Tensor[(5, 7, 6), float64] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %447 = cast(meta[relay.Constant][24] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %448 = cast(meta[relay.Constant][24] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %449 = reshape(%447, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %450 = reshape(%448, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %451 = power(%445, %446) /* ty=Tensor[(5, 7, 6), float64] */;
  %452 = @func_372(%449, %450) /* ty=Tensor[(6, 3, 4), float32] */;
  (%451, %452, meta[relay.Constant][24] /* ty=Tensor[(72), float32] */)
}

def @func_8270() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) {
  %459 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) {
    %453 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %454 = cast(meta[relay.Constant][25] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
    %455 = reshape(%454, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
    %456 = @func_1309(%455) /* ty=(Tensor[(14, 8, 11), float32],) */;
    %457 = %453.0;
    %458 = %456.0;
    (%457, %458, meta[relay.Constant][25] /* ty=Tensor[(1232), float32] */)
  };
  %459() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */
}

def @func_9657() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_9655() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_9284() -> (Tensor[(8, 11, 10), float32],) {
  %462 = fn () -> (Tensor[(8, 11, 10), float32],) {
    %460 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %461 = %460.0;
    (%461,)
  };
  %462() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_5572() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %466 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %463 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %464 = %463.0;
    %465 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
    (%464, %465)
  };
  %466() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_9570() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  @func_9568() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) */
}

def @func_2679() -> (Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) {
  %475 = fn () -> (Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) {
    %467 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %468 = cast(meta[relay.Constant][26] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %469 = %467.2;
    %470 = cast(%469, dtype="int32") /* ty=Tensor[(156), int32] */;
    %471 = reshape(%468, newshape=[6, 308]) /* ty=Tensor[(6, 308), bool] */;
    %472 = reshape(%470, newshape=[156]) /* ty=Tensor[(156), int32] */;
    %473 = @func_1281(%471, %472) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) */;
    %474 = %473.5;
    (%469, %474, meta[relay.Constant][26] /* ty=Tensor[(1848), bool] */)
  };
  %475() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */
}

def @func_2321() -> Tensor[(8, 11, 10), bool] {
  @func_1693() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_3402() -> Tensor[(210), float64] {
  @func_3400() /* ty=Tensor[(210), float64] */
}

def @func_3164() -> (Tensor[(8, 11, 10), bool],) {
  %477 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %476 = @func_1693() /* ty=Tensor[(8, 11, 10), bool] */;
    (%476,)
  };
  %477() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_8226(%var_8224: int8, %var_8225: Tensor[(195), int8]) -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], int8, Tensor[(195), int8], Tensor[(390), int8]) {
  @func_8222(%var_8224, %var_8225) /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], int8, Tensor[(195), int8], Tensor[(390), int8]) */
}

def @func_1973(%var_1950: Tensor[(9, 16, 1), int64], %var_1951: Tensor[(9, 16, 15), int64]) -> (Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %478 = cast(%var_1950, dtype="int64") /* ty=Tensor[(9, 16, 1), int64] */;
  %479 = cast(%var_1951, dtype="int64") /* ty=Tensor[(9, 16, 15), int64] */;
  %480 = right_shift(%478, %479) /* ty=Tensor[(9, 16, 15), int64] */;
  %481 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %482 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  (%480, %481, %482)
}

def @func_7653() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %487 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %483 = @func_5610() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(13, 3, 4), int32], Tensor[(156), int32]) */;
    %484 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %485 = %483.1;
    %486 = %484.0;
    (%485, %486)
  };
  %487() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_10344() -> Tensor[(8, 11, 10), float64] {
  %489 = fn () -> Tensor[(8, 11, 10), float64] {
    %488 = @func_6173() /* ty=(Tensor[(8, 11, 10), float64],) */;
    %488.0
  };
  %489() /* ty=Tensor[(8, 11, 10), float64] */
}

def @func_11153() -> (Tensor[(1848), bool], Tensor[(1848), int64]) {
  @func_11151() /* ty=(Tensor[(1848), bool], Tensor[(1848), int64]) */
}

def @func_4267(%var_4265: Tensor[(78, 2), int32]) -> (Tensor[(8, 11, 10), float64], float32, Tensor[(1848), bool], Tensor[(78, 2), int32]) {
  @func_4264(%var_4265) /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(1848), bool], Tensor[(78, 2), int32]) */
}

def @func_11015(%var_11013: Tensor[(12, 1, 6), float64], %var_11014: Tensor[(12, 11, 6), float64]) -> Tensor[(12, 11, 6), bool] {
  @func_11011(%var_11013, %var_11014) /* ty=Tensor[(12, 11, 6), bool] */
}

def @func_13766(%var_13764: Tensor[(429), float32]) -> (Tensor[(8, 11, 10), float64], Tensor[(429), bool], Tensor[(13, 11, 3), int32]) {
  @func_13763(%var_13764) /* ty=(Tensor[(8, 11, 10), float64], Tensor[(429), bool], Tensor[(13, 11, 3), int32]) */
}

def @func_6948() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %490 = @func_5784() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %491 = @func_5861() /* ty=(Tensor[(156), float32], Tensor[(8, 11, 10), bool]) */;
  %492 = %490.1;
  %493 = %491.1;
  (%492, %493)
}

def @func_2213() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %497 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %494 = @func_1608() /* ty=Tensor[(8, 11, 10), bool] */;
    %495 = @func_1693() /* ty=Tensor[(8, 11, 10), bool] */;
    %496 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
    (%494, %495, %496)
  };
  %497() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_3795() -> Tensor[(156), float32] {
  %498 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %498.2
}

def @func_4264(%var_4261: Tensor[(78, 2), int32]) -> (Tensor[(8, 11, 10), float64], float32, Tensor[(1848), bool], Tensor[(78, 2), int32]) {
  %499 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %500 = cast(meta[relay.Constant][27] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %501 = cast(%var_4261, dtype="int32") /* ty=Tensor[(78, 2), int32] */;
  %502 = reshape(%500, newshape=[6, 308]) /* ty=Tensor[(6, 308), bool] */;
  %503 = reshape(%501, newshape=[156]) /* ty=Tensor[(156), int32] */;
  %504 = @func_1281(%502, %503) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) */;
  %505 = %499.0;
  %506 = %504.3;
  (%505, %506, meta[relay.Constant][27] /* ty=Tensor[(1848), bool] */, %var_4261)
}

def @func_12361(%var_12330: Tensor[(24), uint8]) -> (Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) {
  %507 = @func_11343() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %508 = cast(%var_12330, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %509 = cast(meta[relay.Constant][28] /* ty=Tensor[(264), uint8] */, dtype="uint8") /* ty=Tensor[(264), uint8] */;
  %510 = reshape(%508, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), uint8] */;
  %511 = reshape(%509, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint8] */;
  %512 = @func_12040(%510, %511) /* ty=(Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) */;
  %513 = %507.4;
  %514 = %512.2;
  (%513, %514, %var_12330, meta[relay.Constant][28] /* ty=Tensor[(264), uint8] */)
}

def @func_7303() -> (Tensor[(6, 3, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %515 = @func_5231() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) */;
  %516 = @func_7250() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %517 = %515.1;
  %518 = @func_6603() /* ty=Tensor[(8, 11, 10), bool] */;
  %519 = %516.0;
  (%517, %518, %519)
}

def @func_376(%var_374: Tensor[(6, 3, 4), float32], %var_375: Tensor[(6, 3, 4), float32]) -> Tensor[(6, 3, 4), float32] {
  @func_372(%var_374, %var_375) /* ty=Tensor[(6, 3, 4), float32] */
}

def @func_2340() -> Tensor[(8, 11, 10), bool] {
  %520 = fn () -> Tensor[(8, 11, 10), bool] {
    @func_2132() /* ty=Tensor[(8, 11, 10), bool] */
  };
  %520() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_3866(%var_3839: Tensor[(1232), float32]) -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) {
  %521 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %522 = @func_2065() /* ty=(Tensor[(8, 11, 10), float64], float32, Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %523 = cast(%var_3839, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %524 = reshape(%523, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %525 = @func_1823(%524) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %526 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %527 = %521.0;
  %528 = %522.0;
  %529 = @func_3400() /* ty=Tensor[(210), float64] */;
  %530 = %525.0;
  %531 = %526.2;
  (%527, %528, %529, %530, %var_3839, %531)
}

def @func_3261() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %532 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  %533 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %534 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  (%532, %533, %534)
}

def @func_7550() -> (Tensor[(8, 11, 10), bool],) {
  @func_7548() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_4642() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) {
  %546 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) {
    %535 = cast(meta[relay.Constant][29] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
    %536 = reshape(%535, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
    %537 = @func_1309(%536) /* ty=(Tensor[(14, 8, 11), float32],) */;
    %538 = cast(meta[relay.Constant][30] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %539 = reshape(%538, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
    %540 = @func_1252(%539) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
    %541 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
    %542 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
    %543 = %537.0;
    %544 = %540.5;
    %545 = %541.0;
    (%542, %543, meta[relay.Constant][29] /* ty=Tensor[(1232), float32] */, %544, meta[relay.Constant][30] /* ty=Tensor[(156), float32] */, %545)
  };
  %546() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) */
}

def @func_1255(%var_1253: Tensor[(13, 3, 4), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) {
  @func_1252(%var_1253) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */
}

def @func_3922(%var_3921: Tensor[(16, 12, 1), float64]) -> Tensor[(16, 12, 1), float64] {
  %548 = fn (%var_3906: Tensor[(16, 12, 1), float64]) -> Tensor[(16, 12, 1), float64] {
    %547 = cast(%var_3906, dtype="float64") /* ty=Tensor[(16, 12, 1), float64] */;
    tan(%547) /* ty=Tensor[(16, 12, 1), float64] */
  };
  %548(%var_3921) /* ty=Tensor[(16, 12, 1), float64] */
}

def @func_6469(%var_6468: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) {
  %558 = fn (%var_6459: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) {
    %549 = @func_4848() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) */;
    %550 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %551 = cast(%var_6459, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %552 = reshape(%551, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
    %553 = @func_2749(%552) /* ty=(Tensor[(1848), int64],) */;
    %554 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
    %555 = %549.1;
    %556 = %550.1;
    %557 = %553.0;
    (%554, %555, %556, %557, %var_6459)
  };
  %558(%var_6468) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) */
}

def @func_4352() -> (Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) {
  @func_4350() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) */
}

def @func_10464() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  @func_10462() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) */
}

def @func_6754() -> Tensor[(8, 11, 10), float32] {
  @func_6752() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_13167() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %559 = @func_7652() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %560 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %561 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %562 = %559.1;
  %563 = %560.0;
  %564 = %561.1;
  (%562, %563, %564)
}

def @func_1992() -> Tensor[(1, 1232), float32] {
  %566 = fn () -> Tensor[(1, 1232), float32] {
    %565 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
    %565.2
  };
  %566() /* ty=Tensor[(1, 1232), float32] */
}

def @func_3710() -> Tensor[(8, 11, 10), bool] {
  @func_1584() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_5415() -> Tensor[(8, 11, 10), bool] {
  %567 = fn () -> Tensor[(8, 11, 10), bool] {
    @func_3768() /* ty=Tensor[(8, 11, 10), bool] */
  };
  %567() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_6245() -> (Tensor[(8, 11, 10), bool],) {
  %568 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
  (%568,)
}

def @func_7588() -> (Tensor[(8, 11, 10), bool],) {
  %570 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %569 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
    (%569,)
  };
  %570() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_7038(%var_7022: Tensor[(60, 36), int64]) -> (Tensor[(14, 8, 11), float32], Tensor[(60, 36), bool], Tensor[(8, 11, 10), bool]) {
  %571 = @func_4641() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(12, 16, 15), bool], Tensor[(156), float32], Tensor[(8, 11, 10), float32]) */;
  %572 = @func_4350() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) */;
  %573 = %572.3;
  %574 = cast(%var_7022, dtype="bool") /* ty=Tensor[(60, 36), bool] */;
  %575 = shape_of(%573, dtype="int32") /* ty=Tensor[(2), int32] */;
  %576 = cast(%573, dtype="bool") /* ty=Tensor[(60, 36), bool] */;
  %577 = dyn.reshape(%574, %575, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %578 = %571.1;
  %579 = less(%576, %577) /* ty=Tensor[(60, 36), bool] */;
  %580 = @func_5414() /* ty=Tensor[(8, 11, 10), bool] */;
  (%578, %579, %580)
}

def @func_3303() -> (Tensor[(8, 11, 10), bool],) {
  @func_3301() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_8247() -> (Tensor[(1, 1232), float32], Tensor[(8, 11, 10), float32]) {
  %583 = fn () -> (Tensor[(1, 1232), float32], Tensor[(8, 11, 10), float32]) {
    %581 = @func_1991() /* ty=Tensor[(1, 1232), float32] */;
    %582 = @func_6752() /* ty=Tensor[(8, 11, 10), float32] */;
    (%581, %582)
  };
  %583() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), float32]) */
}

def @func_11899() -> (Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) {
  %584 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %585 = @func_8246() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), float32]) */;
  %586 = %584.0;
  %587 = %585.1;
  (%586, %587)
}

def @func_889(%var_888: Tensor[(4, 1, 11), float32]) -> (Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(4, ?, 11), uint32], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  %606 = fn (%var_863: Tensor[(4, 1, 11), float32]) -> (Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(4, ?, 11), uint32], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
    %588 = cast(meta[relay.Constant][31] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
    %589 = cast(meta[relay.Constant][31] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
    %590 = reshape(%588, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
    %591 = reshape(%589, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
    %592 = @func_583(%590, %591) /* ty=(Tensor[(13, 3, 4), int32],) */;
    %593 = cast(%var_863, dtype="float32") /* ty=Tensor[(4, 1, 11), float32] */;
    %594 = acos(%593) /* ty=Tensor[(4, 1, 11), float32] */;
    %595 = cast(%var_863, dtype="uint32") /* ty=Tensor[(4, 1, 11), uint32] */;
    %596 = shape_of(%594, dtype="int32") /* ty=Tensor[(3), int32] */;
    %597 = cast(%594, dtype="uint32") /* ty=Tensor[(4, 1, 11), uint32] */;
    %598 = dyn.reshape(%595, %596, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %599 = cast(meta[relay.Constant][32] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %600 = cast(meta[relay.Constant][32] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
    %601 = reshape(%599, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
    %602 = reshape(%600, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
    %603 = %592.0;
    %604 = bitwise_and(%597, %598) /* ty=Tensor[(4, ?, 11), uint32] */;
    %605 = @func_372(%601, %602) /* ty=Tensor[(6, 3, 4), float32] */;
    (%603, meta[relay.Constant][31] /* ty=Tensor[(156), int32] */, %604, %605, meta[relay.Constant][32] /* ty=Tensor[(72), float32] */)
  };
  %606(%var_888) /* ty=(Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(4, ?, 11), uint32], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */
}

def @func_8649() -> Tensor[(8, 11, 10), float32] {
  %609 = fn () -> Tensor[(8, 11, 10), float32] {
    %607 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
    %608 = cast(%607, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
    acos(%608) /* ty=Tensor[(8, 11, 10), float32] */
  };
  %609() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_5402(%var_5400: Tensor[(9, 7, 12), float32], %var_5401: Tensor[(429), float32]) -> (Tensor[(8, 11, 10), float32], Tensor[(1232), float32], Tensor[(9, 7, 12), uint16], Tensor[(9, 7, 12), float32], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(8, 11, 10), bool]) {
  @func_5398(%var_5400, %var_5401) /* ty=(Tensor[(8, 11, 10), float32], Tensor[(1232), float32], Tensor[(9, 7, 12), uint16], Tensor[(9, 7, 12), float32], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(13, 11, 3), float32], Tensor[(429), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_3785() -> Tensor[(8, 11, 10), bool] {
  @func_1584() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_11112() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_11110() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_11110() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %610 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %611 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %612 = %610.3;
  %613 = %611.0;
  (%612, %613)
}

def @func_6247() -> (Tensor[(8, 11, 10), bool],) {
  @func_6245() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_8864() -> (Tensor[(8, 11, 10), float32],) {
  @func_8862() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_3343() -> Tensor[(8, 11, 10), float64] {
  %616 = fn () -> Tensor[(8, 11, 10), float64] {
    %614 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
    %615 = cast(%614, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
    cosh(%615) /* ty=Tensor[(8, 11, 10), float64] */
  };
  %616() /* ty=Tensor[(8, 11, 10), float64] */
}

def @func_583(%var_569: Tensor[(13, 3, 4), int32], %var_570: Tensor[(13, 3, 4), int32]) -> (Tensor[(13, 3, 4), int32],) {
  %617 = cast(%var_570, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %618 = shape_of(%var_569, dtype="int32") /* ty=Tensor[(3), int32] */;
  %619 = cast(%var_569, dtype="int32") /* ty=Tensor[(13, 3, 4), int32] */;
  %620 = dyn.reshape(%617, %618, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %621 = add(%619, %620) /* ty=Tensor[(13, 3, 4), int32] */;
  (%621,)
}

def @func_10284() -> Tensor[(8, 11, 10), bool] {
  @func_10282() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_1674() -> (Tensor[(8, 11, 10), bool],) {
  %623 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %622 = @func_1608() /* ty=Tensor[(8, 11, 10), bool] */;
    (%622,)
  };
  %623() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_1585() -> Tensor[(8, 11, 10), bool] {
  %624 = fn () -> Tensor[(8, 11, 10), bool] {
    @func_1121() /* ty=Tensor[(8, 11, 10), bool] */
  };
  %624() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_1213(%var_1212: Tensor[(8, 11, 10), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) {
  %639 = fn (%var_1184: Tensor[(8, 11, 10), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) {
    %625 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %626 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    %627 = cast(%var_1184, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
    %628 = shape_of(%626, dtype="int32") /* ty=Tensor[(3), int32] */;
    %629 = cast(%626, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
    %630 = dyn.reshape(%627, %628, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %631 = divide(%629, %630) /* ty=Tensor[(8, 11, 10), float32] */;
    %632 = cast(%631, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
    %633 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %634 = %633.0;
    %635 = cast(%634, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
    %636 = %625.0;
    %637 = atan(%632) /* ty=Tensor[(8, 11, 10), float64] */;
    %638 = tan(%635) /* ty=Tensor[(8, 11, 10), float32] */;
    (%636, %637, %638)
  };
  %639(%var_1212) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */
}

def @func_1468() -> (Tensor[(8, 11, 10), bool],) {
  %641 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %640 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    (%640,)
  };
  %641() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_2099() -> Tensor[(8, 11, 10), float32] {
  @func_2097() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_8443(%var_8442: Tensor[(9, 1232), float32]) -> (Tensor[(9, 1232), uint16], Tensor[(9, 1232), int64]) {
  %653 = fn (%var_8413: Tensor[(9, 1232), float32]) -> (Tensor[(9, 1232), uint16], Tensor[(9, 1232), int64]) {
    %642 = @func_4697() /* ty=(Tensor[(1, 1232), float32],) */;
    %643 = %642.0;
    %644 = cast(%643, dtype="bool") /* ty=Tensor[(1, 1232), bool] */;
    %645 = cast(%var_8413, dtype="bool") /* ty=Tensor[(9, 1232), bool] */;
    %646 = less(%644, %645) /* ty=Tensor[(9, 1232), bool] */;
    %647 = cast(%646, dtype="uint16") /* ty=Tensor[(9, 1232), uint16] */;
    %648 = cast(%643, dtype="uint16") /* ty=Tensor[(1, 1232), uint16] */;
    %649 = cast(%646, dtype="int64") /* ty=Tensor[(9, 1232), int64] */;
    %650 = cast(%643, dtype="int64") /* ty=Tensor[(1, 1232), int64] */;
    %651 = bitwise_or(%647, %648) /* ty=Tensor[(9, 1232), uint16] */;
    %652 = left_shift(%649, %650) /* ty=Tensor[(9, 1232), int64] */;
    (%651, %652)
  };
  %653(%var_8442) /* ty=(Tensor[(9, 1232), uint16], Tensor[(9, 1232), int64]) */
}

def @func_1825(%var_1824: Tensor[(1232), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) {
  %664 = fn (%var_1810: Tensor[(1232), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) {
    %654 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %655 = %654.0;
    %656 = cast(%655, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
    %657 = cast(%var_1810, dtype="float32") /* ty=Tensor[(1232), float32] */;
    %658 = reshape(%657, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
    %659 = @func_1309(%658) /* ty=(Tensor[(14, 8, 11), float32],) */;
    %660 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    %661 = atanh(%656) /* ty=Tensor[(8, 11, 10), float64] */;
    %662 = %659.0;
    %663 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    (%660, %661, %662, %var_1810, %663)
  };
  %664(%var_1824) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_14159(%var_14157: Tensor[(13, 91), bool]) -> (Tensor[(156), float32], Tensor[(15, 16, 4), float64], Tensor[(13, 91), bool]) {
  %665 = @func_7991() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(156), float32]) */;
  %666 = cast(%var_14157, dtype="bool") /* ty=Tensor[(13, 91), bool] */;
  %667 = cast(%var_14157, dtype="bool") /* ty=Tensor[(13, 91), bool] */;
  %668 = reshape(%666, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
  %669 = reshape(%667, newshape=[7, 13, 13]) /* ty=Tensor[(7, 13, 13), bool] */;
  %670 = @func_5000(%668, %669) /* ty=(Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) */;
  %671 = %665.1;
  %672 = %670.5;
  (%671, %672, %var_14157)
}

def @func_9401() -> Tensor[(8, 11, 10), bool] {
  %673 = @func_3301() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %673.0
}

def @func_6490() -> (Tensor[(8, 11, 10), float32],) {
  @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_6138() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) {
  @func_6136() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64], Tensor[(1232, 1), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_2751(%var_2750: Tensor[(1848), bool]) -> (Tensor[(1848), int64],) {
  %681 = fn (%var_2744: Tensor[(1848), bool]) -> (Tensor[(1848), int64],) {
    %674 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
    %675 = %674.2;
    %676 = cast(%var_2744, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %677 = shape_of(%675, dtype="int32") /* ty=Tensor[(1), int32] */;
    %678 = cast(%675, dtype="int64") /* ty=Tensor[(1848), int64] */;
    %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?), int64] */;
    %680 = add(%678, %679) /* ty=Tensor[(1848), int64] */;
    (%680,)
  };
  %681(%var_2750) /* ty=(Tensor[(1848), int64],) */
}

def @func_12690() -> (Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) {
  %682 = @func_11482() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %683 = cast(meta[relay.Constant][33] /* ty=Tensor[(24), uint8] */, dtype="uint8") /* ty=Tensor[(24), uint8] */;
  %684 = cast(meta[relay.Constant][34] /* ty=Tensor[(264), uint8] */, dtype="uint8") /* ty=Tensor[(264), uint8] */;
  %685 = reshape(%683, newshape=[1, 6, 4]) /* ty=Tensor[(1, 6, 4), uint8] */;
  %686 = reshape(%684, newshape=[11, 6, 4]) /* ty=Tensor[(11, 6, 4), uint8] */;
  %687 = @func_12040(%685, %686) /* ty=(Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) */;
  %688 = %682.0;
  %689 = %687.2;
  (%688, %689, meta[relay.Constant][33] /* ty=Tensor[(24), uint8] */, meta[relay.Constant][34] /* ty=Tensor[(264), uint8] */)
}

def @func_12043(%var_12041: Tensor[(1, 6, 4), uint8], %var_12042: Tensor[(11, 6, 4), uint8]) -> (Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) {
  %698 = fn (%var_12014: Tensor[(1, 6, 4), uint8], %var_12015: Tensor[(11, 6, 4), uint8]) -> (Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) {
    %690 = cast(%var_12014, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
    %691 = cast(%var_12015, dtype="bool") /* ty=Tensor[(11, 6, 4), bool] */;
    %692 = @func_8152() /* ty=(Tensor[(3, 12, 10), float64],) */;
    %693 = cast(%var_12014, dtype="bool") /* ty=Tensor[(1, 6, 4), bool] */;
    %694 = cast(meta[relay.Constant][35] /* ty=Tensor[(3, 6, 4), uint8] */, dtype="bool") /* ty=Tensor[(3, 6, 4), bool] */;
    %695 = less(%690, %691) /* ty=Tensor[(11, 6, 4), bool] */;
    %696 = %692.0;
    %697 = less_equal(%693, %694) /* ty=Tensor[(3, 6, 4), bool] */;
    (%695, %696, %697)
  };
  %698(%var_12041, %var_12042) /* ty=(Tensor[(11, 6, 4), bool], Tensor[(3, 12, 10), float64], Tensor[(3, 6, 4), bool]) */
}

def @func_8129() -> (Tensor[(156), float32],) {
  @func_8127() /* ty=(Tensor[(156), float32],) */
}

def @func_9027() -> (Tensor[(7, 1, 12), uint16], Tensor[(8, 11, 10), bool]) {
  %703 = fn () -> (Tensor[(7, 1, 12), uint16], Tensor[(8, 11, 10), bool]) {
    %699 = cast(meta[relay.Constant][36] /* ty=uint16 */, dtype="uint16") /* ty=uint16 */;
    %700 = cast(meta[relay.Constant][37] /* ty=Tensor[(7, 1, 12), uint16] */, dtype="uint16") /* ty=Tensor[(7, 1, 12), uint16] */;
    %701 = multiply(%699, %700) /* ty=Tensor[(7, 1, 12), uint16] */;
    %702 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
    (%701, %702)
  };
  %703() /* ty=(Tensor[(7, 1, 12), uint16], Tensor[(8, 11, 10), bool]) */
}

def @func_5163(%var_5161: uint64, %var_5162: Tensor[(9, 7, 4), uint64]) -> (Tensor[(9, 7, 4), bool], Tensor[(15, 16, 4), float64], Tensor[(880), bool], Tensor[(8, 11, 10), bool]) {
  @func_5159(%var_5161, %var_5162) /* ty=(Tensor[(9, 7, 4), bool], Tensor[(15, 16, 4), float64], Tensor[(880), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_7444() -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), int32], Tensor[(1848), float64], Tensor[(1848), int16], Tensor[(1848), uint16]) {
  %704 = @func_5231() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(6, 3, 4), float32], Tensor[(105, 2), float64]) */;
  %705 = cast(meta[relay.Constant][38] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %706 = cast(meta[relay.Constant][39] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %707 = reshape(%705, newshape=[6, 308]) /* ty=Tensor[(6, 308), bool] */;
  %708 = reshape(%706, newshape=[156]) /* ty=Tensor[(156), int32] */;
  %709 = @func_1281(%707, %708) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) */;
  %710 = cast(meta[relay.Constant][38] /* ty=Tensor[(1848), bool] */, dtype="float64") /* ty=Tensor[(1848), float64] */;
  %711 = cast(meta[relay.Constant][38] /* ty=Tensor[(1848), bool] */, dtype="float64") /* ty=Tensor[(1848), float64] */;
  %712 = asin(%711) /* ty=Tensor[(1848), float64] */;
  %713 = cast(meta[relay.Constant][38] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(1), int32] */;
  %715 = cast(%712, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?), bool] */;
  %717 = logical_or(%715, %716) /* ty=Tensor[(1848), bool] */;
  %718 = cast(%717, dtype="int16") /* ty=Tensor[(1848), int16] */;
  %719 = shape_of(%712, dtype="int32") /* ty=Tensor[(1), int32] */;
  %720 = cast(%712, dtype="int16") /* ty=Tensor[(1848), int16] */;
  %721 = dyn.reshape(%718, %719, newshape=[]) /* ty=Tensor[(?), int16] */;
  %722 = cast(%712, dtype="uint8") /* ty=Tensor[(1848), uint8] */;
  %723 = shape_of(%717, dtype="int32") /* ty=Tensor[(1), int32] */;
  %724 = cast(%717, dtype="uint8") /* ty=Tensor[(1848), uint8] */;
  %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %726 = left_shift(%724, %725) /* ty=Tensor[(1848), uint8] */;
  %727 = cast(%726, dtype="uint16") /* ty=Tensor[(1848), uint16] */;
  %728 = shape_of(%717, dtype="int32") /* ty=Tensor[(1), int32] */;
  %729 = cast(%717, dtype="uint16") /* ty=Tensor[(1848), uint16] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %731 = %704.0;
  %732 = %709.4;
  %733 = log10(%710) /* ty=Tensor[(1848), float64] */;
  %734 = bitwise_or(%720, %721) /* ty=Tensor[(1848), int16] */;
  %735 = bitwise_xor(%729, %730) /* ty=Tensor[(1848), uint16] */;
  (%731, %732, meta[relay.Constant][39] /* ty=Tensor[(156), int32] */, %733, %734, %735)
}

def @func_9588() -> Tensor[(8, 11, 10), bool] {
  %736 = fn () -> Tensor[(8, 11, 10), bool] {
    @func_4787() /* ty=Tensor[(8, 11, 10), bool] */
  };
  %736() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_2097() -> Tensor[(8, 11, 10), float32] {
  %737 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  %738 = cast(%737, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
  sigmoid(%738) /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_749(%var_734: float32, %var_735: Tensor[(12, 16, 15), float32]) -> (Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  %739 = cast(%var_734, dtype="bool") /* ty=bool */;
  %740 = cast(%var_735, dtype="bool") /* ty=Tensor[(12, 16, 15), bool] */;
  %741 = cast(meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %742 = cast(meta[relay.Constant][40] /* ty=Tensor[(72), float32] */, dtype="float32") /* ty=Tensor[(72), float32] */;
  %743 = reshape(%741, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %744 = reshape(%742, newshape=[6, 3, 4]) /* ty=Tensor[(6, 3, 4), float32] */;
  %745 = less_equal(%739, %740) /* ty=Tensor[(12, 16, 15), bool] */;
  %746 = @func_372(%743, %744) /* ty=Tensor[(6, 3, 4), float32] */;
  (%745, %746, meta[relay.Constant][40] /* ty=Tensor[(72), float32] */)
}

def @func_2236() -> Tensor[(8, 11, 10), bool] {
  %747 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %747.0
}

def @func_6878() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(210), float64]) {
  %748 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %749 = @func_5763() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %750 = %748.0;
  %751 = %749.0;
  %752 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
  %753 = @func_3400() /* ty=Tensor[(210), float64] */;
  (%750, %751, %752, %753)
}

def @func_3769() -> Tensor[(8, 11, 10), bool] {
  %755 = fn () -> Tensor[(8, 11, 10), bool] {
    %754 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %754.1
  };
  %755() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_9308() -> Tensor[(8, 11, 10), bool] {
  %756 = @func_6351() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %756.0
}

def @func_3902() -> (Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) {
  %768 = fn () -> (Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) {
    %757 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
    %758 = cast(meta[relay.Constant][41] /* ty=Tensor[(1848), bool] */, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %759 = reshape(%758, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
    %760 = @func_2749(%759) /* ty=(Tensor[(1848), int64],) */;
    %761 = cast(meta[relay.Constant][42] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
    %762 = reshape(%761, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
    %763 = @func_1823(%762) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
    %764 = %757.0;
    %765 = %760.0;
    %766 = @func_3768() /* ty=Tensor[(8, 11, 10), bool] */;
    %767 = %763.2;
    (%764, %765, meta[relay.Constant][41] /* ty=Tensor[(1848), bool] */, %766, %767, meta[relay.Constant][42] /* ty=Tensor[(1232), float32] */)
  };
  %768() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */
}

def @func_10462() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  %769 = @func_9568() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) */;
  %770 = @func_7678() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %771 = @func_6919() /* ty=Tensor[(15, 16, 4), float64] */;
  %772 = %769.0;
  %773 = %770.0;
  (%771, %772, %773)
}

def @func_6603() -> Tensor[(8, 11, 10), bool] {
  %774 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %774.0
}

def @func_12297() -> Tensor[(8, 11, 10), bool] {
  %775 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %775.0
}

def @func_10683() -> (Tensor[(15, 16, 4), float64],) {
  %777 = fn () -> (Tensor[(15, 16, 4), float64],) {
    %776 = @func_4421() /* ty=Tensor[(15, 16, 4), float64] */;
    (%776,)
  };
  %777() /* ty=(Tensor[(15, 16, 4), float64],) */
}

def @func_8222(%var_8206: int8, %var_8207: Tensor[(195), int8]) -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], int8, Tensor[(195), int8], Tensor[(390), int8]) {
  %778 = cast(%var_8206, dtype="int8") /* ty=int8 */;
  %779 = cast(%var_8207, dtype="int8") /* ty=Tensor[(195), int8] */;
  %780 = cast(meta[relay.Constant][43] /* ty=Tensor[(390), int8] */, dtype="int8") /* ty=Tensor[(390), int8] */;
  %781 = reshape(%778, newshape=[]) /* ty=int8 */;
  %782 = reshape(%779, newshape=[13, 1, 15]) /* ty=Tensor[(13, 1, 15), int8] */;
  %783 = reshape(%780, newshape=[13, 2, 15]) /* ty=Tensor[(13, 2, 15), int8] */;
  %784 = @func_4232(%781, %782, %783) /* ty=(Tensor[(13, 1, 15), int8], Tensor[(13, 2, 15), bool], Tensor[(8, 11, 10), bool]) */;
  %785 = @func_3283() /* ty=Tensor[(8, 11, 10), float32] */;
  %786 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
  %787 = %784.2;
  (%785, %786, %787, %var_8206, %var_8207, meta[relay.Constant][43] /* ty=Tensor[(390), int8] */)
}

def @func_2238() -> Tensor[(8, 11, 10), bool] {
  @func_2236() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_12458() -> (Tensor[(8, 11, 10), float32],) {
  %789 = fn () -> (Tensor[(8, 11, 10), float32],) {
    %788 = @func_8648() /* ty=Tensor[(8, 11, 10), float32] */;
    (%788,)
  };
  %789() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_13876() -> (Tensor[(8, 11, 10), bool],) {
  %792 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %790 = @func_8352() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %791 = %790.0;
    (%791,)
  };
  %792() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_9139(%var_9108: Tensor[(2160), int64]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), uint8], Tensor[(8, 11, 10), bool]) {
  %793 = @func_8269() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %794 = cast(meta[relay.Constant][44] /* ty=Tensor[(144), int64] */, dtype="int64") /* ty=Tensor[(144), int64] */;
  %795 = cast(meta[relay.Constant][45] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %796 = reshape(%794, newshape=[9, 16, 1]) /* ty=Tensor[(9, 16, 1), int64] */;
  %797 = reshape(%795, newshape=[9, 16, 15]) /* ty=Tensor[(9, 16, 15), int64] */;
  %798 = @func_1973(%796, %797) /* ty=(Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %799 = cast(%var_9108, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %800 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(2160), int64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %801 = cast(meta[relay.Constant][45] /* ty=Tensor[(2160), int64] */, dtype="uint8") /* ty=Tensor[(2160), uint8] */;
  %802 = dyn.reshape(%799, %800, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %803 = @func_7808() /* ty=Tensor[(8, 11, 10), float32] */;
  %804 = cast(%803, dtype="bool") /* ty=Tensor[(8, 11, 10), bool] */;
  %805 = reshape(%804, newshape=[8, 11, 10]) /* ty=Tensor[(8, 11, 10), bool] */;
  %806 = @func_1211(%805) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */;
  %807 = %793.0;
  %808 = %798.2;
  %809 = multiply(%801, %802) /* ty=Tensor[(2160), uint8] */;
  %810 = %806.0;
  (%807, %803, %808, meta[relay.Constant][44] /* ty=Tensor[(144), int64] */, %809, %810)
}

def @func_1064(%var_1058: Tensor[(11, 12, 14), bool], %var_1059: Tensor[(11, 12, 14), bool], %var_1060: float32, %var_1061: Tensor[(1, 2880), float32], %var_1062: Tensor[(210), float64], %var_1063: Tensor[(156), int32]) -> (Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) {
  %855 = fn (%var_985: Tensor[(11, 12, 14), bool], %var_986: Tensor[(11, 12, 14), bool], %var_991: float32, %var_992: Tensor[(1, 2880), float32], %var_1043: Tensor[(210), float64], %var_1053: Tensor[(156), int32]) -> (Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) {
    %811 = cast(%var_991, dtype="float32") /* ty=float32 */;
    %812 = cast(%var_992, dtype="float32") /* ty=Tensor[(1, 2880), float32] */;
    %813 = reshape(%811, newshape=[]) /* ty=float32 */;
    %814 = reshape(%812, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
    %815 = @func_749(%813, %814) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
    %816 = cast(%var_991, dtype="float32") /* ty=float32 */;
    %817 = cast(%var_992, dtype="float32") /* ty=Tensor[(1, 2880), float32] */;
    %818 = reshape(%816, newshape=[]) /* ty=float32 */;
    %819 = reshape(%817, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
    %820 = @func_749(%818, %819) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
    %821 = cast(%var_985, dtype="float32") /* ty=Tensor[(11, 12, 14), float32] */;
    %822 = erf(%821) /* ty=Tensor[(11, 12, 14), float32] */;
    %823 = cast(meta[relay.Constant][46] /* ty=Tensor[(11, 12, 14), float32] */, dtype="float64") /* ty=Tensor[(11, 12, 14), float64] */;
    %824 = shape_of(%822, dtype="int32") /* ty=Tensor[(3), int32] */;
    %825 = cast(%822, dtype="float64") /* ty=Tensor[(11, 12, 14), float64] */;
    %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %827 = cast(%var_991, dtype="float32") /* ty=float32 */;
    %828 = %820.0;
    %829 = cast(%828, dtype="float32") /* ty=Tensor[(12, 16, 15), float32] */;
    %830 = reshape(%827, newshape=[]) /* ty=float32 */;
    %831 = reshape(%829, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
    %832 = @func_749(%830, %831) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
    %833 = cast(%var_1043, dtype="float64") /* ty=Tensor[(210), float64] */;
    %834 = cast(%var_1043, dtype="float64") /* ty=Tensor[(210), float64] */;
    %835 = reshape(%833, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
    %836 = reshape(%834, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
    %837 = @func_973(%835, %836) /* ty=(Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
    %838 = cast(%var_1053, dtype="int32") /* ty=Tensor[(156), int32] */;
    %839 = cast(%var_1053, dtype="int32") /* ty=Tensor[(156), int32] */;
    %840 = reshape(%838, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
    %841 = reshape(%839, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
    %842 = @func_583(%840, %841) /* ty=(Tensor[(13, 3, 4), int32],) */;
    %843 = cast(%var_986, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
    %844 = shape_of(%var_985, dtype="int32") /* ty=Tensor[(3), int32] */;
    %845 = cast(%var_985, dtype="bool") /* ty=Tensor[(11, 12, 14), bool] */;
    %846 = dyn.reshape(%843, %844, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %847 = logical_or(%845, %846) /* ty=Tensor[(11, 12, 14), bool] */;
    %848 = cast(%847, dtype="float32") /* ty=Tensor[(11, 12, 14), float32] */;
    %849 = %815.2;
    %850 = divide(%825, %826) /* ty=Tensor[(11, 12, 14), float64] */;
    %851 = %832.1;
    %852 = %837.0;
    %853 = %842.0;
    %854 = atan(%848) /* ty=Tensor[(11, 12, 14), float32] */;
    (%849, %var_991, %var_992, %828, %850, %851, %852, %var_1043, %853, %var_1053, %854)
  };
  %855(%var_1058, %var_1059, %var_1060, %var_1061, %var_1062, %var_1063) /* ty=(Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) */
}

def @func_12448() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  @func_12446() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */
}

def @func_3567() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_8848() -> Tensor[(8, 11, 10), float32] {
  %856 = fn () -> Tensor[(8, 11, 10), float32] {
    @func_2923() /* ty=Tensor[(8, 11, 10), float32] */
  };
  %856() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_2925() -> Tensor[(8, 11, 10), float32] {
  @func_2923() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_13373() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float32]) {
  @func_13371() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float32]) */
}

def @func_8352() -> (Tensor[(8, 11, 10), bool],) {
  %857 = @func_2896() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %858 = %857.0;
  (%858,)
}

def @func_1977(%var_1975: Tensor[(9, 16, 1), int64], %var_1976: Tensor[(9, 16, 15), int64]) -> (Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_1973(%var_1975, %var_1976) /* ty=(Tensor[(9, 16, 15), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_9830(%var_9814: Tensor[(14, 2, 15), float32]) -> (Tensor[(14, 2, 15), float32], Tensor[(14, 2, 15), float32], Tensor[(8, 11, 10), float64], Tensor[(14, 2, 15), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %859 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
  %860 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(14, 2, 15), float32] */;
  %861 = @func_6173() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %862 = cast(%var_9814, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %863 = shape_of(meta[relay.Constant][47] /* ty=Tensor[(14, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %864 = cast(meta[relay.Constant][47] /* ty=Tensor[(14, 2, 15), float32] */, dtype="bool") /* ty=Tensor[(14, 2, 15), bool] */;
  %865 = dyn.reshape(%862, %863, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %866 = @func_9502() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %867 = atan(%859) /* ty=Tensor[(14, 2, 15), float32] */;
  %868 = log2(%860) /* ty=Tensor[(14, 2, 15), float32] */;
  %869 = %861.0;
  %870 = greater_equal(%864, %865) /* ty=Tensor[(14, 2, 15), bool] */;
  %871 = %866.0;
  %872 = @func_4801() /* ty=Tensor[(8, 11, 10), bool] */;
  (%867, %868, %869, %870, %871, %872)
}

def @func_2415() -> (Tensor[(8, 11, 10), float64],) {
  %877 = fn () -> (Tensor[(8, 11, 10), float64],) {
    %873 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %874 = %873.0;
    %875 = cast(%874, dtype="float64") /* ty=Tensor[(8, 11, 10), float64] */;
    %876 = sin(%875) /* ty=Tensor[(8, 11, 10), float64] */;
    (%876,)
  };
  %877() /* ty=(Tensor[(8, 11, 10), float64],) */
}

def @func_12692() -> (Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) {
  @func_12690() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) */
}

def @func_10913() -> (Tensor[(8, 11, 10), float64], Tensor[(15, 16, 4), float64]) {
  %878 = @func_2414() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %879 = @func_3139() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %880 = %878.0;
  %881 = %879.0;
  (%880, %881)
}

def @func_7992() -> (Tensor[(8, 11, 10), float32], Tensor[(156), float32]) {
  %887 = fn () -> (Tensor[(8, 11, 10), float32], Tensor[(156), float32]) {
    %882 = @func_7157() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %883 = %882.0;
    %884 = cast(%883, dtype="float32") /* ty=Tensor[(8, 11, 10), float32] */;
    %885 = exp(%884) /* ty=Tensor[(8, 11, 10), float32] */;
    %886 = @func_3795() /* ty=Tensor[(156), float32] */;
    (%885, %886)
  };
  %887() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(156), float32]) */
}

def @func_5003(%var_5001: Tensor[(7, 13, 13), bool], %var_5002: Tensor[(7, 13, 13), bool]) -> (Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) {
  %902 = fn (%var_4903: Tensor[(7, 13, 13), bool], %var_4904: Tensor[(7, 13, 13), bool]) -> (Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) {
    %888 = cast(%var_4904, dtype="bool") /* ty=Tensor[(7, 13, 13), bool] */;
    %889 = shape_of(%var_4903, dtype="int32") /* ty=Tensor[(3), int32] */;
    %890 = cast(%var_4903, dtype="bool") /* ty=Tensor[(7, 13, 13), bool] */;
    %891 = dyn.reshape(%888, %889, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %892 = @func_3116() /* ty=(Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) */;
    %893 = cast(meta[relay.Constant][48] /* ty=Tensor[(616, 2), float32] */, dtype="float32") /* ty=Tensor[(616, 2), float32] */;
    %894 = reshape(%893, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
    %895 = @func_3866(%894) /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(210), float64], Tensor[(8, 11, 10), bool], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
    %896 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
    %897 = logical_and(%890, %891) /* ty=Tensor[(7, 13, 13), bool] */;
    %898 = @func_2321() /* ty=Tensor[(8, 11, 10), bool] */;
    %899 = %892.2;
    %900 = %895.5;
    %901 = %896.0;
    (%897, %898, %899, %900, meta[relay.Constant][48] /* ty=Tensor[(616, 2), float32] */, %901)
  };
  %902(%var_5001, %var_5002) /* ty=(Tensor[(7, 13, 13), bool], Tensor[(8, 11, 10), bool], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(616, 2), float32], Tensor[(15, 16, 4), float64]) */
}

def @func_1284(%var_1282: Tensor[(6, 308), bool], %var_1283: Tensor[(156), int32]) -> (Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) {
  %918 = fn (%var_1271: Tensor[(6, 308), bool], %var_1275: Tensor[(156), int32]) -> (Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) {
    %903 = cast(%var_1271, dtype="bool") /* ty=Tensor[(6, 308), bool] */;
    %904 = cast(%var_1271, dtype="bool") /* ty=Tensor[(6, 308), bool] */;
    %905 = cast(4.35489f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %906 = cast(meta[relay.Constant][49] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
    %907 = cast(meta[relay.Constant][50] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %908 = cast(%var_1275, dtype="int32") /* ty=Tensor[(156), int32] */;
    %909 = reshape(%903, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
    %910 = reshape(%904, newshape=[11, 12, 14]) /* ty=Tensor[(11, 12, 14), bool] */;
    %911 = reshape(%905, newshape=[]) /* ty=float32 */;
    %912 = reshape(%906, newshape=[1, 2880]) /* ty=Tensor[(1, 2880), float32] */;
    %913 = reshape(%907, newshape=[210]) /* ty=Tensor[(210), float64] */;
    %914 = reshape(%908, newshape=[156]) /* ty=Tensor[(156), int32] */;
    %915 = @func_1057(%909, %910, %911, %912, %913, %914) /* ty=(Tensor[(72), float32], float32, Tensor[(1, 2880), float32], Tensor[(12, 16, 15), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 3, 4), float32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(11, 12, 14), float32]) */;
    %916 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    %917 = %915.4;
    (%916, %917, %var_1271, 4.35489f /* ty=float32 */, meta[relay.Constant][49] /* ty=Tensor[(2880), float32] */, meta[relay.Constant][50] /* ty=Tensor[(210), float64] */, %var_1275)
  };
  %918(%var_1282, %var_1283) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(11, 12, 14), float64], Tensor[(6, 308), bool], float32, Tensor[(2880), float32], Tensor[(210), float64], Tensor[(156), int32]) */
}

def @func_6315() -> (Tensor[(8, 11, 10), float64],) {
  @func_6313() /* ty=(Tensor[(8, 11, 10), float64],) */
}

def @func_12849(%var_12847: Tensor[(15, 16, 4), float64]) -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), bool], Tensor[(8, 11, 10), float64]) {
  @func_12846(%var_12847) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), bool], Tensor[(8, 11, 10), float64]) */
}

def @func_12469() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %919 = @func_11764() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %920 = %919.2;
  %921 = @func_1513() /* ty=Tensor[(8, 11, 10), bool] */;
  (%920, %921)
}

def @func_1129() -> (Tensor[(8, 11, 10), bool],) {
  %923 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %922 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    (%922,)
  };
  %923() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_1610() -> Tensor[(8, 11, 10), bool] {
  @func_1608() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_3400() -> Tensor[(210), float64] {
  %924 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
  %924.1
}

def @func_4699() -> (Tensor[(1, 1232), float32],) {
  @func_4697() /* ty=(Tensor[(1, 1232), float32],) */
}

def @func_14162(%var_14160: Tensor[(13, 91), bool]) -> (Tensor[(156), float32], Tensor[(15, 16, 4), float64], Tensor[(13, 91), bool]) {
  @func_14159(%var_14160) /* ty=(Tensor[(156), float32], Tensor[(15, 16, 4), float64], Tensor[(13, 91), bool]) */
}

def @func_13169() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_13167() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_5692() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %929 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %925 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %926 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %927 = %925.1;
    %928 = %926.0;
    (%927, %928)
  };
  %929() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_5612() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(13, 3, 4), int32], Tensor[(156), int32]) {
  @func_5610() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(13, 3, 4), int32], Tensor[(156), int32]) */
}

def @func_7114() -> (Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) {
  %932 = fn () -> (Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) {
    %930 = @func_3342() /* ty=Tensor[(8, 11, 10), float64] */;
    %931 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
    (%930, %931)
  };
  %932() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) */
}

def @func_11817() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_11815() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_10564() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64]) {
  %933 = @func_9714() /* ty=(Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(2, 12, 4), float32], Tensor[(8, 11, 10), float32]) */;
  %934 = %933.1;
  %935 = @func_8942() /* ty=Tensor[(8, 11, 10), float64] */;
  (%934, %935)
}

def @func_10123() -> (Tensor[(8, 11, 10), bool],) {
  %938 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %936 = @func_8269() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
    %937 = %936.0;
    (%937,)
  };
  %938() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_4787() -> Tensor[(8, 11, 10), bool] {
  @func_4317() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4482(%var_4481: Tensor[(13, 11, 3), float32]) -> (Tensor[(13, 11, 3), float32],) {
  %941 = fn (%var_4453: Tensor[(13, 11, 3), float32]) -> (Tensor[(13, 11, 3), float32],) {
    %939 = cast(%var_4453, dtype="float32") /* ty=Tensor[(13, 11, 3), float32] */;
    %940 = acosh(%939) /* ty=Tensor[(13, 11, 3), float32] */;
    (%940,)
  };
  %941(%var_4481) /* ty=(Tensor[(13, 11, 3), float32],) */
}

def @func_13420(%var_13418: Tensor[(11, 14, 9), uint64], %var_13419: Tensor[(11, 14, 9), uint64]) -> (Tensor[(11, 14, 9), float64],) {
  @func_13416(%var_13418, %var_13419) /* ty=(Tensor[(11, 14, 9), float64],) */
}

def @func_6305() -> Tensor[(8, 11, 10), bool] {
  %943 = fn () -> Tensor[(8, 11, 10), bool] {
    %942 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
    %942.2
  };
  %943() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_2461() -> Tensor[(8, 11, 10), bool] {
  %945 = fn () -> Tensor[(8, 11, 10), bool] {
    %944 = @func_1673() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %944.0
  };
  %945() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_5521(%var_5470: Tensor[(13, 5, 3), float64]) -> (Tensor[(13, 5, 3), bool], Tensor[(8, 11, 10), bool]) {
  %946 = cast(meta[relay.Constant][51] /* ty=Tensor[(13, 5, 1), float64] */, dtype="float64") /* ty=Tensor[(13, 5, 1), float64] */;
  %947 = cast(%var_5470, dtype="float64") /* ty=Tensor[(13, 5, 3), float64] */;
  %948 = floor_divide(%946, %947) /* ty=Tensor[(13, 5, 3), float64] */;
  %949 = cast(meta[relay.Constant][51] /* ty=Tensor[(13, 5, 1), float64] */, dtype="bool") /* ty=Tensor[(13, 5, 1), bool] */;
  %950 = cast(%948, dtype="bool") /* ty=Tensor[(13, 5, 3), bool] */;
  %951 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %952 = not_equal(%949, %950) /* ty=Tensor[(13, 5, 3), bool] */;
  %953 = %951.0;
  (%952, %953)
}

def @func_9538() -> Tensor[(8, 11, 10), bool] {
  @func_9536() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_3379() -> (Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64]) {
  @func_3377() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64]) */
}

def @func_1430() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) {
  %959 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) {
    %954 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 1232), float32] */, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
    %955 = reshape(%954, newshape=[14, 8, 11]) /* ty=Tensor[(14, 8, 11), float32] */;
    %956 = @func_1309(%955) /* ty=(Tensor[(14, 8, 11), float32],) */;
    %957 = @func_1121() /* ty=Tensor[(8, 11, 10), bool] */;
    %958 = %956.0;
    (%957, %958, meta[relay.Constant][52] /* ty=Tensor[(1, 1232), float32] */)
  };
  %959() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */
}

def @func_7041(%var_7039: Tensor[(60, 36), int64]) -> (Tensor[(14, 8, 11), float32], Tensor[(60, 36), bool], Tensor[(8, 11, 10), bool]) {
  @func_7038(%var_7039) /* ty=(Tensor[(14, 8, 11), float32], Tensor[(60, 36), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_13602() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(1232), float32], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  @func_13600() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(1232), float32], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) */
}

def @func_4789() -> Tensor[(8, 11, 10), bool] {
  @func_4787() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_13500() -> (Tensor[(8, 11, 10), float32],) {
  %960 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %961 = %960.0;
  (%961,)
}

def @func_1926(%var_1896: Tensor[(14, 8, 11), float32]) -> Tensor[(14, 8, 11), uint32] {
  %962 = @func_1429() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1, 1232), float32]) */;
  %963 = %962.1;
  %964 = cast(%var_1896, dtype="uint32") /* ty=Tensor[(14, 8, 11), uint32] */;
  %965 = shape_of(%963, dtype="int32") /* ty=Tensor[(3), int32] */;
  %966 = cast(%963, dtype="uint32") /* ty=Tensor[(14, 8, 11), uint32] */;
  %967 = dyn.reshape(%964, %965, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%966, %967) /* ty=Tensor[(14, 8, 11), uint32] */
}

def @func_2771() -> (Tensor[(15, 16, 4), float64],) {
  %968 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %969 = %968.0;
  (%969,)
}

def @func_10041(%var_10039: uint64, %var_10040: Tensor[(195), float64]) -> (Tensor[(14, 12, 6), bool], Tensor[(4, 1, 3), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(195), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  @func_10037(%var_10039, %var_10040) /* ty=(Tensor[(14, 12, 6), bool], Tensor[(4, 1, 3), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(195), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_5784() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %970 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %971 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
  %972 = %970.0;
  (%971, %972)
}

def @func_11764() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %973 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %974 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %975 = @func_8768() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %976 = @func_11110() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %977 = %973.0;
  %978 = %974.0;
  %979 = %975.0;
  %980 = %976.0;
  (%977, %978, %979, %980)
}

def @func_6040() -> (Tensor[(8, 11, 10), float64],) {
  @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */
}

def @func_10593(%var_10592: Tensor[(10, 13, 7), float32]) -> (Tensor[(10, 13, 7), float32],) {
  %983 = fn (%var_10586: Tensor[(10, 13, 7), float32]) -> (Tensor[(10, 13, 7), float32],) {
    %981 = cast(%var_10586, dtype="float32") /* ty=Tensor[(10, 13, 7), float32] */;
    %982 = acosh(%981) /* ty=Tensor[(10, 13, 7), float32] */;
    (%982,)
  };
  %983(%var_10592) /* ty=(Tensor[(10, 13, 7), float32],) */
}

def @func_5110() -> Tensor[(8, 11, 10), uint32] {
  @func_5108() /* ty=Tensor[(8, 11, 10), uint32] */
}

def @func_8154() -> (Tensor[(3, 12, 10), float64],) {
  @func_8152() /* ty=(Tensor[(3, 12, 10), float64],) */
}

def @func_10070() -> (Tensor[(8, 11, 10), float32],) {
  @func_10068() /* ty=(Tensor[(8, 11, 10), float32],) */
}

def @func_2865(%var_2863: Tensor[(1232), float32], %var_2864: Tensor[(2880), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), uint32], Tensor[(1232), float32], Tensor[(2160), int64], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(8, 11, 10), bool]) {
  @func_2861(%var_2863, %var_2864) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), uint32], Tensor[(1232), float32], Tensor[(2160), int64], Tensor[(72), float32], float32, Tensor[(2880), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_7305() -> (Tensor[(6, 3, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_7303() /* ty=(Tensor[(6, 3, 4), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_13633(%var_13631: Tensor[(2, 1, 16), int8], %var_13632: Tensor[(2, 1, 16), int8]) -> (Tensor[(2, ?, 16), int8], Tensor[(8, 11, 10), bool]) {
  %990 = fn (%var_13608: Tensor[(2, 1, 16), int8], %var_13609: Tensor[(2, 1, 16), int8]) -> (Tensor[(2, ?, 16), int8], Tensor[(8, 11, 10), bool]) {
    %984 = cast(%var_13609, dtype="int8") /* ty=Tensor[(2, 1, 16), int8] */;
    %985 = shape_of(%var_13608, dtype="int32") /* ty=Tensor[(3), int32] */;
    %986 = cast(%var_13608, dtype="int8") /* ty=Tensor[(2, 1, 16), int8] */;
    %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %988 = bitwise_or(%986, %987) /* ty=Tensor[(2, ?, 16), int8] */;
    %989 = @func_9308() /* ty=Tensor[(8, 11, 10), bool] */;
    (%988, %989)
  };
  %990(%var_13631, %var_13632) /* ty=(Tensor[(2, ?, 16), int8], Tensor[(8, 11, 10), bool]) */
}

def @func_1514() -> Tensor[(8, 11, 10), bool] {
  %992 = fn () -> Tensor[(8, 11, 10), bool] {
    %991 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %991.0
  };
  %992() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_5862() -> (Tensor[(156), float32], Tensor[(8, 11, 10), bool]) {
  %995 = fn () -> (Tensor[(156), float32], Tensor[(8, 11, 10), bool]) {
    %993 = @func_3795() /* ty=Tensor[(156), float32] */;
    %994 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
    (%993, %994)
  };
  %995() /* ty=(Tensor[(156), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_3117() -> (Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) {
  %1006 = fn () -> (Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) {
    %996 = @func_2097() /* ty=Tensor[(8, 11, 10), float32] */;
    %997 = cast(meta[relay.Constant][53] /* ty=Tensor[(8, 11, 10), float32] */, dtype="uint32") /* ty=Tensor[(8, 11, 10), uint32] */;
    %998 = shape_of(%996, dtype="int32") /* ty=Tensor[(3), int32] */;
    %999 = cast(%996, dtype="uint32") /* ty=Tensor[(8, 11, 10), uint32] */;
    %1000 = dyn.reshape(%997, %998, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %1001 = cast(meta[relay.Constant][54] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1002 = reshape(%1001, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
    %1003 = @func_1252(%1002) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
    %1004 = bitwise_and(%999, %1000) /* ty=Tensor[(8, 11, 10), uint32] */;
    %1005 = %1003.6;
    (%1004, %1005, meta[relay.Constant][54] /* ty=Tensor[(156), float32] */)
  };
  %1006() /* ty=(Tensor[(8, 11, 10), uint32], float32, Tensor[(156), float32]) */
}

def @func_6397() -> (Tensor[(8, 11, 10), bool], Tensor[(7, 10, 15), int64]) {
  %1016 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(7, 10, 15), int64]) {
    %1007 = @func_2162() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) */;
    %1008 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 10, 15), float32] */, dtype="float32") /* ty=Tensor[(7, 10, 15), float32] */;
    %1009 = sinh(%1008) /* ty=Tensor[(7, 10, 15), float32] */;
    %1010 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 10, 15), float32] */, dtype="int64") /* ty=Tensor[(7, 10, 15), int64] */;
    %1011 = shape_of(%1009, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1012 = cast(%1009, dtype="int64") /* ty=Tensor[(7, 10, 15), int64] */;
    %1013 = dyn.reshape(%1010, %1011, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %1014 = %1007.2;
    %1015 = bitwise_or(%1012, %1013) /* ty=Tensor[(7, 10, 15), int64] */;
    (%1014, %1015)
  };
  %1016() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(7, 10, 15), int64]) */
}

def @func_1695() -> Tensor[(8, 11, 10), bool] {
  @func_1693() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_2516(%var_2514: Tensor[(2, 13, 1), float64], %var_2515: Tensor[(2, 13, 1), float64]) -> (Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) {
  @func_2512(%var_2514, %var_2515) /* ty=(Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) */
}

def @func_12299() -> Tensor[(8, 11, 10), bool] {
  @func_12297() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_13088() -> (Tensor[(1, 1232), float32], Tensor[(60, 36), bool], Tensor[(2160), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1183), bool], Tensor[(1183), bool]) {
  %1031 = fn () -> (Tensor[(1, 1232), float32], Tensor[(60, 36), bool], Tensor[(2160), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1183), bool], Tensor[(1183), bool]) {
    %1017 = @func_4350() /* ty=(Tensor[(1, 1232), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(60, 36), int64], Tensor[(15, 16, 4), float64]) */;
    %1018 = cast(meta[relay.Constant][56] /* ty=Tensor[(2160), int64] */, dtype="int64") /* ty=Tensor[(2160), int64] */;
    %1019 = reshape(%1018, newshape=[60, 36]) /* ty=Tensor[(60, 36), int64] */;
    %1020 = @func_7038(%1019) /* ty=(Tensor[(14, 8, 11), float32], Tensor[(60, 36), bool], Tensor[(8, 11, 10), bool]) */;
    %1021 = @func_2212() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %1022 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %1023 = cast(meta[relay.Constant][57] /* ty=Tensor[(1183), bool] */, dtype="bool") /* ty=Tensor[(1183), bool] */;
    %1024 = reshape(%1023, newshape=[1183]) /* ty=Tensor[(1183), bool] */;
    %1025 = @func_6545(%1024) /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(1183), bool], Tensor[(10, 9, 12), int64], Tensor[(270, 4), int64], Tensor[(8, 11, 10), uint32]) */;
    %1026 = %1017.0;
    %1027 = %1020.1;
    %1028 = %1021.1;
    %1029 = %1022.0;
    %1030 = %1025.2;
    (%1026, %1027, meta[relay.Constant][56] /* ty=Tensor[(2160), int64] */, %1028, %1029, %1030, meta[relay.Constant][57] /* ty=Tensor[(1183), bool] */)
  };
  %1031() /* ty=(Tensor[(1, 1232), float32], Tensor[(60, 36), bool], Tensor[(2160), int64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(1183), bool], Tensor[(1183), bool]) */
}

def @func_3712() -> Tensor[(8, 11, 10), bool] {
  @func_3710() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_6060(%var_6047: Tensor[(10, 9, 12), int64]) -> (Tensor[(10, 9, 12), int64],) {
  %1032 = cast(meta[relay.Constant][58] /* ty=Tensor[(1, 9, 12), int64] */, dtype="int64") /* ty=Tensor[(1, 9, 12), int64] */;
  %1033 = cast(%var_6047, dtype="int64") /* ty=Tensor[(10, 9, 12), int64] */;
  %1034 = subtract(%1032, %1033) /* ty=Tensor[(10, 9, 12), int64] */;
  (%1034,)
}

def @func_8057() -> Tensor[(8, 11, 10), bool] {
  %1036 = fn () -> Tensor[(8, 11, 10), bool] {
    %1035 = @func_3565() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %1035.1
  };
  %1036() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4802() -> Tensor[(8, 11, 10), bool] {
  %1038 = fn () -> Tensor[(8, 11, 10), bool] {
    %1037 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
    %1037.1
  };
  %1038() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_7251() -> (Tensor[(8, 11, 10), bool],) {
  %1040 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %1039 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
    (%1039,)
  };
  %1040() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_9463() -> (Tensor[(8, 11, 10), bool],) {
  %1041 = @func_4801() /* ty=Tensor[(8, 11, 10), bool] */;
  (%1041,)
}

def @func_5963(%var_5962: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) {
  %1056 = fn (%var_5958: Tensor[(1848), bool]) -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) {
    %1042 = @func_5691() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %1043 = cast(meta[relay.Constant][59] /* ty=Tensor[(156), float32] */, dtype="float32") /* ty=Tensor[(156), float32] */;
    %1044 = reshape(%1043, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), float32] */;
    %1045 = @func_1252(%1044) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) */;
    %1046 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
    %1047 = cast(%var_5958, dtype="bool") /* ty=Tensor[(1848), bool] */;
    %1048 = reshape(%1047, newshape=[1848]) /* ty=Tensor[(1848), bool] */;
    %1049 = @func_2749(%1048) /* ty=(Tensor[(1848), int64],) */;
    %1050 = %1042.1;
    %1051 = %1045.7;
    %1052 = @func_2132() /* ty=Tensor[(8, 11, 10), bool] */;
    %1053 = %1046.0;
    %1054 = @func_1584() /* ty=Tensor[(8, 11, 10), bool] */;
    %1055 = %1049.0;
    (%1050, %1051, meta[relay.Constant][59] /* ty=Tensor[(156), float32] */, %1052, %1053, %1054, %1055, %var_5958)
  };
  %1056(%var_5962) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), float32], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool], Tensor[(1848), int64], Tensor[(1848), bool]) */
}

def @func_753(%var_751: float32, %var_752: Tensor[(12, 16, 15), float32]) -> (Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  @func_749(%var_751, %var_752) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */
}

def @func_12237() -> (Tensor[(15, 16, 4), float64], Tensor[(1848), bool], Tensor[(2, 13, ?), float64], Tensor[(13, 2), float64]) {
  %1057 = @func_10682() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %1058 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
  %1059 = cast(meta[relay.Constant][60] /* ty=Tensor[(13, 2), float64] */, dtype="float64") /* ty=Tensor[(13, 2), float64] */;
  %1060 = reshape(%1058, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
  %1061 = reshape(%1059, newshape=[2, 13, 1]) /* ty=Tensor[(2, 13, 1), float64] */;
  %1062 = @func_2512(%1060, %1061) /* ty=(Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) */;
  %1063 = %1057.0;
  %1064 = @func_9625() /* ty=Tensor[(1848), bool] */;
  %1065 = %1062.0;
  (%1063, %1064, %1065, meta[relay.Constant][60] /* ty=Tensor[(13, 2), float64] */)
}

def @func_6017(%var_6005: Tensor[(8, 7, 4), float64]) -> (Tensor[(8, 7, 4), float64], Tensor[(8, 11, 10), bool]) {
  %1066 = cast(meta[relay.Constant][61] /* ty=Tensor[(8, 7, 4), float64] */, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %1067 = shape_of(%var_6005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1068 = cast(%var_6005, dtype="float64") /* ty=Tensor[(8, 7, 4), float64] */;
  %1069 = dyn.reshape(%1066, %1067, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1070 = @func_3301() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1071 = mod(%1068, %1069) /* ty=Tensor[(8, 7, 4), float64] */;
  %1072 = %1070.0;
  (%1071, %1072)
}

def @func_8184() -> (Tensor[(8, 11, 10), bool],) {
  %1075 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %1073 = @func_5784() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %1074 = %1073.0;
    (%1074,)
  };
  %1075() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_587(%var_585: Tensor[(13, 3, 4), int32], %var_586: Tensor[(13, 3, 4), int32]) -> (Tensor[(13, 3, 4), int32],) {
  @func_583(%var_585, %var_586) /* ty=(Tensor[(13, 3, 4), int32],) */
}

def @func_10971() -> Tensor[(8, 11, 10), bool] {
  %1077 = fn () -> Tensor[(8, 11, 10), bool] {
    %1076 = @func_5182() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %1076.1
  };
  %1077() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_9625() -> Tensor[(1848), bool] {
  %1078 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
  %1078.2
}

def @func_6313() -> (Tensor[(8, 11, 10), float64],) {
  %1079 = @func_6038() /* ty=(Tensor[(8, 11, 10), float64],) */;
  %1080 = %1079.0;
  (%1080,)
}

def @func_11591() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %1081 = @func_11482() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1082 = @func_4046() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1232), float32]) */;
  %1083 = %1081.0;
  %1084 = %1082.2;
  (%1083, %1084)
}

def @func_10176() -> Tensor[(8, 11, 10), bool] {
  @func_10174() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_7810() -> Tensor[(8, 11, 10), float32] {
  @func_7808() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_11344() -> (Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %1094 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %1085 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %1086 = @func_10682() /* ty=(Tensor[(15, 16, 4), float64],) */;
    %1087 = @func_8862() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %1088 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %1089 = %1085.1;
    %1090 = %1086.0;
    %1091 = %1087.0;
    %1092 = %1088.0;
    %1093 = @func_8056() /* ty=Tensor[(8, 11, 10), bool] */;
    (%1089, %1090, %1091, %1092, %1093)
  };
  %1094() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_6020(%var_6018: Tensor[(8, 7, 4), float64]) -> (Tensor[(8, 7, 4), float64], Tensor[(8, 11, 10), bool]) {
  @func_6017(%var_6018) /* ty=(Tensor[(8, 7, 4), float64], Tensor[(8, 11, 10), bool]) */
}

def @func_3797() -> Tensor[(156), float32] {
  @func_3795() /* ty=Tensor[(156), float32] */
}

def @func_8127() -> (Tensor[(156), float32],) {
  %1095 = @func_2678() /* ty=(Tensor[(156), float32], Tensor[(210), float64], Tensor[(1848), bool]) */;
  %1096 = %1095.0;
  (%1096,)
}

def @func_8354() -> (Tensor[(8, 11, 10), bool],) {
  @func_8352() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_10915() -> (Tensor[(8, 11, 10), float64], Tensor[(15, 16, 4), float64]) {
  @func_10913() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(15, 16, 4), float64]) */
}

def @func_11901() -> (Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) {
  @func_11899() /* ty=(Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), float32]) */
}

def @func_13452() -> Tensor[(1, 1232), float32] {
  %1097 = @func_4697() /* ty=(Tensor[(1, 1232), float32],) */;
  %1098 = %1097.0;
  %1099 = cast(%1098, dtype="float32") /* ty=Tensor[(1, 1232), float32] */;
  sigmoid(%1099) /* ty=Tensor[(1, 1232), float32] */
}

def @func_6352() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %1102 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
    %1100 = @func_3785() /* ty=Tensor[(8, 11, 10), bool] */;
    %1101 = @func_2132() /* ty=Tensor[(8, 11, 10), bool] */;
    (%1100, %1101)
  };
  %1102() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_7517() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64]) {
  %1103 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1104 = @func_3992() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */;
  %1105 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
  %1106 = @func_2236() /* ty=Tensor[(8, 11, 10), bool] */;
  %1107 = %1103.0;
  %1108 = %1104.1;
  %1109 = %1105.0;
  (%1106, %1107, %1108, %1109)
}

def @func_13283() -> (Tensor[(8, 11, 10), bool], Tensor[(7, 1, 12), float64], Tensor[(8, 11, 10), float64], Tensor[(8, 11, 10), bool]) {
  %1110 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1111 = @func_9026() /* ty=(Tensor[(7, 1, 12), uint16], Tensor[(8, 11, 10), bool]) */;
  %1112 = %1111.0;
  %1113 = cast(%1112, dtype="float64") /* ty=Tensor[(7, 1, 12), float64] */;
  %1114 = @func_3377() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), float64]) */;
  %1115 = %1110.1;
  %1116 = asin(%1113) /* ty=Tensor[(7, 1, 12), float64] */;
  %1117 = %1114.1;
  %1118 = @func_4317() /* ty=Tensor[(8, 11, 10), bool] */;
  (%1115, %1116, %1117, %1118)
}

def @func_5524(%var_5522: Tensor[(13, 5, 3), float64]) -> (Tensor[(13, 5, 3), bool], Tensor[(8, 11, 10), bool]) {
  @func_5521(%var_5522) /* ty=(Tensor[(13, 5, 3), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_7446() -> (Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), int32], Tensor[(1848), float64], Tensor[(1848), int16], Tensor[(1848), uint16]) {
  @func_7444() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), int32], Tensor[(1848), float64], Tensor[(1848), int16], Tensor[(1848), uint16]) */
}

def @func_8697() -> (Tensor[(8, 11, 10), bool],) {
  %1120 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %1119 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_13928() -> Tensor[(8, 11, 10), bool] {
  @func_13926() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_13960() -> Tensor[(8, 11, 10), bool] {
  @func_13958() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_10809() -> (Tensor[(8, 11, 10), bool],) {
  @func_10807() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_3263() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */
}

def @func_10282() -> Tensor[(8, 11, 10), bool] {
  %1121 = @func_3261() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) */;
  %1121.0
}

def @func_6921() -> Tensor[(15, 16, 4), float64] {
  @func_6919() /* ty=Tensor[(15, 16, 4), float64] */
}

def @main() -> Tensor[(9, 12, 12), bool] {
  %1122 = cast(meta[relay.Constant][63] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %1123 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1124 = cast(meta[relay.Constant][62] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="bool") /* ty=Tensor[(9, 12, 12), bool] */;
  %1125 = dyn.reshape(%1122, %1123, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%1124, %1125) /* ty=Tensor[(9, 12, 12), bool] */
}

def @func_1929(%var_1927: Tensor[(14, 8, 11), float32]) -> Tensor[(14, 8, 11), uint32] {
  @func_1926(%var_1927) /* ty=Tensor[(14, 8, 11), uint32] */
}

def @func_2512(%var_2467: Tensor[(2, 13, 1), float64], %var_2468: Tensor[(2, 13, 1), float64]) -> (Tensor[(2, 13, ?), float64], Tensor[(6, 3, 4), float32], Tensor[(22, 2), float32]) {
  %1126 = cast(%var_2468, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
  %1127 = shape_of(%var_2467, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1128 = cast(%var_2467, dtype="float64") /* ty=Tensor[(2, 13, 1), float64] */;
  %1129 = dyn.reshape(%1126, %1127, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1130 = cast(meta[relay.Constant][64] /* ty=Tensor[(22, 2), float32] */, dtype="float32") /* ty=Tensor[(22, 2), float32] */;
  %1131 = reshape(%1130, newshape=[4, 1, 11]) /* ty=Tensor[(4, 1, 11), float32] */;
  %1132 = @func_887(%1131) /* ty=(Tensor[(13, 3, 4), int32], Tensor[(156), int32], Tensor[(4, ?, 11), uint32], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %1133 = divide(%1128, %1129) /* ty=Tensor[(2, 13, ?), float64] */;
  %1134 = %1132.3;
  (%1133, %1134, meta[relay.Constant][64] /* ty=Tensor[(22, 2), float32] */)
}

def @func_7158() -> (Tensor[(8, 11, 10), bool],) {
  %1137 = fn () -> (Tensor[(8, 11, 10), bool],) {
    %1135 = @func_3163() /* ty=(Tensor[(8, 11, 10), bool],) */;
    %1136 = %1135.0;
    (%1136,)
  };
  %1137() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_10807() -> (Tensor[(8, 11, 10), bool],) {
  %1138 = @func_6948() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1139 = %1138.1;
  (%1139,)
}

def @func_1252(%var_1234: Tensor[(13, 3, 4), float32]) -> (Tensor[(8, 11, 10), bool], Tensor[(156), int32], Tensor[(5, 7, 6), float64], Tensor[(210), float64], Tensor[(13, 3, 4), bool], Tensor[(12, 16, 15), bool], float32, Tensor[(2880), float32]) {
  %1140 = @func_1128() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1141 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1142 = cast(meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1143 = reshape(%1141, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %1144 = reshape(%1142, newshape=[5, 7, 6]) /* ty=Tensor[(5, 7, 6), float64] */;
  %1145 = @func_973(%1143, %1144) /* ty=(Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %1146 = cast(meta[relay.Constant][65] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %1147 = cast(meta[relay.Constant][65] /* ty=Tensor[(156), int32] */, dtype="int32") /* ty=Tensor[(156), int32] */;
  %1148 = reshape(%1146, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %1149 = reshape(%1147, newshape=[13, 3, 4]) /* ty=Tensor[(13, 3, 4), int32] */;
  %1150 = @func_583(%1148, %1149) /* ty=(Tensor[(13, 3, 4), int32],) */;
  %1151 = %1150.0;
  %1152 = cast(%1151, dtype="float32") /* ty=Tensor[(13, 3, 4), float32] */;
  %1153 = sinh(%1152) /* ty=Tensor[(13, 3, 4), float32] */;
  %1154 = cast(%var_1234, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %1155 = shape_of(%1153, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1156 = cast(%1153, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %1157 = dyn.reshape(%1154, %1155, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1158 = greater(%1156, %1157) /* ty=Tensor[(13, 3, 4), bool] */;
  %1159 = cast(%1153, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %1160 = shape_of(%1158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1161 = cast(%1158, dtype="bool") /* ty=Tensor[(13, 3, 4), bool] */;
  %1162 = dyn.reshape(%1159, %1160, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1163 = cast(3.54367f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %1164 = cast(meta[relay.Constant][67] /* ty=Tensor[(2880), float32] */, dtype="float32") /* ty=Tensor[(2880), float32] */;
  %1165 = reshape(%1163, newshape=[]) /* ty=float32 */;
  %1166 = reshape(%1164, newshape=[12, 16, 15]) /* ty=Tensor[(12, 16, 15), float32] */;
  %1167 = @func_749(%1165, %1166) /* ty=(Tensor[(12, 16, 15), bool], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */;
  %1168 = %1140.0;
  %1169 = %1145.0;
  %1170 = logical_and(%1161, %1162) /* ty=Tensor[(13, 3, 4), bool] */;
  %1171 = %1167.0;
  (%1168, meta[relay.Constant][65] /* ty=Tensor[(156), int32] */, %1169, meta[relay.Constant][66] /* ty=Tensor[(210), float64] */, %1170, %1171, 3.54367f /* ty=float32 */, meta[relay.Constant][67] /* ty=Tensor[(2880), float32] */)
}

def @func_7808() -> Tensor[(8, 11, 10), float32] {
  @func_3283() /* ty=Tensor[(8, 11, 10), float32] */
}

def @func_977(%var_975: Tensor[(5, 7, 6), float64], %var_976: Tensor[(5, 7, 6), float64]) -> (Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) {
  @func_973(%var_975, %var_976) /* ty=(Tensor[(5, 7, 6), float64], Tensor[(6, 3, 4), float32], Tensor[(72), float32]) */
}

def @func_8580() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32], Tensor[(6, 3, 4), float32]) {
  @func_8578() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32], Tensor[(6, 3, 4), float32]) */
}

def @func_13454() -> Tensor[(1, 1232), float32] {
  @func_13452() /* ty=Tensor[(1, 1232), float32] */
}

def @func_5184() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  @func_5182() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */
}

def @func_10037(%var_9970: uint64, %var_10021: Tensor[(195), float64]) -> (Tensor[(14, 12, 6), bool], Tensor[(4, 1, 3), float64], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(195), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool]) {
  %1172 = cast(%var_9970, dtype="bool") /* ty=bool */;
  %1173 = cast(meta[relay.Constant][68] /* ty=Tensor[(14, 12, 6), uint64] */, dtype="bool") /* ty=Tensor[(14, 12, 6), bool] */;
  %1174 = cast(%var_9970, dtype="float64") /* ty=float64 */;
  %1175 = cast(meta[relay.Constant][69] /* ty=Tensor[(4, 1, 3), uint64] */, dtype="float64") /* ty=Tensor[(4, 1, 3), float64] */;
  %1176 = divide(%1174, %1175) /* ty=Tensor[(4, 1, 3), float64] */;
  %1177 = cast(%1176, dtype="float64") /* ty=Tensor[(4, 1, 3), float64] */;
  %1178 = cast(%var_10021, dtype="float64") /* ty=Tensor[(195), float64] */;
  %1179 = reshape(%1178, newshape=[13, 5, 3]) /* ty=Tensor[(13, 5, 3), float64] */;
  %1180 = @func_5521(%1179) /* ty=(Tensor[(13, 5, 3), bool], Tensor[(8, 11, 10), bool]) */;
  %1181 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %1182 = @func_3058() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1183 = not_equal(%1172, %1173) /* ty=Tensor[(14, 12, 6), bool] */;
  %1184 = log2(%1177) /* ty=Tensor[(4, 1, 3), float64] */;
  %1185 = @func_9536() /* ty=Tensor[(8, 11, 10), bool] */;
  %1186 = %1180.1;
  %1187 = %1181.0;
  %1188 = %1182.0;
  (%1183, %1184, %1185, %1186, %var_10021, %1187, %1188)
}

def @func_10202(%var_10193: Tensor[(2160), int64]) -> (Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), int64]) {
  %1189 = @func_6351() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1190 = cast(%var_10193, dtype="int64") /* ty=Tensor[(2160), int64] */;
  %1191 = reshape(%1190, newshape=[2160]) /* ty=Tensor[(2160), int64] */;
  %1192 = @func_9139(%1191) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(144), int64], Tensor[(2160), uint8], Tensor[(8, 11, 10), bool]) */;
  %1193 = %1189.1;
  %1194 = %1192.3;
  (%1193, %1194, %var_10193)
}

def @func_6488() -> (Tensor[(8, 11, 10), float32],) {
  %1195 = @func_3026() /* ty=(Tensor[(8, 11, 10), float32],) */;
  %1196 = %1195.0;
  (%1196,)
}

def @func_6719() -> Tensor[(1848), bool] {
  %1198 = fn () -> Tensor[(1848), bool] {
    %1197 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
    %1197.2
  };
  %1198() /* ty=Tensor[(1848), bool] */
}

def @func_11533(%var_11532: Tensor[(16, 3, 9), bool]) -> (Tensor[(16, 3, 9), bool], Tensor[(8, 11, 10), float32]) {
  %1206 = fn (%var_11488: Tensor[(16, 3, 9), bool]) -> (Tensor[(16, 3, 9), bool], Tensor[(8, 11, 10), float32]) {
    %1199 = cast(%var_11488, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
    %1200 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(16, 3, 9), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1201 = cast(meta[relay.Constant][70] /* ty=Tensor[(16, 3, 9), bool] */, dtype="bool") /* ty=Tensor[(16, 3, 9), bool] */;
    %1202 = dyn.reshape(%1199, %1200, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %1203 = @func_6488() /* ty=(Tensor[(8, 11, 10), float32],) */;
    %1204 = logical_and(%1201, %1202) /* ty=Tensor[(16, 3, 9), bool] */;
    %1205 = %1203.0;
    (%1204, %1205)
  };
  %1206(%var_11532) /* ty=(Tensor[(16, 3, 9), bool], Tensor[(8, 11, 10), float32]) */
}

def @func_12269() -> Tensor[(8, 11, 10), bool] {
  %1208 = fn () -> Tensor[(8, 11, 10), bool] {
    %1207 = @func_6948() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
    %1207.0
  };
  %1208() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_2323() -> Tensor[(8, 11, 10), bool] {
  @func_2321() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_6174() -> (Tensor[(8, 11, 10), float64],) {
  %1211 = fn () -> (Tensor[(8, 11, 10), float64],) {
    %1209 = @func_2414() /* ty=(Tensor[(8, 11, 10), float64],) */;
    %1210 = %1209.0;
    (%1210,)
  };
  %1211() /* ty=(Tensor[(8, 11, 10), float64],) */
}

def @func_3565() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) {
  %1212 = @func_1351() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1213 = @func_1467() /* ty=(Tensor[(8, 11, 10), bool],) */;
  %1214 = %1212.0;
  %1215 = %1213.0;
  (%1214, %1215)
}

def @func_12485() -> Tensor[(8, 11, 10), bool] {
  %1216 = fn () -> Tensor[(8, 11, 10), bool] {
    @func_12268() /* ty=Tensor[(8, 11, 10), bool] */
  };
  %1216() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_5765() -> (Tensor[(8, 11, 10), bool],) {
  @func_5763() /* ty=(Tensor[(8, 11, 10), bool],) */
}

def @func_13416(%var_13404: Tensor[(11, 14, 9), uint64], %var_13405: Tensor[(11, 14, 9), uint64]) -> (Tensor[(11, 14, 9), float64],) {
  %1217 = cast(%var_13405, dtype="uint64") /* ty=Tensor[(11, 14, 9), uint64] */;
  %1218 = shape_of(%var_13404, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1219 = cast(%var_13404, dtype="uint64") /* ty=Tensor[(11, 14, 9), uint64] */;
  %1220 = dyn.reshape(%1217, %1218, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1221 = bitwise_or(%1219, %1220) /* ty=Tensor[(11, 14, 9), uint64] */;
  %1222 = cast(%1221, dtype="float64") /* ty=Tensor[(11, 14, 9), float64] */;
  %1223 = exp(%1222) /* ty=Tensor[(11, 14, 9), float64] */;
  (%1223,)
}

def @func_9350(%var_9336: Tensor[(1848), int16]) -> (Tensor[(8, 11, 10), bool], Tensor[(1848), bool]) {
  %1224 = @func_7444() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(2880), float32], Tensor[(156), int32], Tensor[(1848), float64], Tensor[(1848), int16], Tensor[(1848), uint16]) */;
  %1225 = %1224.4;
  %1226 = cast(%var_9336, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %1227 = shape_of(%1225, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1228 = cast(%1225, dtype="bool") /* ty=Tensor[(1848), bool] */;
  %1229 = dyn.reshape(%1226, %1227, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1230 = @func_4787() /* ty=Tensor[(8, 11, 10), bool] */;
  %1231 = greater(%1228, %1229) /* ty=Tensor[(1848), bool] */;
  (%1230, %1231)
}

def @func_13958() -> Tensor[(8, 11, 10), bool] {
  @func_3710() /* ty=Tensor[(8, 11, 10), bool] */
}

def @func_4849() -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) {
  %1235 = fn () -> (Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) {
    %1232 = @func_3901() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(1848), int64], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32], Tensor[(1232), float32]) */;
    %1233 = @func_2460() /* ty=Tensor[(8, 11, 10), bool] */;
    %1234 = %1232.4;
    (%1233, %1234)
  };
  %1235() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(14, 8, 11), float32]) */
}

def @func_1312(%var_1310: Tensor[(14, 8, 11), float32]) -> (Tensor[(14, 8, 11), float32],) {
  @func_1309(%var_1310) /* ty=(Tensor[(14, 8, 11), float32],) */
}

def @func_9353(%var_9351: Tensor[(1848), int16]) -> (Tensor[(8, 11, 10), bool], Tensor[(1848), bool]) {
  @func_9350(%var_9351) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(1848), bool]) */
}

def @func_12364(%var_12362: Tensor[(24), uint8]) -> (Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) {
  @func_12361(%var_12362) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(3, 6, 4), bool], Tensor[(24), uint8], Tensor[(264), uint8]) */
}

def @func_13600() -> (Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(1232), float32], Tensor[(1848), bool], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float32]) {
  %1236 = @func_8578() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool], Tensor[(1, 1232), float32], Tensor[(6, 3, 4), float32]) */;
  %1237 = @func_5571() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1238 = cast(meta[relay.Constant][71] /* ty=Tensor[(1232), float32] */, dtype="float32") /* ty=Tensor[(1232), float32] */;
  %1239 = reshape(%1238, newshape=[1232]) /* ty=Tensor[(1232), float32] */;
  %1240 = @func_1823(%1239) /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), float64], Tensor[(14, 8, 11), float32], Tensor[(1232), float32], Tensor[(8, 11, 10), bool]) */;
  %1241 = @func_12071() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1242 = %1236.1;
  %1243 = @func_12268() /* ty=Tensor[(8, 11, 10), bool] */;
  %1244 = %1237.1;
  %1245 = %1240.1;
  %1246 = @func_9625() /* ty=Tensor[(1848), bool] */;
  %1247 = %1241.0;
  %1248 = @func_8847() /* ty=Tensor[(8, 11, 10), float32] */;
  (%1242, %1243, %1244, %1245, meta[relay.Constant][71] /* ty=Tensor[(1232), float32] */, %1246, %1247, %1248)
}

def @func_11766() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  @func_11764() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */
}

def @func_13926() -> Tensor[(8, 11, 10), bool] {
  %1249 = @func_11343() /* ty=(Tensor[(8, 11, 10), bool], Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float32], Tensor[(8, 11, 10), bool], Tensor[(8, 11, 10), bool]) */;
  %1249.4
}

def @func_4421() -> Tensor[(15, 16, 4), float64] {
  %1250 = @func_2771() /* ty=(Tensor[(15, 16, 4), float64],) */;
  %1250.0
}

def @func_3493() -> (Tensor[(15, 16, 4), float64],) {
  %1251 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
  %1252 = %1251.0;
  (%1252,)
}

def @func_3993() -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
  %1256 = fn () -> (Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) {
    %1253 = @func_2628() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), float64], Tensor[(880), bool]) */;
    %1254 = %1253.0;
    %1255 = @func_2339() /* ty=Tensor[(8, 11, 10), bool] */;
    (%1254, %1255)
  };
  %1256() /* ty=(Tensor[(15, 16, 4), float64], Tensor[(8, 11, 10), bool]) */
}

def @func_9502() -> (Tensor[(8, 11, 10), float32],) {
  %1257 = @func_7991() /* ty=(Tensor[(8, 11, 10), float32], Tensor[(156), float32]) */;
  %1258 = %1257.0;
  (%1258,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen667/build/output.py:4498: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen667/build/output.py:4503: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen667/build/output.py:4517: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen667/build/output.py:4522: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='cuda')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen667/build/output.py:4527: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='llvm')
/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen667/build/output.py:4532: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mutated_mod, target='cuda')

===================================
#[version = "0.0.5"]
def @main() -> Tensor[(9, 12, 12), bool] {
  %0 = cast(meta[relay.Constant][1] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="bool") /* GeneratedSource */ /* ty=Tensor[(9, 12, 12), bool] */;
  %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="int32") /* GeneratedSource */ /* ty=Tensor[(3), int32] */;
  %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 12, 12), uint32] */, dtype="bool") /* GeneratedSource */ /* ty=Tensor[(9, 12, 12), bool] */;
  %3 = dyn.reshape(%0, %1, newshape=[]) /* GeneratedSource */ /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%2, %3) /* GeneratedSource */ /* ty=Tensor[(9, 12, 12), bool] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */

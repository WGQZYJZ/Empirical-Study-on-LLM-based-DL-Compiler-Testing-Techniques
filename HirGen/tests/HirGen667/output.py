import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_357 = relay.var("var_357", dtype = "float32", shape = (6, 3, 4))#candidate|357|(6, 3, 4)|var|float32
var_358 = relay.var("var_358", dtype = "float32", shape = (6, 3, 4))#candidate|358|(6, 3, 4)|var|float32
bop_359 = relay.divide(var_357.astype('float32'), relay.reshape(var_358.astype('float32'), relay.shape_of(var_357))) # shape=(6, 3, 4)
output = bop_359
output2 = bop_359
func_372 = relay.Function([var_357,var_358,], output)
mod['func_372'] = func_372
mod = relay.transform.InferType()(mod)
mutated_mod['func_372'] = func_372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_372_call = mutated_mod.get_global_var('func_372')
var_374 = relay.var("var_374", dtype = "float32", shape = (6, 3, 4))#candidate|374|(6, 3, 4)|var|float32
var_375 = relay.var("var_375", dtype = "float32", shape = (6, 3, 4))#candidate|375|(6, 3, 4)|var|float32
call_373 = func_372_call(var_374,var_375,)
output = call_373
func_376 = relay.Function([var_374,var_375,], output)
mutated_mod['func_376'] = func_376
mutated_mod = relay.transform.InferType()(mutated_mod)
var_569 = relay.var("var_569", dtype = "int32", shape = (13, 3, 4))#candidate|569|(13, 3, 4)|var|int32
var_570 = relay.var("var_570", dtype = "int32", shape = (13, 3, 4))#candidate|570|(13, 3, 4)|var|int32
bop_571 = relay.add(var_569.astype('int32'), relay.reshape(var_570.astype('int32'), relay.shape_of(var_569))) # shape=(13, 3, 4)
output = relay.Tuple([bop_571,])
output2 = relay.Tuple([bop_571,])
func_583 = relay.Function([var_569,var_570,], output)
mod['func_583'] = func_583
mod = relay.transform.InferType()(mod)
mutated_mod['func_583'] = func_583
mutated_mod = relay.transform.InferType()(mutated_mod)
func_583_call = mutated_mod.get_global_var('func_583')
var_585 = relay.var("var_585", dtype = "int32", shape = (13, 3, 4))#candidate|585|(13, 3, 4)|var|int32
var_586 = relay.var("var_586", dtype = "int32", shape = (13, 3, 4))#candidate|586|(13, 3, 4)|var|int32
call_584 = func_583_call(var_585,var_586,)
output = call_584
func_587 = relay.Function([var_585,var_586,], output)
mutated_mod['func_587'] = func_587
mutated_mod = relay.transform.InferType()(mutated_mod)
var_734 = relay.var("var_734", dtype = "float32", shape = ())#candidate|734|()|var|float32
var_735 = relay.var("var_735", dtype = "float32", shape = (12, 16, 15))#candidate|735|(12, 16, 15)|var|float32
bop_736 = relay.less_equal(var_734.astype('bool'), var_735.astype('bool')) # shape=(12, 16, 15)
func_372_call = mod.get_global_var('func_372')
func_376_call = mutated_mod.get_global_var('func_376')
const_746 = relay.const([-7.134430,9.935996,9.510944,-1.635889,-1.988794,-8.657550,-9.411693,-6.917011,6.893297,7.150468,-9.667786,-3.218747,3.984515,-4.790414,-9.444480,-0.172737,6.724918,-5.208854,9.019921,-9.764747,-1.198806,-6.824986,-2.761444,-0.523090,5.032560,1.218357,-0.820382,5.602037,3.451721,-7.404795,-3.973169,-9.364423,1.087928,-3.700999,5.157754,-5.659168,7.158364,1.526458,-9.733681,-7.074616,4.764421,7.830254,5.700459,0.213682,-7.629587,6.145115,-0.064166,7.096345,-4.984087,-3.246727,-0.582313,4.519956,8.053544,6.772366,-4.924857,-4.021020,9.014030,9.864299,-0.736082,5.669981,4.114679,3.146837,-8.297658,7.142035,1.061485,4.980827,-3.135446,1.924653,4.219906,2.465790,-0.649802,9.113406], dtype = "float32")#candidate|746|(72,)|const|float32
call_745 = func_372_call(relay.reshape(const_746.astype('float32'), [6, 3, 4]), relay.reshape(const_746.astype('float32'), [6, 3, 4]), )
call_747 = func_372_call(relay.reshape(const_746.astype('float32'), [6, 3, 4]), relay.reshape(const_746.astype('float32'), [6, 3, 4]), )
output = relay.Tuple([bop_736,call_745,const_746,])
output2 = relay.Tuple([bop_736,call_747,const_746,])
func_749 = relay.Function([var_734,var_735,], output)
mod['func_749'] = func_749
mod = relay.transform.InferType()(mod)
mutated_mod['func_749'] = func_749
mutated_mod = relay.transform.InferType()(mutated_mod)
func_749_call = mutated_mod.get_global_var('func_749')
var_751 = relay.var("var_751", dtype = "float32", shape = ())#candidate|751|()|var|float32
var_752 = relay.var("var_752", dtype = "float32", shape = (12, 16, 15))#candidate|752|(12, 16, 15)|var|float32
call_750 = func_749_call(var_751,var_752,)
output = call_750
func_753 = relay.Function([var_751,var_752,], output)
mutated_mod['func_753'] = func_753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_863 = relay.var("var_863", dtype = "float32", shape = (4, 1, 11))#candidate|863|(4, 1, 11)|var|float32
uop_864 = relay.acos(var_863.astype('float32')) # shape=(4, 1, 11)
func_583_call = mod.get_global_var('func_583')
func_587_call = mutated_mod.get_global_var('func_587')
const_867 = relay.const([-2,9,-9,5,-4,4,-7,10,3,8,6,-1,5,5,5,7,7,5,4,-3,-8,-8,2,-8,-7,-8,6,-3,9,2,-10,-5,4,-6,7,-5,-6,9,9,3,-4,9,2,-3,-2,9,2,10,2,-2,-5,6,-10,-9,2,6,-5,-8,-9,-10,-3,-2,10,1,-7,-5,-10,4,-5,2,5,3,-5,6,1,-6,2,-9,9,8,-3,-8,3,-4,7,4,-5,9,-10,-5,-1,-5,-8,-7,4,-5,-6,9,-7,8,10,5,2,5,-8,-3,1,2,-2,-6,-4,-1,-4,-10,5,6,-1,-1,4,5,6,3,-5,7,-3,2,-4,8,7,-10,9,8,-4,4,-6,-9,6,2,-8,7,-9,-1,-5,-10,8,-5,-5,-8,3,-8,1,-1,-1,8,-9,-1], dtype = "int32")#candidate|867|(156,)|const|int32
call_866 = relay.TupleGetItem(func_583_call(relay.reshape(const_867.astype('int32'), [13, 3, 4]), relay.reshape(const_867.astype('int32'), [13, 3, 4]), ), 0)
call_868 = relay.TupleGetItem(func_587_call(relay.reshape(const_867.astype('int32'), [13, 3, 4]), relay.reshape(const_867.astype('int32'), [13, 3, 4]), ), 0)
bop_874 = relay.bitwise_and(uop_864.astype('uint32'), relay.reshape(var_863.astype('uint32'), relay.shape_of(uop_864))) # shape=(4, 1, 11)
func_372_call = mod.get_global_var('func_372')
func_376_call = mutated_mod.get_global_var('func_376')
const_885 = relay.const([2.432420,5.579550,8.648506,7.843622,-9.075144,-0.561199,-5.545902,1.582969,-8.647919,4.761084,6.087449,2.500519,-0.946548,-4.504386,9.388696,0.107219,-4.158899,-8.394147,1.425258,4.890464,9.504856,9.729448,-7.207969,-9.518081,1.190426,-8.976893,-0.331617,-0.225913,-9.959850,3.167378,-8.586003,-4.743688,2.161959,5.567793,-0.101079,-8.726968,-5.128668,7.670852,-8.301708,-1.938254,-4.956366,4.997966,-5.265378,5.932539,-5.883485,-0.412184,4.745300,8.630774,1.575042,2.083314,-2.657424,3.927325,2.262088,6.430912,7.002736,7.173001,6.210880,-6.256843,4.444245,-8.453760,-3.753251,-6.607175,3.272867,-1.329482,-1.595219,-2.344077,-6.960523,-2.089820,9.245735,7.948880,5.723289,-5.291432], dtype = "float32")#candidate|885|(72,)|const|float32
call_884 = func_372_call(relay.reshape(const_885.astype('float32'), [6, 3, 4]), relay.reshape(const_885.astype('float32'), [6, 3, 4]), )
call_886 = func_372_call(relay.reshape(const_885.astype('float32'), [6, 3, 4]), relay.reshape(const_885.astype('float32'), [6, 3, 4]), )
output = relay.Tuple([call_866,const_867,bop_874,call_884,const_885,])
output2 = relay.Tuple([call_868,const_867,bop_874,call_886,const_885,])
func_887 = relay.Function([var_863,], output)
mod['func_887'] = func_887
mod = relay.transform.InferType()(mod)
var_888 = relay.var("var_888", dtype = "float32", shape = (4, 1, 11))#candidate|888|(4, 1, 11)|var|float32
output = func_887(var_888)
func_889 = relay.Function([var_888], output)
mutated_mod['func_889'] = func_889
mutated_mod = relay.transform.InferType()(mutated_mod)
var_935 = relay.var("var_935", dtype = "float64", shape = (5, 7, 6))#candidate|935|(5, 7, 6)|var|float64
var_936 = relay.var("var_936", dtype = "float64", shape = (5, 7, 6))#candidate|936|(5, 7, 6)|var|float64
bop_937 = relay.power(var_935.astype('float64'), relay.reshape(var_936.astype('float64'), relay.shape_of(var_935))) # shape=(5, 7, 6)
func_372_call = mod.get_global_var('func_372')
func_376_call = mutated_mod.get_global_var('func_376')
const_950 = relay.const([1.347068,-2.997184,1.661954,-7.941601,-1.066146,-0.033268,-7.355018,3.279036,-4.036260,0.578230,-7.028786,-8.174176,1.789473,3.271355,5.746221,-1.673725,-8.978517,-8.890298,-4.082133,4.110595,0.794387,6.548575,-0.440678,0.335884,-2.385063,-5.593895,3.174872,8.403301,3.329078,3.108705,8.927676,9.592718,7.001581,8.880149,-2.274774,-2.851604,1.530003,1.922234,-1.177111,-6.349433,5.601780,1.672404,7.094639,-2.021574,6.422499,7.039253,2.785670,-2.499399,2.215380,-9.469217,-1.335725,4.536405,-3.804126,-4.925647,1.587772,1.366527,8.092887,8.046598,8.326153,4.188531,-4.966088,7.265852,2.868839,-1.834522,-1.000513,-8.895058,0.751274,-4.591487,3.433583,-1.496596,3.860206,7.782451], dtype = "float32")#candidate|950|(72,)|const|float32
call_949 = func_372_call(relay.reshape(const_950.astype('float32'), [6, 3, 4]), relay.reshape(const_950.astype('float32'), [6, 3, 4]), )
call_951 = func_372_call(relay.reshape(const_950.astype('float32'), [6, 3, 4]), relay.reshape(const_950.astype('float32'), [6, 3, 4]), )
output = relay.Tuple([bop_937,call_949,const_950,])
output2 = relay.Tuple([bop_937,call_951,const_950,])
func_973 = relay.Function([var_935,var_936,], output)
mod['func_973'] = func_973
mod = relay.transform.InferType()(mod)
mutated_mod['func_973'] = func_973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_973_call = mutated_mod.get_global_var('func_973')
var_975 = relay.var("var_975", dtype = "float64", shape = (5, 7, 6))#candidate|975|(5, 7, 6)|var|float64
var_976 = relay.var("var_976", dtype = "float64", shape = (5, 7, 6))#candidate|976|(5, 7, 6)|var|float64
call_974 = func_973_call(var_975,var_976,)
output = call_974
func_977 = relay.Function([var_975,var_976,], output)
mutated_mod['func_977'] = func_977
mutated_mod = relay.transform.InferType()(mutated_mod)
var_985 = relay.var("var_985", dtype = "bool", shape = (11, 12, 14))#candidate|985|(11, 12, 14)|var|bool
var_986 = relay.var("var_986", dtype = "bool", shape = (11, 12, 14))#candidate|986|(11, 12, 14)|var|bool
bop_987 = relay.logical_or(var_985.astype('bool'), relay.reshape(var_986.astype('bool'), relay.shape_of(var_985))) # shape=(11, 12, 14)
func_749_call = mod.get_global_var('func_749')
func_753_call = mutated_mod.get_global_var('func_753')
var_991 = relay.var("var_991", dtype = "float32", shape = ())#candidate|991|()|var|float32
var_992 = relay.var("var_992", dtype = "float32", shape = (1, 2880))#candidate|992|(1, 2880)|var|float32
call_990 = relay.TupleGetItem(func_749_call(relay.reshape(var_991.astype('float32'), []), relay.reshape(var_992.astype('float32'), [12, 16, 15]), ), 2)
call_993 = relay.TupleGetItem(func_753_call(relay.reshape(var_991.astype('float32'), []), relay.reshape(var_992.astype('float32'), [12, 16, 15]), ), 2)
uop_1011 = relay.erf(var_985.astype('float32')) # shape=(11, 12, 14)
func_749_call = mod.get_global_var('func_749')
func_753_call = mutated_mod.get_global_var('func_753')
call_1023 = relay.TupleGetItem(func_749_call(relay.reshape(var_991.astype('float32'), []), relay.reshape(var_992.astype('float32'), [12, 16, 15]), ), 0)
call_1024 = relay.TupleGetItem(func_753_call(relay.reshape(var_991.astype('float32'), []), relay.reshape(var_992.astype('float32'), [12, 16, 15]), ), 0)
const_1028 = relay.const([[[-9.124266,-9.795736,3.530349,4.333378,-0.630213,2.966107,-6.502255,-5.865953,5.507145,-0.012659,1.265453,0.935440,-7.277339,-5.208928],[-1.283443,-6.335038,2.685383,-3.128199,-7.072253,6.392414,-7.515258,-6.644824,-5.290829,2.961354,-7.383625,-1.785245,1.331650,3.909689],[9.866704,-7.860678,1.920077,-9.377268,-0.609235,2.757520,-3.549797,5.839509,1.600061,8.469920,-1.240959,-1.934547,-4.870192,-9.603634],[-3.342797,-2.506199,6.865061,9.634571,6.671860,-5.209258,-3.092694,-7.082953,-4.192233,-4.137699,4.313128,-0.663646,-0.432375,-5.745008],[2.842668,2.887466,-2.404838,6.834903,-5.824869,-3.190088,-5.038084,3.325933,3.657718,2.496392,9.953252,6.510350,0.482456,0.668685],[-9.105480,5.889916,-4.483842,9.894548,-2.936491,0.674031,-3.967873,-9.339247,-8.640401,0.188210,6.939512,2.233491,-1.904012,7.110504],[-3.962255,-7.886777,0.544881,2.802815,-9.094511,-4.644415,0.684581,3.779159,-4.491430,1.194638,-9.805272,-6.144013,7.699642,-3.417745],[-0.214741,-6.632407,-0.029684,-6.755006,-4.134335,-4.935538,-4.750003,2.480503,-6.637037,4.687198,-4.539004,2.904455,-6.312971,-9.488487],[9.443301,3.630252,-1.031020,6.328511,-1.214672,-6.931469,3.616371,3.533504,-9.743242,5.847130,-6.861447,7.180058,6.768421,9.687285],[-7.949342,-1.440166,-0.688364,0.985452,1.137694,-7.628592,-3.747682,-9.965014,2.076068,-3.236633,-4.493624,-5.837313,-8.397780,2.203201],[-8.357910,5.238707,-7.510096,-2.369127,-4.497782,4.162400,-8.170495,9.656842,6.527813,-3.246196,-1.473736,-8.920447,4.199422,7.813214],[-5.413231,8.413418,2.883625,1.992630,-3.497346,-2.494140,4.360534,-6.696941,8.810591,2.741504,1.573297,6.120363,-7.086389,-9.233084]],[[-0.005998,0.591070,-0.740305,9.055257,-0.039338,9.419445,7.840298,4.861167,-5.960637,-7.017158,8.823729,-9.910388,-3.950810,-6.365856],[4.878659,-9.683614,-1.417688,-9.436701,-4.514306,-6.293520,-2.070697,-3.260865,-6.946875,-1.880488,8.529478,-6.702411,-8.616316,-3.977659],[2.664948,8.936728,8.554530,-3.386190,-1.481170,4.563932,6.857618,2.949483,6.476396,3.737269,4.461486,-8.552492,-5.509767,0.789170],[9.830237,2.491439,8.625863,1.913373,-9.943997,-6.931729,-9.007577,-3.963684,-7.063886,5.657006,6.561010,2.408132,5.846590,4.360857],[-8.687689,-9.711928,-9.011760,-7.850907,1.204586,4.641576,-5.162954,-2.692522,7.928790,-3.377641,-9.975958,2.193590,-5.068216,-1.128446],[7.878490,4.109132,-1.370995,1.301141,-0.595907,-9.172066,-2.364744,1.807754,-2.423388,3.025473,-4.259654,9.616997,-3.510094,-6.287706],[7.452124,-6.231024,0.315540,-6.200135,4.758727,-3.554423,-3.355215,3.857318,-5.598540,4.001565,-8.857354,-6.634358,-9.676858,6.972539],[1.053405,3.997475,-5.814896,4.050737,3.132221,-9.009839,3.974585,-0.705851,0.082603,-1.838538,1.931202,-3.508821,2.470137,-1.314087],[-2.771549,-4.906786,-9.242699,-6.443945,0.141677,-3.488467,-1.014192,5.566060,1.949481,5.554203,-0.337710,6.799193,7.756750,7.744442],[-2.394934,-4.526904,-9.222068,-9.446376,-9.467020,8.454296,-3.285377,-8.182139,-8.185997,2.166988,-4.732070,8.600587,-6.240523,-4.597388],[-9.589420,-3.820239,2.978828,-0.911240,4.290855,-1.823572,7.556044,3.887689,4.453463,-9.408755,-4.616284,-5.172747,-9.315014,7.841607],[-3.914922,-9.892944,7.596629,7.522640,1.164742,-4.839619,9.769580,-5.020490,8.192874,-0.910898,-6.548184,-3.087637,-2.979578,3.194896]],[[-0.168266,-6.144233,-4.711126,-6.654732,9.575274,-0.487973,8.940741,-9.392435,-1.413654,9.933418,-4.665793,-9.437927,1.331479,6.292607],[2.536765,-9.834329,1.282458,-9.955572,-4.689991,-6.999601,8.866211,-3.338380,8.638427,5.833334,-1.658747,6.959405,-9.760145,4.390118],[4.573481,-9.512967,9.770017,-1.242456,1.714156,-9.822451,7.387855,4.805897,0.432123,8.647485,-6.025935,-7.407946,-4.503770,-9.153767],[-5.959497,-7.990681,-0.455023,-2.414152,2.838154,7.952090,-2.713302,-9.060007,-3.274121,-1.775932,-1.416657,-7.680676,-4.851312,0.980768],[2.630698,4.041844,0.154262,8.533270,-4.235071,6.027628,-5.398103,-4.524567,-5.204669,1.877271,0.283914,-0.328021,2.677122,-8.313631],[-3.013121,-3.129890,3.334543,1.484377,4.756156,8.943384,-9.239179,-2.965641,3.197158,3.133673,7.157908,-6.821613,-3.518064,-9.812801],[1.743765,9.349861,-7.857535,6.480880,-1.525030,-2.214586,3.964311,7.123479,-3.186952,6.287312,5.355203,9.873939,2.575405,1.306973],[4.698820,5.170159,-5.428932,-5.151256,9.962561,6.936040,-9.387590,1.558228,9.722465,3.412933,-6.832232,4.469420,-2.532116,7.181416],[-2.837257,3.753284,-8.413098,-9.168844,-2.784432,-2.670996,8.194052,4.180578,2.986043,6.061935,5.640249,7.710276,8.982885,8.881582],[3.696680,9.999969,5.495477,6.603787,-2.544183,9.308430,-6.859838,-6.446450,9.725655,9.685312,-8.959402,5.853779,-8.145265,-1.227517],[2.561634,8.616640,-1.067531,-3.661312,4.047445,3.675984,4.290362,-3.379626,-0.510253,3.814772,-8.912644,1.285054,-8.621329,9.563643],[3.526662,-2.361997,7.354679,6.935235,9.281564,-7.385917,-9.182118,-9.436552,-2.504875,1.763181,2.928515,-0.561183,-2.842130,-5.308538]],[[-4.233201,7.938587,9.265565,-7.930095,1.470076,-2.618675,1.516709,7.767130,8.820443,0.433710,2.938373,-2.705258,-7.964281,-8.782393],[-0.076055,6.277636,-6.127981,-5.329890,-4.939019,2.031713,3.803498,-5.923946,-1.589000,-3.758987,9.671788,8.125995,-0.385931,6.701404],[-9.715576,0.528439,0.684353,3.009458,1.664585,4.182235,-6.428549,0.466070,8.062223,-5.154307,-9.705461,6.482287,-2.756698,-0.383480],[-0.994055,6.011668,6.818429,-4.848523,2.892824,4.950536,0.123943,0.080028,7.258782,9.306442,-1.619246,-6.329400,-5.657852,3.624734],[-6.430166,-1.601834,7.112257,0.903119,-2.732252,4.314358,1.694294,6.523178,-4.948636,-1.937303,4.175334,-0.808926,1.024411,-7.924743],[-2.883426,-5.429029,7.141309,2.020728,3.967897,-4.156885,-0.070132,3.415639,-4.314912,6.087402,6.515077,-9.463016,0.619458,4.552509],[3.147853,1.633308,0.258227,-9.822590,-4.261937,6.479331,-5.900632,9.915473,-7.332124,-9.647264,8.177884,5.384111,3.434444,-8.234718],[-3.629307,7.928360,3.710657,2.326587,-5.129601,-3.018913,2.668479,-1.287712,5.953744,6.810638,7.088596,-7.037361,8.320328,1.383116],[8.425920,9.615765,0.852144,3.945945,0.080611,3.270579,-5.915093,-8.642202,-6.579784,5.437308,3.637934,1.092345,-2.375831,5.293371],[6.760180,-6.058078,-5.928521,-6.533783,-4.368305,4.100258,-1.352795,1.994517,-1.084966,-7.827233,3.306042,-6.977768,-0.442669,8.821228],[7.981967,-8.965748,8.168579,9.724715,9.389179,-7.859592,6.506138,8.361404,-0.530824,-5.360995,6.928879,0.605248,-5.615589,3.563077],[6.360809,3.184488,5.623737,5.324983,-5.860439,1.499889,-7.388305,9.429582,8.241447,2.547078,0.175789,-1.667329,2.552235,3.982209]],[[4.169953,-2.022208,7.712853,7.096004,-8.108780,-6.807761,0.483863,-9.145727,4.288237,4.538450,-4.621640,-7.486569,-0.482000,-3.772341],[2.674072,6.642071,-9.673429,5.521685,6.598407,3.973544,-7.572904,-4.965459,7.285528,2.568064,-4.475958,9.479302,-5.173828,-1.916855],[-0.958988,-3.076722,1.144935,-5.985967,1.132917,2.434851,-4.206846,-0.573235,-2.774268,-8.401731,3.036633,-6.658219,-0.672166,9.883624],[-3.504206,1.859547,-6.046012,-2.979962,9.387577,-7.382811,-5.619849,1.188377,-5.384824,5.637045,-3.241517,-5.391498,-6.419930,4.763698],[-7.202355,4.905145,-0.902235,0.161749,-6.118854,-8.866944,-7.295421,-4.667274,7.322017,4.727092,-8.959884,-7.874786,-7.594147,-8.799017],[-8.121780,1.078155,-4.051409,0.491295,1.790901,-5.752863,-5.338417,0.959419,4.628070,8.485869,5.175313,-1.282627,-6.562571,-3.927770],[5.923418,8.166828,-3.741735,-5.049823,6.266111,9.419398,-6.669342,-1.798385,4.126091,3.424169,5.890964,4.360233,2.011608,-7.802006],[-8.062293,-8.712343,-2.432725,4.179440,-5.875317,3.148940,4.542488,-3.381896,-3.227540,-0.016178,-9.962291,-4.560736,9.012844,-3.686614],[4.607350,-5.965512,0.116001,3.539660,-4.065421,-7.676182,-3.948516,-6.443606,-2.534124,6.378939,9.586562,-0.061014,1.327167,8.041746],[-8.605940,9.265636,1.063381,-3.440187,-6.381123,-0.710643,-0.736646,3.390354,-6.428114,7.908551,-6.007045,-8.492915,-0.127526,0.677409],[1.110539,-5.191333,-8.239148,-8.611262,4.783277,-1.239582,-9.722116,-1.133086,9.171868,-6.377208,9.690135,7.052692,-8.338075,7.791379],[-3.809523,0.084894,-3.046825,-3.677634,5.646174,-5.235368,7.114324,1.060300,5.544000,-1.700257,2.627663,-5.457842,-5.589939,5.706522]],[[2.082174,-3.813576,5.272578,-7.580708,4.469018,3.646020,1.139592,-4.919130,-4.362525,-2.582587,1.703598,1.577909,6.120048,-6.366932],[4.322800,3.567940,-2.194020,-9.299602,9.605077,6.213779,3.471445,1.455852,-7.270341,6.813958,9.329599,-6.617122,9.215108,-3.244629],[-2.807440,-5.494771,-2.868472,-9.202391,6.173505,-6.832078,4.262052,-5.254462,-8.223535,5.053671,0.126414,-4.400320,8.720022,0.618154],[-4.814907,0.582453,-3.961941,-7.607356,8.353314,-9.713949,4.590799,6.604328,-3.022382,-7.303278,-1.085438,-9.780832,-9.021384,-1.648121],[7.745014,-6.865565,7.217009,-4.962268,-8.551842,-7.516300,-8.417640,-9.446694,-6.344392,-9.109467,7.555577,3.244025,6.540582,2.827264],[-0.721666,5.808856,-2.393402,4.832745,9.355701,9.642662,-3.832869,-1.475231,-7.314761,4.669157,-9.229806,-2.874461,-0.564731,6.742716],[7.891346,6.551354,3.240715,6.671701,6.175349,8.217468,2.292333,-2.976828,3.522270,-1.148475,1.421362,-4.423992,4.050755,-8.281682],[-5.636520,3.385827,-1.912081,-4.407757,2.107111,2.753572,-8.248349,-1.095604,-5.150595,-3.019340,0.065246,0.670691,-9.207974,-0.456405],[-7.797109,5.715023,2.574220,-6.674252,7.652312,7.323227,9.118266,5.365689,3.478400,7.071297,-0.589645,8.770055,-2.208966,1.282086],[-8.765908,-1.917596,-9.358021,-9.970210,5.839739,2.243688,4.780886,0.598708,-0.507666,-5.578187,-6.484901,9.710354,9.204607,-0.240293],[5.568862,-7.467720,-1.381889,9.342235,-7.075963,-8.050168,-9.708971,5.893857,-2.420913,-8.976035,3.596627,-2.853057,-3.610597,6.371686],[3.792107,8.581148,8.460102,-2.763136,8.640509,-0.447715,6.162903,0.855571,-7.503214,9.605258,9.703488,0.784360,0.519088,1.406177]],[[9.492229,0.514942,-9.166826,-7.170022,9.382148,6.514309,-6.327343,-1.826382,-6.526811,3.560100,-4.411184,8.095080,7.145732,0.703089],[0.120402,-9.536507,1.392248,4.594181,3.945705,5.197490,-3.628256,1.008090,-9.769719,7.121132,8.151560,2.558241,4.338874,4.407785],[-4.741419,9.969622,0.529695,-5.509766,-6.018154,5.863501,1.284676,-0.186986,2.071820,-2.024519,9.438896,5.612536,7.378011,9.054524],[5.078247,9.430894,5.860906,6.361950,-9.176727,1.746000,5.571451,-5.619689,6.039170,7.631610,-0.090315,-8.504329,6.430675,-1.815990],[-8.277868,1.011739,2.231466,6.532820,-9.230924,3.086161,5.255806,2.290139,9.914248,0.376082,-2.431136,-3.201959,0.939397,-9.208361],[-5.783442,9.744848,-5.825179,-3.920871,2.737732,-9.801224,2.713032,-9.786838,-4.403481,2.257372,-5.068179,-3.077005,8.099030,6.197448],[9.166211,5.211626,6.882677,8.661801,-4.586551,0.764214,0.238216,8.043503,5.528628,4.372503,8.173152,-0.423156,-5.930968,-3.517216],[2.951581,-3.354215,2.728258,-1.304075,-9.103024,0.107272,6.343476,-8.796587,-1.471582,1.778661,9.211405,-8.452344,-8.680581,-9.600909],[0.862349,-1.434309,2.278258,-4.952329,0.499856,7.101776,-9.825310,-6.720759,7.702696,-2.809681,-3.771372,0.723639,3.295012,-1.767002],[-6.158375,-5.184208,5.714448,-9.809046,9.916842,8.929513,9.502102,-8.855902,9.569694,-9.552886,8.032918,7.359622,-6.964089,5.645653],[-1.778688,0.151882,0.657289,-1.690389,5.707086,5.690532,2.309269,1.952035,8.886004,-6.738491,-8.833334,6.556615,-2.676178,9.722347],[0.637156,-5.963570,-5.377486,8.335657,4.926686,-6.400916,-8.546129,4.563436,-2.724165,8.147254,-2.721277,4.993734,-0.357514,-3.251239]],[[9.043207,9.906378,-0.991867,-6.816363,-4.160010,-5.224131,3.716626,-1.036626,-7.827490,-7.089389,-6.519825,-6.743823,5.121599,1.829868],[-9.086075,-6.561358,6.245826,9.478950,6.914919,-2.849975,1.469086,8.161140,7.717165,-8.793488,3.074128,-8.556417,-5.529595,-0.391827],[-3.518459,0.274139,7.996770,-8.236265,-4.714240,2.022263,7.063646,1.940091,-0.572043,-5.097760,-4.221582,-2.609081,4.111452,1.754648],[1.863049,2.400952,9.671181,8.460914,9.394707,2.566405,9.834358,0.866084,-7.359089,1.693432,-5.249439,-7.327385,-7.623170,-1.150247],[3.205243,-2.743140,-5.141201,8.099663,-4.192307,-9.208927,-3.950573,9.850919,-8.266692,9.313503,5.838183,-9.776597,-1.572851,-8.540335],[2.469115,-2.835853,-0.231765,6.498019,-4.316183,-6.223062,0.261350,-5.944242,-8.343982,4.715215,3.788478,8.249312,9.162680,-8.302632],[-3.914946,3.791708,0.970285,4.494940,-5.856885,-1.416040,3.086165,9.217496,-5.541298,-9.044380,-0.841745,7.242194,-5.041048,-2.302527],[-9.337511,9.237019,-4.835543,-1.176397,-1.610181,2.499506,0.479520,-7.432625,8.128844,9.251403,1.087278,-8.535377,-1.363908,8.753745],[0.782553,-2.057285,-2.111205,-9.763336,-6.898001,6.862543,-3.901289,4.441707,-9.135056,-0.664150,-9.746651,0.159561,-0.278918,5.334631],[-9.121938,5.468584,-0.151676,9.756007,-5.299571,5.896364,4.164630,6.630830,-8.240503,1.211139,-8.303360,-5.156937,8.899824,9.938840],[3.438609,-6.373843,5.325490,0.079129,-7.996909,6.065866,7.885526,0.922132,3.101921,-2.263486,-7.893716,-0.657084,-3.837994,0.988263],[7.844882,4.251802,9.408359,-1.782680,9.094491,-9.446875,-1.102961,-5.947642,0.843943,-7.678855,4.740772,-9.704518,-1.232183,-8.059598]],[[4.219586,5.738073,-3.939141,4.123041,-8.287532,5.018129,-0.110676,8.700433,5.711650,-5.155608,-0.664846,7.050416,2.922699,3.181418],[-2.123304,-2.442905,1.739226,-8.534902,-2.299598,3.929890,3.708818,0.071469,-2.425134,9.415058,-3.208575,-1.882978,-1.118694,-5.234981],[5.787434,-1.142348,-4.110825,1.492205,-5.759118,2.216663,-3.636545,7.784026,0.234921,0.051481,-5.091488,2.753465,-4.681927,6.968749],[8.282651,-4.467833,3.761361,2.031834,-0.444863,9.547569,-2.035763,9.543074,6.668817,4.344832,1.175306,-4.446878,1.971180,5.235793],[-1.175302,-2.586217,-3.801087,-5.832742,0.958733,6.670010,5.421829,-7.373079,-8.350244,-5.096308,9.759309,-6.035453,-8.849537,-6.008015],[8.252079,8.416812,-0.660605,5.613796,-5.673635,-7.548880,9.699221,9.172992,-4.650616,0.587698,-6.892204,-9.923372,1.720466,-5.709889],[1.204430,9.248504,-4.246042,-8.959032,-6.881666,-3.878079,-9.597186,5.853167,-7.932587,-5.571632,-7.370469,6.860159,1.459814,-5.905504],[6.090379,-4.299373,8.403650,7.023572,-5.797418,-1.797500,9.450371,5.609337,0.794436,-9.259241,-0.189098,-3.387893,-0.372975,0.563504],[4.803264,-2.647795,-9.902603,-1.091237,-7.505994,-4.399568,3.876867,7.600395,3.529392,-8.197898,4.667144,-7.515483,3.952043,7.688661],[8.880181,0.302502,-1.489657,4.297402,-8.954177,9.189174,1.543734,7.255059,-1.022290,4.313309,-4.589396,3.737038,-5.505080,0.633587],[-4.388903,3.835540,1.459394,9.409195,-4.502672,-8.887952,-4.864937,7.348619,7.940887,-5.662748,-1.173820,2.719333,-3.440122,-2.512448],[2.595973,-4.836267,-4.784434,3.263063,8.737599,-0.266746,7.601954,-6.772910,-7.005584,8.649689,5.386052,2.189351,3.110074,-2.074022]],[[0.974288,9.757652,-4.563294,9.538240,2.290421,-7.174006,9.252837,6.235162,2.892634,-5.041107,6.288274,-6.016532,0.987963,-1.633439],[-5.130698,-5.741888,-1.173705,-0.354554,-0.326634,8.919857,-0.823522,-7.397093,-5.229515,-5.365260,5.013489,4.053301,-1.474728,7.986866],[-0.292387,1.819188,-5.965757,-5.937740,0.240700,4.474552,-7.055483,8.333799,-2.762978,-4.955265,3.606198,2.360928,0.406818,-1.682918],[-8.274635,-7.222169,6.715722,6.205035,1.223637,-9.702367,1.781784,-9.786387,4.611467,-0.554321,3.390572,-2.358665,-1.189986,-8.146891],[6.727101,9.374035,-7.450162,-8.477660,9.265930,-2.474032,1.830969,1.479217,-3.850511,2.080180,-8.407045,-7.384342,-9.394448,-8.497949],[-3.860735,7.890884,3.440971,1.361693,-0.043256,-8.991597,4.341195,-6.034993,2.322861,9.096599,-3.828190,5.341355,3.022354,-6.936592],[0.075979,-4.098743,0.386125,8.648395,-7.176157,9.963990,-8.461544,6.791234,-0.754440,-5.960886,4.076444,1.641063,-7.267602,-2.230535],[-3.303672,-9.802972,-3.899765,5.890236,-5.101892,-2.793076,3.308734,2.884056,6.493809,-6.007776,-7.469134,-1.532837,-5.741572,6.676988],[-8.010804,-9.156087,1.534266,-8.947143,4.166975,0.441458,-8.940805,0.942665,4.678666,0.227451,7.115476,-1.209144,0.877047,5.781389],[3.483689,-4.083140,1.060372,-6.917212,7.773302,-6.863829,0.658845,-9.760741,2.010300,5.113837,-4.294340,-0.890128,-3.458837,-3.171239],[5.824103,-8.031707,-2.621018,-2.066591,3.078058,-9.440583,-9.369993,-8.512995,4.282935,8.625390,-8.429964,0.186555,-6.466814,-7.532135],[1.417416,-9.811204,-4.137085,0.132306,2.380078,-7.292665,-1.157549,-7.556410,7.922970,-2.682106,3.416729,-4.002359,3.607666,4.928745]],[[0.646319,-9.176857,-9.208983,7.830147,9.995762,6.797554,-0.847848,-7.242927,4.389672,8.569404,3.652253,5.242293,-4.493064,-4.535501],[4.746355,1.040382,9.035690,5.087516,-5.073153,-5.487036,1.234818,-7.972257,-3.011956,5.269851,4.222249,-2.719285,-2.765940,-9.269916],[9.770713,-2.601597,-6.967934,6.762679,-8.364750,1.505254,2.883872,-3.515868,6.786753,3.736592,9.912580,5.645423,0.957316,8.547791],[2.197881,-0.293685,-8.894377,-3.985905,-8.121116,-5.264882,-3.337289,6.592306,-0.064757,3.998364,0.114270,5.376148,2.777124,9.300316],[-8.971256,-2.557724,-9.353864,2.546710,-0.899341,5.022953,6.431709,3.904355,8.029225,-7.023221,-9.246793,-5.623974,-7.173888,0.081895],[-5.745652,-8.213734,1.243871,9.933980,-5.483801,0.932287,-4.831246,4.127019,-4.054523,1.606710,-6.268174,8.089591,6.028161,-5.660145],[1.978000,1.564326,-1.112301,5.048728,8.252490,-5.846942,5.641949,-2.597728,-5.412134,5.118377,-7.587419,3.359543,-8.031538,7.188731],[-9.189369,0.873047,0.963896,6.597344,2.280588,-6.606095,8.524211,-8.851390,-6.764366,-6.430648,-8.402678,8.702123,1.070935,1.826051],[-1.137740,6.358294,-7.323855,-8.148094,-5.095617,-3.935584,-2.497881,-6.863952,7.341378,-6.049943,2.878133,-5.146144,5.733822,-4.219570],[-7.982873,-8.076618,-5.403012,8.498600,4.212986,1.154865,-9.732169,2.682976,-1.685411,-8.236117,-9.233415,9.962163,-8.610698,9.479058],[1.026545,-2.423026,-1.802383,-8.469590,-0.729322,9.020263,-7.732600,8.148379,-3.859399,2.891725,-6.545780,-1.423356,2.790607,-2.330449],[-2.643808,1.403702,6.853397,8.550962,-0.497384,8.561746,-8.839059,-4.367158,4.892493,7.193719,-3.676216,-5.934951,-4.287925,7.457494]]], dtype = "float32")#candidate|1028|(11, 12, 14)|const|float32
bop_1029 = relay.divide(uop_1011.astype('float64'), relay.reshape(const_1028.astype('float64'), relay.shape_of(uop_1011))) # shape=(11, 12, 14)
func_749_call = mod.get_global_var('func_749')
func_753_call = mutated_mod.get_global_var('func_753')
call_1036 = relay.TupleGetItem(func_749_call(relay.reshape(var_991.astype('float32'), []), relay.reshape(call_1023.astype('float32'), [12, 16, 15]), ), 1)
call_1037 = relay.TupleGetItem(func_753_call(relay.reshape(var_991.astype('float32'), []), relay.reshape(call_1023.astype('float32'), [12, 16, 15]), ), 1)
func_973_call = mod.get_global_var('func_973')
func_977_call = mutated_mod.get_global_var('func_977')
var_1043 = relay.var("var_1043", dtype = "float64", shape = (210,))#candidate|1043|(210,)|var|float64
call_1042 = relay.TupleGetItem(func_973_call(relay.reshape(var_1043.astype('float64'), [5, 7, 6]), relay.reshape(var_1043.astype('float64'), [5, 7, 6]), ), 0)
call_1044 = relay.TupleGetItem(func_977_call(relay.reshape(var_1043.astype('float64'), [5, 7, 6]), relay.reshape(var_1043.astype('float64'), [5, 7, 6]), ), 0)
func_583_call = mod.get_global_var('func_583')
func_587_call = mutated_mod.get_global_var('func_587')
var_1053 = relay.var("var_1053", dtype = "int32", shape = (156,))#candidate|1053|(156,)|var|int32
call_1052 = relay.TupleGetItem(func_583_call(relay.reshape(var_1053.astype('int32'), [13, 3, 4]), relay.reshape(var_1053.astype('int32'), [13, 3, 4]), ), 0)
call_1054 = relay.TupleGetItem(func_587_call(relay.reshape(var_1053.astype('int32'), [13, 3, 4]), relay.reshape(var_1053.astype('int32'), [13, 3, 4]), ), 0)
uop_1055 = relay.atan(bop_987.astype('float32')) # shape=(11, 12, 14)
output = relay.Tuple([call_990,var_991,var_992,call_1023,bop_1029,call_1036,call_1042,var_1043,call_1052,var_1053,uop_1055,])
output2 = relay.Tuple([call_993,var_991,var_992,call_1024,bop_1029,call_1037,call_1044,var_1043,call_1054,var_1053,uop_1055,])
func_1057 = relay.Function([var_985,var_986,var_991,var_992,var_1043,var_1053,], output)
mod['func_1057'] = func_1057
mod = relay.transform.InferType()(mod)
var_1058 = relay.var("var_1058", dtype = "bool", shape = (11, 12, 14))#candidate|1058|(11, 12, 14)|var|bool
var_1059 = relay.var("var_1059", dtype = "bool", shape = (11, 12, 14))#candidate|1059|(11, 12, 14)|var|bool
var_1060 = relay.var("var_1060", dtype = "float32", shape = ())#candidate|1060|()|var|float32
var_1061 = relay.var("var_1061", dtype = "float32", shape = (1, 2880))#candidate|1061|(1, 2880)|var|float32
var_1062 = relay.var("var_1062", dtype = "float64", shape = (210,))#candidate|1062|(210,)|var|float64
var_1063 = relay.var("var_1063", dtype = "int32", shape = (156,))#candidate|1063|(156,)|var|int32
output = func_1057(var_1058,var_1059,var_1060,var_1061,var_1062,var_1063,)
func_1064 = relay.Function([var_1058,var_1059,var_1060,var_1061,var_1062,var_1063,], output)
mutated_mod['func_1064'] = func_1064
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1088 = relay.const([[[-5.659617,-7.825288,8.037896,7.131474,7.900189,9.615066,-1.255299,4.775126,-7.618018,0.215624],[7.974844,9.473930,-5.459186,-3.902244,-2.407856,7.116507,6.878686,2.846041,5.896452,-3.936324],[7.187816,7.758662,-3.114345,-0.275038,-9.309343,9.009137,1.371028,1.473063,1.344245,-0.895178],[5.826421,-1.928313,-5.726784,5.477742,-1.155862,-8.432321,2.112458,-6.850672,-3.292585,3.316942],[-5.509216,6.495050,9.404597,-5.147580,-7.148276,-4.981073,-1.775194,-7.701481,-9.014726,-8.481628],[-9.743537,4.235593,-6.975147,1.643995,-9.923694,-3.378347,3.085150,-3.148430,-0.646911,-7.139982],[0.329529,0.129303,9.325976,-5.769046,6.880794,4.888307,0.955217,-8.914860,-6.577408,4.050110],[-7.653477,3.755703,9.005497,-9.565067,-0.014078,-9.458473,-0.435926,5.466437,-7.195955,9.788830],[-4.239117,1.431917,1.301662,-1.019431,7.537216,-1.665631,8.380693,9.107031,4.408782,-1.944410],[-6.740576,-0.992114,-4.425749,0.673735,0.198126,8.510744,8.874098,-4.182992,-6.123605,-3.446849],[-8.310711,9.303173,-1.408054,-2.407788,-1.361930,-0.222630,4.119967,5.721534,-7.395730,-0.644417]],[[-2.648966,-9.077727,-0.814461,-9.875655,9.247465,-3.496258,-7.470980,1.958570,9.735824,-8.984210],[-7.295541,-4.802470,7.498022,-8.152401,-4.913881,-5.377229,-5.174828,-6.245464,2.432565,8.106426],[0.118391,-6.836693,3.765379,4.623822,8.776752,-6.305542,-2.609088,1.130247,7.470267,4.912162],[9.956786,-0.709854,-6.500188,-8.158484,7.302001,-2.468282,-9.565252,-8.789496,-0.200375,-3.952970],[-0.752929,-9.222464,3.227678,-3.807674,1.504097,4.132394,9.248867,-3.628529,-4.878655,1.479618],[-0.700845,0.831140,-9.233292,-7.286511,0.193338,-8.849542,9.093117,-1.506472,4.444333,2.893294],[-5.089230,0.451476,-3.799642,-1.895496,-5.093488,9.618482,2.759227,8.231222,-0.604177,9.355719],[-6.438353,9.565221,-0.234571,1.104960,0.763499,-9.158546,0.148805,9.851407,9.743341,-3.865062],[-5.823451,-7.261161,-0.374793,4.644554,9.448278,-2.496850,5.665830,0.030930,8.645500,2.857604],[-8.135958,2.071844,8.337853,7.104289,-7.187964,-8.731167,5.530388,-4.774822,3.575920,7.359479],[-1.006145,-5.223966,0.561685,6.591990,-5.915697,6.133669,-3.014134,-4.392065,-3.666105,-2.264591]],[[-5.783066,6.815632,3.807440,0.161808,6.948657,9.593610,8.004789,6.568723,-1.635997,2.511505],[6.250286,7.376087,2.997088,4.699858,6.886636,-2.776177,9.947200,-8.521917,-9.155008,7.183445],[-0.672980,7.814312,-7.694146,-4.535433,-0.272748,-0.189487,5.917971,7.606533,4.706430,-3.781905],[9.736896,-2.359035,-9.848316,2.541675,5.340286,-1.758967,-9.337602,8.265260,3.701830,4.447301],[0.822913,4.865994,9.043114,-3.220354,-4.604700,5.782950,3.841087,-1.406271,-5.342536,-3.715159],[-2.897116,9.752111,7.768602,8.390597,2.265281,-0.910671,-8.850292,3.785390,-0.416198,1.021910],[-1.278187,-5.097212,-7.265573,7.295016,2.446336,-1.885565,-6.334166,-4.269601,-9.657382,-5.269466],[-7.426555,9.235894,3.038282,-8.153345,-4.009931,-0.050844,-9.572919,-0.693922,2.392377,-1.946368],[-2.999052,-0.794703,-0.856087,-2.996705,-1.738241,-1.288453,4.313618,-3.550165,-8.395471,-8.911906],[-2.799918,9.723289,-0.022987,1.660689,5.587834,-3.855919,8.961599,8.781561,7.108099,-8.835102],[-6.322582,-0.610566,-0.014889,-3.303040,5.293061,3.339790,3.663491,-0.834822,4.496533,3.647291]],[[6.782247,-3.994089,-8.024069,1.790855,4.828468,-7.508555,-3.993914,7.061957,6.156569,-0.608899],[-7.363469,-9.124974,-3.951285,6.624573,-6.908391,3.623423,-9.482452,-2.020217,4.114248,-5.984477],[-3.277226,-5.323496,2.635191,4.117417,-9.822868,3.336658,-9.717772,-8.732215,4.657695,-8.448104],[4.402939,8.436459,7.954472,-6.566831,2.230652,1.431851,7.792158,7.914733,1.110217,7.215589],[-7.091891,-5.774202,-7.850312,1.503373,0.832791,-0.009489,9.094010,-1.157167,6.851485,2.969407],[-1.214324,-4.058367,7.207666,-4.109340,9.721098,-8.321281,3.035721,-1.232004,2.261288,3.524577],[1.044649,4.338345,3.574857,2.038829,6.225362,-1.398704,9.972353,4.344728,-8.593774,5.910113],[-0.610074,4.065389,-3.366446,8.290371,9.247494,-5.135528,-5.155925,-3.871533,-5.354446,7.416716],[-5.884944,0.282588,-4.752647,-7.105974,-4.152135,-6.472062,1.315361,-5.711574,8.386816,-4.833882],[-5.104385,2.729905,-6.367638,5.007996,1.404010,-1.357344,-7.799758,2.755360,6.317851,1.527639],[0.363210,-0.517629,8.092743,4.272741,-4.464898,0.117354,-9.472444,-7.982484,-0.907917,0.064161]],[[-8.894060,-5.420084,8.288765,1.068170,4.491557,5.891100,4.149588,-9.878740,-2.625516,9.610666],[6.464734,-9.696110,-2.196119,-3.839822,-4.952392,-1.561717,-9.085305,6.241875,8.869055,-6.480615],[5.996564,3.346415,2.928709,2.827910,0.788920,-4.765056,7.603729,5.206318,4.919501,2.471297],[0.185835,-7.235536,-0.271116,-8.852177,0.338947,-9.536341,-7.528941,4.484297,3.111686,8.183175],[8.443773,4.645910,-7.444156,-3.538645,2.235520,2.331258,-7.703047,-1.778499,4.860844,-1.661644],[7.269882,4.758706,-3.790019,3.341286,4.647449,8.500453,-7.337745,-6.785560,1.811626,8.261894],[-2.602831,7.377265,-0.447993,3.063870,-5.113930,-4.536435,-1.484450,0.100893,-2.654208,0.168940],[-2.542655,3.020283,8.347319,3.656758,-1.411632,9.032033,-9.380469,5.916807,-9.485519,-2.323678],[-8.616775,-8.557699,2.307716,-4.061832,-3.581507,2.908937,-3.969971,-7.541775,-6.218951,-9.070140],[-4.428701,1.231810,-6.669106,1.171465,3.278499,-4.432330,4.779262,5.844890,-1.753451,-9.661517],[2.166080,7.586401,-4.278872,0.864051,-5.808761,-9.121963,-8.760387,6.156007,-6.745142,7.194326]],[[-8.668048,-2.577579,7.910322,-8.208238,8.316725,-4.761735,6.537686,-6.732160,3.378879,-3.020712],[5.265853,-1.685424,7.959427,-1.633502,4.890970,9.962127,2.434499,3.208386,5.860795,3.863183],[-1.214727,1.072527,0.690013,-6.000815,-5.531613,-1.352110,6.693456,2.096948,-3.718369,-1.299482],[4.281019,-1.421267,0.924880,6.341868,8.349387,2.285451,4.595001,2.460466,-8.341906,4.950473],[8.301369,-9.820616,9.326651,8.322707,-7.961980,5.190288,5.161764,-4.188544,3.125463,-8.804289],[-0.100842,-1.141660,-3.975402,9.948261,4.170083,7.253291,-8.577744,2.625150,9.265678,-9.939575],[3.569439,-7.652889,7.796785,9.732234,-0.288859,7.062875,-7.181098,-7.511444,-3.304438,5.300719],[9.821557,-1.061355,2.106232,2.792386,-6.215496,-9.846834,6.339604,-6.577555,8.001323,7.820019],[5.052043,6.489692,-2.635987,2.601790,2.775959,4.974874,1.461774,-8.585438,0.653693,-3.778763],[3.914215,3.468637,2.429196,2.447687,-8.143679,-1.741643,-8.722636,7.646487,-7.807313,3.966802],[5.453104,-2.231406,-6.721409,8.674143,-8.912881,3.688532,-5.614374,-7.448484,-7.784880,0.975408]],[[-9.819875,7.559360,3.788357,8.799997,2.426575,9.517400,6.836462,7.458046,-4.978480,-8.454471],[-0.645495,5.046322,-9.105274,-0.664347,1.422260,2.238505,-4.698568,-8.666644,7.728366,6.787618],[-8.387898,-4.005514,-5.544491,4.243131,-1.787440,0.320509,1.316126,-5.105703,-3.850519,5.675532],[-4.746758,5.654692,9.875084,-8.775019,0.460323,0.228308,-8.553730,-5.071333,7.698250,4.570918],[8.475998,7.010518,9.983596,-3.020184,-1.938570,-1.875417,5.904310,4.131729,6.652260,2.155602],[6.209236,0.744011,-6.842464,-6.012772,9.613091,-3.382107,-5.653369,-8.298820,4.128710,0.531718],[-3.154193,-5.330115,1.484481,-7.436324,6.322545,-9.692513,-4.064843,-1.608907,2.331392,-3.452907],[-9.482745,9.996481,-2.031844,5.868261,-3.042905,-3.723733,-4.771383,-8.859729,-6.536089,-8.240543],[3.370034,1.191468,-9.359322,-3.809129,-3.627478,4.173483,7.539858,-8.703961,-0.684892,4.161864],[-0.277931,9.391429,-5.859933,9.105428,-6.157361,-0.493662,-9.976888,9.667600,2.382047,-0.569841],[-4.477666,8.145256,-6.965383,-3.831177,6.184050,3.135147,7.133181,-0.483309,5.299312,-1.180257]],[[5.866411,6.458525,-1.588675,0.862848,-2.707066,-1.865021,8.014827,9.458421,4.804602,-1.167692],[5.402095,-3.898863,-3.703043,0.476110,-7.491202,9.507388,-5.624741,6.146623,1.776173,2.107032],[-3.481034,-0.876281,6.179402,4.136782,4.331218,6.402829,-6.161825,3.732735,-6.202792,-9.871362],[4.685610,-1.298415,-3.478153,-9.882650,-0.385431,1.737628,7.325236,-6.579174,1.794044,9.319187],[3.516445,-1.109564,8.673652,-4.765632,-8.433502,-3.575079,-9.071200,6.056015,0.717633,-6.631224],[8.047092,-3.487877,-2.979855,9.662160,6.096235,-2.321016,7.987470,-8.027037,7.441526,-1.755412],[7.310615,3.704744,-2.121470,-9.434039,-5.942641,5.892134,-1.461254,0.010019,7.014904,9.562356],[0.219608,8.666110,-8.569380,6.905947,3.215331,9.819854,2.168650,-8.485972,6.060947,1.713508],[-9.944720,-2.794295,-1.783876,7.590003,-4.032934,-2.454129,-3.089111,9.416868,1.969306,-9.593383],[-2.870787,2.947431,-4.765830,8.922790,-0.435611,-5.863345,-7.463503,-5.071957,-8.874007,-1.754564],[-4.990601,-6.250842,-6.151532,3.435581,9.845598,-2.217965,9.474103,7.879424,-8.784043,7.976352]]], dtype = "float32")#candidate|1088|(8, 11, 10)|const|float32
const_1089 = relay.const([[[3.012563,-7.490964,-1.087798,9.403071,-1.061615,-2.653728,-7.990929,-5.340591,-5.911900,-7.845014],[3.020321,1.300849,4.367222,-3.484068,-2.156938,-0.649322,4.370388,6.463185,8.060414,-5.615643],[-0.396822,3.626691,1.957660,-6.300890,3.232239,7.915945,-1.277548,0.789215,-6.798071,2.698827],[6.945800,-2.785913,-5.973593,-6.977827,-4.241561,0.337908,6.482555,0.546136,-1.090449,7.785843],[-0.129389,0.876974,1.957523,1.895970,-7.383490,-3.814327,-3.087497,-0.485471,3.293226,1.873351],[4.590832,-8.394388,6.885140,0.058662,-7.075078,1.263444,9.485573,9.056195,9.778946,-7.732715],[6.431274,9.470552,4.672014,7.428170,-1.089962,-3.002184,0.294638,7.016007,7.360802,9.161527],[6.098041,-1.294126,7.112458,6.273749,-7.139139,-8.481800,-8.629520,-2.318064,5.694564,-2.066461],[-2.395525,5.919409,-5.367732,-5.331160,4.459036,1.403627,-5.587026,-4.728554,5.600429,-2.268675],[9.179029,-5.850279,-6.868660,-7.809882,-6.603968,6.996572,2.318689,-3.490185,5.271505,2.670831],[-2.793220,3.213783,1.151723,-4.152596,9.777103,-5.047557,3.834956,1.836058,6.072312,9.799032]],[[-9.387205,-1.990127,7.746464,2.692404,4.405311,-2.093752,1.926054,-8.523558,2.790282,-8.327129],[6.765756,7.517884,9.590452,-4.228308,-5.152655,-8.221499,4.142547,7.238764,8.418198,8.684211],[7.996243,3.350245,-3.199108,3.884578,-2.054269,-3.822565,2.941951,4.363476,-7.217259,6.527803],[5.086280,-7.726376,3.410655,-5.893913,-8.564026,0.394758,7.380923,2.887403,0.750470,1.520379],[-1.694742,6.016495,9.383866,-9.877262,7.765493,3.524352,5.280681,8.738656,5.723100,1.298634],[5.730443,8.637562,6.528321,-4.848478,-2.193632,6.193787,-7.824952,-2.158348,6.450756,7.842884],[-6.346480,0.686854,-9.268930,-7.663371,-8.902441,-2.075799,6.665191,-0.528565,-6.678056,4.235604],[-6.644886,8.464633,6.186907,9.689896,-6.162010,7.081904,1.330804,-6.912628,8.384414,9.953432],[-3.483661,-2.708306,4.538581,2.538682,2.545547,-4.160387,2.564181,-9.236231,3.277260,5.656893],[9.739558,2.128437,1.966244,-7.613022,-6.487545,9.563726,2.888529,-7.419083,-4.313451,-4.387094],[-3.010777,-4.882696,-3.194077,8.699501,-9.124728,7.548902,1.925610,-0.694078,-9.229491,-2.537113]],[[-4.818439,-8.628608,4.467097,-4.936093,-4.544186,4.497212,-8.308068,-6.787588,6.039170,-4.993326],[-1.256191,8.802117,-1.930747,-8.954335,-9.127257,-0.681857,-4.464155,0.298632,1.523317,-9.526386],[-0.245160,5.174227,1.566178,-3.965085,7.830935,-5.862403,-1.098433,1.967849,5.597421,-2.099993],[-4.800106,-1.187125,1.680908,-2.056801,6.828690,-5.816408,0.405634,-3.017854,3.054548,1.379417],[-2.623854,-4.554633,5.037449,1.346183,6.204425,-0.628023,-6.179579,5.347785,-0.778567,9.371544],[-1.364938,-2.676800,4.091795,-8.198427,6.070272,4.246202,8.249989,-4.433149,1.640426,1.683865],[1.003669,4.420521,-3.874311,6.826660,-2.290668,-2.327212,-2.237474,-6.142750,-8.725010,-0.258815],[-9.623317,0.257658,9.140319,-3.932945,6.865510,-4.091945,-0.073368,4.403973,-1.817384,5.084764],[8.370705,9.204336,-9.388423,0.472247,-7.892217,-4.787729,2.297735,-4.132841,-3.200982,1.855240],[-2.943389,-4.821828,2.829660,8.494467,2.540669,2.114262,-8.355343,-5.173934,-5.355124,9.443944],[-3.214540,-9.271506,6.131807,-3.460763,9.918243,-5.351456,7.800377,-2.920665,-8.945890,-2.098899]],[[6.776575,-7.803219,-7.900772,-0.044210,-7.747045,1.418858,-8.399544,-3.891011,-6.699795,6.011894],[-3.058037,3.492240,-7.983726,6.497135,2.830292,-7.176432,2.971172,6.180416,-1.788562,-8.598135],[2.208473,0.847273,5.997367,-8.111356,-7.641727,-5.378710,1.206291,6.566710,8.021226,-2.922478],[-1.903657,8.273226,6.511582,-7.941333,2.175145,-8.241627,-9.567669,-0.828509,8.198287,-3.479459],[-4.518023,-4.915003,-9.039981,3.952422,-7.463128,0.053756,3.049714,-0.679416,1.371146,-2.683877],[-8.236652,8.504429,-9.025228,-7.474527,-1.822696,8.806995,2.785934,-0.333308,3.495006,-6.015156],[4.806407,3.441640,-2.328721,8.904958,-3.403081,-0.880801,-8.660817,6.701267,0.685716,-6.101987],[-6.117089,-9.437201,-6.407497,-0.274594,6.845588,9.649017,-0.110870,0.568168,8.023711,-4.824668],[-7.406558,-2.455963,-1.253654,8.270166,2.492804,-3.782601,5.496701,-9.422396,3.966842,-5.312755],[6.209667,-2.206588,-9.660640,-7.288655,-9.390889,1.451728,-5.623808,-9.437136,1.088977,-3.433758],[4.728519,3.889542,-4.816304,-2.172267,-8.536648,-4.898108,1.243854,6.849786,-7.800122,2.074197]],[[-9.081708,4.502980,-1.172438,0.117663,5.315516,-7.627527,-7.956758,2.321883,9.272796,3.601699],[-3.668491,5.480022,-1.215993,9.638210,3.500790,8.150071,0.975621,-4.672533,-2.655838,-3.912530],[0.314755,2.881404,-5.546407,-2.507392,-0.096502,1.738967,7.519445,-9.707557,1.660062,-8.363962],[-2.073970,-2.428795,-1.319243,7.845249,-4.574830,-1.893172,6.248786,-0.202699,3.298750,9.902961],[-8.795024,-7.295864,-7.402642,5.188034,4.837811,-4.915335,2.991394,7.932151,4.782449,0.364840],[-7.274616,2.028580,2.864804,9.581155,9.489622,-5.844415,3.849371,2.691673,-9.299846,5.843393],[2.408904,9.372772,-5.710745,-5.424684,-6.317513,-0.917116,-0.555296,-0.821284,6.460223,-5.060879],[-8.354690,-7.691668,0.898238,2.702219,-6.641751,2.326445,-3.351152,-5.611464,-2.799404,-7.126048],[-5.067414,8.536145,5.102960,-7.796033,-3.421478,9.317204,-4.956414,-3.310070,6.803343,8.719511],[6.647736,5.938104,0.193627,-8.275420,0.837350,-9.150667,1.216629,-8.448767,9.423080,2.851159],[2.422732,5.123169,-0.034830,0.382942,2.140962,7.783892,-9.228750,9.874650,2.308061,1.365125]],[[-9.043282,-6.834536,7.812420,-6.353798,-2.829350,-1.076488,-6.471647,1.382144,-6.005280,0.557762],[1.416413,-9.364591,1.346058,4.140235,6.846750,5.092894,2.772647,-4.345848,-6.226951,8.358735],[-8.360853,-1.889941,4.601950,-7.884445,3.124473,-2.815827,-2.486665,-2.496840,-5.238163,-9.644163],[-8.221623,8.333055,-3.318999,-2.939205,8.176841,1.544850,-2.390180,-4.536627,6.578331,5.999018],[-4.800592,0.601622,-8.979437,3.369325,0.840701,-3.133941,9.317050,8.494398,5.901950,9.390447],[-0.913100,0.956750,-4.628980,-9.658994,-8.527884,-7.785617,2.014170,0.306648,4.079467,-6.164183],[0.558182,-6.995761,7.257371,-7.284500,-0.468426,5.958456,-3.854880,2.594779,-9.114627,-2.768879],[9.315205,-8.935981,-5.181697,-4.876831,-6.663391,-2.786800,4.795516,-0.555696,1.352361,-8.434106],[-6.975685,-5.738987,-1.288051,-3.070265,5.219389,0.702797,5.396262,-5.962223,4.767383,-2.672858],[3.220052,6.519669,6.197414,8.658291,-9.482130,-6.407406,3.668018,8.486614,-8.529301,0.840746],[-5.175546,-9.986338,-8.016911,4.439584,7.715627,7.032620,5.305337,-9.923247,-1.859392,9.339885]],[[9.896091,-1.420000,-7.096232,-0.228771,9.763914,-5.851502,-4.812134,6.458180,0.020992,-9.314098],[-4.515766,-5.775376,3.648066,9.849368,-3.692238,-1.978376,-3.773093,2.926886,2.964095,-4.705825],[0.962963,-8.314921,7.295005,-0.317925,5.525010,-6.898565,-7.453125,5.311822,1.270938,6.107018],[3.308500,6.154819,-0.358579,-6.699932,-3.415634,-5.874161,4.588541,2.224342,1.952518,-8.250217],[-0.025748,-3.309852,5.360204,-5.236194,-9.279333,-6.665326,-9.731125,-1.348515,-5.441687,-3.419046],[6.883784,-4.327750,3.943202,3.893825,0.354727,0.121598,-9.144397,-9.901892,3.143361,-8.674686],[1.709062,3.404906,-6.328164,-9.065167,-7.983032,2.954217,-1.039679,2.648855,6.510972,-3.559587],[-3.618134,8.298724,6.770164,-1.572474,-8.211852,6.768180,8.884193,5.129802,-9.698073,7.789204],[-1.652796,-2.026015,-8.600823,2.323443,-2.189492,7.390633,3.384163,-7.744843,-7.584525,-5.354080],[4.364645,-6.324309,-5.933883,6.004483,-3.725872,-0.746562,5.417122,7.815154,-5.120658,-1.785574],[-4.177126,4.321357,-1.511862,-7.663885,-8.249624,9.074224,-2.611612,-3.789235,-0.839487,9.964170]],[[-3.176420,4.517458,-5.371402,-3.897066,5.819710,-6.320406,-5.752483,-0.847249,1.310171,5.604607],[9.555050,3.419314,0.887349,-0.414769,2.888605,-6.464743,2.773290,-9.194214,-4.969753,-4.278081],[8.205104,0.577224,-9.020207,-6.065209,-4.755674,8.600216,-9.913201,-3.697591,4.563394,8.892219],[-7.048884,-5.365776,-9.573177,-7.627282,1.351562,-7.197178,9.993434,-3.768652,2.131690,1.758280],[9.832536,5.051536,1.017572,5.824363,3.888924,-9.088729,-7.013600,8.392369,4.789478,8.940177],[2.946328,6.897932,6.947737,-2.009142,-1.330221,-7.120855,2.544584,1.452386,6.924193,3.157758],[-1.784774,0.153666,-6.718016,0.962763,-8.459133,3.096407,-7.435722,-2.203618,-6.732722,2.853369],[-2.271361,-1.936747,7.173266,-2.777078,-4.660136,0.030382,1.200370,4.533505,-1.507113,5.144987],[0.208071,-1.621081,1.899807,4.135344,1.142704,-6.555713,9.031546,2.160185,1.166841,5.035229],[3.066253,-4.948862,5.178523,1.578062,-0.903955,-5.847799,7.201415,4.054637,7.995741,-6.430374],[4.785571,-4.829139,-1.970022,-1.474286,-5.103266,5.530288,-2.320954,-0.136787,-6.866705,9.562082]]], dtype = "float32")#candidate|1089|(8, 11, 10)|const|float32
bop_1090 = relay.equal(const_1088.astype('bool'), relay.reshape(const_1089.astype('bool'), relay.shape_of(const_1088))) # shape=(8, 11, 10)
output = bop_1090
output2 = bop_1090
func_1121 = relay.Function([], output)
mod['func_1121'] = func_1121
mod = relay.transform.InferType()(mod)
output = func_1121()
func_1122 = relay.Function([], output)
mutated_mod['func_1122'] = func_1122
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1126 = func_1121_call()
call_1127 = func_1121_call()
output = relay.Tuple([call_1126,])
output2 = relay.Tuple([call_1127,])
func_1128 = relay.Function([], output)
mod['func_1128'] = func_1128
mod = relay.transform.InferType()(mod)
output = func_1128()
func_1129 = relay.Function([], output)
mutated_mod['func_1129'] = func_1129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_1165 = relay.TupleGetItem(func_1128_call(), 0)
call_1166 = relay.TupleGetItem(func_1129_call(), 0)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1174 = func_1121_call()
call_1175 = func_1121_call()
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_1179 = relay.TupleGetItem(func_1128_call(), 0)
call_1180 = relay.TupleGetItem(func_1129_call(), 0)
var_1184 = relay.var("var_1184", dtype = "bool", shape = (8, 11, 10))#candidate|1184|(8, 11, 10)|var|bool
bop_1185 = relay.divide(call_1174.astype('float32'), relay.reshape(var_1184.astype('float32'), relay.shape_of(call_1174))) # shape=(8, 11, 10)
bop_1188 = relay.divide(call_1175.astype('float32'), relay.reshape(var_1184.astype('float32'), relay.shape_of(call_1175))) # shape=(8, 11, 10)
uop_1189 = relay.atan(bop_1185.astype('float64')) # shape=(8, 11, 10)
uop_1191 = relay.atan(bop_1188.astype('float64')) # shape=(8, 11, 10)
uop_1198 = relay.tan(call_1179.astype('float32')) # shape=(8, 11, 10)
uop_1200 = relay.tan(call_1180.astype('float32')) # shape=(8, 11, 10)
output = relay.Tuple([call_1165,uop_1189,uop_1198,])
output2 = relay.Tuple([call_1166,uop_1191,uop_1200,])
func_1211 = relay.Function([var_1184,], output)
mod['func_1211'] = func_1211
mod = relay.transform.InferType()(mod)
var_1212 = relay.var("var_1212", dtype = "bool", shape = (8, 11, 10))#candidate|1212|(8, 11, 10)|var|bool
output = func_1211(var_1212)
func_1213 = relay.Function([var_1212], output)
mutated_mod['func_1213'] = func_1213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_1215 = relay.TupleGetItem(func_1128_call(), 0)
call_1216 = relay.TupleGetItem(func_1129_call(), 0)
func_583_call = mod.get_global_var('func_583')
func_587_call = mutated_mod.get_global_var('func_587')
const_1225 = relay.const([3,-4,-5,-4,-9,-3,9,9,-9,4,-8,3,-4,9,9,-7,-6,-7,-7,9,2,-5,1,7,-8,3,-5,5,-1,-1,6,3,10,2,-10,5,4,-1,5,6,10,-3,-10,-4,-3,-9,6,-1,-1,4,-8,1,1,7,-1,-1,-4,6,3,3,7,-4,-6,-9,-10,6,4,-9,1,-2,1,-5,-10,-7,3,8,3,-2,7,-4,6,6,-1,-6,-3,7,2,6,-5,4,4,7,-3,4,2,-10,2,-10,-3,7,5,-7,-8,-10,8,10,-7,7,5,4,3,-6,2,-10,-4,-8,-3,-7,-1,-5,-4,-9,9,5,-9,-1,-2,9,-7,-8,6,-2,-4,1,8,2,-8,-5,9,2,10,2,2,-6,8,10,2,4,-2,9,10,4,-2,-6,-10,9], dtype = "int32")#candidate|1225|(156,)|const|int32
call_1224 = relay.TupleGetItem(func_583_call(relay.reshape(const_1225.astype('int32'), [13, 3, 4]), relay.reshape(const_1225.astype('int32'), [13, 3, 4]), ), 0)
call_1226 = relay.TupleGetItem(func_587_call(relay.reshape(const_1225.astype('int32'), [13, 3, 4]), relay.reshape(const_1225.astype('int32'), [13, 3, 4]), ), 0)
uop_1231 = relay.sinh(call_1224.astype('float32')) # shape=(13, 3, 4)
uop_1233 = relay.sinh(call_1226.astype('float32')) # shape=(13, 3, 4)
var_1234 = relay.var("var_1234", dtype = "float32", shape = (13, 3, 4))#candidate|1234|(13, 3, 4)|var|float32
bop_1235 = relay.greater(uop_1231.astype('bool'), relay.reshape(var_1234.astype('bool'), relay.shape_of(uop_1231))) # shape=(13, 3, 4)
bop_1238 = relay.greater(uop_1233.astype('bool'), relay.reshape(var_1234.astype('bool'), relay.shape_of(uop_1233))) # shape=(13, 3, 4)
func_973_call = mod.get_global_var('func_973')
func_977_call = mutated_mod.get_global_var('func_977')
const_1241 = relay.const([7.172853,6.824787,0.629839,9.716411,0.699541,-8.401280,4.054858,-7.173299,8.289077,-7.011214,3.368535,-5.014456,1.766667,-9.170736,7.014848,3.316582,6.238229,4.480508,9.947616,4.931789,0.994676,3.416484,-4.580396,1.449826,-2.727101,-1.463485,-2.298688,3.743232,-6.641462,-0.552719,6.252604,-0.427138,4.006998,8.726266,-9.695357,7.877683,-7.882084,-1.677273,2.139221,9.276695,8.982136,8.860534,-0.710491,-7.839723,-8.323203,-4.810936,-3.659175,-2.250160,-8.172660,2.389113,-9.635719,1.610565,8.182660,5.287041,4.445409,-2.496013,-2.097640,9.176711,-3.222699,9.179873,-4.101239,-6.068811,9.800856,-6.774991,7.550512,-9.928988,0.899890,-2.501972,-6.624511,8.696658,-0.313441,-8.750348,2.116720,-4.395405,0.223426,5.773258,8.650035,6.276710,-6.195957,1.633615,7.581971,-3.822752,1.865611,7.699827,-6.891407,7.558806,-2.370490,-1.721847,1.561793,5.470014,-2.230078,8.894402,-4.145859,-9.054973,-0.064625,-4.383131,-1.536293,-8.232986,-2.154835,0.730620,-8.250186,3.611061,-9.115428,4.460183,-9.045771,9.465504,3.059136,0.248450,0.332309,-5.366323,7.093630,3.606130,3.878021,4.480998,7.580368,8.547711,6.519830,-9.577107,-3.678687,-5.486234,-6.664379,8.598957,-4.509231,8.720154,4.986062,4.980145,4.692996,-5.053813,0.261221,-6.055109,-5.157527,-4.669177,-0.923299,8.895705,-7.121948,-0.988099,0.660840,-3.287161,-8.095692,0.169353,-1.161942,-0.622334,1.634156,-8.265699,-3.034831,7.059763,-9.635766,-9.062988,-9.979207,3.155889,9.732463,3.213843,-8.680117,-3.782435,-1.988000,-5.057377,0.527250,-5.878533,5.521564,1.240105,2.875568,-0.926704,-1.258265,-8.880698,-1.645458,-8.634500,1.357314,8.505070,1.987973,-8.689002,6.003076,-5.252850,7.768544,-6.152856,-0.199390,-5.501021,-2.115980,6.782960,-2.534388,-6.225049,-1.440247,-8.816144,-3.127232,3.326546,-1.603460,0.406044,-7.418785,-3.339078,-9.919551,-5.466930,-7.117520,-3.044004,8.822209,4.916372,-3.514455,-7.866631,-2.401334,-0.672116,-7.822866,7.452088,-3.186009,5.055686,-9.726063,-9.265499,-7.929432,3.104182,-6.983598,7.821132,-5.089788,6.589114], dtype = "float64")#candidate|1241|(210,)|const|float64
call_1240 = relay.TupleGetItem(func_973_call(relay.reshape(const_1241.astype('float64'), [5, 7, 6]), relay.reshape(const_1241.astype('float64'), [5, 7, 6]), ), 0)
call_1242 = relay.TupleGetItem(func_977_call(relay.reshape(const_1241.astype('float64'), [5, 7, 6]), relay.reshape(const_1241.astype('float64'), [5, 7, 6]), ), 0)
bop_1243 = relay.logical_and(bop_1235.astype('bool'), relay.reshape(uop_1231.astype('bool'), relay.shape_of(bop_1235))) # shape=(13, 3, 4)
bop_1246 = relay.logical_and(bop_1238.astype('bool'), relay.reshape(uop_1233.astype('bool'), relay.shape_of(bop_1238))) # shape=(13, 3, 4)
func_749_call = mod.get_global_var('func_749')
func_753_call = mutated_mod.get_global_var('func_753')
const_1248 = relay.const(3.543674, dtype = "float32")#candidate|1248|()|const|float32
const_1249 = relay.const([-7.741625,-7.935369,-1.790359,8.205550,-6.910683,-6.321574,7.260734,7.861430,-5.170369,7.926454,-0.482616,4.846458,3.737026,3.226976,3.566322,-8.341956,1.965049,9.008641,-1.597531,9.893781,-1.450208,-6.238212,4.335925,5.603557,4.471297,7.267820,-1.209611,9.835730,6.521456,2.502066,5.389628,-6.602759,-5.855672,0.365791,7.020833,1.404866,-8.932187,4.355602,6.641302,0.410472,6.598108,7.221089,9.984758,-5.628869,3.521946,3.120434,6.264454,-5.847012,1.337556,1.436437,-6.805138,-4.761090,-8.994590,-2.560454,4.609467,6.786212,-1.743961,-6.511732,2.062939,4.434100,-6.984136,-2.384622,-5.481016,-0.745031,-5.882055,-3.736840,-3.561718,1.278659,1.495706,0.002604,3.560623,6.412487,8.929885,0.694621,-4.896899,4.189276,7.961415,4.926540,-1.707577,-7.647535,2.022699,5.585552,9.682027,-7.749928,7.173074,2.517448,-2.665455,-4.866811,1.871009,7.702782,-8.468301,-2.619027,-7.767466,-3.702355,4.367653,3.163062,2.468574,4.090952,2.454570,0.567931,9.421867,3.797144,-5.101516,2.014127,1.384307,6.271984,3.983508,4.738224,9.909171,3.292131,-4.224925,3.901773,3.938049,0.959058,8.466982,3.017415,6.312482,-3.589502,6.865703,9.106671,-5.609280,-2.042416,1.663845,1.693237,4.553316,7.532314,2.576594,-4.899469,0.548934,8.420477,-3.817958,7.191096,2.161591,9.520871,0.157534,7.155338,-8.129149,-9.473476,-2.394348,-4.087041,-1.587841,5.527268,9.353942,-5.660370,1.949621,9.502508,2.441524,-6.330536,-4.841884,0.825928,-8.451747,-9.538560,-6.193093,-4.945342,-5.548497,2.257191,2.635073,7.338894,-1.712475,9.109959,9.625242,6.034726,-3.076267,-0.642292,-1.868086,-1.806668,-9.232808,0.600051,2.965046,5.377208,-8.521818,-0.231650,-7.103775,-7.212006,-4.994310,-9.399382,-4.415448,-7.098534,9.795370,-8.557455,-5.889484,6.523854,6.898385,6.297001,-1.019230,-3.567739,2.684714,-6.494762,-0.861866,-9.925529,9.306617,9.680483,4.927810,-8.171108,-1.008634,-3.579618,6.907722,3.351838,-7.695598,-7.869063,-2.356932,6.255781,5.441873,1.171357,6.584332,-6.877109,-3.923956,-8.362852,2.093808,2.295169,1.925644,-8.228189,3.694200,6.955193,5.766932,-5.603528,7.817235,6.399937,-0.373154,-0.309754,1.423254,-8.246370,-2.913301,3.938464,2.632128,9.496738,-1.807067,4.773213,-1.461679,0.970806,-5.098154,5.898393,4.470357,0.304814,1.212432,9.677237,-2.119042,-6.204205,6.675533,9.157973,-9.726261,2.100190,-8.076519,-6.312692,-8.560912,-0.716580,-7.996512,-0.324456,5.298203,0.507162,5.833438,9.117170,-7.726198,7.984502,2.955653,-1.063789,5.928790,-1.458820,-5.426710,-7.543952,-2.519847,-6.716154,-6.065807,-4.167298,-9.452543,-5.436209,9.903739,6.822418,-6.070800,4.983870,4.625241,4.024466,3.512910,5.338119,5.362851,-5.334731,-0.584606,-2.278233,7.944440,-8.211736,-2.983662,-7.434457,-5.339704,5.173962,-3.547555,-7.255864,-3.981515,-5.045422,7.564409,7.488688,-9.588752,-5.578332,-4.041088,5.533833,-8.317752,4.511081,0.392021,-1.498244,-9.664922,-4.359654,-5.727486,-2.980631,-4.138103,-2.555154,-7.007617,-6.327299,-2.336526,-4.778232,7.112075,-4.136239,2.058421,-8.256201,9.767488,2.631634,-2.619837,-9.949032,-8.942875,1.723016,-5.911655,2.191940,-8.932295,6.656525,-7.384938,9.692424,5.115730,5.977349,-2.022716,1.876887,-0.410871,3.143402,-4.452253,1.253139,-2.805528,-8.070645,3.678732,-1.164707,3.449991,-1.264243,2.552637,-4.407371,0.907735,5.780462,7.184640,-4.476996,2.563507,5.542449,4.710257,6.810015,9.942800,-2.848181,6.506347,-8.558811,-7.876716,-0.689014,9.751931,8.728801,8.568494,-9.927049,7.263112,-4.333619,-1.482136,7.446158,1.351694,4.145930,-3.403316,9.099212,-0.707792,-6.283466,-7.312198,-0.193263,4.629440,-7.353314,9.988624,-1.893451,5.994925,0.182374,-4.141036,-2.706353,0.279933,-8.522157,7.979167,6.610127,-6.718545,2.822683,7.968735,-2.843118,4.663540,1.425488,7.403796,9.333315,-9.876300,-5.884014,5.042794,-8.454169,-1.822829,-4.491668,-2.595888,-1.063469,-9.540301,5.485796,6.659744,-2.616760,7.079191,3.987824,1.312957,6.512176,-9.310787,-3.234596,-7.240410,-1.014594,-6.215035,8.035077,8.793480,6.506590,9.940466,7.215970,-1.330695,9.959319,8.983739,-6.816133,5.603183,-5.109343,1.769692,-5.740192,-3.623859,-1.365055,3.645133,2.336197,8.795212,-6.783420,-8.400557,-8.791798,-8.561279,-5.410484,-2.960173,-6.174524,-5.408317,2.169932,-5.476475,-4.323516,5.906848,3.669730,-9.147198,9.099208,0.212753,-5.382337,0.805094,-5.580404,-3.380314,6.603699,2.778854,-5.316477,-2.345152,5.739367,6.167384,1.511299,-5.507560,-5.442598,-3.856281,3.693326,7.167229,8.091935,-9.615894,-9.885263,-6.405648,4.173052,-5.236273,7.997798,-3.219268,3.203677,-7.356605,-2.215611,7.938062,6.877634,-3.960517,4.964586,-7.681602,-2.198222,-1.698947,0.281177,-0.155169,-2.031928,1.779788,5.508452,-3.096161,7.511014,-3.228163,6.470580,-9.132819,5.823464,7.856101,8.434695,8.057774,-5.925068,-1.182414,-5.081045,2.780248,5.736141,-6.577665,-7.568225,8.240796,-9.557691,4.415105,5.562526,-3.845035,-8.904325,5.573030,-0.269356,7.420800,-3.771520,-8.884802,-0.945596,5.752123,-5.101174,-6.030879,-2.626056,8.653640,5.391459,8.096672,-7.083844,1.367310,6.764457,-3.813761,7.043988,0.835185,-0.348008,-8.840354,8.990393,-6.908387,-7.836743,-0.902354,0.363530,6.600372,-5.929827,9.751799,-4.536095,4.466691,-0.819736,0.168309,6.316732,2.995038,1.247460,-7.852313,-8.071712,-5.732806,3.957447,9.201561,-3.650061,-0.958587,5.481877,-0.884624,-2.262197,-3.379296,3.891709,1.758008,-4.945081,-4.583031,-6.409599,-3.645495,-3.943204,4.205982,2.696981,-3.178224,5.886081,-2.065381,-6.867143,4.819422,-9.488245,4.825551,3.796734,-0.482671,-0.720639,1.256711,6.119056,6.747327,0.009452,8.495728,4.006365,-3.659877,-7.271364,-8.955870,7.920100,-1.280889,7.738333,-5.905488,-8.110346,-8.540119,9.714741,3.304781,0.056720,-0.643321,-0.289938,6.588723,3.703763,-3.816798,-9.494203,7.023225,-2.106601,3.390323,8.038405,1.410508,-6.280443,-3.926273,7.805261,-6.054895,-1.730877,9.790210,-1.735269,4.412639,0.478514,-6.895995,-8.766032,4.346259,4.947731,-6.001544,-2.228425,-5.526849,0.463255,8.249553,-6.761350,4.874346,-6.321346,7.703158,7.628687,8.520998,7.285948,-6.468766,1.741286,-6.214540,-2.501312,3.338644,-2.894509,3.647914,2.050025,7.846103,-5.322879,-8.446969,8.973173,7.722609,-8.469724,2.557099,-0.669928,9.044870,-8.325390,-5.006814,-1.192142,7.944167,7.174043,-2.594266,2.530494,8.019934,-9.716368,3.656346,3.978007,-0.463442,2.918273,1.315149,2.088105,8.070187,1.691234,-3.330758,2.346822,-7.589361,-6.319481,6.119349,-1.767885,6.270496,1.634050,4.444970,-9.814954,-2.057602,6.216744,1.676680,2.734188,-8.048175,9.830357,-6.485962,8.976381,2.837376,-0.609709,1.528168,3.511921,5.391255,8.269707,-6.709097,4.135880,3.380492,-9.667960,5.329068,4.648583,-0.354059,6.683650,-2.757126,-2.474534,-3.012811,-2.686090,7.644645,2.997119,-6.899944,8.928524,-5.094066,-3.021298,-7.130197,-0.287615,-5.576695,8.639431,-4.808668,7.553258,9.365073,5.458807,-8.645887,-4.091951,5.689354,9.016717,-2.839529,-3.196109,2.810459,2.858996,-1.780435,2.312039,9.024287,2.646748,6.287818,-2.773163,-6.552316,0.263016,-1.873342,9.169158,0.904348,3.112487,2.307830,-5.717384,-8.638291,-3.667344,6.597337,4.101009,1.847592,5.532498,-8.481359,0.635862,2.258732,8.747863,-2.316446,6.259401,3.840986,-5.033934,8.389732,2.830208,-6.323424,-3.779754,-9.950664,-7.243917,-8.618211,-9.096261,-0.055682,-4.244499,-3.315298,7.430692,-4.304994,-4.378815,0.509385,-6.677432,3.233046,8.397539,-9.226105,-7.759692,9.908170,-4.979493,-1.477514,-4.314236,-0.410794,-7.280397,6.323640,-3.682593,-5.879846,0.131714,9.483112,-4.177788,-1.496054,-8.533780,0.022877,9.936379,6.956866,8.176434,-4.339309,-1.817424,-2.996311,-7.474692,-1.705716,7.943976,6.930624,8.147953,-5.632051,-5.520592,8.028247,4.044086,1.269682,2.325484,-3.433172,-5.710026,1.670649,-4.363895,4.791393,7.436921,2.211956,-9.026240,4.633094,1.766265,-9.460653,-0.726965,-0.227610,-7.461688,-6.175298,-2.551509,-9.692376,-3.688170,-8.280779,9.050823,2.974690,6.076522,0.343355,7.789748,5.578359,6.217182,-1.147004,9.966780,7.312229,-3.541690,-6.360623,1.172611,6.689305,-0.755724,-5.459102,3.148437,-5.030442,-1.228105,6.670038,-1.658903,-5.692730,-2.264332,-1.858941,1.773747,0.391800,2.637439,-4.008146,7.172913,-9.215984,6.569389,3.007696,-6.332669,-2.406617,-1.388242,1.115812,-2.229580,-5.557174,-5.036876,6.551003,-3.691719,-7.049882,-4.876527,-5.605121,-0.299433,0.964986,7.499435,4.577372,-6.171436,-8.122278,8.892376,5.018665,3.807308,-2.231309,-3.779528,4.642375,-0.154699,2.093347,2.089132,-4.948842,-6.268307,5.117222,1.686294,-4.896784,-9.317291,-5.258312,-7.666777,-2.703804,0.066910,2.197884,-7.868580,-0.370039,-9.936434,8.894293,-4.279289,-8.320361,6.481119,-2.679997,-8.739875,-2.372176,-7.171820,-7.610032,-8.214326,-3.812148,1.399917,-4.978652,0.872113,-1.805355,-0.841912,7.287696,-2.061531,8.073066,8.600111,-1.039845,-6.650545,2.368850,5.049090,3.685522,-1.966572,7.727487,-8.595335,6.106046,-8.587421,0.699798,8.654654,8.691385,-6.516257,4.585864,4.462615,8.591066,-6.764216,-1.707605,-6.764399,0.498657,7.615194,-5.951660,-8.912280,0.821390,-7.721505,6.652344,7.698565,5.664791,-6.542980,-2.233878,-8.283924,6.131807,-4.366246,-9.768814,-5.254678,1.873976,-7.153192,1.717112,0.206871,0.245201,8.333053,2.990222,-6.732555,9.399524,2.504121,-1.366997,1.608092,-1.588535,3.286238,7.329557,-0.599346,5.962050,-5.722595,-4.023397,-9.473881,8.219501,-6.961754,-1.904328,5.787549,1.737774,6.006125,-8.290937,-6.960431,-6.567956,0.628938,6.444286,-3.951524,-7.785954,4.720769,-3.142939,6.141634,5.115397,-6.976251,-0.168831,6.848141,-6.843023,5.225169,-8.133145,8.443408,2.650072,-9.885987,3.741591,6.701905,2.111507,-2.851238,-2.273027,-6.796481,6.882428,-3.745432,-0.230987,-6.113032,-6.970853,-7.574446,7.260668,-3.479254,-8.178255,9.496993,3.968971,-9.381875,0.140771,1.434661,-5.166226,2.060744,-2.184971,3.331572,-1.686093,-9.116863,3.483312,6.314404,-6.270007,2.655964,-1.946454,-1.288708,0.632577,-2.940522,8.341550,2.076168,0.400761,-0.940194,-7.574787,1.434118,9.160809,6.304402,-9.744463,3.159481,-6.326111,9.180599,3.958591,5.564055,-9.845065,3.405762,6.893528,1.658584,3.166394,-5.376113,7.669690,-3.661080,0.933167,5.985942,-5.490468,2.575291,6.104705,7.452882,-4.080177,-1.792696,1.075436,8.828431,-7.767237,5.859421,-4.709435,3.699240,1.074028,-8.004260,0.034578,-7.424371,-1.923580,2.313979,7.515709,-5.724957,5.508916,-0.089765,-2.162255,8.090427,6.540488,-9.037677,-6.158676,3.900805,-9.891312,3.327554,-1.414927,9.520861,4.263540,-6.183364,-2.005920,-8.626717,5.516750,-0.307381,-2.711625,-3.248272,-0.100676,5.254461,-1.763748,1.834814,-7.820263,8.712688,-3.845986,0.823279,9.742412,-5.249280,-5.202187,7.842593,-0.299019,7.186264,2.350959,-9.369809,1.782816,-8.905760,-2.735403,-6.111521,-5.815587,6.641162,-1.373794,-3.888201,1.656949,2.306144,-3.725498,1.592907,-6.985247,0.284477,2.402531,-9.539136,-1.696378,-6.940315,-5.834675,9.306155,-2.279313,5.900152,-1.329387,-4.733847,2.158296,8.322919,-6.135967,-7.916526,-2.613316,-0.111631,5.533760,-3.667043,-5.914072,-4.840752,2.954133,6.708701,8.755689,-1.453247,4.963859,6.792540,2.176687,-8.840095,1.211236,-0.831938,-3.618887,2.651062,3.485586,2.827226,1.906298,-4.147804,-8.524450,-3.553186,7.697951,0.772675,-8.984671,7.558324,2.993111,9.402615,-6.882442,-3.764276,1.179764,-1.600843,8.433836,-7.449295,1.141234,7.033561,-2.853730,0.359341,5.945227,-6.524247,2.274658,8.361180,3.805089,-0.977400,-4.562776,1.805982,-4.119633,0.109202,7.692656,-9.472975,-0.699970,-8.885484,-5.081941,-7.369322,-2.740383,3.375896,-5.530849,2.334815,9.702550,6.715727,-6.842948,0.934504,-2.576483,1.158238,-2.071181,3.182019,7.576250,-5.437668,2.499165,6.274562,7.828496,-7.613979,4.247544,-4.982431,6.946155,5.776694,-3.810925,-9.123592,5.719884,-8.746492,-4.958377,-0.774986,-4.733678,5.036330,-5.625401,5.332215,7.453298,9.017506,3.990014,9.414301,-6.575803,0.383114,-2.794591,0.040484,7.432145,3.250831,7.751011,5.437825,-0.157131,-4.608555,-3.888483,1.953436,9.640175,-5.260154,-0.014241,8.550816,-7.151136,6.308530,-0.498962,-7.513527,-2.131255,7.324889,-2.849892,2.627368,8.263381,7.864257,-4.452751,5.107015,5.688127,-7.235359,-1.764877,-5.169673,-8.726837,7.441959,4.614991,-1.969074,5.899830,6.979768,3.723153,5.738040,-1.787677,-2.567068,6.298365,-8.516922,0.842912,-5.179523,-6.331956,0.196815,-7.140954,-1.778705,-7.023737,3.630401,-0.781415,4.525581,-6.336306,6.646997,7.460904,8.043632,0.497557,-8.252245,-9.363521,-7.393384,6.376540,-6.585584,-8.757616,8.004606,4.675868,4.342533,-5.025417,2.290102,8.620920,7.728766,-6.795802,5.151168,8.100906,0.005728,-6.162857,-3.325475,0.478031,1.800887,4.344104,-4.951200,6.930604,4.446682,9.731460,-0.045672,2.290366,4.259051,-6.545476,7.120198,-1.807053,-2.199665,0.911825,0.285067,0.409119,-3.752308,7.549387,2.703371,-2.546226,-1.734925,-3.249938,-7.399530,6.675175,9.508609,-4.320296,2.119425,8.504075,9.629032,-0.812850,1.523328,7.810304,2.202256,0.703657,-0.340108,6.603729,2.825664,0.684325,3.272417,3.525921,7.712584,3.131150,3.647848,-5.181196,7.667554,5.172936,-3.223854,8.595648,5.179969,-7.333146,-0.600061,8.613250,8.964149,-3.313439,4.081543,-5.719720,5.108548,7.282065,-0.019508,-2.129659,-6.404421,3.319457,-6.997586,-3.076670,3.249832,7.482490,-1.574565,6.147350,-2.940163,-3.668428,1.033308,-2.523108,8.783824,8.073034,9.314481,4.091126,2.184060,-8.376435,1.400069,-0.795304,5.874283,7.005343,-7.041895,-7.872183,-2.566193,-8.519172,3.283538,-2.549329,-1.335151,-7.151761,6.509384,2.869811,-6.705802,3.754387,7.363083,-7.573152,2.208666,-1.989925,-2.010101,-4.819830,-0.319173,3.338413,4.149660,-2.642467,1.765186,3.350834,-5.626751,-4.369042,-4.947506,7.564978,4.975901,2.293570,4.583310,-0.638988,-8.071516,-2.821103,9.791175,-4.728342,7.106171,-0.142340,6.300234,-9.918513,-8.826577,0.882879,-3.642153,-9.971525,-0.479367,-4.806041,-7.164787,-6.221960,-8.210766,7.063912,-2.996841,-1.281509,-9.516520,-6.611463,7.856266,8.703453,4.059422,-7.713443,7.603453,3.626037,-2.898153,5.591689,-6.967913,7.905080,-7.697548,-0.029696,-4.662378,4.889511,1.927913,9.091014,-0.464985,7.058322,3.243773,7.139667,-4.530562,-1.392316,-2.732233,5.215464,5.970790,7.943627,7.037922,-0.860661,5.026947,-8.911880,-6.644123,7.444334,4.505899,-7.435701,-9.156441,2.738830,4.604670,-4.785224,-4.553817,-0.083631,-8.527970,8.159506,-9.021846,-5.641057,7.306475,-6.707128,-4.248606,-9.068577,-4.840546,-8.580232,-3.659612,-2.140947,0.338282,-0.731875,-2.159899,-5.004075,-4.297010,8.837661,6.766637,-7.277747,-1.397457,-2.938242,-9.230040,-7.264428,-3.981563,-6.731553,5.965725,-3.749435,0.634300,-0.052515,4.529105,-8.521110,-2.852476,-6.597618,8.264550,6.082304,-2.460916,-1.966767,-0.408115,8.506562,3.286955,-7.945054,-3.739010,-0.582722,1.334034,-0.385349,7.709190,-7.941464,-1.933642,2.148410,-2.289668,7.519507,3.651318,5.104948,1.425880,-3.408637,-7.006766,2.101954,1.374399,-3.324705,-6.303822,1.412435,-6.788379,4.227179,6.849103,-8.750000,8.752102,-6.919037,-7.756085,5.385303,-5.359384,-9.108899,-1.694720,-5.342270,4.472739,-1.733851,2.103927,5.418803,1.133853,-5.770125,-3.929004,-9.423481,-9.467204,-2.973833,1.295917,-1.862543,5.172183,-8.872349,-8.081938,3.035637,-9.793496,1.366841,0.811753,3.180636,-5.241856,4.615777,-7.416800,-6.955033,-7.001348,8.318700,-0.082337,-0.512461,8.134981,0.784948,6.816177,5.879700,-9.303949,2.455211,-0.390958,5.003336,-9.912128,7.470730,-0.743793,8.997938,-5.133083,-9.101386,4.919418,-8.788801,-3.111890,-4.854786,-2.481207,2.383350,0.032054,-1.792117,3.049150,-4.344556,8.744977,-9.327426,9.871450,-5.608706,6.281985,8.735928,1.455682,1.438697,5.979601,2.872309,1.548193,3.484326,9.157966,-6.130737,6.210781,-6.600907,-9.864382,-8.679670,7.047653,3.000473,-0.755213,5.750286,-2.702781,7.519225,-5.243049,0.445310,4.464704,-4.928018,4.609181,9.292710,2.535146,4.051021,-4.124989,-7.137208,-0.608970,-3.820338,-5.739067,4.647432,-2.599329,-2.467723,6.923094,1.042120,-8.358557,-8.446207,-3.237432,-6.695777,1.537999,-2.992238,-6.203575,3.822542,-9.039879,9.492877,6.139104,-1.753471,3.804039,4.663082,-4.594466,2.494582,-0.272601,-6.384471,7.735884,8.697732,-4.861625,-1.097893,-9.056118,-0.512212,-3.469906,4.357695,-0.854250,4.249591,-1.424161,-5.969357,5.514874,-0.829688,5.697225,6.089777,3.771347,-6.819923,-6.876342,-0.114864,-7.626001,2.390933,-8.989574,1.824759,-7.206645,-0.553540,3.180473,-6.552843,-3.488419,-1.745474,2.298855,-2.223626,-5.809102,6.064893,-8.793751,2.741573,-0.430727,9.001826,0.642599,0.966584,0.791350,7.910505,-7.516576,-3.507769,-3.243414,6.485135,-6.109159,-5.508158,-9.722132,5.778071,-3.665702,4.079903,1.701557,0.310578,7.643840,2.506691,1.806531,9.628403,-1.504407,-8.209535,8.962702,-7.874682,-9.514486,-5.140826,-9.103214,5.387421,8.364433,7.079516,6.185168,4.689138,9.671947,7.483080,6.009820,6.749872,-1.848593,-4.014720,4.377885,2.506932,-5.570858,-3.856381,3.242926,9.445843,-4.991500,-9.209083,0.035607,7.962076,-7.541882,6.883776,4.292040,9.420452,6.446504,3.764226,-4.456796,-8.553920,2.550192,-3.130789,-9.452731,2.963346,-5.955595,-5.909030,2.857140,5.703223,-6.201336,-5.529705,3.157370,-9.264960,7.402161,0.885804,-9.587398,-5.797114,-3.725781,2.914194,-4.118684,9.764744,-1.783045,9.722200,6.381510,2.986966,9.137359,-7.725103,2.574968,6.621987,-9.745287,-3.034397,-5.736168,-0.249540,8.933912,6.693448,-5.785806,5.130357,-0.626199,9.794395,0.148686,-7.905640,-2.273103,7.947541,1.210257,-5.667847,9.104267,-0.120578,-0.661270,-2.670104,-6.516096,3.411969,-6.369191,2.358237,8.065284,5.771344,2.045124,-3.542675,-9.680932,2.529120,-1.804458,5.028992,6.159293,-8.819732,3.557722,0.539170,-5.865676,-8.893506,3.417018,-3.441467,-6.825673,7.554566,6.584247,5.834310,5.728077,4.728288,2.818203,8.707811,-7.780608,-2.876331,-0.728539,-3.034750,-6.183430,-2.045836,-2.529741,2.734771,-7.165307,9.611287,-0.084069,6.161951,8.152520,0.532825,3.670679,4.642096,-0.535898,1.235354,-9.850331,-9.739198,0.668346,-5.326448,7.755853,-6.461567,3.587043,7.151686,5.331416,9.262889,6.324494,8.163616,-8.668710,-7.902746,-1.418281,0.641985,2.095315,6.958089,-2.449540,9.396837,5.548708,1.916843,1.492713,-9.539090,6.597730,1.212432,1.976509,-1.523475,-7.837919,-4.466331,-0.846285,3.479410,9.568119,-2.340644,-7.788229,1.400213,-6.974675,-4.120175,5.474895,-4.882682,5.860366,6.883394,-5.533385,-9.718867,2.722927,8.843217,-4.767089,7.981331,0.346062,-3.143856,9.126486,-7.599456,-2.728682,6.798715,5.955829,2.876350,-8.804053,7.003326,-7.642142,9.675577,3.886314,0.705370,5.043523,1.939246,3.457720,-1.151065,-4.956603,-4.421422,-4.216296,-7.533665,6.081991,-7.332262,4.648332,-2.712157,7.284185,0.278199,-6.552161,-5.516740,1.091587,-2.776363,2.505921,-5.802627,1.220807,6.458778,-1.606257,-0.790555,9.044015,9.031138,-1.316522,-7.706946,6.988948,-6.368391,-5.819700,0.409919,6.645834,-9.141314,3.440036,-8.632000,4.152539,-7.123697,6.847529,5.588298,1.088184,5.150286,-0.400007,2.967909,6.285012,1.486668,-0.791900,-4.090803,4.285124,8.318617,5.543122,4.259087,0.602585,-9.684883,-0.861149,5.949045,5.801398,-8.339469,-5.774326,2.631491,1.955362,3.026819,-5.105854,4.451006,5.099350,-8.317753,-7.589714,4.911805,0.123982,6.461174,-6.531916,8.299501,4.482136,4.290488,9.154712,-6.074900,-6.992345,-3.521797,2.648009,-5.113493,-8.145399,4.283415,-0.430650,-8.536386,-9.779399,-2.560417,-0.464535,-9.571132,7.107552,8.887516,3.250110,3.749801,-1.387652,-4.734633,-0.135724,-2.156035,3.371278,1.458019,-0.302197,8.438912,8.872914,1.323519,8.935215,-0.914956,-2.315189,8.786617,9.802016,1.830191,-8.987105,6.408983,-6.827752,-6.308757,7.358486,6.319356,3.875833,-0.335565,-2.534470,6.300037,-3.242174,-8.584844,4.052816,-9.831312,4.898242,-3.022546,2.261866,-4.305842,5.170008,4.111187,-8.207163,2.797096,6.222233,1.651951,5.738700,3.382306,-2.489804,-0.220347,9.139881,-4.541675,-4.207233,-8.802856,-6.308707,7.146050,2.453733,-4.415403,-1.432711,-9.689224,6.388426,6.251470,-6.047835,-5.294732,8.182295,-4.247117,8.057445,5.116515,-3.112811,4.499774,-2.064805,-2.575198,6.815369,4.307604,-5.839624,2.501052,7.572082,7.172052,8.372231,-5.488687,-4.838369,5.879065,2.782063,-4.343997,9.736540,-6.212138,-7.673596,0.791692,0.262499,9.878814,-2.131416,-3.949622,-9.261168,8.003465,7.395750,-0.371085,0.815865,-2.658721,-8.162189,-1.163496,-5.499703,2.961407,3.883770,3.772423,0.231400,2.733477,5.680222,-0.495992,2.419365,-4.500744,1.139604,-8.824764,-5.998529,-0.624122,8.161112,-7.323486,1.538937,1.614831,0.807025,-8.328179,6.031970,-2.675075,0.034269,-8.985301,5.230098,5.146830,1.635535,0.707646,-0.587273,-1.013257,-0.935416,-6.296198,-9.273750,-3.901777,-2.097011,3.228790,-5.041840,-8.327205,-8.806710,-1.910479,2.787057,-1.527241,-6.413902,7.148256,8.688008,-2.154975,-3.198845,-4.125975,-8.658093,-9.178153,6.406330,7.605705,-5.015938,8.487896,-3.502553,-4.873599,4.254185,4.475923,-3.678078,2.625016,-2.241040,3.165164,-9.115949,-8.748913,-9.882574,7.383251,-7.224126,-3.101942,-2.433183,3.052378,8.208546,4.269242,-9.755121,-5.102046,0.143240,7.315716,-3.974984,-3.485980,-1.176680,3.328804,-1.478723,-9.459002,6.308426,1.541173,-6.851064,2.872448,-1.182709,-5.606349,3.225944,8.939887,-4.193801,-2.806275,2.257328,4.521297,2.025020,-8.637171,8.352753,-4.268351,1.601986,5.165346,-7.825250,-6.669951,0.110491,-5.551084,1.457702,3.796126,-5.649458,-3.415511,-8.699447,6.666028,1.673939,9.126349,-5.568267,0.774365,4.396844,6.812133,4.298530,-4.435869,-2.158275,2.377236,-0.555690,-0.101094,7.722128,-6.234573,-9.414802,2.997319,-7.727289,5.495266,9.007281,-1.056591,2.955934,-1.264584,6.473377,0.220427,1.782763,-6.749695,8.003593,-6.889421,2.094967,-5.483177,-6.007011,8.612098,5.701953,2.795167,-5.524086,0.800152,6.715930,-0.072479,8.003873,5.666733,2.792888,-2.062272,-8.072399,7.152579,-9.317670,2.064445,4.901792,6.942153,0.356853,1.548377,-5.574369,6.368836,1.358946,4.194566,7.551267,0.779914,-4.194206,5.855632,3.699676,-9.312884,4.227234,-9.728095,6.631804,5.001257,3.039990,-7.477237,3.350926,0.638705,4.936533,4.016344,7.952380,8.132837,8.301569,-5.316813,1.177465,-8.209685,7.448208,-3.101166,-9.625879,4.427125,-1.026283,1.717283,-3.030314,-7.457050,1.142615,-3.658784,0.868590,-3.942486,9.300690,3.922882,-6.672154,4.923184,-4.559265,-7.063829,0.767775,-7.407304,4.317080,9.236649,7.634938,2.026161,-7.850724,2.424448,-5.096601,-3.340740,0.124752,-5.915755,9.984662,0.545240,7.572796,-6.636836,1.898813,9.649433,-4.343898,-7.137710,-2.478455,1.493744,-1.570419,-8.204302,-5.713929,-4.862378,-1.962119,0.154924,-9.925213,-6.460600,-0.798142,-1.342781,5.342558,-8.676110,-3.950340,8.694679,1.874761,3.911039,-3.941768,-0.532176,-6.569542,-4.244696,3.315427,-9.335695,-2.383335,-6.035983,0.283649,-6.181271,-0.889869,0.782384,-7.711329,4.180619,7.475756,4.912195,0.524682,-5.977315,-0.563094,-8.035737,0.591877,6.488871,7.465801,-3.708441,-6.756973,-6.058596,-1.467336,3.421215,-4.335753,-7.072214,-7.322258,9.686580,3.206427,7.123588,-3.884466,4.425797,4.115366,3.439417,-6.291105,8.191325,3.568202,0.323797,3.875461,-5.941277,-9.900309,3.093892,-4.417257,-5.041673,4.871807,5.116480,5.242238,6.902376,1.613344,-1.587763,-5.072337,-0.213864,9.075550,1.105121,-6.644717,-7.563843,-5.037362,2.396237,6.851046,-1.333426,-1.839176,-4.833704,6.111082,-7.795634,1.055811,-7.612388,-3.580841,8.615186,3.253513,4.772071,-4.923006,-1.684537,3.956872,3.426039,9.093171,8.122967,3.581323,8.159541,7.499750,9.821818,-1.320026,0.319217,-2.302755,-6.741700,2.045871,0.380037,-6.257679,0.668149,-7.445585,-9.136443,-6.789866,8.022989,3.575875,-3.089955,-2.197626,6.321865,-6.912916,6.467224,7.095050,-5.771656,2.658001,-1.006944,6.662209,-9.965946,-0.158448,6.191762,-7.031636,-7.946691,9.647808,3.510408,-8.237384,8.956472,5.797333,0.732450,-2.710649,0.791683,-8.417784,1.159595,0.596166,9.059244,-5.201649,0.812952,5.385507,8.633113,-7.049624,-4.511547,4.559180,0.517543,-7.146552,-8.996012,-4.568179,8.744288,2.226159,-4.300384,-9.533689,9.179092,-1.750123,8.195718,-6.809918,0.449023,0.115069,-2.525695,0.865766,4.761991,-5.519545,-8.523599,-7.370702,7.198190,9.055271,-9.239609,4.067773,-4.116505,-6.594456,8.803258,-4.713266,-6.638873,-2.466031,1.604136,-3.892449,-6.018612,-3.145496,-7.457291,-1.593963,-8.804225,6.495263,2.966174,-5.569541,8.670117,1.576167,-7.020011,4.857078,-7.122667,3.591206,9.052461,-3.884197,-8.350711,-2.888051,8.285512,4.530731,-4.084787,6.587660,3.623408,-8.199921,-5.099768,-7.377041,5.795141,4.740936,7.307846,5.033361,6.011903,-3.501776,-3.187667,-9.973298,4.459510,-8.865773,-8.708915,2.630229,6.176418,-2.913392,-4.307374,-8.080728,-4.266524,3.375916,-5.901483,-7.340380,-5.710575,-8.455166,-2.459500,3.520908,-2.230551,5.854967,3.283684,-1.754907,-1.159117,-5.644929,4.219027,9.664561,1.102093,-6.053709,8.269358,0.008308,4.733247,3.734907,-7.196215,-2.474940,-1.146238,7.326687,-9.696706,-7.033885,0.015506,1.231389,-0.454672,-3.794965,5.909073,2.562575,-9.092174,5.982955,-4.425857,3.778179,5.081227,4.607611,1.871451,3.649096,5.359614,5.999856,-0.981841,1.651321,9.253890,-8.005238,-7.915387,1.575418,-0.264494,3.384274,8.630375,6.437988,-1.530440,-1.490429,-6.960191,7.443110,-5.053985,-1.814753,-7.346008,7.876017,7.980801,-7.255736,8.700820,-3.747480,-0.173156,5.686725,-5.329545,-0.425632,6.449520,6.186025,-4.498291,4.719238,6.194461,-0.340806,-4.866595,7.689836,9.238258,5.452042,5.500479,9.885006,7.106793,-0.008114,8.559327,-0.140878,6.733787,-7.236805,6.204709,-7.032442,7.151991,-1.983047,-7.656731,-1.963868,4.692547,5.368820,0.966930,8.786440,9.417160,9.007122,-0.590111,4.988608,7.622475,-8.927133,-2.079473,9.815529,8.139959,0.157723,3.258152,9.173102,4.759659,8.966668,4.943082,-5.883829,-1.299013,-8.957650,7.999216,2.982810,7.752123,6.954705,-0.450107,-8.175268,-3.394298,-5.208479,4.936322,3.481996,-9.514468,4.352698,9.323665,-4.515439,9.101247,-4.900648,-2.201718,6.091859,7.985224,0.311641,4.689884,1.994964,3.005240,4.565961,-8.883384,-3.440674,-6.409164,-6.137992,1.973565,0.794584,0.270085,3.431936,2.321475,-7.718638,-7.297910,7.983416,5.266248,3.676425,-1.780646,7.046272,7.646256,7.551741,7.340413,4.338004,-1.255528,-1.820004,6.827052,4.270619,-6.843064,7.559839,-1.118759,2.686189,-1.539180,-6.889763,1.104053,7.107170,1.015824,-4.906245,-3.720070,5.970724,4.964894,2.060436,-4.788977,6.065077,-1.061132,5.563797,5.229309,-4.315834,7.907136,-2.185155,-9.515302,-3.177373,-8.507135,-0.473281,-1.196637,8.360926,3.706727,-3.838517,-4.123000,4.515057,0.569034,5.237712,2.253728,-7.517812,-2.464562,3.050155,-2.792180,4.266821,7.556528,1.315169,7.107179,8.096019,1.969879,-7.902873,5.358474,-7.429301,-4.886659,-6.373518,8.458927,4.319907,9.097384,-7.215460,-8.364735,6.166511,-4.740692,5.271457,2.060650,-8.628624,1.213480,-5.481859,-6.011846,9.414197,-5.057215,-6.650567,-8.232039,-6.711763,9.933078,2.121466,-3.848494,0.281823,0.597735,-1.472324,9.935145,-1.223643,-6.299666,9.285368,8.015439,9.971008,-8.892299,-6.896807,8.837263,7.012143,2.203017,-2.739657,4.363495,-0.856079,6.595469,8.171080,-1.788147,9.882642,5.816779,5.609518,9.989602,-1.526994,9.262625,-1.646100,2.136757,2.047097,-8.897070,-8.960069,6.904312,-8.411609,-2.705970,3.127577,6.378006,2.735450,7.196726,-0.045256,1.649960,9.691784,9.511305,-1.621032,9.803005,8.965031,2.713972,8.889206,1.578926,6.856861,5.716057,-8.041026,1.175428,8.067542,-4.045360,1.372839,4.224577,-3.270294,-1.482854,2.118035,-5.220696,5.332468,0.291193,-8.429219,6.609750,-5.868575,-6.385328,5.157916,-3.489641,5.866242,-7.948359,-5.258609,2.530117,-6.544382,2.561100,2.088278,2.196059,-8.818703,7.838676,4.768761,-9.288101,3.517123,-4.917665,8.588022,-3.611627,5.687273,4.821142,-6.249025,3.021685,1.053263,-7.500402,-2.543755,6.469371,-4.838524,-7.196337,4.670341], dtype = "float32")#candidate|1249|(2880,)|const|float32
call_1247 = relay.TupleGetItem(func_749_call(relay.reshape(const_1248.astype('float32'), []), relay.reshape(const_1249.astype('float32'), [12, 16, 15]), ), 0)
call_1250 = relay.TupleGetItem(func_753_call(relay.reshape(const_1248.astype('float32'), []), relay.reshape(const_1249.astype('float32'), [12, 16, 15]), ), 0)
output = relay.Tuple([call_1215,const_1225,call_1240,const_1241,bop_1243,call_1247,const_1248,const_1249,])
output2 = relay.Tuple([call_1216,const_1225,call_1242,const_1241,bop_1246,call_1250,const_1248,const_1249,])
func_1252 = relay.Function([var_1234,], output)
mod['func_1252'] = func_1252
mod = relay.transform.InferType()(mod)
mutated_mod['func_1252'] = func_1252
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1253 = relay.var("var_1253", dtype = "float32", shape = (13, 3, 4))#candidate|1253|(13, 3, 4)|var|float32
func_1252_call = mutated_mod.get_global_var('func_1252')
call_1254 = func_1252_call(var_1253)
output = call_1254
func_1255 = relay.Function([var_1253], output)
mutated_mod['func_1255'] = func_1255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1268 = func_1121_call()
call_1269 = func_1121_call()
func_1057_call = mod.get_global_var('func_1057')
func_1064_call = mutated_mod.get_global_var('func_1064')
var_1271 = relay.var("var_1271", dtype = "bool", shape = (6, 308))#candidate|1271|(6, 308)|var|bool
const_1272 = relay.const(4.354889, dtype = "float32")#candidate|1272|()|const|float32
const_1273 = relay.const([6.084812,0.640190,4.417550,6.318237,-6.552072,-3.805243,0.168256,5.274209,7.643898,4.394867,0.851058,3.431851,7.501224,-4.909615,-2.875160,-1.801284,-3.728761,-3.054281,1.037727,-7.792268,4.975540,5.736131,0.754955,8.746152,-0.085394,2.702583,0.624630,1.393676,6.052766,-0.887198,7.845329,-3.401875,-4.978904,4.423686,-0.437275,7.410290,-4.667443,-1.480679,-2.279110,4.275119,-0.373669,-2.356998,9.857658,7.998942,4.464577,-1.721048,-5.930430,-1.552916,9.743902,9.154234,-2.583616,3.478991,3.319662,-8.656464,9.518184,-0.589267,-2.923228,-0.014085,-4.566307,2.056576,6.192733,-7.478193,-8.167094,-6.013779,-9.243836,3.430992,4.990288,-7.113696,-9.242076,-3.608245,-2.519675,-0.684529,6.557923,-0.590026,-2.146668,7.879432,9.820538,3.289252,2.535453,9.784943,6.297085,-3.276595,1.221809,9.936445,2.888881,-5.781913,0.226631,6.471210,9.660453,-6.935909,5.399944,5.038371,-0.750874,-4.162713,-2.236765,9.325287,-6.622782,-8.057845,-6.951952,9.520352,3.776077,0.717191,-8.634514,2.282502,-0.893276,3.424384,-7.789500,-3.018101,-3.839345,-5.161231,-9.474839,-2.459415,8.796203,9.639141,9.482291,0.944177,-2.491171,6.966245,6.357455,-6.959151,-9.741838,0.250825,-1.172141,4.786160,-4.291162,7.168697,-3.992752,8.527262,4.056589,4.523736,-2.948776,9.342902,-5.581553,0.012389,-6.757829,2.401530,-9.830977,4.443743,2.686854,1.335730,-6.416715,-4.586299,-2.133357,-9.193293,-2.825294,-6.084667,-4.186772,3.872398,-9.078780,7.698386,-9.863804,-0.666643,5.007793,5.770664,-9.510404,5.599900,-8.654417,2.322883,7.051722,-3.845567,-1.324840,-6.260662,-7.763856,5.933158,6.655947,2.298997,7.912229,-0.720567,8.488205,5.501939,-1.836785,-7.484056,9.098531,7.456715,6.025637,-5.967301,5.190762,2.712096,5.242565,-7.064158,1.164276,-7.496831,4.077789,2.053813,3.299383,0.765440,6.414995,-4.911888,8.400108,-0.486777,0.102846,-4.913629,5.658096,-3.047960,-2.718340,1.699458,3.983985,7.150084,-2.118086,1.426806,7.269193,7.310212,0.673821,3.245899,-5.831632,7.369594,2.713951,-9.812306,7.908163,3.847463,3.743614,5.830456,-2.225102,-6.144090,-9.827970,-1.704293,-5.579077,-1.784232,9.490268,-2.728872,3.969831,3.720943,-4.906269,-8.628122,0.971114,8.438580,-8.354218,5.354740,0.890439,-4.424234,6.656163,-0.683762,-7.375564,5.969199,-7.929414,4.129598,-7.151461,-4.516760,-9.401616,-1.263781,-9.486825,7.763326,9.281630,-5.039289,-2.533288,-7.939102,6.546951,7.497320,0.854527,-3.374199,-0.408723,-6.095972,-7.223527,5.732905,3.700218,-6.052100,-5.361282,-8.847020,-5.351638,-3.356233,9.731007,1.775796,7.081046,7.285122,3.960572,0.912241,6.527908,-2.403335,-6.976881,7.689177,-2.958880,-4.892645,9.746298,-8.314950,2.238218,-5.380127,4.997869,3.794698,-5.817233,4.934553,-8.012074,3.719482,-7.940552,-4.019349,-3.036123,-4.194259,2.846484,4.444757,-3.222998,8.355200,-6.251567,-3.895231,4.262393,0.137936,-1.604829,6.789351,6.006466,9.503054,0.767857,-6.982219,5.312125,-8.090779,9.034545,8.584722,9.383418,1.658346,-2.747759,3.644973,-1.150178,4.965753,3.620879,3.626453,3.236161,9.800968,-4.872252,-5.428280,-7.238066,6.336636,-8.088035,9.867306,7.069591,-6.937814,7.940172,3.080668,-5.865843,-3.755724,6.640288,-7.694097,-5.396686,6.112162,9.274095,-7.523703,-3.258676,-3.577092,-1.479113,-0.786807,-3.240161,7.486566,-9.140651,8.328708,6.619641,5.178436,-8.601596,-2.310541,3.302742,2.032599,3.883821,-6.207282,1.947304,6.958954,1.844323,7.786578,-8.372179,9.044051,2.597415,9.022371,-0.064603,-1.426732,-6.448975,-8.054981,-0.309636,-7.429447,9.839736,-5.047249,9.781689,5.879410,6.914518,2.808238,8.595783,4.891427,0.891976,-4.951175,7.861153,-9.860069,4.166577,2.066536,3.331150,2.699555,-8.100509,1.243219,4.498972,-8.224804,-4.157655,-8.087648,-7.856110,-9.691916,-7.968512,-9.636277,2.612873,6.086664,2.537186,6.219200,0.994175,8.142765,-0.210607,8.313224,1.062090,-7.718898,8.310635,-6.339414,-7.589102,-4.340610,0.889643,-5.785885,3.027781,1.289830,-6.270318,3.576748,0.852080,-5.614795,-3.468392,-6.480090,4.577737,9.187703,3.617062,7.181042,-7.683205,7.710172,-3.769726,7.983721,4.779566,-8.080938,3.727058,5.592340,-3.534841,-3.969057,-6.678099,3.362777,7.006699,-3.949236,-1.459806,7.485521,6.479259,-6.890573,-0.199450,-5.221744,-1.285597,-5.504522,-2.828350,-9.297431,9.736818,7.785861,8.861445,6.566562,5.615830,-9.618590,0.894036,8.260770,-9.547401,-2.632481,3.971956,-1.861001,3.452341,2.123473,7.151223,6.847294,-1.912085,-5.709732,3.523581,-8.828897,7.544917,-9.660090,-3.672212,-4.744194,1.494380,-6.670449,4.666781,-8.846445,5.012799,-2.336971,2.236279,2.152002,8.419866,-8.099858,7.617764,8.501187,7.993575,-6.027102,9.686999,-8.149458,1.645863,1.392613,8.498119,-4.483326,6.577012,4.277023,-4.452015,-3.063891,-8.906125,-2.452909,-8.856591,1.364666,0.212510,0.539395,-4.190556,8.040802,-3.802307,-9.894825,-2.437813,-2.025358,4.344562,-5.604164,-2.344205,9.414667,1.392485,2.725631,-9.890780,2.080172,-0.807409,-2.692230,-8.771115,-2.871168,8.007708,5.186654,7.597022,1.987593,4.858745,-8.944297,0.085088,2.773849,5.225596,-2.494916,5.705426,3.545910,-2.825464,-8.462034,8.121551,-0.201353,5.651421,-0.707194,5.610119,8.617130,-2.890699,4.258707,-2.361353,-0.517900,4.594795,8.581739,5.792091,-3.546259,-4.885490,-0.500987,3.143548,-5.747334,-0.197516,-2.485973,4.104060,6.093229,2.858732,5.937154,9.895014,-5.725478,-6.105146,1.568956,-5.615802,0.111566,-1.883057,7.129869,-1.418983,-6.629188,-8.370986,2.376368,-8.083262,9.015138,1.670147,8.297867,6.197208,9.617911,9.137842,0.923909,-6.198984,8.354415,-1.719715,-1.398526,-7.080841,-6.968855,4.469538,-8.903579,-5.168351,-8.169130,-5.890621,-1.836313,9.581826,9.072064,-6.174108,-8.714635,-9.192408,6.797025,-0.877588,1.123833,-0.870587,-9.881504,7.130068,1.186234,-2.965041,7.620839,-8.110512,-0.843991,6.721965,-1.180529,-4.842876,-6.457762,-5.280126,-2.105706,-7.478703,-3.851688,9.568933,-4.970765,1.354759,-2.543804,3.220340,9.400429,8.443273,1.045546,6.904656,-3.953918,4.359012,-3.288012,-0.165768,-6.915676,7.471657,7.552685,3.980242,0.423327,4.194966,2.758767,-2.568886,-1.085465,-9.902452,-9.787540,-7.865564,-2.366285,-1.779000,1.882762,3.523517,4.322057,-7.454138,0.269876,-3.665476,2.832248,-8.477456,9.612970,5.367841,-5.169869,4.840083,9.197660,8.478110,4.247844,1.501230,-5.740249,3.200912,3.828619,-4.210973,1.147911,0.581575,-0.999430,1.143844,-9.661532,-6.761878,8.029373,-8.906536,6.667841,-5.128521,5.260591,1.331071,-6.652524,0.251405,8.220325,-7.814443,-8.808859,8.581971,4.726007,-2.709833,4.889317,-9.050991,1.087829,5.186747,-0.612762,1.024723,8.380902,7.710138,4.916274,0.338393,-1.625750,-7.581560,-8.651642,5.886866,-6.934571,2.908051,-8.442894,-3.832931,-4.967548,-8.002194,4.102368,-7.129006,2.478807,-3.766566,-4.305649,8.393479,4.919136,-7.179719,3.465715,4.293759,3.221166,7.593133,-5.836703,5.386937,9.670502,3.869340,-1.647127,-8.432920,2.456073,-5.448689,-8.201060,-4.350077,8.923555,1.528746,7.173375,6.128035,-9.189309,-9.843464,-5.115720,2.294985,-3.725981,3.433939,9.287373,-5.974168,-4.073073,-0.866671,-0.690162,4.880017,3.876318,-7.690574,8.058761,-7.146884,-2.234721,8.841937,-2.223406,-9.893848,7.745782,6.732367,1.250773,-5.891160,1.757396,4.587604,2.612024,4.759836,6.135251,1.110076,2.078545,-4.800310,7.172170,0.736230,2.740522,-1.570706,8.666036,1.316060,9.509360,-0.469639,-9.150061,-6.577001,-8.537561,9.256458,8.006826,9.783602,-0.359004,-9.702501,4.154063,9.108850,3.967184,1.659051,-5.364882,-7.261410,-8.206007,-6.800543,-5.076493,3.697718,-0.202615,-2.478854,5.685120,0.446273,-6.401503,6.413953,3.099279,-7.296588,-9.547493,2.343752,-4.845025,-2.765736,-1.249757,3.170664,1.391850,-2.628881,5.504221,1.176236,-7.230482,-6.257363,-0.410966,-8.536994,2.270844,6.970933,-7.265335,-3.073824,-5.650290,-1.485276,1.828673,4.374345,-4.823896,-2.748392,-9.310904,-1.073942,-2.012590,1.001546,3.449004,-8.924261,-7.705674,-6.390575,-1.165663,5.005142,-6.059464,-3.024848,-5.862129,-4.706509,7.909210,-6.049777,0.855040,-2.892420,-6.812042,-1.822805,9.100810,-7.748915,-7.387603,-7.964976,3.893960,9.477213,0.756149,2.684225,0.153379,-0.134835,-2.521393,3.529916,-3.883531,-4.246142,9.375478,-4.658903,7.304716,2.346888,3.808289,3.694724,7.314281,-9.519281,-4.293567,-8.656241,-2.820336,-4.115093,-8.917493,-8.090064,4.234372,3.671043,7.774070,6.750964,-4.716119,2.571765,-2.619689,-3.312621,9.114608,1.703004,-0.293706,-7.807836,-1.974460,5.931774,-7.684401,3.187602,-4.618059,-0.468500,-9.811218,4.419120,-2.775440,0.123937,7.038599,3.360503,-1.349088,-9.602997,-1.145720,5.046805,7.166784,8.685987,-4.079012,8.051359,0.319276,1.144546,6.046392,-0.867916,8.003443,-0.225701,3.202170,3.902008,-5.695772,-4.223628,-5.424460,-7.256517,0.275302,9.377597,-9.427758,-7.397822,7.294082,-3.941497,-6.865296,-9.842647,-2.997796,-2.922101,-2.376701,9.116151,9.574706,-8.762584,-2.306123,7.063113,-9.490533,1.428565,2.017995,5.185666,1.090900,9.008304,-1.601252,5.850435,2.758137,1.743479,-6.891829,-4.055046,-5.814748,6.605567,1.065508,-7.993341,-2.488841,8.903712,-4.090178,-5.904852,-1.464671,8.931252,8.994325,0.799635,7.335166,6.483981,0.237587,8.359013,-6.747855,-6.449074,-7.963753,9.896850,5.912464,-0.278278,9.628498,0.627890,1.516419,3.014801,-6.222293,6.460358,2.066430,9.696595,-4.393781,-8.456881,6.072985,3.030050,-6.777489,-3.334766,5.539826,5.324188,4.202672,-3.579960,6.418899,-2.286455,-0.162362,3.309429,-1.533021,-7.983565,-7.892661,1.033398,-2.769839,3.919990,0.684795,-8.789332,-3.669055,-1.648016,-7.231730,-9.907498,-0.132922,1.835335,-1.561419,-7.536497,5.216869,-7.283638,7.227471,-0.196102,-6.247555,-5.021219,4.177540,-5.320907,-8.897904,-5.761623,6.942966,9.435227,0.506593,-1.424101,8.886519,-8.858373,3.870607,-8.242046,-2.258306,-4.610302,-2.218104,-0.441118,0.931427,-4.544118,7.241908,8.362209,2.076474,-7.557675,1.335286,1.103242,8.370040,-6.000589,-0.876029,-7.105456,3.903368,9.709739,0.478887,8.789778,-2.474012,4.169347,-0.180536,-5.515068,6.836474,-5.415888,5.616213,1.884241,5.267079,5.194600,2.347928,-3.017900,4.909402,-8.947566,-9.104881,3.414653,1.778626,-5.870588,9.934390,-9.260780,-6.782572,-8.798128,-3.498996,-6.490837,4.548527,3.758337,0.087512,7.682719,0.258004,-3.444813,8.571293,-6.610840,-0.851707,3.719103,6.353437,-4.699888,-6.391606,9.109703,-5.948428,2.591345,1.573910,-4.216632,-2.345107,4.860297,-1.013025,9.007559,-4.383068,-8.938263,2.729105,-4.907805,9.444247,-3.241103,1.898772,-4.569349,4.799758,7.452700,-4.902694,-4.898080,5.452861,-8.796552,4.405987,-3.637956,6.384397,-3.159903,-3.110796,4.701209,7.651406,3.606794,5.161379,-7.986050,4.743114,-1.549280,-8.947537,5.652537,-5.950786,5.035418,7.030806,3.492217,-1.773441,2.117590,5.327855,7.271728,-4.928745,3.454976,-2.821751,7.520358,-8.051633,-0.350597,-7.282772,-2.830524,3.709947,-3.993856,7.189914,-0.989802,1.459417,-4.664271,-6.640169,6.747381,4.284291,0.310934,-2.893796,5.454126,-1.629983,8.320489,9.897315,8.347141,9.473662,-5.996134,-9.883630,4.109434,-9.541361,-3.010079,7.900420,-2.015305,-3.474853,-0.326919,-7.215181,4.355334,9.335271,6.818344,3.028129,-4.833291,-8.271894,8.069702,4.379695,-4.407535,2.646753,-7.783129,-5.650079,3.012218,-5.688333,6.916114,5.208630,4.101058,-9.655570,-7.410789,-5.753001,-6.522842,6.015147,5.333816,-3.441679,-0.484520,-0.591066,-6.242830,7.856491,0.880634,-8.832668,-8.780039,-9.357458,-1.541476,-5.339587,-6.122483,7.326430,8.974759,-9.255222,4.727757,-0.971998,-7.072204,9.979157,8.141625,-2.857100,-4.784083,-4.465894,5.112820,3.610063,1.808879,-4.501756,-0.144011,-3.609850,-9.008440,-6.550918,-3.142796,5.059323,1.155563,8.850307,-1.053612,8.131109,-9.334204,1.435504,-5.362974,-2.707143,1.002372,2.571761,-1.200303,8.490654,5.430201,0.931847,1.112119,-0.785067,9.163492,5.628519,-9.416461,-3.805646,-5.980920,-5.042909,-1.008746,-5.850702,8.170278,4.782876,-7.672267,-1.534716,-8.541074,6.214316,-3.231823,-0.062850,5.668968,2.300642,1.854407,3.289402,-9.645362,-6.031204,-0.958178,-9.492918,7.132824,4.127630,-0.402452,5.749304,1.802580,-1.508158,-2.504572,6.930817,8.675230,6.993895,6.699800,-8.545074,-1.658058,-2.965631,-5.865350,-3.756813,8.018045,7.803631,7.309247,-2.275336,4.223670,2.807548,-4.993602,7.973390,3.226190,-6.745172,1.147254,-4.677701,6.974355,-8.509277,4.182861,9.799754,0.604624,1.610550,2.869277,7.038641,-6.378396,6.902405,-1.186128,-1.844002,7.017441,-2.257442,-1.904833,0.826861,8.239859,4.106597,-8.793514,3.002424,1.836583,6.210130,1.368961,0.479412,8.715924,-0.871268,6.415295,6.126491,2.799801,-2.314330,8.444967,8.815160,9.447386,7.906272,-0.832605,3.048075,0.427839,-5.872546,-1.382902,7.527540,-5.326372,9.234915,-4.971189,2.798102,-2.747204,2.077831,4.159789,-9.118469,7.603709,-4.589546,8.502764,8.682717,-2.892444,2.513790,1.049779,-5.475323,-2.286621,-2.005149,1.721334,-7.014334,1.362870,9.908905,-7.948812,2.117632,9.086082,1.505758,-5.980318,-7.944924,7.193775,3.655795,-6.146714,-0.574791,7.903654,1.177173,-8.664116,-4.364363,-4.360139,-9.806872,3.409122,-4.801295,-4.250500,9.667470,7.858847,8.512354,5.128572,4.036620,7.891084,-8.345412,-0.923364,8.933480,8.303559,-0.346724,9.596571,6.013767,9.181822,3.366623,9.940997,-4.354661,-8.794893,9.172762,-6.887365,7.582036,6.086744,-0.160778,-1.316519,-6.810448,1.326629,8.438388,-6.328487,2.106010,-3.678600,4.566428,-6.743952,-9.915856,2.670043,-7.912221,1.487821,3.539588,-4.924102,-0.222540,4.862945,-2.932223,-8.008533,3.472795,-3.917529,-3.135615,-0.144306,6.379779,9.196180,0.050282,3.205090,-4.004183,-9.620931,7.041796,9.196094,2.259798,0.989652,1.886796,4.353582,-9.465110,3.669290,-4.256500,-5.491575,-7.379619,-6.602697,-9.254339,-2.895432,-7.633893,8.645282,0.766082,7.487762,1.046685,-4.336753,-4.256944,-7.100216,-2.821518,5.981322,2.982537,-2.445230,2.725921,6.724366,-3.360122,-4.632677,-0.527112,5.545236,-5.325289,-6.508018,6.635987,-3.039024,-9.444320,-3.719654,8.688774,-0.609513,1.999000,-3.502627,6.918752,-7.547456,0.371927,-1.299116,-4.622593,6.005704,-6.288613,5.859061,6.119498,-5.273356,-2.127686,-8.240154,-4.733607,-8.793681,9.211469,6.067966,-7.447495,-8.148140,-4.065044,-5.445539,-9.173888,-8.843404,2.879290,-5.034042,2.986538,3.888899,4.497946,8.459295,-6.502254,9.268857,7.239806,-1.203480,5.490720,9.203169,4.836541,-8.593728,-9.904166,-2.212807,-1.103812,-2.457458,2.423645,8.718013,7.053170,4.724788,-4.971633,0.345575,3.598969,-0.608150,-2.906658,-6.196239,8.364031,-1.501861,3.476236,3.161995,5.408470,-8.226603,1.548173,-7.857929,-2.328482,-1.336972,-9.111927,-2.883251,6.115494,-1.068083,7.658471,0.370382,-9.816197,-4.623652,6.526276,0.683048,8.608890,4.604630,-8.036310,8.830831,8.797197,0.439775,2.798804,8.581672,-1.426448,-9.216117,4.662800,-6.310329,4.831644,6.411802,9.390126,-9.217296,-7.137694,9.150306,8.854981,-9.370446,0.480411,-3.494645,1.610162,1.224095,-4.433883,9.972097,-6.486673,3.765245,-8.005793,-7.511201,6.117470,-9.252294,-6.547305,-2.586298,-2.229156,7.239861,3.284141,-6.219585,6.235023,-2.411838,-1.620132,9.156069,-9.142394,-8.396187,-2.250549,-5.323004,0.350375,5.099654,-9.128181,8.060031,-7.716116,-1.359269,4.076869,2.806633,5.116961,-3.443569,6.538695,-8.050349,-6.610147,0.234681,9.667921,-6.135112,-3.476209,-6.414701,-6.977591,-4.124485,-6.287816,-9.506456,5.422856,1.195138,5.327226,-7.983618,4.930436,-6.850795,-7.241011,-3.408044,2.475150,-5.501883,9.628172,3.418516,6.382976,-5.450121,-0.102277,9.588466,-9.068285,-5.447882,-5.158273,3.073018,1.309952,1.589786,9.106467,3.931715,-8.031235,-6.269494,2.925647,7.754949,5.593844,-9.000063,-4.250483,-3.116182,-7.942007,5.139327,7.141703,2.427852,-8.394443,-4.073528,-2.408186,9.905985,-8.927222,-7.650374,0.009918,-7.216259,-6.337194,-2.422692,-4.429952,9.131616,-1.829659,8.242367,0.696745,-1.803425,7.308551,9.602786,4.338845,-1.939389,9.191512,0.195544,3.799508,9.030553,-9.123268,-6.651852,-8.183749,-5.138590,-9.123133,8.136662,-9.070827,-1.182996,-4.767761,5.591249,-0.110574,6.204707,9.950135,-1.178307,-4.066925,-7.881234,1.785394,2.963968,-7.289393,-4.361728,7.143421,1.224300,-8.364497,6.242959,1.599587,-9.363260,0.246324,6.580693,-2.144007,2.445536,-0.196913,3.054351,-6.804166,5.428701,-6.537645,-7.115576,1.996194,3.673783,4.525709,3.920936,-2.581434,-5.242828,6.647675,-8.881523,2.866425,8.699596,6.596202,7.223287,1.711207,-8.678284,9.287083,-5.042354,-9.925723,-9.432417,-5.344146,8.737397,8.063967,-9.817912,3.240140,-8.992447,-4.989511,-3.056512,-5.268803,-7.601759,3.800184,-1.247378,5.313468,6.396655,-3.515297,5.573799,6.760079,3.180908,-9.923794,-6.722845,-9.777991,-7.777223,-2.002894,-2.434412,-0.003487,-9.328244,-0.948453,-3.601196,5.517280,1.259464,1.836796,0.726438,4.852019,6.493054,-7.497468,-7.072181,-5.218322,-7.580165,5.031586,-6.810080,5.658690,4.115772,0.517927,9.231935,-7.079711,-7.232047,7.831552,-6.144932,0.616301,-2.112622,8.381399,-8.511838,5.423987,-5.508131,-6.088544,-1.787441,-8.992726,3.683793,-5.095667,-2.888127,1.600187,-9.053987,-4.829261,-7.553653,2.672005,-8.368435,6.136985,-0.175416,1.760935,7.598043,6.086582,6.535428,-5.925153,2.928670,0.399227,5.024684,8.190943,4.214317,-5.315398,2.060031,-1.969194,3.107254,-6.665551,-6.351608,-8.085884,6.911686,4.462793,9.745693,9.770830,-1.157994,6.488780,-9.074433,-7.610406,-9.732589,5.826936,-0.083895,5.377261,0.558177,7.623950,9.313730,3.874732,-3.020378,3.822695,-1.305285,-2.984528,6.145876,-3.741655,-2.342373,4.186795,-7.836373,-3.383376,-7.115084,-4.020126,-2.754479,7.457402,5.097184,-9.963744,-0.593317,-1.194673,1.543273,2.564649,-2.137545,-7.291369,-2.466880,9.117249,-9.718851,7.774768,-9.386788,-5.350233,-6.613069,-7.528818,-4.208170,7.853254,2.449517,-2.299737,-5.965342,6.066719,3.149315,-3.328290,-1.214235,-4.440429,5.084248,1.568548,4.881332,-3.029365,-6.586995,-9.907340,-5.807990,1.373060,0.963061,-1.569312,7.054709,-5.549711,7.487795,9.853855,-3.783285,-1.522968,2.396112,9.786584,6.786491,-6.744759,9.598477,-2.713789,-7.337828,2.484546,1.846317,-5.708997,3.867346,-8.996996,5.697940,-2.051768,6.778510,4.420645,3.548865,-4.914001,4.909004,-5.385475,9.657527,-5.627915,-1.845238,2.455459,7.415432,-7.161144,-5.678791,2.126904,-9.271327,5.117135,-7.559292,3.881582,-5.051748,-9.904438,-6.475343,-8.977671,6.944881,-6.962464,-3.321135,-2.707373,5.686147,-0.284304,6.562304,5.870175,-2.282338,6.375028,9.583218,-3.464174,-4.317646,9.430279,6.096346,-8.546283,-8.951510,-7.976901,-9.473642,-2.682043,2.074156,8.583324,-3.136010,4.888176,-2.767134,9.826750,0.498635,7.171885,-2.728238,-4.898787,-7.483576,3.665139,5.056036,2.422497,-6.178465,2.691038,-2.080734,-4.709223,1.067822,3.336672,-3.275933,-9.687977,-6.405204,-7.507238,-1.317862,-3.737114,6.411368,-0.615559,9.478159,6.813770,2.836540,-3.503661,3.652000,9.492104,-9.958874,-1.875530,2.172590,-5.068454,-1.195149,9.119239,8.957248,6.884041,5.913158,-9.102129,0.980878,-5.936312,-9.420591,5.031799,8.920353,8.212827,0.195167,-7.421571,-6.868390,3.090903,5.456109,7.396579,-3.402405,-1.029514,-4.115605,8.621491,-4.061649,2.532984,-8.703608,-1.674891,0.125316,7.167452,-3.144240,2.009543,-5.936811,7.086671,6.883646,-7.659896,-2.810593,4.296977,2.660834,-3.836822,-6.615136,7.374913,-2.604357,-5.256277,2.975993,0.013275,-9.428627,-3.908170,9.582896,-4.836891,-5.404991,-3.441363,4.175947,-0.202113,-4.863288,-9.341131,-4.363130,0.979452,-2.026556,-2.945310,2.526913,2.956122,-7.615222,-8.658325,6.124889,1.705341,-0.542897,-7.573772,8.713950,-6.938279,-7.304172,6.164727,-7.423663,9.968565,-7.408334,-5.752689,1.016889,4.266564,9.371712,5.797291,1.997007,5.756890,2.590761,3.662669,-8.814313,-8.484744,4.851766,5.882749,4.091175,-1.456236,-3.859324,6.015987,-9.061709,1.047354,4.726007,-1.349249,6.275511,-4.177597,-2.268740,-3.852603,1.199571,9.635063,-6.618452,5.909815,2.755346,2.363803,-7.341158,-3.015524,-2.809188,0.188743,-9.125578,-3.147686,9.441785,-7.692639,-4.041878,-8.187189,-7.488579,-8.385461,-3.755548,-2.089976,0.206021,3.950635,-0.493104,-1.771676,7.863866,-2.657110,-7.256543,-7.608273,0.738312,4.074293,2.412020,-9.700667,3.625135,-8.287612,-7.552396,8.532888,-2.811821,5.430311,-6.177833,8.308204,6.935820,-6.197983,-6.482691,4.433100,1.857279,-9.131489,-2.864417,-6.477156,8.446515,2.845589,3.388592,-1.112897,0.082133,3.760567,6.317952,-5.800847,-1.603501,-3.354213,1.292084,9.963694,-9.495088,5.856435,-0.893584,-2.779779,-1.042988,6.688574,4.080576,0.157189,3.863762,-4.176766,-6.793069,-1.607779,0.433975,8.836468,-7.865469,-4.402773,-3.953026,-3.388240,1.682230,5.018005,-4.362172,-6.714177,-8.903615,9.186880,-5.210911,-9.692788,-7.697813,8.061884,-2.188620,-5.949915,0.727760,3.579179,-2.100765,-5.955641,8.485102,7.226468,-7.721788,0.707449,6.024885,1.753689,-7.948662,-3.295649,-4.376048,7.831018,1.995461,4.931480,-7.854899,-6.961082,-4.339966,-5.725581,-5.838962,-5.928188,7.823840,0.242441,-9.083951,-4.347598,1.506975,9.926895,4.671141,-8.729727,-3.873459,7.118752,-7.215302,8.063676,5.469340,-8.318084,8.771075,-9.127505,-0.489463,5.070664,-6.182157,-2.038268,3.327827,8.524671,-7.234669,2.635314,-3.835456,3.214016,-3.066025,5.510473,-8.706802,-7.688871,-3.227515,9.069393,-7.312536,0.599042,-1.911840,-6.820611,1.420207,-1.382352,7.303197,-7.875653,8.564700,3.101256,-7.742273,5.632494,-4.212337,-9.247356,-6.844947,-9.718460,3.741722,-8.021777,0.322454,3.924107,-4.204932,-3.969662,3.221704,1.309316,-4.763780,-5.805825,-2.365665,9.088599,6.391401,9.024334,3.343621,7.457870,-2.563355,7.454413,-9.214730,-7.634811,-0.124142,3.431041,-5.373782,-8.036263,1.068563,5.399877,-4.235476,-6.694274,5.572856,-2.610579,4.267269,9.070932,9.353570,3.281372,3.899131,-4.355645,-4.434708,1.080408,9.175006,5.922689,-2.405374,-1.876760,-6.439215,0.194050,-7.060879,-7.299981,5.443412,0.342034,-3.053736,-4.294833,8.354653,-4.484841,-3.604560,-5.622012,7.550003,-6.525964,-6.847496,7.844713,-7.040385,-5.755319,-5.509460,-7.568302,-7.469515,-5.739641,5.805607,-2.796858,8.122068,-8.313268,-5.167523,0.477208,4.575345,-1.171316,-6.400721,-5.561587,-0.096717,-3.529049,2.727652,-4.892362,-9.564684,3.587962,7.730391,-1.876816,-2.434434,7.161853,0.246879,-1.791926,-7.675671,6.099892,-6.236077,5.080117,-1.650834,0.522541,7.116585,-8.843526,-1.193086,2.121895,9.271912,0.484906,-7.137120,5.185141,4.734575,-0.150430,-0.209734,0.929800,3.959098,8.209299,-7.949898,-1.072480,-8.242040,3.431214,-4.191375,-2.506429,1.043676,2.367900,-0.649913,8.530613,-4.272441,-3.085836,6.015416,-4.514018,-5.065072,1.756675,-0.103338,-0.295590,-6.743585,-3.938218,-6.230801,-8.101660,-4.771881,-7.494424,-2.392009,-6.531350,6.535639,9.485087,-2.971165,-3.889988,6.699037,9.399232,9.482996,-5.019059,-5.929375,-1.840773,-7.727249,-0.544130,-3.857505,3.610110,-5.341838,8.152458,-0.211478,4.618194,-2.547659,-8.302249,0.878228,-0.378657,1.441284,-0.774965,3.973023,4.735808,5.606095,-5.267912,-4.429581,4.584155,9.559482,-3.977790,4.026766,8.612391,4.111390,-9.520779,9.517508,6.675862,9.243187,-9.828837,-7.116996,-6.426834,0.883633,0.462747,0.758967,1.164436,-9.833904,-1.299055,1.098979,3.587813,4.239283,3.243141,-8.981617,-7.397666,-2.178825,-4.153276,-6.473649,-6.092295,7.495174,7.983460,-2.569097,-8.640440,-8.531289,1.089546,-4.203544,8.184812,-5.886078,-2.629227,0.341152,-3.597800,-2.368844,1.242412,-0.508711,-2.711921,7.857915,-9.927763,-4.415541,-9.939304,0.089326,-0.566359,5.082198,-5.558549,-9.541085,-9.888348,2.075032,4.484617,-3.334229,-5.443251,6.971497,-6.478091,-6.749283,-0.183967,8.490634,7.042999,-2.744842,-8.468587,1.544073,5.154351,-6.816089,-6.011485,8.771369,6.035833,-2.076465,-0.199297,-8.268169,-9.798122,2.387153,-1.444270,-1.467164,1.891338,7.599283,-6.275523,-3.942481,5.214530,4.987662,-1.444543,0.188637,-6.587396,7.225523,0.870417,-1.753904,-9.800918,1.780084,-7.037209,7.824731,-8.985704,-5.065730,5.701857,4.005431,0.323064,-7.067174,7.793704,2.771605,2.636423,-3.812844,-9.370006,5.521383,-2.466709,2.095976,-4.476738,-9.696166,-9.542501,2.754310,-6.455864,-7.469060,1.204273,0.245276,-6.219338,5.760790,-7.380010,9.039206,-1.107732,0.639535,6.731598,2.142295,9.495686,-3.268964,-8.645427,-7.871341,-2.995395,-3.955829,8.794349,-2.473024,-8.793570,-7.472398,0.575344,-2.995734,-1.491963,-3.284939,-8.534188,8.737130,-0.882078,8.177421,2.201512,6.677776,-8.084588,6.997635,5.937878,-6.261071,2.038266,-2.179287,-9.820467,-0.293771,5.123098,-7.587725,3.987266,6.181063,3.850196,-8.225229,-3.299859,4.893763,-0.124080,6.442606,-1.652236,1.574393,-5.763001,8.934347,-4.911923,8.632435,-0.277622,-4.510548,6.087279,8.458953,-0.552505,7.706677,7.606223,-8.170656,0.211141,-4.536724,5.884902,-2.214234,7.194263,-2.242174,6.331513,3.432665,0.084094,1.601630,-3.828117,0.582289,1.130136,3.324656,1.548339,-7.567019,8.279163,2.361587,-1.443273,-3.330251,0.820836,-2.788530,-5.338542,-4.186196,6.589313,-4.024409,9.506105,-1.734126,-7.542925,3.540541,1.394603,6.929874,-2.235309,3.176368,-8.132415,3.881177,-5.547832,-6.919864,1.179712,-4.073293,1.190079,-1.037891,9.724758,8.435801,5.045694,8.275783,-6.540716,0.005489,3.681194,2.270143,7.888284,5.573530,-6.816266,-8.242078,0.834415,-5.665060,-9.952046,9.591982,-9.125225,7.703510,2.602379,-9.242542,4.328264,1.089286,3.880138,-9.905015,4.264807,-9.375381,-5.058314,2.947669,-7.410191,-1.277093,5.629464,-9.276397,-5.057984,4.730729,-0.680545,1.696591,9.675326,9.695092,2.978676,4.323781,9.418036,8.881632,3.994918,7.942565,-3.826191,-7.350842,4.504556,0.527059,-2.118968,-7.316905,0.088701,0.372233,-4.131777,1.068267,-9.217774,-6.450348,-5.336766,5.477629,-0.840640,5.103440,-7.684510,-7.162988,-8.596987,7.855963,-6.146261,-7.111314,8.899145,3.238049,-3.329520,-3.917059,9.807698,-5.328582,-0.282168,0.914700,6.747265,7.254522,-5.700716,6.992628,-2.395996,-1.969463,-6.523419,-7.802886,-2.318057,3.455444,-1.543518,5.249206,-7.597532,6.028440,-4.017376,-9.765042,-0.736956,6.184968,4.095459,7.756110,-9.192114,2.321268,-9.777238,-2.428894,6.655948,3.657049,9.292103,1.392640,5.138165,-3.172768,-1.429715,2.388390,9.033525,5.321435,2.001860,-0.472772,-7.729944,7.857067,7.940016,0.263468,0.534834,-4.292898,-4.295493,0.669633,-2.083616,4.412024,-7.005061,6.745390,1.578035,-5.980986,-7.985052,-6.764366,-1.944000,1.039513,-2.515839,-9.625623,-0.497502,-8.635889,0.512222,-0.057685,-5.412735,-3.891057,-0.997115,-1.903709,-3.215518,-7.140737,6.883997,-6.135727,-5.869894,0.223901,-7.393975,3.937723,-6.440468,0.367887,3.465760,2.514568,9.579099,-3.145870,-2.563029,-4.223714,2.739967,7.226792,0.029121,1.258400,2.333619,-7.857603,-3.051986,-1.036695,-1.989681,-5.659235,4.648292,7.837002,9.577847,-4.288681,-7.906078,0.075273,-9.090402,-4.100349,-0.894622,5.445311,-1.137308,6.603488,5.436287,1.888690,-1.549366,1.606616,8.220151,-6.670885,-8.257297,-8.508598,1.406201,7.810149,-7.113643,-2.327733,6.049675,4.976991,4.740699,-5.873147,-5.740724,-3.155265,-5.402773,8.882453,-6.182825,-9.757957,-4.009609,5.329135,-5.405591,6.211676,-6.418979,4.743777,-5.944622,1.225346,-8.934010,-8.047982,5.080459,3.454843,9.224381,-6.843128,-3.408599,-8.958900,5.534074,1.453218,-7.795860,1.854154,-9.107515,-5.558668,8.478012,-3.480376,-3.643471,-1.930351,-3.409471,6.125931,-0.607085,3.479786,-4.831542,-3.691577,-7.235158,-2.758920,-3.932537,8.131118,-3.711838,2.790083,-1.774190,5.439636,1.628205,-4.667255,7.201376,0.711903,3.826971,6.731982,-2.529855,-7.631057,8.049292,-2.370961,-9.996397,-9.271906,8.512359,-9.730700,9.086723,-0.900260,6.647916,-2.622437,-4.674084,9.877855,9.452848,-0.268172,-7.191673,-6.916171,1.839783,1.058248,-4.367509,-9.309593,-9.908262,4.950509,5.662514,-9.702906,4.424223,3.134574,-4.596456,7.447004,5.192909,8.132454,-9.933712,1.896833,-9.894204,1.715863,-4.894728,6.999005,-4.204012,1.088441,-7.819483,9.058080,-7.546223,-3.693141,0.496936,-5.339658,0.386073,-9.307505,9.685697,8.456830,-8.624971], dtype = "float32")#candidate|1273|(2880,)|const|float32
const_1274 = relay.const([7.151516,3.284930,-0.852522,-4.772366,6.829254,9.551724,8.518825,-0.805170,2.838574,-8.778157,9.051526,-3.701513,2.946505,-8.027681,6.918320,8.863047,6.577665,7.152873,0.331594,9.357197,5.329827,-6.203292,6.910605,-6.484664,-0.366983,-6.841878,5.727504,-9.886063,-5.532649,7.829532,5.410142,-6.296549,3.563957,9.940285,-6.420102,-7.873719,9.936267,-4.902772,7.130138,3.612913,6.195178,4.970096,-1.344156,-2.894156,-6.120721,6.196130,-2.280245,0.120050,2.076680,-0.396225,6.483450,8.169970,4.167519,-8.374666,5.183377,-9.237153,5.280285,8.835547,8.411480,-8.386298,2.048718,-2.323951,-4.946073,5.080220,-7.067110,4.429326,-3.136650,-7.305295,-9.486844,-1.352005,-3.245367,0.721302,2.068806,-5.717753,-7.148022,-5.066983,-8.365644,3.059314,-0.068916,-2.748184,9.113737,5.388403,5.583467,1.995463,-5.223004,3.439514,2.352499,-9.814784,1.514385,9.691008,-6.308805,6.566158,-6.537757,2.031109,7.894321,2.973128,8.758577,1.445980,-5.239419,-8.338650,-2.177213,-2.752037,-7.232150,-6.426512,1.587281,3.753521,-1.148369,-1.905151,-2.758138,3.774996,1.186912,-0.229061,3.213155,0.857019,-4.107623,-9.060424,0.363668,-5.714593,-2.285946,5.433882,5.783099,9.963341,3.770712,-1.736059,0.338458,-9.895205,4.938521,3.274915,-7.258553,-0.571883,-2.579723,3.407562,8.731581,-0.695807,2.686155,1.508934,-3.610746,-7.403731,-7.452219,9.978550,-9.509482,4.211011,-0.937877,8.358182,5.583913,-8.208858,-6.592800,-4.070899,1.981039,7.623236,-4.278826,1.810245,2.010024,3.130105,7.650583,3.853283,-1.658564,7.045637,9.670699,8.573590,-5.652680,6.889544,6.423927,1.077042,-7.417223,3.611880,9.903605,2.457058,-5.412154,2.526592,-9.583893,-7.508027,5.360778,9.544394,-1.312857,2.966881,-6.566857,1.009101,-3.398234,5.415370,-5.009347,-2.845789,7.070468,-7.248382,-2.379474,9.164616,1.145543,4.181798,0.883606,0.375384,6.508650,0.361736,6.294998,2.671432,9.260719,-1.026819,-7.755774,1.846832,0.962077,2.572729,0.076626,-8.521653,-0.671164,3.371760,-7.261724,5.508038,-6.475627,-8.834856,-8.464561,9.276401], dtype = "float64")#candidate|1274|(210,)|const|float64
var_1275 = relay.var("var_1275", dtype = "int32", shape = (156,))#candidate|1275|(156,)|var|int32
call_1270 = relay.TupleGetItem(func_1057_call(relay.reshape(var_1271.astype('bool'), [11, 12, 14]), relay.reshape(var_1271.astype('bool'), [11, 12, 14]), relay.reshape(const_1272.astype('float32'), []), relay.reshape(const_1273.astype('float32'), [1, 2880]), relay.reshape(const_1274.astype('float64'), [210,]), relay.reshape(var_1275.astype('int32'), [156,]), ), 4)
call_1276 = relay.TupleGetItem(func_1064_call(relay.reshape(var_1271.astype('bool'), [11, 12, 14]), relay.reshape(var_1271.astype('bool'), [11, 12, 14]), relay.reshape(const_1272.astype('float32'), []), relay.reshape(const_1273.astype('float32'), [1, 2880]), relay.reshape(const_1274.astype('float64'), [210,]), relay.reshape(var_1275.astype('int32'), [156,]), ), 4)
output = relay.Tuple([call_1268,call_1270,var_1271,const_1272,const_1273,const_1274,var_1275,])
output2 = relay.Tuple([call_1269,call_1276,var_1271,const_1272,const_1273,const_1274,var_1275,])
func_1281 = relay.Function([var_1271,var_1275,], output)
mod['func_1281'] = func_1281
mod = relay.transform.InferType()(mod)
var_1282 = relay.var("var_1282", dtype = "bool", shape = (6, 308))#candidate|1282|(6, 308)|var|bool
var_1283 = relay.var("var_1283", dtype = "int32", shape = (156,))#candidate|1283|(156,)|var|int32
output = func_1281(var_1282,var_1283,)
func_1284 = relay.Function([var_1282,var_1283,], output)
mutated_mod['func_1284'] = func_1284
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1294 = relay.var("var_1294", dtype = "float32", shape = (14, 8, 11))#candidate|1294|(14, 8, 11)|var|float32
uop_1295 = relay.asin(var_1294.astype('float32')) # shape=(14, 8, 11)
output = relay.Tuple([uop_1295,])
output2 = relay.Tuple([uop_1295,])
func_1309 = relay.Function([var_1294,], output)
mod['func_1309'] = func_1309
mod = relay.transform.InferType()(mod)
mutated_mod['func_1309'] = func_1309
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1310 = relay.var("var_1310", dtype = "float32", shape = (14, 8, 11))#candidate|1310|(14, 8, 11)|var|float32
func_1309_call = mutated_mod.get_global_var('func_1309')
call_1311 = func_1309_call(var_1310)
output = call_1311
func_1312 = relay.Function([var_1310], output)
mutated_mod['func_1312'] = func_1312
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1349 = func_1121_call()
call_1350 = func_1121_call()
output = relay.Tuple([call_1349,])
output2 = relay.Tuple([call_1350,])
func_1351 = relay.Function([], output)
mod['func_1351'] = func_1351
mod = relay.transform.InferType()(mod)
output = func_1351()
func_1352 = relay.Function([], output)
mutated_mod['func_1352'] = func_1352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1399 = func_1121_call()
call_1400 = func_1121_call()
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_1420 = relay.const([[2.531530,-5.163177,-6.209841,-3.087114,-0.163782,7.168254,-3.707291,-7.914599,-6.195858,-5.908722,-5.581815,3.164979,-8.467077,9.486907,-8.110425,6.424153,-1.885597,3.282978,-5.075057,5.293063,-6.536887,-9.953574,-6.318264,-3.667021,2.328322,3.314572,-4.496651,-0.468641,-6.464778,8.665710,-9.990556,-3.194555,-0.603891,6.794914,-5.055497,3.636300,-1.277334,6.038120,-1.113586,1.472445,9.873370,-3.137729,2.964232,-6.585712,-9.457588,-6.230506,-6.635963,7.962053,-6.152457,7.982812,-2.916398,9.643349,3.026790,1.194602,-4.355382,0.184874,0.728434,7.635302,-4.769599,-8.186005,1.151365,-9.217852,-4.480166,-5.720773,-6.497571,3.427766,7.682985,4.514097,8.372139,-0.915138,7.239471,4.378016,0.583336,5.028091,-3.155575,0.243573,-8.202709,-0.547114,9.106244,0.685825,-0.426808,-6.042332,6.786495,-0.072709,-4.667028,0.566741,-3.451182,0.443392,8.843921,-8.255352,-3.099607,-5.207710,9.645739,1.938863,8.105834,-5.261971,9.139982,1.209669,0.507329,-3.405141,3.167587,2.195413,-5.017313,4.863736,-4.858640,-3.066632,8.979748,1.985775,5.231826,-0.545534,-2.844173,-2.085330,1.802889,-6.816999,-7.431607,7.462378,-8.139608,5.910322,0.804034,4.715138,-5.483801,-1.939496,-2.184391,-9.559360,3.229140,-4.062558,-2.751370,2.040214,7.434925,-0.551683,-0.253013,8.521147,-1.353457,-1.362199,2.136852,8.834086,2.428932,-6.571383,-8.500552,5.630418,6.178246,1.595430,-4.165005,2.307123,-5.378717,8.511084,0.025282,-6.752799,-0.519277,2.990318,-1.690410,5.222910,9.132480,3.901557,0.581813,8.181532,-0.185513,-0.944092,5.546377,-6.328418,3.366353,7.097775,-2.940964,-7.810415,-1.689438,3.207673,0.045582,-9.118532,-2.857452,-6.089586,-5.144948,-6.802009,-3.288007,9.827563,-5.405919,4.457426,-3.318362,9.052965,-9.414655,8.869739,3.467894,3.064617,3.935802,2.601789,8.737064,5.934047,1.912742,1.994569,-0.721677,-0.042095,-4.952094,-1.988692,-4.886198,-5.578377,-4.252800,9.499819,-2.820423,-0.981295,-2.429635,7.548290,3.691008,9.756050,-7.679401,-9.134369,0.030872,3.150825,-6.518414,-5.494468,8.378945,-6.716275,-1.877302,-3.343343,-6.349060,9.383299,-2.564537,8.229611,6.088305,3.967618,9.314529,4.106202,-5.878429,-9.938299,-0.925899,0.337014,6.312102,1.368170,4.001993,-8.922445,-6.822296,-0.388902,-4.520350,-6.202049,-9.397211,6.814988,9.847425,-4.431684,-7.001570,6.798080,-7.368649,-3.678184,-2.631035,7.447982,1.082253,0.684049,5.716763,3.072628,8.176967,-1.491682,1.001745,2.715670,-5.331038,-4.757978,7.627019,7.401019,-1.507961,3.941806,-0.336959,-2.840913,6.899508,9.564647,0.786877,-7.372628,3.881816,-2.582266,0.406600,6.362576,7.153776,-4.536549,7.447408,-1.237637,8.003841,-3.791894,7.053522,-1.492167,0.686988,5.018260,-0.097663,4.776825,-6.063118,-3.257207,-2.322193,2.632213,1.822840,-8.653275,-4.542697,-0.687971,-3.823830,8.012000,3.759149,-8.607264,7.824513,7.444683,-4.281585,9.891227,-0.551434,-8.318783,-5.650128,-6.829272,7.668642,-8.720634,-1.090191,7.591313,-4.062764,-8.550173,-5.710502,-1.839096,-9.429058,7.105715,-9.364360,-4.555363,-4.735527,5.827133,-3.837804,-4.457936,-7.161362,5.462122,3.494627,-2.035364,3.065731,2.058527,4.326110,-6.486022,5.639880,-8.901662,-7.250439,-3.413831,5.696478,4.563278,-8.412595,6.717635,5.234234,3.854425,-0.689463,-6.437127,-4.906840,8.551102,3.780613,2.482592,-0.125955,-6.974481,-6.801285,0.025764,0.411987,-1.585551,8.037106,-9.380533,-5.401791,9.581688,6.127146,6.435373,-8.405182,-2.965476,-1.497438,-6.633650,3.622340,0.125184,-3.275295,-0.426369,-1.313704,9.367651,-2.853750,-2.360869,1.289554,6.482614,8.453759,-4.737806,-6.892005,8.726693,-6.571199,1.413179,-6.587792,-7.507276,7.686724,-6.659011,2.174162,1.823518,-2.330348,-3.160722,-4.805892,-0.230767,-6.890543,1.733433,8.254525,2.821157,-2.546767,-8.732336,-8.982666,4.559366,2.652301,1.276280,5.630547,-9.709429,-3.986330,6.621336,3.657338,-4.848036,-0.900144,-9.013592,-2.977492,-0.508636,-1.930180,7.037183,6.654838,-2.470390,1.789134,6.625263,7.404946,-8.269059,-2.651892,-9.440585,5.356594,-3.803971,-6.887943,-7.314144,-4.337144,3.077792,3.638656,1.210530,-2.526946,2.326335,6.477227,-6.492109,-0.710918,-0.134049,2.667037,-1.362734,7.618708,-2.960639,2.508460,-0.380232,9.180856,-3.759242,0.536510,1.051735,-0.397106,1.495223,5.287720,-0.483335,-9.981342,8.280704,6.214481,-1.275704,-2.962029,-5.709614,4.845460,8.169508,-9.839987,3.099118,-7.197607,0.089115,5.556359,-4.568941,2.713569,6.842834,-8.215740,9.557842,-6.227612,-8.466263,-5.979205,1.592076,-9.811279,1.529365,-5.130560,-1.438530,7.295416,2.119634,-6.238753,-0.472107,-8.218590,5.744233,-6.625229,-7.994481,-9.435456,8.381694,5.460507,4.265788,9.120084,6.877581,9.676671,-7.264375,8.804232,-3.912551,-5.210160,3.357646,-9.789918,9.574781,2.153807,0.636088,-2.065935,9.808290,6.898257,3.143246,0.291835,1.455272,-3.052482,0.521797,2.616045,7.484515,-5.426966,5.033050,6.993445,8.844123,-2.609313,6.758504,9.897485,9.890716,6.079501,-0.128122,1.011512,8.081244,4.699256,4.119139,-4.076098,-4.107007,-5.217429,7.806271,-1.481390,-5.684003,-2.151188,-7.004973,-3.557649,-1.759260,-7.811487,-5.041197,-1.773916,-1.177719,8.369878,8.681701,-0.969998,-5.959342,4.267663,7.001594,0.955544,-4.323429,3.043141,7.322803,-6.195912,6.849957,-2.204020,-8.187744,6.180092,9.883756,6.944452,2.243288,-2.106490,-5.117108,0.123939,-1.821934,7.401841,-8.687511,0.207008,3.951177,-5.626112,-2.284099,-4.517562,9.923892,1.155064,-1.540341,8.849445,2.529006,-9.529610,6.496839,6.584920,-4.920301,4.939600,7.449765,-9.602006,-6.894843,0.410793,-8.083340,-9.576731,4.733671,-3.142216,-8.991987,0.111787,4.958929,9.457466,-6.727817,-4.176222,2.244522,3.249291,-6.064488,3.709886,-7.230016,-6.568282,3.365825,7.802173,-6.303196,-9.234303,8.891391,-9.313516,6.445776,-6.714999,-0.696116,-6.060789,-1.872744,-0.229584,-5.412863,8.631657,-2.081722,3.708763,-3.069121,5.813436,-0.787285,5.354586,9.677204,-3.563428,4.252351,-2.407739,-7.235833,-6.461348,3.708140,3.635058,-8.277407,-9.604317,-4.083865,-0.462336,-9.012671,-9.393972,-5.819368,5.811904,2.143123,-0.586436,-3.522607,0.152383,-1.604616,7.751776,-2.513075,2.690060,5.054901,-4.550757,0.419470,2.956211,-3.439453,-9.496700,2.169619,-4.096763,5.037896,-5.041797,-1.167823,-4.288087,1.546822,-0.014937,5.304774,-4.849506,5.063025,-4.087189,-6.954062,0.283833,9.814437,8.278050,5.451590,-1.673437,-6.391740,-7.601878,-2.677128,1.853366,-6.333982,5.793264,5.011914,-1.092899,-9.747085,2.666783,-0.522717,2.776895,-3.401282,8.388174,1.781500,9.097607,-9.371632,-7.747397,-7.470677,-1.975530,4.913843,-6.936737,1.332811,9.098139,-8.160629,-1.662775,0.862389,-8.900956,-7.155563,7.502463,6.797950,-4.958916,-8.926004,-2.578036,-1.316135,7.647820,6.664023,6.859498,3.178786,-4.166779,8.456850,-8.080612,4.701539,4.591951,-9.269937,1.872332,5.533157,7.589039,-0.393628,-4.526548,-6.376344,-0.043106,-1.273539,8.113375,-2.081582,6.538208,-4.366928,1.722909,-9.896451,-1.938262,2.455315,5.868850,0.266107,2.877750,-6.508557,-6.454912,3.327595,-9.726272,-3.647471,8.018380,-2.464666,7.530321,1.656417,-4.054757,4.457714,-1.184358,-8.529742,0.823903,2.116839,6.769612,-7.758066,-6.844850,-7.559416,0.364210,-0.817260,1.462483,4.229514,-4.394718,9.928523,5.165641,1.112330,-7.408839,1.410816,9.938150,-7.665598,-6.222988,-0.492913,-6.037039,-7.468237,-8.356479,8.879572,1.752271,-4.016357,1.447240,-3.522038,-6.984369,-3.302909,9.079786,-5.735275,-8.741053,4.578925,1.836698,-9.503687,-5.001645,-1.504301,9.911548,-7.819971,-8.118274,-9.550230,2.206391,-6.891674,-0.495189,-8.601722,-1.774523,-9.519010,0.003630,-9.712815,-1.596407,-6.186101,7.238164,8.431694,-9.154541,1.849694,-9.006230,-7.027282,-3.464635,4.444636,-4.173918,-3.695338,-6.514269,5.994463,-5.603112,-4.900531,-6.534700,9.871526,6.370606,6.279178,-7.745325,4.344714,-4.937570,-7.557411,-7.703468,-4.748178,6.148513,-3.463776,3.137371,9.085686,9.432635,-4.646192,3.667419,3.746225,-2.511371,-0.201097,7.844765,7.556791,-6.484850,-4.239516,2.707941,2.374909,3.075439,-8.042154,8.449772,-1.633003,-2.176748,1.591666,-2.743242,-8.643575,4.411912,2.140355,-1.169761,-2.529208,5.038702,-2.841655,0.040932,6.522889,5.963787,-5.771432,-5.668882,4.132283,7.286648,-7.711359,5.707031,5.406529,1.239036,1.891713,0.308431,-9.150549,-4.743177,-1.692032,-7.705597,-3.462982,4.369909,6.548272,6.266382,-8.700961,7.789430,-4.313492,-1.724900,9.663912,-9.659000,2.757687,-3.928992,-2.233335,-4.263844,5.647027,0.465456,-8.785280,-9.107776,-3.641070,-1.582762,-9.211002,4.917355,-0.122266,-0.684739,4.782287,-9.703853,4.725534,4.597534,1.583131,-6.849611,-4.894562,-8.084774,-6.251343,-1.719014,-9.201464,-9.749113,-7.566203,9.859708,9.420806,-7.294505,3.226820,7.716421,-6.670207,-3.750929,2.210633,-8.360567,-4.440984,-0.216198,8.262693,7.921874,-0.775424,-8.227020,3.044468,0.159774,-8.039846,-7.037326,7.899920,-2.024746,-3.637525,0.766459,6.249433,8.212443,8.918981,-9.620235,9.014769,-2.193723,6.662966,-5.577901,3.843256,7.145472,-8.679732,3.945378,-3.102306,8.006911,-3.411149,-9.719549,-6.069581,-7.844837,8.573413,-3.918825,-3.893074,-0.540908,0.963567,0.790783,2.424971,-4.153860,-1.591170,9.231092,7.404188,3.827060,1.617203,3.143517,8.411313,2.227396,3.445752,9.135046,5.887284,5.579982,7.328364,1.206136,-3.131000,-1.924915,0.435024,0.214977,-3.553798,-8.201401,-2.286035,0.085135,6.810314,-0.118291,-7.415389,7.181634,-6.145856,-0.555309,5.284412,-7.027204,-8.402044,-6.349271,-0.937089,-2.443381,-7.635149,-5.045624,2.166918,-3.048635,9.416807,7.592033,1.031502,1.367303,6.411758,5.237480,6.404094,-0.545102,-1.900337,1.570846,-9.335050,8.147399,-0.042414,6.985725,8.319289,8.059763,4.065130,-9.599840,4.502078,-9.295353,6.194428,3.735240,8.985463,-8.921080,-0.457757,-9.908699,-8.293681,9.628052,1.635296,-7.213853,-3.312017,3.744757,-9.569897,-6.581455,3.181402,-5.310137,-0.427561,4.893449,-7.055927,1.958903,2.028215,8.489749,4.731016,2.923394,-1.951528,7.454452,2.391138,-9.471639,-9.855382,5.589033,5.077304,5.734074,5.975328,1.541449,-9.327009,-2.315739,-6.806085,8.357816,-0.707943,-2.921040,-3.499030,2.921055,0.220620,8.563324,8.255540,4.780337,6.023265,-5.849290,-0.689720,-7.528006,7.719600,-8.137600,-2.054542,4.424071,-1.533815,2.444217,-4.631266,-8.485993,-8.351440,7.225763,-6.725802,-0.123605,6.218613,-6.596510,-3.930934,7.287509,6.893133,8.499977,2.312733,-0.829293,2.160656,4.787751,0.479381,3.476107,5.557234,9.769867,4.673146,1.432005,-4.605388,-6.051232,-9.588775,-8.410993,-8.130893,-8.921577,3.459630,0.532531,-9.878717,-3.760250,0.137403,-3.912598,-8.784291,-5.969953,0.882439,8.793841,-0.927915,2.194837,9.919097,-4.883075,0.406504,4.863492,-1.539764,7.092332,8.565661,-3.212751,3.047560,-4.956848,-5.155973,-9.820304,-4.731009,8.621687,7.813777,-3.228786,0.693719,-3.473705,4.687608,3.270749,4.797094,-0.062675,-2.813004,1.841363,1.063926,8.594465,-3.230021,-5.861854,1.946140,2.814305,-4.164872,5.531430,5.659229,-6.703983,-1.902044,-5.003461,1.314901,-7.897440,8.833012,5.308937,2.842446,-9.658918,-6.299337,5.817911,-5.266739,5.269885,-4.521987,-2.860897,-3.736182,-3.914900,-5.124331,-9.514648,9.636210,1.397494,-2.041114,-0.732530,-2.599451,-5.661302,5.455263,-7.767094,-7.024966,-9.953136,7.643411,-7.805089,0.106854,-3.611469,7.564992,4.748614,2.790854,4.418881,-6.639686,-0.539473,-9.781397,5.493349,-2.134802,-8.899321,3.129543,4.103629,3.447301,4.361509,-5.920239,4.221217,-3.288138,-8.766397,0.021831,-3.407787,3.390463,-7.605710,2.476121,4.280765,-5.033721,-3.710520,-8.482900,-3.781618,-7.511743,6.413408,5.653355,-6.947669,1.710854,3.310778,0.177255,-8.883939,-3.872607,-3.623366,6.544187,4.681188,0.031278,9.035384,4.519403,-4.205712,6.161418,-8.419727,-1.302735,7.974931,-4.848227,-5.438886,-7.256027,-4.115138,-2.462317,-3.146708,2.032217,4.263287,6.893488,-8.878004,-5.797457,-6.732831,-4.639283,-4.463284,-4.649295,7.825997,-0.051421,-8.932947,-6.856415,-1.553140,6.017764,-8.482895,-7.212030,-1.800941,5.835837]], dtype = "float32")#candidate|1420|(1, 1232)|const|float32
call_1419 = relay.TupleGetItem(func_1309_call(relay.reshape(const_1420.astype('float32'), [14, 8, 11])), 0)
call_1421 = relay.TupleGetItem(func_1312_call(relay.reshape(const_1420.astype('float32'), [14, 8, 11])), 0)
output = relay.Tuple([call_1399,call_1419,const_1420,])
output2 = relay.Tuple([call_1400,call_1421,const_1420,])
func_1429 = relay.Function([], output)
mod['func_1429'] = func_1429
mod = relay.transform.InferType()(mod)
output = func_1429()
func_1430 = relay.Function([], output)
mutated_mod['func_1430'] = func_1430
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1452 = func_1121_call()
call_1453 = func_1121_call()
output = relay.Tuple([call_1452,])
output2 = relay.Tuple([call_1453,])
func_1467 = relay.Function([], output)
mod['func_1467'] = func_1467
mod = relay.transform.InferType()(mod)
output = func_1467()
func_1468 = relay.Function([], output)
mutated_mod['func_1468'] = func_1468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1351_call = mod.get_global_var('func_1351')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_1469 = relay.TupleGetItem(func_1351_call(), 0)
call_1470 = relay.TupleGetItem(func_1352_call(), 0)
output = call_1469
output2 = call_1470
func_1513 = relay.Function([], output)
mod['func_1513'] = func_1513
mod = relay.transform.InferType()(mod)
output = func_1513()
func_1514 = relay.Function([], output)
mutated_mod['func_1514'] = func_1514
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1562 = func_1121_call()
call_1563 = func_1121_call()
output = call_1562
output2 = call_1563
func_1584 = relay.Function([], output)
mod['func_1584'] = func_1584
mod = relay.transform.InferType()(mod)
output = func_1584()
func_1585 = relay.Function([], output)
mutated_mod['func_1585'] = func_1585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_1604 = func_1513_call()
call_1605 = func_1513_call()
output = call_1604
output2 = call_1605
func_1608 = relay.Function([], output)
mod['func_1608'] = func_1608
mod = relay.transform.InferType()(mod)
mutated_mod['func_1608'] = func_1608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1608_call = mutated_mod.get_global_var('func_1608')
call_1609 = func_1608_call()
output = call_1609
func_1610 = relay.Function([], output)
mutated_mod['func_1610'] = func_1610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1608_call = mod.get_global_var('func_1608')
func_1610_call = mutated_mod.get_global_var('func_1610')
call_1670 = func_1608_call()
call_1671 = func_1608_call()
output = relay.Tuple([call_1670,])
output2 = relay.Tuple([call_1671,])
func_1673 = relay.Function([], output)
mod['func_1673'] = func_1673
mod = relay.transform.InferType()(mod)
output = func_1673()
func_1674 = relay.Function([], output)
mutated_mod['func_1674'] = func_1674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_1685 = relay.TupleGetItem(func_1128_call(), 0)
call_1686 = relay.TupleGetItem(func_1129_call(), 0)
output = call_1685
output2 = call_1686
func_1693 = relay.Function([], output)
mod['func_1693'] = func_1693
mod = relay.transform.InferType()(mod)
mutated_mod['func_1693'] = func_1693
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mutated_mod.get_global_var('func_1693')
call_1694 = func_1693_call()
output = call_1694
func_1695 = relay.Function([], output)
mutated_mod['func_1695'] = func_1695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1351_call = mod.get_global_var('func_1351')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_1770 = relay.TupleGetItem(func_1351_call(), 0)
call_1771 = relay.TupleGetItem(func_1352_call(), 0)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1776 = func_1121_call()
call_1777 = func_1121_call()
uop_1797 = relay.atanh(call_1770.astype('float64')) # shape=(8, 11, 10)
uop_1799 = relay.atanh(call_1771.astype('float64')) # shape=(8, 11, 10)
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
var_1810 = relay.var("var_1810", dtype = "float32", shape = (1232,))#candidate|1810|(1232,)|var|float32
call_1809 = relay.TupleGetItem(func_1309_call(relay.reshape(var_1810.astype('float32'), [14, 8, 11])), 0)
call_1811 = relay.TupleGetItem(func_1312_call(relay.reshape(var_1810.astype('float32'), [14, 8, 11])), 0)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_1818 = func_1121_call()
call_1819 = func_1121_call()
output = relay.Tuple([call_1776,uop_1797,call_1809,var_1810,call_1818,])
output2 = relay.Tuple([call_1777,uop_1799,call_1811,var_1810,call_1819,])
func_1823 = relay.Function([var_1810,], output)
mod['func_1823'] = func_1823
mod = relay.transform.InferType()(mod)
var_1824 = relay.var("var_1824", dtype = "float32", shape = (1232,))#candidate|1824|(1232,)|var|float32
output = func_1823(var_1824)
func_1825 = relay.Function([var_1824], output)
mutated_mod['func_1825'] = func_1825
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1429_call = mod.get_global_var('func_1429')
func_1430_call = mutated_mod.get_global_var('func_1430')
call_1893 = relay.TupleGetItem(func_1429_call(), 1)
call_1894 = relay.TupleGetItem(func_1430_call(), 1)
var_1896 = relay.var("var_1896", dtype = "float32", shape = (14, 8, 11))#candidate|1896|(14, 8, 11)|var|float32
bop_1897 = relay.bitwise_or(call_1893.astype('uint32'), relay.reshape(var_1896.astype('uint32'), relay.shape_of(call_1893))) # shape=(14, 8, 11)
bop_1900 = relay.bitwise_or(call_1894.astype('uint32'), relay.reshape(var_1896.astype('uint32'), relay.shape_of(call_1894))) # shape=(14, 8, 11)
output = bop_1897
output2 = bop_1900
func_1926 = relay.Function([var_1896,], output)
mod['func_1926'] = func_1926
mod = relay.transform.InferType()(mod)
mutated_mod['func_1926'] = func_1926
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1927 = relay.var("var_1927", dtype = "float32", shape = (14, 8, 11))#candidate|1927|(14, 8, 11)|var|float32
func_1926_call = mutated_mod.get_global_var('func_1926')
call_1928 = func_1926_call(var_1927)
output = call_1928
func_1929 = relay.Function([var_1927], output)
mutated_mod['func_1929'] = func_1929
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1950 = relay.var("var_1950", dtype = "int64", shape = (9, 16, 1))#candidate|1950|(9, 16, 1)|var|int64
var_1951 = relay.var("var_1951", dtype = "int64", shape = (9, 16, 15))#candidate|1951|(9, 16, 15)|var|int64
bop_1952 = relay.right_shift(var_1950.astype('int64'), var_1951.astype('int64')) # shape=(9, 16, 15)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_1955 = func_1513_call()
call_1956 = func_1513_call()
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_1958 = func_1584_call()
call_1959 = func_1584_call()
output = relay.Tuple([bop_1952,call_1955,call_1958,])
output2 = relay.Tuple([bop_1952,call_1956,call_1959,])
func_1973 = relay.Function([var_1950,var_1951,], output)
mod['func_1973'] = func_1973
mod = relay.transform.InferType()(mod)
mutated_mod['func_1973'] = func_1973
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1973_call = mutated_mod.get_global_var('func_1973')
var_1975 = relay.var("var_1975", dtype = "int64", shape = (9, 16, 1))#candidate|1975|(9, 16, 1)|var|int64
var_1976 = relay.var("var_1976", dtype = "int64", shape = (9, 16, 15))#candidate|1976|(9, 16, 15)|var|int64
call_1974 = func_1973_call(var_1975,var_1976,)
output = call_1974
func_1977 = relay.Function([var_1975,var_1976,], output)
mutated_mod['func_1977'] = func_1977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1429_call = mod.get_global_var('func_1429')
func_1430_call = mutated_mod.get_global_var('func_1430')
call_1981 = relay.TupleGetItem(func_1429_call(), 2)
call_1982 = relay.TupleGetItem(func_1430_call(), 2)
output = call_1981
output2 = call_1982
func_1991 = relay.Function([], output)
mod['func_1991'] = func_1991
mod = relay.transform.InferType()(mod)
output = func_1991()
func_1992 = relay.Function([], output)
mutated_mod['func_1992'] = func_1992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_2013 = func_1121_call()
call_2014 = func_1121_call()
uop_2029 = relay.rsqrt(call_2013.astype('float64')) # shape=(8, 11, 10)
uop_2031 = relay.rsqrt(call_2014.astype('float64')) # shape=(8, 11, 10)
func_1252_call = mod.get_global_var('func_1252')
func_1255_call = mutated_mod.get_global_var('func_1255')
const_2036 = relay.const([-6.295177,0.642771,6.099143,5.759017,1.696377,5.004822,4.285354,7.847161,7.128316,5.225015,6.593291,8.293258,2.863895,-5.150596,3.505838,6.931359,9.338621,-0.132905,-5.778590,5.013844,7.090390,4.699602,-5.497105,3.223893,5.508813,-5.953343,-7.862743,-4.757031,-1.197893,-2.154865,1.599452,2.062823,0.035644,-2.489136,3.223807,2.529661,-7.053888,-9.890119,3.817538,0.899160,-4.722903,0.554306,3.965298,-8.149543,-4.415023,5.330259,-1.104091,-2.469638,6.194552,9.344142,8.227414,3.817024,-1.286927,-6.181365,0.853731,-5.479879,4.558049,-6.426224,-8.023703,-9.626086,-5.074859,-6.826712,5.804459,-0.738525,3.970502,5.961571,-1.257717,2.362831,-0.966510,-9.392738,2.203187,5.047670,-4.597217,6.123718,-9.463254,9.811073,1.044233,-3.209052,2.966551,2.888166,-3.858094,5.322540,3.937984,7.879579,-9.031461,-3.733363,5.162518,8.739666,8.750652,-3.010034,-1.761076,-8.226758,6.518884,-1.602457,9.222642,-0.237440,2.202964,-8.251562,-8.736871,-4.369321,5.750142,-3.932109,5.329593,-7.096158,-2.900958,-2.818523,5.623492,-9.236296,3.918909,8.745713,4.433417,0.483662,6.080320,8.905051,9.627071,-8.954992,-9.536890,3.697049,-8.162559,1.543616,-2.367335,-1.656230,-1.925245,9.923964,1.144471,8.391623,-3.421825,2.369179,-4.401579,7.062638,4.831961,7.551386,-6.015736,8.651638,-8.421501,4.324049,-9.460461,-8.984534,-8.064872,0.407476,-3.544782,-9.315197,1.316680,-5.657705,0.582884,2.449154,-5.602771,-1.303357,-4.024365,7.356142,-7.987664,3.112868,-9.734901,-8.838922,6.085941,1.499762], dtype = "float32")#candidate|2036|(156,)|const|float32
call_2035 = relay.TupleGetItem(func_1252_call(relay.reshape(const_2036.astype('float32'), [13, 3, 4])), 6)
call_2037 = relay.TupleGetItem(func_1255_call(relay.reshape(const_2036.astype('float32'), [13, 3, 4])), 6)
func_1673_call = mod.get_global_var('func_1673')
func_1674_call = mutated_mod.get_global_var('func_1674')
call_2039 = relay.TupleGetItem(func_1673_call(), 0)
call_2040 = relay.TupleGetItem(func_1674_call(), 0)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_2047 = func_1693_call()
call_2048 = func_1693_call()
output = relay.Tuple([uop_2029,call_2035,const_2036,call_2039,call_2047,])
output2 = relay.Tuple([uop_2031,call_2037,const_2036,call_2040,call_2048,])
func_2065 = relay.Function([], output)
mod['func_2065'] = func_2065
mod = relay.transform.InferType()(mod)
output = func_2065()
func_2066 = relay.Function([], output)
mutated_mod['func_2066'] = func_2066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_2069 = func_1513_call()
call_2070 = func_1513_call()
uop_2091 = relay.sigmoid(call_2069.astype('float32')) # shape=(8, 11, 10)
uop_2093 = relay.sigmoid(call_2070.astype('float32')) # shape=(8, 11, 10)
output = uop_2091
output2 = uop_2093
func_2097 = relay.Function([], output)
mod['func_2097'] = func_2097
mod = relay.transform.InferType()(mod)
mutated_mod['func_2097'] = func_2097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mutated_mod.get_global_var('func_2097')
call_2098 = func_2097_call()
output = call_2098
func_2099 = relay.Function([], output)
mutated_mod['func_2099'] = func_2099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_2103 = relay.TupleGetItem(func_1128_call(), 0)
call_2104 = relay.TupleGetItem(func_1129_call(), 0)
output = call_2103
output2 = call_2104
func_2132 = relay.Function([], output)
mod['func_2132'] = func_2132
mod = relay.transform.InferType()(mod)
output = func_2132()
func_2133 = relay.Function([], output)
mutated_mod['func_2133'] = func_2133
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_2144 = func_2097_call()
call_2145 = func_2097_call()
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_2147 = func_1513_call()
call_2148 = func_1513_call()
func_1973_call = mod.get_global_var('func_1973')
func_1977_call = mutated_mod.get_global_var('func_1977')
const_2157 = relay.const([3,4,1,-1,6,-7,3,-2,9,3,3,6,-1,6,-3,-8,2,8,-8,8,-4,10,-7,2,10,-2,9,3,-6,8,7,8,8,7,-6,-1,-1,10,1,-4,9,6,-5,8,7,3,-1,-7,6,6,-10,2,6,-1,-4,-8,2,1,-2,-1,6,-6,4,6,7,1,9,-9,7,-1,-5,-4,-4,6,-5,-8,-10,5,-8,-5,-5,4,-4,-8,-3,10,10,4,-8,-2,7,3,4,3,-1,7,-7,-9,-4,-9,-5,-6,4,1,-10,6,-4,-5,7,10,-6,-3,8,3,-8,-10,3,10,-5,3,5,-5,8,-7,7,4,-4,10,10,5,-6,-3,-2,10,5,5,1,-8,9,4,3,-1,7,-9], dtype = "int64")#candidate|2157|(144,)|const|int64
const_2158 = relay.const([-7,1,-3,2,-2,-5,6,4,-6,9,9,10,-9,3,3,1,8,9,-7,-3,7,-6,5,-7,3,1,-10,-3,-7,4,-4,-2,-1,4,-2,-6,6,-4,-4,-1,8,10,-2,-6,1,1,-7,10,3,-5,-2,6,5,-10,-2,5,-5,-10,1,-6,-8,-10,9,4,-5,-7,-1,8,4,4,-10,-7,-5,-4,5,-3,-8,-9,-4,-8,-1,7,-9,-8,2,8,1,9,-4,-6,-4,1,1,-8,10,-3,3,5,-4,7,-4,-2,-2,-3,-3,-3,-8,-8,4,-4,-1,7,9,-6,-4,-3,-7,3,5,6,-7,-4,5,3,-7,4,-6,-2,3,-1,10,-5,-8,-6,4,-2,3,5,-9,7,-5,-2,2,-7,-1,-3,-2,-9,7,-5,9,4,-3,-10,-5,-8,8,1,-5,6,-7,-8,7,1,-3,5,-2,-4,7,-9,2,5,9,-9,-6,-10,-4,-2,-6,-5,9,-10,10,-8,-9,9,6,1,-2,2,5,-1,-2,10,-5,-6,-4,5,-10,10,4,3,5,-7,-6,3,3,-10,6,-3,-4,5,-3,3,5,-7,3,1,5,5,7,3,-1,-6,-5,-9,-8,-1,7,8,-5,3,6,8,-1,3,10,-9,10,-7,6,8,-2,-7,-10,3,10,5,-1,7,5,-10,-5,3,8,-4,8,8,-8,-1,8,8,-3,3,-6,-5,-8,6,-6,3,-1,-8,-9,-10,-9,-7,-8,-6,10,2,8,8,2,3,1,4,3,2,6,10,7,-4,-4,4,10,9,5,7,-9,9,-6,-3,-5,-2,-1,8,-10,10,5,-6,-4,-4,-2,8,9,1,-10,-8,-3,6,3,-9,8,-8,7,-9,-1,-2,2,-4,9,8,-2,-4,7,7,6,4,9,-9,8,-9,-9,-9,1,3,9,-1,8,-5,5,-6,2,-9,1,-7,-5,5,-9,6,10,-2,-1,-9,6,3,-10,6,-8,-2,2,6,-8,-1,7,-7,-5,5,9,4,-2,1,-5,-1,-2,9,-2,1,-8,-7,10,-4,-2,-10,7,-10,-10,-10,-8,5,3,3,-1,-7,7,-5,-9,-1,-8,-4,4,3,-5,-8,-3,4,-6,-3,-3,7,-6,6,-9,-8,7,-1,8,-4,6,-7,-4,-5,1,-9,-2,-6,-7,6,9,-5,8,9,10,8,-3,5,7,10,-1,2,-5,2,1,8,-1,-8,8,4,1,6,-6,-1,-2,-3,-10,-6,5,7,-5,-8,7,-5,3,7,-1,8,-3,-2,-10,9,10,-4,-1,-3,-5,3,6,9,9,-3,-8,-8,10,9,3,-1,-3,-9,6,-3,2,-5,5,-6,-1,-3,-10,1,10,-1,7,-7,-6,5,10,-5,3,1,-5,2,-7,-4,-7,6,-6,-10,6,-3,8,6,-7,10,-10,-10,7,-10,9,1,2,3,4,-1,3,-5,-6,-6,-2,7,-9,-9,-10,-3,5,-7,1,5,3,6,-3,-4,-1,-4,-9,7,7,-4,-6,-6,-1,8,-2,7,-10,-9,5,-2,4,-1,4,-2,-5,5,-5,2,5,10,-4,1,2,-7,-3,-3,-2,3,2,6,-2,-9,-4,-3,-5,-4,-9,-5,5,10,-10,9,7,7,-7,-7,5,-6,-10,-8,3,4,-9,5,-10,3,7,-1,4,-6,-2,-2,10,6,8,-5,-5,4,-9,-9,-5,-8,-6,9,-8,3,-9,-6,2,10,-5,-2,5,6,9,4,10,10,-2,8,-5,7,5,-2,-5,-10,7,-3,-1,8,-6,4,6,-2,5,6,2,-2,9,7,-4,6,-10,-6,10,1,-8,-2,10,-3,-7,-3,-2,-7,8,-5,-10,8,10,2,-9,5,-7,4,-4,-4,-5,9,3,8,-7,-8,6,8,-9,5,3,-9,-1,-2,9,-4,-3,2,9,9,-5,-7,-2,-8,-7,-1,6,-3,-5,10,8,-10,10,-7,4,-5,3,-1,-8,6,-3,-6,-10,-6,3,-9,-3,-2,-3,-10,-6,-7,8,4,8,-9,-8,1,-3,1,2,-7,-10,-6,9,-9,4,4,3,-7,-7,-3,-3,-10,-9,2,-2,-6,9,7,-1,-5,-4,6,6,-10,4,-5,-6,-3,8,8,-6,6,10,3,4,6,-6,7,10,2,-1,-10,6,5,1,-5,10,10,7,-1,1,8,4,7,3,7,-10,4,-10,-7,-2,8,4,-2,-1,-9,-4,8,-2,-3,6,-10,7,-10,3,-10,2,9,-5,-6,-5,1,-3,7,-5,10,-10,-10,6,-8,1,-4,-7,10,3,10,-2,9,-1,-3,-7,-2,5,8,3,-10,3,7,4,-3,3,7,4,3,2,-4,10,10,7,7,-1,2,1,-5,7,4,-1,7,6,-3,-5,9,-4,-3,4,-10,-6,-2,-4,-2,5,2,6,3,9,-8,4,2,-6,-10,-4,7,7,-7,-6,-3,-2,7,4,7,6,10,5,-10,8,1,-4,-1,10,1,6,7,9,-5,-3,-6,2,-1,-9,-7,-2,-8,9,-7,-9,4,-2,-3,-4,2,3,-6,-6,-1,9,10,8,-10,-1,-7,5,6,-4,-8,9,6,10,8,-9,10,9,-9,-10,-8,-6,-3,-8,-10,-10,-1,-10,5,-8,-7,4,-7,7,-3,-5,-10,-8,5,4,8,-4,4,-5,8,-4,4,-2,4,-7,8,8,6,-1,-1,4,10,8,6,5,-9,-6,-10,4,-8,8,4,4,-1,-8,-1,-2,2,4,-5,9,9,-7,-6,2,-1,-1,-8,2,1,4,2,-2,-7,-2,7,-6,-9,-7,3,10,-10,10,6,-9,-2,9,-10,10,-1,-8,4,-9,7,7,-5,-8,7,-5,8,10,-9,-5,1,-4,8,3,6,-4,-7,-6,9,9,10,7,-10,-1,5,5,1,-10,-3,-2,4,3,8,-4,-3,-3,7,-4,-6,-5,1,8,-1,-5,-3,3,-3,-1,-8,-8,-9,6,10,4,-5,8,9,9,6,4,1,9,6,4,6,-2,2,5,-8,-7,-8,-10,-1,-10,-5,8,-2,7,-8,1,-3,-3,3,-7,6,3,-9,4,-3,8,-9,-1,3,10,-1,9,3,8,-9,6,-9,3,3,-7,-2,-4,1,-3,-5,8,-3,1,9,2,6,-3,-7,4,-4,6,-6,-8,-8,-1,-5,1,8,-3,-5,2,3,8,-2,1,5,-1,-10,8,-1,2,-2,3,7,4,3,5,1,-9,8,-8,-9,-4,7,8,-4,1,5,3,-2,-6,-3,2,-6,7,-10,9,-4,-10,-6,7,9,4,-6,8,4,-2,4,-10,-4,4,-4,3,5,-6,-2,-1,-5,-6,3,-8,5,3,3,-10,4,10,7,3,7,-3,4,-1,-10,-1,-1,8,-8,-5,-6,-9,9,8,5,5,1,-2,-3,-8,-1,4,8,8,-4,-7,8,-3,-7,2,-2,-3,-7,10,7,-5,-4,10,2,8,-3,-10,-2,7,-4,9,-7,9,-7,-6,-6,5,-9,-2,5,8,-4,8,-1,-3,-5,1,5,6,10,8,-4,-3,-8,-5,-4,10,1,-6,-4,-7,3,8,9,-10,9,-4,3,-7,4,-5,-7,8,2,2,3,4,9,-6,8,-9,5,2,-3,-8,-3,7,7,-9,1,4,3,2,2,2,3,8,7,6,1,8,7,3,1,3,-3,6,7,-8,5,8,5,5,-8,-3,5,2,-7,5,8,9,-7,7,-4,-4,7,8,9,-6,-4,-7,-10,-2,5,4,5,5,2,-9,-1,7,4,1,-9,-2,6,4,8,5,-5,-7,4,-4,5,3,6,-3,-5,4,1,-7,-5,5,8,5,8,-4,5,1,3,8,-3,-10,7,-2,-1,-7,3,8,-1,7,-6,-2,-2,10,6,-5,-1,9,10,-6,2,7,-5,-9,1,-4,6,7,10,3,7,6,4,6,7,-7,5,-4,-1,5,-8,9,8,2,-3,-5,-3,-10,6,-1,8,-4,1,5,3,-4,-10,5,-6,7,3,2,5,-3,8,8,3,10,1,6,5,5,10,7,-6,-7,-8,-5,3,-6,3,8,3,7,-3,-8,-2,8,-2,2,-9,6,-2,-10,10,-7,-7,8,2,6,10,-8,6,6,10,5,-9,-7,-4,5,1,5,-6,10,8,-5,-9,-3,-8,-2,-9,8,-7,-10,-1,5,6,2,2,-9,-7,1,9,10,2,-6,6,-10,8,-6,-4,1,-10,1,-6,-4,-7,8,8,-3,-9,-5,4,9,-7,1,5,-1,-8,7,-5,6,6,7,-3,8,3,8,-1,1,4,-7,-5,-4,-3,6,1,-9,9,5,-10,3,-6,-1,8,5,4,-10,2,-4,2,2,-4,-2,-9,-5,10,2,-9,-3,5,-10,9,7,-4,6,-1,-3,1,7,2,1,-10,-8,-6,-9,-8,-7,10,10,-7,4,-7,2,-10,-2,-1,-4,3,-1,4,9,10,1,-2,-6,9,6,4,-8,6,-7,-10,-9,5,-4,-1,-1,9,-3,-4,1,-6,1,-4,4,-6,9,4,-1,-10,-7,9,4,-9,10,-5,-7,7,-10,-7,-1,7,-1,7,-1,-10,-10,6,7,-2,-1,8,-7,-5,6,-1,-7,6,-9,-3,-2,9,-9,9,-10,-3,-7,8,7,-10,7,1,-8,-5,2,7,10,7,1,-7,6,-4,2,6,7,-4,7,-10,2,2,-5,7,7,7,9,-10,4,9,-6,-9,3,7,9,-5,-7,7,9,7,8,-3,8,6,-5,-1,-2,-4,-4,-4,-10,-5,9,-9,6,4,2,4,1,3,5,-9,-4,9,-5,2,6,-4,-1,-3,1,-4,-7,2,-8,-7,10,-7,10,4,-3,-3,-8,-1,-4,-8,4,-7,-2,-10,-7,-3,-3,-3,10,-10,-6,1,-2,4,9,-10,-6,3,-9,8,9,10,6,7,-3,-1,2,2,4,-1,-8,7,9,3,4,1,-5,-7,6,-6,-1,-7,-9,-6,-5,-8,-7,10,-7,-3,4,-4,6,-9,7,9,-4,-10,5,8,4,-6,10,-8,-7,-8,6,-10,-3,-3,6,-8,-10,3,-8,-7,6,-5,7,5,-8,-7,-5,5,3,10,-3,10,-9,-9,4,1,-9,-10,4,2,-8,-4,-3,-3,-8,10,1,5,2,9,9,-10,10,5,-3,4,6,-4,-7,-9,-10,-8,-8,-3,6,10,5,4,-10,-7,-7,-6,-9,6,-9,-4,-6,10,-7,6,-6,-1,-6,6,5,3,-4,-7,-9,-10,-7,-7,-9,7,-1,-9,1,10,4,-5,9,1,7,6,-8,-6,3,10,-10,7,-3,-8,4,-4,-4,-7,9,6,-3,-3,1,10,5,-7,10,-8,-10,-7,-6,5,10,-3,-10,-4,-3,8,8,-9,7,-10,2,9,-6,-6,-7,-4,-3,-3,-6,-7,-6,3,2,-9,-10,7,-10,-1,3,1,-10,-5,2,7,-9,-6,-9,10,-1,-2,9,2,-6,-6,-2,-8,-1,-5,-5,10,-7,8,5,9,9,8,1,-7,-5,-5,-1,-7,-10,-7,5,10,4,-7,-5,5,-8,-2,-3,5,6,-4,4,9,-4,-10,4,10,-7,-6,-5,-8,6,-9,3,-6,3,5,-3,-5,1,-7,-7,-4,6,-1,-1,-4,-3,5,-7,2,-4,1,-3,4,4,-10,10,7,4,-7,-9,1,3,5,-10,4,-5,-1,1,-2,-7,-6,-6,5,3,6,-4,-1,4,9,-4,-10,-7,-7], dtype = "int64")#candidate|2158|(2160,)|const|int64
call_2156 = relay.TupleGetItem(func_1973_call(relay.reshape(const_2157.astype('int64'), [9, 16, 1]), relay.reshape(const_2158.astype('int64'), [9, 16, 15]), ), 1)
call_2159 = relay.TupleGetItem(func_1977_call(relay.reshape(const_2157.astype('int64'), [9, 16, 1]), relay.reshape(const_2158.astype('int64'), [9, 16, 15]), ), 1)
output = relay.Tuple([call_2144,call_2147,call_2156,const_2157,const_2158,])
output2 = relay.Tuple([call_2145,call_2148,call_2159,const_2157,const_2158,])
func_2162 = relay.Function([], output)
mod['func_2162'] = func_2162
mod = relay.transform.InferType()(mod)
output = func_2162()
func_2163 = relay.Function([], output)
mutated_mod['func_2163'] = func_2163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1608_call = mod.get_global_var('func_1608')
func_1610_call = mutated_mod.get_global_var('func_1610')
call_2180 = func_1608_call()
call_2181 = func_1608_call()
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_2183 = func_1693_call()
call_2184 = func_1693_call()
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_2191 = func_1584_call()
call_2192 = func_1584_call()
output = relay.Tuple([call_2180,call_2183,call_2191,])
output2 = relay.Tuple([call_2181,call_2184,call_2192,])
func_2212 = relay.Function([], output)
mod['func_2212'] = func_2212
mod = relay.transform.InferType()(mod)
output = func_2212()
func_2213 = relay.Function([], output)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_2227 = relay.TupleGetItem(func_1467_call(), 0)
call_2228 = relay.TupleGetItem(func_1468_call(), 0)
output = call_2227
output2 = call_2228
func_2236 = relay.Function([], output)
mod['func_2236'] = func_2236
mod = relay.transform.InferType()(mod)
mutated_mod['func_2236'] = func_2236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mutated_mod.get_global_var('func_2236')
call_2237 = func_2236_call()
output = call_2237
func_2238 = relay.Function([], output)
mutated_mod['func_2238'] = func_2238
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_2317 = func_1693_call()
call_2318 = func_1693_call()
output = call_2317
output2 = call_2318
func_2321 = relay.Function([], output)
mod['func_2321'] = func_2321
mod = relay.transform.InferType()(mod)
mutated_mod['func_2321'] = func_2321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2321_call = mutated_mod.get_global_var('func_2321')
call_2322 = func_2321_call()
output = call_2322
func_2323 = relay.Function([], output)
mutated_mod['func_2323'] = func_2323
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_2324 = func_2132_call()
call_2325 = func_2132_call()
output = call_2324
output2 = call_2325
func_2339 = relay.Function([], output)
mod['func_2339'] = func_2339
mod = relay.transform.InferType()(mod)
output = func_2339()
func_2340 = relay.Function([], output)
mutated_mod['func_2340'] = func_2340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_2385 = relay.TupleGetItem(func_1467_call(), 0)
call_2386 = relay.TupleGetItem(func_1468_call(), 0)
uop_2407 = relay.sin(call_2385.astype('float64')) # shape=(8, 11, 10)
uop_2409 = relay.sin(call_2386.astype('float64')) # shape=(8, 11, 10)
output = relay.Tuple([uop_2407,])
output2 = relay.Tuple([uop_2409,])
func_2414 = relay.Function([], output)
mod['func_2414'] = func_2414
mod = relay.transform.InferType()(mod)
output = func_2414()
func_2415 = relay.Function([], output)
mutated_mod['func_2415'] = func_2415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1673_call = mod.get_global_var('func_1673')
func_1674_call = mutated_mod.get_global_var('func_1674')
call_2448 = relay.TupleGetItem(func_1673_call(), 0)
call_2449 = relay.TupleGetItem(func_1674_call(), 0)
output = call_2448
output2 = call_2449
func_2460 = relay.Function([], output)
mod['func_2460'] = func_2460
mod = relay.transform.InferType()(mod)
output = func_2460()
func_2461 = relay.Function([], output)
mutated_mod['func_2461'] = func_2461
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2467 = relay.var("var_2467", dtype = "float64", shape = (2, 13, 1))#candidate|2467|(2, 13, 1)|var|float64
var_2468 = relay.var("var_2468", dtype = "float64", shape = (2, 13, 1))#candidate|2468|(2, 13, 1)|var|float64
bop_2469 = relay.divide(var_2467.astype('float64'), relay.reshape(var_2468.astype('float64'), relay.shape_of(var_2467))) # shape=(2, 13, 1)
func_887_call = mod.get_global_var('func_887')
func_889_call = mutated_mod.get_global_var('func_889')
const_2486 = relay.const([[-9.274426,9.980047],[4.144596,-8.558781],[-5.536930,7.906144],[-6.899879,-2.112042],[-2.561804,-8.193511],[-7.482953,8.413699],[-5.923519,6.301569],[-4.880765,-5.589251],[3.662951,7.201652],[2.326591,2.595442],[7.505629,-8.892892],[7.300345,9.289375],[4.603458,3.294857],[-9.811855,-8.893666],[2.059207,5.375092],[8.483068,-6.568896],[7.996098,2.387709],[3.063775,3.747353],[6.338755,5.981991],[-7.999734,7.017024],[-4.042044,3.200541],[3.745110,5.673118]], dtype = "float32")#candidate|2486|(22, 2)|const|float32
call_2485 = relay.TupleGetItem(func_887_call(relay.reshape(const_2486.astype('float32'), [4, 1, 11])), 3)
call_2487 = relay.TupleGetItem(func_889_call(relay.reshape(const_2486.astype('float32'), [4, 1, 11])), 3)
output = relay.Tuple([bop_2469,call_2485,const_2486,])
output2 = relay.Tuple([bop_2469,call_2487,const_2486,])
func_2512 = relay.Function([var_2467,var_2468,], output)
mod['func_2512'] = func_2512
mod = relay.transform.InferType()(mod)
mutated_mod['func_2512'] = func_2512
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2512_call = mutated_mod.get_global_var('func_2512')
var_2514 = relay.var("var_2514", dtype = "float64", shape = (2, 13, 1))#candidate|2514|(2, 13, 1)|var|float64
var_2515 = relay.var("var_2515", dtype = "float64", shape = (2, 13, 1))#candidate|2515|(2, 13, 1)|var|float64
call_2513 = func_2512_call(var_2514,var_2515,)
output = call_2513
func_2516 = relay.Function([var_2514,var_2515,], output)
mutated_mod['func_2516'] = func_2516
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2593 = relay.const([[[5.906048,2.078094,-6.481924,1.794741],[1.273865,-8.189705,9.699490,2.628448],[2.861410,-5.602991,-3.923350,1.619389],[0.663758,9.960061,-5.151340,-8.382514],[3.751343,6.498481,-7.272163,1.411109],[8.066715,-6.309028,-4.063680,-4.104150],[-9.907183,-8.472888,2.341183,-6.404927],[-2.881418,2.570350,9.467460,-0.148380],[2.097670,-9.246588,-8.031763,2.371703],[5.557577,1.746168,0.669903,9.646765],[-4.991252,-3.294271,5.472626,9.980433],[-8.272161,-7.890344,-2.696174,-1.590034],[3.133458,4.127843,-5.527598,0.484866],[-1.152021,-9.450105,-3.092804,7.338511],[3.865932,-3.478435,9.334432,-4.337881],[-5.674985,7.255190,-8.633339,-4.953034]],[[-5.513996,9.491642,-3.764284,-7.422348],[8.969684,-2.803671,-9.851881,0.320895],[2.319682,8.451940,2.445652,-8.543634],[-6.034170,-3.945358,-8.130546,-4.595048],[6.796875,0.696268,-7.322737,-9.700776],[-1.697141,9.716060,0.700228,2.349600],[8.461714,5.979017,-3.121463,-3.044670],[6.229347,7.399727,-1.051673,-6.985676],[-1.763290,1.203334,2.397221,-4.528072],[8.960730,-0.536592,-9.618607,6.302334],[-2.779501,-9.760961,2.190979,-3.822344],[-0.299053,-8.512742,0.566882,-5.570183],[-9.494708,9.297197,1.836776,-2.978990],[0.021991,5.271945,-0.039577,9.821584],[8.797521,9.098725,8.207220,1.668938],[-7.859504,-4.642898,-1.704361,0.638665]],[[-2.296661,-9.746201,-0.565783,-8.037168],[-9.922266,-3.436166,1.875907,1.193490],[6.392206,3.400073,-2.391908,-5.213819],[-1.547083,6.153186,6.704156,8.731451],[9.139796,-6.284113,-2.091965,0.458555],[-6.358862,1.794757,-1.088925,7.953387],[-3.887629,-1.922882,2.518650,4.387979],[1.621444,3.256837,1.290852,-5.209066],[-3.445964,-9.302009,-5.262483,4.317435],[2.456907,-2.944249,-0.301393,-2.813286],[-8.121605,2.344727,9.971050,4.275766],[8.114441,-9.887413,4.878318,8.829049],[8.775330,4.012558,-8.018044,-9.818612],[1.331107,4.899695,-2.901707,-4.645976],[-3.258855,5.316448,-1.705044,-9.222827],[0.649569,-0.471534,9.075671,-2.251508]],[[-8.136425,-1.592683,7.861882,-4.977248],[2.357150,-3.073520,1.573651,-5.614187],[-1.357492,-1.703440,-5.627388,2.809324],[0.736531,6.307387,2.671146,2.845581],[2.616718,-6.418844,-4.694032,5.044804],[-1.686625,-8.732818,0.938802,2.011474],[-7.151309,-8.838907,-8.781867,-4.674120],[-4.682742,8.442346,6.328002,5.568098],[-5.726286,5.849966,-9.124592,9.335671],[-5.207573,6.491872,-6.546749,-8.734016],[-3.565011,-8.002768,-7.655928,-5.603257],[-3.438272,-1.688050,-8.736091,-5.004576],[-7.438476,2.371305,-0.505994,4.975033],[-2.134738,-2.069945,-6.794927,1.029110],[-3.297772,2.293201,-4.066446,7.191366],[5.285271,9.404798,6.497363,4.178757]],[[6.977725,-9.126630,3.754431,6.084432],[-8.148207,-7.299191,-5.428599,8.586473],[9.489382,0.919286,-3.551455,-5.420351],[-1.975718,6.548739,1.959521,1.694881],[-0.893399,8.239906,-7.423521,0.410191],[-6.742752,6.170064,-5.350878,1.401937],[9.641972,2.583481,3.606352,-7.985577],[7.755552,8.633863,-0.367266,-2.437846],[7.658621,-1.490583,-1.966755,-8.768309],[3.814029,3.049731,6.213149,-9.452581],[7.499541,-8.704352,0.431558,-4.162146],[5.647433,-7.168860,8.405511,-0.254309],[-8.827270,-8.497007,-8.150996,1.626557],[-0.931043,0.076924,-1.020082,-7.359509],[-5.571994,-2.224982,5.160602,-9.559967],[3.065749,-3.702808,5.371581,9.154435]],[[0.476834,-8.035466,-2.829677,-3.525251],[-0.421930,-3.490148,3.459334,-4.200777],[-6.472321,3.392701,-7.498612,-4.253265],[-2.011938,-5.367143,5.070361,1.667037],[5.859653,-7.947465,-0.852797,-1.491397],[7.701130,8.955036,3.152796,-2.982758],[-6.456994,-5.637372,7.973267,-5.376197],[1.602056,-7.799899,-1.719630,-1.091109],[6.890204,-4.568404,8.826741,4.946640],[5.972695,8.475674,-0.476124,-4.052414],[4.078625,3.417293,9.771676,9.658214],[-1.697957,8.376017,7.014316,-0.225153],[5.624167,-1.631770,8.870389,3.885701],[-9.957379,-9.311653,-7.790977,-4.927125],[7.021557,-7.526294,9.362728,3.416587],[2.105356,4.858457,-4.580314,-3.788941]],[[-3.523726,-7.762308,-7.870377,-1.675375],[-4.506847,8.582433,-4.236378,0.234902],[-9.327134,-3.065790,1.886478,6.422957],[9.129767,0.552132,8.178463,9.027529],[1.661171,7.748915,9.539650,-1.712297],[-5.469422,-2.871627,8.768117,-4.997370],[6.114378,-6.449219,8.568163,-7.007096],[-9.012101,-2.302085,4.161871,4.860331],[-8.769485,-1.134955,-0.865051,7.704307],[-1.623687,0.854089,8.222730,8.930892],[2.345677,6.007426,-8.585168,0.686521],[-6.319071,-7.432977,0.109513,-2.002857],[-4.547841,8.697947,4.403378,-9.140502],[-7.032775,-1.938814,0.063218,-2.347724],[9.540693,6.746484,8.547921,-4.442865],[2.703980,5.973366,-3.380358,-4.002387]],[[-8.454014,8.655866,-6.629200,-5.228533],[-7.471897,7.288741,-4.942944,-7.078288],[1.727281,0.069141,-2.751326,-9.251144],[-4.870173,-5.043281,7.004044,-2.291962],[-4.752946,-9.755682,0.083690,0.144867],[9.615799,4.317346,-5.546918,9.422370],[-9.994448,4.947071,-9.486055,-8.827641],[1.528337,8.964388,4.758284,3.844604],[2.565989,-2.391999,-4.575577,-1.266474],[-3.822246,1.597301,9.277975,7.768586],[-8.142902,-9.177104,-6.999737,4.248539],[7.929823,2.904530,-0.479704,-9.579179],[-4.766069,-6.197347,-2.103613,-9.605159],[1.704457,-3.638838,-6.537226,-0.727431],[-8.969271,9.542330,8.684417,-0.534107],[6.285415,1.681355,-4.218814,5.643473]],[[-3.184659,8.430531,1.126250,-0.594621],[-3.563803,3.307423,-9.320992,4.033573],[4.963676,4.581571,2.279643,0.814710],[9.069322,4.610157,0.539983,-8.685064],[-7.177395,-4.309708,3.397757,-2.810558],[4.985797,-0.420767,4.430647,-9.995311],[-6.638449,8.271102,-6.653685,-3.953623],[4.452412,7.185609,1.771044,9.708959],[-5.551620,4.519628,-2.693519,7.153396],[4.738305,5.151125,6.180721,5.176599],[7.792366,6.393730,-7.469645,-4.751026],[0.092090,-8.133460,7.271482,0.488248],[8.912678,-0.833911,-7.783869,-0.730523],[5.335281,6.169757,1.048196,0.496397],[4.325354,-9.355969,-4.085681,-9.343243],[9.916745,-7.147520,-8.949361,-8.379918]],[[-8.154964,8.743107,-1.196684,7.100168],[8.069988,-1.859284,1.061411,0.538274],[-2.306276,-0.317332,-0.438190,1.502731],[3.496957,2.661089,8.497147,-9.165389],[-4.735960,-6.063519,3.271945,-2.856482],[-0.202626,9.525786,-4.409827,4.035302],[5.090707,-3.299097,-4.914813,5.343543],[2.958969,5.103281,-6.897788,8.686401],[4.363266,1.945857,6.993722,9.423977],[-5.550903,5.007511,6.852545,0.682081],[7.421362,8.282958,7.064155,3.106344],[9.421794,5.808524,-2.983507,-3.414084],[7.730793,-6.351997,3.102944,-4.171421],[7.114744,2.281421,-4.878066,4.309954],[-4.371520,6.936503,6.243450,-0.335593],[6.897540,-1.216139,-5.414123,6.221171]],[[-5.360301,-6.764690,5.034522,9.101881],[4.212555,-0.034592,7.482127,3.479036],[-4.383544,-4.628392,3.495865,-9.931305],[-5.217875,5.014038,0.319344,-8.231875],[-9.541650,9.696793,-2.227187,-8.007318],[2.120723,3.544302,-1.184987,-3.221763],[-9.379805,-0.865508,-4.194954,-0.804271],[6.280733,5.611920,6.334282,-7.720344],[8.902509,9.779084,-8.282667,1.564632],[-2.814841,2.813493,2.342627,7.982317],[-7.056417,5.513152,-1.550000,9.822757],[9.864542,-8.448274,0.709086,7.949340],[4.394596,-1.018698,-2.559150,3.872403],[-0.274576,-5.536288,3.262105,0.913909],[8.236116,-1.654638,7.882511,-3.538562],[-7.569042,6.128310,3.962147,-5.412581]],[[6.493017,5.544676,-9.660175,6.617110],[9.505832,-4.271275,4.469110,-0.680447],[8.328581,4.181588,-5.360686,3.759257],[-2.069765,-7.725794,3.481753,-6.937991],[0.993829,9.817124,5.023006,9.364440],[-1.367861,8.685360,0.362754,-7.396604],[-3.434486,7.829811,4.055401,1.746003],[2.129037,-2.309565,7.043121,-4.050066],[-3.444456,-0.229571,-6.538858,-1.889673],[-6.841064,-8.020368,7.551363,-9.608713],[-6.245163,-0.483773,-6.009692,-8.537136],[-4.283647,4.663392,3.831948,-6.773943],[3.747570,1.838628,-8.359301,-5.603708],[3.599391,9.426682,9.095274,-3.250296],[1.938172,-2.773716,4.176354,-9.657737],[7.884024,3.069713,2.270486,-3.288042]],[[-5.282239,-8.053872,8.821817,9.356114],[4.525439,9.054840,-0.572150,5.539678],[-9.283245,-1.838705,-5.952399,0.852266],[-6.015894,-3.234565,9.375851,-1.154617],[7.536622,-3.407814,1.501166,6.782582],[-6.256282,4.576317,5.430295,8.356347],[-6.330257,9.874447,-9.839867,-6.033790],[0.659104,-3.933346,2.787629,-3.044136],[0.022955,7.616507,3.587988,7.377725],[2.349420,-5.543053,1.482972,1.393939],[7.428472,-4.992364,8.992022,-9.153521],[-5.550935,0.321732,4.788328,-0.197014],[4.575651,8.025932,-7.301481,-2.448432],[-5.148979,-2.344033,-8.148757,3.493121],[-5.641229,0.195300,8.563244,-5.440455],[-2.085578,1.431904,-1.998423,-3.513145]],[[-5.891978,-5.876397,7.688834,-0.456850],[0.666295,0.415750,-3.028452,-6.714522],[2.460636,3.016557,0.818270,-4.820526],[8.615284,-3.178826,0.500226,2.796862],[-1.344050,-4.811515,8.122086,5.876289],[-3.465338,-0.010828,-7.000360,5.267320],[9.536468,-8.149342,0.995543,-0.903573],[-9.815633,-2.972238,-3.975556,4.224822],[1.791812,-6.381330,7.655347,5.908250],[-7.968714,-5.985175,-9.828054,-8.826958],[-8.821197,6.579034,8.775052,8.648513],[-2.671596,6.916692,9.625308,5.336828],[6.285964,3.922587,-7.304763,-4.447520],[9.496485,9.852533,-9.230095,0.863375],[-6.898517,-7.832631,-9.859279,1.314460],[0.282418,2.236041,-9.044786,1.044650]],[[-9.141409,-2.265130,-0.155285,-0.506011],[9.658996,6.355134,1.837399,3.756161],[0.374354,-7.369991,5.664338,-9.430854],[-3.701221,3.475373,7.108623,-5.624641],[-3.167898,-6.865080,5.594712,-1.500626],[-2.290091,0.991904,-0.978410,6.194171],[-6.246628,0.939064,8.578951,0.718123],[-0.271994,-8.938466,6.742416,9.797718],[0.848764,-4.851160,-3.530343,-7.378371],[7.661321,2.477655,-9.300832,9.388737],[-2.012389,-4.328711,9.418767,4.568493],[-6.529301,4.612561,4.685174,6.027413],[-7.712941,6.564014,-0.398572,0.722148],[1.629111,6.593722,4.279559,0.533472],[-6.571738,7.282696,5.698719,0.906242],[7.729637,2.758282,2.622472,5.212881]]], dtype = "float64")#candidate|2593|(15, 16, 4)|const|float64
uop_2594 = relay.log10(const_2593.astype('float64')) # shape=(15, 16, 4)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
const_2597 = relay.const([False,True,True,False,True,True,False,True,True,True,False,True,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,True,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,True,True,True,False,True,False,True,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,True,False,True,False,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,False,True,False,True,False,False,True,True,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,False,False,True,False,False,True,True,False,True,False,True,False,False,False,True,False,False,False,True,False,True,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,False,False,True,False,False,False,False,True,False,False,True,False,True,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True], dtype = "bool")#candidate|2597|(880,)|const|bool
call_2596 = relay.TupleGetItem(func_1211_call(relay.reshape(const_2597.astype('bool'), [8, 11, 10])), 1)
call_2598 = relay.TupleGetItem(func_1213_call(relay.reshape(const_2597.astype('bool'), [8, 11, 10])), 1)
output = relay.Tuple([uop_2594,call_2596,const_2597,])
output2 = relay.Tuple([uop_2594,call_2598,const_2597,])
func_2628 = relay.Function([], output)
mod['func_2628'] = func_2628
mod = relay.transform.InferType()(mod)
mutated_mod['func_2628'] = func_2628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2628_call = mutated_mod.get_global_var('func_2628')
call_2629 = func_2628_call()
output = call_2629
func_2630 = relay.Function([], output)
mutated_mod['func_2630'] = func_2630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_2650 = relay.TupleGetItem(func_2065_call(), 2)
call_2651 = relay.TupleGetItem(func_2066_call(), 2)
func_1281_call = mod.get_global_var('func_1281')
func_1284_call = mutated_mod.get_global_var('func_1284')
const_2673 = relay.const([True,False,True,True,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,True,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,False,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,False,True,True,True,True,True,False,False,True,True,True,False,True,False,True,True,False,True,False,True,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,True,True,True,False,True,True,True,False,False,True,True,False,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,True,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,True,False,False,False,False,True,True,True,True,True,False,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,True,False,True,True,True,False,True,True,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,False,True,False,False,True,False,True,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,False,True,False,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,False,False,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,True,True,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,False,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,False,True,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,False,True,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,True,True,True,False,False,False,True,False,False,True,True,False,False,True,True,False,False,True,True,False,True,False,True,False,True,False,False,True,True,True,False,True,False,True], dtype = "bool")#candidate|2673|(1848,)|const|bool
call_2672 = relay.TupleGetItem(func_1281_call(relay.reshape(const_2673.astype('bool'), [6, 308]), relay.reshape(call_2650.astype('int32'), [156,]), ), 5)
call_2674 = relay.TupleGetItem(func_1284_call(relay.reshape(const_2673.astype('bool'), [6, 308]), relay.reshape(call_2650.astype('int32'), [156,]), ), 5)
output = relay.Tuple([call_2650,call_2672,const_2673,])
output2 = relay.Tuple([call_2651,call_2674,const_2673,])
func_2678 = relay.Function([], output)
mod['func_2678'] = func_2678
mod = relay.transform.InferType()(mod)
output = func_2678()
func_2679 = relay.Function([], output)
mutated_mod['func_2679'] = func_2679
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1351_call = mod.get_global_var('func_1351')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_2708 = relay.TupleGetItem(func_1351_call(), 0)
call_2709 = relay.TupleGetItem(func_1352_call(), 0)
output = call_2708
output2 = call_2709
func_2712 = relay.Function([], output)
mod['func_2712'] = func_2712
mod = relay.transform.InferType()(mod)
output = func_2712()
func_2713 = relay.Function([], output)
mutated_mod['func_2713'] = func_2713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2678_call = mod.get_global_var('func_2678')
func_2679_call = mutated_mod.get_global_var('func_2679')
call_2742 = relay.TupleGetItem(func_2678_call(), 2)
call_2743 = relay.TupleGetItem(func_2679_call(), 2)
var_2744 = relay.var("var_2744", dtype = "bool", shape = (1848,))#candidate|2744|(1848,)|var|bool
bop_2745 = relay.add(call_2742.astype('int64'), relay.reshape(var_2744.astype('int64'), relay.shape_of(call_2742))) # shape=(1848,)
bop_2748 = relay.add(call_2743.astype('int64'), relay.reshape(var_2744.astype('int64'), relay.shape_of(call_2743))) # shape=(1848,)
output = relay.Tuple([bop_2745,])
output2 = relay.Tuple([bop_2748,])
func_2749 = relay.Function([var_2744,], output)
mod['func_2749'] = func_2749
mod = relay.transform.InferType()(mod)
var_2750 = relay.var("var_2750", dtype = "bool", shape = (1848,))#candidate|2750|(1848,)|var|bool
output = func_2749(var_2750)
func_2751 = relay.Function([var_2750], output)
mutated_mod['func_2751'] = func_2751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2628_call = mod.get_global_var('func_2628')
func_2630_call = mutated_mod.get_global_var('func_2630')
call_2766 = relay.TupleGetItem(func_2628_call(), 0)
call_2767 = relay.TupleGetItem(func_2630_call(), 0)
output = relay.Tuple([call_2766,])
output2 = relay.Tuple([call_2767,])
func_2771 = relay.Function([], output)
mod['func_2771'] = func_2771
mod = relay.transform.InferType()(mod)
mutated_mod['func_2771'] = func_2771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2771_call = mutated_mod.get_global_var('func_2771')
call_2772 = func_2771_call()
output = call_2772
func_2773 = relay.Function([], output)
mutated_mod['func_2773'] = func_2773
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_2810 = func_1513_call()
call_2811 = func_1513_call()
func_1926_call = mod.get_global_var('func_1926')
func_1929_call = mutated_mod.get_global_var('func_1929')
var_2813 = relay.var("var_2813", dtype = "float32", shape = (1232,))#candidate|2813|(1232,)|var|float32
call_2812 = func_1926_call(relay.reshape(var_2813.astype('float32'), [14, 8, 11]))
call_2814 = func_1926_call(relay.reshape(var_2813.astype('float32'), [14, 8, 11]))
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_2815 = relay.TupleGetItem(func_2162_call(), 4)
call_2816 = relay.TupleGetItem(func_2163_call(), 4)
func_749_call = mod.get_global_var('func_749')
func_753_call = mutated_mod.get_global_var('func_753')
const_2829 = relay.const(8.440455, dtype = "float32")#candidate|2829|()|const|float32
var_2830 = relay.var("var_2830", dtype = "float32", shape = (2880,))#candidate|2830|(2880,)|var|float32
call_2828 = relay.TupleGetItem(func_749_call(relay.reshape(const_2829.astype('float32'), []), relay.reshape(var_2830.astype('float32'), [12, 16, 15]), ), 2)
call_2831 = relay.TupleGetItem(func_753_call(relay.reshape(const_2829.astype('float32'), []), relay.reshape(var_2830.astype('float32'), [12, 16, 15]), ), 2)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_2841 = func_1121_call()
call_2842 = func_1121_call()
output = relay.Tuple([call_2810,call_2812,var_2813,call_2815,call_2828,const_2829,var_2830,call_2841,])
output2 = relay.Tuple([call_2811,call_2814,var_2813,call_2816,call_2831,const_2829,var_2830,call_2842,])
func_2861 = relay.Function([var_2813,var_2830,], output)
mod['func_2861'] = func_2861
mod = relay.transform.InferType()(mod)
mutated_mod['func_2861'] = func_2861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2861_call = mutated_mod.get_global_var('func_2861')
var_2863 = relay.var("var_2863", dtype = "float32", shape = (1232,))#candidate|2863|(1232,)|var|float32
var_2864 = relay.var("var_2864", dtype = "float32", shape = (2880,))#candidate|2864|(2880,)|var|float32
call_2862 = func_2861_call(var_2863,var_2864,)
output = call_2862
func_2865 = relay.Function([var_2863,var_2864,], output)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_2877 = func_1121_call()
call_2878 = func_1121_call()
output = relay.Tuple([call_2877,])
output2 = relay.Tuple([call_2878,])
func_2896 = relay.Function([], output)
mod['func_2896'] = func_2896
mod = relay.transform.InferType()(mod)
output = func_2896()
func_2897 = relay.Function([], output)
mutated_mod['func_2897'] = func_2897
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_2915 = relay.TupleGetItem(func_1467_call(), 0)
call_2916 = relay.TupleGetItem(func_1468_call(), 0)
uop_2918 = relay.asin(call_2915.astype('float32')) # shape=(8, 11, 10)
uop_2920 = relay.asin(call_2916.astype('float32')) # shape=(8, 11, 10)
output = uop_2918
output2 = uop_2920
func_2923 = relay.Function([], output)
mod['func_2923'] = func_2923
mod = relay.transform.InferType()(mod)
mutated_mod['func_2923'] = func_2923
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mutated_mod.get_global_var('func_2923')
call_2924 = func_2923_call()
output = call_2924
func_2925 = relay.Function([], output)
mutated_mod['func_2925'] = func_2925
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2628_call = mod.get_global_var('func_2628')
func_2630_call = mutated_mod.get_global_var('func_2630')
call_2970 = relay.TupleGetItem(func_2628_call(), 2)
call_2971 = relay.TupleGetItem(func_2630_call(), 2)
func_1057_call = mod.get_global_var('func_1057')
func_1064_call = mutated_mod.get_global_var('func_1064')
var_2973 = relay.var("var_2973", dtype = "bool", shape = (1848,))#candidate|2973|(1848,)|var|bool
var_2974 = relay.var("var_2974", dtype = "float32", shape = ())#candidate|2974|()|var|float32
const_2975 = relay.const([5.712795,-7.389912,4.689513,9.348798,-4.591644,-4.389274,-4.040732,6.885009,1.647991,3.794219,0.184753,8.602223,-4.352899,-4.946672,-1.380441,-6.741821,9.815788,1.406128,6.515070,-1.759261,-7.126371,7.506571,-9.173613,8.310876,-9.909942,-1.421215,-2.645975,6.277147,0.287697,-5.758070,1.866824,7.544986,-1.428971,-7.411647,6.287442,1.203007,3.506477,-0.341649,-2.005762,1.660452,1.736681,-3.596789,5.280575,-0.389950,-0.260813,6.354856,-4.251731,-4.320675,1.063559,-8.211391,3.900084,-2.628312,-5.999687,3.400077,-8.417480,2.930867,-6.621739,-8.618709,9.739074,-5.217927,3.039678,-6.558719,9.093874,-5.332583,0.880715,4.452305,4.641809,9.309649,2.600833,-9.750966,-5.837115,0.491187,4.618363,-8.421835,-1.753654,-1.945351,-5.243137,4.050547,-2.965340,8.433154,-8.960723,-5.459889,-7.930100,7.640331,-2.678193,-8.501122,-9.742217,3.989769,2.179816,-8.490729,7.223155,2.432278,5.094170,9.160976,2.228144,7.732155,8.110988,0.369053,-5.933541,2.112684,-4.610559,6.255156,7.669828,-9.918581,-2.247136,9.838700,-4.241914,-6.557463,0.174964,6.805122,-7.136837,6.927583,-7.779168,2.557874,8.368102,-7.652848,-8.454929,-6.424648,-0.388213,-9.624742,-9.612659,-0.205256,1.137369,-1.276675,-9.567242,6.864019,4.215380,2.860476,0.551365,-2.924921,3.337488,-1.081424,-4.435771,-1.435393,4.699126,6.960594,-3.622739,-8.685950,-8.311976,-7.346753,-7.955779,0.537590,-0.761461,-2.113987,-0.426112,8.121831,8.226241,2.691812,-4.555230,-7.459194,8.143906,0.322968,-1.891654,4.290384,1.347022,9.579239,1.227862,3.839726,4.182135,7.812736,-9.557604,-2.973822,-9.789018,8.326057,1.393685,-2.599815,2.646367,-3.749720,-9.000797,2.304578,3.370998,7.821612,7.867769,0.953398,-6.257428,-2.567936,0.725902,-8.707337,6.846939,-2.053354,-8.679544,9.989310,6.539820,4.943245,4.154686,4.628634,7.339413,2.481360,6.705019,-7.618684,8.184281,-8.171825,8.031654,-7.144912,-3.914233,8.998295,1.543624,-4.791259,-0.307411,-3.917329,-4.636559,-9.052067,7.660578,6.719468,-4.269669,-1.839216,-1.142676,-3.162711,-7.011523,-6.819872,-2.326827,9.772831,-7.088890,-4.269874,3.791219,-4.125443,-4.139911,6.169608,-2.690898,-6.066266,-3.465972,-0.667290,5.104128,-4.386110,2.996630,-3.377541,-8.123339,-3.813072,4.680517,1.400434,0.449069,7.672559,1.354352,4.449166,8.915269,-5.335307,7.819495,-2.418331,-4.666955,-0.725309,-1.261743,7.308700,-5.010547,4.897450,-4.150921,-9.937010,7.708200,5.292220,-5.201377,-8.832579,-2.382151,-9.818115,-6.492109,-7.537364,6.496039,-7.143036,0.371818,5.055186,9.184946,1.644245,0.427995,-9.317487,6.544324,5.103124,-1.718768,2.395795,6.074866,-1.452473,0.554247,-0.563095,2.540421,-5.423431,-1.915043,-7.867656,-9.816057,3.394827,3.949232,-8.900777,8.553929,4.420429,-4.195257,-2.242317,-1.716196,8.881197,7.644983,-1.165666,-8.001958,6.332378,-3.256121,2.130479,5.166310,3.835919,-5.033597,-8.122065,5.247182,5.170130,-5.167277,8.059920,0.532891,-9.597854,-5.209708,8.710505,7.288390,6.649680,2.147568,8.957529,7.536536,0.518227,-3.129169,5.869227,8.235894,7.494485,-2.568204,-8.737748,4.484712,-8.894050,-5.871048,7.310936,-7.197742,3.691926,9.023473,5.571835,0.101630,-5.318299,-7.049990,-9.940796,-0.497823,5.379805,-0.819239,-8.926967,1.337211,-0.441307,0.045817,8.342857,-0.802866,4.535278,1.254386,5.105669,3.768229,2.338125,9.563359,-2.717424,8.387522,5.192073,5.921864,-4.832894,-1.281834,-1.452188,-2.398270,-0.755975,7.601424,-4.626974,-5.514120,7.290602,3.906563,3.325303,-5.193737,-7.642617,9.034706,-4.665286,-3.623926,5.810096,1.986427,-9.793263,-4.349252,-4.416444,-5.531387,-3.195965,-7.475364,-8.380177,-2.883369,6.078555,5.905435,1.812707,9.368388,-1.797157,-1.888340,-6.001767,2.467213,8.977954,9.318248,3.906975,-3.351900,-5.938143,-7.935494,-5.629945,-1.534235,1.637807,5.278283,2.338118,-0.801965,-8.554041,2.232594,-4.403155,8.353992,-4.811864,-4.849818,-5.710373,-0.489417,4.588450,-5.467529,8.168350,5.068576,-5.123847,9.383050,7.638741,2.186446,-9.790721,5.710161,-4.632281,-6.651412,8.732542,-7.146978,9.317034,2.746880,5.327092,-7.330957,-9.432830,-9.131540,0.936879,-1.523110,6.392506,-0.794841,8.960019,4.138083,1.149075,-7.265884,-9.636017,-4.451642,0.407094,-2.201149,6.718422,-9.741925,2.620966,3.434979,-0.505384,2.568652,5.379398,-6.106027,6.453517,-6.659867,9.201970,-0.755890,-2.641298,-8.697552,-7.740338,-9.771411,9.404786,0.458177,5.170802,3.646569,5.279270,-9.593401,8.828567,4.608915,-3.567761,2.326560,-2.228258,9.074658,-2.442485,4.007077,-3.224361,2.997685,-2.533374,-3.284939,5.871009,0.927299,4.563902,5.379636,-7.310554,7.657116,2.437353,0.931911,-8.135551,-8.106842,-2.520528,3.655313,6.496942,-9.172434,-6.646650,-3.025122,2.557201,-6.917006,8.239097,2.386096,-0.142868,-0.389443,5.761163,0.924582,-8.801095,-8.253937,2.436022,0.795662,-6.262675,-1.674182,8.666125,-4.653545,0.461925,3.830397,7.421774,-6.960322,0.334269,9.133217,-7.804613,9.367436,-3.921095,9.505706,1.750740,-9.976351,2.594543,-1.500525,8.569404,1.629812,9.906095,7.188389,7.524852,-1.917730,-1.505382,3.476508,8.347680,1.205669,-7.834901,4.140124,-1.755916,-9.113596,5.339326,-4.857185,0.290104,6.731120,-3.176360,0.713460,-6.152944,-6.932395,3.156052,-1.172578,-9.164592,-5.471398,-2.123531,5.548976,-0.596394,-2.868208,-3.607416,-3.461666,-7.595746,2.018507,6.678167,-0.855229,-5.949851,-7.009430,-7.236065,-4.386806,9.401186,-0.031853,1.736300,-3.123082,2.491630,1.099195,6.835373,0.436241,7.466650,-9.228575,-4.926724,-7.611845,5.604355,-0.783214,5.307702,4.310866,-9.417510,7.913758,3.623162,0.255649,-3.468437,-1.083670,-2.098318,-1.189363,-5.994114,-8.521781,5.593407,-7.859952,-3.959774,2.918579,9.366086,-9.170518,-4.879664,5.506281,2.483254,-6.471416,2.253658,3.120185,-4.101341,5.332535,-4.025617,9.786748,1.054161,-4.207747,0.442796,6.231781,-3.764336,-6.982461,5.703679,-8.789058,-2.720560,8.439050,-2.184225,0.533264,-8.030969,0.297566,2.622879,-9.090176,-5.077650,-3.274444,-9.178750,9.085242,0.167536,2.322753,6.190254,6.378000,-4.766605,-6.353051,1.185157,-3.829284,-1.523782,-6.350170,-3.825769,-7.510337,3.973951,-8.009113,9.293774,7.150102,4.524557,5.925669,-3.881017,-8.912578,0.757332,7.093922,6.321746,-6.004777,-9.023575,4.808131,-8.006211,8.397245,-0.593131,4.985946,8.075458,-5.570167,-1.940585,-4.794649,-4.796599,7.983348,6.819618,-6.897067,-0.715211,-5.291042,3.756068,-2.301877,-2.937531,2.809841,5.780258,-0.517275,8.438604,-8.970073,-8.243119,9.794178,6.788324,7.262468,8.138091,5.095893,-5.136959,-9.258380,9.958173,5.203164,8.084353,-5.767763,-3.052693,3.584259,7.941978,6.432535,-3.628531,-1.796203,3.015799,-8.765836,8.740774,5.814450,-7.197318,9.884069,-0.809859,6.655251,-8.213583,-8.470116,-2.850640,-3.330159,9.645387,6.187013,-9.848317,-2.630127,5.717359,5.113195,-6.101408,2.379613,-7.572341,8.539462,2.495008,-3.160956,-1.188426,-4.044299,7.152932,0.349318,-9.744419,-0.809283,-8.000249,7.953460,-0.029283,8.842146,6.715650,5.387822,7.334768,-4.408442,4.738063,-9.020850,9.059939,-4.962498,-1.863787,-5.573645,-0.567625,7.299867,4.679217,1.225905,4.517082,-0.314202,8.519367,3.823634,-1.727657,2.724391,-7.942790,-9.875261,4.796614,-0.760551,-1.008200,-8.284349,-1.960995,7.487250,-5.343011,2.983707,6.378080,-9.115425,6.041441,-9.810893,6.448993,8.063987,5.423755,-5.890535,-0.195294,-8.878410,9.673015,6.352029,1.197837,5.665313,2.687399,0.031110,-6.451414,4.006157,8.750592,-0.294119,-7.313051,3.389899,2.408920,-4.493901,-8.233128,-7.716011,5.597612,5.428678,-0.570365,4.424605,6.391067,0.185102,-9.925562,0.559759,-7.106534,1.319008,3.839454,-1.514144,-4.673749,-8.398509,-9.399456,-9.176960,8.575551,-0.365743,-5.775447,5.164483,-3.512741,5.364796,-8.229779,5.125327,-5.651392,6.237202,2.620444,-9.751545,-3.625831,-8.683880,0.039918,-5.488668,0.117507,8.738620,-0.277461,7.552819,8.095443,-4.171673,-2.926620,-8.116788,-2.718554,-7.880481,1.974921,5.089085,-0.366397,-7.150147,-0.377135,-0.665278,2.912709,9.411071,-0.577557,9.297462,2.558840,4.599207,6.757050,5.215689,3.127086,9.943334,-8.217265,-1.018444,-3.942654,4.293546,-3.815443,-5.813855,7.896192,3.995784,5.054840,2.293757,-2.518297,-7.523079,-1.052626,3.378538,0.486827,-2.515051,4.493928,-9.133119,-6.170987,-7.804601,4.001701,-6.336778,-5.937965,6.669205,-8.678286,3.651472,9.827996,-8.577459,2.816519,-8.455695,-8.157697,-9.276728,0.946309,-5.699921,-4.950771,-5.947336,6.170516,-1.313702,3.543608,1.541424,-4.717606,-9.549835,-9.961685,7.295096,5.622448,0.399170,2.225380,4.354349,-8.726970,-8.211821,2.178294,2.280169,5.594526,-5.639807,1.100491,6.746926,-3.721661,1.773347,-0.287289,-5.713254,-1.551873,-2.199095,-8.008902,3.403258,2.667789,0.762674,-1.070608,2.112183,8.790807,-3.900459,-4.280791,-0.950613,-2.620464,7.500067,2.134250,-2.088711,9.932641,9.744618,-4.728455,5.776252,-0.026989,-7.710464,3.508683,-7.754008,-9.574927,3.621765,-3.592752,0.792494,0.832571,-0.435733,0.875960,9.841790,9.556277,-4.487125,9.701775,4.868919,-4.385182,-8.241932,3.914962,-6.462275,-6.051806,-0.210908,-3.613152,4.412493,3.946160,-2.758754,-9.930164,5.963354,-4.437248,6.340530,8.390724,5.196129,3.534602,5.365387,-4.230480,-2.943113,6.815127,-2.335240,-6.297174,-3.039846,9.165322,-0.772445,-4.777976,0.401039,9.947926,-7.594978,8.820842,6.824068,6.078945,4.061076,-0.756145,-9.173147,2.985342,5.576690,-7.947056,9.261636,-4.699734,3.708314,2.320936,2.339246,-0.127874,-7.302696,5.536510,-6.920647,-1.484446,2.295322,5.622203,3.686391,-3.389860,-1.223883,-3.467883,-1.353143,-2.900689,0.607397,-8.617060,-1.915903,-8.262708,-1.337981,-2.568483,-9.430518,-9.318550,-5.117994,-1.012865,-0.061033,-2.281745,5.725116,-3.756445,-5.547044,-1.989964,6.175311,-7.665113,1.798539,-3.653064,3.639097,-1.803349,9.224327,6.148350,-3.114760,7.754223,-6.913529,1.775880,-8.596025,4.314510,-3.123795,-8.855191,-6.170349,-8.787841,6.618101,4.429444,8.695669,1.298558,-7.538244,-7.021488,-0.137939,-3.887818,-3.191346,-0.755454,4.060368,9.906891,4.456418,1.047955,-5.553390,5.615292,-9.447408,-1.031495,-2.929354,1.024544,-4.804261,6.244328,5.368047,6.469839,-9.327801,9.448501,7.379204,2.287208,-9.539900,-0.989552,-5.694343,7.046322,-6.837107,1.352940,2.657208,-2.909772,-8.733381,-1.085172,3.123153,1.498871,5.583121,8.751619,0.601623,-8.175944,-9.125001,0.763934,-9.739650,7.766236,-6.122970,-7.879308,5.437568,-5.783285,-3.685869,-5.103446,-2.761884,7.475203,-2.635430,9.999141,-5.223165,9.430839,-1.783146,9.071521,0.500588,-5.732863,1.161986,7.186257,8.281002,2.561756,-9.272305,5.043639,6.375432,4.182771,2.686215,-4.452850,-9.057418,-9.984797,-6.961727,6.826722,9.187445,4.137645,-2.862663,5.629859,-9.088699,-3.794804,-4.823335,-5.485014,-5.126168,6.603845,-6.610263,7.000013,-0.186986,7.357102,-4.443730,-7.274861,-7.877628,-2.938824,4.776818,-1.218353,-4.965745,-2.626818,-2.122670,2.029096,-8.300467,9.622672,-7.672162,7.373005,-7.156836,4.633939,-7.414795,-2.716836,4.495112,7.902764,9.882371,5.099741,-0.776926,-2.308007,-4.438937,-4.856237,5.675073,7.355468,-3.481848,-2.945757,2.353422,1.918787,3.885007,7.362873,9.272369,0.183143,-6.133279,-6.297611,9.536934,-5.803674,-9.302935,-9.539924,-2.149987,2.721984,6.106341,9.285400,9.639989,-6.098192,6.218102,-8.810471,-3.213567,3.823967,-0.805657,-9.498409,-2.302000,4.602341,1.966254,-9.734237,9.985275,-3.753270,3.303388,6.895297,6.858502,-1.332784,5.363891,1.778188,-8.232019,7.975544,-0.921980,-8.026245,-3.797929,-5.236480,-9.861542,7.837170,-9.519390,-6.339349,8.850020,3.161865,9.355886,4.545645,-4.051244,-6.323085,3.071323,3.416539,9.464195,6.283755,9.577302,4.468886,-7.954368,2.062167,4.278130,7.027593,1.364209,3.042279,-3.194242,-9.606523,0.801435,5.451082,-6.687539,-4.196633,9.785081,3.885985,2.396166,-9.470063,2.158221,0.101338,9.560398,6.597164,6.927425,7.497392,-3.026443,-3.948841,-5.073683,-6.321576,-7.868143,9.653198,-5.632593,-2.270303,1.058340,-2.974207,-9.319350,4.434418,-8.268682,-4.169423,3.678221,2.735468,1.494402,6.433961,0.992367,-7.257798,2.722456,6.048122,-7.366692,3.185970,-2.411113,-0.682560,0.458211,-0.490202,5.022576,4.743323,-2.966504,-2.537219,-7.010697,-8.464725,3.654585,7.922671,-3.982497,5.021954,-7.932555,-0.454538,-4.716279,6.802206,4.723511,8.658983,4.198755,6.285690,6.473785,6.062622,-3.554352,4.456202,9.201741,-2.252243,-4.190044,-8.517470,-5.453015,0.562777,-5.533304,0.643276,9.824418,-3.862793,4.533586,-9.344823,7.454313,0.678762,4.826456,2.260235,3.813635,-9.592899,5.860035,3.076492,-1.930977,-1.661897,1.325656,-4.559960,-4.606479,0.313344,-3.337085,-9.769211,-9.022648,5.609684,5.888432,-1.900379,-9.502418,-1.904007,9.004191,-1.359270,-5.633152,-6.524049,-6.329913,-1.322287,1.956799,-2.320369,-2.137201,4.737394,-1.735202,-1.891182,-6.881138,9.215218,-4.407343,-0.946842,1.737813,2.396696,-8.914333,0.622073,-7.614533,0.458929,-0.883441,0.278578,8.665326,0.202485,-0.725294,9.763701,-8.164697,3.493220,-1.925080,-0.387691,-2.894179,9.113165,-3.994557,8.159066,6.491792,-7.038121,8.348823,-1.351197,7.833909,-2.849437,7.692182,-9.687241,-5.421491,-2.775634,7.318412,-2.523977,-0.699152,-1.413784,9.531719,9.235715,9.918414,-9.497130,-4.031521,6.469749,-1.344384,7.489941,1.937108,9.040560,2.219065,-8.794322,-0.782734,4.616118,-7.979204,2.125091,0.086229,-0.972672,3.078343,3.337770,5.944926,3.164989,3.447778,-9.164499,-8.959937,-3.404022,1.088933,-6.769385,-5.626806,4.708168,-7.296476,-6.588440,5.063020,-2.258181,5.132963,-7.675937,-9.572459,-0.275926,-2.120204,-2.569869,-9.114989,7.599209,3.668925,6.426721,6.268287,-9.107768,-6.494345,8.287878,-2.381841,-7.838920,-6.706702,-6.403752,-4.918949,-7.334980,4.394691,2.644090,4.612211,-4.266455,-7.196684,-6.253706,-8.774398,0.470239,9.885109,-9.749354,-8.866583,5.392877,-0.382777,0.736255,-2.009099,1.559572,-1.786973,6.296049,0.150030,-8.850521,-9.424343,7.860472,-5.630622,8.097096,-1.335678,5.648999,-4.288565,7.219999,-2.623259,1.757571,-5.707220,8.034015,1.136209,-4.329155,-1.819423,-5.088987,-0.336118,4.626600,3.929740,-6.508324,-5.860851,-8.766077,6.124231,4.923486,8.878667,-0.367458,-4.574918,-8.983022,2.955752,-4.275060,-4.144399,-1.819518,0.392490,6.704046,-7.910033,-0.823151,6.877158,5.275562,-3.454118,-0.820598,2.945278,3.041800,-1.241989,2.995656,-3.760515,1.546217,-3.777897,8.872874,3.562680,-7.021577,6.796819,5.556120,-8.261842,4.166151,7.258722,-0.057489,-4.936806,-5.878159,5.471090,-2.370400,-3.746164,-1.309227,0.980965,-7.209678,-4.001797,-5.863621,9.656814,-4.961344,-3.143901,-9.766639,-9.371633,-1.651109,-6.869530,7.050366,-9.776966,2.031839,-3.033012,-8.851834,-1.290904,-2.585578,5.680198,-0.595374,-8.062765,-7.478985,-0.284287,3.661045,1.297619,0.274771,-3.156851,-5.809261,8.220820,7.515185,1.269210,2.618844,-4.963417,9.645391,2.211820,-7.121835,-6.049099,-0.934480,4.767431,5.921212,-6.740257,-4.122294,-2.238766,7.815751,8.649005,6.296126,-5.531173,-2.779374,-6.624242,3.107165,8.683474,-4.110403,-8.746276,-8.265384,-6.416624,7.864550,-5.337493,0.107340,-0.046344,-5.565494,-3.785165,-7.829704,9.172127,4.237891,-9.399851,3.475636,5.918131,-5.199242,-9.210920,2.494690,-7.574976,3.267581,7.854335,5.749813,-1.664407,6.548367,9.875616,8.018875,-4.701595,1.383680,7.803765,-2.614941,-5.450863,2.459876,1.254734,2.005507,9.177981,-3.853144,7.588653,-7.770315,-9.366242,-2.707522,5.465055,-6.545549,6.216511,4.932618,-6.645503,8.269004,-7.483328,1.597286,6.645653,4.558512,-7.122453,1.645731,-9.638018,9.961180,1.027267,-2.232388,6.290779,-6.152279,-0.941748,-6.226969,3.107711,5.880937,-6.497194,7.717445,5.798674,-9.453656,0.577619,-1.611953,6.541583,-0.114671,9.431783,9.840182,6.680491,1.134367,6.046181,-0.375087,4.101662,-8.872044,-7.156794,-8.326127,2.932895,5.646157,-0.778398,-5.678958,4.502626,5.756225,2.179239,-2.702796,-2.273344,2.138922,2.399193,8.591143,4.974314,-9.552569,1.000533,-2.657214,0.238751,7.113121,4.695138,6.262055,-6.862638,1.210048,6.140938,-8.601557,-7.442060,-3.831190,0.061534,-6.541493,7.295775,8.059122,4.032588,9.385457,9.816191,5.007848,-2.305757,-8.605486,0.588531,2.055892,6.836669,-5.661784,6.941325,2.424084,-6.024189,6.972524,-3.880128,1.123075,-2.457258,-3.276845,2.984048,-8.684011,-0.073100,9.707651,2.972783,-8.659116,-2.713178,-5.356395,2.856255,2.493294,7.250014,-2.478142,1.908429,-3.559129,-4.220455,6.886509,-8.658189,-9.878425,-3.000947,-8.670198,-4.329349,-8.959663,7.260161,-1.006788,-9.401057,8.575366,-4.772367,9.040311,5.300815,-5.396448,-0.138479,0.153183,9.788024,1.141559,4.292587,9.032489,2.834303,6.309989,-4.333314,8.249368,1.529022,9.777078,-1.131371,8.236853,-9.534021,-7.658310,7.637819,0.615169,8.428472,2.068191,-0.342611,-5.164224,-5.936239,-1.645307,8.705400,-6.589375,-7.498079,-2.069114,-5.980549,-9.876738,7.633730,-2.779052,8.936374,-0.491478,-7.816932,5.821796,-8.600338,-6.350516,7.426488,-0.051030,1.210402,6.095633,-4.787789,-3.274169,7.043715,2.382226,9.231184,-8.571847,4.196129,9.679517,-6.168067,-2.194742,-1.292728,7.860083,5.884073,-5.500327,-0.133878,6.464082,-7.836657,-0.974345,-5.485757,-8.382158,0.328375,-0.882782,2.693073,-8.716408,6.294131,4.684318,-9.179143,9.425221,-3.665269,-5.873767,-9.150172,1.760150,1.004868,-6.395646,0.461110,-6.197664,0.303672,7.666032,-6.461393,-9.519034,-3.601498,-0.147716,6.604006,-0.008825,1.770811,-8.390769,-4.781785,-8.259439,8.388782,-2.295150,-8.653371,8.185382,8.431775,-6.109046,6.140503,2.001822,-3.998440,-9.863868,-6.576190,4.632762,1.914034,3.895467,6.988447,0.055150,-9.850437,6.327945,-2.360084,7.474434,5.110599,-8.655020,-2.563842,-3.459722,3.818053,-3.477728,-5.290219,5.877646,-3.857115,2.596255,8.841245,-6.544188,-5.809836,-5.607074,0.637450,3.859220,8.071112,1.203847,9.289648,7.661432,-6.360573,-3.651316,5.811109,-5.939132,-0.044115,-4.569581,-9.282896,-7.751247,-8.791149,-3.848295,-6.530558,1.065498,6.806211,0.356996,-3.310141,5.012953,0.116721,6.776017,5.528733,-1.672548,-0.724420,8.930918,3.886710,3.885485,-4.254012,6.241161,9.202001,5.475976,3.102943,-3.750257,3.788910,-6.435235,3.564000,5.106402,7.142341,8.886521,-4.528737,2.097061,-6.469399,-7.967787,-5.259103,5.312817,-2.538901,-2.200225,7.805842,4.943524,-7.508718,2.635125,-8.699871,-7.689845,-1.702317,9.377938,9.558208,2.669622,3.127613,-8.125628,1.772767,-5.708437,-9.894520,-4.894649,8.058051,-2.965727,6.060847,4.460063,6.919358,-6.132725,5.712850,-1.740457,-9.728752,-9.289774,4.748858,4.158690,-4.399769,-4.469056,-4.255232,6.480139,9.322705,0.875866,1.854669,-7.360182,-0.399358,7.925386,-8.318080,-7.003875,1.744902,-0.225001,-5.598807,1.873962,6.223654,8.762012,-5.262619,5.809963,5.035465,8.455238,-9.363382,4.396751,-7.973249,-4.451527,-4.653435,4.409143,-5.865869,6.888779,5.648489,6.101194,-6.224866,-2.749860,2.798423,-3.768791,-3.708583,-2.426229,6.149462,8.773121,-7.218363,-7.378990,2.032409,-2.881002,-7.816179,-1.682670,-5.872765,-4.650924,-0.831660,-7.022598,1.348925,-7.198104,-2.903530,-2.898885,-4.720655,7.921853,3.906045,-7.925323,2.395462,-4.664861,-0.688937,2.860295,2.936042,2.651732,-5.149710,4.846563,0.454753,1.140325,-8.357680,1.725002,0.729566,8.618212,9.836768,8.913246,-6.130293,-1.766916,-2.154918,-3.807551,8.101774,-2.051011,2.776946,1.340300,7.532142,-3.022597,-5.038106,1.225808,-4.662235,6.975358,-3.485400,-1.715915,-3.166433,3.911130,-2.420590,-9.714317,7.661220,1.793918,4.660652,0.375590,3.800567,-4.458127,-3.976951,4.662640,8.271503,-1.975157,-6.532413,-2.244755,6.575597,9.230119,2.192335,6.313209,-3.914334,2.034356,-9.439196,7.489507,-8.475674,8.845323,3.944036,3.070310,8.458218,-3.544579,-9.463130,6.425830,-1.774649,8.666645,-6.019604,-8.381417,8.494004,-5.254901,0.441556,9.425860,-3.133961,-3.676389,-5.923425,-4.680706,3.419295,3.503878,1.713845,5.833046,5.817557,-6.676185,4.932004,9.856726,-1.105924,-8.314978,6.051733,-5.400193,2.406037,8.813765,-3.147320,8.109526,-5.793478,-3.854748,3.432428,6.026722,-0.984596,4.795871,-5.144348,4.633688,-4.692932,-0.622098,8.790234,0.175725,7.243094,-0.757718,-9.270481,0.035660,-0.656480,7.153028,8.105383,6.049442,-9.003819,-2.256862,8.459230,5.182172,7.428079,2.684580,-7.714632,4.106531,9.482428,-8.008025,-2.287010,-5.726597,9.054132,-6.441401,-9.459931,-5.618049,-0.132579,5.282048,-2.753762,-7.429188,2.641430,3.201497,-7.674309,1.387497,-1.871343,-8.189423,-9.373693,-8.871259,-3.657243,-1.297596,-3.321005,9.825426,0.878047,-7.074792,2.011283,-5.093667,-5.183778,8.758205,-1.018228,-2.417768,-0.792411,1.451911,0.318908,-3.928939,9.113029,-4.596993,9.500474,-1.545104,-1.384342,3.312968,1.933779,-1.502937,5.954646,9.565507,5.420234,-9.088761,-9.228373,-1.929837,2.522327,5.523853,6.041482,-7.562536,9.643391,-3.500241,2.127552,1.748967,8.543280,-2.242487,5.744165,-7.368314,0.785265,-9.795233,8.317111,2.262395,0.872340,6.716917,-3.427080,-1.123605,-3.692205,-3.969073,-2.992799,9.436418,7.724905,-2.771349,7.070745,3.862960,1.590391,-7.569316,-7.833736,-2.159861,-8.478025,0.342131,4.101602,-6.987177,-2.434815,-7.599471,-1.952373,-3.938538,4.017722,5.850874,2.427206,-2.807582,-1.808182,4.890980,-6.679994,6.182336,2.596220,-5.340830,-4.490477,0.329331,9.621975,4.254836,3.652120,0.773471,-3.051398,9.388409,-7.593827,-1.086682,-2.099858,4.481237,1.137385,4.017975,7.955538,-0.074750,-0.658700,-1.958461,7.752951,8.220367,0.786832,6.776934,6.455570,-3.908713,-2.523817,1.693811,-9.248954,-4.307341,3.815837,1.498817,0.513658,-6.392958,8.186500,8.308138,-3.689564,8.406373,7.778641,2.047081,4.139957,-5.353990,-5.539187,-0.915475,8.167354,0.859599,-2.524147,9.039294,-2.939601,7.882486,5.440469,-3.953593,4.951417,3.157711,-0.890387,-1.707203,-8.269412,-2.753244,-6.769339,-2.670099,0.331967,-4.325290,-4.394067,2.382949,3.139679,-5.238966,9.351554,-4.589031,-8.331228,1.358554,-5.550921,-0.618505,0.567756,6.593453,3.915695,3.880512,3.388026,-7.059079,8.712506,-9.964119,-5.227164,8.828824,8.260853,-9.750264,-3.107111,5.834604,9.236108,6.004094,-7.992952,-6.613438,-8.780589,-1.103976,4.487961,5.645820,-7.636551,4.193945,-9.544656,-9.831511,-5.675783,3.909827,-8.446404,2.030936,-6.787835,-4.334509,-6.087543,-8.810516,-4.941369,-1.048899,7.229707,2.327733,-3.042753,-5.372529,6.554846,-0.198061,-0.693555,-3.002858,-0.457634,-1.991535,9.159705,8.758054,-4.730686,-0.542257,-1.128931,-7.369107,0.324058,0.539038,0.319417,-8.158561,-9.950521,-6.302262,8.757684,-2.963569,3.958735,-6.870245,6.742220,-1.279096,-0.830256,2.606469,4.212696,-4.322094,0.007763,-2.462817,-0.953570,3.696084,-8.052381,9.721132,2.144454,9.423095,-3.688392,4.975369,-4.117636,0.242958,-5.822065,9.827161,4.876610,-6.039369,-1.039203,8.084616,-7.047684,7.108493,-9.977269,-4.918773,-6.716964,-5.645008,4.892699,3.185618,9.786580,-8.667333,8.827729,-4.078719,-7.455057,5.798080,5.121633,8.971004,1.237205,-1.593360,5.830857,2.048259,3.701665,-7.667558,1.354835,-9.052292,3.631191,5.267062,-1.811840,1.259994,-0.311821,6.424227,1.895147,6.748146,-4.286986,-3.758744,-8.407960,8.087429,-0.071066,3.387105,2.621205,-2.695763,-8.834347,2.844273,3.600400,8.076706,8.588718,-1.602962,2.385170,-9.670866,2.544738,8.112324,-8.996889,4.681121,5.757631,9.981378,-6.548637,2.077298,7.693146,-0.119497,8.312703,-8.670134,-9.630767,5.285082,3.150024,6.213287,-1.845314,-0.173650,-0.609868,1.824668,-2.629800,-4.142382,4.409569,-3.323433,4.448181,4.990651,-1.285027,1.287942,-4.736650,8.809390,-4.558899,7.032395,4.731793,-4.142332,6.832919,4.483595,-5.483150,2.528933,9.706318,-4.538006,-8.209293,1.181601,6.989889,5.023334,9.723520,4.615446,-0.757723,3.859315,2.975291,3.511040,7.628071,-5.697927,-5.757086,3.985218,2.681138,-8.818892,-1.604248,1.171585,2.597435,4.338164,7.038599,-1.186672,2.491276,9.013246,7.901177,-8.082048,-2.209488,-1.958014,-7.697765,-7.848192,4.287083,3.568464,2.356780,-5.820458,3.212476,3.001526,-2.749004,-4.221325,4.492077,-3.683093,-4.477103,-1.304325,-4.973819,-5.747809,-8.634915,-3.502174,8.989679,5.988888,-1.910817,8.524539,-1.785587,-9.361598,8.533553,-2.691515,2.967775,8.016210,4.992343,-8.142549,7.474692,-8.528655,3.545644,2.493506,-0.657135,3.274289,-2.353789,1.453040,-6.535949,-9.135397,-4.593703,-7.397628,6.024356,-7.492518,5.222577,-4.495587,2.222067,1.617160,-9.746798,6.687216,8.752803,8.232968,-7.146889,-6.221183,8.904432,-0.669429,-2.660732,2.414703,-8.984873,-1.315254,-4.001817,-9.782741,-7.511594,-8.953526,6.489403,4.819121,1.231370,-4.219423,5.540710,-0.213240,7.092676,4.557977,6.530147,-7.992247,-2.369100,-6.008318,0.091896,-1.523536,-9.234336,-9.855679,-8.137480,-4.479530,1.017400,2.965142,-6.174484,0.082453,-7.607258,6.319656,1.007842,-8.464614,-4.402643,-1.310854,5.514610,6.840205,2.847048,6.656819,-7.590738,4.872064,3.398074,-7.804336,-3.778714,9.810871,-1.105530,9.279960,-4.203779,1.736961,-3.063984,6.008327,-3.144606,7.797735,-7.329362,-1.767812,-9.691213,-0.689482,-3.105509,3.654858,-9.458100,-8.902904,0.602496,-6.353151,9.041413,9.466940,2.634906,7.636403,9.893306,-6.534655,-0.210760,-4.884563,-7.655634,-4.095073,-0.963363,-5.094324,-2.663168,7.271654,-3.585802,-9.464934,-9.037472,5.100351,-8.725696,1.095569,0.025449,7.146404,-5.390676,-7.383147,2.796682,-0.690777,1.386421,-2.197429,8.706593,7.217402,-0.067159,5.912280,3.278593,-6.855680,9.155557,-4.235356,6.395039,-7.023815,4.389245,3.941893,0.091569,-4.375326,-3.088071,7.318106,5.944187,6.260950,-7.275643,-3.789965,4.851614,8.898894,-2.853447,0.647686,7.212501,-1.643597,-6.426396,9.784312,3.795647,-7.215148,3.776357,3.503426,6.220261,-2.756125,1.164740,9.552493,2.534709,2.110322,-3.537246,-1.987943,9.708004,8.235844,-2.299807,4.581162,-6.532465,7.359625,7.408400,-6.013372,1.338429,-3.593409,1.434881,9.243792,-2.656795,3.303811,3.613972,8.975010,-0.600610,-6.330348,5.028436,-6.224928,-4.995651,0.003477,-0.159982,-3.001053,-1.807374,-9.452981,-4.133270,6.404594,-3.597820,-9.704472,-1.076712,-6.236545,-5.849795,1.685080,3.851615,3.798653,8.907839,3.812593,3.726089,1.760958,2.780424,5.731218,5.095365,-8.649603,2.324572,2.098089,-6.752987,-3.442736,-3.210698,5.077800,9.878338,1.804835,9.678327,-1.165339,-9.266930,6.067333,1.194568,-8.637793,4.958460,1.485354,8.010724,-5.758357,-0.635869,-1.173926,-2.649429,-8.393372,-0.407012,-1.757313,3.445687,-6.884918,-6.181173,0.140524,6.234036,-3.688442,-0.846830,3.752531,-3.460744,-4.397863,2.761993,1.679072,-6.390756,9.261124,-9.619303,-0.995607,3.098785,2.351412,-8.547655,6.424786,-8.046457,-9.553526,0.043607,-4.238522,7.322316,9.341090,8.074115,-0.265525,-5.583046,4.098460,7.333641,-6.859267,-9.002231,-6.257922,-2.500917,-2.839840,1.511699,-5.544016,3.110890,-6.485049,9.419855,8.901389,7.045285,-7.837210,3.416178,-0.493622,9.215523,1.424678,-3.886999,6.183727,-8.123526,-1.825022,-8.724818,-6.344618,5.885751,5.423585,-8.563392,-7.680357,-3.874685,-8.432232,-1.272052,3.463312,5.493216,2.089071,-1.673236,1.618905,9.141148,5.385236,-9.346512,2.540905,-0.796227,-2.358629,7.589719,-8.060756,0.146411,6.207687,4.992015,3.402289,-0.463226,1.060773,6.139860,7.595656,-8.034572,4.550960,-5.191363,-5.779092,6.827098,-0.998758,3.407991,-7.275502,5.846547,-6.893171,-9.401509,1.004759,1.415265,-5.813148,7.217917,3.771759,-4.548353,-1.249883,0.045909,1.093504,5.237738,0.263277,9.168330,7.495801,2.665541,1.388911,-8.397308,-8.879653,7.601232,-9.221233,-5.471345,-6.456189,-7.430024,-2.977169,-8.423729,-6.008292,7.746608,-2.149874,-2.593872,9.796973,-4.993397,3.961421,4.527426,-6.178268,-5.699058,-9.601090,-8.463274,0.556106,5.021146,-0.851640,-7.799669,-9.681241,-9.904669,-1.533344,-9.152203,-3.812095,-9.525730,5.100135,-4.761380,6.236838,4.528920,9.725448,-5.800079,-9.017488,-7.779041,7.121055,-8.053298,-6.845863,6.173407,3.292414,-0.729637,-2.911593,9.963446,3.678194,6.190451,2.319144,-9.563506,-5.517020,4.915482,-2.912589,1.621721,-6.801352,5.848017,-9.830662,5.011422,6.012566,8.659291,2.223475,8.609192,-2.650635,3.415077,4.533765,2.476190,-4.623490], dtype = "float32")#candidate|2975|(2880,)|const|float32
const_2976 = relay.const([[-4.655353,-6.245264,5.317184,-3.218514,1.341094,-3.940506,-5.237750,0.580298,-0.777665,-5.121782,-2.595599,6.919629,2.028536,-0.248666,0.769157,-6.356706,-1.694030,-5.701930,8.025056,-5.152727,-5.722953,4.275498,8.227133,-7.070544,2.993366,7.081137,-6.911126,-3.362236,5.300023,6.010510,-3.199194,-2.637127,-4.925468,-1.447085,1.916598,1.048634,3.536227,8.062060,8.287079,-5.864821,-3.001566,0.228640],[-1.796217,-1.486327,-7.464476,-0.748448,-5.477454,6.689968,2.100073,-7.337436,4.238929,5.504357,-4.012158,4.402843,-6.825735,-1.585488,6.374571,1.337460,4.286130,-9.168904,7.451859,8.223505,0.863907,6.669026,-0.339983,-2.515327,7.455255,3.518543,-3.907380,7.301950,-0.710472,8.791751,3.925433,-2.189627,3.135703,-8.698918,6.683951,-7.573618,9.032689,-7.052832,0.896617,4.909069,-4.532132,-7.511699],[6.119448,0.200921,8.185024,3.653250,2.803993,5.658093,-7.991106,5.098699,5.390780,8.130309,1.939448,7.338944,-1.310435,7.701273,2.817696,4.082222,-1.886415,-6.917107,5.505157,-3.648837,3.603360,1.532065,-6.563621,-7.321605,-0.906766,-6.940229,3.167295,-0.194563,-6.386134,-3.673863,0.496632,-0.999263,-0.392645,3.034029,-7.118863,-2.154563,-8.650047,-8.345855,-0.139431,-7.636455,-9.231946,2.005409],[-6.602962,2.074983,7.507219,-3.788311,3.531945,-9.889127,-0.717228,3.379250,-0.395979,-3.256790,-5.466852,2.189809,6.464922,1.840059,-6.063615,3.569041,2.346961,5.174527,-6.220537,7.267498,-6.787827,7.661023,-0.497946,3.122087,-2.294247,9.447863,-6.902628,-1.424339,-8.184728,3.254928,-7.364435,-8.507000,8.204639,-1.745932,7.144001,7.256362,-2.911222,-6.134733,-3.227082,0.139199,-5.731822,4.764355],[7.981128,-5.425107,7.782457,-4.903702,1.004207,5.719168,-1.570758,-4.154989,-8.604546,9.417365,5.960055,8.774639,0.790704,-1.387711,7.327021,9.251343,0.412932,-7.686590,8.537708,-9.159590,5.329248,-6.517595,-7.641804,-2.277053,-7.585232,3.062010,0.211914,4.461585,3.796516,-7.779842,0.616383,5.716383,-2.823109,-5.595487,-2.212386,-8.619991,-3.876446,6.539834,2.182323,5.358980,9.916507,0.589092]], dtype = "float64")#candidate|2976|(5, 42)|const|float64
const_2977 = relay.const([5,9,-9,7,-5,-8,4,-1,2,8,6,-2,3,6,1,7,-7,10,-7,6,7,-6,-1,1,-1,-3,10,-5,3,6,-1,2,1,6,10,-1,5,-7,4,-10,-6,2,-10,-6,10,-7,-6,1,-2,5,-8,-6,-2,7,-10,3,-2,9,-1,7,10,2,-4,3,-9,-7,-5,-8,-5,-6,-6,8,-5,-1,5,-8,1,-10,5,10,-4,-1,-9,9,-5,-8,6,-8,6,-7,-7,-5,9,3,1,-7,10,7,8,5,2,4,-9,9,4,-6,3,9,-7,5,8,4,-2,9,-8,3,6,-10,-2,10,-6,-6,10,-10,-8,6,9,-3,-2,2,5,-1,-5,-7,1,2,8,6,-3,-4,3,6,9,-4,-10,-4,-2,-9,8,-3,-7,-8,-4,10,3,10], dtype = "int32")#candidate|2977|(156,)|const|int32
call_2972 = relay.TupleGetItem(func_1057_call(relay.reshape(var_2973.astype('bool'), [11, 12, 14]), relay.reshape(var_2973.astype('bool'), [11, 12, 14]), relay.reshape(var_2974.astype('float32'), []), relay.reshape(const_2975.astype('float32'), [1, 2880]), relay.reshape(const_2976.astype('float64'), [210,]), relay.reshape(const_2977.astype('int32'), [156,]), ), 7)
call_2978 = relay.TupleGetItem(func_1064_call(relay.reshape(var_2973.astype('bool'), [11, 12, 14]), relay.reshape(var_2973.astype('bool'), [11, 12, 14]), relay.reshape(var_2974.astype('float32'), []), relay.reshape(const_2975.astype('float32'), [1, 2880]), relay.reshape(const_2976.astype('float64'), [210,]), relay.reshape(const_2977.astype('int32'), [156,]), ), 7)
output = relay.Tuple([call_2970,call_2972,var_2973,var_2974,const_2975,const_2976,const_2977,])
output2 = relay.Tuple([call_2971,call_2978,var_2973,var_2974,const_2975,const_2976,const_2977,])
func_2979 = relay.Function([var_2973,var_2974,], output)
mod['func_2979'] = func_2979
mod = relay.transform.InferType()(mod)
var_2980 = relay.var("var_2980", dtype = "bool", shape = (1848,))#candidate|2980|(1848,)|var|bool
var_2981 = relay.var("var_2981", dtype = "float32", shape = ())#candidate|2981|()|var|float32
output = func_2979(var_2980,var_2981,)
func_2982 = relay.Function([var_2980,var_2981,], output)
mutated_mod['func_2982'] = func_2982
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_2998 = func_2923_call()
call_2999 = func_2923_call()
output = relay.Tuple([call_2998,])
output2 = relay.Tuple([call_2999,])
func_3026 = relay.Function([], output)
mod['func_3026'] = func_3026
mod = relay.transform.InferType()(mod)
output = func_3026()
func_3027 = relay.Function([], output)
mutated_mod['func_3027'] = func_3027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1429_call = mod.get_global_var('func_1429')
func_1430_call = mutated_mod.get_global_var('func_1430')
call_3038 = relay.TupleGetItem(func_1429_call(), 0)
call_3039 = relay.TupleGetItem(func_1430_call(), 0)
output = relay.Tuple([call_3038,])
output2 = relay.Tuple([call_3039,])
func_3058 = relay.Function([], output)
mod['func_3058'] = func_3058
mod = relay.transform.InferType()(mod)
output = func_3058()
func_3059 = relay.Function([], output)
mutated_mod['func_3059'] = func_3059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_3063 = func_2097_call()
call_3064 = func_2097_call()
const_3088 = relay.const([[[3.027308,-3.766417,-0.233015,1.727729,1.244756,-3.800029,-0.336380,-3.873065,-7.444005,-9.179636],[2.562332,7.051219,-9.829075,-3.984637,-2.392266,-6.301236,3.146941,3.817931,4.856795,4.199099],[-3.842105,-1.048860,-5.824782,-1.166121,4.944530,-8.335890,-5.410573,9.449115,2.817890,-7.917050],[0.069838,5.272170,-5.189036,-3.663503,0.247178,-9.303783,-7.740386,-0.898103,8.312210,7.332332],[5.918376,-7.754877,3.550845,0.679837,4.627304,-4.648249,-9.862239,2.133595,8.349968,-0.613357],[8.178183,-2.868259,-2.512886,-8.623281,-5.405053,-3.271153,-9.150641,7.179107,9.692092,-9.864741],[-7.670245,2.995944,-4.431943,2.761326,1.473572,-4.113338,-1.144931,-6.305625,0.636220,5.492889],[-8.434626,-2.693817,-2.965345,5.621632,-4.105591,-0.889626,-2.990960,6.932381,-2.559398,-0.178062],[-2.972830,5.099873,-8.419736,1.866820,-7.570121,9.087009,8.346922,4.216573,7.571032,5.625219],[-9.640537,-3.778111,9.799724,5.421454,8.697751,2.142040,-0.556763,-2.651148,-0.313657,2.474604],[-9.099405,-3.412204,-9.982408,2.058965,-8.252824,1.182267,-6.371771,0.658945,7.119496,-1.360867]],[[8.430811,-5.134508,-6.438383,-7.695994,0.351187,1.662572,-7.698175,9.024321,-3.882323,-7.240335],[3.736222,7.981877,4.893299,4.515492,-8.021782,8.101445,-3.815529,8.684978,5.957567,1.294036],[5.060823,-5.665133,-1.292247,-6.024668,0.303389,1.026413,-7.894045,-5.618806,-1.867145,-3.545683],[1.283638,-9.110936,-5.254193,-8.923815,2.084117,-6.981554,6.329843,-6.466577,-8.701796,-4.885767],[4.582924,-6.215162,-5.238042,4.080870,-5.887881,2.775812,-7.636609,2.935282,-4.526870,-6.890994],[-4.262844,-7.932490,9.643174,7.733670,-3.393443,9.478159,-2.168726,8.496585,6.877863,0.211490],[7.919641,1.065203,-7.579909,-6.652278,6.415346,-9.058864,1.681557,5.874099,4.654159,-8.573543],[-5.440756,8.014837,0.277517,5.363663,5.360508,-1.410211,-1.965244,-0.344382,1.920063,3.720518],[7.309948,-3.504089,-7.173151,-1.550797,-2.457370,2.599056,-5.779990,9.192928,-9.162226,-3.976261],[2.264906,-3.976873,6.700853,-0.423394,2.990863,8.626448,2.430531,4.619450,0.883446,6.731499],[-3.995389,-9.040638,7.911553,-4.322213,-9.394916,-9.419227,5.843659,8.725926,2.915982,1.394444]],[[5.627481,-4.142463,-6.744381,5.318684,6.591562,-4.845198,8.705275,-5.244314,-5.142381,-9.445375],[-6.408345,1.780871,0.869519,-9.934676,-3.048236,0.838102,-8.847981,6.396906,5.424489,-6.256814],[4.017929,-7.530532,1.426187,-3.410047,7.356853,-0.868479,8.268542,-2.102941,4.959263,2.414099],[-9.461831,0.152332,-6.208581,-4.517736,7.426599,-8.881941,7.358131,-4.313966,-2.878375,-4.484025],[7.310674,7.194509,-8.261855,-3.385521,-8.743519,-0.907645,-0.153405,1.023130,-8.440513,8.541984],[-1.214313,-0.963542,-5.559298,-6.156654,3.174932,2.642773,6.341932,8.727951,-7.134121,4.719659],[-1.988588,2.990091,-0.569467,3.270984,-2.933385,-8.662963,5.599143,-9.999811,2.942930,-5.599160],[-7.264699,-5.204312,-4.063916,3.156085,9.450050,9.433067,-3.301108,-9.429718,5.246064,0.452914],[-7.045439,-2.423666,0.256419,-3.758699,1.899732,5.701025,-0.803122,6.179795,-3.937716,8.982126],[-0.288208,4.408696,8.791891,3.018404,6.535144,2.561291,-3.277067,8.517389,-6.372338,3.461624],[-7.285917,6.088208,-2.028892,2.270315,-7.566475,-4.992908,0.263929,6.448510,3.221021,0.883314]],[[-0.086716,3.556389,-7.944440,-0.541779,-8.719115,-3.812219,-4.742747,4.814351,2.153399,9.992589],[1.241840,-7.785386,9.356049,7.980092,-3.185777,-9.701036,3.680908,5.513899,-9.924846,8.229242],[2.786637,-0.953490,9.264567,-1.463540,-0.956577,-0.960366,5.154749,8.205467,9.803223,-3.105800],[9.347636,-9.851282,-7.029284,3.684369,9.580804,0.824971,-2.622898,-5.203203,3.422937,-2.064115],[1.532181,6.427835,1.989144,8.887605,9.934399,-6.427865,-6.706045,-3.959728,6.961694,-8.271172],[-6.530517,9.595950,3.099137,-4.887153,9.150571,-2.408559,-1.800011,0.250435,-4.983363,-8.088492],[-0.978832,5.936061,5.722397,1.590002,4.731962,5.062100,8.736488,-6.188311,-0.372985,6.497332],[-2.242595,-0.388153,8.438078,-1.445978,8.654450,-4.482483,-5.947160,-9.278084,9.184235,-8.423900],[3.208014,-8.610684,-7.266456,3.477164,9.528711,-0.456042,7.241563,-1.696924,7.808719,-1.511627],[3.407333,-3.607003,-0.774190,9.992452,9.647616,-1.175693,7.940512,7.194884,-9.702993,5.233466],[-7.513814,6.566309,-6.216824,-8.267743,-9.615230,-2.233376,2.768269,6.756470,-4.666756,0.081664]],[[-1.827158,-4.168387,-2.402652,-1.158148,9.064201,2.001878,1.314256,9.209034,-4.891987,4.678579],[-6.053257,3.485253,2.621996,-1.504113,8.067223,3.366676,1.317804,-2.613155,3.810210,-4.007130],[-5.731332,-8.538546,-2.774145,1.523077,-7.113671,-4.086074,8.797129,-7.747573,-2.135226,-9.002909],[5.725362,-4.780224,2.051727,-0.144932,1.548664,3.129170,-5.161465,4.122188,6.948235,-3.278201],[-9.065953,8.193485,-7.767849,-2.026619,-1.892837,-4.121619,-6.120125,-2.804626,9.410602,-2.124457],[-7.817244,-1.278656,-9.282706,6.820749,2.992389,6.945686,-5.413694,7.818022,-6.058451,-3.774078],[-4.522429,-0.138760,1.858646,-4.767260,-7.199576,4.962826,9.219266,2.122945,5.684384,9.552032],[-9.320781,-9.152247,0.478196,2.736451,4.867399,-2.710395,3.098978,-7.743999,-6.944194,7.699729],[-7.086252,5.073177,5.239472,5.010065,5.139331,1.688267,2.393315,3.807395,5.026011,-7.997128],[-3.057327,-3.569280,-5.524754,-1.619248,3.863593,7.041834,-9.441884,5.750943,7.312599,-8.716703],[-3.797032,0.350367,-8.470748,-5.148706,7.587173,-5.829361,-2.112152,7.078466,-6.226730,3.072413]],[[-1.174445,0.084798,8.363242,-4.985531,2.173931,2.475367,-8.283242,4.516348,5.017961,-2.803248],[-5.257510,-9.264744,0.645470,4.206085,1.074534,4.154869,5.414575,-4.317757,-0.472758,-4.682623],[-4.846126,5.905933,-2.657476,8.467133,-8.391548,-3.978530,-0.400404,7.150344,3.081307,6.197338],[8.526657,-8.674504,3.404586,9.577972,2.859155,4.656846,-5.395113,-1.761810,1.683960,-9.737853],[5.955334,8.346621,-7.582938,7.083691,6.997651,-8.411078,3.479050,-3.074618,-6.366901,-1.220443],[4.276321,6.447336,-2.872951,-6.498077,8.908330,-8.459208,6.567586,-1.975745,-6.644422,1.456922],[4.673378,4.598977,-5.543980,7.151764,6.687323,-8.962461,-5.339944,-4.366911,3.646809,-5.843834],[-7.218786,4.283012,-2.156553,8.542069,2.583593,0.713569,-7.089180,-7.835901,-8.297758,5.681903],[5.784111,-9.241997,9.157741,9.609828,7.571666,4.138206,-6.958962,2.291745,7.756099,9.189597],[-1.511675,0.485264,1.937218,4.546046,8.375316,-7.183392,3.429753,-7.591137,2.218242,9.508767],[-2.074713,-2.170217,-6.324233,9.034454,-7.773247,-2.608416,0.794933,-3.489154,3.027884,-1.261932]],[[-0.580702,-0.272472,6.781582,4.862766,-4.419570,8.270797,9.640311,8.055867,-3.398443,3.841941],[6.788104,0.483239,9.950030,-5.390362,3.843219,-5.661467,8.263358,3.089110,2.965807,0.205367],[-0.937836,-1.117943,5.423854,9.543431,1.386818,-3.405990,-1.051559,2.931619,2.708150,3.215343],[9.450861,0.403675,-0.968735,0.086605,7.242549,1.524989,-2.211937,4.579723,5.921162,3.145579],[-4.821782,8.566312,5.654295,-1.073046,-3.349023,2.540103,8.635959,-5.767756,-1.372346,-0.299067],[4.603934,3.260850,9.894567,1.594642,3.877693,5.640600,-6.774693,-2.971346,-4.996252,5.685609],[-0.431401,-7.009185,0.297584,5.559273,-4.063344,2.439978,2.310171,5.359565,5.981255,0.160173],[4.211842,-8.422371,-1.214121,0.054799,-1.338409,4.409766,-4.377132,-9.243850,2.357282,8.963992],[0.126004,8.905270,3.817807,-3.764266,3.315364,2.340372,-7.488304,-0.953167,-6.909921,7.945684],[-8.293208,-7.096655,-8.551666,-1.273318,-6.780509,-6.056041,-7.189166,9.940766,-7.128324,6.547912],[3.264061,8.689157,-8.080648,-3.149621,8.249110,3.912307,4.502086,-6.839498,8.697808,3.394739]],[[-4.770924,8.342237,7.754572,-1.240647,-9.776384,3.064174,-0.020562,-2.926485,-8.821434,-2.314374],[-3.079878,-5.165016,1.372424,-0.967799,1.740780,-1.576563,0.886754,2.687726,-1.264750,-2.749507],[6.620296,9.170087,-9.890690,-9.399162,-8.035115,6.971301,9.161253,-6.443547,-8.907647,9.478317],[-5.232363,-1.685425,8.055041,-0.447615,9.041535,3.930232,-2.231903,7.523733,-0.345633,-7.872891],[-3.276534,0.610189,0.161264,-6.366420,-9.060736,8.782276,4.555288,-6.058857,9.125367,3.705511],[-6.233965,8.346755,3.034555,0.554316,0.342452,-2.465158,4.194584,9.476966,-9.069750,3.723422],[0.543966,5.432634,-8.402694,3.695293,1.045972,-5.887245,8.779274,-0.918640,-8.667451,-8.085107],[1.050069,1.675351,7.611769,2.326949,-9.772639,-2.395506,-7.444124,7.117396,-3.326870,-0.951450],[7.490581,2.190906,7.440626,8.072323,3.663409,1.755749,-6.182840,-7.123523,7.364675,4.803303],[-7.784808,3.547027,-6.647086,5.545358,8.484303,-1.988722,-2.286418,-0.799176,0.228631,-4.024261],[1.989086,-7.099955,-5.716747,7.889256,-0.222361,-4.233354,9.606556,7.079820,-3.205762,-3.815714]]], dtype = "float32")#candidate|3088|(8, 11, 10)|const|float32
bop_3089 = relay.bitwise_and(call_3063.astype('uint32'), relay.reshape(const_3088.astype('uint32'), relay.shape_of(call_3063))) # shape=(8, 11, 10)
bop_3092 = relay.bitwise_and(call_3064.astype('uint32'), relay.reshape(const_3088.astype('uint32'), relay.shape_of(call_3064))) # shape=(8, 11, 10)
func_1252_call = mod.get_global_var('func_1252')
func_1255_call = mutated_mod.get_global_var('func_1255')
const_3104 = relay.const([5.868572,-3.450542,5.960989,7.742633,-3.498026,7.917961,1.758119,-9.302972,-7.971455,0.439871,-5.321709,-4.905066,2.990863,-3.232238,8.736543,2.726170,9.194196,5.642735,-8.915479,8.040642,-2.378587,4.310568,-7.494635,5.912035,5.625058,0.882996,9.782269,-5.059740,1.068252,-2.985482,-3.830405,5.868097,4.930219,-1.590056,-3.074055,-5.180730,9.749991,-1.734571,0.369559,-9.904643,-7.862678,3.325698,0.054914,-8.246557,-3.258147,2.093779,-0.610233,-3.252717,-4.212415,9.569862,-9.383203,1.573906,3.597470,-1.377878,5.591023,1.659654,-8.183992,8.014835,0.626078,-9.328574,-2.441226,-3.415842,4.220957,-8.917088,-0.988526,-1.031160,-9.156743,-4.349612,5.285905,-8.923379,1.642578,-1.914418,-1.371987,1.936512,-3.554216,-5.806566,-9.835995,5.270801,1.256062,2.128713,-2.636208,2.436157,2.893489,-8.717786,-7.828840,5.705869,5.942720,6.460345,3.463461,0.939322,-8.586339,6.396452,-0.300322,-3.907507,-1.852098,0.696417,3.995187,0.677785,-8.744192,6.717954,2.171637,-9.540862,6.073878,-3.174809,0.422627,-0.881321,9.831652,-8.204605,-4.826147,-1.197484,-9.883566,1.638891,-0.630852,-3.888294,3.534222,2.672253,-4.246038,4.581623,9.272073,-3.707557,9.520954,-5.306541,-5.697650,-9.201482,-7.312440,-3.906567,5.591500,-2.634708,-7.854104,-5.842684,2.488073,-2.065165,-0.520658,9.363560,-4.088379,-9.313789,-9.029306,-8.507040,9.381452,1.455800,6.488837,-0.229208,-1.358677,-3.840760,9.972333,-2.412745,-7.203819,-6.077089,-4.218121,-9.136775,3.596235,-2.987927,-9.528665,9.734879,6.947792,6.646010], dtype = "float32")#candidate|3104|(156,)|const|float32
call_3103 = relay.TupleGetItem(func_1252_call(relay.reshape(const_3104.astype('float32'), [13, 3, 4])), 6)
call_3105 = relay.TupleGetItem(func_1255_call(relay.reshape(const_3104.astype('float32'), [13, 3, 4])), 6)
output = relay.Tuple([bop_3089,call_3103,const_3104,])
output2 = relay.Tuple([bop_3092,call_3105,const_3104,])
func_3116 = relay.Function([], output)
mod['func_3116'] = func_3116
mod = relay.transform.InferType()(mod)
output = func_3116()
func_3117 = relay.Function([], output)
mutated_mod['func_3117'] = func_3117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
call_3131 = relay.TupleGetItem(func_2771_call(), 0)
call_3132 = relay.TupleGetItem(func_2773_call(), 0)
output = relay.Tuple([call_3131,])
output2 = relay.Tuple([call_3132,])
func_3139 = relay.Function([], output)
mod['func_3139'] = func_3139
mod = relay.transform.InferType()(mod)
output = func_3139()
func_3140 = relay.Function([], output)
mutated_mod['func_3140'] = func_3140
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1693_call = mod.get_global_var('func_1693')
func_1695_call = mutated_mod.get_global_var('func_1695')
call_3159 = func_1693_call()
call_3160 = func_1693_call()
output = relay.Tuple([call_3159,])
output2 = relay.Tuple([call_3160,])
func_3163 = relay.Function([], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
output = func_3163()
func_3164 = relay.Function([], output)
mutated_mod['func_3164'] = func_3164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2321_call = mod.get_global_var('func_2321')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_3214 = func_2321_call()
call_3215 = func_2321_call()
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_3244 = func_2097_call()
call_3245 = func_2097_call()
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_3247 = func_1584_call()
call_3248 = func_1584_call()
output = relay.Tuple([call_3214,call_3244,call_3247,])
output2 = relay.Tuple([call_3215,call_3245,call_3248,])
func_3261 = relay.Function([], output)
mod['func_3261'] = func_3261
mod = relay.transform.InferType()(mod)
mutated_mod['func_3261'] = func_3261
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3261_call = mutated_mod.get_global_var('func_3261')
call_3262 = func_3261_call()
output = call_3262
func_3263 = relay.Function([], output)
mutated_mod['func_3263'] = func_3263
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_3267 = func_2097_call()
call_3268 = func_2097_call()
output = call_3267
output2 = call_3268
func_3283 = relay.Function([], output)
mod['func_3283'] = func_3283
mod = relay.transform.InferType()(mod)
output = func_3283()
func_3284 = relay.Function([], output)
mutated_mod['func_3284'] = func_3284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
call_3298 = relay.TupleGetItem(func_3261_call(), 0)
call_3299 = relay.TupleGetItem(func_3263_call(), 0)
output = relay.Tuple([call_3298,])
output2 = relay.Tuple([call_3299,])
func_3301 = relay.Function([], output)
mod['func_3301'] = func_3301
mod = relay.transform.InferType()(mod)
mutated_mod['func_3301'] = func_3301
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mutated_mod.get_global_var('func_3301')
call_3302 = func_3301_call()
output = call_3302
func_3303 = relay.Function([], output)
mutated_mod['func_3303'] = func_3303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_3318 = func_2097_call()
call_3319 = func_2097_call()
uop_3320 = relay.cosh(call_3318.astype('float64')) # shape=(8, 11, 10)
uop_3322 = relay.cosh(call_3319.astype('float64')) # shape=(8, 11, 10)
output = uop_3320
output2 = uop_3322
func_3342 = relay.Function([], output)
mod['func_3342'] = func_3342
mod = relay.transform.InferType()(mod)
output = func_3342()
func_3343 = relay.Function([], output)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_3352 = relay.TupleGetItem(func_2162_call(), 0)
call_3353 = relay.TupleGetItem(func_2163_call(), 0)
func_2414_call = mod.get_global_var('func_2414')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_3354 = relay.TupleGetItem(func_2414_call(), 0)
call_3355 = relay.TupleGetItem(func_2415_call(), 0)
output = relay.Tuple([call_3352,call_3354,])
output2 = relay.Tuple([call_3353,call_3355,])
func_3377 = relay.Function([], output)
mod['func_3377'] = func_3377
mod = relay.transform.InferType()(mod)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3377_call = mutated_mod.get_global_var('func_3377')
call_3378 = func_3377_call()
output = call_3378
func_3379 = relay.Function([], output)
mutated_mod['func_3379'] = func_3379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2678_call = mod.get_global_var('func_2678')
func_2679_call = mutated_mod.get_global_var('func_2679')
call_3395 = relay.TupleGetItem(func_2678_call(), 1)
call_3396 = relay.TupleGetItem(func_2679_call(), 1)
output = call_3395
output2 = call_3396
func_3400 = relay.Function([], output)
mod['func_3400'] = func_3400
mod = relay.transform.InferType()(mod)
mutated_mod['func_3400'] = func_3400
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3400_call = mutated_mod.get_global_var('func_3400')
call_3401 = func_3400_call()
output = call_3401
func_3402 = relay.Function([], output)
mutated_mod['func_3402'] = func_3402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2628_call = mod.get_global_var('func_2628')
func_2630_call = mutated_mod.get_global_var('func_2630')
call_3491 = relay.TupleGetItem(func_2628_call(), 0)
call_3492 = relay.TupleGetItem(func_2630_call(), 0)
output = relay.Tuple([call_3491,])
output2 = relay.Tuple([call_3492,])
func_3493 = relay.Function([], output)
mod['func_3493'] = func_3493
mod = relay.transform.InferType()(mod)
mutated_mod['func_3493'] = func_3493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3493_call = mutated_mod.get_global_var('func_3493')
call_3494 = func_3493_call()
output = call_3494
func_3495 = relay.Function([], output)
mutated_mod['func_3495'] = func_3495
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1351_call = mod.get_global_var('func_1351')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_3546 = relay.TupleGetItem(func_1351_call(), 0)
call_3547 = relay.TupleGetItem(func_1352_call(), 0)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_3557 = relay.TupleGetItem(func_1467_call(), 0)
call_3558 = relay.TupleGetItem(func_1468_call(), 0)
output = relay.Tuple([call_3546,call_3557,])
output2 = relay.Tuple([call_3547,call_3558,])
func_3565 = relay.Function([], output)
mod['func_3565'] = func_3565
mod = relay.transform.InferType()(mod)
mutated_mod['func_3565'] = func_3565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mutated_mod.get_global_var('func_3565')
call_3566 = func_3565_call()
output = call_3566
func_3567 = relay.Function([], output)
mutated_mod['func_3567'] = func_3567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_3675 = func_1584_call()
call_3676 = func_1584_call()
output = call_3675
output2 = call_3676
func_3710 = relay.Function([], output)
mod['func_3710'] = func_3710
mod = relay.transform.InferType()(mod)
mutated_mod['func_3710'] = func_3710
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mutated_mod.get_global_var('func_3710')
call_3711 = func_3710_call()
output = call_3711
func_3712 = relay.Function([], output)
mutated_mod['func_3712'] = func_3712
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mod.get_global_var('func_3565')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_3764 = relay.TupleGetItem(func_3565_call(), 1)
call_3765 = relay.TupleGetItem(func_3567_call(), 1)
output = call_3764
output2 = call_3765
func_3768 = relay.Function([], output)
mod['func_3768'] = func_3768
mod = relay.transform.InferType()(mod)
output = func_3768()
func_3769 = relay.Function([], output)
mutated_mod['func_3769'] = func_3769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_3775 = func_1584_call()
call_3776 = func_1584_call()
output = call_3775
output2 = call_3776
func_3785 = relay.Function([], output)
mod['func_3785'] = func_3785
mod = relay.transform.InferType()(mod)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3785_call = mutated_mod.get_global_var('func_3785')
call_3786 = func_3785_call()
output = call_3786
func_3787 = relay.Function([], output)
mutated_mod['func_3787'] = func_3787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_3788 = relay.TupleGetItem(func_2065_call(), 2)
call_3789 = relay.TupleGetItem(func_2066_call(), 2)
output = call_3788
output2 = call_3789
func_3795 = relay.Function([], output)
mod['func_3795'] = func_3795
mod = relay.transform.InferType()(mod)
mutated_mod['func_3795'] = func_3795
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3795_call = mutated_mod.get_global_var('func_3795')
call_3796 = func_3795_call()
output = call_3796
func_3797 = relay.Function([], output)
mutated_mod['func_3797'] = func_3797
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
call_3798 = relay.TupleGetItem(func_2771_call(), 0)
call_3799 = relay.TupleGetItem(func_2773_call(), 0)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_3804 = relay.TupleGetItem(func_2065_call(), 0)
call_3805 = relay.TupleGetItem(func_2066_call(), 0)
func_3400_call = mod.get_global_var('func_3400')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_3811 = func_3400_call()
call_3812 = func_3400_call()
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
var_3839 = relay.var("var_3839", dtype = "float32", shape = (1232,))#candidate|3839|(1232,)|var|float32
call_3838 = relay.TupleGetItem(func_1823_call(relay.reshape(var_3839.astype('float32'), [1232,])), 0)
call_3840 = relay.TupleGetItem(func_1825_call(relay.reshape(var_3839.astype('float32'), [1232,])), 0)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_3856 = relay.TupleGetItem(func_2212_call(), 2)
call_3857 = relay.TupleGetItem(func_2213_call(), 2)
output = relay.Tuple([call_3798,call_3804,call_3811,call_3838,var_3839,call_3856,])
output2 = relay.Tuple([call_3799,call_3805,call_3812,call_3840,var_3839,call_3857,])
func_3866 = relay.Function([var_3839,], output)
mod['func_3866'] = func_3866
mod = relay.transform.InferType()(mod)
mutated_mod['func_3866'] = func_3866
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3867 = relay.var("var_3867", dtype = "float32", shape = (1232,))#candidate|3867|(1232,)|var|float32
func_3866_call = mutated_mod.get_global_var('func_3866')
call_3868 = func_3866_call(var_3867)
output = call_3868
func_3869 = relay.Function([var_3867], output)
mutated_mod['func_3869'] = func_3869
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
call_3874 = relay.TupleGetItem(func_2771_call(), 0)
call_3875 = relay.TupleGetItem(func_2773_call(), 0)
func_2749_call = mod.get_global_var('func_2749')
func_2751_call = mutated_mod.get_global_var('func_2751')
const_3882 = relay.const([True,False,False,False,True,True,False,False,False,False,True,True,False,True,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,True,False,True,False,True,False,True,True,True,False,True,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,False,True,True,True,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,False,False,True,False,False,False,True,False,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,False,True,True,False,True,False,False,True,False,True,False,False,False,False,False,True,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,False,False,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,True,True,True,False,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,True,True,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,False,False,True,False,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,False,False,False,True,False,True,True,False,True,True,True,True,False,False,True,False,False,False,True,True,False,False,True,True,True,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,False,True,True,False,False,False,False,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,True,False,True,True,False,False,False,True,True,False,True,True,True,False,False,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,True,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,False,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,False,False,True,True,False,True,False,True,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,True,False,True,False,True,False,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,True,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,False,True,False,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,True,False,True,True,False], dtype = "bool")#candidate|3882|(1848,)|const|bool
call_3881 = relay.TupleGetItem(func_2749_call(relay.reshape(const_3882.astype('bool'), [1848,])), 0)
call_3883 = relay.TupleGetItem(func_2751_call(relay.reshape(const_3882.astype('bool'), [1848,])), 0)
func_3768_call = mod.get_global_var('func_3768')
func_3769_call = mutated_mod.get_global_var('func_3769')
call_3884 = func_3768_call()
call_3885 = func_3768_call()
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_3891 = relay.const([5.129195,5.318683,-9.940603,9.601452,4.798184,6.872501,-6.746584,-7.736591,6.397613,9.218902,7.527409,-6.713190,-8.311004,-5.235362,1.299466,-6.985774,-9.535377,4.503972,-3.108944,8.130221,-3.326327,-0.433807,-2.341282,-7.351975,-5.033378,-2.041137,-8.585846,-1.868666,-4.631523,-5.428279,-1.520501,-6.856583,-2.407300,1.597453,-8.796244,-5.268426,-4.479652,2.625100,5.790754,-9.207606,4.681658,-1.870282,3.886284,-5.478035,8.556220,8.945695,5.682207,-8.290882,-1.130856,-5.545765,-3.733715,3.058685,9.230501,5.813155,-6.321337,8.380727,-9.144897,1.512833,-6.837588,2.944624,-2.207138,-5.501573,-4.793873,8.285607,-5.536733,1.580827,9.731031,2.509237,4.304877,1.808985,4.136361,7.796602,-0.943159,4.012704,-5.998824,-2.849088,-0.385237,-7.679454,1.525475,9.096302,-7.678902,-7.610601,1.280390,-1.762570,6.214742,-0.072563,-4.318356,-5.666875,-1.553719,-6.847069,0.143597,2.162766,0.765580,-9.910432,9.707117,-3.187120,7.360588,6.762174,2.638541,2.438372,-2.027735,7.843468,-0.800775,4.802579,9.062501,8.261847,5.893016,-9.728645,5.641598,4.952119,-3.576355,-0.942000,9.090474,-1.542676,2.353512,2.138081,2.051229,9.085370,-9.081828,-3.972095,-7.372856,-0.170162,-0.409385,-6.078504,-0.660022,4.111999,9.452107,-6.246957,7.246301,8.790345,-8.276437,-3.079696,8.931429,5.945317,9.818337,-5.935537,-1.968107,4.263838,6.987604,-7.240802,8.713383,7.976927,5.666470,7.295594,-5.135902,6.000311,3.455242,6.613837,1.608202,6.106213,-6.244911,-9.142191,-1.251739,-1.913908,9.476181,5.708038,-5.392815,-4.420505,-4.745341,-1.156804,-3.114635,-9.967464,-8.220106,8.280553,-8.236705,-4.942731,-8.258816,8.786413,-4.641456,-2.451197,-4.015880,-5.123747,-1.586045,-8.667745,9.020977,-1.862714,7.592388,4.203639,-7.920962,0.786064,6.150816,5.853165,9.092398,4.905060,-4.678955,1.443247,0.032383,6.961913,-1.319336,7.090034,1.787581,-8.816243,-9.030717,-8.698586,-2.102924,8.355248,9.787218,1.532782,-0.657131,-8.784579,-5.561734,4.469474,2.168107,-9.820545,0.854648,5.954012,6.889506,2.733892,-3.491027,-6.199480,0.112756,-2.032021,-0.512498,0.844092,-4.141131,-2.207325,-8.645355,7.459932,-1.784922,7.218282,5.262386,-0.777987,-8.601917,-1.272730,1.834273,2.067518,-0.465674,9.708119,0.448848,7.003788,-6.976828,1.301958,-5.684072,2.300158,-9.303560,-5.569917,0.901047,-6.316278,-5.852299,-4.684088,2.450284,-7.245608,-4.298845,-5.475892,4.399675,2.834701,0.755923,-5.070049,8.791295,2.191201,-0.424874,2.991165,-4.402126,-9.586541,-0.491027,5.157239,-1.634344,-3.258639,2.042560,1.455183,-0.630567,5.783221,5.326899,0.674851,7.835502,-9.387025,-5.595759,7.789520,1.420998,6.928996,0.264228,4.348136,3.019439,-7.945053,-3.229003,1.988614,-2.563003,1.011406,-1.227007,9.045975,4.979007,2.886390,0.779613,-8.512426,-8.475866,7.693241,-9.188693,-2.718858,-1.827980,8.209846,-4.551497,8.185159,3.785597,-5.589848,-1.090494,8.095424,2.391074,3.872841,7.438827,2.917113,-4.047934,6.819747,3.947088,-7.116365,-0.232931,-2.874973,-1.669463,-0.760105,-6.819818,4.765534,-5.209962,-9.679790,2.561117,-6.049435,-8.775318,9.706735,-7.579512,2.465146,-9.357415,7.839318,2.557189,8.619855,-5.060342,3.321151,-6.805701,2.346469,9.962347,-4.146278,3.984967,-3.311097,-1.607008,-3.521064,-8.090004,-9.369651,4.792672,-3.624416,9.705805,-1.685341,9.889471,4.163237,-8.866130,-8.455446,-8.473001,9.671467,0.838727,6.709837,6.177562,2.791052,-9.808356,-9.278375,1.311882,-5.216381,-7.545253,-1.890630,9.481870,8.080081,-4.260210,7.946367,-1.159212,2.678495,-9.667160,3.109971,-5.294122,-9.915971,-6.413814,4.987876,5.730080,-9.207234,-5.102564,7.066288,-3.256334,-9.545401,-1.588222,-8.137925,-4.101599,-4.553225,-1.356628,-3.895584,-8.192057,1.257780,9.192340,0.540085,3.591768,-1.692665,-1.609786,0.534971,-3.111792,-8.384000,7.282573,7.840495,-8.386492,3.584303,3.594903,0.596023,-0.736974,-7.629672,8.389825,-1.149555,2.148359,7.946599,-5.538057,3.313861,-2.782194,6.000891,-1.907363,8.367484,-0.003892,7.315395,-3.442805,-5.542032,-8.071547,-3.856344,-8.843816,-3.525384,6.583191,0.440990,-7.320633,-2.599206,-0.577552,-9.377754,-2.827586,3.755604,-7.816572,-7.562013,-3.306674,5.947756,5.217252,-3.920511,-8.215252,5.229932,-1.019771,5.989905,6.879878,0.386248,8.601991,-0.165772,2.985095,1.270125,3.060184,-4.327341,-6.707094,-7.870318,9.150230,3.553305,2.955423,4.631977,6.842750,-4.675492,-9.872246,2.396312,0.164390,2.615368,3.242266,7.820553,-4.922281,-9.873128,1.715497,-1.758617,-0.174197,7.785044,2.796285,9.384992,8.974332,9.867487,-5.004129,-4.515821,0.378152,-8.441596,-9.472413,2.676871,-9.631369,6.946924,-3.242829,-5.738835,3.284032,-6.661537,8.356677,0.366326,3.905594,-3.305528,0.410603,9.602031,0.471105,-2.171223,5.588464,-2.831565,4.305296,-3.623506,-2.462328,-0.625258,-3.658801,-7.446429,1.172387,-4.605631,-9.540141,-8.100718,2.686999,-7.009472,3.796768,-5.469147,-1.144934,-0.788742,-6.265642,2.688353,-4.596875,-5.346620,-2.839030,-9.119795,7.899313,-6.610008,6.130894,1.401249,0.866969,6.678262,-2.520076,2.582720,9.993662,2.040743,-4.430106,-9.219522,-2.447607,9.814908,9.270381,-8.081596,8.389825,-6.834133,2.921153,5.832008,-8.433943,-1.342966,7.530109,4.983556,6.192361,-5.495317,-7.607741,-8.638742,-6.093146,6.548662,1.536867,-1.235771,8.780815,-0.083709,-8.825950,9.465167,-4.613174,-6.106079,4.096630,-2.626389,-9.431697,4.714025,7.659734,2.427278,4.979990,9.207851,0.421175,5.610691,0.843160,7.920827,-0.940271,-4.484666,-9.924392,-6.128397,-1.509952,3.758416,4.780967,4.218784,-9.608339,-0.482248,-8.375191,1.697030,5.219852,-1.526740,-3.966475,4.065711,-0.986523,2.304076,-5.721288,-2.075780,1.542546,0.666203,-3.954694,0.398394,5.139836,4.905152,-6.112612,0.589800,1.307387,-3.582787,-4.197536,-0.970815,5.433735,8.823920,3.018878,-1.042760,7.018902,-2.330155,3.096771,0.906125,6.839051,-7.506815,9.124617,-0.142164,4.197920,-4.123178,-2.509937,-5.390895,-4.915621,0.828562,7.779954,-4.733685,9.602329,8.548540,5.251561,1.732106,3.942530,-4.533331,-4.869740,5.788626,3.584216,4.848380,4.465720,2.884981,4.795633,7.223291,-5.718291,-9.933864,-8.097311,-4.681309,-0.157970,5.213408,4.215274,-3.116863,-1.840773,5.012415,9.124337,3.004902,-9.826634,-2.546932,2.039162,6.407068,-8.256306,5.552842,6.233170,-2.672824,5.503355,3.371656,9.669599,-8.065022,8.652152,3.170844,-6.818655,4.136122,3.134194,2.146009,-8.452018,-7.032075,-7.828065,2.423055,-7.538296,2.877294,6.848895,-3.405991,-7.630339,-0.965244,8.014045,-3.118338,-8.444249,-7.882699,4.542517,-6.942070,-3.268149,-7.477377,-8.980997,-6.478193,9.556673,9.361037,-6.021744,1.301277,-9.162253,4.501720,3.704833,-8.721857,8.844870,0.882170,-2.689471,-5.416671,7.142215,0.447263,1.571176,-8.573428,6.763450,1.116029,7.257255,-4.069923,6.317220,5.512990,8.851940,-5.721955,7.204822,1.681502,-1.273241,-7.345073,7.085135,8.571122,-8.363650,6.422407,4.160488,3.678555,-6.152542,1.392154,5.804106,-9.127516,-6.508347,-2.773238,5.962618,2.850663,7.268439,7.294019,0.195080,1.723455,-9.890770,3.506065,-1.553971,-6.160223,-6.490858,-6.196748,5.259775,-5.322265,8.169648,4.766641,-8.117290,-5.466217,-3.863261,-4.127082,8.596290,3.422568,6.560622,9.133181,-8.051944,-6.209583,1.292506,-4.979356,6.838070,-6.488185,2.335442,9.432756,-0.841921,-3.790278,9.212722,-7.990499,-0.415731,-5.495692,-7.128204,3.640416,-1.033153,9.778025,-3.896813,-4.789963,-4.578399,0.080609,-1.918442,-3.914026,-8.230859,5.846414,3.904601,-7.591462,-2.639847,4.955017,3.946727,5.111749,-6.421063,2.716025,-0.605564,9.962048,4.176914,5.932462,0.911813,-0.456362,-8.436010,-4.097958,-2.896758,2.539490,0.044683,1.682520,-9.492261,-5.517408,-8.720690,6.765259,3.772261,5.133695,4.305916,-3.258789,-2.951320,5.773192,4.304288,0.018088,-1.865679,-3.073133,7.163567,-7.640609,-9.925367,6.633691,2.397626,5.182417,3.195304,6.909908,8.737622,8.900363,-6.044335,-7.013066,-4.002494,3.674592,5.858647,9.298217,-4.792315,-5.952490,-7.523261,1.398576,-7.062778,3.013681,7.131502,8.210470,-5.646907,8.288843,2.572744,-5.743140,1.312888,-0.024877,8.947768,4.976329,-0.991243,-9.848687,2.103400,-7.638790,1.410369,5.494156,-8.814921,0.844014,-5.498927,5.629944,9.229857,1.793145,-7.866428,1.929991,8.499260,0.398214,-1.675249,8.863286,2.435272,4.632128,6.577482,2.963599,8.009666,-2.790172,0.135759,0.273051,-3.258098,5.304698,9.870055,-7.878184,-1.591789,-4.548068,-7.965116,-4.420135,6.550508,-8.850301,4.662329,-1.434196,-8.666288,-7.655742,-3.361108,-4.129594,-2.459502,2.515270,-1.254265,4.904072,7.396752,7.210886,2.275956,1.688997,-7.011117,7.154318,-6.364619,-8.013845,-4.456387,-6.056571,4.851506,2.314749,6.457860,4.040975,5.827090,-3.999530,-7.688226,-9.897934,5.248811,-4.680772,8.963295,3.786645,0.578172,-0.779547,-3.445739,-5.521164,-0.860435,-6.397723,1.017862,4.289731,-0.526113,9.995773,-9.987906,-0.705045,-9.574510,4.446409,-7.791123,6.918496,-5.597585,0.806171,-8.263499,-9.925830,-9.975503,-1.085231,-5.734366,-2.143742,6.259824,8.523920,8.865365,-6.230262,-8.847083,1.973138,-0.589605,-4.658019,-2.562756,-1.579485,-2.040085,7.374855,1.014437,-2.381531,-1.708633,-0.266367,-7.895376,0.557469,9.749191,7.258725,5.242722,-9.258100,0.697770,-4.090660,-9.292610,5.362488,-4.979996,0.593338,-1.036570,6.505518,-0.342382,5.210352,-2.986685,-2.488321,-9.251808,3.618284,-3.320354,7.471363,5.506782,-4.010075,-3.880783,-1.411402,-8.974805,-8.737955,0.282282,3.126382,5.974725,-8.009059,8.741940,1.845867,3.054600,0.171029,-9.973813,3.719977,2.268469,-2.966082,9.555364,-8.997862,-0.461109,0.479120,-4.591593,-3.569672,0.760053,3.857470,9.395849,-2.397743,-7.042832,0.033164,-0.378773,-7.732967,-0.725116,-5.934308,8.455588,6.006835,9.103110,9.683814,-1.461162,-9.287850,-5.517102,-5.591667,-6.132859,-5.438203,7.366293,-2.826540,8.281564,9.150110,5.705394,1.402055,-0.754354,-2.585199,8.331522,0.920602,9.731394,0.918962,-7.295294,-8.809264,-2.217478,4.742232,-0.202943,-3.965849,-9.024819,2.179468,2.974792,-5.128178,4.708608,4.808539,-4.978216,-6.297414,-5.934673,8.947705,-5.349896,-0.541208,9.452669,-2.275253,5.311770,5.730544,-1.526754,7.283483,9.645388,0.634744,-6.175706,-9.302449,7.170639,8.373508,-4.350306,-8.008732,-3.208357,-7.679445,-8.059049,7.894225,1.925317,3.174661,5.319560,0.109631,-4.973619,9.290736,2.309267,3.074762,3.298886,4.994133,-5.707862,-3.124631,-2.127529,-6.841803,5.421349,-2.317301,-3.949920,-4.320804,-7.019764,-1.495231,-0.960711,6.014529,5.935583,-6.565047,7.894082,0.916972,-7.036287,-6.475915,-7.651631,0.323985,-8.464255,-9.299521,-4.497160,-2.048833,-3.240661,7.527062,4.667040,-2.295251,-2.844101,9.553429,-7.920055,7.388928,-1.039944,7.555951,-1.179805,-3.098341,-7.133588,8.730451,5.531476,3.391762,-2.789203,-4.945646,-9.959261,3.585429,8.804399,-1.276124,0.771520,-6.395539,-0.035647,-2.555426,2.550249,1.390578,3.492081,-4.453250,9.336737,-5.413752,-2.021224,2.255350,8.382600,2.335143,1.099783,3.634148,4.001796,-7.150979,1.410397,-0.612428,1.700968,2.178546,-4.118410,4.614273,1.722587,-7.910088,-9.084302,-0.813215,-3.792882,-4.319572,-3.382842,-0.254042,-6.676168,3.205213,3.346574,-8.579034,0.519796,5.204573,2.299481,2.665964,-6.614756,-3.893080,0.138772,-2.085485,2.391740,4.149920,-5.135665,1.708370,-3.741719,1.009353,3.734890,-6.123117,6.159133,-9.873889,-6.665316,6.848394,4.169847,0.369773,0.422869,-7.782205,2.317454,-2.752951,7.542564,-7.275221,-9.432469,1.704366,4.657756,-1.617641,8.685432,3.760928,9.632315,-0.275712,-8.590560,5.753843,-5.925414,-3.300546,-6.643812,2.841350,2.752623,2.156183,5.868186,4.301320,4.105494,7.483321,-8.831669,-4.274163,-0.625228,0.222374,6.455368,-4.934154,-0.676685,4.568093,2.760177,6.525781,-8.989462,-3.229597,9.001861,-0.617258,9.463914,-6.511620,-4.349501,8.803292,4.783814,5.528300,-6.723381,-3.368948,1.713707,4.478415,0.457044,8.132242,5.516929,0.866546,3.842445,5.595036,-9.852260,-3.955178,5.447052,6.145472,-7.207705,1.134622,-2.620895,-1.108600,6.519942,-0.022927], dtype = "float32")#candidate|3891|(1232,)|const|float32
call_3890 = relay.TupleGetItem(func_1823_call(relay.reshape(const_3891.astype('float32'), [1232,])), 2)
call_3892 = relay.TupleGetItem(func_1825_call(relay.reshape(const_3891.astype('float32'), [1232,])), 2)
output = relay.Tuple([call_3874,call_3881,const_3882,call_3884,call_3890,const_3891,])
output2 = relay.Tuple([call_3875,call_3883,const_3882,call_3885,call_3892,const_3891,])
func_3901 = relay.Function([], output)
mod['func_3901'] = func_3901
mod = relay.transform.InferType()(mod)
output = func_3901()
func_3902 = relay.Function([], output)
mutated_mod['func_3902'] = func_3902
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3906 = relay.var("var_3906", dtype = "float64", shape = (16, 12, 1))#candidate|3906|(16, 12, 1)|var|float64
uop_3907 = relay.tan(var_3906.astype('float64')) # shape=(16, 12, 1)
output = uop_3907
output2 = uop_3907
func_3920 = relay.Function([var_3906,], output)
mod['func_3920'] = func_3920
mod = relay.transform.InferType()(mod)
var_3921 = relay.var("var_3921", dtype = "float64", shape = (16, 12, 1))#candidate|3921|(16, 12, 1)|var|float64
output = func_3920(var_3921)
func_3922 = relay.Function([var_3921], output)
mutated_mod['func_3922'] = func_3922
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2628_call = mod.get_global_var('func_2628')
func_2630_call = mutated_mod.get_global_var('func_2630')
call_3967 = relay.TupleGetItem(func_2628_call(), 0)
call_3968 = relay.TupleGetItem(func_2630_call(), 0)
func_2339_call = mod.get_global_var('func_2339')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_3971 = func_2339_call()
call_3972 = func_2339_call()
output = relay.Tuple([call_3967,call_3971,])
output2 = relay.Tuple([call_3968,call_3972,])
func_3992 = relay.Function([], output)
mod['func_3992'] = func_3992
mod = relay.transform.InferType()(mod)
output = func_3992()
func_3993 = relay.Function([], output)
mutated_mod['func_3993'] = func_3993
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_4020 = func_2097_call()
call_4021 = func_2097_call()
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_4028 = func_2236_call()
call_4029 = func_2236_call()
func_3163_call = mod.get_global_var('func_3163')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_4033 = relay.TupleGetItem(func_3163_call(), 0)
call_4034 = relay.TupleGetItem(func_3164_call(), 0)
func_3866_call = mod.get_global_var('func_3866')
func_3869_call = mutated_mod.get_global_var('func_3869')
const_4038 = relay.const([8.453559,-5.512934,-3.826603,3.479299,4.719189,-5.499602,-2.845650,0.170997,1.985601,-9.671956,5.205644,-4.253155,-7.143792,-0.038791,3.254358,5.228862,5.006537,-1.694937,6.585625,-3.508711,4.946083,-9.867941,0.075708,2.372892,1.956821,-5.535233,-6.684937,5.756470,0.206823,7.384132,4.201382,4.004901,-8.967361,-9.907183,5.089626,-6.949833,7.266926,-4.149955,-9.468723,-5.047725,-4.600443,7.046884,4.107791,9.914161,-0.630922,9.048698,9.669832,-2.728634,9.446705,-1.551996,1.749110,5.537936,5.545283,7.526530,3.852114,6.258970,8.294226,5.312033,5.263211,8.553398,5.151434,8.223478,-0.041192,-6.717209,-2.831846,-1.446344,9.094058,0.324541,-1.398357,2.366995,-4.030296,9.063777,6.078988,-6.523698,0.017502,-7.611355,-4.658303,-0.960774,-3.873423,-7.463627,7.262130,-8.214918,6.362565,5.035233,1.932240,5.079006,0.216698,8.839464,4.089032,9.858159,3.506369,3.588221,3.588730,-9.017846,-1.236888,-6.253333,-5.595234,7.911341,-0.676673,5.625491,0.391249,8.632021,1.651508,1.931206,-7.960624,5.565214,-6.324135,-6.553124,-8.721287,3.592461,3.037589,-4.187520,3.932673,1.613784,-1.476272,8.168894,-7.616954,-7.216249,0.984725,-4.023054,-9.996266,3.293409,3.214181,-8.915397,0.657093,-2.013758,-5.719270,-3.282678,-0.834390,3.336961,-0.820432,-2.753683,-4.094012,-2.683929,-0.879720,5.122362,-6.484460,-0.369034,-0.177073,-2.138971,-7.750595,5.523068,9.290198,-1.113251,2.350619,6.410995,-8.897485,-0.631238,-0.901622,-5.508488,-0.288254,-5.635680,2.803129,-2.864072,3.199752,5.773023,0.177805,-7.496276,-4.854167,2.832204,9.547481,6.865787,-1.477960,-7.929965,-1.686292,-6.263081,-7.560298,7.968104,2.875184,-3.472430,-4.448299,-9.476697,-8.274763,2.162677,-2.694956,-3.892012,3.161942,4.964645,-9.472096,-7.109239,8.907255,2.525172,3.494576,5.250663,-0.101632,-7.482121,3.097654,-7.905403,8.718436,-4.940572,-3.736545,2.446621,-3.215920,-1.786819,-1.280478,6.329549,3.534268,-8.795935,8.705357,4.417011,6.085117,4.345364,-7.278542,-0.816201,6.665612,4.153680,2.529927,2.250605,-9.297309,-5.055856,-4.315358,-5.559891,-9.692555,0.024561,-6.153757,7.295457,-4.876515,-7.868165,4.241411,-8.297029,6.552822,-4.010229,6.913091,-8.629302,5.713964,-5.227799,-5.339177,2.400659,5.645938,-9.475166,4.625833,2.775742,-4.168797,9.836329,-9.795167,-5.152312,1.769320,0.983710,-5.117913,-5.328364,-1.122122,-7.478349,4.763733,-7.891573,-1.239728,-4.223201,-5.754563,4.787617,1.507302,-1.014885,-5.523017,5.109082,-2.070892,-3.304725,-5.938077,-2.919873,-0.825743,1.476572,8.195018,-7.942200,9.126863,5.380957,3.012472,-8.804700,8.198586,-4.981428,-0.237491,-9.393370,-4.460102,7.919536,7.300039,-5.802068,-0.747455,-0.682904,5.224830,0.062540,7.145738,-5.104096,3.297546,-9.617621,-1.303100,2.076938,-3.993953,1.000958,-0.851380,-3.909417,-3.705326,1.329981,-9.829900,-5.413690,5.728579,-9.378373,8.857963,3.558127,-7.646305,6.774713,-0.119828,7.169996,-6.529103,-9.818058,6.058844,0.772788,2.142311,9.694823,-9.571277,1.795145,7.331024,-0.288912,-6.261283,-3.158338,1.404253,4.700672,-2.523989,0.701350,8.029838,2.071845,-6.618997,9.583947,-3.773995,2.824856,-4.850166,-5.053298,6.498698,-4.955988,-6.044763,-0.335791,0.612945,2.567978,-9.240833,-6.847619,-5.071522,-9.565580,-9.184568,-7.339040,-8.076601,5.183684,-9.910954,1.191321,5.529367,-8.823565,-3.287870,8.548327,-5.554620,1.287895,0.916506,0.202257,0.207853,-2.563703,2.024897,-3.687130,3.567463,-7.477572,7.311000,1.108783,-1.035741,-2.631951,-5.910443,-7.544631,3.629508,8.328668,5.566841,-2.552651,-4.524310,8.489511,-5.010424,-4.502174,4.043484,3.281781,-2.642113,1.449763,-5.584969,5.518515,-3.402357,-2.951830,6.524507,-4.603777,-6.653557,0.445533,-3.507280,-9.766548,4.777465,-1.059044,1.906066,6.562808,-4.794234,-3.878067,3.072753,5.456048,6.704776,4.134204,9.472690,-2.861115,-8.925450,-7.702785,-3.201675,1.102277,3.517713,-2.857112,-9.612056,-1.987919,3.681789,2.418893,-7.524651,-9.105341,-8.436952,-5.558036,9.294616,5.269087,3.934136,-3.971809,-5.719128,8.558603,9.372508,1.118749,9.774957,-6.096160,-5.926245,6.779344,-6.555214,2.482875,1.528047,-3.464605,-9.883663,0.372731,-5.764423,6.726434,6.879814,-6.624569,-5.573080,-7.303240,-6.120662,-0.454748,1.123942,3.361222,2.604528,-3.849829,3.661928,-7.820403,4.219906,9.399937,0.400411,-8.058407,8.455669,-6.867647,-8.263196,6.696728,1.927636,-3.149625,-1.378038,0.297167,-4.795425,-8.495373,-2.157835,3.268740,-7.146030,2.593340,0.010860,5.066296,0.864611,-6.054105,-5.421174,-1.741160,-8.591070,-9.405115,-1.027966,-6.096564,-2.515323,-3.527406,8.794625,-0.536525,-1.165422,-4.684156,4.765421,-1.751090,0.833028,8.732223,1.363261,3.264506,-0.323236,-6.612102,5.360664,8.145341,6.249790,1.887840,6.510263,3.603377,6.906108,8.686008,6.394298,4.551265,-2.397272,-8.811001,-9.021051,5.539831,-8.452885,-4.125207,7.157118,3.536089,7.963468,9.503663,-9.476041,8.186394,-3.063091,-1.967793,-6.030094,-8.808914,-9.332997,-4.967495,7.062165,8.364961,6.898225,6.752238,5.692316,-6.082330,3.385098,8.755867,-0.525963,-3.342261,1.247277,-1.742772,-7.214289,4.703082,7.528733,-1.646473,0.251879,-5.966734,6.004170,0.565320,-1.277832,0.553887,-7.933856,0.315716,4.697792,8.449643,6.373347,7.680950,4.017103,-2.563171,-4.402684,9.358380,4.420173,0.586200,2.909797,7.760974,-4.873591,-3.416526,-3.032201,9.963316,5.038398,-8.539147,-1.908926,-3.536861,-3.652761,-2.014383,2.842975,2.331868,-6.942608,6.686404,5.061647,9.118198,-6.729632,-0.091421,-9.830628,-2.107415,7.489057,-9.544598,-9.702256,4.569266,4.636823,-5.068412,8.681162,9.785862,-6.102206,8.237404,-1.183842,6.086301,-7.562527,1.585648,5.574644,-1.703026,-0.880311,-4.787871,-3.440048,-8.786839,9.482287,-4.483865,-0.085509,-7.324398,7.752775,-7.031177,7.880222,-0.170620,-7.891229,-8.284234,8.213171,-0.830026,9.608551,1.367088,-3.605220,1.947239,-2.440727,-1.930259,-9.451450,4.246353,-8.395259,7.487707,3.872343,-6.737211,8.665183,0.356274,6.025666,-7.154214,-8.938428,-1.642268,3.190892,-3.348148,-2.242014,-5.453765,-8.716080,-8.450602,-9.045383,-7.649688,8.871182,2.964621,9.402683,2.409944,-0.665630,6.622949,3.205090,7.683141,6.891952,-4.158484,-1.324698,-8.266275,-8.887191,6.496521,-4.621968,-4.168454,-0.133999,-0.125451,-1.749940,3.863294,-7.703919,9.282426,-1.399059,-3.842912,0.349845,4.096257,-9.795405,-6.109446,-5.497692,0.714545,2.747916,-6.442405,3.021737,7.045955,4.137764,-0.384126,2.228858,1.134837,-7.866174,9.279609,3.998126,2.677170,0.568335,-7.221113,0.065901,-7.126459,-2.716141,9.655933,-1.970040,8.628821,3.098963,4.989030,-3.331136,-3.473669,-2.200533,-4.139408,6.878140,0.010714,2.912438,-7.476442,1.417470,5.772601,-1.730323,5.037756,2.556934,-2.591675,-3.103835,5.858110,-5.458736,2.087135,7.715154,-7.636756,0.650027,5.087942,-5.193381,-2.032346,5.732138,5.882134,-5.457794,-9.023386,5.642828,-2.221463,-4.170972,-5.960230,6.568857,6.411159,9.084091,8.243799,-7.961277,1.360669,5.480847,-2.287947,3.650816,-6.487106,6.338718,2.172535,3.879140,-4.635596,8.173150,-1.524852,0.991784,-4.381593,-7.881360,6.290672,-1.973559,5.594715,-6.538067,-4.363323,0.256657,6.300191,0.200503,9.529842,-2.187777,-7.021677,5.928131,1.949007,2.433709,9.558471,4.092939,-1.849511,-2.812548,4.314572,7.251162,-5.695753,-9.194391,1.502977,2.483385,-6.272029,2.416290,1.798248,-6.011137,1.868473,-2.845430,9.040921,9.909650,-5.905712,1.891945,0.602608,1.578124,3.720977,5.380548,-6.401898,9.797386,0.592091,1.477317,8.056231,3.814602,3.005684,-4.476066,5.126289,-0.220179,9.068658,-6.540523,3.304770,-7.419355,3.200088,8.141216,-9.634763,9.368772,6.078467,9.758379,-2.298239,9.440427,-7.660893,-6.939419,-4.409358,7.884078,-0.859039,-8.456458,-3.922498,-3.356382,-6.583549,5.080389,-3.103880,-6.292878,6.720617,8.910311,-6.115221,-3.435727,-3.845007,1.841156,3.948074,-0.164874,-9.235286,9.381390,3.568705,-2.856685,-6.375737,7.813938,-6.629826,-6.422163,6.669751,9.065200,7.979005,-5.844259,-2.915324,-1.290608,2.465895,0.190989,4.752332,-0.482057,-8.054541,-2.341482,-4.513826,-8.233936,-8.088839,-0.951729,-4.041186,4.848887,7.107286,4.116525,5.834041,-8.882972,-1.693080,-7.750402,-1.251914,-5.830825,-4.650650,4.552998,-1.718479,4.655104,4.812166,-4.944712,-2.922163,0.350654,-2.865620,4.209290,-1.389469,-6.365949,-0.917705,-0.730397,4.946120,3.861916,1.349077,-8.721253,-9.879653,-1.005664,9.024815,0.867590,9.382193,-8.781551,4.325094,5.400831,5.784605,-4.945318,5.429298,-4.954031,-2.290720,-4.542928,4.539279,1.595395,-9.424040,3.482131,5.428511,5.063451,3.648492,-0.818835,-3.655075,-1.188076,0.633843,1.786876,0.519155,9.550051,4.794162,3.830924,-8.507809,3.062454,6.693149,-7.287472,4.796222,7.224323,5.057069,-4.736844,6.474130,3.819847,6.658911,3.719457,6.360867,-1.166968,-0.562386,5.399929,0.501822,-2.035352,7.539734,0.895216,-0.664394,5.632897,-3.739445,3.441536,-7.639653,-8.577429,0.743816,-5.059622,-6.356716,-1.406169,-9.821311,2.783973,-0.315103,-5.870799,-2.749968,-7.015714,-7.702071,6.051006,3.294417,0.022072,1.615395,-0.024109,1.988227,5.157897,8.614334,0.830702,7.072037,5.477652,-4.849747,6.725771,4.716758,2.014757,6.849594,-8.704301,-9.653853,-6.329672,9.568627,-6.268672,0.068362,-9.273202,2.645370,3.588072,-4.456195,-1.315663,-1.382634,-7.045811,-5.894626,-6.402201,-0.706211,-2.069868,-8.493602,-8.803128,5.547400,-0.594481,7.958747,-0.293133,-1.620789,4.820027,-1.067192,6.133107,-7.516692,3.575394,-0.877187,-5.071803,-1.529333,0.411468,-7.473071,5.379139,-7.933472,-8.284716,-1.109163,4.864257,-8.159580,-1.974566,-0.496461,-8.511807,0.903892,5.982193,6.856692,-7.091071,5.839504,-3.251137,7.037302,6.798552,2.636231,0.970251,-0.620754,7.924932,-5.664685,-6.740273,7.388371,6.987521,-5.548959,-6.548621,-3.736026,1.528751,-5.249827,8.372519,1.560067,-9.326169,7.965900,7.929868,-6.636993,-5.234700,-7.149418,9.030411,9.052142,-7.188598,-7.988423,2.649888,8.217921,-7.877474,-3.145326,6.302083,-8.577049,5.508716,-8.011647,-2.061336,5.084354,7.252427,4.927709,8.630568,7.114453,-3.576813,3.385864,-0.965067,-7.383904,-6.608022,7.626448,7.593526,8.869394,4.395522,4.819581,-5.305540,-4.221802,-5.906965,0.519234,5.151084,6.882187,-9.431200,0.442791,3.263035,4.050063,2.658600,2.972437,-4.711166,3.302581,-9.526946,9.001990,3.660173,-7.900075,0.783001,2.078037,-4.313332,-0.112469,7.812123,-7.495768,-3.929208,9.657438,-4.938934,-2.582498,1.154226,-1.510400,-0.060287,2.110702,5.604008,5.479276,2.492885,0.894817,2.851091,-3.248772,-5.188480,6.075404,-0.555914,-7.350202,4.472255,0.758960,-9.857920,2.259553,-2.798454,-7.497444,-5.384170,-7.481696,-0.956483,-7.617436,-4.346715,8.943271,7.827839,2.319748,5.643001,-6.403082,-2.488488,8.227417,0.765854,3.687445,0.914223,0.600269,2.226067,6.072166,-2.952693,0.154600,-9.688484,4.252885,0.891309,3.245715,-7.831751,1.881424,-6.017907,8.682913,7.295048,7.208222,-9.417635,4.084045,-3.432767,7.783189,-4.094890,6.900061,5.965799,-0.242502,6.200075,5.151973,8.232807,-2.169523,-5.437382,7.144956,-2.991491,-0.520574,7.127775,-5.329619,1.326031,-1.870460,-4.437044,-7.507554,-3.369887,-0.429241,5.126264,0.702745,0.068028,-5.653958,1.640087,9.428665,-0.263205,-2.902771,9.604611,4.626868,3.141089,-3.803941,-7.591983,0.270309,5.421797,-7.365420,-1.907552,5.405415,-3.207688,5.617056,2.464214,1.230479,-0.582955,-9.075651,0.894421,-5.815592,9.734853,-9.729886,-9.905475,5.433336,-1.104751,-7.375365,3.145137,-7.766624,4.899321,-1.088505,-6.849473,-4.030804,2.963626,5.953112,-2.176577,0.177301,-4.316025,6.139669,-1.526814,8.226819,8.820211,5.450209,1.130806,-1.414488,2.645517,-7.245565,-7.976460,-2.650874,4.697123,-2.647462,-2.771195,8.508643,-1.236879,5.420812,7.023044,6.431021,-1.790760,-7.239578,-6.227098,-9.965757,5.716884,8.349734,4.906897,2.178300,5.645275,-1.333871,-8.918062,1.314712,5.471240,5.913956,9.607487,2.158740,6.177966,6.424125,-1.755172,0.628036,-5.217018,5.536158,-9.070554,-5.529321,4.564130,6.570032,7.520363,-1.123340], dtype = "float32")#candidate|4038|(1232,)|const|float32
call_4037 = relay.TupleGetItem(func_3866_call(relay.reshape(const_4038.astype('float32'), [1232,])), 3)
call_4039 = relay.TupleGetItem(func_3869_call(relay.reshape(const_4038.astype('float32'), [1232,])), 3)
output = relay.Tuple([call_4020,call_4028,call_4033,call_4037,const_4038,])
output2 = relay.Tuple([call_4021,call_4029,call_4034,call_4039,const_4038,])
func_4046 = relay.Function([], output)
mod['func_4046'] = func_4046
mod = relay.transform.InferType()(mod)
output = func_4046()
func_4047 = relay.Function([], output)
mutated_mod['func_4047'] = func_4047
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_4065 = relay.TupleGetItem(func_3026_call(), 0)
call_4066 = relay.TupleGetItem(func_3027_call(), 0)
var_4094 = relay.var("var_4094", dtype = "float32", shape = (8, 11, 10))#candidate|4094|(8, 11, 10)|var|float32
bop_4095 = relay.less(call_4065.astype('bool'), relay.reshape(var_4094.astype('bool'), relay.shape_of(call_4065))) # shape=(8, 11, 10)
bop_4098 = relay.less(call_4066.astype('bool'), relay.reshape(var_4094.astype('bool'), relay.shape_of(call_4066))) # shape=(8, 11, 10)
output = relay.Tuple([bop_4095,])
output2 = relay.Tuple([bop_4098,])
func_4102 = relay.Function([var_4094,], output)
mod['func_4102'] = func_4102
mod = relay.transform.InferType()(mod)
var_4103 = relay.var("var_4103", dtype = "float32", shape = (8, 11, 10))#candidate|4103|(8, 11, 10)|var|float32
output = func_4102(var_4103)
func_4104 = relay.Function([var_4103], output)
mutated_mod['func_4104'] = func_4104
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4172 = relay.var("var_4172", dtype = "float32", shape = (6, 3, 7))#candidate|4172|(6, 3, 7)|var|float32
var_4173 = relay.var("var_4173", dtype = "float32", shape = (6, 3, 7))#candidate|4173|(6, 3, 7)|var|float32
bop_4174 = relay.mod(var_4172.astype('float32'), relay.reshape(var_4173.astype('float32'), relay.shape_of(var_4172))) # shape=(6, 3, 7)
func_2512_call = mod.get_global_var('func_2512')
func_2516_call = mutated_mod.get_global_var('func_2516')
const_4184 = relay.const([5.310234,8.485058,-9.406290,-4.175029,-7.569532,4.317548,3.026607,5.531094,-9.791054,6.705801,-4.887814,1.462689,-5.430830,-3.141481,9.420234,5.385670,-8.445418,-9.271951,-5.692283,-7.484769,-8.061438,-9.853687,0.009735,-0.833519,-9.756202,-6.548157], dtype = "float64")#candidate|4184|(26,)|const|float64
call_4183 = relay.TupleGetItem(func_2512_call(relay.reshape(const_4184.astype('float64'), [2, 13, 1]), relay.reshape(const_4184.astype('float64'), [2, 13, 1]), ), 2)
call_4185 = relay.TupleGetItem(func_2516_call(relay.reshape(const_4184.astype('float64'), [2, 13, 1]), relay.reshape(const_4184.astype('float64'), [2, 13, 1]), ), 2)
output = relay.Tuple([bop_4174,call_4183,const_4184,])
output2 = relay.Tuple([bop_4174,call_4185,const_4184,])
func_4186 = relay.Function([var_4172,var_4173,], output)
mod['func_4186'] = func_4186
mod = relay.transform.InferType()(mod)
var_4187 = relay.var("var_4187", dtype = "float32", shape = (6, 3, 7))#candidate|4187|(6, 3, 7)|var|float32
var_4188 = relay.var("var_4188", dtype = "float32", shape = (6, 3, 7))#candidate|4188|(6, 3, 7)|var|float32
output = func_4186(var_4187,var_4188,)
func_4189 = relay.Function([var_4187,var_4188,], output)
mutated_mod['func_4189'] = func_4189
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4204 = relay.var("var_4204", dtype = "int8", shape = ())#candidate|4204|()|var|int8
var_4205 = relay.var("var_4205", dtype = "int8", shape = (13, 1, 15))#candidate|4205|(13, 1, 15)|var|int8
bop_4206 = relay.right_shift(var_4204.astype('int8'), var_4205.astype('int8')) # shape=(13, 1, 15)
var_4212 = relay.var("var_4212", dtype = "int8", shape = (13, 2, 15))#candidate|4212|(13, 2, 15)|var|int8
bop_4213 = relay.logical_and(var_4205.astype('bool'), var_4212.astype('bool')) # shape=(13, 2, 15)
func_3301_call = mod.get_global_var('func_3301')
func_3303_call = mutated_mod.get_global_var('func_3303')
call_4217 = relay.TupleGetItem(func_3301_call(), 0)
call_4218 = relay.TupleGetItem(func_3303_call(), 0)
output = relay.Tuple([bop_4206,bop_4213,call_4217,])
output2 = relay.Tuple([bop_4206,bop_4213,call_4218,])
func_4232 = relay.Function([var_4204,var_4205,var_4212,], output)
mod['func_4232'] = func_4232
mod = relay.transform.InferType()(mod)
var_4233 = relay.var("var_4233", dtype = "int8", shape = ())#candidate|4233|()|var|int8
var_4234 = relay.var("var_4234", dtype = "int8", shape = (13, 1, 15))#candidate|4234|(13, 1, 15)|var|int8
var_4235 = relay.var("var_4235", dtype = "int8", shape = (13, 2, 15))#candidate|4235|(13, 2, 15)|var|int8
output = func_4232(var_4233,var_4234,var_4235,)
func_4236 = relay.Function([var_4233,var_4234,var_4235,], output)
mutated_mod['func_4236'] = func_4236
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2065_call = mod.get_global_var('func_2065')
func_2066_call = mutated_mod.get_global_var('func_2066')
call_4253 = relay.TupleGetItem(func_2065_call(), 0)
call_4254 = relay.TupleGetItem(func_2066_call(), 0)
func_1281_call = mod.get_global_var('func_1281')
func_1284_call = mutated_mod.get_global_var('func_1284')
const_4260 = relay.const([True,False,False,True,True,False,False,True,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,True,True,True,False,True,False,True,True,True,False,True,False,False,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,True,True,True,True,False,False,True,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,True,False,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,True,False,True,False,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,True,True,False,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,True,True,True,True,False,True,True,False,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,False,False,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,True,False,False,False,True,False,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,False,False,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,False,True,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,True,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,True,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,False,False,True,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,False,False,True,False,True,False,True,True,False,True,True,True,False,False,False,True,True,False,False,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,True,False,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,False,False,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,False,False,False,False,True,True,False,True,False,False,False,False,True,False,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,False,True,False,True,True,False,True,False,True,False,False,False,True,True,False,False,False,True,True,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,True,False,False,False,False,True,True,False,True,True,True,True,False,False,True,False,True,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,False,False,True,True,False,True,False,False,True,True,False,False,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,False,False,False,True,False,True,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,False,True,False,False,True,False,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,True,False,False,True,False,True,False,True,True,True,False,False,True,False,True,True,False,True,True,False,False,True,True,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,False,False,False,False,True,True,True,True,True,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,False,True,False,True,False,True,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,False,False,True,False,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,True,False,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True], dtype = "bool")#candidate|4260|(1848,)|const|bool
var_4261 = relay.var("var_4261", dtype = "int32", shape = (78, 2))#candidate|4261|(78, 2)|var|int32
call_4259 = relay.TupleGetItem(func_1281_call(relay.reshape(const_4260.astype('bool'), [6, 308]), relay.reshape(var_4261.astype('int32'), [156,]), ), 3)
call_4262 = relay.TupleGetItem(func_1284_call(relay.reshape(const_4260.astype('bool'), [6, 308]), relay.reshape(var_4261.astype('int32'), [156,]), ), 3)
output = relay.Tuple([call_4253,call_4259,const_4260,var_4261,])
output2 = relay.Tuple([call_4254,call_4262,const_4260,var_4261,])
func_4264 = relay.Function([var_4261,], output)
mod['func_4264'] = func_4264
mod = relay.transform.InferType()(mod)
mutated_mod['func_4264'] = func_4264
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4265 = relay.var("var_4265", dtype = "int32", shape = (78, 2))#candidate|4265|(78, 2)|var|int32
func_4264_call = mutated_mod.get_global_var('func_4264')
call_4266 = func_4264_call(var_4265)
output = call_4266
func_4267 = relay.Function([var_4265], output)
mutated_mod['func_4267'] = func_4267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_4284 = relay.TupleGetItem(func_1128_call(), 0)
call_4285 = relay.TupleGetItem(func_1129_call(), 0)
output = call_4284
output2 = call_4285
func_4317 = relay.Function([], output)
mod['func_4317'] = func_4317
mod = relay.transform.InferType()(mod)
output = func_4317()
func_4318 = relay.Function([], output)
mutated_mod['func_4318'] = func_4318
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1991_call = mod.get_global_var('func_1991')
func_1992_call = mutated_mod.get_global_var('func_1992')
call_4323 = func_1991_call()
call_4324 = func_1991_call()
func_1973_call = mod.get_global_var('func_1973')
func_1977_call = mutated_mod.get_global_var('func_1977')
const_4330 = relay.const([8,-3,-4,7,-1,-5,-4,9,4,-1,8,1,-6,6,-10,1,-9,-6,1,1,6,-3,8,10,3,-2,-5,-10,-3,9,9,3,4,1,5,-9,9,3,6,-1,5,4,8,10,-10,5,9,-9,7,8,3,-5,1,-2,-1,8,10,-7,5,10,-6,-7,2,8,6,-3,3,-1,-6,-3,-10,5,4,8,9,7,10,-10,9,-4,-4,-6,-5,-3,-2,7,9,1,4,-5,5,8,-5,10,6,1,-10,-9,3,-7,-10,8,8,5,9,3,-1,1,-9,9,4,-7,6,1,-2,4,-3,-3,2,-3,7,4,8,3,-8,-5,4,-9,10,10,10,-3,-8,4,-4,10,-4,1,-2,9,9,-2,-6,5], dtype = "int64")#candidate|4330|(144,)|const|int64
const_4331 = relay.const([[2,-3,-8,1,-4,-6,1,8,2,10,-3,4,-9,3,2,5,-9,-2,-7,-4,-9,9,4,-10,1,-10,4,2,-2,1,-2,-10,5,10,5,5],[8,-4,3,-9,-5,-9,-4,-4,5,2,2,-2,4,-10,-8,2,1,8,-1,8,-7,7,-9,-8,6,4,4,4,-8,6,9,1,6,-4,8,5],[1,7,-4,-4,8,6,-6,9,-5,9,5,-4,1,7,1,5,5,4,10,8,8,8,-6,-9,2,-7,-9,-7,8,-10,-8,-3,-8,2,4,5],[-6,7,10,5,3,-10,-2,3,-10,8,-9,-1,-7,4,-3,-3,-4,2,-6,7,-8,2,-3,-9,9,1,10,4,4,-9,6,5,4,-5,6,-10],[10,-4,6,-4,-5,-2,8,2,-3,-9,5,-1,3,9,-10,4,10,1,-3,10,1,-5,-5,8,-10,-9,3,5,-5,-5,-3,5,7,9,10,-2],[-3,-9,-3,-8,-6,-1,-4,6,3,4,-2,-1,-6,1,-2,-8,-9,3,6,7,6,-2,4,-10,1,3,7,-2,-6,9,-7,3,6,8,-5,1],[-2,-4,2,3,9,7,-2,9,4,-6,-6,7,-2,1,9,-3,-8,-7,-10,-6,-6,5,3,-6,3,-10,-10,1,3,3,8,2,10,6,10,9],[4,6,9,6,5,-2,-2,-8,9,-6,-7,2,-10,7,10,-7,-1,2,4,-3,2,3,2,-9,-3,7,3,-7,-8,4,10,2,4,-1,-4,7],[-2,1,4,-3,5,6,1,-3,-8,9,-6,-9,-7,-9,7,-6,-10,2,-7,10,-7,1,2,9,1,-7,-8,-7,9,5,-6,6,10,-10,5,8],[-10,9,5,1,-5,2,9,8,9,-5,-6,1,-8,-2,4,-4,1,4,1,-9,-8,-10,10,4,-1,4,-7,-3,9,8,5,6,5,-1,9,-3],[-1,-1,-10,2,-3,1,5,-7,-9,-8,4,10,5,-8,-1,9,-5,-7,-5,-8,-9,-8,-3,9,-9,4,-10,-5,-8,-9,-5,5,1,4,-2,4],[-1,8,-9,-4,3,-4,-6,9,-3,3,7,7,-9,-3,3,-6,2,-8,10,-9,-2,9,-1,2,-7,1,2,-1,7,5,3,-6,-3,6,-6,10],[6,-8,6,-3,6,8,-10,-2,-4,8,-8,2,7,-7,-3,-5,-4,7,4,4,4,9,-10,-10,7,4,2,-7,6,-6,-10,-9,5,-6,-6,10],[-2,-3,-9,9,-2,-1,10,7,-3,4,-5,10,9,-8,8,-6,-6,-5,3,-3,8,1,-4,-4,3,-2,1,8,-10,6,4,-10,-10,-7,2,7],[-4,10,1,4,-3,10,-8,5,-5,-6,2,9,-5,-2,6,7,-2,-5,2,-4,-4,1,5,10,7,-10,3,9,-6,3,4,10,-8,6,-4,4],[-9,10,1,5,-5,4,-4,4,-6,4,8,6,2,-5,-6,-4,4,-10,-5,2,10,8,1,-8,10,8,7,-5,8,5,8,1,-7,-10,6,2],[8,-1,-5,-7,-2,-4,-1,-10,-8,-6,-6,2,-6,6,4,7,10,-2,-9,-2,8,-10,7,-9,-4,-5,2,6,10,9,9,-8,7,8,3,-7],[-5,1,8,9,6,4,3,-3,1,-9,-1,-1,-10,-4,-8,5,9,-7,5,1,-2,-9,-5,10,-6,8,9,-8,8,-4,-3,2,-5,1,7,-3],[-6,-7,-5,-9,-7,10,8,-7,-8,-3,-9,4,-5,6,-6,-2,1,7,6,7,-3,-1,3,-7,10,5,-6,5,-4,5,2,-4,7,-7,7,8],[2,-3,9,7,2,9,1,-1,-7,-8,-6,-1,4,-7,5,3,7,2,7,-5,1,9,10,-10,-8,7,1,-8,10,-5,1,10,-5,-3,-2,-9],[4,7,-10,2,-7,4,9,-2,5,3,7,-5,-6,3,7,-10,-2,5,-6,-1,-8,-1,-7,7,2,10,-3,-2,-1,4,-10,9,3,-5,-10,4],[-3,6,-9,2,3,3,-4,5,-3,-5,5,-5,9,9,-8,9,1,-1,-8,-4,-4,-7,3,8,-2,6,-9,8,-5,-1,-2,-6,8,3,-10,-7],[5,5,-5,-3,5,4,2,-4,-9,-10,7,-3,-3,1,5,-2,-3,8,9,6,-1,-10,2,-2,10,3,-9,-2,-7,10,2,-2,-8,-2,-2,-10],[9,-9,-3,6,-4,1,-7,8,8,6,9,-5,-8,1,-5,4,1,9,-4,-9,3,-2,5,-4,9,10,-8,4,-2,-8,9,5,5,6,-8,-8],[5,1,1,10,7,-9,-7,-3,-9,9,4,8,7,-9,-6,-6,-6,-10,4,6,-10,-6,-7,7,1,5,-8,-5,6,-2,10,5,4,-2,3,-10],[4,-1,7,8,-4,3,6,8,1,-4,7,6,3,10,9,-1,9,3,-10,6,-4,7,-9,9,7,3,-3,5,-9,1,6,1,6,1,-7,-1],[8,-10,-4,-8,-4,-5,2,-2,5,-10,-7,-6,7,8,-6,4,8,-4,-4,-3,5,-5,8,-7,3,3,8,-3,-1,-8,10,3,-5,10,9,-10],[-3,-3,-4,-3,-10,9,8,-3,-10,5,3,10,7,9,-3,-2,6,7,-6,1,7,-5,9,-5,1,3,-10,-5,-10,4,-5,-2,-2,3,7,5],[3,10,-10,-2,-7,-4,-5,3,-5,-1,-3,-1,1,-4,-9,4,-1,-3,1,1,-10,6,-5,-1,6,-9,6,-8,8,-7,3,1,8,-4,-9,9],[-9,5,4,2,-9,-2,5,-3,-2,-1,2,10,6,-2,-6,-4,-6,10,-4,-1,-7,9,-1,-6,5,-9,-9,-8,10,2,1,-4,5,-6,-6,4],[-7,5,7,2,-9,8,9,-5,-8,-8,2,-5,-6,8,5,5,-6,10,4,-7,5,10,-3,-5,-3,9,5,-2,4,-4,1,9,-2,3,2,-8],[5,-1,5,1,-10,-3,6,-7,7,-7,1,-8,-6,-10,10,5,5,6,-3,10,-9,8,10,4,-7,6,9,-4,2,5,-9,7,-8,6,10,-5],[-8,-4,8,-4,1,6,3,-6,1,6,2,8,8,9,9,-7,-9,-3,-1,4,6,-1,-10,-3,8,3,-5,-8,-4,-3,5,7,-10,-8,7,2],[-2,2,2,4,-7,10,7,-6,-6,-3,-8,-2,-1,9,6,3,6,1,3,6,10,3,-3,-10,8,2,4,-4,6,-2,7,-10,5,9,-5,-9],[2,-6,-2,5,-8,8,1,-6,7,9,7,7,3,9,4,4,-9,2,-7,-3,-4,-8,3,3,-1,-4,-4,-10,6,4,5,-5,-10,-8,-3,-3],[-10,-3,-2,10,9,-4,4,9,-3,-1,2,-5,-4,9,-1,-6,3,3,6,-1,-9,9,10,7,-10,2,-6,-6,9,8,8,-1,3,-6,-9,-5],[3,4,-1,-7,-9,5,-7,6,6,5,9,-5,-2,-3,-10,-1,-2,8,-4,-6,-7,6,2,9,-7,-4,-4,1,1,-9,4,-8,3,-10,5,9],[7,-6,-9,-6,3,5,10,5,1,6,4,-4,10,-5,1,6,9,-6,-1,7,4,-1,-7,8,2,7,-8,4,-4,4,3,3,4,-2,-4,8],[8,-2,6,7,6,4,3,-3,-9,4,6,5,5,-4,-6,-6,-2,1,2,7,-2,-1,1,3,10,-1,3,6,-5,8,5,-6,-4,-4,-5,-4],[4,-1,9,4,-9,6,4,9,-6,-9,-1,-5,-1,1,2,10,-1,2,3,9,-2,4,-9,-3,10,-6,-8,7,-2,3,4,-1,-6,-4,8,3],[-10,-5,-9,-4,4,-3,-10,10,-1,-7,10,-1,-10,5,10,-9,-4,7,-7,-2,10,-3,-8,-4,8,5,9,4,10,-9,-7,9,7,3,-1,-6],[4,3,4,8,-7,2,8,-7,-7,-9,9,6,-7,1,-5,9,10,-1,9,10,2,-4,-10,-1,9,9,-1,3,3,-4,-5,-10,-4,1,2,-9],[-1,-7,4,-8,-9,9,4,-5,-10,-7,-3,1,-10,3,2,-8,-7,-6,2,-3,10,10,6,1,8,2,-9,-3,3,-2,-9,10,5,6,7,-10],[-1,-1,8,6,1,9,1,8,-7,-1,-1,4,-6,-3,10,-9,6,2,1,-9,-8,-10,-10,6,-9,6,9,-5,-10,5,-2,3,-4,3,2,6],[2,-10,-4,-2,3,-4,5,5,-8,5,5,-9,2,-4,3,6,-6,10,1,7,-7,6,8,9,-2,-5,2,-5,5,-3,-7,-4,5,7,5,2],[2,-5,-7,-6,9,-5,-5,-7,8,-9,-9,10,-8,-2,10,4,-1,-4,-5,9,-4,-7,3,-1,6,-7,-2,10,5,-2,7,-9,-5,9,5,-6],[-2,-8,-8,7,-9,-10,-5,-1,-4,9,9,2,-3,5,-8,-7,-5,7,-3,1,3,5,2,10,8,-9,-7,2,1,8,-10,4,-9,3,7,6],[-5,-8,6,5,9,-5,-5,8,6,-9,-10,-4,-4,-5,-10,1,-1,-4,-8,4,-3,4,6,7,-10,8,7,-1,10,-2,-6,-8,1,-5,-1,6],[8,3,4,5,4,3,7,2,7,-10,6,-1,9,4,7,-5,10,8,-8,7,6,5,4,-1,-3,6,-8,-4,3,9,10,4,2,5,4,-1],[-1,-4,-4,-6,5,-6,-8,-1,10,2,4,9,9,3,5,-6,10,3,-4,-1,-10,-9,7,3,10,7,-3,-7,2,8,5,6,-3,-1,8,3],[1,10,1,-7,-9,4,-3,-4,2,2,5,7,9,-2,-10,-6,-4,2,2,-8,-4,-2,-3,1,8,5,5,9,9,-10,-6,-3,7,-8,3,-9],[-8,7,7,7,3,-1,5,2,-3,5,3,2,1,6,-7,4,-7,-5,9,2,-5,2,-4,5,9,9,-8,-1,-10,-7,-3,10,-2,-4,8,-4],[-10,-4,5,2,-9,-7,1,-10,-4,-7,7,-6,-4,-1,6,-5,4,-1,-9,4,-3,9,-6,4,-7,8,8,-3,4,-3,9,-7,9,1,-10,-8],[-5,-4,7,2,8,-7,4,7,4,-10,-1,-6,-4,8,4,-4,4,-2,7,4,4,2,-1,-7,10,-8,4,-1,4,2,-5,9,-6,10,-4,9],[-6,-7,-1,-2,4,1,-5,-8,-2,-9,5,-6,-8,6,-1,-10,-7,1,-3,-8,4,-5,-4,10,-1,10,-6,9,-3,7,-10,-8,-4,-5,-4,4],[-4,7,-3,-1,5,-2,-8,-6,-8,4,10,6,-2,2,4,4,-4,6,-7,2,8,4,9,-8,2,8,3,7,5,-1,-3,8,5,7,-1,-3],[-6,-9,-6,-3,-9,2,5,7,-7,10,3,-1,4,-10,8,-5,2,-9,-1,9,-1,3,-10,-5,-1,1,5,-2,-10,5,8,2,6,-10,-2,-8],[-2,9,5,1,1,10,3,-8,-6,3,-4,6,4,10,7,-1,1,10,-7,2,2,5,-5,10,-7,5,-8,3,9,10,-1,6,2,-10,9,-9],[3,8,-9,1,-3,-7,-9,3,-4,-7,-3,-9,-1,5,10,-2,-10,-2,3,2,10,-5,10,9,10,-10,-9,9,7,-9,-10,9,5,6,3,-2],[-7,-1,6,2,-8,-8,-3,-6,-10,5,-9,-7,-6,-10,1,3,2,7,-6,3,-3,-10,5,7,2,-7,-6,5,9,2,-9,10,-9,-9,-9,-10]], dtype = "int64")#candidate|4331|(60, 36)|const|int64
call_4329 = relay.TupleGetItem(func_1973_call(relay.reshape(const_4330.astype('int64'), [9, 16, 1]), relay.reshape(const_4331.astype('int64'), [9, 16, 15]), ), 1)
call_4332 = relay.TupleGetItem(func_1977_call(relay.reshape(const_4330.astype('int64'), [9, 16, 1]), relay.reshape(const_4331.astype('int64'), [9, 16, 15]), ), 1)
func_3992_call = mod.get_global_var('func_3992')
func_3993_call = mutated_mod.get_global_var('func_3993')
call_4340 = relay.TupleGetItem(func_3992_call(), 0)
call_4341 = relay.TupleGetItem(func_3993_call(), 0)
output = relay.Tuple([call_4323,call_4329,const_4330,const_4331,call_4340,])
output2 = relay.Tuple([call_4324,call_4332,const_4330,const_4331,call_4341,])
func_4350 = relay.Function([], output)
mod['func_4350'] = func_4350
mod = relay.transform.InferType()(mod)
mutated_mod['func_4350'] = func_4350
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4350_call = mutated_mod.get_global_var('func_4350')
call_4351 = func_4350_call()
output = call_4351
func_4352 = relay.Function([], output)
mutated_mod['func_4352'] = func_4352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
call_4413 = relay.TupleGetItem(func_2771_call(), 0)
call_4414 = relay.TupleGetItem(func_2773_call(), 0)
output = call_4413
output2 = call_4414
func_4421 = relay.Function([], output)
mod['func_4421'] = func_4421
mod = relay.transform.InferType()(mod)
mutated_mod['func_4421'] = func_4421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4421_call = mutated_mod.get_global_var('func_4421')
call_4422 = func_4421_call()
output = call_4422
func_4423 = relay.Function([], output)
mutated_mod['func_4423'] = func_4423
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4453 = relay.var("var_4453", dtype = "float32", shape = (13, 11, 3))#candidate|4453|(13, 11, 3)|var|float32
uop_4454 = relay.acosh(var_4453.astype('float32')) # shape=(13, 11, 3)
output = relay.Tuple([uop_4454,])
output2 = relay.Tuple([uop_4454,])
func_4480 = relay.Function([var_4453,], output)
mod['func_4480'] = func_4480
mod = relay.transform.InferType()(mod)
var_4481 = relay.var("var_4481", dtype = "float32", shape = (13, 11, 3))#candidate|4481|(13, 11, 3)|var|float32
output = func_4480(var_4481)
func_4482 = relay.Function([var_4481], output)
mutated_mod['func_4482'] = func_4482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4317_call = mod.get_global_var('func_4317')
func_4318_call = mutated_mod.get_global_var('func_4318')
call_4550 = func_4317_call()
call_4551 = func_4317_call()
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_4612 = relay.const([0.469159,-2.751413,-0.143922,-8.929128,8.882668,-0.654485,-3.738409,-7.035853,4.541929,-9.923554,-4.780994,3.375290,2.403911,-1.989777,-5.795042,-9.744792,2.579678,3.454628,1.242977,-7.064543,-0.741486,-9.085235,-0.055545,7.878947,3.654015,8.203225,-0.839567,-4.913145,9.774505,-7.103067,0.180354,8.313848,7.031007,-3.601590,-6.552708,0.239963,3.305632,-1.582556,-2.297214,1.818648,6.782283,3.666635,-3.415178,6.724071,-4.952888,6.871373,-3.161286,4.357582,6.558554,-2.739148,-2.658668,-6.076328,-7.644561,1.659490,-6.726943,-4.115871,8.517862,2.621915,9.290048,7.915636,-2.585482,1.490483,-7.616693,-1.691906,-6.221900,2.610440,-7.728051,4.207134,-2.429772,7.908722,3.000030,-1.083161,-0.938594,-6.300221,-4.881188,1.417498,-0.119846,-1.128144,5.279636,-6.502096,4.400644,-5.135149,-2.216273,-0.447465,5.294621,1.904510,6.254475,0.702129,-9.832010,-9.049740,-2.621632,1.756107,-7.687019,0.997968,2.631232,-7.543813,2.076991,-1.829073,-6.585121,1.477954,5.293341,-9.012216,-4.262091,-2.056212,-6.622515,-6.841951,-0.628288,1.589154,7.479923,2.021922,1.276409,5.092605,-8.274253,-5.480090,7.007953,-4.318575,-1.180608,8.347030,5.973907,6.339832,-0.325228,-7.125237,-0.333200,-1.116235,-3.123451,-3.948748,0.909305,-0.386709,5.433401,-3.062720,-9.171465,4.211249,8.286079,-9.994716,-4.330443,-7.399711,8.501487,-4.469795,6.953264,2.745226,-6.976380,2.481758,9.722029,3.052204,-4.835469,0.139674,4.899915,4.130756,-4.338846,9.933253,-2.098762,5.640201,-2.035358,3.133623,-7.555111,9.731848,-6.547046,-9.841175,-6.761220,-7.978783,4.165815,-4.874764,0.840464,-0.926399,6.335353,-2.657774,7.050158,0.397776,0.649020,1.290838,0.743070,-3.826569,8.077729,1.899319,7.901178,-6.023036,-0.478305,2.695352,0.283249,5.692473,9.946333,-7.704132,4.833802,-5.769951,-7.357382,3.519675,-2.993451,6.290304,-3.796910,4.997144,-2.873235,1.944520,-4.305541,-4.369319,-4.646126,-6.734187,-2.422018,-4.545115,-6.977415,-8.628770,5.646835,-7.329970,-3.767623,6.266611,5.316391,-4.738596,3.966236,-6.002635,-2.801788,0.440878,-1.421359,-5.700841,-3.607679,-9.476994,3.071458,8.463236,-4.772104,-1.982210,7.501239,-6.075611,-0.288453,-2.327632,-3.107890,-6.206001,-6.310424,0.636326,6.561884,9.061043,-9.411683,1.635989,-3.599680,-2.134378,-0.124098,5.981534,5.050757,-1.303600,-8.803134,2.690645,8.200920,5.620603,6.267824,-0.733640,-0.817973,-9.720375,-2.600237,-9.942127,-9.591802,3.741670,5.305577,-6.798805,-1.273604,2.382576,0.834418,0.031073,-6.281682,-4.381214,7.242851,-3.481016,-5.355552,3.388056,-0.394292,-3.265739,-7.631907,-0.756240,-8.179928,-1.378905,3.292721,-2.001601,-5.707598,-9.112208,-1.208330,-0.097915,5.473842,-2.127064,1.762231,-7.647331,9.404674,-7.538053,1.001675,-5.564961,2.573913,-7.013201,-9.804276,-3.894907,9.425486,0.322458,1.325707,5.204324,-5.078075,9.474742,4.437947,-3.455093,-4.905359,3.081436,8.784331,0.793498,-1.503888,6.878890,-5.808320,-3.255031,-1.465056,-0.424055,2.259368,2.271489,7.285501,-0.575307,-6.315840,5.405826,1.918944,-1.074730,-6.968033,-7.845147,-6.331824,7.983124,9.110531,-6.664576,9.581896,4.493209,-9.758027,7.063026,8.028098,2.213196,-6.347361,-3.832931,4.612225,-4.581108,2.080147,-0.013067,-7.001838,-0.219970,2.993359,-2.320983,7.348319,-0.884521,-6.112775,1.781809,0.502734,6.276851,-2.882969,8.345120,2.940895,7.876986,-4.520004,-6.651207,-3.991457,-5.752770,1.569479,-0.421358,4.050461,-8.411311,-1.585145,6.992543,-5.286766,8.705183,0.100762,-8.790209,-8.937865,3.812016,-4.591738,-0.513670,-6.221474,-3.048332,4.994675,7.248442,1.922901,-7.401389,6.049657,9.501981,-4.768100,-3.820192,-1.385461,-6.964802,2.992964,3.560546,4.377907,-8.766332,6.520153,6.817992,0.508400,5.303351,7.908448,1.782278,7.699140,-2.778867,4.062856,9.396213,-3.135308,8.212838,9.485129,7.825817,-4.287133,0.658619,-3.505798,-6.140829,8.149876,6.406365,7.392369,2.875771,7.700350,-0.960952,6.858774,-5.422349,-0.069242,9.553337,6.193363,-2.836108,-3.556959,7.236969,3.927599,-2.360618,3.334675,1.663291,-6.559779,2.563583,-1.120350,0.684475,-2.360374,8.694513,3.444002,-8.869502,8.514391,-6.382521,-4.011579,7.180379,2.050573,-2.672448,3.165461,2.486759,5.848399,0.565590,-6.539143,4.380096,6.105039,1.655582,9.240462,2.521088,7.714028,-0.690583,8.888909,0.939622,3.580731,7.285694,5.957503,6.293597,1.432161,-6.191188,8.637049,-8.208270,2.195225,9.671484,-9.978892,2.334982,-1.449537,1.914724,9.066316,-8.738953,6.786081,1.328012,-6.221164,7.326205,-6.125708,9.760201,7.690664,-3.168856,-1.510688,5.985649,-0.006577,-8.357055,-6.595755,-9.755239,-3.501729,-9.730644,-0.394843,-0.404458,-5.257684,-2.429398,3.767027,-1.815024,-2.207692,5.156491,-0.043014,8.587173,-2.779753,3.438406,5.892639,-6.996237,-9.422367,9.518530,3.016303,2.127705,2.039104,-2.221958,-3.747120,7.919780,3.681496,1.957275,7.104297,-8.422976,-9.734629,-6.261444,6.533516,4.404076,-2.180726,-8.884006,-3.041960,6.936996,5.297227,-9.566625,6.227655,-9.450082,9.209082,-6.184616,-1.661078,-0.807999,1.487403,6.705423,9.954285,-4.135577,5.958638,3.992125,5.915551,-5.486327,-2.530022,-4.200964,-0.335996,-4.183455,-7.736294,6.250771,0.552748,8.865482,-7.004934,6.905624,8.128471,3.301133,-5.968041,-4.669535,-8.453953,7.918079,9.047684,-3.581234,-1.555211,7.667138,7.269027,-8.491260,-7.602044,4.984319,-9.406454,8.011492,7.836063,-8.309831,6.578744,1.967831,4.122748,8.213792,-5.104166,2.179439,-0.630921,4.236868,8.388692,8.043173,7.684995,-1.157310,1.125959,3.296789,1.954327,4.612733,-1.281842,-2.544109,8.417351,-1.871686,7.236205,-1.537256,5.439495,1.821867,8.190592,-2.932275,-6.601852,-8.836409,-0.833592,-0.384296,-4.155105,7.177250,-3.845617,-7.122214,2.748825,7.989661,-0.448960,-3.038333,5.110693,-1.764272,-4.938084,4.330979,-9.485220,6.107228,7.578752,-1.113978,0.735771,-2.612385,3.749413,0.111035,0.084960,8.660080,-8.423779,4.351942,2.698604,4.888256,8.122203,-3.132674,-6.077168,-3.084865,7.867797,4.648392,-5.928767,-3.745850,9.437951,-5.019517,-5.241632,-6.983040,-0.253494,-8.504929,-8.806740,8.033143,-6.164915,9.056786,2.185108,-4.554357,-7.293625,9.186706,7.687270,-4.306652,0.614556,-1.982969,-7.238402,7.237879,-8.912768,-3.771171,3.028238,-9.539756,-0.103502,-3.777624,-3.048001,-4.733705,1.793210,4.858562,-0.927347,4.055428,1.478278,2.166062,-2.756485,-9.966226,8.492932,2.378208,-8.213885,-6.462891,3.583134,0.382287,-3.289059,-7.198140,3.607235,-5.037933,5.529758,-4.100338,7.209214,-1.823172,-4.379742,9.922868,-3.653975,-4.555294,-4.920532,8.332951,1.399906,4.078982,-1.517512,9.773489,-2.840388,8.648326,2.108033,-0.239805,-5.210356,8.929417,8.373859,-0.253366,6.566456,-0.022817,8.254199,-5.995552,-1.553232,-3.600759,0.222150,5.398217,-6.038178,-4.627286,-4.493760,-3.637318,3.850118,1.685227,-4.087250,-5.017544,-4.981006,-4.239167,-2.925319,-1.113840,-3.462203,-7.440178,7.313121,2.425360,-2.163598,7.054419,-2.523603,1.794334,6.221441,-5.470087,-9.216758,-4.110355,-1.667350,1.653063,6.585060,4.876034,-6.816903,7.274070,9.636578,2.423878,-8.060062,-2.685135,6.105513,4.476339,-7.090747,-7.946657,-5.329980,0.230818,3.223046,-9.174308,6.205182,9.065889,1.159538,7.151156,8.591079,-8.436051,8.551955,1.205223,4.813783,-2.753548,-3.763248,-8.549797,7.495319,1.305414,-9.212441,2.309553,-8.643131,-6.829209,6.242536,-4.424092,-3.216705,7.096907,-7.542684,-2.178836,2.766760,1.818823,-9.344662,-1.346852,-7.321406,-6.513961,2.833769,-3.589775,-1.117359,0.534586,-3.958370,6.467370,2.312071,-0.170005,6.381946,8.281778,8.637589,-0.628379,-4.156299,2.233137,1.405187,-8.415066,8.857647,-2.983644,5.368439,-2.305333,6.314911,-2.650061,-2.584441,-8.971663,-8.378417,-3.587679,8.843516,6.045151,7.607253,-3.907277,-0.422382,-4.350212,4.863750,-4.010839,-9.386563,-8.577874,-2.389441,-5.126683,9.625161,-0.275880,-7.850073,-1.419963,9.110971,-0.343347,-5.885881,9.057898,4.815506,9.319380,-3.648642,3.996014,-6.031480,6.891472,-3.919626,3.672975,-7.603066,8.410306,-5.607630,-2.886462,1.764675,-7.135231,2.520124,3.488016,4.082549,1.084762,-2.230045,6.107073,-0.076000,7.921634,-9.996126,1.352201,-1.381171,-1.733527,-7.539486,-9.167044,7.791535,7.637981,6.965340,8.031660,5.298736,-1.994027,0.593536,-0.861875,-0.965661,-9.591042,-2.965645,-5.229924,9.762345,6.136308,7.689298,9.961110,0.420430,-8.353469,9.465633,9.229955,-8.195934,-3.343969,4.506641,-3.421993,-5.285864,3.892934,-3.186445,3.929409,-1.324715,4.649262,3.777511,-3.585222,6.408642,4.340480,-7.838821,-3.210194,-2.319074,-2.822298,0.941932,-8.837561,7.027407,5.139666,0.591499,7.703452,3.369549,2.696151,-3.400769,1.901422,-8.085207,-9.828366,-6.486487,-0.894647,-7.459773,-5.092370,8.132045,9.461327,-6.645726,-7.383917,-0.829654,3.478760,-0.584348,-6.145265,-6.587109,-3.669648,-7.250031,1.007903,9.857116,4.816791,-4.413829,-5.043083,-2.410714,8.931042,-8.458632,-2.513268,9.729943,-1.287125,0.930327,-9.750339,1.735397,-3.991748,-5.073016,-8.910881,4.636709,0.401563,4.736530,8.577392,3.454677,0.762846,-9.162347,-1.370081,3.084819,0.748211,2.327799,1.078828,5.451504,-1.743415,1.173461,7.654500,0.435265,6.693482,-0.992906,-2.010077,0.959908,6.051422,-7.788691,8.606030,9.516030,-3.239566,2.535042,3.392174,2.186998,-8.271517,-6.855168,-7.318031,-5.914291,-0.289212,-3.431612,-6.319400,-5.256553,-6.956365,-8.823207,5.337114,-9.756428,-8.890577,8.895566,-1.352451,-9.161843,8.044059,2.254391,-7.104734,6.440718,-4.455463,5.981629,4.008129,1.705364,-4.690080,-1.385073,9.925754,1.652625,-1.302828,7.173048,-2.187337,4.494685,-7.188972,3.830380,-3.054185,0.762772,-6.704847,8.556659,7.377248,4.672958,-8.318552,2.703500,7.860055,-5.700857,6.135438,-4.425013,0.578537,2.488572,-1.453354,-1.867202,-9.286200,-0.494555,-0.891863,-9.580655,-8.647123,-1.958463,4.283500,-7.745270,-9.855416,-3.894522,-0.362636,9.336426,-9.459052,5.727838,7.409564,3.004620,5.679734,8.637871,-8.020800,8.079595,5.580018,6.760757,0.020815,2.409496,-9.864481,6.725628,8.140340,-7.132593,-6.823053,-8.922756,7.974245,8.534765,0.326815,2.390486,-4.773507,-2.733085,-9.230914,1.942361,2.043254,3.530580,-1.449067,-9.173589,-3.702661,-3.249034,-7.730606,-6.427718,-0.237491,6.771115,-8.091118,2.190129,1.650072,9.617727,-6.715122,-0.837535,8.828239,7.506974,-3.726105,1.711157,8.754312,0.633642,1.553058,8.113136,5.847065,5.147818,9.147544,7.921916,4.495741,-1.351021,1.267857,0.962373,3.168855,-5.931912,6.314964,-6.222965,4.899269,-6.032754,8.190280,0.613773,-9.570551,5.797388,2.509657,7.443100,9.448134,-8.882895,-1.553048,6.885390,1.374484,7.838558,-2.371244,1.406183,-0.104550,-7.440604,1.597994,-8.437045,-7.225191,-5.921423,-8.776399,-9.914243,0.003745,-1.456948,7.788612,3.889082,-1.764822,1.766670,-2.298340,-0.521484,-8.310923,7.673138,-8.894767,-7.459894,2.565370,3.306593,-1.415932,6.439757,-7.050217,9.026292,1.688205,-3.632423,2.290914,-1.216177,-3.531492,-4.780282,1.838401,4.419958,-7.554557,3.485165,-4.653426,9.579054,-4.872075,-6.642285,8.142501,-9.878882,7.658971,-8.258490,-3.537584,-7.091545,9.369741,-3.218045,-9.563535,2.519487,4.442835,-8.918944,3.184968,-7.416312,-2.077917,-2.903679,-8.214244,3.715681,-4.406448,-8.805653,-9.828544,1.443187,-2.159305,5.113628,0.962149,6.007678,6.198023,-6.004587,2.768827,-8.198792,-9.609372,9.529893,-1.069247,-4.016519,-4.196626,1.346226,5.777707,2.983730,-8.603906,1.038116,0.908172,-3.048251,-3.407936,9.741872,5.764347,-4.840721,-4.802748,-6.472771,-9.228853,7.374181,-4.937641,3.832146,-3.316683,9.741874,5.878513,-7.097039,0.808304,4.842074,-6.944570,2.784347,8.344414,9.320640,-2.016728,-3.303756,-8.330763,4.132508,-4.232524,-2.109796,8.540592,-2.269730,-9.393440,5.501443,3.556289,-6.970728,0.317927,-4.932664,3.506702,3.382125,9.203895,-4.629520,4.930991,-5.093232,-0.321384,-8.306564,-6.857598,2.193443,-3.310334,-1.504186,6.793225,6.915830,2.925574,4.927151,2.664111,-5.513564,-1.657726,-5.461890,-8.855969,-9.063085,0.986316,9.126455,8.219690,0.063173,1.260375,1.865369,-8.439311], dtype = "float32")#candidate|4612|(1232,)|const|float32
call_4611 = relay.TupleGetItem(func_1309_call(relay.reshape(const_4612.astype('float32'), [14, 8, 11])), 0)
call_4613 = relay.TupleGetItem(func_1312_call(relay.reshape(const_4612.astype('float32'), [14, 8, 11])), 0)
func_1252_call = mod.get_global_var('func_1252')
func_1255_call = mutated_mod.get_global_var('func_1255')
const_4618 = relay.const([6.904592,1.728201,9.121674,2.761717,8.829086,-3.962746,5.078246,-6.635722,-6.389417,-0.104986,-2.990810,-9.732480,-8.772310,-5.947832,-6.771594,-3.315967,1.516013,1.856121,-3.819292,-4.747586,-5.541012,-3.731770,-3.783584,-0.198978,1.497286,-1.577061,2.797641,-5.982681,6.164749,9.747301,3.288070,9.664668,5.478885,2.923009,-5.236646,9.937422,0.743675,-0.385034,-4.063363,-4.268009,4.917200,6.996689,3.738826,-5.994572,5.273761,-9.024911,6.874021,0.654402,4.441246,-3.165615,8.752812,-8.335456,4.383553,-9.300737,9.395738,-1.136893,3.856515,9.287697,1.516793,-3.022613,5.583364,8.001553,-1.167363,4.078809,-5.584748,9.602265,8.560491,-1.546977,-6.038976,-0.748602,2.368834,-4.567185,0.536560,9.738440,7.294509,4.775045,-2.015066,-2.970447,4.591363,-6.945578,4.792295,6.217665,-9.560343,-8.805941,5.385979,-2.492295,6.406922,9.692389,9.073852,3.844220,-7.052818,2.638243,-7.143458,-1.510330,-2.499734,3.541816,-3.772947,-3.432613,-7.867884,-0.510740,-1.491946,-4.487833,7.006599,-2.231212,-8.949011,-7.971445,-4.487124,9.763875,5.740753,-8.618522,8.657715,6.625922,6.544736,-4.719648,-4.226111,5.352824,6.002324,-0.058568,8.627679,6.100695,3.046123,8.677720,-6.559372,-0.769090,-0.316016,3.404758,-5.870672,4.093920,-9.896091,2.571480,-8.041348,0.931565,-0.836191,7.284953,-1.173607,1.106746,-0.300095,1.569620,0.192166,-3.545667,2.613527,5.893791,-6.989254,5.469012,-9.957883,-6.818548,6.299519,8.936597,6.835661,4.406220,2.161534,5.579724,8.563955,-3.983623,-9.964029,-4.848249], dtype = "float32")#candidate|4618|(156,)|const|float32
call_4617 = relay.TupleGetItem(func_1252_call(relay.reshape(const_4618.astype('float32'), [13, 3, 4])), 5)
call_4619 = relay.TupleGetItem(func_1255_call(relay.reshape(const_4618.astype('float32'), [13, 3, 4])), 5)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_4635 = relay.TupleGetItem(func_2162_call(), 0)
call_4636 = relay.TupleGetItem(func_2163_call(), 0)
output = relay.Tuple([call_4550,call_4611,const_4612,call_4617,const_4618,call_4635,])
output2 = relay.Tuple([call_4551,call_4613,const_4612,call_4619,const_4618,call_4636,])
func_4641 = relay.Function([], output)
mod['func_4641'] = func_4641
mod = relay.transform.InferType()(mod)
output = func_4641()
func_4642 = relay.Function([], output)
mutated_mod['func_4642'] = func_4642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4350_call = mod.get_global_var('func_4350')
func_4352_call = mutated_mod.get_global_var('func_4352')
call_4688 = relay.TupleGetItem(func_4350_call(), 0)
call_4689 = relay.TupleGetItem(func_4352_call(), 0)
uop_4691 = relay.sin(call_4688.astype('float32')) # shape=(1, 1232)
uop_4693 = relay.sin(call_4689.astype('float32')) # shape=(1, 1232)
output = relay.Tuple([uop_4691,])
output2 = relay.Tuple([uop_4693,])
func_4697 = relay.Function([], output)
mod['func_4697'] = func_4697
mod = relay.transform.InferType()(mod)
mutated_mod['func_4697'] = func_4697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mutated_mod.get_global_var('func_4697')
call_4698 = func_4697_call()
output = call_4698
func_4699 = relay.Function([], output)
mutated_mod['func_4699'] = func_4699
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4317_call = mod.get_global_var('func_4317')
func_4318_call = mutated_mod.get_global_var('func_4318')
call_4782 = func_4317_call()
call_4783 = func_4317_call()
output = call_4782
output2 = call_4783
func_4787 = relay.Function([], output)
mod['func_4787'] = func_4787
mod = relay.transform.InferType()(mod)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4787_call = mutated_mod.get_global_var('func_4787')
call_4788 = func_4787_call()
output = call_4788
func_4789 = relay.Function([], output)
mutated_mod['func_4789'] = func_4789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3992_call = mod.get_global_var('func_3992')
func_3993_call = mutated_mod.get_global_var('func_3993')
call_4796 = relay.TupleGetItem(func_3992_call(), 1)
call_4797 = relay.TupleGetItem(func_3993_call(), 1)
output = call_4796
output2 = call_4797
func_4801 = relay.Function([], output)
mod['func_4801'] = func_4801
mod = relay.transform.InferType()(mod)
output = func_4801()
func_4802 = relay.Function([], output)
mutated_mod['func_4802'] = func_4802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2460_call = mod.get_global_var('func_2460')
func_2461_call = mutated_mod.get_global_var('func_2461')
call_4828 = func_2460_call()
call_4829 = func_2460_call()
func_3901_call = mod.get_global_var('func_3901')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_4840 = relay.TupleGetItem(func_3901_call(), 4)
call_4841 = relay.TupleGetItem(func_3902_call(), 4)
output = relay.Tuple([call_4828,call_4840,])
output2 = relay.Tuple([call_4829,call_4841,])
func_4848 = relay.Function([], output)
mod['func_4848'] = func_4848
mod = relay.transform.InferType()(mod)
output = func_4848()
func_4849 = relay.Function([], output)
mutated_mod['func_4849'] = func_4849
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4903 = relay.var("var_4903", dtype = "bool", shape = (7, 13, 13))#candidate|4903|(7, 13, 13)|var|bool
var_4904 = relay.var("var_4904", dtype = "bool", shape = (7, 13, 13))#candidate|4904|(7, 13, 13)|var|bool
bop_4905 = relay.logical_and(var_4903.astype('bool'), relay.reshape(var_4904.astype('bool'), relay.shape_of(var_4903))) # shape=(7, 13, 13)
func_2321_call = mod.get_global_var('func_2321')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_4949 = func_2321_call()
call_4950 = func_2321_call()
func_3116_call = mod.get_global_var('func_3116')
func_3117_call = mutated_mod.get_global_var('func_3117')
call_4961 = relay.TupleGetItem(func_3116_call(), 2)
call_4962 = relay.TupleGetItem(func_3117_call(), 2)
func_3866_call = mod.get_global_var('func_3866')
func_3869_call = mutated_mod.get_global_var('func_3869')
const_4979 = relay.const([[5.568228,-6.335681],[8.378809,-3.629042],[7.833627,3.777281],[3.290943,-5.691573],[5.771870,-1.911772],[2.317505,8.163303],[8.618926,-7.833298],[5.612627,9.666977],[3.428220,-3.753116],[6.629676,7.131141],[8.527451,-8.451777],[7.435803,-5.614188],[4.100839,6.214932],[-0.548255,-9.693135],[3.043811,2.496798],[-0.058852,-1.745032],[-0.336416,1.825595],[4.082903,-9.264624],[0.558138,3.506330],[-8.610208,8.696596],[-7.762058,-7.979544],[7.902583,-3.137562],[9.265287,0.415097],[-4.504193,4.879232],[-7.011050,-5.488945],[-6.778801,-7.277626],[6.395749,-1.266548],[1.951113,9.071214],[-9.501092,-7.714468],[-1.344719,-4.753824],[-2.375301,-5.451868],[2.267094,5.746478],[-9.786183,4.164542],[3.855783,-6.086952],[3.987098,-7.549880],[-3.329195,-9.837271],[4.230919,-6.365200],[0.476109,-4.489857],[-4.114480,-5.222973],[-6.051582,0.363494],[-4.687486,9.758547],[-0.830989,-7.108718],[-5.167212,-7.780450],[7.982481,3.410412],[4.351622,-4.681824],[7.375120,-5.847288],[0.236263,8.498555],[-3.190537,-2.135667],[-1.401896,-3.073891],[2.580339,-0.589432],[9.328626,-9.689000],[-3.350149,-3.668330],[5.179165,-3.380432],[1.921757,-8.365447],[-1.988095,-6.675265],[-0.171007,6.492997],[2.472249,0.538828],[-5.636931,-5.303089],[-2.531770,-6.101489],[1.294861,-2.968484],[-5.781323,9.932315],[2.748402,-3.426109],[3.570963,8.063540],[-1.473988,-2.253490],[-2.311539,-0.489616],[-4.511071,2.295356],[-6.929983,8.606643],[-9.773366,-7.901760],[-8.462423,-9.006774],[-6.839183,8.574460],[4.303030,5.070135],[2.013499,5.662500],[-7.331158,1.221305],[8.799656,7.905824],[-5.355124,9.353927],[1.371190,0.005164],[9.607567,3.223884],[8.514947,0.920527],[4.091196,-8.836706],[1.298122,7.191312],[0.178707,-0.477753],[9.138836,-2.624180],[-1.576316,-8.811913],[-7.639089,2.763519],[2.419509,0.452555],[-0.887282,0.739559],[8.823111,-0.308777],[-7.426579,-9.190230],[-0.169206,-8.548687],[5.932053,-9.713263],[-2.250884,7.288040],[-3.100377,-6.719517],[6.850902,-1.489086],[-8.668765,-8.271913],[8.278390,-6.030904],[-5.667445,-8.792570],[3.179587,-0.169412],[3.713904,-6.503425],[4.633157,-9.238173],[3.528548,7.662524],[-5.002633,-0.072509],[6.448024,6.977328],[5.570475,-7.429329],[-5.316979,9.008899],[8.595033,-2.195273],[-6.238971,-3.882332],[-6.869782,2.717493],[9.576898,1.917567],[4.121208,7.759001],[-2.219956,0.459522],[-2.081002,9.248237],[-2.599859,0.337687],[-5.630186,8.152921],[-7.103739,-3.926351],[-4.427393,-7.839792],[-0.545608,-9.441664],[7.608378,-9.154664],[-2.310109,-4.618150],[-5.375257,2.662806],[-1.790329,-2.077951],[3.838772,6.905770],[-4.162693,-5.493495],[7.371838,-1.855849],[-0.657900,3.810350],[-5.825191,3.927915],[-9.687836,-3.598834],[2.098122,4.969244],[-7.977440,-3.330905],[6.444023,7.780050],[8.576237,2.498581],[9.337029,-0.499837],[-4.291348,2.483541],[-1.709874,1.945253],[-9.233689,9.917755],[3.332774,5.843015],[-3.027133,4.594641],[0.881656,1.152815],[6.310750,-3.744132],[6.859888,-4.014198],[-5.788989,-5.052052],[0.620394,7.757569],[8.638890,0.283723],[-2.176427,-6.797029],[9.081027,-5.965277],[4.956265,5.051156],[-3.342892,0.141042],[4.395188,1.583285],[3.382936,-3.603128],[6.673718,2.089948],[-1.244031,-6.964872],[6.585997,0.206854],[-7.812326,-2.813301],[-1.404200,-6.325416],[2.786283,-4.314189],[-2.606715,-7.499291],[5.486463,-2.669171],[7.408335,-7.456064],[-0.474370,-6.037962],[3.824760,-0.907865],[4.422693,0.954374],[8.147848,2.087767],[7.312521,4.112941],[5.396699,-9.871101],[-3.635343,-9.803069],[-7.799156,4.898528],[6.050381,-9.126950],[5.970390,-3.544971],[1.992086,-5.747370],[-6.839911,8.660521],[3.859631,9.542036],[9.441504,-8.134156],[-3.334346,0.144957],[1.102228,8.731665],[-7.583813,3.308128],[3.060337,-5.703341],[-6.527612,4.031716],[-6.203413,-8.897290],[8.317503,6.182398],[9.711817,-7.855499],[-9.855080,-8.609513],[-6.027354,-4.203475],[-2.452324,-5.662502],[1.824528,-9.187674],[-4.160144,-9.110533],[2.987896,-7.088050],[-8.300458,8.149351],[8.366818,3.333381],[0.203141,2.992776],[-4.294986,-5.016673],[-6.331130,-1.324611],[0.912911,4.729742],[-6.817179,9.902329],[-2.219140,-3.099122],[7.591201,1.199326],[1.862842,-8.578600],[-9.682153,-3.612633],[9.921280,2.272300],[3.343572,4.252696],[7.267749,-8.073991],[1.674220,9.328221],[-1.069249,-7.381908],[8.488013,-0.036976],[2.764512,8.647758],[3.837225,-2.548098],[-7.450566,-0.333408],[4.214153,-3.435528],[-0.295133,-2.396456],[-2.157761,6.903984],[9.308053,-5.007860],[5.093494,5.176553],[4.938696,3.845373],[-7.462149,1.244945],[9.285160,-0.796718],[-3.262203,4.027811],[-0.492051,-1.908307],[0.810554,1.115308],[1.459187,5.385892],[-4.476290,1.608109],[3.367165,-2.364235],[-6.272359,-9.526442],[3.033830,-3.009761],[-8.637949,-7.017282],[6.021446,7.154997],[7.847577,3.055480],[9.287830,6.720916],[0.951253,3.842319],[0.154944,-1.096288],[-2.149592,-2.913517],[-1.693347,3.853946],[-6.554277,0.389133],[-2.324061,3.536042],[3.856042,-5.616853],[9.383409,-3.994857],[8.286678,-6.794827],[-7.734941,-2.456154],[4.323063,-2.894287],[-8.194488,-9.433983],[-7.755037,-8.400505],[3.501413,-8.291984],[7.261763,9.109415],[-9.884323,7.132718],[7.850539,1.977733],[4.919606,-3.483971],[-5.244654,-0.390803],[-0.317088,9.687197],[-0.444553,5.001777],[3.363564,-7.386518],[8.735754,-4.952747],[9.752803,9.610257],[9.216601,-3.132338],[-7.776389,0.393245],[-2.298397,1.704543],[9.617911,5.332914],[6.652825,1.256789],[-6.322806,6.467934],[4.554432,7.449365],[2.244038,9.095097],[4.437268,7.646462],[4.622029,-4.292060],[-4.499964,-3.175612],[5.512034,5.506132],[5.881547,2.597414],[-6.732632,7.530203],[-0.805806,3.159560],[5.154696,-4.182117],[-9.744593,-2.424166],[6.223171,4.282660],[7.694339,1.609742],[5.331007,0.427944],[0.855918,-8.973581],[8.659081,7.464525],[1.084218,4.129969],[7.496188,3.863554],[-5.518378,6.632109],[2.766736,3.537971],[9.285778,1.142262],[-4.713818,6.950347],[9.287177,7.130558],[2.379658,7.138600],[6.058775,1.070038],[-7.003385,5.561356],[-6.795361,-2.400119],[7.721246,-2.969536],[-4.902200,-6.419695],[-6.487968,-7.935528],[7.887426,-2.127962],[-7.046576,4.172114],[3.808109,9.618158],[-6.720712,-9.036913],[7.466071,-6.009305],[-6.927907,8.832285],[-8.934560,9.994805],[3.733714,-4.892076],[-6.077718,3.066813],[-7.861069,-4.345463],[8.335644,-8.497227],[-2.932870,9.054876],[6.489206,2.460570],[-4.063956,7.573280],[-4.425561,-8.605546],[-6.481447,-4.815808],[5.015147,-6.768195],[5.933463,3.379536],[-5.703016,-2.015547],[-8.027284,-5.937192],[7.885528,-4.959175],[0.748003,-2.737613],[-7.837134,6.974956],[9.930628,7.701694],[-9.902741,4.244316],[1.270234,-4.773948],[-9.253360,-8.853385],[-1.047705,-3.574823],[-8.522618,-2.258566],[-7.504268,3.028866],[8.766654,-0.579915],[6.567338,5.200884],[5.464433,3.683039],[-0.459895,-8.458315],[-2.795612,7.591419],[5.728898,-1.811355],[-6.719333,7.984231],[8.581724,-6.313253],[-8.559691,8.095436],[-0.427576,5.415726],[3.771865,-7.731414],[-7.752174,-4.713690],[-8.230171,-5.868916],[-6.737033,7.466538],[6.330201,0.418826],[-1.923621,6.523398],[-0.158894,-8.149620],[9.469066,-1.373059],[-6.077779,-0.337736],[0.972768,0.537006],[9.183793,-2.640459],[-9.827378,-9.318939],[-0.332180,-1.791299],[7.846721,0.438960],[-0.184903,6.318014],[1.319136,9.235775],[-8.384820,5.647281],[-3.181103,2.635464],[-8.181120,8.289609],[-4.965043,-5.527396],[-6.307036,3.113460],[-6.019773,4.692627],[-9.105894,-1.522549],[5.158800,4.775484],[-0.005579,0.424871],[8.415603,-1.278665],[-2.320243,-6.613838],[3.698081,-7.755608],[8.564641,-2.317249],[-7.223220,-1.953561],[-4.795390,2.122618],[-7.822149,0.351417],[5.458536,-8.739974],[-4.405409,-1.623545],[-1.539755,2.288833],[6.891559,7.449238],[8.353233,-3.757140],[-6.194543,-3.690452],[0.179903,-0.774050],[-4.164563,-2.284358],[-0.937552,-7.753068],[7.920771,-6.648954],[7.617514,-1.585004],[7.649702,7.125089],[9.522328,-4.920502],[-4.773198,-7.327215],[-1.684405,-6.799258],[-0.154636,-4.238296],[7.274482,3.381227],[7.792646,-0.955887],[2.552168,2.246875],[7.253174,0.630556],[-0.495951,-0.073453],[-8.155901,1.815556],[3.217895,0.242015],[-1.440461,-1.445949],[-0.925346,6.296006],[0.032499,-4.636110],[-1.246212,4.826803],[-4.682568,-7.622467],[6.592912,-7.321907],[5.264125,-8.340177],[0.987809,-5.284139],[-4.568454,6.305093],[5.429375,-2.417075],[-7.071723,0.376138],[1.155846,-8.983398],[-1.290589,-9.617133],[1.972711,6.025148],[-5.600901,0.548832],[-1.545091,-1.054619],[9.613865,6.841129],[-5.110402,4.844587],[9.129920,7.326430],[-7.879215,-6.179783],[-2.829245,-7.810635],[0.427627,-3.828509],[0.783607,5.768017],[6.757389,-1.138890],[9.518488,7.883371],[-4.308053,5.175670],[-4.991493,-0.053794],[-3.875041,0.774573],[7.838395,2.731355],[6.078061,9.387161],[6.539193,-7.439757],[-9.555925,4.713858],[4.373007,0.816901],[-6.177633,0.161524],[3.980383,6.422389],[-3.058499,-4.421808],[-1.779646,4.812242],[9.140019,-3.254243],[7.197842,1.653103],[-0.049049,-4.588970],[-7.062512,7.384405],[-7.049049,0.741664],[-3.775740,4.653545],[6.699045,-5.656910],[7.234600,0.247917],[-5.103666,-5.832615],[5.323032,2.592089],[-2.957102,8.856349],[4.293196,8.202369],[6.569223,9.958871],[8.684934,-8.208566],[-4.059001,-7.325680],[-5.106965,-0.605553],[-2.201132,0.930992],[8.200619,2.425661],[-4.691411,-4.025259],[5.627253,7.462791],[-7.622961,-3.909350],[9.624600,-8.710750],[1.940255,-8.842726],[-3.852645,3.798017],[4.650637,-7.371348],[7.781346,-3.099512],[-9.538323,-2.892922],[4.477570,-5.788199],[-8.285834,8.043565],[-1.996858,-7.324886],[7.276316,8.292255],[2.939025,-9.838073],[5.702797,1.208567],[-2.870115,-2.923509],[-7.080507,-0.058083],[-6.444235,1.352683],[1.662204,5.127691],[-6.462174,6.489488],[-1.816648,-0.956174],[8.698253,-1.128119],[2.283913,-4.653451],[6.391277,7.669003],[9.999828,3.320536],[-4.069279,-6.096407],[-7.789736,7.821857],[1.961243,-5.682769],[-7.680548,-6.752740],[0.863095,-0.864577],[-0.387337,-2.883717],[-8.212038,-5.683209],[4.401682,2.781235],[-2.964173,0.181005],[2.747434,-5.206529],[8.755089,-4.918486],[9.323451,-3.585604],[0.814045,4.577442],[6.831668,-5.410684],[7.965919,7.034808],[-7.830477,7.146608],[-1.338883,8.182185],[6.174002,0.245288],[-7.620911,-3.029102],[-0.970495,-7.970622],[-1.186979,3.820044],[3.604148,4.925955],[-0.008835,2.251419],[4.811653,-1.304138],[3.784564,-1.962943],[2.420805,-4.750121],[4.467510,4.118329],[6.373752,-5.149930],[9.078153,7.350919],[9.184474,-2.081601],[2.498197,-7.773537],[-1.161401,-9.885217],[2.563841,-8.838271],[-4.180422,-4.074655],[-2.324289,0.622575],[-0.709659,6.066915],[-2.765254,-3.527094],[6.901815,8.330438],[9.473366,1.113250],[-3.465914,4.025201],[-1.928954,-6.989555],[-6.058812,9.063535],[-5.801480,-7.344241],[-3.144926,2.104596],[-8.135754,-9.815753],[-4.352538,-9.589639],[9.341835,3.649152],[-8.956337,2.389012],[-8.204425,5.782315],[7.760901,4.061092],[-0.108482,-4.144507],[1.926868,3.818164],[5.916830,6.589962],[8.839770,4.445310],[-6.620322,9.694894],[-9.114096,2.210744],[-8.988329,2.979671],[2.173871,-7.656387],[6.111142,-4.704705],[-7.288599,-1.346147],[1.819343,0.701035],[-6.013691,-3.977174],[0.051641,7.270966],[-5.839887,-4.667849],[3.860629,-2.743013],[2.405039,-2.171401],[1.665236,4.264220],[-2.517807,-9.399174],[-4.298344,5.689752],[-8.445972,3.059280],[8.096855,4.940159],[5.535723,-5.431864],[-4.063890,-7.295423],[3.933049,-9.419627],[2.348533,-0.921822],[8.422302,-4.312855],[-2.515224,-6.169480],[8.684544,-6.908087],[-1.494596,-9.216775],[-9.043379,3.179534],[-1.060715,-8.204620],[-4.318823,-3.526878],[-4.748462,-4.134577],[5.612844,9.897726],[-9.044527,8.655723],[1.032583,-8.267519],[2.448686,-9.829893],[0.714785,-8.450720],[2.910925,-1.421761],[1.424460,2.322083],[0.836771,-3.850684],[-3.912218,3.039946],[6.902308,-0.641753],[-0.913053,0.595080],[-4.388562,1.793437],[0.124256,7.083161],[-5.253567,-1.265387],[-9.278468,-1.507006],[2.857414,1.952390],[-9.113079,-8.929959],[5.104144,5.185937],[0.336064,9.877730],[-6.241865,-1.240714],[9.105300,-8.379127],[1.850563,8.442669],[-0.499095,2.247529],[-5.401004,-4.266785],[8.305215,6.319640],[2.370600,2.114016],[3.485016,-2.666874],[5.675115,9.376508],[-6.333194,8.028353],[-1.001888,-4.298618],[-4.892830,9.102784],[-9.657774,5.025863],[-0.785688,-8.108522],[1.072988,7.803596],[-1.392768,-3.408067],[-3.012798,-0.782977],[7.004038,-8.629721],[7.108124,3.845689],[-3.167796,-5.413901],[-1.617934,3.830404],[-6.354291,-3.602022],[0.238126,-4.156141],[-9.463457,1.642309],[-7.927578,7.360400],[7.274004,-9.227482],[-7.906042,-3.908770],[-4.328125,8.257423],[4.273626,7.102476],[-0.340792,8.582965],[2.748130,-5.386668],[1.199416,-2.655201],[0.484464,2.234479],[3.095811,2.441909],[6.566905,3.556054],[0.079041,-4.510002],[9.458820,-6.154077],[-8.468568,7.232319],[-6.036179,0.888418],[2.168220,7.699279],[4.330850,-2.985873],[-4.060842,1.171830],[7.884442,2.709817],[3.308929,1.162351],[-8.078128,5.008474],[-5.817712,-6.142531],[-4.146524,-2.127929],[-2.851537,-5.843628],[-0.783283,-8.606255],[6.305196,0.441610],[-2.077653,7.906192],[-7.640329,-8.929255],[-7.404722,7.905270],[-1.488007,0.457395]], dtype = "float32")#candidate|4979|(616, 2)|const|float32
call_4978 = relay.TupleGetItem(func_3866_call(relay.reshape(const_4979.astype('float32'), [1232,])), 5)
call_4980 = relay.TupleGetItem(func_3869_call(relay.reshape(const_4979.astype('float32'), [1232,])), 5)
func_2628_call = mod.get_global_var('func_2628')
func_2630_call = mutated_mod.get_global_var('func_2630')
call_4990 = relay.TupleGetItem(func_2628_call(), 0)
call_4991 = relay.TupleGetItem(func_2630_call(), 0)
output = relay.Tuple([bop_4905,call_4949,call_4961,call_4978,const_4979,call_4990,])
output2 = relay.Tuple([bop_4905,call_4950,call_4962,call_4980,const_4979,call_4991,])
func_5000 = relay.Function([var_4903,var_4904,], output)
mod['func_5000'] = func_5000
mod = relay.transform.InferType()(mod)
var_5001 = relay.var("var_5001", dtype = "bool", shape = (7, 13, 13))#candidate|5001|(7, 13, 13)|var|bool
var_5002 = relay.var("var_5002", dtype = "bool", shape = (7, 13, 13))#candidate|5002|(7, 13, 13)|var|bool
output = func_5000(var_5001,var_5002,)
func_5003 = relay.Function([var_5001,var_5002,], output)
mutated_mod['func_5003'] = func_5003
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3116_call = mod.get_global_var('func_3116')
func_3117_call = mutated_mod.get_global_var('func_3117')
call_5059 = relay.TupleGetItem(func_3116_call(), 0)
call_5060 = relay.TupleGetItem(func_3117_call(), 0)
output = call_5059
output2 = call_5060
func_5108 = relay.Function([], output)
mod['func_5108'] = func_5108
mod = relay.transform.InferType()(mod)
mutated_mod['func_5108'] = func_5108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5108_call = mutated_mod.get_global_var('func_5108')
call_5109 = func_5108_call()
output = call_5109
func_5110 = relay.Function([], output)
mutated_mod['func_5110'] = func_5110
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5135 = relay.var("var_5135", dtype = "uint64", shape = ())#candidate|5135|()|var|uint64
var_5136 = relay.var("var_5136", dtype = "uint64", shape = (9, 7, 4))#candidate|5136|(9, 7, 4)|var|uint64
bop_5137 = relay.less_equal(var_5135.astype('bool'), var_5136.astype('bool')) # shape=(9, 7, 4)
func_3139_call = mod.get_global_var('func_3139')
func_3140_call = mutated_mod.get_global_var('func_3140')
call_5140 = relay.TupleGetItem(func_3139_call(), 0)
call_5141 = relay.TupleGetItem(func_3140_call(), 0)
func_2628_call = mod.get_global_var('func_2628')
func_2630_call = mutated_mod.get_global_var('func_2630')
call_5145 = relay.TupleGetItem(func_2628_call(), 2)
call_5146 = relay.TupleGetItem(func_2630_call(), 2)
func_1608_call = mod.get_global_var('func_1608')
func_1610_call = mutated_mod.get_global_var('func_1610')
call_5155 = func_1608_call()
call_5156 = func_1608_call()
output = relay.Tuple([bop_5137,call_5140,call_5145,call_5155,])
output2 = relay.Tuple([bop_5137,call_5141,call_5146,call_5156,])
func_5159 = relay.Function([var_5135,var_5136,], output)
mod['func_5159'] = func_5159
mod = relay.transform.InferType()(mod)
mutated_mod['func_5159'] = func_5159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5159_call = mutated_mod.get_global_var('func_5159')
var_5161 = relay.var("var_5161", dtype = "uint64", shape = ())#candidate|5161|()|var|uint64
var_5162 = relay.var("var_5162", dtype = "uint64", shape = (9, 7, 4))#candidate|5162|(9, 7, 4)|var|uint64
call_5160 = func_5159_call(var_5161,var_5162,)
output = call_5160
func_5163 = relay.Function([var_5161,var_5162,], output)
mutated_mod['func_5163'] = func_5163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_5175 = func_1121_call()
call_5176 = func_1121_call()
func_3058_call = mod.get_global_var('func_3058')
func_3059_call = mutated_mod.get_global_var('func_3059')
call_5177 = relay.TupleGetItem(func_3058_call(), 0)
call_5178 = relay.TupleGetItem(func_3059_call(), 0)
output = relay.Tuple([call_5175,call_5177,])
output2 = relay.Tuple([call_5176,call_5178,])
func_5182 = relay.Function([], output)
mod['func_5182'] = func_5182
mod = relay.transform.InferType()(mod)
mutated_mod['func_5182'] = func_5182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5182_call = mutated_mod.get_global_var('func_5182')
call_5183 = func_5182_call()
output = call_5183
func_5184 = relay.Function([], output)
mutated_mod['func_5184'] = func_5184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1429_call = mod.get_global_var('func_1429')
func_1430_call = mutated_mod.get_global_var('func_1430')
call_5216 = relay.TupleGetItem(func_1429_call(), 0)
call_5217 = relay.TupleGetItem(func_1430_call(), 0)
func_973_call = mod.get_global_var('func_973')
func_977_call = mutated_mod.get_global_var('func_977')
const_5219 = relay.const([[7.257996,5.327688],[-9.093054,2.630328],[0.192400,2.667887],[-6.313885,5.084165],[7.366858,-7.659763],[-1.783983,-4.869102],[-5.646960,6.256283],[0.488597,1.140455],[8.903352,-1.629883],[-9.237041,-7.942728],[-5.035501,-7.508189],[3.059525,1.438033],[4.250218,-4.663972],[-1.001009,-4.465218],[-8.310946,3.137961],[-9.113417,-4.445464],[6.745959,-5.565211],[-5.789561,0.116458],[-5.426615,0.984257],[-2.081838,-5.881490],[-9.842872,9.540969],[-2.518961,2.234715],[7.630082,-4.675637],[7.892232,4.614588],[8.928673,3.010540],[-8.706326,-2.159674],[-0.086277,2.147627],[-0.431876,-7.165240],[-3.011100,9.575808],[1.730481,-5.444525],[3.988036,1.621777],[7.715133,1.915126],[-2.547376,8.402937],[-3.289735,6.941983],[2.040484,6.478270],[-5.291970,4.759652],[9.409625,0.464721],[2.677901,-3.790963],[-4.898960,-2.860990],[-5.515969,-1.915292],[-1.997526,-5.133208],[6.390650,5.329213],[-1.213918,-7.223631],[-0.428128,7.460674],[-5.223124,6.452825],[-9.397221,-6.038362],[1.357626,5.647719],[4.150511,-9.478057],[3.788257,-9.130613],[-0.235684,7.531214],[-0.622465,3.100679],[9.788116,-5.798873],[-9.548555,-5.429918],[0.867068,3.459533],[9.164962,6.782451],[5.001118,-2.950867],[-9.234142,6.905689],[-6.819523,6.702623],[2.117984,0.264412],[5.017512,-1.746434],[6.239276,3.188810],[-1.522557,4.703435],[0.087623,-8.291872],[-4.102631,2.171449],[4.582542,4.895127],[6.569069,-3.520618],[-7.664458,-6.342830],[2.578505,7.363410],[9.851743,-7.601441],[5.399536,7.648570],[-4.985139,8.160228],[-2.735429,2.026326],[-3.003869,2.412409],[4.806738,-6.485172],[7.656756,2.575174],[2.057848,-2.912876],[2.988232,-2.816669],[-2.541118,3.542186],[3.115441,-8.591106],[7.560959,4.140751],[-3.327849,-7.602340],[-8.671331,9.692386],[4.200385,4.146023],[4.047738,1.601422],[-1.740998,-4.972663],[9.041884,7.045620],[-2.312649,-9.413817],[7.270052,4.957674],[-6.573868,2.577551],[-8.125244,-0.673722],[3.137036,0.934644],[1.237630,-6.089982],[-5.762078,8.132417],[-0.490959,9.072761],[-3.321016,4.416197],[7.698145,7.305766],[-5.741527,6.463309],[-6.443680,-8.089162],[0.267687,-7.408416],[-2.404287,-2.165350],[6.249340,-9.781201],[-0.910512,0.495816],[6.825620,-0.887219],[9.805288,-6.708849],[-6.400663,5.237967]], dtype = "float64")#candidate|5219|(105, 2)|const|float64
call_5218 = relay.TupleGetItem(func_973_call(relay.reshape(const_5219.astype('float64'), [5, 7, 6]), relay.reshape(const_5219.astype('float64'), [5, 7, 6]), ), 1)
call_5220 = relay.TupleGetItem(func_977_call(relay.reshape(const_5219.astype('float64'), [5, 7, 6]), relay.reshape(const_5219.astype('float64'), [5, 7, 6]), ), 1)
output = relay.Tuple([call_5216,call_5218,const_5219,])
output2 = relay.Tuple([call_5217,call_5220,const_5219,])
func_5231 = relay.Function([], output)
mod['func_5231'] = func_5231
mod = relay.transform.InferType()(mod)
output = func_5231()
func_5232 = relay.Function([], output)
mutated_mod['func_5232'] = func_5232
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_5271 = func_2236_call()
call_5272 = func_2236_call()
func_2979_call = mod.get_global_var('func_2979')
func_2982_call = mutated_mod.get_global_var('func_2982')
var_5280 = relay.var("var_5280", dtype = "bool", shape = (1848,))#candidate|5280|(1848,)|var|bool
const_5281 = relay.const(-9.219120, dtype = "float32")#candidate|5281|()|const|float32
call_5279 = relay.TupleGetItem(func_2979_call(relay.reshape(var_5280.astype('bool'), [1848,]), relay.reshape(const_5281.astype('float32'), []), ), 2)
call_5282 = relay.TupleGetItem(func_2982_call(relay.reshape(var_5280.astype('bool'), [1848,]), relay.reshape(const_5281.astype('float32'), []), ), 2)
output = relay.Tuple([call_5271,call_5279,var_5280,const_5281,])
output2 = relay.Tuple([call_5272,call_5282,var_5280,const_5281,])
func_5290 = relay.Function([var_5280,], output)
mod['func_5290'] = func_5290
mod = relay.transform.InferType()(mod)
var_5291 = relay.var("var_5291", dtype = "bool", shape = (1848,))#candidate|5291|(1848,)|var|bool
output = func_5290(var_5291)
func_5292 = relay.Function([var_5291], output)
mutated_mod['func_5292'] = func_5292
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5298 = relay.var("var_5298", dtype = "float32", shape = (9, 7, 12))#candidate|5298|(9, 7, 12)|var|float32
uop_5299 = relay.sinh(var_5298.astype('float32')) # shape=(9, 7, 12)
uop_5306 = relay.asinh(var_5298.astype('float32')) # shape=(9, 7, 12)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_5310 = func_2923_call()
call_5311 = func_2923_call()
uop_5318 = relay.log2(uop_5299.astype('float64')) # shape=(9, 7, 12)
func_4046_call = mod.get_global_var('func_4046')
func_4047_call = mutated_mod.get_global_var('func_4047')
call_5323 = relay.TupleGetItem(func_4046_call(), 4)
call_5324 = relay.TupleGetItem(func_4047_call(), 4)
uop_5326 = relay.exp(var_5298.astype('float64')) # shape=(9, 7, 12)
bop_5329 = relay.minimum(uop_5306.astype('uint16'), relay.reshape(uop_5326.astype('uint16'), relay.shape_of(uop_5306))) # shape=(9, 7, 12)
uop_5340 = relay.atanh(uop_5318.astype('float32')) # shape=(9, 7, 12)
func_749_call = mod.get_global_var('func_749')
func_753_call = mutated_mod.get_global_var('func_753')
const_5351 = relay.const(-1.050868, dtype = "float32")#candidate|5351|()|const|float32
const_5352 = relay.const([5.927715,4.465982,6.269036,-1.567556,-7.325372,3.032014,-4.554496,5.482103,3.568032,8.207224,5.558373,-2.299441,1.570143,6.991182,4.392141,-9.174394,-7.916932,1.102084,-9.654259,2.271312,7.725519,1.603378,-6.037270,-8.585776,6.243937,-6.477068,-5.829778,9.500345,-7.264114,8.041818,6.761357,-8.820707,1.433185,9.146844,3.005470,-4.967986,3.866400,-6.339992,-3.650769,-4.379319,-1.293002,4.366781,8.122026,9.230847,4.148031,1.447727,-3.090202,-1.717152,5.535534,4.432326,-8.241988,-3.071890,1.325049,6.460781,7.634037,0.017824,3.759942,4.232929,-9.288722,-9.072743,4.977360,-2.189582,4.355664,7.850517,7.613978,-5.634049,-9.576629,2.454619,8.437111,1.792813,-4.069441,8.528464,5.168427,8.982313,2.198279,5.128396,7.894414,-5.880690,4.593074,-9.925710,-9.400703,-6.497962,9.931220,9.663369,1.008536,8.029116,7.565667,0.685235,4.175695,-5.657891,-0.661118,0.947275,-9.790043,-4.858768,3.393317,-7.389918,3.588846,-5.299207,-8.111382,-6.442316,7.035832,-5.489900,-7.296345,7.243073,-6.068641,-7.837638,-5.863290,-7.470676,9.512580,-6.448310,8.272020,-1.349453,1.532390,8.937470,-1.308498,6.528539,-6.177736,3.338673,8.886438,-7.719796,-7.019978,-8.542619,1.803563,5.938632,-3.742498,7.868952,-7.788436,-1.705332,4.952909,-5.131724,3.412404,2.769221,4.881288,-2.650150,0.152746,-4.832146,7.955092,-5.780157,2.661200,5.693663,6.140546,-2.933912,6.219185,-0.478154,-4.148916,-0.767089,-4.944075,6.071291,-7.152823,1.091322,5.768675,-8.478635,-0.099809,8.226321,-0.767351,8.002751,2.123530,-9.287499,4.914791,1.421051,3.865907,3.180788,5.420062,7.744077,5.803568,-8.651521,-7.083288,5.554432,2.072190,-0.022041,-6.908447,-1.761296,3.936080,-9.231629,1.905129,3.406557,7.068311,-7.495831,7.925440,3.674042,-7.175645,9.466526,-0.904501,-4.563894,1.027231,6.012525,-0.698322,-9.933731,-5.966241,-1.781892,-0.161026,-2.445150,3.405592,2.738415,-2.264550,1.043428,-6.275474,8.322095,1.848422,-4.905948,4.540681,-5.569567,6.086062,6.187113,6.710225,2.278694,1.577420,-6.481166,1.029677,-7.705035,-0.132789,-1.707483,-7.065459,2.603907,2.808643,3.290084,1.676852,6.842561,-5.732830,0.699464,-1.495408,1.459776,-5.455943,-8.040716,7.498999,-2.104338,-2.563744,-1.958268,-6.129013,6.436922,-8.854482,-1.398664,-1.775310,-3.441426,1.310298,7.335843,4.810175,3.439983,-0.880043,3.511872,-5.312902,8.459402,-1.887836,-8.143597,1.668151,2.559158,-8.797567,0.656193,8.992268,4.753699,8.779368,-1.657898,4.563131,2.943594,-9.263773,-5.412195,-2.176406,4.513117,6.724531,0.382695,2.510530,-4.531429,9.144819,2.242531,-2.272262,9.542231,9.871056,-2.445433,6.963188,-0.020685,-5.503237,4.135580,-0.933263,0.104561,-3.642855,-7.054173,5.275303,3.823312,-9.603093,3.018329,4.255051,1.559729,3.943968,3.576695,7.855786,-3.625195,-7.584184,-8.421767,-8.472493,9.552881,-7.731883,5.242687,-3.465922,-2.652099,4.454173,9.982504,-7.560588,5.962055,-9.929123,1.696044,-2.632553,1.875311,7.275460,5.850293,-1.307849,-8.313329,-9.779329,-4.579299,-8.050927,2.694777,1.087789,-6.401904,2.695818,6.925244,-1.776806,0.737845,-9.874653,-0.277298,-9.759604,4.173166,-4.349765,-5.091317,9.777260,1.803591,9.233209,9.138752,-6.078116,0.163376,7.545840,7.633306,4.034333,-8.393398,-9.307979,9.701407,-2.059703,9.885080,-2.531366,8.376015,-5.730968,9.904671,-4.751840,-1.491250,-4.100760,-9.044969,-4.646165,2.152896,6.665425,0.259114,-7.367806,-0.340998,-2.065878,1.087397,6.354729,-5.442937,-7.248497,-3.217283,4.630065,0.502332,-3.695305,6.158948,4.564132,-8.859284,8.881015,-3.203233,-4.603690,-3.867646,-0.603247,8.366473,1.529920,-8.210485,4.036998,-7.161703,9.323095,-6.552869,4.289713,1.446669,-3.757357,3.067876,8.615768,-7.720727,7.282433,-1.782859,-7.969759,1.853645,-7.730722,0.061520,-8.164106,-2.216529,3.112232,7.669080,-4.452870,-1.899549,-8.412318,-5.417819,6.189836,1.608478,-7.122040,7.359945,0.385189,-5.870696,-2.274311,9.443357,4.599541,-2.287312,-5.323790,7.585546,-7.032643,-9.800978,-1.007381,3.591695,1.347387,-9.445606,-3.501320,-9.799805,-2.788437,9.360484,0.789152,-8.401078,-2.700159,6.009431,-2.782983,-2.537432,-3.808682,-3.272974,5.207159,2.673833,-1.592301,-3.892632,5.207697,9.135020,5.773574,-3.088582,6.586924,7.987712,0.747649,5.931346,-5.337893,2.025454,-8.995130,9.398930,5.934510,-4.985090,-3.735045,-3.949327,0.579619,8.645178,0.102501,7.764320,-6.465340,-0.996769,-7.552205,-7.682761,8.494463,9.669902,0.167267,-2.230723,2.648340,-3.467187,4.555232,3.238230,-4.234403,-2.649874,-2.182770,5.581129,-6.568820,3.210905,3.573285,4.280312,7.854076,-0.412845,0.725620,6.978066,8.121299,-8.435341,-4.443808,3.503854,7.215648,-1.617818,-2.640796,-9.634812,-1.576438,5.214163,6.099465,-2.316668,4.207096,6.344200,4.124963,-3.811976,7.147141,-3.180214,-4.555969,-7.722003,5.072002,-9.212470,-9.483613,-5.170013,-5.979305,-9.570852,8.844581,-0.924684,3.976978,7.616714,-4.851530,6.292476,7.369387,8.540573,-5.006449,1.384807,1.703264,9.575841,-9.781807,-8.419131,2.985310,8.799220,1.441522,1.218118,9.548340,-9.530831,-1.217726,4.930946,4.723882,-2.941287,3.857826,8.587436,2.835711,-2.813190,-5.797592,-0.979019,-1.017406,-8.619724,3.668797,-3.521913,4.857262,-5.951182,5.642506,6.486773,-0.203317,-4.844715,3.957697,-5.192095,-9.903682,-8.913112,0.082404,-9.257015,-2.703002,-2.176847,-0.987319,0.153365,9.604796,-6.920916,9.082365,7.712324,5.883412,3.278754,5.635977,1.079840,6.994164,-2.441450,-6.875603,-0.889432,-1.067200,-9.573127,2.801794,-6.919612,0.519836,4.530442,-1.596692,-6.260069,-8.490165,-3.913395,-4.542212,3.354521,1.008505,-3.048810,-6.085709,8.290466,1.427904,-9.918097,3.775075,1.619358,3.893203,0.887277,0.327239,7.036253,-8.104088,7.296163,9.985920,-8.056879,0.530068,-5.487878,7.212308,-3.544183,3.323473,1.874838,3.761828,3.117765,-8.014658,-0.379720,-8.048045,1.744092,4.473087,8.805703,-8.548590,9.190333,9.832654,4.591396,9.300552,4.872274,-5.875053,1.491575,-9.460400,-5.066824,-1.974371,-3.967015,-2.130860,8.268572,0.277628,-5.806380,-5.525114,7.803480,0.903171,-4.448543,-7.862622,7.607323,-5.170560,-3.636185,7.363068,0.224099,3.069358,8.131809,-0.112423,2.292135,9.117507,6.471594,1.854482,4.669154,2.352455,-7.774150,-0.483971,9.540993,-6.124251,6.307607,-8.206434,7.080704,-8.567634,-5.420857,1.560104,-3.020422,1.811419,-7.668648,-3.170226,-4.933610,3.091566,1.490108,-2.041456,9.112951,-3.168302,8.943060,8.402208,-4.984248,7.883394,-2.552522,-2.892616,9.633132,-6.093421,9.436240,-6.744622,4.107373,-2.908780,8.449495,0.905926,8.100841,1.321919,-5.292990,-3.377743,-7.793164,9.907699,-3.568287,-5.383561,-7.569806,-9.045619,8.775907,7.747296,-1.127157,-4.020432,-6.156868,-7.158280,0.683247,-7.904214,0.804689,3.268598,-8.893014,-3.478443,-6.377386,5.833006,-9.334861,-5.217210,-8.433852,-3.695684,5.382644,-6.596386,-6.174823,-1.546624,-4.872273,7.920840,8.654582,9.995615,-4.417947,-1.138384,-8.194701,5.891392,6.264144,2.096883,8.042604,2.240399,-1.077184,-3.605815,-6.082869,-0.818189,-0.830130,-5.821011,-3.352234,1.528229,-1.192434,-7.314229,4.119573,0.760504,0.841065,-8.619151,-4.464313,-3.183640,4.248378,6.755161,6.036385,-4.734450,4.776303,9.751830,1.234795,-2.280237,-0.796956,-6.425219,-9.682035,9.522654,-0.485422,-4.937633,3.991105,6.874000,-1.696325,-1.599811,9.442361,0.266602,-8.884277,-3.802825,3.223072,1.229460,9.642704,-9.249099,5.093764,-9.847663,7.362992,-5.070626,8.466709,-3.991208,-0.796575,6.204412,5.598583,-9.021323,0.331220,3.739872,-9.592551,-8.090096,4.972229,6.738379,-3.141661,-4.844481,1.389055,-9.422100,8.801162,-0.064605,-1.437534,0.010580,-4.954159,2.199576,-2.036678,-6.886530,9.918298,3.230086,5.784187,5.883789,-8.931700,-7.544060,-5.889502,-5.022078,5.086144,7.838054,-5.509015,4.166362,-8.291888,-0.172716,-0.619144,1.219436,8.567043,-3.781180,-8.721867,7.769317,3.825141,-7.779308,-3.628211,2.676737,1.691678,1.549636,8.411777,-6.588658,4.711632,1.711958,7.945555,6.842638,8.213775,-5.909028,7.741901,-7.759841,9.905298,-9.210899,1.009780,5.574481,-4.371122,-5.184844,4.828967,-6.194420,0.096668,-4.508479,-4.112019,5.623154,7.192609,6.549593,1.585085,-5.898513,-0.582153,6.200677,-8.625740,-9.079245,2.811795,6.086827,8.322446,-2.686832,9.428768,-3.350837,-2.246773,6.081812,4.872867,3.303622,-1.731223,1.124350,-4.257408,-0.547041,9.474432,-5.343027,6.326153,1.868684,7.031500,4.402541,8.190212,-5.146440,8.007067,7.718463,2.007017,-5.629776,-0.209383,-6.332997,-2.911224,-8.459586,-1.909925,-0.401166,-1.440444,-3.067168,6.346810,-7.564166,6.484392,7.082101,-1.991964,6.093603,1.584782,9.787518,3.381939,-2.058797,-0.074654,7.601470,8.860405,-5.520766,-6.580449,7.428782,-5.142287,-2.366545,9.591361,-4.792673,-9.761185,6.199539,5.989351,-1.561420,-1.561045,-5.771451,8.880176,2.761837,-4.602038,-7.126155,3.678916,-8.630110,6.794832,1.734474,-7.465548,-6.786461,-9.687577,-7.074025,-6.289652,-9.697616,-1.058802,5.854765,8.613791,-6.445688,-1.342506,-1.852154,9.924755,2.803034,4.981262,4.994397,-7.770803,-5.958408,6.154139,2.898440,1.376995,-5.228720,-8.315712,3.386232,2.508679,6.454492,-5.041836,5.736135,5.201939,-7.305284,9.507053,-5.918340,5.913912,-8.954549,-4.169232,-0.050590,-0.212148,2.832661,-3.886510,-6.653909,-1.373191,8.874659,7.333290,-9.132320,2.420278,0.520485,-5.890217,0.518774,-0.520396,-7.741234,1.723235,8.510898,-1.184063,-7.051274,7.882665,-1.420898,3.330480,8.913614,-1.373215,2.426671,-5.144704,-0.851398,-0.135878,2.778746,-1.390953,1.852469,-8.530708,8.269711,7.426207,-7.920900,-4.477186,7.839557,-0.801465,-4.817875,-6.148410,6.313793,-8.209024,-4.054795,4.577993,9.821274,5.853876,8.339765,4.592608,-2.705595,-7.520940,-6.732860,5.543289,-6.670428,-3.362408,-5.157460,-4.109785,8.808160,-9.479862,-3.316286,3.069161,1.778221,-9.719600,6.449607,4.797104,7.723365,-9.663910,-7.248134,9.408877,0.926978,0.037347,-0.880639,2.317889,-6.801581,0.377782,2.949187,-5.666699,-3.355938,4.561542,0.523390,6.446092,0.082499,-3.624961,-2.843728,-2.973487,9.045115,8.365865,-9.572855,3.415737,-8.884260,3.111235,-7.078704,-8.836996,-8.566669,-7.286483,-0.848629,-0.460895,8.405118,3.209893,-1.173648,8.021103,0.169252,-1.794764,-2.892797,-6.109996,-5.755910,-9.507349,-4.958653,0.646661,4.997868,-7.077441,-5.798775,2.197342,3.353688,4.560992,-2.945826,2.592013,3.418673,6.305642,7.520944,6.160575,1.100646,-4.756077,-6.285311,8.329011,7.295887,-0.263408,-0.325818,2.752737,-4.482484,-8.549662,-5.042027,6.939057,4.951143,1.255495,-2.194465,-7.619808,-6.859750,6.120707,9.612774,-4.395851,-5.229097,-6.945547,-1.976802,-9.537384,-8.750921,-6.633175,-0.662361,-0.407550,-2.809577,2.709876,-7.014777,8.780264,-2.461431,-3.605684,5.402721,0.776474,9.368555,-5.679720,3.730159,-2.146058,7.959163,-8.178429,-6.865358,4.442786,-7.522697,-5.179925,0.680714,-6.070683,-8.749224,3.650444,9.415969,-9.265244,-4.277659,7.634476,7.647432,6.050475,-2.347684,8.502294,-3.192027,0.088748,6.628759,-0.312409,8.926244,-5.893499,6.503428,4.446441,-0.618787,8.020111,6.643684,5.879653,-3.935632,2.383864,-6.543614,-2.963037,-2.459353,-2.005765,4.752225,-0.100108,3.160259,-9.625480,-8.328126,5.960524,4.139686,5.547376,9.049922,-2.560928,9.976703,-5.523607,-2.306480,-1.637395,3.524261,-6.886380,2.881920,8.290281,0.514446,8.712683,-9.122223,5.429281,1.035396,-8.781415,0.323553,8.652697,-6.603698,-7.994496,-8.207535,4.287373,0.085119,-3.981899,-7.385793,7.659467,9.864311,0.844265,-7.163093,-5.071426,4.767828,-3.467984,7.357585,2.327609,-4.919254,-8.424953,5.080446,-2.232909,3.820171,4.890943,-2.950492,5.899656,-6.198533,6.415333,8.057397,-0.239822,-4.317838,7.105324,-1.748152,-1.295789,5.760450,7.167562,-3.664343,9.388853,-4.156190,-5.847849,-3.418462,6.542674,-8.999966,6.390147,-1.968159,1.652158,-4.176423,-5.421234,1.180026,3.472221,2.561443,3.768830,-6.354970,9.348345,-6.662503,-5.738241,4.790499,5.284162,-9.847897,-9.458916,-8.069413,-6.499138,-9.454043,-0.096788,0.394644,-2.802100,-1.001721,-0.249710,3.665966,-9.522575,5.512153,-5.421694,-7.534455,3.250376,-4.992333,5.645381,9.544692,7.182364,-9.445626,6.387517,-6.028206,-9.395999,-1.258301,8.630396,-6.736371,5.124305,-8.148115,-3.922806,4.885524,-2.186721,7.953305,-3.061965,1.810508,3.151054,4.186005,7.216195,-5.819402,0.913014,-0.829472,-9.138485,-5.422587,5.199300,8.932468,5.006493,6.244048,-1.259286,2.487481,6.290546,6.483831,-9.207939,4.764552,-1.129157,0.137597,-6.252463,-1.935043,-8.381633,-0.479043,-7.295976,9.078939,-0.781914,3.288111,-9.858228,-4.738502,9.231667,-5.531631,-8.612911,5.531501,3.433473,-2.110016,-3.188336,6.107640,9.160105,-3.212241,0.838613,3.021938,-8.403959,4.824666,6.878583,-9.972297,2.296662,-1.807916,1.197725,-4.565966,-1.335044,-8.436877,5.957976,8.257146,-0.819151,-5.443481,-7.860903,0.823253,-0.874633,1.581927,-3.231573,-9.998121,-2.034104,-0.642326,-6.837978,-8.845768,1.626655,-8.761414,-7.687602,-8.527650,2.915578,0.435449,-9.593092,7.358308,6.525615,9.523532,-2.612100,6.337370,-2.652957,-5.686715,-8.058469,-1.000424,-3.077453,-3.267894,-7.217434,7.092117,-2.069078,2.417737,1.581947,1.212957,9.939393,6.120504,9.302502,-1.879877,-3.246107,-1.020447,-8.544820,-6.408535,4.161163,7.179177,7.949299,-0.024470,5.098645,6.740348,-6.676418,1.999337,4.752697,7.577609,5.456654,-1.173893,8.043006,-6.999212,8.475057,-0.068544,-7.141872,5.075265,-3.778936,6.573154,3.039293,-6.282150,6.637649,-3.172949,-6.905822,4.476662,2.039073,6.119612,2.565569,-2.518865,2.252607,6.461334,6.338603,6.113860,-3.648306,3.301758,1.874109,7.559729,-5.116067,8.886515,-0.400418,-9.554846,1.412327,-7.505497,-4.447947,3.310988,2.437589,7.937144,0.862872,-2.827744,5.355208,-7.870268,7.768901,0.710517,0.381106,7.016751,-3.204642,9.909263,1.269814,-2.623588,3.684048,2.952252,-3.050299,1.076489,-4.393789,-0.730565,1.661990,-1.674689,-4.973717,-6.478586,3.341373,1.762076,-0.928811,9.958721,-2.727295,5.891869,0.524544,-0.537494,9.374729,-0.766177,0.062867,4.461961,8.843417,-0.742698,6.779667,5.480969,-2.168800,-2.839048,9.535828,-6.763123,2.499742,8.287855,4.131634,7.156001,4.472382,-0.231186,-8.619721,-0.440380,8.268883,2.074586,4.806118,5.827082,-6.511072,-2.448211,6.988633,8.440226,-6.093170,-8.038463,5.345983,-2.536162,5.104325,6.357284,-2.844131,5.000854,-8.560797,4.075374,2.535035,9.960015,-4.706193,3.925362,6.257289,4.193922,-0.127132,7.548717,8.188915,-7.232813,-8.052125,-5.892707,0.356652,-8.456968,-6.440473,-1.446577,4.063332,9.553951,4.454681,2.549888,-6.221862,3.009377,-3.875905,-7.820596,-3.199874,-5.607353,-7.623986,-5.512381,-8.672010,-9.239678,-7.504103,-2.581707,-6.108480,6.920411,0.925874,-4.742534,9.356852,-9.471655,-9.242310,9.356453,6.123403,9.586680,-8.015403,-2.568288,3.513051,-0.315369,5.806016,8.840374,-0.804986,5.470846,9.040274,7.637909,2.876009,2.356739,-8.413036,4.772440,-0.557007,-8.310470,-2.785103,-1.250660,0.906005,9.835911,8.667695,-5.732944,5.844935,3.011332,-7.156342,-2.014601,-6.246536,6.369629,-5.150869,8.804202,-7.209600,-7.408518,-5.822174,-9.351940,9.604550,-5.616315,-1.020279,-0.478946,-0.788252,-8.324631,6.070400,6.610291,-4.510319,-5.391871,8.880665,-9.718087,7.848313,-4.457371,3.935230,8.367893,-7.299092,3.608187,9.008535,-9.015851,-8.980286,-0.492480,8.244206,7.046570,-8.192915,2.377021,3.140168,3.708937,-6.414762,-7.389344,-0.691098,-4.648814,0.320858,0.984907,5.883360,9.163900,9.644570,9.237014,2.453898,-4.234068,5.256597,7.530131,6.780272,9.312799,-4.660541,0.636016,-3.528348,0.992884,-4.775677,-2.707229,-1.270697,5.367393,6.088227,9.294947,1.658495,-7.735131,1.150266,-2.102321,9.069874,-2.361843,0.207293,-7.932155,3.275514,-3.335155,4.578617,9.287415,-8.706405,5.495474,-5.306202,-6.116993,-6.070712,-9.710027,-1.174589,8.193580,-8.022689,7.846217,8.075347,1.736853,5.963886,-4.748680,-0.396917,-4.737761,-2.483800,-0.123368,-4.314651,1.824916,-9.013052,-1.241625,-3.821311,-4.743833,4.644712,-7.759843,1.891237,0.510916,7.312679,2.123296,-3.143787,-2.669438,2.187462,7.554637,8.533028,3.220575,-5.952542,-1.866967,4.788150,0.728659,-5.655732,6.501583,-0.037727,-8.418037,7.385905,4.021532,-9.711494,-3.286234,8.728186,8.835759,-5.690962,-5.763438,6.016649,6.418780,0.170111,8.151841,7.240605,1.742928,-5.087978,6.886047,-5.471782,5.814847,6.733561,-2.978338,7.389600,6.946539,-6.806973,-7.713946,9.961224,-9.537437,-7.786591,-2.626029,1.088555,7.630951,-6.130823,0.703794,-3.556327,3.206974,-8.522815,-7.279852,7.130820,-4.739223,1.713163,1.876359,-7.737690,6.821176,-5.532619,-2.137172,2.132678,6.502601,0.626020,-5.052026,8.115217,2.324308,-4.586333,5.645872,6.103088,3.036573,-0.487746,8.585300,6.143403,8.748384,7.806550,6.666613,-8.283346,-8.816783,3.907452,0.968465,-3.821469,-2.637058,-3.287204,-7.853504,0.653978,-3.930703,7.029403,0.516594,-7.078314,-2.836787,-8.205251,-9.401562,-2.511913,-4.165515,-3.733373,-0.184876,-4.428328,7.238257,-7.762873,3.563253,5.222197,0.173177,6.213540,3.307130,6.056592,2.654181,8.128403,-9.217103,-2.124342,5.172801,-3.064469,0.899758,8.004865,6.711489,5.283520,9.149443,-0.637662,8.173713,6.320313,9.640920,-5.447878,3.403000,5.052059,0.962404,-6.037940,-3.544057,-4.389974,-5.554857,-7.495249,9.960718,-8.717936,-7.209049,3.299391,-9.324486,1.213104,2.170610,5.158980,0.404054,8.353729,-1.011451,-3.775294,-2.746458,3.502282,-6.677878,0.809737,0.235890,-4.253273,-0.282960,3.848407,6.110154,7.825162,-6.172742,3.536868,1.566578,-9.471599,-0.449463,-0.646490,8.032224,7.602004,5.363780,5.570062,-1.999613,-5.015399,5.319581,-0.985008,-0.559666,4.467448,-0.547337,4.649541,8.730984,5.815146,-8.035065,9.869982,1.169014,0.603154,7.251770,1.868775,-3.038142,-5.056303,2.229469,-7.495562,-8.775149,-8.315839,-8.259184,-2.708993,3.648013,-4.280415,0.319342,2.869283,-3.028178,2.243068,7.223852,-3.935281,5.859902,3.638897,0.730523,-2.470447,-5.233537,-3.177507,-9.790007,-5.805087,-1.217615,9.347712,-0.934240,8.240526,7.222201,-1.778391,0.772833,7.140204,-3.286643,-3.315310,-0.795899,8.644531,2.801866,-3.351324,6.140823,-7.172641,7.255816,6.729450,-9.920833,-1.841100,-6.364305,3.206640,4.931380,-2.837595,1.595102,8.942763,0.941177,-2.038438,-5.166695,3.462492,-0.683284,-8.258383,1.195169,1.745377,-9.091824,-0.623616,2.665467,-9.902034,-0.315103,-5.385749,3.996291,2.006747,-1.132196,-5.431540,-0.603648,-3.651211,1.144329,-4.837208,2.879009,-5.298948,-0.464947,-9.449839,-5.840389,-4.305306,4.517355,1.556285,2.500887,3.165728,-2.068384,-9.347495,6.121563,1.653885,2.167069,-7.116048,-3.223889,-9.253333,2.916600,-9.654977,-4.862172,-7.843442,3.026061,-0.479352,-1.387912,-8.101966,0.589902,-8.405364,-2.383460,5.869494,7.251502,-7.798405,9.199366,-6.643834,8.358812,-6.169157,-4.364671,6.844361,-6.627386,-3.764463,9.762320,-9.707990,4.645830,-1.563815,-2.325517,-3.190256,2.196786,1.285924,4.934249,2.386438,-0.183505,-7.817158,-6.841451,-0.968651,-4.409668,4.347880,-4.222197,-3.306931,-1.684069,8.268531,6.107582,9.817371,-5.768035,6.076348,-9.784366,-0.948481,-3.348768,9.235610,-2.972873,-3.038585,-0.731590,-5.922796,7.210429,9.179023,2.105363,-6.916796,-0.828604,1.421066,0.237542,-6.849594,9.431099,-4.473430,-1.061139,-3.255205,-0.325670,5.880198,7.275087,3.032090,-5.940189,-8.356298,1.265835,-1.421542,-6.855797,-9.585242,-1.832466,-1.584123,5.092207,-8.854904,-8.239582,-4.845175,3.004866,-1.765686,4.006583,7.059478,-9.532728,-6.560100,-7.853570,8.262079,-2.453714,-6.230018,-8.864083,1.360074,-4.732101,4.319086,-0.084803,5.147164,9.351371,-1.729187,1.543155,6.945693,-5.979969,3.189936,-3.433580,8.926326,-8.043805,-1.088460,-2.029201,-4.340402,1.290944,-4.726464,8.680437,6.992575,7.892365,6.978331,1.338789,-2.162819,-2.594657,-4.546797,-4.305617,-4.209605,-0.671794,4.710083,-8.412388,9.060384,-7.437515,8.668714,4.935504,-5.074584,2.541752,6.210606,-3.875737,-5.338097,7.217839,-6.397036,-4.397441,-2.874001,4.818566,-5.727160,2.887065,8.493913,0.606066,4.341827,5.942980,6.216298,2.109174,5.367867,-4.326909,6.885259,-3.289840,1.800233,-1.197725,5.541411,7.677137,5.118555,3.006862,-8.911133,1.140067,3.247383,-3.420236,3.907732,5.154296,1.838908,-8.610141,9.078188,-3.969756,-4.213200,-7.799916,-4.502276,5.671033,-9.060517,-7.455591,0.647053,-6.222461,-9.796630,5.164151,3.144755,-2.660434,-9.248864,2.236941,-6.496945,-4.452677,-4.075143,-3.659944,-8.092779,-0.999688,5.077859,-7.862196,-6.079804,3.401876,3.606201,7.217818,-3.633503,3.237201,-6.784987,-3.423819,7.022228,2.661385,-5.575798,-0.476984,4.826617,9.831570,-6.605884,1.637316,3.516400,2.868036,2.458198,5.324149,2.639792,-1.573118,5.918474,-3.351587,3.080414,-7.201460,4.502378,4.855023,1.001080,2.039557,-3.185775,-8.260039,-3.950849,-6.652714,-8.211580,3.398338,-5.960675,-0.650274,-8.717642,-5.632625,-7.328998,7.790429,-4.046344,6.030316,-0.190790,9.445838,4.893115,-5.409227,7.177689,-3.624063,-6.598600,4.609273,2.424594,-6.902139,-5.078823,-2.456395,4.881742,9.470287,-3.953714,0.617557,5.431070,3.661688,-4.775009,-5.236405,-5.321585,-2.199397,-3.591914,7.219912,5.946200,-0.612353,4.577407,-9.688495,-9.454087,-3.594703,-3.704960,0.471498,-8.204008,1.606557,-6.606927,-1.971349,-6.892320,8.449044,9.539024,-9.129592,-2.865317,-6.557507,2.444185,-7.581937,-8.879074,-6.832111,-0.464632,6.711978,-3.540125,-0.423310,-6.705311,9.496773,8.711381,-1.663471,-8.252206,9.513354,2.687657,-7.688983,-5.289967,-8.960409,1.264597,-6.827525,4.258461,-5.385157,-3.120646,-4.691218,3.414183,4.605889,2.002686,6.305596,-8.968332,-7.654494,5.267156,2.839572,-6.708623,-5.049368,-3.710734,5.176327,-2.478431,-0.408496,-0.280186,-8.665664,-6.894762,-7.368038,2.731765,2.790027,-9.272709,9.106560,-8.385602,-9.155266,-5.273456,-0.469684,9.814206,-1.213348,3.840690,-6.504707,-2.419816,-9.503570,-6.567100,-7.209673,-9.858679,1.584560,8.519385,-4.529278,2.641208,-1.881658,-0.338564,4.740610,1.926093,1.146071,-0.653977,-6.873980,-1.419087,3.425369,-1.213197,-1.829675,-1.872229,7.335604,-9.016502,9.090339,-2.362201,-8.057251,9.043991,-9.911659,3.015212,6.603549,3.037775,-6.585947,-4.041058,-5.642532,0.262372,-8.549796,0.595570,-4.326898,2.173684,9.717305,4.898742,-9.240167,9.672190,6.217014,1.962697,-5.220725,8.484022,-8.862491,8.499513,-7.612944,-4.946722,-9.208950,-7.391557,6.623888,-5.635927,-2.257652,-1.176135,-6.996576,9.501781,2.362409,9.429482,-9.916234,-0.145462,-9.882263,7.368597,4.473774,4.243349,2.620184,-9.123355,-9.015144,-9.366952,-8.576101,6.637831,-2.072321,2.690276,9.242293,-4.551855,7.708970,5.138810,-2.568037,-4.534244,-5.764115,8.950234,0.802331,-5.468723,-5.030999,-0.586509,-5.208800,-8.313621,2.833210,-8.065274,-4.201751,-6.624425,9.377510,3.789297,-6.638459,6.993969,-4.413353,4.489778,-0.290385,9.842607,-2.185978,-9.148454,4.662443,9.393365,-4.567429,-8.375943,-5.117934,-1.034023,-4.212266,3.697635,6.089610,5.122095,6.735425,4.089738,-4.442881,0.181918,2.218080,2.890161,-2.834312,2.660210,-7.455486,7.131159,-2.386083,0.692709,1.447901,7.533600,8.638415,-9.939158,4.195566,0.355770,-4.339827,-5.666784,-7.419391,9.549315,2.376033,7.094444,-2.060913,-8.939816,-2.809641,1.261120,6.886712,-4.936557,8.128282,8.959759,-6.083189,-6.758684,5.796065,-4.127227,6.995640,-7.167719,-7.387104,-7.893308,-6.368799,0.516471,-2.383383,1.104840,-0.578171,2.320636,-7.669745,-2.432904,4.943821,-2.882449,-4.736463,-5.743298,-0.734864,-4.271233,-5.972485,0.804309,9.671209,8.718719,5.880365,0.847197,-5.143733,2.623263,-8.054539,4.739954,-0.664905,-2.603909,7.860608,-5.155592,-6.552772,-9.125037,-4.524272,3.172749,3.001744,9.444603,2.489965,-5.818981,9.607397,9.200997,7.501633,3.321762,-7.369884,-2.453914,-0.515866,4.732443,3.451844,0.512372,2.499458,-5.708414,8.040996,0.303771,-1.199759,-9.673337,2.311528,1.054517,8.115129,-8.949218,3.325418,9.380251,-4.630399,-6.885655,-6.777525,5.011208,-6.006630,-1.323768,0.307539,5.226711,2.350899,-1.665053,1.721450,-4.400504,-2.899929,-7.500602,3.828303,-7.859206,-3.618228,-3.556741,-2.158861,-8.268629,6.994772,4.987557,-1.449243,-8.595167,-8.588968,-8.376257,0.993891,-5.281232,0.196462,9.049918,-4.990629,-9.246795,-3.689286,-9.338950,-1.548980,7.581744,5.387008,4.538077,4.646834,-7.524404,-0.592214,1.550415,8.887266,6.045777,-5.553393,7.534369,-1.044716,4.582066,-5.315758,-3.387641,-6.196423,-9.809752,-9.244520,6.628569,-3.748953,5.259615,-7.817941,-0.295218,4.701145,8.222233,-3.139812,-0.916724,-0.529810,3.766387,3.543386,-8.494822,8.822119,-6.112805,-6.933965,-2.486568,8.965567,9.380456,-3.848081,3.532999,6.407955,-9.270365,2.144422,0.854679,-7.259821,9.922965,-3.851738,-3.904913,-4.470897,3.275227,-6.861460,4.778501,2.414605,-9.900079,-8.845917,3.947231,-5.130618,8.932105,9.714919,5.729388,5.006160,2.208008,-8.610010,-6.311709,-0.196240,7.923015,9.625563,-6.580229,9.750597,-4.133932,-1.997634,-7.250601,5.070510,7.414172,-8.177933,8.436397,1.402718,6.062455,-6.621506,-7.977953,5.184187,1.625350,4.813857,8.444994,-2.916403,-6.360877,-6.531516,4.643107,5.124622,-7.831094,-3.668573,5.409078,-9.872182,0.048645,-0.037520,-2.005877,-8.677256,-3.789355,4.569514,-3.007217,-1.809996,5.660437,2.204241,-2.663693,6.693882,-9.787416,-5.316738,6.696649,-2.653907,4.625839,-3.943557,-9.875955,-1.314980,-7.689918,8.741459,6.924950,-6.637291,-7.532682,-4.098510,-2.604363,7.270251,2.350158,-8.812690,-9.669945,4.911366,-5.605110,8.750774,-7.168273,8.344333,-7.687413,-4.886465,-5.697380,-4.229915,-3.520866,-2.832490,-5.550772,-4.963004,7.918270,-6.756529,9.013239,-0.944812,4.974252,8.828028,3.168824,5.153054,3.244692,1.418629,-4.233129,-7.976960,-0.897549,6.341497,-7.027457,-6.630762,-2.350449,7.098465,3.621468,9.565655,-7.269073,-6.910300,-3.901524,9.766772,6.963158,1.104717,-1.509541,2.936265,-0.712461,8.100763,-9.724465,4.827623,-7.963267,-3.194896,-4.003737,-2.444119,-9.710243,-6.932683,-8.867695,-7.813325,-8.185417,9.616847,8.102004,-6.972905,9.374557,-3.962076,5.234425,3.720088,4.437027,5.308962,0.347724,-1.873846,8.968359,-7.676403,-0.462022,4.986014,1.392140,0.994588,8.420341,-4.657796,2.354400,-2.619784,-3.810150,-4.987816,-0.072731,4.381213,1.485431,8.100718,-5.329225,3.101897,1.676867,-4.217760,5.827710,7.658728,3.875471,-0.511623,2.767104,7.308475,-6.777212,4.082740,-2.898291,-1.305880,-2.926745,-6.554145,-3.802003,1.838329,-7.335479,-2.400262,0.311169,5.559791,1.613192,3.765407,-9.304452,0.524237,-4.581887,1.133538,2.315698,-4.635407,-4.901904,9.224271,-8.267705,-3.560354,-9.770257,5.951902,-0.214619,-5.331182,-8.199012,-7.246608,-5.734870,8.486092,-0.142807,4.844392,-7.762122,2.885916,-5.991209,2.810403,6.733602,-7.662610,-8.377277,7.806899,-4.264825,3.653991,1.378936,9.510463,3.214825,-5.811583,-6.901905,9.378312,-7.653219,5.659994,9.695816,5.053503,-8.331989,-8.890450,5.270834,8.092652,3.137962,-3.247714,1.401977,9.731017,-0.923496,-7.020087,7.136248,-8.471354,4.681538,5.365821,-1.149468,6.010324,-8.460579,-7.976585,-9.029602,4.473782,-8.788096,-7.646139,4.389841,-1.588341,-7.456309,-0.580162,-2.344527,8.123703,-4.852210,8.410182,7.737413,6.057228,-6.261913,-8.469868,-4.357903,3.635898,2.355997,-0.864838,2.646034,3.139647,6.333097,2.727267,-6.465617,5.701741,3.963963,4.264685,-8.772905,-8.453469,-4.578328,6.264031,-4.903340,4.991488,-1.722606,2.001563,-9.255185,7.993554,-9.788976,-1.161701,8.236464,-0.948520,-9.268322,-1.365017,-3.271970,2.449460,5.353603,7.300841,3.986739,6.770730,-6.672005,4.555226,1.624286,3.957163,-3.088136,-2.746649,4.882693,-4.685651,6.040572,-5.931152,-8.522468,-8.552924,-1.480954,5.724430,8.280432,-5.803353,5.303667,-5.471618,-4.850818,3.184880,0.949635,9.765988,-3.852633,-5.649636,-4.483204,2.397345,3.301996,-4.444805,-9.506359,8.027157,-5.992890,2.287598,-0.896161,1.702611,5.161970,5.699794,-0.213205,-6.250003,-4.701550,-1.948750,9.890731,5.258628,-9.510122,8.312036,-9.838313,-9.565276,-6.984658,-4.988869,4.560372,1.163328,-4.111619,-5.345764,3.502706,7.506681,9.026471,-7.265478,-7.794802,6.515876,6.099106,8.415581,-2.981971], dtype = "float32")#candidate|5352|(2880,)|const|float32
call_5350 = relay.TupleGetItem(func_749_call(relay.reshape(const_5351.astype('float32'), []), relay.reshape(const_5352.astype('float32'), [12, 16, 15]), ), 2)
call_5353 = relay.TupleGetItem(func_753_call(relay.reshape(const_5351.astype('float32'), []), relay.reshape(const_5352.astype('float32'), [12, 16, 15]), ), 2)
func_4480_call = mod.get_global_var('func_4480')
func_4482_call = mutated_mod.get_global_var('func_4482')
var_5377 = relay.var("var_5377", dtype = "float32", shape = (429,))#candidate|5377|(429,)|var|float32
call_5376 = relay.TupleGetItem(func_4480_call(relay.reshape(var_5377.astype('float32'), [13, 11, 3])), 0)
call_5378 = relay.TupleGetItem(func_4482_call(relay.reshape(var_5377.astype('float32'), [13, 11, 3])), 0)
func_1351_call = mod.get_global_var('func_1351')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_5379 = relay.TupleGetItem(func_1351_call(), 0)
call_5380 = relay.TupleGetItem(func_1352_call(), 0)
output = relay.Tuple([call_5310,call_5323,bop_5329,uop_5340,call_5350,const_5351,const_5352,call_5376,var_5377,call_5379,])
output2 = relay.Tuple([call_5311,call_5324,bop_5329,uop_5340,call_5353,const_5351,const_5352,call_5378,var_5377,call_5380,])
func_5398 = relay.Function([var_5298,var_5377,], output)
mod['func_5398'] = func_5398
mod = relay.transform.InferType()(mod)
mutated_mod['func_5398'] = func_5398
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5398_call = mutated_mod.get_global_var('func_5398')
var_5400 = relay.var("var_5400", dtype = "float32", shape = (9, 7, 12))#candidate|5400|(9, 7, 12)|var|float32
var_5401 = relay.var("var_5401", dtype = "float32", shape = (429,))#candidate|5401|(429,)|var|float32
call_5399 = func_5398_call(var_5400,var_5401,)
output = call_5399
func_5402 = relay.Function([var_5400,var_5401,], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3768_call = mod.get_global_var('func_3768')
func_3769_call = mutated_mod.get_global_var('func_3769')
call_5406 = func_3768_call()
call_5407 = func_3768_call()
output = call_5406
output2 = call_5407
func_5414 = relay.Function([], output)
mod['func_5414'] = func_5414
mod = relay.transform.InferType()(mod)
output = func_5414()
func_5415 = relay.Function([], output)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5469 = relay.const([[[2.195334],[-8.624171],[-2.832216],[-2.538241],[-6.382379]],[[0.608856],[-3.005692],[6.308553],[-6.748334],[4.276156]],[[-4.369653],[4.866699],[3.761122],[8.433011],[3.185483]],[[-1.842521],[-9.435772],[-5.361246],[4.662856],[-8.973708]],[[-6.009070],[-0.121257],[3.058827],[-0.138898],[-5.355447]],[[8.827487],[4.294893],[-1.508950],[6.873924],[1.320352]],[[-0.116473],[-1.633298],[-9.322511],[-3.999288],[0.012836]],[[8.851363],[-1.705548],[-5.318784],[4.523038],[8.457223]],[[8.419304],[-9.718126],[4.052893],[2.187977],[-4.016205]],[[-9.470897],[-2.287090],[5.298910],[9.473488],[-0.496506]],[[-3.721607],[-1.494130],[2.358182],[6.327730],[4.490334]],[[-6.075418],[1.767894],[1.034643],[7.501327],[-1.594251]],[[-6.990913],[3.326032],[3.478976],[2.391579],[-8.051230]]], dtype = "float64")#candidate|5469|(13, 5, 1)|const|float64
var_5470 = relay.var("var_5470", dtype = "float64", shape = (13, 5, 3))#candidate|5470|(13, 5, 3)|var|float64
bop_5471 = relay.floor_divide(const_5469.astype('float64'), var_5470.astype('float64')) # shape=(13, 5, 3)
bop_5477 = relay.not_equal(const_5469.astype('bool'), bop_5471.astype('bool')) # shape=(13, 5, 3)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_5504 = relay.TupleGetItem(func_2212_call(), 0)
call_5505 = relay.TupleGetItem(func_2213_call(), 0)
output = relay.Tuple([bop_5477,call_5504,])
output2 = relay.Tuple([bop_5477,call_5505,])
func_5521 = relay.Function([var_5470,], output)
mod['func_5521'] = func_5521
mod = relay.transform.InferType()(mod)
mutated_mod['func_5521'] = func_5521
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5522 = relay.var("var_5522", dtype = "float64", shape = (13, 5, 3))#candidate|5522|(13, 5, 3)|var|float64
func_5521_call = mutated_mod.get_global_var('func_5521')
call_5523 = func_5521_call(var_5522)
output = call_5523
func_5524 = relay.Function([var_5522], output)
mutated_mod['func_5524'] = func_5524
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3058_call = mod.get_global_var('func_3058')
func_3059_call = mutated_mod.get_global_var('func_3059')
call_5526 = relay.TupleGetItem(func_3058_call(), 0)
call_5527 = relay.TupleGetItem(func_3059_call(), 0)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_5545 = func_2236_call()
call_5546 = func_2236_call()
output = relay.Tuple([call_5526,call_5545,])
output2 = relay.Tuple([call_5527,call_5546,])
func_5571 = relay.Function([], output)
mod['func_5571'] = func_5571
mod = relay.transform.InferType()(mod)
output = func_5571()
func_5572 = relay.Function([], output)
mutated_mod['func_5572'] = func_5572
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_5577 = func_5414_call()
call_5578 = func_5414_call()
func_4848_call = mod.get_global_var('func_4848')
func_4849_call = mutated_mod.get_global_var('func_4849')
call_5582 = relay.TupleGetItem(func_4848_call(), 0)
call_5583 = relay.TupleGetItem(func_4849_call(), 0)
func_583_call = mod.get_global_var('func_583')
func_587_call = mutated_mod.get_global_var('func_587')
const_5585 = relay.const([4,6,7,-10,2,-3,-1,-3,-4,-4,4,-3,5,4,-5,-8,5,4,4,2,-1,-6,-9,1,5,2,-1,-4,5,2,6,-8,8,4,-7,7,-5,-2,3,6,7,9,-2,-6,-10,-8,10,7,9,9,10,-4,10,-7,-7,3,2,-6,3,-1,10,-9,-5,-10,8,8,5,10,8,-10,-2,-3,-3,9,10,-8,9,-3,-4,1,-2,9,-3,-5,-8,-7,6,-5,6,-4,5,-7,9,-1,4,-6,-2,-4,-4,5,-1,-4,-10,-5,-4,3,1,6,-1,-5,-10,1,-4,7,3,-1,2,-1,-4,-3,5,8,7,8,-10,4,5,-1,10,8,10,8,-3,-8,-7,-3,-6,-10,4,2,-2,5,-2,6,-6,5,-2,-10,4,-1,-7,-3,7,8,1,7], dtype = "int32")#candidate|5585|(156,)|const|int32
call_5584 = relay.TupleGetItem(func_583_call(relay.reshape(const_5585.astype('int32'), [13, 3, 4]), relay.reshape(const_5585.astype('int32'), [13, 3, 4]), ), 0)
call_5586 = relay.TupleGetItem(func_587_call(relay.reshape(const_5585.astype('int32'), [13, 3, 4]), relay.reshape(const_5585.astype('int32'), [13, 3, 4]), ), 0)
output = relay.Tuple([call_5577,call_5582,call_5584,const_5585,])
output2 = relay.Tuple([call_5578,call_5583,call_5586,const_5585,])
func_5610 = relay.Function([], output)
mod['func_5610'] = func_5610
mod = relay.transform.InferType()(mod)
mutated_mod['func_5610'] = func_5610
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5610_call = mutated_mod.get_global_var('func_5610')
call_5611 = func_5610_call()
output = call_5611
func_5612 = relay.Function([], output)
mutated_mod['func_5612'] = func_5612
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mod.get_global_var('func_3565')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_5684 = relay.TupleGetItem(func_3565_call(), 1)
call_5685 = relay.TupleGetItem(func_3567_call(), 1)
func_1673_call = mod.get_global_var('func_1673')
func_1674_call = mutated_mod.get_global_var('func_1674')
call_5689 = relay.TupleGetItem(func_1673_call(), 0)
call_5690 = relay.TupleGetItem(func_1674_call(), 0)
output = relay.Tuple([call_5684,call_5689,])
output2 = relay.Tuple([call_5685,call_5690,])
func_5691 = relay.Function([], output)
mod['func_5691'] = func_5691
mod = relay.transform.InferType()(mod)
output = func_5691()
func_5692 = relay.Function([], output)
mutated_mod['func_5692'] = func_5692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4046_call = mod.get_global_var('func_4046')
func_4047_call = mutated_mod.get_global_var('func_4047')
call_5729 = relay.TupleGetItem(func_4046_call(), 4)
call_5730 = relay.TupleGetItem(func_4047_call(), 4)
func_4102_call = mod.get_global_var('func_4102')
func_4104_call = mutated_mod.get_global_var('func_4104')
const_5735 = relay.const([-2.241177,-6.112680,-3.244431,-5.256334,1.711872,9.802498,-8.048244,-3.226633,-3.998956,1.306053,9.692832,3.815284,3.240389,8.958108,1.843245,2.106241,3.829454,-0.361065,0.493042,2.391695,-9.136443,-1.740114,-0.328595,6.834443,0.420340,-6.682082,9.052484,-8.942105,6.966148,2.048563,4.467167,-0.581533,-2.980442,-5.161295,-8.402352,-5.028197,8.376184,5.342514,-0.947104,-3.360057,6.241748,-9.606833,-0.007466,8.077861,3.077189,-4.972933,4.615210,6.527992,-4.391477,8.379594,-1.331161,9.711554,8.006524,9.468986,1.717313,8.014250,-7.495357,0.928692,6.959425,-7.594837,-7.830972,8.572336,8.326505,2.628430,-0.264383,-8.793234,6.263229,-5.207416,-7.104131,-8.306385,0.390546,2.692435,0.544417,-7.890016,2.047201,0.218021,-0.375660,-0.808906,-1.624605,8.992182,-4.445385,5.509976,0.455818,-6.640816,5.323259,9.056550,7.681097,-8.663206,1.551922,6.698312,9.838298,-0.969798,3.444464,0.471815,8.484666,-9.983352,8.856045,7.723964,-5.539682,-9.624774,-0.690381,-0.918158,-1.419218,-2.914725,-9.195669,2.953785,3.173046,5.438415,-2.534481,-4.006721,9.203246,9.263205,-5.728643,4.985324,1.217253,-0.902650,8.122766,6.371371,9.809514,0.536609,6.830812,3.793778,7.308448,9.287584,8.561498,8.243053,-0.205115,5.288201,2.439269,3.762091,7.759656,-3.949170,6.897661,-3.769208,5.204665,-9.288813,-3.681449,2.310282,-6.633537,2.621635,-1.381795,-6.894087,-2.440082,7.251474,-5.117008,-8.349752,-9.885383,-7.061075,-2.841396,-7.690198,-7.100497,-6.853010,-8.230460,-6.945705,-8.511894,3.743290,-3.563848,0.025426,3.057311,-1.624120,-5.918206,1.805097,1.088034,-2.651577,0.620709,-6.459263,5.398655,-1.855605,-6.108111,-4.009700,8.676966,-5.360781,6.765580,-6.028044,-5.709798,-0.813495,0.131090,-7.859614,2.801042,-3.520589,4.862556,-2.200081,9.116045,1.807033,-6.604953,-8.557331,6.999699,4.349671,-2.427477,3.654712,5.720014,6.470149,-6.249378,1.588330,-0.490042,-2.831452,-4.853990,-1.654098,3.576482,-0.627877,6.437618,0.497453,1.894537,7.683356,-1.927690,-5.087639,-1.186377,-5.176035,4.569940,-3.298677,8.986045,-6.540570,-5.074021,2.273950,-5.600376,8.145365,-6.722837,-5.202475,7.612456,-2.792413,-1.065745,0.747045,-2.910861,3.611825,-7.069228,-0.731110,-4.772029,2.015911,9.696177,3.728664,-5.864251,-3.994778,1.430225,-4.353543,-2.488564,1.281953,-5.643560,-1.915835,-2.044896,-3.018912,1.111700,4.168531,8.839206,-2.407830,1.900268,-0.333100,-2.392186,6.193035,1.370301,7.946990,-1.301472,2.781106,2.632062,0.512571,9.702571,-3.965578,-8.495070,3.919514,5.020855,9.332842,2.117963,-6.877184,-8.212143,7.080960,-3.731339,5.980152,2.616442,6.621833,-3.852881,8.182927,-2.885809,5.726583,6.022664,4.194509,-2.813497,1.879141,-9.392911,-0.959246,4.392378,0.966308,-4.684816,-2.830278,5.053268,-6.241830,0.605125,6.059671,-4.136572,-2.077058,4.949008,-7.315829,-6.224531,1.001232,9.931124,9.665514,-6.878109,-6.511083,-5.879893,-5.753803,-0.661802,7.513821,-8.677624,-9.460544,4.402002,-8.491200,-4.455740,4.247962,4.225657,7.702114,-1.068455,4.363351,8.980478,4.927714,6.625511,2.342501,-4.412075,8.164383,-3.274409,5.975445,-0.236716,-1.757634,-1.214413,-7.059767,3.452335,6.361218,-5.459720,-2.520723,-2.520302,8.244942,8.157429,-3.703228,-3.413108,7.935989,6.511787,-3.731669,-6.060995,-3.327187,-7.244297,-0.524867,-6.739120,3.755112,3.745152,5.821326,1.665914,6.599846,4.318628,8.915805,0.353216,-0.827367,2.799956,-2.564428,-6.290783,8.449184,1.767051,-8.857251,0.626816,9.233611,2.735618,-3.011705,0.006508,2.375530,1.354453,-3.137553,6.185738,2.883141,-9.798078,3.844371,-3.869066,7.616129,-1.874462,-2.460928,-4.605129,-6.907038,-9.805368,-1.142720,-7.409449,-7.239800,-2.094736,-3.069884,-5.595689,1.235792,-2.578265,5.287668,6.522461,-1.365204,-4.725465,3.878922,-4.845355,-3.020177,-6.130777,2.716222,-9.397898,1.842195,-8.763528,8.565111,7.247133,8.871539,5.731583,6.149787,-3.749465,-3.287274,-3.591274,5.441914,-6.060946,2.285561,-9.318368,8.671282,-7.152341,-2.176044,4.977783,9.978175,-3.883179,-9.107457,1.497675,-5.433315,6.496002,-4.363675,-3.679570,3.827767,0.636779,1.186857,0.359737,1.183798,8.233310,-0.285223,1.026521,-2.854906,9.400366,7.740272,-7.122394,-1.050586,-7.169931,9.855529,-9.739575,2.196864,2.013640,2.053336,-2.701339,-5.392190,-7.123764,-8.928475,4.433016,7.874510,7.278045,4.956742,-4.273528,8.873434,8.342210,4.701668,0.903831,7.054746,-0.139866,2.427888,3.558377,-4.317460,0.630327,9.138788,7.700698,6.906201,3.845396,-1.786401,-4.412877,0.374892,-7.452975,7.788584,3.448744,-9.573888,2.409291,-4.364974,-0.582357,3.244681,5.570523,-9.536274,0.529774,3.238597,-8.834084,6.519336,-3.723272,-4.777779,6.234498,-3.232601,7.554159,-2.928832,0.032112,8.506528,-2.241779,4.024652,-7.371199,-6.287728,7.911475,-6.204923,-7.209303,-9.472990,-1.972930,9.579985,-8.038800,7.528721,7.631151,-7.593532,-9.257477,-5.389348,-1.644234,2.429188,2.437897,6.720145,2.068004,-0.191952,9.995701,-8.479505,-2.948389,8.018540,-1.008347,-0.198639,1.605874,-2.049346,-2.422136,-6.623816,-9.538028,1.629413,3.009177,-4.518061,8.024131,-5.031565,4.315730,-8.777471,0.480350,-1.558192,-7.651564,8.856565,3.565895,-2.483680,-8.753596,1.607946,-6.761270,-5.109466,2.758051,-2.778129,9.321761,5.271030,-5.248134,-2.323280,8.450388,0.894943,8.115578,0.309938,-2.325477,2.786571,-2.414147,4.115850,2.544650,5.420496,-4.952855,2.876453,-9.225698,-6.394100,5.960519,-1.802293,6.890247,-8.208423,-7.084934,0.976773,6.958208,9.730807,4.300303,-6.189141,-0.439159,8.745823,-0.486584,8.301955,4.959533,8.690274,-3.147280,-0.650939,8.181265,9.284552,-2.478055,-5.230245,5.855947,-1.741507,-9.856083,9.732633,-4.913568,2.340476,-1.324582,2.997339,-5.925657,-7.895331,8.294031,-4.015093,5.021931,-0.073855,-0.407392,-8.179171,6.856838,7.741971,8.701805,-1.179848,7.162050,-9.770028,-5.026985,-3.637719,-1.710963,-2.818171,0.247791,-2.533533,-5.108883,-7.828547,2.791961,-7.431721,9.970326,-0.184243,-9.521035,-7.424216,-2.861294,7.798799,6.218081,4.313172,-2.839266,2.878921,-5.936251,2.021525,-7.119831,-5.897789,-6.502880,-3.930963,-3.045748,-4.951298,-7.271576,-7.603797,-4.116929,6.381825,0.459872,8.860703,-5.008589,1.336785,8.236542,3.822808,5.923563,1.810550,-1.186054,4.396067,5.446112,-7.362454,4.697402,-4.635766,-4.058012,7.065239,4.631439,-8.930285,6.210900,-7.569228,-5.765070,-3.156215,0.548444,5.152581,-5.819036,-7.625557,-6.509964,1.103734,-0.112759,7.119219,0.054075,-1.841622,-1.406226,5.342082,8.557368,-8.454146,3.486369,2.798000,-1.125645,5.854464,7.871490,-0.814886,-4.369229,7.461743,-6.638582,1.495723,0.297002,-7.084272,-3.185725,0.290286,7.361713,3.123116,8.028028,-0.147839,8.939805,-5.766374,6.547729,0.197899,-1.048722,-9.320848,1.453764,-9.693054,-4.972272,-0.424821,-0.425337,-2.999481,9.697669,0.913448,-0.673508,6.031775,3.789743,-5.630084,-5.427772,-1.636296,8.110101,4.460696,-7.564567,2.090734,-9.808384,-2.974767,-0.218275,4.272868,-0.428752,-9.316596,-5.064862,1.647259,0.928641,-5.049221,4.172631,-0.127892,-4.861700,3.993635,2.357477,0.769515,2.452832,9.379476,-8.797046,8.332418,5.673622,2.169189,0.679943,9.212092,-2.509928,3.030538,-9.104264,-4.309596,5.213782,7.269861,9.181777,1.797258,-5.518994,-3.654964,2.735649,-9.949553,2.285703,-2.912379,-9.350104,0.587552,3.877615,-4.405472,-0.099596,-6.110499,-4.301991,-6.261022,-6.554740,-1.298152,-7.895310,6.414396,6.294562,-2.411885,2.771414,0.020310,-3.118975,4.367751,6.084072,1.230410,-4.635714,-6.808540,-0.624713,-5.357568,-0.524679,8.586306,1.080555,-9.263469,-8.741770,8.883107,5.430860,9.065324,1.687706,9.053167,-5.534026,-8.690805,1.817720,-8.311673,-5.069766,-6.395094,2.614655,6.194793,9.641348,8.662793,6.501734,4.608469,-9.166682,-8.666113,8.485650,-4.756349,8.905278,0.559231,1.467598,-5.927440,-8.610421,-4.048956,-7.596481,8.668364,3.134193,-5.458129,2.176469,5.765529,-1.540304,-3.002433,-6.632274,-0.928438,0.560885,-7.780501,6.383575,-0.298054,0.421043,8.967798,2.297694,2.413159,-8.697125,7.398733,-6.032067,9.545772,-0.090251,-3.751398,-8.898291,-8.854387,-7.790390,7.020382,2.696980,-5.893005,-1.727392,0.034745,-5.814565,7.524126,-1.097119,-9.564706,4.455605,6.175127,9.719891,-5.287272,-3.592968,-9.698263,9.174505,-0.747314,1.278265,-5.560984,3.277534,3.729475,-6.501228,-3.240704,5.049836,9.822896,-5.926764,4.788065,5.243667,4.434250,-4.302561,-9.750166,1.184881,7.611938,4.093578,1.405946,4.511810,-0.058068,4.422229,-1.591765,-3.602094,8.034726,-1.829057,-0.001190,1.938789,-4.358406,8.816006,7.602733,0.687282,-9.990818,-7.078090,0.242602], dtype = "float32")#candidate|5735|(880,)|const|float32
call_5734 = relay.TupleGetItem(func_4102_call(relay.reshape(const_5735.astype('float32'), [8, 11, 10])), 0)
call_5736 = relay.TupleGetItem(func_4104_call(relay.reshape(const_5735.astype('float32'), [8, 11, 10])), 0)
output = relay.Tuple([call_5729,call_5734,const_5735,])
output2 = relay.Tuple([call_5730,call_5736,const_5735,])
func_5742 = relay.Function([], output)
mod['func_5742'] = func_5742
mod = relay.transform.InferType()(mod)
output = func_5742()
func_5743 = relay.Function([], output)
mutated_mod['func_5743'] = func_5743
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_5758 = relay.TupleGetItem(func_2212_call(), 0)
call_5759 = relay.TupleGetItem(func_2213_call(), 0)
output = relay.Tuple([call_5758,])
output2 = relay.Tuple([call_5759,])
func_5763 = relay.Function([], output)
mod['func_5763'] = func_5763
mod = relay.transform.InferType()(mod)
mutated_mod['func_5763'] = func_5763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5763_call = mutated_mod.get_global_var('func_5763')
call_5764 = func_5763_call()
output = call_5764
func_5765 = relay.Function([], output)
mutated_mod['func_5765'] = func_5765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_5778 = func_1584_call()
call_5779 = func_1584_call()
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_5780 = relay.TupleGetItem(func_1467_call(), 0)
call_5781 = relay.TupleGetItem(func_1468_call(), 0)
output = relay.Tuple([call_5778,call_5780,])
output2 = relay.Tuple([call_5779,call_5781,])
func_5784 = relay.Function([], output)
mod['func_5784'] = func_5784
mod = relay.transform.InferType()(mod)
mutated_mod['func_5784'] = func_5784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5784_call = mutated_mod.get_global_var('func_5784')
call_5785 = func_5784_call()
output = call_5785
func_5786 = relay.Function([], output)
mutated_mod['func_5786'] = func_5786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3795_call = mod.get_global_var('func_3795')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_5787 = func_3795_call()
call_5788 = func_3795_call()
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_5797 = func_1584_call()
call_5798 = func_1584_call()
output = relay.Tuple([call_5787,call_5797,])
output2 = relay.Tuple([call_5788,call_5798,])
func_5861 = relay.Function([], output)
mod['func_5861'] = func_5861
mod = relay.transform.InferType()(mod)
output = func_5861()
func_5862 = relay.Function([], output)
mutated_mod['func_5862'] = func_5862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5691_call = mod.get_global_var('func_5691')
func_5692_call = mutated_mod.get_global_var('func_5692')
call_5883 = relay.TupleGetItem(func_5691_call(), 1)
call_5884 = relay.TupleGetItem(func_5692_call(), 1)
func_1252_call = mod.get_global_var('func_1252')
func_1255_call = mutated_mod.get_global_var('func_1255')
const_5897 = relay.const([-3.603424,-8.604195,-5.409205,2.804718,-1.558808,-8.145882,-7.779106,1.374344,-7.379658,7.914599,-2.442391,4.765025,-4.256507,-8.524977,2.496599,-1.557502,-3.901061,7.259982,3.902834,-5.013119,7.633706,-2.588434,-8.783308,-6.760428,-6.315812,-8.697841,8.779417,-9.032882,9.896633,8.059999,2.529623,-8.998891,-1.350801,-0.158938,-5.298922,-5.244255,-8.910684,3.900663,-5.154186,1.837389,4.401215,4.783387,-5.917076,5.197149,-6.489412,-4.465869,-6.928994,1.031398,5.206835,-0.162933,6.864277,5.825347,1.791573,-1.855407,-6.662656,4.975611,-6.938751,-7.980548,-9.327660,-6.451943,3.268626,-0.736926,-2.646315,-1.023640,-8.052726,7.771406,7.942842,6.139910,-6.252570,-3.073440,2.813208,-5.634933,7.323003,-4.460535,-7.955777,-4.636096,-4.524585,6.193694,3.577125,-6.989484,-7.075647,8.909458,-8.929153,0.709107,-2.186204,9.849769,6.707004,7.772738,-8.190894,-3.712080,2.462232,-3.513230,0.604084,-2.348913,-7.130354,-2.634806,-0.097721,-3.711310,-8.808072,0.988898,-3.462435,2.355594,0.758746,-1.148520,-8.656567,-6.795683,2.413189,2.834000,9.052728,2.687596,-3.854990,-6.706083,2.303362,3.163073,-7.817221,3.726982,6.295027,-4.137369,4.329801,7.404026,0.606028,9.723229,-7.406264,-5.848655,-7.487609,4.059447,3.228905,-6.289391,4.352770,4.856191,-9.464844,-4.497580,2.699653,-5.589937,4.124722,-3.044428,-7.894409,9.997372,1.888985,-0.322954,-2.645861,-3.439979,7.381306,-1.712998,1.772022,0.135814,-8.300956,2.197613,-1.887546,9.051112,9.859301,2.536720,8.540595,7.218703,-0.977330,2.826285], dtype = "float32")#candidate|5897|(156,)|const|float32
call_5896 = relay.TupleGetItem(func_1252_call(relay.reshape(const_5897.astype('float32'), [13, 3, 4])), 7)
call_5898 = relay.TupleGetItem(func_1255_call(relay.reshape(const_5897.astype('float32'), [13, 3, 4])), 7)
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_5920 = func_2132_call()
call_5921 = func_2132_call()
func_2771_call = mod.get_global_var('func_2771')
func_2773_call = mutated_mod.get_global_var('func_2773')
call_5942 = relay.TupleGetItem(func_2771_call(), 0)
call_5943 = relay.TupleGetItem(func_2773_call(), 0)
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_5946 = func_1584_call()
call_5947 = func_1584_call()
func_2749_call = mod.get_global_var('func_2749')
func_2751_call = mutated_mod.get_global_var('func_2751')
var_5958 = relay.var("var_5958", dtype = "bool", shape = (1848,))#candidate|5958|(1848,)|var|bool
call_5957 = relay.TupleGetItem(func_2749_call(relay.reshape(var_5958.astype('bool'), [1848,])), 0)
call_5959 = relay.TupleGetItem(func_2751_call(relay.reshape(var_5958.astype('bool'), [1848,])), 0)
output = relay.Tuple([call_5883,call_5896,const_5897,call_5920,call_5942,call_5946,call_5957,var_5958,])
output2 = relay.Tuple([call_5884,call_5898,const_5897,call_5921,call_5943,call_5947,call_5959,var_5958,])
func_5961 = relay.Function([var_5958,], output)
mod['func_5961'] = func_5961
mod = relay.transform.InferType()(mod)
var_5962 = relay.var("var_5962", dtype = "bool", shape = (1848,))#candidate|5962|(1848,)|var|bool
output = func_5961(var_5962)
func_5963 = relay.Function([var_5962], output)
mutated_mod['func_5963'] = func_5963
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6005 = relay.var("var_6005", dtype = "float64", shape = (8, 7, 4))#candidate|6005|(8, 7, 4)|var|float64
const_6006 = relay.const([[[-9.809241,0.871616,9.930035,0.773047],[0.528113,5.473600,4.315975,1.624206],[6.066761,-7.781750,-7.906044,7.096087],[-3.721095,7.086761,2.592842,0.177923],[-9.107575,0.606498,-4.499478,8.696474],[7.912520,-0.975581,6.110864,4.689426],[-1.618457,-2.062760,-4.235627,-8.305371]],[[0.436107,-6.983729,-1.072867,-1.493381],[-8.710680,-3.726411,-5.578483,-1.306033],[9.518250,-8.037285,8.279773,9.389796],[-4.032033,-3.206534,4.367605,5.369079],[5.293270,-4.698214,2.752708,-2.645542],[-0.163551,-0.321370,-2.822933,-8.919289],[9.076598,-8.107882,7.985861,-8.191020]],[[7.722150,-9.035489,9.231344,1.209736],[1.896225,6.808306,-6.101532,3.977593],[-5.408435,-1.760568,-3.991653,-1.559854],[2.733362,-6.818887,-9.368837,-9.409996],[-5.860508,9.134127,-5.076831,-4.540061],[-3.180643,-9.836915,5.153656,8.604985],[-2.022645,-8.124059,-0.921120,-8.606865]],[[-3.576828,-5.185030,-3.755668,-5.762112],[-8.066963,-0.744821,3.113423,-8.125972],[-7.748380,-8.728471,-1.404032,-2.674293],[2.826292,-0.764837,2.665021,-9.255587],[4.782468,0.772606,1.262465,-1.927055],[2.307580,4.068050,2.281187,-9.578982],[-4.999283,2.101402,-9.748841,8.013184]],[[3.629675,6.651363,5.647071,-1.864336],[0.121669,-0.959806,9.037186,-4.902975],[8.400238,3.740939,5.335489,9.982118],[1.489265,3.594267,-4.010389,9.451796],[-5.903760,-9.637433,-5.729340,-8.108955],[-2.787736,3.131825,-4.386004,-3.949148],[4.340034,-3.083474,2.304517,-6.800943]],[[2.144302,-8.106841,8.338946,6.079238],[1.849869,7.917124,-4.937190,4.164147],[-6.336109,-5.699264,-6.316433,-4.958614],[7.082551,-4.770703,-0.728100,9.655180],[-6.629176,4.651894,2.274264,6.579122],[3.294058,4.705982,4.061617,-3.933293],[2.388719,-9.952193,-3.420445,7.720699]],[[5.413403,-0.455356,-1.867455,3.629746],[-2.037886,-0.297538,7.420574,-1.212455],[-4.803533,-8.372598,-3.335245,5.558523],[-6.915753,2.284886,9.551982,-2.516754],[-0.740484,-9.234647,-9.408536,-7.510167],[2.905352,-3.719288,-7.370339,2.707219],[-7.022511,-5.476957,-9.719977,-7.440755]],[[3.342684,1.331711,-4.412645,-8.540608],[3.636466,-5.364273,-8.623492,-9.487730],[7.872150,0.759538,5.570066,7.988567],[-6.272981,-7.212671,4.279767,9.507635],[-3.538583,2.043048,-9.948283,0.679563],[9.048434,9.693709,-2.140011,8.554324],[4.762212,-9.127056,5.434616,-9.590136]]], dtype = "float64")#candidate|6006|(8, 7, 4)|const|float64
bop_6007 = relay.mod(var_6005.astype('float64'), relay.reshape(const_6006.astype('float64'), relay.shape_of(var_6005))) # shape=(8, 7, 4)
func_3301_call = mod.get_global_var('func_3301')
func_3303_call = mutated_mod.get_global_var('func_3303')
call_6010 = relay.TupleGetItem(func_3301_call(), 0)
call_6011 = relay.TupleGetItem(func_3303_call(), 0)
output = relay.Tuple([bop_6007,call_6010,])
output2 = relay.Tuple([bop_6007,call_6011,])
func_6017 = relay.Function([var_6005,], output)
mod['func_6017'] = func_6017
mod = relay.transform.InferType()(mod)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6018 = relay.var("var_6018", dtype = "float64", shape = (8, 7, 4))#candidate|6018|(8, 7, 4)|var|float64
func_6017_call = mutated_mod.get_global_var('func_6017')
call_6019 = func_6017_call(var_6018)
output = call_6019
func_6020 = relay.Function([var_6018], output)
mutated_mod['func_6020'] = func_6020
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1584_call = mod.get_global_var('func_1584')
func_1585_call = mutated_mod.get_global_var('func_1585')
call_6027 = func_1584_call()
call_6028 = func_1584_call()
uop_6032 = relay.cos(call_6027.astype('float64')) # shape=(8, 11, 10)
uop_6034 = relay.cos(call_6028.astype('float64')) # shape=(8, 11, 10)
output = relay.Tuple([uop_6032,])
output2 = relay.Tuple([uop_6034,])
func_6038 = relay.Function([], output)
mod['func_6038'] = func_6038
mod = relay.transform.InferType()(mod)
mutated_mod['func_6038'] = func_6038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mutated_mod.get_global_var('func_6038')
call_6039 = func_6038_call()
output = call_6039
func_6040 = relay.Function([], output)
mutated_mod['func_6040'] = func_6040
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6046 = relay.const([[[9,8,-5,4,-5,5,4,1,1,-7,-3,5],[5,8,5,-10,4,-2,1,3,3,-2,-7,-2],[2,-5,10,-4,6,-1,-7,-3,10,-10,-5,9],[-2,5,-1,-8,-10,-9,-4,5,2,-1,10,-10],[1,-3,4,4,-2,-5,-10,5,5,10,6,9],[3,7,-6,-4,-6,5,7,-7,-10,4,-5,-10],[3,-2,-3,-7,3,-10,10,7,-10,-9,4,8],[8,6,10,-4,3,-4,-6,-5,-6,7,-8,3],[7,-7,-7,4,6,9,-5,-1,-10,5,7,-5]]], dtype = "int64")#candidate|6046|(1, 9, 12)|const|int64
var_6047 = relay.var("var_6047", dtype = "int64", shape = (10, 9, 12))#candidate|6047|(10, 9, 12)|var|int64
bop_6048 = relay.subtract(const_6046.astype('int64'), var_6047.astype('int64')) # shape=(10, 9, 12)
output = relay.Tuple([bop_6048,])
output2 = relay.Tuple([bop_6048,])
func_6060 = relay.Function([var_6047,], output)
mod['func_6060'] = func_6060
mod = relay.transform.InferType()(mod)
mutated_mod['func_6060'] = func_6060
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6061 = relay.var("var_6061", dtype = "int64", shape = (10, 9, 12))#candidate|6061|(10, 9, 12)|var|int64
func_6060_call = mutated_mod.get_global_var('func_6060')
call_6062 = func_6060_call(var_6061)
output = call_6062
func_6063 = relay.Function([var_6061], output)
mutated_mod['func_6063'] = func_6063
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_6074 = func_5414_call()
call_6075 = func_5414_call()
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_6098 = func_2236_call()
call_6099 = func_2236_call()
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
call_6101 = relay.TupleGetItem(func_3261_call(), 1)
call_6102 = relay.TupleGetItem(func_3263_call(), 1)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_6117 = relay.const([[7.055341],[-7.498012],[-5.318948],[-8.049145],[-4.860143],[0.314130],[-6.281105],[6.464549],[-8.548359],[9.908613],[8.771890],[-9.562535],[1.500763],[-2.116147],[6.480570],[-7.063323],[9.196201],[-7.287851],[-9.392894],[-7.728610],[-0.472827],[-4.948834],[1.213791],[1.630279],[-5.839339],[-5.350878],[3.983167],[-2.311495],[-3.497254],[3.485299],[3.324664],[-6.826457],[-0.414355],[3.042969],[7.454469],[1.784414],[0.944282],[0.519987],[-6.149280],[-9.585153],[8.237743],[-1.572146],[4.752790],[6.807284],[-1.459932],[3.651844],[6.725007],[-2.648596],[-1.980471],[-4.123918],[2.294636],[-3.841571],[-1.030016],[0.522428],[-5.124569],[2.752508],[-5.123886],[-2.411202],[-7.091038],[-4.170602],[-5.965516],[6.973461],[1.218870],[-6.490731],[1.580652],[-1.039350],[-2.870064],[2.705137],[-4.998576],[9.075647],[-9.826268],[-0.378681],[7.413772],[-0.259071],[7.512757],[-6.663588],[9.245430],[3.245786],[4.108614],[-9.596676],[-9.268421],[-9.259297],[7.013389],[4.156772],[-4.803852],[-2.903991],[5.420139],[-2.265402],[-6.049086],[4.486048],[3.650036],[9.422110],[6.726674],[7.364892],[-0.455090],[9.474327],[-5.956836],[-7.251268],[8.688341],[3.734514],[-1.632411],[-9.068619],[6.245023],[-0.889620],[0.663337],[7.635212],[4.570471],[9.212465],[6.977889],[-5.226901],[5.470727],[-9.701951],[4.563100],[3.218374],[7.245004],[-9.550517],[2.681583],[1.546067],[5.255436],[-5.293194],[3.155470],[1.319799],[-5.377892],[2.281203],[-3.510987],[-7.275009],[4.083395],[2.415555],[5.027782],[1.241202],[-3.893479],[-6.057019],[-4.240878],[-2.533712],[-2.276299],[7.123607],[-5.304896],[-3.624067],[7.337493],[-5.480105],[9.970821],[5.797228],[1.449192],[3.732911],[-7.163440],[6.863071],[8.610010],[-8.890364],[-4.054768],[0.866002],[1.065944],[-2.755407],[-1.203959],[-5.267688],[7.355551],[1.631504],[3.432077],[8.151855],[0.987298],[2.680294],[-1.881461],[-4.124443],[5.278343],[6.471947],[8.740989],[-2.283763],[0.030296],[-0.774146],[0.568489],[-0.247947],[8.849436],[-7.289446],[-3.266159],[-8.433928],[-6.577306],[6.374693],[-3.784656],[-3.162895],[-2.753411],[8.337998],[9.607778],[-7.641219],[7.137634],[-3.191843],[-0.303578],[1.652306],[-3.339166],[-9.020198],[4.948730],[-6.662206],[0.300138],[-4.802488],[-6.568930],[0.145254],[4.394346],[-0.467313],[-3.877556],[0.081908],[-9.169324],[-8.950200],[-2.738847],[-5.870541],[7.372479],[-1.415597],[5.224292],[7.758961],[-0.825523],[4.172006],[-3.235420],[-3.347697],[3.504714],[-6.028020],[1.861044],[6.836650],[8.012151],[-0.106509],[2.345323],[-2.668198],[-6.151586],[-9.487228],[-1.979677],[-8.957763],[1.731148],[6.589704],[-4.017241],[6.093449],[-7.277626],[3.618840],[-3.352014],[9.571969],[-8.547244],[1.305317],[7.323670],[5.999478],[-7.449717],[4.855435],[4.713681],[-2.342349],[7.295748],[-3.122654],[1.448598],[-7.049293],[-7.091260],[4.069395],[-3.621077],[-4.624440],[1.021136],[9.758820],[-1.512011],[-2.677627],[-3.386124],[2.387243],[8.211789],[-8.939239],[4.396073],[-6.154647],[8.237184],[-5.976863],[-0.538133],[-5.806867],[0.766563],[9.916201],[-9.122292],[0.888258],[7.718131],[-2.058807],[9.175096],[4.919747],[2.517075],[-7.452171],[7.101880],[3.659260],[9.176901],[-5.681138],[9.218634],[-5.849515],[0.171888],[7.078076],[-7.730314],[-2.754240],[-3.711130],[1.355891],[-1.999584],[-1.943790],[0.203757],[-5.417270],[9.331640],[2.542272],[-6.453713],[-7.299249],[-1.724281],[-2.048312],[3.391132],[6.223222],[-9.538973],[3.171231],[-6.069054],[-4.009745],[-0.933696],[-2.029008],[3.334946],[-8.597376],[-4.558499],[1.326977],[5.961027],[3.634511],[4.369450],[1.612213],[0.760769],[-2.936245],[8.255882],[1.202426],[5.252133],[-7.919502],[-7.074940],[8.714053],[-4.461170],[3.700933],[4.405964],[6.534833],[-9.201866],[-5.774672],[-3.495175],[-6.537172],[-3.384752],[2.858779],[7.936932],[-8.572066],[-7.220688],[-2.081271],[4.684113],[5.895339],[4.775193],[2.273361],[4.425442],[4.836564],[5.312409],[6.723554],[1.618613],[5.267246],[0.289188],[1.457178],[5.482471],[3.830083],[2.336929],[3.734760],[4.477126],[-0.610510],[8.070300],[3.743062],[-1.123767],[-0.304260],[-1.276904],[0.855473],[-7.507438],[7.344646],[0.995815],[-4.271611],[-6.116178],[-1.230978],[3.859014],[1.258891],[-8.346303],[5.219020],[8.342710],[4.248918],[9.768152],[6.330385],[5.919205],[3.569657],[0.142101],[3.616151],[-7.621547],[-6.425259],[0.565526],[-8.152731],[-3.015323],[7.479248],[2.104990],[-0.968221],[4.046742],[-5.979611],[0.185976],[-0.552136],[-2.226674],[-1.381908],[0.118221],[-1.068442],[3.617224],[-6.460820],[7.500423],[8.830352],[-0.754735],[2.314911],[6.862784],[-8.278780],[6.889961],[0.562034],[-1.260085],[1.754435],[-6.574616],[4.001015],[-5.736866],[5.198302],[-8.769595],[-3.275840],[-9.181563],[2.597681],[7.186765],[-9.034765],[-7.259408],[5.864890],[0.349833],[-1.231796],[8.352700],[-9.606790],[-9.793395],[2.044087],[8.738688],[-9.149907],[-3.102725],[4.666334],[4.084484],[-2.261213],[3.355106],[9.980551],[3.691531],[8.607700],[-0.474396],[3.729808],[-4.678252],[0.934668],[8.626794],[6.274671],[5.854558],[-5.205941],[-5.067085],[-6.595984],[-0.629423],[-7.479149],[0.860469],[9.138948],[2.069136],[6.107208],[-9.401491],[8.172071],[-2.322166],[9.234555],[7.537655],[-8.869112],[3.907283],[-1.509748],[-4.287628],[7.980629],[9.521284],[8.813385],[8.548088],[-7.047481],[8.491648],[-4.500094],[-7.845444],[-0.407351],[-7.621001],[-8.766516],[-5.430474],[-7.946126],[4.780838],[-3.528927],[5.611419],[-7.974415],[5.196562],[2.682452],[-1.520427],[7.449065],[6.793625],[3.654156],[0.004467],[-6.924195],[-1.957485],[3.980987],[8.754068],[-1.965849],[7.110626],[7.146417],[-3.632772],[0.572971],[0.714903],[-9.313465],[-4.619791],[2.475205],[-2.746074],[0.294370],[3.733117],[9.211872],[-9.365820],[-3.465953],[1.291649],[-5.487160],[2.036455],[7.666733],[6.950570],[-7.281648],[-7.735941],[-4.401239],[-2.465060],[-6.312733],[3.882489],[8.739941],[-2.176137],[-9.809822],[1.430391],[-8.400303],[5.892375],[7.277701],[-2.273854],[-8.687256],[-7.878960],[-9.817114],[8.527548],[1.365040],[6.979998],[-8.632171],[-3.231861],[2.011355],[0.466418],[9.602863],[-7.710995],[4.479870],[6.230564],[1.375929],[2.281386],[6.401946],[-3.820405],[-3.105609],[8.887324],[8.990533],[-8.773004],[6.610064],[4.740295],[3.837478],[-4.489561],[-5.391791],[-2.786040],[-8.127541],[-4.967129],[-5.112988],[6.903524],[8.984702],[7.990200],[0.472986],[-2.639529],[0.296040],[1.310558],[1.516508],[6.666597],[9.550731],[7.790296],[1.555524],[6.642770],[8.261044],[1.898875],[5.765735],[-7.547188],[-1.914325],[9.681269],[-6.040933],[-7.180187],[-7.976635],[-9.503615],[4.495114],[-4.910296],[3.924343],[-8.697878],[7.039371],[-3.629697],[8.733663],[-0.192447],[-7.997432],[-2.436948],[5.150842],[-0.028809],[5.888657],[3.825233],[-8.586147],[4.955554],[-0.328703],[-9.088778],[5.676904],[-9.699803],[-6.476222],[-2.529097],[-4.116448],[6.498815],[6.184733],[0.418871],[0.526130],[-5.031296],[-5.434156],[-6.694998],[4.513041],[-5.560594],[9.392094],[3.715291],[3.898841],[6.080745],[-3.076975],[-1.965982],[5.376153],[0.141733],[4.815542],[7.692908],[-0.142237],[0.266207],[1.100941],[-2.517395],[5.449895],[-6.791191],[6.344334],[0.538198],[2.995867],[6.800157],[-2.574499],[-7.145212],[8.545242],[-0.844964],[-1.864141],[3.637952],[5.224730],[-0.613963],[-0.986300],[9.734773],[2.815723],[-1.334277],[0.618028],[-3.351996],[-5.866304],[-2.385493],[0.807062],[-2.299978],[-5.057694],[7.831443],[-0.292434],[-1.567349],[4.924488],[1.026800],[0.454324],[0.779038],[-3.113650],[3.278152],[5.219096],[9.263563],[0.692751],[5.650523],[-6.476283],[6.802585],[-3.802469],[-3.534214],[8.007246],[2.083495],[3.791272],[-4.668402],[5.087726],[5.428997],[5.082860],[-5.961265],[-2.769688],[1.032769],[0.754765],[-4.356134],[-6.674396],[2.567390],[-0.581672],[-3.690825],[-2.674344],[-0.485441],[-0.028554],[-6.919528],[-1.042071],[3.252158],[-6.962019],[9.682006],[9.024979],[6.882270],[2.134227],[0.916380],[4.300189],[-3.964583],[-8.680078],[-7.711780],[-1.985821],[-5.617869],[9.746742],[3.193108],[-5.637153],[-5.063521],[-1.559426],[-7.038132],[-7.303904],[-9.466855],[5.191865],[1.902483],[-6.339120],[4.077480],[-2.858952],[0.840581],[-0.579032],[4.346231],[-3.105729],[-2.773270],[-3.861934],[-4.392899],[-3.853383],[-8.283507],[-4.133853],[-3.335620],[-5.093253],[-0.707687],[5.493859],[1.430727],[7.800035],[1.995705],[-8.719827],[-9.097117],[9.828133],[-6.719428],[7.667540],[-0.254289],[8.151519],[-9.809768],[1.278277],[4.115241],[-1.085039],[2.533049],[8.497932],[-2.816966],[8.104684],[0.215413],[-5.659171],[5.956310],[-6.376449],[2.994734],[-5.942140],[3.818102],[4.388992],[3.402910],[-6.617462],[-7.506572],[-0.846950],[-7.038114],[4.096735],[8.054253],[-5.174443],[-6.952837],[-7.934965],[-3.097607],[1.624916],[-4.082197],[2.942462],[7.307027],[6.706621],[-7.444763],[-3.218471],[-8.670460],[-0.305657],[-7.332880],[1.719104],[-9.159011],[-8.219030],[8.887509],[-9.570062],[5.083081],[6.359314],[4.686602],[7.807034],[1.719010],[6.945287],[-8.038643],[2.023021],[0.859478],[-0.437332],[9.010846],[5.762750],[6.957603],[-5.969939],[-2.554248],[2.250586],[7.210192],[2.441234],[2.605877],[3.658771],[6.427593],[-5.494219],[-7.458683],[-7.677427],[5.259122],[-4.806815],[1.185387],[2.192094],[0.676219],[6.736678],[-8.448593],[-5.283676],[9.679732],[0.823311],[-1.070998],[-7.914608],[4.966675],[-3.012309],[-8.911895],[3.780770],[8.586320],[-6.958590],[8.273907],[5.482544],[8.081613],[-7.161453],[2.711942],[7.866953],[-3.636869],[-4.816408],[-8.431412],[-0.323622],[4.343352],[6.279644],[-1.816122],[-9.701717],[-7.817338],[-8.665519],[-7.853033],[9.154882],[-1.105641],[8.579447],[-8.407190],[-3.187799],[0.116634],[8.783197],[9.824618],[-2.178254],[-6.546767],[-1.139870],[-9.299904],[-4.161482],[9.861295],[6.417906],[3.573524],[-2.268014],[-9.952992],[3.249996],[-7.732371],[-1.468897],[-1.585906],[3.840117],[0.433671],[1.651168],[-4.064386],[-4.438875],[-2.500373],[8.160891],[1.725444],[9.853319],[3.393918],[-3.321172],[5.425518],[-2.360805],[-3.636461],[-2.388422],[2.229780],[-4.593083],[0.071174],[-0.783547],[-7.180045],[-5.245496],[-2.305883],[-3.977131],[-2.898805],[-4.170948],[5.630451],[-2.746626],[-6.307039],[0.359661],[8.576473],[-2.699603],[3.210657],[2.265446],[-3.910528],[-0.112120],[7.132663],[6.864916],[8.773625],[8.362283],[4.787510],[8.794432],[4.563054],[8.988747],[9.455977],[-3.439863],[-3.594912],[5.528294],[3.966803],[-8.368786],[-3.849204],[-3.456889],[-2.376948],[0.864514],[-1.536241],[5.945477],[-5.781985],[-7.170278],[-7.398687],[-7.008445],[-0.335595],[-3.418650],[3.544255],[7.608349],[6.413495],[-6.015257],[-1.387325],[4.127464],[-4.130761],[-1.657622],[6.032410],[-6.378997],[0.705646],[8.137521],[-1.962282],[0.600725],[-1.762159],[-9.983007],[5.337267],[8.096951],[0.889893],[-9.313150],[-1.985418],[-7.630217],[8.496972],[4.897240],[9.159561],[-3.874425],[8.692023],[-4.896510],[9.705354],[-7.935526],[-7.895396],[0.316990],[-3.595301],[-3.952483],[-2.183885],[-7.178718],[-6.296964],[1.363123],[9.778110],[-9.755640],[-8.988583],[4.931544],[2.179742],[-2.585940],[7.031333],[-7.721780],[2.394264],[1.342093],[-8.524589],[7.832343],[3.836457],[-3.731689],[1.276686],[4.218868],[-1.706802],[3.502334],[-2.987111],[-4.882068],[-9.254730],[0.009972],[-3.479922],[9.962515],[4.125746],[4.976603],[-2.687744],[3.297226],[-2.952702],[1.723093],[5.948619],[5.113761],[6.265250],[2.374527],[4.343067],[2.026076],[-8.343387],[-8.543755],[-6.753063],[-9.255215],[-9.810336],[-7.343563],[-2.828216],[-9.074999],[6.963591],[-2.753197],[-3.449958],[-7.783022],[-7.892368],[-1.911403],[-3.294511],[-0.263711],[-5.185461],[3.086618],[-9.855987],[-4.292214],[3.730776],[-9.342699],[-7.639170],[3.541230],[-8.712108],[9.321400],[5.675602],[-5.916466],[1.111789],[7.742333],[-7.312464],[-1.662334],[-4.530632],[-6.135558],[2.783046],[-3.269332],[4.548698],[-5.269270],[5.221186],[1.376047],[-6.295981],[0.515869],[-4.483062],[6.995136],[-8.941835],[7.341094],[-6.709532],[3.750621],[7.496806],[-5.338522],[-5.044656],[-5.593347],[6.891382],[-2.153080],[-8.870568],[-4.191517],[-7.230377],[-3.682079],[-7.881878],[-2.619581],[-4.207738],[9.515114],[6.374594],[-8.198102],[-1.553633],[6.064055],[2.138653],[-5.474931],[-1.965825],[2.202060],[-5.894449],[1.671522],[8.253815],[-3.541632],[-3.772435],[-9.964798],[-5.050506],[2.217554],[-2.739597],[0.557656],[-2.886098],[-6.437780],[-6.195371],[-4.212987],[1.586343],[7.082906],[-4.841515],[-6.752054],[-5.946559],[7.771484],[2.494494],[0.309089],[0.421026],[1.961574],[-0.301245],[1.884579],[6.977045],[-9.019959],[-8.746392],[-8.083030],[0.101483],[-0.515843],[0.608590],[8.363904],[2.137857],[-6.697763],[7.074551],[-6.318315],[-8.156661],[-4.791283],[-7.213810],[-8.689419],[3.397173],[3.174665],[1.089233],[1.260020],[3.624090],[-4.627737],[-4.452402],[-9.618135],[-6.028722],[-4.075696],[2.957665],[0.391649],[-2.293387],[-4.926729],[5.523203],[-5.469849],[-4.809285],[-5.548482],[-0.698243],[-3.801946],[5.088496],[-5.238797],[-6.245766],[0.255928],[8.720472],[-1.846502],[3.362671],[-9.563134],[-1.909386],[-7.290988],[0.956781],[-2.867990],[5.386777],[-2.760391],[9.407274],[1.589533],[3.764442],[-8.748610],[1.252505],[8.555842],[-3.322067],[6.750380],[8.353925],[9.145455],[-5.465972],[8.722475],[0.481552],[4.463989],[-2.816121],[-2.108137],[-6.800021],[0.978392],[7.437181],[-8.313100],[9.110887],[7.887645],[7.599443],[8.052268],[-8.059108],[-6.211145],[1.804011],[8.613277],[-2.238268],[5.229275],[-0.824719],[-5.327635],[4.298027],[-4.434792],[2.541280],[4.160336],[-7.922463],[-5.007924],[1.073025],[-3.205831],[1.122651],[3.553708],[-1.889170],[2.629554],[7.049613],[-5.651999],[-7.754257],[0.718975],[-2.485042],[-7.186594],[-2.009591],[-8.838499],[-8.687606],[-5.011494],[1.214215],[5.927516],[-7.752251],[4.546933],[7.157085],[3.552662],[2.176854],[-9.366864],[-1.823065],[2.001548],[-5.176925],[-3.701163],[-1.690719],[6.361672],[-9.009721],[-3.765278],[6.532731],[-7.294556],[-7.289588],[-7.880169],[-9.620918],[3.169750],[2.130603],[4.004662],[7.421704],[-2.683106],[-2.205547],[-6.490908],[-7.816582],[8.561419],[1.621299],[-6.220839],[2.441084],[-6.845278],[-7.097177],[-6.859944],[-0.799739],[-5.618579],[1.619184],[1.278074],[-0.184750],[-8.423814],[9.563253],[7.457456],[6.584611],[-9.855567]], dtype = "float32")#candidate|6117|(1232, 1)|const|float32
call_6116 = relay.TupleGetItem(func_1823_call(relay.reshape(const_6117.astype('float32'), [1232,])), 1)
call_6118 = relay.TupleGetItem(func_1825_call(relay.reshape(const_6117.astype('float32'), [1232,])), 1)
func_2712_call = mod.get_global_var('func_2712')
func_2713_call = mutated_mod.get_global_var('func_2713')
call_6119 = func_2712_call()
call_6120 = func_2712_call()
output = relay.Tuple([call_6074,call_6098,call_6101,call_6116,const_6117,call_6119,])
output2 = relay.Tuple([call_6075,call_6099,call_6102,call_6118,const_6117,call_6120,])
func_6136 = relay.Function([], output)
mod['func_6136'] = func_6136
mod = relay.transform.InferType()(mod)
mutated_mod['func_6136'] = func_6136
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6136_call = mutated_mod.get_global_var('func_6136')
call_6137 = func_6136_call()
output = call_6137
func_6138 = relay.Function([], output)
mutated_mod['func_6138'] = func_6138
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_6170 = relay.TupleGetItem(func_2414_call(), 0)
call_6171 = relay.TupleGetItem(func_2415_call(), 0)
output = relay.Tuple([call_6170,])
output2 = relay.Tuple([call_6171,])
func_6173 = relay.Function([], output)
mod['func_6173'] = func_6173
mod = relay.transform.InferType()(mod)
output = func_6173()
func_6174 = relay.Function([], output)
mutated_mod['func_6174'] = func_6174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2321_call = mod.get_global_var('func_2321')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_6236 = func_2321_call()
call_6237 = func_2321_call()
output = relay.Tuple([call_6236,])
output2 = relay.Tuple([call_6237,])
func_6245 = relay.Function([], output)
mod['func_6245'] = func_6245
mod = relay.transform.InferType()(mod)
mutated_mod['func_6245'] = func_6245
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mutated_mod.get_global_var('func_6245')
call_6246 = func_6245_call()
output = call_6246
func_6247 = relay.Function([], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
call_6301 = relay.TupleGetItem(func_3261_call(), 2)
call_6302 = relay.TupleGetItem(func_3263_call(), 2)
output = call_6301
output2 = call_6302
func_6304 = relay.Function([], output)
mod['func_6304'] = func_6304
mod = relay.transform.InferType()(mod)
output = func_6304()
func_6305 = relay.Function([], output)
mutated_mod['func_6305'] = func_6305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_6311 = relay.TupleGetItem(func_6038_call(), 0)
call_6312 = relay.TupleGetItem(func_6040_call(), 0)
output = relay.Tuple([call_6311,])
output2 = relay.Tuple([call_6312,])
func_6313 = relay.Function([], output)
mod['func_6313'] = func_6313
mod = relay.transform.InferType()(mod)
mutated_mod['func_6313'] = func_6313
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6313_call = mutated_mod.get_global_var('func_6313')
call_6314 = func_6313_call()
output = call_6314
func_6315 = relay.Function([], output)
mutated_mod['func_6315'] = func_6315
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3785_call = mod.get_global_var('func_3785')
func_3787_call = mutated_mod.get_global_var('func_3787')
call_6329 = func_3785_call()
call_6330 = func_3785_call()
func_2132_call = mod.get_global_var('func_2132')
func_2133_call = mutated_mod.get_global_var('func_2133')
call_6334 = func_2132_call()
call_6335 = func_2132_call()
output = relay.Tuple([call_6329,call_6334,])
output2 = relay.Tuple([call_6330,call_6335,])
func_6351 = relay.Function([], output)
mod['func_6351'] = func_6351
mod = relay.transform.InferType()(mod)
output = func_6351()
func_6352 = relay.Function([], output)
mutated_mod['func_6352'] = func_6352
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6370 = relay.const([[[-9.143200,-2.520469,9.888359,4.013484,1.246568,-8.482766,-4.784009,-1.681173,-0.720132,1.415524,-9.067522,9.712258,-7.059859,6.771097,-3.148251],[-9.771838,-2.988577,5.534854,-5.900265,-8.990802,-3.467322,-9.105871,9.323236,9.504092,-4.154836,-0.628718,-3.504265,-5.178773,6.638487,-2.432634],[9.928939,-5.650731,1.644243,0.646607,-0.268429,-3.119894,-3.134369,6.510508,3.685398,5.051853,8.487000,-7.970472,-4.593435,0.449401,9.047535],[2.137199,-5.411508,-1.014017,7.435604,5.394736,-3.754662,3.264704,-3.869562,-8.249273,9.140280,0.152708,4.758440,8.236215,6.657374,1.737260],[-3.324289,9.122402,6.486746,6.304646,0.740813,-0.068729,-2.574534,8.349830,2.837815,-7.998279,0.682757,0.813994,8.079501,-3.415742,2.326575],[3.066201,9.768086,-2.849190,4.750553,7.261140,9.028123,-2.027321,6.131339,-2.470805,3.181045,-6.686471,8.191755,0.072348,-9.419597,7.674477],[1.993660,1.489603,5.877764,2.170901,8.937588,5.139986,4.726256,-1.954904,1.063566,7.149999,2.351941,-3.070618,1.616702,-2.069228,0.020662],[-7.576898,-3.788267,5.398559,6.356326,-5.405849,-7.483495,9.874735,1.140183,-0.449651,8.784064,0.768777,9.668980,1.194948,6.236737,-3.771115],[9.297573,-7.076345,0.130721,8.508190,-1.154672,9.881151,3.182551,-0.145049,9.991130,-9.201301,-7.762749,3.571781,3.465833,1.044983,-9.014361],[8.253838,-7.355671,-3.567656,-1.705682,-9.786559,3.704723,4.951266,4.732145,-4.287140,-1.674991,1.926773,-8.387992,6.731400,0.551145,9.010305]],[[-4.307255,6.630033,-0.758479,-9.222618,3.253670,1.154611,6.832634,6.375189,2.613465,2.894706,-6.959887,-5.147077,2.441003,-3.154330,-3.738484],[6.673507,3.677941,0.234970,-0.265074,-0.387378,0.605071,-7.415120,-0.395212,8.491468,4.257897,1.802332,3.114115,2.061513,5.202887,8.467616],[3.405255,7.995922,6.404886,-7.504251,-4.623766,2.538831,-5.176342,-4.540936,3.117716,-9.262119,-1.008083,8.689486,-8.314555,5.925943,-9.056266],[9.252996,4.440579,-7.143865,-5.187636,-1.244946,9.254654,-1.407053,9.668070,-2.740932,-0.812192,-8.408183,9.292853,-8.322056,-3.716907,4.494912],[-0.465885,-1.245356,7.582178,-3.680367,8.669511,5.430095,-3.152862,-6.678712,-3.335833,-9.245845,-2.014614,-8.564136,-5.632444,5.766651,-7.652851],[-6.425571,1.894411,-6.373722,9.423601,-1.385790,8.548272,-4.168526,3.386391,1.105256,0.566312,-7.020239,-2.514545,6.600667,6.675740,9.499763],[-2.691242,-0.704057,-3.545135,-8.518022,5.209655,-0.412351,-1.305657,-8.300290,-5.621556,-9.112293,-0.472498,3.834178,9.711865,4.555344,9.646257],[-7.762976,-6.244540,1.637803,3.142213,8.540082,6.196643,7.848106,-0.818556,0.432984,0.710240,-1.178348,4.222402,7.163849,0.813271,2.376785],[6.031916,-8.201866,0.243353,6.280427,8.320103,8.445593,-8.891324,0.191054,5.455784,4.411186,-1.904708,-0.523085,4.715596,-3.905308,-5.441526],[8.234370,8.300989,-9.867577,-0.232499,7.464804,-3.100319,-9.464359,3.263164,8.305185,-7.254341,0.909516,-1.317484,-9.253596,3.566136,-0.039289]],[[1.666193,-1.278639,3.815859,1.071901,-5.818819,-4.735134,0.660686,6.301638,-6.657535,3.469105,-5.417373,3.975274,-0.582773,-1.469335,-1.120838],[-6.941326,6.907427,-3.292256,6.355451,-4.993614,-9.502650,-0.589833,1.087593,-2.833411,-0.447586,-7.721344,-8.225279,1.060711,-3.540438,6.829207],[0.731558,-1.947299,-1.301665,5.000865,-2.764078,2.685464,-9.535741,-2.453694,3.049998,8.110293,4.951708,-0.079818,3.038346,-0.836609,-0.954270],[-6.881793,4.755747,-5.205096,0.272298,6.732852,7.958576,-2.996593,-8.385877,8.357852,2.856480,1.696173,-3.652859,9.839641,-5.992977,9.619337],[3.954317,-2.730946,-1.723482,-0.678884,-7.430069,1.668283,-9.058027,-6.366481,2.598981,-9.912699,-8.081835,5.273582,-3.997868,2.335668,-8.688145],[0.180014,-1.504698,5.189191,-9.124871,1.390466,9.588038,-8.994289,-8.272289,2.859792,-3.439329,9.581189,0.054941,9.049803,8.250667,-9.002520],[-5.175038,8.977958,7.958344,0.497820,-0.204971,6.469215,-9.108952,2.321273,-8.030484,-6.958851,-1.186436,2.082563,-2.611027,5.771238,1.753863],[7.804397,0.237770,4.782249,8.731853,-0.860616,4.031776,-7.247157,2.054356,-6.839805,-8.560073,-7.678704,-7.837674,-0.598239,7.227271,-3.578334],[-0.470141,-6.344899,-8.953993,-4.174654,-4.441276,9.655059,-4.389914,6.666587,4.245039,4.778200,-0.396530,7.606008,-4.955164,9.936479,4.699546],[-5.896113,-1.212556,-3.046878,-9.874408,-5.758692,3.889220,-6.030135,2.126877,-3.069993,-1.979448,-0.454544,3.071115,3.159668,-3.018180,8.426473]],[[7.419363,3.352445,-6.505774,-2.883875,-4.883058,-7.659265,1.083084,-4.540113,-7.109225,0.050193,-5.432584,-5.658438,1.033292,4.080801,-2.213716],[-2.907423,3.304548,3.065597,2.375322,-0.221820,3.262179,6.224467,-0.665145,6.018908,-4.711510,6.199801,9.810894,0.022628,6.491650,-6.158040],[5.753547,9.741508,-6.778356,2.418157,2.624234,1.421040,-5.784261,6.019476,-6.464266,0.755002,2.231221,-8.916525,-3.531983,-1.876472,-8.658457],[-2.361504,2.339891,-8.795553,-8.753720,4.773168,-6.626496,-8.752008,2.310334,3.014932,0.463132,2.375967,2.983785,5.387733,1.837496,7.314615],[-7.074045,0.521876,-3.369888,1.268537,7.883595,-3.603296,8.429757,-6.014339,-4.309080,5.712327,1.006206,-2.834953,-1.678168,-5.587454,4.014792],[5.934523,5.355897,2.021422,2.194548,9.684425,9.436932,-5.829757,-3.356265,-3.110452,-3.878799,-8.961928,-6.145819,-7.626773,-4.219557,-6.794661],[-3.438213,8.090773,-6.795578,5.160843,2.970289,6.850667,-3.443599,-9.607630,-8.169478,8.889318,-2.200625,-8.464569,9.894213,0.406895,-7.303957],[7.285308,7.225493,-8.614222,-2.075556,6.960450,-1.260072,-2.379213,-1.230695,-1.777944,9.817862,7.196729,1.109111,-4.127352,-2.101173,7.746650],[7.109256,-6.870680,4.642408,0.916772,-6.187495,-4.697345,7.491716,-3.527642,8.190348,-3.081348,-8.578978,-4.808020,-6.679015,-5.573356,-8.899791],[4.981059,9.235892,-9.533214,-4.382245,-6.312177,0.378966,-9.003103,6.119900,-7.131195,6.845709,-3.873603,6.679498,4.137419,9.444074,-4.659820]],[[7.911160,-9.898656,8.404343,-6.750931,-3.049420,3.592892,0.486412,-6.893760,-8.924766,1.893451,5.225272,6.356515,-5.977786,-0.219415,8.429606],[1.851778,-5.663883,9.390293,-4.499961,-3.673323,-5.572955,-4.499538,3.861595,-1.396235,-9.070437,5.707447,0.291042,-3.724244,8.052142,-2.817727],[4.035477,-0.563634,6.126048,-5.546816,4.446290,-9.565804,-1.619890,9.531101,7.488456,5.534173,0.197328,9.526708,1.161375,-5.989328,2.771892],[5.843929,-8.018660,-6.499207,3.273124,7.080532,1.683192,-1.083472,2.814203,6.281746,-3.425463,-3.636465,2.861316,-3.969868,5.266964,-1.872455],[5.432726,6.333109,7.994659,4.152232,-1.802442,1.816528,-1.875555,0.893427,6.101043,-4.446732,7.543694,6.178699,3.389507,-2.756402,-2.704006],[4.476518,-4.079750,1.733554,-9.066849,8.799991,1.172149,6.062618,-0.711545,9.815109,0.747355,9.967218,-1.869339,-9.076460,1.972290,-3.283187],[3.424649,7.919079,2.801614,5.410355,-6.863858,-4.392482,3.236098,3.124255,1.855257,9.432238,2.900247,9.626102,2.212444,4.516415,-4.833119],[-7.886162,9.315905,-1.692648,-5.958262,-3.734188,-1.541621,-9.696139,-6.685543,3.280762,2.284904,4.544582,-3.764513,-0.963816,-6.030283,-0.038328],[-3.105091,-2.252423,-3.623531,-4.993349,-7.492945,5.788766,6.196712,-2.632408,-6.156357,6.981699,-4.141174,-6.165187,-3.698484,-0.585312,-7.248385],[5.871801,7.725718,-5.928281,-0.927812,-7.167746,4.433379,7.610565,3.589091,1.509820,-0.357850,6.606986,7.504196,0.600314,3.425410,-0.236804]],[[-5.864887,-1.536905,6.438701,6.089126,8.239932,-1.450398,-0.007925,4.829841,2.605306,7.195233,-6.429009,-9.235086,-6.459793,4.002686,4.564056],[6.807410,8.765116,5.602811,-1.631516,5.925438,-6.873267,-4.238929,0.409392,-1.306292,-3.830419,-5.453930,8.745317,-9.986895,-2.984981,6.004456],[7.371292,3.589285,-1.770182,1.899173,-6.108838,-3.484723,-8.873488,0.499170,-3.533131,-5.697877,4.947663,9.474457,7.004882,-0.785565,2.641680],[7.413784,-0.424184,-1.898978,2.828533,3.123297,-0.346262,-2.864667,-7.809559,-2.000575,-0.961079,-4.172263,-7.649085,-7.751061,0.586154,2.412711],[-6.207980,-0.757624,-7.712064,7.286168,-8.110421,7.521274,-1.816873,-0.761429,4.934819,2.500345,1.107215,7.898981,-0.314659,-1.984632,-5.277022],[-9.889045,-8.160134,7.771827,0.035328,2.133807,4.362901,-1.478070,-8.170148,-5.912896,-8.819112,3.783996,9.287604,8.501863,-8.924517,-1.319268],[8.108787,6.149446,1.581067,-7.711384,8.972916,-8.465928,-0.278994,-0.251636,2.895778,-5.572801,8.297550,-5.229639,-8.740564,-8.059015,2.741536],[0.309149,0.444939,-5.462650,8.246468,-5.127654,-4.035952,3.044059,3.744044,-4.201869,3.815910,-6.125691,-8.256991,3.904039,-5.642706,-1.578839],[-5.413655,5.568423,-5.086713,-6.433311,-4.815758,6.767693,-0.330862,-8.436654,-8.536158,-2.807708,1.396225,-9.528822,0.463724,0.647839,6.073188],[1.174772,4.607040,-5.041296,0.405638,-4.965503,2.472487,-4.130317,-4.284445,4.886344,6.763724,-8.744418,0.137857,6.374170,7.206248,-9.722888]],[[-2.421859,-3.381293,-0.251601,5.725848,-6.442412,-5.229196,4.492432,5.147281,6.115095,2.939396,-7.235430,8.887050,-8.877884,5.255350,8.034896],[9.043511,6.140766,-8.205180,-8.568411,3.544726,6.613620,-9.121103,3.553866,-3.357634,-1.992757,3.616610,-2.655747,-0.256019,3.034221,-6.496319],[-1.789888,-5.863434,1.675395,3.092957,5.462293,-4.492289,-5.814354,8.913377,-0.593983,-4.274831,5.666659,-5.529728,2.322343,9.989863,-5.608637],[3.878705,2.214535,-5.829852,-9.213264,-2.932064,9.706126,-9.505674,5.301693,2.900177,-4.957324,-7.740547,8.829157,1.199653,-8.048793,-4.800671],[-9.779973,5.482866,5.359816,-2.563819,7.272580,5.077581,-8.113476,1.929968,-8.827800,2.835438,-5.765337,-6.674908,-3.333322,-4.840198,-9.697655],[9.485384,7.082557,-0.951781,5.697617,-2.844974,9.274022,7.182161,-0.548200,3.945396,2.694785,7.032551,8.312100,8.477115,0.795165,-4.293137],[-9.779995,-1.767061,-3.031697,5.820390,8.855289,-5.298261,8.968329,-1.325912,-8.981907,-2.825724,9.944722,-7.992474,-0.664879,-1.507139,0.127566],[4.874612,5.223781,5.174505,9.297296,5.121203,9.320699,9.415987,0.924906,-8.851094,-7.748165,9.228268,-4.287719,-1.567114,8.264913,-4.580467],[3.383100,6.279137,9.425967,-5.581171,8.532289,1.031693,2.973624,3.081462,1.236550,6.584718,8.160460,2.363779,-3.965116,-6.659885,-6.799484],[-5.554134,-1.643068,-0.612131,6.540180,-2.167266,-7.021584,6.662315,3.072748,-0.753365,-3.947959,-2.403804,-6.894368,2.611010,2.472146,7.610816]]], dtype = "float32")#candidate|6370|(7, 10, 15)|const|float32
uop_6371 = relay.sinh(const_6370.astype('float32')) # shape=(7, 10, 15)
func_2162_call = mod.get_global_var('func_2162')
func_2163_call = mutated_mod.get_global_var('func_2163')
call_6387 = relay.TupleGetItem(func_2162_call(), 2)
call_6388 = relay.TupleGetItem(func_2163_call(), 2)
bop_6392 = relay.bitwise_or(uop_6371.astype('int64'), relay.reshape(const_6370.astype('int64'), relay.shape_of(uop_6371))) # shape=(7, 10, 15)
output = relay.Tuple([call_6387,bop_6392,])
output2 = relay.Tuple([call_6388,bop_6392,])
func_6396 = relay.Function([], output)
mod['func_6396'] = func_6396
mod = relay.transform.InferType()(mod)
output = func_6396()
func_6397 = relay.Function([], output)
mutated_mod['func_6397'] = func_6397
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_6422 = func_2236_call()
call_6423 = func_2236_call()
func_4848_call = mod.get_global_var('func_4848')
func_4849_call = mutated_mod.get_global_var('func_4849')
call_6424 = relay.TupleGetItem(func_4848_call(), 1)
call_6425 = relay.TupleGetItem(func_4849_call(), 1)
func_3565_call = mod.get_global_var('func_3565')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_6455 = relay.TupleGetItem(func_3565_call(), 1)
call_6456 = relay.TupleGetItem(func_3567_call(), 1)
func_2749_call = mod.get_global_var('func_2749')
func_2751_call = mutated_mod.get_global_var('func_2751')
var_6459 = relay.var("var_6459", dtype = "bool", shape = (1848,))#candidate|6459|(1848,)|var|bool
call_6458 = relay.TupleGetItem(func_2749_call(relay.reshape(var_6459.astype('bool'), [1848,])), 0)
call_6460 = relay.TupleGetItem(func_2751_call(relay.reshape(var_6459.astype('bool'), [1848,])), 0)
output = relay.Tuple([call_6422,call_6424,call_6455,call_6458,var_6459,])
output2 = relay.Tuple([call_6423,call_6425,call_6456,call_6460,var_6459,])
func_6467 = relay.Function([var_6459,], output)
mod['func_6467'] = func_6467
mod = relay.transform.InferType()(mod)
var_6468 = relay.var("var_6468", dtype = "bool", shape = (1848,))#candidate|6468|(1848,)|var|bool
output = func_6467(var_6468)
func_6469 = relay.Function([var_6468], output)
mutated_mod['func_6469'] = func_6469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_6478 = relay.TupleGetItem(func_6351_call(), 1)
call_6479 = relay.TupleGetItem(func_6352_call(), 1)
output = relay.Tuple([call_6478,])
output2 = relay.Tuple([call_6479,])
func_6480 = relay.Function([], output)
mod['func_6480'] = func_6480
mod = relay.transform.InferType()(mod)
mutated_mod['func_6480'] = func_6480
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6480_call = mutated_mod.get_global_var('func_6480')
call_6481 = func_6480_call()
output = call_6481
func_6482 = relay.Function([], output)
mutated_mod['func_6482'] = func_6482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_6483 = relay.TupleGetItem(func_3026_call(), 0)
call_6484 = relay.TupleGetItem(func_3027_call(), 0)
output = relay.Tuple([call_6483,])
output2 = relay.Tuple([call_6484,])
func_6488 = relay.Function([], output)
mod['func_6488'] = func_6488
mod = relay.transform.InferType()(mod)
mutated_mod['func_6488'] = func_6488
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6488_call = mutated_mod.get_global_var('func_6488')
call_6489 = func_6488_call()
output = call_6489
func_6490 = relay.Function([], output)
mutated_mod['func_6490'] = func_6490
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_6505 = func_2097_call()
call_6506 = func_2097_call()
func_5000_call = mod.get_global_var('func_5000')
func_5003_call = mutated_mod.get_global_var('func_5003')
var_6508 = relay.var("var_6508", dtype = "bool", shape = (1183,))#candidate|6508|(1183,)|var|bool
call_6507 = relay.TupleGetItem(func_5000_call(relay.reshape(var_6508.astype('bool'), [7, 13, 13]), relay.reshape(var_6508.astype('bool'), [7, 13, 13]), ), 1)
call_6509 = relay.TupleGetItem(func_5003_call(relay.reshape(var_6508.astype('bool'), [7, 13, 13]), relay.reshape(var_6508.astype('bool'), [7, 13, 13]), ), 1)
func_6060_call = mod.get_global_var('func_6060')
func_6063_call = mutated_mod.get_global_var('func_6063')
const_6541 = relay.const([[-3,4,-4,-9],[-7,5,1,6],[5,-4,-3,1],[9,3,-3,6],[-3,9,-1,6],[-5,-2,2,-2],[-9,9,9,-10],[-7,-8,-7,8],[9,9,-6,-9],[-5,-9,1,3],[6,-10,1,-5],[6,-1,-10,-4],[8,10,-8,7],[2,-10,7,-2],[5,-10,-5,-7],[10,5,10,-10],[3,-4,-9,-4],[-7,5,-10,-9],[-9,1,5,5],[9,5,9,8],[5,5,-3,6],[-5,-5,6,-10],[-4,10,-1,5],[7,9,-7,-10],[-9,6,-7,-1],[1,-7,-10,5],[10,-3,10,-2],[10,-3,-8,-9],[9,8,-8,-10],[5,-10,-6,8],[10,-8,-1,-7],[2,10,-6,-7],[-4,3,-4,-5],[-10,-5,-7,2],[-4,8,-3,-8],[9,-4,-9,-10],[-8,7,5,2],[-6,-2,9,10],[6,-1,-7,3],[1,10,8,2],[-4,9,-2,5],[-9,-1,-2,-4],[-1,7,-7,3],[-6,5,5,-4],[-10,-8,-6,-8],[-1,5,-10,-10],[-5,-10,-5,-8],[7,9,-5,-1],[-7,-5,4,-10],[-2,8,4,-4],[5,1,8,5],[5,7,8,-2],[7,-8,3,-7],[4,9,-3,9],[9,-10,-9,2],[8,5,5,10],[7,6,5,4],[-9,7,8,-10],[6,-3,4,3],[5,9,-5,6],[7,3,3,1],[-2,4,6,6],[1,-9,7,8],[-7,-3,-5,6],[9,2,-9,-6],[3,1,-1,9],[8,-8,9,-8],[4,-3,-10,-9],[-10,-3,-3,-10],[-8,-6,-7,4],[5,2,-9,-4],[-4,1,8,5],[10,7,-8,2],[7,8,2,-3],[5,3,-8,6],[-4,5,7,-7],[7,-10,10,-10],[9,3,9,10],[-1,-7,-10,10],[2,-5,5,-5],[8,9,9,-7],[9,-2,5,-2],[7,-7,6,10],[-7,8,6,6],[1,4,-5,2],[10,-2,-8,-5],[-6,3,-2,-10],[7,-10,-1,1],[-2,-4,3,-8],[-2,9,-7,-4],[-7,-4,1,7],[-2,-2,-5,-9],[-7,3,10,4],[4,-1,-8,-1],[-3,5,9,-1],[2,7,8,4],[8,-5,9,-8],[1,-1,6,7],[8,-1,-5,-1],[-6,4,-4,-7],[-6,-1,-10,-7],[10,-3,3,-6],[-1,10,-7,-4],[-9,7,9,-8],[-8,9,9,2],[-5,8,4,-8],[8,2,-1,10],[-7,5,-3,-10],[-1,-1,-4,-4],[10,6,3,-9],[-4,-8,-9,4],[7,3,-2,3],[1,-6,8,5],[-9,2,-9,-6],[-3,-5,-5,2],[8,-4,-8,4],[4,6,9,10],[6,-3,-4,-5],[5,3,1,-4],[9,-1,-6,6],[-6,-1,-6,4],[-4,7,6,-7],[4,-3,-5,5],[-4,3,-3,1],[3,-8,-5,-3],[1,-9,1,-10],[-7,-9,-7,-6],[-3,2,-2,-9],[6,-6,-10,-10],[-8,-8,6,-4],[-8,-3,9,7],[-2,10,-3,-9],[-6,10,5,-9],[-10,1,-4,6],[10,-8,-3,-3],[-7,9,3,10],[2,-7,1,-9],[2,8,-7,-9],[-8,-7,3,5],[4,1,1,-9],[3,-9,2,9],[8,-2,-4,3],[8,-10,-10,3],[1,9,7,-3],[4,9,10,1],[-5,-4,-4,10],[4,4,-7,8],[-1,7,7,-2],[-4,8,-9,1],[-4,5,-1,-9],[-5,9,-10,-9],[3,2,-10,2],[5,7,3,-8],[-4,-4,-7,9],[5,-3,4,7],[2,1,4,-7],[5,1,-3,-2],[3,1,10,2],[-8,2,1,-3],[-1,-6,-8,-1],[6,-9,-2,-7],[9,-5,-9,-6],[-3,3,2,-8],[10,5,6,9],[8,2,-10,-5],[10,10,8,-8],[-8,7,-7,-2],[-9,-5,3,-7],[-3,-2,-2,4],[8,9,1,9],[8,-1,10,-2],[-8,-4,-2,-3],[1,-9,-2,-3],[8,8,-1,1],[4,-4,3,5],[-2,4,1,-8],[3,-5,2,-7],[2,-10,-4,-4],[-4,7,2,-3],[-3,10,-4,-8],[6,2,-3,-8],[4,-10,10,-9],[10,-4,-9,1],[-3,8,9,-6],[9,-3,-7,-9],[-1,-1,3,-7],[-9,-9,9,-2],[9,2,6,-5],[6,-7,-8,-5],[-5,2,-10,1],[2,-8,10,-5],[-8,8,-7,-8],[8,-7,2,-7],[-10,-3,10,10],[3,-4,5,-3],[10,-6,-2,-1],[10,1,4,6],[-9,-6,4,10],[1,-2,3,1],[7,-10,2,1],[1,-3,-10,-9],[-10,5,-1,3],[8,10,3,7],[-9,-6,10,2],[-9,-6,-3,-7],[2,-9,8,-6],[-9,8,-10,-1],[3,9,-5,5],[-5,3,10,1],[2,6,1,-6],[10,2,10,8],[-1,5,7,1],[2,10,-4,3],[-2,-3,3,-5],[5,5,-3,9],[2,-1,3,-3],[-6,9,5,-3],[3,9,-9,-10],[-4,-10,-10,10],[-2,-2,-2,1],[9,7,2,-2],[10,-2,8,3],[-9,-6,9,-10],[6,7,-1,6],[-8,6,5,-6],[1,-3,-10,-10],[7,-7,-1,-9],[-2,-3,-5,-3],[-3,3,-8,4],[7,-8,-4,-5],[4,9,-10,2],[-7,3,5,-4],[-6,8,-6,-3],[10,9,10,4],[5,-9,4,-6],[-8,2,6,4],[3,-4,-4,1],[8,5,1,4],[-5,-10,6,-1],[-5,-8,10,-1],[-3,3,1,9],[-3,9,-6,-1],[-8,9,7,8],[4,2,-5,-9],[9,-6,-8,-2],[-1,-7,6,9],[9,7,9,-9],[-1,-9,6,-5],[-9,-7,-7,-8],[-2,7,-2,-1],[6,10,-3,-8],[-10,1,4,10],[8,-2,8,5],[-6,-9,3,-3],[10,-4,-2,7],[1,9,5,-3],[-9,-2,-9,-9],[3,7,-8,3],[-4,8,1,-10],[-5,-10,-8,-7],[-7,6,-8,-1],[10,7,8,5],[8,8,1,10],[6,-10,2,-3],[-8,5,3,9],[3,3,-5,-5],[-4,-10,10,-2],[-1,-1,4,2],[-3,10,-4,-3],[-2,-10,7,-9]], dtype = "int64")#candidate|6541|(270, 4)|const|int64
call_6540 = relay.TupleGetItem(func_6060_call(relay.reshape(const_6541.astype('int64'), [10, 9, 12])), 0)
call_6542 = relay.TupleGetItem(func_6063_call(relay.reshape(const_6541.astype('int64'), [10, 9, 12])), 0)
func_5108_call = mod.get_global_var('func_5108')
func_5110_call = mutated_mod.get_global_var('func_5110')
call_6543 = func_5108_call()
call_6544 = func_5108_call()
output = relay.Tuple([call_6505,call_6507,var_6508,call_6540,const_6541,call_6543,])
output2 = relay.Tuple([call_6506,call_6509,var_6508,call_6542,const_6541,call_6544,])
func_6545 = relay.Function([var_6508,], output)
mod['func_6545'] = func_6545
mod = relay.transform.InferType()(mod)
var_6546 = relay.var("var_6546", dtype = "bool", shape = (1183,))#candidate|6546|(1183,)|var|bool
output = func_6545(var_6546)
func_6547 = relay.Function([var_6546], output)
mutated_mod['func_6547'] = func_6547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_6595 = relay.TupleGetItem(func_1467_call(), 0)
call_6596 = relay.TupleGetItem(func_1468_call(), 0)
output = call_6595
output2 = call_6596
func_6603 = relay.Function([], output)
mod['func_6603'] = func_6603
mod = relay.transform.InferType()(mod)
mutated_mod['func_6603'] = func_6603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6603_call = mutated_mod.get_global_var('func_6603')
call_6604 = func_6603_call()
output = call_6604
func_6605 = relay.Function([], output)
mutated_mod['func_6605'] = func_6605
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3901_call = mod.get_global_var('func_3901')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_6693 = relay.TupleGetItem(func_3901_call(), 2)
call_6694 = relay.TupleGetItem(func_3902_call(), 2)
output = call_6693
output2 = call_6694
func_6718 = relay.Function([], output)
mod['func_6718'] = func_6718
mod = relay.transform.InferType()(mod)
output = func_6718()
func_6719 = relay.Function([], output)
mutated_mod['func_6719'] = func_6719
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3283_call = mod.get_global_var('func_3283')
func_3284_call = mutated_mod.get_global_var('func_3284')
call_6746 = func_3283_call()
call_6747 = func_3283_call()
output = call_6746
output2 = call_6747
func_6752 = relay.Function([], output)
mod['func_6752'] = func_6752
mod = relay.transform.InferType()(mod)
mutated_mod['func_6752'] = func_6752
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6752_call = mutated_mod.get_global_var('func_6752')
call_6753 = func_6752_call()
output = call_6753
func_6754 = relay.Function([], output)
mutated_mod['func_6754'] = func_6754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_6857 = relay.TupleGetItem(func_3026_call(), 0)
call_6858 = relay.TupleGetItem(func_3027_call(), 0)
func_5763_call = mod.get_global_var('func_5763')
func_5765_call = mutated_mod.get_global_var('func_5765')
call_6864 = relay.TupleGetItem(func_5763_call(), 0)
call_6865 = relay.TupleGetItem(func_5765_call(), 0)
func_2097_call = mod.get_global_var('func_2097')
func_2099_call = mutated_mod.get_global_var('func_2099')
call_6873 = func_2097_call()
call_6874 = func_2097_call()
func_3400_call = mod.get_global_var('func_3400')
func_3402_call = mutated_mod.get_global_var('func_3402')
call_6875 = func_3400_call()
call_6876 = func_3400_call()
output = relay.Tuple([call_6857,call_6864,call_6873,call_6875,])
output2 = relay.Tuple([call_6858,call_6865,call_6874,call_6876,])
func_6878 = relay.Function([], output)
mod['func_6878'] = func_6878
mod = relay.transform.InferType()(mod)
mutated_mod['func_6878'] = func_6878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6878_call = mutated_mod.get_global_var('func_6878')
call_6879 = func_6878_call()
output = call_6879
func_6880 = relay.Function([], output)
mutated_mod['func_6880'] = func_6880
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3493_call = mod.get_global_var('func_3493')
func_3495_call = mutated_mod.get_global_var('func_3495')
call_6909 = relay.TupleGetItem(func_3493_call(), 0)
call_6910 = relay.TupleGetItem(func_3495_call(), 0)
output = call_6909
output2 = call_6910
func_6919 = relay.Function([], output)
mod['func_6919'] = func_6919
mod = relay.transform.InferType()(mod)
mutated_mod['func_6919'] = func_6919
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6919_call = mutated_mod.get_global_var('func_6919')
call_6920 = func_6919_call()
output = call_6920
func_6921 = relay.Function([], output)
mutated_mod['func_6921'] = func_6921
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5784_call = mod.get_global_var('func_5784')
func_5786_call = mutated_mod.get_global_var('func_5786')
call_6930 = relay.TupleGetItem(func_5784_call(), 1)
call_6931 = relay.TupleGetItem(func_5786_call(), 1)
func_5861_call = mod.get_global_var('func_5861')
func_5862_call = mutated_mod.get_global_var('func_5862')
call_6938 = relay.TupleGetItem(func_5861_call(), 1)
call_6939 = relay.TupleGetItem(func_5862_call(), 1)
output = relay.Tuple([call_6930,call_6938,])
output2 = relay.Tuple([call_6931,call_6939,])
func_6948 = relay.Function([], output)
mod['func_6948'] = func_6948
mod = relay.transform.InferType()(mod)
mutated_mod['func_6948'] = func_6948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mutated_mod.get_global_var('func_6948')
call_6949 = func_6948_call()
output = call_6949
func_6950 = relay.Function([], output)
mutated_mod['func_6950'] = func_6950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4641_call = mod.get_global_var('func_4641')
func_4642_call = mutated_mod.get_global_var('func_4642')
call_6994 = relay.TupleGetItem(func_4641_call(), 1)
call_6995 = relay.TupleGetItem(func_4642_call(), 1)
func_4350_call = mod.get_global_var('func_4350')
func_4352_call = mutated_mod.get_global_var('func_4352')
call_7019 = relay.TupleGetItem(func_4350_call(), 3)
call_7020 = relay.TupleGetItem(func_4352_call(), 3)
var_7022 = relay.var("var_7022", dtype = "int64", shape = (60, 36))#candidate|7022|(60, 36)|var|int64
bop_7023 = relay.less(call_7019.astype('bool'), relay.reshape(var_7022.astype('bool'), relay.shape_of(call_7019))) # shape=(60, 36)
bop_7026 = relay.less(call_7020.astype('bool'), relay.reshape(var_7022.astype('bool'), relay.shape_of(call_7020))) # shape=(60, 36)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_7027 = func_5414_call()
call_7028 = func_5414_call()
output = relay.Tuple([call_6994,bop_7023,call_7027,])
output2 = relay.Tuple([call_6995,bop_7026,call_7028,])
func_7038 = relay.Function([var_7022,], output)
mod['func_7038'] = func_7038
mod = relay.transform.InferType()(mod)
mutated_mod['func_7038'] = func_7038
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7039 = relay.var("var_7039", dtype = "int64", shape = (60, 36))#candidate|7039|(60, 36)|var|int64
func_7038_call = mutated_mod.get_global_var('func_7038')
call_7040 = func_7038_call(var_7039)
output = call_7040
func_7041 = relay.Function([var_7039], output)
mutated_mod['func_7041'] = func_7041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3342_call = mod.get_global_var('func_3342')
func_3343_call = mutated_mod.get_global_var('func_3343')
call_7100 = func_3342_call()
call_7101 = func_3342_call()
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_7102 = func_4787_call()
call_7103 = func_4787_call()
output = relay.Tuple([call_7100,call_7102,])
output2 = relay.Tuple([call_7101,call_7103,])
func_7113 = relay.Function([], output)
mod['func_7113'] = func_7113
mod = relay.transform.InferType()(mod)
output = func_7113()
func_7114 = relay.Function([], output)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_7146 = relay.TupleGetItem(func_3163_call(), 0)
call_7147 = relay.TupleGetItem(func_3164_call(), 0)
output = relay.Tuple([call_7146,])
output2 = relay.Tuple([call_7147,])
func_7157 = relay.Function([], output)
mod['func_7157'] = func_7157
mod = relay.transform.InferType()(mod)
output = func_7157()
func_7158 = relay.Function([], output)
mutated_mod['func_7158'] = func_7158
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7173 = relay.var("var_7173", dtype = "uint64", shape = (8, 16, 2))#candidate|7173|(8, 16, 2)|var|uint64
var_7174 = relay.var("var_7174", dtype = "uint64", shape = (8, 16, 2))#candidate|7174|(8, 16, 2)|var|uint64
bop_7175 = relay.multiply(var_7173.astype('uint64'), relay.reshape(var_7174.astype('uint64'), relay.shape_of(var_7173))) # shape=(8, 16, 2)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_7178 = func_1513_call()
call_7179 = func_1513_call()
func_4641_call = mod.get_global_var('func_4641')
func_4642_call = mutated_mod.get_global_var('func_4642')
call_7181 = relay.TupleGetItem(func_4641_call(), 1)
call_7182 = relay.TupleGetItem(func_4642_call(), 1)
uop_7195 = relay.asinh(var_7173.astype('float32')) # shape=(8, 16, 2)
output = relay.Tuple([bop_7175,call_7178,call_7181,uop_7195,])
output2 = relay.Tuple([bop_7175,call_7179,call_7182,uop_7195,])
func_7198 = relay.Function([var_7173,var_7174,], output)
mod['func_7198'] = func_7198
mod = relay.transform.InferType()(mod)
var_7199 = relay.var("var_7199", dtype = "uint64", shape = (8, 16, 2))#candidate|7199|(8, 16, 2)|var|uint64
var_7200 = relay.var("var_7200", dtype = "uint64", shape = (8, 16, 2))#candidate|7200|(8, 16, 2)|var|uint64
output = func_7198(var_7199,var_7200,)
func_7201 = relay.Function([var_7199,var_7200,], output)
mutated_mod['func_7201'] = func_7201
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4317_call = mod.get_global_var('func_4317')
func_4318_call = mutated_mod.get_global_var('func_4318')
call_7248 = func_4317_call()
call_7249 = func_4317_call()
output = relay.Tuple([call_7248,])
output2 = relay.Tuple([call_7249,])
func_7250 = relay.Function([], output)
mod['func_7250'] = func_7250
mod = relay.transform.InferType()(mod)
output = func_7250()
func_7251 = relay.Function([], output)
mutated_mod['func_7251'] = func_7251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5231_call = mod.get_global_var('func_5231')
func_5232_call = mutated_mod.get_global_var('func_5232')
call_7279 = relay.TupleGetItem(func_5231_call(), 1)
call_7280 = relay.TupleGetItem(func_5232_call(), 1)
func_6603_call = mod.get_global_var('func_6603')
func_6605_call = mutated_mod.get_global_var('func_6605')
call_7283 = func_6603_call()
call_7284 = func_6603_call()
func_7250_call = mod.get_global_var('func_7250')
func_7251_call = mutated_mod.get_global_var('func_7251')
call_7295 = relay.TupleGetItem(func_7250_call(), 0)
call_7296 = relay.TupleGetItem(func_7251_call(), 0)
output = relay.Tuple([call_7279,call_7283,call_7295,])
output2 = relay.Tuple([call_7280,call_7284,call_7296,])
func_7303 = relay.Function([], output)
mod['func_7303'] = func_7303
mod = relay.transform.InferType()(mod)
mutated_mod['func_7303'] = func_7303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7303_call = mutated_mod.get_global_var('func_7303')
call_7304 = func_7303_call()
output = call_7304
func_7305 = relay.Function([], output)
mutated_mod['func_7305'] = func_7305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5231_call = mod.get_global_var('func_5231')
func_5232_call = mutated_mod.get_global_var('func_5232')
call_7317 = relay.TupleGetItem(func_5231_call(), 0)
call_7318 = relay.TupleGetItem(func_5232_call(), 0)
func_1281_call = mod.get_global_var('func_1281')
func_1284_call = mutated_mod.get_global_var('func_1284')
const_7348 = relay.const([False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,True,True,True,True,False,True,True,True,False,False,True,False,False,True,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,True,True,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,True,True,False,False,True,True,True,False,True,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,True,False,False,False,False,False,True,True,False,True,False,True,False,True,False,True,True,False,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,True,False,False,True,True,False,True,False,True,True,True,False,True,True,True,False,False,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,True,True,False,True,False,True,True,True,True,True,True,True,True,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,True,True,False,True,False,True,False,True,False,False,True,True,False,False,True,False,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,False,True,False,True,True,True,False,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,True,True,False,True,True,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,True,True,True,True,True,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,False,True,False,False,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,True,False,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,True,True,False,False,False,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,True,False,False,True,True,False,True,False,False,False,True,True,True,True,False,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,False,True,True,False,False,False,False,False,False,True,False,False,False,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,True,False,False,False,False,True,False,True,False,True,True,False,False,False,True,False,False,True,False,False,False,False,True,False,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,False,True,True,False,True,True,False,False,False,True,False,True,False,False,True,False,True,True,False,False,True,True,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,True,False,True,False,False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,False,True,False,False,False,False,True,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,True,False,False,False,False,False,False,False,True,False,True,True,True,True,False,True,False,True,True,False,False,True,False,True,False,False,True,False,False,True,False,True,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,True,True,True,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,False,True,True,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,True,False,True,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,False,False,False,False,True,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,False,False,True,True,False,True,False,False,True,False,False,True,False,True,False,True,False,True,True,False,True,False,False,True,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,False,False,False,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,True,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,True,True,True,False,False,True,True,True,True,True,True,True,False,False,False,False,True,True,True,True,False,False,False,True,True,True,False,True,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,True,False,False,True,False,True,False,True,False,False,True,False,True,False,False,False,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,True,True,False,True,True,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,False,False,False,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,True,False,True,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,False,False,True,False,True,True,False,True,True,True,False,False,False,True,True,True,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,True,True,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,False,True,True,False,False,False,True,False,False], dtype = "bool")#candidate|7348|(1848,)|const|bool
const_7349 = relay.const([-6,8,-10,8,4,5,1,-4,-7,7,-8,6,-2,10,-10,-9,8,4,-8,7,4,-7,1,5,-4,-5,-3,4,10,5,8,8,-3,-5,5,-7,8,-3,7,9,8,4,7,-9,1,-8,-9,-7,1,5,8,4,-6,-4,-4,-6,9,6,-7,4,10,-9,10,-3,-9,-6,10,2,-6,-1,-9,5,-5,3,-7,-2,-9,-7,-6,-10,9,-4,4,5,2,4,-10,-1,-9,9,-3,4,1,-1,-4,-3,-4,9,3,-2,9,8,5,4,-6,-2,3,9,1,-2,10,5,-2,-6,10,2,3,9,-9,-2,8,-2,-3,-7,-2,7,-6,-9,-9,-5,-2,8,-7,5,-2,1,-4,2,-5,-10,-8,2,-1,2,6,1,-4,-7,-8,7,1,9,-2,-1,-10,5], dtype = "int32")#candidate|7349|(156,)|const|int32
call_7347 = relay.TupleGetItem(func_1281_call(relay.reshape(const_7348.astype('bool'), [6, 308]), relay.reshape(const_7349.astype('int32'), [156,]), ), 4)
call_7350 = relay.TupleGetItem(func_1284_call(relay.reshape(const_7348.astype('bool'), [6, 308]), relay.reshape(const_7349.astype('int32'), [156,]), ), 4)
uop_7369 = relay.asin(const_7348.astype('float64')) # shape=(1848,)
bop_7377 = relay.logical_or(uop_7369.astype('bool'), relay.reshape(const_7348.astype('bool'), relay.shape_of(uop_7369))) # shape=(1848,)
uop_7399 = relay.log10(const_7348.astype('float64')) # shape=(1848,)
bop_7409 = relay.left_shift(bop_7377.astype('uint8'), relay.reshape(uop_7369.astype('uint8'), relay.shape_of(bop_7377))) # shape=(1848,)
bop_7425 = relay.bitwise_or(uop_7369.astype('int16'), relay.reshape(bop_7377.astype('int16'), relay.shape_of(uop_7369))) # shape=(1848,)
bop_7436 = relay.bitwise_xor(bop_7377.astype('uint16'), relay.reshape(bop_7409.astype('uint16'), relay.shape_of(bop_7377))) # shape=(1848,)
output = relay.Tuple([call_7317,call_7347,const_7349,uop_7399,bop_7425,bop_7436,])
output2 = relay.Tuple([call_7318,call_7350,const_7349,uop_7399,bop_7425,bop_7436,])
func_7444 = relay.Function([], output)
mod['func_7444'] = func_7444
mod = relay.transform.InferType()(mod)
mutated_mod['func_7444'] = func_7444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7444_call = mutated_mod.get_global_var('func_7444')
call_7445 = func_7444_call()
output = call_7445
func_7446 = relay.Function([], output)
mutated_mod['func_7446'] = func_7446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2236_call = mod.get_global_var('func_2236')
func_2238_call = mutated_mod.get_global_var('func_2238')
call_7495 = func_2236_call()
call_7496 = func_2236_call()
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_7501 = relay.TupleGetItem(func_1128_call(), 0)
call_7502 = relay.TupleGetItem(func_1129_call(), 0)
func_3992_call = mod.get_global_var('func_3992')
func_3993_call = mutated_mod.get_global_var('func_3993')
call_7503 = relay.TupleGetItem(func_3992_call(), 1)
call_7504 = relay.TupleGetItem(func_3993_call(), 1)
func_3901_call = mod.get_global_var('func_3901')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_7509 = relay.TupleGetItem(func_3901_call(), 0)
call_7510 = relay.TupleGetItem(func_3902_call(), 0)
output = relay.Tuple([call_7495,call_7501,call_7503,call_7509,])
output2 = relay.Tuple([call_7496,call_7502,call_7504,call_7510,])
func_7517 = relay.Function([], output)
mod['func_7517'] = func_7517
mod = relay.transform.InferType()(mod)
mutated_mod['func_7517'] = func_7517
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7517_call = mutated_mod.get_global_var('func_7517')
call_7518 = func_7517_call()
output = call_7518
func_7519 = relay.Function([], output)
mutated_mod['func_7519'] = func_7519
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_7544 = func_4787_call()
call_7545 = func_4787_call()
output = relay.Tuple([call_7544,])
output2 = relay.Tuple([call_7545,])
func_7548 = relay.Function([], output)
mod['func_7548'] = func_7548
mod = relay.transform.InferType()(mod)
mutated_mod['func_7548'] = func_7548
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7548_call = mutated_mod.get_global_var('func_7548')
call_7549 = func_7548_call()
output = call_7549
func_7550 = relay.Function([], output)
mutated_mod['func_7550'] = func_7550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2321_call = mod.get_global_var('func_2321')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_7581 = func_2321_call()
call_7582 = func_2321_call()
output = relay.Tuple([call_7581,])
output2 = relay.Tuple([call_7582,])
func_7587 = relay.Function([], output)
mod['func_7587'] = func_7587
mod = relay.transform.InferType()(mod)
output = func_7587()
func_7588 = relay.Function([], output)
mutated_mod['func_7588'] = func_7588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5610_call = mod.get_global_var('func_5610')
func_5612_call = mutated_mod.get_global_var('func_5612')
call_7632 = relay.TupleGetItem(func_5610_call(), 1)
call_7633 = relay.TupleGetItem(func_5612_call(), 1)
func_3058_call = mod.get_global_var('func_3058')
func_3059_call = mutated_mod.get_global_var('func_3059')
call_7650 = relay.TupleGetItem(func_3058_call(), 0)
call_7651 = relay.TupleGetItem(func_3059_call(), 0)
output = relay.Tuple([call_7632,call_7650,])
output2 = relay.Tuple([call_7633,call_7651,])
func_7652 = relay.Function([], output)
mod['func_7652'] = func_7652
mod = relay.transform.InferType()(mod)
output = func_7652()
func_7653 = relay.Function([], output)
mutated_mod['func_7653'] = func_7653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3283_call = mod.get_global_var('func_3283')
func_3284_call = mutated_mod.get_global_var('func_3284')
call_7659 = func_3283_call()
call_7660 = func_3283_call()
output = relay.Tuple([call_7659,])
output2 = relay.Tuple([call_7660,])
func_7678 = relay.Function([], output)
mod['func_7678'] = func_7678
mod = relay.transform.InferType()(mod)
mutated_mod['func_7678'] = func_7678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7678_call = mutated_mod.get_global_var('func_7678')
call_7679 = func_7678_call()
output = call_7679
func_7680 = relay.Function([], output)
mutated_mod['func_7680'] = func_7680
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3283_call = mod.get_global_var('func_3283')
func_3284_call = mutated_mod.get_global_var('func_3284')
call_7797 = func_3283_call()
call_7798 = func_3283_call()
output = call_7797
output2 = call_7798
func_7808 = relay.Function([], output)
mod['func_7808'] = func_7808
mod = relay.transform.InferType()(mod)
mutated_mod['func_7808'] = func_7808
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7808_call = mutated_mod.get_global_var('func_7808')
call_7809 = func_7808_call()
output = call_7809
func_7810 = relay.Function([], output)
mutated_mod['func_7810'] = func_7810
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3139_call = mod.get_global_var('func_3139')
func_3140_call = mutated_mod.get_global_var('func_3140')
call_7896 = relay.TupleGetItem(func_3139_call(), 0)
call_7897 = relay.TupleGetItem(func_3140_call(), 0)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_7903 = relay.const([2.608201,5.781601,-4.114053,-5.603723,-4.922749,-4.001335,8.215834,-0.929480,-7.613112,4.828442,-0.909308,8.218428,-8.948606,8.546747,-6.819498,0.283809,1.018808,-5.201986,3.615069,5.187916,1.366045,-0.090730,-5.920329,7.045609,0.909208,8.946543,1.072742,-2.714896,-9.883004,6.362373,-7.608656,-5.444987,0.256018,5.689872,4.097642,-6.856033,-3.354853,1.277175,-1.026386,-1.300058,0.744381,5.701668,-8.109364,-4.336930,3.287810,7.055863,-0.085690,2.840112,9.486587,-6.409851,2.944157,9.507849,6.348493,-1.542602,9.708619,-1.004682,4.689840,9.022354,9.576162,-5.302222,-9.308876,7.871104,3.406522,-8.596939,4.822485,9.659467,-7.968897,2.930209,5.833207,2.108603,-7.824694,7.046184,5.595616,8.036727,8.083529,-9.470637,-8.437720,-1.334462,-6.328408,-9.271090,-3.983022,7.217321,-5.355019,-0.217386,-1.722556,-6.516627,8.192537,-2.667010,9.565630,-3.136206,9.430777,-5.684801,-7.056591,6.130050,7.172126,-2.002135,6.368169,-9.545491,-0.361187,4.326115,-9.215968,8.331113,-2.830520,3.071671,-2.944004,-7.482689,-4.726869,4.693029,0.742034,7.608196,-1.453340,-8.235343,2.431657,8.396073,-7.769307,4.461762,-4.396225,-2.501332,-4.952964,-0.467503,8.443121,4.568719,0.970022,-1.622407,7.275726,-7.638538,-5.519226,-2.460277,5.387365,3.010629,-5.656701,2.062442,-2.361072,0.705700,2.087371,4.108328,-0.985784,-0.948944,9.856543,0.427174,-3.034658,-5.412641,-7.376637,3.514136,-6.358340,3.318585,0.433751,8.740468,1.722162,-2.224945,5.465220,4.263525,-6.607283,9.046287,0.296468,4.778857,-6.479369,-8.148415,-4.537884,0.462120,-0.046768,1.153065,6.907373,6.832692,-2.020725,9.215562,6.252880,2.793753,-9.308955,1.765302,9.934094,1.662139,-2.851366,7.878771,3.367396,9.507221,3.495001,9.099299,-6.929678,4.639890,5.252206,-0.541052,-3.370100,-1.767143,-6.145220,-8.836337,-7.821144,-4.724411,1.341413,6.165183,-0.809654,-8.130129,-2.939090,-9.075540,2.027403,4.896826,-5.168474,5.780493,5.845210,6.374882,-2.485421,-3.379876,8.933250,6.992220,-6.595097,-9.186417,-3.192000,-7.484980,-7.954183,4.499969,7.990585,-8.737014,-5.198465,-6.023499,-5.487504,5.594402,7.516905,3.696754,-3.810199,5.572060,-8.259330,6.546625,-0.361446,2.179339,-1.350983,-0.023158,6.371384,6.415775,2.194757,5.701614,4.617575,-5.044019,-0.150405,-1.448954,-9.514356,9.699635,7.837483,9.204640,9.367916,-9.363933,5.344589,1.971338,-7.424119,-3.296571,-4.889560,5.659825,1.060760,-6.554835,6.933355,-3.416199,-7.289773,-4.475765,1.804157,4.952017,-3.581590,-9.398379,5.556402,-8.773257,3.813152,8.918474,3.047966,8.204730,-7.708119,-5.138659,-6.060716,2.095610,3.913516,-9.199691,-9.068584,5.000730,-8.990777,-9.611002,3.581411,7.223474,-9.459187,-3.540472,5.365789,-1.417887,1.243647,5.493174,1.257630,-9.593006,6.745476,4.421545,-6.961474,-7.176184,5.617274,-4.675471,-2.014794,6.680694,-4.401716,-3.625213,2.273719,3.912585,8.454820,7.697632,-4.551184,1.683510,-1.267471,1.098491,0.758829,6.437560,-0.113234,2.133426,4.937663,9.312998,-1.704147,6.454519,-7.943185,-3.903126,-8.678346,7.050529,8.758170,-9.269775,8.729048,9.779289,6.448229,0.307219,-2.972647,-3.782543,2.896178,-6.098955,1.854712,-8.656079,-0.999060,-2.031131,-8.554195,6.335978,-1.341314,3.092651,6.781781,8.023415,-5.668837,8.235817,6.764412,-0.116405,9.400682,8.990616,3.910358,1.983282,-3.505034,-6.113051,0.396758,9.446039,9.143697,3.959904,9.524489,1.042017,-2.694234,-1.956422,4.508125,-0.702241,0.512911,0.641695,0.515420,6.591443,-3.621664,-7.255204,8.936352,-2.157727,4.022140,-7.882346,-5.689103,-1.478772,-2.438913,-4.168440,1.083468,-2.938591,-3.712656,4.713017,-9.501000,-9.615211,-1.411338,-8.646768,-2.503343,-5.770900,6.676551,-7.279367,4.292893,-8.270654,4.493076,4.640652,4.123220,-9.457097,2.463281,-5.596717,-5.397905,4.148435,8.170539,-4.493651,-9.473713,7.804600,3.996149,6.922412,-9.700037,-9.678692,-7.658478,7.832870,-5.812086,-6.247794,2.901162,6.877026,4.697739,5.443215,2.733741,-8.569019,-4.739676,2.995074,7.310846,-4.088080,-1.776732,0.479702,-3.397051,-6.774120,-9.004878,2.211390,2.031310,9.065010,8.779102,-6.046995,9.587422,-6.278588,-4.349733,8.440529,-1.809235,-9.578394,8.515427,6.102800,-1.408572,-6.420991,-9.159525,-8.110699,-6.177071,-1.933835,-9.529368,-8.575267,9.158689,-0.038543,-7.677019,5.876608,1.522872,0.776756,-9.540964,7.434992,2.733902,5.368863,6.041241,6.804985,-4.783877,2.823406,-3.194104,-5.288941,-5.130083,-1.620494,-4.567888,0.966513,4.386320,-6.131739,5.612560,-9.283473,9.673947,3.424539,7.601196,8.889528,-3.937355,2.776130,-0.898129,2.240813,-7.422261,-6.133725,8.806155,-1.480452,-1.242920,-3.404631,-8.623793,-3.992265,2.846065,-3.328375,1.172539,-6.024543,-1.803596,-6.829715,5.298701,6.619516,7.669984,-7.447675,7.812647,0.096822,-2.072732,-0.713914,-9.196621,-4.911635,-0.557310,5.736031,-7.068663,3.584101,0.619001,-0.873686,4.168141,-3.420645,2.454935,-3.857873,8.069814,-6.242321,6.597670,9.046008,-5.424772,0.272629,-9.981807,-6.998159,-6.698247,-4.957401,0.349043,-0.098581,-5.063391,-3.660440,-9.155412,0.346353,-4.091930,8.823899,-2.594674,-8.945577,-5.473925,6.408909,-7.009299,-7.213506,6.969969,-8.485944,1.520616,-1.240401,7.518197,3.323093,5.338570,6.050985,-2.515413,7.855377,5.365688,9.860763,-9.328914,8.706183,-2.056738,7.800193,-3.535978,9.894390,5.918964,4.223728,-8.947489,-8.624632,3.291597,1.040121,-2.035990,-9.702741,-7.839692,4.646018,-8.360171,5.595134,-2.916439,8.611384,-8.479315,-8.508502,-1.519913,-4.587166,-7.059026,-8.899366,5.274069,-5.171106,-7.826190,0.233089,-4.566569,3.401104,0.236595,-9.249230,-2.184360,-5.854016,-9.676241,-1.589723,7.876866,7.929391,3.156071,4.871428,0.725942,-7.002246,6.524644,5.544511,-5.079531,-3.460049,7.859275,-4.408422,-5.940613,4.707165,7.526584,1.816681,-7.883429,1.627994,-1.030363,-0.308421,-8.148796,-1.253778,8.415871,3.638739,-7.611683,0.174608,-6.463182,4.401534,0.076615,2.710339,-4.076800,2.135752,0.414338,-8.763069,3.956235,-2.425015,6.725492,2.786424,-0.750977,8.203032,2.869657,-8.147469,-3.905530,-1.083417,-8.476860,-6.514678,1.992574,-4.027879,-2.497428,-8.267653,5.207559,6.262480,9.251535,0.829764,-7.915138,7.510830,-6.688390,9.936449,8.975984,-3.951713,-8.229336,5.083668,-8.053119,-5.451475,-6.144811,-0.831178,8.219167,3.765064,2.311126,-0.353799,7.623831,7.872588,-6.153557,-1.697348,-3.255654,6.340734,5.868515,-6.179365,-3.370733,2.721591,-6.679390,2.224440,5.658460,-3.104803,6.906078,-6.737154,-2.362585,-8.742161,0.730425,9.960840,6.122461,-7.532777,2.905731,-4.952528,5.442131,-5.959303,-4.577712,-1.626316,-0.624350,-6.241244,3.549030,-8.035292,-9.737380,-4.998551,2.656504,3.507801,8.500679,-1.981526,4.413990,-5.769034,-6.783582,-3.458339,-5.938296,-3.175260,9.266511,6.808614,-3.303048,6.128984,-9.330907,-0.312627,9.200845,1.495519,6.142027,9.375599,-4.849101,1.399138,-1.318801,7.543754,-6.425283,-9.227459,-6.217765,3.376972,6.047709,3.801684,-3.844057,-4.207182,-0.043008,-8.416614,2.537548,-0.559465,-7.259381,-5.205874,0.972706,9.474023,5.998562,3.898549,4.023940,-2.926346,2.918997,9.386126,3.126144,6.654596,6.279243,8.489686,3.556165,-1.861907,-0.127873,2.945116,2.611928,5.407000,-7.491075,-1.217772,0.808832,-4.489895,2.677297,3.754415,7.655580,-0.430829,-1.981850,4.752946,6.096054,9.449586,-9.480815,4.464409,-8.173724,3.251768,5.964723,-5.456671,-4.406429,-9.167187,-3.712184,1.405085,-4.986095,-7.869539,6.295817,1.398121,-8.921106,-4.922935,4.859570,-6.279834,8.589787,-6.520322,8.800135,1.478002,9.943764,8.267536,2.582727,-5.954368,-8.499737,5.281262,-3.623717,-2.196487,7.996231,-0.553363,-3.244617,-1.511774,-9.361499,7.696458,-5.371573,1.499273,-4.909261,8.159961,8.569555,1.264098,2.688453,-3.058670,0.238628,-6.061867,3.406336,1.789861,4.694435,8.009377,-5.106482,7.933590,-4.316416,8.248425,-6.347152,-7.005073,-3.529260,5.449864,-7.249406,9.421252,0.014494,5.354567,-1.207238,-4.464560,-7.614786,3.308566,-3.144670,6.811376,-3.726521,1.948640,-6.055610,-1.749446,-0.389878,-1.019786,0.904080,-3.649701,4.099742,-8.133687,0.538187,1.496895,-4.352911,-3.484047,0.027114,6.446408,-8.968766,-4.240639,2.461880,4.428879,0.283706,-2.859613,-2.484428,7.685411,-4.792351,4.920984,-2.560441,-2.962538,-2.169268,-5.452470,-0.007354,4.921173,-0.930694,5.206858,-9.462713,3.688784,-2.449714,9.351774,9.485673,-6.894405,-3.052000,7.750496,-5.309284,0.873408,-8.358372,8.340479,-1.575151,-1.859341,-0.755039,-0.406821,-8.962160,-3.508712,2.135838,9.893585,-8.037978,8.925320,-7.530989,-0.004794,-7.817648,7.214753,0.593870,8.726777,9.699766,-2.631090,-2.897741,-2.936979,3.224481,2.161373,-9.306284,3.197441,1.035219,0.572781,0.884027,-9.915864,-6.513112,-3.436400,-3.998478,1.715001,4.511261,-7.344880,-2.298049,3.907386,4.724648,-2.837190,7.387853,1.690361,-3.091056,-0.575927,-9.043236,0.641131,-2.125713,-1.463004,-6.356111,-6.927619,9.235439,6.434414,-7.608637,8.164552,7.811847,0.588645,8.477478,2.839003,-1.363626,2.816144,5.314608,0.739349,1.144623,-7.031668,6.901931,7.701764,3.051636,-1.158595,9.781424,-7.924808,4.518709,-2.140805,-6.886156,7.690252,3.202240,5.544645,4.458022,2.500619,-8.603295,-6.400639,-0.150554,-5.858485,-9.446032,2.579403,5.068909,0.410595,-9.092617,5.939953,2.124881,1.746948,-0.426695,3.275111,3.978861,-3.714129,4.445154,9.240754,-3.964222,7.561638,-1.027314,3.040834,-2.675424,-5.548024,-8.217543,6.812550,-2.695912,-8.670426,6.761804,7.702340,-4.412036,-0.217647,-5.463686,-2.849312,-9.016799,-6.598781,-3.256639,-0.916622,-2.009469,9.793155,-9.530019,-8.799951,8.979949,7.483737,5.502872,6.763101,-2.797186,1.151140,9.821270,-7.520247,1.017549,-0.335296,-2.429196,6.581349,-0.751833,6.078002,2.212390,4.785331,-3.343232,-4.705795,9.496851,-3.016760,1.929090,9.308389,3.342373,-9.099673,-9.872435,-0.368893,7.226805,1.035387,2.419392,2.774231,-3.397979,2.784748,8.859997,-6.429746,-9.156731,3.446541,-6.011613,-7.657664,-4.810621,1.241294,-1.433381,8.169138,0.934677,7.823148,5.234309,5.074229,2.950842,-7.483290,-7.468781,-8.350584,3.957580,3.549485,-7.979368,8.579234,-3.201134,4.850492,9.830906,6.283374,2.193565,5.288596,5.788300,-3.570934,7.953484,0.613370,-2.919276,-1.878899,8.265602,9.542601,-2.439609,-3.941342,9.158630,3.638421,-2.662310,6.347805,0.411317,-9.802666,-0.595121,4.284126,-6.700809,3.192368,-7.071713,-4.507571,9.444336,4.262275,4.220057,8.993841,0.003783,5.929261,0.926121,6.218235,8.904909,3.738978,6.513307,8.750428,5.004228,-0.359539,0.497363,-1.611494,-2.133531,-7.325878,4.543993,2.401153,-3.487787,2.103567,1.833488,-8.513892,-1.695924,-8.206686,-9.839112,2.010905,2.098210,-7.488078,7.876179,1.030008,-6.942819,5.265120,7.668626,4.191566,0.563321,1.233018,6.783821,7.489735,3.925771,2.193707,2.908893,-1.937106,-6.418464,2.937260,2.201595,-2.855010,-4.932160,1.773803,-0.835445,6.416390,1.036632,-5.862598,-5.881518,2.866678,-8.842487,-6.581541,3.114209,-0.536528,1.775324,4.878574,-3.858987,-1.398541,8.078553,6.222127,-1.097241,2.206200,3.587622,6.912359,1.780265,-4.187528,1.828563,-5.512827,0.795646,7.559972,-6.019379,4.222897,-3.987240,-4.364600,1.191750,1.984805,-3.493985,-6.053497,-9.885042,-8.360591,-7.548067,1.690031,3.485596,-4.066685,-8.945069,8.668671,7.542449,-3.812008,-6.863748,2.487785,-0.194408,-7.194028,-4.208547,-1.107806,-1.749406,-5.041016,7.336705,-8.420731,4.106189,5.693593,-0.935918,1.179741,4.815263,3.865322,-3.546379,-8.464309,8.368296,8.005713,7.695512,0.141214,-2.777351,-8.736774,7.925237,-8.659287,8.274884,7.369661,-8.177383,2.887157,-8.593277,-8.901152,-8.926501,2.650705,5.609891,8.945056,-0.976456,-0.561132,-0.610554,3.380716,4.175767,7.842255,9.817908,4.724767,1.657197,-8.995923,0.134034,-9.165015,3.134321,-4.846221,-8.323424,7.671496,-9.704727,-8.468868,-2.260320,-7.402880,9.236453,-3.389205,-0.819195,1.141148,9.143494,5.495680,-2.987462,-0.998131,1.475949,-3.580850,-2.816855,3.466536,7.967494,0.033719,1.801169,3.600990,9.494935,1.807379,5.950078,9.260763], dtype = "float32")#candidate|7903|(1232,)|const|float32
call_7902 = relay.TupleGetItem(func_1823_call(relay.reshape(const_7903.astype('float32'), [1232,])), 4)
call_7904 = relay.TupleGetItem(func_1825_call(relay.reshape(const_7903.astype('float32'), [1232,])), 4)
output = relay.Tuple([call_7896,call_7902,const_7903,])
output2 = relay.Tuple([call_7897,call_7904,const_7903,])
func_7905 = relay.Function([], output)
mod['func_7905'] = func_7905
mod = relay.transform.InferType()(mod)
output = func_7905()
func_7906 = relay.Function([], output)
mutated_mod['func_7906'] = func_7906
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7939 = relay.var("var_7939", dtype = "bool", shape = (4, 15, 16))#candidate|7939|(4, 15, 16)|var|bool
var_7940 = relay.var("var_7940", dtype = "bool", shape = (4, 15, 16))#candidate|7940|(4, 15, 16)|var|bool
bop_7941 = relay.logical_and(var_7939.astype('bool'), relay.reshape(var_7940.astype('bool'), relay.shape_of(var_7939))) # shape=(4, 15, 16)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_7946 = relay.TupleGetItem(func_6245_call(), 0)
call_7947 = relay.TupleGetItem(func_6247_call(), 0)
func_4801_call = mod.get_global_var('func_4801')
func_4802_call = mutated_mod.get_global_var('func_4802')
call_7948 = func_4801_call()
call_7949 = func_4801_call()
output = relay.Tuple([bop_7941,call_7946,call_7948,])
output2 = relay.Tuple([bop_7941,call_7947,call_7949,])
func_7950 = relay.Function([var_7939,var_7940,], output)
mod['func_7950'] = func_7950
mod = relay.transform.InferType()(mod)
mutated_mod['func_7950'] = func_7950
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7950_call = mutated_mod.get_global_var('func_7950')
var_7952 = relay.var("var_7952", dtype = "bool", shape = (4, 15, 16))#candidate|7952|(4, 15, 16)|var|bool
var_7953 = relay.var("var_7953", dtype = "bool", shape = (4, 15, 16))#candidate|7953|(4, 15, 16)|var|bool
call_7951 = func_7950_call(var_7952,var_7953,)
output = call_7951
func_7954 = relay.Function([var_7952,var_7953,], output)
mutated_mod['func_7954'] = func_7954
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7157_call = mod.get_global_var('func_7157')
func_7158_call = mutated_mod.get_global_var('func_7158')
call_7964 = relay.TupleGetItem(func_7157_call(), 0)
call_7965 = relay.TupleGetItem(func_7158_call(), 0)
uop_7978 = relay.exp(call_7964.astype('float32')) # shape=(8, 11, 10)
uop_7980 = relay.exp(call_7965.astype('float32')) # shape=(8, 11, 10)
func_3795_call = mod.get_global_var('func_3795')
func_3797_call = mutated_mod.get_global_var('func_3797')
call_7985 = func_3795_call()
call_7986 = func_3795_call()
output = relay.Tuple([uop_7978,call_7985,])
output2 = relay.Tuple([uop_7980,call_7986,])
func_7991 = relay.Function([], output)
mod['func_7991'] = func_7991
mod = relay.transform.InferType()(mod)
output = func_7991()
func_7992 = relay.Function([], output)
mutated_mod['func_7992'] = func_7992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3565_call = mod.get_global_var('func_3565')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_8044 = relay.TupleGetItem(func_3565_call(), 1)
call_8045 = relay.TupleGetItem(func_3567_call(), 1)
output = call_8044
output2 = call_8045
func_8056 = relay.Function([], output)
mod['func_8056'] = func_8056
mod = relay.transform.InferType()(mod)
output = func_8056()
func_8057 = relay.Function([], output)
mutated_mod['func_8057'] = func_8057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2678_call = mod.get_global_var('func_2678')
func_2679_call = mutated_mod.get_global_var('func_2679')
call_8116 = relay.TupleGetItem(func_2678_call(), 0)
call_8117 = relay.TupleGetItem(func_2679_call(), 0)
output = relay.Tuple([call_8116,])
output2 = relay.Tuple([call_8117,])
func_8127 = relay.Function([], output)
mod['func_8127'] = func_8127
mod = relay.transform.InferType()(mod)
mutated_mod['func_8127'] = func_8127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8127_call = mutated_mod.get_global_var('func_8127')
call_8128 = func_8127_call()
output = call_8128
func_8129 = relay.Function([], output)
mutated_mod['func_8129'] = func_8129
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8139 = relay.const([[[3.547855,5.616940,-9.334689,-1.600798,-5.870466,-9.167770,-7.793706,3.036575,-4.747884,-8.251552],[-5.546513,3.484728,-8.397188,9.368469,4.761236,-6.823901,-2.347910,-7.329360,-6.440118,-5.783845],[1.491384,8.591366,2.889750,5.296580,9.369573,9.120204,-4.894877,-0.601308,-3.988910,-8.996980],[-0.237613,-5.167339,-6.081602,1.658259,3.328867,6.012197,-9.317332,-1.165775,8.861135,-5.356982],[9.889818,5.881697,-6.781311,9.835565,3.202564,-5.129269,-1.247807,-5.296411,3.679700,0.288162],[8.761910,7.855004,9.698657,-9.355068,5.840166,-7.754821,-5.834817,6.964140,2.979848,-2.941090],[-7.904965,-6.937569,9.228655,7.758026,4.162738,-4.783265,-8.888632,-3.327695,6.143042,-0.960255],[9.001950,-2.253723,-7.795133,-3.930106,-2.772271,-1.531840,-7.522930,8.260828,5.616597,-2.422326],[-4.783602,-2.109027,5.915789,-6.408911,0.236432,2.304366,7.011790,-3.243110,2.335331,3.491791],[1.486752,-3.931115,5.548456,-0.197966,2.179880,9.819489,1.267959,-8.689344,-3.008595,8.958837],[2.376272,1.128719,-0.083148,0.641680,-6.037387,8.980334,-2.320104,9.909968,-7.750143,4.581436],[8.556023,4.662015,-9.534755,0.101642,-1.836388,-9.304424,8.209179,2.660517,5.850203,-4.361824]],[[2.244900,-1.068152,2.883975,7.146549,4.640372,9.186115,5.358349,6.056627,-4.309666,7.461728],[9.182093,8.520910,7.943441,8.686000,3.509452,-6.457951,8.294003,-8.308701,6.748792,-1.427423],[-0.306237,3.414369,-9.269258,0.674792,1.323139,-6.653884,-5.402762,2.596651,-5.890820,3.654257],[-9.533811,-6.635321,-0.378595,9.228778,9.921184,-4.518144,5.861389,7.432021,-1.381124,1.202559],[2.165069,-5.504925,4.768274,3.716995,-7.490110,0.166016,0.458702,7.021467,-9.368812,8.090832],[-9.030327,-6.095545,0.580866,-2.803168,-2.415027,2.226244,8.567502,-7.174996,1.730744,-9.335888],[-6.968184,2.026901,1.255617,7.130785,6.461040,5.102095,-3.429816,9.052325,-4.351491,3.409069],[2.804541,-1.072385,-9.086204,4.751587,5.503903,-8.957817,7.582266,9.954035,-0.945968,8.488307],[6.656918,4.131408,-7.154006,7.748253,-1.953661,9.137249,7.573367,-9.539996,-4.001855,9.848136],[2.226669,7.969932,4.251929,-9.311850,9.475613,4.713946,-6.663957,-1.191926,-6.591667,3.857937],[-2.064100,-3.975399,8.272178,-8.405813,1.070400,4.997272,6.893660,8.183580,0.148299,-3.195371],[0.006876,9.121822,-6.757839,-1.445715,6.190052,-8.133378,0.392635,3.663215,7.742491,-7.819138]],[[0.757060,-1.984932,3.576367,-1.316226,4.348003,9.572139,-7.347480,-5.407049,0.987012,3.251231],[1.032666,-5.069752,3.969970,4.390253,9.706238,1.135334,7.398059,8.031157,4.693936,7.983895],[-0.825052,-9.950858,8.256210,-4.416620,8.955618,4.238888,9.367209,2.214506,6.960134,2.258875],[8.747791,8.728468,-4.380486,5.020253,-8.799702,-0.257763,6.752042,-3.822751,-3.360419,1.256261],[-4.579195,-5.134767,7.295234,-2.394955,-8.757698,3.410520,-3.417861,-3.108158,-6.443063,5.700128],[-9.806867,8.429430,-4.998133,-2.433814,-3.193194,-0.369927,-7.287209,-7.493046,1.002252,-0.616660],[7.864091,9.837830,-3.614669,-8.885275,0.986353,-1.007800,-7.421383,9.511324,5.254014,9.473615],[-1.471350,-6.079671,-1.271570,-6.931698,-0.485561,3.980298,-7.714693,8.193310,-1.706917,7.521527],[3.777211,4.053919,-0.259213,-9.505612,-5.209155,6.116028,-3.730132,0.645496,9.551938,-9.284440],[-2.299438,4.844815,-4.627998,4.266133,-3.482276,-2.874225,-2.497805,7.639537,-3.250440,-5.729663],[2.908194,6.427878,-1.269098,-6.120634,-9.702795,8.025578,-4.187006,-5.344340,3.939050,3.402852],[-4.083323,-1.300414,8.787835,3.018204,7.031337,-3.761366,-0.158843,-4.867623,-4.798702,-5.662470]]], dtype = "float64")#candidate|8139|(3, 12, 10)|const|float64
uop_8140 = relay.cosh(const_8139.astype('float64')) # shape=(3, 12, 10)
output = relay.Tuple([uop_8140,])
output2 = relay.Tuple([uop_8140,])
func_8152 = relay.Function([], output)
mod['func_8152'] = func_8152
mod = relay.transform.InferType()(mod)
mutated_mod['func_8152'] = func_8152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8152_call = mutated_mod.get_global_var('func_8152')
call_8153 = func_8152_call()
output = call_8153
func_8154 = relay.Function([], output)
mutated_mod['func_8154'] = func_8154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5784_call = mod.get_global_var('func_5784')
func_5786_call = mutated_mod.get_global_var('func_5786')
call_8181 = relay.TupleGetItem(func_5784_call(), 0)
call_8182 = relay.TupleGetItem(func_5786_call(), 0)
output = relay.Tuple([call_8181,])
output2 = relay.Tuple([call_8182,])
func_8183 = relay.Function([], output)
mod['func_8183'] = func_8183
mod = relay.transform.InferType()(mod)
output = func_8183()
func_8184 = relay.Function([], output)
mutated_mod['func_8184'] = func_8184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3283_call = mod.get_global_var('func_3283')
func_3284_call = mutated_mod.get_global_var('func_3284')
call_8201 = func_3283_call()
call_8202 = func_3283_call()
func_4317_call = mod.get_global_var('func_4317')
func_4318_call = mutated_mod.get_global_var('func_4318')
call_8203 = func_4317_call()
call_8204 = func_4317_call()
func_4232_call = mod.get_global_var('func_4232')
func_4236_call = mutated_mod.get_global_var('func_4236')
var_8206 = relay.var("var_8206", dtype = "int8", shape = ())#candidate|8206|()|var|int8
var_8207 = relay.var("var_8207", dtype = "int8", shape = (195,))#candidate|8207|(195,)|var|int8
const_8208 = relay.const([5,2,3,3,-4,9,-4,-4,4,-2,2,6,-9,-5,4,-2,3,2,-1,8,-2,9,-3,-8,-10,-3,-4,-4,-4,7,-6,6,-4,5,-5,-9,1,2,-3,-2,-1,-5,4,7,8,-7,-2,4,-3,-9,4,-7,10,-1,-10,-5,-10,7,10,5,9,-4,6,6,9,-8,-7,-9,4,9,-7,-8,-5,-2,-10,-4,-10,9,6,-5,-5,9,-10,9,10,-2,2,-3,-5,-1,5,-4,-4,1,10,-7,3,-7,4,-8,3,1,-10,-4,1,-1,-3,-1,8,8,-10,-1,9,-7,-3,5,-7,-3,3,3,5,2,7,-4,5,-2,-5,9,2,-6,1,1,2,-4,-3,8,-10,-3,-4,-3,1,6,-10,-1,-9,7,2,9,-4,-6,-1,-3,5,-10,-7,7,-2,-3,6,-5,2,-6,-2,6,-9,2,-9,10,3,2,-7,-7,2,1,5,-6,10,1,8,-7,-2,-4,6,-6,6,-10,-8,1,-6,-1,-8,7,-10,9,6,2,7,-8,2,1,-1,-4,-7,-1,7,5,9,-3,-10,7,-10,-3,-7,-9,4,-10,4,-6,-8,5,10,-1,4,8,-10,-10,-3,9,-6,8,10,-7,-9,7,-3,-3,4,2,1,4,4,-2,-8,7,-9,4,-5,6,-5,3,5,10,1,-9,-1,-4,6,-4,-6,8,9,7,-2,-10,-7,-4,-9,2,-6,2,4,4,1,4,-2,5,2,-5,-6,-3,6,-5,-4,6,-10,9,4,3,3,5,10,7,1,-8,5,-1,-1,-7,-5,-2,1,6,5,3,7,-5,7,8,-4,-6,-8,-1,3,-3,-2,3,8,-9,1,3,1,4,10,7,-10,4,-9,-8,-4,3,8,1,5,9,3,5,-9,-1,5,-4,2,5,-4,6,-6,6,-4,9,7,7,-9,-6,-3,1,7,-3,3,10,2,7,-6,-3,-2,-2,-10,10,3,-10,-3,2,-6,8,-2,-9,8,-2,1,-7,-8,3,-1,-7,-9,9,-10,3,-6,5,1,10], dtype = "int8")#candidate|8208|(390,)|const|int8
call_8205 = relay.TupleGetItem(func_4232_call(relay.reshape(var_8206.astype('int8'), []), relay.reshape(var_8207.astype('int8'), [13, 1, 15]), relay.reshape(const_8208.astype('int8'), [13, 2, 15]), ), 2)
call_8209 = relay.TupleGetItem(func_4236_call(relay.reshape(var_8206.astype('int8'), []), relay.reshape(var_8207.astype('int8'), [13, 1, 15]), relay.reshape(const_8208.astype('int8'), [13, 2, 15]), ), 2)
output = relay.Tuple([call_8201,call_8203,call_8205,var_8206,var_8207,const_8208,])
output2 = relay.Tuple([call_8202,call_8204,call_8209,var_8206,var_8207,const_8208,])
func_8222 = relay.Function([var_8206,var_8207,], output)
mod['func_8222'] = func_8222
mod = relay.transform.InferType()(mod)
mutated_mod['func_8222'] = func_8222
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8222_call = mutated_mod.get_global_var('func_8222')
var_8224 = relay.var("var_8224", dtype = "int8", shape = ())#candidate|8224|()|var|int8
var_8225 = relay.var("var_8225", dtype = "int8", shape = (195,))#candidate|8225|(195,)|var|int8
call_8223 = func_8222_call(var_8224,var_8225,)
output = call_8223
func_8226 = relay.Function([var_8224,var_8225,], output)
mutated_mod['func_8226'] = func_8226
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1991_call = mod.get_global_var('func_1991')
func_1992_call = mutated_mod.get_global_var('func_1992')
call_8236 = func_1991_call()
call_8237 = func_1991_call()
func_6752_call = mod.get_global_var('func_6752')
func_6754_call = mutated_mod.get_global_var('func_6754')
call_8238 = func_6752_call()
call_8239 = func_6752_call()
output = relay.Tuple([call_8236,call_8238,])
output2 = relay.Tuple([call_8237,call_8239,])
func_8246 = relay.Function([], output)
mod['func_8246'] = func_8246
mod = relay.transform.InferType()(mod)
output = func_8246()
func_8247 = relay.Function([], output)
mutated_mod['func_8247'] = func_8247
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_8254 = relay.TupleGetItem(func_1467_call(), 0)
call_8255 = relay.TupleGetItem(func_1468_call(), 0)
func_1309_call = mod.get_global_var('func_1309')
func_1312_call = mutated_mod.get_global_var('func_1312')
const_8260 = relay.const([-2.605163,1.098984,-7.437664,-9.556805,-3.578065,-6.836024,3.001420,-3.422223,-8.321813,1.802586,3.559557,8.735402,1.825034,5.072541,2.009148,5.104663,7.127862,1.712085,-8.804390,-4.763277,9.150567,7.696764,4.950061,-0.202904,3.334844,-5.766416,3.713485,1.100357,-8.329619,6.243725,4.145881,0.874604,3.010278,0.073892,-0.970710,8.547255,-0.691513,-7.728423,-9.037771,7.274670,-2.491866,-5.905192,1.562707,-8.034342,-5.641038,6.651751,-8.761868,-9.861308,5.653723,1.445029,3.882736,-3.902982,2.261935,2.604884,5.177159,5.676375,9.845250,7.248809,6.576591,-0.529428,6.376727,-7.804353,-1.163230,-8.640409,-9.094406,0.947728,-1.132247,4.230317,-6.154411,0.798934,-7.701003,5.475874,-2.411051,-9.136477,-7.727508,8.490052,0.671581,8.795376,-6.195235,8.785928,4.708075,-8.477986,-6.116550,1.433822,-7.216638,-2.823423,9.011646,-1.788849,-2.091054,-7.749836,6.629130,0.578629,2.444872,-8.435912,-8.151304,-6.234170,-5.218615,3.899648,-8.639958,7.022422,9.165253,8.028689,2.291794,-0.591252,6.701014,-9.507459,-7.958113,5.640771,-6.259123,9.317260,4.306021,-9.722162,-2.476837,9.326897,-9.968604,0.184100,-8.021594,3.188945,7.921766,-6.799229,-3.865788,0.813623,-2.072477,-7.965754,5.172177,8.333080,1.159618,-5.952814,3.189699,-8.823671,6.741373,0.104831,6.838458,5.468281,-5.039357,9.161720,0.546074,2.301662,3.653697,-0.580166,7.427110,1.538364,-7.947891,-4.084693,3.799008,7.272567,-3.539583,0.101108,3.440486,-5.360338,-9.089613,-9.467463,9.939676,4.852203,4.069451,6.965793,0.396048,7.827730,-1.321195,4.455279,5.492153,-5.197359,8.774407,4.935032,3.888429,-9.493255,2.316076,4.073813,-9.998494,7.563144,-6.362052,-0.561997,8.093682,5.343596,9.227207,-9.395599,-6.003305,-1.145515,-2.979432,-6.935901,-7.030177,5.066681,-3.945214,-9.798730,9.486077,-3.532633,-3.410397,3.362302,1.383495,0.528034,0.657026,8.307415,0.482718,9.034418,0.493655,3.001881,-0.472565,2.736076,8.561822,8.580592,4.325366,-1.060744,-6.790434,8.705300,5.004705,-5.075200,-0.200233,-3.305116,7.962334,8.289282,9.576398,-7.128821,1.289778,-1.536926,2.808280,8.412165,-6.350946,-8.279919,4.443518,-3.525992,1.495167,3.534627,-4.466537,0.152914,0.933119,-4.341641,6.632769,-2.169957,-1.922780,2.153415,-8.227401,-1.211576,-3.895897,2.823322,-3.666253,-5.974954,-2.701192,-0.781177,2.331930,0.970132,-5.149747,-2.241182,-1.508574,4.921165,1.603995,6.695407,9.099190,-9.120910,-8.246028,-2.396647,2.584726,-7.115857,-9.231054,-8.428723,-1.939164,8.576288,5.037419,-2.161019,-9.482957,-6.205518,-6.780861,-3.358090,6.298428,-9.372570,-2.895344,3.912398,9.440367,-8.265454,-3.097095,-2.300692,-4.215637,9.652448,8.728015,7.003067,0.497611,0.693729,6.546013,-1.068513,8.366786,0.349900,0.230592,2.128344,-2.397073,-2.935644,4.015302,-4.045479,-5.083319,0.513009,3.582615,-3.236927,4.854562,4.445830,4.367624,2.520622,-0.198751,-0.429822,9.487954,-8.478366,9.068118,-9.256180,1.136521,-8.764862,3.022196,8.994357,3.539802,2.223278,-7.049727,8.127057,-2.565033,-9.744473,1.946420,-4.931188,-7.239721,2.854037,-1.354763,-1.880779,-2.957350,0.364017,6.908698,-6.851817,-0.497227,0.848953,-7.006884,-9.125670,1.622244,5.066180,-1.824842,-6.575618,2.706092,-5.059389,2.559957,0.866541,-5.158891,6.988257,-1.780950,-1.337832,-3.382257,7.316382,-6.448339,9.854821,-6.703113,5.317931,7.150343,3.295262,5.339806,-8.620547,2.703656,-2.415481,-8.997029,2.906214,6.098993,-1.238243,2.675484,5.686945,1.405950,6.576538,3.059684,-8.003704,-4.387751,8.576003,-7.422543,0.560985,-9.087101,2.715101,1.580758,3.434710,-4.246632,-2.983163,8.642955,8.281461,2.484987,-1.352725,0.699574,7.035180,-5.173114,1.644512,-8.837249,-3.143663,-3.514245,1.058303,-8.707523,5.264967,-0.027286,-0.092451,4.056458,0.228457,5.394979,1.922346,-2.964683,-1.520934,-2.011767,8.974172,-1.060685,8.546055,3.016042,5.962680,1.527831,-3.879208,-6.185413,1.476045,4.700904,-7.551506,-9.815960,3.632182,-8.245233,3.551012,-4.011075,7.922534,2.894608,7.688664,-3.737130,-6.793906,5.640829,1.373179,-0.487965,4.135852,9.435025,-0.856382,-6.144806,8.839379,1.807980,9.763924,0.771152,9.298920,0.054143,-7.629080,7.589991,4.579382,1.806345,-7.478529,0.671096,6.917953,-4.699491,-3.100434,-3.005430,0.698377,-6.375238,4.764855,-4.197062,-6.258478,7.976198,1.789927,-8.062013,-0.087110,5.141612,5.721951,-1.494752,-4.753819,-9.996504,4.639253,-0.289193,-3.605400,8.238855,-0.060915,-3.287374,4.029357,4.028808,-0.206407,8.596354,-0.217517,-6.114848,9.937208,-8.450608,6.505913,-0.015917,5.115209,0.467102,-2.795068,4.664495,-4.133025,5.657428,-5.153789,-3.891438,-9.383224,1.236473,8.377064,-3.192514,-8.694478,-9.795060,4.726955,0.617544,4.285876,5.498113,0.075547,-4.305298,-1.671247,-6.416252,9.547495,-0.865296,-0.585995,-3.891638,7.298256,3.949240,9.288214,3.330205,-9.938545,-7.380633,5.423597,1.125993,-6.924816,5.915092,-7.616498,4.928877,-5.455781,4.370883,0.482351,-0.605031,2.220683,0.767808,0.823347,6.396574,8.601983,7.872292,4.668787,8.017579,0.994910,7.784749,-7.743570,5.272963,-9.108684,-9.162134,-7.323543,-5.457596,-5.509641,-0.939041,-5.828113,4.747562,3.659044,-5.128066,-2.645198,4.358491,-2.164612,7.295620,3.508357,-2.195652,0.509880,-8.155950,5.245120,2.752015,-0.346975,-8.344186,-9.786917,-6.147683,-6.280361,-3.578012,-4.449593,-2.750555,-4.557536,-6.960434,-0.392149,1.551774,3.613430,5.360886,-6.183088,-0.193110,8.666584,6.029551,-0.275288,0.834791,2.811089,0.584512,8.646128,-9.102242,0.678990,-7.619367,0.279350,-4.198215,2.736932,-3.674388,-6.521731,-4.834116,0.724014,1.691881,8.867854,-6.449692,6.068305,-6.543122,-4.744125,-6.521841,5.538803,5.212390,8.487170,7.927827,-4.393805,-0.819237,-6.841221,-6.706507,0.949471,-8.730916,-9.851030,3.840767,-0.701596,4.455294,-1.173517,0.828696,-3.155783,2.932296,-7.702397,-4.891321,-3.343077,6.842171,2.669665,-9.555018,-6.771239,2.405907,7.059230,-4.704608,-8.251958,-8.443249,8.656577,1.170219,0.721026,6.583035,9.279510,-9.593316,3.989508,6.644399,2.281168,2.429128,-5.946096,-4.001925,5.091388,2.885422,-7.034722,-1.874291,9.125292,6.907880,-9.617241,-3.211796,-3.902979,9.117248,1.990622,-1.751846,-7.139813,-0.431509,-1.987551,9.107895,3.866419,-9.875919,-0.324596,4.119683,-7.144612,-3.211047,-4.897198,-3.281144,7.556126,-4.245566,-4.745435,8.747162,-9.544781,4.985996,5.091985,-6.463478,-9.172318,-5.306326,0.651204,-0.279648,7.664962,0.392250,-6.809393,-1.632493,3.310154,-9.349909,-6.236375,9.456478,8.067658,2.976259,7.678947,2.501687,-7.060279,-1.865037,0.865669,6.127122,-2.856143,-2.947335,6.834075,-5.552245,5.781666,-0.794212,6.745740,-1.342925,2.612556,3.900520,9.085571,-0.415943,-3.688612,-9.446898,3.452510,-2.330097,-3.302076,-6.341982,-0.278693,-6.326113,2.992412,7.428778,-6.690787,9.052139,9.696906,-2.498300,0.233612,8.197341,-1.412016,-7.227406,3.032714,0.187756,6.624693,7.656384,-9.455712,-1.983787,4.531885,-1.916156,9.536958,8.726955,-9.790826,-8.240903,-9.837702,-5.538772,8.517333,-8.315330,9.064090,-9.355753,-6.422895,-2.819850,3.359877,-7.842157,-5.280214,8.586288,3.740556,3.683785,-3.657203,9.884759,9.125968,6.402695,-7.109623,2.678547,1.400641,0.964320,-5.298977,9.974265,-3.193261,-2.977852,-3.775679,-6.081762,-7.035422,-8.678674,6.254047,8.220945,6.533819,7.800963,-8.277115,7.879971,-1.639526,4.743112,7.315792,2.805517,7.919655,-7.132425,9.965050,0.118365,-0.344374,-2.987245,9.804743,-2.407309,1.048394,8.923870,5.712710,2.134826,8.524302,-1.757384,5.093611,-1.463681,7.857421,1.175852,3.103340,-8.677226,-3.893338,-4.901484,-4.631910,-4.007715,-2.263245,2.861398,-5.461969,-2.049523,-1.700517,-6.027893,-0.565406,-9.614320,-4.564161,-1.879243,-8.347881,3.204108,4.402081,-6.169401,8.851660,8.833133,-5.455713,1.798504,-5.159586,-9.616563,-1.422197,-3.968227,8.707999,-6.070876,-7.211192,-3.838784,5.122662,4.487735,6.445277,-9.818373,-7.528044,-8.104696,-2.431168,-9.299532,0.112866,2.647494,0.360236,-5.292324,-6.180325,-1.206175,7.038917,9.803363,6.214040,-0.365600,9.041091,5.592675,-1.515054,-8.343653,8.459615,4.625653,-6.123915,-6.668602,3.370434,-1.066974,1.415915,-8.543068,9.236922,5.941115,8.820874,6.942797,-1.971069,-2.438853,7.062593,8.179994,6.609834,1.055870,-4.996585,-7.193431,9.609217,3.837759,3.791393,1.561994,-1.431270,1.521204,-1.937564,-8.446214,0.470764,-7.028504,4.253417,9.477259,-0.948572,-1.740226,-3.086871,-1.656333,-7.023298,-0.306042,-2.237786,-5.085103,-8.966546,-4.180928,3.771960,0.096342,7.049801,1.578013,-9.565100,-6.680215,7.499984,2.372802,3.485660,0.778953,1.452796,4.484706,-3.411335,-0.844263,-6.196162,7.146980,2.961648,-2.531774,-5.398636,-3.173171,5.014645,-1.268882,2.716135,-7.410861,9.011661,-9.587076,-9.534624,-2.602536,-9.998296,3.345441,3.589847,-9.294841,-2.592469,-0.676137,-7.638830,9.820650,0.170566,-5.496501,6.842671,0.223881,4.729937,1.278911,8.798085,-0.791006,6.759911,-8.803264,-9.792266,6.846343,-6.410907,-1.981860,-7.216084,-1.582567,2.595470,9.666858,8.081173,5.486462,-6.900675,-0.085342,4.076166,9.976424,1.743529,0.913714,-0.440291,-1.481232,-8.435143,0.243985,-1.776599,-6.160709,1.497776,-8.195130,-7.600375,3.292762,-0.863684,3.379863,-5.644438,-1.584058,-8.915180,2.939233,6.029230,4.651252,-6.508316,-1.300235,-4.124868,-6.600241,-6.420324,9.320205,2.898445,-7.284913,-5.801577,3.416320,-4.977972,-1.924508,8.286117,-0.787719,4.973253,7.359544,-1.579027,-6.200898,-1.125260,-5.614189,2.289535,-1.971546,-8.789175,7.502405,-7.660475,9.094334,-8.621115,1.212646,-5.405158,-7.031460,-5.298933,2.205939,-7.313020,5.345731,6.893536,1.215289,3.360418,2.961721,-5.430166,8.803226,8.995867,-7.501913,-1.475058,3.791844,1.661914,1.632804,9.327162,-7.960084,-9.301500,0.655361,-2.478652,4.832016,-4.184504,4.242524,6.737736,7.742296,-4.358480,-3.732478,3.922386,5.791555,-3.788166,-3.064455,5.703479,2.748607,7.254823,8.826955,5.864634,0.529746,0.234155,1.956010,7.961476,4.494394,-4.147623,5.017147,-6.359216,-6.340728,8.803378,-3.665606,5.850801,-5.333095,-0.063152,-1.171981,-5.301234,6.668957,5.526278,-2.858939,1.948582,-5.166573,-5.304115,-3.868539,-6.231372,0.121365,1.261903,-6.215639,7.596792,1.908202,3.579030,4.038625,-9.322986,7.236799,0.252186,-9.583558,-4.332278,-7.382166,-1.778096,2.686072,7.033345,-7.640401,-5.450580,-6.305806,-6.863954,-8.191953,8.092809,2.811725,-6.573466,2.125729,6.003552,9.582029,-7.057093,-5.832859,-9.071344,4.296461,-1.464411,-2.542466,8.697979,-8.802547,2.738677,6.726867,-9.845258,-7.072630,7.662391,1.747052,6.890478,-4.180624,-6.803146,5.827409,-3.438995,5.744665,-9.668018,-2.057878,-1.180673,2.331639,1.140542,-9.306682,-1.083990,-6.003520,3.054984,-1.948908,-8.196178,-0.190237,5.952993,8.115817,1.730015,-1.777336,8.407984,2.527258,4.649022,6.515756,2.856779,-1.203079,-3.569776,7.941082,-2.989796,-7.934756,1.895339,-2.998325,-8.599549,-8.272037,-8.082455,-3.403909,5.703378,8.793784,-4.329045,9.601984,-0.293588,2.693870,0.898861,-2.936488,-3.671198,-9.362767,-2.904986,-5.466735,9.182799,-7.073586,3.772125,2.032010,-4.699379,7.075353,7.286588,-0.868331,1.636130,-8.817869,-6.493508,-6.271419,5.238507,-0.793650,8.168162,4.871621,-7.304622,-5.450661,-8.586868,-1.432314,-5.368438,9.687015,7.929895,-4.929137,-1.227814,3.540820,3.869773,2.299721,-1.017764,-3.427688,7.160308,-8.999134,0.716894,0.027109,-2.984051,-3.931286,-4.284747,-8.235659,8.495578,-1.775574,0.028683,0.122809,6.503760,-3.142322,-2.183157,-9.523335,-1.973254,3.299578,3.336170,4.328865,1.788002,3.201825,4.161724,4.282368,-5.945766,-0.116393,2.948177,-6.521729,6.815654,-9.390412,-6.806511,3.402886,-7.215123,-9.747015,0.095937,8.828301,-6.040539,-9.918411,8.711778,-7.032661,0.446258,3.212410,-6.524286,-5.132707,-3.070341,-5.814853,7.480475,1.836124,-3.129570,0.209376,2.235079,-8.367036,3.030622,-0.388993,-5.740460,-3.280851,3.185682,-3.117695,-5.543142,2.393656,-2.641640,5.543929,3.823830,4.743879,-5.862719,-2.222850,3.284404,7.347398,8.818558,1.752668,4.690058], dtype = "float32")#candidate|8260|(1232,)|const|float32
call_8259 = relay.TupleGetItem(func_1309_call(relay.reshape(const_8260.astype('float32'), [14, 8, 11])), 0)
call_8261 = relay.TupleGetItem(func_1312_call(relay.reshape(const_8260.astype('float32'), [14, 8, 11])), 0)
output = relay.Tuple([call_8254,call_8259,const_8260,])
output2 = relay.Tuple([call_8255,call_8261,const_8260,])
func_8269 = relay.Function([], output)
mod['func_8269'] = func_8269
mod = relay.transform.InferType()(mod)
output = func_8269()
func_8270 = relay.Function([], output)
mutated_mod['func_8270'] = func_8270
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2896_call = mod.get_global_var('func_2896')
func_2897_call = mutated_mod.get_global_var('func_2897')
call_8330 = relay.TupleGetItem(func_2896_call(), 0)
call_8331 = relay.TupleGetItem(func_2897_call(), 0)
output = relay.Tuple([call_8330,])
output2 = relay.Tuple([call_8331,])
func_8352 = relay.Function([], output)
mod['func_8352'] = func_8352
mod = relay.transform.InferType()(mod)
mutated_mod['func_8352'] = func_8352
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mutated_mod.get_global_var('func_8352')
call_8353 = func_8352_call()
output = call_8353
func_8354 = relay.Function([], output)
mutated_mod['func_8354'] = func_8354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_8374 = relay.TupleGetItem(func_6038_call(), 0)
call_8375 = relay.TupleGetItem(func_6040_call(), 0)
output = call_8374
output2 = call_8375
func_8381 = relay.Function([], output)
mod['func_8381'] = func_8381
mod = relay.transform.InferType()(mod)
output = func_8381()
func_8382 = relay.Function([], output)
mutated_mod['func_8382'] = func_8382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_8406 = relay.TupleGetItem(func_4697_call(), 0)
call_8407 = relay.TupleGetItem(func_4699_call(), 0)
var_8413 = relay.var("var_8413", dtype = "float32", shape = (9, 1232))#candidate|8413|(9, 1232)|var|float32
bop_8414 = relay.less(call_8406.astype('bool'), var_8413.astype('bool')) # shape=(9, 1232)
bop_8417 = relay.less(call_8407.astype('bool'), var_8413.astype('bool')) # shape=(9, 1232)
bop_8423 = relay.bitwise_or(bop_8414.astype('uint16'), call_8406.astype('uint16')) # shape=(9, 1232)
bop_8426 = relay.bitwise_or(bop_8417.astype('uint16'), call_8407.astype('uint16')) # shape=(9, 1232)
bop_8432 = relay.left_shift(bop_8414.astype('int64'), call_8406.astype('int64')) # shape=(9, 1232)
bop_8435 = relay.left_shift(bop_8417.astype('int64'), call_8407.astype('int64')) # shape=(9, 1232)
output = relay.Tuple([bop_8423,bop_8432,])
output2 = relay.Tuple([bop_8426,bop_8435,])
func_8441 = relay.Function([var_8413,], output)
mod['func_8441'] = func_8441
mod = relay.transform.InferType()(mod)
var_8442 = relay.var("var_8442", dtype = "float32", shape = (9, 1232))#candidate|8442|(9, 1232)|var|float32
output = func_8441(var_8442)
func_8443 = relay.Function([var_8442], output)
mutated_mod['func_8443'] = func_8443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5182_call = mod.get_global_var('func_5182')
func_5184_call = mutated_mod.get_global_var('func_5184')
call_8519 = relay.TupleGetItem(func_5182_call(), 0)
call_8520 = relay.TupleGetItem(func_5184_call(), 0)
output = call_8519
output2 = call_8520
func_8523 = relay.Function([], output)
mod['func_8523'] = func_8523
mod = relay.transform.InferType()(mod)
mutated_mod['func_8523'] = func_8523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8523_call = mutated_mod.get_global_var('func_8523')
call_8524 = func_8523_call()
output = call_8524
func_8525 = relay.Function([], output)
mutated_mod['func_8525'] = func_8525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mod.get_global_var('func_7587')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_8543 = relay.TupleGetItem(func_7587_call(), 0)
call_8544 = relay.TupleGetItem(func_7588_call(), 0)
func_6136_call = mod.get_global_var('func_6136')
func_6138_call = mutated_mod.get_global_var('func_6138')
call_8547 = relay.TupleGetItem(func_6136_call(), 5)
call_8548 = relay.TupleGetItem(func_6138_call(), 5)
func_1991_call = mod.get_global_var('func_1991')
func_1992_call = mutated_mod.get_global_var('func_1992')
call_8566 = func_1991_call()
call_8567 = func_1991_call()
func_5231_call = mod.get_global_var('func_5231')
func_5232_call = mutated_mod.get_global_var('func_5232')
call_8568 = relay.TupleGetItem(func_5231_call(), 1)
call_8569 = relay.TupleGetItem(func_5232_call(), 1)
output = relay.Tuple([call_8543,call_8547,call_8566,call_8568,])
output2 = relay.Tuple([call_8544,call_8548,call_8567,call_8569,])
func_8578 = relay.Function([], output)
mod['func_8578'] = func_8578
mod = relay.transform.InferType()(mod)
mutated_mod['func_8578'] = func_8578
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8578_call = mutated_mod.get_global_var('func_8578')
call_8579 = func_8578_call()
output = call_8579
func_8580 = relay.Function([], output)
mutated_mod['func_8580'] = func_8580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_8608 = func_1513_call()
call_8609 = func_1513_call()
uop_8626 = relay.acos(call_8608.astype('float32')) # shape=(8, 11, 10)
uop_8628 = relay.acos(call_8609.astype('float32')) # shape=(8, 11, 10)
output = uop_8626
output2 = uop_8628
func_8648 = relay.Function([], output)
mod['func_8648'] = func_8648
mod = relay.transform.InferType()(mod)
output = func_8648()
func_8649 = relay.Function([], output)
mutated_mod['func_8649'] = func_8649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_8674 = func_4787_call()
call_8675 = func_4787_call()
output = relay.Tuple([call_8674,])
output2 = relay.Tuple([call_8675,])
func_8696 = relay.Function([], output)
mod['func_8696'] = func_8696
mod = relay.transform.InferType()(mod)
output = func_8696()
func_8697 = relay.Function([], output)
mutated_mod['func_8697'] = func_8697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4421_call = mod.get_global_var('func_4421')
func_4423_call = mutated_mod.get_global_var('func_4423')
call_8756 = func_4421_call()
call_8757 = func_4421_call()
output = relay.Tuple([call_8756,])
output2 = relay.Tuple([call_8757,])
func_8768 = relay.Function([], output)
mod['func_8768'] = func_8768
mod = relay.transform.InferType()(mod)
output = func_8768()
func_8769 = relay.Function([], output)
mutated_mod['func_8769'] = func_8769
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_8796 = func_2923_call()
call_8797 = func_2923_call()
output = call_8796
output2 = call_8797
func_8847 = relay.Function([], output)
mod['func_8847'] = func_8847
mod = relay.transform.InferType()(mod)
output = func_8847()
func_8848 = relay.Function([], output)
mutated_mod['func_8848'] = func_8848
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7808_call = mod.get_global_var('func_7808')
func_7810_call = mutated_mod.get_global_var('func_7810')
call_8855 = func_7808_call()
call_8856 = func_7808_call()
output = relay.Tuple([call_8855,])
output2 = relay.Tuple([call_8856,])
func_8862 = relay.Function([], output)
mod['func_8862'] = func_8862
mod = relay.transform.InferType()(mod)
mutated_mod['func_8862'] = func_8862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8862_call = mutated_mod.get_global_var('func_8862')
call_8863 = func_8862_call()
output = call_8863
func_8864 = relay.Function([], output)
mutated_mod['func_8864'] = func_8864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_8892 = relay.TupleGetItem(func_3026_call(), 0)
call_8893 = relay.TupleGetItem(func_3027_call(), 0)
func_2339_call = mod.get_global_var('func_2339')
func_2340_call = mutated_mod.get_global_var('func_2340')
call_8894 = func_2339_call()
call_8895 = func_2339_call()
output = relay.Tuple([call_8892,call_8894,])
output2 = relay.Tuple([call_8893,call_8895,])
func_8901 = relay.Function([], output)
mod['func_8901'] = func_8901
mod = relay.transform.InferType()(mod)
output = func_8901()
func_8902 = relay.Function([], output)
mutated_mod['func_8902'] = func_8902
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8381_call = mod.get_global_var('func_8381')
func_8382_call = mutated_mod.get_global_var('func_8382')
call_8930 = func_8381_call()
call_8931 = func_8381_call()
output = call_8930
output2 = call_8931
func_8942 = relay.Function([], output)
mod['func_8942'] = func_8942
mod = relay.transform.InferType()(mod)
output = func_8942()
func_8943 = relay.Function([], output)
mutated_mod['func_8943'] = func_8943
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9013 = relay.const(4, dtype = "uint16")#candidate|9013|()|const|uint16
const_9014 = relay.const([[[-2,4,2,-5,-10,6,-10,2,-5,4,5,1]],[[6,-7,-1,-4,3,-6,10,3,-4,9,-7,5]],[[-1,10,-10,4,-1,8,-7,5,-2,6,-2,3]],[[6,-1,-2,-5,-5,3,-5,3,7,6,-6,3]],[[-1,10,-7,-1,-5,-6,-9,2,-5,9,-1,6]],[[6,9,2,-9,-2,-10,4,-4,6,-7,-2,-8]],[[3,8,2,9,5,-9,3,-4,7,-4,5,-1]]], dtype = "uint16")#candidate|9014|(7, 1, 12)|const|uint16
bop_9015 = relay.multiply(const_9013.astype('uint16'), const_9014.astype('uint16')) # shape=(7, 1, 12)
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_9021 = func_4787_call()
call_9022 = func_4787_call()
output = relay.Tuple([bop_9015,call_9021,])
output2 = relay.Tuple([bop_9015,call_9022,])
func_9026 = relay.Function([], output)
mod['func_9026'] = func_9026
mod = relay.transform.InferType()(mod)
output = func_9026()
func_9027 = relay.Function([], output)
mutated_mod['func_9027'] = func_9027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8269_call = mod.get_global_var('func_8269')
func_8270_call = mutated_mod.get_global_var('func_8270')
call_9063 = relay.TupleGetItem(func_8269_call(), 0)
call_9064 = relay.TupleGetItem(func_8270_call(), 0)
func_7808_call = mod.get_global_var('func_7808')
func_7810_call = mutated_mod.get_global_var('func_7810')
call_9074 = func_7808_call()
call_9075 = func_7808_call()
func_1973_call = mod.get_global_var('func_1973')
func_1977_call = mutated_mod.get_global_var('func_1977')
const_9082 = relay.const([-6,6,-5,7,9,-6,-5,2,3,5,-10,-8,10,-3,1,-10,6,-6,9,8,-5,-8,7,6,-6,9,-5,2,-8,8,-8,8,-4,-7,-2,-8,-1,9,-8,10,-3,-9,8,6,8,-7,10,-2,-4,7,6,-2,6,5,-6,8,-3,-10,10,-7,7,7,-3,-4,-8,10,-6,10,-4,6,9,-9,-2,-5,4,3,8,-1,-10,8,5,3,2,5,-10,8,-4,-4,-6,1,1,-3,7,-1,-8,7,7,-5,5,7,-9,-7,-1,-3,7,9,1,8,6,7,8,-7,5,-8,-10,-8,-7,5,-5,7,4,2,9,-3,1,1,5,-8,8,5,-10,-8,-7,7,3,5,-1,3,1,9,8,-3,7,-5], dtype = "int64")#candidate|9082|(144,)|const|int64
const_9083 = relay.const([4,10,-6,-7,2,8,-7,6,-1,6,9,9,6,5,-3,-9,10,1,10,-9,-7,-10,6,-2,3,8,-3,3,-4,-1,1,-2,-1,6,-10,-4,2,9,9,6,1,-3,-10,4,-7,9,-6,10,5,-1,-3,-1,-10,-4,6,-1,3,-3,-2,-6,-3,8,7,7,4,-8,4,3,-4,2,-4,-8,9,-9,-10,2,2,-3,8,3,-1,-10,-4,8,7,-9,7,9,1,-8,4,4,-2,5,10,-3,-2,-5,-5,6,5,4,-5,9,-4,8,-1,-4,-1,4,-8,2,1,10,-10,-7,-4,-8,-5,-8,6,-6,8,9,-10,3,-1,10,2,-5,6,9,4,-2,6,9,-4,8,-7,-3,1,5,-3,-1,4,-7,-9,-2,-8,3,2,8,9,10,-5,2,-1,6,-1,8,5,6,4,9,2,-7,-8,-2,1,4,7,9,-1,5,-6,-5,-10,6,-1,-7,-1,-7,7,5,-3,3,-2,-1,9,-5,7,-5,3,1,8,-6,10,5,5,5,-8,-8,-1,5,5,5,2,-8,-3,10,9,-10,9,8,7,2,4,-8,-10,-6,-3,-6,-3,1,-5,9,8,5,-5,1,-6,7,-4,-6,-8,-7,5,7,8,-6,-10,7,4,-5,-4,-1,1,2,-3,-10,-1,3,2,6,7,-5,6,-2,5,-9,6,-1,10,-4,2,-5,3,-10,5,5,9,8,3,8,-9,-6,9,-2,1,-1,10,-7,-1,7,7,7,-3,3,-6,5,10,-10,9,9,6,4,-7,8,-1,5,9,6,-8,10,-2,9,6,-2,-9,-6,10,-2,4,4,-7,3,-2,7,-10,3,-2,3,-10,-5,-5,-6,3,-3,-10,-2,7,-2,-6,6,-8,7,1,-9,4,-2,7,5,5,-6,-4,-1,-6,9,-4,8,-4,-3,5,-8,8,-8,-5,4,1,-7,10,6,-3,-10,2,8,-4,-2,4,8,7,6,10,-6,-2,6,2,-2,8,3,-9,-5,3,2,7,-7,7,-8,5,-6,6,-1,-7,-5,-4,-7,1,-7,-1,-10,-8,-3,-2,10,3,-4,-1,9,-9,-4,-3,5,-3,6,1,10,-5,-4,4,-4,-3,5,-5,-1,7,5,-6,-5,5,3,-9,5,8,3,-7,-6,-5,-4,5,5,3,-3,-4,-10,-2,-5,7,-7,1,-4,6,9,-3,4,-2,-10,-10,-6,3,-3,10,-6,-8,-10,2,9,6,-1,-5,-6,5,2,1,10,-5,-9,-1,-9,-7,-1,-5,-8,10,-1,-6,2,5,7,-3,9,1,4,-2,-4,4,-9,6,3,5,-1,-2,-2,-6,-2,7,-8,1,2,-4,4,10,8,-9,1,6,-6,-4,3,9,-8,9,5,-5,3,3,-9,1,10,10,-3,-5,3,9,-9,3,5,3,-2,-6,10,-2,-6,-8,-2,-10,-5,6,-4,5,-3,9,10,7,10,7,-5,-1,-2,7,-7,1,-2,9,-3,-9,3,-2,10,7,5,2,-2,2,1,-10,-8,10,9,6,-6,-6,-3,-3,10,-4,3,4,2,1,-5,4,3,3,-5,-2,6,-1,-10,1,-4,4,5,-5,6,-10,9,6,8,-4,10,4,-7,4,-9,7,2,-3,1,-3,5,10,5,-6,7,6,7,3,4,1,-4,7,2,-4,7,2,1,6,9,-1,-3,4,-8,5,-6,-5,7,-6,-3,1,-10,-2,4,8,-1,10,7,-7,10,-9,10,-7,-10,-5,-5,-3,-9,5,4,-9,-2,10,-2,6,-8,-10,-3,-7,-2,-3,9,4,-2,3,4,-2,10,8,8,-4,1,9,1,-6,-8,-9,-9,-5,2,7,-10,2,1,-2,6,-7,9,2,2,2,8,-7,4,8,-1,-2,3,1,-6,5,10,-8,10,9,-9,-1,4,-6,9,-6,10,-1,4,9,6,1,-9,-5,2,-10,6,-7,-9,-1,-8,1,7,-1,4,2,-5,6,-3,-3,-6,5,6,4,-7,-6,-2,-3,8,1,-1,4,5,9,10,4,-7,-7,2,-10,6,6,-2,-8,-10,-2,9,8,-7,-1,-1,4,3,2,-5,-4,8,-1,-8,1,-6,-10,1,1,7,7,-7,7,-2,-7,1,8,-3,2,-7,-9,7,10,-5,10,-2,-9,7,3,5,8,1,-5,-4,6,-1,-6,4,8,6,-1,-4,9,8,-3,-10,-7,9,-7,-1,6,-8,10,-6,-1,-10,-3,7,-6,-4,6,-1,6,8,-3,-6,1,-1,8,-3,2,-3,8,8,3,-4,-7,5,-7,9,-2,-10,1,-5,-1,-7,-4,9,-10,-7,-9,5,7,9,3,-5,3,9,9,4,-6,4,-3,1,9,10,8,4,-5,1,-1,4,-6,-1,-9,-6,7,-3,4,-6,2,3,-9,-7,-1,4,-9,-9,1,9,-4,3,6,2,1,-4,-3,-5,5,-9,-2,-2,9,-5,1,10,-8,9,-10,3,10,-4,-4,5,3,-8,7,4,-9,-6,-3,-8,-9,5,9,-1,-5,3,-6,-9,-4,-1,-6,7,-6,-8,9,-1,4,-8,-6,-3,5,-2,-6,-9,-9,1,9,-1,-1,5,-4,10,4,10,-8,5,-8,-4,10,-5,8,-4,-4,-4,-3,-8,-7,6,8,-3,8,-10,5,-3,9,-3,5,-6,4,7,8,6,-4,7,8,-8,8,-5,2,-5,7,10,7,3,3,-9,-5,-8,-9,3,-7,-4,-9,-5,10,-1,-9,-10,-4,-8,-5,2,3,-1,5,10,4,-4,-6,3,-10,-2,3,7,-7,6,1,-1,8,-9,-5,4,4,4,8,3,-2,-8,8,-2,-8,4,8,8,-7,-8,5,-6,9,-8,-7,-6,-7,-4,8,8,8,-9,-9,-4,-3,1,-4,8,6,2,-8,-4,3,-8,8,10,9,-2,-6,5,9,-9,2,8,-3,5,1,6,9,-8,1,-3,-7,9,3,3,1,-7,-7,-2,7,4,7,3,-4,-3,9,5,2,7,9,7,2,-4,-7,1,-2,-4,-5,-4,-10,-5,-2,-4,6,10,-3,-7,9,6,-6,1,-4,-8,4,9,1,-6,6,-7,-5,-10,-2,-5,-8,8,-8,3,-4,2,-5,5,-6,-8,2,3,-2,6,-9,6,10,1,-1,-9,-5,6,-3,-5,3,-9,9,-10,6,5,-7,-3,5,4,-10,2,5,7,-2,-6,4,-9,9,3,5,3,1,8,1,1,-6,-7,2,10,-4,8,-2,-2,6,8,-5,3,6,1,3,7,4,2,-7,9,-9,-1,2,3,9,9,-10,-2,-4,-4,-3,-8,-4,-3,7,2,9,-8,-7,10,2,-1,-2,1,-4,-4,-5,-3,7,1,8,-9,-7,9,-7,9,10,2,-3,-9,7,5,8,-2,-6,6,-8,-2,-1,8,-1,7,-9,3,-1,10,-6,1,-4,8,10,3,-8,-3,-9,-6,8,-2,-2,10,9,-3,-4,10,1,-8,-3,-7,8,-9,10,7,-9,-8,6,-6,7,-2,6,-9,-10,-8,-9,-4,-6,4,-10,-8,2,2,4,-4,7,-2,-10,2,1,2,8,7,-1,-3,-3,-2,9,-6,-1,-3,-8,3,-9,7,8,10,-7,1,-9,9,-5,1,-4,-6,9,3,-6,5,-5,7,-6,-9,-3,3,5,8,-2,4,5,-10,9,2,-4,-3,1,-2,7,2,-2,-4,6,6,10,-5,-8,-7,-2,4,-6,-5,-7,6,10,5,-2,10,-2,7,6,7,10,-3,-5,-8,-6,-9,-2,8,-4,4,4,5,10,-10,-5,2,-2,-8,4,7,-3,-2,1,4,2,1,-4,6,10,2,-4,1,-1,-5,8,-4,8,3,5,7,9,-7,-6,-9,-8,2,-7,-10,-3,-5,6,-2,-7,-6,-6,2,-2,-8,-4,5,-10,-6,1,9,-8,6,4,-10,3,-5,-8,-4,-8,1,1,-3,-4,-2,-4,8,5,-8,2,-2,-4,3,4,2,-2,-3,8,8,7,-6,10,5,-8,6,10,4,-3,-4,6,8,-9,-3,-6,-1,-10,4,-1,-7,1,-8,9,5,-10,-10,6,-4,-8,-4,-9,-9,-1,1,3,10,9,-7,9,2,-10,6,10,-3,-9,5,1,7,9,4,3,-8,-2,-3,-4,10,7,1,8,-6,-2,-4,-4,-5,-8,7,-2,6,-7,-5,-3,-6,-3,-8,3,-7,-6,6,-4,3,1,-5,-4,-7,1,-1,-8,-7,-5,3,10,1,-3,-5,9,10,9,-10,-8,3,8,-6,-2,9,-9,-5,4,-6,-2,-7,3,10,-3,-7,9,4,6,6,-4,-7,-9,5,-8,-4,4,-1,9,10,-4,-4,-9,-10,10,-6,1,9,-6,7,5,-4,5,7,9,-5,-6,-5,9,3,9,6,-3,-4,-9,-2,-4,-5,-4,-2,-10,5,6,-5,3,-6,7,6,9,6,-5,-4,7,-10,2,1,7,-9,7,-9,2,-5,-9,7,-5,6,3,8,9,-10,-10,-4,8,1,9,-6,-7,-10,-5,6,1,-9,4,-6,-5,-6,7,1,5,-9,-4,-7,-7,9,3,-10,-7,-1,-8,4,1,-10,1,-4,-3,-3,7,8,-7,5,-2,6,-4,2,2,-7,7,-3,-7,7,7,9,-9,9,-5,8,9,-9,-1,-7,9,7,-1,4,-5,-10,-10,10,7,7,-4,-1,1,10,-3,6,-2,7,3,-1,-10,-3,-3,10,-4,4,-6,-3,-9,8,1,-3,6,8,9,10,-2,10,7,7,-10,9,8,-10,6,-8,-3,2,8,9,-9,9,-1,9,10,7,-9,-6,8,-5,-6,-1,-3,-10,-3,2,-7,7,9,-8,-4,-1,-1,3,4,6,-2,-1,-4,-9,10,-10,2,7,-5,-2,-9,-3,1,2,5,-5,8,3,-7,-8,-2,3,6,-5,2,10,-2,2,9,9,5,-1,10,-3,-6,3,9,-4,-6,8,8,-9,-2,-6,-8,-7,8,4,-1,6,-9,-7,-7,-5,-2,10,10,-2,2,-5,2,-1,-7,-2,-3,-10,-9,1,10,6,-9,-3,6,5,-3,6,10,10,4,10,10,10,-6,7,6,-7,-10,8,-6,-3,1,6,9,-1,-8,10,8,9,-10,-10,-10,5,-7,-9,6,-2,3,10,-4,7,-1,-1,-7,-5,-9,-5,-1,-2,-3,-1,-2,8,1,-9,9,8,-3,1,1,6,10,-10,10,-9,-10,-2,3,2,-7,10,7,8,-7,9,-4,10,4,6,10,7,-4,-6,8,-1,-9,1,-9,5,7,-5,-6,-6,5,-6,-7,-8,-1,-10,-2,-4,-1,6,-1,7,-4,-10,9,3,-7,-8,-2,-7,-1,-2,7,-2,10,-10,9,-10,2,-3,7,3,-5,-10,7,1,-2,9,-10,8,10,-2,5,-2,-3,6,-3,6,1,-8,-1,6,-2,3,-9,2,8,8,8,-10,7,3,-4,1,-2,4,7,-9,7,3,-2,5,2,3,3,1,7,3,2,9,-4,9,2,-4,-9,-7,3,9,3,-5,3,-10,1,-6,-9,9,9,-9,-8,-2,-10,-6,-8,8,6,2,1,-4,7,-7,6,-2,-6,5,-1,-10,7,4,2,-9,-9,-2,4,3,9,-10,8,9,2,-9,-5,6,7,-7,5,-1,-8,-5,10,-6,9,-3,7,-2,-8,-3,-2,-2,10,9,-9,10,-3,2,4,-2,3,2,7,-8,-5,-7,2,7], dtype = "int64")#candidate|9083|(2160,)|const|int64
call_9081 = relay.TupleGetItem(func_1973_call(relay.reshape(const_9082.astype('int64'), [9, 16, 1]), relay.reshape(const_9083.astype('int64'), [9, 16, 15]), ), 2)
call_9084 = relay.TupleGetItem(func_1977_call(relay.reshape(const_9082.astype('int64'), [9, 16, 1]), relay.reshape(const_9083.astype('int64'), [9, 16, 15]), ), 2)
var_9108 = relay.var("var_9108", dtype = "int64", shape = (2160,))#candidate|9108|(2160,)|var|int64
bop_9109 = relay.multiply(const_9083.astype('uint8'), relay.reshape(var_9108.astype('uint8'), relay.shape_of(const_9083))) # shape=(2160,)
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_9121 = relay.TupleGetItem(func_1211_call(relay.reshape(call_9074.astype('bool'), [8, 11, 10])), 0)
call_9122 = relay.TupleGetItem(func_1213_call(relay.reshape(call_9074.astype('bool'), [8, 11, 10])), 0)
output = relay.Tuple([call_9063,call_9074,call_9081,const_9082,bop_9109,call_9121,])
output2 = relay.Tuple([call_9064,call_9075,call_9084,const_9082,bop_9109,call_9122,])
func_9139 = relay.Function([var_9108,], output)
mod['func_9139'] = func_9139
mod = relay.transform.InferType()(mod)
mutated_mod['func_9139'] = func_9139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9140 = relay.var("var_9140", dtype = "int64", shape = (2160,))#candidate|9140|(2160,)|var|int64
func_9139_call = mutated_mod.get_global_var('func_9139')
call_9141 = func_9139_call(var_9140)
output = call_9141
func_9142 = relay.Function([var_9140], output)
mutated_mod['func_9142'] = func_9142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_9267 = relay.TupleGetItem(func_3026_call(), 0)
call_9268 = relay.TupleGetItem(func_3027_call(), 0)
output = relay.Tuple([call_9267,])
output2 = relay.Tuple([call_9268,])
func_9283 = relay.Function([], output)
mod['func_9283'] = func_9283
mod = relay.transform.InferType()(mod)
output = func_9283()
func_9284 = relay.Function([], output)
mutated_mod['func_9284'] = func_9284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_9295 = relay.TupleGetItem(func_6351_call(), 0)
call_9296 = relay.TupleGetItem(func_6352_call(), 0)
output = call_9295
output2 = call_9296
func_9308 = relay.Function([], output)
mod['func_9308'] = func_9308
mod = relay.transform.InferType()(mod)
mutated_mod['func_9308'] = func_9308
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9308_call = mutated_mod.get_global_var('func_9308')
call_9309 = func_9308_call()
output = call_9309
func_9310 = relay.Function([], output)
mutated_mod['func_9310'] = func_9310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7444_call = mod.get_global_var('func_7444')
func_7446_call = mutated_mod.get_global_var('func_7446')
call_9325 = relay.TupleGetItem(func_7444_call(), 4)
call_9326 = relay.TupleGetItem(func_7446_call(), 4)
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_9329 = func_4787_call()
call_9330 = func_4787_call()
var_9336 = relay.var("var_9336", dtype = "int16", shape = (1848,))#candidate|9336|(1848,)|var|int16
bop_9337 = relay.greater(call_9325.astype('bool'), relay.reshape(var_9336.astype('bool'), relay.shape_of(call_9325))) # shape=(1848,)
bop_9340 = relay.greater(call_9326.astype('bool'), relay.reshape(var_9336.astype('bool'), relay.shape_of(call_9326))) # shape=(1848,)
output = relay.Tuple([call_9329,bop_9337,])
output2 = relay.Tuple([call_9330,bop_9340,])
func_9350 = relay.Function([var_9336,], output)
mod['func_9350'] = func_9350
mod = relay.transform.InferType()(mod)
mutated_mod['func_9350'] = func_9350
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9351 = relay.var("var_9351", dtype = "int16", shape = (1848,))#candidate|9351|(1848,)|var|int16
func_9350_call = mutated_mod.get_global_var('func_9350')
call_9352 = func_9350_call(var_9351)
output = call_9352
func_9353 = relay.Function([var_9351], output)
mutated_mod['func_9353'] = func_9353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3301_call = mod.get_global_var('func_3301')
func_3303_call = mutated_mod.get_global_var('func_3303')
call_9372 = relay.TupleGetItem(func_3301_call(), 0)
call_9373 = relay.TupleGetItem(func_3303_call(), 0)
output = call_9372
output2 = call_9373
func_9401 = relay.Function([], output)
mod['func_9401'] = func_9401
mod = relay.transform.InferType()(mod)
mutated_mod['func_9401'] = func_9401
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9401_call = mutated_mod.get_global_var('func_9401')
call_9402 = func_9401_call()
output = call_9402
func_9403 = relay.Function([], output)
mutated_mod['func_9403'] = func_9403
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4801_call = mod.get_global_var('func_4801')
func_4802_call = mutated_mod.get_global_var('func_4802')
call_9461 = func_4801_call()
call_9462 = func_4801_call()
output = relay.Tuple([call_9461,])
output2 = relay.Tuple([call_9462,])
func_9463 = relay.Function([], output)
mod['func_9463'] = func_9463
mod = relay.transform.InferType()(mod)
mutated_mod['func_9463'] = func_9463
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9463_call = mutated_mod.get_global_var('func_9463')
call_9464 = func_9463_call()
output = call_9464
func_9465 = relay.Function([], output)
mutated_mod['func_9465'] = func_9465
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7991_call = mod.get_global_var('func_7991')
func_7992_call = mutated_mod.get_global_var('func_7992')
call_9495 = relay.TupleGetItem(func_7991_call(), 0)
call_9496 = relay.TupleGetItem(func_7992_call(), 0)
output = relay.Tuple([call_9495,])
output2 = relay.Tuple([call_9496,])
func_9502 = relay.Function([], output)
mod['func_9502'] = func_9502
mod = relay.transform.InferType()(mod)
mutated_mod['func_9502'] = func_9502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9502_call = mutated_mod.get_global_var('func_9502')
call_9503 = func_9502_call()
output = call_9503
func_9504 = relay.Function([], output)
mutated_mod['func_9504'] = func_9504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7587_call = mod.get_global_var('func_7587')
func_7588_call = mutated_mod.get_global_var('func_7588')
call_9524 = relay.TupleGetItem(func_7587_call(), 0)
call_9525 = relay.TupleGetItem(func_7588_call(), 0)
output = call_9524
output2 = call_9525
func_9529 = relay.Function([], output)
mod['func_9529'] = func_9529
mod = relay.transform.InferType()(mod)
output = func_9529()
func_9530 = relay.Function([], output)
mutated_mod['func_9530'] = func_9530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8696_call = mod.get_global_var('func_8696')
func_8697_call = mutated_mod.get_global_var('func_8697')
call_9531 = relay.TupleGetItem(func_8696_call(), 0)
call_9532 = relay.TupleGetItem(func_8697_call(), 0)
output = call_9531
output2 = call_9532
func_9536 = relay.Function([], output)
mod['func_9536'] = func_9536
mod = relay.transform.InferType()(mod)
mutated_mod['func_9536'] = func_9536
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9536_call = mutated_mod.get_global_var('func_9536')
call_9537 = func_9536_call()
output = call_9537
func_9538 = relay.Function([], output)
mutated_mod['func_9538'] = func_9538
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2712_call = mod.get_global_var('func_2712')
func_2713_call = mutated_mod.get_global_var('func_2713')
call_9541 = func_2712_call()
call_9542 = func_2712_call()
func_1211_call = mod.get_global_var('func_1211')
func_1213_call = mutated_mod.get_global_var('func_1213')
call_9558 = relay.TupleGetItem(func_1211_call(relay.reshape(call_9541.astype('bool'), [8, 11, 10])), 2)
call_9559 = relay.TupleGetItem(func_1213_call(relay.reshape(call_9541.astype('bool'), [8, 11, 10])), 2)
output = relay.Tuple([call_9541,call_9558,])
output2 = relay.Tuple([call_9542,call_9559,])
func_9568 = relay.Function([], output)
mod['func_9568'] = func_9568
mod = relay.transform.InferType()(mod)
mutated_mod['func_9568'] = func_9568
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9568_call = mutated_mod.get_global_var('func_9568')
call_9569 = func_9568_call()
output = call_9569
func_9570 = relay.Function([], output)
mutated_mod['func_9570'] = func_9570
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_9585 = func_4787_call()
call_9586 = func_4787_call()
output = call_9585
output2 = call_9586
func_9587 = relay.Function([], output)
mod['func_9587'] = func_9587
mod = relay.transform.InferType()(mod)
output = func_9587()
func_9588 = relay.Function([], output)
mutated_mod['func_9588'] = func_9588
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2678_call = mod.get_global_var('func_2678')
func_2679_call = mutated_mod.get_global_var('func_2679')
call_9617 = relay.TupleGetItem(func_2678_call(), 2)
call_9618 = relay.TupleGetItem(func_2679_call(), 2)
output = call_9617
output2 = call_9618
func_9625 = relay.Function([], output)
mod['func_9625'] = func_9625
mod = relay.transform.InferType()(mod)
mutated_mod['func_9625'] = func_9625
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9625_call = mutated_mod.get_global_var('func_9625')
call_9626 = func_9625_call()
output = call_9626
func_9627 = relay.Function([], output)
mutated_mod['func_9627'] = func_9627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5414_call = mod.get_global_var('func_5414')
func_5415_call = mutated_mod.get_global_var('func_5415')
call_9646 = func_5414_call()
call_9647 = func_5414_call()
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_9650 = func_4787_call()
call_9651 = func_4787_call()
output = relay.Tuple([call_9646,call_9650,])
output2 = relay.Tuple([call_9647,call_9651,])
func_9655 = relay.Function([], output)
mod['func_9655'] = func_9655
mod = relay.transform.InferType()(mod)
mutated_mod['func_9655'] = func_9655
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9655_call = mutated_mod.get_global_var('func_9655')
call_9656 = func_9655_call()
output = call_9656
func_9657 = relay.Function([], output)
mutated_mod['func_9657'] = func_9657
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9668 = relay.const([[[1.110032,-2.775844,-7.516330,-3.411014],[-4.959259,-0.770624,-8.106805,6.604278],[4.272221,-4.039014,2.231041,-3.110378],[4.026522,5.488940,8.511031,-3.750585],[-5.736494,6.379203,-2.777947,-8.221080],[-3.587969,-5.181593,7.973407,8.221180],[7.727323,-6.228139,-2.697386,-7.796019],[2.918615,-3.003243,-0.955371,2.465473],[0.020684,2.230387,2.999813,-6.441532],[-0.709784,-7.378701,1.801059,9.246938],[7.974994,7.119285,-6.706401,0.960889],[5.375139,-8.546694,1.903437,5.832009]],[[2.301915,-1.965745,-1.251353,-1.786546],[6.436516,-7.975965,5.736329,9.073652],[8.789369,-2.329911,-6.382576,-0.003321],[6.557965,4.400967,-7.517945,-3.195477],[9.918148,-0.189788,6.210335,2.093323],[2.466199,4.301246,5.060358,-5.711103],[8.164722,-4.869721,-8.725300,-5.920071],[-0.329405,-1.820230,-8.883563,-0.093850],[9.809841,0.970386,2.402194,8.366423],[-5.122278,0.018225,1.340111,-8.174097],[8.760632,-2.296887,0.519703,6.078656],[-9.397967,7.374757,-2.966785,1.509383]]], dtype = "float32")#candidate|9668|(2, 12, 4)|const|float32
uop_9669 = relay.cos(const_9668.astype('float32')) # shape=(2, 12, 4)
uop_9679 = relay.exp(const_9668.astype('float64')) # shape=(2, 12, 4)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_9688 = relay.TupleGetItem(func_1128_call(), 0)
call_9689 = relay.TupleGetItem(func_1129_call(), 0)
bop_9690 = relay.subtract(uop_9679.astype('float32'), relay.reshape(const_9668.astype('float32'), relay.shape_of(uop_9679))) # shape=(2, 12, 4)
func_7678_call = mod.get_global_var('func_7678')
func_7680_call = mutated_mod.get_global_var('func_7680')
call_9695 = relay.TupleGetItem(func_7678_call(), 0)
call_9696 = relay.TupleGetItem(func_7680_call(), 0)
output = relay.Tuple([uop_9669,call_9688,bop_9690,call_9695,])
output2 = relay.Tuple([uop_9669,call_9689,bop_9690,call_9696,])
func_9714 = relay.Function([], output)
mod['func_9714'] = func_9714
mod = relay.transform.InferType()(mod)
output = func_9714()
func_9715 = relay.Function([], output)
mutated_mod['func_9715'] = func_9715
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9778 = relay.const([[[-3.318345,-3.827446,-8.991803,-9.107624,-4.474531,2.515906,2.008813,-0.758970,5.653168,-6.440269,-6.069809,3.007501,2.242471,2.124014,4.657947],[-6.184288,6.582530,-6.035051,-0.552529,3.209475,-2.990825,2.018714,2.118028,-2.106065,-5.653234,2.844985,2.743734,4.576114,-5.194124,3.318165]],[[0.614558,2.010492,9.318774,2.006608,8.912153,-4.179199,8.476868,8.630186,6.102811,0.149186,-3.432764,-9.414482,6.195593,2.432939,4.869876],[6.938664,-6.200920,4.660278,-0.002287,1.506986,9.613846,-0.776186,2.706412,-5.385594,1.345678,-1.041272,-2.621601,4.765358,9.373006,0.700942]],[[-9.189112,9.832418,1.207814,-4.627078,0.238530,1.410289,2.823802,-0.163266,0.157707,-6.290030,-3.085966,1.453971,9.053152,0.182746,7.614731],[7.224269,2.473071,-8.637283,-4.716740,2.546088,-5.755108,-2.074469,-3.061482,-3.309405,7.540712,-2.841460,3.165000,-1.569565,-7.618100,8.748707]],[[-4.520158,4.778393,-2.483099,7.617411,-0.445021,-0.789519,7.583770,5.230693,4.107273,-5.833966,-7.869233,8.282705,-1.638481,-6.428031,7.868259],[-1.587077,4.084647,8.112232,4.829748,-0.400419,0.843655,-3.661422,7.648957,-9.625620,6.580571,-7.937575,8.517188,5.411492,0.402066,3.975593]],[[-5.330187,5.761710,7.401437,6.001362,4.154245,3.036491,-1.310493,6.382197,0.089183,5.769348,-5.520795,-3.023595,1.669635,9.472765,6.589177],[7.973159,-9.635322,0.091635,9.655357,-1.298496,-2.601743,-8.714710,5.342128,0.273261,1.079833,3.084704,-3.171104,-5.344792,-9.820108,-4.030979]],[[-5.401275,3.014796,-2.724843,-3.721178,5.048826,-7.351631,-7.425688,-8.240696,3.181121,-6.468778,-6.826614,-4.177817,6.642459,-6.306088,2.074412],[-3.753214,-0.578844,-3.175502,-1.774871,0.413562,-0.800538,-1.210965,-6.198832,-0.875586,-9.908892,-7.929465,7.262473,2.755436,2.736332,-8.363223]],[[-5.894241,-9.453698,-6.193937,-3.279501,-7.005499,-7.212979,7.205584,6.410043,7.790200,0.783712,8.171768,7.736325,7.675226,3.014661,-2.407083],[4.558836,-4.997752,-9.966522,-6.572655,-8.144241,-7.087822,3.059178,3.710498,8.247079,1.375908,-5.765145,-8.510306,5.624540,-8.095085,1.758284]],[[-3.275658,5.041837,-8.916773,4.147304,-0.262245,3.409612,-5.468565,6.038958,-8.102905,-9.711020,9.955232,-0.142156,-7.697063,2.379947,-4.251683],[-8.222595,6.299860,-1.208815,7.174121,4.573955,1.752737,-3.889563,4.830145,3.787488,-4.072319,2.644132,-4.946596,1.512880,8.797156,8.854502]],[[3.382362,-5.741204,8.739619,4.067258,-3.973934,2.227658,4.655619,7.595330,7.294878,-5.360380,9.649357,4.023001,0.184548,-0.437750,-9.241718],[5.545496,4.525020,-4.277510,-0.256939,2.403261,-4.179252,-0.596898,-2.900794,8.735244,-1.898276,4.149844,2.850447,8.243658,-9.957669,-9.248706]],[[1.522161,-6.410492,9.326226,1.719138,-9.167380,4.687841,7.795962,7.050052,3.778717,7.414852,-4.840371,3.088161,-1.536863,7.515728,7.292679],[1.841850,4.701314,5.623362,-5.856579,-6.495101,-1.983885,-2.955186,4.669797,8.319865,-0.620715,-1.667282,-7.774676,-8.064685,-1.515778,5.524604]],[[4.373342,-0.784503,-2.217987,-1.316307,-8.743469,-4.131736,-0.889734,3.134631,-7.421219,-4.422204,6.736692,6.802374,7.847012,-8.499981,9.820140],[6.820764,-9.800502,0.438045,1.358543,-0.763903,-7.788885,-2.479509,0.371942,-8.021849,4.075602,-3.626814,7.936241,-3.964305,4.254950,-5.429138]],[[-1.028814,-2.531023,3.157170,1.611847,9.855302,8.445781,-4.385332,-0.218434,2.739709,3.961204,8.114030,4.121034,-5.613346,5.103114,3.282168],[-4.497779,0.267096,-4.580137,1.222590,-4.526699,4.005296,-5.697810,6.605762,5.618937,-4.843602,9.257890,-0.334473,-8.238241,-1.844539,8.625440]],[[-2.648727,3.859527,-4.001127,-4.060044,-9.526140,-1.853851,-4.881008,1.760373,4.009700,-2.496424,-2.013367,7.753863,6.923145,2.476727,-2.153493],[5.260018,-9.394922,-2.320758,-7.396764,-6.034264,1.457500,4.078515,-2.267816,-6.626218,0.820196,9.133527,-5.198930,7.000974,-9.688907,-1.865886]],[[1.228165,7.067193,-6.920453,-5.805790,8.735782,4.180306,3.926214,-5.500248,-2.983437,1.950937,-3.808732,2.753154,5.800792,-4.595442,0.557872],[-2.769904,-8.450327,-9.928627,-6.408393,9.175505,-1.897857,-9.512418,6.957045,1.296021,8.329434,-4.577898,5.213265,5.353969,-0.867646,-3.770444]]], dtype = "float32")#candidate|9778|(14, 2, 15)|const|float32
uop_9779 = relay.atan(const_9778.astype('float32')) # shape=(14, 2, 15)
uop_9798 = relay.log2(const_9778.astype('float32')) # shape=(14, 2, 15)
func_6173_call = mod.get_global_var('func_6173')
func_6174_call = mutated_mod.get_global_var('func_6174')
call_9811 = relay.TupleGetItem(func_6173_call(), 0)
call_9812 = relay.TupleGetItem(func_6174_call(), 0)
var_9814 = relay.var("var_9814", dtype = "float32", shape = (14, 2, 15))#candidate|9814|(14, 2, 15)|var|float32
bop_9815 = relay.greater_equal(const_9778.astype('bool'), relay.reshape(var_9814.astype('bool'), relay.shape_of(const_9778))) # shape=(14, 2, 15)
func_9502_call = mod.get_global_var('func_9502')
func_9504_call = mutated_mod.get_global_var('func_9504')
call_9822 = relay.TupleGetItem(func_9502_call(), 0)
call_9823 = relay.TupleGetItem(func_9504_call(), 0)
func_4801_call = mod.get_global_var('func_4801')
func_4802_call = mutated_mod.get_global_var('func_4802')
call_9828 = func_4801_call()
call_9829 = func_4801_call()
output = relay.Tuple([uop_9779,uop_9798,call_9811,bop_9815,call_9822,call_9828,])
output2 = relay.Tuple([uop_9779,uop_9798,call_9812,bop_9815,call_9823,call_9829,])
func_9830 = relay.Function([var_9814,], output)
mod['func_9830'] = func_9830
mod = relay.transform.InferType()(mod)
mutated_mod['func_9830'] = func_9830
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9831 = relay.var("var_9831", dtype = "float32", shape = (14, 2, 15))#candidate|9831|(14, 2, 15)|var|float32
func_9830_call = mutated_mod.get_global_var('func_9830')
call_9832 = func_9830_call(var_9831)
output = call_9832
func_9833 = relay.Function([var_9831], output)
mutated_mod['func_9833'] = func_9833
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7303_call = mod.get_global_var('func_7303')
func_7305_call = mutated_mod.get_global_var('func_7305')
call_9843 = relay.TupleGetItem(func_7303_call(), 1)
call_9844 = relay.TupleGetItem(func_7305_call(), 1)
func_6488_call = mod.get_global_var('func_6488')
func_6490_call = mutated_mod.get_global_var('func_6490')
call_9850 = relay.TupleGetItem(func_6488_call(), 0)
call_9851 = relay.TupleGetItem(func_6490_call(), 0)
func_1991_call = mod.get_global_var('func_1991')
func_1992_call = mutated_mod.get_global_var('func_1992')
call_9861 = func_1991_call()
call_9862 = func_1991_call()
func_5571_call = mod.get_global_var('func_5571')
func_5572_call = mutated_mod.get_global_var('func_5572')
call_9890 = relay.TupleGetItem(func_5571_call(), 1)
call_9891 = relay.TupleGetItem(func_5572_call(), 1)
func_6878_call = mod.get_global_var('func_6878')
func_6880_call = mutated_mod.get_global_var('func_6880')
call_9912 = relay.TupleGetItem(func_6878_call(), 1)
call_9913 = relay.TupleGetItem(func_6880_call(), 1)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_9914 = relay.TupleGetItem(func_4697_call(), 0)
call_9915 = relay.TupleGetItem(func_4699_call(), 0)
uop_9918 = relay.cos(call_9914.astype('float32')) # shape=(1, 1232)
uop_9920 = relay.cos(call_9915.astype('float32')) # shape=(1, 1232)
output = relay.Tuple([call_9843,call_9850,call_9861,call_9890,call_9912,uop_9918,])
output2 = relay.Tuple([call_9844,call_9851,call_9862,call_9891,call_9913,uop_9920,])
func_9922 = relay.Function([], output)
mod['func_9922'] = func_9922
mod = relay.transform.InferType()(mod)
output = func_9922()
func_9923 = relay.Function([], output)
mutated_mod['func_9923'] = func_9923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9970 = relay.var("var_9970", dtype = "uint64", shape = ())#candidate|9970|()|var|uint64
const_9971 = relay.const([[[3,-3,-10,-9,-9,7],[9,8,1,-6,-1,-2],[6,-1,-6,-4,-8,10],[-4,-1,1,-2,4,-8],[3,-8,6,-1,-1,-7],[-7,6,2,7,4,8],[8,8,2,-8,1,1],[-5,10,-3,5,-1,-9],[-8,6,4,7,-8,5],[10,4,9,-1,-6,-2],[-9,10,9,-1,-6,9],[5,-4,-3,-2,2,6]],[[-1,-6,7,7,5,8],[-7,-1,7,4,7,6],[9,-3,-6,-2,6,-6],[-4,-3,-2,-2,-9,3],[2,10,7,9,6,7],[-1,-10,5,-3,1,-9],[-4,-2,-4,1,-4,7],[-8,5,8,-7,9,9],[-3,4,-8,-7,-3,-7],[5,5,10,-9,10,-4],[8,-9,-7,2,3,-6],[-8,-5,-1,8,-4,-5]],[[6,-3,-10,5,8,-6],[6,-7,-3,-10,-3,1],[-9,1,-1,8,-10,4],[-7,9,-6,-2,-4,-1],[-1,9,-8,-9,-1,-10],[7,-2,10,9,8,5],[-7,-6,6,-10,-8,3],[1,-3,-4,-5,-3,-8],[-4,2,-8,-5,4,6],[1,-8,-4,7,5,-6],[-6,-10,9,-4,6,4],[-3,-7,-2,-10,8,6]],[[-1,5,-4,4,3,9],[-9,-2,6,-9,7,-9],[-8,6,7,7,-2,3],[-5,-5,9,10,-4,-3],[10,-1,-7,-8,9,2],[-3,-3,3,-2,-1,7],[-1,-9,1,5,-5,10],[9,8,1,4,-1,2],[3,2,-1,5,10,-6],[6,-2,-10,-3,-10,6],[3,7,9,7,3,7],[2,7,5,-3,-7,-4]],[[-7,9,-1,9,7,7],[-5,-9,6,2,7,10],[-5,5,-7,-10,-7,2],[-3,2,-6,7,3,-10],[1,9,-3,10,-1,1],[-5,2,1,-1,-2,-6],[2,-2,9,-6,-3,-8],[5,6,4,-5,8,2],[9,6,6,4,7,-7],[-5,7,-9,6,-5,-1],[8,10,1,-7,-7,6],[5,3,3,8,-4,-7]],[[2,-6,-6,7,-3,1],[-3,6,1,5,-1,8],[10,-3,-1,-5,4,3],[10,-3,9,7,-4,1],[-7,5,-7,-4,-9,9],[-7,-6,-8,10,-8,-9],[9,-10,10,-2,10,-5],[-8,-1,-5,-8,5,-1],[10,-10,-4,-7,6,-8],[1,-3,5,5,6,2],[-6,-2,-4,-5,6,-5],[8,-5,-1,3,3,2]],[[-4,1,3,-1,-4,10],[-10,4,-2,-8,5,7],[4,-10,5,-5,9,1],[1,-10,9,-5,-7,-4],[-10,-1,6,2,7,-7],[4,-5,9,-4,10,-5],[6,-9,-1,-3,-7,-7],[-2,3,9,-6,-3,5],[-7,-2,4,7,7,2],[10,10,-10,10,-6,-5],[-2,-7,10,-5,-2,5],[4,4,9,-1,1,-8]],[[-8,5,9,8,-9,-6],[-10,7,10,8,5,7],[-9,-4,-4,3,1,8],[8,-3,3,-7,10,5],[-3,4,-6,-1,-3,-5],[-9,9,-8,2,-2,-2],[-4,-10,-10,-4,7,-2],[-9,7,-10,-9,5,-1],[-4,7,-9,3,-6,8],[5,1,-10,-6,-6,2],[-9,6,-10,5,1,-10],[-10,4,3,6,-5,-3]],[[-9,-5,3,-2,-10,-6],[-7,-2,4,-9,-4,-4],[6,-6,-6,8,-7,-2],[-10,-3,-5,9,-10,10],[-5,-10,-1,-6,2,-10],[1,4,10,-8,-2,-1],[10,9,-2,-5,8,-6],[10,10,5,2,9,-4],[4,9,3,-3,1,2],[-2,10,10,3,-9,-4],[2,-10,2,7,-8,-1],[8,1,-7,3,-9,1]],[[3,1,-6,8,-1,-8],[4,10,-4,2,-7,9],[5,-7,-7,8,-4,-1],[4,-8,-8,1,-2,4],[1,5,-9,4,-8,-2],[9,4,9,-2,7,-9],[6,8,10,-1,-10,-9],[-5,-4,-3,-10,6,-6],[1,7,9,4,-5,-1],[-4,6,-3,2,-7,10],[5,-2,6,-4,-5,-7],[-9,8,-1,9,-5,1]],[[7,5,2,-3,7,-7],[-1,-10,-4,-1,-7,-6],[-9,-6,-7,10,10,9],[-3,8,8,-1,-8,5],[9,4,-4,6,5,-8],[9,-10,5,1,-2,6],[-6,-8,9,8,-9,3],[5,9,-1,6,-4,7],[6,5,-10,-5,-7,3],[-6,3,-5,1,8,-4],[8,7,6,1,-5,-7],[9,-1,5,-4,5,8]],[[-8,2,2,4,-7,2],[-6,-5,-1,-6,-4,-1],[-1,4,4,7,-3,-7],[6,5,-2,-7,1,-3],[-2,-7,6,-9,-2,-4],[-7,10,2,6,-9,-9],[9,-3,-8,7,3,-10],[9,-9,-2,-9,6,10],[-9,3,-7,-8,10,9],[6,-10,9,2,-9,10],[6,10,-1,9,7,7],[-6,-2,-8,6,8,-7]],[[-6,-6,-1,-6,-10,-8],[-9,2,-9,-1,5,3],[8,-9,7,-7,4,8],[2,2,-4,-4,9,10],[4,-5,9,-4,9,-5],[-7,9,-6,9,-3,-9],[-3,-10,8,2,-3,4],[-7,9,10,-4,6,2],[-2,-9,2,-2,10,5],[3,-3,4,-8,-6,9],[-1,-6,-6,-9,7,-5],[-8,2,-8,8,-6,-10]],[[10,3,5,1,5,-4],[-4,-1,-3,-2,3,8],[2,-5,-1,-1,2,-5],[4,-4,-5,-1,-5,2],[9,10,-7,-3,6,-9],[2,-8,-2,3,10,6],[-8,-4,9,3,-1,8],[-1,9,1,-6,6,9],[-8,-3,-10,4,5,-2],[-8,-10,8,-7,3,10],[-3,-6,10,-6,-8,7],[-9,-5,-10,9,-2,5]]], dtype = "uint64")#candidate|9971|(14, 12, 6)|const|uint64
bop_9972 = relay.not_equal(var_9970.astype('bool'), const_9971.astype('bool')) # shape=(14, 12, 6)
const_9994 = relay.const([[[-3,8,-3]],[[9,-6,2]],[[10,3,1]],[[3,6,1]]], dtype = "uint64")#candidate|9994|(4, 1, 3)|const|uint64
bop_9995 = relay.divide(var_9970.astype('float64'), const_9994.astype('float64')) # shape=(4, 1, 3)
uop_10007 = relay.log2(bop_9995.astype('float64')) # shape=(4, 1, 3)
func_9536_call = mod.get_global_var('func_9536')
func_9538_call = mutated_mod.get_global_var('func_9538')
call_10015 = func_9536_call()
call_10016 = func_9536_call()
func_5521_call = mod.get_global_var('func_5521')
func_5524_call = mutated_mod.get_global_var('func_5524')
var_10021 = relay.var("var_10021", dtype = "float64", shape = (195,))#candidate|10021|(195,)|var|float64
call_10020 = relay.TupleGetItem(func_5521_call(relay.reshape(var_10021.astype('float64'), [13, 5, 3])), 1)
call_10022 = relay.TupleGetItem(func_5524_call(relay.reshape(var_10021.astype('float64'), [13, 5, 3])), 1)
func_3026_call = mod.get_global_var('func_3026')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_10026 = relay.TupleGetItem(func_3026_call(), 0)
call_10027 = relay.TupleGetItem(func_3027_call(), 0)
func_3058_call = mod.get_global_var('func_3058')
func_3059_call = mutated_mod.get_global_var('func_3059')
call_10028 = relay.TupleGetItem(func_3058_call(), 0)
call_10029 = relay.TupleGetItem(func_3059_call(), 0)
output = relay.Tuple([bop_9972,uop_10007,call_10015,call_10020,var_10021,call_10026,call_10028,])
output2 = relay.Tuple([bop_9972,uop_10007,call_10016,call_10022,var_10021,call_10027,call_10029,])
func_10037 = relay.Function([var_9970,var_10021,], output)
mod['func_10037'] = func_10037
mod = relay.transform.InferType()(mod)
mutated_mod['func_10037'] = func_10037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10037_call = mutated_mod.get_global_var('func_10037')
var_10039 = relay.var("var_10039", dtype = "uint64", shape = ())#candidate|10039|()|var|uint64
var_10040 = relay.var("var_10040", dtype = "float64", shape = (195,))#candidate|10040|(195,)|var|float64
call_10038 = func_10037_call(var_10039,var_10040,)
output = call_10038
func_10041 = relay.Function([var_10039,var_10040,], output)
mutated_mod['func_10041'] = func_10041
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8648_call = mod.get_global_var('func_8648')
func_8649_call = mutated_mod.get_global_var('func_8649')
call_10066 = func_8648_call()
call_10067 = func_8648_call()
output = relay.Tuple([call_10066,])
output2 = relay.Tuple([call_10067,])
func_10068 = relay.Function([], output)
mod['func_10068'] = func_10068
mod = relay.transform.InferType()(mod)
mutated_mod['func_10068'] = func_10068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10068_call = mutated_mod.get_global_var('func_10068')
call_10069 = func_10068_call()
output = call_10069
func_10070 = relay.Function([], output)
mutated_mod['func_10070'] = func_10070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8269_call = mod.get_global_var('func_8269')
func_8270_call = mutated_mod.get_global_var('func_8270')
call_10115 = relay.TupleGetItem(func_8269_call(), 0)
call_10116 = relay.TupleGetItem(func_8270_call(), 0)
output = relay.Tuple([call_10115,])
output2 = relay.Tuple([call_10116,])
func_10122 = relay.Function([], output)
mod['func_10122'] = func_10122
mod = relay.transform.InferType()(mod)
output = func_10122()
func_10123 = relay.Function([], output)
mutated_mod['func_10123'] = func_10123
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mod.get_global_var('func_3710')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_10167 = func_3710_call()
call_10168 = func_3710_call()
output = call_10167
output2 = call_10168
func_10174 = relay.Function([], output)
mod['func_10174'] = func_10174
mod = relay.transform.InferType()(mod)
mutated_mod['func_10174'] = func_10174
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10174_call = mutated_mod.get_global_var('func_10174')
call_10175 = func_10174_call()
output = call_10175
func_10176 = relay.Function([], output)
mutated_mod['func_10176'] = func_10176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6351_call = mod.get_global_var('func_6351')
func_6352_call = mutated_mod.get_global_var('func_6352')
call_10190 = relay.TupleGetItem(func_6351_call(), 1)
call_10191 = relay.TupleGetItem(func_6352_call(), 1)
func_9139_call = mod.get_global_var('func_9139')
func_9142_call = mutated_mod.get_global_var('func_9142')
var_10193 = relay.var("var_10193", dtype = "int64", shape = (2160,))#candidate|10193|(2160,)|var|int64
call_10192 = relay.TupleGetItem(func_9139_call(relay.reshape(var_10193.astype('int64'), [2160,])), 3)
call_10194 = relay.TupleGetItem(func_9142_call(relay.reshape(var_10193.astype('int64'), [2160,])), 3)
output = relay.Tuple([call_10190,call_10192,var_10193,])
output2 = relay.Tuple([call_10191,call_10194,var_10193,])
func_10202 = relay.Function([var_10193,], output)
mod['func_10202'] = func_10202
mod = relay.transform.InferType()(mod)
mutated_mod['func_10202'] = func_10202
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10203 = relay.var("var_10203", dtype = "int64", shape = (2160,))#candidate|10203|(2160,)|var|int64
func_10202_call = mutated_mod.get_global_var('func_10202')
call_10204 = func_10202_call(var_10203)
output = call_10204
func_10205 = relay.Function([var_10203], output)
mutated_mod['func_10205'] = func_10205
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10225 = relay.var("var_10225", dtype = "int32", shape = (2, 10, 10))#candidate|10225|(2, 10, 10)|var|int32
const_10226 = relay.const([[[5,-1,6,7,-1,6,3,10,-2,-5],[5,-5,-8,9,-6,-2,-2,8,-7,8],[1,-5,-6,8,-1,9,5,-2,7,-7],[-2,3,-1,2,7,-7,-5,-5,-7,-1],[4,-4,-3,3,10,2,8,3,-6,9],[-6,4,-1,2,-9,-6,-4,3,-9,-7],[8,-10,-7,-8,-10,8,5,9,10,4],[6,-6,2,-8,-6,1,-6,-10,4,8],[7,3,-8,8,4,1,3,10,7,-10],[5,-6,-2,6,6,-3,-9,-5,-9,-7]],[[4,-4,-5,4,-4,-4,-6,4,9,-8],[-3,8,-7,9,5,-8,-5,-7,7,-2],[-6,2,9,1,-3,2,10,-7,2,-3],[-5,-7,-1,1,-6,9,-1,5,6,-7],[5,-6,-9,1,1,8,5,6,-10,6],[-4,-9,7,-7,9,1,-3,-8,1,2],[3,10,5,-4,7,-2,-4,-5,6,3],[8,-1,4,-3,-7,9,-7,8,6,-9],[-3,-1,-6,9,10,9,-7,-9,10,-5],[9,8,2,-9,1,1,-3,-10,-3,-2]]], dtype = "int32")#candidate|10226|(2, 10, 10)|const|int32
bop_10227 = relay.equal(var_10225.astype('bool'), relay.reshape(const_10226.astype('bool'), relay.shape_of(var_10225))) # shape=(2, 10, 10)
func_3710_call = mod.get_global_var('func_3710')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_10247 = func_3710_call()
call_10248 = func_3710_call()
output = relay.Tuple([bop_10227,call_10247,])
output2 = relay.Tuple([bop_10227,call_10248,])
func_10265 = relay.Function([var_10225,], output)
mod['func_10265'] = func_10265
mod = relay.transform.InferType()(mod)
var_10266 = relay.var("var_10266", dtype = "int32", shape = (2, 10, 10))#candidate|10266|(2, 10, 10)|var|int32
output = func_10265(var_10266)
func_10267 = relay.Function([var_10266], output)
mutated_mod['func_10267'] = func_10267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
call_10271 = relay.TupleGetItem(func_3261_call(), 0)
call_10272 = relay.TupleGetItem(func_3263_call(), 0)
output = call_10271
output2 = call_10272
func_10282 = relay.Function([], output)
mod['func_10282'] = func_10282
mod = relay.transform.InferType()(mod)
mutated_mod['func_10282'] = func_10282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10282_call = mutated_mod.get_global_var('func_10282')
call_10283 = func_10282_call()
output = call_10283
func_10284 = relay.Function([], output)
mutated_mod['func_10284'] = func_10284
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6173_call = mod.get_global_var('func_6173')
func_6174_call = mutated_mod.get_global_var('func_6174')
call_10322 = relay.TupleGetItem(func_6173_call(), 0)
call_10323 = relay.TupleGetItem(func_6174_call(), 0)
output = call_10322
output2 = call_10323
func_10343 = relay.Function([], output)
mod['func_10343'] = func_10343
mod = relay.transform.InferType()(mod)
output = func_10343()
func_10344 = relay.Function([], output)
mutated_mod['func_10344'] = func_10344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4848_call = mod.get_global_var('func_4848')
func_4849_call = mutated_mod.get_global_var('func_4849')
call_10345 = relay.TupleGetItem(func_4848_call(), 1)
call_10346 = relay.TupleGetItem(func_4849_call(), 1)
output = call_10345
output2 = call_10346
func_10370 = relay.Function([], output)
mod['func_10370'] = func_10370
mod = relay.transform.InferType()(mod)
mutated_mod['func_10370'] = func_10370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10370_call = mutated_mod.get_global_var('func_10370')
call_10371 = func_10370_call()
output = call_10371
func_10372 = relay.Function([], output)
mutated_mod['func_10372'] = func_10372
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6919_call = mod.get_global_var('func_6919')
func_6921_call = mutated_mod.get_global_var('func_6921')
call_10456 = func_6919_call()
call_10457 = func_6919_call()
func_9568_call = mod.get_global_var('func_9568')
func_9570_call = mutated_mod.get_global_var('func_9570')
call_10458 = relay.TupleGetItem(func_9568_call(), 0)
call_10459 = relay.TupleGetItem(func_9570_call(), 0)
func_7678_call = mod.get_global_var('func_7678')
func_7680_call = mutated_mod.get_global_var('func_7680')
call_10460 = relay.TupleGetItem(func_7678_call(), 0)
call_10461 = relay.TupleGetItem(func_7680_call(), 0)
output = relay.Tuple([call_10456,call_10458,call_10460,])
output2 = relay.Tuple([call_10457,call_10459,call_10461,])
func_10462 = relay.Function([], output)
mod['func_10462'] = func_10462
mod = relay.transform.InferType()(mod)
mutated_mod['func_10462'] = func_10462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10462_call = mutated_mod.get_global_var('func_10462')
call_10463 = func_10462_call()
output = call_10463
func_10464 = relay.Function([], output)
mutated_mod['func_10464'] = func_10464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9714_call = mod.get_global_var('func_9714')
func_9715_call = mutated_mod.get_global_var('func_9715')
call_10534 = relay.TupleGetItem(func_9714_call(), 1)
call_10535 = relay.TupleGetItem(func_9715_call(), 1)
func_8942_call = mod.get_global_var('func_8942')
func_8943_call = mutated_mod.get_global_var('func_8943')
call_10551 = func_8942_call()
call_10552 = func_8942_call()
output = relay.Tuple([call_10534,call_10551,])
output2 = relay.Tuple([call_10535,call_10552,])
func_10564 = relay.Function([], output)
mod['func_10564'] = func_10564
mod = relay.transform.InferType()(mod)
mutated_mod['func_10564'] = func_10564
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10564_call = mutated_mod.get_global_var('func_10564')
call_10565 = func_10564_call()
output = call_10565
func_10566 = relay.Function([], output)
mutated_mod['func_10566'] = func_10566
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10586 = relay.var("var_10586", dtype = "float32", shape = (10, 13, 7))#candidate|10586|(10, 13, 7)|var|float32
uop_10587 = relay.acosh(var_10586.astype('float32')) # shape=(10, 13, 7)
output = relay.Tuple([uop_10587,])
output2 = relay.Tuple([uop_10587,])
func_10591 = relay.Function([var_10586,], output)
mod['func_10591'] = func_10591
mod = relay.transform.InferType()(mod)
var_10592 = relay.var("var_10592", dtype = "float32", shape = (10, 13, 7))#candidate|10592|(10, 13, 7)|var|float32
output = func_10591(var_10592)
func_10593 = relay.Function([var_10592], output)
mutated_mod['func_10593'] = func_10593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4421_call = mod.get_global_var('func_4421')
func_4423_call = mutated_mod.get_global_var('func_4423')
call_10678 = func_4421_call()
call_10679 = func_4421_call()
output = relay.Tuple([call_10678,])
output2 = relay.Tuple([call_10679,])
func_10682 = relay.Function([], output)
mod['func_10682'] = func_10682
mod = relay.transform.InferType()(mod)
output = func_10682()
func_10683 = relay.Function([], output)
mutated_mod['func_10683'] = func_10683
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9536_call = mod.get_global_var('func_9536')
func_9538_call = mutated_mod.get_global_var('func_9538')
call_10703 = func_9536_call()
call_10704 = func_9536_call()
func_2861_call = mod.get_global_var('func_2861')
func_2865_call = mutated_mod.get_global_var('func_2865')
var_10713 = relay.var("var_10713", dtype = "float32", shape = (4, 308))#candidate|10713|(4, 308)|var|float32
var_10714 = relay.var("var_10714", dtype = "float32", shape = (2880,))#candidate|10714|(2880,)|var|float32
call_10712 = relay.TupleGetItem(func_2861_call(relay.reshape(var_10713.astype('float32'), [1232,]), relay.reshape(var_10714.astype('float32'), [2880,]), ), 2)
call_10715 = relay.TupleGetItem(func_2865_call(relay.reshape(var_10713.astype('float32'), [1232,]), relay.reshape(var_10714.astype('float32'), [2880,]), ), 2)
func_3992_call = mod.get_global_var('func_3992')
func_3993_call = mutated_mod.get_global_var('func_3993')
call_10720 = relay.TupleGetItem(func_3992_call(), 0)
call_10721 = relay.TupleGetItem(func_3993_call(), 0)
var_10733 = relay.var("var_10733", dtype = "float32", shape = (4, 308))#candidate|10733|(4, 308)|var|float32
bop_10734 = relay.mod(var_10713.astype('float64'), relay.reshape(var_10733.astype('float64'), relay.shape_of(var_10713))) # shape=(4, 308)
uop_10737 = relay.log2(bop_10734.astype('float64')) # shape=(4, 308)
bop_10742 = relay.logical_and(uop_10737.astype('bool'), relay.reshape(call_10712.astype('bool'), relay.shape_of(uop_10737))) # shape=(4, 308)
bop_10745 = relay.logical_and(uop_10737.astype('bool'), relay.reshape(call_10715.astype('bool'), relay.shape_of(uop_10737))) # shape=(4, 308)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_10754 = relay.TupleGetItem(func_6245_call(), 0)
call_10755 = relay.TupleGetItem(func_6247_call(), 0)
output = relay.Tuple([call_10703,var_10714,call_10720,bop_10742,call_10754,])
output2 = relay.Tuple([call_10704,var_10714,call_10721,bop_10745,call_10755,])
func_10757 = relay.Function([var_10713,var_10714,var_10733,], output)
mod['func_10757'] = func_10757
mod = relay.transform.InferType()(mod)
var_10758 = relay.var("var_10758", dtype = "float32", shape = (4, 308))#candidate|10758|(4, 308)|var|float32
var_10759 = relay.var("var_10759", dtype = "float32", shape = (2880,))#candidate|10759|(2880,)|var|float32
var_10760 = relay.var("var_10760", dtype = "float32", shape = (4, 308))#candidate|10760|(4, 308)|var|float32
output = func_10757(var_10758,var_10759,var_10760,)
func_10761 = relay.Function([var_10758,var_10759,var_10760,], output)
mutated_mod['func_10761'] = func_10761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mod.get_global_var('func_6948')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_10801 = relay.TupleGetItem(func_6948_call(), 1)
call_10802 = relay.TupleGetItem(func_6950_call(), 1)
output = relay.Tuple([call_10801,])
output2 = relay.Tuple([call_10802,])
func_10807 = relay.Function([], output)
mod['func_10807'] = func_10807
mod = relay.transform.InferType()(mod)
mutated_mod['func_10807'] = func_10807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10807_call = mutated_mod.get_global_var('func_10807')
call_10808 = func_10807_call()
output = call_10808
func_10809 = relay.Function([], output)
mutated_mod['func_10809'] = func_10809
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2414_call = mod.get_global_var('func_2414')
func_2415_call = mutated_mod.get_global_var('func_2415')
call_10888 = relay.TupleGetItem(func_2414_call(), 0)
call_10889 = relay.TupleGetItem(func_2415_call(), 0)
func_3139_call = mod.get_global_var('func_3139')
func_3140_call = mutated_mod.get_global_var('func_3140')
call_10897 = relay.TupleGetItem(func_3139_call(), 0)
call_10898 = relay.TupleGetItem(func_3140_call(), 0)
output = relay.Tuple([call_10888,call_10897,])
output2 = relay.Tuple([call_10889,call_10898,])
func_10913 = relay.Function([], output)
mod['func_10913'] = func_10913
mod = relay.transform.InferType()(mod)
mutated_mod['func_10913'] = func_10913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10913_call = mutated_mod.get_global_var('func_10913')
call_10914 = func_10913_call()
output = call_10914
func_10915 = relay.Function([], output)
mutated_mod['func_10915'] = func_10915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5182_call = mod.get_global_var('func_5182')
func_5184_call = mutated_mod.get_global_var('func_5184')
call_10942 = relay.TupleGetItem(func_5182_call(), 1)
call_10943 = relay.TupleGetItem(func_5184_call(), 1)
output = call_10942
output2 = call_10943
func_10970 = relay.Function([], output)
mod['func_10970'] = func_10970
mod = relay.transform.InferType()(mod)
output = func_10970()
func_10971 = relay.Function([], output)
mutated_mod['func_10971'] = func_10971
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10975 = relay.var("var_10975", dtype = "float64", shape = (12, 1, 6))#candidate|10975|(12, 1, 6)|var|float64
var_10976 = relay.var("var_10976", dtype = "float64", shape = (12, 11, 6))#candidate|10976|(12, 11, 6)|var|float64
bop_10977 = relay.less(var_10975.astype('bool'), var_10976.astype('bool')) # shape=(12, 11, 6)
bop_10981 = relay.greater_equal(bop_10977.astype('bool'), relay.reshape(var_10976.astype('bool'), relay.shape_of(bop_10977))) # shape=(12, 11, 6)
output = bop_10981
output2 = bop_10981
func_11011 = relay.Function([var_10975,var_10976,], output)
mod['func_11011'] = func_11011
mod = relay.transform.InferType()(mod)
mutated_mod['func_11011'] = func_11011
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11011_call = mutated_mod.get_global_var('func_11011')
var_11013 = relay.var("var_11013", dtype = "float64", shape = (12, 1, 6))#candidate|11013|(12, 1, 6)|var|float64
var_11014 = relay.var("var_11014", dtype = "float64", shape = (12, 11, 6))#candidate|11014|(12, 11, 6)|var|float64
call_11012 = func_11011_call(var_11013,var_11014,)
output = call_11012
func_11015 = relay.Function([var_11013,var_11014,], output)
mutated_mod['func_11015'] = func_11015
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3901_call = mod.get_global_var('func_3901')
func_3902_call = mutated_mod.get_global_var('func_3902')
call_11082 = relay.TupleGetItem(func_3901_call(), 3)
call_11083 = relay.TupleGetItem(func_3902_call(), 3)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_11103 = relay.TupleGetItem(func_1467_call(), 0)
call_11104 = relay.TupleGetItem(func_1468_call(), 0)
output = relay.Tuple([call_11082,call_11103,])
output2 = relay.Tuple([call_11083,call_11104,])
func_11110 = relay.Function([], output)
mod['func_11110'] = func_11110
mod = relay.transform.InferType()(mod)
mutated_mod['func_11110'] = func_11110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11110_call = mutated_mod.get_global_var('func_11110')
call_11111 = func_11110_call()
output = call_11111
func_11112 = relay.Function([], output)
mutated_mod['func_11112'] = func_11112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9625_call = mod.get_global_var('func_9625')
func_9627_call = mutated_mod.get_global_var('func_9627')
call_11133 = func_9625_call()
call_11134 = func_9625_call()
func_2749_call = mod.get_global_var('func_2749')
func_2751_call = mutated_mod.get_global_var('func_2751')
call_11141 = relay.TupleGetItem(func_2749_call(relay.reshape(call_11133.astype('bool'), [1848,])), 0)
call_11142 = relay.TupleGetItem(func_2751_call(relay.reshape(call_11133.astype('bool'), [1848,])), 0)
output = relay.Tuple([call_11133,call_11141,])
output2 = relay.Tuple([call_11134,call_11142,])
func_11151 = relay.Function([], output)
mod['func_11151'] = func_11151
mod = relay.transform.InferType()(mod)
mutated_mod['func_11151'] = func_11151
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11151_call = mutated_mod.get_global_var('func_11151')
call_11152 = func_11151_call()
output = call_11152
func_11153 = relay.Function([], output)
mutated_mod['func_11153'] = func_11153
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_11172 = relay.TupleGetItem(func_1128_call(), 0)
call_11173 = relay.TupleGetItem(func_1129_call(), 0)
output = call_11172
output2 = call_11173
func_11174 = relay.Function([], output)
mod['func_11174'] = func_11174
mod = relay.transform.InferType()(mod)
output = func_11174()
func_11175 = relay.Function([], output)
mutated_mod['func_11175'] = func_11175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5571_call = mod.get_global_var('func_5571')
func_5572_call = mutated_mod.get_global_var('func_5572')
call_11230 = relay.TupleGetItem(func_5571_call(), 1)
call_11231 = relay.TupleGetItem(func_5572_call(), 1)
func_10682_call = mod.get_global_var('func_10682')
func_10683_call = mutated_mod.get_global_var('func_10683')
call_11252 = relay.TupleGetItem(func_10682_call(), 0)
call_11253 = relay.TupleGetItem(func_10683_call(), 0)
func_8862_call = mod.get_global_var('func_8862')
func_8864_call = mutated_mod.get_global_var('func_8864')
call_11273 = relay.TupleGetItem(func_8862_call(), 0)
call_11274 = relay.TupleGetItem(func_8864_call(), 0)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_11338 = relay.TupleGetItem(func_1128_call(), 0)
call_11339 = relay.TupleGetItem(func_1129_call(), 0)
func_8056_call = mod.get_global_var('func_8056')
func_8057_call = mutated_mod.get_global_var('func_8057')
call_11341 = func_8056_call()
call_11342 = func_8056_call()
output = relay.Tuple([call_11230,call_11252,call_11273,call_11338,call_11341,])
output2 = relay.Tuple([call_11231,call_11253,call_11274,call_11339,call_11342,])
func_11343 = relay.Function([], output)
mod['func_11343'] = func_11343
mod = relay.transform.InferType()(mod)
output = func_11343()
func_11344 = relay.Function([], output)
mutated_mod['func_11344'] = func_11344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1121_call = mod.get_global_var('func_1121')
func_1122_call = mutated_mod.get_global_var('func_1122')
call_11474 = func_1121_call()
call_11475 = func_1121_call()
func_1351_call = mod.get_global_var('func_1351')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_11476 = relay.TupleGetItem(func_1351_call(), 0)
call_11477 = relay.TupleGetItem(func_1352_call(), 0)
output = relay.Tuple([call_11474,call_11476,])
output2 = relay.Tuple([call_11475,call_11477,])
func_11482 = relay.Function([], output)
mod['func_11482'] = func_11482
mod = relay.transform.InferType()(mod)
mutated_mod['func_11482'] = func_11482
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11482_call = mutated_mod.get_global_var('func_11482')
call_11483 = func_11482_call()
output = call_11483
func_11484 = relay.Function([], output)
mutated_mod['func_11484'] = func_11484
mutated_mod = relay.transform.InferType()(mutated_mod)
const_11487 = relay.const([[[True,True,True,True,True,False,False,True,True],[True,True,True,True,False,True,True,False,False],[False,True,True,True,False,True,True,False,False]],[[False,False,True,True,False,False,False,True,True],[False,True,False,False,True,False,True,False,False],[False,False,False,False,False,True,False,True,True]],[[True,False,True,False,True,False,True,False,False],[True,False,True,True,False,False,True,False,True],[True,True,False,True,True,False,True,False,False]],[[False,False,True,False,True,True,True,True,False],[True,False,False,True,False,False,False,True,True],[True,False,True,False,False,True,False,True,False]],[[False,True,False,False,True,False,True,True,False],[True,True,True,True,False,False,False,False,False],[False,False,True,True,True,True,True,False,True]],[[False,False,True,False,True,False,True,True,True],[True,True,True,True,False,False,True,True,False],[True,True,False,True,False,True,False,True,False]],[[True,False,False,True,False,True,False,True,False],[False,False,True,True,True,False,False,True,False],[False,False,False,True,True,True,True,False,True]],[[False,False,True,True,True,True,True,False,False],[False,False,True,False,False,True,False,False,False],[False,False,True,True,True,True,True,False,False]],[[False,True,False,False,False,False,True,True,False],[False,False,False,False,True,True,True,True,True],[False,True,True,True,False,False,False,True,True]],[[False,False,True,False,False,False,True,False,False],[True,True,True,True,False,False,False,False,True],[True,False,False,False,False,False,False,True,False]],[[False,False,True,True,False,True,False,False,True],[False,True,False,True,True,True,False,False,True],[False,False,False,True,True,False,False,False,False]],[[False,False,False,False,False,False,True,True,False],[False,True,False,True,True,False,True,False,True],[True,True,True,False,True,False,False,True,True]],[[False,True,True,True,True,True,True,True,True],[True,False,False,True,False,True,True,True,True],[True,True,True,False,False,False,False,False,False]],[[False,True,True,True,True,False,True,False,True],[False,True,False,False,False,False,False,True,False],[False,True,True,True,False,False,False,True,False]],[[True,True,True,True,True,False,False,False,True],[False,True,False,True,False,True,True,False,False],[True,False,True,True,False,False,False,True,True]],[[True,False,False,True,True,True,False,False,False],[False,False,False,False,False,False,False,True,False],[True,False,False,True,True,False,True,False,True]]], dtype = "bool")#candidate|11487|(16, 3, 9)|const|bool
var_11488 = relay.var("var_11488", dtype = "bool", shape = (16, 3, 9))#candidate|11488|(16, 3, 9)|var|bool
bop_11489 = relay.logical_and(const_11487.astype('bool'), relay.reshape(var_11488.astype('bool'), relay.shape_of(const_11487))) # shape=(16, 3, 9)
func_6488_call = mod.get_global_var('func_6488')
func_6490_call = mutated_mod.get_global_var('func_6490')
call_11507 = relay.TupleGetItem(func_6488_call(), 0)
call_11508 = relay.TupleGetItem(func_6490_call(), 0)
output = relay.Tuple([bop_11489,call_11507,])
output2 = relay.Tuple([bop_11489,call_11508,])
func_11531 = relay.Function([var_11488,], output)
mod['func_11531'] = func_11531
mod = relay.transform.InferType()(mod)
var_11532 = relay.var("var_11532", dtype = "bool", shape = (16, 3, 9))#candidate|11532|(16, 3, 9)|var|bool
output = func_11531(var_11532)
func_11533 = relay.Function([var_11532], output)
mutated_mod['func_11533'] = func_11533
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5861_call = mod.get_global_var('func_5861')
func_5862_call = mutated_mod.get_global_var('func_5862')
call_11535 = relay.TupleGetItem(func_5861_call(), 0)
call_11536 = relay.TupleGetItem(func_5862_call(), 0)
func_11343_call = mod.get_global_var('func_11343')
func_11344_call = mutated_mod.get_global_var('func_11344')
call_11537 = relay.TupleGetItem(func_11343_call(), 1)
call_11538 = relay.TupleGetItem(func_11344_call(), 1)
output = relay.Tuple([call_11535,call_11537,])
output2 = relay.Tuple([call_11536,call_11538,])
func_11550 = relay.Function([], output)
mod['func_11550'] = func_11550
mod = relay.transform.InferType()(mod)
mutated_mod['func_11550'] = func_11550
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11550_call = mutated_mod.get_global_var('func_11550')
call_11551 = func_11550_call()
output = call_11551
func_11552 = relay.Function([], output)
mutated_mod['func_11552'] = func_11552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11482_call = mod.get_global_var('func_11482')
func_11484_call = mutated_mod.get_global_var('func_11484')
call_11581 = relay.TupleGetItem(func_11482_call(), 0)
call_11582 = relay.TupleGetItem(func_11484_call(), 0)
func_4046_call = mod.get_global_var('func_4046')
func_4047_call = mutated_mod.get_global_var('func_4047')
call_11583 = relay.TupleGetItem(func_4046_call(), 2)
call_11584 = relay.TupleGetItem(func_4047_call(), 2)
output = relay.Tuple([call_11581,call_11583,])
output2 = relay.Tuple([call_11582,call_11584,])
func_11591 = relay.Function([], output)
mod['func_11591'] = func_11591
mod = relay.transform.InferType()(mod)
mutated_mod['func_11591'] = func_11591
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11591_call = mutated_mod.get_global_var('func_11591')
call_11592 = func_11591_call()
output = call_11592
func_11593 = relay.Function([], output)
mutated_mod['func_11593'] = func_11593
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2628_call = mod.get_global_var('func_2628')
func_2630_call = mutated_mod.get_global_var('func_2630')
call_11726 = relay.TupleGetItem(func_2628_call(), 0)
call_11727 = relay.TupleGetItem(func_2630_call(), 0)
func_6488_call = mod.get_global_var('func_6488')
func_6490_call = mutated_mod.get_global_var('func_6490')
call_11741 = relay.TupleGetItem(func_6488_call(), 0)
call_11742 = relay.TupleGetItem(func_6490_call(), 0)
func_8768_call = mod.get_global_var('func_8768')
func_8769_call = mutated_mod.get_global_var('func_8769')
call_11749 = relay.TupleGetItem(func_8768_call(), 0)
call_11750 = relay.TupleGetItem(func_8769_call(), 0)
func_11110_call = mod.get_global_var('func_11110')
func_11112_call = mutated_mod.get_global_var('func_11112')
call_11755 = relay.TupleGetItem(func_11110_call(), 0)
call_11756 = relay.TupleGetItem(func_11112_call(), 0)
output = relay.Tuple([call_11726,call_11741,call_11749,call_11755,])
output2 = relay.Tuple([call_11727,call_11742,call_11750,call_11756,])
func_11764 = relay.Function([], output)
mod['func_11764'] = func_11764
mod = relay.transform.InferType()(mod)
mutated_mod['func_11764'] = func_11764
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11764_call = mutated_mod.get_global_var('func_11764')
call_11765 = func_11764_call()
output = call_11765
func_11766 = relay.Function([], output)
mutated_mod['func_11766'] = func_11766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6245_call = mod.get_global_var('func_6245')
func_6247_call = mutated_mod.get_global_var('func_6247')
call_11775 = relay.TupleGetItem(func_6245_call(), 0)
call_11776 = relay.TupleGetItem(func_6247_call(), 0)
func_1467_call = mod.get_global_var('func_1467')
func_1468_call = mutated_mod.get_global_var('func_1468')
call_11805 = relay.TupleGetItem(func_1467_call(), 0)
call_11806 = relay.TupleGetItem(func_1468_call(), 0)
output = relay.Tuple([call_11775,call_11805,])
output2 = relay.Tuple([call_11776,call_11806,])
func_11815 = relay.Function([], output)
mod['func_11815'] = func_11815
mod = relay.transform.InferType()(mod)
mutated_mod['func_11815'] = func_11815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11815_call = mutated_mod.get_global_var('func_11815')
call_11816 = func_11815_call()
output = call_11816
func_11817 = relay.Function([], output)
mutated_mod['func_11817'] = func_11817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_11879 = relay.TupleGetItem(func_6038_call(), 0)
call_11880 = relay.TupleGetItem(func_6040_call(), 0)
func_8246_call = mod.get_global_var('func_8246')
func_8247_call = mutated_mod.get_global_var('func_8247')
call_11888 = relay.TupleGetItem(func_8246_call(), 1)
call_11889 = relay.TupleGetItem(func_8247_call(), 1)
output = relay.Tuple([call_11879,call_11888,])
output2 = relay.Tuple([call_11880,call_11889,])
func_11899 = relay.Function([], output)
mod['func_11899'] = func_11899
mod = relay.transform.InferType()(mod)
mutated_mod['func_11899'] = func_11899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11899_call = mutated_mod.get_global_var('func_11899')
call_11900 = func_11899_call()
output = call_11900
func_11901 = relay.Function([], output)
mutated_mod['func_11901'] = func_11901
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7991_call = mod.get_global_var('func_7991')
func_7992_call = mutated_mod.get_global_var('func_7992')
call_11951 = relay.TupleGetItem(func_7991_call(), 1)
call_11952 = relay.TupleGetItem(func_7992_call(), 1)
output = relay.Tuple([call_11951,])
output2 = relay.Tuple([call_11952,])
func_11963 = relay.Function([], output)
mod['func_11963'] = func_11963
mod = relay.transform.InferType()(mod)
output = func_11963()
func_11964 = relay.Function([], output)
mutated_mod['func_11964'] = func_11964
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12014 = relay.var("var_12014", dtype = "uint8", shape = (1, 6, 4))#candidate|12014|(1, 6, 4)|var|uint8
var_12015 = relay.var("var_12015", dtype = "uint8", shape = (11, 6, 4))#candidate|12015|(11, 6, 4)|var|uint8
bop_12016 = relay.less(var_12014.astype('bool'), var_12015.astype('bool')) # shape=(11, 6, 4)
func_8152_call = mod.get_global_var('func_8152')
func_8154_call = mutated_mod.get_global_var('func_8154')
call_12023 = relay.TupleGetItem(func_8152_call(), 0)
call_12024 = relay.TupleGetItem(func_8154_call(), 0)
const_12028 = relay.const([[[-2,2,10,1],[-5,-3,6,-8],[1,-7,-1,-2],[-2,-4,-1,1],[-3,-1,9,9],[8,-10,9,5]],[[-9,5,-3,-2],[3,-8,-10,10],[-1,6,-3,-5],[-1,9,-6,10],[-7,5,3,4],[3,4,2,7]],[[-5,7,-2,-10],[7,2,4,-9],[10,-4,1,-1],[-2,8,-7,9],[-1,-1,-7,5],[2,9,3,10]]], dtype = "uint8")#candidate|12028|(3, 6, 4)|const|uint8
bop_12029 = relay.less_equal(var_12014.astype('bool'), const_12028.astype('bool')) # shape=(3, 6, 4)
output = relay.Tuple([bop_12016,call_12023,bop_12029,])
output2 = relay.Tuple([bop_12016,call_12024,bop_12029,])
func_12040 = relay.Function([var_12014,var_12015,], output)
mod['func_12040'] = func_12040
mod = relay.transform.InferType()(mod)
var_12041 = relay.var("var_12041", dtype = "uint8", shape = (1, 6, 4))#candidate|12041|(1, 6, 4)|var|uint8
var_12042 = relay.var("var_12042", dtype = "uint8", shape = (11, 6, 4))#candidate|12042|(11, 6, 4)|var|uint8
output = func_12040(var_12041,var_12042,)
func_12043 = relay.Function([var_12041,var_12042,], output)
mutated_mod['func_12043'] = func_12043
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1351_call = mod.get_global_var('func_1351')
func_1352_call = mutated_mod.get_global_var('func_1352')
call_12045 = relay.TupleGetItem(func_1351_call(), 0)
call_12046 = relay.TupleGetItem(func_1352_call(), 0)
func_5691_call = mod.get_global_var('func_5691')
func_5692_call = mutated_mod.get_global_var('func_5692')
call_12066 = relay.TupleGetItem(func_5691_call(), 0)
call_12067 = relay.TupleGetItem(func_5692_call(), 0)
output = relay.Tuple([call_12045,call_12066,])
output2 = relay.Tuple([call_12046,call_12067,])
func_12071 = relay.Function([], output)
mod['func_12071'] = func_12071
mod = relay.transform.InferType()(mod)
output = func_12071()
func_12072 = relay.Function([], output)
mutated_mod['func_12072'] = func_12072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10682_call = mod.get_global_var('func_10682')
func_10683_call = mutated_mod.get_global_var('func_10683')
call_12206 = relay.TupleGetItem(func_10682_call(), 0)
call_12207 = relay.TupleGetItem(func_10683_call(), 0)
func_9625_call = mod.get_global_var('func_9625')
func_9627_call = mutated_mod.get_global_var('func_9627')
call_12214 = func_9625_call()
call_12215 = func_9625_call()
func_2512_call = mod.get_global_var('func_2512')
func_2516_call = mutated_mod.get_global_var('func_2516')
const_12232 = relay.const([[-9.100198,-4.250479],[7.806039,7.311029],[7.431115,2.341508],[4.726730,3.525323],[7.218505,-3.650828],[9.904833,-1.543060],[3.691569,-1.020871],[7.520645,-0.066585],[4.912194,9.622927],[-2.098497,5.993944],[0.560832,-9.360865],[2.144886,-2.383044],[3.884940,4.381216]], dtype = "float64")#candidate|12232|(13, 2)|const|float64
call_12231 = relay.TupleGetItem(func_2512_call(relay.reshape(const_12232.astype('float64'), [2, 13, 1]), relay.reshape(const_12232.astype('float64'), [2, 13, 1]), ), 0)
call_12233 = relay.TupleGetItem(func_2516_call(relay.reshape(const_12232.astype('float64'), [2, 13, 1]), relay.reshape(const_12232.astype('float64'), [2, 13, 1]), ), 0)
output = relay.Tuple([call_12206,call_12214,call_12231,const_12232,])
output2 = relay.Tuple([call_12207,call_12215,call_12233,const_12232,])
func_12237 = relay.Function([], output)
mod['func_12237'] = func_12237
mod = relay.transform.InferType()(mod)
mutated_mod['func_12237'] = func_12237
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12237_call = mutated_mod.get_global_var('func_12237')
call_12238 = func_12237_call()
output = call_12238
func_12239 = relay.Function([], output)
mutated_mod['func_12239'] = func_12239
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mod.get_global_var('func_6948')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_12262 = relay.TupleGetItem(func_6948_call(), 0)
call_12263 = relay.TupleGetItem(func_6950_call(), 0)
output = call_12262
output2 = call_12263
func_12268 = relay.Function([], output)
mod['func_12268'] = func_12268
mod = relay.transform.InferType()(mod)
output = func_12268()
func_12269 = relay.Function([], output)
mutated_mod['func_12269'] = func_12269
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1128_call = mod.get_global_var('func_1128')
func_1129_call = mutated_mod.get_global_var('func_1129')
call_12277 = relay.TupleGetItem(func_1128_call(), 0)
call_12278 = relay.TupleGetItem(func_1129_call(), 0)
output = call_12277
output2 = call_12278
func_12297 = relay.Function([], output)
mod['func_12297'] = func_12297
mod = relay.transform.InferType()(mod)
mutated_mod['func_12297'] = func_12297
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12297_call = mutated_mod.get_global_var('func_12297')
call_12298 = func_12297_call()
output = call_12298
func_12299 = relay.Function([], output)
mutated_mod['func_12299'] = func_12299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11343_call = mod.get_global_var('func_11343')
func_11344_call = mutated_mod.get_global_var('func_11344')
call_12309 = relay.TupleGetItem(func_11343_call(), 4)
call_12310 = relay.TupleGetItem(func_11344_call(), 4)
func_12040_call = mod.get_global_var('func_12040')
func_12043_call = mutated_mod.get_global_var('func_12043')
var_12330 = relay.var("var_12330", dtype = "uint8", shape = (24,))#candidate|12330|(24,)|var|uint8
const_12331 = relay.const([5,-2,-4,-10,2,-3,-7,-9,5,10,-7,-7,-10,8,8,-3,-1,7,-1,-4,-4,-2,-2,-7,8,4,-4,10,3,-5,7,-3,6,-4,8,8,7,-4,2,-7,1,-6,2,9,3,-8,6,1,-3,7,-4,-3,4,1,-1,8,2,4,-9,-1,9,-5,3,6,-10,7,-7,-7,10,-9,-8,2,1,6,-3,2,-8,-8,2,7,7,6,-6,7,2,-8,4,-2,8,-7,-7,-2,6,6,-5,10,4,-8,-10,8,-4,4,-6,5,6,-6,10,8,9,-4,6,6,1,-2,-10,2,-5,-2,-3,-7,-8,2,3,4,5,-6,-3,10,-8,-4,1,4,10,-8,-2,2,10,-8,3,4,-9,8,5,-7,-8,-3,6,-4,-3,1,-9,-5,-6,-1,4,-8,8,-6,-4,5,-3,1,-6,-10,-9,-4,4,7,-2,-1,-6,9,7,-6,-8,2,-1,-3,-10,-4,3,-9,-7,9,7,-6,-10,-6,10,-7,2,10,-10,10,9,1,4,-1,8,-2,1,-9,-3,-10,-6,-1,-4,-4,7,6,-10,8,-9,-6,-10,-6,-6,-3,-10,2,-8,6,6,-8,-6,7,-3,1,-5,-1,-5,5,3,-10,1,-9,-5,-10,-7,-3,5,8,-6,-10,-3,-5,1,10,8,-5,4,-7,-10,-1,7,7,-6,10,1,-3,2,-5,-10,6], dtype = "uint8")#candidate|12331|(264,)|const|uint8
call_12329 = relay.TupleGetItem(func_12040_call(relay.reshape(var_12330.astype('uint8'), [1, 6, 4]), relay.reshape(const_12331.astype('uint8'), [11, 6, 4]), ), 2)
call_12332 = relay.TupleGetItem(func_12043_call(relay.reshape(var_12330.astype('uint8'), [1, 6, 4]), relay.reshape(const_12331.astype('uint8'), [11, 6, 4]), ), 2)
output = relay.Tuple([call_12309,call_12329,var_12330,const_12331,])
output2 = relay.Tuple([call_12310,call_12332,var_12330,const_12331,])
func_12361 = relay.Function([var_12330,], output)
mod['func_12361'] = func_12361
mod = relay.transform.InferType()(mod)
mutated_mod['func_12361'] = func_12361
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12362 = relay.var("var_12362", dtype = "uint8", shape = (24,))#candidate|12362|(24,)|var|uint8
func_12361_call = mutated_mod.get_global_var('func_12361')
call_12363 = func_12361_call(var_12362)
output = call_12363
func_12364 = relay.Function([var_12362], output)
mutated_mod['func_12364'] = func_12364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3139_call = mod.get_global_var('func_3139')
func_3140_call = mutated_mod.get_global_var('func_3140')
call_12439 = relay.TupleGetItem(func_3139_call(), 0)
call_12440 = relay.TupleGetItem(func_3140_call(), 0)
func_9714_call = mod.get_global_var('func_9714')
func_9715_call = mutated_mod.get_global_var('func_9715')
call_12442 = relay.TupleGetItem(func_9714_call(), 1)
call_12443 = relay.TupleGetItem(func_9715_call(), 1)
output = relay.Tuple([call_12439,call_12442,])
output2 = relay.Tuple([call_12440,call_12443,])
func_12446 = relay.Function([], output)
mod['func_12446'] = func_12446
mod = relay.transform.InferType()(mod)
mutated_mod['func_12446'] = func_12446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12446_call = mutated_mod.get_global_var('func_12446')
call_12447 = func_12446_call()
output = call_12447
func_12448 = relay.Function([], output)
mutated_mod['func_12448'] = func_12448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8648_call = mod.get_global_var('func_8648')
func_8649_call = mutated_mod.get_global_var('func_8649')
call_12454 = func_8648_call()
call_12455 = func_8648_call()
output = relay.Tuple([call_12454,])
output2 = relay.Tuple([call_12455,])
func_12457 = relay.Function([], output)
mod['func_12457'] = func_12457
mod = relay.transform.InferType()(mod)
output = func_12457()
func_12458 = relay.Function([], output)
mutated_mod['func_12458'] = func_12458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11764_call = mod.get_global_var('func_11764')
func_11766_call = mutated_mod.get_global_var('func_11766')
call_12461 = relay.TupleGetItem(func_11764_call(), 2)
call_12462 = relay.TupleGetItem(func_11766_call(), 2)
func_1513_call = mod.get_global_var('func_1513')
func_1514_call = mutated_mod.get_global_var('func_1514')
call_12467 = func_1513_call()
call_12468 = func_1513_call()
output = relay.Tuple([call_12461,call_12467,])
output2 = relay.Tuple([call_12462,call_12468,])
func_12469 = relay.Function([], output)
mod['func_12469'] = func_12469
mod = relay.transform.InferType()(mod)
mutated_mod['func_12469'] = func_12469
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12469_call = mutated_mod.get_global_var('func_12469')
call_12470 = func_12469_call()
output = call_12470
func_12471 = relay.Function([], output)
mutated_mod['func_12471'] = func_12471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12268_call = mod.get_global_var('func_12268')
func_12269_call = mutated_mod.get_global_var('func_12269')
call_12472 = func_12268_call()
call_12473 = func_12268_call()
output = call_12472
output2 = call_12473
func_12484 = relay.Function([], output)
mod['func_12484'] = func_12484
mod = relay.transform.InferType()(mod)
output = func_12484()
func_12485 = relay.Function([], output)
mutated_mod['func_12485'] = func_12485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11482_call = mod.get_global_var('func_11482')
func_11484_call = mutated_mod.get_global_var('func_11484')
call_12673 = relay.TupleGetItem(func_11482_call(), 0)
call_12674 = relay.TupleGetItem(func_11484_call(), 0)
func_12040_call = mod.get_global_var('func_12040')
func_12043_call = mutated_mod.get_global_var('func_12043')
const_12681 = relay.const([10,-6,2,3,-4,10,-5,-3,-9,-9,9,-3,-5,-9,9,-3,-1,-6,-2,4,-4,-9,-3,6], dtype = "uint8")#candidate|12681|(24,)|const|uint8
const_12682 = relay.const([6,6,8,8,6,-1,-6,7,-9,3,-6,8,-9,-10,-4,-9,8,2,7,-3,-9,3,1,9,10,3,-10,1,-3,4,7,-8,9,1,1,-10,-8,-8,-2,9,9,-7,-5,6,-1,-5,-4,-3,4,6,6,8,8,5,10,-9,9,6,4,4,-4,4,-4,8,9,-3,-1,-10,-4,-6,-10,3,-3,-5,-3,-2,10,5,-3,1,-1,6,7,1,-3,-8,-4,-4,2,-3,10,3,3,3,-3,7,-9,5,1,7,-3,-8,-8,5,4,4,-5,-4,-7,4,9,3,6,-6,-4,-4,-10,5,7,-5,-7,-4,7,1,-5,3,8,-4,4,5,4,4,-2,-1,8,-1,-6,9,5,7,-9,-3,-8,3,-8,-1,-8,6,5,-8,-3,10,-3,3,3,7,-2,-8,7,4,4,10,10,1,-1,-10,7,4,-1,10,-8,-5,-7,-1,-8,4,10,-3,7,-6,2,-5,-6,-3,-5,-2,-9,-3,9,5,-3,-9,-10,-3,-6,-5,7,-9,10,-1,-4,10,-9,2,-1,7,-3,-4,9,-9,-8,-3,-6,-9,4,-1,-10,-4,6,-7,2,-8,2,-7,1,6,-10,-6,1,3,3,6,5,-4,-5,-7,-7,-1,6,10,1,7,-4,8,-8,3,-4,-7,-10,-1,6,-9,10,-1,-7,4,-6,-9,-5,8,-5,7,1,-10], dtype = "uint8")#candidate|12682|(264,)|const|uint8
call_12680 = relay.TupleGetItem(func_12040_call(relay.reshape(const_12681.astype('uint8'), [1, 6, 4]), relay.reshape(const_12682.astype('uint8'), [11, 6, 4]), ), 2)
call_12683 = relay.TupleGetItem(func_12043_call(relay.reshape(const_12681.astype('uint8'), [1, 6, 4]), relay.reshape(const_12682.astype('uint8'), [11, 6, 4]), ), 2)
output = relay.Tuple([call_12673,call_12680,const_12681,const_12682,])
output2 = relay.Tuple([call_12674,call_12683,const_12681,const_12682,])
func_12690 = relay.Function([], output)
mod['func_12690'] = func_12690
mod = relay.transform.InferType()(mod)
mutated_mod['func_12690'] = func_12690
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12690_call = mutated_mod.get_global_var('func_12690')
call_12691 = func_12690_call()
output = call_12691
func_12692 = relay.Function([], output)
mutated_mod['func_12692'] = func_12692
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10913_call = mod.get_global_var('func_10913')
func_10915_call = mutated_mod.get_global_var('func_10915')
call_12767 = relay.TupleGetItem(func_10913_call(), 1)
call_12768 = relay.TupleGetItem(func_10915_call(), 1)
output = call_12767
output2 = call_12768
func_12780 = relay.Function([], output)
mod['func_12780'] = func_12780
mod = relay.transform.InferType()(mod)
output = func_12780()
func_12781 = relay.Function([], output)
mutated_mod['func_12781'] = func_12781
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2321_call = mod.get_global_var('func_2321')
func_2323_call = mutated_mod.get_global_var('func_2323')
call_12804 = func_2321_call()
call_12805 = func_2321_call()
func_8768_call = mod.get_global_var('func_8768')
func_8769_call = mutated_mod.get_global_var('func_8769')
call_12815 = relay.TupleGetItem(func_8768_call(), 0)
call_12816 = relay.TupleGetItem(func_8769_call(), 0)
func_2923_call = mod.get_global_var('func_2923')
func_2925_call = mutated_mod.get_global_var('func_2925')
call_12828 = func_2923_call()
call_12829 = func_2923_call()
var_12835 = relay.var("var_12835", dtype = "float64", shape = (15, 16, 4))#candidate|12835|(15, 16, 4)|var|float64
bop_12836 = relay.logical_and(call_12815.astype('bool'), relay.reshape(var_12835.astype('bool'), relay.shape_of(call_12815))) # shape=(15, 16, 4)
bop_12839 = relay.logical_and(call_12816.astype('bool'), relay.reshape(var_12835.astype('bool'), relay.shape_of(call_12816))) # shape=(15, 16, 4)
func_8942_call = mod.get_global_var('func_8942')
func_8943_call = mutated_mod.get_global_var('func_8943')
call_12841 = func_8942_call()
call_12842 = func_8942_call()
output = relay.Tuple([call_12804,call_12828,bop_12836,call_12841,])
output2 = relay.Tuple([call_12805,call_12829,bop_12839,call_12842,])
func_12846 = relay.Function([var_12835,], output)
mod['func_12846'] = func_12846
mod = relay.transform.InferType()(mod)
mutated_mod['func_12846'] = func_12846
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12847 = relay.var("var_12847", dtype = "float64", shape = (15, 16, 4))#candidate|12847|(15, 16, 4)|var|float64
func_12846_call = mutated_mod.get_global_var('func_12846')
call_12848 = func_12846_call(var_12847)
output = call_12848
func_12849 = relay.Function([var_12847], output)
mutated_mod['func_12849'] = func_12849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4350_call = mod.get_global_var('func_4350')
func_4352_call = mutated_mod.get_global_var('func_4352')
call_13046 = relay.TupleGetItem(func_4350_call(), 0)
call_13047 = relay.TupleGetItem(func_4352_call(), 0)
func_7038_call = mod.get_global_var('func_7038')
func_7041_call = mutated_mod.get_global_var('func_7041')
const_13049 = relay.const([-1,3,-9,10,-3,4,-8,-8,6,-3,-1,1,-10,-7,4,-6,-3,6,-5,2,1,-5,-9,-9,8,-2,-2,3,10,9,-1,8,-3,-8,3,8,7,2,6,-3,-7,5,9,-1,7,-4,-6,4,9,10,3,-5,-3,8,-10,6,-7,-7,9,5,2,4,-4,-9,-2,6,-9,8,7,3,-9,7,10,-4,3,-4,-1,-3,7,-9,-1,6,5,1,-2,-9,3,-8,-9,-1,2,-9,4,-9,4,-1,4,-4,-1,-8,1,-3,3,-7,-6,7,2,10,-8,8,-8,6,4,8,6,8,5,-4,-7,-3,9,-10,5,-6,2,4,3,-1,-1,4,-4,7,-8,-10,-1,-7,-2,-1,8,10,3,9,6,-5,-8,8,-1,-3,-7,-3,3,-9,6,2,1,-5,9,-2,-3,-4,4,-3,7,4,-9,2,-7,-9,-3,9,6,-10,-8,-10,9,-10,-5,10,8,-6,2,-9,1,2,-10,9,4,8,4,-3,-1,-8,5,-6,3,-10,-10,-4,8,4,-10,5,-4,6,-1,1,-1,6,-6,-8,6,3,-8,8,6,5,9,-10,3,1,4,-5,2,10,8,6,-6,4,8,10,-6,-10,5,7,3,-3,3,-3,-1,-2,10,5,-1,-8,10,4,4,-2,1,8,-1,-4,-1,9,9,3,3,5,-6,4,-2,-4,4,7,9,-1,8,-7,4,3,1,-3,5,-10,-1,-6,7,-9,-10,-6,2,1,5,-1,6,-2,-1,3,3,6,10,-4,4,5,10,4,1,5,7,-4,-1,2,-1,9,-8,5,9,-4,5,-10,3,8,-1,-9,-9,3,-9,-6,-8,2,2,-6,1,5,-1,2,10,1,2,-10,-5,5,-8,4,-5,-3,-6,-9,9,2,10,-8,-3,-2,9,8,-6,5,3,9,-8,7,9,10,2,10,5,2,4,-2,5,4,4,-3,-1,-7,5,4,1,-4,7,7,-9,-9,-3,6,5,-9,-1,6,-7,4,8,-5,-1,6,-2,-9,3,6,3,4,-3,-6,5,10,-6,1,-10,7,-5,9,-7,8,8,-4,7,-8,-10,7,-10,-5,-9,2,-5,3,1,7,2,-6,1,-1,9,-9,8,4,10,4,-6,-1,5,-10,5,6,5,8,-3,4,-2,3,-8,-10,4,8,-10,2,-4,-6,10,-6,4,-10,-7,-1,7,1,-10,-4,4,-6,-4,2,1,-6,-1,-5,-8,-4,-1,-6,-8,6,7,-4,-3,-5,-9,4,8,8,-2,-2,9,-5,-10,9,-7,8,4,-5,2,-3,-9,-10,6,-6,-2,9,4,-10,-7,6,3,-10,-8,3,4,-1,-4,2,9,-10,-8,-2,5,9,-10,-5,-1,-9,9,8,-9,-10,10,-3,-2,1,2,-2,-5,8,-8,-10,10,-9,-1,-4,-8,3,8,10,-9,-10,2,9,-5,-5,-3,-5,2,4,4,4,-4,-1,-3,4,2,6,-8,-3,5,9,3,-3,-9,-10,6,-5,1,5,-9,-7,-5,-6,7,7,7,9,1,7,-8,-4,-1,5,9,7,10,-10,6,-7,7,-6,-1,6,-7,-5,8,-1,10,-2,-7,4,2,2,2,-2,5,-3,4,-2,10,8,-7,-8,7,4,8,3,4,9,-7,4,10,-2,-5,-5,-2,-5,-4,-7,-3,-6,1,-3,5,2,5,-5,3,9,-2,5,9,-4,-4,-5,4,-10,-1,1,-8,-7,8,10,-9,-9,3,-6,5,7,-3,-6,6,-1,10,-2,-4,3,-2,3,-10,-6,-10,9,-4,-5,-1,-3,7,-3,-5,-7,-5,-1,1,-10,-10,-6,-1,-6,-1,2,-1,8,-9,7,5,5,4,9,-1,8,7,4,1,3,-2,-6,9,1,7,4,-3,4,-4,-3,-9,-10,7,4,-5,-9,-1,-2,-1,10,2,-1,-4,2,-5,-7,-8,-3,-1,2,-4,-5,-10,-5,9,-8,-1,5,4,-5,2,3,9,6,3,-7,3,-1,-10,-3,-2,-9,-1,-2,2,2,-1,6,1,9,-4,-2,-2,-9,9,-9,-4,-8,3,-10,7,-8,6,-6,8,2,6,8,-7,8,10,9,-8,-8,4,5,-9,10,9,-4,-5,-10,2,-9,-6,7,6,9,-2,4,-5,9,-4,-1,7,3,-4,3,2,7,8,-3,1,-8,-8,-10,3,-9,8,-1,3,-7,8,5,3,-5,7,5,9,2,8,-10,-1,8,-7,6,-5,-1,4,-3,9,6,-6,-5,-6,2,-6,5,-3,9,-3,2,-6,3,8,-7,-3,-4,-5,6,3,-7,2,6,-4,5,-10,7,1,-7,5,-9,-6,1,-9,7,9,-1,-6,8,4,1,-2,9,8,6,8,6,-6,9,6,-7,10,5,5,-7,-7,-2,-7,-6,-6,2,8,10,-5,-1,-5,-5,4,-10,-3,9,-7,1,-1,1,-9,-3,-1,3,2,-4,-10,-1,-10,7,-9,-5,9,-2,-5,8,-6,-1,6,2,7,4,-4,4,-7,7,-7,-2,-10,-7,-7,-9,7,-9,-5,10,6,9,-2,-6,-4,-5,-7,7,1,-2,-10,1,-10,-10,-3,7,8,-3,-9,-9,4,-3,-1,10,-4,-10,3,4,4,-10,-8,-8,3,7,2,4,-10,-1,-7,2,-5,-8,4,4,7,6,-9,2,-8,3,-2,8,-1,-2,-9,-4,7,-3,-3,10,8,-5,-2,10,-5,2,7,-1,8,-1,-6,-1,6,-3,-10,-10,10,-7,4,2,10,7,3,-8,-1,-10,-3,-1,5,-7,-8,-3,-4,-9,-8,8,-7,5,-2,3,-5,2,1,8,-7,1,4,2,-4,6,3,10,-8,-2,-2,-4,7,5,-9,-6,-8,10,10,-9,4,-4,7,9,-1,-8,5,9,9,-1,-7,-3,-5,6,-6,8,10,8,-10,-5,-7,3,6,-5,-6,-1,5,-7,-10,4,9,7,7,-9,2,5,8,3,-10,8,7,8,-5,2,9,1,-9,-7,4,3,-9,-7,-8,10,-3,3,-8,-3,7,8,3,-2,-10,1,5,1,-2,-1,-3,8,7,-5,6,8,3,-7,-7,-9,10,-10,3,6,-2,-8,6,-2,-9,10,4,9,3,-6,-7,-9,4,-1,-3,-4,4,3,-8,-4,9,-2,-1,-2,7,9,2,2,-9,7,-9,-8,-3,-4,-5,9,4,9,-4,-2,-1,-6,8,3,8,9,10,-2,-10,5,-7,-9,8,6,3,3,-10,-8,-7,-6,-8,-4,-6,-3,-3,2,-3,-10,-3,2,-6,-7,-4,-5,-6,9,9,4,10,-2,6,-4,6,-9,-10,-4,-8,5,8,4,-2,-7,6,6,7,-10,3,1,8,10,-2,8,-7,-1,-2,6,10,5,-7,4,1,6,-8,3,10,7,8,-2,-6,-10,8,2,-1,3,-10,-1,-1,-4,7,-8,-3,-7,-10,-5,-1,-5,-3,8,6,2,-8,-8,2,-9,-1,6,-2,4,1,8,-6,-3,-2,3,-2,-5,-9,-1,-4,10,5,-9,8,-9,-7,-2,-8,4,-6,7,3,10,4,3,-10,-3,-8,4,-8,-6,7,-7,-3,-6,-9,6,-6,2,-8,8,-9,-4,3,-4,8,5,-7,2,-5,-10,-3,4,5,-7,-2,-10,6,-9,-10,10,-4,5,7,-3,8,-5,-10,-10,7,-5,-2,2,-8,7,-4,8,-1,-9,-10,1,6,9,-6,-10,-6,-2,1,-8,-2,7,-1,-4,-5,1,7,-3,9,-10,1,-8,6,-7,1,-6,-10,1,-5,6,-9,-9,-10,-3,6,-3,-3,6,-8,-4,10,-4,-2,-4,9,1,8,8,2,-6,-3,5,-2,5,8,1,-1,8,9,2,-3,-9,1,-8,9,1,-5,-7,-9,-6,-4,-5,-3,8,-9,3,-3,3,-10,-7,7,10,-6,8,1,-2,-3,10,2,-10,-10,2,-5,-7,8,-3,-2,6,2,-3,9,8,4,10,9,8,-4,3,7,-6,4,7,-4,5,-8,9,-4,9,-6,-8,2,-4,-6,8,9,-8,5,10,-10,-3,1,-6,-8,7,-6,1,-10,-6,6,-2,10,-7,-7,4,1,-6,1,1,6,5,2,-2,5,-9,-4,5,10,8,-8,-5,-10,-3,-2,2,2,-4,5,7,3,-10,-6,10,-6,1,9,-7,8,1,4,-10,1,1,7,8,5,-9,-5,-6,5,9,5,6,5,3,-1,6,-4,-9,-8,-5,7,3,-10,4,-8,3,8,7,7,3,-3,-1,9,-10,-9,9,8,9,-10,-7,-8,2,-10,-1,8,-6,-6,-8,6,-1,4,10,-3,1,-4,2,1,-9,-2,9,-6,-1,-1,-7,-8,2,10,5,3,-7,-6,-10,-4,7,1,5,10,-2,-6,10,9,7,5,5,8,6,2,3,9,1,8,1,-4,1,-2,-6,-2,-4,-7,-7,-10,10,-1,7,3,-1,-4,8,-5,-7,-9,-10,8,-8,-3,-1,-9,7,4,-1,-2,5,-7,3,2,-1,-7,-2,4,-1,6,-2,-10,5,4,10,-8,-1,10,9,6,-2,8,7,5,-1,-9,-4,-3,-5,-2,-5,2,9,10,1,-5,-10,-9,7,6,-3,-4,-5,5,-5,5,-9,-6,6,-6,3,-1,4,-9,-2,-10,1,1,10,6,-2,5,-7,-2,6,-1,9,1,2,6,-6,-10,-10,-3,-8,8,-9,5,-6,8,-7,1,2,9,4,1,-2,7,3,-6,6,-5,9,-10,9,6,-8,1,-1,-8,-6,4,-10,-1,10,8,-1,10,2,-6,-7,-6,9,9,-10,4,-3,-5,9,10,5,-5,10,10,-5,-5,-9,1,8,10,4,5,2,4,8,-3,1,-1,5,-5,6,-7,10,-2,8,6,6,3,1,-3,1,-4,-6,-5,6,5,9,8,-2,8,4,1,-7,-10,-2,-9,-1,-7,-8,1,-4,8,10,1,-8,-9,-2,4,7,-10,-9,1,-2,10,-3,-5,-9,8,-1,-1,-9,3,3,3,-3,8,-1,-5,-7,4,6,-7,-4,-4,8,-6,-6,-8,-8,8,1,-5,-4,7,3,-3,1,-6,9,-10,5,-1,4,-3,-10,4,-8,-6,-7,-6,-4,-3,-3,10,9,8,-7,-7,10,-3,-1,-4,6,-1,-2,-7,-8,-3,-7,4,4,-10,-2,-4,-8,-5,-6,10,-10,8,10,10,6,-10,6,-9,-5,-3,-7,-1,4,4,6,1,-4,8,4,3,-1,3,8,-2,-4,-2,-10,7,-9,-3,6,-1,-4,-6,6,10,-6,-7,-6,9,-1,-2,4,-6,-2,-7,6,-9,-6,-1,-8,-10,-6,7,5,4,7,-1,-7,5,8,10,-2,8,-5,10,2,6,-6,-9,-10,-9,3,7,6,1,-4,10,9,-3,7,-8,3,6,-8,2,-2,-5,10,-4,6,2,4,7,2,-8,3,-9,-7,-6,1,-2,-1,-7,3,-7,7,-10,-3,-4,4,3,5,4,8,8,-1,4,9,3,3,10,1,-10,-4,-9,-4,8,4,-3,5,2,10,-8,-7,3,-10,9,1,-8,-4,7,-9,9,-8,-6,2,1,-5,-2,-9,-4,8,-2,5,-7,-7,8,9,9,-10,2,-6,5,-1,4,4,1,-3,4,-5,6,-3,-5,-4,10,1,7,7,9,-2,10,-2,9,-7,1,2,-1,-4,7,-3,3,9,1,3,-5,-2,-1,7,-10,-5,-4,10,1,-4,-3,7], dtype = "int64")#candidate|13049|(2160,)|const|int64
call_13048 = relay.TupleGetItem(func_7038_call(relay.reshape(const_13049.astype('int64'), [60, 36])), 1)
call_13050 = relay.TupleGetItem(func_7041_call(relay.reshape(const_13049.astype('int64'), [60, 36])), 1)
func_2212_call = mod.get_global_var('func_2212')
func_2213_call = mutated_mod.get_global_var('func_2213')
call_13052 = relay.TupleGetItem(func_2212_call(), 1)
call_13053 = relay.TupleGetItem(func_2213_call(), 1)
func_6488_call = mod.get_global_var('func_6488')
func_6490_call = mutated_mod.get_global_var('func_6490')
call_13067 = relay.TupleGetItem(func_6488_call(), 0)
call_13068 = relay.TupleGetItem(func_6490_call(), 0)
func_6545_call = mod.get_global_var('func_6545')
func_6547_call = mutated_mod.get_global_var('func_6547')
const_13083 = relay.const([False,True,True,False,False,True,False,False,True,True,True,True,False,True,False,False,False,False,False,False,False,True,True,True,True,False,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,False,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,False,True,True,False,False,False,True,False,False,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,True,True,False,False,False,True,True,False,True,False,True,True,False,True,True,True,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,False,False,True,True,False,False,True,True,True,False,False,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,True,True,False,False,False,False,True,True,True,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,True,True,False,False,False,False,False,False,False,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,True,False,True,False,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,False,False,False,False,True,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,True,False,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,False,False,True,True,False,False,False,True,False,False,False,False,False,False,True,False,True,True,True,False,True,False,False,False,True,True,False,True,False,False,False,False,True,True,True,True,True,True,False,True,True,True,True,True,True,False,True,False,False,False,True,True,True,True,False,False,True,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,True,True,False,False,False,False,False,True,True,True,False,True,True,False,False,True,True,True,False,False,False,True,False,False,False,True,False,False,True,False,False,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,True,True,False,True,True,False,False,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,True,True,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,False,True,False,True,False,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,False,False,True,True,False,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,False,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,True,True,True,True,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,False,False,True,True,False,False,False,False,True,True,True,False,False,True,False,False,True,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,True,True,True,True,False,True,True,True,True,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,True,False,True,True,False,True,False,True,False,True,False,False,False,False,True,True,True,True,True,False,True,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,True,True,False,True,True,False,False,True,True,False,False,False,True,False,True,True,False,False,True,True,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,False,False,False,True,False,False,False,False,True,False,True,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,False,False,True,True,True,True,False,True,True,False,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,True,False,True,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,False,False,False,False,True,True,False,True,False,False,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,True,True,True,True,True,True,False,False,False,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,False,True,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,True,False,False,True,False,False,True,True,True,True,False,True,True,False,True,False,False,True,False], dtype = "bool")#candidate|13083|(1183,)|const|bool
call_13082 = relay.TupleGetItem(func_6545_call(relay.reshape(const_13083.astype('bool'), [1183,])), 2)
call_13084 = relay.TupleGetItem(func_6547_call(relay.reshape(const_13083.astype('bool'), [1183,])), 2)
output = relay.Tuple([call_13046,call_13048,const_13049,call_13052,call_13067,call_13082,const_13083,])
output2 = relay.Tuple([call_13047,call_13050,const_13049,call_13053,call_13068,call_13084,const_13083,])
func_13087 = relay.Function([], output)
mod['func_13087'] = func_13087
mod = relay.transform.InferType()(mod)
output = func_13087()
func_13088 = relay.Function([], output)
mutated_mod['func_13088'] = func_13088
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7652_call = mod.get_global_var('func_7652')
func_7653_call = mutated_mod.get_global_var('func_7653')
call_13134 = relay.TupleGetItem(func_7652_call(), 1)
call_13135 = relay.TupleGetItem(func_7653_call(), 1)
func_1673_call = mod.get_global_var('func_1673')
func_1674_call = mutated_mod.get_global_var('func_1674')
call_13150 = relay.TupleGetItem(func_1673_call(), 0)
call_13151 = relay.TupleGetItem(func_1674_call(), 0)
func_3565_call = mod.get_global_var('func_3565')
func_3567_call = mutated_mod.get_global_var('func_3567')
call_13160 = relay.TupleGetItem(func_3565_call(), 1)
call_13161 = relay.TupleGetItem(func_3567_call(), 1)
output = relay.Tuple([call_13134,call_13150,call_13160,])
output2 = relay.Tuple([call_13135,call_13151,call_13161,])
func_13167 = relay.Function([], output)
mod['func_13167'] = func_13167
mod = relay.transform.InferType()(mod)
mutated_mod['func_13167'] = func_13167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13167_call = mutated_mod.get_global_var('func_13167')
call_13168 = func_13167_call()
output = call_13168
func_13169 = relay.Function([], output)
mutated_mod['func_13169'] = func_13169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5571_call = mod.get_global_var('func_5571')
func_5572_call = mutated_mod.get_global_var('func_5572')
call_13205 = relay.TupleGetItem(func_5571_call(), 1)
call_13206 = relay.TupleGetItem(func_5572_call(), 1)
func_9026_call = mod.get_global_var('func_9026')
func_9027_call = mutated_mod.get_global_var('func_9027')
call_13218 = relay.TupleGetItem(func_9026_call(), 0)
call_13219 = relay.TupleGetItem(func_9027_call(), 0)
uop_13235 = relay.asin(call_13218.astype('float64')) # shape=(7, 1, 12)
uop_13237 = relay.asin(call_13219.astype('float64')) # shape=(7, 1, 12)
func_3377_call = mod.get_global_var('func_3377')
func_3379_call = mutated_mod.get_global_var('func_3379')
call_13241 = relay.TupleGetItem(func_3377_call(), 1)
call_13242 = relay.TupleGetItem(func_3379_call(), 1)
func_4317_call = mod.get_global_var('func_4317')
func_4318_call = mutated_mod.get_global_var('func_4318')
call_13261 = func_4317_call()
call_13262 = func_4317_call()
output = relay.Tuple([call_13205,uop_13235,call_13241,call_13261,])
output2 = relay.Tuple([call_13206,uop_13237,call_13242,call_13262,])
func_13283 = relay.Function([], output)
mod['func_13283'] = func_13283
mod = relay.transform.InferType()(mod)
mutated_mod['func_13283'] = func_13283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13283_call = mutated_mod.get_global_var('func_13283')
call_13284 = func_13283_call()
output = call_13284
func_13285 = relay.Function([], output)
mutated_mod['func_13285'] = func_13285
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3261_call = mod.get_global_var('func_3261')
func_3263_call = mutated_mod.get_global_var('func_3263')
call_13338 = relay.TupleGetItem(func_3261_call(), 1)
call_13339 = relay.TupleGetItem(func_3263_call(), 1)
func_6136_call = mod.get_global_var('func_6136')
func_6138_call = mutated_mod.get_global_var('func_6138')
call_13340 = relay.TupleGetItem(func_6136_call(), 2)
call_13341 = relay.TupleGetItem(func_6138_call(), 2)
output = relay.Tuple([call_13338,call_13340,])
output2 = relay.Tuple([call_13339,call_13341,])
func_13371 = relay.Function([], output)
mod['func_13371'] = func_13371
mod = relay.transform.InferType()(mod)
mutated_mod['func_13371'] = func_13371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13371_call = mutated_mod.get_global_var('func_13371')
call_13372 = func_13371_call()
output = call_13372
func_13373 = relay.Function([], output)
mutated_mod['func_13373'] = func_13373
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13404 = relay.var("var_13404", dtype = "uint64", shape = (11, 14, 9))#candidate|13404|(11, 14, 9)|var|uint64
var_13405 = relay.var("var_13405", dtype = "uint64", shape = (11, 14, 9))#candidate|13405|(11, 14, 9)|var|uint64
bop_13406 = relay.bitwise_or(var_13404.astype('uint64'), relay.reshape(var_13405.astype('uint64'), relay.shape_of(var_13404))) # shape=(11, 14, 9)
uop_13411 = relay.exp(bop_13406.astype('float64')) # shape=(11, 14, 9)
output = relay.Tuple([uop_13411,])
output2 = relay.Tuple([uop_13411,])
func_13416 = relay.Function([var_13404,var_13405,], output)
mod['func_13416'] = func_13416
mod = relay.transform.InferType()(mod)
mutated_mod['func_13416'] = func_13416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13416_call = mutated_mod.get_global_var('func_13416')
var_13418 = relay.var("var_13418", dtype = "uint64", shape = (11, 14, 9))#candidate|13418|(11, 14, 9)|var|uint64
var_13419 = relay.var("var_13419", dtype = "uint64", shape = (11, 14, 9))#candidate|13419|(11, 14, 9)|var|uint64
call_13417 = func_13416_call(var_13418,var_13419,)
output = call_13417
func_13420 = relay.Function([var_13418,var_13419,], output)
mutated_mod['func_13420'] = func_13420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4697_call = mod.get_global_var('func_4697')
func_4699_call = mutated_mod.get_global_var('func_4699')
call_13434 = relay.TupleGetItem(func_4697_call(), 0)
call_13435 = relay.TupleGetItem(func_4699_call(), 0)
uop_13441 = relay.sigmoid(call_13434.astype('float32')) # shape=(1, 1232)
uop_13443 = relay.sigmoid(call_13435.astype('float32')) # shape=(1, 1232)
output = uop_13441
output2 = uop_13443
func_13452 = relay.Function([], output)
mod['func_13452'] = func_13452
mod = relay.transform.InferType()(mod)
mutated_mod['func_13452'] = func_13452
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13452_call = mutated_mod.get_global_var('func_13452')
call_13453 = func_13452_call()
output = call_13453
func_13454 = relay.Function([], output)
mutated_mod['func_13454'] = func_13454
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6948_call = mod.get_global_var('func_6948')
func_6950_call = mutated_mod.get_global_var('func_6950')
call_13472 = relay.TupleGetItem(func_6948_call(), 1)
call_13473 = relay.TupleGetItem(func_6950_call(), 1)
output = call_13472
output2 = call_13473
func_13486 = relay.Function([], output)
mod['func_13486'] = func_13486
mod = relay.transform.InferType()(mod)
output = func_13486()
func_13487 = relay.Function([], output)
mutated_mod['func_13487'] = func_13487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3026_call = mod.get_global_var('func_3026')
func_3027_call = mutated_mod.get_global_var('func_3027')
call_13488 = relay.TupleGetItem(func_3026_call(), 0)
call_13489 = relay.TupleGetItem(func_3027_call(), 0)
output = relay.Tuple([call_13488,])
output2 = relay.Tuple([call_13489,])
func_13500 = relay.Function([], output)
mod['func_13500'] = func_13500
mod = relay.transform.InferType()(mod)
mutated_mod['func_13500'] = func_13500
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13500_call = mutated_mod.get_global_var('func_13500')
call_13501 = func_13500_call()
output = call_13501
func_13502 = relay.Function([], output)
mutated_mod['func_13502'] = func_13502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8578_call = mod.get_global_var('func_8578')
func_8580_call = mutated_mod.get_global_var('func_8580')
call_13508 = relay.TupleGetItem(func_8578_call(), 1)
call_13509 = relay.TupleGetItem(func_8580_call(), 1)
func_12268_call = mod.get_global_var('func_12268')
func_12269_call = mutated_mod.get_global_var('func_12269')
call_13531 = func_12268_call()
call_13532 = func_12268_call()
func_5571_call = mod.get_global_var('func_5571')
func_5572_call = mutated_mod.get_global_var('func_5572')
call_13543 = relay.TupleGetItem(func_5571_call(), 1)
call_13544 = relay.TupleGetItem(func_5572_call(), 1)
func_1823_call = mod.get_global_var('func_1823')
func_1825_call = mutated_mod.get_global_var('func_1825')
const_13558 = relay.const([-6.946899,-4.658298,4.345764,9.110537,1.408884,4.659971,7.642705,-2.935625,-3.463839,-7.767454,3.183369,-0.086334,-5.007564,9.721676,9.198723,4.088911,6.941207,5.211183,4.292489,-6.591419,2.730326,9.997081,5.127014,-8.315319,8.243877,-0.887267,-9.578697,-5.029050,-6.471713,-7.201460,-5.660789,6.976255,1.794858,-6.101490,2.300779,-1.720147,-3.279797,-7.604933,9.137340,0.807867,8.124377,-7.868844,9.669044,9.284132,-8.771803,8.407604,4.176298,-8.813786,4.256097,2.635068,-9.507605,-3.710441,2.424415,-7.901165,4.199117,3.061513,8.606234,0.401845,-6.136208,-8.943188,-2.317860,0.803546,6.482471,6.579582,-7.600922,9.037048,-4.772158,5.186015,-5.190782,-4.767601,-6.788711,0.933044,6.952197,-1.743044,1.682635,9.266612,-3.745337,2.604066,-9.988634,-2.505300,-5.315266,1.754620,8.374778,-6.534127,9.773051,-3.555350,1.376233,5.669571,-9.102239,-2.723218,4.648855,8.066573,2.844072,5.954725,0.468393,-1.569817,8.055850,-1.187748,9.565110,8.367683,-7.006021,-9.388502,8.089501,-2.358926,5.351371,8.357891,-6.622488,-6.798009,4.064096,-8.428713,3.741540,-3.829860,-9.931917,-8.248938,-3.016864,-5.713248,4.707050,-4.520812,5.989598,-0.278126,4.842214,2.989658,-7.778914,7.666384,1.972285,3.835315,4.623778,6.998548,-2.590134,0.510003,3.497544,4.919026,-5.796833,8.863026,3.769453,-1.639499,6.420044,-7.481413,6.493727,-0.399319,7.737642,4.140124,7.577231,7.148849,-2.102819,-3.325235,-9.467589,-7.792411,8.173765,-0.429812,3.592381,-1.425235,-3.212687,7.770707,-8.310534,-1.950920,5.782292,-9.773040,0.834133,-6.808128,-5.702497,3.193616,1.559083,3.492040,-5.211581,8.404092,-9.807605,-5.381640,-1.012746,-3.369365,2.996460,3.307543,0.769358,-4.821662,4.070659,-9.612481,7.080816,-2.981074,-4.207057,-5.400989,-7.720049,-3.184063,0.276966,6.664056,-1.928747,-2.040912,0.282281,-6.011621,-4.970324,8.236409,-4.649312,8.621884,7.950043,-0.965013,-4.131966,-0.702819,-7.014497,4.857960,-0.041698,5.330169,1.237601,-1.249929,1.273887,0.921778,1.549784,1.999191,-2.983511,-8.963662,5.269782,0.169017,6.282535,-0.439544,5.971596,7.145423,-0.791808,-9.372656,-6.184595,-7.619458,-4.397285,7.578077,-4.144656,5.530818,-1.496689,4.013366,-7.687063,3.541223,-0.878706,6.349202,7.650947,9.684167,2.401887,1.065142,7.551546,-7.197199,4.010254,4.034559,-8.137034,8.532151,-8.669452,-0.247361,6.034189,-6.772477,9.277592,4.199102,-4.785353,1.781774,7.007687,-2.386456,-5.860830,-4.512268,-9.873426,-4.583417,-7.530478,4.920712,-6.150173,6.750872,0.786492,7.754831,1.161798,-0.126192,-2.187454,7.139464,-8.980168,-5.884117,-3.879246,1.876479,-3.203075,-0.435103,5.988888,-0.187091,3.580333,3.317050,0.221183,-2.284959,-8.986344,3.033394,-3.949841,-6.515358,-4.285867,8.242189,3.862475,1.489031,-8.854991,-5.229270,-6.006959,5.598687,-1.850364,-3.146292,-3.962396,-0.559772,4.962927,9.380456,-2.293014,3.805923,-5.070061,-9.274710,4.556424,9.897014,3.353540,8.966562,-4.548760,7.070654,7.284899,8.259212,-8.005377,-2.707396,4.665712,7.201025,2.577522,-6.974412,-1.289059,9.466705,-6.109211,7.871054,-3.802345,7.194357,-9.576919,4.351036,1.777216,1.287527,-7.675915,7.241111,8.551914,-6.992333,9.121527,-7.004263,2.072376,0.148089,-6.207671,1.864866,7.702200,-2.700674,3.839080,-6.115536,-7.847787,8.012602,7.060294,-1.437308,8.339066,-5.456153,2.309593,-7.814660,-1.441343,-6.776007,6.166621,-3.536292,0.125032,-9.077696,-0.662426,7.890446,-1.269418,-6.003128,8.737316,-2.068082,0.736249,-6.520377,7.689346,9.643203,-6.199262,-2.559842,5.641655,8.552677,7.753825,4.433060,-4.993693,-1.153479,0.462653,-7.702301,0.338860,-3.531278,9.692741,1.108132,2.144466,9.240699,2.225302,2.742362,-3.431263,3.281837,-9.341266,4.196910,3.042300,1.418367,-8.371263,0.237916,-0.550348,-8.275183,-5.707271,-3.107803,-7.726923,-2.948312,-7.680632,-6.881138,-1.458016,-9.029078,9.193486,2.237254,-8.236998,7.839313,-1.311302,-6.236162,-8.628952,1.612969,0.164775,0.109181,4.279214,1.127011,6.931096,-5.538110,8.955692,3.700114,-4.596660,7.476022,7.888439,-8.212244,0.932295,8.276316,1.713644,7.439831,-7.518457,8.865200,-9.116333,9.020014,-0.712796,3.073436,3.386848,-0.949926,0.892645,-2.878579,2.763492,-7.192227,1.608926,-1.401196,-0.956653,6.421850,-0.951842,-9.090923,6.298951,3.479814,7.804379,6.379464,6.435874,0.174867,7.330472,9.391627,-4.513618,-1.361153,0.895736,-7.115313,-0.499682,5.049558,-2.122171,9.388845,7.763955,-5.597079,5.113136,5.155631,1.332967,7.084964,-1.716738,9.920184,-3.707790,4.333715,3.560429,-4.829319,7.938914,-3.180318,8.589811,-3.307521,-8.325122,-8.691613,-5.237778,-5.012501,-2.899093,5.745624,1.232326,8.205888,-7.128509,7.693603,-2.540383,4.354997,9.899574,-8.023073,5.802488,-8.643758,0.863989,1.019512,-4.639044,3.580425,6.026278,-7.148765,-7.945863,-3.374399,-3.381356,-4.260462,1.155605,-2.090905,8.536668,-5.818607,0.757296,2.022096,1.504859,3.262133,-9.782506,-7.463174,4.777344,-5.483854,-9.926397,-2.404749,7.813051,8.322930,-9.580111,0.632901,-5.954492,-3.975414,-7.312132,-7.812738,-8.440141,-7.729161,2.957019,-6.947648,2.580715,-5.941931,0.566845,-7.332948,1.563175,-8.645440,3.494130,9.020682,3.739412,-1.626995,3.457892,6.227015,-9.460939,9.764310,-9.553843,-1.523240,-8.720609,7.605786,4.484139,-4.618536,9.032267,-6.214216,7.457765,9.551720,2.580555,-5.892399,-4.270037,-2.871528,1.506509,-9.958444,3.180872,0.242713,7.205835,1.388661,-2.549383,8.764135,-9.760249,5.673237,-0.887281,-0.143493,-2.868978,-4.234417,-9.538759,7.939151,-1.869573,4.196739,-8.452607,-9.024731,6.622058,-2.293172,0.622035,-9.510549,2.966330,4.348537,-2.028913,8.751164,4.149431,2.040064,-8.932577,5.974564,3.533851,-6.968159,-4.829701,8.724024,-8.864211,9.039934,-5.860729,-8.393528,1.822849,4.688903,3.792053,-1.184760,-7.064207,9.990005,-0.827431,-8.202652,5.128314,1.594837,1.558492,-1.988557,-1.462632,9.499188,7.683198,-1.731507,-4.076729,-5.173657,-6.171103,-3.016988,-1.715020,8.001395,-1.621555,-2.235071,-5.631981,3.819998,3.718741,-4.788827,-5.122322,-0.364703,7.709872,-2.278017,-4.603752,2.381289,-5.595501,8.053017,6.171078,6.325788,-8.581130,-4.055470,-2.036673,-5.934822,7.456030,7.011902,1.239363,2.110672,9.690736,-8.070800,-2.677325,-8.739863,2.676119,0.268281,4.387657,-3.172577,8.690987,-5.961608,2.027473,9.132402,7.350585,-2.854865,-8.774768,2.760726,3.278647,0.199952,-6.766267,-3.283513,7.039902,-0.387638,1.716101,9.413653,3.230795,-9.158662,-0.470021,3.274983,-9.847272,-1.422661,2.757365,-5.675900,2.694529,-4.382999,-4.668563,3.957590,4.550354,-6.518164,1.031772,0.697338,2.032734,5.987060,3.221317,-6.106912,-8.013839,-3.256656,-2.509029,-0.957017,-4.662134,6.897491,-0.522215,-0.410392,1.254701,-4.278646,-4.302675,9.547388,5.821977,-8.352045,-8.761490,-9.530426,3.748879,-7.372235,-6.998491,-6.054526,-8.600405,3.174897,-8.289247,-5.254702,-1.671506,-6.287269,-4.603259,-5.994971,-1.680019,-5.050875,4.110033,8.483696,2.169741,6.422936,2.864529,-3.473018,1.136629,-3.673794,9.967061,1.668571,6.418850,1.927876,-6.307704,0.211777,-0.747412,2.053906,-4.800702,-0.191384,-4.462108,4.441222,3.164033,8.312516,6.445491,0.038018,-1.203694,-1.453877,-3.527439,2.576011,-1.182913,-4.297274,-5.361371,-8.144796,-1.230032,-5.304453,-1.905404,-0.907636,1.205360,7.941978,7.274207,-4.635766,3.005280,4.077409,-0.294597,-4.157431,8.012846,1.528590,-1.836706,2.668251,-6.465766,-3.117356,2.957748,9.327949,-9.096607,-1.579262,6.136619,-2.043462,2.155127,-4.583112,-6.194710,-5.992280,9.684321,-9.681454,-4.377598,4.062497,5.623907,7.423608,-2.088180,-9.136335,9.343744,7.996915,1.450363,-6.012622,6.700482,-2.073092,0.938152,-8.495821,-9.775979,4.029963,-2.284626,5.105374,-6.446193,-7.066666,2.834868,7.345493,6.325288,3.183153,-8.637447,-7.822349,6.089736,-5.804492,9.060460,3.287954,8.134027,-2.730348,4.751592,1.644900,2.206552,6.358168,-3.629524,8.017747,8.679679,-3.934467,-7.514960,3.843929,9.922722,1.425314,-7.946735,-5.116631,4.995860,2.229080,5.318167,-2.830117,4.185922,8.925205,-2.765773,4.383175,-2.058723,-6.726977,-9.960331,-9.088268,5.378001,0.505623,-3.117509,3.600013,-1.571799,5.703027,0.615739,-0.469120,4.162122,5.426292,9.554372,7.085289,-2.539646,-1.358327,0.053138,9.993483,-6.756775,7.021756,-6.489658,-6.745006,5.725370,-0.936407,3.395975,9.575585,2.517925,9.598563,-4.375473,-8.763292,-6.929530,2.625371,9.780686,-4.571245,3.791083,-7.617047,-2.676485,5.831556,-7.779895,-3.884083,-3.467778,-4.974128,-4.755409,-7.588113,-0.755675,-6.745301,-8.004925,5.646791,-5.969355,6.859676,9.331401,9.717793,9.705457,8.394530,3.394280,4.523693,-0.882149,7.688548,2.410447,4.935702,-2.676665,-0.891548,4.622844,-6.461467,8.016939,-1.915525,7.812842,-5.773844,-8.450936,2.905764,-4.211114,3.520253,-7.403117,8.717502,0.171112,-4.872214,-6.536182,-9.138295,-0.230976,4.654320,-4.983552,-0.862775,-4.032428,-9.136761,-5.074056,-2.396733,9.780192,7.598831,-0.747579,3.708589,4.994951,7.026968,9.097726,-2.353409,-5.481753,8.628331,2.815122,-7.812537,5.525341,-8.950044,-4.209066,-0.343933,-6.487196,-4.395830,-9.654714,-4.879181,8.572873,-7.832028,2.245783,-9.776677,-6.144090,4.975656,2.118450,5.215376,-8.879851,-4.742752,-0.302919,-2.526732,3.718208,7.690437,0.972068,3.761401,5.662231,8.002631,-6.002540,-7.836315,7.409368,-9.319688,-0.876712,5.467448,4.248565,8.059379,-6.349553,9.039409,-1.234809,-2.600660,-7.898338,-7.264681,1.423758,1.447858,1.460559,-5.124907,1.935896,1.945579,7.358213,-0.408179,2.511606,-8.296719,-3.650536,7.847244,8.727179,-6.789124,4.706904,1.935613,-7.500567,0.238432,2.127584,-3.651893,-2.091353,-3.235024,6.770248,0.489346,-5.974970,-6.030389,5.163254,-1.453758,5.691384,-6.360022,8.608083,0.398237,-2.681998,-5.641400,9.073840,-4.359635,-9.222866,4.047781,-8.194918,-7.693069,-7.927592,8.198960,-2.819062,-9.499698,-1.204796,2.347029,6.976512,6.469410,0.825428,4.489599,-2.598018,-3.994347,-6.004732,-5.879123,-3.976910,7.049988,-4.844009,-1.213418,-3.355528,-3.364421,-2.908937,0.470085,6.748798,8.938860,-1.301928,6.476441,2.712066,9.621802,6.262758,-6.671915,5.485382,-1.349533,-2.252628,-0.768715,-0.346635,3.348140,-1.637624,-4.907308,6.815678,-3.734538,-8.944935,-2.244126,-1.691827,5.931686,-2.809816,9.502713,4.128984,4.594649,9.712383,6.796629,-1.450724,-1.402949,9.504468,-9.830566,-3.054095,-0.551957,-5.271299,-6.154499,-8.023117,-9.864541,7.855432,-9.914980,-6.232816,-9.032988,-0.289150,9.426081,-6.293537,3.564628,-0.968579,-5.688150,6.589339,0.255732,-6.647442,-1.220932,1.449092,6.149446,-8.866377,0.843117,7.347720,-5.956454,9.702785,-5.247707,3.798193,1.157659,-3.831719,8.427460,-3.546348,8.671291,-1.615344,-3.237001,4.758001,8.661509,5.200723,-0.353117,-8.687046,-6.406951,-0.487155,-4.805845,9.109734,3.331442,7.457246,0.449931,4.749643,-6.671016,-9.765254,2.919134,-3.406961,7.011894,2.679925,-8.187187,1.371436,-7.432191,-7.496922,1.093046,-1.813748,0.581534,2.344602,-7.792522,3.567946,1.698935,4.578579,1.312180,5.180640,8.039235,-8.131529,-0.858080,5.728457,8.865647,5.798134,2.970708,1.063017,-7.317172,6.702542,6.244168,7.863196,-7.506829,3.238505,4.589651,-6.813600,-4.995888,-7.540818,-4.235331,7.826676,9.871204,1.334959,-7.874218,7.309740,3.011669,7.467128,-8.703530,4.040000,9.421952,-5.797915,2.518516,-8.909041,-2.070561,5.595082,-1.714559,-8.766723,8.096891,-5.283332,5.198361,-7.886885,-7.119072,2.252306,1.239806,5.682169,-9.239565,5.611845,-8.417027,9.262700,-9.509984,-8.039226,2.195214,0.150930,-7.436879,-6.097410,5.201021,-1.210098,4.839535,-2.707197,6.963253,7.234748,-9.324540,8.036152,-6.261586,1.925050,5.964390,2.127268,-8.168547,-0.348731,-1.737157,-3.731391,8.450092,6.825286,0.965300,0.890882,2.516667,-1.988383,1.685157,9.560732,-1.197020,5.076908,-3.557546,-7.206082,3.022173,6.679319,1.019466,2.074620,-9.695143,2.355066,8.351525,-3.495718,-6.021832,-4.268312,1.198465,6.191649,-6.622476,6.639896,-8.628524,6.239190,-6.954865,2.536082,2.941376,6.051610,-3.424190,1.477781,2.723059], dtype = "float32")#candidate|13558|(1232,)|const|float32
call_13557 = relay.TupleGetItem(func_1823_call(relay.reshape(const_13558.astype('float32'), [1232,])), 1)
call_13559 = relay.TupleGetItem(func_1825_call(relay.reshape(const_13558.astype('float32'), [1232,])), 1)
func_9625_call = mod.get_global_var('func_9625')
func_9627_call = mutated_mod.get_global_var('func_9627')
call_13564 = func_9625_call()
call_13565 = func_9625_call()
func_12071_call = mod.get_global_var('func_12071')
func_12072_call = mutated_mod.get_global_var('func_12072')
call_13580 = relay.TupleGetItem(func_12071_call(), 0)
call_13581 = relay.TupleGetItem(func_12072_call(), 0)
func_8847_call = mod.get_global_var('func_8847')
func_8848_call = mutated_mod.get_global_var('func_8848')
call_13582 = func_8847_call()
call_13583 = func_8847_call()
output = relay.Tuple([call_13508,call_13531,call_13543,call_13557,const_13558,call_13564,call_13580,call_13582,])
output2 = relay.Tuple([call_13509,call_13532,call_13544,call_13559,const_13558,call_13565,call_13581,call_13583,])
func_13600 = relay.Function([], output)
mod['func_13600'] = func_13600
mod = relay.transform.InferType()(mod)
mutated_mod['func_13600'] = func_13600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13600_call = mutated_mod.get_global_var('func_13600')
call_13601 = func_13600_call()
output = call_13601
func_13602 = relay.Function([], output)
mutated_mod['func_13602'] = func_13602
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13608 = relay.var("var_13608", dtype = "int8", shape = (2, 1, 16))#candidate|13608|(2, 1, 16)|var|int8
var_13609 = relay.var("var_13609", dtype = "int8", shape = (2, 1, 16))#candidate|13609|(2, 1, 16)|var|int8
bop_13610 = relay.bitwise_or(var_13608.astype('int8'), relay.reshape(var_13609.astype('int8'), relay.shape_of(var_13608))) # shape=(2, 1, 16)
func_9308_call = mod.get_global_var('func_9308')
func_9310_call = mutated_mod.get_global_var('func_9310')
call_13617 = func_9308_call()
call_13618 = func_9308_call()
output = relay.Tuple([bop_13610,call_13617,])
output2 = relay.Tuple([bop_13610,call_13618,])
func_13630 = relay.Function([var_13608,var_13609,], output)
mod['func_13630'] = func_13630
mod = relay.transform.InferType()(mod)
var_13631 = relay.var("var_13631", dtype = "int8", shape = (2, 1, 16))#candidate|13631|(2, 1, 16)|var|int8
var_13632 = relay.var("var_13632", dtype = "int8", shape = (2, 1, 16))#candidate|13632|(2, 1, 16)|var|int8
output = func_13630(var_13631,var_13632,)
func_13633 = relay.Function([var_13631,var_13632,], output)
mutated_mod['func_13633'] = func_13633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6038_call = mod.get_global_var('func_6038')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_13691 = relay.TupleGetItem(func_6038_call(), 0)
call_13692 = relay.TupleGetItem(func_6040_call(), 0)
func_4480_call = mod.get_global_var('func_4480')
func_4482_call = mutated_mod.get_global_var('func_4482')
var_13727 = relay.var("var_13727", dtype = "float32", shape = (429,))#candidate|13727|(429,)|var|float32
call_13726 = relay.TupleGetItem(func_4480_call(relay.reshape(var_13727.astype('float32'), [13, 11, 3])), 0)
call_13728 = relay.TupleGetItem(func_4482_call(relay.reshape(var_13727.astype('float32'), [13, 11, 3])), 0)
bop_13747 = relay.logical_and(var_13727.astype('bool'), relay.reshape(call_13726.astype('bool'), relay.shape_of(var_13727))) # shape=(429,)
bop_13750 = relay.logical_and(var_13727.astype('bool'), relay.reshape(call_13728.astype('bool'), relay.shape_of(var_13727))) # shape=(429,)
bop_13756 = relay.add(call_13726.astype('int32'), relay.reshape(var_13727.astype('int32'), relay.shape_of(call_13726))) # shape=(13, 11, 3)
bop_13759 = relay.add(call_13728.astype('int32'), relay.reshape(var_13727.astype('int32'), relay.shape_of(call_13728))) # shape=(13, 11, 3)
output = relay.Tuple([call_13691,bop_13747,bop_13756,])
output2 = relay.Tuple([call_13692,bop_13750,bop_13759,])
func_13763 = relay.Function([var_13727,], output)
mod['func_13763'] = func_13763
mod = relay.transform.InferType()(mod)
mutated_mod['func_13763'] = func_13763
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13764 = relay.var("var_13764", dtype = "float32", shape = (429,))#candidate|13764|(429,)|var|float32
func_13763_call = mutated_mod.get_global_var('func_13763')
call_13765 = func_13763_call(var_13764)
output = call_13765
func_13766 = relay.Function([var_13764], output)
mutated_mod['func_13766'] = func_13766
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8352_call = mod.get_global_var('func_8352')
func_8354_call = mutated_mod.get_global_var('func_8354')
call_13862 = relay.TupleGetItem(func_8352_call(), 0)
call_13863 = relay.TupleGetItem(func_8354_call(), 0)
output = relay.Tuple([call_13862,])
output2 = relay.Tuple([call_13863,])
func_13875 = relay.Function([], output)
mod['func_13875'] = func_13875
mod = relay.transform.InferType()(mod)
output = func_13875()
func_13876 = relay.Function([], output)
mutated_mod['func_13876'] = func_13876
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11343_call = mod.get_global_var('func_11343')
func_11344_call = mutated_mod.get_global_var('func_11344')
call_13916 = relay.TupleGetItem(func_11343_call(), 4)
call_13917 = relay.TupleGetItem(func_11344_call(), 4)
output = call_13916
output2 = call_13917
func_13926 = relay.Function([], output)
mod['func_13926'] = func_13926
mod = relay.transform.InferType()(mod)
mutated_mod['func_13926'] = func_13926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13926_call = mutated_mod.get_global_var('func_13926')
call_13927 = func_13926_call()
output = call_13927
func_13928 = relay.Function([], output)
mutated_mod['func_13928'] = func_13928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3710_call = mod.get_global_var('func_3710')
func_3712_call = mutated_mod.get_global_var('func_3712')
call_13946 = func_3710_call()
call_13947 = func_3710_call()
output = call_13946
output2 = call_13947
func_13958 = relay.Function([], output)
mod['func_13958'] = func_13958
mod = relay.transform.InferType()(mod)
mutated_mod['func_13958'] = func_13958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13958_call = mutated_mod.get_global_var('func_13958')
call_13959 = func_13958_call()
output = call_13959
func_13960 = relay.Function([], output)
mutated_mod['func_13960'] = func_13960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9529_call = mod.get_global_var('func_9529')
func_9530_call = mutated_mod.get_global_var('func_9530')
call_14040 = func_9529_call()
call_14041 = func_9529_call()
output = call_14040
output2 = call_14041
func_14058 = relay.Function([], output)
mod['func_14058'] = func_14058
mod = relay.transform.InferType()(mod)
output = func_14058()
func_14059 = relay.Function([], output)
mutated_mod['func_14059'] = func_14059
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7991_call = mod.get_global_var('func_7991')
func_7992_call = mutated_mod.get_global_var('func_7992')
call_14125 = relay.TupleGetItem(func_7991_call(), 1)
call_14126 = relay.TupleGetItem(func_7992_call(), 1)
func_5000_call = mod.get_global_var('func_5000')
func_5003_call = mutated_mod.get_global_var('func_5003')
var_14157 = relay.var("var_14157", dtype = "bool", shape = (13, 91))#candidate|14157|(13, 91)|var|bool
call_14156 = relay.TupleGetItem(func_5000_call(relay.reshape(var_14157.astype('bool'), [7, 13, 13]), relay.reshape(var_14157.astype('bool'), [7, 13, 13]), ), 5)
call_14158 = relay.TupleGetItem(func_5003_call(relay.reshape(var_14157.astype('bool'), [7, 13, 13]), relay.reshape(var_14157.astype('bool'), [7, 13, 13]), ), 5)
output = relay.Tuple([call_14125,call_14156,var_14157,])
output2 = relay.Tuple([call_14126,call_14158,var_14157,])
func_14159 = relay.Function([var_14157,], output)
mod['func_14159'] = func_14159
mod = relay.transform.InferType()(mod)
mutated_mod['func_14159'] = func_14159
mutated_mod = relay.transform.InferType()(mutated_mod)
var_14160 = relay.var("var_14160", dtype = "bool", shape = (13, 91))#candidate|14160|(13, 91)|var|bool
func_14159_call = mutated_mod.get_global_var('func_14159')
call_14161 = func_14159_call(var_14160)
output = call_14161
func_14162 = relay.Function([var_14160], output)
mutated_mod['func_14162'] = func_14162
mutated_mod = relay.transform.InferType()(mutated_mod)
const_14199 = relay.const([[[-9,-3,1,-5,10,1,3,10,3,6,9,-2],[-9,1,-9,-9,-1,1,2,3,6,-7,-9,-10],[5,6,5,4,-6,10,-4,-6,-3,-9,4,8],[-7,9,-2,-8,7,4,-5,6,3,-9,-6,2],[-1,-8,-2,-5,1,-4,-4,-3,6,3,-6,-3],[6,6,6,-5,10,1,10,-10,1,6,-6,-6],[-6,6,-7,-3,-2,7,6,4,-3,-7,-3,4],[10,-9,10,-1,-2,10,-5,-2,-1,-4,1,4],[-4,-7,-7,3,2,8,-7,10,-5,1,-5,-8],[6,-5,1,-10,-10,4,-1,-9,-10,7,-3,1],[9,-9,-8,1,6,-10,-5,1,-1,-5,5,5],[8,-5,3,10,-9,-8,-5,-1,-7,9,1,-7]],[[7,3,7,-9,4,-7,-9,8,-7,5,7,4],[-4,6,-3,8,-9,3,-10,1,6,2,-7,5],[7,8,5,8,3,9,-8,-9,7,-3,6,-5],[-1,8,-5,4,5,8,1,3,3,-3,8,-10],[-4,4,-4,-2,3,-5,-5,4,8,-1,-9,5],[6,-5,-10,9,-7,-3,1,-7,7,5,-10,3],[-3,9,1,-6,-9,-1,-5,2,5,-2,-5,3],[3,-6,-6,-1,5,1,-3,3,7,3,-6,3],[-2,-8,-7,1,-8,1,7,-5,3,10,-4,-7],[9,-4,-5,-4,5,6,-2,10,-3,4,-6,-4],[-6,2,-9,2,7,3,-4,-10,1,-8,10,-1],[-2,5,-5,-6,5,-2,7,4,-9,-9,-4,-9]],[[-3,-7,9,-8,-4,-9,-1,-1,-5,3,-6,-9],[2,7,4,-2,-5,2,7,-6,-2,-10,-2,-1],[4,8,-9,-7,4,8,2,-5,-8,-2,6,6],[3,-2,8,3,-7,4,-7,-8,4,8,-7,2],[9,-2,2,-2,-5,1,10,-7,-4,-3,-1,3],[-7,1,4,-3,7,-10,5,-5,8,6,-9,-3],[2,-5,8,-8,1,-1,3,1,-9,-9,3,-5],[-10,-9,3,-4,-9,-10,9,2,-7,8,-6,8],[-8,-10,-10,1,7,1,-1,5,-3,5,-2,3],[-9,-9,-10,8,5,8,-4,-7,1,9,2,4],[-10,9,-7,5,-5,-10,-3,-2,8,-8,-1,1],[3,-7,-7,-2,1,3,4,-3,10,4,6,6]],[[6,-8,6,-2,-1,-6,10,-7,9,-9,6,4],[7,-3,-3,-9,-10,-7,-6,9,-8,8,-3,6],[-7,-5,-7,10,4,-9,2,-8,-4,-1,4,2],[5,9,-6,-9,2,-5,2,4,-9,-5,-4,-3],[7,-1,-4,-2,-2,8,-8,1,1,-10,3,1],[9,-3,6,-3,2,6,6,6,1,-8,-2,-8],[6,6,-1,1,2,5,2,2,2,1,-6,-8],[2,7,-6,7,-2,-3,-1,-5,2,2,7,-9],[4,9,-8,8,-2,4,-9,-3,-7,5,3,-2],[9,-1,9,-7,10,4,2,8,8,-5,-4,-9],[-5,8,2,4,-3,2,-7,-7,-7,-4,7,-5],[7,-2,-8,-3,-3,10,-10,-1,-3,9,1,4]],[[-8,-9,4,10,3,2,2,4,-6,-5,1,3],[6,-4,9,5,8,-2,7,4,5,1,1,7],[2,-8,-5,-6,5,7,8,1,7,10,7,-6],[-2,-2,-4,4,10,-8,-3,5,6,1,-8,-4],[6,-1,-10,5,-3,6,-5,-3,2,-9,6,4],[10,8,6,2,-5,-6,9,-6,-8,10,-3,-10],[2,10,3,-2,7,-10,-3,8,-7,-5,-6,7],[-5,9,7,1,-9,9,-4,7,-4,-8,-1,-7],[1,-3,4,10,6,-7,7,4,10,-9,6,-8],[3,9,4,-10,-9,1,2,3,9,1,-10,3],[8,-4,6,-5,2,10,-10,-1,3,4,-1,1],[9,-7,7,-8,-10,9,4,4,10,2,-6,10]],[[-2,5,3,3,-10,-10,-10,3,-9,-9,-8,1],[-9,-7,5,-6,-2,-2,9,-7,-8,9,3,2],[-4,-9,4,-10,4,-1,7,-7,8,-3,7,-9],[7,6,8,4,-9,-4,-2,9,4,-4,-7,9],[2,-4,4,-7,1,-2,1,3,-8,4,-3,-7],[-1,7,6,3,2,9,3,6,7,-3,4,8],[-2,6,-5,2,6,4,-7,-1,4,-4,4,-1],[10,1,9,-7,-2,-6,-6,3,-10,-7,3,8],[6,6,-4,2,10,-9,1,-10,9,-1,6,10],[-10,5,-2,1,-4,9,4,5,3,3,-10,-8],[-10,-5,-3,-2,-3,-4,-9,5,2,5,-5,9],[2,1,-8,-2,-8,-5,-3,3,6,-3,2,8]],[[3,-1,-2,6,6,-8,8,3,7,6,8,8],[-7,-7,-10,-7,10,1,2,-8,7,-3,5,1],[-5,-4,6,-7,4,6,-10,-6,10,-2,7,1],[7,-6,-1,6,6,10,-5,-7,-2,-4,-5,-3],[-10,-9,7,10,5,8,-5,-5,8,4,-4,-2],[-3,9,7,-3,8,-3,-4,-9,-10,-7,1,7],[1,3,-2,2,-1,1,6,4,-8,9,9,2],[-4,8,3,7,5,-9,-4,2,5,-1,9,-3],[2,10,-9,-5,-1,10,-6,-8,-4,-10,8,-4],[-7,-4,-2,-3,8,-8,-6,-1,5,9,-6,-4],[3,-1,-8,-6,3,1,-4,10,8,10,-2,-10],[-2,-8,-7,-1,10,3,-8,-1,6,6,6,5]],[[-7,-9,8,6,10,8,-10,-10,-2,6,-2,1],[-1,-2,-7,3,4,1,-3,9,4,-1,-6,-5],[-5,-8,-10,-7,-10,-7,5,-8,-2,-8,9,8],[-7,-8,-1,-3,3,-3,4,3,-6,10,-2,10],[-9,-9,-8,-10,8,-9,-10,-5,-6,8,-8,-4],[3,8,2,9,6,10,7,-10,9,-3,-2,1],[-9,-7,-10,-3,-5,-8,1,-8,7,3,-7,8],[4,4,2,-5,-4,9,-5,9,-7,9,-6,5],[7,5,4,-10,7,-4,1,1,2,-3,6,7],[1,-9,2,-8,5,5,-9,6,10,4,-9,-9],[8,-6,-6,-6,-8,3,1,1,7,7,-10,1],[-3,1,1,-3,-4,3,-1,-8,-4,-8,-2,-2]],[[2,6,-2,-2,-3,9,7,-5,10,-2,7,-9],[-10,-7,-6,3,8,-2,8,7,10,-9,7,-7],[-2,-7,8,-9,3,-3,4,-10,7,7,7,9],[2,-4,2,8,-10,-2,-1,9,6,4,5,-4],[-8,-10,-5,-4,-6,7,-10,3,-8,-10,-7,-4],[8,5,-3,-8,2,-10,6,3,4,4,-5,-6],[2,-3,-5,-4,-6,-8,9,-4,3,-7,7,5],[-2,-5,-5,-1,5,8,2,2,-2,-8,8,2],[-5,-2,-9,-2,-7,-7,8,-9,-1,-4,10,2],[8,-5,-4,-8,3,9,-9,4,-10,8,8,-10],[6,-3,-1,2,-7,-6,1,-7,-3,8,-9,-8],[3,6,5,10,1,-10,10,-4,9,5,-1,6]]], dtype = "uint32")#candidate|14199|(9, 12, 12)|const|uint32
const_14200 = relay.const([[[-6,9,7,1,6,10,-3,3,-3,8,-1,3],[-10,1,-1,-5,-5,4,6,5,-7,3,-7,9],[5,-6,-2,4,5,-8,-2,-3,9,-8,-5,7],[8,-4,-6,7,-10,8,3,-4,9,-7,6,9],[-9,2,-10,8,7,-4,-6,-8,5,-8,2,-7],[5,4,-3,-9,-10,8,8,-9,-9,1,6,-10],[5,-9,2,-10,9,-8,-6,7,-8,3,3,2],[-7,-7,-10,3,-7,-4,6,5,7,10,-10,7],[-3,3,-4,-10,-8,3,-4,-5,7,-9,3,-10],[7,4,-6,7,-3,7,-9,-8,2,5,6,-8],[-3,-7,10,7,-5,9,1,-3,10,2,5,-4],[-9,-4,3,9,-8,2,-2,-7,1,-10,-4,7]],[[-1,1,6,4,6,-4,9,-3,-10,6,4,-2],[-1,-7,5,7,2,-3,-3,6,4,-8,-5,-9],[8,8,-1,6,3,7,9,6,-1,-10,6,6],[7,-3,7,-7,9,6,6,-2,-9,-6,2,-10],[1,-1,-7,6,-3,6,3,6,9,-4,5,-3],[-4,3,-3,2,2,-10,10,-2,-9,6,4,-5],[-3,-9,4,3,10,-5,8,6,1,-8,6,-6],[2,6,-4,-8,-2,7,8,-6,-7,-3,8,-6],[7,-10,6,7,-9,-4,6,2,-9,-3,-1,5],[-10,5,-8,-7,-5,-8,-4,-10,10,6,4,-5],[4,-9,-9,-5,5,-6,-10,-7,-1,-7,2,8],[9,-1,1,-7,-5,10,-3,2,-4,10,-3,-9]],[[4,1,-1,-9,4,-3,-5,10,9,4,6,9],[-4,3,3,-6,-6,-2,-8,7,-10,-5,-5,3],[-6,5,2,-9,2,-8,4,4,10,8,9,-2],[-10,-4,-3,-8,-5,-8,-6,5,-10,4,6,-5],[4,-6,1,-1,-6,-3,-1,5,-3,-3,3,8],[1,-9,-8,5,8,-6,-1,7,2,-6,2,-9],[6,3,-3,3,10,3,8,1,-1,-4,-4,10],[2,8,-7,8,-10,5,1,7,1,1,-10,-5],[1,-5,-10,-10,-3,8,-5,5,7,-1,7,-2],[-10,8,-9,-2,10,-7,2,-7,-6,-5,1,-8],[-10,-1,-1,-5,-7,-2,4,7,1,6,-1,-8],[-8,-8,3,-1,9,9,-4,10,7,-8,-5,-5]],[[-8,8,4,6,9,4,2,-4,-7,8,9,-3],[-9,5,5,-10,3,-4,-6,-2,4,8,1,-6],[6,10,-3,10,-1,8,9,10,-8,10,5,-8],[9,-5,-9,-9,-7,2,9,4,9,7,-9,-1],[-9,10,4,-3,5,3,10,-1,-10,-9,-5,8],[-4,-3,2,-2,4,5,2,-2,5,-3,7,4],[-6,-6,-5,-6,-1,-3,-2,4,-9,-5,6,-5],[3,7,-1,9,3,2,-2,-8,9,6,10,-9],[-8,7,-4,-6,-2,8,4,-5,-3,-7,-5,-7],[-8,-6,-4,5,-1,-7,-7,-3,6,4,-9,6],[-4,-6,-8,1,-8,6,2,-6,-6,-8,-8,3],[4,-3,-4,6,2,7,7,-7,5,-8,7,-1]],[[-9,-5,2,10,-5,1,-3,-7,9,6,4,-2],[9,7,4,-8,-7,-9,-2,6,-3,5,4,-3],[-8,10,6,-10,-1,-10,4,-7,10,-1,6,-10],[-4,9,8,2,2,-7,-3,-3,3,9,-1,8],[4,-6,9,-1,10,3,-1,4,-9,2,-8,-6],[8,6,-4,1,-6,-10,10,7,1,-7,-7,8],[2,7,4,-10,-1,-2,-3,-4,-1,-3,6,-2],[-4,-9,-2,4,-6,-3,-6,-5,-1,3,3,4],[-4,4,9,-8,4,3,-4,-9,7,3,9,2],[8,-4,5,-2,5,10,1,-8,-5,3,7,10],[-8,-9,4,6,9,10,10,-2,9,10,9,-8],[-8,-4,5,-8,8,9,-1,3,-5,-1,-6,-9]],[[-6,-6,6,1,-5,8,8,10,-5,9,3,3],[6,10,-10,8,7,-3,6,-8,9,-8,4,-7],[8,-7,10,7,-6,10,8,-4,-2,2,4,-8],[10,10,-7,-4,-4,5,1,-2,3,-6,9,-7],[-10,-10,1,-5,-5,4,3,8,9,1,-7,10],[4,2,6,6,-10,-8,6,3,-2,5,5,5],[9,7,-1,-10,2,10,-1,6,5,-4,9,4],[2,-9,5,4,-9,3,-9,5,-3,1,-5,7],[1,3,-7,-3,6,-10,5,-6,7,4,-2,-7],[-4,-1,3,1,1,6,-8,-9,-1,7,4,-10],[-5,-9,1,-4,-4,6,-4,3,-10,3,8,-4],[2,-6,-7,1,9,10,6,7,-2,-7,-1,-2]],[[-9,-8,-1,-7,6,-3,-10,-6,2,10,-2,8],[-1,10,5,-4,-1,3,-7,-6,6,5,-2,4],[6,4,3,2,6,8,6,-6,-6,-8,1,-3],[1,-2,8,-1,-10,-2,8,8,6,5,-10,10],[2,-7,1,-8,8,9,6,8,-4,10,6,8],[-6,5,-6,9,2,8,6,8,-6,9,5,-1],[-10,3,-10,10,-3,-9,-10,6,-4,7,-10,3],[-10,-7,2,5,8,-9,-10,4,4,4,-10,7],[-3,-4,-7,-9,1,-3,-4,6,8,-2,-4,4],[8,1,-6,-3,-3,2,-6,-9,6,10,2,-4],[1,1,-4,1,-10,-3,-5,7,-3,-9,7,8],[2,3,-3,-6,-7,-8,-1,3,5,10,-2,9]],[[-4,-6,8,6,3,-6,8,-1,-9,6,-1,-3],[-6,-8,10,6,6,6,-8,-6,2,7,5,5],[-6,6,-1,-4,2,5,-9,-5,-5,-1,-3,-3],[-10,-5,6,-3,-10,-2,9,-9,-9,-2,-7,5],[8,-4,2,4,-8,9,8,10,2,-10,-9,-10],[5,-9,9,-2,-10,5,-6,4,-9,-9,6,4],[3,-6,5,3,8,-10,-5,-1,3,-7,-9,4],[-5,-3,-4,6,3,10,-8,5,4,-10,-10,-4],[-10,-9,-3,5,5,8,6,-9,-3,-4,1,-6],[5,-3,-10,-7,1,9,10,-1,-3,6,-2,6],[-3,6,-10,-8,10,-1,2,1,5,-7,-4,-1],[9,6,-2,7,-5,-9,7,1,9,-6,-1,4]],[[6,10,-2,-9,-8,-2,-7,6,-2,-6,-2,-4],[10,-4,8,-8,3,-6,-9,-6,10,-9,-7,-9],[-2,7,4,7,-5,5,-10,10,1,8,1,-8],[4,-7,4,1,3,-10,-3,-10,-9,-4,10,-2],[-1,2,6,2,9,2,-7,1,-3,6,-9,6],[1,-7,-3,-1,-1,8,-5,9,2,-9,-6,-1],[-3,-5,-3,-10,-9,5,-8,-8,-9,8,7,-10],[-1,-9,1,-4,-9,7,-9,6,2,2,6,-8],[-6,-1,-6,-3,-9,-1,-4,-3,3,-5,-4,10],[10,7,4,5,4,5,4,-4,-2,-3,10,-1],[7,5,7,-9,-9,-7,4,3,5,-7,-7,3],[-5,-10,-4,8,-7,3,10,2,-10,2,-10,-3]]], dtype = "uint32")#candidate|14200|(9, 12, 12)|const|uint32
bop_14201 = relay.greater_equal(const_14199.astype('bool'), relay.reshape(const_14200.astype('bool'), relay.shape_of(const_14199))) # shape=(9, 12, 12)
output = bop_14201
output2 = bop_14201
F = relay.Function([], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

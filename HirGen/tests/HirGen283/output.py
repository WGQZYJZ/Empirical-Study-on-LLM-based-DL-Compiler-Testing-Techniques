import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_80 = relay.var("var_80", dtype = "float32", shape = (9, 11, 13))#candidate|80|(9, 11, 13)|var|float32
uop_81 = relay.sinh(var_80.astype('float32')) # shape=(9, 11, 13)
output = uop_81
output2 = uop_81
func_83 = relay.Function([var_80,], output)
mod['func_83'] = func_83
mod = relay.transform.InferType()(mod)
var_84 = relay.var("var_84", dtype = "float32", shape = (9, 11, 13))#candidate|84|(9, 11, 13)|var|float32
output = func_83(var_84)
func_85 = relay.Function([var_84], output)
mutated_mod['func_85'] = func_85
mutated_mod = relay.transform.InferType()(mutated_mod)
var_336 = relay.var("var_336", dtype = "float64", shape = (8, 14, 15))#candidate|336|(8, 14, 15)|var|float64
uop_337 = relay.sigmoid(var_336.astype('float64')) # shape=(8, 14, 15)
func_83_call = mod.get_global_var('func_83')
func_85_call = mutated_mod.get_global_var('func_85')
var_341 = relay.var("var_341", dtype = "float32", shape = (143, 9))#candidate|341|(143, 9)|var|float32
call_340 = func_83_call(relay.reshape(var_341.astype('float32'), [9, 11, 13]))
call_342 = func_83_call(relay.reshape(var_341.astype('float32'), [9, 11, 13]))
func_83_call = mod.get_global_var('func_83')
func_85_call = mutated_mod.get_global_var('func_85')
call_346 = func_83_call(relay.reshape(var_341.astype('float32'), [9, 11, 13]))
call_347 = func_83_call(relay.reshape(var_341.astype('float32'), [9, 11, 13]))
output = relay.Tuple([uop_337,call_340,var_341,call_346,])
output2 = relay.Tuple([uop_337,call_342,var_341,call_347,])
func_348 = relay.Function([var_336,var_341,], output)
mod['func_348'] = func_348
mod = relay.transform.InferType()(mod)
mutated_mod['func_348'] = func_348
mutated_mod = relay.transform.InferType()(mutated_mod)
func_348_call = mutated_mod.get_global_var('func_348')
var_350 = relay.var("var_350", dtype = "float64", shape = (8, 14, 15))#candidate|350|(8, 14, 15)|var|float64
var_351 = relay.var("var_351", dtype = "float32", shape = (143, 9))#candidate|351|(143, 9)|var|float32
call_349 = func_348_call(var_350,var_351,)
output = call_349
func_352 = relay.Function([var_350,var_351,], output)
mutated_mod['func_352'] = func_352
mutated_mod = relay.transform.InferType()(mutated_mod)
const_486 = relay.const([[[-3,1,10],[2,9,-1],[-1,-4,2],[-8,6,-3],[10,-1,3],[8,-6,3],[9,2,-3],[-8,-3,-3],[-2,6,-3],[-6,-6,5],[-9,-5,-4],[-3,-6,-2],[9,3,2]],[[-10,7,4],[-7,-4,-5],[10,3,-9],[6,9,-8],[-2,1,-2],[1,9,8],[-1,-4,-7],[3,-5,5],[-3,-7,-4],[1,3,-1],[-9,6,4],[3,-8,10],[8,-5,10]],[[-6,-10,5],[-9,9,-2],[-6,5,-9],[6,2,-1],[-9,6,3],[-3,-2,3],[6,4,5],[-6,-7,2],[9,9,2],[-6,2,-7],[1,-5,3],[-8,1,4],[10,-6,-2]],[[4,-4,5],[-7,-9,4],[-2,-5,5],[7,9,-7],[-2,5,-5],[-6,-8,-4],[-8,-5,-9],[-2,3,-10],[-7,4,-2],[9,10,-4],[10,-8,2],[-3,-4,-7],[9,-4,1]],[[1,-10,4],[-5,-10,6],[4,5,6],[3,-6,-10],[-9,-4,-1],[6,3,-4],[10,9,-6],[5,2,-1],[5,-8,10],[4,6,10],[-3,7,6],[2,-5,-7],[7,-1,10]],[[-7,-6,6],[2,-3,9],[6,-4,9],[-8,-8,-3],[4,-5,-1],[8,1,-3],[-10,-8,3],[-10,3,-6],[4,5,-7],[-6,-10,-5],[-7,-9,7],[-7,6,1],[7,2,5]],[[-2,2,-2],[-8,9,9],[-1,6,-7],[1,-9,-1],[8,-2,-8],[8,6,9],[-8,-4,7],[8,-2,-9],[9,-2,8],[-1,-1,-7],[-7,-9,3],[-1,-7,6],[10,5,2]]], dtype = "uint8")#candidate|486|(7, 13, 3)|const|uint8
var_487 = relay.var("var_487", dtype = "uint8", shape = (7, 13, 3))#candidate|487|(7, 13, 3)|var|uint8
bop_488 = relay.equal(const_486.astype('bool'), relay.reshape(var_487.astype('bool'), relay.shape_of(const_486))) # shape=(7, 13, 3)
func_348_call = mod.get_global_var('func_348')
func_352_call = mutated_mod.get_global_var('func_352')
var_497 = relay.var("var_497", dtype = "float64", shape = (1680,))#candidate|497|(1680,)|var|float64
var_498 = relay.var("var_498", dtype = "float32", shape = (1, 1287))#candidate|498|(1, 1287)|var|float32
call_496 = relay.TupleGetItem(func_348_call(relay.reshape(var_497.astype('float64'), [8, 14, 15]), relay.reshape(var_498.astype('float32'), [143, 9]), ), 3)
call_499 = relay.TupleGetItem(func_352_call(relay.reshape(var_497.astype('float64'), [8, 14, 15]), relay.reshape(var_498.astype('float32'), [143, 9]), ), 3)
output = relay.Tuple([bop_488,call_496,var_497,var_498,])
output2 = relay.Tuple([bop_488,call_499,var_497,var_498,])
func_502 = relay.Function([var_487,var_497,var_498,], output)
mod['func_502'] = func_502
mod = relay.transform.InferType()(mod)
mutated_mod['func_502'] = func_502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_502_call = mutated_mod.get_global_var('func_502')
var_504 = relay.var("var_504", dtype = "uint8", shape = (7, 13, 3))#candidate|504|(7, 13, 3)|var|uint8
var_505 = relay.var("var_505", dtype = "float64", shape = (1680,))#candidate|505|(1680,)|var|float64
var_506 = relay.var("var_506", dtype = "float32", shape = (1, 1287))#candidate|506|(1, 1287)|var|float32
call_503 = func_502_call(var_504,var_505,var_506,)
output = call_503
func_507 = relay.Function([var_504,var_505,var_506,], output)
mutated_mod['func_507'] = func_507
mutated_mod = relay.transform.InferType()(mutated_mod)
var_845 = relay.var("var_845", dtype = "bool", shape = (13, 7, 16))#candidate|845|(13, 7, 16)|var|bool
var_846 = relay.var("var_846", dtype = "bool", shape = (13, 7, 16))#candidate|846|(13, 7, 16)|var|bool
bop_847 = relay.logical_or(var_845.astype('bool'), relay.reshape(var_846.astype('bool'), relay.shape_of(var_845))) # shape=(13, 7, 16)
uop_851 = relay.asinh(var_845.astype('float64')) # shape=(13, 7, 16)
output = relay.Tuple([bop_847,uop_851,])
output2 = relay.Tuple([bop_847,uop_851,])
func_853 = relay.Function([var_845,var_846,], output)
mod['func_853'] = func_853
mod = relay.transform.InferType()(mod)
mutated_mod['func_853'] = func_853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_853_call = mutated_mod.get_global_var('func_853')
var_855 = relay.var("var_855", dtype = "bool", shape = (13, 7, 16))#candidate|855|(13, 7, 16)|var|bool
var_856 = relay.var("var_856", dtype = "bool", shape = (13, 7, 16))#candidate|856|(13, 7, 16)|var|bool
call_854 = func_853_call(var_855,var_856,)
output = call_854
func_857 = relay.Function([var_855,var_856,], output)
mutated_mod['func_857'] = func_857
mutated_mod = relay.transform.InferType()(mutated_mod)
var_974 = relay.var("var_974", dtype = "float32", shape = (5, 1, 6))#candidate|974|(5, 1, 6)|var|float32
uop_975 = relay.sqrt(var_974.astype('float32')) # shape=(5, 1, 6)
func_348_call = mod.get_global_var('func_348')
func_352_call = mutated_mod.get_global_var('func_352')
const_980 = relay.const([[-2.904497,0.691946,0.740153,5.491263,-7.247911,5.582072,-6.763909,-1.178609,4.787562,6.606271,6.108246,-8.641275,7.444142,1.317364,2.691570,-1.867679,-9.452802,-8.644197,9.895248,9.509745,5.965690,-3.820161,0.855460,-5.435234,-9.781331,-2.794985,3.798711,-7.423772,8.357145,9.660949,8.852476,-5.534093,6.172613,-0.859054,-7.675023,-2.544185,-3.855732,8.173495,3.701926,-9.972555,-1.595585,-2.681084,-7.030660,-8.830896,-3.717799,-2.075613,1.581988,0.705854,9.345012,3.433669,7.563429,1.499931,-9.752759,4.828963,-1.005742,-2.531537,2.041580,3.307405,0.052604,4.306210,1.856921,-6.843285,-7.901797,8.690701,6.705268,2.247767,-8.039057,-8.793654,-2.821920,5.674250,-1.286082,7.232312,-6.167286,9.394502,-3.434111,5.434185,-1.620757,7.788770,5.142547,-7.841936,8.207642,-3.070445,5.758899,1.499635,-4.452673,-0.675719,-9.727796,-2.190139,-0.079195,-8.469660,-4.549815,-6.322836,5.286194,2.364654,-5.977079,5.648096,-1.405821,-7.560915,4.107608,1.459083,-2.071341,-4.353311,5.192636,8.453376,-7.131793,-8.410534,0.805563,4.726189,-6.833410,6.519551,-9.589878,2.789843,-8.103922,-1.749852,4.367438,-5.765965,-4.010450,-8.337383,9.816531,3.941233,5.497712,1.751251,7.091176,-5.775983,3.479146,-7.337658,-2.592199,-4.633665,9.660282,-1.893003,-5.720281,-6.563347,8.147590,-0.589798,-4.028437,-6.353985,-0.037309,-2.429757,-6.026326,9.127759],[3.419801,-4.767878,9.837122,-1.598956,1.059545,9.793202,3.295396,-7.953465,-4.959876,-7.385929,7.492073,5.093825,-1.365704,6.004702,-8.218980,-1.258700,-2.779148,6.684248,-5.681125,7.116649,5.273880,2.921595,-8.557946,8.527727,9.853132,-2.390677,5.045088,-0.321336,3.688834,-7.514498,-5.046190,8.182217,5.265482,0.183725,6.681352,-1.032559,4.004652,0.811054,4.880845,9.582684,-0.478477,0.522909,4.102042,6.828848,4.622953,-3.378022,2.918254,5.077949,-1.244293,-7.861323,2.593532,-8.472056,-7.074896,-8.401784,7.180244,-4.036929,0.066446,2.714501,2.180442,-4.227048,-3.764247,6.869877,-9.187356,1.024266,5.694602,-4.813055,-8.359241,6.096017,0.762382,-5.786124,9.620976,-3.291117,9.391753,7.453599,0.761790,4.705382,-2.422137,9.338592,8.610118,-0.273352,-8.621005,3.019906,4.411474,8.214592,4.337847,2.039107,2.596259,8.565582,0.954116,0.038553,-1.627377,0.212766,6.492354,-1.781800,0.476684,7.211868,1.249854,-6.638588,-7.781616,5.425240,0.163993,-9.399205,3.071627,7.708259,2.370434,7.213995,-3.124965,-8.569787,6.970339,-6.697644,7.289679,-6.888923,0.664192,-6.130049,-5.020938,5.187662,-7.857959,-9.840656,8.616828,5.890198,9.648016,0.686456,3.757269,9.026337,-8.521678,4.217708,-1.852415,-0.064116,-6.664453,8.545754,3.104030,-0.455767,-5.422584,2.600955,0.548816,-6.876776,0.938801,-9.935066,-0.971515,1.515221],[4.145264,-9.047271,-9.543037,9.696618,3.049643,8.950064,4.309426,1.080656,7.704675,-2.566985,2.082108,8.246013,-4.385286,9.925267,6.812920,3.819089,5.029073,-2.086184,-2.258284,-3.530180,-1.151559,-9.878619,2.618929,-2.390416,-7.232075,0.761252,8.169588,-9.339119,-5.637100,-0.619843,-0.599228,7.975384,-1.241393,3.154659,8.359194,-5.889922,-6.196622,-4.081963,-7.932313,-7.679324,1.891772,-0.743885,-7.343817,-1.162601,-9.124313,-4.191072,-4.949485,-6.121662,-4.158052,7.455496,0.091357,5.793077,6.169247,-9.947031,-8.171439,-5.282553,-1.225509,7.419805,-8.831808,-9.830749,-7.171520,6.869475,-2.487670,4.118071,-9.157443,-3.434559,0.758690,2.165113,9.718123,-8.365038,-4.810420,0.534261,-6.791799,2.252151,-9.346104,4.215118,-7.768057,3.308884,6.729724,9.141437,-6.934715,6.688065,-5.912933,-8.603500,-3.853789,4.238549,0.596313,-5.578109,4.538076,-4.105026,2.926994,5.940052,1.278275,-6.150776,8.242488,-3.749064,7.360990,5.076411,-6.032776,-3.362857,9.323701,4.099114,-0.870958,-9.666780,0.729061,-5.405350,-1.299854,-8.808973,-6.849186,-8.393474,3.118280,0.742225,0.046028,-7.116894,-1.463534,-9.968159,-7.601956,6.202824,8.023483,1.949122,-9.547387,4.773994,7.934707,-4.899626,-5.981674,7.036780,6.021415,4.779608,-7.317480,-2.975549,-8.614696,-9.310841,-5.347805,9.998714,6.693904,-8.997552,-9.576577,-2.135610,-5.362212,-3.702036],[-6.198949,-1.252456,-9.363356,-3.241715,0.179077,-2.386978,2.781711,-5.935825,-9.954238,-5.368715,-2.078103,6.423099,-2.968595,-6.091105,9.189073,-0.323228,0.551291,6.000986,-2.515132,-0.818686,5.709972,8.349200,0.010678,-4.230188,0.756064,7.140757,-0.560748,6.933955,-9.768241,7.844217,-5.581493,9.808279,-8.226969,2.763054,-6.514869,-4.731171,-3.606489,6.980516,8.563723,1.757476,-0.025681,5.686147,-1.127846,7.583442,-2.582347,-0.710815,-6.181136,-8.410892,-1.347271,6.482466,2.563481,-3.020926,4.890196,7.727332,-2.659077,-6.639187,0.228895,7.531422,-3.508873,8.706668,2.791403,2.784664,1.399982,-3.848936,4.533848,7.840204,8.050966,2.649154,3.030399,4.948197,5.715054,-4.650015,2.870715,-5.446026,-5.842925,6.257558,6.091795,-4.299414,-9.664641,9.347538,-5.789938,6.741800,-4.886902,5.840469,3.558943,5.645937,-5.964117,-2.948932,3.388075,1.884756,-1.249574,5.433663,3.165905,-9.012990,-1.559405,0.354506,-1.378208,-3.217129,7.884530,-4.504395,9.039078,-4.024618,4.853588,6.794394,0.020534,4.179551,7.913459,-1.546558,-8.543314,8.140184,-8.900537,9.950116,5.545309,6.181656,2.448594,1.611152,-0.406320,-5.506158,-4.531913,-9.094356,-5.992813,9.114430,6.956780,-5.270398,3.309536,-8.199552,3.207768,-9.652329,-7.393576,6.903105,-6.746822,-5.743986,-9.672915,-1.369451,-2.043129,1.285479,-6.403123,1.369982,-6.863116,1.372391],[2.347128,8.026671,-4.625093,2.100636,7.406888,-2.523451,7.112504,-6.440567,-4.377183,8.074571,-5.287526,2.635121,0.428010,-9.835957,4.810293,1.389295,6.812621,4.663067,9.631032,-1.981452,4.297970,-0.792163,5.198469,4.546048,4.304105,7.904809,2.887255,6.851862,6.477381,-0.742321,2.943869,1.266397,-0.006835,-6.444404,8.559550,-5.060969,-8.413242,5.767373,-5.201703,7.420250,8.764588,4.658469,0.040296,-3.955731,-8.057940,6.369351,-1.758007,-4.601970,4.308579,-5.147198,-3.230891,-7.054351,4.701681,-3.693796,-1.007276,-7.457225,-7.257252,-6.398580,-1.414052,-5.373376,5.823942,-7.459561,-9.055780,-2.073756,-2.074397,-8.965056,3.493001,4.759075,5.759591,-4.655985,8.592545,3.476446,-5.124248,8.994627,-2.288052,1.852089,-6.471942,-0.323335,1.161507,-5.437437,4.635593,-4.488135,4.190470,-4.819716,4.379918,-2.910760,7.492856,1.040097,3.269787,-5.297327,-1.225733,1.810140,0.227024,-8.753994,-5.936504,-3.168147,8.133880,0.187843,-7.322082,1.842349,-1.589466,-4.497834,-2.617750,-8.925788,5.370109,4.021386,-2.898980,-8.911547,-4.294681,-1.298703,7.371506,7.226573,7.473611,-9.805540,-9.807413,-2.536800,4.934546,-1.134064,-4.489046,-9.390330,8.350082,1.984786,-8.773605,8.211665,-5.382145,-1.495533,4.883846,3.914074,-2.847748,-5.833079,9.099586,4.873725,-7.343278,-6.433743,-6.243853,-6.400553,2.184611,-6.129874,1.897865,-2.842308],[5.660399,4.462092,-6.020940,-3.767702,-2.262855,7.668591,5.244072,3.543294,-4.545211,-7.207043,-6.306769,-2.972207,-8.394901,2.013004,8.107596,-1.110733,-5.561259,1.256459,-4.480410,3.682160,-2.113264,-3.659969,-3.252832,8.370686,-2.319823,3.690778,-2.241594,-5.296287,-0.233609,-5.282273,0.595998,6.853576,3.745564,6.032391,-3.877686,-3.792830,7.022789,-4.341341,-0.763256,7.581702,6.359430,3.330101,-3.862317,-4.671591,-5.251585,-0.036616,4.527861,3.321675,-1.845092,-0.570811,-1.595052,-2.338075,-5.119444,4.008840,-3.651964,5.874423,8.704375,-6.979645,-8.371425,2.450275,1.532892,-4.199482,1.995480,5.893585,-8.234259,-1.227603,9.897255,7.441167,7.875360,-3.544589,9.375252,1.616614,5.376731,-9.270391,-9.214026,-6.421315,-0.046227,4.916695,-9.783819,2.788154,-4.263923,0.221099,-4.130199,9.140974,6.734798,-6.839258,3.121081,-9.558853,6.103593,-9.945671,-0.022546,3.153635,-0.148980,-7.190666,-0.488916,8.150203,5.408921,-1.404044,1.216186,6.319977,6.510374,8.246572,3.493942,3.501434,6.673713,-1.363077,-9.263424,-7.496150,-1.551497,-8.095025,-3.459618,-4.598338,-2.588177,-2.616091,-8.248325,7.526636,6.036903,6.875308,-4.992434,7.274077,-1.355364,2.845733,0.990395,0.662689,-1.736880,-3.243152,-0.312783,-8.694112,8.300899,-5.634599,-3.823587,-7.761717,9.044734,-5.777760,-0.141016,2.818419,8.609967,-4.669726,-4.099033,9.077235],[8.443960,5.446096,-5.754884,-0.295711,-5.874248,2.916366,-1.490124,-3.295433,9.367595,1.092925,-3.138263,4.036247,7.994926,2.337256,8.884468,-0.650634,-8.915758,-1.907525,7.854801,8.961575,-7.893843,-7.550124,-6.874029,-4.765651,5.571267,3.794921,-2.090198,-6.811022,-8.941793,8.040804,-7.046320,-9.497268,0.986311,8.032608,-6.610317,5.623452,8.302800,4.588942,-2.220558,-9.045013,-0.377731,-8.343919,-1.294640,-3.374160,-9.132846,-0.824491,-0.398548,8.036001,-0.568712,-3.969114,9.274298,4.033415,-5.209653,-1.872046,-5.600608,-4.909426,6.089183,4.839555,5.482200,-4.182707,0.213300,-0.463245,-9.447028,6.013161,-0.288930,8.161579,4.908926,8.551892,8.400411,3.730361,-2.695759,-4.696980,-3.544362,8.953983,-2.429027,9.887087,-3.703421,7.964993,7.237137,2.981215,-0.518315,-5.864543,1.278712,2.921672,2.952267,-1.605563,4.421125,9.268074,-4.786681,6.677582,2.183601,-9.849142,0.241869,-6.917218,8.625807,-1.223796,-5.350413,8.880393,-4.436536,-0.666091,9.972460,3.969979,-2.699137,-2.400914,9.135723,8.634319,-7.217111,9.598771,0.260378,5.105673,8.089915,-5.095964,-3.569672,-3.735391,1.944942,-1.694079,1.120946,9.774657,5.381136,8.404150,3.099754,9.792637,-6.516005,0.890002,-9.279459,-1.059313,0.179423,7.721684,3.436097,-2.079926,-0.001701,4.024260,2.088003,4.434285,2.696465,4.996730,0.643931,-5.665774,9.670178,1.771169],[-8.485594,-6.355638,3.982855,7.534701,9.188134,2.063590,2.155102,1.077708,3.084432,1.584625,5.055260,4.803897,6.586446,4.495047,-0.302414,-8.585137,-0.405887,-4.455102,-2.055023,-4.808913,6.218842,0.696581,9.283792,2.435776,-2.364103,1.242819,-1.595316,-3.128644,-6.635350,-2.440695,2.690314,-0.677132,4.809818,4.317461,-3.511468,2.204610,2.955096,-7.742990,-8.107490,6.407414,-9.278723,-7.980726,2.968456,-8.278238,-3.892424,-2.798276,6.686607,-0.887513,3.230382,-0.327814,7.901317,-8.328324,1.931271,7.918418,-4.564904,-8.858357,2.285249,1.347190,1.965745,5.806108,7.325597,7.602513,-1.189863,1.699691,8.852978,1.030982,-1.158381,6.288724,9.175046,8.167886,6.324883,-0.098539,-1.439300,-0.348944,-3.846500,-5.018562,6.240737,-5.415931,7.276738,-5.954001,-6.659998,4.435087,6.771328,-0.964920,-3.577400,-2.995967,9.802022,-2.789596,0.151300,7.429243,-0.519376,7.073736,-2.090833,7.680166,8.198007,-6.756457,-7.183515,-4.069880,8.934488,-7.393613,-3.844060,7.745002,8.174100,-8.287670,-2.656569,-4.534159,0.756079,3.951815,-9.570006,8.766366,-6.408733,6.415736,7.169427,-2.779452,-0.322175,-7.819245,5.236044,-1.080136,-2.469465,5.703908,-0.954052,0.143982,5.371380,4.269005,-3.797552,-2.341273,9.103300,5.826104,5.469272,3.377485,-4.018810,5.400476,2.696472,-1.180468,-2.756761,3.565310,-1.377074,-3.908378,6.588034,6.623947],[-4.787314,-0.584228,8.567048,-9.132892,7.245167,-2.092756,-6.073995,8.610172,3.711502,8.807832,-8.625561,-9.912292,9.721147,-9.128424,2.907938,-5.507081,0.381981,2.315743,-6.264639,-1.767602,5.040155,9.349667,-6.699988,8.219165,4.382133,2.973930,0.457868,-6.511685,-7.183607,0.860687,-8.875509,0.780734,-0.627614,-9.749540,-3.871986,-0.443887,1.124704,5.444826,5.734184,0.237112,7.976545,-3.910357,-5.153660,-0.803978,7.552107,-0.521170,5.462747,-6.310254,-4.114987,3.167578,1.104402,-3.765630,4.849503,-0.396629,6.663084,0.696412,-2.554582,4.832533,-2.486254,2.104370,-2.560516,6.310360,4.399518,1.105256,-5.396376,-9.542891,3.960480,-8.706220,9.061750,3.576657,-2.832665,4.095987,-2.746298,-3.571460,-4.107737,-3.209690,1.092314,7.680871,2.319028,7.160653,4.268410,7.756923,-7.470725,8.272830,-6.598734,-9.619597,-7.027537,1.839423,9.904727,9.476716,4.339379,-4.184574,-0.222758,7.680167,-0.303107,0.486425,8.983804,-3.145026,7.426925,1.154417,-7.427306,-5.955701,7.812705,6.567254,9.872018,9.437991,5.716797,-1.694992,3.330331,6.726933,-1.113468,7.472770,-4.656416,6.520734,3.199247,0.368452,9.079517,-8.203289,-9.831003,8.029426,8.953490,-3.553150,-1.861269,-1.944913,6.696140,7.867536,-7.474177,8.763372,1.686698,-5.891147,5.374477,-6.045819,-8.184597,7.737880,2.010504,-7.373267,3.933321,4.063944,7.986849,7.995035],[0.381406,-7.419732,0.435700,-3.059344,8.007708,-3.714393,7.072788,3.954862,6.665773,-5.178697,9.208786,4.227298,4.648897,-2.859239,-8.941015,0.108990,-7.682909,-9.164739,9.505829,-6.395861,3.135127,5.261126,-7.971569,-1.183941,-9.801787,-9.685665,-1.990386,-6.108361,-2.629580,-5.596819,5.138948,-0.590765,-8.733429,5.943095,-1.754237,-8.653359,-0.242274,-1.601744,-9.075722,5.577126,5.036613,-5.045791,1.587246,5.622052,3.039636,6.281450,-6.985612,-7.371399,-5.112707,-6.552728,-6.240041,-2.118281,6.190418,1.801459,-0.013003,-4.859817,-1.239077,3.858014,8.758188,1.474848,-6.287787,9.559149,-6.073981,7.867988,-4.908731,0.588770,-4.428338,7.435762,-9.139911,5.553085,3.759886,-5.203960,-6.138558,-1.300028,2.228755,-1.395437,-6.459656,-1.056654,-9.268539,6.219049,2.151890,2.816415,-1.717134,2.274949,9.736411,8.473993,-3.515203,-6.610714,2.838435,5.728713,-2.847691,6.228503,0.137561,2.723432,1.605044,-0.733176,-6.155160,7.051357,2.380461,6.777722,8.168331,2.366984,6.778183,8.820645,-7.904040,0.463965,-8.340150,3.452838,-4.046691,5.345831,9.913617,-4.086216,2.935542,1.429328,6.931116,7.427394,6.013164,-8.184305,-8.796952,-3.941862,-3.367369,2.906373,-8.100358,1.780507,-5.102115,-9.954368,-6.200957,0.414622,-8.595717,-6.503384,4.970654,6.615455,8.188319,4.602072,6.616515,-7.566531,5.163882,-0.281274,5.610446,-0.442169],[5.014750,6.594366,-3.176487,2.404921,2.476268,-2.706475,-8.812280,-8.640192,5.509575,1.635207,0.916169,7.148688,-9.737231,-8.732306,0.406302,5.204674,9.034762,-0.045059,9.609407,7.532900,-7.830218,9.473999,7.499034,-1.732174,-1.920733,8.369057,0.306138,-3.197503,-2.465313,3.508161,-7.076396,-8.742556,-6.172038,6.673191,8.995231,-4.574995,-5.188266,-1.966427,2.400919,-7.380004,-7.870257,8.763138,-5.862125,0.857482,-7.686903,-2.799615,0.329939,4.375671,-8.124062,3.673510,5.161568,9.332062,-1.689177,8.313869,-1.772169,9.924917,3.874179,-9.397806,-2.273776,-0.218164,5.706099,2.974747,-0.738210,-9.542687,2.830876,-1.445624,7.756964,-0.289432,9.602332,-7.950806,-5.960605,-2.625338,-5.390992,1.014879,1.879780,-6.258414,8.586145,0.043693,-6.317367,-6.593267,-6.175687,-6.717541,-3.601515,0.889013,-0.238624,5.469458,6.880260,-5.352729,-3.549328,-0.630499,0.141541,-9.028621,9.638505,-1.059304,1.159135,7.398686,5.857846,-4.063833,9.854562,7.954603,2.918107,-8.279060,0.960645,-4.340124,-8.723672,2.436264,2.318664,-6.673364,0.279655,-9.154348,2.151447,-6.026565,9.648470,-5.996775,-2.642357,-4.053518,-4.260923,-7.809164,4.618729,-3.309648,-6.972163,-0.186794,9.067466,-1.698160,8.693811,-4.787190,-5.050001,-8.906023,8.334819,-1.930700,-0.014290,1.456176,5.083371,-6.023769,-5.552483,2.938855,-3.276205,3.425370,-3.825027,2.292481],[-6.472739,3.119665,-5.488463,1.571408,-0.834748,-5.818740,-2.941360,-9.692218,4.923520,9.393557,3.702767,-0.573758,-9.498599,1.605807,1.811481,-9.950672,-1.786446,1.792532,2.808790,-4.965112,-8.492672,0.866317,-6.409543,0.472768,-9.201681,-0.326755,1.767413,-2.335763,-1.325263,-1.558554,-2.715353,9.530808,-5.834303,8.044681,3.976586,-7.889828,-6.910454,7.389197,1.329133,4.132542,4.421946,7.927047,-5.331118,-0.012422,0.286216,0.314374,6.247245,4.017517,5.883821,-1.054373,-2.574433,-4.841817,-6.341880,-0.500815,-2.785630,9.252971,5.498851,-3.521338,-0.064557,-3.590219,-3.885562,7.917549,-0.164121,0.387867,-4.091177,6.568699,-7.459638,6.867854,4.382178,-8.531326,7.600679,1.379409,-5.213915,2.102372,-2.807637,3.892053,2.350354,-9.846350,5.542335,1.310709,5.184939,-6.975079,-3.931322,-4.525346,0.189364,-6.365665,8.976724,4.312790,2.648655,-5.555405,-8.055392,-7.602766,3.136516,-4.703533,7.403363,-4.847137,-8.301761,-6.500096,-4.814638,-3.695628,-1.953536,7.709878,-8.514644,6.555191,0.054179,1.348236,8.402497,7.581956,-0.124350,9.755278,7.768101,8.776142,8.060119,-7.995553,-5.740939,6.519099,6.333407,-6.999304,-0.048272,-7.394273,-9.359811,1.287497,8.202533,-7.075646,-5.793643,1.255781,7.140805,6.231440,6.666110,-6.407438,-9.078351,-4.968664,-4.088783,8.569439,-0.142146,-6.633425,2.219254,2.840663,-9.757987,1.722861]], dtype = "float64")#candidate|980|(12, 140)|const|float64
const_981 = relay.const([6.636098,7.809389,-7.741272,-2.304791,-5.068429,-6.889241,-5.158380,7.594511,8.425079,8.680071,5.219659,-7.804137,-2.936465,5.929108,-4.745086,-9.288515,1.014675,-7.827180,2.435220,2.897535,0.748922,0.175240,0.576421,5.208020,-6.686071,-9.897899,5.393367,-5.917875,-2.901079,7.349712,5.521293,-9.739916,-4.516815,-5.045532,4.847109,0.781791,-6.960801,-3.521542,3.696558,-2.583052,-5.458981,4.166849,3.213262,6.784321,9.761433,8.363817,-1.419579,-9.225184,-6.576558,8.479093,-1.729650,3.768956,9.867661,-1.349676,0.933121,-2.490395,4.525721,1.911514,6.386534,-2.584718,7.904461,-4.958264,4.015594,-7.019208,8.583977,-5.875966,-6.223458,-0.410926,2.120868,-5.233806,-9.616720,3.311909,6.123768,-3.628972,3.745667,6.382986,-3.188319,5.017723,-2.719246,-7.268993,0.330965,8.026597,-4.153396,0.037425,1.652819,-1.949928,-4.845685,1.375589,-4.591911,3.068981,2.239616,-8.141334,-5.544179,6.598864,-9.571667,-7.887037,-6.466171,3.423681,-3.101069,9.733860,1.529764,1.822644,6.703132,1.454771,-6.205663,1.867219,8.957982,-6.708637,7.112874,1.956477,3.556180,8.042811,5.708399,-4.112956,7.227214,5.499857,4.704210,7.489026,-0.611360,-4.594514,3.027178,-3.250584,9.070979,-5.102966,-5.819817,-4.387264,5.588027,-0.861986,0.379636,-5.730302,-9.027773,8.421395,-4.918151,-2.251091,5.623586,-8.628151,-7.929446,3.638130,9.434024,9.823625,1.844651,8.700459,1.408711,-8.299169,-9.955387,-2.523317,-4.794756,-9.140184,-2.037161,8.188503,2.133240,-1.473604,-2.176963,5.310266,6.951716,-6.042651,8.252355,6.232813,2.588981,0.585698,1.213963,-9.049882,4.886155,-2.613056,8.916845,7.303962,1.376360,-7.602122,9.046730,1.920380,-9.434941,-0.042268,7.486962,3.146102,0.148515,-4.654806,-0.419296,-9.662664,2.215581,3.282660,0.505911,0.650829,-4.712205,-1.608165,-8.618998,-7.946603,4.351110,-0.348474,-0.171061,7.836051,-7.880308,-9.103725,-7.552031,-5.667060,-6.357142,-9.963089,-9.263340,-9.040116,-2.367580,-2.717229,6.477292,3.715358,8.026623,7.345125,2.402712,9.918087,2.848604,-4.300076,7.098307,6.631705,-0.028111,9.022665,-6.665040,6.116448,-2.345715,9.619154,-6.814365,4.990038,-8.955676,-7.447906,6.513959,2.380048,4.634656,7.482775,-6.636641,-0.991884,-1.052671,2.252699,-8.723546,7.367154,-6.501548,-2.863636,-8.461728,3.379756,-8.196777,-8.155733,2.088653,-9.576080,-1.059423,5.167266,8.251507,0.595937,4.201806,-0.676333,-2.892387,1.392998,-4.930260,3.257230,3.811022,1.810930,-0.117687,8.068949,2.152335,8.739844,9.193651,-7.540538,-6.950361,5.620752,-4.749983,2.983528,0.453506,2.617679,-7.257628,-2.204388,4.266949,-3.228420,-8.287097,-1.584433,7.909790,0.854818,-5.771601,1.453270,3.216144,2.881978,-6.897035,-4.580566,7.006592,5.966760,9.638228,6.084249,2.676904,-3.688973,1.688877,7.048062,-6.149144,-4.781440,-6.201920,-2.877875,-9.791507,0.712340,-6.139547,-1.340663,-6.368789,-9.911767,-8.433848,-6.172374,3.742342,2.577615,2.305412,7.886529,7.313556,1.101696,-1.033235,7.106304,8.643395,7.585664,8.980014,5.718002,-0.062707,7.138764,4.294963,-3.652661,-4.913067,5.842913,5.246713,-4.548261,-6.354724,-9.163662,3.152778,5.344650,3.724645,-6.049118,5.217630,-3.330359,8.505440,-4.567945,7.324998,9.515622,-5.702696,-9.827349,-7.888641,-0.952812,-2.298271,2.618983,-1.838608,-2.873022,4.926628,-1.775472,-5.916888,-9.636249,-8.157196,-8.650530,-8.790038,-0.660257,-1.524859,-2.050447,4.958037,-3.599517,3.852260,1.836986,-1.409334,0.793125,-9.181616,-3.731766,-2.813105,5.835792,1.463854,7.068661,9.615041,-5.408181,-2.600249,-3.423522,4.215143,9.954509,-8.409030,1.186295,-2.392289,9.571541,-4.935819,3.532728,-1.202764,-3.999221,-8.020575,8.606018,4.234533,2.458950,-0.699543,5.093155,-7.575817,2.770549,4.419801,-7.636687,8.201170,-3.764698,4.792890,6.519710,-8.885189,-4.447283,5.098885,9.463007,0.486361,-1.179471,-4.222766,-2.842730,-0.409969,-6.372001,-1.509253,5.586724,-6.647037,5.638712,4.846234,8.507613,-4.866699,-2.537505,-9.267160,-7.817789,-5.052241,9.303668,-9.280288,-5.733231,4.133909,-5.242569,2.566694,-6.843130,-6.421328,6.211493,-6.939762,3.096781,-0.673491,-6.103104,0.712184,2.555327,6.954693,6.952223,-1.216509,-0.338376,-5.610283,3.565058,-9.784080,1.076723,7.123556,-4.542087,3.946814,1.533914,1.419084,-3.528835,-4.935382,-5.396672,8.035238,-9.372574,1.405034,3.618113,1.625522,6.526173,-9.175238,-8.421029,-8.002604,7.209450,5.545611,8.911339,-3.984502,5.731438,4.002842,-3.580837,0.335319,-2.790869,5.090771,-8.766763,-6.264003,-0.786875,-2.127624,7.872608,1.444069,1.801215,2.499466,6.640550,-2.617020,-9.076668,8.968369,-8.893660,3.985320,6.636903,4.579450,-9.510703,-5.662250,-0.494267,4.154171,9.444368,2.832328,9.127152,9.730185,-5.521759,-4.369991,-4.370662,-0.283348,-7.613722,7.574522,-1.590275,-2.451859,1.969768,-1.197046,1.497194,0.151362,-5.838404,1.158987,5.763221,0.358038,1.892924,-4.098337,2.571020,-4.004020,9.913844,0.006873,-4.461891,-6.476049,-7.827133,-5.172049,-3.892776,-9.417080,-2.936769,5.814501,7.880197,0.989429,-4.923093,-8.098461,-4.886128,5.319297,-9.423345,-6.225469,-3.936240,-4.359265,7.869874,3.727030,-4.779734,-8.459055,3.470157,-1.639203,-3.602985,5.077388,-2.070015,-0.365864,1.680154,-6.337534,5.990439,-1.299003,9.913595,-6.049374,1.546030,-3.915222,-0.069494,-0.636125,-0.698237,-7.937003,8.089872,4.854429,2.897005,-3.029897,-2.625520,-2.854328,8.445544,4.299454,-7.797051,4.954500,8.714431,4.142639,1.604499,-9.328765,2.267524,-8.634797,-5.351961,-3.927215,-4.724367,-5.785704,2.957152,-2.439251,-9.729989,3.066521,2.606221,-7.535085,-9.649856,-0.046902,-2.576824,-4.904359,3.257608,-2.855194,-0.155842,5.661008,0.466222,0.030208,9.368936,-9.282391,-4.946393,-3.999915,-9.602887,-3.017267,-9.735671,-1.724166,5.598167,-9.419777,-2.445923,8.966961,4.339656,4.542908,-3.085372,0.517880,-7.994196,3.788650,8.948572,-5.388165,4.185609,7.706367,-6.391239,-2.492227,-5.957738,-6.967518,2.872314,0.873548,7.114860,8.991016,-3.955872,6.664933,-7.995938,7.167293,-7.942541,-2.532899,-6.417916,6.337211,0.336423,1.134460,4.910686,-6.347077,5.765342,7.270868,-2.311493,-3.031841,-9.313436,4.625170,7.047761,-2.487618,2.392597,1.538453,-1.310190,-1.817145,-7.346116,2.023977,6.169128,-2.256518,-5.905257,0.474483,-9.060044,9.636779,9.331984,-0.943500,2.915716,-9.686860,5.132893,-6.471036,3.016908,4.927011,-2.666388,7.575748,8.853433,-1.137628,9.309666,-4.860707,-9.427522,-6.291745,3.119103,-8.588696,-2.458442,9.571110,-4.214266,3.566349,-0.704584,4.502794,-3.717373,-6.036380,-4.597416,8.876626,1.294389,9.333588,7.899993,0.118182,-2.532291,1.457378,5.934873,-4.257673,-0.596549,3.507482,2.725310,-7.596110,0.151755,5.698584,5.590091,7.585854,-5.528002,-6.241052,6.484849,-7.376277,9.124631,-7.107662,-4.389876,-9.940660,-5.168751,9.577418,-0.930236,6.963968,1.049018,2.242133,0.107205,8.062876,-8.293050,3.142567,1.521225,3.694139,1.376004,1.715163,5.113654,8.262348,0.263653,1.035983,-0.137220,8.410805,2.671961,-7.236757,-4.996990,-3.670416,-0.910437,-8.019301,-1.515519,-1.128421,8.249587,8.314639,-8.132376,-6.554814,-2.222942,8.195131,8.625408,-7.961535,-1.480096,6.790947,-4.937175,7.346472,-4.318198,-3.687211,7.366006,-9.741140,9.280129,8.866030,-7.740437,2.933805,3.720476,8.100348,-7.857936,6.407422,9.261318,8.304303,1.382781,-0.708597,-1.871213,-6.643900,2.489975,-2.351092,-8.462214,-6.056341,4.846063,6.698821,5.141604,6.963567,-1.337838,-2.880373,-4.714775,7.442456,-5.866768,8.878576,9.914526,-5.207010,-1.189677,8.889629,7.224407,-5.052723,6.860167,5.902935,-2.445873,-0.406010,-8.680773,-6.951594,-4.484531,-2.806104,1.789724,6.268696,6.554863,-1.717407,-2.644766,-6.963527,8.438848,6.129887,7.111106,6.303869,6.854160,-9.908842,-3.101829,-6.040628,3.241318,3.374244,-9.432417,4.444587,8.606475,-0.488367,2.376270,1.212832,3.331506,5.248813,6.920284,-4.018175,6.609984,-4.227191,-6.169079,-9.188039,2.881586,-1.176170,4.077300,4.070607,1.942733,-0.070708,4.060609,-7.691595,-8.326946,5.019191,-7.711006,9.216273,-3.684775,-7.757728,-2.349977,-4.571675,-4.872846,-9.695626,-1.108131,-3.822230,1.514806,-6.914677,-3.056501,7.632327,4.395052,0.561916,-3.870452,0.913275,-1.722908,2.479038,-6.888530,4.398645,6.674524,-3.058620,0.276288,7.314772,-5.510789,3.452303,-8.901096,8.981160,8.718387,-5.428017,1.654581,5.193193,2.514711,5.771398,-8.092397,-5.399223,-3.102885,-4.467096,-5.096050,-9.914709,5.915421,7.473503,-9.211800,3.686516,6.764814,3.510815,2.674459,5.319057,-3.802496,8.392617,5.381545,-8.612504,-6.888248,6.581317,-5.106211,0.762252,-7.921364,-9.955611,-0.369287,-8.614398,9.255689,-2.730616,-5.374314,4.770703,-1.363278,-0.150024,-1.798775,8.232053,2.434220,8.334412,-4.731883,9.392266,-4.100238,9.597918,-3.295663,-1.745514,-7.581328,-9.048940,-7.245477,2.848404,-7.504849,-3.923853,-2.422185,-0.976061,2.977166,8.566955,-6.400807,-5.565186,-6.981254,4.782233,7.298019,-7.301613,2.851242,7.321615,-7.619912,-7.243646,-4.120612,-9.411555,5.468687,-6.515775,-5.272091,-3.398569,-3.336813,6.496860,5.015341,1.983411,3.131958,-8.569539,7.631262,-9.772878,-7.313089,-7.156255,-5.716018,4.801839,5.014255,-4.261048,9.515987,1.650619,3.104751,9.056287,4.658405,2.543330,-2.479435,4.510659,3.705295,-3.316953,6.918685,-5.010799,6.466880,3.230001,2.909296,-2.777670,-5.426826,6.259902,5.052534,-4.766907,9.064748,8.990974,6.797987,4.197306,-5.500496,-2.916686,6.646103,3.011867,-4.609079,8.841600,-0.692063,8.719624,3.923116,-4.000999,9.832991,-4.079321,1.474792,-0.428112,-7.275726,6.268296,5.041933,-9.489710,3.569844,3.444620,-3.373221,8.962971,5.174751,-0.687229,7.781039,3.869191,6.700065,-1.094381,2.399711,-9.644970,-3.235464,-7.458812,0.193433,-5.749726,6.013333,5.529408,9.514296,-9.657781,9.854526,8.494743,-8.616946,0.689913,-0.307418,-4.187250,-4.530158,-6.367803,-5.635792,4.501794,6.280547,-5.839972,8.616827,5.620078,0.651171,1.858955,-3.940506,4.981427,5.337301,-1.396814,-0.003953,3.705773,8.787124,-7.366407,3.857093,-5.933448,1.735390,2.374117,-4.306908,2.082475,-1.794470,-4.886848,-8.427439,4.084880,-7.738864,1.781351,-0.279616,7.922084,-1.730235,-4.380279,7.517822,9.085318,1.063802,-7.054434,1.115887,6.176318,-4.225176,-5.225819,-8.277086,4.476694,3.863819,1.978601,2.305365,-9.134629,-5.375728,5.163337,7.603722,3.847372,6.740697,-7.050901,5.379221,6.016223,2.000543,-6.997159,4.255741,-8.353975,9.684983,5.351815,-3.725353,-4.326462,-3.853632,9.577210,-9.005181,-5.488379,-1.522338,-9.084211,6.991640,9.026940,2.023111,-4.604976,8.599410,-0.178490,-2.649169,-2.723559,7.289347,-6.978774,-7.295335,2.980211,-7.567188,9.444219,-3.112556,-5.897693,9.477184,-4.313706,-9.299968,9.300302,6.048939,-4.996845,2.803186,-1.749463,1.231227,-2.739760,-7.908759,3.751833,-5.830145,4.642635,-8.893344,-9.132942,-1.960434,6.439153,4.692289,-2.365593,-8.140819,-7.952702,5.725957,-5.893304,6.185298,1.860436,-7.481876,-7.033172,6.013038,9.669001,-4.633341,7.214529,-6.785781,3.021592,3.741007,-0.207567,-3.236510,-5.990879,9.793160,-2.765203,7.504004,2.546864,-1.893621,-7.149406,2.761458,-1.040513,4.022280,-9.516563,-4.900625,2.475723,-6.027339,7.631825,3.716576,-6.206993,-3.343515,7.410940,-9.844157,9.542803,0.927297,-9.631561,4.733759,-5.712272,-5.640783,-0.007115,-2.462831,9.343303,5.598421,8.294179,-6.971657,4.214609,-7.778852,-2.022675,0.488140,-6.112669,-3.010527,-6.128094,2.728618,-4.847107,6.534552,-6.879616,6.507050,-3.946522,-8.410006,7.173602,-9.841661,6.166027,1.742502,9.953347,6.632405,9.676427,1.773729,9.778642,-1.634835,-3.428235,-6.922232,3.621688,-8.529186,-9.070660,9.511312,1.127976,-5.508731,2.464114,6.076682,1.561170,-2.353162,-7.663962,-0.174336,-8.108051,1.014870,-0.854245,7.940383,7.452547,-3.529192,-2.487850,8.900903,9.202276,-5.231044,-0.766643,0.135984,-9.994222,-1.012681,5.180890,-9.835166,-2.760008,6.614568,1.277928,-4.322578,-8.978006,-4.236562,4.701919,7.101479,2.169530,8.949032,1.939095,5.814220,-9.491712,-8.097566,-1.627838,3.150950,-8.925644,-0.904897,1.110821,8.475506,3.198493,-9.742940,1.042890,4.364255,8.841958,-4.279649,7.257672,-6.701280,-9.334235,-2.385500,5.233308,1.631797,-4.894819,2.573936,-9.062981,7.830232,-8.900553,-9.293422,5.425881,-8.617290,-4.718435,3.856967,2.134044,7.880759,-1.723842,-8.825476,4.666481,-7.958610,3.183549,4.140261,-0.256161,4.805486,-2.708394,-5.310847,8.344100,-6.512693,-5.894139,-3.801797,6.915389,9.316901,1.994536,3.686010,9.337479,-3.211997,1.542138,-5.218872,-1.648626,-5.152934,-2.455898,0.307420,-1.228379,7.647549,5.185317], dtype = "float32")#candidate|981|(1287,)|const|float32
call_979 = relay.TupleGetItem(func_348_call(relay.reshape(const_980.astype('float64'), [8, 14, 15]), relay.reshape(const_981.astype('float32'), [143, 9]), ), 2)
call_982 = relay.TupleGetItem(func_352_call(relay.reshape(const_980.astype('float64'), [8, 14, 15]), relay.reshape(const_981.astype('float32'), [143, 9]), ), 2)
uop_986 = relay.acos(call_979.astype('float32')) # shape=(143, 9)
uop_988 = relay.acos(call_982.astype('float32')) # shape=(143, 9)
uop_995 = relay.log2(uop_986.astype('float32')) # shape=(143, 9)
uop_997 = relay.log2(uop_988.astype('float32')) # shape=(143, 9)
bop_998 = relay.bitwise_and(uop_975.astype('uint16'), relay.reshape(var_974.astype('uint16'), relay.shape_of(uop_975))) # shape=(5, 1, 6)
var_1001 = relay.var("var_1001", dtype = "float32", shape = (143, 9))#candidate|1001|(143, 9)|var|float32
bop_1002 = relay.less_equal(uop_995.astype('bool'), relay.reshape(var_1001.astype('bool'), relay.shape_of(uop_995))) # shape=(143, 9)
bop_1005 = relay.less_equal(uop_997.astype('bool'), relay.reshape(var_1001.astype('bool'), relay.shape_of(uop_997))) # shape=(143, 9)
bop_1008 = relay.floor_divide(uop_995.astype('float32'), relay.reshape(const_981.astype('float32'), relay.shape_of(uop_995))) # shape=(143, 9)
bop_1011 = relay.floor_divide(uop_997.astype('float32'), relay.reshape(const_981.astype('float32'), relay.shape_of(uop_997))) # shape=(143, 9)
uop_1016 = relay.cosh(bop_1008.astype('float32')) # shape=(143, 9)
uop_1018 = relay.cosh(bop_1011.astype('float32')) # shape=(143, 9)
func_502_call = mod.get_global_var('func_502')
func_507_call = mutated_mod.get_global_var('func_507')
var_1022 = relay.var("var_1022", dtype = "uint8", shape = (273, 1))#candidate|1022|(273, 1)|var|uint8
call_1021 = relay.TupleGetItem(func_502_call(relay.reshape(var_1022.astype('uint8'), [7, 13, 3]), relay.reshape(const_980.astype('float64'), [1680,]), relay.reshape(call_979.astype('float32'), [1, 1287]), ), 0)
call_1023 = relay.TupleGetItem(func_507_call(relay.reshape(var_1022.astype('uint8'), [7, 13, 3]), relay.reshape(const_980.astype('float64'), [1680,]), relay.reshape(call_979.astype('float32'), [1, 1287]), ), 0)
output = relay.Tuple([const_980,bop_998,bop_1002,uop_1016,call_1021,var_1022,])
output2 = relay.Tuple([const_980,bop_998,bop_1005,uop_1018,call_1023,var_1022,])
func_1024 = relay.Function([var_974,var_1001,var_1022,], output)
mod['func_1024'] = func_1024
mod = relay.transform.InferType()(mod)
mutated_mod['func_1024'] = func_1024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1024_call = mutated_mod.get_global_var('func_1024')
var_1026 = relay.var("var_1026", dtype = "float32", shape = (5, 1, 6))#candidate|1026|(5, 1, 6)|var|float32
var_1027 = relay.var("var_1027", dtype = "float32", shape = (143, 9))#candidate|1027|(143, 9)|var|float32
var_1028 = relay.var("var_1028", dtype = "uint8", shape = (273, 1))#candidate|1028|(273, 1)|var|uint8
call_1025 = func_1024_call(var_1026,var_1027,var_1028,)
output = call_1025
func_1029 = relay.Function([var_1026,var_1027,var_1028,], output)
mutated_mod['func_1029'] = func_1029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1237 = relay.var("var_1237", dtype = "bool", shape = (4, 10, 4))#candidate|1237|(4, 10, 4)|var|bool
const_1238 = relay.const([[[False,False,True,False],[True,True,False,True],[True,True,False,False],[False,True,False,True],[False,False,False,True],[False,True,False,False],[False,True,True,True],[False,False,True,True],[False,False,True,True],[False,True,False,True]],[[False,True,True,True],[False,True,False,False],[True,True,True,True],[False,False,True,False],[True,True,True,False],[True,False,True,True],[True,False,False,True],[False,False,False,False],[True,True,True,False],[False,False,False,True]],[[True,False,False,True],[False,True,False,True],[False,True,True,True],[False,False,False,True],[True,False,False,True],[True,False,True,False],[True,True,False,True],[True,True,False,False],[True,False,True,True],[True,True,False,False]],[[True,False,True,True],[False,False,False,True],[False,False,False,True],[False,False,False,True],[True,False,False,False],[True,False,False,False],[False,True,True,True],[True,False,True,False],[False,True,True,False],[True,True,False,True]]], dtype = "bool")#candidate|1238|(4, 10, 4)|const|bool
bop_1239 = relay.logical_and(var_1237.astype('bool'), relay.reshape(const_1238.astype('bool'), relay.shape_of(var_1237))) # shape=(4, 10, 4)
output = relay.Tuple([bop_1239,])
output2 = relay.Tuple([bop_1239,])
func_1244 = relay.Function([var_1237,], output)
mod['func_1244'] = func_1244
mod = relay.transform.InferType()(mod)
var_1245 = relay.var("var_1245", dtype = "bool", shape = (4, 10, 4))#candidate|1245|(4, 10, 4)|var|bool
output = func_1244(var_1245)
func_1246 = relay.Function([var_1245], output)
mutated_mod['func_1246'] = func_1246
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1433 = relay.var("var_1433", dtype = "float32", shape = (2, 1, 6))#candidate|1433|(2, 1, 6)|var|float32
uop_1434 = relay.log2(var_1433.astype('float32')) # shape=(2, 1, 6)
func_348_call = mod.get_global_var('func_348')
func_352_call = mutated_mod.get_global_var('func_352')
const_1437 = relay.const([-3.352752,3.446578,-8.852879,-4.681002,4.562341,-5.343674,-6.445273,-8.607838,-7.115290,6.518016,-0.841239,-0.194742,6.177284,-8.685771,8.699788,-8.029221,0.933467,-1.338916,-9.057566,-7.673682,0.112828,9.834036,0.140112,5.174605,-3.975443,-9.868666,3.983377,-1.272560,3.924594,7.484776,-5.712868,2.729815,-3.001559,1.184755,-2.136152,-0.474096,-9.927909,3.627384,0.827534,8.728769,-7.129176,-6.363953,-6.149873,-9.503776,-2.535758,4.893073,-6.113808,-9.096670,-8.227895,5.468285,8.860950,-4.672462,-4.318938,3.797841,-9.425301,0.125758,6.403108,8.760590,-0.273372,0.201328,2.773497,9.840213,8.557088,-7.012274,2.676886,-3.604207,5.389189,-7.232002,0.048203,-3.709818,-2.252482,-5.153302,3.896869,-0.557380,9.345363,-2.310865,-8.485459,-7.475633,0.892348,4.839526,0.150864,-9.711852,-0.336794,-0.653361,-2.867701,-7.312010,-3.516046,-9.054641,-0.129161,-6.126950,1.951837,-7.838111,-9.762966,6.155229,-4.354265,3.821656,2.422223,-5.373701,-5.277452,9.234692,6.768933,-5.075788,-5.007956,-8.690057,6.938845,-4.374214,6.807174,-7.303382,-4.968295,-7.319508,-2.324880,-4.850480,8.558198,7.528152,1.691699,-5.352847,-0.835826,-6.209789,-1.925260,5.379666,4.377670,-4.863207,3.410383,2.047718,-9.339667,-9.782617,8.155916,-5.683515,6.925567,-0.766656,-3.661409,-1.099345,6.944449,2.869106,6.413439,6.381068,3.667584,8.773555,-4.295755,-4.289535,-2.542795,7.167609,5.801131,-6.648938,-9.226761,6.718363,-5.680076,2.029504,-9.396576,2.499057,-1.039404,9.930830,-2.557311,-6.143106,1.736253,5.104299,9.225503,2.175588,3.952720,6.801143,-4.751700,-5.332085,-5.489121,4.411315,1.682551,-5.250351,8.928972,9.923233,6.404504,0.339405,-2.279984,-3.632507,8.956601,-6.367452,-7.995314,-7.551734,-4.751465,5.343556,7.926713,4.367498,4.386973,-4.195924,3.610856,-4.157196,1.379466,6.724287,-2.649912,7.803275,1.899335,-4.039178,3.804688,9.029702,-6.442022,5.951350,4.500050,-4.642598,-6.461810,3.978607,-0.507939,-9.182939,8.316258,1.363534,-8.350661,-4.346559,-9.135451,7.469420,0.238936,4.890811,5.577583,3.720271,4.819548,8.130757,-2.640575,-7.769927,-3.503609,-8.037099,-1.815483,4.458250,-9.309247,5.543272,8.881764,2.657722,0.783970,-4.190561,9.772457,3.784902,4.966209,-5.425841,0.906118,-1.985909,-1.014263,-4.135759,-0.242506,3.623227,9.944178,1.753699,4.960114,4.706670,1.432289,5.129819,-8.353206,6.627179,4.007409,1.702780,-4.991949,-0.781735,1.563483,-2.627683,-7.660933,-1.777819,-5.024162,-7.080207,-3.106288,-2.092606,9.702508,-5.793983,-9.824439,4.882604,-7.871258,-8.892728,-9.748364,4.745573,9.813465,0.451310,2.302270,6.134862,6.536599,4.933793,-4.341030,3.731352,1.962038,7.324078,-7.750189,2.948606,1.758581,4.725558,-8.425656,1.191988,-9.762997,2.086329,4.479293,3.747107,9.802933,-5.345849,-0.046721,5.279479,-8.633612,5.391815,-1.052213,2.086581,4.623793,5.441208,5.001186,1.030680,-5.712891,9.979049,-7.212980,-2.913127,6.488178,0.018093,5.844292,7.570229,0.819877,-8.568324,8.881296,9.092775,-8.716967,-7.928347,-4.839223,-4.779977,-4.970044,-7.937884,-8.615736,-8.021378,0.599948,-9.723691,7.120187,-3.393775,-6.244889,-5.882483,-4.464744,-8.464936,-4.436422,-3.242382,4.427685,5.331477,-0.696549,-2.512217,1.290649,-9.462758,-5.466796,9.488635,-1.328704,-3.863466,-0.079364,-5.806025,-6.667825,0.257603,0.839419,8.381088,-6.685491,5.346435,-0.257439,-5.305821,-1.450984,3.895079,0.289900,-8.552519,-3.102402,-5.262983,3.617756,-3.243358,-2.955831,4.226046,5.806825,-3.403404,6.874378,7.940421,0.412278,2.610558,-8.287348,-9.260078,9.873276,-1.871771,9.219202,-1.461003,6.525413,-6.852659,7.064714,-1.949988,1.574166,-7.065534,-6.844704,-2.662413,4.689192,5.674480,-0.335423,7.791759,4.903962,-1.459314,2.928260,6.908840,4.838570,-1.564936,8.724016,8.620548,3.148870,-4.093363,4.412791,4.117289,-2.286182,0.291348,-2.281033,9.648829,-4.080795,-2.191110,-4.520553,-6.292930,5.701137,-2.831862,8.506755,5.108387,-1.320260,-5.528015,8.172523,-2.565301,7.413339,-2.851138,4.582827,6.573188,9.543920,6.389875,3.566074,9.542020,-7.460828,-7.963236,-1.777758,-3.133871,2.423399,-8.669862,-8.350430,-5.227285,-1.556456,5.709858,-4.521116,1.277557,-9.299763,-9.950356,7.197787,-5.119658,1.831496,1.870537,8.992235,-5.102339,9.876298,3.762735,-5.899669,9.895520,-8.329820,-5.950101,3.900865,5.320161,-6.722646,2.356911,1.343448,2.874776,-1.044477,-3.027370,-6.564479,-1.642946,-8.768611,6.582496,-9.997542,1.460167,0.839481,0.029611,-3.178609,-4.557635,-5.414340,-7.750641,2.858574,6.366169,-3.838455,0.061523,-3.678359,-8.507321,1.528138,3.418958,-9.710504,1.790537,-4.526473,-8.198238,1.509659,5.645680,3.978568,3.115507,2.544780,-9.870842,9.782494,-1.079641,-3.809584,-8.983635,-4.704729,4.018988,-8.687024,-4.996216,7.288388,4.153804,7.556297,6.354934,-5.033834,-2.672552,0.380559,-5.198853,-0.144503,-6.310961,3.589182,6.542274,9.911310,6.007397,0.852318,-7.823172,-6.016235,8.813931,0.440326,-4.570666,2.198096,1.422437,-8.084603,1.701520,6.223836,4.944094,-1.787458,-7.473982,1.753080,-2.691566,-9.022373,7.598103,-4.330876,-5.482485,7.578702,-2.805520,0.014018,8.047292,9.234101,8.213046,9.176458,1.278040,2.517775,7.539330,9.865412,8.357725,-2.265161,8.668113,5.593451,-1.679006,-8.551022,1.894510,2.857207,4.939084,-6.368116,0.949597,5.561360,6.275287,-8.093067,7.671801,-8.871994,5.781108,-6.866529,-7.478057,6.350324,-9.954835,9.927782,8.183474,0.950358,4.335991,7.287512,4.067869,8.227024,5.960640,8.219032,-3.313683,8.572340,-1.293901,-3.975716,9.321320,-7.733226,6.906365,-2.530235,-9.930767,-1.247178,9.081276,-6.076769,-1.725491,9.258407,8.140173,2.386614,2.678211,-1.751822,-1.033193,-9.773670,-2.491152,8.909313,-9.896512,-8.069461,6.729689,-5.605795,2.375294,5.142036,-1.116435,3.740570,1.157984,7.704676,-1.435977,6.792263,-9.672269,-2.628571,-7.157319,8.840561,9.681770,7.075453,-3.779114,2.731345,-1.628986,8.903358,-7.425549,-1.512535,5.960036,-2.313670,1.922547,-7.901117,2.285573,-3.758504,5.184011,-9.099821,-9.941497,3.241079,0.463128,-1.661555,-6.428123,-1.836692,-5.345127,-0.114817,2.821967,3.790967,-2.366029,-2.752396,1.567836,1.859735,-8.074697,1.889582,7.137053,8.113659,-0.915720,-4.419887,-1.636588,3.324151,-4.179866,-3.419433,-5.033551,-3.496741,-6.444966,-9.723634,-1.860495,-0.965962,0.238737,5.167520,-1.711647,7.600217,-4.908062,7.969179,-7.037227,1.954839,4.735747,-3.071910,-7.548957,-6.544906,-4.422658,-1.578043,0.555421,5.727255,-3.329242,6.853042,-6.799437,1.317221,6.157089,9.607530,7.272830,-8.518247,-3.642691,-8.481387,2.576585,2.523645,6.365288,-6.477403,-4.289809,8.359965,-9.449680,-8.879113,3.897118,9.326484,-6.268863,7.020541,-5.859539,-3.377787,-4.557343,9.349040,-9.889994,7.207419,-1.953782,-4.555843,-0.202371,5.157364,-3.950519,3.870679,-4.381623,-2.391777,9.407423,-0.187843,4.430349,-4.196959,-1.474730,-3.947767,2.988455,-1.114933,5.808091,-9.400071,0.314396,0.099410,4.047980,5.525268,3.979504,9.411484,2.003047,-6.196414,-5.611286,3.564605,-5.131111,9.988530,1.813809,1.866865,-2.093342,-7.239880,-3.694976,-1.652827,-6.064935,7.505503,5.058883,-3.247483,-4.437880,-0.034411,-7.593933,3.788368,4.395367,-5.651494,6.034981,4.095196,8.786476,6.698116,8.136732,-2.218595,5.622976,-7.167902,-1.223158,-7.490945,1.307753,3.998969,-3.094285,2.243310,-7.731453,-5.949746,4.969861,8.254982,-9.999322,-1.062471,-7.635352,8.181456,-2.880893,8.522137,1.527801,-3.561926,-4.883446,-7.260726,-4.716599,-5.644147,6.468408,-9.549048,-3.301633,5.212450,-9.567414,8.587817,-1.158150,4.536639,-2.156330,1.690410,-1.695628,-8.384880,-6.088851,2.269125,-2.165953,8.434251,-6.380367,6.519682,8.899723,9.763227,-8.199334,2.247866,-6.069419,-0.913736,4.992095,-4.790029,4.315031,-2.104603,2.519635,-1.691735,0.177270,3.765196,-6.599042,-2.906401,0.781018,9.447201,-5.281881,4.285345,1.397741,1.184944,1.036094,-3.154459,9.096167,-0.856575,-1.267687,-9.763586,-8.288907,-4.185828,-5.750430,4.414569,-1.040150,-8.205376,0.003283,5.551142,9.158056,2.094804,-3.901900,7.906747,-5.946560,-1.510896,-9.955431,-4.769820,-2.082227,7.998335,4.418693,0.819328,-0.976844,9.318959,6.787947,-4.686625,7.467315,0.279073,-4.578225,2.117751,3.810290,9.592037,6.892387,-5.429534,-0.039736,-8.459743,-9.978640,-7.219505,7.813994,-5.059123,-6.793162,9.741204,-3.761412,-5.149750,5.394262,6.768843,9.273122,0.184522,-2.114462,3.297859,6.177812,4.789944,1.724399,-1.639276,2.310878,9.512541,-2.563571,6.233549,7.354745,3.409389,-5.956459,5.828925,2.580426,-0.886446,4.320332,2.031429,3.894788,-6.861872,-2.291526,-9.638964,-5.822778,8.293457,-5.929863,1.759900,-3.589783,8.624147,-1.291345,7.117950,1.542213,8.844662,4.367840,9.667469,6.799192,0.757960,2.630586,8.705132,9.223132,-8.239079,-7.737628,4.767326,-8.370558,2.349859,-3.144316,-2.479847,-7.272320,-4.502000,-4.134313,-1.239070,2.814905,3.514119,7.234971,-7.733801,-6.373544,4.417806,9.849751,9.376212,5.782674,-0.506130,6.409498,0.363721,-0.294414,3.548314,3.638287,5.345166,5.323478,8.058252,6.567611,1.171991,-3.681906,-9.494946,-5.163256,4.627428,-9.512700,1.038377,3.133349,7.456457,-8.176797,-6.998723,3.222669,-7.043051,4.926885,1.243781,-8.793630,-0.004430,4.093978,-8.173734,-3.556111,7.489497,4.504442,7.882110,5.518478,-4.789884,5.302577,-6.140573,-0.834851,-0.729767,-2.982214,0.388453,-2.390332,-5.109583,-9.189250,7.992662,-4.859956,-7.727512,3.462384,-2.695582,-0.050730,-1.366028,-4.930899,-1.926945,-0.453234,-7.228084,3.066406,0.048798,4.235047,1.280031,-0.699000,-2.936075,-4.661377,-0.232179,-9.443080,-8.838229,1.948739,0.272891,6.342894,8.780547,-5.999546,4.831699,9.194647,1.733008,-9.150844,-7.511455,-3.818422,5.701917,7.668796,-6.954487,4.054246,5.825561,-7.827821,-0.964921,-9.117786,2.792487,9.208950,-7.334331,1.255034,4.207556,9.132891,-8.868570,-8.012644,-9.778829,9.327901,-9.353859,9.770179,2.504867,-2.478119,-0.420137,2.059972,1.219043,-0.642515,5.310264,1.970113,3.190200,9.919072,-9.858004,2.226520,5.915936,-6.147356,6.962063,5.163600,3.464692,-2.809066,4.601786,2.007678,-7.081926,-5.670935,6.049071,-8.063023,-8.441382,-1.178106,-2.842628,3.158866,-3.630292,0.705708,-2.842269,-2.976192,-9.959494,3.090430,1.687391,-1.387516,-8.614564,6.941331,-8.193071,-8.471306,3.075303,-8.520171,-6.329643,-2.550355,9.768797,2.468111,-9.287740,2.032063,-9.182150,-8.885556,4.923018,-2.082293,-1.588142,9.911882,0.141766,9.747943,-0.486470,-2.626967,-2.609194,2.569644,-9.235052,3.855345,-8.580315,7.388524,7.689811,-1.154607,-1.038746,-0.462388,2.416001,-3.027829,9.942082,3.409047,0.879103,-7.571516,-2.643010,9.511445,-8.541186,-4.873803,5.426886,-2.547904,0.657740,3.704640,3.399308,-9.174018,4.363392,5.341927,8.049523,-0.791717,6.902387,-6.128799,-7.691770,-5.268231,-5.497506,4.965414,0.643266,-0.440135,1.724615,-9.925509,5.769538,2.187294,2.484569,2.585614,9.664330,9.399397,-4.909119,0.795046,9.152111,-5.664089,-9.904859,0.035908,7.962357,-1.642445,3.910994,5.625332,-0.908569,8.347302,6.756075,-7.967242,-2.141680,0.952592,9.217977,3.154885,3.426770,-5.885373,-8.786950,3.077648,5.903063,-2.934424,-9.480041,9.264888,-1.706057,8.711653,8.350561,-7.529363,4.740842,-4.940732,-0.502380,-7.021043,7.169780,4.603275,-7.934588,6.658708,6.640246,1.270810,6.606827,-9.047222,1.957658,-4.284949,6.470390,5.785126,-5.790405,8.899821,6.247115,-3.418776,-9.056006,-6.647673,-0.659964,-4.806138,5.463087,-4.120876,-8.002172,-3.902953,-7.516235,-2.976318,-5.172577,-4.550689,8.288496,7.337797,4.727588,-5.267456,-2.073213,6.158983,-5.063470,-5.441537,5.080841,4.726491,0.017194,9.326572,-0.753428,2.841430,9.690250,4.027791,7.707684,-1.828005,4.822887,-3.042098,9.289723,-8.684881,0.280181,-5.140482,3.239676,-6.156899,6.048719,-8.657234,0.653397,-0.032415,-6.288456,0.095043,4.128871,-1.235068,-4.993176,-0.177306,-7.038761,-6.644209,1.477626,-8.089292,-6.921983,6.066121,1.601927,5.129049,8.956279,7.383313,5.860342,1.267490,-5.094883,7.157062,-9.079375,9.210213,7.193293,-0.012050,-5.682875,0.839652,4.520805,-6.669122,3.480656,4.977953,-2.184980,-7.983824,6.088220,-3.623748,3.207913,6.850744,4.941958,6.161184,-3.186609,1.964197,-5.516764,2.972031,4.846157,-7.738673,2.949075,9.353627,7.598827,9.176877,6.999433,-2.719186,-6.908365,-7.259249,-2.402132,-7.612642,8.820088,4.834985,-3.827599,6.323409,5.806347,-6.884704,7.577202,-7.367838,1.995191,4.616506,1.868683,-4.383119,4.893190,0.220606,-7.443429,-8.953914,7.712802,7.439591,-3.054141,9.052956,0.501931,-5.969692,0.532198,4.259301,5.512018,3.050687,-9.570472,-3.637019,-4.498155,-6.056151,0.517131,-7.969660,-0.713345,-6.194605,-7.824484,-1.147914,-5.506690,-8.922439,3.999891,-0.575731,-0.635852,2.641573,6.142157,5.920705,2.696136,-3.045337,-5.644033,8.065693,0.607961,-1.411543,2.650136,0.336162,4.601590,4.139601,0.081233,2.609463,5.857369,-0.204579,-9.554452,-5.528326,9.644926,-1.961706,1.832291,8.790471,-8.868279,-2.934315,-1.772759,7.846132,2.820784,3.107961,-3.731100,7.063462,9.344038,9.071358,3.252165,-2.624574,-7.146564,-1.829993,-4.018186,-7.829640,8.541793,0.178117,-1.304873,-6.874038,2.627529,-3.048370,-4.321468,-9.110472,-5.741018,-2.899184,1.447643,-9.165014,5.112945,-3.041131,-0.592841,-9.315579,2.566242,-4.575676,-6.340123,-9.218985,-1.486713,-4.925433,-7.260363,-1.522737,-6.279535,-0.019385,6.130040,5.762448,0.304317,6.108006,3.498233,-4.360175,0.978922,-4.262391,7.214888,8.655302,-3.844719,-5.167704,-9.977051,6.201969,8.818324,8.802616,-7.006075,-4.593191,-7.848753,-3.870567,8.852896,-5.259876,8.601298,7.391230,0.084785,-9.004829,-9.709538,-7.019315,9.361160,3.258310,7.425692,-2.691440,5.190318,-7.710349,-0.689262,3.006705,5.576215,-7.282765,8.123020,8.553267,-0.153918,-8.082762,-1.130733,-9.383859,-3.102225,2.443243,-6.959501,5.912478,-8.880238,6.603429,-9.100273,-8.262429,-3.000146,-9.622639,-7.610587,9.328761,0.129581,1.568550,-1.854352,-9.685042,2.614463,6.071251,2.661709,-4.507284,-2.688061,-8.508346,-7.169490,-9.219300,5.414337,-4.325053,-9.618091,-3.730325,9.047857,6.282730,4.690949,-1.734232,8.380768,-8.824976,6.408766,-6.299795,-3.917991,-4.964374,-3.827151,-5.091733,-6.378996,3.816930,-3.158142,-1.296240,-9.936315,3.252266,3.609334,-5.435330,8.287877,0.371648,9.378957,-9.583627,-3.270978,9.679223,7.845362,-0.676705,-2.561085,-3.031213,-9.401933,5.778308,7.357705,-7.823586,-7.192533,5.903551,-3.378732,-3.977158,6.321165,5.473794,-1.897947,-4.435246,-5.814475,1.982559,-4.586923,0.296714,-9.182976,3.363806,-3.386032,5.218391,5.014947,-5.874730,8.135651,2.674803,-0.871781,1.302777,7.016822,-5.548198,-9.327888,4.488214,-5.510708,0.941018,4.245485,-5.575797,1.049400,-6.750542,-4.471680,-6.167679,-2.669304,-7.794806,-3.814027,5.704709,7.201758,-3.076939,0.418067,5.116453,-4.334306,-1.920545,7.626656,5.255992,-1.347217,5.308431,0.317406,9.840661,-0.750192,-1.363594,2.975795,-7.996222,3.061311,-0.704364,-1.947277,-5.078133,8.528174,-1.489716,5.575316,1.953783,-8.854698,4.238110,-1.307731,9.195733,-6.193748,3.612389,2.559756,0.308289,-8.735590,5.966687,6.178666,-0.524222,-1.390037,4.530149,-2.938297,-1.635218,-6.747482,-1.245213,-5.997733,5.831612,6.876195,-6.839696,-0.453758,-9.120898,1.771600,-3.983777,6.602652,1.195500,5.341867,-0.860984,2.643659,-1.800186,-2.507104,-6.657533,-3.223087,7.861828,9.734422,-1.595048,1.100395,-4.860116,-7.029723,3.952266,5.716330,-3.723314,-9.213868,3.946409,4.411140,2.113730,-7.800312,-2.477162,7.344570,6.491057,6.511728,-0.021881,-5.019158,3.792839,9.164078,-7.089243,-1.977846,-3.931703,8.790694,-0.123525,3.373774,-7.578915,-1.290032,5.822183,3.060063,-0.119302,-7.193796,0.492377,4.859221,-2.660767,-4.257124,-1.680932,3.402497,9.597131,-9.845147,5.797654,4.804043,1.096692,-2.427693,9.579204,0.728979,-3.076301,-6.260341,-3.564941,-8.060693,1.697843,-9.576892,8.170178,-4.638414,-5.726735,8.673995,-4.286839,-1.954561,-7.553424,-1.799145,-3.892721,1.438420,-7.833351,-0.590952,9.117742,6.938560,2.560957,-0.553446,3.211696,5.549150,0.193956,2.424506,9.276482,-8.637429,-7.335912,8.810437,-2.542635,2.471361,8.898222,-4.146124,-8.166342,9.489065,9.171889,9.750057,-2.033811,-1.893880,6.481627,6.264264,6.360463,-4.800582,6.105282,-9.405109,-4.628640,-4.799896,-9.678974,-6.461317,-7.755980,-3.491150,-3.989350,-5.498662,6.699634,-6.072180,-4.421200,3.470517,5.908146,2.611935,-1.053376], dtype = "float64")#candidate|1437|(1680,)|const|float64
const_1438 = relay.const([-2.296693,-8.891754,-7.735328,-9.093505,-1.949849,-4.247521,8.684761,4.604124,-9.377239,6.071557,-4.266331,1.278238,5.418241,7.203346,-3.217724,-3.421091,-3.414349,-9.491837,8.344788,-0.988930,7.721190,-5.448001,-6.460909,-6.255244,5.234704,-8.292339,2.228020,6.348216,7.809674,7.197912,8.122225,-1.167005,-5.161802,3.147876,9.884416,4.658100,-6.374164,2.356806,7.968024,-7.530769,-3.046086,-5.755353,-9.798126,-2.408807,5.717538,-2.057939,-5.923638,-4.679201,9.210862,-3.949551,7.407261,5.237129,-8.294393,-2.838712,-4.830145,-8.317226,-5.969276,-7.776870,1.035269,-6.857780,-0.205076,5.610511,-4.098186,1.445067,8.969028,-8.701591,9.137667,5.334357,1.732799,-0.295987,-0.611423,-1.990489,6.719600,7.649192,0.804242,7.996507,-6.919892,-2.193874,9.554699,-0.946522,-7.924500,1.637207,-0.390509,9.986819,9.399328,-8.125780,-9.420765,-9.754039,4.112389,-5.369628,8.312086,8.399826,8.977612,-8.814084,3.720859,2.524305,-9.862926,-3.286403,4.073370,-7.574571,5.624157,-4.779996,1.323581,3.039561,5.133377,3.157410,-6.300931,-3.989837,6.842277,-4.620410,-7.315555,-1.567682,-8.893787,3.319685,-4.366528,-4.430610,-5.909848,3.130527,1.064291,7.541763,1.949167,-4.956867,6.387791,5.816361,8.589914,5.495729,3.409197,-4.598890,-3.876149,-9.899819,0.807227,-6.653415,6.919294,3.232886,5.435023,4.865811,-0.300059,-9.120329,6.857236,-2.020908,7.110131,-0.211071,2.349614,-3.874749,-8.176723,-1.499525,-0.236545,-4.697263,-3.576373,-8.652834,-3.626797,-8.350221,0.956191,-2.616967,-7.958038,-9.297951,-6.385731,0.590227,2.520859,-0.120153,-8.137247,-3.853058,1.920778,-0.538459,-8.514677,7.208402,1.944666,9.420892,-0.634422,1.992781,-7.561686,-5.412397,-4.947196,-7.099789,-8.558910,7.242809,4.377280,6.636171,-5.947892,8.882841,-8.216092,4.638227,-0.976434,0.868070,-5.447515,-4.172597,-3.801231,-3.590937,-7.571650,-0.972816,0.933491,5.141594,1.751438,3.550728,-7.505281,6.415033,-7.175964,-6.205588,6.354940,8.634156,-7.539052,4.333003,2.361421,9.180371,-0.820387,-9.262533,-4.869206,7.910052,-3.319628,2.299458,3.258184,3.803237,-0.699898,-1.877870,9.158231,7.475099,2.046691,-5.804834,-0.268005,-9.728510,-2.430274,-4.189654,-2.761745,-2.713904,1.639740,-8.487775,-7.551144,-8.388386,8.263044,3.581158,-5.255300,3.996465,2.674684,-1.361131,6.967541,-9.244577,4.125768,-8.157932,-9.794376,-3.627823,5.346482,-7.704450,4.518576,-9.565685,-4.420995,7.823955,-2.960567,-6.763266,6.714370,-1.626529,-9.861383,-5.939197,3.159120,9.900670,8.340089,6.222081,-4.863027,6.273143,-7.155222,2.053954,8.312526,-0.157159,0.210091,6.099976,4.619396,7.989132,-3.358364,-4.127053,4.335402,-9.477385,8.756601,0.954173,0.238529,8.913675,-4.440040,-3.276741,-6.131810,0.555572,-1.609468,-6.306471,-2.242730,0.283511,0.438116,1.261394,2.063569,9.688237,7.720874,2.708886,2.547200,0.683911,7.354909,2.126706,-6.866170,0.555136,3.894644,-9.257748,3.063725,1.455766,0.325632,7.754771,-9.716417,-9.287042,2.076152,-2.651658,-2.023185,-0.897083,-7.564793,4.980685,2.426934,8.351762,-6.154652,-2.903476,7.599728,-7.975523,-8.169239,7.403909,0.577606,9.691994,3.881727,4.374848,3.445514,2.188288,-5.762172,-3.259559,0.025414,-6.944853,1.805186,-0.015810,-4.108434,-5.378214,-0.779825,4.846281,3.957706,0.284928,3.836901,-2.812617,-9.244296,-9.742950,7.584835,-0.962351,-8.327106,-6.052430,-3.649703,-2.203453,-2.884726,2.694419,-8.991130,-9.467880,5.511946,6.246973,-9.666572,4.595976,9.752630,0.937413,-8.821478,-9.715011,4.490731,6.668640,5.772660,-8.373424,-5.123418,-4.142637,0.880415,-3.121326,-5.800220,7.115140,6.622747,-6.648437,-6.456093,4.679098,3.590453,6.009412,6.936407,-7.071317,-2.679641,-7.637516,8.849602,5.469215,1.930169,3.766672,7.782008,-8.199911,-9.524329,-0.776539,4.786177,7.279251,5.051784,4.510122,2.090837,1.665556,-1.953601,-1.891907,-5.432200,-8.131201,8.606509,-7.070388,-3.141607,-2.085752,7.652202,9.112818,-1.561803,2.997305,4.599901,-5.126388,8.398845,-9.411215,6.438159,7.981868,0.767409,2.533326,3.607592,4.017585,2.910087,-5.939349,-9.745118,3.298091,1.795998,-2.064628,3.344332,1.699054,-6.845818,-2.598134,1.326352,-5.835176,-8.072254,0.155230,9.941478,9.350124,-9.621845,3.056143,-7.050570,-1.617497,6.119253,-7.501104,9.633712,0.302415,-9.495836,-2.541230,2.683165,-9.931191,-1.612353,-4.457956,-7.615084,-8.602998,2.015296,-5.424198,-2.969932,9.530208,0.421192,-8.041863,-1.306353,9.906672,-4.599018,-4.226854,-0.454103,1.815700,-3.951789,-6.471091,0.002832,-1.771235,-3.395972,-3.449909,6.125484,-9.056206,-9.585286,6.710687,2.096111,1.501899,-7.561226,4.907989,-6.692271,-1.140877,-9.623592,5.436793,3.981302,0.534703,-9.615304,9.204007,6.864730,1.524402,-3.022208,-1.666248,2.623204,4.669647,9.121601,-3.151643,9.975608,3.254774,7.411841,-7.982767,-6.097170,-9.435721,6.005015,-6.442556,1.276085,-2.570216,-8.107266,4.299033,-8.057539,-9.760399,-9.189224,7.006853,7.369217,0.209794,-0.759568,9.495670,5.132075,0.921065,0.830411,-6.943835,0.136587,8.052880,1.924623,3.707566,1.471989,-0.478797,-7.322464,-8.652892,-5.398158,-0.715629,8.938447,2.032182,4.853649,6.643341,-0.715816,-4.221141,3.111368,1.666984,-0.681386,-3.968522,-0.366282,6.869912,8.783746,-8.778050,-9.988402,-5.153873,7.323065,-7.135799,-0.516560,6.843615,1.106866,9.359210,5.622050,-8.089989,7.090243,-1.845182,8.077123,7.193299,0.471375,-6.365307,-7.046885,0.953187,-1.498160,6.505222,0.463499,1.200656,-6.786502,9.033975,8.795534,8.109676,7.154367,8.219472,-5.809508,1.003046,-5.622855,2.154412,-4.614851,-1.651514,-3.167656,5.502646,3.599751,7.840601,1.783861,8.087821,-3.213127,-7.104969,-9.952669,-2.601075,-8.360642,-5.021311,4.911831,6.300061,-6.952409,-8.962969,5.943555,8.984554,-9.218014,-4.266359,8.223834,-2.780492,8.820708,6.683389,-4.511721,-6.932281,7.141064,-2.012433,-1.191475,-0.834112,7.748718,1.609982,0.253315,6.665827,5.377391,0.252044,-7.916739,-9.282981,-7.536680,9.852542,4.053209,4.839785,1.746703,4.919677,-4.714286,-0.027423,-6.135749,-0.091240,-0.652193,7.823505,-8.586184,6.329238,4.892918,-9.477543,4.255915,-8.230008,7.691336,-0.572763,0.375793,-6.253668,9.654781,-6.271090,-8.153325,2.420903,-1.161304,7.127117,-0.294108,5.989705,-5.068836,4.049417,-6.582915,8.317019,-3.018713,-1.528373,4.735410,9.071075,0.671545,0.979712,-3.815324,5.293808,1.221407,9.871202,8.124738,0.793616,-4.785205,9.385524,5.688973,-6.224380,-8.460855,2.384735,9.325839,6.061550,-3.275981,0.825895,9.434576,-8.884793,4.026895,-3.064063,-6.865407,-5.125140,3.976311,5.344333,-5.899847,-0.432240,-3.000151,1.252577,-2.540028,1.000594,5.327146,1.122865,3.572833,1.541896,-0.488801,0.466366,-3.600887,8.040831,2.671239,-2.444785,7.972153,2.681357,-5.824246,3.050795,5.037400,-5.885396,3.736978,2.053947,8.350610,9.883698,6.556135,-5.910399,3.202754,8.490572,5.013324,-1.878163,-8.655346,-0.659683,-5.209161,4.441961,-3.023237,-3.009430,9.771615,-5.859153,9.115240,-9.561377,-1.366048,-9.948261,7.286642,4.025371,1.194307,5.889841,2.919891,-5.851475,8.580201,4.395507,6.919700,-7.207320,9.922028,9.108927,-6.965595,4.479674,4.692319,-9.118052,5.813985,9.414655,-6.084765,-8.413578,-6.088052,1.417111,-5.425404,-1.112474,4.953232,3.809700,6.797112,3.118225,-3.279841,4.575574,-7.255200,-3.406633,7.851389,-9.019923,-3.389145,0.132889,5.636416,3.457039,8.514664,-3.480595,-1.200645,1.201576,-3.601686,6.228027,-3.612870,-4.030170,4.786270,-9.365254,-7.342560,-0.434875,-8.269758,-4.969572,-9.487048,7.328246,8.465179,-3.268603,3.721502,2.320789,-9.788114,2.066141,2.155946,4.031908,-5.580197,3.311106,-3.250018,-6.944344,6.981204,8.024733,-0.217896,4.051811,-6.134798,1.989221,-5.997202,5.728439,2.386964,9.041145,2.376517,2.531456,-4.556866,-8.054154,-5.141064,5.619364,8.407237,-8.220125,-1.378423,8.592152,4.686101,-7.727499,-5.684048,6.389553,-3.944855,-1.959536,2.841778,-2.252176,7.471924,8.767817,2.782169,9.928511,7.243076,-4.027305,-3.610747,-4.055968,-9.775407,0.206465,-0.729757,-6.905239,9.658981,-3.181713,3.709231,-5.918016,-9.759381,-9.453492,5.853737,-6.233962,4.618725,-4.922627,6.439248,-7.277038,2.894805,-9.626210,-4.421515,0.459874,8.078895,-2.286119,-2.394183,3.396824,-6.979098,-3.027148,-3.825823,-8.955455,2.459908,9.848331,7.124952,-7.045450,6.807671,1.723795,7.287545,4.974272,-8.595734,3.349778,-4.379146,3.076728,7.234533,-0.484137,5.450195,7.962749,9.938120,8.024250,-8.368950,-7.760976,-9.999006,6.714044,-1.300240,-5.764930,3.992602,2.629996,3.775713,-6.162560,-2.977614,-9.718270,-5.174957,-4.950381,-2.026512,-3.684899,5.565086,-3.553496,-5.005502,1.521529,-7.870465,-3.483356,-1.260182,5.499860,-5.502278,-6.919659,1.655825,-2.217447,-0.975932,3.354565,-8.259129,-1.701368,-6.016733,5.474547,-4.680329,3.728872,2.594083,-4.210994,6.221569,9.089962,-7.085877,-1.959405,-5.797737,8.413574,8.592905,9.596763,-4.988777,5.619754,-7.257487,-2.362162,-6.926399,1.925315,3.431376,1.398437,7.490889,-5.777437,-1.974389,9.096605,-7.164284,9.298015,-6.220023,1.468236,-2.373725,5.676611,-9.735917,-2.110999,-8.650852,-5.277981,8.900215,-2.080287,-3.705356,-5.576806,-5.772615,7.789277,-7.838421,-4.160661,3.566588,-1.898359,2.182502,-6.987641,9.713625,-3.568949,-7.709004,4.326717,-4.648625,-7.417274,-6.223452,0.144946,9.627202,2.686241,7.752118,-3.011975,-6.773223,0.613932,-3.188820,1.126668,-0.253055,0.964421,-6.479037,-2.365411,1.412548,9.034985,-0.006779,-9.503220,3.583227,7.737591,7.997161,7.466788,-0.789011,3.111357,-0.964151,-8.031232,-6.579414,8.590512,-0.836174,9.407201,-2.934690,-1.359130,0.233831,-7.222774,-1.929889,-5.158133,5.843723,5.026259,-2.681788,8.391864,9.246670,1.118398,5.126145,-6.397246,-3.844902,8.836441,-5.896318,9.998385,-8.308048,-2.872975,-1.881903,2.361355,-0.630269,9.025643,8.201607,2.485075,1.270646,1.480895,1.628301,-6.720016,8.212628,8.511642,8.628930,-2.611013,-4.029940,3.642980,1.775250,0.612231,2.094010,-3.715442,6.394187,-3.626081,-0.782062,4.812439,4.435215,3.443584,-8.719654,7.705391,-6.796849,8.348515,-6.867963,6.824520,9.748146,-7.573192,1.935824,-2.956543,-3.896196,7.892102,-5.620899,8.913247,8.742903,-1.639952,4.023539,2.436682,7.027724,-3.820464,9.947387,1.388310,-9.158659,-5.326832,-2.321645,-6.110722,3.874544,9.894610,6.680820,8.328633,-2.997639,-5.733052,3.987754,1.655805,-7.398008,4.569702,7.605048,3.730689,-4.264330,8.824175,-1.143535,2.459628,-6.017008,7.404353,7.636871,-5.887892,-9.132261,9.540751,-9.456701,7.145625,6.786764,6.142991,4.455265,-8.741251,-5.237631,9.163865,-4.806422,-0.675269,1.228398,-5.183621,-7.385391,-8.143041,7.290101,7.423683,-3.345227,-9.184622,7.726606,-0.877091,-7.100018,-0.004325,9.260575,7.404642,-8.726203,-8.546074,0.090137,9.478510,2.674632,1.684710,9.994933,-6.783960,9.763198,3.677431,-2.434482,5.247259,4.188671,4.014252,1.954283,-0.054472,-7.223006,-6.495105,3.962385,-4.342893,6.033370,1.891741,-0.869168,8.326000,-6.158783,-8.038988,-2.610067,-1.273136,0.107009,-2.839202,-6.518828,-1.032301,9.926671,4.937569,-8.008316,9.175794,8.616456,0.663126,1.055407,5.483689,4.935665,-1.311464,7.297831,9.867661,6.597281,-8.189015,-0.358663,-6.987008,5.454225,-6.487749,0.058610,6.502546,-9.626482,-0.151976,7.252631,-9.767557,6.325237,3.590204,9.938147,4.886565,-2.435346,-7.440185,1.924184,3.052722,-4.017552,-6.923592,9.957377,-3.785392,-2.511459,7.725788,-7.991984,8.536934,5.755697,7.776726,7.698479,4.307592,-5.363571,6.255506,-3.998207,-1.622039,-1.864182,5.621283,-9.223628,-8.160638,-0.413638,0.986793,4.356892,9.307788,9.079966,8.965022,2.119312,-7.085926,-2.801643,2.702864,-3.386448,-4.843487,9.455425,4.863925,9.393018,-5.532822,5.887942,9.338759,-1.964952,6.193950,5.929672,4.101626,3.547195,-1.770229,8.027963,5.177226,3.299981,-5.379238,4.869997,-4.510151,1.943140,-2.775045,-8.325771,9.522818,-8.933902,-3.491045,7.953650,4.186564,-3.428655,0.571390,0.060889,1.380044,-7.614805,7.104056,0.862592,-6.540793,4.096694,-3.859510,-2.138577,-2.731589,-4.048690,-2.600589,-7.795186,8.420180,1.085332,-6.118872,7.343752,9.971318,-0.347421,4.168410,2.522890,-9.006028,-9.429064,-9.960627,4.736145,-2.991336,-4.941442,1.946413,-3.543237,0.565659,9.439236,-1.050998,6.108531,-1.021648,7.565019,-6.210175,-3.449782,8.637575,7.703695,5.573552,-4.119450,-0.666056,5.686777,-0.403397,-9.494131,6.189695,4.141652,-5.047667,-6.576763,-0.741295,-7.545464,-8.729863,-0.012967,-8.082370,1.903761,-5.031284,8.061954,-5.958783,-1.432873,-9.857548,-7.939052,3.812004,7.873120,0.022130,-6.250381,6.823623,-1.128544], dtype = "float32")#candidate|1438|(1287,)|const|float32
call_1436 = relay.TupleGetItem(func_348_call(relay.reshape(const_1437.astype('float64'), [8, 14, 15]), relay.reshape(const_1438.astype('float32'), [143, 9]), ), 1)
call_1439 = relay.TupleGetItem(func_352_call(relay.reshape(const_1437.astype('float64'), [8, 14, 15]), relay.reshape(const_1438.astype('float32'), [143, 9]), ), 1)
uop_1443 = relay.sin(uop_1434.astype('float64')) # shape=(2, 1, 6)
uop_1446 = relay.tan(const_1438.astype('float64')) # shape=(1287,)
output = relay.Tuple([call_1436,const_1437,uop_1443,uop_1446,])
output2 = relay.Tuple([call_1439,const_1437,uop_1443,uop_1446,])
func_1449 = relay.Function([var_1433,], output)
mod['func_1449'] = func_1449
mod = relay.transform.InferType()(mod)
var_1450 = relay.var("var_1450", dtype = "float32", shape = (2, 1, 6))#candidate|1450|(2, 1, 6)|var|float32
output = func_1449(var_1450)
func_1451 = relay.Function([var_1450], output)
mutated_mod['func_1451'] = func_1451
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1789 = relay.var("var_1789", dtype = "uint8", shape = (2, 15, 10))#candidate|1789|(2, 15, 10)|var|uint8
var_1790 = relay.var("var_1790", dtype = "uint8", shape = (2, 15, 10))#candidate|1790|(2, 15, 10)|var|uint8
bop_1791 = relay.maximum(var_1789.astype('uint8'), relay.reshape(var_1790.astype('uint8'), relay.shape_of(var_1789))) # shape=(2, 15, 10)
output = bop_1791
output2 = bop_1791
func_1797 = relay.Function([var_1789,var_1790,], output)
mod['func_1797'] = func_1797
mod = relay.transform.InferType()(mod)
var_1798 = relay.var("var_1798", dtype = "uint8", shape = (2, 15, 10))#candidate|1798|(2, 15, 10)|var|uint8
var_1799 = relay.var("var_1799", dtype = "uint8", shape = (2, 15, 10))#candidate|1799|(2, 15, 10)|var|uint8
output = func_1797(var_1798,var_1799,)
func_1800 = relay.Function([var_1798,var_1799,], output)
mutated_mod['func_1800'] = func_1800
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1807 = relay.const([[[4.825583,5.244954,4.257245,-1.329455,7.232546,-5.105499,-5.980623,7.913378,4.467458],[-9.191789,-3.532009,5.361884,-0.919739,1.563242,-6.089876,-9.374365,-4.334640,6.101089],[4.691013,0.101058,-9.332902,-6.590799,-6.218525,7.698717,3.628341,4.950650,5.975676],[-3.686926,6.174592,6.114465,-0.897687,1.826304,-3.188020,9.917809,3.866386,-0.689479],[-8.301079,-8.203579,-1.136485,6.544790,-4.129514,5.847894,5.635174,0.061801,-4.337932],[-6.803901,-5.316049,1.585470,0.310237,8.625144,0.627149,-8.368660,-1.507289,4.188054],[-5.226822,1.628204,5.995708,-8.508594,-3.800673,7.057501,1.722595,-5.105341,3.666436],[-7.717633,-0.117025,7.671273,8.329777,0.395775,1.498084,-2.496720,3.129594,-0.379773],[7.763006,7.755010,-4.234035,-6.223056,4.607768,-0.764984,-5.771922,6.593865,-2.103391]],[[0.776544,-6.555611,0.251878,3.400387,5.543137,4.081991,3.485236,1.632972,2.796188],[8.281852,4.172817,-9.025832,3.787856,-4.377306,3.692854,-4.462899,-1.463750,7.209242],[-9.386880,3.427392,-5.667468,5.326482,3.562521,-6.731186,-2.809938,-4.747330,-3.192611],[6.362195,-8.022945,-3.563204,-6.845507,-4.947154,4.023423,5.030257,-4.433114,-5.789451],[6.623851,-7.246450,-4.129343,3.499649,-0.287629,-5.249691,-8.737979,-6.594222,3.285424],[-2.575747,0.854154,-4.617114,2.121230,-7.929469,-3.817728,-3.707636,-0.575164,5.631356],[9.040704,-1.893565,-5.067908,4.200198,-9.993668,2.070328,-7.369972,-9.370150,-1.743299],[7.473381,-2.148173,7.783358,-7.001575,-3.014944,-7.646814,1.601381,2.073737,4.473623],[-7.432156,-0.681586,7.036483,-0.936942,-9.771850,7.465328,6.747167,-2.290777,8.475621]],[[-7.614571,6.471584,-0.884379,-8.388902,6.389526,3.245743,-9.167865,0.299656,6.657920],[-2.984503,2.379552,-1.697526,-5.779186,3.860562,1.037488,-6.603265,-7.458394,-3.081860],[-2.077128,-1.664091,-1.506753,-0.851287,5.504772,-5.000140,-7.529787,-2.117834,9.433181],[5.100565,-8.097762,-8.559681,9.888830,9.476513,-1.121382,-4.549616,3.849204,-7.342895],[2.748395,-6.543577,3.928595,5.680905,1.742785,7.752453,-1.230997,-1.438081,9.034890],[-0.160656,-9.189087,-6.847119,0.703115,1.655823,9.574579,8.503513,-1.841603,7.815839],[-0.923065,-7.250425,-3.716646,-9.979247,-3.577959,1.773928,6.444065,-4.863364,4.097004],[-9.299097,9.339009,1.792380,5.973277,4.438952,-1.163158,4.793892,3.983700,7.000111],[3.488868,-7.913748,-9.556345,3.130565,9.477928,1.837035,-6.767863,-0.884223,8.701584]],[[-0.173344,-0.712680,0.166591,-2.105416,4.379977,-6.127523,5.566174,-2.721537,4.195811],[2.917182,-7.934538,-8.179708,-2.425828,2.078135,-3.894600,-2.373359,9.271006,5.079647],[-2.848146,-9.629619,4.869137,-3.664964,-7.718065,3.127537,5.046388,9.335877,7.153114],[-8.016382,-9.010117,-6.319921,-8.573122,-6.724341,9.516104,-1.798892,8.263572,5.148993],[4.954075,-4.929597,-9.714259,5.113536,-7.199730,5.803043,-9.691433,8.430776,6.934741],[-4.306563,5.072740,-1.497953,-0.655525,-3.767707,5.251417,-3.361967,4.909808,-2.294462],[-2.059981,9.255662,-3.243717,0.681124,-4.341921,-7.776165,-4.923767,-9.594151,1.379336],[2.844470,2.008392,6.839293,4.596347,-3.719414,-3.046634,9.822761,-1.892725,-9.927233],[6.039594,-1.982562,-7.398408,-8.463317,9.681533,-4.384950,1.155407,-3.078472,4.110986]],[[8.011049,3.997561,4.107992,-1.119275,9.630478,-7.347627,-4.828683,5.921539,7.253138],[2.322616,-5.218730,-1.363197,7.226826,-9.747605,5.403986,0.313778,7.010942,-4.509499],[0.589139,7.625909,7.881917,-2.235822,0.589539,-5.356773,2.956089,-7.026760,-7.224773],[3.768698,-6.977515,5.864191,4.818418,-3.976791,-0.774909,-3.605217,-6.417483,-2.077607],[8.417628,7.932890,-0.456774,2.394094,4.085274,2.831907,4.341660,9.182346,2.922667],[4.927326,6.838058,9.626550,-1.624305,4.778995,2.849688,-8.604838,-1.385122,4.829078],[-6.322270,5.330904,0.018045,3.175862,6.737837,-4.609446,-1.135063,7.521723,-0.565081],[5.254248,-6.646043,3.066804,-1.091375,-0.529490,7.862817,1.119229,9.571314,2.712377],[5.074888,2.230479,2.812683,1.506952,4.550399,2.960546,5.774767,-2.646805,-0.758273]],[[9.002186,9.970851,5.102946,-3.740713,-3.474411,4.521039,-1.945057,3.485738,6.236830],[5.001391,-2.285346,-3.831165,-3.595169,-9.535747,6.144658,-2.109952,3.309999,2.636524],[-5.714402,0.795494,3.378405,-1.398236,6.476137,5.312125,-4.011162,-2.738465,7.946419],[5.716995,-0.784498,-8.006592,-2.221418,6.130867,-6.189109,-9.468147,-6.705652,-5.550380],[4.947798,8.828381,-1.028501,4.425360,1.752769,9.217833,-1.519928,0.626235,-5.714976],[9.129831,-8.208049,-4.125234,3.208036,-7.730011,-3.200658,3.266736,4.990887,-5.718384],[4.926580,9.466498,8.307433,3.086618,5.929052,7.055225,-7.559736,-0.912347,5.234984],[0.566233,7.071469,-7.268355,-8.467367,6.116814,-3.941529,9.383550,-1.516879,-7.035465],[9.432350,2.377642,-0.170324,-7.095459,3.846514,-8.858979,6.830905,6.166188,5.771692]],[[-0.286878,2.665067,1.918273,-2.948125,8.130173,5.254838,-6.575634,5.126408,2.967248],[-9.212293,-8.307777,-8.299038,-6.592728,1.550168,5.172485,8.749643,-4.389433,2.215153],[-6.803515,9.832869,-8.096425,-6.963368,9.607315,6.781240,5.324133,1.208132,4.199119],[-7.594874,5.091500,-9.733768,-7.638906,5.662106,-4.855885,2.846744,-9.255820,5.143681],[4.773260,8.653820,0.455721,-6.672789,9.947204,9.552545,1.987967,-6.111489,3.400473],[0.069139,8.961027,-6.503623,-5.667214,-4.793383,-1.256601,1.813847,2.319400,0.073866],[3.266866,-7.100345,3.627944,-9.570311,1.205999,3.643617,4.844059,2.345695,3.793932],[-2.721293,6.513834,-8.157848,-7.985659,6.909991,3.691687,8.191819,-1.416520,6.865172],[4.085469,5.658832,-5.248327,5.478161,8.807474,-5.039283,-7.233624,-1.921749,-1.861257]],[[-0.215604,1.157553,-0.593169,-1.706165,6.111393,4.597550,-5.301154,-5.135038,-2.274652],[-3.255725,-7.303024,-7.328415,1.870404,-5.401884,-6.560926,-3.163116,4.638195,-5.054425],[-0.819626,0.174489,-5.794014,-1.421732,0.879813,-7.392503,-8.377870,1.665112,-5.560767],[6.059312,4.084534,-2.769430,-2.310543,-7.778479,-4.529724,-3.460961,0.762258,-4.086809],[-2.331290,-7.739553,-9.317910,3.623216,5.499207,7.048619,-9.925215,5.384887,-4.484293],[1.107420,0.314363,6.564836,1.875899,-8.251248,4.112537,-4.964434,-7.011560,-1.203052],[5.145442,1.075731,-8.024412,-7.064469,4.786008,-5.366289,3.041327,4.696192,9.788073],[-3.431659,-2.343313,0.527341,-3.313922,2.099568,-8.913817,8.495133,-3.653672,3.602989],[7.350445,4.429014,8.520767,8.667872,-9.034624,8.315670,9.130352,-9.114338,7.793691]],[[3.165259,5.012110,-0.861948,-6.549427,4.285405,-6.613912,-5.162931,-5.633830,-5.678424],[6.476327,4.053856,-4.291124,-7.637922,-2.367671,2.171041,-4.802695,8.563112,-3.546175],[-7.460079,1.799109,5.618506,-7.545012,-3.163829,5.521329,-7.288297,-1.649364,-1.376397],[0.146577,-6.409475,2.881723,5.472533,-9.432041,7.851455,-8.848624,-2.368029,6.066754],[9.861685,4.058483,2.302680,-1.595303,2.250959,7.551723,-3.227525,-2.088420,-8.418701],[-4.196384,-7.528206,2.429791,5.916887,5.386863,1.298360,0.934193,-0.014739,-5.227503],[-7.992427,6.652019,7.792510,2.824761,3.339024,-4.193941,-1.047313,4.196552,-7.669709],[-7.250603,-0.035425,1.476013,1.081373,-7.109122,2.304637,4.669753,-2.485798,2.539514],[3.362066,9.855119,4.417466,-0.231502,-5.423348,-0.266302,-5.358238,5.775383,-6.693237]],[[7.458442,7.748758,6.821458,-2.349477,-0.194810,0.363370,1.992304,5.654623,-2.931437],[-1.003308,-4.537825,-1.407388,3.886480,8.858836,-2.505767,1.106853,2.157950,6.483218],[1.503543,7.558929,-3.818910,-7.277642,7.268826,-5.387048,-4.723744,5.973471,-3.162638],[8.691367,-6.057037,-7.515557,-6.774762,-9.777407,-9.380425,-8.204650,-6.880749,-9.751397],[-0.620541,-4.849085,-9.501845,5.163386,0.620823,5.455183,4.315830,-1.864434,3.904459],[-5.508277,-5.593671,-1.507597,-9.543154,5.756982,-8.350721,-7.344212,-1.486773,3.956658],[2.526787,4.079994,2.609612,-6.867627,5.749858,-7.534884,8.445173,-8.801173,-4.197067],[4.525972,9.759767,6.980363,-8.203205,-6.112564,-4.874922,8.343550,8.120636,-2.431798],[9.846818,9.877961,7.429724,6.574022,-2.801192,8.545713,-7.555670,7.415051,5.323805]],[[-7.193797,-7.905694,-3.734270,-6.278931,2.380605,-4.554766,-0.533415,-2.281866,-1.003553],[7.989300,6.296228,6.409891,-2.721292,5.494754,8.686080,-0.905066,-6.661000,-3.504101],[4.655372,-2.499316,-2.351317,2.813433,-8.758696,-6.097090,9.774030,-1.733418,2.039165],[7.017907,-5.708796,-4.780492,9.049009,1.361903,1.868485,-3.959416,-5.015813,4.160447],[4.994434,3.540254,9.121587,-8.482915,3.085164,9.331529,-9.558985,8.600481,6.870570],[-3.667550,-6.564900,-8.015287,-3.400090,9.613690,8.930624,8.458267,6.825333,-2.851203],[0.553028,8.677832,8.978480,4.917801,-4.230276,-3.473824,-3.155709,-6.435900,-2.890466],[8.894081,-2.802855,5.630138,7.337030,-2.854275,7.115818,3.165652,-1.693038,-0.512278],[6.361227,8.248994,-9.231438,5.525898,5.367491,3.422282,-4.823027,-7.343531,8.977079]],[[-4.039534,-3.201552,7.395385,8.324806,-2.125599,-0.508544,-4.121858,9.971850,8.533964],[3.792311,-2.734758,-4.483375,3.739244,-3.428466,6.547294,8.797394,8.608707,0.656811],[-1.851706,5.763290,-1.910554,4.722202,-1.466263,-0.298661,-2.726242,-2.172339,-6.020303],[-2.109214,-3.006281,8.461820,1.606178,6.882306,7.881227,7.098220,-8.646179,-8.674869],[-8.210070,0.832367,-7.502701,-6.627249,9.418491,-0.244309,-0.546579,3.951727,7.662384],[-9.833885,-0.220973,8.752210,-2.142896,7.398320,-5.786158,4.247070,7.072191,1.358751],[8.594098,-3.413786,-4.191724,-9.516051,6.197388,7.912428,8.197908,3.074675,-4.659100],[3.875229,-8.214139,9.711081,-5.226236,2.721824,0.263640,-2.732754,9.092187,6.593988],[2.983959,-5.984874,-3.455319,6.980227,3.080567,7.898594,-8.985708,3.158081,3.738587]]], dtype = "float64")#candidate|1807|(12, 9, 9)|const|float64
uop_1808 = relay.log(const_1807.astype('float64')) # shape=(12, 9, 9)
output = relay.Tuple([uop_1808,])
output2 = relay.Tuple([uop_1808,])
func_1821 = relay.Function([], output)
mod['func_1821'] = func_1821
mod = relay.transform.InferType()(mod)
mutated_mod['func_1821'] = func_1821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mutated_mod.get_global_var('func_1821')
call_1822 = func_1821_call()
output = call_1822
func_1823 = relay.Function([], output)
mutated_mod['func_1823'] = func_1823
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_1845 = relay.TupleGetItem(func_1821_call(), 0)
call_1846 = relay.TupleGetItem(func_1823_call(), 0)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_1853 = relay.TupleGetItem(func_1821_call(), 0)
call_1854 = relay.TupleGetItem(func_1823_call(), 0)
output = relay.Tuple([call_1845,call_1853,])
output2 = relay.Tuple([call_1846,call_1854,])
func_1858 = relay.Function([], output)
mod['func_1858'] = func_1858
mod = relay.transform.InferType()(mod)
mutated_mod['func_1858'] = func_1858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1858_call = mutated_mod.get_global_var('func_1858')
call_1859 = func_1858_call()
output = call_1859
func_1860 = relay.Function([], output)
mutated_mod['func_1860'] = func_1860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_1866 = relay.TupleGetItem(func_1821_call(), 0)
call_1867 = relay.TupleGetItem(func_1823_call(), 0)
output = call_1866
output2 = call_1867
func_1868 = relay.Function([], output)
mod['func_1868'] = func_1868
mod = relay.transform.InferType()(mod)
mutated_mod['func_1868'] = func_1868
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mutated_mod.get_global_var('func_1868')
call_1869 = func_1868_call()
output = call_1869
func_1870 = relay.Function([], output)
mutated_mod['func_1870'] = func_1870
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1902 = relay.var("var_1902", dtype = "float32", shape = (16, 16))#candidate|1902|(16, 16)|var|float32
uop_1903 = relay.sin(var_1902.astype('float32')) # shape=(16, 16)
func_853_call = mod.get_global_var('func_853')
func_857_call = mutated_mod.get_global_var('func_857')
const_1906 = relay.const([False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,False,False,False,True,False,False,False,False,False,True,True,True,True,False,False,True,False,False,False,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,False,False,False,False,True,True,True,True,True,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,True,True,True,True,True,True,True,True,True,True,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,True,False,True,False,False,True,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,True,False,False,True,True,False,True,False,False,False,True,True,False,True,False,True,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,False,False,True,True,False,False,True,True,True,True,True,False,True,True,True,True,False,False,False,False,True,False,False,False,True,True,False,True,False,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,False,True,False,True,True,False,False,False,True,True,False,False,False,True,True,True,True,False,False,False,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,False,True,True,True,False,True,True,True,False,True,True,True,False,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,True,False,False,False,False,False,False,True,False,True,True,False,True,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,False,True,False,True,False,True,True,True,False,True,False,True,False,True,True,True,True,False,False,False,True,False,True,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,False,False,False,True,True,True,False,False,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,False,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,True,True,False,False,False,True,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,True,False,True,False,True,True,True,False,False,False,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,False,True,True,True,False,False,True,True,False,False,False,True,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,True,False,True,True,True,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,True,True,False,False,False,False,True,True,False,True,False,True,False,False,False,False,True,True,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,True,False,True,True,False,False,True,True,False,True,True,False,False,True,True,True,True,False,False,False,False,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,False,True,True,True,False,True,True,True,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,True,True,False,False,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,False,False,True,True,False,False,False,False,False,False,False,False,False,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,True,True,False,False,True,False,False,False,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,True,True,False,False,True,True,False,False,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,False,True,True,True,True,False,False,False,True,False,True,True,False,False,False,True,True,True,False,False,False,True,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,True,True,False,True,True,True,False,False,True,False,False,False,False,False,True,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,True,True,False,False,False,True,True,False,False,False,True,False,False,True,True,False,True,False,True,False,True,False,True,False,True,False,False,False,False,True,False,True,False,False,False,False,False,True,True,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,True,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,True,False,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,True,True,False,True,True,False,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,False,False,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,False,True,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,True,True,True,True,False,False,False,False], dtype = "bool")#candidate|1906|(1456,)|const|bool
call_1905 = relay.TupleGetItem(func_853_call(relay.reshape(const_1906.astype('bool'), [13, 7, 16]), relay.reshape(const_1906.astype('bool'), [13, 7, 16]), ), 1)
call_1907 = relay.TupleGetItem(func_857_call(relay.reshape(const_1906.astype('bool'), [13, 7, 16]), relay.reshape(const_1906.astype('bool'), [13, 7, 16]), ), 1)
output = relay.Tuple([uop_1903,call_1905,const_1906,])
output2 = relay.Tuple([uop_1903,call_1907,const_1906,])
func_1918 = relay.Function([var_1902,], output)
mod['func_1918'] = func_1918
mod = relay.transform.InferType()(mod)
mutated_mod['func_1918'] = func_1918
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1919 = relay.var("var_1919", dtype = "float32", shape = (16, 16))#candidate|1919|(16, 16)|var|float32
func_1918_call = mutated_mod.get_global_var('func_1918')
call_1920 = func_1918_call(var_1919)
output = call_1920
func_1921 = relay.Function([var_1919], output)
mutated_mod['func_1921'] = func_1921
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1932 = relay.var("var_1932", dtype = "float32", shape = (12, 7, 12))#candidate|1932|(12, 7, 12)|var|float32
uop_1933 = relay.log2(var_1932.astype('float32')) # shape=(12, 7, 12)
bop_1945 = relay.bitwise_xor(uop_1933.astype('int64'), relay.reshape(var_1932.astype('int64'), relay.shape_of(uop_1933))) # shape=(12, 7, 12)
bop_1948 = relay.floor_mod(var_1932.astype('float32'), relay.reshape(bop_1945.astype('float32'), relay.shape_of(var_1932))) # shape=(12, 7, 12)
output = relay.Tuple([bop_1948,])
output2 = relay.Tuple([bop_1948,])
func_1967 = relay.Function([var_1932,], output)
mod['func_1967'] = func_1967
mod = relay.transform.InferType()(mod)
var_1968 = relay.var("var_1968", dtype = "float32", shape = (12, 7, 12))#candidate|1968|(12, 7, 12)|var|float32
output = func_1967(var_1968)
func_1969 = relay.Function([var_1968], output)
mutated_mod['func_1969'] = func_1969
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1984 = relay.var("var_1984", dtype = "float64", shape = (8, 4, 7))#candidate|1984|(8, 4, 7)|var|float64
uop_1985 = relay.cosh(var_1984.astype('float64')) # shape=(8, 4, 7)
output = relay.Tuple([uop_1985,])
output2 = relay.Tuple([uop_1985,])
func_1987 = relay.Function([var_1984,], output)
mod['func_1987'] = func_1987
mod = relay.transform.InferType()(mod)
mutated_mod['func_1987'] = func_1987
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1988 = relay.var("var_1988", dtype = "float64", shape = (8, 4, 7))#candidate|1988|(8, 4, 7)|var|float64
func_1987_call = mutated_mod.get_global_var('func_1987')
call_1989 = func_1987_call(var_1988)
output = call_1989
func_1990 = relay.Function([var_1988], output)
mutated_mod['func_1990'] = func_1990
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_2076 = relay.TupleGetItem(func_1821_call(), 0)
call_2077 = relay.TupleGetItem(func_1823_call(), 0)
output = call_2076
output2 = call_2077
func_2096 = relay.Function([], output)
mod['func_2096'] = func_2096
mod = relay.transform.InferType()(mod)
output = func_2096()
func_2097 = relay.Function([], output)
mutated_mod['func_2097'] = func_2097
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_2107 = relay.TupleGetItem(func_1858_call(), 0)
call_2108 = relay.TupleGetItem(func_1860_call(), 0)
var_2112 = relay.var("var_2112", dtype = "float64", shape = (12, 9, 9))#candidate|2112|(12, 9, 9)|var|float64
bop_2113 = relay.maximum(call_2107.astype('int64'), relay.reshape(var_2112.astype('int64'), relay.shape_of(call_2107))) # shape=(12, 9, 9)
bop_2116 = relay.maximum(call_2108.astype('int64'), relay.reshape(var_2112.astype('int64'), relay.shape_of(call_2108))) # shape=(12, 9, 9)
bop_2127 = relay.floor_mod(var_2112.astype('float32'), relay.reshape(call_2107.astype('float32'), relay.shape_of(var_2112))) # shape=(12, 9, 9)
bop_2130 = relay.floor_mod(var_2112.astype('float32'), relay.reshape(call_2108.astype('float32'), relay.shape_of(var_2112))) # shape=(12, 9, 9)
output = relay.Tuple([bop_2113,bop_2127,])
output2 = relay.Tuple([bop_2116,bop_2130,])
func_2137 = relay.Function([var_2112,], output)
mod['func_2137'] = func_2137
mod = relay.transform.InferType()(mod)
var_2138 = relay.var("var_2138", dtype = "float64", shape = (12, 9, 9))#candidate|2138|(12, 9, 9)|var|float64
output = func_2137(var_2138)
func_2139 = relay.Function([var_2138], output)
mutated_mod['func_2139'] = func_2139
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2156 = relay.var("var_2156", dtype = "float32", shape = (6, 3, 4))#candidate|2156|(6, 3, 4)|var|float32
var_2157 = relay.var("var_2157", dtype = "float32", shape = (6, 3, 4))#candidate|2157|(6, 3, 4)|var|float32
bop_2158 = relay.minimum(var_2156.astype('float32'), relay.reshape(var_2157.astype('float32'), relay.shape_of(var_2156))) # shape=(6, 3, 4)
bop_2162 = relay.add(bop_2158.astype('int32'), relay.reshape(var_2156.astype('int32'), relay.shape_of(bop_2158))) # shape=(6, 3, 4)
output = relay.Tuple([bop_2162,])
output2 = relay.Tuple([bop_2162,])
func_2165 = relay.Function([var_2156,var_2157,], output)
mod['func_2165'] = func_2165
mod = relay.transform.InferType()(mod)
mutated_mod['func_2165'] = func_2165
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2165_call = mutated_mod.get_global_var('func_2165')
var_2167 = relay.var("var_2167", dtype = "float32", shape = (6, 3, 4))#candidate|2167|(6, 3, 4)|var|float32
var_2168 = relay.var("var_2168", dtype = "float32", shape = (6, 3, 4))#candidate|2168|(6, 3, 4)|var|float32
call_2166 = func_2165_call(var_2167,var_2168,)
output = call_2166
func_2169 = relay.Function([var_2167,var_2168,], output)
mutated_mod['func_2169'] = func_2169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_2187 = relay.TupleGetItem(func_1821_call(), 0)
call_2188 = relay.TupleGetItem(func_1823_call(), 0)
const_2193 = relay.const([[[9.683814,4.150634,4.154939,0.558459,-9.614842,7.184980,-1.901428,8.220746,9.817377],[-2.758926,-4.066741,7.463124,7.989451,-6.316062,-8.551078,4.407865,-8.415532,-9.715223],[-7.977378,2.148236,5.847539,2.629519,-4.094238,-9.113491,2.478766,5.777211,-7.760494],[2.640628,8.558364,6.426198,5.984486,5.078864,6.422362,5.599255,4.529582,-4.898161],[9.969414,-5.530932,1.419449,2.539645,4.049573,-5.513496,-6.810466,3.517661,-6.119497],[1.450705,-6.168673,8.110777,-2.971644,8.547806,9.528058,4.076354,3.075313,-1.412823],[-9.199352,3.433287,-7.162459,-1.652506,0.242702,-9.885700,-4.913328,7.606714,-5.705778],[-4.295089,1.961649,-4.439493,-3.684215,3.231086,-3.677005,-9.814558,-6.267030,-9.060104],[8.009043,2.531616,5.894755,-1.416199,7.609656,-3.552745,-1.331869,6.980784,-6.061593]],[[-9.543273,9.266774,-1.708432,5.617639,-9.047321,-6.085457,-6.459584,6.003038,8.693418],[4.516395,-5.861096,6.098517,-2.446190,-6.840522,-6.248170,-8.398171,0.850626,-7.999156],[6.952015,-5.306824,2.017445,-1.257639,-7.677984,1.629573,-9.117834,-5.272556,-5.313493],[5.722399,2.696487,-2.683890,-1.524167,4.769015,-2.924862,7.365549,6.870980,0.701907],[3.088764,3.391874,-6.621073,0.468823,6.259121,4.964122,0.702163,5.836131,-3.261028],[-0.682682,-9.654893,-0.882965,-2.618198,-2.679153,8.877041,-5.149173,7.124609,5.821040],[4.959871,6.735706,-8.910255,-9.455953,2.509233,-0.453380,7.839480,6.191255,-4.272054],[-0.530320,4.812999,8.491394,-1.815775,1.697073,1.114398,3.910960,6.636896,8.074985],[-0.957764,-6.388636,3.416541,9.757135,0.378132,-3.876208,9.278859,-9.158921,8.898168]],[[4.161698,-4.794283,-8.267900,0.223117,-0.666757,-9.204783,-7.955546,9.131110,-7.282654],[-7.366747,7.795456,-2.500957,3.709309,-8.116893,2.240193,6.183008,6.997178,1.742076],[9.639436,-0.899025,-0.571210,-0.005488,2.995023,6.605499,-2.272492,5.642987,2.671175],[-6.777022,5.210367,6.844279,-9.042863,-5.458999,-2.337566,9.347687,-7.612695,3.222339],[-4.198745,-7.313567,0.332881,-4.731256,0.100757,0.708787,4.281778,5.640355,-5.529044],[7.543159,-3.690704,-1.586193,-3.220694,-5.826631,7.877598,7.699982,6.692704,7.956929],[6.378793,5.264793,-9.087792,3.880790,-0.455739,-8.302480,3.848214,8.326300,5.266240],[-2.050389,-0.572621,7.836131,-6.338620,5.661574,-9.096345,-4.128673,-3.004741,-3.438174],[-9.308974,8.763087,-4.588695,7.467079,4.936745,4.178114,9.869598,-3.040100,8.742262]],[[4.141587,-2.602181,1.096976,-7.028941,-5.990855,6.040526,6.143891,2.763422,-6.770366],[-0.910851,2.063220,4.609972,5.484993,4.352275,-6.076122,5.124535,-6.102522,-5.244298],[-0.533141,-3.366018,-8.411093,9.817858,4.093824,-9.271633,-4.263653,-2.481026,-1.909776],[0.955690,-1.551888,-2.617523,2.811513,-9.246760,7.965415,3.360712,3.255137,7.801019],[-2.402402,0.001674,8.498156,3.929205,1.337424,3.752533,1.419985,0.772016,4.115756],[-4.465984,4.430401,7.430994,-9.795256,-2.033517,-7.443307,8.174820,-6.018625,-8.216312],[-3.233373,1.164832,2.508565,9.717350,9.496587,-0.702145,-9.231931,8.061091,-5.473447],[4.849364,-8.948246,-8.097733,2.621177,8.825696,1.462788,5.117515,7.855429,1.133865],[5.285910,-5.278295,8.049075,-4.917460,8.246299,7.071808,-2.738515,-6.501149,-3.826934]],[[1.848383,-7.854476,4.653514,-4.462367,1.212750,1.793058,5.616936,-7.440812,-0.151813],[-6.032065,3.614430,-8.300298,4.393958,4.755492,9.894243,9.994381,4.870177,0.094293],[7.160497,5.204330,-4.307887,0.881773,-6.438597,2.315096,5.527994,0.133533,7.730382],[5.258198,-3.727045,0.326604,-0.892207,-3.977190,-2.178124,-9.970802,7.807269,7.264019],[-9.547069,8.804559,-2.260299,9.457224,1.600208,-1.162383,4.169773,0.327523,1.014380],[6.807942,7.650567,5.207390,-5.108129,3.106882,-3.789198,4.400366,3.418402,2.561193],[8.622015,4.148275,7.473052,7.101506,4.468489,-0.825000,4.493330,-1.480556,8.405702],[6.426778,4.070334,1.246978,5.778011,2.558626,-3.135432,-0.843468,3.402853,-5.924874],[9.847909,5.089829,-2.950718,8.512668,-2.392497,4.104150,-0.736443,0.966879,4.274614]],[[8.947381,9.529598,-5.555495,2.160196,6.151502,-0.953148,9.433200,5.278909,2.600088],[-9.504337,-3.182021,-5.063007,-7.062235,-0.842896,1.697764,-8.306475,-3.178974,2.878271],[1.459564,1.611970,2.614981,-3.521253,4.147202,-8.138789,-8.845852,-2.231957,4.982330],[-9.480641,3.947909,2.935069,-1.696437,9.707909,2.399068,8.341406,6.882654,5.681543],[0.919261,4.371073,9.225911,8.502981,-6.561415,-9.577447,-3.426911,2.084397,0.834400],[-1.247359,-3.035281,-7.033087,-3.842027,1.928803,-1.457057,4.294589,-8.655135,3.143534],[-3.793047,9.026737,-1.224714,-9.727022,-4.062957,-9.502536,-9.427306,-7.369139,-9.220059],[-3.542700,-2.953501,-9.661770,-2.219119,-4.512849,-9.400361,-2.957784,-9.332382,5.887504],[-4.378963,-8.178699,4.282430,-7.130381,5.689083,-9.013614,-4.638616,4.593758,-0.511665]],[[0.254476,7.750069,-5.175044,3.789177,-4.512398,-9.561043,-9.253891,6.677177,-1.390938],[7.751222,-5.763785,6.981538,-4.075493,4.953645,-8.883582,3.094120,-0.105344,-7.262279],[-4.646182,3.526328,0.115501,-1.155616,-7.643233,-1.703629,-8.720912,-7.258552,1.287067],[-9.694549,9.105657,2.569446,6.325095,6.728951,4.224212,-0.965276,-9.139344,-1.635490],[-3.891259,9.091330,-3.532436,8.254015,-9.280855,2.033466,5.982165,5.960502,5.033604],[-5.583176,-5.958242,-4.191923,0.471251,0.712843,-0.002646,-1.759586,5.011797,-8.945312],[4.499054,-2.328931,2.665260,4.071064,6.335710,2.604069,9.593505,-5.756486,3.708706],[9.228479,4.531015,-4.992204,-0.745588,-4.935502,9.509459,1.105299,-4.004825,-3.987142],[2.320764,-3.206109,-9.722112,5.411216,-0.023793,3.606618,-7.508267,-9.312827,-4.894541]],[[-4.570819,1.544513,-0.170769,9.299426,-2.766026,8.948443,8.705017,-9.640976,-6.585922],[4.163325,8.778879,2.518094,7.364733,1.600123,5.817375,4.005611,8.906120,1.720243],[6.942853,0.184871,-5.826443,-0.580295,-7.289336,-5.398189,6.968164,-9.876336,1.373817],[-7.759234,-5.722675,-4.824756,2.111338,8.831019,1.396964,-5.548143,0.597972,-3.652467],[-4.349832,2.441614,4.493687,3.524951,3.207024,9.004859,6.383579,6.333964,-9.559445],[-4.171013,0.947086,-6.644242,-6.442211,3.512228,-5.900878,4.295971,-4.604958,4.555282],[-1.107562,0.259004,9.429044,-0.486565,-4.477901,-1.877866,-1.155423,-4.174182,-0.544799],[-7.922057,9.858397,-7.429595,0.489034,-1.189771,-0.197003,9.260260,7.389043,-8.382565],[-5.229150,2.083655,-0.242474,6.161953,-5.114587,9.308413,-8.216772,3.720599,4.471559]],[[8.671648,-9.641998,0.808748,-7.806252,4.380874,6.487354,-8.266573,4.075020,-9.418610],[9.612889,-4.216401,9.401887,-2.389808,3.650374,3.045197,6.409615,9.435543,-3.431246],[-3.608220,8.995288,-9.841433,5.972638,-6.388163,4.061770,-8.461437,-8.344438,-1.915220],[-8.009673,5.342880,9.628674,9.204089,-2.609777,-2.850950,2.510790,3.467320,-6.541421],[5.308178,-4.318360,-5.904952,-0.344116,-6.433191,5.476016,-6.622803,8.524314,5.865074],[-4.855501,3.309475,5.180961,1.278049,-6.034459,-2.026450,5.587428,-7.338874,1.981069],[2.080247,8.591580,1.184395,-3.120428,9.725630,3.936184,-3.458485,5.547435,-1.730123],[1.501855,1.537758,-3.566488,9.274713,2.910660,0.821418,-7.721988,-0.350541,-3.280823],[3.763591,5.626061,-4.763062,7.633031,-5.064283,-6.392472,-0.266736,-8.078375,7.119995]],[[1.190635,-4.490682,-6.162519,4.402823,-9.792405,2.641967,3.609140,-0.447468,6.238972],[-1.033935,2.863639,0.088256,4.510709,-1.727959,0.941883,3.455263,-3.631180,1.425488],[3.181506,1.224587,-8.511009,7.240344,5.117121,-8.393698,-4.281577,-9.293073,4.303043],[-1.063766,1.302832,-9.912132,-6.138379,8.757171,-9.422018,-2.992984,6.540390,9.478126],[-7.854993,-0.409173,-1.894055,-3.050072,9.474790,2.919814,-7.458679,4.489818,-1.219146],[-3.945974,9.400564,7.916305,-1.260484,-8.262483,7.740128,2.356361,-8.546078,-3.111455],[-5.956103,3.205204,6.017942,-0.583043,-1.951015,5.406365,8.817785,-2.350950,1.132846],[-2.480566,6.179995,0.315808,4.703751,-9.526841,-0.537874,-8.658626,7.368620,-7.022227],[-7.642007,-9.505953,7.052997,9.436701,2.681693,7.235897,3.859162,-4.417386,-0.005791]],[[-2.017207,-0.808052,1.836140,3.183333,6.962157,-6.817415,5.964591,-9.435882,5.267806],[7.783116,-7.543145,-2.340038,5.752919,-7.819727,-0.284152,5.360982,-5.050705,7.652887],[9.331423,2.491649,5.479205,-3.748943,0.614175,-2.616113,-0.537089,5.032496,-4.904048],[3.793141,-7.542926,2.271638,-4.335236,4.362300,-3.407981,1.854820,6.160060,-5.704211],[-4.521247,2.282777,1.865518,-4.113556,0.467536,6.508001,-2.188874,4.232073,-9.081476],[2.291752,5.658066,8.387522,-2.394051,0.953073,8.949007,-8.702809,2.355844,6.651086],[-8.542273,-9.752703,-1.934331,0.286856,-2.633287,0.534216,-3.333867,-8.914117,9.092930],[5.007226,-5.714201,5.937829,4.984840,0.077041,2.845950,8.214463,-5.157961,0.756138],[2.251534,9.924211,1.521650,-2.469902,-9.244676,5.597397,-7.922410,0.200342,-9.782149]],[[2.914816,-1.315065,-6.403482,2.799398,5.606073,8.124916,-3.990964,-5.767574,2.126596],[-9.792119,5.301068,-1.201167,-2.623637,3.148414,8.214973,-5.614627,5.371305,4.412343],[-4.701739,-9.071689,-3.323122,-8.175916,-4.054510,3.682344,-7.107527,-3.867232,-5.508637],[9.814746,4.082215,-4.971628,-6.339767,0.922275,6.857242,3.211274,-6.807322,-3.189965],[9.365686,3.914806,4.548639,6.708414,5.918109,0.376571,-0.978080,-9.220830,4.946538],[-2.542739,-4.646696,-8.508674,-5.518063,1.782740,4.467166,-3.710323,7.189624,-1.673183],[-0.684281,-3.985205,7.537532,3.662965,-4.062287,-1.806200,-3.009825,1.409660,-6.766496],[-2.566627,7.505649,9.571196,2.295841,-2.140077,-3.156612,8.058324,-8.751233,-3.987276],[4.681001,-7.210433,6.567233,-0.261000,5.662201,-7.789138,5.456716,2.261515,6.099951]]], dtype = "float64")#candidate|2193|(12, 9, 9)|const|float64
bop_2194 = relay.add(call_2187.astype('float64'), relay.reshape(const_2193.astype('float64'), relay.shape_of(call_2187))) # shape=(12, 9, 9)
bop_2197 = relay.add(call_2188.astype('float64'), relay.reshape(const_2193.astype('float64'), relay.shape_of(call_2188))) # shape=(12, 9, 9)
func_1024_call = mod.get_global_var('func_1024')
func_1029_call = mutated_mod.get_global_var('func_1029')
const_2207 = relay.const([-0.024607,-4.538323,-1.378128,3.238199,-9.817668,2.139861,5.250816,-4.592077,-7.634555,-5.982107,9.988893,-2.686020,-9.339548,7.154900,6.203832,-5.503688,0.461273,-4.995111,3.917277,2.143644,7.704811,-1.833579,3.053380,-8.438309,1.150028,-9.986562,7.679469,3.269383,2.357008,-9.280430], dtype = "float32")#candidate|2207|(30,)|const|float32
var_2208 = relay.var("var_2208", dtype = "float32", shape = (143, 9))#candidate|2208|(143, 9)|var|float32
const_2209 = relay.const([6,8,-2,7,-3,-7,4,-6,9,6,5,3,-7,-2,1,-9,-1,7,7,3,-4,10,4,-6,5,8,1,10,8,-6,-3,-6,-4,-8,-8,-1,-3,-2,-9,2,10,4,3,3,7,-10,4,7,-10,-1,7,-3,-6,-9,-3,9,-3,9,8,-7,1,5,3,7,8,2,-3,8,-9,-4,-10,-10,-7,-10,2,10,-5,3,9,-1,-10,-2,7,-10,-7,-3,-9,-1,-3,-1,-8,-10,-6,-9,3,-1,3,5,3,8,-2,-8,-5,9,-10,3,-3,-9,6,-3,-9,3,10,-4,5,-7,-5,10,-4,6,-9,-3,1,-1,-1,-7,1,-4,2,-5,10,-4,7,-2,2,6,-6,6,-3,6,1,8,-7,-4,8,6,1,4,-5,-8,6,-10,5,2,3,5,5,-8,4,1,-3,-4,6,-2,-4,-10,6,-3,-6,-2,4,4,1,-2,-6,-8,8,3,8,7,-8,2,-6,9,-9,2,-8,-3,-10,3,7,-7,3,-3,7,-5,-6,1,10,-8,2,-4,-8,-9,-3,-4,-6,-7,5,4,-9,-9,3,-1,-1,-6,8,-5,-9,5,-9,-2,2,-7,-1,-8,-7,-9,8,-7,-8,-4,-3,3,3,3,6,8,9,4,-6,2,9,8,-1,8,8,-6,-1,2,-4,6,2,-6,9,1,-2,1,-4,1,-3,-3,-1,1,-7,-3,-8,8,3,1,6,1,4], dtype = "uint8")#candidate|2209|(273,)|const|uint8
call_2206 = relay.TupleGetItem(func_1024_call(relay.reshape(const_2207.astype('float32'), [5, 1, 6]), relay.reshape(var_2208.astype('float32'), [143, 9]), relay.reshape(const_2209.astype('uint8'), [273, 1]), ), 1)
call_2210 = relay.TupleGetItem(func_1029_call(relay.reshape(const_2207.astype('float32'), [5, 1, 6]), relay.reshape(var_2208.astype('float32'), [143, 9]), relay.reshape(const_2209.astype('uint8'), [273, 1]), ), 1)
output = relay.Tuple([bop_2194,call_2206,const_2207,var_2208,const_2209,])
output2 = relay.Tuple([bop_2197,call_2210,const_2207,var_2208,const_2209,])
func_2211 = relay.Function([var_2208,], output)
mod['func_2211'] = func_2211
mod = relay.transform.InferType()(mod)
var_2212 = relay.var("var_2212", dtype = "float32", shape = (143, 9))#candidate|2212|(143, 9)|var|float32
output = func_2211(var_2212)
func_2213 = relay.Function([var_2212], output)
mutated_mod['func_2213'] = func_2213
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_2220 = func_1868_call()
call_2221 = func_1868_call()
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_2227 = relay.TupleGetItem(func_1858_call(), 1)
call_2228 = relay.TupleGetItem(func_1860_call(), 1)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_2231 = relay.TupleGetItem(func_1821_call(), 0)
call_2232 = relay.TupleGetItem(func_1823_call(), 0)
func_853_call = mod.get_global_var('func_853')
func_857_call = mutated_mod.get_global_var('func_857')
const_2239 = relay.const([False,False,False,False,False,True,False,False,False,False,True,False,True,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,True,False,True,True,False,True,False,False,True,False,True,False,True,True,True,False,False,False,False,False,True,True,False,False,True,False,False,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,False,False,False,True,False,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,True,True,False,True,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,False,True,True,True,True,True,True,False,False,True,False,True,True,True,True,False,True,False,False,False,False,False,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,True,False,False,True,False,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,True,False,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,False,True,False,False,False,False,True,True,True,True,False,True,True,True,True,True,False,False,True,False,True,False,False,False,False,False,False,True,False,True,True,True,False,False,True,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,False,False,False,False,False,True,False,False,False,False,True,True,True,False,True,True,True,False,False,True,True,False,True,False,False,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,False,True,False,False,False,False,True,True,False,True,True,False,True,False,False,True,False,True,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,True,True,False,False,False,False,False,True,False,True,True,True,False,True,False,True,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,True,True,False,True,False,False,False,False,True,False,True,True,True,True,True,False,True,True,False,False,False,True,False,True,True,True,True,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,False,False,True,True,False,True,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,True,False,False,False,False,False,False,True,False,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,True,False,True,True,False,False,True,False,False,True,True,False,False,True,True,True,True,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,True,True,True,True,True,False,False,True,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,True,True,False,False,False,True,False,True,False,True,False,False,False,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,False,False,False,False,True,True,True,True,False,True,True,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,True,True,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,False,True,True,False,False,True,False,False,False,True,True,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,True,False,True,True,False,True,True,True,True,True,True,False,False,False,True,True,True,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,True,False,True,False,True,False,True,False,False,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,False,True,False,True,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,False,True,True,True,False,True,False,False,False,True,False,True,False,True,False,True,False,False,True,True,False,False,True,True,True,True,True,True,True,True,True,True,False,False,False,False,True,False,True,True,False,True,True,False,False,True,True,False,True,False,True,True,True,False,True,False,True,False,True,False,True,False,False,False,True,False,False,False,True,True,False,True,False,True,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,False,False,False,False,False,False,True,True,False,False,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,True,False,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,False,False,True,False,False,False,True,True,True,True,False,False,True,False,False,True,False,True,False,False,True,True,False,True,False,False,False,False,True,False,False,True,True,True,True,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,True,True,True,False,False,True,False,False,True,False,True,True,True,False,True,True,True,True,True,False,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,True,False,True,True,True,True,True,True,False,False,False,False,False,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,True,True,False,False,False,True,True,True,True,True,True,True,True,True,True,False,True,True,True,True,False,True,False,True,False,False,True,False,False,True,True,True,False,True,True,True,False,False,False,True,True,False,False,False,True,True,False,True,False,True,False,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,False,True,True,False,True,False,False,False,False,True,False,False,False,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,False,True,False,False,True,True,False,False,True,False,False,True,False,False,True,False,False,False,False,False,True,False,False,False,True,True,True,False,False,True,True,True,True,True,True,False,False,False,False,True,False,False,False,False,False,True,True,False,True,True,False,True,False,True,True,True,False,True,False,False,False,True,True,True,True,True,True,True,True,True,True,True,True,True,False,True,True,True,False,False,False,False,True,False,True,True,False,True,False,False,False,False,True,True,False,False,False,True,False,True,True,True,True,False,False,True,False,True,False,False,False,False,False,True,True,False,False,True,True,False,True,True,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,True,False,False,False,True,False,False,False,True,True,True,False,False,False,False,True,True,True,False,True,True,False,True,False,False,True,True,False,True,False,True,True,True,True,True,False,True,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,True,False,True,False,False,False,True,True,True,False,True,False,False,False,False,True,True,True,True,True,False,True,False,True,False,True,False,False,False,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,True,True,True,False,False,True,True,True,False,False,False,True,True,False,True,True,True,True,True,True,False,False,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,True,False,False,True,True,True,True,False,False,True,False,False,False,False,False,True,False,True,True,True,False,False,False,True,False,False,False], dtype = "bool")#candidate|2239|(1456,)|const|bool
call_2238 = relay.TupleGetItem(func_853_call(relay.reshape(const_2239.astype('bool'), [13, 7, 16]), relay.reshape(const_2239.astype('bool'), [13, 7, 16]), ), 0)
call_2240 = relay.TupleGetItem(func_857_call(relay.reshape(const_2239.astype('bool'), [13, 7, 16]), relay.reshape(const_2239.astype('bool'), [13, 7, 16]), ), 0)
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_2244 = relay.TupleGetItem(func_1821_call(), 0)
call_2245 = relay.TupleGetItem(func_1823_call(), 0)
output = relay.Tuple([call_2220,call_2227,call_2231,call_2238,const_2239,call_2244,])
output2 = relay.Tuple([call_2221,call_2228,call_2232,call_2240,const_2239,call_2245,])
func_2248 = relay.Function([], output)
mod['func_2248'] = func_2248
mod = relay.transform.InferType()(mod)
mutated_mod['func_2248'] = func_2248
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mutated_mod.get_global_var('func_2248')
call_2249 = func_2248_call()
output = call_2249
func_2250 = relay.Function([], output)
mutated_mod['func_2250'] = func_2250
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_2302 = relay.TupleGetItem(func_1858_call(), 1)
call_2303 = relay.TupleGetItem(func_1860_call(), 1)
uop_2310 = relay.sigmoid(call_2302.astype('float64')) # shape=(12, 9, 9)
uop_2312 = relay.sigmoid(call_2303.astype('float64')) # shape=(12, 9, 9)
func_1024_call = mod.get_global_var('func_1024')
func_1029_call = mutated_mod.get_global_var('func_1029')
const_2318 = relay.const([-4.673317,9.652839,-7.821272,-5.608854,-7.495368,0.149516,-2.202879,1.956264,2.190504,-2.286248,5.393310,-4.064945,9.621125,-1.233807,0.671523,4.468774,-2.206749,-6.663358,-2.912977,-2.225462,5.748315,-1.356775,6.412638,-8.669727,6.598319,0.667693,8.633158,-0.420084,1.665206,2.891567], dtype = "float32")#candidate|2318|(30,)|const|float32
var_2319 = relay.var("var_2319", dtype = "float32", shape = (1287,))#candidate|2319|(1287,)|var|float32
var_2320 = relay.var("var_2320", dtype = "uint8", shape = (273,))#candidate|2320|(273,)|var|uint8
call_2317 = relay.TupleGetItem(func_1024_call(relay.reshape(const_2318.astype('float32'), [5, 1, 6]), relay.reshape(var_2319.astype('float32'), [143, 9]), relay.reshape(var_2320.astype('uint8'), [273, 1]), ), 2)
call_2321 = relay.TupleGetItem(func_1029_call(relay.reshape(const_2318.astype('float32'), [5, 1, 6]), relay.reshape(var_2319.astype('float32'), [143, 9]), relay.reshape(var_2320.astype('uint8'), [273, 1]), ), 2)
var_2325 = relay.var("var_2325", dtype = "float32", shape = (30,))#candidate|2325|(30,)|var|float32
bop_2326 = relay.right_shift(const_2318.astype('uint8'), relay.reshape(var_2325.astype('uint8'), relay.shape_of(const_2318))) # shape=(30,)
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_2336 = relay.TupleGetItem(func_1858_call(), 1)
call_2337 = relay.TupleGetItem(func_1860_call(), 1)
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_2345 = relay.TupleGetItem(func_1858_call(), 0)
call_2346 = relay.TupleGetItem(func_1860_call(), 0)
func_1868_call = mod.get_global_var('func_1868')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_2350 = func_1868_call()
call_2351 = func_1868_call()
uop_2352 = relay.log2(call_2336.astype('float32')) # shape=(12, 9, 9)
uop_2354 = relay.log2(call_2337.astype('float32')) # shape=(12, 9, 9)
output = relay.Tuple([uop_2310,call_2317,var_2319,var_2320,bop_2326,call_2345,call_2350,uop_2352,])
output2 = relay.Tuple([uop_2312,call_2321,var_2319,var_2320,bop_2326,call_2346,call_2351,uop_2354,])
func_2355 = relay.Function([var_2319,var_2320,var_2325,], output)
mod['func_2355'] = func_2355
mod = relay.transform.InferType()(mod)
mutated_mod['func_2355'] = func_2355
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2355_call = mutated_mod.get_global_var('func_2355')
var_2357 = relay.var("var_2357", dtype = "float32", shape = (1287,))#candidate|2357|(1287,)|var|float32
var_2358 = relay.var("var_2358", dtype = "uint8", shape = (273,))#candidate|2358|(273,)|var|uint8
var_2359 = relay.var("var_2359", dtype = "float32", shape = (30,))#candidate|2359|(30,)|var|float32
call_2356 = func_2355_call(var_2357,var_2358,var_2359,)
output = call_2356
func_2360 = relay.Function([var_2357,var_2358,var_2359,], output)
mutated_mod['func_2360'] = func_2360
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2365 = relay.var("var_2365", dtype = "int32", shape = (9, 14, 14))#candidate|2365|(9, 14, 14)|var|int32
const_2366 = relay.const([[[-4,7,-9,5,-4,1,4,-2,4,4,-9,-4,4,-9],[-6,10,-9,-2,-10,4,-1,-6,4,4,9,-3,-9,-5],[8,-7,-1,6,4,8,6,-1,-6,2,6,7,-3,6],[-9,5,3,4,1,-3,10,10,-3,3,-8,9,-2,-9],[-9,7,4,-7,-5,4,-1,-10,10,6,-1,-3,5,-4],[10,-4,-8,7,2,-2,7,3,-3,-8,5,6,-5,6],[1,-9,-3,10,-5,-5,2,-5,1,6,1,7,-10,-3],[-2,-4,-2,5,-7,9,3,10,9,-6,-1,6,-10,1],[6,2,-4,-10,-1,-2,-2,-2,-4,2,-6,-4,5,-3],[3,-3,-8,4,3,-8,10,5,-2,-7,-9,-10,1,4],[-5,1,10,6,2,10,5,2,-2,7,3,-10,3,9],[-5,-10,-3,6,-6,1,-2,3,-3,-5,1,-8,-6,-9],[10,4,5,4,6,1,-4,-8,-5,6,-6,-2,-4,3],[9,-10,-4,-4,10,-6,10,8,8,-10,9,-1,-10,-3]],[[-3,4,-10,3,-1,-2,-5,-7,4,8,-3,6,-8,-6],[10,-3,-6,5,1,10,4,-3,10,5,5,-7,4,10],[-10,2,-4,1,2,-5,-1,-5,7,-4,-7,-1,2,1],[-1,10,7,-1,7,-2,7,9,4,-5,-1,-10,-9,1],[10,9,-2,3,1,10,-8,-6,-2,5,1,7,-8,-10],[-9,-10,4,-10,-8,-8,9,-8,2,1,1,8,-3,-3],[3,2,6,-10,-1,1,-3,2,-6,-10,6,-2,5,-6],[6,-3,-5,-2,-5,3,3,7,2,-2,10,9,-1,-3],[-3,-7,8,-10,5,4,-4,-7,-3,-7,-4,5,8,9],[7,8,-1,-8,4,-4,10,10,6,-3,2,6,-8,9],[7,5,-10,-1,-7,3,-7,-2,-6,-10,-10,3,-4,7],[10,-8,-3,-10,-8,-7,-9,8,-7,2,-3,-6,-7,4],[-10,1,-6,-6,2,4,-6,-4,-9,-3,-5,10,7,-10],[8,4,-4,7,-6,8,10,7,-3,5,7,10,2,7]],[[-7,4,10,3,-6,3,5,9,3,3,1,10,5,8],[-10,-9,-6,2,2,2,-6,-8,-8,6,5,9,-1,-3],[-9,-6,-8,5,7,-1,-3,-6,8,9,3,7,-9,3],[5,6,7,-2,4,-10,-7,9,2,8,-9,5,-4,-9],[1,3,-8,-2,9,-1,-3,6,-1,-1,-10,6,6,1],[-6,-3,4,4,2,-10,-2,-8,3,-7,8,-9,7,-8],[-7,-4,-1,1,-10,-1,3,-7,-2,1,8,-2,-8,-5],[-8,-9,-1,-9,10,10,-7,4,10,-6,-6,-10,7,-1],[4,-9,8,-7,-2,9,-8,-2,10,6,9,4,1,2],[-7,2,-10,4,-2,4,9,4,4,4,-3,-6,6,-8],[6,-4,4,6,10,9,-3,4,8,-9,5,8,6,10],[4,9,-9,-6,-1,-6,-4,-3,-10,1,6,-2,-5,-2],[-4,5,2,1,6,-6,-2,8,-7,-7,9,-5,-7,-7],[-9,3,1,3,-1,7,-2,4,3,-3,6,-9,5,-9]],[[1,5,5,3,-6,-1,1,-4,-1,8,-2,-6,1,3],[-9,8,-8,-2,-9,-9,1,1,8,-6,4,4,-5,6],[4,-1,10,5,-10,-1,1,-5,-1,-4,-10,9,4,-1],[2,4,7,-10,-3,-6,-1,-4,-8,5,-3,-10,1,8],[1,-6,-9,2,6,-4,9,3,-9,-2,-6,-6,-10,-4],[6,-8,-3,1,-5,-7,-6,-1,3,3,-1,-6,-6,5],[-1,-6,-3,3,9,8,-8,4,-8,-7,10,-2,8,9],[-2,-7,5,7,8,-4,7,-2,8,9,2,6,7,-3],[6,9,6,1,9,-9,-2,-5,-4,-4,-2,8,-10,-6],[-4,3,2,-10,-8,-2,-10,6,-4,1,-10,8,-9,-8],[3,-7,6,9,-2,6,9,-6,9,-3,7,-10,-10,-10],[7,1,5,-8,-9,-9,-5,10,-5,5,10,-6,3,-3],[6,-3,3,-4,-1,9,7,-1,-3,6,-9,3,-8,-6],[6,-3,5,5,1,6,2,-4,-3,3,5,-5,2,-4]],[[6,-1,-1,3,4,2,9,-7,-5,-2,-5,-6,4,-5],[-7,7,8,6,-6,-5,-8,4,-7,8,4,-2,-3,-9],[10,-5,2,-2,4,2,-6,-8,4,-2,7,-4,-10,-9],[-5,-3,-4,-1,2,1,-9,4,9,-2,6,-5,5,-3],[8,-9,-10,-5,1,-3,9,-7,-6,-6,4,8,-5,4],[-6,5,9,-6,-6,-5,7,10,-1,-6,9,-10,3,5],[-4,-8,-6,-4,-8,-5,-3,3,-8,8,9,6,8,-3],[5,7,-6,2,7,-6,6,1,-4,1,-5,-1,3,-4],[-5,-9,4,-2,10,-4,-7,4,-4,5,7,-9,-3,9],[-10,-6,-8,5,-1,-4,-10,8,9,-3,6,8,-5,6],[-7,-5,-5,-2,-6,-7,-6,7,-9,3,6,-8,5,-6],[3,8,6,-9,-4,6,-9,-6,3,-1,10,-8,-4,-1],[-4,-1,8,9,5,-4,10,-9,-2,8,-10,-8,4,7],[4,-9,4,9,9,5,-7,-3,9,-8,8,-4,4,9]],[[10,8,-3,-6,4,8,-3,-7,1,9,-1,9,-4,8],[-7,-8,2,-4,-4,1,-6,-1,-3,1,-10,4,-7,1],[-7,1,-7,-2,-8,3,7,-10,-4,-1,-1,10,3,3],[6,3,-4,-9,5,1,8,-5,-9,-9,6,-1,-2,-8],[-7,-7,4,6,6,2,-7,-7,4,-1,5,-7,9,7],[9,8,-6,-8,-9,-10,-10,-8,-3,1,5,2,1,10],[-7,3,2,-1,8,-9,-4,2,3,-10,-5,6,2,-9],[-9,-4,9,2,9,-2,-1,-6,1,-8,9,1,-8,1],[8,4,2,4,3,3,-9,1,-7,4,6,-2,-7,-7],[3,6,2,9,-6,-5,8,3,4,-7,4,9,-3,-4],[-4,-7,3,-8,-3,-8,9,8,-3,5,6,8,-3,-9],[-8,1,8,-10,-1,-5,-5,-3,-8,2,-3,-3,-6,8],[-10,10,-4,1,-8,2,-9,-6,-1,9,-2,-5,7,-4],[8,4,3,-5,4,-8,9,4,6,-4,-10,8,-5,7]],[[-10,-5,-4,-6,3,-3,-9,1,-10,6,6,-3,-5,10],[-6,10,-7,4,-3,10,4,-5,4,-1,-1,-10,-10,-5],[6,5,-10,9,1,3,-6,4,-6,-2,-4,-5,-3,4],[-10,8,-4,-9,9,4,-3,-8,9,10,-8,6,-7,-9],[-7,-4,1,2,-5,10,1,8,10,-5,-7,-6,9,-8],[-4,9,-9,-6,-4,-4,9,5,-7,-4,-8,-5,1,-9],[-3,7,4,-9,-8,3,-3,-1,8,-10,8,1,-2,2],[-10,-4,-9,-10,-8,8,-4,-9,6,9,7,-1,3,2],[8,1,-4,1,-7,-8,2,2,-9,-2,1,10,-1,5],[-3,-1,1,-9,6,-10,-2,9,-6,-9,4,-9,3,4],[-10,-1,-6,-4,-4,-1,4,7,-10,10,-9,-3,2,-1],[1,2,4,6,6,6,4,4,9,-4,8,-6,-4,-2],[-1,3,8,-5,9,-2,-3,6,-4,-5,-2,1,-2,-6],[6,-5,3,-10,7,3,9,2,-4,9,-9,-2,-3,2]],[[1,-4,-8,-5,10,1,-3,3,10,3,-6,-3,-9,7],[-7,9,-6,7,5,4,7,5,2,1,-5,-7,9,5],[4,-1,-10,-10,-3,-10,-9,4,-4,6,-8,7,1,2],[3,-1,-1,9,-1,8,6,-4,6,2,8,-3,5,10],[3,10,-1,-10,-1,6,8,10,3,10,4,1,-10,-10],[4,2,2,-3,1,7,-2,6,6,5,-1,-1,9,-7],[-6,-3,-7,-10,-5,1,-6,-9,-1,2,2,9,4,-6],[-3,1,2,-2,7,5,4,-9,6,1,-3,-5,10,-8],[-5,7,-9,-7,-2,-9,2,-2,-2,9,1,7,4,-10],[-7,1,3,8,-8,-3,6,1,8,6,-6,-9,-6,-2],[-10,7,1,7,-7,7,4,8,-4,7,4,-3,10,-9],[8,-9,4,-6,-5,10,-10,9,-7,-3,8,4,-5,2],[8,-4,-3,-5,-10,-1,-3,-6,7,6,-4,6,1,2],[6,-3,-7,1,1,-6,-8,-3,9,-6,5,-10,-1,9]],[[-8,-7,-8,9,9,-5,7,-9,-10,7,-2,-6,5,5],[4,-9,8,-9,10,2,-9,8,-8,-2,-9,-8,2,-7],[-9,6,-6,-8,-2,-1,-4,-2,9,8,6,6,8,6],[7,6,6,9,-8,-6,-3,-5,-9,-7,-4,8,4,-7],[9,2,-5,-1,-2,-2,-7,-1,7,-7,-10,9,-1,7],[-2,-8,6,-4,-8,-3,-7,-9,5,-5,5,-3,8,2],[-8,5,-1,-8,10,-9,8,7,9,10,-7,8,-10,-10],[4,8,-2,1,-3,-2,2,-9,5,8,5,10,6,7],[-3,-4,10,-7,2,-6,7,-8,-1,-3,-7,2,2,6],[-2,-4,10,9,10,10,6,-9,-4,-5,-5,1,9,6],[7,-9,-4,3,-3,-4,10,8,-10,10,5,-10,4,-4],[7,6,9,1,10,-7,-6,-9,5,-4,-6,2,10,4],[3,6,-6,-2,-8,10,8,-5,8,-3,-1,9,-1,-1],[-1,2,-10,4,1,-3,-10,6,-10,-2,-5,1,-2,-7]]], dtype = "int32")#candidate|2366|(9, 14, 14)|const|int32
bop_2367 = relay.left_shift(var_2365.astype('int32'), relay.reshape(const_2366.astype('int32'), relay.shape_of(var_2365))) # shape=(9, 14, 14)
bop_2370 = relay.less_equal(bop_2367.astype('bool'), relay.reshape(const_2366.astype('bool'), relay.shape_of(bop_2367))) # shape=(9, 14, 14)
var_2375 = relay.var("var_2375", dtype = "bool", shape = (9, 14, 14))#candidate|2375|(9, 14, 14)|var|bool
bop_2376 = relay.bitwise_and(bop_2370.astype('uint16'), relay.reshape(var_2375.astype('uint16'), relay.shape_of(bop_2370))) # shape=(9, 14, 14)
output = relay.Tuple([bop_2376,])
output2 = relay.Tuple([bop_2376,])
func_2383 = relay.Function([var_2365,var_2375,], output)
mod['func_2383'] = func_2383
mod = relay.transform.InferType()(mod)
mutated_mod['func_2383'] = func_2383
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2383_call = mutated_mod.get_global_var('func_2383')
var_2385 = relay.var("var_2385", dtype = "int32", shape = (9, 14, 14))#candidate|2385|(9, 14, 14)|var|int32
var_2386 = relay.var("var_2386", dtype = "bool", shape = (9, 14, 14))#candidate|2386|(9, 14, 14)|var|bool
call_2384 = func_2383_call(var_2385,var_2386,)
output = call_2384
func_2387 = relay.Function([var_2385,var_2386,], output)
mutated_mod['func_2387'] = func_2387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2096_call = mod.get_global_var('func_2096')
func_2097_call = mutated_mod.get_global_var('func_2097')
call_2430 = func_2096_call()
call_2431 = func_2096_call()
func_1449_call = mod.get_global_var('func_1449')
func_1451_call = mutated_mod.get_global_var('func_1451')
const_2439 = relay.const([2.468860,-6.141760,2.525923,-9.540759,9.753384,-2.248298,-5.852325,-1.394856,-5.646720,6.107571,4.164184,7.473911], dtype = "float32")#candidate|2439|(12,)|const|float32
call_2438 = relay.TupleGetItem(func_1449_call(relay.reshape(const_2439.astype('float32'), [2, 1, 6])), 2)
call_2440 = relay.TupleGetItem(func_1451_call(relay.reshape(const_2439.astype('float32'), [2, 1, 6])), 2)
output = relay.Tuple([call_2430,call_2438,const_2439,])
output2 = relay.Tuple([call_2431,call_2440,const_2439,])
func_2446 = relay.Function([], output)
mod['func_2446'] = func_2446
mod = relay.transform.InferType()(mod)
mutated_mod['func_2446'] = func_2446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mutated_mod.get_global_var('func_2446')
call_2447 = func_2446_call()
output = call_2447
func_2448 = relay.Function([], output)
mutated_mod['func_2448'] = func_2448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_2459 = func_1868_call()
call_2460 = func_1868_call()
func_1918_call = mod.get_global_var('func_1918')
func_1921_call = mutated_mod.get_global_var('func_1921')
const_2466 = relay.const([-0.884696,-4.685122,4.980032,-6.085755,6.681478,-7.307813,-3.643295,0.424166,-2.522769,7.444339,8.196509,-7.638572,7.023008,8.334427,4.052959,7.663724,7.961912,-4.658553,-4.896300,3.845809,2.407479,0.024504,0.179273,5.600805,-5.227953,-8.745289,-1.654754,2.484942,7.885863,-4.905163,-5.846859,-1.634332,1.700054,1.272171,-5.784534,3.945715,-8.093221,2.104196,5.925213,3.606907,8.998897,9.789560,7.721184,3.090363,9.742446,9.314605,-8.872894,6.460101,-7.556872,7.778987,-3.613491,3.547806,9.666902,-2.411871,6.793495,-3.962165,-5.802835,-3.842508,3.311922,-6.674578,5.372879,-7.790103,-0.959217,9.162547,-8.482116,5.300002,8.551009,-1.992705,7.424378,3.405956,-3.759304,5.863050,-2.305672,-8.486468,2.129944,-8.448564,-0.362013,-6.507013,7.404105,-3.995947,-6.144341,-3.698568,-6.848382,-6.741531,9.936845,-4.746332,-1.928908,-7.942984,5.284651,-4.343034,-6.109865,3.562451,1.706858,4.904503,5.493106,8.005422,0.846328,2.026724,-7.696838,5.273851,4.254308,3.038765,3.134583,-1.748826,9.953434,9.331573,-1.113315,-4.609134,9.587167,-3.544988,2.192332,-1.991527,7.119830,-7.583245,-9.747311,0.494030,0.540535,1.252131,6.697522,2.397498,-6.148879,-6.483683,9.973553,-0.691126,-7.801144,0.342191,-7.885478,-5.393238,6.313468,9.720656,-4.999892,-2.469507,-1.831494,-8.541111,0.972521,-5.753351,-3.336082,-3.486238,2.754163,-0.288036,5.104108,-0.073089,-9.645248,0.247016,4.479216,2.556577,-4.375455,-3.971304,1.497484,-1.183094,-4.804462,-9.417726,6.513740,8.550230,5.712074,-4.618900,9.948451,0.799789,5.795656,-5.899588,2.606176,-6.116351,8.164129,-3.084009,7.288078,0.781696,6.424826,-4.736275,4.689639,-6.421677,-0.867809,6.464429,7.703320,1.081454,-9.445923,9.752940,3.378393,2.456569,-4.361691,3.482190,-0.729766,-8.668431,-9.664659,-0.362549,-8.425853,-4.503103,2.276554,-6.724316,-1.646081,1.383750,3.007769,0.941461,-2.833183,2.234976,-0.408459,-3.813440,-3.613806,7.457041,1.919999,-1.952508,-0.234123,-9.386769,-8.645356,-6.848116,-4.700068,9.616772,-2.319879,-7.034408,2.346322,-8.208543,-9.247095,-3.231048,2.841734,5.085736,6.832190,-8.610730,4.291742,1.459030,1.972523,-7.397956,1.599392,-1.118039,-8.613732,-1.454498,-4.882614,-1.498505,9.623451,6.674576,-3.575902,-5.405072,-0.810852,6.932005,7.931136,-4.024183,-8.770421,1.621520,-3.189374,8.349993,-5.930608,0.262844,-5.940006,-3.189552,-1.960114,-2.988753,-2.204871,7.414486,7.239701,-7.158932,7.860186,-1.769666,-7.376261,-1.535260,9.244339,4.679949,2.091134,-6.009434], dtype = "float32")#candidate|2466|(256,)|const|float32
call_2465 = relay.TupleGetItem(func_1918_call(relay.reshape(const_2466.astype('float32'), [16, 16])), 0)
call_2467 = relay.TupleGetItem(func_1921_call(relay.reshape(const_2466.astype('float32'), [16, 16])), 0)
output = relay.Tuple([call_2459,call_2465,const_2466,])
output2 = relay.Tuple([call_2460,call_2467,const_2466,])
func_2493 = relay.Function([], output)
mod['func_2493'] = func_2493
mod = relay.transform.InferType()(mod)
mutated_mod['func_2493'] = func_2493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2493_call = mutated_mod.get_global_var('func_2493')
call_2494 = func_2493_call()
output = call_2494
func_2495 = relay.Function([], output)
mutated_mod['func_2495'] = func_2495
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2521 = relay.var("var_2521", dtype = "uint64", shape = (16, 12, 9))#candidate|2521|(16, 12, 9)|var|uint64
var_2522 = relay.var("var_2522", dtype = "uint64", shape = (16, 12, 9))#candidate|2522|(16, 12, 9)|var|uint64
bop_2523 = relay.not_equal(var_2521.astype('bool'), relay.reshape(var_2522.astype('bool'), relay.shape_of(var_2521))) # shape=(16, 12, 9)
output = bop_2523
output2 = bop_2523
func_2531 = relay.Function([var_2521,var_2522,], output)
mod['func_2531'] = func_2531
mod = relay.transform.InferType()(mod)
var_2532 = relay.var("var_2532", dtype = "uint64", shape = (16, 12, 9))#candidate|2532|(16, 12, 9)|var|uint64
var_2533 = relay.var("var_2533", dtype = "uint64", shape = (16, 12, 9))#candidate|2533|(16, 12, 9)|var|uint64
output = func_2531(var_2532,var_2533,)
func_2534 = relay.Function([var_2532,var_2533,], output)
mutated_mod['func_2534'] = func_2534
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_2536 = relay.TupleGetItem(func_2248_call(), 2)
call_2537 = relay.TupleGetItem(func_2250_call(), 2)
output = call_2536
output2 = call_2537
func_2547 = relay.Function([], output)
mod['func_2547'] = func_2547
mod = relay.transform.InferType()(mod)
mutated_mod['func_2547'] = func_2547
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mutated_mod.get_global_var('func_2547')
call_2548 = func_2547_call()
output = call_2548
func_2549 = relay.Function([], output)
mutated_mod['func_2549'] = func_2549
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2550 = relay.var("var_2550", dtype = "uint16", shape = (5, 2, 4))#candidate|2550|(5, 2, 4)|var|uint16
var_2551 = relay.var("var_2551", dtype = "uint16", shape = (5, 2, 4))#candidate|2551|(5, 2, 4)|var|uint16
bop_2552 = relay.not_equal(var_2550.astype('bool'), relay.reshape(var_2551.astype('bool'), relay.shape_of(var_2550))) # shape=(5, 2, 4)
output = relay.Tuple([bop_2552,])
output2 = relay.Tuple([bop_2552,])
func_2573 = relay.Function([var_2550,var_2551,], output)
mod['func_2573'] = func_2573
mod = relay.transform.InferType()(mod)
var_2574 = relay.var("var_2574", dtype = "uint16", shape = (5, 2, 4))#candidate|2574|(5, 2, 4)|var|uint16
var_2575 = relay.var("var_2575", dtype = "uint16", shape = (5, 2, 4))#candidate|2575|(5, 2, 4)|var|uint16
output = func_2573(var_2574,var_2575,)
func_2576 = relay.Function([var_2574,var_2575,], output)
mutated_mod['func_2576'] = func_2576
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_2611 = relay.TupleGetItem(func_2248_call(), 3)
call_2612 = relay.TupleGetItem(func_2250_call(), 3)
var_2624 = relay.var("var_2624", dtype = "bool", shape = (13, 7, 16))#candidate|2624|(13, 7, 16)|var|bool
bop_2625 = relay.logical_and(call_2611.astype('bool'), relay.reshape(var_2624.astype('bool'), relay.shape_of(call_2611))) # shape=(13, 7, 16)
bop_2628 = relay.logical_and(call_2612.astype('bool'), relay.reshape(var_2624.astype('bool'), relay.shape_of(call_2612))) # shape=(13, 7, 16)
var_2636 = relay.var("var_2636", dtype = "bool", shape = (13, 7, 16))#candidate|2636|(13, 7, 16)|var|bool
bop_2637 = relay.subtract(bop_2625.astype('uint8'), relay.reshape(var_2636.astype('uint8'), relay.shape_of(bop_2625))) # shape=(13, 7, 16)
bop_2640 = relay.subtract(bop_2628.astype('uint8'), relay.reshape(var_2636.astype('uint8'), relay.shape_of(bop_2628))) # shape=(13, 7, 16)
output = bop_2637
output2 = bop_2640
func_2649 = relay.Function([var_2624,var_2636,], output)
mod['func_2649'] = func_2649
mod = relay.transform.InferType()(mod)
mutated_mod['func_2649'] = func_2649
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2649_call = mutated_mod.get_global_var('func_2649')
var_2651 = relay.var("var_2651", dtype = "bool", shape = (13, 7, 16))#candidate|2651|(13, 7, 16)|var|bool
var_2652 = relay.var("var_2652", dtype = "bool", shape = (13, 7, 16))#candidate|2652|(13, 7, 16)|var|bool
call_2650 = func_2649_call(var_2651,var_2652,)
output = call_2650
func_2653 = relay.Function([var_2651,var_2652,], output)
mutated_mod['func_2653'] = func_2653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_2676 = relay.TupleGetItem(func_1858_call(), 0)
call_2677 = relay.TupleGetItem(func_1860_call(), 0)
uop_2680 = relay.asinh(call_2676.astype('float64')) # shape=(12, 9, 9)
uop_2682 = relay.asinh(call_2677.astype('float64')) # shape=(12, 9, 9)
output = relay.Tuple([uop_2680,])
output2 = relay.Tuple([uop_2682,])
func_2686 = relay.Function([], output)
mod['func_2686'] = func_2686
mod = relay.transform.InferType()(mod)
mutated_mod['func_2686'] = func_2686
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mutated_mod.get_global_var('func_2686')
call_2687 = func_2686_call()
output = call_2687
func_2688 = relay.Function([], output)
mutated_mod['func_2688'] = func_2688
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_2705 = relay.TupleGetItem(func_2686_call(), 0)
call_2706 = relay.TupleGetItem(func_2688_call(), 0)
output = relay.Tuple([call_2705,])
output2 = relay.Tuple([call_2706,])
func_2707 = relay.Function([], output)
mod['func_2707'] = func_2707
mod = relay.transform.InferType()(mod)
output = func_2707()
func_2708 = relay.Function([], output)
mutated_mod['func_2708'] = func_2708
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_2716 = relay.TupleGetItem(func_2686_call(), 0)
call_2717 = relay.TupleGetItem(func_2688_call(), 0)
const_2720 = relay.const([[[1.744276,-8.700740,9.411809,-1.386144,-9.227025,-3.074226,5.978359,0.037791,-2.448803],[7.524280,-4.161055,-9.862403,8.182075,4.686392,-9.159606,-9.710660,-5.331564,-1.888632],[-2.015979,-0.222759,-2.856305,-8.200122,6.439976,-7.776603,7.463925,-4.541113,1.873366],[-5.861022,3.951123,6.783537,9.339679,5.502760,-6.395222,9.777672,9.594814,2.915310],[-8.322700,7.202965,3.264809,-1.528220,5.775366,-6.138801,3.467189,7.486041,8.305138],[-3.216561,-4.769029,-9.286540,-7.922149,-1.418883,-5.456831,5.774118,5.650911,-0.109717],[-7.488227,0.165392,6.344970,-6.656620,4.936120,2.112453,-1.076304,5.415474,-1.297951],[7.340880,3.267486,-1.610210,3.076100,-2.312519,-1.809826,6.484811,7.382455,-5.713678],[6.856096,-0.557825,-7.388433,5.757315,4.813326,6.117313,-8.574463,-0.982427,-8.562475]],[[6.249654,2.962743,-5.959188,-5.091444,-5.315738,4.345017,8.705274,-0.170394,4.189289],[8.047687,3.163018,6.115219,-7.331539,-3.476907,0.252727,1.784122,-2.311364,-2.054352],[-0.456989,0.312667,1.257761,6.488119,6.903127,-3.869652,-0.588631,2.757054,-7.905277],[7.685649,-8.355057,-4.467378,-8.596541,2.526968,-6.316575,-2.835117,-2.245846,6.865727],[-4.262180,-4.343548,-1.526134,-8.544875,5.776562,6.955915,-9.663786,-4.447080,-7.320876],[-2.626811,5.551904,3.761685,1.460963,-9.913480,7.138596,9.318161,0.304608,6.661744],[-9.131390,-6.232893,5.264255,-8.674571,-2.225886,5.051338,5.230567,-1.780700,0.095606],[-9.065864,6.593854,-2.037010,-3.162520,-4.995589,-1.610364,-8.429883,0.551539,-5.617442],[-7.305591,-6.951028,0.525954,2.213922,1.070720,3.752172,8.348932,4.863646,5.324951]],[[-3.670004,-4.622725,7.016119,-5.187588,2.872960,-7.636808,3.083771,-3.299485,-5.059290],[7.808793,-0.530901,5.792931,6.075479,5.660698,1.935747,-3.702340,6.144119,-4.920363],[9.409162,-3.915686,-6.434160,-1.445114,1.439809,7.829173,5.539277,5.713465,0.141938],[4.956497,2.771084,7.768428,6.372631,-7.844896,-7.051693,5.755162,-2.544971,8.070094],[0.758827,-7.558713,-0.830999,-3.471415,-3.846721,-7.605417,-1.694571,-3.250169,-5.222632],[-8.972552,5.588707,-4.904280,7.019615,-1.237054,9.345544,-9.037343,9.782751,4.249993],[-3.324082,1.936441,0.641040,-4.384130,-2.564940,-1.836331,-3.514662,-8.394074,3.450178],[-2.394580,7.412618,-1.923627,-5.372571,6.841707,8.066900,4.666923,-8.538479,-4.459239],[-9.991991,6.229291,6.229462,-5.523347,-4.217950,-7.576538,6.972584,-2.981272,0.205330]],[[-2.729525,4.258529,0.319845,-6.570813,-3.792864,-4.934721,3.962560,5.349589,1.546784],[-1.533296,-8.830218,-7.130827,-2.643819,3.033635,-4.730196,-9.686355,-8.056746,-0.653345],[-1.103907,1.740863,4.344414,-6.537063,-0.306956,6.583024,-8.649747,4.652939,-4.419121],[4.272786,-0.929043,5.937215,3.591924,1.910343,7.997023,-4.216233,-4.914839,-1.116531],[6.257990,-8.766233,-1.520130,6.596696,7.332037,-7.274729,-0.128790,9.059423,-4.268936],[-6.306400,-5.449388,-5.353796,9.043463,9.841201,-1.578501,-0.743957,-1.342530,9.881738],[-4.361039,-3.623491,-4.083777,-7.221359,-1.958922,3.053257,-1.092124,7.284743,3.448926],[4.097533,-9.334370,-3.096201,-6.406405,-3.483295,-8.807451,-3.918204,-9.022006,-4.110862],[0.045417,1.720268,-3.624619,-8.250390,-8.067278,8.968344,3.928223,7.705050,-1.499442]],[[-8.924171,-4.687977,4.192392,5.585472,6.040386,-6.481782,-0.971836,-3.264947,-5.577826],[-1.104609,-1.085598,-8.141339,-4.328481,-0.493564,3.373775,6.122016,2.161997,-8.388180],[-3.597039,-2.294503,8.811723,-0.643733,-4.548722,9.045147,9.142881,-5.116369,8.103796],[-3.315064,-3.603997,7.189297,5.431484,-9.208930,-2.116648,2.134994,-2.033685,-7.388822],[7.769039,2.932934,-5.790045,-8.507512,-7.749658,8.316085,0.674265,7.133279,-9.954782],[6.093010,1.812476,-0.910895,-4.836849,6.042967,-4.282957,-4.815666,-2.627554,3.820209],[-3.574248,-1.339568,-9.641619,-9.454036,6.391659,-4.438502,-7.374887,3.425538,9.805126],[8.287271,-9.050950,-9.968310,8.631896,-5.550458,-9.986357,-0.029242,5.083505,2.286724],[-2.975435,8.460913,4.828179,3.495576,2.318962,0.479680,-7.659344,-8.109099,4.826423]],[[7.354232,0.321085,-4.875609,-8.559902,-2.834205,-6.272238,7.416693,-9.768844,-0.129832],[-7.106068,4.639928,9.426345,-1.028077,-4.167999,-4.789385,6.453467,-5.647771,3.655412],[-0.775163,0.353901,2.725884,-6.816506,-8.786217,7.307429,-2.298823,-5.056455,6.248296],[8.633113,0.795492,-2.464749,1.960392,-0.190508,-6.851874,1.757521,1.927639,9.632476],[-5.199052,5.122465,-2.762185,0.750161,0.996898,2.530036,2.991014,-3.763571,-7.185249],[-4.648216,6.049484,6.419001,-5.766805,-2.356336,5.304058,-9.541048,-4.548712,-1.191496],[-9.756804,0.532503,6.063994,-7.441155,2.009210,9.664997,2.349716,-8.549435,-3.082778],[-7.223740,-7.699301,-5.256382,9.311157,1.940446,2.246707,-8.023931,6.400784,4.587213],[-2.286281,-5.364342,-6.899834,2.481519,4.054195,-2.113715,5.807989,0.837063,-7.822293]],[[5.072789,-3.448782,1.094564,-8.184538,-0.632485,6.446918,-6.535314,7.490903,-2.548988],[3.301827,-9.199882,7.349241,-7.484886,3.935102,-0.996133,-5.094051,9.117430,-1.520218],[-8.838322,0.010469,-8.965042,-7.609429,-0.643274,8.407861,7.859254,9.669473,-6.282799],[2.074002,9.732239,-4.850373,-4.168834,-2.190681,5.998569,-9.601005,7.359139,-2.972877],[-1.324428,5.341942,4.960866,1.218590,9.020844,-4.537155,2.572690,-8.579432,-6.605480],[-0.109496,6.097786,4.142285,7.098029,-2.934873,6.062492,4.263277,6.412773,-7.125735],[0.651736,-0.634292,-7.717468,-1.135459,-8.600896,0.975074,7.611124,2.655612,-0.829983],[-9.846888,-3.829569,-7.810786,0.207311,4.265148,-2.064515,1.316839,-0.089807,-5.830575],[-5.141039,-5.544545,-4.324159,-8.864554,-4.389824,-3.569077,-0.380879,-5.853686,-1.259628]],[[-7.269914,-6.944020,-0.361269,1.940525,2.187162,9.099571,4.218032,-8.119274,-6.678115],[3.495883,8.298884,-3.419959,-0.770678,-2.163239,2.907844,1.499359,-3.034638,-1.484447],[1.959101,1.874500,6.522050,-1.716055,-1.544075,-8.812057,6.199045,6.452243,0.452013],[5.659287,-6.973771,7.584506,-0.471954,6.130270,-3.709321,3.928567,-9.556323,-6.744742],[-1.224196,-2.131482,-6.026828,8.042071,-5.307481,-0.273198,8.768761,6.551709,5.909107],[1.950359,5.524579,-3.183153,-1.657817,5.792624,-3.564975,-2.626063,5.400190,-4.525584],[-3.365166,1.163619,-8.236434,-2.735080,0.985680,-3.213474,-4.153580,-9.182812,-5.504510],[-8.295600,4.481196,1.509689,4.123783,-4.516575,-3.888327,-7.723276,-6.338753,6.966159],[1.475725,-0.609922,9.674487,9.580448,5.818077,-7.877012,1.718621,-7.243775,-1.501982]],[[-1.550832,-6.956008,-7.012408,2.999324,7.829691,5.953850,9.825442,-2.365874,0.478628],[-7.130882,-4.625396,0.663873,8.393454,9.944793,7.567400,-7.363363,4.400853,-3.886577],[5.805526,6.507157,6.268368,-9.945480,0.298966,1.986979,-2.312556,-8.065411,9.220076],[2.740626,-1.899558,-2.615659,9.256899,0.777225,6.194855,-7.968934,-6.062618,8.456387],[-1.824119,-1.934286,1.334827,5.291799,2.443315,-9.553255,9.949772,3.134119,-4.220096],[2.132906,-8.775604,-3.055176,-4.917319,3.781496,-9.938310,-9.236293,-0.462328,1.339838],[-8.893756,2.115510,-2.169244,-5.897430,-8.168160,7.483332,-5.837440,-1.746097,0.552816],[-7.413397,0.126126,-0.559405,8.809291,6.738767,0.718957,5.458506,5.551280,2.572437],[-5.594858,4.962388,-3.555050,7.904874,0.439226,2.435975,-8.321532,-5.724469,2.144643]],[[-9.297011,1.954955,-8.569069,-9.543753,8.837018,9.547718,8.813971,-1.654500,-4.569506],[4.121539,5.703747,2.043758,1.029795,6.140865,8.214596,3.000592,0.576185,3.228451],[0.792984,0.477461,2.907430,-8.226972,-5.353424,2.237311,3.898187,-1.271879,5.801160],[2.417874,7.243307,-1.810102,-6.471822,-1.413064,1.600796,2.168847,3.670475,0.939642],[6.628988,2.388620,-1.626550,-8.406510,5.061939,3.719063,-7.511332,-6.426942,5.713171],[3.740309,-6.672925,8.280803,9.832111,-3.734676,7.963976,-0.348166,7.629120,-9.362173],[-5.635665,0.300578,5.402793,4.164274,-8.189507,5.262432,-8.370563,9.207635,2.315205],[-3.728102,5.632128,5.487202,-3.732718,-0.076414,-8.582288,-4.988344,4.495846,-6.308286],[-0.706165,3.121120,6.810580,-7.245126,6.826807,-1.248347,-2.296117,4.354886,-7.911776]],[[-2.543685,-3.135454,-6.309734,3.265161,-4.420754,4.194072,8.820139,-4.915148,-2.614336],[7.657925,4.188658,-4.784801,5.256710,1.570042,-7.193340,-6.158534,-5.790893,8.000388],[4.263399,0.017531,-3.576773,-1.339610,-6.350559,-0.644240,0.895053,6.117100,-3.146820],[-0.079857,-2.553364,-3.980473,6.281673,3.257197,-3.908372,1.261019,9.764502,0.374554],[6.140398,8.350564,-7.940936,-5.187045,-4.806033,-4.076052,4.438484,-4.175275,-7.353467],[-3.713731,5.418625,-4.784544,7.538493,2.410842,-8.769114,-5.075301,7.526350,-1.179885],[0.366388,6.929463,-9.449595,-2.023450,-2.212200,-4.093149,4.357495,2.473131,-0.917785],[-0.140151,4.390039,6.205264,-8.002820,7.724815,4.650379,6.633857,-9.765406,-8.853248],[2.336289,-9.508387,-0.409261,-7.923551,3.510026,-1.531549,0.533517,8.738432,7.507709]],[[6.088387,-9.314299,2.233475,-4.961116,-2.379788,8.122489,3.693054,6.166260,-3.020054],[-3.698429,-6.206926,-0.001146,-2.409585,3.560362,-9.318484,-9.890082,0.309696,-7.183649],[-9.786259,0.477658,4.269733,-8.027256,5.426018,-6.105166,4.676556,0.368380,9.926904],[-0.514417,3.146533,4.011158,-0.502795,0.314944,9.981913,-4.115982,-6.591889,-7.758957],[-2.849058,4.914973,4.960198,-4.813161,-8.885575,-4.700864,6.359650,1.416175,-0.428203],[2.974574,-1.359099,-0.929548,-0.986601,-9.037540,2.724190,8.709674,7.089102,8.146064],[-0.840745,7.452238,5.221930,-9.643016,-4.589788,-0.820824,5.451676,-0.101538,-7.923109],[8.797409,4.964044,-2.678598,-0.131562,2.187971,-3.823420,-1.154028,-7.562495,4.025322],[0.618354,-9.446151,-8.812692,7.883435,-9.448973,7.882116,-0.337562,-4.985105,-5.518862]]], dtype = "float64")#candidate|2720|(12, 9, 9)|const|float64
bop_2721 = relay.minimum(call_2716.astype('uint16'), relay.reshape(const_2720.astype('uint16'), relay.shape_of(call_2716))) # shape=(12, 9, 9)
bop_2724 = relay.minimum(call_2717.astype('uint16'), relay.reshape(const_2720.astype('uint16'), relay.shape_of(call_2717))) # shape=(12, 9, 9)
output = bop_2721
output2 = bop_2724
func_2732 = relay.Function([], output)
mod['func_2732'] = func_2732
mod = relay.transform.InferType()(mod)
mutated_mod['func_2732'] = func_2732
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2732_call = mutated_mod.get_global_var('func_2732')
call_2733 = func_2732_call()
output = call_2733
func_2734 = relay.Function([], output)
mutated_mod['func_2734'] = func_2734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_2746 = relay.TupleGetItem(func_2446_call(), 1)
call_2747 = relay.TupleGetItem(func_2448_call(), 1)
output = relay.Tuple([call_2746,])
output2 = relay.Tuple([call_2747,])
func_2757 = relay.Function([], output)
mod['func_2757'] = func_2757
mod = relay.transform.InferType()(mod)
output = func_2757()
func_2758 = relay.Function([], output)
mutated_mod['func_2758'] = func_2758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2096_call = mod.get_global_var('func_2096')
func_2097_call = mutated_mod.get_global_var('func_2097')
call_2759 = func_2096_call()
call_2760 = func_2096_call()
output = call_2759
output2 = call_2760
func_2761 = relay.Function([], output)
mod['func_2761'] = func_2761
mod = relay.transform.InferType()(mod)
mutated_mod['func_2761'] = func_2761
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2761_call = mutated_mod.get_global_var('func_2761')
call_2762 = func_2761_call()
output = call_2762
func_2763 = relay.Function([], output)
mutated_mod['func_2763'] = func_2763
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2096_call = mod.get_global_var('func_2096')
func_2097_call = mutated_mod.get_global_var('func_2097')
call_2802 = func_2096_call()
call_2803 = func_2096_call()
var_2808 = relay.var("var_2808", dtype = "float64", shape = (12, 9, 9))#candidate|2808|(12, 9, 9)|var|float64
bop_2809 = relay.subtract(call_2802.astype('uint16'), relay.reshape(var_2808.astype('uint16'), relay.shape_of(call_2802))) # shape=(12, 9, 9)
bop_2812 = relay.subtract(call_2803.astype('uint16'), relay.reshape(var_2808.astype('uint16'), relay.shape_of(call_2803))) # shape=(12, 9, 9)
output = bop_2809
output2 = bop_2812
func_2815 = relay.Function([var_2808,], output)
mod['func_2815'] = func_2815
mod = relay.transform.InferType()(mod)
mutated_mod['func_2815'] = func_2815
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2816 = relay.var("var_2816", dtype = "float64", shape = (12, 9, 9))#candidate|2816|(12, 9, 9)|var|float64
func_2815_call = mutated_mod.get_global_var('func_2815')
call_2817 = func_2815_call(var_2816)
output = call_2817
func_2818 = relay.Function([var_2816], output)
mutated_mod['func_2818'] = func_2818
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2493_call = mod.get_global_var('func_2493')
func_2495_call = mutated_mod.get_global_var('func_2495')
call_2874 = relay.TupleGetItem(func_2493_call(), 2)
call_2875 = relay.TupleGetItem(func_2495_call(), 2)
output = call_2874
output2 = call_2875
func_2882 = relay.Function([], output)
mod['func_2882'] = func_2882
mod = relay.transform.InferType()(mod)
mutated_mod['func_2882'] = func_2882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mutated_mod.get_global_var('func_2882')
call_2883 = func_2882_call()
output = call_2883
func_2884 = relay.Function([], output)
mutated_mod['func_2884'] = func_2884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2898 = relay.var("var_2898", dtype = "uint16", shape = ())#candidate|2898|()|var|uint16
var_2899 = relay.var("var_2899", dtype = "uint16", shape = (10, 3, 10))#candidate|2899|(10, 3, 10)|var|uint16
bop_2900 = relay.less(var_2898.astype('bool'), var_2899.astype('bool')) # shape=(10, 3, 10)
output = bop_2900
output2 = bop_2900
func_2908 = relay.Function([var_2898,var_2899,], output)
mod['func_2908'] = func_2908
mod = relay.transform.InferType()(mod)
var_2909 = relay.var("var_2909", dtype = "uint16", shape = ())#candidate|2909|()|var|uint16
var_2910 = relay.var("var_2910", dtype = "uint16", shape = (10, 3, 10))#candidate|2910|(10, 3, 10)|var|uint16
output = func_2908(var_2909,var_2910,)
func_2911 = relay.Function([var_2909,var_2910,], output)
mutated_mod['func_2911'] = func_2911
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_2967 = relay.TupleGetItem(func_2686_call(), 0)
call_2968 = relay.TupleGetItem(func_2688_call(), 0)
output = relay.Tuple([call_2967,])
output2 = relay.Tuple([call_2968,])
func_2969 = relay.Function([], output)
mod['func_2969'] = func_2969
mod = relay.transform.InferType()(mod)
output = func_2969()
func_2970 = relay.Function([], output)
mutated_mod['func_2970'] = func_2970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2732_call = mod.get_global_var('func_2732')
func_2734_call = mutated_mod.get_global_var('func_2734')
call_2980 = func_2732_call()
call_2981 = func_2732_call()
output = relay.Tuple([call_2980,])
output2 = relay.Tuple([call_2981,])
func_3008 = relay.Function([], output)
mod['func_3008'] = func_3008
mod = relay.transform.InferType()(mod)
output = func_3008()
func_3009 = relay.Function([], output)
mutated_mod['func_3009'] = func_3009
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_3032 = relay.TupleGetItem(func_2248_call(), 3)
call_3033 = relay.TupleGetItem(func_2250_call(), 3)
output = relay.Tuple([call_3032,])
output2 = relay.Tuple([call_3033,])
func_3036 = relay.Function([], output)
mod['func_3036'] = func_3036
mod = relay.transform.InferType()(mod)
mutated_mod['func_3036'] = func_3036
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mutated_mod.get_global_var('func_3036')
call_3037 = func_3036_call()
output = call_3037
func_3038 = relay.Function([], output)
mutated_mod['func_3038'] = func_3038
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_3103 = relay.TupleGetItem(func_2248_call(), 2)
call_3104 = relay.TupleGetItem(func_2250_call(), 2)
output = call_3103
output2 = call_3104
func_3115 = relay.Function([], output)
mod['func_3115'] = func_3115
mod = relay.transform.InferType()(mod)
output = func_3115()
func_3116 = relay.Function([], output)
mutated_mod['func_3116'] = func_3116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_3123 = relay.TupleGetItem(func_1858_call(), 1)
call_3124 = relay.TupleGetItem(func_1860_call(), 1)
func_83_call = mod.get_global_var('func_83')
func_85_call = mutated_mod.get_global_var('func_85')
var_3137 = relay.var("var_3137", dtype = "float32", shape = (429, 3))#candidate|3137|(429, 3)|var|float32
call_3136 = func_83_call(relay.reshape(var_3137.astype('float32'), [9, 11, 13]))
call_3138 = func_83_call(relay.reshape(var_3137.astype('float32'), [9, 11, 13]))
uop_3140 = relay.atan(call_3136.astype('float64')) # shape=(9, 11, 13)
uop_3142 = relay.atan(call_3138.astype('float64')) # shape=(9, 11, 13)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3144 = func_2547_call()
call_3145 = func_2547_call()
output = relay.Tuple([call_3123,var_3137,uop_3140,call_3144,])
output2 = relay.Tuple([call_3124,var_3137,uop_3142,call_3145,])
func_3146 = relay.Function([var_3137,], output)
mod['func_3146'] = func_3146
mod = relay.transform.InferType()(mod)
mutated_mod['func_3146'] = func_3146
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3147 = relay.var("var_3147", dtype = "float32", shape = (429, 3))#candidate|3147|(429, 3)|var|float32
func_3146_call = mutated_mod.get_global_var('func_3146')
call_3148 = func_3146_call(var_3147)
output = call_3148
func_3149 = relay.Function([var_3147], output)
mutated_mod['func_3149'] = func_3149
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2732_call = mod.get_global_var('func_2732')
func_2734_call = mutated_mod.get_global_var('func_2734')
call_3175 = func_2732_call()
call_3176 = func_2732_call()
output = relay.Tuple([call_3175,])
output2 = relay.Tuple([call_3176,])
func_3182 = relay.Function([], output)
mod['func_3182'] = func_3182
mod = relay.transform.InferType()(mod)
mutated_mod['func_3182'] = func_3182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3182_call = mutated_mod.get_global_var('func_3182')
call_3183 = func_3182_call()
output = call_3183
func_3184 = relay.Function([], output)
mutated_mod['func_3184'] = func_3184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3188 = func_2547_call()
call_3189 = func_2547_call()
output = call_3188
output2 = call_3189
func_3197 = relay.Function([], output)
mod['func_3197'] = func_3197
mod = relay.transform.InferType()(mod)
output = func_3197()
func_3198 = relay.Function([], output)
mutated_mod['func_3198'] = func_3198
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_3210 = relay.TupleGetItem(func_2446_call(), 2)
call_3211 = relay.TupleGetItem(func_2448_call(), 2)
output = relay.Tuple([call_3210,])
output2 = relay.Tuple([call_3211,])
func_3212 = relay.Function([], output)
mod['func_3212'] = func_3212
mod = relay.transform.InferType()(mod)
mutated_mod['func_3212'] = func_3212
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3212_call = mutated_mod.get_global_var('func_3212')
call_3213 = func_3212_call()
output = call_3213
func_3214 = relay.Function([], output)
mutated_mod['func_3214'] = func_3214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_3277 = relay.TupleGetItem(func_2707_call(), 0)
call_3278 = relay.TupleGetItem(func_2708_call(), 0)
output = call_3277
output2 = call_3278
func_3281 = relay.Function([], output)
mod['func_3281'] = func_3281
mod = relay.transform.InferType()(mod)
mutated_mod['func_3281'] = func_3281
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mutated_mod.get_global_var('func_3281')
call_3282 = func_3281_call()
output = call_3282
func_3283 = relay.Function([], output)
mutated_mod['func_3283'] = func_3283
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_3292 = relay.TupleGetItem(func_2707_call(), 0)
call_3293 = relay.TupleGetItem(func_2708_call(), 0)
func_1967_call = mod.get_global_var('func_1967')
func_1969_call = mutated_mod.get_global_var('func_1969')
var_3303 = relay.var("var_3303", dtype = "float32", shape = (1008, 1))#candidate|3303|(1008, 1)|var|float32
call_3302 = relay.TupleGetItem(func_1967_call(relay.reshape(var_3303.astype('float32'), [12, 7, 12])), 0)
call_3304 = relay.TupleGetItem(func_1969_call(relay.reshape(var_3303.astype('float32'), [12, 7, 12])), 0)
output = relay.Tuple([call_3292,call_3302,var_3303,])
output2 = relay.Tuple([call_3293,call_3304,var_3303,])
func_3305 = relay.Function([var_3303,], output)
mod['func_3305'] = func_3305
mod = relay.transform.InferType()(mod)
var_3306 = relay.var("var_3306", dtype = "float32", shape = (1008, 1))#candidate|3306|(1008, 1)|var|float32
output = func_3305(var_3306)
func_3307 = relay.Function([var_3306], output)
mutated_mod['func_3307'] = func_3307
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_3320 = func_2882_call()
call_3321 = func_2882_call()
output = relay.Tuple([call_3320,])
output2 = relay.Tuple([call_3321,])
func_3344 = relay.Function([], output)
mod['func_3344'] = func_3344
mod = relay.transform.InferType()(mod)
output = func_3344()
func_3345 = relay.Function([], output)
mutated_mod['func_3345'] = func_3345
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3281_call = mod.get_global_var('func_3281')
func_3283_call = mutated_mod.get_global_var('func_3283')
call_3361 = func_3281_call()
call_3362 = func_3281_call()
output = relay.Tuple([call_3361,])
output2 = relay.Tuple([call_3362,])
func_3388 = relay.Function([], output)
mod['func_3388'] = func_3388
mod = relay.transform.InferType()(mod)
output = func_3388()
func_3389 = relay.Function([], output)
mutated_mod['func_3389'] = func_3389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_3410 = relay.TupleGetItem(func_2686_call(), 0)
call_3411 = relay.TupleGetItem(func_2688_call(), 0)
func_2446_call = mod.get_global_var('func_2446')
func_2448_call = mutated_mod.get_global_var('func_2448')
call_3419 = relay.TupleGetItem(func_2446_call(), 0)
call_3420 = relay.TupleGetItem(func_2448_call(), 0)
uop_3422 = relay.sqrt(call_3419.astype('float32')) # shape=(12, 9, 9)
uop_3424 = relay.sqrt(call_3420.astype('float32')) # shape=(12, 9, 9)
bop_3440 = relay.greater_equal(uop_3422.astype('bool'), relay.reshape(call_3419.astype('bool'), relay.shape_of(uop_3422))) # shape=(12, 9, 9)
bop_3443 = relay.greater_equal(uop_3424.astype('bool'), relay.reshape(call_3420.astype('bool'), relay.shape_of(uop_3424))) # shape=(12, 9, 9)
output = relay.Tuple([call_3410,bop_3440,])
output2 = relay.Tuple([call_3411,bop_3443,])
func_3449 = relay.Function([], output)
mod['func_3449'] = func_3449
mod = relay.transform.InferType()(mod)
mutated_mod['func_3449'] = func_3449
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3449_call = mutated_mod.get_global_var('func_3449')
call_3450 = func_3449_call()
output = call_3450
func_3451 = relay.Function([], output)
mutated_mod['func_3451'] = func_3451
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2732_call = mod.get_global_var('func_2732')
func_2734_call = mutated_mod.get_global_var('func_2734')
call_3458 = func_2732_call()
call_3459 = func_2732_call()
output = relay.Tuple([call_3458,])
output2 = relay.Tuple([call_3459,])
func_3484 = relay.Function([], output)
mod['func_3484'] = func_3484
mod = relay.transform.InferType()(mod)
mutated_mod['func_3484'] = func_3484
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3484_call = mutated_mod.get_global_var('func_3484')
call_3485 = func_3484_call()
output = call_3485
func_3486 = relay.Function([], output)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3484_call = mod.get_global_var('func_3484')
func_3486_call = mutated_mod.get_global_var('func_3486')
call_3492 = relay.TupleGetItem(func_3484_call(), 0)
call_3493 = relay.TupleGetItem(func_3486_call(), 0)
func_3197_call = mod.get_global_var('func_3197')
func_3198_call = mutated_mod.get_global_var('func_3198')
call_3506 = func_3197_call()
call_3507 = func_3197_call()
func_1868_call = mod.get_global_var('func_1868')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_3515 = func_1868_call()
call_3516 = func_1868_call()
bop_3521 = relay.mod(call_3492.astype('float64'), relay.reshape(call_3506.astype('float64'), relay.shape_of(call_3492))) # shape=(12, 9, 9)
bop_3524 = relay.mod(call_3493.astype('float64'), relay.reshape(call_3507.astype('float64'), relay.shape_of(call_3493))) # shape=(12, 9, 9)
func_3449_call = mod.get_global_var('func_3449')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_3542 = relay.TupleGetItem(func_3449_call(), 0)
call_3543 = relay.TupleGetItem(func_3451_call(), 0)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_3545 = relay.TupleGetItem(func_2686_call(), 0)
call_3546 = relay.TupleGetItem(func_2688_call(), 0)
func_3344_call = mod.get_global_var('func_3344')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_3563 = relay.TupleGetItem(func_3344_call(), 0)
call_3564 = relay.TupleGetItem(func_3345_call(), 0)
output = relay.Tuple([call_3515,bop_3521,call_3542,call_3545,call_3563,])
output2 = relay.Tuple([call_3516,bop_3524,call_3543,call_3546,call_3564,])
func_3569 = relay.Function([], output)
mod['func_3569'] = func_3569
mod = relay.transform.InferType()(mod)
mutated_mod['func_3569'] = func_3569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mutated_mod.get_global_var('func_3569')
call_3570 = func_3569_call()
output = call_3570
func_3571 = relay.Function([], output)
mutated_mod['func_3571'] = func_3571
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3572 = relay.var("var_3572", dtype = "int64", shape = (15, 4, 12))#candidate|3572|(15, 4, 12)|var|int64
var_3573 = relay.var("var_3573", dtype = "int64", shape = (15, 4, 12))#candidate|3573|(15, 4, 12)|var|int64
bop_3574 = relay.logical_xor(var_3572.astype('int64'), relay.reshape(var_3573.astype('int64'), relay.shape_of(var_3572))) # shape=(15, 4, 12)
uop_3593 = relay.rsqrt(var_3573.astype('float32')) # shape=(15, 4, 12)
output = relay.Tuple([bop_3574,uop_3593,])
output2 = relay.Tuple([bop_3574,uop_3593,])
func_3598 = relay.Function([var_3572,var_3573,], output)
mod['func_3598'] = func_3598
mod = relay.transform.InferType()(mod)
var_3599 = relay.var("var_3599", dtype = "int64", shape = (15, 4, 12))#candidate|3599|(15, 4, 12)|var|int64
var_3600 = relay.var("var_3600", dtype = "int64", shape = (15, 4, 12))#candidate|3600|(15, 4, 12)|var|int64
output = func_3598(var_3599,var_3600,)
func_3601 = relay.Function([var_3599,var_3600,], output)
mutated_mod['func_3601'] = func_3601
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3449_call = mod.get_global_var('func_3449')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_3641 = relay.TupleGetItem(func_3449_call(), 1)
call_3642 = relay.TupleGetItem(func_3451_call(), 1)
output = call_3641
output2 = call_3642
func_3657 = relay.Function([], output)
mod['func_3657'] = func_3657
mod = relay.transform.InferType()(mod)
mutated_mod['func_3657'] = func_3657
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mutated_mod.get_global_var('func_3657')
call_3658 = func_3657_call()
output = call_3658
func_3659 = relay.Function([], output)
mutated_mod['func_3659'] = func_3659
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3212_call = mod.get_global_var('func_3212')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_3663 = relay.TupleGetItem(func_3212_call(), 0)
call_3664 = relay.TupleGetItem(func_3214_call(), 0)
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_3734 = relay.TupleGetItem(func_3008_call(), 0)
call_3735 = relay.TupleGetItem(func_3009_call(), 0)
func_3598_call = mod.get_global_var('func_3598')
func_3601_call = mutated_mod.get_global_var('func_3601')
var_3737 = relay.var("var_3737", dtype = "int64", shape = (720,))#candidate|3737|(720,)|var|int64
call_3736 = relay.TupleGetItem(func_3598_call(relay.reshape(var_3737.astype('int64'), [15, 4, 12]), relay.reshape(var_3737.astype('int64'), [15, 4, 12]), ), 1)
call_3738 = relay.TupleGetItem(func_3601_call(relay.reshape(var_3737.astype('int64'), [15, 4, 12]), relay.reshape(var_3737.astype('int64'), [15, 4, 12]), ), 1)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_3745 = func_2547_call()
call_3746 = func_2547_call()
output = relay.Tuple([call_3663,call_3734,call_3736,var_3737,call_3745,])
output2 = relay.Tuple([call_3664,call_3735,call_3738,var_3737,call_3746,])
func_3753 = relay.Function([var_3737,], output)
mod['func_3753'] = func_3753
mod = relay.transform.InferType()(mod)
mutated_mod['func_3753'] = func_3753
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3754 = relay.var("var_3754", dtype = "int64", shape = (720,))#candidate|3754|(720,)|var|int64
func_3753_call = mutated_mod.get_global_var('func_3753')
call_3755 = func_3753_call(var_3754)
output = call_3755
func_3756 = relay.Function([var_3754], output)
mutated_mod['func_3756'] = func_3756
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_3778 = relay.TupleGetItem(func_2969_call(), 0)
call_3779 = relay.TupleGetItem(func_2970_call(), 0)
func_1797_call = mod.get_global_var('func_1797')
func_1800_call = mutated_mod.get_global_var('func_1800')
var_3785 = relay.var("var_3785", dtype = "uint8", shape = (150, 2))#candidate|3785|(150, 2)|var|uint8
call_3784 = func_1797_call(relay.reshape(var_3785.astype('uint8'), [2, 15, 10]), relay.reshape(var_3785.astype('uint8'), [2, 15, 10]), )
call_3786 = func_1797_call(relay.reshape(var_3785.astype('uint8'), [2, 15, 10]), relay.reshape(var_3785.astype('uint8'), [2, 15, 10]), )
func_3212_call = mod.get_global_var('func_3212')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_3791 = relay.TupleGetItem(func_3212_call(), 0)
call_3792 = relay.TupleGetItem(func_3214_call(), 0)
var_3797 = relay.var("var_3797", dtype = "float64", shape = (12, 9, 9))#candidate|3797|(12, 9, 9)|var|float64
bop_3798 = relay.less_equal(call_3778.astype('bool'), relay.reshape(var_3797.astype('bool'), relay.shape_of(call_3778))) # shape=(12, 9, 9)
bop_3801 = relay.less_equal(call_3779.astype('bool'), relay.reshape(var_3797.astype('bool'), relay.shape_of(call_3779))) # shape=(12, 9, 9)
uop_3812 = relay.tan(var_3785.astype('float64')) # shape=(150, 2)
output = relay.Tuple([call_3784,call_3791,bop_3798,uop_3812,])
output2 = relay.Tuple([call_3786,call_3792,bop_3801,uop_3812,])
func_3814 = relay.Function([var_3785,var_3797,], output)
mod['func_3814'] = func_3814
mod = relay.transform.InferType()(mod)
var_3815 = relay.var("var_3815", dtype = "uint8", shape = (150, 2))#candidate|3815|(150, 2)|var|uint8
var_3816 = relay.var("var_3816", dtype = "float64", shape = (12, 9, 9))#candidate|3816|(12, 9, 9)|var|float64
output = func_3814(var_3815,var_3816,)
func_3817 = relay.Function([var_3815,var_3816,], output)
mutated_mod['func_3817'] = func_3817
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mod.get_global_var('func_3657')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_3894 = func_3657_call()
call_3895 = func_3657_call()
func_1821_call = mod.get_global_var('func_1821')
func_1823_call = mutated_mod.get_global_var('func_1823')
call_3909 = relay.TupleGetItem(func_1821_call(), 0)
call_3910 = relay.TupleGetItem(func_1823_call(), 0)
output = relay.Tuple([call_3894,call_3909,])
output2 = relay.Tuple([call_3895,call_3910,])
func_3913 = relay.Function([], output)
mod['func_3913'] = func_3913
mod = relay.transform.InferType()(mod)
mutated_mod['func_3913'] = func_3913
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3913_call = mutated_mod.get_global_var('func_3913')
call_3914 = func_3913_call()
output = call_3914
func_3915 = relay.Function([], output)
mutated_mod['func_3915'] = func_3915
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_3927 = relay.TupleGetItem(func_2686_call(), 0)
call_3928 = relay.TupleGetItem(func_2688_call(), 0)
output = call_3927
output2 = call_3928
func_3929 = relay.Function([], output)
mod['func_3929'] = func_3929
mod = relay.transform.InferType()(mod)
output = func_3929()
func_3930 = relay.Function([], output)
mutated_mod['func_3930'] = func_3930
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_3948 = relay.TupleGetItem(func_2248_call(), 5)
call_3949 = relay.TupleGetItem(func_2250_call(), 5)
func_3814_call = mod.get_global_var('func_3814')
func_3817_call = mutated_mod.get_global_var('func_3817')
var_3974 = relay.var("var_3974", dtype = "uint8", shape = (300,))#candidate|3974|(300,)|var|uint8
call_3973 = relay.TupleGetItem(func_3814_call(relay.reshape(var_3974.astype('uint8'), [150, 2]), relay.reshape(call_3948.astype('float64'), [12, 9, 9]), ), 2)
call_3975 = relay.TupleGetItem(func_3817_call(relay.reshape(var_3974.astype('uint8'), [150, 2]), relay.reshape(call_3948.astype('float64'), [12, 9, 9]), ), 2)
output = relay.Tuple([call_3948,call_3973,var_3974,])
output2 = relay.Tuple([call_3949,call_3975,var_3974,])
func_4028 = relay.Function([var_3974,], output)
mod['func_4028'] = func_4028
mod = relay.transform.InferType()(mod)
var_4029 = relay.var("var_4029", dtype = "uint8", shape = (300,))#candidate|4029|(300,)|var|uint8
output = func_4028(var_4029)
func_4030 = relay.Function([var_4029], output)
mutated_mod['func_4030'] = func_4030
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3212_call = mod.get_global_var('func_3212')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_4039 = relay.TupleGetItem(func_3212_call(), 0)
call_4040 = relay.TupleGetItem(func_3214_call(), 0)
output = relay.Tuple([call_4039,])
output2 = relay.Tuple([call_4040,])
func_4041 = relay.Function([], output)
mod['func_4041'] = func_4041
mod = relay.transform.InferType()(mod)
output = func_4041()
func_4042 = relay.Function([], output)
mutated_mod['func_4042'] = func_4042
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2096_call = mod.get_global_var('func_2096')
func_2097_call = mutated_mod.get_global_var('func_2097')
call_4045 = func_2096_call()
call_4046 = func_2096_call()
output = relay.Tuple([call_4045,])
output2 = relay.Tuple([call_4046,])
func_4047 = relay.Function([], output)
mod['func_4047'] = func_4047
mod = relay.transform.InferType()(mod)
output = func_4047()
func_4048 = relay.Function([], output)
mutated_mod['func_4048'] = func_4048
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4082 = relay.var("var_4082", dtype = "uint16", shape = ())#candidate|4082|()|var|uint16
const_4083 = relay.const([[[-3,6],[7,6],[7,8],[7,-6],[-10,-10],[-3,-10],[1,-8],[8,-9],[-10,-2],[-5,5]],[[-2,8],[10,8],[2,-7],[-7,10],[8,10],[-7,-7],[-6,-3],[7,2],[2,-9],[-4,10]]], dtype = "uint16")#candidate|4083|(2, 10, 2)|const|uint16
bop_4084 = relay.add(var_4082.astype('uint16'), const_4083.astype('uint16')) # shape=(2, 10, 2)
func_2573_call = mod.get_global_var('func_2573')
func_2576_call = mutated_mod.get_global_var('func_2576')
call_4091 = relay.TupleGetItem(func_2573_call(relay.reshape(bop_4084.astype('uint16'), [5, 2, 4]), relay.reshape(const_4083.astype('uint16'), [5, 2, 4]), ), 0)
call_4092 = relay.TupleGetItem(func_2576_call(relay.reshape(bop_4084.astype('uint16'), [5, 2, 4]), relay.reshape(const_4083.astype('uint16'), [5, 2, 4]), ), 0)
output = relay.Tuple([bop_4084,call_4091,])
output2 = relay.Tuple([bop_4084,call_4092,])
func_4093 = relay.Function([var_4082,], output)
mod['func_4093'] = func_4093
mod = relay.transform.InferType()(mod)
var_4094 = relay.var("var_4094", dtype = "uint16", shape = ())#candidate|4094|()|var|uint16
output = func_4093(var_4094)
func_4095 = relay.Function([var_4094], output)
mutated_mod['func_4095'] = func_4095
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_4097 = relay.TupleGetItem(func_2707_call(), 0)
call_4098 = relay.TupleGetItem(func_2708_call(), 0)
func_2649_call = mod.get_global_var('func_2649')
func_2653_call = mutated_mod.get_global_var('func_2653')
var_4104 = relay.var("var_4104", dtype = "bool", shape = (8, 182))#candidate|4104|(8, 182)|var|bool
call_4103 = func_2649_call(relay.reshape(var_4104.astype('bool'), [13, 7, 16]), relay.reshape(var_4104.astype('bool'), [13, 7, 16]), )
call_4105 = func_2649_call(relay.reshape(var_4104.astype('bool'), [13, 7, 16]), relay.reshape(var_4104.astype('bool'), [13, 7, 16]), )
func_2732_call = mod.get_global_var('func_2732')
func_2734_call = mutated_mod.get_global_var('func_2734')
call_4130 = func_2732_call()
call_4131 = func_2732_call()
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_4135 = relay.TupleGetItem(func_3008_call(), 0)
call_4136 = relay.TupleGetItem(func_3009_call(), 0)
func_1797_call = mod.get_global_var('func_1797')
func_1800_call = mutated_mod.get_global_var('func_1800')
var_4151 = relay.var("var_4151", dtype = "uint8", shape = (150, 2))#candidate|4151|(150, 2)|var|uint8
call_4150 = func_1797_call(relay.reshape(var_4151.astype('uint8'), [2, 15, 10]), relay.reshape(var_4151.astype('uint8'), [2, 15, 10]), )
call_4152 = func_1797_call(relay.reshape(var_4151.astype('uint8'), [2, 15, 10]), relay.reshape(var_4151.astype('uint8'), [2, 15, 10]), )
output = relay.Tuple([call_4097,call_4103,var_4104,call_4130,call_4135,call_4150,var_4151,])
output2 = relay.Tuple([call_4098,call_4105,var_4104,call_4131,call_4136,call_4152,var_4151,])
func_4156 = relay.Function([var_4104,var_4151,], output)
mod['func_4156'] = func_4156
mod = relay.transform.InferType()(mod)
var_4157 = relay.var("var_4157", dtype = "bool", shape = (8, 182))#candidate|4157|(8, 182)|var|bool
var_4158 = relay.var("var_4158", dtype = "uint8", shape = (150, 2))#candidate|4158|(150, 2)|var|uint8
output = func_4156(var_4157,var_4158,)
func_4159 = relay.Function([var_4157,var_4158,], output)
mutated_mod['func_4159'] = func_4159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4041_call = mod.get_global_var('func_4041')
func_4042_call = mutated_mod.get_global_var('func_4042')
call_4232 = relay.TupleGetItem(func_4041_call(), 0)
call_4233 = relay.TupleGetItem(func_4042_call(), 0)
func_2383_call = mod.get_global_var('func_2383')
func_2387_call = mutated_mod.get_global_var('func_2387')
var_4257 = relay.var("var_4257", dtype = "int32", shape = (1764,))#candidate|4257|(1764,)|var|int32
call_4256 = relay.TupleGetItem(func_2383_call(relay.reshape(var_4257.astype('int32'), [9, 14, 14]), relay.reshape(var_4257.astype('bool'), [9, 14, 14]), ), 0)
call_4258 = relay.TupleGetItem(func_2387_call(relay.reshape(var_4257.astype('int32'), [9, 14, 14]), relay.reshape(var_4257.astype('bool'), [9, 14, 14]), ), 0)
uop_4261 = relay.sinh(var_4257.astype('float32')) # shape=(1764,)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_4263 = func_2547_call()
call_4264 = func_2547_call()
bop_4266 = relay.right_shift(call_4256.astype('uint64'), relay.reshape(var_4257.astype('uint64'), relay.shape_of(call_4256))) # shape=(9, 14, 14)
bop_4269 = relay.right_shift(call_4258.astype('uint64'), relay.reshape(var_4257.astype('uint64'), relay.shape_of(call_4258))) # shape=(9, 14, 14)
func_2882_call = mod.get_global_var('func_2882')
func_2884_call = mutated_mod.get_global_var('func_2884')
call_4276 = func_2882_call()
call_4277 = func_2882_call()
func_1918_call = mod.get_global_var('func_1918')
func_1921_call = mutated_mod.get_global_var('func_1921')
call_4281 = relay.TupleGetItem(func_1918_call(relay.reshape(call_4276.astype('float32'), [16, 16])), 0)
call_4282 = relay.TupleGetItem(func_1921_call(relay.reshape(call_4276.astype('float32'), [16, 16])), 0)
func_1244_call = mod.get_global_var('func_1244')
func_1246_call = mutated_mod.get_global_var('func_1246')
var_4290 = relay.var("var_4290", dtype = "bool", shape = (160,))#candidate|4290|(160,)|var|bool
call_4289 = relay.TupleGetItem(func_1244_call(relay.reshape(var_4290.astype('bool'), [4, 10, 4])), 0)
call_4291 = relay.TupleGetItem(func_1246_call(relay.reshape(var_4290.astype('bool'), [4, 10, 4])), 0)
var_4292 = relay.var("var_4292", dtype = "float32", shape = (1764,))#candidate|4292|(1764,)|var|float32
bop_4293 = relay.less(uop_4261.astype('bool'), relay.reshape(var_4292.astype('bool'), relay.shape_of(uop_4261))) # shape=(1764,)
var_4296 = relay.var("var_4296", dtype = "bool", shape = (4, 10, 4))#candidate|4296|(4, 10, 4)|var|bool
bop_4297 = relay.floor_divide(call_4289.astype('float32'), relay.reshape(var_4296.astype('float32'), relay.shape_of(call_4289))) # shape=(4, 10, 4)
bop_4300 = relay.floor_divide(call_4291.astype('float32'), relay.reshape(var_4296.astype('float32'), relay.shape_of(call_4291))) # shape=(4, 10, 4)
output = relay.Tuple([call_4232,call_4263,bop_4266,call_4276,call_4281,var_4290,bop_4293,bop_4297,])
output2 = relay.Tuple([call_4233,call_4264,bop_4269,call_4277,call_4282,var_4290,bop_4293,bop_4300,])
func_4309 = relay.Function([var_4257,var_4290,var_4292,var_4296,], output)
mod['func_4309'] = func_4309
mod = relay.transform.InferType()(mod)
var_4310 = relay.var("var_4310", dtype = "int32", shape = (1764,))#candidate|4310|(1764,)|var|int32
var_4311 = relay.var("var_4311", dtype = "bool", shape = (160,))#candidate|4311|(160,)|var|bool
var_4312 = relay.var("var_4312", dtype = "float32", shape = (1764,))#candidate|4312|(1764,)|var|float32
var_4313 = relay.var("var_4313", dtype = "bool", shape = (4, 10, 4))#candidate|4313|(4, 10, 4)|var|bool
output = func_4309(var_4310,var_4311,var_4312,var_4313,)
func_4314 = relay.Function([var_4310,var_4311,var_4312,var_4313,], output)
mutated_mod['func_4314'] = func_4314
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mod.get_global_var('func_3344')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_4425 = relay.TupleGetItem(func_3344_call(), 0)
call_4426 = relay.TupleGetItem(func_3345_call(), 0)
func_348_call = mod.get_global_var('func_348')
func_352_call = mutated_mod.get_global_var('func_352')
const_4442 = relay.const([9.618080,-3.269685,-2.949534,6.954960,0.759880,-1.265015,-9.614963,-1.586592,-5.409940,-1.303736,9.962954,1.549651,-0.201539,-2.700709,-8.861595,-1.223118,9.515263,8.177423,8.677469,6.916620,-2.066562,-5.972926,7.464542,-5.123851,-5.498211,0.524699,-2.318241,9.910700,-5.320205,-8.246816,-5.681556,0.400683,-6.564273,9.530799,2.948408,-4.045456,0.698048,-1.715277,2.905908,-0.170209,1.223485,8.372728,-9.763933,-4.845648,-1.328357,-0.826647,7.328753,7.364635,-3.299922,7.424730,5.467859,8.313163,-4.617805,3.902829,-6.883122,6.347328,0.502777,3.793568,-5.750522,3.709648,-7.810807,9.096697,3.127714,8.690431,-5.370054,8.519150,-0.296061,-8.847200,-9.991040,4.649143,0.542494,-2.678979,6.047378,9.724988,-1.437393,0.628041,-3.154175,-7.376484,7.240072,9.250732,2.999339,1.318578,1.734274,-9.781767,5.020733,-7.765638,5.801410,-4.697897,-4.308577,-2.992455,-5.911649,0.972333,-6.523016,-5.670841,-7.131720,8.679610,-0.079689,2.646255,-8.506846,5.055990,4.260556,7.675678,-6.120742,-3.594010,2.460187,9.135798,-8.360118,-7.316288,7.748051,-2.923247,-4.076001,1.737723,-6.791502,-2.756403,-9.005460,-8.718755,6.065771,-5.131006,4.841500,-9.382667,8.710138,-7.401556,-6.587205,1.419528,2.705960,4.095852,4.197545,-8.580162,-0.350247,5.755532,-0.383755,-0.822559,9.798425,-3.443645,1.333320,7.631828,-9.630826,-6.404327,-0.759724,-4.109588,8.386689,0.811818,-9.359911,-2.976810,-7.302528,-9.021098,-4.949182,-3.981407,4.233461,-2.765608,6.353936,-6.896279,-3.775294,-6.231903,-0.563460,-1.345011,8.279110,-9.389535,-8.796477,-4.273174,-7.538685,9.059632,8.963905,-0.293821,-5.199885,-3.361083,-7.496740,-7.076792,0.818228,7.418090,0.797264,-9.381157,8.345282,2.434842,3.424618,-2.242667,-2.946924,-5.828797,4.382818,-2.639913,-3.658848,8.124189,6.499915,4.797332,2.736801,-7.348058,-7.030015,2.884381,-2.750354,5.281248,-3.566451,2.490654,-2.962677,-8.809513,8.249616,7.877217,6.736889,-3.504305,-5.824516,-7.438158,6.276088,2.057919,8.558439,1.740282,1.419127,4.119827,4.223087,-1.919022,4.332967,2.164056,5.976453,-6.681883,-8.430282,-3.435748,-6.224564,-2.855213,6.905135,3.143767,-9.533969,-2.564424,-0.255636,7.046696,3.584390,9.389533,-7.634018,5.528926,8.846944,8.554134,-4.581754,9.349239,-2.505913,-6.617583,7.527430,-5.872880,5.079619,4.225435,-3.868257,8.516392,-3.311439,-8.926454,6.382385,-7.835768,3.449063,-3.415466,4.159715,-3.656828,5.552305,-6.969701,8.628160,-5.419069,4.687261,-3.928634,-1.634742,6.189953,-6.354219,-1.486202,7.062258,-6.747762,-9.228557,1.296574,-2.900969,2.185523,-2.566103,-4.790154,-0.317600,-4.042509,-3.838496,6.621627,-7.114225,3.425873,5.471083,9.166198,4.280510,7.481419,-4.107356,2.765499,3.760485,3.822429,-2.814139,7.359129,-2.024057,2.096931,-1.253444,-8.345432,7.130986,4.688510,1.032067,-7.030431,-5.794978,-3.024317,-0.437451,-1.302252,-8.825596,9.796045,4.109980,9.185478,4.465528,1.445707,5.743629,-4.350418,3.572861,9.141703,-0.378205,6.763214,-9.980257,-6.618463,-7.989220,-9.228193,-5.922143,3.257440,-1.549299,4.260742,9.897020,5.059536,-9.969310,-4.294291,0.132308,-9.078191,8.706600,-7.767733,4.383154,-6.464433,5.289502,-2.692712,-7.785593,-3.585812,-8.168061,-2.224616,-7.107168,4.164101,-4.417819,-8.240990,3.400351,5.955273,9.974037,-5.034650,-0.106493,-9.349361,2.771067,4.375475,-1.528561,-1.077318,-7.107672,0.010947,-7.259469,3.694378,-9.019113,-3.215083,0.419011,-0.496066,-9.156564,0.165211,2.867714,-6.219746,2.820604,-3.700048,0.690019,-1.840666,-5.047309,-5.785367,-9.494749,6.559429,-0.853916,4.849319,2.619101,-7.258632,-4.410667,7.974285,8.921130,7.214230,3.476524,-9.991964,-0.377840,-9.710361,-7.459844,-9.694057,5.956921,1.802707,6.903624,5.039732,-8.121220,-5.028703,7.411360,-7.895798,-6.266713,4.182150,-6.582719,-7.299491,3.447119,9.955962,-6.420844,-9.115776,9.435208,0.724074,-7.805104,4.736041,-9.672488,-9.533590,6.637133,-9.141203,-4.906467,-9.477455,1.535552,6.644225,1.207410,5.683881,-0.225691,5.018903,1.269387,1.269115,4.115814,7.837437,-7.739341,-1.404970,-2.570886,8.195599,-5.091598,2.792992,2.557711,-1.908419,9.198965,-7.975234,-7.025572,7.329260,-7.748571,0.595006,-1.815249,0.256514,-1.285537,-2.632120,-8.694538,0.949030,6.801091,-1.450664,-5.365682,-4.396773,-8.528798,6.187946,-3.555612,2.277650,1.012863,0.185406,2.251234,1.316220,-5.769031,-3.254477,3.493593,4.233262,9.426386,5.530561,7.310641,4.600277,-9.083245,-5.546857,-7.016210,9.111973,-2.515351,9.372627,2.242745,-0.265680,-5.534681,-5.704840,-7.906277,8.434571,-0.333967,2.130935,-3.275393,1.384119,-5.371591,2.864284,1.246243,-7.984074,8.081153,8.203233,-9.979072,-0.845331,1.549117,6.692228,0.752776,6.507566,4.505692,6.907907,9.070517,1.063576,-2.066596,-7.518911,7.896785,9.686502,-6.203274,-2.829170,-1.890550,-2.515326,3.858702,-2.828354,-5.814978,-3.741492,-4.294999,5.309773,0.343459,2.661208,6.504903,2.993012,5.668321,-8.548142,-4.028827,-4.446446,1.181221,-7.200026,-0.582026,7.659997,-2.328424,6.718604,1.026960,-6.525030,9.759744,-9.380166,-3.288245,2.039536,6.591505,3.109208,-7.603363,-5.300940,-2.211738,0.226119,7.616490,8.178279,-7.620878,0.328551,3.103046,-5.512277,6.728324,-8.586810,5.438637,2.521210,0.719198,-2.603746,2.606757,4.396093,1.973728,-3.048882,-1.148623,-5.156412,-6.026129,-9.484168,1.803992,-0.550218,-2.741130,-6.566639,0.700166,-8.601552,5.801758,-8.551189,1.732428,-1.193667,-9.552084,-0.695793,6.122640,-5.340128,-0.223036,8.873862,2.912166,-6.664101,-0.794987,4.899538,5.278301,-3.038412,-6.191694,8.338051,0.403823,-9.990740,-1.985694,-2.084670,3.126454,-7.538531,8.606388,-8.049139,5.262237,-4.598520,1.327426,8.879677,9.884231,0.654461,3.884377,-0.243797,7.045286,-4.646909,7.268775,8.456715,6.620367,-0.839814,9.813348,-4.127769,1.847531,0.678093,-0.433059,0.940870,-7.990855,-0.573399,1.445586,-6.329463,1.492586,6.888810,2.720445,-6.348848,-7.613564,-1.533477,6.391473,-4.289046,2.882008,5.116439,2.453763,-9.631215,-5.031362,6.908279,1.270975,-7.761469,-4.167520,1.539689,-5.860560,8.214635,-4.454202,-5.241748,-6.677255,-8.620626,-1.908368,1.085805,1.311314,-9.156386,-7.472461,7.263819,4.188670,4.537372,8.204713,-4.646530,-5.478336,-7.992265,2.603475,-6.895592,-4.422287,1.586272,-9.779151,-8.000300,-7.115809,6.249650,-7.407437,-8.246800,-9.807917,4.888813,-0.229536,1.851445,0.379075,3.896729,2.074231,-4.526460,9.801233,-1.780796,2.599198,1.611268,4.887209,-6.718293,7.165378,-5.754093,-0.467927,-3.113291,1.116227,8.415052,5.864580,9.208359,-8.888128,-7.556167,7.327972,-7.762989,4.764944,1.699319,-3.457386,-4.350386,-4.178208,-1.836332,7.275669,-6.149658,-7.216582,6.538537,-1.439134,-6.513237,3.706673,-6.420196,-9.410430,2.364445,-9.720338,-7.859634,-9.924256,1.301324,2.608883,-5.669924,-5.307231,1.823754,-2.624605,-9.453778,3.247604,-8.684574,-1.250051,-2.664818,6.384977,-1.172847,-0.236878,-5.797991,-2.099506,2.198397,2.809097,-5.492832,-0.566294,2.100216,-7.627528,-6.364335,-5.487309,-8.445608,4.965823,0.747503,-7.795034,8.531360,5.809308,-5.797988,7.619149,3.295211,0.966212,-8.964870,-8.885977,-8.331300,5.162559,-2.460086,4.126919,-5.640485,8.853495,6.965470,-2.578185,-5.924431,2.709149,3.520534,0.364196,6.183537,-4.739412,-1.386295,2.885632,7.690644,0.777717,2.608194,5.866704,-3.518189,8.070744,-1.706342,-8.474910,4.286098,8.877768,-5.892661,-0.730798,6.727335,0.081377,8.030469,6.014538,5.505971,-1.362243,5.086858,2.116178,1.605828,-4.731869,-0.909996,-2.524349,-8.127852,-3.755012,-9.610157,-8.529950,2.049341,-1.643849,6.663880,4.851498,-8.853161,0.219698,1.367100,8.133129,2.349576,1.866443,-6.903944,-0.333650,2.343736,2.524798,8.999214,-7.251566,3.447750,7.829824,-5.152777,-7.565705,-5.198348,-1.488899,-8.951483,-7.930726,4.258902,0.388065,-5.855371,-6.299764,-9.991706,0.130907,-1.973240,-0.565955,-9.495823,-9.472567,-4.069086,-1.475724,-6.819669,6.396607,-1.316415,-5.458288,6.274825,-8.963549,7.566419,2.553211,-6.433649,2.047975,-9.035203,1.207939,1.389473,4.533723,-5.417323,0.964792,8.123337,9.079723,-3.046104,5.847424,2.817202,6.451546,6.974367,-0.384044,-8.535565,-3.228843,9.780305,1.132615,3.306780,-0.937005,-9.764330,-1.187309,-3.219524,-1.271367,7.717592,-2.388474,3.975406,-8.663554,9.163115,-1.735897,-1.793226,-8.535569,-1.499982,0.211189,8.513540,7.148944,3.752740,0.469673,5.647357,-6.663954,2.766977,9.949048,8.107645,2.860975,-4.912358,-6.026773,-3.898189,-9.965056,-3.664706,-0.252334,-4.028301,-0.129169,1.611142,0.778145,3.676738,-9.335756,2.333244,4.734955,5.543086,4.076057,-8.874564,-4.880469,-4.815717,-7.839040,-2.435518,-2.823882,-8.032683,-3.077276,-5.379309,0.863093,-8.898437,9.532916,9.120623,-1.950724,0.544918,9.469480,9.880631,0.609029,-2.623026,-1.024764,-7.726863,5.421290,8.957208,9.963046,-1.828505,8.848895,-0.088510,-0.641626,5.236365,-1.805845,-9.904824,3.428252,0.399649,0.800151,-8.206549,1.562658,4.238893,8.749333,-0.840103,-3.202419,2.291711,9.032540,-3.230119,-1.474246,-8.687208,5.492697,-5.659624,-9.255344,9.074113,6.596152,-3.436477,-2.833878,-0.361916,-5.667403,-0.982426,8.032392,5.090271,6.914572,-8.499125,3.225955,-8.166944,1.802888,4.285611,4.729615,0.030651,-6.531407,9.439623,4.214335,7.201122,-7.298554,8.751030,9.352069,8.374200,-4.518623,-5.889646,-7.856647,-7.426048,8.344054,-2.701114,-8.972829,-6.395640,4.113939,-4.179455,6.301703,-5.457582,0.373974,5.212134,-5.386481,-5.734320,-3.960910,1.862609,7.886814,-9.504332,4.671152,8.978471,-7.884248,2.217810,6.332536,1.441220,1.086367,3.400701,3.904514,1.509632,7.161372,-2.785217,4.893942,-6.956113,-9.111894,0.177957,0.525119,3.045984,-3.389502,3.812369,-9.761148,-0.618569,0.708487,2.249307,-7.022075,-2.908618,-7.135076,3.116586,-5.265940,-7.846765,-7.471679,3.015903,3.131053,-3.497871,3.473576,3.067428,-8.040595,2.735376,2.329075,-7.138562,9.698746,4.161327,5.512157,1.104940,1.521007,-0.257959,-2.345230,3.136476,5.944322,2.440315,-3.431521,-2.908292,4.844695,-2.205986,-8.897208,-4.849806,6.578044,5.287558,1.200780,1.153866,3.277580,-2.050874,4.511528,9.155989,7.217020,8.675805,3.035364,-9.269115,0.839007,-8.472404,9.868138,6.741150,-2.761152,-4.972140,-7.000792,-7.429120,8.008175,9.283957,4.114900,5.088806,9.597520,-6.570935,2.668715,9.403054,4.854740,-4.961223,9.275868,9.192670,5.931844,1.560303,4.355463,9.119427,-3.588577,5.119581,0.652730,6.663208,1.508744,3.158858,-6.382484,0.781548,-6.473067,4.185502,-5.512714,-5.251631,-6.719930,0.989718,2.224578,-2.220901,6.376368,5.546468,3.959150,7.459360,-5.602331,0.694072,-6.213077,-6.202841,-8.928736,-3.246330,4.715308,-0.536625,-4.839296,1.202524,-5.515591,7.431857,-2.931052,-5.261267,3.880146,-3.721877,1.008438,2.259546,1.038640,-2.616661,9.294257,-0.374394,3.831730,-3.724588,-9.156314,-1.651921,3.935863,-5.696704,-8.291706,8.978399,-3.492592,-3.988631,1.445080,4.192469,0.391070,4.483566,-4.894772,2.370357,-5.619609,8.708466,-2.031643,-8.318222,-5.681418,0.400824,4.272512,-8.846666,-9.181985,3.880409,-2.907274,-5.588240,0.580298,-6.936334,8.011560,4.790436,2.968473,-7.247236,-7.996528,-3.003579,0.225551,-4.483696,-5.610742,6.846647,7.212979,0.414576,9.271444,3.903934,9.826143,5.016388,-7.349408,-2.106699,0.245567,5.620325,2.266512,-1.167373,6.145159,-2.038080,-2.139013,-2.521507,-2.047173,6.798444,-9.419365,-9.489661,1.269123,-6.173752,4.297096,0.198664,-1.124086,-1.646141,-1.123862,-3.491007,7.664565,-9.151034,-8.530005,7.188976,-2.062433,6.928480,-6.180134,-2.354845,7.939958,9.932868,8.396735,3.977813,3.454499,-5.223140,2.271508,0.049346,7.693585,-0.772898,-5.134372,-9.262858,-6.909602,3.471151,-8.677135,-3.256503,5.917275,-5.231831,0.006896,-0.529462,2.070258,-3.150251,0.054770,-4.745155,2.036057,0.798245,-9.385381,-4.192739,5.523541,7.314966,4.685761,0.140186,6.960598,-1.291779,6.654250,4.399644,0.153900,8.435883,5.025231,0.266371,-3.681297,0.908944,-9.212565,-9.762425,6.566169,1.789628,8.415927,1.564826,-2.014704,1.437109,-5.018066,3.635796,7.101128,0.922536,-8.541786,4.723528,6.063193,1.604592,6.001169,2.012188,-5.772156,4.781456,2.186889,-6.792572,-8.591857,1.156739,4.580959,-6.275877,-8.177784,9.075483,-8.197874,7.946993,0.554073,-0.749894,-9.189073,-9.241395,-3.226724,4.687157,-8.889799,-0.853531,7.189366,-6.506786,-9.992310,4.195790,-1.540675,0.337521,-7.938549,-9.690946,4.876592,-1.394323,-8.727248,-2.776905,-5.360957,-2.030618,-5.591286,-3.630794,-9.612855,-6.150278,8.032337,0.151754,-7.773798,0.007577,-8.515258,3.878779,-6.814525,6.464863,-9.324732,8.236144,0.629725,8.580766,-3.408241,-5.960357,-8.421799,9.609319,-9.213777,8.652793,2.537082,6.164347,-9.595438,-9.076905,-8.204366,1.972475,1.534987,-2.757874,-1.253838,-1.157793,4.858881,-5.283455,1.254060,7.109182,-1.626666,9.073125,5.351994,9.187089,3.519119,-4.246514,-2.797840,-4.878294,2.387728,-5.167004,-0.995146,-0.511227,1.261029,-4.912007,8.682466,7.613710,-8.405942,7.948706,3.185528,-2.186643,-7.900366,7.054009,-5.852867,7.083345,-4.949236,-6.455985,-1.714157,-7.091325,5.951510,0.922201,-8.882386,-8.195403,4.874228,7.006648,2.635944,1.965543,-3.719653,-6.376077,-8.807344,-9.905081,7.859791,2.524618,-3.892557,-2.988627,-3.776502,-9.905672,-9.437070,-1.248264,-3.930185,-6.038644,9.488904,-7.819094,-0.567246,-9.652078,-6.270493,6.622512,2.319215,3.690378,-4.515318,1.148730,0.115104,-8.925788,6.845397,1.850031,-4.428552,9.354629,5.984250,5.953684,-4.919597,-1.478454,8.847015,-7.072109,6.624974,-5.779635,3.897919,-8.202339,1.448510,-7.521892,5.784083,-2.199326,-3.922645,5.991622,1.725121,9.284910,6.867925,-5.270395,-7.956834,8.496342,6.089014,7.309072,-0.878094,7.118657,-4.056905,-8.287254,-8.917593,5.623771,-2.586379,-3.430397,-7.460078,8.397587,-4.403742,-3.781276,-3.312006,-7.601957,1.996911,4.943574,5.794057,7.241013,-8.466678,-9.615902,-3.322603,8.639359,-7.923736,8.126335,-9.398867,-0.839591,-0.637684,0.228902,3.540915,-6.520113,7.224263,-7.877518,0.699299,0.294915,8.640451,-0.585745,8.972562,-4.610278,0.670700,-2.665318,-9.311994,-6.362290,3.023702,4.726524,2.579465,5.586232,6.792022,-9.838174,1.677216,6.483584,1.262421,5.084569,3.558515,-3.825955,2.375052,-0.062627,-8.748201,-6.556814,-0.988523,-1.230836,-3.131054,5.715769,3.385716,-4.497414,6.616268,6.100129,0.208498,2.528295,-7.867477,6.724139,6.825535,7.566613,6.370775,9.678986,5.635227,7.277281,-4.960269,-4.268886,-1.383877,-3.967486,-6.835990,-4.806961,-6.709751,-0.934028,-7.465852,-6.311416,-2.887137,1.678480,-9.897903,3.738465,-1.231100,6.615010,5.492888,-4.198967,-5.859836,5.732415,-4.979490,-2.461931,-3.816271,4.083035,-3.094594,-0.794663,7.748441,-8.467517,-9.811895,2.767718,8.052749,6.230572,-2.896244,-7.891764,0.718552,9.952678,-3.447615,-3.300474,0.825384,0.715743,-6.457180,-0.175136,0.396637,7.856553,-4.762902,-1.020528,7.647440,1.249854,4.872914,-3.037504,9.533944,-6.285036,2.647763,-4.251738,-0.370304,-3.123523,0.400438,-2.271023,-2.101812,4.976176,-6.500100,-3.970489,8.361231,-3.841183,2.310776,6.704760,-2.227246,-1.987717,4.159921,-9.131579,-4.131370,-5.707500,2.545289,-7.862537,-4.630940,2.852713,6.203051,-0.972298,0.474157,4.039384,5.421039,3.182443,-9.974349,4.029301,6.547065,3.471951,-4.076446,0.747959,-1.907222,6.657274,5.319203,-2.189125,-2.959737,-5.114988,8.285971,4.921071,-8.548046,-6.058677,-8.202653,-8.253079,-3.777860,-5.259183,3.255814,-3.964135,7.007216,-1.317177,-8.844306,-1.311210,7.961642,-5.317704,-1.807058,9.179461,3.419816,-4.295300,3.633311,3.667548,-7.595007,0.884703,1.781810,-6.519464,9.669555,-1.095882,6.268451,2.831624,8.092393,9.407644,5.217339,-1.054655,-3.479110,-1.319363,-0.413275,6.119105,8.247331,-8.188819,2.856058,-8.885301,-0.947086,-5.006771,8.797918,-0.857714,-3.111709,-5.385807,0.327346,-4.546734,2.881936,1.894110,-6.577353,7.686522,6.311294,-0.291372,-4.003340,-6.656284,0.433513,-8.629753,-2.821091,1.736869,-9.583175,-8.062698,5.944838,2.069953,0.393881,-5.613864,-4.667136,-6.588644,7.613603,-1.044843,9.717275,-5.686661,8.850554,7.551380,-4.282021,-8.103808,-0.370385,-3.708738,2.529532,8.141752,-1.457860,-8.407000,7.617598,2.766533,-0.092570,-3.705258,-8.267165,-2.476511,8.239037,0.440214,6.897697,-3.146229,-6.127340,4.967428,-5.693876,-2.140921,-8.938171,6.926579,0.220228,-0.941821,-5.538912,9.105683,-7.559780,5.169459,8.500859,7.197897,-0.698210,0.231130], dtype = "float64")#candidate|4442|(1680,)|const|float64
var_4443 = relay.var("var_4443", dtype = "float32", shape = (1287,))#candidate|4443|(1287,)|var|float32
call_4441 = relay.TupleGetItem(func_348_call(relay.reshape(const_4442.astype('float64'), [8, 14, 15]), relay.reshape(var_4443.astype('float32'), [143, 9]), ), 1)
call_4444 = relay.TupleGetItem(func_352_call(relay.reshape(const_4442.astype('float64'), [8, 14, 15]), relay.reshape(var_4443.astype('float32'), [143, 9]), ), 1)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_4459 = relay.TupleGetItem(func_2969_call(), 0)
call_4460 = relay.TupleGetItem(func_2970_call(), 0)
output = relay.Tuple([call_4425,call_4441,const_4442,var_4443,call_4459,])
output2 = relay.Tuple([call_4426,call_4444,const_4442,var_4443,call_4460,])
func_4462 = relay.Function([var_4443,], output)
mod['func_4462'] = func_4462
mod = relay.transform.InferType()(mod)
var_4463 = relay.var("var_4463", dtype = "float32", shape = (1287,))#candidate|4463|(1287,)|var|float32
output = func_4462(var_4463)
func_4464 = relay.Function([var_4463], output)
mutated_mod['func_4464'] = func_4464
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2493_call = mod.get_global_var('func_2493')
func_2495_call = mutated_mod.get_global_var('func_2495')
call_4475 = relay.TupleGetItem(func_2493_call(), 1)
call_4476 = relay.TupleGetItem(func_2495_call(), 1)
func_3146_call = mod.get_global_var('func_3146')
func_3149_call = mutated_mod.get_global_var('func_3149')
const_4481 = relay.const([1.853697,3.669225,7.581489,1.999337,3.161985,-9.519590,-1.449311,2.039799,7.830639,-0.511599,9.374975,-7.162488,-9.057652,8.409300,-8.601304,-7.589021,5.122825,4.918055,-4.365104,7.299168,2.657416,7.816208,-4.666371,-0.088919,6.189082,9.265014,7.064392,3.898358,4.395287,3.263685,6.192900,5.019499,-6.670415,9.282055,3.631579,-6.950133,-4.120216,-6.565050,7.448795,2.962490,-9.201175,8.827118,-4.404519,4.852409,5.082718,0.444476,-6.101509,2.702949,5.076733,-4.492563,7.069071,3.391210,-4.556061,-2.546602,-3.453354,-0.296394,-7.648622,-8.076991,9.626264,-1.113478,7.659015,4.336355,-9.022294,-2.056188,8.675672,-3.102394,3.338772,-0.244756,-5.415966,5.515008,-5.457059,8.710490,9.947992,2.080999,1.003457,-4.649998,-5.556090,-0.806336,-6.055161,-6.931202,2.894098,0.828649,0.132142,-8.888054,-2.123697,-4.559723,-5.919620,-2.057980,-0.185859,-9.402542,4.413491,-9.983875,-9.169329,0.046703,1.065618,-2.323421,-9.553712,9.930183,7.231116,2.736425,-1.765247,5.754223,5.500640,-8.208172,5.022588,1.001833,9.182223,-9.503272,6.194169,5.845995,-9.994056,2.880963,7.459706,-0.823860,5.728767,-7.460045,3.670842,-1.388674,6.811601,-9.954016,4.896476,-1.991420,1.917866,-4.016814,-5.611836,5.836378,7.324363,3.760199,-2.834238,5.568674,-7.126318,7.268272,9.003837,-6.102607,-4.491800,-3.800867,6.422314,1.534320,2.319207,9.057138,8.567317,-3.568283,6.893613,6.905609,7.523779,4.437769,-2.527372,-7.248920,-8.959048,3.187209,7.334677,-9.639383,-2.636959,-9.044710,3.017506,8.337564,-0.432533,1.884034,2.696433,6.930104,-7.184610,-4.008144,8.838230,-4.517537,-3.914193,9.243250,5.141356,-6.680716,5.379892,-1.294011,-8.972984,4.299751,3.988111,-9.065045,6.650437,-7.360176,7.592688,-3.438770,8.692946,-5.268900,-2.940077,7.601026,-6.088135,1.142181,-8.705110,-3.077175,1.228628,-6.827137,1.965436,-6.521126,-1.341678,-2.301539,8.313075,2.466396,3.615137,-2.472153,2.426038,-1.839993,7.976833,4.388708,1.515790,-5.081460,4.449828,0.356442,-3.563706,4.643125,-7.179216,-3.474505,-8.372494,-0.484745,2.646707,-0.335815,2.106131,-8.758127,-2.178740,-2.454084,-2.316522,5.502261,9.790778,-8.277160,-1.190533,4.372005,7.537802,-4.911250,8.749949,0.116998,-5.739726,6.987654,-1.825904,-8.766900,4.769204,-6.052203,-9.277595,6.497758,9.716666,5.942810,1.701229,-4.397179,-1.885200,-7.723072,-9.968103,-7.072433,5.819944,-1.242201,-2.879256,6.875785,1.190928,0.616867,5.986797,-3.610598,-4.135287,-5.125203,-7.904647,-6.167847,5.425357,-5.936153,-3.139294,-3.366175,-9.294234,-5.651575,-1.467097,-3.743062,3.535698,0.986051,-4.737944,0.087123,6.686869,-6.847756,5.292477,-6.198792,3.491740,-4.290145,7.311041,-4.916585,9.638409,-3.947035,-3.834876,5.641604,-3.392899,-4.701147,-6.690711,2.567953,9.013724,6.581983,-7.928419,9.961402,-7.221544,-6.834390,8.457400,5.186115,1.413640,-8.156338,-2.425123,0.295829,-2.391857,9.957936,-5.559038,-6.256277,-6.678887,-9.659308,9.350594,3.629498,2.814759,3.146107,-2.125139,0.221233,7.200421,3.116686,9.469317,-9.942524,-2.923349,9.191620,8.319660,-2.920599,9.940952,-3.828552,-4.398187,4.967410,6.803626,-5.225188,3.737308,8.700606,6.795763,7.003312,-4.818405,-7.021871,0.919756,3.811502,8.385786,5.809068,-2.820049,7.548673,3.472672,-8.355771,-1.464494,-1.942315,-2.032010,-0.703256,-4.749608,-0.496446,4.505775,5.009489,-0.344620,6.782419,-2.689187,8.272653,8.849821,9.136144,6.617749,2.035996,4.354300,0.164802,-1.889508,2.604543,8.755175,1.154886,5.032289,-0.663887,4.435260,4.729203,-5.761000,-6.640091,-1.435288,-2.361053,1.688105,2.861812,3.345945,-1.632100,-5.999311,-8.891076,8.059084,-2.881234,-9.755525,3.943531,4.788665,2.454679,2.517833,1.606156,7.525324,4.840082,3.138766,9.190387,1.938637,-7.462036,-1.062206,-3.402293,-6.710663,-2.082665,3.164902,-8.495140,-0.299389,-5.566716,1.455580,7.113814,3.773314,5.677054,5.921402,6.700728,-5.345361,-6.974713,-8.449184,5.852771,-8.923376,7.058180,2.675260,-0.883800,7.420561,6.527628,-9.573546,4.606555,5.918265,-9.708383,-9.525034,0.715500,-9.450890,3.630737,-2.090131,2.720120,-8.669512,-6.498249,7.083182,3.499483,0.119495,2.758476,-0.433330,6.876432,-8.155848,-4.939608,2.567328,4.117956,-4.975561,-0.513842,4.421317,4.148056,-3.705205,5.177248,-5.209454,-3.323513,8.669500,5.067581,6.326993,8.166677,-9.908971,-5.493116,-7.345437,5.472821,-4.659455,3.817479,-6.162894,2.097782,5.131260,-1.542164,3.176395,0.628596,-5.341552,-9.675181,-2.079263,7.155395,-6.390081,-8.641500,-6.814091,1.168635,-6.990187,-3.719724,7.687129,3.551566,5.638436,-2.678375,9.835706,3.703449,-6.746271,2.366632,-9.425007,0.317275,-9.634117,7.454453,-0.290267,9.946521,4.059515,9.171006,9.123052,3.187853,-3.339272,4.247914,-7.831060,3.946228,2.939549,5.257529,-4.315155,-9.916192,-1.370222,6.995957,-1.971764,9.773743,-2.038434,-9.237326,-8.751303,-2.281840,3.007231,-9.387251,4.339310,-9.463757,-4.979964,-5.538320,-6.884720,1.471122,-7.815211,3.347100,3.057760,-2.606245,0.328530,2.410751,9.126967,-9.834726,7.489100,-9.720251,3.203309,8.093556,-7.380628,-7.702424,-9.934234,8.843157,-4.198921,6.120555,-9.821393,2.057665,-6.244762,9.392861,8.797786,-4.727741,-6.397474,1.746664,5.992654,2.489421,-1.788683,7.678811,4.226902,8.953109,8.203640,7.673143,-4.065907,-6.509330,5.524060,-2.779498,0.744561,3.430265,5.511731,3.001524,-9.444561,-0.036571,-6.716630,1.190912,6.415016,1.295182,-7.769842,-6.446796,-7.324181,5.610645,-7.765204,-2.652295,8.677738,3.138755,-8.152715,4.313489,7.323247,7.700309,3.470251,2.718524,7.772144,-6.636954,8.576193,-8.775553,1.070636,4.925023,-5.090828,0.204354,1.751757,-4.329329,-6.190114,-1.521972,-0.034949,7.389114,5.060192,-5.588986,-8.030378,-9.320394,8.876644,7.404773,-9.599018,-8.145326,-1.529525,-8.300378,-8.884835,6.865494,7.090277,-8.129599,1.681350,9.346142,-0.888499,7.382469,-3.676857,-7.282184,-7.929010,-3.232146,-2.718035,0.399266,6.744472,-4.500168,1.045764,-5.356044,-3.204619,-1.042927,-9.500034,-4.380766,4.337248,5.703376,5.790155,8.115998,3.497574,-2.705519,-6.465243,-3.952370,-9.562692,0.273919,-9.537340,-0.107901,-7.893481,-7.635251,-7.565595,7.693035,-6.954065,-6.069140,-3.696422,-9.481690,4.654952,1.732359,-3.943048,9.780025,-0.563226,-2.601347,-9.040277,7.612484,9.129869,-8.223274,-9.639111,0.238397,-9.461590,-1.975734,7.370209,7.920653,-8.801295,-3.566280,-1.854662,2.974697,-0.761330,-8.272975,-6.596394,3.211694,4.804338,8.824793,3.627699,3.756645,-1.946832,-6.425820,-2.268395,7.935897,-8.084715,8.921212,9.041888,-1.772580,0.136004,1.855907,-2.469978,7.701601,-6.661962,-4.543776,-5.612618,8.151909,4.680982,-9.865586,4.066644,-2.449044,-7.118419,7.774405,-9.508515,4.422783,-8.306252,8.741633,-5.418094,-7.262135,-8.612716,-8.712844,-3.549839,3.006104,-4.137884,4.242304,1.400717,4.754169,-4.582553,-8.278984,-9.164119,-1.152879,-2.285904,-2.645377,-0.511925,8.210234,2.683208,3.224732,2.944869,2.189798,7.577207,-2.059258,2.896671,-6.184594,-1.054726,-4.303195,-7.596803,9.145525,4.101978,0.180370,-5.432500,-7.602217,1.125134,-4.707414,-6.164795,-8.448960,-8.080695,0.232830,-5.399693,7.872314,-0.803270,-0.051197,-0.482281,8.572038,1.315386,-2.852384,4.303995,6.666403,-1.174436,5.000830,3.225573,-3.915994,-0.559262,7.262572,3.573437,6.594477,0.241578,4.589649,5.889416,0.526663,3.123407,9.530973,-0.942594,5.080481,-4.257356,8.978606,-2.124942,4.652808,9.590833,-3.874858,-6.584353,-7.515318,7.036138,2.287422,-3.753813,8.221841,-3.198059,-1.902596,9.918155,-1.119295,1.823362,4.076573,3.104865,-2.288241,-6.394932,-8.159711,1.874837,-2.362509,-0.849298,4.157497,-6.555412,-9.129483,1.268667,1.858777,1.688889,-3.991987,2.879773,-7.288297,3.007214,-7.489684,4.224147,-3.214580,3.859788,4.819718,-1.800375,4.095428,7.761811,-7.569298,-0.681112,4.668751,1.920337,-1.617043,-5.420209,9.787409,-3.419000,0.043842,-0.144418,-7.911760,-3.853851,4.526325,-1.780668,6.572271,9.539785,0.218829,1.345792,6.188962,-0.570148,3.481245,-5.061573,-2.028195,-0.795885,0.247416,1.032498,6.111184,6.831227,8.895987,4.176092,-8.640090,-1.478673,-3.661285,-9.799571,-1.581880,-4.427470,9.556028,-0.705070,2.115497,1.399821,-2.922337,-0.171365,-1.640324,-4.100234,5.165123,-3.109967,-6.223521,3.918984,-4.478353,-0.023256,9.102040,0.101910,-6.117699,-5.276035,-7.329776,-5.222136,0.646626,-5.091666,-4.435602,4.607399,-2.517061,4.778024,-3.355600,-4.085145,4.350995,8.437655,2.170265,1.647815,-9.344164,3.749485,-6.645395,9.286937,-3.860606,4.773359,8.264735,-3.463381,4.854619,-8.916830,4.852029,-2.833873,-1.937798,3.268174,-7.377767,7.076086,-3.951247,-2.147861,-9.947869,-2.327279,1.257612,2.084379,-9.606952,8.000219,-9.688785,4.695510,-8.316064,-4.457662,5.560956,-4.148400,-4.097075,2.421561,-3.202382,2.131074,2.984118,1.126893,-4.558440,5.760508,-8.112284,-1.503232,6.530220,-0.284955,9.375804,-9.467742,-1.440547,5.333408,-4.581302,-4.101502,-5.204774,8.404643,5.841893,-1.862735,3.112658,4.157055,-0.929007,-8.597987,2.749677,4.024342,0.366229,-5.708784,-0.479466,3.615651,-3.617743,1.550429,2.032519,-4.455810,1.372226,-7.479654,4.100666,0.530369,2.588332,2.142982,-6.484626,-7.224184,-4.666938,-8.576607,-8.009369,2.921669,3.162062,5.159675,4.272530,6.842833,-2.389825,2.087664,1.032354,-2.558146,6.434548,-8.956080,-7.469903,3.909571,8.045766,-1.944050,7.947653,-2.848116,-4.403664,-5.592400,1.050654,0.484451,2.180466,2.403579,8.244521,-8.143384,0.117046,-8.129492,5.188381,-4.990590,3.647072,-2.728591,-2.254061,6.883079,-1.931213,-1.794160,-5.958294,5.919630,1.209910,-1.254571,-4.982390,2.304601,6.429963,-6.545657,3.160951,8.218679,5.506291,-6.171130,-6.181173,-9.711420,6.240768,1.039736,-4.577534,9.448098,8.467904,-4.934468,-5.979656,-6.566491,-6.764627,-7.733947,6.139959,-4.146838,5.803450,5.138468,6.188618,-4.973385,-8.075499,-5.763346,7.093439,-9.778651,9.151531,-9.197948,-5.089068,-0.852370,9.309058,5.909051,-2.983948,6.402991,-9.078235,-9.413320,4.496460,-1.017147,-3.987246,-9.749856,-7.662713,-1.142104,-3.762951,-3.035247,7.479871,6.057414,7.241973,-2.510613,-3.881607,-2.283331,-3.605408,-1.288559,6.810939,8.305900,8.893985,6.123845,1.879214,-3.778254,9.739455,-5.557299,5.282018,3.264369,-5.309402,-7.733624,-1.551159,6.352251,5.275492,-9.337622,-9.958165,-9.413334,1.084516,-2.195556,-0.771859,-7.464966,6.503268,-7.732628,-7.972117,8.891427,1.767490,-3.750066,-2.171930,-7.771646,6.932423,5.783199,5.431949,-9.400261,3.510457,7.567634,9.849707,9.235340,-9.806605,8.705197,-7.527812,-2.252562,-7.616352,3.022392,-6.827424,2.001853,-8.484538,-4.056884,-6.405075,-9.963270,4.340265,1.608959,-8.103362,7.128707,9.574917,0.709244,6.035548,7.531217,-7.207460,6.080521,5.374868,2.602216,9.661970,0.641777,-1.913912,0.958279,8.312036,-7.194189,-6.893574,-7.947908,-7.451355,1.189121,9.280239,4.845727,7.767132,3.727073,2.048154,-1.210068,-6.464162,7.245034,5.753663,-4.902399,0.085415,-1.148572,-8.096561,4.576492,3.813749,-6.165916,-8.561897,-3.947448,-7.884847,-0.800390,-3.079593,-1.132400,-7.453418,8.547294,9.535885,-7.880310,-2.466844,-0.509198,5.614594,9.915082,-8.863183,-9.742964,-5.678389,-3.038777,-7.251728,-2.265553,4.584633,1.769798,-3.050630,2.026035,-2.565935,8.890354,5.976512,6.068482,2.664452,3.987140,-3.619145,-3.605879,-2.998918,-7.727628,4.580966,-8.228509,2.757887,-4.603583,-9.152580,2.973619,6.876342,-9.482358,-4.917926,-3.978743,-1.372025,5.786282,7.791394,5.923277,-3.685129,-0.350989,5.534449,-8.796584,-4.295767,-0.989075,0.772440,7.291638,-0.297574,3.365031,1.070610,4.736309,9.096484,-6.019494,-6.054565,-4.983429,8.051795,8.804394,2.972145,-2.448186,-4.745947,6.483979,-9.763719,5.286515,-4.685206,-3.418988,-0.403015,0.382990,-3.269645,-6.704587,-7.280181,-1.663517,2.119878,-0.357181,9.368671,-7.892904,3.977228,1.423552,-0.989936,4.801301,2.790574,-0.351660,6.869641,3.984147,7.022910,-9.285549,5.791910,-4.321350,-1.865706,2.608400,1.447498,-6.143253,1.928012,-2.878563,-5.725843,-8.926871,1.944586,0.542144,0.862207,8.480694,-3.531538,-4.933011,-7.259671,-8.289909,2.531957,-0.623580,5.809407,4.830463,8.712567,-6.052213,1.780724,2.615650,9.544272,4.343142,-5.041415,8.658582,9.361870,-6.581213,-5.010152,-0.043522,-7.318040,-3.404027,7.079865,9.643399,-5.243010,-9.883071,-5.369222,-3.401687,-3.791282,-3.322440,-1.625252,1.415113,6.646243,1.213238,-9.993745,8.547629,6.155352,-2.050782,-5.480074,5.575243,9.570283,-6.183447,2.230048,1.507458,3.008786,-5.904866,-0.480156,7.859953,2.324657,4.529063,-1.342308,9.955110,0.240932,6.266305], dtype = "float32")#candidate|4481|(1287,)|const|float32
call_4480 = relay.TupleGetItem(func_3146_call(relay.reshape(const_4481.astype('float32'), [429, 3])), 0)
call_4482 = relay.TupleGetItem(func_3149_call(relay.reshape(const_4481.astype('float32'), [429, 3])), 0)
func_1967_call = mod.get_global_var('func_1967')
func_1969_call = mutated_mod.get_global_var('func_1969')
const_4489 = relay.const([9.562417,0.939845,-3.497017,7.052895,6.935538,5.738445,-0.323252,4.451871,7.864484,-8.844360,-5.812342,7.895579,-9.637636,-9.409090,-2.741031,0.951452,-7.388602,-1.147345,-1.487642,2.622671,6.698128,-7.322269,-7.261706,5.225695,-6.806576,8.804409,-8.772346,-0.497736,7.349527,-6.761750,5.949121,-6.994744,-0.648603,-8.350681,-7.923465,0.825087,1.804546,2.869276,7.071604,6.449526,-8.436040,-1.639864,6.974009,-3.596983,1.564458,-6.720889,-3.164009,8.288579,2.530370,1.364098,9.093932,4.585186,-7.836383,-1.509722,-6.578642,5.928939,2.156843,5.761824,7.477965,4.506632,-6.423387,5.443192,-2.945377,-5.306874,-6.013555,-2.321016,-9.836492,-6.459912,-4.861811,-8.662651,-3.664708,-5.495281,0.333011,-7.333099,6.153952,7.930667,-4.522682,-2.485207,2.316635,-9.145658,-2.512970,-2.915515,9.487233,8.852695,2.556822,-2.599377,0.608536,1.171535,-7.852943,0.393632,-8.033774,7.246799,6.044602,4.259563,-9.215954,1.217550,-2.410882,2.851583,-7.980655,-4.412269,-8.502044,-4.922402,2.456774,-4.419542,1.923035,2.939365,5.540253,-2.178598,-1.981858,4.781152,-0.479520,1.907210,-3.318485,-1.014613,7.443142,0.885818,0.929289,9.163044,4.231222,-0.059072,-1.215730,-7.473342,-4.508071,-9.757975,3.041873,-9.970102,-8.991372,-7.678324,-9.229704,-3.338864,1.629701,-9.683787,4.484249,4.430566,6.964219,8.937075,6.805904,6.259025,6.506679,-6.164943,-9.741126,-4.308641,-5.528232,7.591315,3.465399,-2.616033,8.473842,8.823200,3.522242,-0.286942,-0.983071,-3.834438,6.788996,2.414421,3.058600,7.829110,-8.610878,2.941131,0.839158,-0.757522,-3.280643,3.059482,6.588947,-9.692496,-0.040133,5.171504,-3.734131,-7.071000,-7.310599,-7.151279,-1.245759,1.070322,2.847609,4.309173,4.787716,5.008609,6.011501,-2.969400,1.570646,6.752454,6.340258,-4.685273,-4.922509,3.160277,4.166773,-1.886000,-5.221804,-6.134281,-0.467265,-3.596489,2.470855,5.613140,-6.798155,5.370937,-8.875628,0.662520,-6.806212,-5.520752,3.090535,5.310331,8.909807,-7.513834,8.790513,-0.668440,-3.731207,1.993773,-3.651434,-0.749457,-9.624118,0.704486,-4.527822,-4.093886,-8.018125,1.019190,9.718353,-3.992976,9.772088,-9.926040,-4.653685,-9.694383,5.802983,-6.622307,1.009272,-0.999423,3.542302,-7.224428,1.711158,-7.764154,0.368157,8.910474,-9.278098,-9.443071,-2.844531,-5.542047,7.416238,4.995219,-1.668504,-0.632362,5.887397,-9.483505,-2.248078,-5.499142,5.915541,-4.764419,1.224737,1.567423,6.887069,0.165285,-1.820426,-9.054462,-8.832539,-8.380676,-6.622153,-5.189940,-6.123375,-2.331372,-0.155566,-9.247379,9.074382,-8.875846,-5.243384,-5.598885,7.555994,6.841304,6.200661,0.047564,1.555697,-3.206868,3.151465,8.937407,1.279854,-6.953979,3.819774,-4.207873,2.288012,6.949038,-2.091499,-9.839212,7.029434,-1.615966,4.240297,-3.547246,7.245656,-8.702527,-5.620162,-7.190806,8.358549,7.756345,9.252118,5.083155,-2.052881,-9.451755,-3.176302,4.279585,-3.554617,-9.821102,6.552118,7.790852,-9.319647,6.321925,7.252690,-0.143853,0.180151,7.908366,1.827941,8.665421,3.904891,7.608108,-0.005735,1.655598,-0.701880,9.391862,9.857963,-9.842691,-8.505605,-8.219919,-0.713248,0.120176,-2.895413,-9.119984,8.574769,5.858625,-8.463752,5.844242,3.105077,4.823651,-9.153773,-7.986088,4.207488,8.696340,-8.754003,-4.947689,9.203713,-1.747031,-8.097688,9.185706,6.402388,7.365041,6.737364,-7.248041,5.721609,-3.979681,-9.018034,8.894870,-4.009607,-2.278250,-9.616263,6.258763,-7.747964,0.723886,-5.938896,-5.686039,-0.949008,5.259709,-8.575685,-7.325646,-6.785089,-8.952551,8.009682,-0.833221,-8.722681,1.778205,3.036217,-0.863553,-1.542955,0.616819,7.068508,-1.541510,6.280350,7.761581,-5.030890,3.707467,5.799865,9.392116,-3.324508,-2.158173,-9.718004,6.864349,-3.024766,7.993306,-9.016099,3.321340,3.448803,9.566547,-2.659053,-8.302999,-1.798381,2.976130,2.074996,3.440017,-3.804199,0.585816,9.314778,6.795769,-0.003981,-4.965904,3.126888,-9.252022,-0.017771,4.474284,6.564771,7.767311,6.086470,5.283626,3.048508,-0.825498,-8.236796,0.308016,4.714019,8.202683,2.659603,-0.773214,4.391804,9.597961,-4.914862,-3.464013,6.705729,6.909555,-7.966173,7.247188,0.181281,-3.231241,1.372444,0.962228,-7.664540,7.548408,7.727291,-7.719160,-7.715614,-1.240489,-2.504240,-9.505816,-7.543460,-6.095840,-1.452441,-4.234256,-5.643887,6.887417,-4.524370,-4.805374,9.333236,6.564587,0.910887,-2.024453,6.674083,-2.965403,3.324541,2.958618,-6.028706,6.667246,-9.101954,9.387123,-3.841785,-8.004614,3.123215,9.549270,-2.236054,0.164074,-2.150034,-1.835658,-1.312619,5.489483,3.434867,1.100990,-2.933531,7.805181,7.165189,8.307678,3.561754,-3.295356,-7.852996,-3.956418,-3.853125,-3.797483,9.657778,7.128840,4.648722,2.680346,2.874601,8.993986,4.532529,-1.515581,2.431055,-6.053405,-9.481632,9.409872,-0.393690,4.242121,-6.986860,5.737975,-2.513675,6.066814,5.349295,8.827350,-0.030443,1.415550,4.257148,-0.723037,8.880088,0.444772,3.637714,7.131920,-2.495980,7.428017,-0.154878,-5.632422,9.744066,2.163528,7.734719,7.719324,9.688454,4.609489,5.557179,4.131993,6.036255,-7.622095,8.112238,-7.873556,-4.464034,-9.684619,4.228257,-6.057636,0.013699,9.996574,-8.257876,-0.034337,0.494182,-6.087140,3.959560,-8.366132,-0.562863,8.262653,-8.738680,-6.506749,3.406113,5.470707,5.442720,9.243717,2.999435,4.328609,-7.976165,6.532242,-3.057613,-5.859402,8.909546,-8.529822,3.863810,-6.829661,3.089949,-1.425976,7.574059,9.404229,9.255329,8.051467,-6.143227,-2.193978,-6.222659,-7.745877,7.060771,-3.489494,4.488864,6.376525,8.300715,-4.742261,-6.421495,2.869605,4.047883,-6.078354,-2.678289,1.525946,7.376765,5.329445,-2.945063,-4.635647,-0.115628,-9.948627,2.498369,-2.358734,1.710868,1.734645,8.948926,-6.462481,-9.037341,-8.999607,-7.694099,1.639124,3.628166,-1.748050,-1.548664,-2.690907,0.295396,4.352506,-6.736530,6.664840,-8.067531,9.904259,-1.216357,-6.121894,-2.896798,4.604878,4.978832,-9.231284,9.063518,-7.168598,6.132376,-4.880249,2.874412,2.609500,1.409708,-0.999657,-0.496161,1.926030,3.879450,3.573550,-3.260044,-2.772294,0.302405,0.296560,8.597201,-2.240753,-7.054670,-8.791257,-7.662102,7.506707,-3.732703,-0.251963,4.131139,4.208685,0.501260,-7.967748,8.677616,6.150509,-1.386889,0.629077,-9.909316,-5.409704,-5.729742,8.854802,6.222257,-3.961651,-9.811855,-3.043351,4.738309,-5.900493,-9.615784,-1.493510,1.701188,-5.003113,-1.455575,-3.267040,7.276062,2.898101,3.253113,7.417954,1.272406,-4.249719,-2.331944,5.483316,8.623397,-2.366880,6.830537,4.105823,1.334462,-5.852734,-7.364592,-2.054028,4.792351,5.466762,-3.070552,3.892722,3.152846,2.906056,-6.988068,8.238535,-3.447646,6.154801,-1.735339,1.246558,-1.955941,-2.973165,-2.150360,2.823401,-8.755906,-5.660300,6.894446,4.515304,6.548316,-3.437517,8.028125,9.633147,5.285279,4.159166,-3.219668,7.287959,-2.559546,7.358455,6.038580,7.768885,1.661003,-3.082401,1.548395,3.442765,5.169911,2.215561,3.506566,-6.783603,5.576601,5.962809,-7.168673,0.966245,-8.561126,9.900056,6.632366,7.237779,-5.941394,2.896287,2.724317,9.944878,-9.062542,-2.671359,5.582743,-2.972727,-3.808364,-5.660821,2.826640,-5.586425,-3.424165,0.481589,-7.000606,5.329517,-5.717112,-4.187660,6.845971,-1.179619,-6.885397,-4.994549,-0.430955,3.779475,-4.000641,2.765723,7.651998,3.754884,-0.642795,0.608777,0.516175,1.185396,2.187099,-4.294506,7.027096,-7.504670,8.292184,-6.058759,1.558599,-0.698378,3.422948,9.834478,3.635248,0.717794,9.738992,-7.026491,5.477974,3.311893,-9.274066,2.570455,-0.083328,5.835775,-9.568513,0.784558,5.137623,5.474024,-2.704629,7.685212,4.156777,7.362193,5.776207,-8.660373,4.445661,8.842030,9.973381,-4.548512,-4.163350,9.237768,3.761264,6.025963,-5.247227,6.145821,9.708037,2.033938,9.560175,-8.324794,-9.557350,8.249014,-9.762674,5.505254,-2.685007,6.638912,-4.271338,4.760357,-7.386308,-8.290996,-2.000136,9.385304,9.822708,-6.005068,4.006422,0.793964,2.274874,4.271659,-6.731489,4.656797,-0.164289,0.938158,7.538070,-7.873007,9.400049,9.237624,3.815250,-7.424527,3.199296,0.781919,0.495275,-7.969096,-6.802933,-7.036134,6.904371,8.771253,-4.412077,-8.782973,0.958528,2.706521,7.714669,-4.491735,0.873992,3.747494,-2.075093,5.326367,-5.702911,-4.982281,-1.037152,4.888489,3.257230,5.126322,6.835102,0.323435,0.850538,-2.671803,2.272470,0.719374,6.252057,6.048286,5.984930,1.962406,6.477770,-0.181132,-0.477034,4.220840,-7.978412,0.347799,-1.249211,0.721160,-1.623217,-2.749687,-9.781218,-5.408617,6.409368,2.663471,8.580335,-7.889288,7.249904,-0.072052,-7.181331,1.605103,-7.063316,-2.757945,7.725552,-0.507334,3.852891,-0.023941,-9.927760,7.939600,-7.120000,1.380067,4.658718,-9.751291,-4.130964,-7.082511,-0.617020,-6.616414,9.937036,0.502802,-6.733001,-8.247867,3.042091,0.963974,5.931214,8.033072,-0.844772,1.010937,-1.399842,-5.808696,-9.359867,2.886933,-4.889237,-5.459607,-6.705280,-9.620789,5.196837,0.975913,4.256022,4.623418,1.609780,1.474470,6.820971,-1.015949,-6.482183,-1.291348,2.089562,-3.277959,4.981440,5.440437,-2.178532,-6.780221,-0.439381,-0.815281,7.573292,1.555670,-5.967164,-4.499312,5.799494,2.787679,4.459792,7.305708,3.248921,-6.450693,-1.235303,1.832936,7.950722,-6.370426,4.832263,-4.575309,-0.475313,7.942641,-2.872335,-9.925626,-7.880247,5.760448,-4.611444,5.272319,-4.362792,-8.132308,4.008214,-6.763511,-7.705796,5.478469,5.598280,-4.949303,6.857090,2.090961,5.225628,6.969925,0.735079,1.758718,9.524281,-1.752468,-8.903415,-0.966251,-8.527488,-9.462906,-6.791667,-4.765002,6.494751,3.423585,-4.681305,-3.141064,6.739733,-8.354716,8.865934,-8.653284,-7.877161,-8.282473,6.928288,-2.486863,5.753327,-8.222070,-0.746730,-2.835379,0.967950,-7.770987,-6.335725,8.061824,0.038134,-6.148048,7.115546,7.890231,9.530446,-1.186138,4.832325,-3.150587,-1.054891,-6.422266,6.040371,-5.684753,-2.047285,4.664172,-3.267810,-7.892053,-6.633394,-1.415411], dtype = "float32")#candidate|4489|(1008,)|const|float32
call_4488 = relay.TupleGetItem(func_1967_call(relay.reshape(const_4489.astype('float32'), [12, 7, 12])), 0)
call_4490 = relay.TupleGetItem(func_1969_call(relay.reshape(const_4489.astype('float32'), [12, 7, 12])), 0)
output = relay.Tuple([call_4475,call_4480,const_4481,call_4488,const_4489,])
output2 = relay.Tuple([call_4476,call_4482,const_4481,call_4490,const_4489,])
func_4492 = relay.Function([], output)
mod['func_4492'] = func_4492
mod = relay.transform.InferType()(mod)
output = func_4492()
func_4493 = relay.Function([], output)
mutated_mod['func_4493'] = func_4493
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_4504 = func_1868_call()
call_4505 = func_1868_call()
output = call_4504
output2 = call_4505
func_4525 = relay.Function([], output)
mod['func_4525'] = func_4525
mod = relay.transform.InferType()(mod)
mutated_mod['func_4525'] = func_4525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4525_call = mutated_mod.get_global_var('func_4525')
call_4526 = func_4525_call()
output = call_4526
func_4527 = relay.Function([], output)
mutated_mod['func_4527'] = func_4527
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2096_call = mod.get_global_var('func_2096')
func_2097_call = mutated_mod.get_global_var('func_2097')
call_4559 = func_2096_call()
call_4560 = func_2096_call()
output = call_4559
output2 = call_4560
func_4571 = relay.Function([], output)
mod['func_4571'] = func_4571
mod = relay.transform.InferType()(mod)
output = func_4571()
func_4572 = relay.Function([], output)
mutated_mod['func_4572'] = func_4572
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4576 = relay.const([[[-6,9],[-5,2],[9,-9],[7,-9],[3,3],[8,6],[6,-8],[1,-1],[4,-8]],[[-8,-9],[8,-9],[7,-9],[5,-6],[5,8],[7,4],[-3,-4],[-2,-6],[-3,-7]],[[-4,-7],[4,3],[-10,-2],[-9,6],[-6,4],[5,6],[10,-10],[-8,3],[3,7]],[[6,9],[-7,10],[-1,1],[-9,9],[-5,-3],[-9,-8],[-10,-1],[3,-2],[-5,4]],[[2,-9],[-2,-2],[-7,7],[6,-7],[-3,-1],[9,7],[9,-10],[10,8],[2,3]],[[-8,-7],[6,7],[7,8],[-10,-4],[1,1],[-9,-6],[-9,-1],[4,4],[-10,8]],[[-8,9],[-10,5],[6,-1],[9,8],[-6,-8],[-1,-3],[2,-6],[10,-8],[1,-2]],[[-2,3],[4,-4],[-5,-2],[-9,6],[-9,4],[8,-4],[5,7],[-7,7],[5,7]],[[3,6],[-6,-10],[1,2],[7,-3],[-7,1],[7,10],[-8,5],[-8,-5],[-6,2]],[[9,6],[8,-10],[-5,9],[-10,-5],[-10,-2],[3,-2],[-2,3],[-7,-1],[-7,-6]],[[4,-1],[1,-10],[-10,-7],[-10,-9],[-8,4],[-9,9],[10,-2],[-4,1],[6,-6]],[[1,7],[9,-4],[-7,-1],[-5,5],[10,9],[4,6],[-2,8],[10,-7],[8,-2]],[[2,-5],[10,-1],[1,-8],[4,10],[9,-7],[-4,10],[-7,-4],[-3,-3],[6,-1]]], dtype = "int64")#candidate|4576|(13, 9, 2)|const|int64
var_4577 = relay.var("var_4577", dtype = "int64", shape = (13, 9, 2))#candidate|4577|(13, 9, 2)|var|int64
bop_4578 = relay.less(const_4576.astype('bool'), relay.reshape(var_4577.astype('bool'), relay.shape_of(const_4576))) # shape=(13, 9, 2)
var_4583 = relay.var("var_4583", dtype = "bool", shape = (13, 9, 2))#candidate|4583|(13, 9, 2)|var|bool
bop_4584 = relay.power(bop_4578.astype('float32'), relay.reshape(var_4583.astype('float32'), relay.shape_of(bop_4578))) # shape=(13, 9, 2)
func_2815_call = mod.get_global_var('func_2815')
func_2818_call = mutated_mod.get_global_var('func_2818')
var_4591 = relay.var("var_4591", dtype = "float64", shape = (972,))#candidate|4591|(972,)|var|float64
call_4590 = func_2815_call(relay.reshape(var_4591.astype('float64'), [12, 9, 9]))
call_4592 = func_2815_call(relay.reshape(var_4591.astype('float64'), [12, 9, 9]))
func_3929_call = mod.get_global_var('func_3929')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_4605 = func_3929_call()
call_4606 = func_3929_call()
output = relay.Tuple([bop_4584,call_4590,var_4591,call_4605,])
output2 = relay.Tuple([bop_4584,call_4592,var_4591,call_4606,])
func_4613 = relay.Function([var_4577,var_4583,var_4591,], output)
mod['func_4613'] = func_4613
mod = relay.transform.InferType()(mod)
mutated_mod['func_4613'] = func_4613
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4613_call = mutated_mod.get_global_var('func_4613')
var_4615 = relay.var("var_4615", dtype = "int64", shape = (13, 9, 2))#candidate|4615|(13, 9, 2)|var|int64
var_4616 = relay.var("var_4616", dtype = "bool", shape = (13, 9, 2))#candidate|4616|(13, 9, 2)|var|bool
var_4617 = relay.var("var_4617", dtype = "float64", shape = (972,))#candidate|4617|(972,)|var|float64
call_4614 = func_4613_call(var_4615,var_4616,var_4617,)
output = call_4614
func_4618 = relay.Function([var_4615,var_4616,var_4617,], output)
mutated_mod['func_4618'] = func_4618
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1868_call = mod.get_global_var('func_1868')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_4659 = func_1868_call()
call_4660 = func_1868_call()
func_3913_call = mod.get_global_var('func_3913')
func_3915_call = mutated_mod.get_global_var('func_3915')
call_4666 = relay.TupleGetItem(func_3913_call(), 1)
call_4667 = relay.TupleGetItem(func_3915_call(), 1)
uop_4670 = relay.tan(call_4666.astype('float32')) # shape=(12, 9, 9)
uop_4672 = relay.tan(call_4667.astype('float32')) # shape=(12, 9, 9)
func_1918_call = mod.get_global_var('func_1918')
func_1921_call = mutated_mod.get_global_var('func_1921')
var_4674 = relay.var("var_4674", dtype = "float32", shape = (256,))#candidate|4674|(256,)|var|float32
call_4673 = relay.TupleGetItem(func_1918_call(relay.reshape(var_4674.astype('float32'), [16, 16])), 0)
call_4675 = relay.TupleGetItem(func_1921_call(relay.reshape(var_4674.astype('float32'), [16, 16])), 0)
func_83_call = mod.get_global_var('func_83')
func_85_call = mutated_mod.get_global_var('func_85')
const_4699 = relay.const([[7.528957,1.435680,-9.786141],[-0.288008,5.612721,-7.206657],[-9.907452,8.610624,5.024580],[2.456321,1.304137,6.611327],[-7.818144,-9.329365,-9.698102],[9.248037,-4.361703,-9.222293],[8.593031,2.287988,2.285166],[-9.498729,-6.947982,1.438152],[-2.674679,-0.183278,0.231720],[1.176940,-3.178780,-0.733877],[-0.222346,-8.654626,-1.386264],[-2.404588,0.468517,-1.355856],[6.118699,4.185273,-9.264120],[3.651766,1.959076,-6.741989],[-8.234210,-7.862892,-4.860555],[3.581048,-5.981440,1.994732],[-7.565455,-1.212821,0.900216],[-0.710507,7.430531,2.769434],[-7.523544,-9.546905,-1.019405],[-6.450855,2.785371,-2.731456],[3.348604,-3.564106,7.147251],[6.281789,5.701793,-4.942788],[-5.677719,-2.050769,-6.695245],[-3.448312,-8.723961,-3.182375],[4.901473,0.191297,8.346585],[-4.445078,-4.854667,-8.306580],[-0.854951,7.098700,3.824661],[3.324401,5.628842,6.978138],[8.015487,-0.174391,0.670737],[-5.496332,-6.116191,7.332028],[1.260992,-7.459037,-1.621200],[-7.850915,-9.344385,3.904758],[8.385818,-2.935046,-6.531970],[-7.722999,3.590315,0.573494],[5.239958,0.215429,-0.071508],[9.338865,4.914803,0.059864],[-0.926699,-9.685708,4.731065],[-1.803185,-4.542838,8.655854],[-3.768817,-2.524136,3.988162],[-9.827461,-2.354931,-8.339046],[-8.628088,-6.907122,3.889838],[-6.605262,6.327017,2.581443],[-5.860017,7.122103,-1.074752],[4.953917,-1.119788,-9.140649],[2.513858,-2.858634,-0.608838],[-5.496497,-7.341728,-0.746837],[-8.137906,8.808500,-7.567255],[5.158848,-9.032699,1.237579],[6.203373,-7.627219,5.153838],[5.764498,0.799826,-1.528245],[-3.645163,8.459692,6.336804],[3.157017,-3.679822,-1.876923],[7.279762,9.044353,-6.490376],[-2.600946,7.223776,-9.293452],[7.681079,8.770341,3.543682],[-9.386731,3.571546,5.292704],[-9.046817,-6.228035,4.237614],[0.543980,-4.102913,5.668859],[0.995988,7.088790,-7.273829],[4.422864,2.091018,-4.196095],[-3.491077,2.346864,-9.272906],[3.951623,8.587273,6.948929],[-3.069591,1.780639,0.148092],[9.798566,-9.429455,1.001796],[-9.598696,-0.663743,-6.442494],[6.503291,4.356394,-7.575484],[2.311145,-0.473063,1.476483],[0.993809,-6.540128,2.809869],[5.471512,8.915208,5.755336],[-7.402905,5.221774,4.280334],[-7.534310,2.832058,6.594232],[8.979338,8.612735,7.383082],[-8.395379,-1.925002,1.651185],[-8.080571,-5.453358,-0.545079],[6.428760,-8.515355,8.662171],[-0.400185,-5.941000,-9.818328],[0.376295,-7.624970,8.360429],[6.599452,-2.554427,3.692020],[7.230397,8.693028,0.305622],[2.928994,-3.590274,0.141460],[-8.200399,1.998044,2.337162],[-1.279353,-4.988794,5.163885],[3.181241,9.334161,-5.202247],[5.464395,-6.195752,-2.040076],[9.535714,-5.632871,4.223461],[9.355499,1.934712,-6.449073],[-8.690643,9.841046,3.475995],[9.507558,-0.867634,-5.722463],[2.648876,-7.653405,-2.507987],[5.421365,7.588274,-3.903698],[2.377392,-2.889000,-6.048236],[-8.043135,0.851764,4.922304],[-9.068053,1.183136,8.440073],[-2.373605,-3.640396,6.659946],[1.240584,-0.454598,-3.960932],[5.846835,-6.946645,6.485639],[-6.487745,-9.867406,4.139540],[-2.183733,-8.851699,-0.595354],[6.046388,-5.513969,-4.717131],[7.150858,-8.397334,-2.274558],[-4.639047,-8.724241,4.600028],[7.291546,5.377808,6.220696],[-7.312185,5.582870,-9.607269],[-1.126103,-9.967091,5.713305],[-0.067446,-4.810315,-0.863803],[-6.537973,-8.911466,7.686858],[-1.974977,7.311522,-9.538124],[-5.074360,-6.206855,0.735582],[-5.475204,-4.420229,-6.947230],[4.034770,-2.743810,7.924744],[-3.904643,8.794029,1.097844],[-7.010622,-3.294345,4.788242],[-0.474188,2.461258,3.502258],[3.554322,-6.542842,-9.216145],[1.612179,-0.437158,1.208200],[-4.171247,4.823871,-7.529937],[4.443906,-4.991277,-4.146295],[-5.455172,8.329631,0.745790],[8.478027,-7.015542,4.865817],[-6.453823,-1.578802,-9.522988],[8.875591,8.449025,3.880500],[1.081297,-5.267993,-0.012131],[4.028250,-0.878631,-7.911033],[-3.107786,-5.874237,4.201055],[7.763699,5.594076,-5.149567],[-3.683392,-4.908514,-9.917249],[7.662982,-7.119258,0.068839],[5.055777,-8.785570,-1.507523],[3.903885,-0.923217,5.538503],[0.292254,3.307513,3.049274],[7.528118,4.367895,9.492572],[4.453908,0.166863,3.958715],[-4.381747,-8.129989,-1.298159],[1.189891,4.830701,8.617335],[2.118124,8.031428,6.429797],[4.691400,-7.652391,0.120471],[-7.146459,1.824610,-3.201284],[7.519725,2.974416,7.558752],[-0.784355,7.230013,-2.516251],[-9.106594,-0.147009,0.397112],[-6.137276,-9.409380,2.373775],[3.620100,-4.988732,-2.158512],[3.070519,7.712093,7.279160],[-5.759405,4.640203,8.261926],[-2.130258,4.429302,5.262126],[3.473363,8.882793,5.659757],[4.449451,1.314017,8.278136],[-9.721014,8.620114,7.559962],[3.226461,-9.677062,5.663569],[-4.116192,0.696642,-5.683560],[-6.251294,8.623818,8.823040],[8.144864,8.425981,-7.121223],[-3.624504,6.595912,-6.245221],[-5.009964,-0.198438,-2.046505],[-9.192598,1.180556,4.977860],[-1.922468,5.351955,7.538523],[-6.341830,4.155449,4.792202],[-0.415106,1.649161,4.631532],[-3.352637,7.754510,-7.224478],[2.763897,-3.719716,8.726996],[-3.458606,-2.983200,3.548463],[2.899411,-2.056764,2.411539],[-9.154447,8.233582,2.829387],[-9.684158,-0.078741,-5.497594],[4.208832,0.508645,-3.749657],[5.343477,-7.936760,9.676182],[-4.192592,-4.851108,5.572705],[-6.080256,6.165942,7.842446],[6.277147,0.781973,5.973534],[-6.182683,7.227341,3.221114],[-5.881208,-8.048829,-1.697469],[-2.111363,-8.511513,5.506828],[-6.888133,-4.656855,2.322966],[-2.104876,7.217930,-4.049490],[9.937472,6.296841,-7.254928],[4.410538,-0.043636,7.355658],[5.936729,6.866605,-5.930677],[0.749080,-8.297107,7.964085],[-4.056997,-7.960740,3.666319],[-4.729599,-2.788311,1.352225],[-5.695435,9.010358,-9.834937],[0.912479,0.885962,-3.209163],[9.527084,-5.937774,2.429673],[3.348243,-1.423278,1.768645],[-3.262745,-5.996913,1.936663],[1.763248,-0.492986,-0.004943],[-7.710606,-3.843294,-2.820015],[9.576795,7.645926,-1.712485],[7.420587,-4.584973,4.491056],[6.667738,4.980970,-6.699091],[2.340623,4.072691,3.447064],[9.768385,7.752460,8.588486],[-7.662479,-4.768580,-0.967975],[-5.085127,-7.197635,3.725982],[-3.722821,-1.321659,3.796230],[-5.557014,-1.655067,-4.143704],[-9.378384,6.886163,-6.981499],[0.616453,-1.522512,-2.836216],[-3.262849,-9.932155,2.536653],[8.568168,8.498556,7.011728],[-2.006088,0.158100,2.166772],[-4.047236,2.747291,-2.825450],[-7.758653,-1.707670,9.510712],[-4.576393,0.653412,-4.722303],[-0.532530,-5.684307,9.463528],[-1.725198,-8.185284,8.756394],[-2.164146,8.933297,9.335261],[6.677717,3.560291,-8.160357],[-7.209965,2.312909,-6.581821],[-6.777221,4.335305,-9.616611],[-6.041513,-7.644601,-8.493280],[3.422803,-5.025693,9.323610],[-7.090000,3.796970,-6.495717],[-7.740584,-8.703213,2.424283],[6.210508,-3.987779,-9.230652],[-6.897636,1.142088,2.022693],[-3.419780,-3.190230,2.910505],[-9.177701,-8.948237,-6.837429],[-4.237613,7.105723,-0.139472],[4.266318,-1.536009,-9.109602],[-2.458273,-9.381355,5.588941],[9.167232,-6.372812,-6.492619],[5.992511,8.082033,5.994817],[5.965849,-6.032057,-8.262082],[3.611401,-1.544442,9.195664],[-2.086477,8.072171,-9.756202],[2.492928,-8.928276,5.070676],[2.203185,-0.149186,0.167390],[-2.390211,1.111159,2.361622],[8.288225,2.675441,4.186707],[-6.556411,-2.472388,-8.501425],[3.579641,-2.952596,6.577848],[-0.778501,5.595141,9.900439],[-3.308891,9.827147,-6.110238],[-2.560679,0.919419,7.023306],[-0.396910,-8.184577,-9.204091],[7.123313,-7.952958,9.736799],[-1.643013,5.477059,-7.768740],[-8.506242,-5.809718,-5.909966],[-2.747094,8.418846,-6.037475],[-5.540735,-9.499555,9.503830],[1.654825,-3.572077,3.810782],[0.439660,-9.961411,4.611134],[1.642233,5.053285,6.544345],[-3.363400,-4.841975,0.050375],[0.849681,-9.535488,-0.861322],[-0.487704,-7.448947,-4.508805],[-5.478850,2.642904,-8.835443],[-5.689457,-7.051200,6.220726],[7.864675,-8.159129,5.457798],[2.104299,0.360448,0.463479],[0.869680,-5.823981,-0.926895],[1.221644,-3.533926,0.096311],[5.786986,7.882916,-1.937508],[0.582912,-7.825241,4.555131],[2.208594,-5.853173,-6.063494],[8.435137,9.458432,-1.498004],[-7.347461,9.722556,-9.468338],[1.273735,-4.624054,-1.076444],[3.885496,-0.772195,8.280220],[-9.057283,-3.444317,5.842409],[-8.878077,3.740173,-6.113061],[0.402449,3.918614,-4.459693],[-4.435192,-2.424840,-6.635093],[5.908773,-7.545264,2.705932],[6.905148,3.457604,7.854153],[0.607289,7.002764,4.083474],[-2.113480,-9.513315,3.219885],[9.556863,-1.632285,-8.403372],[-4.758948,-4.482396,-0.701812],[-9.489203,6.422547,1.648087],[5.410690,-2.303737,5.837383],[-3.973356,1.108991,-1.411746],[1.044660,-2.748001,2.073616],[-2.877694,-3.565941,-9.645988],[1.675917,-2.079914,-1.810646],[4.433298,-8.310573,-2.115093],[4.882988,4.267873,8.743330],[-3.558844,-6.790334,-5.275579],[6.597176,2.721300,-1.054027],[-5.417925,1.212034,-8.123266],[8.979028,6.962047,-5.315429],[0.584675,-4.519861,-2.503693],[-0.673080,7.156185,0.794242],[-5.773190,-4.197858,-5.934088],[-6.661027,-7.677179,4.582828],[7.913755,-8.288326,2.508499],[2.860846,7.524070,0.346569],[1.583028,-6.230477,-1.394523],[3.750470,-2.090394,1.344427],[-9.839870,-9.162285,1.209494],[6.002359,-2.826640,4.993728],[-2.344253,-9.716308,-0.806932],[4.125072,-7.836176,-3.983614],[2.201460,7.068214,-1.552114],[-9.502510,-7.337505,9.633057],[2.038737,5.865805,8.918173],[4.044617,7.864032,4.358013],[9.726749,7.478509,-5.369795],[8.891274,0.998090,0.389370],[4.236361,-5.562017,-9.193004],[5.901260,1.887266,3.757037],[0.527849,-8.298262,5.388874],[-9.916824,7.761911,-6.422581],[-7.173447,7.915140,-3.213266],[7.973302,7.324457,-8.939236],[4.840653,1.242888,-1.846623],[0.170450,7.789274,-8.179616],[2.680439,7.294446,-6.254910],[-2.696174,5.493131,6.156330],[0.074525,2.537208,-3.261281],[-5.010007,4.195882,-9.577434],[2.172794,9.108773,-0.127538],[8.389608,7.024359,-8.608459],[-2.083011,-2.620865,-6.440307],[3.649533,-6.735069,-1.066202],[-7.898224,-6.141737,-1.923288],[5.652070,2.670490,-4.366071],[-4.996464,3.343971,1.965479],[-5.417821,2.712496,8.128103],[-4.224897,9.735110,-9.842388],[5.080231,-2.714975,-4.689501],[1.163867,-2.996011,6.304886],[-7.429674,-0.682496,0.526276],[2.260416,9.471749,-7.279566],[-5.540412,-8.598037,2.462350],[-4.515661,4.946255,-3.487253],[2.157525,-1.290150,-9.985336],[7.959442,6.821514,2.269682],[7.748600,-1.305475,5.068868],[6.729890,0.312065,0.933030],[-9.141621,-8.428932,-3.740574],[-5.003584,-6.090501,-4.562983],[-6.149381,9.937001,8.168939],[-7.207296,8.615827,-2.252108],[6.764352,-8.612061,4.227047],[1.465664,1.462899,1.186699],[-6.505910,-0.821840,-8.908998],[-7.555206,-4.679238,8.532720],[-3.926165,-5.026554,-2.692329],[-7.318473,-1.273842,5.967112],[-0.854404,-3.567421,-8.909784],[3.140217,2.462856,7.934236],[-4.525403,-6.713959,0.799228],[7.022038,4.366951,1.895011],[-8.543581,6.087367,-6.258983],[-8.263551,3.227505,6.991853],[-9.888193,-4.012073,-5.276621],[-3.103329,8.795673,7.178201],[-2.829057,-2.060869,-9.937672],[8.684558,3.929238,7.007761],[6.637225,-7.097302,-2.746451],[-8.760476,6.196527,-4.572581],[-5.883124,-0.083620,7.449323],[-1.325957,-3.707976,1.799373],[-0.023730,3.059775,2.573428],[-2.653084,-1.560982,5.513851],[-6.507590,-0.678489,8.457165],[6.958140,1.979894,6.791289],[3.684961,-1.425741,6.358859],[-1.045263,-6.656232,0.005981],[-0.431846,1.107557,9.644432],[-3.048668,-4.159696,2.523384],[5.772041,-0.798154,-7.115413],[-5.776161,6.657214,-3.473677],[-1.826534,1.914595,-6.606617],[4.937983,-7.822302,-1.204084],[1.415444,9.953020,6.891513],[9.213792,7.997264,4.198426],[-8.217841,9.401224,-6.421431],[-2.229102,-6.285868,0.677080],[-5.838670,7.841965,3.453748],[-3.124085,-1.765417,5.021059],[-7.905481,1.595616,-0.664767],[-4.562672,-8.017921,-0.910370],[3.886534,4.796228,-9.753574],[-5.426630,0.068515,4.304324],[9.126067,-1.836415,7.117287],[3.386488,-6.939003,1.089728],[3.772415,8.258382,5.446365],[-1.472426,-6.647970,-9.973213],[7.215842,-1.298947,6.399427],[6.208812,6.873082,-2.367873],[4.868315,0.333958,-3.161154],[-7.658069,-0.247771,8.613016],[-9.515816,-8.623244,-1.853597],[7.525298,7.737603,-6.211625],[-6.688863,-6.774637,8.220134],[-0.703985,-4.668657,7.851178],[3.188797,4.499893,4.298246],[8.077055,-9.794876,9.262476],[6.277652,-7.001141,-0.304183],[7.983604,9.717775,-5.270507],[-9.866592,2.733528,-1.856460],[-0.653147,2.896550,1.651501],[-5.428696,-7.945502,-3.428830],[3.290945,-6.013970,5.991101],[3.138627,8.945392,-3.467385],[6.558706,6.832237,5.686909],[4.323549,4.917629,5.562648],[-1.709129,6.156707,2.903763],[-5.733862,6.298679,-6.166431],[5.817566,1.443266,-2.508718],[-6.026688,9.787556,3.232425],[-8.792716,-0.273735,6.568133],[-6.953850,1.253905,-3.352445],[-5.009608,-2.473552,7.382257],[-7.403344,-1.512794,-7.659577],[4.514900,-9.456476,-3.503573],[9.717364,8.561127,-2.493282],[-2.433853,-6.047527,-3.870140],[-1.631478,9.632328,3.640442],[0.166738,8.635064,1.823342],[5.912292,-2.993917,1.779983],[2.035740,5.245576,-3.482442],[2.549329,8.866576,3.001509],[-1.842941,-8.691530,-7.749469],[-6.596780,7.572773,6.782855],[5.043230,0.552743,-2.174515],[-6.841285,9.739474,-3.257269],[1.703651,-1.409284,1.961051],[2.434921,4.946113,8.278039],[8.692679,-1.486661,5.402348],[1.377287,-2.820092,2.676894],[-7.597035,-6.212590,5.752253],[1.933747,-0.601855,0.221900],[6.334619,6.177771,-7.203803],[-4.154770,-5.707269,-2.456938],[-6.690204,5.265385,-0.387591]], dtype = "float32")#candidate|4699|(429, 3)|const|float32
call_4698 = func_83_call(relay.reshape(const_4699.astype('float32'), [9, 11, 13]))
call_4700 = func_83_call(relay.reshape(const_4699.astype('float32'), [9, 11, 13]))
output = relay.Tuple([call_4659,uop_4670,call_4673,var_4674,call_4698,const_4699,])
output2 = relay.Tuple([call_4660,uop_4672,call_4675,var_4674,call_4700,const_4699,])
func_4705 = relay.Function([var_4674,], output)
mod['func_4705'] = func_4705
mod = relay.transform.InferType()(mod)
mutated_mod['func_4705'] = func_4705
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4706 = relay.var("var_4706", dtype = "float32", shape = (256,))#candidate|4706|(256,)|var|float32
func_4705_call = mutated_mod.get_global_var('func_4705')
call_4707 = func_4705_call(var_4706)
output = call_4707
func_4708 = relay.Function([var_4706], output)
mutated_mod['func_4708'] = func_4708
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4716 = relay.var("var_4716", dtype = "uint16", shape = (14, 8, 5))#candidate|4716|(14, 8, 5)|var|uint16
var_4717 = relay.var("var_4717", dtype = "uint16", shape = (14, 8, 5))#candidate|4717|(14, 8, 5)|var|uint16
bop_4718 = relay.subtract(var_4716.astype('uint16'), relay.reshape(var_4717.astype('uint16'), relay.shape_of(var_4716))) # shape=(14, 8, 5)
output = relay.Tuple([bop_4718,])
output2 = relay.Tuple([bop_4718,])
func_4721 = relay.Function([var_4716,var_4717,], output)
mod['func_4721'] = func_4721
mod = relay.transform.InferType()(mod)
var_4722 = relay.var("var_4722", dtype = "uint16", shape = (14, 8, 5))#candidate|4722|(14, 8, 5)|var|uint16
var_4723 = relay.var("var_4723", dtype = "uint16", shape = (14, 8, 5))#candidate|4723|(14, 8, 5)|var|uint16
output = func_4721(var_4722,var_4723,)
func_4724 = relay.Function([var_4722,var_4723,], output)
mutated_mod['func_4724'] = func_4724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_4790 = relay.TupleGetItem(func_1858_call(), 1)
call_4791 = relay.TupleGetItem(func_1860_call(), 1)
output = relay.Tuple([call_4790,])
output2 = relay.Tuple([call_4791,])
func_4796 = relay.Function([], output)
mod['func_4796'] = func_4796
mod = relay.transform.InferType()(mod)
mutated_mod['func_4796'] = func_4796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mutated_mod.get_global_var('func_4796')
call_4797 = func_4796_call()
output = call_4797
func_4798 = relay.Function([], output)
mutated_mod['func_4798'] = func_4798
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3484_call = mod.get_global_var('func_3484')
func_3486_call = mutated_mod.get_global_var('func_3486')
call_4817 = relay.TupleGetItem(func_3484_call(), 0)
call_4818 = relay.TupleGetItem(func_3486_call(), 0)
func_3753_call = mod.get_global_var('func_3753')
func_3756_call = mutated_mod.get_global_var('func_3756')
const_4835 = relay.const([[5,9,9,-5,5,-5,-7,-5,-10,-7,-8,-10,-9,-2,-8,-8,-8,-6,-10,-1,-2,5,1,-4,-5,-1,9,-4,2,5,-2,5,-3,8,2,10,6,-5,-5,10,-9,-5,-2,9,6,-6,-1,8,-9,-5,6,7,1,10,1,6,-1,-10,-1,-9,-5,7,3,7,-4,5,10,-3,-3,6,3,4,4,-8,-5,4,-1,7,8,8,-10,3,6,-10,-9,3,-10,-7,-10,-9,-4,-6,-2,1,-9,-2,-3,-9,-1,7,5,9,6,-10,-10,3,10,1,4,-3,-10,-2,-2,-3,7,-10,-10,8,6,4,6,2,-9,-9,-4,6,9,-8,-6,-3,-2,7,-1,-2,2,-5,-3,4,7,-5,-8,-4,8,10,-6,8,4,-4,10,-4,-1,-3,-3,6,-2,2,5,-9,-1,-8,-9,-4,2,10,3,-6,-2,-9,-6,8,10,-8,-7,6,5,4,10,7,-8,-6,2,5,1,-10,9,-6,7,3,-10,-1,-5,-9,2,9,-4,1,8,-1,-10,-7,8,-9,7,10,-1,4,-5,-10,-8,9,3,9,7,-10,2,7,3,6,8,-9,4,-4,6,-6,-3,10,4,-7,1,8,-9,3,1,-1,-3,7,-6,6,4,-10,-8,3,2,-5,-1,8,7,9,-1,6,-5,-3,3,6,-5,4,-9,-5,9,7,2,10,-7,7,1,1,-8,8,-6,-9,-1,4,2,-4,-9,2,4,-1,1,8,3,10,6,3,2,-2,-8,4,6,-4,-9,-8,-8,-6,7,3,-5,-3,10,-4,-1,5,3,-1,7,7,2,1,-2,-1,10,3,8,6,-4,-10,7,2,7,2,-9,-2,-2,-10,-9,-7,8,6,-4,6,3,2,-3,3,-8,-4,3,7,-8,-2,-10,9,7,-4,8,-10,5,-4,-6,6,1,4,-5,-9,-10,3,-2,-7,-8,1],[-2,8,4,-6,8,-8,-4,-4,3,-6,-6,2,1,-6,-2,-4,9,2,3,-6,1,-1,4,6,1,-10,-10,5,-4,8,-10,-2,4,2,3,-10,2,9,-9,5,4,-6,-8,6,4,9,6,-10,-5,-8,2,3,3,10,-7,-3,2,7,-2,3,-5,-7,4,-1,-2,9,1,8,4,-8,-6,-3,-10,-8,3,8,4,1,5,-10,3,2,1,-7,-1,7,-6,6,1,10,-5,-2,-6,-10,-4,-1,-8,-10,5,6,-2,5,-3,4,3,8,4,1,-2,2,-9,-5,-6,-8,2,-8,6,10,2,-5,-8,7,2,2,6,2,-7,-6,1,5,-9,6,6,-7,10,5,5,-1,-9,3,-7,3,-3,6,-5,7,-3,9,1,-8,-10,-10,-5,3,4,-1,2,-6,5,9,2,-1,-1,6,8,2,7,4,2,7,-1,8,2,-8,-5,-6,5,4,2,5,-4,-10,10,6,-9,-8,1,6,10,-2,-3,4,8,3,9,-1,-6,5,-5,7,-4,-6,3,-8,-8,-9,-1,-10,-10,10,-2,2,10,-5,8,10,-9,7,-10,6,-7,2,8,8,4,7,9,-7,9,-5,-4,-1,1,6,4,1,8,1,5,2,-7,9,-8,-6,-6,4,-4,-6,4,8,5,9,-3,9,-10,-9,-10,5,-3,-7,-2,3,-7,-10,-1,6,8,-9,-8,8,9,-6,-6,-1,4,1,8,-1,-1,5,-1,-9,-10,1,7,5,9,-7,4,5,5,-3,10,-1,5,4,-8,-5,1,6,5,6,-3,-8,-2,-7,9,-3,2,-1,-9,-2,-7,-7,5,6,5,4,6,6,-7,6,-3,-6,-2,-1,-1,2,-2,-6,-4,-6,6,-8,-4,-10,-9,8,5,6,-10,-2,2,8,-3,-8,7,-8,4,3,4,8,2,-7,7,-6,-2,7,-2,-7]], dtype = "int64")#candidate|4835|(2, 360)|const|int64
call_4834 = relay.TupleGetItem(func_3753_call(relay.reshape(const_4835.astype('int64'), [720,])), 0)
call_4836 = relay.TupleGetItem(func_3756_call(relay.reshape(const_4835.astype('int64'), [720,])), 0)
func_3146_call = mod.get_global_var('func_3146')
func_3149_call = mutated_mod.get_global_var('func_3149')
const_4847 = relay.const([-1.398893,9.418501,-4.823937,-2.730528,-2.114976,8.779009,3.979978,5.181021,4.637263,-1.057227,0.300184,-2.977648,9.971381,-9.416605,-1.172176,-2.934619,-3.892959,-0.115667,-5.570421,-1.547223,6.181623,1.564440,-1.539784,6.296615,-3.864638,-7.186827,7.609127,-7.997405,3.017481,6.711219,-6.876943,0.412284,4.405359,-9.122528,-1.238121,-6.084523,-7.441584,-9.288183,-9.673241,-9.315255,-3.051560,-5.655028,-9.037309,-2.826051,9.624957,1.646443,1.126364,3.171160,-0.206676,0.754458,-9.701593,-4.867362,4.087331,9.248290,-1.104362,1.278339,-7.731738,-7.465903,-0.716398,6.025613,-8.556971,6.764708,2.870168,-9.472789,-8.509764,-3.536276,7.402831,-9.705555,1.412740,-2.657691,1.932383,-1.557865,7.390164,-2.556878,-7.727579,-4.916211,-9.721324,-1.156246,-2.438991,2.133677,-2.197483,9.960315,-4.753441,3.882422,-6.739473,2.032941,3.902769,8.438452,-7.991523,-6.541924,0.819468,9.001304,-5.307920,3.118613,-9.393991,-1.117565,-1.044835,-2.360399,1.970905,0.115589,3.550807,3.848825,-6.348188,-3.271417,2.424914,6.555009,1.760638,-1.699663,4.990034,-9.109988,5.552298,-6.577064,-9.118908,-7.649780,-0.148655,2.025232,2.254846,-5.565755,-3.739841,-3.141379,7.974512,-8.398670,1.442820,3.069149,2.918549,-4.882302,-4.952939,-3.232730,-9.606806,-4.667746,-3.717854,-3.699626,-4.357330,-4.471622,4.087932,-6.276713,-7.274541,0.386715,-0.219106,-3.942479,-0.505494,-9.984319,-5.499181,-3.020876,8.078791,0.314701,-2.062884,4.896255,2.152087,1.530205,4.428714,4.314904,5.020470,6.147632,2.615780,9.776738,-1.057332,-1.188529,-0.503112,8.520124,7.902707,-4.549776,1.652585,6.388572,3.197051,4.099376,-9.208285,-2.751939,-6.023766,2.818333,-2.414556,8.466414,-1.199481,0.819775,-2.293191,7.035594,7.405175,-6.585090,0.687447,2.059636,-4.428472,1.883364,-9.389828,-1.729038,6.674593,-6.333892,-7.181555,5.734590,-5.990188,-0.110759,1.441173,-8.793585,7.666524,6.097954,-3.514089,6.042955,-2.989515,-7.162655,-8.148989,7.821117,-9.688870,6.628773,3.734595,-8.468874,9.744229,9.728257,-3.749239,-4.411408,-3.508015,-5.782378,-5.152226,3.073390,1.229258,1.036800,8.251309,4.866538,9.857636,-4.567297,4.016705,-9.427576,0.077457,-5.357273,6.658464,4.859782,-4.520964,4.945004,0.893352,1.511393,-5.298668,2.984887,6.936432,0.108255,7.934914,-0.099823,-4.744795,-0.492372,-6.281460,9.825825,7.147384,7.692076,1.399810,-6.990181,7.414467,0.913062,5.063589,0.155150,4.545005,6.636777,2.181530,-8.816745,-2.962240,5.811017,8.586428,-1.525395,-8.038479,-5.979245,-6.079237,-3.570854,6.707146,9.252621,-2.053358,4.874443,-9.874722,0.065836,-5.826148,2.136034,-5.603676,8.555774,-8.419963,-3.870284,9.083700,-8.633910,3.942092,-7.411656,-5.705908,2.050524,-1.582829,-9.720475,9.628238,-7.771746,8.528961,-0.923626,2.319145,9.309914,-7.254677,-0.219271,9.279703,0.544382,8.775781,9.572815,-5.749226,2.134188,2.714139,6.822240,7.005331,1.150799,2.276778,-7.247392,7.636330,-6.181909,6.993447,-1.709801,6.721638,8.770760,2.348664,-4.614822,-3.761261,-5.267576,-1.753717,-6.178880,-0.498913,-7.207784,-3.567264,-7.403320,2.843734,4.435134,9.827065,7.155747,6.237902,6.192007,6.795174,-4.831231,3.785172,2.315346,-9.747177,4.974698,7.078149,1.500306,-1.224347,-5.264460,-2.314305,-2.543153,5.681588,5.637834,0.187325,6.879028,-0.271751,-9.808654,-5.534820,1.856896,5.020347,0.167830,5.782409,-0.479377,-2.534625,2.786506,-0.159104,-5.159048,1.984156,9.788985,7.637797,8.556212,-7.007546,9.439915,4.995089,-3.408789,-9.687201,-7.832185,-1.298099,3.610484,1.838273,2.512213,0.382047,8.968372,3.052608,6.315829,3.670932,3.177326,-6.848348,-4.356753,9.852573,-5.964424,9.369827,8.383555,-0.425799,-8.466232,0.281666,9.413163,-0.147563,8.513146,6.902216,-3.774104,3.881619,0.058145,-0.716486,-4.674020,-6.726604,3.030455,0.360591,5.062132,-3.475806,3.601499,2.700511,-5.136341,4.153273,-4.826145,-6.098054,2.113996,-9.280806,2.421755,-1.842239,-8.625499,-0.787018,-8.225709,5.995605,8.497233,-5.799320,1.114276,-9.113150,7.765723,-5.750819,-6.937897,-6.025005,-0.351083,-3.893167,7.008152,5.485656,1.923929,-1.676989,6.718599,5.316045,8.651530,0.697650,-7.349392,-7.956200,3.501223,2.137572,3.497418,4.585670,-7.100128,1.003587,4.999453,7.856102,-7.458571,-7.890449,0.927343,5.727016,5.385541,-6.984209,-7.626536,9.531012,1.368080,4.166996,-3.605674,-5.013275,9.613209,4.515118,9.251746,1.140729,-1.067250,1.587890,-5.703935,-9.510983,-1.314797,3.603040,1.217507,-7.224448,2.371587,9.243170,8.899099,-4.513365,3.184526,1.280864,-8.979017,-0.658885,-9.020476,9.779061,-4.151340,1.521640,-6.935954,3.991104,1.507658,-0.170773,-9.446732,5.871976,9.787350,-4.008461,7.834043,8.540996,-2.989952,-9.092314,-8.065966,6.285875,3.804937,4.455140,6.387891,6.155706,-5.744752,9.603358,3.263532,-7.661803,-2.937026,7.303363,-6.871012,-3.383243,-0.908735,-6.149588,-0.755372,-3.569873,-7.629397,7.664528,-3.811869,-4.223402,-0.746892,8.833192,-8.478485,-7.251576,-6.520777,-4.429998,7.361817,-2.196680,9.249183,-9.713769,-4.004268,9.971933,-6.290409,9.207304,7.793520,4.748882,5.123917,1.167487,0.854542,1.622380,4.270813,-8.546414,-3.278786,4.247395,8.946866,8.413167,-8.323448,-6.187147,0.084426,6.993245,-5.710422,-6.501112,-9.528782,5.387788,3.760883,0.094434,7.342523,0.872638,-7.568544,5.153742,-7.798215,-3.139759,-6.500460,5.434497,-8.306057,-1.760644,-2.320868,-4.982483,4.883776,-0.335635,-5.645452,6.575769,7.560275,8.707276,8.333644,-8.857079,2.040334,-2.060692,1.953319,2.937781,4.485694,-1.775947,-4.324188,-1.361150,0.476188,5.348954,-2.003487,5.467992,8.040934,-8.448178,3.873681,4.284774,4.068326,-3.762168,2.293246,-5.146818,-6.530035,-9.506743,8.721130,-0.036802,9.968533,3.973421,-6.250991,-2.617536,3.108122,4.157828,9.113142,-1.425309,-3.643222,3.242317,-8.408263,-1.798571,9.066807,-4.374586,8.854867,3.067276,-3.955487,1.488012,4.539925,-3.735000,-6.060363,2.517476,-4.238607,-2.905577,8.336915,3.218763,4.846541,-1.025531,-3.405201,7.289012,5.209989,2.805794,6.578190,-7.830548,-1.897790,-4.183721,-1.363928,-9.223768,6.538765,-0.753954,-5.929709,-3.132801,2.660316,-8.191091,5.639242,-7.201958,-8.138806,-5.760082,-3.989900,-9.658756,-5.657503,1.294653,9.029058,3.975643,-5.274702,9.089490,7.377504,-1.683040,-4.117701,7.861142,-3.125410,-8.689527,2.842997,8.708148,8.861847,-6.315246,-4.251766,0.622994,2.234290,-6.459710,-4.218564,-3.021379,3.247477,-3.574207,-6.166321,-3.524225,0.933978,6.487868,2.973983,-6.243725,0.701098,-4.440181,-7.905244,9.603675,6.162063,2.832354,1.767067,8.858702,-8.788614,-4.737928,7.573762,-9.654060,1.570567,5.654701,-9.835904,9.231161,-7.405073,6.976911,0.874224,-7.105583,-9.811671,-4.890763,-4.203677,-5.797902,-2.155350,6.330380,8.760200,-1.082685,5.708075,-7.304520,-1.636483,1.854558,5.070665,3.911442,0.752777,5.371752,-6.252207,5.645786,-7.568199,4.296075,-5.752038,-0.157907,-1.738843,-5.670815,2.798280,2.031235,5.462676,-3.750520,2.488074,9.113879,-6.705662,-1.313098,6.010853,5.041399,-2.434325,-0.784584,2.687126,-9.997772,7.976909,1.710825,6.896618,-5.359556,-9.617353,-4.887796,2.652715,-2.248721,-0.183962,-0.954016,2.714115,4.127857,-8.963244,-5.979631,2.990105,-5.674432,-6.514796,5.427761,-7.885347,-2.501250,-5.720205,2.322510,-7.560818,3.072052,-6.525139,-1.796892,9.298903,2.258886,6.522272,4.940927,1.255971,-1.331907,-9.292271,8.788749,2.418446,3.593825,-7.764318,2.302178,-8.832384,-6.502721,-5.338294,-1.793789,-6.056293,-0.642468,-4.601720,-3.827775,7.716849,6.134728,-2.746260,-4.069636,-6.603661,-8.741148,-5.904451,5.136575,-8.017540,-4.991763,4.524108,7.830723,-5.861715,3.500287,3.059954,-0.369659,-2.109011,-9.388347,2.620425,0.940202,-1.117148,-1.547526,4.228615,-1.731173,1.533326,5.252021,3.892162,8.830554,-7.156153,-3.897596,-6.272307,-2.759243,-0.059246,-5.901068,1.264867,2.060249,1.727702,5.085977,-9.331352,-4.393617,-2.594341,-2.008178,-9.035598,1.389997,-5.304079,5.276997,5.423062,-6.470796,-7.035891,8.490743,-6.800560,-4.622100,-0.379405,-2.289889,0.688210,0.578566,-2.547742,6.032825,2.161755,7.687080,3.988040,-8.837127,-7.991731,-9.079803,7.870292,7.777756,5.087174,4.693669,4.993973,-5.393753,8.698694,-4.405839,0.847354,-7.488548,-9.404240,-3.153276,-5.214606,-8.326521,3.731468,-5.014529,-0.023391,-2.963272,7.219440,-1.082237,-4.935295,9.361729,-5.202296,5.969443,7.653257,-8.458543,-8.088169,9.400662,7.896395,6.846240,6.485339,-8.290538,4.860262,0.279875,-6.262956,4.887081,-5.166781,-9.275587,-3.232521,-6.868108,-2.657361,-7.969972,7.774244,8.103559,9.067523,-9.585914,-2.776616,2.837178,7.123379,-1.597728,-4.237855,-0.944613,-9.674620,1.316095,2.513652,7.866448,-0.153198,-5.415347,2.457109,-9.480451,-4.401844,7.552946,9.230877,5.803336,6.079091,0.197239,6.428359,-1.091032,-2.848671,7.258589,8.952395,0.160309,-0.024476,-3.998244,-2.186460,-1.609613,2.389734,4.814408,-4.994415,4.207605,6.521785,7.752293,5.724588,-9.990882,6.955754,7.799056,-6.595004,-9.355873,-6.633000,7.031855,-6.795585,1.017231,1.590645,-9.237593,3.299887,-8.069583,-6.434700,-2.684599,4.691043,-6.683978,-2.270856,-6.253129,-6.437457,4.273368,2.575250,9.929514,-5.329029,4.842953,-5.475314,-9.157003,4.103393,-1.799889,-7.736618,5.567612,9.768922,0.096857,3.802459,1.701479,-3.842721,-0.130215,5.547017,7.864678,8.285801,3.567578,1.228557,9.310216,-7.909971,-2.420517,-8.548527,1.852978,6.538965,2.595817,-5.354443,3.585036,7.593822,-7.835259,5.138661,2.155931,-4.577988,-2.431488,-3.909439,-0.200201,2.490563,8.177655,3.349293,-7.909250,1.100676,8.419161,-6.557976,2.017917,5.130343,-5.412401,2.764995,8.894849,-1.656985,9.179066,6.838579,-2.335766,4.706230,1.573285,-3.932627,8.306812,0.364547,3.459339,9.346897,-4.525284,-5.540247,-9.249266,-4.812901,6.108994,6.019961,7.009623,-2.926096,-6.208487,1.047545,-8.574403,3.556297,-4.928831,0.196932,-2.419126,-9.820783,1.975218,2.575988,-5.930773,5.855952,-4.978396,2.499599,2.361664,0.324286,8.692030,5.978685,-2.069998,9.268747,-0.620411,-9.962794,-5.454919,5.048913,7.331669,7.962124,-7.532087,3.740607,5.468041,-3.707346,4.240436,-6.658335,-9.746032,-8.080271,-6.904028,5.277645,-3.354086,6.429273,-1.368330,-2.634559,9.989683,-2.382431,-5.606772,4.482623,-4.246696,8.084535,5.825994,-3.126042,8.015766,4.152032,-0.106629,-2.790230,-0.914724,1.049449,-9.001476,3.485003,7.380388,8.285972,5.325404,-5.141173,-9.972443,4.839418,8.701296,-7.028510,3.792830,8.745026,-3.903802,-3.460740,6.807447,-6.686133,-1.666793,-0.743060,5.275820,8.832505,-0.129310,-2.360941,6.410992,-9.322513,6.313989,-7.815262,-4.235809,-7.950588,4.755258,-9.411108,0.636556,4.502828,-9.062998,7.940657,9.996427,-8.829702,-2.440210,1.598041,3.140972,6.465979,-5.804396,8.627409,1.454543,4.123688,-6.709105,8.074259,-1.907752,3.670711,-4.930871,-2.280569,-7.337076,0.492512,2.355769,-2.419776,4.544173,0.595454,6.072196,-9.954497,2.172513,-8.837840,5.469188,3.702901,-6.206208,-3.553004,6.371383,-6.236232,-8.811430,4.919069,-5.231440,-1.230899,8.216513,6.685978,-8.331092,9.838375,-2.074286,0.875187,2.665229,0.330720,-8.149848,2.153904,9.126938,6.210575,7.656471,3.191341,-2.447251,5.231242,-1.001843,1.047725,5.576949,-3.516917,-0.914300,0.525601,-8.198191,6.105824,8.383939,-8.041761,-7.353988,-4.541942,-2.705713,-1.020026,7.209512,-1.513765,-7.533315,-0.329178,-9.491623,7.575619,-4.556840,1.124665,-8.446416,3.584268,1.911238,-6.376898,8.669828,2.371469,-9.855092,4.241994,-5.585035,0.207375,5.039416,-2.728215,-1.176983,-2.745517,-6.051977,5.590986,-6.658243,-1.411473,2.324374,6.954360,4.537150,-1.025320,-5.303502,7.847086,-7.043079,-2.927019,-8.769160,6.360051,-9.478884,-4.531712,0.698461,6.645566,-9.379499,8.465836,-3.289919,6.681960,-7.523831,-1.535326,5.087673,8.161798,-0.890295,7.469362,-9.579892,-0.642265,-3.216089,5.779765,-7.630656,9.598675,6.833557,-6.746121,0.663607,4.670815,-3.733512,4.747104,-7.015018,9.738473,-8.627734,0.816875,6.409361,2.329396,-3.669582,-7.432935,-6.026862,-3.301120,-7.010408,4.390950,-6.133429,4.417701,-8.553370,-2.625882,2.689116,-9.963368,-4.423352,-5.478200,8.824570,4.583015,4.089881,-6.790940,4.603941,8.316255,-6.009164,6.238212,3.745130,3.336468,6.240413,-1.534234,8.471007,-8.742817,2.306453,7.162336,3.390666,-3.861861,-5.810813,-6.803787,5.267344,-3.083729,-6.768621,-4.155176,-4.378834,-4.430998,3.693104,2.495822,1.993398,-1.520510,-5.363696,7.547043,-9.223581,-0.199065,-2.109580,-8.906852,-2.216773,1.768127,3.363199,7.745791,9.197904,6.975932,-5.134384,8.922237,4.936936,-1.296214,-2.372463], dtype = "float32")#candidate|4847|(1287,)|const|float32
call_4846 = relay.TupleGetItem(func_3146_call(relay.reshape(const_4847.astype('float32'), [429, 3])), 1)
call_4848 = relay.TupleGetItem(func_3149_call(relay.reshape(const_4847.astype('float32'), [429, 3])), 1)
output = relay.Tuple([call_4817,call_4834,const_4835,call_4846,const_4847,])
output2 = relay.Tuple([call_4818,call_4836,const_4835,call_4848,const_4847,])
func_4850 = relay.Function([], output)
mod['func_4850'] = func_4850
mod = relay.transform.InferType()(mod)
output = func_4850()
func_4851 = relay.Function([], output)
mutated_mod['func_4851'] = func_4851
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4858 = relay.const([[[-3.384513,5.390239,-9.413634],[-6.480062,-8.216001,-7.935334],[-1.858871,-9.893889,-7.263671],[-1.974878,8.968358,-9.918195],[4.535118,4.254792,-5.155377],[1.766085,4.280416,-8.642570],[2.317234,-8.599342,2.284503],[7.392453,-7.370427,-8.308876],[-0.952500,0.566365,8.143934]],[[7.288683,-3.979920,9.210903],[-5.296635,3.579719,6.577289],[9.809568,-0.361210,2.211289],[-0.295533,7.622470,-8.152592],[2.306739,-7.415131,-0.694284],[1.927034,-1.634886,-3.267536],[-2.653202,9.653725,-4.943971],[2.966592,5.262239,3.200159],[1.536331,8.517122,-4.679696]],[[-6.407967,-1.663156,4.741389],[6.899531,2.403639,-8.688045],[3.058774,-8.129020,-0.765585],[-2.195063,-8.723836,1.583329],[-6.709853,-2.856811,3.867287],[4.438481,-4.445323,-0.634335],[-5.803016,-1.904281,-8.545581],[8.190662,7.076841,-0.270141],[0.962722,1.168299,-6.393368]],[[4.050855,-5.532450,-5.273221],[5.608254,1.054223,2.832337],[1.970999,5.930066,4.970397],[-0.256862,-2.988717,-0.578449],[2.665441,0.365078,-2.944890],[9.457194,-2.135808,8.797479],[1.695122,-7.857638,-0.801384],[-6.807209,0.393970,-0.249026],[2.292326,1.504206,-8.504178]],[[-8.941053,8.904959,9.831697],[3.514274,-9.888636,-1.110807],[-5.677268,-0.373110,-1.561955],[8.006155,-4.285129,5.003888],[1.018274,2.489440,-6.748403],[3.516056,4.930474,-9.329251],[-0.716381,3.782934,5.391854],[-0.178503,2.802855,-1.685777],[5.153926,-4.695830,-7.015268]],[[-8.980240,0.426905,-8.014176],[-0.641912,-5.117390,4.199344],[-6.339307,4.286366,-4.877101],[9.743805,-5.710258,3.325445],[-3.811207,-3.649234,-4.173106],[-6.504617,9.135414,-7.097603],[4.903920,8.761934,-1.503293],[-0.336734,-2.321241,-0.390327],[-9.786499,9.961903,-1.936069]],[[9.837851,3.304075,4.072890],[-7.235394,0.150133,5.812208],[-5.369886,-2.968023,3.208054],[-1.958228,7.629896,2.807051],[6.568426,5.929971,-4.345817],[2.079336,-0.760934,-7.634766],[-7.621067,-2.888110,-8.633201],[0.627524,-8.047355,-0.538600],[-5.794311,-9.048887,7.848422]],[[7.350636,9.912920,6.112678],[-2.010365,-3.420730,2.741222],[-2.645663,9.400592,5.563190],[0.911302,-4.926209,-6.569075],[2.086366,2.543817,-3.228601],[2.325306,5.511268,-8.330722],[-9.171460,4.514285,-4.949770],[3.780010,-9.586081,3.979203],[-2.908549,-3.298193,-0.484148]],[[5.684942,7.748999,1.438311],[5.782057,4.596368,-7.525702],[6.233332,-8.100752,9.810487],[-5.331777,-0.700436,0.588894],[-0.578371,-0.779680,6.863369],[-9.486456,-3.140430,4.514382],[3.407780,-0.249192,-0.013224],[8.066154,1.213038,-0.047059],[-9.207502,-5.216851,-9.770863]],[[-3.050065,7.462274,2.671286],[6.578937,-4.867362,-3.329233],[-9.814723,-9.946720,-1.134715],[0.603995,7.382795,-1.902441],[6.744552,-8.903810,1.204365],[1.344823,8.700253,-1.925095],[5.549402,-7.299574,5.322476],[-5.998544,3.474990,-4.454896],[1.569241,2.341238,-2.123632]],[[-8.601134,-9.810603,8.061651],[4.516901,1.301788,-9.445206],[-8.839397,3.762049,6.707780],[4.242420,-9.539792,-0.836858],[-3.782722,-1.821392,-6.322921],[4.470470,-8.700096,5.591714],[3.774937,1.619899,-5.028279],[-7.449710,3.508577,0.531068],[-2.881501,-7.152465,1.211934]],[[5.193653,-2.857318,5.998398],[4.258453,-9.546246,-0.084512],[9.851307,-9.609467,-4.599609],[-1.488235,1.297339,2.624993],[-9.566439,7.135490,-5.574908],[-4.321187,7.529195,-6.980129],[5.798863,6.462763,5.231006],[-2.548504,-7.678023,2.731279],[7.230219,2.321432,-0.326825]]], dtype = "float32")#candidate|4858|(12, 9, 3)|const|float32
uop_4859 = relay.rsqrt(const_4858.astype('float32')) # shape=(12, 9, 3)
var_4865 = relay.var("var_4865", dtype = "float32", shape = (12, 9, 3))#candidate|4865|(12, 9, 3)|var|float32
bop_4866 = relay.logical_or(uop_4859.astype('bool'), relay.reshape(var_4865.astype('bool'), relay.shape_of(uop_4859))) # shape=(12, 9, 3)
func_4093_call = mod.get_global_var('func_4093')
func_4095_call = mutated_mod.get_global_var('func_4095')
const_4870 = relay.const(-5, dtype = "uint16")#candidate|4870|()|const|uint16
call_4869 = relay.TupleGetItem(func_4093_call(relay.reshape(const_4870.astype('uint16'), [])), 1)
call_4871 = relay.TupleGetItem(func_4095_call(relay.reshape(const_4870.astype('uint16'), [])), 1)
func_4525_call = mod.get_global_var('func_4525')
func_4527_call = mutated_mod.get_global_var('func_4527')
call_4872 = func_4525_call()
call_4873 = func_4525_call()
func_1858_call = mod.get_global_var('func_1858')
func_1860_call = mutated_mod.get_global_var('func_1860')
call_4878 = relay.TupleGetItem(func_1858_call(), 0)
call_4879 = relay.TupleGetItem(func_1860_call(), 0)
output = relay.Tuple([bop_4866,call_4869,const_4870,call_4872,call_4878,])
output2 = relay.Tuple([bop_4866,call_4871,const_4870,call_4873,call_4879,])
func_4883 = relay.Function([var_4865,], output)
mod['func_4883'] = func_4883
mod = relay.transform.InferType()(mod)
var_4884 = relay.var("var_4884", dtype = "float32", shape = (12, 9, 3))#candidate|4884|(12, 9, 3)|var|float32
output = func_4883(var_4884)
func_4885 = relay.Function([var_4884], output)
mutated_mod['func_4885'] = func_4885
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4913 = relay.var("var_4913", dtype = "float32", shape = (14, 5, 14))#candidate|4913|(14, 5, 14)|var|float32
uop_4914 = relay.tan(var_4913.astype('float32')) # shape=(14, 5, 14)
func_2573_call = mod.get_global_var('func_2573')
func_2576_call = mutated_mod.get_global_var('func_2576')
const_4927 = relay.const([-6,-3,10,-8,6,7,7,-7,-7,-5,9,10,-1,-8,-1,-10,1,-2,5,5,-1,1,6,-1,6,-3,10,-10,8,-8,1,7,-5,-3,10,-4,-2,3,10,3], dtype = "uint16")#candidate|4927|(40,)|const|uint16
call_4926 = relay.TupleGetItem(func_2573_call(relay.reshape(const_4927.astype('uint16'), [5, 2, 4]), relay.reshape(const_4927.astype('uint16'), [5, 2, 4]), ), 0)
call_4928 = relay.TupleGetItem(func_2576_call(relay.reshape(const_4927.astype('uint16'), [5, 2, 4]), relay.reshape(const_4927.astype('uint16'), [5, 2, 4]), ), 0)
const_4933 = relay.const([[[7.120085,9.705666,6.032518,-4.084641,-4.306492,0.607465,-4.010054,-0.846671,-3.279475,-6.316183,5.650420,0.515071,8.218382,5.388629],[8.198989,5.473961,0.341673,-0.727701,-2.542266,-8.240504,-3.679898,-8.320714,8.285847,4.977957,2.248685,-8.507580,9.763821,1.360415],[7.194310,-9.976129,9.011639,0.925374,-8.541737,7.965834,-4.590744,8.214495,6.446225,1.877409,-5.651819,-0.267593,3.669031,5.810885],[-9.999052,1.110132,3.643170,-9.480229,9.389976,2.921512,-9.683528,6.091785,-1.386522,4.888937,-8.307790,-4.780658,-0.818410,-4.852171],[9.927764,-7.720225,-2.307053,9.376972,0.698646,-7.272729,7.804573,4.502638,-5.668251,-2.929222,6.050074,-1.934986,4.171169,9.179758]],[[3.234828,2.151642,3.876894,1.028541,2.151058,0.705301,-1.259443,-6.808602,-2.819610,2.354506,-9.150968,9.960408,-4.008022,4.638747],[4.573338,0.449331,-8.400646,6.756350,-8.091725,9.662697,-1.235466,-4.709169,-4.406495,-5.711548,-6.045361,4.074028,-0.234585,9.199203],[-1.582156,-3.059525,6.567052,-8.406523,-3.976806,8.285046,-0.645642,-6.280307,1.977131,-2.037753,7.276229,-5.217857,-5.302130,-6.818763],[3.750985,4.757743,-5.997275,2.952635,0.366256,2.641608,8.992207,-7.005587,5.250273,-9.329459,-3.125329,-1.822933,-2.988642,2.733068],[-1.037517,3.657840,5.893828,2.876648,-6.808928,3.476758,9.930555,1.066436,6.811591,-6.349725,-0.035020,-4.387892,9.947243,7.425031]],[[6.187465,9.418905,-4.066775,7.030261,9.654053,-6.580058,0.214504,-0.381589,-1.283825,-3.163304,6.827267,7.763911,2.125621,-1.731166],[-6.474707,-3.964178,0.507032,-3.563168,-0.802175,6.391292,-2.073319,9.610081,-5.643253,-0.751066,2.691190,-4.618959,-0.495126,0.475630],[6.795579,-7.556294,1.862941,-6.875724,-7.745783,-7.064299,-8.597353,5.879200,1.186283,7.137505,-6.687048,4.048101,-5.986980,-2.447976],[4.344652,-4.578952,-5.598381,-4.075433,-6.991805,-3.282379,7.512758,3.279340,-4.288199,7.674828,-8.945080,4.834693,-3.258080,-9.893724],[8.820512,9.351452,-5.570820,9.857790,4.477577,-9.916899,-7.794337,-8.812470,-5.677384,-8.767462,-0.398314,-3.237368,-5.505609,9.383265]],[[-5.274360,5.428360,1.456108,-1.785119,-1.538679,-0.086691,-2.104919,1.290239,5.545589,-6.594747,-7.804683,-1.274017,-8.575720,8.495231],[7.360965,-1.631693,-7.842265,2.926060,-5.393020,-8.379596,3.170923,-4.531230,6.876730,0.116768,-6.030916,-3.156290,-9.696437,3.739370],[-9.650089,0.509305,-6.206176,5.883539,7.564621,-7.093330,3.561829,-0.652281,4.992646,-0.547081,2.378031,0.472632,9.867913,-8.322272],[-9.524347,6.443459,-9.691986,-6.671199,-5.787171,6.982996,-1.658984,4.157308,-3.752985,7.617770,8.864890,5.793320,3.818941,-2.776308],[-6.937748,-6.198155,-8.636624,7.320056,-4.303505,8.566104,-7.283003,-5.714097,-4.936265,-5.808859,5.956345,-8.252357,1.234866,6.879113]],[[-0.628371,3.719817,-9.676017,-8.584102,9.323749,8.480592,6.513166,-7.264968,-7.890582,1.034215,8.234550,1.890662,1.250731,4.697642],[2.402928,3.469044,-2.767471,7.859624,-6.486416,6.104448,3.133549,4.865871,-1.145969,-0.884417,-8.869412,9.577751,9.807725,-8.858133],[2.423081,7.586411,3.916026,-3.893240,-2.988210,-0.776069,9.624841,-2.720299,7.268550,-1.488298,-5.428102,-6.719080,-5.217246,-9.697386],[-7.270264,-9.037257,-6.349536,0.479021,-9.148432,8.925158,5.589919,5.492365,9.783969,6.514476,0.653695,-4.621347,2.388736,-4.993925],[7.492513,2.741153,6.738740,3.720385,-4.720837,0.932666,-6.845856,5.778822,8.398329,1.623776,-6.614425,8.724202,-4.447524,1.660157]],[[-8.786895,4.475866,-9.010366,0.982456,-7.479449,9.645757,1.334378,4.442694,3.645729,8.531702,5.437914,-1.254082,-2.841339,7.958686],[6.826432,-4.273050,-0.398125,5.599388,-1.649143,-0.773436,8.689508,2.619807,6.734408,4.852638,1.577860,9.233976,0.877417,8.448901],[4.510776,-9.979551,6.341172,-5.171208,-0.659167,2.450323,-3.315950,4.378839,9.488867,9.374277,5.406481,-7.567644,8.809750,2.535233],[7.468542,-4.537931,9.778556,9.629553,6.887236,-5.781929,-8.449627,7.259734,6.265287,-0.457858,4.331865,4.721295,-8.465466,-9.766925],[6.199513,-8.594088,-1.044238,8.148783,9.508518,-1.015380,-5.575258,-3.620912,-6.587429,-4.380057,-7.833669,7.574643,-2.992448,-5.490275]],[[-0.906227,-3.724275,-6.394529,-3.109751,-0.028719,-9.414378,-8.985531,-8.601820,5.347853,0.279065,-5.327623,-3.604119,0.028047,9.257044],[-6.364536,-8.870494,-3.539728,9.357710,-9.949066,5.859083,0.147714,-0.952570,-3.235339,8.333933,-3.834212,-3.735194,-0.229139,6.033962],[-2.772204,4.375483,4.458234,4.445613,-0.682306,-4.492984,-1.828521,2.457511,-2.833011,8.895577,8.453527,-7.996308,-0.539323,-9.933902],[1.994497,-5.857883,-8.499829,5.279119,3.014018,4.127811,1.828271,-0.960860,4.061315,9.413983,-6.407871,2.736625,2.826307,1.303127],[-0.859633,-4.490037,6.798470,1.317575,-3.735333,8.658031,9.222854,-4.449588,8.149842,-2.751928,-4.515613,-4.374632,-0.406203,-0.161474]],[[9.986463,3.858001,-4.057847,-5.554318,-5.989473,6.751854,-1.048228,3.663060,-2.816122,-6.456868,-1.577762,-7.277575,-1.789396,0.544005],[-0.270990,3.758674,9.872130,1.768689,-1.019304,-4.250366,3.050175,-1.811364,-9.932744,1.139628,0.429454,-3.728965,-8.675993,-2.854284],[7.713222,-6.919412,-7.624928,-1.100929,-6.419535,2.390384,1.966666,-0.994803,3.538413,-0.134039,-7.420367,-1.061435,1.552147,2.816988],[-0.773703,-9.194837,-6.983295,7.288681,-8.175147,-5.564063,-9.275194,-1.773766,1.110584,-6.081473,0.413271,1.842231,4.179331,4.721656],[-8.407729,-8.471605,-7.118376,5.771111,6.455780,0.186042,-1.187755,3.049841,4.718044,-3.443997,-8.176152,-6.789348,4.366487,6.395002]],[[0.765336,1.035688,5.884666,-0.366412,-9.494202,-9.658226,7.662844,-9.675392,-2.092511,-9.361037,4.078462,-8.044013,6.661010,6.899908],[-2.973782,0.693173,1.001780,-2.041810,0.205919,-3.525788,-0.798894,8.395360,9.951235,3.664895,4.737688,3.586932,-2.085330,-1.097254],[-2.447879,-9.852461,-6.925214,3.813075,-7.029102,3.319154,-7.369883,3.950950,-9.875025,-3.825768,-1.087521,1.392440,3.398317,-0.805140],[0.455356,-9.774872,-7.337776,-8.871606,-1.859922,-8.930751,7.722615,-2.812261,-4.246853,-6.657388,9.788382,-3.943072,-7.956391,2.158754],[-9.039021,1.854096,4.046890,-0.884228,-6.010144,-4.030288,-9.880044,3.385621,-0.113724,3.294704,-8.314343,-6.584847,6.107559,3.233845]],[[-0.218306,9.572649,0.556647,-9.286613,-4.071996,-9.994531,-9.057208,-8.954912,-0.614001,-9.016439,5.039284,1.124691,-3.603271,1.734515],[-1.553947,5.860536,-2.492277,5.499624,-7.270781,-8.245228,-6.129275,5.617519,1.986232,2.413833,-5.071786,5.841146,-6.857975,4.531976],[-2.271437,-4.637265,3.630537,8.091786,-2.270525,4.782927,3.653367,-5.525588,8.890862,-9.306888,4.104997,-7.120564,4.855758,4.550689],[-2.077410,-2.536981,-6.711155,4.283925,4.954216,8.103800,5.251239,-5.085929,-3.968160,5.554262,-7.235348,-2.517491,0.388373,8.300117],[-8.493176,-1.144244,6.952735,9.060979,2.700026,-8.047232,-2.024019,2.172985,-7.793985,-5.949021,-4.842559,-2.452983,7.793416,-4.696036]],[[5.246389,9.144449,-0.124953,-3.088601,4.911388,6.213443,-6.375182,6.725105,5.373591,8.680406,-2.503941,-5.980218,2.490876,1.911292],[-3.750262,7.255461,-0.057678,6.486316,7.402411,-9.244174,-0.108925,5.292835,4.218907,2.867570,0.907277,0.681881,-8.185862,-1.097577],[-9.457989,-1.816850,7.129917,5.036519,-6.127404,5.451193,-4.307963,-1.858807,7.358012,-0.896668,-5.329769,-8.317421,-5.162529,1.024141],[4.203961,-6.418489,-9.798946,-0.097141,-5.700994,7.006089,7.809797,-0.181463,-0.276654,-6.779015,2.531956,0.700635,-6.014939,8.852823],[8.532183,4.473646,5.103712,-4.399232,-7.178824,6.574162,-7.746084,0.073003,1.245335,-7.096429,7.571422,-5.336292,1.417467,-9.824145]],[[2.185447,-3.810870,4.765279,0.323289,3.883535,-2.312131,6.139805,-2.592824,-4.971937,9.933103,-4.570467,8.078455,-7.492499,-7.594484],[0.787688,0.619039,-1.732986,6.555946,0.311393,-6.940486,1.857170,-0.911048,3.774708,-2.284630,-8.069865,8.058543,7.738689,-2.719176],[-2.276172,8.057556,-4.532063,-0.374035,-1.547386,-1.315239,3.028649,-4.255299,9.747516,0.155838,-1.037868,-5.220612,3.971474,1.565054],[-7.459492,-7.747613,-6.722497,3.186163,-3.262872,5.340010,7.728684,-4.092032,6.746979,2.592780,1.000057,5.042518,9.450390,-4.005148],[3.452319,8.693208,-7.258556,3.591797,-4.036790,6.255605,-1.635179,8.354400,-7.134195,-4.062581,4.994547,-0.973701,-8.106470,-8.139618]],[[8.756555,-7.450728,-0.696485,-3.451288,3.934770,2.868102,-4.771667,-7.852946,3.487762,3.456283,4.592155,8.959827,1.835421,5.157296],[1.043803,8.731341,1.769901,-9.493570,-1.138307,-3.980574,-7.211483,7.931098,-2.038896,5.547285,7.606061,8.413477,8.204281,2.867935],[-8.141671,-9.885302,-0.048540,-5.540719,-4.600664,7.450699,2.344692,-8.484699,7.108445,7.737062,-8.806316,-3.971223,4.968228,-1.541298],[-8.174561,8.080241,9.972757,3.580184,-0.121764,1.960641,-5.378665,0.558076,-5.439522,4.040821,4.948752,3.079268,8.268444,5.651407],[0.619677,8.541574,-4.902421,-3.352204,6.221162,9.899928,3.954052,-3.078077,-3.520059,9.878419,8.890787,-3.145293,6.681629,-5.295262]],[[7.309489,8.664220,-4.493816,5.477036,-0.356870,-5.846116,2.919893,8.197349,-6.691035,-6.742510,6.654683,2.067103,-2.824231,3.228847],[6.482493,-1.508110,5.724554,6.688826,4.313497,-6.220139,-5.244934,2.394235,7.191934,-1.080236,-5.509726,-7.274591,-7.822459,-1.882217],[2.156966,3.957901,-0.967276,-9.308410,8.266282,7.800076,-4.516230,-5.574832,-5.810685,-2.448761,-8.318590,2.410782,9.555929,-8.707301],[9.688844,-7.478436,-7.879442,0.575341,0.369453,4.431460,6.340308,1.147326,-0.798593,-4.265683,0.452015,-7.635472,1.553159,-5.060910],[9.395965,-4.665717,-8.616951,-0.041313,-4.492506,9.907316,0.231936,1.673062,2.102295,-9.742087,-1.454490,-5.442773,6.269905,-3.372258]]], dtype = "float32")#candidate|4933|(14, 5, 14)|const|float32
bop_4934 = relay.power(uop_4914.astype('float32'), relay.reshape(const_4933.astype('float32'), relay.shape_of(uop_4914))) # shape=(14, 5, 14)
output = relay.Tuple([call_4926,const_4927,bop_4934,])
output2 = relay.Tuple([call_4928,const_4927,bop_4934,])
func_4939 = relay.Function([var_4913,], output)
mod['func_4939'] = func_4939
mod = relay.transform.InferType()(mod)
var_4940 = relay.var("var_4940", dtype = "float32", shape = (14, 5, 14))#candidate|4940|(14, 5, 14)|var|float32
output = func_4939(var_4940)
func_4941 = relay.Function([var_4940], output)
mutated_mod['func_4941'] = func_4941
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4955 = relay.var("var_4955", dtype = "int32", shape = (3, 15, 12))#candidate|4955|(3, 15, 12)|var|int32
var_4956 = relay.var("var_4956", dtype = "int32", shape = (3, 15, 12))#candidate|4956|(3, 15, 12)|var|int32
bop_4957 = relay.multiply(var_4955.astype('int32'), relay.reshape(var_4956.astype('int32'), relay.shape_of(var_4955))) # shape=(3, 15, 12)
output = relay.Tuple([bop_4957,])
output2 = relay.Tuple([bop_4957,])
func_4964 = relay.Function([var_4955,var_4956,], output)
mod['func_4964'] = func_4964
mod = relay.transform.InferType()(mod)
var_4965 = relay.var("var_4965", dtype = "int32", shape = (3, 15, 12))#candidate|4965|(3, 15, 12)|var|int32
var_4966 = relay.var("var_4966", dtype = "int32", shape = (3, 15, 12))#candidate|4966|(3, 15, 12)|var|int32
output = func_4964(var_4965,var_4966,)
func_4967 = relay.Function([var_4965,var_4966,], output)
mutated_mod['func_4967'] = func_4967
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2757_call = mod.get_global_var('func_2757')
func_2758_call = mutated_mod.get_global_var('func_2758')
call_5033 = relay.TupleGetItem(func_2757_call(), 0)
call_5034 = relay.TupleGetItem(func_2758_call(), 0)
var_5090 = relay.var("var_5090", dtype = "float64", shape = (2, 16, 6))#candidate|5090|(2, 16, 6)|var|float64
bop_5091 = relay.floor_divide(call_5033.astype('float64'), var_5090.astype('float64')) # shape=(2, 16, 6)
bop_5094 = relay.floor_divide(call_5034.astype('float64'), var_5090.astype('float64')) # shape=(2, 16, 6)
output = bop_5091
output2 = bop_5094
func_5099 = relay.Function([var_5090,], output)
mod['func_5099'] = func_5099
mod = relay.transform.InferType()(mod)
var_5100 = relay.var("var_5100", dtype = "float64", shape = (2, 16, 6))#candidate|5100|(2, 16, 6)|var|float64
output = func_5099(var_5100)
func_5101 = relay.Function([var_5100], output)
mutated_mod['func_5101'] = func_5101
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2732_call = mod.get_global_var('func_2732')
func_2734_call = mutated_mod.get_global_var('func_2734')
call_5109 = func_2732_call()
call_5110 = func_2732_call()
output = relay.Tuple([call_5109,])
output2 = relay.Tuple([call_5110,])
func_5142 = relay.Function([], output)
mod['func_5142'] = func_5142
mod = relay.transform.InferType()(mod)
mutated_mod['func_5142'] = func_5142
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mutated_mod.get_global_var('func_5142')
call_5143 = func_5142_call()
output = call_5143
func_5144 = relay.Function([], output)
mutated_mod['func_5144'] = func_5144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5280 = relay.var("var_5280", dtype = "uint8", shape = (16, 11, 11))#candidate|5280|(16, 11, 11)|var|uint8
var_5281 = relay.var("var_5281", dtype = "uint8", shape = (16, 11, 11))#candidate|5281|(16, 11, 11)|var|uint8
bop_5282 = relay.bitwise_or(var_5280.astype('uint8'), relay.reshape(var_5281.astype('uint8'), relay.shape_of(var_5280))) # shape=(16, 11, 11)
func_3484_call = mod.get_global_var('func_3484')
func_3486_call = mutated_mod.get_global_var('func_3486')
call_5295 = relay.TupleGetItem(func_3484_call(), 0)
call_5296 = relay.TupleGetItem(func_3486_call(), 0)
output = relay.Tuple([bop_5282,call_5295,])
output2 = relay.Tuple([bop_5282,call_5296,])
func_5301 = relay.Function([var_5280,var_5281,], output)
mod['func_5301'] = func_5301
mod = relay.transform.InferType()(mod)
var_5302 = relay.var("var_5302", dtype = "uint8", shape = (16, 11, 11))#candidate|5302|(16, 11, 11)|var|uint8
var_5303 = relay.var("var_5303", dtype = "uint8", shape = (16, 11, 11))#candidate|5303|(16, 11, 11)|var|uint8
output = func_5301(var_5302,var_5303,)
func_5304 = relay.Function([var_5302,var_5303,], output)
mutated_mod['func_5304'] = func_5304
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_5321 = relay.TupleGetItem(func_5142_call(), 0)
call_5322 = relay.TupleGetItem(func_5144_call(), 0)
func_3598_call = mod.get_global_var('func_3598')
func_3601_call = mutated_mod.get_global_var('func_3601')
const_5327 = relay.const([-8,-3,-8,5,-1,-1,-6,-8,-6,-4,-4,-8,6,-7,2,2,6,-6,-10,6,-5,-10,1,-10,4,4,2,4,-1,-5,-6,6,4,-4,5,6,6,1,-3,-6,6,-2,6,-6,-8,2,10,3,10,-8,9,4,-9,5,-9,6,5,-4,5,-7,-1,-6,5,-6,-9,9,-10,5,2,-9,3,6,7,-6,-10,-7,2,-3,-5,1,3,3,-4,1,8,-5,-9,-6,3,-1,7,-3,3,5,2,3,-5,-9,5,-5,1,-4,2,-9,6,-5,9,-1,3,2,3,3,4,-8,-1,3,-2,-4,-9,-9,-4,7,4,6,7,5,5,-9,-9,7,-2,5,9,10,4,-2,-4,2,10,-5,5,-8,-9,9,-8,9,-7,3,6,4,5,-10,9,-8,9,-8,5,-7,5,-4,2,-10,-10,7,-10,-7,8,-3,9,-8,7,5,1,8,-5,8,6,8,-3,-3,5,8,-9,-2,4,-7,5,-5,-1,4,-5,-5,10,-6,-8,6,1,7,-8,-8,-1,5,6,-4,-3,3,9,-9,-1,2,6,-3,3,-6,-10,-3,-9,7,-8,-2,-7,7,5,5,-10,5,4,-4,-9,7,-7,10,-9,-3,8,-8,-10,-3,2,1,4,10,6,-6,-4,-4,-3,7,1,-9,-5,6,-1,-4,-6,2,3,-9,-6,3,7,-1,2,-2,-9,-2,5,4,6,6,-3,3,2,4,-6,-8,-4,5,6,-9,-8,1,-10,9,1,9,6,9,-3,-6,1,5,-2,3,8,4,4,9,-2,-1,4,8,-1,7,-1,-6,8,10,-2,9,5,-3,-3,-5,9,-8,8,-2,-3,5,-2,8,2,2,-1,1,-8,-4,-7,6,7,-10,9,3,2,10,9,-6,6,-3,10,-2,10,-9,-7,4,8,8,-7,3,-9,5,-1,-8,-8,-5,-5,-7,4,-2,3,-6,4,-2,7,2,8,-3,-8,-5,2,-5,6,-3,-9,1,3,-7,-3,9,2,-5,7,-9,-1,-1,4,-1,9,-3,1,2,-3,-2,-8,4,2,-10,9,6,-4,4,-3,2,-1,10,-1,7,-3,-8,-1,1,-4,-2,10,5,-5,4,4,-9,1,8,-4,-5,5,8,-8,9,9,8,-1,3,-2,1,-3,2,10,7,4,-10,5,-4,6,6,-5,3,7,-2,-3,6,5,-1,9,-10,-9,-1,10,-7,9,4,-8,-1,-4,-6,8,-4,-2,-10,4,4,-2,-8,-2,-3,-10,8,3,-5,-4,4,4,9,-3,-9,-10,-10,9,7,5,-6,-6,-5,6,5,-4,4,-7,8,-1,-8,-1,5,8,-3,3,-2,-6,7,-8,1,-1,1,-9,9,5,3,8,6,-10,-3,-10,2,-1,-7,-3,-2,-5,-4,4,-8,-3,-3,-9,-10,-9,3,-7,5,-6,-8,1,3,5,-2,-3,5,1,10,8,10,5,9,8,2,4,-3,10,-1,-3,3,3,-3,-10,6,-3,7,2,9,-8,6,-1,-7,4,7,10,3,-9,-10,9,9,6,7,-4,10,7,5,4,10,-9,5,-8,5,-7,8,-2,-6,-5,-8,1,-10,-5,-6,-7,7,5,5,4,-3,-6,-5,-10,-7,-5,-5,-3,5,-1,7,9,-4,-9,8,-1,-4,-1,-5,1,-5,9,3,4,9,8,3,-1,-2,10,-4,8,-9,-7,10,-8,-4,-5,-8,2,-6,5,-8,10,1,-7,-2,2,-5,-6,9,-2,-1,-2,9,8,6,7,-4,-3,7,-9,-6,8,4,-10,10,-7,-10,9,3,-5,5,-3,8,-5,8,4,8,9,8,6,1,8,-2,-9,8,-6,-7,-3,6,10,3,10,-7,-3,8,4,3,-9,1,-4,5,4,-10,4,7,2,9,-3,-10,-3,8], dtype = "int64")#candidate|5327|(720,)|const|int64
call_5326 = relay.TupleGetItem(func_3598_call(relay.reshape(const_5327.astype('int64'), [15, 4, 12]), relay.reshape(const_5327.astype('int64'), [15, 4, 12]), ), 1)
call_5328 = relay.TupleGetItem(func_3601_call(relay.reshape(const_5327.astype('int64'), [15, 4, 12]), relay.reshape(const_5327.astype('int64'), [15, 4, 12]), ), 1)
func_1918_call = mod.get_global_var('func_1918')
func_1921_call = mutated_mod.get_global_var('func_1921')
var_5345 = relay.var("var_5345", dtype = "float32", shape = (256,))#candidate|5345|(256,)|var|float32
call_5344 = relay.TupleGetItem(func_1918_call(relay.reshape(var_5345.astype('float32'), [16, 16])), 1)
call_5346 = relay.TupleGetItem(func_1921_call(relay.reshape(var_5345.astype('float32'), [16, 16])), 1)
output = relay.Tuple([call_5321,call_5326,const_5327,call_5344,var_5345,])
output2 = relay.Tuple([call_5322,call_5328,const_5327,call_5346,var_5345,])
func_5356 = relay.Function([var_5345,], output)
mod['func_5356'] = func_5356
mod = relay.transform.InferType()(mod)
mutated_mod['func_5356'] = func_5356
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5357 = relay.var("var_5357", dtype = "float32", shape = (256,))#candidate|5357|(256,)|var|float32
func_5356_call = mutated_mod.get_global_var('func_5356')
call_5358 = func_5356_call(var_5357)
output = call_5358
func_5359 = relay.Function([var_5357], output)
mutated_mod['func_5359'] = func_5359
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4850_call = mod.get_global_var('func_4850')
func_4851_call = mutated_mod.get_global_var('func_4851')
call_5370 = relay.TupleGetItem(func_4850_call(), 1)
call_5371 = relay.TupleGetItem(func_4851_call(), 1)
func_1244_call = mod.get_global_var('func_1244')
func_1246_call = mutated_mod.get_global_var('func_1246')
var_5384 = relay.var("var_5384", dtype = "bool", shape = (160,))#candidate|5384|(160,)|var|bool
call_5383 = relay.TupleGetItem(func_1244_call(relay.reshape(var_5384.astype('bool'), [4, 10, 4])), 0)
call_5385 = relay.TupleGetItem(func_1246_call(relay.reshape(var_5384.astype('bool'), [4, 10, 4])), 0)
func_4850_call = mod.get_global_var('func_4850')
func_4851_call = mutated_mod.get_global_var('func_4851')
call_5389 = relay.TupleGetItem(func_4850_call(), 1)
call_5390 = relay.TupleGetItem(func_4851_call(), 1)
uop_5395 = relay.log(call_5383.astype('float64')) # shape=(4, 10, 4)
uop_5397 = relay.log(call_5385.astype('float64')) # shape=(4, 10, 4)
var_5398 = relay.var("var_5398", dtype = "float64", shape = (4, 10, 4))#candidate|5398|(4, 10, 4)|var|float64
bop_5399 = relay.less_equal(uop_5395.astype('bool'), relay.reshape(var_5398.astype('bool'), relay.shape_of(uop_5395))) # shape=(4, 10, 4)
bop_5402 = relay.less_equal(uop_5397.astype('bool'), relay.reshape(var_5398.astype('bool'), relay.shape_of(uop_5397))) # shape=(4, 10, 4)
func_4462_call = mod.get_global_var('func_4462')
func_4464_call = mutated_mod.get_global_var('func_4464')
var_5407 = relay.var("var_5407", dtype = "float32", shape = (1287,))#candidate|5407|(1287,)|var|float32
call_5406 = relay.TupleGetItem(func_4462_call(relay.reshape(var_5407.astype('float32'), [1287,])), 3)
call_5408 = relay.TupleGetItem(func_4464_call(relay.reshape(var_5407.astype('float32'), [1287,])), 3)
output = relay.Tuple([call_5370,var_5384,call_5389,bop_5399,call_5406,var_5407,])
output2 = relay.Tuple([call_5371,var_5384,call_5390,bop_5402,call_5408,var_5407,])
func_5411 = relay.Function([var_5384,var_5398,var_5407,], output)
mod['func_5411'] = func_5411
mod = relay.transform.InferType()(mod)
mutated_mod['func_5411'] = func_5411
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5411_call = mutated_mod.get_global_var('func_5411')
var_5413 = relay.var("var_5413", dtype = "bool", shape = (160,))#candidate|5413|(160,)|var|bool
var_5414 = relay.var("var_5414", dtype = "float64", shape = (4, 10, 4))#candidate|5414|(4, 10, 4)|var|float64
var_5415 = relay.var("var_5415", dtype = "float32", shape = (1287,))#candidate|5415|(1287,)|var|float32
call_5412 = func_5411_call(var_5413,var_5414,var_5415,)
output = call_5412
func_5416 = relay.Function([var_5413,var_5414,var_5415,], output)
mutated_mod['func_5416'] = func_5416
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_5428 = relay.TupleGetItem(func_2707_call(), 0)
call_5429 = relay.TupleGetItem(func_2708_call(), 0)
output = relay.Tuple([call_5428,])
output2 = relay.Tuple([call_5429,])
func_5432 = relay.Function([], output)
mod['func_5432'] = func_5432
mod = relay.transform.InferType()(mod)
mutated_mod['func_5432'] = func_5432
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5432_call = mutated_mod.get_global_var('func_5432')
call_5433 = func_5432_call()
output = call_5433
func_5434 = relay.Function([], output)
mutated_mod['func_5434'] = func_5434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3182_call = mod.get_global_var('func_3182')
func_3184_call = mutated_mod.get_global_var('func_3184')
call_5438 = relay.TupleGetItem(func_3182_call(), 0)
call_5439 = relay.TupleGetItem(func_3184_call(), 0)
output = relay.Tuple([call_5438,])
output2 = relay.Tuple([call_5439,])
func_5444 = relay.Function([], output)
mod['func_5444'] = func_5444
mod = relay.transform.InferType()(mod)
mutated_mod['func_5444'] = func_5444
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5444_call = mutated_mod.get_global_var('func_5444')
call_5445 = func_5444_call()
output = call_5445
func_5446 = relay.Function([], output)
mutated_mod['func_5446'] = func_5446
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2757_call = mod.get_global_var('func_2757')
func_2758_call = mutated_mod.get_global_var('func_2758')
call_5449 = relay.TupleGetItem(func_2757_call(), 0)
call_5450 = relay.TupleGetItem(func_2758_call(), 0)
func_2383_call = mod.get_global_var('func_2383')
func_2387_call = mutated_mod.get_global_var('func_2387')
var_5455 = relay.var("var_5455", dtype = "int32", shape = (1764,))#candidate|5455|(1764,)|var|int32
call_5454 = relay.TupleGetItem(func_2383_call(relay.reshape(var_5455.astype('int32'), [9, 14, 14]), relay.reshape(var_5455.astype('bool'), [9, 14, 14]), ), 0)
call_5456 = relay.TupleGetItem(func_2387_call(relay.reshape(var_5455.astype('int32'), [9, 14, 14]), relay.reshape(var_5455.astype('bool'), [9, 14, 14]), ), 0)
output = relay.Tuple([call_5449,call_5454,var_5455,])
output2 = relay.Tuple([call_5450,call_5456,var_5455,])
func_5464 = relay.Function([var_5455,], output)
mod['func_5464'] = func_5464
mod = relay.transform.InferType()(mod)
var_5465 = relay.var("var_5465", dtype = "int32", shape = (1764,))#candidate|5465|(1764,)|var|int32
output = func_5464(var_5465)
func_5466 = relay.Function([var_5465], output)
mutated_mod['func_5466'] = func_5466
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3008_call = mod.get_global_var('func_3008')
func_3009_call = mutated_mod.get_global_var('func_3009')
call_5483 = relay.TupleGetItem(func_3008_call(), 0)
call_5484 = relay.TupleGetItem(func_3009_call(), 0)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_5498 = relay.TupleGetItem(func_2707_call(), 0)
call_5499 = relay.TupleGetItem(func_2708_call(), 0)
output = relay.Tuple([call_5483,call_5498,])
output2 = relay.Tuple([call_5484,call_5499,])
func_5514 = relay.Function([], output)
mod['func_5514'] = func_5514
mod = relay.transform.InferType()(mod)
output = func_5514()
func_5515 = relay.Function([], output)
mutated_mod['func_5515'] = func_5515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4041_call = mod.get_global_var('func_4041')
func_4042_call = mutated_mod.get_global_var('func_4042')
call_5518 = relay.TupleGetItem(func_4041_call(), 0)
call_5519 = relay.TupleGetItem(func_4042_call(), 0)
output = relay.Tuple([call_5518,])
output2 = relay.Tuple([call_5519,])
func_5523 = relay.Function([], output)
mod['func_5523'] = func_5523
mod = relay.transform.InferType()(mod)
mutated_mod['func_5523'] = func_5523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5523_call = mutated_mod.get_global_var('func_5523')
call_5524 = func_5523_call()
output = call_5524
func_5525 = relay.Function([], output)
mutated_mod['func_5525'] = func_5525
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5544 = relay.const(-8, dtype = "uint32")#candidate|5544|()|const|uint32
var_5545 = relay.var("var_5545", dtype = "uint32", shape = (14, 10, 15))#candidate|5545|(14, 10, 15)|var|uint32
bop_5546 = relay.right_shift(const_5544.astype('uint32'), var_5545.astype('uint32')) # shape=(14, 10, 15)
output = relay.Tuple([bop_5546,])
output2 = relay.Tuple([bop_5546,])
func_5554 = relay.Function([var_5545,], output)
mod['func_5554'] = func_5554
mod = relay.transform.InferType()(mod)
var_5555 = relay.var("var_5555", dtype = "uint32", shape = (14, 10, 15))#candidate|5555|(14, 10, 15)|var|uint32
output = func_5554(var_5555)
func_5556 = relay.Function([var_5555], output)
mutated_mod['func_5556'] = func_5556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5568 = relay.var("var_5568", dtype = "float64", shape = (9, 8, 8))#candidate|5568|(9, 8, 8)|var|float64
const_5569 = relay.const([[[-1.180381,5.089711,4.106984,8.948163,-9.700567,-4.052155,-8.320453,4.089708],[5.340296,-2.911594,0.268712,3.880771,6.957334,-5.869369,-0.262609,9.940934],[-5.017816,-8.875057,3.917976,0.082413,1.275566,-2.548856,-4.602259,-8.962534],[-7.685937,7.427381,-6.641961,1.552686,-9.854445,-6.875629,3.571745,-7.597052],[-9.416005,8.755054,-0.845071,-3.104279,-7.315119,-0.928229,-7.690278,9.432241],[8.745289,-3.281053,8.845686,3.597684,4.626372,-9.725997,7.130335,-4.626696],[1.668268,-3.706496,-6.648396,-5.944000,3.010450,6.971862,9.757815,-7.683602],[-5.023759,-4.483054,-6.284140,4.818929,0.685379,-7.252275,-1.959548,-7.283920]],[[-2.637514,-2.127976,3.407185,-5.983510,0.087881,-6.737272,-5.722515,7.964048],[-9.138518,-7.853204,-8.788237,-6.704734,-3.514029,-6.794110,-2.663680,-4.650971],[2.883039,5.843309,7.388884,3.303011,-0.368869,5.034046,-4.656324,6.130214],[-8.913453,2.438184,5.270961,-5.458112,-4.055949,4.056680,-4.087062,-2.747059],[-3.842883,-5.448299,6.503022,-8.006501,-0.721035,-3.434550,-1.206901,8.218962],[0.874090,7.951139,-2.331658,-6.267080,8.515600,0.017061,-7.260304,2.109692],[-3.437780,-7.267198,-4.265447,9.211767,1.211842,3.922195,2.428900,-3.008921],[-5.063880,1.585041,-4.286130,8.406397,7.445243,4.591916,-5.568828,-5.892677]],[[-9.162019,-5.827703,7.935312,9.849203,7.976134,7.751334,7.741372,-4.382719],[5.293185,6.449276,7.937583,9.090668,4.306708,-0.629119,-1.860134,-3.351482],[-6.481773,7.612793,-1.794207,-9.566832,3.762112,-3.545110,2.633228,-2.678153],[8.277390,-2.285229,0.591014,8.771311,-8.598233,-8.836528,6.380417,-2.674493],[-0.699557,1.940168,-0.459339,-6.526683,7.308543,6.027276,2.816359,-0.378143],[0.378363,-3.193089,-4.923847,3.725399,8.696089,2.687995,4.437431,-4.332183],[8.009558,-7.115773,6.376883,-8.236937,-1.259287,-3.930691,8.179696,-0.676869],[1.393210,8.342969,-8.652365,6.335639,9.599557,-7.585799,-8.760521,-5.874811]],[[4.513333,7.330040,3.944110,8.246826,0.911240,-9.738131,-9.269757,0.169243],[7.603362,-7.318152,-6.542167,0.551129,-4.397707,-8.417388,9.834280,0.099890],[7.761605,1.649582,-0.594292,-9.774647,-4.095984,-7.029718,5.040976,2.579128],[7.018348,3.580751,9.028263,7.340021,-4.831578,-6.896695,-4.837998,-8.837483],[-0.310576,-7.523154,0.523649,4.578544,6.577883,-4.431952,9.166082,5.874897],[2.519113,-7.347498,-2.749811,7.372325,4.213718,-1.331959,7.498983,-2.873477],[-2.937303,-6.915761,4.009222,-2.651114,0.078660,-4.039230,-7.188578,2.758431],[-8.279574,-9.598457,2.194331,4.999010,0.277394,-1.421778,3.397945,-0.852481]],[[-6.206876,7.877516,-7.112536,-4.230922,-4.269816,1.390246,5.225411,9.813948],[-7.405491,-2.827166,7.761331,4.039296,7.909272,9.228453,-9.929341,-5.064337],[-6.522860,-7.613465,2.401542,-2.000006,2.680988,-3.113367,2.020930,-5.172777],[7.602303,2.835865,8.791999,5.468722,5.727563,3.413184,0.525151,-1.603019],[4.122205,-0.978184,3.779566,-8.804421,-1.142594,5.051774,-2.585841,-3.610944],[-1.414459,-4.424049,-5.141540,-8.147345,-0.894200,2.690607,-9.898121,6.780760],[-1.603617,-0.433958,5.065875,7.909226,-1.906566,2.045505,-6.807571,-6.126064],[5.913001,-6.960082,0.161886,7.707813,-8.732356,2.372792,-0.908716,-3.687909]],[[-3.090043,7.951529,-3.654543,-4.072346,5.963786,2.130350,9.230787,8.126201],[8.397874,-3.849072,-5.213000,-6.291483,-0.762755,6.805271,9.105156,9.513072],[2.542451,1.229005,9.477891,-6.952474,6.658732,5.151245,3.024887,5.532612],[-6.067608,0.344296,-9.380366,-1.998854,5.408019,4.018360,9.156859,2.215231],[8.270259,-2.456706,-1.766802,-8.321179,3.139073,-6.876418,-6.917033,2.607185],[6.170808,0.819416,-1.008389,-7.950575,-3.871720,-7.963784,-0.938842,-0.018945],[-3.971988,9.718871,3.422663,-9.335239,5.984571,2.041550,4.140195,-6.047255],[-2.793657,-2.180495,4.404768,-2.446016,-4.077298,-1.080876,-7.260181,5.362314]],[[5.971282,1.996769,-8.613645,8.419841,-9.429759,8.054477,7.086673,-8.250424],[1.989063,4.910128,9.112357,-1.791356,-7.211301,0.506816,6.185088,-4.050225],[6.562117,6.957575,7.086793,0.788786,-7.014254,4.464023,-2.405596,7.410398],[-4.748277,3.862433,-0.558031,-5.203893,-8.884868,-4.537629,-7.540366,-2.904979],[-5.393917,5.393439,6.866846,-4.899228,5.542413,4.271982,8.532427,7.892548],[0.477488,-9.746400,3.190768,7.183666,-7.803293,2.074885,-0.532646,-6.183017],[-3.023546,-5.744598,-1.755004,4.378362,1.155551,0.801361,9.236992,-0.339273],[4.399882,-9.336196,9.738535,-4.594704,3.223629,-1.266910,-8.214111,4.306200]],[[-8.795985,-4.370119,-0.632366,-5.439946,-5.810341,-8.045783,7.497393,2.609729],[8.584840,2.985818,6.771795,-7.923320,1.690592,-6.377545,9.157179,-5.318348],[8.100300,-2.167842,-8.318168,6.665308,0.363093,-0.099155,5.692501,1.727166],[-1.558643,6.810522,8.313924,-3.128759,6.485639,-8.462576,-1.407959,-5.433731],[1.539312,0.200963,-4.187475,-5.832977,9.842035,-9.225734,-9.749321,8.132367],[-3.592738,-0.843850,3.964268,-7.744812,8.375825,9.096265,-6.573480,-9.094805],[0.339886,8.701429,-3.861411,1.134738,0.253687,-8.066721,3.253080,-4.908439],[1.842762,6.344694,0.690004,9.692722,-5.499173,8.680362,-5.826117,-5.126639]],[[7.993714,8.155572,-3.210425,9.889430,-4.973635,0.243635,-8.487468,4.431271],[7.137142,-7.817707,8.199680,8.040256,-6.382251,-3.538571,-7.005593,-0.295498],[-8.845974,-9.378763,-7.342379,-6.996645,2.939122,2.949158,6.993214,3.171319],[2.189238,-5.569789,6.181425,3.293149,-0.834606,5.751951,-4.094908,-1.583233],[5.135672,7.559643,2.405701,3.535607,-0.900708,-9.483805,4.646271,-8.942110],[2.374622,5.435654,-8.431066,-5.031198,-8.399335,-9.344898,-5.485942,-5.515891],[7.227898,8.898594,8.783779,7.670016,1.703502,-3.104686,-3.022839,-0.256469],[8.571918,-6.444352,-0.565181,-9.085053,-9.865034,5.527028,4.960612,5.938009]]], dtype = "float64")#candidate|5569|(9, 8, 8)|const|float64
bop_5570 = relay.divide(var_5568.astype('float64'), relay.reshape(const_5569.astype('float64'), relay.shape_of(var_5568))) # shape=(9, 8, 8)
func_4571_call = mod.get_global_var('func_4571')
func_4572_call = mutated_mod.get_global_var('func_4572')
call_5573 = func_4571_call()
call_5574 = func_4571_call()
output = relay.Tuple([bop_5570,call_5573,])
output2 = relay.Tuple([bop_5570,call_5574,])
func_5582 = relay.Function([var_5568,], output)
mod['func_5582'] = func_5582
mod = relay.transform.InferType()(mod)
mutated_mod['func_5582'] = func_5582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5583 = relay.var("var_5583", dtype = "float64", shape = (9, 8, 8))#candidate|5583|(9, 8, 8)|var|float64
func_5582_call = mutated_mod.get_global_var('func_5582')
call_5584 = func_5582_call(var_5583)
output = call_5584
func_5585 = relay.Function([var_5583], output)
mutated_mod['func_5585'] = func_5585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mod.get_global_var('func_3657')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_5618 = func_3657_call()
call_5619 = func_3657_call()
func_4883_call = mod.get_global_var('func_4883')
func_4885_call = mutated_mod.get_global_var('func_4885')
const_5624 = relay.const([[-4.282201,8.062069,7.598124,-7.582170,8.583673,-6.324771,4.111593,9.167540,3.367789,8.648350,5.616088,-6.875170,7.220775,0.742923,1.422969,8.692736,5.551721,-8.529110],[-6.117539,8.551749,0.436535,-0.928226,9.571792,2.063859,3.683098,4.329609,-0.905638,5.680590,-1.384711,-5.009011,-1.544866,2.463277,-8.610874,-8.552717,-3.904960,-1.630346],[-2.947120,-2.182897,-5.715977,-3.490063,-5.262895,-7.976843,4.880632,3.946908,-4.383228,-7.599062,9.413601,-6.167275,9.767555,-2.979083,-4.348790,0.490874,6.777138,0.790536],[0.169304,1.408310,4.973090,-3.099158,5.443394,-8.799559,6.209704,-3.983578,-0.383554,-4.167325,-2.143537,0.031727,4.851416,9.079655,-2.864728,-6.074496,-9.212176,-5.599326],[1.528471,-0.570553,-8.536290,6.641679,4.071312,-4.589033,-2.297467,9.040948,4.961690,-9.210502,4.733896,-2.501037,-8.625081,9.871769,-6.587675,-2.987108,5.486865,4.535180],[-6.372787,5.736827,-5.379064,4.274286,8.925437,7.218742,-3.808513,0.435328,4.404034,8.174225,3.352802,-8.608046,-0.638939,1.712549,-1.973434,9.084775,1.771329,-3.566425],[-7.459121,2.123594,7.561017,9.837587,-6.591302,0.290002,-5.433766,6.008756,-1.688618,8.866574,-4.445639,-8.101911,1.886825,9.469915,-7.731960,9.964452,-2.792274,-0.639125],[8.822536,9.904463,5.714668,-3.983584,1.384527,9.145072,9.193289,8.583497,2.792219,-2.257324,8.317273,-1.748081,-9.325027,7.077183,-8.466904,-9.935644,1.122544,1.323442],[-3.635787,-8.842497,6.970722,6.262332,-4.647966,-5.305211,-6.673452,8.562695,5.226315,-1.137751,6.056049,-8.467676,3.408742,6.278145,-2.708944,6.831966,-0.215268,-9.288270],[5.754531,9.444116,-6.877012,-7.404857,-4.479750,5.586825,6.031023,9.984325,7.106890,-4.118264,-2.536992,8.505147,-1.302505,-4.953906,-5.141766,-6.345765,-3.346297,8.074445],[3.707763,-5.730811,9.559913,7.166625,4.310517,4.205925,-8.967025,9.148395,-2.251060,7.857429,-6.154848,9.396737,4.556695,-9.898033,2.817579,-3.189149,2.492409,2.199047],[-0.999805,3.886477,8.387406,-3.988676,-8.916392,1.720120,-1.680835,4.989585,-5.117508,1.850880,-9.201569,1.580665,-1.175703,0.224792,-8.898758,-1.213393,0.953667,-1.359238],[5.914562,3.458503,3.131086,-1.501765,2.701431,-3.890253,-4.719395,8.193668,2.041041,6.707459,0.587783,-8.865425,6.262883,-1.533445,-1.044756,7.881538,-6.201653,-4.037262],[2.009816,7.770876,-2.064673,-5.905031,-8.781932,-4.705285,6.071114,1.103884,-4.643360,-2.588749,-7.170186,-4.074925,-2.195011,-4.077766,-6.006872,-1.902987,4.691059,9.382721],[0.925016,1.979610,6.875036,3.855466,2.713862,3.238869,-5.357315,1.251502,5.702370,-6.193564,5.783388,-2.723521,5.772056,-0.361139,-9.790480,-8.954673,7.746461,2.466061],[5.549031,8.412688,0.989338,-5.139290,0.126667,3.813287,-8.989577,-6.848336,-5.359954,8.406183,9.894425,7.427883,9.200050,7.430598,6.993057,-0.992278,5.895857,6.304203],[-7.322442,4.018146,6.205491,-1.141580,-1.976830,3.769845,0.894490,-9.548623,-1.882527,2.646408,6.950771,3.100661,1.718774,-1.430527,7.469789,-8.158182,1.265447,5.720478],[-1.048727,-5.179481,-7.218345,5.609411,0.991890,-6.252101,0.424757,0.534625,-1.766015,6.763697,-9.655105,1.546963,4.420314,-3.593196,8.837487,8.964982,4.181807,-8.503796]], dtype = "float32")#candidate|5624|(18, 18)|const|float32
call_5623 = relay.TupleGetItem(func_4883_call(relay.reshape(const_5624.astype('float32'), [12, 9, 3])), 1)
call_5625 = relay.TupleGetItem(func_4885_call(relay.reshape(const_5624.astype('float32'), [12, 9, 3])), 1)
output = relay.Tuple([call_5618,call_5623,const_5624,])
output2 = relay.Tuple([call_5619,call_5625,const_5624,])
func_5628 = relay.Function([], output)
mod['func_5628'] = func_5628
mod = relay.transform.InferType()(mod)
mutated_mod['func_5628'] = func_5628
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5628_call = mutated_mod.get_global_var('func_5628')
call_5629 = func_5628_call()
output = call_5629
func_5630 = relay.Function([], output)
mutated_mod['func_5630'] = func_5630
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mod.get_global_var('func_3036')
func_3038_call = mutated_mod.get_global_var('func_3038')
call_5710 = relay.TupleGetItem(func_3036_call(), 0)
call_5711 = relay.TupleGetItem(func_3038_call(), 0)
output = relay.Tuple([call_5710,])
output2 = relay.Tuple([call_5711,])
func_5718 = relay.Function([], output)
mod['func_5718'] = func_5718
mod = relay.transform.InferType()(mod)
mutated_mod['func_5718'] = func_5718
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5718_call = mutated_mod.get_global_var('func_5718')
call_5719 = func_5718_call()
output = call_5719
func_5720 = relay.Function([], output)
mutated_mod['func_5720'] = func_5720
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5767 = relay.const([[[5.956589,-1.340250,6.078816,-5.772178,5.662239,9.956059,-1.728397,-4.674375],[-5.086073,-9.722522,2.635214,-0.771366,5.484361,7.490016,-8.294482,-4.712890]],[[2.101973,4.974214,-3.960980,9.726698,3.638106,0.080906,-8.139290,-8.941118],[-3.540526,1.003934,9.218230,2.492341,-9.282232,-8.748030,9.623531,-1.604372]]], dtype = "float64")#candidate|5767|(2, 2, 8)|const|float64
var_5768 = relay.var("var_5768", dtype = "float64", shape = (2, 2, 8))#candidate|5768|(2, 2, 8)|var|float64
bop_5769 = relay.floor_mod(const_5767.astype('float64'), relay.reshape(var_5768.astype('float64'), relay.shape_of(const_5767))) # shape=(2, 2, 8)
func_4964_call = mod.get_global_var('func_4964')
func_4967_call = mutated_mod.get_global_var('func_4967')
const_5775 = relay.const([2,2,-1,-3,9,-2,3,-3,3,-9,-5,-9,3,2,2,5,-7,3,9,2,5,4,-7,6,6,10,-8,-2,4,2,-9,1,7,5,9,4,9,-6,3,-8,-1,-2,9,2,10,-1,-5,9,6,6,1,-3,-7,9,-3,1,-5,-3,-7,-10,-10,-9,3,5,-2,-7,2,-3,9,1,9,3,6,-10,10,-1,-1,5,10,3,10,3,10,-3,10,-8,-7,-4,-7,-6,-4,-9,-9,7,2,-1,10,8,-4,8,4,-4,8,-4,2,-4,-6,1,5,7,10,2,6,9,-1,-3,-2,8,4,-5,-9,-5,1,-4,-6,6,1,-5,9,6,-10,7,-5,-1,4,-7,4,1,10,4,8,-9,9,7,-7,-8,-3,8,-7,-5,3,-5,4,4,1,9,7,10,3,4,2,8,6,-1,2,-5,10,6,7,-9,10,-10,7,3,-9,1,-10,5,2,10,-4,1,-6,-9,6,3,-5,3,5,3,4,3,2,9,-4,9,3,-1,6,-1,-7,8,-9,7,8,6,-3,-7,7,-8,-4,-10,-7,-5,-2,-5,5,4,-6,-6,8,-8,2,-7,-1,1,-1,2,3,-1,6,-5,-1,2,7,-4,3,9,7,-6,8,4,10,9,1,-8,8,-7,2,8,1,-6,6,-2,9,1,-7,9,9,3,-10,9,6,-10,-9,-8,2,7,-9,-1,6,8,-7,3,6,7,6,-5,4,-9,-4,3,2,4,-8,-10,6,-10,-8,10,6,2,-3,-4,-4,2,-3,6,5,-7,-4,7,-6,5,-9,-7,-2,9,-8,6,10,-2,3,6,-7,-10,1,-2,-6,10,4,2,-10,3,6,2,5,8,-1,5,9,-8,5,-7,9,-8,-7,-10,1,-7,-3,4,-2,-8,-7,8,8,-6,7,6,3,10,-6,8,-4,-6,-1,-6,3,5,-7,-7,10,10,9,7,1,3,-8,5,-4,-10,1,10,-10,-5,-8,1,-8,-9,-8,10,-2,7,1,-3,-2,10,8,7,-2,6,5,-2,-10,-9,-5,-10,-9,10,-8,5,-7,3,-4,5,3,10,9,-10,-10,7,-9,4,-1,-9,7,-9,8,10,-2,-2,6,-2,3,-2,-2,-2,-6,-8,1,8,-1,2,8,-3,-9,-7,8,-8,1,8,10,4,-6,-5,-10,-5,-1,-10,3,1,-2,-6,8,-3,-5,2,-1,-3,1,-4,-2,-1,7,2,-7,-3,1,-1,-3,-8,7,4,-8,-3,-5,-9,-5,10,4,-6,-8,1,-6,8,9,8,10,6,-8,-9,7,2,10,5,-7,-6,8,4,-4,-5,-10,10,4,-10,-4,-9,-6,-2,6,-2,-10,8,8,4,-6,-4,2,8,10,10,6,-5,-4,-1,-6,-3,-1,-4,5,-10,7,-1,8,4,-7,3,6,8], dtype = "int32")#candidate|5775|(540,)|const|int32
call_5774 = relay.TupleGetItem(func_4964_call(relay.reshape(const_5775.astype('int32'), [3, 15, 12]), relay.reshape(const_5775.astype('int32'), [3, 15, 12]), ), 0)
call_5776 = relay.TupleGetItem(func_4967_call(relay.reshape(const_5775.astype('int32'), [3, 15, 12]), relay.reshape(const_5775.astype('int32'), [3, 15, 12]), ), 0)
output = relay.Tuple([bop_5769,call_5774,const_5775,])
output2 = relay.Tuple([bop_5769,call_5776,const_5775,])
func_5777 = relay.Function([var_5768,], output)
mod['func_5777'] = func_5777
mod = relay.transform.InferType()(mod)
var_5778 = relay.var("var_5778", dtype = "float64", shape = (2, 2, 8))#candidate|5778|(2, 2, 8)|var|float64
output = func_5777(var_5778)
func_5779 = relay.Function([var_5778], output)
mutated_mod['func_5779'] = func_5779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5783 = relay.var("var_5783", dtype = "float64", shape = (11, 3, 16))#candidate|5783|(11, 3, 16)|var|float64
uop_5784 = relay.asin(var_5783.astype('float64')) # shape=(11, 3, 16)
bop_5792 = relay.greater(var_5783.astype('bool'), relay.reshape(uop_5784.astype('bool'), relay.shape_of(var_5783))) # shape=(11, 3, 16)
func_3929_call = mod.get_global_var('func_3929')
func_3930_call = mutated_mod.get_global_var('func_3930')
call_5812 = func_3929_call()
call_5813 = func_3929_call()
func_3484_call = mod.get_global_var('func_3484')
func_3486_call = mutated_mod.get_global_var('func_3486')
call_5814 = relay.TupleGetItem(func_3484_call(), 0)
call_5815 = relay.TupleGetItem(func_3486_call(), 0)
bop_5817 = relay.floor_divide(uop_5784.astype('float32'), relay.reshape(bop_5792.astype('float32'), relay.shape_of(uop_5784))) # shape=(11, 3, 16)
func_4705_call = mod.get_global_var('func_4705')
func_4708_call = mutated_mod.get_global_var('func_4708')
var_5821 = relay.var("var_5821", dtype = "float32", shape = (256,))#candidate|5821|(256,)|var|float32
call_5820 = relay.TupleGetItem(func_4705_call(relay.reshape(var_5821.astype('float32'), [256,])), 2)
call_5822 = relay.TupleGetItem(func_4708_call(relay.reshape(var_5821.astype('float32'), [256,])), 2)
func_5554_call = mod.get_global_var('func_5554')
func_5556_call = mutated_mod.get_global_var('func_5556')
const_5825 = relay.const([[3],[7],[4],[-8],[-4],[-5],[-6],[-1],[9],[-7],[-5],[3],[-10],[9],[-10],[-9],[8],[7],[-1],[3],[7],[-6],[3],[8],[-3],[3],[3],[-10],[-5],[-10],[-1],[-8],[-6],[10],[-9],[3],[-5],[10],[6],[-1],[4],[-7],[-10],[-9],[9],[1],[-8],[-10],[5],[4],[-5],[1],[5],[7],[1],[8],[-2],[10],[3],[8],[-1],[-3],[-10],[-3],[-3],[1],[3],[-7],[5],[-10],[3],[-2],[7],[8],[3],[4],[-7],[-1],[10],[-1],[5],[2],[-4],[-8],[4],[-5],[-8],[-4],[9],[4],[10],[-6],[-5],[-3],[4],[-9],[-8],[7],[-1],[-2],[3],[-3],[-4],[-7],[-9],[-5],[-1],[5],[7],[-2],[-1],[-10],[-3],[10],[-1],[8],[-10],[6],[-8],[-7],[6],[-5],[2],[-4],[9],[9],[-8],[-9],[-5],[-2],[3],[-10],[-2],[9],[3],[-8],[-7],[-7],[-4],[-9],[8],[3],[7],[8],[2],[8],[-1],[2],[-9],[3],[6],[-1],[4],[-3],[1],[-9],[10],[-7],[-5],[10],[-7],[5],[-1],[3],[-8],[1],[8],[9],[10],[-2],[4],[1],[5],[-2],[5],[8],[-4],[-1],[-1],[-4],[9],[-5],[7],[-2],[-7],[-9],[-8],[-6],[2],[-3],[-4],[8],[3],[-3],[-2],[-5],[4],[1],[-7],[-2],[7],[-7],[6],[10],[-3],[-3],[-2],[-5],[2],[1],[-6],[-8],[-10],[6],[2],[-2],[-1],[-6],[2],[5],[8],[2],[-10],[-7],[4],[-8],[-8],[-5],[-5],[-6],[8],[8],[8],[-8],[-9],[-8],[10],[-7],[7],[-5],[-3],[5],[9],[-10],[8],[-1],[-5],[-8],[2],[-3],[-9],[-10],[-1],[1],[2],[-10],[1],[8],[3],[6],[5],[10],[4],[-1],[5],[9],[-3],[7],[5],[-3],[-6],[-2],[8],[10],[-8],[-5],[-2],[3],[6],[-6],[7],[7],[4],[5],[3],[-6],[1],[-7],[8],[2],[-4],[8],[-5],[-5],[4],[2],[-7],[-1],[-4],[-10],[-2],[-8],[-4],[2],[2],[5],[3],[3],[-4],[-9],[-10],[-10],[-1],[-9],[5],[3],[-6],[10],[6],[2],[-8],[-6],[-2],[-10],[-9],[-7],[-9],[5],[-5],[-8],[4],[8],[4],[9],[-2],[10],[10],[4],[4],[10],[-1],[2],[1],[-2],[4],[9],[-1],[7],[6],[5],[-9],[-9],[-10],[-10],[-7],[10],[5],[-9],[-3],[-5],[1],[4],[-10],[9],[-1],[4],[-1],[8],[8],[-8],[8],[4],[-3],[-4],[-2],[-1],[2],[6],[8],[-7],[-10],[-8],[6],[2],[4],[10],[9],[-9],[-4],[7],[1],[-10],[-5],[6],[2],[2],[-6],[10],[-6],[9],[-2],[6],[-2],[-2],[-6],[-6],[-8],[10],[3],[-9],[-1],[6],[1],[3],[-10],[-1],[-1],[4],[2],[2],[6],[6],[4],[-7],[4],[-3],[-7],[6],[7],[-9],[-2],[-1],[-9],[-6],[10],[10],[-6],[10],[-4],[9],[3],[5],[-5],[9],[-8],[10],[9],[3],[-4],[-9],[-9],[-10],[5],[6],[-7],[7],[9],[9],[1],[-5],[-6],[-1],[6],[-3],[2],[-7],[-10],[5],[7],[5],[6],[-3],[4],[-8],[-9],[5],[2],[2],[-9],[10],[-8],[-2],[4],[-6],[-9],[-6],[-4],[2],[10],[-2],[5],[-6],[-1],[-4],[-5],[4],[3],[-4],[5],[9],[-2],[1],[-3],[-2],[2],[-4],[1],[-5],[8],[5],[-8],[-7],[-6],[8],[-10],[7],[2],[-7],[-2],[-10],[3],[5],[-3],[6],[-2],[5],[9],[10],[2],[9],[5],[-5],[8],[3],[-1],[6],[6],[7],[2],[1],[4],[5],[-9],[-3],[3],[4],[-9],[-6],[-10],[-7],[-4],[4],[2],[1],[5],[-9],[7],[6],[-9],[6],[10],[1],[-8],[-4],[-9],[-7],[4],[5],[3],[2],[-8],[-8],[-5],[1],[-3],[7],[9],[-1],[-6],[-5],[-8],[8],[-6],[-9],[-8],[8],[10],[-1],[2],[8],[-10],[-9],[2],[6],[-6],[2],[5],[-5],[-4],[-1],[-5],[-10],[-9],[-9],[-4],[-8],[-3],[-5],[-6],[-4],[-4],[-6],[8],[-10],[-8],[-7],[-2],[-8],[-8],[3],[6],[-6],[6],[-6],[4],[3],[-8],[-5],[-2],[9],[7],[-1],[-10],[1],[-5],[-10],[4],[2],[9],[10],[-9],[9],[4],[2],[-10],[6],[-6],[8],[5],[6],[2],[3],[-3],[-5],[4],[-6],[-10],[8],[3],[-2],[4],[2],[-4],[-8],[10],[10],[-9],[7],[7],[-4],[7],[2],[7],[5],[-4],[4],[-6],[8],[9],[-10],[-7],[2],[-3],[-7],[2],[1],[-3],[9],[7],[-1],[3],[-8],[4],[-9],[-1],[3],[-9],[-3],[-3],[-5],[2],[-6],[-1],[7],[9],[8],[3],[-10],[-2],[-9],[8],[-9],[4],[-3],[4],[4],[6],[-3],[5],[6],[7],[-7],[-7],[-7],[-6],[2],[-8],[-4],[4],[-3],[-7],[-8],[-7],[1],[-10],[7],[8],[6],[-10],[6],[9],[3],[8],[-2],[-5],[3],[-2],[-5],[2],[10],[-1],[-9],[-10],[6],[-10],[-6],[-10],[-8],[6],[-3],[5],[-5],[8],[5],[-5],[2],[-1],[-7],[-6],[8],[5],[6],[-5],[-6],[-6],[-6],[-6],[7],[10],[-4],[6],[-3],[6],[7],[2],[9],[3],[7],[-2],[3],[-1],[-9],[7],[-8],[8],[1],[7],[5],[3],[9],[-9],[-7],[4],[2],[-6],[-1],[1],[1],[-6],[4],[3],[1],[9],[-7],[-8],[-2],[-5],[-9],[2],[4],[-4],[4],[-7],[-5],[7],[10],[-7],[2],[-7],[-10],[5],[3],[-10],[10],[4],[9],[-1],[5],[-7],[-2],[10],[-6],[4],[-2],[-9],[7],[-4],[-6],[3],[-8],[10],[-4],[10],[10],[10],[4],[5],[-8],[8],[-2],[-4],[-10],[9],[5],[-2],[8],[-10],[-4],[4],[8],[7],[5],[-1],[-10],[4],[-5],[1],[9],[3],[-4],[8],[-8],[4],[7],[-3],[1],[8],[-1],[10],[-8],[-5],[5],[8],[10],[7],[-6],[-3],[3],[4],[5],[-6],[9],[-6],[-3],[-4],[-1],[1],[9],[-9],[1],[-10],[-2],[1],[2],[5],[5],[8],[7],[6],[10],[-10],[3],[8],[-3],[10],[4],[-10],[4],[-4],[-9],[6],[2],[9],[7],[9],[7],[8],[-1],[1],[-3],[7],[-10],[-8],[10],[-1],[-10],[-4],[10],[-4],[-9],[4],[-2],[-6],[-9],[6],[-8],[3],[-2],[10],[-10],[-3],[-7],[-5],[-10],[-6],[1],[7],[-4],[-6],[-1],[-7],[7],[-5],[-1],[-1],[8],[-3],[10],[-4],[8],[1],[1],[3],[-4],[8],[-3],[-4],[-7],[9],[6],[10],[3],[8],[3],[4],[-1],[-9],[5],[-8],[2],[4],[-1],[8],[-9],[-5],[-9],[10],[-8],[5],[-2],[3],[6],[-8],[5],[-1],[9],[2],[4],[-7],[7],[10],[7],[-7],[-10],[-6],[-5],[-8],[10],[-3],[-1],[2],[10],[2],[-6],[-8],[1],[10],[-10],[2],[-1],[-4],[7],[9],[-9],[2],[7],[-10],[2],[10],[10],[-10],[6],[10],[-8],[5],[1],[6],[-3],[-5],[9],[10],[5],[-4],[3],[4],[4],[4],[-5],[5],[7],[3],[-1],[-7],[-5],[-7],[-4],[-2],[-9],[6],[10],[5],[4],[-3],[6],[-10],[-2],[-2],[-3],[-9],[3],[-3],[-3],[6],[1],[3],[-9],[-5],[-8],[2],[8],[8],[9],[3],[8],[10],[-8],[-10],[10],[-6],[-7],[-2],[7],[-1],[-8],[2],[9],[6],[-7],[9],[2],[9],[-4],[2],[3],[5],[-7],[8],[6],[3],[-4],[-10],[3],[10],[8],[5],[9],[-10],[3],[5],[10],[-7],[6],[-2],[-7],[-6],[10],[-6],[3],[-4],[5],[3],[-5],[5],[6],[5],[-9],[-4],[-10],[-7],[3],[-9],[-1],[-7],[3],[7],[3],[2],[-2],[-6],[-8],[-4],[-3],[-3],[-7],[1],[-6],[-7],[7],[3],[-5],[8],[10],[-6],[6],[1],[-10],[10],[-5],[8],[3],[-6],[-2],[-8],[-6],[9],[-9],[9],[-4],[4],[-6],[-3],[-1],[-2],[7],[-2],[9],[-1],[-10],[-10],[-8],[-8],[-5],[-10],[4],[10],[-8],[6],[7],[8],[10],[-4],[8],[2],[4],[4],[10],[-3],[-1],[-5],[-7],[-4],[-9],[6],[10],[9],[6],[1],[-9],[-3],[4],[7],[1],[10],[-10],[-6],[-1],[2],[3],[-3],[4],[5],[5],[5],[8],[9],[5],[-7],[-5],[-8],[-3],[2],[5],[3],[3],[-2],[-9],[-8],[-2],[8],[-9],[9],[2],[-2],[-4],[-2],[5],[2],[-1],[9],[-10],[3],[-8],[4],[2],[-8],[-1],[-8],[-5],[-10],[9],[8],[7],[3],[5],[-3],[2],[2],[7],[-8],[10],[-1],[-4],[-3],[-9],[10],[6],[-3],[7],[10],[9],[7],[-9],[1],[-7],[-4],[-4],[-7],[4],[-7],[-3],[-3],[6],[2],[2],[-7],[5],[-2],[5],[8],[-2],[-8],[-9],[-5],[4],[-6],[-3],[-6],[4],[2],[9],[-9],[-3],[9],[-4],[-9],[-1],[-3],[1],[3],[-3],[2],[9],[5],[-5],[-1],[8],[1],[3],[-9],[-8],[3],[5],[-10],[-7],[-10],[4],[-6],[-10],[-6],[10],[1],[9],[1],[-1],[9],[1],[9],[-2],[-2],[1],[-9],[6],[8],[8],[4],[3],[-8],[-9],[-6],[-9],[10],[-9],[-8],[7],[7],[-4],[1],[-2],[9],[-2],[10],[8],[10],[4],[8],[1],[7],[-6],[-10],[-5],[-8],[-5],[-2],[-9],[9],[-1],[1],[-4],[9],[-6],[-3],[-4],[6],[5],[2],[5],[10],[3],[9],[10],[5],[6],[5],[6],[-9],[-10],[9],[5],[5],[-3],[10],[8],[-10],[-4],[5],[8],[7],[8],[3],[5],[-6],[4],[-10],[-3],[9],[-1],[6],[10],[10],[-6],[8],[-5],[-7],[9],[6],[-1],[9],[-8],[-6],[-4],[-6],[3],[2],[-7],[-5],[-7],[6],[-10],[-2],[-4],[2],[-1],[-1],[-2],[9],[-2],[-8],[-5],[8],[3],[7],[-8],[10],[6],[6],[-2],[-5],[1],[-1],[5],[-6],[-3],[1],[5],[3],[5],[-7],[-3],[-3],[-3],[-10],[9],[-8],[-3],[3],[9],[6],[6],[-3],[9],[10],[-4],[-8],[-8],[-5],[-10],[-7],[-10],[9],[-4],[-5],[4],[8],[-3],[2],[6],[7],[-2],[6],[-6],[10],[8],[6],[2],[5],[-10],[10],[2],[-5],[-8],[-6],[-2],[6],[-9],[-2],[5],[-10],[-9],[3],[2],[7],[8],[7],[7],[4],[10],[2],[4],[3],[-10],[8],[-9],[10],[-5],[-9],[-3],[-8],[-6],[-1],[-6],[10],[7],[-7],[2],[6],[-9],[1],[3],[5],[-6],[-4],[3],[-10],[-8],[5],[7],[1],[9],[-9],[-9],[5],[7],[7],[-7],[7],[-9],[4],[4],[2],[-6],[7],[2],[9],[7],[-4],[-3],[6],[5],[10],[-6],[-7],[8],[6],[7],[8],[-6],[-9],[3],[2],[8],[-8],[-5],[8],[6],[3],[-5],[-8],[4],[-6],[3],[-6],[-9],[9],[-5],[-3],[7],[1],[-6],[3],[9],[5],[-8],[8],[6],[-5],[-10],[-9],[-6],[-2],[-9],[3],[8],[9],[6],[-5],[8],[8],[2],[10],[-2],[8],[5],[-10],[8],[-5],[8],[-3],[5],[8],[2],[6],[-3],[7],[-2],[5],[3],[-3],[-3],[-1],[-6],[-7],[6],[1],[-10],[1],[-4],[3],[3],[5],[9],[1],[-5],[10],[9],[8],[10],[8],[-3],[-7],[9],[6],[-7],[3],[1],[9],[-9],[-1],[5],[10],[-5],[-7],[-4],[-2],[7],[-2],[9],[2],[-9],[8],[-4],[-7],[7],[5],[1],[6],[-6],[2],[-10],[-10],[4],[-5],[-2],[-9],[-3],[-8],[-5],[-10],[-4],[4],[2],[1],[3],[-9],[8],[1],[-3],[-6],[-5],[-5],[-3],[-5],[-1],[1],[-10],[1],[5],[10],[-7],[-4],[-2],[8],[-3],[-2],[1],[-7],[2],[5],[7],[-9],[2],[-8],[5],[-8],[9],[-7],[9],[8],[-10],[-2],[-8],[5],[1],[5],[9],[4],[5],[-10],[-10],[-3],[2],[-1],[5],[-5],[-10],[6],[-8],[-9],[-3],[8],[8],[3],[3],[-6],[-4],[3],[-10],[9],[4],[10],[2],[1],[7],[10],[2],[-3],[-1],[-6],[2],[7],[-2],[3],[7],[-7],[7],[4],[-1],[1],[4],[-1],[-1],[-7],[-1],[-7],[8],[10],[-8],[-1],[-7],[5],[-4],[-5],[-3],[5],[10],[-4],[-10],[-5],[5],[-5],[-10],[2],[-10],[-3],[1],[-2],[7],[2],[-4],[7],[-2],[-6],[3],[5],[-5],[-2],[9],[-3],[7],[7],[1],[3],[-7],[-10],[-1],[-8],[10],[-9],[-5],[-1],[-9],[5],[7],[7],[3],[-3],[3],[4],[2],[-4],[3],[-10],[-4],[-5],[3],[1],[-1],[10],[-6],[5],[10],[6],[4],[5],[6],[-9],[-9],[-3],[7],[-6],[-8],[-2],[5],[8],[-8],[-3],[-10],[2],[-10],[10],[-6],[6],[-9],[10],[7],[-8],[-5],[5],[-2],[-5],[5],[-9],[-6],[-1],[-7],[2],[-1],[9],[-7],[5],[7],[10],[-4],[3],[-7],[8],[-6],[-9],[7],[-1],[-10],[-8],[-3],[-2],[-9],[6],[-2],[9],[-1],[-4],[1],[-4],[-9],[1],[2],[2],[7],[4],[8],[2],[-5],[-3],[-7],[3],[-5],[8],[-8],[-4],[5],[7],[-9],[1],[9],[-8],[3],[4],[10],[-5],[2],[-5],[-6],[6],[7],[-5],[7],[-2],[-8],[-6],[2],[4],[6],[5],[9],[-3],[9],[-9],[-4],[1],[5],[6],[5],[-10],[-2],[-2],[2],[2],[-5],[-4],[-9],[5],[-6],[5],[9],[1],[-9],[8],[4],[-8],[6],[-3],[-5],[-6],[3],[7],[8],[10],[-6],[4],[-8],[-1],[-10],[4],[7],[-2],[-2],[-9],[1],[-9],[7],[6],[8],[9],[-10],[1],[-6],[8],[9],[1],[4],[9],[10],[4],[5],[-6],[9],[-8],[-8],[3],[8],[8],[6],[1],[6],[3],[9],[7],[-10],[-3],[-6],[7],[-2],[2],[-4],[10],[1],[-7],[3],[-4],[3],[-10],[-9]], dtype = "uint32")#candidate|5825|(2100, 1)|const|uint32
call_5824 = relay.TupleGetItem(func_5554_call(relay.reshape(const_5825.astype('uint32'), [14, 10, 15])), 0)
call_5826 = relay.TupleGetItem(func_5556_call(relay.reshape(const_5825.astype('uint32'), [14, 10, 15])), 0)
var_5836 = relay.var("var_5836", dtype = "bool", shape = (11, 3, 16))#candidate|5836|(11, 3, 16)|var|bool
bop_5837 = relay.right_shift(bop_5792.astype('uint16'), relay.reshape(var_5836.astype('uint16'), relay.shape_of(bop_5792))) # shape=(11, 3, 16)
func_3569_call = mod.get_global_var('func_3569')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_5852 = relay.TupleGetItem(func_3569_call(), 1)
call_5853 = relay.TupleGetItem(func_3571_call(), 1)
output = relay.Tuple([call_5812,call_5814,bop_5817,call_5820,var_5821,call_5824,const_5825,bop_5837,call_5852,])
output2 = relay.Tuple([call_5813,call_5815,bop_5817,call_5822,var_5821,call_5826,const_5825,bop_5837,call_5853,])
func_5856 = relay.Function([var_5783,var_5821,var_5836,], output)
mod['func_5856'] = func_5856
mod = relay.transform.InferType()(mod)
var_5857 = relay.var("var_5857", dtype = "float64", shape = (11, 3, 16))#candidate|5857|(11, 3, 16)|var|float64
var_5858 = relay.var("var_5858", dtype = "float32", shape = (256,))#candidate|5858|(256,)|var|float32
var_5859 = relay.var("var_5859", dtype = "bool", shape = (11, 3, 16))#candidate|5859|(11, 3, 16)|var|bool
output = func_5856(var_5857,var_5858,var_5859,)
func_5860 = relay.Function([var_5857,var_5858,var_5859,], output)
mutated_mod['func_5860'] = func_5860
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5938 = relay.var("var_5938", dtype = "float32", shape = (3, 14, 7))#candidate|5938|(3, 14, 7)|var|float32
uop_5939 = relay.asinh(var_5938.astype('float32')) # shape=(3, 14, 7)
uop_5947 = relay.exp(uop_5939.astype('float32')) # shape=(3, 14, 7)
output = relay.Tuple([uop_5947,])
output2 = relay.Tuple([uop_5947,])
func_5950 = relay.Function([var_5938,], output)
mod['func_5950'] = func_5950
mod = relay.transform.InferType()(mod)
mutated_mod['func_5950'] = func_5950
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5951 = relay.var("var_5951", dtype = "float32", shape = (3, 14, 7))#candidate|5951|(3, 14, 7)|var|float32
func_5950_call = mutated_mod.get_global_var('func_5950')
call_5952 = func_5950_call(var_5951)
output = call_5952
func_5953 = relay.Function([var_5951], output)
mutated_mod['func_5953'] = func_5953
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5994 = relay.var("var_5994", dtype = "uint64", shape = ())#candidate|5994|()|var|uint64
var_5995 = relay.var("var_5995", dtype = "uint64", shape = (7, 8, 3))#candidate|5995|(7, 8, 3)|var|uint64
bop_5996 = relay.greater_equal(var_5994.astype('bool'), var_5995.astype('bool')) # shape=(7, 8, 3)
func_502_call = mod.get_global_var('func_502')
func_507_call = mutated_mod.get_global_var('func_507')
var_6010 = relay.var("var_6010", dtype = "uint8", shape = (13, 21))#candidate|6010|(13, 21)|var|uint8
const_6011 = relay.const([4.894380,-8.426744,-4.820058,5.995575,2.004124,1.262377,-5.238510,-3.805355,-6.566591,-0.049534,-1.201425,9.710025,-8.181065,0.511944,2.067386,-6.336513,-5.320174,3.500386,5.379457,-4.838555,-3.373541,6.161700,-3.771426,-3.386640,-5.175372,-1.035264,6.891222,3.630431,5.345471,-4.701217,-3.628861,-6.516979,5.830000,8.719981,-9.358679,1.994219,-8.053685,-1.874384,4.863210,6.801884,2.243956,-2.144138,1.763053,-5.584099,-9.833004,-3.095787,-5.295300,0.036298,-7.289789,-4.287967,7.703491,-4.455096,-9.825264,-1.719935,6.742851,4.805549,8.499444,-8.042842,-2.925711,1.108506,7.392531,2.238543,-6.540950,1.596302,1.758809,-5.716113,0.607420,-7.359734,0.032337,4.854157,8.125470,7.965421,-3.645627,5.118023,2.274311,8.666181,-9.161638,-5.232866,-8.327357,-5.304793,5.830366,-2.844573,0.920491,5.550937,8.905070,7.627986,0.185212,3.381550,-4.297009,-7.836834,5.967976,-3.408913,-1.320828,6.244214,-4.621239,0.994960,-2.637766,1.487474,-0.440124,-4.973246,7.276265,-5.080478,-4.701028,5.124090,4.979574,-4.297169,0.269695,-3.865768,9.533943,-5.110437,6.522907,-2.879819,3.365131,8.091266,-3.071502,5.332541,-2.219248,-1.402868,4.873775,4.637310,-6.159152,-7.922705,6.528106,0.090796,-5.151770,-6.364474,2.630858,8.758193,-8.756106,6.204250,-3.742607,4.582608,-8.133869,7.377564,3.470316,-6.484747,7.004060,6.418232,-1.110526,5.414298,5.814890,-6.963332,-9.598487,5.739850,8.466335,5.880128,-8.037024,-0.137390,2.583202,-3.418271,-5.638195,-9.575004,7.573882,-8.185272,-5.103721,-0.221608,-1.412738,1.502394,-8.555612,5.915315,6.527399,4.459830,8.153673,-8.734899,-3.484684,8.352810,-3.589553,-5.380236,-1.619411,5.670598,-0.172005,-6.313431,-2.499573,-0.524960,-7.360223,-0.972256,-2.711531,2.308247,5.378082,-6.649692,1.696738,0.759834,5.642012,1.923974,-3.129406,1.975011,7.968122,6.427751,5.135339,-3.772435,-0.602136,2.289667,4.538394,-7.033489,-7.623363,-6.258083,6.131125,0.022050,4.405444,-7.525541,7.056434,-7.402608,1.345668,1.724231,4.246573,-4.752095,-3.851767,4.041570,3.949909,8.940923,-5.970658,7.391251,2.682418,5.795621,2.822734,-9.457347,6.091330,9.432537,2.736989,6.706528,6.083718,-0.509374,3.385931,8.891381,9.131506,-3.621063,-8.756829,2.115548,9.527563,-4.835884,-8.609531,9.237570,8.458947,-5.553985,6.717845,-5.136503,-9.711149,2.120478,-6.859923,-3.808374,4.922207,7.999915,-8.933544,3.159990,8.709551,-4.586492,-9.523418,4.092279,0.539190,-8.013198,9.355407,7.755362,8.286036,3.607225,9.982515,-9.201620,1.432126,-6.647248,-6.916942,0.119263,9.800845,-4.026995,6.896937,7.346184,8.727735,-2.651022,-8.506480,-7.893416,-7.584268,3.747513,9.445623,-3.292316,-4.625696,-1.447637,-2.906480,-9.929361,-9.118634,9.025946,0.470201,-5.660833,8.085700,5.340390,-2.326041,5.264012,-1.342276,-2.110528,-5.923092,-4.297134,8.511629,-8.972504,-6.455898,3.929810,0.153203,-9.349153,7.018436,3.273316,5.183039,4.223892,4.406870,-5.273559,4.266040,2.215544,5.231931,-3.891085,5.577776,-1.303007,-3.273674,-3.255869,9.726427,-0.672886,6.279831,1.084211,-7.161858,-8.630061,6.668685,1.394013,2.988830,7.516578,-6.408876,8.146986,-4.973630,7.371904,4.147639,-6.472431,3.142541,7.116056,-9.796227,9.797905,6.108468,-4.101805,0.381880,-6.725625,5.525033,1.191109,9.898818,2.848452,7.217678,-3.754921,-7.898312,1.516373,4.538915,-8.881864,0.860855,0.195060,0.184111,6.264584,7.684440,6.127676,5.323239,5.392429,5.723726,-2.755647,4.141747,0.835131,6.684147,5.669514,9.366492,8.430675,-5.480820,-8.861924,-6.770021,-4.531888,8.780688,-9.538555,-1.943649,0.975720,-9.124149,-6.629314,1.872295,7.402550,-3.482488,4.468327,-2.087809,-9.552455,0.930003,-9.734736,4.348892,-6.714329,-9.987665,0.381054,-1.486016,-8.214915,2.342204,-3.674297,-4.830569,3.529973,9.178225,6.057217,6.840400,-1.272829,-3.916988,7.872523,9.771555,-9.849670,-1.393676,-7.939609,-1.535280,-5.815900,-1.491433,-0.853111,-3.859660,6.535960,0.936362,-7.440415,0.232120,3.565070,4.284385,5.756366,-1.818748,5.320267,2.924092,5.047954,-8.897131,9.594862,9.058003,-3.158313,-0.335589,4.600441,-5.880002,-1.490751,-4.863028,8.607689,-2.651379,-9.547528,-6.570048,-3.912528,4.520398,1.240670,6.063348,-0.947273,1.402643,-5.275795,9.994711,3.670164,1.213335,7.383609,7.560625,-9.974804,9.318541,1.027626,-1.264833,7.527488,5.447431,2.480967,-9.413972,6.632791,-4.098345,9.587201,0.725990,1.612355,-7.552645,-3.723619,9.972826,-6.269721,2.396866,-8.362348,1.262156,-2.242255,0.929159,3.879124,6.937108,4.036534,-9.553446,1.291088,5.981763,4.758219,9.227244,8.631158,-2.901324,9.521742,6.115352,6.142951,-9.170080,-4.075252,3.468150,0.419651,-5.615504,4.264167,1.596578,7.018417,1.069986,-7.649768,-6.169664,-2.770878,0.004069,2.899566,0.491161,8.463154,-1.109575,6.314281,9.358182,-3.751691,6.148646,7.872756,6.441439,8.518952,4.909198,7.062808,-7.995168,-0.180700,-3.377633,-5.542566,-4.431672,5.315068,8.845159,-0.805291,8.356632,6.312449,-0.966181,7.486053,7.931495,0.115803,-1.562716,-0.149429,-8.123645,2.445283,-2.182700,-7.441772,8.514473,5.384660,9.726853,-5.294106,8.136866,3.419504,-6.625926,5.722723,-3.449531,-3.616889,3.591697,4.399723,9.939306,-2.423961,-2.022990,-1.790337,-9.803199,7.778013,1.039135,-1.758504,9.306336,5.983208,-8.344079,2.301355,2.551570,-7.091415,-5.958761,-1.371723,-4.921229,-6.699585,5.454838,-1.695644,-4.826784,2.895518,5.444162,-1.453706,-2.730543,-9.544832,-2.919814,4.334636,5.482743,2.862543,6.283756,6.387855,-5.741679,-5.542001,-2.112167,-7.014045,-7.310857,0.286324,6.474989,-1.289247,7.652699,8.883843,-1.303731,8.322792,-4.572634,-9.551550,-7.355249,9.657351,9.789654,-2.010568,-6.005538,-1.680910,3.635476,9.784023,-4.632102,-0.980919,-2.129908,3.862772,-8.572479,1.587358,4.719369,-9.600435,0.435765,0.726814,6.737427,7.575777,-2.315368,3.890467,7.174058,-5.241401,-4.552033,8.076239,-9.919234,-6.421161,9.006449,2.130742,5.637247,-0.108346,1.458209,2.329661,4.677286,2.523884,-0.601277,5.175264,9.864742,6.541703,-8.072315,-9.151161,-6.580915,6.598855,-7.137317,-5.358203,-4.997933,8.246004,-8.907037,8.861204,2.140077,5.122638,1.174638,5.963446,4.894797,-9.474487,6.483997,-3.092836,6.739419,5.514941,3.837448,2.165920,-1.894128,4.692942,2.134898,-0.668448,7.906780,4.578527,0.964378,5.564320,5.448602,-8.735299,2.775724,-9.846116,5.678440,-1.743279,-0.563396,-3.474045,-1.102721,2.358487,-3.994291,-7.812791,-1.039813,-6.093645,-8.138670,-3.472777,-4.733123,-3.617373,0.814781,-8.454207,-0.678202,9.290186,7.393541,3.372986,-6.559638,1.810956,9.040680,-2.725112,7.655060,9.757755,1.244941,-9.622151,-5.855622,1.197979,0.287110,-1.789714,-5.416938,-0.153926,-2.783488,-8.891904,7.861825,6.766901,9.623089,-3.770016,3.914564,5.915054,8.041757,-3.974423,-4.102538,3.078309,4.984602,-6.630474,-9.077617,6.925940,-3.631829,1.056822,-1.903532,-2.781755,-6.304471,-1.083359,-1.809510,-9.424056,6.792771,-1.375268,-4.557763,-0.849068,7.470474,-9.897007,5.208785,-2.298494,5.051426,3.696870,8.574080,8.340366,-0.210075,6.131462,0.498027,-5.055719,-5.304779,5.056519,4.483545,-1.883372,-3.617256,-3.882957,1.432454,0.522282,-7.729669,-9.064777,2.387444,6.649402,0.680223,-3.048690,7.752091,-3.452306,6.117084,-0.342385,0.121586,-6.876978,9.600809,7.209454,6.064417,9.292803,-8.884883,4.166718,-6.814290,8.125307,8.288030,-8.209482,6.067089,-2.963011,-2.455542,0.040591,-8.079490,5.751434,-0.672648,-6.262910,-8.823717,5.714633,9.656793,-3.348691,9.335426,3.945199,4.724230,4.780747,-6.221623,-6.017452,5.303329,-2.439208,1.919501,6.422526,8.996668,8.793617,-3.755106,-1.798411,-1.819362,3.380486,-1.317333,-6.115593,-0.388537,-7.301565,-4.642185,-9.402749,-2.530531,3.243965,-3.474855,1.587247,-2.558797,9.401515,8.255530,-6.422821,-0.543476,-0.846616,-6.182281,3.752782,-4.350283,-0.048437,-2.446990,-9.527572,9.989696,-6.171843,0.242456,4.208304,-8.273698,-5.484473,-3.025419,9.403353,-9.933306,-5.369093,0.228061,4.155459,4.141579,-3.744588,-4.014949,9.516816,-7.163236,-9.538194,3.435926,5.965844,-9.155692,-2.506223,-2.762369,-4.856257,4.370610,8.368633,-6.857802,-0.812073,-5.086243,0.291539,-6.654637,8.223635,-3.428908,-9.607933,1.390272,6.647927,2.635096,3.405468,-9.819383,-4.303875,-5.520580,-5.565189,-1.218725,-2.062763,1.341711,-9.439515,-5.612402,-7.976688,3.165028,7.765687,-0.665257,-7.433439,-5.177719,9.823582,5.723924,-9.403287,2.028520,-8.355373,3.342973,4.729553,-3.666207,-9.206224,8.467536,1.860098,7.461413,5.430785,-0.943351,7.237686,8.536453,9.109007,-1.686721,-3.894469,-2.325535,-8.182992,-3.332641,-3.647944,3.989859,7.550294,9.876114,4.998077,9.116048,-9.898984,-7.629436,-0.417094,-1.231989,2.179069,0.710826,-6.377398,-3.018768,-0.569222,-2.867727,-0.508765,9.141097,-2.126182,-2.546840,-3.033756,4.559356,9.170023,-9.402598,3.847732,9.562753,-6.663438,1.436884,-2.093599,6.781237,-8.809379,3.891003,9.070152,-5.957390,5.436505,7.643848,6.821323,-7.458298,-6.851302,-7.537727,0.749310,-4.460276,0.314040,5.862004,-1.405727,-5.801104,-3.521279,3.165067,-6.757862,-3.844404,-7.460060,1.373623,-7.946755,2.349088,5.767277,-9.193573,4.996686,-1.759595,-8.850564,0.280555,-1.896717,6.297632,0.952989,-7.304726,3.922956,-0.041496,-0.929233,5.754748,1.095879,3.244865,-7.324928,-4.079112,9.006310,-6.391969,-5.311883,-8.802330,6.000154,1.326399,-1.601207,7.102654,-3.652682,3.434073,3.331998,0.152676,3.577756,7.800329,6.684370,-3.656696,-3.528323,-9.121955,-0.382490,7.926920,9.275089,-7.867047,-9.415597,3.245461,9.363156,1.388294,8.862141,-0.018965,-6.048741,-6.994725,2.018301,-5.688026,-3.808095,-8.312579,5.695223,-4.862228,-1.723947,-9.938656,-4.097060,-5.503005,-3.991401,8.424156,-8.353160,8.059433,3.098552,-4.008019,-5.128679,8.863349,-0.069549,7.517237,7.706568,-4.505302,-9.290872,0.057640,-1.792509,7.635008,5.596732,-5.661300,-9.338181,-5.323180,7.513559,-1.741775,7.176827,-7.523492,5.661527,1.785406,-4.112411,-4.118732,-6.684120,2.705119,7.834665,-5.369294,8.015485,1.061825,-5.019508,-8.390573,-6.238267,2.583246,-7.754095,6.652157,4.699615,-5.006466,-6.199691,-8.402514,-8.467329,5.748263,-6.834802,4.602812,-6.021800,1.229715,-4.256589,4.981972,-2.100403,5.647373,-6.594786,-4.679522,5.274460,1.951392,-9.905292,7.846695,-7.350922,-9.849802,-5.911197,-4.465758,-4.217579,6.857825,0.422701,-6.365779,9.010932,-2.783470,-4.455406,5.104746,-6.178879,-5.612640,-2.110180,7.161243,-4.016569,-5.174664,4.007543,-2.000331,-2.901392,0.969742,-1.239217,-1.747330,9.643929,3.364978,5.543114,1.522462,-3.000436,-5.595218,3.314373,5.968402,-5.299621,-2.007219,-1.812966,7.597157,-5.906438,5.925348,-4.087004,-7.882938,-5.232729,-9.039935,-9.565138,1.673509,9.135836,-9.784443,-9.585245,-7.219854,6.431826,-7.174098,9.480068,-3.827322,-4.013497,-4.055256,9.345035,-8.714500,0.064523,-3.423410,8.827822,-0.527706,4.075826,5.179229,-4.305789,-8.592630,6.764507,1.385704,8.101263,-0.496725,6.523966,-9.554152,-6.063102,9.177724,0.213059,5.422288,9.459447,4.251836,-5.189281,-4.948614,2.532107,-5.946228,-6.891508,0.374295,-6.778238,0.350895,7.536600,-8.263469,9.570532,8.998444,0.872244,6.735117,-0.973617,-7.003398,0.420174,8.039382,6.617721,2.580691,9.033916,2.717341,1.179434,-5.343167,1.624849,-7.352380,-5.501036,0.648860,-1.906778,-3.424195,-0.290335,-1.316729,-1.842376,-4.930484,7.610445,2.100879,-1.367412,-2.305704,9.745874,-1.310066,-5.837758,6.355359,-2.537678,-5.241426,2.270012,6.560582,4.076445,-2.656063,1.937942,-8.168890,-7.655279,-5.676796,-2.090241,-7.266588,8.081706,-5.495855,0.900571,-6.707415,1.995247,2.695335,1.849942,-5.504691,-3.613701,-5.972753,2.151828,-1.667367,-6.496615,-8.141136,-8.886487,9.688939,-3.119518,8.561886,1.044712,6.348891,-1.916827,-5.178355,-8.457919,4.003790,1.365830,-2.808965,-4.589358,-8.770003,9.935091,0.116622,-3.998823,3.673158,0.701271,-4.880527,-5.521229,5.712247,-6.343146,7.534162,-1.386428,9.852678,-3.654049,-3.351562,7.473543,-4.949615,3.195523,-7.064083,-5.075416,-3.931958,-7.937434,-8.822251,9.248154,6.619244,5.791133,-6.717562,2.800388,2.733920,1.061081,-9.783950,4.278261,-8.564527,0.027377,-8.139952,-8.685021,9.667887,2.970442,-1.844651,4.476767,6.036974,-5.175679,-6.871844,1.049294,5.455726,9.554297,5.449468,-7.900094,2.629847,-7.072106,6.636596,3.600072,2.198854,3.055657,2.520138,-0.199496,3.411536,-2.002753,-9.903515,-6.922030,-2.043428,-8.381190,-6.497758,7.420553,-4.137874,4.714369,0.205208,-1.261681,4.131721,-3.003137,-7.048988,4.126772,8.524521,7.694609,-5.209627,7.701993,6.563730,-5.216538,8.119835,0.302107,-1.589118,6.800797,4.833481,-7.190701,2.936481,3.941637,0.688605,-4.609607,-3.645827,0.932171,9.125191,-3.588996,-0.507709,-3.188268,-0.328267,7.965717,-5.709069,-8.058653,-2.972590,-3.639503,9.684414,0.627270,4.402366,3.085243,2.362627,-5.947831,-1.497800,2.662951,0.954579,-0.276227,7.878618,-3.226077,-3.825972,-3.144479,-5.051414,1.537028,-4.179301,-3.603920,-9.300547,-7.653204,-0.321455,-3.043984,3.671860,4.638029,8.989155,-5.783666,0.872323,-9.833933,-3.719098,-2.667940,5.674405,-1.272527,-4.196524,9.128335,9.364150,-3.378117,-5.643401,-8.238696,-8.767213,5.682368,4.410210,3.011788,-1.182040,-8.132992,-7.214599,1.346559,-3.943382,7.235920,3.943130,5.888578,-6.202772,-6.054369,-7.048744,-4.396562,5.460306,-6.911952,-1.897779,4.578660,1.974819,0.027677,8.932615,-2.829380,-8.303933,-0.919336,-9.118091,-9.819214,-2.393819,-8.966427,5.034958,7.666969,-8.817309,0.891642,3.162839,3.290446,5.034688,-7.454034,-1.655391,-5.953718,2.254839,-3.593970,9.336284,-0.764067,6.083512,-6.745901,-4.501108,5.447047,-7.376687,5.971802,-9.505290,-2.222201,4.955230,-5.800286,1.543376,-0.008875,5.220349,3.417265,-0.776790,-0.354455,-6.509875,-6.221713,8.478083,2.807069,4.387972,0.603154,4.941229,4.771442,9.192691,-9.070351,-4.540237,0.223216,4.658425,-5.687751,-2.110996,-0.950088,-2.490781,3.012975,-3.465464,1.137200,8.706484,1.944555,-3.267308,2.118331,-3.811101,2.695512,6.869149,4.711073,6.163241,-3.881043,-6.158975,-4.046542,4.443965,-0.200016,-4.652194,6.346275,6.093241,-0.526461,1.513899,2.340324,-1.261952,5.027731,7.492832,-3.886411,-8.519636,-4.391286,5.220830,3.774160,5.415050,6.091342,9.005811,7.708113,7.977904,3.248620,-3.275214,1.002196,9.639349,-1.961507,2.160055,0.637778,4.414416,-4.699582,-2.062534,1.120888,-4.677742,9.447918,-5.878688,-5.263984,-4.867325,-1.053867,-0.778958,0.999097,-8.833752,-6.768213,3.539013,-2.495952,1.935616,5.392639,-9.910332,8.539700,7.389206,3.229727,-8.575900,-5.041343,8.664479,9.951356,-7.128275,5.278826,-6.989478,-7.469009,9.533242,-1.298504,9.024380,-3.657312,-4.171578,-5.343115,-2.991659,1.610481,5.386576,6.941218,6.382821,-1.329101,-3.115431,-7.538350,1.080063,-9.794335,0.554581,-2.843555,-1.275327,8.636718,-7.422162,1.000209,7.313786,0.511018,-3.373259,9.668668,0.875165,5.012571,0.825620,-5.851620,-6.814952,6.330614,7.425419,-2.733603,-9.020974,6.466130,-0.787576,5.009090,5.805856,-8.800381,6.402769,7.522449,-5.934168,-1.977550,8.327576,-4.012210,8.842310,8.161669,5.852428,7.012714,5.444470,4.519494,1.058350,7.850820,6.966157,-3.290955,4.698301,-4.380110,-9.293429,5.789278,6.169621,1.066100,1.141302,-6.047983,-2.241941,-2.556825,-9.592849,8.981023,-6.429201,-8.789311,1.954957,7.927926,9.023410,-0.389840,-1.168752,1.623779,1.291452,1.016932,5.251586,-6.507311,7.535357,-9.004261,-9.088199,7.989406,-2.030208,-7.235890,-8.394708,8.052713,8.212521,4.686116,2.091374,-7.152696,6.488993,-0.429206,3.580855,-8.536952,3.410421,-9.544494,6.384013,6.438175,0.139440,9.294530,4.926544,3.924726,-6.768664,-9.893460,4.058121,-4.231022,-7.843510,-2.313915,0.945503,-4.993869,7.872293,-7.896770,-2.546242,-2.741634,-1.549262,3.049429,-1.262482,-7.185621,2.001688,7.600143,3.365299,8.689393,-0.211128,5.854795,9.957137,-9.581696,-2.429835,7.962170,-3.002422,4.860109,2.255796,-0.672502,4.148443,-1.039683,-8.336707,-5.025433,7.063005,6.563162,4.563809,-5.733852,5.537697,5.664556,1.343227,-6.334545,-8.491598,-5.942031,5.160960,-8.284067,-2.892230,2.788178,-6.342315,-4.403963,-6.742447,5.751634,3.606747,-9.469527,-2.511760,-2.166341,-6.984678,-3.277552,-2.063295,-5.770852,8.048671,6.061253,8.633171,-7.596701,-4.958860,6.165861,9.037816,-8.896549,-6.110783,4.122888,-0.282682,8.434472,-6.072546,1.128713,-9.118150,-4.633053,-8.773358,8.426605,0.561728,5.662716], dtype = "float64")#candidate|6011|(1680,)|const|float64
const_6012 = relay.const([8.538499,4.008964,3.893486,9.068246,-8.352868,-7.667227,-7.849822,-8.958433,7.938925,-8.593091,-1.223138,2.921417,-9.639301,4.647877,4.243246,-7.776725,-9.850365,5.118297,-4.960716,6.521183,0.648296,3.297019,3.336016,-0.447070,6.062268,8.502261,6.921722,6.343729,9.894639,7.294958,-5.729798,-9.699226,5.881867,-3.845516,-4.156088,-8.157401,6.236209,2.400296,9.566008,2.181155,-6.765008,-0.950245,4.975083,2.458361,-6.546110,9.657366,-6.805298,5.112720,8.988452,2.768955,1.145851,3.839801,-6.303598,-8.651044,9.692404,-3.702151,-1.365466,5.908387,-9.281589,-3.979710,2.799912,6.659320,1.947816,4.918066,-6.622153,-4.819201,-4.201775,-1.588570,-0.167515,9.512673,-2.383939,-4.103633,-5.385929,-2.118144,-2.010537,-8.766276,-5.896842,-4.804060,-0.340110,0.698695,-9.056727,8.947132,8.581775,0.164893,-7.252535,7.400479,-1.565400,8.185866,8.293445,3.960365,-0.734233,9.091486,2.978034,0.817886,3.124792,-8.919130,-9.440758,8.062000,6.886907,-7.545612,8.406508,-0.577908,8.254699,-4.539744,5.542502,-2.304302,3.319748,8.305776,0.965857,4.429291,5.760272,1.006839,7.679114,3.127890,9.681196,-3.265257,-4.798756,5.636586,-2.141519,-5.573688,4.449070,2.052829,1.259784,-6.051328,8.077443,8.104774,1.847684,0.524738,6.039421,-0.952470,-5.528642,0.344755,1.653149,-9.808543,2.255684,-9.307942,8.402524,8.075298,-7.689013,-9.445216,3.194159,-3.733970,-7.820113,7.109909,-5.560602,-3.725243,-9.578125,4.382460,-1.176047,2.038766,6.205762,5.887131,-5.580135,8.631337,-8.331821,-4.782360,0.837754,-1.003185,-3.900005,-5.537521,7.935945,4.582710,-4.391495,-0.439326,-4.494464,-9.563708,3.888220,6.296189,6.783723,-2.271654,-7.439450,7.390172,9.631740,3.000955,-1.732479,-1.061224,-1.241843,3.087396,9.001660,-3.670544,-7.118188,3.682931,-6.719731,3.576668,8.192626,3.355155,-9.343984,4.561981,-4.111998,-0.949686,-3.100584,3.585595,-2.797365,-0.767614,-9.458368,-8.416780,0.370808,-0.056408,-2.542857,7.429574,8.801912,7.868496,-4.518736,0.113416,1.678010,2.856271,-1.732185,-8.377959,0.527928,-8.075826,8.202572,-9.193123,-5.122789,-5.623380,-6.559232,-5.079249,-9.804696,-5.709596,2.693285,-5.059528,3.334600,-6.316482,-3.109838,-0.364739,6.814075,8.827450,3.139000,-5.359703,-7.326097,-4.006036,-8.868448,-0.955823,-3.972720,1.898410,-7.326225,-6.793219,3.396874,9.901146,-7.503491,-3.249921,7.418485,-3.513337,0.433512,-6.191706,-0.787629,6.498114,-5.398438,1.991574,-7.130360,-0.516138,-4.654000,-0.930935,2.678646,8.934978,2.326376,-2.746062,0.057160,-4.615844,3.740294,-4.865415,0.067208,-9.402700,1.245575,8.078939,5.821707,-1.390898,-7.168816,0.619172,5.300493,0.933329,-1.835760,4.419334,5.985947,3.071017,-9.275479,-1.861189,7.354952,8.024009,-5.137912,-0.326923,-4.744182,-5.293566,4.171099,0.444614,-0.084918,4.613089,-6.563349,7.646673,-7.827867,-8.416777,-7.623897,9.500605,6.293832,6.226127,2.080973,5.873208,-5.486775,-2.192222,-8.424599,-2.621000,3.223341,4.436284,-3.613025,6.495920,9.940281,-8.697309,-9.500298,8.991203,-8.508367,0.362667,-9.034807,-0.518635,-3.843885,-3.975908,-0.203445,-7.960508,1.011518,2.732213,-7.439710,-3.003806,-4.804865,2.500549,-8.237289,-3.423079,8.994073,-6.783113,8.201324,2.400614,-5.949057,-0.829947,-2.766685,-2.035188,-4.308382,-8.254391,-4.205882,3.327524,1.731479,4.323142,7.062544,-5.202028,6.915960,0.171842,2.544069,6.144873,-1.695016,-8.243436,-5.418733,-1.692181,-5.149556,8.055833,-6.540432,2.011032,8.814237,4.856820,4.390673,-2.434878,6.623644,3.569639,-6.091164,-1.274897,-7.283137,5.557780,6.626446,2.585007,-6.142235,-1.055633,1.093639,-7.938329,-4.151334,-3.605193,-5.218548,-6.487593,-8.387989,-7.674545,-6.340968,3.156718,-3.526484,4.551195,2.912275,9.452745,3.072354,-5.286910,-7.113938,-2.258538,-7.700820,-4.412780,5.707116,-1.902184,-8.678081,-4.745601,9.005249,4.380952,-1.166449,4.031317,3.724553,-7.383615,-0.002518,-5.952479,6.463679,6.647050,2.543373,-5.615939,8.692431,-9.901457,-1.490409,-8.810014,-1.226816,1.871071,6.804227,-7.767648,3.449194,0.350391,3.754662,-1.786071,-7.171860,9.308653,8.912138,-2.151328,-0.226197,-8.950522,1.255971,2.348922,-2.202389,3.081441,4.208599,8.874517,-0.529089,9.578314,-5.316072,-5.858373,8.666762,-9.225710,-9.576722,6.032984,6.893285,7.911315,8.687269,-1.809877,7.565378,0.107598,-9.158725,3.953946,0.552919,-4.918448,1.234306,0.325680,-7.765262,4.492060,-2.912984,-7.630804,7.467633,4.012355,-8.149928,-9.450383,6.985980,-7.703311,-5.252722,-4.976757,-3.973942,1.690451,0.566524,6.622524,-8.562747,-7.059032,8.853206,-0.461093,-6.750040,0.106621,-4.727507,-3.521453,9.684000,9.156263,8.379007,-3.371995,-4.296732,3.666307,-3.755873,-8.903705,1.091344,6.340187,4.935215,2.382279,0.119110,-5.429141,5.575452,2.615449,2.677377,-4.199504,-6.040420,0.263085,2.656169,3.100994,4.527479,-2.976338,-3.874269,6.352556,-4.390998,-0.537722,-1.839196,6.497766,4.176704,-0.559306,2.075536,6.514875,0.875650,-1.905777,7.279696,-1.643454,2.098111,-4.898556,9.714565,0.523593,-8.101146,4.285265,-6.969715,-9.606625,-3.380622,3.129759,-3.602930,6.650862,0.307302,-5.459464,5.567634,6.157590,1.348002,3.365314,5.511046,-5.517373,-7.964525,-7.936546,-3.419796,-5.275128,-4.256132,-5.142853,7.805337,-3.196920,-6.213074,1.331459,-2.722357,-4.003938,-6.136214,-3.026434,1.259103,-0.679461,-4.667160,-3.459603,1.219471,7.878232,-9.845749,-6.762871,-3.669192,-5.096760,9.297272,-3.668270,-5.661956,-1.355474,-4.748809,9.979742,5.312814,4.482648,-8.868584,6.084308,8.274757,9.876533,-8.105508,0.747944,5.501808,3.320825,4.601856,-5.774567,3.864477,1.524779,0.240757,7.390876,-8.661187,-2.480156,-4.554153,-6.585891,9.981286,-1.409238,-3.770429,-1.353640,0.496215,-4.249434,1.537730,1.729585,1.917143,7.087094,2.479679,-7.768059,4.314931,-2.811671,-3.789584,2.422107,7.235628,6.199708,1.841294,0.716687,-5.141825,-4.216116,-9.594288,-3.017570,-8.693862,-5.245726,-1.663701,8.055269,9.995238,3.888198,-0.149630,4.634705,-4.079964,0.812400,-8.863767,5.628949,8.141450,6.176284,9.439408,6.278443,1.979313,7.184303,-8.221253,3.285745,-9.113747,0.104619,-7.040539,-7.783857,-5.068333,-5.463551,-7.707009,7.755538,3.833166,2.151476,-6.955197,-2.659726,-6.909718,7.024814,-5.264914,3.430230,6.066623,-2.693258,0.055283,4.029748,-0.969542,8.028265,0.392930,-7.258112,4.944609,2.222825,8.038107,9.231971,1.481417,-2.908251,4.320480,-8.820150,2.079471,-0.059701,-3.068924,-3.484087,-7.070300,4.029245,-5.834866,-5.511144,-3.852467,4.788495,-0.789310,5.837029,1.097485,1.135044,9.729635,0.012704,-2.973956,-2.446637,5.566113,-8.103124,-0.097457,1.800119,3.815885,-6.188798,7.508657,9.874571,-7.920307,8.814251,2.676582,-9.778720,3.051875,3.341355,-0.262897,-0.622316,-2.743689,1.141980,-0.882887,7.514134,-1.594841,4.233296,9.921981,1.358349,-5.316801,3.585376,-5.129520,-6.074594,8.088519,6.833550,5.964371,-5.021246,-7.922763,-7.290018,-0.644116,6.139840,3.243198,6.031580,1.268918,-2.727597,2.809558,9.746859,-0.683512,6.194494,1.375241,0.851239,-9.756683,-5.619873,4.220921,-3.095344,-1.956406,-9.322978,-9.610776,-0.317682,5.507809,0.483947,-7.924905,-3.343372,6.913937,6.709509,-5.569809,2.988295,-6.014569,-9.424873,3.169827,8.586967,-3.569234,4.705874,2.764012,-5.768023,6.272010,-8.632818,9.166582,-1.218371,-0.170483,6.781199,-4.429933,-7.962835,1.388557,-7.755537,1.203935,-6.975584,6.094012,-1.208875,-6.026509,5.284498,5.574693,6.829343,-2.812780,8.205363,1.055887,-6.802605,5.444940,-7.528082,4.627087,3.755487,7.524797,-0.992173,-0.959363,6.374244,0.552028,-5.741176,-5.707523,4.066334,0.594908,-3.339823,-3.321375,-0.641986,1.442317,-0.202195,3.420747,8.016707,2.010135,1.547487,-9.322853,-8.092786,-5.876204,-9.954898,8.278837,8.933862,-1.844863,6.844047,-8.839138,2.257634,8.113026,-5.935061,4.135414,4.039477,3.876965,-0.439600,7.472220,-3.678427,6.510034,3.163189,-2.877806,5.609924,-2.853307,9.794990,-9.731137,-7.877405,-2.872882,-4.441245,-7.992008,9.037711,1.222529,3.739377,-5.906998,-9.039135,1.747443,-4.329079,-2.210465,-3.071698,4.079647,-3.361999,-3.003885,4.206483,4.263558,0.119381,5.766557,-0.923937,-5.264183,2.686065,3.238927,7.917446,0.130131,-9.565062,7.819536,-8.176651,3.963556,6.998633,4.754412,-5.065592,-1.376532,-4.135833,-0.038808,-3.994819,5.014695,-4.362125,3.753126,4.449742,5.544342,9.717955,-3.052502,0.144533,-3.227474,-8.660401,7.984476,-2.607695,-1.074986,6.537883,9.713613,9.935305,-7.165294,9.308179,3.564951,-5.420663,8.307683,-4.733778,-8.078259,4.711394,-2.046777,-3.191183,-0.375626,6.481494,-2.837224,-5.162136,1.815873,-2.989297,5.828809,4.448973,-7.257618,5.093648,5.542968,7.343026,-2.506290,-0.132468,-4.851564,-7.125356,-9.244813,7.382420,8.710563,-2.509586,-5.088486,-0.481471,1.711945,-3.226806,6.888006,9.287775,3.556723,-4.059498,9.713649,-8.001279,-3.790130,-3.615156,7.827738,0.022812,8.529930,5.945979,-5.961460,7.503524,6.740602,5.214356,-3.521038,-7.458168,8.190954,7.075311,1.223558,5.531615,-2.193337,-7.396649,8.577536,-2.812711,-6.430490,-2.072519,3.893044,-4.706813,-2.448027,-3.104846,-7.000095,-0.900659,4.446952,-4.842696,-6.324178,-7.124344,9.827818,-7.935521,-5.035377,-0.666426,-8.832938,3.324231,-7.375393,-6.103406,9.893651,9.512540,0.469244,-6.417288,8.356871,-5.741900,-6.081456,6.817203,9.328168,-9.856277,-5.560183,-0.632243,-4.313335,3.607574,5.475090,4.278259,-4.833077,-2.106727,-0.260745,-0.935046,7.164936,3.873525,-1.861862,-7.985043,-8.448899,6.152151,1.387906,6.449115,-2.282486,-5.741655,9.064198,-8.396126,9.534933,5.197927,9.040508,8.446617,-5.488787,-3.189191,5.019462,2.449140,-5.592433,3.153192,-6.302494,8.767130,8.164735,3.631092,8.968986,-1.890432,-8.209289,-0.330868,9.276933,8.295952,3.324871,-4.473656,-2.655264,-4.937395,2.942160,-3.273577,9.745456,-9.934151,3.560503,0.892007,5.719266,8.361798,1.063426,-4.840919,-1.400358,5.538999,9.898518,-2.363338,5.585320,-4.925611,-3.116704,-1.714188,-9.643239,-3.228784,-7.347271,-7.792400,4.081410,-7.132968,-6.376936,-2.156690,-1.368887,-9.771994,5.464732,0.240305,9.223391,6.979083,-4.772466,2.063785,-5.132331,-3.729507,7.877098,8.857204,3.040511,-9.014068,-4.156621,-2.332692,-7.960646,-1.582363,7.058823,-4.299532,-7.541341,6.656213,2.321675,0.741005,-0.294812,6.652298,8.071653,0.183085,-3.515631,-1.324050,-6.411730,9.956856,5.561331,-9.779788,3.706943,8.725462,6.470278,-2.647541,-7.158482,-2.286811,2.258405,-9.115980,-5.892739,2.605374,0.063119,6.169394,-8.047286,-1.968560,4.557435,5.594028,1.805141,-9.073670,1.612220,-0.512917,-1.361604,-8.896490,-1.378630,-9.940103,-4.141579,4.376817,3.740864,6.063217,3.884050,2.502701,1.820971,8.871188,-7.129188,2.023139,-7.153437,5.009570,-1.936659,-1.180814,-2.606404,-6.479672,7.250321,0.903618,-3.811179,-0.646733,-8.473947,-3.654909,-0.734355,0.173221,6.037814,-6.250134,-4.110793,8.486414,-5.641472,6.595649,-3.836868,8.129824,9.355002,6.752952,-5.066390,1.765107,8.304542,-4.928264,1.414259,-6.215905,-7.427282,-4.722902,-3.599745,4.999748,1.590252,-5.589436,-4.425833,2.869285,-1.023392,-1.173497,0.457793,9.427618,1.687673,-7.528963,2.892397,-5.372779,-2.697287,-2.583897,-9.096587,1.990116,-5.249618,5.236798,5.806395,-0.679896,4.593817,-5.400057,-2.660014,-4.837144,0.287685,-8.153013,0.218477,-4.617978,2.284380,5.846146,7.746938,-5.746206,-3.196606,-9.776063,-2.362773,4.884093,5.441877,-6.865460,6.844212,-7.438699,-5.887839,-9.702628,3.228139,3.679012,9.810015,-1.886554,3.658894,1.697568,-1.687072,0.724818,-2.388721,5.108235,6.842699,-7.972855,-5.417798,3.380473,5.854825,-4.672859,4.340502,-3.141492,-4.838749,3.519535,3.159332,8.325797,-1.655712,-1.505401,0.354221,9.580862,-2.520801,-8.839928,-1.532007,9.475833,2.573869,-4.473771,3.023574,1.667351,9.219644,6.223612,0.631245,-4.099474,4.833717,6.412911,-7.401390,5.815473,-7.643766,9.553141,-6.752716,-7.332128,5.639685,-6.624708,4.654012,-3.263606,-5.517769,7.682274,3.035070,3.332729,7.480651,3.608969,6.717427,-8.599662,-7.071061,-9.283296,-2.915095,-3.421118,8.468842,-6.068523,5.717065,6.270325,-6.017520,3.641455,4.977849,-3.853146,0.895369,-3.184996,8.158540,-5.481322,0.065826,-6.055833,-9.362803,1.086146,9.460643,-4.155079,-1.437839,-3.451068,6.619730,-5.548349,-8.332803,7.689921,4.932133,6.489296,-3.758367,-7.077448,-8.131599,4.509839,-6.316104,7.423849,-3.471089,-2.989486,8.033469,8.350857,-7.287251,4.734498,-3.057858,3.242872,0.986675,-7.547509,-8.752018,6.061966,8.966308,4.263590,1.089411,8.148105,2.622675,-6.051122,-2.862880,9.157240,-6.247316,-6.937493,0.070657], dtype = "float32")#candidate|6012|(1287,)|const|float32
call_6009 = relay.TupleGetItem(func_502_call(relay.reshape(var_6010.astype('uint8'), [7, 13, 3]), relay.reshape(const_6011.astype('float64'), [1680,]), relay.reshape(const_6012.astype('float32'), [1, 1287]), ), 2)
call_6013 = relay.TupleGetItem(func_507_call(relay.reshape(var_6010.astype('uint8'), [7, 13, 3]), relay.reshape(const_6011.astype('float64'), [1680,]), relay.reshape(const_6012.astype('float32'), [1, 1287]), ), 2)
output = relay.Tuple([bop_5996,call_6009,var_6010,const_6011,const_6012,])
output2 = relay.Tuple([bop_5996,call_6013,var_6010,const_6011,const_6012,])
func_6019 = relay.Function([var_5994,var_5995,var_6010,], output)
mod['func_6019'] = func_6019
mod = relay.transform.InferType()(mod)
mutated_mod['func_6019'] = func_6019
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6019_call = mutated_mod.get_global_var('func_6019')
var_6021 = relay.var("var_6021", dtype = "uint64", shape = ())#candidate|6021|()|var|uint64
var_6022 = relay.var("var_6022", dtype = "uint64", shape = (7, 8, 3))#candidate|6022|(7, 8, 3)|var|uint64
var_6023 = relay.var("var_6023", dtype = "uint8", shape = (13, 21))#candidate|6023|(13, 21)|var|uint8
call_6020 = func_6019_call(var_6021,var_6022,var_6023,)
output = call_6020
func_6024 = relay.Function([var_6021,var_6022,var_6023,], output)
mutated_mod['func_6024'] = func_6024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4047_call = mod.get_global_var('func_4047')
func_4048_call = mutated_mod.get_global_var('func_4048')
call_6080 = relay.TupleGetItem(func_4047_call(), 0)
call_6081 = relay.TupleGetItem(func_4048_call(), 0)
func_1024_call = mod.get_global_var('func_1024')
func_1029_call = mutated_mod.get_global_var('func_1029')
var_6085 = relay.var("var_6085", dtype = "float32", shape = (30,))#candidate|6085|(30,)|var|float32
var_6086 = relay.var("var_6086", dtype = "float32", shape = (1287,))#candidate|6086|(1287,)|var|float32
const_6087 = relay.const([-5,3,7,-6,-10,8,3,3,-9,-5,1,5,-8,6,-7,-3,10,-8,2,1,10,-7,1,-3,3,7,5,3,10,1,-6,8,10,2,2,6,-3,5,3,6,3,7,5,3,-9,1,-9,-3,6,1,-1,10,-1,5,4,-9,5,6,8,-5,4,-4,6,-1,3,2,2,7,10,9,-5,10,-4,10,-4,9,-3,-10,-10,-5,5,-8,-3,10,7,5,8,2,2,6,-10,-3,-9,4,-5,4,-10,7,-7,7,8,6,9,-10,1,-6,-2,-6,3,-2,-10,-8,-9,4,-2,8,2,8,3,2,-5,-6,1,-9,1,5,-8,-6,8,10,10,1,-3,5,8,-1,10,-9,-9,-7,10,6,5,-4,1,-6,-4,-6,8,5,3,-7,5,-3,-6,7,-4,-3,-6,-3,-1,-9,-8,3,8,-9,6,-3,-4,7,9,-6,-8,4,-6,-10,-8,3,6,9,6,3,6,2,2,-1,-3,6,8,7,6,2,-8,7,2,6,-6,7,6,-3,1,1,-1,-7,-6,-2,2,6,8,4,1,-8,-10,10,-6,-4,7,3,4,-6,4,7,-1,-6,8,10,9,-8,-5,-4,-3,10,-8,7,-2,-6,-10,-2,4,3,9,3,3,8,-2,-9,-5,-5,1,-6,-7,-1,3,-10,-3,-1,10,2,-7,-1,5,4,-10,-4,10,-6,-2,6,2,4,-10,-10,3], dtype = "uint8")#candidate|6087|(273,)|const|uint8
call_6084 = relay.TupleGetItem(func_1024_call(relay.reshape(var_6085.astype('float32'), [5, 1, 6]), relay.reshape(var_6086.astype('float32'), [143, 9]), relay.reshape(const_6087.astype('uint8'), [273, 1]), ), 5)
call_6088 = relay.TupleGetItem(func_1029_call(relay.reshape(var_6085.astype('float32'), [5, 1, 6]), relay.reshape(var_6086.astype('float32'), [143, 9]), relay.reshape(const_6087.astype('uint8'), [273, 1]), ), 5)
uop_6096 = relay.cos(call_6084.astype('float32')) # shape=(273, 1)
uop_6098 = relay.cos(call_6088.astype('float32')) # shape=(273, 1)
uop_6099 = relay.atan(uop_6096.astype('float32')) # shape=(273, 1)
uop_6101 = relay.atan(uop_6098.astype('float32')) # shape=(273, 1)
bop_6102 = relay.not_equal(const_6087.astype('bool'), relay.reshape(uop_6099.astype('bool'), relay.shape_of(const_6087))) # shape=(273,)
bop_6105 = relay.not_equal(const_6087.astype('bool'), relay.reshape(uop_6101.astype('bool'), relay.shape_of(const_6087))) # shape=(273,)
output = relay.Tuple([call_6080,var_6085,var_6086,bop_6102,])
output2 = relay.Tuple([call_6081,var_6085,var_6086,bop_6105,])
func_6110 = relay.Function([var_6085,var_6086,], output)
mod['func_6110'] = func_6110
mod = relay.transform.InferType()(mod)
mutated_mod['func_6110'] = func_6110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6110_call = mutated_mod.get_global_var('func_6110')
var_6112 = relay.var("var_6112", dtype = "float32", shape = (30,))#candidate|6112|(30,)|var|float32
var_6113 = relay.var("var_6113", dtype = "float32", shape = (1287,))#candidate|6113|(1287,)|var|float32
call_6111 = func_6110_call(var_6112,var_6113,)
output = call_6111
func_6114 = relay.Function([var_6112,var_6113,], output)
mutated_mod['func_6114'] = func_6114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6137 = relay.var("var_6137", dtype = "float32", shape = (6, 13, 12))#candidate|6137|(6, 13, 12)|var|float32
uop_6138 = relay.atanh(var_6137.astype('float32')) # shape=(6, 13, 12)
output = relay.Tuple([uop_6138,])
output2 = relay.Tuple([uop_6138,])
func_6146 = relay.Function([var_6137,], output)
mod['func_6146'] = func_6146
mod = relay.transform.InferType()(mod)
var_6147 = relay.var("var_6147", dtype = "float32", shape = (6, 13, 12))#candidate|6147|(6, 13, 12)|var|float32
output = func_6146(var_6147)
func_6148 = relay.Function([var_6147], output)
mutated_mod['func_6148'] = func_6148
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2686_call = mod.get_global_var('func_2686')
func_2688_call = mutated_mod.get_global_var('func_2688')
call_6160 = relay.TupleGetItem(func_2686_call(), 0)
call_6161 = relay.TupleGetItem(func_2688_call(), 0)
func_5718_call = mod.get_global_var('func_5718')
func_5720_call = mutated_mod.get_global_var('func_5720')
call_6164 = relay.TupleGetItem(func_5718_call(), 0)
call_6165 = relay.TupleGetItem(func_5720_call(), 0)
func_4041_call = mod.get_global_var('func_4041')
func_4042_call = mutated_mod.get_global_var('func_4042')
call_6170 = relay.TupleGetItem(func_4041_call(), 0)
call_6171 = relay.TupleGetItem(func_4042_call(), 0)
output = relay.Tuple([call_6160,call_6164,call_6170,])
output2 = relay.Tuple([call_6161,call_6165,call_6171,])
func_6176 = relay.Function([], output)
mod['func_6176'] = func_6176
mod = relay.transform.InferType()(mod)
mutated_mod['func_6176'] = func_6176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6176_call = mutated_mod.get_global_var('func_6176')
call_6177 = func_6176_call()
output = call_6177
func_6178 = relay.Function([], output)
mutated_mod['func_6178'] = func_6178
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6179 = relay.var("var_6179", dtype = "float32", shape = (6, 7, 11))#candidate|6179|(6, 7, 11)|var|float32
var_6180 = relay.var("var_6180", dtype = "float32", shape = (6, 7, 11))#candidate|6180|(6, 7, 11)|var|float32
bop_6181 = relay.floor_divide(var_6179.astype('float32'), relay.reshape(var_6180.astype('float32'), relay.shape_of(var_6179))) # shape=(6, 7, 11)
bop_6196 = relay.bitwise_or(bop_6181.astype('int16'), relay.reshape(var_6180.astype('int16'), relay.shape_of(bop_6181))) # shape=(6, 7, 11)
output = relay.Tuple([bop_6196,])
output2 = relay.Tuple([bop_6196,])
func_6206 = relay.Function([var_6179,var_6180,], output)
mod['func_6206'] = func_6206
mod = relay.transform.InferType()(mod)
var_6207 = relay.var("var_6207", dtype = "float32", shape = (6, 7, 11))#candidate|6207|(6, 7, 11)|var|float32
var_6208 = relay.var("var_6208", dtype = "float32", shape = (6, 7, 11))#candidate|6208|(6, 7, 11)|var|float32
output = func_6206(var_6207,var_6208,)
func_6209 = relay.Function([var_6207,var_6208,], output)
mutated_mod['func_6209'] = func_6209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3036_call = mod.get_global_var('func_3036')
func_3038_call = mutated_mod.get_global_var('func_3038')
call_6229 = relay.TupleGetItem(func_3036_call(), 0)
call_6230 = relay.TupleGetItem(func_3038_call(), 0)
func_3388_call = mod.get_global_var('func_3388')
func_3389_call = mutated_mod.get_global_var('func_3389')
call_6238 = relay.TupleGetItem(func_3388_call(), 0)
call_6239 = relay.TupleGetItem(func_3389_call(), 0)
output = relay.Tuple([call_6229,call_6238,])
output2 = relay.Tuple([call_6230,call_6239,])
func_6242 = relay.Function([], output)
mod['func_6242'] = func_6242
mod = relay.transform.InferType()(mod)
mutated_mod['func_6242'] = func_6242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6242_call = mutated_mod.get_global_var('func_6242')
call_6243 = func_6242_call()
output = call_6243
func_6244 = relay.Function([], output)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5628_call = mod.get_global_var('func_5628')
func_5630_call = mutated_mod.get_global_var('func_5630')
call_6294 = relay.TupleGetItem(func_5628_call(), 2)
call_6295 = relay.TupleGetItem(func_5630_call(), 2)
var_6306 = relay.var("var_6306", dtype = "float32", shape = (18, 18))#candidate|6306|(18, 18)|var|float32
bop_6307 = relay.logical_xor(call_6294.astype('int32'), relay.reshape(var_6306.astype('int32'), relay.shape_of(call_6294))) # shape=(18, 18)
bop_6310 = relay.logical_xor(call_6295.astype('int32'), relay.reshape(var_6306.astype('int32'), relay.shape_of(call_6295))) # shape=(18, 18)
output = bop_6307
output2 = bop_6310
func_6326 = relay.Function([var_6306,], output)
mod['func_6326'] = func_6326
mod = relay.transform.InferType()(mod)
var_6327 = relay.var("var_6327", dtype = "float32", shape = (18, 18))#candidate|6327|(18, 18)|var|float32
output = func_6326(var_6327)
func_6328 = relay.Function([var_6327], output)
mutated_mod['func_6328'] = func_6328
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4850_call = mod.get_global_var('func_4850')
func_4851_call = mutated_mod.get_global_var('func_4851')
call_6350 = relay.TupleGetItem(func_4850_call(), 0)
call_6351 = relay.TupleGetItem(func_4851_call(), 0)
output = relay.Tuple([call_6350,])
output2 = relay.Tuple([call_6351,])
func_6352 = relay.Function([], output)
mod['func_6352'] = func_6352
mod = relay.transform.InferType()(mod)
output = func_6352()
func_6353 = relay.Function([], output)
mutated_mod['func_6353'] = func_6353
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3657_call = mod.get_global_var('func_3657')
func_3659_call = mutated_mod.get_global_var('func_3659')
call_6354 = func_3657_call()
call_6355 = func_3657_call()
func_6352_call = mod.get_global_var('func_6352')
func_6353_call = mutated_mod.get_global_var('func_6353')
call_6367 = relay.TupleGetItem(func_6352_call(), 0)
call_6368 = relay.TupleGetItem(func_6353_call(), 0)
output = relay.Tuple([call_6354,call_6367,])
output2 = relay.Tuple([call_6355,call_6368,])
func_6390 = relay.Function([], output)
mod['func_6390'] = func_6390
mod = relay.transform.InferType()(mod)
mutated_mod['func_6390'] = func_6390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6390_call = mutated_mod.get_global_var('func_6390')
call_6391 = func_6390_call()
output = call_6391
func_6392 = relay.Function([], output)
mutated_mod['func_6392'] = func_6392
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4041_call = mod.get_global_var('func_4041')
func_4042_call = mutated_mod.get_global_var('func_4042')
call_6396 = relay.TupleGetItem(func_4041_call(), 0)
call_6397 = relay.TupleGetItem(func_4042_call(), 0)
func_5718_call = mod.get_global_var('func_5718')
func_5720_call = mutated_mod.get_global_var('func_5720')
call_6409 = relay.TupleGetItem(func_5718_call(), 0)
call_6410 = relay.TupleGetItem(func_5720_call(), 0)
output = relay.Tuple([call_6396,call_6409,])
output2 = relay.Tuple([call_6397,call_6410,])
func_6420 = relay.Function([], output)
mod['func_6420'] = func_6420
mod = relay.transform.InferType()(mod)
output = func_6420()
func_6421 = relay.Function([], output)
mutated_mod['func_6421'] = func_6421
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2248_call = mod.get_global_var('func_2248')
func_2250_call = mutated_mod.get_global_var('func_2250')
call_6521 = relay.TupleGetItem(func_2248_call(), 5)
call_6522 = relay.TupleGetItem(func_2250_call(), 5)
func_4462_call = mod.get_global_var('func_4462')
func_4464_call = mutated_mod.get_global_var('func_4464')
const_6524 = relay.const([3.308858,1.037842,8.284444,6.401389,-6.088970,3.543673,-3.894696,-8.862766,5.903130,5.606409,-2.495265,-6.761004,8.607191,-2.070092,-9.718838,-0.532229,0.810176,3.818327,-2.557900,3.468694,4.981927,-8.039993,-8.821871,8.975248,-7.405068,-5.195008,3.410161,2.512951,8.056936,2.021973,-3.905485,3.710799,-8.915667,-7.439767,-1.893524,2.655720,-8.857388,7.551775,3.059999,0.307189,9.537888,-5.732525,-3.236175,6.588409,7.222075,5.966126,-8.718544,0.656514,5.208772,-9.633631,5.494970,6.658963,0.507520,7.707521,-8.929127,-1.002636,-4.322474,-3.017944,9.990449,-1.892928,-6.190276,-9.014621,7.102039,8.500835,3.705567,-9.846052,-3.492992,7.917736,-6.845459,-5.283621,5.845748,-9.244732,0.301223,-7.874124,-6.690257,0.942883,-9.765099,9.387980,4.968442,4.746033,-4.170391,-5.307279,7.186196,6.598793,-8.559599,-6.653993,-0.147714,7.830866,8.840861,-6.343064,-2.906995,0.927638,9.392356,-6.664704,7.869753,-6.894328,1.884467,-2.749218,-8.665597,-1.963653,1.246189,-9.541882,0.779224,4.154537,4.052858,-3.134602,4.274690,-7.994723,4.990313,-7.162572,-9.590180,-8.067024,0.458075,2.152445,-7.299575,-4.616239,-9.031510,-7.785686,-3.133814,6.754142,8.600652,7.294817,5.196441,-3.090305,4.317494,8.572289,2.375525,8.542524,1.532251,-5.373289,0.403883,8.861947,8.778395,0.059847,-6.224278,8.579222,5.372978,-9.428185,-3.661101,5.954298,7.703308,-1.652087,-0.534689,6.662021,-0.823938,-7.450570,-5.883296,3.446216,5.325431,2.312801,7.493103,9.526230,-2.769724,5.464907,-6.052584,-2.174055,-9.556961,-6.402814,-4.462846,-4.670120,1.702348,-1.964283,-9.085535,6.200500,5.591203,1.619552,0.345871,0.913129,2.221180,3.032187,4.837070,8.751116,-0.848953,-6.338068,-9.595108,8.270581,3.411651,1.810126,5.501739,5.103519,-2.426274,-0.984531,-5.190007,2.840052,-8.496083,4.169916,-0.430340,8.102221,7.603243,4.382022,-7.867191,5.828354,4.147740,-9.508606,-7.083428,8.644888,-3.327913,-4.106142,1.079902,-7.870446,-5.720165,2.786281,6.145422,2.415275,-0.582829,-8.488804,4.374439,1.433804,-1.240010,-8.987847,6.185909,4.612367,2.573771,-1.700522,5.884819,-5.620064,7.954161,-4.979814,3.554384,9.744164,7.447297,-9.860870,6.633081,8.642049,1.995044,-4.549938,8.891831,4.673025,-0.478877,8.959581,-4.386868,1.644595,1.088964,-0.235210,-8.447766,-4.178974,7.083006,-8.388115,-0.935858,9.649044,8.137306,8.248884,4.203922,4.686260,-4.044898,-4.332758,9.751974,-7.245146,8.746348,7.358331,-2.003739,1.364664,-2.301625,6.983643,6.909150,1.818290,-2.660546,0.687610,8.144902,6.608142,6.619891,-4.226642,-6.697573,9.960278,-4.796660,5.088142,4.859364,-3.151375,-7.956734,-2.863279,-7.924309,4.971603,-4.002604,0.179679,2.452489,-5.496024,-0.820475,1.813742,2.437503,-2.066805,2.822367,5.754200,0.822984,5.494172,4.654039,3.195967,6.541483,-8.984244,-3.356475,3.391980,6.819441,-7.207424,-8.406349,-6.490274,7.309766,8.165879,-3.868058,5.933483,3.112839,3.898836,-6.578603,-1.778121,0.133307,-9.784611,-0.746398,-5.484122,0.959235,7.080709,-4.433181,4.306672,3.298439,9.475640,8.492595,0.877653,5.473026,3.414035,8.105179,9.476992,3.588280,-5.776653,4.885871,1.698441,-4.523960,-8.549514,-7.600983,-0.947758,2.069114,3.752301,-9.071841,6.045974,3.610548,9.347551,-0.490964,-0.595025,-7.242230,-1.993221,0.979020,-6.372227,-5.483970,-7.861746,1.534457,-7.526767,-7.317171,9.842414,-8.916878,-5.474870,-1.935245,1.740476,-7.715321,-8.216725,-1.311256,-7.503839,-6.053376,2.772322,-3.684458,5.180259,-8.438058,-9.087131,0.245247,6.890560,-9.106355,3.351577,-8.314236,3.363272,-6.980404,0.215542,-6.457851,-5.732478,3.769214,-8.869732,-4.125049,5.165664,2.936987,1.533640,8.313918,0.025539,6.931993,-1.598289,8.801725,-9.287607,8.651182,-6.274719,-9.049236,-8.978370,1.501756,8.042445,-5.197621,-4.576559,-8.617476,-8.667441,5.130839,1.534147,0.694890,-6.990540,7.121599,-9.735043,-8.265024,6.626179,-0.825607,-4.672110,-6.049074,9.175283,-9.785804,-3.081379,2.886709,9.357009,-9.964902,4.535921,-1.095414,-0.366902,1.756730,4.160977,-9.931317,-1.180805,-1.806220,-3.783626,-8.101077,-9.911666,7.490016,3.533032,6.579073,4.535608,0.849363,6.066053,-9.822434,7.597736,1.030993,-6.052968,5.760547,-7.322045,8.861419,-0.247885,-4.789225,2.659656,-0.509229,-4.414664,6.508212,5.694611,6.168560,-5.421893,4.888169,2.687420,-7.658921,-3.648972,-8.055356,-4.536780,2.458779,8.338174,8.380673,6.260318,9.279629,5.018239,-1.394051,3.103167,-1.972761,8.021773,7.144571,-1.540458,-4.831573,-6.219376,5.261599,9.219632,9.794965,-0.104134,5.946735,-3.274015,9.531551,0.463408,7.125294,9.113538,-1.824186,8.656218,5.439521,-2.828025,-3.872462,-9.958007,0.977143,-9.115170,-1.886554,9.089950,-7.402015,-9.622052,4.246475,5.560622,-7.293860,-0.884618,-1.615185,3.721151,1.198605,2.613737,-2.584107,1.904459,9.896427,-1.332364,-2.182992,2.126925,-6.452272,5.749565,8.556524,-3.122030,4.496199,7.952947,-0.898489,-9.938139,-5.419219,5.404855,2.586768,-2.736478,-0.751816,2.455093,-0.316196,6.128321,-2.745931,-3.955806,-3.895258,-4.997974,-8.063983,8.359621,-6.446022,-7.776272,6.961325,9.241365,3.422120,-0.728873,-4.374923,-3.515523,-4.472599,0.924919,-7.550971,0.493891,-9.804718,0.258391,4.452143,4.371431,-8.476726,-7.759353,9.207759,-7.667898,8.244344,-5.143092,-2.307473,-4.541510,0.106887,-6.835773,8.708514,-1.609887,6.131217,-6.115822,-7.430206,-1.816129,-5.454197,-1.464561,-0.448422,-6.239897,9.969563,4.138082,7.681184,0.422214,-5.887955,2.168943,1.270649,5.864630,4.734736,3.120809,-7.574551,-1.710612,-2.336859,-2.926500,7.441700,-6.311423,-0.981599,0.027592,4.643896,-0.154014,-1.030208,9.410779,0.508369,-8.515229,7.957181,-2.663577,7.676479,-9.952709,4.300066,-7.719714,7.363382,-5.712905,-3.059649,7.597074,-3.376865,6.329370,2.980802,-2.480062,-8.913664,8.185252,-5.520402,8.768246,-6.326963,9.786481,-1.743534,1.317096,-2.460055,9.777429,1.165057,-8.833284,-9.133457,-7.276199,-2.603579,-9.230399,5.095545,-7.496366,3.611837,9.053219,3.543599,-7.414794,-9.697651,4.764517,2.705676,8.451341,-4.194787,-3.613160,-6.993822,-9.971647,1.117721,9.649183,6.397184,-2.408808,1.139918,-0.133941,-3.205263,-9.414925,-6.898693,7.718318,2.889141,-4.974931,-2.372642,-2.549252,8.684126,5.225279,-3.062786,0.143703,5.684880,-8.816010,7.155742,1.172191,4.072674,-7.671522,-5.417368,0.944952,1.156388,8.315976,-2.943164,-4.635323,-0.237952,-9.200630,-3.526693,-1.449200,6.927333,-3.939672,-4.352240,-9.797251,0.139597,3.453920,-9.683972,2.877293,7.589344,5.847909,6.290023,8.255102,-9.468114,-3.660181,-4.896639,-5.218747,9.592063,-6.123073,-3.395469,-6.580741,-7.862027,1.118909,-3.096199,-1.620194,7.923760,-9.722772,6.421597,3.620645,8.366585,-7.119081,-8.767100,-3.992563,1.650829,8.484631,5.536324,8.408934,-8.997249,3.598992,-4.250955,-0.671806,9.519565,-7.321051,-7.477918,-2.484763,8.273191,8.975737,2.958252,6.696339,7.733947,5.714495,-2.645830,-9.958161,0.243987,-0.379247,6.092154,-9.501959,5.208686,2.146068,-9.084827,3.935041,-3.306121,6.659612,-2.638847,-6.442496,-0.497781,8.317304,-6.556348,0.616029,9.023088,9.275173,-5.006521,6.649283,-7.845971,1.287242,0.311251,-9.729935,-9.160066,8.764263,7.672582,-3.547807,6.517319,-2.472784,1.520494,-2.133449,5.024357,1.580783,6.554554,0.943315,0.659293,-6.601907,-7.891032,-6.727643,-2.015238,3.079267,5.512273,4.717434,9.264336,-3.720672,6.473832,3.520513,0.010545,-3.409436,-6.389388,-3.515561,4.438843,-8.300326,-6.916330,-4.957647,-9.320287,-0.176004,5.635326,8.003912,5.398330,1.126165,-8.057706,-4.512171,7.441112,-7.757513,-4.725951,4.428534,7.088949,9.387130,-5.595439,-8.877149,-9.833590,-8.233734,4.727225,-1.328127,4.087936,4.921054,8.124324,1.704980,7.032374,-0.682803,9.777429,6.882220,7.839276,-8.721124,-9.607698,-1.319013,7.518303,-8.932121,-4.033466,8.360299,-7.231990,0.457035,-7.863956,-6.577389,-5.940270,-3.031878,-7.137630,-6.028388,-2.818258,4.962097,-6.193151,0.413698,-3.941574,-1.861521,0.644900,-8.549642,-3.316948,1.937926,4.338188,-5.592423,-3.119457,3.035902,-1.069119,-4.905182,-1.001623,5.619413,7.623877,-1.376020,-0.191901,0.024495,-1.017564,0.648805,5.808887,-6.380863,-0.198511,7.119635,5.916288,8.738712,-6.074828,-1.404476,4.686591,4.611562,7.625756,-9.607527,-4.180627,8.701362,-8.207563,-6.066957,2.522001,-5.712373,5.380767,-8.951392,-1.538589,8.823494,5.901701,7.927526,6.701333,9.889521,-3.451088,6.318036,7.600855,1.333056,9.489565,-3.747922,-7.237011,6.676378,-3.678215,-3.863776,4.788972,8.534750,-4.213545,-7.676201,-2.281965,-6.604331,7.966154,9.463981,-4.132069,-3.392077,-9.819033,-5.826867,4.541230,1.517447,5.728238,-7.028981,2.649226,7.505049,-0.579636,6.834050,6.265307,0.804365,1.474722,-2.863992,-2.137325,-4.689695,4.178131,1.226895,-4.924080,-4.275378,5.153396,-5.978706,-6.513116,-1.059632,1.685307,8.187968,2.417571,-2.814747,-2.637483,-3.462300,8.072083,4.595465,3.549888,-7.622450,5.810600,3.851528,2.291773,0.632873,3.320486,9.721851,-6.256276,0.567685,2.091642,-9.273731,-2.833498,-2.941898,4.763399,-7.776299,3.572326,-2.263994,5.274636,4.678500,-6.905519,4.509030,-2.443761,-9.674391,9.578851,-9.874469,0.543632,-7.190282,8.596783,-3.262247,2.076888,2.938599,6.417990,0.317704,3.117082,2.964465,-4.670313,6.046360,6.448780,5.459197,9.298108,-5.294904,-4.753634,0.057297,1.178023,1.490796,-6.006609,7.756093,-3.858389,0.331717,4.663482,5.759218,2.414918,-1.185723,8.598424,9.829462,6.879010,0.386556,9.927131,0.170447,-8.345587,0.077379,3.676552,-5.885326,0.380158,6.997583,5.226142,-2.765974,8.891752,9.634038,-0.240594,-1.018693,-5.032330,-8.047083,-8.778778,7.636018,-1.600533,9.309138,7.294828,0.768237,7.212522,-8.350939,-2.526754,9.822348,4.045884,-2.138789,-7.871670,-2.307608,-6.179946,-9.916323,-0.929693,-8.195810,-4.692708,8.916109,4.368082,-6.577770,3.982667,6.746519,-5.407570,-3.009070,-0.467143,7.425845,5.879828,1.129379,-2.895687,-8.577543,8.024782,1.183441,-4.103155,-0.100124,-5.671923,2.043595,6.690793,9.119361,3.649625,3.434694,-2.727016,-0.308745,-7.101028,4.748833,3.965863,-1.597702,-6.585925,-3.665565,-9.600947,4.425188,-5.299068,-9.636128,9.335366,7.358552,7.995246,-5.990183,8.702166,7.731979,8.954919,6.893030,-3.549373,0.372117,3.724405,-3.249680,-2.065625,-6.720827,-8.343462,-3.349919,-4.399619,-0.944906,1.119174,8.635959,-5.136915,-1.975083,-8.667242,-2.131989,2.097234,1.766557,-9.968939,-6.158639,2.488165,3.872913,-2.979800,-3.715157,6.399815,-3.565174,6.785054,6.334328,3.499724,6.791257,2.174340,-6.924485,-8.482011,-1.593849,5.572003,6.943459,5.303186,-6.854011,8.083253,1.458617,-3.211779,0.816100,2.160760,2.999927,-8.271189,-6.730007,-8.713819,1.676976,0.333460,9.835059,-0.890110,3.020700,1.367151,8.062496,-0.659512,8.602636,3.434033,0.246159,-6.304266,7.723559,1.865386,-1.877118,-8.363222,-1.034231,0.309872,7.962803,7.330911,-8.369833,-4.507422,0.121047,-6.148370,5.834469,1.606727,-7.796172,0.135839,-3.743869,-7.806590,7.308447,-2.043932,-4.238137,9.837781,-1.818849,-0.639471,-9.456466,-9.859144,-2.280931,-2.190238,-1.436220,-1.856830,7.786009,-8.867426,-5.212924,3.009403,-4.131675,-9.602707,8.714522,-3.321006,-9.974775,-0.875239,4.113851,-2.991445,9.141129,-8.737608,-2.525336,7.320238,-0.163886,5.645762,-8.315405,-7.128056,4.047485,6.887566,7.516163,-4.569729,-3.689322,-5.694643,0.863265,7.998766,3.412704,5.287770,-0.191264,-2.532364,-9.602931,-9.966916,-4.788114,9.739869,3.190234,-8.134106,-1.160947,-6.644593,-0.942859,8.212332,4.928161,-3.061258,-7.720172,-2.551521,-8.445206,5.242820,-4.607837,3.214590,6.413140,-3.218555,5.982882,5.983802,1.276298,9.836221,-2.830377,-6.149631,2.479768,-5.269133,-2.142425,2.685307,2.284535,1.526779,-1.233564,-9.437272,-6.723473,-2.642721,-4.784645,0.357793,1.771709,9.342255,3.474575,4.718841,-4.082559,-3.578076,-3.732435,-7.442557,9.106139,7.064851,-7.737430,5.697251,6.468692,7.868868,9.360403,4.117271,6.285222,-3.885925,-7.504904,5.794868,8.237163,8.658966,1.761069,-7.080442,-4.601075,-4.972865,9.835505,7.439631,4.395987,-1.393990,5.276362,9.530812,-7.064394,-7.462584,4.714196,-9.548787,0.369221,-7.328938,6.395672,8.280268,1.484342,-8.841132,3.907016,3.009805,-0.618258,3.756305,7.798446,-4.371017,-8.026890,6.735818,8.745615,1.582234,1.268658,2.925838,-5.405209,-4.410716,6.949217,-1.401712,-5.193691,3.018556,-2.583935,7.748730,-5.451521,1.452914,-1.112556,-6.637580,-1.413733,-4.745160,-2.542051,-3.127000,2.515426,-3.297410,-4.334247,1.214536,-1.227392,9.063305,-2.500275,-3.096851,0.744107,5.681513,-1.011869,9.772434], dtype = "float32")#candidate|6524|(1287,)|const|float32
call_6523 = relay.TupleGetItem(func_4462_call(relay.reshape(const_6524.astype('float32'), [1287,])), 0)
call_6525 = relay.TupleGetItem(func_4464_call(relay.reshape(const_6524.astype('float32'), [1287,])), 0)
output = relay.Tuple([call_6521,call_6523,const_6524,])
output2 = relay.Tuple([call_6522,call_6525,const_6524,])
func_6529 = relay.Function([], output)
mod['func_6529'] = func_6529
mod = relay.transform.InferType()(mod)
mutated_mod['func_6529'] = func_6529
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6529_call = mutated_mod.get_global_var('func_6529')
call_6530 = func_6529_call()
output = call_6530
func_6531 = relay.Function([], output)
mutated_mod['func_6531'] = func_6531
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3344_call = mod.get_global_var('func_3344')
func_3345_call = mutated_mod.get_global_var('func_3345')
call_6557 = relay.TupleGetItem(func_3344_call(), 0)
call_6558 = relay.TupleGetItem(func_3345_call(), 0)
func_2383_call = mod.get_global_var('func_2383')
func_2387_call = mutated_mod.get_global_var('func_2387')
var_6584 = relay.var("var_6584", dtype = "int32", shape = (882, 2))#candidate|6584|(882, 2)|var|int32
call_6583 = relay.TupleGetItem(func_2383_call(relay.reshape(var_6584.astype('int32'), [9, 14, 14]), relay.reshape(var_6584.astype('bool'), [9, 14, 14]), ), 0)
call_6585 = relay.TupleGetItem(func_2387_call(relay.reshape(var_6584.astype('int32'), [9, 14, 14]), relay.reshape(var_6584.astype('bool'), [9, 14, 14]), ), 0)
func_6352_call = mod.get_global_var('func_6352')
func_6353_call = mutated_mod.get_global_var('func_6353')
call_6592 = relay.TupleGetItem(func_6352_call(), 0)
call_6593 = relay.TupleGetItem(func_6353_call(), 0)
output = relay.Tuple([call_6557,call_6583,var_6584,call_6592,])
output2 = relay.Tuple([call_6558,call_6585,var_6584,call_6593,])
func_6594 = relay.Function([var_6584,], output)
mod['func_6594'] = func_6594
mod = relay.transform.InferType()(mod)
mutated_mod['func_6594'] = func_6594
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6595 = relay.var("var_6595", dtype = "int32", shape = (882, 2))#candidate|6595|(882, 2)|var|int32
func_6594_call = mutated_mod.get_global_var('func_6594')
call_6596 = func_6594_call(var_6595)
output = call_6596
func_6597 = relay.Function([var_6595], output)
mutated_mod['func_6597'] = func_6597
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6664 = relay.var("var_6664", dtype = "uint64", shape = ())#candidate|6664|()|var|uint64
const_6665 = relay.const([[[5],[-3],[-1],[7],[-4],[-7],[-3],[4],[-5],[-10],[-2],[7],[-6],[-10],[4]],[[1],[5],[6],[-9],[-5],[10],[-4],[4],[-10],[4],[6],[-4],[-1],[6],[9]],[[7],[3],[-6],[-7],[10],[7],[-5],[-4],[1],[-10],[4],[3],[2],[10],[7]]], dtype = "uint64")#candidate|6665|(3, 15, 1)|const|uint64
bop_6666 = relay.bitwise_and(var_6664.astype('uint64'), const_6665.astype('uint64')) # shape=(3, 15, 1)
output = relay.Tuple([bop_6666,])
output2 = relay.Tuple([bop_6666,])
func_6688 = relay.Function([var_6664,], output)
mod['func_6688'] = func_6688
mod = relay.transform.InferType()(mod)
mutated_mod['func_6688'] = func_6688
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6689 = relay.var("var_6689", dtype = "uint64", shape = ())#candidate|6689|()|var|uint64
func_6688_call = mutated_mod.get_global_var('func_6688')
call_6690 = func_6688_call(var_6689)
output = call_6690
func_6691 = relay.Function([var_6689], output)
mutated_mod['func_6691'] = func_6691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_6733 = relay.TupleGetItem(func_2707_call(), 0)
call_6734 = relay.TupleGetItem(func_2708_call(), 0)
output = call_6733
output2 = call_6734
func_6739 = relay.Function([], output)
mod['func_6739'] = func_6739
mod = relay.transform.InferType()(mod)
mutated_mod['func_6739'] = func_6739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6739_call = mutated_mod.get_global_var('func_6739')
call_6740 = func_6739_call()
output = call_6740
func_6741 = relay.Function([], output)
mutated_mod['func_6741'] = func_6741
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mod.get_global_var('func_3569')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_6742 = relay.TupleGetItem(func_3569_call(), 2)
call_6743 = relay.TupleGetItem(func_3571_call(), 2)
output = call_6742
output2 = call_6743
func_6750 = relay.Function([], output)
mod['func_6750'] = func_6750
mod = relay.transform.InferType()(mod)
output = func_6750()
func_6751 = relay.Function([], output)
mutated_mod['func_6751'] = func_6751
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3569_call = mod.get_global_var('func_3569')
func_3571_call = mutated_mod.get_global_var('func_3571')
call_6752 = relay.TupleGetItem(func_3569_call(), 4)
call_6753 = relay.TupleGetItem(func_3571_call(), 4)
func_1918_call = mod.get_global_var('func_1918')
func_1921_call = mutated_mod.get_global_var('func_1921')
call_6760 = relay.TupleGetItem(func_1918_call(relay.reshape(call_6752.astype('float32'), [16, 16])), 1)
call_6761 = relay.TupleGetItem(func_1921_call(relay.reshape(call_6752.astype('float32'), [16, 16])), 1)
output = relay.Tuple([call_6752,call_6760,])
output2 = relay.Tuple([call_6753,call_6761,])
func_6770 = relay.Function([], output)
mod['func_6770'] = func_6770
mod = relay.transform.InferType()(mod)
output = func_6770()
func_6771 = relay.Function([], output)
mutated_mod['func_6771'] = func_6771
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_6860 = relay.TupleGetItem(func_2707_call(), 0)
call_6861 = relay.TupleGetItem(func_2708_call(), 0)
func_6146_call = mod.get_global_var('func_6146')
func_6148_call = mutated_mod.get_global_var('func_6148')
var_6864 = relay.var("var_6864", dtype = "float32", shape = (936,))#candidate|6864|(936,)|var|float32
call_6863 = relay.TupleGetItem(func_6146_call(relay.reshape(var_6864.astype('float32'), [6, 13, 12])), 0)
call_6865 = relay.TupleGetItem(func_6148_call(relay.reshape(var_6864.astype('float32'), [6, 13, 12])), 0)
output = relay.Tuple([call_6860,call_6863,var_6864,])
output2 = relay.Tuple([call_6861,call_6865,var_6864,])
func_6869 = relay.Function([var_6864,], output)
mod['func_6869'] = func_6869
mod = relay.transform.InferType()(mod)
var_6870 = relay.var("var_6870", dtype = "float32", shape = (936,))#candidate|6870|(936,)|var|float32
output = func_6869(var_6870)
func_6871 = relay.Function([var_6870], output)
mutated_mod['func_6871'] = func_6871
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2757_call = mod.get_global_var('func_2757')
func_2758_call = mutated_mod.get_global_var('func_2758')
call_6876 = relay.TupleGetItem(func_2757_call(), 0)
call_6877 = relay.TupleGetItem(func_2758_call(), 0)
func_4309_call = mod.get_global_var('func_4309')
func_4314_call = mutated_mod.get_global_var('func_4314')
var_6881 = relay.var("var_6881", dtype = "int32", shape = (1764, 1))#candidate|6881|(1764, 1)|var|int32
const_6882 = relay.const([True,True,True,False,False,False,True,False,False,True,True,True,True,False,True,False,False,True,True,False,False,False,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,True,True,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,False,True,True,True,True,False,False,False,True,True,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,True,True,False,True,False,False,False,True,True,True,False,False,True,True,True,False,True,True,False,False,False,True,True,True,False,False,True,True,True,False,False,False,False,False,True,False,False,True,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,True,True,True,True,True,True,True,False,True,False,False,False,False,True,False,False,True,False,True,False,False], dtype = "bool")#candidate|6882|(160,)|const|bool
call_6880 = relay.TupleGetItem(func_4309_call(relay.reshape(var_6881.astype('int32'), [1764,]), relay.reshape(const_6882.astype('bool'), [160,]), relay.reshape(var_6881.astype('float32'), [1764,]), relay.reshape(const_6882.astype('bool'), [4, 10, 4]), ), 7)
call_6883 = relay.TupleGetItem(func_4314_call(relay.reshape(var_6881.astype('int32'), [1764,]), relay.reshape(const_6882.astype('bool'), [160,]), relay.reshape(var_6881.astype('float32'), [1764,]), relay.reshape(const_6882.astype('bool'), [4, 10, 4]), ), 7)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_6888 = relay.TupleGetItem(func_5142_call(), 0)
call_6889 = relay.TupleGetItem(func_5144_call(), 0)
const_6894 = relay.const([[[-9,-8,3,-8,-9,-5,-2,-2,-8],[1,-9,3,3,-6,-1,-8,7,5],[4,-1,2,10,10,-2,-2,-6,-8],[-9,-2,1,10,-4,-5,-7,2,4],[5,-7,7,-3,2,1,8,-1,7],[-6,3,-3,8,-9,-9,4,6,-1],[3,-1,-3,7,2,-4,3,-5,-1],[-7,10,9,9,-3,9,10,-8,-8],[-5,2,6,8,7,6,-4,9,6]],[[-3,-3,10,10,3,10,9,-10,-5],[-9,4,6,6,-10,4,-2,3,-1],[7,-2,1,6,9,1,10,5,-7],[-5,-1,-9,3,1,-9,8,6,-8],[3,-7,10,4,-9,6,-2,-1,8],[-9,1,8,2,8,7,7,2,2],[-3,1,-7,-7,10,3,8,-2,2],[3,-7,4,-8,3,4,-1,-2,-8],[-1,-8,-7,-2,3,-5,3,8,8]],[[-5,-2,6,4,4,2,-6,1,6],[5,4,-2,-4,9,-7,6,3,2],[6,9,-3,6,-5,-5,6,9,-7],[-8,-7,5,-4,-8,8,8,-8,-6],[9,-2,10,3,7,-5,-4,7,10],[5,-10,-10,-3,-2,7,-1,3,-9],[1,8,-6,2,6,1,-9,9,-9],[8,9,-10,10,-1,5,6,3,-1],[1,-1,3,4,-10,1,-1,-1,9]],[[-5,5,3,-7,5,7,9,1,4],[3,4,-8,-5,4,-9,7,3,1],[1,5,8,-4,-7,-8,-7,-8,6],[-7,-8,7,5,3,-8,-2,-4,5],[-8,-8,3,7,-7,-2,4,6,-2],[1,-8,3,-1,-3,3,-7,-8,-7],[1,1,-2,4,6,-8,-2,-6,-5],[4,-8,-1,6,2,-4,-5,5,-6],[-10,-3,-10,-5,-1,-3,-3,-2,-6]],[[2,2,-6,-4,-5,6,6,-2,2],[-1,6,-9,-8,-6,3,-3,3,-8],[-4,-9,-1,-10,1,-5,6,10,-10],[1,-1,-8,6,-9,1,-8,-2,-3],[10,-10,-7,-3,-3,-3,2,-2,-10],[9,-6,-6,8,1,1,-10,9,-3],[5,9,1,-4,7,-7,-8,4,-3],[-10,-4,-10,7,7,10,-4,8,-6],[5,-3,3,9,4,-7,6,9,-8]],[[-7,7,-3,-6,3,-10,4,-8,-10],[-6,-4,4,7,-7,-10,-3,2,-10],[10,-3,1,-3,-9,-3,2,9,10],[-5,3,-3,-9,-9,10,-7,5,-5],[-3,3,-7,-4,6,5,7,2,2],[-3,2,3,9,-4,9,-3,6,-8],[-2,4,-6,-1,8,2,-9,-10,-7],[4,-2,2,-8,8,9,-8,10,9],[10,-8,-5,8,-5,6,-3,10,1]],[[-9,-5,2,2,-6,-2,8,-7,2],[-9,8,1,8,6,-9,9,7,-2],[-9,1,-9,-10,-6,-7,1,-1,2],[2,-5,-7,9,-2,-2,-5,3,6],[-8,-2,5,5,5,-4,-7,6,-7],[8,-1,-2,7,5,3,3,-10,-6],[-2,3,-6,-4,-5,8,-7,10,9],[2,1,-7,1,-4,2,-7,2,6],[1,4,2,10,6,-9,3,-2,-9]],[[9,-6,-2,-4,7,-1,7,-2,-7],[-10,-4,-10,3,4,-10,-2,-4,1],[-9,5,4,-6,7,9,-2,5,-7],[-1,-10,6,10,6,-6,-10,-3,-10],[2,-5,6,4,-5,6,-6,2,3],[-6,6,7,-9,9,-3,-1,7,-3],[-2,-2,10,10,-6,1,-10,2,-9],[8,-9,1,5,6,-8,8,-8,8],[10,-5,10,-8,3,6,1,9,10]],[[2,2,1,9,-3,-10,6,-8,-8],[6,-1,-8,-8,-1,-10,7,-8,10],[-2,-9,-5,-5,-8,-1,-3,4,4],[1,10,-1,4,-2,8,2,-2,-4],[-9,-9,1,-5,9,-8,-1,6,-4],[-2,4,1,-10,1,-3,9,3,-8],[10,-9,-3,3,-10,5,-6,2,-5],[-2,-7,6,-10,-3,5,-7,7,5],[5,-3,-6,6,-7,10,1,-6,-6]],[[10,7,9,5,8,-4,-1,10,-3],[-2,6,9,-1,1,1,-8,-3,4],[-9,-10,2,-10,2,-7,-6,-3,-10],[10,3,9,-9,4,-3,8,7,9],[-1,-2,-8,-7,10,9,-2,-1,10],[-10,-6,3,-5,1,10,-1,10,-5],[4,5,3,6,-2,-2,-5,-3,9],[10,8,5,-3,8,-2,2,-4,2],[8,3,-2,-4,1,10,3,3,-3]],[[-7,9,-8,8,-8,6,2,-7,5],[3,-10,5,4,2,-9,-10,-1,-4],[9,-10,8,7,1,-6,5,6,-2],[5,-8,7,-4,-8,3,8,5,9],[4,-1,1,-1,-7,-4,-7,8,8],[5,-10,8,4,-7,4,2,3,-2],[3,3,-8,10,5,-3,1,4,-2],[7,10,4,-10,-9,10,-9,5,-2],[6,2,-7,-4,-2,2,-5,-9,2]],[[7,8,5,9,10,6,1,-3,5],[8,10,2,-6,-10,-9,8,4,-6],[-5,-5,-1,6,-4,6,9,-1,-6],[3,-7,6,-5,4,10,10,-4,-10],[-5,10,-5,9,2,5,2,-9,10],[6,10,5,-1,3,8,-4,-10,-2],[-1,-1,2,3,3,-2,-7,-8,-10],[5,8,9,-3,-10,-7,2,-5,3],[10,-1,7,-7,4,1,8,5,8]]], dtype = "uint16")#candidate|6894|(12, 9, 9)|const|uint16
bop_6895 = relay.equal(call_6888.astype('bool'), relay.reshape(const_6894.astype('bool'), relay.shape_of(call_6888))) # shape=(12, 9, 9)
bop_6898 = relay.equal(call_6889.astype('bool'), relay.reshape(const_6894.astype('bool'), relay.shape_of(call_6889))) # shape=(12, 9, 9)
func_2815_call = mod.get_global_var('func_2815')
func_2818_call = mutated_mod.get_global_var('func_2818')
call_6911 = func_2815_call(relay.reshape(const_6894.astype('float64'), [12, 9, 9]))
call_6912 = func_2815_call(relay.reshape(const_6894.astype('float64'), [12, 9, 9]))
output = relay.Tuple([call_6876,call_6880,var_6881,const_6882,bop_6895,call_6911,])
output2 = relay.Tuple([call_6877,call_6883,var_6881,const_6882,bop_6898,call_6912,])
func_6922 = relay.Function([var_6881,], output)
mod['func_6922'] = func_6922
mod = relay.transform.InferType()(mod)
var_6923 = relay.var("var_6923", dtype = "int32", shape = (1764, 1))#candidate|6923|(1764, 1)|var|int32
output = func_6922(var_6923)
func_6924 = relay.Function([var_6923], output)
mutated_mod['func_6924'] = func_6924
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6352_call = mod.get_global_var('func_6352')
func_6353_call = mutated_mod.get_global_var('func_6353')
call_6956 = relay.TupleGetItem(func_6352_call(), 0)
call_6957 = relay.TupleGetItem(func_6353_call(), 0)
output = call_6956
output2 = call_6957
func_6960 = relay.Function([], output)
mod['func_6960'] = func_6960
mod = relay.transform.InferType()(mod)
output = func_6960()
func_6961 = relay.Function([], output)
mutated_mod['func_6961'] = func_6961
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_7013 = relay.TupleGetItem(func_2969_call(), 0)
call_7014 = relay.TupleGetItem(func_2970_call(), 0)
func_6176_call = mod.get_global_var('func_6176')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_7017 = relay.TupleGetItem(func_6176_call(), 2)
call_7018 = relay.TupleGetItem(func_6178_call(), 2)
func_1868_call = mod.get_global_var('func_1868')
func_1870_call = mutated_mod.get_global_var('func_1870')
call_7019 = func_1868_call()
call_7020 = func_1868_call()
output = relay.Tuple([call_7013,call_7017,call_7019,])
output2 = relay.Tuple([call_7014,call_7018,call_7020,])
func_7021 = relay.Function([], output)
mod['func_7021'] = func_7021
mod = relay.transform.InferType()(mod)
mutated_mod['func_7021'] = func_7021
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7021_call = mutated_mod.get_global_var('func_7021')
call_7022 = func_7021_call()
output = call_7022
func_7023 = relay.Function([], output)
mutated_mod['func_7023'] = func_7023
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7038 = relay.var("var_7038", dtype = "float64", shape = ())#candidate|7038|()|var|float64
var_7039 = relay.var("var_7039", dtype = "float64", shape = (15, 11, 3))#candidate|7039|(15, 11, 3)|var|float64
bop_7040 = relay.divide(var_7038.astype('float64'), var_7039.astype('float64')) # shape=(15, 11, 3)
func_6019_call = mod.get_global_var('func_6019')
func_6024_call = mutated_mod.get_global_var('func_6024')
const_7056 = relay.const([10,-10,1,9,5,5,-2,5,5,6,-10,-4,3,-5,-4,3,-4,-4,-2,-8,-4,-8,-6,-10,8,2,6,-5,5,-4,-10,-3,-1,-9,2,8,2,6,1,-8,1,9,6,-4,3,8,-6,-10,-9,-10,8,-1,-7,6,-1,9,4,1,9,9,-5,7,-1,8,8,3,9,-4,-8,-4,-7,-5,8,-1,1,-1,10,-10,5,-10,-8,-6,-6,-5,5,7,2,-4,-8,-9,8,7,-8,-8,-7,-3,-1,3,-1,4,-8,9,5,-10,2,-3,-1,-8,-9,1,7,2,3,7,-4,4,-4,-3,8,-1,5,3,-4,5,7,1,10,-2,-9,-10,2,6,-5,-4,-2,-5,8,-5,9,10,-7,-2,2,-9,4,5,-3,1,-2,3,1,3,6,-6,7,2,4,-1,9,1,-1,-9,-9,-2,-7,-5,5,-2], dtype = "uint64")#candidate|7056|(168,)|const|uint64
const_7057 = relay.const([7,-1,-7,5,5,-10,-7,-3,5,9,1,4,-8,5,1,5,5,9,5,2,1,-4,-4,7,9,9,-5,7,4,-1,-3,3,4,-9,-9,9,-2,-8,-2,-8,-2,10,-1,-9,10,-10,-8,-10,-6,-5,10,4,-9,-10,9,1,-4,9,7,-10,9,9,-2,4,-7,-2,-3,1,-1,2,-9,-1,1,10,-7,-6,-8,-6,5,10,-8,-9,9,10,10,-9,-4,-2,8,4,2,-4,8,-5,-9,-3,5,8,1,-5,-2,10,5,-1,-5,2,9,-10,-5,8,-7,-3,-2,-10,10,3,-2,-8,-4,3,7,7,-9,-1,-1,10,-9,-2,-3,5,10,5,-9,-2,-3,-2,-10,6,-5,6,5,6,9,6,-4,7,-9,7,-7,-2,-2,3,-5,-1,-6,-8,3,7,-4,5,-8,-2,-5,6,6,4,-4,1,-8,10,9,6,-4,5,-10,5,-5,4,8,3,9,3,6,3,-6,9,10,9,-8,1,-7,5,-7,-1,10,8,-3,3,5,-3,-8,6,8,4,-2,-4,-5,-2,-10,7,6,1,8,-9,9,-6,4,9,-9,-8,9,-1,-4,5,5,6,-9,3,1,10,3,9,8,-1,-2,-8,-4,-3,2,-2,2,-8,-5,8,-2,5,6,7,3,-3,-9,-4,-1,-1,9,-8,1,3,9,-1,-4,8,-10,4,-3,6,9,4,1,3,-9,10,-8], dtype = "uint8")#candidate|7057|(273,)|const|uint8
call_7055 = relay.TupleGetItem(func_6019_call(relay.reshape(var_7038.astype('uint64'), []), relay.reshape(const_7056.astype('uint64'), [7, 8, 3]), relay.reshape(const_7057.astype('uint8'), [13, 21]), ), 3)
call_7058 = relay.TupleGetItem(func_6024_call(relay.reshape(var_7038.astype('uint64'), []), relay.reshape(const_7056.astype('uint64'), [7, 8, 3]), relay.reshape(const_7057.astype('uint8'), [13, 21]), ), 3)
output = relay.Tuple([bop_7040,call_7055,const_7056,const_7057,])
output2 = relay.Tuple([bop_7040,call_7058,const_7056,const_7057,])
func_7080 = relay.Function([var_7038,var_7039,], output)
mod['func_7080'] = func_7080
mod = relay.transform.InferType()(mod)
var_7081 = relay.var("var_7081", dtype = "float64", shape = ())#candidate|7081|()|var|float64
var_7082 = relay.var("var_7082", dtype = "float64", shape = (15, 11, 3))#candidate|7082|(15, 11, 3)|var|float64
output = func_7080(var_7081,var_7082,)
func_7083 = relay.Function([var_7081,var_7082,], output)
mutated_mod['func_7083'] = func_7083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2547_call = mod.get_global_var('func_2547')
func_2549_call = mutated_mod.get_global_var('func_2549')
call_7096 = func_2547_call()
call_7097 = func_2547_call()
output = call_7096
output2 = call_7097
func_7116 = relay.Function([], output)
mod['func_7116'] = func_7116
mod = relay.transform.InferType()(mod)
output = func_7116()
func_7117 = relay.Function([], output)
mutated_mod['func_7117'] = func_7117
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4796_call = mod.get_global_var('func_4796')
func_4798_call = mutated_mod.get_global_var('func_4798')
call_7157 = relay.TupleGetItem(func_4796_call(), 0)
call_7158 = relay.TupleGetItem(func_4798_call(), 0)
output = relay.Tuple([call_7157,])
output2 = relay.Tuple([call_7158,])
func_7159 = relay.Function([], output)
mod['func_7159'] = func_7159
mod = relay.transform.InferType()(mod)
mutated_mod['func_7159'] = func_7159
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mutated_mod.get_global_var('func_7159')
call_7160 = func_7159_call()
output = call_7160
func_7161 = relay.Function([], output)
mutated_mod['func_7161'] = func_7161
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7274 = relay.var("var_7274", dtype = "int64", shape = (14, 11, 2))#candidate|7274|(14, 11, 2)|var|int64
var_7275 = relay.var("var_7275", dtype = "int64", shape = (14, 11, 2))#candidate|7275|(14, 11, 2)|var|int64
bop_7276 = relay.bitwise_xor(var_7274.astype('int64'), relay.reshape(var_7275.astype('int64'), relay.shape_of(var_7274))) # shape=(14, 11, 2)
func_3036_call = mod.get_global_var('func_3036')
func_3038_call = mutated_mod.get_global_var('func_3038')
call_7280 = relay.TupleGetItem(func_3036_call(), 0)
call_7281 = relay.TupleGetItem(func_3038_call(), 0)
bop_7289 = relay.not_equal(var_7274.astype('bool'), relay.reshape(bop_7276.astype('bool'), relay.shape_of(var_7274))) # shape=(14, 11, 2)
output = relay.Tuple([call_7280,bop_7289,])
output2 = relay.Tuple([call_7281,bop_7289,])
func_7292 = relay.Function([var_7274,var_7275,], output)
mod['func_7292'] = func_7292
mod = relay.transform.InferType()(mod)
mutated_mod['func_7292'] = func_7292
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7292_call = mutated_mod.get_global_var('func_7292')
var_7294 = relay.var("var_7294", dtype = "int64", shape = (14, 11, 2))#candidate|7294|(14, 11, 2)|var|int64
var_7295 = relay.var("var_7295", dtype = "int64", shape = (14, 11, 2))#candidate|7295|(14, 11, 2)|var|int64
call_7293 = func_7292_call(var_7294,var_7295,)
output = call_7293
func_7296 = relay.Function([var_7294,var_7295,], output)
mutated_mod['func_7296'] = func_7296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5523_call = mod.get_global_var('func_5523')
func_5525_call = mutated_mod.get_global_var('func_5525')
call_7310 = relay.TupleGetItem(func_5523_call(), 0)
call_7311 = relay.TupleGetItem(func_5525_call(), 0)
output = relay.Tuple([call_7310,])
output2 = relay.Tuple([call_7311,])
func_7329 = relay.Function([], output)
mod['func_7329'] = func_7329
mod = relay.transform.InferType()(mod)
output = func_7329()
func_7330 = relay.Function([], output)
mutated_mod['func_7330'] = func_7330
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7021_call = mod.get_global_var('func_7021')
func_7023_call = mutated_mod.get_global_var('func_7023')
call_7355 = relay.TupleGetItem(func_7021_call(), 1)
call_7356 = relay.TupleGetItem(func_7023_call(), 1)
func_4041_call = mod.get_global_var('func_4041')
func_4042_call = mutated_mod.get_global_var('func_4042')
call_7362 = relay.TupleGetItem(func_4041_call(), 0)
call_7363 = relay.TupleGetItem(func_4042_call(), 0)
output = relay.Tuple([call_7355,call_7362,])
output2 = relay.Tuple([call_7356,call_7363,])
func_7375 = relay.Function([], output)
mod['func_7375'] = func_7375
mod = relay.transform.InferType()(mod)
output = func_7375()
func_7376 = relay.Function([], output)
mutated_mod['func_7376'] = func_7376
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7387 = relay.const([[[-4,1,2,-4,4,3,7,7,-6,8],[6,-1,7,-1,-9,-7,3,-4,-5,-6],[-2,1,4,-1,-3,-4,8,-3,1,4],[-6,4,8,-4,8,-2,-10,-10,-8,-9],[-3,-2,-8,-4,7,-8,10,2,-4,10],[6,-2,2,-3,6,-3,-2,-8,8,-9],[3,-7,1,-10,6,7,-2,8,-3,-8],[2,-8,4,3,9,8,9,-4,5,-5],[5,-4,-1,3,-5,2,2,-10,-5,10],[-6,7,-4,-10,-6,1,-7,8,-9,-3],[-2,10,5,2,-6,8,-3,-9,-6,5]],[[4,-3,10,10,-2,4,9,10,5,-6],[6,-2,8,5,2,8,-5,6,10,-5],[-10,8,2,-5,-10,9,-4,-5,4,-8],[10,-2,-7,-2,-8,-1,7,-10,-5,-7],[6,1,7,-6,-7,-9,10,-2,10,4],[-1,8,4,9,3,-4,-2,-2,-4,3],[-3,-6,2,2,2,-1,2,-10,-7,6],[5,-10,-7,-7,1,10,-10,8,4,7],[-7,10,-10,-6,1,9,-3,2,-1,1],[-1,-7,9,5,7,-1,2,6,2,-1],[5,9,-8,8,-2,-3,-1,-3,8,-4]],[[-2,1,-6,10,-10,-3,2,5,-2,1],[-3,8,7,-6,1,-7,-5,-9,-5,1],[1,-2,-5,-2,3,3,-10,-2,2,9],[8,-6,-6,5,5,9,-1,8,-10,-5],[6,9,-10,-10,-8,8,8,-8,1,6],[-1,-2,7,-8,-10,10,-2,-1,-1,-7],[-1,5,-8,-4,8,5,-6,-2,6,-10],[7,-2,2,-3,4,3,4,-7,-3,-3],[2,2,6,-10,8,-9,-1,-3,-6,-7],[-6,-8,-10,-3,7,-6,4,4,4,2],[-4,-4,-6,10,-3,2,7,10,-6,-10]],[[10,1,-4,6,9,-9,-1,-7,-1,-8],[-4,-4,2,-6,-6,3,-4,10,1,7],[5,2,8,2,-6,4,3,-9,-1,-7],[-5,2,7,9,-9,-6,2,-10,-7,2],[5,1,3,2,9,8,10,-3,-6,-2],[1,-9,8,-5,-2,-8,2,-2,1,6],[5,-4,-8,1,9,8,3,-5,7,-6],[7,-5,-3,-6,4,4,8,2,3,9],[-9,4,-4,-3,-8,-9,2,8,2,-10],[5,-4,10,-8,-1,8,4,2,-10,-7],[3,-7,-2,10,8,10,4,6,-2,-8]],[[3,-3,-8,5,9,8,9,-8,-2,-5],[-8,6,9,-7,-8,7,1,-8,-6,-6],[-4,8,-2,4,-5,-6,2,-7,4,5],[9,3,2,6,4,-5,-8,2,1,8],[3,-1,6,9,3,5,-5,-1,-2,7],[1,-4,6,1,-4,-3,2,3,5,-9],[-7,10,5,-1,8,-2,-1,-8,-4,4],[5,-6,-5,-5,2,-9,-10,-1,10,-1],[1,7,-10,10,-3,4,4,-5,9,-7],[7,2,-5,-4,4,-5,-1,-6,7,-6],[10,8,-10,-3,6,1,-8,-3,-5,-9]],[[-6,-5,-5,7,7,-2,-3,-3,7,3],[-5,-9,7,-7,-2,-3,-9,3,-9,7],[6,-5,4,-4,-3,4,-3,-5,4,-5],[6,-5,8,10,10,5,9,-7,-9,3],[7,-2,-10,-3,8,-3,7,9,7,3],[9,3,8,-2,-10,9,-4,-10,-7,-3],[2,-9,-5,4,-10,-7,-5,-10,2,-9],[8,-2,8,-9,6,2,-9,8,-1,-5],[-9,1,-5,-6,2,-1,-3,5,6,8],[7,1,1,9,2,-3,8,-5,-5,-10],[-8,1,6,3,-9,8,-3,3,10,7]],[[8,3,6,-9,-2,-9,-1,-2,-6,3],[-7,5,-1,5,-2,3,2,6,-7,8],[3,8,10,3,6,-3,-6,-3,7,-8],[2,-9,-1,-2,-9,8,10,7,7,-9],[-5,-3,3,8,8,8,-9,-2,-3,7],[-7,-3,-2,-8,-2,9,9,8,10,1],[4,-7,8,3,4,-3,-6,7,-9,-4],[-1,-8,-7,-2,4,6,-5,-3,2,4],[8,8,-6,-2,9,-7,1,5,-4,6],[2,-8,-4,-10,6,2,-3,-8,5,-5],[-7,9,8,5,-10,-9,-10,-9,-9,1]],[[-5,1,-5,-9,2,7,8,7,-9,-9],[-1,1,-9,-8,-1,6,-3,-4,-8,9],[10,-9,-3,8,7,10,8,-3,-2,-5],[-1,-9,-10,3,7,-9,-1,9,5,5],[-5,-1,-6,1,-5,-1,7,-3,2,-6],[9,7,-2,-3,4,-8,-2,-3,5,-6],[-10,9,6,6,-7,6,6,7,10,6],[9,-2,-4,1,8,-2,-6,-6,2,-8],[-4,6,-8,9,-4,-3,-8,-5,-9,-6],[6,5,-8,4,-5,-10,7,-9,8,6],[-1,-4,-3,5,-7,-10,8,7,-8,-7]],[[-5,2,-2,8,6,-1,-10,-8,-6,-6],[-4,10,-6,8,-9,-7,-2,4,-9,-6],[-6,-4,6,3,6,6,8,2,2,7],[4,4,4,-4,2,-8,10,9,5,-7],[1,-3,-9,2,4,5,-5,8,8,-10],[5,-3,1,1,1,-7,3,-3,4,8],[-7,7,-1,-1,10,-1,3,-8,-3,-10],[-8,9,8,6,1,9,-4,-2,-5,3],[-8,8,8,6,6,-8,-3,-6,10,3],[7,-1,-2,7,6,3,-4,-5,-9,-4],[7,9,-10,10,-8,-3,-7,-7,5,-4]],[[-4,7,10,-10,3,3,-5,-9,-7,5],[4,-2,2,7,3,-10,-2,5,-1,8],[9,5,4,-9,4,10,-3,8,4,-5],[-1,-4,-4,-5,-5,10,-4,10,-10,9],[-4,-6,1,-4,-1,2,4,7,6,-2],[4,-5,-8,6,-3,-5,-4,-5,5,2],[8,10,-1,-9,-8,7,6,10,-6,-3],[-1,-5,-7,2,10,10,1,10,-8,8],[-4,7,9,-4,-6,-2,-5,-4,7,-6],[1,3,-7,-3,-3,-10,9,7,-7,-1],[-7,-9,-1,-7,-8,-3,1,2,-10,1]],[[-7,-2,-10,-4,-9,-3,-9,-1,5,7],[10,-6,-8,9,3,-3,2,-9,-6,3],[-8,-4,-9,9,10,9,8,3,4,-3],[-1,-9,6,7,-1,-7,-7,9,-5,-1],[-4,7,8,5,-1,2,9,-6,1,6],[6,-2,6,10,-8,6,-5,-4,-4,-6],[-9,6,-10,-2,-6,3,-4,6,8,1],[8,8,4,-6,-2,1,1,-1,10,3],[6,7,-3,-9,-8,7,-2,1,8,4],[10,-3,-3,-3,2,8,-2,-7,7,-7],[8,2,10,6,1,-10,-5,3,9,-2]],[[3,-6,-4,-1,-9,-5,4,-9,-1,2],[6,4,-5,1,4,-3,-5,4,-2,-10],[5,9,5,2,2,-7,-6,-2,-7,-2],[-8,7,-6,3,-8,-8,-10,-10,5,-8],[-8,5,-5,4,10,4,3,-1,4,6],[7,-5,-10,-10,9,-4,-5,10,6,2],[1,5,-9,4,10,-5,5,4,5,2],[3,8,5,-8,3,8,-9,-8,1,10],[-4,-10,5,2,-9,-1,-10,-2,8,-5],[-1,-4,8,-9,-6,2,-5,6,-6,7],[5,-8,8,10,-10,-8,-10,3,6,8]],[[-10,1,3,-5,-10,-4,2,-9,-4,10],[-6,6,1,-3,-1,1,1,9,1,-3],[-8,-5,-1,-5,-5,-8,3,6,-5,-3],[2,-2,-5,-9,4,-7,-8,-5,9,3],[-2,7,-9,1,6,2,9,-2,-2,-1],[2,-1,2,-1,-3,-5,7,4,4,10],[1,-7,6,5,2,-6,-5,7,10,-6],[-2,2,2,-5,-1,-8,9,-1,7,-2],[-1,5,5,1,2,2,10,-5,-8,-9],[-7,1,4,-10,-9,10,-1,8,-9,-5],[8,-4,1,-1,2,-10,-8,-7,-5,3]],[[-7,6,2,-6,-4,-1,-8,3,6,8],[7,-9,7,9,-10,7,-9,-7,-8,-9],[6,7,5,-1,5,1,7,8,3,-7],[-2,-2,9,2,-4,2,-1,4,-10,-8],[-4,8,8,-7,-5,-6,9,8,9,5],[-10,-3,-5,-10,-2,9,-9,9,-5,8],[1,7,-4,-7,-6,6,1,-9,-8,1],[-9,-10,-1,6,5,6,-8,7,-1,-4],[-1,4,-2,8,2,-2,4,-9,-10,9],[-9,-5,-9,2,9,8,8,1,3,-2],[1,-7,-7,-9,3,4,4,-2,2,-4]]], dtype = "uint64")#candidate|7387|(14, 11, 10)|const|uint64
var_7388 = relay.var("var_7388", dtype = "uint64", shape = (14, 11, 10))#candidate|7388|(14, 11, 10)|var|uint64
bop_7389 = relay.right_shift(const_7387.astype('uint64'), relay.reshape(var_7388.astype('uint64'), relay.shape_of(const_7387))) # shape=(14, 11, 10)
output = bop_7389
output2 = bop_7389
func_7411 = relay.Function([var_7388,], output)
mod['func_7411'] = func_7411
mod = relay.transform.InferType()(mod)
mutated_mod['func_7411'] = func_7411
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7412 = relay.var("var_7412", dtype = "uint64", shape = (14, 11, 10))#candidate|7412|(14, 11, 10)|var|uint64
func_7411_call = mutated_mod.get_global_var('func_7411')
call_7413 = func_7411_call(var_7412)
output = call_7413
func_7414 = relay.Function([var_7412], output)
mutated_mod['func_7414'] = func_7414
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7424 = relay.var("var_7424", dtype = "float32", shape = (15, 15, 11))#candidate|7424|(15, 15, 11)|var|float32
uop_7425 = relay.log(var_7424.astype('float32')) # shape=(15, 15, 11)
func_2573_call = mod.get_global_var('func_2573')
func_2576_call = mutated_mod.get_global_var('func_2576')
var_7448 = relay.var("var_7448", dtype = "uint16", shape = (40,))#candidate|7448|(40,)|var|uint16
call_7447 = relay.TupleGetItem(func_2573_call(relay.reshape(var_7448.astype('uint16'), [5, 2, 4]), relay.reshape(var_7448.astype('uint16'), [5, 2, 4]), ), 0)
call_7449 = relay.TupleGetItem(func_2576_call(relay.reshape(var_7448.astype('uint16'), [5, 2, 4]), relay.reshape(var_7448.astype('uint16'), [5, 2, 4]), ), 0)
func_4721_call = mod.get_global_var('func_4721')
func_4724_call = mutated_mod.get_global_var('func_4724')
var_7455 = relay.var("var_7455", dtype = "uint16", shape = (560,))#candidate|7455|(560,)|var|uint16
call_7454 = relay.TupleGetItem(func_4721_call(relay.reshape(var_7455.astype('uint16'), [14, 8, 5]), relay.reshape(var_7455.astype('uint16'), [14, 8, 5]), ), 0)
call_7456 = relay.TupleGetItem(func_4724_call(relay.reshape(var_7455.astype('uint16'), [14, 8, 5]), relay.reshape(var_7455.astype('uint16'), [14, 8, 5]), ), 0)
bop_7465 = relay.floor_divide(uop_7425.astype('float64'), relay.reshape(var_7424.astype('float64'), relay.shape_of(uop_7425))) # shape=(15, 15, 11)
output = relay.Tuple([call_7447,var_7448,call_7454,var_7455,bop_7465,])
output2 = relay.Tuple([call_7449,var_7448,call_7456,var_7455,bop_7465,])
func_7487 = relay.Function([var_7424,var_7448,var_7455,], output)
mod['func_7487'] = func_7487
mod = relay.transform.InferType()(mod)
mutated_mod['func_7487'] = func_7487
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7487_call = mutated_mod.get_global_var('func_7487')
var_7489 = relay.var("var_7489", dtype = "float32", shape = (15, 15, 11))#candidate|7489|(15, 15, 11)|var|float32
var_7490 = relay.var("var_7490", dtype = "uint16", shape = (40,))#candidate|7490|(40,)|var|uint16
var_7491 = relay.var("var_7491", dtype = "uint16", shape = (560,))#candidate|7491|(560,)|var|uint16
call_7488 = func_7487_call(var_7489,var_7490,var_7491,)
output = call_7488
func_7492 = relay.Function([var_7489,var_7490,var_7491,], output)
mutated_mod['func_7492'] = func_7492
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2707_call = mod.get_global_var('func_2707')
func_2708_call = mutated_mod.get_global_var('func_2708')
call_7509 = relay.TupleGetItem(func_2707_call(), 0)
call_7510 = relay.TupleGetItem(func_2708_call(), 0)
func_853_call = mod.get_global_var('func_853')
func_857_call = mutated_mod.get_global_var('func_857')
const_7528 = relay.const([True,True,True,False,False,True,True,False,False,True,True,True,False,True,False,False,True,True,False,True,True,True,False,False,False,True,False,True,True,False,True,False,True,True,False,True,False,True,True,True,True,True,False,True,False,False,True,True,True,True,False,False,False,False,False,True,False,True,False,True,True,True,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,False,True,True,False,False,True,False,False,True,False,True,True,False,True,False,False,True,False,True,False,False,True,True,False,False,True,True,False,True,False,True,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,False,False,True,False,False,True,True,False,False,True,False,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,True,True,True,False,False,True,False,True,True,True,False,True,True,False,False,False,False,False,False,False,False,False,True,False,False,False,True,False,True,True,False,True,True,True,True,True,False,True,False,True,True,False,True,False,False,True,False,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,False,False,True,True,False,False,True,False,True,True,True,True,True,False,True,False,False,True,False,False,False,False,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,True,False,False,True,True,False,True,False,True,True,True,True,False,False,False,True,False,False,True,False,False,True,False,True,False,True,True,False,False,True,False,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,True,True,False,False,True,True,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,False,True,False,False,False,True,False,False,True,False,True,False,False,True,False,True,True,True,False,False,False,True,False,False,False,True,False,False,False,True,True,False,False,True,False,True,False,False,True,False,False,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,False,True,False,False,False,True,False,True,False,True,False,True,True,True,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,True,True,True,False,True,False,True,False,True,True,True,True,False,True,True,False,False,True,False,False,True,False,False,True,False,False,True,False,False,True,True,True,False,False,True,True,True,True,True,False,False,False,True,True,True,False,True,False,True,True,False,False,True,False,False,True,False,True,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,False,True,True,True,False,False,False,True,False,False,False,True,True,True,False,True,True,False,True,False,False,False,True,True,False,True,True,False,True,True,True,True,True,True,False,True,True,False,True,True,False,True,False,True,True,False,False,False,True,True,False,True,True,False,True,True,True,False,True,False,True,True,True,False,False,False,False,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,False,False,False,True,True,False,True,True,False,False,False,False,True,False,False,True,True,False,False,True,True,False,False,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,False,True,True,False,True,False,False,True,True,True,False,True,False,True,True,True,True,True,True,False,True,True,False,False,False,True,True,True,False,False,False,False,True,True,False,True,True,False,False,False,True,False,True,False,False,False,True,True,False,False,False,True,True,False,True,True,True,False,True,False,False,True,False,False,False,True,True,True,True,True,True,True,False,False,True,False,False,False,True,False,False,True,False,True,True,True,True,True,False,False,True,False,True,True,False,True,False,True,False,False,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,True,True,False,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,False,False,False,True,False,False,True,False,False,True,False,False,True,True,False,True,True,True,True,True,False,False,True,True,True,True,True,True,False,True,True,False,True,False,True,True,False,True,True,True,False,True,True,True,True,True,True,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,False,False,False,True,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,True,True,False,True,True,False,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,True,True,True,False,True,True,True,False,True,False,True,False,True,True,False,False,False,True,True,True,False,True,True,False,False,False,True,False,False,False,False,True,False,True,True,True,True,False,True,False,False,True,False,False,False,True,False,False,False,True,False,False,False,True,False,False,True,False,False,True,False,True,True,False,False,False,True,True,True,True,False,True,False,False,True,False,True,True,False,True,False,False,True,True,False,False,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,True,True,True,False,True,True,False,False,False,False,False,False,True,False,False,True,False,False,True,True,False,False,True,True,True,True,False,False,True,True,True,False,True,True,False,False,False,False,False,False,True,True,False,False,True,False,True,True,False,False,False,True,False,True,False,False,True,False,False,False,False,False,False,True,True,False,True,True,True,False,True,False,True,False,False,False,False,False,False,True,False,False,False,True,False,False,True,True,True,True,True,True,True,True,False,False,True,True,True,False,True,True,False,False,True,True,True,True,True,True,False,True,True,False,False,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,False,True,False,True,False,False,False,False,True,True,True,False,False,False,False,True,True,True,False,False,False,True,False,False,True,False,False,True,True,True,True,True,False,True,False,True,False,True,True,True,False,False,True,False,False,True,False,False,False,False,False,False,True,False,False,False,False,True,True,False,False,True,True,False,False,False,True,False,True,False,True,True,True,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,False,False,True,True,True,True,False,True,True,False,False,True,False,True,False,False,True,False,False,False,True,True,False,True,True,False,False,True,True,False,False,False,False,True,True,False,False,True,True,True,False,False,True,False,True,True,False,False,True,False,True,True,False,True,False,True,True,False,False,True,True,False,True,True,True,False,True,True,False,True,True,False,True,False,False,False,True,False,True,True,True,False,False,True,True,False,False,False,False,False,True,True,False,False,True,True,True,False,False,True,True,True,True,False,True,True,True,True,True,False,False,False,False,False,True,True,False,True,True,False,True,True,False,True,True,True,False,False,True,True,True,True,False,False,True,False,True,False,True,True,False,True,True,False,True,True,True,True,False,True,True,False,False,True,True,True,False,False,False,False,True,True,True,True,False,False,True,True,True,False,False,True,True,False,False,False,True,True,True,True,False,True,True,False,False,True,False,True,True,False,True,False,True,False,True,True,False,True,True,True,True,True,True,True,True,True,True,False,False,True,False,True,False,True,True,False,False,True,True,True,True,False,True,True,False,True,False,True,False,True,False,True,True,True,False,False,False,False,True,True,True,True,False,True,False,True], dtype = "bool")#candidate|7528|(1456,)|const|bool
call_7527 = relay.TupleGetItem(func_853_call(relay.reshape(const_7528.astype('bool'), [13, 7, 16]), relay.reshape(const_7528.astype('bool'), [13, 7, 16]), ), 0)
call_7529 = relay.TupleGetItem(func_857_call(relay.reshape(const_7528.astype('bool'), [13, 7, 16]), relay.reshape(const_7528.astype('bool'), [13, 7, 16]), ), 0)
output = relay.Tuple([call_7509,call_7527,const_7528,])
output2 = relay.Tuple([call_7510,call_7529,const_7528,])
func_7550 = relay.Function([], output)
mod['func_7550'] = func_7550
mod = relay.transform.InferType()(mod)
output = func_7550()
func_7551 = relay.Function([], output)
mutated_mod['func_7551'] = func_7551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7159_call = mod.get_global_var('func_7159')
func_7161_call = mutated_mod.get_global_var('func_7161')
call_7556 = relay.TupleGetItem(func_7159_call(), 0)
call_7557 = relay.TupleGetItem(func_7161_call(), 0)
func_4721_call = mod.get_global_var('func_4721')
func_4724_call = mutated_mod.get_global_var('func_4724')
const_7568 = relay.const([[5,5,-8,-10,9,-10,10,-8,9,-5,-7,4,-9,-5,-6,4,6,-9,-4,3,-8,-2,1,5,3,4,2,8,-8,-2,10,8,-5,10,-7,3,-8,-4,-2,8,-3,-9,-4,-8,2,9,-4,-9,5,10,-2,9,-7,10,-4,-9,3,-1,5,-9,9,-10,-6,-4,8,-5,7,4,-7,-5],[3,9,10,-4,9,-3,-3,3,-1,10,-3,2,1,3,-10,-10,-2,8,-8,8,-6,-8,-3,-10,-10,-4,7,2,-3,7,-7,6,-7,3,9,-3,-2,5,3,-10,6,-5,-1,3,4,-7,9,10,8,-3,7,-1,8,6,1,-4,1,2,-8,8,-8,-5,-6,5,10,-8,-4,8,7,3],[2,-7,-7,-7,-5,-7,7,2,-8,-7,4,5,-6,-10,-7,-1,10,-1,6,-2,-10,5,-10,1,1,6,3,3,-6,-4,-6,1,-2,3,-10,-10,5,-10,-2,4,-8,9,2,3,-7,-1,2,10,-6,-4,1,7,-9,10,-7,-5,5,-6,-9,6,-4,10,-1,-9,-7,-3,9,2,-6,-9],[9,6,1,-2,9,-6,-7,10,-9,4,4,-4,-5,10,1,4,5,-5,-4,-7,-4,-7,-1,8,-7,-8,8,-1,10,-6,-3,2,-2,6,-1,10,-8,-6,-3,-1,-7,-1,-10,-9,4,-1,8,6,-10,6,5,-9,-3,4,-9,6,3,-10,10,1,-5,-2,6,2,8,7,4,-8,1,4],[-8,-8,10,2,-7,5,-5,-4,-2,-7,4,6,10,-6,-8,2,1,-5,-8,-10,-9,-7,-1,-7,7,3,-10,1,5,-2,8,-10,-4,9,-3,-6,-5,9,6,-8,10,6,2,-9,-7,-1,4,3,6,9,2,-2,-2,4,6,3,-5,5,8,-4,6,-7,7,-10,1,-2,7,-3,-4,-7],[9,6,8,-1,7,9,-3,4,6,2,-3,2,8,-9,2,-3,-5,-7,2,9,-7,3,-5,-9,10,8,-8,5,6,8,-3,9,10,1,5,-1,8,-2,10,-4,5,-8,-2,8,-9,8,-7,-10,-4,-1,10,-1,6,1,-5,8,7,-2,9,9,-8,1,-3,-4,-3,5,-5,-2,-2,-8],[-8,-8,2,-5,9,10,10,-5,-4,1,-4,-1,-5,-1,-9,-3,-5,1,-10,-8,-2,-8,-4,7,-10,5,7,2,-10,8,-1,-6,9,-4,6,9,4,2,8,4,-8,-3,-5,-6,9,-6,-2,-7,-2,1,4,-7,7,4,9,-7,-9,3,-9,-10,-2,1,9,-8,-10,8,-10,2,-4,-5],[8,-3,2,10,-6,10,-5,3,-10,4,9,3,6,-7,6,7,-1,1,-8,-7,-1,10,9,-1,-4,8,-6,-3,10,7,9,10,-4,-7,1,-7,-2,-10,2,-9,-4,-10,-10,5,2,-6,7,2,8,-6,-5,3,9,10,3,-8,8,1,2,10,9,-6,1,-8,9,-9,-6,-4,6,-6]], dtype = "uint16")#candidate|7568|(8, 70)|const|uint16
call_7567 = relay.TupleGetItem(func_4721_call(relay.reshape(const_7568.astype('uint16'), [14, 8, 5]), relay.reshape(const_7568.astype('uint16'), [14, 8, 5]), ), 0)
call_7569 = relay.TupleGetItem(func_4724_call(relay.reshape(const_7568.astype('uint16'), [14, 8, 5]), relay.reshape(const_7568.astype('uint16'), [14, 8, 5]), ), 0)
func_6922_call = mod.get_global_var('func_6922')
func_6924_call = mutated_mod.get_global_var('func_6924')
var_7580 = relay.var("var_7580", dtype = "int32", shape = (1764,))#candidate|7580|(1764,)|var|int32
call_7579 = relay.TupleGetItem(func_6922_call(relay.reshape(var_7580.astype('int32'), [1764, 1])), 2)
call_7581 = relay.TupleGetItem(func_6924_call(relay.reshape(var_7580.astype('int32'), [1764, 1])), 2)
bop_7583 = relay.add(call_7567.astype('uint64'), relay.reshape(const_7568.astype('uint64'), relay.shape_of(call_7567))) # shape=(14, 8, 5)
bop_7586 = relay.add(call_7569.astype('uint64'), relay.reshape(const_7568.astype('uint64'), relay.shape_of(call_7569))) # shape=(14, 8, 5)
func_7329_call = mod.get_global_var('func_7329')
func_7330_call = mutated_mod.get_global_var('func_7330')
call_7589 = relay.TupleGetItem(func_7329_call(), 0)
call_7590 = relay.TupleGetItem(func_7330_call(), 0)
func_6206_call = mod.get_global_var('func_6206')
func_6209_call = mutated_mod.get_global_var('func_6209')
var_7592 = relay.var("var_7592", dtype = "float32", shape = (462,))#candidate|7592|(462,)|var|float32
call_7591 = relay.TupleGetItem(func_6206_call(relay.reshape(var_7592.astype('float32'), [6, 7, 11]), relay.reshape(var_7592.astype('float32'), [6, 7, 11]), ), 0)
call_7593 = relay.TupleGetItem(func_6209_call(relay.reshape(var_7592.astype('float32'), [6, 7, 11]), relay.reshape(var_7592.astype('float32'), [6, 7, 11]), ), 0)
output = relay.Tuple([call_7556,call_7579,var_7580,bop_7583,call_7589,call_7591,var_7592,])
output2 = relay.Tuple([call_7557,call_7581,var_7580,bop_7586,call_7590,call_7593,var_7592,])
func_7600 = relay.Function([var_7580,var_7592,], output)
mod['func_7600'] = func_7600
mod = relay.transform.InferType()(mod)
mutated_mod['func_7600'] = func_7600
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7600_call = mutated_mod.get_global_var('func_7600')
var_7602 = relay.var("var_7602", dtype = "int32", shape = (1764,))#candidate|7602|(1764,)|var|int32
var_7603 = relay.var("var_7603", dtype = "float32", shape = (462,))#candidate|7603|(462,)|var|float32
call_7601 = func_7600_call(var_7602,var_7603,)
output = call_7601
func_7604 = relay.Function([var_7602,var_7603,], output)
mutated_mod['func_7604'] = func_7604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7116_call = mod.get_global_var('func_7116')
func_7117_call = mutated_mod.get_global_var('func_7117')
call_7613 = func_7116_call()
call_7614 = func_7116_call()
func_6688_call = mod.get_global_var('func_6688')
func_6691_call = mutated_mod.get_global_var('func_6691')
const_7621 = relay.const(7, dtype = "uint64")#candidate|7621|()|const|uint64
call_7620 = relay.TupleGetItem(func_6688_call(relay.reshape(const_7621.astype('uint64'), [])), 0)
call_7622 = relay.TupleGetItem(func_6691_call(relay.reshape(const_7621.astype('uint64'), [])), 0)
func_2531_call = mod.get_global_var('func_2531')
func_2534_call = mutated_mod.get_global_var('func_2534')
const_7625 = relay.const([-8,-9,8,5,-8,5,-7,-4,3,8,-7,5,7,-1,-3,-4,-5,-1,8,10,-9,2,5,2,7,7,5,3,-9,-10,-3,7,-9,8,4,-5,-4,-1,-5,6,-3,8,-4,1,-5,10,-9,-3,-5,8,-2,4,-2,-4,2,-8,4,-4,-7,4,5,-10,-10,5,-6,7,-7,-4,10,3,10,6,7,2,4,-6,9,5,10,7,4,4,6,10,7,-7,-7,3,-2,10,3,5,3,-3,2,9,-3,9,2,-9,-7,6,-1,9,-3,9,6,-8,-8,2,-1,5,-5,-7,-4,-5,-3,4,-1,-7,-4,2,4,1,-3,9,-5,9,-9,-8,-3,5,-6,-1,-3,-5,7,-9,7,1,2,-3,-6,-8,1,9,10,1,4,5,10,-6,-7,-8,-4,6,8,-4,4,-9,-9,8,-2,-7,2,-4,2,-9,-5,-5,7,5,-3,-2,-3,1,-9,1,-9,-10,10,3,-3,3,3,-7,1,6,2,-10,-8,7,9,1,-6,-1,4,-8,-10,5,3,4,3,-8,9,-10,-7,6,-4,-8,-7,-7,-4,-10,-10,-10,6,-4,5,5,-8,-10,-1,2,3,-8,-10,-5,-1,-1,-1,-3,6,-7,-1,-6,5,-5,2,4,1,10,-8,-6,-10,-2,-1,-10,-4,9,-7,-6,10,-3,-3,10,10,3,-6,8,7,9,-5,-4,-3,-4,-7,7,4,-2,8,10,3,-5,-4,5,1,1,2,-4,-10,9,1,-7,-5,-3,-2,-10,-6,-3,6,-6,-1,-4,4,-10,-8,-4,-5,5,1,-5,-1,-7,10,9,-8,-4,2,4,7,2,4,-6,6,-3,1,9,2,1,6,9,-7,-2,2,6,-1,5,-2,-6,-4,9,-6,-7,4,2,2,-3,4,-7,-1,-4,-1,10,9,4,-5,-9,3,9,6,7,-3,-6,-8,-3,-7,-3,-7,-2,7,2,-10,2,6,1,3,1,-10,2,9,-7,4,3,-3,8,2,1,-10,5,4,-2,-4,4,-8,-4,-4,3,10,-9,-10,2,-8,4,-8,6,5,-1,-8,6,3,-5,8,-7,2,1,5,-6,8,3,-8,-10,-8,5,7,-4,-9,9,4,8,-4,-10,4,-5,7,-2,8,10,-4,2,6,4,-4,5,-1,-6,3,7,3,2,10,4,8,2,1,-3,-9,-2,-2,-10,9,-9,1,10,7,-3,7,-5,-3,7,2,-3,-7,-3,-2,-3,9,3,-9,4,-6,5,4,8,-8,1,5,2,-9,-2,-9,3,-6,-8,1,2,-10,-3,-8,2,-8,-7,-9,8,3,-10,-4,2,1,-6,3,4,-9,-8,1,-5,4,-3,-3,2,10,10,-5,5,-2,2,1,1,-4,6,-10,4,5,9,-10,-3,1,4,6,5,10,-5,3,10,-4,1,-1,8,-2,-3,-5,3,-4,3,-6,-7,-6,-9,8,-4,-8,-6,10,5,8,4,-8,1,-6,1,-5,-8,3,-7,7,-3,6,5,1,8,2,7,1,-2,-6,-8,-1,1,-4,-7,2,7,9,-6,2,4,-7,3,-10,-4,-8,-5,-9,-5,7,-3,1,-8,9,-3,-7,-6,7,-4,-6,1,-1,3,5,10,-1,2,2,-4,-4,-4,3,9,1,5,2,-1,4,-10,5,10,4,10,4,6,1,2,4,-4,-3,-4,6,-7,-9,-7,8,10,3,-5,-4,-4,-5,-10,8,-5,4,-5,3,9,8,8,-7,-7,8,5,6,-8,-6,1,-4,-6,-6,-9,4,2,-3,-9,1,-1,7,-3,-5,-6,-3,6,3,-6,-2,7,2,-7,2,-7,1,1,4,-3,-7,2,5,-7,-10,5,-7,-8,-4,6,-3,6,-9,-4,-3,1,-7,1,-3,-10,3,-4,8,1,-1,5,-10,-9,-1,3,1,5,-7,10,9,2,5,-4,2,-4,-2,6,-3,-10,-8,-8,7,7,-4,-5,-6,4,-4,6,-4,8,9,-8,9,-7,-9,5,2,9,10,-10,-10,2,5,-2,6,6,4,-10,-10,-9,3,6,-8,3,8,8,8,-5,-6,1,-5,-9,-1,-9,5,-1,-3,-4,-1,-1,-10,8,-9,-2,-10,-6,10,-1,4,1,1,8,6,-5,10,-7,-4,-2,-9,-9,7,-1,3,-7,5,6,9,-8,-7,3,10,2,4,9,6,10,3,10,7,-3,-7,-6,3,1,-10,9,-6,-4,-3,-4,2,4,-9,-1,2,-7,-3,5,-1,-5,-3,-9,-3,9,-7,-7,-1,4,5,-4,-1,8,-6,-9,-1,7,9,5,8,-10,-1,4,7,-1,3,-1,-8,8,4,-10,2,-3,3,4,3,8,2,3,-10,-4,-10,7,8,4,3,-8,-3,-5,-6,10,5,-3,-10,8,3,-2,9,-2,5,8,2,-2,-5,-1,-7,2,1,-1,-4,-2,9,1,-3,6,9,-7,-9,5,-7,-7,-7,8,-6,10,6,-6,-6,-4,10,-9,3,9,5,6,-8,6,-3,7,3,-1,9,-5,-6,4,-10,-4,-8,-5,-7,-5,-3,4,5,-9,-7,7,-10,1,-3,2,7,-4,-9,8,-9,10,-1,-2,-6,-7,1,-10,-6,5,-5,1,-2,-7,-6,-8,-5,9,-3,-4,-9,-3,-5,-1,2,-10,-2,-9,10,7,8,-10,-6,-10,-9,-7,5,1,2,3,-8,3,6,6,7,-1,-1,-9,-2,-5,3,-1,3,-10,-4,9,6,3,5,9,7,8,-4,6,-5,-9,4,-1,-4,1,4,1,3,5,5,9,-7,-1,-3,-7,7,-9,5,-7,-10,8,-2,5,7,3,-5,6,-1,-1,4,-3,3,4,-1,-1,-1,5,10,-1,2,-10,8,7,3,-2,-7,9,-6,-1,6,-7,1,-2,-2,9,-9,-10,-5,6,8,-6,-4,6,8,6,1,2,-5,-4,-7,10,-4,-3,-9,8,9,-4,-8,5,-10,-1,4,3,-8,-6,-4,1,1,8,2,-7,1,-6,-2,7,1,4,-3,-5,-8,6,-1,1,-10,2,-6,-3,-2,7,9,9,4,-3,10,8,1,9,10,4,8,3,6,-4,4,-4,7,-3,7,-8,6,-3,1,-10,2,10,-9,8,1,-6,3,-10,-5,1,-8,7,6,-2,-5,-5,-6,9,-10,-3,-10,5,-10,4,-7,7,6,3,5,-7,8,7,9,-1,6,-1,2,-2,3,10,-2,9,-1,8,-8,8,6,-1,-3,7,6,-8,6,-3,-7,-10,9,5,-4,8,7,-1,1,-10,-4,-6,5,-9,5,1,-6,-8,-4,5,-7,1,8,7,-4,6,5,8,-7,4,-2,3,-8,3,6,-10,-2,7,3,-9,-4,-6,-6,-3,-3,6,-2,3,4,1,-5,-4,-4,-5,8,5,-1,-1,5,-2,10,6,-1,-1,-5,4,5,-7,1,-7,7,1,3,5,-7,-6,6,-7,3,1,-10,9,7,4,7,-6,-3,2,-10,-4,5,2,-4,-10,6,-4,-8,-4,9,2,-1,-10,-7,10,1,-4,6,10,4,-6,1,9,-4,-6,-2,9,-9,6,1,-5,2,9,-5,7,-8,2,-4,1,-5,-9,5,10,6,2,-4,2,-4,1,1,-1,-10,8,-7,1,4,-8,-9,5,-6,5,-1,3,1,9,3,-8,-4,-8,5,-2,9,-2,-10,-6,-3,6,9,1,5,-9,-1,-5,7,-5,-3,3,-9,-10,1,7,6,-8,-5,4,-1,10,4,-7,9,3,-9,5,3,-10,1,10,1,4,-1,5,3,-3,3,6,-2,-5,5,-10,5,-5,-7,6,3,5,-10,5,8,-10,10,6,-5,4,2,10,-5,-6,8,-2,5,6,-8,9,-10,10,7,3,-8,3,4,9,-6,4,8,6,3,-9,2,-8,10,-4,3,-8,6,-1,3,-2,5,-5,-9,-8,-5,-3,8,-1,9,-3,3,-1,5,3,-2,-8,-8,3,6,-2,-10,-9,-6,7,6,-6,-5,9,-1,-7,7,1,10,5,-5,8,1,6,-6,5,-6,10,-9,9,-3,-4,-4,8,-9,10,9,1,-5,-9,1,4,6,9,7,5,4,2,4,-2,10,-7,1,-1,7,9,6,5,9,5,-2,6,2,6,6,9,1,7,7,8,7,-2,-1,5,3,-6,2,4,9,-2,-9,5,8,-2,9,9,-7,1,1,8,5,10,-7,3,-6,3,5,-5,-9,8,-7,7,1,10,5,-6,3,10,-2,-5,8,-6,-5,6,8,-3,-4,-6,10,6,5,6,10,7,-10,10,8,1,-7,-9,-4,1,-5,-2,5,10,10,10,-3,1,9,1,9,5,10,2,-6,-3,-2,-6,3,-10,2,-4,-9,8,6,7,1,3,6,7,-2,5,-7,10,-6,4,10,-5,-3,-9,4,6,10,9,9,-9,8,5,-4,-5,7,2,-7,8,-2,1,-5,-1,10,-10,-8,10,-3,-9,-1,-9,6,-8,8,5,3,6,-4,-2,9,-3,-2,-2,9,-4,-8,1,-4,-8,-4,-4,8,-2,9,7,5,6,5,4,3,-6,-3,-6,-7,1,7,8], dtype = "uint64")#candidate|7625|(1728,)|const|uint64
call_7624 = func_2531_call(relay.reshape(const_7625.astype('uint64'), [16, 12, 9]), relay.reshape(const_7625.astype('uint64'), [16, 12, 9]), )
call_7626 = func_2531_call(relay.reshape(const_7625.astype('uint64'), [16, 12, 9]), relay.reshape(const_7625.astype('uint64'), [16, 12, 9]), )
func_6739_call = mod.get_global_var('func_6739')
func_6741_call = mutated_mod.get_global_var('func_6741')
call_7637 = func_6739_call()
call_7638 = func_6739_call()
func_5628_call = mod.get_global_var('func_5628')
func_5630_call = mutated_mod.get_global_var('func_5630')
call_7647 = relay.TupleGetItem(func_5628_call(), 2)
call_7648 = relay.TupleGetItem(func_5630_call(), 2)
bop_7651 = relay.right_shift(call_7620.astype('int8'), const_7621.astype('int8')) # shape=(3, 15, 1)
bop_7654 = relay.right_shift(call_7622.astype('int8'), const_7621.astype('int8')) # shape=(3, 15, 1)
func_3212_call = mod.get_global_var('func_3212')
func_3214_call = mutated_mod.get_global_var('func_3214')
call_7656 = relay.TupleGetItem(func_3212_call(), 0)
call_7657 = relay.TupleGetItem(func_3214_call(), 0)
uop_7670 = relay.rsqrt(bop_7651.astype('float64')) # shape=(3, 15, 1)
uop_7672 = relay.rsqrt(bop_7654.astype('float64')) # shape=(3, 15, 1)
output = relay.Tuple([call_7613,call_7624,const_7625,call_7637,call_7647,call_7656,uop_7670,])
output2 = relay.Tuple([call_7614,call_7626,const_7625,call_7638,call_7648,call_7657,uop_7672,])
func_7684 = relay.Function([], output)
mod['func_7684'] = func_7684
mod = relay.transform.InferType()(mod)
output = func_7684()
func_7685 = relay.Function([], output)
mutated_mod['func_7685'] = func_7685
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2732_call = mod.get_global_var('func_2732')
func_2734_call = mutated_mod.get_global_var('func_2734')
call_7716 = func_2732_call()
call_7717 = func_2732_call()
output = relay.Tuple([call_7716,])
output2 = relay.Tuple([call_7717,])
func_7722 = relay.Function([], output)
mod['func_7722'] = func_7722
mod = relay.transform.InferType()(mod)
mutated_mod['func_7722'] = func_7722
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7722_call = mutated_mod.get_global_var('func_7722')
call_7723 = func_7722_call()
output = call_7723
func_7724 = relay.Function([], output)
mutated_mod['func_7724'] = func_7724
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7550_call = mod.get_global_var('func_7550')
func_7551_call = mutated_mod.get_global_var('func_7551')
call_7735 = relay.TupleGetItem(func_7550_call(), 0)
call_7736 = relay.TupleGetItem(func_7551_call(), 0)
output = relay.Tuple([call_7735,])
output2 = relay.Tuple([call_7736,])
func_7742 = relay.Function([], output)
mod['func_7742'] = func_7742
mod = relay.transform.InferType()(mod)
mutated_mod['func_7742'] = func_7742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7742_call = mutated_mod.get_global_var('func_7742')
call_7743 = func_7742_call()
output = call_7743
func_7744 = relay.Function([], output)
mutated_mod['func_7744'] = func_7744
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2969_call = mod.get_global_var('func_2969')
func_2970_call = mutated_mod.get_global_var('func_2970')
call_7798 = relay.TupleGetItem(func_2969_call(), 0)
call_7799 = relay.TupleGetItem(func_2970_call(), 0)
output = relay.Tuple([call_7798,])
output2 = relay.Tuple([call_7799,])
func_7813 = relay.Function([], output)
mod['func_7813'] = func_7813
mod = relay.transform.InferType()(mod)
mutated_mod['func_7813'] = func_7813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7813_call = mutated_mod.get_global_var('func_7813')
call_7814 = func_7813_call()
output = call_7814
func_7815 = relay.Function([], output)
mutated_mod['func_7815'] = func_7815
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3449_call = mod.get_global_var('func_3449')
func_3451_call = mutated_mod.get_global_var('func_3451')
call_7819 = relay.TupleGetItem(func_3449_call(), 1)
call_7820 = relay.TupleGetItem(func_3451_call(), 1)
func_6176_call = mod.get_global_var('func_6176')
func_6178_call = mutated_mod.get_global_var('func_6178')
call_7830 = relay.TupleGetItem(func_6176_call(), 0)
call_7831 = relay.TupleGetItem(func_6178_call(), 0)
output = relay.Tuple([call_7819,call_7830,])
output2 = relay.Tuple([call_7820,call_7831,])
func_7835 = relay.Function([], output)
mod['func_7835'] = func_7835
mod = relay.transform.InferType()(mod)
output = func_7835()
func_7836 = relay.Function([], output)
mutated_mod['func_7836'] = func_7836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5142_call = mod.get_global_var('func_5142')
func_5144_call = mutated_mod.get_global_var('func_5144')
call_7854 = relay.TupleGetItem(func_5142_call(), 0)
call_7855 = relay.TupleGetItem(func_5144_call(), 0)
func_502_call = mod.get_global_var('func_502')
func_507_call = mutated_mod.get_global_var('func_507')
const_7858 = relay.const([-2,6,5,-9,3,-2,-9,3,-4,-7,-5,-1,3,-2,-4,3,-5,10,-2,-10,4,-3,-1,-8,3,-6,-10,3,-10,2,-6,-10,5,3,-8,-4,5,5,4,-4,9,-5,-5,-4,5,-9,-2,4,-10,9,-9,2,10,1,1,3,5,8,-8,5,8,-6,6,2,-8,5,3,3,-7,9,10,-9,-10,7,1,3,7,-2,1,2,-4,-9,6,-10,8,10,-1,-5,8,-9,3,8,1,-4,5,-4,-2,-6,8,-1,3,-6,-2,5,10,-1,-8,-4,1,3,-5,7,-3,8,-8,8,2,-8,-3,-6,-9,-10,6,-7,-4,-4,-9,-8,3,6,5,-3,-5,1,3,5,-4,10,8,8,-8,-3,-5,-1,-5,10,-10,6,5,7,7,-2,8,-3,-9,-10,-5,-6,-2,-9,-6,8,3,3,-3,7,-2,-3,3,9,-6,3,-2,2,-7,-2,1,1,5,-3,4,-8,-3,9,6,-1,6,6,2,3,-8,-4,-6,4,-1,-10,10,-5,9,-10,3,7,-3,9,-2,7,-9,10,8,-7,-2,-5,-4,-7,6,6,-9,1,8,9,2,2,7,-7,6,5,10,4,2,-5,-7,10,-7,-9,-10,-7,-4,-6,-10,7,6,8,4,9,1,4,6,5,-4,-10,-1,-9,-5,6,-7,-3,-7,-10,-1,8,-3,-2,-8,-2,-9,9,9,-7,-4,-10,-7,5,-2], dtype = "uint8")#candidate|7858|(273,)|const|uint8
var_7859 = relay.var("var_7859", dtype = "float64", shape = (1680,))#candidate|7859|(1680,)|var|float64
const_7860 = relay.const([[3.544557,2.854352,3.108891,5.008345,-6.971152,6.791141,-7.073037,8.677667,8.213352,4.707639,2.038636,-2.962754,-3.475836,7.775579,-7.831970,3.067079,-5.245146,9.909145,-4.615769,1.709478,9.472689,1.995143,4.912381,-2.418632,-6.736965,-4.339750,5.403833,1.790947,9.683859,-1.684480,2.229952,5.377989,-3.130895,3.759288,1.555042,-3.288739,1.495769,3.050508,-9.567553,-4.105130,2.808461,2.624444,4.493491,-2.954803,4.439514,-3.100515,-9.514982,7.802432,-4.851495,3.658440,7.634742,-3.224184,-0.670624,-5.196389,6.410969,1.230191,7.872866,-1.780393,-3.439530,7.270149,5.645455,-0.908596,-3.049312,5.488393,-2.950566,-6.346604,-7.136042,4.405107,-5.213752,9.033400,-6.687614,9.604133,9.800556,-6.142684,-4.503606,-8.515733,7.683405,-1.113263,-5.160955,-4.206724,-7.238497,-8.271222,2.745973,7.043883,2.547145,-7.059586,-0.184474,-1.509857,9.248901,2.471932,-6.150053,4.508128,-6.215927,1.917214,8.244775,4.424997,7.363326,-3.016758,5.718561,-4.107322,8.140142,-8.054240,-8.053318,5.987359,4.209255,-0.976894,-6.178390,4.313943,5.699876,9.168651,-9.609463,-8.457798,8.349765,4.627904,0.177491,2.630022,-6.988768,-1.082318,-6.443629,-2.347982,-5.902985,-9.654377,-2.019914,5.147812,-9.570353,4.919174,6.724680,-9.398892,-1.227885,-9.646961,-7.489942,-4.094315,3.791088,5.236998,2.337429,-1.138520,-1.845323,-1.511834,-0.261669,-5.544569,7.554288,-7.280700,-2.258545,4.457667,-1.137548,-4.880832,8.951823,6.048077,8.780028,7.398380,-6.950309,-3.214944,-4.603691,3.891381,-2.504315,8.160224,6.465589,-3.485361,8.217330,1.438820,0.183808,-8.274463,-8.153825,-9.536673,-6.575618,-0.698131,1.899118,-9.821524,-3.616061,-1.390421,7.345685,-6.366581,1.388323,-3.408465,-7.682154,-5.217918,0.380750,-5.273317,-8.199631,8.433845,-9.130914,1.538842,-8.486860,9.525128,-6.542172,1.006558,-6.644500,-2.091468,3.270043,-9.971926,-7.330097,4.910314,1.132071,-2.290582,-6.163053,-3.654114,0.540117,-1.077767,8.378476,-0.131808,-5.837417,-8.881021,9.510741,-3.719205,2.125756,-6.946859,-4.864957,-7.674201,-7.158196,6.902569,-8.511919,5.350627,-0.446855,-1.921678,-3.754478,7.285183,-4.835284,2.006588,-7.211564,-2.670369,-4.176292,-1.123232,7.880154,-3.898301,9.314879,-3.993155,4.829742,3.352798,-4.267776,-9.314545,7.552988,7.268555,9.470293,6.627436,-6.909072,9.380907,4.195418,2.822056,-0.201206,-8.114653,-5.639665,-4.993306,-8.364904,6.424571,1.863436,2.539673,0.520269,-4.535108,2.967597,-0.101333,-9.667523,-3.772044,9.530408,-0.847058,3.310265,7.599292,7.200389,-7.414892,-9.026101,-6.639156,3.313415,-5.969131,-6.166738,2.291449,-5.821021,-3.271105,0.877185,-8.481413,-7.781843,1.554659,6.104698,3.506000,-0.953134,8.370306,2.354381,-2.700436,7.553101,6.479629,8.788520,-2.177245,6.452295,-6.259713,6.351547,9.713259,3.462736,-1.941234,-9.886079,-8.413423,6.422884,7.780558,2.249712,5.305229,-7.223235,7.654390,2.087262,9.260790,-6.927380,3.163877,8.106670,1.315105,0.755355,4.052215,-4.473565,-5.587259,8.853662,-9.451269,6.244004,-8.767094,2.933496,-7.340014,1.296491,8.940969,1.104822,0.669282,6.660019,-2.530379,-7.161123,-2.921259,7.235454,-0.867026,-6.511444,6.836214,-8.211333,3.600444,1.548024,-4.531653,-0.138529,-0.873767,2.814489,-8.095649,4.054277,4.541069,-2.060045,-6.659209,3.056176,7.352562,1.709056,8.670062,-2.035961,3.766115,-2.385069,-1.869950,0.515254,7.438767,-6.768309,-4.967340,-6.790939,-0.332996,0.978792,-7.682537,9.166377,3.728497,-5.482872,3.255634,3.592070,4.636614,-0.292951,-8.711786,-1.079257,-8.432889,1.406469,-3.538422,0.297284,9.778574,7.910176,9.069910,1.575838,-5.994784,1.186554,-4.197784,-0.911229,5.053382,2.391130,0.849640,3.484439,-5.526121,-7.313189,-3.626322,8.332055,-2.890531,8.698492,-9.956737,-2.953434,-6.960331,-5.028957,4.008471,-5.819651,2.133056,-4.560905,-9.482063,0.413968,4.638988,5.419050,9.001454,4.414298,-2.402900,5.044475,1.415521,7.504323,3.834035,-6.274626,-6.047682,7.091992,-2.705415,-5.884917,2.601034,6.991437,8.429576,-6.005718,-3.578867,0.814525,-7.697047,8.519316,-4.757406,-6.418754,-4.771688,-9.763497,7.264326,-6.091420,-1.296817,-6.638403,-2.070706,-4.657673,7.284341,-9.989439,-4.033142,-9.410171,-1.916900,-7.334124,-9.927353,0.721199,3.201071,9.229458,2.497942,-7.759055,8.280968,-0.592273,-4.645730,8.316786,8.451383,4.743891,7.845379,3.955808,3.073547,9.532694,-0.853307,-9.413964,-7.379688,-1.202581,-4.201634,4.091829,-1.908623,2.939439,-6.879126,-8.318811,2.642344,8.009666,8.280182,-6.738242,-8.006154,-9.025683,-3.697472,-2.315974,-0.323132,7.410502,4.482911,-1.092721,-4.618105,2.813855,4.594202,-7.285572,0.588962,9.571542,-9.228634,-5.282645,0.526396,3.572619,8.868164,1.719759,5.457824,-7.779238,7.503279,-5.393711,1.392699,0.172200,3.512486,9.363415,3.137745,0.908153,-2.233970,0.912954,-9.319569,-6.662608,-8.952753,0.208179,-2.670948,9.424601,7.457891,7.879998,4.115704,1.044336,-5.803086,7.752101,8.020518,-2.827906,-2.231568,-0.392638,-7.942458,6.668882,-3.999426,-9.646952,-2.129868,-0.509044,5.242707,-6.689758,-9.807887,8.614336,-1.483076,7.326108,8.319696,-8.286724,6.253045,-9.740817,6.569146,-1.651720,5.806311,-9.814496,-7.798902,4.136182,-2.120363,-4.874296,3.326108,0.844772,3.437194,9.763156,-5.373723,-0.577385,-1.241362,-4.231157,-2.437116,6.734167,0.936264,-0.905344,2.355513,-4.262741,4.919736,-6.903765,-2.987301,1.504285,-9.878937,2.502346,-1.365173,-4.040906,-7.790987,-4.424550,-9.645126,-1.642263,4.090675,2.341817,-8.035816,-1.162626,7.627405,-2.180080,-9.725662,8.752156,2.881727,-2.935983,-8.526897,-7.211650,5.516769,-9.873949,9.020754,0.785065,1.267419,7.136170,-8.350362,1.359091,-2.422671,-3.535270,3.376678,-3.126694,-5.086280,-5.338137,8.314298,9.678784,3.122100,-0.541010,1.539982,0.856783,1.345995,-2.357959,-3.720320,8.141749,-1.704269,-4.742242,0.090492,-8.056062,3.201000,-0.895734,9.996772,0.261084,9.933648,2.831265,3.817037,6.904186,7.366582,3.375434,-9.095480,3.308050,-1.102610,-3.414666,-4.058430,7.435248,-4.609236,-4.545944,9.509332,-9.950486,-6.505695,7.187403,0.242344,-1.924764,0.743260,-9.746567,-9.503628,-8.593829,0.570900,-1.918267,5.631888,5.050672,3.084799,2.860315,5.654059,-7.589812,-0.020660,-5.246378,-4.267303,-3.337200,-5.349534,7.128383,-7.715763,9.399457,8.456321,3.400218,5.325226,-5.622088,5.804872,4.214440,7.896587,-6.180021,-2.074597,8.144926,7.407020,-3.647842,5.944070,-7.969719,0.206012,3.987801,7.081841,0.616530,-5.121858,8.576321,2.756251,-3.716774,-1.956087,-0.079297,5.079187,-2.427128,-9.203011,-7.017653,-8.075168,5.351240,-4.985476,-8.184297,-7.675408,-8.359751,4.455984,-5.996150,7.902923,-3.468361,0.064940,-7.953250,-2.519030,2.146259,0.914435,-9.184344,-2.904781,1.804208,1.978847,-1.274221,4.109388,-8.499838,-2.039197,8.787796,8.326815,-7.848514,7.829712,-7.357299,9.329255,-0.436290,4.967023,-1.219338,-3.906835,3.984568,-4.864292,2.257015,-6.711688,-4.492855,-1.679765,-6.719954,8.582591,-6.322228,8.789270,0.107027,-5.784544,7.709635,-3.964942,6.029609,1.080986,-5.505278,-3.425394,0.670852,7.959063,-8.405346,-2.877266,-5.960180,2.979600,-6.495736,6.107857,2.181728,3.730382,2.235868,-5.643660,-4.044991,2.869792,2.349930,0.419531,4.828360,6.137660,-9.328320,-4.031911,6.854721,-9.109686,9.132279,2.366069,9.233502,5.550557,2.012767,-1.940523,-1.998449,-3.380735,3.731247,-0.699310,3.439505,-9.047531,1.708703,-5.263926,-5.283833,-8.642212,-7.624423,-1.749376,-6.583136,-6.103981,-2.567660,-3.462852,0.474869,-9.025609,-8.266173,3.545134,-4.954042,9.310064,-2.422778,9.697526,-4.108692,-9.074924,9.485651,9.469746,6.906980,4.938133,-6.245703,-5.126111,7.018842,-5.222391,0.139375,1.009250,-4.210468,-7.140978,-3.788619,8.082821,3.084151,6.479543,0.893666,5.551043,-4.275981,-8.738644,-8.932407,-4.916339,0.773437,0.498518,-6.138242,5.076362,8.033885,-5.626627,7.714979,9.233671,6.336314,9.887654,2.374174,8.585715,-0.209729,-0.713092,-0.891744,-9.145986,0.680254,2.972257,-8.929556,-5.809978,-7.422531,3.695919,0.973031,-2.340053,7.488156,8.603107,-5.220978,-9.558117,-4.684149,3.011330,-8.705442,-5.337403,9.638175,7.668542,-1.541277,-3.893985,-6.800261,-3.119845,-8.245167,1.484318,2.163242,-9.776449,7.381219,-5.508795,4.182269,9.425623,8.414516,8.597958,7.838252,-4.646026,8.630388,-7.804794,-7.731500,8.269804,0.249304,-1.365187,4.240863,3.970928,8.773260,-2.613755,6.217323,-9.725610,8.328130,-2.890075,8.308092,9.176792,8.717661,-6.534217,-1.354740,-1.868312,-9.545382,-1.973759,9.792800,3.980532,8.565951,4.183381,2.478580,6.426859,3.707545,0.424431,-9.752750,8.025819,-2.309074,8.365837,4.357277,-5.125623,-9.291587,7.299208,-6.280278,2.161894,-8.871403,2.755173,-7.642877,6.335636,-4.001563,-1.216043,3.219534,-3.466747,-1.897622,-9.994859,4.936385,4.625311,-5.103211,7.138608,0.076115,-8.137563,7.639284,1.396507,6.484416,4.449072,8.206760,-7.315797,-4.445856,-3.536000,5.231795,-4.560133,-2.594846,-2.744687,1.028012,7.530360,-2.059700,-0.625111,4.803106,-9.753635,-7.373374,-5.111160,4.840391,-8.734465,5.474894,-9.268475,-1.842400,8.486831,0.298380,5.232191,6.000476,6.784640,-4.564582,1.727115,-4.680673,-7.546132,-0.474230,-8.487976,-4.868522,8.162331,-0.605588,-7.700121,-2.675019,5.697086,2.842603,-3.925912,3.070618,1.076240,-4.000585,-2.475227,-3.913718,4.319759,5.893303,-9.996739,6.848367,-4.933250,-5.524680,-5.667366,-7.042335,-9.481854,-7.347040,4.357051,-7.298980,7.878687,9.195390,2.147266,5.697955,-5.059274,7.752829,-5.809137,-4.268122,-6.524576,9.493494,-8.930272,-4.859404,4.264699,2.494624,-0.918666,2.646275,-3.334191,7.549127,-0.223998,3.162113,-0.175121,-7.113888,8.702348,3.114598,3.864812,-4.648891,-0.165191,-3.121604,4.165355,-0.284610,5.226418,0.984122,3.268402,-8.058530,5.512684,-4.588042,-1.908765,-6.337007,-7.343834,2.409158,-4.993020,6.649534,-7.057610,6.115683,0.096058,0.642800,8.857173,3.272812,-1.615944,3.782059,8.851896,7.890223,-3.405860,1.193293,0.326834,-7.342830,-4.362970,-9.323099,1.017892,-7.037982,-7.620372,4.684459,-4.361947,-3.864155,-6.937542,1.236873,6.654221,0.647282,-6.457558,-6.928366,4.316469,-7.287337,-2.204259,-4.487402,-4.928704,4.263018,0.104971,-4.138761,5.656953,-2.399594,-8.211272,4.428856,-9.486413,7.781668,3.219795,-9.658405,-1.425210,-4.027414,8.696519,-2.183796,8.986065,-4.085526,9.742357,-7.882550,3.006051,-3.007514,-8.097186,-2.729991,8.783390,-6.750298,1.100915,9.197115,0.003861,4.108983,3.028733,-2.755360,3.017016,1.428671,1.147580,4.504948,-2.290819,0.949395,9.310325,9.044240,8.646861,4.363043,-0.098913,3.456034,-9.710539,-5.534250,-5.058530,-3.995201,-3.860174,-2.457617,6.498440,-2.586724,-8.350433,9.904473,9.703227,-0.493695,-0.865721,-8.084426,-0.472935,-8.097774,-4.742907,-4.284732,8.011410,-9.568032,-5.336074,1.447955,-0.249899,7.000170,2.352418,-9.589982,8.909812,-9.391294,-8.866186,-8.889267,-1.419468,7.295206,-7.030684,2.833491,-5.992257,2.889663,4.788870,-6.519959,-8.707895,-8.574139,-6.339923,8.039495,5.973343,3.206792,-2.938364,-6.325211,-6.215396,8.194576,-7.657800,-9.521401,-3.517138,5.418221,9.970347,8.645138,-0.291587,9.182529,-0.202400,-0.978969,-8.203236,4.346796,-9.091967,7.530749,6.957290,2.665764,-0.735190,-4.754170,9.970921,-2.452610,4.337399,-4.913053,6.733326,6.646558,-0.575266,8.554271,2.244276,1.914878,-1.207478,6.750896,0.690777,7.281598,-3.379159,-9.185356,-6.836840,-8.125495,-9.701876,1.518418,5.469729,3.610239,-1.828105,-7.159933,0.165614,2.442494,3.509590,1.006171,0.671093,-4.399135,-1.767296,6.734567,8.985550,6.859124,6.497003,4.746907,1.455623,-1.140388,8.476369,8.863203,2.427213,-4.544893,8.850528,0.954556,3.065152,1.912859,1.468226,-7.062644,-4.701968,-9.143640,-6.690821,-0.530987,2.827237,7.326883,-0.337155,2.215507,-6.070424,-8.311098,-5.447890,-9.440435,1.923870,6.281672,4.126317,4.226065,8.151294,5.565624,0.372763,5.228632,-6.246834,7.876487,-0.640585,-1.888411,-2.715982,-7.775077,1.906587,-8.597396,-8.404610,5.820437,5.279873,-0.088097,-2.516043,-3.930463,3.519804,-2.642514,2.261861,-6.650872,1.418925,-0.117846,3.858147,-4.412942,7.746516,3.758230,-1.025088,3.980197,6.475236,7.419591,6.660610,5.288958,2.766669,9.858061,6.640581,-9.608572,-5.065301,7.092813,-5.006930,-7.756145,-2.388787,3.279769,-3.440228,1.380931,-8.161435,-2.618437,-5.552048,3.670275,8.763347,-5.602175,-3.721132,0.756247,0.208391,5.148955,-9.853763,-1.861703,5.156268,-6.954755,-5.714944,-8.983989,-4.217822,7.349671,-7.618101,-6.642364,6.706709,7.731090,-2.708014,-1.472660,0.557593,6.421100,-4.598290,-6.754859,0.851817,3.203133]], dtype = "float32")#candidate|7860|(1, 1287)|const|float32
call_7857 = relay.TupleGetItem(func_502_call(relay.reshape(const_7858.astype('uint8'), [7, 13, 3]), relay.reshape(var_7859.astype('float64'), [1680,]), relay.reshape(const_7860.astype('float32'), [1, 1287]), ), 3)
call_7861 = relay.TupleGetItem(func_507_call(relay.reshape(const_7858.astype('uint8'), [7, 13, 3]), relay.reshape(var_7859.astype('float64'), [1680,]), relay.reshape(const_7860.astype('float32'), [1, 1287]), ), 3)
bop_7865 = relay.divide(const_7860.astype('float32'), relay.reshape(call_7857.astype('float32'), relay.shape_of(const_7860))) # shape=(1, 1287)
bop_7868 = relay.divide(const_7860.astype('float32'), relay.reshape(call_7861.astype('float32'), relay.shape_of(const_7860))) # shape=(1, 1287)
bop_7874 = relay.greater_equal(const_7860.astype('bool'), relay.reshape(bop_7865.astype('bool'), relay.shape_of(const_7860))) # shape=(1, 1287)
bop_7877 = relay.greater_equal(const_7860.astype('bool'), relay.reshape(bop_7868.astype('bool'), relay.shape_of(const_7860))) # shape=(1, 1287)
bop_7884 = relay.subtract(call_7857.astype('int32'), relay.reshape(bop_7865.astype('int32'), relay.shape_of(call_7857))) # shape=(1, 1287)
bop_7887 = relay.subtract(call_7861.astype('int32'), relay.reshape(bop_7868.astype('int32'), relay.shape_of(call_7861))) # shape=(1, 1287)
func_1244_call = mod.get_global_var('func_1244')
func_1246_call = mutated_mod.get_global_var('func_1246')
const_7889 = relay.const([False,True,False,True,False,False,False,True,False,True,False,True,False,True,True,True,False,True,False,False,False,True,True,False,False,True,False,True,True,True,False,True,False,True,False,False,True,True,False,True,False,False,False,True,True,False,False,True,True,False,False,False,False,True,False,False,False,False,True,False,True,True,True,False,False,False,False,False,True,False,True,True,False,False,False,False,False,True,True,True,True,True,True,True,True,True,True,True,False,False,True,True,False,True,True,False,True,False,False,False,False,False,True,True,False,False,True,False,True,False,True,False,False,True,False,True,False,True,False,False,False,False,False,False,True,True,False,False,True,True,False,False,True,True,True,True,True,False,True,False,False,False,True,False,True,True,True,False,False,False,False,False,False,False,False,True,False,True,True,True], dtype = "bool")#candidate|7889|(160,)|const|bool
call_7888 = relay.TupleGetItem(func_1244_call(relay.reshape(const_7889.astype('bool'), [4, 10, 4])), 0)
call_7890 = relay.TupleGetItem(func_1246_call(relay.reshape(const_7889.astype('bool'), [4, 10, 4])), 0)
uop_7891 = relay.erf(bop_7884.astype('float32')) # shape=(1, 1287)
uop_7893 = relay.erf(bop_7887.astype('float32')) # shape=(1, 1287)
output = relay.Tuple([call_7854,const_7858,var_7859,bop_7874,call_7888,const_7889,uop_7891,])
output2 = relay.Tuple([call_7855,const_7858,var_7859,bop_7877,call_7890,const_7889,uop_7893,])
F = relay.Function([var_7859,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_7859,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

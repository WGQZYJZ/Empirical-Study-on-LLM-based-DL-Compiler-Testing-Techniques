==========mod==========
#[version = "0.0.5"]
def @func_4462(%var_4432: Tensor[(1287), int64], %var_4436: Tensor[(288, 4), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) {
  %0 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1 = cast(%var_4432, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %2 = reshape(%1, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
  %3 = cast(%var_4436, dtype="float32") /* ty=Tensor[(288, 4), float32] */;
  %4 = reshape(%3, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %5 = @func_4118(%4) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %6 = %5.1;
  %7 = cast(%6, dtype="float32") /* ty=Tensor[(8, 16, 9), float32] */;
  %8 = %0.0;
  %9 = @func_2724(%2) /* ty=Tensor[(11, 9, 13), bool] */;
  %10 = erf(%7) /* ty=Tensor[(8, 16, 9), float32] */;
  (%8, %9, %var_4432, %var_4436, %10)
}

def @func_3266() -> (Tensor[(8, 1, 9), float32],) {
  %11 = @func_3216() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %12 = %11.0;
  (%12,)
}

def @func_17090() -> (Tensor[(12, 4, 4), bool], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32]) {
  %13 = cast(meta[relay.Constant][0] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %14 = reshape(%13, newshape=[]) /* ty=uint64 */;
  %15 = @func_5760(%14) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
  %16 = @func_10649() /* ty=Tensor[(12, 4, 4), bool] */;
  %17 = %15.1;
  %18 = @func_10160() /* ty=Tensor[(8, 1, 9), float32] */;
  (%16, %17, meta[relay.Constant][0] /* ty=uint64 */, %18)
}

def @func_15342() -> Tensor[(8, 1, 9), float32] {
  %19 = @func_13457() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %19.0
}

def @func_1458(%var_1450: uint64) -> (Tensor[(7, 1, 2), bool],) {
  %20 = cast(%var_1450, dtype="bool") /* ty=bool */;
  %21 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 1, 2), uint64] */, dtype="bool") /* ty=Tensor[(7, 1, 2), bool] */;
  %22 = greater(%20, %21) /* ty=Tensor[(7, 1, 2), bool] */;
  (%22,)
}

def @main(%var_17123: Tensor[(10, 9, 12), uint16], %var_17124: Tensor[(10, 9, 12), uint16]) -> Tensor[(10, 9, 12), uint16] {
  %23 = cast(%var_17124, dtype="uint16") /* ty=Tensor[(10, 9, 12), uint16] */;
  %24 = shape_of(%var_17123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %25 = cast(%var_17123, dtype="uint16") /* ty=Tensor[(10, 9, 12), uint16] */;
  %26 = dyn.reshape(%23, %24, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%25, %26) /* ty=Tensor[(10, 9, 12), uint16] */
}

def @func_12153() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %27 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %28 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %29 = %27.0;
  %30 = %28.0;
  (%29, %30)
}

def @func_8803() -> (Tensor[(8, 1, 9), float32],) {
  %31 = @func_8060() /* ty=Tensor[(8, 1, 9), float32] */;
  (%31,)
}

def @func_12314() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %32 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
  %33 = @func_7797() /* ty=Tensor[(8, 1, 9), float32] */;
  %34 = %32.1;
  (%33, %34)
}

def @func_12773() -> Tensor[(8, 1, 9), float32] {
  %35 = @func_12407() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %35.0
}

def @func_11031() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %36 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %37 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
  %38 = %36.0;
  %39 = %37.0;
  (%38, %39)
}

def @func_16925() -> Tensor[(8, 1, 9), float32] {
  %40 = @func_12197() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %40.0
}

def @func_16722() -> Tensor[(8, 11, 9), float64] {
  %41 = @func_13845() /* ty=(Tensor[(4, 13, 14), float32], Tensor[(8, 11, 9), int32], Tensor[(792, 1), float32]) */;
  %42 = %41.1;
  %43 = cast(%42, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
  sqrt(%43) /* ty=Tensor[(8, 11, 9), float64] */
}

def @func_9295() -> (Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) {
  %44 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
  %45 = cast(meta[relay.Constant][2] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %46 = reshape(%45, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
  %47 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
  %48 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %49 = %44.1;
  %50 = @func_2724(%46) /* ty=Tensor[(11, 9, 13), bool] */;
  %51 = %47.1;
  %52 = %48.0;
  (%49, %50, meta[relay.Constant][2] /* ty=Tensor[(1287), int64] */, %51, %52)
}

def @func_9911() -> (Tensor[(8, 1, 9), float32],) {
  %53 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %54 = %53.0;
  (%54,)
}

def @func_16172(%var_16142: Tensor[(9, 6, 9), float32], %var_16143: Tensor[(9, 6, 9), float32]) -> (Tensor[(9, 6, 9), float32], Tensor[(9, 6, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(429, 3), float32]) {
  %55 = cast(%var_16143, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
  %56 = shape_of(%var_16142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %57 = cast(%var_16142, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
  %58 = dyn.reshape(%55, %56, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %59 = cast(%var_16142, dtype="float64") /* ty=Tensor[(9, 6, 9), float64] */;
  %60 = shape_of(%var_16143, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%var_16143, dtype="float64") /* ty=Tensor[(9, 6, 9), float64] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %63 = cast(meta[relay.Constant][3] /* ty=Tensor[(429, 3), float32] */, dtype="float32") /* ty=Tensor[(429, 3), float32] */;
  %64 = reshape(%63, newshape=[1287]) /* ty=Tensor[(1287), float32] */;
  %65 = @func_15547(%64) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(297, 1), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int16]) */;
  %66 = mod(%57, %58) /* ty=Tensor[(9, 6, 9), float32] */;
  %67 = power(%61, %62) /* ty=Tensor[(9, 6, 9), float64] */;
  %68 = %65.3;
  (%66, %67, %68, meta[relay.Constant][3] /* ty=Tensor[(429, 3), float32] */)
}

def @func_3216() -> (Tensor[(8, 1, 9), float32],) {
  %69 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %70 = %69.0;
  (%70,)
}

def @func_6409(%var_6323: Tensor[(3, 9, 11), bool]) -> (Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) {
  %71 = cast(%var_6323, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
  %72 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(3, 9, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %73 = cast(meta[relay.Constant][4] /* ty=Tensor[(3, 9, 11), bool] */, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
  %74 = dyn.reshape(%71, %72, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %75 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
  %76 = cast(meta[relay.Constant][5] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %77 = reshape(%76, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %78 = @func_5921(%77) /* ty=(Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) */;
  %79 = logical_or(%73, %74) /* ty=Tensor[(3, 9, 11), bool] */;
  %80 = %75.0;
  %81 = %78.2;
  (%79, %80, %81, meta[relay.Constant][5] /* ty=Tensor[(1152), float32] */)
}

def @func_13457() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %82 = @func_12464() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %83 = @func_12813() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %84 = %82.0;
  %85 = %83.2;
  (%84, %85)
}

def @func_9346() -> (Tensor[(8, ?, 9), uint16],) {
  %86 = @func_5663() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) */;
  %87 = %86.0;
  %88 = cast(meta[relay.Constant][6] /* ty=Tensor[(8, 1, 9), float32] */, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
  %89 = shape_of(%87, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%87, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %92 = bitwise_and(%90, %91) /* ty=Tensor[(8, ?, 9), uint16] */;
  (%92,)
}

def @func_11655(%var_11647: Tensor[(11, 9, 13), float64]) -> (Tensor[(11, 9, 13), float64],) {
  %93 = cast(%var_11647, dtype="float64") /* ty=Tensor[(11, 9, 13), float64] */;
  %94 = acosh(%93) /* ty=Tensor[(11, 9, 13), float64] */;
  (%94,)
}

def @func_12649() -> (Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) {
  %95 = @func_8315() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %96 = %95.0;
  %97 = @func_10649() /* ty=Tensor[(12, 4, 4), bool] */;
  (%96, %97)
}

def @func_2849() -> (Tensor[(8, 1, 9), float32],) {
  %98 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  (%98,)
}

def @func_11306(%var_11261: Tensor[(288), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(288), float32], Tensor[(7, 3, 9), uint16], Tensor[(8, 4, 9), float64], Tensor[(8, 1, 9), float32]) {
  %99 = @func_10827() /* ty=(Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) */;
  %100 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %101 = cast(%var_11261, dtype="float32") /* ty=Tensor[(288), float32] */;
  %102 = reshape(%101, newshape=[8, 4, 9]) /* ty=Tensor[(8, 4, 9), float32] */;
  %103 = @func_6466(%102) /* ty=(Tensor[(8, 4, 9), uint64],) */;
  %104 = %103.0;
  %105 = cast(%104, dtype="float64") /* ty=Tensor[(8, 4, 9), float64] */;
  %106 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
  %107 = %99.1;
  %108 = %100.1;
  %109 = exp(%105) /* ty=Tensor[(8, 4, 9), float64] */;
  %110 = %106.0;
  (%107, %var_11261, %108, %109, %110)
}

def @func_15933() -> (Tensor[(8, 1, 9), float32],) {
  %111 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %112 = %111.0;
  (%112,)
}

def @func_11968(%var_11963: Tensor[(728), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(728), float32]) {
  %113 = cast(%var_11963, dtype="float32") /* ty=Tensor[(728), float32] */;
  %114 = reshape(%113, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %115 = @func_10768(%114) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) */;
  %116 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  %117 = %115.0;
  (%116, %117, %var_11963)
}

def @func_12197() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %118 = @func_5115() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %119 = @func_7797() /* ty=Tensor[(8, 1, 9), float32] */;
  %120 = %118.0;
  (%119, %120)
}

def @func_12247() -> (Tensor[(8, 1, 9), float32],) {
  %121 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %122 = %121.0;
  (%122,)
}

def @func_15994() -> Tensor[(8, 1, 9), float32] {
  %123 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %123.0
}

def @func_4039(%var_4030: Tensor[(8, 16, 9), float32]) -> (Tensor[(8, 16, 9), bool],) {
  %124 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %125 = %124.1;
  %126 = cast(%125, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %127 = cast(%var_4030, dtype="bool") /* ty=Tensor[(8, 16, 9), bool] */;
  %128 = logical_or(%126, %127) /* ty=Tensor[(8, 16, 9), bool] */;
  (%128,)
}

def @func_14232(%var_14188: Tensor[(15, 15, 5), float64]) -> (Tensor[(15, 15, 5), float64], Tensor[(15, 15, 5), float32], Tensor[(15, 15, 5), float64]) {
  %129 = cast(%var_14188, dtype="float64") /* ty=Tensor[(15, 15, 5), float64] */;
  %130 = cast(%var_14188, dtype="float32") /* ty=Tensor[(15, 15, 5), float32] */;
  %131 = cast(%var_14188, dtype="float64") /* ty=Tensor[(15, 15, 5), float64] */;
  %132 = erf(%129) /* ty=Tensor[(15, 15, 5), float64] */;
  %133 = log2(%130) /* ty=Tensor[(15, 15, 5), float32] */;
  %134 = acos(%131) /* ty=Tensor[(15, 15, 5), float64] */;
  (%132, %133, %134)
}

def @func_13400(%var_13345: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), uint16], Tensor[(1, 1287), float64], Tensor[(8, 9, 9), float32], Tensor[(1, 648), float32]) {
  %135 = @func_12247() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %136 = cast(%var_13345, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %137 = reshape(%136, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %138 = @func_10827() /* ty=(Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) */;
  %139 = cast(meta[relay.Constant][7] /* ty=Tensor[(1, 648), float32] */, dtype="float32") /* ty=Tensor[(1, 648), float32] */;
  %140 = reshape(%139, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), float32] */;
  %141 = @func_10356(%140) /* ty=(Tensor[(8, 9, 9), float32], Tensor[(8, 9, 9), float32]) */;
  %142 = %135.0;
  %143 = @func_8592(%137) /* ty=Tensor[(7, 3, 9), uint64] */;
  %144 = %138.3;
  %145 = %141.0;
  (%142, %143, %var_13345, %144, %145, meta[relay.Constant][7] /* ty=Tensor[(1, 648), float32] */)
}

def @func_7673() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %146 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %147 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %148 = %146.1;
  %149 = %147.1;
  (%148, %149)
}

def @func_10561() -> Tensor[(8, 1, 9), float32] {
  @func_9793() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_15867(%var_15812: Tensor[(189), uint16], %var_15833: Tensor[(297), bool], %var_15852: Tensor[(10, 1), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(3, 9, 11), bool], Tensor[(297), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10, 1), float32]) {
  %150 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
  %151 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %152 = cast(%var_15812, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %153 = cast(%var_15812, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %154 = reshape(%152, newshape=[189]) /* ty=Tensor[(189), uint16] */;
  %155 = reshape(%153, newshape=[189]) /* ty=Tensor[(189), uint16] */;
  %156 = @func_13805(%154, %155) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), float32]) */;
  %157 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %158 = cast(%var_15833, dtype="bool") /* ty=Tensor[(297), bool] */;
  %159 = reshape(%158, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %160 = @func_6409(%159) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) */;
  %161 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %162 = cast(%var_15852, dtype="float32") /* ty=Tensor[(10, 1), float32] */;
  %163 = reshape(%162, newshape=[10]) /* ty=Tensor[(10), float32] */;
  %164 = @func_10694(%163) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) */;
  %165 = %150.0;
  %166 = %151.0;
  %167 = %156.0;
  %168 = @func_10561() /* ty=Tensor[(8, 1, 9), float32] */;
  %169 = %157.0;
  %170 = %160.0;
  %171 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  %172 = %161.0;
  %173 = %164.0;
  (%165, %166, %167, %var_15812, %168, %169, %170, %var_15833, %171, %172, %173, %var_15852)
}

def @func_10988() -> Tensor[(8, 1, 9), float32] {
  %174 = @func_8853() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %174.0
}

def @func_7884() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %175 = @func_6227() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %176 = @func_7411() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %177 = %175.0;
  %178 = %176.2;
  (%177, %178)
}

def @func_6175(%var_6141: Tensor[(1287), int64]) -> (Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) {
  %179 = cast(%var_6141, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %180 = reshape(%179, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %181 = @func_4671(%180) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) */;
  %182 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  %183 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
  %184 = %183.1;
  %185 = cast(%184, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %186 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %187 = cast(%182, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %188 = dyn.reshape(%185, %186, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %189 = %181.6;
  %190 = less_equal(%187, %188) /* ty=Tensor[(8, ?, 9), bool] */;
  (%189, %var_6141, %190)
}

def @func_953(%var_944: Tensor[(15, 4, 7), float64]) -> (Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) {
  %191 = cast(%var_944, dtype="float64") /* ty=Tensor[(15, 4, 7), float64] */;
  %192 = cast(%var_944, dtype="float64") /* ty=Tensor[(15, 4, 7), float64] */;
  %193 = sqrt(%191) /* ty=Tensor[(15, 4, 7), float64] */;
  %194 = rsqrt(%192) /* ty=Tensor[(15, 4, 7), float64] */;
  (%193, %194)
}

def @func_10223() -> (Tensor[(8, 1, 9), float32],) {
  %195 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %196 = %195.0;
  (%196,)
}

def @func_7276(%var_7259: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) {
  %197 = cast(%var_7259, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %198 = reshape(%197, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %199 = @func_4671(%198) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) */;
  %200 = @func_5663() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) */;
  %201 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %202 = %199.7;
  %203 = %200.0;
  (%201, %202, %var_7259, %203)
}

def @func_13236() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool]) {
  %204 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %205 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %206 = %204.1;
  %207 = %205.0;
  (%206, %207)
}

def @func_16205() -> (Tensor[(8, 1, 9), float32],) {
  %208 = @func_12773() /* ty=Tensor[(8, 1, 9), float32] */;
  (%208,)
}

def @func_14365() -> (Tensor[(8, 1, 9), float32],) {
  %209 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  (%209,)
}

def @func_8853() -> (Tensor[(8, 1, 9), float32],) {
  %210 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
  (%210,)
}

def @func_13993() -> (Tensor[(8, 1, 9), float32],) {
  %211 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %212 = %211.0;
  (%212,)
}

def @func_13845() -> (Tensor[(4, 13, 14), float32], Tensor[(8, 11, 9), int32], Tensor[(792, 1), float32]) {
  %213 = @func_13184() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) */;
  %214 = cast(meta[relay.Constant][8] /* ty=Tensor[(792, 1), float32] */, dtype="float32") /* ty=Tensor[(792, 1), float32] */;
  %215 = reshape(%214, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %216 = %213.1;
  %217 = @func_5496(%215) /* ty=Tensor[(8, 11, 9), int32] */;
  (%216, %217, meta[relay.Constant][8] /* ty=Tensor[(792, 1), float32] */)
}

def @func_4950(%var_4944: Tensor[(14, 6, 6), float32]) -> Tensor[(14, 6, 6), float32] {
  %218 = cast(%var_4944, dtype="float32") /* ty=Tensor[(14, 6, 6), float32] */;
  tan(%218) /* ty=Tensor[(14, 6, 6), float32] */
}

def @func_14493() -> (Tensor[(8, ?, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(11, 117), int64], Tensor[(91, 11), float32], Tensor[(8, 1, 9), float32]) {
  %219 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
  %220 = %219.1;
  %221 = @func_8698() /* ty=(Tensor[(8, ?, 9), int64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %222 = %221.2;
  %223 = cast(%222, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %224 = shape_of(%220, dtype="int32") /* ty=Tensor[(3), int32] */;
  %225 = cast(%220, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %226 = dyn.reshape(%223, %224, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %227 = @func_10378() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %228 = cast(meta[relay.Constant][9] /* ty=Tensor[(91, 11), float32] */, dtype="float32") /* ty=Tensor[(91, 11), float32] */;
  %229 = reshape(%228, newshape=[1, 1001]) /* ty=Tensor[(1, 1001), float32] */;
  %230 = @func_13717(%229) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(11, 117), int64], Tensor[(7, 11, 13), float32], Tensor[(?, 1001), float64], Tensor[(8, 1, 9), float32]) */;
  %231 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %232 = power(%225, %226) /* ty=Tensor[(8, ?, 9), float64] */;
  %233 = %227.0;
  %234 = %230.2;
  %235 = %231.0;
  (%232, %233, %234, meta[relay.Constant][9] /* ty=Tensor[(91, 11), float32] */, %235)
}

def @func_3798() -> Tensor[(8, 1, 9), float32] {
  @func_2764() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_11625() -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32]) {
  %236 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
  %237 = cast(meta[relay.Constant][10] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %238 = reshape(%237, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %239 = @func_7963(%238) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %240 = %236.0;
  %241 = %239.2;
  (%240, %241, meta[relay.Constant][10] /* ty=Tensor[(1152), float32] */)
}

def @func_3428() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %242 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %243 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %244 = %242.0;
  %245 = %243.0;
  (%244, %245)
}

def @func_15423() -> (Tensor[(8, 14, 9), uint64], Tensor[(16, 8, ?), int16], Tensor[(2, 64), float64], Tensor[(8, 1, 9), float32]) {
  %246 = cast(meta[relay.Constant][11] /* ty=Tensor[(2, 64), float64] */, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
  %247 = reshape(%246, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
  %248 = @func_12530(%247) /* ty=(Tensor[(16, 8, ?), int16],) */;
  %249 = @func_4166() /* ty=Tensor[(8, 14, 9), uint64] */;
  %250 = %248.0;
  %251 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  (%249, %250, meta[relay.Constant][11] /* ty=Tensor[(2, 64), float64] */, %251)
}

def @func_12386() -> (Tensor[(8, 4, 9), int32], Tensor[(14), bool], Tensor[(420), float64], Tensor[(1, 14, 1), float32]) {
  %252 = @func_9793() /* ty=Tensor[(8, 1, 9), float32] */;
  %253 = cast(%252, dtype="int32") /* ty=Tensor[(8, 1, 9), int32] */;
  %254 = cast(meta[relay.Constant][12] /* ty=Tensor[(8, 4, 9), float32] */, dtype="int32") /* ty=Tensor[(8, 4, 9), int32] */;
  %255 = cast(meta[relay.Constant][13] /* ty=Tensor[(14), bool] */, dtype="bool") /* ty=Tensor[(14), bool] */;
  %256 = cast(meta[relay.Constant][14] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %257 = reshape(%255, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %258 = reshape(%256, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %259 = @func_3490(%257, %258) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %260 = %259.2;
  %261 = cast(%260, dtype="float32") /* ty=Tensor[(1, 14, 1), float32] */;
  %262 = logical_xor(%253, %254) /* ty=Tensor[(8, 4, 9), int32] */;
  %263 = sin(%261) /* ty=Tensor[(1, 14, 1), float32] */;
  (%262, meta[relay.Constant][13] /* ty=Tensor[(14), bool] */, meta[relay.Constant][14] /* ty=Tensor[(420), float64] */, %263)
}

def @func_9387(%var_9373: Tensor[(792, 1), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) {
  %264 = @func_9320() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %265 = @func_8550() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %266 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %267 = cast(%var_9373, dtype="float32") /* ty=Tensor[(792, 1), float32] */;
  %268 = cast(meta[relay.Constant][15] /* ty=Tensor[(189), uint16] */, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %269 = reshape(%267, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %270 = reshape(%268, newshape=[189]) /* ty=Tensor[(189), uint16] */;
  %271 = @func_7634(%269, %270) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) */;
  %272 = %264.0;
  %273 = %265.0;
  %274 = %266.1;
  %275 = %271.4;
  %276 = @func_8060() /* ty=Tensor[(8, 1, 9), float32] */;
  (%272, %273, %274, %275, %var_9373, meta[relay.Constant][15] /* ty=Tensor[(189), uint16] */, %276)
}

def @func_4905(%var_4888: Tensor[(120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) {
  %277 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %278 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %279 = cast(%var_4888, dtype="float32") /* ty=Tensor[(120), float32] */;
  %280 = reshape(%279, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float32] */;
  %281 = @func_1194(%280) /* ty=(Tensor[(1, 10, 12), float32],) */;
  %282 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %283 = %277.0;
  %284 = %278.0;
  %285 = %281.0;
  %286 = %282.0;
  (%283, %284, %285, %var_4888, %286)
}

def @func_4190() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %287 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %288 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %289 = %287.0;
  %290 = %288.1;
  (%289, %290)
}

def @func_11350() -> (Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) {
  %291 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %292 = cast(meta[relay.Constant][16] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %293 = reshape(%292, newshape=[10]) /* ty=Tensor[(10), float32] */;
  %294 = @func_10694(%293) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) */;
  %295 = @func_9219() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %296 = %291.2;
  %297 = %294.0;
  %298 = %295.1;
  (%296, %297, meta[relay.Constant][16] /* ty=Tensor[(10), float32] */, %298)
}

def @func_15354() -> Tensor[(1287), int64] {
  %299 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %299.1
}

def @func_11831() -> Tensor[(8, ?, 9), int8] {
  %300 = @func_9519() /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) */;
  %300.2
}

def @func_8118() -> (Tensor[(8, ?, 9), float32],) {
  %301 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %302 = %301.0;
  %303 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %304 = %303.0;
  %305 = cast(%304, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %306 = shape_of(%302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %307 = cast(%302, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %308 = dyn.reshape(%305, %306, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %309 = floor_mod(%307, %308) /* ty=Tensor[(8, ?, 9), float32] */;
  (%309,)
}

def @func_13133(%var_13126: Tensor[(140), uint32]) -> (Tensor[(8, 1, 9), float32], Tensor[(5, 7, 4), uint32], Tensor[(140), uint32], Tensor[(7, 3, 9), uint16]) {
  %310 = cast(%var_13126, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %311 = cast(%var_13126, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %312 = reshape(%310, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %313 = reshape(%311, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %314 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
  %315 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  %316 = @func_644(%312, %313) /* ty=Tensor[(5, 7, 4), uint32] */;
  %317 = %314.1;
  (%315, %316, %var_13126, %317)
}

def @func_4086() -> (Tensor[(8, 1, 9), float32],) {
  %318 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %319 = %318.0;
  (%319,)
}

def @func_9519() -> (Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) {
  %320 = cast(meta[relay.Constant][17] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %321 = reshape(%320, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %322 = @func_7276(%321) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */;
  %323 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %324 = %323.0;
  %325 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %326 = %325.0;
  %327 = cast(%326, dtype="int8") /* ty=Tensor[(8, 1, 9), int8] */;
  %328 = shape_of(%324, dtype="int32") /* ty=Tensor[(3), int32] */;
  %329 = cast(%324, dtype="int8") /* ty=Tensor[(8, 1, 9), int8] */;
  %330 = dyn.reshape(%327, %328, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %331 = %322.1;
  %332 = right_shift(%329, %330) /* ty=Tensor[(8, ?, 9), int8] */;
  (%331, meta[relay.Constant][17] /* ty=Tensor[(1287), int64] */, %332)
}

def @func_14618() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %333 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %334 = @func_10160() /* ty=Tensor[(8, 1, 9), float32] */;
  %335 = %333.0;
  (%334, %335)
}

def @func_17025() -> (Tensor[(8, 15, 9), uint32], Tensor[(8, 1, 9), float32]) {
  %336 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %337 = %336.0;
  %338 = cast(%337, dtype="uint32") /* ty=Tensor[(8, 1, 9), uint32] */;
  %339 = cast(meta[relay.Constant][18] /* ty=Tensor[(8, 15, 9), float32] */, dtype="uint32") /* ty=Tensor[(8, 15, 9), uint32] */;
  %340 = @func_16577() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %341 = subtract(%338, %339) /* ty=Tensor[(8, 15, 9), uint32] */;
  %342 = %340.0;
  (%341, %342)
}

def @func_6667() -> (Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) {
  %343 = cast(meta[relay.Constant][19] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %344 = reshape(%343, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
  %345 = @func_5189(%344) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
  %346 = @func_3167() /* ty=Tensor[(8, 1, 9), float32] */;
  %347 = %345.0;
  %348 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  (%346, %347, meta[relay.Constant][19] /* ty=Tensor[(10), float32] */, %348)
}

def @func_10133() -> (Tensor[(8, 1, 9), float32],) {
  %349 = @func_9320() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %350 = %349.0;
  (%350,)
}

def @func_6868(%var_6819: Tensor[(1287), int64], %var_6859: Tensor[(1001), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) {
  %351 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %352 = cast(%var_6819, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %353 = reshape(%352, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %354 = @func_6175(%353) /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) */;
  %355 = cast(%var_6859, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %356 = reshape(%355, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
  %357 = %351.0;
  %358 = %354.0;
  %359 = @func_5553(%356) /* ty=Tensor[(7, 11, 13), float32] */;
  (%357, %358, %var_6819, %359, %var_6859)
}

def @func_2724(%var_2714: Tensor[(11, 9, 13), int64]) -> Tensor[(11, 9, 13), bool] {
  %360 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 9, 13), int64] */, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %361 = shape_of(%var_2714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %362 = cast(%var_2714, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %363 = dyn.reshape(%360, %361, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%362, %363) /* ty=Tensor[(11, 9, 13), bool] */
}

def @func_4671(%var_4650: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) {
  %364 = cast(meta[relay.Constant][21] /* ty=Tensor[(182, 4), float32] */, dtype="float32") /* ty=Tensor[(182, 4), float32] */;
  %365 = reshape(%364, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %366 = cast(meta[relay.Constant][22] /* ty=Tensor[(182, 4), float32] */, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
  %367 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(182, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %368 = cast(meta[relay.Constant][21] /* ty=Tensor[(182, 4), float32] */, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %370 = cast(%var_4650, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %371 = cast(meta[relay.Constant][23] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %372 = reshape(%370, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %373 = reshape(%371, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
  %374 = @func_4462(%372, %373) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
  %375 = cast(meta[relay.Constant][24] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %376 = reshape(%375, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %377 = @func_3121(%376) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) */;
  %378 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  %379 = @func_2472(%365) /* ty=Tensor[(4, 13, 14), float32] */;
  %380 = subtract(%368, %369) /* ty=Tensor[(182, 4), float64] */;
  %381 = %374.4;
  %382 = %377.1;
  (%378, %379, %380, %381, %var_4650, meta[relay.Constant][23] /* ty=Tensor[(1152), float32] */, %382, meta[relay.Constant][24] /* ty=Tensor[(120), float32] */)
}

def @func_15200() -> (Tensor[(8, 1, 9), float32],) {
  %383 = @func_9219() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %384 = %383.0;
  (%384,)
}

def @func_4222(%var_4213: Tensor[(3, 63), uint16], %var_4218: Tensor[(14), bool]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) {
  %385 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %386 = cast(%var_4213, dtype="uint16") /* ty=Tensor[(3, 63), uint16] */;
  %387 = reshape(%386, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %388 = @func_1339(%387) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
  %389 = cast(%var_4218, dtype="bool") /* ty=Tensor[(14), bool] */;
  %390 = cast(meta[relay.Constant][25] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %391 = reshape(%389, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %392 = reshape(%390, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %393 = @func_3490(%391, %392) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %394 = %385.0;
  %395 = %388.0;
  %396 = %393.1;
  (%394, %395, %var_4213, %396, %var_4218, meta[relay.Constant][25] /* ty=Tensor[(420), float64] */)
}

def @func_3490(%var_3442: Tensor[(1, 14, 1), bool], %var_3449: Tensor[(420), float64]) -> (Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) {
  %397 = cast(%var_3449, dtype="float64") /* ty=Tensor[(420), float64] */;
  %398 = reshape(%397, newshape=[15, 4, 7]) /* ty=Tensor[(15, 4, 7), float64] */;
  %399 = @func_953(%398) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) */;
  %400 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %401 = cast(%var_3442, dtype="bool") /* ty=Tensor[(1, 14, 1), bool] */;
  %402 = logical_and(%400, %401) /* ty=Tensor[(1, 14, 1), bool] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(1, 14, 1), float64] */;
  %404 = cast(False /* ty=bool */, dtype="float64") /* ty=float64 */;
  %405 = %399.1;
  %406 = minimum(%403, %404) /* ty=Tensor[(1, 14, 1), float64] */;
  (%405, %var_3449, %406)
}

def @func_1194(%var_1180: Tensor[(1, 10, 12), float32]) -> (Tensor[(1, 10, 12), float32],) {
  %407 = cast(%var_1180, dtype="float32") /* ty=Tensor[(1, 10, 12), float32] */;
  %408 = cos(%407) /* ty=Tensor[(1, 10, 12), float32] */;
  (%408,)
}

def @func_8972(%var_8876: Tensor[(1001, 1), float32], %var_8918: Tensor[(1287), int64], %var_8921: Tensor[(1152), float32], %var_8964: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool], Tensor[(1152), float32], Tensor[(1001, 140), int8], Tensor[(15, 4, 7), float64], Tensor[(210, 2), float64], Tensor[(1001, 1287), float64], Tensor[(7, 3, 9), uint16], Tensor[(792), float32], Tensor[(189), uint16]) {
  %409 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %410 = cast(%var_8876, dtype="float32") /* ty=Tensor[(1001, 1), float32] */;
  %411 = reshape(%410, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
  %412 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %413 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %414 = cast(%var_8918, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %415 = reshape(%414, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %416 = @func_6175(%415) /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) */;
  %417 = cast(%var_8921, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %418 = reshape(%417, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %419 = @func_5921(%418) /* ty=(Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) */;
  %420 = %419.2;
  %421 = cast(%420, dtype="bool") /* ty=Tensor[(140), bool] */;
  %422 = cast(%var_8876, dtype="bool") /* ty=Tensor[(1001, 1), bool] */;
  %423 = less(%421, %422) /* ty=Tensor[(1001, 140), bool] */;
  %424 = cast(%423, dtype="int8") /* ty=Tensor[(1001, 140), int8] */;
  %425 = cast(%var_8876, dtype="int8") /* ty=Tensor[(1001, 1), int8] */;
  %426 = cast(meta[relay.Constant][26] /* ty=Tensor[(210, 2), float64] */, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
  %427 = reshape(%426, newshape=[15, 4, 7]) /* ty=Tensor[(15, 4, 7), float64] */;
  %428 = @func_953(%427) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) */;
  %429 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %430 = cast(%var_8876, dtype="float64") /* ty=Tensor[(1001, 1), float64] */;
  %431 = cast(meta[relay.Constant][27] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %432 = cast(%var_8964, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %433 = reshape(%431, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %434 = reshape(%432, newshape=[189]) /* ty=Tensor[(189), uint16] */;
  %435 = @func_7634(%433, %434) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) */;
  %436 = %409.0;
  %437 = @func_5553(%411) /* ty=Tensor[(7, 11, 13), float32] */;
  %438 = %412.0;
  %439 = %413.1;
  %440 = %416.2;
  %441 = left_shift(%424, %425) /* ty=Tensor[(1001, 140), int8] */;
  %442 = %428.1;
  %443 = floor_divide(%429, %430) /* ty=Tensor[(1001, 1287), float64] */;
  %444 = %435.4;
  (%436, %437, %438, %439, %440, %var_8921, %441, %442, meta[relay.Constant][26] /* ty=Tensor[(210, 2), float64] */, %443, %444, meta[relay.Constant][27] /* ty=Tensor[(792), float32] */, %var_8964)
}

def @func_3915() -> Tensor[(8, 1, 9), float32] {
  %445 = @func_3216() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %445.0
}

def @func_11458() -> Tensor[(8, 1, 9), float32] {
  %446 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %446.0
}

def @func_8233() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) {
  %447 = @func_6227() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %448 = @func_6667() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) */;
  %449 = %448.0;
  %450 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %451 = %450.0;
  %452 = cast(%451, dtype="uint8") /* ty=Tensor[(8, 1, 9), uint8] */;
  %453 = shape_of(%449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %454 = cast(%449, dtype="uint8") /* ty=Tensor[(8, 1, 9), uint8] */;
  %455 = dyn.reshape(%452, %453, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %456 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %457 = %447.1;
  %458 = bitwise_xor(%454, %455) /* ty=Tensor[(8, ?, 9), uint8] */;
  %459 = %456.0;
  (%457, %458, %459)
}

def @func_8360(%var_8327: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) {
  %460 = cast(%var_8327, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %461 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %462 = reshape(%460, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %463 = reshape(%461, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
  %464 = @func_4462(%462, %463) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
  %465 = cast(meta[relay.Constant][29] /* ty=Tensor[(297, 1), bool] */, dtype="bool") /* ty=Tensor[(297, 1), bool] */;
  %466 = reshape(%465, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %467 = @func_6409(%466) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) */;
  %468 = cast(meta[relay.Constant][28] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %469 = reshape(%468, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %470 = @func_4118(%469) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %471 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
  %472 = %464.1;
  %473 = %467.0;
  %474 = %470.1;
  (%471, %472, %var_8327, meta[relay.Constant][28] /* ty=Tensor[(1152), float32] */, %473, meta[relay.Constant][29] /* ty=Tensor[(297, 1), bool] */, %474)
}

def @func_16557() -> (Tensor[(8, 1, 9), float32], Tensor[(504), float32], Tensor[(8, 16, 9), bool], Tensor[(8, ?, 9), uint16]) {
  %475 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %476 = @func_14908() /* ty=(Tensor[(1287), int64], Tensor[(14, 6, 6), float32], Tensor[(504), float32], Tensor[(8, 1, 9), float32]) */;
  %477 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %478 = %477.0;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(8, 16, 9), float32] */;
  %480 = reshape(%479, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %481 = @func_10931(%480) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(1152), float32], uint64) */;
  %482 = %475.0;
  %483 = %476.2;
  %484 = %481.1;
  (%482, %483, %478, %484)
}

def @func_4587(%var_4579: Tensor[(1152), float32], %var_4580: uint64) -> (Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) {
  %485 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %486 = cast(%var_4579, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %487 = cast(%var_4580, dtype="uint64") /* ty=uint64 */;
  %488 = reshape(%486, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
  %489 = reshape(%487, newshape=[]) /* ty=uint64 */;
  %490 = @func_4008(%488, %489) /* ty=(Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */;
  %491 = cast(meta[relay.Constant][30] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %492 = cast(meta[relay.Constant][30] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %493 = reshape(%491, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %494 = reshape(%492, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %495 = %485.0;
  %496 = %490.7;
  %497 = @func_644(%493, %494) /* ty=Tensor[(5, 7, 4), uint32] */;
  (%495, %496, %var_4579, %var_4580, %497, meta[relay.Constant][30] /* ty=Tensor[(140), uint32] */)
}

def @func_4166() -> Tensor[(8, 14, 9), uint64] {
  %498 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %499 = cast(%498, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %500 = cast(meta[relay.Constant][31] /* ty=Tensor[(8, 14, 9), float32] */, dtype="uint64") /* ty=Tensor[(8, 14, 9), uint64] */;
  add(%499, %500) /* ty=Tensor[(8, 14, 9), uint64] */
}

def @func_9628() -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) {
  %501 = cast(meta[relay.Constant][32] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %502 = reshape(%501, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %503 = @func_4671(%502) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) */;
  %504 = cast(meta[relay.Constant][32] /* ty=Tensor[(1287), int64] */, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %505 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
  %506 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
  %507 = %503.1;
  %508 = log(%504) /* ty=Tensor[(1287), float64] */;
  %509 = %505.0;
  (%506, %507, %508, %509)
}

def @func_14722(%var_14709: Tensor[(13, 77), float32], %var_14716: Tensor[(13, 77), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), bool]) {
  %510 = cast(%var_14709, dtype="float32") /* ty=Tensor[(13, 77), float32] */;
  %511 = reshape(%510, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
  %512 = cast(%var_14716, dtype="bool") /* ty=Tensor[(13, 77), bool] */;
  %513 = shape_of(%var_14709, dtype="int32") /* ty=Tensor[(2), int32] */;
  %514 = cast(%var_14709, dtype="bool") /* ty=Tensor[(13, 77), bool] */;
  %515 = dyn.reshape(%512, %513, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %516 = @func_14055() /* ty=Tensor[(8, 1, 9), float32] */;
  %517 = @func_5553(%511) /* ty=Tensor[(7, 11, 13), float32] */;
  %518 = not_equal(%514, %515) /* ty=Tensor[(13, 77), bool] */;
  (%516, %517, %518)
}

def @func_9480() -> Tensor[(8, 6, 9), uint64] {
  %519 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %520 = %519.0;
  %521 = cast(%520, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %522 = cast(meta[relay.Constant][33] /* ty=Tensor[(8, 6, 9), float32] */, dtype="uint64") /* ty=Tensor[(8, 6, 9), uint64] */;
  maximum(%521, %522) /* ty=Tensor[(8, 6, 9), uint64] */
}

def @func_11984() -> (Tensor[(8, 1, 9), float32],) {
  %523 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %524 = %523.0;
  (%524,)
}

def @func_16664(%var_16624: Tensor[(1287), int64]) -> (Tensor[(1287), float32], Tensor[(8, 1, 9), float32]) {
  %525 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %526 = %525.1;
  %527 = cast(%var_16624, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(1), int32] */;
  %529 = cast(%526, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?), float32] */;
  %531 = @func_8550() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %532 = power(%529, %530) /* ty=Tensor[(1287), float32] */;
  %533 = %531.0;
  (%532, %533)
}

def @func_16771(%var_16760: Tensor[(486), float32]) -> (Tensor[(14), bool], Tensor[(486), float32], Tensor[(486), float32], Tensor[(7, 104), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %534 = @func_13120() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) */;
  %535 = cast(%var_16760, dtype="float32") /* ty=Tensor[(486), float32] */;
  %536 = cast(meta[relay.Constant][34] /* ty=Tensor[(7, 104), float32] */, dtype="float32") /* ty=Tensor[(7, 104), float32] */;
  %537 = reshape(%535, newshape=[486]) /* ty=Tensor[(486), float32] */;
  %538 = reshape(%536, newshape=[728]) /* ty=Tensor[(728), float32] */;
  %539 = @func_16300(%537, %538) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(486), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32]) */;
  %540 = @func_16747() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %541 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %542 = %534.2;
  %543 = %539.2;
  %544 = %540.0;
  %545 = %541.1;
  (%542, %543, %var_16760, meta[relay.Constant][34] /* ty=Tensor[(7, 104), float32] */, %544, %545)
}

def @func_10160() -> Tensor[(8, 1, 9), float32] {
  @func_7756() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_10378() -> (Tensor[(8, 1, 9), float32],) {
  %546 = @func_7797() /* ty=Tensor[(8, 1, 9), float32] */;
  (%546,)
}

def @func_7553() -> (Tensor[(8, 1, 9), float32],) {
  %547 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  (%547,)
}

def @func_9219() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %548 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %549 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %550 = %548.0;
  %551 = %549.0;
  (%550, %551)
}

def @func_7298() -> (Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) {
  %552 = @func_6008() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %553 = %552.1;
  %554 = @func_3915() /* ty=Tensor[(8, 1, 9), float32] */;
  (%553, %554)
}

def @func_5788() -> (Tensor[(12, 4, 4), bool],) {
  %555 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 4), float32] */;
  %556 = cosh(%555) /* ty=Tensor[(12, 4, 4), float32] */;
  %557 = cast(meta[relay.Constant][35] /* ty=Tensor[(12, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
  %558 = shape_of(%556, dtype="int32") /* ty=Tensor[(3), int32] */;
  %559 = cast(%556, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
  %560 = dyn.reshape(%557, %558, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %561 = greater_equal(%559, %560) /* ty=Tensor[(12, 4, 4), bool] */;
  (%561,)
}

def @func_5760(%var_5758: uint64) -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) {
  %562 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
  %563 = cast(meta[relay.Constant][36] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %564 = cast(%var_5758, dtype="uint64") /* ty=uint64 */;
  %565 = reshape(%563, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %566 = reshape(%564, newshape=[]) /* ty=uint64 */;
  %567 = @func_4587(%565, %566) /* ty=(Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) */;
  %568 = %562.1;
  %569 = %567.2;
  (%568, %569, meta[relay.Constant][36] /* ty=Tensor[(1152), float32] */, %var_5758)
}

def @func_10003() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %570 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
  %571 = @func_5707() /* ty=Tensor[(8, 1, 9), float32] */;
  (%570, %571)
}

def @func_10519() -> (Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(792), float32]) {
  %572 = cast(meta[relay.Constant][37] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
  %573 = reshape(%572, newshape=[792, 1]) /* ty=Tensor[(792, 1), float32] */;
  %574 = @func_9387(%573) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) */;
  %575 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %576 = %574.5;
  (%575, %576, meta[relay.Constant][37] /* ty=Tensor[(792), float32] */)
}

def @func_4396(%var_4381: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %577 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %578 = cast(%var_4381, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %579 = reshape(%578, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
  %580 = @func_4039(%579) /* ty=(Tensor[(8, 16, 9), bool],) */;
  %581 = %577.1;
  %582 = %580.0;
  (%581, %582, %var_4381)
}

def @func_10931(%var_10911: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(1152), float32], uint64) {
  %583 = @func_9628() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) */;
  %584 = cast(%var_10911, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %585 = cast(meta[relay.Constant][38] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %586 = reshape(%584, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %587 = reshape(%585, newshape=[]) /* ty=uint64 */;
  %588 = @func_4587(%586, %587) /* ty=(Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) */;
  %589 = %583.3;
  %590 = %588.0;
  (%589, %590, %var_10911, meta[relay.Constant][38] /* ty=uint64 */)
}

def @func_9104(%var_9081: Tensor[(13, 77), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), float32]) {
  %591 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
  %592 = cast(%var_9081, dtype="float32") /* ty=Tensor[(13, 77), float32] */;
  %593 = reshape(%592, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
  %594 = %591.2;
  %595 = @func_5553(%593) /* ty=Tensor[(7, 11, 13), float32] */;
  (%594, %595, %var_9081)
}

def @func_10661() -> Tensor[(8, 1, 9), float32] {
  %596 = @func_10519() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(792), float32]) */;
  %596.0
}

def @func_644(%var_615: Tensor[(5, 7, 4), uint32], %var_616: Tensor[(5, 7, 4), uint32]) -> Tensor[(5, 7, 4), uint32] {
  %597 = cast(%var_616, dtype="bool") /* ty=Tensor[(5, 7, 4), bool] */;
  %598 = shape_of(%var_615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %599 = cast(%var_615, dtype="bool") /* ty=Tensor[(5, 7, 4), bool] */;
  %600 = dyn.reshape(%597, %598, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %601 = not_equal(%599, %600) /* ty=Tensor[(5, 7, 4), bool] */;
  %602 = cast(%var_615, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
  %603 = shape_of(%601, dtype="int32") /* ty=Tensor[(3), int32] */;
  %604 = cast(%601, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
  %605 = dyn.reshape(%602, %603, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%604, %605) /* ty=Tensor[(5, 7, 4), uint32] */
}

def @func_15192() -> Tensor[(3, 11, 4), int8] {
  %606 = cast(meta[relay.Constant][40] /* ty=Tensor[(3, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 11, 4), int8] */;
  %607 = shape_of(meta[relay.Constant][39] /* ty=Tensor[(3, 11, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %608 = cast(meta[relay.Constant][39] /* ty=Tensor[(3, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 11, 4), int8] */;
  %609 = dyn.reshape(%606, %607, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%608, %609) /* ty=Tensor[(3, 11, 4), int8] */
}

def @func_12969() -> Tensor[(8, 1, 9), float32] {
  %610 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %610.1
}

def @func_8698() -> (Tensor[(8, ?, 9), int64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32]) {
  %611 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
  %612 = %611.2;
  %613 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %614 = %613.0;
  %615 = cast(%614, dtype="int64") /* ty=Tensor[(8, 1, 9), int64] */;
  %616 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%612, dtype="int64") /* ty=Tensor[(8, 1, 9), int64] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %619 = cast(%614, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %620 = shape_of(%612, dtype="int32") /* ty=Tensor[(3), int32] */;
  %621 = cast(%612, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %622 = dyn.reshape(%619, %620, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %623 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %624 = left_shift(%617, %618) /* ty=Tensor[(8, ?, 9), int64] */;
  %625 = not_equal(%621, %622) /* ty=Tensor[(8, ?, 9), bool] */;
  %626 = %623.0;
  (%624, %625, %626)
}

def @func_10649() -> Tensor[(12, 4, 4), bool] {
  %627 = @func_5788() /* ty=(Tensor[(12, 4, 4), bool],) */;
  %627.0
}

def @func_10694(%var_10678: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) {
  %628 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %629 = cast(%var_10678, dtype="float32") /* ty=Tensor[(10), float32] */;
  %630 = reshape(%629, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
  %631 = @func_5189(%630) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
  %632 = %631.0;
  %633 = cast(%632, dtype="float64") /* ty=Tensor[(5, 2, 1), float64] */;
  %634 = %628.0;
  %635 = atanh(%633) /* ty=Tensor[(5, 2, 1), float64] */;
  (%634, %var_10678, %635)
}

def @func_9054() -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) {
  %636 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %637 = cast(meta[relay.Constant][41] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %638 = reshape(%637, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %639 = @func_8360(%638) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) */;
  %640 = cast(meta[relay.Constant][41] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %641 = %639.3;
  %642 = cast(%641, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %643 = reshape(%640, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %644 = reshape(%642, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
  %645 = @func_4462(%643, %644) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
  %646 = %636.0;
  %647 = %645.2;
  (%646, %641, meta[relay.Constant][41] /* ty=Tensor[(1287), int64] */, %647)
}

def @func_10768(%var_10755: Tensor[(4, 13, 14), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) {
  %648 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %649 = @func_9628() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) */;
  %650 = %649.1;
  %651 = cast(%var_10755, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %652 = shape_of(%650, dtype="int32") /* ty=Tensor[(3), int32] */;
  %653 = cast(%650, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %654 = dyn.reshape(%651, %652, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %655 = %648.0;
  %656 = multiply(%653, %654) /* ty=Tensor[(4, 13, 14), float32] */;
  (%655, %656)
}

def @func_5115() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %657 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %658 = %657.0;
  %659 = @func_3167() /* ty=Tensor[(8, 1, 9), float32] */;
  (%658, %659)
}

def @func_13913(%var_13890: Tensor[(8, 7, 9), float32]) -> (Tensor[(8, 7, 9), int16], Tensor[(8, ?, 9), float32], Tensor[(8, 1, 9), float32]) {
  %660 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  %661 = cast(%660, dtype="int16") /* ty=Tensor[(8, 1, 9), int16] */;
  %662 = cast(%var_13890, dtype="int16") /* ty=Tensor[(8, 7, 9), int16] */;
  %663 = @func_13624() /* ty=(Tensor[(8, ?, 9), float32],) */;
  %664 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %665 = logical_xor(%661, %662) /* ty=Tensor[(8, 7, 9), int16] */;
  %666 = %663.0;
  %667 = %664.0;
  (%665, %666, %667)
}

def @func_11605() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, ?, 9), float64], Tensor[(8, ?, 9), bool]) {
  %668 = @func_7240() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) */;
  %669 = @func_9911() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %670 = cast(meta[relay.Constant][42] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %671 = reshape(%670, newshape=[]) /* ty=uint64 */;
  %672 = @func_5760(%671) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
  %673 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %674 = %673.0;
  %675 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
  %676 = cast(%675, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %677 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %678 = cast(%674, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %679 = dyn.reshape(%676, %677, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %680 = @func_7039() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %681 = %680.0;
  %682 = cast(%681, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %683 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
  %684 = cast(%674, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %685 = dyn.reshape(%682, %683, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %686 = %668.0;
  %687 = %669.0;
  %688 = %672.1;
  %689 = minimum(%678, %679) /* ty=Tensor[(8, ?, 9), float64] */;
  %690 = logical_and(%684, %685) /* ty=Tensor[(8, ?, 9), bool] */;
  (%686, %687, %688, meta[relay.Constant][42] /* ty=uint64 */, %689, %690)
}

def @func_6965(%var_6958: Tensor[(8, 13, 9), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 13, 9), float32]) {
  %691 = @func_6422() /* ty=Tensor[(8, 1, 9), float32] */;
  %692 = cast(%691, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %693 = cast(%var_6958, dtype="float32") /* ty=Tensor[(8, 13, 9), float32] */;
  %694 = @func_5707() /* ty=Tensor[(8, 1, 9), float32] */;
  %695 = subtract(%692, %693) /* ty=Tensor[(8, 13, 9), float32] */;
  (%694, %695)
}

def @func_4783() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool]) {
  %696 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %697 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %698 = %697.0;
  %699 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  %700 = cast(%699, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %701 = shape_of(%698, dtype="int32") /* ty=Tensor[(3), int32] */;
  %702 = cast(%698, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %704 = %696.0;
  %705 = less(%702, %703) /* ty=Tensor[(8, ?, 9), bool] */;
  (%704, %705)
}

def @func_4299(%var_4294: Tensor[(8, 16, 9), float32]) -> Tensor[(8, 16, 9), uint64] {
  %706 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %707 = %706.1;
  %708 = cast(%707, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %709 = cast(%var_4294, dtype="uint64") /* ty=Tensor[(8, 16, 9), uint64] */;
  logical_xor(%708, %709) /* ty=Tensor[(8, 16, 9), uint64] */
}

def @func_3649() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %710 = @func_3216() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %711 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %712 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %713 = %710.0;
  %714 = %711.0;
  %715 = %712.0;
  (%713, %714, %715)
}

def @func_5586(%var_5570: uint64, %var_5573: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64, Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 14, 9), uint64], Tensor[(60, 2), float32], Tensor[(8, 144), float32]) {
  %716 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %717 = cast(%var_5570, dtype="uint64") /* ty=uint64 */;
  %718 = reshape(%717, newshape=[]) /* ty=uint64 */;
  %719 = @func_1458(%718) /* ty=(Tensor[(7, 1, 2), bool],) */;
  %720 = cast(%var_5573, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %721 = %719.0;
  %722 = cast(%721, dtype="bool") /* ty=Tensor[(7, 1, 2), bool] */;
  %723 = reshape(%720, newshape=[3, 63]) /* ty=Tensor[(3, 63), uint16] */;
  %724 = reshape(%722, newshape=[14]) /* ty=Tensor[(14), bool] */;
  %725 = @func_4222(%723, %724) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) */;
  %726 = cast(meta[relay.Constant][43] /* ty=Tensor[(8, 144), float32] */, dtype="float32") /* ty=Tensor[(8, 144), float32] */;
  %727 = cast(%var_5570, dtype="uint64") /* ty=uint64 */;
  %728 = reshape(%726, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
  %729 = reshape(%727, newshape=[]) /* ty=uint64 */;
  %730 = @func_4008(%728, %729) /* ty=(Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */;
  %731 = %716.0;
  %732 = %725.0;
  %733 = @func_4166() /* ty=Tensor[(8, 14, 9), uint64] */;
  %734 = %730.3;
  (%731, %721, %var_5570, %732, %var_5573, %733, %734, meta[relay.Constant][43] /* ty=Tensor[(8, 144), float32] */)
}

def @func_12530(%var_12505: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, ?), int16],) {
  %735 = cast(%var_12505, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
  %736 = asin(%735) /* ty=Tensor[(16, 8, 1), float64] */;
  %737 = cast(%var_12505, dtype="int16") /* ty=Tensor[(16, 8, 1), int16] */;
  %738 = shape_of(%736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %739 = cast(%736, dtype="int16") /* ty=Tensor[(16, 8, 1), int16] */;
  %740 = dyn.reshape(%737, %738, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %741 = multiply(%739, %740) /* ty=Tensor[(16, 8, ?), int16] */;
  (%741,)
}

def @func_11220(%var_11131: Tensor[(3, 10, 16), float32], %var_11132: Tensor[(3, 10, 16), float32], %var_11211: Tensor[(792), float32]) -> (Tensor[(3, 10, 16), float32], Tensor[(8, 6, 9), uint64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32]) {
  %742 = cast(%var_11132, dtype="float32") /* ty=Tensor[(3, 10, 16), float32] */;
  %743 = shape_of(%var_11131, dtype="int32") /* ty=Tensor[(3), int32] */;
  %744 = cast(%var_11131, dtype="float32") /* ty=Tensor[(3, 10, 16), float32] */;
  %745 = dyn.reshape(%742, %743, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %746 = @func_9346() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %747 = %746.0;
  %748 = @func_10378() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %749 = %748.0;
  %750 = cast(%749, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %751 = shape_of(%747, dtype="int32") /* ty=Tensor[(3), int32] */;
  %752 = cast(%747, dtype="bool") /* ty=Tensor[(8, ?, 9), bool] */;
  %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %754 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %755 = cast(%var_11211, dtype="float32") /* ty=Tensor[(792), float32] */;
  %756 = reshape(%755, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %757 = mod(%744, %745) /* ty=Tensor[(3, 10, 16), float32] */;
  %758 = @func_9480() /* ty=Tensor[(8, 6, 9), uint64] */;
  %759 = logical_or(%752, %753) /* ty=Tensor[(8, ?, 9), bool] */;
  %760 = %754.0;
  %761 = @func_5496(%756) /* ty=Tensor[(8, 11, 9), int32] */;
  (%757, %758, %759, %760, %761, %var_11211)
}

def @func_10589() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %762 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  %763 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
  (%762, %763)
}

def @func_8830() -> (Tensor[(8, 1, 9), float32],) {
  %764 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %765 = %764.1;
  (%765,)
}

def @func_5089(%var_5077: Tensor[(420), float64]) -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) {
  %766 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %767 = cast(%var_5077, dtype="float64") /* ty=Tensor[(420), float64] */;
  %768 = reshape(%767, newshape=[15, 4, 7]) /* ty=Tensor[(15, 4, 7), float64] */;
  %769 = @func_953(%768) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) */;
  %770 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %771 = %766.0;
  %772 = %769.0;
  %773 = %770.0;
  (%771, %772, %var_5077, %773)
}

def @func_3167() -> Tensor[(8, 1, 9), float32] {
  %774 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %774.0
}

def @func_10891(%var_10849: Tensor[(120), float32]) -> (Tensor[(8, 4, 9), int16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(420), float64], Tensor[(7, 2), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32], Tensor[(?, 120), bool]) {
  %775 = @func_10099() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %776 = %775.1;
  %777 = cast(%776, dtype="int16") /* ty=Tensor[(8, 1, 9), int16] */;
  %778 = cast(meta[relay.Constant][44] /* ty=Tensor[(8, 4, 9), float32] */, dtype="int16") /* ty=Tensor[(8, 4, 9), int16] */;
  %779 = @func_6008() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %780 = cast(%var_10849, dtype="float32") /* ty=Tensor[(120), float32] */;
  %781 = reshape(%780, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %782 = @func_4905(%781) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) */;
  %783 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %784 = cast(meta[relay.Constant][45] /* ty=Tensor[(7, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 2), bool] */;
  %785 = cast(meta[relay.Constant][46] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %786 = reshape(%784, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %787 = reshape(%785, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %788 = @func_3490(%786, %787) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %789 = cast(%var_10849, dtype="float32") /* ty=Tensor[(120), float32] */;
  %790 = reshape(%789, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %791 = @func_4905(%790) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) */;
  %792 = cast(%var_10849, dtype="float32") /* ty=Tensor[(120), float32] */;
  %793 = reshape(%792, newshape=[1, 120]) /* ty=Tensor[(1, 120), float32] */;
  %794 = @func_9167(%793) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32], Tensor[(1, 120), float32]) */;
  %795 = %794.4;
  %796 = cast(%var_10849, dtype="bool") /* ty=Tensor[(120), bool] */;
  %797 = shape_of(%795, dtype="int32") /* ty=Tensor[(2), int32] */;
  %798 = cast(%795, dtype="bool") /* ty=Tensor[(1, 120), bool] */;
  %799 = dyn.reshape(%796, %797, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %800 = bitwise_or(%777, %778) /* ty=Tensor[(8, 4, 9), int16] */;
  %801 = %779.0;
  %802 = %782.4;
  %803 = %783.0;
  %804 = %788.1;
  %805 = %791.0;
  %806 = less(%798, %799) /* ty=Tensor[(?, 120), bool] */;
  (%800, %801, %802, %803, %804, meta[relay.Constant][45] /* ty=Tensor[(7, 2), bool] */, meta[relay.Constant][46] /* ty=Tensor[(420), float64] */, %805, %806)
}

def @func_15127() -> (Tensor[(8, 1, 9), float32],) {
  %807 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %808 = %807.0;
  (%808,)
}

def @func_6466(%var_6456: Tensor[(8, 4, 9), float32]) -> (Tensor[(8, 4, 9), uint64],) {
  %809 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %810 = %809.0;
  %811 = cast(%810, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %812 = cast(%var_6456, dtype="uint64") /* ty=Tensor[(8, 4, 9), uint64] */;
  %813 = bitwise_xor(%811, %812) /* ty=Tensor[(8, 4, 9), uint64] */;
  (%813,)
}

def @func_8269() -> Tensor[(8, 1, 9), float32] {
  %814 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %814.0
}

def @func_2764() -> Tensor[(8, 1, 9), float32] {
  %815 = cast(meta[relay.Constant][47] /* ty=Tensor[(8, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  sin(%815) /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_7756() -> Tensor[(8, 1, 9), float32] {
  @func_3915() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_4268() -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) {
  %816 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %817 = cast(meta[relay.Constant][48] /* ty=Tensor[(1, 14), bool] */, dtype="bool") /* ty=Tensor[(1, 14), bool] */;
  %818 = cast(meta[relay.Constant][49] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %819 = reshape(%817, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %820 = reshape(%818, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %821 = @func_3490(%819, %820) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %822 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %823 = %816.0;
  %824 = %821.0;
  %825 = %822.1;
  (%823, %824, meta[relay.Constant][48] /* ty=Tensor[(1, 14), bool] */, meta[relay.Constant][49] /* ty=Tensor[(420), float64] */, %825)
}

def @func_2801() -> (Tensor[(8, 1, 9), float32],) {
  %826 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  (%826,)
}

def @func_5675() -> (Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) {
  %827 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %828 = @func_4166() /* ty=Tensor[(8, 14, 9), uint64] */;
  %829 = %827.0;
  (%828, %829)
}

def @func_3853() -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) {
  %830 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %831 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 104), float32] */, dtype="float32") /* ty=Tensor[(7, 104), float32] */;
  %832 = reshape(%831, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %833 = cast(meta[relay.Constant][50] /* ty=Tensor[(7, 104), float32] */, dtype="float32") /* ty=Tensor[(7, 104), float32] */;
  %834 = %830.0;
  %835 = @func_2472(%832) /* ty=Tensor[(4, 13, 14), float32] */;
  %836 = tan(%833) /* ty=Tensor[(7, 104), float32] */;
  (%834, %835, %836)
}

def @func_3882() -> Tensor[(8, 1, 9), float32] {
  %837 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %837.0
}

def @func_6521() -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) {
  %838 = cast(meta[relay.Constant][51] /* ty=Tensor[(189), uint16] */, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %839 = reshape(%838, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %840 = @func_1339(%839) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
  %841 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %842 = %840.0;
  (%841, %842, meta[relay.Constant][51] /* ty=Tensor[(189), uint16] */)
}

def @func_13036() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), int8]) {
  %843 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %844 = %843.0;
  %845 = @func_11831() /* ty=Tensor[(8, ?, 9), int8] */;
  (%844, %845)
}

def @func_12813() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %846 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %847 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %848 = @func_8269() /* ty=Tensor[(8, 1, 9), float32] */;
  %849 = %846.0;
  %850 = %847.0;
  (%848, %849, %850)
}

def @func_13526() -> Tensor[(8, ?, 9), float32] {
  %851 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %852 = %851.0;
  %853 = @func_8830() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %854 = %853.0;
  %855 = cast(%854, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %856 = shape_of(%852, dtype="int32") /* ty=Tensor[(3), int32] */;
  %857 = cast(%852, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %858 = dyn.reshape(%855, %856, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%857, %858) /* ty=Tensor[(8, ?, 9), float32] */
}

def @func_13717(%var_13678: Tensor[(1, 1001), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(11, 117), int64], Tensor[(7, 11, 13), float32], Tensor[(?, 1001), float64], Tensor[(8, 1, 9), float32]) {
  %859 = @func_8830() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %860 = cast(meta[relay.Constant][52] /* ty=Tensor[(11, 117), int64] */, dtype="int64") /* ty=Tensor[(11, 117), int64] */;
  %861 = cast(%var_13678, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
  %862 = reshape(%861, newshape=[13, 77]) /* ty=Tensor[(13, 77), float32] */;
  %863 = @func_9104(%862) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), float32]) */;
  %864 = %863.1;
  %865 = cast(%864, dtype="uint64") /* ty=Tensor[(7, 11, 13), uint64] */;
  %866 = shape_of(%var_13678, dtype="int32") /* ty=Tensor[(2), int32] */;
  %867 = cast(%var_13678, dtype="uint64") /* ty=Tensor[(1, 1001), uint64] */;
  %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %869 = minimum(%867, %868) /* ty=Tensor[(?, 1001), uint64] */;
  %870 = cast(%869, dtype="float32") /* ty=Tensor[(?, 1001), float32] */;
  %871 = reshape(%860, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %872 = reshape(%870, newshape=[1001]) /* ty=Tensor[(1001), float32] */;
  %873 = @func_6868(%871, %872) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) */;
  %874 = cast(%864, dtype="float32") /* ty=Tensor[(7, 11, 13), float32] */;
  %875 = cast(%869, dtype="float64") /* ty=Tensor[(?, 1001), float64] */;
  %876 = @func_8830() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %877 = %859.0;
  %878 = %873.1;
  %879 = asin(%874) /* ty=Tensor[(7, 11, 13), float32] */;
  %880 = asin(%875) /* ty=Tensor[(?, 1001), float64] */;
  %881 = %876.0;
  (%877, %878, meta[relay.Constant][52] /* ty=Tensor[(11, 117), int64] */, %879, %880, %881)
}

def @func_15171(%var_15152: Tensor[(1152), float32], %var_15157: Tensor[(189), uint16]) -> (Tensor[(14), bool], Tensor[(288, 4), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16]) {
  %882 = @func_13120() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) */;
  %883 = cast(meta[relay.Constant][53] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %884 = cast(%var_15152, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %885 = reshape(%883, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %886 = reshape(%884, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
  %887 = @func_4462(%885, %886) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
  %888 = @func_14977() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %889 = cast(%var_15157, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %890 = %882.2;
  %891 = cast(%890, dtype="bool") /* ty=Tensor[(14), bool] */;
  %892 = reshape(%889, newshape=[3, 63]) /* ty=Tensor[(3, 63), uint16] */;
  %893 = reshape(%891, newshape=[14]) /* ty=Tensor[(14), bool] */;
  %894 = @func_4222(%892, %893) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) */;
  %895 = %887.3;
  %896 = %888.0;
  %897 = %894.4;
  (%890, %895, meta[relay.Constant][53] /* ty=Tensor[(1287), int64] */, %var_15152, %896, %897, %var_15157)
}

def @func_5707() -> Tensor[(8, 1, 9), float32] {
  @func_3915() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_12924(%var_12855: Tensor[(8, 11, 9), float32], %var_12864: Tensor[(189), uint16], %var_12874: uint64) -> (Tensor[(8, 11, 9), bool], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], uint64, uint64, Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) {
  %898 = @func_10099() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %899 = %898.1;
  %900 = cast(%899, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %901 = cast(%var_12855, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
  %902 = cast(%var_12864, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %903 = reshape(%902, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %904 = @func_1339(%903) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
  %905 = cast(%var_12874, dtype="uint64") /* ty=uint64 */;
  %906 = reshape(%905, newshape=[]) /* ty=uint64 */;
  %907 = @func_9563(%906) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */;
  %908 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
  %909 = cast(meta[relay.Constant][54] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %910 = reshape(%909, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %911 = @func_7276(%910) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */;
  %912 = greater(%900, %901) /* ty=Tensor[(8, 11, 9), bool] */;
  %913 = %904.0;
  %914 = %907.2;
  %915 = %908.1;
  %916 = %911.0;
  (%912, %913, %var_12864, %914, %var_12874, %915, %916, meta[relay.Constant][54] /* ty=Tensor[(1287), int64] */)
}

def @func_5332() -> (Tensor[(8, 1, 9), float32],) {
  %917 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %918 = %917.0;
  (%918,)
}

def @func_5496(%var_5485: Tensor[(8, 11, 9), float32]) -> Tensor[(8, 11, 9), int32] {
  %919 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %920 = %919.0;
  %921 = cast(%920, dtype="int32") /* ty=Tensor[(8, 1, 9), int32] */;
  %922 = cast(%var_5485, dtype="int32") /* ty=Tensor[(8, 11, 9), int32] */;
  subtract(%921, %922) /* ty=Tensor[(8, 11, 9), int32] */
}

def @func_9793() -> Tensor[(8, 1, 9), float32] {
  %923 = @func_5115() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %923.0
}

def @func_2901(%var_2891: Tensor[(5, 10, 10), int8], %var_2892: Tensor[(5, 10, 10), int8]) -> Tensor[(5, 10, 10), bool] {
  %924 = cast(%var_2892, dtype="bool") /* ty=Tensor[(5, 10, 10), bool] */;
  %925 = shape_of(%var_2891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %926 = cast(%var_2891, dtype="bool") /* ty=Tensor[(5, 10, 10), bool] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%926, %927) /* ty=Tensor[(5, 10, 10), bool] */
}

def @func_8315() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %928 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %929 = @func_7240() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) */;
  %930 = %928.4;
  %931 = %929.1;
  (%930, %931)
}

def @func_13746() -> Tensor[(8, 1, 9), float32] {
  %932 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %932.0
}

def @func_15038(%var_15033: Tensor[(11, 9, 13), float32]) -> (Tensor[(1, 14), bool], Tensor[(11, 9, 13), bool]) {
  %933 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %934 = @func_5663() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) */;
  %935 = %934.2;
  %936 = cast(%var_15033, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %937 = shape_of(%935, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%935, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = %933.2;
  %941 = logical_or(%938, %939) /* ty=Tensor[(11, 9, 13), bool] */;
  (%940, %941)
}

def @func_9167(%var_9164: Tensor[(1, 120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32], Tensor[(1, 120), float32]) {
  %942 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %943 = cast(meta[relay.Constant][55] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %944 = reshape(%943, newshape=[]) /* ty=uint64 */;
  %945 = @func_5760(%944) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
  %946 = cast(%var_9164, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %947 = reshape(%946, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %948 = @func_3121(%947) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) */;
  %949 = %942.0;
  %950 = %945.2;
  %951 = %948.0;
  (%949, %950, meta[relay.Constant][55] /* ty=uint64 */, %951, %var_9164)
}

def @func_6921() -> Tensor[(8, 1, 9), float32] {
  %952 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %952.1
}

def @func_14289() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(120), float32]) {
  %953 = @func_10589() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %954 = cast(meta[relay.Constant][56] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %955 = reshape(%954, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %956 = @func_4905(%955) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) */;
  %957 = %953.0;
  %958 = %956.4;
  (%957, %958, meta[relay.Constant][56] /* ty=Tensor[(120), float32] */)
}

def @func_9563(%var_9537: uint64) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) {
  %959 = cast(%var_9537, dtype="uint64") /* ty=uint64 */;
  %960 = reshape(%959, newshape=[]) /* ty=uint64 */;
  %961 = @func_1458(%960) /* ty=(Tensor[(7, 1, 2), bool],) */;
  %962 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  %963 = %961.0;
  (%962, %963, %var_9537)
}

def @func_16976() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) {
  %964 = @func_16508() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %965 = @func_9346() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %966 = %964.0;
  %967 = %965.0;
  (%966, %967)
}

def @func_14908() -> (Tensor[(1287), int64], Tensor[(14, 6, 6), float32], Tensor[(504), float32], Tensor[(8, 1, 9), float32]) {
  %968 = @func_9519() /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) */;
  %969 = cast(meta[relay.Constant][57] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
  %970 = reshape(%969, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float32] */;
  %971 = %968.1;
  %972 = @func_4950(%970) /* ty=Tensor[(14, 6, 6), float32] */;
  %973 = @func_12037() /* ty=Tensor[(8, 1, 9), float32] */;
  (%971, %972, meta[relay.Constant][57] /* ty=Tensor[(504), float32] */, %973)
}

def @func_14943() -> (Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) {
  %974 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %975 = %974.0;
  %976 = @func_10649() /* ty=Tensor[(12, 4, 4), bool] */;
  (%975, %976)
}

def @func_7963(%var_7955: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %977 = cast(%var_7955, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %978 = reshape(%977, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %979 = @func_4396(%978) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %980 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
  %981 = %979.1;
  (%980, %981, %var_7955)
}

def @func_9320() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %982 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %983 = @func_7756() /* ty=Tensor[(8, 1, 9), float32] */;
  %984 = %982.0;
  (%983, %984)
}

def @func_15698(%var_15681: Tensor[(8, 4, 9), float32]) -> (Tensor[(8, 4, 9), bool],) {
  %985 = @func_15077() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %986 = %985.1;
  %987 = cast(%986, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %988 = cast(%var_15681, dtype="bool") /* ty=Tensor[(8, 4, 9), bool] */;
  %989 = greater_equal(%987, %988) /* ty=Tensor[(8, 4, 9), bool] */;
  (%989,)
}

def @func_6422() -> Tensor[(8, 1, 9), float32] {
  %990 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %990.0
}

def @func_5226() -> Tensor[(8, 1, 9), float32] {
  %991 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %991.0
}

def @func_6008() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %992 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %993 = cast(meta[relay.Constant][58] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %994 = reshape(%993, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %995 = @func_4396(%994) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %996 = %992.0;
  %997 = %995.1;
  (%996, %997, meta[relay.Constant][58] /* ty=Tensor[(1152), float32] */)
}

def @func_14359() -> Tensor[(8, 1, 9), float32] {
  %998 = @func_12314() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %998.1
}

def @func_15077() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %999 = @func_12153() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1000 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1001 = %999.0;
  %1002 = %1000.0;
  (%1001, %1002)
}

def @func_4847() -> (Tensor[(8, 1, 9), float32],) {
  %1003 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1004 = %1003.2;
  (%1004,)
}

def @func_13535() -> Tensor[(8, 1, 9), float32] {
  %1005 = @func_10589() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1005.0
}

def @func_11929() -> Tensor[(4, 13, 14), float32] {
  %1006 = @func_3853() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) */;
  %1006.1
}

def @func_12407() -> (Tensor[(8, 1, 9), float32],) {
  %1007 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1008 = %1007.1;
  (%1008,)
}

def @func_3700() -> (Tensor[(8, ?, 9), uint16],) {
  %1009 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1010 = %1009.0;
  %1011 = cast(%1010, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %1012 = log10(%1011) /* ty=Tensor[(8, 1, 9), float64] */;
  %1013 = cast(%1010, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
  %1014 = shape_of(%1012, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%1012, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1017 = subtract(%1015, %1016) /* ty=Tensor[(8, ?, 9), uint16] */;
  (%1017,)
}

def @func_16300(%var_16221: Tensor[(486), float32], %var_16262: Tensor[(728), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(486), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32]) {
  %1018 = @func_11984() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1019 = cast(%var_16221, dtype="float32") /* ty=Tensor[(486), float32] */;
  %1020 = cast(%var_16221, dtype="float32") /* ty=Tensor[(486), float32] */;
  %1021 = reshape(%1019, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), float32] */;
  %1022 = reshape(%1020, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), float32] */;
  %1023 = @func_16172(%1021, %1022) /* ty=(Tensor[(9, 6, 9), float32], Tensor[(9, 6, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(429, 3), float32]) */;
  %1024 = cast(%var_16262, dtype="float32") /* ty=Tensor[(728), float32] */;
  %1025 = reshape(%1024, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %1026 = %1018.0;
  %1027 = %1023.2;
  %1028 = @func_2472(%1025) /* ty=Tensor[(4, 13, 14), float32] */;
  (%1026, %1027, %var_16221, %1028, %var_16262)
}

def @func_15606() -> Tensor[(8, ?, 9), uint16] {
  %1029 = @func_9295() /* ty=(Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) */;
  %1029.4
}

def @func_15725() -> Tensor[(8, 1, 9), float32] {
  @func_12037() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_8550() -> (Tensor[(8, 1, 9), float32],) {
  %1030 = @func_6575() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1031 = %1030.0;
  (%1031,)
}

def @func_10069() -> (Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) {
  %1032 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %1033 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
  %1034 = %1032.1;
  %1035 = %1033.3;
  (%1034, %1035)
}

def @func_2472(%var_2468: Tensor[(4, 13, 14), float32]) -> Tensor[(4, 13, 14), float32] {
  %1036 = cast(%var_2468, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  asinh(%1036) /* ty=Tensor[(4, 13, 14), float32] */
}

def @func_5553(%var_5550: Tensor[(7, 11, 13), float32]) -> Tensor[(7, 11, 13), float32] {
  %1037 = cast(%var_5550, dtype="float32") /* ty=Tensor[(7, 11, 13), float32] */;
  sinh(%1037) /* ty=Tensor[(7, 11, 13), float32] */
}

def @func_16087() -> (Tensor[(8, 1, 9), float32],) {
  %1038 = @func_15127() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1039 = %1038.0;
  (%1039,)
}

def @func_7039() -> (Tensor[(8, 1, 9), float32],) {
  %1040 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1041 = %1040.0;
  (%1041,)
}

def @func_13184() -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) {
  %1042 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %1043 = @func_11929() /* ty=Tensor[(4, 13, 14), float32] */;
  (%1042, %1043)
}

def @func_13120() -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) {
  %1044 = @func_12813() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1045 = cast(meta[relay.Constant][59] /* ty=Tensor[(14), bool] */, dtype="bool") /* ty=Tensor[(14), bool] */;
  %1046 = cast(meta[relay.Constant][60] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1047 = reshape(%1045, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %1048 = reshape(%1046, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1049 = @func_3490(%1047, %1048) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %1050 = cast(meta[relay.Constant][61] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1051 = reshape(%1050, newshape=[]) /* ty=uint64 */;
  %1052 = @func_5760(%1051) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
  %1053 = %1044.1;
  %1054 = %1049.0;
  %1055 = %1052.3;
  (%1053, %1054, meta[relay.Constant][59] /* ty=Tensor[(14), bool] */, meta[relay.Constant][60] /* ty=Tensor[(420), float64] */, %1055, meta[relay.Constant][61] /* ty=uint64 */)
}

def @func_8592(%var_8587: Tensor[(7, 3, 9), uint16]) -> Tensor[(7, 3, 9), uint64] {
  %1056 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
  %1057 = %1056.1;
  %1058 = cast(%var_8587, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %1059 = shape_of(%1057, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1060 = cast(%1057, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
  %1061 = dyn.reshape(%1058, %1059, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%1060, %1061) /* ty=Tensor[(7, 3, 9), uint64] */
}

def @func_9424() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1062 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1063 = @func_8455() /* ty=Tensor[(8, 1, 9), float32] */;
  %1064 = %1062.1;
  (%1063, %1064)
}

def @func_3300(%var_3298: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) {
  %1065 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1066 = cast(%var_3298, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %1067 = reshape(%1066, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %1068 = @func_1339(%1067) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
  %1069 = %1065.0;
  %1070 = %1068.0;
  (%1069, %1070, %var_3298)
}

def @func_11126(%var_11063: Tensor[(792, 1), float32], %var_11107: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(792, ?), int64], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(792, ?), bool]) {
  %1071 = @func_10589() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1072 = cast(meta[relay.Constant][62] /* ty=Tensor[(792, 1), float32] */, dtype="float32") /* ty=Tensor[(792, 1), float32] */;
  %1073 = reshape(%1072, newshape=[792, 1]) /* ty=Tensor[(792, 1), float32] */;
  %1074 = @func_9387(%1073) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) */;
  %1075 = cast(meta[relay.Constant][62] /* ty=Tensor[(792, 1), float32] */, dtype="int64") /* ty=Tensor[(792, 1), int64] */;
  %1076 = shape_of(%var_11063, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1077 = cast(%var_11063, dtype="int64") /* ty=Tensor[(792, 1), int64] */;
  %1078 = dyn.reshape(%1075, %1076, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %1079 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1080 = cast(%var_11107, dtype="float32") /* ty=Tensor[(10), float32] */;
  %1081 = reshape(%1080, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
  %1082 = @func_5189(%1081) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
  %1083 = cast(%var_11063, dtype="uint64") /* ty=Tensor[(792, 1), uint64] */;
  %1084 = shape_of(meta[relay.Constant][62] /* ty=Tensor[(792, 1), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1085 = cast(meta[relay.Constant][62] /* ty=Tensor[(792, 1), float32] */, dtype="uint64") /* ty=Tensor[(792, 1), uint64] */;
  %1086 = dyn.reshape(%1083, %1084, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %1087 = left_shift(%1085, %1086) /* ty=Tensor[(792, ?), uint64] */;
  %1088 = cast(meta[relay.Constant][62] /* ty=Tensor[(792, 1), float32] */, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
  %1089 = shape_of(%var_11063, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1090 = cast(%var_11063, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
  %1091 = dyn.reshape(%1088, %1089, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1092 = logical_and(%1090, %1091) /* ty=Tensor[(792, ?), bool] */;
  %1093 = cast(%1092, dtype="float32") /* ty=Tensor[(792, ?), float32] */;
  %1094 = shape_of(%1087, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1095 = cast(%1087, dtype="float32") /* ty=Tensor[(792, ?), float32] */;
  %1096 = dyn.reshape(%1093, %1094, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1097 = power(%1095, %1096) /* ty=Tensor[(792, ?), float32] */;
  %1098 = cast(%1097, dtype="float64") /* ty=Tensor[(792, ?), float64] */;
  %1099 = tan(%1098) /* ty=Tensor[(792, ?), float64] */;
  %1100 = cast(%1097, dtype="bool") /* ty=Tensor[(792, ?), bool] */;
  %1101 = shape_of(%1099, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1102 = cast(%1099, dtype="bool") /* ty=Tensor[(792, ?), bool] */;
  %1103 = dyn.reshape(%1100, %1101, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1104 = %1071.1;
  %1105 = %1074.2;
  %1106 = bitwise_xor(%1077, %1078) /* ty=Tensor[(792, ?), int64] */;
  %1107 = %1079.0;
  %1108 = %1082.1;
  %1109 = greater_equal(%1102, %1103) /* ty=Tensor[(792, ?), bool] */;
  (%1104, %1105, %1106, %1107, %1108, %var_11107, %1109)
}

def @func_11777(%var_11737: Tensor[(189), uint16], %var_11738: Tensor[(14), bool]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16], Tensor[(14), bool], Tensor[(11, 9, 13), bool]) {
  %1110 = @func_6575() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1111 = @func_9320() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1112 = cast(%var_11737, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %1113 = cast(%var_11738, dtype="bool") /* ty=Tensor[(14), bool] */;
  %1114 = reshape(%1112, newshape=[3, 63]) /* ty=Tensor[(3, 63), uint16] */;
  %1115 = reshape(%1113, newshape=[14]) /* ty=Tensor[(14), bool] */;
  %1116 = @func_4222(%1114, %1115) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) */;
  %1117 = @func_9295() /* ty=(Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) */;
  %1118 = %1110.0;
  %1119 = %1111.0;
  %1120 = %1116.4;
  %1121 = %1117.1;
  (%1118, %1119, %1120, %var_11737, %var_11738, %1121)
}

def @func_13408() -> Tensor[(8, 1, 9), float32] {
  %1122 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1122.0
}

def @func_16113() -> Tensor[(8, 1, 9), float32] {
  %1123 = @func_12197() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1123.0
}

def @func_5921(%var_5899: Tensor[(1152), float32]) -> (Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) {
  %1124 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %1125 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1126 = cast(%var_5899, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1127 = cast(meta[relay.Constant][63] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1128 = reshape(%1126, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1129 = reshape(%1127, newshape=[]) /* ty=uint64 */;
  %1130 = @func_4587(%1128, %1129) /* ty=(Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) */;
  %1131 = %1124.2;
  %1132 = %1125.1;
  %1133 = %1130.5;
  (%1131, %1132, %1133, %var_5899, meta[relay.Constant][63] /* ty=uint64 */)
}

def @func_8455() -> Tensor[(8, 1, 9), float32] {
  %1134 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1134.0
}

def @func_16577() -> (Tensor[(8, 1, 9), float32],) {
  %1135 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1136 = %1135.0;
  (%1136,)
}

def @func_4008(%var_3949: Tensor[(8, 16, 9), float32], %var_4006: uint64) -> (Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) {
  %1137 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1138 = %1137.0;
  %1139 = cast(%1138, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %1140 = cast(%var_3949, dtype="uint64") /* ty=Tensor[(8, 16, 9), uint64] */;
  %1141 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %1142 = %1141.0;
  %1143 = cast(%1142, dtype="int16") /* ty=Tensor[(8, ?, 9), int16] */;
  %1144 = cast(meta[relay.Constant][64] /* ty=Tensor[(8, 14, 9), uint16] */, dtype="int16") /* ty=Tensor[(8, 14, 9), int16] */;
  %1145 = right_shift(%1143, %1144) /* ty=Tensor[(8, 14, 9), int16] */;
  %1146 = cast(%1145, dtype="float32") /* ty=Tensor[(8, 14, 9), float32] */;
  %1147 = cast(meta[relay.Constant][65] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %1148 = reshape(%1147, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %1149 = @func_3121(%1148) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) */;
  %1150 = cast(meta[relay.Constant][66] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %1151 = reshape(%1150, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %1152 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1153 = cast(%var_4006, dtype="uint64") /* ty=uint64 */;
  %1154 = reshape(%1153, newshape=[]) /* ty=uint64 */;
  %1155 = @func_1458(%1154) /* ty=(Tensor[(7, 1, 2), bool],) */;
  %1156 = multiply(%1139, %1140) /* ty=Tensor[(8, 16, 9), uint64] */;
  %1157 = log10(%1146) /* ty=Tensor[(8, 14, 9), float32] */;
  %1158 = %1149.2;
  %1159 = @func_2472(%1151) /* ty=Tensor[(4, 13, 14), float32] */;
  %1160 = %1152.0;
  %1161 = %1155.0;
  (%1156, %1157, %1158, meta[relay.Constant][65] /* ty=Tensor[(60, 2), float32] */, %1159, meta[relay.Constant][66] /* ty=Tensor[(728), float32] */, %1160, %1161, %var_4006)
}

def @func_7797() -> Tensor[(8, 1, 9), float32] {
  @func_6921() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_5362() -> (Tensor[(8, 1, 9), float32],) {
  %1162 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1163 = %1162.1;
  (%1163,)
}

def @func_15645() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1164 = @func_12649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */;
  %1165 = @func_12649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */;
  %1166 = @func_15342() /* ty=Tensor[(8, 1, 9), float32] */;
  %1167 = %1164.0;
  %1168 = %1165.0;
  (%1166, %1167, %1168)
}

def @func_6227() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1169 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1170 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1171 = %1169.0;
  %1172 = %1170.0;
  (%1171, %1172)
}

def @func_7176() -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) {
  %1173 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1174 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %1175 = %1173.0;
  %1176 = %1174.1;
  (%1175, %1176)
}

def @func_14055() -> Tensor[(8, 1, 9), float32] {
  @func_8060() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_5940(%var_5938: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32]) {
  %1177 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1178 = cast(%var_5938, dtype="float32") /* ty=Tensor[(10), float32] */;
  %1179 = reshape(%1178, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
  %1180 = @func_5189(%1179) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
  %1181 = %1177.0;
  %1182 = %1180.0;
  (%1181, %1182, %var_5938)
}

def @func_16328(%var_16323: Tensor[(12, 5, 16), float64]) -> Tensor[(12, 5, 16), float64] {
  %1183 = cast(meta[relay.Constant][67] /* ty=Tensor[(12, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
  %1184 = shape_of(%var_16323, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1185 = cast(%var_16323, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
  %1186 = dyn.reshape(%1183, %1184, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  multiply(%1185, %1186) /* ty=Tensor[(12, 5, 16), float64] */
}

def @func_10827() -> (Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) {
  %1187 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 1287), int64] */, dtype="int64") /* ty=Tensor[(1, 1287), int64] */;
  %1188 = reshape(%1187, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %1189 = @func_7276(%1188) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */;
  %1190 = cast(meta[relay.Constant][68] /* ty=Tensor[(1, 1287), int64] */, dtype="float64") /* ty=Tensor[(1, 1287), float64] */;
  %1191 = @func_9480() /* ty=Tensor[(8, 6, 9), uint64] */;
  %1192 = @func_10160() /* ty=Tensor[(8, 1, 9), float32] */;
  %1193 = %1189.1;
  %1194 = cosh(%1190) /* ty=Tensor[(1, 1287), float64] */;
  %1195 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1191, %1192, %1193, %1194, %1195)
}

def @func_6575() -> (Tensor[(8, 1, 9), float32],) {
  %1196 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1197 = %1196.0;
  (%1197,)
}

def @func_15765() -> Tensor[(8, 1, 9), float32] {
  @func_13535() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_15479() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1198 = @func_13746() /* ty=Tensor[(8, 1, 9), float32] */;
  %1199 = @func_7756() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1198, %1199)
}

def @func_16508() -> (Tensor[(8, 1, 9), float32],) {
  %1200 = @func_10988() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1200,)
}

def @func_16747() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1201 = @func_15479() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1202 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1203 = %1201.0;
  %1204 = %1202.0;
  (%1203, %1204)
}

def @func_16430(%var_16426: Tensor[(1287), int64]) -> (Tensor[(8, ?, 9), float32], Tensor[(16, 8, ?), int16], Tensor[(7, 11, 13), float32], Tensor[(1001), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64]) {
  %1205 = @func_8118() /* ty=(Tensor[(8, ?, 9), float32],) */;
  %1206 = @func_15423() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(16, 8, ?), int16], Tensor[(2, 64), float64], Tensor[(8, 1, 9), float32]) */;
  %1207 = cast(meta[relay.Constant][69] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %1208 = cast(meta[relay.Constant][69] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %1209 = reshape(%1207, newshape=[13, 77]) /* ty=Tensor[(13, 77), float32] */;
  %1210 = reshape(%1208, newshape=[13, 77]) /* ty=Tensor[(13, 77), float32] */;
  %1211 = @func_14722(%1209, %1210) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), bool]) */;
  %1212 = @func_12153() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1213 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
  %1214 = cast(%var_16426, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %1215 = reshape(%1214, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %1216 = @func_8360(%1215) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) */;
  %1217 = %1205.0;
  %1218 = %1206.1;
  %1219 = %1211.1;
  %1220 = %1212.1;
  %1221 = %1213.1;
  %1222 = %1216.1;
  (%1217, %1218, %1219, meta[relay.Constant][69] /* ty=Tensor[(1001), float32] */, %1220, %1221, %1222, %var_16426)
}

def @func_10099() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1223 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  %1224 = @func_8455() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1223, %1224)
}

def @func_8060() -> Tensor[(8, 1, 9), float32] {
  %1225 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %1225.0
}

def @func_7411() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1226 = @func_7240() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) */;
  %1227 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %1228 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %1229 = %1226.0;
  (%1227, %1228, %1229)
}

def @func_10965() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) {
  %1230 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1231 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %1232 = %1230.0;
  %1233 = %1231.0;
  (%1232, %1233)
}

def @func_16603(%var_16598: Tensor[(4, 2, 2), bool]) -> Tensor[(4, 2, 2), bool] {
  %1234 = cast(%var_16598, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %1235 = shape_of(meta[relay.Constant][70] /* ty=Tensor[(4, 2, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1236 = cast(meta[relay.Constant][70] /* ty=Tensor[(4, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %1237 = dyn.reshape(%1234, %1235, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%1236, %1237) /* ty=Tensor[(4, 2, 2), bool] */
}

def @func_4118(%var_4099: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %1238 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1239 = cast(%var_4099, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1240 = reshape(%1239, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
  %1241 = @func_4039(%1240) /* ty=(Tensor[(8, 16, 9), bool],) */;
  %1242 = %1238.0;
  %1243 = %1241.0;
  (%1242, %1243, %var_4099)
}

def @func_5189(%var_5167: Tensor[(5, 2, 1), float32]) -> (Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) {
  %1244 = cast(%var_5167, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %1245 = @func_3853() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) */;
  %1246 = log10(%1244) /* ty=Tensor[(5, 2, 1), float32] */;
  %1247 = %1245.0;
  (%1246, %1247)
}

def @func_7240() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) {
  %1248 = cast(meta[relay.Constant][71] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %1249 = reshape(%1248, newshape=[8, 13, 9]) /* ty=Tensor[(8, 13, 9), float32] */;
  %1250 = @func_6965(%1249) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 13, 9), float32]) */;
  %1251 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %1252 = %1250.0;
  (%1251, %1252, meta[relay.Constant][71] /* ty=Tensor[(936), float32] */)
}

def @func_7634(%var_7617: Tensor[(792), float32], %var_7628: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) {
  %1253 = cast(%var_7617, dtype="float32") /* ty=Tensor[(792), float32] */;
  %1254 = reshape(%1253, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %1255 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %1256 = cast(%var_7628, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %1257 = reshape(%1256, newshape=[189]) /* ty=Tensor[(189), uint16] */;
  %1258 = @func_3300(%1257) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %1259 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %1260 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
  %1261 = @func_5496(%1254) /* ty=Tensor[(8, 11, 9), int32] */;
  %1262 = %1255.0;
  %1263 = %1258.1;
  %1264 = %1259.0;
  (%1260, %1261, %var_7617, %1262, %1263, %var_7628, %1264)
}

def @func_16846(%var_16841: Tensor[(7, 3, 9), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), int16]) {
  %1265 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1266 = @func_9346() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %1267 = @func_9295() /* ty=(Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) */;
  %1268 = %1267.3;
  %1269 = cast(%var_16841, dtype="int16") /* ty=Tensor[(7, 3, 9), int16] */;
  %1270 = shape_of(%1268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1271 = cast(%1268, dtype="int16") /* ty=Tensor[(7, 3, 9), int16] */;
  %1272 = dyn.reshape(%1269, %1270, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %1273 = %1265.0;
  %1274 = %1266.0;
  %1275 = multiply(%1271, %1272) /* ty=Tensor[(7, 3, 9), int16] */;
  (%1273, %1274, %1275)
}

def @func_5663() -> (Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) {
  %1276 = @func_3853() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) */;
  %1277 = cast(meta[relay.Constant][72] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %1278 = reshape(%1277, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
  %1279 = @func_2724(%1278) /* ty=Tensor[(11, 9, 13), bool] */;
  %1280 = cast(%1279, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
  %1281 = %1276.0;
  %1282 = log(%1280) /* ty=Tensor[(11, 9, 13), float32] */;
  (%1281, meta[relay.Constant][72] /* ty=Tensor[(1287), int64] */, %1282)
}

def @func_15955() -> Tensor[(8, 1, 9), float32] {
  %1283 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1283.1
}

def @func_3121(%var_3082: Tensor[(120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) {
  %1284 = cast(%var_3082, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1285 = reshape(%1284, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float32] */;
  %1286 = @func_1194(%1285) /* ty=(Tensor[(1, 10, 12), float32],) */;
  %1287 = %1286.0;
  %1288 = cast(%1287, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
  %1289 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  %1290 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  %1291 = rsqrt(%1288) /* ty=Tensor[(1, 10, 12), float64] */;
  (%1289, %var_3082, %1290, %1291)
}

def @func_12464() -> (Tensor[(8, 1, 9), float32],) {
  %1292 = @func_6667() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) */;
  %1293 = %1292.3;
  (%1293,)
}

def @func_13805(%var_13799: Tensor[(189), uint16], %var_13801: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), float32]) {
  %1294 = @func_7039() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1295 = cast(%var_13799, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %1296 = reshape(%1295, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %1297 = cast(%var_13801, dtype="float32") /* ty=Tensor[(189), float32] */;
  %1298 = shape_of(%var_13799, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1299 = cast(%var_13799, dtype="float32") /* ty=Tensor[(189), float32] */;
  %1300 = dyn.reshape(%1297, %1298, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1301 = %1294.0;
  %1302 = @func_8592(%1296) /* ty=Tensor[(7, 3, 9), uint64] */;
  %1303 = power(%1299, %1300) /* ty=Tensor[(189), float32] */;
  (%1301, %1302, %1303)
}

def @func_14977() -> (Tensor[(8, 1, 9), float32],) {
  %1304 = @func_14618() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1305 = %1304.1;
  (%1305,)
}

def @func_15547(%var_15522: Tensor[(1287), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(297, 1), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int16]) {
  %1306 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %1307 = cast(meta[relay.Constant][73] /* ty=Tensor[(297, 1), bool] */, dtype="bool") /* ty=Tensor[(297, 1), bool] */;
  %1308 = reshape(%1307, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %1309 = @func_6409(%1308) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) */;
  %1310 = @func_8315() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1311 = @func_8315() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1312 = @func_15354() /* ty=Tensor[(1287), int64] */;
  %1313 = cast(%1312, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1314 = exp(%1313) /* ty=Tensor[(1287), float32] */;
  %1315 = cast(%var_15522, dtype="int16") /* ty=Tensor[(1287), int16] */;
  %1316 = shape_of(%1314, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1317 = cast(%1314, dtype="int16") /* ty=Tensor[(1287), int16] */;
  %1318 = dyn.reshape(%1315, %1316, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1319 = %1306.0;
  %1320 = %1309.2;
  %1321 = %1310.1;
  %1322 = %1311.1;
  %1323 = bitwise_or(%1317, %1318) /* ty=Tensor[(1287), int16] */;
  (%1319, %1320, meta[relay.Constant][73] /* ty=Tensor[(297, 1), bool] */, %1321, %1322, %1323)
}

def @func_12037() -> Tensor[(8, 1, 9), float32] {
  %1324 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %1324.4
}

def @func_10046() -> (Tensor[(8, 1, 9), float32],) {
  %1325 = @func_8853() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1326 = %1325.0;
  (%1326,)
}

def @func_1339(%var_1326: Tensor[(7, 3, 9), uint16]) -> (Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) {
  %1327 = cast(meta[relay.Constant][74] /* ty=Tensor[(7, 3, 9), uint16] */, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %1328 = shape_of(%var_1326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1329 = cast(%var_1326, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %1330 = dyn.reshape(%1327, %1328, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1331 = cast(meta[relay.Constant][74] /* ty=Tensor[(7, 3, 9), uint16] */, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %1332 = shape_of(%var_1326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1333 = cast(%var_1326, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %1334 = dyn.reshape(%1331, %1332, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1335 = bitwise_or(%1329, %1330) /* ty=Tensor[(7, 3, 9), uint16] */;
  %1336 = bitwise_and(%1333, %1334) /* ty=Tensor[(7, 3, 9), uint16] */;
  (%1335, %1336)
}

def @func_12720() -> (Tensor[(12, 4, 4), bool],) {
  %1337 = @func_12649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */;
  %1338 = %1337.1;
  (%1338,)
}

def @func_13552() -> (Tensor[(1287), int64], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) {
  %1339 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %1340 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %1341 = %1339.1;
  %1342 = %1340.1;
  %1343 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1341, %1342, %1343)
}

def @func_10356(%var_10290: Tensor[(8, 9, 9), float32]) -> (Tensor[(8, 9, 9), float32], Tensor[(8, 9, 9), float32]) {
  %1344 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1345 = %1344.0;
  %1346 = cast(%1345, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %1347 = cast(%var_10290, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
  %1348 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1349 = %1348.0;
  %1350 = cast(%1349, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %1351 = cast(%var_10290, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
  %1352 = mod(%1346, %1347) /* ty=Tensor[(8, 9, 9), float32] */;
  %1353 = floor_divide(%1350, %1351) /* ty=Tensor[(8, 9, 9), float32] */;
  (%1352, %1353)
}

def @func_4537() -> Tensor[(8, 1, 9), float32] {
  %1354 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1354.0
}

def @func_16135(%var_16115: Tensor[(14, 6, 15), float32], %var_16127: Tensor[(11, 117), int64]) -> (Tensor[(14, 6, 15), float32], Tensor[(11, 9, 13), bool], Tensor[(11, 117), int64]) {
  %1355 = cast(%var_16115, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
  %1356 = cast(%var_16127, dtype="int64") /* ty=Tensor[(11, 117), int64] */;
  %1357 = reshape(%1356, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
  %1358 = log10(%1355) /* ty=Tensor[(14, 6, 15), float32] */;
  %1359 = @func_2724(%1357) /* ty=Tensor[(11, 9, 13), bool] */;
  (%1358, %1359, %var_16127)
}

def @func_13624() -> (Tensor[(8, ?, 9), float32],) {
  %1360 = @func_13526() /* ty=Tensor[(8, ?, 9), float32] */;
  (%1360,)
}

def @func_3021() -> (Tensor[(8, 1, 9), float32],) {
  %1361 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1361,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13185() -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) {
  %2 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) {
    %0 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
    %1 = @func_11929() /* ty=Tensor[(4, 13, 14), float32] */;
    (%0, %1)
  };
  %2() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) */
}

def @func_1342(%var_1340: Tensor[(7, 3, 9), uint16]) -> (Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) {
  @func_1339(%var_1340) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */
}

def @func_2851() -> (Tensor[(8, 1, 9), float32],) {
  @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_6577() -> (Tensor[(8, 1, 9), float32],) {
  @func_6575() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_8594(%var_8593: Tensor[(7, 3, 9), uint16]) -> Tensor[(7, 3, 9), uint64] {
  %9 = fn (%var_8587: Tensor[(7, 3, 9), uint16]) -> Tensor[(7, 3, 9), uint64] {
    %3 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
    %4 = %3.1;
    %5 = cast(%var_8587, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
    %6 = shape_of(%4, dtype="int32") /* ty=Tensor[(3), int32] */;
    %7 = cast(%4, dtype="uint64") /* ty=Tensor[(7, 3, 9), uint64] */;
    %8 = dyn.reshape(%5, %6, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    add(%7, %8) /* ty=Tensor[(7, 3, 9), uint64] */
  };
  %9(%var_8593) /* ty=Tensor[(7, 3, 9), uint64] */
}

def @func_11607() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, ?, 9), float64], Tensor[(8, ?, 9), bool]) {
  @func_11605() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, ?, 9), float64], Tensor[(8, ?, 9), bool]) */
}

def @func_12530(%var_12505: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, ?), int16],) {
  %10 = cast(%var_12505, dtype="float64") /* ty=Tensor[(16, 8, 1), float64] */;
  %11 = asin(%10) /* ty=Tensor[(16, 8, 1), float64] */;
  %12 = cast(%var_12505, dtype="int16") /* ty=Tensor[(16, 8, 1), int16] */;
  %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%11, dtype="int16") /* ty=Tensor[(16, 8, 1), int16] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %16 = multiply(%14, %15) /* ty=Tensor[(16, 8, ?), int16] */;
  (%16,)
}

def @func_14361() -> Tensor[(8, 1, 9), float32] {
  @func_14359() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_8271() -> Tensor[(8, 1, 9), float32] {
  @func_8269() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_7799() -> Tensor[(8, 1, 9), float32] {
  @func_7797() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_5789() -> (Tensor[(12, 4, 4), bool],) {
  %24 = fn () -> (Tensor[(12, 4, 4), bool],) {
    %17 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 4, 4), float32] */, dtype="float32") /* ty=Tensor[(12, 4, 4), float32] */;
    %18 = cosh(%17) /* ty=Tensor[(12, 4, 4), float32] */;
    %19 = cast(meta[relay.Constant][0] /* ty=Tensor[(12, 4, 4), float32] */, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
    %20 = shape_of(%18, dtype="int32") /* ty=Tensor[(3), int32] */;
    %21 = cast(%18, dtype="bool") /* ty=Tensor[(12, 4, 4), bool] */;
    %22 = dyn.reshape(%19, %20, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %23 = greater_equal(%21, %22) /* ty=Tensor[(12, 4, 4), bool] */;
    (%23,)
  };
  %24() /* ty=(Tensor[(12, 4, 4), bool],) */
}

def @func_8698() -> (Tensor[(8, ?, 9), int64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32]) {
  %25 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
  %26 = %25.2;
  %27 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %28 = %27.0;
  %29 = cast(%28, dtype="int64") /* ty=Tensor[(8, 1, 9), int64] */;
  %30 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %31 = cast(%26, dtype="int64") /* ty=Tensor[(8, 1, 9), int64] */;
  %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %33 = cast(%28, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %34 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
  %35 = cast(%26, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %37 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %38 = left_shift(%31, %32) /* ty=Tensor[(8, ?, 9), int64] */;
  %39 = not_equal(%35, %36) /* ty=Tensor[(8, ?, 9), bool] */;
  %40 = %37.0;
  (%38, %39, %40)
}

def @func_13719(%var_13718: Tensor[(1, 1001), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(11, 117), int64], Tensor[(7, 11, 13), float32], Tensor[(?, 1001), float64], Tensor[(8, 1, 9), float32]) {
  %64 = fn (%var_13678: Tensor[(1, 1001), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(11, 117), int64], Tensor[(7, 11, 13), float32], Tensor[(?, 1001), float64], Tensor[(8, 1, 9), float32]) {
    %41 = @func_8830() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %42 = cast(meta[relay.Constant][1] /* ty=Tensor[(11, 117), int64] */, dtype="int64") /* ty=Tensor[(11, 117), int64] */;
    %43 = cast(%var_13678, dtype="float32") /* ty=Tensor[(1, 1001), float32] */;
    %44 = reshape(%43, newshape=[13, 77]) /* ty=Tensor[(13, 77), float32] */;
    %45 = @func_9104(%44) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), float32]) */;
    %46 = %45.1;
    %47 = cast(%46, dtype="uint64") /* ty=Tensor[(7, 11, 13), uint64] */;
    %48 = shape_of(%var_13678, dtype="int32") /* ty=Tensor[(2), int32] */;
    %49 = cast(%var_13678, dtype="uint64") /* ty=Tensor[(1, 1001), uint64] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %51 = minimum(%49, %50) /* ty=Tensor[(?, 1001), uint64] */;
    %52 = cast(%51, dtype="float32") /* ty=Tensor[(?, 1001), float32] */;
    %53 = reshape(%42, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %54 = reshape(%52, newshape=[1001]) /* ty=Tensor[(1001), float32] */;
    %55 = @func_6868(%53, %54) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) */;
    %56 = cast(%46, dtype="float32") /* ty=Tensor[(7, 11, 13), float32] */;
    %57 = cast(%51, dtype="float64") /* ty=Tensor[(?, 1001), float64] */;
    %58 = @func_8830() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %59 = %41.0;
    %60 = %55.1;
    %61 = asin(%56) /* ty=Tensor[(7, 11, 13), float32] */;
    %62 = asin(%57) /* ty=Tensor[(?, 1001), float64] */;
    %63 = %58.0;
    (%59, %60, meta[relay.Constant][1] /* ty=Tensor[(11, 117), int64] */, %61, %62, %63)
  };
  %64(%var_13718) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(11, 117), int64], Tensor[(7, 11, 13), float32], Tensor[(?, 1001), float64], Tensor[(8, 1, 9), float32]) */
}

def @func_10003() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %65 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
  %66 = @func_5707() /* ty=Tensor[(8, 1, 9), float32] */;
  (%65, %66)
}

def @func_11459() -> Tensor[(8, 1, 9), float32] {
  %68 = fn () -> Tensor[(8, 1, 9), float32] {
    %67 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
    %67.0
  };
  %68() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_14235(%var_14233: Tensor[(15, 15, 5), float64]) -> (Tensor[(15, 15, 5), float64], Tensor[(15, 15, 5), float32], Tensor[(15, 15, 5), float64]) {
  @func_14232(%var_14233) /* ty=(Tensor[(15, 15, 5), float64], Tensor[(15, 15, 5), float32], Tensor[(15, 15, 5), float64]) */
}

def @func_16747() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %69 = @func_15479() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %70 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %71 = %69.0;
  %72 = %70.0;
  (%71, %72)
}

def @main(%var_17123: Tensor[(10, 9, 12), uint16], %var_17124: Tensor[(10, 9, 12), uint16]) -> Tensor[(10, 9, 12), uint16] {
  %73 = cast(%var_17124, dtype="uint16") /* ty=Tensor[(10, 9, 12), uint16] */;
  %74 = shape_of(%var_17123, dtype="int32") /* ty=Tensor[(3), int32] */;
  %75 = cast(%var_17123, dtype="uint16") /* ty=Tensor[(10, 9, 12), uint16] */;
  %76 = dyn.reshape(%73, %74, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%75, %76) /* ty=Tensor[(10, 9, 12), uint16] */
}

def @func_3021() -> (Tensor[(8, 1, 9), float32],) {
  %77 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  (%77,)
}

def @func_12247() -> (Tensor[(8, 1, 9), float32],) {
  %78 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %79 = %78.0;
  (%79,)
}

def @func_15933() -> (Tensor[(8, 1, 9), float32],) {
  %80 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %81 = %80.0;
  (%81,)
}

def @func_16667(%var_16665: Tensor[(1287), int64]) -> (Tensor[(1287), float32], Tensor[(8, 1, 9), float32]) {
  @func_16664(%var_16665) /* ty=(Tensor[(1287), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_4539() -> Tensor[(8, 1, 9), float32] {
  @func_4537() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_10135() -> (Tensor[(8, 1, 9), float32],) {
  @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_12815() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_12813() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_11031() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %82 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %83 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
  %84 = %82.0;
  %85 = %83.0;
  (%84, %85)
}

def @func_10768(%var_10755: Tensor[(4, 13, 14), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) {
  %86 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %87 = @func_9628() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) */;
  %88 = %87.1;
  %89 = cast(%var_10755, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %90 = shape_of(%88, dtype="int32") /* ty=Tensor[(3), int32] */;
  %91 = cast(%88, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  %92 = dyn.reshape(%89, %90, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %93 = %86.0;
  %94 = multiply(%91, %92) /* ty=Tensor[(4, 13, 14), float32] */;
  (%93, %94)
}

def @func_12408() -> (Tensor[(8, 1, 9), float32],) {
  %97 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %95 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %96 = %95.1;
    (%96,)
  };
  %97() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_10562() -> Tensor[(8, 1, 9), float32] {
  %98 = fn () -> Tensor[(8, 1, 9), float32] {
    @func_9793() /* ty=Tensor[(8, 1, 9), float32] */
  };
  %98() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_6409(%var_6323: Tensor[(3, 9, 11), bool]) -> (Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) {
  %99 = cast(%var_6323, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
  %100 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(3, 9, 11), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %101 = cast(meta[relay.Constant][2] /* ty=Tensor[(3, 9, 11), bool] */, dtype="bool") /* ty=Tensor[(3, 9, 11), bool] */;
  %102 = dyn.reshape(%99, %100, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %103 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
  %104 = cast(meta[relay.Constant][3] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %105 = reshape(%104, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %106 = @func_5921(%105) /* ty=(Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) */;
  %107 = logical_or(%101, %102) /* ty=Tensor[(3, 9, 11), bool] */;
  %108 = %103.0;
  %109 = %106.2;
  (%107, %108, %109, meta[relay.Constant][3] /* ty=Tensor[(1152), float32] */)
}

def @func_7276(%var_7259: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) {
  %110 = cast(%var_7259, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %111 = reshape(%110, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %112 = @func_4671(%111) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) */;
  %113 = @func_5663() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) */;
  %114 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %115 = %112.7;
  %116 = %113.0;
  (%114, %115, %var_7259, %116)
}

def @func_9107(%var_9105: Tensor[(13, 77), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), float32]) {
  @func_9104(%var_9105) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), float32]) */
}

def @func_15481() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_15479() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_12533(%var_12531: Tensor[(16, 8, 1), float64]) -> (Tensor[(16, 8, ?), int16],) {
  @func_12530(%var_12531) /* ty=(Tensor[(16, 8, ?), int16],) */
}

def @func_7758() -> Tensor[(8, 1, 9), float32] {
  @func_7756() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_8062() -> Tensor[(8, 1, 9), float32] {
  @func_8060() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_9630() -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) {
  @func_9628() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) */
}

def @func_3429() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %121 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %117 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %118 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %119 = %117.0;
    %120 = %118.0;
    (%119, %120)
  };
  %121() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_9628() -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) {
  %122 = cast(meta[relay.Constant][4] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %123 = reshape(%122, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %124 = @func_4671(%123) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) */;
  %125 = cast(meta[relay.Constant][4] /* ty=Tensor[(1287), int64] */, dtype="float64") /* ty=Tensor[(1287), float64] */;
  %126 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
  %127 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
  %128 = %124.1;
  %129 = log(%125) /* ty=Tensor[(1287), float64] */;
  %130 = %126.0;
  (%127, %128, %129, %130)
}

def @func_12388() -> (Tensor[(8, 4, 9), int32], Tensor[(14), bool], Tensor[(420), float64], Tensor[(1, 14, 1), float32]) {
  @func_12386() /* ty=(Tensor[(8, 4, 9), int32], Tensor[(14), bool], Tensor[(420), float64], Tensor[(1, 14, 1), float32]) */
}

def @func_13457() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %131 = @func_12464() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %132 = @func_12813() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %133 = %131.0;
  %134 = %132.2;
  (%133, %134)
}

def @func_3490(%var_3442: Tensor[(1, 14, 1), bool], %var_3449: Tensor[(420), float64]) -> (Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) {
  %135 = cast(%var_3449, dtype="float64") /* ty=Tensor[(420), float64] */;
  %136 = reshape(%135, newshape=[15, 4, 7]) /* ty=Tensor[(15, 4, 7), float64] */;
  %137 = @func_953(%136) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) */;
  %138 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %139 = cast(%var_3442, dtype="bool") /* ty=Tensor[(1, 14, 1), bool] */;
  %140 = logical_and(%138, %139) /* ty=Tensor[(1, 14, 1), bool] */;
  %141 = cast(%140, dtype="float64") /* ty=Tensor[(1, 14, 1), float64] */;
  %142 = cast(False /* ty=bool */, dtype="float64") /* ty=float64 */;
  %143 = %137.1;
  %144 = minimum(%141, %142) /* ty=Tensor[(1, 14, 1), float64] */;
  (%143, %var_3449, %144)
}

def @func_4466(%var_4464: Tensor[(1287), int64], %var_4465: Tensor[(288, 4), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) {
  @func_4462(%var_4464, %var_4465) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */
}

def @func_13122() -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) {
  @func_13120() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) */
}

def @func_5362() -> (Tensor[(8, 1, 9), float32],) {
  %145 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %146 = %145.1;
  (%146,)
}

def @func_9912() -> (Tensor[(8, 1, 9), float32],) {
  %149 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %147 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %148 = %147.0;
    (%148,)
  };
  %149() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_15608() -> Tensor[(8, ?, 9), uint16] {
  @func_15606() /* ty=Tensor[(8, ?, 9), uint16] */
}

def @func_13994() -> (Tensor[(8, 1, 9), float32],) {
  %152 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %150 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %151 = %150.0;
    (%151,)
  };
  %152() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_16603(%var_16598: Tensor[(4, 2, 2), bool]) -> Tensor[(4, 2, 2), bool] {
  %153 = cast(%var_16598, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %154 = shape_of(meta[relay.Constant][5] /* ty=Tensor[(4, 2, 2), bool] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %155 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 2, 2), bool] */, dtype="bool") /* ty=Tensor[(4, 2, 2), bool] */;
  %156 = dyn.reshape(%153, %154, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_and(%155, %156) /* ty=Tensor[(4, 2, 2), bool] */
}

def @func_10223() -> (Tensor[(8, 1, 9), float32],) {
  %157 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %158 = %157.0;
  (%158,)
}

def @func_7299() -> (Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) {
  %162 = fn () -> (Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) {
    %159 = @func_6008() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
    %160 = %159.1;
    %161 = @func_3915() /* ty=Tensor[(8, 1, 9), float32] */;
    (%160, %161)
  };
  %162() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */
}

def @func_16510() -> (Tensor[(8, 1, 9), float32],) {
  @func_16508() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_10070() -> (Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) {
  %167 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) {
    %163 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
    %164 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
    %165 = %163.1;
    %166 = %164.3;
    (%165, %166)
  };
  %167() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */
}

def @func_3798() -> Tensor[(8, 1, 9), float32] {
  @func_2764() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_5763(%var_5761: uint64) -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) {
  @func_5760(%var_5761) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */
}

def @func_8805() -> (Tensor[(8, 1, 9), float32],) {
  @func_8803() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_8853() -> (Tensor[(8, 1, 9), float32],) {
  %168 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
  (%168,)
}

def @func_9519() -> (Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) {
  %169 = cast(meta[relay.Constant][6] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %170 = reshape(%169, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %171 = @func_7276(%170) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */;
  %172 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %173 = %172.0;
  %174 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %175 = %174.0;
  %176 = cast(%175, dtype="int8") /* ty=Tensor[(8, 1, 9), int8] */;
  %177 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %178 = cast(%173, dtype="int8") /* ty=Tensor[(8, 1, 9), int8] */;
  %179 = dyn.reshape(%176, %177, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %180 = %171.1;
  %181 = right_shift(%178, %179) /* ty=Tensor[(8, ?, 9), int8] */;
  (%180, meta[relay.Constant][6] /* ty=Tensor[(1287), int64] */, %181)
}

def @func_5227() -> Tensor[(8, 1, 9), float32] {
  %183 = fn () -> Tensor[(8, 1, 9), float32] {
    %182 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %182.0
  };
  %183() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_15356() -> Tensor[(1287), int64] {
  @func_15354() /* ty=Tensor[(1287), int64] */
}

def @func_4042(%var_4040: Tensor[(8, 16, 9), float32]) -> (Tensor[(8, 16, 9), bool],) {
  @func_4039(%var_4040) /* ty=(Tensor[(8, 16, 9), bool],) */
}

def @func_13746() -> Tensor[(8, 1, 9), float32] {
  %184 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %184.0
}

def @func_8060() -> Tensor[(8, 1, 9), float32] {
  %185 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %185.0
}

def @func_6466(%var_6456: Tensor[(8, 4, 9), float32]) -> (Tensor[(8, 4, 9), uint64],) {
  %186 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %187 = %186.0;
  %188 = cast(%187, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %189 = cast(%var_6456, dtype="uint64") /* ty=Tensor[(8, 4, 9), uint64] */;
  %190 = bitwise_xor(%188, %189) /* ty=Tensor[(8, 4, 9), uint64] */;
  (%190,)
}

def @func_10771(%var_10769: Tensor[(4, 13, 14), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) {
  @func_10768(%var_10769) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) */
}

def @func_7279(%var_7277: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) {
  @func_7276(%var_7277) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */
}

def @func_5333() -> (Tensor[(8, 1, 9), float32],) {
  %193 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %191 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %192 = %191.0;
    (%192,)
  };
  %193() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_14978() -> (Tensor[(8, 1, 9), float32],) {
  %196 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %194 = @func_14618() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %195 = %194.1;
    (%195,)
  };
  %196() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_11984() -> (Tensor[(8, 1, 9), float32],) {
  %197 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %198 = %197.0;
  (%198,)
}

def @func_13037() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), int8]) {
  %202 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), int8]) {
    %199 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %200 = %199.0;
    %201 = @func_11831() /* ty=Tensor[(8, ?, 9), int8] */;
    (%200, %201)
  };
  %202() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), int8]) */
}

def @func_17026() -> (Tensor[(8, 15, 9), uint32], Tensor[(8, 1, 9), float32]) {
  %210 = fn () -> (Tensor[(8, 15, 9), uint32], Tensor[(8, 1, 9), float32]) {
    %203 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %204 = %203.0;
    %205 = cast(%204, dtype="uint32") /* ty=Tensor[(8, 1, 9), uint32] */;
    %206 = cast(meta[relay.Constant][7] /* ty=Tensor[(8, 15, 9), float32] */, dtype="uint32") /* ty=Tensor[(8, 15, 9), uint32] */;
    %207 = @func_16577() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %208 = subtract(%205, %206) /* ty=Tensor[(8, 15, 9), uint32] */;
    %209 = %207.0;
    (%208, %209)
  };
  %210() /* ty=(Tensor[(8, 15, 9), uint32], Tensor[(8, 1, 9), float32]) */
}

def @func_5091(%var_5090: Tensor[(420), float64]) -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) {
  %219 = fn (%var_5077: Tensor[(420), float64]) -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) {
    %211 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %212 = cast(%var_5077, dtype="float64") /* ty=Tensor[(420), float64] */;
    %213 = reshape(%212, newshape=[15, 4, 7]) /* ty=Tensor[(15, 4, 7), float64] */;
    %214 = @func_953(%213) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) */;
    %215 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %216 = %211.0;
    %217 = %214.0;
    %218 = %215.0;
    (%216, %217, %var_5077, %218)
  };
  %219(%var_5090) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */
}

def @func_4087() -> (Tensor[(8, 1, 9), float32],) {
  %222 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %220 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %221 = %220.0;
    (%221,)
  };
  %222() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_8803() -> (Tensor[(8, 1, 9), float32],) {
  %223 = @func_8060() /* ty=Tensor[(8, 1, 9), float32] */;
  (%223,)
}

def @func_16430(%var_16426: Tensor[(1287), int64]) -> (Tensor[(8, ?, 9), float32], Tensor[(16, 8, ?), int16], Tensor[(7, 11, 13), float32], Tensor[(1001), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64]) {
  %224 = @func_8118() /* ty=(Tensor[(8, ?, 9), float32],) */;
  %225 = @func_15423() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(16, 8, ?), int16], Tensor[(2, 64), float64], Tensor[(8, 1, 9), float32]) */;
  %226 = cast(meta[relay.Constant][8] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %227 = cast(meta[relay.Constant][8] /* ty=Tensor[(1001), float32] */, dtype="float32") /* ty=Tensor[(1001), float32] */;
  %228 = reshape(%226, newshape=[13, 77]) /* ty=Tensor[(13, 77), float32] */;
  %229 = reshape(%227, newshape=[13, 77]) /* ty=Tensor[(13, 77), float32] */;
  %230 = @func_14722(%228, %229) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), bool]) */;
  %231 = @func_12153() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %232 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
  %233 = cast(%var_16426, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %234 = reshape(%233, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %235 = @func_8360(%234) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) */;
  %236 = %224.0;
  %237 = %225.1;
  %238 = %230.1;
  %239 = %231.1;
  %240 = %232.1;
  %241 = %235.1;
  (%236, %237, %238, meta[relay.Constant][8] /* ty=Tensor[(1001), float32] */, %239, %240, %241, %var_16426)
}

def @func_3494(%var_3492: Tensor[(1, 14, 1), bool], %var_3493: Tensor[(420), float64]) -> (Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) {
  @func_3490(%var_3492, %var_3493) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */
}

def @func_9348() -> (Tensor[(8, ?, 9), uint16],) {
  @func_9346() /* ty=(Tensor[(8, ?, 9), uint16],) */
}

def @func_955(%var_954: Tensor[(15, 4, 7), float64]) -> (Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) {
  %246 = fn (%var_944: Tensor[(15, 4, 7), float64]) -> (Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) {
    %242 = cast(%var_944, dtype="float64") /* ty=Tensor[(15, 4, 7), float64] */;
    %243 = cast(%var_944, dtype="float64") /* ty=Tensor[(15, 4, 7), float64] */;
    %244 = sqrt(%242) /* ty=Tensor[(15, 4, 7), float64] */;
    %245 = rsqrt(%243) /* ty=Tensor[(15, 4, 7), float64] */;
    (%244, %245)
  };
  %246(%var_954) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) */
}

def @func_6923() -> Tensor[(8, 1, 9), float32] {
  @func_6921() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_14494() -> (Tensor[(8, ?, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(11, 117), int64], Tensor[(91, 11), float32], Tensor[(8, 1, 9), float32]) {
  %264 = fn () -> (Tensor[(8, ?, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(11, 117), int64], Tensor[(91, 11), float32], Tensor[(8, 1, 9), float32]) {
    %247 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
    %248 = %247.1;
    %249 = @func_8698() /* ty=(Tensor[(8, ?, 9), int64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32]) */;
    %250 = %249.2;
    %251 = cast(%250, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
    %252 = shape_of(%248, dtype="int32") /* ty=Tensor[(3), int32] */;
    %253 = cast(%248, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
    %254 = dyn.reshape(%251, %252, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %255 = @func_10378() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %256 = cast(meta[relay.Constant][9] /* ty=Tensor[(91, 11), float32] */, dtype="float32") /* ty=Tensor[(91, 11), float32] */;
    %257 = reshape(%256, newshape=[1, 1001]) /* ty=Tensor[(1, 1001), float32] */;
    %258 = @func_13717(%257) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(11, 117), int64], Tensor[(7, 11, 13), float32], Tensor[(?, 1001), float64], Tensor[(8, 1, 9), float32]) */;
    %259 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %260 = power(%253, %254) /* ty=Tensor[(8, ?, 9), float64] */;
    %261 = %255.0;
    %262 = %258.2;
    %263 = %259.0;
    (%260, %261, %262, meta[relay.Constant][9] /* ty=Tensor[(91, 11), float32] */, %263)
  };
  %264() /* ty=(Tensor[(8, ?, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(11, 117), int64], Tensor[(91, 11), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_7638(%var_7636: Tensor[(792), float32], %var_7637: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) {
  @func_7634(%var_7636, %var_7637) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) */
}

def @func_11970(%var_11969: Tensor[(728), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(728), float32]) {
  %270 = fn (%var_11963: Tensor[(728), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(728), float32]) {
    %265 = cast(%var_11963, dtype="float32") /* ty=Tensor[(728), float32] */;
    %266 = reshape(%265, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
    %267 = @func_10768(%266) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) */;
    %268 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
    %269 = %267.0;
    (%268, %269, %var_11963)
  };
  %270(%var_11969) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(728), float32]) */
}

def @func_15647() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_15645() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_4008(%var_3949: Tensor[(8, 16, 9), float32], %var_4006: uint64) -> (Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) {
  %271 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %272 = %271.0;
  %273 = cast(%272, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %274 = cast(%var_3949, dtype="uint64") /* ty=Tensor[(8, 16, 9), uint64] */;
  %275 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %276 = %275.0;
  %277 = cast(%276, dtype="int16") /* ty=Tensor[(8, ?, 9), int16] */;
  %278 = cast(meta[relay.Constant][10] /* ty=Tensor[(8, 14, 9), uint16] */, dtype="int16") /* ty=Tensor[(8, 14, 9), int16] */;
  %279 = right_shift(%277, %278) /* ty=Tensor[(8, 14, 9), int16] */;
  %280 = cast(%279, dtype="float32") /* ty=Tensor[(8, 14, 9), float32] */;
  %281 = cast(meta[relay.Constant][11] /* ty=Tensor[(60, 2), float32] */, dtype="float32") /* ty=Tensor[(60, 2), float32] */;
  %282 = reshape(%281, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %283 = @func_3121(%282) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) */;
  %284 = cast(meta[relay.Constant][12] /* ty=Tensor[(728), float32] */, dtype="float32") /* ty=Tensor[(728), float32] */;
  %285 = reshape(%284, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %286 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %287 = cast(%var_4006, dtype="uint64") /* ty=uint64 */;
  %288 = reshape(%287, newshape=[]) /* ty=uint64 */;
  %289 = @func_1458(%288) /* ty=(Tensor[(7, 1, 2), bool],) */;
  %290 = multiply(%273, %274) /* ty=Tensor[(8, 16, 9), uint64] */;
  %291 = log10(%280) /* ty=Tensor[(8, 14, 9), float32] */;
  %292 = %283.2;
  %293 = @func_2472(%285) /* ty=Tensor[(4, 13, 14), float32] */;
  %294 = %286.0;
  %295 = %289.0;
  (%290, %291, %292, meta[relay.Constant][11] /* ty=Tensor[(60, 2), float32] */, %293, meta[relay.Constant][12] /* ty=Tensor[(728), float32] */, %294, %295, %var_4006)
}

def @func_4039(%var_4030: Tensor[(8, 16, 9), float32]) -> (Tensor[(8, 16, 9), bool],) {
  %296 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %297 = %296.1;
  %298 = cast(%297, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %299 = cast(%var_4030, dtype="bool") /* ty=Tensor[(8, 16, 9), bool] */;
  %300 = logical_or(%298, %299) /* ty=Tensor[(8, 16, 9), bool] */;
  (%300,)
}

def @func_15201() -> (Tensor[(8, 1, 9), float32],) {
  %303 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %301 = @func_9219() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %302 = %301.0;
    (%302,)
  };
  %303() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_4190() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %304 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %305 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %306 = %304.0;
  %307 = %305.1;
  (%306, %307)
}

def @func_4907(%var_4906: Tensor[(120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) {
  %318 = fn (%var_4888: Tensor[(120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) {
    %308 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %309 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %310 = cast(%var_4888, dtype="float32") /* ty=Tensor[(120), float32] */;
    %311 = reshape(%310, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float32] */;
    %312 = @func_1194(%311) /* ty=(Tensor[(1, 10, 12), float32],) */;
    %313 = @func_4847() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %314 = %308.0;
    %315 = %309.0;
    %316 = %312.0;
    %317 = %313.0;
    (%314, %315, %316, %var_4888, %317)
  };
  %318(%var_4906) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_3917() -> Tensor[(8, 1, 9), float32] {
  @func_3915() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_9387(%var_9373: Tensor[(792, 1), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) {
  %319 = @func_9320() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %320 = @func_8550() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %321 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %322 = cast(%var_9373, dtype="float32") /* ty=Tensor[(792, 1), float32] */;
  %323 = cast(meta[relay.Constant][13] /* ty=Tensor[(189), uint16] */, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %324 = reshape(%322, newshape=[792]) /* ty=Tensor[(792), float32] */;
  %325 = reshape(%323, newshape=[189]) /* ty=Tensor[(189), uint16] */;
  %326 = @func_7634(%324, %325) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) */;
  %327 = %319.0;
  %328 = %320.0;
  %329 = %321.1;
  %330 = %326.4;
  %331 = @func_8060() /* ty=Tensor[(8, 1, 9), float32] */;
  (%327, %328, %329, %330, %var_9373, meta[relay.Constant][13] /* ty=Tensor[(189), uint16] */, %331)
}

def @func_4302(%var_4300: Tensor[(8, 16, 9), float32]) -> Tensor[(8, 16, 9), uint64] {
  @func_4299(%var_4300) /* ty=Tensor[(8, 16, 9), uint64] */
}

def @func_13528() -> Tensor[(8, ?, 9), float32] {
  @func_13526() /* ty=Tensor[(8, ?, 9), float32] */
}

def @func_15645() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %332 = @func_12649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */;
  %333 = @func_12649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */;
  %334 = @func_15342() /* ty=Tensor[(8, 1, 9), float32] */;
  %335 = %332.0;
  %336 = %333.0;
  (%334, %335, %336)
}

def @func_7797() -> Tensor[(8, 1, 9), float32] {
  @func_6921() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_10005() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_10003() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_7553() -> (Tensor[(8, 1, 9), float32],) {
  %337 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  (%337,)
}

def @func_10827() -> (Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) {
  %338 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 1287), int64] */, dtype="int64") /* ty=Tensor[(1, 1287), int64] */;
  %339 = reshape(%338, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %340 = @func_7276(%339) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */;
  %341 = cast(meta[relay.Constant][14] /* ty=Tensor[(1, 1287), int64] */, dtype="float64") /* ty=Tensor[(1, 1287), float64] */;
  %342 = @func_9480() /* ty=Tensor[(8, 6, 9), uint64] */;
  %343 = @func_10160() /* ty=Tensor[(8, 1, 9), float32] */;
  %344 = %340.1;
  %345 = cosh(%341) /* ty=Tensor[(1, 1287), float64] */;
  %346 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
  (%342, %343, %344, %345, %346)
}

def @func_10933(%var_10932: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(1152), float32], uint64) {
  %355 = fn (%var_10911: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(1152), float32], uint64) {
    %347 = @func_9628() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(1287), float64], Tensor[(8, 1, 9), float32]) */;
    %348 = cast(%var_10911, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %349 = cast(meta[relay.Constant][15] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %350 = reshape(%348, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %351 = reshape(%349, newshape=[]) /* ty=uint64 */;
    %352 = @func_4587(%350, %351) /* ty=(Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) */;
    %353 = %347.3;
    %354 = %352.0;
    (%353, %354, %var_10911, meta[relay.Constant][15] /* ty=uint64 */)
  };
  %355(%var_10932) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(1152), float32], uint64) */
}

def @func_5499(%var_5497: Tensor[(8, 11, 9), float32]) -> Tensor[(8, 11, 9), int32] {
  @func_5496(%var_5497) /* ty=Tensor[(8, 11, 9), int32] */
}

def @func_15956() -> Tensor[(8, 1, 9), float32] {
  %357 = fn () -> Tensor[(8, 1, 9), float32] {
    %356 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %356.1
  };
  %357() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_13846() -> (Tensor[(4, 13, 14), float32], Tensor[(8, 11, 9), int32], Tensor[(792, 1), float32]) {
  %363 = fn () -> (Tensor[(4, 13, 14), float32], Tensor[(8, 11, 9), int32], Tensor[(792, 1), float32]) {
    %358 = @func_13184() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32]) */;
    %359 = cast(meta[relay.Constant][16] /* ty=Tensor[(792, 1), float32] */, dtype="float32") /* ty=Tensor[(792, 1), float32] */;
    %360 = reshape(%359, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
    %361 = %358.1;
    %362 = @func_5496(%360) /* ty=Tensor[(8, 11, 9), int32] */;
    (%361, %362, meta[relay.Constant][16] /* ty=Tensor[(792, 1), float32] */)
  };
  %363() /* ty=(Tensor[(4, 13, 14), float32], Tensor[(8, 11, 9), int32], Tensor[(792, 1), float32]) */
}

def @func_4952(%var_4951: Tensor[(14, 6, 6), float32]) -> Tensor[(14, 6, 6), float32] {
  %365 = fn (%var_4944: Tensor[(14, 6, 6), float32]) -> Tensor[(14, 6, 6), float32] {
    %364 = cast(%var_4944, dtype="float32") /* ty=Tensor[(14, 6, 6), float32] */;
    tan(%364) /* ty=Tensor[(14, 6, 6), float32] */
  };
  %365(%var_4951) /* ty=Tensor[(14, 6, 6), float32] */
}

def @func_6871(%var_6869: Tensor[(1287), int64], %var_6870: Tensor[(1001), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) {
  %375 = fn (%var_6819: Tensor[(1287), int64], %var_6859: Tensor[(1001), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) {
    %366 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %367 = cast(%var_6819, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %368 = reshape(%367, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %369 = @func_6175(%368) /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) */;
    %370 = cast(%var_6859, dtype="float32") /* ty=Tensor[(1001), float32] */;
    %371 = reshape(%370, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
    %372 = %366.0;
    %373 = %369.0;
    %374 = @func_5553(%371) /* ty=Tensor[(7, 11, 13), float32] */;
    (%372, %373, %var_6819, %374, %var_6859)
  };
  %375(%var_6869, %var_6870) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(7, 11, 13), float32], Tensor[(1001), float32]) */
}

def @func_9521() -> (Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) {
  @func_9519() /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) */
}

def @func_12775() -> Tensor[(8, 1, 9), float32] {
  @func_12773() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_15479() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %376 = @func_13746() /* ty=Tensor[(8, 1, 9), float32] */;
  %377 = @func_7756() /* ty=Tensor[(8, 1, 9), float32] */;
  (%376, %377)
}

def @func_11033() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_11031() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_14232(%var_14188: Tensor[(15, 15, 5), float64]) -> (Tensor[(15, 15, 5), float64], Tensor[(15, 15, 5), float32], Tensor[(15, 15, 5), float64]) {
  %378 = cast(%var_14188, dtype="float64") /* ty=Tensor[(15, 15, 5), float64] */;
  %379 = cast(%var_14188, dtype="float32") /* ty=Tensor[(15, 15, 5), float32] */;
  %380 = cast(%var_14188, dtype="float64") /* ty=Tensor[(15, 15, 5), float64] */;
  %381 = erf(%378) /* ty=Tensor[(15, 15, 5), float64] */;
  %382 = log2(%379) /* ty=Tensor[(15, 15, 5), float32] */;
  %383 = acos(%380) /* ty=Tensor[(15, 15, 5), float64] */;
  (%381, %382, %383)
}

def @func_11626() -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32]) {
  %390 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32]) {
    %384 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
    %385 = cast(meta[relay.Constant][17] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %386 = reshape(%385, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %387 = @func_7963(%386) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
    %388 = %384.0;
    %389 = %387.2;
    (%388, %389, meta[relay.Constant][17] /* ty=Tensor[(1152), float32] */)
  };
  %390() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32]) */
}

def @func_14725(%var_14723: Tensor[(13, 77), float32], %var_14724: Tensor[(13, 77), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), bool]) {
  %400 = fn (%var_14709: Tensor[(13, 77), float32], %var_14716: Tensor[(13, 77), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), bool]) {
    %391 = cast(%var_14709, dtype="float32") /* ty=Tensor[(13, 77), float32] */;
    %392 = reshape(%391, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
    %393 = cast(%var_14716, dtype="bool") /* ty=Tensor[(13, 77), bool] */;
    %394 = shape_of(%var_14709, dtype="int32") /* ty=Tensor[(2), int32] */;
    %395 = cast(%var_14709, dtype="bool") /* ty=Tensor[(13, 77), bool] */;
    %396 = dyn.reshape(%393, %394, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %397 = @func_14055() /* ty=Tensor[(8, 1, 9), float32] */;
    %398 = @func_5553(%392) /* ty=Tensor[(7, 11, 13), float32] */;
    %399 = not_equal(%395, %396) /* ty=Tensor[(13, 77), bool] */;
    (%397, %398, %399)
  };
  %400(%var_14723, %var_14724) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), bool]) */
}

def @func_12153() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %401 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %402 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %403 = %401.0;
  %404 = %402.0;
  (%403, %404)
}

def @func_4120(%var_4119: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %411 = fn (%var_4099: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
    %405 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %406 = cast(%var_4099, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %407 = reshape(%406, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
    %408 = @func_4039(%407) /* ty=(Tensor[(8, 16, 9), bool],) */;
    %409 = %405.0;
    %410 = %408.0;
    (%409, %410, %var_4099)
  };
  %411(%var_4119) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */
}

def @func_1339(%var_1326: Tensor[(7, 3, 9), uint16]) -> (Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) {
  %412 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 3, 9), uint16] */, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %413 = shape_of(%var_1326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %414 = cast(%var_1326, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %415 = dyn.reshape(%412, %413, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %416 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 3, 9), uint16] */, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %417 = shape_of(%var_1326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %418 = cast(%var_1326, dtype="uint16") /* ty=Tensor[(7, 3, 9), uint16] */;
  %419 = dyn.reshape(%416, %417, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %420 = bitwise_or(%414, %415) /* ty=Tensor[(7, 3, 9), uint16] */;
  %421 = bitwise_and(%418, %419) /* ty=Tensor[(7, 3, 9), uint16] */;
  (%420, %421)
}

def @func_3217() -> (Tensor[(8, 1, 9), float32],) {
  %424 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %422 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %423 = %422.0;
    (%423,)
  };
  %424() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_6009() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %431 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
    %425 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %426 = cast(meta[relay.Constant][19] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %427 = reshape(%426, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %428 = @func_4396(%427) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
    %429 = %425.0;
    %430 = %428.1;
    (%429, %430, meta[relay.Constant][19] /* ty=Tensor[(1152), float32] */)
  };
  %431() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */
}

def @func_12155() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_12153() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_4398(%var_4397: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %438 = fn (%var_4381: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
    %432 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %433 = cast(%var_4381, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %434 = reshape(%433, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
    %435 = @func_4039(%434) /* ty=(Tensor[(8, 16, 9), bool],) */;
    %436 = %432.1;
    %437 = %435.0;
    (%436, %437, %var_4381)
  };
  %438(%var_4397) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */
}

def @func_10520() -> (Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(792), float32]) {
  %444 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(792), float32]) {
    %439 = cast(meta[relay.Constant][20] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %440 = reshape(%439, newshape=[792, 1]) /* ty=Tensor[(792, 1), float32] */;
    %441 = @func_9387(%440) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) */;
    %442 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
    %443 = %441.5;
    (%442, %443, meta[relay.Constant][20] /* ty=Tensor[(792), float32] */)
  };
  %444() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(792), float32]) */
}

def @func_4462(%var_4432: Tensor[(1287), int64], %var_4436: Tensor[(288, 4), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) {
  %445 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %446 = cast(%var_4432, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %447 = reshape(%446, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
  %448 = cast(%var_4436, dtype="float32") /* ty=Tensor[(288, 4), float32] */;
  %449 = reshape(%448, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %450 = @func_4118(%449) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
  %451 = %450.1;
  %452 = cast(%451, dtype="float32") /* ty=Tensor[(8, 16, 9), float32] */;
  %453 = %445.0;
  %454 = @func_2724(%447) /* ty=Tensor[(11, 9, 13), bool] */;
  %455 = erf(%452) /* ty=Tensor[(8, 16, 9), float32] */;
  (%453, %454, %var_4432, %var_4436, %455)
}

def @func_10829() -> (Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) {
  @func_10827() /* ty=(Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) */
}

def @func_9793() -> Tensor[(8, 1, 9), float32] {
  %456 = @func_5115() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %456.0
}

def @func_1461(%var_1459: uint64) -> (Tensor[(7, 1, 2), bool],) {
  @func_1458(%var_1459) /* ty=(Tensor[(7, 1, 2), bool],) */
}

def @func_9221() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_9219() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_11930() -> Tensor[(4, 13, 14), float32] {
  %458 = fn () -> Tensor[(4, 13, 14), float32] {
    %457 = @func_3853() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) */;
    %457.1
  };
  %458() /* ty=Tensor[(4, 13, 14), float32] */
}

def @func_15424() -> (Tensor[(8, 14, 9), uint64], Tensor[(16, 8, ?), int16], Tensor[(2, 64), float64], Tensor[(8, 1, 9), float32]) {
  %465 = fn () -> (Tensor[(8, 14, 9), uint64], Tensor[(16, 8, ?), int16], Tensor[(2, 64), float64], Tensor[(8, 1, 9), float32]) {
    %459 = cast(meta[relay.Constant][21] /* ty=Tensor[(2, 64), float64] */, dtype="float64") /* ty=Tensor[(2, 64), float64] */;
    %460 = reshape(%459, newshape=[16, 8, 1]) /* ty=Tensor[(16, 8, 1), float64] */;
    %461 = @func_12530(%460) /* ty=(Tensor[(16, 8, ?), int16],) */;
    %462 = @func_4166() /* ty=Tensor[(8, 14, 9), uint64] */;
    %463 = %461.0;
    %464 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
    (%462, %463, meta[relay.Constant][21] /* ty=Tensor[(2, 64), float64] */, %464)
  };
  %465() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(16, 8, ?), int16], Tensor[(2, 64), float64], Tensor[(8, 1, 9), float32]) */
}

def @func_5555(%var_5554: Tensor[(7, 11, 13), float32]) -> Tensor[(7, 11, 13), float32] {
  %467 = fn (%var_5550: Tensor[(7, 11, 13), float32]) -> Tensor[(7, 11, 13), float32] {
    %466 = cast(%var_5550, dtype="float32") /* ty=Tensor[(7, 11, 13), float32] */;
    sinh(%466) /* ty=Tensor[(7, 11, 13), float32] */
  };
  %467(%var_5554) /* ty=Tensor[(7, 11, 13), float32] */
}

def @func_6669() -> (Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) {
  @func_6667() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_2727(%var_2725: Tensor[(11, 9, 13), int64]) -> Tensor[(11, 9, 13), bool] {
  @func_2724(%var_2725) /* ty=Tensor[(11, 9, 13), bool] */
}

def @func_16207() -> (Tensor[(8, 1, 9), float32],) {
  @func_16205() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_3883() -> Tensor[(8, 1, 9), float32] {
  %469 = fn () -> Tensor[(8, 1, 9), float32] {
    %468 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %468.0
  };
  %469() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_1458(%var_1450: uint64) -> (Tensor[(7, 1, 2), bool],) {
  %470 = cast(%var_1450, dtype="bool") /* ty=bool */;
  %471 = cast(meta[relay.Constant][22] /* ty=Tensor[(7, 1, 2), uint64] */, dtype="bool") /* ty=Tensor[(7, 1, 2), bool] */;
  %472 = greater(%470, %471) /* ty=Tensor[(7, 1, 2), bool] */;
  (%472,)
}

def @func_16773(%var_16772: Tensor[(486), float32]) -> (Tensor[(14), bool], Tensor[(486), float32], Tensor[(486), float32], Tensor[(7, 104), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %485 = fn (%var_16760: Tensor[(486), float32]) -> (Tensor[(14), bool], Tensor[(486), float32], Tensor[(486), float32], Tensor[(7, 104), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %473 = @func_13120() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) */;
    %474 = cast(%var_16760, dtype="float32") /* ty=Tensor[(486), float32] */;
    %475 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 104), float32] */, dtype="float32") /* ty=Tensor[(7, 104), float32] */;
    %476 = reshape(%474, newshape=[486]) /* ty=Tensor[(486), float32] */;
    %477 = reshape(%475, newshape=[728]) /* ty=Tensor[(728), float32] */;
    %478 = @func_16300(%476, %477) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(486), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32]) */;
    %479 = @func_16747() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %480 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %481 = %473.2;
    %482 = %478.2;
    %483 = %479.0;
    %484 = %480.1;
    (%481, %482, %var_16760, meta[relay.Constant][23] /* ty=Tensor[(7, 104), float32] */, %483, %484)
  };
  %485(%var_16772) /* ty=(Tensor[(14), bool], Tensor[(486), float32], Tensor[(486), float32], Tensor[(7, 104), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_9481() -> Tensor[(8, 6, 9), uint64] {
  %490 = fn () -> Tensor[(8, 6, 9), uint64] {
    %486 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %487 = %486.0;
    %488 = cast(%487, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
    %489 = cast(meta[relay.Constant][24] /* ty=Tensor[(8, 6, 9), float32] */, dtype="uint64") /* ty=Tensor[(8, 6, 9), uint64] */;
    maximum(%488, %489) /* ty=Tensor[(8, 6, 9), uint64] */
  };
  %490() /* ty=Tensor[(8, 6, 9), uint64] */
}

def @func_15174(%var_15172: Tensor[(1152), float32], %var_15173: Tensor[(189), uint16]) -> (Tensor[(14), bool], Tensor[(288, 4), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16]) {
  %507 = fn (%var_15152: Tensor[(1152), float32], %var_15157: Tensor[(189), uint16]) -> (Tensor[(14), bool], Tensor[(288, 4), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16]) {
    %491 = @func_13120() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) */;
    %492 = cast(meta[relay.Constant][25] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %493 = cast(%var_15152, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %494 = reshape(%492, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %495 = reshape(%493, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
    %496 = @func_4462(%494, %495) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
    %497 = @func_14977() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %498 = cast(%var_15157, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %499 = %491.2;
    %500 = cast(%499, dtype="bool") /* ty=Tensor[(14), bool] */;
    %501 = reshape(%498, newshape=[3, 63]) /* ty=Tensor[(3, 63), uint16] */;
    %502 = reshape(%500, newshape=[14]) /* ty=Tensor[(14), bool] */;
    %503 = @func_4222(%501, %502) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) */;
    %504 = %496.3;
    %505 = %497.0;
    %506 = %503.4;
    (%499, %504, meta[relay.Constant][25] /* ty=Tensor[(1287), int64] */, %var_15152, %505, %506, %var_15157)
  };
  %507(%var_15172, %var_15173) /* ty=(Tensor[(14), bool], Tensor[(288, 4), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16]) */
}

def @func_9167(%var_9164: Tensor[(1, 120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32], Tensor[(1, 120), float32]) {
  %508 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %509 = cast(meta[relay.Constant][26] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %510 = reshape(%509, newshape=[]) /* ty=uint64 */;
  %511 = @func_5760(%510) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
  %512 = cast(%var_9164, dtype="float32") /* ty=Tensor[(1, 120), float32] */;
  %513 = reshape(%512, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %514 = @func_3121(%513) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) */;
  %515 = %508.0;
  %516 = %511.2;
  %517 = %514.0;
  (%515, %516, meta[relay.Constant][26] /* ty=uint64 */, %517, %var_9164)
}

def @func_14943() -> (Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) {
  %518 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %519 = %518.0;
  %520 = @func_10649() /* ty=Tensor[(12, 4, 4), bool] */;
  (%519, %520)
}

def @func_10965() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) {
  %521 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %522 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %523 = %521.0;
  %524 = %522.0;
  (%523, %524)
}

def @func_7242() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) {
  @func_7240() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) */
}

def @func_2764() -> Tensor[(8, 1, 9), float32] {
  %525 = cast(meta[relay.Constant][27] /* ty=Tensor[(8, 1, 9), float32] */, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  sin(%525) /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_14366() -> (Tensor[(8, 1, 9), float32],) {
  %527 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %526 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
    (%526,)
  };
  %527() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_15194() -> Tensor[(3, 11, 4), int8] {
  @func_15192() /* ty=Tensor[(3, 11, 4), int8] */
}

def @func_6177(%var_6176: Tensor[(1287), int64]) -> (Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) {
  %540 = fn (%var_6141: Tensor[(1287), int64]) -> (Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) {
    %528 = cast(%var_6141, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %529 = reshape(%528, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %530 = @func_4671(%529) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) */;
    %531 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
    %532 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
    %533 = %532.1;
    %534 = cast(%533, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
    %535 = shape_of(%531, dtype="int32") /* ty=Tensor[(3), int32] */;
    %536 = cast(%531, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
    %537 = dyn.reshape(%534, %535, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %538 = %530.6;
    %539 = less_equal(%536, %537) /* ty=Tensor[(8, ?, 9), bool] */;
    (%538, %var_6141, %539)
  };
  %540(%var_6176) /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) */
}

def @func_16927() -> Tensor[(8, 1, 9), float32] {
  @func_16925() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_4225(%var_4223: Tensor[(3, 63), uint16], %var_4224: Tensor[(14), bool]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) {
  %553 = fn (%var_4213: Tensor[(3, 63), uint16], %var_4218: Tensor[(14), bool]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) {
    %541 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %542 = cast(%var_4213, dtype="uint16") /* ty=Tensor[(3, 63), uint16] */;
    %543 = reshape(%542, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
    %544 = @func_1339(%543) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
    %545 = cast(%var_4218, dtype="bool") /* ty=Tensor[(14), bool] */;
    %546 = cast(meta[relay.Constant][28] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %547 = reshape(%545, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
    %548 = reshape(%546, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %549 = @func_3490(%547, %548) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
    %550 = %541.0;
    %551 = %544.0;
    %552 = %549.1;
    (%550, %551, %var_4213, %552, %var_4218, meta[relay.Constant][28] /* ty=Tensor[(420), float64] */)
  };
  %553(%var_4223, %var_4224) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) */
}

def @func_15079() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_15077() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_13402(%var_13401: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), uint16], Tensor[(1, 1287), float64], Tensor[(8, 9, 9), float32], Tensor[(1, 648), float32]) {
  %565 = fn (%var_13345: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), uint16], Tensor[(1, 1287), float64], Tensor[(8, 9, 9), float32], Tensor[(1, 648), float32]) {
    %554 = @func_12247() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %555 = cast(%var_13345, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %556 = reshape(%555, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
    %557 = @func_10827() /* ty=(Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) */;
    %558 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 648), float32] */, dtype="float32") /* ty=Tensor[(1, 648), float32] */;
    %559 = reshape(%558, newshape=[8, 9, 9]) /* ty=Tensor[(8, 9, 9), float32] */;
    %560 = @func_10356(%559) /* ty=(Tensor[(8, 9, 9), float32], Tensor[(8, 9, 9), float32]) */;
    %561 = %554.0;
    %562 = @func_8592(%556) /* ty=Tensor[(7, 3, 9), uint64] */;
    %563 = %557.3;
    %564 = %560.0;
    (%561, %562, %var_13345, %563, %564, meta[relay.Constant][29] /* ty=Tensor[(1, 648), float32] */)
  };
  %565(%var_13401) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), uint16], Tensor[(1, 1287), float64], Tensor[(8, 9, 9), float32], Tensor[(1, 648), float32]) */
}

def @func_15996() -> Tensor[(8, 1, 9), float32] {
  @func_15994() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_13535() -> Tensor[(8, 1, 9), float32] {
  %566 = @func_10589() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %566.0
}

def @func_16606(%var_16604: Tensor[(4, 2, 2), bool]) -> Tensor[(4, 2, 2), bool] {
  @func_16603(%var_16604) /* ty=Tensor[(4, 2, 2), bool] */
}

def @func_6469(%var_6467: Tensor[(8, 4, 9), float32]) -> (Tensor[(8, 4, 9), uint64],) {
  @func_6466(%var_6467) /* ty=(Tensor[(8, 4, 9), uint64],) */
}

def @func_16508() -> (Tensor[(8, 1, 9), float32],) {
  %567 = @func_10988() /* ty=Tensor[(8, 1, 9), float32] */;
  (%567,)
}

def @func_16304(%var_16302: Tensor[(486), float32], %var_16303: Tensor[(728), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(486), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32]) {
  @func_16300(%var_16302, %var_16303) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(486), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32]) */
}

def @func_2475(%var_2473: Tensor[(4, 13, 14), float32]) -> Tensor[(4, 13, 14), float32] {
  @func_2472(%var_2473) /* ty=Tensor[(4, 13, 14), float32] */
}

def @func_3854() -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) {
  %575 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) {
    %568 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %569 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 104), float32] */, dtype="float32") /* ty=Tensor[(7, 104), float32] */;
    %570 = reshape(%569, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
    %571 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 104), float32] */, dtype="float32") /* ty=Tensor[(7, 104), float32] */;
    %572 = %568.0;
    %573 = @func_2472(%570) /* ty=Tensor[(4, 13, 14), float32] */;
    %574 = tan(%571) /* ty=Tensor[(7, 104), float32] */;
    (%572, %573, %574)
  };
  %575() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) */
}

def @func_3800() -> Tensor[(8, 1, 9), float32] {
  @func_3798() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_11129(%var_11127: Tensor[(792, 1), float32], %var_11128: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(792, ?), int64], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(792, ?), bool]) {
  %615 = fn (%var_11063: Tensor[(792, 1), float32], %var_11107: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(792, ?), int64], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(792, ?), bool]) {
    %576 = @func_10589() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %577 = cast(meta[relay.Constant][31] /* ty=Tensor[(792, 1), float32] */, dtype="float32") /* ty=Tensor[(792, 1), float32] */;
    %578 = reshape(%577, newshape=[792, 1]) /* ty=Tensor[(792, 1), float32] */;
    %579 = @func_9387(%578) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) */;
    %580 = cast(meta[relay.Constant][31] /* ty=Tensor[(792, 1), float32] */, dtype="int64") /* ty=Tensor[(792, 1), int64] */;
    %581 = shape_of(%var_11063, dtype="int32") /* ty=Tensor[(2), int32] */;
    %582 = cast(%var_11063, dtype="int64") /* ty=Tensor[(792, 1), int64] */;
    %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
    %584 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %585 = cast(%var_11107, dtype="float32") /* ty=Tensor[(10), float32] */;
    %586 = reshape(%585, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
    %587 = @func_5189(%586) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
    %588 = cast(%var_11063, dtype="uint64") /* ty=Tensor[(792, 1), uint64] */;
    %589 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(792, 1), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %590 = cast(meta[relay.Constant][31] /* ty=Tensor[(792, 1), float32] */, dtype="uint64") /* ty=Tensor[(792, 1), uint64] */;
    %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
    %592 = left_shift(%590, %591) /* ty=Tensor[(792, ?), uint64] */;
    %593 = cast(meta[relay.Constant][31] /* ty=Tensor[(792, 1), float32] */, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
    %594 = shape_of(%var_11063, dtype="int32") /* ty=Tensor[(2), int32] */;
    %595 = cast(%var_11063, dtype="bool") /* ty=Tensor[(792, 1), bool] */;
    %596 = dyn.reshape(%593, %594, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %597 = logical_and(%595, %596) /* ty=Tensor[(792, ?), bool] */;
    %598 = cast(%597, dtype="float32") /* ty=Tensor[(792, ?), float32] */;
    %599 = shape_of(%592, dtype="int32") /* ty=Tensor[(2), int32] */;
    %600 = cast(%592, dtype="float32") /* ty=Tensor[(792, ?), float32] */;
    %601 = dyn.reshape(%598, %599, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %602 = power(%600, %601) /* ty=Tensor[(792, ?), float32] */;
    %603 = cast(%602, dtype="float64") /* ty=Tensor[(792, ?), float64] */;
    %604 = tan(%603) /* ty=Tensor[(792, ?), float64] */;
    %605 = cast(%602, dtype="bool") /* ty=Tensor[(792, ?), bool] */;
    %606 = shape_of(%604, dtype="int32") /* ty=Tensor[(2), int32] */;
    %607 = cast(%604, dtype="bool") /* ty=Tensor[(792, ?), bool] */;
    %608 = dyn.reshape(%605, %606, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %609 = %576.1;
    %610 = %579.2;
    %611 = bitwise_xor(%582, %583) /* ty=Tensor[(792, ?), int64] */;
    %612 = %584.0;
    %613 = %587.1;
    %614 = greater_equal(%607, %608) /* ty=Tensor[(792, ?), bool] */;
    (%609, %610, %611, %612, %613, %var_11107, %614)
  };
  %615(%var_11127, %var_11128) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(792, ?), int64], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(792, ?), bool]) */
}

def @func_6965(%var_6958: Tensor[(8, 13, 9), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 13, 9), float32]) {
  %616 = @func_6422() /* ty=Tensor[(8, 1, 9), float32] */;
  %617 = cast(%616, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %618 = cast(%var_6958, dtype="float32") /* ty=Tensor[(8, 13, 9), float32] */;
  %619 = @func_5707() /* ty=Tensor[(8, 1, 9), float32] */;
  %620 = subtract(%617, %618) /* ty=Tensor[(8, 13, 9), float32] */;
  (%619, %620)
}

def @func_10650() -> Tensor[(12, 4, 4), bool] {
  %622 = fn () -> Tensor[(12, 4, 4), bool] {
    %621 = @func_5788() /* ty=(Tensor[(12, 4, 4), bool],) */;
    %621.0
  };
  %622() /* ty=Tensor[(12, 4, 4), bool] */
}

def @func_2472(%var_2468: Tensor[(4, 13, 14), float32]) -> Tensor[(4, 13, 14), float32] {
  %623 = cast(%var_2468, dtype="float32") /* ty=Tensor[(4, 13, 14), float32] */;
  asinh(%623) /* ty=Tensor[(4, 13, 14), float32] */
}

def @func_9170(%var_9168: Tensor[(1, 120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32], Tensor[(1, 120), float32]) {
  @func_9167(%var_9168) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32], Tensor[(1, 120), float32]) */
}

def @func_13409() -> Tensor[(8, 1, 9), float32] {
  %625 = fn () -> Tensor[(8, 1, 9), float32] {
    %624 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %624.0
  };
  %625() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_16330(%var_16329: Tensor[(12, 5, 16), float64]) -> Tensor[(12, 5, 16), float64] {
  %630 = fn (%var_16323: Tensor[(12, 5, 16), float64]) -> Tensor[(12, 5, 16), float64] {
    %626 = cast(meta[relay.Constant][32] /* ty=Tensor[(12, 5, 16), float64] */, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
    %627 = shape_of(%var_16323, dtype="int32") /* ty=Tensor[(3), int32] */;
    %628 = cast(%var_16323, dtype="float64") /* ty=Tensor[(12, 5, 16), float64] */;
    %629 = dyn.reshape(%626, %627, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    multiply(%628, %629) /* ty=Tensor[(12, 5, 16), float64] */
  };
  %630(%var_16329) /* ty=Tensor[(12, 5, 16), float64] */
}

def @func_3651() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_15077() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %631 = @func_12153() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %632 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %633 = %631.0;
  %634 = %632.0;
  (%633, %634)
}

def @func_4299(%var_4294: Tensor[(8, 16, 9), float32]) -> Tensor[(8, 16, 9), uint64] {
  %635 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %636 = %635.1;
  %637 = cast(%636, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
  %638 = cast(%var_4294, dtype="uint64") /* ty=Tensor[(8, 16, 9), uint64] */;
  logical_xor(%637, %638) /* ty=Tensor[(8, 16, 9), uint64] */
}

def @func_3266() -> (Tensor[(8, 1, 9), float32],) {
  %639 = @func_3216() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %640 = %639.0;
  (%640,)
}

def @func_16978() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) {
  @func_16976() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) */
}

def @func_14620() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_14618() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_13748() -> Tensor[(8, 1, 9), float32] {
  @func_13746() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_8316() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %645 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %641 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
    %642 = @func_7240() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) */;
    %643 = %641.4;
    %644 = %642.1;
    (%643, %644)
  };
  %645() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_15700(%var_15699: Tensor[(8, 4, 9), float32]) -> (Tensor[(8, 4, 9), bool],) {
  %651 = fn (%var_15681: Tensor[(8, 4, 9), float32]) -> (Tensor[(8, 4, 9), bool],) {
    %646 = @func_15077() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %647 = %646.1;
    %648 = cast(%647, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
    %649 = cast(%var_15681, dtype="bool") /* ty=Tensor[(8, 4, 9), bool] */;
    %650 = greater_equal(%648, %649) /* ty=Tensor[(8, 4, 9), bool] */;
    (%650,)
  };
  %651(%var_15699) /* ty=(Tensor[(8, 4, 9), bool],) */
}

def @func_4671(%var_4650: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) {
  %652 = cast(meta[relay.Constant][33] /* ty=Tensor[(182, 4), float32] */, dtype="float32") /* ty=Tensor[(182, 4), float32] */;
  %653 = reshape(%652, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %654 = cast(meta[relay.Constant][34] /* ty=Tensor[(182, 4), float32] */, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
  %655 = shape_of(meta[relay.Constant][33] /* ty=Tensor[(182, 4), float32] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %656 = cast(meta[relay.Constant][33] /* ty=Tensor[(182, 4), float32] */, dtype="float64") /* ty=Tensor[(182, 4), float64] */;
  %657 = dyn.reshape(%654, %655, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %658 = cast(%var_4650, dtype="int64") /* ty=Tensor[(1287), int64] */;
  %659 = cast(meta[relay.Constant][35] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %660 = reshape(%658, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
  %661 = reshape(%659, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
  %662 = @func_4462(%660, %661) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
  %663 = cast(meta[relay.Constant][36] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %664 = reshape(%663, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %665 = @func_3121(%664) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) */;
  %666 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  %667 = @func_2472(%653) /* ty=Tensor[(4, 13, 14), float32] */;
  %668 = subtract(%656, %657) /* ty=Tensor[(182, 4), float64] */;
  %669 = %662.4;
  %670 = %665.1;
  (%666, %667, %668, %669, %var_4650, meta[relay.Constant][35] /* ty=Tensor[(1152), float32] */, %670, meta[relay.Constant][36] /* ty=Tensor[(120), float32] */)
}

def @func_3701() -> (Tensor[(8, ?, 9), uint16],) {
  %680 = fn () -> (Tensor[(8, ?, 9), uint16],) {
    %671 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %672 = %671.0;
    %673 = cast(%672, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
    %674 = log10(%673) /* ty=Tensor[(8, 1, 9), float64] */;
    %675 = cast(%672, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
    %676 = shape_of(%674, dtype="int32") /* ty=Tensor[(3), int32] */;
    %677 = cast(%674, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
    %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %679 = subtract(%677, %678) /* ty=Tensor[(8, ?, 9), uint16] */;
    (%679,)
  };
  %680() /* ty=(Tensor[(8, ?, 9), uint16],) */
}

def @func_4268() -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) {
  %681 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %682 = cast(meta[relay.Constant][37] /* ty=Tensor[(1, 14), bool] */, dtype="bool") /* ty=Tensor[(1, 14), bool] */;
  %683 = cast(meta[relay.Constant][38] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %684 = reshape(%682, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %685 = reshape(%683, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %686 = @func_3490(%684, %685) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %687 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %688 = %681.0;
  %689 = %686.0;
  %690 = %687.1;
  (%688, %689, meta[relay.Constant][37] /* ty=Tensor[(1, 14), bool] */, meta[relay.Constant][38] /* ty=Tensor[(420), float64] */, %690)
}

def @func_8855() -> (Tensor[(8, 1, 9), float32],) {
  @func_8853() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_11780(%var_11778: Tensor[(189), uint16], %var_11779: Tensor[(14), bool]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16], Tensor[(14), bool], Tensor[(11, 9, 13), bool]) {
  %703 = fn (%var_11737: Tensor[(189), uint16], %var_11738: Tensor[(14), bool]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16], Tensor[(14), bool], Tensor[(11, 9, 13), bool]) {
    %691 = @func_6575() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %692 = @func_9320() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %693 = cast(%var_11737, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %694 = cast(%var_11738, dtype="bool") /* ty=Tensor[(14), bool] */;
    %695 = reshape(%693, newshape=[3, 63]) /* ty=Tensor[(3, 63), uint16] */;
    %696 = reshape(%694, newshape=[14]) /* ty=Tensor[(14), bool] */;
    %697 = @func_4222(%695, %696) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) */;
    %698 = @func_9295() /* ty=(Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) */;
    %699 = %691.0;
    %700 = %692.0;
    %701 = %697.4;
    %702 = %698.1;
    (%699, %700, %701, %var_11737, %var_11738, %702)
  };
  %703(%var_11778, %var_11779) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(14), bool], Tensor[(189), uint16], Tensor[(14), bool], Tensor[(11, 9, 13), bool]) */
}

def @func_8457() -> Tensor[(8, 1, 9), float32] {
  @func_8455() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_13120() -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(14), bool], Tensor[(420), float64], uint64, uint64) {
  %704 = @func_12813() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %705 = cast(meta[relay.Constant][39] /* ty=Tensor[(14), bool] */, dtype="bool") /* ty=Tensor[(14), bool] */;
  %706 = cast(meta[relay.Constant][40] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %707 = reshape(%705, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %708 = reshape(%706, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %709 = @func_3490(%707, %708) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %710 = cast(meta[relay.Constant][41] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %711 = reshape(%710, newshape=[]) /* ty=uint64 */;
  %712 = @func_5760(%711) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
  %713 = %704.1;
  %714 = %709.0;
  %715 = %712.3;
  (%713, %714, meta[relay.Constant][39] /* ty=Tensor[(14), bool] */, meta[relay.Constant][40] /* ty=Tensor[(420), float64] */, %715, meta[relay.Constant][41] /* ty=uint64 */)
}

def @func_7240() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) {
  %716 = cast(meta[relay.Constant][42] /* ty=Tensor[(936), float32] */, dtype="float32") /* ty=Tensor[(936), float32] */;
  %717 = reshape(%716, newshape=[8, 13, 9]) /* ty=Tensor[(8, 13, 9), float32] */;
  %718 = @func_6965(%717) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 13, 9), float32]) */;
  %719 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %720 = %718.0;
  (%719, %720, meta[relay.Constant][42] /* ty=Tensor[(936), float32] */)
}

def @func_2801() -> (Tensor[(8, 1, 9), float32],) {
  %721 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  (%721,)
}

def @func_11224(%var_11221: Tensor[(3, 10, 16), float32], %var_11222: Tensor[(3, 10, 16), float32], %var_11223: Tensor[(792), float32]) -> (Tensor[(3, 10, 16), float32], Tensor[(8, 6, 9), uint64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32]) {
  %742 = fn (%var_11131: Tensor[(3, 10, 16), float32], %var_11132: Tensor[(3, 10, 16), float32], %var_11211: Tensor[(792), float32]) -> (Tensor[(3, 10, 16), float32], Tensor[(8, 6, 9), uint64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32]) {
    %722 = cast(%var_11132, dtype="float32") /* ty=Tensor[(3, 10, 16), float32] */;
    %723 = shape_of(%var_11131, dtype="int32") /* ty=Tensor[(3), int32] */;
    %724 = cast(%var_11131, dtype="float32") /* ty=Tensor[(3, 10, 16), float32] */;
    %725 = dyn.reshape(%722, %723, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %726 = @func_9346() /* ty=(Tensor[(8, ?, 9), uint16],) */;
    %727 = %726.0;
    %728 = @func_10378() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %729 = %728.0;
    %730 = cast(%729, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
    %731 = shape_of(%727, dtype="int32") /* ty=Tensor[(3), int32] */;
    %732 = cast(%727, dtype="bool") /* ty=Tensor[(8, ?, 9), bool] */;
    %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %734 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %735 = cast(%var_11211, dtype="float32") /* ty=Tensor[(792), float32] */;
    %736 = reshape(%735, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
    %737 = mod(%724, %725) /* ty=Tensor[(3, 10, 16), float32] */;
    %738 = @func_9480() /* ty=Tensor[(8, 6, 9), uint64] */;
    %739 = logical_or(%732, %733) /* ty=Tensor[(8, ?, 9), bool] */;
    %740 = %734.0;
    %741 = @func_5496(%736) /* ty=Tensor[(8, 11, 9), int32] */;
    (%737, %738, %739, %740, %741, %var_11211)
  };
  %742(%var_11221, %var_11222, %var_11223) /* ty=(Tensor[(3, 10, 16), float32], Tensor[(8, 6, 9), uint64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32]) */
}

def @func_16433(%var_16431: Tensor[(1287), int64]) -> (Tensor[(8, ?, 9), float32], Tensor[(16, 8, ?), int16], Tensor[(7, 11, 13), float32], Tensor[(1001), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64]) {
  @func_16430(%var_16431) /* ty=(Tensor[(8, ?, 9), float32], Tensor[(16, 8, ?), int16], Tensor[(7, 11, 13), float32], Tensor[(1001), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64]) */
}

def @func_5115() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %743 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %744 = %743.0;
  %745 = @func_3167() /* ty=Tensor[(8, 1, 9), float32] */;
  (%744, %745)
}

def @func_8234() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) {
  %759 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) {
    %746 = @func_6227() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %747 = @func_6667() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) */;
    %748 = %747.0;
    %749 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %750 = %749.0;
    %751 = cast(%750, dtype="uint8") /* ty=Tensor[(8, 1, 9), uint8] */;
    %752 = shape_of(%748, dtype="int32") /* ty=Tensor[(3), int32] */;
    %753 = cast(%748, dtype="uint8") /* ty=Tensor[(8, 1, 9), uint8] */;
    %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %755 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %756 = %746.1;
    %757 = bitwise_xor(%753, %754) /* ty=Tensor[(8, ?, 9), uint8] */;
    %758 = %755.0;
    (%756, %757, %758)
  };
  %759() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */
}

def @func_9390(%var_9388: Tensor[(792, 1), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) {
  @func_9387(%var_9388) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(792, 1), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32]) */
}

def @func_3649() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %760 = @func_3216() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %761 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %762 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %763 = %760.0;
  %764 = %761.0;
  %765 = %762.0;
  (%763, %764, %765)
}

def @func_13805(%var_13799: Tensor[(189), uint16], %var_13801: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), float32]) {
  %766 = @func_7039() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %767 = cast(%var_13799, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %768 = reshape(%767, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %769 = cast(%var_13801, dtype="float32") /* ty=Tensor[(189), float32] */;
  %770 = shape_of(%var_13799, dtype="int32") /* ty=Tensor[(1), int32] */;
  %771 = cast(%var_13799, dtype="float32") /* ty=Tensor[(189), float32] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?), float32] */;
  %773 = %766.0;
  %774 = @func_8592(%768) /* ty=Tensor[(7, 3, 9), uint64] */;
  %775 = power(%771, %772) /* ty=Tensor[(189), float32] */;
  (%773, %774, %775)
}

def @func_14057() -> Tensor[(8, 1, 9), float32] {
  @func_14055() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_5664() -> (Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) {
  %783 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) {
    %776 = @func_3853() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) */;
    %777 = cast(meta[relay.Constant][43] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %778 = reshape(%777, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
    %779 = @func_2724(%778) /* ty=Tensor[(11, 9, 13), bool] */;
    %780 = cast(%779, dtype="float32") /* ty=Tensor[(11, 9, 13), float32] */;
    %781 = %776.0;
    %782 = log(%780) /* ty=Tensor[(11, 9, 13), float32] */;
    (%781, meta[relay.Constant][43] /* ty=Tensor[(1287), int64] */, %782)
  };
  %783() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) */
}

def @func_7675() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_16300(%var_16221: Tensor[(486), float32], %var_16262: Tensor[(728), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(486), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32]) {
  %784 = @func_11984() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %785 = cast(%var_16221, dtype="float32") /* ty=Tensor[(486), float32] */;
  %786 = cast(%var_16221, dtype="float32") /* ty=Tensor[(486), float32] */;
  %787 = reshape(%785, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), float32] */;
  %788 = reshape(%786, newshape=[9, 6, 9]) /* ty=Tensor[(9, 6, 9), float32] */;
  %789 = @func_16172(%787, %788) /* ty=(Tensor[(9, 6, 9), float32], Tensor[(9, 6, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(429, 3), float32]) */;
  %790 = cast(%var_16262, dtype="float32") /* ty=Tensor[(728), float32] */;
  %791 = reshape(%790, newshape=[4, 13, 14]) /* ty=Tensor[(4, 13, 14), float32] */;
  %792 = %784.0;
  %793 = %789.2;
  %794 = @func_2472(%791) /* ty=Tensor[(4, 13, 14), float32] */;
  (%792, %793, %var_16221, %794, %var_16262)
}

def @func_14055() -> Tensor[(8, 1, 9), float32] {
  @func_8060() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_8362(%var_8361: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) {
  %810 = fn (%var_8327: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) {
    %795 = cast(%var_8327, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %796 = cast(meta[relay.Constant][44] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %797 = reshape(%795, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %798 = reshape(%796, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
    %799 = @func_4462(%797, %798) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
    %800 = cast(meta[relay.Constant][45] /* ty=Tensor[(297, 1), bool] */, dtype="bool") /* ty=Tensor[(297, 1), bool] */;
    %801 = reshape(%800, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
    %802 = @func_6409(%801) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) */;
    %803 = cast(meta[relay.Constant][44] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %804 = reshape(%803, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %805 = @func_4118(%804) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
    %806 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
    %807 = %799.1;
    %808 = %802.0;
    %809 = %805.1;
    (%806, %807, %var_8327, meta[relay.Constant][44] /* ty=Tensor[(1152), float32] */, %808, meta[relay.Constant][45] /* ty=Tensor[(297, 1), bool] */, %809)
  };
  %810(%var_8361) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) */
}

def @func_10662() -> Tensor[(8, 1, 9), float32] {
  %812 = fn () -> Tensor[(8, 1, 9), float32] {
    %811 = @func_10519() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(792), float32]) */;
    %811.0
  };
  %812() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_9795() -> Tensor[(8, 1, 9), float32] {
  @func_9793() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_14945() -> (Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) {
  @func_14943() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */
}

def @func_12315() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %816 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %813 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
    %814 = @func_7797() /* ty=Tensor[(8, 1, 9), float32] */;
    %815 = %813.1;
    (%814, %815)
  };
  %816() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_7886() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_15342() -> Tensor[(8, 1, 9), float32] {
  %817 = @func_13457() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %817.0
}

def @func_6575() -> (Tensor[(8, 1, 9), float32],) {
  %818 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %819 = %818.0;
  (%819,)
}

def @func_6412(%var_6410: Tensor[(3, 9, 11), bool]) -> (Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) {
  @func_6409(%var_6410) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) */
}

def @func_8977(%var_8973: Tensor[(1001, 1), float32], %var_8974: Tensor[(1287), int64], %var_8975: Tensor[(1152), float32], %var_8976: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool], Tensor[(1152), float32], Tensor[(1001, 140), int8], Tensor[(15, 4, 7), float64], Tensor[(210, 2), float64], Tensor[(1001, 1287), float64], Tensor[(7, 3, 9), uint16], Tensor[(792), float32], Tensor[(189), uint16]) {
  %856 = fn (%var_8876: Tensor[(1001, 1), float32], %var_8918: Tensor[(1287), int64], %var_8921: Tensor[(1152), float32], %var_8964: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool], Tensor[(1152), float32], Tensor[(1001, 140), int8], Tensor[(15, 4, 7), float64], Tensor[(210, 2), float64], Tensor[(1001, 1287), float64], Tensor[(7, 3, 9), uint16], Tensor[(792), float32], Tensor[(189), uint16]) {
    %820 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %821 = cast(%var_8876, dtype="float32") /* ty=Tensor[(1001, 1), float32] */;
    %822 = reshape(%821, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
    %823 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %824 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %825 = cast(%var_8918, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %826 = reshape(%825, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %827 = @func_6175(%826) /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), bool]) */;
    %828 = cast(%var_8921, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %829 = reshape(%828, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %830 = @func_5921(%829) /* ty=(Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) */;
    %831 = %830.2;
    %832 = cast(%831, dtype="bool") /* ty=Tensor[(140), bool] */;
    %833 = cast(%var_8876, dtype="bool") /* ty=Tensor[(1001, 1), bool] */;
    %834 = less(%832, %833) /* ty=Tensor[(1001, 140), bool] */;
    %835 = cast(%834, dtype="int8") /* ty=Tensor[(1001, 140), int8] */;
    %836 = cast(%var_8876, dtype="int8") /* ty=Tensor[(1001, 1), int8] */;
    %837 = cast(meta[relay.Constant][46] /* ty=Tensor[(210, 2), float64] */, dtype="float64") /* ty=Tensor[(210, 2), float64] */;
    %838 = reshape(%837, newshape=[15, 4, 7]) /* ty=Tensor[(15, 4, 7), float64] */;
    %839 = @func_953(%838) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(15, 4, 7), float64]) */;
    %840 = cast(%var_8918, dtype="float64") /* ty=Tensor[(1287), float64] */;
    %841 = cast(%var_8876, dtype="float64") /* ty=Tensor[(1001, 1), float64] */;
    %842 = cast(meta[relay.Constant][47] /* ty=Tensor[(792), float32] */, dtype="float32") /* ty=Tensor[(792), float32] */;
    %843 = cast(%var_8964, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %844 = reshape(%842, newshape=[792]) /* ty=Tensor[(792), float32] */;
    %845 = reshape(%843, newshape=[189]) /* ty=Tensor[(189), uint16] */;
    %846 = @func_7634(%844, %845) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) */;
    %847 = %820.0;
    %848 = @func_5553(%822) /* ty=Tensor[(7, 11, 13), float32] */;
    %849 = %823.0;
    %850 = %824.1;
    %851 = %827.2;
    %852 = left_shift(%835, %836) /* ty=Tensor[(1001, 140), int8] */;
    %853 = %839.1;
    %854 = floor_divide(%840, %841) /* ty=Tensor[(1001, 1287), float64] */;
    %855 = %846.4;
    (%847, %848, %849, %850, %851, %var_8921, %852, %853, meta[relay.Constant][46] /* ty=Tensor[(210, 2), float64] */, %854, %855, meta[relay.Constant][47] /* ty=Tensor[(792), float32] */, %var_8964)
  };
  %856(%var_8973, %var_8974, %var_8975, %var_8976) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool], Tensor[(1152), float32], Tensor[(1001, 140), int8], Tensor[(15, 4, 7), float64], Tensor[(210, 2), float64], Tensor[(1001, 1287), float64], Tensor[(7, 3, 9), uint16], Tensor[(792), float32], Tensor[(189), uint16]) */
}

def @func_4167() -> Tensor[(8, 14, 9), uint64] {
  %860 = fn () -> Tensor[(8, 14, 9), uint64] {
    %857 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
    %858 = cast(%857, dtype="uint64") /* ty=Tensor[(8, 1, 9), uint64] */;
    %859 = cast(meta[relay.Constant][48] /* ty=Tensor[(8, 14, 9), float32] */, dtype="uint64") /* ty=Tensor[(8, 14, 9), uint64] */;
    add(%858, %859) /* ty=Tensor[(8, 14, 9), uint64] */
  };
  %860() /* ty=Tensor[(8, 14, 9), uint64] */
}

def @func_4591(%var_4589: Tensor[(1152), float32], %var_4590: uint64) -> (Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) {
  @func_4587(%var_4589, %var_4590) /* ty=(Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) */
}

def @func_6921() -> Tensor[(8, 1, 9), float32] {
  %861 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %861.1
}

def @func_10358(%var_10357: Tensor[(8, 9, 9), float32]) -> (Tensor[(8, 9, 9), float32], Tensor[(8, 9, 9), float32]) {
  %872 = fn (%var_10290: Tensor[(8, 9, 9), float32]) -> (Tensor[(8, 9, 9), float32], Tensor[(8, 9, 9), float32]) {
    %862 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %863 = %862.0;
    %864 = cast(%863, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
    %865 = cast(%var_10290, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
    %866 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %867 = %866.0;
    %868 = cast(%867, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
    %869 = cast(%var_10290, dtype="float32") /* ty=Tensor[(8, 9, 9), float32] */;
    %870 = mod(%864, %865) /* ty=Tensor[(8, 9, 9), float32] */;
    %871 = floor_divide(%868, %869) /* ty=Tensor[(8, 9, 9), float32] */;
    (%870, %871)
  };
  %872(%var_10357) /* ty=(Tensor[(8, 9, 9), float32], Tensor[(8, 9, 9), float32]) */
}

def @func_1196(%var_1195: Tensor[(1, 10, 12), float32]) -> (Tensor[(1, 10, 12), float32],) {
  %875 = fn (%var_1180: Tensor[(1, 10, 12), float32]) -> (Tensor[(1, 10, 12), float32],) {
    %873 = cast(%var_1180, dtype="float32") /* ty=Tensor[(1, 10, 12), float32] */;
    %874 = cos(%873) /* ty=Tensor[(1, 10, 12), float32] */;
    (%874,)
  };
  %875(%var_1195) /* ty=(Tensor[(1, 10, 12), float32],) */
}

def @func_8551() -> (Tensor[(8, 1, 9), float32],) {
  %878 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %876 = @func_6575() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %877 = %876.0;
    (%877,)
  };
  %878() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_5709() -> Tensor[(8, 1, 9), float32] {
  @func_5707() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_8269() -> Tensor[(8, 1, 9), float32] {
  %879 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %879.0
}

def @func_4270() -> (Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) {
  @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */
}

def @func_6667() -> (Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) {
  %880 = cast(meta[relay.Constant][49] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
  %881 = reshape(%880, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
  %882 = @func_5189(%881) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
  %883 = @func_3167() /* ty=Tensor[(8, 1, 9), float32] */;
  %884 = %882.0;
  %885 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  (%883, %884, meta[relay.Constant][49] /* ty=Tensor[(10), float32] */, %885)
}

def @func_4784() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool]) {
  %896 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool]) {
    %886 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %887 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %888 = %887.0;
    %889 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
    %890 = cast(%889, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
    %891 = shape_of(%888, dtype="int32") /* ty=Tensor[(3), int32] */;
    %892 = cast(%888, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
    %893 = dyn.reshape(%890, %891, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %894 = %886.0;
    %895 = less(%892, %893) /* ty=Tensor[(8, ?, 9), bool] */;
    (%894, %895)
  };
  %896() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), bool]) */
}

def @func_10101() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_10099() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_14290() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(120), float32]) {
  %903 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(120), float32]) {
    %897 = @func_10589() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %898 = cast(meta[relay.Constant][50] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %899 = reshape(%898, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %900 = @func_4905(%899) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) */;
    %901 = %897.0;
    %902 = %900.4;
    (%901, %902, meta[relay.Constant][50] /* ty=Tensor[(120), float32] */)
  };
  %903() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(120), float32]) */
}

def @func_15128() -> (Tensor[(8, 1, 9), float32],) {
  %906 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %904 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %905 = %904.0;
    (%905,)
  };
  %906() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_12721() -> (Tensor[(12, 4, 4), bool],) {
  %909 = fn () -> (Tensor[(12, 4, 4), bool],) {
    %907 = @func_12649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */;
    %908 = %907.1;
    (%908,)
  };
  %909() /* ty=(Tensor[(12, 4, 4), bool],) */
}

def @func_8120() -> (Tensor[(8, ?, 9), float32],) {
  @func_8118() /* ty=(Tensor[(8, ?, 9), float32],) */
}

def @func_9219() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %910 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %911 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %912 = %910.0;
  %913 = %911.0;
  (%912, %913)
}

def @func_13526() -> Tensor[(8, ?, 9), float32] {
  %914 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %915 = %914.0;
  %916 = @func_8830() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %917 = %916.0;
  %918 = cast(%917, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %919 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%915, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  divide(%920, %921) /* ty=Tensor[(8, ?, 9), float32] */
}

def @func_12970() -> Tensor[(8, 1, 9), float32] {
  %923 = fn () -> Tensor[(8, 1, 9), float32] {
    %922 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %922.1
  };
  %923() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_2905(%var_2903: Tensor[(5, 10, 10), int8], %var_2904: Tensor[(5, 10, 10), int8]) -> Tensor[(5, 10, 10), bool] {
  @func_2901(%var_2903, %var_2904) /* ty=Tensor[(5, 10, 10), bool] */
}

def @func_7673() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %924 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %925 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %926 = %924.1;
  %927 = %925.1;
  (%926, %927)
}

def @func_5496(%var_5485: Tensor[(8, 11, 9), float32]) -> Tensor[(8, 11, 9), int32] {
  %928 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %929 = %928.0;
  %930 = cast(%929, dtype="int32") /* ty=Tensor[(8, 1, 9), int32] */;
  %931 = cast(%var_5485, dtype="int32") /* ty=Tensor[(8, 11, 9), int32] */;
  subtract(%930, %931) /* ty=Tensor[(8, 11, 9), int32] */
}

def @func_9321() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %935 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %932 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %933 = @func_7756() /* ty=Tensor[(8, 1, 9), float32] */;
    %934 = %932.0;
    (%933, %934)
  };
  %935() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_17091() -> (Tensor[(12, 4, 4), bool], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32]) {
  %942 = fn () -> (Tensor[(12, 4, 4), bool], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32]) {
    %936 = cast(meta[relay.Constant][51] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %937 = reshape(%936, newshape=[]) /* ty=uint64 */;
    %938 = @func_5760(%937) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
    %939 = @func_10649() /* ty=Tensor[(12, 4, 4), bool] */;
    %940 = %938.1;
    %941 = @func_10160() /* ty=Tensor[(8, 1, 9), float32] */;
    (%939, %940, meta[relay.Constant][51] /* ty=uint64 */, %941)
  };
  %942() /* ty=(Tensor[(12, 4, 4), bool], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32]) */
}

def @func_16088() -> (Tensor[(8, 1, 9), float32],) {
  %945 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %943 = @func_15127() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %944 = %943.0;
    (%944,)
  };
  %945() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_14909() -> (Tensor[(1287), int64], Tensor[(14, 6, 6), float32], Tensor[(504), float32], Tensor[(8, 1, 9), float32]) {
  %952 = fn () -> (Tensor[(1287), int64], Tensor[(14, 6, 6), float32], Tensor[(504), float32], Tensor[(8, 1, 9), float32]) {
    %946 = @func_9519() /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) */;
    %947 = cast(meta[relay.Constant][52] /* ty=Tensor[(504), float32] */, dtype="float32") /* ty=Tensor[(504), float32] */;
    %948 = reshape(%947, newshape=[14, 6, 6]) /* ty=Tensor[(14, 6, 6), float32] */;
    %949 = %946.1;
    %950 = @func_4950(%948) /* ty=Tensor[(14, 6, 6), float32] */;
    %951 = @func_12037() /* ty=Tensor[(8, 1, 9), float32] */;
    (%949, %950, meta[relay.Constant][52] /* ty=Tensor[(504), float32] */, %951)
  };
  %952() /* ty=(Tensor[(1287), int64], Tensor[(14, 6, 6), float32], Tensor[(504), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_5923(%var_5922: Tensor[(1152), float32]) -> (Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) {
  %963 = fn (%var_5899: Tensor[(1152), float32]) -> (Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) {
    %953 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
    %954 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %955 = cast(%var_5899, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %956 = cast(meta[relay.Constant][53] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
    %957 = reshape(%955, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %958 = reshape(%956, newshape=[]) /* ty=uint64 */;
    %959 = @func_4587(%957, %958) /* ty=(Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) */;
    %960 = %953.2;
    %961 = %954.1;
    %962 = %959.5;
    (%960, %961, %962, %var_5899, meta[relay.Constant][53] /* ty=uint64 */)
  };
  %963(%var_5922) /* ty=(Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(1152), float32], uint64) */
}

def @func_5590(%var_5588: uint64, %var_5589: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64, Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 14, 9), uint64], Tensor[(60, 2), float32], Tensor[(8, 144), float32]) {
  @func_5586(%var_5588, %var_5589) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64, Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 14, 9), uint64], Tensor[(60, 2), float32], Tensor[(8, 144), float32]) */
}

def @func_16558() -> (Tensor[(8, 1, 9), float32], Tensor[(504), float32], Tensor[(8, 16, 9), bool], Tensor[(8, ?, 9), uint16]) {
  %974 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(504), float32], Tensor[(8, 16, 9), bool], Tensor[(8, ?, 9), uint16]) {
    %964 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %965 = @func_14908() /* ty=(Tensor[(1287), int64], Tensor[(14, 6, 6), float32], Tensor[(504), float32], Tensor[(8, 1, 9), float32]) */;
    %966 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
    %967 = %966.0;
    %968 = cast(%967, dtype="float32") /* ty=Tensor[(8, 16, 9), float32] */;
    %969 = reshape(%968, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %970 = @func_10931(%969) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(1152), float32], uint64) */;
    %971 = %964.0;
    %972 = %965.2;
    %973 = %970.1;
    (%971, %972, %967, %973)
  };
  %974() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(504), float32], Tensor[(8, 16, 9), bool], Tensor[(8, ?, 9), uint16]) */
}

def @func_16114() -> Tensor[(8, 1, 9), float32] {
  %976 = fn () -> Tensor[(8, 1, 9), float32] {
    %975 = @func_12197() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %975.0
  };
  %976() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_13459() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_13457() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_6423() -> Tensor[(8, 1, 9), float32] {
  %978 = fn () -> Tensor[(8, 1, 9), float32] {
    %977 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %977.0
  };
  %978() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_7041() -> (Tensor[(8, 1, 9), float32],) {
  @func_7039() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_7756() -> Tensor[(8, 1, 9), float32] {
  @func_3915() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_12038() -> Tensor[(8, 1, 9), float32] {
  %980 = fn () -> Tensor[(8, 1, 9), float32] {
    %979 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
    %979.4
  };
  %980() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_11658(%var_11656: Tensor[(11, 9, 13), float64]) -> (Tensor[(11, 9, 13), float64],) {
  @func_11655(%var_11656) /* ty=(Tensor[(11, 9, 13), float64],) */
}

def @func_15041(%var_15039: Tensor[(11, 9, 13), float32]) -> (Tensor[(1, 14), bool], Tensor[(11, 9, 13), bool]) {
  @func_15038(%var_15039) /* ty=(Tensor[(1, 14), bool], Tensor[(11, 9, 13), bool]) */
}

def @func_13554() -> (Tensor[(1287), int64], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) {
  @func_13552() /* ty=(Tensor[(1287), int64], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */
}

def @func_10046() -> (Tensor[(8, 1, 9), float32],) {
  %981 = @func_8853() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %982 = %981.0;
  (%982,)
}

def @func_16749() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_16747() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_9104(%var_9081: Tensor[(13, 77), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 11, 13), float32], Tensor[(13, 77), float32]) {
  %983 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
  %984 = cast(%var_9081, dtype="float32") /* ty=Tensor[(13, 77), float32] */;
  %985 = reshape(%984, newshape=[7, 11, 13]) /* ty=Tensor[(7, 11, 13), float32] */;
  %986 = %983.2;
  %987 = @func_5553(%985) /* ty=Tensor[(7, 11, 13), float32] */;
  (%986, %987, %var_9081)
}

def @func_16846(%var_16841: Tensor[(7, 3, 9), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), int16]) {
  %988 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %989 = @func_9346() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %990 = @func_9295() /* ty=(Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) */;
  %991 = %990.3;
  %992 = cast(%var_16841, dtype="int16") /* ty=Tensor[(7, 3, 9), int16] */;
  %993 = shape_of(%991, dtype="int32") /* ty=Tensor[(3), int32] */;
  %994 = cast(%991, dtype="int16") /* ty=Tensor[(7, 3, 9), int16] */;
  %995 = dyn.reshape(%992, %993, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %996 = %988.0;
  %997 = %989.0;
  %998 = multiply(%994, %995) /* ty=Tensor[(7, 3, 9), int16] */;
  (%996, %997, %998)
}

def @func_11605() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, ?, 9), float64], Tensor[(8, ?, 9), bool]) {
  %999 = @func_7240() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) */;
  %1000 = @func_9911() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1001 = cast(meta[relay.Constant][54] /* ty=uint64 */, dtype="uint64") /* ty=uint64 */;
  %1002 = reshape(%1001, newshape=[]) /* ty=uint64 */;
  %1003 = @func_5760(%1002) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) */;
  %1004 = @func_10133() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1005 = %1004.0;
  %1006 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
  %1007 = cast(%1006, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %1008 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%1005, dtype="float64") /* ty=Tensor[(8, 1, 9), float64] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1011 = @func_7039() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1012 = %1011.0;
  %1013 = cast(%1012, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %1014 = shape_of(%1005, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1015 = cast(%1005, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
  %1016 = dyn.reshape(%1013, %1014, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1017 = %999.0;
  %1018 = %1000.0;
  %1019 = %1003.1;
  %1020 = minimum(%1009, %1010) /* ty=Tensor[(8, ?, 9), float64] */;
  %1021 = logical_and(%1015, %1016) /* ty=Tensor[(8, ?, 9), bool] */;
  (%1017, %1018, %1019, meta[relay.Constant][54] /* ty=uint64 */, %1020, %1021)
}

def @func_9426() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_9424() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_5117() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_5115() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_10893(%var_10892: Tensor[(120), float32]) -> (Tensor[(8, 4, 9), int16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(420), float64], Tensor[(7, 2), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32], Tensor[(?, 120), bool]) {
  %1054 = fn (%var_10849: Tensor[(120), float32]) -> (Tensor[(8, 4, 9), int16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(420), float64], Tensor[(7, 2), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32], Tensor[(?, 120), bool]) {
    %1022 = @func_10099() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %1023 = %1022.1;
    %1024 = cast(%1023, dtype="int16") /* ty=Tensor[(8, 1, 9), int16] */;
    %1025 = cast(meta[relay.Constant][55] /* ty=Tensor[(8, 4, 9), float32] */, dtype="int16") /* ty=Tensor[(8, 4, 9), int16] */;
    %1026 = @func_6008() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
    %1027 = cast(%var_10849, dtype="float32") /* ty=Tensor[(120), float32] */;
    %1028 = reshape(%1027, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %1029 = @func_4905(%1028) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) */;
    %1030 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1031 = cast(meta[relay.Constant][56] /* ty=Tensor[(7, 2), bool] */, dtype="bool") /* ty=Tensor[(7, 2), bool] */;
    %1032 = cast(meta[relay.Constant][57] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
    %1033 = reshape(%1031, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
    %1034 = reshape(%1032, newshape=[420]) /* ty=Tensor[(420), float64] */;
    %1035 = @func_3490(%1033, %1034) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
    %1036 = cast(%var_10849, dtype="float32") /* ty=Tensor[(120), float32] */;
    %1037 = reshape(%1036, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %1038 = @func_4905(%1037) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32]) */;
    %1039 = cast(%var_10849, dtype="float32") /* ty=Tensor[(120), float32] */;
    %1040 = reshape(%1039, newshape=[1, 120]) /* ty=Tensor[(1, 120), float32] */;
    %1041 = @func_9167(%1040) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], uint64, Tensor[(8, 1, 9), float32], Tensor[(1, 120), float32]) */;
    %1042 = %1041.4;
    %1043 = cast(%var_10849, dtype="bool") /* ty=Tensor[(120), bool] */;
    %1044 = shape_of(%1042, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1045 = cast(%1042, dtype="bool") /* ty=Tensor[(1, 120), bool] */;
    %1046 = dyn.reshape(%1043, %1044, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1047 = bitwise_or(%1024, %1025) /* ty=Tensor[(8, 4, 9), int16] */;
    %1048 = %1026.0;
    %1049 = %1029.4;
    %1050 = %1030.0;
    %1051 = %1035.1;
    %1052 = %1038.0;
    %1053 = less(%1045, %1046) /* ty=Tensor[(?, 120), bool] */;
    (%1047, %1048, %1049, %1050, %1051, meta[relay.Constant][56] /* ty=Tensor[(7, 2), bool] */, meta[relay.Constant][57] /* ty=Tensor[(420), float64] */, %1052, %1053)
  };
  %1054(%var_10892) /* ty=(Tensor[(8, 4, 9), int16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(420), float64], Tensor[(7, 2), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32], Tensor[(?, 120), bool]) */
}

def @func_15192() -> Tensor[(3, 11, 4), int8] {
  %1055 = cast(meta[relay.Constant][59] /* ty=Tensor[(3, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 11, 4), int8] */;
  %1056 = shape_of(meta[relay.Constant][58] /* ty=Tensor[(3, 11, 4), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1057 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 11, 4), int8] */, dtype="int8") /* ty=Tensor[(3, 11, 4), int8] */;
  %1058 = dyn.reshape(%1055, %1056, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  left_shift(%1057, %1058) /* ty=Tensor[(3, 11, 4), int8] */
}

def @func_10379() -> (Tensor[(8, 1, 9), float32],) {
  %1060 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %1059 = @func_7797() /* ty=Tensor[(8, 1, 9), float32] */;
    (%1059,)
  };
  %1060() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_4192() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_6229() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  @func_6227() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_10989() -> Tensor[(8, 1, 9), float32] {
  %1062 = fn () -> Tensor[(8, 1, 9), float32] {
    %1061 = @func_8853() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1061.0
  };
  %1062() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_13236() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool]) {
  %1063 = @func_7673() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1064 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %1065 = %1063.1;
  %1066 = %1064.0;
  (%1065, %1066)
}

def @func_4537() -> Tensor[(8, 1, 9), float32] {
  %1067 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1067.0
}

def @func_2901(%var_2891: Tensor[(5, 10, 10), int8], %var_2892: Tensor[(5, 10, 10), int8]) -> Tensor[(5, 10, 10), bool] {
  %1068 = cast(%var_2892, dtype="bool") /* ty=Tensor[(5, 10, 10), bool] */;
  %1069 = shape_of(%var_2891, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1070 = cast(%var_2891, dtype="bool") /* ty=Tensor[(5, 10, 10), bool] */;
  %1071 = dyn.reshape(%1068, %1069, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%1070, %1071) /* ty=Tensor[(5, 10, 10), bool] */
}

def @func_8455() -> Tensor[(8, 1, 9), float32] {
  %1072 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1072.0
}

def @func_12465() -> (Tensor[(8, 1, 9), float32],) {
  %1075 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %1073 = @func_6667() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) */;
    %1074 = %1073.3;
    (%1074,)
  };
  %1075() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_15354() -> Tensor[(1287), int64] {
  %1076 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %1076.1
}

def @func_644(%var_615: Tensor[(5, 7, 4), uint32], %var_616: Tensor[(5, 7, 4), uint32]) -> Tensor[(5, 7, 4), uint32] {
  %1077 = cast(%var_616, dtype="bool") /* ty=Tensor[(5, 7, 4), bool] */;
  %1078 = shape_of(%var_615, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1079 = cast(%var_615, dtype="bool") /* ty=Tensor[(5, 7, 4), bool] */;
  %1080 = dyn.reshape(%1077, %1078, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1081 = not_equal(%1079, %1080) /* ty=Tensor[(5, 7, 4), bool] */;
  %1082 = cast(%var_615, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
  %1083 = shape_of(%1081, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1084 = cast(%1081, dtype="uint32") /* ty=Tensor[(5, 7, 4), uint32] */;
  %1085 = dyn.reshape(%1082, %1083, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_xor(%1084, %1085) /* ty=Tensor[(5, 7, 4), uint32] */
}

def @func_12249() -> (Tensor[(8, 1, 9), float32],) {
  @func_12247() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_4587(%var_4579: Tensor[(1152), float32], %var_4580: uint64) -> (Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) {
  %1086 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %1087 = cast(%var_4579, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1088 = cast(%var_4580, dtype="uint64") /* ty=uint64 */;
  %1089 = reshape(%1087, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
  %1090 = reshape(%1088, newshape=[]) /* ty=uint64 */;
  %1091 = @func_4008(%1089, %1090) /* ty=(Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */;
  %1092 = cast(meta[relay.Constant][60] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1093 = cast(meta[relay.Constant][60] /* ty=Tensor[(140), uint32] */, dtype="uint32") /* ty=Tensor[(140), uint32] */;
  %1094 = reshape(%1092, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %1095 = reshape(%1093, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
  %1096 = %1086.0;
  %1097 = %1091.7;
  %1098 = @func_644(%1094, %1095) /* ty=Tensor[(5, 7, 4), uint32] */;
  (%1096, %1097, %var_4579, %var_4580, %1098, meta[relay.Constant][60] /* ty=Tensor[(140), uint32] */)
}

def @func_12650() -> (Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) {
  %1102 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) {
    %1099 = @func_8315() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %1100 = %1099.0;
    %1101 = @func_10649() /* ty=Tensor[(12, 4, 4), bool] */;
    (%1100, %1101)
  };
  %1102() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(12, 4, 4), bool]) */
}

def @func_3123(%var_3122: Tensor[(120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) {
  %1111 = fn (%var_3082: Tensor[(120), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) {
    %1103 = cast(%var_3082, dtype="float32") /* ty=Tensor[(120), float32] */;
    %1104 = reshape(%1103, newshape=[1, 10, 12]) /* ty=Tensor[(1, 10, 12), float32] */;
    %1105 = @func_1194(%1104) /* ty=(Tensor[(1, 10, 12), float32],) */;
    %1106 = %1105.0;
    %1107 = cast(%1106, dtype="float64") /* ty=Tensor[(1, 10, 12), float64] */;
    %1108 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
    %1109 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
    %1110 = rsqrt(%1107) /* ty=Tensor[(1, 10, 12), float64] */;
    (%1108, %var_3082, %1109, %1110)
  };
  %1111(%var_3122) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(8, 1, 9), float32], Tensor[(1, 10, 12), float64]) */
}

def @func_16723() -> Tensor[(8, 11, 9), float64] {
  %1115 = fn () -> Tensor[(8, 11, 9), float64] {
    %1112 = @func_13845() /* ty=(Tensor[(4, 13, 14), float32], Tensor[(8, 11, 9), int32], Tensor[(792, 1), float32]) */;
    %1113 = %1112.1;
    %1114 = cast(%1113, dtype="float64") /* ty=Tensor[(8, 11, 9), float64] */;
    sqrt(%1114) /* ty=Tensor[(8, 11, 9), float64] */
  };
  %1115() /* ty=Tensor[(8, 11, 9), float64] */
}

def @func_13625() -> (Tensor[(8, ?, 9), float32],) {
  %1117 = fn () -> (Tensor[(8, ?, 9), float32],) {
    %1116 = @func_13526() /* ty=Tensor[(8, ?, 9), float32] */;
    (%1116,)
  };
  %1117() /* ty=(Tensor[(8, ?, 9), float32],) */
}

def @func_13135(%var_13134: Tensor[(140), uint32]) -> (Tensor[(8, 1, 9), float32], Tensor[(5, 7, 4), uint32], Tensor[(140), uint32], Tensor[(7, 3, 9), uint16]) {
  %1126 = fn (%var_13126: Tensor[(140), uint32]) -> (Tensor[(8, 1, 9), float32], Tensor[(5, 7, 4), uint32], Tensor[(140), uint32], Tensor[(7, 3, 9), uint16]) {
    %1118 = cast(%var_13126, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %1119 = cast(%var_13126, dtype="uint32") /* ty=Tensor[(140), uint32] */;
    %1120 = reshape(%1118, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
    %1121 = reshape(%1119, newshape=[5, 7, 4]) /* ty=Tensor[(5, 7, 4), uint32] */;
    %1122 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
    %1123 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
    %1124 = @func_644(%1120, %1121) /* ty=Tensor[(5, 7, 4), uint32] */;
    %1125 = %1122.1;
    (%1123, %1124, %var_13126, %1125)
  };
  %1126(%var_13134) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(5, 7, 4), uint32], Tensor[(140), uint32], Tensor[(7, 3, 9), uint16]) */
}

def @func_15547(%var_15522: Tensor[(1287), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(297, 1), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int16]) {
  %1127 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %1128 = cast(meta[relay.Constant][61] /* ty=Tensor[(297, 1), bool] */, dtype="bool") /* ty=Tensor[(297, 1), bool] */;
  %1129 = reshape(%1128, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
  %1130 = @func_6409(%1129) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) */;
  %1131 = @func_8315() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1132 = @func_8315() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1133 = @func_15354() /* ty=Tensor[(1287), int64] */;
  %1134 = cast(%1133, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1135 = exp(%1134) /* ty=Tensor[(1287), float32] */;
  %1136 = cast(%var_15522, dtype="int16") /* ty=Tensor[(1287), int16] */;
  %1137 = shape_of(%1135, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1138 = cast(%1135, dtype="int16") /* ty=Tensor[(1287), int16] */;
  %1139 = dyn.reshape(%1136, %1137, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1140 = %1127.0;
  %1141 = %1130.2;
  %1142 = %1131.1;
  %1143 = %1132.1;
  %1144 = bitwise_or(%1138, %1139) /* ty=Tensor[(1287), int16] */;
  (%1140, %1141, meta[relay.Constant][61] /* ty=Tensor[(297, 1), bool] */, %1142, %1143, %1144)
}

def @func_15550(%var_15548: Tensor[(1287), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(297, 1), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int16]) {
  @func_15547(%var_15548) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(297, 1), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int16]) */
}

def @func_2849() -> (Tensor[(8, 1, 9), float32],) {
  %1145 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1145,)
}

def @func_7178() -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) {
  @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */
}

def @func_10225() -> (Tensor[(8, 1, 9), float32],) {
  @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_14618() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1146 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1147 = @func_10160() /* ty=Tensor[(8, 1, 9), float32] */;
  %1148 = %1146.0;
  (%1147, %1148)
}

def @func_13238() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool]) {
  @func_13236() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool]) */
}

def @func_13915(%var_13914: Tensor[(8, 7, 9), float32]) -> (Tensor[(8, 7, 9), int16], Tensor[(8, ?, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1157 = fn (%var_13890: Tensor[(8, 7, 9), float32]) -> (Tensor[(8, 7, 9), int16], Tensor[(8, ?, 9), float32], Tensor[(8, 1, 9), float32]) {
    %1149 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
    %1150 = cast(%1149, dtype="int16") /* ty=Tensor[(8, 1, 9), int16] */;
    %1151 = cast(%var_13890, dtype="int16") /* ty=Tensor[(8, 7, 9), int16] */;
    %1152 = @func_13624() /* ty=(Tensor[(8, ?, 9), float32],) */;
    %1153 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1154 = logical_xor(%1150, %1151) /* ty=Tensor[(8, 7, 9), int16] */;
    %1155 = %1152.0;
    %1156 = %1153.0;
    (%1154, %1155, %1156)
  };
  %1157(%var_13914) /* ty=(Tensor[(8, 7, 9), int16], Tensor[(8, ?, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_4012(%var_4010: Tensor[(8, 16, 9), float32], %var_4011: uint64) -> (Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) {
  @func_4008(%var_4010, %var_4011) /* ty=(Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */
}

def @func_16849(%var_16847: Tensor[(7, 3, 9), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), int16]) {
  @func_16846(%var_16847) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), int16]) */
}

def @func_9296() -> (Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) {
  %1167 = fn () -> (Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) {
    %1158 = @func_8233() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint8], Tensor[(8, 1, 9), float32]) */;
    %1159 = cast(meta[relay.Constant][62] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %1160 = reshape(%1159, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
    %1161 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
    %1162 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
    %1163 = %1158.1;
    %1164 = @func_2724(%1160) /* ty=Tensor[(11, 9, 13), bool] */;
    %1165 = %1161.1;
    %1166 = %1162.0;
    (%1163, %1164, meta[relay.Constant][62] /* ty=Tensor[(1287), int64] */, %1165, %1166)
  };
  %1167() /* ty=(Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) */
}

def @func_10694(%var_10678: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) {
  %1168 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1169 = cast(%var_10678, dtype="float32") /* ty=Tensor[(10), float32] */;
  %1170 = reshape(%1169, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
  %1171 = @func_5189(%1170) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
  %1172 = %1171.0;
  %1173 = cast(%1172, dtype="float64") /* ty=Tensor[(5, 2, 1), float64] */;
  %1174 = %1168.0;
  %1175 = atanh(%1173) /* ty=Tensor[(5, 2, 1), float64] */;
  (%1174, %var_10678, %1175)
}

def @func_13537() -> Tensor[(8, 1, 9), float32] {
  @func_13535() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_5364() -> (Tensor[(8, 1, 9), float32],) {
  @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_8831() -> (Tensor[(8, 1, 9), float32],) {
  %1178 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %1176 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %1177 = %1176.1;
    (%1177,)
  };
  %1178() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_5676() -> (Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) {
  %1182 = fn () -> (Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) {
    %1179 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1180 = @func_4166() /* ty=Tensor[(8, 14, 9), uint64] */;
    %1181 = %1179.0;
    (%1180, %1181)
  };
  %1182() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */
}

def @func_13809(%var_13807: Tensor[(189), uint16], %var_13808: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), float32]) {
  @func_13805(%var_13807, %var_13808) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), float32]) */
}

def @func_15038(%var_15033: Tensor[(11, 9, 13), float32]) -> (Tensor[(1, 14), bool], Tensor[(11, 9, 13), bool]) {
  %1183 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
  %1184 = @func_5663() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) */;
  %1185 = %1184.2;
  %1186 = cast(%var_15033, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1187 = shape_of(%1185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1188 = cast(%1185, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1189 = dyn.reshape(%1186, %1187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1190 = %1183.2;
  %1191 = logical_or(%1188, %1189) /* ty=Tensor[(11, 9, 13), bool] */;
  (%1190, %1191)
}

def @func_11308(%var_11307: Tensor[(288), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(288), float32], Tensor[(7, 3, 9), uint16], Tensor[(8, 4, 9), float64], Tensor[(8, 1, 9), float32]) {
  %1204 = fn (%var_11261: Tensor[(288), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(288), float32], Tensor[(7, 3, 9), uint16], Tensor[(8, 4, 9), float64], Tensor[(8, 1, 9), float32]) {
    %1192 = @func_10827() /* ty=(Tensor[(8, 6, 9), uint64], Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1, 1287), float64], Tensor[(8, 1, 9), float32]) */;
    %1193 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
    %1194 = cast(%var_11261, dtype="float32") /* ty=Tensor[(288), float32] */;
    %1195 = reshape(%1194, newshape=[8, 4, 9]) /* ty=Tensor[(8, 4, 9), float32] */;
    %1196 = @func_6466(%1195) /* ty=(Tensor[(8, 4, 9), uint64],) */;
    %1197 = %1196.0;
    %1198 = cast(%1197, dtype="float64") /* ty=Tensor[(8, 4, 9), float64] */;
    %1199 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
    %1200 = %1192.1;
    %1201 = %1193.1;
    %1202 = exp(%1198) /* ty=Tensor[(8, 4, 9), float64] */;
    %1203 = %1199.0;
    (%1200, %var_11261, %1201, %1202, %1203)
  };
  %1204(%var_11307) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(288), float32], Tensor[(7, 3, 9), uint16], Tensor[(8, 4, 9), float64], Tensor[(8, 1, 9), float32]) */
}

def @func_3023() -> (Tensor[(8, 1, 9), float32],) {
  @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_16175(%var_16173: Tensor[(9, 6, 9), float32], %var_16174: Tensor[(9, 6, 9), float32]) -> (Tensor[(9, 6, 9), float32], Tensor[(9, 6, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(429, 3), float32]) {
  %1219 = fn (%var_16142: Tensor[(9, 6, 9), float32], %var_16143: Tensor[(9, 6, 9), float32]) -> (Tensor[(9, 6, 9), float32], Tensor[(9, 6, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(429, 3), float32]) {
    %1205 = cast(%var_16143, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
    %1206 = shape_of(%var_16142, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1207 = cast(%var_16142, dtype="float32") /* ty=Tensor[(9, 6, 9), float32] */;
    %1208 = dyn.reshape(%1205, %1206, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %1209 = cast(%var_16142, dtype="float64") /* ty=Tensor[(9, 6, 9), float64] */;
    %1210 = shape_of(%var_16143, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1211 = cast(%var_16143, dtype="float64") /* ty=Tensor[(9, 6, 9), float64] */;
    %1212 = dyn.reshape(%1209, %1210, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1213 = cast(meta[relay.Constant][63] /* ty=Tensor[(429, 3), float32] */, dtype="float32") /* ty=Tensor[(429, 3), float32] */;
    %1214 = reshape(%1213, newshape=[1287]) /* ty=Tensor[(1287), float32] */;
    %1215 = @func_15547(%1214) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(140), uint32], Tensor[(297, 1), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int16]) */;
    %1216 = mod(%1207, %1208) /* ty=Tensor[(9, 6, 9), float32] */;
    %1217 = power(%1211, %1212) /* ty=Tensor[(9, 6, 9), float64] */;
    %1218 = %1215.3;
    (%1216, %1217, %1218, meta[relay.Constant][63] /* ty=Tensor[(429, 3), float32] */)
  };
  %1219(%var_16173, %var_16174) /* ty=(Tensor[(9, 6, 9), float32], Tensor[(9, 6, 9), float64], Tensor[(8, 1, 9), float32], Tensor[(429, 3), float32]) */
}

def @func_10048() -> (Tensor[(8, 1, 9), float32],) {
  @func_10046() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_16976() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) {
  %1220 = @func_16508() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1221 = @func_9346() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %1222 = %1220.0;
  %1223 = %1221.0;
  (%1222, %1223)
}

def @func_11986() -> (Tensor[(8, 1, 9), float32],) {
  @func_11984() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_2724(%var_2714: Tensor[(11, 9, 13), int64]) -> Tensor[(11, 9, 13), bool] {
  %1224 = cast(meta[relay.Constant][64] /* ty=Tensor[(11, 9, 13), int64] */, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1225 = shape_of(%var_2714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1226 = cast(%var_2714, dtype="bool") /* ty=Tensor[(11, 9, 13), bool] */;
  %1227 = dyn.reshape(%1224, %1225, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater(%1226, %1227) /* ty=Tensor[(11, 9, 13), bool] */
}

def @func_10161() -> Tensor[(8, 1, 9), float32] {
  %1228 = fn () -> Tensor[(8, 1, 9), float32] {
    @func_7756() /* ty=Tensor[(8, 1, 9), float32] */
  };
  %1228() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_3915() -> Tensor[(8, 1, 9), float32] {
  %1229 = @func_3216() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1229.0
}

def @func_7965(%var_7964: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
  %1235 = fn (%var_7955: Tensor[(1152), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) {
    %1230 = cast(%var_7955, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %1231 = reshape(%1230, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
    %1232 = @func_4396(%1231) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */;
    %1233 = @func_6921() /* ty=Tensor[(8, 1, 9), float32] */;
    %1234 = %1232.1;
    (%1233, %1234, %var_7955)
  };
  %1235(%var_7964) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 16, 9), bool], Tensor[(1152), float32]) */
}

def @func_16925() -> Tensor[(8, 1, 9), float32] {
  %1236 = @func_12197() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1236.0
}

def @func_4848() -> (Tensor[(8, 1, 9), float32],) {
  %1239 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %1237 = @func_3649() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %1238 = %1237.2;
    (%1238,)
  };
  %1239() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_8118() -> (Tensor[(8, ?, 9), float32],) {
  %1240 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1241 = %1240.0;
  %1242 = @func_5362() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1243 = %1242.0;
  %1244 = cast(%1243, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %1245 = shape_of(%1241, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1246 = cast(%1241, dtype="float32") /* ty=Tensor[(8, 1, 9), float32] */;
  %1247 = dyn.reshape(%1244, %1245, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1248 = floor_mod(%1246, %1247) /* ty=Tensor[(8, ?, 9), float32] */;
  (%1248,)
}

def @func_11655(%var_11647: Tensor[(11, 9, 13), float64]) -> (Tensor[(11, 9, 13), float64],) {
  %1249 = cast(%var_11647, dtype="float64") /* ty=Tensor[(11, 9, 13), float64] */;
  %1250 = acosh(%1249) /* ty=Tensor[(11, 9, 13), float64] */;
  (%1250,)
}

def @func_5942(%var_5941: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32]) {
  %1257 = fn (%var_5938: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32]) {
    %1251 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1252 = cast(%var_5938, dtype="float32") /* ty=Tensor[(10), float32] */;
    %1253 = reshape(%1252, newshape=[5, 2, 1]) /* ty=Tensor[(5, 2, 1), float32] */;
    %1254 = @func_5189(%1253) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */;
    %1255 = %1251.0;
    %1256 = %1254.0;
    (%1255, %1256, %var_5938)
  };
  %1257(%var_5941) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(5, 2, 1), float32], Tensor[(10), float32]) */
}

def @func_16664(%var_16624: Tensor[(1287), int64]) -> (Tensor[(1287), float32], Tensor[(8, 1, 9), float32]) {
  %1258 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %1259 = %1258.1;
  %1260 = cast(%var_16624, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1261 = shape_of(%1259, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1262 = cast(%1259, dtype="float32") /* ty=Tensor[(1287), float32] */;
  %1263 = dyn.reshape(%1260, %1261, newshape=[]) /* ty=Tensor[(?), float32] */;
  %1264 = @func_8550() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1265 = power(%1262, %1263) /* ty=Tensor[(1287), float32] */;
  %1266 = %1264.0;
  (%1265, %1266)
}

def @func_7176() -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) {
  %1267 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1268 = @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %1269 = %1267.0;
  %1270 = %1268.1;
  (%1269, %1270)
}

def @func_5586(%var_5570: uint64, %var_5573: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64, Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 14, 9), uint64], Tensor[(60, 2), float32], Tensor[(8, 144), float32]) {
  %1271 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1272 = cast(%var_5570, dtype="uint64") /* ty=uint64 */;
  %1273 = reshape(%1272, newshape=[]) /* ty=uint64 */;
  %1274 = @func_1458(%1273) /* ty=(Tensor[(7, 1, 2), bool],) */;
  %1275 = cast(%var_5573, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %1276 = %1274.0;
  %1277 = cast(%1276, dtype="bool") /* ty=Tensor[(7, 1, 2), bool] */;
  %1278 = reshape(%1275, newshape=[3, 63]) /* ty=Tensor[(3, 63), uint16] */;
  %1279 = reshape(%1277, newshape=[14]) /* ty=Tensor[(14), bool] */;
  %1280 = @func_4222(%1278, %1279) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(3, 63), uint16], Tensor[(420), float64], Tensor[(14), bool], Tensor[(420), float64]) */;
  %1281 = cast(meta[relay.Constant][65] /* ty=Tensor[(8, 144), float32] */, dtype="float32") /* ty=Tensor[(8, 144), float32] */;
  %1282 = cast(%var_5570, dtype="uint64") /* ty=uint64 */;
  %1283 = reshape(%1281, newshape=[8, 16, 9]) /* ty=Tensor[(8, 16, 9), float32] */;
  %1284 = reshape(%1282, newshape=[]) /* ty=uint64 */;
  %1285 = @func_4008(%1283, %1284) /* ty=(Tensor[(8, 16, 9), uint64], Tensor[(8, 14, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(60, 2), float32], Tensor[(4, 13, 14), float32], Tensor[(728), float32], Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */;
  %1286 = %1271.0;
  %1287 = %1280.0;
  %1288 = @func_4166() /* ty=Tensor[(8, 14, 9), uint64] */;
  %1289 = %1285.3;
  (%1286, %1276, %var_5570, %1287, %var_5573, %1288, %1289, meta[relay.Constant][65] /* ty=Tensor[(8, 144), float32] */)
}

def @func_15766() -> Tensor[(8, 1, 9), float32] {
  %1290 = fn () -> Tensor[(8, 1, 9), float32] {
    @func_13535() /* ty=Tensor[(8, 1, 9), float32] */
  };
  %1290() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_5760(%var_5758: uint64) -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1152), float32], uint64) {
  %1291 = @func_5675() /* ty=(Tensor[(8, 14, 9), uint64], Tensor[(8, 1, 9), float32]) */;
  %1292 = cast(meta[relay.Constant][66] /* ty=Tensor[(1152), float32] */, dtype="float32") /* ty=Tensor[(1152), float32] */;
  %1293 = cast(%var_5758, dtype="uint64") /* ty=uint64 */;
  %1294 = reshape(%1292, newshape=[1152]) /* ty=Tensor[(1152), float32] */;
  %1295 = reshape(%1293, newshape=[]) /* ty=uint64 */;
  %1296 = @func_4587(%1294, %1295) /* ty=(Tensor[(8, ?, 9), uint16], Tensor[(7, 1, 2), bool], Tensor[(1152), float32], uint64, Tensor[(5, 7, 4), uint32], Tensor[(140), uint32]) */;
  %1297 = %1291.1;
  %1298 = %1296.2;
  (%1297, %1298, meta[relay.Constant][66] /* ty=Tensor[(1152), float32] */, %var_5758)
}

def @func_5707() -> Tensor[(8, 1, 9), float32] {
  @func_3915() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_12198() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1302 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %1299 = @func_5115() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %1300 = @func_7797() /* ty=Tensor[(8, 1, 9), float32] */;
    %1301 = %1299.0;
    (%1300, %1301)
  };
  %1302() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_6523() -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) {
  @func_6521() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */
}

def @func_3268() -> (Tensor[(8, 1, 9), float32],) {
  @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_15994() -> Tensor[(8, 1, 9), float32] {
  %1303 = @func_3266() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1303.0
}

def @func_7884() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1304 = @func_6227() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1305 = @func_7411() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1306 = %1304.0;
  %1307 = %1305.2;
  (%1306, %1307)
}

def @func_9424() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1308 = @func_3428() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1309 = @func_8455() /* ty=Tensor[(8, 1, 9), float32] */;
  %1310 = %1308.1;
  (%1309, %1310)
}

def @func_9055() -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) {
  %1323 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) {
    %1311 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1312 = cast(meta[relay.Constant][67] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %1313 = reshape(%1312, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %1314 = @func_8360(%1313) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(3, 9, 11), bool], Tensor[(297, 1), bool], Tensor[(8, 16, 9), bool]) */;
    %1315 = cast(meta[relay.Constant][67] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %1316 = %1314.3;
    %1317 = cast(%1316, dtype="float32") /* ty=Tensor[(1152), float32] */;
    %1318 = reshape(%1315, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %1319 = reshape(%1317, newshape=[288, 4]) /* ty=Tensor[(288, 4), float32] */;
    %1320 = @func_4462(%1318, %1319) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(288, 4), float32], Tensor[(8, 16, 9), float32]) */;
    %1321 = %1311.0;
    %1322 = %1320.2;
    (%1321, %1316, meta[relay.Constant][67] /* ty=Tensor[(1287), int64] */, %1322)
  };
  %1323() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */
}

def @func_15727() -> Tensor[(8, 1, 9), float32] {
  @func_15725() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_10590() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1326 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %1324 = @func_3798() /* ty=Tensor[(8, 1, 9), float32] */;
    %1325 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
    (%1324, %1325)
  };
  %1326() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_3302(%var_3301: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) {
  %1333 = fn (%var_3298: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) {
    %1327 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1328 = cast(%var_3298, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %1329 = reshape(%1328, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
    %1330 = @func_1339(%1329) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
    %1331 = %1327.0;
    %1332 = %1330.0;
    (%1331, %1332, %var_3298)
  };
  %1333(%var_3301) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */
}

def @func_15725() -> Tensor[(8, 1, 9), float32] {
  @func_12037() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_2766() -> Tensor[(8, 1, 9), float32] {
  @func_2764() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_7634(%var_7617: Tensor[(792), float32], %var_7628: Tensor[(189), uint16]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 11, 9), int32], Tensor[(792), float32], Tensor[(8, ?, 9), uint16], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], Tensor[(8, 16, 9), bool]) {
  %1334 = cast(%var_7617, dtype="float32") /* ty=Tensor[(792), float32] */;
  %1335 = reshape(%1334, newshape=[8, 11, 9]) /* ty=Tensor[(8, 11, 9), float32] */;
  %1336 = @func_3700() /* ty=(Tensor[(8, ?, 9), uint16],) */;
  %1337 = cast(%var_7628, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %1338 = reshape(%1337, newshape=[189]) /* ty=Tensor[(189), uint16] */;
  %1339 = @func_3300(%1338) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) */;
  %1340 = @func_7298() /* ty=(Tensor[(8, 16, 9), bool], Tensor[(8, 1, 9), float32]) */;
  %1341 = @func_5226() /* ty=Tensor[(8, 1, 9), float32] */;
  %1342 = @func_5496(%1335) /* ty=Tensor[(8, 11, 9), int32] */;
  %1343 = %1336.0;
  %1344 = %1339.1;
  %1345 = %1340.0;
  (%1341, %1342, %var_7617, %1343, %1344, %var_7628, %1345)
}

def @func_14359() -> Tensor[(8, 1, 9), float32] {
  %1346 = @func_12314() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1346.1
}

def @func_10133() -> (Tensor[(8, 1, 9), float32],) {
  %1347 = @func_9320() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1348 = %1347.0;
  (%1348,)
}

def @func_7555() -> (Tensor[(8, 1, 9), float32],) {
  @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_15935() -> (Tensor[(8, 1, 9), float32],) {
  @func_15933() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_3168() -> Tensor[(8, 1, 9), float32] {
  %1350 = fn () -> Tensor[(8, 1, 9), float32] {
    %1349 = @func_3021() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1349.0
  };
  %1350() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_12773() -> Tensor[(8, 1, 9), float32] {
  %1351 = @func_12407() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1351.0
}

def @func_2803() -> (Tensor[(8, 1, 9), float32],) {
  @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_15344() -> Tensor[(8, 1, 9), float32] {
  @func_15342() /* ty=Tensor[(8, 1, 9), float32] */
}

def @func_9346() -> (Tensor[(8, ?, 9), uint16],) {
  %1352 = @func_5663() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64], Tensor[(11, 9, 13), float32]) */;
  %1353 = %1352.0;
  %1354 = cast(meta[relay.Constant][68] /* ty=Tensor[(8, 1, 9), float32] */, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
  %1355 = shape_of(%1353, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1356 = cast(%1353, dtype="uint16") /* ty=Tensor[(8, 1, 9), uint16] */;
  %1357 = dyn.reshape(%1354, %1355, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1358 = bitwise_and(%1356, %1357) /* ty=Tensor[(8, ?, 9), uint16] */;
  (%1358,)
}

def @func_11832() -> Tensor[(8, ?, 9), int8] {
  %1360 = fn () -> Tensor[(8, ?, 9), int8] {
    %1359 = @func_9519() /* ty=(Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, ?, 9), int8]) */;
    %1359.2
  };
  %1360() /* ty=Tensor[(8, ?, 9), int8] */
}

def @func_12813() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1361 = @func_7884() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1362 = @func_4190() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
  %1363 = @func_8269() /* ty=Tensor[(8, 1, 9), float32] */;
  %1364 = %1361.0;
  %1365 = %1362.0;
  (%1363, %1364, %1365)
}

def @func_7039() -> (Tensor[(8, 1, 9), float32],) {
  %1366 = @func_2801() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1367 = %1366.0;
  (%1367,)
}

def @func_16205() -> (Tensor[(8, 1, 9), float32],) {
  %1368 = @func_12773() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1368,)
}

def @func_12928(%var_12925: Tensor[(8, 11, 9), float32], %var_12926: Tensor[(189), uint16], %var_12927: uint64) -> (Tensor[(8, 11, 9), bool], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], uint64, uint64, Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) {
  %1388 = fn (%var_12855: Tensor[(8, 11, 9), float32], %var_12864: Tensor[(189), uint16], %var_12874: uint64) -> (Tensor[(8, 11, 9), bool], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], uint64, uint64, Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) {
    %1369 = @func_10099() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %1370 = %1369.1;
    %1371 = cast(%1370, dtype="bool") /* ty=Tensor[(8, 1, 9), bool] */;
    %1372 = cast(%var_12855, dtype="bool") /* ty=Tensor[(8, 11, 9), bool] */;
    %1373 = cast(%var_12864, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %1374 = reshape(%1373, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
    %1375 = @func_1339(%1374) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
    %1376 = cast(%var_12874, dtype="uint64") /* ty=uint64 */;
    %1377 = reshape(%1376, newshape=[]) /* ty=uint64 */;
    %1378 = @func_9563(%1377) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */;
    %1379 = @func_9054() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1152), float32], Tensor[(1287), int64], Tensor[(1287), int64]) */;
    %1380 = cast(meta[relay.Constant][69] /* ty=Tensor[(1287), int64] */, dtype="int64") /* ty=Tensor[(1287), int64] */;
    %1381 = reshape(%1380, newshape=[1287]) /* ty=Tensor[(1287), int64] */;
    %1382 = @func_7276(%1381) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(120), float32], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) */;
    %1383 = greater(%1371, %1372) /* ty=Tensor[(8, 11, 9), bool] */;
    %1384 = %1375.0;
    %1385 = %1378.2;
    %1386 = %1379.1;
    %1387 = %1382.0;
    (%1383, %1384, %var_12864, %1385, %var_12874, %1386, %1387, meta[relay.Constant][69] /* ty=Tensor[(1287), int64] */)
  };
  %1388(%var_12925, %var_12926, %var_12927) /* ty=(Tensor[(8, 11, 9), bool], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16], uint64, uint64, Tensor[(1152), float32], Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */
}

def @func_10099() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1389 = @func_4537() /* ty=Tensor[(8, 1, 9), float32] */;
  %1390 = @func_8455() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1389, %1390)
}

def @func_9563(%var_9537: uint64) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) {
  %1391 = cast(%var_9537, dtype="uint64") /* ty=uint64 */;
  %1392 = reshape(%1391, newshape=[]) /* ty=uint64 */;
  %1393 = @func_1458(%1392) /* ty=(Tensor[(7, 1, 2), bool],) */;
  %1394 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
  %1395 = %1393.0;
  (%1394, %1395, %var_9537)
}

def @func_15606() -> Tensor[(8, ?, 9), uint16] {
  %1396 = @func_9295() /* ty=(Tensor[(8, ?, 9), uint8], Tensor[(11, 9, 13), bool], Tensor[(1287), int64], Tensor[(7, 3, 9), uint16], Tensor[(8, ?, 9), uint16]) */;
  %1396.4
}

def @func_13552() -> (Tensor[(1287), int64], Tensor[(1287), int64], Tensor[(8, 1, 9), float32]) {
  %1397 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %1398 = @func_10069() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(1287), int64]) */;
  %1399 = %1397.1;
  %1400 = %1398.1;
  %1401 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  (%1399, %1400, %1401)
}

def @func_12386() -> (Tensor[(8, 4, 9), int32], Tensor[(14), bool], Tensor[(420), float64], Tensor[(1, 14, 1), float32]) {
  %1402 = @func_9793() /* ty=Tensor[(8, 1, 9), float32] */;
  %1403 = cast(%1402, dtype="int32") /* ty=Tensor[(8, 1, 9), int32] */;
  %1404 = cast(meta[relay.Constant][70] /* ty=Tensor[(8, 4, 9), float32] */, dtype="int32") /* ty=Tensor[(8, 4, 9), int32] */;
  %1405 = cast(meta[relay.Constant][71] /* ty=Tensor[(14), bool] */, dtype="bool") /* ty=Tensor[(14), bool] */;
  %1406 = cast(meta[relay.Constant][72] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1407 = reshape(%1405, newshape=[1, 14, 1]) /* ty=Tensor[(1, 14, 1), bool] */;
  %1408 = reshape(%1406, newshape=[420]) /* ty=Tensor[(420), float64] */;
  %1409 = @func_3490(%1407, %1408) /* ty=(Tensor[(15, 4, 7), float64], Tensor[(420), float64], Tensor[(1, 14, 1), float64]) */;
  %1410 = %1409.2;
  %1411 = cast(%1410, dtype="float32") /* ty=Tensor[(1, 14, 1), float32] */;
  %1412 = logical_xor(%1403, %1404) /* ty=Tensor[(8, 4, 9), int32] */;
  %1413 = sin(%1411) /* ty=Tensor[(1, 14, 1), float32] */;
  (%1412, meta[relay.Constant][71] /* ty=Tensor[(14), bool] */, meta[relay.Constant][72] /* ty=Tensor[(420), float64] */, %1413)
}

def @func_4674(%var_4672: Tensor[(1287), int64]) -> (Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) {
  @func_4671(%var_4672) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(182, 4), float64], Tensor[(8, 16, 9), float32], Tensor[(1287), int64], Tensor[(1152), float32], Tensor[(120), float32], Tensor[(120), float32]) */
}

def @func_6227() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1414 = @func_2849() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1415 = @func_4086() /* ty=(Tensor[(8, 1, 9), float32],) */;
  %1416 = %1414.0;
  %1417 = %1415.0;
  (%1416, %1417)
}

def @func_10967() -> (Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) {
  @func_10965() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, ?, 9), uint16]) */
}

def @func_6968(%var_6966: Tensor[(8, 13, 9), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 13, 9), float32]) {
  @func_6965(%var_6966) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 13, 9), float32]) */
}

def @func_10697(%var_10695: Tensor[(10), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) {
  @func_10694(%var_10695) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) */
}

def @func_648(%var_646: Tensor[(5, 7, 4), uint32], %var_647: Tensor[(5, 7, 4), uint32]) -> Tensor[(5, 7, 4), uint32] {
  @func_644(%var_646, %var_647) /* ty=Tensor[(5, 7, 4), uint32] */
}

def @func_7412() -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
  %1422 = fn () -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) {
    %1418 = @func_7240() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(936), float32]) */;
    %1419 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
    %1420 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
    %1421 = %1418.0;
    (%1419, %1420, %1421)
  };
  %1422() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_16138(%var_16136: Tensor[(14, 6, 15), float32], %var_16137: Tensor[(11, 117), int64]) -> (Tensor[(14, 6, 15), float32], Tensor[(11, 9, 13), bool], Tensor[(11, 117), int64]) {
  %1428 = fn (%var_16115: Tensor[(14, 6, 15), float32], %var_16127: Tensor[(11, 117), int64]) -> (Tensor[(14, 6, 15), float32], Tensor[(11, 9, 13), bool], Tensor[(11, 117), int64]) {
    %1423 = cast(%var_16115, dtype="float32") /* ty=Tensor[(14, 6, 15), float32] */;
    %1424 = cast(%var_16127, dtype="int64") /* ty=Tensor[(11, 117), int64] */;
    %1425 = reshape(%1424, newshape=[11, 9, 13]) /* ty=Tensor[(11, 9, 13), int64] */;
    %1426 = log10(%1423) /* ty=Tensor[(14, 6, 15), float32] */;
    %1427 = @func_2724(%1425) /* ty=Tensor[(11, 9, 13), bool] */;
    (%1426, %1427, %var_16127)
  };
  %1428(%var_16136, %var_16137) /* ty=(Tensor[(14, 6, 15), float32], Tensor[(11, 9, 13), bool], Tensor[(11, 117), int64]) */
}

def @func_11351() -> (Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) {
  %1437 = fn () -> (Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) {
    %1429 = @func_4268() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(15, 4, 7), float64], Tensor[(1, 14), bool], Tensor[(420), float64], Tensor[(8, 1, 9), float32]) */;
    %1430 = cast(meta[relay.Constant][73] /* ty=Tensor[(10), float32] */, dtype="float32") /* ty=Tensor[(10), float32] */;
    %1431 = reshape(%1430, newshape=[10]) /* ty=Tensor[(10), float32] */;
    %1432 = @func_10694(%1431) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) */;
    %1433 = @func_9219() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32]) */;
    %1434 = %1429.2;
    %1435 = %1432.0;
    %1436 = %1433.1;
    (%1434, %1435, meta[relay.Constant][73] /* ty=Tensor[(10), float32] */, %1436)
  };
  %1437() /* ty=(Tensor[(1, 14), bool], Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_6521() -> (Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16], Tensor[(189), uint16]) {
  %1438 = cast(meta[relay.Constant][74] /* ty=Tensor[(189), uint16] */, dtype="uint16") /* ty=Tensor[(189), uint16] */;
  %1439 = reshape(%1438, newshape=[7, 3, 9]) /* ty=Tensor[(7, 3, 9), uint16] */;
  %1440 = @func_1339(%1439) /* ty=(Tensor[(7, 3, 9), uint16], Tensor[(7, 3, 9), uint16]) */;
  %1441 = @func_3882() /* ty=Tensor[(8, 1, 9), float32] */;
  %1442 = %1440.0;
  (%1441, %1442, meta[relay.Constant][74] /* ty=Tensor[(189), uint16] */)
}

def @func_5189(%var_5167: Tensor[(5, 2, 1), float32]) -> (Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) {
  %1443 = cast(%var_5167, dtype="float32") /* ty=Tensor[(5, 2, 1), float32] */;
  %1444 = @func_3853() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(4, 13, 14), float32], Tensor[(7, 104), float32]) */;
  %1445 = log10(%1443) /* ty=Tensor[(5, 2, 1), float32] */;
  %1446 = %1444.0;
  (%1445, %1446)
}

def @func_8700() -> (Tensor[(8, ?, 9), int64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32]) {
  @func_8698() /* ty=(Tensor[(8, ?, 9), int64], Tensor[(8, ?, 9), bool], Tensor[(8, 1, 9), float32]) */
}

def @func_9566(%var_9564: uint64) -> (Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) {
  @func_9563(%var_9564) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 1, 2), bool], uint64) */
}

def @func_16578() -> (Tensor[(8, 1, 9), float32],) {
  %1449 = fn () -> (Tensor[(8, 1, 9), float32],) {
    %1447 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1448 = %1447.0;
    (%1448,)
  };
  %1449() /* ty=(Tensor[(8, 1, 9), float32],) */
}

def @func_5192(%var_5190: Tensor[(5, 2, 1), float32]) -> (Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) {
  @func_5189(%var_5190) /* ty=(Tensor[(5, 2, 1), float32], Tensor[(8, 1, 9), float32]) */
}

def @func_15871(%var_15868: Tensor[(189), uint16], %var_15869: Tensor[(297), bool], %var_15870: Tensor[(10, 1), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(3, 9, 11), bool], Tensor[(297), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10, 1), float32]) {
  %1474 = fn (%var_15812: Tensor[(189), uint16], %var_15833: Tensor[(297), bool], %var_15852: Tensor[(10, 1), float32]) -> (Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(3, 9, 11), bool], Tensor[(297), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10, 1), float32]) {
    %1450 = @func_7176() /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint16]) */;
    %1451 = @func_7553() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1452 = cast(%var_15812, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %1453 = cast(%var_15812, dtype="uint16") /* ty=Tensor[(189), uint16] */;
    %1454 = reshape(%1452, newshape=[189]) /* ty=Tensor[(189), uint16] */;
    %1455 = reshape(%1453, newshape=[189]) /* ty=Tensor[(189), uint16] */;
    %1456 = @func_13805(%1454, %1455) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(7, 3, 9), uint64], Tensor[(189), float32]) */;
    %1457 = @func_5332() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1458 = cast(%var_15833, dtype="bool") /* ty=Tensor[(297), bool] */;
    %1459 = reshape(%1458, newshape=[3, 9, 11]) /* ty=Tensor[(3, 9, 11), bool] */;
    %1460 = @func_6409(%1459) /* ty=(Tensor[(3, 9, 11), bool], Tensor[(8, 14, 9), uint64], Tensor[(140), uint32], Tensor[(1152), float32]) */;
    %1461 = @func_10223() /* ty=(Tensor[(8, 1, 9), float32],) */;
    %1462 = cast(%var_15852, dtype="float32") /* ty=Tensor[(10, 1), float32] */;
    %1463 = reshape(%1462, newshape=[10]) /* ty=Tensor[(10), float32] */;
    %1464 = @func_10694(%1463) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(10), float32], Tensor[(5, 2, 1), float64]) */;
    %1465 = %1450.0;
    %1466 = %1451.0;
    %1467 = %1456.0;
    %1468 = @func_10561() /* ty=Tensor[(8, 1, 9), float32] */;
    %1469 = %1457.0;
    %1470 = %1460.0;
    %1471 = @func_2764() /* ty=Tensor[(8, 1, 9), float32] */;
    %1472 = %1461.0;
    %1473 = %1464.0;
    (%1465, %1466, %1467, %var_15812, %1468, %1469, %1470, %var_15833, %1471, %1472, %1473, %var_15852)
  };
  %1474(%var_15868, %var_15869, %var_15870) /* ty=(Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(189), uint16], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(3, 9, 11), bool], Tensor[(297), bool], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(8, 1, 9), float32], Tensor[(10, 1), float32]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen875/build/output.py:4834: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen875/build/output.py", line 4839, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_reshape_bitwise_and_kernel0(ushort* __restrict__ T_bitwise_and, ushort* __restrict__ placeholder, ushort* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1080) {
    T_bitwise_and[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] & placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


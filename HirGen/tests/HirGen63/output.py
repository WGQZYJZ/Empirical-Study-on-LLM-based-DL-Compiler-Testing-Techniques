import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_10 = relay.var("var_10", dtype = "float32", shape = (7, 10, 7))#candidate|10|(7, 10, 7)|var|float32
uop_11 = relay.asinh(var_10.astype('float32')) # shape=(7, 10, 7)
var_20 = relay.var("var_20", dtype = "float32", shape = (7, 10, 7))#candidate|20|(7, 10, 7)|var|float32
bop_21 = relay.logical_or(uop_11.astype('bool'), relay.reshape(var_20.astype('bool'), relay.shape_of(uop_11))) # shape=(7, 10, 7)
output = relay.Tuple([bop_21,])
output2 = relay.Tuple([bop_21,])
func_27 = relay.Function([var_10,var_20,], output)
mod['func_27'] = func_27
mod = relay.transform.InferType()(mod)
var_28 = relay.var("var_28", dtype = "float32", shape = (7, 10, 7))#candidate|28|(7, 10, 7)|var|float32
var_29 = relay.var("var_29", dtype = "float32", shape = (7, 10, 7))#candidate|29|(7, 10, 7)|var|float32
output = func_27(var_28,var_29,)
func_30 = relay.Function([var_28,var_29,], output)
mutated_mod['func_30'] = func_30
mutated_mod = relay.transform.InferType()(mutated_mod)
var_68 = relay.var("var_68", dtype = "float32", shape = (8, 13, 5))#candidate|68|(8, 13, 5)|var|float32
uop_69 = relay.sigmoid(var_68.astype('float32')) # shape=(8, 13, 5)
func_27_call = mod.get_global_var('func_27')
func_30_call = mutated_mod.get_global_var('func_30')
const_72 = relay.const([-6.703678,6.278631,-0.917457,1.891895,-2.093288,9.251655,4.659092,-4.008574,-2.431241,9.632367,-9.273294,-2.144189,3.450687,-9.303433,-0.024602,6.484089,6.670409,-0.990170,-3.694314,5.379879,-2.505373,-3.133498,7.733210,-5.044868,-7.799870,7.107571,-5.695424,-6.301327,-5.846878,-9.182316,0.699185,4.604858,6.685749,-5.225955,6.264355,-4.634204,-0.810839,8.368154,0.745293,3.196065,0.685524,-5.106726,1.721855,1.629677,-7.750568,-7.066108,-4.339769,-9.213369,-8.894973,9.685325,-9.071051,2.688847,-4.346434,-7.095441,-4.213648,9.152368,-3.389198,5.108095,-8.314443,1.706551,9.105416,-2.046427,3.921983,8.726719,5.245655,6.480042,-9.177597,-0.082185,-4.798929,-6.789245,8.663495,-1.529439,-4.549669,2.135622,6.836369,3.334435,-9.356306,-9.484605,-5.263400,7.116096,-4.892464,-3.537852,3.675662,-7.029649,1.878722,-6.979396,-9.010469,1.764463,2.409138,-1.644697,0.520888,6.562874,7.655321,-1.510033,5.559212,-8.669337,-9.292700,-0.225014,3.548822,8.834112,7.343991,8.518027,0.048443,-2.093135,0.669545,9.775952,-9.014517,6.258333,-5.732345,-0.299022,4.644508,3.691217,4.076066,-5.867185,-3.170771,9.836204,9.990601,-6.166248,5.438989,4.382325,5.738476,-9.569578,7.519155,1.812162,8.288312,6.005057,-7.703885,-3.412061,-5.439589,2.940623,8.997090,6.466285,1.887129,1.972040,-5.636261,-9.629922,8.778376,-5.339632,-8.802412,-8.063094,9.290110,-8.771574,-0.480324,5.274883,7.094809,-2.655501,2.862154,-5.524451,8.128083,-7.098466,-1.194414,1.557256,3.263420,5.383862,4.216335,1.707903,7.620283,6.250713,-0.806934,2.001012,6.386012,-4.450167,2.886322,8.922816,-6.163970,-9.732514,-8.863213,-3.390514,6.922476,6.298955,2.406949,2.936348,2.963474,9.894725,5.080153,7.172964,-4.408972,-8.691387,-4.310605,-2.873761,2.467242,-0.397383,-6.390760,2.744659,-8.386674,-2.958251,3.506075,-3.576570,-5.415014,-9.814187,-0.425091,-0.214560,-7.554180,-6.705135,0.212995,4.234426,-7.326239,-4.698385,4.386141,-1.569530,6.970848,3.845058,4.434310,6.869224,4.163397,0.801102,1.525051,-7.186386,-5.895033,1.867946,8.808276,-9.585987,-7.324518,-3.683041,-8.953450,7.819517,-1.905763,-5.566013,-8.064918,5.958444,-4.578906,-0.522210,8.236366,0.279933,4.426362,3.425360,0.416695,-5.192156,-6.027287,7.849780,-6.598927,-3.172402,-7.070322,-2.050794,-0.808088,-9.113023,-0.381913,0.449373,-7.747147,-8.728385,9.856406,-1.892982,8.865663,-3.386371,-7.850735,2.388462,-8.918471,5.222210,-1.294054,4.167382,4.372170,0.536103,-3.016618,3.098930,6.534549,1.278907,3.441441,-2.726977,-9.539407,4.228211,-6.069785,2.421218,-4.497445,6.831339,-6.157092,-6.512220,4.334122,-8.941344,-1.045848,-5.044218,5.469680,-0.586891,0.614143,1.609763,3.456014,-0.221099,4.615573,-6.359218,-9.034564,4.210590,-3.333715,7.151576,0.712988,-3.184949,3.134817,-4.827939,-7.970200,-1.173759,7.814008,7.048891,-4.193818,-3.873039,-9.376835,6.851278,5.101545,6.426229,-2.723534,1.085096,-8.432651,4.887776,-1.282211,-2.262689,-5.634466,-4.780064,7.825001,-0.596400,-0.938460,0.586331,9.663347,9.258529,2.936946,4.504535,2.198876,-0.881079,-4.904175,-8.616627,3.289275,6.047419,9.457620,3.125517,2.137242,-0.975973,-5.870547,-6.247386,-3.410775,-5.584743,4.703434,-9.852447,-3.654125,-0.465273,-6.597113,3.361464,-1.853691,-2.216522,1.418052,-1.785260,6.869945,-7.121740,-1.157448,-4.682003,-7.429398,4.268661,-4.139605,7.306462,-4.502809,7.380684,-4.061324,-2.556152,2.602059,-5.163394,-9.779423,4.631089,8.226570,0.396904,7.939942,-2.544520,1.746488,2.641879,4.060839,-4.116043,-8.664198,0.862430,7.489378,2.665277,-0.072643,2.382011,-5.727963,-3.411845,-4.078530,-9.705222,5.305505,5.704885,-2.262618,-7.132478,5.917451,3.920078,-2.624946,-4.058132,-2.227509,-5.137368,9.385950,1.641297,5.762875,3.597873,4.969983,4.604554,7.550988,6.593417,7.980981,3.116156,4.128902,-9.113118,7.965292,3.388428,7.895925,-2.568100,7.562495,-3.868567,-3.989815,-5.345119,1.234248,-4.421413,-8.046548,-6.368922,-1.503915,5.725266,-6.666377,2.786516,-6.990275,6.423518,9.853194,1.268690,1.692019,4.765611,3.200059,-6.559180,8.425973,7.705534,-6.604084,4.671355,-7.629261,-0.228628,-0.122879,-1.761310,-6.638120,-6.344173,-2.459252,-5.312592,-6.717336,0.337635,1.645834,-0.241932,-1.603910,6.341838,-2.262435,9.254217,8.523370,8.148974,-6.279964,-5.520384,-1.112450,-0.893095,-7.733558,-3.148880,-8.470926,0.142312,2.722876,-6.228554,5.693400,4.051428,-1.126408,-9.854651,-1.608832,3.873431,-2.885387,-5.906659,1.593169,9.153326,9.609977,-2.144291,0.415443,-8.180626,1.571943,-3.141746,-8.298009,-2.186592,6.341675,-7.274342,0.952140,-8.182421,0.947564,-6.404038,7.030194,1.824547,8.617403,-1.992251,7.817789,-9.155977,2.684722,9.932533,-2.362018,-3.645495,7.120668,8.513222,-5.672249,-5.847822,-8.156802,-0.527929,-6.047985,2.812556], dtype = "float32")#candidate|72|(490,)|const|float32
call_71 = relay.TupleGetItem(func_27_call(relay.reshape(const_72.astype('float32'), [7, 10, 7]), relay.reshape(const_72.astype('float32'), [7, 10, 7]), ), 0)
call_73 = relay.TupleGetItem(func_30_call(relay.reshape(const_72.astype('float32'), [7, 10, 7]), relay.reshape(const_72.astype('float32'), [7, 10, 7]), ), 0)
func_27_call = mod.get_global_var('func_27')
func_30_call = mutated_mod.get_global_var('func_30')
call_76 = relay.TupleGetItem(func_27_call(relay.reshape(const_72.astype('float32'), [7, 10, 7]), relay.reshape(call_71.astype('float32'), [7, 10, 7]), ), 0)
call_77 = relay.TupleGetItem(func_30_call(relay.reshape(const_72.astype('float32'), [7, 10, 7]), relay.reshape(call_71.astype('float32'), [7, 10, 7]), ), 0)
uop_79 = relay.sqrt(uop_69.astype('float64')) # shape=(8, 13, 5)
uop_81 = relay.erf(uop_79.astype('float64')) # shape=(8, 13, 5)
uop_83 = relay.sin(uop_81.astype('float64')) # shape=(8, 13, 5)
uop_99 = relay.acos(uop_69.astype('float64')) # shape=(8, 13, 5)
output = relay.Tuple([call_71,const_72,call_76,uop_83,uop_99,])
output2 = relay.Tuple([call_73,const_72,call_77,uop_83,uop_99,])
func_102 = relay.Function([var_68,], output)
mod['func_102'] = func_102
mod = relay.transform.InferType()(mod)
mutated_mod['func_102'] = func_102
mutated_mod = relay.transform.InferType()(mutated_mod)
var_103 = relay.var("var_103", dtype = "float32", shape = (8, 13, 5))#candidate|103|(8, 13, 5)|var|float32
func_102_call = mutated_mod.get_global_var('func_102')
call_104 = func_102_call(var_103)
output = call_104
func_105 = relay.Function([var_103], output)
mutated_mod['func_105'] = func_105
mutated_mod = relay.transform.InferType()(mutated_mod)
var_166 = relay.var("var_166", dtype = "float64", shape = (11, 11, 6))#candidate|166|(11, 11, 6)|var|float64
uop_167 = relay.acos(var_166.astype('float64')) # shape=(11, 11, 6)
bop_175 = relay.subtract(var_166.astype('uint8'), relay.reshape(uop_167.astype('uint8'), relay.shape_of(var_166))) # shape=(11, 11, 6)
uop_178 = relay.atan(bop_175.astype('float64')) # shape=(11, 11, 6)
bop_184 = relay.logical_or(uop_178.astype('bool'), relay.reshape(uop_167.astype('bool'), relay.shape_of(uop_178))) # shape=(11, 11, 6)
bop_187 = relay.bitwise_xor(bop_184.astype('int8'), relay.reshape(uop_178.astype('int8'), relay.shape_of(bop_184))) # shape=(11, 11, 6)
uop_190 = relay.log2(bop_175.astype('float64')) # shape=(11, 11, 6)
output = relay.Tuple([bop_187,uop_190,])
output2 = relay.Tuple([bop_187,uop_190,])
func_192 = relay.Function([var_166,], output)
mod['func_192'] = func_192
mod = relay.transform.InferType()(mod)
var_193 = relay.var("var_193", dtype = "float64", shape = (11, 11, 6))#candidate|193|(11, 11, 6)|var|float64
output = func_192(var_193)
func_194 = relay.Function([var_193], output)
mutated_mod['func_194'] = func_194
mutated_mod = relay.transform.InferType()(mutated_mod)
var_269 = relay.var("var_269", dtype = "float32", shape = (16, 8, 12))#candidate|269|(16, 8, 12)|var|float32
var_270 = relay.var("var_270", dtype = "float32", shape = (16, 8, 12))#candidate|270|(16, 8, 12)|var|float32
bop_271 = relay.floor_mod(var_269.astype('float32'), relay.reshape(var_270.astype('float32'), relay.shape_of(var_269))) # shape=(16, 8, 12)
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
const_284 = relay.const([6.003874,8.357721,0.824390,6.691990,-1.661341,0.336219,-4.939833,-3.188487,-2.591674,5.554176,5.513706,-6.895779,-0.557988,-6.451359,2.863891,-7.282547,2.585836,8.818825,-4.444047,-3.742650,2.953131,-5.583222,8.839601,-3.911056,8.713229,5.432546,6.430013,-0.142438,-9.987439,2.372107,-3.998140,-8.130558,-0.389896,-1.794935,-0.234246,0.842145,5.465698,7.191429,-0.660835,-1.982475,-3.295187,-2.395060,-7.458566,8.287865,-0.076031,-8.104650,-8.661931,-2.677123,-6.131060,0.747323,9.260583,-5.829622,-1.670819,4.030113,-2.183703,-2.311651,-5.402782,-4.159658,4.378595,9.643968,0.878803,-0.945373,-9.547021,-6.649817,0.392480,9.935179,-4.246324,4.430271,-7.905788,1.858014,7.976556,8.726378,-4.473434,-2.641290,5.973900,7.237578,9.111150,-9.222771,-3.119224,-1.669230,-6.834412,2.687633,-1.412698,1.180122,6.149705,6.403236,-6.193292,-2.636380,-9.269251,-9.189289,-2.582620,-7.328582,4.503783,0.929681,7.892318,8.293108,-1.290336,-1.802276,-8.284157,0.707057,-1.273971,-4.173152,9.100691,-1.429948,7.419337,5.071667,-1.073409,5.243098,-5.033149,-9.762652,-0.752837,1.608165,-4.048477,3.028800,9.613074,-9.212122,1.326230,-7.745562,-9.390532,2.631164,7.299968,0.207870,-8.716853,4.725030,-5.042036,8.936005,8.954495,8.445482,-4.715676,-1.637009,5.356634,-2.868190,4.609692,5.710338,1.660126,6.572156,8.951036,-3.883615,8.077194,-7.348619,1.445997,2.412322,-0.944691,-0.207956,0.976943,-9.764968,-8.911125,-7.117797,3.995489,1.855729,-4.253492,3.493689,7.300006,0.234684,3.515605,-1.063627,2.762980,3.625497,-7.705902,3.241223,2.081994,-7.897838,-3.240203,4.313416,-6.946386,-0.380358,-6.446207,-0.696938,6.741946,-6.228500,3.836255,-6.959390,-7.167545,-2.303119,8.772822,2.552704,3.430905,-0.644170,-3.182502,3.074435,-5.102523,5.340106,8.694412,3.752149,3.184971,3.099317,-9.230326,-8.944800,-3.245393,-0.316149,-6.593006,-1.720323,3.090578,1.484287,-1.145222,2.469736,-1.905892,4.392441,-1.035477,-3.703534,1.031168,7.941308,3.662453,-2.709576,-0.201201,-3.561056,-0.878571,0.521773,7.772186,7.381246,1.374655,3.604981,6.875433,-8.740255,2.417129,-5.641866,-4.107298,-6.954547,8.023383,1.127529,1.580306,-4.051781,-4.606839,-2.907837,-9.788333,-4.340367,-7.548208,5.936923,-0.253944,6.949047,-3.711154,-6.420753,4.757365,9.894399,-0.993300,3.155059,-6.534296,5.785000,3.939302,-7.319008,-2.528969,0.219790,-8.320249,-8.061573,-1.178845,-1.547225,1.122347,-5.165801,-9.643715,6.466509,-3.377633,-0.324838,-0.894211,-4.023284,7.275448,5.491960,9.573800,-5.267170,6.815903,-6.416803,7.255394,3.446745,-8.082179,8.329222,0.509218,2.934143,3.815548,-3.974421,2.037907,3.475325,6.526070,-0.871508,-4.343984,7.698114,-2.994889,5.959588,-8.818945,-3.403909,-9.414461,7.761116,9.160679,-6.949958,2.442247,-1.226780,4.844641,5.823346,4.300484,9.636977,9.972372,8.659421,-3.128199,6.405037,2.772492,7.374619,1.547219,2.972578,5.122041,-5.230551,-9.003664,-1.796352,-0.551206,0.971646,8.298140,0.411486,0.154928,-6.162399,-8.401011,-9.865204,-9.434112,3.725018,2.125174,-3.583218,-9.331434,5.362366,2.745171,-3.253840,8.906720,8.234063,-1.028909,0.403235,-6.131707,-6.533569,0.807351,-0.556315,-1.014998,-0.411602,4.642240,4.358059,9.661532,-7.955122,-0.549011,-2.106492,-4.908771,-1.110550,0.594199,-6.097261,-2.176631,-1.512844,-6.480169,8.495413,-8.107891,-2.571390,-7.796611,-9.858431,-5.169125,-3.468424,5.770503,-0.778594,8.088474,7.043189,7.356295,-4.534023,-6.855050,0.581409,7.305311,4.201786,-3.740003,7.436761,0.645817,-3.928583,0.879180,-3.703382,-6.472682,-3.402847,-4.909324,-6.631651,-1.748210,2.037180,6.154643,6.656404,5.857900,-0.316156,-7.822163,-9.008952,0.208297,1.290544,0.879550,-8.589434,-6.937122,1.513529,-0.740557,-4.367813,-5.729082,4.361754,4.664588,7.943990,3.277012,-4.352901,8.439721,-1.303556,-5.455396,5.808768,4.258160,0.693577,4.331220,-2.787684,-7.868575,-8.101033,-3.004591,-3.753746,-2.448930,-7.902617,8.738469,0.471508,2.943515,-6.876070,6.174586,-4.272928,9.024395,-2.631689,-3.557135,-8.097345,-9.715686,-8.480909,-4.683640,-4.790148,-1.783926,-8.665075,1.426818,-4.649938,2.708143,-1.593767,2.902062,-6.019058,-3.787298,9.846146,2.919822,8.192528,-6.867469,0.959873,-3.140752,7.435670,-9.832412,4.769553,4.011827,5.361824,-4.263522,8.114433,-4.866644,-6.435070,-8.743179,0.613761,4.243817,6.595671,-9.425645,-1.965449,-0.568541,3.630964,4.557121,0.053126,4.067665,-7.608925,-2.829653,7.016421,9.040942,-0.274493,1.821336,5.732764,-6.984562,-4.069824,7.001250,-2.354154,-2.414594,9.643410,-7.665433,-4.087371,1.014358,0.924309,-2.309100,-6.391510,-7.385569,3.130194,-4.798099,-6.981280,-3.206124,-7.082462,5.630240,6.848561,-5.024520,4.298361,1.449973,-7.161419,-3.784322,3.587432,-1.013008,-3.214130,-6.304495,-0.779511,5.918660,1.347335,5.948311,9.160837,-2.913524,-9.587984,9.330145,0.230396,0.717910,9.184692,9.728043,-0.103959,-8.490784,-1.184115,0.268603,-3.259870,3.786927,-9.000293,3.279550,8.375427,-2.802400,-7.667034,-8.774551,3.321424,-4.314110,4.069912,8.828433,0.076003,1.664169,-4.199691,4.111939,1.626035], dtype = "float32")#candidate|284|(520,)|const|float32
call_283 = relay.TupleGetItem(func_102_call(relay.reshape(const_284.astype('float32'), [8, 13, 5])), 2)
call_285 = relay.TupleGetItem(func_105_call(relay.reshape(const_284.astype('float32'), [8, 13, 5])), 2)
output = relay.Tuple([bop_271,call_283,const_284,])
output2 = relay.Tuple([bop_271,call_285,const_284,])
func_287 = relay.Function([var_269,var_270,], output)
mod['func_287'] = func_287
mod = relay.transform.InferType()(mod)
mutated_mod['func_287'] = func_287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_287_call = mutated_mod.get_global_var('func_287')
var_289 = relay.var("var_289", dtype = "float32", shape = (16, 8, 12))#candidate|289|(16, 8, 12)|var|float32
var_290 = relay.var("var_290", dtype = "float32", shape = (16, 8, 12))#candidate|290|(16, 8, 12)|var|float32
call_288 = func_287_call(var_289,var_290,)
output = call_288
func_291 = relay.Function([var_289,var_290,], output)
mutated_mod['func_291'] = func_291
mutated_mod = relay.transform.InferType()(mutated_mod)
var_375 = relay.var("var_375", dtype = "bool", shape = (14, 2, 3))#candidate|375|(14, 2, 3)|var|bool
var_376 = relay.var("var_376", dtype = "bool", shape = (14, 2, 3))#candidate|376|(14, 2, 3)|var|bool
bop_377 = relay.logical_and(var_375.astype('bool'), relay.reshape(var_376.astype('bool'), relay.shape_of(var_375))) # shape=(14, 2, 3)
uop_380 = relay.atanh(bop_377.astype('float32')) # shape=(14, 2, 3)
output = uop_380
output2 = uop_380
func_382 = relay.Function([var_375,var_376,], output)
mod['func_382'] = func_382
mod = relay.transform.InferType()(mod)
mutated_mod['func_382'] = func_382
mutated_mod = relay.transform.InferType()(mutated_mod)
func_382_call = mutated_mod.get_global_var('func_382')
var_384 = relay.var("var_384", dtype = "bool", shape = (14, 2, 3))#candidate|384|(14, 2, 3)|var|bool
var_385 = relay.var("var_385", dtype = "bool", shape = (14, 2, 3))#candidate|385|(14, 2, 3)|var|bool
call_383 = func_382_call(var_384,var_385,)
output = call_383
func_386 = relay.Function([var_384,var_385,], output)
mutated_mod['func_386'] = func_386
mutated_mod = relay.transform.InferType()(mutated_mod)
const_419 = relay.const([[[6,-1,-6,9,8,6,7,-1,-10,-6,-10,-5,-9],[7,6,1,5,6,-4,9,-6,-2,-1,-10,3,5],[2,6,-2,5,1,9,7,7,2,-3,-1,1,-7],[-4,-9,-4,8,2,-10,-7,2,1,3,3,6,-4],[-1,10,6,-10,4,3,3,1,2,-6,-3,-4,-5],[-2,4,-7,-8,5,-2,8,1,7,7,-7,3,3],[-2,-2,7,9,9,6,-4,3,10,-1,5,2,5],[2,5,-4,6,6,-4,-5,-3,-2,4,5,9,4],[4,-5,-7,9,-4,-1,-10,4,-3,9,-1,-5,8],[-8,5,-10,-8,-10,-4,7,3,-10,6,-9,4,7],[8,-10,-1,3,10,9,-10,3,9,4,1,-4,-10],[7,10,-9,5,5,8,4,-1,8,-1,7,-2,-1],[-7,-9,8,10,2,-8,-9,-5,-1,6,3,5,-4]],[[3,5,8,-8,8,-7,-6,10,-7,7,7,-2,-1],[-9,-8,-3,9,-6,-10,8,-2,6,1,4,-6,-10],[8,-8,-9,-9,9,10,10,7,-2,-7,7,4,1],[7,-6,2,3,7,8,8,10,5,6,9,6,-2],[-1,-4,2,-2,10,-6,-8,4,-9,-3,-10,8,-2],[-4,4,5,2,-10,1,-5,-7,-6,4,-1,2,-1],[-4,-8,7,-7,8,6,1,4,-9,-5,-10,9,10],[-6,-4,5,-7,6,-5,-6,-7,2,-10,2,-3,-4],[-9,-6,5,-1,8,-8,-9,10,-7,6,9,-2,2],[8,2,-10,-7,9,-6,-4,4,-3,4,6,2,-5],[-2,1,10,1,1,2,6,1,-2,10,7,-1,-9],[-4,1,-1,8,-6,9,-2,-7,-8,6,6,-6,-3],[10,-4,3,9,7,6,1,-6,9,1,-10,10,-2]],[[-3,-5,-9,-2,-5,1,8,1,5,-8,-2,-9,-5],[-6,7,3,6,8,-4,-10,-5,10,-1,9,-5,-1],[4,-4,8,-5,-7,7,-8,-9,-7,-1,10,-8,-6],[-10,-2,10,8,-4,-5,5,7,5,1,8,-3,-2],[2,-5,-7,-1,-6,6,6,-4,10,3,3,3,-2],[-2,3,7,4,-6,-8,1,-8,10,8,7,3,-5],[7,-10,10,3,8,9,-5,4,-1,-7,-3,-5,1],[8,1,2,-3,9,6,7,4,-9,-10,-2,9,10],[-6,-4,-8,-3,-8,-10,-9,4,-1,-3,-6,5,5],[-9,-7,-8,-5,-2,-7,-5,-1,-7,2,-10,-2,-1],[5,-8,-5,7,-5,7,-9,4,-5,2,2,10,3],[-10,-5,7,10,2,-10,7,4,-7,4,-9,-10,9],[-4,-9,-9,2,-1,5,4,-7,8,10,-10,5,8]],[[-5,8,-10,2,-7,-8,6,10,1,1,-8,1,-1],[7,-7,1,-3,7,-1,-5,-10,1,-4,-9,7,-4],[9,5,8,-7,6,8,-8,7,4,2,-4,-9,-6],[-5,10,-7,5,-10,-5,10,8,-3,3,-8,1,-8],[-4,5,-9,2,10,-10,-3,-9,-1,10,-5,6,2],[-2,3,-7,-10,7,-3,-1,-8,7,3,-8,5,2],[10,7,-1,6,-2,2,-5,3,8,10,-5,7,-5],[10,4,9,9,7,-8,3,6,-3,-6,9,-2,-10],[-6,-5,-4,10,-9,2,-6,8,-4,5,8,-10,-6],[-6,8,7,5,-6,7,4,6,3,-7,-7,2,10],[1,4,-1,-8,-8,-2,5,1,5,-9,1,4,-3],[-10,4,-8,-2,-2,5,-1,-3,6,-2,-3,2,9],[-3,3,5,-4,-5,-3,5,1,5,2,4,9,5]],[[-4,-3,-2,5,6,-3,8,3,7,7,5,-8,2],[-7,10,3,10,-7,4,-2,-6,1,2,-5,9,5],[-6,2,-6,10,-10,-2,-1,-7,-4,3,1,-2,-7],[2,-1,-1,1,-6,2,-5,-1,5,7,-4,10,-1],[-3,-3,-1,6,3,10,1,-3,4,-5,6,-4,3],[-5,9,-5,-8,3,-5,-5,8,-2,-3,-2,-4,9],[-9,4,3,7,7,6,-10,7,10,2,7,-7,-9],[-7,-5,5,-1,6,-2,8,4,-5,3,-10,5,-2],[-5,3,7,-1,8,6,6,-5,-6,-8,-5,7,-6],[-2,8,-3,1,1,6,10,-7,-3,-10,-3,-1,9],[3,-5,-10,8,-9,2,-7,-9,2,-8,8,4,-2],[-6,-6,-9,8,8,1,7,8,-1,2,-9,1,-3],[-1,-9,-4,5,10,10,8,-8,-5,8,-6,-10,8]],[[3,7,8,-3,-2,-2,6,9,-1,-6,-3,-6,4],[-9,-10,-6,-6,-9,2,5,-10,8,-8,3,-3,8],[10,8,-8,10,6,1,8,8,3,-3,10,-8,-8],[10,8,1,6,3,8,1,7,6,1,7,-9,6],[2,2,5,-3,-1,-2,-6,8,6,8,1,-1,1],[-8,-8,2,8,-10,-5,5,-9,-3,-2,9,-2,3],[4,-8,4,5,-10,-2,2,-3,-6,3,7,-10,-6],[-9,7,-2,10,6,-7,7,-10,10,-2,-9,1,-4],[7,-9,3,9,-10,3,-4,3,9,-1,-9,-1,1],[-1,-1,3,9,8,10,5,2,-9,4,8,-1,2],[-7,3,2,-4,-9,10,-9,-1,10,8,-2,8,8],[-9,4,-9,4,-1,-5,1,4,-3,4,1,-10,7],[5,-7,-1,9,6,8,-3,-8,6,4,3,-2,-9]],[[-10,-1,10,2,8,-2,1,-7,1,2,10,-1,7],[-10,-10,1,10,8,-9,-7,-6,-5,10,9,-4,1],[8,-6,5,-3,7,-6,9,6,4,6,4,-8,3],[-6,-8,-1,-6,-9,-3,7,-10,8,6,-9,9,2],[-5,8,10,7,10,4,4,-8,-8,8,7,-7,-4],[-5,2,-8,10,6,-9,-9,2,-6,7,-5,8,-4],[1,-8,-10,8,2,10,2,-3,-1,-2,6,-1,-2],[9,-10,-7,-6,8,9,7,-3,-3,-3,10,3,-8],[1,-3,4,5,6,-8,8,-8,3,-8,2,-3,-2],[-8,-6,3,4,10,-9,-3,-8,9,9,3,-3,-10],[2,8,8,-8,-2,2,6,-5,9,-2,-1,3,8],[-1,6,-4,7,-2,-9,9,-1,9,-5,2,2,-2],[-7,-4,2,-4,7,7,-3,8,9,-3,-10,-8,7]],[[-10,-6,-4,1,7,-3,2,-10,-5,7,-5,5,-7],[-2,-10,6,10,6,6,1,-1,-4,-6,1,7,7],[4,-2,6,7,5,-10,7,8,-3,7,-3,6,-5],[-1,3,-6,1,-2,-4,-5,-4,3,-10,7,9,-7],[4,2,-8,-4,2,-2,10,9,2,-4,-8,-8,-1],[2,-10,2,2,-7,-8,5,-3,-2,8,-8,5,7],[-2,-2,1,-10,-4,-8,10,-9,6,-8,-1,-1,-2],[-1,10,10,4,-4,-7,7,9,-8,-1,-7,2,-6],[-8,4,-4,8,-3,-8,2,2,-6,-1,-6,-4,-9],[-4,8,4,4,5,2,-4,4,4,3,5,6,-4],[8,-9,-1,-8,2,-7,1,-6,7,-10,3,-7,9],[-6,8,7,-10,-3,-9,1,2,-8,2,-5,-4,-10],[-6,-3,-8,8,-9,-2,-1,-9,3,-4,8,7,5]],[[-8,5,-8,-4,-6,8,-8,10,5,4,-4,3,-3],[9,10,-10,-5,-8,-7,-3,-5,-8,-7,5,-2,5],[-6,-5,9,9,-9,10,7,6,2,-9,-10,2,-7],[-1,-7,-6,-5,4,-6,5,-3,7,5,-3,3,-6],[7,10,6,-5,-8,-6,6,6,2,-5,-6,-4,-8],[-8,7,3,1,-9,5,-1,-9,-5,-6,4,10,-2],[6,7,-3,4,-8,-3,2,-7,-8,-9,5,9,-3],[-9,4,1,-9,3,-5,9,6,2,6,5,10,-10],[-6,-6,3,5,-9,9,-7,10,-9,-5,5,-5,1],[-6,1,-3,6,-9,-7,8,1,5,-8,-1,-6,-6],[-8,-3,-10,-7,4,10,-1,8,-3,3,-2,5,-3],[-10,5,-1,6,9,2,7,-7,-3,5,-6,6,4],[8,-9,-6,-2,-7,-5,7,-7,1,3,2,-6,-9]],[[-7,2,4,-3,-10,4,-1,3,3,9,10,-5,-9],[1,4,-10,5,-4,-1,-4,5,1,8,-1,7,-1],[1,-10,-1,-8,10,-7,1,4,6,2,-5,-7,-10],[-3,10,2,10,-4,4,9,1,9,-5,1,-10,-5],[8,9,2,-5,-10,4,10,4,-1,7,6,1,8],[7,8,4,-3,6,-9,-8,9,-8,1,4,-4,3],[7,-5,9,-5,-1,-3,-4,-10,9,1,-1,8,2],[5,4,-7,-3,8,-2,6,-1,-10,7,9,9,3],[-10,3,4,-7,-5,9,-7,-9,-9,-4,6,-7,-3],[7,6,-1,3,-8,1,5,-2,-5,3,-9,1,-5],[7,-7,10,-4,6,-3,-1,-5,-10,10,7,2,1],[2,-7,6,3,-6,-9,-9,6,-5,-7,-9,3,9],[-5,7,4,-6,8,-5,-7,-4,-1,-3,-7,2,-9]],[[10,-10,-1,2,1,-9,7,10,10,2,4,-9,10],[3,1,-3,-5,10,8,-4,-7,5,-10,-5,2,4],[-1,-1,10,-1,10,-2,8,1,-3,4,-5,4,-6],[8,4,-2,-5,-6,-10,6,2,5,7,8,8,-1],[-3,-10,2,4,10,-3,-10,-9,-7,-10,-2,-8,8],[10,8,-1,-6,9,-9,-6,-3,-3,9,5,9,-4],[10,-10,8,6,-3,10,-10,-7,-3,7,5,1,5],[9,-9,5,-5,-10,6,2,3,-9,10,-1,3,1],[1,2,-5,-10,-6,-6,1,-5,-1,8,-6,8,-5],[8,-8,-5,-10,5,-10,2,9,6,-3,6,-5,-2],[1,6,1,-3,-5,-10,-5,-10,9,10,9,5,-6],[-8,5,-3,-9,2,5,9,-4,-4,-1,4,6,7],[10,7,-4,7,4,8,9,1,5,-5,-8,-8,5]],[[10,-7,-7,10,-3,9,-6,7,6,3,-1,9,9],[-5,8,-10,1,5,4,-2,-10,6,5,9,1,-1],[2,10,-9,10,-7,8,-2,8,10,5,-2,-5,6],[8,-8,2,3,1,7,1,-6,3,-4,5,10,6],[-1,-9,-7,-6,8,-2,2,-2,9,-4,-4,4,-8],[2,7,8,-8,-6,-5,-7,2,5,5,2,3,-10],[3,-5,-10,-8,4,6,-4,5,5,-4,3,9,-9],[3,-1,10,-6,-6,1,-5,10,7,4,-5,5,-5],[1,8,9,3,-4,-3,-8,-9,2,4,-9,-8,-2],[-1,-2,-5,2,-2,-5,-10,-8,1,3,4,6,-7],[-10,8,-8,9,9,3,-9,2,-10,3,7,-3,-4],[6,-9,-6,8,1,5,5,7,-5,5,-8,-2,-2],[-5,-1,-5,8,10,1,8,-3,3,6,10,-6,-1]],[[-9,-5,5,-7,8,3,-6,-2,2,-10,-4,5,-4],[-3,9,5,8,8,-2,10,-8,8,8,10,1,-3],[2,-6,2,-7,3,8,3,-5,-2,5,-9,-4,6],[-5,2,3,-7,-2,-10,1,-2,7,4,10,-8,-7],[-9,-2,-3,-1,6,-2,-5,-1,5,8,-10,3,-8],[1,10,-3,-9,6,-3,-8,3,1,6,2,-5,-9],[9,2,-8,3,2,-9,-4,-4,1,7,4,1,1],[1,8,-4,5,4,10,-1,5,3,2,8,1,-7],[-3,-5,6,2,-8,-8,-10,-6,2,-3,5,8,-5],[-3,2,-9,2,9,2,9,6,4,-2,8,-8,-10],[-9,4,-5,-8,7,-1,-3,-7,4,6,-7,-7,1],[-2,-6,-3,3,9,-4,-4,-6,2,-7,-4,-4,2],[1,10,-7,-10,-9,10,-10,-9,-5,7,-7,-9,-5]],[[7,3,3,-9,5,-9,8,8,9,4,4,10,9],[8,4,-2,7,10,-9,-4,4,-9,-1,-10,-7,-8],[-6,-4,-8,4,10,-4,-1,-6,5,5,5,-4,3],[9,-10,2,-7,-2,1,-6,-4,-7,-3,7,4,7],[-8,-10,-7,-10,7,-3,-10,-7,3,-1,2,-1,-10],[-4,10,6,4,-8,4,-8,-10,5,-7,3,8,4],[2,8,2,8,5,2,9,-2,6,4,-2,7,5],[-7,4,2,7,-7,4,-2,9,-10,-2,1,-6,-7],[6,-8,-4,4,8,-5,8,5,7,-10,-3,-3,5],[-4,-1,-9,-5,-9,-4,8,-9,-7,4,6,1,-6],[-6,-9,4,-4,-4,-3,-2,9,-5,5,1,10,6],[-7,-4,9,-3,-3,-2,4,-1,-7,1,-8,5,10],[-7,-9,8,10,-8,-4,-7,-10,5,7,10,3,-9]]], dtype = "uint8")#candidate|419|(14, 13, 13)|const|uint8
var_420 = relay.var("var_420", dtype = "uint8", shape = (14, 13, 13))#candidate|420|(14, 13, 13)|var|uint8
bop_421 = relay.right_shift(const_419.astype('uint8'), relay.reshape(var_420.astype('uint8'), relay.shape_of(const_419))) # shape=(14, 13, 13)
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
const_425 = relay.const([-7.299658,-1.621417,-8.118354,6.613797,2.252258,-6.348865,-1.800211,2.342675,9.600622,-5.088502,9.161962,-6.964557,2.643762,8.320193,-6.024377,8.391525,4.634165,9.324364,-2.767748,8.362604,2.525346,-4.358011,9.052413,-5.960851,5.905474,-2.938652,-5.668486,-9.673380,5.375958,-3.328704,0.714944,-0.743541,7.911876,-2.093664,-0.848605,-8.703708,-2.222495,-4.029400,-8.908308,-4.910357,1.002632,-2.742381,-9.747249,7.074918,-7.211336,0.537721,9.524525,-1.797562,0.086129,-8.386834,-3.079646,6.665737,-7.111981,0.541493,4.827346,-1.104900,-2.193569,-5.742372,4.208315,-6.478111,0.579631,-2.548262,1.622119,3.259347,7.919993,8.056246,-9.207732,-7.884402,-2.341829,9.274658,-2.702946,-6.927301,2.473379,5.814931,-5.185578,-6.602312,5.611755,-0.387013,-2.691486,-0.301512,4.014528,5.592326,-3.998856,-1.525895,3.160282,-0.668155,-1.324483,-4.259569,4.887751,-2.636661,4.254938,1.238307,1.216553,-1.889191,-9.745084,-7.379261,-6.785532,0.816556,2.705559,2.953268,-7.883351,-3.318985,-1.743966,-9.276863,-2.823733,2.471963,4.449269,3.759937,-3.393164,-8.834283,-3.728965,-3.367118,0.844450,6.662903,-5.634435,1.971977,3.340734,9.350970,3.005704,6.866660,-3.422651,9.363418,-0.108766,6.700738,-0.593242,8.171820,-9.705997,9.374856,4.602751,-9.213283,6.104798,-8.364296,-0.232653,-0.199713,7.548420,4.521292,-8.395069,-3.125398,4.678963,4.545522,3.054191,-0.812545,2.004144,2.567890,3.163417,-4.517390,-5.998369,3.291024,-8.510055,-8.070476,1.307967,0.760554,-3.525323,-0.353670,7.912759,-5.094744,-1.370717,-4.927310,-4.977072,6.263491,-0.972993,9.854225,-6.330130,6.789816,-7.035512,4.886813,4.005745,-9.215380,-9.471777,-5.518731,-1.053457,-5.262865,6.279926,-4.754988,8.868171,8.891297,2.233399,-1.243147,3.603719,-3.104917,1.690196,-8.964394,0.439904,-5.425968,0.784581,0.531630,2.399195,7.206417,2.406288,7.565146,6.382091,-8.174208,4.726212,-8.894248,-2.684098,-9.724174,-6.333598,-8.499034,6.816613,0.089533,3.642496,7.038507,6.378223,-3.827905,-7.342650,5.692023,-0.557821,7.847066,-4.032298,2.256795,-3.281900,-9.016707,-8.931136,-4.074618,4.438914,-2.834717,2.970897,-8.254889,-9.525255,2.869698,-3.820436,-3.172736,-8.783475,-0.345583,-2.835648,2.413667,2.481883,3.931542,-1.496457,-7.559106,-6.716279,0.300627,-9.137050,-5.637815,-6.623379,3.657402,-0.586806,9.521732,6.707395,0.427730,3.352043,7.245385,-4.980566,-0.986803,-3.420296,-5.491125,-8.126593,-9.747935,1.009960,7.350637,-8.001549,-2.355185,8.607607,4.521360,3.859211,-9.254152,8.833750,-5.830028,-9.657581,6.870217,2.097096,3.246483,2.129069,-2.853038,-0.344205,-1.285344,-9.890511,9.254902,-4.814515,9.425033,0.436199,2.142977,0.147482,-0.477550,-9.529591,-7.784218,-9.350376,1.088618,-3.953389,-5.771861,-3.580670,5.049182,-4.900588,-5.410622,-5.596212,-2.115522,0.640542,-5.709634,5.767201,-0.134971,-4.695873,1.971366,9.796084,-4.880161,-7.732064,-8.796722,9.195060,-0.244120,6.986450,1.811721,-3.505064,8.500742,3.169750,-1.292171,3.386391,-6.504103,1.443682,-3.674965,7.960700,-9.672609,4.713736,-1.783765,6.050687,-6.113780,8.017373,-7.731618,-4.184360,2.134555,1.118101,-5.591644,-1.136722,8.509161,4.254814,-2.985013,-3.603631,-8.921521,-8.132247,0.265165,3.269805,-1.404472,1.233392,-1.980307,-3.925330,0.922551,9.227627,-0.091024,-6.117794,-9.694268,4.024625,-3.098587,2.116264,-7.274295,3.321193,8.269973,9.691938,0.237745,-4.339895,-2.685732,1.734294,4.516548,-5.118267,2.244351,5.280900,-6.777308,-6.544929,-4.492239,1.157955,6.184776,-4.563350,-9.332952,-3.301530,-8.713968,6.382281,-3.682078,-6.447931,-7.376672,9.809060,-4.145256,9.258576,-7.126656,6.483400,1.274466,7.323610,-8.405162,-4.324054,2.606523,-4.091313,0.010275,3.063683,1.518089,5.681880,-3.257005,9.908527,1.421387,1.948076,-3.253324,5.405059,8.746423,1.063899,-9.617644,-8.709739,-1.028733,-1.641987,1.274662,7.114151,6.328964,-2.402989,-7.067330,-6.685799,-6.849740,9.108400,8.215420,-4.059441,2.820403,-1.535306,9.195926,7.964705,1.466219,-1.524882,2.985356,8.722116,-6.204226,-4.654830,3.677278,2.358555,-3.495510,1.511312,8.458234,6.025522,3.377716,-5.820410,-1.674561,-5.773166,7.701722,-4.244231,8.499483,-5.162534,5.850586,-0.816480,7.584293,-5.046891,-9.968740,9.532202,-9.241699,-1.278778,-6.193335,-8.769005,-9.779985,3.660026,9.898169,0.631093,9.594627,1.365534,-7.988098,-6.458420,8.229424,-9.938296,-6.144487,1.115116,-1.011103,-1.012979,-9.541947,3.414589,9.265381,4.211941,1.801746,8.179931,-7.713010,3.219137,-8.430181,-8.615952,4.721866,2.748487,2.703252,-0.266130,-7.332124,-8.438018,8.089284,-7.683195,-8.257751,-4.819654,-9.648181,2.821052,-4.917400,3.917965,-1.154767,-4.340182,-4.537863,3.403716,-8.772828,2.703185,-0.853987,9.089257,-6.391177,-6.426045,4.573984,-8.124445,3.798875,-0.864687,-9.241702,-2.749828,-0.026108,-6.988417,1.215216,-0.087952,3.563730,-9.805214,2.499712,-3.844807,6.608035,2.238990,1.184687,-6.961338,6.871802,-3.597731,0.366796,-8.511123,7.164863,-8.611311,-2.113333,-1.094438,4.760550,7.451962,-3.334754,-0.368208,-6.671458,4.631156,3.472894,-8.729742,-9.668271], dtype = "float32")#candidate|425|(520,)|const|float32
call_424 = relay.TupleGetItem(func_102_call(relay.reshape(const_425.astype('float32'), [8, 13, 5])), 2)
call_426 = relay.TupleGetItem(func_105_call(relay.reshape(const_425.astype('float32'), [8, 13, 5])), 2)
output = relay.Tuple([bop_421,call_424,const_425,])
output2 = relay.Tuple([bop_421,call_426,const_425,])
func_431 = relay.Function([var_420,], output)
mod['func_431'] = func_431
mod = relay.transform.InferType()(mod)
var_432 = relay.var("var_432", dtype = "uint8", shape = (14, 13, 13))#candidate|432|(14, 13, 13)|var|uint8
output = func_431(var_432)
func_433 = relay.Function([var_432], output)
mutated_mod['func_433'] = func_433
mutated_mod = relay.transform.InferType()(mutated_mod)
var_586 = relay.var("var_586", dtype = "float64", shape = (8, 4, 1))#candidate|586|(8, 4, 1)|var|float64
uop_587 = relay.atanh(var_586.astype('float64')) # shape=(8, 4, 1)
output = relay.Tuple([uop_587,])
output2 = relay.Tuple([uop_587,])
func_591 = relay.Function([var_586,], output)
mod['func_591'] = func_591
mod = relay.transform.InferType()(mod)
var_592 = relay.var("var_592", dtype = "float64", shape = (8, 4, 1))#candidate|592|(8, 4, 1)|var|float64
output = func_591(var_592)
func_593 = relay.Function([var_592], output)
mutated_mod['func_593'] = func_593
mutated_mod = relay.transform.InferType()(mutated_mod)
var_598 = relay.var("var_598", dtype = "float64", shape = (8, 4, 1))#candidate|598|(8, 4, 1)|var|float64
uop_599 = relay.sin(var_598.astype('float64')) # shape=(8, 4, 1)
var_605 = relay.var("var_605", dtype = "float64", shape = (8, 4, 8))#candidate|605|(8, 4, 8)|var|float64
bop_606 = relay.logical_or(var_598.astype('bool'), var_605.astype('bool')) # shape=(8, 4, 8)
uop_613 = relay.asin(uop_599.astype('float32')) # shape=(8, 4, 1)
output = relay.Tuple([bop_606,uop_613,])
output2 = relay.Tuple([bop_606,uop_613,])
func_638 = relay.Function([var_598,var_605,], output)
mod['func_638'] = func_638
mod = relay.transform.InferType()(mod)
mutated_mod['func_638'] = func_638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_638_call = mutated_mod.get_global_var('func_638')
var_640 = relay.var("var_640", dtype = "float64", shape = (8, 4, 1))#candidate|640|(8, 4, 1)|var|float64
var_641 = relay.var("var_641", dtype = "float64", shape = (8, 4, 8))#candidate|641|(8, 4, 8)|var|float64
call_639 = func_638_call(var_640,var_641,)
output = call_639
func_642 = relay.Function([var_640,var_641,], output)
mutated_mod['func_642'] = func_642
mutated_mod = relay.transform.InferType()(mutated_mod)
var_774 = relay.var("var_774", dtype = "int8", shape = (4, 7, 5))#candidate|774|(4, 7, 5)|var|int8
var_775 = relay.var("var_775", dtype = "int8", shape = (4, 7, 5))#candidate|775|(4, 7, 5)|var|int8
bop_776 = relay.logical_xor(var_774.astype('int8'), relay.reshape(var_775.astype('int8'), relay.shape_of(var_774))) # shape=(4, 7, 5)
output = relay.Tuple([bop_776,])
output2 = relay.Tuple([bop_776,])
func_782 = relay.Function([var_774,var_775,], output)
mod['func_782'] = func_782
mod = relay.transform.InferType()(mod)
var_783 = relay.var("var_783", dtype = "int8", shape = (4, 7, 5))#candidate|783|(4, 7, 5)|var|int8
var_784 = relay.var("var_784", dtype = "int8", shape = (4, 7, 5))#candidate|784|(4, 7, 5)|var|int8
output = func_782(var_783,var_784,)
func_785 = relay.Function([var_783,var_784,], output)
mutated_mod['func_785'] = func_785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_830 = relay.var("var_830", dtype = "float64", shape = (9, 12, 8))#candidate|830|(9, 12, 8)|var|float64
const_831 = relay.const([[[3.320457,3.791551,7.588046,-9.460594,-3.793324,1.251721,8.765741,-8.860969],[8.312906,7.357195,6.632742,6.294875,6.515301,-0.736426,5.050526,-9.335020],[-7.181141,-1.711913,-4.743028,-4.811617,0.022079,0.020074,2.666944,-9.033958],[2.093325,-9.356695,0.026916,-3.120355,-3.645647,-8.939975,5.660130,-7.274561],[-1.782395,8.375703,-8.790955,-4.618819,2.349958,-9.116791,0.711289,8.310820],[-4.982561,-4.601040,-4.349924,-5.684173,7.685898,-2.333604,-3.145968,-1.255516],[8.950934,1.112378,4.697607,1.101063,-2.364902,3.091058,1.137057,-5.866811],[2.100602,2.528931,-2.876181,-0.751388,-8.283600,-3.983494,2.586376,3.899361],[-1.322033,-7.046210,-2.454555,-2.549131,-0.526810,5.597241,-0.472370,0.797268],[-5.664097,6.890045,0.914070,-7.897888,-8.077649,-1.054127,-4.942283,0.001124],[-2.049960,-2.426489,8.954578,6.862677,3.321965,7.332247,8.424056,7.289170],[6.811775,-8.267191,-3.911832,-1.833181,0.976891,-1.645359,9.606795,-1.340159]],[[-0.225582,-2.389087,7.322927,2.121064,-5.577058,-7.185540,3.776081,7.873211],[9.193102,6.371700,6.226780,-1.362879,-9.323133,-5.264600,-0.670531,-3.469518],[3.469269,4.988441,-3.723135,9.558803,8.231937,-5.372302,5.065124,-9.533343],[8.660650,-5.337994,3.866439,5.955420,-3.888671,9.387702,-5.723792,7.911662],[5.573863,-3.555232,3.159153,-1.091982,-1.575912,3.269902,3.542462,-7.086514],[-8.897315,5.205047,8.166058,3.373571,-5.644651,3.895934,-4.455406,-3.241500],[4.840490,-2.904474,0.306485,4.870406,8.390618,7.639863,-8.438811,-0.592795],[8.148212,7.183968,-5.894787,-6.939268,3.523235,-6.101889,-6.371345,8.485530],[7.472020,-3.385452,3.768613,-8.606826,-0.830754,0.461588,5.237683,3.126481],[8.231202,-0.588015,-9.716058,-9.544156,-3.605100,7.481917,6.827150,-4.259297],[-4.505335,1.833846,-2.874742,4.340299,-1.209453,-3.678835,-5.422691,-5.357272],[-9.023956,9.927064,9.912396,-0.308144,-7.387088,-1.566424,9.141008,5.815239]],[[0.627067,8.146152,-9.181940,-8.342970,5.677433,4.510115,8.937764,0.559722],[-9.862408,-5.298893,-5.865959,4.497650,-4.873872,-1.227373,-8.240922,-4.094212],[1.738506,3.008995,-1.813364,-2.128204,-7.788108,5.863327,4.113402,6.577970],[7.900564,4.316181,4.711874,3.463564,-5.207648,6.248206,5.174815,-3.175433],[0.181092,-5.567136,7.880776,0.932703,-1.753579,7.313026,9.318237,8.421978],[-8.524049,-1.022132,3.317683,-9.518233,8.835094,-7.952129,3.828091,5.402930],[1.417697,-6.920437,-0.085509,-0.729606,-1.949596,-9.647655,6.732916,-0.310249],[-3.774820,9.517535,-2.853393,0.022024,7.867958,-7.872471,-6.086226,3.918134],[-3.094505,6.778573,6.133344,9.818087,4.884366,6.527589,-6.575597,9.781737],[-5.661211,-9.811635,-2.770620,-8.339208,-3.307982,-2.626993,2.500338,-4.694911],[1.596913,-4.258488,5.853053,-3.819516,-1.649904,1.405488,8.285686,4.884834],[6.912268,0.146905,-9.963305,7.585890,-7.771048,8.100422,5.372857,4.752167]],[[7.686553,3.729668,-8.719194,-6.847466,6.727205,3.516233,-0.750207,-6.763878],[-1.677562,4.223965,-2.970615,3.180185,-1.330259,-7.294258,-4.454963,-2.885776],[7.397671,4.292774,9.089029,-1.696669,2.944556,5.865397,1.900194,-4.788736],[6.573727,-5.340276,-7.638508,6.918533,-6.475439,0.754521,0.309956,1.796617],[5.574461,-2.126863,-2.639655,-8.531305,-0.819563,2.290180,7.726724,-6.858653],[0.262907,-2.778342,-3.942505,-7.024094,0.510646,-0.717604,0.661521,-7.896692],[-0.607386,9.455885,2.481560,-6.566049,1.606228,1.649161,0.949885,-6.175709],[-9.650067,8.177187,-1.387597,-4.242374,5.066294,-0.057098,-0.729766,2.082666],[-1.629378,0.850862,-6.898734,6.846479,6.275320,2.180361,-1.404762,6.372420],[-6.810458,-9.184308,-1.958788,3.150558,0.266501,-3.895243,-1.472904,-9.509038],[-8.674397,-3.376244,0.865483,-4.869557,1.066002,-8.391350,7.035463,-7.789475],[-1.406022,-5.088072,8.118368,-9.142624,-0.512785,-6.043312,-0.289927,4.233336]],[[-1.621549,-0.072430,9.271088,-3.941828,-6.194305,0.680556,-7.902423,6.396250],[-1.232473,0.887113,7.348584,-9.870983,-0.311658,-2.005301,8.042683,7.390157],[-9.419756,3.811242,0.292013,-0.394992,-3.121648,9.796037,2.148668,2.066715],[6.315981,-0.889194,-2.683611,-4.695331,7.061805,-5.981136,-8.647479,2.037573],[4.583279,-4.476326,-5.124945,-6.068041,-2.375589,-5.361694,-5.738492,3.255931],[-7.348470,4.704973,-0.502904,-5.808392,-7.600062,-3.429399,-6.985915,1.783288],[4.045614,-1.258743,-7.313637,-6.530506,4.870286,3.578424,3.184200,4.093903],[-1.794174,-7.834633,-1.640825,-4.841906,3.169980,1.038150,-7.301541,8.408254],[-3.254624,-1.159869,-4.285936,-7.448123,5.550665,-7.343418,-2.850562,-4.102447],[-6.494277,-1.679311,8.204537,1.123438,9.497772,2.933599,-4.149966,2.318862],[-0.919821,0.857798,4.694967,-0.724938,0.638324,2.309708,-3.923627,-1.848657],[-7.017227,7.020959,-4.188582,2.193445,9.932113,6.472577,4.607507,5.202110]],[[-3.260183,6.247028,-4.292707,-6.312199,-2.253636,6.592929,-4.324468,7.064858],[-4.259554,-9.948975,4.647555,4.970951,-3.678999,-9.561000,2.585295,-3.787372],[2.392319,1.883078,6.046510,4.142309,7.808856,9.735779,2.486656,3.027026],[5.165593,-9.790865,9.369999,-0.097916,-2.440849,3.316594,-5.861968,-5.934181],[4.513245,2.223129,4.223352,-5.579730,4.181256,-4.696845,-0.828774,7.230396],[-8.707860,5.734885,1.244316,5.046281,-4.100492,6.222562,-1.631873,-5.603457],[-4.309649,2.008716,3.458538,-5.009508,5.394205,2.630179,-1.446980,3.047628],[-2.217394,-1.328299,-4.427447,5.347661,3.771047,5.358028,-6.000344,5.547930],[6.505615,1.603645,0.313393,-0.879473,-5.907982,-3.029799,-5.237090,2.315255],[-1.595340,-2.111692,-1.619307,-6.947025,-2.221257,1.161343,1.667646,6.943035],[3.620738,2.140271,2.239757,7.426016,3.748583,-3.038031,-3.994345,-7.224255],[-0.210207,9.534706,1.123731,-4.732631,-6.061234,-9.863305,-2.804798,-6.338876]],[[-4.927173,-0.159967,8.616752,-6.075722,-3.915258,-9.874556,-3.348205,1.956462],[9.607480,9.320037,-7.070314,0.479596,-6.611550,1.202330,2.569922,-6.867842],[1.097699,1.084946,8.094250,-5.145730,0.685422,-1.799204,4.102186,-5.430595],[-8.289560,6.704145,7.384680,1.451382,3.707287,-1.087956,4.899964,-5.623633],[-2.529205,2.398097,8.265157,6.742081,0.093562,6.391262,1.824245,1.419719],[4.493471,5.427682,3.718786,-0.271532,4.488978,-7.657375,-5.739566,6.128736],[-2.281996,-3.057467,-1.149116,-8.774219,6.425417,6.559880,2.362786,-9.671265],[7.429338,4.284711,1.210413,5.395973,3.529685,5.723176,1.224880,-5.883705],[8.734383,9.628383,-8.764311,6.707863,7.726917,-5.652895,-6.310837,-5.875701],[-9.708997,-2.717973,4.351702,-3.353423,8.868093,-6.362452,6.494359,7.174623],[8.692749,-7.211974,-4.288478,8.585184,-0.952704,8.038865,9.714494,7.415125],[4.199847,1.209607,7.904422,7.811081,1.625459,8.996585,-6.361205,3.713319]],[[-0.727103,2.555735,-3.877602,-3.631581,7.851305,6.085999,7.284183,-9.027337],[-0.030056,-0.013985,-2.998895,9.098194,4.435771,-9.336108,7.954085,-7.531097],[2.268326,-5.016642,-9.702509,4.500184,-8.310749,-1.840468,8.756557,1.243985],[-0.215494,1.162218,6.454321,-2.072899,-7.389225,2.787715,5.452689,3.281483],[4.282237,-7.869753,-1.256548,5.357129,-0.053721,9.484855,3.281217,5.340605],[-3.109222,-6.417369,5.078702,-9.868858,7.541387,0.501147,5.059496,2.510743],[4.499809,0.545633,5.630709,-1.469280,-6.678842,2.574144,-6.344740,-1.549483],[-9.494574,7.672690,4.781452,0.134920,5.989431,1.526668,8.292774,8.982664],[-5.541133,-3.018784,-2.378170,9.232742,-1.665161,-9.259019,-2.787779,4.113358],[0.895827,-2.248060,5.280392,0.996767,9.314748,8.730257,6.028724,9.179886],[6.288838,-7.890875,-0.713609,0.485039,-9.108663,-3.818939,-9.903390,3.818513],[-4.526131,-8.615770,2.379358,-4.018265,8.064904,1.834452,-8.381020,-9.277749]],[[0.402212,3.551523,7.529001,-3.279450,-3.328477,-2.269237,0.681212,-8.335038],[0.496480,9.485291,-7.372299,5.549909,2.728770,4.658053,1.761424,-9.842328],[-6.802259,2.856438,-6.355278,1.626859,-7.206375,2.943317,-6.893321,1.180816],[-0.512546,-8.011841,-2.870810,-0.489829,8.467764,5.915875,-1.951797,7.604052],[-0.972223,-9.455757,-8.140885,7.107939,3.827171,-9.126571,1.766153,3.011028],[-7.647701,-5.601284,-2.818622,5.387457,-4.341866,-8.975715,-8.551860,7.512252],[-9.426501,0.412958,-5.594178,0.987824,3.405544,1.378029,1.033067,-6.896838],[-5.049739,-3.129600,-4.350829,-1.160590,5.962423,5.936650,-7.851780,-7.060778],[-5.495315,-0.421886,-8.944021,-4.024070,1.824128,-9.574593,-9.526935,1.954225],[-1.953534,5.440978,3.470964,5.828517,0.859005,-7.254720,-1.770888,-6.507907],[-0.889387,7.826183,2.957994,-7.796437,2.636032,3.298259,8.840370,-5.167402],[1.403394,-0.635050,-6.038935,4.498740,-3.782013,5.080632,-7.454359,0.091796]]], dtype = "float64")#candidate|831|(9, 12, 8)|const|float64
bop_832 = relay.mod(var_830.astype('float64'), relay.reshape(const_831.astype('float64'), relay.shape_of(var_830))) # shape=(9, 12, 8)
output = bop_832
output2 = bop_832
func_838 = relay.Function([var_830,], output)
mod['func_838'] = func_838
mod = relay.transform.InferType()(mod)
var_839 = relay.var("var_839", dtype = "float64", shape = (9, 12, 8))#candidate|839|(9, 12, 8)|var|float64
output = func_838(var_839)
func_840 = relay.Function([var_839], output)
mutated_mod['func_840'] = func_840
mutated_mod = relay.transform.InferType()(mutated_mod)
var_847 = relay.var("var_847", dtype = "uint16", shape = (5, 11, 12))#candidate|847|(5, 11, 12)|var|uint16
var_848 = relay.var("var_848", dtype = "uint16", shape = (5, 11, 12))#candidate|848|(5, 11, 12)|var|uint16
bop_849 = relay.logical_xor(var_847.astype('uint16'), relay.reshape(var_848.astype('uint16'), relay.shape_of(var_847))) # shape=(5, 11, 12)
bop_859 = relay.right_shift(var_847.astype('int8'), relay.reshape(var_848.astype('int8'), relay.shape_of(var_847))) # shape=(5, 11, 12)
const_862 = relay.const([[[-8,-8,-9,7,-7,-9,-5,1,6,-5,-8,-10],[2,-6,2,8,10,-1,2,-1,8,-10,-2,7],[8,2,3,-9,-5,-9,-8,-9,3,-9,9,4],[9,-10,-4,-10,9,10,-4,-6,2,6,-2,-2],[4,-2,3,-10,-1,-3,9,9,7,-1,10,2],[3,-4,2,4,1,-8,-3,7,1,8,5,-8],[-9,-5,-6,-1,-4,8,4,3,7,10,-2,-1],[-8,2,8,-6,-7,-8,-10,4,7,-2,-1,6],[10,7,2,-6,-8,-4,6,-3,-2,8,1,6],[3,9,-4,-1,1,-8,-5,-3,-3,-9,-6,-4],[5,-10,5,6,-3,3,10,-6,3,5,-8,-2]],[[5,2,6,-10,9,9,6,-3,10,8,9,10],[8,9,-4,-1,-2,2,10,-9,4,4,-1,10],[-2,-1,4,10,-9,-10,-1,5,3,-9,9,-3],[-6,-4,-3,-10,5,-5,-5,1,-5,10,-3,9],[-10,8,-6,6,-7,1,-5,4,-4,-6,-3,4],[9,3,-9,-9,-1,-10,-7,1,7,3,-2,-1],[-5,7,6,-7,-5,9,5,3,-5,4,-1,8],[-6,-9,10,-7,7,-5,5,-9,4,-4,-6,-6],[-2,-4,5,3,3,-2,-4,-9,2,5,8,8],[4,3,-1,-10,1,-7,4,-8,4,9,8,8],[-2,9,-6,3,1,9,-7,8,-1,-4,5,-3]],[[1,-6,1,-1,4,4,9,10,-5,3,-8,-2],[5,5,8,-10,1,8,-7,-5,-8,-3,-8,6],[-3,-9,-1,-1,7,-6,-5,5,-10,6,-3,10],[-1,10,-9,-5,9,-5,-7,5,-2,10,-9,3],[-10,-9,-1,-8,-6,-6,-7,9,-6,-6,-1,-6],[4,-2,3,-2,-6,7,4,4,4,-4,2,6],[-8,-1,-5,-5,3,4,5,-8,-9,-2,10,2],[5,-4,-9,-5,7,9,-10,-1,-6,-8,10,-3],[3,-1,-1,-7,-9,1,3,9,1,2,-4,6],[-7,-10,4,-10,-9,8,-6,-6,5,-4,-5,-10],[1,-10,4,-5,-2,-2,10,-3,-2,9,-5,-2]],[[-2,1,-1,4,3,-9,9,2,10,-10,-5,-9],[4,-5,-3,-1,5,-4,3,8,-1,-4,10,-6],[9,1,8,3,10,-1,6,9,4,-10,1,-2],[5,-5,-4,-7,6,9,10,6,-1,-4,-8,10],[8,8,10,-2,-8,1,-7,-4,-10,6,6,-1],[-8,-4,10,6,-6,9,-4,2,-9,3,3,8],[-2,-3,-6,-5,-9,-9,-5,-9,1,8,9,9],[-2,4,2,9,8,-4,4,1,8,-6,-6,5],[-3,3,2,-1,-6,2,-9,-6,10,-5,9,2],[5,2,3,1,2,-1,7,1,-7,3,-3,-6],[9,9,-9,-7,9,8,-1,-9,4,-9,1,6]],[[4,-7,8,-10,-7,9,8,-10,9,8,-6,3],[8,-1,-4,7,6,-3,-9,5,1,-10,2,-5],[-8,9,1,-6,-3,-8,-3,3,10,6,-10,-3],[-7,-10,-5,-7,10,-8,9,-2,10,7,4,5],[-9,-3,-1,2,1,6,10,8,-1,-1,-10,-3],[2,6,-4,-1,-1,4,1,2,9,-8,3,-9],[2,-5,4,5,-9,-1,1,6,6,-5,-7,1],[-5,2,-6,-2,-2,3,8,9,8,-2,4,10],[-9,7,4,-1,6,6,-6,-2,-9,4,2,7],[-5,-8,7,7,7,-4,-3,-7,-10,-2,-5,-5],[-7,2,-2,9,5,6,-9,2,6,-4,-2,-9]]], dtype = "int8")#candidate|862|(5, 11, 12)|const|int8
bop_863 = relay.floor_mod(bop_859.astype('float64'), relay.reshape(const_862.astype('float64'), relay.shape_of(bop_859))) # shape=(5, 11, 12)
output = relay.Tuple([bop_849,bop_863,])
output2 = relay.Tuple([bop_849,bop_863,])
func_882 = relay.Function([var_847,var_848,], output)
mod['func_882'] = func_882
mod = relay.transform.InferType()(mod)
mutated_mod['func_882'] = func_882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_882_call = mutated_mod.get_global_var('func_882')
var_884 = relay.var("var_884", dtype = "uint16", shape = (5, 11, 12))#candidate|884|(5, 11, 12)|var|uint16
var_885 = relay.var("var_885", dtype = "uint16", shape = (5, 11, 12))#candidate|885|(5, 11, 12)|var|uint16
call_883 = func_882_call(var_884,var_885,)
output = call_883
func_886 = relay.Function([var_884,var_885,], output)
mutated_mod['func_886'] = func_886
mutated_mod = relay.transform.InferType()(mutated_mod)
var_957 = relay.var("var_957", dtype = "float32", shape = (8, 13, 6))#candidate|957|(8, 13, 6)|var|float32
uop_958 = relay.log10(var_957.astype('float32')) # shape=(8, 13, 6)
func_838_call = mod.get_global_var('func_838')
func_840_call = mutated_mod.get_global_var('func_840')
var_979 = relay.var("var_979", dtype = "float64", shape = (864,))#candidate|979|(864,)|var|float64
call_978 = func_838_call(relay.reshape(var_979.astype('float64'), [9, 12, 8]))
call_980 = func_838_call(relay.reshape(var_979.astype('float64'), [9, 12, 8]))
uop_1016 = relay.cos(uop_958.astype('float32')) # shape=(8, 13, 6)
output = relay.Tuple([call_978,var_979,uop_1016,])
output2 = relay.Tuple([call_980,var_979,uop_1016,])
func_1033 = relay.Function([var_957,var_979,], output)
mod['func_1033'] = func_1033
mod = relay.transform.InferType()(mod)
mutated_mod['func_1033'] = func_1033
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1033_call = mutated_mod.get_global_var('func_1033')
var_1035 = relay.var("var_1035", dtype = "float32", shape = (8, 13, 6))#candidate|1035|(8, 13, 6)|var|float32
var_1036 = relay.var("var_1036", dtype = "float64", shape = (864,))#candidate|1036|(864,)|var|float64
call_1034 = func_1033_call(var_1035,var_1036,)
output = call_1034
func_1037 = relay.Function([var_1035,var_1036,], output)
mutated_mod['func_1037'] = func_1037
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1155 = relay.const([[[-2,-10,-1,-6,5,-5],[8,2,2,-6,-4,3],[-2,9,-7,-7,-1,9],[-4,-5,10,-1,-9,-10],[5,-9,7,-2,-8,-8],[7,4,-2,10,-10,4],[6,-8,8,-8,-6,-1],[1,-1,6,4,3,-1],[-10,1,-5,-10,10,-6],[6,3,-10,-2,-8,10],[2,-7,-1,-2,-7,-1],[-7,3,-10,8,-10,-7],[-5,-1,-4,9,4,-3],[-4,6,-9,6,-9,-5]],[[-6,5,6,-6,1,-6],[-8,-2,-2,-7,-1,10],[3,6,-2,3,8,6],[9,6,9,6,-6,-10],[-3,-7,-4,-4,10,9],[3,-2,9,6,9,-10],[2,6,2,10,-4,2],[1,-5,8,-7,-5,1],[-8,-1,-8,5,-5,-10],[8,-6,5,10,-4,1],[8,-2,-6,6,1,-8],[8,-9,-4,-4,8,-5],[-6,3,2,1,-9,-5],[-7,8,10,-6,-9,3]],[[-3,8,-7,-6,-1,-4],[-2,-5,9,5,-2,-5],[-9,3,6,-3,-5,10],[-5,-4,7,9,4,-8],[5,10,-6,-2,-5,-3],[2,-8,9,8,6,10],[1,-1,-5,-7,-4,-2],[1,-3,10,7,-2,-1],[-5,-4,-3,4,-8,-7],[6,5,-1,10,10,10],[9,-4,-2,-3,3,8],[4,8,-9,-4,10,-6],[-8,-7,-8,-10,4,-10],[-8,5,-10,5,-7,5]],[[1,2,9,-4,-2,7],[8,9,-1,8,1,9],[6,-5,-1,10,8,-1],[10,5,-6,4,-10,-6],[1,10,-7,3,-5,8],[-9,-5,-10,7,4,2],[4,6,8,-7,-7,-2],[6,-10,6,-4,-8,-3],[7,-8,1,3,-5,-1],[4,-3,5,-7,-5,-9],[-7,-7,3,-3,9,1],[1,-5,-6,1,-6,-3],[2,-1,1,7,6,4],[5,10,-9,3,-7,-6]],[[7,-5,2,6,-9,10],[-9,-9,4,-4,1,10],[-5,9,1,8,-3,-1],[-2,10,5,3,-8,1],[-6,-10,9,4,-2,9],[-8,-1,2,5,-10,7],[-4,9,5,-5,-5,7],[-4,-9,5,10,-4,4],[7,-10,-4,-4,9,4],[5,6,-4,-3,5,-7],[-1,4,9,3,-9,5],[-2,-6,2,7,-9,5],[-8,-6,-4,5,-9,3],[9,8,-9,-5,-9,3]],[[1,7,5,-5,-4,-7],[-3,4,-3,4,10,-2],[-2,-9,-6,-2,-2,-8],[5,-1,-4,7,-3,9],[-9,8,2,10,6,7],[-4,10,-8,-5,2,1],[-6,-3,-3,-7,-7,2],[6,5,3,-6,1,-3],[4,3,5,4,-6,2],[-1,-10,5,-10,-5,-3],[-9,5,4,-8,-5,-4],[6,-2,5,10,5,6],[5,1,3,8,2,9],[-1,-2,-9,-7,-6,-7]],[[-4,-9,-10,-9,3,5],[-3,-5,6,10,-4,-4],[-1,-7,-9,-10,-3,10],[-3,6,-8,-1,4,7],[-1,-7,-9,7,-9,9],[-9,1,-5,5,1,-4],[-2,9,1,4,-2,9],[2,-1,10,-9,8,-1],[2,-1,-7,1,1,3],[-7,-8,-10,10,10,-2],[-3,9,2,4,-6,-6],[-1,-2,8,-8,4,4],[2,-5,7,-3,8,-2],[2,6,-1,10,-9,8]],[[-8,2,4,-8,-10,-9],[10,-7,-1,-1,-5,2],[-9,-1,7,-8,6,8],[6,6,-9,-4,4,7],[2,-10,-5,4,7,2],[5,-8,10,2,-4,-3],[-1,1,-10,-3,-6,-1],[9,3,-1,9,-7,-10],[5,-4,-10,1,5,9],[8,-8,-8,5,6,-3],[-5,4,9,10,6,2],[-2,-7,5,-2,9,9],[-1,-5,4,-4,8,2],[4,3,5,-5,-8,-4]],[[10,8,-10,-7,1,9],[-1,6,-5,-9,10,8],[-7,4,5,8,6,5],[5,10,-5,3,4,-5],[8,5,-6,-5,5,-10],[-9,-8,-6,-2,6,-9],[3,-8,1,-3,9,-1],[2,-10,7,-1,-10,-3],[1,-7,9,9,8,-6],[-3,2,-10,9,-10,1],[10,-4,-1,7,4,9],[2,5,5,10,2,-2],[-4,-6,-1,-2,9,1],[4,-1,4,4,-10,-7]],[[-10,-5,-1,-7,-7,1],[-10,-10,10,-10,-1,-5],[-5,-2,-7,1,8,-2],[-4,-3,-1,-2,-7,1],[-4,-6,-4,-10,9,3],[3,-5,-4,9,7,-1],[-8,9,-5,-5,-3,-2],[3,5,5,9,-4,8],[-3,-5,1,-7,1,4],[-8,3,-1,8,8,-7],[-1,-1,-1,2,8,-4],[-5,5,9,-2,-2,8],[-1,-9,-8,-3,3,6],[5,-9,7,-1,2,-10]],[[7,8,10,-5,10,1],[-2,-1,-10,-8,6,7],[1,-10,4,-6,6,2],[-9,7,3,-1,2,-8],[8,-7,-5,2,10,1],[-3,-5,-2,-3,4,-2],[7,9,-5,2,-7,2],[1,10,-5,5,9,-7],[7,-1,1,7,7,7],[-7,9,-10,-7,-4,-4],[9,7,1,10,5,10],[-5,3,-7,5,-1,-7],[5,4,3,10,-9,-2],[2,-10,-3,10,9,9]],[[-4,-1,1,6,4,-7],[7,-8,4,-7,-2,-3],[9,-3,9,-6,10,-9],[-5,-9,6,5,5,10],[-3,-8,-5,-2,-8,-3],[-8,-1,-8,9,7,2],[8,-7,-1,4,3,3],[-7,-2,-9,-2,-6,5],[-5,-9,6,6,-1,9],[-9,7,7,9,6,-8],[6,4,-5,6,-5,2],[8,-7,10,-10,9,8],[1,1,-7,-2,9,5],[-5,3,9,5,-3,6]],[[-8,-10,-6,-4,-6,-4],[-2,-7,2,-6,-6,1],[4,1,-6,-9,-5,-1],[7,-8,8,7,-8,-4],[8,-9,9,-10,-4,8],[-9,-6,8,-5,-3,-10],[-7,-3,-3,7,-7,6],[6,6,-6,-4,5,-7],[-7,10,7,1,6,1],[10,-1,-4,-10,-10,2],[5,10,6,-3,-2,-3],[2,5,7,-7,1,6],[2,8,4,-9,8,1],[9,-6,-6,1,2,-5]],[[-1,-8,10,-10,9,8],[9,-4,-7,10,-8,8],[-3,3,-7,4,5,-2],[5,-9,1,-8,5,7],[7,-9,-2,-1,7,2],[-6,-4,10,6,-8,-8],[2,-9,-7,2,-4,1],[9,-4,-7,2,5,-2],[2,10,3,-10,5,-6],[8,8,-9,9,-10,4],[-9,1,-4,9,-9,7],[1,8,1,-10,-2,-2],[-9,8,-3,-9,1,-6],[-10,-3,8,-2,-9,2]],[[-6,8,3,6,-10,3],[9,6,9,6,-9,-2],[-9,3,-7,-8,9,1],[-8,6,-3,9,-9,3],[7,1,8,-10,-8,-3],[-9,-7,8,10,7,2],[-5,4,-8,-3,-8,-2],[6,1,6,-8,-6,-3],[5,10,1,3,-7,-7],[-8,1,-5,-2,4,4],[9,4,8,-2,3,6],[4,-8,-10,5,9,4],[10,6,9,-5,-3,6],[8,-6,-9,-5,-6,3]]], dtype = "uint16")#candidate|1155|(15, 14, 6)|const|uint16
const_1156 = relay.const([[[-9,10,-9,4,-10,-6],[2,-3,2,-1,2,6],[-9,-2,4,4,6,-9],[9,-2,4,-9,3,-9],[1,3,3,1,2,4],[-5,-9,-2,-7,-4,1],[-5,4,-6,5,3,1],[9,-8,7,5,10,-2],[-2,7,-8,-4,1,-2],[-1,6,-5,1,-1,3],[3,-2,3,7,-3,-1],[-5,3,-3,6,-2,-7],[1,10,-9,2,2,6],[7,3,10,-10,-9,2]],[[8,5,10,8,3,3],[-3,-5,8,2,-9,-3],[9,5,-6,1,4,-5],[-9,6,-3,6,-4,10],[-4,-7,-9,3,6,7],[4,-8,-3,3,-8,-6],[7,-6,10,-5,10,9],[-2,7,-8,-2,2,3],[2,7,-4,-10,4,-4],[-4,1,10,-3,-10,-2],[5,-3,1,2,3,-5],[4,-9,-3,-3,1,3],[5,6,8,-6,-10,-2],[6,-6,7,5,9,10]],[[-9,3,10,-3,-1,8],[7,-4,4,7,4,-8],[-7,2,9,1,6,9],[-7,-9,-3,10,3,-6],[4,7,-9,6,-10,-3],[10,-6,-8,-10,-9,-5],[-10,-4,-1,-1,6,-10],[5,-4,-4,-3,-10,9],[-5,-5,2,9,-5,4],[-5,-8,5,7,-3,6],[-7,2,-9,7,1,-10],[-2,-4,4,-10,5,2],[-7,3,-2,-9,-7,8],[1,-9,9,-5,10,7]],[[-9,7,-6,-5,7,-7],[6,-10,7,8,7,-2],[7,-7,-9,5,3,2],[-10,-6,-7,-8,9,8],[7,-5,3,1,7,9],[4,1,-7,-9,-4,-3],[-6,-5,-10,2,-7,10],[-6,-10,-8,-8,6,-10],[-4,9,3,-8,5,-5],[-4,-2,6,3,-4,-5],[-3,-5,-2,-1,5,4],[-1,7,8,3,-9,-5],[9,-6,-2,-5,4,3],[6,-4,-3,9,3,-2]],[[-9,4,-9,4,-8,9],[1,-4,-4,3,-10,-1],[5,9,-7,10,-5,4],[5,10,-8,3,4,6],[-2,-8,-6,-9,10,-1],[-10,-4,7,-9,-8,8],[-9,-5,6,-1,-10,5],[1,-7,4,9,-10,9],[3,-4,6,-6,10,-7],[3,-7,8,-9,7,-1],[5,-5,3,6,9,-6],[9,1,3,10,-8,1],[10,-7,7,8,-8,-8],[-4,-6,4,1,1,-7]],[[-9,-10,-3,-5,10,-9],[-9,-10,-9,-7,-5,-7],[4,4,-9,-10,7,5],[1,-4,1,-10,8,7],[-8,-2,7,4,7,-7],[-1,5,6,-10,10,-10],[5,3,-9,3,-5,2],[4,1,4,-10,-4,-2],[6,7,-4,-1,8,4],[-2,-7,-2,9,3,-1],[-8,9,-7,10,1,-1],[8,-5,6,4,-8,7],[7,8,-5,-8,-2,-3],[-8,-4,4,-5,7,-7]],[[-1,1,3,9,-3,2],[8,1,7,-8,-8,-5],[8,-3,1,-10,-4,-10],[-8,-6,6,8,-8,-3],[-2,-1,5,-3,5,10],[9,-6,10,7,-7,-8],[3,-8,-7,-9,3,-9],[3,1,-9,3,10,8],[-9,7,-10,-8,3,7],[6,10,5,8,-1,-7],[2,8,-1,-10,-3,-6],[-4,-7,10,-8,1,8],[7,-3,6,9,-2,-10],[3,-5,8,9,-6,8]],[[2,4,4,-9,-9,9],[2,5,-7,9,4,-6],[3,-2,-4,5,-8,1],[-3,3,3,-1,-2,-1],[9,10,-1,-6,4,5],[2,-7,-1,10,-9,9],[-5,-8,-5,7,-8,9],[-5,-4,-7,-8,9,7],[4,-5,10,-2,4,-1],[9,-5,5,6,3,9],[-1,8,2,1,5,-8],[3,2,-2,-6,-1,7],[5,5,5,7,-1,-7],[2,-1,-5,-4,1,-6]],[[8,-1,3,6,1,-5],[7,2,8,-3,7,-7],[-4,-3,-6,-7,10,-5],[6,-10,-5,5,6,-2],[-5,5,2,6,-3,-3],[7,5,-8,10,-4,-2],[3,2,3,6,-10,1],[4,-8,-8,8,-8,3],[-3,-9,1,-9,9,8],[5,1,6,7,-1,9],[-3,5,7,-7,-10,1],[-8,-10,10,-10,-3,-2],[2,10,-2,3,3,-9],[7,-5,2,10,4,8]],[[7,1,-8,-10,-2,-6],[-7,-10,-8,-3,4,-1],[3,10,-1,-3,8,-10],[-9,-7,-9,5,-3,-6],[-5,3,8,8,5,-1],[8,-7,-10,-3,5,9],[-2,-10,3,-5,9,-10],[3,-10,-7,7,5,-2],[-2,1,4,3,-6,2],[-1,8,4,-6,-7,7],[7,9,-9,6,-3,-9],[9,-4,5,6,2,5],[-3,5,9,-4,-6,-8],[-4,-6,-1,6,7,7]],[[-8,7,9,10,-6,4],[6,4,2,9,-6,3],[-2,-1,10,10,-3,2],[2,5,-6,3,-8,-6],[-9,-6,-9,-4,1,9],[-3,1,-7,-9,-2,7],[3,10,7,4,10,-10],[-1,2,-2,-3,-2,-3],[7,10,-6,9,-6,-3],[-4,6,-8,-5,-5,-3],[9,-3,2,2,10,1],[8,5,9,-7,-6,-7],[1,5,8,-4,6,10],[5,-7,5,-1,10,-8]],[[-6,9,10,-10,9,-7],[-3,-6,8,7,9,8],[-6,8,5,-4,-3,-6],[-1,3,10,-7,-3,-6],[-10,-4,-10,2,1,1],[-7,8,-8,-2,9,-8],[-5,5,-7,-9,-3,7],[-7,-9,-10,6,-5,-7],[1,9,5,10,-2,10],[-8,-8,3,-6,4,-9],[-6,-2,-1,4,-10,-1],[-2,-7,-10,6,5,10],[-1,8,-4,10,6,-2],[2,-9,9,-7,3,-5]],[[-10,-10,7,5,-8,3],[-4,1,6,-4,-9,3],[3,9,6,10,7,3],[1,3,-2,1,-1,3],[8,-8,-2,-5,4,2],[1,8,-1,-3,-8,2],[-1,6,-7,-1,-8,-2],[-1,5,2,-5,-1,-1],[3,-5,-8,-3,-1,-3],[9,1,-3,8,-1,-9],[-2,6,-7,-8,-10,-5],[1,1,8,8,10,-7],[-6,6,7,10,10,-5],[-4,-1,-5,7,6,-5]],[[4,4,-7,-6,3,8],[-9,-1,8,-8,-8,-9],[7,8,5,-8,1,2],[10,-10,-2,-4,9,-10],[3,9,8,6,-5,-9],[-10,-7,6,10,9,-10],[8,-10,1,-4,-9,-8],[3,4,-8,6,7,-10],[5,10,10,5,-6,-7],[-6,-3,-3,1,5,-4],[8,3,-5,8,-3,-6],[-8,10,-7,-5,7,-7],[1,8,5,8,-4,-7],[-4,-9,-3,1,-5,9]],[[10,-4,-2,-9,10,8],[3,-9,9,-4,-2,1],[9,9,4,7,-2,3],[3,-8,1,-8,-3,1],[-4,-4,-7,2,-8,-9],[6,6,-8,-3,-1,4],[6,8,9,-1,2,9],[-2,-7,-9,3,-4,-5],[-8,-1,-7,2,-9,3],[10,2,1,5,-2,4],[-9,-9,5,-5,-2,3],[5,5,6,1,3,-9],[-3,-10,5,6,-2,-8],[1,-2,-4,-4,-8,1]]], dtype = "uint16")#candidate|1156|(15, 14, 6)|const|uint16
bop_1157 = relay.bitwise_and(const_1155.astype('uint16'), relay.reshape(const_1156.astype('uint16'), relay.shape_of(const_1155))) # shape=(15, 14, 6)
func_431_call = mod.get_global_var('func_431')
func_433_call = mutated_mod.get_global_var('func_433')
const_1163 = relay.const([[8,-3,7,-1,-5,4,-6,2,-1,9,6,-7,-1,5],[-4,-4,6,-7,1,10,4,-3,-10,-8,6,8,-7,-10],[-1,-6,9,9,9,10,4,7,-3,-2,-5,-3,-10,-5],[-3,5,-10,-7,1,6,-4,2,-6,9,9,-2,2,7],[4,8,7,-9,6,-7,6,7,-4,7,9,-9,5,-3],[5,-2,-4,-6,6,7,3,-9,1,-6,-8,-5,9,5],[3,5,-10,7,-7,-4,-10,7,8,2,-3,-4,-3,5],[-3,8,-10,8,-9,-3,-9,1,9,1,-3,7,-3,-6],[2,-10,2,2,2,2,-6,10,-2,-3,1,8,-10,10],[6,2,7,-2,4,1,-6,9,-9,-5,2,-4,5,6],[5,-9,-2,-8,4,8,-3,-4,-5,1,2,5,-6,-8],[8,-4,-2,5,-3,2,2,5,-2,-6,-10,9,3,-7],[-2,9,8,5,6,3,5,-7,7,2,-1,-6,-5,4],[-8,6,5,-2,-9,-5,10,-6,-5,-10,7,2,10,8],[3,-1,2,-3,-5,1,3,-8,-4,-6,9,1,-7,3],[-1,3,4,4,-5,2,1,3,9,-7,-8,-4,-10,-5],[10,-6,-1,-4,7,9,-5,10,-6,2,-4,2,3,-9],[3,-1,1,3,-8,-7,4,-5,-8,-7,-9,2,9,5],[10,-6,-9,-5,4,-4,-4,7,8,-9,8,3,-6,-1],[6,6,2,-8,-10,-3,10,7,8,-2,-8,5,8,3],[10,6,2,4,7,-4,7,-1,5,-1,-2,3,7,-7],[-5,-6,6,3,-7,9,8,-10,3,2,-9,-2,9,2],[3,-8,10,5,7,2,-4,-7,-6,-9,-6,8,-5,8],[-6,-9,-10,9,-2,-5,-2,-2,-10,9,8,9,-1,1],[7,-2,-8,4,-10,7,9,1,-1,-8,-6,8,-6,-7],[-4,-3,-8,4,5,-3,2,5,1,3,-10,2,-7,-9],[-9,-8,-7,-2,5,8,-5,-3,2,-10,-5,-5,-3,3],[1,-3,-10,-3,-3,1,-2,-7,1,-8,9,6,-3,1],[1,-8,-7,3,3,6,3,-5,6,6,2,-2,5,5],[10,6,9,6,-4,-5,6,-4,-9,-8,10,4,-9,3],[4,-2,3,8,1,-9,-4,5,-8,-1,-7,-1,4,-9],[2,8,9,2,7,3,3,-4,-8,9,9,10,10,3],[1,-10,5,10,-6,-5,2,3,-1,4,-8,-3,4,3],[7,1,-9,2,7,-9,2,-9,3,4,9,-3,-3,-3],[2,-3,1,8,5,5,9,8,-1,10,7,10,-1,4],[-9,-1,1,1,-9,2,-6,7,-3,9,-2,-10,2,-8],[2,5,6,-4,1,9,-2,-6,-9,6,-8,8,3,-2],[5,-5,9,-10,-7,4,-10,10,5,10,6,8,10,-7],[-3,7,-6,-6,-6,2,1,-3,-10,-2,-6,-8,10,-10],[1,5,-6,-3,9,-1,-6,-8,10,7,-4,-4,-3,5],[-10,4,-4,-7,-3,7,10,7,-1,-4,-6,-1,-1,-1],[7,8,2,-9,2,9,6,7,3,1,-9,-7,7,-5],[2,5,-5,7,6,6,-3,3,-10,-5,-6,-7,5,-10],[-1,-1,5,4,-8,9,-8,1,-9,-3,7,-2,-8,8],[2,-4,-6,-7,2,1,4,-3,5,6,-8,-3,-8,-8],[3,-10,5,-9,10,2,-9,3,4,-6,9,3,10,2],[8,-4,3,7,9,-9,-3,-2,-3,-6,10,6,-1,-7],[-2,10,-7,10,-8,10,-4,-8,-7,9,-7,6,6,-7],[10,9,2,-1,-2,3,-9,-1,9,2,-10,-7,-8,4],[-5,-1,6,-7,7,-9,9,3,2,-3,-3,-8,-5,-2],[8,-7,7,-7,7,-3,-2,-5,4,-10,-2,-9,7,-8],[2,7,5,2,3,-7,5,-5,2,-9,8,5,4,2],[1,8,-9,-3,1,8,-7,4,-5,-9,9,-5,9,4],[4,-7,-8,-10,9,3,9,4,8,-7,5,2,-6,-10],[7,-10,-9,-7,1,-6,-9,2,2,-3,2,-5,-6,2],[6,-6,-5,7,3,-3,-9,7,-9,7,5,-4,-2,5],[-8,9,-8,-8,-1,-8,-8,9,1,-7,-6,-4,8,7],[6,7,8,9,-1,10,-3,8,-9,-9,4,-3,-2,-9],[-4,8,8,-6,-3,6,-4,-8,5,6,-3,-6,-1,-9],[-5,-3,7,-3,-1,3,3,-10,6,-2,3,6,-5,5],[3,-10,4,-9,9,6,-10,3,-10,10,10,6,-2,-1],[5,4,2,6,9,7,-7,7,-3,1,-3,1,5,-9],[10,-3,-6,4,-2,3,8,-1,-4,4,-1,3,8,-9],[1,-9,8,9,10,3,4,5,-8,8,-7,9,7,-3],[-6,-7,2,2,-9,-5,4,5,4,1,6,-3,-2,-10],[4,6,-8,1,-1,10,-3,3,3,-7,-7,8,-8,6],[-5,8,10,1,9,7,-6,3,10,-9,3,-1,-6,4],[1,-3,8,6,-7,7,-9,-7,-9,-4,-6,3,1,-10],[4,3,3,2,7,-9,-4,-10,1,10,6,1,1,1],[-10,10,-2,9,-7,7,10,-8,-4,-9,-4,5,7,1],[-1,-9,-1,7,2,-1,1,-4,-5,5,-1,-4,-5,6],[-6,9,1,-2,-9,-8,-7,1,-8,-6,1,4,-8,-8],[9,5,3,5,-2,-6,6,-1,4,10,10,7,-9,-3],[3,-10,-5,10,-6,2,3,-8,-6,3,-2,-4,-3,4],[-5,-1,-8,1,-5,-3,-7,1,-7,-1,8,4,9,10],[10,5,1,-2,-6,-4,5,4,-4,-5,3,-5,2,-9],[-7,4,-5,1,-7,-6,-9,6,10,9,4,-7,10,8],[-9,-4,7,4,-8,-1,1,10,10,3,5,-5,5,-7],[-4,-10,3,-9,-3,6,9,8,5,-9,3,4,-5,-8],[1,-7,2,7,-3,-8,1,-8,1,10,4,-2,1,-7],[-7,9,2,-2,-5,-2,7,-5,-3,-1,-10,2,-2,3],[10,-2,-4,-4,6,3,-5,10,-4,-10,-7,-3,2,1],[10,7,-3,-7,-9,7,7,5,-4,3,7,7,4,10],[-7,-2,-6,-9,8,-10,-8,-2,-7,-6,1,1,3,-3],[7,-3,-6,-3,3,-1,-7,10,8,-10,-9,3,6,-2],[-1,-5,10,-5,2,9,10,-8,3,-4,-10,-3,3,-10],[2,-9,7,-5,2,5,10,1,8,-8,-9,-9,9,7],[1,-2,-9,8,-4,5,3,-2,-8,2,4,4,-4,-2],[6,-4,9,10,6,-6,-8,-8,4,3,-3,-5,-7,-2],[-3,-4,6,-6,8,4,5,-6,-2,-6,-4,-6,6,-6],[10,5,-2,2,1,-2,-7,2,-6,-5,-3,-3,-1,-4],[2,-1,-7,8,7,5,10,-4,-6,9,5,10,-6,-4],[4,6,-9,-10,5,-4,-8,10,-8,4,-3,8,10,7],[-3,-5,-1,2,-1,-6,10,9,-1,-5,5,5,-4,-7],[8,-2,-7,7,9,-9,4,9,5,2,-8,5,6,-1],[-2,7,-2,-3,6,-6,1,-7,1,1,-3,2,-7,3],[6,4,-2,-9,9,-3,2,-10,-7,10,-3,3,-1,9],[3,-3,-8,6,9,-6,7,-1,-1,2,10,-5,2,-2],[5,2,3,-7,-2,1,-10,10,-6,-4,4,2,-7,-10],[7,1,3,-9,9,-5,9,-4,3,-4,-7,-6,6,6],[7,4,9,-5,1,7,8,-4,-10,-5,2,-5,-2,9],[-9,5,2,9,7,4,-5,-1,-4,1,-3,10,8,4],[4,-9,-8,-10,-4,-4,10,2,-8,10,7,-8,8,6],[1,7,3,10,-10,4,9,6,5,-7,-2,4,8,10],[10,-3,7,-8,-6,4,9,2,7,7,8,6,9,-9],[-2,5,6,2,-10,4,9,3,-7,5,-3,-7,-4,-10],[2,2,-8,-5,6,8,8,-9,-1,4,-7,5,9,10],[-4,8,10,10,-8,-4,2,8,5,6,2,-7,7,9],[-1,-1,1,-3,-1,3,-9,2,9,1,9,-2,-7,10],[-9,2,-9,-7,4,5,2,-5,-3,2,6,5,-3,6],[4,-6,6,2,-4,-8,-8,4,-9,9,-5,-3,4,-8],[-3,-9,-2,-9,-6,4,10,8,2,-8,-10,-2,-7,6],[3,10,-10,-4,-3,-1,-5,-9,-6,5,-9,-1,-9,2],[10,-7,1,8,6,4,-4,-10,-1,-6,-4,-4,-1,1],[-10,5,-10,10,2,5,-1,-9,5,5,-6,2,9,4],[3,-9,-8,-10,9,-4,-9,10,1,6,-7,-3,-2,-3],[-10,-3,4,-5,-8,-3,-4,-9,7,6,7,3,5,-6],[-8,9,8,1,6,4,-1,-3,3,2,3,7,10,-5],[3,-1,2,1,4,2,9,3,5,7,-10,-10,-6,3],[7,10,-9,3,3,-3,-7,6,-3,6,-5,-7,-1,-5],[4,-3,-8,-10,-4,-8,6,-3,-8,-9,-7,10,9,6],[6,8,-1,-2,-4,6,5,6,-5,4,-9,4,-9,8],[4,9,7,-2,6,5,-6,9,-5,5,-7,5,4,-4],[6,3,5,-1,-9,1,7,-7,-9,4,-3,-5,-8,6],[2,4,-1,-9,1,1,3,5,-9,10,-1,1,-3,-4],[-7,-10,-2,8,-5,2,-4,-6,-8,-6,-5,5,1,10],[4,-3,-8,-1,-1,-6,3,2,2,6,-9,6,-7,8],[7,-1,3,2,-9,4,2,-6,-7,-4,-6,-10,1,7],[-7,7,4,-6,2,-10,3,-2,-1,9,7,-8,2,-6],[-4,-2,-7,-6,6,9,2,-2,-3,-9,3,4,-9,-2],[10,5,-10,-4,5,9,-2,3,8,-8,-10,-5,2,10],[2,4,2,6,4,1,10,3,8,5,-1,-7,7,-1],[-1,-2,-7,-9,-4,10,-6,9,3,-7,10,-9,4,-2],[-7,-2,8,-5,10,1,-8,-2,-4,-10,3,-7,1,3],[-1,-10,10,9,8,2,-8,2,5,-10,-6,-5,-8,-1],[-8,8,-1,-6,-2,8,10,6,4,4,3,-8,2,8],[-4,1,-5,-1,-9,9,3,9,-7,1,-4,-1,-7,-6],[2,1,2,10,-2,8,-8,-1,4,6,7,-3,2,-10],[4,-8,-9,-4,2,10,5,-5,5,-5,8,-10,-7,-7],[-8,-8,10,-1,-6,10,9,3,-10,-6,-6,3,2,-8],[8,-8,2,-1,3,-1,-6,-8,-5,-10,9,9,9,-9],[5,10,5,-10,-5,1,-2,8,5,5,-6,4,-1,1],[7,10,1,7,-9,5,9,-5,-8,9,8,-5,8,-2],[-4,-10,-6,7,2,3,1,7,-4,1,5,7,-5,-10],[4,4,8,1,4,-9,-1,8,-10,2,-9,-8,-4,-8],[7,-1,-3,-9,1,-2,9,1,-6,2,8,-10,8,9],[-2,10,-8,-10,-8,-9,2,-3,-5,-9,-7,-6,6,2],[-3,7,-10,5,-1,-7,6,9,-9,9,9,6,-10,3],[-8,3,5,-7,8,-3,8,8,-7,-2,-9,4,-10,6],[-3,-9,1,4,-9,-3,4,-5,-5,6,8,-10,-10,5],[-5,1,9,10,-9,7,5,6,3,2,4,2,8,1],[8,-10,-6,-2,-3,4,-7,2,1,3,-1,4,5,-9],[9,2,5,-10,-7,5,-5,1,-10,-3,-5,4,1,3],[-3,-8,-2,2,4,-6,4,-10,10,10,6,-10,-2,-9],[2,1,-4,-10,1,4,3,8,-1,8,-2,3,4,1],[8,10,-1,5,-10,-2,8,6,-5,-3,-5,-2,-1,-4],[-10,2,-4,8,-1,-3,-10,2,2,-1,4,-5,-5,5],[4,3,-4,-2,7,-4,-2,1,-1,-4,-3,-9,-9,8],[-5,-1,2,-3,-9,7,-4,6,7,2,2,-2,-10,-4],[7,-2,6,-1,7,7,10,4,4,-2,1,10,9,-8],[2,8,5,4,-5,-10,-1,-10,10,5,-6,-6,2,-10],[-7,-9,-10,2,9,7,-3,4,-5,-6,-8,10,9,-1],[-1,1,-9,8,-7,7,6,-8,10,-4,-8,-9,-1,-2],[-4,-3,-4,-4,5,4,-4,-10,4,3,1,10,-8,-8],[9,-1,-3,-9,-1,1,9,-9,-8,-5,-6,8,-6,9],[-9,-2,4,-1,-10,-3,-5,6,-2,7,4,4,-10,9],[3,7,2,-10,7,-5,-4,-7,-5,-1,9,-8,-9,3],[5,5,-10,1,6,-2,3,-9,6,-5,2,-9,-5,-4],[-7,6,-10,1,-3,-4,6,-1,3,-5,7,-1,6,-8]], dtype = "uint8")#candidate|1163|(169, 14)|const|uint8
call_1162 = relay.TupleGetItem(func_431_call(relay.reshape(const_1163.astype('uint8'), [14, 13, 13])), 1)
call_1164 = relay.TupleGetItem(func_433_call(relay.reshape(const_1163.astype('uint8'), [14, 13, 13])), 1)
output = relay.Tuple([bop_1157,call_1162,const_1163,])
output2 = relay.Tuple([bop_1157,call_1164,const_1163,])
func_1167 = relay.Function([], output)
mod['func_1167'] = func_1167
mod = relay.transform.InferType()(mod)
mutated_mod['func_1167'] = func_1167
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1167_call = mutated_mod.get_global_var('func_1167')
call_1168 = func_1167_call()
output = call_1168
func_1169 = relay.Function([], output)
mutated_mod['func_1169'] = func_1169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
call_1172 = relay.TupleGetItem(func_1167_call(), 0)
call_1173 = relay.TupleGetItem(func_1169_call(), 0)
output = relay.Tuple([call_1172,])
output2 = relay.Tuple([call_1173,])
func_1183 = relay.Function([], output)
mod['func_1183'] = func_1183
mod = relay.transform.InferType()(mod)
mutated_mod['func_1183'] = func_1183
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mutated_mod.get_global_var('func_1183')
call_1184 = func_1183_call()
output = call_1184
func_1185 = relay.Function([], output)
mutated_mod['func_1185'] = func_1185
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
call_1255 = relay.TupleGetItem(func_1167_call(), 1)
call_1256 = relay.TupleGetItem(func_1169_call(), 1)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_1263 = relay.TupleGetItem(func_1183_call(), 0)
call_1264 = relay.TupleGetItem(func_1185_call(), 0)
uop_1265 = relay.tan(call_1263.astype('float64')) # shape=(15, 14, 6)
uop_1267 = relay.tan(call_1264.astype('float64')) # shape=(15, 14, 6)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
call_1269 = relay.TupleGetItem(func_1167_call(), 0)
call_1270 = relay.TupleGetItem(func_1169_call(), 0)
output = relay.Tuple([call_1255,uop_1265,call_1269,])
output2 = relay.Tuple([call_1256,uop_1267,call_1270,])
func_1271 = relay.Function([], output)
mod['func_1271'] = func_1271
mod = relay.transform.InferType()(mod)
mutated_mod['func_1271'] = func_1271
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mutated_mod.get_global_var('func_1271')
call_1272 = func_1271_call()
output = call_1272
func_1273 = relay.Function([], output)
mutated_mod['func_1273'] = func_1273
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1296 = relay.var("var_1296", dtype = "float64", shape = (10, 8, 16))#candidate|1296|(10, 8, 16)|var|float64
var_1297 = relay.var("var_1297", dtype = "float64", shape = (10, 8, 16))#candidate|1297|(10, 8, 16)|var|float64
bop_1298 = relay.divide(var_1296.astype('float64'), relay.reshape(var_1297.astype('float64'), relay.shape_of(var_1296))) # shape=(10, 8, 16)
uop_1307 = relay.rsqrt(var_1296.astype('float64')) # shape=(10, 8, 16)
func_287_call = mod.get_global_var('func_287')
func_291_call = mutated_mod.get_global_var('func_291')
var_1319 = relay.var("var_1319", dtype = "float32", shape = (1536,))#candidate|1319|(1536,)|var|float32
call_1318 = relay.TupleGetItem(func_287_call(relay.reshape(var_1319.astype('float32'), [16, 8, 12]), relay.reshape(var_1319.astype('float32'), [16, 8, 12]), ), 2)
call_1320 = relay.TupleGetItem(func_291_call(relay.reshape(var_1319.astype('float32'), [16, 8, 12]), relay.reshape(var_1319.astype('float32'), [16, 8, 12]), ), 2)
output = relay.Tuple([bop_1298,uop_1307,call_1318,var_1319,])
output2 = relay.Tuple([bop_1298,uop_1307,call_1320,var_1319,])
func_1325 = relay.Function([var_1296,var_1297,var_1319,], output)
mod['func_1325'] = func_1325
mod = relay.transform.InferType()(mod)
var_1326 = relay.var("var_1326", dtype = "float64", shape = (10, 8, 16))#candidate|1326|(10, 8, 16)|var|float64
var_1327 = relay.var("var_1327", dtype = "float64", shape = (10, 8, 16))#candidate|1327|(10, 8, 16)|var|float64
var_1328 = relay.var("var_1328", dtype = "float32", shape = (1536,))#candidate|1328|(1536,)|var|float32
output = func_1325(var_1326,var_1327,var_1328,)
func_1329 = relay.Function([var_1326,var_1327,var_1328,], output)
mutated_mod['func_1329'] = func_1329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_1353 = relay.TupleGetItem(func_1271_call(), 1)
call_1354 = relay.TupleGetItem(func_1273_call(), 1)
func_192_call = mod.get_global_var('func_192')
func_194_call = mutated_mod.get_global_var('func_194')
const_1357 = relay.const([3.925342,-0.111441,3.515040,-8.520517,-2.277340,9.958403,-5.360681,-4.304275,-5.682766,-9.939024,7.024333,6.803709,-6.454752,-5.889159,-4.357740,-1.587096,1.965084,-5.124080,4.115226,-4.655578,6.216190,-3.763192,4.191568,-6.003348,-2.141080,8.632634,-2.338162,-3.693222,-4.847760,9.296435,-0.761217,-1.822909,-8.791868,-1.592472,7.253617,5.756640,-0.036079,-5.432286,7.389225,-5.685845,6.143459,0.993551,-0.564256,-0.879192,-3.081662,9.298141,-3.325750,-2.992428,-0.389166,-8.716625,7.858787,-9.188909,-7.789472,6.746549,9.454921,2.404658,-9.568375,7.843882,-8.697472,7.006006,9.870512,2.716036,-0.681478,-3.603083,-6.484685,-3.885906,-2.556080,0.295412,2.202913,-6.141731,-0.182871,7.119459,-1.890188,9.001182,6.842214,4.475840,8.767621,-3.764781,-6.950102,-6.397582,3.494365,-1.945514,0.366703,-1.328119,7.516265,-7.010711,-0.419839,-1.455367,-0.435291,3.337448,-9.021969,-6.091666,9.465894,4.835817,2.011529,-9.241549,-7.096519,-0.639729,0.115878,-1.109061,-9.101219,-5.933786,-1.441911,9.296761,3.204303,-9.081075,-7.953565,3.340929,1.447146,2.388040,5.113193,-0.635410,3.643379,5.423093,9.391506,6.515391,-3.644006,3.036590,-4.185372,0.872236,5.938832,5.872331,-8.433436,-2.866748,2.402132,-5.859131,3.152561,-1.944829,-5.398099,2.310371,8.315283,1.621355,9.874888,-5.776996,2.743927,8.231877,-4.913573,-6.523888,6.353342,-8.106015,3.814347,6.433401,8.206270,4.598197,-5.844065,-3.079584,0.782945,8.844362,-0.856112,-7.063276,-5.036211,-5.769551,-3.563662,2.230455,3.212973,-7.300632,7.933569,-1.356085,7.027227,-1.424120,-9.040279,1.844162,-4.090586,-4.382000,-7.162366,-3.548302,-3.753109,8.819061,-7.146540,8.091320,8.439762,-4.588567,3.862230,5.212775,-9.997889,-3.138571,-7.686376,-7.681515,1.956696,9.719257,9.340598,-9.309007,3.016484,-7.431854,-9.304438,5.219084,4.384942,-7.597099,-5.657582,6.988033,2.770727,-1.175761,5.934683,-4.534492,6.670587,-0.429329,-1.494255,8.051191,5.775940,3.012954,4.067592,3.892133,-0.733798,5.427700,2.976310,5.750516,9.036902,2.131999,-3.304221,4.864066,4.827400,-6.601449,-0.607673,2.553686,0.036549,8.304627,-0.976979,2.998705,4.503357,4.413903,0.306160,5.876051,-8.730937,4.164414,0.422453,1.431461,-6.265553,-7.356709,9.262653,-2.391969,-6.286499,3.320707,-3.364117,3.090791,9.102048,4.661763,8.083209,7.621214,9.142398,-7.173859,1.519043,7.118629,3.025141,-8.613779,-1.410110,7.807803,9.993389,5.874670,4.102837,8.612481,8.531907,4.919451,6.862003,4.416754,8.620467,7.080899,2.704016,-0.257419,-5.711685,0.794366,-6.804383,4.347922,0.494187,8.998777,4.311621,9.765838,3.262884,7.307606,-2.956628,1.000967,-2.830141,-5.670711,-6.458220,-6.318140,-5.677700,6.793146,-6.158903,-9.450672,3.639607,-2.018043,-4.138215,6.276530,-6.411613,-0.909110,4.712081,-6.780437,4.073707,8.228315,-9.531312,-0.737395,9.837908,1.952329,7.157383,1.547725,4.631838,1.654761,-2.147764,-5.653592,-8.480436,1.686074,-9.946200,5.055137,-8.459909,3.154153,5.775725,5.588119,7.005246,-7.855433,-3.134341,0.155933,-3.982285,5.963927,-9.613968,0.009375,6.296429,-1.735379,5.534713,2.138501,9.227786,-7.873756,-8.947948,1.948288,-1.061967,-2.982845,-3.722128,-0.832396,7.502998,4.912459,2.793687,-8.559808,2.419490,9.012673,-6.091495,-7.864087,4.045321,-5.540000,5.779625,-4.919683,-6.659654,-9.352242,-2.999589,8.730624,9.336285,1.695386,6.195345,8.438767,3.380631,7.546765,9.861369,2.753422,-3.012999,-6.439675,9.524455,7.812850,-4.712394,-1.546271,3.686768,-1.741161,-0.955929,5.508951,1.816946,-0.512772,8.577280,-2.390499,-8.649319,-4.298758,-6.965125,-4.366242,6.220955,1.712123,6.750463,-2.739196,2.730104,1.761439,7.387941,3.333966,6.967883,6.996860,-7.276649,0.773290,0.617090,8.054590,2.457947,5.216454,-8.487960,-1.434980,4.163310,-6.118869,1.159132,-2.962987,-8.981931,7.090619,-9.828022,3.743454,-3.813452,0.173002,-1.560455,1.591284,-1.248916,-9.663131,1.801567,-2.313056,8.925899,3.536310,3.123491,2.615047,-6.926728,6.524284,1.865189,3.405659,-4.466837,1.277198,1.449156,-9.052337,-0.148500,-8.244300,0.049605,-5.454390,2.791425,6.042743,2.104809,6.122218,0.532482,-0.664833,3.966513,-0.944764,-0.769358,-1.824909,6.980036,2.302494,6.628020,4.699645,0.673823,8.461414,-0.829134,5.879838,-2.093160,9.405417,7.120235,-0.338267,8.648369,-1.559779,6.413385,1.285026,1.463474,-2.294136,8.520979,9.391926,3.926274,8.326726,4.913670,4.883751,1.494967,9.265606,1.576902,3.825214,5.741844,-9.835256,-4.106131,9.115043,0.622667,-6.652699,5.747608,3.148313,9.981885,-5.431371,0.946350,-8.674840,-1.437589,4.803021,5.331603,-8.525095,3.543695,7.908406,5.190270,0.299606,-4.247233,1.008849,-0.892474,-1.594657,1.501210,-4.418518,2.407256,-5.073988,1.745888,0.871677,-0.922823,4.115125,-6.784158,-0.939466,8.045405,-9.279994,3.782571,5.395995,-4.600023,5.485231,4.008213,-7.480319,-1.333546,-3.264502,7.088248,2.121265,-0.968024,9.751974,0.945689,-8.027612,5.488295,1.595279,-8.656862,-4.866445,-1.050277,-1.652125,-6.227480,-2.160063,6.282162,-3.396466,-2.995002,1.891234,-6.469203,-6.080810,-1.278463,-7.362577,2.910190,-1.098480,-2.662820,6.172211,7.174993,-3.814491,-2.151319,-4.546943,-9.836191,-2.265974,-7.265065,7.931203,-7.444430,8.681041,-3.125092,0.951332,6.624543,8.833977,-8.748972,-1.444555,-4.680366,5.661720,-4.644433,1.903328,-7.095180,8.918758,2.671673,2.301447,-3.671878,-0.220362,-2.823373,1.383472,0.235934,-8.611305,7.396733,0.086959,2.740204,-2.705603,7.570038,-6.781203,-3.309459,-3.708580,-4.937273,4.397367,-8.701668,2.139236,7.901667,-3.656148,1.885517,2.770041,-9.642896,4.353093,4.153794,6.667221,4.818176,7.936676,8.472320,9.216106,1.522272,1.485918,-3.158821,3.339298,4.523287,-5.370032,-7.746392,1.842586,4.175596,-1.189083,-2.331272,6.673449,-9.799326,4.440099,-4.430835,7.059713,-7.071189,-6.584475,-4.348537,-2.135957,3.298706,-5.899373,-7.204957,-8.374009,-6.575985,5.152689,-8.158184,-1.020853,4.411219,8.803427,-9.172924,2.682702,4.175211,4.873506,6.036969,8.604301,3.895980,-0.463745,0.267139,5.474333,-6.834461,-8.405555,4.310559,7.313286,7.523589,-0.176000,0.452687,-0.015833,8.778203,-4.630336,6.618801,-5.522593,-4.620608,8.248283,0.421352,0.704874,9.066256,1.091547,6.180104,2.982158,3.882439,-8.853602,4.270028,0.487267,5.363801,-0.375626,8.443776,5.267422,2.897237,7.771458,7.523395,-9.394929,-1.267009,2.140843,-0.523120,-3.086595,-8.222936,3.840152,0.089176,4.361650,-3.887906,-6.038516,-3.027186,3.614072,-9.999260,-7.587677,-8.556327,-5.974558,-4.816642,-6.903153,-6.647348,-4.311268,8.419817,-1.314672,-7.682112,8.097647,0.937499,-6.911438,5.275723,-6.954199,-8.839135,7.938007,6.840505,-4.315100,3.816059,1.679668,6.747569,0.618318,5.909188,-5.809248,5.188515,-4.318891,7.769743,-1.995281,9.815357,-5.156241,0.915649,-0.358274,9.986106,3.051649,8.812061,-0.182030,-9.337983,2.585845,5.540487,-5.773000,-0.790510,-4.622827,4.925017,-3.817898,0.429625,2.677414,4.754588,3.954022,-0.630761,7.289298,2.478004,-0.987005,1.374188,9.250391,6.547755,0.614876,0.429217,0.404020,-7.400374,8.228168], dtype = "float64")#candidate|1357|(726,)|const|float64
call_1356 = relay.TupleGetItem(func_192_call(relay.reshape(const_1357.astype('float64'), [11, 11, 6])), 0)
call_1358 = relay.TupleGetItem(func_194_call(relay.reshape(const_1357.astype('float64'), [11, 11, 6])), 0)
bop_1361 = relay.minimum(const_1357.astype('uint32'), relay.reshape(call_1356.astype('uint32'), relay.shape_of(const_1357))) # shape=(726,)
bop_1364 = relay.minimum(const_1357.astype('uint32'), relay.reshape(call_1358.astype('uint32'), relay.shape_of(const_1357))) # shape=(726,)
uop_1366 = relay.log10(const_1357.astype('float32')) # shape=(726,)
bop_1369 = relay.bitwise_or(uop_1366.astype('uint8'), relay.reshape(call_1356.astype('uint8'), relay.shape_of(uop_1366))) # shape=(726,)
bop_1372 = relay.bitwise_or(uop_1366.astype('uint8'), relay.reshape(call_1358.astype('uint8'), relay.shape_of(uop_1366))) # shape=(726,)
bop_1373 = relay.power(bop_1361.astype('float32'), relay.reshape(call_1356.astype('float32'), relay.shape_of(bop_1361))) # shape=(726,)
bop_1376 = relay.power(bop_1364.astype('float32'), relay.reshape(call_1358.astype('float32'), relay.shape_of(bop_1364))) # shape=(726,)
uop_1380 = relay.sin(bop_1369.astype('float64')) # shape=(726,)
uop_1382 = relay.sin(bop_1372.astype('float64')) # shape=(726,)
uop_1384 = relay.asinh(bop_1369.astype('float64')) # shape=(726,)
uop_1386 = relay.asinh(bop_1372.astype('float64')) # shape=(726,)
uop_1392 = relay.acosh(uop_1384.astype('float32')) # shape=(726,)
uop_1394 = relay.acosh(uop_1386.astype('float32')) # shape=(726,)
bop_1402 = relay.subtract(const_1357.astype('int32'), relay.reshape(uop_1380.astype('int32'), relay.shape_of(const_1357))) # shape=(726,)
bop_1405 = relay.subtract(const_1357.astype('int32'), relay.reshape(uop_1382.astype('int32'), relay.shape_of(const_1357))) # shape=(726,)
bop_1412 = relay.right_shift(bop_1369.astype('int8'), relay.reshape(uop_1366.astype('int8'), relay.shape_of(bop_1369))) # shape=(726,)
bop_1415 = relay.right_shift(bop_1372.astype('int8'), relay.reshape(uop_1366.astype('int8'), relay.shape_of(bop_1372))) # shape=(726,)
output = relay.Tuple([call_1353,bop_1373,uop_1392,bop_1402,bop_1412,])
output2 = relay.Tuple([call_1354,bop_1376,uop_1394,bop_1405,bop_1415,])
func_1418 = relay.Function([], output)
mod['func_1418'] = func_1418
mod = relay.transform.InferType()(mod)
mutated_mod['func_1418'] = func_1418
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1418_call = mutated_mod.get_global_var('func_1418')
call_1419 = func_1418_call()
output = call_1419
func_1420 = relay.Function([], output)
mutated_mod['func_1420'] = func_1420
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1418_call = mod.get_global_var('func_1418')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_1593 = relay.TupleGetItem(func_1418_call(), 3)
call_1594 = relay.TupleGetItem(func_1420_call(), 3)
uop_1595 = relay.tan(call_1593.astype('float64')) # shape=(726,)
uop_1597 = relay.tan(call_1594.astype('float64')) # shape=(726,)
uop_1617 = relay.exp(uop_1595.astype('float64')) # shape=(726,)
uop_1619 = relay.exp(uop_1597.astype('float64')) # shape=(726,)
output = uop_1617
output2 = uop_1619
func_1620 = relay.Function([], output)
mod['func_1620'] = func_1620
mod = relay.transform.InferType()(mod)
output = func_1620()
func_1621 = relay.Function([], output)
mutated_mod['func_1621'] = func_1621
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
call_1634 = relay.TupleGetItem(func_1167_call(), 2)
call_1635 = relay.TupleGetItem(func_1169_call(), 2)
var_1644 = relay.var("var_1644", dtype = "uint8", shape = (169, 14))#candidate|1644|(169, 14)|var|uint8
bop_1645 = relay.logical_xor(call_1634.astype('int64'), relay.reshape(var_1644.astype('int64'), relay.shape_of(call_1634))) # shape=(169, 14)
bop_1648 = relay.logical_xor(call_1635.astype('int64'), relay.reshape(var_1644.astype('int64'), relay.shape_of(call_1635))) # shape=(169, 14)
func_287_call = mod.get_global_var('func_287')
func_291_call = mutated_mod.get_global_var('func_291')
const_1656 = relay.const([2.911707,-0.312275,2.812114,-6.856770,-8.822675,9.677093,0.558356,6.931453,-3.003604,-6.733460,-2.775939,-4.308264,-1.236065,1.961718,-5.765753,-0.743458,3.561478,-6.581684,7.247503,-3.347728,7.375520,-4.062311,9.996833,-1.422813,1.373893,-9.170335,-7.855710,-1.728526,-5.737552,-5.579198,7.858945,-1.698011,-8.482584,0.297164,-4.010071,9.270948,0.224109,-6.370788,9.923593,-1.766036,5.886496,-1.513445,0.738853,-3.231397,5.438511,8.460968,7.122511,6.291652,-7.490225,0.083262,-1.461673,1.751386,-7.449976,7.195581,-2.497901,-5.284037,-5.581460,5.624770,-2.504287,9.426462,-5.125628,-3.317961,9.993034,5.536070,-6.929106,-2.656256,-2.246968,-5.046364,2.544306,-6.122121,9.038741,2.336633,-3.789856,2.256317,8.586278,-7.308697,3.150514,5.498497,-8.278490,1.967832,-0.242772,7.791264,7.365693,1.008215,4.842413,-9.372290,1.349437,-5.168779,-8.707384,-0.971565,0.196580,7.992928,1.610458,0.845494,-7.133159,-7.205182,-6.729779,6.003753,3.794019,-6.423725,-1.614308,7.438608,-4.188671,2.636406,8.867202,-8.580331,-8.654246,-4.700474,5.952691,6.644594,-9.795615,-0.852906,-0.360289,-6.558864,-2.327251,-2.408990,3.260493,-7.914994,-2.332364,-2.095816,2.816843,-3.055947,-3.645579,3.109768,-1.328595,5.752819,-1.198150,7.473138,9.349556,-3.526881,-4.533305,0.523705,-9.037105,2.127540,3.012193,8.330550,9.070608,6.428525,-0.018018,5.760018,4.351525,9.503682,-7.009114,-5.367764,-4.381617,1.979132,-3.833556,-6.038462,4.737580,3.756886,5.370085,3.338888,-0.481990,-3.216402,-5.103100,8.682580,0.412576,0.997004,1.108503,5.612324,2.726018,-9.766666,5.121475,-7.120897,-1.182843,-3.207830,-0.433592,-4.790270,-3.719614,9.746857,-4.866769,-5.423744,5.639532,7.406203,-5.259428,-6.174798,-7.990635,6.618027,6.015873,-7.582201,7.585274,7.083665,-4.187324,-5.030474,6.532077,7.911644,-2.301600,5.966991,-9.089357,-1.932060,1.550447,-6.206080,9.501722,-0.722543,2.291780,-6.285391,2.150353,6.748082,-7.532625,-0.990148,6.294176,5.355214,6.738593,-1.215934,-4.622711,-3.489835,0.944370,3.969837,-9.914644,-2.863989,-4.026846,-9.516104,-2.076034,8.620288,7.315165,-9.733221,-6.236401,-0.879792,-3.758384,3.195295,8.745215,5.489201,-2.835685,2.032650,-7.018049,-3.708037,8.614161,-1.330092,-3.255973,-3.332252,2.225924,8.725746,-8.310254,0.076365,-0.840745,3.731944,9.245385,-5.966101,9.248920,-9.874298,5.599185,-5.577899,-1.390771,3.636971,1.817601,-1.251702,-3.346825,-8.871781,-8.174947,-6.618809,-0.370534,-6.356823,-4.816370,8.657899,0.121769,1.236889,-7.749906,4.996930,-8.793158,-3.764974,-7.030491,-8.418554,-5.557255,9.172572,-7.456411,6.383288,-7.645952,-4.805337,-2.728885,-3.470814,-8.218762,1.730252,-7.739549,2.831548,5.713730,-8.940967,-3.392823,-8.469020,4.511855,1.335341,0.734056,-5.367229,1.646704,-0.512915,-6.941867,1.011676,-5.080210,8.427169,4.610699,1.448591,-7.109464,-1.891873,-5.292686,3.001257,-0.455936,-4.492337,0.015930,4.388621,8.591168,4.875703,3.334632,-9.301081,5.926412,-1.260596,-1.654359,3.869956,9.632195,-5.239280,-6.274820,3.391139,-9.497624,9.743468,-5.412953,-8.692617,-9.736158,6.484741,-6.830408,-4.525448,0.750963,-0.936555,-1.232034,3.929628,5.707096,-1.216496,9.996289,7.354641,2.288001,-6.141252,7.851108,9.345350,-1.009660,0.033883,0.911649,-7.723734,-9.354255,-9.933256,-0.805265,-2.193409,9.215978,5.576986,-6.724574,6.248229,6.333742,9.881983,-6.440121,3.914020,2.341729,-1.088165,-0.712268,-4.062526,2.716823,2.290321,-1.589479,-5.224420,-3.709877,-7.696500,-5.681502,-6.347098,8.004080,-9.309471,1.393912,-0.719444,3.039179,0.559461,5.038096,-8.351552,-3.866731,-6.423367,-3.064395,2.304480,1.384849,8.530835,3.907246,6.438600,-8.052629,-5.607700,4.823312,-3.952730,2.113323,-3.819538,8.871271,-4.909452,7.792926,-0.861242,3.491221,-5.594085,-8.779465,-4.942285,-7.974253,-5.748842,1.613025,-5.538971,-7.696576,3.981931,-9.112348,-4.167152,8.559582,5.337725,-3.793094,-8.108262,0.555411,-7.439331,-7.520787,4.426056,-8.964946,7.775144,8.405745,4.366026,5.325204,5.339792,-5.700032,9.289602,-9.797919,-7.452033,0.457449,-1.701723,-9.158970,-0.071240,1.971948,7.959832,0.011615,-3.808826,-1.843318,-6.760315,-3.427292,6.390814,-5.849992,-0.252327,4.968094,5.323225,5.565838,-4.381872,-0.680137,0.165077,-5.110970,1.930638,5.564216,-4.149612,7.287764,8.676700,2.525841,8.861878,-7.825443,-2.415724,-8.320506,-3.423366,-9.364525,9.571516,5.426400,-8.810251,9.011931,6.157109,4.111635,-9.914509,6.110042,0.038806,-1.710008,-2.170526,-5.443503,8.091692,-6.887491,8.069403,-5.075787,3.828874,5.502243,5.053082,0.992032,0.246579,1.668365,-5.818528,-6.399764,6.266087,-5.070362,4.305761,-0.269119,7.690862,-0.266202,0.039516,-8.869351,-9.133498,5.823463,-4.887586,-2.998965,6.316532,-5.867796,-2.167641,4.213304,9.696275,1.878592,0.962061,5.082530,-9.585912,8.991096,-2.546440,-1.458443,4.360975,0.890568,7.362327,6.282540,6.905184,-0.082503,-6.959096,2.433117,3.502514,-3.328871,-0.511407,9.073137,8.343987,7.260328,-2.985165,-9.041205,6.216267,-8.450805,-3.840624,2.387560,0.377989,4.381872,-8.142092,3.262156,-6.079690,-7.648050,-2.382785,0.600222,-5.325820,7.218146,5.723154,-1.189922,0.757144,0.665618,-7.903339,0.794284,-4.574620,-2.621443,0.985658,-2.369301,6.329166,2.654184,-3.094687,-8.039468,4.860173,-7.229599,6.999481,1.471045,9.644419,-5.620781,6.802850,0.486245,7.593192,-0.941041,1.582794,-9.703935,8.176395,-7.386248,-7.322138,-3.163362,3.072162,-2.313204,5.874393,8.154261,-6.257423,2.401560,-0.392305,0.940523,-6.565942,-4.619191,-7.663544,-4.870242,-6.070862,-6.621510,1.213309,-8.410495,3.619688,-7.201372,-4.691557,5.889092,5.527432,8.636433,6.393726,2.550773,-6.647965,9.061347,-2.527047,4.152660,5.816201,-5.925645,-5.046779,6.758219,3.741726,1.069706,7.578759,1.363557,2.570420,-0.314202,1.603476,-6.000918,-1.493509,5.461280,6.474616,6.330980,-9.855171,-3.422564,8.804887,-6.379846,1.815788,-9.624644,-1.260964,5.426626,-4.403885,-0.439046,-3.045068,-6.939510,-5.257130,2.006006,-7.772958,-0.631817,-3.320824,9.370462,-0.355950,9.132544,6.540735,7.291842,7.398682,9.176961,-4.269961,1.125123,-1.959743,1.570183,2.383646,2.718071,-1.992311,-9.863159,-0.755076,-2.247833,3.482958,-7.394354,7.960258,-4.294812,-1.615074,8.122404,3.707078,5.263214,-3.530563,0.606071,-0.089861,8.417196,-1.339356,5.040432,3.135940,-7.465290,6.108754,-0.867239,-0.631444,8.046475,-7.764474,9.519387,-0.275279,-2.379806,-5.123389,-6.867122,-8.728792,3.288556,-1.511472,9.694268,-0.524133,-6.517868,-1.260172,-6.695940,-2.894264,8.570380,-8.889911,-8.379379,-0.223341,7.098410,-3.115497,8.376094,6.579875,-6.031808,3.791291,-2.103046,6.128934,-2.049717,5.696788,-8.439277,-8.393484,-2.210222,-6.381889,7.379636,5.271386,7.000530,6.241006,-2.147857,0.599974,-6.367810,-3.153135,-5.365561,7.909446,1.442649,-5.487566,-4.937233,-1.528172,4.883853,-7.751664,7.468381,-1.306835,4.038727,3.308183,-3.862034,-9.446282,1.218057,0.052048,-5.787952,-6.888146,7.113727,4.972151,-4.190636,7.523489,4.559231,-9.929768,3.974272,7.840312,-1.086101,4.671144,-1.207935,5.548157,-5.394951,9.189084,-1.261703,0.784767,-9.956069,6.297510,-7.639615,4.286598,-1.910042,-9.176120,-7.107838,9.020409,-4.717268,3.285306,-2.332211,-8.828918,-5.068843,-7.059735,-1.530186,-5.374042,-1.178391,1.077176,-3.184483,-7.015385,-4.584354,9.465937,1.531849,-8.871218,8.426041,-6.520209,-5.296084,-7.506858,-7.368287,2.437740,-1.612606,-2.634317,-0.167989,1.900023,-9.002646,0.486128,-7.985613,5.206562,3.389133,5.714288,5.547987,0.582378,6.473359,-8.867667,-7.340044,-2.960608,-5.278682,4.829972,-8.643784,2.443687,8.140817,6.423750,7.201877,8.185718,-4.510907,7.757565,-4.861868,-6.343680,4.153328,5.442386,-7.334518,-5.341637,-8.230692,1.651280,1.807455,6.979100,-1.679430,-1.576374,9.622521,-2.049597,2.903716,-0.701781,-6.422720,5.205558,9.028144,8.850021,-3.919945,-4.147859,-7.270101,1.466668,5.420337,-4.358552,3.501606,6.505911,-9.347873,4.106217,-9.596407,0.249151,-0.963156,-8.834020,7.618714,5.590969,6.937037,6.525365,-5.933595,4.621606,6.971518,3.269065,8.183313,-2.942138,-4.474524,9.134638,1.555777,-2.876217,8.616945,2.299092,-0.166556,-1.825274,9.213661,9.286195,-2.122400,1.245534,-2.954063,-8.298769,2.747583,0.316716,-2.144627,-4.608138,3.993972,2.508563,1.166276,-6.858035,-7.321332,-9.118206,-1.476517,2.817602,-6.180940,-8.234689,1.055768,-6.606062,2.766040,-4.036949,-4.380610,4.160899,1.201442,-8.203502,-9.800133,8.114962,9.514002,-3.583048,1.348996,-0.920768,-4.849905,5.301336,-9.886597,-5.176076,5.752952,3.158695,-3.457157,-3.762987,-9.488225,-6.965708,2.038570,9.494311,9.037112,-6.290988,4.599449,2.600363,8.587606,7.892885,-4.002619,-7.341622,-2.962941,-1.879122,-9.931706,6.063891,7.322731,0.552376,7.041858,-6.290712,-8.316944,7.812767,2.534667,9.274944,4.563394,-6.225487,0.626665,-6.131576,9.170523,-7.312420,6.759467,-8.635424,5.514468,7.136268,-8.747395,-3.307010,-8.115916,-6.728576,-2.594561,-1.978796,-9.097021,2.832622,3.992241,8.431863,-0.831078,5.671946,2.240838,1.938599,7.362620,1.922867,-9.416566,4.715877,-6.140491,-6.533076,7.693960,-9.894215,-1.887073,4.686613,3.700486,-9.403655,-2.919914,3.059830,7.737271,4.131271,0.234260,-8.537149,-6.734744,-4.237357,6.163613,7.884821,-5.797274,-5.574532,7.465346,-4.918360,-1.790250,5.747202,-3.905744,8.040885,0.162474,5.956876,5.237286,-1.941163,8.279793,-7.537486,5.479144,8.659554,-6.703980,-1.520038,-1.836676,-8.654700,8.971968,5.997429,8.292625,2.744132,3.821095,6.683306,-8.373299,-1.672460,8.735630,-7.655825,-3.350594,-4.855494,1.360807,3.355423,0.683216,0.750320,6.108048,9.670494,5.418395,1.445220,6.200055,7.780069,-0.470588,8.426552,5.611694,-6.074965,3.948760,-5.971683,-5.047914,-8.506854,2.528361,-1.453105,8.198752,7.055502,6.996304,0.669211,-0.610485,-8.887407,2.054634,-7.159231,-3.335708,-7.763235,2.149623,-2.600814,-8.787339,1.468423,-4.450647,-0.855035,1.696332,-9.832920,-9.371107,7.883860,9.775503,7.364893,6.258686,5.169042,2.764222,-6.062171,-7.213746,-4.435465,4.073893,-6.646918,4.624405,9.379084,2.419489,4.217739,-6.126780,-9.982917,0.624357,-4.131145,7.182267,-7.040360,5.706683,2.408808,5.090099,1.908595,7.552970,2.887334,-6.015682,-4.160336,-7.636649,-7.111020,-0.807674,-3.089441,-3.854167,1.515820,-7.251059,-2.632485,-7.814463,6.563065,8.253275,-7.142882,0.871909,-9.635738,1.330535,0.114455,-5.578223,-1.521701,-3.836288,-7.319534,4.580906,-3.781563,4.267214,8.252568,-5.259943,-0.561255,1.780268,-6.000935,-5.669257,9.506304,1.219079,1.465767,-8.680772,0.570438,8.085133,7.590216,3.656870,-8.036156,5.507833,-1.747265,4.698024,4.690028,4.287654,4.256938,-9.739902,7.070865,1.965043,-4.477295,-8.046642,-4.056064,0.804206,-8.133962,2.623836,-5.796897,9.485571,-8.060215,1.859107,7.126077,1.424353,-3.126698,3.332990,-0.630804,-2.879576,-0.335584,-5.269627,-9.345342,1.247211,-1.301421,-6.115613,5.289606,6.736317,-3.360197,3.563775,9.539732,-1.984923,8.570901,-2.854202,-3.601105,-3.624128,7.191295,5.945639,-8.681003,5.051923,1.423056,3.711412,1.029027,-6.593624,1.090533,5.186254,-8.722748,-6.110525,-5.815829,6.813600,-5.418135,2.901020,-7.653742,7.691446,0.246474,1.703117,-9.996896,2.271803,7.201088,2.863239,-0.052447,-8.481813,-7.033388,-8.073211,2.701256,8.737479,7.567671,6.519996,5.442947,-6.895660,3.895447,3.920972,7.038799,4.023953,-1.363195,9.177693,-9.396987,-3.920927,7.121576,9.864517,-3.691265,-2.747712,6.503035,-5.593263,-0.621159,-5.331038,-8.270177,-0.916242,-4.857474,1.811807,-0.018831,7.824207,-7.058171,-3.839635,-6.034445,-7.013715,-2.145989,-0.883184,-7.316716,3.650315,-4.741305,7.636998,3.601781,-5.871580,4.509028,2.819434,-0.625382,-8.725523,-1.673767,-5.608175,-8.188780,7.100181,7.272287,2.168689,-2.810683,0.385458,-5.476169,-0.126534,-6.842036,2.929958,-5.371544,8.130823,-4.417488,2.941336,-2.248530,1.609633,-0.275827,-9.021827,2.254116,2.298031,-5.364912,-6.851762,9.983835,-2.822543,7.376489,-8.510261,-4.286370,-2.662618,7.686277,7.734675,-6.836031,7.996102,-0.986708,-7.333430,0.771170,1.690592,-1.573792,-3.501331,-6.940698,5.296450,-7.789043,0.020527,-3.226787,1.901632,5.723167,2.029761,-9.781506,-3.476809,-7.083114,-0.647121,5.383174,8.046308,3.422103,2.767267,4.896971,0.122370,-1.710607,-4.477048,-9.408247,9.916042,3.792530,9.851683,6.618173,-4.831906,9.671530,8.185313,-9.655944,-1.638591,-2.998434,-7.544458,3.082829,6.230002,-5.810919,-5.591244,-4.438085,2.109691,-3.839131,2.285503,-7.451621,-8.572015,-0.892829,-1.147412,-6.211177,-6.825472,5.953579,-3.022226,-5.031747,-3.879868,-9.041895,3.655682,-4.731537,-0.206470,-7.861161,-3.511786,2.082810,-3.754989,-7.441668,-0.988493,8.487702,8.482979,6.620378,4.414124,-5.534972,1.441211,-7.386181,1.432184,8.385966,-2.215802,8.817954,-1.516527,9.363647,-3.090839,-1.110060,-4.145973,4.157846,-7.275782,-1.061997,-4.150413,4.578381,2.607184,-3.839131,2.224006,-8.087566,5.204099,-9.420544,-0.348358,-8.959156,-8.432084,4.457511,0.774981,-1.065081,-7.132695,1.623101,4.642063,-8.418116,6.988690,8.338723,-8.292287,-2.875989,5.275345,4.557795,-1.951687,-7.932173,-1.291371,4.429341,-6.230363,9.808403,-4.314119,4.584851,-4.389321,-1.983887,0.643469,-1.430631,8.846597,7.797607,3.029509,-6.155623,9.505496,-9.314769,7.189059,8.131485,-0.351669,-4.344420,2.473197,-5.597633,5.762075,5.165887,4.232987,-9.179422,-4.893987,2.791561,-8.406953,0.474115,4.407065,-4.402959,-3.281338,-4.474549,-5.311353,6.909470,7.246373,5.607550,2.093175,7.527552,-2.510496,5.406186,9.943357,4.657012,8.828024,2.886496,-4.158381,6.388771,0.229007,7.823637,-0.144184,-6.485028,9.571632,-5.989680,-5.604506,2.183687,8.516463,-8.269281,1.090413,-6.681760,-7.216994,1.574361,7.420100,3.735992,6.641081,3.467455,-9.005719,9.806257,5.739908,-8.577129,8.483823,5.789427,-1.968049,7.514389,8.679260,-1.272842,-8.005291,-4.275203,-2.811308,-7.638658,9.508364,2.563905,0.573593,3.441295,-0.469152,7.260175,7.614410,-7.054870,-7.491736,0.376857,-7.663294,9.960992,-9.682262,-4.758151,-2.302364,-6.997464,-7.406026,4.916682,-7.195531,5.650602,-3.280734,-1.954711,4.725925,6.792702,-9.166694,3.371508,7.967050,8.575724,-7.377292,-3.886681,6.525078,-3.372628,1.063087,9.859396,-5.046398,-1.630290,6.322151,-9.607029,-0.450678,-1.783405,4.076561,3.584710,2.841215,-0.684321,-4.304012,-2.255601,0.980818,-3.989277,-8.992742,-6.195284,-9.072199,0.756046,0.895032,-6.949604,3.743448,-0.750213,-7.306514,2.268020,2.878578,2.852682,8.991938,3.376684,5.640259,7.989857,9.596372,-9.128944,-1.646590,-5.438233,-3.210635,7.778457,0.299473,-5.437575,2.411190,8.710696,9.465160,8.135973,-3.905958,7.308150,-4.191898,8.619346,-0.761091,9.784782,8.697152,-5.776376,-9.419188,-4.444436,2.341781,5.347571,-3.321920,7.233056,8.679468,-7.559728,2.266129,0.329152,-8.666197,-0.911845,5.421468,-6.665233,0.391429,-5.501834,-6.156602,9.699994,4.058939,2.870858,-6.462387,0.086958,6.049919,4.951620,8.136938,-9.458466,-2.981772,-3.187367], dtype = "float32")#candidate|1656|(1536,)|const|float32
call_1655 = relay.TupleGetItem(func_287_call(relay.reshape(const_1656.astype('float32'), [16, 8, 12]), relay.reshape(const_1656.astype('float32'), [16, 8, 12]), ), 1)
call_1657 = relay.TupleGetItem(func_291_call(relay.reshape(const_1656.astype('float32'), [16, 8, 12]), relay.reshape(const_1656.astype('float32'), [16, 8, 12]), ), 1)
const_1658 = relay.const([4.293573,-4.412191,8.403613,-4.712699,-5.639647,-3.526616,-2.862692,1.907317,-8.996752,0.179098,1.097288,6.415664,-4.208492,-5.240037,8.217837,-8.690869,8.043666,5.081804,-9.431547,1.344689,3.544552,6.415043,-6.725108,-8.602975,-2.153125,-9.926609,-4.325051,-8.849067,-4.379350,-0.020306,-4.888646,-5.543608,7.780762,2.002551,-1.259613,7.921067,-5.791674,5.813892,2.808046,5.377608,7.284903,-6.428025,5.685531,-8.341404,1.373736,9.646706,-0.622209,6.326522,3.664937,8.507463,0.169045,8.713660,-1.044911,7.814331,-2.111655,3.634692,-8.143495,6.988410,5.392772,0.508748,-2.793978,-2.221595,9.603513,0.136276,-3.224639,-6.973774,5.019792,1.987189,-0.788732,4.632163,3.460295,-9.279803,-1.448951,8.684178,1.614853,-9.286968,0.683357,-2.521760,-8.063814,4.346812,1.710981,3.135954,0.514586,-0.701005,3.451301,-4.026613,-5.996487,-3.010385,-1.439677,-5.787724,-5.029297,-3.467155,-8.184241,-8.136067,-7.417845,7.007712,8.533853,-3.567812,-6.597919,-0.829512,-8.823077,-2.899175,7.762832,-8.918844,2.252364,-8.835316,9.124883,3.806377,0.656823,3.564821,-5.806858,0.273482,3.694114,-7.837920,-0.681505,7.923017,-1.429739,-3.770421,-9.456983,2.970998,1.958758,0.836256,-4.238909,-2.219007,3.603944,8.709663,7.617177,7.467595,-1.056254,-4.361750,0.818875,-8.110375,8.593358,7.318816,7.081139,2.640834,-8.929776,7.018246,-9.160306,4.119186,5.210229,8.227796,5.544271,3.003008,-8.134622,8.472949,8.217319,5.991656,-9.077316,-8.902770,-3.393424,-6.000407,5.552838,2.732228,-1.465019,4.785560,-7.991316,-5.870028,8.022884,5.360290,3.961292,4.946614,-8.015740,0.755473,-8.915868,-5.605015,-6.734265,6.114999,3.962268,2.908738,8.268899,6.587026,3.510218,-4.157815,-7.994670,-5.210538,-8.120375,-1.429295,0.925609,8.610744,-0.135452,-8.360759,-8.074417,-0.098309,-9.599810,1.070349,-6.237555,2.873853,-5.841916,-1.176814,-5.336526,-6.106516,6.269412,7.940211,4.816063,-4.657854,0.549240,-9.975277,-0.966648,1.433556,-3.422628,8.328600,4.472256,-8.075580,-1.775956,-1.077750,7.421731,1.444163,-4.309560,9.402524,9.369938,5.615831,-0.803801,-5.224895,-8.842235,-4.661288,3.873225,1.876189,-3.969588,-0.738986,-7.771380,0.037445,-3.482851,-5.994707,-3.484881,-1.455178,9.294673,-2.492492,8.154996,3.327148,-0.474037,-1.530628,3.686795,-2.765834,0.200501,-9.275363,-6.765195,9.319235,-4.288071,4.209140,-8.572540,-2.299408,3.972570,5.229798,3.378342,-4.100369,-1.279628,0.373538,-9.948143,-0.405794,7.132548,0.263839,-0.362293,-1.645501,2.767460,7.441784,9.499193,4.959675,-2.628419,3.776151,5.346317,3.364590,-5.847980,5.635518,9.046679,-9.846625,-1.790850,-0.325110,-2.677495,0.318795,-0.082760,8.684316,-6.998142,-5.210969,-3.497165,3.599989,5.075686,5.535421,2.362440,-5.012347,-4.559366,7.169680,-7.810664,-5.527560,-1.011617,-7.202188,-1.601290,-3.093663,6.289946,-4.353457,-7.845506,8.317853,-4.017380,8.334845,-3.840035,-8.448826,-8.799329,8.652253,4.769133,-1.207924,-7.114699,-0.681274,-7.440140,7.053236,9.672208,3.364557,9.914967,0.899149,-5.617709,-6.005765,-7.059110,2.601904,-8.908299,-4.945927,-1.805804,-9.352434,0.638741,-5.045479,5.801598,0.402197,8.120041,2.545472,-6.729604,-7.595636,5.486239,8.432820,-8.730444,3.406537,2.067616,-5.895245,-9.857002,-1.611340,-2.474492,2.710902,5.865746,-8.743532,-8.760824,1.864993,8.347684,1.945273,-3.114279,-4.612186,1.683527,-1.121448,1.284274,2.012738,8.885015,-9.714564,-5.525577,9.469447,-9.874889,-7.632665,1.978338,5.709441,0.965737,-2.482764,6.524690,-5.096807,-3.376259,-8.625728,-3.550266,1.409524,2.298224,3.630642,0.018965,4.493490,-1.666983,-9.591999,-0.388112,-0.484523,-7.025672,2.631234,-8.891027,2.410418,-6.598753,-5.764645,7.329128,-8.014525,5.351327,-9.738883,0.594965,1.921251,8.223604,6.850183,7.242022,6.229515,-0.803037,-8.123570,1.222510,7.463719,0.639778,-4.670820,5.406503,6.655057,-9.319546,-2.991949,-9.566949,8.264117,3.720781,9.978245,8.256094,4.349974,7.006438,-7.907662,6.277693,7.863914,5.516927,1.585857,-8.948048,-4.131519,-5.761272,-7.827693,-3.245505,-0.993951,9.747403,-1.626551,-8.473290,-4.219926,0.430209,-9.287907,2.175486,0.379061,4.478030,4.153370,-3.617048,-7.011452,-7.821807,1.198201,8.945344,1.825785,4.914403,4.141576,2.760160,6.954281,-1.681530,3.316740,8.566167,-5.011758,4.663738,0.421880,8.619622,-8.143141,-4.521262,-8.631359,7.106243,-9.423018,-5.056054,-1.797396,-0.166495,-1.202731,-2.520702,-0.198158,5.864073,-8.801430,-8.109204,-0.010559,-2.160372,-9.021049,-8.074912,-4.454191,-7.326387,-4.578736,-7.162992,-6.677544,-0.770502,0.817946,-4.196394,6.878087,-3.690658,-4.258698,2.691740,3.921944,1.197700,-1.391162,-1.173359,5.812291,-5.679363,9.099688,-0.261512,5.929913,2.220796,8.490894,-1.957152,8.359847,7.513978,6.567599,-6.093939,-3.219169,-4.093313,2.149749,1.084015,2.703833,-1.835656,-5.445679,-3.309228,5.316461,-9.860517,8.710139,3.610209,7.642345,-1.406277,5.973012,8.148385,-4.067115,3.831711,8.214138,-7.417901,-5.878642,4.915768,-0.796186,-8.368413,8.178222,-6.879602,6.343628,0.910853,-9.880326,4.741326,-1.954013,0.222376,5.840780,-3.510109,6.769351,1.302638,4.700679,-6.202499,8.479309,-7.935168,3.565485,0.302105,-3.468013,-5.200542,8.617387,0.902305,-2.603043,-2.806908,6.086744,-1.757717,-4.134642,-6.798132,3.725085,6.375461,8.972934,1.071054,-8.290328,3.119391,-5.949501,-9.897951,5.059706,6.653537,-4.915404,3.272086,1.782227,8.593972,-2.155234,9.833046,-8.196490,-6.985380,-3.717135,8.998908,-9.033988,-9.840389,-4.051784,-7.235062,-1.718532,6.177469,-6.453385,-4.251779,1.647490,4.267499,4.236919,8.375171,8.426572,1.387038,8.997449,-2.372483,2.701428,-0.725259,4.492795,6.627464,1.208245,4.917662,-5.957916,1.219668,5.381732,2.650482,5.272964,-3.045164,-7.833593,3.745564,-5.768652,1.721357,-5.815109,9.308289,7.997791,5.970890,-9.025835,-6.191621,-8.494930,-3.117326,-1.168281,-6.132892,-9.937144,-2.122091,-1.447168,-7.069996,0.981489,-2.475870,-8.238352,-0.788021,-8.921728,-4.836847,-7.030407,2.655524,-7.526032,-3.227663,3.374957,-6.147031,7.275785,-2.061284,-5.170237,5.776788,3.951839,4.917419,1.223133,7.657174,3.144720,-5.606397,-1.032410,-7.036623,0.978157,7.717290,5.234340,-2.338807,-2.004209,-6.579491,-7.084948,-5.842675,7.431535,2.099398,8.171330,0.468309,-4.521973,-2.805418,3.378450,8.655518,9.639387,-4.080069,-4.972347,-6.769541,9.316517,-8.372123,-5.396392,5.617978,-2.462162,-7.170529,1.770670,6.784638,-4.950190,-8.216634,-8.111875,-5.498862,-6.363754,7.872757,-8.714437,6.185487,-6.240679,5.530843,6.887493,7.680402,4.638653,8.567450,3.695046,-3.683721,6.197824,9.753630,-8.508064,5.334263,-4.706073,5.589697,-6.315373,0.309965,-4.178899,8.299458,2.443235,-0.399544,7.773279,-4.637682,-8.124627,-8.018362,3.328199,5.127897,8.828956,6.227275,6.591677,-9.169441,9.095358,7.359421,-5.452284,7.647002,7.095493,-3.913969,-7.702199,0.456381,2.462793,-7.656641,1.666844,-9.720477,-2.401029,2.845073,2.131563,-2.991185,6.645863,-0.793574,-7.393393,5.487107,2.265801,-9.630657,-8.768232,-8.522881,4.685695,9.146500,2.815772,-5.223827,3.982808,6.896980,3.894272,2.805568,6.718220,9.862158,-4.002863,0.103008,-2.629772,8.719521,0.669615,3.786479,-4.702090,-8.428002,-1.091546,2.218005,-5.325797,-2.908325,-0.158480,-1.850900,-7.841204,-4.636735,-2.717964,-7.100237,4.994717,-2.203522,-8.041166,-9.188537,-8.141450,-5.023162,1.985998,-3.226652,-1.133806,1.291371,-2.795559,7.865176,0.906849,8.007007,8.489499,2.258428,3.257197,-4.788908,7.463989,-2.430933,6.452958,-9.899923,3.694684,-5.314590,-4.933360,-3.864756,8.430003,1.180181,1.634308,-4.148023,-6.145939,-2.745125,3.588516,9.491092,8.868574,-0.011549,-6.428131,1.957322,3.841165,-2.826127,8.639837,3.515985,-1.690453,-7.128593,5.873349,-3.088685,-4.931779,-5.966599,6.686522,-9.117648,3.530338,6.819419,5.540363,5.709870,-4.425995,-2.952319,4.941613,-8.756932,-6.668500,5.154906,-2.299730,-4.176337,-6.943005,-2.661447,-6.161576,-5.910311,-8.223526,-5.388634,-8.028612,-6.513512,1.544742,5.934462,-1.416729,-6.047128,-9.842042,5.532983,8.532116,0.654677,-9.876246,-1.321923,-9.582408,-5.964261,-8.442276,-5.685837,7.570840,-3.902556,-4.605192,0.662078,9.327420,3.730798,1.660689,-6.804542,-2.965831,0.287287,-0.858591,-3.144572,-6.587830,0.233661,1.852782,-1.799956,-5.446230,4.229152,-3.964783,-7.232137,-3.504101,4.687282,-9.549529,-8.503436,4.359300,1.093648,9.876009,-6.485412,-6.427894,5.640143,5.452534,-3.338664,-8.526056,-1.916922,-0.354824,-2.481739,0.326054,1.494658,-8.402113,-4.601139,3.987911,9.499913,8.582497,-7.156186,8.867616,7.465349,3.842410,-4.956405,4.710466,-8.064985,2.214856,-2.310119,-8.380294,-0.217224,-2.597737,-6.181130,-3.474772,-8.320409,3.166979,-8.029256,-2.039949,-8.614040,3.901254,8.362151,9.575829,0.535431,8.830775,0.568022,1.215408,-6.705165,0.035463,5.632333,-3.022602,2.493856,-1.376892,-3.594320,-8.596090,7.703120,1.480899,-4.041716,-0.117978,-4.633912,-9.008799,-6.191548,1.724925,9.238642,1.524343,0.723977,-4.393977,-4.650099,-6.314380,-1.563280,1.480691,-3.690485,-5.984667,3.768329,-7.793174,-5.124142,-9.329980,-8.193836,4.095497,-5.120158,-5.360202,-5.195133,-7.964299,-3.972196,2.545799,8.652023,-3.829005,-6.547549,8.009592,2.146130,6.856962,-0.142859,-0.294508,5.644596,-9.995444,0.220423,1.044375,0.680720,-1.038898,-5.333992,-9.699471,-3.073522,-8.041769,-5.995485,-5.391400,9.486166,8.757067,5.432889,6.594482,-4.660013,-8.727497,-2.931059,3.389696,-3.065902,1.789811,-7.008872,-3.157844,-7.166424,2.780099,-6.930723,7.861073,3.563433,6.300620,-9.807356,2.881975,-0.316667,-1.803005,-1.048122,1.182864,1.340167,5.118186,-7.047418,-0.261824,-4.930443,4.292859,-4.033212,8.081250,-1.256239,-5.350735,2.400200,3.046318,-4.971720,-2.397214,4.129431,7.845483,0.562416,-9.569032,-4.031169,-6.555555,-8.641948,-1.386605,-7.611055,-9.823103,-0.044244,-3.633484,8.045381,-9.890155,5.854783,-0.624346,-0.713603,-5.225161,-7.728030,7.749469,6.075340,-8.041973,-6.856668,-0.260072,-7.972121,5.880050,-3.805366,-8.831527,4.654976,5.682644,7.128454,2.941820,3.858465,4.547383,7.976888,-0.865604,4.651978,-6.251750,7.249301,-1.844852,-2.002582,7.693294,5.003555,-3.337896,-9.009728,-5.551510,8.222808,3.840540,5.554010,-1.045015,7.685825,2.049943,5.674198,-2.757839,2.297640,-3.959054,-6.362558,-0.751496,2.721686,-5.900106,-6.416694,-9.669271,4.052707,-2.516758,-6.325873,5.117797,2.772199,-8.838192,-5.405429,-9.284989,-8.716798,1.769861,-8.125609,-8.855891,-9.023607,2.073555,0.914719,-7.936223,1.341104,8.483483,-8.796242,1.083142,-0.836464,-8.344851,1.291556,-6.748270,-6.728293,-2.612107,3.297404,-0.006995,-3.220112,-8.977719,4.812854,-4.941879,0.461342,5.787807,-1.014645,0.054170,-4.864493,5.135251,-9.587303,0.511732,-6.839528,9.165628,6.128536,8.501155,4.137386,1.353282,6.850175,4.689108,-4.980897,-7.891207,-3.068019,7.868276,3.396985,-1.296103,-9.936165,-9.660568,9.458128,-4.265152,-3.489760,-9.673866,4.792593,-2.351688,9.493391,2.727228,-6.875441,-6.755028,7.643663,-4.342567,7.447733,0.447874,-7.384841,-1.747230,5.312310,-4.369053,-5.152727,-2.879923,9.368360,-3.191341,-1.004606,-8.733058,9.065663,4.229975,-9.223497,-3.436592,-6.889907,6.648479,1.427209,3.510479,-0.411624,-9.313763,-3.413716,-8.091617,-7.910105,4.536197,-6.365219,9.061046,-7.109805,-3.835751,-3.005560,-8.720384,-5.211075,-4.387891,0.495041,1.878373,1.107395,3.714756,-7.688973,0.385648,-7.063401,0.909635,-3.600402,8.656043,-1.456347,6.041859,-2.317823,0.590609,4.532614,-9.313470,4.378478,-3.233219,-0.926040,2.976101,6.010595,6.797588,9.320602,-8.918130,6.131477,-5.078595,-6.701887,0.279958,-7.109106,4.477865,-4.223996,-7.314459,1.289018,-4.161777,-3.844824,-1.431929,6.287552,-9.637038,8.472535,-4.351159,-1.796526,-9.505673,5.677811,3.088164,-7.772350,8.481251,-4.607555,0.863567,0.612682,7.249014,7.694134,1.622820,7.748551,3.301884,4.447841,-0.264652,-2.691230,-0.271942,-7.734190,5.745941,-7.659524,8.175325,6.922340,8.515768,-4.773701,-2.518265,-6.971524,-3.091922,7.050843,-3.506918,-9.899817,-0.670462,2.032173,-8.533559,-0.637058,2.644321,-5.087470,-6.647396,0.066452,-8.527021,-4.732881,9.130876,1.930163,4.481757,2.137065,2.509050,-8.191661,-5.655127,-7.863540,1.560320,2.030118,1.456410,7.329287,2.031474,0.978549,-2.241650,-1.403394,1.309748,-2.577475,6.521910,-4.833995,5.069631,-7.754553,6.001579,-5.425880,-0.354766,7.243481,1.501472,1.970437,8.439577,4.137695,-6.691914,7.077048,2.648496,-3.016609,1.822221,2.063903,8.009521,-1.552915,-0.756378,5.299118,-4.479496,-1.562792,5.348487,-5.109034,3.567355,1.458130,-8.993850,6.439055,-2.499161,-3.711959,-0.889677,-3.241452,9.444566,-7.877777,0.956856,-4.326939,-1.830410,9.099749,-4.674549,-6.636719,0.061643,-2.080137,-5.375447,5.224900,9.969415,-1.126169,8.678245,-7.070927,-2.410165,-7.885341,-2.340997,7.417910,-4.508448,0.145022,5.038388,-3.892707,9.660083,-8.816312,-5.683383,-4.842298,1.472716,3.165519,8.777603,7.305286,1.474558,2.099016,6.095576,-5.977629,4.605324,-9.546712,-5.568473,-2.066731,5.265989,7.412655,-2.821127,-0.519749,5.122414,8.834026,5.046728,-4.461598,-5.411326,-2.966773,-9.933264,2.995736,-9.202450,-6.293433,-0.847521,-0.441702,9.064630,5.104254,2.923588,0.209163,-1.098838,1.830900,-6.639296,-2.907806,8.323497,-1.670184,3.331783,-3.461699,5.385113,-4.996428,7.557418,-2.352520,3.722696,-8.076404,9.368683,1.991467,-2.271304,8.050043,-3.223506,-0.946974,-7.738019,0.331263,-4.093231,-8.880480,0.613335,-2.073866,9.949740,8.656669,-5.682349,-4.624768,-0.564849,1.222451,-6.285618,5.765473,-3.556455,5.846526,-4.753423,1.180355,-0.585295,-5.841365,-6.626554,-4.877535,2.752214,-6.459228,8.119882,3.491495,-5.191636,8.435782,9.456236,6.885040,-9.397849,8.655781,-8.890733,0.085050,-6.108391,-3.959110,-1.387201,-6.676898,-1.671240,-1.437605,5.675222,6.147412,-7.498969,1.809933,6.234446,-9.331413,3.948159,-7.995323,-2.808147,-8.652256,-1.344957,0.092804,3.437134,-3.665601,8.178293,6.882714,9.309354,-3.258166,1.134530,9.338294,7.877109,-3.863132,8.445512,-0.714172,0.425973,-4.804564,6.973388,-0.713585,-2.093368,-2.695682,4.437536,-0.309311,8.331789,1.638325,-8.615769,3.511296,-8.045892,-9.302935,7.877500,4.197190,7.113428,-2.934806,3.325830,8.481921,9.469023,6.380047,-0.009996,6.310500,0.511327,-8.357150,-5.335663,4.414286,-8.012052,-3.953344,-4.470073,-0.472715,-6.627069,-8.174981,0.377001,1.658973,8.107099,-7.986579,-1.635649,6.762491,-2.436591,-2.915157,-5.923654,0.076835,3.036298,-8.351434,9.335197,-0.052858,4.750278,7.649077,-0.455444,6.230032,-5.108317,1.981247,-8.153758,-1.897843,2.903527,1.122942,-3.770847,-6.325818,-5.862967,0.832376,3.950279,4.014651,-3.924395,4.467678,7.628461,-2.654276,-5.268936,7.524385,4.970800,1.675315,-9.731089,-2.372566,8.297253,-9.073256,8.887062,0.941921,3.707998,8.051954,-2.004314,1.562034,0.228578,8.964796,8.528295,-6.734112,-9.048635,2.695181,-1.450643,2.672619,-0.763356,-0.166938,7.777076,-2.113411,-6.307384,-7.882313,3.148695,0.746193,6.751220], dtype = "float32")#candidate|1658|(1536,)|const|float32
bop_1659 = relay.add(const_1656.astype('uint32'), relay.reshape(const_1658.astype('uint32'), relay.shape_of(const_1656))) # shape=(1536,)
func_1620_call = mod.get_global_var('func_1620')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_1685 = func_1620_call()
call_1686 = func_1620_call()
func_382_call = mod.get_global_var('func_382')
func_386_call = mutated_mod.get_global_var('func_386')
var_1702 = relay.var("var_1702", dtype = "bool", shape = (84,))#candidate|1702|(84,)|var|bool
call_1701 = func_382_call(relay.reshape(var_1702.astype('bool'), [14, 2, 3]), relay.reshape(var_1702.astype('bool'), [14, 2, 3]), )
call_1703 = func_382_call(relay.reshape(var_1702.astype('bool'), [14, 2, 3]), relay.reshape(var_1702.astype('bool'), [14, 2, 3]), )
uop_1717 = relay.acos(var_1644.astype('float32')) # shape=(169, 14)
func_1418_call = mod.get_global_var('func_1418')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_1736 = relay.TupleGetItem(func_1418_call(), 1)
call_1737 = relay.TupleGetItem(func_1420_call(), 1)
output = relay.Tuple([bop_1645,call_1655,bop_1659,call_1685,call_1701,var_1702,uop_1717,call_1736,])
output2 = relay.Tuple([bop_1648,call_1657,bop_1659,call_1686,call_1703,var_1702,uop_1717,call_1737,])
func_1754 = relay.Function([var_1644,var_1702,], output)
mod['func_1754'] = func_1754
mod = relay.transform.InferType()(mod)
mutated_mod['func_1754'] = func_1754
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1754_call = mutated_mod.get_global_var('func_1754')
var_1756 = relay.var("var_1756", dtype = "uint8", shape = (169, 14))#candidate|1756|(169, 14)|var|uint8
var_1757 = relay.var("var_1757", dtype = "bool", shape = (84,))#candidate|1757|(84,)|var|bool
call_1755 = func_1754_call(var_1756,var_1757,)
output = call_1755
func_1758 = relay.Function([var_1756,var_1757,], output)
mutated_mod['func_1758'] = func_1758
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_1794 = relay.TupleGetItem(func_1183_call(), 0)
call_1795 = relay.TupleGetItem(func_1185_call(), 0)
func_192_call = mod.get_global_var('func_192')
func_194_call = mutated_mod.get_global_var('func_194')
const_1813 = relay.const([[-9.587377,-2.091331],[1.325260,-6.738037],[6.150979,-5.428928],[7.932080,-4.519886],[-0.160886,-1.090869],[-5.062923,8.637504],[3.151141,-3.773311],[-8.176732,9.566547],[-8.391275,-7.578287],[8.419804,-8.272686],[0.555699,-4.884958],[8.531691,-3.806974],[-0.251221,0.230441],[-5.167340,-4.030920],[5.472128,-4.973138],[8.964319,0.759882],[3.246774,7.593329],[-5.915667,-2.386629],[-8.808997,-9.710906],[4.075339,5.086649],[2.303239,-9.782441],[-9.149865,-8.213145],[-5.410902,4.305664],[-5.867050,2.498209],[-0.553072,-0.536204],[-5.773474,3.028301],[-6.366304,0.602446],[-0.413169,2.173109],[6.317651,-9.169150],[2.811053,1.727446],[7.023304,2.923101],[9.707776,5.117975],[-6.252990,8.164241],[-2.854056,3.433787],[-9.441337,4.005754],[-0.326490,9.804557],[-2.058998,3.407183],[-8.445545,7.331152],[9.161202,9.514601],[-2.904395,-3.711929],[6.774458,0.469046],[-7.502348,-0.236119],[6.043963,-7.337648],[-4.096280,8.552604],[2.600043,-2.224923],[-5.197925,0.638919],[1.723620,-7.983497],[5.711205,-3.905798],[-7.377216,1.863485],[-0.301045,-5.052033],[8.686428,3.593548],[-3.309362,-8.033104],[4.717999,4.210772],[6.388151,1.592851],[9.134685,-3.390111],[9.753376,3.984165],[-2.798547,-9.533823],[-5.536847,9.803280],[6.713351,-8.869664],[1.457488,1.490168],[9.921889,-3.930059],[3.599962,5.578246],[-2.172493,-2.893119],[-7.021654,9.731863],[-9.238435,-4.878501],[-9.591278,-2.130920],[-1.268177,9.314096],[3.443804,9.987114],[4.305589,4.922406],[3.022515,-6.238603],[-7.777494,4.744300],[-6.238941,-1.983831],[6.621306,-1.997020],[-4.831049,6.589184],[1.811348,-4.740336],[-1.233201,9.136985],[-2.437069,-7.849922],[-5.355500,1.335581],[3.293806,2.366702],[8.588533,-4.619222],[-9.027031,3.050715],[2.114601,-9.831221],[0.632533,-4.594344],[-8.152893,-7.441870],[-3.654596,-5.425654],[2.521214,-2.274087],[9.320022,-7.723742],[0.420465,2.559723],[1.921784,-7.755735],[1.343840,4.402032],[5.539874,-4.280537],[-9.549955,-1.969907],[-3.664786,7.823843],[-2.621494,-3.029713],[9.050761,9.722925],[-2.724581,6.970640],[6.164686,-4.978103],[-7.208641,3.015872],[2.239993,0.184171],[-4.498975,1.299420],[-2.036897,-4.410049],[-8.728164,-0.399959],[-1.155857,-7.807935],[-2.048055,-9.324739],[1.441396,6.752072],[9.975034,1.409715],[-1.681361,-6.213972],[3.068272,5.496812],[-1.921337,-1.638600],[8.319609,-5.906329],[-3.539291,-6.438054],[-6.733675,-2.668991],[5.491167,7.853898],[9.241946,-8.449389],[5.796311,-4.992635],[-0.582831,8.336124],[-2.680903,0.293433],[-6.017462,6.787393],[-4.513789,-0.585835],[-6.902622,-3.907743],[-5.114674,-9.334853],[-8.898397,6.669391],[1.340562,-5.659963],[-8.856960,-4.349982],[-3.200560,-5.951857],[-9.577552,6.603662],[1.934835,8.916090],[1.459221,6.878003],[-9.721132,6.670804],[-6.547289,-8.821148],[-1.194069,0.290913],[-4.139338,3.436576],[1.438066,-5.603810],[6.767600,-6.347687],[8.970017,3.644913],[9.064260,-6.133235],[-2.082430,0.742618],[-0.228980,5.053096],[-9.790347,0.968062],[-9.005937,8.766109],[-7.003298,2.293922],[-6.562739,-8.022157],[-0.598269,-2.118434],[2.489966,4.896057],[-5.466752,-6.293329],[-4.106505,0.061505],[2.047276,-0.218130],[-3.270869,1.838434],[5.532278,-0.595999],[9.549103,8.861446],[-6.262994,4.171134],[-9.493049,-1.734021],[4.103314,0.158835],[-4.188623,8.204524],[-9.085711,6.016304],[2.598295,5.656777],[-0.353145,-3.970816],[4.901683,8.537621],[5.067616,9.983033],[0.702860,-4.886525],[-7.682142,-2.541928],[9.303403,-3.501993],[9.695739,-2.679387],[4.391035,4.150986],[9.581815,8.110994],[1.584139,5.435715],[4.527249,-6.221948],[-3.102764,-4.075828],[2.128805,3.973460],[-9.723903,-4.251453],[9.167733,-0.425731],[-4.371395,-6.980566],[-4.643941,-8.855084],[-9.431950,-5.845923],[-9.025002,-1.154023],[-4.263612,-4.339224],[-4.633954,-2.560621],[9.122461,-8.370922],[5.654412,5.026190],[1.699431,8.588612],[4.001387,3.763893],[6.567934,-3.773104],[2.214150,-7.381823],[5.834767,3.780403],[-0.562227,-5.943263],[-0.113093,6.588076],[4.220043,0.685300],[-6.973629,-6.806207],[1.815512,-4.197676],[-7.646080,-8.287615],[0.555415,1.923069],[4.603550,-5.557711],[-2.256454,-7.535305],[-6.608695,-0.806685],[-8.170950,-8.046048],[-1.297242,4.143172],[-4.059743,1.132254],[-8.515572,-7.123849],[-1.522784,-1.971654],[-3.383348,-4.120764],[4.264533,0.405329],[-4.157913,1.034363],[-7.573880,9.647210],[1.344701,-9.496229],[-4.787097,-4.422033],[4.529794,1.936831],[-5.274243,-2.775583],[-8.300510,1.451357],[7.389616,8.229963],[-4.915215,-0.852131],[-1.092817,9.128708],[-0.250310,-2.062126],[2.056438,1.499387],[8.674235,4.033171],[-2.661555,5.949950],[-2.066465,-9.437412],[3.026046,4.041481],[7.336521,-4.332534],[1.094186,4.042760],[3.430192,1.533189],[-9.216360,-0.442359],[2.741229,2.857399],[5.679553,-1.362339],[1.649074,3.637385],[6.706731,-8.838613],[-0.546834,-1.774777],[-4.026837,-6.701704],[4.674678,6.647635],[-6.780076,-1.086721],[5.949049,-1.949635],[-6.872830,-9.035569],[0.162914,-3.968452],[-9.074271,5.613248],[-9.755555,-1.882862],[5.117601,-2.663917],[-0.206133,-9.790222],[1.703475,-1.305908],[-2.643659,1.371656],[-8.623156,-3.833493],[3.448281,-8.200074],[3.648800,6.296610],[1.658250,0.499844],[-4.371179,-4.361367],[6.882180,7.229656],[8.446653,2.548480],[-7.341035,-2.590479],[-7.153874,9.716079],[5.075314,8.002265],[8.525173,-8.078706],[-1.717180,-4.557240],[-8.035492,-0.661272],[4.114256,-8.002599],[9.651039,3.161519],[8.394131,-3.478075],[-1.670387,7.928838],[2.418206,1.362642],[7.681138,-4.390793],[4.890308,-8.079595],[1.359022,4.732709],[1.078541,4.889429],[0.321012,-4.396160],[-5.198484,-8.211504],[-4.228274,-9.146571],[-5.978718,3.075594],[-6.597750,4.440589],[-5.232964,8.916560],[-9.530671,-3.822307],[-6.027892,5.538616],[-0.476234,-4.597973],[-4.491673,-3.990430],[5.224908,3.375627],[-0.185094,8.232760],[-1.294548,-1.174525],[9.751574,-7.854671],[-0.133697,7.014889],[-4.457702,-2.595744],[-1.598318,4.173794],[7.676106,-9.464003],[-8.693213,-8.106268],[-4.394136,2.984229],[-0.450325,0.670724],[1.163227,-0.146499],[-0.480080,5.883078],[-6.434108,-3.552135],[-3.209564,9.883056],[0.710836,-9.852942],[6.676125,-6.442177],[3.810784,-6.598559],[3.661487,9.473391],[7.460261,-4.324116],[4.973524,-5.868710],[2.653083,-1.292603],[-2.852437,5.474446],[7.047141,-5.506361],[-5.863496,-1.834395],[-7.321625,6.841454],[-2.904204,7.021816],[-9.627312,-1.278368],[1.855692,7.224457],[1.707982,-6.743811],[-4.733543,0.515511],[-5.834392,-9.476825],[-9.081647,-5.547986],[-6.186279,-9.704953],[-0.811538,-7.804796],[7.362030,-2.430439],[-2.149665,5.952537],[2.236614,3.939361],[3.307225,-5.201323],[-0.225320,-5.005751],[0.369079,-2.079919],[-0.955975,6.612147],[-0.003209,-3.933600],[-9.690250,-1.070734],[-0.233284,-4.713052],[6.600353,2.034682],[-3.240567,-2.483702],[0.122173,9.386794],[6.055274,-9.657303],[-7.544071,-0.397999],[3.327519,-1.756357],[3.018048,-7.257900],[-1.191537,-4.455277],[0.753475,-7.129563],[3.017212,-1.030678],[5.829383,2.017570],[2.370558,-9.265280],[8.432833,-6.905208],[0.567957,-7.740817],[8.531272,5.760778],[5.842705,-6.239707],[0.757230,-1.133121],[1.522971,2.648518],[-0.488864,-0.042067],[-1.394697,0.320108],[0.175589,9.283584],[-7.117673,-5.161459],[-7.684266,3.859807],[2.035386,-9.074774],[-2.505435,0.111672],[-8.965477,-8.802218],[2.648840,-6.766047],[-8.896507,-1.109360],[-7.234030,-8.448833],[7.255701,-3.695243],[-1.201634,-4.458751],[4.130120,0.089629],[5.468534,-5.148524],[5.094508,8.439750],[4.334083,9.987577],[1.538450,4.665732],[5.763472,5.946623],[-7.793752,-5.787054],[9.429108,-6.844304],[-4.778735,2.487704],[-6.345344,7.417839],[-5.422316,9.618185],[-7.279740,2.303989],[-9.584220,4.551073],[7.082455,-9.580860],[6.135018,-3.085950],[7.523143,2.541483],[-3.572796,-4.022629]], dtype = "float64")#candidate|1813|(363, 2)|const|float64
call_1812 = relay.TupleGetItem(func_192_call(relay.reshape(const_1813.astype('float64'), [11, 11, 6])), 0)
call_1814 = relay.TupleGetItem(func_194_call(relay.reshape(const_1813.astype('float64'), [11, 11, 6])), 0)
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
const_1818 = relay.const([3.127470,-2.215416,9.141588,1.633761,9.279636,-9.893953,6.073691,2.577020,-7.197212,8.557894,-9.294716,-5.440572,-3.563143,-6.743914,5.368550,8.746418,-4.510349,-7.480459,8.487035,-3.725256,-9.597424,3.079586,-5.495998,8.758587,-3.892279,3.294293,6.768115,0.957871,-3.399963,2.703911,-0.183277,-6.404197,9.703404,-8.674468,-4.574058,4.944098,-8.145366,7.695320,7.945497,0.524847,4.681657,-5.728487,-3.193155,-6.249927,8.701888,8.706434,5.849934,-9.268873,-2.708574,1.247502,0.807864,5.910551,9.612722,-5.640731,-4.761018,-6.396605,3.938080,-2.019707,9.255158,-4.095795,6.637763,-4.965340,7.778135,5.063960,0.834342,3.990419,8.128307,-0.847491,6.834501,9.486250,-9.234544,3.984146,-1.832760,-7.099456,3.017671,0.121923,-2.159332,1.393087,-5.331242,8.312181,1.567895,1.313569,-0.948591,5.999886,-0.186256,9.832018,-9.042070,-5.911092,-7.029445,-4.800147,6.484846,-8.824336,2.082135,-0.534385,-0.362324,-9.780651,-3.359093,-1.161587,4.364104,-9.059540,-3.564083,5.827698,-7.450624,-3.932219,-6.810177,-9.888927,-9.047425,4.923513,-9.866311,5.607636,5.939085,-7.020782,6.537987,-2.570417,-3.808246,6.718087,-2.693796,-9.976221,-9.595460,-7.745203,2.426167,5.142316,3.986898,-7.762219,-5.567814,2.861587,5.383638,9.976475,-2.619069,0.279697,-0.929136,-3.524694,8.466258,6.822150,5.881383,-0.704103,4.034143,-8.873949,-5.457635,-1.041442,-7.921766,9.898151,-9.668964,8.536393,-8.014382,4.062154,6.397318,-6.187891,-1.235223,-1.407076,4.431913,4.739635,-1.519615,3.650209,-8.757682,0.649448,4.837205,-1.816254,3.369503,3.933796,-9.628002,-3.282203,-5.737267,2.646371,5.187366,-2.277408,-9.428786,2.321246,7.671569,-1.254636,-2.816216,-6.174147,-8.982134,8.386661,-6.231468,8.932998,-0.002796,-4.728120,-8.096679,9.315112,-6.887326,-2.223012,3.390834,0.791528,2.652577,-4.458807,-5.336207,4.734076,5.488134,-2.928210,8.338508,6.881106,-9.127317,-8.229067,0.302342,-3.967962,4.395132,-9.702771,-3.555303,7.049307,9.277624,9.814619,3.325817,-2.348186,-2.556091,-7.953886,7.859777,7.002361,-6.421171,-0.002624,4.807112,0.296800,-7.090937,-6.271999,9.852175,-4.248105,0.253323,-9.058004,-5.200452,-0.720199,-3.523180,8.899832,-4.918428,1.648810,-2.219604,-5.369618,-1.671763,2.232069,4.255550,5.695071,8.847765,-6.284961,3.599171,9.007532,2.154111,-6.365296,4.119415,2.107139,-7.068164,-5.114481,8.798053,7.599182,-6.910689,-1.453772,-2.091529,-5.458105,7.410806,-2.346437,-0.222570,-9.930054,2.338082,7.381990,-5.908890,-2.544742,8.656214,-8.542747,2.581519,-0.072784,-9.609240,-5.812812,-4.249099,-0.084233,9.919728,-0.649634,3.245042,6.588262,-8.327652,4.557545,-7.281778,1.830630,-7.740908,-6.756467,0.594210,2.785841,8.342563,-8.412369,-5.218054,9.589534,-5.699876,9.737650,-8.554174,-2.148692,3.113779,-4.884364,-8.038871,9.995913,4.396804,-5.480744,-6.924327,-2.920940,1.410009,1.087909,2.281851,3.382016,2.918834,0.238094,-6.970576,-4.901397,7.237415,1.798593,-0.069671,-8.458325,-7.649525,1.036159,-6.264885,-0.233850,-5.525252,-1.399933,-7.246823,8.212552,-5.279154,5.046257,2.423871,5.861215,-5.845682,-7.019775,5.933814,-5.265362,4.899591,3.797171,9.265146,-7.629838,1.590973,-1.898049,-2.298983,4.555807,-9.267835,0.030514,-3.334387,8.493159,2.954819,-2.760242,-5.148786,-4.551821,-1.344454,-9.612088,5.203041,5.238268,6.791120,-3.327238,-0.207325,-9.478923,4.696466,-5.177035,-4.829018,-9.252889,2.319313,3.395739,-9.441686,6.538215,6.074018,-6.863869,-6.754583,9.680290,9.793330,-1.259934,-0.784673,9.768692,-8.888306,9.687854,2.198560,2.377391,-4.381028,-9.325321,-3.395521,2.395550,7.500350,6.895514,-2.550393,2.859230,-0.127757,7.964272,0.053645,-6.849873,-8.277417,-6.159262,-4.376496,-6.536247,-4.626030,4.045652,-9.502751,-4.054788,-5.238764,-6.307568,1.618409,2.668690,5.188578,-1.522136,5.501538,-1.010680,-9.206629,1.851408,-0.275524,-9.144955,-2.306357,-7.878967,-5.712802,5.679199,-3.954562,1.238573,4.034127,0.981420,9.917004,6.578778,3.069209,-1.479973,4.887640,-8.887703,0.652333,-1.147056,-9.304525,1.123972,-5.511341,7.190366,-7.721863,-7.952900,4.535527,-0.898004,4.742691,6.943877,4.725734,-8.988425,9.138875,0.819889,3.874612,9.785242,-8.616035,2.975185,7.481114,4.330187,6.127230,8.075361,7.000960,-7.643651,-0.923564,3.269155,3.550057,-6.774506,-9.932322,-7.312386,6.308373,0.868837,-0.328702,-2.644556,-6.473465,5.949360,6.398493,-1.077479,-4.574725,1.362157,0.426403,-9.295609,5.618399,8.658638,-7.864522,9.127586,1.472533,1.342976,8.749972,9.960061,5.847674,-5.695961,-1.643871,-8.889424,3.249903,9.752032,-6.155089,7.427166,-2.463111,-5.504966,-8.195896,-7.069801,-8.392611,8.013212,-4.325706,6.979882,4.676824,-4.360537,6.692517,-3.095965,1.356579,7.458942,-3.986982,8.169051,3.899097,9.590757,1.419487,-5.218405,-3.353419,-0.155280,-9.154168,-5.462178,8.263438,4.053625,7.554708,0.083750,5.462186,9.457987,7.703519,-3.060054,-4.813574,8.076691,-3.492026,9.331320,6.833149,7.907092,-2.159542,-7.300343,-6.606626,-9.028953,0.828431,-6.227153,-0.305984,-9.750056,-2.872479,-1.935999,9.610823,9.475561,3.888958,-5.637656], dtype = "float32")#candidate|1818|(520,)|const|float32
call_1817 = relay.TupleGetItem(func_102_call(relay.reshape(const_1818.astype('float32'), [8, 13, 5])), 2)
call_1819 = relay.TupleGetItem(func_105_call(relay.reshape(const_1818.astype('float32'), [8, 13, 5])), 2)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_1832 = relay.TupleGetItem(func_1271_call(), 0)
call_1833 = relay.TupleGetItem(func_1273_call(), 0)
output = relay.Tuple([call_1794,call_1812,const_1813,call_1817,const_1818,call_1832,])
output2 = relay.Tuple([call_1795,call_1814,const_1813,call_1819,const_1818,call_1833,])
func_1836 = relay.Function([], output)
mod['func_1836'] = func_1836
mod = relay.transform.InferType()(mod)
output = func_1836()
func_1837 = relay.Function([], output)
mutated_mod['func_1837'] = func_1837
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_1873 = relay.TupleGetItem(func_1271_call(), 1)
call_1874 = relay.TupleGetItem(func_1273_call(), 1)
var_1879 = relay.var("var_1879", dtype = "float64", shape = (15, 14, 6))#candidate|1879|(15, 14, 6)|var|float64
bop_1880 = relay.divide(call_1873.astype('float32'), relay.reshape(var_1879.astype('float32'), relay.shape_of(call_1873))) # shape=(15, 14, 6)
bop_1883 = relay.divide(call_1874.astype('float32'), relay.reshape(var_1879.astype('float32'), relay.shape_of(call_1874))) # shape=(15, 14, 6)
var_1907 = relay.var("var_1907", dtype = "float64", shape = (15, 14, 6))#candidate|1907|(15, 14, 6)|var|float64
bop_1908 = relay.logical_xor(call_1873.astype('int32'), relay.reshape(var_1907.astype('int32'), relay.shape_of(call_1873))) # shape=(15, 14, 6)
bop_1911 = relay.logical_xor(call_1874.astype('int32'), relay.reshape(var_1907.astype('int32'), relay.shape_of(call_1874))) # shape=(15, 14, 6)
func_192_call = mod.get_global_var('func_192')
func_194_call = mutated_mod.get_global_var('func_194')
const_1931 = relay.const([-8.982479,4.840433,1.178723,3.422457,8.813339,1.749420,-0.898874,-9.816703,-2.988050,4.084200,3.471731,0.328911,6.223848,8.789243,6.324290,-8.895926,-9.022740,6.613713,-4.135207,1.231004,0.166028,3.221431,1.179843,-3.042542,-1.431356,0.069175,6.147766,7.876477,-5.767474,7.733159,6.950976,5.880605,-6.310489,-7.337566,7.104577,-6.182772,-3.029054,-7.160330,4.207875,6.393436,7.662810,-3.804125,-1.650344,3.982543,-1.013786,-1.160167,-9.197731,0.181807,-2.342805,7.268177,1.047888,4.456826,3.057686,3.496953,-6.978954,0.622407,6.497462,-0.357751,3.926725,3.701509,0.303325,5.419338,9.981157,-1.747812,-0.379040,-3.565931,1.105876,0.774580,4.228914,0.951180,-9.600084,8.601793,-8.762321,8.437443,-9.940812,3.505810,-9.132314,4.499263,1.502222,-6.460963,-3.566659,0.696266,-1.430493,-6.828279,-7.497761,0.622085,-3.759520,-9.487412,0.705223,-0.736014,-0.566268,7.693476,6.953464,2.739957,-0.251840,-3.857612,-5.926637,-0.097753,0.639339,-2.469457,-9.382844,-7.749278,7.063016,-2.618801,-7.718412,-1.528189,-0.136161,8.154397,-3.433692,0.523753,-3.981550,7.453348,4.379273,2.194671,3.920890,-5.582362,-9.017348,-2.935152,-6.220083,-7.608143,-6.385290,5.899259,-7.025322,-6.165628,5.679610,3.408700,5.145172,-7.537548,-8.140948,4.834498,-6.189482,2.505709,-5.774649,-9.317821,-2.608626,3.739144,2.706230,-7.559936,-5.563473,-1.093208,-7.999727,2.032598,9.339999,-0.566749,-3.433144,5.039758,-7.506253,6.479482,-6.929400,9.733062,-8.571221,4.456867,1.009489,1.366960,-3.905945,-8.979709,5.313939,8.622541,9.965028,-5.511049,3.539452,-3.087412,-9.481479,7.840467,9.884655,-9.133267,6.235414,8.170057,2.051271,-6.927391,8.403470,-8.867368,0.065610,0.013215,0.706590,-5.925695,8.269303,-7.805255,-5.605414,-0.940123,-0.900121,6.965521,0.907851,4.983515,4.404483,-2.683979,-6.819000,3.082675,-9.570355,-3.834745,-3.849411,1.699893,-9.840719,8.979372,5.819562,-4.692728,-3.841636,8.474570,6.534106,-4.999870,9.484979,4.786836,2.246093,1.788026,8.340340,-9.665459,-9.188747,3.421984,9.939741,7.975014,-5.177325,8.796309,0.641575,-5.583580,1.979933,9.421354,-6.167161,-5.239358,0.436192,6.238568,2.960769,-2.241948,9.003645,-1.905597,-0.620455,6.926121,-6.828676,-2.656525,-0.187636,-3.733712,1.570820,-0.413110,-1.036739,-5.144499,-6.909616,-0.448956,5.784666,5.988508,-9.067048,6.678102,2.088574,4.887537,1.947081,2.068093,9.284083,2.375015,1.229315,-7.774261,-4.193039,6.954761,-1.301990,0.942334,-1.851825,3.264669,-6.206264,1.685763,9.018354,8.910961,-8.408463,-0.268798,-2.259352,7.743772,1.154154,8.851534,-3.534857,-3.399321,-9.522287,-6.739587,-0.630205,5.154480,-0.466168,-9.224263,-9.946031,4.684598,-6.595634,-7.447569,2.059365,-5.870141,7.177519,0.195341,-3.466101,-5.224964,3.716521,7.533086,-7.990004,-1.018049,-1.359806,9.332051,1.710492,1.810883,-9.338226,-8.072177,7.671375,8.582738,7.695654,-5.630214,-2.015411,-5.540589,8.562290,-2.116035,2.392895,1.307431,1.626288,-4.194320,0.846862,0.316881,4.991968,6.735405,-9.887605,2.269532,4.851938,-5.702402,-0.224185,3.031417,-1.645172,-6.455653,0.810427,7.844052,-1.800870,0.788471,-6.340610,2.177148,-3.517537,-7.002361,4.745433,-1.396265,-4.974212,4.666160,-3.379688,-2.148588,-8.615720,-3.081183,-0.492102,-2.490326,4.281798,-4.056389,-9.333922,2.430973,3.019265,-6.910251,1.870529,9.172794,5.206999,-7.749830,-5.231417,-8.972278,1.816397,-5.794166,6.230267,-7.335798,-5.044664,-6.146141,3.594702,9.776093,6.250643,6.324609,1.495953,-6.099094,3.952091,-3.826421,-1.382436,-4.369574,7.807923,4.598572,-6.582712,6.422841,9.804112,8.953664,7.040371,3.158742,-1.621959,5.446373,1.709255,-9.596357,-6.777415,-4.790904,-1.940640,3.373384,2.833376,-2.730708,-5.486928,-3.306648,7.343763,-1.942728,9.372922,7.228059,1.975878,5.357730,3.989739,6.438881,-9.295098,-5.683250,1.294540,-2.238055,-2.826901,-1.329245,-4.382810,-5.657857,-2.952795,-5.536060,-8.845234,-1.110833,-3.630413,3.093993,1.183329,6.155396,-1.343839,-4.768893,0.853846,3.930186,7.041080,7.012387,-0.616213,4.459504,-1.942712,-8.259723,-1.574548,-7.122108,-8.741666,-1.669976,1.590302,6.430140,1.224206,9.644233,-2.830797,-8.288948,-0.304517,8.502121,-5.020225,1.752992,-6.246745,3.720291,-3.743743,6.282638,8.237110,7.868572,-6.447268,3.700542,-1.739479,-8.851079,1.772515,7.074814,-3.692276,-2.709367,7.274365,-4.485169,-5.699485,-5.689259,1.904877,8.675597,7.427499,0.661101,-5.360126,3.965826,8.499422,3.815298,9.785212,-4.983032,-9.647179,-8.260980,4.732921,7.649475,-2.642224,-0.094717,-4.782839,9.620489,-4.219069,9.981891,3.040061,-6.893850,-4.602376,9.437347,-4.430158,-3.218487,-7.984706,-4.381684,8.064102,3.714894,-2.373941,6.347086,-2.575163,-3.361598,-8.537536,4.005299,1.543416,-1.308174,5.438768,4.829960,-9.610223,-5.504952,-3.059663,-5.406309,6.823722,8.032170,9.099912,-2.920940,2.575004,3.585620,-9.556290,8.456371,-5.358862,8.663634,8.649225,7.425821,-9.873693,3.594977,-9.111367,-9.940909,8.940668,9.290429,6.293603,-1.941156,7.769213,-3.004126,-1.790268,3.649908,7.775997,1.407277,3.200353,-0.561992,-4.657309,-8.977706,9.473517,-1.194723,-0.642484,-2.504363,1.139573,6.479918,-4.945923,-7.224692,8.491396,6.787403,8.671665,-8.208242,0.931253,-5.976056,-0.897367,-5.934930,-6.057447,-4.512285,0.044685,-3.395432,-7.482918,8.412992,1.698713,6.332113,8.662883,1.916909,6.779210,3.521618,3.215609,8.612269,-3.159950,3.145330,-5.421984,8.784133,-9.610118,5.436878,1.754904,4.410724,-9.603392,-6.604319,8.630223,-8.066418,8.736328,1.621729,-2.255789,-4.386260,8.602544,5.816755,5.067432,8.605922,-5.808952,-1.053751,4.478811,-8.680381,8.873874,9.714124,-2.148888,8.799995,6.928987,-9.779529,3.438782,-8.591851,0.298468,6.111109,-5.363401,-7.106454,9.475475,0.116312,4.454809,-1.706439,-3.273552,2.923274,-3.975731,-4.660266,-8.545070,5.827161,5.295338,-3.621775,1.916613,6.690256,-2.324418,-3.868357,2.352264,-4.490990,3.296635,4.407760,-9.681496,-3.885272,6.474232,-1.391163,-6.335064,-1.767096,7.334731,-0.804039,-6.663245,-8.307195,7.450535,-3.568507,-4.420404,9.870699,9.630685,3.688865,-2.948932,-2.110347,-0.396294,4.558472,-3.005132,-7.946906,-4.705147,-8.353409,1.013687,5.834839,5.949788,7.006199,-5.441987,0.821687,2.879388,6.430136,7.520226,7.718575,-9.525967,-3.551053,-0.821926,-1.884229,6.940328,0.861640,4.851230,3.745854,-0.141160,7.777321,-0.848726,9.224765,2.070076,5.140564,-4.389744,4.895098,3.777011,-4.810385,-9.012414,-0.155918,8.441756,-3.084285,-2.533274,-6.961698,-8.600736,7.944917,-3.985925,-4.526814,8.018202,-7.897470,5.561549,-0.024501,3.528557,-0.236158,9.202742,3.069222,6.628017,3.615029,-7.293200,-5.201661,4.423834,5.696668,-9.177387,-1.675000,2.064654,-6.804320,-1.860269,6.619531,6.844636,4.759986,-9.787793,8.485640,5.354952,7.065066,-7.426614,-7.878896,4.757681,-6.926452,-0.476543,8.097798,9.984478,-1.521723,-2.862673,-7.714026,2.876325,-5.457000,-5.703207,4.204149,-5.869618,5.969245,3.165414,4.306722,2.586486,-0.608776,-7.970394,3.218698,8.327776,7.282989,4.110665,0.312124,9.073598,-2.453317,-8.540772,0.267065], dtype = "float64")#candidate|1931|(726,)|const|float64
call_1930 = relay.TupleGetItem(func_192_call(relay.reshape(const_1931.astype('float64'), [11, 11, 6])), 1)
call_1932 = relay.TupleGetItem(func_194_call(relay.reshape(const_1931.astype('float64'), [11, 11, 6])), 1)
output = relay.Tuple([bop_1880,bop_1908,call_1930,const_1931,])
output2 = relay.Tuple([bop_1883,bop_1911,call_1932,const_1931,])
func_1935 = relay.Function([var_1879,var_1907,], output)
mod['func_1935'] = func_1935
mod = relay.transform.InferType()(mod)
mutated_mod['func_1935'] = func_1935
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1935_call = mutated_mod.get_global_var('func_1935')
var_1937 = relay.var("var_1937", dtype = "float64", shape = (15, 14, 6))#candidate|1937|(15, 14, 6)|var|float64
var_1938 = relay.var("var_1938", dtype = "float64", shape = (15, 14, 6))#candidate|1938|(15, 14, 6)|var|float64
call_1936 = func_1935_call(var_1937,var_1938,)
output = call_1936
func_1939 = relay.Function([var_1937,var_1938,], output)
mutated_mod['func_1939'] = func_1939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
call_1968 = relay.TupleGetItem(func_1167_call(), 0)
call_1969 = relay.TupleGetItem(func_1169_call(), 0)
output = call_1968
output2 = call_1969
func_1972 = relay.Function([], output)
mod['func_1972'] = func_1972
mod = relay.transform.InferType()(mod)
mutated_mod['func_1972'] = func_1972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mutated_mod.get_global_var('func_1972')
call_1973 = func_1972_call()
output = call_1973
func_1974 = relay.Function([], output)
mutated_mod['func_1974'] = func_1974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_2058 = relay.TupleGetItem(func_1271_call(), 1)
call_2059 = relay.TupleGetItem(func_1273_call(), 1)
output = relay.Tuple([call_2058,])
output2 = relay.Tuple([call_2059,])
func_2072 = relay.Function([], output)
mod['func_2072'] = func_2072
mod = relay.transform.InferType()(mod)
output = func_2072()
func_2073 = relay.Function([], output)
mutated_mod['func_2073'] = func_2073
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2088 = relay.var("var_2088", dtype = "uint64", shape = ())#candidate|2088|()|var|uint64
var_2089 = relay.var("var_2089", dtype = "uint64", shape = (5, 13, 1))#candidate|2089|(5, 13, 1)|var|uint64
bop_2090 = relay.left_shift(var_2088.astype('uint64'), var_2089.astype('uint64')) # shape=(5, 13, 1)
output = relay.Tuple([bop_2090,])
output2 = relay.Tuple([bop_2090,])
func_2098 = relay.Function([var_2088,var_2089,], output)
mod['func_2098'] = func_2098
mod = relay.transform.InferType()(mod)
mutated_mod['func_2098'] = func_2098
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2098_call = mutated_mod.get_global_var('func_2098')
var_2100 = relay.var("var_2100", dtype = "uint64", shape = ())#candidate|2100|()|var|uint64
var_2101 = relay.var("var_2101", dtype = "uint64", shape = (5, 13, 1))#candidate|2101|(5, 13, 1)|var|uint64
call_2099 = func_2098_call(var_2100,var_2101,)
output = call_2099
func_2102 = relay.Function([var_2100,var_2101,], output)
mutated_mod['func_2102'] = func_2102
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2072_call = mod.get_global_var('func_2072')
func_2073_call = mutated_mod.get_global_var('func_2073')
call_2104 = relay.TupleGetItem(func_2072_call(), 0)
call_2105 = relay.TupleGetItem(func_2073_call(), 0)
output = call_2104
output2 = call_2105
func_2112 = relay.Function([], output)
mod['func_2112'] = func_2112
mod = relay.transform.InferType()(mod)
mutated_mod['func_2112'] = func_2112
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2112_call = mutated_mod.get_global_var('func_2112')
call_2113 = func_2112_call()
output = call_2113
func_2114 = relay.Function([], output)
mutated_mod['func_2114'] = func_2114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2112_call = mod.get_global_var('func_2112')
func_2114_call = mutated_mod.get_global_var('func_2114')
call_2130 = func_2112_call()
call_2131 = func_2112_call()
func_1754_call = mod.get_global_var('func_1754')
func_1758_call = mutated_mod.get_global_var('func_1758')
const_2146 = relay.const([-2,-10,-10,1,4,10,2,3,-7,1,5,-1,-2,-8,3,-6,-4,9,-9,-5,6,2,5,7,-6,-5,6,-8,4,-3,-9,3,-7,7,-1,-8,-10,-4,8,7,10,7,-10,2,-10,3,6,-5,6,-1,-6,3,1,-1,7,-3,1,-2,-4,5,1,-7,3,2,-6,6,3,-8,-7,3,8,-2,7,-10,-10,7,4,-10,8,4,-6,5,-10,-4,-5,-10,7,2,5,5,8,9,-7,-6,-1,-8,3,-6,8,7,-9,6,8,-9,9,-8,-5,-8,-6,-9,9,3,3,-4,-9,6,-9,-5,-2,9,6,10,-4,6,-7,4,2,-7,-7,8,1,8,-8,-4,-5,2,10,-7,-2,-4,-9,2,-8,-8,9,2,10,9,-3,8,8,1,2,4,-10,3,-9,-1,-6,-1,-5,-5,5,2,-9,-7,-10,6,-6,-8,-9,6,-7,-4,-5,8,-9,6,-8,-3,-1,-5,9,-5,-2,-3,-3,10,5,-3,-10,-4,-5,-3,1,10,-8,-2,-6,4,-7,10,6,-8,-5,-5,1,4,-8,-8,4,-10,3,-9,-7,7,-10,4,9,8,4,-1,-1,-2,1,-9,-8,-7,-10,-9,1,-3,-5,6,-2,9,8,-2,4,-9,3,-2,-8,1,-7,-7,8,-7,8,6,10,5,-5,6,-2,-4,4,8,-7,1,1,10,9,-10,-5,-6,-2,-10,7,-6,-4,6,8,-1,2,9,-2,-1,-10,-8,9,-7,-5,10,6,3,-8,-7,10,5,2,3,5,-4,9,10,-6,-1,-8,2,-6,-4,-1,-5,1,-1,4,-8,2,-5,-4,10,-4,10,1,5,-5,6,-2,-7,10,7,-5,-4,6,9,4,1,-10,9,-1,1,-3,-3,7,-9,1,-1,-10,-5,-4,-6,4,6,8,-5,8,-6,2,-8,-1,-8,-3,-1,5,9,2,8,5,-2,-9,-2,5,-10,7,-8,6,-3,4,-4,-1,8,10,-9,-10,-8,10,-8,7,-3,-7,-3,6,6,1,9,-4,-3,-5,-9,-5,-5,-6,9,-10,-8,-3,2,8,-9,7,-10,7,5,-8,-6,-3,10,-4,5,-5,-1,-5,-10,-10,-3,-9,9,-6,7,-3,1,-5,-7,3,-1,6,-7,-6,7,5,4,-3,-1,1,7,2,10,-10,-4,-9,-9,8,8,-2,9,-3,1,-8,-6,-10,-3,-8,10,7,1,9,-1,-6,9,3,5,-3,-3,1,-9,10,-5,-4,8,-7,9,9,-4,-10,2,1,9,-6,-4,-2,9,-7,-2,-7,4,9,1,5,4,-8,-9,8,4,2,2,-3,6,3,-10,-10,6,8,-9,5,-10,-2,4,9,-3,-8,-7,-5,-10,2,-1,-8,4,-6,-1,-6,4,10,-9,7,-1,6,3,-4,-2,-7,-9,-1,1,5,10,2,3,-3,-2,4,-3,-3,2,3,4,-6,-5,7,4,-7,-7,-10,1,-1,-2,-8,5,-1,-9,-10,4,-7,3,-4,-7,-3,2,-5,7,-7,10,3,-7,2,-1,-10,-8,-4,10,-2,-1,-3,10,-7,5,3,-9,1,-3,1,-7,6,7,-10,10,-8,-9,-5,1,4,-3,-3,5,8,9,1,2,3,9,-6,5,1,5,3,-7,-3,-7,-5,-10,-2,6,-7,1,8,5,-3,10,-6,-10,-2,-5,-9,1,7,-7,-4,-2,-1,-3,5,5,-10,-3,-9,-5,-2,-7,-5,5,4,10,-6,9,5,6,-1,9,-5,10,-7,-6,5,10,-4,1,8,5,4,-3,7,-1,2,4,4,1,6,2,1,-5,-8,2,-10,4,-1,2,-8,-10,5,-8,-5,2,-6,-7,8,-1,-8,6,10,-1,9,-10,-8,-5,-2,4,2,1,2,-5,9,9,-7,-5,-7,7,-8,2,9,9,-2,1,10,-2,-1,3,2,-7,-10,-7,7,-4,-5,10,-4,5,3,2,9,6,-2,8,-2,5,7,9,-10,-8,-9,-6,9,-9,-9,-6,4,8,10,9,3,3,10,2,5,2,8,7,1,-10,8,9,-7,-9,3,8,-4,3,-5,3,-5,-5,4,10,9,-8,-7,10,-3,4,9,-1,-5,8,-1,9,5,-1,-8,-6,3,6,2,8,7,1,-4,-10,1,6,-8,-10,-10,3,3,5,-5,6,8,-3,5,-2,10,-7,-7,-5,-9,9,-7,7,4,-6,4,-8,-5,9,7,-9,3,-8,-9,7,-9,9,-9,-7,-8,-3,6,-7,2,-3,9,-4,9,5,6,-8,-8,-4,-1,1,-6,2,-6,3,4,5,-7,6,-2,4,4,-4,6,1,-8,9,-7,-4,-9,-10,-2,-8,5,-6,6,-4,1,3,5,9,6,-7,-8,-5,9,-1,10,1,5,2,-9,-2,-4,2,-8,-3,6,9,-3,10,-10,5,10,7,5,-7,-4,7,-7,-7,7,-1,-2,-6,5,-8,-6,-6,1,4,-1,-2,-1,4,7,2,5,-8,4,-3,9,3,-6,-4,2,-5,-8,-9,10,-8,9,3,-3,-3,5,7,7,1,-9,-2,-2,4,-8,10,8,-4,-8,-1,8,-10,-9,-8,9,2,6,-8,3,-10,-7,-8,8,2,-1,-7,-6,-3,-5,1,-2,-1,9,9,-3,4,1,7,-5,3,3,-4,-8,3,-8,9,-7,10,-10,-7,-10,-7,2,8,4,-3,3,5,2,9,2,2,6,7,-1,-3,7,9,3,-7,1,3,7,9,3,1,-4,7,3,10,-10,4,-2,-7,2,-3,5,-9,3,4,-6,3,8,-1,-6,6,1,-3,4,-1,7,-1,1,7,-10,2,-7,-7,9,-7,-7,2,4,-5,7,-7,2,-9,2,9,-8,-9,7,2,-1,2,-10,8,-10,-2,-8,3,9,-5,9,-2,-4,-4,6,-9,-2,7,-5,-8,9,-4,-1,9,9,10,7,-5,-4,3,2,6,-5,6,7,7,-3,3,5,5,-5,10,-8,2,-3,-1,9,6,10,5,7,-3,10,6,9,1,-4,-5,-7,4,2,-2,-3,-4,-2,10,1,-10,1,-8,7,4,2,6,8,7,5,2,10,1,-5,1,-4,8,-9,8,8,7,-3,7,-1,3,4,4,-1,5,-5,1,9,7,-8,4,-8,3,-2,-5,5,-10,3,-4,-8,10,7,-5,3,-4,8,4,-7,-9,7,5,-4,-10,9,-1,3,2,-3,8,-8,6,10,-2,-4,7,9,-3,7,1,-9,4,-6,-4,1,6,4,-7,-9,-3,-2,-6,2,-5,5,6,-10,8,7,4,3,9,-9,2,-5,-3,-5,9,8,-10,-2,7,-7,6,6,-1,-2,-6,7,1,5,3,2,-9,8,1,6,-1,-2,4,-1,-7,-7,1,3,8,-5,7,-4,8,-6,1,-9,-4,1,9,4,2,8,-7,-7,-8,7,2,4,3,-8,-1,-7,6,-4,2,10,9,-9,-9,-3,-1,-2,10,-10,5,7,5,-2,4,7,-4,-9,-4,-9,-9,10,3,-2,8,-7,-1,3,-10,8,-1,-1,-1,7,-1,8,9,9,-2,6,-4,-4,-9,3,-2,-3,-6,-7,7,4,-10,-9,2,2,10,3,1,10,-4,9,-2,10,-9,6,-1,-5,5,-2,1,-9,2,-4,9,4,7,-1,6,-8,8,-2,-6,-10,10,-8,-5,-3,-8,1,10,-1,9,-7,-3,1,-1,-10,9,-10,1,-1,4,5,-10,1,10,-9,4,-5,3,10,-10,-2,10,9,1,-2,-3,-9,1,-6,-2,1,3,4,-3,-9,-5,-3,5,10,1,1,7,10,-9,-1,3,6,-10,-1,7,8,-3,8,-3,3,8,-10,5,-5,4,5,9,-5,-2,-6,8,-10,4,-10,6,-1,-9,-9,10,-7,9,-4,-3,-9,-5,5,-8,-6,-3,-9,10,-3,-2,-3,8,7,-2,-8,-9,-2,-4,10,4,-4,4,7,-7,3,5,-2,-6,10,1,4,7,-6,5,-2,-4,7,2,-10,-6,-8,10,4,8,-5,4,-7,-9,1,-1,-4,-9,-10,7,-2,6,-4,8,4,5,-3,1,9,6,-6,3,9,3,5,-1,4,6,4,7,-2,-7,1,-8,10,2,-9,5,9,9,-9,2,8,1,-4,9,-1,2,4,4,-1,9,-3,10,-2,9,-9,-5,1,-10,4,-2,6,9,-1,4,-9,-4,5,6,2,1,6,-10,-1,3,-10,10,-8,-5,-2,-1,-10,-5,8,4,-9,-1,2,4,-4,9,-2,9,8,9,3,-2,6,9,1,3,-8,-6,10,4,-7,-9,1,-10,-3,10,-10,8,2,-1,-1,-6,1,-1,-2,-6,-7,-7,-2,-9,6,1,-4,2,-6,-2,7,8,-9,-10,4,-7,10,1,-1,-7,10,2,6,-1,-9,9,-2,-6,6,10,-4,2,1,8,-4,10,2,9,8,-10,6,2,8,6,6,5,3,5,-3,-7,-7,-2,-10,7,-2,4,-8,-5,-4,2,7,1,-5,5,1,-4,10,7,8,8,3,-9,6,-9,4,-4,9,10,-2,-3,-6,1,-4,6,4,-1,5,10,-3,-4,10,-6,3,-6,-1,-10,-7,-5,-9,10,-4,-10,10,-2,9,-8,4,-10,1,4,5,1,6,3,-6,1,-4,10,-1,5,-8,10,8,-1,-8,-1,10,4,-7,-1,10,6,3,7,10,-5,-6,4,-7,-3,1,-7,-7,7,10,10,10,-5,3,8,-4,4,9,6,-3,10,-4,-5,2,6,9,-3,9,3,-9,-5,-3,-7,-5,8,-1,-1,5,-5,-5,-10,-6,-5,-2,6,9,-6,-10,-5,-5,4,9,-8,-9,-3,3,-1,6,-3,4,2,3,-6,-3,10,3,-2,9,-9,3,7,7,7,5,4,1,5,-3,9,-1,2,4,6,-5,4,-7,6,-8,-7,-4,4,-6,9,1,5,-6,-6,2,4,9,7,-10,1,-7,2,-1,7,7,-7,4,10,3,-2,10,-4,5,-4,-6,2,-3,-7,3,2,-1,-8,-2,-7,-4,2,5,10,9,5,-9,1,5,6,5,10,8,-3,6,-7,-8,-2,-7,5,8,-1,10,1,-3,5,-9,-6,-3,-9,-8,7,7,3,6,10,-9,-5,5,6,6,-6,6,-2,-10,8,-9,-7,6,2,7,8,-3,9,-8,7,-8,-7,-6,5,-1,-5,-8,9,-2,6,3,9,6,7,5,-5,9,-9,-2,3,7,-6,-2,-9,-7,6,-10,9,5,9,2,-2,8,5,8,-7,-6,10,-9,-2,7,-8,7,4,-3,-1,-6,5,-8,8,-10,9,-8,-4,1,5,8,-4,1,6,-10,1,3,2,10,-5,4,6,6,-9,10,4,7,2,5,-6,-4,-1,-4,-8,2,3,-1,8,-1,-2,-2,8,4,9,-7,-4,-1,9,9,-10,-1,7,-3,9,3,-6,10,4,1,5,8,10,8,5,-7,8,-9,1,-9,8,2,5,-6,-7,-2,-9,-6,10,-6,-9,9,10,2,1,-2,3,3,-7,9,-9,8,3,-5,-8,-9,4,6,-7,-7,-10,-7,4,-5,8,7,-6,3,1,-4,1,-7,3,-10,2,9,8,-8,-6,5,6,-1,-1,4,4,-2,-3,-9,4,7,9,-9,1,-1,-10,-1,10,-1,-8,-2,4,9,-3,-4,-10,-3,6,-7,-1,4,-7,-10,-8,-8,5,-1,4,-6,8,3,10,8,2,-3,-6,-8,1,-1,-8,-7,9,-4,6,9,10,2,2,6,-5,-8,-3,5,-4,-4,3,9,-9,-4,-3,-1,-7,-4,4,2,6,-2,8,-4,-4,-7,2,-1,-9,8,-8,-6,1,-5,-10,4,-8,-7,-6,9,9,-6,-1,2,10,1,-8,-6,-9,-5,7,-4,-10,3,2,-3,-7,-4,6,8,7,-5,-10,-5,1,7,3,-4,4,6,-9,-9,-8,7,-8,-9,6,-9,4,-5,-5,-4,6,1,5,-8,-6,3,9,-7,6,-1,1,-1,5,1,-8,10,3,8,9,-4,-2,-1,8,-9,6,-7,1,4,-3,7,2,-9,-9,2,-2,2,-5,8,-3,-6,-6,-5,-2,-2,6,6,7,4,2,-3,-4,2,-10,-1,-5,9,1,-8,-5,-7,2,-2,1,-4,-1,9,3,-3,2,-3,2,-8,-8,-5,9,-7,-5,1,-2,-1,1,8,-3,-5,6,2,2,10,-8,-4,-7,9,9,-10,-4,-5,2,1,6,-8,5,-2,-2,6,9,9,10,-10,10], dtype = "uint8")#candidate|2146|(2366,)|const|uint8
const_2147 = relay.const([True,True,False,False,True,False,False,False,False,False,True,False,False,True,False,True,False,True,False,False,False,False,True,True,False,False,True,True,False,True,False,True,False,False,True,True,False,False,False,False,False,True,False,False,False,False,False,False,False,False,True,False,False,False,True,False,False,False,False,False,False,False,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,False,True,True,True,True,True], dtype = "bool")#candidate|2147|(84,)|const|bool
call_2145 = relay.TupleGetItem(func_1754_call(relay.reshape(const_2146.astype('uint8'), [169, 14]), relay.reshape(const_2147.astype('bool'), [84,]), ), 5)
call_2148 = relay.TupleGetItem(func_1758_call(relay.reshape(const_2146.astype('uint8'), [169, 14]), relay.reshape(const_2147.astype('bool'), [84,]), ), 5)
output = relay.Tuple([call_2130,call_2145,const_2146,const_2147,])
output2 = relay.Tuple([call_2131,call_2148,const_2146,const_2147,])
func_2153 = relay.Function([], output)
mod['func_2153'] = func_2153
mod = relay.transform.InferType()(mod)
output = func_2153()
func_2154 = relay.Function([], output)
mutated_mod['func_2154'] = func_2154
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1418_call = mod.get_global_var('func_1418')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_2168 = relay.TupleGetItem(func_1418_call(), 0)
call_2169 = relay.TupleGetItem(func_1420_call(), 0)
const_2189 = relay.const([[[-2.073933,1.289848,5.637506,6.516727,-4.174299,-9.152910],[0.206467,-1.624671,-9.765400,1.772695,-2.848747,-3.527619],[9.426806,1.123675,5.506598,-7.928106,-8.640777,4.456076],[-2.659739,-4.808247,-8.468946,-1.289650,2.772395,-3.883554],[5.283223,8.791541,9.939554,5.263230,5.525206,-8.723782],[1.519939,-9.154716,-8.405339,0.134687,-3.000277,6.847023],[4.630720,-8.900057,3.521127,-3.159452,-5.173882,-0.901863],[6.821940,-8.950107,7.552552,-8.007750,9.505176,-2.513280],[-1.814372,-1.990879,4.006458,2.283225,6.081216,-1.651392],[-9.615727,-6.565087,-6.683318,-0.925312,-2.761686,-0.812854],[6.341783,-5.534412,-9.542197,-1.257573,-2.686397,9.469195],[6.160958,-1.606359,4.979970,5.474116,-4.879831,-5.016942],[-4.225187,-9.052655,-4.579437,-5.765727,1.224169,-5.090966],[1.367160,-7.139098,-1.775535,-2.703746,0.675836,-9.245929]],[[3.062785,-4.811054,1.935094,-9.317810,-8.571614,-3.924142],[-2.609919,-9.066014,4.473726,1.626170,-1.752730,2.231968],[1.133097,-3.282157,-3.588942,6.434615,-0.188807,1.838478],[4.057612,7.452129,7.288993,-1.909936,1.068910,8.893099],[0.730826,9.276213,8.655061,-9.204106,-0.132105,9.553828],[-6.141408,-0.478818,-7.586985,-6.278603,-7.656927,2.051467],[-6.181806,5.646124,1.220182,-3.556593,9.263115,-9.394034],[-0.369514,4.390013,1.109150,-5.997670,-3.806224,-1.873571],[-4.289452,-6.543315,-2.094214,-8.150414,0.438893,-9.083924],[7.034063,2.476260,0.125040,7.005895,3.554549,-3.241017],[4.754479,-0.957956,-5.593145,-4.896520,2.228705,2.687807],[3.467157,-6.941164,4.490546,2.755383,-1.964161,2.851484],[-9.076161,3.104741,5.023705,-8.567077,-4.487168,-2.987061],[9.305472,-7.677846,8.279984,-0.411746,8.194124,7.882073]],[[-1.699354,1.329167,-2.439173,-4.909303,8.230346,-6.874390],[0.408172,4.240852,3.251366,-3.145607,6.789225,3.941390],[-4.083142,2.463548,7.282106,-3.581507,1.617582,-5.398743],[-4.433260,-4.559973,-8.553789,1.319540,7.106415,-9.704277],[-4.059743,9.299522,7.778712,7.411685,-9.854233,0.060983],[6.952173,9.340853,-5.154280,-5.400034,-3.908267,-7.208109],[2.664704,3.997211,1.742971,4.182258,-9.239149,2.591610],[-0.489313,-6.726465,4.366419,-9.261233,6.596255,0.185163],[4.642241,2.025760,-7.474861,-5.594269,0.765696,-6.400441],[9.665542,-3.784340,-5.015249,8.296157,-1.092389,5.593448],[-7.059886,5.423885,-5.796669,2.985995,-6.424911,1.707173],[-9.965143,9.750232,6.400817,-6.688686,9.591471,2.624843],[-9.517257,-6.166960,-0.985006,-2.994138,8.692749,-1.443869],[-4.559993,7.945211,-9.556531,6.841288,5.240111,-5.807898]],[[-0.611345,9.109156,-6.716328,7.541521,-5.027035,7.720547],[-3.946668,7.268530,9.744217,3.825107,7.393456,3.986225],[0.707129,-1.694363,4.894102,-1.394336,-9.292041,0.647605],[-4.330803,0.892186,7.975330,6.682447,3.154969,3.971495],[-3.927778,-8.622561,-8.590163,-8.961059,1.522551,-3.666865],[3.997208,-4.962424,-2.262780,-2.676629,7.534282,2.216731],[4.862815,-3.482910,5.759996,0.675303,-4.032500,4.558460],[5.122836,-5.430925,8.377323,5.786845,6.329816,-2.462140],[-7.253360,-9.617995,-4.377568,-5.331762,-3.126242,-9.230032],[-7.819447,-5.564976,-9.567290,9.498831,2.228358,-3.073774],[-9.646643,5.013971,6.839986,-3.083358,9.733850,3.933879],[-7.080759,0.088119,-3.720856,1.924710,7.241716,7.067356],[6.715254,-6.224656,9.170000,6.411567,-1.567674,3.576649],[-9.455838,7.816300,2.643841,-7.432569,-0.959551,-8.743903]],[[0.967179,-2.056441,0.278762,-4.690759,-4.460445,9.326490],[5.694619,-2.283612,-9.116110,-9.822925,9.707137,-2.379738],[-0.893828,-9.238012,-8.489777,-7.705947,-4.209744,-5.114803],[-7.905454,0.896500,3.051333,-2.094165,6.228475,4.601304],[1.784994,8.383593,1.733480,7.803593,-9.251821,2.101573],[-1.469889,-8.372626,-0.406319,1.825084,-2.647266,7.955817],[7.731536,-9.385591,-9.627356,-6.023367,8.285722,-4.937837],[3.977484,4.038240,-0.294500,-2.921998,-9.537154,5.707907],[-4.317611,2.135471,2.697280,-0.568300,7.593996,-8.477552],[-8.306390,5.907711,-6.543187,7.859584,9.332826,1.964569],[3.944363,-3.373659,-4.970845,-6.764241,-2.841343,2.201651],[-8.351181,5.495323,9.745912,-3.486779,-4.196444,9.195381],[2.484598,8.576995,2.288854,-5.691528,-1.655580,-5.026929],[4.675243,8.730524,2.226164,1.330262,1.385245,2.920919]],[[-6.001741,-5.113864,4.307276,6.389761,-2.514847,0.805099],[0.941280,-3.073699,-5.067379,9.497714,4.327644,-1.680998],[6.277452,8.522619,-5.814891,3.713465,-6.573496,5.747698],[-9.509435,-3.791404,6.345090,-2.714486,-4.817937,2.862262],[-3.046182,-3.017414,0.540826,-2.296483,-1.528951,8.196329],[-8.340265,-5.504486,6.191072,-4.287953,-4.887901,-1.911227],[-2.841858,0.067728,-2.704278,0.690765,7.939376,-2.555295],[-6.826843,1.626765,-7.293994,0.714019,-8.224498,3.889081],[-3.189442,7.361419,1.813852,-1.864815,-6.546704,-0.601276],[-4.645683,0.690371,6.218686,8.756347,-9.574690,-4.615012],[7.061132,4.334421,3.519226,1.286891,-4.047041,8.820878],[7.279003,1.216989,0.629254,-0.021772,-3.956319,6.541960],[0.970154,1.483589,4.141928,8.346807,-3.214184,-7.525891],[1.708398,7.021332,-9.202784,7.626768,-4.782210,-3.715846]],[[-7.960195,-1.271949,-0.046199,-6.112842,-3.846702,-5.114199],[-4.882543,-8.682024,-4.193801,-0.796178,2.973771,-3.685952],[-3.936607,4.363543,-7.966716,-4.009732,-3.028822,3.971163],[-2.993766,-4.091595,-8.393936,7.365996,-0.910337,5.896796],[-6.569201,2.141390,2.496447,-9.592369,0.989895,-9.050759],[5.967738,2.162016,1.320524,-9.929197,-2.999312,-1.239924],[8.945632,4.364688,-7.607871,6.091545,5.344033,-9.385986],[-9.928207,-8.537564,-0.404403,7.860545,-2.681505,0.688537],[-0.189097,4.491722,-1.191959,1.596767,5.894285,-4.601262],[5.432775,3.206203,-3.925729,0.441022,-2.172423,-5.330689],[-6.693494,-0.204188,-9.779396,2.914365,1.580279,-0.079965],[-1.331862,-5.644399,-7.653387,3.665685,-0.434268,-0.244239],[-3.889290,0.762452,-9.379276,2.563480,7.319244,1.741044],[9.873326,-1.013905,1.486280,1.274167,-6.099689,-1.841719]],[[-4.203901,-2.986579,-5.639568,7.013761,-2.503039,1.428297],[-3.227806,-7.576391,-9.874873,-2.194712,-3.693610,-8.935346],[1.468080,2.469911,3.591401,-5.332046,-2.838367,-2.046582],[-0.427842,0.603455,-5.137850,1.426005,-9.815849,9.664542],[4.376428,-2.950250,-2.785728,1.636188,-6.733903,-2.332298],[-4.571122,3.318157,2.594181,2.703188,0.627170,0.779834],[6.969154,2.286524,-1.988391,-2.055283,-4.541219,4.282792],[-5.919009,-2.458510,8.117627,-9.610835,8.015094,-1.738218],[-3.129564,-8.939876,0.383311,0.249842,-7.515076,-7.575626],[7.789773,-1.663144,1.224155,9.254052,1.597381,9.282095],[-4.894647,-7.766322,9.821027,-5.087591,1.099697,-9.761314],[-4.181443,6.081441,-1.064458,4.495183,0.096104,0.924671],[6.724817,-6.268556,-2.436063,-6.050139,5.831078,-4.595269],[4.096907,-2.162889,-8.529356,4.045330,7.040989,6.907300]],[[-1.712525,5.652571,4.477476,8.883007,3.020451,2.104293],[5.446446,-8.315171,-9.044099,4.816384,-3.380749,-8.577546],[-2.060353,4.596540,7.621209,4.699819,-5.686167,1.707206],[2.935821,-4.291827,-7.751889,-8.909635,6.354862,-6.874361],[-5.420435,-2.089251,-1.802002,1.971131,-2.097481,-8.135588],[0.073209,-7.259763,-3.582834,8.877566,-6.424943,3.661493],[5.743027,-4.718517,-7.150804,9.788171,-6.308033,7.252145],[-5.956562,-2.512669,-1.288508,-8.285837,-5.364823,5.791138],[-6.897764,2.013334,-9.254365,8.019318,-4.784441,2.222277],[0.758106,1.396610,-0.292871,-8.078929,7.912956,1.104721],[5.489627,-4.250025,-0.016022,-8.362576,-8.994754,9.834582],[-3.823722,5.803388,-0.662202,-6.818348,5.880135,-3.209784],[-6.170799,-9.442669,1.441050,9.967660,-7.803924,-2.875445],[5.769818,3.245534,-2.790374,3.166342,-9.962772,-9.452464]],[[3.491437,-7.190358,-5.370123,-8.753008,9.308313,8.618047],[-2.592452,6.047347,-8.402799,-4.398526,-3.552137,5.281471],[-9.197003,-1.312669,9.582705,-2.272209,0.768616,4.712649],[4.911080,-7.286782,5.914018,8.569519,8.388991,-5.120598],[-2.743599,6.653747,-0.685573,-5.128081,2.837459,9.875517],[9.304767,6.866817,-5.377042,-4.957172,-3.784433,-2.754901],[-5.744414,-2.240214,-2.864581,7.937293,4.161682,-0.827200],[-1.424310,-5.839992,9.733187,-1.851430,5.038154,6.639846],[1.532792,5.258813,-9.932100,3.476730,1.499005,-3.528337],[-0.071061,5.994941,0.083260,7.848960,-9.035767,6.386837],[-9.436024,-3.165284,-0.301220,0.441742,1.817369,7.510085],[7.695151,8.973041,-0.724218,-1.637172,8.196077,-8.394591],[6.481596,-9.880603,-7.982097,7.370059,-0.918706,-7.513041],[4.169098,-7.276963,8.933023,2.244706,-5.961154,4.743984]],[[-4.542420,6.318976,6.452648,-2.388694,7.658146,-5.539952],[7.740831,-4.228899,8.351976,-1.182859,7.672607,-3.348815],[-4.117123,8.080549,-3.079807,-0.206885,-5.000883,-7.829539],[7.196095,0.910861,-6.885399,-4.164223,2.486937,2.174849],[-8.393708,-1.761751,-4.197816,-2.083544,-8.489897,2.488086],[-0.689803,2.143045,8.338570,0.435308,4.711469,6.232131],[-8.431548,0.510611,1.187536,4.893349,-4.526578,3.489011],[-7.978397,1.336562,0.826964,9.744462,-6.158603,-5.726185],[-1.209378,6.157290,-3.094604,4.675695,-5.352623,5.294962],[6.334731,6.568111,-9.157202,-5.671113,-3.071771,6.536596],[-0.673843,-7.789007,4.460741,-8.542182,-6.594570,3.251421],[9.402716,6.346919,1.332189,7.685776,2.277846,-1.160816],[7.848311,-4.408301,3.320823,9.894766,-5.363101,-4.671564],[-9.060188,-1.825593,-3.357434,-2.395210,-1.813456,-4.061654]],[[-6.220007,3.677569,-4.771886,9.041926,-4.880864,-0.159084],[3.994011,-7.400235,3.081797,1.734543,9.859939,-5.731495],[-2.643413,4.041192,-2.583846,-9.386780,7.307382,0.075757],[-5.063861,9.685996,-9.100860,-8.332166,1.330840,-8.869621],[6.272913,2.069271,9.987545,2.063897,-3.044487,-9.849691],[-6.011317,1.965498,-3.185152,5.687882,5.730195,-7.409704],[-1.974277,6.455057,3.060143,-9.742461,3.798191,4.731035],[5.626364,-1.897313,-9.225634,9.645237,-2.838186,-7.064217],[4.273087,9.950567,8.328567,-4.710637,-5.360833,6.399220],[4.983227,-4.813309,2.215816,6.575347,-9.905803,-1.902967],[3.432368,7.202839,-6.739843,-3.359594,-5.206181,-7.716189],[0.749756,2.940418,-8.186456,3.656460,5.979794,6.476130],[-4.876230,2.171124,-8.656900,5.130993,1.367539,0.011065],[-8.162409,7.437290,9.964663,-8.477929,3.290309,-5.992433]],[[8.290187,9.558993,-7.539610,2.387585,-4.367298,1.885744],[1.563284,-3.903887,-4.251429,-3.339602,8.235758,5.182277],[-7.760686,-5.809611,2.043666,2.599491,-9.060450,8.591731],[4.276573,2.566450,-4.220404,1.264307,1.060909,-0.104913],[6.338089,9.327513,9.171127,-8.030505,-1.127288,4.499294],[8.170839,-2.015385,4.167708,-9.370805,8.892781,-2.456772],[5.465631,3.769013,4.786500,-3.162707,-7.033321,-6.627498],[-0.790064,6.208223,5.428539,-0.278114,-5.467397,-1.682394],[2.497420,-8.388567,9.014797,-8.502912,-6.999437,2.132643],[1.973917,8.094866,8.709131,8.332480,-6.524386,8.557969],[1.218549,-9.794043,-2.085357,-8.378532,-1.343713,-3.889195],[0.193667,-5.925581,-7.175885,-7.923367,3.574652,-3.288732],[3.340373,-4.473068,-8.499940,6.714418,6.424633,7.601185],[-2.790464,8.640916,2.498867,-5.539439,-2.133525,-4.357468]],[[7.009609,8.481358,-5.499825,2.146209,1.757483,3.358402],[0.806136,-5.344062,9.158149,1.642668,6.614527,-6.323874],[-1.405324,8.771434,5.566603,-2.098589,-0.135244,2.418587],[3.176533,-9.639013,-8.671769,-7.886331,-0.170552,-9.200813],[0.387757,-2.763896,4.998646,9.662579,9.460663,-1.901613],[-7.825804,6.330499,-7.136843,-9.583704,-0.107619,6.065944],[-7.024644,-9.451535,-3.757069,-0.161190,-6.993351,-8.676973],[5.544942,-4.606396,-7.519118,2.754547,9.043946,-3.818168],[5.338088,3.526159,7.352722,-3.074472,-3.444895,6.337864],[-7.786969,-5.976486,-9.129891,-6.257686,-7.149514,-5.163187],[0.544694,-8.790564,3.008608,0.861105,7.854016,-8.985707],[2.499323,-3.447826,9.446292,-5.915808,-7.546008,6.542278],[2.188764,-9.769686,-3.605870,-0.015226,5.621494,-9.147332],[8.331018,2.057090,-5.453728,-7.895102,2.453887,8.217786]],[[-8.432313,-9.592061,0.566391,2.634910,0.193507,-1.318420],[-5.734800,8.765717,9.680846,-8.627780,7.510889,0.104160],[9.685722,5.169814,9.855495,-4.714910,-4.663945,-2.611134],[-9.655357,-4.795080,0.733696,8.517058,-6.266303,1.686723],[-3.213976,-8.729243,-7.970409,0.564069,1.989386,-9.125247],[5.240341,-7.678988,2.916924,9.029446,-3.414521,1.622438],[6.070902,-4.024076,9.726443,0.676023,5.919133,-2.716173],[-7.077499,-8.992484,-1.859898,-1.616783,1.716217,-5.164099],[2.622125,-8.108889,5.379573,3.288175,-5.749762,-9.820757],[-6.364247,3.638914,-2.849570,7.903753,9.233341,-8.422418],[-7.974795,2.813227,-5.501595,-2.208925,-5.326497,8.856024],[-7.886134,-6.209768,-1.055862,-1.108066,-6.184149,8.526878],[3.017654,7.154626,-0.794812,5.562139,-8.265658,-7.253395],[-5.982420,-9.365424,5.186753,-4.258026,0.813742,-7.294411]]], dtype = "float64")#candidate|2189|(15, 14, 6)|const|float64
bop_2190 = relay.less_equal(call_2168.astype('bool'), relay.reshape(const_2189.astype('bool'), relay.shape_of(call_2168))) # shape=(15, 14, 6)
bop_2193 = relay.less_equal(call_2169.astype('bool'), relay.reshape(const_2189.astype('bool'), relay.shape_of(call_2169))) # shape=(15, 14, 6)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_2201 = relay.TupleGetItem(func_1836_call(), 3)
call_2202 = relay.TupleGetItem(func_1837_call(), 3)
func_431_call = mod.get_global_var('func_431')
func_433_call = mutated_mod.get_global_var('func_433')
const_2216 = relay.const([-10,5,8,-4,7,4,3,9,4,-6,4,1,-9,-4,-8,10,-4,7,3,6,9,5,-2,1,6,4,-9,-4,3,-1,3,-1,6,-2,-9,-7,6,2,6,-5,-3,2,3,2,4,-9,3,-5,-7,-8,-3,7,-8,-9,-6,-9,-5,-3,-9,-6,-6,-1,6,10,2,2,-4,7,7,10,-10,2,-2,-4,10,7,7,-9,-3,-6,8,2,-6,5,5,-9,-6,2,8,10,-8,-3,4,-7,2,4,3,3,-5,5,6,4,-6,10,2,1,-7,-4,6,-2,5,8,3,7,2,7,5,7,-6,5,-7,10,1,-8,3,7,7,-8,-7,-8,7,6,-7,-3,-10,-2,3,2,6,-10,10,-9,-3,7,1,10,1,10,-8,10,1,6,6,7,8,10,-5,4,5,-9,-5,6,4,3,-1,2,6,8,-6,3,2,-1,-2,6,-4,-6,3,-6,-10,-9,-3,4,10,3,-5,-9,10,6,7,-9,-9,4,1,-9,1,3,-10,7,-9,6,-7,-2,9,8,4,-8,4,-4,-2,-7,2,8,9,4,6,-3,-6,-9,-5,-10,-4,-1,-8,5,-6,4,-4,-2,10,2,-7,-8,-10,-8,5,3,6,-10,-6,6,-9,2,5,-10,-1,10,5,-10,8,-7,6,10,3,8,-7,3,-7,1,2,-8,4,-2,-9,-2,-2,7,1,2,9,5,-6,-4,-7,6,8,4,-5,9,-1,-10,1,1,-7,6,-4,-2,3,-1,2,-10,3,-10,-8,-2,-1,-2,-10,-2,7,-2,3,9,-1,4,10,-6,8,3,7,5,-10,10,-1,6,2,-8,4,-1,-10,10,1,-4,4,-4,-7,-8,-7,6,1,-5,1,-10,-3,-2,7,2,10,6,-7,4,1,-10,10,-6,7,-6,7,3,-8,-2,7,-3,-1,-10,9,-2,-7,9,-8,10,8,-4,-3,-6,10,-6,-3,-5,-7,-3,-8,-7,9,4,-2,-3,-10,7,3,-4,3,-1,8,1,10,4,-10,5,-6,7,3,8,6,-7,-9,4,-1,-8,-1,-4,2,-1,8,2,-4,2,8,1,7,2,10,-10,1,8,5,-4,-10,9,-2,-2,1,-6,-5,-2,-6,10,2,-5,-6,-6,-6,7,-9,2,1,-10,9,1,2,8,-10,1,6,7,-10,-4,7,-2,2,-8,9,3,-3,-2,10,10,-8,-3,9,-10,-5,5,6,8,1,-10,1,8,10,8,2,9,1,8,-2,-10,1,-10,-3,4,2,6,-9,-9,6,6,-7,10,9,-9,4,-9,-5,3,-5,1,3,3,2,1,-1,-6,4,-6,5,3,5,6,10,7,8,-7,5,-5,3,-7,-2,3,-2,-10,-4,-6,-6,-6,-2,6,-1,3,2,-7,1,-9,8,1,-1,-6,-4,4,3,-8,3,4,-6,3,4,-3,3,-8,-4,-2,-1,-1,-9,7,-5,6,1,-5,9,-5,8,-8,9,-4,6,-9,-2,-4,-5,2,7,1,2,-7,4,3,-7,2,8,1,2,3,-2,3,-7,1,-5,-4,-8,9,2,-5,5,-8,-5,-7,1,-9,8,-10,10,-10,4,3,6,8,-4,-10,-2,9,5,2,-9,-9,-6,-1,2,1,-7,2,4,5,2,-6,2,-2,3,-5,7,-9,-2,-9,-4,-2,3,-8,3,7,-7,-2,8,7,9,6,-3,9,7,-2,8,-4,10,-10,-3,10,1,10,5,-3,-9,-10,-3,-2,9,-1,-9,-10,7,4,8,-2,8,-8,-3,-9,9,-7,-10,-3,2,-8,9,4,9,-7,-5,-5,5,8,-4,8,-6,-4,-3,-7,-2,-10,2,-8,3,7,-6,-9,-8,7,-3,5,-2,-6,-7,4,8,10,-7,3,4,7,4,1,4,4,-4,7,-10,-3,-5,-6,-2,-3,7,-10,-5,2,-3,-3,-8,-4,-6,8,-1,-2,-9,-9,5,9,-9,-4,6,-4,-7,-5,4,9,8,7,-2,8,-7,2,1,5,-10,2,5,2,5,-8,7,-10,-9,-4,5,-10,-9,6,4,7,2,-10,9,10,-1,4,8,-3,-2,5,9,2,10,7,3,9,-7,-4,-5,2,-3,-4,-10,-9,3,10,1,-9,1,-6,4,-10,6,-7,8,-7,-6,3,9,8,8,-6,-1,-2,5,-9,-5,7,-2,-2,-4,3,-3,5,10,6,3,-7,-8,-9,6,9,-8,3,-1,-2,6,-4,-4,3,-2,2,-10,2,-7,-1,10,4,-6,-9,4,3,-9,-10,-10,6,9,-9,-6,-7,1,-8,7,10,1,-2,3,6,6,4,9,8,-8,9,8,-1,-5,2,10,-7,3,7,-9,-5,-9,1,-9,-7,7,-2,-3,8,1,2,-3,-4,10,-10,4,-4,-6,-2,5,1,7,-9,-8,10,6,-5,-3,-5,10,-10,5,-1,8,-6,-5,6,-4,-2,-3,-4,-6,-10,-7,2,4,-6,-5,-2,10,-7,-6,-5,-10,-3,-3,6,7,8,2,-3,-1,9,-6,8,-8,-1,10,3,4,6,4,-7,-7,6,5,8,-10,2,8,2,-7,-8,-8,10,8,1,8,-2,-5,4,8,5,-1,-4,9,4,-8,4,5,9,-1,-5,8,-4,6,2,4,-3,-4,-3,-2,8,1,-7,-9,-10,-7,-9,-2,10,1,-3,-9,9,3,6,-10,7,-10,8,1,8,-2,-4,10,-4,8,-7,6,-10,-1,-6,5,-4,8,-4,1,8,1,-10,8,5,3,-2,-9,2,3,2,-1,-2,-8,9,-10,-5,-1,-3,8,6,1,2,2,-1,2,-2,-10,4,-3,-9,2,-6,-6,-3,-9,8,8,-10,-4,5,6,10,4,-4,-7,-1,-7,-1,8,-7,-6,6,5,-4,9,-6,9,-1,-10,-3,7,5,3,-7,3,-7,-9,2,-1,2,8,-4,-3,-3,9,-1,1,10,-5,6,-9,6,-8,-1,-5,-8,2,-1,9,10,-1,2,-9,8,7,2,1,-5,6,-9,-8,5,10,-7,-1,5,-9,4,1,-2,7,6,1,8,-7,10,3,7,1,-4,-2,4,8,-1,-1,-9,8,8,-9,9,-3,-3,-4,2,6,-8,7,-10,-2,-5,-4,1,2,-3,8,-6,1,-7,-10,10,7,4,10,8,-7,-4,9,-2,7,-1,7,3,-7,-3,-1,4,-1,-1,-2,-2,2,-9,3,10,-9,2,8,-6,-8,-3,3,9,6,6,7,-7,4,-9,-1,7,-2,8,6,7,4,-7,9,-3,-3,3,7,-10,9,-9,2,10,5,-6,-3,-9,4,6,-1,8,-5,6,10,2,7,10,7,5,-8,-7,5,10,3,3,-2,-9,-2,9,-3,3,-4,1,-3,-5,7,-5,-9,2,-10,5,-7,-9,1,3,2,-6,-9,8,-3,-6,-7,3,-4,8,-9,6,-9,-5,4,6,5,2,1,7,-5,4,-4,9,-1,3,-2,-6,-3,-3,2,-5,-3,3,9,8,5,-7,9,6,-3,-10,8,-5,-8,2,-2,-4,-3,9,-7,5,8,-10,6,-7,-6,3,2,7,-10,9,-3,5,2,-8,-10,2,5,-7,9,-1,10,9,5,3,4,-7,6,4,7,-8,7,5,3,6,-5,-7,2,-8,-3,-2,6,3,-3,-2,9,9,2,-9,-5,9,1,-6,3,9,8,2,-3,6,1,8,9,-7,1,-8,-10,-8,-4,-3,-10,-4,6,-2,2,-8,-5,-3,6,-5,-8,5,9,-7,10,3,-4,8,-4,10,-8,9,7,-6,-3,-9,-6,-9,8,10,-7,7,10,3,6,10,-2,-5,-2,-1,4,6,-4,4,10,-9,-7,-10,2,2,5,-3,-10,7,1,-7,-9,6,-9,-5,-6,-7,3,-1,9,4,-3,4,-5,-7,10,-3,10,-2,10,9,-2,-9,6,-1,-3,-10,1,-2,-6,5,5,-6,-7,-4,-6,5,9,-4,-3,-1,-7,5,-6,6,-5,1,7,5,-6,3,1,-1,-1,7,-9,2,-9,5,3,-1,-10,-10,-10,5,3,-9,7,5,6,-3,10,2,-2,7,8,-6,8,9,1,5,1,8,-5,-5,-5,-5,-4,4,-2,3,-7,-10,5,5,1,-9,4,-2,10,-10,-6,10,10,7,-7,3,7,10,-3,7,-7,-10,-4,1,-10,1,-6,7,6,-9,4,6,-7,5,-3,6,1,-10,8,2,-2,5,3,5,6,10,-6,-3,-3,5,-3,6,8,-2,7,4,5,9,-1,-7,8,7,4,-9,8,-2,8,6,4,-2,-10,-2,8,-4,8,6,-9,-2,-4,-9,-6,5,7,-9,7,-1,10,3,9,-6,9,2,6,-10,-4,5,9,5,-1,-6,8,7,-5,5,-8,-10,3,-4,6,1,10,-2,-8,-5,-1,-1,-2,-6,-1,-2,2,-5,-4,5,-2,1,-6,2,-2,-5,10,4,4,-1,-1,-3,3,-9,8,8,-2,-3,6,2,-2,2,3,-6,-8,-2,-7,1,5,-8,3,5,9,-4,5,2,5,9,-2,4,1,-8,-3,10,-10,-2,-6,-2,5,9,-4,-7,-5,-6,3,-6,8,-5,-4,8,3,10,-7,4,8,3,-4,-10,1,9,-6,10,-10,6,10,-1,5,4,-2,7,-4,2,3,1,6,7,5,-9,-4,1,10,-9,-1,-9,5,-3,-6,-9,4,2,7,5,1,-9,8,1,9,-3,4,5,7,8,-4,-2,-4,10,6,-7,9,1,5,-5,1,7,9,-5,-2,10,10,6,-8,9,-4,-10,10,10,3,-10,-5,-2,-10,3,-9,-10,6,-5,4,10,-8,-1,-2,-6,10,1,-4,2,-9,-10,9,-7,7,1,6,9,2,4,3,-10,5,-6,4,7,-2,-4,-6,-8,-5,-4,10,4,-3,7,8,7,-9,-4,-3,-8,7,-8,5,8,4,-8,5,-6,2,-4,-1,4,6,-4,-9,5,-6,-1,-6,-8,2,7,-2,6,8,-2,1,-8,-4,-5,9,-10,-3,-4,3,1,2,3,-1,-5,8,-8,5,-7,2,-3,2,-4,6,5,-1,-3,4,-6,6,6,3,5,1,7,4,2,1,2,-3,-7,1,9,7,-2,1,6,-1,-1,3,-4,6,-2,2,-6,-8,3,-6,-7,-10,-7,5,6,-6,-8,3,-3,-8,9,8,-6,10,-6,-2,9,-1,4,2,2,6,-7,2,9,-7,-1,-4,1,-4,2,9,-9,-10,8,2,-9,2,9,-8,-3,9,-7,-10,-8,-5,-2,2,7,-4,-3,7,-7,10,2,-6,-2,-8,7,7,-2,-4,1,4,7,4,-6,-3,-9,-3,-2,5,-4,-5,1,-8,6,-7,-7,4,-3,-5,-9,-6,-1,9,-7,-9,9,4,4,7,4,-7,-7,7,9,-10,10,7,2,7,2,10,10,5,6,5,6,-4,-3,2,3,-10,-8,8,-5,-9,1,-10,7,-4,-7,-4,-1,5,-9,5,1,-7,-4,-10,10,-6,1,3,-1,-3,-7,1,-5,-3,-3,6,-8,4,-10,9,-4,-4,-2,4,-5,2,-4,-2,-9,-3,7,-8,-6,7,7,-7,-2,9,-7,7,-10,6,6,-4,4,7,9,-8,-10,-9,10,1,5,6,-2,4,6,9,9,-4,9,6,-1,-2,-9,9,7,9,-9,-5,-10,5,10,-7,-5,2,4,-3,2,7,6,-1,7,6,7,-7,2,-4,-7,-1,-1,8,1,-2,9,-6,-7,-10,9,10,-9,2,2,6,-6,-2,10,-6,-3,7,10,-7,-10,-3,2,4,4,-5,-3,-4,7,-10,5,-9,-4,10,-10,3,3,1,-3,1,3,4,4,-9,-3,8,-2,-6,-3,-2,-5,-5,3,6,-2,-5,-2,3,8,-6,10,9,-1,8,-3,-7,7,7,-1,-8,-1,-10,-2,6,6,1,6,-7,6,10,-8,-6,-10,-5,-5,6,5,-6,10,7,7,-1,9,-9,5,-2,6,-8,-10,-7,-5,10,8,9,1,-3,5,1,-2,-6,-10,2,6,-2,4,-1,4,-10,-9,-10,4,-9,7,-10,-10,8,5,-6,1,-7,-9,3,-2,-6,10,3,1,-3,-4,9,-1,4,8,-7,7,-1,2,10,7,-5,3,-2,-2,7,10,-9,-5,-7,2,2,-7,6,9,3,1,6,8,2,-5,-3,5,7,5,-2,9,-6,9,6,-7,5,-9,-4,10,-6,-5,1,-10,-9,-2,4,7,8,4,-5,4,-9,-2,1,-10], dtype = "uint8")#candidate|2216|(2366,)|const|uint8
call_2215 = relay.TupleGetItem(func_431_call(relay.reshape(const_2216.astype('uint8'), [14, 13, 13])), 1)
call_2217 = relay.TupleGetItem(func_433_call(relay.reshape(const_2216.astype('uint8'), [14, 13, 13])), 1)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_2245 = relay.TupleGetItem(func_1271_call(), 1)
call_2246 = relay.TupleGetItem(func_1273_call(), 1)
output = relay.Tuple([bop_2190,call_2201,call_2215,const_2216,call_2245,])
output2 = relay.Tuple([bop_2193,call_2202,call_2217,const_2216,call_2246,])
func_2252 = relay.Function([], output)
mod['func_2252'] = func_2252
mod = relay.transform.InferType()(mod)
mutated_mod['func_2252'] = func_2252
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2252_call = mutated_mod.get_global_var('func_2252')
call_2253 = func_2252_call()
output = call_2253
func_2254 = relay.Function([], output)
mutated_mod['func_2254'] = func_2254
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2072_call = mod.get_global_var('func_2072')
func_2073_call = mutated_mod.get_global_var('func_2073')
call_2335 = relay.TupleGetItem(func_2072_call(), 0)
call_2336 = relay.TupleGetItem(func_2073_call(), 0)
uop_2376 = relay.atan(call_2335.astype('float64')) # shape=(15, 14, 6)
uop_2378 = relay.atan(call_2336.astype('float64')) # shape=(15, 14, 6)
output = relay.Tuple([uop_2376,])
output2 = relay.Tuple([uop_2378,])
func_2379 = relay.Function([], output)
mod['func_2379'] = func_2379
mod = relay.transform.InferType()(mod)
mutated_mod['func_2379'] = func_2379
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2379_call = mutated_mod.get_global_var('func_2379')
call_2380 = func_2379_call()
output = call_2380
func_2381 = relay.Function([], output)
mutated_mod['func_2381'] = func_2381
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2416 = func_1972_call()
call_2417 = func_1972_call()
func_102_call = mod.get_global_var('func_102')
func_105_call = mutated_mod.get_global_var('func_105')
const_2440 = relay.const([[-3.291962],[1.668611],[-7.051295],[8.230905],[-9.734584],[7.424188],[-9.341487],[7.399408],[-6.052199],[-9.939486],[-9.795558],[-9.911710],[-0.220189],[9.463478],[-1.381113],[-3.830328],[-6.582854],[4.629886],[-0.920299],[-5.286501],[-5.846381],[0.901054],[5.373002],[8.326313],[-3.387801],[4.295668],[-1.758791],[-9.224418],[-5.148045],[1.164024],[8.382523],[5.366669],[-2.077130],[-6.900465],[2.332197],[1.875715],[1.376354],[-5.580733],[-1.559094],[-0.213025],[-6.882081],[8.290599],[9.882793],[0.523042],[-3.785832],[4.482936],[-8.478065],[5.528125],[1.325921],[-3.473613],[-3.187360],[1.855203],[-9.301149],[4.113679],[6.110645],[-9.050225],[9.626003],[1.152257],[2.746265],[-9.149651],[1.754467],[-0.264683],[-5.692433],[-9.729081],[6.055397],[-1.731242],[8.140631],[1.720698],[-7.515986],[-2.433455],[7.181391],[4.977529],[-6.071844],[2.250377],[6.302209],[4.910025],[3.217936],[-1.281384],[-9.764651],[-0.469355],[0.247917],[3.355745],[-7.069501],[9.457585],[9.998062],[-4.935167],[-7.115263],[-0.094483],[-9.329190],[-9.190248],[3.932999],[3.268467],[3.315187],[0.715613],[-5.039796],[-5.336013],[-0.696968],[-2.504717],[-9.812747],[5.602493],[0.960500],[-7.611432],[6.152242],[7.046915],[7.899140],[9.922209],[9.846250],[0.188491],[2.332135],[-1.442418],[-6.397750],[8.681920],[6.010721],[1.187953],[5.479504],[5.183698],[4.590373],[-0.173533],[-9.959508],[-5.744716],[-6.455393],[8.353967],[-9.524759],[-4.025064],[1.093684],[-1.109090],[5.309928],[-6.730587],[6.346652],[5.655164],[2.654844],[-3.964511],[-2.935194],[9.823780],[-4.252936],[-1.443823],[-9.859007],[-7.029676],[3.099198],[-1.991105],[-9.275947],[-4.488736],[-3.545854],[-8.789222],[2.939720],[0.505363],[-8.826088],[2.559072],[-3.051995],[-1.119040],[-7.938312],[2.105907],[-3.216122],[-3.064848],[2.556921],[-2.152709],[5.719592],[8.118900],[7.315608],[5.752945],[1.582114],[9.736177],[-7.661398],[2.633212],[-3.218809],[5.746672],[-0.749064],[5.991527],[0.315166],[-1.936854],[-3.674384],[-0.558566],[-3.419916],[1.911698],[5.718307],[-2.579788],[0.722698],[-2.332120],[-2.667593],[6.139804],[7.596013],[7.655370],[0.941440],[-5.047521],[-3.704227],[6.740673],[0.657237],[-4.178376],[-3.267720],[-4.047524],[3.769393],[-4.698687],[-8.110078],[-6.437804],[-2.499452],[2.721501],[5.588999],[-7.939429],[5.334859],[3.204278],[0.881473],[-9.781387],[-4.483850],[-1.350371],[2.862729],[-0.679356],[8.456682],[8.047173],[8.948668],[-0.405564],[6.976839],[-5.127879],[1.657194],[-7.014668],[6.342748],[-1.544334],[-5.331474],[-7.937994],[-3.461715],[3.972382],[4.379277],[-4.102031],[7.760008],[-6.840225],[9.987376],[-5.367973],[8.148860],[1.051468],[2.250393],[5.758515],[8.622055],[-6.650097],[4.627311],[-9.286688],[2.503657],[2.275962],[6.302197],[-6.167766],[2.754223],[-7.682936],[2.345682],[-9.374127],[7.386393],[2.989580],[4.912473],[2.061421],[0.105375],[-4.839650],[-5.306086],[-1.878528],[9.558425],[-3.098977],[6.339610],[6.915355],[-2.793241],[4.742920],[-1.547188],[-8.691551],[-1.144548],[6.307448],[-4.227351],[-1.177772],[-5.753352],[-4.425204],[-1.898833],[-1.037093],[-4.434516],[-4.996662],[9.573064],[8.423633],[8.036362],[-4.682726],[-4.707448],[2.624172],[-4.936195],[-1.263620],[-1.537481],[-1.064758],[1.208009],[8.212493],[3.024989],[7.632894],[3.950243],[8.274420],[2.277943],[-0.630066],[-9.464703],[3.715386],[8.413278],[9.468304],[7.805879],[-4.134928],[-6.558921],[-7.098805],[-7.507206],[7.983536],[3.765991],[0.082417],[9.087437],[-8.162223],[4.457132],[1.869714],[6.114441],[-5.234056],[-8.179804],[-7.169570],[1.481466],[5.726434],[-4.310946],[-4.178189],[2.404553],[-8.104701],[-4.146828],[9.641636],[4.581035],[6.492172],[-8.285367],[-8.204580],[8.168365],[-0.314406],[-7.998636],[4.273836],[-5.598218],[7.250094],[-0.283376],[5.310532],[-2.811036],[-8.200329],[1.940871],[-3.732839],[5.571208],[-0.915247],[-2.111832],[6.530782],[8.504093],[5.729434],[8.799767],[-0.122096],[3.622158],[-4.482557],[0.653832],[-4.102368],[7.392246],[-3.863427],[-4.834402],[2.611202],[-4.065420],[-6.853586],[-8.838784],[-5.329931],[9.621977],[0.465826],[-8.956159],[-0.666718],[-5.489585],[1.347382],[-7.914128],[1.326854],[4.919943],[0.793829],[-6.632687],[5.676792],[-6.829641],[5.712071],[-1.627557],[-1.663095],[-6.620532],[-5.889807],[8.070652],[-8.538683],[4.083429],[2.219798],[0.379592],[3.514435],[6.806747],[2.349519],[-4.496687],[-1.313436],[-1.429630],[3.351095],[-7.595697],[-4.136737],[-8.350698],[2.408510],[-0.663351],[0.350283],[-6.176473],[7.052263],[9.783478],[-4.213336],[7.086707],[-6.602758],[-7.383062],[-2.633370],[-0.595518],[6.370068],[-5.886368],[1.377367],[-2.923844],[-6.858965],[5.499149],[-8.870199],[8.266925],[4.246614],[3.421294],[1.430795],[3.250306],[-0.321591],[-0.817897],[-5.515732],[-4.862722],[6.424174],[-5.517061],[3.351825],[-9.286720],[3.379683],[2.282133],[5.113903],[3.769856],[2.438646],[-7.145875],[-6.717416],[-1.278854],[4.365325],[2.584711],[-3.733673],[-5.716097],[-7.359168],[-0.874417],[1.009568],[-1.793780],[-9.044294],[0.638912],[-3.311350],[8.640821],[1.954761],[-1.440691],[1.996390],[-2.800483],[8.434397],[1.268109],[0.889969],[-5.148815],[-4.451705],[-2.186165],[1.272558],[-8.754878],[-6.347597],[1.403756],[-7.414902],[0.682555],[-0.963642],[0.558542],[-2.175966],[-7.330854],[-9.036807],[0.263208],[2.677490],[3.043982],[9.529541],[-3.564074],[-3.307589],[-4.305874],[-2.115870],[4.197223],[-0.500887],[-1.833732],[-0.209723],[6.961005],[7.550532],[7.336704],[0.805058],[0.594570],[-8.821839],[-2.611714],[-4.812745],[-2.493242],[1.946375],[-2.819354],[-8.168842],[-5.325694],[-4.597718],[5.382980],[3.762168],[0.797118],[-6.159807],[-8.347507],[-1.012618],[0.256037],[-7.965485],[-9.705402],[-9.347183],[-4.490895],[0.199772],[0.935728],[-7.991178],[6.220324],[-8.529249],[-8.133948],[4.624177],[-7.354518],[-9.805269],[0.614889],[-6.580601],[3.569936],[-0.282887],[-0.249867],[-1.272357],[-4.542191],[0.467209],[3.224569],[3.491694],[-6.729172],[3.511231],[4.635527],[-7.764314],[-4.572655],[-1.462363],[9.499282],[-7.866710]], dtype = "float32")#candidate|2440|(520, 1)|const|float32
call_2439 = relay.TupleGetItem(func_102_call(relay.reshape(const_2440.astype('float32'), [8, 13, 5])), 2)
call_2441 = relay.TupleGetItem(func_105_call(relay.reshape(const_2440.astype('float32'), [8, 13, 5])), 2)
output = relay.Tuple([call_2416,call_2439,const_2440,])
output2 = relay.Tuple([call_2417,call_2441,const_2440,])
func_2446 = relay.Function([], output)
mod['func_2446'] = func_2446
mod = relay.transform.InferType()(mod)
output = func_2446()
func_2447 = relay.Function([], output)
mutated_mod['func_2447'] = func_2447
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2501 = func_1620_call()
call_2502 = func_1620_call()
uop_2506 = relay.acos(call_2501.astype('float32')) # shape=(726,)
uop_2508 = relay.acos(call_2502.astype('float32')) # shape=(726,)
output = uop_2506
output2 = uop_2508
func_2513 = relay.Function([], output)
mod['func_2513'] = func_2513
mod = relay.transform.InferType()(mod)
mutated_mod['func_2513'] = func_2513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2513_call = mutated_mod.get_global_var('func_2513')
call_2514 = func_2513_call()
output = call_2514
func_2515 = relay.Function([], output)
mutated_mod['func_2515'] = func_2515
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1418_call = mod.get_global_var('func_1418')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_2559 = relay.TupleGetItem(func_1418_call(), 0)
call_2560 = relay.TupleGetItem(func_1420_call(), 0)
func_1033_call = mod.get_global_var('func_1033')
func_1037_call = mutated_mod.get_global_var('func_1037')
var_2581 = relay.var("var_2581", dtype = "float32", shape = (624,))#candidate|2581|(624,)|var|float32
var_2582 = relay.var("var_2582", dtype = "float64", shape = (36, 24))#candidate|2582|(36, 24)|var|float64
call_2580 = relay.TupleGetItem(func_1033_call(relay.reshape(var_2581.astype('float32'), [8, 13, 6]), relay.reshape(var_2582.astype('float64'), [864,]), ), 1)
call_2583 = relay.TupleGetItem(func_1037_call(relay.reshape(var_2581.astype('float32'), [8, 13, 6]), relay.reshape(var_2582.astype('float64'), [864,]), ), 1)
output = relay.Tuple([call_2559,call_2580,var_2581,var_2582,])
output2 = relay.Tuple([call_2560,call_2583,var_2581,var_2582,])
func_2586 = relay.Function([var_2581,var_2582,], output)
mod['func_2586'] = func_2586
mod = relay.transform.InferType()(mod)
mutated_mod['func_2586'] = func_2586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2586_call = mutated_mod.get_global_var('func_2586')
var_2588 = relay.var("var_2588", dtype = "float32", shape = (624,))#candidate|2588|(624,)|var|float32
var_2589 = relay.var("var_2589", dtype = "float64", shape = (36, 24))#candidate|2589|(36, 24)|var|float64
call_2587 = func_2586_call(var_2588,var_2589,)
output = call_2587
func_2590 = relay.Function([var_2588,var_2589,], output)
mutated_mod['func_2590'] = func_2590
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2594 = func_1972_call()
call_2595 = func_1972_call()
func_2586_call = mod.get_global_var('func_2586')
func_2590_call = mutated_mod.get_global_var('func_2590')
var_2609 = relay.var("var_2609", dtype = "float32", shape = (624,))#candidate|2609|(624,)|var|float32
var_2610 = relay.var("var_2610", dtype = "float64", shape = (864,))#candidate|2610|(864,)|var|float64
call_2608 = relay.TupleGetItem(func_2586_call(relay.reshape(var_2609.astype('float32'), [624,]), relay.reshape(var_2610.astype('float64'), [36, 24]), ), 0)
call_2611 = relay.TupleGetItem(func_2590_call(relay.reshape(var_2609.astype('float32'), [624,]), relay.reshape(var_2610.astype('float64'), [36, 24]), ), 0)
output = relay.Tuple([call_2594,call_2608,var_2609,var_2610,])
output2 = relay.Tuple([call_2595,call_2611,var_2609,var_2610,])
func_2627 = relay.Function([var_2609,var_2610,], output)
mod['func_2627'] = func_2627
mod = relay.transform.InferType()(mod)
mutated_mod['func_2627'] = func_2627
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2627_call = mutated_mod.get_global_var('func_2627')
var_2629 = relay.var("var_2629", dtype = "float32", shape = (624,))#candidate|2629|(624,)|var|float32
var_2630 = relay.var("var_2630", dtype = "float64", shape = (864,))#candidate|2630|(864,)|var|float64
call_2628 = func_2627_call(var_2629,var_2630,)
output = call_2628
func_2631 = relay.Function([var_2629,var_2630,], output)
mutated_mod['func_2631'] = func_2631
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2642 = relay.var("var_2642", dtype = "float32", shape = (12, 8, 6))#candidate|2642|(12, 8, 6)|var|float32
uop_2643 = relay.sin(var_2642.astype('float32')) # shape=(12, 8, 6)
output = uop_2643
output2 = uop_2643
func_2647 = relay.Function([var_2642,], output)
mod['func_2647'] = func_2647
mod = relay.transform.InferType()(mod)
var_2648 = relay.var("var_2648", dtype = "float32", shape = (12, 8, 6))#candidate|2648|(12, 8, 6)|var|float32
output = func_2647(var_2648)
func_2649 = relay.Function([var_2648], output)
mutated_mod['func_2649'] = func_2649
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2661 = relay.const([[[-3,9,3,-5,3,3,-1,-6,-1,7,5,-1,-9,4,-5],[10,-9,-4,-10,-7,3,2,6,-4,10,-5,3,6,9,2],[8,1,-2,10,-6,-2,-9,-4,2,-4,-1,1,-6,-6,6],[-8,1,-2,8,4,2,-4,2,-6,10,-9,10,5,-7,-1],[-2,-7,-10,-5,-4,-4,-6,-7,-8,3,2,9,3,8,-6]],[[3,9,10,-1,-10,5,-1,-2,-9,1,10,-5,-7,-4,8],[-3,-9,-1,4,5,8,7,1,8,-2,2,-4,3,-5,8],[9,4,-6,7,8,-1,10,-8,7,-10,6,-3,9,6,4],[-5,5,-1,6,-8,-7,-5,-9,9,10,9,3,10,7,-4],[-10,-4,-2,-6,10,-5,7,6,-2,3,6,1,3,1,-9]],[[-1,-8,4,9,-8,-3,7,-2,5,-10,7,-2,7,-4,-5],[5,-10,2,-1,-3,9,-2,8,-1,-8,-3,9,5,-1,6],[2,4,4,-7,9,4,5,-6,9,-6,-8,-2,-4,-5,-8],[1,-2,-1,4,-3,-5,1,-4,5,-4,-10,9,9,9,-8],[-7,-6,-5,7,-2,-2,-7,10,-2,3,-5,-8,5,10,3]],[[2,7,9,4,1,4,4,6,3,9,4,10,-10,1,-10],[8,-4,-7,-6,9,-6,1,-6,-6,-7,-4,-8,-4,9,8],[2,9,-10,-9,1,4,-2,-9,-3,7,7,4,-8,-6,6],[6,2,3,6,-8,1,4,8,2,-6,3,2,3,-6,9],[-4,9,4,8,4,-7,-8,8,4,-7,-1,-8,-8,5,9]],[[-5,10,-7,-7,-4,-10,6,4,4,-6,-10,1,-9,8,-4],[-7,10,-6,10,1,-4,5,-7,-6,6,-1,-8,-8,-5,1],[3,-10,-5,-9,8,1,9,4,4,8,-3,-8,-3,-9,5],[8,10,-1,4,2,-2,-6,6,8,9,1,4,4,-8,-8],[3,-10,-5,7,-3,-3,-1,-7,-6,-8,10,8,9,-3,-3]],[[9,-8,10,-2,-3,6,-1,5,-6,10,8,1,5,-8,-8],[-1,8,6,5,6,2,-5,1,-10,1,-8,1,6,1,4],[6,6,7,3,1,-9,1,7,-4,-6,-6,-7,-6,-3,-9],[-6,-4,-1,8,2,-5,-2,7,-10,-8,-7,3,-1,6,-7],[3,-2,-8,6,8,5,9,2,9,-8,-8,-1,-10,1,-8]],[[-3,-2,8,7,-5,-3,10,10,-9,-4,5,-3,-7,1,-3],[6,2,10,-7,-3,3,5,-10,-5,-3,8,-5,4,-6,-7],[6,4,1,-5,4,-5,7,-2,4,-6,8,-2,-4,4,3],[-8,7,6,-9,-8,-10,10,2,4,9,10,-3,2,-3,9],[8,-5,-3,-2,-2,3,-3,1,5,1,7,-5,8,-10,-2]],[[8,-10,4,4,6,-6,1,-4,-7,10,-4,1,-7,-7,-1],[8,10,2,1,-9,5,-6,7,1,-8,1,-7,-1,5,-1],[-6,6,9,9,-6,-9,-4,-9,4,4,-10,7,-1,-2,-8],[-3,-6,-10,6,6,-8,5,9,-2,4,6,2,1,-4,8],[-10,6,-9,-8,8,9,9,9,-9,-1,-8,7,2,3,-5]],[[-8,3,8,2,9,1,7,3,8,-8,7,9,6,-5,7],[-2,-4,1,-7,9,-3,7,2,6,3,10,8,3,-1,2],[6,-7,9,4,10,-3,6,3,-9,2,10,2,-1,3,1],[4,-1,10,6,7,9,-9,9,7,-10,10,10,10,-6,7],[-2,7,-9,-5,-2,3,10,8,-3,-9,-1,2,2,-5,7]],[[-6,-1,4,3,-9,2,6,-1,3,-7,-4,1,10,-10,-10],[6,-7,10,-1,3,-7,9,6,8,-5,-2,-5,-6,6,1],[10,3,-6,-1,7,-6,-8,10,6,-3,-4,9,6,6,9],[10,-5,-9,8,-10,5,-1,-3,-4,10,-10,-2,6,2,2],[9,5,4,7,-5,1,6,-2,5,-8,5,1,-4,-5,-9]],[[2,-8,-2,-10,-8,-9,-4,1,4,3,-10,7,-4,-8,-1],[-8,5,-7,-2,-9,3,-9,2,4,7,5,6,1,-5,10],[8,-9,6,3,5,8,9,-7,-9,-7,8,6,-4,-3,5],[-6,-1,-7,1,5,-1,5,4,1,3,-2,9,-5,4,-3],[9,-4,-4,-7,3,2,7,-6,-9,4,6,-5,3,-10,-5]],[[-8,2,-7,4,-1,8,-3,-3,7,7,-8,-9,-7,-2,-1],[-10,3,10,-10,6,3,7,10,-4,-3,-8,3,-3,-2,-7],[-2,-10,3,-7,-6,6,-8,5,4,6,-2,10,4,8,-8],[6,4,-7,8,1,8,5,-2,-3,-2,6,3,-1,-1,2],[-6,1,4,6,-3,-8,-4,-6,-5,-3,-10,-3,8,10,5]],[[-1,10,-10,2,-6,4,-8,9,7,7,-1,10,9,-9,7],[3,-6,2,7,3,2,1,8,-6,-2,-4,9,8,-1,-9],[3,-8,6,7,3,9,9,-5,-10,3,-5,6,2,4,-2],[-6,6,6,-2,-7,4,2,6,2,10,9,-6,-1,-8,4],[7,-7,-3,-7,5,-2,10,2,-3,3,2,1,4,8,5]]], dtype = "uint64")#candidate|2661|(13, 5, 15)|const|uint64
var_2662 = relay.var("var_2662", dtype = "uint64", shape = (13, 5, 15))#candidate|2662|(13, 5, 15)|var|uint64
bop_2663 = relay.maximum(const_2661.astype('uint64'), relay.reshape(var_2662.astype('uint64'), relay.shape_of(const_2661))) # shape=(13, 5, 15)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2673 = func_1972_call()
call_2674 = func_1972_call()
output = relay.Tuple([bop_2663,call_2673,])
output2 = relay.Tuple([bop_2663,call_2674,])
func_2675 = relay.Function([var_2662,], output)
mod['func_2675'] = func_2675
mod = relay.transform.InferType()(mod)
var_2676 = relay.var("var_2676", dtype = "uint64", shape = (13, 5, 15))#candidate|2676|(13, 5, 15)|var|uint64
output = func_2675(var_2676)
func_2677 = relay.Function([var_2676], output)
mutated_mod['func_2677'] = func_2677
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_2687 = relay.TupleGetItem(func_2153_call(), 0)
call_2688 = relay.TupleGetItem(func_2154_call(), 0)
func_2112_call = mod.get_global_var('func_2112')
func_2114_call = mutated_mod.get_global_var('func_2114')
call_2691 = func_2112_call()
call_2692 = func_2112_call()
func_2586_call = mod.get_global_var('func_2586')
func_2590_call = mutated_mod.get_global_var('func_2590')
const_2712 = relay.const([-6.044522,5.584422,9.994543,5.206752,4.033369,8.675199,-1.573410,2.957104,4.194212,3.655141,9.002093,-6.463341,-6.026392,-4.189472,1.882685,7.133676,8.903497,-5.203854,-9.445642,-8.129067,-1.472386,-8.424064,0.478558,0.666859,8.609069,8.121957,-6.937753,4.188068,0.620127,-8.618407,0.475861,0.670798,-5.590307,4.907824,1.036833,-6.763945,5.116009,9.975088,-4.957671,-3.884787,1.127191,8.613317,7.106471,-8.919211,-3.718767,0.416123,-2.042372,4.325693,-5.926523,-2.352975,-0.817267,0.133911,9.856986,-2.809350,-8.149975,5.605517,-2.741297,8.755768,2.762532,7.325444,-6.660221,5.621455,1.685423,1.427337,9.086253,8.482057,-2.730445,8.551791,9.732671,-7.271229,-5.447600,4.035326,-3.075557,3.149071,5.722293,7.508631,0.264579,-8.306428,0.119223,1.647416,9.013276,2.128757,3.716005,5.218466,-1.746263,-9.302429,2.744524,-8.712758,-5.373249,6.370039,-9.731023,4.644383,2.886576,-8.820205,1.880175,3.010389,-2.731966,2.505022,-0.241317,4.358669,-2.567559,5.085580,1.261291,4.178621,0.089164,3.549128,1.286653,-3.828613,0.779361,-6.885978,-2.549540,4.935737,-0.013872,-5.724704,-8.704909,6.717130,-5.399280,-1.854087,-0.304180,2.318847,9.122660,1.417354,-1.377442,8.544060,-8.726210,-4.637804,-8.759054,-6.640884,-9.661202,3.803376,-1.869151,1.324987,6.227909,-7.461124,1.999532,-2.863357,4.192991,-0.391737,0.249599,7.414609,1.334398,-5.854910,1.212947,-5.981377,8.834132,-1.429184,-7.839751,-6.769412,-4.450864,-5.878390,5.286391,-1.466917,-9.783637,-2.003258,-4.403754,-0.804004,4.032366,0.725568,5.844911,6.363328,7.232435,-2.872540,0.521800,-1.635885,1.618995,-0.259349,2.760838,6.565335,5.613761,5.947807,4.966325,4.242192,-7.102201,-7.269812,-9.591745,-8.027388,5.040072,1.830776,-7.478087,-2.556694,-0.494749,-0.779190,5.016071,-6.426225,6.217641,5.239427,4.655928,6.646008,5.938411,1.556044,4.922351,-6.301870,-5.436492,-8.237661,5.374695,-6.305556,1.431722,5.584258,3.365187,9.190361,9.158272,2.894238,2.892675,-1.998955,-2.750862,-9.628502,4.608289,2.581151,-3.990497,-5.601021,-8.139840,-3.924005,3.663661,8.451755,7.865775,0.896926,3.148504,1.835830,-8.738334,8.103942,9.733421,-1.479514,-0.018698,-6.254301,5.582636,-0.093211,9.641028,3.986418,-8.042629,2.067044,1.484685,-6.625687,-4.781454,8.335748,4.384512,4.802895,-3.233610,-4.342396,4.265696,-3.877524,1.667523,4.545242,9.477034,-0.751179,6.020625,2.513509,-0.716878,3.482179,0.323229,5.510931,7.292260,3.040763,3.118026,2.685596,-5.164207,2.325697,-8.745376,-8.961544,-4.839282,-9.477082,6.358083,-2.266003,7.724444,-1.509002,8.548677,-5.078087,-2.353101,-6.419846,0.933249,5.873502,4.888754,1.814109,4.976669,6.045423,-6.901323,8.029535,3.872871,-9.332199,6.239141,4.418103,-2.838128,3.862559,4.369045,-2.367098,8.835429,-8.930142,3.401507,3.384843,-4.525911,-4.413501,-1.725332,-8.611336,4.972908,-3.508857,2.464282,7.342133,4.927566,-2.191713,1.703236,2.246208,-0.900775,1.715006,-0.204818,-3.568405,-8.047611,9.767779,-8.505623,-2.750302,-2.813310,-3.427020,2.156048,-8.167381,2.569305,5.841952,6.478364,5.634109,6.998656,9.265730,9.127768,-8.815289,-0.320177,-0.852667,5.119976,7.698479,-6.834852,1.708887,4.715929,-4.679132,-3.245837,3.782505,9.277709,-8.296012,-7.830790,-5.082967,6.915026,3.661481,-6.121591,1.488218,-1.173632,-2.667476,-3.603563,-5.067786,2.063430,-5.032942,3.381262,2.017948,3.705587,4.929349,-3.388640,6.420291,-8.192483,1.535962,0.042885,-4.620099,7.918294,-3.793643,-6.650095,-5.975111,1.777779,2.836637,-4.065739,7.132090,-0.828245,2.583823,-4.337691,9.758397,6.784433,-2.664442,4.839043,0.290707,5.020828,-1.175581,-4.876536,0.148656,-5.396368,-1.755681,1.716142,-1.615981,-8.913181,-6.705821,-1.743248,8.216018,6.304243,-6.283890,-2.291735,7.676149,2.758068,4.430144,-2.022998,-2.432010,-0.170548,-1.438361,-4.147710,0.279237,-4.190672,-6.041028,8.679398,3.630191,7.616423,9.289442,1.543686,7.447139,8.531132,-6.122942,3.743210,-4.511505,-6.910644,3.872079,8.665741,1.470154,9.192688,-2.183955,-2.186958,1.876776,-6.742904,3.132985,9.134193,-8.249864,-7.664011,1.724322,8.089594,2.484875,-2.642349,5.209970,4.580383,2.122950,-4.988911,-7.609869,8.470150,-5.670742,-7.527239,8.625499,-5.792313,-9.223139,7.207749,-4.773843,5.083495,-6.983759,-3.384311,5.999198,-3.653580,-6.621116,9.476418,5.055066,-1.345733,-5.349190,-2.432856,1.844982,5.269970,6.959174,3.973048,-8.843320,1.122225,-4.918666,-2.723947,7.342221,-7.216401,5.369411,-6.110223,5.913088,-9.849004,-7.572199,8.232000,0.350946,3.846963,9.463606,-9.248514,-8.928880,-4.374943,0.327633,-9.242133,-3.168037,0.682043,-1.067532,-2.684458,-3.698499,5.666269,3.015735,-4.812992,-8.907084,9.642666,-1.967503,5.549964,4.768009,7.943531,-3.367235,-8.979460,4.705915,-0.813309,5.765456,4.768642,3.974462,-6.857610,7.944627,3.778833,9.128755,-4.633902,-7.981655,-9.614862,8.764351,-5.909326,7.826787,-4.792964,-5.452791,9.724170,-1.459572,-1.886597,6.127857,-7.301791,3.119263,-0.813396,1.378932,8.403960,-5.264237,9.699701,7.510786,8.934056,-5.179157,9.788926,-1.835961,6.320475,5.569521,-8.384778,-6.669301,-7.615217,-1.093802,-1.799661,2.510160,9.147224,3.354691,7.173033,7.344545,-0.343606,9.268199,-0.182084,-3.554680,-3.794824,0.219400,-2.467901,5.023844,-5.617564,-2.010888,1.379446,-5.762383,3.537526,-5.652708,-0.303754,-7.211324,7.270996,4.971693,9.904143,9.214734,6.157072,5.049433,5.582275,-5.766170,-3.067571,-6.590447,-5.163414,3.900712,7.244905,9.680399,1.235145,-1.832408,7.684862,-2.399245,6.239383,-2.620779,1.809345,-1.436023,-3.125917,-7.707164,9.466728,4.100700,3.666854,-8.352741,-4.413360,-3.512707,3.427398,-1.738658,-9.536460,2.419874,7.676779,7.611416,2.889385,8.870352,-2.325825,6.617240,-4.047513,-6.667182,3.296454,-9.484761,-0.420700,2.910770,9.434341,-6.977287,-7.340034,9.446225,5.886513,-0.204985,0.568780,-8.562769,2.815012,1.641277,-7.694830,8.872790,-6.367525,2.004069,7.569020,-4.232275,6.469555,-1.150658,9.190814,4.700755,-8.118651,1.963671,8.343475,-4.905457,0.229781,-9.490885,4.813700,3.266489,-1.664364,-7.450798], dtype = "float32")#candidate|2712|(624,)|const|float32
const_2713 = relay.const([[9.217033,0.456026,4.278448,-8.090779,2.725109,-3.080075,2.089168,9.106652,-6.089327,4.053438,9.368307,-4.471506,8.593336,-6.054046,-8.325387,1.443793,-9.616314,-2.752517,-0.641667,5.798539,-6.925382,6.164237,4.578694,-9.754891,7.055412,-4.730516,7.772101,-5.553647,-9.613763,-8.334768,-5.078952,-5.183512,-7.895073,-7.351753,-1.177996,-0.885273,-6.217753,-5.417909,8.572812,1.936733,-2.430634,5.148007,-7.679494,1.202056,-9.688276,-9.087017,1.646856,-3.718535,9.014227,-6.734955,-3.016530,7.219683,4.610799,-7.851956,-0.394238,1.400274,1.145645,-2.487006,8.073180,0.797312,7.975027,-2.641323,-8.866378,3.798280,-1.301993,1.328815,-5.342991,4.119515,-8.176580,-4.960368,7.885661,-2.949557,-9.310180,-7.604858,-1.246293,-8.784952,9.882938,-9.053778,5.671447,-4.270932,0.934448,-6.763190,-6.706989,2.917226,1.986481,6.144199,-5.514254,-8.694033,-1.566615,-5.468065,-6.911921,-4.491622,9.673969,6.961770,-1.379208,-7.698027,-6.419333,-6.002702,-3.609126,5.042954,9.151395,-2.495741,-2.067392,8.064851,-2.582949,1.238840,-8.242811,-7.207863,-9.776921,-7.192203,5.835983,8.409331,0.572041,-4.814601,8.993967,9.906231,-2.446012,-4.406465,-5.673625,5.887202,6.510901,1.083610,7.447900,-7.084454,-7.793030,-2.378101,0.688176,3.770206,9.454894,6.315468,2.023803,-9.877059,-0.872161,2.164266,-2.150071,7.669182,7.698638,9.118353,7.440528,6.119769,-8.075515,5.330739,5.028662,-9.369532],[4.596295,9.279436,-5.514360,-3.568264,5.165636,-7.424816,3.548309,3.987452,-8.264816,9.803268,-2.776867,5.929098,-0.448631,8.447490,2.575411,7.099098,3.664187,-9.253572,-0.243491,-8.037442,-2.181888,0.684265,1.726945,-7.842377,2.638279,0.295182,-4.425713,-9.954370,9.061308,-5.856800,6.545997,9.954023,1.677467,-7.293532,2.693361,9.920511,2.436995,5.598606,3.048775,9.873510,3.155804,6.204646,6.411967,-4.768805,9.011763,-7.179171,-9.482231,5.595483,1.335302,6.210226,-3.227622,-1.323397,7.681630,-5.970714,2.818137,4.815099,-1.368027,1.713523,-7.597863,3.795347,-9.541941,-4.357457,0.585984,-0.421343,-9.817095,5.020529,-2.036442,-5.843127,1.071742,6.885996,-8.602669,9.312201,2.932942,5.655824,9.598918,8.053283,-5.690817,-2.777281,1.670217,-7.139860,8.035606,-1.954850,7.958116,6.211529,-4.313760,9.736353,-9.096395,2.354288,3.071844,9.863423,6.920525,0.635092,3.568335,-3.153824,-8.574517,-3.834303,-6.223279,-2.670896,9.006775,6.952907,-4.167352,7.579500,3.033111,-1.880643,4.970885,8.773729,-6.401451,-0.620203,9.379998,-0.385132,7.625806,9.907141,4.261123,0.536597,6.012608,-0.499773,8.181653,-4.180555,2.242792,-4.571366,3.661973,8.504393,-2.624743,7.848893,-0.493363,8.915263,-8.672993,-1.372440,-1.140767,-7.112123,-4.359908,9.267729,-1.531611,-3.845714,-5.062699,-3.052592,0.248926,3.927175,8.449558,5.414186,-9.199446,2.224553,8.684587,1.926052],[5.557609,1.868681,-0.605903,-0.035525,0.796967,-5.804687,7.729227,4.688703,5.238418,-3.338056,5.185621,-5.216724,-3.146666,-6.543929,2.461839,-6.178953,1.530450,-1.539728,-5.927081,4.967052,-8.771821,-8.507435,-5.055975,-0.826825,-3.979990,9.177503,-8.034908,-1.356799,2.985706,-3.485620,-0.413291,-8.347873,-8.610247,2.637938,3.514691,-0.490861,0.707131,4.620082,-5.969320,4.257670,-0.875112,-2.691203,-3.875449,7.932538,4.689563,3.753670,-3.753168,-2.314290,-4.743487,-7.410606,-2.248171,3.796990,5.559845,2.245471,-6.488780,-8.227625,5.312173,2.758088,7.887390,-6.810192,-5.065728,-2.494676,9.136542,-0.345225,4.327937,4.250734,1.788648,7.132147,6.792630,2.515422,8.017651,-2.305102,-1.202098,-8.659328,-0.990675,5.502836,-0.727659,-7.784527,-0.337787,-4.226384,1.189504,1.462079,-6.519276,1.078758,2.459818,-7.748489,-3.094078,-1.804942,-8.620829,0.507821,4.214478,-1.883482,-4.734292,1.880797,8.478332,-1.030942,0.891590,3.472074,-5.282797,3.735078,1.291663,-0.304729,-4.448728,7.106219,-8.008173,9.017379,9.445886,5.143108,-0.155451,-0.339666,-4.260702,-8.566752,-6.089421,-9.491420,-2.130465,-0.889533,3.538911,-0.301442,4.011699,-0.300503,-9.676042,7.820788,5.349901,5.958904,6.755113,5.799646,8.405899,6.736519,-5.748372,-3.604978,8.628216,-6.883527,-5.310774,-2.408524,-8.624984,5.678131,2.843529,-5.864226,5.413102,-3.296365,7.409208,2.900143,-8.452304,-0.342466],[-8.380796,9.883552,-6.084551,-6.909409,-0.525369,-5.384263,3.893545,9.692774,7.650558,-8.871672,-9.138480,7.821466,-8.591710,-0.382888,-5.558831,9.615988,0.199787,-0.050521,4.962631,-8.163701,-9.904138,-4.804912,-6.760658,-1.660848,-5.743413,0.821274,0.804774,-9.291010,4.260509,-9.159853,-8.345846,-2.222190,2.381967,2.678008,5.168789,-7.419572,-1.482229,6.937293,2.539053,-9.074234,-8.995807,-4.986142,8.957886,-6.787157,7.034806,-8.831559,-6.110179,8.173589,9.190194,-5.897274,3.613074,-6.310959,-2.953434,-1.735905,6.803027,8.017046,-4.423011,-8.435133,-7.242978,-8.044583,3.254926,0.130012,0.113725,0.121561,3.028887,6.103860,0.552856,6.840300,-0.587649,6.142677,-4.177153,2.296780,-9.807431,-7.800535,-1.074738,-5.412490,1.601114,-8.089054,-1.604019,-4.258624,1.410684,-8.809893,9.909861,-7.242261,-2.408301,-0.818053,-5.783323,0.105848,7.623791,-6.437023,1.940631,4.271919,-7.808585,6.186973,-2.475108,7.539651,-2.079470,-2.115646,7.124425,3.623134,-2.415251,-1.736637,8.671182,5.128517,-6.264741,6.799498,-3.128602,-4.320692,-8.719621,3.417212,9.613525,-9.656323,2.127704,-2.535492,-9.915075,-9.990983,2.096824,5.886554,-6.267458,6.932349,-3.907814,-9.306397,0.789186,-8.884912,0.327816,-7.058607,-4.483167,-5.507073,2.612548,-1.254435,-8.629225,-6.136821,9.847365,-2.781444,-9.748291,-0.932345,-4.009220,4.165231,-3.998142,4.597397,-3.760514,-7.575400,7.215627,-1.907932],[3.103230,-0.793774,7.086679,0.562175,-9.799283,-1.307083,0.488099,-8.182505,-2.681951,-3.156160,8.511101,-5.038425,8.977484,-0.053902,7.586927,-3.527891,8.177819,-6.899553,6.609705,5.867713,1.597370,7.931890,6.007687,3.356624,5.033802,-5.433938,7.745840,-9.206356,9.343386,6.627999,3.140396,-2.795534,-8.953847,2.022279,-7.626182,-4.934594,8.714318,0.151308,9.308629,-7.972484,-6.948190,1.240338,7.188954,-7.045339,-9.571772,1.747287,3.731134,-1.081096,-9.189966,-4.078117,-7.872759,-3.496498,-8.975657,-4.857150,-2.846447,-7.963047,1.466759,5.456254,-0.042110,-2.286119,4.488520,-9.294885,6.913995,8.858367,3.912714,-6.454291,-4.797223,7.200057,-6.339176,-4.044179,-4.522673,8.219018,-9.270441,-5.604407,7.684937,0.720298,-8.149526,7.131460,-0.876805,7.290722,-7.643717,2.685306,-1.249627,8.860661,2.737570,-6.834785,6.975561,7.849521,-2.171949,-0.110566,-3.925989,-4.730132,6.737331,-5.814420,-1.318051,0.490518,-6.946466,5.758341,2.232997,3.487361,-5.301098,-9.082266,-6.372936,9.148671,7.195741,-8.055729,2.860067,-7.715141,-8.746762,-5.901336,-9.899939,-7.749621,1.558110,-1.227927,-5.343334,8.481024,3.652257,-7.822295,4.704850,-4.677241,8.931674,7.564098,1.733742,-0.704150,-7.581633,5.706397,-1.841850,2.302181,5.647221,8.496215,-0.804894,3.061558,-1.085955,7.766569,1.643526,9.526889,-9.291335,-5.424054,-1.931523,6.986615,1.987187,-5.520871,-1.865704,0.227947],[8.540291,-2.318034,9.732325,0.142347,5.465236,-9.086994,-1.714798,-7.535082,-7.627899,-2.575537,0.109182,3.456911,-3.688072,-0.932060,-0.086325,4.440483,-3.430081,2.291641,0.435392,-0.482036,2.274741,6.826663,-7.974821,-3.284341,-8.944617,5.637229,-5.020611,2.974352,-0.626784,-4.908988,5.154614,-5.502874,6.190237,-2.761452,-5.695357,7.060196,2.201403,5.154997,-7.313889,-6.362590,8.719930,-0.968375,-3.335015,-6.852138,-3.634033,7.733339,-7.675549,4.368911,4.856839,-1.845467,-1.678668,4.694826,5.185195,9.914301,-6.490991,-5.473193,-2.295317,-0.598311,-2.259330,0.369137,4.636542,2.607832,8.604893,5.034564,-0.935731,-9.285690,7.753803,-3.202314,2.482834,0.425897,3.473119,7.401361,-4.629533,-2.746783,-1.974417,6.198405,9.824675,-8.482751,-6.859835,7.106397,7.228152,1.963067,-2.832452,6.767047,-4.598070,0.947062,8.549223,6.940997,-0.146135,-0.406622,3.247720,-2.243670,-7.169309,2.864109,-9.238663,9.749569,9.150861,2.927906,-4.308909,7.055939,2.875720,-2.019019,0.709179,-5.174071,-9.760063,-6.802248,8.985583,-6.944852,7.648724,-2.350579,-0.846632,-3.907684,-9.407636,4.971275,-0.694108,6.437678,-6.569164,-6.458112,7.400279,5.618358,-2.038124,-1.748539,3.838610,3.328565,-1.964241,-6.147631,-7.456719,-2.687302,-8.710184,5.690633,-2.636335,-0.865435,9.802840,-0.059010,-1.137716,-8.292370,-3.028584,-3.807125,4.256309,-0.706638,1.239249,-4.898763,3.410735,-7.742946]], dtype = "float64")#candidate|2713|(6, 144)|const|float64
call_2711 = relay.TupleGetItem(func_2586_call(relay.reshape(const_2712.astype('float32'), [624,]), relay.reshape(const_2713.astype('float64'), [36, 24]), ), 2)
call_2714 = relay.TupleGetItem(func_2590_call(relay.reshape(const_2712.astype('float32'), [624,]), relay.reshape(const_2713.astype('float64'), [36, 24]), ), 2)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
var_2717 = relay.var("var_2717", dtype = "float64", shape = (32, 1))#candidate|2717|(32, 1)|var|float64
call_2716 = relay.TupleGetItem(func_591_call(relay.reshape(var_2717.astype('float64'), [8, 4, 1])), 0)
call_2718 = relay.TupleGetItem(func_593_call(relay.reshape(var_2717.astype('float64'), [8, 4, 1])), 0)
bop_2720 = relay.right_shift(call_2716.astype('int32'), call_2711.astype('int32')) # shape=(8, 4, 624)
bop_2723 = relay.right_shift(call_2718.astype('int32'), call_2714.astype('int32')) # shape=(8, 4, 624)
output = relay.Tuple([call_2687,call_2691,const_2712,const_2713,var_2717,bop_2720,])
output2 = relay.Tuple([call_2688,call_2692,const_2712,const_2713,var_2717,bop_2723,])
func_2725 = relay.Function([var_2717,], output)
mod['func_2725'] = func_2725
mod = relay.transform.InferType()(mod)
var_2726 = relay.var("var_2726", dtype = "float64", shape = (32, 1))#candidate|2726|(32, 1)|var|float64
output = func_2725(var_2726)
func_2727 = relay.Function([var_2726], output)
mutated_mod['func_2727'] = func_2727
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_2757 = func_1620_call()
call_2758 = func_1620_call()
var_2774 = relay.var("var_2774", dtype = "float64", shape = (726,))#candidate|2774|(726,)|var|float64
bop_2775 = relay.logical_and(call_2757.astype('bool'), relay.reshape(var_2774.astype('bool'), relay.shape_of(call_2757))) # shape=(726,)
bop_2778 = relay.logical_and(call_2758.astype('bool'), relay.reshape(var_2774.astype('bool'), relay.shape_of(call_2758))) # shape=(726,)
output = relay.Tuple([bop_2775,])
output2 = relay.Tuple([bop_2778,])
func_2779 = relay.Function([var_2774,], output)
mod['func_2779'] = func_2779
mod = relay.transform.InferType()(mod)
mutated_mod['func_2779'] = func_2779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2780 = relay.var("var_2780", dtype = "float64", shape = (726,))#candidate|2780|(726,)|var|float64
func_2779_call = mutated_mod.get_global_var('func_2779')
call_2781 = func_2779_call(var_2780)
output = call_2781
func_2782 = relay.Function([var_2780], output)
mutated_mod['func_2782'] = func_2782
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2811 = relay.var("var_2811", dtype = "float64", shape = (2, 8, 15))#candidate|2811|(2, 8, 15)|var|float64
uop_2812 = relay.sqrt(var_2811.astype('float64')) # shape=(2, 8, 15)
func_1972_call = mod.get_global_var('func_1972')
func_1974_call = mutated_mod.get_global_var('func_1974')
call_2818 = func_1972_call()
call_2819 = func_1972_call()
func_2252_call = mod.get_global_var('func_2252')
func_2254_call = mutated_mod.get_global_var('func_2254')
call_2827 = relay.TupleGetItem(func_2252_call(), 4)
call_2828 = relay.TupleGetItem(func_2254_call(), 4)
output = relay.Tuple([uop_2812,call_2818,call_2827,])
output2 = relay.Tuple([uop_2812,call_2819,call_2828,])
func_2832 = relay.Function([var_2811,], output)
mod['func_2832'] = func_2832
mod = relay.transform.InferType()(mod)
var_2833 = relay.var("var_2833", dtype = "float64", shape = (2, 8, 15))#candidate|2833|(2, 8, 15)|var|float64
output = func_2832(var_2833)
func_2834 = relay.Function([var_2833], output)
mutated_mod['func_2834'] = func_2834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
call_2836 = relay.TupleGetItem(func_1167_call(), 1)
call_2837 = relay.TupleGetItem(func_1169_call(), 1)
uop_2839 = relay.acos(call_2836.astype('float64')) # shape=(7, 10, 7)
uop_2841 = relay.acos(call_2837.astype('float64')) # shape=(7, 10, 7)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
const_2856 = relay.const([2.150624,7.789181,6.464799,6.558751,9.727725,-7.310948,2.232002,-9.678507,0.685660,2.978950,0.681664,-5.234265,-0.301558,-7.399147,8.089494,-6.952897,-2.185635,-9.755613,-1.075370,-2.620702,-8.435524,5.785483,-5.913929,8.171581,8.356987,-7.057978,5.010709,8.156955,6.657817,2.295014,7.277616,-3.539213], dtype = "float64")#candidate|2856|(32,)|const|float64
call_2855 = relay.TupleGetItem(func_591_call(relay.reshape(const_2856.astype('float64'), [8, 4, 1])), 0)
call_2857 = relay.TupleGetItem(func_593_call(relay.reshape(const_2856.astype('float64'), [8, 4, 1])), 0)
func_882_call = mod.get_global_var('func_882')
func_886_call = mutated_mod.get_global_var('func_886')
const_2870 = relay.const([1,-8,2,7,-5,3,-9,1,4,-2,-5,10,3,-8,-2,-3,-10,9,-6,2,-3,9,4,3,5,-8,8,-8,3,-1,6,7,-7,-9,-3,4,4,2,-5,-7,2,3,-3,-10,6,3,-7,7,9,7,-7,-9,-6,2,-8,6,-4,10,9,-6,-3,-8,-9,4,-2,-9,-4,3,-1,-1,-4,9,-7,5,-8,2,10,-4,4,-7,1,-7,-8,2,5,-10,-2,7,5,5,3,-9,-7,1,10,-2,-8,3,1,-5,3,-7,2,6,8,-5,1,5,6,3,-6,7,4,-9,-9,1,-10,7,-2,3,6,-2,-1,-5,5,-5,1,-4,-5,-9,-7,-6,-9,-1,6,5,-2,-9,4,-2,-1,9,-10,-8,7,-9,8,-3,8,1,10,6,-3,-6,8,-5,6,5,-10,-3,10,3,-5,6,2,7,-3,5,9,-4,-1,8,-4,7,5,1,10,-3,2,-8,1,8,10,2,7,6,5,-7,-8,5,2,7,1,7,-3,10,2,-10,3,2,5,8,-4,1,9,3,3,5,4,-9,-1,-3,-7,5,-2,-10,5,-1,4,10,9,9,7,-7,-8,-10,-3,1,-5,-4,3,7,3,-8,-9,4,-4,-1,-7,-2,5,5,6,-10,2,9,7,3,4,-8,-10,3,5,4,4,-8,-1,-7,-9,-9,10,-8,4,8,5,-10,-10,8,9,-9,2,-2,-2,-2,-5,-4,7,-3,-3,8,8,-2,3,6,-6,8,6,-2,8,-9,-3,1,7,2,4,-10,9,5,-6,7,7,1,-5,2,-5,8,4,-9,-3,2,2,-4,-4,7,9,1,9,-9,-4,-8,2,6,-7,-8,7,-2,2,2,-4,-5,2,10,7,-4,2,10,9,-1,-3,7,-9,-9,-4,6,-9,-2,6,-2,3,5,-9,-9,-1,5,9,3,2,10,2,-5,-6,6,8,8,6,-7,8,-7,8,4,5,-7,1,4,-3,8,5,3,2,9,3,-6,3,2,5,-9,5,-9,3,-2,2,4,-2,5,8,-3,-9,4,2,3,3,-10,-10,-7,-10,-7,-10,4,-10,7,2,-9,-1,-4,10,-10,1,-3,9,-4,-2,-3,-4,4,5,-3,1,9,6,5,-1,9,7,3,-6,4,9,-8,-6,8,4,-8,5,9,1,7,2,-3,2,6,-4,5,10,6,-8,7,10,-10,-5,6,4,-5,3,-7,8,2,4,5,1,-9,-10,2,4,-2,-3,-2,-6,-5,-8,4,8,6,-3,7,4,4,2,3,10,-4,6,9,-4,-2,9,-6,2,-10,-5,-1,-2,-5,3,-2,-3,-5,2,-2,-10,-9,-10,7,-9,7,3,4,-2,-10,7,9,10,-1,-10,1,9,3,6,-1,7,8,-5,5,-1,4,9,-8,-9,-1,3,-1,3,2,-5,4,-1,2,-7,5,4,-8,5,1,-6,-3,6,1,-9,1,-4,-6,1,2,8,10,7,4,5,-5,10,1,-3,7,5,-8,5,5,5,-6,5,5,-3,5,4,10,-8,-10,-5,-7,-5,1,-2,-7,-6,-9,6,-4,-3,-8,8,9,-9,9,5,4,2,1,-6,2,-1,4,5,8,-6,2,-4,-2,-9,-7,-8,4,10,5,-4,-9,-7,4,-2,9,1,-2,2,8,-4,6,9,3,5,-5,-2,-6,9,1,4,-7,-1,10,4,7,-4,-9,2,2,9,-8,4,-10,-6,4,8,7], dtype = "uint16")#candidate|2870|(660,)|const|uint16
call_2869 = relay.TupleGetItem(func_882_call(relay.reshape(const_2870.astype('uint16'), [5, 11, 12]), relay.reshape(const_2870.astype('uint16'), [5, 11, 12]), ), 1)
call_2871 = relay.TupleGetItem(func_886_call(relay.reshape(const_2870.astype('uint16'), [5, 11, 12]), relay.reshape(const_2870.astype('uint16'), [5, 11, 12]), ), 1)
func_2647_call = mod.get_global_var('func_2647')
func_2649_call = mutated_mod.get_global_var('func_2649')
var_2878 = relay.var("var_2878", dtype = "float32", shape = (576,))#candidate|2878|(576,)|var|float32
call_2877 = func_2647_call(relay.reshape(var_2878.astype('float32'), [12, 8, 6]))
call_2879 = func_2647_call(relay.reshape(var_2878.astype('float32'), [12, 8, 6]))
uop_2889 = relay.asin(uop_2839.astype('float64')) # shape=(7, 10, 7)
uop_2891 = relay.asin(uop_2841.astype('float64')) # shape=(7, 10, 7)
func_2647_call = mod.get_global_var('func_2647')
func_2649_call = mutated_mod.get_global_var('func_2649')
call_2894 = func_2647_call(relay.reshape(var_2878.astype('float32'), [12, 8, 6]))
call_2895 = func_2647_call(relay.reshape(var_2878.astype('float32'), [12, 8, 6]))
bop_2896 = relay.power(uop_2889.astype('float32'), relay.reshape(uop_2839.astype('float32'), relay.shape_of(uop_2889))) # shape=(7, 10, 7)
bop_2899 = relay.power(uop_2891.astype('float32'), relay.reshape(uop_2841.astype('float32'), relay.shape_of(uop_2891))) # shape=(7, 10, 7)
bop_2905 = relay.logical_xor(bop_2896.astype('uint64'), relay.reshape(uop_2839.astype('uint64'), relay.shape_of(bop_2896))) # shape=(7, 10, 7)
bop_2908 = relay.logical_xor(bop_2899.astype('uint64'), relay.reshape(uop_2841.astype('uint64'), relay.shape_of(bop_2899))) # shape=(7, 10, 7)
var_2917 = relay.var("var_2917", dtype = "float64", shape = (7, 10, 7))#candidate|2917|(7, 10, 7)|var|float64
bop_2918 = relay.mod(uop_2839.astype('float32'), relay.reshape(var_2917.astype('float32'), relay.shape_of(uop_2839))) # shape=(7, 10, 7)
bop_2921 = relay.mod(uop_2841.astype('float32'), relay.reshape(var_2917.astype('float32'), relay.shape_of(uop_2841))) # shape=(7, 10, 7)
uop_2924 = relay.log(uop_2889.astype('float64')) # shape=(7, 10, 7)
uop_2926 = relay.log(uop_2891.astype('float64')) # shape=(7, 10, 7)
func_1167_call = mod.get_global_var('func_1167')
func_1169_call = mutated_mod.get_global_var('func_1169')
call_2927 = relay.TupleGetItem(func_1167_call(), 0)
call_2928 = relay.TupleGetItem(func_1169_call(), 0)
func_2072_call = mod.get_global_var('func_2072')
func_2073_call = mutated_mod.get_global_var('func_2073')
call_2934 = relay.TupleGetItem(func_2072_call(), 0)
call_2935 = relay.TupleGetItem(func_2073_call(), 0)
output = relay.Tuple([call_2855,const_2856,call_2869,const_2870,call_2877,var_2878,call_2894,bop_2905,bop_2918,uop_2924,call_2927,call_2934,])
output2 = relay.Tuple([call_2857,const_2856,call_2871,const_2870,call_2879,var_2878,call_2895,bop_2908,bop_2921,uop_2926,call_2928,call_2935,])
func_2942 = relay.Function([var_2878,var_2917,], output)
mod['func_2942'] = func_2942
mod = relay.transform.InferType()(mod)
mutated_mod['func_2942'] = func_2942
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2942_call = mutated_mod.get_global_var('func_2942')
var_2944 = relay.var("var_2944", dtype = "float32", shape = (576,))#candidate|2944|(576,)|var|float32
var_2945 = relay.var("var_2945", dtype = "float64", shape = (7, 10, 7))#candidate|2945|(7, 10, 7)|var|float64
call_2943 = func_2942_call(var_2944,var_2945,)
output = call_2943
func_2946 = relay.Function([var_2944,var_2945,], output)
mutated_mod['func_2946'] = func_2946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1418_call = mod.get_global_var('func_1418')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_2951 = relay.TupleGetItem(func_1418_call(), 1)
call_2952 = relay.TupleGetItem(func_1420_call(), 1)
func_1325_call = mod.get_global_var('func_1325')
func_1329_call = mutated_mod.get_global_var('func_1329')
var_2954 = relay.var("var_2954", dtype = "float64", shape = (1280,))#candidate|2954|(1280,)|var|float64
var_2955 = relay.var("var_2955", dtype = "float32", shape = (1536,))#candidate|2955|(1536,)|var|float32
call_2953 = relay.TupleGetItem(func_1325_call(relay.reshape(var_2954.astype('float64'), [10, 8, 16]), relay.reshape(var_2954.astype('float64'), [10, 8, 16]), relay.reshape(var_2955.astype('float32'), [1536,]), ), 0)
call_2956 = relay.TupleGetItem(func_1329_call(relay.reshape(var_2954.astype('float64'), [10, 8, 16]), relay.reshape(var_2954.astype('float64'), [10, 8, 16]), relay.reshape(var_2955.astype('float32'), [1536,]), ), 0)
func_2252_call = mod.get_global_var('func_2252')
func_2254_call = mutated_mod.get_global_var('func_2254')
call_2957 = relay.TupleGetItem(func_2252_call(), 4)
call_2958 = relay.TupleGetItem(func_2254_call(), 4)
output = relay.Tuple([call_2951,call_2953,var_2954,var_2955,call_2957,])
output2 = relay.Tuple([call_2952,call_2956,var_2954,var_2955,call_2958,])
func_2962 = relay.Function([var_2954,var_2955,], output)
mod['func_2962'] = func_2962
mod = relay.transform.InferType()(mod)
var_2963 = relay.var("var_2963", dtype = "float64", shape = (1280,))#candidate|2963|(1280,)|var|float64
var_2964 = relay.var("var_2964", dtype = "float32", shape = (1536,))#candidate|2964|(1536,)|var|float32
output = func_2962(var_2963,var_2964,)
func_2965 = relay.Function([var_2963,var_2964,], output)
mutated_mod['func_2965'] = func_2965
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_3012 = relay.TupleGetItem(func_1183_call(), 0)
call_3013 = relay.TupleGetItem(func_1185_call(), 0)
uop_3019 = relay.rsqrt(call_3012.astype('float32')) # shape=(15, 14, 6)
uop_3021 = relay.rsqrt(call_3013.astype('float32')) # shape=(15, 14, 6)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_3041 = relay.TupleGetItem(func_1836_call(), 1)
call_3042 = relay.TupleGetItem(func_1837_call(), 1)
output = relay.Tuple([uop_3019,call_3041,])
output2 = relay.Tuple([uop_3021,call_3042,])
func_3046 = relay.Function([], output)
mod['func_3046'] = func_3046
mod = relay.transform.InferType()(mod)
mutated_mod['func_3046'] = func_3046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mutated_mod.get_global_var('func_3046')
call_3047 = func_3046_call()
output = call_3047
func_3048 = relay.Function([], output)
mutated_mod['func_3048'] = func_3048
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_3051 = relay.TupleGetItem(func_2153_call(), 1)
call_3052 = relay.TupleGetItem(func_2154_call(), 1)
output = call_3051
output2 = call_3052
func_3053 = relay.Function([], output)
mod['func_3053'] = func_3053
mod = relay.transform.InferType()(mod)
output = func_3053()
func_3054 = relay.Function([], output)
mutated_mod['func_3054'] = func_3054
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3046_call = mod.get_global_var('func_3046')
func_3048_call = mutated_mod.get_global_var('func_3048')
call_3063 = relay.TupleGetItem(func_3046_call(), 1)
call_3064 = relay.TupleGetItem(func_3048_call(), 1)
const_3074 = relay.const([[[2,2,-10,-6,-7,3],[-10,-2,5,6,-5,8],[-8,4,8,8,9,-10],[2,-4,-1,-8,-9,-5],[-2,-6,-1,-7,-3,1],[-2,-3,-10,10,1,2],[2,2,-4,6,9,-5],[8,1,4,7,10,6],[3,3,-1,5,-9,-5],[-3,9,2,-6,3,-6],[-9,2,2,-1,-8,-8]],[[-1,2,-7,3,7,6],[3,2,7,-2,2,6],[-5,-9,-3,-2,8,-6],[-1,7,-8,-9,-2,8],[10,8,7,-6,-2,5],[-1,-2,3,6,-7,-1],[-5,-8,3,8,8,-5],[-1,5,-9,-9,-9,1],[-8,-5,-1,10,9,5],[-3,-5,-9,6,-5,-3],[3,-7,2,-4,5,5]],[[-8,-2,-2,8,9,8],[8,-10,-7,9,7,-4],[-2,-9,-10,4,9,6],[4,9,-9,-5,-1,2],[-10,-1,5,-5,-6,7],[-9,5,-1,-9,4,10],[5,2,8,5,5,4],[1,-10,-4,-4,-7,10],[1,3,-7,1,-8,-7],[7,6,-8,-5,-10,6],[9,6,3,6,-9,-9]],[[3,8,3,8,9,-3],[2,4,10,-5,-3,8],[1,8,-4,6,-5,7],[-4,-9,8,-8,9,-4],[5,9,-2,-2,3,-3],[-6,-4,-5,-10,-9,2],[10,-8,3,7,3,5],[-5,8,-6,-4,-2,-5],[3,-8,4,-10,9,3],[-1,-9,6,-8,1,-8],[-9,-9,-5,9,-2,10]],[[6,-10,9,-8,-4,3],[-1,1,-10,-8,5,1],[-6,10,9,3,2,-10],[-7,-9,5,10,-6,-9],[4,-5,-7,-1,-7,10],[-10,9,4,-3,10,-3],[6,1,8,6,7,1],[6,-8,2,8,9,-4],[-9,-6,-8,3,4,-6],[6,-2,-3,-9,-6,1],[5,2,9,8,4,8]],[[-3,-8,7,-7,5,-5],[6,-7,-1,10,8,-9],[-9,-6,3,5,-4,-2],[6,-3,-3,-7,-2,-1],[3,-8,-3,-9,-6,-7],[8,4,4,3,9,1],[6,-9,2,-3,1,-5],[10,1,8,4,10,8],[-6,-4,-10,-5,2,-5],[5,-9,-1,5,10,-9],[3,-6,3,-7,-8,-2]],[[-5,-5,4,-3,-9,-9],[9,-4,-9,-9,8,5],[1,8,2,-6,-10,4],[-2,-5,9,1,-8,-7],[8,9,-1,-7,8,-2],[7,7,-8,3,10,-10],[2,7,6,6,1,-2],[-2,5,-4,10,4,1],[8,3,-4,7,4,-5],[-9,6,6,4,-5,-10],[7,-2,-7,6,-9,-3]],[[2,8,-3,8,-3,4],[2,-1,-9,8,1,9],[-5,3,-4,6,6,1],[8,-3,-6,10,7,9],[-4,-3,8,-5,5,-6],[4,-4,-7,-8,-8,6],[10,-4,-9,4,-1,-8],[-7,4,1,-2,4,-3],[-4,-8,4,6,9,-2],[2,-2,10,-6,5,2],[9,-8,3,6,6,8]],[[5,5,-4,4,2,-1],[-8,-1,6,-8,9,-10],[9,10,9,7,-1,-1],[9,1,3,-6,-10,3],[-2,10,9,6,5,5],[-3,1,-5,7,6,-9],[-3,-10,-2,6,6,-9],[-8,-4,10,-9,4,-7],[2,6,3,9,-10,8],[3,-8,-1,-5,2,4],[-3,-7,4,-7,-7,6]],[[-10,-7,-1,-2,10,-5],[-7,-10,2,-2,-8,1],[10,-10,-4,-10,-9,-3],[-3,-7,5,4,4,10],[9,-10,-1,-10,-10,-2],[7,9,9,8,-6,-5],[-7,-2,2,-7,-6,-9],[-8,7,-9,4,-1,2],[4,-1,5,1,4,4],[-7,-6,-6,7,-4,-3],[5,1,-2,-5,-2,-7]],[[2,-10,-5,-2,-5,-3],[-5,-6,9,2,-1,-8],[-5,-7,1,6,6,-2],[2,1,-4,8,-9,8],[8,-9,-4,-9,-2,-8],[2,8,3,9,4,1],[-8,-5,5,-4,5,9],[-4,8,7,-1,-1,-9],[9,-10,-9,8,1,-6],[-9,1,-6,3,1,8],[-7,-8,-7,5,-4,8]]], dtype = "int8")#candidate|3074|(11, 11, 6)|const|int8
bop_3075 = relay.power(call_3063.astype('float64'), relay.reshape(const_3074.astype('float64'), relay.shape_of(call_3063))) # shape=(11, 11, 6)
bop_3078 = relay.power(call_3064.astype('float64'), relay.reshape(const_3074.astype('float64'), relay.shape_of(call_3064))) # shape=(11, 11, 6)
func_1935_call = mod.get_global_var('func_1935')
func_1939_call = mutated_mod.get_global_var('func_1939')
const_3096 = relay.const([[2.399375,-2.892288,-1.920508,-8.995613,-5.828271,-1.341616,-7.603585,-5.133608,4.115662,9.954274,-3.777824,-7.733517,4.609139,7.793577,5.168082,6.221028,4.197076,-5.735763,-1.540596,0.120798,4.988099,-3.893340,7.062581,0.361142,7.709465,9.628039,-4.054527,-1.515890,0.448746,4.297993,2.324624,2.961224,-4.659688,-9.959450,-8.906681,-6.604356,5.006924,-9.826546,3.911624,-7.756841,-8.545934,-4.343284,6.661550,-5.555478,-3.482855,8.688114,1.528961,7.924970,7.072889,-2.736651,3.002804,5.324301,0.916642,9.344566,-9.178944,6.318554,1.215764,2.185873,3.078429,-9.211341,-9.060128,0.522119,-3.041356,4.318490,0.018426,-2.564547,-4.269329,0.834491,6.998755,-1.886375,-0.725390,-4.240539,3.730614,0.039401,-7.686165,0.863564,8.773941,-7.893568,0.099620,9.027355,9.734997,4.283183,-7.940921,-3.675082,2.583272,7.671267,-9.844046,-6.693207,0.843423,-7.481463,2.618258,-6.297841,2.281050,-5.016186,2.569833,1.155900,6.842143,-0.344899,4.109413,9.190208,-6.429376,7.580804,3.359082,-6.147138,5.417703,-9.905960,-4.749156,2.276100,8.605731,-2.179565,-3.037243,7.674160,-9.491763,2.394811,-7.355620,6.928593,5.297624,-0.737183,-3.110144,4.223386,0.565726,-3.525811,5.678709,9.066446,7.048171,8.620472,4.178403,-4.603130,-0.950624,-5.431160,-5.329609,4.012192,-1.079136,-7.125359,5.338518,-9.828095,2.080669,-9.835479,-9.013553,9.952732,-4.279223,2.862598,-0.942438,5.151767,8.241906,5.261662,9.757343,9.174214,-7.986064,-0.633607,-2.480232,0.975733,8.134689,-3.565838,1.277160,-3.339073,-1.339097,-8.305632,7.149208,7.232015,6.204125,-9.040665,-6.080845,-3.393927,-3.330817,-9.293833,2.541793,-3.953432,9.990231,-2.440452,5.338093,-8.136725,8.607243,-7.778481,2.948486,4.268133,-9.090428,8.318139,-5.156456,-8.931173,2.421741,1.853651,-5.875852,7.813398,-6.692413,-9.903624,-0.282952,0.432515,8.762102,-9.590680,5.139078,5.961256,-3.090284,-5.930190,-5.034351,3.743741,6.444035,-2.431588,-8.010566,-1.098023,-5.700018,-0.101076,4.273501,-4.800969,4.272107,8.859545,-4.173470,4.189981,-7.026049,4.694960,-4.560333,-7.620956,4.082942,4.138385,-8.303577,-9.421896,-3.453253,-0.007464,-3.058084,8.280369,9.822964,2.020155,5.229984,-4.762068,-3.741759,4.745953,-4.119897,7.378984,-1.102950,-3.070776,-9.352781,7.407208,4.971603,-4.277449,-6.940427,-8.165773,0.443615,-2.766547,-7.743267,-7.180336,-6.130661,0.980205,7.456622,0.388848,1.595656,-4.642109,-3.181209,-2.018942,9.444604,-6.830707,-3.275341,-5.657434,-1.329958,0.019112,4.884159,2.649108,8.298287,1.207268,9.367479,-9.668953,-2.904774,-4.449322,6.844097,-5.092813,-3.282646,-8.557437,2.595459,-5.898191,8.458470,-9.717691,0.415095,2.495459,-2.562676,3.702236,0.012568,-4.918895,-8.028981,-5.892276,-8.465965,4.057361,7.491194,3.214005,-4.263178,-9.701272,5.034347,-3.807184,7.499431,1.492013,-3.685385,2.899999,8.053554,7.018680,7.356925,9.994249,2.157545,-3.073956,-9.690411,5.252641,6.372537,9.105180,7.508532,8.812811,0.021008,-5.945538,5.482963,1.568619,-6.656652,-2.887150,-6.670812,3.075621,-4.188921,8.752085,2.053270,3.823846,-6.565116,-3.954465,0.567076,-5.631183,-3.191292,-3.430504,5.941570,-5.054048,0.690538,3.214761,-1.686648,0.816032,-0.025359,-1.146597,4.867132,-1.288064,-3.215393,4.997187,-7.062759,-4.107827,0.955920,-5.348884,-5.901260,-0.914136,5.074568,8.441572,-6.165346,8.252527,2.373853,-7.462769,8.603811,0.802117,4.683725,1.345853,-4.111978,1.508728,9.875385,-2.724824,-4.857960,3.444055,-0.968763,-6.130459,8.357369,2.806311,0.707737,4.969840,-5.567453,-8.476493,-0.963092,4.876921,3.846313,-2.042985,-4.475872,-4.937534,7.466069,9.184884,-4.750683,-2.552429,6.585684,1.621934,9.948611,5.890568,6.125177,-7.476219,-2.183126,-2.279648,-7.897520,-1.548452,-6.485973,7.120999,-4.246820,2.300315,-0.090967,-0.358112,-6.805795,-4.420466,-4.841955,5.051511,1.907675,3.604271,-2.515844,2.728511,-9.955325,4.663796,-1.395064,-2.833481,0.964799,-5.416633,1.661828,9.478188,-9.008485,-2.132859,-4.486355,-2.223902,1.213690,4.694931,6.766968,-5.220323,-9.441545,-9.064712,-8.126236,5.603585,5.015141,-4.157057,-4.052491,-8.929987],[4.563716,6.832655,-9.104013,-7.436743,-6.043666,2.644342,-5.325536,9.201550,-1.907251,-4.603973,6.891710,-0.026770,8.704942,1.629015,5.437029,-9.774544,-4.176784,-6.661612,4.167706,-1.900504,-0.009795,3.907092,5.090931,6.178175,4.992191,8.317727,7.467616,6.719623,-8.787647,-1.485737,-3.398164,-4.386020,-5.899415,4.386059,4.206608,4.254041,-9.400122,2.731362,-4.946482,5.727695,-2.901297,-1.640165,-9.404173,-6.530377,-9.443100,-9.562358,5.571704,-0.532034,8.799256,6.375357,3.410674,-8.067163,9.712207,-6.903003,-8.201681,2.292909,-6.207100,-1.585772,2.496644,5.582377,5.953721,-0.983134,-8.693283,5.367658,9.605238,3.193729,4.415521,-5.208822,6.217856,-3.659154,-5.811431,-9.196417,8.188134,5.057107,8.650388,3.252786,2.265385,7.059252,-8.736939,1.975025,5.950604,-3.022063,3.927377,8.497332,7.100644,-1.945801,-0.004578,-0.655305,-1.450777,-9.376034,-4.174438,-7.293886,-9.353013,-6.810030,-0.718294,-3.899998,-5.700045,7.873549,8.698093,-1.123761,-1.837701,-2.148276,9.253291,3.198966,-7.500326,3.637484,7.536047,-8.979891,8.699825,-8.672299,1.738788,2.771697,9.923948,4.135480,8.023712,-0.027202,-8.489234,-3.889072,4.896575,7.840807,-5.688376,4.701085,3.013982,1.467125,-2.164016,-8.880896,-4.206950,8.696120,-8.263003,-3.144080,-3.203493,-8.453993,8.458141,-2.635621,-9.867097,-4.414688,-5.304743,-5.988130,-6.915235,-3.680264,8.497304,-9.670652,-6.565032,5.673418,-9.740570,-4.015322,-3.796881,0.931465,-9.055433,7.786299,-2.574940,5.779567,2.632320,-1.015190,6.242993,-2.141424,0.810733,-5.891740,-3.666826,8.381380,7.462898,5.732551,-6.204744,7.580978,-0.263471,2.306047,-1.303498,8.045187,-6.419810,1.138719,-7.662960,-7.252636,-7.371015,8.673558,-7.962581,5.556431,-8.921773,-3.805483,-4.947032,1.215539,-0.618527,7.280832,9.216385,-5.537924,-5.690246,8.359046,7.572527,-3.628696,-0.012931,-2.683198,-2.842149,-1.943722,-4.362111,3.036599,-0.699122,0.671775,1.259008,-5.559071,3.396304,-0.974049,-5.387887,-9.308440,1.099463,-3.036599,-2.604112,2.646498,-7.525868,8.664580,-8.692535,6.551367,-1.488376,6.070102,5.137683,-4.221479,-3.765073,-5.012451,0.782180,-8.911541,-2.512894,-1.117238,2.220926,2.984066,-0.594198,-1.516549,-5.782195,6.403118,-7.103245,-8.828288,-4.089936,-2.784323,-7.663086,-8.786091,7.582826,-8.609232,0.038326,-7.349253,-8.823216,-5.010584,-6.101236,0.308466,3.264475,9.893282,3.474530,8.687670,5.763020,-1.170964,1.692338,0.047709,7.744260,-6.513958,-1.947106,4.182782,-2.189520,0.017401,-7.998966,4.373185,-3.457260,3.465133,0.853306,6.508325,-0.189708,-8.921712,-9.505439,-5.811695,0.663530,-8.745312,9.144692,2.605346,-7.028695,8.018172,7.994832,-0.335231,1.398986,-2.821210,-0.541100,4.757590,9.162434,-6.937759,0.679431,-8.162836,5.702333,0.674110,-6.468668,1.653890,7.016088,-7.627987,4.832489,-5.823539,-9.642851,2.326593,9.622045,-9.667983,-0.887170,-1.820182,8.531062,4.045812,-5.564195,-3.528123,2.286704,4.497236,-1.801791,4.519382,-7.462168,-9.532182,-6.279015,4.418381,7.756095,0.859538,0.566743,3.894814,-4.543513,7.807701,6.237995,0.488206,6.792446,-4.342256,-2.137822,-8.020965,0.146167,-5.199478,-1.088968,6.977133,1.912760,-2.597569,1.213591,0.814028,-3.523104,-8.321387,-3.626911,-4.769918,-3.499501,3.029820,-3.254789,2.955719,8.407141,-9.503353,4.354608,2.931657,-2.147398,1.603486,4.362831,8.921997,-4.575711,-7.909591,9.678260,-2.021588,3.550533,6.662241,8.650927,2.917215,-1.552203,4.801590,-3.216385,-1.818270,-4.556815,-2.768745,-5.855271,1.277730,4.100616,-4.433045,-2.707650,-1.575697,-4.522369,5.633790,-2.031421,-9.153682,-5.889043,-8.480557,-0.387620,9.707192,6.478185,7.523061,4.687163,-6.967481,-9.613025,-5.298740,9.982470,-1.896049,-9.421331,-7.981370,-6.587982,4.102277,-0.316140,7.353858,-8.343118,4.878615,-4.885281,5.789822,5.222269,-1.581696,-2.662670,-5.756628,5.629385,-3.705144,-3.077401,-8.872763,5.177503,-1.544033,-9.574781,0.942042,-9.602782,-3.934961,5.835836,8.058493,4.762980,-9.458262,-2.495871,2.458451,6.516539,6.081151,-9.552010,-4.638374,3.983372,2.470549,8.883920,-5.090862,0.434641,-9.246635,-3.175855,9.516375],[-5.739851,-0.393992,-7.616446,-2.509569,5.559609,-7.193414,-4.568973,0.113292,2.737040,0.941263,5.073819,-9.153974,-1.102552,4.448034,-4.204314,-4.345801,-1.986500,2.189185,-9.777788,-1.520239,8.131037,-1.762677,-4.009857,0.238625,-3.756871,-1.952987,-2.992298,3.403036,4.809300,-0.988289,6.009207,-9.472008,6.858228,2.008490,-3.808092,4.850955,-0.149016,6.845112,6.316555,-8.218607,4.137464,-0.979354,7.613979,-9.141050,-1.913602,4.724198,4.733599,-3.777125,2.789117,-9.381552,5.127821,-9.136891,2.800984,-2.706503,-2.595035,2.107923,5.806577,-2.490476,9.946887,-1.944144,0.154826,9.697688,6.386394,7.872905,4.904573,-5.030859,5.492151,-1.165849,-8.189125,9.444475,0.119324,-0.910205,-0.240759,-6.476295,6.785651,-7.227816,-0.726700,8.021367,8.098969,-6.603083,7.856612,2.213888,1.041548,5.592695,0.447342,8.808391,2.679444,8.825387,-6.087397,7.340825,-4.021616,-4.561256,-0.431598,0.833667,-2.094744,-8.746138,-8.200742,-5.056264,-5.631983,-0.052130,-8.637004,-4.188140,2.478552,-3.278968,9.060359,-7.385290,5.321239,-9.112639,-5.735329,9.796432,-6.029868,-5.731718,5.631310,-9.873887,8.027801,9.674867,-4.832682,3.084446,-5.036754,1.538339,-9.688535,2.897984,-7.409645,8.876267,1.156568,6.020861,-9.728454,3.971480,-3.305135,2.029556,-2.210179,-5.277601,1.412477,-4.762927,8.548829,3.490032,5.731650,6.232261,7.109619,4.921864,8.590966,-2.467186,-8.911584,5.916725,4.447992,-3.635746,-2.961100,5.535155,8.966774,0.028756,7.849854,-2.155366,4.038823,6.876643,-0.178184,-1.374985,0.232718,6.299828,-4.533914,0.048483,-8.367605,6.493478,-6.454774,-7.019848,-4.778967,-5.489596,-8.429059,1.096146,-6.155334,-1.251331,8.367294,-4.092118,0.501731,-4.055014,-1.938448,-0.240848,-4.357170,3.440488,-2.669748,-7.877213,9.749115,-4.898445,0.149610,-8.855162,-6.563784,-8.413608,7.870385,8.912932,-8.457867,-4.220632,5.514140,6.148257,-3.612663,-1.089080,-7.322389,7.245229,2.525691,-2.744980,2.829821,-7.710588,6.417287,0.092134,9.657575,-7.453013,8.141138,-3.877919,8.601267,-9.157369,5.765358,-1.277985,9.945661,2.424851,2.167527,3.200789,-9.810851,3.443796,-1.924252,-7.192492,8.173434,5.604533,9.457477,8.656593,-3.565019,-6.750736,-7.459372,4.713404,9.513613,-5.914216,-3.794865,9.676042,0.540295,8.762531,-0.928455,7.939995,-5.974306,-9.887728,-8.327153,-4.702931,3.818246,-7.103098,8.191643,5.433814,1.205976,5.508101,2.346114,-8.267381,6.113983,-0.003437,-7.288985,7.709819,-1.545434,-3.869455,0.010248,0.073001,-9.968479,-5.320355,-0.574587,-2.153295,2.943604,0.761448,-1.179762,7.572650,7.811882,3.274087,4.765514,-3.371887,-4.353055,3.066030,7.271734,-3.990159,-9.920564,3.113672,-0.315380,-8.556267,-9.515185,-3.328534,-6.138775,-4.482410,1.221132,3.978256,3.988835,5.485211,-5.397904,1.949768,2.156125,4.018275,9.855354,-4.777084,-5.072470,8.678446,6.600306,-1.359925,-4.671461,6.863715,-9.070321,-3.371528,0.946582,-2.215102,-7.061797,0.307138,3.225528,-9.435178,-5.445385,3.150867,5.315025,0.061284,-5.356833,-2.101513,-2.330918,4.620446,-1.166915,-6.326973,2.114544,-5.206968,8.818423,5.956731,-8.088206,6.895347,6.858622,-4.208946,1.996705,7.250198,0.831678,-7.864366,0.309183,-4.025723,-2.583108,8.542909,3.251509,3.497405,-4.036894,-8.236275,-6.610112,5.690312,-2.662001,4.493789,2.175865,0.572646,-8.414677,-3.661572,3.475147,-5.180656,-2.759206,6.023499,8.204713,-4.757633,-7.493319,-4.960665,-2.381817,-4.519807,4.713627,-1.864817,-0.069483,2.647005,-6.576910,-2.039223,9.067329,8.197097,3.815498,2.795933,8.641369,-2.206936,-1.547153,8.376074,-4.031627,6.421618,5.485690,-1.890681,-1.952982,-1.201743,0.086766,-3.699570,5.760393,-2.640653,2.824477,9.915890,4.170808,-4.834321,3.126128,-2.725331,1.836364,8.575861,-0.865608,-0.519222,-8.549529,2.200237,2.319743,-8.411934,2.518180,7.020494,-3.338845,2.630598,-8.192061,-2.263203,0.392722,0.301908,-1.678412,5.650808,-1.930119,3.309076,6.210923,2.674554,5.393474,1.524149,-0.098996,4.306856,-0.694618,5.965055,-0.338446,-5.989485,-6.944081,-6.077780,-4.527301,2.739040,5.814378,8.840224,6.665491,4.186256,-4.612025,2.346451]], dtype = "float64")#candidate|3096|(3, 420)|const|float64
call_3095 = relay.TupleGetItem(func_1935_call(relay.reshape(const_3096.astype('float64'), [15, 14, 6]), relay.reshape(const_3096.astype('float64'), [15, 14, 6]), ), 3)
call_3097 = relay.TupleGetItem(func_1939_call(relay.reshape(const_3096.astype('float64'), [15, 14, 6]), relay.reshape(const_3096.astype('float64'), [15, 14, 6]), ), 3)
output = relay.Tuple([bop_3075,call_3095,const_3096,])
output2 = relay.Tuple([bop_3078,call_3097,const_3096,])
func_3112 = relay.Function([], output)
mod['func_3112'] = func_3112
mod = relay.transform.InferType()(mod)
output = func_3112()
func_3113 = relay.Function([], output)
mutated_mod['func_3113'] = func_3113
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3123 = relay.var("var_3123", dtype = "float64", shape = (1, 1, 8))#candidate|3123|(1, 1, 8)|var|float64
uop_3124 = relay.asin(var_3123.astype('float64')) # shape=(1, 1, 8)
output = uop_3124
output2 = uop_3124
func_3127 = relay.Function([var_3123,], output)
mod['func_3127'] = func_3127
mod = relay.transform.InferType()(mod)
var_3128 = relay.var("var_3128", dtype = "float64", shape = (1, 1, 8))#candidate|3128|(1, 1, 8)|var|float64
output = func_3127(var_3128)
func_3129 = relay.Function([var_3128], output)
mutated_mod['func_3129'] = func_3129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2379_call = mod.get_global_var('func_2379')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_3168 = relay.TupleGetItem(func_2379_call(), 0)
call_3169 = relay.TupleGetItem(func_2381_call(), 0)
output = call_3168
output2 = call_3169
func_3170 = relay.Function([], output)
mod['func_3170'] = func_3170
mod = relay.transform.InferType()(mod)
mutated_mod['func_3170'] = func_3170
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mutated_mod.get_global_var('func_3170')
call_3171 = func_3170_call()
output = call_3171
func_3172 = relay.Function([], output)
mutated_mod['func_3172'] = func_3172
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2379_call = mod.get_global_var('func_2379')
func_2381_call = mutated_mod.get_global_var('func_2381')
call_3194 = relay.TupleGetItem(func_2379_call(), 0)
call_3195 = relay.TupleGetItem(func_2381_call(), 0)
func_1935_call = mod.get_global_var('func_1935')
func_1939_call = mutated_mod.get_global_var('func_1939')
call_3201 = relay.TupleGetItem(func_1935_call(relay.reshape(call_3194.astype('float64'), [15, 14, 6]), relay.reshape(call_3194.astype('float64'), [15, 14, 6]), ), 1)
call_3202 = relay.TupleGetItem(func_1939_call(relay.reshape(call_3194.astype('float64'), [15, 14, 6]), relay.reshape(call_3194.astype('float64'), [15, 14, 6]), ), 1)
uop_3203 = relay.log(call_3201.astype('float32')) # shape=(15, 14, 6)
uop_3205 = relay.log(call_3202.astype('float32')) # shape=(15, 14, 6)
func_287_call = mod.get_global_var('func_287')
func_291_call = mutated_mod.get_global_var('func_291')
var_3221 = relay.var("var_3221", dtype = "float32", shape = (1536,))#candidate|3221|(1536,)|var|float32
call_3220 = relay.TupleGetItem(func_287_call(relay.reshape(var_3221.astype('float32'), [16, 8, 12]), relay.reshape(var_3221.astype('float32'), [16, 8, 12]), ), 0)
call_3222 = relay.TupleGetItem(func_291_call(relay.reshape(var_3221.astype('float32'), [16, 8, 12]), relay.reshape(var_3221.astype('float32'), [16, 8, 12]), ), 0)
func_2942_call = mod.get_global_var('func_2942')
func_2946_call = mutated_mod.get_global_var('func_2946')
var_3231 = relay.var("var_3231", dtype = "float32", shape = (576,))#candidate|3231|(576,)|var|float32
var_3232 = relay.var("var_3232", dtype = "float64", shape = (490,))#candidate|3232|(490,)|var|float64
call_3230 = relay.TupleGetItem(func_2942_call(relay.reshape(var_3231.astype('float32'), [576,]), relay.reshape(var_3232.astype('float64'), [7, 10, 7]), ), 10)
call_3233 = relay.TupleGetItem(func_2946_call(relay.reshape(var_3231.astype('float32'), [576,]), relay.reshape(var_3232.astype('float64'), [7, 10, 7]), ), 10)
func_2832_call = mod.get_global_var('func_2832')
func_2834_call = mutated_mod.get_global_var('func_2834')
const_3242 = relay.const([-2.225312,3.436679,9.888160,8.786146,-6.420738,9.395663,-5.352805,4.405302,-5.857034,-2.103247,-2.069465,-9.483528,8.088702,-2.928561,8.848357,-3.641755,3.754246,4.344115,-6.800051,-5.177661,-2.521608,-2.966845,-8.726590,8.875938,-5.720169,-9.722327,2.526990,-3.412555,-4.111623,5.558639,1.109544,-6.736995,6.145778,1.074721,-4.766586,-4.654422,7.975826,6.399172,-2.961030,4.685269,-8.372737,-7.563622,-7.817688,7.989482,6.688986,-1.671522,-7.901182,7.224825,-0.466480,9.835051,7.494769,-7.600735,-7.743849,-5.545434,-3.891828,-6.314591,-6.107282,-5.302627,6.396503,8.243541,-1.137058,1.534860,-1.414618,-4.842965,-1.155266,3.325691,-1.023898,-5.422766,1.179916,3.016777,-1.266751,0.745321,-1.498634,-1.076281,3.767026,-9.409255,9.344940,-9.570464,8.383539,8.494324,-0.085558,4.049309,-2.213939,-0.211474,-6.925276,5.284972,3.880837,2.373794,8.979283,2.521024,-3.959911,-0.022619,-9.609448,3.789987,-9.742564,0.377112,-5.768493,7.817934,-4.642597,-5.917798,9.195842,-5.129721,-8.443432,2.787244,4.258304,-4.419630,-9.186432,6.289000,0.348546,-2.321513,1.720801,8.785756,-1.821113,-0.800519,-0.021769,-9.192616,3.943724,-8.175730,-8.275008,8.877417,-8.522402,7.073418,-1.298621,7.610886,-6.154074,0.053800,4.020931,2.844206,7.103809,1.861957,-4.513841,-4.827261,-1.974376,-1.628471,-3.618310,-1.218168,0.303770,4.217054,-9.146546,-3.446678,0.834022,0.329398,-7.876438,-6.461800,-5.856783,0.655652,4.325273,-7.683465,-1.677133,3.697519,-3.004116,4.099557,7.059926,-8.355229,-7.377186,-1.935759,-8.769332,-2.348621,-7.958566,4.383179,-0.173191,-6.262728,-0.644387,8.569064,9.697953,7.243565,-5.677860,5.310929,0.305089,-7.224787,-5.689527,4.943037,-7.477012,6.749676,7.382670,8.951622,8.575999,1.460048,9.454821,-5.713270,9.591889,-6.216143,7.635306,-1.444258,4.771225,-0.638295,2.714111,4.121793,7.152536,6.027476,2.135187,0.073512,-9.658968,-8.660669,5.155719,-3.822071,-0.263349,7.078830,-6.697871,-7.548655,-8.876449,-5.627774,5.768725,4.030386,-7.848244,9.351468,8.148441,8.349780,1.626546,5.153215,-6.158049,-5.293369,7.584552,-9.063134,9.781807,4.482359,1.071412,7.725891,2.767939,-2.771394,8.109716,9.233806,-2.521714,-3.785001,-6.944589,-9.958910,6.002548,8.914319,-6.574395,4.034676,5.799862,3.873419,-1.006447,7.393065,7.143980,0.072940,7.707391,-9.543200,2.962209,9.961556], dtype = "float64")#candidate|3242|(240,)|const|float64
call_3241 = relay.TupleGetItem(func_2832_call(relay.reshape(const_3242.astype('float64'), [2, 8, 15])), 0)
call_3243 = relay.TupleGetItem(func_2834_call(relay.reshape(const_3242.astype('float64'), [2, 8, 15])), 0)
func_3127_call = mod.get_global_var('func_3127')
func_3129_call = mutated_mod.get_global_var('func_3129')
const_3247 = relay.const([-4.012745,9.299864,-8.799632,-3.303010,4.631620,-1.690434,-6.438987,-9.873577], dtype = "float64")#candidate|3247|(8,)|const|float64
call_3246 = func_3127_call(relay.reshape(const_3247.astype('float64'), [1, 1, 8]))
call_3248 = func_3127_call(relay.reshape(const_3247.astype('float64'), [1, 1, 8]))
func_431_call = mod.get_global_var('func_431')
func_433_call = mutated_mod.get_global_var('func_433')
var_3253 = relay.var("var_3253", dtype = "uint8", shape = (2366,))#candidate|3253|(2366,)|var|uint8
call_3252 = relay.TupleGetItem(func_431_call(relay.reshape(var_3253.astype('uint8'), [14, 13, 13])), 1)
call_3254 = relay.TupleGetItem(func_433_call(relay.reshape(var_3253.astype('uint8'), [14, 13, 13])), 1)
uop_3271 = relay.acosh(uop_3203.astype('float64')) # shape=(15, 14, 6)
uop_3273 = relay.acosh(uop_3205.astype('float64')) # shape=(15, 14, 6)
const_3277 = relay.const([3,2,4,6,-10,-5,-1,1,1,8,-9,9,-7,1,-3,7,-6,-1,-4,-2,-3,-5,9,-10,5,6,-8,-6,-10,-4,-1,10,-1,-2,5,-9,2,3,-2,-2,4,3,-3,-6,7,7,-10,-7,-5,5,-2,-10,-8,6,7,-7,3,10,8,-10,-5,-2,1,7,-8,-8,7,-5,-1,7,8,-9,-3,-9,-7,5,-6,-9,8,-5,-8,-5,10,-10,-10,1,10,-8,-10,-7,6,1,10,-10,-5,3,9,8,1,-4,-6,8,4,-10,-3,-5,8,-2,7,-7,9,6,1,9,4,2,6,-6,5,9,3,-10,2,-1,6,-3,-9,2,5,-1,-3,-8,2,3,10,-9,8,5,-1,-10,4,9,2,-3,-3,5,7,6,7,-7,3,-9,-5,-2,-1,-3,-6,8,6,-5,6,-6,5,-10,-3,-9,-5,9,5,8,4,2,-8,7,2,4,4,-10,-1,-1,-9,1,1,4,1,-3,-3,-4,7,-4,5,-8,-7,-10,-9,5,1,2,7,-1,7,-5,1,1,1,9,-5,-7,-3,5,5,-10,7,2,5,4,7,4,9,8,-3,7,1,-4,-10,8,10,-4,7,3,-1,-6,6,-8,7,4,2,2,7,2,5,-3,-6,-4,-4,7,-3,6,4,4,-2,3,-2,-9,-1,4,-1,-10,3,1,10,3,-10,-3,-2,8,-5,-8,-4,-6,10,-10,7,9,6,7,6,1,10,-4,1,8,1,-3,-5,-1,-8,-7,2,5,3,-6,-6,9,-1,10,-3,9,4,-10,-2,-3,1,-7,3,-1,-8,7,3,1,7,7,-8,5,-10,-1,5,5,6,-8,-8,7,-3,-9,10,-10,1,-10,-6,3,1,10,-1,-3,9,-4,-10,4,-7,10,4,6,-9,-6,-1,-1,-4,8,6,-10,3,-3,-7,6,9,-1,8,-8,-4,-2,-3,5,3,-5,-5,5,1,8,-4,-3,-10,8,4,7,-10,2,3,5,3,7,4,-5,-10,6,9,9,-6,9,2,-9,-6,-8,-10,-5,2,2,-3,-3,-10,-7,8,10,10,5,7,4,7,-2,-6,2,8,6,-1,-4,-9,1,6,3,-3,10,6,-3,8,2,2,-4,9,2,10,-2,9,-8,7,5,-2,7,-8,3,-6,2,10,-8,7,-9,-10,-5,6,-5,5,-10,2,-6,-10,10,3,-3,9,4,-3,-2,5,1,-1,4,-6,-4,4,1,-9,1,3,7,-7,-8,5,5,-7,3,3,-3,-2,9,9,1,1,1,5,-5,-10,-5,5,7,6,-10,-7,-10,-10,-6,-7,6,-6,3,7,-4,-3,6,-8,-9,-4,5,-2,2,-2,-2,3,10,-6,-1,-10,-4,5,-2,2,9,-10,9,9,-5,-10,-3,-6,-2,-5,7,-1,2,-10,1,6,10,-6,10,-10,10,4,3,-8,2,10,-1,-2,-7,7,-8,1,3,-9,-5,-7,-9,10,-1,-6,4,-4,-9,9,-3,-5,3,9,5,8,6,-7,-6,-6,-7,-10,2,-7,-2,-6,-5,4,-9,4,10,4,-7,3,-7,-8,3,7,-2,6,-3,9,-3,7,-7,-6,3,4,-8,-3,6,-9,-1,-6,-3,7,3,3,8,-10,1,3,-3,-5,-4,7,-10,-2,-5,4,-1,1,8,1,-3,10,-6,-7,-1,-1,-1,-6,-7,3,-7,9,9,-1,3,2,3,-10,-6,8,-1,2,-9,2,9,5,4,3,3,2,-7,4,8,-9,-10,4,7,-3,6,-2,3,-10,-1,-4,-8,2,1,-5,9,5,-2,1,5,-8,1,6,9,-5,-1,-7,-3,4,5,5,3,5,1,7,-2,-8,6,9,4,-6,-10,5,1,9,1,2,-8,-1,5,-6,4,-1,2,6,3,10,-4,-9,6,-5,-6,3,5,2,4,6,3,-10,7,-10,9,-6,-7,-2,-4,10,-3,3,-8,8,4,2,1,-2,-2,-1,-2,-6,3,-2,4,-7,6,4,7,-6,6,-8,-1,-7,5,-6,4,-6,9,-4,-1,-9,-4,-10,5,-2,5,-7,-4,-3,-2,-6,10,-3,-9,3,1,6,5,6,4,-8,-2,9,-7,5,-1,6,-2,-10,10,-2,3,6,-5,-7,-10,2,-10,-8,-3,-8,1,-4,5,-5,-7,-5,4,-10,6,10,4,10,2,3,-8,-10,5,5,9,-6,-6,9,-6,10,8,-8,9,8,-3,-7,-4,-3,2,-10,7,-7,10,-4,7,-6,2,-9,9,4,-10,4,-9,-2,6,-10,-1,7,-5,6,3,-10,6,-9,9,-9,-4,3,-4,2,1,3,3,3,-1,1,-1,-2,-2,-3,4,-10,-7,-10,1,10,-8,-4,-5,8,-6,-3,-9,5,7,2,2,-8,8,1,-3,-3,-6,-9,-4,10,-5,-8,-9,8,2,5,-4,4,-2,3,-6,6,5,-4,2,10,8,-4,10,-2,1,-6,-2,-1,5,-2,2,4,3,6,-3,-3,-4,-7,8,-7,-7,-6,-3,-3,-10,-1,1,2,5,-9,6,-9,-8,5,4,-5,-2,7,-7,-4,-5,1,-10,2,-3,-4,-5,-9,9,-1,5,3,-6,-3,-1,1,-3,4,7,1,-8,-1,9,-8,-6,-1,-2,6,-5,2,-9,-3,-7,-10,-2,-6,-9,3,-9,-6,9,-3,2,-10,2,2,-5,6,2,6,-8,-6,9,2,-10,2,6,10,-9,-4,2,-2,10,7,-3,-8,5,-7,3,4,-10,5,-4,-5,-5,3,4,2,-3,-8,4,-9,-3,-5,10,2,-8,7,9,-6,-10,2,4,9,-7,-6,-6,1,-3,-6,10,4,-4,-1,-4,9,-5,9,-7,5,-7,4,-7,-3,-3,-3,8,2,-10,-4,9,-8,4,-2,-8,-2,9,2,-3,6,5,-1,-7,-2,-6,-1,10,7,-9,-5,-7,5,5,10,4,7,7,2,-1,-3,3,-1,-5,8,-9,-2,2,-10,7,-6,-8,-10,-1,1,9,10,-7,-6,1,-6,-9,-5,-8,-7,-7,-5,7,3,10,-1,-7,-2,2,-7,-3,3,1,-2,-3,5,-3,-8,-8,6,5,6,10,6,-9,7,6,-6,6,-8,-7,2,3,-8,-10,-8,6,9,-5,8,-8,6,4,2,7,10,3,6,3,9,-10,10,-3,2,4,10,4,7,-7,10,9,10,4,-9,9,10,-5,5,-1,-5,-8,8,-2,-2,4,-3,-1,-4,-6,-10,3,4,2,7,8,-8,-9,-10,1,-8,-1,-7,-3,-5,-8,-3,7,-8,-1,-2,-10,-5,1,10,7,-9,10,-1,9,-1,3,7,-5,10,-1,-5,5,10,5,-9,9,-1,4,-1,9,9,9,-3,2,-10,-8,-3,-5,10,-4,-2,-5,-1,4,3,7,-5,-9,-1,-4,3,4,-4,1,-8,-2,-8,-3,7,3,1,3,6,-6,4,-8,1,-5,10,8,-2,8,7,-1,1,6,1,9,3,4,7,-4,-3,-5,6,-3,-6,-10,-2,-9,2,4,5,3,-1,5,9,10,10,-7,9,-5,-10,-7,-4,7,2,-3,7,6,5,9,1,-7,3,7,3,8,-7,-6,-3,-10,6,-3,9,2,3,9,-1,4,2,9,-5,9,-3,-4,-9,3,-10,-8,-8,-3,4,-4,10,-2,-1,-8,-7,10,-1,6,1,-5,6,9,8,2,6,8,5,-6,10,-5,-10,-6,-9,3,2,10,5,-1,-1,-4,10,-3,-3,-3,5,-1,3,8,-2,2,2,1,1,-10,-6,1,8,2,3,6,5,4,5,-8,4,-10,-1,-4,4,7,8,-7,-2,-10,6,6,1,7,-2,2,6,4,2,2,-4,7,8,10,5,-6,6,-4,2,5,-8,-3,9,-2,7,-1,4,3,-4,-2,5,-1,2,9,7,-9,3,9,-7,-4,-6,7,3,-2,5,7,5,-2,-3,10,-9,7,9,5,-9,-2,6,-5,-9,7,4,-5,-1,-6,2,-4,-7,2,-7,3,5,-10,-7,9,3,-2,-9,-8,6,5,-1,8,10,-3,-6,-2,4,-2,-9,6,9,1,-9,-8,-2,-2,2,1,9,-10,2,5,-3,6,-10,-4,-2,-8,-1,-5,-1,-7,8,-6,2,3,-5,-10,7,-10,8,-5,10,-1,-10,-5,-5,4,8,4,4,-6,6,-9,9,10,-5,8,-6,6,5,-7,-2,6,8,4,7,-1,3,8,1,-9,-2,-2,6,-6,-9,-5,-3,5,-1,3,6,-3,-6,-10,8,3,-8,10,-3,7,9,-5,3,4,-8,1,5,-2,4,9,-3,2,9,5,8,6,-6,-10,10,2,-2,-1,-1,-9,-6,7,-3,1,2,-4,10,8,8,4,3,-7,2,-4,-10,8,-3,5,7,-8,4,9,-9,-9,-8,-6,-10,6,10,7,-4,5,-1,3,-6,6,10,-1,4,-7,-4,3,-7,-10,-8,-4,9,10,-10,7,-6,4,-8,-7,7,-5,9,7,-7,-3,-3,9,-8,3,4,2,10,-7,4,-3,8,-4,-5,4,-9,7,4,3,5,-10,5,-10,-9,-5,1,-4,3,-7,-10,-10,-8,8,-3,3,-6,-8,4,-5,-4,-8,6,5,1,-10,3,-9,-7,2,-7,-9,-10,3,4,9,-8,-3,10,-6,10,-1,5,5,-6,-3,5,-5,6,7,5,10,-4,8,2,4,-9,6,-6,10,-1,-6,-5,-9,8,-3,-5,-6,7,-2,7,1,-4,4,2,-3,-6,-9,-1,-2,-6,4,9,10,-2,-4,-8,-7,-4,4,2,6,10,9,-4,2,7,1,4,3,-2,6,-2,4,-1,-9,-10,1,10,1,2,-4,-7,-6,-4,8,-5,-10,7,-2,-4,1,6,4,-1,-2,8,3,-10,-8,-9,-2,3,3,6,6,6,6,9,-10,6,-7,-7,-10,1,-1,6,-5,7,-9,-3,5,-4,3,-4,8,-6,-2,5,-2,-2,7,8,9,1,-10,-6,-6,-7,-8,6,1,-10,7,-7,-2,-3,8,-10,-9,-6,-5,-4,-5,-4,4,-8,1,7,3,-8,2,-5,-5,9,6,-2,10,-4,9,-7,-5,5,2,6,6,2,7,8,2,3,5,-9,-1,9,10,-2,-10,4,9,-9,6,-2,-1,-3,10,-1,1,-9,4,4,-3,-10,1,4,4,6,-7,10,-9,-10,-1,3,10,6,-9,9,-5,6,3,-10,5,6,4,-9,1,3,8,-3,9,4,10,-1,-2,-2,9,3,-8,8,-7,5,6,-7,6,-5,-9,-3,4,-3,3,3,-7,-9,-5,9,4,9,3,-4,-8,-4,-2,6,-2,-2,4,10,2,-10,-4,1,2,8,8,4,5,-2,4,-10,-7,-5,10,6,-3,-2,-5,7,-5,-3,-8,-10,3,-9,2,-7,-4,3,6,-9,-6,-7,6,-8,-8,-5,-8,-9,-6,9,-8,8,9,-7,1,-5,6,9,6,2,-8,10,1,6,8,7,4,-9,5,7,3,-2,-3,-1,-8,-3,-2,-4,-4,2,8,9,7,4,-5,9,-2,-7,3,6,-2,10,1,9,-6,7,-4,-7,-4,4,-1,-7,3,-2,3,8,6,-1,1,2,5,-3,-8,10,1,-1,-5,7,-2,4,6,3,1,-9,-6,-2,-2,9,-3,-10,-3,7,9,7,5,-7,5,-3,5,-1,-2,-1,-7,-2,9,5,5,9,-9,5,10,-5,1,-3,7,-7,-6,3,9,2,-1,2,-2,-10,-1,-5,7,6,-7,4,3,-4,10,-10,5,10,2,4,5,5,8,-7,-7,3,-3,7,-10,5,-8,-10,-9,-1,-4,-5,8,7,7,1,8,-9,2,-7,6,-4,-6,-9,7,-8,-6,2,-2,-2,-2,4,-8,10,-8,4,-8,-8,3,1,-1,2,1,-3,-4,3,-7,-5,7,-5,-4,-9,-7,9,8,1,1,7,9,7,7,9,-5,7,2,9,10,10,-6,-5,-9,2,-2,-3,2,-4,10,-1,2,8,-9,-1,6,-4,8,-5,-10,8,9,-4,-3,-10,-4,7,10,-1,6,-9,3,5,5,-10,-8,-6,2,-9,-8,8,-1,-1,4,-1,-4,-3,4,-8,-7,-3,-1,-3,10,-9,-3,4,4,7,5,-6,-8,6,6,-10,-6,-7,3,9,-4,-4,5,-2,-1,-5,-7,-7,-2,7,-1,-1,2,-4,-2,10,3,-2,2,-7,5,1,-5,-6,-3,6,-2,1,-9,-10,-9,-6,4,1,3,9,2,-9,10], dtype = "uint8")#candidate|3277|(2366,)|const|uint8
bop_3278 = relay.floor_divide(var_3253.astype('float32'), relay.reshape(const_3277.astype('float32'), relay.shape_of(var_3253))) # shape=(2366,)
uop_3287 = relay.log10(var_3253.astype('float32')) # shape=(2366,)
func_2112_call = mod.get_global_var('func_2112')
func_2114_call = mutated_mod.get_global_var('func_2114')
call_3293 = func_2112_call()
call_3294 = func_2112_call()
uop_3296 = relay.atanh(uop_3271.astype('float32')) # shape=(15, 14, 6)
uop_3298 = relay.atanh(uop_3273.astype('float32')) # shape=(15, 14, 6)
output = relay.Tuple([call_3194,call_3220,var_3221,call_3230,var_3231,var_3232,call_3241,const_3242,call_3246,const_3247,call_3252,bop_3278,uop_3287,call_3293,uop_3296,])
output2 = relay.Tuple([call_3195,call_3222,var_3221,call_3233,var_3231,var_3232,call_3243,const_3242,call_3248,const_3247,call_3254,bop_3278,uop_3287,call_3294,uop_3298,])
func_3300 = relay.Function([var_3221,var_3231,var_3232,var_3253,], output)
mod['func_3300'] = func_3300
mod = relay.transform.InferType()(mod)
var_3301 = relay.var("var_3301", dtype = "float32", shape = (1536,))#candidate|3301|(1536,)|var|float32
var_3302 = relay.var("var_3302", dtype = "float32", shape = (576,))#candidate|3302|(576,)|var|float32
var_3303 = relay.var("var_3303", dtype = "float64", shape = (490,))#candidate|3303|(490,)|var|float64
var_3304 = relay.var("var_3304", dtype = "uint8", shape = (2366,))#candidate|3304|(2366,)|var|uint8
output = func_3300(var_3301,var_3302,var_3303,var_3304,)
func_3305 = relay.Function([var_3301,var_3302,var_3303,var_3304,], output)
mutated_mod['func_3305'] = func_3305
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_3346 = relay.TupleGetItem(func_1271_call(), 2)
call_3347 = relay.TupleGetItem(func_1273_call(), 2)
func_2647_call = mod.get_global_var('func_2647')
func_2649_call = mutated_mod.get_global_var('func_2649')
var_3364 = relay.var("var_3364", dtype = "float32", shape = (2, 288))#candidate|3364|(2, 288)|var|float32
call_3363 = func_2647_call(relay.reshape(var_3364.astype('float32'), [12, 8, 6]))
call_3365 = func_2647_call(relay.reshape(var_3364.astype('float32'), [12, 8, 6]))
func_3170_call = mod.get_global_var('func_3170')
func_3172_call = mutated_mod.get_global_var('func_3172')
call_3367 = func_3170_call()
call_3368 = func_3170_call()
output = relay.Tuple([call_3346,call_3363,var_3364,call_3367,])
output2 = relay.Tuple([call_3347,call_3365,var_3364,call_3368,])
func_3374 = relay.Function([var_3364,], output)
mod['func_3374'] = func_3374
mod = relay.transform.InferType()(mod)
mutated_mod['func_3374'] = func_3374
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3375 = relay.var("var_3375", dtype = "float32", shape = (2, 288))#candidate|3375|(2, 288)|var|float32
func_3374_call = mutated_mod.get_global_var('func_3374')
call_3376 = func_3374_call(var_3375)
output = call_3376
func_3377 = relay.Function([var_3375], output)
mutated_mod['func_3377'] = func_3377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3384 = relay.var("var_3384", dtype = "uint32", shape = ())#candidate|3384|()|var|uint32
var_3385 = relay.var("var_3385", dtype = "uint32", shape = (5, 12, 2))#candidate|3385|(5, 12, 2)|var|uint32
bop_3386 = relay.right_shift(var_3384.astype('uint32'), var_3385.astype('uint32')) # shape=(5, 12, 2)
func_782_call = mod.get_global_var('func_782')
func_785_call = mutated_mod.get_global_var('func_785')
var_3406 = relay.var("var_3406", dtype = "int8", shape = (140,))#candidate|3406|(140,)|var|int8
call_3405 = relay.TupleGetItem(func_782_call(relay.reshape(var_3406.astype('int8'), [4, 7, 5]), relay.reshape(var_3406.astype('int8'), [4, 7, 5]), ), 0)
call_3407 = relay.TupleGetItem(func_785_call(relay.reshape(var_3406.astype('int8'), [4, 7, 5]), relay.reshape(var_3406.astype('int8'), [4, 7, 5]), ), 0)
func_1620_call = mod.get_global_var('func_1620')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_3408 = func_1620_call()
call_3409 = func_1620_call()
uop_3422 = relay.atanh(var_3385.astype('float64')) # shape=(5, 12, 2)
func_1754_call = mod.get_global_var('func_1754')
func_1758_call = mutated_mod.get_global_var('func_1758')
const_3425 = relay.const([10,-7,-7,-2,-1,-5,-7,9,-3,-6,-3,10,-2,-2,-7,2,-4,2,1,2,-2,8,5,-5,-4,-9,-8,5,-9,-2,1,6,1,9,-3,-6,10,-4,-3,3,2,6,-3,1,-7,-8,7,4,-3,1,-3,-1,-3,8,-6,3,5,9,2,9,2,-8,3,-6,6,-4,-4,-4,4,3,4,-7,7,8,7,-1,-5,8,10,8,-1,4,1,-2,-9,2,-3,4,-8,-3,10,-4,2,6,-5,-9,7,4,3,-3,-3,8,6,7,-4,9,-4,-10,-4,-8,9,5,-3,5,7,8,3,-5,8,4,-2,-8,7,-3,-4,-10,-8,-2,6,-7,-5,10,-9,-10,-8,-10,1,-9,6,9,-2,-5,-4,3,6,2,3,1,8,10,8,-8,-8,5,-8,-5,3,-5,9,-6,8,-6,1,-6,9,-7,-5,-3,-4,8,3,4,-3,3,-7,-7,-9,9,-8,-7,8,-3,-10,8,7,6,7,-7,1,4,-1,4,-4,7,5,-1,9,7,-2,-1,-1,10,9,10,-7,9,-5,-5,-5,3,8,4,-9,5,8,-2,-5,6,-8,-5,3,3,6,-9,2,-10,7,6,-6,9,8,-4,-4,8,-9,8,-6,9,1,-2,1,3,-7,6,-1,9,10,4,-6,-7,5,4,-8,-5,1,2,-1,-2,6,-2,-4,-6,-6,8,1,4,1,-1,-3,8,6,-5,-6,7,-4,-9,-2,5,-3,10,8,-2,-4,-10,1,-2,-9,-6,-4,9,2,8,-10,1,-8,9,-7,-9,-6,-9,-6,-8,7,-1,6,1,-7,3,-6,3,7,1,5,-8,-8,9,-9,-8,10,-9,9,-6,3,-6,-6,-2,-2,-9,-5,-7,-4,-9,-5,9,-8,4,10,-6,9,-9,-2,8,-8,-1,1,-7,6,8,-3,-7,-5,10,10,8,9,-4,10,5,8,10,3,6,1,3,3,7,-2,3,5,1,9,-7,1,7,-7,1,-4,3,5,1,5,-3,-7,1,10,-9,9,-9,7,10,-5,-8,-1,6,5,1,-7,9,5,-7,-1,-3,2,3,-8,-5,-7,1,2,-4,-7,10,-1,8,-8,10,-1,4,-5,-5,1,7,3,-5,-7,3,-4,-6,2,3,-10,3,-6,-7,3,3,1,9,-9,-8,-3,-10,6,6,-1,1,-3,-5,1,-9,3,8,3,-10,2,-9,-1,-4,5,6,-10,-7,1,-2,-3,7,-5,2,2,2,-1,3,-10,-10,8,2,3,10,9,-6,-3,8,8,7,1,-8,-8,6,-7,-4,-2,-2,6,-1,-4,-7,2,4,-7,-3,-10,-3,-9,8,-5,10,1,-4,-4,1,-4,6,6,-7,2,-3,9,1,-7,6,3,1,10,2,10,3,-4,9,10,6,6,-2,-7,4,2,-8,-8,1,-4,-3,8,8,4,3,7,-5,1,7,10,4,3,-9,8,-6,-4,-7,-4,6,6,3,-1,6,6,9,-7,10,-2,-1,-10,5,6,8,-8,-10,-6,-8,1,-8,-7,3,-10,6,-1,-4,-5,-6,-10,-3,-9,-1,-7,-1,-2,7,5,-7,-4,-9,-9,-5,4,7,6,-10,-4,9,3,4,-8,-7,3,-10,-7,2,-3,-2,10,1,-9,10,-6,-7,-10,2,-3,5,-1,3,-5,5,3,5,5,9,6,9,10,-1,-6,10,-2,-5,1,2,-4,4,-2,-1,6,3,9,4,-6,2,7,-3,-9,3,-6,-4,10,8,-8,1,8,5,-5,-1,-5,-5,4,-1,-6,-1,-9,-5,-4,3,3,-5,7,10,-1,5,3,8,7,2,-6,-8,-9,-4,-7,6,-10,-10,-3,10,-3,-1,4,6,1,-7,-1,1,-9,5,-1,-3,-4,-7,5,-4,-2,-5,-4,-8,-6,-1,-1,7,7,-3,4,9,-10,6,6,2,-7,-4,7,-8,-8,-2,-3,-8,-10,9,10,-2,6,4,10,-10,4,-9,-8,5,-8,-7,-5,-1,10,1,-10,8,2,8,1,-10,1,-7,-6,9,1,-7,4,3,10,4,6,-5,-6,-10,-10,2,-2,4,-3,-4,-8,-3,10,6,2,1,-4,6,-1,8,9,-5,-3,8,2,2,-2,-4,-5,-4,2,4,-4,-9,9,6,-1,8,10,10,10,1,7,6,-8,8,6,8,-2,-4,-6,10,3,-9,-6,4,1,7,3,-9,-4,10,10,-1,-5,-5,7,-8,5,-3,6,-8,5,4,-1,-8,1,6,-6,-6,-1,-3,8,9,9,-6,-9,2,10,-9,-9,5,-5,-3,-7,3,2,6,-7,3,7,3,-2,10,-10,-2,-8,-3,7,3,7,-1,3,-6,4,-10,-9,-7,-7,2,7,-8,-8,-5,7,8,-7,-2,8,-3,-9,5,6,-6,10,2,-9,-10,1,3,-5,-3,-2,5,5,4,10,10,3,1,-6,-9,-5,-4,-4,8,10,4,-8,-3,6,7,-9,6,-4,3,1,-5,-1,-5,-7,-8,4,-10,10,5,3,6,8,-3,-8,-2,-8,-5,7,-6,3,-1,6,9,-7,4,6,-1,9,-7,-10,-5,-6,-7,-10,-7,-7,-2,-2,-10,5,8,-3,8,-2,-10,3,-1,8,4,-3,3,-1,-4,5,-3,-8,-4,1,3,-6,-6,-10,10,6,-6,-6,10,3,2,10,10,8,8,-7,-1,-6,4,5,-2,9,-2,6,-4,-8,6,-4,3,-2,1,2,4,10,-3,-3,6,2,7,-9,-8,-7,-4,-3,-3,8,6,-6,9,8,9,-9,-3,2,-1,-1,8,5,7,9,-3,-3,-8,-1,5,10,-3,10,2,-6,-2,3,-4,-2,-6,-2,7,-10,-4,-3,-2,-2,4,1,-3,10,-3,-7,-3,8,7,10,3,10,-1,-6,-6,6,-8,5,-3,9,9,-10,3,2,8,-8,2,-8,-1,-5,-3,-6,-9,4,-7,5,9,10,5,-5,-4,4,1,10,-8,-8,6,-2,6,-7,1,10,-9,-1,2,7,-9,3,-5,-1,-8,4,4,10,-3,4,9,3,6,-4,2,-6,6,-10,-4,6,3,-7,9,8,4,-8,-7,3,-5,-4,2,-7,-1,9,-1,7,-6,-10,2,9,-9,9,5,1,-10,-8,-7,1,3,3,-7,-7,-5,-10,-2,-2,-5,1,2,-2,9,7,7,3,-9,6,-9,1,-8,2,1,5,5,-5,-7,1,7,1,-3,-5,-3,10,-4,7,-3,3,2,-7,-5,-6,-9,10,3,1,-8,-2,-7,-4,-3,-2,1,-10,5,-2,2,-5,-4,-9,8,5,-8,8,9,-6,-4,-9,-6,-8,10,3,7,-5,3,-8,-5,9,-9,-1,-9,-1,7,-8,2,-6,-5,4,-7,2,4,2,-2,7,8,-2,-4,9,-6,4,4,-10,-9,10,-5,7,-2,-1,10,8,5,-4,-4,2,-2,7,8,-5,-2,-2,-7,8,-10,4,6,-7,-1,-2,5,-4,-2,-3,8,7,4,9,-10,1,-4,1,6,-3,-8,3,-8,-10,-9,3,2,-7,1,10,-1,-3,-7,-6,-2,-3,3,6,4,-6,-3,-10,8,5,-3,3,5,10,-10,-6,-5,-7,-4,4,2,-9,-6,2,-6,3,2,-3,2,9,-10,-6,-4,5,-7,4,-8,6,3,8,-7,-9,7,-5,5,-10,-1,-10,-3,-2,4,2,2,6,10,-7,6,-5,9,-1,8,-9,-2,-3,-4,5,-3,-9,-7,-2,-8,-3,6,7,-9,-10,-4,5,8,10,5,9,2,-4,-3,-7,5,7,-7,-7,-5,-3,-7,-2,6,-8,-7,10,-5,2,9,10,7,-5,10,-1,10,3,-2,-4,-6,1,9,5,-4,-1,6,8,7,-8,-9,3,4,-9,-10,7,7,-1,9,-10,5,-9,3,4,3,8,-4,-1,4,5,5,1,-1,-6,-10,-3,-8,-8,10,-10,8,4,6,10,-7,7,8,4,2,-8,-8,9,-5,-6,3,-7,3,-2,-9,10,-9,8,5,-7,-3,9,-7,-7,7,7,-9,-10,-10,-1,5,6,10,-1,7,-4,-2,2,-3,-2,-2,2,-7,-4,-5,5,10,-3,-5,-7,-2,-3,-4,-4,1,9,6,5,-4,-10,5,8,-7,8,-7,6,-6,4,3,-8,3,-10,-7,-4,-5,9,-8,-7,-9,-6,-10,4,1,-7,-5,9,-2,-8,-3,9,5,-9,-6,7,-1,-10,7,-8,-3,3,10,7,-2,-1,5,2,-10,2,-7,-1,-6,-1,8,-1,6,10,-5,-10,-10,-1,-4,5,-6,-10,-10,3,-4,6,4,3,-1,-10,8,5,-2,4,-1,-10,8,2,-2,1,-7,-8,-6,3,-5,-4,-2,2,-5,-9,-7,-5,-8,-2,-10,-6,4,10,-6,5,-7,-4,-8,-4,-5,1,-10,7,-3,-8,-4,2,2,-5,-6,-2,1,-3,-4,-4,-7,-1,3,-7,-8,9,-1,1,-2,4,9,2,-3,1,-1,-8,-1,-7,8,-9,9,8,9,-5,-6,-1,-6,4,-8,-9,-1,-1,-6,5,2,-10,-3,3,8,5,9,-8,10,6,-1,9,10,2,-8,-1,10,3,10,7,6,-1,-9,9,4,-7,10,7,-8,7,-4,8,2,9,-7,-9,10,9,-2,9,4,3,6,6,-6,1,3,-8,-3,6,-5,5,8,5,2,8,-1,-2,10,2,2,10,3,10,-4,5,3,5,4,1,-5,4,9,-3,-3,-7,-8,-2,-2,8,1,7,5,-5,-3,7,-5,-4,-4,-3,3,3,4,4,-8,-4,-8,-2,3,4,-6,-4,9,-7,-4,-3,2,-10,-1,-4,9,-9,1,9,-3,-9,-5,1,-10,10,-1,-1,-9,1,7,1,7,10,3,1,-6,4,3,5,6,-7,8,-1,-1,9,10,-4,1,-5,5,10,-8,1,2,5,1,4,-4,-6,-7,-4,6,6,-2,-4,6,-8,-2,6,-7,9,-6,7,10,-6,-10,-6,8,6,10,9,-5,2,6,-1,-10,-10,5,-6,-3,-2,5,-9,-7,-5,2,6,-2,7,4,-2,-8,3,-2,-10,3,7,-9,3,9,6,-3,-1,9,-5,-5,1,9,-9,-3,5,-1,4,-7,8,4,-9,6,-3,9,-2,-3,10,-5,5,9,1,-4,-2,1,-9,3,3,-10,-6,4,-3,-9,1,1,-1,7,10,9,4,-9,-5,1,-4,4,-9,-8,-5,3,-10,-3,-5,-6,-4,5,5,1,8,7,2,-4,10,-3,-6,3,1,10,6,10,-9,8,-1,-3,10,3,-3,-2,8,10,-2,-1,-8,-10,6,-6,5,8,-2,8,-3,3,9,-1,-3,-10,-3,-9,-1,7,8,-2,-9,2,-5,3,-1,-6,-4,-5,7,1,6,2,10,5,-5,5,-9,-5,-5,-4,3,-5,6,-3,5,6,-5,-9,10,-4,-2,8,6,-8,2,-7,2,1,2,-5,-9,8,-1,-10,10,-5,5,-4,9,-1,-3,-5,8,5,1,9,-10,3,-6,10,8,-8,3,5,-3,-2,-3,-1,2,-5,5,2,-2,7,-1,-2,4,-4,-4,-8,3,5,-6,9,4,2,7,-7,10,-7,-10,-2,10,3,4,1,1,5,4,-5,9,10,-3,5,8,6,2,4,3,4,-9,7,2,-7,-8,-7,-2,-5,1,-8,-3,-8,-2,4,10,-3,6,-6,3,-7,6,10,-10,-2,-6,-1,-5,-1,-3,-2,-5,-9,6,9,1,-2,1,-6,8,1,8,-10,-3,10,8,-7,9,-5,-5,6,-2,4,2,-4,8,2,-7,9,-7,-6,-2,-9,-8,8,1,-9,2,-8,-3,-5,-8,-7,1,-7,-6,5,-5,-9,-1,8,8,-6,-1,7,9,-7,8,3,9,-10,-2,-2,-9,10,9,1,5,10,-4,-2,-6,9,4,-5,-2,9,-10,-1,-4,-9,10,2,9,-3,-8,5,5,-10,-8,1,10,5,3,-10,-8,-1,1,2,-5,3,10,-7,-4,4,-10,9,5,1,-10,6,-10,-4,8,10,-3,-7,1,-9,-9,-4,-8,-10,-8,2,3,-6,2,-3,10,-6,-6,-5,4,-3,-7,-3,-3,1,-7,-1,-8,3,-9,-2,10,9,8,-7,9,7,-9,4,-5,-5,-5,-3,3,5,-10,10,-7,-10,-6,9,-8,-3,9,1,2,8,-2,2,-5,-9,8,-9,-10,-1,-7,-2,-9,2,-4,-3,10,-4,4,-10,-7,-6,-8,-9,5,5,-10,-6,3,8,2,-4,5,-7,-3,8,5,4], dtype = "uint8")#candidate|3425|(2366,)|const|uint8
var_3426 = relay.var("var_3426", dtype = "bool", shape = (84,))#candidate|3426|(84,)|var|bool
call_3424 = relay.TupleGetItem(func_1754_call(relay.reshape(const_3425.astype('uint8'), [169, 14]), relay.reshape(var_3426.astype('bool'), [84,]), ), 5)
call_3427 = relay.TupleGetItem(func_1758_call(relay.reshape(const_3425.astype('uint8'), [169, 14]), relay.reshape(var_3426.astype('bool'), [84,]), ), 5)
bop_3436 = relay.divide(uop_3422.astype('float64'), var_3384.astype('float64')) # shape=(5, 12, 2)
output = relay.Tuple([bop_3386,call_3405,var_3406,call_3408,call_3424,const_3425,var_3426,bop_3436,])
output2 = relay.Tuple([bop_3386,call_3407,var_3406,call_3409,call_3427,const_3425,var_3426,bop_3436,])
func_3453 = relay.Function([var_3384,var_3385,var_3406,var_3426,], output)
mod['func_3453'] = func_3453
mod = relay.transform.InferType()(mod)
var_3454 = relay.var("var_3454", dtype = "uint32", shape = ())#candidate|3454|()|var|uint32
var_3455 = relay.var("var_3455", dtype = "uint32", shape = (5, 12, 2))#candidate|3455|(5, 12, 2)|var|uint32
var_3456 = relay.var("var_3456", dtype = "int8", shape = (140,))#candidate|3456|(140,)|var|int8
var_3457 = relay.var("var_3457", dtype = "bool", shape = (84,))#candidate|3457|(84,)|var|bool
output = func_3453(var_3454,var_3455,var_3456,var_3457,)
func_3458 = relay.Function([var_3454,var_3455,var_3456,var_3457,], output)
mutated_mod['func_3458'] = func_3458
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_3483 = relay.TupleGetItem(func_1183_call(), 0)
call_3484 = relay.TupleGetItem(func_1185_call(), 0)
output = call_3483
output2 = call_3484
func_3495 = relay.Function([], output)
mod['func_3495'] = func_3495
mod = relay.transform.InferType()(mod)
output = func_3495()
func_3496 = relay.Function([], output)
mutated_mod['func_3496'] = func_3496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3170_call = mod.get_global_var('func_3170')
func_3172_call = mutated_mod.get_global_var('func_3172')
call_3514 = func_3170_call()
call_3515 = func_3170_call()
func_27_call = mod.get_global_var('func_27')
func_30_call = mutated_mod.get_global_var('func_30')
var_3523 = relay.var("var_3523", dtype = "float32", shape = (490, 1))#candidate|3523|(490, 1)|var|float32
call_3522 = relay.TupleGetItem(func_27_call(relay.reshape(var_3523.astype('float32'), [7, 10, 7]), relay.reshape(var_3523.astype('float32'), [7, 10, 7]), ), 0)
call_3524 = relay.TupleGetItem(func_30_call(relay.reshape(var_3523.astype('float32'), [7, 10, 7]), relay.reshape(var_3523.astype('float32'), [7, 10, 7]), ), 0)
func_591_call = mod.get_global_var('func_591')
func_593_call = mutated_mod.get_global_var('func_593')
var_3528 = relay.var("var_3528", dtype = "float64", shape = (32,))#candidate|3528|(32,)|var|float64
call_3527 = relay.TupleGetItem(func_591_call(relay.reshape(var_3528.astype('float64'), [8, 4, 1])), 0)
call_3529 = relay.TupleGetItem(func_593_call(relay.reshape(var_3528.astype('float64'), [8, 4, 1])), 0)
bop_3537 = relay.add(call_3527.astype('float32'), relay.reshape(var_3528.astype('float32'), relay.shape_of(call_3527))) # shape=(8, 4, 1)
bop_3540 = relay.add(call_3529.astype('float32'), relay.reshape(var_3528.astype('float32'), relay.shape_of(call_3529))) # shape=(8, 4, 1)
output = relay.Tuple([call_3514,call_3522,var_3523,bop_3537,])
output2 = relay.Tuple([call_3515,call_3524,var_3523,bop_3540,])
func_3552 = relay.Function([var_3523,var_3528,], output)
mod['func_3552'] = func_3552
mod = relay.transform.InferType()(mod)
mutated_mod['func_3552'] = func_3552
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3552_call = mutated_mod.get_global_var('func_3552')
var_3554 = relay.var("var_3554", dtype = "float32", shape = (490, 1))#candidate|3554|(490, 1)|var|float32
var_3555 = relay.var("var_3555", dtype = "float64", shape = (32,))#candidate|3555|(32,)|var|float64
call_3553 = func_3552_call(var_3554,var_3555,)
output = call_3553
func_3556 = relay.Function([var_3554,var_3555,], output)
mutated_mod['func_3556'] = func_3556
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3571 = relay.var("var_3571", dtype = "int32", shape = ())#candidate|3571|()|var|int32
var_3572 = relay.var("var_3572", dtype = "int32", shape = (14, 13, 10))#candidate|3572|(14, 13, 10)|var|int32
bop_3573 = relay.equal(var_3571.astype('bool'), var_3572.astype('bool')) # shape=(14, 13, 10)
bop_3577 = relay.bitwise_or(bop_3573.astype('uint16'), relay.reshape(var_3572.astype('uint16'), relay.shape_of(bop_3573))) # shape=(14, 13, 10)
const_3581 = relay.const([[[-6,10,-9,5,10,-2,8,-6,1,-2],[5,-9,-9,7,-3,1,3,1,4,1],[5,-5,-5,7,8,-1,9,6,-6,-3],[-9,-10,-8,4,8,-7,1,7,-4,-4],[-4,-5,-8,4,-4,-2,-1,-5,3,4],[7,4,5,3,-6,2,-3,-4,8,4],[-4,6,9,6,-3,3,4,-5,1,-8],[5,8,5,-9,-9,-4,1,10,-1,4],[-9,-3,6,-1,4,-5,-7,6,-6,-4],[2,-10,10,-3,-8,-7,3,9,-8,8],[10,-2,8,-9,-5,-1,-3,-9,1,-3],[8,8,-10,5,-9,-9,-6,-6,-8,-1],[9,1,-3,4,2,-4,9,-6,-1,6]],[[-1,9,-7,6,-9,2,6,-2,2,4],[-7,-6,2,-5,2,1,10,5,-4,-7],[-5,-2,10,2,2,-10,6,-5,-10,9],[6,5,1,-5,10,-7,1,-10,7,-5],[-9,10,-2,2,-7,-4,-3,9,1,-9],[6,-8,9,-9,9,5,-10,-3,-10,-4],[8,-10,-7,6,-2,8,3,4,1,6],[9,8,-6,10,6,3,-2,-6,1,-4],[7,1,-6,-1,10,9,-9,-7,-9,-1],[2,10,6,-2,8,-9,8,4,-7,-4],[-10,-6,-1,-6,-3,7,4,9,3,-6],[-9,-5,-5,4,-2,10,-1,-5,-1,-3],[9,-10,-7,-4,2,1,-4,-10,-5,-2]],[[-3,1,9,6,-6,-2,1,9,-3,-2],[2,6,-2,-7,-1,4,-3,5,10,2],[4,-2,-8,-5,-5,-3,10,2,-8,-9],[-10,-10,-9,-5,-8,-6,2,7,10,-8],[1,-1,-5,-5,2,9,-10,-4,-5,9],[-5,6,-2,7,9,6,-9,2,-9,-6],[-4,4,-3,2,-9,-1,-3,-2,-2,-8],[4,-10,10,8,3,-2,-6,-9,-7,7],[2,-10,7,-2,1,-9,-4,10,4,-5],[10,2,-6,-7,3,-8,-3,10,2,-8],[-1,-10,7,1,7,-8,5,-5,10,5],[9,8,4,2,9,-1,-9,7,10,-9],[6,-6,-7,2,-4,-3,-2,2,1,4]],[[-6,-2,5,-4,7,-3,-1,4,9,-9],[4,-3,5,2,3,-5,10,-5,7,3],[-3,9,-5,-3,-10,9,-4,-2,-10,-4],[2,-2,-7,9,-8,-7,9,6,8,10],[2,4,2,7,-2,-6,2,-7,7,-2],[8,-6,5,3,-1,-3,-2,1,5,-9],[10,-1,1,3,6,5,-7,3,4,5],[-8,-8,-7,8,8,-9,1,3,10,2],[-3,9,9,-2,-7,6,-7,-6,3,6],[-9,10,-3,-4,10,8,-4,-1,-9,3],[2,-1,-6,-5,3,2,4,-4,6,-9],[-5,-8,-6,-9,4,2,1,-6,2,-6],[1,-9,-2,2,-10,-2,8,3,9,-8]],[[3,-8,5,1,-5,2,-7,-9,-5,-4],[-1,-9,8,-4,3,-1,-2,-1,3,4],[-1,4,-9,-6,5,9,-8,-7,-2,5],[-1,-10,-3,1,2,-6,2,-10,4,-3],[-8,2,-3,-4,8,-10,4,-5,10,-7],[-9,-7,4,4,-3,-4,1,9,-7,-9],[-2,5,9,-5,5,-5,-6,7,-10,-5],[-8,-6,-4,-3,9,5,10,-7,1,-2],[-5,-1,9,-8,-9,-2,1,7,4,-6],[3,4,5,-4,5,-3,3,1,3,1],[-4,10,2,1,-7,-6,-10,4,4,-4],[-6,-1,-2,-2,-4,9,-5,-1,8,2],[-1,-8,1,-8,1,-3,-8,7,7,-5]],[[2,6,4,-4,-1,10,5,3,-9,2],[-3,-9,9,3,7,6,-3,-7,-2,-9],[-7,5,6,-9,-10,-7,6,-8,-3,-1],[-8,-10,-1,-7,-5,-8,-7,6,2,10],[-6,9,-6,7,7,-10,6,5,6,-2],[8,5,2,3,-7,-10,-2,5,5,9],[-9,-6,-10,2,-10,-9,4,-8,-7,2],[3,-9,10,-5,5,4,5,-10,-8,-3],[9,-9,-5,-9,7,8,-3,7,10,-8],[-7,8,-4,-9,3,3,3,2,10,-2],[-5,8,-5,1,10,10,-2,1,9,8],[-1,3,-4,4,8,-2,-6,3,7,9],[-5,-5,9,5,-8,-1,6,3,-1,-8]],[[4,-4,-2,4,-2,7,1,-4,-1,-10],[2,8,-7,9,-9,-9,-7,-3,-1,-10],[-7,-8,-10,1,-3,-10,4,2,10,-9],[10,-2,-10,-8,2,-4,5,-9,6,6],[-3,-4,-4,-6,10,1,-3,9,-10,6],[2,-10,2,2,9,9,4,-7,-10,1],[10,1,9,-9,-6,-8,3,-5,-7,-4],[5,-8,-7,-7,10,8,-4,-3,9,-1],[-5,3,-6,4,5,2,1,9,3,-4],[6,2,1,2,-7,6,1,-1,-8,-2],[5,1,4,-6,7,-1,-2,-10,8,4],[4,-7,-9,-2,5,8,-10,6,10,-10],[-1,-8,1,7,-2,5,1,1,-10,7]],[[-8,5,-3,-1,-2,1,-1,-8,9,-2],[-6,-6,-8,-9,9,4,-8,-7,-10,7],[9,-7,7,3,-3,-6,3,-8,-1,9],[-2,9,-10,2,-7,1,-6,-8,-6,-10],[9,9,-10,-3,7,-10,3,-8,10,-2],[-10,-6,-3,-1,9,-1,-7,-10,-9,-7],[5,5,1,-2,5,1,-8,4,-3,-4],[8,1,-6,-4,4,-3,-3,8,2,-6],[-5,-4,3,-8,-5,-9,8,8,-10,10],[4,-4,2,10,3,2,-4,-5,-2,-5],[5,-10,5,6,-8,9,2,8,5,-7],[-5,-8,-5,8,-6,-6,9,6,2,9],[-10,4,2,-3,10,-7,1,6,8,3]],[[8,-7,-5,-3,4,-9,-10,4,4,9],[1,1,-1,8,-2,7,2,9,6,-6],[-3,7,-7,3,10,5,8,-3,-10,10],[4,2,-1,3,4,-10,-4,8,7,3],[5,-9,2,2,3,-6,7,-2,2,6],[5,-2,-10,-10,-4,-4,-1,-2,7,6],[5,-6,3,-9,-3,8,-10,7,-1,-8],[-2,-5,-7,7,-10,3,-9,8,-9,7],[-3,-10,-7,4,5,-4,6,1,8,-9],[-3,6,3,3,10,-4,7,7,-10,-4],[2,-2,-9,4,-3,8,7,-9,7,-4],[4,-1,1,-6,8,4,10,-10,10,-8],[9,8,-9,10,-9,-4,-2,5,-2,4]],[[9,-2,7,7,6,-10,-1,-2,-7,8],[-7,-10,-9,4,-4,-1,-10,3,5,-5],[-7,-9,-5,-1,-3,8,-5,-1,-1,-4],[-7,9,10,-5,4,-9,4,1,10,2],[5,5,8,2,5,6,3,-9,9,-1],[1,6,-9,-7,-1,10,8,-3,3,6],[3,10,-9,-2,-1,5,-2,-9,10,-8],[4,-6,-5,-9,-6,8,10,7,5,10],[-2,-1,-6,7,-6,-6,7,3,2,-2],[-8,10,-8,-7,-6,-10,4,7,2,7],[-9,10,-4,9,8,4,2,6,-1,-5],[-2,7,6,7,8,-10,6,4,-5,-5],[4,1,-3,6,-1,-1,5,10,-2,1]],[[-10,8,1,7,-4,-10,-10,-4,9,-7],[10,5,5,-7,4,-8,9,2,9,7],[-10,10,2,-4,-4,1,-8,1,2,4],[-8,-10,-10,8,-2,1,-5,-3,-6,6],[-10,8,-5,-3,9,-3,-10,5,-7,-9],[9,2,-2,-9,-4,2,5,-3,-9,9],[4,4,-7,3,-3,5,-4,-5,4,7],[-10,1,1,6,-10,9,-7,9,-3,1],[7,-7,3,-7,6,4,-7,3,-10,-7],[6,-4,8,-8,-8,-6,-5,5,-4,6],[8,-8,-6,10,-10,6,-4,10,6,4],[8,-8,-4,-2,5,8,1,-6,-7,-5],[-7,4,3,-5,1,-4,9,2,5,2]],[[6,-3,6,-4,-8,-1,-9,-6,8,-3],[1,7,-9,5,-5,-4,-9,-5,-6,9],[7,-1,-4,9,10,-10,-9,-3,6,-2],[7,1,5,-10,-7,7,8,2,-8,-3],[-3,1,9,-10,-4,-7,2,-6,6,-8],[-4,8,-4,3,1,10,6,-6,5,-10],[-2,-1,-5,-9,-4,5,-1,-1,3,-7],[-9,-8,8,2,4,4,10,-10,2,-7],[8,8,7,6,-5,-4,-10,1,-10,3],[8,-10,1,-5,-1,3,4,-1,-1,1],[-10,10,1,9,-6,-7,-10,-1,1,5],[-8,-3,10,-5,1,-4,-5,2,-6,9],[-5,-6,-5,5,-5,-8,-1,-7,-5,9]],[[-10,-8,9,-3,2,1,-10,2,4,-3],[-8,-1,-4,-9,3,-6,4,10,-5,-2],[-6,-6,-8,4,-8,8,-10,4,-9,2],[2,5,-3,9,9,-6,-2,5,-5,-1],[-8,8,10,-9,-6,1,10,-5,-2,-10],[6,9,-2,-10,-1,-7,-2,6,-8,2],[-7,-3,-8,7,-3,-2,3,-8,4,-2],[-1,-6,6,6,7,8,-1,-1,9,1],[-5,2,-4,4,10,-5,-7,-5,-2,-6],[1,5,5,2,-5,8,4,9,8,-6],[-1,9,-1,-10,-7,6,-10,-9,8,-1],[-4,3,8,-8,7,-7,4,-8,-2,1],[-7,-7,-7,-2,-10,8,-3,-2,4,7]],[[3,-4,10,3,2,-9,-9,4,5,-3],[-10,-8,1,-1,-9,8,2,10,-4,2],[-7,5,-9,3,6,10,-4,-8,-8,2],[9,1,4,3,-2,-5,8,-4,10,5],[-3,3,-3,4,4,-1,10,4,1,3],[2,4,-10,9,8,-10,-8,8,-6,3],[10,2,-3,-1,4,10,6,8,-4,7],[-2,1,-10,1,3,5,-7,-1,-5,-7],[-8,7,-10,-1,-3,-6,-5,-4,8,-2],[-9,-4,6,-7,10,10,-10,2,-3,6],[-1,-2,1,-3,3,-2,2,9,1,-9],[-1,-9,-9,2,-5,-9,-1,5,8,3],[-3,4,-10,5,10,-2,-4,-1,-3,-4]]], dtype = "int32")#candidate|3581|(14, 13, 10)|const|int32
bop_3582 = relay.subtract(var_3572.astype('int32'), relay.reshape(const_3581.astype('int32'), relay.shape_of(var_3572))) # shape=(14, 13, 10)
func_2252_call = mod.get_global_var('func_2252')
func_2254_call = mutated_mod.get_global_var('func_2254')
call_3586 = relay.TupleGetItem(func_2252_call(), 4)
call_3587 = relay.TupleGetItem(func_2254_call(), 4)
func_3127_call = mod.get_global_var('func_3127')
func_3129_call = mutated_mod.get_global_var('func_3129')
var_3591 = relay.var("var_3591", dtype = "float64", shape = (8,))#candidate|3591|(8,)|var|float64
call_3590 = func_3127_call(relay.reshape(var_3591.astype('float64'), [1, 1, 8]))
call_3592 = func_3127_call(relay.reshape(var_3591.astype('float64'), [1, 1, 8]))
output = relay.Tuple([bop_3577,bop_3582,call_3586,call_3590,var_3591,])
output2 = relay.Tuple([bop_3577,bop_3582,call_3587,call_3592,var_3591,])
func_3593 = relay.Function([var_3571,var_3572,var_3591,], output)
mod['func_3593'] = func_3593
mod = relay.transform.InferType()(mod)
var_3594 = relay.var("var_3594", dtype = "int32", shape = ())#candidate|3594|()|var|int32
var_3595 = relay.var("var_3595", dtype = "int32", shape = (14, 13, 10))#candidate|3595|(14, 13, 10)|var|int32
var_3596 = relay.var("var_3596", dtype = "float64", shape = (8,))#candidate|3596|(8,)|var|float64
output = func_3593(var_3594,var_3595,var_3596,)
func_3597 = relay.Function([var_3594,var_3595,var_3596,], output)
mutated_mod['func_3597'] = func_3597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_3651 = relay.TupleGetItem(func_2153_call(), 3)
call_3652 = relay.TupleGetItem(func_2154_call(), 3)
output = call_3651
output2 = call_3652
func_3653 = relay.Function([], output)
mod['func_3653'] = func_3653
mod = relay.transform.InferType()(mod)
mutated_mod['func_3653'] = func_3653
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3653_call = mutated_mod.get_global_var('func_3653')
call_3654 = func_3653_call()
output = call_3654
func_3655 = relay.Function([], output)
mutated_mod['func_3655'] = func_3655
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3694 = relay.var("var_3694", dtype = "int32", shape = (9, 9, 15))#candidate|3694|(9, 9, 15)|var|int32
const_3695 = relay.const([[[-9,7,8,3,9,-3,-10,6,8,5,-8,-5,-3,-1,-5],[8,-3,-6,-4,10,-2,-2,-1,-10,-4,6,-3,10,-10,-8],[5,10,1,-8,6,-8,-2,-1,-1,-1,5,10,10,5,3],[4,-1,6,2,-5,-2,7,5,7,10,-4,7,4,-4,-7],[2,4,8,5,4,6,-5,9,10,6,4,-4,4,6,9],[-4,7,-6,8,2,-1,7,3,6,10,5,1,-4,-1,10],[6,-1,-2,7,-8,1,9,-5,-1,-10,-2,6,-6,8,-3],[-7,4,1,7,-7,6,4,3,-2,2,-7,8,-10,6,-4],[-6,-5,1,6,3,-2,-9,-8,10,9,1,8,3,-6,6]],[[5,10,-10,-7,8,-8,-1,-9,-1,9,10,-10,-9,-8,2],[-4,-4,9,7,2,8,-8,-9,7,5,-2,6,-7,6,2],[9,-5,2,9,-1,-7,-1,7,-1,1,-10,4,6,-5,-7],[10,-2,-1,10,6,-2,-10,7,4,2,5,-10,-2,-10,-9],[-1,-5,8,9,-5,-1,7,2,9,-1,1,2,7,-8,-10],[-4,-7,-6,-4,-3,2,-5,-3,5,5,2,-4,-7,-10,-7],[-1,-1,-9,-3,6,1,-10,-8,-7,7,-1,-6,-3,5,10],[-4,-3,1,-4,7,2,7,-8,7,10,-5,-2,7,6,1],[-3,6,1,-10,-4,4,-4,-8,-8,8,-8,2,-4,7,10]],[[-5,-4,9,-10,8,-5,-10,5,-3,-4,2,2,3,-2,7],[10,-3,4,-10,2,-8,2,7,-7,-10,-1,-2,6,-10,-8],[10,-8,-4,6,7,-2,4,5,9,2,-3,-2,8,2,8],[-7,-10,3,7,6,7,1,1,-5,-5,10,1,-3,-1,9],[7,-8,-10,8,2,3,3,-3,9,-5,-4,-2,-6,-6,-2],[-6,8,3,-9,-7,-7,10,-6,4,-10,10,5,-1,-9,-10],[1,-9,4,-8,6,-1,8,5,-6,-9,-10,-4,-3,6,3],[4,-3,-2,-8,7,-8,7,2,9,-10,6,-9,5,-7,-5],[-8,-4,-3,-8,-9,-3,5,-4,-1,-9,-3,-1,7,-4,10]],[[5,-10,10,7,4,-5,4,8,-1,1,10,-4,6,-8,6],[-2,9,-1,-7,9,6,-10,-5,8,-7,-3,5,-7,-9,-3],[-4,-7,9,2,-8,-7,4,-5,-6,-3,4,-10,-5,9,-4],[10,-1,1,-7,-6,-3,-9,2,5,9,-3,-6,-9,1,-5],[-2,3,4,-3,-4,-9,-4,3,4,-6,-6,3,3,2,-2],[9,4,7,-5,-10,-1,-7,7,3,-7,-4,9,6,-1,-7],[7,-7,7,8,8,2,-7,6,-8,7,9,10,-1,1,-7],[7,6,3,-9,7,1,9,-8,-3,-6,-2,4,-5,10,-8],[-6,-1,8,10,-4,-7,6,-2,2,1,-8,5,6,-10,7]],[[5,5,-8,9,2,-4,-10,-8,-7,10,8,-2,1,-2,6],[8,-3,-7,-8,8,2,1,-4,-4,9,6,3,10,-8,6],[-2,-5,-9,-5,-1,-7,4,-4,-6,7,4,3,-5,-3,7],[-7,4,-3,6,-8,-2,-9,2,5,2,5,9,-5,-3,7],[8,1,6,4,4,9,8,4,-1,-10,-3,1,5,8,6],[1,9,-7,8,7,7,9,3,-7,-2,-7,4,-1,-6,8],[-4,8,-1,-8,-10,10,-10,3,4,-6,-9,-3,1,-3,-3],[-8,9,2,-3,-6,3,8,-9,-7,-3,9,-7,6,-8,-4],[-9,10,10,-8,2,6,4,-1,9,3,-2,-5,-7,-7,-1]],[[8,5,9,-9,10,1,-9,4,-5,9,-6,-4,-7,3,6],[5,5,1,5,9,3,5,-4,-3,3,-10,-10,1,5,-9],[9,4,-4,-6,-7,8,6,4,-4,10,9,-8,4,6,3],[-10,-1,-6,1,8,8,10,9,3,-10,-1,-5,-10,8,10],[-5,-6,7,5,-4,8,7,6,-1,-9,4,-2,1,-9,1],[-2,10,-5,10,6,3,5,-1,5,-10,3,-6,-2,-8,-8],[10,5,2,8,-2,-7,8,2,-5,-9,5,8,8,10,2],[-5,2,2,-4,5,5,-8,5,2,10,4,5,7,-3,9],[7,-10,8,2,-4,-7,-8,-2,6,1,-7,-1,7,4,-7]],[[9,-9,-2,1,-8,-8,4,1,-8,-1,-4,6,-9,-5,6],[7,5,-4,-4,8,10,8,-5,1,7,4,8,-7,4,-1],[-4,-4,6,-6,3,-4,-4,-8,-3,-2,-10,-2,-6,-7,-2],[9,-7,-7,-2,-3,8,9,-2,-1,-7,7,-7,8,-9,4],[-3,9,9,-1,10,-8,-1,-2,-8,-10,-4,-4,6,-6,9],[8,6,-4,-5,8,10,6,4,6,1,-7,-3,-7,5,5],[7,9,-1,8,7,3,-1,9,-7,5,1,4,-5,4,-6],[5,10,-5,-5,1,9,9,3,3,-5,9,-2,-1,-3,6],[-1,3,5,6,-2,-3,-9,1,4,-3,4,-4,-6,-1,7]],[[-10,-8,-2,2,-2,3,7,10,5,2,3,-1,-2,2,-7],[1,-9,-10,-2,1,9,1,-7,2,5,1,1,4,8,-7],[9,2,-8,1,5,6,-5,9,-10,-5,6,4,7,-1,8],[-9,5,-4,-4,-3,-6,-4,-5,-4,-6,1,-4,-1,5,-5],[-9,7,-4,7,6,8,6,-7,-6,8,-2,6,-4,-7,1],[9,4,6,-6,7,-2,6,-8,-10,3,-6,7,-1,1,9],[9,5,-5,-3,-3,-3,-9,4,-1,10,4,-9,10,-3,9],[4,-1,1,-10,-5,9,8,8,-3,-6,-2,-9,-1,-2,-9],[-6,7,1,-3,4,-4,7,-9,3,5,7,10,-8,-6,-5]],[[1,7,1,8,1,-4,-5,6,-8,-7,8,10,-1,-9,1],[1,7,4,8,-2,5,1,-6,5,-5,7,-8,3,7,6],[8,-2,5,-5,-7,9,2,4,-6,4,-3,7,9,-3,-6],[4,6,10,-1,4,1,-10,3,3,-4,3,1,1,1,-8],[-6,-10,-8,4,7,-7,-1,-1,2,-4,-4,-4,-6,-7,-2],[6,9,10,8,7,4,-4,-5,-9,-3,-3,-9,-4,-5,-4],[7,-5,-7,2,-9,-3,-6,-9,-3,8,-1,-3,-2,-7,-7],[4,-2,8,3,9,2,-6,8,-9,-4,-7,2,9,-6,-10],[9,6,-4,5,8,-9,3,-9,3,-3,7,-3,-1,-2,9]]], dtype = "int32")#candidate|3695|(9, 9, 15)|const|int32
bop_3696 = relay.equal(var_3694.astype('bool'), relay.reshape(const_3695.astype('bool'), relay.shape_of(var_3694))) # shape=(9, 9, 15)
func_2627_call = mod.get_global_var('func_2627')
func_2631_call = mutated_mod.get_global_var('func_2631')
var_3702 = relay.var("var_3702", dtype = "float32", shape = (624,))#candidate|3702|(624,)|var|float32
const_3703 = relay.const([5.803251,9.485108,1.006020,6.383206,-0.227359,-3.401262,-6.987670,0.498440,2.069256,-9.096511,5.060938,-8.763833,2.412147,-2.845815,-8.636602,4.435053,5.614838,2.915796,-4.549165,5.296329,6.304429,-1.041677,-1.210764,1.850903,5.430157,0.903346,-3.440248,-4.594423,-6.848997,-7.830813,-5.004704,-5.545020,-2.493141,0.440910,2.812113,2.460256,-7.337605,-9.959017,4.758757,-4.031152,-1.043508,-2.392003,4.378711,-1.701640,2.575630,-5.820229,-0.854597,1.867782,-0.804601,6.339388,-9.827489,9.349523,4.538693,6.651369,6.009178,9.985062,-2.149041,-1.347143,-3.972255,2.074868,-4.783703,-1.286505,7.061340,8.039876,-0.052578,2.387535,-4.396997,4.526483,-7.616632,-7.821782,-1.292085,2.397525,8.535039,1.996008,-7.683759,-5.208836,-4.515130,-9.307235,-2.615471,-2.501256,-5.991082,1.791229,-4.639253,-0.778652,-1.070143,-1.046726,-9.102797,4.968263,2.590139,-8.119822,4.468632,-7.691910,7.990679,9.831272,2.799938,-0.282194,4.287274,-5.269772,-9.135382,0.962982,6.469369,2.865327,2.167463,-2.409304,7.431862,8.400719,1.600175,7.579874,-7.826601,-0.556466,-1.518575,5.116560,2.125461,7.167014,7.250527,-8.320895,-9.962963,-4.682826,-5.982475,-9.241150,2.546008,-3.717439,-4.739251,9.628265,3.437348,-3.022968,-6.210075,3.027003,2.755308,8.643658,7.593693,3.082267,-4.385520,-2.234499,-3.926649,-3.123798,-7.903606,-9.564384,-8.483240,6.410032,-6.426036,4.052941,3.147483,-1.714817,1.356158,0.417072,2.958121,-8.697214,7.360099,-5.911104,-4.766779,4.159730,0.379386,5.821216,-9.718692,0.967845,-7.763764,7.536244,-6.637099,-6.459684,-0.810279,-9.947133,-6.509640,5.084361,0.934014,-2.902389,-1.335119,-6.055273,6.272681,-1.627622,-1.828990,-6.700063,-4.548272,2.043098,9.676816,1.167286,2.554243,1.886958,-2.686980,7.216968,-3.015131,4.592261,-1.854851,7.571803,3.646127,1.598492,2.136627,-6.731141,3.621810,-7.636154,4.273304,-4.037130,-1.263893,1.259069,-4.510954,-3.136877,-2.420566,-5.932601,-7.632852,-5.203097,7.958933,6.142636,-7.770338,-4.956350,2.122351,-6.947920,-2.354752,-2.324043,2.674143,-4.601141,-0.192355,-1.050043,-9.736304,3.924204,-8.236647,0.491803,8.563615,8.027807,-3.475255,-7.596025,-4.527797,5.093815,4.880970,8.646546,3.440426,8.000867,9.325522,-7.216822,-1.947121,-5.420656,4.574236,-1.754661,-6.458034,-3.049359,2.381112,2.519707,-1.104976,2.171251,-0.651317,-5.798636,-7.703296,6.000514,9.181323,3.274223,-3.426572,4.544403,5.424054,-8.387100,9.435748,8.235780,0.682708,-3.896559,4.639424,-3.407052,4.470440,6.705736,-3.531231,2.151081,-3.897875,1.162367,-4.131741,-1.021294,-0.350580,9.739986,-0.034591,-9.844369,1.425319,7.283462,-4.854591,-9.138725,-7.294009,9.131816,5.170277,-2.989880,-6.670518,-1.655338,-1.377812,-7.593539,6.521059,-5.043944,-3.111197,-2.364081,-2.744697,-9.474003,9.867919,-9.276514,-6.183039,-8.056283,-0.634757,1.082271,-3.731018,9.221085,9.741405,0.982789,2.938330,-3.557967,-6.383435,-7.106403,-8.559337,-2.632419,1.452682,4.167116,-3.210047,0.950160,-2.038873,5.028310,-9.225747,-6.167798,1.682349,8.493480,9.666714,-3.178944,-1.994092,-3.369762,-0.532866,-2.988459,8.279828,4.053105,6.271789,-5.376448,-4.375300,-4.688609,-5.983587,-7.087381,-8.288102,3.576829,7.794048,1.986829,-5.698815,-7.363517,-7.226834,-0.256570,-8.049108,-9.986632,0.712520,9.162270,-1.135357,-3.622962,-1.883474,-8.392425,-6.586552,5.771720,-7.071573,1.319186,-7.812637,5.793109,-4.345732,2.769454,1.170407,-4.777227,-0.211887,-5.000746,6.292894,-3.057502,9.118621,-4.149798,-3.532973,3.599712,1.152815,7.600735,-8.872081,-6.382944,-9.218479,0.801484,7.845072,-8.812967,-7.039655,1.841786,-4.406455,7.231666,-2.027204,6.616067,1.558189,6.492744,-9.488563,5.357221,5.355068,4.010925,0.307547,-6.081301,7.309169,-9.860549,5.087325,1.800594,4.683834,-3.256332,8.921971,-6.763162,-8.803843,7.752776,-2.552466,-3.034273,-7.900055,-9.716116,-2.780431,7.913934,6.451039,9.057973,0.294947,-6.040748,-0.085403,-2.295308,4.138898,-3.474728,4.757954,-7.822241,-0.311766,5.849301,-6.209644,-6.775798,-1.237967,-9.805336,-6.531972,0.738385,8.733673,-4.011629,-9.239887,3.306194,-5.462745,4.130872,7.841638,3.074837,-0.582148,-8.148137,-5.555666,-2.646658,-6.549172,1.090601,-2.980865,-6.831115,-2.799497,0.546489,-3.398692,-1.994364,5.176753,-4.396465,5.314767,-4.570840,-8.720676,0.848929,-5.358807,-4.302110,-7.663688,7.275503,-3.460310,-6.980423,-4.984522,1.133904,-0.502487,3.900359,5.957756,-3.496993,-2.205167,7.944823,-1.357527,8.390354,-3.052595,6.818557,6.015536,0.329025,6.696444,6.682952,-6.672743,-6.322494,-5.076733,-1.413357,5.191400,0.407468,3.042392,-7.070203,9.078443,-7.627739,4.230393,-3.242416,-3.129669,-6.281858,-1.840887,-6.961466,-8.476645,4.623993,-5.801933,0.980486,7.251036,3.401593,4.064382,-8.825119,-9.195882,-1.337664,-2.706829,-9.861116,-5.751666,-6.971023,-5.299163,4.199247,5.154521,-7.574816,-0.162723,5.397867,-3.194509,1.715950,0.223825,-3.579672,-3.585931,4.439212,4.628129,-9.329805,0.964809,-0.834370,4.649202,-7.555483,4.565791,-8.145573,-4.725210,4.126084,6.287199,-2.100665,-2.174314,-3.752745,2.792209,3.840875,7.474658,9.762001,8.400840,2.473077,4.637931,8.706282,-1.761617,5.201164,-8.981615,0.434378,1.556301,-4.516876,-6.124460,-4.045353,-9.418293,-9.094446,0.445389,-2.105063,-7.200293,3.588159,-4.489453,-0.585961,8.845751,3.141812,-1.577241,9.193966,8.000024,8.884571,-8.742447,1.871972,5.790531,-0.039480,0.483145,0.899137,-7.329923,-3.531120,-6.729102,9.050689,-1.790184,2.810076,1.073005,-0.479526,-7.259897,-1.242114,9.391631,9.995724,-1.851669,-7.385695,5.917865,0.025340,-4.463581,-6.106041,-9.830005,-0.956136,-6.081915,3.826517,-9.338636,-8.291465,0.039843,2.239894,3.486577,1.529987,1.702131,9.639869,-0.473944,-4.434283,-6.467795,8.869907,6.234416,7.505475,8.394914,8.037997,-6.915233,-3.732191,9.648322,5.393567,-5.124048,-0.250595,-4.384871,-1.331032,-1.651038,6.425243,2.957358,1.224227,6.975680,9.389064,5.700783,-5.455391,-5.292067,7.531649,2.392171,-0.283268,7.866592,6.565975,8.399604,-8.693953,-2.168533,-8.858823,-0.428105,-2.540926,8.840551,-3.152645,1.601799,-0.394436,1.192469,3.262271,-2.885847,2.998854,-0.879226,1.521772,-2.048988,6.873554,-6.513518,2.992599,9.895701,-6.355257,6.032672,6.120670,8.250322,-4.820660,3.857857,7.157059,-0.157981,8.020303,9.301426,-0.720259,3.252516,6.477813,9.409580,-3.391019,-5.273452,6.813185,-3.396979,-1.018674,1.641686,-8.354840,-0.797458,-5.125978,-6.731449,2.232451,0.680378,-6.578556,4.612850,-9.444829,-6.947311,9.974750,8.596155,-3.737645,3.726214,8.468319,7.648629,2.282610,-9.286662,-8.086278,-7.035903,-3.649746,5.732171,-1.047952,-5.467703,-5.652446,6.255819,-7.652372,-7.397319,-3.288567,0.468414,-6.095546,-1.356116,3.267942,-6.009284,6.639853,8.081604,-0.773464,-2.217128,-5.332038,5.768862,6.695027,-0.628614,4.799103,-4.814832,9.497852,2.694820,7.299161,9.801789,-1.774325,-6.959217,-2.272228,-9.215874,9.423347,4.389197,0.699438,-4.841008,-0.575581,-5.263798,2.601704,8.094812,9.710870,3.557888,-4.972419,9.382386,-0.777977,4.842393,3.429412,9.905675,-2.068935,-4.947708,3.184932,5.538647,-8.980218,6.822526,-6.297077,-8.632978,1.153968,-1.684554,-3.892689,9.388161,-5.954643,-0.076218,-0.898517,-0.663285,-2.185276,-7.572570,2.115685,5.790111,-5.748489,6.874625,-7.810918,-1.343536,5.517726,3.261462,-5.929294,-7.738216,2.637807,-0.405931,-9.679591,3.707075,-9.747172,-6.766007,0.559207,2.057838,-6.012244,-6.287797,-8.146174,4.317715,-9.135305,4.365186,1.114656,0.916118,-4.952427,-1.762397,-5.921994,-7.616625,3.427524,-2.612346,-4.225867,-3.524528,-7.334263,8.174499,8.608742,4.314931,-6.436880,-0.733107,-0.623433,-1.766158,-8.720664,-7.578318,-6.589048,2.105533,6.442555,-7.674949,2.320197,4.648037,-9.506668,-9.733853,7.222616,6.380549,-6.766647,4.960036,9.454870,-2.091080,-7.329208,-4.190197,7.648129,-5.569717,0.479072,-0.825647,-5.956841,-4.642429,2.230857,-0.737754,-2.695623,-2.762138,-4.562886,-3.298007,8.500130,1.543728,4.476391,9.029828,8.883790,5.657750,-4.274043,8.914126,3.658619,1.236510,-5.233836,3.148058,9.222624,3.434818,1.845950,6.825727,-8.284870,-5.695901,-7.564869,-9.261700,-5.389250,-6.815681,-4.298710,7.924539,-9.860250,-2.739866,-6.103084,3.239134,2.904301,1.509399,-0.860224,1.564926,5.034510,-9.156280,9.261127,4.382517,4.470132,2.183905,9.426465,1.264658,1.413791,-7.832063,-9.830065,-7.756165,1.961570,-2.063714,-4.390683,-9.031302,-5.143568,-7.282957,-0.811082], dtype = "float64")#candidate|3703|(864,)|const|float64
call_3701 = relay.TupleGetItem(func_2627_call(relay.reshape(var_3702.astype('float32'), [624,]), relay.reshape(const_3703.astype('float64'), [864,]), ), 1)
call_3704 = relay.TupleGetItem(func_2631_call(relay.reshape(var_3702.astype('float32'), [624,]), relay.reshape(const_3703.astype('float64'), [864,]), ), 1)
uop_3707 = relay.atanh(bop_3696.astype('float32')) # shape=(9, 9, 15)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_3716 = relay.TupleGetItem(func_1183_call(), 0)
call_3717 = relay.TupleGetItem(func_1185_call(), 0)
bop_3720 = relay.greater_equal(uop_3707.astype('bool'), relay.reshape(bop_3696.astype('bool'), relay.shape_of(uop_3707))) # shape=(9, 9, 15)
output = relay.Tuple([call_3701,var_3702,const_3703,call_3716,bop_3720,])
output2 = relay.Tuple([call_3704,var_3702,const_3703,call_3717,bop_3720,])
func_3725 = relay.Function([var_3694,var_3702,], output)
mod['func_3725'] = func_3725
mod = relay.transform.InferType()(mod)
mutated_mod['func_3725'] = func_3725
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3725_call = mutated_mod.get_global_var('func_3725')
var_3727 = relay.var("var_3727", dtype = "int32", shape = (9, 9, 15))#candidate|3727|(9, 9, 15)|var|int32
var_3728 = relay.var("var_3728", dtype = "float32", shape = (624,))#candidate|3728|(624,)|var|float32
call_3726 = func_3725_call(var_3727,var_3728,)
output = call_3726
func_3729 = relay.Function([var_3727,var_3728,], output)
mutated_mod['func_3729'] = func_3729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3495_call = mod.get_global_var('func_3495')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_3734 = func_3495_call()
call_3735 = func_3495_call()
func_3300_call = mod.get_global_var('func_3300')
func_3305_call = mutated_mod.get_global_var('func_3305')
const_3737 = relay.const([3.003922,9.651170,-9.422237,-2.023415,0.613880,0.228419,9.825001,7.146481,4.976286,1.066694,3.283303,6.898487,0.819907,-8.498642,5.995688,-7.220373,6.741845,0.313992,-3.525115,5.991965,-3.715171,2.454280,-6.236473,-4.875055,5.206754,-5.880715,-4.537260,4.790198,8.541179,7.318647,6.680962,6.526221,8.460252,-6.999394,-2.712102,3.357742,5.335457,9.656048,8.245930,0.848619,3.597748,8.579354,8.019974,-0.085289,2.211792,1.283753,3.002247,8.564085,-5.235483,-4.635495,7.324660,5.283814,-0.756103,-7.614469,-0.372721,-9.939281,7.825590,-5.696334,4.243741,4.806031,-6.579666,4.714425,8.387886,-0.033181,3.651366,7.776844,-8.094966,2.986107,7.204692,2.156628,8.380447,0.745092,0.850334,9.271605,-8.326601,5.042513,-2.428517,-0.842358,-2.650280,1.181844,-6.795137,-8.902299,6.921670,0.230891,-5.348778,1.598831,0.421185,-3.573731,-4.350415,4.150029,1.586225,0.730226,3.063335,2.479272,-7.815326,7.027989,4.504247,9.742947,2.094500,2.849014,4.238572,7.754447,-8.872564,-2.107231,-1.764242,8.955174,-3.570086,2.558424,0.653296,1.749466,6.554255,-3.788501,3.596304,5.119225,-9.653701,-8.343771,9.541050,-6.268440,6.600965,-1.530785,-8.308450,1.309461,-9.421576,9.114623,-1.273681,2.174509,1.449263,-7.006490,-8.203024,-4.598035,2.841468,-4.471165,-4.873215,-7.668664,5.126123,4.063474,-4.304785,7.340409,7.338456,-0.006825,9.435655,3.627016,4.030031,0.200707,-5.386876,0.526474,-4.491146,-4.808850,-5.704583,8.298485,-0.967468,-3.148115,8.273343,2.633884,-4.433329,-5.431736,-8.190308,-2.881167,-9.841235,0.495846,1.285617,-2.202327,-1.907577,0.965885,7.643037,7.585999,6.104581,-2.855812,6.919014,-0.696458,-1.691174,5.755713,-9.948010,-5.354029,-8.822056,5.245705,-9.900403,5.650675,6.797124,-0.446325,8.047919,-0.227683,4.331542,-0.293656,-9.143436,-5.100790,6.983932,8.946745,2.267394,-3.741384,0.512749,-1.326244,8.375928,8.382589,-1.683559,3.775489,9.564605,-8.548804,9.349995,6.157090,7.870135,-3.841220,3.205507,0.559313,0.450599,-5.630588,0.595844,6.041827,2.669018,2.686031,-7.885301,6.886342,-1.271537,-6.969146,-8.811681,-4.561817,1.931278,6.474934,-5.965854,6.021109,-0.579119,7.641097,-8.931080,3.248894,0.510484,2.786320,2.436158,0.191976,3.028699,3.186630,5.409055,8.592864,-4.801019,2.482998,0.568284,5.035844,8.834455,-3.087452,9.970174,1.520215,-6.239770,-3.372887,5.453684,-8.544347,9.085880,7.242505,9.904080,6.847125,1.003654,-9.172211,6.092478,-5.151287,-3.188742,1.264900,-5.609750,-4.308856,0.230442,5.719929,-5.814325,2.046074,9.631647,-4.790581,-4.818923,3.077735,2.701074,-7.608785,1.282941,1.675335,2.856181,0.863098,9.263774,9.631308,-8.484646,3.231127,-4.016298,-2.298487,2.344684,-0.438512,-8.879419,4.737931,3.410547,-3.076885,0.507012,2.207440,-7.861551,-3.504909,-7.482447,7.987248,-8.934782,-4.070930,3.293090,9.739196,0.313623,-1.713427,8.832907,4.398071,-4.240498,3.409361,8.435532,-5.268364,6.094560,6.065252,-0.202228,-7.787738,-4.856646,4.549880,9.816752,-3.116937,-1.600383,-5.802367,5.018959,3.223876,0.217394,5.503151,2.944995,8.037342,-6.460779,-2.477509,0.680782,-4.942657,0.326487,4.998977,-8.573680,-6.443297,6.574404,-5.564554,-4.116277,-1.954799,-3.681291,9.562282,8.685068,-5.213493,5.632423,1.488884,5.586245,-6.353344,7.413308,3.956654,-7.867428,0.767777,-6.253748,-7.322603,2.919316,-9.984431,-4.498816,1.647107,-8.365989,4.307127,-7.072920,-5.169078,-9.783331,5.125280,3.306048,0.887552,-7.947185,9.226128,-6.530990,6.154686,-6.189942,7.475194,6.831523,-3.642709,-2.059534,-4.333091,-1.527889,-1.252861,3.087809,6.045865,-1.163758,-6.260886,3.167574,4.766872,7.329757,2.044537,7.432053,-3.183288,3.914327,-6.683029,9.354787,-9.837446,-7.666134,-9.818363,-8.470559,-5.793294,9.094986,2.924444,-4.427516,-5.727461,-8.879956,4.825426,8.480467,-0.217012,-4.456978,-4.775096,5.882885,-1.755324,-8.617686,-0.161516,-1.564307,8.397409,6.421708,-8.807745,-4.063348,-4.070259,-8.932382,-4.196524,7.678297,-2.706722,6.932046,7.566065,1.128085,-5.416681,9.692135,7.517240,3.752455,1.496741,9.186690,-2.053817,-5.499167,-9.378179,-1.322090,-2.789269,-8.370086,-8.981361,-6.705065,-9.692748,8.628909,0.559249,5.058321,-5.138756,2.711707,-0.254876,9.375594,-9.129981,2.477057,-3.114290,3.634908,9.231387,7.520724,-9.100662,-5.904382,5.605667,4.317345,-5.144263,2.362048,-2.284219,-1.168579,-5.031245,4.073564,1.747211,2.709720,6.581871,3.394620,-8.901715,-4.645278,-9.956532,-6.782355,-4.624612,-9.793547,-4.115657,7.381018,-0.685844,2.169098,9.756377,-0.765386,8.299570,-0.042043,-4.517007,-0.589034,-0.337232,8.203055,4.537607,-1.185135,-7.029358,-0.641557,8.061357,5.210922,9.394927,-1.616615,7.056575,0.043819,-4.922057,7.694193,7.802422,-4.505424,-4.219348,-3.621374,7.700077,6.327326,0.713366,-8.847398,7.335131,2.297521,5.189078,8.286012,-7.076120,5.765160,-9.224942,2.014278,-3.871601,6.881258,-0.882769,-1.852821,0.181061,5.479874,9.861393,6.264519,8.465986,2.672893,-3.504149,8.441080,-2.746681,6.501548,-1.461015,-6.920154,-1.193497,5.393072,-4.328052,-0.193147,-4.046344,-8.156695,-3.962704,-4.828226,-5.686081,-7.514284,4.746576,6.069720,-3.292727,-0.908684,-2.853146,-4.210204,9.480352,8.090799,2.613632,6.595205,6.991882,-5.501136,5.294744,3.163016,-3.601360,-1.511841,1.589518,8.327296,-9.940316,-8.711838,0.909582,-6.197658,2.846467,-1.997663,3.350808,-0.612205,5.930784,-6.967165,4.956379,8.549841,4.568262,9.370181,3.398488,6.727137,2.247425,-1.269631,-1.119349,6.377766,-9.376619,-2.968644,7.058010,-1.257673,8.122220,8.620844,-9.336421,3.064340,-6.909320,9.609550,1.531550,6.022375,-9.220817,7.484271,-7.140272,-0.077187,-4.732233,5.490516,2.492198,7.270048,-8.939971,-7.241294,6.897530,5.223041,-9.283411,7.694426,6.753543,-5.859106,2.536981,-9.096213,-8.600331,-7.494695,0.064020,-3.777267,-2.797461,-8.662214,-3.193642,4.827529,-1.362260,1.902456,5.003301,-4.225910,-9.541768,4.162571,9.010634,8.877862,-1.092579,-7.842582,1.978941,8.784474,-6.800075,3.877646,-2.731810,-4.856772,9.439739,0.255429,0.753605,8.561082,2.718494,1.427414,-7.779154,-1.569840,-8.587453,-9.000282,-1.253694,5.973584,5.111134,9.239907,-0.386527,-8.540071,-4.550377,-3.081255,-8.698071,3.968841,-7.656994,-7.849355,7.752832,-6.221594,3.045207,-4.523987,-8.983458,3.835641,-2.702346,8.232107,-1.425879,-2.642897,3.964749,-6.619699,-8.271803,2.435851,-4.871249,3.735793,7.441405,-8.256748,-1.561179,-7.788285,-1.057486,3.279162,-2.793769,5.616774,-2.841217,1.093866,9.751361,0.775136,5.393765,-8.005902,-7.996811,-7.966271,6.372986,0.114864,6.125499,-4.579355,6.376049,-1.622021,-4.916922,-3.052960,9.162977,3.607194,-8.873368,-8.088787,9.159171,6.688375,-9.465280,5.763225,-7.846897,9.745240,-0.238252,-0.800705,8.047181,-8.614761,-8.524619,4.739014,-9.513322,-7.356415,6.564038,5.286998,-1.865435,1.098943,-1.657358,-0.067469,0.738634,-8.175215,-1.126984,9.649806,6.443750,2.617187,-1.091876,7.175410,2.702453,4.449206,-1.797155,-9.886693,-3.343270,0.138172,-7.540424,8.285826,7.996518,-5.121484,-7.089149,-2.776886,5.051276,-4.652547,-9.463388,-7.850169,5.136263,-2.613178,-8.615871,-6.084358,-7.738210,1.389257,-9.452395,-1.147222,-6.107451,1.763662,-7.283149,-3.064658,2.929636,-8.677012,-3.490906,-8.546882,-8.178996,7.915799,3.883133,2.388162,3.779596,-0.042279,-8.053957,-3.275455,8.468170,1.520542,3.125987,5.062860,-9.137741,-4.480194,9.994368,0.417148,1.857256,-4.886026,-9.035224,5.980558,5.675358,4.730985,-0.195373,-4.634417,5.471919,-7.946084,-3.837195,-3.847024,8.549710,4.219345,3.618212,-0.342939,-0.619642,0.866405,2.848581,-8.239324,-5.428679,-6.619373,0.987680,4.642242,-3.418532,4.866689,3.753199,-7.139835,-5.035956,1.349103,-5.509026,6.105050,9.113827,0.599864,4.163412,6.078205,-1.811834,-8.403341,-7.479196,-7.253025,4.050087,6.654757,8.104122,3.923843,-0.756170,3.204799,9.512768,9.518457,4.218795,2.097831,-5.856365,4.429815,-3.847657,6.811574,8.032793,7.938743,7.113823,8.205930,-5.472737,6.854462,-9.378134,9.290302,1.684146,-3.353398,-3.983787,5.069702,-6.456110,5.111263,-4.570892,0.347744,-0.557835,2.696367,-6.448982,7.408747,3.504793,9.706760,1.203494,0.567883,2.271329,-4.288894,9.605968,-2.744694,-0.529639,-3.356280,-8.807515,-0.226396,7.860203,7.649909,-6.853804,-7.513044,8.734589,7.956205,0.266495,7.569962,-6.839822,-3.878102,3.272332,1.225233,-0.321428,-1.664922,-1.566078,9.735953,-2.387899,4.282867,3.291353,2.446491,7.143692,-0.246940,7.162253,8.707220,3.521467,-3.767734,-0.303918,-1.232367,4.220273,-3.014958,7.869042,3.314732,-1.389962,-7.739956,9.015878,-8.521131,7.443671,0.618410,-4.417198,-9.069994,-2.349863,-2.477355,6.331905,1.651062,0.546149,-9.113970,6.366943,5.144613,-5.884630,-0.773440,4.890523,-8.284369,0.219073,3.465951,-5.744040,4.498762,-3.159854,4.964259,-4.715789,3.258576,-6.551909,-7.518554,8.843475,7.795625,2.970226,0.215667,-3.594994,8.771247,6.025170,8.145773,3.047933,-4.052762,-5.221481,6.681578,-9.675884,0.163840,-3.032458,6.926716,9.154156,8.437810,-3.624349,8.581981,-3.208879,-2.566353,5.310211,7.297583,-7.574789,7.062602,2.012334,9.843412,6.485747,8.078701,-6.211672,4.759803,4.512311,-0.269523,-9.489608,2.420981,8.244249,-5.870314,9.051758,4.047379,-6.941729,9.983326,8.014574,1.385823,6.325489,-9.843265,9.276005,6.492310,-9.924985,-5.456087,6.928607,4.022935,6.137282,7.200372,1.051434,-9.840791,2.480225,2.491548,-2.296964,8.625939,3.517195,4.831636,-1.628215,-8.851348,2.142418,8.914322,-4.431231,4.442550,-1.044188,-8.527288,5.454167,5.278063,-1.272123,0.483711,-7.986739,-9.169274,-1.749871,-8.894756,-7.162802,5.737687,-4.325206,-4.181386,2.514506,-7.103004,5.026630,8.469502,-8.925043,4.996345,1.945177,1.224149,-9.134186,-9.015226,-2.983341,4.318258,6.683706,-3.543314,3.215467,-9.944762,-1.068943,-6.372651,8.756982,-5.353248,7.776045,8.077926,-3.198630,-9.265282,-6.862131,6.334933,2.513782,-6.305730,0.426702,-9.540995,7.828711,5.639211,-7.366674,5.314285,1.252434,0.747078,-6.330058,7.902877,2.252206,1.158070,-9.479451,-6.433776,6.455302,-5.580349,7.865687,9.472603,8.783929,-4.296245,-7.693900,-9.542091,2.568741,-3.353399,-4.704932,-7.633491,8.676660,7.963241,-4.534307,-2.882973,-1.175582,-5.591989,2.477152,2.153199,-4.836677,-6.618781,6.808526,-6.355702,-9.665310,-1.692359,5.814469,1.836741,-7.983749,-9.934178,-1.539676,-1.292307,-9.913962,6.164892,-3.066107,-1.876065,-2.830867,-5.898346,7.035935,8.527223,3.231399,-2.008175,-6.572870,-3.783536,5.976161,-1.909250,2.816770,-4.331515,1.409084,3.743644,-8.024668,8.159544,7.994228,5.119825,-8.710703,-4.166993,-7.764482,-3.184596,-7.861884,-7.488201,-5.796298,-4.844003,8.573572,5.747094,-5.541640,6.179674,-5.856405,7.423366,-9.488646,1.964433,4.907627,-2.156489,-0.849921,1.596488,9.011212,-3.706631,-6.271993,7.086967,-7.508482,-5.163115,-1.693192,9.110461,-0.359010,-6.582286,4.787121,-4.417875,1.089707,8.059760,5.825490,5.558005,-4.286609,-1.084370,-4.518737,-5.967457,-4.434126,5.600270,-0.500797,-5.548395,4.082577,8.338380,-1.369163,-8.490469,6.168730,3.926162,-8.400941,7.178512,8.861995,3.291943,-6.993868,-3.190336,-6.908664,9.985029,-1.888523,-8.752957,-4.947708,7.593282,4.793175,-2.425941,0.735584,8.865777,-9.987828,-4.751021,0.817105,3.525204,8.435463,-6.245881,5.542411,9.016963,5.132795,-0.878974,2.102610,-1.491058,0.454574,2.928917,1.337786,-2.292841,-0.421696,2.633241,-6.021098,2.310334,-8.262679,2.219909,8.854635,7.846012,-9.927214,-6.180165,6.300897,-0.733875,3.457160,2.830466,9.692946,1.404338,-2.764692,4.764424,2.663344,5.468474,-2.555824,-1.023219,1.125992,4.499447,2.263353,8.020500,-7.741857,5.335188,-3.515323,-2.077177,-9.246285,5.791104,-4.465191,2.748384,2.350695,4.715447,0.835720,3.838800,-3.504530,6.339469,-7.248892,-2.523923,-5.559101,-9.281566,2.895217,-9.596142,-0.759211,-1.693614,-1.545871,3.271259,-7.357139,-9.770301,-2.518330,-0.035234,-2.943537,-0.520676,6.501824,3.716938,-5.591326,-6.845688,0.762091,2.867095,-6.291653,-0.424816,5.516734,-6.906194,1.663628,3.921899,-5.840698,-1.701906,9.653360,1.499407,9.542063,7.130395,-7.174424,3.778046,-9.278577,-0.879355,8.140565,-5.288919,-4.508896,-5.386020,8.664382,3.964136,-6.514359,-9.697734,-0.261770,-6.984280,-9.702997,2.895281,7.456459,-7.642671,4.626831,-7.696691,-8.610002,5.552557,7.924736,-8.138339,7.992686,-3.301327,1.147240,-0.889109,-7.750566,8.201041,-1.967283,7.531150,-1.294448,8.583579,-9.488430,-8.678092,-5.386532,3.934088,2.852542,-2.668523,3.366543,-7.233249,2.070421,-9.848748,8.634841,0.543649,-7.211083,3.366457,-6.340203,-7.266676,-4.307613,0.960391,-7.398437,-4.095612,-9.280538,3.521218,2.093478,-9.912465,-8.598296,-5.864619,0.662869,8.714503,2.069369,-5.483152,8.037185,-3.011984,7.092059,9.425456,4.412475,3.607175,-2.364019,0.090298,2.777394,2.256301,2.160383,7.988941,2.931285,-0.222169,-4.163220,-6.606685,-4.337252,0.661373,0.351425,6.226764,8.505622,-4.855341,5.012196,0.792366,-3.742953,-1.240423,8.336473,-1.068256,-0.363632,8.009401,4.344437,2.846704,-0.693118,2.154592,1.503128,-7.422464,1.795627,-2.776012,5.698214,7.720288,-8.293855,3.486834,-3.921134,-7.195994,-7.472054,3.617210,-4.969876,8.284505,9.529382,-3.316120,-7.076402,1.799747,2.739567,-1.185126,-4.354648,-7.423917,-5.760438,-7.696330,5.321811,1.248271,-3.093018,7.753446,3.362789,5.050704,6.049027,9.958125,9.337994,-4.960978,1.665129,4.539566,-0.815549,-4.865048,8.937652,1.950777,-5.039900,-3.036233,8.672152,8.670930,3.103943,-2.023969,-2.934749,-0.439066,-7.976256,-7.976449,0.266079,2.046389,-8.783132,-0.557883,-4.945945,-7.779882,1.179734,6.196322,9.559296,9.088928,-6.727601,6.528587,-9.029131,-8.638751,-5.223944,-8.046193,-4.877605,-1.301650,8.215091,-1.399230,-6.284704,-0.929521,9.274088,0.231411,-9.909970,8.108855,-8.508074,4.547611,-2.180597,0.082777,3.400722,4.093991,-7.020935,-3.222668,-6.161655,1.194004,5.528791,-3.294800,-3.332713,1.175436,4.338018,1.281932,-5.456207,-6.287085,-4.384267,8.728689,3.274063,4.902906,-2.873780,1.815839,-6.502351,-9.185157,9.208614,-0.487973,-5.407569,-0.007653,8.416457,1.743584,3.675048,-3.639712,3.380563,4.818938,-3.542807,-1.413452,-8.834688,-2.931371,3.881040,-1.013143,7.034729,-7.998770,2.097359,8.454740,-1.607352,-8.450528,-7.512781,8.136220,-5.870329,-4.586497,4.190787,-8.659352,3.403460,-7.477494,0.592376,6.546879,1.452604,-2.581344,-1.341677,6.854668,-7.788885,-4.913298,5.778297,-8.821723,-1.827022,-2.125510,-6.536022,9.037127,3.962395,-4.464653,3.216747,-7.508409,2.772185,0.172018,-8.528173,-4.066448,-1.438279,-6.637843,-8.477516,0.372192,1.583131,-5.384846,-6.316485,9.737537,9.797085,-6.836940,0.422905,2.927323,8.554016,3.156659,-8.295069,-0.194538,-4.878989,-6.792506,-0.902995,-2.011633,3.582483,4.526638,-5.082559,-9.844893,-3.408280,-2.893344,0.308064,-3.839228,-7.814865,-2.111565,9.530762,9.063354,5.851141,-9.582428,-4.708458,-4.790282,4.478810,1.428000,-5.584363,1.897340,0.437599,6.246078,7.011345], dtype = "float32")#candidate|3737|(1536,)|const|float32
const_3738 = relay.const([-8.446387,6.653849,-9.904402,9.288170,-2.625185,9.292698,-4.932619,-5.121398,3.936905,9.558592,7.583988,-0.594215,8.624927,-6.206465,-5.679448,-0.040718,-8.798592,-0.575887,9.115630,7.030760,9.653907,-7.071149,8.363425,-8.676390,5.183532,1.147331,-8.694257,3.452401,8.938122,-0.539063,1.458248,7.964285,-6.171561,8.482038,2.191941,8.294980,0.172304,-8.045484,-1.976528,8.487877,-3.005445,-5.311598,1.148282,-9.080750,7.821286,-6.944578,-6.465569,-5.957208,5.883274,-7.671129,-2.810345,-3.796946,1.230464,-2.569612,9.670082,3.945786,-5.336788,-5.949751,-7.331279,7.402378,0.670481,-3.404254,7.389620,8.429699,-7.785375,7.010545,6.906599,9.338172,1.504210,0.378894,6.761272,-5.330583,-4.329118,7.037321,-4.239794,3.484894,-6.214174,2.745929,-4.642955,7.462647,-9.014316,-4.221956,-5.860477,-2.698945,5.727914,-4.646122,-4.400946,9.879449,5.592523,3.028230,1.491440,2.792679,3.315960,2.394043,5.051616,-0.966247,9.371633,-5.202459,-2.694694,3.548487,-6.309574,0.956813,7.065586,3.103550,5.236574,-7.630791,2.876214,2.604523,-3.989370,1.512199,5.125129,5.322897,-4.587266,-6.920921,-6.576455,-0.926492,9.699119,5.048995,-4.532811,5.011683,-5.303869,-7.105363,7.361254,-9.768788,-4.995196,-9.120389,8.433000,9.860854,3.240475,9.942338,9.714619,-1.859323,7.400148,6.361769,-2.326240,3.385190,-0.250425,7.438411,2.800578,5.874811,6.893239,8.990891,0.005339,-5.343786,-0.085232,-8.217509,0.299292,-6.941683,5.422777,9.941758,-9.351399,-7.973766,-0.853379,8.356431,3.605006,-0.856696,-3.393883,5.402237,-9.444129,-5.619180,2.491771,-2.173339,7.453685,7.676884,4.249235,-7.464069,-7.745941,-3.037909,-2.778774,-6.899778,6.254176,-9.622177,4.372064,2.197972,0.610376,-4.935093,2.602674,-3.957494,-8.664454,8.629406,-3.080470,9.174471,-1.566549,4.434036,4.229439,-5.480607,-7.957978,-7.453317,-8.137051,7.785937,2.085455,4.220667,2.219919,9.848332,1.293974,8.303575,1.015094,-4.273765,-3.948281,-9.703518,-1.847859,-0.028768,-3.944206,-4.650205,5.004791,-0.837042,0.070372,4.232742,5.891670,-8.017011,8.412564,-3.570818,0.249372,-9.561449,8.782259,3.720756,5.891741,-5.307488,2.579337,-6.180010,6.749669,7.906666,-9.188890,1.606778,-6.863135,3.191999,4.524523,-5.625784,-2.179835,-2.830212,8.637731,5.027061,-5.235336,-2.950773,-1.297809,-8.241142,-5.341108,5.051954,-9.940871,-3.383619,-5.579045,-5.261550,-5.927908,-3.456059,0.283699,-8.207558,5.751219,8.077222,7.743823,9.879201,-0.682904,4.152396,9.946382,-6.484152,5.768417,-2.028604,-4.661127,0.733821,7.444223,7.518847,3.401939,-5.039237,-0.150663,-9.589355,7.999716,3.530424,6.092065,-9.840777,0.983969,-8.143957,-7.508087,4.292656,6.016863,1.044526,-5.111200,3.410981,-8.813168,-9.053974,1.538020,-4.465327,-2.091296,-1.627120,7.197003,0.472294,9.779582,7.300887,-4.781561,-1.542311,-3.744871,8.140384,4.104440,-5.594960,-8.091317,-0.312505,3.132631,-9.865520,-9.099563,1.107646,-1.436652,5.734771,-9.441052,2.139801,0.016633,-3.243932,2.346563,-2.512427,-7.866214,-9.832020,-1.817646,-0.448885,4.671158,9.577090,2.794119,7.659313,2.337105,-8.167185,-2.321642,9.078204,5.520079,2.285472,1.214158,8.800655,-3.897033,-5.536146,-6.432403,-1.188320,8.656621,-2.454729,-9.524880,-8.679019,-5.094970,9.330686,-8.361454,-1.698825,-9.413352,-8.858141,3.162011,2.276770,0.486056,-0.494093,-7.506475,-6.662357,2.742541,-3.878969,-5.029960,8.966181,4.340853,5.236459,1.638997,-0.882850,0.463098,3.261070,-7.119218,-0.328744,-5.367872,-5.004502,0.738424,4.060281,7.872541,-7.682464,-1.084156,-8.384396,-2.792283,-4.681993,9.935689,6.833675,0.565717,8.008226,8.807324,-6.163753,4.256045,-4.733194,0.307986,6.316854,-0.002952,-4.418620,9.409615,-1.477039,5.781663,-6.435465,1.883424,8.471903,-9.411075,7.233330,2.345618,-5.493596,-3.139520,4.569065,-3.887531,-4.817524,1.379639,8.015742,4.159545,-2.634247,-3.328896,4.080878,8.173882,0.644311,9.161630,2.060251,-7.655031,2.014173,3.152321,-5.561827,6.920895,-4.949098,8.661972,-2.440482,4.213111,5.039480,4.788796,-2.986576,-9.284119,-8.454026,-4.536571,-9.150977,0.368536,6.582233,-9.629982,-8.068635,-2.727971,-1.941230,0.562113,-8.081194,-4.192018,-5.588734,-5.251973,-8.157745,-2.515767,-3.733519,-7.964732,4.375693,1.220039,-7.693977,-0.353879,9.765190,3.417326,9.337841,-1.026263,-1.383775,0.682964,-3.630284,7.964243,-3.495513,-6.070374,-3.847886,4.997200,-2.844386,-3.948832,1.402175,-6.765371,0.864002,-5.205486,-9.947331,-2.586570,9.170994,0.269040,0.010338,-5.648206,2.051818,-8.737129,-2.678308,1.795927,-2.070119,4.223800,3.547724,4.070349,-4.371082,1.090893,-5.510295,3.300411,2.864836,-4.299314,2.270305,4.825200,9.455870,-9.102178,2.381045,-6.460016,8.355377,9.393978,6.209181,4.381131,2.550720,-8.038879,-2.396646,8.952868,0.691358,-6.517126,7.150113,9.611594,6.425037,-6.220010,3.525538,4.217657,-1.817895,7.306628,8.554859,6.207241,4.496717,-7.476488,6.761164,-6.509399,0.314748,1.064669,-9.751360,3.920136,-0.025276,-2.166224,1.703150,-4.236765,4.243109,4.056391,-9.581733,8.634604,5.153133,3.024917,0.957571,5.848404,-1.541536,1.641533,7.567508,3.702649,-9.620748,3.752577,4.089891,-8.355995,-1.749981,5.098807,-1.892788,-0.821987,-6.460593,0.074071,1.884659,0.150185,0.421015,-2.360837,8.530937,4.143727,-0.067163,3.436476,-2.233105,-1.147653,-0.326120,-2.320279,-5.115954,-9.713606,-7.946888,-5.438930,-4.517575,-9.523118,9.313200,-0.685216,-4.653624,-7.817099,-4.422782,-8.227400,6.191858,1.769975,-0.408266,9.584454,5.138998,0.498925,1.453575,1.614488,6.781293,6.129827,1.558566,-2.473450,6.932446,-5.026551,-4.099838,9.715717,5.529182,4.624174,-9.430241], dtype = "float32")#candidate|3738|(576,)|const|float32
var_3739 = relay.var("var_3739", dtype = "float64", shape = (490, 1))#candidate|3739|(490, 1)|var|float64
const_3740 = relay.const([6,4,-5,4,8,-9,6,-5,10,-1,2,-2,1,1,2,5,10,-2,2,4,4,5,3,-6,5,-6,1,3,4,3,-9,-3,-10,5,1,-3,1,6,9,1,-1,10,-4,4,-10,3,-7,-8,3,2,3,10,5,-1,8,-8,-10,-1,-5,4,1,-5,-6,-7,8,-5,-5,6,3,-4,-9,1,3,4,6,3,5,-8,-1,-2,-4,-8,3,9,-1,-8,7,10,1,8,-9,-7,-9,5,-1,6,3,-4,-10,-2,-8,-1,-10,-5,-4,8,-5,10,-1,-3,2,-10,5,-1,9,-6,-6,3,10,6,-2,9,-1,-3,-4,7,-8,-10,8,-8,9,-5,-4,10,8,-8,-10,10,-6,4,-9,-5,-5,-10,10,-4,-3,-3,-9,1,-9,-8,5,-10,10,10,-4,-6,2,6,3,9,8,5,5,3,-4,-10,-8,10,6,-7,5,-1,-9,-8,-6,-10,-1,2,-10,7,-7,-3,-9,2,2,-8,-3,7,6,6,-4,-8,1,10,-6,-7,8,-9,2,-4,3,5,-9,-9,10,8,-10,-1,-6,-4,10,9,-1,4,-2,-2,-8,-2,-1,-5,4,5,10,7,-6,2,4,1,10,3,-4,6,3,-3,8,-5,1,-8,-5,1,-8,5,-2,1,6,3,-10,3,8,-8,-4,-9,-1,10,-4,7,-1,5,-1,-5,-2,-6,-9,6,5,-4,-4,-7,-1,-1,7,-6,10,-4,-10,7,-9,-4,4,-6,3,9,2,-4,-3,8,3,-8,7,-6,-3,9,-8,10,5,10,-3,-5,6,-10,4,-1,-3,-2,3,9,2,7,3,1,-3,-5,-1,3,-2,8,-4,5,-10,-10,-6,10,-7,8,-4,7,10,-6,-6,8,-6,4,-7,-7,-5,-1,-6,-8,8,2,-5,-1,-4,-3,8,8,10,-3,-2,-2,-9,-7,4,7,-1,3,-1,10,1,-6,7,-2,8,1,-6,-7,8,10,-9,-3,10,-8,-10,6,2,-2,-8,3,10,7,9,-2,10,-8,-1,-1,6,-1,6,10,9,-6,-6,6,4,-3,7,-1,-9,6,-9,2,6,4,3,9,-7,1,-3,1,-10,2,2,-2,2,5,-5,-9,-2,-3,10,-7,7,10,6,-7,8,4,1,-2,-4,-6,-4,1,1,-1,6,-8,9,-2,9,-1,-7,6,-1,-4,-5,-7,9,-7,2,1,-7,2,7,10,1,3,-6,-9,7,-3,6,-9,8,7,-3,9,-9,7,2,2,-9,-5,-3,-2,-10,1,3,-10,8,-10,-6,-3,7,-1,-7,4,9,1,-4,4,-7,9,-7,-2,8,7,10,-1,2,-10,6,-5,3,-10,-8,-2,-7,7,-2,10,3,-6,-9,-4,10,2,-7,-2,4,9,6,8,-2,9,6,-6,9,3,-8,1,-8,5,-1,-6,-10,-6,6,-10,-1,-4,10,-7,1,-9,7,-8,-6,-10,9,9,-3,-4,8,-7,4,-5,1,-5,2,-1,7,-3,2,7,3,9,-2,-3,8,9,-1,-10,8,5,1,-10,7,9,-9,9,4,-8,-4,9,2,5,4,-6,-1,4,-8,8,8,-5,6,2,3,-8,-2,-8,-7,-10,10,-5,8,3,-6,3,10,4,1,8,6,10,5,4,3,-2,1,-4,-1,-9,9,2,8,-7,-1,-3,-5,7,-3,1,-9,8,2,-1,8,9,-1,-9,6,10,-3,6,-7,5,6,-5,8,-6,-5,3,-6,3,1,8,7,5,-10,5,6,7,-7,8,6,-6,-1,-4,-1,-6,-8,10,-4,-7,-7,-4,-4,6,3,-7,-10,-8,3,-9,1,-5,-2,8,1,10,8,3,-5,3,7,-7,-2,7,8,-8,-1,-2,9,9,-3,-1,3,1,7,5,4,10,-8,-1,-2,9,-5,8,-9,5,-8,-1,10,-8,-5,-10,7,-5,6,-3,-7,4,3,6,-9,-4,-9,7,-6,-8,-9,2,-8,-3,4,-3,-10,5,-8,-5,-3,-5,3,-4,8,2,10,-5,2,3,6,9,2,1,-6,-7,5,-1,-6,9,-7,-1,-6,5,4,2,-3,-8,-6,7,7,-10,7,-3,8,-5,3,-2,-2,-7,-5,8,1,-7,5,8,9,4,-9,9,1,4,1,4,-3,10,9,7,4,-6,7,2,-2,-2,-5,10,-4,-1,10,-8,6,2,8,5,5,-2,5,-10,2,8,2,5,-4,-1,-2,9,7,-3,-3,8,2,-4,-5,6,6,-5,3,4,-6,2,-4,-6,-10,-5,-7,-5,-4,-6,1,4,-5,8,9,-5,-7,-3,-6,1,7,-1,10,1,-2,10,-6,-3,-5,9,2,-9,1,-9,2,-2,-7,-1,-8,-8,-9,8,-3,8,-3,-2,-3,6,-6,10,5,6,5,-9,-2,-7,-5,8,-7,8,7,7,-4,3,-9,7,-5,8,-4,6,3,-7,-10,8,3,-1,7,-10,2,10,-8,-5,-2,6,-9,-2,-10,1,-5,-9,-5,9,-8,-3,-4,-2,-10,7,2,-9,-10,1,9,-9,-1,3,1,-5,10,-9,-9,-9,10,2,-3,-10,4,-10,5,7,10,-9,-1,9,-2,-8,-1,-3,-4,2,-8,8,-6,-4,10,7,1,-10,-2,-6,7,-9,-2,9,7,-3,4,6,-4,2,-4,-3,-7,-9,-1,-5,-10,7,7,10,-5,-1,-6,8,-9,-3,9,10,-10,7,4,2,-6,-10,4,9,4,-10,-8,10,9,2,1,8,-1,-5,-6,-2,5,-7,1,10,-7,6,1,5,-9,-1,-1,2,-1,6,3,2,-10,-8,-9,6,3,3,10,-3,7,1,-3,9,-1,3,-4,3,6,-7,-2,-10,7,-8,-3,7,-6,-7,1,-5,2,-8,5,-2,-3,-7,-2,-9,-10,7,9,-3,-2,6,-8,-8,8,-1,-5,1,2,2,-5,-6,-7,10,6,-3,-6,2,7,-8,-3,-6,-2,4,-7,9,-9,-10,-7,-4,-6,9,-5,9,8,7,-6,10,1,1,2,1,6,-8,4,4,-9,3,2,6,-9,1,-7,3,-7,-8,-6,-8,2,5,-10,-7,10,2,2,-3,-2,-6,7,9,-6,1,-7,4,7,-5,-8,5,-2,1,-7,-5,-1,10,-10,2,-5,8,5,1,-3,8,-1,-9,-2,-7,5,9,-4,-5,-7,2,3,-6,-6,-10,-3,8,1,-7,10,-1,-7,-2,-1,-7,8,-2,1,-9,5,4,10,-2,-1,-6,-2,-5,-9,-9,-8,1,-6,-8,3,4,9,-5,-1,-9,-3,-3,-4,-5,-9,-3,3,-4,-9,7,-10,-9,8,7,1,2,-3,-1,7,-9,-10,-5,8,-3,-10,8,-1,8,-1,7,-2,-5,7,-1,-2,1,3,-7,5,-8,10,6,3,1,2,-7,8,-1,-10,9,3,7,8,-6,4,2,10,-5,4,8,-3,-2,8,8,-6,-1,-9,-4,2,1,-6,2,-1,-10,3,2,-4,1,-8,10,-3,10,9,8,5,-9,-2,-6,8,-9,5,-10,-6,1,-9,-5,-1,-4,-10,-4,-4,8,4,1,2,-6,1,-6,-7,2,-5,8,-5,-8,7,-2,5,-8,-3,-2,7,2,3,9,-4,-8,10,-6,-10,-10,4,-9,9,7,-4,-7,-6,3,8,1,-2,10,5,-7,-10,-4,-8,-5,-10,-10,-3,9,9,-1,1,6,1,5,4,4,10,8,3,-6,-8,-9,-5,-10,-10,1,3,7,5,-3,-6,3,-7,6,6,2,8,5,-10,10,-8,-3,8,8,-2,2,-9,5,-6,3,3,-6,-7,-6,7,-8,7,-7,-9,-8,-7,-2,5,-2,8,-5,-3,4,3,6,8,-7,3,-9,1,7,10,-4,-7,-8,-2,-8,5,4,5,-9,3,-7,-10,-3,4,8,-7,8,7,-1,-10,-5,-2,-4,8,-10,-9,-1,1,-1,4,-8,-10,-5,4,-9,6,1,10,4,1,10,9,1,5,-7,-1,-2,-1,1,4,10,-1,-7,-6,-10,-5,9,4,-5,3,-10,7,9,-8,3,-10,1,4,4,-8,-9,7,-8,9,1,-7,8,2,4,-6,3,8,7,1,3,6,-4,-9,3,10,-10,5,-3,-3,-9,1,-7,8,-4,7,-10,-1,-5,1,-10,2,-9,8,-3,8,4,-6,2,-6,4,-4,-6,1,5,7,-2,-5,-5,-3,-6,2,2,-10,5,3,-9,4,-1,-7,6,4,-3,8,-4,8,-6,1,-2,4,-10,5,-3,-5,3,-3,-7,6,7,-10,7,-4,-10,-2,-7,8,-3,-7,3,3,7,2,2,-6,1,2,3,4,-3,6,3,7,10,-4,-9,6,2,8,7,5,-9,10,4,-7,-8,-7,8,9,-2,-10,10,5,-5,8,-8,-2,9,-10,3,10,-10,-6,-2,8,-10,5,6,3,-4,3,-1,8,6,5,-5,5,-3,-6,6,1,2,-7,5,-10,-1,10,10,4,-5,-9,3,6,7,-2,-5,8,-6,-6,4,-9,-10,9,-6,10,-3,2,5,1,-1,4,6,3,-8,3,8,-9,1,-10,2,-8,3,10,-7,9,-5,-4,-6,1,10,9,5,6,-5,-1,-8,-9,-9,8,-1,-6,1,-5,8,2,9,-4,9,-10,-6,-3,-2,-5,3,-8,2,9,3,2,-8,-9,-6,-3,1,-1,-6,3,-7,8,-6,2,-10,1,3,-7,8,1,-7,2,10,8,8,-4,2,4,-8,-5,-7,2,-10,4,2,-5,-2,10,-10,5,-10,10,-1,-9,3,7,-10,2,7,1,3,-2,-3,-4,9,-1,-10,-10,-7,10,-4,-10,6,-6,9,-4,-5,7,7,3,3,-4,4,4,4,3,-2,2,-6,1,-10,-10,-1,5,8,-5,-1,-4,6,8,3,-8,4,-3,2,10,10,5,6,-1,-7,7,-7,2,-8,-3,-2,8,-5,-8,4,7,9,5,-3,2,-5,7,-8,7,-9,-1,-3,9,-1,-5,5,8,5,1,-2,-7,10,10,4,7,8,-6,-8,-9,4,-3,5,4,7,-7,6,7,-1,-5,-2,10,-2,-3,3,-9,-7,5,6,-3,3,-1,5,5,4,-10,-4,-8,-7,9,2,-5,2,2,-9,10,-4,-9,8,-4,-7,1,-3,10,-10,9,8,-1,-6,-10,-8,5,1,9,-1,6,-7,9,-3,-1,-7,5,6,10,10,7,10,8,-7,5,-1,-5,-5,8,3,-3,10,10,7,-10,-9,3,-8,-5,9,4,-8,-10,-5,-4,-8,1,-8,-7,-10,-10,-3,-2,-7,7,-4,7,2,-8,-6,5,3,3,8,6,7,9,-10,-3,8,2,3,-6,7,-3,-8,6,-6,-3,-10,-2,-5,-9,2,4,3,1,-7,10,3,-4,2,4,-10,-2,-6,-9,7,-7,-1,-10,9,8,-10,-8,4,6,6,5,5,-6,2,-1,7,-8,9,1,-1,3,-1,-4,5,-10,10,-6,-3,-5,2,-3,-5,5,1,3,-9,3,9,5,-7,-6,-10,-1,9,-7,-5,-7,-3,8,2,-6,-10,-3,6,5,-4,-2,5,9,-3,-2,7,1,-6,4,2,1,10,-3,1,-2,10,1,-9,-7,7,3,1,-5,-6,-4,-2,-2,-8,-9,-4,-6,-4,10,-9,10,-6,-1,-8,3,9,2,-4,-2,-1,1,-1,-2,6,-2,8,-1,4,3,-10,6,6,1,-4,10,5,3,-10,2,-4,1,6,-6,3,10,6,3,6,1,6,-3,3,-8,10,9,4,-8,1,9,-5,-7,7,-2,3,-2,5,9,-3,2,-7,-9,-2,-1,3,7,1,9,-4,-2,4,-6,-1,-10,-4,-8,-5,1,-6,-2,-2,-4,-5,-2,4,7,-8,-1,-10,3,-3,-4,-10,8,7,2,1,2,-1,-8,-6,6,-2,3,6,-7,-9,-9,-7,-4,9,4,3,9,-8,-10,-3,-10,-3,-8,-1,10,-5,-8,8,-7,-9,8,-4,-8,3,1,-4,3,-6,-8,4,-8,7,-1,9,3,-8,-1,-7,7,7,-5,8,10,-7,-4,6,-1,-9,9,2,-7,-2,-5,7,6,9,-5,-1,5,-3,10,1,2,8,10,-5,2,-5,-4,-8,-6,-4,-8,-6,-5,-1,8,-8,2,6,-8,8,6,-7,-8,3,-4,7,-3,4,-3,3,-7,-4,1,-10,8,-8,-5,-7,10,9,6,-7,-8,-5,7,2,2,-2,7,9,10,-2,-2,8,-6,7,2,10,-6,10,-4,-7,2,9,-9,-5,-8,4], dtype = "uint8")#candidate|3740|(2366,)|const|uint8
call_3736 = relay.TupleGetItem(func_3300_call(relay.reshape(const_3737.astype('float32'), [1536,]), relay.reshape(const_3738.astype('float32'), [576,]), relay.reshape(var_3739.astype('float64'), [490,]), relay.reshape(const_3740.astype('uint8'), [2366,]), ), 3)
call_3741 = relay.TupleGetItem(func_3305_call(relay.reshape(const_3737.astype('float32'), [1536,]), relay.reshape(const_3738.astype('float32'), [576,]), relay.reshape(var_3739.astype('float64'), [490,]), relay.reshape(const_3740.astype('uint8'), [2366,]), ), 3)
output = relay.Tuple([call_3734,call_3736,const_3737,const_3738,var_3739,const_3740,])
output2 = relay.Tuple([call_3735,call_3741,const_3737,const_3738,var_3739,const_3740,])
func_3743 = relay.Function([var_3739,], output)
mod['func_3743'] = func_3743
mod = relay.transform.InferType()(mod)
mutated_mod['func_3743'] = func_3743
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3744 = relay.var("var_3744", dtype = "float64", shape = (490, 1))#candidate|3744|(490, 1)|var|float64
func_3743_call = mutated_mod.get_global_var('func_3743')
call_3745 = func_3743_call(var_3744)
output = call_3745
func_3746 = relay.Function([var_3744], output)
mutated_mod['func_3746'] = func_3746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3653_call = mod.get_global_var('func_3653')
func_3655_call = mutated_mod.get_global_var('func_3655')
call_3753 = func_3653_call()
call_3754 = func_3653_call()
output = relay.Tuple([call_3753,])
output2 = relay.Tuple([call_3754,])
func_3774 = relay.Function([], output)
mod['func_3774'] = func_3774
mod = relay.transform.InferType()(mod)
output = func_3774()
func_3775 = relay.Function([], output)
mutated_mod['func_3775'] = func_3775
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3781 = relay.var("var_3781", dtype = "float32", shape = (1, 6, 2))#candidate|3781|(1, 6, 2)|var|float32
uop_3782 = relay.log10(var_3781.astype('float32')) # shape=(1, 6, 2)
output = relay.Tuple([uop_3782,])
output2 = relay.Tuple([uop_3782,])
func_3785 = relay.Function([var_3781,], output)
mod['func_3785'] = func_3785
mod = relay.transform.InferType()(mod)
mutated_mod['func_3785'] = func_3785
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3786 = relay.var("var_3786", dtype = "float32", shape = (1, 6, 2))#candidate|3786|(1, 6, 2)|var|float32
func_3785_call = mutated_mod.get_global_var('func_3785')
call_3787 = func_3785_call(var_3786)
output = call_3787
func_3788 = relay.Function([var_3786], output)
mutated_mod['func_3788'] = func_3788
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3797 = relay.var("var_3797", dtype = "float32", shape = (6, 11, 10))#candidate|3797|(6, 11, 10)|var|float32
uop_3798 = relay.erf(var_3797.astype('float32')) # shape=(6, 11, 10)
uop_3800 = relay.log2(var_3797.astype('float32')) # shape=(6, 11, 10)
output = relay.Tuple([uop_3798,uop_3800,])
output2 = relay.Tuple([uop_3798,uop_3800,])
func_3802 = relay.Function([var_3797,], output)
mod['func_3802'] = func_3802
mod = relay.transform.InferType()(mod)
mutated_mod['func_3802'] = func_3802
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3803 = relay.var("var_3803", dtype = "float32", shape = (6, 11, 10))#candidate|3803|(6, 11, 10)|var|float32
func_3802_call = mutated_mod.get_global_var('func_3802')
call_3804 = func_3802_call(var_3803)
output = call_3804
func_3805 = relay.Function([var_3803], output)
mutated_mod['func_3805'] = func_3805
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_3865 = relay.TupleGetItem(func_1271_call(), 2)
call_3866 = relay.TupleGetItem(func_1273_call(), 2)
func_2252_call = mod.get_global_var('func_2252')
func_2254_call = mutated_mod.get_global_var('func_2254')
call_3879 = relay.TupleGetItem(func_2252_call(), 2)
call_3880 = relay.TupleGetItem(func_2254_call(), 2)
output = relay.Tuple([call_3865,call_3879,])
output2 = relay.Tuple([call_3866,call_3880,])
func_3882 = relay.Function([], output)
mod['func_3882'] = func_3882
mod = relay.transform.InferType()(mod)
mutated_mod['func_3882'] = func_3882
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3882_call = mutated_mod.get_global_var('func_3882')
call_3883 = func_3882_call()
output = call_3883
func_3884 = relay.Function([], output)
mutated_mod['func_3884'] = func_3884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3899 = relay.var("var_3899", dtype = "float32", shape = (13, 6, 12))#candidate|3899|(13, 6, 12)|var|float32
uop_3900 = relay.asin(var_3899.astype('float32')) # shape=(13, 6, 12)
output = uop_3900
output2 = uop_3900
func_3906 = relay.Function([var_3899,], output)
mod['func_3906'] = func_3906
mod = relay.transform.InferType()(mod)
var_3907 = relay.var("var_3907", dtype = "float32", shape = (13, 6, 12))#candidate|3907|(13, 6, 12)|var|float32
output = func_3906(var_3907)
func_3908 = relay.Function([var_3907], output)
mutated_mod['func_3908'] = func_3908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3495_call = mod.get_global_var('func_3495')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_3915 = func_3495_call()
call_3916 = func_3495_call()
func_2513_call = mod.get_global_var('func_2513')
func_2515_call = mutated_mod.get_global_var('func_2515')
call_3920 = func_2513_call()
call_3921 = func_2513_call()
output = relay.Tuple([call_3915,call_3920,])
output2 = relay.Tuple([call_3916,call_3921,])
func_3922 = relay.Function([], output)
mod['func_3922'] = func_3922
mod = relay.transform.InferType()(mod)
output = func_3922()
func_3923 = relay.Function([], output)
mutated_mod['func_3923'] = func_3923
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3937 = relay.var("var_3937", dtype = "float32", shape = (12, 3, 1))#candidate|3937|(12, 3, 1)|var|float32
var_3938 = relay.var("var_3938", dtype = "float32", shape = (12, 3, 16))#candidate|3938|(12, 3, 16)|var|float32
bop_3939 = relay.power(var_3937.astype('float32'), var_3938.astype('float32')) # shape=(12, 3, 16)
output = bop_3939
output2 = bop_3939
func_3944 = relay.Function([var_3937,var_3938,], output)
mod['func_3944'] = func_3944
mod = relay.transform.InferType()(mod)
mutated_mod['func_3944'] = func_3944
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3944_call = mutated_mod.get_global_var('func_3944')
var_3946 = relay.var("var_3946", dtype = "float32", shape = (12, 3, 1))#candidate|3946|(12, 3, 1)|var|float32
var_3947 = relay.var("var_3947", dtype = "float32", shape = (12, 3, 16))#candidate|3947|(12, 3, 16)|var|float32
call_3945 = func_3944_call(var_3946,var_3947,)
output = call_3945
func_3948 = relay.Function([var_3946,var_3947,], output)
mutated_mod['func_3948'] = func_3948
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3882_call = mod.get_global_var('func_3882')
func_3884_call = mutated_mod.get_global_var('func_3884')
call_3990 = relay.TupleGetItem(func_3882_call(), 1)
call_3991 = relay.TupleGetItem(func_3884_call(), 1)
func_1418_call = mod.get_global_var('func_1418')
func_1420_call = mutated_mod.get_global_var('func_1420')
call_3994 = relay.TupleGetItem(func_1418_call(), 1)
call_3995 = relay.TupleGetItem(func_1420_call(), 1)
output = relay.Tuple([call_3990,call_3994,])
output2 = relay.Tuple([call_3991,call_3995,])
func_3996 = relay.Function([], output)
mod['func_3996'] = func_3996
mod = relay.transform.InferType()(mod)
mutated_mod['func_3996'] = func_3996
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3996_call = mutated_mod.get_global_var('func_3996')
call_3997 = func_3996_call()
output = call_3997
func_3998 = relay.Function([], output)
mutated_mod['func_3998'] = func_3998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3774_call = mod.get_global_var('func_3774')
func_3775_call = mutated_mod.get_global_var('func_3775')
call_4013 = relay.TupleGetItem(func_3774_call(), 0)
call_4014 = relay.TupleGetItem(func_3775_call(), 0)
func_2072_call = mod.get_global_var('func_2072')
func_2073_call = mutated_mod.get_global_var('func_2073')
call_4031 = relay.TupleGetItem(func_2072_call(), 0)
call_4032 = relay.TupleGetItem(func_2073_call(), 0)
func_3374_call = mod.get_global_var('func_3374')
func_3377_call = mutated_mod.get_global_var('func_3377')
var_4038 = relay.var("var_4038", dtype = "float32", shape = (576,))#candidate|4038|(576,)|var|float32
call_4037 = relay.TupleGetItem(func_3374_call(relay.reshape(var_4038.astype('float32'), [2, 288])), 0)
call_4039 = relay.TupleGetItem(func_3377_call(relay.reshape(var_4038.astype('float32'), [2, 288])), 0)
output = relay.Tuple([call_4013,call_4031,call_4037,var_4038,])
output2 = relay.Tuple([call_4014,call_4032,call_4039,var_4038,])
func_4067 = relay.Function([var_4038,], output)
mod['func_4067'] = func_4067
mod = relay.transform.InferType()(mod)
var_4068 = relay.var("var_4068", dtype = "float32", shape = (576,))#candidate|4068|(576,)|var|float32
output = func_4067(var_4068)
func_4069 = relay.Function([var_4068], output)
mutated_mod['func_4069'] = func_4069
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3495_call = mod.get_global_var('func_3495')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_4078 = func_3495_call()
call_4079 = func_3495_call()
output = call_4078
output2 = call_4079
func_4103 = relay.Function([], output)
mod['func_4103'] = func_4103
mod = relay.transform.InferType()(mod)
mutated_mod['func_4103'] = func_4103
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4103_call = mutated_mod.get_global_var('func_4103')
call_4104 = func_4103_call()
output = call_4104
func_4105 = relay.Function([], output)
mutated_mod['func_4105'] = func_4105
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4122 = relay.const([[[-6,9,-4,9,-2,-7],[1,6,9,10,-1,-3],[7,-2,1,-7,6,9],[6,9,-9,3,-4,-7],[4,-7,10,-10,5,-6],[-1,7,2,7,-2,-6],[-5,-2,5,-1,1,-6],[8,-7,-1,1,-9,-9],[-2,9,-3,6,-1,6]],[[-2,-8,7,-1,3,7],[-3,6,-7,-3,9,5],[-6,-9,-1,-4,4,-5],[8,-5,6,-7,-4,-2],[-5,-2,-6,8,7,-10],[4,3,-8,10,-4,8],[-9,-10,-7,-4,7,9],[-2,-7,6,-1,-3,-8],[-3,-8,-3,9,-3,-5]],[[-1,-3,6,6,-10,-8],[2,5,-4,-6,-3,-3],[3,8,-1,6,-3,-4],[2,-6,-5,-9,6,4],[-8,6,-7,8,3,5],[1,9,2,-1,-5,7],[3,-7,-3,-8,1,4],[7,9,-8,-7,6,10],[-1,-2,-10,-4,-6,-2]],[[4,-10,4,-5,6,2],[-8,2,4,2,5,-10],[3,-7,-7,-10,9,-7],[3,-5,-4,2,5,-6],[6,-6,1,7,2,-5],[-3,1,6,-6,-10,8],[7,5,-6,2,-10,4],[-4,5,4,-6,-6,10],[5,-1,-4,-10,-10,4]],[[-8,9,-7,-7,-5,9],[-6,-8,-4,-4,-4,-3],[-5,1,9,-5,-6,-3],[9,-3,6,-6,7,-5],[-2,-9,8,-7,6,-2],[5,-2,-2,-1,-6,-7],[-8,-7,9,-5,4,9],[9,-7,-4,-10,6,8],[-8,1,5,8,-5,10]],[[8,-6,1,-4,-1,-5],[-8,2,8,2,-2,10],[4,-3,-3,-2,-8,3],[4,-10,-6,8,10,10],[3,-4,6,4,-1,9],[-10,5,9,-7,-5,6],[2,7,-7,1,-10,6],[-8,8,-7,-3,9,-3],[6,-1,-7,-2,4,-2]]], dtype = "uint8")#candidate|4122|(6, 9, 6)|const|uint8
var_4123 = relay.var("var_4123", dtype = "uint8", shape = (6, 9, 6))#candidate|4123|(6, 9, 6)|var|uint8
bop_4124 = relay.less_equal(const_4122.astype('bool'), relay.reshape(var_4123.astype('bool'), relay.shape_of(const_4122))) # shape=(6, 9, 6)
func_2962_call = mod.get_global_var('func_2962')
func_2965_call = mutated_mod.get_global_var('func_2965')
var_4131 = relay.var("var_4131", dtype = "float64", shape = (1280,))#candidate|4131|(1280,)|var|float64
const_4132 = relay.const([-7.866501,-1.200748,0.092060,-0.164155,2.382632,6.888251,-3.109112,5.918621,-0.399571,4.319185,-8.605397,9.280708,-0.171478,-2.551375,0.588906,7.952747,5.573737,-9.738090,-4.366053,-5.730961,-9.327121,-7.529937,2.447046,-2.158423,5.633363,-4.669867,-6.429681,0.716244,-5.722157,9.545429,-7.315139,5.048437,-6.147602,-8.544825,3.372696,7.246146,-6.581694,-4.290327,5.596475,-1.467896,-1.041893,-0.370303,-6.400929,8.121197,4.082725,4.775407,4.255980,5.125833,-9.748104,7.586221,-7.881477,9.889047,-2.325290,6.234354,-1.229889,5.137514,-6.753389,8.183734,1.020934,3.458144,9.471442,-8.821112,3.572369,3.405153,9.964823,8.454835,2.314705,8.261364,-6.389194,8.366828,-3.012188,7.898643,-0.631968,4.115314,-8.824292,-1.368813,5.581513,-0.714352,2.868064,-4.349409,-6.613254,-9.939966,-9.634787,-9.863554,-7.618447,8.839848,-6.487038,2.648927,-3.691275,-5.885546,8.882196,-5.935847,2.749883,-8.070756,-5.037655,5.961113,-1.931732,-3.364506,5.699758,-6.213615,-1.640749,-8.488721,-6.851457,9.175608,7.638959,8.348148,7.856252,9.678403,1.157236,5.963449,8.878296,-8.673720,-0.296202,-9.948791,4.485776,-3.161258,6.655276,-0.657484,-2.320814,-7.611640,0.503055,1.980096,4.220451,7.067426,-4.411205,2.687763,-0.292450,5.689617,-4.393863,-8.350999,-0.510789,-7.845274,-5.870600,-2.735151,-3.508053,-9.539227,-5.816083,-5.302212,-8.298496,-2.028998,-9.785936,-0.123292,-8.597663,-4.710151,-0.791053,-7.931346,4.052421,-1.693033,-8.934631,-6.501828,9.583175,-0.772150,-8.512206,9.428870,2.527860,9.264855,2.160363,-3.327534,-8.674354,4.607895,6.310748,8.691535,-9.301581,-4.273646,-8.251563,0.556226,5.048760,-8.726730,7.328565,9.631086,1.998287,-4.945331,-3.077709,-3.731171,7.315666,3.462692,-6.515668,5.219215,-5.417768,9.202079,7.940661,-3.053955,-6.159377,-1.223786,2.492419,-5.456486,3.686041,4.653906,9.659654,-6.118010,5.538526,-3.490546,-7.036676,-3.222588,6.604506,-7.968886,0.965480,-6.610505,1.801807,6.897843,-9.243904,3.952007,-9.831168,6.719192,9.251412,4.878964,-6.478435,-4.223884,8.536266,0.714859,-6.163079,4.912238,5.737995,9.089815,9.644493,4.170962,3.361455,7.639779,2.914824,7.939070,-7.502700,-8.729037,-0.594560,0.251055,7.556651,9.231683,-4.517013,1.227832,-5.756505,-2.804079,9.367723,8.664408,1.337672,4.316992,5.715431,6.501289,1.774709,-1.577544,-2.113212,6.043222,5.052299,0.403338,-4.245244,0.723138,2.759621,-5.489854,9.371256,1.696322,-8.948848,2.313433,-0.075146,4.530285,-2.799220,0.671668,8.634020,2.339201,7.660919,1.766663,9.287840,-7.670500,-0.402901,-1.438210,-1.398676,-8.974780,-0.453094,3.886743,-2.134567,-6.032555,-6.784817,9.155629,-2.885473,-4.012132,0.068354,1.703473,-4.745507,-4.771361,-8.797809,-6.334941,-8.189930,3.896857,3.114849,6.811061,4.424420,-8.416329,-3.092850,-3.512149,-9.966513,-5.686663,-0.213288,2.441096,-4.778022,8.816423,-6.928586,3.619139,7.783286,0.185198,2.215852,-1.233916,-3.801922,5.012399,0.790195,0.814890,-0.544452,8.069218,-7.944722,-0.588575,-1.267498,1.619954,6.655753,-1.211143,-0.720814,9.316326,-1.460715,-1.254107,3.093554,6.768128,9.315613,-1.831777,5.663229,-0.665342,-6.568319,-0.206777,2.542690,4.810337,-5.044403,6.099643,5.568880,9.196870,-8.261957,-4.427050,7.923521,-8.529070,2.940133,-1.379473,1.188873,-0.634263,1.634357,-4.016105,-9.075793,-3.159155,2.625332,2.082445,-6.351049,1.059890,9.441935,-1.764096,8.663919,4.241771,-9.843911,3.100699,1.991483,5.471423,-5.868204,7.074113,-9.562174,-7.681058,5.306788,-3.211899,-9.572898,-5.256677,-8.306838,-5.629389,-3.010018,-5.640790,6.677607,-1.857729,2.376613,-9.535928,0.841144,-3.062999,0.760155,-4.125564,1.741685,-7.887940,-7.249104,6.779957,-4.670101,-1.903263,5.698619,4.813854,8.198600,0.483634,5.022495,-4.465924,2.608039,-6.952491,6.190913,6.898132,-7.595524,-1.961793,1.906992,0.281438,4.504858,-2.850632,-8.601388,-9.089694,2.562032,-1.334694,0.065413,1.238425,7.336154,4.239654,-3.680256,9.233218,-5.495187,5.307727,0.908216,1.396760,3.025513,-2.102302,5.545297,4.949851,-8.632187,-5.448304,-4.191065,9.009844,6.858322,5.847356,2.252169,-8.781948,-9.027124,3.294581,-4.222135,3.962610,-0.620272,4.121343,-7.024946,-4.846556,-8.374172,-6.099586,5.098481,4.032455,-1.013213,-4.262760,3.767721,0.043825,5.854669,-0.115719,-1.682902,1.953635,2.643499,-8.688998,4.283432,-3.073470,1.096636,-5.690959,-0.956257,-1.501246,-4.101904,0.916402,7.479958,-7.749391,2.268575,4.918290,-7.576741,2.391948,6.926006,4.382462,-2.946506,1.701730,-7.300412,-9.099323,2.971277,5.430775,-4.368655,0.403341,6.258825,-2.741220,-0.916711,-6.649250,-7.424949,-6.352114,-5.182144,-7.656064,-8.237747,-1.778044,9.043407,8.135696,5.704701,5.980415,4.536381,-7.554688,-7.277705,-7.705384,-8.655298,9.779472,-4.171877,-9.897970,0.621024,1.569163,-3.885128,-4.070957,2.640054,-4.642748,-1.658832,-3.950513,9.955410,-1.289711,0.833777,-5.698975,-3.083102,-8.271935,-9.491141,6.704591,9.444627,4.472280,-2.867225,1.766531,8.921157,5.068271,4.108455,-0.515059,-1.812513,-1.008443,7.645555,6.535483,-3.402650,-4.598202,-8.277654,-6.827598,-5.980746,-0.623697,7.348342,-9.779800,6.426566,-6.575715,0.707612,1.698886,-2.368158,0.569947,4.459472,4.270622,-6.409374,-9.986260,7.814263,-3.574970,-9.543218,-0.083161,2.062273,-9.153127,-3.672676,6.377298,3.311904,7.070647,9.138549,5.074022,0.692764,-4.132837,-5.343011,6.704112,-3.389733,-0.419696,-7.527100,-1.603937,0.348666,-5.662038,-5.366858,-4.055116,5.314579,6.811067,-5.112530,1.324344,5.019457,-6.126553,-6.985935,0.899504,7.327943,3.920245,-9.713590,0.731294,-2.620130,-7.040252,-7.387698,9.686497,-2.489308,-4.209071,7.909568,4.864896,0.469945,2.198397,0.867014,-6.134000,-2.523556,-3.602085,-9.004753,-1.600624,0.440486,1.912475,6.656958,7.659896,6.735984,5.376424,0.082777,3.251720,-4.904790,-9.892137,0.358235,-1.453332,-3.201423,-1.117313,2.983382,-3.411595,7.058766,-0.168608,-0.138215,7.160730,0.959164,-3.327907,8.034429,3.910027,-1.045159,5.093869,6.948044,5.677219,-0.728756,-7.168861,0.842844,-8.036228,-6.540144,7.628140,7.642186,-9.000972,1.391121,1.378365,-6.992420,-2.215478,7.284511,-7.429109,-3.838247,-0.257763,2.758459,-9.696274,0.032088,-0.334425,6.253512,-1.621580,-4.441082,0.853629,-8.399165,-5.091994,2.757157,4.128016,-8.262791,0.274840,-6.092685,4.240515,-2.892782,-9.097852,-0.124783,4.898921,-7.772123,-6.232004,-1.404878,9.444213,3.373264,6.877735,-9.731541,7.345184,-3.919810,9.711224,-4.441091,6.374773,-9.050038,3.338201,-0.341598,-7.698702,-7.685671,9.633547,-5.554338,5.015252,-6.725592,2.590026,-5.109239,6.391978,9.065852,9.027917,9.344900,0.666476,-1.342754,-7.117776,4.604394,4.422273,-1.172301,6.011389,7.081067,-8.062336,7.374780,2.541831,-3.390179,1.539452,7.076641,9.259443,2.738186,7.162608,4.077831,-3.393522,-7.926699,6.739972,-6.039114,-5.974365,4.066494,0.488587,-1.944053,-1.541779,5.712753,-1.407509,-4.191535,8.501904,-5.976286,6.892931,-2.110647,2.042342,-7.707887,9.484250,8.188520,-9.049216,-1.161082,7.051884,-0.455339,5.086557,2.926673,4.377943,-9.988700,4.197004,1.195704,-5.383984,-5.525769,-9.219721,-2.030619,3.513864,7.484637,0.261769,5.204710,-5.663383,-3.166022,2.235407,-4.642728,-9.076818,7.323101,2.234484,-3.632214,0.484588,5.280989,5.857146,8.660997,8.335106,4.461411,5.212506,-7.811098,-5.408880,3.896178,-1.717492,-2.039571,-2.243876,5.634875,-7.075157,-9.473333,-5.030785,-7.518390,3.677287,2.845718,-6.993628,2.472516,9.489690,-2.071887,7.522380,-7.282255,9.068668,-0.118578,-2.682361,4.161902,0.270032,-5.928398,-3.770228,-7.338460,1.675463,-0.227030,-5.309200,0.977817,8.269449,9.448709,0.349550,7.397323,1.572480,1.742036,7.571868,-4.668603,-8.946309,-5.303108,0.412440,-8.495155,-8.254057,5.468231,9.842986,7.593617,-4.636914,5.141231,-9.942584,-1.663650,-3.940340,6.436848,-8.549092,-8.031900,1.077112,4.753159,6.660259,4.684585,3.776573,-2.074692,4.342843,4.635287,0.430005,8.125741,4.441748,2.275187,6.704556,4.215109,-1.138835,-1.314602,8.362752,5.264404,-3.662932,-5.752804,5.311881,-2.324781,-0.975884,-5.819103,-8.221513,7.312878,3.451175,5.368815,-6.483233,-0.464959,-6.169971,-4.145152,6.640052,0.942328,-9.614293,6.305934,-5.535386,-7.174853,5.853645,-6.526723,-9.024009,-1.071729,-9.887810,8.327768,-4.763251,-2.103538,-9.470351,-8.305302,-2.706179,5.202399,-3.473730,-4.027804,-7.171658,1.798823,5.724413,3.176811,-6.360419,2.445379,2.162071,2.805256,-4.569413,3.129077,-8.319776,-3.632532,5.367850,5.320918,-5.090354,-5.684845,-3.259710,7.844100,-2.989358,5.137365,-6.723024,8.047683,2.744234,4.809087,-5.650524,5.452193,2.514192,3.683045,2.559228,-3.240837,-8.550781,0.344892,-0.409520,-6.538531,9.869958,8.627455,-7.347040,-2.052966,2.362642,-3.379070,-6.859356,-7.007634,8.852314,-9.505086,-6.551312,1.019629,4.241595,7.369592,7.227091,-9.422399,-4.518571,-2.973502,7.307136,-4.045815,-9.616495,-8.600036,-9.623888,-6.789638,9.374907,6.977986,0.288909,-7.541759,0.017680,0.336568,-6.026873,7.884140,8.852933,1.604177,-7.713068,-7.456781,-4.497938,0.667504,3.924236,2.382412,-2.094698,3.646391,7.093639,8.893527,0.976950,9.642132,-3.810884,-1.964737,-5.918050,-8.000294,-9.763054,1.859846,-4.485494,9.727135,3.438439,-4.008846,2.660430,3.245415,5.823159,8.508995,7.469713,-9.584386,-1.336398,-7.114168,6.458915,9.495380,8.043685,-3.338907,-4.853823,7.706031,-3.492540,4.650267,6.885878,-0.098139,7.713657,-2.318564,-6.933510,0.914736,6.841882,0.663953,-4.554341,-5.034108,-5.006952,4.539099,6.483400,-2.627885,-7.360273,8.258269,-1.260268,9.303566,-9.718130,0.978562,-2.095971,3.944863,-4.322559,-6.327852,7.125760,-0.148391,-9.769848,-1.585988,-2.702084,8.389342,0.682853,5.347453,1.230125,5.737862,-9.362131,-6.442132,0.561179,-8.999090,4.696091,9.387221,-2.283929,-0.754157,4.715658,-6.895999,4.352536,5.245204,-7.288907,-9.549808,8.920809,1.641683,-2.237751,-1.301044,0.518498,8.520946,-1.469010,-9.926958,-0.776415,4.708425,8.427534,-4.415930,6.950033,0.899984,-3.881710,9.905952,-4.507083,7.417221,4.568041,-7.699895,-1.775995,0.418354,-7.495101,1.654666,-6.373051,3.620559,-4.002758,-2.431411,4.708632,-0.337926,6.187193,3.897959,-9.850094,6.342802,-8.586668,5.647711,8.687948,3.465541,-1.388904,4.506779,1.068752,-4.479192,-9.912371,-9.349097,9.854418,7.062475,-1.381462,-6.890791,8.262297,-0.616883,6.158620,-2.431314,-1.211311,4.570969,5.229689,4.700263,9.334609,-0.383094,-4.212142,7.333438,8.237555,2.097731,5.400928,1.498791,5.861709,-7.355177,4.499060,9.732096,7.367781,-7.836407,2.553543,5.839728,7.182759,-0.318430,-0.789269,3.675605,-8.379787,-5.888578,-0.511033,-2.214468,2.633361,3.045423,-3.751417,9.834332,0.711059,-8.010391,0.771931,8.649832,6.188750,4.553504,5.941531,-9.723307,4.765081,3.723604,-2.391958,3.140709,-1.995404,-4.164814,1.556979,-8.847731,6.701701,-4.258769,3.530215,5.792674,7.361663,-2.165541,-8.686767,1.567477,0.604509,4.394131,-6.996003,-6.093141,2.115322,9.880422,-0.604338,1.484253,-2.277865,-8.809976,7.592149,4.273203,-5.556949,0.367223,-9.206114,-4.251679,1.739013,7.759426,-3.256210,0.675658,-8.986223,4.547077,-8.700451,-9.739134,-2.831277,-4.579567,-3.326693,-0.136096,-9.641099,8.228978,-6.055760,-8.776260,-4.538549,-6.937453,1.707730,-0.759904,-4.860456,-4.361390,3.267567,-3.913114,-8.253817,9.616236,-5.325650,8.618851,-0.391275,1.924414,4.631201,-2.771464,1.731671,-1.862309,-6.269387,-1.578657,-0.577563,-2.099651,3.302554,8.878655,7.677855,-4.906889,0.784747,-0.739697,5.526723,-4.609177,-9.546735,-3.824126,9.417746,-0.701408,8.911286,8.558340,-2.368755,4.815428,-6.227272,1.578837,-1.689285,3.280219,7.043095,9.456051,0.159166,7.550225,-5.061768,7.463105,5.435665,-3.319088,-9.117508,-9.705947,1.842029,-4.514148,1.243862,3.391379,0.531594,0.810568,1.691838,1.865594,-6.365649,-5.551098,-4.780217,0.350250,8.490392,3.398118,8.706859,-5.847061,9.502508,-1.066958,-0.210452,-9.452970,-5.460666,8.930530,-6.746275,-5.452131,0.278700,-6.289915,-9.704287,0.173402,2.375322,9.414405,4.297124,5.242321,-9.942048,0.661355,0.394564,-5.966339,5.564188,2.548594,7.998626,-4.706914,-5.251056,-0.496412,-0.166665,4.006248,-2.880154,-5.822935,-3.121821,7.613524,4.784266,-2.684579,-6.152710,-9.846550,-8.883646,-5.360220,6.845252,-2.309597,8.245287,-2.529146,3.301840,0.281534,-0.438606,9.789392,8.717208,4.977184,4.512875,8.608489,2.665303,1.820538,-8.564091,6.760308,-6.870258,5.501319,-5.059116,-4.792692,5.740531,-4.650174,3.230765,2.754638,-9.710071,-5.173649,-1.119955,6.437621,4.240064,5.368671,-6.164446,-1.400468,-1.173944,-9.309066,9.548583,-5.393651,-5.868803,6.499561,-8.741826,-5.254238,8.970532,-9.031345,6.048373,6.949454,-0.161112,-3.830914,0.537474,-6.575507,-7.113717,5.704672,2.959973,2.640812,-3.969480,6.816835,0.790706,1.846776,-1.956827,-2.175026,0.548627,8.624310,-9.226573,6.280158,-3.004791,6.649736,-3.508621,-8.712283,9.192739,-9.510994,-5.121288,-2.316510,5.899464,6.865621,-1.541812,2.602936,4.883266,5.592312,-3.745609,-9.495271,-8.065462,-2.802986,-5.283666,-0.739888,-8.062180,7.527924,3.304064,-9.771481,9.917956,-8.923339,8.096565,3.192896,-4.240738,-7.168098,5.749483,6.009459,-3.571079,2.858435,7.377324,-5.268431,-0.514309,-8.113668,-5.490613,-3.080986,-6.069179,6.811581,6.697630,3.208115,2.414637,-4.892802,-1.554370,5.081455,4.695808,7.747792,-4.822027,-6.452176,9.058333,-0.795770,5.705466,4.818747,-4.227508,0.052972,7.815849,6.220761,-6.218200,-4.071987,-6.528285,-5.735731,-4.305685,-6.138515,3.369083,5.317260,7.553621,-0.528361,-2.173357,1.635567,-6.499723,-9.985394,3.415661,5.175905,-7.216070,-7.795670,8.865731,-9.106522,-1.854776,-6.694039,-2.420743,-8.411331,-3.706250,-0.036679,-9.083424,2.672820,6.281168,-6.210452,2.361432,-7.604765,3.395245,-0.394878,4.463689,-7.571889,6.108138,-1.812369,-2.294503,-8.471766,1.946414,-2.407028,-3.961540,0.108200,1.777779,-5.913070,0.803515,-4.669365,2.736903,4.821068,-0.025323,-8.020142,-9.888275,4.539363,0.854578,7.069446,-8.955521,-5.191318,5.650933,-5.375007,5.887978,-9.817453,-0.131588,-2.949805,4.820149,-5.688958,2.406094,-3.649519,4.731755,1.643652,7.274883,-1.100829,-5.538974,-3.263901,-1.126238,-8.859880,3.085263,-2.794995,-2.866526,7.271734,-0.907486,5.322516,-9.964596,6.566866,3.356036,-1.847053,-5.072966,-5.731003,9.651511,-8.154976,-4.373172,6.548089,1.994042,3.775933,-9.475521,-7.392593,-4.601824,8.583285,0.963110,7.485213,1.359389,9.885162,-7.898568,-9.901191,-6.038341,1.860011,4.576541,-6.186906,-2.598377,-3.504340,-1.857848,8.779944,-2.509672,2.932822,9.012266,-7.967037,-4.893738,-1.551756,-8.406997,-9.574187,-0.053912,2.923178,-0.137279,-1.609685,5.532192,-7.479517,6.489869,-5.636586,-0.353690,5.271388,-2.676522,-4.463640,3.929326,0.860605,4.862385,-9.981286,7.435530,2.465989,8.170277,-8.213768,5.270215,-0.946020,-5.706594,-6.390549,-6.597985,8.200899,-3.550573,6.204780,-5.237520,5.272372,-4.804665,2.836177,3.074884,-2.103496,7.277888,8.672189,8.110948,9.020574,-8.400819], dtype = "float32")#candidate|4132|(1536,)|const|float32
call_4130 = relay.TupleGetItem(func_2962_call(relay.reshape(var_4131.astype('float64'), [1280,]), relay.reshape(const_4132.astype('float32'), [1536,]), ), 4)
call_4133 = relay.TupleGetItem(func_2965_call(relay.reshape(var_4131.astype('float64'), [1280,]), relay.reshape(const_4132.astype('float32'), [1536,]), ), 4)
func_1271_call = mod.get_global_var('func_1271')
func_1273_call = mutated_mod.get_global_var('func_1273')
call_4141 = relay.TupleGetItem(func_1271_call(), 2)
call_4142 = relay.TupleGetItem(func_1273_call(), 2)
func_3774_call = mod.get_global_var('func_3774')
func_3775_call = mutated_mod.get_global_var('func_3775')
call_4151 = relay.TupleGetItem(func_3774_call(), 0)
call_4152 = relay.TupleGetItem(func_3775_call(), 0)
func_2627_call = mod.get_global_var('func_2627')
func_2631_call = mutated_mod.get_global_var('func_2631')
const_4155 = relay.const([9.522309,5.522488,5.226248,-7.793294,0.003727,-3.979116,-4.997214,8.487185,-4.293324,-3.778585,8.597357,-3.758265,-5.703910,9.797161,-9.742792,4.739447,4.553021,7.018563,-8.539018,-5.510430,8.440624,-1.481035,5.623070,7.314205,-1.762704,-8.294518,4.430768,-4.304587,3.759192,0.372847,-1.253706,-4.251553,-6.862213,-6.991127,9.518403,-7.603778,-6.896962,-6.079912,-0.559565,9.509346,3.540409,-1.125421,5.924557,-7.398175,6.187067,-1.451449,-6.088512,9.495754,-7.432382,0.053422,-2.934140,0.568819,6.524580,-3.736466,3.198485,-1.783987,5.348116,9.420445,8.606574,-1.645432,6.042582,-4.290824,1.009422,-8.568926,-8.804203,4.562081,0.393827,3.082827,-3.408377,-8.159014,6.808378,-6.555015,-2.942564,2.350988,2.173771,-4.811562,6.164298,-7.634018,-4.631165,-4.788921,2.113385,-6.479916,-4.675259,3.988538,4.754877,-3.980167,-0.648755,-5.314347,-4.965264,-9.954629,5.051949,5.082806,0.628715,6.021334,-4.142399,-1.678123,3.925288,1.429473,-1.484278,-4.734898,-3.903392,1.632196,2.677359,0.495558,2.751213,6.026777,-1.831983,5.600702,-1.786606,-4.893149,5.761802,-9.418775,9.658349,-5.987891,-7.432715,3.452834,-7.026566,0.823785,-7.990053,0.838735,-7.890114,-3.181458,5.201695,1.108517,-4.401407,0.820849,-4.699340,-1.214816,5.374047,-8.175991,1.911526,-0.154950,-4.808952,6.695787,0.230108,-3.096325,1.950329,-3.114891,6.343611,2.314245,1.641882,4.168407,-0.120522,9.145810,-8.538980,-2.310840,-3.624686,0.467200,-9.468103,5.354759,-4.194512,-0.263736,1.979646,-5.320907,-2.100307,-3.447945,-0.477154,4.177290,-9.018492,-2.393549,-2.680691,-3.034589,-5.290291,9.585716,4.502035,-9.800000,6.094396,5.838986,8.586923,8.505239,1.632370,-7.417518,1.233639,1.406990,-3.365732,-7.759186,-8.359978,6.611356,1.141143,3.256352,-5.720288,-5.454309,-1.018057,-5.533140,8.404509,9.411187,8.536681,5.005574,-9.661423,-0.276360,-4.052236,0.541427,-1.396536,5.434395,-1.965388,-3.498621,-7.242630,-0.536492,-9.765977,4.149670,-5.606244,0.299539,-2.885474,-4.288492,4.510858,0.034845,8.854335,-2.769031,-1.626013,1.890526,-1.073706,9.606843,-3.299691,-0.966401,-9.351180,2.005498,-6.996562,-6.190642,5.574363,7.440630,-6.711753,-0.816079,-3.780680,9.635652,3.702917,7.561731,-5.562890,-0.874502,-6.941743,7.186015,-6.067874,2.409545,7.114833,6.119960,-1.161906,4.811729,-0.110133,-7.040558,-6.617043,4.325917,2.598576,-0.164031,0.775923,-7.047649,5.894944,-1.073557,-4.049406,-1.173699,5.658477,-7.458078,1.594941,-3.473067,-1.854918,-6.707628,-2.420697,-1.447690,-7.950824,8.949706,9.484747,6.314765,-3.177805,9.341648,9.954088,-1.913708,0.770475,-9.533606,6.754004,-2.085533,0.627473,-7.763466,-0.359150,1.597266,5.467848,-5.824174,2.239100,9.638540,5.453310,-3.706397,1.126352,-7.289537,-8.152999,8.709066,8.310503,4.057360,-5.068718,1.014174,-6.952391,5.420054,0.707667,-0.017975,5.320200,-2.345280,-5.662454,0.605916,-8.436182,5.356278,-0.265643,-7.768702,-0.120988,-8.120723,7.567088,-7.746146,0.491644,-7.804460,7.342368,4.703764,-1.725754,-5.238480,-6.514432,-5.904046,3.405833,4.251538,-7.428229,6.434787,9.832915,8.687432,3.796491,-6.011575,1.474771,-7.523211,-2.894421,4.065233,7.685349,5.276627,8.069371,-0.622577,8.493979,-6.728321,9.989976,4.933537,-5.624628,-7.119413,-9.987255,-9.001608,6.436066,-3.457921,-0.333711,-7.650184,8.679281,3.577700,-9.629637,3.759262,-0.037294,1.059549,-5.878210,-7.248639,-9.638036,-1.700563,-7.862852,-4.211430,5.733300,0.643641,5.094005,-4.221862,0.537795,5.268614,3.906134,-3.028940,4.961283,-1.698246,-4.374823,-8.511671,8.875722,7.112618,8.516823,5.919582,-8.395081,-8.178746,-0.474237,1.889668,-5.236989,1.150306,8.487735,1.802582,-6.931843,-0.497058,0.059600,9.723996,-4.351324,-3.729791,-4.733341,-0.342054,-2.844940,-5.780085,9.020323,-6.756026,4.679211,-9.425287,8.163865,9.936556,1.092833,-8.734958,-4.813667,3.868288,-3.583870,-2.276910,5.920286,-5.397150,4.706565,-0.988211,-9.505082,-6.153989,6.755552,-4.589001,5.393167,-3.146507,-2.389537,5.436625,-2.052471,7.111981,-5.192895,4.143172,-4.909874,6.270694,6.687040,2.823527,-0.024118,2.270756,-8.176739,4.950715,5.862254,-6.813039,-6.192564,-5.160862,-1.127106,-6.229035,0.018731,-6.253237,3.719260,9.210740,0.693680,-9.361717,-8.820183,5.658367,8.100720,-1.124096,-9.346198,-1.383425,-0.093901,3.124822,-0.957371,7.736819,-7.534334,-1.079184,4.381192,-1.118317,-7.743605,0.603629,-8.970630,5.471708,9.912211,-1.722594,-7.076686,-1.106510,1.884608,1.704537,3.460579,5.657841,-4.823619,7.968278,6.350603,-4.647821,-3.898222,-3.240076,2.687741,5.610732,-1.709124,-5.461085,-2.180427,5.409605,9.157163,-7.745239,-5.971025,-3.601090,5.373841,-7.578419,4.224393,-7.334669,-3.739014,-1.702347,-4.851795,-1.489219,6.198975,0.473913,-1.938975,8.563230,4.967915,-2.759093,0.665140,-2.300445,1.875949,9.006564,9.855604,-8.635905,-5.157051,7.971605,-6.421560,4.824455,0.613883,-4.157859,-1.322230,8.601634,6.599145,8.042167,-6.280726,3.041135,-7.044385,-5.650767,-0.249854,-5.095254,9.980110,3.006975,3.057844,8.131247,6.663263,-0.953794,4.769748,1.523806,-7.511344,6.828030,-5.985168,-5.961853,4.165861,-1.594419,5.844296,-1.610590,8.005281,5.651264,2.116923,9.825274,-6.107045,-9.706745,8.411846,-4.918338,-7.413571,-9.089177,-9.432631,0.120345,2.185132,5.166310,-7.803438,9.095521,6.028489,1.920310,6.216197,5.692485,-1.182837,2.141017,9.781551,2.620853,2.948224,-5.873645,-1.042540,5.073120,1.775718,1.645977,-3.003508,8.754146,6.805124,-3.722615,0.984551,-0.541293,6.987436,0.667265,8.171639,-6.774097,-5.021028,-7.518974,1.390447,-9.738798,-3.465427,-2.325456,-9.615069,-1.317330,-1.069306,-4.070730,-4.214608,-7.071243,-1.418892,-4.424153,-2.545091,-2.212042,8.744752,-0.363722,-0.480772,8.988524,-7.899546,-1.119134,-3.848824,-3.674276,6.142204,-8.949493,5.892949,-6.745516,7.401735,7.957319,2.830399,-7.378721,-1.547200,9.551522,-1.165987,7.609454,4.729812,1.214544,-5.354281,-1.042429,0.175222,6.893524,1.085789,-9.187039,-1.789447,6.640686,-0.765479,-3.758510,-1.719872,2.640804,-6.598000,0.565072,-5.405018,2.246548,-2.695266,6.168180,6.255427,-3.064002], dtype = "float32")#candidate|4155|(624,)|const|float32
var_4156 = relay.var("var_4156", dtype = "float64", shape = (864,))#candidate|4156|(864,)|var|float64
call_4154 = relay.TupleGetItem(func_2627_call(relay.reshape(const_4155.astype('float32'), [624,]), relay.reshape(var_4156.astype('float64'), [864,]), ), 1)
call_4157 = relay.TupleGetItem(func_2631_call(relay.reshape(const_4155.astype('float32'), [624,]), relay.reshape(var_4156.astype('float64'), [864,]), ), 1)
var_4161 = relay.var("var_4161", dtype = "uint16", shape = (15, 14, 6))#candidate|4161|(15, 14, 6)|var|uint16
bop_4162 = relay.greater(call_4141.astype('bool'), relay.reshape(var_4161.astype('bool'), relay.shape_of(call_4141))) # shape=(15, 14, 6)
bop_4165 = relay.greater(call_4142.astype('bool'), relay.reshape(var_4161.astype('bool'), relay.shape_of(call_4142))) # shape=(15, 14, 6)
uop_4170 = relay.erf(bop_4162.astype('float32')) # shape=(15, 14, 6)
uop_4172 = relay.erf(bop_4165.astype('float32')) # shape=(15, 14, 6)
func_3725_call = mod.get_global_var('func_3725')
func_3729_call = mutated_mod.get_global_var('func_3729')
const_4178 = relay.const([-9,-3,-4,-5,-6,-7,9,-2,9,4,-4,-9,-3,3,6,-8,-9,-9,-7,-4,-1,-8,2,5,-3,-3,9,4,-3,-10,4,-6,-10,-8,1,-2,2,-5,9,10,-8,-9,-4,-3,-9,-6,2,6,10,8,7,-4,-9,7,-8,10,-7,6,-1,10,3,-4,9,6,-5,1,-4,3,5,-3,-5,2,1,5,9,3,1,-7,-7,-2,-9,4,-7,9,5,6,5,3,-5,8,-6,-8,-8,9,-9,-8,1,4,-9,1,-4,-5,4,5,-8,5,-3,1,7,-9,-9,5,-10,-10,-1,-4,-8,2,-9,-3,-9,3,1,-5,3,5,2,-4,8,-3,6,1,-8,-8,-9,6,-9,-2,-10,-1,3,-7,-5,-9,-4,9,10,6,3,5,-4,10,9,-6,-10,-3,2,-10,-8,9,3,-6,9,1,3,-4,8,-2,9,-7,4,2,8,6,-2,2,4,8,-7,5,-8,8,-6,-4,-8,-2,9,-2,-7,-4,3,6,-3,1,7,3,7,-3,4,8,8,-6,-5,7,9,4,-7,-1,7,2,10,-9,-7,-1,-2,2,-8,-1,9,6,-9,-1,-9,7,-6,1,-4,-4,5,-1,4,-8,-2,-7,7,10,-2,-2,-5,8,-2,7,9,7,1,-2,-3,-9,-9,7,-8,4,10,-4,9,-6,10,6,-7,5,3,2,8,-1,8,5,-7,-7,-4,-1,2,3,1,5,-2,-5,-8,1,8,4,-1,3,7,4,2,4,1,10,-7,-9,5,-6,-2,-10,-10,-8,3,-9,-3,2,8,-3,-5,2,-8,-1,-6,-10,5,-9,-4,5,10,8,7,-1,5,-4,9,-10,-9,-1,-9,3,3,-8,9,-4,9,4,-9,-1,-1,5,-2,-8,-8,-6,-2,-3,-1,1,6,2,-7,-1,1,3,6,-5,-4,9,-4,3,6,-10,-8,-10,8,10,-6,4,-3,-3,-6,9,-9,-6,-7,-8,4,9,-3,-8,9,-6,1,4,8,4,4,-8,6,-8,2,6,-6,-7,4,-9,3,9,7,7,3,-3,-9,-1,-2,7,-5,-9,-8,1,4,-6,-9,-3,10,-4,-3,9,-8,6,9,6,-6,6,-3,-7,-9,4,-10,6,6,5,9,-3,6,6,5,-9,7,7,4,-7,-9,-3,-7,-2,-9,4,3,-4,9,4,4,-6,-1,-10,-7,10,-7,8,1,9,-9,7,-2,-2,-1,-6,-2,-5,-5,7,-2,-9,-1,-5,9,2,6,-9,-2,-3,7,-7,2,-1,-9,-1,7,-1,9,1,-9,5,4,-8,-2,9,-8,8,10,-9,10,-1,-9,5,8,7,9,-5,-3,1,-1,7,-9,-3,8,8,-1,-7,1,10,8,-9,7,-3,-6,-8,-5,10,3,2,3,-9,9,7,-8,3,2,6,-5,-4,1,10,8,-7,3,-4,9,3,1,-2,-4,-6,7,10,9,5,-5,-6,-6,5,4,6,-5,3,-8,5,-10,-10,1,10,-1,1,-1,8,2,7,-5,9,-1,-5,7,-10,-1,3,10,3,8,7,3,-7,3,2,6,-9,4,-5,-4,-8,-7,8,-4,-9,8,-2,-3,7,10,3,1,-2,-6,3,-3,-6,4,8,-6,2,2,7,4,1,-3,1,-6,6,1,-3,-4,7,-2,8,3,-4,-6,2,4,4,-10,1,10,-10,-1,-7,2,5,-10,-2,2,8,8,10,3,-1,-10,1,-2,-1,3,-9,10,9,-6,-3,-8,8,10,7,-3,8,-1,-1,1,-7,8,1,2,9,10,6,-2,-5,-2,6,1,7,5,6,-2,10,10,1,9,8,2,1,-8,-6,7,6,-6,-9,-2,4,-7,-5,6,-1,-6,8,4,-1,4,-3,-9,-10,-1,-5,3,7,6,10,-8,10,-9,1,6,6,-9,-2,9,3,-2,-2,-10,6,3,-9,-9,4,-7,-3,-6,4,9,2,-9,-9,3,-7,-2,-8,-1,7,-6,-9,-5,6,1,-5,-8,-10,3,-10,-1,-9,2,-2,-4,2,-2,-1,-3,-8,-8,7,-3,-7,-6,-3,3,-4,7,9,-4,1,4,-5,-10,-1,8,-6,-3,-5,9,-8,10,-1,-5,-10,1,-7,5,2,-4,6,1,3,7,4,8,10,3,4,-2,-9,6,-10,7,-8,6,-5,8,-2,-7,-2,-10,2,-6,1,1,-10,7,9,3,7,3,-8,-7,7,1,-9,-4,4,7,7,-5,-8,1,6,-7,5,4,-3,6,-7,1,-7,6,6,-7,3,4,-6,-9,8,7,5,9,-2,-10,-3,4,-8,1,4,-1,-2,10,-9,-2,6,2,-1,-1,-7,4,2,10,-8,5,1,-3,-2,-4,-4,10,8,-1,-5,5,-5,-2,7,-8,4,-1,1,1,6,4,4,8,-6,-2,-5,-2,6,-7,7,9,1,10,3,5,9,-7,-1,-4,8,-9,4,3,-5,-2,6,-6,5,-8,7,8,-3,6,4,3,7,2,3,-1,6,3,-9,10,2,2,1,5,7,-10,-3,-10,4,4,-9,-8,-10,-8,9,-3,-6,-2,5,1,-1,2,3,-6,5,-6,9,-1,6,-10,-9,-8,9,2,-9,7,-5,4,10,8,-4,-2,-10,-1,-6,1,-5,-10,1,8,6,-10,4,-2,-5,-2,5,-1,-8,-1,-5,-10,5,5,-4,6,8,-3,-9,7,-5,5,2,5,10,4,2,6,-6,1,-3,1,4,-4,-1,9,7,-8,-9,8,-10,-5,-8,8,-3,3,-8,7,-10,-5,1,7,-7,4,-7,-5,7,-9,-4,-9,8,1,8,-9,1,9,7,8,10,-2,-6,-4,-9,-8,-2,8,-10,-7,8,-7,2,-1,-10,5,-2,-7,-3,3,-5,-5,-9,6,-3,-8,-1,-2,-8,3,1,-10,-4,3,-1,1,9,-3,-8,-8,2,-4,10,5,8,-10,6,3,-8,-9,-5,4,-4,-4,4,5,-9,-10,-2,1,-2,10,10,8,-10,-6,7,2,-7,-6,-2,8,8,2,-2,2,1,-2,5,-10,8,3,8,-1,-4,7,-7,-9,4,9,-4,1,-4,8,-4,-6,4,10,-7,-8,-7,8,1,-1,9,-2,10,8,-6,-3,5,-5,-1,3,-7,10,4,-9,7,2,7,-9,-9,1,5,6,-3,1,7,3,-2,7,3,5,-6,-4,-2,2,-1,-7,-6,10,-5,5,-4,-5,1,6], dtype = "int32")#candidate|4178|(1215,)|const|int32
call_4177 = relay.TupleGetItem(func_3725_call(relay.reshape(const_4178.astype('int32'), [9, 9, 15]), relay.reshape(const_4155.astype('float32'), [624,]), ), 1)
call_4179 = relay.TupleGetItem(func_3729_call(relay.reshape(const_4178.astype('int32'), [9, 9, 15]), relay.reshape(const_4155.astype('float32'), [624,]), ), 1)
output = relay.Tuple([bop_4124,call_4130,var_4131,const_4132,call_4151,call_4154,const_4155,var_4156,uop_4170,call_4177,const_4178,])
output2 = relay.Tuple([bop_4124,call_4133,var_4131,const_4132,call_4152,call_4157,const_4155,var_4156,uop_4172,call_4179,const_4178,])
func_4182 = relay.Function([var_4123,var_4131,var_4156,var_4161,], output)
mod['func_4182'] = func_4182
mod = relay.transform.InferType()(mod)
mutated_mod['func_4182'] = func_4182
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4182_call = mutated_mod.get_global_var('func_4182')
var_4184 = relay.var("var_4184", dtype = "uint8", shape = (6, 9, 6))#candidate|4184|(6, 9, 6)|var|uint8
var_4185 = relay.var("var_4185", dtype = "float64", shape = (1280,))#candidate|4185|(1280,)|var|float64
var_4186 = relay.var("var_4186", dtype = "float64", shape = (864,))#candidate|4186|(864,)|var|float64
var_4187 = relay.var("var_4187", dtype = "uint16", shape = (15, 14, 6))#candidate|4187|(15, 14, 6)|var|uint16
call_4183 = func_4182_call(var_4184,var_4185,var_4186,var_4187,)
output = call_4183
func_4188 = relay.Function([var_4184,var_4185,var_4186,var_4187,], output)
mutated_mod['func_4188'] = func_4188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_4217 = func_1620_call()
call_4218 = func_1620_call()
const_4228 = relay.const([-8.330219,-6.910893,3.347012,-7.779033,2.592078,7.297909,-9.050149,-0.797267,-2.097045,3.187528,-9.580031,-6.688329,-7.414885,0.196846,6.463795,-5.057994,-5.977258,-3.358321,4.450371,0.117080,7.742426,5.211822,9.835276,8.768224,6.986444,-1.460288,1.024768,8.586670,1.768668,-1.912138,8.068059,8.970865,-5.079744,5.118734,-4.127662,-0.666052,-3.971750,6.423540,7.226948,5.268232,5.022408,7.401086,-3.334487,-4.229938,1.482814,-0.445622,1.326143,-5.706802,-2.554608,-8.271052,-7.330926,-7.424914,-5.661375,-0.514858,6.593960,-2.160761,-6.582823,2.083949,4.920361,-2.362535,-1.552571,3.485814,-9.519745,7.913783,-1.584337,2.660410,-2.319586,7.393915,1.645947,0.107815,3.781654,8.848067,6.032465,-6.081094,1.331211,7.268004,-2.121891,0.581824,-1.729998,8.373801,-3.191503,7.035737,-5.940692,-6.570626,-3.163165,-7.981981,6.542867,5.825400,-3.000474,9.116537,3.426706,-0.241127,-8.782043,-4.617075,-0.981327,6.829473,5.838367,-2.958861,1.040367,5.535959,-9.642357,6.009793,-9.981122,-5.066351,-4.887649,-0.406951,-3.570855,5.024508,-0.507429,3.428591,7.337778,-2.788057,3.837768,9.600626,8.766490,-5.686917,-7.013435,6.423860,1.650633,-8.377551,-5.804194,1.533805,1.261099,8.988214,-2.492700,-5.629813,7.389982,-4.544116,0.647890,0.985583,3.761141,-3.835205,7.944061,-0.181449,8.717900,-2.793637,2.615548,-7.010874,9.068821,-3.633067,-9.530574,0.921048,4.572594,-3.609871,2.228178,0.023523,-7.752300,7.246603,-9.595570,-4.876612,-9.075190,8.858075,-7.375435,-3.768182,3.355035,6.098024,0.384431,9.166547,4.546220,-2.091358,4.802906,5.662743,9.535871,9.798034,-9.718258,-4.339607,-3.651475,-2.519977,4.757398,-8.673285,3.062942,8.123827,5.538551,-4.777642,-4.204452,4.121099,-2.532318,2.853701,1.217109,9.321313,-5.153539,-5.521069,0.155396,8.926836,2.395974,4.000187,-7.053088,-2.250315,8.869363,-3.310755,4.202605,4.447438,-0.488525,0.151976,2.419932,6.637179,-8.310723,4.359963,-1.220755,8.785291,-3.039165,-0.247901,4.473659,-1.705643,4.857586,-7.526095,6.031692,3.163725,0.784561,5.337480,7.845541,-0.968310,7.735311,-5.040686,4.541029,7.092952,-4.971737,-8.632510,-9.899947,2.252097,9.525248,-8.243299,5.479503,-3.763830,2.638178,-0.037967,-7.928383,-8.218213,-7.587145,4.598234,-1.348265,8.920112,-8.047757,-2.312777,0.084129,6.603052,-8.863647,3.848791,0.109183,-0.298565,4.046411,0.350123,1.712607,3.761453,-1.454599,4.262128,-5.364970,-9.014793,-3.018810,1.216851,-5.401496,-4.711495,9.629612,-1.119795,9.670544,6.546583,2.729606,-0.307061,-0.781251,-9.669974,-1.432821,-3.810701,3.397656,-9.269589,0.998480,0.549020,-3.162836,-3.037183,3.824998,-7.338574,8.735844,8.209502,-7.633351,-5.686769,-0.435903,-6.144097,-1.593533,8.114024,9.869799,-0.680063,8.091260,-0.658720,1.907551,3.775136,9.933315,-1.407279,7.584718,-8.137588,9.225887,0.922579,3.356053,4.985156,-6.724402,5.170278,-5.567717,-6.151751,7.552982,4.070203,-7.369490,4.360492,-2.474612,-6.452432,-8.151665,9.740593,2.051002,5.518133,-3.688167,9.246103,8.803435,-6.117948,-7.038015,0.515758,2.675198,-4.341095,-3.682609,-1.080444,5.933246,-6.419649,8.500826,-5.419005,-3.509087,1.668807,-7.402115,3.616833,-9.802173,1.618335,8.765969,-5.142741,5.848673,-8.940250,4.655177,-2.574087,1.804209,-5.238304,-6.737101,-4.292494,-7.753821,-0.484904,-7.859962,-1.407917,9.575256,2.739279,-0.146165,-5.963639,-7.951643,4.265394,9.555216,7.940724,2.168879,5.653721,-4.060807,-7.388825,6.576678,8.458452,3.418978,-5.013308,9.088869,2.697909,-3.189280,8.142685,-2.675592,-5.697817,-6.518822,-0.994723,7.000077,8.455954,8.796293,-5.625903,-7.017763,-3.647942,4.348887,5.307140,-0.785967,-0.134207,-0.474736,-1.057695,6.457467,-2.038901,-2.426236,5.973635,-3.104969,4.903316,-6.873802,-5.288054,1.875623,-9.319397,-4.297551,6.712230,-9.573029,1.606605,3.851813,8.330255,-8.742027,-3.355991,8.793624,-5.971630,-8.658081,9.413254,9.533453,-4.545942,2.663199,8.467176,-7.445277,-0.740900,-6.109778,3.311744,7.790210,-4.584597,-3.882537,-8.297720,-0.705706,0.992843,-0.504502,-7.225682,-9.193915,-4.027621,8.356856,0.839904,-7.481039,8.224101,5.356286,-3.897669,8.733181,-1.799493,3.881747,9.330059,9.383064,4.317675,-0.226343,7.574337,-0.815676,-5.151918,2.248601,2.426244,5.325565,8.568580,3.103024,-8.625532,-8.259900,-4.400365,5.764032,-1.445923,-9.764666,9.256748,4.853196,1.699171,-5.731504,3.075011,-7.000281,-7.112023,5.685111,-1.648778,8.856357,-9.881558,-9.346163,-9.791479,-6.711211,-0.357517,-1.088429,8.298957,5.205542,2.340571,-6.785454,2.500571,0.762120,0.181375,2.454373,9.472647,-0.406940,6.045440,-2.168791,-9.860869,-1.966639,6.250376,-9.539288,-0.367016,6.119020,-7.520454,-1.248575,-4.387757,7.731012,9.022300,-2.444897,3.097927,-3.805093,3.016241,-8.172864,0.858942,-0.602765,7.313177,-4.169453,-6.471778,1.002547,8.885571,9.382121,4.058605,1.151975,1.060994,0.552026,-7.571094,4.925876,-4.345006,-5.004993,-0.114227,-6.459519,4.913274,7.260003,2.493746,-0.836974,3.821103,-5.175439,-8.240038,0.173959,0.987757,5.208126,-3.937115,5.387139,-0.400349,-8.997847,2.457212,6.256002,8.857877,-2.220457,9.538518,-1.360088,-9.270735,-4.421644,-7.514778,6.142897,-7.027242,-0.624124,6.314672,-5.994681,6.460419,9.650087,5.362525,5.726795,5.697618,2.537000,8.976606,8.732895,2.380387,-2.504872,3.652473,9.315291,-0.984333,-8.208784,-2.403745,-1.632676,-4.268356,-9.633889,-4.078870,-8.615853,4.096525,-1.402350,2.738190,0.410688,4.357540,1.067182,8.573138,5.460224,-5.839697,6.407584,-4.293527,-5.121528,1.256571,-3.676322,-9.389536,-0.007185,2.098263,-7.236758,-1.697505,1.274994,-2.809900,5.759674,8.484202,3.013053,-5.121512,-3.489772,-3.276970,5.364641,0.937086,7.772383,8.215604,-2.216392,7.940812,5.695057,-5.068141,8.173963,9.022114,-5.773128,1.053537,-9.430787,-2.982976,-0.456472,8.379015,7.043916,-8.106519,9.327543,-7.464784,-5.524731,-2.237892,0.968279,-7.130150,6.929908,0.286288,-6.221940,-7.561272,5.039629,-3.935117,6.791905,9.831409,-7.685753,-4.602023,0.735955,4.236733,-9.726950,-9.833377,-1.199212,-9.759118,-0.995450,1.397262,0.796462,-3.192940,8.073905,-1.552089,-4.516222,1.525249,0.483180,-8.328595,-8.399494,-5.911857,-0.297593,-3.131772,6.146470,-2.194654,7.194089,3.337032,3.983147,4.386464,-8.022780,-6.370817,7.212551,5.679386,5.648262,-0.645368,-0.129994,-9.784863,7.212364,5.195885,3.754600,-5.207226,-2.112966,5.751140,1.092797,-9.465932,5.574344,9.258587,-2.421629,6.293126,-6.593067,9.982215,0.554450,2.717022,-7.653188,0.957743,0.243629,-8.591630,3.583866,1.289927,-1.197306,-3.141483,-1.275880,8.731037,1.824535,-5.064385,-5.266569,-0.199011,8.579196,-5.890061,-0.046290,-9.476453,5.074810,3.830295,-1.177178,-7.014025,-6.367877,-9.133235,-5.982132,4.077083,9.149616,8.365978,7.897632,8.304169,-9.488810,2.574381,4.605227,-4.805952,-0.447007,-0.320856,-4.194675,-1.193107,8.495966,-0.227156,-5.479904,1.809526,4.469680,6.393156,-3.141427,-3.983988,-6.896267,-3.895836,7.616893,-3.787074,-8.004112,-5.449722,6.564442,-8.877518,-3.944251,-4.081013,-6.976944,-5.233160,0.351039,8.693748,-4.109310,-7.664710], dtype = "float64")#candidate|4228|(726,)|const|float64
bop_4229 = relay.maximum(call_4217.astype('uint8'), relay.reshape(const_4228.astype('uint8'), relay.shape_of(call_4217))) # shape=(726,)
bop_4232 = relay.maximum(call_4218.astype('uint8'), relay.reshape(const_4228.astype('uint8'), relay.shape_of(call_4218))) # shape=(726,)
uop_4242 = relay.log2(const_4228.astype('float32')) # shape=(726,)
bop_4251 = relay.greater(uop_4242.astype('bool'), relay.reshape(bop_4229.astype('bool'), relay.shape_of(uop_4242))) # shape=(726,)
bop_4254 = relay.greater(uop_4242.astype('bool'), relay.reshape(bop_4232.astype('bool'), relay.shape_of(uop_4242))) # shape=(726,)
output = relay.Tuple([bop_4251,])
output2 = relay.Tuple([bop_4254,])
func_4266 = relay.Function([], output)
mod['func_4266'] = func_4266
mod = relay.transform.InferType()(mod)
output = func_4266()
func_4267 = relay.Function([], output)
mutated_mod['func_4267'] = func_4267
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_4340 = relay.TupleGetItem(func_2153_call(), 2)
call_4341 = relay.TupleGetItem(func_2154_call(), 2)
output = relay.Tuple([call_4340,])
output2 = relay.Tuple([call_4341,])
func_4342 = relay.Function([], output)
mod['func_4342'] = func_4342
mod = relay.transform.InferType()(mod)
mutated_mod['func_4342'] = func_4342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4342_call = mutated_mod.get_global_var('func_4342')
call_4343 = func_4342_call()
output = call_4343
func_4344 = relay.Function([], output)
mutated_mod['func_4344'] = func_4344
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3922_call = mod.get_global_var('func_3922')
func_3923_call = mutated_mod.get_global_var('func_3923')
call_4348 = relay.TupleGetItem(func_3922_call(), 0)
call_4349 = relay.TupleGetItem(func_3923_call(), 0)
uop_4350 = relay.acos(call_4348.astype('float32')) # shape=(15, 14, 6)
uop_4352 = relay.acos(call_4349.astype('float32')) # shape=(15, 14, 6)
func_382_call = mod.get_global_var('func_382')
func_386_call = mutated_mod.get_global_var('func_386')
var_4367 = relay.var("var_4367", dtype = "bool", shape = (1, 84))#candidate|4367|(1, 84)|var|bool
call_4366 = func_382_call(relay.reshape(var_4367.astype('bool'), [14, 2, 3]), relay.reshape(var_4367.astype('bool'), [14, 2, 3]), )
call_4368 = func_382_call(relay.reshape(var_4367.astype('bool'), [14, 2, 3]), relay.reshape(var_4367.astype('bool'), [14, 2, 3]), )
output = relay.Tuple([uop_4350,call_4366,var_4367,])
output2 = relay.Tuple([uop_4352,call_4368,var_4367,])
func_4376 = relay.Function([var_4367,], output)
mod['func_4376'] = func_4376
mod = relay.transform.InferType()(mod)
var_4377 = relay.var("var_4377", dtype = "bool", shape = (1, 84))#candidate|4377|(1, 84)|var|bool
output = func_4376(var_4377)
func_4378 = relay.Function([var_4377], output)
mutated_mod['func_4378'] = func_4378
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2153_call = mod.get_global_var('func_2153')
func_2154_call = mutated_mod.get_global_var('func_2154')
call_4479 = relay.TupleGetItem(func_2153_call(), 0)
call_4480 = relay.TupleGetItem(func_2154_call(), 0)
output = call_4479
output2 = call_4480
func_4504 = relay.Function([], output)
mod['func_4504'] = func_4504
mod = relay.transform.InferType()(mod)
mutated_mod['func_4504'] = func_4504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4504_call = mutated_mod.get_global_var('func_4504')
call_4505 = func_4504_call()
output = call_4505
func_4506 = relay.Function([], output)
mutated_mod['func_4506'] = func_4506
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1620_call = mod.get_global_var('func_1620')
func_1621_call = mutated_mod.get_global_var('func_1621')
call_4536 = func_1620_call()
call_4537 = func_1620_call()
func_2072_call = mod.get_global_var('func_2072')
func_2073_call = mutated_mod.get_global_var('func_2073')
call_4576 = relay.TupleGetItem(func_2072_call(), 0)
call_4577 = relay.TupleGetItem(func_2073_call(), 0)
output = relay.Tuple([call_4536,call_4576,])
output2 = relay.Tuple([call_4537,call_4577,])
func_4580 = relay.Function([], output)
mod['func_4580'] = func_4580
mod = relay.transform.InferType()(mod)
mutated_mod['func_4580'] = func_4580
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4580_call = mutated_mod.get_global_var('func_4580')
call_4581 = func_4580_call()
output = call_4581
func_4582 = relay.Function([], output)
mutated_mod['func_4582'] = func_4582
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4594 = relay.var("var_4594", dtype = "uint32", shape = (15, 11, 16))#candidate|4594|(15, 11, 16)|var|uint32
var_4595 = relay.var("var_4595", dtype = "uint32", shape = (15, 11, 16))#candidate|4595|(15, 11, 16)|var|uint32
bop_4596 = relay.bitwise_or(var_4594.astype('uint32'), relay.reshape(var_4595.astype('uint32'), relay.shape_of(var_4594))) # shape=(15, 11, 16)
uop_4599 = relay.sinh(var_4594.astype('float64')) # shape=(15, 11, 16)
func_1033_call = mod.get_global_var('func_1033')
func_1037_call = mutated_mod.get_global_var('func_1037')
const_4605 = relay.const([3.313014,-4.137588,-9.885419,-3.999225,-9.937089,-5.041950,-2.959366,1.928916,-7.416960,-6.390252,-1.957959,-7.640401,-3.348153,-1.232106,9.856183,0.617093,-8.797057,9.319903,4.985330,-0.784201,7.455673,7.608001,-1.208441,-2.730471,6.388390,9.438858,0.050137,2.603821,-8.890489,1.539490,-5.033022,-0.148626,6.843657,1.139760,8.561530,-1.286748,-1.112112,5.868312,3.051070,6.319099,-7.300900,-0.348773,-3.354939,7.558981,-2.015997,-0.284686,5.308048,6.298633,4.549876,-4.794259,-7.648172,4.465963,-0.494345,-3.198053,-5.377836,-6.184693,-0.259799,-5.111089,0.086488,2.919325,6.840827,-4.137480,0.793131,0.748847,-7.253245,1.059058,-7.317053,-4.078183,1.368651,-2.156320,-3.413617,5.415320,-1.768437,-6.187806,3.272789,4.671360,0.742322,-9.857289,2.868713,1.503066,1.279111,2.767640,-2.546015,-3.968577,-8.040672,7.222355,9.953812,9.423083,9.528513,8.287747,3.782127,5.680577,-2.915001,3.423260,2.142549,-5.515532,-1.772708,-4.785546,6.116395,-0.714440,-0.264371,-6.778588,-1.285581,4.122054,7.619967,3.330098,4.144157,-2.551198,-8.462598,7.861554,-9.566423,-2.234632,8.221078,9.662962,7.729119,-2.591109,-3.699816,2.100419,-9.724706,-4.955412,-0.451876,4.491374,-8.748510,0.429613,5.608528,-9.253819,-2.750541,-5.859766,4.856567,-5.634481,-0.210815,-0.429511,-3.367750,1.289043,-9.986929,-1.779422,0.406999,-7.987198,1.346610,-4.875755,5.671767,6.272890,3.307252,5.586308,8.814143,5.560692,2.844052,-6.394629,-8.522835,-1.282377,2.110244,4.489270,-6.562437,-6.914137,6.038540,6.936538,7.174404,6.900956,-7.418499,-4.017549,-4.734213,2.523626,6.165123,2.309523,-1.141780,6.751463,7.661305,-9.270749,-2.736620,7.869733,-3.401519,-7.357248,4.007708,-7.738161,7.882086,-2.330566,9.322133,3.478843,9.432475,-9.361221,-2.062389,-2.781998,-6.838993,-2.066098,6.150177,-9.067746,-7.945857,-4.936965,-0.599101,8.027137,9.743877,-9.388695,-4.693120,2.522173,-5.707567,2.834590,7.717293,-8.566487,-7.111587,2.633310,4.031958,0.877319,-2.648364,4.057929,9.675155,-8.553708,-1.147105,7.800009,-8.111646,7.384705,-6.821819,-4.611732,-7.656338,7.783929,6.849304,-7.938082,-4.549885,-6.739260,1.353030,-0.394089,-8.807932,4.056334,5.569122,8.656201,-2.369563,-8.821423,9.731782,-6.267369,-4.763480,1.412142,-7.279989,-1.753406,6.866191,-3.640351,-7.937292,0.811476,6.766054,-2.575562,3.692729,6.897749,-2.143505,-9.273415,-4.552670,5.839060,-5.689275,-8.301078,-5.710556,-9.338313,7.905258,0.052916,2.196891,-4.938990,9.274352,4.368072,5.861271,-1.028001,-4.754821,1.277289,-6.553636,1.737892,0.009982,0.530149,-9.343828,-6.804304,-0.878140,-0.612426,-9.289570,4.152453,7.873618,6.781834,6.892269,-8.252322,-2.300875,-6.493182,-9.364507,-0.902554,5.950585,1.388845,3.963557,8.145641,6.567815,2.181818,-0.304861,-2.730683,8.187213,-1.619476,9.790732,-8.061962,1.380277,-7.386323,1.241019,8.418330,2.984713,-0.482735,-7.690203,-7.263937,3.680739,-6.781662,-3.413841,2.602435,-5.103215,-9.018577,-3.348732,3.906426,3.041929,0.087945,-6.424366,6.816259,-3.340582,-4.616932,0.848822,-9.047692,-4.385611,8.398112,4.523821,-3.886520,-4.840132,-3.184327,-2.508911,-7.299149,7.128794,-3.951770,5.928163,8.456824,7.461459,-4.519003,9.689274,-7.704817,6.509463,-7.981064,-0.980636,-1.083014,-1.653806,-4.882789,8.491980,-2.454233,-6.275548,-9.385837,0.131612,1.454506,-5.975672,5.562666,9.090544,4.631211,9.272985,4.008293,3.672280,2.031214,-8.881971,-9.261042,-0.102493,6.906408,1.323591,-8.190015,1.893408,1.671669,-6.609841,5.940570,-2.866350,-6.302142,1.523030,-6.673903,-2.488986,-5.307928,8.053211,-0.273311,8.929778,-1.322066,3.918010,0.456576,6.011253,-5.974200,-7.814911,1.062649,3.652420,-0.615540,3.577450,5.169722,-6.354621,7.976109,-2.953830,-5.997299,9.911180,-3.722405,8.868489,8.239746,-8.139066,-4.834462,-3.402447,-9.905760,-8.253677,-9.925089,4.243600,3.466472,5.967222,8.465321,-9.455513,0.114076,-0.317190,-6.281116,-3.183541,-1.717514,-5.691089,2.505776,-3.399608,-8.157207,-1.907769,0.908496,-7.708620,-9.851521,4.159693,4.085842,9.130634,5.424782,-6.645327,2.575403,1.453929,0.415164,0.931761,-8.816541,-2.121766,-3.818298,6.008311,-9.644277,-6.094160,3.837588,-6.644353,6.903342,-5.256697,-2.428762,-2.451997,1.814717,0.844732,4.702045,5.458643,9.232103,-9.585864,-6.954672,3.190973,1.557543,7.260232,3.183320,0.720571,9.389143,6.985300,-1.652656,-0.937385,3.338478,7.975359,-6.811194,7.099187,-1.217332,9.575756,1.866821,-3.927144,-1.541718,-0.888539,8.939732,-1.712668,9.076967,-6.669678,3.688819,7.307283,4.623701,-6.811093,8.206868,9.383979,4.730463,-0.394626,9.044683,-5.694674,4.937033,9.289145,-3.605040,5.420169,5.942991,-9.520173,-4.616584,4.330051,-9.544297,5.336160,2.626994,2.341565,8.246882,-8.917680,-0.190822,-5.775861,3.262136,5.271875,2.023296,7.053217,-5.471017,-8.040652,8.784064,-1.146240,4.709215,5.359325,-6.809819,4.575567,-8.007286,-1.001074,-5.914546,-0.862198,-2.403076,-8.509842,3.870410,-3.344059,7.107910,-0.060790,3.311390,-8.914619,2.483137,9.022742,-1.009505,4.315174,-9.258257,-4.587337,5.431703,-2.578040,-4.533771,0.442771,-6.205187,5.307887,-9.064740,-7.300376,5.785892,-1.962520,-3.575110,-9.073611,6.559760,-7.595591,-9.013564,-6.014745,8.875176,2.708047,1.530948,6.785154,1.668983,7.715193,0.345655,3.423000,-5.643999,2.373838,8.823134,-5.200551,4.680767,0.620973,2.782395,0.972027,-0.626914,-8.537194,-6.498042,-3.758690,-2.417646,5.348388,4.159351,-1.072261,0.024800,2.274377,-0.704266,6.835459,-8.322958,7.419774,-4.484617,-0.834272,7.056733,3.669240,9.961789,3.003404,8.099616,7.067304,5.897535,4.701010,4.642562,-5.462941,-0.028225,0.850238,-2.903072,-2.106327,-3.460589,2.374584,1.357785,1.064534,-0.351051,-7.550716,3.653551,6.334438,-5.286946,7.256872,2.038543,8.471233,6.297587,-2.678085,9.923658,5.905135,0.971676,0.672812,8.402039,1.605797,-6.164792,7.072902,5.113107,-2.370153,6.426309,2.518590,8.210565,-6.768775,-5.018017,-2.259207,5.683503,8.751789,6.789186,0.855607,7.565368,-0.468106,4.613207,3.235509,-5.289543,-5.288511,-1.212862,-4.166618,-1.454616,-9.708468,9.280215], dtype = "float32")#candidate|4605|(624,)|const|float32
var_4606 = relay.var("var_4606", dtype = "float64", shape = (864,))#candidate|4606|(864,)|var|float64
call_4604 = relay.TupleGetItem(func_1033_call(relay.reshape(const_4605.astype('float32'), [8, 13, 6]), relay.reshape(var_4606.astype('float64'), [864,]), ), 1)
call_4607 = relay.TupleGetItem(func_1037_call(relay.reshape(const_4605.astype('float32'), [8, 13, 6]), relay.reshape(var_4606.astype('float64'), [864,]), ), 1)
output = relay.Tuple([bop_4596,uop_4599,call_4604,const_4605,var_4606,])
output2 = relay.Tuple([bop_4596,uop_4599,call_4607,const_4605,var_4606,])
func_4639 = relay.Function([var_4594,var_4595,var_4606,], output)
mod['func_4639'] = func_4639
mod = relay.transform.InferType()(mod)
var_4640 = relay.var("var_4640", dtype = "uint32", shape = (15, 11, 16))#candidate|4640|(15, 11, 16)|var|uint32
var_4641 = relay.var("var_4641", dtype = "uint32", shape = (15, 11, 16))#candidate|4641|(15, 11, 16)|var|uint32
var_4642 = relay.var("var_4642", dtype = "float64", shape = (864,))#candidate|4642|(864,)|var|float64
output = func_4639(var_4640,var_4641,var_4642,)
func_4643 = relay.Function([var_4640,var_4641,var_4642,], output)
mutated_mod['func_4643'] = func_4643
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3495_call = mod.get_global_var('func_3495')
func_3496_call = mutated_mod.get_global_var('func_3496')
call_4726 = func_3495_call()
call_4727 = func_3495_call()
output = relay.Tuple([call_4726,])
output2 = relay.Tuple([call_4727,])
func_4738 = relay.Function([], output)
mod['func_4738'] = func_4738
mod = relay.transform.InferType()(mod)
output = func_4738()
func_4739 = relay.Function([], output)
mutated_mod['func_4739'] = func_4739
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1183_call = mod.get_global_var('func_1183')
func_1185_call = mutated_mod.get_global_var('func_1185')
call_4774 = relay.TupleGetItem(func_1183_call(), 0)
call_4775 = relay.TupleGetItem(func_1185_call(), 0)
func_3593_call = mod.get_global_var('func_3593')
func_3597_call = mutated_mod.get_global_var('func_3597')
const_4800 = relay.const(-8, dtype = "int32")#candidate|4800|()|const|int32
var_4801 = relay.var("var_4801", dtype = "int32", shape = (1820,))#candidate|4801|(1820,)|var|int32
const_4802 = relay.const([[-0.940030,9.165837,-8.103561,6.776932,-9.283112,5.200327,7.907525,5.794434]], dtype = "float64")#candidate|4802|(1, 8)|const|float64
call_4799 = relay.TupleGetItem(func_3593_call(relay.reshape(const_4800.astype('int32'), []), relay.reshape(var_4801.astype('int32'), [14, 13, 10]), relay.reshape(const_4802.astype('float64'), [8,]), ), 1)
call_4803 = relay.TupleGetItem(func_3597_call(relay.reshape(const_4800.astype('int32'), []), relay.reshape(var_4801.astype('int32'), [14, 13, 10]), relay.reshape(const_4802.astype('float64'), [8,]), ), 1)
uop_4814 = relay.sqrt(var_4801.astype('float32')) # shape=(1820,)
output = relay.Tuple([call_4774,call_4799,const_4800,const_4802,uop_4814,])
output2 = relay.Tuple([call_4775,call_4803,const_4800,const_4802,uop_4814,])
func_4818 = relay.Function([var_4801,], output)
mod['func_4818'] = func_4818
mod = relay.transform.InferType()(mod)
mutated_mod['func_4818'] = func_4818
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4819 = relay.var("var_4819", dtype = "int32", shape = (1820,))#candidate|4819|(1820,)|var|int32
func_4818_call = mutated_mod.get_global_var('func_4818')
call_4820 = func_4818_call(var_4819)
output = call_4820
func_4821 = relay.Function([var_4819], output)
mutated_mod['func_4821'] = func_4821
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2513_call = mod.get_global_var('func_2513')
func_2515_call = mutated_mod.get_global_var('func_2515')
call_4858 = func_2513_call()
call_4859 = func_2513_call()
func_2725_call = mod.get_global_var('func_2725')
func_2727_call = mutated_mod.get_global_var('func_2727')
var_4861 = relay.var("var_4861", dtype = "float64", shape = (32,))#candidate|4861|(32,)|var|float64
call_4860 = relay.TupleGetItem(func_2725_call(relay.reshape(var_4861.astype('float64'), [32, 1])), 1)
call_4862 = relay.TupleGetItem(func_2727_call(relay.reshape(var_4861.astype('float64'), [32, 1])), 1)
func_3774_call = mod.get_global_var('func_3774')
func_3775_call = mutated_mod.get_global_var('func_3775')
call_4881 = relay.TupleGetItem(func_3774_call(), 0)
call_4882 = relay.TupleGetItem(func_3775_call(), 0)
output = relay.Tuple([call_4858,call_4860,var_4861,call_4881,])
output2 = relay.Tuple([call_4859,call_4862,var_4861,call_4882,])
func_4886 = relay.Function([var_4861,], output)
mod['func_4886'] = func_4886
mod = relay.transform.InferType()(mod)
var_4887 = relay.var("var_4887", dtype = "float64", shape = (32,))#candidate|4887|(32,)|var|float64
output = func_4886(var_4887)
func_4888 = relay.Function([var_4887], output)
mutated_mod['func_4888'] = func_4888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3774_call = mod.get_global_var('func_3774')
func_3775_call = mutated_mod.get_global_var('func_3775')
call_4918 = relay.TupleGetItem(func_3774_call(), 0)
call_4919 = relay.TupleGetItem(func_3775_call(), 0)
output = relay.Tuple([call_4918,])
output2 = relay.Tuple([call_4919,])
func_4934 = relay.Function([], output)
mod['func_4934'] = func_4934
mod = relay.transform.InferType()(mod)
mutated_mod['func_4934'] = func_4934
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4934_call = mutated_mod.get_global_var('func_4934')
call_4935 = func_4934_call()
output = call_4935
func_4936 = relay.Function([], output)
mutated_mod['func_4936'] = func_4936
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2446_call = mod.get_global_var('func_2446')
func_2447_call = mutated_mod.get_global_var('func_2447')
call_4947 = relay.TupleGetItem(func_2446_call(), 1)
call_4948 = relay.TupleGetItem(func_2447_call(), 1)
func_4818_call = mod.get_global_var('func_4818')
func_4821_call = mutated_mod.get_global_var('func_4821')
var_4953 = relay.var("var_4953", dtype = "int32", shape = (1820,))#candidate|4953|(1820,)|var|int32
call_4952 = relay.TupleGetItem(func_4818_call(relay.reshape(var_4953.astype('int32'), [1820,])), 0)
call_4954 = relay.TupleGetItem(func_4821_call(relay.reshape(var_4953.astype('int32'), [1820,])), 0)
output = relay.Tuple([call_4947,call_4952,var_4953,])
output2 = relay.Tuple([call_4948,call_4954,var_4953,])
func_4968 = relay.Function([var_4953,], output)
mod['func_4968'] = func_4968
mod = relay.transform.InferType()(mod)
mutated_mod['func_4968'] = func_4968
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4969 = relay.var("var_4969", dtype = "int32", shape = (1820,))#candidate|4969|(1820,)|var|int32
func_4968_call = mutated_mod.get_global_var('func_4968')
call_4970 = func_4968_call(var_4969)
output = call_4970
func_4971 = relay.Function([var_4969], output)
mutated_mod['func_4971'] = func_4971
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5050 = relay.const([[[-0.938778,-3.407209,3.603483,-6.230794,-5.080294,-1.987376,-9.165726,-3.855216,9.475742,-1.451838,5.499998,-7.075752,-0.315997,2.412842,-3.502183,-1.196227],[8.935934,-5.814429,-0.635221,2.078028,5.089615,9.178485,-1.542227,-2.347034,3.188779,4.499359,8.178107,6.239865,4.749274,7.027132,4.020754,3.249618],[-9.406810,2.789045,-1.685723,6.345325,-9.307408,2.824446,6.866833,3.846277,-0.547092,8.372883,-8.797038,0.031563,2.303278,-0.600381,-5.747217,5.278592],[6.291362,3.174620,-5.065945,-2.982553,9.277544,7.532820,6.129192,9.616734,1.376069,-9.884852,-6.652912,-0.407044,-9.596255,-6.382453,-3.434498,3.508645],[6.877123,5.444273,6.968370,-5.138474,5.828675,5.266321,-7.869849,7.635355,4.118514,-6.793847,6.470451,-3.510452,4.551166,0.026850,-9.314306,8.697625]],[[7.781775,4.588909,-2.116407,-8.484861,-2.529355,7.656671,-3.828345,-3.411942,-4.270763,1.104870,1.323560,8.506507,1.039207,-0.517027,5.708917,6.688368],[-4.706120,2.388952,-1.334593,2.021210,-0.249291,-9.062998,4.264143,-4.236838,8.976221,0.060183,8.397934,7.123992,2.583187,8.361184,7.158740,-3.045834],[9.601873,5.931474,4.402384,-3.502180,4.927823,-4.097076,-0.720287,-7.180779,8.007049,-5.303700,-2.853343,5.893843,-8.755321,-9.751352,6.335481,7.684658],[-5.945275,-4.734218,1.462194,8.016140,9.370408,3.508574,1.523567,0.496273,-3.401485,4.943289,6.807644,-5.089165,5.292209,-7.571539,3.764192,-6.521168],[-4.152738,8.850931,3.060223,-9.890342,7.661416,-1.609466,0.300145,1.322307,-1.692514,-5.433217,2.742573,6.456192,5.985905,0.393525,9.152178,-7.005607]],[[-1.376210,-0.180997,9.840288,8.968549,-0.940973,8.431601,3.659151,7.594187,9.236178,-0.193881,5.411655,-7.226564,0.396985,5.841642,3.378818,-7.754725],[-8.623952,2.438076,0.375647,-4.412015,1.392749,0.279397,-3.695925,-5.718118,-0.989729,-9.317467,-5.284795,-8.914392,-0.628695,-1.202415,1.453412,2.341401],[4.206689,4.149786,1.987771,3.541265,0.643712,-5.404379,3.135915,-3.270855,7.274601,5.424868,5.914818,7.785134,-9.392868,2.494961,-3.352036,9.194216],[8.239018,-1.514030,-4.615644,5.516361,-9.344643,5.157567,-2.851372,5.560660,-4.766392,1.678363,-8.812935,5.524884,0.143656,-4.058534,6.268786,7.206771],[2.035446,-0.927453,2.604358,3.713796,1.072186,-2.286820,-2.533143,0.654186,-6.243761,-5.566091,4.604232,9.733703,-4.399540,-4.457682,1.296176,1.738710]],[[1.485758,-3.867479,2.297021,-8.933725,-2.716711,9.508098,-4.420466,1.310097,0.196996,4.966616,7.413132,4.217337,-9.020833,-6.010002,-7.341053,-3.208229],[5.546938,-1.509628,0.831076,3.682059,4.614622,-6.088720,4.846165,4.432983,-1.639880,6.363496,3.158736,3.730000,-8.978911,-8.688651,7.831332,-1.776338],[0.673855,-7.344001,3.570773,5.612965,-1.220380,-4.208638,6.759212,-0.996400,-6.709284,-4.254853,9.534956,0.490121,0.191689,-8.942799,5.618507,0.651179],[8.203524,0.439142,7.469740,-8.810001,-2.282517,0.308022,-4.111275,1.845324,4.067509,-6.672072,-3.947336,-2.586895,2.236386,-4.430986,6.338710,-2.517263],[0.560775,0.495452,-4.708017,-9.397099,-1.486269,-7.197459,-0.393679,9.369434,1.429047,-5.625591,4.866742,3.334333,4.890541,2.497631,7.214166,3.007109]],[[9.040009,5.056698,-2.209871,8.684242,2.732937,0.472933,1.059455,4.869110,5.179766,-6.568878,-5.192240,8.355489,-4.560094,-9.505933,-9.872657,-8.936539],[-3.644599,4.788447,-1.684989,0.752770,4.043348,6.216153,0.444311,3.256630,-7.244637,-4.911803,-0.066976,-3.917875,-3.914978,-6.235801,-8.121338,8.141052],[2.541668,-6.300002,7.225214,6.199444,-8.149034,5.790820,-8.956373,-6.401777,1.019634,7.284540,4.010534,-9.795054,7.443579,-7.438471,7.377211,-8.209816],[5.562952,-6.069291,8.555560,2.530009,-1.185252,0.839102,7.791309,9.215028,-6.556854,-4.326672,-8.868802,-0.411053,-6.296780,-7.082964,-7.359516,-0.487482],[7.126117,-9.625453,-6.777853,-6.581123,-3.281431,2.771897,-0.415796,-0.060652,-9.604790,-0.157058,1.736408,-9.460907,5.016782,-7.873082,2.314742,0.276654]],[[0.295048,1.142084,9.988612,5.211061,-5.303320,-0.617957,9.214495,0.307385,9.564305,5.483705,-9.905915,-6.976498,-6.982348,7.288275,3.310332,-1.391289],[-9.840139,1.999028,0.732422,-9.645098,8.892479,-9.202604,0.419958,-7.071220,7.719609,-0.095578,4.149026,-8.774640,2.231658,-2.324724,-6.719287,0.257440],[-6.152228,2.709313,0.618357,4.116936,-5.595175,-3.570302,-9.405938,-2.754080,-4.001828,3.483342,-1.360959,2.290968,-4.585880,-5.359807,-6.393684,5.051537],[-8.098411,-9.572022,-6.423821,5.815029,-1.263061,9.735745,-7.360756,-2.640280,-2.728229,6.147703,7.550054,-1.427089,-3.607071,6.706847,-7.330501,6.035801],[8.753523,1.242809,-3.806961,-0.808799,-8.176416,2.451680,8.804334,6.109245,4.331536,-5.914295,5.597921,-6.622836,-5.255871,-2.678386,0.722648,1.403190]],[[6.475101,-9.762601,4.412144,-3.213719,-9.570442,0.517729,-5.225505,9.337259,5.059298,-6.642633,-8.498214,-1.770516,-1.353961,-7.196979,-4.897317,-9.409665],[-7.306136,7.156693,7.707404,9.061166,0.236331,-0.614672,4.127636,-0.858353,4.648946,5.212245,6.703248,-3.924772,-2.870845,8.122409,8.058049,-0.516317],[6.609983,2.019377,-3.531692,-3.822225,8.970439,8.889842,8.760346,7.731611,-9.979784,-4.385794,-6.990121,-2.110053,4.985389,-1.511818,7.551525,-6.150160],[-6.463684,-1.704395,-3.283531,2.118390,1.792051,-4.086703,-3.991184,9.316921,-7.226523,-9.082967,9.771688,9.199291,2.142865,5.106574,9.293157,5.710549],[5.406067,-2.837600,-3.609613,-1.966499,-8.805447,-2.845778,-8.289821,5.620140,-4.098591,-0.660390,-2.782415,-1.599424,5.062081,2.566455,-2.335168,-1.556326]],[[-8.401005,7.287623,-4.308833,-0.157899,2.216832,8.028292,-3.559820,-0.075089,9.859476,-6.192012,5.120213,7.201514,-6.575021,9.244811,2.341161,3.269364],[-8.303788,-8.874029,-8.171463,4.736918,-6.847892,2.037107,4.690476,8.417438,-0.881473,1.867618,-6.677116,-4.305674,5.508262,4.926804,-1.863879,-7.229269],[-9.146366,6.231068,6.882230,-7.382423,-4.675580,-2.238833,6.194872,-6.365436,-2.854052,6.083785,-9.725798,0.558546,1.280340,-1.777534,2.519201,-6.112275],[6.016597,-1.597231,-7.528220,-7.702821,0.449767,6.799264,-1.488892,-6.486950,0.284489,-6.463912,-4.584090,0.176511,-6.742096,7.013003,-1.830342,1.253762],[4.696010,-1.419967,-1.667892,-6.225778,7.126832,0.370923,0.006914,-6.312062,1.220159,-9.876447,4.857994,-6.616069,2.171641,2.543295,2.036324,-8.947968]],[[4.605780,9.011958,3.603176,5.850010,8.817305,2.913560,-1.201063,6.429188,-8.550242,4.270190,0.950458,8.308699,8.425352,-0.968673,-9.134431,-8.676626],[1.303850,9.721271,1.221049,4.969378,2.542130,-5.255521,3.774026,-0.361738,7.828283,6.459749,0.331387,-7.956043,0.151155,3.838428,0.586076,2.035837],[0.466554,4.314827,7.289546,3.955261,9.196783,7.368155,1.698890,-8.276825,3.892035,1.930487,1.416833,-8.383287,-2.024416,-8.936496,7.854258,-4.139085],[-6.052361,1.697111,5.236457,9.122490,-2.244367,8.102346,-3.234437,1.364711,3.453041,-0.802427,-7.063101,1.971053,-8.161130,-1.922089,-1.582851,5.289393],[-2.116603,-3.447713,9.136403,6.709196,-5.416140,-9.045030,-4.592287,2.579951,-3.120034,-6.509709,-4.114207,-3.231302,5.933689,-8.139402,9.449241,8.765727]],[[-1.112167,7.601050,6.312481,-2.528214,4.538366,-1.122127,-8.328045,3.202156,9.733125,7.224584,-3.919575,-8.510223,-7.956987,0.449750,-0.427762,5.557618],[-1.926808,3.734792,3.966619,-3.724495,-9.021388,1.061918,-9.407131,2.400590,-7.093542,2.224004,-6.777826,3.682434,-8.562897,7.048100,1.311425,1.163544],[5.980912,7.716639,-2.431881,-3.801651,-7.060710,7.625931,-5.460247,-1.624489,5.963184,8.096905,3.248500,-8.768872,2.086374,8.640302,0.770041,7.675158],[4.646616,7.159515,-8.166449,-5.273261,5.959378,5.777877,-8.264714,2.435553,8.295545,-5.011647,8.207858,-9.112355,-4.559966,5.598923,-2.314664,-6.310129],[0.446338,-9.006762,3.934263,-4.331405,-2.056519,1.606686,0.531889,5.216167,1.736908,8.385807,-6.232975,-5.853929,9.994926,-1.151779,-5.578317,0.660574]],[[7.076107,4.449822,-3.650556,8.362070,4.560005,-7.339971,8.939629,2.276874,2.640268,9.754970,-8.113597,-3.615367,7.220085,2.178261,9.084953,1.677568],[-5.227963,-1.942310,-7.791277,-0.794855,-9.017705,-0.168324,-4.515816,-2.565935,3.900544,8.738193,3.156661,2.353223,9.585419,-8.599658,-4.923072,9.970290],[-5.852184,7.954836,7.242565,-2.919445,-6.306503,-7.473204,-4.633400,-1.240039,-0.471071,2.533314,8.876163,8.705021,-9.144391,-3.689222,2.268524,3.785189],[8.537953,0.313003,-7.790900,-0.343673,-5.963434,0.144317,7.234583,-0.570034,-3.694535,-3.435155,0.235877,-3.183475,4.121704,-4.274727,-4.302920,4.896348],[-3.850573,-7.747529,-6.335623,-7.850373,2.339507,-1.808377,0.754026,8.433676,-3.200262,-8.523304,6.530140,4.227521,8.502574,0.374907,-6.862547,0.625029]],[[3.626999,9.370923,-5.531164,7.396573,-0.137638,-5.324646,-8.537637,5.154088,4.747777,-2.204896,-6.131274,-3.833376,2.791824,2.497992,-3.424289,6.657161],[-9.340740,5.103252,-6.942987,7.923393,-1.687887,-3.982900,7.626383,-7.312043,0.510841,8.717562,-0.960178,8.910409,6.975183,2.573483,0.950389,-1.949771],[-0.271854,-7.191627,-8.481043,2.452810,-9.544271,7.291862,5.607508,-0.634697,0.936986,-8.224493,8.813264,0.376435,-3.458397,-9.289385,2.188882,3.427536],[2.336908,-4.146202,0.727081,-6.146626,-9.054017,8.088928,8.683419,-3.784321,7.601133,2.308765,4.689802,-1.557333,7.966213,8.297679,8.624271,-8.584728],[4.388317,-0.199162,-4.953872,-3.042148,-5.497460,-1.370229,1.338857,-2.052648,1.009721,-6.727008,1.340056,-2.231425,5.045712,1.829042,5.869577,3.925500]],[[4.675182,2.737764,0.525882,-5.601628,-9.441014,0.803118,6.847517,-7.322880,9.115273,5.125390,0.686176,-3.574634,-2.285333,4.606163,9.257569,-8.232299],[-3.404453,1.905826,6.537218,-4.050258,-0.161283,5.053192,9.361983,5.053737,-4.874928,9.210177,-4.768664,2.127666,-2.868171,-7.671623,7.298462,-5.668340],[6.155471,1.082686,1.639683,-3.806599,-0.398797,6.887851,6.403927,-1.306018,-5.268979,-5.803541,0.645797,1.549589,-2.995988,-5.130897,-1.623794,-6.481121],[-2.695841,-9.629886,4.415873,5.975717,-7.801435,8.882952,5.670389,-0.432803,-6.126831,9.471753,-7.076839,7.582103,-3.872304,-5.381003,-3.770400,-3.877375],[4.325123,-4.280911,8.972707,-1.993680,-1.472982,-5.495025,1.113359,7.420649,8.762954,-0.045791,9.646351,-5.885981,1.234980,-5.016626,5.965296,-6.777045]]], dtype = "float64")#candidate|5050|(13, 5, 16)|const|float64
const_5051 = relay.const([[[5.877459,-0.444425,2.849435,-4.567635,5.224357,-8.282661,4.624593,1.894495,7.530908,4.378408,-3.379168,-8.407107,-8.975269,-4.361428,-0.283373,8.272043],[-7.755147,3.134210,-2.488705,1.962509,-3.514682,2.256771,0.704038,8.800403,0.424718,7.965595,4.511222,9.690418,4.657095,-4.098059,3.557107,-8.268728],[2.964249,6.780197,1.950715,8.612009,-1.536100,1.586780,5.665790,-5.892408,4.760062,0.041182,-9.184607,-7.029584,-3.568372,6.695394,-8.973305,1.726886],[-1.328112,0.399630,-0.053565,4.680517,9.614118,-5.495378,5.202934,-2.063734,-6.671013,7.316464,-8.343162,8.945791,-1.596110,-5.021398,-5.640801,-6.918624],[1.444630,-7.724820,5.953613,-1.770962,-0.552379,1.278189,-5.101521,-3.753583,3.059735,5.851756,1.374024,-1.478313,7.231168,-0.330449,2.616899,-4.392446]],[[-9.122425,-5.416057,-2.002973,1.468880,7.679058,-1.640931,-2.463008,5.330592,-0.358887,3.207036,4.713990,7.591072,-7.642191,-5.906912,5.072040,-9.983103],[2.006171,3.060380,-9.123726,-5.106163,5.214838,5.180691,0.997124,-4.444180,3.775458,3.280874,0.339666,8.128275,-2.148206,4.382497,1.172981,4.602144],[-1.085644,-3.700242,7.973620,7.745503,-1.906742,-8.274879,4.906926,5.951374,-1.887244,6.546452,-1.025820,-1.272996,-9.284977,-0.785543,2.282374,-8.249761],[-4.848123,-1.971164,0.582357,-2.290125,-4.292008,1.174825,2.079220,-3.547476,1.420711,-2.999696,8.913257,-1.498308,-0.348824,5.620587,-4.975205,-5.695040],[-3.262241,3.419473,-5.252456,9.636737,-3.506819,-3.545542,-2.356615,-2.465347,-0.728395,8.980239,7.632881,0.831052,-0.727619,3.909720,-8.669904,3.258166]],[[6.746925,-6.512000,-4.894127,-7.835738,-9.295680,9.960116,-9.929664,-5.450457,-2.746203,-5.842556,5.821864,5.848946,-3.256385,-9.067826,-8.342283,3.693435],[-6.484486,9.036901,-4.879652,-0.289862,-4.559786,5.719486,5.406591,5.733092,2.617418,8.016608,2.933189,-4.937658,1.592463,-0.752960,-0.403047,2.080663],[0.885869,1.492877,7.926464,-8.142185,4.717724,-5.918735,7.155868,-4.209105,9.929514,8.437663,4.592042,-5.597791,3.877254,-1.412364,-8.669142,-6.414702],[9.411954,7.744198,8.947204,-6.272440,6.974152,2.885964,0.615095,2.263938,4.555550,6.243012,-2.957296,-2.748339,2.707498,3.748398,-3.219744,4.224370],[-4.570558,-1.971993,7.875929,-3.167574,1.569011,1.290443,-2.189994,6.672487,-8.588873,-0.423926,-1.397127,-7.249676,8.710773,-9.220001,1.984932,3.695833]],[[-2.076701,-9.480073,8.250342,1.168637,-3.729962,7.498378,3.446911,1.755373,5.874354,1.381225,-8.751848,8.687209,8.819754,9.767527,-1.881011,-8.458948],[5.813975,-3.398635,-1.397804,2.883798,-4.226232,6.698243,-9.723702,6.843532,-3.994280,4.251239,-1.271029,-7.649973,-0.045280,9.203342,6.893867,-5.306569],[-9.762631,7.918393,-3.926125,3.460688,9.990823,-0.029980,8.984357,0.126393,-2.233460,-5.631762,-4.845603,1.105529,3.027755,4.203446,-8.915702,8.400384],[-7.371406,5.348667,8.602717,2.896647,4.563521,-3.169285,-7.164785,-9.758380,1.179556,9.418023,-1.646951,-4.516432,0.475368,-1.134690,0.553606,-1.703936],[-2.610965,-9.161876,3.147028,-8.640621,-4.277845,8.964189,-4.371621,3.167748,1.998059,2.492733,5.814374,1.011493,8.369372,1.925323,6.309236,-9.680783]],[[3.276483,7.340424,3.200095,-3.115184,7.169075,-3.504866,4.412035,4.054348,-6.954944,-9.460268,-1.991045,7.373250,1.604750,4.439238,-6.004487,-0.094013],[-3.091583,-2.408389,4.158239,4.798213,7.835706,8.055392,-4.724973,6.089312,1.434644,-7.699225,7.702087,-9.220054,-7.627240,4.447086,3.043920,5.578143],[1.846699,4.759321,-3.832022,7.335420,-3.083086,-2.504398,1.547982,-7.456439,-4.403983,3.217509,-3.978146,-0.803348,0.659838,9.995885,-7.502795,-3.249724],[1.177096,-7.260319,0.698018,1.408958,-3.959993,-6.838230,0.542050,5.732470,0.240157,5.812086,-6.994624,2.617230,6.283773,-1.439077,9.218434,0.256671],[2.423551,-4.878895,-5.805350,-9.706449,1.654280,-3.860446,2.082004,-6.056123,-5.468557,-0.008300,-9.868513,-5.974066,9.105638,7.093733,-3.484424,2.381061]],[[-7.090009,-4.357396,5.072807,-1.736649,7.928088,8.020835,-9.519680,5.330282,8.617373,1.642764,3.681957,2.870447,-6.934886,2.899780,6.780826,-8.748745],[-9.507861,-7.989021,-8.909504,1.677223,-4.079215,-4.241348,-1.819247,3.068652,-5.757030,0.461471,9.757866,-4.493106,0.166069,-7.907489,-6.886743,8.003165],[5.655428,-3.122542,-7.594255,5.045468,-2.251504,3.166862,4.582523,-7.111844,0.410059,-4.110434,-5.598738,-1.759377,-7.701196,-5.150263,-3.669517,-5.257747],[-2.962642,0.848456,-3.900848,0.986319,-2.567050,0.926898,2.677423,6.799446,-3.198503,2.800771,-4.079130,-6.674747,-9.010691,7.202617,-5.790220,-9.596067],[-0.252655,1.266178,-3.961788,7.806350,2.089053,5.243700,-4.730648,2.276223,-7.399785,2.827969,3.716315,2.970785,6.241454,-2.404175,-8.850028,-4.904689]],[[-4.129808,6.726476,-3.580454,6.334449,-4.235201,-8.021394,-2.224001,1.506118,9.246576,3.381136,-5.626655,-4.728317,-3.899378,-5.437130,-8.180101,3.973220],[-1.204445,2.234503,-6.497150,6.324450,4.185337,2.898391,0.035622,-9.180932,-4.462762,9.790706,5.336637,-7.139500,-1.875541,-4.003235,1.149697,1.900299],[6.474948,-8.113909,-8.778522,-1.347942,9.639349,0.922575,-3.142992,7.609056,4.200188,0.477412,9.458167,-8.849874,-0.556819,-5.209859,9.504455,-6.501781],[-5.661278,-6.864743,-9.990657,3.026355,-9.585766,-8.664674,-1.346748,3.507661,2.065913,-4.008626,-8.209651,-0.042745,-7.219989,-8.165003,8.586822,-0.867598],[6.398350,-1.014826,4.755537,-2.173777,-1.795351,-9.325965,-1.860031,-6.073602,-8.415094,-8.838795,-4.464962,-7.413260,2.332855,-4.343556,4.315484,7.269104]],[[6.250589,-6.380105,9.945619,-1.531485,4.848855,-9.815056,1.580669,7.398094,-4.729561,-0.445511,8.717585,5.550436,-7.734711,4.622678,-1.404565,-2.384329],[-9.175343,-6.701008,2.860109,6.803439,0.952868,7.454821,-9.928506,-6.772883,-1.789839,0.234169,9.975250,7.818837,-1.403904,1.052856,9.140161,-0.225411],[-1.267737,7.923849,-4.508931,8.502282,-7.699262,-9.857652,9.262101,8.103007,7.983967,2.209113,0.482392,-0.621478,3.270208,-9.976581,-3.451163,-4.594311],[3.302435,-5.959862,-2.522242,5.235188,-6.215962,-2.720800,0.901151,-7.370581,-2.568631,2.380119,-7.582325,-7.621076,-5.755795,-1.754643,5.522660,8.500949],[-6.001057,-7.071536,1.488264,2.223027,5.749782,-0.365682,-6.093337,-0.628622,-4.089911,-8.883944,4.094107,9.451182,-9.186796,-2.158967,-1.670534,-6.866554]],[[-9.732218,-0.040423,3.350700,9.425216,7.724630,2.693863,-2.542844,-0.791623,7.876226,3.009141,4.463107,-4.824464,-7.247221,-6.595427,8.112716,7.596337],[1.308165,4.862949,-8.357050,-0.122362,-0.216740,2.837231,6.336758,-9.105647,-7.988862,3.084897,-1.957351,2.619943,4.302574,3.250360,4.393170,-7.335145],[-6.530622,0.203271,-9.297460,-8.430828,8.584408,-1.426584,-8.092479,3.682857,-0.459646,-0.659295,1.646202,-2.467242,9.864550,4.228633,-4.421407,-1.673563],[2.871089,0.723607,0.638630,9.361573,1.988873,1.533389,-5.602467,2.028785,7.665333,4.045835,8.828868,3.262429,7.528840,2.654166,-5.101117,0.850410],[6.221698,-5.656064,-1.460603,1.935623,4.257499,1.167936,-0.104303,-4.240290,4.262714,-6.579232,3.585141,7.488635,-0.750080,5.362062,-1.586397,-8.595759]],[[7.560255,-8.050750,-9.960132,-0.123307,-6.820907,7.830514,-4.692395,7.839473,7.107894,-6.341841,3.393182,-4.586010,3.252390,5.301540,-6.802666,7.447681],[-5.821727,4.964681,-3.370421,-8.319032,-8.085355,0.810012,8.323617,-5.904860,-9.932691,-6.496939,-2.290811,3.269797,-3.126692,-2.374687,-7.629801,-2.411960],[0.193906,-7.024670,4.637401,7.925420,-4.657319,-9.019886,5.679695,7.401886,-2.987972,1.658160,-0.697653,-8.337213,8.091640,5.842812,-4.524032,-9.852345],[5.448818,0.023755,4.631291,-2.616772,5.241536,-7.982253,3.514004,-4.051197,3.787547,5.854422,-0.505173,-1.643800,-1.044982,-8.995139,4.626187,-7.934987],[7.346286,-1.799369,-2.918228,-0.615457,9.627586,-0.736642,-3.761435,-3.082150,6.509432,6.098182,0.011773,4.765604,0.018542,1.303881,6.738239,-0.570055]],[[7.920091,9.103626,8.371573,-5.291934,-9.962516,-9.513563,5.727233,-1.366869,-7.099309,8.010860,2.862396,7.264404,-1.899114,-6.027349,-9.046978,-4.648517],[5.531047,-0.596546,9.288557,5.654362,5.308325,1.812791,8.349755,3.945714,8.679359,6.852300,-8.378010,-1.928893,9.587430,-2.739183,1.293464,-7.304429],[-4.491630,6.688918,4.968695,-8.235917,-6.203985,2.661663,9.666461,6.774045,4.215621,-8.409857,3.542913,-8.731414,5.564536,9.917273,2.944254,4.725288],[-2.610801,-7.421210,2.263218,-6.884716,-6.690731,0.967139,1.972433,-2.394794,-9.451457,-8.155968,9.340668,-4.014496,8.562972,6.958235,0.274012,-1.240870],[-2.249892,9.632645,7.265467,3.642688,-8.345281,-7.266935,-2.937407,-6.729278,6.341501,-1.579532,-0.972633,5.206073,-6.222346,-2.984224,9.132418,7.348056]],[[9.558459,2.253190,2.804208,-4.775548,-1.792899,1.962181,-0.920793,5.805762,-2.600849,-0.704348,-6.865390,-1.951975,7.341480,4.691676,2.699727,-3.747727],[9.794511,-4.022215,-1.703640,-7.642363,3.589025,9.694460,-4.629803,1.109889,3.225850,8.190087,0.264499,-0.143435,-6.078257,4.614257,0.663521,9.160082],[7.282706,9.612633,-0.084625,-8.601762,6.645423,4.372034,-9.122759,-2.075203,5.305789,-8.208058,4.893616,5.050576,-8.895208,3.679355,-5.548407,-5.117163],[-4.332968,8.777488,-9.381111,-8.547583,-6.105057,1.550335,-4.361323,-5.471289,7.302867,-6.713708,5.731041,-6.974798,-2.924628,6.802710,-9.308471,8.880758],[4.507797,-2.771016,-6.761635,5.442380,-5.022625,-5.040577,-7.334760,-8.878143,7.609194,-2.153959,-2.768716,-6.377699,8.136606,1.768266,0.210720,-1.503500]],[[-8.258886,-7.039210,-3.002188,5.448475,-0.205461,7.476151,-1.849270,-2.388154,0.878295,-2.953259,-1.144185,-7.521935,6.949095,0.825881,-1.589475,5.842666],[-7.337048,-4.243395,-2.250719,-7.578323,0.475797,9.218774,6.521131,7.301249,7.416401,8.412276,-9.096889,4.624264,4.942210,-6.729306,-6.735443,-8.193140],[-8.400506,6.135453,-0.348230,7.563576,-0.666004,7.565576,1.471614,-1.674483,8.823854,-9.395195,2.288096,5.969469,-4.427281,4.579902,5.759320,-3.579083],[-9.765157,-4.986863,3.397135,-8.850382,9.906778,5.652962,-0.527401,5.016981,4.378924,2.212361,4.094527,-9.688781,-8.843748,-5.000132,2.283469,2.803295],[1.608256,4.584039,-8.230273,-2.761117,1.752126,-5.156604,8.512639,6.053143,4.698469,2.559759,5.149387,-4.228449,4.710293,-8.622786,4.903050,-4.182796]]], dtype = "float64")#candidate|5051|(13, 5, 16)|const|float64
bop_5052 = relay.mod(const_5050.astype('float64'), relay.reshape(const_5051.astype('float64'), relay.shape_of(const_5050))) # shape=(13, 5, 16)
var_5055 = relay.var("var_5055", dtype = "float64", shape = (13, 5, 16))#candidate|5055|(13, 5, 16)|var|float64
bop_5056 = relay.right_shift(const_5051.astype('int32'), relay.reshape(var_5055.astype('int32'), relay.shape_of(const_5051))) # shape=(13, 5, 16)
func_1033_call = mod.get_global_var('func_1033')
func_1037_call = mutated_mod.get_global_var('func_1037')
var_5060 = relay.var("var_5060", dtype = "float32", shape = (624,))#candidate|5060|(624,)|var|float32
var_5061 = relay.var("var_5061", dtype = "float64", shape = (864,))#candidate|5061|(864,)|var|float64
call_5059 = relay.TupleGetItem(func_1033_call(relay.reshape(var_5060.astype('float32'), [8, 13, 6]), relay.reshape(var_5061.astype('float64'), [864,]), ), 2)
call_5062 = relay.TupleGetItem(func_1037_call(relay.reshape(var_5060.astype('float32'), [8, 13, 6]), relay.reshape(var_5061.astype('float64'), [864,]), ), 2)
output = relay.Tuple([bop_5052,bop_5056,call_5059,var_5060,var_5061,])
output2 = relay.Tuple([bop_5052,bop_5056,call_5062,var_5060,var_5061,])
func_5071 = relay.Function([var_5055,var_5060,var_5061,], output)
mod['func_5071'] = func_5071
mod = relay.transform.InferType()(mod)
mutated_mod['func_5071'] = func_5071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5071_call = mutated_mod.get_global_var('func_5071')
var_5073 = relay.var("var_5073", dtype = "float64", shape = (13, 5, 16))#candidate|5073|(13, 5, 16)|var|float64
var_5074 = relay.var("var_5074", dtype = "float32", shape = (624,))#candidate|5074|(624,)|var|float32
var_5075 = relay.var("var_5075", dtype = "float64", shape = (864,))#candidate|5075|(864,)|var|float64
call_5072 = func_5071_call(var_5073,var_5074,var_5075,)
output = call_5072
func_5076 = relay.Function([var_5073,var_5074,var_5075,], output)
mutated_mod['func_5076'] = func_5076
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1836_call = mod.get_global_var('func_1836')
func_1837_call = mutated_mod.get_global_var('func_1837')
call_5084 = relay.TupleGetItem(func_1836_call(), 1)
call_5085 = relay.TupleGetItem(func_1837_call(), 1)
var_5086 = relay.var("var_5086", dtype = "int8", shape = (11, 11, 6))#candidate|5086|(11, 11, 6)|var|int8
bop_5087 = relay.equal(call_5084.astype('bool'), relay.reshape(var_5086.astype('bool'), relay.shape_of(call_5084))) # shape=(11, 11, 6)
bop_5090 = relay.equal(call_5085.astype('bool'), relay.reshape(var_5086.astype('bool'), relay.shape_of(call_5085))) # shape=(11, 11, 6)
output = bop_5087
output2 = bop_5090
func_5093 = relay.Function([var_5086,], output)
mod['func_5093'] = func_5093
mod = relay.transform.InferType()(mod)
var_5094 = relay.var("var_5094", dtype = "int8", shape = (11, 11, 6))#candidate|5094|(11, 11, 6)|var|int8
output = func_5093(var_5094)
func_5095 = relay.Function([var_5094], output)
mutated_mod['func_5095'] = func_5095
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5193 = relay.var("var_5193", dtype = "float32", shape = (10, 15, 5))#candidate|5193|(10, 15, 5)|var|float32
uop_5194 = relay.sin(var_5193.astype('float32')) # shape=(10, 15, 5)
output = uop_5194
output2 = uop_5194
F = relay.Function([var_5193,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_5193,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

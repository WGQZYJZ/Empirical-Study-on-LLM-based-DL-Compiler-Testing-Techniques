==========mod==========
#[version = "0.0.5"]
def @func_11760(%var_11744: float64, %var_11745: Tensor[(7, 15, 7), float64]) -> (Tensor[(7, 15, 7), float64], Tensor[(16, 13, 9), float32]) {
  %0 = cast(%var_11744, dtype="float64") /* ty=float64 */;
  %1 = cast(%var_11745, dtype="float64") /* ty=Tensor[(7, 15, 7), float64] */;
  %2 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %3 = multiply(%0, %1) /* ty=Tensor[(7, 15, 7), float64] */;
  %4 = %2.0;
  (%3, %4)
}

def @func_8428() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %5 = @func_7557() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %6 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %7 = %5.2;
  %8 = %6.0;
  (%7, %8)
}

def @func_6897() -> Tensor[(9, 7, 2), float32] {
  %9 = cast(meta[relay.Constant][0] /* ty=Tensor[(9, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
  cos(%9) /* ty=Tensor[(9, 7, 2), float32] */
}

def @func_17832(%var_17818: Tensor[(264), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(264), float32]) {
  %10 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %11 = cast(meta[relay.Constant][1] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %12 = cast(%var_17818, dtype="float32") /* ty=Tensor[(264), float32] */;
  %13 = reshape(%11, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %14 = reshape(%12, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %15 = @func_2469(%13, %14) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
  %16 = %10.0;
  %17 = %15.1;
  (%16, %17, meta[relay.Constant][1] /* ty=Tensor[(3136), float32] */, %var_17818)
}

def @func_22532(%var_22523: Tensor[(735), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(735), uint16]) {
  %18 = @func_13421() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %19 = @func_18369() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], float64, Tensor[(735), float64]) */;
  %20 = %19.3;
  %21 = cast(%var_22523, dtype="uint16") /* ty=Tensor[(735), uint16] */;
  %22 = shape_of(%20, dtype="int32") /* ty=Tensor[(1), int32] */;
  %23 = cast(%20, dtype="uint16") /* ty=Tensor[(735), uint16] */;
  %24 = dyn.reshape(%21, %22, newshape=[]) /* ty=Tensor[(?), uint16] */;
  %25 = %18.0;
  %26 = left_shift(%23, %24) /* ty=Tensor[(735), uint16] */;
  (%25, %26)
}

def @func_24736() -> (Tensor[(16, 13, 9), float32],) {
  %27 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %28 = %27.0;
  (%28,)
}

def @func_22243() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %29 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %30 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %31 = %29.1;
  %32 = %30.1;
  %33 = @func_12292() /* ty=Tensor[(16, 13, 9), float32] */;
  (%31, %32, %33)
}

def @func_23535() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %34 = @func_13736() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %35 = @func_19541() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) */;
  %36 = @func_13613() /* ty=Tensor[(16, 13, 9), float32] */;
  %37 = %34.0;
  %38 = %35.0;
  %39 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
  %40 = @func_16234() /* ty=Tensor[(16, 13, 9), float64] */;
  (%36, %37, %38, %39, %40)
}

def @func_27245() -> (Tensor[(14, 4, 8), uint16],) {
  %41 = @func_9442() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%41,)
}

def @func_4611() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %42 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %45 = sin(%44) /* ty=Tensor[(16, 13, 9), float32] */;
  %46 = cast(%45, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %47 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %48 = log(%46) /* ty=Tensor[(16, 13, 9), float32] */;
  (%47, %48)
}

def @func_19687() -> (Tensor[(16, 13, 9), float32], Tensor[(2, 11, ?), bool], Tensor[(22), float32]) {
  %49 = cast(meta[relay.Constant][2] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
  %50 = reshape(%49, newshape=[2, 11, 1]) /* ty=Tensor[(2, 11, 1), float32] */;
  %51 = @func_7708(%50) /* ty=(Tensor[(2, 11, ?), bool],) */;
  %52 = @func_10788() /* ty=Tensor[(16, 13, 9), float32] */;
  %53 = %51.0;
  (%52, %53, meta[relay.Constant][2] /* ty=Tensor[(22), float32] */)
}

def @func_11216() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %54 = @func_9176() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %55 = %54.0;
  %56 = @func_6935() /* ty=Tensor[(16, 13, 9), float64] */;
  (%55, %56)
}

def @func_8876() -> Tensor[(16, 13, 9), float32] {
  %57 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %57.0
}

def @func_4351() -> (Tensor[(16, 13, 9), float32],) {
  %58 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%58,)
}

def @func_14317() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %59 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %60 = @func_12732() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %61 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %62 = %59.2;
  %63 = %60.1;
  %64 = %61.1;
  (%62, %63, %64)
}

def @func_14301() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %65 = @func_11431() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %66 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %67 = %65.0;
  %68 = %66.0;
  (%67, %68)
}

def @func_26859() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(26), float64], Tensor[(16, 13, 9), float32]) {
  %69 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %70 = cast(meta[relay.Constant][3] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %71 = reshape(%70, newshape=[1, 2, 13]) /* ty=Tensor[(1, 2, 13), float64] */;
  %72 = @func_23607(%71) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(?, 2, 13), uint64]) */;
  %73 = @func_18629() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %74 = @func_20089() /* ty=Tensor[(14, 4, 8), uint16] */;
  %75 = @func_14898() /* ty=Tensor[(16, 13, 9), float32] */;
  %76 = %69.0;
  %77 = %72.1;
  %78 = %73.0;
  (%74, %75, %76, %77, meta[relay.Constant][3] /* ty=Tensor[(26), float64] */, %78)
}

def @func_24638(%var_24554: Tensor[(1, 12, 2), uint8], %var_24564: Tensor[(1, 540), uint8]) -> (Tensor[(?, 12, 2), uint8], Tensor[(9, 6, 10), float64], Tensor[(1, 540), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  %79 = cast(%var_24554, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
  %80 = shape_of(meta[relay.Constant][4] /* ty=Tensor[(1, 12, 2), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %81 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 12, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
  %82 = dyn.reshape(%79, %80, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %83 = cast(%var_24564, dtype="uint8") /* ty=Tensor[(1, 540), uint8] */;
  %84 = reshape(%83, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %85 = @func_4413(%84) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %86 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %87 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %88 = @func_20089() /* ty=Tensor[(14, 4, 8), uint16] */;
  %89 = cast(%88, dtype="float32") /* ty=Tensor[(14, 4, 8), float32] */;
  %90 = asinh(%89) /* ty=Tensor[(14, 4, 8), float32] */;
  %91 = cast(%88, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %92 = shape_of(%90, dtype="int32") /* ty=Tensor[(3), int32] */;
  %93 = cast(%90, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %94 = dyn.reshape(%91, %92, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %95 = multiply(%81, %82) /* ty=Tensor[(?, 12, 2), uint8] */;
  %96 = %85.1;
  %97 = %86.0;
  %98 = @func_17457() /* ty=Tensor[(16, 13, 9), float64] */;
  %99 = %87.0;
  %100 = bitwise_xor(%93, %94) /* ty=Tensor[(14, 4, 8), uint16] */;
  (%95, %96, %var_24564, %97, %98, %99, %100)
}

def @func_15835() -> Tensor[(16, 13, 9), float32] {
  %101 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
  %101.1
}

def @func_15688() -> (Tensor[(16, 13, 9), float32],) {
  %102 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %103 = %102.1;
  (%103,)
}

def @func_21807() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %104 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %105 = @func_8244() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %106 = @func_18910() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %107 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  %108 = %104.0;
  %109 = %105.0;
  %110 = %106.0;
  (%107, %108, %109, %110)
}

def @func_11968() -> Tensor[(16, 13, 9), float32] {
  %111 = @func_9307() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %111.0
}

def @func_19399() -> (Tensor[(32), uint16],) {
  %112 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
  %113 = %112.2;
  (%113,)
}

def @func_19381() -> Tensor[(14, 4, 8), uint16] {
  %114 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %114.0
}

def @func_6541() -> Tensor[(14, 4, 8), uint16] {
  %115 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %115.2
}

def @func_18629() -> (Tensor[(16, 13, 9), float32],) {
  %116 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%116,)
}

def @func_15022(%var_15016: float32) -> (Tensor[(1, 7, 14), float32],) {
  %117 = cast(%var_15016, dtype="float32") /* ty=float32 */;
  %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 7, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 14), float32] */;
  %119 = divide(%117, %118) /* ty=Tensor[(1, 7, 14), float32] */;
  (%119,)
}

def @func_19160(%var_19155: Tensor[(360), uint8]) -> (Tensor[(16, 13, 9), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint8]) {
  %120 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %121 = cast(%var_19155, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %122 = cast(%var_19155, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %123 = reshape(%121, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint8] */;
  %124 = reshape(%122, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint8] */;
  %125 = %120.0;
  %126 = @func_14237(%123, %124) /* ty=Tensor[(15, 12, 2), bool] */;
  (%125, %126, %var_19155)
}

def @func_12544() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32]) {
  %127 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
  %128 = cast(%127, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %129 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
  %130 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %131 = cos(%128) /* ty=Tensor[(16, 13, 9), float64] */;
  %132 = %129.0;
  %133 = %130.0;
  %134 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
  (%131, %132, %133, %134)
}

def @func_15826() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %135 = @func_8244() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %136 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %137 = @func_14182() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %138 = @func_13212() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %139 = %135.0;
  %140 = %136.0;
  %141 = %137.0;
  %142 = %138.0;
  (%139, %140, %141, %142)
}

def @func_5981(%var_5961: Tensor[(3136), float32], %var_5962: Tensor[(264), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(4, 6, 11), bool], Tensor[(3136), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32]) {
  %143 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %144 = cast(%var_5961, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %145 = cast(%var_5962, dtype="float32") /* ty=Tensor[(264), float32] */;
  %146 = reshape(%144, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %147 = reshape(%145, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %148 = @func_2469(%146, %147) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
  %149 = %143.0;
  %150 = %148.3;
  %151 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%149, %150, %var_5961, %var_5962, %151)
}

def @func_6276() -> Tensor[(16, 13, 9), float32] {
  %152 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %152.1
}

def @func_23371() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %153 = @func_10547() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %154 = @func_9141() /* ty=Tensor[(16, 13, 9), float32] */;
  %155 = @func_15835() /* ty=Tensor[(16, 13, 9), float32] */;
  %156 = %153.0;
  (%154, %155, %156)
}

def @func_5011(%var_4995: Tensor[(16, 13, 9), float32]) -> (Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %157 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %158 = %157.0;
  %159 = cast(%var_4995, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
  %160 = shape_of(%158, dtype="int32") /* ty=Tensor[(3), int32] */;
  %161 = cast(%158, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
  %162 = dyn.reshape(%159, %160, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %163 = cast(%158, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %164 = minimum(%161, %162) /* ty=Tensor[(16, 13, 9), uint8] */;
  %165 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  %166 = sinh(%163) /* ty=Tensor[(16, 13, 9), float64] */;
  (%164, %165, %166)
}

def @func_7984() -> (Tensor[(16, 13, 9), uint32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
  %167 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %168 = cast(meta[relay.Constant][6] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %169 = reshape(%168, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %170 = @func_4742(%169) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %171 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %172 = %167.0;
  %173 = %170.0;
  (%171, %172, %173, meta[relay.Constant][6] /* ty=Tensor[(32), uint16] */)
}

def @func_23238() -> (Tensor[(14, 4, 8), uint16], Tensor[(264), float32], Tensor[(9, 7, 2), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float32]) {
  %174 = @func_20510() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32]) */;
  %175 = @func_9647() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) */;
  %176 = cast(meta[relay.Constant][7] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %177 = reshape(%176, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %178 = @func_16566(%177) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %179 = @func_21435() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %180 = %174.2;
  %181 = %175.2;
  %182 = %178.2;
  %183 = %179.0;
  (%180, %181, %182, meta[relay.Constant][7] /* ty=Tensor[(3136), float32] */, %183)
}

def @func_24031() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %184 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %185 = @func_11652() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %186 = @func_13996() /* ty=Tensor[(16, 13, 9), float32] */;
  %187 = %184.1;
  %188 = %185.0;
  (%186, %187, %188)
}

def @func_11483() -> (Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) {
  %189 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %190 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 3136), float32] */, dtype="float32") /* ty=Tensor[(1, 3136), float32] */;
  %191 = reshape(%190, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %192 = @func_6199(%191) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %193 = %189.0;
  %194 = %192.2;
  (%193, %194, meta[relay.Constant][8] /* ty=Tensor[(1, 3136), float32] */)
}

def @func_6263(%var_6254: Tensor[(16, 13, 9), float32]) -> Tensor[(16, 13, 9), bool] {
  %195 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  %196 = cast(%var_6254, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %197 = shape_of(%195, dtype="int32") /* ty=Tensor[(3), int32] */;
  %198 = cast(%195, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %199 = dyn.reshape(%196, %197, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%198, %199) /* ty=Tensor[(16, 13, 9), bool] */
}

def @func_17116() -> (Tensor[(16, 13, 9), float32],) {
  %200 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %201 = %200.0;
  (%201,)
}

def @func_17089() -> Tensor[(16, 13, 9), float64] {
  %202 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %202.0
}

def @func_21125() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %203 = @func_11868() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %204 = @func_13395() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %205 = @func_13212() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %206 = %203.0;
  %207 = %204.1;
  %208 = %205.0;
  (%206, %207, %208)
}

def @func_4909() -> Tensor[(14, 4, 8), uint16] {
  %209 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %209.2
}

def @func_18655() -> (Tensor[(16, 13, 9), float64],) {
  %210 = @func_18408() /* ty=Tensor[(16, 13, 9), float64] */;
  (%210,)
}

def @func_9442() -> Tensor[(14, 4, 8), uint16] {
  %211 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %211.1
}

def @func_4628() -> (Tensor[(16, 13, 9), float32],) {
  %212 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  (%212,)
}

def @func_8572() -> Tensor[(16, 13, 9), float32] {
  @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_14182() -> (Tensor[(16, 13, 9), float32],) {
  %213 = @func_14094() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %214 = %213.0;
  (%214,)
}

def @func_5171() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %215 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %216 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %217 = cast(%216, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %218 = %215.0;
  %219 = log2(%217) /* ty=Tensor[(16, 13, 9), float32] */;
  (%218, %219)
}

def @func_20888() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  %220 = @func_19541() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) */;
  %221 = @func_14455() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %222 = @func_17089() /* ty=Tensor[(16, 13, 9), float64] */;
  %223 = @func_8876() /* ty=Tensor[(16, 13, 9), float32] */;
  %224 = %220.1;
  %225 = %221.0;
  (%222, %223, %224, %225)
}

def @func_19053() -> Tensor[(16, 13, 9), float32] {
  %226 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %226.0
}

def @func_20593() -> (Tensor[(90), uint64],) {
  %227 = @func_13162() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) */;
  %228 = %227.2;
  (%228,)
}

def @func_12047() -> (Tensor[(14, 4, 8), uint16],) {
  %229 = @func_5488() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %230 = %229.12;
  (%230,)
}

def @func_13859() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %231 = @func_9307() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %232 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %233 = @func_12732() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %234 = %231.0;
  %235 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %236 = %232.1;
  %237 = %233.3;
  (%234, %235, %236, %237)
}

def @func_12253() -> Tensor[(16, 13, 9), float32] {
  @func_11968() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_14455() -> (Tensor[(16, 13, 9), float32],) {
  %238 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %239 = %238.0;
  (%239,)
}

def @func_1265(%var_1261: Tensor[(16, 14, 14), float32]) -> Tensor[(16, 14, 14), float32] {
  %240 = cast(%var_1261, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
  %241 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(16, 14, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %242 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
  %243 = dyn.reshape(%240, %241, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_mod(%242, %243) /* ty=Tensor[(16, 14, 14), float32] */
}

def @func_18707() -> (Tensor[(16, 13, 9), float64],) {
  %244 = @func_11483() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) */;
  %245 = %244.0;
  (%245,)
}

def @func_15623() -> Tensor[(16, 13, 9), float32] {
  %246 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %246.1
}

def @func_10817() -> Tensor[(16, 13, 9), float32] {
  @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_21520() -> (Tensor[(16, 13, 9), float32],) {
  %247 = @func_18600() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %248 = %247.0;
  (%248,)
}

def @func_24456() -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %249 = @func_21340() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %250 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %251 = %249.0;
  %252 = %250.0;
  %253 = @func_22287() /* ty=Tensor[(16, 13, 9), float32] */;
  (%251, %252, %253)
}

def @func_25150() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %254 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %255 = @func_14317() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %256 = %254.1;
  %257 = %255.2;
  (%256, %257)
}

def @func_16234() -> Tensor[(16, 13, 9), float64] {
  %258 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %258.0
}

def @func_11195() -> Tensor[(16, 13, 9), float32] {
  @func_4420() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17065() -> (Tensor[(16, 13, 9), float32],) {
  %259 = @func_11431() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %260 = %259.0;
  (%260,)
}

def @func_25655(%var_25628: Tensor[(7, 16, 14), int64]) -> (Tensor[(7, 16, 14), int64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %261 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 1, 14), int64] */, dtype="int64") /* ty=Tensor[(7, 1, 14), int64] */;
  %262 = cast(%var_25628, dtype="int64") /* ty=Tensor[(7, 16, 14), int64] */;
  %263 = @func_24000() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float64], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16]) */;
  %264 = bitwise_or(%261, %262) /* ty=Tensor[(7, 16, 14), int64] */;
  %265 = %263.1;
  %266 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  (%264, %265, %266)
}

def @func_20089() -> Tensor[(14, 4, 8), uint16] {
  %267 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %267.0
}

def @func_6147() -> (Tensor[(16, 13, 9), float64],) {
  %268 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %269 = %268.0;
  (%269,)
}

def @func_24152() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %270 = @func_10927() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %271 = @func_21807() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %272 = %270.0;
  %273 = %271.2;
  (%272, %273)
}

def @func_21595() -> (Tensor[(16, 13, 9), float32],) {
  %274 = @func_14317() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %275 = %274.0;
  (%275,)
}

def @func_17363() -> (Tensor[(16, 13, 9), float32],) {
  %276 = @func_9266() /* ty=Tensor[(16, 13, 9), float32] */;
  (%276,)
}

def @func_25041() -> (Tensor[(16, 13, 9), float32],) {
  %277 = @func_8244() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %278 = %277.0;
  (%278,)
}

def @func_24871() -> (Tensor[(16, 13, 9), float64],) {
  %279 = @func_12797() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %280 = %279.1;
  (%280,)
}

def @func_6889() -> (Tensor[(16, 13, 9), float32],) {
  %281 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %282 = %281.1;
  (%282,)
}

def @func_25922(%var_25790: Tensor[(14, 2, 2), float32], %var_25836: Tensor[(6, 44), float32]) -> (Tensor[(14, 2, 2), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %283 = cast(%var_25790, dtype="float32") /* ty=Tensor[(14, 2, 2), float32] */;
  %284 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %285 = @func_12544() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32]) */;
  %286 = @func_15971() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %287 = cast(meta[relay.Constant][11] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %288 = cast(%var_25836, dtype="float32") /* ty=Tensor[(6, 44), float32] */;
  %289 = reshape(%287, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %290 = reshape(%288, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %291 = @func_2469(%289, %290) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
  %292 = @func_25000() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %293 = @func_18023() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %294 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %295 = log2(%283) /* ty=Tensor[(14, 2, 2), float32] */;
  %296 = %284.0;
  %297 = %285.0;
  %298 = %286.0;
  %299 = %291.1;
  %300 = %292.0;
  %301 = %293.0;
  %302 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  %303 = %294.1;
  (%295, %296, %297, %298, %299, meta[relay.Constant][11] /* ty=Tensor[(3136), float32] */, %var_25836, %300, %301, %302, %303)
}

def @func_5869() -> Tensor[(16, 13, 9), float32] {
  %304 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  %305 = cast(%304, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  atanh(%305) /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_21574() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %306 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %307 = @func_17116() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %308 = @func_20124() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %309 = %306.1;
  %310 = %307.0;
  %311 = %308.0;
  (%309, %310, %311)
}

def @func_6510() -> Tensor[(16, 13, 9), float32] {
  @func_5305() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17548() -> Tensor[(16, 13, 9), float32] {
  @func_16939() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_27050(%var_27033: float64) -> Tensor[(10, 11, 16), float64] {
  %312 = cast(%var_27033, dtype="float64") /* ty=float64 */;
  %313 = cast(meta[relay.Constant][12] /* ty=Tensor[(10, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  floor_mod(%312, %313) /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_19253() -> (Tensor[(16, 13, 9), float32],) {
  %314 = @func_15550() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %315 = %314.1;
  (%315,)
}

def @func_27230() -> (Tensor[(32), uint16],) {
  %316 = @func_19399() /* ty=(Tensor[(32), uint16],) */;
  %317 = %316.0;
  (%317,)
}

def @func_19100(%var_19089: Tensor[(16, 7, 14), bool], %var_19090: Tensor[(16, 7, 14), bool]) -> (Tensor[(16, 7, 14), bool],) {
  %318 = cast(%var_19090, dtype="bool") /* ty=Tensor[(16, 7, 14), bool] */;
  %319 = shape_of(%var_19089, dtype="int32") /* ty=Tensor[(3), int32] */;
  %320 = cast(%var_19089, dtype="bool") /* ty=Tensor[(16, 7, 14), bool] */;
  %321 = dyn.reshape(%318, %319, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %322 = logical_or(%320, %321) /* ty=Tensor[(16, 7, 14), bool] */;
  (%322,)
}

def @func_13129() -> (Tensor[(16, 13, 9), float32], Tensor[(4, 6, 11), float64], Tensor[(3136), float32], Tensor[(264), float32]) {
  %323 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %324 = cast(meta[relay.Constant][13] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %325 = cast(meta[relay.Constant][14] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %326 = reshape(%324, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %327 = reshape(%325, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %328 = @func_2469(%326, %327) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
  %329 = %323.0;
  %330 = %328.4;
  (%329, %330, meta[relay.Constant][13] /* ty=Tensor[(3136), float32] */, meta[relay.Constant][14] /* ty=Tensor[(264), float32] */)
}

def @func_10619(%var_10612: Tensor[(14, 4, 8), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8]) {
  %331 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %332 = @func_5488() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %333 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %334 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %335 = %334.0;
  %336 = cast(%var_10612, dtype="int8") /* ty=Tensor[(14, 4, 8), int8] */;
  %337 = shape_of(%335, dtype="int32") /* ty=Tensor[(3), int32] */;
  %338 = cast(%335, dtype="int8") /* ty=Tensor[(14, 4, 8), int8] */;
  %339 = dyn.reshape(%336, %337, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %340 = %331.0;
  %341 = %332.4;
  %342 = %333.0;
  %343 = bitwise_and(%338, %339) /* ty=Tensor[(14, 4, 8), int8] */;
  (%340, %341, %342, %343)
}

def @func_16862() -> (Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  %344 = @func_13162() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) */;
  %345 = %344.1;
  %346 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  %347 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%345, %346, %347)
}

def @func_8063() -> Tensor[(16, 13, 9), float32] {
  @func_6953() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_7756() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %348 = @func_4628() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %349 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %350 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %351 = %348.0;
  %352 = %349.1;
  %353 = %350.0;
  (%351, %352, %353)
}

def @func_20510() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32]) {
  %354 = @func_15826() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %355 = @func_9335() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %356 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %357 = cast(meta[relay.Constant][15] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %358 = reshape(%357, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %359 = @func_16788(%358) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %360 = %354.0;
  %361 = %355.2;
  %362 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
  %363 = %356.1;
  %364 = %359.4;
  (%360, %361, %362, %363, %364, meta[relay.Constant][15] /* ty=Tensor[(3136), float32] */)
}

def @func_18932() -> Tensor[(16, 13, 9), float32] {
  %365 = @func_18629() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %365.0
}

def @func_11604(%var_11572: Tensor[(12, 2, 6), float32]) -> Tensor[(12, 2, 6), float64] {
  %366 = cast(%var_11572, dtype="float32") /* ty=Tensor[(12, 2, 6), float32] */;
  %367 = log10(%366) /* ty=Tensor[(12, 2, 6), float32] */;
  %368 = cast(%367, dtype="float64") /* ty=Tensor[(12, 2, 6), float64] */;
  %369 = shape_of(%var_11572, dtype="int32") /* ty=Tensor[(3), int32] */;
  %370 = cast(%var_11572, dtype="float64") /* ty=Tensor[(12, 2, 6), float64] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%370, %371) /* ty=Tensor[(12, 2, 6), float64] */
}

def @func_21056() -> Tensor[(16, 13, 9), float32] {
  %372 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %372.0
}

def @func_21690(%var_21644: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  %373 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %374 = cast(%var_21644, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %375 = reshape(%374, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %376 = @func_11811(%375) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %377 = %373.2;
  %378 = %376.1;
  %379 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
  (%377, %378, %var_21644, %379)
}

def @func_23449() -> (Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) {
  %380 = @func_12430() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
  %381 = %380.0;
  %382 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%381, %382)
}

def @func_9647() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) {
  %383 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %384 = cast(meta[relay.Constant][16] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %385 = reshape(%384, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %386 = @func_5894(%385) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) */;
  %387 = %383.1;
  %388 = %386.0;
  (%387, %388, meta[relay.Constant][16] /* ty=Tensor[(264), float32] */)
}

def @func_14006() -> Tensor[(16, 13, 9), float64] {
  %389 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %389.1
}

def @func_18910() -> (Tensor[(16, 13, 9), float32],) {
  %390 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  (%390,)
}

def @func_16910() -> (Tensor[(16, 13, 9), float32],) {
  %391 = @func_15937() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %392 = %391.0;
  (%392,)
}

def @func_5271() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %393 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %394 = %393.0;
  %395 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  (%394, %395)
}

def @func_22287() -> Tensor[(16, 13, 9), float32] {
  @func_12292() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_3124(%var_3114: Tensor[(1, 4, 8), uint16]) -> (Tensor[(14, 4, 8), uint16],) {
  %396 = cast(%var_3114, dtype="uint16") /* ty=Tensor[(1, 4, 8), uint16] */;
  %397 = cast(meta[relay.Constant][17] /* ty=Tensor[(14, 4, 8), uint16] */, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %398 = maximum(%396, %397) /* ty=Tensor[(14, 4, 8), uint16] */;
  (%398,)
}

def @func_7082() -> (Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) {
  %399 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %400 = cast(meta[relay.Constant][18] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %401 = reshape(%400, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %402 = @func_4413(%401) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %403 = %399.0;
  %404 = %402.1;
  (%403, %404, meta[relay.Constant][18] /* ty=Tensor[(540), uint8] */)
}

def @func_6436() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %405 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
  %406 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %407 = %406.0;
  %408 = cast(%407, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %409 = shape_of(%405, dtype="int32") /* ty=Tensor[(3), int32] */;
  %410 = cast(%405, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %411 = dyn.reshape(%408, %409, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %412 = @func_5171() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %413 = floor_mod(%410, %411) /* ty=Tensor[(16, 13, 9), float64] */;
  %414 = %412.0;
  (%413, %414)
}

def @func_22793() -> Tensor[(16, 13, 9), float32] {
  %415 = @func_14455() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %415.0
}

def @func_17444(%var_17436: Tensor[(6, 5, 3), uint64]) -> Tensor[(6, 5, 3), uint8] {
  %416 = @func_13162() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) */;
  %417 = %416.1;
  %418 = cast(%var_17436, dtype="uint8") /* ty=Tensor[(6, 5, 3), uint8] */;
  %419 = shape_of(%417, dtype="int32") /* ty=Tensor[(3), int32] */;
  %420 = cast(%417, dtype="uint8") /* ty=Tensor[(6, 5, 3), uint8] */;
  %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%420, %421) /* ty=Tensor[(6, 5, 3), uint8] */
}

def @func_18023() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %422 = @func_16490() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %423 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %424 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %425 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %426 = %422.0;
  %427 = %423.1;
  %428 = %424.0;
  %429 = %425.0;
  (%426, %427, %428, %429)
}

def @func_17020() -> Tensor[(16, 13, 9), float32] {
  %430 = @func_5171() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %430.1
}

def @func_16965() -> (Tensor[(14, 4, 8), uint16],) {
  %431 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %432 = %431.0;
  (%432,)
}

def @func_27364() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %433 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %434 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %435 = %433.1;
  %436 = %434.0;
  (%435, %436)
}

def @func_27470() -> (Tensor[(16, 13, 9), float32],) {
  %437 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %438 = %437.0;
  (%438,)
}

def @func_11547() -> Tensor[(16, 13, 9), float32] {
  %439 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %439.1
}

def @func_14237(%var_14226: Tensor[(15, 12, 2), uint8], %var_14227: Tensor[(15, 12, 2), uint8]) -> Tensor[(15, 12, 2), bool] {
  %440 = cast(%var_14227, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
  %441 = shape_of(%var_14226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %442 = cast(%var_14226, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
  %443 = dyn.reshape(%440, %441, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%442, %443) /* ty=Tensor[(15, 12, 2), bool] */
}

def @func_27753() -> (Tensor[(9, 6, 10), float64],) {
  %444 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
  %445 = %444.0;
  (%445,)
}

def @func_27083() -> (Tensor[(16, 13, 9), float32],) {
  %446 = @func_24031() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %447 = %446.2;
  (%447,)
}

def @func_6957() -> (Tensor[(14, 4, 8), uint16],) {
  %448 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%448,)
}

def @func_23816(%var_23803: float32) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(1, 7, 14), float32], float32) {
  %449 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %450 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
  %451 = cast(%var_23803, dtype="float32") /* ty=float32 */;
  %452 = reshape(%451, newshape=[]) /* ty=float32 */;
  %453 = @func_15022(%452) /* ty=(Tensor[(1, 7, 14), float32],) */;
  %454 = %449.1;
  %455 = %450.0;
  %456 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
  %457 = %453.0;
  (%454, %455, %456, %457, %var_23803)
}

def @func_13658() -> (Tensor[(3136), float32],) {
  %458 = @func_11483() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) */;
  %459 = %458.1;
  (%459,)
}

def @func_26241() -> (Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) {
  %460 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
  %461 = %460.0;
  %462 = @func_8572() /* ty=Tensor[(16, 13, 9), float32] */;
  (%461, %462)
}

def @func_17386() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %463 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %464 = %463.0;
  %465 = @func_14006() /* ty=Tensor[(16, 13, 9), float64] */;
  (%464, %465)
}

def @func_10523(%var_10466: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) {
  %466 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %467 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
  %468 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %469 = cast(%var_10466, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %470 = reshape(%469, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %471 = @func_6679(%470) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %472 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %473 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %474 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %475 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
  %476 = @func_8876() /* ty=Tensor[(16, 13, 9), float32] */;
  %477 = %466.0;
  %478 = %467.0;
  %479 = %468.0;
  %480 = %471.2;
  %481 = %472.1;
  %482 = %473.0;
  %483 = %474.1;
  (%475, %476, %477, %478, %479, %480, %var_10466, %481, %482, %483)
}

def @func_26146() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %484 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %485 = @func_16417() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %486 = %484.1;
  %487 = %485.0;
  (%486, %487)
}

def @func_10037() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %488 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %489 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %490 = %488.0;
  %491 = %489.0;
  (%490, %491)
}

def @func_4873() -> (Tensor[(16, 13, 9), float64],) {
  %492 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %493 = %492.0;
  %494 = cast(%493, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %495 = rsqrt(%494) /* ty=Tensor[(16, 13, 9), float64] */;
  (%495,)
}

def @func_12732() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %496 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %497 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %498 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %499 = @func_9141() /* ty=Tensor[(16, 13, 9), float32] */;
  %500 = %496.0;
  %501 = %497.0;
  %502 = %498.0;
  (%499, %500, %501, %502)
}

def @func_16490() -> (Tensor[(14, 4, 8), uint16],) {
  %503 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %504 = %503.0;
  (%504,)
}

def @func_19458() -> (Tensor[(16, 13, 9), float64],) {
  %505 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %506 = %505.1;
  (%506,)
}

def @func_8673() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %507 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %508 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %509 = %507.0;
  %510 = %508.0;
  (%509, %510)
}

def @func_7338() -> (Tensor[(16, 13, 9), float32],) {
  %511 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  (%511,)
}

def @func_9266() -> Tensor[(16, 13, 9), float32] {
  %512 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %512.0
}

def @func_9394() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %513 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %514 = %513.0;
  %515 = @func_5305() /* ty=Tensor[(16, 13, 9), float32] */;
  (%514, %515)
}

def @func_24401() -> (Tensor[(16, 13, 9), float32],) {
  %516 = @func_12732() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %517 = %516.1;
  (%517,)
}

def @func_25224() -> (Tensor[(16, 13, 9), float32],) {
  %518 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %519 = %518.1;
  (%519,)
}

def @func_5765() -> (Tensor[(16, 13, 9), float64],) {
  %520 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %521 = %520.0;
  (%521,)
}

def @func_20960() -> (Tensor[(16, 13, 9), float64],) {
  %522 = @func_13259() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %523 = %522.1;
  (%523,)
}

def @func_4166() -> Tensor[(16, 13, 9), float32] {
  %524 = cast(meta[relay.Constant][19] /* ty=Tensor[(16, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  sqrt(%524) /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_4420() -> Tensor[(16, 13, 9), float32] {
  @func_4166() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5691() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %525 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %526 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %527 = %526.0;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %529 = %525.0;
  %530 = asinh(%528) /* ty=Tensor[(16, 13, 9), float64] */;
  (%529, %530)
}

def @func_19293() -> (Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %531 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %532 = @func_15550() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %533 = %531.0;
  %534 = %532.1;
  %535 = @func_16880() /* ty=Tensor[(16, 13, 9), float32] */;
  (%533, %534, %535)
}

def @func_22593() -> (Tensor[(16, 13, 9), uint32], Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64]) {
  %536 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %537 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %538 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %539 = %536.0;
  %540 = %537.0;
  (%538, %539, %540)
}

def @func_6199(%var_6195: Tensor[(3136), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
  %541 = cast(%var_6195, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %542 = reshape(%541, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %543 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  %544 = @func_1265(%542) /* ty=Tensor[(16, 14, 14), float32] */;
  (%543, %544, %var_6195)
}

def @func_6290(%var_6284: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %545 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %546 = cast(%var_6284, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %547 = reshape(%546, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %548 = @func_6199(%547) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %549 = %545.0;
  %550 = %548.2;
  (%549, %550, %var_6284)
}

def @func_10788() -> Tensor[(16, 13, 9), float32] {
  %551 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %551.0
}

def @func_12562() -> (Tensor[(16, 13, 9), float32],) {
  %552 = @func_12228() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %553 = %552.0;
  (%553,)
}

def @func_8185() -> Tensor[(16, 13, 9), float32] {
  %554 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %554.1
}

def @func_21435() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %555 = @func_16490() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %556 = @func_18998() /* ty=Tensor[(16, 13, 9), float32] */;
  %557 = %555.0;
  (%556, %557)
}

def @func_18408() -> Tensor[(16, 13, 9), float64] {
  %558 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %558.0
}

def @func_6005() -> (Tensor[(16, 13, 9), float32],) {
  %559 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %560 = %559.0;
  (%560,)
}

def @func_10061() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) {
  %561 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %562 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %563 = %562.1;
  %564 = cast(%563, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %565 = reshape(%564, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint32] */;
  %566 = @func_9977(%565) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) */;
  %567 = %561.0;
  %568 = %566.0;
  (%567, %563, %568)
}

def @func_9105(%var_9071: Tensor[(15, 6), uint64], %var_9094: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), int32], Tensor[(6, 5, 3), uint64], Tensor[(15, 6), uint64], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) {
  %569 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %570 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %571 = %570.0;
  %572 = cast(meta[relay.Constant][20] /* ty=Tensor[(14, 4, 8), uint16] */, dtype="int32") /* ty=Tensor[(14, 4, 8), int32] */;
  %573 = shape_of(%571, dtype="int32") /* ty=Tensor[(3), int32] */;
  %574 = cast(%571, dtype="int32") /* ty=Tensor[(14, 4, 8), int32] */;
  %575 = dyn.reshape(%572, %573, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %576 = cast(%var_9071, dtype="uint64") /* ty=Tensor[(15, 6), uint64] */;
  %577 = reshape(%576, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %578 = cast(%var_9094, dtype="float32") /* ty=Tensor[(42), float32] */;
  %579 = reshape(%578, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), float32] */;
  %580 = @func_2173(%579) /* ty=(Tensor[(6, 1, 7), float32],) */;
  %581 = %569.1;
  %582 = multiply(%574, %575) /* ty=Tensor[(14, 4, 8), int32] */;
  %583 = @func_4377(%577) /* ty=Tensor[(6, 5, 3), uint64] */;
  %584 = %580.0;
  (%581, %582, %583, %var_9071, %584, %var_9094)
}

def @func_6119() -> Tensor[(16, 13, 9), float32] {
  %585 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %585.1
}

def @func_11811(%var_11789: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %586 = @func_9335() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %587 = cast(%var_11789, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %588 = reshape(%587, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %589 = @func_6679(%588) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %590 = %586.2;
  %591 = %589.1;
  (%590, %591, %var_11789)
}

def @func_7850() -> (Tensor[(16, 13, 9), float32],) {
  %592 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %593 = %592.0;
  (%593,)
}

def @func_17004() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %594 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %595 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
  %596 = %594.0;
  (%595, %596)
}

def @func_13395() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  %597 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %598 = @func_12797() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %599 = @func_12047() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %600 = %597.0;
  %601 = %598.1;
  %602 = %599.0;
  (%600, %601, %602)
}

def @func_16196(%var_16133: Tensor[(448), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8], Tensor[(448), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %603 = @func_15151() /* ty=(Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %604 = cast(%var_16133, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %605 = reshape(%604, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), uint16] */;
  %606 = @func_10619(%605) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8]) */;
  %607 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %608 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %609 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %610 = @func_12848() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %611 = %603.1;
  %612 = %606.3;
  %613 = %607.0;
  %614 = %608.0;
  %615 = %609.1;
  %616 = %610.3;
  (%611, %612, %var_16133, %613, %614, %615, %616)
}

def @func_7537(%var_7533: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) {
  %617 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %618 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %619 = cast(%var_7533, dtype="float32") /* ty=Tensor[(42), float32] */;
  %620 = reshape(%619, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), float32] */;
  %621 = @func_2173(%620) /* ty=(Tensor[(6, 1, 7), float32],) */;
  %622 = %617.0;
  %623 = %618.0;
  %624 = %621.0;
  (%622, %623, %624, %var_7533)
}

def @func_22554() -> Tensor[(32), uint16] {
  %625 = @func_16635() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) */;
  %625.2
}

def @func_18826() -> (Tensor[(16, 13, 9), float32],) {
  %626 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %627 = %626.0;
  (%627,)
}

def @func_13212() -> (Tensor[(16, 13, 9), float32],) {
  %628 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %629 = %628.1;
  (%629,)
}

def @func_14882() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %630 = @func_13736() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %631 = @func_8905() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %632 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %633 = @func_13976() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %634 = @func_11195() /* ty=Tensor[(16, 13, 9), float32] */;
  %635 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  %636 = %630.0;
  %637 = %631.0;
  %638 = %632.0;
  %639 = %633.0;
  (%634, %635, %636, %637, %638, %639)
}

def @func_22047(%var_21982: Tensor[(5, 3, 13), bool], %var_21983: Tensor[(5, 3, 13), bool]) -> (Tensor[(5, 3, 13), bool], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(5, 3, 13), float64], Tensor[(16, 13, 9), float64]) {
  %640 = cast(%var_21983, dtype="bool") /* ty=Tensor[(5, 3, 13), bool] */;
  %641 = shape_of(%var_21982, dtype="int32") /* ty=Tensor[(3), int32] */;
  %642 = cast(%var_21982, dtype="bool") /* ty=Tensor[(5, 3, 13), bool] */;
  %643 = dyn.reshape(%640, %641, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %644 = @func_21574() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %645 = cast(%var_21983, dtype="float32") /* ty=Tensor[(5, 3, 13), float32] */;
  %646 = log10(%645) /* ty=Tensor[(5, 3, 13), float32] */;
  %647 = cast(%var_21982, dtype="int16") /* ty=Tensor[(5, 3, 13), int16] */;
  %648 = shape_of(%646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %649 = cast(%646, dtype="int16") /* ty=Tensor[(5, 3, 13), int16] */;
  %650 = dyn.reshape(%647, %648, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %651 = bitwise_xor(%649, %650) /* ty=Tensor[(5, 3, 13), int16] */;
  %652 = cast(%651, dtype="float64") /* ty=Tensor[(5, 3, 13), float64] */;
  %653 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %654 = logical_and(%642, %643) /* ty=Tensor[(5, 3, 13), bool] */;
  %655 = @func_8045() /* ty=Tensor[(16, 12, 6), float32] */;
  %656 = @func_19170() /* ty=Tensor[(16, 13, 9), float32] */;
  %657 = %644.0;
  %658 = atanh(%652) /* ty=Tensor[(5, 3, 13), float64] */;
  %659 = %653.0;
  (%654, %655, %656, %657, %658, %659)
}

def @func_9307() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %660 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %661 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %662 = %660.0;
  %663 = %661.3;
  (%662, %663)
}

def @func_12848() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %664 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %665 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %666 = @func_12430() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
  %667 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %668 = %664.0;
  %669 = %665.0;
  %670 = %666.1;
  %671 = %667.1;
  (%668, %669, %670, %671)
}

def @func_25395() -> (Tensor[(16, 13, 9), float64],) {
  %672 = @func_19458() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %673 = %672.0;
  (%673,)
}

def @func_25612() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %674 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %675 = %674.0;
  %676 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  (%675, %676)
}

def @func_15550() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %677 = @func_12228() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %678 = @func_13613() /* ty=Tensor[(16, 13, 9), float32] */;
  %679 = %677.0;
  (%678, %679)
}

def @func_13162() -> (Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) {
  %680 = @func_10037() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %681 = cast(meta[relay.Constant][21] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %682 = reshape(%681, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %683 = %680.0;
  %684 = @func_4377(%682) /* ty=Tensor[(6, 5, 3), uint64] */;
  (%683, %684, meta[relay.Constant][21] /* ty=Tensor[(90), uint64] */)
}

def @func_11844() -> (Tensor[(14, 4, 8), uint16],) {
  %685 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%685,)
}

def @func_5230() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %686 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %687 = %686.1;
  %688 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  (%687, %688)
}

def @func_8045() -> Tensor[(16, 12, 6), float32] {
  %689 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 6), float32] */;
  asin(%689) /* ty=Tensor[(16, 12, 6), float32] */
}

def @func_9817() -> Tensor[(16, 13, 9), float32] {
  @func_9141() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_8244() -> (Tensor[(16, 13, 9), float32],) {
  %690 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %691 = %690.1;
  (%691,)
}

def @func_10163() -> (Tensor[(16, 13, 9), float64],) {
  %692 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %693 = %692.0;
  (%693,)
}

def @func_12292() -> Tensor[(16, 13, 9), float32] {
  @func_8572() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_15499(%var_15462: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), float32], Tensor[(264), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %694 = @func_11688() /* ty=Tensor[(14, 4, 8), uint16] */;
  %695 = cast(%var_15462, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%694, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %699 = minimum(%697, %698) /* ty=Tensor[(14, 4, 8), uint16] */;
  %700 = cast(%699, dtype="float32") /* ty=Tensor[(14, 4, 8), float32] */;
  %701 = cast(meta[relay.Constant][23] /* ty=Tensor[(6, 44), float32] */, dtype="float32") /* ty=Tensor[(6, 44), float32] */;
  %702 = reshape(%701, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %703 = @func_5894(%702) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) */;
  %704 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %705 = %704.0;
  %706 = cast(%705, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %707 = reshape(%706, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %708 = @func_7192(%707) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %709 = tan(%700) /* ty=Tensor[(14, 4, 8), float32] */;
  %710 = %703.1;
  %711 = %708.0;
  (%709, %710, meta[relay.Constant][23] /* ty=Tensor[(6, 44), float32] */, %705, %711)
}

def @func_4816(%var_4795: Tensor[(3, 7, 1), float32]) -> (Tensor[(3, 7, 1), float32], Tensor[(16, 13, 9), float32]) {
  %712 = cast(%var_4795, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %713 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %714 = sigmoid(%712) /* ty=Tensor[(3, 7, 1), float32] */;
  %715 = %713.1;
  (%714, %715)
}

def @func_21340() -> (Tensor[(16, 13, 9), float64],) {
  %716 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %717 = %716.0;
  (%717,)
}

def @func_13518() -> (Tensor[(15, 15, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(15, 15, 16), float64]) {
  %718 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 16), float64] */;
  %719 = cast(meta[relay.Constant][25] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %720 = reshape(%719, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %721 = cast(meta[relay.Constant][24] /* ty=Tensor[(15, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 16), float64] */;
  %722 = asin(%721) /* ty=Tensor[(15, 15, 16), float64] */;
  %723 = cast(%722, dtype="float64") /* ty=Tensor[(15, 15, 16), float64] */;
  %724 = erf(%718) /* ty=Tensor[(15, 15, 16), float64] */;
  %725 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
  %726 = @func_1265(%720) /* ty=Tensor[(16, 14, 14), float32] */;
  %727 = rsqrt(%723) /* ty=Tensor[(15, 15, 16), float64] */;
  (%724, %725, %726, meta[relay.Constant][25] /* ty=Tensor[(3136), float32] */, %727)
}

def @func_22306() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %728 = @func_7082() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) */;
  %729 = @func_11506() /* ty=Tensor[(16, 13, 9), float32] */;
  %730 = %728.0;
  %731 = @func_18731() /* ty=Tensor[(16, 13, 9), float32] */;
  (%729, %730, %731)
}

def @func_21780() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %732 = @func_14129() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) */;
  %733 = %732.1;
  %734 = @func_19170() /* ty=Tensor[(16, 13, 9), float32] */;
  %735 = @func_13932() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%733, %734, %735)
}

def @func_23341() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %736 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %737 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %738 = %736.0;
  %739 = %737.0;
  %740 = @func_10788() /* ty=Tensor[(16, 13, 9), float32] */;
  (%738, %739, %740)
}

def @func_23737() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) {
  %741 = @func_17457() /* ty=Tensor[(16, 13, 9), float64] */;
  %742 = @func_6935() /* ty=Tensor[(16, 13, 9), float64] */;
  (%741, %742)
}

def @func_15586() -> (Tensor[(16, 13, 9), float32],) {
  %743 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %744 = %743.1;
  (%744,)
}

def @func_4752() -> (Tensor[(16, 13, 9), float32],) {
  %745 = @func_4628() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %746 = %745.0;
  (%746,)
}

def @func_17408() -> Tensor[(16, 13, 9), float32] {
  %747 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %747.1
}

def @func_11907(%var_11897: Tensor[(4, 5, 11), float64]) -> (Tensor[(4, 5, 11), float64], Tensor[(9, 7, 2), float32]) {
  %748 = cast(%var_11897, dtype="float64") /* ty=Tensor[(4, 5, 11), float64] */;
  %749 = sin(%748) /* ty=Tensor[(4, 5, 11), float64] */;
  %750 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
  (%749, %750)
}

def @func_19987() -> Tensor[(16, 13, 9), float32] {
  @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5926() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %751 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  %752 = cast(%751, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %753 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %754 = atan(%752) /* ty=Tensor[(16, 13, 9), float32] */;
  %755 = %753.1;
  (%754, %755)
}

def @func_11043() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
  %756 = cast(meta[relay.Constant][26] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %757 = reshape(%756, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %758 = @func_6679(%757) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %759 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
  %760 = %758.0;
  (%759, %760, meta[relay.Constant][26] /* ty=Tensor[(32), uint16] */)
}

def @func_15151() -> (Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %761 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %762 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %763 = %761.3;
  %764 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  %765 = %762.1;
  %766 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
  (%763, %764, %765, %766)
}

def @func_18200() -> (Tensor[(16, 13, 9), float32],) {
  %767 = @func_11968() /* ty=Tensor[(16, 13, 9), float32] */;
  (%767,)
}

def @func_4413(%var_4402: Tensor[(9, 6, 10), uint8]) -> (Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) {
  %768 = cast(%var_4402, dtype="float64") /* ty=Tensor[(9, 6, 10), float64] */;
  %769 = cast(%var_4402, dtype="uint8") /* ty=Tensor[(9, 6, 10), uint8] */;
  %770 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(9, 6, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %771 = cast(meta[relay.Constant][27] /* ty=Tensor[(9, 6, 10), uint8] */, dtype="uint8") /* ty=Tensor[(9, 6, 10), uint8] */;
  %772 = dyn.reshape(%769, %770, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %773 = bitwise_or(%771, %772) /* ty=Tensor[(9, 6, 10), uint8] */;
  %774 = cast(%773, dtype="float64") /* ty=Tensor[(9, 6, 10), float64] */;
  %775 = log(%768) /* ty=Tensor[(9, 6, 10), float64] */;
  %776 = rsqrt(%774) /* ty=Tensor[(9, 6, 10), float64] */;
  (%775, %776)
}

def @func_13899() -> Tensor[(16, 13, 9), float32] {
  @func_11398() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_24324() -> Tensor[(16, 13, 9), float64] {
  @func_17457() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_7790() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %777 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %778 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %779 = %777.0;
  %780 = %778.0;
  (%779, %780)
}

def @func_16566(%var_16554: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
  %781 = @func_11868() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %782 = @func_15826() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %783 = cast(%var_16554, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %784 = reshape(%783, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %785 = %781.0;
  %786 = %782.0;
  %787 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
  %788 = @func_1265(%784) /* ty=Tensor[(16, 14, 14), float32] */;
  (%785, %786, %787, %788, %var_16554)
}

def @func_17872(%var_17843: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %789 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %790 = cast(%var_17843, dtype="float32") /* ty=Tensor[(42), float32] */;
  %791 = reshape(%790, newshape=[42]) /* ty=Tensor[(42), float32] */;
  %792 = @func_14534(%791) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32]) */;
  %793 = @func_14182() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %794 = %789.0;
  %795 = %792.1;
  %796 = %793.0;
  %797 = @func_17020() /* ty=Tensor[(16, 13, 9), float32] */;
  (%794, %795, %var_17843, %796, %797)
}

def @func_12797() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %798 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %799 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  %800 = %798.0;
  (%799, %800)
}

def @func_20342() -> Tensor[(16, 13, 9), float32] {
  %801 = @func_14094() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %801.0
}

def @func_26526() -> (Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
  %802 = @func_22243() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %803 = @func_19399() /* ty=(Tensor[(32), uint16],) */;
  %804 = %802.0;
  %805 = %803.0;
  (%804, %805)
}

def @func_13830(%var_13806: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32]) {
  %806 = cast(%var_13806, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %807 = acosh(%806) /* ty=Tensor[(13, 6, 14), float64] */;
  %808 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
  %809 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  (%807, %808, %809)
}

def @func_25000() -> (Tensor[(16, 13, 9), float32],) {
  %810 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %811 = %810.0;
  (%811,)
}

def @func_13996() -> Tensor[(16, 13, 9), float32] {
  %812 = @func_13563() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %812.0
}

def @func_24946() -> (Tensor[(15, 14, 2), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float64], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) {
  %813 = @func_11302() /* ty=(Tensor[(32), uint16],) */;
  %814 = @func_24047() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %815 = cast(meta[relay.Constant][28] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %816 = cast(meta[relay.Constant][28] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
  %817 = reshape(%815, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
  %818 = reshape(%816, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
  %819 = @func_20413(%817, %818) /* ty=(Tensor[(8, 5, 4), float64], Tensor[(16, 13, 9), float32]) */;
  %820 = @func_22867() /* ty=Tensor[(15, 14, 2), float32] */;
  %821 = %813.0;
  %822 = %814.0;
  %823 = %819.0;
  (%820, %821, %822, %823, meta[relay.Constant][28] /* ty=Tensor[(160), float64] */)
}

def @func_11302() -> (Tensor[(32), uint16],) {
  %824 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %825 = %824.3;
  (%825,)
}

def @func_27599() -> (Tensor[(16, 13, 9), float32],) {
  %826 = @func_11652() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %827 = %826.0;
  (%827,)
}

def @func_4836() -> Tensor[(16, 13, 9), float32] {
  %828 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %828.0
}

def @func_23403() -> Tensor[(16, 13, 9), float32] {
  %829 = @func_17363() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %829.0
}

def @func_7400() -> (Tensor[(16, 13, 9), float64],) {
  %830 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %831 = %830.0;
  (%831,)
}

def @func_20124() -> (Tensor[(16, 13, 9), float32],) {
  %832 = @func_12253() /* ty=Tensor[(16, 13, 9), float32] */;
  (%832,)
}

def @func_22410(%var_22348: float64) -> (Tensor[(16, 13, 9), float32], float64, Tensor[(11, 10, ?), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 2), uint16], Tensor[(1, 3136), float32]) {
  %833 = cast(%var_22348, dtype="float64") /* ty=float64 */;
  %834 = reshape(%833, newshape=[]) /* ty=float64 */;
  %835 = @func_19491(%834) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) */;
  %836 = %835.1;
  %837 = cast(%836, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
  %838 = log(%837) /* ty=Tensor[(11, 10, 1), float64] */;
  %839 = cast(%836, dtype="uint8") /* ty=Tensor[(11, 10, 1), uint8] */;
  %840 = shape_of(%838, dtype="int32") /* ty=Tensor[(3), int32] */;
  %841 = cast(%838, dtype="uint8") /* ty=Tensor[(11, 10, 1), uint8] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %843 = @func_20551() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %844 = cast(meta[relay.Constant][29] /* ty=Tensor[(1, 3136), float32] */, dtype="float32") /* ty=Tensor[(1, 3136), float32] */;
  %845 = reshape(%844, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %846 = @func_16788(%845) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %847 = @func_19948() /* ty=Tensor[(16, 13, 9), float32] */;
  %848 = minimum(%841, %842) /* ty=Tensor[(11, 10, ?), uint8] */;
  %849 = %843.0;
  %850 = %846.3;
  (%847, %var_22348, %848, %849, %850, meta[relay.Constant][29] /* ty=Tensor[(1, 3136), float32] */)
}

def @func_20686() -> Tensor[(16, 13, 9), float32] {
  @func_11506() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_26747() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %851 = @func_26641() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %852 = @func_24031() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %853 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %854 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %855 = %851.0;
  %856 = %852.2;
  %857 = %853.0;
  %858 = %854.0;
  (%855, %856, %857, %858)
}

def @func_9176() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %859 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %860 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %861 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %862 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %863 = %859.0;
  %864 = %860.2;
  %865 = %861.0;
  %866 = %862.0;
  (%863, %864, %865, %866)
}

def @func_4503(%var_4475: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %867 = cast(meta[relay.Constant][30] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %868 = reshape(%867, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %869 = @func_4413(%868) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %870 = cast(%var_4475, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %871 = reshape(%870, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %872 = @func_3124(%871) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %873 = cast(%var_4475, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %874 = reshape(%873, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %875 = @func_3124(%874) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %876 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %877 = %869.0;
  %878 = %872.0;
  %879 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %880 = %875.0;
  (%876, %877, meta[relay.Constant][30] /* ty=Tensor[(540), uint8] */, %878, %var_4475, %879, %880)
}

def @func_15223() -> (Tensor[(16, 13, 9), float32],) {
  %881 = @func_11968() /* ty=Tensor[(16, 13, 9), float32] */;
  (%881,)
}

def @func_15274() -> (Tensor[(16, 13, 9), float32],) {
  %882 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %883 = %882.1;
  (%883,)
}

def @func_7927() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %884 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %885 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
  %886 = %884.1;
  (%885, %886)
}

def @func_10376() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %887 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
  %888 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  (%887, %888)
}

def @func_22890() -> Tensor[(16, 13, 9), float32] {
  @func_4166() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19541() -> (Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) {
  %889 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
  %890 = @func_11302() /* ty=(Tensor[(32), uint16],) */;
  %891 = %889.0;
  %892 = %890.0;
  (%891, %892)
}

def @func_13736() -> (Tensor[(16, 13, 9), float32],) {
  %893 = @func_10252() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %894 = %893.0;
  (%894,)
}

def @func_10927() -> (Tensor[(16, 13, 9), float32],) {
  %895 = @func_10788() /* ty=Tensor[(16, 13, 9), float32] */;
  (%895,)
}

def @func_18143() -> Tensor[(16, 13, 9), uint8] {
  %896 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %896.2
}

def @func_5712() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %897 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  %898 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  (%897, %898)
}

def @func_17198() -> Tensor[(16, 13, 9), float32] {
  %899 = @func_17116() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %899.0
}

def @func_19191() -> (Tensor[(16, 13, 9), float64],) {
  %900 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %901 = %900.1;
  (%901,)
}

def @func_19117() -> (Tensor[(14, 4, 8), uint16],) {
  %902 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %903 = %902.0;
  (%903,)
}

def @func_19491(%var_19479: float64) -> (Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) {
  %904 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %905 = cast(%var_19479, dtype="float64") /* ty=float64 */;
  %906 = reshape(%905, newshape=[]) /* ty=float64 */;
  %907 = @func_9663(%906) /* ty=(Tensor[(11, 10, 1), bool],) */;
  %908 = cast(meta[relay.Constant][31] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %909 = reshape(%908, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %910 = @func_6199(%909) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %911 = %904.1;
  %912 = %907.0;
  %913 = %910.2;
  %914 = @func_18807() /* ty=Tensor[(16, 13, 9), float64] */;
  (%911, %912, %var_19479, %913, meta[relay.Constant][31] /* ty=Tensor[(3136), float32] */, %914)
}

def @func_10891(%var_10856: Tensor[(7, 8, 6), float32]) -> (Tensor[(7, 8, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %915 = cast(%var_10856, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %916 = shape_of(meta[relay.Constant][32] /* ty=Tensor[(7, 8, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %917 = cast(meta[relay.Constant][32] /* ty=Tensor[(7, 8, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %918 = dyn.reshape(%915, %916, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %919 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %920 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %921 = divide(%917, %918) /* ty=Tensor[(7, 8, 6), float32] */;
  %922 = %919.0;
  %923 = %920.0;
  (%921, %922, %923)
}

def @func_22715() -> (Tensor[(16, 13, 9), float32],) {
  %924 = @func_15826() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %925 = %924.0;
  (%925,)
}

def @func_4742(%var_4694: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %926 = cast(%var_4694, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %927 = reshape(%926, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %928 = @func_4503(%927) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %929 = %928.4;
  %930 = cast(%929, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %931 = reshape(%930, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %932 = @func_4503(%931) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %933 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %934 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %935 = %932.5;
  %936 = %933.1;
  (%934, %929, %var_4694, %935, %936)
}

def @func_20413(%var_20402: Tensor[(8, 5, 4), float64], %var_20403: Tensor[(8, 5, 4), float64]) -> (Tensor[(8, 5, 4), float64], Tensor[(16, 13, 9), float32]) {
  %937 = cast(%var_20403, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %938 = shape_of(%var_20402, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%var_20402, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %941 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %942 = power(%939, %940) /* ty=Tensor[(8, 5, 4), float64] */;
  %943 = %941.0;
  (%942, %943)
}

def @func_11868() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %944 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %945 = %944.0;
  %946 = @func_9266() /* ty=Tensor[(16, 13, 9), float32] */;
  (%945, %946)
}

def @func_14274() -> (Tensor[(16, 13, 9), float32],) {
  %947 = @func_9817() /* ty=Tensor[(16, 13, 9), float32] */;
  (%947,)
}

def @func_27002() -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32]) {
  %948 = @func_20941() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %949 = @func_23238() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(264), float32], Tensor[(9, 7, 2), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float32]) */;
  %950 = @func_16635() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) */;
  %951 = @func_26241() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
  %952 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
  %953 = %948.0;
  %954 = %949.0;
  %955 = %950.0;
  %956 = %951.1;
  %957 = %952.0;
  (%953, %954, %955, %956, %957)
}

def @func_11652() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %958 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %959 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %960 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  %961 = %958.0;
  %962 = %959.0;
  (%960, %961, %962)
}

def @func_22070() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %963 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %964 = %963.0;
  %965 = @func_14963() /* ty=Tensor[(16, 13, 9), float32] */;
  (%964, %965)
}

def @func_19226(%var_19219: Tensor[(12, 8, 8), float64]) -> Tensor[(12, 8, 8), float64] {
  %966 = cast(%var_19219, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  exp(%966) /* ty=Tensor[(12, 8, 8), float64] */
}

def @func_17457() -> Tensor[(16, 13, 9), float64] {
  %967 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %967.0
}

def @func_26359(%var_26271: float64, %var_26295: Tensor[(21), float32], %var_26350: Tensor[(3, 7, 3), float64]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(11, 10, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3, 7, 3), bool]) {
  %968 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %969 = cast(%var_26271, dtype="float64") /* ty=float64 */;
  %970 = reshape(%969, newshape=[]) /* ty=float64 */;
  %971 = @func_9663(%970) /* ty=(Tensor[(11, 10, 1), bool],) */;
  %972 = %971.0;
  %973 = cast(%972, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
  %974 = cast(%var_26271, dtype="float64") /* ty=float64 */;
  %975 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %976 = cast(%var_26295, dtype="float32") /* ty=Tensor[(21), float32] */;
  %977 = reshape(%976, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
  %978 = @func_4816(%977) /* ty=(Tensor[(3, 7, 1), float32], Tensor[(16, 13, 9), float32]) */;
  %979 = %978.0;
  %980 = cast(%var_26295, dtype="float64") /* ty=Tensor[(21), float64] */;
  %981 = shape_of(%979, dtype="int32") /* ty=Tensor[(3), int32] */;
  %982 = cast(%979, dtype="float64") /* ty=Tensor[(3, 7, 1), float64] */;
  %983 = dyn.reshape(%980, %981, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %984 = mod(%982, %983) /* ty=Tensor[(3, 7, ?), float64] */;
  %985 = cast(%984, dtype="bool") /* ty=Tensor[(3, 7, ?), bool] */;
  %986 = cast(%var_26350, dtype="bool") /* ty=Tensor[(3, 7, 3), bool] */;
  %987 = @func_19381() /* ty=Tensor[(14, 4, 8), uint16] */;
  %988 = %968.0;
  %989 = mod(%973, %974) /* ty=Tensor[(11, 10, 1), float64] */;
  %990 = %975.0;
  %991 = @func_26202() /* ty=Tensor[(16, 13, 9), float32] */;
  %992 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
  %993 = @func_14365() /* ty=Tensor[(16, 13, 9), float32] */;
  %994 = greater(%985, %986) /* ty=Tensor[(3, 7, 3), bool] */;
  (%987, %988, %989, %990, %991, %992, %993, %994)
}

def @func_5060() -> Tensor[(16, 13, 9), float64] {
  %995 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %995.0
}

def @func_27448() -> (Tensor[(16, 13, 9), float32],) {
  %996 = @func_20342() /* ty=Tensor[(16, 13, 9), float32] */;
  (%996,)
}

def @func_5511() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %997 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %998 = %997.0;
  %999 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%998, %999)
}

def @func_12228() -> (Tensor[(16, 13, 9), float32],) {
  %1000 = @func_7850() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1001 = %1000.0;
  (%1001,)
}

def @func_17721() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %1002 = @func_13421() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1003 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1004 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1005 = @func_9647() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) */;
  %1006 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1007 = %1002.0;
  %1008 = %1003.0;
  %1009 = %1004.1;
  %1010 = %1005.1;
  %1011 = %1006.0;
  (%1007, %1008, %1009, %1010, %1011)
}

def @func_5193(%var_5188: Tensor[(4, 8), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(4, 8), uint16]) {
  %1012 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %1013 = cast(%1012, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %1014 = cast(%var_5188, dtype="uint16") /* ty=Tensor[(4, 8), uint16] */;
  %1015 = reshape(%1014, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %1016 = @func_4503(%1015) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1017 = tan(%1013) /* ty=Tensor[(16, 13, 9), float64] */;
  %1018 = %1016.6;
  (%1017, %1018, %var_5188)
}

def @func_16316() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1019 = @func_14963() /* ty=Tensor[(16, 13, 9), float32] */;
  %1020 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1019, %1020)
}

def @func_6623() -> Tensor[(16, 13, 9), uint32] {
  %1021 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1022 = %1021.0;
  %1023 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1024 = %1023.0;
  %1025 = cast(%1024, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1026 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1027 = cast(%1022, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1028 = dyn.reshape(%1025, %1026, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%1027, %1028) /* ty=Tensor[(16, 13, 9), uint32] */
}

def @func_10009() -> Tensor[(16, 13, 9), float32] {
  %1029 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1029.0
}

def @func_13932() -> Tensor[(14, 4, 8), uint16] {
  %1030 = @func_12047() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1030.0
}

def @func_16066(%var_16046: Tensor[(9, 6, 10), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), uint16]) {
  %1031 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1032 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
  %1033 = %1032.0;
  %1034 = cast(%var_16046, dtype="uint16") /* ty=Tensor[(9, 6, 10), uint16] */;
  %1035 = shape_of(%1033, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1036 = cast(%1033, dtype="uint16") /* ty=Tensor[(9, 6, 10), uint16] */;
  %1037 = dyn.reshape(%1034, %1035, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1038 = %1031.0;
  %1039 = logical_xor(%1036, %1037) /* ty=Tensor[(9, 6, 10), uint16] */;
  (%1038, %1039)
}

def @func_18369() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], float64, Tensor[(735), float64]) {
  %1040 = @func_13421() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1041 = cast(-1.67029f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1042 = cast(meta[relay.Constant][33] /* ty=Tensor[(735), float64] */, dtype="float64") /* ty=Tensor[(735), float64] */;
  %1043 = reshape(%1041, newshape=[]) /* ty=float64 */;
  %1044 = reshape(%1042, newshape=[7, 15, 7]) /* ty=Tensor[(7, 15, 7), float64] */;
  %1045 = @func_11760(%1043, %1044) /* ty=(Tensor[(7, 15, 7), float64], Tensor[(16, 13, 9), float32]) */;
  %1046 = %1040.0;
  %1047 = %1045.1;
  (%1046, %1047, -1.67029f64 /* ty=float64 */, meta[relay.Constant][33] /* ty=Tensor[(735), float64] */)
}

def @func_2469(%var_2393: Tensor[(3136), float32], %var_2399: Tensor[(4, 6, 11), float32]) -> (Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) {
  %1048 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(4, 6, 11), float32] */;
  %1049 = cast(%var_2393, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1050 = reshape(%1049, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %1051 = cast(%var_2399, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
  %1052 = shape_of(meta[relay.Constant][34] /* ty=Tensor[(4, 6, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1053 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 6, 11), float32] */, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
  %1054 = dyn.reshape(%1051, %1052, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1055 = cast(meta[relay.Constant][34] /* ty=Tensor[(4, 6, 11), float32] */, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %1056 = acos(%1048) /* ty=Tensor[(4, 6, 11), float32] */;
  %1057 = @func_1265(%1050) /* ty=Tensor[(16, 14, 14), float32] */;
  %1058 = less_equal(%1053, %1054) /* ty=Tensor[(4, 6, 11), bool] */;
  %1059 = atanh(%1055) /* ty=Tensor[(4, 6, 11), float64] */;
  (%1056, %1057, %var_2393, %1058, %1059)
}

def @func_8334() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1060 = @func_7557() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1061 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1062 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1063 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1064 = %1060.0;
  %1065 = %1061.0;
  %1066 = %1062.0;
  %1067 = %1063.0;
  (%1064, %1065, %1066, %1067)
}

def @func_12498() -> (Tensor[(16, 13, 9), float32],) {
  %1068 = @func_9817() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1068,)
}

def @func_18731() -> Tensor[(16, 13, 9), float32] {
  %1069 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1069.0
}

def @func_15971() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1070 = @func_13563() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1071 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  %1072 = %1070.0;
  (%1071, %1072)
}

def @func_20763() -> (Tensor[(16, 13, 9), float32],) {
  %1073 = @func_19867() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1074 = %1073.1;
  (%1074,)
}

def @func_18917(%var_18912: int8) -> Tensor[(1, 14, 4), int8] {
  %1075 = cast(%var_18912, dtype="int8") /* ty=int8 */;
  %1076 = cast(meta[relay.Constant][35] /* ty=Tensor[(1, 14, 4), int8] */, dtype="int8") /* ty=Tensor[(1, 14, 4), int8] */;
  minimum(%1075, %1076) /* ty=Tensor[(1, 14, 4), int8] */
}

def @func_23001() -> Tensor[(14, 4, 8), uint16] {
  %1077 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %1077.2
}

def @func_16880() -> Tensor[(16, 13, 9), float32] {
  %1078 = @func_14274() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1078.0
}

def @func_13299() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1079 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1080 = %1079.0;
  %1081 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1080, %1081)
}

def @func_25190() -> Tensor[(16, 13, 9), float64] {
  @func_5060() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_22429() -> (Tensor[(16, 13, 9), float32], Tensor[(3136), float32], float64, Tensor[(16, 13, 9), float32]) {
  %1082 = cast(-9.29207f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1083 = reshape(%1082, newshape=[]) /* ty=float64 */;
  %1084 = @func_19491(%1083) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) */;
  %1085 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
  %1086 = %1084.3;
  %1087 = @func_17020() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1085, %1086, -9.29207f64 /* ty=float64 */, %1087)
}

def @func_5345() -> (Tensor[(16, 13, 9), float32],) {
  %1088 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1088,)
}

def @func_24000() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float64], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16]) {
  %1089 = @func_17335() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1090 = cast(meta[relay.Constant][36] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1091 = reshape(%1090, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1092 = @func_6290(%1091) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */;
  %1093 = %1092.2;
  %1094 = cast(%1093, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %1095 = @func_15011() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %1096 = @func_20941() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1097 = %1089.2;
  %1098 = @func_14222() /* ty=Tensor[(16, 13, 9), float32] */;
  %1099 = atanh(%1094) /* ty=Tensor[(3136), float64] */;
  %1100 = %1095.0;
  %1101 = %1096.0;
  (%1097, %1098, meta[relay.Constant][36] /* ty=Tensor[(3136), float32] */, %1099, %1100, %1101)
}

def @func_4377(%var_4371: Tensor[(6, 5, 3), uint64]) -> Tensor[(6, 5, 3), uint64] {
  %1102 = cast(meta[relay.Constant][37] /* ty=Tensor[(6, 5, 1), uint64] */, dtype="uint64") /* ty=Tensor[(6, 5, 1), uint64] */;
  %1103 = cast(%var_4371, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
  multiply(%1102, %1103) /* ty=Tensor[(6, 5, 3), uint64] */
}

def @func_11398() -> Tensor[(16, 13, 9), float32] {
  @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_18095(%var_18051: Tensor[(5, 3, 1), float64]) -> (Tensor[(5, 3, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1104 = cast(%var_18051, dtype="float64") /* ty=Tensor[(5, 3, 1), float64] */;
  %1105 = @func_11195() /* ty=Tensor[(16, 13, 9), float32] */;
  %1106 = cast(%1105, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1107 = reshape(%1106, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint32] */;
  %1108 = @func_9977(%1107) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) */;
  %1109 = asin(%1104) /* ty=Tensor[(5, 3, 1), float64] */;
  %1110 = %1108.1;
  (%1109, %1105, %1110)
}

def @func_7557() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %1111 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1112 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1113 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %1114 = %1111.0;
  %1115 = %1112.0;
  %1116 = %1113.2;
  (%1114, %1115, %1116)
}

def @func_18254() -> (Tensor[(16, 13, 9), bool],) {
  %1117 = @func_17065() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1118 = %1117.0;
  %1119 = @func_7850() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1120 = %1119.0;
  %1121 = cast(%1120, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %1122 = shape_of(%1118, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1123 = cast(%1118, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %1124 = dyn.reshape(%1121, %1122, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1125 = less_equal(%1123, %1124) /* ty=Tensor[(16, 13, 9), bool] */;
  (%1125,)
}

def @func_16417() -> (Tensor[(16, 13, 9), float32],) {
  %1126 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1127 = %1126.0;
  (%1127,)
}

def @func_4181() -> (Tensor[(16, 13, 9), float32],) {
  %1128 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1128,)
}

def @func_18896() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %1129 = @func_16635() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) */;
  %1130 = @func_16371() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(54, 10), uint8], Tensor[(9, 7, 2), float32], Tensor[(16, 13, 9), float64]) */;
  %1131 = %1129.0;
  %1132 = %1130.4;
  (%1131, %1132)
}

def @func_20162(%var_20130: Tensor[(8, 4, 13), uint64], %var_20131: Tensor[(8, 4, 13), uint64], %var_20146: Tensor[(8, 4, 13), uint64]) -> (Tensor[(16, 13, 9), float32], Tensor[(8, 4, 13), float32], Tensor[(8, 4, 13), float32]) {
  %1133 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1134 = cast(%var_20131, dtype="uint64") /* ty=Tensor[(8, 4, 13), uint64] */;
  %1135 = shape_of(%var_20130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1136 = cast(%var_20130, dtype="uint64") /* ty=Tensor[(8, 4, 13), uint64] */;
  %1137 = dyn.reshape(%1134, %1135, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1138 = maximum(%1136, %1137) /* ty=Tensor[(8, 4, 13), uint64] */;
  %1139 = cast(%1138, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %1140 = cast(%var_20146, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %1141 = shape_of(%var_20130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1142 = cast(%var_20130, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %1143 = dyn.reshape(%1140, %1141, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1144 = %1133.0;
  %1145 = erf(%1139) /* ty=Tensor[(8, 4, 13), float32] */;
  %1146 = power(%1142, %1143) /* ty=Tensor[(8, 4, 13), float32] */;
  (%1144, %1145, %1146)
}

def @func_9663(%var_9654: float64) -> (Tensor[(11, 10, 1), bool],) {
  %1147 = cast(%var_9654, dtype="bool") /* ty=bool */;
  %1148 = cast(meta[relay.Constant][38] /* ty=Tensor[(11, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(11, 10, 1), bool] */;
  %1149 = less(%1147, %1148) /* ty=Tensor[(11, 10, 1), bool] */;
  (%1149,)
}

def @func_11946() -> (Tensor[(16, 13, 9), float32],) {
  %1150 = @func_10037() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1151 = %1150.1;
  (%1151,)
}

def @func_25676() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1152 = @func_25190() /* ty=Tensor[(16, 13, 9), float64] */;
  %1153 = @func_19053() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1152, %1153)
}

def @func_6679(%var_6676: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %1154 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1155 = cast(%var_6676, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %1156 = reshape(%1155, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %1157 = @func_3124(%1156) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1158 = %1154.1;
  %1159 = %1157.0;
  (%1158, %1159, %var_6676)
}

def @func_4787() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %1160 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1161 = cast(meta[relay.Constant][39] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %1162 = reshape(%1161, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %1163 = @func_3124(%1162) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1164 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %1165 = %1160.1;
  %1166 = %1163.0;
  (%1164, %1165, %1166, meta[relay.Constant][39] /* ty=Tensor[(32), uint16] */)
}

def @func_6935() -> Tensor[(16, 13, 9), float64] {
  %1167 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1167.0
}

def @func_23030(%var_23017: Tensor[(15, 8, 10), uint8]) -> (Tensor[(15, 8, 10), bool],) {
  %1168 = cast(meta[relay.Constant][40] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %1169 = cast(%var_23017, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %1170 = equal(%1168, %1169) /* ty=Tensor[(15, 8, 10), bool] */;
  (%1170,)
}

def @func_13563() -> (Tensor[(16, 13, 9), float32],) {
  %1171 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1172 = %1171.1;
  (%1172,)
}

def @func_26779() -> Tensor[(16, 13, 9), float32] {
  %1173 = @func_15151() /* ty=(Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1173.2
}

def @func_24416() -> (Tensor[(16, 13, 9), float64],) {
  %1174 = @func_16234() /* ty=Tensor[(16, 13, 9), float64] */;
  (%1174,)
}

def @func_18998() -> Tensor[(16, 13, 9), float32] {
  %1175 = @func_18200() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1175.0
}

def @func_26678() -> (Tensor[(16, 13, 9), float64],) {
  %1176 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %1177 = %1176.1;
  (%1177,)
}

def @func_10124() -> (Tensor[(16, 12, 6), float32],) {
  %1178 = @func_8045() /* ty=Tensor[(16, 12, 6), float32] */;
  (%1178,)
}

def @func_16371() -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(54, 10), uint8], Tensor[(9, 7, 2), float32], Tensor[(16, 13, 9), float64]) {
  %1179 = @func_10093() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1180 = cast(meta[relay.Constant][41] /* ty=Tensor[(54, 10), uint8] */, dtype="uint8") /* ty=Tensor[(54, 10), uint8] */;
  %1181 = reshape(%1180, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %1182 = @func_4413(%1181) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %1183 = %1179.0;
  %1184 = %1182.1;
  %1185 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
  %1186 = @func_16234() /* ty=Tensor[(16, 13, 9), float64] */;
  (%1183, %1184, meta[relay.Constant][41] /* ty=Tensor[(54, 10), uint8] */, %1185, %1186)
}

def @func_20065() -> Tensor[(14, 4, 8), uint16] {
  %1187 = @func_16490() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1187.0
}

def @func_10332() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1188 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1189 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1190 = %1188.0;
  %1191 = %1189.0;
  (%1190, %1191)
}

def @func_2173(%var_2168: Tensor[(6, 1, 7), float32]) -> (Tensor[(6, 1, 7), float32],) {
  %1192 = cast(%var_2168, dtype="float32") /* ty=Tensor[(6, 1, 7), float32] */;
  %1193 = log10(%1192) /* ty=Tensor[(6, 1, 7), float32] */;
  (%1193,)
}

def @func_18807() -> Tensor[(16, 13, 9), float64] {
  %1194 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1194.0
}

def @func_9213() -> (Tensor[(16, 13, 9), float32],) {
  %1195 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1196 = %1195.3;
  (%1196,)
}

def @func_12110(%var_12099: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(3136), int16]) {
  %1197 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1198 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1199 = cast(meta[relay.Constant][42] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1200 = reshape(%1199, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1201 = @func_6290(%1200) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */;
  %1202 = %1201.1;
  %1203 = cast(%var_12099, dtype="int16") /* ty=Tensor[(3136), int16] */;
  %1204 = shape_of(%1202, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1205 = cast(%1202, dtype="int16") /* ty=Tensor[(3136), int16] */;
  %1206 = dyn.reshape(%1203, %1204, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1207 = %1197.1;
  %1208 = %1198.0;
  %1209 = bitwise_and(%1205, %1206) /* ty=Tensor[(3136), int16] */;
  (%1207, %1208, meta[relay.Constant][42] /* ty=Tensor[(3136), float32] */, %1209)
}

def @func_11506() -> Tensor[(16, 13, 9), float32] {
  %1210 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %1210.1
}

def @func_22462() -> Tensor[(16, 13, 9), float32] {
  %1211 = @func_17363() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1211.0
}

def @func_14052() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(14, 4, 8), uint16]) {
  %1212 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1213 = @func_13518() /* ty=(Tensor[(15, 15, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(15, 15, 16), float64]) */;
  %1214 = %1212.0;
  %1215 = %1213.2;
  %1216 = @func_9442() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%1214, %1215, %1216)
}

def @func_18526(%var_18500: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), bool], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1217 = @func_6541() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1218 = cast(%var_18500, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %1219 = shape_of(%1217, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1220 = cast(%1217, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %1221 = dyn.reshape(%1218, %1219, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1222 = @func_18113() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1223 = cast(%var_18500, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %1224 = reshape(%1223, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %1225 = @func_16196(%1224) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8], Tensor[(448), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1226 = less_equal(%1220, %1221) /* ty=Tensor[(14, 4, 8), bool] */;
  %1227 = %1222.0;
  %1228 = %1225.6;
  (%1226, %1227, %1228)
}

def @func_25135() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(13, 6, 14), float64], Tensor[(1092), float64]) {
  %1229 = @func_13395() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %1230 = cast(meta[relay.Constant][43] /* ty=Tensor[(1092), float64] */, dtype="float64") /* ty=Tensor[(1092), float64] */;
  %1231 = reshape(%1230, newshape=[13, 6, 14]) /* ty=Tensor[(13, 6, 14), float64] */;
  %1232 = @func_13830(%1231) /* ty=(Tensor[(13, 6, 14), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32]) */;
  %1233 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
  %1234 = @func_12292() /* ty=Tensor[(16, 13, 9), float32] */;
  %1235 = @func_22890() /* ty=Tensor[(16, 13, 9), float32] */;
  %1236 = @func_23403() /* ty=Tensor[(16, 13, 9), float32] */;
  %1237 = %1229.1;
  %1238 = %1232.0;
  (%1233, %1234, %1235, %1236, %1237, %1238, meta[relay.Constant][43] /* ty=Tensor[(1092), float64] */)
}

def @main() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), float64]) {
  %1239 = @func_25041() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1240 = @func_27434() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %1241 = @func_15688() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1242 = @func_22867() /* ty=Tensor[(15, 14, 2), float32] */;
  %1243 = cast(%1242, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %1244 = acos(%1243) /* ty=Tensor[(15, 14, 2), float64] */;
  %1245 = cast(%1244, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %1246 = shape_of(%1242, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1247 = cast(%1242, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %1248 = dyn.reshape(%1245, %1246, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1249 = cast(%1244, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %1250 = %1239.0;
  %1251 = %1240.2;
  %1252 = %1241.0;
  %1253 = logical_or(%1247, %1248) /* ty=Tensor[(15, 14, 2), bool] */;
  %1254 = atanh(%1249) /* ty=Tensor[(15, 14, 2), float64] */;
  (%1250, %1251, %1252, %1253, %1254)
}

def @func_5488() -> (Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1255 = cast(meta[relay.Constant][44] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1256 = reshape(%1255, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %1257 = @func_4413(%1256) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %1258 = cast(meta[relay.Constant][45] /* ty=Tensor[(32, 1), uint16] */, dtype="uint16") /* ty=Tensor[(32, 1), uint16] */;
  %1259 = reshape(%1258, newshape=[4, 8]) /* ty=Tensor[(4, 8), uint16] */;
  %1260 = @func_5193(%1259) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(4, 8), uint16]) */;
  %1261 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %1262 = cast(%1261, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %1263 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1264 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1265 = cast(meta[relay.Constant][45] /* ty=Tensor[(32, 1), uint16] */, dtype="uint16") /* ty=Tensor[(32, 1), uint16] */;
  %1266 = reshape(%1265, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %1267 = @func_4742(%1266) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1268 = cast(meta[relay.Constant][45] /* ty=Tensor[(32, 1), uint16] */, dtype="uint16") /* ty=Tensor[(32, 1), uint16] */;
  %1269 = reshape(%1268, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %1270 = @func_3124(%1269) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1271 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1272 = %1257.0;
  %1273 = %1260.0;
  %1274 = exp(%1262) /* ty=Tensor[(16, 13, 9), float32] */;
  %1275 = %1263.0;
  %1276 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  %1277 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  %1278 = %1264.0;
  %1279 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  %1280 = %1267.2;
  %1281 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1282 = %1270.0;
  %1283 = %1271.0;
  (%1272, meta[relay.Constant][44] /* ty=Tensor[(540), uint8] */, %1273, meta[relay.Constant][45] /* ty=Tensor[(32, 1), uint16] */, %1274, %1275, %1276, %1277, %1278, %1279, %1280, %1281, %1282, %1283)
}

def @func_16788(%var_16785: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
  %1284 = @func_16513() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1285 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1286 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 2), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2), uint16] */;
  %1287 = reshape(%1286, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %1288 = @func_3124(%1287) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1289 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1290 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %1291 = %1290.0;
  %1292 = cast(%1291, dtype="float32") /* ty=Tensor[(14, 4, 8), float32] */;
  %1293 = cast(meta[relay.Constant][46] /* ty=Tensor[(16, 2), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2), uint16] */;
  %1294 = reshape(%1293, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %1295 = @func_4503(%1294) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1296 = cast(%var_16785, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1297 = reshape(%1296, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1298 = @func_6199(%1297) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %1299 = %1284.0;
  %1300 = %1285.1;
  %1301 = %1288.0;
  %1302 = %1289.0;
  %1303 = log2(%1292) /* ty=Tensor[(14, 4, 8), float32] */;
  %1304 = %1295.0;
  %1305 = @func_9141() /* ty=Tensor[(16, 13, 9), float32] */;
  %1306 = %1298.1;
  (%1299, %1300, %1301, meta[relay.Constant][46] /* ty=Tensor[(16, 2), uint16] */, %1302, %1303, %1304, %1305, %1306, %var_16785)
}

def @func_21711(%var_21703: int16, %var_21704: Tensor[(5, 13, 5), int16]) -> (Tensor[(5, 13, 5), int16],) {
  %1307 = cast(%var_21703, dtype="int16") /* ty=int16 */;
  %1308 = cast(%var_21704, dtype="int16") /* ty=Tensor[(5, 13, 5), int16] */;
  %1309 = minimum(%1307, %1308) /* ty=Tensor[(5, 13, 5), int16] */;
  (%1309,)
}

def @func_21961() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1310 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1311 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %1312 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1313 = %1310.1;
  %1314 = %1311.2;
  %1315 = %1312.0;
  %1316 = @func_14594() /* ty=Tensor[(16, 13, 9), float32] */;
  %1317 = @func_17020() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1313, %1314, %1315, %1316, %1317)
}

def @func_20941() -> (Tensor[(14, 4, 8), uint16],) {
  %1318 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1319 = %1318.0;
  (%1319,)
}

def @func_26901() -> Tensor[(16, 13, 9), float32] {
  %1320 = @func_18200() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1320.0
}

def @func_18856() -> (Tensor[(16, 13, 9), float32],) {
  %1321 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1322 = %1321.1;
  (%1322,)
}

def @func_10093() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1323 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1324 = %1323.0;
  %1325 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1324, %1325)
}

def @func_10547() -> (Tensor[(16, 13, 9), float32],) {
  %1326 = @func_5171() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1327 = %1326.1;
  (%1327,)
}

def @func_17524(%var_17512: Tensor[(3, 7, 15), float64]) -> (Tensor[(3, 7, 15), float64], Tensor[(16, 13, 9), float32]) {
  %1328 = cast(%var_17512, dtype="float64") /* ty=Tensor[(3, 7, 15), float64] */;
  %1329 = acos(%1328) /* ty=Tensor[(3, 7, 15), float64] */;
  %1330 = @func_11398() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1329, %1330)
}

def @func_13716() -> (Tensor[(16, 13, 9), float32],) {
  %1331 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1332 = %1331.0;
  (%1332,)
}

def @func_27133() -> Tensor[(16, 13, 9), float32] {
  %1333 = @func_13212() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1333.0
}

def @func_14129() -> (Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) {
  %1334 = @func_12430() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
  %1335 = %1334.0;
  %1336 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%1335, %1336)
}

def @func_11431() -> (Tensor[(16, 13, 9), float32],) {
  %1337 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1337,)
}

def @func_17604() -> (Tensor[(16, 13, 9), float32],) {
  %1338 = @func_14274() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1339 = %1338.0;
  (%1339,)
}

def @func_23287() -> (Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32], Tensor[(220), float64]) {
  %1340 = @func_21340() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1341 = cast(meta[relay.Constant][47] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
  %1342 = reshape(%1341, newshape=[4, 5, 11]) /* ty=Tensor[(4, 5, 11), float64] */;
  %1343 = @func_11907(%1342) /* ty=(Tensor[(4, 5, 11), float64], Tensor[(9, 7, 2), float32]) */;
  %1344 = %1340.0;
  %1345 = %1343.1;
  (%1344, %1345, meta[relay.Constant][47] /* ty=Tensor[(220), float64] */)
}

def @func_16991() -> Tensor[(16, 13, 9), float32] {
  %1346 = @func_11946() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1346.0
}

def @func_15011() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1347 = @func_9394() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1348 = @func_6541() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1349 = %1347.1;
  (%1348, %1349)
}

def @func_24787() -> (Tensor[(16, 13, 9), float32],) {
  %1350 = @func_20342() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1350,)
}

def @func_21496() -> (Tensor[(16, 13, 9), float64],) {
  %1351 = @func_19191() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1352 = %1351.0;
  (%1352,)
}

def @func_26055() -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float32], Tensor[(6, 44), float32], Tensor[(448), uint16]) {
  %1353 = cast(meta[relay.Constant][48] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1354 = reshape(%1353, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %1355 = @func_4413(%1354) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %1356 = @func_18023() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1357 = cast(meta[relay.Constant][49] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %1358 = reshape(%1357, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), uint16] */;
  %1359 = @func_15499(%1358) /* ty=(Tensor[(14, 4, 8), float32], Tensor[(264), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1360 = @func_25780() /* ty=Tensor[(16, 13, 9), float32] */;
  %1361 = %1355.0;
  %1362 = %1356.1;
  %1363 = %1359.2;
  (%1360, %1361, meta[relay.Constant][48] /* ty=Tensor[(540), uint8] */, %1362, %1363, meta[relay.Constant][49] /* ty=Tensor[(448), uint16] */)
}

def @func_11688() -> Tensor[(14, 4, 8), uint16] {
  %1364 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1364.0
}

def @func_20720(%var_20697: Tensor[(16, 12, 6), float32]) -> (Tensor[(16, 12, 6), int8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1365 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
  %1366 = %1365.0;
  %1367 = cast(%var_20697, dtype="int8") /* ty=Tensor[(16, 12, 6), int8] */;
  %1368 = shape_of(%1366, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1369 = cast(%1366, dtype="int8") /* ty=Tensor[(16, 12, 6), int8] */;
  %1370 = dyn.reshape(%1367, %1368, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1371 = multiply(%1369, %1370) /* ty=Tensor[(16, 12, 6), int8] */;
  %1372 = @func_19948() /* ty=Tensor[(16, 13, 9), float32] */;
  %1373 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1371, %1372, %1373)
}

def @func_26202() -> Tensor[(16, 13, 9), float32] {
  %1374 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1374.0
}

def @func_8160() -> Tensor[(16, 13, 9), float32] {
  @func_6119() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19170() -> Tensor[(16, 13, 9), float32] {
  @func_17408() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_12142() -> (Tensor[(16, 13, 9), float32],) {
  %1375 = @func_8572() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1375,)
}

def @func_21046() -> Tensor[(16, 13, 9), float64] {
  @func_18807() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_24121() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1376 = @func_21125() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1377 = %1376.0;
  %1378 = @func_21056() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1377, %1378)
}

def @func_26810() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1379 = @func_8905() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1380 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1381 = %1379.0;
  %1382 = @func_22890() /* ty=Tensor[(16, 13, 9), float32] */;
  %1383 = %1380.0;
  (%1381, %1382, %1383)
}

def @func_17260(%var_17236: Tensor[(14, 4, 8), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int64], Tensor[(16, 13, 9), float32]) {
  %1384 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %1385 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1386 = %1385.0;
  %1387 = cast(%var_17236, dtype="int64") /* ty=Tensor[(14, 4, 8), int64] */;
  %1388 = shape_of(%1386, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1389 = cast(%1386, dtype="int64") /* ty=Tensor[(14, 4, 8), int64] */;
  %1390 = dyn.reshape(%1387, %1388, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1391 = @func_9394() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1392 = %1384.0;
  %1393 = right_shift(%1389, %1390) /* ty=Tensor[(14, 4, 8), int64] */;
  %1394 = %1391.0;
  (%1392, %1393, %1394)
}

def @func_12487(%var_12453: Tensor[(8, 6, 14), uint64], %var_12465: Tensor[(4, 468), float32]) -> (Tensor[(8, 6, 14), bool], Tensor[(16, 13, 9), bool], Tensor[(4, 468), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  %1395 = cast(meta[relay.Constant][50] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %1396 = cast(%var_12453, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
  %1397 = cast(%var_12465, dtype="float32") /* ty=Tensor[(4, 468), float32] */;
  %1398 = reshape(%1397, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %1399 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %1400 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1401 = greater_equal(%1395, %1396) /* ty=Tensor[(8, 6, 14), bool] */;
  %1402 = @func_6263(%1398) /* ty=Tensor[(16, 13, 9), bool] */;
  %1403 = %1399.3;
  %1404 = %1400.1;
  (%1401, %1402, %var_12465, %1403, %1404)
}

def @func_10740() -> Tensor[(16, 13, 9), float32] {
  @func_8876() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_14963() -> Tensor[(16, 13, 9), float32] {
  @func_8185() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_24307() -> Tensor[(16, 13, 9), float32] {
  %1405 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1405.0
}

def @func_16513() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1406 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1407 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  %1408 = %1406.1;
  (%1407, %1408)
}

def @func_18600() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1409 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1410 = @func_16939() /* ty=Tensor[(16, 13, 9), float32] */;
  %1411 = %1409.0;
  (%1410, %1411)
}

def @func_25324() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1412 = @func_24047() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1413 = @func_18600() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1414 = %1412.0;
  %1415 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
  %1416 = @func_13932() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1417 = %1413.0;
  (%1414, %1415, %1416, %1417)
}

def @func_9637() -> (Tensor[(16, 13, 9), float32],) {
  %1418 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1418,)
}

def @func_12940() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1419 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1420 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1421 = %1419.0;
  %1422 = %1420.0;
  (%1421, %1422)
}

def @func_13976() -> (Tensor[(16, 13, 9), float32],) {
  %1423 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1424 = %1423.0;
  (%1424,)
}

def @func_14898() -> Tensor[(16, 13, 9), float32] {
  %1425 = @func_14882() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1425.5
}

def @func_6819() -> (Tensor[(14, 4, 8), uint16],) {
  %1426 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%1426,)
}

def @func_19754(%var_19746: Tensor[(1, 1, 9), float64]) -> Tensor[(1, 1, 9), float64] {
  %1427 = cast(%var_19746, dtype="float64") /* ty=Tensor[(1, 1, 9), float64] */;
  rsqrt(%1427) /* ty=Tensor[(1, 1, 9), float64] */
}

def @func_14648() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1428 = @func_11216() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1429 = @func_8160() /* ty=Tensor[(16, 13, 9), float32] */;
  %1430 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
  %1431 = %1428.0;
  (%1429, %1430, %1431)
}

def @func_13613() -> Tensor[(16, 13, 9), float32] {
  %1432 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
  %1432.0
}

def @func_18113() -> (Tensor[(16, 13, 9), float32],) {
  %1433 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1434 = %1433.1;
  (%1434,)
}

def @func_7373() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1435 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1436 = %1435.0;
  %1437 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1436, %1437)
}

def @func_5894(%var_5881: Tensor[(264), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) {
  %1438 = @func_4628() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1439 = cast(meta[relay.Constant][51] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1440 = cast(%var_5881, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1441 = reshape(%1439, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1442 = reshape(%1440, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %1443 = @func_2469(%1441, %1442) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
  %1444 = %1443.2;
  %1445 = cast(%1444, dtype="bool") /* ty=Tensor[(3136), bool] */;
  %1446 = shape_of(meta[relay.Constant][51] /* ty=Tensor[(3136), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1447 = cast(meta[relay.Constant][51] /* ty=Tensor[(3136), float32] */, dtype="bool") /* ty=Tensor[(3136), bool] */;
  %1448 = dyn.reshape(%1445, %1446, newshape=[]) /* ty=Tensor[(?), bool] */;
  %1449 = %1438.0;
  %1450 = less(%1447, %1448) /* ty=Tensor[(3136), bool] */;
  (%1449, %var_5881, %1450)
}

def @func_18437() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1451 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1452 = @func_17065() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1453 = %1451.0;
  %1454 = %1452.0;
  (%1453, %1454)
}

def @func_8905() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1455 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1456 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1457 = %1455.0;
  %1458 = %1456.0;
  (%1457, %1458)
}

def @func_9598(%var_9557: Tensor[(3136), float32]) -> (Tensor[(3136), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32]) {
  %1459 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1460 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1461 = %1460.1;
  %1462 = cast(%var_9557, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1463 = reshape(%1462, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1464 = @func_6290(%1463) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */;
  %1465 = %1464.0;
  %1466 = cast(%1465, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %1467 = shape_of(%1461, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1468 = cast(%1461, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %1469 = dyn.reshape(%1466, %1467, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1470 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
  %1471 = cast(%1470, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
  %1472 = %1459.0;
  %1473 = not_equal(%1468, %1469) /* ty=Tensor[(16, 13, 9), bool] */;
  %1474 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
  %1475 = atan(%1471) /* ty=Tensor[(9, 7, 2), float32] */;
  (%var_9557, %1472, %1473, %1474, %1475)
}

def @func_5393() -> (Tensor[(16, 13, 9), float32],) {
  %1476 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1477 = %1476.0;
  (%1477,)
}

def @func_26515() -> (Tensor[(16, 13, 9), float32],) {
  %1478 = @func_8876() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1478,)
}

def @func_16635() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) {
  %1479 = @func_5488() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %1480 = cast(meta[relay.Constant][52] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %1481 = reshape(%1480, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %1482 = @func_4503(%1481) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1483 = @func_9307() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1484 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1485 = %1479.11;
  %1486 = %1482.0;
  %1487 = %1483.0;
  %1488 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %1489 = %1484.0;
  (%1485, %1486, meta[relay.Constant][52] /* ty=Tensor[(32), uint16] */, %1487, %1488, %1489)
}

def @func_17211() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) {
  %1490 = @func_13976() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1491 = %1490.0;
  %1492 = cast(%1491, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1493 = reshape(%1492, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint32] */;
  %1494 = @func_9977(%1493) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) */;
  %1495 = %1494.0;
  (%1491, %1495)
}

def @func_17335() -> (Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1496 = @func_9647() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) */;
  %1497 = @func_15623() /* ty=Tensor[(16, 13, 9), float32] */;
  %1498 = %1496.2;
  %1499 = @func_11398() /* ty=Tensor[(16, 13, 9), float32] */;
  %1500 = @func_15623() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1497, %1498, %1499, %1500)
}

def @func_19948() -> Tensor[(16, 13, 9), float32] {
  @func_14963() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_12430() -> (Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) {
  %1501 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1502 = @func_8045() /* ty=Tensor[(16, 12, 6), float32] */;
  %1503 = %1501.0;
  (%1502, %1503)
}

def @func_26641() -> (Tensor[(16, 13, 9), float32],) {
  %1504 = @func_22287() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1504,)
}

def @func_24047() -> (Tensor[(16, 13, 9), float64],) {
  %1505 = @func_23737() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) */;
  %1506 = %1505.0;
  (%1506,)
}

def @func_7192(%var_7187: Tensor[(16, 13, 9), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %1507 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1508 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1509 = %1508.0;
  %1510 = cast(%var_7187, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %1511 = shape_of(%1509, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1512 = cast(%1509, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %1513 = dyn.reshape(%1510, %1511, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %1514 = %1507.0;
  %1515 = subtract(%1512, %1513) /* ty=Tensor[(16, 13, 9), float64] */;
  (%1514, %1515)
}

def @func_9977(%var_9962: Tensor[(16, 13, 9), uint32]) -> (Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) {
  %1516 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %1517 = cast(%var_9962, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
  %1518 = shape_of(%1516, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1519 = cast(%1516, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
  %1520 = dyn.reshape(%1517, %1518, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %1521 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1522 = bitwise_xor(%1519, %1520) /* ty=Tensor[(16, 13, 9), uint8] */;
  %1523 = %1521.1;
  (%1522, %1523)
}

def @func_8595() -> (Tensor[(9, 6, 10), float64],) {
  %1524 = @func_7082() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) */;
  %1525 = %1524.1;
  (%1525,)
}

def @func_8395() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1526 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1527 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1528 = %1526.0;
  %1529 = %1527.0;
  (%1528, %1529)
}

def @func_14222() -> Tensor[(16, 13, 9), float32] {
  %1530 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1530.0
}

def @func_21237() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1531 = @func_20065() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1532 = @func_10740() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1531, %1532)
}

def @func_19007(%var_19000: Tensor[(1, 13, 8), uint8]) -> (Tensor[(11, 13, 8), uint8],) {
  %1533 = cast(%var_19000, dtype="uint8") /* ty=Tensor[(1, 13, 8), uint8] */;
  %1534 = cast(meta[relay.Constant][53] /* ty=Tensor[(11, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(11, 13, 8), uint8] */;
  %1535 = right_shift(%1533, %1534) /* ty=Tensor[(11, 13, 8), uint8] */;
  (%1535,)
}

def @func_27434() -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %1536 = @func_19117() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1537 = @func_24416() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1538 = %1536.0;
  %1539 = @func_11688() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1540 = %1537.0;
  (%1538, %1539, %1540)
}

def @func_25600() -> (Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1541 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1542 = @func_23287() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32], Tensor[(220), float64]) */;
  %1543 = @func_23341() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1544 = @func_11652() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1545 = %1541.0;
  %1546 = %1542.1;
  %1547 = %1543.0;
  %1548 = %1544.0;
  (%1545, %1546, %1547, %1548)
}

def @func_23119() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1549 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1550 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1551 = @func_20888() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) */;
  %1552 = %1549.0;
  %1553 = @func_12253() /* ty=Tensor[(16, 13, 9), float32] */;
  %1554 = %1550.0;
  %1555 = %1551.0;
  %1556 = @func_15623() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1552, %1553, %1554, %1555, %1556)
}

def @func_7708(%var_7693: Tensor[(2, 11, 1), float32]) -> (Tensor[(2, 11, ?), bool],) {
  %1557 = cast(%var_7693, dtype="float32") /* ty=Tensor[(2, 11, 1), float32] */;
  %1558 = cos(%1557) /* ty=Tensor[(2, 11, 1), float32] */;
  %1559 = cast(%1558, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %1560 = shape_of(%var_7693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1561 = cast(%var_7693, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %1562 = dyn.reshape(%1559, %1560, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1563 = equal(%1561, %1562) /* ty=Tensor[(2, 11, ?), bool] */;
  (%1563,)
}

def @func_22191() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1564 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1565 = @func_20960() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1566 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1567 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1568 = @func_19948() /* ty=Tensor[(16, 13, 9), float32] */;
  %1569 = %1564.0;
  %1570 = %1565.0;
  %1571 = %1566.0;
  (%1567, %1568, %1569, %1570, %1571)
}

def @func_21465() -> Tensor[(16, 13, 9), float32] {
  %1572 = @func_18856() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1572.0
}

def @func_9010() -> Tensor[(14, 4, 8), uint16] {
  %1573 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %1573.0
}

def @func_10252() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1574 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1575 = %1574.0;
  %1576 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %1577 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  %1578 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
  %1579 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1575, %1576, %1577, %1578, %1579)
}

def @func_13421() -> (Tensor[(16, 13, 9), float32],) {
  %1580 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1580,)
}

def @func_13259() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1581 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1582 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1583 = %1581.0;
  %1584 = %1582.0;
  (%1583, %1584)
}

def @func_17168() -> Tensor[(16, 13, 9), float32] {
  %1585 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1585.0
}

def @func_6953() -> Tensor[(16, 13, 9), float32] {
  @func_5305() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19723(%var_19713: Tensor[(392, 8), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(392, 8), float32]) {
  %1586 = cast(%var_19713, dtype="float32") /* ty=Tensor[(392, 8), float32] */;
  %1587 = reshape(%1586, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1588 = @func_16788(%1587) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %1589 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
  %1590 = %1588.1;
  (%1589, %1590, %var_19713)
}

def @func_19867() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1591 = @func_9394() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1592 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1593 = @func_12292() /* ty=Tensor[(16, 13, 9), float32] */;
  %1594 = %1591.1;
  %1595 = %1592.0;
  (%1593, %1594, %1595)
}

def @func_14094() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %1596 = cast(meta[relay.Constant][54] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %1597 = reshape(%1596, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %1598 = @func_3124(%1597) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1599 = @func_13996() /* ty=Tensor[(16, 13, 9), float32] */;
  %1600 = @func_11195() /* ty=Tensor[(16, 13, 9), float32] */;
  %1601 = %1598.0;
  (%1599, %1600, %1601, meta[relay.Constant][54] /* ty=Tensor[(32), uint16] */)
}

def @func_14594() -> Tensor[(16, 13, 9), float32] {
  %1602 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1602.0
}

def @func_16939() -> Tensor[(16, 13, 9), float32] {
  @func_13996() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_22936() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1603 = @func_17211() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %1604 = @func_18600() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1605 = @func_14052() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(14, 4, 8), uint16]) */;
  %1606 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1607 = %1603.0;
  %1608 = %1604.0;
  %1609 = %1605.2;
  %1610 = %1606.0;
  (%1607, %1608, %1609, %1610)
}

def @func_25780() -> Tensor[(16, 13, 9), float32] {
  %1611 = @func_11868() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1611.0
}

def @func_9335() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1612 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1613 = %1612.0;
  %1614 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  %1615 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  (%1613, %1614, %1615)
}

def @func_17943(%var_17935: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), bool]) {
  %1616 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %1617 = @func_13932() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1618 = cast(%var_17935, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %1619 = shape_of(%1617, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1620 = cast(%1617, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %1621 = dyn.reshape(%1618, %1619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1622 = %1616.2;
  %1623 = greater_equal(%1620, %1621) /* ty=Tensor[(14, 4, 8), bool] */;
  (%1622, %1623)
}

def @func_5305() -> Tensor[(16, 13, 9), float32] {
  %1624 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1624.0
}

def @func_9141() -> Tensor[(16, 13, 9), float32] {
  @func_8572() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_14365() -> Tensor[(16, 13, 9), float32] {
  %1625 = @func_9176() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1625.3
}

def @func_23607(%var_23582: Tensor[(1, 2, 13), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(?, 2, 13), uint64]) {
  %1626 = cast(%var_23582, dtype="float64") /* ty=Tensor[(1, 2, 13), float64] */;
  %1627 = sinh(%1626) /* ty=Tensor[(1, 2, 13), float64] */;
  %1628 = cast(%var_23582, dtype="uint64") /* ty=Tensor[(1, 2, 13), uint64] */;
  %1629 = shape_of(%1627, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1630 = cast(%1627, dtype="uint64") /* ty=Tensor[(1, 2, 13), uint64] */;
  %1631 = dyn.reshape(%1628, %1629, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1632 = maximum(%1630, %1631) /* ty=Tensor[(?, 2, 13), uint64] */;
  %1633 = cast(%var_23582, dtype="uint64") /* ty=Tensor[(1, 2, 13), uint64] */;
  %1634 = shape_of(%1632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1635 = cast(%1632, dtype="uint64") /* ty=Tensor[(?, 2, 13), uint64] */;
  %1636 = dyn.reshape(%1633, %1634, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1637 = @func_22287() /* ty=Tensor[(16, 13, 9), float32] */;
  %1638 = @func_22890() /* ty=Tensor[(16, 13, 9), float32] */;
  %1639 = logical_xor(%1635, %1636) /* ty=Tensor[(?, 2, 13), uint64] */;
  (%1637, %1638, %1639)
}

def @func_22752(%var_22730: int64, %var_22731: Tensor[(2, 4, 16), int64]) -> (Tensor[(2, 4, 16), bool], Tensor[(16, 13, 9), float32]) {
  %1640 = cast(%var_22730, dtype="bool") /* ty=bool */;
  %1641 = cast(%var_22731, dtype="bool") /* ty=Tensor[(2, 4, 16), bool] */;
  %1642 = @func_12142() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1643 = less(%1640, %1641) /* ty=Tensor[(2, 4, 16), bool] */;
  %1644 = %1642.0;
  (%1643, %1644)
}

def @func_27716() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(15, 8, 10), bool], Tensor[(1200), uint8], Tensor[(16, 13, 9), float32]) {
  %1645 = @func_11216() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1646 = @func_26590() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1647 = @func_17065() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1648 = cast(meta[relay.Constant][55] /* ty=Tensor[(1200), uint8] */, dtype="uint8") /* ty=Tensor[(1200), uint8] */;
  %1649 = reshape(%1648, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), uint8] */;
  %1650 = @func_23030(%1649) /* ty=(Tensor[(15, 8, 10), bool],) */;
  %1651 = @func_27599() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1652 = %1645.0;
  %1653 = %1646.0;
  %1654 = %1647.0;
  %1655 = %1650.0;
  %1656 = %1651.0;
  (%1652, %1653, %1654, %1655, meta[relay.Constant][55] /* ty=Tensor[(1200), uint8] */, %1656)
}

def @func_15937() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %1657 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1658 = %1657.0;
  %1659 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%1658, %1659)
}

def @func_20551() -> (Tensor[(16, 13, 9), float64],) {
  %1660 = @func_14006() /* ty=Tensor[(16, 13, 9), float64] */;
  (%1660,)
}

def @func_8112() -> (Tensor[(16, 13, 9), float32],) {
  %1661 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1662 = %1661.0;
  (%1662,)
}

def @func_7587() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1663 = @func_5305() /* ty=Tensor[(16, 13, 9), float32] */;
  %1664 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1663, %1664)
}

def @func_22867() -> Tensor[(15, 14, 2), float32] {
  %1665 = cast(meta[relay.Constant][56] /* ty=Tensor[(15, 14, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  sigmoid(%1665) /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_17619() -> Tensor[(16, 13, 9), float32] {
  %1666 = @func_11216() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1666.0
}

def @func_14534(%var_14524: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32]) {
  %1667 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1668 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1669 = cast(meta[relay.Constant][57] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %1670 = reshape(%1669, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %1671 = @func_4742(%1670) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1672 = cast(%var_14524, dtype="float32") /* ty=Tensor[(42), float32] */;
  %1673 = reshape(%1672, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), float32] */;
  %1674 = @func_2173(%1673) /* ty=(Tensor[(6, 1, 7), float32],) */;
  %1675 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1676 = @func_9266() /* ty=Tensor[(16, 13, 9), float32] */;
  %1677 = %1667.2;
  %1678 = %1668.0;
  %1679 = %1671.3;
  %1680 = %1674.0;
  %1681 = %1675.0;
  (%1676, %1677, %1678, %1679, meta[relay.Constant][57] /* ty=Tensor[(32), uint16] */, %1680, %var_14524, %1681)
}

def @func_26590() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1682 = @func_14274() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1683 = @func_17116() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1684 = %1682.0;
  %1685 = %1683.0;
  (%1684, %1685)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_17549() -> Tensor[(16, 13, 9), float32] {
  %0 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_16939() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %0() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_2469(%var_2393: Tensor[(3136), float32], %var_2399: Tensor[(4, 6, 11), float32]) -> (Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 6, 11), float32] */, dtype="float32") /* ty=Tensor[(4, 6, 11), float32] */;
  %2 = cast(%var_2393, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %3 = reshape(%2, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
  %4 = cast(%var_2399, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
  %5 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(4, 6, 11), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %6 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 6, 11), float32] */, dtype="bool") /* ty=Tensor[(4, 6, 11), bool] */;
  %7 = dyn.reshape(%4, %5, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %8 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 6, 11), float32] */, dtype="float64") /* ty=Tensor[(4, 6, 11), float64] */;
  %9 = acos(%1) /* ty=Tensor[(4, 6, 11), float32] */;
  %10 = @func_1265(%3) /* ty=Tensor[(16, 14, 14), float32] */;
  %11 = less_equal(%6, %7) /* ty=Tensor[(4, 6, 11), bool] */;
  %12 = atanh(%8) /* ty=Tensor[(4, 6, 11), float64] */;
  (%9, %10, %var_2393, %11, %12)
}

def @func_15937() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %13 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %14 = %13.0;
  %15 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%14, %15)
}

def @func_22794() -> Tensor[(16, 13, 9), float32] {
  %17 = fn () -> Tensor[(16, 13, 9), float32] {
    %16 = @func_14455() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %16.0
  };
  %17() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_13422() -> (Tensor[(16, 13, 9), float32],) {
  %19 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %18 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
    (%18,)
  };
  %19() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_5691() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %20 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %21 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %22 = %21.0;
  %23 = cast(%22, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %24 = %20.0;
  %25 = asinh(%23) /* ty=Tensor[(16, 13, 9), float64] */;
  (%24, %25)
}

def @func_6437() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %36 = fn () -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
    %26 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
    %27 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %28 = %27.0;
    %29 = cast(%28, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
    %30 = shape_of(%26, dtype="int32") /* ty=Tensor[(3), int32] */;
    %31 = cast(%26, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
    %32 = dyn.reshape(%29, %30, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %33 = @func_5171() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %34 = floor_mod(%31, %32) /* ty=Tensor[(16, 13, 9), float64] */;
    %35 = %33.0;
    (%34, %35)
  };
  %36() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_14900() -> Tensor[(16, 13, 9), float32] {
  @func_14898() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_27085() -> (Tensor[(16, 13, 9), float32],) {
  @func_27083() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_17168() -> Tensor[(16, 13, 9), float32] {
  %37 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %37.0
}

def @func_8045() -> Tensor[(16, 12, 6), float32] {
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(16, 12, 6), float32] */, dtype="float32") /* ty=Tensor[(16, 12, 6), float32] */;
  asin(%38) /* ty=Tensor[(16, 12, 6), float32] */
}

def @func_10525(%var_10524: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) {
  %57 = fn (%var_10466: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) {
    %39 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %40 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
    %41 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %42 = cast(%var_10466, dtype="uint16") /* ty=Tensor[(32), uint16] */;
    %43 = reshape(%42, newshape=[32]) /* ty=Tensor[(32), uint16] */;
    %44 = @func_6679(%43) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %45 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %46 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %47 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %48 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
    %49 = @func_8876() /* ty=Tensor[(16, 13, 9), float32] */;
    %50 = %39.0;
    %51 = %40.0;
    %52 = %41.0;
    %53 = %44.2;
    %54 = %45.1;
    %55 = %46.0;
    %56 = %47.1;
    (%48, %49, %50, %51, %52, %53, %var_10466, %54, %55, %56)
  };
  %57(%var_10524) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) */
}

def @func_19226(%var_19219: Tensor[(12, 8, 8), float64]) -> Tensor[(12, 8, 8), float64] {
  %58 = cast(%var_19219, dtype="float64") /* ty=Tensor[(12, 8, 8), float64] */;
  exp(%58) /* ty=Tensor[(12, 8, 8), float64] */
}

def @func_21057() -> Tensor[(16, 13, 9), float32] {
  %60 = fn () -> Tensor[(16, 13, 9), float32] {
    %59 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %59.0
  };
  %60() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_9337() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_9335() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_8396() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %65 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %61 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %62 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %63 = %61.0;
    %64 = %62.0;
    (%63, %64)
  };
  %65() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_15499(%var_15462: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), float32], Tensor[(264), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %66 = @func_11688() /* ty=Tensor[(14, 4, 8), uint16] */;
  %67 = cast(%var_15462, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %68 = shape_of(%66, dtype="int32") /* ty=Tensor[(3), int32] */;
  %69 = cast(%66, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %70 = dyn.reshape(%67, %68, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %71 = minimum(%69, %70) /* ty=Tensor[(14, 4, 8), uint16] */;
  %72 = cast(%71, dtype="float32") /* ty=Tensor[(14, 4, 8), float32] */;
  %73 = cast(meta[relay.Constant][2] /* ty=Tensor[(6, 44), float32] */, dtype="float32") /* ty=Tensor[(6, 44), float32] */;
  %74 = reshape(%73, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %75 = @func_5894(%74) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) */;
  %76 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %77 = %76.0;
  %78 = cast(%77, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %79 = reshape(%78, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %80 = @func_7192(%79) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %81 = tan(%72) /* ty=Tensor[(14, 4, 8), float32] */;
  %82 = %75.1;
  %83 = %80.0;
  (%81, %82, meta[relay.Constant][2] /* ty=Tensor[(6, 44), float32] */, %77, %83)
}

def @func_16864() -> (Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */
}

def @func_10742() -> Tensor[(16, 13, 9), float32] {
  @func_10740() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5231() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %87 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %84 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %85 = %84.1;
    %86 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
    (%85, %86)
  };
  %87() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_13978() -> (Tensor[(16, 13, 9), float32],) {
  @func_13976() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_20167(%var_20164: Tensor[(8, 4, 13), uint64], %var_20165: Tensor[(8, 4, 13), uint64], %var_20166: Tensor[(8, 4, 13), uint64]) -> (Tensor[(16, 13, 9), float32], Tensor[(8, 4, 13), float32], Tensor[(8, 4, 13), float32]) {
  @func_20162(%var_20164, %var_20165, %var_20166) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(8, 4, 13), float32], Tensor[(8, 4, 13), float32]) */
}

def @func_10622(%var_10620: Tensor[(14, 4, 8), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8]) {
  @func_10619(%var_10620) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8]) */
}

def @func_4787() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %88 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %89 = cast(meta[relay.Constant][3] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %90 = reshape(%89, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %91 = @func_3124(%90) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %92 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %93 = %88.1;
  %94 = %91.0;
  (%92, %93, %94, meta[relay.Constant][3] /* ty=Tensor[(32), uint16] */)
}

def @func_12733() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %102 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
    %95 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %96 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
    %97 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %98 = @func_9141() /* ty=Tensor[(16, 13, 9), float32] */;
    %99 = %95.0;
    %100 = %96.0;
    %101 = %97.0;
    (%98, %99, %100, %101)
  };
  %102() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */
}

def @func_12545() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32]) {
  %111 = fn () -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32]) {
    %103 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
    %104 = cast(%103, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
    %105 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
    %106 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %107 = cos(%104) /* ty=Tensor[(16, 13, 9), float64] */;
    %108 = %105.0;
    %109 = %106.0;
    %110 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
    (%107, %108, %109, %110)
  };
  %111() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32]) */
}

def @func_7757() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %118 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %112 = @func_4628() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %113 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %114 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %115 = %112.0;
    %116 = %113.1;
    %117 = %114.0;
    (%115, %116, %117)
  };
  %118() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_5767() -> (Tensor[(16, 13, 9), float64],) {
  @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_14007() -> Tensor[(16, 13, 9), float64] {
  %120 = fn () -> Tensor[(16, 13, 9), float64] {
    %119 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
    %119.1
  };
  %120() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_20342() -> Tensor[(16, 13, 9), float32] {
  %121 = @func_14094() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %121.0
}

def @func_7851() -> (Tensor[(16, 13, 9), float32],) {
  %124 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %122 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %123 = %122.0;
    (%123,)
  };
  %124() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_7708(%var_7693: Tensor[(2, 11, 1), float32]) -> (Tensor[(2, 11, ?), bool],) {
  %125 = cast(%var_7693, dtype="float32") /* ty=Tensor[(2, 11, 1), float32] */;
  %126 = cos(%125) /* ty=Tensor[(2, 11, 1), float32] */;
  %127 = cast(%126, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %128 = shape_of(%var_7693, dtype="int32") /* ty=Tensor[(3), int32] */;
  %129 = cast(%var_7693, dtype="bool") /* ty=Tensor[(2, 11, 1), bool] */;
  %130 = dyn.reshape(%127, %128, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %131 = equal(%129, %130) /* ty=Tensor[(2, 11, ?), bool] */;
  (%131,)
}

def @func_10332() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %132 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %133 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %134 = %132.0;
  %135 = %133.0;
  (%134, %135)
}

def @func_14240(%var_14238: Tensor[(15, 12, 2), uint8], %var_14239: Tensor[(15, 12, 2), uint8]) -> Tensor[(15, 12, 2), bool] {
  %140 = fn (%var_14226: Tensor[(15, 12, 2), uint8], %var_14227: Tensor[(15, 12, 2), uint8]) -> Tensor[(15, 12, 2), bool] {
    %136 = cast(%var_14227, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
    %137 = shape_of(%var_14226, dtype="int32") /* ty=Tensor[(3), int32] */;
    %138 = cast(%var_14226, dtype="bool") /* ty=Tensor[(15, 12, 2), bool] */;
    %139 = dyn.reshape(%136, %137, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%138, %139) /* ty=Tensor[(15, 12, 2), bool] */
  };
  %140(%var_14238, %var_14239) /* ty=Tensor[(15, 12, 2), bool] */
}

def @func_9012() -> Tensor[(14, 4, 8), uint16] {
  @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_9600(%var_9599: Tensor[(3136), float32]) -> (Tensor[(3136), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32]) {
  %158 = fn (%var_9557: Tensor[(3136), float32]) -> (Tensor[(3136), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32]) {
    %141 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %142 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %143 = %142.1;
    %144 = cast(%var_9557, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %145 = reshape(%144, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %146 = @func_6290(%145) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */;
    %147 = %146.0;
    %148 = cast(%147, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
    %149 = shape_of(%143, dtype="int32") /* ty=Tensor[(3), int32] */;
    %150 = cast(%143, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
    %151 = dyn.reshape(%148, %149, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %152 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
    %153 = cast(%152, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
    %154 = %141.0;
    %155 = not_equal(%150, %151) /* ty=Tensor[(16, 13, 9), bool] */;
    %156 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
    %157 = atan(%153) /* ty=Tensor[(9, 7, 2), float32] */;
    (%var_9557, %154, %155, %156, %157)
  };
  %158(%var_9599) /* ty=(Tensor[(3136), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), bool], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32]) */
}

def @func_27364() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %159 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %160 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %161 = %159.1;
  %162 = %160.0;
  (%161, %162)
}

def @func_16568(%var_16567: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
  %171 = fn (%var_16554: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
    %163 = @func_11868() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %164 = @func_15826() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %165 = cast(%var_16554, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %166 = reshape(%165, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
    %167 = %163.0;
    %168 = %164.0;
    %169 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
    %170 = @func_1265(%166) /* ty=Tensor[(16, 14, 14), float32] */;
    (%167, %168, %169, %170, %var_16554)
  };
  %171(%var_16567) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */
}

def @func_17605() -> (Tensor[(16, 13, 9), float32],) {
  %174 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %172 = @func_14274() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %173 = %172.0;
    (%173,)
  };
  %174() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_2175(%var_2174: Tensor[(6, 1, 7), float32]) -> (Tensor[(6, 1, 7), float32],) {
  %177 = fn (%var_2168: Tensor[(6, 1, 7), float32]) -> (Tensor[(6, 1, 7), float32],) {
    %175 = cast(%var_2168, dtype="float32") /* ty=Tensor[(6, 1, 7), float32] */;
    %176 = log10(%175) /* ty=Tensor[(6, 1, 7), float32] */;
    (%176,)
  };
  %177(%var_2174) /* ty=(Tensor[(6, 1, 7), float32],) */
}

def @func_5062() -> Tensor[(16, 13, 9), float64] {
  @func_5060() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_7539(%var_7538: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) {
  %186 = fn (%var_7533: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) {
    %178 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %179 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %180 = cast(%var_7533, dtype="float32") /* ty=Tensor[(42), float32] */;
    %181 = reshape(%180, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), float32] */;
    %182 = @func_2173(%181) /* ty=(Tensor[(6, 1, 7), float32],) */;
    %183 = %178.0;
    %184 = %179.0;
    %185 = %182.0;
    (%183, %184, %185, %var_7533)
  };
  %186(%var_7538) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) */
}

def @func_25678() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_25676() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_13901() -> Tensor[(16, 13, 9), float32] {
  @func_13899() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5196(%var_5194: Tensor[(4, 8), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(4, 8), uint16]) {
  @func_5193(%var_5194) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(4, 8), uint16]) */
}

def @func_16417() -> (Tensor[(16, 13, 9), float32],) {
  %187 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %188 = %187.0;
  (%188,)
}

def @func_17832(%var_17818: Tensor[(264), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(264), float32]) {
  %189 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %190 = cast(meta[relay.Constant][4] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %191 = cast(%var_17818, dtype="float32") /* ty=Tensor[(264), float32] */;
  %192 = reshape(%190, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %193 = reshape(%191, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %194 = @func_2469(%192, %193) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
  %195 = %189.0;
  %196 = %194.1;
  (%195, %196, meta[relay.Constant][4] /* ty=Tensor[(3136), float32] */, %var_17818)
}

def @func_4380(%var_4378: Tensor[(6, 5, 3), uint64]) -> Tensor[(6, 5, 3), uint64] {
  @func_4377(%var_4378) /* ty=Tensor[(6, 5, 3), uint64] */
}

def @func_26859() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(26), float64], Tensor[(16, 13, 9), float32]) {
  %197 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %198 = cast(meta[relay.Constant][5] /* ty=Tensor[(26), float64] */, dtype="float64") /* ty=Tensor[(26), float64] */;
  %199 = reshape(%198, newshape=[1, 2, 13]) /* ty=Tensor[(1, 2, 13), float64] */;
  %200 = @func_23607(%199) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(?, 2, 13), uint64]) */;
  %201 = @func_18629() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %202 = @func_20089() /* ty=Tensor[(14, 4, 8), uint16] */;
  %203 = @func_14898() /* ty=Tensor[(16, 13, 9), float32] */;
  %204 = %197.0;
  %205 = %200.1;
  %206 = %201.0;
  (%202, %203, %204, %205, meta[relay.Constant][5] /* ty=Tensor[(26), float64] */, %206)
}

def @func_22193() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_22191() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_12850() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_12848() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_16791(%var_16789: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
  @func_16788(%var_16789) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */
}

def @func_18254() -> (Tensor[(16, 13, 9), bool],) {
  %207 = @func_17065() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %208 = %207.0;
  %209 = @func_7850() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %210 = %209.0;
  %211 = cast(%210, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %212 = shape_of(%208, dtype="int32") /* ty=Tensor[(3), int32] */;
  %213 = cast(%208, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
  %214 = dyn.reshape(%211, %212, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %215 = less_equal(%213, %214) /* ty=Tensor[(16, 13, 9), bool] */;
  (%215,)
}

def @func_23033(%var_23031: Tensor[(15, 8, 10), uint8]) -> (Tensor[(15, 8, 10), bool],) {
  @func_23030(%var_23031) /* ty=(Tensor[(15, 8, 10), bool],) */
}

def @func_10009() -> Tensor[(16, 13, 9), float32] {
  %216 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %216.0
}

def @func_12255() -> Tensor[(16, 13, 9), float32] {
  @func_12253() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_23404() -> Tensor[(16, 13, 9), float32] {
  %218 = fn () -> Tensor[(16, 13, 9), float32] {
    %217 = @func_17363() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %217.0
  };
  %218() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_10334() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_9267() -> Tensor[(16, 13, 9), float32] {
  %220 = fn () -> Tensor[(16, 13, 9), float32] {
    %219 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %219.0
  };
  %220() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_18115() -> (Tensor[(16, 13, 9), float32],) {
  @func_18113() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_21341() -> (Tensor[(16, 13, 9), float64],) {
  %223 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %221 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %222 = %221.0;
    (%222,)
  };
  %223() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_17386() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %224 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %225 = %224.0;
  %226 = @func_14006() /* ty=Tensor[(16, 13, 9), float64] */;
  (%225, %226)
}

def @func_4873() -> (Tensor[(16, 13, 9), float64],) {
  %227 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %228 = %227.0;
  %229 = cast(%228, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %230 = rsqrt(%229) /* ty=Tensor[(16, 13, 9), float64] */;
  (%230,)
}

def @func_6201(%var_6200: Tensor[(3136), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
  %235 = fn (%var_6195: Tensor[(3136), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
    %231 = cast(%var_6195, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %232 = reshape(%231, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
    %233 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
    %234 = @func_1265(%232) /* ty=Tensor[(16, 14, 14), float32] */;
    (%233, %234, %var_6195)
  };
  %235(%var_6200) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */
}

def @func_16882() -> Tensor[(16, 13, 9), float32] {
  @func_16880() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_20511() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32]) {
  %247 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32]) {
    %236 = @func_15826() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %237 = @func_9335() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %238 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %239 = cast(meta[relay.Constant][6] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %240 = reshape(%239, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %241 = @func_16788(%240) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
    %242 = %236.0;
    %243 = %237.2;
    %244 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
    %245 = %238.1;
    %246 = %241.4;
    (%242, %243, %244, %245, %246, meta[relay.Constant][6] /* ty=Tensor[(3136), float32] */)
  };
  %247() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32]) */
}

def @func_16492() -> (Tensor[(14, 4, 8), uint16],) {
  @func_16490() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_23450() -> (Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) {
  %251 = fn () -> (Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) {
    %248 = @func_12430() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
    %249 = %248.0;
    %250 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
    (%249, %250)
  };
  %251() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_19382() -> Tensor[(14, 4, 8), uint16] {
  %253 = fn () -> Tensor[(14, 4, 8), uint16] {
    %252 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %252.0
  };
  %253() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_19163(%var_19161: Tensor[(360), uint8]) -> (Tensor[(16, 13, 9), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint8]) {
  @func_19160(%var_19161) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint8]) */
}

def @func_6899() -> Tensor[(9, 7, 2), float32] {
  @func_6897() /* ty=Tensor[(9, 7, 2), float32] */
}

def @func_23239() -> (Tensor[(14, 4, 8), uint16], Tensor[(264), float32], Tensor[(9, 7, 2), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float32]) {
  %264 = fn () -> (Tensor[(14, 4, 8), uint16], Tensor[(264), float32], Tensor[(9, 7, 2), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float32]) {
    %254 = @func_20510() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32]) */;
    %255 = @func_9647() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) */;
    %256 = cast(meta[relay.Constant][7] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %257 = reshape(%256, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %258 = @func_16566(%257) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
    %259 = @func_21435() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %260 = %254.2;
    %261 = %255.2;
    %262 = %258.2;
    %263 = %259.0;
    (%260, %261, %262, meta[relay.Constant][7] /* ty=Tensor[(3136), float32] */, %263)
  };
  %264() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(264), float32], Tensor[(9, 7, 2), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_23030(%var_23017: Tensor[(15, 8, 10), uint8]) -> (Tensor[(15, 8, 10), bool],) {
  %265 = cast(meta[relay.Constant][8] /* ty=uint8 */, dtype="bool") /* ty=bool */;
  %266 = cast(%var_23017, dtype="bool") /* ty=Tensor[(15, 8, 10), bool] */;
  %267 = equal(%265, %266) /* ty=Tensor[(15, 8, 10), bool] */;
  (%267,)
}

def @func_13395() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  %268 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %269 = @func_12797() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %270 = @func_12047() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %271 = %268.0;
  %272 = %269.1;
  %273 = %270.0;
  (%271, %272, %273)
}

def @func_17459() -> Tensor[(16, 13, 9), float64] {
  @func_17457() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_25601() -> (Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %282 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %274 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %275 = @func_23287() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32], Tensor[(220), float64]) */;
    %276 = @func_23341() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %277 = @func_11652() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %278 = %274.0;
    %279 = %275.1;
    %280 = %276.0;
    %281 = %277.0;
    (%278, %279, %280, %281)
  };
  %282() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 7, 2), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_17457() -> Tensor[(16, 13, 9), float64] {
  %283 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %283.0
}

def @func_7986() -> (Tensor[(16, 13, 9), uint32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
  @func_7984() /* ty=(Tensor[(16, 13, 9), uint32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */
}

def @func_9647() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) {
  %284 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %285 = cast(meta[relay.Constant][9] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
  %286 = reshape(%285, newshape=[264]) /* ty=Tensor[(264), float32] */;
  %287 = @func_5894(%286) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) */;
  %288 = %284.1;
  %289 = %287.0;
  (%288, %289, meta[relay.Constant][9] /* ty=Tensor[(264), float32] */)
}

def @func_9649() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) {
  @func_9647() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) */
}

def @func_24326() -> Tensor[(16, 13, 9), float64] {
  @func_24324() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_22431() -> (Tensor[(16, 13, 9), float32], Tensor[(3136), float32], float64, Tensor[(16, 13, 9), float32]) {
  @func_22429() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], float64, Tensor[(16, 13, 9), float32]) */
}

def @func_11547() -> Tensor[(16, 13, 9), float32] {
  %290 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %290.1
}

def @func_17945(%var_17944: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), bool]) {
  %299 = fn (%var_17935: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), bool]) {
    %291 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
    %292 = @func_13932() /* ty=Tensor[(14, 4, 8), uint16] */;
    %293 = cast(%var_17935, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
    %294 = shape_of(%292, dtype="int32") /* ty=Tensor[(3), int32] */;
    %295 = cast(%292, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
    %296 = dyn.reshape(%293, %294, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %297 = %291.2;
    %298 = greater_equal(%295, %296) /* ty=Tensor[(14, 4, 8), bool] */;
    (%297, %298)
  };
  %299(%var_17944) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), bool]) */
}

def @func_14457() -> (Tensor[(16, 13, 9), float32],) {
  @func_14455() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_11814(%var_11812: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  @func_11811(%var_11812) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */
}

def @func_19171() -> Tensor[(16, 13, 9), float32] {
  %300 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_17408() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %300() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_21238() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %303 = fn () -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %301 = @func_20065() /* ty=Tensor[(14, 4, 8), uint16] */;
    %302 = @func_10740() /* ty=Tensor[(16, 13, 9), float32] */;
    (%301, %302)
  };
  %303() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_19160(%var_19155: Tensor[(360), uint8]) -> (Tensor[(16, 13, 9), float32], Tensor[(15, 12, 2), bool], Tensor[(360), uint8]) {
  %304 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %305 = cast(%var_19155, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %306 = cast(%var_19155, dtype="uint8") /* ty=Tensor[(360), uint8] */;
  %307 = reshape(%305, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint8] */;
  %308 = reshape(%306, newshape=[15, 12, 2]) /* ty=Tensor[(15, 12, 2), uint8] */;
  %309 = %304.0;
  %310 = @func_14237(%307, %308) /* ty=Tensor[(15, 12, 2), bool] */;
  (%309, %310, %var_19155)
}

def @func_22937() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %319 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %311 = @func_17211() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
    %312 = @func_18600() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %313 = @func_14052() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(14, 4, 8), uint16]) */;
    %314 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %315 = %311.0;
    %316 = %312.0;
    %317 = %313.2;
    %318 = %314.0;
    (%315, %316, %317, %318)
  };
  %319() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_18809() -> Tensor[(16, 13, 9), float64] {
  @func_18807() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_7557() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %320 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %321 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %322 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %323 = %320.0;
  %324 = %321.0;
  %325 = %322.2;
  (%323, %324, %325)
}

def @func_27472() -> (Tensor[(16, 13, 9), float32],) {
  @func_27470() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_18256() -> (Tensor[(16, 13, 9), bool],) {
  @func_18254() /* ty=(Tensor[(16, 13, 9), bool],) */
}

def @func_20723(%var_20721: Tensor[(16, 12, 6), float32]) -> (Tensor[(16, 12, 6), int8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_20720(%var_20721) /* ty=(Tensor[(16, 12, 6), int8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_14183() -> (Tensor[(16, 13, 9), float32],) {
  %328 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %326 = @func_14094() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %327 = %326.0;
    (%327,)
  };
  %328() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_19104(%var_19102: Tensor[(16, 7, 14), bool], %var_19103: Tensor[(16, 7, 14), bool]) -> (Tensor[(16, 7, 14), bool],) {
  @func_19100(%var_19102, %var_19103) /* ty=(Tensor[(16, 7, 14), bool],) */
}

def @func_13614() -> Tensor[(16, 13, 9), float32] {
  %330 = fn () -> Tensor[(16, 13, 9), float32] {
    %329 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
    %329.0
  };
  %330() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_21520() -> (Tensor[(16, 13, 9), float32],) {
  %331 = @func_18600() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %332 = %331.0;
  (%332,)
}

def @func_18631() -> (Tensor[(16, 13, 9), float32],) {
  @func_18629() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_16880() -> Tensor[(16, 13, 9), float32] {
  %333 = @func_14274() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %333.0
}

def @func_18371() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], float64, Tensor[(735), float64]) {
  @func_18369() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], float64, Tensor[(735), float64]) */
}

def @func_18629() -> (Tensor[(16, 13, 9), float32],) {
  %334 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%334,)
}

def @func_16940() -> Tensor[(16, 13, 9), float32] {
  %335 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_13996() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %335() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19118() -> (Tensor[(14, 4, 8), uint16],) {
  %338 = fn () -> (Tensor[(14, 4, 8), uint16],) {
    %336 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %337 = %336.0;
    (%337,)
  };
  %338() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_14537(%var_14535: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32]) {
  @func_14534(%var_14535) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_13162() -> (Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) {
  %339 = @func_10037() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %340 = cast(meta[relay.Constant][10] /* ty=Tensor[(90), uint64] */, dtype="uint64") /* ty=Tensor[(90), uint64] */;
  %341 = reshape(%340, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %342 = %339.0;
  %343 = @func_4377(%341) /* ty=Tensor[(6, 5, 3), uint64] */;
  (%342, %343, meta[relay.Constant][10] /* ty=Tensor[(90), uint64] */)
}

def @func_5347() -> (Tensor[(16, 13, 9), float32],) {
  @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_27434() -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %344 = @func_19117() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %345 = @func_24416() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %346 = %344.0;
  %347 = @func_11688() /* ty=Tensor[(14, 4, 8), uint16] */;
  %348 = %345.0;
  (%346, %347, %348)
}

def @func_25191() -> Tensor[(16, 13, 9), float64] {
  %349 = fn () -> Tensor[(16, 13, 9), float64] {
    @func_5060() /* ty=Tensor[(16, 13, 9), float64] */
  };
  %349() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_24000() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float64], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16]) {
  %350 = @func_17335() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %351 = cast(meta[relay.Constant][11] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %352 = reshape(%351, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %353 = @func_6290(%352) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */;
  %354 = %353.2;
  %355 = cast(%354, dtype="float64") /* ty=Tensor[(3136), float64] */;
  %356 = @func_15011() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %357 = @func_20941() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %358 = %350.2;
  %359 = @func_14222() /* ty=Tensor[(16, 13, 9), float32] */;
  %360 = atanh(%355) /* ty=Tensor[(3136), float64] */;
  %361 = %356.0;
  %362 = %357.0;
  (%358, %359, meta[relay.Constant][11] /* ty=Tensor[(3136), float32] */, %360, %361, %362)
}

def @func_11907(%var_11897: Tensor[(4, 5, 11), float64]) -> (Tensor[(4, 5, 11), float64], Tensor[(9, 7, 2), float32]) {
  %363 = cast(%var_11897, dtype="float64") /* ty=Tensor[(4, 5, 11), float64] */;
  %364 = sin(%363) /* ty=Tensor[(4, 5, 11), float64] */;
  %365 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
  (%364, %365)
}

def @func_9105(%var_9071: Tensor[(15, 6), uint64], %var_9094: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), int32], Tensor[(6, 5, 3), uint64], Tensor[(15, 6), uint64], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) {
  %366 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %367 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %368 = %367.0;
  %369 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 4, 8), uint16] */, dtype="int32") /* ty=Tensor[(14, 4, 8), int32] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="int32") /* ty=Tensor[(14, 4, 8), int32] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %373 = cast(%var_9071, dtype="uint64") /* ty=Tensor[(15, 6), uint64] */;
  %374 = reshape(%373, newshape=[6, 5, 3]) /* ty=Tensor[(6, 5, 3), uint64] */;
  %375 = cast(%var_9094, dtype="float32") /* ty=Tensor[(42), float32] */;
  %376 = reshape(%375, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), float32] */;
  %377 = @func_2173(%376) /* ty=(Tensor[(6, 1, 7), float32],) */;
  %378 = %366.1;
  %379 = multiply(%371, %372) /* ty=Tensor[(14, 4, 8), int32] */;
  %380 = @func_4377(%374) /* ty=Tensor[(6, 5, 3), uint64] */;
  %381 = %377.0;
  (%378, %379, %380, %var_9071, %381, %var_9094)
}

def @func_22412(%var_22411: float64) -> (Tensor[(16, 13, 9), float32], float64, Tensor[(11, 10, ?), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 2), uint16], Tensor[(1, 3136), float32]) {
  %400 = fn (%var_22348: float64) -> (Tensor[(16, 13, 9), float32], float64, Tensor[(11, 10, ?), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 2), uint16], Tensor[(1, 3136), float32]) {
    %382 = cast(%var_22348, dtype="float64") /* ty=float64 */;
    %383 = reshape(%382, newshape=[]) /* ty=float64 */;
    %384 = @func_19491(%383) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) */;
    %385 = %384.1;
    %386 = cast(%385, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
    %387 = log(%386) /* ty=Tensor[(11, 10, 1), float64] */;
    %388 = cast(%385, dtype="uint8") /* ty=Tensor[(11, 10, 1), uint8] */;
    %389 = shape_of(%387, dtype="int32") /* ty=Tensor[(3), int32] */;
    %390 = cast(%387, dtype="uint8") /* ty=Tensor[(11, 10, 1), uint8] */;
    %391 = dyn.reshape(%388, %389, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %392 = @func_20551() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %393 = cast(meta[relay.Constant][13] /* ty=Tensor[(1, 3136), float32] */, dtype="float32") /* ty=Tensor[(1, 3136), float32] */;
    %394 = reshape(%393, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %395 = @func_16788(%394) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
    %396 = @func_19948() /* ty=Tensor[(16, 13, 9), float32] */;
    %397 = minimum(%390, %391) /* ty=Tensor[(11, 10, ?), uint8] */;
    %398 = %392.0;
    %399 = %395.3;
    (%396, %var_22348, %397, %398, %399, meta[relay.Constant][13] /* ty=Tensor[(1, 3136), float32] */)
  };
  %400(%var_22411) /* ty=(Tensor[(16, 13, 9), float32], float64, Tensor[(11, 10, ?), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 2), uint16], Tensor[(1, 3136), float32]) */
}

def @func_19229(%var_19227: Tensor[(12, 8, 8), float64]) -> Tensor[(12, 8, 8), float64] {
  @func_19226(%var_19227) /* ty=Tensor[(12, 8, 8), float64] */
}

def @func_11044() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
  %406 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
    %401 = cast(meta[relay.Constant][14] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
    %402 = reshape(%401, newshape=[32]) /* ty=Tensor[(32), uint16] */;
    %403 = @func_6679(%402) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %404 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
    %405 = %403.0;
    (%404, %405, meta[relay.Constant][14] /* ty=Tensor[(32), uint16] */)
  };
  %406() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */
}

def @func_11606(%var_11605: Tensor[(12, 2, 6), float32]) -> Tensor[(12, 2, 6), float64] {
  %413 = fn (%var_11572: Tensor[(12, 2, 6), float32]) -> Tensor[(12, 2, 6), float64] {
    %407 = cast(%var_11572, dtype="float32") /* ty=Tensor[(12, 2, 6), float32] */;
    %408 = log10(%407) /* ty=Tensor[(12, 2, 6), float32] */;
    %409 = cast(%408, dtype="float64") /* ty=Tensor[(12, 2, 6), float64] */;
    %410 = shape_of(%var_11572, dtype="int32") /* ty=Tensor[(3), int32] */;
    %411 = cast(%var_11572, dtype="float64") /* ty=Tensor[(12, 2, 6), float64] */;
    %412 = dyn.reshape(%409, %410, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%411, %412) /* ty=Tensor[(12, 2, 6), float64] */
  };
  %413(%var_11605) /* ty=Tensor[(12, 2, 6), float64] */
}

def @func_17170() -> Tensor[(16, 13, 9), float32] {
  @func_17168() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_7588() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %416 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %414 = @func_5305() /* ty=Tensor[(16, 13, 9), float32] */;
    %415 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
    (%414, %415)
  };
  %416() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_21963() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_21961() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_26363(%var_26360: float64, %var_26361: Tensor[(21), float32], %var_26362: Tensor[(3, 7, 3), float64]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(11, 10, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3, 7, 3), bool]) {
  %444 = fn (%var_26271: float64, %var_26295: Tensor[(21), float32], %var_26350: Tensor[(3, 7, 3), float64]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(11, 10, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3, 7, 3), bool]) {
    %417 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %418 = cast(%var_26271, dtype="float64") /* ty=float64 */;
    %419 = reshape(%418, newshape=[]) /* ty=float64 */;
    %420 = @func_9663(%419) /* ty=(Tensor[(11, 10, 1), bool],) */;
    %421 = %420.0;
    %422 = cast(%421, dtype="float64") /* ty=Tensor[(11, 10, 1), float64] */;
    %423 = cast(%var_26271, dtype="float64") /* ty=float64 */;
    %424 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %425 = cast(%var_26295, dtype="float32") /* ty=Tensor[(21), float32] */;
    %426 = reshape(%425, newshape=[3, 7, 1]) /* ty=Tensor[(3, 7, 1), float32] */;
    %427 = @func_4816(%426) /* ty=(Tensor[(3, 7, 1), float32], Tensor[(16, 13, 9), float32]) */;
    %428 = %427.0;
    %429 = cast(%var_26295, dtype="float64") /* ty=Tensor[(21), float64] */;
    %430 = shape_of(%428, dtype="int32") /* ty=Tensor[(3), int32] */;
    %431 = cast(%428, dtype="float64") /* ty=Tensor[(3, 7, 1), float64] */;
    %432 = dyn.reshape(%429, %430, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %433 = mod(%431, %432) /* ty=Tensor[(3, 7, ?), float64] */;
    %434 = cast(%433, dtype="bool") /* ty=Tensor[(3, 7, ?), bool] */;
    %435 = cast(%var_26350, dtype="bool") /* ty=Tensor[(3, 7, 3), bool] */;
    %436 = @func_19381() /* ty=Tensor[(14, 4, 8), uint16] */;
    %437 = %417.0;
    %438 = mod(%422, %423) /* ty=Tensor[(11, 10, 1), float64] */;
    %439 = %424.0;
    %440 = @func_26202() /* ty=Tensor[(16, 13, 9), float32] */;
    %441 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
    %442 = @func_14365() /* ty=Tensor[(16, 13, 9), float32] */;
    %443 = greater(%434, %435) /* ty=Tensor[(3, 7, 3), bool] */;
    (%436, %437, %438, %439, %440, %441, %442, %443)
  };
  %444(%var_26360, %var_26361, %var_26362) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(11, 10, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3, 7, 3), bool]) */
}

def @func_11483() -> (Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) {
  %445 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %446 = cast(meta[relay.Constant][15] /* ty=Tensor[(1, 3136), float32] */, dtype="float32") /* ty=Tensor[(1, 3136), float32] */;
  %447 = reshape(%446, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %448 = @func_6199(%447) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %449 = %445.0;
  %450 = %448.2;
  (%449, %450, meta[relay.Constant][15] /* ty=Tensor[(1, 3136), float32] */)
}

def @func_9639() -> (Tensor[(16, 13, 9), float32],) {
  @func_9637() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_14223() -> Tensor[(16, 13, 9), float32] {
  %452 = fn () -> Tensor[(16, 13, 9), float32] {
    %451 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %451.0
  };
  %452() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_22050(%var_22048: Tensor[(5, 3, 13), bool], %var_22049: Tensor[(5, 3, 13), bool]) -> (Tensor[(5, 3, 13), bool], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(5, 3, 13), float64], Tensor[(16, 13, 9), float64]) {
  %473 = fn (%var_21982: Tensor[(5, 3, 13), bool], %var_21983: Tensor[(5, 3, 13), bool]) -> (Tensor[(5, 3, 13), bool], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(5, 3, 13), float64], Tensor[(16, 13, 9), float64]) {
    %453 = cast(%var_21983, dtype="bool") /* ty=Tensor[(5, 3, 13), bool] */;
    %454 = shape_of(%var_21982, dtype="int32") /* ty=Tensor[(3), int32] */;
    %455 = cast(%var_21982, dtype="bool") /* ty=Tensor[(5, 3, 13), bool] */;
    %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %457 = @func_21574() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %458 = cast(%var_21983, dtype="float32") /* ty=Tensor[(5, 3, 13), float32] */;
    %459 = log10(%458) /* ty=Tensor[(5, 3, 13), float32] */;
    %460 = cast(%var_21982, dtype="int16") /* ty=Tensor[(5, 3, 13), int16] */;
    %461 = shape_of(%459, dtype="int32") /* ty=Tensor[(3), int32] */;
    %462 = cast(%459, dtype="int16") /* ty=Tensor[(5, 3, 13), int16] */;
    %463 = dyn.reshape(%460, %461, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %464 = bitwise_xor(%462, %463) /* ty=Tensor[(5, 3, 13), int16] */;
    %465 = cast(%464, dtype="float64") /* ty=Tensor[(5, 3, 13), float64] */;
    %466 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %467 = logical_and(%455, %456) /* ty=Tensor[(5, 3, 13), bool] */;
    %468 = @func_8045() /* ty=Tensor[(16, 12, 6), float32] */;
    %469 = @func_19170() /* ty=Tensor[(16, 13, 9), float32] */;
    %470 = %457.0;
    %471 = atanh(%465) /* ty=Tensor[(5, 3, 13), float64] */;
    %472 = %466.0;
    (%467, %468, %469, %470, %471, %472)
  };
  %473(%var_22048, %var_22049) /* ty=(Tensor[(5, 3, 13), bool], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(5, 3, 13), float64], Tensor[(16, 13, 9), float64]) */
}

def @func_9308() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %478 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %474 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %475 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %476 = %474.0;
    %477 = %475.3;
    (%476, %477)
  };
  %478() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_19193() -> (Tensor[(16, 13, 9), float64],) {
  @func_19191() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_25781() -> Tensor[(16, 13, 9), float32] {
  %480 = fn () -> Tensor[(16, 13, 9), float32] {
    %479 = @func_11868() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %479.0
  };
  %480() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_15828() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_15826() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_18526(%var_18500: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), bool], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %481 = @func_6541() /* ty=Tensor[(14, 4, 8), uint16] */;
  %482 = cast(%var_18500, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(3), int32] */;
  %484 = cast(%481, dtype="bool") /* ty=Tensor[(14, 4, 8), bool] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %486 = @func_18113() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %487 = cast(%var_18500, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
  %488 = reshape(%487, newshape=[448]) /* ty=Tensor[(448), uint16] */;
  %489 = @func_16196(%488) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8], Tensor[(448), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %490 = less_equal(%484, %485) /* ty=Tensor[(14, 4, 8), bool] */;
  %491 = %486.0;
  %492 = %489.6;
  (%490, %491, %492)
}

def @func_16199(%var_16197: Tensor[(448), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8], Tensor[(448), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_16196(%var_16197) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8], Tensor[(448), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_4352() -> (Tensor[(16, 13, 9), float32],) {
  %494 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %493 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
    (%493,)
  };
  %494() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_22071() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %498 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %495 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %496 = %495.0;
    %497 = @func_14963() /* ty=Tensor[(16, 13, 9), float32] */;
    (%496, %497)
  };
  %498() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_26517() -> (Tensor[(16, 13, 9), float32],) {
  @func_26515() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_5765() -> (Tensor[(16, 13, 9), float64],) {
  %499 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %500 = %499.0;
  (%500,)
}

def @func_14130() -> (Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) {
  %504 = fn () -> (Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) {
    %501 = @func_12430() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
    %502 = %501.0;
    %503 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
    (%502, %503)
  };
  %504() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_16068(%var_16067: Tensor[(9, 6, 10), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), uint16]) {
  %514 = fn (%var_16046: Tensor[(9, 6, 10), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), uint16]) {
    %505 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %506 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
    %507 = %506.0;
    %508 = cast(%var_16046, dtype="uint16") /* ty=Tensor[(9, 6, 10), uint16] */;
    %509 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
    %510 = cast(%507, dtype="uint16") /* ty=Tensor[(9, 6, 10), uint16] */;
    %511 = dyn.reshape(%508, %509, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %512 = %505.0;
    %513 = logical_xor(%510, %511) /* ty=Tensor[(9, 6, 10), uint16] */;
    (%512, %513)
  };
  %514(%var_16067) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), uint16]) */
}

def @func_17199() -> Tensor[(16, 13, 9), float32] {
  %516 = fn () -> Tensor[(16, 13, 9), float32] {
    %515 = @func_17116() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %515.0
  };
  %516() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_21047() -> Tensor[(16, 13, 9), float64] {
  %517 = fn () -> Tensor[(16, 13, 9), float64] {
    @func_18807() /* ty=Tensor[(16, 13, 9), float64] */
  };
  %517() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_27050(%var_27033: float64) -> Tensor[(10, 11, 16), float64] {
  %518 = cast(%var_27033, dtype="float64") /* ty=float64 */;
  %519 = cast(meta[relay.Constant][16] /* ty=Tensor[(10, 11, 16), float64] */, dtype="float64") /* ty=Tensor[(10, 11, 16), float64] */;
  floor_mod(%518, %519) /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_11398() -> Tensor[(16, 13, 9), float32] {
  @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_11969() -> Tensor[(16, 13, 9), float32] {
  %521 = fn () -> Tensor[(16, 13, 9), float32] {
    %520 = @func_9307() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %520.0
  };
  %521() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_12563() -> (Tensor[(16, 13, 9), float32],) {
  %524 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %522 = @func_12228() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %523 = %522.0;
    (%523,)
  };
  %524() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_27450() -> (Tensor[(16, 13, 9), float32],) {
  @func_27448() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_27718() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(15, 8, 10), bool], Tensor[(1200), uint8], Tensor[(16, 13, 9), float32]) {
  @func_27716() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(15, 8, 10), bool], Tensor[(1200), uint8], Tensor[(16, 13, 9), float32]) */
}

def @func_18896() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %525 = @func_16635() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) */;
  %526 = @func_16371() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(54, 10), uint8], Tensor[(9, 7, 2), float32], Tensor[(16, 13, 9), float64]) */;
  %527 = %525.0;
  %528 = %526.4;
  (%527, %528)
}

def @func_11811(%var_11789: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %529 = @func_9335() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %530 = cast(%var_11789, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %531 = reshape(%530, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %532 = @func_6679(%531) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %533 = %529.2;
  %534 = %532.1;
  (%533, %534, %var_11789)
}

def @func_16196(%var_16133: Tensor[(448), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8], Tensor[(448), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %535 = @func_15151() /* ty=(Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %536 = cast(%var_16133, dtype="uint16") /* ty=Tensor[(448), uint16] */;
  %537 = reshape(%536, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), uint16] */;
  %538 = @func_10619(%537) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8]) */;
  %539 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %540 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %541 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %542 = @func_12848() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %543 = %535.1;
  %544 = %538.3;
  %545 = %539.0;
  %546 = %540.0;
  %547 = %541.1;
  %548 = %542.3;
  (%543, %544, %var_16133, %545, %546, %547, %548)
}

def @func_16236() -> Tensor[(16, 13, 9), float64] {
  @func_16234() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_16419() -> (Tensor[(16, 13, 9), float32],) {
  @func_16417() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_15502(%var_15500: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), float32], Tensor[(264), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  @func_15499(%var_15500) /* ty=(Tensor[(14, 4, 8), float32], Tensor[(264), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_19100(%var_19089: Tensor[(16, 7, 14), bool], %var_19090: Tensor[(16, 7, 14), bool]) -> (Tensor[(16, 7, 14), bool],) {
  %549 = cast(%var_19090, dtype="bool") /* ty=Tensor[(16, 7, 14), bool] */;
  %550 = shape_of(%var_19089, dtype="int32") /* ty=Tensor[(3), int32] */;
  %551 = cast(%var_19089, dtype="bool") /* ty=Tensor[(16, 7, 14), bool] */;
  %552 = dyn.reshape(%549, %550, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %553 = logical_or(%551, %552) /* ty=Tensor[(16, 7, 14), bool] */;
  (%553,)
}

def @func_10165() -> (Tensor[(16, 13, 9), float64],) {
  @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_24788() -> (Tensor[(16, 13, 9), float32],) {
  %555 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %554 = @func_20342() /* ty=Tensor[(16, 13, 9), float32] */;
    (%554,)
  };
  %555() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_15224() -> (Tensor[(16, 13, 9), float32],) {
  %557 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %556 = @func_11968() /* ty=Tensor[(16, 13, 9), float32] */;
    (%556,)
  };
  %557() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_14650() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_14648() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_19294() -> (Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %563 = fn () -> (Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %558 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
    %559 = @func_15550() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %560 = %558.0;
    %561 = %559.1;
    %562 = @func_16880() /* ty=Tensor[(16, 13, 9), float32] */;
    (%560, %561, %562)
  };
  %563() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_1267(%var_1266: Tensor[(16, 14, 14), float32]) -> Tensor[(16, 14, 14), float32] {
  %568 = fn (%var_1261: Tensor[(16, 14, 14), float32]) -> Tensor[(16, 14, 14), float32] {
    %564 = cast(%var_1261, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
    %565 = shape_of(meta[relay.Constant][17] /* ty=Tensor[(16, 14, 14), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %566 = cast(meta[relay.Constant][17] /* ty=Tensor[(16, 14, 14), float32] */, dtype="float32") /* ty=Tensor[(16, 14, 14), float32] */;
    %567 = dyn.reshape(%564, %565, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_mod(%566, %567) /* ty=Tensor[(16, 14, 14), float32] */
  };
  %568(%var_1266) /* ty=Tensor[(16, 14, 14), float32] */
}

def @func_13565() -> (Tensor[(16, 13, 9), float32],) {
  @func_13563() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_5060() -> Tensor[(16, 13, 9), float64] {
  %569 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %569.0
}

def @func_5693() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_24402() -> (Tensor[(16, 13, 9), float32],) {
  %572 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %570 = @func_12732() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
    %571 = %570.1;
    (%571,)
  };
  %572() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_4181() -> (Tensor[(16, 13, 9), float32],) {
  %573 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%573,)
}

def @func_22534(%var_22533: Tensor[(735), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(735), uint16]) {
  %583 = fn (%var_22523: Tensor[(735), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(735), uint16]) {
    %574 = @func_13421() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %575 = @func_18369() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], float64, Tensor[(735), float64]) */;
    %576 = %575.3;
    %577 = cast(%var_22523, dtype="uint16") /* ty=Tensor[(735), uint16] */;
    %578 = shape_of(%576, dtype="int32") /* ty=Tensor[(1), int32] */;
    %579 = cast(%576, dtype="uint16") /* ty=Tensor[(735), uint16] */;
    %580 = dyn.reshape(%577, %578, newshape=[]) /* ty=Tensor[(?), uint16] */;
    %581 = %574.0;
    %582 = left_shift(%579, %580) /* ty=Tensor[(735), uint16] */;
    (%581, %582)
  };
  %583(%var_22533) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(735), uint16]) */
}

def @func_6148() -> (Tensor[(16, 13, 9), float64],) {
  %586 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %584 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %585 = %584.0;
    (%585,)
  };
  %586() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_9143() -> Tensor[(16, 13, 9), float32] {
  @func_9141() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_6265(%var_6264: Tensor[(16, 13, 9), float32]) -> Tensor[(16, 13, 9), bool] {
  %592 = fn (%var_6254: Tensor[(16, 13, 9), float32]) -> Tensor[(16, 13, 9), bool] {
    %587 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
    %588 = cast(%var_6254, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
    %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
    %590 = cast(%587, dtype="bool") /* ty=Tensor[(16, 13, 9), bool] */;
    %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%590, %591) /* ty=Tensor[(16, 13, 9), bool] */
  };
  %592(%var_6264) /* ty=Tensor[(16, 13, 9), bool] */
}

def @func_17721() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %593 = @func_13421() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %594 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %595 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %596 = @func_9647() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) */;
  %597 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %598 = %593.0;
  %599 = %594.0;
  %600 = %595.1;
  %601 = %596.1;
  %602 = %597.0;
  (%598, %599, %600, %601, %602)
}

def @func_6889() -> (Tensor[(16, 13, 9), float32],) {
  %603 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %604 = %603.1;
  (%604,)
}

def @func_7790() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %605 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %606 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %607 = %605.0;
  %608 = %606.0;
  (%607, %608)
}

def @func_4836() -> Tensor[(16, 13, 9), float32] {
  %609 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %609.0
}

def @func_19869() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_19867() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_18917(%var_18912: int8) -> Tensor[(1, 14, 4), int8] {
  %610 = cast(%var_18912, dtype="int8") /* ty=int8 */;
  %611 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 14, 4), int8] */, dtype="int8") /* ty=Tensor[(1, 14, 4), int8] */;
  minimum(%610, %611) /* ty=Tensor[(1, 14, 4), int8] */
}

def @func_4838() -> Tensor[(16, 13, 9), float32] {
  @func_4836() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_18439() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_18437() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_23818(%var_23817: float32) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(1, 7, 14), float32], float32) {
  %621 = fn (%var_23803: float32) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(1, 7, 14), float32], float32) {
    %612 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %613 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
    %614 = cast(%var_23803, dtype="float32") /* ty=float32 */;
    %615 = reshape(%614, newshape=[]) /* ty=float32 */;
    %616 = @func_15022(%615) /* ty=(Tensor[(1, 7, 14), float32],) */;
    %617 = %612.1;
    %618 = %613.0;
    %619 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
    %620 = %616.0;
    (%617, %618, %619, %620, %var_23803)
  };
  %621(%var_23817) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(1, 7, 14), float32], float32) */
}

def @func_21715(%var_21713: int16, %var_21714: Tensor[(5, 13, 5), int16]) -> (Tensor[(5, 13, 5), int16],) {
  @func_21711(%var_21713, %var_21714) /* ty=(Tensor[(5, 13, 5), int16],) */
}

def @func_16862() -> (Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  %622 = @func_13162() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) */;
  %623 = %622.1;
  %624 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  %625 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%623, %624, %625)
}

def @func_19053() -> Tensor[(16, 13, 9), float32] {
  %626 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %626.0
}

def @func_4816(%var_4795: Tensor[(3, 7, 1), float32]) -> (Tensor[(3, 7, 1), float32], Tensor[(16, 13, 9), float32]) {
  %627 = cast(%var_4795, dtype="float32") /* ty=Tensor[(3, 7, 1), float32] */;
  %628 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %629 = sigmoid(%627) /* ty=Tensor[(3, 7, 1), float32] */;
  %630 = %628.1;
  (%629, %630)
}

def @func_19055() -> Tensor[(16, 13, 9), float32] {
  @func_19053() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5927() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %636 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %631 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
    %632 = cast(%631, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
    %633 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %634 = atan(%632) /* ty=Tensor[(16, 13, 9), float32] */;
    %635 = %633.1;
    (%634, %635)
  };
  %636() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_18911() -> (Tensor[(16, 13, 9), float32],) {
  %638 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %637 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
    (%637,)
  };
  %638() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_24307() -> Tensor[(16, 13, 9), float32] {
  %639 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %639.0
}

def @func_25325() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %646 = fn () -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %640 = @func_24047() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %641 = @func_18600() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %642 = %640.0;
    %643 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
    %644 = @func_13932() /* ty=Tensor[(14, 4, 8), uint16] */;
    %645 = %641.0;
    (%642, %643, %644, %645)
  };
  %646() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_4612() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %654 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %647 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %648 = %647.0;
    %649 = cast(%648, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
    %650 = sin(%649) /* ty=Tensor[(16, 13, 9), float32] */;
    %651 = cast(%650, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
    %652 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
    %653 = log(%651) /* ty=Tensor[(16, 13, 9), float32] */;
    (%652, %653)
  };
  %654() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_4503(%var_4475: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %655 = cast(meta[relay.Constant][19] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %656 = reshape(%655, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %657 = @func_4413(%656) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %658 = cast(%var_4475, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %659 = reshape(%658, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %660 = @func_3124(%659) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %661 = cast(%var_4475, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %662 = reshape(%661, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %663 = @func_3124(%662) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %664 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %665 = %657.0;
  %666 = %660.0;
  %667 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %668 = %663.0;
  (%664, %665, meta[relay.Constant][19] /* ty=Tensor[(540), uint8] */, %666, %var_4475, %667, %668)
}

def @func_8112() -> (Tensor[(16, 13, 9), float32],) {
  %669 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %670 = %669.0;
  (%670,)
}

def @func_8047() -> Tensor[(16, 12, 6), float32] {
  @func_8045() /* ty=Tensor[(16, 12, 6), float32] */
}

def @func_24947() -> (Tensor[(15, 14, 2), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float64], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) {
  %682 = fn () -> (Tensor[(15, 14, 2), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float64], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) {
    %671 = @func_11302() /* ty=(Tensor[(32), uint16],) */;
    %672 = @func_24047() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %673 = cast(meta[relay.Constant][20] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %674 = cast(meta[relay.Constant][20] /* ty=Tensor[(160), float64] */, dtype="float64") /* ty=Tensor[(160), float64] */;
    %675 = reshape(%673, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
    %676 = reshape(%674, newshape=[8, 5, 4]) /* ty=Tensor[(8, 5, 4), float64] */;
    %677 = @func_20413(%675, %676) /* ty=(Tensor[(8, 5, 4), float64], Tensor[(16, 13, 9), float32]) */;
    %678 = @func_22867() /* ty=Tensor[(15, 14, 2), float32] */;
    %679 = %671.0;
    %680 = %672.0;
    %681 = %677.0;
    (%678, %679, %680, %681, meta[relay.Constant][20] /* ty=Tensor[(160), float64] */)
  };
  %682() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float64], Tensor[(8, 5, 4), float64], Tensor[(160), float64]) */
}

def @func_7339() -> (Tensor[(16, 13, 9), float32],) {
  %684 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %683 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
    (%683,)
  };
  %684() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_16966() -> (Tensor[(14, 4, 8), uint16],) {
  %687 = fn () -> (Tensor[(14, 4, 8), uint16],) {
    %685 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
    %686 = %685.0;
    (%686,)
  };
  %687() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_18898() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  @func_18896() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */
}

def @func_9979(%var_9978: Tensor[(16, 13, 9), uint32]) -> (Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) {
  %696 = fn (%var_9962: Tensor[(16, 13, 9), uint32]) -> (Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) {
    %688 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
    %689 = cast(%var_9962, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
    %690 = shape_of(%688, dtype="int32") /* ty=Tensor[(3), int32] */;
    %691 = cast(%688, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
    %692 = dyn.reshape(%689, %690, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %693 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %694 = bitwise_xor(%691, %692) /* ty=Tensor[(16, 13, 9), uint8] */;
    %695 = %693.1;
    (%694, %695)
  };
  %696(%var_9978) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) */
}

def @func_10547() -> (Tensor[(16, 13, 9), float32],) {
  %697 = @func_5171() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %698 = %697.1;
  (%698,)
}

def @func_18807() -> Tensor[(16, 13, 9), float64] {
  %699 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %699.0
}

def @func_16637() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) {
  @func_16635() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) */
}

def @func_17446(%var_17445: Tensor[(6, 5, 3), uint64]) -> Tensor[(6, 5, 3), uint8] {
  %706 = fn (%var_17436: Tensor[(6, 5, 3), uint64]) -> Tensor[(6, 5, 3), uint8] {
    %700 = @func_13162() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) */;
    %701 = %700.1;
    %702 = cast(%var_17436, dtype="uint8") /* ty=Tensor[(6, 5, 3), uint8] */;
    %703 = shape_of(%701, dtype="int32") /* ty=Tensor[(3), int32] */;
    %704 = cast(%701, dtype="uint8") /* ty=Tensor[(6, 5, 3), uint8] */;
    %705 = dyn.reshape(%702, %703, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    minimum(%704, %705) /* ty=Tensor[(6, 5, 3), uint8] */
  };
  %706(%var_17445) /* ty=Tensor[(6, 5, 3), uint8] */
}

def @func_20764() -> (Tensor[(16, 13, 9), float32],) {
  %709 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %707 = @func_19867() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %708 = %707.1;
    (%708,)
  };
  %709() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_26146() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %710 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %711 = @func_16417() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %712 = %710.1;
  %713 = %711.0;
  (%712, %713)
}

def @func_16490() -> (Tensor[(14, 4, 8), uint16],) {
  %714 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %715 = %714.0;
  (%715,)
}

def @func_18369() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], float64, Tensor[(735), float64]) {
  %716 = @func_13421() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %717 = cast(-1.67029f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %718 = cast(meta[relay.Constant][21] /* ty=Tensor[(735), float64] */, dtype="float64") /* ty=Tensor[(735), float64] */;
  %719 = reshape(%717, newshape=[]) /* ty=float64 */;
  %720 = reshape(%718, newshape=[7, 15, 7]) /* ty=Tensor[(7, 15, 7), float64] */;
  %721 = @func_11760(%719, %720) /* ty=(Tensor[(7, 15, 7), float64], Tensor[(16, 13, 9), float32]) */;
  %722 = %716.0;
  %723 = %721.1;
  (%722, %723, -1.67029f64 /* ty=float64 */, meta[relay.Constant][21] /* ty=Tensor[(735), float64] */)
}

def @func_26902() -> Tensor[(16, 13, 9), float32] {
  %725 = fn () -> Tensor[(16, 13, 9), float32] {
    %724 = @func_18200() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %724.0
  };
  %725() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_13214() -> (Tensor[(16, 13, 9), float32],) {
  @func_13212() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_10253() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %732 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %726 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %727 = %726.0;
    %728 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
    %729 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
    %730 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
    %731 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
    (%727, %728, %729, %730, %731)
  };
  %732() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_22463() -> Tensor[(16, 13, 9), float32] {
  %734 = fn () -> Tensor[(16, 13, 9), float32] {
    %733 = @func_17363() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %733.0
  };
  %734() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19009(%var_19008: Tensor[(1, 13, 8), uint8]) -> (Tensor[(11, 13, 8), uint8],) {
  %738 = fn (%var_19000: Tensor[(1, 13, 8), uint8]) -> (Tensor[(11, 13, 8), uint8],) {
    %735 = cast(%var_19000, dtype="uint8") /* ty=Tensor[(1, 13, 8), uint8] */;
    %736 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 13, 8), uint8] */, dtype="uint8") /* ty=Tensor[(11, 13, 8), uint8] */;
    %737 = right_shift(%735, %736) /* ty=Tensor[(11, 13, 8), uint8] */;
    (%737,)
  };
  %738(%var_19008) /* ty=(Tensor[(11, 13, 8), uint8],) */
}

def @func_16373() -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(54, 10), uint8], Tensor[(9, 7, 2), float32], Tensor[(16, 13, 9), float64]) {
  @func_16371() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(54, 10), uint8], Tensor[(9, 7, 2), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_14648() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %739 = @func_11216() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %740 = @func_8160() /* ty=Tensor[(16, 13, 9), float32] */;
  %741 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
  %742 = %739.0;
  (%740, %741, %742)
}

def @func_13833(%var_13831: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32]) {
  @func_13830(%var_13831) /* ty=(Tensor[(13, 6, 14), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32]) */
}

def @func_16788(%var_16785: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) {
  %743 = @func_16513() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %744 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %745 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 2), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2), uint16] */;
  %746 = reshape(%745, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
  %747 = @func_3124(%746) /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %748 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %749 = @func_8428() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %750 = %749.0;
  %751 = cast(%750, dtype="float32") /* ty=Tensor[(14, 4, 8), float32] */;
  %752 = cast(meta[relay.Constant][23] /* ty=Tensor[(16, 2), uint16] */, dtype="uint16") /* ty=Tensor[(16, 2), uint16] */;
  %753 = reshape(%752, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %754 = @func_4503(%753) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %755 = cast(%var_16785, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %756 = reshape(%755, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %757 = @func_6199(%756) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %758 = %743.0;
  %759 = %744.1;
  %760 = %747.0;
  %761 = %748.0;
  %762 = log2(%751) /* ty=Tensor[(14, 4, 8), float32] */;
  %763 = %754.0;
  %764 = @func_9141() /* ty=Tensor[(16, 13, 9), float32] */;
  %765 = %757.1;
  (%758, %759, %760, meta[relay.Constant][23] /* ty=Tensor[(16, 2), uint16] */, %761, %762, %763, %764, %765, %var_16785)
}

def @func_17723() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  @func_17721() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_13716() -> (Tensor[(16, 13, 9), float32],) {
  %766 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %767 = %766.0;
  (%767,)
}

def @func_27053(%var_27051: float64) -> Tensor[(10, 11, 16), float64] {
  @func_27050(%var_27051) /* ty=Tensor[(10, 11, 16), float64] */
}

def @func_7792() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_14595() -> Tensor[(16, 13, 9), float32] {
  %769 = fn () -> Tensor[(16, 13, 9), float32] {
    %768 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %768.0
  };
  %769() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_7401() -> (Tensor[(16, 13, 9), float64],) {
  %772 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %770 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %771 = %770.0;
    (%771,)
  };
  %772() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_5193(%var_5188: Tensor[(4, 8), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(4, 8), uint16]) {
  %773 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %774 = cast(%773, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
  %775 = cast(%var_5188, dtype="uint16") /* ty=Tensor[(4, 8), uint16] */;
  %776 = reshape(%775, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %777 = @func_4503(%776) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %778 = tan(%774) /* ty=Tensor[(16, 13, 9), float64] */;
  %779 = %777.6;
  (%778, %779, %var_5188)
}

def @func_26527() -> (Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
  %784 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
    %780 = @func_22243() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %781 = @func_19399() /* ty=(Tensor[(32), uint16],) */;
    %782 = %780.0;
    %783 = %781.0;
    (%782, %783)
  };
  %784() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */
}

def @func_18731() -> Tensor[(16, 13, 9), float32] {
  %785 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %785.0
}

def @func_21961() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %786 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %787 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %788 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %789 = %786.1;
  %790 = %787.2;
  %791 = %788.0;
  %792 = @func_14594() /* ty=Tensor[(16, 13, 9), float32] */;
  %793 = @func_17020() /* ty=Tensor[(16, 13, 9), float32] */;
  (%789, %790, %791, %792, %793)
}

def @func_19949() -> Tensor[(16, 13, 9), float32] {
  %794 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_14963() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %794() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17409() -> Tensor[(16, 13, 9), float32] {
  %796 = fn () -> Tensor[(16, 13, 9), float32] {
    %795 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %795.1
  };
  %796() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_20687() -> Tensor[(16, 13, 9), float32] {
  %797 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_11506() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %797() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_9335() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %798 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %799 = %798.0;
  %800 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  %801 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  (%799, %800, %801)
}

def @func_8878() -> Tensor[(16, 13, 9), float32] {
  @func_8876() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17022() -> Tensor[(16, 13, 9), float32] {
  @func_17020() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_14534(%var_14524: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32]) {
  %802 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %803 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %804 = cast(meta[relay.Constant][24] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %805 = reshape(%804, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %806 = @func_4742(%805) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %807 = cast(%var_14524, dtype="float32") /* ty=Tensor[(42), float32] */;
  %808 = reshape(%807, newshape=[6, 1, 7]) /* ty=Tensor[(6, 1, 7), float32] */;
  %809 = @func_2173(%808) /* ty=(Tensor[(6, 1, 7), float32],) */;
  %810 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %811 = @func_9266() /* ty=Tensor[(16, 13, 9), float32] */;
  %812 = %802.2;
  %813 = %803.0;
  %814 = %806.3;
  %815 = %809.0;
  %816 = %810.0;
  (%811, %812, %813, %814, meta[relay.Constant][24] /* ty=Tensor[(32), uint16] */, %815, %var_14524, %816)
}

def @func_8907() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_8905() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_7373() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %817 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %818 = %817.0;
  %819 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
  (%818, %819)
}

def @func_7375() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_10740() -> Tensor[(16, 13, 9), float32] {
  @func_8876() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_13737() -> (Tensor[(16, 13, 9), float32],) {
  %822 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %820 = @func_10252() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %821 = %820.0;
    (%821,)
  };
  %822() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_19756(%var_19755: Tensor[(1, 1, 9), float64]) -> Tensor[(1, 1, 9), float64] {
  %824 = fn (%var_19746: Tensor[(1, 1, 9), float64]) -> Tensor[(1, 1, 9), float64] {
    %823 = cast(%var_19746, dtype="float64") /* ty=Tensor[(1, 1, 9), float64] */;
    rsqrt(%823) /* ty=Tensor[(1, 1, 9), float64] */
  };
  %824(%var_19755) /* ty=Tensor[(1, 1, 9), float64] */
}

def @func_8429() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %829 = fn () -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %825 = @func_7557() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %826 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %827 = %825.2;
    %828 = %826.0;
    (%827, %828)
  };
  %829() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_15836() -> Tensor[(16, 13, 9), float32] {
  %831 = fn () -> Tensor[(16, 13, 9), float32] {
    %830 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
    %830.1
  };
  %831() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_20089() -> Tensor[(14, 4, 8), uint16] {
  %832 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %832.0
}

def @func_22288() -> Tensor[(16, 13, 9), float32] {
  %833 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_12292() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %833() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5345() -> (Tensor[(16, 13, 9), float32],) {
  %834 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%834,)
}

def @func_13164() -> (Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) {
  @func_13162() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) */
}

def @func_25136() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(13, 6, 14), float64], Tensor[(1092), float64]) {
  %845 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(13, 6, 14), float64], Tensor[(1092), float64]) {
    %835 = @func_13395() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
    %836 = cast(meta[relay.Constant][25] /* ty=Tensor[(1092), float64] */, dtype="float64") /* ty=Tensor[(1092), float64] */;
    %837 = reshape(%836, newshape=[13, 6, 14]) /* ty=Tensor[(13, 6, 14), float64] */;
    %838 = @func_13830(%837) /* ty=(Tensor[(13, 6, 14), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32]) */;
    %839 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
    %840 = @func_12292() /* ty=Tensor[(16, 13, 9), float32] */;
    %841 = @func_22890() /* ty=Tensor[(16, 13, 9), float32] */;
    %842 = @func_23403() /* ty=Tensor[(16, 13, 9), float32] */;
    %843 = %835.1;
    %844 = %838.0;
    (%839, %840, %841, %842, %843, %844, meta[relay.Constant][25] /* ty=Tensor[(1092), float64] */)
  };
  %845() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(13, 6, 14), float64], Tensor[(1092), float64]) */
}

def @func_23341() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %846 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %847 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %848 = %846.0;
  %849 = %847.0;
  %850 = @func_10788() /* ty=Tensor[(16, 13, 9), float32] */;
  (%848, %849, %850)
}

def @func_13130() -> (Tensor[(16, 13, 9), float32], Tensor[(4, 6, 11), float64], Tensor[(3136), float32], Tensor[(264), float32]) {
  %859 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(4, 6, 11), float64], Tensor[(3136), float32], Tensor[(264), float32]) {
    %851 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %852 = cast(meta[relay.Constant][26] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %853 = cast(meta[relay.Constant][27] /* ty=Tensor[(264), float32] */, dtype="float32") /* ty=Tensor[(264), float32] */;
    %854 = reshape(%852, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %855 = reshape(%853, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
    %856 = @func_2469(%854, %855) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
    %857 = %851.0;
    %858 = %856.4;
    (%857, %858, meta[relay.Constant][26] /* ty=Tensor[(3136), float32] */, meta[relay.Constant][27] /* ty=Tensor[(264), float32] */)
  };
  %859() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(4, 6, 11), float64], Tensor[(3136), float32], Tensor[(264), float32]) */
}

def @func_26592() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_26590() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_2473(%var_2471: Tensor[(3136), float32], %var_2472: Tensor[(4, 6, 11), float32]) -> (Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) {
  @func_2469(%var_2471, %var_2472) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */
}

def @func_11506() -> Tensor[(16, 13, 9), float32] {
  %860 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %860.1
}

def @func_24418() -> (Tensor[(16, 13, 9), float64],) {
  @func_24416() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_15690() -> (Tensor[(16, 13, 9), float32],) {
  @func_15688() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_26781() -> Tensor[(16, 13, 9), float32] {
  @func_26779() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_11433() -> (Tensor[(16, 13, 9), float32],) {
  @func_11431() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_11508() -> Tensor[(16, 13, 9), float32] {
  @func_11506() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5171() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %861 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %862 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %863 = cast(%862, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  %864 = %861.0;
  %865 = log2(%863) /* ty=Tensor[(16, 13, 9), float32] */;
  (%864, %865)
}

def @func_6958() -> (Tensor[(14, 4, 8), uint16],) {
  %867 = fn () -> (Tensor[(14, 4, 8), uint16],) {
    %866 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
    (%866,)
  };
  %867() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_13659() -> (Tensor[(3136), float32],) {
  %870 = fn () -> (Tensor[(3136), float32],) {
    %868 = @func_11483() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) */;
    %869 = %868.1;
    (%869,)
  };
  %870() /* ty=(Tensor[(3136), float32],) */
}

def @func_16371() -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(54, 10), uint8], Tensor[(9, 7, 2), float32], Tensor[(16, 13, 9), float64]) {
  %871 = @func_10093() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %872 = cast(meta[relay.Constant][28] /* ty=Tensor[(54, 10), uint8] */, dtype="uint8") /* ty=Tensor[(54, 10), uint8] */;
  %873 = reshape(%872, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %874 = @func_4413(%873) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %875 = %871.0;
  %876 = %874.1;
  %877 = @func_6897() /* ty=Tensor[(9, 7, 2), float32] */;
  %878 = @func_16234() /* ty=Tensor[(16, 13, 9), float64] */;
  (%875, %876, meta[relay.Constant][28] /* ty=Tensor[(54, 10), uint8] */, %877, %878)
}

def @func_17263(%var_17261: Tensor[(14, 4, 8), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int64], Tensor[(16, 13, 9), float32]) {
  @func_17260(%var_17261) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int64], Tensor[(16, 13, 9), float32]) */
}

def @func_20126() -> (Tensor[(16, 13, 9), float32],) {
  @func_20124() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_27753() -> (Tensor[(9, 6, 10), float64],) {
  %879 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
  %880 = %879.0;
  (%880,)
}

def @func_4167() -> Tensor[(16, 13, 9), float32] {
  %882 = fn () -> Tensor[(16, 13, 9), float32] {
    %881 = cast(meta[relay.Constant][29] /* ty=Tensor[(16, 13, 9), float32] */, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
    sqrt(%881) /* ty=Tensor[(16, 13, 9), float32] */
  };
  %882() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_8905() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %883 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %884 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %885 = %883.0;
  %886 = %884.0;
  (%885, %886)
}

def @func_17619() -> Tensor[(16, 13, 9), float32] {
  %887 = @func_11216() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %887.0
}

def @func_5305() -> Tensor[(16, 13, 9), float32] {
  %888 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %888.0
}

def @func_10037() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %889 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %890 = @func_4752() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %891 = %889.0;
  %892 = %890.0;
  (%891, %892)
}

def @func_14318() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %899 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %893 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %894 = @func_12732() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
    %895 = @func_10332() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %896 = %893.2;
    %897 = %894.1;
    %898 = %895.1;
    (%896, %897, %898)
  };
  %899() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_8574() -> Tensor[(16, 13, 9), float32] {
  @func_8572() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_9177() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %908 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %900 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %901 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %902 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %903 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %904 = %900.0;
    %905 = %901.2;
    %906 = %902.0;
    %907 = %903.0;
    (%904, %905, %906, %907)
  };
  %908() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_18024() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %917 = fn () -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
    %909 = @func_16490() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %910 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %911 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %912 = @func_7338() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %913 = %909.0;
    %914 = %910.1;
    %915 = %911.0;
    %916 = %912.0;
    (%913, %914, %915, %916)
  };
  %917() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_4744(%var_4743: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %929 = fn (%var_4694: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %918 = cast(%var_4694, dtype="uint16") /* ty=Tensor[(32), uint16] */;
    %919 = reshape(%918, newshape=[32]) /* ty=Tensor[(32), uint16] */;
    %920 = @func_4503(%919) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %921 = %920.4;
    %922 = cast(%921, dtype="uint16") /* ty=Tensor[(32), uint16] */;
    %923 = reshape(%922, newshape=[32]) /* ty=Tensor[(32), uint16] */;
    %924 = @func_4503(%923) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %925 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %926 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
    %927 = %924.5;
    %928 = %925.1;
    (%926, %921, %var_4694, %927, %928)
  };
  %929(%var_4743) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_11197() -> Tensor[(16, 13, 9), float32] {
  @func_11195() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_27436() -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  @func_27434() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */
}

def @func_25925(%var_25923: Tensor[(14, 2, 2), float32], %var_25924: Tensor[(6, 44), float32]) -> (Tensor[(14, 2, 2), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %951 = fn (%var_25790: Tensor[(14, 2, 2), float32], %var_25836: Tensor[(6, 44), float32]) -> (Tensor[(14, 2, 2), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %930 = cast(%var_25790, dtype="float32") /* ty=Tensor[(14, 2, 2), float32] */;
    %931 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %932 = @func_12544() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32]) */;
    %933 = @func_15971() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %934 = cast(meta[relay.Constant][30] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %935 = cast(%var_25836, dtype="float32") /* ty=Tensor[(6, 44), float32] */;
    %936 = reshape(%934, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %937 = reshape(%935, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
    %938 = @func_2469(%936, %937) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
    %939 = @func_25000() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %940 = @func_18023() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %941 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %942 = log2(%930) /* ty=Tensor[(14, 2, 2), float32] */;
    %943 = %931.0;
    %944 = %932.0;
    %945 = %933.0;
    %946 = %938.1;
    %947 = %939.0;
    %948 = %940.0;
    %949 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
    %950 = %941.1;
    (%942, %943, %944, %945, %946, meta[relay.Constant][30] /* ty=Tensor[(3136), float32] */, %var_25836, %947, %948, %949, %950)
  };
  %951(%var_25923, %var_25924) /* ty=(Tensor[(14, 2, 2), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_26679() -> (Tensor[(16, 13, 9), float64],) {
  %954 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %952 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
    %953 = %952.1;
    (%953,)
  };
  %954() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_27134() -> Tensor[(16, 13, 9), float32] {
  %956 = fn () -> Tensor[(16, 13, 9), float32] {
    %955 = @func_13212() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %955.0
  };
  %956() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_25000() -> (Tensor[(16, 13, 9), float32],) {
  %957 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %958 = %957.0;
  (%958,)
}

def @func_16317() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %961 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %959 = @func_14963() /* ty=Tensor[(16, 13, 9), float32] */;
    %960 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
    (%959, %960)
  };
  %961() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_27004() -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32]) {
  @func_27002() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32]) */
}

def @func_5896(%var_5895: Tensor[(264), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) {
  %975 = fn (%var_5881: Tensor[(264), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) {
    %962 = @func_4628() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %963 = cast(meta[relay.Constant][31] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %964 = cast(%var_5881, dtype="float32") /* ty=Tensor[(264), float32] */;
    %965 = reshape(%963, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %966 = reshape(%964, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
    %967 = @func_2469(%965, %966) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
    %968 = %967.2;
    %969 = cast(%968, dtype="bool") /* ty=Tensor[(3136), bool] */;
    %970 = shape_of(meta[relay.Constant][31] /* ty=Tensor[(3136), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %971 = cast(meta[relay.Constant][31] /* ty=Tensor[(3136), float32] */, dtype="bool") /* ty=Tensor[(3136), bool] */;
    %972 = dyn.reshape(%969, %970, newshape=[]) /* ty=Tensor[(?), bool] */;
    %973 = %962.0;
    %974 = less(%971, %972) /* ty=Tensor[(3136), bool] */;
    (%973, %var_5881, %974)
  };
  %975(%var_5895) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(3136), bool]) */
}

def @func_22191() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %976 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %977 = @func_20960() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %978 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %979 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  %980 = @func_19948() /* ty=Tensor[(16, 13, 9), float32] */;
  %981 = %976.0;
  %982 = %977.0;
  %983 = %978.0;
  (%979, %980, %981, %982, %983)
}

def @func_10928() -> (Tensor[(16, 13, 9), float32],) {
  %985 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %984 = @func_10788() /* ty=Tensor[(16, 13, 9), float32] */;
    (%984,)
  };
  %985() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_10788() -> Tensor[(16, 13, 9), float32] {
  %986 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %986.0
}

def @func_17363() -> (Tensor[(16, 13, 9), float32],) {
  %987 = @func_9266() /* ty=Tensor[(16, 13, 9), float32] */;
  (%987,)
}

def @func_12049() -> (Tensor[(14, 4, 8), uint16],) {
  @func_12047() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_17874(%var_17873: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %997 = fn (%var_17843: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %988 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %989 = cast(%var_17843, dtype="float32") /* ty=Tensor[(42), float32] */;
    %990 = reshape(%989, newshape=[42]) /* ty=Tensor[(42), float32] */;
    %991 = @func_14534(%990) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(6, 1, 7), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32]) */;
    %992 = @func_14182() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %993 = %988.0;
    %994 = %991.1;
    %995 = %992.0;
    %996 = @func_17020() /* ty=Tensor[(16, 13, 9), float32] */;
    (%993, %994, %var_17843, %995, %996)
  };
  %997(%var_17873) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(42), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_5173() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_5171() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_25676() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %998 = @func_25190() /* ty=Tensor[(16, 13, 9), float64] */;
  %999 = @func_19053() /* ty=Tensor[(16, 13, 9), float32] */;
  (%998, %999)
}

def @func_15688() -> (Tensor[(16, 13, 9), float32],) {
  %1000 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1001 = %1000.1;
  (%1001,)
}

def @func_11869() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1005 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1002 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1003 = %1002.0;
    %1004 = @func_9266() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1003, %1004)
  };
  %1005() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_11689() -> Tensor[(14, 4, 8), uint16] {
  %1007 = fn () -> Tensor[(14, 4, 8), uint16] {
    %1006 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1006.0
  };
  %1007() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_15011() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1008 = @func_9394() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1009 = @func_6541() /* ty=Tensor[(14, 4, 8), uint16] */;
  %1010 = %1008.1;
  (%1009, %1010)
}

def @func_4377(%var_4371: Tensor[(6, 5, 3), uint64]) -> Tensor[(6, 5, 3), uint64] {
  %1011 = cast(meta[relay.Constant][32] /* ty=Tensor[(6, 5, 1), uint64] */, dtype="uint64") /* ty=Tensor[(6, 5, 1), uint64] */;
  %1012 = cast(%var_4371, dtype="uint64") /* ty=Tensor[(6, 5, 3), uint64] */;
  multiply(%1011, %1012) /* ty=Tensor[(6, 5, 3), uint64] */
}

def @func_14884() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_14882() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_18857() -> (Tensor[(16, 13, 9), float32],) {
  %1015 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1013 = @func_14301() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1014 = %1013.1;
    (%1014,)
  };
  %1015() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_20720(%var_20697: Tensor[(16, 12, 6), float32]) -> (Tensor[(16, 12, 6), int8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1016 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
  %1017 = %1016.0;
  %1018 = cast(%var_20697, dtype="int8") /* ty=Tensor[(16, 12, 6), int8] */;
  %1019 = shape_of(%1017, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(%1017, dtype="int8") /* ty=Tensor[(16, 12, 6), int8] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1022 = multiply(%1020, %1021) /* ty=Tensor[(16, 12, 6), int8] */;
  %1023 = @func_19948() /* ty=Tensor[(16, 13, 9), float32] */;
  %1024 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1022, %1023, %1024)
}

def @func_21692(%var_21691: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  %1032 = fn (%var_21644: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
    %1025 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1026 = cast(%var_21644, dtype="uint16") /* ty=Tensor[(32), uint16] */;
    %1027 = reshape(%1026, newshape=[32]) /* ty=Tensor[(32), uint16] */;
    %1028 = @func_11811(%1027) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %1029 = %1025.2;
    %1030 = %1028.1;
    %1031 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1029, %1030, %var_21644, %1031)
  };
  %1032(%var_21691) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_15024(%var_15023: float32) -> (Tensor[(1, 7, 14), float32],) {
  %1036 = fn (%var_15016: float32) -> (Tensor[(1, 7, 14), float32],) {
    %1033 = cast(%var_15016, dtype="float32") /* ty=float32 */;
    %1034 = cast(meta[relay.Constant][33] /* ty=Tensor[(1, 7, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 7, 14), float32] */;
    %1035 = divide(%1033, %1034) /* ty=Tensor[(1, 7, 14), float32] */;
    (%1035,)
  };
  %1036(%var_15023) /* ty=(Tensor[(1, 7, 14), float32],) */
}

def @func_13830(%var_13806: Tensor[(13, 6, 14), float64]) -> (Tensor[(13, 6, 14), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32]) {
  %1037 = cast(%var_13806, dtype="float64") /* ty=Tensor[(13, 6, 14), float64] */;
  %1038 = acosh(%1037) /* ty=Tensor[(13, 6, 14), float64] */;
  %1039 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
  %1040 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  (%1038, %1039, %1040)
}

def @func_18933() -> Tensor[(16, 13, 9), float32] {
  %1042 = fn () -> Tensor[(16, 13, 9), float32] {
    %1041 = @func_18629() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1041.0
  };
  %1042() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_12110(%var_12099: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(3136), int16]) {
  %1043 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1044 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1045 = cast(meta[relay.Constant][34] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1046 = reshape(%1045, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1047 = @func_6290(%1046) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */;
  %1048 = %1047.1;
  %1049 = cast(%var_12099, dtype="int16") /* ty=Tensor[(3136), int16] */;
  %1050 = shape_of(%1048, dtype="int32") /* ty=Tensor[(1), int32] */;
  %1051 = cast(%1048, dtype="int16") /* ty=Tensor[(3136), int16] */;
  %1052 = dyn.reshape(%1049, %1050, newshape=[]) /* ty=Tensor[(?), int16] */;
  %1053 = %1043.1;
  %1054 = %1044.0;
  %1055 = bitwise_and(%1051, %1052) /* ty=Tensor[(3136), int16] */;
  (%1053, %1054, meta[relay.Constant][34] /* ty=Tensor[(3136), float32] */, %1055)
}

def @func_6119() -> Tensor[(16, 13, 9), float32] {
  %1056 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1056.1
}

def @func_17066() -> (Tensor[(16, 13, 9), float32],) {
  %1059 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1057 = @func_11431() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1058 = %1057.0;
    (%1058,)
  };
  %1059() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_8335() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1068 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1060 = @func_7557() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %1061 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1062 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1063 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1064 = %1060.0;
    %1065 = %1061.0;
    %1066 = %1062.0;
    %1067 = %1063.0;
    (%1064, %1065, %1066, %1067)
  };
  %1068() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_19988() -> Tensor[(16, 13, 9), float32] {
  %1069 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %1069() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_15826() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1070 = @func_8244() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1071 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1072 = @func_14182() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1073 = @func_13212() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1074 = %1070.0;
  %1075 = %1071.0;
  %1076 = %1072.0;
  %1077 = %1073.0;
  (%1074, %1075, %1076, %1077)
}

def @func_25397() -> (Tensor[(16, 13, 9), float64],) {
  @func_25395() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_4415(%var_4414: Tensor[(9, 6, 10), uint8]) -> (Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) {
  %1087 = fn (%var_4402: Tensor[(9, 6, 10), uint8]) -> (Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) {
    %1078 = cast(%var_4402, dtype="float64") /* ty=Tensor[(9, 6, 10), float64] */;
    %1079 = cast(%var_4402, dtype="uint8") /* ty=Tensor[(9, 6, 10), uint8] */;
    %1080 = shape_of(meta[relay.Constant][35] /* ty=Tensor[(9, 6, 10), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1081 = cast(meta[relay.Constant][35] /* ty=Tensor[(9, 6, 10), uint8] */, dtype="uint8") /* ty=Tensor[(9, 6, 10), uint8] */;
    %1082 = dyn.reshape(%1079, %1080, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1083 = bitwise_or(%1081, %1082) /* ty=Tensor[(9, 6, 10), uint8] */;
    %1084 = cast(%1083, dtype="float64") /* ty=Tensor[(9, 6, 10), float64] */;
    %1085 = log(%1078) /* ty=Tensor[(9, 6, 10), float64] */;
    %1086 = rsqrt(%1084) /* ty=Tensor[(9, 6, 10), float64] */;
    (%1085, %1086)
  };
  %1087(%var_4414) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */
}

def @func_5271() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1088 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1089 = %1088.0;
  %1090 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
  (%1089, %1090)
}

def @func_13519() -> (Tensor[(15, 15, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(15, 15, 16), float64]) {
  %1101 = fn () -> (Tensor[(15, 15, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(15, 15, 16), float64]) {
    %1091 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 16), float64] */;
    %1092 = cast(meta[relay.Constant][37] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1093 = reshape(%1092, newshape=[16, 14, 14]) /* ty=Tensor[(16, 14, 14), float32] */;
    %1094 = cast(meta[relay.Constant][36] /* ty=Tensor[(15, 15, 16), float64] */, dtype="float64") /* ty=Tensor[(15, 15, 16), float64] */;
    %1095 = asin(%1094) /* ty=Tensor[(15, 15, 16), float64] */;
    %1096 = cast(%1095, dtype="float64") /* ty=Tensor[(15, 15, 16), float64] */;
    %1097 = erf(%1091) /* ty=Tensor[(15, 15, 16), float64] */;
    %1098 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
    %1099 = @func_1265(%1093) /* ty=Tensor[(16, 14, 14), float32] */;
    %1100 = rsqrt(%1096) /* ty=Tensor[(15, 15, 16), float64] */;
    (%1097, %1098, %1099, meta[relay.Constant][37] /* ty=Tensor[(3136), float32] */, %1100)
  };
  %1101() /* ty=(Tensor[(15, 15, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(15, 15, 16), float64]) */
}

def @func_24047() -> (Tensor[(16, 13, 9), float64],) {
  %1102 = @func_23737() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) */;
  %1103 = %1102.0;
  (%1103,)
}

def @func_25042() -> (Tensor[(16, 13, 9), float32],) {
  %1106 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1104 = @func_8244() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1105 = %1104.0;
    (%1105,)
  };
  %1106() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_16513() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1107 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1108 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  %1109 = %1107.1;
  (%1108, %1109)
}

def @func_20961() -> (Tensor[(16, 13, 9), float64],) {
  %1112 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %1110 = @func_13259() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %1111 = %1110.1;
    (%1111,)
  };
  %1112() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_24458() -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  @func_24456() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_21597() -> (Tensor[(16, 13, 9), float32],) {
  @func_21595() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_6625() -> Tensor[(16, 13, 9), uint32] {
  @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */
}

def @func_19867() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1113 = @func_9394() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1114 = @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1115 = @func_12292() /* ty=Tensor[(16, 13, 9), float32] */;
  %1116 = %1113.1;
  %1117 = %1114.0;
  (%1115, %1116, %1117)
}

def @func_20942() -> (Tensor[(14, 4, 8), uint16],) {
  %1120 = fn () -> (Tensor[(14, 4, 8), uint16],) {
    %1118 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1119 = %1118.0;
    (%1119,)
  };
  %1120() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_25612() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1121 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1122 = %1121.0;
  %1123 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1122, %1123)
}

def @func_26515() -> (Tensor[(16, 13, 9), float32],) {
  %1124 = @func_8876() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1124,)
}

def @func_15939() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  @func_15937() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_16910() -> (Tensor[(16, 13, 9), float32],) {
  %1125 = @func_15937() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1126 = %1125.0;
  (%1126,)
}

def @func_14365() -> Tensor[(16, 13, 9), float32] {
  %1127 = @func_9176() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1127.3
}

def @func_9396() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_9394() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_13933() -> Tensor[(14, 4, 8), uint16] {
  %1129 = fn () -> Tensor[(14, 4, 8), uint16] {
    %1128 = @func_12047() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1128.0
  };
  %1129() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_11431() -> (Tensor[(16, 13, 9), float32],) {
  %1130 = @func_8185() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1130,)
}

def @func_18409() -> Tensor[(16, 13, 9), float64] {
  %1132 = fn () -> Tensor[(16, 13, 9), float64] {
    %1131 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1131.0
  };
  %1132() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_26749() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  @func_26747() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_23739() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) {
  @func_23737() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) */
}

def @func_18733() -> Tensor[(16, 13, 9), float32] {
  @func_18731() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5985(%var_5983: Tensor[(3136), float32], %var_5984: Tensor[(264), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(4, 6, 11), bool], Tensor[(3136), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32]) {
  @func_5981(%var_5983, %var_5984) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(4, 6, 11), bool], Tensor[(3136), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_9214() -> (Tensor[(16, 13, 9), float32],) {
  %1135 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1133 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1134 = %1133.3;
    (%1134,)
  };
  %1135() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_9637() -> (Tensor[(16, 13, 9), float32],) {
  %1136 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1136,)
}

def @func_16515() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_16513() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_23288() -> (Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32], Tensor[(220), float64]) {
  %1143 = fn () -> (Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32], Tensor[(220), float64]) {
    %1137 = @func_21340() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1138 = cast(meta[relay.Constant][38] /* ty=Tensor[(220), float64] */, dtype="float64") /* ty=Tensor[(220), float64] */;
    %1139 = reshape(%1138, newshape=[4, 5, 11]) /* ty=Tensor[(4, 5, 11), float64] */;
    %1140 = @func_11907(%1139) /* ty=(Tensor[(4, 5, 11), float64], Tensor[(9, 7, 2), float32]) */;
    %1141 = %1137.0;
    %1142 = %1140.1;
    (%1141, %1142, meta[relay.Constant][38] /* ty=Tensor[(220), float64] */)
  };
  %1143() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(9, 7, 2), float32], Tensor[(220), float64]) */
}

def @func_6542() -> Tensor[(14, 4, 8), uint16] {
  %1145 = fn () -> Tensor[(14, 4, 8), uint16] {
    %1144 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %1144.2
  };
  %1145() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_12941() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1150 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
    %1146 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %1147 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1148 = %1146.0;
    %1149 = %1147.0;
    (%1148, %1149)
  };
  %1150() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_8161() -> Tensor[(16, 13, 9), float32] {
  %1151 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_6119() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %1151() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17835(%var_17833: Tensor[(264), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(264), float32]) {
  @func_17832(%var_17833) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(264), float32]) */
}

def @func_6121() -> Tensor[(16, 13, 9), float32] {
  @func_6119() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_18145() -> Tensor[(16, 13, 9), uint8] {
  @func_18143() /* ty=Tensor[(16, 13, 9), uint8] */
}

def @func_15013() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  @func_15011() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_8185() -> Tensor[(16, 13, 9), float32] {
  %1152 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1152.1
}

def @func_19401() -> (Tensor[(32), uint16],) {
  @func_19399() /* ty=(Tensor[(32), uint16],) */
}

def @func_10039() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_10037() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_25002() -> (Tensor[(16, 13, 9), float32],) {
  @func_25000() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_10093() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1153 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1154 = %1153.0;
  %1155 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1154, %1155)
}

def @func_11217() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1159 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
    %1156 = @func_9176() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1157 = %1156.0;
    %1158 = @func_6935() /* ty=Tensor[(16, 13, 9), float64] */;
    (%1157, %1158)
  };
  %1159() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_6954() -> Tensor[(16, 13, 9), float32] {
  %1160 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_5305() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %1160() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17260(%var_17236: Tensor[(14, 4, 8), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int64], Tensor[(16, 13, 9), float32]) {
  %1161 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %1162 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1163 = %1162.0;
  %1164 = cast(%var_17236, dtype="int64") /* ty=Tensor[(14, 4, 8), int64] */;
  %1165 = shape_of(%1163, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1166 = cast(%1163, dtype="int64") /* ty=Tensor[(14, 4, 8), int64] */;
  %1167 = dyn.reshape(%1164, %1165, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1168 = @func_9394() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1169 = %1161.0;
  %1170 = right_shift(%1166, %1167) /* ty=Tensor[(14, 4, 8), int64] */;
  %1171 = %1168.0;
  (%1169, %1170, %1171)
}

def @func_4422() -> Tensor[(16, 13, 9), float32] {
  @func_4420() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_12292() -> Tensor[(16, 13, 9), float32] {
  @func_8572() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_22595() -> (Tensor[(16, 13, 9), uint32], Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64]) {
  @func_22593() /* ty=(Tensor[(16, 13, 9), uint32], Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64]) */
}

def @func_5394() -> (Tensor[(16, 13, 9), float32],) {
  %1174 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1172 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1173 = %1172.0;
    (%1173,)
  };
  %1174() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_21781() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %1179 = fn () -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
    %1175 = @func_14129() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(14, 4, 8), uint16]) */;
    %1176 = %1175.1;
    %1177 = @func_19170() /* ty=Tensor[(16, 13, 9), float32] */;
    %1178 = @func_13932() /* ty=Tensor[(14, 4, 8), uint16] */;
    (%1176, %1177, %1178)
  };
  %1179() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_13996() -> Tensor[(16, 13, 9), float32] {
  %1180 = @func_13563() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1180.0
}

def @func_10549() -> (Tensor[(16, 13, 9), float32],) {
  @func_10547() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_11947() -> (Tensor[(16, 13, 9), float32],) {
  %1183 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1181 = @func_10037() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %1182 = %1181.1;
    (%1182,)
  };
  %1183() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_22593() -> (Tensor[(16, 13, 9), uint32], Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64]) {
  %1184 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %1185 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1186 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %1187 = %1184.0;
  %1188 = %1185.0;
  (%1186, %1187, %1188)
}

def @func_23003() -> Tensor[(14, 4, 8), uint16] {
  @func_23001() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_27246() -> (Tensor[(14, 4, 8), uint16],) {
  %1190 = fn () -> (Tensor[(14, 4, 8), uint16],) {
    %1189 = @func_9442() /* ty=Tensor[(14, 4, 8), uint16] */;
    (%1189,)
  };
  %1190() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_7984() -> (Tensor[(16, 13, 9), uint32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) {
  %1191 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1192 = cast(meta[relay.Constant][39] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %1193 = reshape(%1192, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %1194 = @func_4742(%1193) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1195 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %1196 = %1191.0;
  %1197 = %1194.0;
  (%1195, %1196, %1197, meta[relay.Constant][39] /* ty=Tensor[(32), uint16] */)
}

def @func_5869() -> Tensor[(16, 13, 9), float32] {
  %1198 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  %1199 = cast(%1198, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
  atanh(%1199) /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_13899() -> Tensor[(16, 13, 9), float32] {
  @func_11398() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_7559() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  @func_7557() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_5512() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1203 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1200 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1201 = %1200.0;
    %1202 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1201, %1202)
  };
  %1203() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_11845() -> (Tensor[(14, 4, 8), uint16],) {
  %1205 = fn () -> (Tensor[(14, 4, 8), uint16],) {
    %1204 = @func_9010() /* ty=Tensor[(14, 4, 8), uint16] */;
    (%1204,)
  };
  %1205() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_22244() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1211 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1206 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1207 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %1208 = %1206.1;
    %1209 = %1207.1;
    %1210 = @func_12292() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1208, %1209, %1210)
  };
  %1211() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_25152() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_25150() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_14882() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1212 = @func_13736() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1213 = @func_8905() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1214 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1215 = @func_13976() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1216 = @func_11195() /* ty=Tensor[(16, 13, 9), float32] */;
  %1217 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  %1218 = %1212.0;
  %1219 = %1213.0;
  %1220 = %1214.0;
  %1221 = %1215.0;
  (%1216, %1217, %1218, %1219, %1220, %1221)
}

def @func_27470() -> (Tensor[(16, 13, 9), float32],) {
  %1222 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1223 = %1222.0;
  (%1223,)
}

def @func_13397() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  @func_13395() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */
}

def @func_18113() -> (Tensor[(16, 13, 9), float32],) {
  %1224 = @func_8334() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1225 = %1224.1;
  (%1225,)
}

def @func_5981(%var_5961: Tensor[(3136), float32], %var_5962: Tensor[(264), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(4, 6, 11), bool], Tensor[(3136), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32]) {
  %1226 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1227 = cast(%var_5961, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1228 = cast(%var_5962, dtype="float32") /* ty=Tensor[(264), float32] */;
  %1229 = reshape(%1227, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1230 = reshape(%1228, newshape=[4, 6, 11]) /* ty=Tensor[(4, 6, 11), float32] */;
  %1231 = @func_2469(%1229, %1230) /* ty=(Tensor[(4, 6, 11), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(4, 6, 11), bool], Tensor[(4, 6, 11), float64]) */;
  %1232 = %1226.0;
  %1233 = %1231.3;
  %1234 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1232, %1233, %var_5961, %var_5962, %1234)
}

def @func_15973() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_15971() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_21575() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1241 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1235 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1236 = @func_17116() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1237 = @func_20124() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1238 = %1235.1;
    %1239 = %1236.0;
    %1240 = %1237.0;
    (%1238, %1239, %1240)
  };
  %1241() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_11653() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1247 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
    %1242 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
    %1243 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1244 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
    %1245 = %1242.0;
    %1246 = %1243.0;
    (%1244, %1245, %1246)
  };
  %1247() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_4909() -> Tensor[(14, 4, 8), uint16] {
  %1248 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %1248.2
}

def @func_23373() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_23371() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_26779() -> Tensor[(16, 13, 9), float32] {
  %1249 = @func_15151() /* ty=(Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1249.2
}

def @func_4875() -> (Tensor[(16, 13, 9), float64],) {
  @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_18920(%var_18918: int8) -> Tensor[(1, 14, 4), int8] {
  @func_18917(%var_18918) /* ty=Tensor[(1, 14, 4), int8] */
}

def @func_10790() -> Tensor[(16, 13, 9), float32] {
  @func_10788() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_15152() -> (Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1256 = fn () -> (Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1250 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %1251 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1252 = %1250.3;
    %1253 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
    %1254 = %1251.1;
    %1255 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1252, %1253, %1254, %1255)
  };
  %1256() /* ty=(Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_26203() -> Tensor[(16, 13, 9), float32] {
  %1258 = fn () -> Tensor[(16, 13, 9), float32] {
    %1257 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1257.0
  };
  %1258() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_7084() -> (Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) {
  @func_7082() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) */
}

def @func_12294() -> Tensor[(16, 13, 9), float32] {
  @func_12292() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_14455() -> (Tensor[(16, 13, 9), float32],) {
  %1259 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1260 = %1259.0;
  (%1260,)
}

def @func_9666(%var_9664: float64) -> (Tensor[(11, 10, 1), bool],) {
  @func_9663(%var_9664) /* ty=(Tensor[(11, 10, 1), bool],) */
}

def @func_4628() -> (Tensor[(16, 13, 9), float32],) {
  %1261 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1261,)
}

def @func_4789() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */
}

def @func_15971() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1262 = @func_13563() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1263 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  %1264 = %1262.0;
  (%1263, %1264)
}

def @func_9443() -> Tensor[(14, 4, 8), uint16] {
  %1266 = fn () -> Tensor[(14, 4, 8), uint16] {
    %1265 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %1265.1
  };
  %1266() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_5712() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1267 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  %1268 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1267, %1268)
}

def @func_20091() -> Tensor[(14, 4, 8), uint16] {
  @func_20089() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_24416() -> (Tensor[(16, 13, 9), float64],) {
  %1269 = @func_16234() /* ty=Tensor[(16, 13, 9), float64] */;
  (%1269,)
}

def @func_24872() -> (Tensor[(16, 13, 9), float64],) {
  %1272 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %1270 = @func_12797() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %1271 = %1270.1;
    (%1271,)
  };
  %1272() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_8596() -> (Tensor[(9, 6, 10), float64],) {
  %1275 = fn () -> (Tensor[(9, 6, 10), float64],) {
    %1273 = @func_7082() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) */;
    %1274 = %1273.1;
    (%1274,)
  };
  %1275() /* ty=(Tensor[(9, 6, 10), float64],) */
}

def @func_6512() -> Tensor[(16, 13, 9), float32] {
  @func_6510() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_27448() -> (Tensor[(16, 13, 9), float32],) {
  %1276 = @func_20342() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1276,)
}

def @func_20344() -> Tensor[(16, 13, 9), float32] {
  @func_20342() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19493(%var_19492: float64) -> (Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) {
  %1288 = fn (%var_19479: float64) -> (Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) {
    %1277 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1278 = cast(%var_19479, dtype="float64") /* ty=float64 */;
    %1279 = reshape(%1278, newshape=[]) /* ty=float64 */;
    %1280 = @func_9663(%1279) /* ty=(Tensor[(11, 10, 1), bool],) */;
    %1281 = cast(meta[relay.Constant][40] /* ty=Tensor[(3136), float32] */, dtype="float32") /* ty=Tensor[(3136), float32] */;
    %1282 = reshape(%1281, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %1283 = @func_6199(%1282) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
    %1284 = %1277.1;
    %1285 = %1280.0;
    %1286 = %1283.2;
    %1287 = @func_18807() /* ty=Tensor[(16, 13, 9), float64] */;
    (%1284, %1285, %var_19479, %1286, meta[relay.Constant][40] /* ty=Tensor[(3136), float32] */, %1287)
  };
  %1288(%var_19492) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_14275() -> (Tensor[(16, 13, 9), float32],) {
  %1290 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1289 = @func_9817() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1289,)
  };
  %1290() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_27366() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_27364() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_24324() -> Tensor[(16, 13, 9), float64] {
  @func_17457() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_8114() -> (Tensor[(16, 13, 9), float32],) {
  @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_27755() -> (Tensor[(9, 6, 10), float64],) {
  @func_27753() /* ty=(Tensor[(9, 6, 10), float64],) */
}

def @func_14302() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1295 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1291 = @func_11431() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1292 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1293 = %1291.0;
    %1294 = %1292.0;
    (%1293, %1294)
  };
  %1295() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_12431() -> (Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) {
  %1299 = fn () -> (Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) {
    %1296 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1297 = @func_8045() /* ty=Tensor[(16, 12, 6), float32] */;
    %1298 = %1296.0;
    (%1297, %1298)
  };
  %1299() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_13259() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1300 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1301 = @func_7373() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1302 = %1300.0;
  %1303 = %1301.0;
  (%1302, %1303)
}

def @func_10126() -> (Tensor[(16, 12, 6), float32],) {
  @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */
}

def @func_25224() -> (Tensor[(16, 13, 9), float32],) {
  %1304 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1305 = %1304.1;
  (%1305,)
}

def @func_8572() -> Tensor[(16, 13, 9), float32] {
  @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_6681(%var_6680: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %1312 = fn (%var_6676: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
    %1306 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1307 = cast(%var_6676, dtype="uint16") /* ty=Tensor[(32), uint16] */;
    %1308 = reshape(%1307, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
    %1309 = @func_3124(%1308) /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1310 = %1306.1;
    %1311 = %1309.0;
    (%1310, %1311, %var_6676)
  };
  %1312(%var_6680) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */
}

def @func_12047() -> (Tensor[(14, 4, 8), uint16],) {
  %1313 = @func_5488() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %1314 = %1313.12;
  (%1314,)
}

def @func_16635() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) {
  %1315 = @func_5488() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %1316 = cast(meta[relay.Constant][41] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
  %1317 = reshape(%1316, newshape=[32]) /* ty=Tensor[(32), uint16] */;
  %1318 = @func_4503(%1317) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1319 = @func_9307() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1320 = @func_9213() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1321 = %1315.11;
  %1322 = %1318.0;
  %1323 = %1319.0;
  %1324 = @func_6623() /* ty=Tensor[(16, 13, 9), uint32] */;
  %1325 = %1320.0;
  (%1321, %1322, meta[relay.Constant][41] /* ty=Tensor[(32), uint16] */, %1323, %1324, %1325)
}

def @func_11910(%var_11908: Tensor[(4, 5, 11), float64]) -> (Tensor[(4, 5, 11), float64], Tensor[(9, 7, 2), float32]) {
  @func_11907(%var_11908) /* ty=(Tensor[(4, 5, 11), float64], Tensor[(9, 7, 2), float32]) */
}

def @func_19254() -> (Tensor[(16, 13, 9), float32],) {
  %1328 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1326 = @func_15550() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1327 = %1326.1;
    (%1327,)
  };
  %1328() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_7082() -> (Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) {
  %1329 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1330 = cast(meta[relay.Constant][42] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
  %1331 = reshape(%1330, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
  %1332 = @func_4413(%1331) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
  %1333 = %1329.0;
  %1334 = %1332.1;
  (%1333, %1334, meta[relay.Constant][42] /* ty=Tensor[(540), uint8] */)
}

def @func_11195() -> Tensor[(16, 13, 9), float32] {
  @func_4420() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_18709() -> (Tensor[(16, 13, 9), float64],) {
  @func_18707() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_11303() -> (Tensor[(32), uint16],) {
  %1337 = fn () -> (Tensor[(32), uint16],) {
    %1335 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
    %1336 = %1335.3;
    (%1336,)
  };
  %1337() /* ty=(Tensor[(32), uint16],) */
}

def @func_20888() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  %1338 = @func_19541() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) */;
  %1339 = @func_14455() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1340 = @func_17089() /* ty=Tensor[(16, 13, 9), float64] */;
  %1341 = @func_8876() /* ty=Tensor[(16, 13, 9), float32] */;
  %1342 = %1338.1;
  %1343 = %1339.0;
  (%1340, %1341, %1342, %1343)
}

def @func_18097(%var_18096: Tensor[(5, 3, 1), float64]) -> (Tensor[(5, 3, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1351 = fn (%var_18051: Tensor[(5, 3, 1), float64]) -> (Tensor[(5, 3, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1344 = cast(%var_18051, dtype="float64") /* ty=Tensor[(5, 3, 1), float64] */;
    %1345 = @func_11195() /* ty=Tensor[(16, 13, 9), float32] */;
    %1346 = cast(%1345, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
    %1347 = reshape(%1346, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint32] */;
    %1348 = @func_9977(%1347) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) */;
    %1349 = asin(%1344) /* ty=Tensor[(5, 3, 1), float64] */;
    %1350 = %1348.1;
    (%1349, %1345, %1350)
  };
  %1351(%var_18096) /* ty=(Tensor[(5, 3, 1), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_24737() -> (Tensor[(16, 13, 9), float32],) {
  %1354 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1352 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1353 = %1352.0;
    (%1353,)
  };
  %1354() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_6897() -> Tensor[(9, 7, 2), float32] {
  %1355 = cast(meta[relay.Constant][43] /* ty=Tensor[(9, 7, 2), float32] */, dtype="float32") /* ty=Tensor[(9, 7, 2), float32] */;
  cos(%1355) /* ty=Tensor[(9, 7, 2), float32] */
}

def @func_6006() -> (Tensor[(16, 13, 9), float32],) {
  %1358 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1356 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1357 = %1356.0;
    (%1357,)
  };
  %1358() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_27083() -> (Tensor[(16, 13, 9), float32],) {
  %1359 = @func_24031() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1360 = %1359.2;
  (%1360,)
}

def @func_12228() -> (Tensor[(16, 13, 9), float32],) {
  %1361 = @func_7850() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1362 = %1361.0;
  (%1362,)
}

def @func_21125() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1363 = @func_11868() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1364 = @func_13395() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %1365 = @func_13212() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1366 = %1363.0;
  %1367 = %1364.1;
  %1368 = %1365.0;
  (%1366, %1367, %1368)
}

def @func_6510() -> Tensor[(16, 13, 9), float32] {
  @func_5305() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_22307() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1373 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %1369 = @func_7082() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(9, 6, 10), float64], Tensor[(540), uint8]) */;
    %1370 = @func_11506() /* ty=Tensor[(16, 13, 9), float32] */;
    %1371 = %1369.0;
    %1372 = @func_18731() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1370, %1371, %1372)
  };
  %1373() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_10619(%var_10612: Tensor[(14, 4, 8), uint16]) -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), int8]) {
  %1374 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1375 = @func_5488() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */;
  %1376 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1377 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1378 = %1377.0;
  %1379 = cast(%var_10612, dtype="int8") /* ty=Tensor[(14, 4, 8), int8] */;
  %1380 = shape_of(%1378, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1381 = cast(%1378, dtype="int8") /* ty=Tensor[(14, 4, 8), int8] */;
  %1382 = dyn.reshape(%1379, %1380, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1383 = %1374.0;
  %1384 = %1375.4;
  %1385 = %1376.0;
  %1386 = bitwise_and(%1381, %1382) /* ty=Tensor[(14, 4, 8), int8] */;
  (%1383, %1384, %1385, %1386)
}

def @func_17211() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) {
  %1387 = @func_13976() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1388 = %1387.0;
  %1389 = cast(%1388, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1390 = reshape(%1389, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint32] */;
  %1391 = @func_9977(%1390) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) */;
  %1392 = %1391.0;
  (%1388, %1392)
}

def @func_10124() -> (Tensor[(16, 12, 6), float32],) {
  %1393 = @func_8045() /* ty=Tensor[(16, 12, 6), float32] */;
  (%1393,)
}

def @func_11485() -> (Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) {
  @func_11483() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) */
}

def @func_3126(%var_3125: Tensor[(1, 4, 8), uint16]) -> (Tensor[(14, 4, 8), uint16],) {
  %1397 = fn (%var_3114: Tensor[(1, 4, 8), uint16]) -> (Tensor[(14, 4, 8), uint16],) {
    %1394 = cast(%var_3114, dtype="uint16") /* ty=Tensor[(1, 4, 8), uint16] */;
    %1395 = cast(meta[relay.Constant][44] /* ty=Tensor[(14, 4, 8), uint16] */, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
    %1396 = maximum(%1394, %1395) /* ty=Tensor[(14, 4, 8), uint16] */;
    (%1396,)
  };
  %1397(%var_3125) /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_18707() -> (Tensor[(16, 13, 9), float64],) {
  %1398 = @func_11483() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(1, 3136), float32]) */;
  %1399 = %1398.0;
  (%1399,)
}

def @func_10095() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_10093() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_6891() -> (Tensor[(16, 13, 9), float32],) {
  @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_8674() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %1404 = fn () -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
    %1400 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1401 = @func_7400() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1402 = %1400.0;
    %1403 = %1401.0;
    (%1402, %1403)
  };
  %1404() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */
}

def @func_4819(%var_4817: Tensor[(3, 7, 1), float32]) -> (Tensor[(3, 7, 1), float32], Tensor[(16, 13, 9), float32]) {
  @func_4816(%var_4817) /* ty=(Tensor[(3, 7, 1), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_13718() -> (Tensor[(16, 13, 9), float32],) {
  @func_13716() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_10061() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) {
  %1405 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
  %1406 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1407 = %1406.1;
  %1408 = cast(%1407, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1409 = reshape(%1408, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), uint32] */;
  %1410 = @func_9977(%1409) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32]) */;
  %1411 = %1405.0;
  %1412 = %1410.0;
  (%1411, %1407, %1412)
}

def @func_17621() -> Tensor[(16, 13, 9), float32] {
  @func_17619() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_18200() -> (Tensor[(16, 13, 9), float32],) {
  %1413 = @func_11968() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1413,)
}

def @func_10063() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) {
  @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */
}

def @func_18601() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1417 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1414 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1415 = @func_16939() /* ty=Tensor[(16, 13, 9), float32] */;
    %1416 = %1414.0;
    (%1415, %1416)
  };
  %1417() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_10817() -> Tensor[(16, 13, 9), float32] {
  @func_8063() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_9141() -> Tensor[(16, 13, 9), float32] {
  @func_8572() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_13261() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_13259() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_13998() -> Tensor[(16, 13, 9), float32] {
  @func_13996() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17020() -> Tensor[(16, 13, 9), float32] {
  %1418 = @func_5171() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1418.1
}

def @func_17091() -> Tensor[(16, 13, 9), float64] {
  @func_17089() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_18437() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1419 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1420 = @func_17065() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1421 = %1419.0;
  %1422 = %1420.0;
  (%1421, %1422)
}

def @func_24049() -> (Tensor[(16, 13, 9), float64],) {
  @func_24047() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_13861() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_13859() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_9663(%var_9654: float64) -> (Tensor[(11, 10, 1), bool],) {
  %1423 = cast(%var_9654, dtype="bool") /* ty=bool */;
  %1424 = cast(meta[relay.Constant][45] /* ty=Tensor[(11, 10, 1), float64] */, dtype="bool") /* ty=Tensor[(11, 10, 1), bool] */;
  %1425 = less(%1423, %1424) /* ty=Tensor[(11, 10, 1), bool] */;
  (%1425,)
}

def @func_23120() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  %1434 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
    %1426 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %1427 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1428 = @func_20888() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) */;
    %1429 = %1426.0;
    %1430 = @func_12253() /* ty=Tensor[(16, 13, 9), float32] */;
    %1431 = %1427.0;
    %1432 = %1428.0;
    %1433 = @func_15623() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1429, %1430, %1431, %1432, %1433)
  };
  %1434() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_14898() -> Tensor[(16, 13, 9), float32] {
  %1435 = @func_14882() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1435.5
}

def @func_21809() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_21807() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_21465() -> Tensor[(16, 13, 9), float32] {
  %1436 = @func_18856() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1436.0
}

def @func_10163() -> (Tensor[(16, 13, 9), float64],) {
  %1437 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1438 = %1437.0;
  (%1438,)
}

def @func_20065() -> Tensor[(14, 4, 8), uint16] {
  %1439 = @func_16490() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1439.0
}

def @func_11400() -> Tensor[(16, 13, 9), float32] {
  @func_11398() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17089() -> Tensor[(16, 13, 9), float64] {
  %1440 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1440.0
}

def @func_12143() -> (Tensor[(16, 13, 9), float32],) {
  %1442 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1441 = @func_8572() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1441,)
  };
  %1442() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_21496() -> (Tensor[(16, 13, 9), float64],) {
  %1443 = @func_19191() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1444 = %1443.0;
  (%1444,)
}

def @func_18143() -> Tensor[(16, 13, 9), uint8] {
  %1445 = @func_10061() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */;
  %1445.2
}

def @func_22429() -> (Tensor[(16, 13, 9), float32], Tensor[(3136), float32], float64, Tensor[(16, 13, 9), float32]) {
  %1446 = cast(-9.29207f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %1447 = reshape(%1446, newshape=[]) /* ty=float64 */;
  %1448 = @func_19491(%1447) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(11, 10, 1), bool], float64, Tensor[(3136), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float64]) */;
  %1449 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
  %1450 = %1448.3;
  %1451 = @func_17020() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1449, %1450, -9.29207f64 /* ty=float64 */, %1451)
}

def @func_22867() -> Tensor[(15, 14, 2), float32] {
  %1452 = cast(meta[relay.Constant][46] /* ty=Tensor[(15, 14, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  sigmoid(%1452) /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_4183() -> (Tensor[(16, 13, 9), float32],) {
  @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_23343() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_23341() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_12230() -> (Tensor[(16, 13, 9), float32],) {
  @func_12228() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_13976() -> (Tensor[(16, 13, 9), float32],) {
  %1453 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1454 = %1453.0;
  (%1454,)
}

def @func_20416(%var_20414: Tensor[(8, 5, 4), float64], %var_20415: Tensor[(8, 5, 4), float64]) -> (Tensor[(8, 5, 4), float64], Tensor[(16, 13, 9), float32]) {
  %1462 = fn (%var_20402: Tensor[(8, 5, 4), float64], %var_20403: Tensor[(8, 5, 4), float64]) -> (Tensor[(8, 5, 4), float64], Tensor[(16, 13, 9), float32]) {
    %1455 = cast(%var_20403, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
    %1456 = shape_of(%var_20402, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1457 = cast(%var_20402, dtype="float64") /* ty=Tensor[(8, 5, 4), float64] */;
    %1458 = dyn.reshape(%1455, %1456, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1459 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1460 = power(%1457, %1458) /* ty=Tensor[(8, 5, 4), float64] */;
    %1461 = %1459.0;
    (%1460, %1461)
  };
  %1462(%var_20414, %var_20415) /* ty=(Tensor[(8, 5, 4), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_14965() -> Tensor[(16, 13, 9), float32] {
  @func_14963() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_4506(%var_4504: Tensor[(32), uint16]) -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  @func_4503(%var_4504) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_20067() -> Tensor[(14, 4, 8), uint16] {
  @func_20065() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_17365() -> (Tensor[(16, 13, 9), float32],) {
  @func_17363() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_24032() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1468 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1463 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1464 = @func_11652() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %1465 = @func_13996() /* ty=Tensor[(16, 13, 9), float32] */;
    %1466 = %1463.1;
    %1467 = %1464.0;
    (%1465, %1466, %1467)
  };
  %1468() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_4420() -> Tensor[(16, 13, 9), float32] {
  @func_4166() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_4753() -> (Tensor[(16, 13, 9), float32],) {
  %1471 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1469 = @func_4628() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1470 = %1469.0;
    (%1470,)
  };
  %1471() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_26810() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1472 = @func_8905() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1473 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1474 = %1472.0;
  %1475 = @func_22890() /* ty=Tensor[(16, 13, 9), float32] */;
  %1476 = %1473.0;
  (%1474, %1475, %1476)
}

def @func_16234() -> Tensor[(16, 13, 9), float64] {
  %1477 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1477.0
}

def @func_20552() -> (Tensor[(16, 13, 9), float64],) {
  %1479 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %1478 = @func_14006() /* ty=Tensor[(16, 13, 9), float64] */;
    (%1478,)
  };
  %1479() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_14095() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
  %1486 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) {
    %1480 = cast(meta[relay.Constant][47] /* ty=Tensor[(32), uint16] */, dtype="uint16") /* ty=Tensor[(32), uint16] */;
    %1481 = reshape(%1480, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
    %1482 = @func_3124(%1481) /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1483 = @func_13996() /* ty=Tensor[(16, 13, 9), float32] */;
    %1484 = @func_11195() /* ty=Tensor[(16, 13, 9), float32] */;
    %1485 = %1482.0;
    (%1483, %1484, %1485, meta[relay.Constant][47] /* ty=Tensor[(32), uint16] */)
  };
  %1486() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */
}

def @func_23536() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1494 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
    %1487 = @func_13736() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1488 = @func_19541() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) */;
    %1489 = @func_13613() /* ty=Tensor[(16, 13, 9), float32] */;
    %1490 = %1487.0;
    %1491 = %1488.0;
    %1492 = @func_10009() /* ty=Tensor[(16, 13, 9), float32] */;
    %1493 = @func_16234() /* ty=Tensor[(16, 13, 9), float64] */;
    (%1489, %1490, %1491, %1492, %1493)
  };
  %1494() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_21807() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1495 = @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1496 = @func_8244() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1497 = @func_18910() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1498 = @func_8063() /* ty=Tensor[(16, 13, 9), float32] */;
  %1499 = %1495.0;
  %1500 = %1496.0;
  %1501 = %1497.0;
  (%1498, %1499, %1500, %1501)
}

def @func_13212() -> (Tensor[(16, 13, 9), float32],) {
  %1502 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
  %1503 = %1502.1;
  (%1503,)
}

def @func_18827() -> (Tensor[(16, 13, 9), float32],) {
  %1506 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1504 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1505 = %1504.0;
    (%1505,)
  };
  %1506() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_21467() -> Tensor[(16, 13, 9), float32] {
  @func_21465() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_6623() -> Tensor[(16, 13, 9), uint32] {
  %1507 = @func_4351() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1508 = %1507.0;
  %1509 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1510 = %1509.0;
  %1511 = cast(%1510, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1512 = shape_of(%1508, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1513 = cast(%1508, dtype="uint32") /* ty=Tensor[(16, 13, 9), uint32] */;
  %1514 = dyn.reshape(%1511, %1512, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  bitwise_or(%1513, %1514) /* ty=Tensor[(16, 13, 9), uint32] */
}

def @func_6819() -> (Tensor[(14, 4, 8), uint16],) {
  %1515 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
  (%1515,)
}

def @func_9818() -> Tensor[(16, 13, 9), float32] {
  %1516 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_9141() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %1516() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_13563() -> (Tensor[(16, 13, 9), float32],) {
  %1517 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1518 = %1517.1;
  (%1518,)
}

def @func_6293(%var_6291: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) {
  @func_6290(%var_6291) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) */
}

def @func_8876() -> Tensor[(16, 13, 9), float32] {
  %1519 = @func_8395() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1519.0
}

def @func_14053() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(14, 4, 8), uint16]) {
  %1525 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(14, 4, 8), uint16]) {
    %1520 = @func_8112() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1521 = @func_13518() /* ty=(Tensor[(15, 15, 16), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32], Tensor[(15, 15, 16), float64]) */;
    %1522 = %1520.0;
    %1523 = %1521.2;
    %1524 = @func_9442() /* ty=Tensor[(14, 4, 8), uint16] */;
    (%1522, %1523, %1524)
  };
  %1525() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_8187() -> Tensor[(16, 13, 9), float32] {
  @func_8185() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17336() -> (Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1531 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1526 = @func_9647() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(264), float32]) */;
    %1527 = @func_15623() /* ty=Tensor[(16, 13, 9), float32] */;
    %1528 = %1526.2;
    %1529 = @func_11398() /* ty=Tensor[(16, 13, 9), float32] */;
    %1530 = @func_15623() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1527, %1528, %1529, %1530)
  };
  %1531() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(264), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_12113(%var_12111: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(3136), int16]) {
  @func_12110(%var_12111) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(3136), float32], Tensor[(3136), int16]) */
}

def @func_17524(%var_17512: Tensor[(3, 7, 15), float64]) -> (Tensor[(3, 7, 15), float64], Tensor[(16, 13, 9), float32]) {
  %1532 = cast(%var_17512, dtype="float64") /* ty=Tensor[(3, 7, 15), float64] */;
  %1533 = acos(%1532) /* ty=Tensor[(3, 7, 15), float64] */;
  %1534 = @func_11398() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1533, %1534)
}

def @func_24152() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1535 = @func_10927() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1536 = @func_21807() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1537 = %1535.0;
  %1538 = %1536.2;
  (%1537, %1538)
}

def @func_18529(%var_18527: Tensor[(14, 4, 8), uint16]) -> (Tensor[(14, 4, 8), bool], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_18526(%var_18527) /* ty=(Tensor[(14, 4, 8), bool], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_21436() -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %1542 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
    %1539 = @func_16490() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1540 = @func_18998() /* ty=Tensor[(16, 13, 9), float32] */;
    %1541 = %1539.0;
    (%1540, %1541)
  };
  %1542() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */
}

def @func_24122() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1546 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1543 = @func_21125() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %1544 = %1543.0;
    %1545 = @func_21056() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1544, %1545)
  };
  %1546() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_25657(%var_25656: Tensor[(7, 16, 14), int64]) -> (Tensor[(7, 16, 14), int64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1553 = fn (%var_25628: Tensor[(7, 16, 14), int64]) -> (Tensor[(7, 16, 14), int64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
    %1547 = cast(meta[relay.Constant][48] /* ty=Tensor[(7, 1, 14), int64] */, dtype="int64") /* ty=Tensor[(7, 1, 14), int64] */;
    %1548 = cast(%var_25628, dtype="int64") /* ty=Tensor[(7, 16, 14), int64] */;
    %1549 = @func_24000() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float64], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16]) */;
    %1550 = bitwise_or(%1547, %1548) /* ty=Tensor[(7, 16, 14), int64] */;
    %1551 = %1549.1;
    %1552 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
    (%1550, %1551, %1552)
  };
  %1553(%var_25656) /* ty=(Tensor[(7, 16, 14), int64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_10894(%var_10892: Tensor[(7, 8, 6), float32]) -> (Tensor[(7, 8, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_10891(%var_10892) /* ty=(Tensor[(7, 8, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_27716() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(15, 8, 10), bool], Tensor[(1200), uint8], Tensor[(16, 13, 9), float32]) {
  %1554 = @func_11216() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1555 = @func_26590() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1556 = @func_17065() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1557 = cast(meta[relay.Constant][49] /* ty=Tensor[(1200), uint8] */, dtype="uint8") /* ty=Tensor[(1200), uint8] */;
  %1558 = reshape(%1557, newshape=[15, 8, 10]) /* ty=Tensor[(15, 8, 10), uint8] */;
  %1559 = @func_23030(%1558) /* ty=(Tensor[(15, 8, 10), bool],) */;
  %1560 = @func_27599() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1561 = %1554.0;
  %1562 = %1555.0;
  %1563 = %1556.0;
  %1564 = %1559.0;
  %1565 = %1560.0;
  (%1561, %1562, %1563, %1564, meta[relay.Constant][49] /* ty=Tensor[(1200), uint8] */, %1565)
}

def @func_5489() -> (Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1595 = fn () -> (Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
    %1566 = cast(meta[relay.Constant][50] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %1567 = reshape(%1566, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
    %1568 = @func_4413(%1567) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
    %1569 = cast(meta[relay.Constant][51] /* ty=Tensor[(32, 1), uint16] */, dtype="uint16") /* ty=Tensor[(32, 1), uint16] */;
    %1570 = reshape(%1569, newshape=[4, 8]) /* ty=Tensor[(4, 8), uint16] */;
    %1571 = @func_5193(%1570) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(4, 8), uint16]) */;
    %1572 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
    %1573 = cast(%1572, dtype="float32") /* ty=Tensor[(16, 13, 9), float32] */;
    %1574 = @func_4873() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1575 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1576 = cast(meta[relay.Constant][51] /* ty=Tensor[(32, 1), uint16] */, dtype="uint16") /* ty=Tensor[(32, 1), uint16] */;
    %1577 = reshape(%1576, newshape=[32]) /* ty=Tensor[(32), uint16] */;
    %1578 = @func_4742(%1577) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1579 = cast(meta[relay.Constant][51] /* ty=Tensor[(32, 1), uint16] */, dtype="uint16") /* ty=Tensor[(32, 1), uint16] */;
    %1580 = reshape(%1579, newshape=[1, 4, 8]) /* ty=Tensor[(1, 4, 8), uint16] */;
    %1581 = @func_3124(%1580) /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1582 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1583 = %1568.0;
    %1584 = %1571.0;
    %1585 = exp(%1573) /* ty=Tensor[(16, 13, 9), float32] */;
    %1586 = %1574.0;
    %1587 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
    %1588 = @func_5060() /* ty=Tensor[(16, 13, 9), float64] */;
    %1589 = %1575.0;
    %1590 = @func_4836() /* ty=Tensor[(16, 13, 9), float32] */;
    %1591 = %1578.2;
    %1592 = @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */;
    %1593 = %1581.0;
    %1594 = %1582.0;
    (%1583, meta[relay.Constant][50] /* ty=Tensor[(540), uint8] */, %1584, meta[relay.Constant][51] /* ty=Tensor[(32, 1), uint16] */, %1585, %1586, %1587, %1588, %1589, %1590, %1591, %1592, %1593, %1594)
  };
  %1595() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float64], Tensor[(32, 1), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_10377() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1598 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1596 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
    %1597 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1596, %1597)
  };
  %1598() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_24154() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_24152() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_17117() -> (Tensor[(16, 13, 9), float32],) {
  %1601 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1599 = @func_6005() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1600 = %1599.0;
    (%1600,)
  };
  %1601() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_9394() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1602 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1603 = %1602.0;
  %1604 = @func_5305() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1603, %1604)
}

def @func_12491(%var_12489: Tensor[(8, 6, 14), uint64], %var_12490: Tensor[(4, 468), float32]) -> (Tensor[(8, 6, 14), bool], Tensor[(16, 13, 9), bool], Tensor[(4, 468), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  @func_12487(%var_12489, %var_12490) /* ty=(Tensor[(8, 6, 14), bool], Tensor[(16, 13, 9), bool], Tensor[(4, 468), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_22715() -> (Tensor[(16, 13, 9), float32],) {
  %1605 = @func_15826() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1606 = %1605.0;
  (%1606,)
}

def @func_19542() -> (Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) {
  %1611 = fn () -> (Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) {
    %1607 = @func_8595() /* ty=(Tensor[(9, 6, 10), float64],) */;
    %1608 = @func_11302() /* ty=(Tensor[(32), uint16],) */;
    %1609 = %1607.0;
    %1610 = %1608.0;
    (%1609, %1610)
  };
  %1611() /* ty=(Tensor[(9, 6, 10), float64], Tensor[(32), uint16]) */
}

def @func_21522() -> (Tensor[(16, 13, 9), float32],) {
  @func_21520() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_26590() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1612 = @func_14274() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1613 = @func_17116() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1614 = %1612.0;
  %1615 = %1613.0;
  (%1614, %1615)
}

def @func_17388() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_17386() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_15587() -> (Tensor[(16, 13, 9), float32],) {
  %1618 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1616 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1617 = %1616.1;
    (%1617,)
  };
  %1618() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_22555() -> Tensor[(32), uint16] {
  %1620 = fn () -> Tensor[(32), uint16] {
    %1619 = @func_16635() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) */;
    %1619.2
  };
  %1620() /* ty=Tensor[(32), uint16] */
}

def @func_6290(%var_6284: Tensor[(3136), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float32]) {
  %1621 = @func_5926() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1622 = cast(%var_6284, dtype="float32") /* ty=Tensor[(3136), float32] */;
  %1623 = reshape(%1622, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
  %1624 = @func_6199(%1623) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
  %1625 = %1621.0;
  %1626 = %1624.2;
  (%1625, %1626, %var_6284)
}

def @func_15551() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1630 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1627 = @func_12228() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1628 = @func_13613() /* ty=Tensor[(16, 13, 9), float32] */;
    %1629 = %1627.0;
    (%1628, %1629)
  };
  %1630() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_6935() -> Tensor[(16, 13, 9), float64] {
  %1631 = @func_6147() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1631.0
}

def @func_15275() -> (Tensor[(16, 13, 9), float32],) {
  %1634 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1632 = @func_6436() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %1633 = %1632.1;
    (%1633,)
  };
  %1634() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_24002() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float64], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16]) {
  @func_24000() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(3136), float32], Tensor[(3136), float64], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16]) */
}

def @func_26056() -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float32], Tensor[(6, 44), float32], Tensor[(448), uint16]) {
  %1646 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float32], Tensor[(6, 44), float32], Tensor[(448), uint16]) {
    %1635 = cast(meta[relay.Constant][52] /* ty=Tensor[(540), uint8] */, dtype="uint8") /* ty=Tensor[(540), uint8] */;
    %1636 = reshape(%1635, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
    %1637 = @func_4413(%1636) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
    %1638 = @func_18023() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */;
    %1639 = cast(meta[relay.Constant][53] /* ty=Tensor[(448), uint16] */, dtype="uint16") /* ty=Tensor[(448), uint16] */;
    %1640 = reshape(%1639, newshape=[14, 4, 8]) /* ty=Tensor[(14, 4, 8), uint16] */;
    %1641 = @func_15499(%1640) /* ty=(Tensor[(14, 4, 8), float32], Tensor[(264), float32], Tensor[(6, 44), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %1642 = @func_25780() /* ty=Tensor[(16, 13, 9), float32] */;
    %1643 = %1637.0;
    %1644 = %1638.1;
    %1645 = %1641.2;
    (%1642, %1643, meta[relay.Constant][52] /* ty=Tensor[(540), uint8] */, %1644, %1645, meta[relay.Constant][53] /* ty=Tensor[(448), uint16] */)
  };
  %1646() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(9, 6, 10), float64], Tensor[(540), uint8], Tensor[(16, 13, 9), float32], Tensor[(6, 44), float32], Tensor[(448), uint16]) */
}

def @func_26747() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) {
  %1647 = @func_26641() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1648 = @func_24031() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1649 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1650 = @func_16965() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1651 = %1647.0;
  %1652 = %1648.2;
  %1653 = %1649.0;
  %1654 = %1650.0;
  (%1651, %1652, %1653, %1654)
}

def @func_15625() -> Tensor[(16, 13, 9), float32] {
  @func_15623() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19191() -> (Tensor[(16, 13, 9), float64],) {
  %1655 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1656 = %1655.1;
  (%1656,)
}

def @func_20162(%var_20130: Tensor[(8, 4, 13), uint64], %var_20131: Tensor[(8, 4, 13), uint64], %var_20146: Tensor[(8, 4, 13), uint64]) -> (Tensor[(16, 13, 9), float32], Tensor[(8, 4, 13), float32], Tensor[(8, 4, 13), float32]) {
  %1657 = @func_12940() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1658 = cast(%var_20131, dtype="uint64") /* ty=Tensor[(8, 4, 13), uint64] */;
  %1659 = shape_of(%var_20130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1660 = cast(%var_20130, dtype="uint64") /* ty=Tensor[(8, 4, 13), uint64] */;
  %1661 = dyn.reshape(%1658, %1659, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1662 = maximum(%1660, %1661) /* ty=Tensor[(8, 4, 13), uint64] */;
  %1663 = cast(%1662, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %1664 = cast(%var_20146, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %1665 = shape_of(%var_20130, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1666 = cast(%var_20130, dtype="float32") /* ty=Tensor[(8, 4, 13), float32] */;
  %1667 = dyn.reshape(%1664, %1665, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1668 = %1657.0;
  %1669 = erf(%1663) /* ty=Tensor[(8, 4, 13), float32] */;
  %1670 = power(%1666, %1667) /* ty=Tensor[(8, 4, 13), float32] */;
  (%1668, %1669, %1670)
}

def @func_19399() -> (Tensor[(32), uint16],) {
  %1671 = @func_11043() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(32), uint16]) */;
  %1672 = %1671.2;
  (%1672,)
}

def @func_22891() -> Tensor[(16, 13, 9), float32] {
  %1673 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_4166() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %1673() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_12799() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_12797() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_16992() -> Tensor[(16, 13, 9), float32] {
  %1675 = fn () -> Tensor[(16, 13, 9), float32] {
    %1674 = @func_11946() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1674.0
  };
  %1675() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_11763(%var_11761: float64, %var_11762: Tensor[(7, 15, 7), float64]) -> (Tensor[(7, 15, 7), float64], Tensor[(16, 13, 9), float32]) {
  %1681 = fn (%var_11744: float64, %var_11745: Tensor[(7, 15, 7), float64]) -> (Tensor[(7, 15, 7), float64], Tensor[(16, 13, 9), float32]) {
    %1676 = cast(%var_11744, dtype="float64") /* ty=float64 */;
    %1677 = cast(%var_11745, dtype="float64") /* ty=Tensor[(7, 15, 7), float64] */;
    %1678 = @func_7790() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16]) */;
    %1679 = multiply(%1676, %1677) /* ty=Tensor[(7, 15, 7), float64] */;
    %1680 = %1678.0;
    (%1679, %1680)
  };
  %1681(%var_11761, %var_11762) /* ty=(Tensor[(7, 15, 7), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_10819() -> Tensor[(16, 13, 9), float32] {
  @func_10817() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_4911() -> Tensor[(14, 4, 8), uint16] {
  @func_4909() /* ty=Tensor[(14, 4, 8), uint16] */
}

def @func_6937() -> Tensor[(16, 13, 9), float64] {
  @func_6935() /* ty=Tensor[(16, 13, 9), float64] */
}

def @func_24641(%var_24639: Tensor[(1, 12, 2), uint8], %var_24640: Tensor[(1, 540), uint8]) -> (Tensor[(?, 12, 2), uint8], Tensor[(9, 6, 10), float64], Tensor[(1, 540), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
  %1704 = fn (%var_24554: Tensor[(1, 12, 2), uint8], %var_24564: Tensor[(1, 540), uint8]) -> (Tensor[(?, 12, 2), uint8], Tensor[(9, 6, 10), float64], Tensor[(1, 540), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) {
    %1682 = cast(%var_24554, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
    %1683 = shape_of(meta[relay.Constant][54] /* ty=Tensor[(1, 12, 2), uint8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1684 = cast(meta[relay.Constant][54] /* ty=Tensor[(1, 12, 2), uint8] */, dtype="uint8") /* ty=Tensor[(1, 12, 2), uint8] */;
    %1685 = dyn.reshape(%1682, %1683, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1686 = cast(%var_24564, dtype="uint8") /* ty=Tensor[(1, 540), uint8] */;
    %1687 = reshape(%1686, newshape=[9, 6, 10]) /* ty=Tensor[(9, 6, 10), uint8] */;
    %1688 = @func_4413(%1687) /* ty=(Tensor[(9, 6, 10), float64], Tensor[(9, 6, 10), float64]) */;
    %1689 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1690 = @func_5765() /* ty=(Tensor[(16, 13, 9), float64],) */;
    %1691 = @func_20089() /* ty=Tensor[(14, 4, 8), uint16] */;
    %1692 = cast(%1691, dtype="float32") /* ty=Tensor[(14, 4, 8), float32] */;
    %1693 = asinh(%1692) /* ty=Tensor[(14, 4, 8), float32] */;
    %1694 = cast(%1691, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
    %1695 = shape_of(%1693, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1696 = cast(%1693, dtype="uint16") /* ty=Tensor[(14, 4, 8), uint16] */;
    %1697 = dyn.reshape(%1694, %1695, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %1698 = multiply(%1684, %1685) /* ty=Tensor[(?, 12, 2), uint8] */;
    %1699 = %1688.1;
    %1700 = %1689.0;
    %1701 = @func_17457() /* ty=Tensor[(16, 13, 9), float64] */;
    %1702 = %1690.0;
    %1703 = bitwise_xor(%1696, %1697) /* ty=Tensor[(14, 4, 8), uint16] */;
    (%1698, %1699, %var_24564, %1700, %1701, %1702, %1703)
  };
  %1704(%var_24639, %var_24640) /* ty=(Tensor[(?, 12, 2), uint8], Tensor[(9, 6, 10), float64], Tensor[(1, 540), uint8], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */
}

def @func_27002() -> (Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 12, 6), float32]) {
  %1705 = @func_20941() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1706 = @func_23238() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(264), float32], Tensor[(9, 7, 2), float32], Tensor[(3136), float32], Tensor[(16, 13, 9), float32]) */;
  %1707 = @func_16635() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint32], Tensor[(16, 13, 9), float32]) */;
  %1708 = @func_26241() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
  %1709 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
  %1710 = %1705.0;
  %1711 = %1706.0;
  %1712 = %1707.0;
  %1713 = %1708.1;
  %1714 = %1709.0;
  (%1710, %1711, %1712, %1713, %1714)
}

def @func_5307() -> Tensor[(16, 13, 9), float32] {
  @func_5305() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_25226() -> (Tensor[(16, 13, 9), float32],) {
  @func_25224() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_7928() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1718 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1715 = @func_4611() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1716 = @func_5869() /* ty=Tensor[(16, 13, 9), float32] */;
    %1717 = %1715.1;
    (%1716, %1717)
  };
  %1718() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_7194(%var_7193: Tensor[(16, 13, 9), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
  %1728 = fn (%var_7187: Tensor[(16, 13, 9), float32]) -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) {
    %1719 = @func_6957() /* ty=(Tensor[(14, 4, 8), uint16],) */;
    %1720 = @func_6889() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1721 = %1720.0;
    %1722 = cast(%var_7187, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
    %1723 = shape_of(%1721, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1724 = cast(%1721, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
    %1725 = dyn.reshape(%1722, %1723, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1726 = %1719.0;
    %1727 = subtract(%1724, %1725) /* ty=Tensor[(16, 13, 9), float64] */;
    (%1726, %1727)
  };
  %1728(%var_7193) /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */
}

def @func_26861() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(26), float64], Tensor[(16, 13, 9), float32]) {
  @func_26859() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(26), float64], Tensor[(16, 13, 9), float32]) */
}

def @main() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), float64]) {
  %1729 = @func_25042() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1730 = @func_27436() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %1731 = @func_15690() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1732 = @func_22867() /* ty=Tensor[(15, 14, 2), float32] */;
  %1733 = cast(%1732, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %1734 = acos(%1733) /* ty=Tensor[(15, 14, 2), float64] */;
  %1735 = cast(%1734, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %1736 = shape_of(%1732, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1737 = cast(%1732, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %1738 = dyn.reshape(%1735, %1736, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1739 = cast(%1734, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %1740 = %1729.0;
  %1741 = %1730.2;
  %1742 = %1731.0;
  %1743 = logical_or(%1737, %1738) /* ty=Tensor[(15, 14, 2), bool] */;
  %1744 = atanh(%1739) /* ty=Tensor[(15, 14, 2), float64] */;
  (%1740, %1741, %1742, %1743, %1744)
}

def @func_26642() -> (Tensor[(16, 13, 9), float32],) {
  %1746 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1745 = @func_22287() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1745,)
  };
  %1746() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_18656() -> (Tensor[(16, 13, 9), float64],) {
  %1748 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %1747 = @func_18408() /* ty=Tensor[(16, 13, 9), float64] */;
    (%1747,)
  };
  %1748() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_4630() -> (Tensor[(16, 13, 9), float32],) {
  @func_4628() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_8064() -> Tensor[(16, 13, 9), float32] {
  %1749 = fn () -> Tensor[(16, 13, 9), float32] {
    @func_6953() /* ty=Tensor[(16, 13, 9), float32] */
  };
  %1749() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_17213() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) {
  @func_17211() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), uint8]) */
}

def @func_26242() -> (Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) {
  %1753 = fn () -> (Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) {
    %1750 = @func_10124() /* ty=(Tensor[(16, 12, 6), float32],) */;
    %1751 = %1750.0;
    %1752 = @func_8572() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1751, %1752)
  };
  %1753() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_22869() -> Tensor[(15, 14, 2), float32] {
  @func_22867() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_9010() -> Tensor[(14, 4, 8), uint16] {
  %1754 = @func_8673() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %1754.0
}

def @func_21498() -> (Tensor[(16, 13, 9), float64],) {
  @func_21496() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_10011() -> Tensor[(16, 13, 9), float32] {
  @func_10009() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_13300() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1758 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1755 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1756 = %1755.0;
    %1757 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1756, %1757)
  };
  %1758() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_17527(%var_17525: Tensor[(3, 7, 15), float64]) -> (Tensor[(3, 7, 15), float64], Tensor[(16, 13, 9), float32]) {
  @func_17524(%var_17525) /* ty=(Tensor[(3, 7, 15), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_27230() -> (Tensor[(32), uint16],) {
  %1759 = @func_19399() /* ty=(Tensor[(32), uint16],) */;
  %1760 = %1759.0;
  (%1760,)
}

def @func_15623() -> Tensor[(16, 13, 9), float32] {
  %1761 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1761.1
}

def @func_10891(%var_10856: Tensor[(7, 8, 6), float32]) -> (Tensor[(7, 8, 6), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1762 = cast(%var_10856, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %1763 = shape_of(meta[relay.Constant][55] /* ty=Tensor[(7, 8, 6), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1764 = cast(meta[relay.Constant][55] /* ty=Tensor[(7, 8, 6), float32] */, dtype="float32") /* ty=Tensor[(7, 8, 6), float32] */;
  %1765 = dyn.reshape(%1762, %1763, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1766 = @func_5345() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1767 = @func_5393() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1768 = divide(%1764, %1765) /* ty=Tensor[(7, 8, 6), float32] */;
  %1769 = %1766.0;
  %1770 = %1767.0;
  (%1768, %1769, %1770)
}

def @func_5871() -> Tensor[(16, 13, 9), float32] {
  @func_5869() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_25150() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1771 = @func_13299() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1772 = @func_14317() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1773 = %1771.1;
  %1774 = %1772.2;
  (%1773, %1774)
}

def @func_27600() -> (Tensor[(16, 13, 9), float32],) {
  %1777 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1775 = @func_11652() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %1776 = %1775.0;
    (%1776,)
  };
  %1777() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_24456() -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  %1778 = @func_21340() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1779 = @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */;
  %1780 = %1778.0;
  %1781 = %1779.0;
  %1782 = @func_22287() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1780, %1781, %1782)
}

def @func_22755(%var_22753: int64, %var_22754: Tensor[(2, 4, 16), int64]) -> (Tensor[(2, 4, 16), bool], Tensor[(16, 13, 9), float32]) {
  %1788 = fn (%var_22730: int64, %var_22731: Tensor[(2, 4, 16), int64]) -> (Tensor[(2, 4, 16), bool], Tensor[(16, 13, 9), float32]) {
    %1783 = cast(%var_22730, dtype="bool") /* ty=bool */;
    %1784 = cast(%var_22731, dtype="bool") /* ty=Tensor[(2, 4, 16), bool] */;
    %1785 = @func_12142() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1786 = less(%1783, %1784) /* ty=Tensor[(2, 4, 16), bool] */;
    %1787 = %1785.0;
    (%1786, %1787)
  };
  %1788(%var_22753, %var_22754) /* ty=(Tensor[(2, 4, 16), bool], Tensor[(16, 13, 9), float32]) */
}

def @func_11549() -> Tensor[(16, 13, 9), float32] {
  @func_11547() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5714() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_5712() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_7711(%var_7709: Tensor[(2, 11, 1), float32]) -> (Tensor[(2, 11, ?), bool],) {
  @func_7708(%var_7709) /* ty=(Tensor[(2, 11, ?), bool],) */
}

def @func_21595() -> (Tensor[(16, 13, 9), float32],) {
  %1789 = @func_14317() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1790 = %1789.0;
  (%1790,)
}

def @func_23737() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float64]) {
  %1791 = @func_17457() /* ty=Tensor[(16, 13, 9), float64] */;
  %1792 = @func_6935() /* ty=Tensor[(16, 13, 9), float64] */;
  (%1791, %1792)
}

def @func_6277() -> Tensor[(16, 13, 9), float32] {
  %1794 = fn () -> Tensor[(16, 13, 9), float32] {
    %1793 = @func_5511() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1793.1
  };
  %1794() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19688() -> (Tensor[(16, 13, 9), float32], Tensor[(2, 11, ?), bool], Tensor[(22), float32]) {
  %1800 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(2, 11, ?), bool], Tensor[(22), float32]) {
    %1795 = cast(meta[relay.Constant][56] /* ty=Tensor[(22), float32] */, dtype="float32") /* ty=Tensor[(22), float32] */;
    %1796 = reshape(%1795, newshape=[2, 11, 1]) /* ty=Tensor[(2, 11, 1), float32] */;
    %1797 = @func_7708(%1796) /* ty=(Tensor[(2, 11, ?), bool],) */;
    %1798 = @func_10788() /* ty=Tensor[(16, 13, 9), float32] */;
    %1799 = %1797.0;
    (%1798, %1799, meta[relay.Constant][56] /* ty=Tensor[(22), float32] */)
  };
  %1800() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(2, 11, ?), bool], Tensor[(22), float32]) */
}

def @func_27232() -> (Tensor[(32), uint16],) {
  @func_27230() /* ty=(Tensor[(32), uint16],) */
}

def @func_12487(%var_12453: Tensor[(8, 6, 14), uint64], %var_12465: Tensor[(4, 468), float32]) -> (Tensor[(8, 6, 14), bool], Tensor[(16, 13, 9), bool], Tensor[(4, 468), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  %1801 = cast(meta[relay.Constant][57] /* ty=uint64 */, dtype="bool") /* ty=bool */;
  %1802 = cast(%var_12453, dtype="bool") /* ty=Tensor[(8, 6, 14), bool] */;
  %1803 = cast(%var_12465, dtype="float32") /* ty=Tensor[(4, 468), float32] */;
  %1804 = reshape(%1803, newshape=[16, 13, 9]) /* ty=Tensor[(16, 13, 9), float32] */;
  %1805 = @func_4787() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(32), uint16]) */;
  %1806 = @func_5230() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1807 = greater_equal(%1801, %1802) /* ty=Tensor[(8, 6, 14), bool] */;
  %1808 = @func_6263(%1804) /* ty=Tensor[(16, 13, 9), bool] */;
  %1809 = %1805.3;
  %1810 = %1806.1;
  (%1807, %1808, %var_12465, %1809, %1810)
}

def @func_25395() -> (Tensor[(16, 13, 9), float64],) {
  %1811 = @func_19458() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1812 = %1811.0;
  (%1812,)
}

def @func_16912() -> (Tensor[(16, 13, 9), float32],) {
  @func_16910() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_12253() -> Tensor[(16, 13, 9), float32] {
  @func_11968() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_19725(%var_19724: Tensor[(392, 8), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(392, 8), float32]) {
  %1818 = fn (%var_19713: Tensor[(392, 8), float32]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(392, 8), float32]) {
    %1813 = cast(%var_19713, dtype="float32") /* ty=Tensor[(392, 8), float32] */;
    %1814 = reshape(%1813, newshape=[3136]) /* ty=Tensor[(3136), float32] */;
    %1815 = @func_16788(%1814) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 2), uint16], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 14, 14), float32], Tensor[(3136), float32]) */;
    %1816 = @func_6119() /* ty=Tensor[(16, 13, 9), float32] */;
    %1817 = %1815.1;
    (%1816, %1817, %var_19713)
  };
  %1818(%var_19724) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(392, 8), float32]) */
}

def @func_14963() -> Tensor[(16, 13, 9), float32] {
  @func_8185() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_6821() -> (Tensor[(14, 4, 8), uint16],) {
  @func_6819() /* ty=(Tensor[(14, 4, 8), uint16],) */
}

def @func_20124() -> (Tensor[(16, 13, 9), float32],) {
  %1819 = @func_12253() /* ty=Tensor[(16, 13, 9), float32] */;
  (%1819,)
}

def @func_13859() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1820 = @func_9307() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1821 = @func_10376() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1822 = @func_12732() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float64]) */;
  %1823 = %1820.0;
  %1824 = @func_4420() /* ty=Tensor[(16, 13, 9), float32] */;
  %1825 = %1821.1;
  %1826 = %1822.3;
  (%1823, %1824, %1825, %1826)
}

def @func_23001() -> Tensor[(14, 4, 8), uint16] {
  %1827 = @func_16862() /* ty=(Tensor[(6, 5, 3), uint64], Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), uint16]) */;
  %1827.2
}

def @func_20594() -> (Tensor[(90), uint64],) {
  %1830 = fn () -> (Tensor[(90), uint64],) {
    %1828 = @func_13162() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(6, 5, 3), uint64], Tensor[(90), uint64]) */;
    %1829 = %1828.2;
    (%1829,)
  };
  %1830() /* ty=(Tensor[(90), uint64],) */
}

def @func_22717() -> (Tensor[(16, 13, 9), float32],) {
  @func_22715() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_20890() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) {
  @func_20888() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32], Tensor[(32), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_12848() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1831 = @func_12562() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1832 = @func_7756() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
  %1833 = @func_12430() /* ty=(Tensor[(16, 12, 6), float32], Tensor[(16, 13, 9), float32]) */;
  %1834 = @func_5691() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
  %1835 = %1831.0;
  %1836 = %1832.0;
  %1837 = %1833.1;
  %1838 = %1834.1;
  (%1835, %1836, %1837, %1838)
}

def @func_18202() -> (Tensor[(16, 13, 9), float32],) {
  @func_18200() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_5013(%var_5012: Tensor[(16, 13, 9), float32]) -> (Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1849 = fn (%var_4995: Tensor[(16, 13, 9), float32]) -> (Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
    %1839 = @func_4181() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1840 = %1839.0;
    %1841 = cast(%var_4995, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
    %1842 = shape_of(%1840, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1843 = cast(%1840, dtype="uint8") /* ty=Tensor[(16, 13, 9), uint8] */;
    %1844 = dyn.reshape(%1841, %1842, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    %1845 = cast(%1840, dtype="float64") /* ty=Tensor[(16, 13, 9), float64] */;
    %1846 = minimum(%1843, %1844) /* ty=Tensor[(16, 13, 9), uint8] */;
    %1847 = @func_4166() /* ty=Tensor[(16, 13, 9), float32] */;
    %1848 = sinh(%1845) /* ty=Tensor[(16, 13, 9), float64] */;
    (%1846, %1847, %1848)
  };
  %1849(%var_5012) /* ty=(Tensor[(16, 13, 9), uint8], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_14367() -> Tensor[(16, 13, 9), float32] {
  @func_14365() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_21711(%var_21703: int16, %var_21704: Tensor[(5, 13, 5), int16]) -> (Tensor[(5, 13, 5), int16],) {
  %1850 = cast(%var_21703, dtype="int16") /* ty=int16 */;
  %1851 = cast(%var_21704, dtype="int16") /* ty=Tensor[(5, 13, 5), int16] */;
  %1852 = minimum(%1850, %1851) /* ty=Tensor[(5, 13, 5), int16] */;
  (%1852,)
}

def @func_26148() -> (Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) {
  @func_26146() /* ty=(Tensor[(14, 4, 8), uint16], Tensor[(16, 13, 9), float32]) */
}

def @func_21127() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_21125() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_19459() -> (Tensor[(16, 13, 9), float64],) {
  %1855 = fn () -> (Tensor[(16, 13, 9), float64],) {
    %1853 = @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */;
    %1854 = %1853.1;
    (%1854,)
  };
  %1855() /* ty=(Tensor[(16, 13, 9), float64],) */
}

def @func_25614() -> (Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) {
  @func_25612() /* ty=(Tensor[(16, 13, 9), float64], Tensor[(16, 13, 9), float32]) */
}

def @func_12797() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  %1856 = @func_10163() /* ty=(Tensor[(16, 13, 9), float64],) */;
  %1857 = @func_6510() /* ty=Tensor[(16, 13, 9), float32] */;
  %1858 = %1856.0;
  (%1857, %1858)
}

def @func_8245() -> (Tensor[(16, 13, 9), float32],) {
  %1861 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1859 = @func_7927() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1860 = %1859.1;
    (%1860,)
  };
  %1861() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_9109(%var_9107: Tensor[(15, 6), uint64], %var_9108: Tensor[(42), float32]) -> (Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), int32], Tensor[(6, 5, 3), uint64], Tensor[(15, 6), uint64], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) {
  @func_9105(%var_9107, %var_9108) /* ty=(Tensor[(16, 13, 9), float64], Tensor[(14, 4, 8), int32], Tensor[(6, 5, 3), uint64], Tensor[(15, 6), uint64], Tensor[(6, 1, 7), float32], Tensor[(42), float32]) */
}

def @func_26812() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  @func_26810() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_23371() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1862 = @func_10547() /* ty=(Tensor[(16, 13, 9), float32],) */;
  %1863 = @func_9141() /* ty=Tensor[(16, 13, 9), float32] */;
  %1864 = @func_15835() /* ty=Tensor[(16, 13, 9), float32] */;
  %1865 = %1862.0;
  (%1863, %1864, %1865)
}

def @func_23609(%var_23608: Tensor[(1, 2, 13), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(?, 2, 13), uint64]) {
  %1880 = fn (%var_23582: Tensor[(1, 2, 13), float64]) -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(?, 2, 13), uint64]) {
    %1866 = cast(%var_23582, dtype="float64") /* ty=Tensor[(1, 2, 13), float64] */;
    %1867 = sinh(%1866) /* ty=Tensor[(1, 2, 13), float64] */;
    %1868 = cast(%var_23582, dtype="uint64") /* ty=Tensor[(1, 2, 13), uint64] */;
    %1869 = shape_of(%1867, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1870 = cast(%1867, dtype="uint64") /* ty=Tensor[(1, 2, 13), uint64] */;
    %1871 = dyn.reshape(%1868, %1869, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1872 = maximum(%1870, %1871) /* ty=Tensor[(?, 2, 13), uint64] */;
    %1873 = cast(%var_23582, dtype="uint64") /* ty=Tensor[(1, 2, 13), uint64] */;
    %1874 = shape_of(%1872, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1875 = cast(%1872, dtype="uint64") /* ty=Tensor[(?, 2, 13), uint64] */;
    %1876 = dyn.reshape(%1873, %1874, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1877 = @func_22287() /* ty=Tensor[(16, 13, 9), float32] */;
    %1878 = @func_22890() /* ty=Tensor[(16, 13, 9), float32] */;
    %1879 = logical_xor(%1875, %1876) /* ty=Tensor[(?, 2, 13), uint64] */;
    (%1877, %1878, %1879)
  };
  %1880(%var_23608) /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32], Tensor[(?, 2, 13), uint64]) */
}

def @func_17005() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
  %1884 = fn () -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) {
    %1881 = @func_7587() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */;
    %1882 = @func_10817() /* ty=Tensor[(16, 13, 9), float32] */;
    %1883 = %1881.0;
    (%1882, %1883)
  };
  %1884() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float32]) */
}

def @func_12499() -> (Tensor[(16, 13, 9), float32],) {
  %1886 = fn () -> (Tensor[(16, 13, 9), float32],) {
    %1885 = @func_9817() /* ty=Tensor[(16, 13, 9), float32] */;
    (%1885,)
  };
  %1886() /* ty=(Tensor[(16, 13, 9), float32],) */
}

def @func_18999() -> Tensor[(16, 13, 9), float32] {
  %1888 = fn () -> Tensor[(16, 13, 9), float32] {
    %1887 = @func_18200() /* ty=(Tensor[(16, 13, 9), float32],) */;
    %1887.0
  };
  %1888() /* ty=Tensor[(16, 13, 9), float32] */
}

def @func_5273() -> (Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) {
  @func_5271() /* ty=(Tensor[(16, 13, 9), float32], Tensor[(16, 13, 9), float64]) */
}

def @func_24309() -> Tensor[(16, 13, 9), float32] {
  @func_24307() /* ty=Tensor[(16, 13, 9), float32] */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

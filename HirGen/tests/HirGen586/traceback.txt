==========mod==========
#[version = "0.0.5"]
def @func_8906() -> (Tensor[(11, 12, 8), float64], Tensor[(84), int16]) {
  %0 = @func_7183() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) */;
  %1 = @func_4241() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %2 = %0.0;
  %3 = %1.0;
  (%2, %3)
}

def @func_5860() -> Tensor[(900), uint8] {
  %4 = @func_5673() /* ty=(Tensor[(900), uint8], Tensor[(84), int16]) */;
  %4.0
}

def @func_8477(%var_8458: Tensor[(195), int8], %var_8459: Tensor[(160, 1), uint16]) -> (Tensor[(11, 12, 8), float64], Tensor[(3, 13, 5), int8], Tensor[(195), int8], Tensor[(160, 1), uint16], Tensor[(900), uint8]) {
  %5 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %6 = cast(%var_8458, dtype="int8") /* ty=Tensor[(195), int8] */;
  %7 = cast(%var_8459, dtype="uint16") /* ty=Tensor[(160, 1), uint16] */;
  %8 = reshape(%6, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), int8] */;
  %9 = reshape(%7, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %10 = @func_7552(%8, %9) /* ty=(Tensor[(3, 13, 5), int8], Tensor[(84), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %11 = %5.0;
  %12 = %10.0;
  %13 = @func_6087() /* ty=Tensor[(900), uint8] */;
  (%11, %12, %var_8458, %var_8459, %13)
}

def @func_8433(%var_8416: Tensor[(550), int16], %var_8417: Tensor[(2, 80), uint16]) -> (Tensor[(84), int16], Tensor[(160), uint16], Tensor[(550), int16], Tensor[(2, 80), uint16]) {
  %14 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %15 = cast(%var_8416, dtype="int16") /* ty=Tensor[(550), int16] */;
  %16 = cast(%var_8417, dtype="uint16") /* ty=Tensor[(2, 80), uint16] */;
  %17 = reshape(%15, newshape=[55, 10]) /* ty=Tensor[(55, 10), int16] */;
  %18 = reshape(%16, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %19 = @func_4998(%17, %18) /* ty=(Tensor[(55, 10), uint8], Tensor[(240), uint8], Tensor[(160), uint16], Tensor[(240), uint8]) */;
  %20 = %14.0;
  %21 = %19.2;
  (%20, %21, %var_8416, %var_8417)
}

def @func_2976() -> (Tensor[(10, 11, 5), int16],) {
  %22 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
  (%22,)
}

def @func_7387() -> Tensor[(900), uint8] {
  @func_6656() /* ty=Tensor[(900), uint8] */
}

def @func_6786() -> (Tensor[(10, 11, 5), int16], Tensor[(900), uint8]) {
  %23 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %24 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %25 = %23.0;
  %26 = %24.0;
  (%25, %26)
}

def @func_343(%var_326: Tensor[(10, 6, 15), uint8]) -> (Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) {
  %27 = cast(meta[relay.Constant][0] /* ty=Tensor[(10, 6, 15), uint8] */, dtype="bool") /* ty=Tensor[(10, 6, 15), bool] */;
  %28 = shape_of(%var_326, dtype="int32") /* ty=Tensor[(3), int32] */;
  %29 = cast(%var_326, dtype="bool") /* ty=Tensor[(10, 6, 15), bool] */;
  %30 = dyn.reshape(%27, %28, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %31 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 4), int16] */, dtype="int16") /* ty=Tensor[(21, 4), int16] */;
  %32 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 4), int16] */, dtype="int16") /* ty=Tensor[(21, 4), int16] */;
  %33 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 4), int16] */, dtype="int16") /* ty=Tensor[(21, 4), int16] */;
  %34 = reshape(%31, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %35 = reshape(%32, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %36 = reshape(%33, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %37 = @func_223(%34, %35, %36) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
  %38 = cast(meta[relay.Constant][1] /* ty=Tensor[(21, 4), int16] */, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
  %39 = less(%29, %30) /* ty=Tensor[(10, 6, 15), bool] */;
  %40 = %37.2;
  %41 = acosh(%38) /* ty=Tensor[(21, 4), float64] */;
  (%39, %40, %41)
}

def @func_4585() -> Tensor[(84), int16] {
  %42 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %42.0
}

def @func_4665() -> Tensor[(3, 14, 2), float32] {
  %43 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %43.1
}

def @func_8177() -> (Tensor[(11, 12, 8), float64],) {
  %44 = @func_6557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
  %45 = %44.0;
  (%45,)
}

def @func_7893() -> Tensor[(900), float64] {
  %46 = @func_7755() /* ty=Tensor[(900), uint8] */;
  %47 = cast(%46, dtype="float64") /* ty=Tensor[(900), float64] */;
  exp(%47) /* ty=Tensor[(900), float64] */
}

def @func_8396(%var_8373: Tensor[(240), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 6, 15), bool], Tensor[(900), uint8], Tensor[(240), uint8], Tensor[(4, 40), uint16], Tensor[(240), uint8]) {
  %48 = @func_5986() /* ty=Tensor[(11, 12, 8), float64] */;
  %49 = cast(%48, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %50 = cast(meta[relay.Constant][2] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %51 = reshape(%50, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %52 = @func_343(%51) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %53 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 40), uint16] */, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %54 = cast(%var_8373, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %55 = reshape(%53, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %56 = reshape(%54, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %57 = @func_2306(%55, %56) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %58 = acos(%49) /* ty=Tensor[(11, 12, 8), float64] */;
  %59 = %52.0;
  %60 = %57.2;
  (%58, %59, meta[relay.Constant][2] /* ty=Tensor[(900), uint8] */, %60, meta[relay.Constant][3] /* ty=Tensor[(4, 40), uint16] */, %var_8373)
}

def @func_3895() -> Tensor[(84), int16] {
  %61 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %61.2
}

def @func_6515(%var_6512: Tensor[(1144), float32]) -> (Tensor[(84), int16], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(1, 160), uint16], Tensor[(11, 12, 8), float64], Tensor[(1144), float32]) {
  %62 = @func_4241() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %63 = @func_5673() /* ty=(Tensor[(900), uint8], Tensor[(84), int16]) */;
  %64 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %65 = cast(meta[relay.Constant][4] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
  %66 = reshape(%65, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %67 = @func_2853(%66) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %68 = cast(%var_6512, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %69 = reshape(%68, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %70 = @func_2607(%69) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
  %71 = %62.0;
  %72 = %63.0;
  %73 = %64.0;
  %74 = %67.0;
  %75 = %70.0;
  (%71, %72, %73, %74, meta[relay.Constant][4] /* ty=Tensor[(1, 160), uint16] */, %75, %var_6512)
}

def @func_4001(%var_3986: Tensor[(9, 6, 11), float64], %var_3987: Tensor[(9, 6, 11), float64]) -> (Tensor[(9, 6, 11), float32],) {
  %76 = cast(%var_3987, dtype="float64") /* ty=Tensor[(9, 6, 11), float64] */;
  %77 = shape_of(%var_3986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %78 = cast(%var_3986, dtype="float64") /* ty=Tensor[(9, 6, 11), float64] */;
  %79 = dyn.reshape(%76, %77, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %80 = mod(%78, %79) /* ty=Tensor[(9, 6, 11), float64] */;
  %81 = cast(%80, dtype="float32") /* ty=Tensor[(9, 6, 11), float32] */;
  %82 = rsqrt(%81) /* ty=Tensor[(9, 6, 11), float32] */;
  (%82,)
}

def @func_7273() -> (Tensor[(84), int16], Tensor[(10, 11, 5), int16]) {
  %83 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %84 = @func_6039() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %85 = %83.0;
  %86 = %84.0;
  (%85, %86)
}

def @func_6141(%var_6133: Tensor[(12, 13, 8), uint8], %var_6134: Tensor[(12, 13, 8), uint8]) -> Tensor[(12, 13, 8), uint8] {
  %87 = cast(%var_6134, dtype="uint8") /* ty=Tensor[(12, 13, 8), uint8] */;
  %88 = shape_of(%var_6133, dtype="int32") /* ty=Tensor[(3), int32] */;
  %89 = cast(%var_6133, dtype="uint8") /* ty=Tensor[(12, 13, 8), uint8] */;
  %90 = dyn.reshape(%87, %88, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  minimum(%89, %90) /* ty=Tensor[(12, 13, 8), uint8] */
}

def @func_6656() -> Tensor[(900), uint8] {
  @func_4813() /* ty=Tensor[(900), uint8] */
}

def @func_7641() -> (Tensor[(84), int16],) {
  %91 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %92 = %91.0;
  (%92,)
}

def @func_7362() -> Tensor[(900), uint8] {
  %93 = @func_6939() /* ty=(Tensor[(900), uint8],) */;
  %93.0
}

def @func_5557() -> (Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) {
  %94 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %95 = @func_3863() /* ty=Tensor[(900), uint8] */;
  %96 = %94.0;
  (%95, %96)
}

def @func_4208() -> (Tensor[(84), int16],) {
  %97 = @func_3895() /* ty=Tensor[(84), int16] */;
  (%97,)
}

def @func_3037() -> (Tensor[(11, 12, 8), float64],) {
  %98 = @func_2864() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %99 = %98.0;
  (%99,)
}

def @func_996(%var_983: Tensor[(9, 6, 12), float64]) -> Tensor[(9, 6, 12), float64] {
  %100 = cast(%var_983, dtype="float64") /* ty=Tensor[(9, 6, 12), float64] */;
  rsqrt(%100) /* ty=Tensor[(9, 6, 12), float64] */
}

def @func_2306(%var_2286: Tensor[(4, 40), uint16], %var_2297: Tensor[(240), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) {
  %101 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %102 = cast(%var_2297, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %103 = cast(%var_2297, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %104 = reshape(%102, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %105 = reshape(%103, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %106 = cast(%var_2286, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %107 = reshape(%106, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %108 = @func_1629(%107) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %109 = %108.0;
  %110 = cast(%109, dtype="uint8") /* ty=Tensor[(2, 5, 16), uint8] */;
  %111 = shape_of(%var_2286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %112 = cast(%var_2286, dtype="uint8") /* ty=Tensor[(4, 40), uint8] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %114 = %101.1;
  %115 = @func_723(%104, %105) /* ty=Tensor[(10, 12, 2), bool] */;
  %116 = left_shift(%112, %113) /* ty=Tensor[(4, 40), uint8] */;
  (%114, %115, %var_2297, %116)
}

def @func_2783(%var_2774: Tensor[(160), uint16], %var_2775: Tensor[(240), uint8]) -> (Tensor[(84), int16], Tensor[(10, 12, 2), bool], Tensor[(1056), float64], Tensor[(160), uint16], Tensor[(240), uint8]) {
  %117 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %118 = cast(meta[relay.Constant][5] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %119 = cast(%var_2774, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %120 = cast(%var_2775, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %121 = reshape(%118, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %122 = reshape(%119, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %123 = reshape(%120, newshape=[240, 1]) /* ty=Tensor[(240, 1), uint8] */;
  %124 = @func_2471(%121, %122, %123) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) */;
  %125 = %117.2;
  %126 = %124.1;
  (%125, %126, meta[relay.Constant][5] /* ty=Tensor[(1056), float64] */, %var_2774, %var_2775)
}

def @func_8274(%var_8215: Tensor[(160), uint16], %var_8267: Tensor[(1056, 1), float64]) -> (Tensor[(900), uint8], Tensor[(160), uint16], Tensor[(160), uint16], Tensor[(11, 12, 8), bool], Tensor[(1056, 1), float64]) {
  %127 = cast(%var_8215, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %128 = reshape(%127, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %129 = @func_2853(%128) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %130 = cast(%var_8267, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
  %131 = reshape(%130, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %132 = @func_3293(%131) /* ty=(Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) */;
  %133 = @func_5860() /* ty=Tensor[(900), uint8] */;
  %134 = %129.4;
  %135 = %132.0;
  (%133, %134, %var_8215, %135, %var_8267)
}

def @func_3852(%var_3803: Tensor[(160), uint16], %var_3847: Tensor[(2, 120), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float64], Tensor[(84), int16], Tensor[(3, 14, 2), float32], Tensor[(11, 12, 8), float64], Tensor[(11, 8, 13), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(1144), float32], Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(2, 120), uint8]) {
  %136 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %137 = cast(meta[relay.Constant][6] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %138 = cast(meta[relay.Constant][6] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %139 = cast(meta[relay.Constant][6] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %140 = reshape(%137, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %141 = reshape(%138, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %142 = reshape(%139, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %143 = @func_223(%140, %141, %142) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
  %144 = %143.1;
  %145 = cast(%144, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
  %146 = cast(%144, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
  %147 = cast(%144, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
  %148 = reshape(%145, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %149 = reshape(%146, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %150 = reshape(%147, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %151 = @func_223(%148, %149, %150) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
  %152 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %153 = cast(meta[relay.Constant][7] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
  %154 = cast(%var_3803, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %155 = cast(meta[relay.Constant][8] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %156 = reshape(%153, newshape=[4, 13, 15]) /* ty=Tensor[(4, 13, 15), float64] */;
  %157 = reshape(%154, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %158 = reshape(%155, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %159 = @func_3697(%156, %157, %158) /* ty=(Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) */;
  %160 = cast(%144, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
  %161 = cast(meta[relay.Constant][6] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %162 = cast(%144, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
  %163 = reshape(%160, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %164 = reshape(%161, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %165 = reshape(%162, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %166 = @func_223(%163, %164, %165) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
  %167 = cast(%var_3803, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %168 = cast(%var_3847, dtype="uint8") /* ty=Tensor[(2, 120), uint8] */;
  %169 = reshape(%167, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %170 = reshape(%168, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %171 = @func_2306(%169, %170) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %172 = %136.0;
  %173 = %151.2;
  %174 = %152.0;
  %175 = %159.7;
  %176 = %166.2;
  %177 = %171.0;
  (%172, %144, meta[relay.Constant][6] /* ty=Tensor[(84), int16] */, %173, %174, %175, meta[relay.Constant][7] /* ty=Tensor[(780), float64] */, %var_3803, meta[relay.Constant][8] /* ty=Tensor[(1144), float32] */, %176, %177, %var_3847)
}

def @func_5413(%var_5406: Tensor[(10, 11, 5), int16]) -> (Tensor[(10, 11, 5), int16],) {
  %178 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %179 = %178.1;
  %180 = cast(%var_5406, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %184 = maximum(%182, %183) /* ty=Tensor[(10, 11, 5), int16] */;
  (%184,)
}

def @func_6939() -> (Tensor[(900), uint8],) {
  %185 = @func_3938() /* ty=Tensor[(900), uint8] */;
  (%185,)
}

def @func_8701() -> (Tensor[(11, 12, 8), float64],) {
  %186 = @func_6557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
  %187 = %186.1;
  (%187,)
}

def @func_5259(%var_5224: Tensor[(160), uint16], %var_5250: Tensor[(77, 6), bool]) -> (Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) {
  %188 = cast(%var_5224, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %189 = reshape(%188, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %190 = @func_1629(%189) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %191 = %190.0;
  %192 = cast(%var_5224, dtype="int16") /* ty=Tensor[(160), int16] */;
  %193 = shape_of(%191, dtype="int32") /* ty=Tensor[(3), int32] */;
  %194 = cast(%191, dtype="int16") /* ty=Tensor[(2, 5, 16), int16] */;
  %195 = dyn.reshape(%192, %193, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %196 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %197 = %196.2;
  %198 = cast(%197, dtype="float64") /* ty=Tensor[(77, 6), float64] */;
  %199 = sqrt(%198) /* ty=Tensor[(77, 6), float64] */;
  %200 = cast(%197, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(2), int32] */;
  %202 = cast(%199, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %204 = mod(%202, %203) /* ty=Tensor[(77, 6), float32] */;
  %205 = cast(%204, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
  %206 = shape_of(%199, dtype="int32") /* ty=Tensor[(2), int32] */;
  %207 = cast(%199, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %209 = logical_and(%207, %208) /* ty=Tensor[(77, 6), bool] */;
  %210 = cast(%var_5250, dtype="int8") /* ty=Tensor[(77, 6), int8] */;
  %211 = shape_of(%209, dtype="int32") /* ty=Tensor[(2), int32] */;
  %212 = cast(%209, dtype="int8") /* ty=Tensor[(77, 6), int8] */;
  %213 = dyn.reshape(%210, %211, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %214 = add(%194, %195) /* ty=Tensor[(2, 5, 16), int16] */;
  %215 = minimum(%212, %213) /* ty=Tensor[(77, 6), int8] */;
  (%214, %215)
}

def @func_4765(%var_4736: Tensor[(12, 12, 12), bool], %var_4737: Tensor[(12, 12, 12), bool], %var_4760: Tensor[(7, 154), uint64]) -> (Tensor[(12, 12, 12), bool], Tensor[(7, 154), bool]) {
  %216 = cast(%var_4737, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %217 = shape_of(%var_4736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %218 = cast(%var_4736, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %219 = dyn.reshape(%216, %217, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %220 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %221 = %220.2;
  %222 = cast(%221, dtype="bool") /* ty=Tensor[(1, 154), bool] */;
  %223 = cast(%var_4760, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %224 = logical_or(%218, %219) /* ty=Tensor[(12, 12, 12), bool] */;
  %225 = equal(%222, %223) /* ty=Tensor[(7, 154), bool] */;
  (%224, %225)
}

def @func_8055(%var_8023: Tensor[(10, 11, 5), int16]) -> (Tensor[(10, 11, 5), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16]) {
  %226 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
  %227 = cast(%var_8023, dtype="bool") /* ty=Tensor[(10, 11, 5), bool] */;
  %228 = shape_of(%226, dtype="int32") /* ty=Tensor[(3), int32] */;
  %229 = cast(%226, dtype="bool") /* ty=Tensor[(10, 11, 5), bool] */;
  %230 = dyn.reshape(%227, %228, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %231 = greater_equal(%229, %230) /* ty=Tensor[(10, 11, 5), bool] */;
  %232 = cast(%231, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
  %233 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %234 = log(%232) /* ty=Tensor[(10, 11, 5), float64] */;
  %235 = @func_3938() /* ty=Tensor[(900), uint8] */;
  %236 = %233.1;
  (%234, %235, %236)
}

def @func_3960() -> (Tensor[(10, 11, 5), float32],) {
  %237 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %238 = %237.0;
  %239 = cast(%238, dtype="float32") /* ty=Tensor[(10, 11, 5), float32] */;
  %240 = tan(%239) /* ty=Tensor[(10, 11, 5), float32] */;
  (%240,)
}

def @func_8691(%var_8683: Tensor[(2, 4, 2), uint16], %var_8684: Tensor[(2, 4, 2), uint16]) -> (Tensor[(2, 4, 2), uint16],) {
  %241 = cast(%var_8684, dtype="uint16") /* ty=Tensor[(2, 4, 2), uint16] */;
  %242 = shape_of(%var_8683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %243 = cast(%var_8683, dtype="uint16") /* ty=Tensor[(2, 4, 2), uint16] */;
  %244 = dyn.reshape(%241, %242, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %245 = maximum(%243, %244) /* ty=Tensor[(2, 4, 2), uint16] */;
  (%245,)
}

def @func_5287() -> Tensor[(11, 12, 8), float64] {
  %246 = @func_4951() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %246.0
}

def @func_8860() -> (Tensor[(11, 12, 8), float64],) {
  %247 = @func_6557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
  %248 = %247.0;
  (%248,)
}

def @func_3528(%var_3449: Tensor[(16, 13, 5), float64], %var_3450: Tensor[(16, 13, 5), float64], %var_3474: Tensor[(1056), float64], %var_3517: Tensor[(900), uint8]) -> (Tensor[(16, 13, 5), float64], Tensor[(11, 12, 8), bool], Tensor[(1056), float64], Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float32], Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(21, 4), float32]) {
  %249 = cast(%var_3450, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %250 = shape_of(%var_3449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %251 = cast(%var_3449, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %252 = dyn.reshape(%249, %250, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %253 = cast(%var_3474, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %254 = reshape(%253, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %255 = cast(%var_3449, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %256 = log(%255) /* ty=Tensor[(16, 13, 5), float64] */;
  %257 = cast(%var_3449, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %258 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %259 = cast(%256, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %260 = dyn.reshape(%257, %258, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %261 = cast(%var_3450, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  %262 = shape_of(%256, dtype="int32") /* ty=Tensor[(3), int32] */;
  %263 = cast(%256, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  %264 = dyn.reshape(%261, %262, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %265 = cast(meta[relay.Constant][9] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %266 = reshape(%265, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %267 = @func_1629(%266) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %268 = cast(%var_3517, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %269 = reshape(%268, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %270 = @func_343(%269) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %271 = %270.2;
  %272 = cast(%271, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %273 = floor_mod(%251, %252) /* ty=Tensor[(16, 13, 5), float64] */;
  %274 = @func_3441(%254) /* ty=Tensor[(11, 12, 8), bool] */;
  %275 = logical_or(%259, %260) /* ty=Tensor[(16, 13, 5), bool] */;
  %276 = minimum(%263, %264) /* ty=Tensor[(16, 13, 5), float32] */;
  %277 = %267.0;
  %278 = log2(%272) /* ty=Tensor[(21, 4), float32] */;
  (%273, %274, %var_3474, %275, %276, %var_3517, %277, meta[relay.Constant][9] /* ty=Tensor[(160), uint16] */, %278)
}

def @main(%var_9112: Tensor[(1155), int64]) -> (Tensor[(11, 12, 8), float64], Tensor[(1155), bool], Tensor[(1155), bool]) {
  %279 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %280 = cast(%var_9112, dtype="int64") /* ty=Tensor[(1155), int64] */;
  %281 = reshape(%280, newshape=[11, 7, 15]) /* ty=Tensor[(11, 7, 15), int64] */;
  %282 = @func_5710(%281) /* ty=(Tensor[(11, 7, 15), int64],) */;
  %283 = %282.0;
  %284 = cast(%283, dtype="bool") /* ty=Tensor[(11, 7, 15), bool] */;
  %285 = shape_of(%var_9112, dtype="int32") /* ty=Tensor[(1), int32] */;
  %286 = cast(%var_9112, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?), bool] */;
  %288 = cast(%283, dtype="bool") /* ty=Tensor[(11, 7, 15), bool] */;
  %289 = shape_of(%var_9112, dtype="int32") /* ty=Tensor[(1), int32] */;
  %290 = cast(%var_9112, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %291 = dyn.reshape(%288, %289, newshape=[]) /* ty=Tensor[(?), bool] */;
  %292 = %279.0;
  %293 = less_equal(%286, %287) /* ty=Tensor[(1155), bool] */;
  %294 = equal(%290, %291) /* ty=Tensor[(1155), bool] */;
  (%292, %293, %294)
}

def @func_7501() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(11, 12, 8), float64]) {
  %295 = @func_5557() /* ty=(Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) */;
  %296 = @func_5752() /* ty=(Tensor[(900), uint8],) */;
  %297 = cast(meta[relay.Constant][10] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %298 = reshape(%297, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %299 = @func_6515(%298) /* ty=(Tensor[(84), int16], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(1, 160), uint16], Tensor[(11, 12, 8), float64], Tensor[(1144), float32]) */;
  %300 = @func_6636() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
  %301 = %295.1;
  %302 = %296.0;
  %303 = %299.2;
  %304 = %300.1;
  (%301, %302, %303, meta[relay.Constant][10] /* ty=Tensor[(1144), float32] */, %304)
}

def @func_3938() -> Tensor[(900), uint8] {
  @func_3863() /* ty=Tensor[(900), uint8] */
}

def @func_2864() -> (Tensor[(11, 12, 8), float64],) {
  %305 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %306 = %305.0;
  (%306,)
}

def @func_963(%var_947: Tensor[(10, 11, 5), int16], %var_948: Tensor[(10, 11, 5), int16], %var_953: Tensor[(900), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) {
  %307 = cast(%var_948, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
  %308 = shape_of(%var_947, dtype="int32") /* ty=Tensor[(3), int32] */;
  %309 = cast(%var_947, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
  %310 = dyn.reshape(%307, %308, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %311 = cast(%var_953, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %312 = reshape(%311, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %313 = @func_343(%312) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %314 = right_shift(%309, %310) /* ty=Tensor[(10, 11, 5), int16] */;
  %315 = %313.1;
  (%314, %315, %var_953)
}

def @func_5673() -> (Tensor[(900), uint8], Tensor[(84), int16]) {
  %316 = @func_4813() /* ty=Tensor[(900), uint8] */;
  %317 = @func_3895() /* ty=Tensor[(84), int16] */;
  (%316, %317)
}

def @func_7798() -> Tensor[(900), bool] {
  %318 = @func_3863() /* ty=Tensor[(900), uint8] */;
  %319 = cast(meta[relay.Constant][11] /* ty=Tensor[(900), uint8] */, dtype="bool") /* ty=Tensor[(900), bool] */;
  %320 = shape_of(%318, dtype="int32") /* ty=Tensor[(1), int32] */;
  %321 = cast(%318, dtype="bool") /* ty=Tensor[(900), bool] */;
  %322 = dyn.reshape(%319, %320, newshape=[]) /* ty=Tensor[(?), bool] */;
  logical_or(%321, %322) /* ty=Tensor[(900), bool] */
}

def @func_8746() -> (Tensor[(77, 6), float32], Tensor[(11, 12, 8), float64]) {
  %323 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %324 = %323.2;
  %325 = @func_5986() /* ty=Tensor[(11, 12, 8), float64] */;
  (%324, %325)
}

def @func_3441(%var_3428: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), bool] {
  %326 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %327 = %326.0;
  %328 = cast(%var_3428, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
  %329 = shape_of(%327, dtype="int32") /* ty=Tensor[(3), int32] */;
  %330 = cast(%327, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
  %331 = dyn.reshape(%328, %329, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  equal(%330, %331) /* ty=Tensor[(11, 12, 8), bool] */
}

def @func_5187() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) {
  %332 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %333 = cast(meta[relay.Constant][12] /* ty=Tensor[(11, 104), float32] */, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
  %334 = reshape(%333, newshape=[286, 4]) /* ty=Tensor[(286, 4), float32] */;
  %335 = @func_4700(%334) /* ty=(Tensor[(77, 6), uint64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(3, 14, 2), float32]) */;
  %336 = %335.0;
  %337 = cast(meta[relay.Constant][13] /* ty=Tensor[(77, 6), uint64] */, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %338 = shape_of(%336, dtype="int32") /* ty=Tensor[(2), int32] */;
  %339 = cast(%336, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %340 = dyn.reshape(%337, %338, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %341 = %332.0;
  %342 = power(%339, %340) /* ty=Tensor[(77, 6), float32] */;
  (%341, meta[relay.Constant][12] /* ty=Tensor[(11, 104), float32] */, %342)
}

def @func_8836(%var_8830: Tensor[(13, 3, 13), int64], %var_8831: Tensor[(13, 3, 13), int64]) -> (Tensor[(13, 3, 13), int64],) {
  %343 = cast(%var_8831, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
  %344 = shape_of(%var_8830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %345 = cast(%var_8830, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
  %346 = dyn.reshape(%343, %344, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %347 = bitwise_or(%345, %346) /* ty=Tensor[(13, 3, 13), int64] */;
  (%347,)
}

def @func_2409(%var_2381: Tensor[(900), uint8], %var_2386: Tensor[(286, 4), float32]) -> (Tensor[(55, 10), float64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(66), float32], Tensor[(900), uint8], Tensor[(648), float64], Tensor[(240), uint8], Tensor[(11, 8, 13), float32], Tensor[(286, 4), float32], Tensor[(10, 12, 2), float64], Tensor[(10, 11, 5), int16]) {
  %348 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %349 = %348.2;
  %350 = cast(%349, dtype="float64") /* ty=Tensor[(55, 10), float64] */;
  %351 = cast(meta[relay.Constant][14] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %352 = reshape(%351, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %353 = @func_1629(%352) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %354 = cast(%var_2386, dtype="float32") /* ty=Tensor[(286, 4), float32] */;
  %355 = cast(%var_2386, dtype="float32") /* ty=Tensor[(286, 4), float32] */;
  %356 = reshape(%354, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
  %357 = reshape(%355, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
  %358 = cast(meta[relay.Constant][15] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
  %359 = atan(%350) /* ty=Tensor[(55, 10), float64] */;
  %360 = cast(%359, dtype="int16") /* ty=Tensor[(55, 10), int16] */;
  %361 = cast(%var_2381, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %362 = cast(meta[relay.Constant][16] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %363 = cast(meta[relay.Constant][17] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %364 = reshape(%358, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
  %365 = reshape(%360, newshape=[550]) /* ty=Tensor[(550), int16] */;
  %366 = reshape(%361, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %367 = reshape(%362, newshape=[648]) /* ty=Tensor[(648), float64] */;
  %368 = reshape(%363, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %369 = @func_1975(%364, %365, %366, %367, %368) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(550), int16], Tensor[(900), uint8], Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(3, 2, 11), bool]) */;
  %370 = %369.5;
  %371 = cast(%370, dtype="float64") /* ty=Tensor[(10, 12, 2), float64] */;
  %372 = %353.0;
  %373 = @func_1061(%356, %357) /* ty=Tensor[(11, 8, 13), float32] */;
  %374 = cos(%371) /* ty=Tensor[(10, 12, 2), float64] */;
  %375 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
  (%359, %372, meta[relay.Constant][14] /* ty=Tensor[(160), uint16] */, meta[relay.Constant][15] /* ty=Tensor[(66), float32] */, %var_2381, meta[relay.Constant][16] /* ty=Tensor[(648), float64] */, meta[relay.Constant][17] /* ty=Tensor[(240), uint8] */, %373, %var_2386, %374, %375)
}

def @func_7561() -> (Tensor[(84), int16],) {
  %376 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %377 = %376.0;
  (%377,)
}

def @func_223(%var_147: Tensor[(3, 14, 2), int16], %var_148: Tensor[(3, 14, 2), int16], %var_206: Tensor[(3, 14, 2), int16]) -> (Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) {
  %378 = cast(%var_148, dtype="bool") /* ty=Tensor[(3, 14, 2), bool] */;
  %379 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %380 = cast(%var_147, dtype="bool") /* ty=Tensor[(3, 14, 2), bool] */;
  %381 = dyn.reshape(%378, %379, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %382 = less_equal(%380, %381) /* ty=Tensor[(3, 14, 2), bool] */;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
  %384 = tan(%383) /* ty=Tensor[(3, 14, 2), float32] */;
  %385 = cast(%384, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
  %386 = cast(%384, dtype="float64") /* ty=Tensor[(3, 14, 2), float64] */;
  %387 = exp(%386) /* ty=Tensor[(3, 14, 2), float64] */;
  %388 = cast(%387, dtype="float64") /* ty=Tensor[(3, 14, 2), float64] */;
  %389 = cast(%var_206, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
  %390 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
  %391 = cast(%var_147, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
  %392 = dyn.reshape(%389, %390, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %393 = acos(%385) /* ty=Tensor[(3, 14, 2), float32] */;
  %394 = sqrt(%388) /* ty=Tensor[(3, 14, 2), float64] */;
  %395 = divide(%391, %392) /* ty=Tensor[(3, 14, 2), float32] */;
  (%393, %394, %395)
}

def @func_4515() -> (Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) {
  %396 = @func_4208() /* ty=(Tensor[(84), int16],) */;
  %397 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 550), int16] */, dtype="int16") /* ty=Tensor[(1, 550), int16] */;
  %398 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 550), int16] */, dtype="int16") /* ty=Tensor[(1, 550), int16] */;
  %399 = cast(meta[relay.Constant][19] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %400 = reshape(%397, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %401 = reshape(%398, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %402 = reshape(%399, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %403 = @func_963(%400, %401, %402) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %404 = cast(meta[relay.Constant][18] /* ty=Tensor[(1, 550), int16] */, dtype="float32") /* ty=Tensor[(1, 550), float32] */;
  %405 = atanh(%404) /* ty=Tensor[(1, 550), float32] */;
  %406 = cast(%405, dtype="float32") /* ty=Tensor[(1, 550), float32] */;
  %407 = log2(%406) /* ty=Tensor[(1, 550), float32] */;
  %408 = cast(%407, dtype="float64") /* ty=Tensor[(1, 550), float64] */;
  %409 = %396.0;
  %410 = %403.0;
  %411 = sqrt(%408) /* ty=Tensor[(1, 550), float64] */;
  (%409, %410, meta[relay.Constant][19] /* ty=Tensor[(900), uint8] */, %411)
}

def @func_9061() -> Tensor[(11, 12, 8), float64] {
  %412 = @func_7733() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) */;
  %412.0
}

def @func_3293(%var_3280: Tensor[(11, 12, 8), float64]) -> (Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) {
  %413 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %414 = %413.0;
  %415 = cast(meta[relay.Constant][20] /* ty=Tensor[(11, 12, 8), float64] */, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
  %416 = shape_of(%414, dtype="int32") /* ty=Tensor[(3), int32] */;
  %417 = cast(%414, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
  %418 = dyn.reshape(%415, %416, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %419 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %420 = %419.0;
  %421 = cast(%var_3280, dtype="uint64") /* ty=Tensor[(11, 12, 8), uint64] */;
  %422 = shape_of(%420, dtype="int32") /* ty=Tensor[(3), int32] */;
  %423 = cast(%420, dtype="uint64") /* ty=Tensor[(11, 12, 8), uint64] */;
  %424 = dyn.reshape(%421, %422, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %425 = logical_or(%417, %418) /* ty=Tensor[(11, 12, 8), bool] */;
  %426 = right_shift(%423, %424) /* ty=Tensor[(11, 12, 8), uint64] */;
  (%425, %426)
}

def @func_5968() -> (Tensor[(84), int16], Tensor[(10, 6, 15), bool], Tensor[(90, 10), uint8]) {
  %427 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %428 = cast(meta[relay.Constant][21] /* ty=Tensor[(90, 10), uint8] */, dtype="uint8") /* ty=Tensor[(90, 10), uint8] */;
  %429 = reshape(%428, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %430 = @func_343(%429) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %431 = %427.0;
  %432 = %430.0;
  (%431, %432, meta[relay.Constant][21] /* ty=Tensor[(90, 10), uint8] */)
}

def @func_5710(%var_5702: Tensor[(11, 7, 15), int64]) -> (Tensor[(11, 7, 15), int64],) {
  %433 = cast(%var_5702, dtype="int64") /* ty=Tensor[(11, 7, 15), int64] */;
  %434 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(11, 7, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(meta[relay.Constant][22] /* ty=Tensor[(11, 7, 15), int64] */, dtype="int64") /* ty=Tensor[(11, 7, 15), int64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %437 = left_shift(%435, %436) /* ty=Tensor[(11, 7, 15), int64] */;
  (%437,)
}

def @func_8880() -> Tensor[(84), int16] {
  %438 = @func_7561() /* ty=(Tensor[(84), int16],) */;
  %438.0
}

def @func_2175() -> (Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) {
  %439 = cast(meta[relay.Constant][23] /* ty=Tensor[(11, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %440 = cast(meta[relay.Constant][24] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %441 = cast(meta[relay.Constant][24] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %442 = cast(meta[relay.Constant][24] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
  %443 = reshape(%440, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %444 = reshape(%441, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %445 = reshape(%442, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %446 = @func_223(%443, %444, %445) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
  %447 = asinh(%439) /* ty=Tensor[(11, 12, 8), float64] */;
  %448 = %446.2;
  (%447, %448, meta[relay.Constant][24] /* ty=Tensor[(84), int16] */)
}

def @func_4191() -> (Tensor[(84), int16],) {
  %449 = @func_3895() /* ty=Tensor[(84), int16] */;
  (%449,)
}

def @func_7552(%var_7508: Tensor[(3, 13, 5), int8], %var_7529: Tensor[(160), uint16]) -> (Tensor[(3, 13, 5), int8], Tensor[(84), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
  %450 = cast(%var_7508, dtype="int8") /* ty=Tensor[(3, 13, 5), int8] */;
  %451 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(3, 13, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %452 = cast(meta[relay.Constant][25] /* ty=Tensor[(3, 13, 5), int8] */, dtype="int8") /* ty=Tensor[(3, 13, 5), int8] */;
  %453 = dyn.reshape(%450, %451, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %454 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %455 = cast(%var_7529, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %456 = reshape(%455, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %457 = @func_4393(%456) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %458 = right_shift(%452, %453) /* ty=Tensor[(3, 13, 5), int8] */;
  %459 = %454.0;
  %460 = %457.1;
  (%458, %459, %460, %var_7529)
}

def @func_4360() -> Tensor[(84), int16] {
  %461 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %461.0
}

def @func_8441() -> (Tensor[(84), int16],) {
  %462 = @func_7733() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) */;
  %463 = %462.3;
  (%463,)
}

def @func_4262() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64]) {
  %464 = @func_2864() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %465 = @func_3895() /* ty=Tensor[(84), int16] */;
  %466 = %464.0;
  (%465, %466)
}

def @func_5845(%var_5795: Tensor[(240), uint8], %var_5808: Tensor[(77, 6), uint64]) -> (Tensor[(3, 14, 2), float32], Tensor[(160), uint16], Tensor[(240), uint8], Tensor[(77, 6), bool], Tensor[(1, 550), float64], Tensor[(11, 12, 8), float64], Tensor[(77, 6), int64], Tensor[(240, 1), uint8], Tensor[(84), int16]) {
  %467 = cast(meta[relay.Constant][26] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %468 = cast(%var_5795, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %469 = reshape(%467, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %470 = reshape(%468, newshape=[2, 120]) /* ty=Tensor[(2, 120), uint8] */;
  %471 = @func_3852(%469, %470) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float64], Tensor[(84), int16], Tensor[(3, 14, 2), float32], Tensor[(11, 12, 8), float64], Tensor[(11, 8, 13), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(1144), float32], Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(2, 120), uint8]) */;
  %472 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %473 = %472.3;
  %474 = cast(%var_5808, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(2), int32] */;
  %476 = cast(%473, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %478 = @func_4515() /* ty=(Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) */;
  %479 = @func_5683() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %480 = cast(%var_5808, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %481 = asinh(%480) /* ty=Tensor[(77, 6), float32] */;
  %482 = cast(%473, dtype="int64") /* ty=Tensor[(77, 6), int64] */;
  %483 = shape_of(%481, dtype="int32") /* ty=Tensor[(2), int32] */;
  %484 = cast(%481, dtype="int64") /* ty=Tensor[(77, 6), int64] */;
  %485 = dyn.reshape(%482, %483, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %486 = %479.0;
  %487 = cast(%486, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %488 = cast(meta[relay.Constant][26] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %489 = cast(%var_5795, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %490 = reshape(%487, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %491 = reshape(%488, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %492 = reshape(%489, newshape=[240, 1]) /* ty=Tensor[(240, 1), uint8] */;
  %493 = @func_2471(%490, %491, %492) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) */;
  %494 = @func_5372() /* ty=(Tensor[(84), int16],) */;
  %495 = %471.9;
  %496 = less_equal(%476, %477) /* ty=Tensor[(77, 6), bool] */;
  %497 = %478.3;
  %498 = subtract(%484, %485) /* ty=Tensor[(77, 6), int64] */;
  %499 = %493.3;
  %500 = %494.0;
  (%495, meta[relay.Constant][26] /* ty=Tensor[(160), uint16] */, %var_5795, %496, %497, %486, %498, %499, %500)
}

def @func_4632() -> (Tensor[(10, 11, 5), int16],) {
  %501 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
  (%501,)
}

def @func_7354(%var_7337: Tensor[(240), int8]) -> (Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), int8], Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool]) {
  %502 = cast(%var_7337, dtype="int8") /* ty=Tensor[(240), int8] */;
  %503 = cast(%var_7337, dtype="int8") /* ty=Tensor[(240), int8] */;
  %504 = reshape(%502, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), int8] */;
  %505 = reshape(%503, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), int8] */;
  %506 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %507 = cast(%var_7337, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %508 = cast(%var_7337, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %509 = reshape(%507, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %510 = reshape(%508, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %511 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
  %512 = @func_4465(%504, %505) /* ty=Tensor[(10, 12, 2), bool] */;
  %513 = %506.1;
  %514 = @func_723(%509, %510) /* ty=Tensor[(10, 12, 2), bool] */;
  (%511, %512, %var_7337, %513, %514)
}

def @func_1629(%var_1624: Tensor[(2, 5, 16), uint16]) -> (Tensor[(2, 5, 16), bool],) {
  %515 = cast(meta[relay.Constant][27] /* ty=Tensor[(2, 5, 16), uint16] */, dtype="bool") /* ty=Tensor[(2, 5, 16), bool] */;
  %516 = shape_of(%var_1624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %517 = cast(%var_1624, dtype="bool") /* ty=Tensor[(2, 5, 16), bool] */;
  %518 = dyn.reshape(%515, %516, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %519 = greater_equal(%517, %518) /* ty=Tensor[(2, 5, 16), bool] */;
  (%519,)
}

def @func_5752() -> (Tensor[(900), uint8],) {
  %520 = @func_3938() /* ty=Tensor[(900), uint8] */;
  (%520,)
}

def @func_2332() -> Tensor[(10, 11, 5), int16] {
  %521 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %521.1
}

def @func_7183() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  %522 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %523 = %522.0;
  %524 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %525 = shape_of(%523, dtype="int32") /* ty=Tensor[(3), int32] */;
  %526 = cast(%523, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %527 = dyn.reshape(%524, %525, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %528 = floor_mod(%526, %527) /* ty=Tensor[(11, 12, 8), float64] */;
  %529 = @func_3863() /* ty=Tensor[(900), uint8] */;
  (%528, %529)
}

def @func_5491(%var_5452: Tensor[(900), uint8], %var_5465: Tensor[(11, 104), float32]) -> (Tensor[(10, 11, 5), float32], Tensor[(900), bool], Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32]) {
  %530 = @func_3960() /* ty=(Tensor[(10, 11, 5), float32],) */;
  %531 = @func_4813() /* ty=Tensor[(900), uint8] */;
  %532 = cast(%var_5452, dtype="bool") /* ty=Tensor[(900), bool] */;
  %533 = shape_of(%531, dtype="int32") /* ty=Tensor[(1), int32] */;
  %534 = cast(%531, dtype="bool") /* ty=Tensor[(900), bool] */;
  %535 = dyn.reshape(%532, %533, newshape=[]) /* ty=Tensor[(?), bool] */;
  %536 = cast(%var_5465, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
  %537 = reshape(%536, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %538 = @func_2607(%537) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
  %539 = %530.0;
  %540 = less(%534, %535) /* ty=Tensor[(900), bool] */;
  %541 = %538.0;
  (%539, %540, %541, %var_5465)
}

def @func_8127() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  %542 = @func_7733() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) */;
  %543 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %544 = @func_6939() /* ty=(Tensor[(900), uint8],) */;
  %545 = %542.3;
  %546 = %543.0;
  %547 = %544.0;
  (%545, %546, %547)
}

def @func_4813() -> Tensor[(900), uint8] {
  %548 = @func_4515() /* ty=(Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) */;
  %548.2
}

def @func_8638() -> (Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(900), uint8]) {
  %549 = @func_8595() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), bool]) */;
  %550 = @func_5860() /* ty=Tensor[(900), uint8] */;
  %551 = cast(%550, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %552 = cast(meta[relay.Constant][29] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %553 = reshape(%551, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %554 = reshape(%552, newshape=[11, 104]) /* ty=Tensor[(11, 104), float32] */;
  %555 = @func_5491(%553, %554) /* ty=(Tensor[(10, 11, 5), float32], Tensor[(900), bool], Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32]) */;
  %556 = @func_8557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) */;
  %557 = %549.1;
  %558 = %555.2;
  %559 = %556.1;
  (%557, %550, %558, meta[relay.Constant][29] /* ty=Tensor[(1144), float32] */, %559)
}

def @func_1975(%var_1934: Tensor[(3, 2, 11), float32], %var_1948: Tensor[(550), int16], %var_1949: Tensor[(900), uint8], %var_1960: Tensor[(648), float64], %var_1964: Tensor[(240), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(550), int16], Tensor[(900), uint8], Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(3, 2, 11), bool]) {
  %560 = cast(%var_1948, dtype="int16") /* ty=Tensor[(550), int16] */;
  %561 = cast(%var_1948, dtype="int16") /* ty=Tensor[(550), int16] */;
  %562 = cast(%var_1949, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %563 = reshape(%560, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %564 = reshape(%561, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %565 = reshape(%562, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %566 = @func_963(%563, %564, %565) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %567 = cast(%var_1960, dtype="float64") /* ty=Tensor[(648), float64] */;
  %568 = reshape(%567, newshape=[9, 6, 12]) /* ty=Tensor[(9, 6, 12), float64] */;
  %569 = cast(%var_1964, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %570 = cast(%var_1964, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %571 = reshape(%569, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %572 = reshape(%570, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %573 = cast(%var_1934, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  %574 = asinh(%573) /* ty=Tensor[(3, 2, 11), float32] */;
  %575 = cast(%var_1934, dtype="float64") /* ty=Tensor[(3, 2, 11), float64] */;
  %576 = shape_of(%574, dtype="int32") /* ty=Tensor[(3), int32] */;
  %577 = cast(%574, dtype="float64") /* ty=Tensor[(3, 2, 11), float64] */;
  %578 = dyn.reshape(%575, %576, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %579 = power(%577, %578) /* ty=Tensor[(3, 2, 11), float64] */;
  %580 = cast(meta[relay.Constant][30] /* ty=Tensor[(3, 2, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
  %581 = shape_of(%579, dtype="int32") /* ty=Tensor[(3), int32] */;
  %582 = cast(%579, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
  %583 = dyn.reshape(%580, %581, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %584 = %566.0;
  %585 = @func_996(%568) /* ty=Tensor[(9, 6, 12), float64] */;
  %586 = @func_723(%571, %572) /* ty=Tensor[(10, 12, 2), bool] */;
  %587 = equal(%582, %583) /* ty=Tensor[(3, 2, 11), bool] */;
  (%584, %var_1948, %var_1949, %585, %var_1960, %586, %var_1964, %587)
}

def @func_4179() -> (Tensor[(11, 12, 8), float64],) {
  %588 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %589 = %588.0;
  (%589,)
}

def @func_7573() -> (Tensor[(900), uint8],) {
  %590 = @func_5860() /* ty=Tensor[(900), uint8] */;
  (%590,)
}

def @func_6188(%var_6183: int8, %var_6184: Tensor[(4, 10, 15), int8]) -> (Tensor[(4, 10, 15), int8],) {
  %591 = cast(%var_6183, dtype="int8") /* ty=int8 */;
  %592 = cast(%var_6184, dtype="int8") /* ty=Tensor[(4, 10, 15), int8] */;
  %593 = left_shift(%591, %592) /* ty=Tensor[(4, 10, 15), int8] */;
  (%593,)
}

def @func_7022(%var_7016: int64) -> (Tensor[(6, 1, 13), int64],) {
  %594 = cast(%var_7016, dtype="int64") /* ty=int64 */;
  %595 = cast(meta[relay.Constant][31] /* ty=Tensor[(6, 1, 13), int64] */, dtype="int64") /* ty=Tensor[(6, 1, 13), int64] */;
  %596 = bitwise_xor(%594, %595) /* ty=Tensor[(6, 1, 13), int64] */;
  (%596,)
}

def @func_4297() -> (Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) {
  %597 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 154), uint64] */, dtype="uint64") /* ty=Tensor[(1, 154), uint64] */;
  %598 = cast(meta[relay.Constant][33] /* ty=Tensor[(77, 6), uint64] */, dtype="uint64") /* ty=Tensor[(77, 6), uint64] */;
  %599 = reshape(%597, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), uint64] */;
  %600 = reshape(%598, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint64] */;
  %601 = @func_2946(%599, %600) /* ty=(Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) */;
  %602 = @func_3938() /* ty=Tensor[(900), uint8] */;
  %603 = %601.1;
  (%602, %603, meta[relay.Constant][32] /* ty=Tensor[(1, 154), uint64] */, meta[relay.Constant][33] /* ty=Tensor[(77, 6), uint64] */)
}

def @func_2434() -> (Tensor[(11, 12, 8), float64],) {
  %604 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %605 = %604.0;
  (%605,)
}

def @func_8557() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  %606 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %607 = @func_5752() /* ty=(Tensor[(900), uint8],) */;
  %608 = %606.0;
  %609 = %607.0;
  (%608, %609)
}

def @func_1780(%var_1766: Tensor[(5, 14, 3), float64]) -> (Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) {
  %610 = cast(meta[relay.Constant][34] /* ty=Tensor[(900, 1), uint8] */, dtype="uint8") /* ty=Tensor[(900, 1), uint8] */;
  %611 = reshape(%610, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %612 = @func_343(%611) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %613 = cast(meta[relay.Constant][35] /* ty=Tensor[(5, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 3), float64] */;
  %614 = log(%613) /* ty=Tensor[(5, 14, 3), float64] */;
  %615 = cast(%var_1766, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %619 = %612.0;
  %620 = greater_equal(%617, %618) /* ty=Tensor[(5, 14, 3), bool] */;
  (%619, meta[relay.Constant][34] /* ty=Tensor[(900, 1), uint8] */, %620)
}

def @func_3863() -> Tensor[(900), uint8] {
  %621 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %621.3
}

def @func_4465(%var_4452: Tensor[(10, 12, 2), int8], %var_4453: Tensor[(10, 12, 2), int8]) -> Tensor[(10, 12, 2), bool] {
  %622 = cast(%var_4453, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %623 = shape_of(%var_4452, dtype="int32") /* ty=Tensor[(3), int32] */;
  %624 = cast(%var_4452, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %625 = dyn.reshape(%622, %623, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%624, %625) /* ty=Tensor[(10, 12, 2), bool] */
}

def @func_6087() -> Tensor[(900), uint8] {
  @func_4813() /* ty=Tensor[(900), uint8] */
}

def @func_7624() -> (Tensor[(900), uint8], Tensor[(1144), uint8]) {
  %626 = @func_7501() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(11, 12, 8), float64]) */;
  %627 = %626.3;
  %628 = cast(%627, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %629 = erf(%628) /* ty=Tensor[(1144), float64] */;
  %630 = cast(meta[relay.Constant][36] /* ty=Tensor[(1144), float64] */, dtype="uint8") /* ty=Tensor[(1144), uint8] */;
  %631 = shape_of(%629, dtype="int32") /* ty=Tensor[(1), int32] */;
  %632 = cast(%629, dtype="uint8") /* ty=Tensor[(1144), uint8] */;
  %633 = dyn.reshape(%630, %631, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %634 = @func_7387() /* ty=Tensor[(900), uint8] */;
  %635 = bitwise_xor(%632, %633) /* ty=Tensor[(1144), uint8] */;
  (%634, %635)
}

def @func_723(%var_713: Tensor[(10, 12, 2), uint8], %var_714: Tensor[(10, 12, 2), uint8]) -> Tensor[(10, 12, 2), bool] {
  %636 = cast(%var_714, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %637 = shape_of(%var_713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %638 = cast(%var_713, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
  %639 = dyn.reshape(%636, %637, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  greater_equal(%638, %639) /* ty=Tensor[(10, 12, 2), bool] */
}

def @func_2471(%var_2456: Tensor[(11, 12, 8), float64], %var_2464: Tensor[(160), uint16], %var_2465: Tensor[(240, 1), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) {
  %640 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %641 = %640.0;
  %642 = cast(%var_2456, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %643 = shape_of(%641, dtype="int32") /* ty=Tensor[(3), int32] */;
  %644 = cast(%641, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %645 = dyn.reshape(%642, %643, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %646 = cast(%var_2464, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %647 = cast(%var_2465, dtype="uint8") /* ty=Tensor[(240, 1), uint8] */;
  %648 = reshape(%646, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %649 = reshape(%647, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %650 = @func_2306(%648, %649) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %651 = power(%644, %645) /* ty=Tensor[(11, 12, 8), float64] */;
  %652 = %650.1;
  (%651, %652, %var_2464, %var_2465)
}

def @func_2607(%var_2592: Tensor[(1144), float32]) -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) {
  %653 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %654 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %655 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %656 = cast(meta[relay.Constant][37] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
  %657 = reshape(%656, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
  %658 = @func_1780(%657) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
  %659 = %658.0;
  %660 = cast(%659, dtype="float64") /* ty=Tensor[(10, 6, 15), float64] */;
  %661 = atanh(%660) /* ty=Tensor[(10, 6, 15), float64] */;
  %662 = cast(%661, dtype="float32") /* ty=Tensor[(10, 6, 15), float32] */;
  %663 = cast(%659, dtype="uint8") /* ty=Tensor[(10, 6, 15), uint8] */;
  %664 = cast(%var_2592, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %665 = reshape(%663, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %666 = reshape(%664, newshape=[286, 4]) /* ty=Tensor[(286, 4), float32] */;
  %667 = @func_2409(%665, %666) /* ty=(Tensor[(55, 10), float64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(66), float32], Tensor[(900), uint8], Tensor[(648), float64], Tensor[(240), uint8], Tensor[(11, 8, 13), float32], Tensor[(286, 4), float32], Tensor[(10, 12, 2), float64], Tensor[(10, 11, 5), int16]) */;
  %668 = %653.0;
  %669 = %654.3;
  %670 = %655.1;
  %671 = log2(%662) /* ty=Tensor[(10, 6, 15), float32] */;
  %672 = %667.8;
  (%668, %669, %670, meta[relay.Constant][37] /* ty=Tensor[(210), float64] */, %671, %672, %var_2592)
}

def @func_3697(%var_3557: Tensor[(4, 13, 15), float64], %var_3593: Tensor[(4, 40), uint16], %var_3625: Tensor[(1144), float32]) -> (Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) {
  %673 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %674 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %675 = reshape(%673, newshape=[24, 10]) /* ty=Tensor[(24, 10), uint8] */;
  %676 = reshape(%674, newshape=[24, 10]) /* ty=Tensor[(24, 10), uint8] */;
  %677 = @func_3189(%675, %676) /* ty=(Tensor[(4, 40), uint8], Tensor[(1, 160), uint16], Tensor[(24, 10), int8], Tensor[(10, 11, 5), uint16]) */;
  %678 = cast(meta[relay.Constant][39] /* ty=Tensor[(154), uint64] */, dtype="uint64") /* ty=Tensor[(154), uint64] */;
  %679 = cast(meta[relay.Constant][40] /* ty=Tensor[(462), uint64] */, dtype="uint64") /* ty=Tensor[(462), uint64] */;
  %680 = cast(%var_3593, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %681 = reshape(%678, newshape=[154]) /* ty=Tensor[(154), uint64] */;
  %682 = reshape(%679, newshape=[462]) /* ty=Tensor[(462), uint64] */;
  %683 = reshape(%680, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %684 = @func_3339(%681, %682, %683) /* ty=(Tensor[(84), int16], Tensor[(14, 3, 11), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(5, 14, 3), bool], Tensor[(5, 42), float64]) */;
  %685 = cast(%var_3557, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  %686 = atan(%685) /* ty=Tensor[(4, 13, 15), float64] */;
  %687 = cast(%var_3557, dtype="uint32") /* ty=Tensor[(4, 13, 15), uint32] */;
  %688 = shape_of(%686, dtype="int32") /* ty=Tensor[(3), int32] */;
  %689 = cast(%686, dtype="uint32") /* ty=Tensor[(4, 13, 15), uint32] */;
  %690 = dyn.reshape(%687, %688, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %691 = cast(%var_3625, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %692 = cast(%var_3625, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %693 = reshape(%691, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
  %694 = reshape(%692, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
  %695 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %696 = cast(%var_3593, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %697 = cast(meta[relay.Constant][38] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %698 = reshape(%696, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %699 = reshape(%697, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %700 = @func_2306(%698, %699) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %701 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %702 = cast(%686, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  %703 = rsqrt(%702) /* ty=Tensor[(4, 13, 15), float64] */;
  %704 = cast(%var_3557, dtype="uint8") /* ty=Tensor[(4, 13, 15), uint8] */;
  %705 = shape_of(%703, dtype="int32") /* ty=Tensor[(3), int32] */;
  %706 = cast(%703, dtype="uint8") /* ty=Tensor[(4, 13, 15), uint8] */;
  %707 = dyn.reshape(%704, %705, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %708 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %709 = cast(%703, dtype="float32") /* ty=Tensor[(4, 13, 15), float32] */;
  %710 = %677.3;
  %711 = %684.3;
  %712 = bitwise_xor(%689, %690) /* ty=Tensor[(4, 13, 15), uint32] */;
  %713 = @func_1061(%693, %694) /* ty=Tensor[(11, 8, 13), float32] */;
  %714 = %695.1;
  %715 = %700.0;
  %716 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
  %717 = %701.0;
  %718 = left_shift(%706, %707) /* ty=Tensor[(4, 13, 15), uint8] */;
  %719 = %708.0;
  %720 = cos(%709) /* ty=Tensor[(4, 13, 15), float32] */;
  (%710, meta[relay.Constant][38] /* ty=Tensor[(240), uint8] */, %711, meta[relay.Constant][39] /* ty=Tensor[(154), uint64] */, meta[relay.Constant][40] /* ty=Tensor[(462), uint64] */, %var_3593, %712, %713, %var_3625, %714, %715, %716, %717, %718, %719, %720)
}

def @func_2946(%var_2923: Tensor[(14, 1, 11), uint64], %var_2924: Tensor[(14, 3, 11), uint64]) -> (Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) {
  %721 = cast(%var_2923, dtype="uint64") /* ty=Tensor[(14, 1, 11), uint64] */;
  %722 = cast(%var_2924, dtype="uint64") /* ty=Tensor[(14, 3, 11), uint64] */;
  %723 = cast(meta[relay.Constant][41] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %724 = reshape(%723, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %725 = @func_1629(%724) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %726 = cast(meta[relay.Constant][42] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %727 = reshape(%726, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %728 = @func_2607(%727) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
  %729 = logical_xor(%721, %722) /* ty=Tensor[(14, 3, 11), uint64] */;
  %730 = %725.0;
  %731 = %728.4;
  (%729, %730, meta[relay.Constant][41] /* ty=Tensor[(160), uint16] */, %731, meta[relay.Constant][42] /* ty=Tensor[(1144), float32] */)
}

def @func_4896(%var_4887: Tensor[(780), float64]) -> (Tensor[(10, 11, 5), float32], Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(1144), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(22, 52), float32]) {
  %732 = @func_3960() /* ty=(Tensor[(10, 11, 5), float32],) */;
  %733 = %732.0;
  %734 = cast(%733, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
  %735 = cast(%733, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
  %736 = cast(meta[relay.Constant][43] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %737 = reshape(%734, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %738 = reshape(%735, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %739 = reshape(%736, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %740 = @func_963(%737, %738, %739) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %741 = cast(%var_4887, dtype="float64") /* ty=Tensor[(780), float64] */;
  %742 = cast(meta[relay.Constant][44] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %743 = cast(meta[relay.Constant][45] /* ty=Tensor[(22, 52), float32] */, dtype="float32") /* ty=Tensor[(22, 52), float32] */;
  %744 = reshape(%741, newshape=[4, 13, 15]) /* ty=Tensor[(4, 13, 15), float64] */;
  %745 = reshape(%742, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %746 = reshape(%743, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %747 = @func_3697(%744, %745, %746) /* ty=(Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) */;
  %748 = %740.2;
  %749 = %747.8;
  (%733, %748, meta[relay.Constant][43] /* ty=Tensor[(900), uint8] */, %749, %var_4887, meta[relay.Constant][44] /* ty=Tensor[(160), uint16] */, meta[relay.Constant][45] /* ty=Tensor[(22, 52), float32] */)
}

def @func_8502() -> (Tensor[(77, 6), uint16],) {
  %750 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %751 = %750.3;
  %752 = cast(meta[relay.Constant][46] /* ty=Tensor[(77, 6), uint64] */, dtype="uint16") /* ty=Tensor[(77, 6), uint16] */;
  %753 = shape_of(%751, dtype="int32") /* ty=Tensor[(2), int32] */;
  %754 = cast(%751, dtype="uint16") /* ty=Tensor[(77, 6), uint16] */;
  %755 = dyn.reshape(%752, %753, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %756 = bitwise_or(%754, %755) /* ty=Tensor[(77, 6), uint16] */;
  (%756,)
}

def @func_5683() -> (Tensor[(11, 12, 8), float64],) {
  %757 = @func_2864() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %758 = %757.0;
  (%758,)
}

def @func_5986() -> Tensor[(11, 12, 8), float64] {
  %759 = @func_4951() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %759.0
}

def @func_5047(%var_5042: Tensor[(550), int16]) -> (Tensor[(900), uint8], Tensor[(900, 1), uint8], Tensor[(160), uint16], Tensor[(10, 11, 5), int16], Tensor[(550), int16]) {
  %760 = cast(meta[relay.Constant][47] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %761 = reshape(%760, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %762 = @func_2853(%761) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %763 = cast(%var_5042, dtype="int16") /* ty=Tensor[(550), int16] */;
  %764 = cast(%var_5042, dtype="int16") /* ty=Tensor[(550), int16] */;
  %765 = %762.1;
  %766 = cast(%765, dtype="uint8") /* ty=Tensor[(900, 1), uint8] */;
  %767 = reshape(%763, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %768 = reshape(%764, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %769 = reshape(%766, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %770 = @func_963(%767, %768, %769) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %771 = @func_3863() /* ty=Tensor[(900), uint8] */;
  %772 = %770.0;
  (%771, %765, meta[relay.Constant][47] /* ty=Tensor[(160), uint16] */, %772, %var_5042)
}

def @func_5577() -> (Tensor[(84), int16], Tensor[(3, 14, 2), float64]) {
  %773 = @func_5372() /* ty=(Tensor[(84), int16],) */;
  %774 = %773.0;
  %775 = cast(%774, dtype="int16") /* ty=Tensor[(84), int16] */;
  %776 = cast(%774, dtype="int16") /* ty=Tensor[(84), int16] */;
  %777 = cast(%774, dtype="int16") /* ty=Tensor[(84), int16] */;
  %778 = reshape(%775, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %779 = reshape(%776, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %780 = reshape(%777, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %781 = @func_223(%778, %779, %780) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
  %782 = %781.1;
  (%774, %782)
}

def @func_5925(%var_5923: Tensor[(240), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8]) {
  %783 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %784 = %783.0;
  %785 = cast(%784, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %786 = cast(%var_5923, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %787 = cast(%var_5923, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %788 = reshape(%786, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %789 = reshape(%787, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %790 = atan(%785) /* ty=Tensor[(11, 12, 8), float64] */;
  %791 = @func_723(%788, %789) /* ty=Tensor[(10, 12, 2), bool] */;
  (%790, %791, %var_5923)
}

def @func_4241() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64]) {
  %792 = @func_4208() /* ty=(Tensor[(84), int16],) */;
  %793 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %794 = %792.0;
  %795 = %793.0;
  (%794, %795)
}

def @func_4393(%var_4385: Tensor[(160), uint16]) -> (Tensor[(10, 11, 5), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
  %796 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %797 = cast(%var_4385, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %798 = reshape(%797, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %799 = @func_2853(%798) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %800 = %796.0;
  %801 = %799.3;
  (%800, %801, %var_4385)
}

def @func_6377(%var_6368: Tensor[(11, 104), uint64]) -> (Tensor[(900), uint8], Tensor[(2, 5, 16), int16], Tensor[(160), uint16], Tensor[(462), bool], Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(900), uint8], Tensor[(1040), float64], Tensor[(1056), float64], Tensor[(11, 104), bool], Tensor[(11, 104), bool], Tensor[(11, 104), float32]) {
  %802 = cast(meta[relay.Constant][48] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %803 = cast(meta[relay.Constant][49] /* ty=Tensor[(462), bool] */, dtype="bool") /* ty=Tensor[(462), bool] */;
  %804 = reshape(%802, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %805 = reshape(%803, newshape=[77, 6]) /* ty=Tensor[(77, 6), bool] */;
  %806 = @func_5259(%804, %805) /* ty=(Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) */;
  %807 = @func_4813() /* ty=Tensor[(900), uint8] */;
  %808 = cast(%807, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %809 = reshape(%808, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %810 = @func_343(%809) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %811 = %810.0;
  %812 = cast(%811, dtype="uint8") /* ty=Tensor[(10, 6, 15), uint8] */;
  %813 = reshape(%812, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %814 = @func_343(%813) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %815 = cast(meta[relay.Constant][50] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %816 = cast(meta[relay.Constant][50] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %817 = cast(meta[relay.Constant][51] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %818 = cast(%807, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %819 = reshape(%815, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float64] */;
  %820 = reshape(%816, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float64] */;
  %821 = reshape(%817, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %822 = reshape(%818, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %823 = @func_3528(%819, %820, %821, %822) /* ty=(Tensor[(16, 13, 5), float64], Tensor[(11, 12, 8), bool], Tensor[(1056), float64], Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float32], Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(21, 4), float32]) */;
  %824 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %825 = %824.1;
  %826 = cast(%825, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %827 = sinh(%826) /* ty=Tensor[(11, 104), float64] */;
  %828 = cast(%827, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %829 = sin(%828) /* ty=Tensor[(11, 104), float64] */;
  %830 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %831 = %830.1;
  %832 = cast(%831, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %833 = cos(%832) /* ty=Tensor[(11, 104), float64] */;
  %834 = cast(%831, dtype="int32") /* ty=Tensor[(11, 104), int32] */;
  %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(2), int32] */;
  %836 = cast(%833, dtype="int32") /* ty=Tensor[(11, 104), int32] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %838 = minimum(%836, %837) /* ty=Tensor[(11, 104), int32] */;
  %839 = cast(%838, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %840 = shape_of(%829, dtype="int32") /* ty=Tensor[(2), int32] */;
  %841 = cast(%829, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %842 = dyn.reshape(%839, %840, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %843 = cast(%833, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
  %844 = log2(%843) /* ty=Tensor[(11, 104), float32] */;
  %845 = cast(%844, dtype="uint64") /* ty=Tensor[(11, 104), uint64] */;
  %846 = shape_of(%827, dtype="int32") /* ty=Tensor[(2), int32] */;
  %847 = cast(%827, dtype="uint64") /* ty=Tensor[(11, 104), uint64] */;
  %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %849 = left_shift(%847, %848) /* ty=Tensor[(11, 104), uint64] */;
  %850 = cast(%var_6368, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %851 = shape_of(%849, dtype="int32") /* ty=Tensor[(2), int32] */;
  %852 = cast(%849, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %853 = dyn.reshape(%850, %851, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %854 = cast(%838, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
  %855 = %806.0;
  %856 = %814.1;
  %857 = %823.5;
  %858 = less_equal(%841, %842) /* ty=Tensor[(11, 104), bool] */;
  %859 = equal(%852, %853) /* ty=Tensor[(11, 104), bool] */;
  %860 = rsqrt(%854) /* ty=Tensor[(11, 104), float32] */;
  (%807, %855, meta[relay.Constant][48] /* ty=Tensor[(160), uint16] */, meta[relay.Constant][49] /* ty=Tensor[(462), bool] */, %811, %856, %857, meta[relay.Constant][50] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][51] /* ty=Tensor[(1056), float64] */, %858, %859, %860)
}

def @func_6895(%var_6812: Tensor[(240), uint8], %var_6813: Tensor[(462), uint64], %var_6817: Tensor[(16, 10), uint16]) -> (Tensor[(84), int16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(77, 6), int8], Tensor[(16, 10), uint16], Tensor[(11, 12, 8), float64]) {
  %861 = cast(%var_6812, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %862 = cast(%var_6813, dtype="uint64") /* ty=Tensor[(462), uint64] */;
  %863 = reshape(%861, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %864 = reshape(%862, newshape=[77, 6]) /* ty=Tensor[(77, 6), uint64] */;
  %865 = @func_5845(%863, %864) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(160), uint16], Tensor[(240), uint8], Tensor[(77, 6), bool], Tensor[(1, 550), float64], Tensor[(11, 12, 8), float64], Tensor[(77, 6), int64], Tensor[(240, 1), uint8], Tensor[(84), int16]) */;
  %866 = cast(%var_6817, dtype="uint16") /* ty=Tensor[(16, 10), uint16] */;
  %867 = cast(%var_6813, dtype="bool") /* ty=Tensor[(462), bool] */;
  %868 = reshape(%866, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %869 = reshape(%867, newshape=[77, 6]) /* ty=Tensor[(77, 6), bool] */;
  %870 = @func_5259(%868, %869) /* ty=(Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) */;
  %871 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %872 = %871.0;
  %873 = cast(%872, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %874 = %865.8;
  %875 = %870.1;
  %876 = log2(%873) /* ty=Tensor[(11, 12, 8), float64] */;
  (%874, %var_6812, %var_6813, %875, %var_6817, %876)
}

def @func_5372() -> (Tensor[(84), int16],) {
  %877 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %878 = %877.0;
  (%878,)
}

def @func_4700(%var_4686: Tensor[(286, 4), float32]) -> (Tensor[(77, 6), uint64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(3, 14, 2), float32]) {
  %879 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %880 = cast(%var_4686, dtype="float32") /* ty=Tensor[(286, 4), float32] */;
  %881 = reshape(%880, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %882 = @func_2607(%881) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
  %883 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %884 = %879.3;
  %885 = %882.4;
  %886 = %883.1;
  (%884, %885, %var_4686, %886)
}

def @func_3189(%var_3127: Tensor[(24, 10), uint8], %var_3154: Tensor[(24, 10), uint8]) -> (Tensor[(4, 40), uint8], Tensor[(1, 160), uint16], Tensor[(24, 10), int8], Tensor[(10, 11, 5), uint16]) {
  %887 = cast(meta[relay.Constant][52] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
  %888 = cast(%var_3127, dtype="uint8") /* ty=Tensor[(24, 10), uint8] */;
  %889 = reshape(%887, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %890 = reshape(%888, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %891 = @func_2306(%889, %890) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %892 = cast(%var_3154, dtype="int8") /* ty=Tensor[(24, 10), int8] */;
  %893 = shape_of(%var_3127, dtype="int32") /* ty=Tensor[(2), int32] */;
  %894 = cast(%var_3127, dtype="int8") /* ty=Tensor[(24, 10), int8] */;
  %895 = dyn.reshape(%892, %893, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %896 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %897 = %896.0;
  %898 = cast(%897, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
  %899 = sigmoid(%898) /* ty=Tensor[(10, 11, 5), float64] */;
  %900 = cast(%897, dtype="uint16") /* ty=Tensor[(10, 11, 5), uint16] */;
  %901 = shape_of(%899, dtype="int32") /* ty=Tensor[(3), int32] */;
  %902 = cast(%899, dtype="uint16") /* ty=Tensor[(10, 11, 5), uint16] */;
  %903 = dyn.reshape(%900, %901, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %904 = %891.3;
  %905 = logical_xor(%894, %895) /* ty=Tensor[(24, 10), int8] */;
  %906 = multiply(%902, %903) /* ty=Tensor[(10, 11, 5), uint16] */;
  (%904, meta[relay.Constant][52] /* ty=Tensor[(1, 160), uint16] */, %905, %906)
}

def @func_2853(%var_2840: Tensor[(160), uint16]) -> (Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
  %907 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %908 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %909 = reshape(%908, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
  %910 = @func_1780(%909) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
  %911 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 210), float64] */, dtype="float32") /* ty=Tensor[(1, 210), float32] */;
  %912 = cast(%var_2840, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %913 = reshape(%912, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %914 = @func_1629(%913) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %915 = %907.0;
  %916 = %910.1;
  %917 = atan(%911) /* ty=Tensor[(1, 210), float32] */;
  %918 = %914.0;
  (%915, %916, %917, %918, %var_2840)
}

def @func_7733() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) {
  %919 = @func_4951() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %920 = %919.0;
  %921 = cast(%920, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %922 = cast(%920, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %923 = cast(%920, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %924 = cosh(%923) /* ty=Tensor[(11, 12, 8), float64] */;
  %925 = cast(%924, dtype="float32") /* ty=Tensor[(11, 12, 8), float32] */;
  %926 = @func_7561() /* ty=(Tensor[(84), int16],) */;
  %927 = log10(%921) /* ty=Tensor[(11, 12, 8), float64] */;
  %928 = sigmoid(%922) /* ty=Tensor[(11, 12, 8), float64] */;
  %929 = sin(%925) /* ty=Tensor[(11, 12, 8), float32] */;
  %930 = %926.0;
  (%927, %928, %929, %930)
}

def @func_7755() -> Tensor[(900), uint8] {
  @func_7387() /* ty=Tensor[(900), uint8] */
}

def @func_4998(%var_4978: Tensor[(55, 10), int16], %var_4984: Tensor[(160), uint16]) -> (Tensor[(55, 10), uint8], Tensor[(240), uint8], Tensor[(160), uint16], Tensor[(240), uint8]) {
  %931 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %932 = %931.2;
  %933 = cast(%var_4978, dtype="uint8") /* ty=Tensor[(55, 10), uint8] */;
  %934 = shape_of(%932, dtype="int32") /* ty=Tensor[(2), int32] */;
  %935 = cast(%932, dtype="uint8") /* ty=Tensor[(55, 10), uint8] */;
  %936 = dyn.reshape(%933, %934, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %937 = cast(%var_4984, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %938 = cast(meta[relay.Constant][54] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %939 = reshape(%937, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %940 = reshape(%938, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %941 = @func_2306(%939, %940) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %942 = bitwise_and(%935, %936) /* ty=Tensor[(55, 10), uint8] */;
  %943 = %941.2;
  (%942, %943, %var_4984, meta[relay.Constant][54] /* ty=Tensor[(240), uint8] */)
}

def @func_6636() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) {
  %944 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %945 = @func_4241() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %946 = %944.0;
  %947 = %945.1;
  (%946, %947)
}

def @func_6557() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) {
  %948 = @func_5557() /* ty=(Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) */;
  %949 = @func_5287() /* ty=Tensor[(11, 12, 8), float64] */;
  %950 = %948.1;
  (%949, %950)
}

def @func_8595() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), bool]) {
  %951 = @func_5986() /* ty=Tensor[(11, 12, 8), float64] */;
  %952 = cast(%951, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %953 = reshape(%952, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %954 = @func_3293(%953) /* ty=(Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) */;
  %955 = @func_6087() /* ty=Tensor[(900), uint8] */;
  %956 = %954.0;
  (%951, %955, %956)
}

def @func_2258() -> (Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) {
  %957 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %958 = cast(meta[relay.Constant][55] /* ty=Tensor[(55, 10), int16] */, dtype="int16") /* ty=Tensor[(55, 10), int16] */;
  %959 = cast(meta[relay.Constant][55] /* ty=Tensor[(55, 10), int16] */, dtype="int16") /* ty=Tensor[(55, 10), int16] */;
  %960 = cast(meta[relay.Constant][56] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %961 = reshape(%958, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %962 = reshape(%959, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %963 = reshape(%960, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %964 = @func_963(%961, %962, %963) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %965 = %957.1;
  %966 = %964.0;
  (%965, %966, meta[relay.Constant][55] /* ty=Tensor[(55, 10), int16] */, meta[relay.Constant][56] /* ty=Tensor[(900), uint8] */)
}

def @func_1061(%var_1052: Tensor[(11, 8, 13), float32], %var_1053: Tensor[(11, 8, 13), float32]) -> Tensor[(11, 8, 13), float32] {
  %967 = cast(%var_1053, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
  %968 = shape_of(%var_1052, dtype="int32") /* ty=Tensor[(3), int32] */;
  %969 = cast(%var_1052, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
  %970 = dyn.reshape(%967, %968, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  floor_divide(%969, %970) /* ty=Tensor[(11, 8, 13), float32] */
}

def @func_3339(%var_3306: Tensor[(154), uint64], %var_3307: Tensor[(462), uint64], %var_3323: Tensor[(160), uint16]) -> (Tensor[(84), int16], Tensor[(14, 3, 11), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(5, 14, 3), bool], Tensor[(5, 42), float64]) {
  %971 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %972 = cast(%var_3306, dtype="uint64") /* ty=Tensor[(154), uint64] */;
  %973 = cast(%var_3307, dtype="uint64") /* ty=Tensor[(462), uint64] */;
  %974 = reshape(%972, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), uint64] */;
  %975 = reshape(%973, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint64] */;
  %976 = @func_2946(%974, %975) /* ty=(Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) */;
  %977 = cast(%var_3323, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %978 = reshape(%977, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %979 = @func_1629(%978) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %980 = cast(meta[relay.Constant][57] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
  %981 = reshape(%980, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
  %982 = @func_1780(%981) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
  %983 = %971.2;
  %984 = %976.0;
  %985 = %979.0;
  %986 = %982.2;
  (%983, %984, %var_3306, %var_3307, %985, %var_3323, %986, meta[relay.Constant][57] /* ty=Tensor[(5, 42), float64] */)
}

def @func_6765(%var_6676: Tensor[(2, 12, 12), float32]) -> (Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(2, 12, 12), float32]) {
  %987 = cast(meta[relay.Constant][58] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
  %988 = reshape(%987, newshape=[9, 6, 12]) /* ty=Tensor[(9, 6, 12), float64] */;
  %989 = cast(%var_6676, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
  %990 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(2, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %991 = cast(meta[relay.Constant][59] /* ty=Tensor[(2, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
  %992 = dyn.reshape(%989, %990, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %993 = floor_divide(%991, %992) /* ty=Tensor[(2, 12, 12), float32] */;
  %994 = cast(%993, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
  %995 = shape_of(meta[relay.Constant][59] /* ty=Tensor[(2, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %996 = cast(meta[relay.Constant][59] /* ty=Tensor[(2, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
  %997 = dyn.reshape(%994, %995, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %998 = @func_996(%988) /* ty=Tensor[(9, 6, 12), float64] */;
  %999 = divide(%996, %997) /* ty=Tensor[(2, 12, 12), float32] */;
  (%998, meta[relay.Constant][58] /* ty=Tensor[(648), float64] */, %999)
}

def @func_7081() -> Tensor[(84), int16] {
  @func_4585() /* ty=Tensor[(84), int16] */
}

def @func_8778() -> (Tensor[(900), uint8],) {
  %1000 = @func_3938() /* ty=Tensor[(900), uint8] */;
  (%1000,)
}

def @func_6111(%var_6096: Tensor[(6, 11, 8), float32], %var_6108: Tensor[(210), float64]) -> (Tensor[(6, 11, 8), float32], Tensor[(900, 1), uint8], Tensor[(210), float64]) {
  %1001 = cast(%var_6096, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
  %1002 = shape_of(meta[relay.Constant][60] /* ty=Tensor[(6, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1003 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
  %1004 = dyn.reshape(%1001, %1002, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1005 = cast(%var_6108, dtype="float64") /* ty=Tensor[(210), float64] */;
  %1006 = reshape(%1005, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
  %1007 = @func_1780(%1006) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
  %1008 = divide(%1003, %1004) /* ty=Tensor[(6, 11, 8), float32] */;
  %1009 = %1007.1;
  (%1008, %1009, %var_6108)
}

def @func_4951() -> (Tensor[(11, 12, 8), float64],) {
  %1010 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %1011 = %1010.0;
  (%1011,)
}

def @func_6039() -> (Tensor[(10, 11, 5), int16],) {
  %1012 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %1013 = %1012.0;
  (%1013,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6114(%var_6112: Tensor[(6, 11, 8), float32], %var_6113: Tensor[(210), float64]) -> (Tensor[(6, 11, 8), float32], Tensor[(900, 1), uint8], Tensor[(210), float64]) {
  %9 = fn (%var_6096: Tensor[(6, 11, 8), float32], %var_6108: Tensor[(210), float64]) -> (Tensor[(6, 11, 8), float32], Tensor[(900, 1), uint8], Tensor[(210), float64]) {
    %0 = cast(%var_6096, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
    %1 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(6, 11, 8), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %2 = cast(meta[relay.Constant][0] /* ty=Tensor[(6, 11, 8), float32] */, dtype="float32") /* ty=Tensor[(6, 11, 8), float32] */;
    %3 = dyn.reshape(%0, %1, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %4 = cast(%var_6108, dtype="float64") /* ty=Tensor[(210), float64] */;
    %5 = reshape(%4, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
    %6 = @func_1780(%5) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
    %7 = divide(%2, %3) /* ty=Tensor[(6, 11, 8), float32] */;
    %8 = %6.1;
    (%7, %8, %var_6108)
  };
  %9(%var_6112, %var_6113) /* ty=(Tensor[(6, 11, 8), float32], Tensor[(900, 1), uint8], Tensor[(210), float64]) */
}

def @func_6767(%var_6766: Tensor[(2, 12, 12), float32]) -> (Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(2, 12, 12), float32]) {
  %23 = fn (%var_6676: Tensor[(2, 12, 12), float32]) -> (Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(2, 12, 12), float32]) {
    %10 = cast(meta[relay.Constant][1] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
    %11 = reshape(%10, newshape=[9, 6, 12]) /* ty=Tensor[(9, 6, 12), float64] */;
    %12 = cast(%var_6676, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
    %13 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(2, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %14 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %16 = floor_divide(%14, %15) /* ty=Tensor[(2, 12, 12), float32] */;
    %17 = cast(%16, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
    %18 = shape_of(meta[relay.Constant][2] /* ty=Tensor[(2, 12, 12), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %19 = cast(meta[relay.Constant][2] /* ty=Tensor[(2, 12, 12), float32] */, dtype="float32") /* ty=Tensor[(2, 12, 12), float32] */;
    %20 = dyn.reshape(%17, %18, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %21 = @func_996(%11) /* ty=Tensor[(9, 6, 12), float64] */;
    %22 = divide(%19, %20) /* ty=Tensor[(2, 12, 12), float32] */;
    (%21, meta[relay.Constant][1] /* ty=Tensor[(648), float64] */, %22)
  };
  %23(%var_6766) /* ty=(Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(2, 12, 12), float32]) */
}

def @func_7275() -> (Tensor[(84), int16], Tensor[(10, 11, 5), int16]) {
  @func_7273() /* ty=(Tensor[(84), int16], Tensor[(10, 11, 5), int16]) */
}

def @func_5674() -> (Tensor[(900), uint8], Tensor[(84), int16]) {
  %26 = fn () -> (Tensor[(900), uint8], Tensor[(84), int16]) {
    %24 = @func_4813() /* ty=Tensor[(900), uint8] */;
    %25 = @func_3895() /* ty=Tensor[(84), int16] */;
    (%24, %25)
  };
  %26() /* ty=(Tensor[(900), uint8], Tensor[(84), int16]) */
}

def @func_3702(%var_3699: Tensor[(4, 13, 15), float64], %var_3700: Tensor[(4, 40), uint16], %var_3701: Tensor[(1144), float32]) -> (Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) {
  @func_3697(%var_3699, %var_3700, %var_3701) /* ty=(Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) */
}

def @func_7503() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(11, 12, 8), float64]) {
  @func_7501() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(11, 12, 8), float64]) */
}

def @func_4952() -> (Tensor[(11, 12, 8), float64],) {
  %29 = fn () -> (Tensor[(11, 12, 8), float64],) {
    %27 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %28 = %27.0;
    (%28,)
  };
  %29() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_8399(%var_8397: Tensor[(240), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 6, 15), bool], Tensor[(900), uint8], Tensor[(240), uint8], Tensor[(4, 40), uint16], Tensor[(240), uint8]) {
  @func_8396(%var_8397) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(10, 6, 15), bool], Tensor[(900), uint8], Tensor[(240), uint8], Tensor[(4, 40), uint16], Tensor[(240), uint8]) */
}

def @func_8433(%var_8416: Tensor[(550), int16], %var_8417: Tensor[(2, 80), uint16]) -> (Tensor[(84), int16], Tensor[(160), uint16], Tensor[(550), int16], Tensor[(2, 80), uint16]) {
  %30 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %31 = cast(%var_8416, dtype="int16") /* ty=Tensor[(550), int16] */;
  %32 = cast(%var_8417, dtype="uint16") /* ty=Tensor[(2, 80), uint16] */;
  %33 = reshape(%31, newshape=[55, 10]) /* ty=Tensor[(55, 10), int16] */;
  %34 = reshape(%32, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %35 = @func_4998(%33, %34) /* ty=(Tensor[(55, 10), uint8], Tensor[(240), uint8], Tensor[(160), uint16], Tensor[(240), uint8]) */;
  %36 = %30.0;
  %37 = %35.2;
  (%36, %37, %var_8416, %var_8417)
}

def @func_3962() -> (Tensor[(10, 11, 5), float32],) {
  @func_3960() /* ty=(Tensor[(10, 11, 5), float32],) */
}

def @func_2176() -> (Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) {
  %48 = fn () -> (Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) {
    %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(11, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %39 = cast(meta[relay.Constant][4] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %40 = cast(meta[relay.Constant][4] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %41 = cast(meta[relay.Constant][4] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %42 = reshape(%39, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %43 = reshape(%40, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %44 = reshape(%41, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %45 = @func_223(%42, %43, %44) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
    %46 = asinh(%38) /* ty=Tensor[(11, 12, 8), float64] */;
    %47 = %45.2;
    (%46, %47, meta[relay.Constant][4] /* ty=Tensor[(84), int16] */)
  };
  %48() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */
}

def @func_5494(%var_5492: Tensor[(900), uint8], %var_5493: Tensor[(11, 104), float32]) -> (Tensor[(10, 11, 5), float32], Tensor[(900), bool], Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32]) {
  %61 = fn (%var_5452: Tensor[(900), uint8], %var_5465: Tensor[(11, 104), float32]) -> (Tensor[(10, 11, 5), float32], Tensor[(900), bool], Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32]) {
    %49 = @func_3960() /* ty=(Tensor[(10, 11, 5), float32],) */;
    %50 = @func_4813() /* ty=Tensor[(900), uint8] */;
    %51 = cast(%var_5452, dtype="bool") /* ty=Tensor[(900), bool] */;
    %52 = shape_of(%50, dtype="int32") /* ty=Tensor[(1), int32] */;
    %53 = cast(%50, dtype="bool") /* ty=Tensor[(900), bool] */;
    %54 = dyn.reshape(%51, %52, newshape=[]) /* ty=Tensor[(?), bool] */;
    %55 = cast(%var_5465, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
    %56 = reshape(%55, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
    %57 = @func_2607(%56) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
    %58 = %49.0;
    %59 = less(%53, %54) /* ty=Tensor[(900), bool] */;
    %60 = %57.0;
    (%58, %59, %60, %var_5465)
  };
  %61(%var_5492, %var_5493) /* ty=(Tensor[(10, 11, 5), float32], Tensor[(900), bool], Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32]) */
}

def @func_5577() -> (Tensor[(84), int16], Tensor[(3, 14, 2), float64]) {
  %62 = @func_5372() /* ty=(Tensor[(84), int16],) */;
  %63 = %62.0;
  %64 = cast(%63, dtype="int16") /* ty=Tensor[(84), int16] */;
  %65 = cast(%63, dtype="int16") /* ty=Tensor[(84), int16] */;
  %66 = cast(%63, dtype="int16") /* ty=Tensor[(84), int16] */;
  %67 = reshape(%64, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %68 = reshape(%65, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %69 = reshape(%66, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
  %70 = @func_223(%67, %68, %69) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
  %71 = %70.1;
  (%63, %71)
}

def @func_3697(%var_3557: Tensor[(4, 13, 15), float64], %var_3593: Tensor[(4, 40), uint16], %var_3625: Tensor[(1144), float32]) -> (Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) {
  %72 = cast(meta[relay.Constant][5] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %73 = cast(meta[relay.Constant][5] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %74 = reshape(%72, newshape=[24, 10]) /* ty=Tensor[(24, 10), uint8] */;
  %75 = reshape(%73, newshape=[24, 10]) /* ty=Tensor[(24, 10), uint8] */;
  %76 = @func_3189(%74, %75) /* ty=(Tensor[(4, 40), uint8], Tensor[(1, 160), uint16], Tensor[(24, 10), int8], Tensor[(10, 11, 5), uint16]) */;
  %77 = cast(meta[relay.Constant][6] /* ty=Tensor[(154), uint64] */, dtype="uint64") /* ty=Tensor[(154), uint64] */;
  %78 = cast(meta[relay.Constant][7] /* ty=Tensor[(462), uint64] */, dtype="uint64") /* ty=Tensor[(462), uint64] */;
  %79 = cast(%var_3593, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %80 = reshape(%77, newshape=[154]) /* ty=Tensor[(154), uint64] */;
  %81 = reshape(%78, newshape=[462]) /* ty=Tensor[(462), uint64] */;
  %82 = reshape(%79, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %83 = @func_3339(%80, %81, %82) /* ty=(Tensor[(84), int16], Tensor[(14, 3, 11), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(5, 14, 3), bool], Tensor[(5, 42), float64]) */;
  %84 = cast(%var_3557, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  %85 = atan(%84) /* ty=Tensor[(4, 13, 15), float64] */;
  %86 = cast(%var_3557, dtype="uint32") /* ty=Tensor[(4, 13, 15), uint32] */;
  %87 = shape_of(%85, dtype="int32") /* ty=Tensor[(3), int32] */;
  %88 = cast(%85, dtype="uint32") /* ty=Tensor[(4, 13, 15), uint32] */;
  %89 = dyn.reshape(%86, %87, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %90 = cast(%var_3625, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %91 = cast(%var_3625, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %92 = reshape(%90, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
  %93 = reshape(%91, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
  %94 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %95 = cast(%var_3593, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %96 = cast(meta[relay.Constant][5] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %97 = reshape(%95, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %98 = reshape(%96, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %99 = @func_2306(%97, %98) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %100 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %101 = cast(%85, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  %102 = rsqrt(%101) /* ty=Tensor[(4, 13, 15), float64] */;
  %103 = cast(%var_3557, dtype="uint8") /* ty=Tensor[(4, 13, 15), uint8] */;
  %104 = shape_of(%102, dtype="int32") /* ty=Tensor[(3), int32] */;
  %105 = cast(%102, dtype="uint8") /* ty=Tensor[(4, 13, 15), uint8] */;
  %106 = dyn.reshape(%103, %104, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %107 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %108 = cast(%102, dtype="float32") /* ty=Tensor[(4, 13, 15), float32] */;
  %109 = %76.3;
  %110 = %83.3;
  %111 = bitwise_xor(%88, %89) /* ty=Tensor[(4, 13, 15), uint32] */;
  %112 = @func_1061(%92, %93) /* ty=Tensor[(11, 8, 13), float32] */;
  %113 = %94.1;
  %114 = %99.0;
  %115 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
  %116 = %100.0;
  %117 = left_shift(%105, %106) /* ty=Tensor[(4, 13, 15), uint8] */;
  %118 = %107.0;
  %119 = cos(%108) /* ty=Tensor[(4, 13, 15), float32] */;
  (%109, meta[relay.Constant][5] /* ty=Tensor[(240), uint8] */, %110, meta[relay.Constant][6] /* ty=Tensor[(154), uint64] */, meta[relay.Constant][7] /* ty=Tensor[(462), uint64] */, %var_3593, %111, %112, %var_3625, %113, %114, %115, %116, %117, %118, %119)
}

def @func_8881() -> Tensor[(84), int16] {
  %121 = fn () -> Tensor[(84), int16] {
    %120 = @func_7561() /* ty=(Tensor[(84), int16],) */;
    %120.0
  };
  %121() /* ty=Tensor[(84), int16] */
}

def @func_8595() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), bool]) {
  %122 = @func_5986() /* ty=Tensor[(11, 12, 8), float64] */;
  %123 = cast(%122, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %124 = reshape(%123, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %125 = @func_3293(%124) /* ty=(Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) */;
  %126 = @func_6087() /* ty=Tensor[(900), uint8] */;
  %127 = %125.0;
  (%122, %126, %127)
}

def @func_2412(%var_2410: Tensor[(900), uint8], %var_2411: Tensor[(286, 4), float32]) -> (Tensor[(55, 10), float64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(66), float32], Tensor[(900), uint8], Tensor[(648), float64], Tensor[(240), uint8], Tensor[(11, 8, 13), float32], Tensor[(286, 4), float32], Tensor[(10, 12, 2), float64], Tensor[(10, 11, 5), int16]) {
  %156 = fn (%var_2381: Tensor[(900), uint8], %var_2386: Tensor[(286, 4), float32]) -> (Tensor[(55, 10), float64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(66), float32], Tensor[(900), uint8], Tensor[(648), float64], Tensor[(240), uint8], Tensor[(11, 8, 13), float32], Tensor[(286, 4), float32], Tensor[(10, 12, 2), float64], Tensor[(10, 11, 5), int16]) {
    %128 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
    %129 = %128.2;
    %130 = cast(%129, dtype="float64") /* ty=Tensor[(55, 10), float64] */;
    %131 = cast(meta[relay.Constant][8] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %132 = reshape(%131, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
    %133 = @func_1629(%132) /* ty=(Tensor[(2, 5, 16), bool],) */;
    %134 = cast(%var_2386, dtype="float32") /* ty=Tensor[(286, 4), float32] */;
    %135 = cast(%var_2386, dtype="float32") /* ty=Tensor[(286, 4), float32] */;
    %136 = reshape(%134, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
    %137 = reshape(%135, newshape=[11, 8, 13]) /* ty=Tensor[(11, 8, 13), float32] */;
    %138 = cast(meta[relay.Constant][9] /* ty=Tensor[(66), float32] */, dtype="float32") /* ty=Tensor[(66), float32] */;
    %139 = atan(%130) /* ty=Tensor[(55, 10), float64] */;
    %140 = cast(%139, dtype="int16") /* ty=Tensor[(55, 10), int16] */;
    %141 = cast(%var_2381, dtype="uint8") /* ty=Tensor[(900), uint8] */;
    %142 = cast(meta[relay.Constant][10] /* ty=Tensor[(648), float64] */, dtype="float64") /* ty=Tensor[(648), float64] */;
    %143 = cast(meta[relay.Constant][11] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %144 = reshape(%138, newshape=[3, 2, 11]) /* ty=Tensor[(3, 2, 11), float32] */;
    %145 = reshape(%140, newshape=[550]) /* ty=Tensor[(550), int16] */;
    %146 = reshape(%141, newshape=[900]) /* ty=Tensor[(900), uint8] */;
    %147 = reshape(%142, newshape=[648]) /* ty=Tensor[(648), float64] */;
    %148 = reshape(%143, newshape=[240]) /* ty=Tensor[(240), uint8] */;
    %149 = @func_1975(%144, %145, %146, %147, %148) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(550), int16], Tensor[(900), uint8], Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(3, 2, 11), bool]) */;
    %150 = %149.5;
    %151 = cast(%150, dtype="float64") /* ty=Tensor[(10, 12, 2), float64] */;
    %152 = %133.0;
    %153 = @func_1061(%136, %137) /* ty=Tensor[(11, 8, 13), float32] */;
    %154 = cos(%151) /* ty=Tensor[(10, 12, 2), float64] */;
    %155 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
    (%139, %152, meta[relay.Constant][8] /* ty=Tensor[(160), uint16] */, meta[relay.Constant][9] /* ty=Tensor[(66), float32] */, %var_2381, meta[relay.Constant][10] /* ty=Tensor[(648), float64] */, meta[relay.Constant][11] /* ty=Tensor[(240), uint8] */, %153, %var_2386, %154, %155)
  };
  %156(%var_2410, %var_2411) /* ty=(Tensor[(55, 10), float64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(66), float32], Tensor[(900), uint8], Tensor[(648), float64], Tensor[(240), uint8], Tensor[(11, 8, 13), float32], Tensor[(286, 4), float32], Tensor[(10, 12, 2), float64], Tensor[(10, 11, 5), int16]) */
}

def @func_2609(%var_2608: Tensor[(1144), float32]) -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) {
  %177 = fn (%var_2592: Tensor[(1144), float32]) -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) {
    %157 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
    %158 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
    %159 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
    %160 = cast(meta[relay.Constant][12] /* ty=Tensor[(210), float64] */, dtype="float64") /* ty=Tensor[(210), float64] */;
    %161 = reshape(%160, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
    %162 = @func_1780(%161) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
    %163 = %162.0;
    %164 = cast(%163, dtype="float64") /* ty=Tensor[(10, 6, 15), float64] */;
    %165 = atanh(%164) /* ty=Tensor[(10, 6, 15), float64] */;
    %166 = cast(%165, dtype="float32") /* ty=Tensor[(10, 6, 15), float32] */;
    %167 = cast(%163, dtype="uint8") /* ty=Tensor[(10, 6, 15), uint8] */;
    %168 = cast(%var_2592, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %169 = reshape(%167, newshape=[900]) /* ty=Tensor[(900), uint8] */;
    %170 = reshape(%168, newshape=[286, 4]) /* ty=Tensor[(286, 4), float32] */;
    %171 = @func_2409(%169, %170) /* ty=(Tensor[(55, 10), float64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(66), float32], Tensor[(900), uint8], Tensor[(648), float64], Tensor[(240), uint8], Tensor[(11, 8, 13), float32], Tensor[(286, 4), float32], Tensor[(10, 12, 2), float64], Tensor[(10, 11, 5), int16]) */;
    %172 = %157.0;
    %173 = %158.3;
    %174 = %159.1;
    %175 = log2(%166) /* ty=Tensor[(10, 6, 15), float32] */;
    %176 = %171.8;
    (%172, %173, %174, meta[relay.Constant][12] /* ty=Tensor[(210), float64] */, %175, %176, %var_2592)
  };
  %177(%var_2608) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */
}

def @func_1783(%var_1781: Tensor[(5, 14, 3), float64]) -> (Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) {
  @func_1780(%var_1781) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */
}

def @func_2471(%var_2456: Tensor[(11, 12, 8), float64], %var_2464: Tensor[(160), uint16], %var_2465: Tensor[(240, 1), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) {
  %178 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %179 = %178.0;
  %180 = cast(%var_2456, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %181 = shape_of(%179, dtype="int32") /* ty=Tensor[(3), int32] */;
  %182 = cast(%179, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %183 = dyn.reshape(%180, %181, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %184 = cast(%var_2464, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %185 = cast(%var_2465, dtype="uint8") /* ty=Tensor[(240, 1), uint8] */;
  %186 = reshape(%184, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %187 = reshape(%185, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %188 = @func_2306(%186, %187) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %189 = power(%182, %183) /* ty=Tensor[(11, 12, 8), float64] */;
  %190 = %188.1;
  (%189, %190, %var_2464, %var_2465)
}

def @func_6638() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) {
  @func_6636() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */
}

def @func_4360() -> Tensor[(84), int16] {
  %191 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %191.0
}

def @func_8441() -> (Tensor[(84), int16],) {
  %192 = @func_7733() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) */;
  %193 = %192.3;
  (%193,)
}

def @func_5684() -> (Tensor[(11, 12, 8), float64],) {
  %196 = fn () -> (Tensor[(11, 12, 8), float64],) {
    %194 = @func_2864() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %195 = %194.0;
    (%195,)
  };
  %196() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_7501() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(11, 12, 8), float64]) {
  %197 = @func_5557() /* ty=(Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) */;
  %198 = @func_5752() /* ty=(Tensor[(900), uint8],) */;
  %199 = cast(meta[relay.Constant][13] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %200 = reshape(%199, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %201 = @func_6515(%200) /* ty=(Tensor[(84), int16], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(1, 160), uint16], Tensor[(11, 12, 8), float64], Tensor[(1144), float32]) */;
  %202 = @func_6636() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
  %203 = %197.1;
  %204 = %198.0;
  %205 = %201.2;
  %206 = %202.1;
  (%203, %204, %205, meta[relay.Constant][13] /* ty=Tensor[(1144), float32] */, %206)
}

def @func_726(%var_724: Tensor[(10, 12, 2), uint8], %var_725: Tensor[(10, 12, 2), uint8]) -> Tensor[(10, 12, 2), bool] {
  %211 = fn (%var_713: Tensor[(10, 12, 2), uint8], %var_714: Tensor[(10, 12, 2), uint8]) -> Tensor[(10, 12, 2), bool] {
    %207 = cast(%var_714, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
    %208 = shape_of(%var_713, dtype="int32") /* ty=Tensor[(3), int32] */;
    %209 = cast(%var_713, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    greater_equal(%209, %210) /* ty=Tensor[(10, 12, 2), bool] */
  };
  %211(%var_724, %var_725) /* ty=Tensor[(10, 12, 2), bool] */
}

def @func_5710(%var_5702: Tensor[(11, 7, 15), int64]) -> (Tensor[(11, 7, 15), int64],) {
  %212 = cast(%var_5702, dtype="int64") /* ty=Tensor[(11, 7, 15), int64] */;
  %213 = shape_of(meta[relay.Constant][14] /* ty=Tensor[(11, 7, 15), int64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %214 = cast(meta[relay.Constant][14] /* ty=Tensor[(11, 7, 15), int64] */, dtype="int64") /* ty=Tensor[(11, 7, 15), int64] */;
  %215 = dyn.reshape(%212, %213, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %216 = left_shift(%214, %215) /* ty=Tensor[(11, 7, 15), int64] */;
  (%216,)
}

def @func_2258() -> (Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) {
  %217 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %218 = cast(meta[relay.Constant][15] /* ty=Tensor[(55, 10), int16] */, dtype="int16") /* ty=Tensor[(55, 10), int16] */;
  %219 = cast(meta[relay.Constant][15] /* ty=Tensor[(55, 10), int16] */, dtype="int16") /* ty=Tensor[(55, 10), int16] */;
  %220 = cast(meta[relay.Constant][16] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %221 = reshape(%218, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %222 = reshape(%219, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %223 = reshape(%220, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %224 = @func_963(%221, %222, %223) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %225 = %217.1;
  %226 = %224.0;
  (%225, %226, meta[relay.Constant][15] /* ty=Tensor[(55, 10), int16] */, meta[relay.Constant][16] /* ty=Tensor[(900), uint8] */)
}

def @func_5862() -> Tensor[(900), uint8] {
  @func_5860() /* ty=Tensor[(900), uint8] */
}

def @func_6518(%var_6516: Tensor[(1144), float32]) -> (Tensor[(84), int16], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(1, 160), uint16], Tensor[(11, 12, 8), float64], Tensor[(1144), float32]) {
  @func_6515(%var_6516) /* ty=(Tensor[(84), int16], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(1, 160), uint16], Tensor[(11, 12, 8), float64], Tensor[(1144), float32]) */
}

def @func_4516() -> (Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) {
  %243 = fn () -> (Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) {
    %227 = @func_4208() /* ty=(Tensor[(84), int16],) */;
    %228 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 550), int16] */, dtype="int16") /* ty=Tensor[(1, 550), int16] */;
    %229 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 550), int16] */, dtype="int16") /* ty=Tensor[(1, 550), int16] */;
    %230 = cast(meta[relay.Constant][18] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
    %231 = reshape(%228, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
    %232 = reshape(%229, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
    %233 = reshape(%230, newshape=[900]) /* ty=Tensor[(900), uint8] */;
    %234 = @func_963(%231, %232, %233) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
    %235 = cast(meta[relay.Constant][17] /* ty=Tensor[(1, 550), int16] */, dtype="float32") /* ty=Tensor[(1, 550), float32] */;
    %236 = atanh(%235) /* ty=Tensor[(1, 550), float32] */;
    %237 = cast(%236, dtype="float32") /* ty=Tensor[(1, 550), float32] */;
    %238 = log2(%237) /* ty=Tensor[(1, 550), float32] */;
    %239 = cast(%238, dtype="float64") /* ty=Tensor[(1, 550), float64] */;
    %240 = %227.0;
    %241 = %234.0;
    %242 = sqrt(%239) /* ty=Tensor[(1, 550), float64] */;
    (%240, %241, meta[relay.Constant][18] /* ty=Tensor[(900), uint8] */, %242)
  };
  %243() /* ty=(Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) */
}

def @func_3960() -> (Tensor[(10, 11, 5), float32],) {
  %244 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %245 = %244.0;
  %246 = cast(%245, dtype="float32") /* ty=Tensor[(10, 11, 5), float32] */;
  %247 = tan(%246) /* ty=Tensor[(10, 11, 5), float32] */;
  (%247,)
}

def @func_4998(%var_4978: Tensor[(55, 10), int16], %var_4984: Tensor[(160), uint16]) -> (Tensor[(55, 10), uint8], Tensor[(240), uint8], Tensor[(160), uint16], Tensor[(240), uint8]) {
  %248 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %249 = %248.2;
  %250 = cast(%var_4978, dtype="uint8") /* ty=Tensor[(55, 10), uint8] */;
  %251 = shape_of(%249, dtype="int32") /* ty=Tensor[(2), int32] */;
  %252 = cast(%249, dtype="uint8") /* ty=Tensor[(55, 10), uint8] */;
  %253 = dyn.reshape(%250, %251, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %254 = cast(%var_4984, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %255 = cast(meta[relay.Constant][19] /* ty=Tensor[(240), uint8] */, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %256 = reshape(%254, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %257 = reshape(%255, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %258 = @func_2306(%256, %257) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %259 = bitwise_and(%252, %253) /* ty=Tensor[(55, 10), uint8] */;
  %260 = %258.2;
  (%259, %260, %var_4984, meta[relay.Constant][19] /* ty=Tensor[(240), uint8] */)
}

def @func_8481(%var_8479: Tensor[(195), int8], %var_8480: Tensor[(160, 1), uint16]) -> (Tensor[(11, 12, 8), float64], Tensor[(3, 13, 5), int8], Tensor[(195), int8], Tensor[(160, 1), uint16], Tensor[(900), uint8]) {
  @func_8477(%var_8479, %var_8480) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 13, 5), int8], Tensor[(195), int8], Tensor[(160, 1), uint16], Tensor[(900), uint8]) */
}

def @func_6636() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) {
  %261 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %262 = @func_4241() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %263 = %261.0;
  %264 = %262.1;
  (%263, %264)
}

def @func_3037() -> (Tensor[(11, 12, 8), float64],) {
  %265 = @func_2864() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %266 = %265.0;
  (%266,)
}

def @func_7083() -> Tensor[(84), int16] {
  @func_7081() /* ty=Tensor[(84), int16] */
}

def @func_7081() -> Tensor[(84), int16] {
  @func_4585() /* ty=Tensor[(84), int16] */
}

def @func_8748() -> (Tensor[(77, 6), float32], Tensor[(11, 12, 8), float64]) {
  @func_8746() /* ty=(Tensor[(77, 6), float32], Tensor[(11, 12, 8), float64]) */
}

def @func_1975(%var_1934: Tensor[(3, 2, 11), float32], %var_1948: Tensor[(550), int16], %var_1949: Tensor[(900), uint8], %var_1960: Tensor[(648), float64], %var_1964: Tensor[(240), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(550), int16], Tensor[(900), uint8], Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(3, 2, 11), bool]) {
  %267 = cast(%var_1948, dtype="int16") /* ty=Tensor[(550), int16] */;
  %268 = cast(%var_1948, dtype="int16") /* ty=Tensor[(550), int16] */;
  %269 = cast(%var_1949, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %270 = reshape(%267, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %271 = reshape(%268, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %272 = reshape(%269, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %273 = @func_963(%270, %271, %272) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %274 = cast(%var_1960, dtype="float64") /* ty=Tensor[(648), float64] */;
  %275 = reshape(%274, newshape=[9, 6, 12]) /* ty=Tensor[(9, 6, 12), float64] */;
  %276 = cast(%var_1964, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %277 = cast(%var_1964, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %278 = reshape(%276, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %279 = reshape(%277, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %280 = cast(%var_1934, dtype="float32") /* ty=Tensor[(3, 2, 11), float32] */;
  %281 = asinh(%280) /* ty=Tensor[(3, 2, 11), float32] */;
  %282 = cast(%var_1934, dtype="float64") /* ty=Tensor[(3, 2, 11), float64] */;
  %283 = shape_of(%281, dtype="int32") /* ty=Tensor[(3), int32] */;
  %284 = cast(%281, dtype="float64") /* ty=Tensor[(3, 2, 11), float64] */;
  %285 = dyn.reshape(%282, %283, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %286 = power(%284, %285) /* ty=Tensor[(3, 2, 11), float64] */;
  %287 = cast(meta[relay.Constant][20] /* ty=Tensor[(3, 2, 11), float64] */, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
  %288 = shape_of(%286, dtype="int32") /* ty=Tensor[(3), int32] */;
  %289 = cast(%286, dtype="bool") /* ty=Tensor[(3, 2, 11), bool] */;
  %290 = dyn.reshape(%287, %288, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %291 = %273.0;
  %292 = @func_996(%275) /* ty=Tensor[(9, 6, 12), float64] */;
  %293 = @func_723(%278, %279) /* ty=Tensor[(10, 12, 2), bool] */;
  %294 = equal(%289, %290) /* ty=Tensor[(3, 2, 11), bool] */;
  (%291, %var_1948, %var_1949, %292, %var_1960, %293, %var_1964, %294)
}

def @func_5987() -> Tensor[(11, 12, 8), float64] {
  %296 = fn () -> Tensor[(11, 12, 8), float64] {
    %295 = @func_4951() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %295.0
  };
  %296() /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_4191() -> (Tensor[(84), int16],) {
  %297 = @func_3895() /* ty=Tensor[(84), int16] */;
  (%297,)
}

def @func_5860() -> Tensor[(900), uint8] {
  %298 = @func_5673() /* ty=(Tensor[(900), uint8], Tensor[(84), int16]) */;
  %298.0
}

def @func_5968() -> (Tensor[(84), int16], Tensor[(10, 6, 15), bool], Tensor[(90, 10), uint8]) {
  %299 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %300 = cast(meta[relay.Constant][21] /* ty=Tensor[(90, 10), uint8] */, dtype="uint8") /* ty=Tensor[(90, 10), uint8] */;
  %301 = reshape(%300, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %302 = @func_343(%301) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %303 = %299.0;
  %304 = %302.0;
  (%303, %304, meta[relay.Constant][21] /* ty=Tensor[(90, 10), uint8] */)
}

def @func_1632(%var_1630: Tensor[(2, 5, 16), uint16]) -> (Tensor[(2, 5, 16), bool],) {
  @func_1629(%var_1630) /* ty=(Tensor[(2, 5, 16), bool],) */
}

def @func_3039() -> (Tensor[(11, 12, 8), float64],) {
  @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_2977() -> (Tensor[(10, 11, 5), int16],) {
  %306 = fn () -> (Tensor[(10, 11, 5), int16],) {
    %305 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
    (%305,)
  };
  %306() /* ty=(Tensor[(10, 11, 5), int16],) */
}

def @func_996(%var_983: Tensor[(9, 6, 12), float64]) -> Tensor[(9, 6, 12), float64] {
  %307 = cast(%var_983, dtype="float64") /* ty=Tensor[(9, 6, 12), float64] */;
  rsqrt(%307) /* ty=Tensor[(9, 6, 12), float64] */
}

def @func_7389() -> Tensor[(900), uint8] {
  @func_7387() /* ty=Tensor[(900), uint8] */
}

def @func_6191(%var_6189: int8, %var_6190: Tensor[(4, 10, 15), int8]) -> (Tensor[(4, 10, 15), int8],) {
  %311 = fn (%var_6183: int8, %var_6184: Tensor[(4, 10, 15), int8]) -> (Tensor[(4, 10, 15), int8],) {
    %308 = cast(%var_6183, dtype="int8") /* ty=int8 */;
    %309 = cast(%var_6184, dtype="int8") /* ty=Tensor[(4, 10, 15), int8] */;
    %310 = left_shift(%308, %309) /* ty=Tensor[(4, 10, 15), int8] */;
    (%310,)
  };
  %311(%var_6189, %var_6190) /* ty=(Tensor[(4, 10, 15), int8],) */
}

def @func_7734() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) {
  %324 = fn () -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) {
    %312 = @func_4951() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %313 = %312.0;
    %314 = cast(%313, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %315 = cast(%313, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %316 = cast(%313, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %317 = cosh(%316) /* ty=Tensor[(11, 12, 8), float64] */;
    %318 = cast(%317, dtype="float32") /* ty=Tensor[(11, 12, 8), float32] */;
    %319 = @func_7561() /* ty=(Tensor[(84), int16],) */;
    %320 = log10(%314) /* ty=Tensor[(11, 12, 8), float64] */;
    %321 = sigmoid(%315) /* ty=Tensor[(11, 12, 8), float64] */;
    %322 = sin(%318) /* ty=Tensor[(11, 12, 8), float32] */;
    %323 = %319.0;
    (%320, %321, %322, %323)
  };
  %324() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) */
}

def @func_2853(%var_2840: Tensor[(160), uint16]) -> (Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
  %325 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %326 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 210), float64] */, dtype="float64") /* ty=Tensor[(1, 210), float64] */;
  %327 = reshape(%326, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
  %328 = @func_1780(%327) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
  %329 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 210), float64] */, dtype="float32") /* ty=Tensor[(1, 210), float32] */;
  %330 = cast(%var_2840, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %331 = reshape(%330, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %332 = @func_1629(%331) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %333 = %325.0;
  %334 = %328.1;
  %335 = atan(%329) /* ty=Tensor[(1, 210), float32] */;
  %336 = %332.0;
  (%333, %334, %335, %336, %var_2840)
}

def @func_5289() -> Tensor[(11, 12, 8), float64] {
  @func_5287() /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_5262(%var_5260: Tensor[(160), uint16], %var_5261: Tensor[(77, 6), bool]) -> (Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) {
  %365 = fn (%var_5224: Tensor[(160), uint16], %var_5250: Tensor[(77, 6), bool]) -> (Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) {
    %337 = cast(%var_5224, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %338 = reshape(%337, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
    %339 = @func_1629(%338) /* ty=(Tensor[(2, 5, 16), bool],) */;
    %340 = %339.0;
    %341 = cast(%var_5224, dtype="int16") /* ty=Tensor[(160), int16] */;
    %342 = shape_of(%340, dtype="int32") /* ty=Tensor[(3), int32] */;
    %343 = cast(%340, dtype="int16") /* ty=Tensor[(2, 5, 16), int16] */;
    %344 = dyn.reshape(%341, %342, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %345 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
    %346 = %345.2;
    %347 = cast(%346, dtype="float64") /* ty=Tensor[(77, 6), float64] */;
    %348 = sqrt(%347) /* ty=Tensor[(77, 6), float64] */;
    %349 = cast(%346, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
    %350 = shape_of(%348, dtype="int32") /* ty=Tensor[(2), int32] */;
    %351 = cast(%348, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
    %352 = dyn.reshape(%349, %350, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %353 = mod(%351, %352) /* ty=Tensor[(77, 6), float32] */;
    %354 = cast(%353, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
    %355 = shape_of(%348, dtype="int32") /* ty=Tensor[(2), int32] */;
    %356 = cast(%348, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
    %357 = dyn.reshape(%354, %355, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %358 = logical_and(%356, %357) /* ty=Tensor[(77, 6), bool] */;
    %359 = cast(%var_5250, dtype="int8") /* ty=Tensor[(77, 6), int8] */;
    %360 = shape_of(%358, dtype="int32") /* ty=Tensor[(2), int32] */;
    %361 = cast(%358, dtype="int8") /* ty=Tensor[(77, 6), int8] */;
    %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %363 = add(%343, %344) /* ty=Tensor[(2, 5, 16), int16] */;
    %364 = minimum(%361, %362) /* ty=Tensor[(77, 6), int8] */;
    (%363, %364)
  };
  %365(%var_5260, %var_5261) /* ty=(Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) */
}

def @func_5047(%var_5042: Tensor[(550), int16]) -> (Tensor[(900), uint8], Tensor[(900, 1), uint8], Tensor[(160), uint16], Tensor[(10, 11, 5), int16], Tensor[(550), int16]) {
  %366 = cast(meta[relay.Constant][23] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %367 = reshape(%366, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %368 = @func_2853(%367) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %369 = cast(%var_5042, dtype="int16") /* ty=Tensor[(550), int16] */;
  %370 = cast(%var_5042, dtype="int16") /* ty=Tensor[(550), int16] */;
  %371 = %368.1;
  %372 = cast(%371, dtype="uint8") /* ty=Tensor[(900, 1), uint8] */;
  %373 = reshape(%369, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %374 = reshape(%370, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
  %375 = reshape(%372, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %376 = @func_963(%373, %374, %375) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
  %377 = @func_3863() /* ty=Tensor[(900), uint8] */;
  %378 = %376.0;
  (%377, %371, meta[relay.Constant][23] /* ty=Tensor[(160), uint16] */, %378, %var_5042)
}

def @func_4362() -> Tensor[(84), int16] {
  @func_4360() /* ty=Tensor[(84), int16] */
}

def @func_5713(%var_5711: Tensor[(11, 7, 15), int64]) -> (Tensor[(11, 7, 15), int64],) {
  @func_5710(%var_5711) /* ty=(Tensor[(11, 7, 15), int64],) */
}

def @func_5970() -> (Tensor[(84), int16], Tensor[(10, 6, 15), bool], Tensor[(90, 10), uint8]) {
  @func_5968() /* ty=(Tensor[(84), int16], Tensor[(10, 6, 15), bool], Tensor[(90, 10), uint8]) */
}

def @func_4585() -> Tensor[(84), int16] {
  %379 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %379.0
}

def @func_4298() -> (Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) {
  %387 = fn () -> (Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) {
    %380 = cast(meta[relay.Constant][24] /* ty=Tensor[(1, 154), uint64] */, dtype="uint64") /* ty=Tensor[(1, 154), uint64] */;
    %381 = cast(meta[relay.Constant][25] /* ty=Tensor[(77, 6), uint64] */, dtype="uint64") /* ty=Tensor[(77, 6), uint64] */;
    %382 = reshape(%380, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), uint64] */;
    %383 = reshape(%381, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint64] */;
    %384 = @func_2946(%382, %383) /* ty=(Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) */;
    %385 = @func_3938() /* ty=Tensor[(900), uint8] */;
    %386 = %384.1;
    (%385, %386, meta[relay.Constant][24] /* ty=Tensor[(1, 154), uint64] */, meta[relay.Constant][25] /* ty=Tensor[(77, 6), uint64] */)
  };
  %387() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */
}

def @func_3864() -> Tensor[(900), uint8] {
  %389 = fn () -> Tensor[(900), uint8] {
    %388 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
    %388.3
  };
  %389() /* ty=Tensor[(900), uint8] */
}

def @func_967(%var_964: Tensor[(10, 11, 5), int16], %var_965: Tensor[(10, 11, 5), int16], %var_966: Tensor[(900), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) {
  %399 = fn (%var_947: Tensor[(10, 11, 5), int16], %var_948: Tensor[(10, 11, 5), int16], %var_953: Tensor[(900), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) {
    %390 = cast(%var_948, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
    %391 = shape_of(%var_947, dtype="int32") /* ty=Tensor[(3), int32] */;
    %392 = cast(%var_947, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
    %393 = dyn.reshape(%390, %391, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %394 = cast(%var_953, dtype="uint8") /* ty=Tensor[(900), uint8] */;
    %395 = reshape(%394, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
    %396 = @func_343(%395) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
    %397 = right_shift(%392, %393) /* ty=Tensor[(10, 11, 5), int16] */;
    %398 = %396.1;
    (%397, %398, %var_953)
  };
  %399(%var_964, %var_965, %var_966) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */
}

def @func_5287() -> Tensor[(11, 12, 8), float64] {
  %400 = @func_4951() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %400.0
}

def @func_2786(%var_2784: Tensor[(160), uint16], %var_2785: Tensor[(240), uint8]) -> (Tensor[(84), int16], Tensor[(10, 12, 2), bool], Tensor[(1056), float64], Tensor[(160), uint16], Tensor[(240), uint8]) {
  %411 = fn (%var_2774: Tensor[(160), uint16], %var_2775: Tensor[(240), uint8]) -> (Tensor[(84), int16], Tensor[(10, 12, 2), bool], Tensor[(1056), float64], Tensor[(160), uint16], Tensor[(240), uint8]) {
    %401 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
    %402 = cast(meta[relay.Constant][26] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
    %403 = cast(%var_2774, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %404 = cast(%var_2775, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %405 = reshape(%402, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
    %406 = reshape(%403, newshape=[160]) /* ty=Tensor[(160), uint16] */;
    %407 = reshape(%404, newshape=[240, 1]) /* ty=Tensor[(240, 1), uint8] */;
    %408 = @func_2471(%405, %406, %407) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) */;
    %409 = %401.2;
    %410 = %408.1;
    (%409, %410, meta[relay.Constant][26] /* ty=Tensor[(1056), float64] */, %var_2774, %var_2775)
  };
  %411(%var_2784, %var_2785) /* ty=(Tensor[(84), int16], Tensor[(10, 12, 2), bool], Tensor[(1056), float64], Tensor[(160), uint16], Tensor[(240), uint8]) */
}

def @func_5849(%var_5847: Tensor[(240), uint8], %var_5848: Tensor[(77, 6), uint64]) -> (Tensor[(3, 14, 2), float32], Tensor[(160), uint16], Tensor[(240), uint8], Tensor[(77, 6), bool], Tensor[(1, 550), float64], Tensor[(11, 12, 8), float64], Tensor[(77, 6), int64], Tensor[(240, 1), uint8], Tensor[(84), int16]) {
  @func_5845(%var_5847, %var_5848) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(160), uint16], Tensor[(240), uint8], Tensor[(77, 6), bool], Tensor[(1, 550), float64], Tensor[(11, 12, 8), float64], Tensor[(77, 6), int64], Tensor[(240, 1), uint8], Tensor[(84), int16]) */
}

def @func_8779() -> (Tensor[(900), uint8],) {
  %413 = fn () -> (Tensor[(900), uint8],) {
    %412 = @func_3938() /* ty=Tensor[(900), uint8] */;
    (%412,)
  };
  %413() /* ty=(Tensor[(900), uint8],) */
}

def @func_999(%var_997: Tensor[(9, 6, 12), float64]) -> Tensor[(9, 6, 12), float64] {
  @func_996(%var_997) /* ty=Tensor[(9, 6, 12), float64] */
}

def @func_6786() -> (Tensor[(10, 11, 5), int16], Tensor[(900), uint8]) {
  %414 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %415 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %416 = %414.0;
  %417 = %415.0;
  (%416, %417)
}

def @func_4468(%var_4466: Tensor[(10, 12, 2), int8], %var_4467: Tensor[(10, 12, 2), int8]) -> Tensor[(10, 12, 2), bool] {
  %422 = fn (%var_4452: Tensor[(10, 12, 2), int8], %var_4453: Tensor[(10, 12, 2), int8]) -> Tensor[(10, 12, 2), bool] {
    %418 = cast(%var_4453, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
    %419 = shape_of(%var_4452, dtype="int32") /* ty=Tensor[(3), int32] */;
    %420 = cast(%var_4452, dtype="bool") /* ty=Tensor[(10, 12, 2), bool] */;
    %421 = dyn.reshape(%418, %419, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    not_equal(%420, %421) /* ty=Tensor[(10, 12, 2), bool] */
  };
  %422(%var_4466, %var_4467) /* ty=Tensor[(10, 12, 2), bool] */
}

def @func_6657() -> Tensor[(900), uint8] {
  %423 = fn () -> Tensor[(900), uint8] {
    @func_4813() /* ty=Tensor[(900), uint8] */
  };
  %423() /* ty=Tensor[(900), uint8] */
}

def @func_8640() -> (Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(900), uint8]) {
  @func_8638() /* ty=(Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(900), uint8]) */
}

def @func_4180() -> (Tensor[(11, 12, 8), float64],) {
  %426 = fn () -> (Tensor[(11, 12, 8), float64],) {
    %424 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %425 = %424.0;
    (%425,)
  };
  %426() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_227(%var_224: Tensor[(3, 14, 2), int16], %var_225: Tensor[(3, 14, 2), int16], %var_226: Tensor[(3, 14, 2), int16]) -> (Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) {
  %445 = fn (%var_147: Tensor[(3, 14, 2), int16], %var_148: Tensor[(3, 14, 2), int16], %var_206: Tensor[(3, 14, 2), int16]) -> (Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) {
    %427 = cast(%var_148, dtype="bool") /* ty=Tensor[(3, 14, 2), bool] */;
    %428 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %429 = cast(%var_147, dtype="bool") /* ty=Tensor[(3, 14, 2), bool] */;
    %430 = dyn.reshape(%427, %428, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %431 = less_equal(%429, %430) /* ty=Tensor[(3, 14, 2), bool] */;
    %432 = cast(%431, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
    %433 = tan(%432) /* ty=Tensor[(3, 14, 2), float32] */;
    %434 = cast(%433, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
    %435 = cast(%433, dtype="float64") /* ty=Tensor[(3, 14, 2), float64] */;
    %436 = exp(%435) /* ty=Tensor[(3, 14, 2), float64] */;
    %437 = cast(%436, dtype="float64") /* ty=Tensor[(3, 14, 2), float64] */;
    %438 = cast(%var_206, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
    %439 = shape_of(%var_147, dtype="int32") /* ty=Tensor[(3), int32] */;
    %440 = cast(%var_147, dtype="float32") /* ty=Tensor[(3, 14, 2), float32] */;
    %441 = dyn.reshape(%438, %439, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %442 = acos(%434) /* ty=Tensor[(3, 14, 2), float32] */;
    %443 = sqrt(%437) /* ty=Tensor[(3, 14, 2), float64] */;
    %444 = divide(%440, %441) /* ty=Tensor[(3, 14, 2), float32] */;
    (%442, %443, %444)
  };
  %445(%var_224, %var_225, %var_226) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */
}

def @func_7364() -> Tensor[(900), uint8] {
  @func_7362() /* ty=Tensor[(900), uint8] */
}

def @func_8840(%var_8838: Tensor[(13, 3, 13), int64], %var_8839: Tensor[(13, 3, 13), int64]) -> (Tensor[(13, 3, 13), int64],) {
  @func_8836(%var_8838, %var_8839) /* ty=(Tensor[(13, 3, 13), int64],) */
}

def @func_7895() -> Tensor[(900), float64] {
  @func_7893() /* ty=Tensor[(900), float64] */
}

def @func_2434() -> (Tensor[(11, 12, 8), float64],) {
  %446 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %447 = %446.0;
  (%447,)
}

def @main(%var_9112: Tensor[(1155), int64]) -> (Tensor[(11, 12, 8), float64], Tensor[(1155), bool], Tensor[(1155), bool]) {
  %448 = @func_2436() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %449 = cast(%var_9112, dtype="int64") /* ty=Tensor[(1155), int64] */;
  %450 = reshape(%449, newshape=[11, 7, 15]) /* ty=Tensor[(11, 7, 15), int64] */;
  %451 = @func_5713(%450) /* ty=(Tensor[(11, 7, 15), int64],) */;
  %452 = %451.0;
  %453 = cast(%452, dtype="bool") /* ty=Tensor[(11, 7, 15), bool] */;
  %454 = shape_of(%var_9112, dtype="int32") /* ty=Tensor[(1), int32] */;
  %455 = cast(%var_9112, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %456 = dyn.reshape(%453, %454, newshape=[]) /* ty=Tensor[(?), bool] */;
  %457 = cast(%452, dtype="bool") /* ty=Tensor[(11, 7, 15), bool] */;
  %458 = shape_of(%var_9112, dtype="int32") /* ty=Tensor[(1), int32] */;
  %459 = cast(%var_9112, dtype="bool") /* ty=Tensor[(1155), bool] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?), bool] */;
  %461 = %448.0;
  %462 = less_equal(%455, %456) /* ty=Tensor[(1155), bool] */;
  %463 = equal(%459, %460) /* ty=Tensor[(1155), bool] */;
  (%461, %462, %463)
}

def @func_4770(%var_4767: Tensor[(12, 12, 12), bool], %var_4768: Tensor[(12, 12, 12), bool], %var_4769: Tensor[(7, 154), uint64]) -> (Tensor[(12, 12, 12), bool], Tensor[(7, 154), bool]) {
  @func_4765(%var_4767, %var_4768, %var_4769) /* ty=(Tensor[(12, 12, 12), bool], Tensor[(7, 154), bool]) */
}

def @func_7184() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  %472 = fn () -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
    %464 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
    %465 = %464.0;
    %466 = cast(meta[relay.Constant][27] /* ty=Tensor[(11, 12, 8), float64] */, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %467 = shape_of(%465, dtype="int32") /* ty=Tensor[(3), int32] */;
    %468 = cast(%465, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %469 = dyn.reshape(%466, %467, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %470 = floor_mod(%468, %469) /* ty=Tensor[(11, 12, 8), float64] */;
    %471 = @func_3863() /* ty=Tensor[(900), uint8] */;
    (%470, %471)
  };
  %472() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) */
}

def @func_4814() -> Tensor[(900), uint8] {
  %474 = fn () -> Tensor[(900), uint8] {
    %473 = @func_4515() /* ty=(Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) */;
    %473.2
  };
  %474() /* ty=Tensor[(900), uint8] */
}

def @func_7387() -> Tensor[(900), uint8] {
  @func_6656() /* ty=Tensor[(900), uint8] */
}

def @func_3443(%var_3442: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), bool] {
  %481 = fn (%var_3428: Tensor[(11, 12, 8), float64]) -> Tensor[(11, 12, 8), bool] {
    %475 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %476 = %475.0;
    %477 = cast(%var_3428, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
    %478 = shape_of(%476, dtype="int32") /* ty=Tensor[(3), int32] */;
    %479 = cast(%476, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
    %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    equal(%479, %480) /* ty=Tensor[(11, 12, 8), bool] */
  };
  %481(%var_3442) /* ty=Tensor[(11, 12, 8), bool] */
}

def @func_3534(%var_3530: Tensor[(16, 13, 5), float64], %var_3531: Tensor[(16, 13, 5), float64], %var_3532: Tensor[(1056), float64], %var_3533: Tensor[(900), uint8]) -> (Tensor[(16, 13, 5), float64], Tensor[(11, 12, 8), bool], Tensor[(1056), float64], Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float32], Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(21, 4), float32]) {
  @func_3528(%var_3530, %var_3531, %var_3532, %var_3533) /* ty=(Tensor[(16, 13, 5), float64], Tensor[(11, 12, 8), bool], Tensor[(1056), float64], Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float32], Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(21, 4), float32]) */
}

def @func_7356(%var_7355: Tensor[(240), int8]) -> (Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), int8], Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool]) {
  %495 = fn (%var_7337: Tensor[(240), int8]) -> (Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), int8], Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool]) {
    %482 = cast(%var_7337, dtype="int8") /* ty=Tensor[(240), int8] */;
    %483 = cast(%var_7337, dtype="int8") /* ty=Tensor[(240), int8] */;
    %484 = reshape(%482, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), int8] */;
    %485 = reshape(%483, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), int8] */;
    %486 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
    %487 = cast(%var_7337, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %488 = cast(%var_7337, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %489 = reshape(%487, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
    %490 = reshape(%488, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
    %491 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
    %492 = @func_4465(%484, %485) /* ty=Tensor[(10, 12, 2), bool] */;
    %493 = %486.1;
    %494 = @func_723(%489, %490) /* ty=Tensor[(10, 12, 2), bool] */;
    (%491, %492, %var_7337, %493, %494)
  };
  %495(%var_7355) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), int8], Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool]) */
}

def @func_8178() -> (Tensor[(11, 12, 8), float64],) {
  %498 = fn () -> (Tensor[(11, 12, 8), float64],) {
    %496 = @func_6557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
    %497 = %496.0;
    (%497,)
  };
  %498() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_8477(%var_8458: Tensor[(195), int8], %var_8459: Tensor[(160, 1), uint16]) -> (Tensor[(11, 12, 8), float64], Tensor[(3, 13, 5), int8], Tensor[(195), int8], Tensor[(160, 1), uint16], Tensor[(900), uint8]) {
  %499 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %500 = cast(%var_8458, dtype="int8") /* ty=Tensor[(195), int8] */;
  %501 = cast(%var_8459, dtype="uint16") /* ty=Tensor[(160, 1), uint16] */;
  %502 = reshape(%500, newshape=[3, 13, 5]) /* ty=Tensor[(3, 13, 5), int8] */;
  %503 = reshape(%501, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %504 = @func_7552(%502, %503) /* ty=(Tensor[(3, 13, 5), int8], Tensor[(84), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %505 = %499.0;
  %506 = %504.0;
  %507 = @func_6087() /* ty=Tensor[(900), uint8] */;
  (%505, %506, %var_8458, %var_8459, %507)
}

def @func_8597() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), bool]) {
  @func_8595() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), bool]) */
}

def @func_3855(%var_3853: Tensor[(160), uint16], %var_3854: Tensor[(2, 120), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float64], Tensor[(84), int16], Tensor[(3, 14, 2), float32], Tensor[(11, 12, 8), float64], Tensor[(11, 8, 13), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(1144), float32], Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(2, 120), uint8]) {
  %550 = fn (%var_3803: Tensor[(160), uint16], %var_3847: Tensor[(2, 120), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float64], Tensor[(84), int16], Tensor[(3, 14, 2), float32], Tensor[(11, 12, 8), float64], Tensor[(11, 8, 13), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(1144), float32], Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(2, 120), uint8]) {
    %508 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
    %509 = cast(meta[relay.Constant][28] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %510 = cast(meta[relay.Constant][28] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %511 = cast(meta[relay.Constant][28] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %512 = reshape(%509, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %513 = reshape(%510, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %514 = reshape(%511, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %515 = @func_223(%512, %513, %514) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
    %516 = %515.1;
    %517 = cast(%516, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
    %518 = cast(%516, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
    %519 = cast(%516, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
    %520 = reshape(%517, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %521 = reshape(%518, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %522 = reshape(%519, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %523 = @func_223(%520, %521, %522) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
    %524 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %525 = cast(meta[relay.Constant][29] /* ty=Tensor[(780), float64] */, dtype="float64") /* ty=Tensor[(780), float64] */;
    %526 = cast(%var_3803, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %527 = cast(meta[relay.Constant][30] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %528 = reshape(%525, newshape=[4, 13, 15]) /* ty=Tensor[(4, 13, 15), float64] */;
    %529 = reshape(%526, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
    %530 = reshape(%527, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
    %531 = @func_3697(%528, %529, %530) /* ty=(Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) */;
    %532 = cast(%516, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
    %533 = cast(meta[relay.Constant][28] /* ty=Tensor[(84), int16] */, dtype="int16") /* ty=Tensor[(84), int16] */;
    %534 = cast(%516, dtype="int16") /* ty=Tensor[(3, 14, 2), int16] */;
    %535 = reshape(%532, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %536 = reshape(%533, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %537 = reshape(%534, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %538 = @func_223(%535, %536, %537) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
    %539 = cast(%var_3803, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %540 = cast(%var_3847, dtype="uint8") /* ty=Tensor[(2, 120), uint8] */;
    %541 = reshape(%539, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
    %542 = reshape(%540, newshape=[240]) /* ty=Tensor[(240), uint8] */;
    %543 = @func_2306(%541, %542) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
    %544 = %508.0;
    %545 = %523.2;
    %546 = %524.0;
    %547 = %531.7;
    %548 = %538.2;
    %549 = %543.0;
    (%544, %516, meta[relay.Constant][28] /* ty=Tensor[(84), int16] */, %545, %546, %547, meta[relay.Constant][29] /* ty=Tensor[(780), float64] */, %var_3803, meta[relay.Constant][30] /* ty=Tensor[(1144), float32] */, %548, %549, %var_3847)
  };
  %550(%var_3853, %var_3854) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float64], Tensor[(84), int16], Tensor[(3, 14, 2), float32], Tensor[(11, 12, 8), float64], Tensor[(11, 8, 13), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(1144), float32], Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(2, 120), uint8]) */
}

def @func_8695(%var_8693: Tensor[(2, 4, 2), uint16], %var_8694: Tensor[(2, 4, 2), uint16]) -> (Tensor[(2, 4, 2), uint16],) {
  @func_8691(%var_8693, %var_8694) /* ty=(Tensor[(2, 4, 2), uint16],) */
}

def @func_9062() -> Tensor[(11, 12, 8), float64] {
  %552 = fn () -> Tensor[(11, 12, 8), float64] {
    %551 = @func_7733() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) */;
    %551.0
  };
  %552() /* ty=Tensor[(11, 12, 8), float64] */
}

def @func_5579() -> (Tensor[(84), int16], Tensor[(3, 14, 2), float64]) {
  @func_5577() /* ty=(Tensor[(84), int16], Tensor[(3, 14, 2), float64]) */
}

def @func_7642() -> (Tensor[(84), int16],) {
  %555 = fn () -> (Tensor[(84), int16],) {
    %553 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
    %554 = %553.0;
    (%554,)
  };
  %555() /* ty=(Tensor[(84), int16],) */
}

def @func_6089() -> Tensor[(900), uint8] {
  @func_6087() /* ty=Tensor[(900), uint8] */
}

def @func_6380(%var_6378: Tensor[(11, 104), uint64]) -> (Tensor[(900), uint8], Tensor[(2, 5, 16), int16], Tensor[(160), uint16], Tensor[(462), bool], Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(900), uint8], Tensor[(1040), float64], Tensor[(1056), float64], Tensor[(11, 104), bool], Tensor[(11, 104), bool], Tensor[(11, 104), float32]) {
  @func_6377(%var_6378) /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), int16], Tensor[(160), uint16], Tensor[(462), bool], Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(900), uint8], Tensor[(1040), float64], Tensor[(1056), float64], Tensor[(11, 104), bool], Tensor[(11, 104), bool], Tensor[(11, 104), float32]) */
}

def @func_2856(%var_2854: Tensor[(160), uint16]) -> (Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
  @func_2853(%var_2854) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */
}

def @func_2949(%var_2947: Tensor[(14, 1, 11), uint64], %var_2948: Tensor[(14, 3, 11), uint64]) -> (Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) {
  %567 = fn (%var_2923: Tensor[(14, 1, 11), uint64], %var_2924: Tensor[(14, 3, 11), uint64]) -> (Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) {
    %556 = cast(%var_2923, dtype="uint64") /* ty=Tensor[(14, 1, 11), uint64] */;
    %557 = cast(%var_2924, dtype="uint64") /* ty=Tensor[(14, 3, 11), uint64] */;
    %558 = cast(meta[relay.Constant][31] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %559 = reshape(%558, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
    %560 = @func_1629(%559) /* ty=(Tensor[(2, 5, 16), bool],) */;
    %561 = cast(meta[relay.Constant][32] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
    %562 = reshape(%561, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
    %563 = @func_2607(%562) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
    %564 = logical_xor(%556, %557) /* ty=Tensor[(14, 3, 11), uint64] */;
    %565 = %560.0;
    %566 = %563.4;
    (%564, %565, meta[relay.Constant][31] /* ty=Tensor[(160), uint16] */, %566, meta[relay.Constant][32] /* ty=Tensor[(1144), float32] */)
  };
  %567(%var_2947, %var_2948) /* ty=(Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) */
}

def @func_4898(%var_4897: Tensor[(780), float64]) -> (Tensor[(10, 11, 5), float32], Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(1144), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(22, 52), float32]) {
  %586 = fn (%var_4887: Tensor[(780), float64]) -> (Tensor[(10, 11, 5), float32], Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(1144), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(22, 52), float32]) {
    %568 = @func_3960() /* ty=(Tensor[(10, 11, 5), float32],) */;
    %569 = %568.0;
    %570 = cast(%569, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
    %571 = cast(%569, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
    %572 = cast(meta[relay.Constant][33] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
    %573 = reshape(%570, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
    %574 = reshape(%571, newshape=[10, 11, 5]) /* ty=Tensor[(10, 11, 5), int16] */;
    %575 = reshape(%572, newshape=[900]) /* ty=Tensor[(900), uint8] */;
    %576 = @func_963(%573, %574, %575) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(900), uint8]) */;
    %577 = cast(%var_4887, dtype="float64") /* ty=Tensor[(780), float64] */;
    %578 = cast(meta[relay.Constant][34] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %579 = cast(meta[relay.Constant][35] /* ty=Tensor[(22, 52), float32] */, dtype="float32") /* ty=Tensor[(22, 52), float32] */;
    %580 = reshape(%577, newshape=[4, 13, 15]) /* ty=Tensor[(4, 13, 15), float64] */;
    %581 = reshape(%578, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
    %582 = reshape(%579, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
    %583 = @func_3697(%580, %581, %582) /* ty=(Tensor[(10, 11, 5), uint16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(4, 40), uint16], Tensor[(4, 13, 15), uint32], Tensor[(11, 8, 13), float32], Tensor[(1144), float32], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float32], Tensor[(4, 13, 15), uint8], Tensor[(11, 12, 8), float64], Tensor[(4, 13, 15), float32]) */;
    %584 = %576.2;
    %585 = %583.8;
    (%569, %584, meta[relay.Constant][33] /* ty=Tensor[(900), uint8] */, %585, %var_4887, meta[relay.Constant][34] /* ty=Tensor[(160), uint16] */, meta[relay.Constant][35] /* ty=Tensor[(22, 52), float32] */)
  };
  %586(%var_4897) /* ty=(Tensor[(10, 11, 5), float32], Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(1144), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(22, 52), float32]) */
}

def @func_5928(%var_5926: Tensor[(240), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8]) {
  @func_5925(%var_5926) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8]) */
}

def @func_4765(%var_4736: Tensor[(12, 12, 12), bool], %var_4737: Tensor[(12, 12, 12), bool], %var_4760: Tensor[(7, 154), uint64]) -> (Tensor[(12, 12, 12), bool], Tensor[(7, 154), bool]) {
  %587 = cast(%var_4737, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %588 = shape_of(%var_4736, dtype="int32") /* ty=Tensor[(3), int32] */;
  %589 = cast(%var_4736, dtype="bool") /* ty=Tensor[(12, 12, 12), bool] */;
  %590 = dyn.reshape(%587, %588, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %591 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %592 = %591.2;
  %593 = cast(%592, dtype="bool") /* ty=Tensor[(1, 154), bool] */;
  %594 = cast(%var_4760, dtype="bool") /* ty=Tensor[(7, 154), bool] */;
  %595 = logical_or(%589, %590) /* ty=Tensor[(12, 12, 12), bool] */;
  %596 = equal(%593, %594) /* ty=Tensor[(7, 154), bool] */;
  (%595, %596)
}

def @func_2310(%var_2308: Tensor[(4, 40), uint16], %var_2309: Tensor[(240), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) {
  @func_2306(%var_2308, %var_2309) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */
}

def @func_1982(%var_1977: Tensor[(3, 2, 11), float32], %var_1978: Tensor[(550), int16], %var_1979: Tensor[(900), uint8], %var_1980: Tensor[(648), float64], %var_1981: Tensor[(240), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(550), int16], Tensor[(900), uint8], Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(3, 2, 11), bool]) {
  @func_1975(%var_1977, %var_1978, %var_1979, %var_1980, %var_1981) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(550), int16], Tensor[(900), uint8], Tensor[(9, 6, 12), float64], Tensor[(648), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(3, 2, 11), bool]) */
}

def @func_6899(%var_6896: Tensor[(240), uint8], %var_6897: Tensor[(462), uint64], %var_6898: Tensor[(16, 10), uint16]) -> (Tensor[(84), int16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(77, 6), int8], Tensor[(16, 10), uint16], Tensor[(11, 12, 8), float64]) {
  %613 = fn (%var_6812: Tensor[(240), uint8], %var_6813: Tensor[(462), uint64], %var_6817: Tensor[(16, 10), uint16]) -> (Tensor[(84), int16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(77, 6), int8], Tensor[(16, 10), uint16], Tensor[(11, 12, 8), float64]) {
    %597 = cast(%var_6812, dtype="uint8") /* ty=Tensor[(240), uint8] */;
    %598 = cast(%var_6813, dtype="uint64") /* ty=Tensor[(462), uint64] */;
    %599 = reshape(%597, newshape=[240]) /* ty=Tensor[(240), uint8] */;
    %600 = reshape(%598, newshape=[77, 6]) /* ty=Tensor[(77, 6), uint64] */;
    %601 = @func_5845(%599, %600) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(160), uint16], Tensor[(240), uint8], Tensor[(77, 6), bool], Tensor[(1, 550), float64], Tensor[(11, 12, 8), float64], Tensor[(77, 6), int64], Tensor[(240, 1), uint8], Tensor[(84), int16]) */;
    %602 = cast(%var_6817, dtype="uint16") /* ty=Tensor[(16, 10), uint16] */;
    %603 = cast(%var_6813, dtype="bool") /* ty=Tensor[(462), bool] */;
    %604 = reshape(%602, newshape=[160]) /* ty=Tensor[(160), uint16] */;
    %605 = reshape(%603, newshape=[77, 6]) /* ty=Tensor[(77, 6), bool] */;
    %606 = @func_5259(%604, %605) /* ty=(Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) */;
    %607 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %608 = %607.0;
    %609 = cast(%608, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
    %610 = %601.8;
    %611 = %606.1;
    %612 = log2(%609) /* ty=Tensor[(11, 12, 8), float64] */;
    (%610, %var_6812, %var_6813, %611, %var_6817, %612)
  };
  %613(%var_6896, %var_6897, %var_6898) /* ty=(Tensor[(84), int16], Tensor[(240), uint8], Tensor[(462), uint64], Tensor[(77, 6), int8], Tensor[(16, 10), uint16], Tensor[(11, 12, 8), float64]) */
}

def @func_7562() -> (Tensor[(84), int16],) {
  %616 = fn () -> (Tensor[(84), int16],) {
    %614 = @func_4191() /* ty=(Tensor[(84), int16],) */;
    %615 = %614.0;
    (%615,)
  };
  %616() /* ty=(Tensor[(84), int16],) */
}

def @func_5845(%var_5795: Tensor[(240), uint8], %var_5808: Tensor[(77, 6), uint64]) -> (Tensor[(3, 14, 2), float32], Tensor[(160), uint16], Tensor[(240), uint8], Tensor[(77, 6), bool], Tensor[(1, 550), float64], Tensor[(11, 12, 8), float64], Tensor[(77, 6), int64], Tensor[(240, 1), uint8], Tensor[(84), int16]) {
  %617 = cast(meta[relay.Constant][36] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %618 = cast(%var_5795, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %619 = reshape(%617, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %620 = reshape(%618, newshape=[2, 120]) /* ty=Tensor[(2, 120), uint8] */;
  %621 = @func_3852(%619, %620) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(3, 14, 2), float64], Tensor[(84), int16], Tensor[(3, 14, 2), float32], Tensor[(11, 12, 8), float64], Tensor[(11, 8, 13), float32], Tensor[(780), float64], Tensor[(160), uint16], Tensor[(1144), float32], Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(2, 120), uint8]) */;
  %622 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
  %623 = %622.3;
  %624 = cast(%var_5808, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
  %625 = shape_of(%623, dtype="int32") /* ty=Tensor[(2), int32] */;
  %626 = cast(%623, dtype="bool") /* ty=Tensor[(77, 6), bool] */;
  %627 = dyn.reshape(%624, %625, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %628 = @func_4515() /* ty=(Tensor[(84), int16], Tensor[(10, 11, 5), int16], Tensor[(900), uint8], Tensor[(1, 550), float64]) */;
  %629 = @func_5683() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %630 = cast(%var_5808, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
  %631 = asinh(%630) /* ty=Tensor[(77, 6), float32] */;
  %632 = cast(%623, dtype="int64") /* ty=Tensor[(77, 6), int64] */;
  %633 = shape_of(%631, dtype="int32") /* ty=Tensor[(2), int32] */;
  %634 = cast(%631, dtype="int64") /* ty=Tensor[(77, 6), int64] */;
  %635 = dyn.reshape(%632, %633, newshape=[]) /* ty=Tensor[(?, ?), int64] */;
  %636 = %629.0;
  %637 = cast(%636, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %638 = cast(meta[relay.Constant][36] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %639 = cast(%var_5795, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %640 = reshape(%637, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %641 = reshape(%638, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %642 = reshape(%639, newshape=[240, 1]) /* ty=Tensor[(240, 1), uint8] */;
  %643 = @func_2471(%640, %641, %642) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) */;
  %644 = @func_5372() /* ty=(Tensor[(84), int16],) */;
  %645 = %621.9;
  %646 = less_equal(%626, %627) /* ty=Tensor[(77, 6), bool] */;
  %647 = %628.3;
  %648 = subtract(%634, %635) /* ty=Tensor[(77, 6), int64] */;
  %649 = %643.3;
  %650 = %644.0;
  (%645, meta[relay.Constant][36] /* ty=Tensor[(160), uint16] */, %var_5795, %646, %647, %636, %648, %649, %650)
}

def @func_4587() -> Tensor[(84), int16] {
  @func_4585() /* ty=Tensor[(84), int16] */
}

def @func_2260() -> (Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) {
  @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */
}

def @func_3343(%var_3340: Tensor[(154), uint64], %var_3341: Tensor[(462), uint64], %var_3342: Tensor[(160), uint16]) -> (Tensor[(84), int16], Tensor[(14, 3, 11), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(5, 14, 3), bool], Tensor[(5, 42), float64]) {
  %667 = fn (%var_3306: Tensor[(154), uint64], %var_3307: Tensor[(462), uint64], %var_3323: Tensor[(160), uint16]) -> (Tensor[(84), int16], Tensor[(14, 3, 11), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(5, 14, 3), bool], Tensor[(5, 42), float64]) {
    %651 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
    %652 = cast(%var_3306, dtype="uint64") /* ty=Tensor[(154), uint64] */;
    %653 = cast(%var_3307, dtype="uint64") /* ty=Tensor[(462), uint64] */;
    %654 = reshape(%652, newshape=[14, 1, 11]) /* ty=Tensor[(14, 1, 11), uint64] */;
    %655 = reshape(%653, newshape=[14, 3, 11]) /* ty=Tensor[(14, 3, 11), uint64] */;
    %656 = @func_2946(%654, %655) /* ty=(Tensor[(14, 3, 11), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(10, 6, 15), float32], Tensor[(1144), float32]) */;
    %657 = cast(%var_3323, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %658 = reshape(%657, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
    %659 = @func_1629(%658) /* ty=(Tensor[(2, 5, 16), bool],) */;
    %660 = cast(meta[relay.Constant][37] /* ty=Tensor[(5, 42), float64] */, dtype="float64") /* ty=Tensor[(5, 42), float64] */;
    %661 = reshape(%660, newshape=[5, 14, 3]) /* ty=Tensor[(5, 14, 3), float64] */;
    %662 = @func_1780(%661) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) */;
    %663 = %651.2;
    %664 = %656.0;
    %665 = %659.0;
    %666 = %662.2;
    (%663, %664, %var_3306, %var_3307, %665, %var_3323, %666, meta[relay.Constant][37] /* ty=Tensor[(5, 42), float64] */)
  };
  %667(%var_3340, %var_3341, %var_3342) /* ty=(Tensor[(84), int16], Tensor[(14, 3, 11), uint64], Tensor[(154), uint64], Tensor[(462), uint64], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(5, 14, 3), bool], Tensor[(5, 42), float64]) */
}

def @func_4264() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64]) {
  @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */
}

def @func_4395(%var_4394: Tensor[(160), uint16]) -> (Tensor[(10, 11, 5), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
  %674 = fn (%var_4385: Tensor[(160), uint16]) -> (Tensor[(10, 11, 5), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
    %668 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
    %669 = cast(%var_4385, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %670 = reshape(%669, newshape=[160]) /* ty=Tensor[(160), uint16] */;
    %671 = @func_2853(%670) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
    %672 = %668.0;
    %673 = %671.3;
    (%672, %673, %var_4385)
  };
  %674(%var_4394) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */
}

def @func_6040() -> (Tensor[(10, 11, 5), int16],) {
  %677 = fn () -> (Tensor[(10, 11, 5), int16],) {
    %675 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
    %676 = %675.0;
    (%676,)
  };
  %677() /* ty=(Tensor[(10, 11, 5), int16],) */
}

def @func_7755() -> Tensor[(900), uint8] {
  @func_7387() /* ty=Tensor[(900), uint8] */
}

def @func_8559() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  @func_8557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) */
}

def @func_4005(%var_4003: Tensor[(9, 6, 11), float64], %var_4004: Tensor[(9, 6, 11), float64]) -> (Tensor[(9, 6, 11), float32],) {
  @func_4001(%var_4003, %var_4004) /* ty=(Tensor[(9, 6, 11), float32],) */
}

def @func_7574() -> (Tensor[(900), uint8],) {
  %679 = fn () -> (Tensor[(900), uint8],) {
    %678 = @func_5860() /* ty=Tensor[(900), uint8] */;
    (%678,)
  };
  %679() /* ty=(Tensor[(900), uint8],) */
}

def @func_3528(%var_3449: Tensor[(16, 13, 5), float64], %var_3450: Tensor[(16, 13, 5), float64], %var_3474: Tensor[(1056), float64], %var_3517: Tensor[(900), uint8]) -> (Tensor[(16, 13, 5), float64], Tensor[(11, 12, 8), bool], Tensor[(1056), float64], Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float32], Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(21, 4), float32]) {
  %680 = cast(%var_3450, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %681 = shape_of(%var_3449, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%var_3449, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %684 = cast(%var_3474, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %685 = reshape(%684, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
  %686 = cast(%var_3449, dtype="float64") /* ty=Tensor[(16, 13, 5), float64] */;
  %687 = log(%686) /* ty=Tensor[(16, 13, 5), float64] */;
  %688 = cast(%var_3449, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %689 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %690 = cast(%687, dtype="bool") /* ty=Tensor[(16, 13, 5), bool] */;
  %691 = dyn.reshape(%688, %689, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %692 = cast(%var_3450, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  %693 = shape_of(%687, dtype="int32") /* ty=Tensor[(3), int32] */;
  %694 = cast(%687, dtype="float32") /* ty=Tensor[(16, 13, 5), float32] */;
  %695 = dyn.reshape(%692, %693, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %696 = cast(meta[relay.Constant][38] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %697 = reshape(%696, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %698 = @func_1629(%697) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %699 = cast(%var_3517, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %700 = reshape(%699, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %701 = @func_343(%700) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %702 = %701.2;
  %703 = cast(%702, dtype="float32") /* ty=Tensor[(21, 4), float32] */;
  %704 = floor_mod(%682, %683) /* ty=Tensor[(16, 13, 5), float64] */;
  %705 = @func_3441(%685) /* ty=Tensor[(11, 12, 8), bool] */;
  %706 = logical_or(%690, %691) /* ty=Tensor[(16, 13, 5), bool] */;
  %707 = minimum(%694, %695) /* ty=Tensor[(16, 13, 5), float32] */;
  %708 = %698.0;
  %709 = log2(%703) /* ty=Tensor[(21, 4), float32] */;
  (%704, %705, %var_3474, %706, %707, %var_3517, %708, meta[relay.Constant][38] /* ty=Tensor[(160), uint16] */, %709)
}

def @func_4633() -> (Tensor[(10, 11, 5), int16],) {
  %711 = fn () -> (Tensor[(10, 11, 5), int16],) {
    %710 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
    (%710,)
  };
  %711() /* ty=(Tensor[(10, 11, 5), int16],) */
}

def @func_8277(%var_8275: Tensor[(160), uint16], %var_8276: Tensor[(1056, 1), float64]) -> (Tensor[(900), uint8], Tensor[(160), uint16], Tensor[(160), uint16], Tensor[(11, 12, 8), bool], Tensor[(1056, 1), float64]) {
  %721 = fn (%var_8215: Tensor[(160), uint16], %var_8267: Tensor[(1056, 1), float64]) -> (Tensor[(900), uint8], Tensor[(160), uint16], Tensor[(160), uint16], Tensor[(11, 12, 8), bool], Tensor[(1056, 1), float64]) {
    %712 = cast(%var_8215, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %713 = reshape(%712, newshape=[160]) /* ty=Tensor[(160), uint16] */;
    %714 = @func_2853(%713) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
    %715 = cast(%var_8267, dtype="float64") /* ty=Tensor[(1056, 1), float64] */;
    %716 = reshape(%715, newshape=[11, 12, 8]) /* ty=Tensor[(11, 12, 8), float64] */;
    %717 = @func_3293(%716) /* ty=(Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) */;
    %718 = @func_5860() /* ty=Tensor[(900), uint8] */;
    %719 = %714.4;
    %720 = %717.0;
    (%718, %719, %var_8215, %720, %var_8267)
  };
  %721(%var_8275, %var_8276) /* ty=(Tensor[(900), uint8], Tensor[(160), uint16], Tensor[(160), uint16], Tensor[(11, 12, 8), bool], Tensor[(1056, 1), float64]) */
}

def @func_8701() -> (Tensor[(11, 12, 8), float64],) {
  %722 = @func_6557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
  %723 = %722.1;
  (%723,)
}

def @func_8703() -> (Tensor[(11, 12, 8), float64],) {
  @func_8701() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_3296(%var_3294: Tensor[(11, 12, 8), float64]) -> (Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) {
  @func_3293(%var_3294) /* ty=(Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) */
}

def @func_8691(%var_8683: Tensor[(2, 4, 2), uint16], %var_8684: Tensor[(2, 4, 2), uint16]) -> (Tensor[(2, 4, 2), uint16],) {
  %724 = cast(%var_8684, dtype="uint16") /* ty=Tensor[(2, 4, 2), uint16] */;
  %725 = shape_of(%var_8683, dtype="int32") /* ty=Tensor[(3), int32] */;
  %726 = cast(%var_8683, dtype="uint16") /* ty=Tensor[(2, 4, 2), uint16] */;
  %727 = dyn.reshape(%724, %725, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %728 = maximum(%726, %727) /* ty=Tensor[(2, 4, 2), uint16] */;
  (%728,)
}

def @func_3896() -> Tensor[(84), int16] {
  %730 = fn () -> Tensor[(84), int16] {
    %729 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
    %729.2
  };
  %730() /* ty=Tensor[(84), int16] */
}

def @func_8638() -> (Tensor[(900), uint8], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(900), uint8]) {
  %731 = @func_8595() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), bool]) */;
  %732 = @func_5860() /* ty=Tensor[(900), uint8] */;
  %733 = cast(%732, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %734 = cast(meta[relay.Constant][39] /* ty=Tensor[(1144), float32] */, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %735 = reshape(%733, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %736 = reshape(%734, newshape=[11, 104]) /* ty=Tensor[(11, 104), float32] */;
  %737 = @func_5491(%735, %736) /* ty=(Tensor[(10, 11, 5), float32], Tensor[(900), bool], Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32]) */;
  %738 = @func_8557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) */;
  %739 = %731.1;
  %740 = %737.2;
  %741 = %738.1;
  (%739, %732, %740, meta[relay.Constant][39] /* ty=Tensor[(1144), float32] */, %741)
}

def @func_2865() -> (Tensor[(11, 12, 8), float64],) {
  %744 = fn () -> (Tensor[(11, 12, 8), float64],) {
    %742 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %743 = %742.0;
    (%743,)
  };
  %744() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_2476(%var_2473: Tensor[(11, 12, 8), float64], %var_2474: Tensor[(160), uint16], %var_2475: Tensor[(240, 1), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) {
  @func_2471(%var_2473, %var_2474, %var_2475) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(160), uint16], Tensor[(240, 1), uint8]) */
}

def @func_4209() -> (Tensor[(84), int16],) {
  %746 = fn () -> (Tensor[(84), int16],) {
    %745 = @func_3895() /* ty=Tensor[(84), int16] */;
    (%745,)
  };
  %746() /* ty=(Tensor[(84), int16],) */
}

def @func_7624() -> (Tensor[(900), uint8], Tensor[(1144), uint8]) {
  %747 = @func_7501() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(1144), float32], Tensor[(11, 12, 8), float64]) */;
  %748 = %747.3;
  %749 = cast(%748, dtype="float64") /* ty=Tensor[(1144), float64] */;
  %750 = erf(%749) /* ty=Tensor[(1144), float64] */;
  %751 = cast(meta[relay.Constant][40] /* ty=Tensor[(1144), float64] */, dtype="uint8") /* ty=Tensor[(1144), uint8] */;
  %752 = shape_of(%750, dtype="int32") /* ty=Tensor[(1), int32] */;
  %753 = cast(%750, dtype="uint8") /* ty=Tensor[(1144), uint8] */;
  %754 = dyn.reshape(%751, %752, newshape=[]) /* ty=Tensor[(?), uint8] */;
  %755 = @func_7387() /* ty=Tensor[(900), uint8] */;
  %756 = bitwise_xor(%753, %754) /* ty=Tensor[(1144), uint8] */;
  (%755, %756)
}

def @func_6087() -> Tensor[(900), uint8] {
  @func_4813() /* ty=Tensor[(900), uint8] */
}

def @func_7626() -> (Tensor[(900), uint8], Tensor[(1144), uint8]) {
  @func_7624() /* ty=(Tensor[(900), uint8], Tensor[(1144), uint8]) */
}

def @func_4001(%var_3986: Tensor[(9, 6, 11), float64], %var_3987: Tensor[(9, 6, 11), float64]) -> (Tensor[(9, 6, 11), float32],) {
  %757 = cast(%var_3987, dtype="float64") /* ty=Tensor[(9, 6, 11), float64] */;
  %758 = shape_of(%var_3986, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%var_3986, dtype="float64") /* ty=Tensor[(9, 6, 11), float64] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %761 = mod(%759, %760) /* ty=Tensor[(9, 6, 11), float64] */;
  %762 = cast(%761, dtype="float32") /* ty=Tensor[(9, 6, 11), float32] */;
  %763 = rsqrt(%762) /* ty=Tensor[(9, 6, 11), float32] */;
  (%763,)
}

def @func_7799() -> Tensor[(900), bool] {
  %769 = fn () -> Tensor[(900), bool] {
    %764 = @func_3863() /* ty=Tensor[(900), uint8] */;
    %765 = cast(meta[relay.Constant][41] /* ty=Tensor[(900), uint8] */, dtype="bool") /* ty=Tensor[(900), bool] */;
    %766 = shape_of(%764, dtype="int32") /* ty=Tensor[(1), int32] */;
    %767 = cast(%764, dtype="bool") /* ty=Tensor[(900), bool] */;
    %768 = dyn.reshape(%765, %766, newshape=[]) /* ty=Tensor[(?), bool] */;
    logical_or(%767, %768) /* ty=Tensor[(900), bool] */
  };
  %769() /* ty=Tensor[(900), bool] */
}

def @func_2306(%var_2286: Tensor[(4, 40), uint16], %var_2297: Tensor[(240), uint8]) -> (Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) {
  %770 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
  %771 = cast(%var_2297, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %772 = cast(%var_2297, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %773 = reshape(%771, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %774 = reshape(%772, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %775 = cast(%var_2286, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %776 = reshape(%775, newshape=[2, 5, 16]) /* ty=Tensor[(2, 5, 16), uint16] */;
  %777 = @func_1629(%776) /* ty=(Tensor[(2, 5, 16), bool],) */;
  %778 = %777.0;
  %779 = cast(%778, dtype="uint8") /* ty=Tensor[(2, 5, 16), uint8] */;
  %780 = shape_of(%var_2286, dtype="int32") /* ty=Tensor[(2), int32] */;
  %781 = cast(%var_2286, dtype="uint8") /* ty=Tensor[(4, 40), uint8] */;
  %782 = dyn.reshape(%779, %780, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %783 = %770.1;
  %784 = @func_723(%773, %774) /* ty=Tensor[(10, 12, 2), bool] */;
  %785 = left_shift(%781, %782) /* ty=Tensor[(4, 40), uint8] */;
  (%783, %784, %var_2297, %785)
}

def @func_6377(%var_6368: Tensor[(11, 104), uint64]) -> (Tensor[(900), uint8], Tensor[(2, 5, 16), int16], Tensor[(160), uint16], Tensor[(462), bool], Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(900), uint8], Tensor[(1040), float64], Tensor[(1056), float64], Tensor[(11, 104), bool], Tensor[(11, 104), bool], Tensor[(11, 104), float32]) {
  %786 = cast(meta[relay.Constant][42] /* ty=Tensor[(160), uint16] */, dtype="uint16") /* ty=Tensor[(160), uint16] */;
  %787 = cast(meta[relay.Constant][43] /* ty=Tensor[(462), bool] */, dtype="bool") /* ty=Tensor[(462), bool] */;
  %788 = reshape(%786, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %789 = reshape(%787, newshape=[77, 6]) /* ty=Tensor[(77, 6), bool] */;
  %790 = @func_5259(%788, %789) /* ty=(Tensor[(2, 5, 16), int16], Tensor[(77, 6), int8]) */;
  %791 = @func_4813() /* ty=Tensor[(900), uint8] */;
  %792 = cast(%791, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %793 = reshape(%792, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %794 = @func_343(%793) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %795 = %794.0;
  %796 = cast(%795, dtype="uint8") /* ty=Tensor[(10, 6, 15), uint8] */;
  %797 = reshape(%796, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %798 = @func_343(%797) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %799 = cast(meta[relay.Constant][44] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %800 = cast(meta[relay.Constant][44] /* ty=Tensor[(1040), float64] */, dtype="float64") /* ty=Tensor[(1040), float64] */;
  %801 = cast(meta[relay.Constant][45] /* ty=Tensor[(1056), float64] */, dtype="float64") /* ty=Tensor[(1056), float64] */;
  %802 = cast(%791, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %803 = reshape(%799, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float64] */;
  %804 = reshape(%800, newshape=[16, 13, 5]) /* ty=Tensor[(16, 13, 5), float64] */;
  %805 = reshape(%801, newshape=[1056]) /* ty=Tensor[(1056), float64] */;
  %806 = reshape(%802, newshape=[900]) /* ty=Tensor[(900), uint8] */;
  %807 = @func_3528(%803, %804, %805, %806) /* ty=(Tensor[(16, 13, 5), float64], Tensor[(11, 12, 8), bool], Tensor[(1056), float64], Tensor[(16, 13, 5), bool], Tensor[(16, 13, 5), float32], Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(160), uint16], Tensor[(21, 4), float32]) */;
  %808 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %809 = %808.1;
  %810 = cast(%809, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %811 = sinh(%810) /* ty=Tensor[(11, 104), float64] */;
  %812 = cast(%811, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %813 = sin(%812) /* ty=Tensor[(11, 104), float64] */;
  %814 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %815 = %814.1;
  %816 = cast(%815, dtype="float64") /* ty=Tensor[(11, 104), float64] */;
  %817 = cos(%816) /* ty=Tensor[(11, 104), float64] */;
  %818 = cast(%815, dtype="int32") /* ty=Tensor[(11, 104), int32] */;
  %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(2), int32] */;
  %820 = cast(%817, dtype="int32") /* ty=Tensor[(11, 104), int32] */;
  %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?), int32] */;
  %822 = minimum(%820, %821) /* ty=Tensor[(11, 104), int32] */;
  %823 = cast(%822, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %824 = shape_of(%813, dtype="int32") /* ty=Tensor[(2), int32] */;
  %825 = cast(%813, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %826 = dyn.reshape(%823, %824, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %827 = cast(%817, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
  %828 = log2(%827) /* ty=Tensor[(11, 104), float32] */;
  %829 = cast(%828, dtype="uint64") /* ty=Tensor[(11, 104), uint64] */;
  %830 = shape_of(%811, dtype="int32") /* ty=Tensor[(2), int32] */;
  %831 = cast(%811, dtype="uint64") /* ty=Tensor[(11, 104), uint64] */;
  %832 = dyn.reshape(%829, %830, newshape=[]) /* ty=Tensor[(?, ?), uint64] */;
  %833 = left_shift(%831, %832) /* ty=Tensor[(11, 104), uint64] */;
  %834 = cast(%var_6368, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %835 = shape_of(%833, dtype="int32") /* ty=Tensor[(2), int32] */;
  %836 = cast(%833, dtype="bool") /* ty=Tensor[(11, 104), bool] */;
  %837 = dyn.reshape(%834, %835, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %838 = cast(%822, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
  %839 = %790.0;
  %840 = %798.1;
  %841 = %807.5;
  %842 = less_equal(%825, %826) /* ty=Tensor[(11, 104), bool] */;
  %843 = equal(%836, %837) /* ty=Tensor[(11, 104), bool] */;
  %844 = rsqrt(%838) /* ty=Tensor[(11, 104), float32] */;
  (%791, %839, meta[relay.Constant][42] /* ty=Tensor[(160), uint16] */, meta[relay.Constant][43] /* ty=Tensor[(462), bool] */, %795, %840, %841, meta[relay.Constant][44] /* ty=Tensor[(1040), float64] */, meta[relay.Constant][45] /* ty=Tensor[(1056), float64] */, %842, %843, %844)
}

def @func_6788() -> (Tensor[(10, 11, 5), int16], Tensor[(900), uint8]) {
  @func_6786() /* ty=(Tensor[(10, 11, 5), int16], Tensor[(900), uint8]) */
}

def @func_345(%var_344: Tensor[(10, 6, 15), uint8]) -> (Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) {
  %860 = fn (%var_326: Tensor[(10, 6, 15), uint8]) -> (Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) {
    %845 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 6, 15), uint8] */, dtype="bool") /* ty=Tensor[(10, 6, 15), bool] */;
    %846 = shape_of(%var_326, dtype="int32") /* ty=Tensor[(3), int32] */;
    %847 = cast(%var_326, dtype="bool") /* ty=Tensor[(10, 6, 15), bool] */;
    %848 = dyn.reshape(%845, %846, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %849 = cast(meta[relay.Constant][47] /* ty=Tensor[(21, 4), int16] */, dtype="int16") /* ty=Tensor[(21, 4), int16] */;
    %850 = cast(meta[relay.Constant][47] /* ty=Tensor[(21, 4), int16] */, dtype="int16") /* ty=Tensor[(21, 4), int16] */;
    %851 = cast(meta[relay.Constant][47] /* ty=Tensor[(21, 4), int16] */, dtype="int16") /* ty=Tensor[(21, 4), int16] */;
    %852 = reshape(%849, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %853 = reshape(%850, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %854 = reshape(%851, newshape=[3, 14, 2]) /* ty=Tensor[(3, 14, 2), int16] */;
    %855 = @func_223(%852, %853, %854) /* ty=(Tensor[(3, 14, 2), float32], Tensor[(3, 14, 2), float64], Tensor[(3, 14, 2), float32]) */;
    %856 = cast(meta[relay.Constant][47] /* ty=Tensor[(21, 4), int16] */, dtype="float64") /* ty=Tensor[(21, 4), float64] */;
    %857 = less(%847, %848) /* ty=Tensor[(10, 6, 15), bool] */;
    %858 = %855.2;
    %859 = acosh(%856) /* ty=Tensor[(21, 4), float64] */;
    (%857, %858, %859)
  };
  %860(%var_344) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */
}

def @func_8557() -> (Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  %861 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %862 = @func_5752() /* ty=(Tensor[(900), uint8],) */;
  %863 = %861.0;
  %864 = %862.0;
  (%863, %864)
}

def @func_4667() -> Tensor[(3, 14, 2), float32] {
  @func_4665() /* ty=Tensor[(3, 14, 2), float32] */
}

def @func_1064(%var_1062: Tensor[(11, 8, 13), float32], %var_1063: Tensor[(11, 8, 13), float32]) -> Tensor[(11, 8, 13), float32] {
  %869 = fn (%var_1052: Tensor[(11, 8, 13), float32], %var_1053: Tensor[(11, 8, 13), float32]) -> Tensor[(11, 8, 13), float32] {
    %865 = cast(%var_1053, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
    %866 = shape_of(%var_1052, dtype="int32") /* ty=Tensor[(3), int32] */;
    %867 = cast(%var_1052, dtype="float32") /* ty=Tensor[(11, 8, 13), float32] */;
    %868 = dyn.reshape(%865, %866, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    floor_divide(%867, %868) /* ty=Tensor[(11, 8, 13), float32] */
  };
  %869(%var_1062, %var_1063) /* ty=Tensor[(11, 8, 13), float32] */
}

def @func_7555(%var_7553: Tensor[(3, 13, 5), int8], %var_7554: Tensor[(160), uint16]) -> (Tensor[(3, 13, 5), int8], Tensor[(84), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
  %881 = fn (%var_7508: Tensor[(3, 13, 5), int8], %var_7529: Tensor[(160), uint16]) -> (Tensor[(3, 13, 5), int8], Tensor[(84), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) {
    %870 = cast(%var_7508, dtype="int8") /* ty=Tensor[(3, 13, 5), int8] */;
    %871 = shape_of(meta[relay.Constant][48] /* ty=Tensor[(3, 13, 5), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %872 = cast(meta[relay.Constant][48] /* ty=Tensor[(3, 13, 5), int8] */, dtype="int8") /* ty=Tensor[(3, 13, 5), int8] */;
    %873 = dyn.reshape(%870, %871, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %874 = @func_4262() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
    %875 = cast(%var_7529, dtype="uint16") /* ty=Tensor[(160), uint16] */;
    %876 = reshape(%875, newshape=[160]) /* ty=Tensor[(160), uint16] */;
    %877 = @func_4393(%876) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
    %878 = right_shift(%872, %873) /* ty=Tensor[(3, 13, 5), int8] */;
    %879 = %874.0;
    %880 = %877.1;
    (%878, %879, %880, %var_7529)
  };
  %881(%var_7553, %var_7554) /* ty=(Tensor[(3, 13, 5), int8], Tensor[(84), int16], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */
}

def @func_8746() -> (Tensor[(77, 6), float32], Tensor[(11, 12, 8), float64]) {
  %882 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %883 = %882.2;
  %884 = @func_5986() /* ty=Tensor[(11, 12, 8), float64] */;
  (%883, %884)
}

def @func_6940() -> (Tensor[(900), uint8],) {
  %886 = fn () -> (Tensor[(900), uint8],) {
    %885 = @func_3938() /* ty=Tensor[(900), uint8] */;
    (%885,)
  };
  %886() /* ty=(Tensor[(900), uint8],) */
}

def @func_5558() -> (Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) {
  %890 = fn () -> (Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) {
    %887 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %888 = @func_3863() /* ty=Tensor[(900), uint8] */;
    %889 = %887.0;
    (%888, %889)
  };
  %890() /* ty=(Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) */
}

def @func_8129() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  @func_8127() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) */
}

def @func_5002(%var_5000: Tensor[(55, 10), int16], %var_5001: Tensor[(160), uint16]) -> (Tensor[(55, 10), uint8], Tensor[(240), uint8], Tensor[(160), uint16], Tensor[(240), uint8]) {
  @func_4998(%var_5000, %var_5001) /* ty=(Tensor[(55, 10), uint8], Tensor[(240), uint8], Tensor[(160), uint16], Tensor[(240), uint8]) */
}

def @func_7273() -> (Tensor[(84), int16], Tensor[(10, 11, 5), int16]) {
  %891 = @func_4191() /* ty=(Tensor[(84), int16],) */;
  %892 = @func_6039() /* ty=(Tensor[(10, 11, 5), int16],) */;
  %893 = %891.0;
  %894 = %892.0;
  (%893, %894)
}

def @func_6515(%var_6512: Tensor[(1144), float32]) -> (Tensor[(84), int16], Tensor[(900), uint8], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(1, 160), uint16], Tensor[(11, 12, 8), float64], Tensor[(1144), float32]) {
  %895 = @func_4241() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %896 = @func_5673() /* ty=(Tensor[(900), uint8], Tensor[(84), int16]) */;
  %897 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %898 = cast(meta[relay.Constant][49] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
  %899 = reshape(%898, newshape=[160]) /* ty=Tensor[(160), uint16] */;
  %900 = @func_2853(%899) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900, 1), uint8], Tensor[(1, 210), float32], Tensor[(2, 5, 16), bool], Tensor[(160), uint16]) */;
  %901 = cast(%var_6512, dtype="float32") /* ty=Tensor[(1144), float32] */;
  %902 = reshape(%901, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
  %903 = @func_2607(%902) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
  %904 = %895.0;
  %905 = %896.0;
  %906 = %897.0;
  %907 = %900.0;
  %908 = %903.0;
  (%904, %905, %906, %907, meta[relay.Constant][49] /* ty=Tensor[(1, 160), uint16] */, %908, %var_6512)
}

def @func_5925(%var_5923: Tensor[(240), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 12, 2), bool], Tensor[(240), uint8]) {
  %909 = @func_4179() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %910 = %909.0;
  %911 = cast(%910, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %912 = cast(%var_5923, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %913 = cast(%var_5923, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %914 = reshape(%912, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %915 = reshape(%913, newshape=[10, 12, 2]) /* ty=Tensor[(10, 12, 2), uint8] */;
  %916 = atan(%911) /* ty=Tensor[(11, 12, 8), float64] */;
  %917 = @func_723(%914, %915) /* ty=Tensor[(10, 12, 2), bool] */;
  (%916, %917, %var_5923)
}

def @func_1629(%var_1624: Tensor[(2, 5, 16), uint16]) -> (Tensor[(2, 5, 16), bool],) {
  %918 = cast(meta[relay.Constant][50] /* ty=Tensor[(2, 5, 16), uint16] */, dtype="bool") /* ty=Tensor[(2, 5, 16), bool] */;
  %919 = shape_of(%var_1624, dtype="int32") /* ty=Tensor[(3), int32] */;
  %920 = cast(%var_1624, dtype="bool") /* ty=Tensor[(2, 5, 16), bool] */;
  %921 = dyn.reshape(%918, %919, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %922 = greater_equal(%920, %921) /* ty=Tensor[(2, 5, 16), bool] */;
  (%922,)
}

def @func_7893() -> Tensor[(900), float64] {
  %923 = @func_7755() /* ty=Tensor[(900), uint8] */;
  %924 = cast(%923, dtype="float64") /* ty=Tensor[(900), float64] */;
  exp(%924) /* ty=Tensor[(900), float64] */
}

def @func_6558() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) {
  %928 = fn () -> (Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) {
    %925 = @func_5557() /* ty=(Tensor[(900), uint8], Tensor[(11, 12, 8), float64]) */;
    %926 = @func_5287() /* ty=Tensor[(11, 12, 8), float64] */;
    %927 = %925.1;
    (%926, %927)
  };
  %928() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */
}

def @func_4262() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64]) {
  %929 = @func_2864() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %930 = @func_3895() /* ty=Tensor[(84), int16] */;
  %931 = %929.0;
  (%930, %931)
}

def @func_1780(%var_1766: Tensor[(5, 14, 3), float64]) -> (Tensor[(10, 6, 15), bool], Tensor[(900, 1), uint8], Tensor[(5, 14, 3), bool]) {
  %932 = cast(meta[relay.Constant][51] /* ty=Tensor[(900, 1), uint8] */, dtype="uint8") /* ty=Tensor[(900, 1), uint8] */;
  %933 = reshape(%932, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %934 = @func_343(%933) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %935 = cast(meta[relay.Constant][52] /* ty=Tensor[(5, 14, 3), float64] */, dtype="float64") /* ty=Tensor[(5, 14, 3), float64] */;
  %936 = log(%935) /* ty=Tensor[(5, 14, 3), float64] */;
  %937 = cast(%var_1766, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %938 = shape_of(%936, dtype="int32") /* ty=Tensor[(3), int32] */;
  %939 = cast(%936, dtype="bool") /* ty=Tensor[(5, 14, 3), bool] */;
  %940 = dyn.reshape(%937, %938, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %941 = %934.0;
  %942 = greater_equal(%939, %940) /* ty=Tensor[(5, 14, 3), bool] */;
  (%941, meta[relay.Constant][51] /* ty=Tensor[(900, 1), uint8] */, %942)
}

def @func_3192(%var_3190: Tensor[(24, 10), uint8], %var_3191: Tensor[(24, 10), uint8]) -> (Tensor[(4, 40), uint8], Tensor[(1, 160), uint16], Tensor[(24, 10), int8], Tensor[(10, 11, 5), uint16]) {
  %963 = fn (%var_3127: Tensor[(24, 10), uint8], %var_3154: Tensor[(24, 10), uint8]) -> (Tensor[(4, 40), uint8], Tensor[(1, 160), uint16], Tensor[(24, 10), int8], Tensor[(10, 11, 5), uint16]) {
    %943 = cast(meta[relay.Constant][53] /* ty=Tensor[(1, 160), uint16] */, dtype="uint16") /* ty=Tensor[(1, 160), uint16] */;
    %944 = cast(%var_3127, dtype="uint8") /* ty=Tensor[(24, 10), uint8] */;
    %945 = reshape(%943, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
    %946 = reshape(%944, newshape=[240]) /* ty=Tensor[(240), uint8] */;
    %947 = @func_2306(%945, %946) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
    %948 = cast(%var_3154, dtype="int8") /* ty=Tensor[(24, 10), int8] */;
    %949 = shape_of(%var_3127, dtype="int32") /* ty=Tensor[(2), int32] */;
    %950 = cast(%var_3127, dtype="int8") /* ty=Tensor[(24, 10), int8] */;
    %951 = dyn.reshape(%948, %949, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
    %952 = @func_2976() /* ty=(Tensor[(10, 11, 5), int16],) */;
    %953 = %952.0;
    %954 = cast(%953, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
    %955 = sigmoid(%954) /* ty=Tensor[(10, 11, 5), float64] */;
    %956 = cast(%953, dtype="uint16") /* ty=Tensor[(10, 11, 5), uint16] */;
    %957 = shape_of(%955, dtype="int32") /* ty=Tensor[(3), int32] */;
    %958 = cast(%955, dtype="uint16") /* ty=Tensor[(10, 11, 5), uint16] */;
    %959 = dyn.reshape(%956, %957, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %960 = %947.3;
    %961 = logical_xor(%950, %951) /* ty=Tensor[(24, 10), int8] */;
    %962 = multiply(%958, %959) /* ty=Tensor[(10, 11, 5), uint16] */;
    (%960, meta[relay.Constant][53] /* ty=Tensor[(1, 160), uint16] */, %961, %962)
  };
  %963(%var_3190, %var_3191) /* ty=(Tensor[(4, 40), uint8], Tensor[(1, 160), uint16], Tensor[(24, 10), int8], Tensor[(10, 11, 5), uint16]) */
}

def @func_8057(%var_8056: Tensor[(10, 11, 5), int16]) -> (Tensor[(10, 11, 5), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16]) {
  %975 = fn (%var_8023: Tensor[(10, 11, 5), int16]) -> (Tensor[(10, 11, 5), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16]) {
    %964 = @func_2332() /* ty=Tensor[(10, 11, 5), int16] */;
    %965 = cast(%var_8023, dtype="bool") /* ty=Tensor[(10, 11, 5), bool] */;
    %966 = shape_of(%964, dtype="int32") /* ty=Tensor[(3), int32] */;
    %967 = cast(%964, dtype="bool") /* ty=Tensor[(10, 11, 5), bool] */;
    %968 = dyn.reshape(%965, %966, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %969 = greater_equal(%967, %968) /* ty=Tensor[(10, 11, 5), bool] */;
    %970 = cast(%969, dtype="float64") /* ty=Tensor[(10, 11, 5), float64] */;
    %971 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
    %972 = log(%970) /* ty=Tensor[(10, 11, 5), float64] */;
    %973 = @func_3938() /* ty=Tensor[(900), uint8] */;
    %974 = %971.1;
    (%972, %973, %974)
  };
  %975(%var_8056) /* ty=(Tensor[(10, 11, 5), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16]) */
}

def @func_8396(%var_8373: Tensor[(240), uint8]) -> (Tensor[(11, 12, 8), float64], Tensor[(10, 6, 15), bool], Tensor[(900), uint8], Tensor[(240), uint8], Tensor[(4, 40), uint16], Tensor[(240), uint8]) {
  %976 = @func_5986() /* ty=Tensor[(11, 12, 8), float64] */;
  %977 = cast(%976, dtype="float64") /* ty=Tensor[(11, 12, 8), float64] */;
  %978 = cast(meta[relay.Constant][54] /* ty=Tensor[(900), uint8] */, dtype="uint8") /* ty=Tensor[(900), uint8] */;
  %979 = reshape(%978, newshape=[10, 6, 15]) /* ty=Tensor[(10, 6, 15), uint8] */;
  %980 = @func_343(%979) /* ty=(Tensor[(10, 6, 15), bool], Tensor[(3, 14, 2), float32], Tensor[(21, 4), float64]) */;
  %981 = cast(meta[relay.Constant][55] /* ty=Tensor[(4, 40), uint16] */, dtype="uint16") /* ty=Tensor[(4, 40), uint16] */;
  %982 = cast(%var_8373, dtype="uint8") /* ty=Tensor[(240), uint8] */;
  %983 = reshape(%981, newshape=[4, 40]) /* ty=Tensor[(4, 40), uint16] */;
  %984 = reshape(%982, newshape=[240]) /* ty=Tensor[(240), uint8] */;
  %985 = @func_2306(%983, %984) /* ty=(Tensor[(10, 11, 5), int16], Tensor[(10, 12, 2), bool], Tensor[(240), uint8], Tensor[(4, 40), uint8]) */;
  %986 = acos(%977) /* ty=Tensor[(11, 12, 8), float64] */;
  %987 = %980.0;
  %988 = %985.2;
  (%986, %987, meta[relay.Constant][54] /* ty=Tensor[(900), uint8] */, %988, meta[relay.Constant][55] /* ty=Tensor[(4, 40), uint16] */, %var_8373)
}

def @func_4243() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64]) {
  @func_4241() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */
}

def @func_4241() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64]) {
  %989 = @func_4208() /* ty=(Tensor[(84), int16],) */;
  %990 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %991 = %989.0;
  %992 = %990.0;
  (%991, %992)
}

def @func_4193() -> (Tensor[(84), int16],) {
  @func_4191() /* ty=(Tensor[(84), int16],) */
}

def @func_8503() -> (Tensor[(77, 6), uint16],) {
  %1000 = fn () -> (Tensor[(77, 6), uint16],) {
    %993 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
    %994 = %993.3;
    %995 = cast(meta[relay.Constant][56] /* ty=Tensor[(77, 6), uint64] */, dtype="uint16") /* ty=Tensor[(77, 6), uint16] */;
    %996 = shape_of(%994, dtype="int32") /* ty=Tensor[(2), int32] */;
    %997 = cast(%994, dtype="uint16") /* ty=Tensor[(77, 6), uint16] */;
    %998 = dyn.reshape(%995, %996, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
    %999 = bitwise_or(%997, %998) /* ty=Tensor[(77, 6), uint16] */;
    (%999,)
  };
  %1000() /* ty=(Tensor[(77, 6), uint16],) */
}

def @func_5753() -> (Tensor[(900), uint8],) {
  %1002 = fn () -> (Tensor[(900), uint8],) {
    %1001 = @func_3938() /* ty=Tensor[(900), uint8] */;
    (%1001,)
  };
  %1002() /* ty=(Tensor[(900), uint8],) */
}

def @func_8443() -> (Tensor[(84), int16],) {
  @func_8441() /* ty=(Tensor[(84), int16],) */
}

def @func_8906() -> (Tensor[(11, 12, 8), float64], Tensor[(84), int16]) {
  %1003 = @func_7183() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) */;
  %1004 = @func_4241() /* ty=(Tensor[(84), int16], Tensor[(11, 12, 8), float64]) */;
  %1005 = %1003.0;
  %1006 = %1004.0;
  (%1005, %1006)
}

def @func_8836(%var_8830: Tensor[(13, 3, 13), int64], %var_8831: Tensor[(13, 3, 13), int64]) -> (Tensor[(13, 3, 13), int64],) {
  %1007 = cast(%var_8831, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
  %1008 = shape_of(%var_8830, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1009 = cast(%var_8830, dtype="int64") /* ty=Tensor[(13, 3, 13), int64] */;
  %1010 = dyn.reshape(%1007, %1008, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %1011 = bitwise_or(%1009, %1010) /* ty=Tensor[(13, 3, 13), int64] */;
  (%1011,)
}

def @func_6144(%var_6142: Tensor[(12, 13, 8), uint8], %var_6143: Tensor[(12, 13, 8), uint8]) -> Tensor[(12, 13, 8), uint8] {
  %1016 = fn (%var_6133: Tensor[(12, 13, 8), uint8], %var_6134: Tensor[(12, 13, 8), uint8]) -> Tensor[(12, 13, 8), uint8] {
    %1012 = cast(%var_6134, dtype="uint8") /* ty=Tensor[(12, 13, 8), uint8] */;
    %1013 = shape_of(%var_6133, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1014 = cast(%var_6133, dtype="uint8") /* ty=Tensor[(12, 13, 8), uint8] */;
    %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
    minimum(%1014, %1015) /* ty=Tensor[(12, 13, 8), uint8] */
  };
  %1016(%var_6142, %var_6143) /* ty=Tensor[(12, 13, 8), uint8] */
}

def @func_3939() -> Tensor[(900), uint8] {
  %1017 = fn () -> Tensor[(900), uint8] {
    @func_3863() /* ty=Tensor[(900), uint8] */
  };
  %1017() /* ty=Tensor[(900), uint8] */
}

def @func_8861() -> (Tensor[(11, 12, 8), float64],) {
  %1020 = fn () -> (Tensor[(11, 12, 8), float64],) {
    %1018 = @func_6557() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64]) */;
    %1019 = %1018.0;
    (%1019,)
  };
  %1020() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_3293(%var_3280: Tensor[(11, 12, 8), float64]) -> (Tensor[(11, 12, 8), bool], Tensor[(11, 12, 8), uint64]) {
  %1021 = @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %1022 = %1021.0;
  %1023 = cast(meta[relay.Constant][57] /* ty=Tensor[(11, 12, 8), float64] */, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
  %1024 = shape_of(%1022, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1025 = cast(%1022, dtype="bool") /* ty=Tensor[(11, 12, 8), bool] */;
  %1026 = dyn.reshape(%1023, %1024, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1027 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
  %1028 = %1027.0;
  %1029 = cast(%var_3280, dtype="uint64") /* ty=Tensor[(11, 12, 8), uint64] */;
  %1030 = shape_of(%1028, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1031 = cast(%1028, dtype="uint64") /* ty=Tensor[(11, 12, 8), uint64] */;
  %1032 = dyn.reshape(%1029, %1030, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1033 = logical_or(%1025, %1026) /* ty=Tensor[(11, 12, 8), bool] */;
  %1034 = right_shift(%1031, %1032) /* ty=Tensor[(11, 12, 8), uint64] */;
  (%1033, %1034)
}

def @func_2436() -> (Tensor[(11, 12, 8), float64],) {
  @func_2434() /* ty=(Tensor[(11, 12, 8), float64],) */
}

def @func_2333() -> Tensor[(10, 11, 5), int16] {
  %1036 = fn () -> Tensor[(10, 11, 5), int16] {
    %1035 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
    %1035.1
  };
  %1036() /* ty=Tensor[(10, 11, 5), int16] */
}

def @func_5050(%var_5048: Tensor[(550), int16]) -> (Tensor[(900), uint8], Tensor[(900, 1), uint8], Tensor[(160), uint16], Tensor[(10, 11, 5), int16], Tensor[(550), int16]) {
  @func_5047(%var_5048) /* ty=(Tensor[(900), uint8], Tensor[(900, 1), uint8], Tensor[(160), uint16], Tensor[(10, 11, 5), int16], Tensor[(550), int16]) */
}

def @func_5373() -> (Tensor[(84), int16],) {
  %1039 = fn () -> (Tensor[(84), int16],) {
    %1037 = @func_4191() /* ty=(Tensor[(84), int16],) */;
    %1038 = %1037.0;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(84), int16],) */
}

def @func_5188() -> (Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) {
  %1051 = fn () -> (Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) {
    %1040 = @func_3037() /* ty=(Tensor[(11, 12, 8), float64],) */;
    %1041 = cast(meta[relay.Constant][58] /* ty=Tensor[(11, 104), float32] */, dtype="float32") /* ty=Tensor[(11, 104), float32] */;
    %1042 = reshape(%1041, newshape=[286, 4]) /* ty=Tensor[(286, 4), float32] */;
    %1043 = @func_4700(%1042) /* ty=(Tensor[(77, 6), uint64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(3, 14, 2), float32]) */;
    %1044 = %1043.0;
    %1045 = cast(meta[relay.Constant][59] /* ty=Tensor[(77, 6), uint64] */, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
    %1046 = shape_of(%1044, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1047 = cast(%1044, dtype="float32") /* ty=Tensor[(77, 6), float32] */;
    %1048 = dyn.reshape(%1045, %1046, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1049 = %1040.0;
    %1050 = power(%1047, %1048) /* ty=Tensor[(77, 6), float32] */;
    (%1049, meta[relay.Constant][58] /* ty=Tensor[(11, 104), float32] */, %1050)
  };
  %1051() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */
}

def @func_8437(%var_8435: Tensor[(550), int16], %var_8436: Tensor[(2, 80), uint16]) -> (Tensor[(84), int16], Tensor[(160), uint16], Tensor[(550), int16], Tensor[(2, 80), uint16]) {
  @func_8433(%var_8435, %var_8436) /* ty=(Tensor[(84), int16], Tensor[(160), uint16], Tensor[(550), int16], Tensor[(2, 80), uint16]) */
}

def @func_7757() -> Tensor[(900), uint8] {
  @func_7755() /* ty=Tensor[(900), uint8] */
}

def @func_8908() -> (Tensor[(11, 12, 8), float64], Tensor[(84), int16]) {
  @func_8906() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(84), int16]) */
}

def @func_7362() -> Tensor[(900), uint8] {
  %1052 = @func_6939() /* ty=(Tensor[(900), uint8],) */;
  %1052.0
}

def @func_4702(%var_4701: Tensor[(286, 4), float32]) -> (Tensor[(77, 6), uint64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(3, 14, 2), float32]) {
  %1061 = fn (%var_4686: Tensor[(286, 4), float32]) -> (Tensor[(77, 6), uint64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(3, 14, 2), float32]) {
    %1053 = @func_4297() /* ty=(Tensor[(900), uint8], Tensor[(2, 5, 16), bool], Tensor[(1, 154), uint64], Tensor[(77, 6), uint64]) */;
    %1054 = cast(%var_4686, dtype="float32") /* ty=Tensor[(286, 4), float32] */;
    %1055 = reshape(%1054, newshape=[1144]) /* ty=Tensor[(1144), float32] */;
    %1056 = @func_2607(%1055) /* ty=(Tensor[(11, 12, 8), float64], Tensor[(900), uint8], Tensor[(10, 11, 5), int16], Tensor[(210), float64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(1144), float32]) */;
    %1057 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
    %1058 = %1053.3;
    %1059 = %1056.4;
    %1060 = %1057.1;
    (%1058, %1059, %var_4686, %1060)
  };
  %1061(%var_4701) /* ty=(Tensor[(77, 6), uint64], Tensor[(10, 6, 15), float32], Tensor[(286, 4), float32], Tensor[(3, 14, 2), float32]) */
}

def @func_4665() -> Tensor[(3, 14, 2), float32] {
  %1062 = @func_2175() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(3, 14, 2), float32], Tensor[(84), int16]) */;
  %1062.1
}

def @func_8127() -> (Tensor[(84), int16], Tensor[(11, 12, 8), float64], Tensor[(900), uint8]) {
  %1063 = @func_7733() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float64], Tensor[(11, 12, 8), float32], Tensor[(84), int16]) */;
  %1064 = @func_5187() /* ty=(Tensor[(11, 12, 8), float64], Tensor[(11, 104), float32], Tensor[(77, 6), float32]) */;
  %1065 = @func_6939() /* ty=(Tensor[(900), uint8],) */;
  %1066 = %1063.3;
  %1067 = %1064.0;
  %1068 = %1065.0;
  (%1066, %1067, %1068)
}

def @func_5415(%var_5414: Tensor[(10, 11, 5), int16]) -> (Tensor[(10, 11, 5), int16],) {
  %1076 = fn (%var_5406: Tensor[(10, 11, 5), int16]) -> (Tensor[(10, 11, 5), int16],) {
    %1069 = @func_2258() /* ty=(Tensor[(3, 14, 2), float32], Tensor[(10, 11, 5), int16], Tensor[(55, 10), int16], Tensor[(900), uint8]) */;
    %1070 = %1069.1;
    %1071 = cast(%var_5406, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
    %1072 = shape_of(%1070, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1073 = cast(%1070, dtype="int16") /* ty=Tensor[(10, 11, 5), int16] */;
    %1074 = dyn.reshape(%1071, %1072, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %1075 = maximum(%1073, %1074) /* ty=Tensor[(10, 11, 5), int16] */;
    (%1075,)
  };
  %1076(%var_5414) /* ty=(Tensor[(10, 11, 5), int16],) */
}

def @func_7024(%var_7023: int64) -> (Tensor[(6, 1, 13), int64],) {
  %1080 = fn (%var_7016: int64) -> (Tensor[(6, 1, 13), int64],) {
    %1077 = cast(%var_7016, dtype="int64") /* ty=int64 */;
    %1078 = cast(meta[relay.Constant][60] /* ty=Tensor[(6, 1, 13), int64] */, dtype="int64") /* ty=Tensor[(6, 1, 13), int64] */;
    %1079 = bitwise_xor(%1077, %1078) /* ty=Tensor[(6, 1, 13), int64] */;
    (%1079,)
  };
  %1080(%var_7023) /* ty=(Tensor[(6, 1, 13), int64],) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */the function is provided too many arguments expected 1, found 3

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

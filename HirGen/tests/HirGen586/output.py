import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_147 = relay.var("var_147", dtype = "int16", shape = (3, 14, 2))#candidate|147|(3, 14, 2)|var|int16
var_148 = relay.var("var_148", dtype = "int16", shape = (3, 14, 2))#candidate|148|(3, 14, 2)|var|int16
bop_149 = relay.less_equal(var_147.astype('bool'), relay.reshape(var_148.astype('bool'), relay.shape_of(var_147))) # shape=(3, 14, 2)
uop_154 = relay.tan(bop_149.astype('float32')) # shape=(3, 14, 2)
uop_162 = relay.acos(uop_154.astype('float32')) # shape=(3, 14, 2)
uop_183 = relay.exp(uop_154.astype('float64')) # shape=(3, 14, 2)
uop_194 = relay.sqrt(uop_183.astype('float64')) # shape=(3, 14, 2)
var_206 = relay.var("var_206", dtype = "int16", shape = (3, 14, 2))#candidate|206|(3, 14, 2)|var|int16
bop_207 = relay.divide(var_147.astype('float32'), relay.reshape(var_206.astype('float32'), relay.shape_of(var_147))) # shape=(3, 14, 2)
output = relay.Tuple([uop_162,uop_194,bop_207,])
output2 = relay.Tuple([uop_162,uop_194,bop_207,])
func_223 = relay.Function([var_147,var_148,var_206,], output)
mod['func_223'] = func_223
mod = relay.transform.InferType()(mod)
var_224 = relay.var("var_224", dtype = "int16", shape = (3, 14, 2))#candidate|224|(3, 14, 2)|var|int16
var_225 = relay.var("var_225", dtype = "int16", shape = (3, 14, 2))#candidate|225|(3, 14, 2)|var|int16
var_226 = relay.var("var_226", dtype = "int16", shape = (3, 14, 2))#candidate|226|(3, 14, 2)|var|int16
output = func_223(var_224,var_225,var_226,)
func_227 = relay.Function([var_224,var_225,var_226,], output)
mutated_mod['func_227'] = func_227
mutated_mod = relay.transform.InferType()(mutated_mod)
var_326 = relay.var("var_326", dtype = "uint8", shape = (10, 6, 15))#candidate|326|(10, 6, 15)|var|uint8
const_327 = relay.const([[[-8,3,3,-9,8,-7,4,-1,-8,-4,-6,-10,2,4,7],[-10,-2,-3,8,9,3,-5,5,7,1,-4,-2,6,4,2],[7,-8,-6,-5,5,2,-1,-9,3,2,5,2,4,-3,-7],[2,8,-4,-1,9,-2,5,8,-2,10,-6,1,4,6,-4],[2,-1,-5,5,6,1,-6,3,-10,6,8,5,-2,5,-6],[-2,-6,-9,8,7,9,-3,-6,-9,-1,6,-9,-1,2,6]],[[6,6,-1,-2,-2,-4,-9,-8,-1,-1,3,4,-10,10,2],[2,6,-1,-5,-7,-2,-10,5,-5,-4,-1,-6,9,-9,-10],[7,-8,-9,3,1,-3,-2,-5,-10,5,9,-2,-10,-2,2],[-1,-3,-5,7,-8,-9,-3,-3,-7,-1,8,-10,-6,5,-3],[-2,-9,3,-7,3,1,4,2,4,-4,-6,6,5,8,10],[9,6,-6,2,-9,7,-7,-4,2,-10,3,-9,2,1,-5]],[[3,-2,4,8,-1,10,-9,-1,-8,10,-7,6,2,-1,-9],[-3,-4,3,-4,1,10,-5,10,1,-7,8,6,2,-3,10],[-3,6,9,-3,-10,10,8,8,-9,8,2,2,1,5,-8],[7,9,7,5,-2,-4,5,-8,-2,6,3,-7,5,10,3],[6,-9,5,2,6,5,6,6,6,1,7,9,10,5,7],[-9,-9,-9,-4,6,-7,-4,4,-7,7,4,1,-1,9,-2]],[[-3,1,-9,10,-1,7,-1,1,10,-8,5,4,-5,-10,8],[-1,4,7,-2,9,3,-1,7,-10,1,8,9,-5,-5,-9],[6,-8,-3,4,-1,-9,8,-9,-6,-4,8,-5,1,1,5],[-3,-1,-9,-5,2,-5,10,-2,8,9,-7,5,-2,-3,4],[-5,7,7,4,9,8,6,-9,7,8,-1,-1,-8,3,-7],[9,4,-10,4,-5,-10,8,8,-4,-5,9,9,2,-4,-1]],[[2,5,-8,10,-8,6,5,4,3,8,-10,6,6,9,5],[-1,1,-6,10,10,9,6,2,-9,7,5,-2,-9,2,-10],[-7,5,-6,7,-5,6,5,-1,-3,5,6,9,2,-8,-5],[1,-9,2,-7,3,-9,9,-4,-2,9,-9,7,2,-6,-6],[-7,7,-5,-1,-1,4,7,4,4,-8,-3,-5,-5,-2,7],[3,6,10,-10,-2,7,-9,-1,-4,8,5,1,4,9,8]],[[-5,-8,3,-10,8,4,-10,-10,7,-6,-7,10,5,5,-1],[7,-4,-7,-4,-1,-1,-10,9,3,-5,5,-2,-10,-9,10],[-8,6,-6,2,-9,2,10,-10,3,7,2,8,6,-2,6],[3,-3,-7,-1,6,-4,2,4,4,-5,3,-4,-5,10,-3],[1,10,6,-10,-8,1,-9,-7,4,10,4,-9,4,-9,1],[-3,-10,8,-2,-7,9,4,10,10,-3,-1,2,5,4,-2]],[[-6,1,8,3,10,-2,-7,-6,10,-9,6,9,-2,6,6],[2,5,-7,-3,-4,-10,1,-5,-4,-2,-7,5,-8,10,-2],[6,-8,9,3,-8,6,-1,5,3,10,-4,-4,1,-5,-8],[7,3,4,-3,-8,1,-8,3,10,-3,-1,-5,6,-9,-7],[8,-10,1,6,10,-4,-10,-5,4,-8,4,-5,-4,-7,4],[9,-9,-4,4,4,-6,5,9,-8,5,-3,3,2,-1,-10]],[[4,-8,10,-3,3,-8,-6,-4,5,1,6,-3,-1,8,-3],[-8,10,9,-7,-4,-2,9,7,6,-3,-6,-8,-2,3,5],[-10,2,-1,10,3,-10,8,4,1,9,-4,7,-5,5,10],[-3,-4,-2,4,-5,-8,4,2,-1,-8,9,7,-6,-4,10],[2,6,-6,3,2,9,-2,-4,-10,9,7,-2,5,-7,-10],[3,-8,-7,9,6,-7,1,-7,4,-2,-7,-3,3,6,7]],[[5,-9,-10,9,8,1,10,5,-7,-7,3,5,-1,-4,-8],[-7,10,8,-2,-9,2,-6,-2,-10,-3,5,10,-4,10,-10],[-10,1,-2,-1,-6,7,-2,2,5,10,-8,-3,-7,-9,-6],[3,-7,5,-5,-6,-9,-3,-5,5,-7,-7,2,-5,-7,-5],[-5,-9,5,6,2,-5,6,-2,-10,-10,-1,-4,-6,-1,-5],[-10,-7,5,-2,-3,4,5,-5,2,3,-4,10,9,-9,3]],[[-9,4,-9,-9,3,-9,-10,-8,1,-2,-3,-9,6,-1,8],[-1,-4,-2,-6,-7,-3,-8,1,1,6,-6,-10,2,-3,-5],[4,2,2,4,-7,9,-7,4,-2,10,8,7,-1,8,-1],[-8,8,6,4,-10,-10,10,3,-5,-8,-3,9,6,8,-5],[-6,7,-3,-4,10,9,-2,-7,-4,1,5,10,-3,-5,8],[-3,3,8,10,4,-7,-2,-3,-3,-3,-8,-8,4,5,-4]]], dtype = "uint8")#candidate|327|(10, 6, 15)|const|uint8
bop_328 = relay.less(var_326.astype('bool'), relay.reshape(const_327.astype('bool'), relay.shape_of(var_326))) # shape=(10, 6, 15)
func_223_call = mod.get_global_var('func_223')
func_227_call = mutated_mod.get_global_var('func_227')
const_334 = relay.const([[-8,-3,-7,5],[2,-1,2,8],[-6,-5,4,2],[-10,2,3,-2],[-5,9,3,3],[3,6,6,7],[8,-8,7,2],[1,1,-2,-6],[7,10,9,-7],[-9,-2,-8,-6],[-2,-1,-4,-6],[-6,10,-1,6],[-4,-10,-10,-7],[-2,4,7,-6],[-4,-10,9,5],[5,5,4,6],[8,10,2,6],[8,2,2,6],[7,4,2,-3],[-5,-4,2,6],[5,9,-5,9]], dtype = "int16")#candidate|334|(21, 4)|const|int16
call_333 = relay.TupleGetItem(func_223_call(relay.reshape(const_334.astype('int16'), [3, 14, 2]), relay.reshape(const_334.astype('int16'), [3, 14, 2]), relay.reshape(const_334.astype('int16'), [3, 14, 2]), ), 2)
call_335 = relay.TupleGetItem(func_227_call(relay.reshape(const_334.astype('int16'), [3, 14, 2]), relay.reshape(const_334.astype('int16'), [3, 14, 2]), relay.reshape(const_334.astype('int16'), [3, 14, 2]), ), 2)
uop_339 = relay.acosh(const_334.astype('float64')) # shape=(21, 4)
output = relay.Tuple([bop_328,call_333,uop_339,])
output2 = relay.Tuple([bop_328,call_335,uop_339,])
func_343 = relay.Function([var_326,], output)
mod['func_343'] = func_343
mod = relay.transform.InferType()(mod)
var_344 = relay.var("var_344", dtype = "uint8", shape = (10, 6, 15))#candidate|344|(10, 6, 15)|var|uint8
output = func_343(var_344)
func_345 = relay.Function([var_344], output)
mutated_mod['func_345'] = func_345
mutated_mod = relay.transform.InferType()(mutated_mod)
var_713 = relay.var("var_713", dtype = "uint8", shape = (10, 12, 2))#candidate|713|(10, 12, 2)|var|uint8
var_714 = relay.var("var_714", dtype = "uint8", shape = (10, 12, 2))#candidate|714|(10, 12, 2)|var|uint8
bop_715 = relay.greater_equal(var_713.astype('bool'), relay.reshape(var_714.astype('bool'), relay.shape_of(var_713))) # shape=(10, 12, 2)
output = bop_715
output2 = bop_715
func_723 = relay.Function([var_713,var_714,], output)
mod['func_723'] = func_723
mod = relay.transform.InferType()(mod)
var_724 = relay.var("var_724", dtype = "uint8", shape = (10, 12, 2))#candidate|724|(10, 12, 2)|var|uint8
var_725 = relay.var("var_725", dtype = "uint8", shape = (10, 12, 2))#candidate|725|(10, 12, 2)|var|uint8
output = func_723(var_724,var_725,)
func_726 = relay.Function([var_724,var_725,], output)
mutated_mod['func_726'] = func_726
mutated_mod = relay.transform.InferType()(mutated_mod)
var_947 = relay.var("var_947", dtype = "int16", shape = (10, 11, 5))#candidate|947|(10, 11, 5)|var|int16
var_948 = relay.var("var_948", dtype = "int16", shape = (10, 11, 5))#candidate|948|(10, 11, 5)|var|int16
bop_949 = relay.right_shift(var_947.astype('int16'), relay.reshape(var_948.astype('int16'), relay.shape_of(var_947))) # shape=(10, 11, 5)
func_343_call = mod.get_global_var('func_343')
func_345_call = mutated_mod.get_global_var('func_345')
var_953 = relay.var("var_953", dtype = "uint8", shape = (900,))#candidate|953|(900,)|var|uint8
call_952 = relay.TupleGetItem(func_343_call(relay.reshape(var_953.astype('uint8'), [10, 6, 15])), 1)
call_954 = relay.TupleGetItem(func_345_call(relay.reshape(var_953.astype('uint8'), [10, 6, 15])), 1)
output = relay.Tuple([bop_949,call_952,var_953,])
output2 = relay.Tuple([bop_949,call_954,var_953,])
func_963 = relay.Function([var_947,var_948,var_953,], output)
mod['func_963'] = func_963
mod = relay.transform.InferType()(mod)
var_964 = relay.var("var_964", dtype = "int16", shape = (10, 11, 5))#candidate|964|(10, 11, 5)|var|int16
var_965 = relay.var("var_965", dtype = "int16", shape = (10, 11, 5))#candidate|965|(10, 11, 5)|var|int16
var_966 = relay.var("var_966", dtype = "uint8", shape = (900,))#candidate|966|(900,)|var|uint8
output = func_963(var_964,var_965,var_966,)
func_967 = relay.Function([var_964,var_965,var_966,], output)
mutated_mod['func_967'] = func_967
mutated_mod = relay.transform.InferType()(mutated_mod)
var_983 = relay.var("var_983", dtype = "float64", shape = (9, 6, 12))#candidate|983|(9, 6, 12)|var|float64
uop_984 = relay.rsqrt(var_983.astype('float64')) # shape=(9, 6, 12)
output = uop_984
output2 = uop_984
func_996 = relay.Function([var_983,], output)
mod['func_996'] = func_996
mod = relay.transform.InferType()(mod)
mutated_mod['func_996'] = func_996
mutated_mod = relay.transform.InferType()(mutated_mod)
var_997 = relay.var("var_997", dtype = "float64", shape = (9, 6, 12))#candidate|997|(9, 6, 12)|var|float64
func_996_call = mutated_mod.get_global_var('func_996')
call_998 = func_996_call(var_997)
output = call_998
func_999 = relay.Function([var_997], output)
mutated_mod['func_999'] = func_999
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1052 = relay.var("var_1052", dtype = "float32", shape = (11, 8, 13))#candidate|1052|(11, 8, 13)|var|float32
var_1053 = relay.var("var_1053", dtype = "float32", shape = (11, 8, 13))#candidate|1053|(11, 8, 13)|var|float32
bop_1054 = relay.floor_divide(var_1052.astype('float32'), relay.reshape(var_1053.astype('float32'), relay.shape_of(var_1052))) # shape=(11, 8, 13)
output = bop_1054
output2 = bop_1054
func_1061 = relay.Function([var_1052,var_1053,], output)
mod['func_1061'] = func_1061
mod = relay.transform.InferType()(mod)
var_1062 = relay.var("var_1062", dtype = "float32", shape = (11, 8, 13))#candidate|1062|(11, 8, 13)|var|float32
var_1063 = relay.var("var_1063", dtype = "float32", shape = (11, 8, 13))#candidate|1063|(11, 8, 13)|var|float32
output = func_1061(var_1062,var_1063,)
func_1064 = relay.Function([var_1062,var_1063,], output)
mutated_mod['func_1064'] = func_1064
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1624 = relay.var("var_1624", dtype = "uint16", shape = (2, 5, 16))#candidate|1624|(2, 5, 16)|var|uint16
const_1625 = relay.const([[[-6,2,-6,5,7,-10,-1,9,9,-4,-5,7,-2,-9,-2,9],[-7,-5,-10,-6,2,-5,-9,10,4,4,9,-3,10,5,6,2],[-7,-8,-9,-7,-2,-4,7,-1,-10,-2,10,-9,7,4,2,-9],[-3,7,3,3,-4,-8,-2,4,6,10,-1,-6,-7,-4,-4,-7],[9,-9,7,8,8,4,7,-2,4,-8,-3,7,-5,-8,-3,-8]],[[-10,-5,-8,10,-10,-3,-2,9,7,3,2,-3,-1,9,-7,-6],[-3,-3,5,4,6,2,4,-6,-7,-2,-6,-9,5,1,-3,8],[8,-7,-3,-6,-2,-8,10,-7,2,-7,4,5,3,3,3,-4],[-3,1,5,6,6,2,-8,2,-8,-8,6,-2,-1,5,-6,-2],[1,4,3,-1,-6,6,10,3,8,10,7,2,-9,-4,7,4]]], dtype = "uint16")#candidate|1625|(2, 5, 16)|const|uint16
bop_1626 = relay.greater_equal(var_1624.astype('bool'), relay.reshape(const_1625.astype('bool'), relay.shape_of(var_1624))) # shape=(2, 5, 16)
output = relay.Tuple([bop_1626,])
output2 = relay.Tuple([bop_1626,])
func_1629 = relay.Function([var_1624,], output)
mod['func_1629'] = func_1629
mod = relay.transform.InferType()(mod)
mutated_mod['func_1629'] = func_1629
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1630 = relay.var("var_1630", dtype = "uint16", shape = (2, 5, 16))#candidate|1630|(2, 5, 16)|var|uint16
func_1629_call = mutated_mod.get_global_var('func_1629')
call_1631 = func_1629_call(var_1630)
output = call_1631
func_1632 = relay.Function([var_1630], output)
mutated_mod['func_1632'] = func_1632
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1743 = relay.const([[[9.384808,-3.015233,7.665457],[-4.079342,-5.288950,0.519938],[-0.779405,3.168680,-4.647285],[1.530495,6.325529,-4.447465],[-9.121845,-9.819883,-5.565677],[4.309326,6.669649,-7.334346],[4.981434,-0.263969,-5.762301],[-3.324518,-0.953157,2.299410],[-9.835392,-3.771974,-4.186027],[-9.869217,8.311477,-4.126361],[4.696101,7.654080,3.766795],[7.104191,-2.639301,4.622292],[1.196755,8.119475,0.166863],[-3.615862,2.172523,3.136077]],[[9.677873,1.551549,4.655682],[2.906995,8.840255,5.226022],[-3.823332,-1.964138,-6.554759],[3.531242,3.990771,-6.700403],[9.408864,-5.640455,2.223570],[-3.256302,8.725809,-5.554292],[-7.788716,7.163755,-3.373568],[-8.420716,6.354939,-5.033546],[-5.627802,4.707084,-4.063121],[4.690345,-6.257590,7.515279],[6.164528,9.067097,5.940687],[2.301162,0.513576,2.983580],[3.853024,-5.023265,-0.779261],[9.611105,-6.662154,-2.723819]],[[-2.087085,-6.417073,8.747314],[-8.368618,6.222215,-4.076597],[5.234058,-0.610473,-9.611901],[5.118862,-6.959210,9.526013],[-8.170734,6.938704,9.713966],[2.647365,1.933819,8.631388],[1.725882,-9.933473,2.091844],[3.339333,-1.322440,6.753226],[-1.430968,8.783418,-9.177133],[4.443123,2.753862,4.987260],[0.706136,-1.244246,-1.734318],[1.387801,9.812798,-9.385419],[-9.339339,-5.070862,-6.409019],[-6.226460,-6.510058,5.535956]],[[-1.413880,8.192249,6.211791],[-9.649360,1.836870,-5.974927],[-9.751327,-9.032405,4.828789],[-9.112531,-4.513872,-5.394961],[-4.023734,0.616633,-4.186909],[8.844512,-6.425742,-6.069412],[7.245990,-9.892356,0.715448],[-3.683299,-0.526151,-6.227354],[-3.780761,-5.852441,0.684455],[0.215400,4.395293,-1.846736],[8.990799,-7.221853,-6.528250],[4.954873,6.270390,-6.118367],[-6.006392,5.833570,0.623908],[-3.833174,-6.904413,6.732193]],[[-5.068194,-0.368847,8.123516],[2.722450,-7.814874,-7.798135],[3.530755,0.733072,1.191111],[0.550809,-7.451044,0.579103],[-8.293097,5.897871,-1.827607],[-2.123115,5.316843,-8.024805],[0.025424,1.419569,3.962971],[-3.194540,-0.754765,3.342960],[-8.927340,9.048738,8.493464],[-9.427895,6.502684,7.314575],[-4.118280,-8.579135,-0.192167],[8.494858,-0.974688,3.672331],[-9.615733,-5.618368,0.417673],[8.264049,7.351444,7.848625]]], dtype = "float64")#candidate|1743|(5, 14, 3)|const|float64
uop_1744 = relay.log(const_1743.astype('float64')) # shape=(5, 14, 3)
func_343_call = mod.get_global_var('func_343')
func_345_call = mutated_mod.get_global_var('func_345')
const_1760 = relay.const([[-2],[10],[9],[8],[-8],[5],[-10],[7],[-7],[-7],[-7],[4],[-2],[7],[7],[-6],[4],[4],[7],[-1],[-1],[-5],[1],[9],[6],[-2],[6],[7],[1],[3],[-1],[8],[6],[1],[6],[-10],[-2],[-7],[7],[-3],[-4],[10],[-1],[10],[-10],[3],[-4],[1],[2],[5],[5],[4],[2],[-2],[-1],[-6],[10],[-7],[-10],[4],[-9],[-3],[7],[-3],[5],[-9],[-5],[10],[6],[6],[7],[-4],[-5],[-5],[-5],[-7],[7],[5],[4],[-2],[-8],[-9],[-4],[10],[-1],[9],[8],[4],[-2],[10],[-9],[2],[-9],[-9],[-9],[-1],[-10],[9],[1],[5],[-6],[9],[-8],[9],[1],[1],[-8],[-5],[4],[-7],[-3],[-9],[1],[8],[-7],[-2],[-9],[-7],[4],[-1],[5],[7],[7],[-8],[6],[-3],[6],[-3],[-9],[-6],[7],[-1],[3],[-5],[4],[-3],[10],[-2],[-2],[5],[10],[6],[-9],[2],[3],[6],[10],[-6],[7],[-9],[1],[-2],[4],[5],[6],[3],[-9],[1],[-1],[8],[3],[-1],[3],[-5],[3],[1],[-7],[-5],[7],[-6],[-4],[-1],[9],[3],[-5],[3],[-6],[10],[-4],[-10],[-8],[-2],[-2],[-6],[7],[-3],[3],[3],[6],[-2],[-6],[-10],[9],[-2],[6],[1],[10],[2],[10],[-4],[10],[-7],[-3],[-4],[8],[-1],[-1],[7],[-4],[5],[10],[7],[1],[4],[5],[-8],[7],[-9],[10],[9],[-3],[2],[-5],[6],[-9],[-9],[-8],[9],[-6],[-1],[-10],[8],[-8],[8],[-4],[6],[9],[-1],[-9],[2],[-9],[5],[1],[-7],[6],[8],[8],[-5],[-6],[-4],[10],[-6],[-8],[-1],[-6],[-4],[-8],[-2],[-2],[6],[8],[-6],[-9],[-3],[-4],[5],[-7],[-10],[10],[1],[-8],[10],[-6],[7],[-1],[8],[6],[-6],[-4],[1],[-5],[9],[9],[-6],[-5],[-4],[-4],[3],[7],[7],[-2],[7],[-8],[-4],[-1],[-10],[1],[-8],[-1],[9],[3],[-10],[-8],[-6],[4],[2],[8],[-3],[-10],[9],[-2],[-8],[8],[-3],[-4],[6],[-6],[6],[-1],[8],[6],[1],[-7],[8],[-3],[-1],[-6],[10],[-8],[-3],[-7],[-10],[7],[-6],[8],[6],[-4],[-8],[1],[-2],[-5],[-1],[-3],[4],[-4],[-4],[8],[-4],[9],[5],[-6],[3],[-8],[-2],[-9],[5],[-5],[-4],[5],[-10],[5],[-4],[9],[9],[-9],[-7],[-5],[-4],[-1],[4],[-9],[3],[-5],[-4],[5],[1],[-9],[2],[-4],[6],[-5],[-6],[-3],[-7],[-7],[4],[10],[-1],[6],[-5],[-9],[-2],[3],[6],[7],[9],[-5],[6],[7],[2],[-4],[9],[-6],[9],[6],[-5],[-2],[5],[3],[3],[3],[3],[8],[6],[3],[-9],[-4],[1],[1],[-6],[-3],[1],[-9],[9],[6],[-3],[-3],[-7],[-8],[-8],[8],[-9],[8],[-6],[7],[-5],[4],[6],[-10],[7],[-6],[-7],[1],[-1],[6],[1],[9],[-10],[-10],[-5],[8],[-7],[-3],[8],[-7],[-1],[7],[3],[-3],[-6],[-6],[-5],[-9],[-1],[9],[5],[-5],[2],[7],[-3],[-4],[7],[-6],[9],[7],[-8],[-6],[-7],[6],[-1],[-3],[4],[1],[5],[-5],[2],[7],[-3],[2],[-10],[-9],[3],[9],[-8],[7],[2],[8],[-7],[4],[-6],[-2],[-10],[-10],[2],[5],[2],[-10],[7],[4],[-6],[7],[-10],[-4],[5],[-8],[-6],[-1],[-9],[-9],[4],[3],[-8],[-10],[6],[-10],[-6],[10],[3],[4],[-3],[1],[7],[8],[-5],[-9],[3],[-5],[-6],[-3],[1],[-5],[-10],[7],[-1],[1],[7],[3],[-4],[-10],[-8],[-7],[10],[1],[7],[8],[-7],[8],[-10],[-3],[8],[-4],[8],[7],[-6],[10],[-5],[-6],[-9],[10],[-1],[7],[-3],[-9],[2],[3],[8],[4],[-5],[-7],[-9],[7],[-5],[6],[-10],[-1],[7],[10],[3],[-3],[1],[-6],[5],[6],[-3],[1],[3],[-6],[2],[2],[10],[-2],[-9],[7],[2],[-8],[7],[-6],[6],[-10],[-9],[2],[8],[-10],[-2],[2],[-6],[-1],[9],[-1],[-7],[5],[-3],[-6],[-5],[7],[-7],[7],[7],[-6],[2],[4],[-4],[-4],[-4],[-3],[-4],[-5],[-1],[7],[7],[-3],[-2],[-10],[8],[1],[5],[9],[-10],[-2],[10],[5],[6],[-2],[-3],[5],[2],[4],[8],[7],[9],[-7],[3],[4],[9],[-10],[-1],[-4],[7],[6],[-4],[9],[10],[-3],[7],[-6],[8],[-3],[-9],[6],[4],[8],[3],[2],[7],[-1],[8],[-8],[3],[-7],[-1],[-9],[6],[2],[10],[7],[4],[-9],[7],[-6],[-9],[5],[6],[8],[-7],[2],[-7],[9],[-4],[1],[8],[7],[-3],[-6],[8],[-5],[8],[-6],[5],[6],[8],[2],[-8],[1],[1],[-5],[9],[-1],[-10],[3],[1],[-7],[-7],[-3],[-1],[-6],[6],[6],[-8],[-5],[8],[10],[-6],[2],[-9],[6],[-4],[-9],[9],[5],[3],[-9],[-9],[3],[10],[8],[2],[9],[-10],[3],[-9],[-1],[3],[-6],[-2],[-10],[-2],[5],[2],[7],[-8],[3],[-7],[-7],[5],[-8],[1],[7],[-9],[-6],[-2],[7],[-7],[-3],[10],[2],[9],[7],[10],[-4],[-6],[-7],[-2],[-2],[-7],[-2],[-7],[5],[1],[3],[-2],[-9],[-2],[6],[10],[7],[2],[4],[-10],[5],[-5],[8],[-7],[-3],[1],[-2],[-3],[-3],[-7],[9],[8],[-5],[1],[6],[-6],[-9],[-9],[-2],[-10],[-7],[-3],[3],[9],[-2],[-6],[8],[-8],[6],[-2],[1],[3],[-8],[8],[9],[5],[10],[-2],[-3],[-10],[1],[-8],[10],[2],[5],[10],[4],[7],[6],[-4],[-5],[10],[8],[-10],[-6],[9],[-4],[6],[3],[4],[4],[4],[-7],[-1],[-8],[9],[-7],[-9],[-4],[-7],[-9],[8],[3],[9],[-2],[2],[7],[3],[6],[-9],[1],[8],[-1],[-3],[5],[-5],[-6],[8],[-5],[-5],[-2],[-2]], dtype = "uint8")#candidate|1760|(900, 1)|const|uint8
call_1759 = relay.TupleGetItem(func_343_call(relay.reshape(const_1760.astype('uint8'), [10, 6, 15])), 0)
call_1761 = relay.TupleGetItem(func_345_call(relay.reshape(const_1760.astype('uint8'), [10, 6, 15])), 0)
var_1766 = relay.var("var_1766", dtype = "float64", shape = (5, 14, 3))#candidate|1766|(5, 14, 3)|var|float64
bop_1767 = relay.greater_equal(uop_1744.astype('bool'), relay.reshape(var_1766.astype('bool'), relay.shape_of(uop_1744))) # shape=(5, 14, 3)
output = relay.Tuple([call_1759,const_1760,bop_1767,])
output2 = relay.Tuple([call_1761,const_1760,bop_1767,])
func_1780 = relay.Function([var_1766,], output)
mod['func_1780'] = func_1780
mod = relay.transform.InferType()(mod)
mutated_mod['func_1780'] = func_1780
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1781 = relay.var("var_1781", dtype = "float64", shape = (5, 14, 3))#candidate|1781|(5, 14, 3)|var|float64
func_1780_call = mutated_mod.get_global_var('func_1780')
call_1782 = func_1780_call(var_1781)
output = call_1782
func_1783 = relay.Function([var_1781], output)
mutated_mod['func_1783'] = func_1783
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1934 = relay.var("var_1934", dtype = "float32", shape = (3, 2, 11))#candidate|1934|(3, 2, 11)|var|float32
uop_1935 = relay.asinh(var_1934.astype('float32')) # shape=(3, 2, 11)
func_963_call = mod.get_global_var('func_963')
func_967_call = mutated_mod.get_global_var('func_967')
var_1948 = relay.var("var_1948", dtype = "int16", shape = (550,))#candidate|1948|(550,)|var|int16
var_1949 = relay.var("var_1949", dtype = "uint8", shape = (900,))#candidate|1949|(900,)|var|uint8
call_1947 = relay.TupleGetItem(func_963_call(relay.reshape(var_1948.astype('int16'), [10, 11, 5]), relay.reshape(var_1948.astype('int16'), [10, 11, 5]), relay.reshape(var_1949.astype('uint8'), [900,]), ), 0)
call_1950 = relay.TupleGetItem(func_967_call(relay.reshape(var_1948.astype('int16'), [10, 11, 5]), relay.reshape(var_1948.astype('int16'), [10, 11, 5]), relay.reshape(var_1949.astype('uint8'), [900,]), ), 0)
bop_1953 = relay.power(uop_1935.astype('float64'), relay.reshape(var_1934.astype('float64'), relay.shape_of(uop_1935))) # shape=(3, 2, 11)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
var_1960 = relay.var("var_1960", dtype = "float64", shape = (648,))#candidate|1960|(648,)|var|float64
call_1959 = func_996_call(relay.reshape(var_1960.astype('float64'), [9, 6, 12]))
call_1961 = func_996_call(relay.reshape(var_1960.astype('float64'), [9, 6, 12]))
func_723_call = mod.get_global_var('func_723')
func_726_call = mutated_mod.get_global_var('func_726')
var_1964 = relay.var("var_1964", dtype = "uint8", shape = (240,))#candidate|1964|(240,)|var|uint8
call_1963 = func_723_call(relay.reshape(var_1964.astype('uint8'), [10, 12, 2]), relay.reshape(var_1964.astype('uint8'), [10, 12, 2]), )
call_1965 = func_723_call(relay.reshape(var_1964.astype('uint8'), [10, 12, 2]), relay.reshape(var_1964.astype('uint8'), [10, 12, 2]), )
const_1968 = relay.const([[[1.255353,3.643903,-6.713963,6.390533,1.914783,-6.757893,4.330442,-2.666112,3.662677,9.955048,-9.617492],[5.694456,4.143245,9.553123,1.741734,5.329916,1.469894,6.015534,-1.931717,3.705674,-4.066776,2.430598]],[[6.998070,-8.036867,-7.526870,-7.882577,4.661464,4.388280,2.424626,-4.266068,2.843780,-7.155747,-3.295057],[-3.907491,-3.063025,-0.538994,-0.011182,8.465373,9.343554,-8.390621,9.565608,-4.276030,-0.565627,-6.002876]],[[-3.249948,-5.048973,-6.563103,3.404822,0.752297,1.556480,5.565595,-5.732833,-5.136380,0.917858,-8.691716],[4.438527,-1.271795,-2.279535,6.799325,-1.090072,5.913732,9.702164,0.919314,-6.315184,7.840759,1.450231]]], dtype = "float64")#candidate|1968|(3, 2, 11)|const|float64
bop_1969 = relay.equal(bop_1953.astype('bool'), relay.reshape(const_1968.astype('bool'), relay.shape_of(bop_1953))) # shape=(3, 2, 11)
output = relay.Tuple([call_1947,var_1948,var_1949,call_1959,var_1960,call_1963,var_1964,bop_1969,])
output2 = relay.Tuple([call_1950,var_1948,var_1949,call_1961,var_1960,call_1965,var_1964,bop_1969,])
func_1975 = relay.Function([var_1934,var_1948,var_1949,var_1960,var_1964,], output)
mod['func_1975'] = func_1975
mod = relay.transform.InferType()(mod)
mutated_mod['func_1975'] = func_1975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1975_call = mutated_mod.get_global_var('func_1975')
var_1977 = relay.var("var_1977", dtype = "float32", shape = (3, 2, 11))#candidate|1977|(3, 2, 11)|var|float32
var_1978 = relay.var("var_1978", dtype = "int16", shape = (550,))#candidate|1978|(550,)|var|int16
var_1979 = relay.var("var_1979", dtype = "uint8", shape = (900,))#candidate|1979|(900,)|var|uint8
var_1980 = relay.var("var_1980", dtype = "float64", shape = (648,))#candidate|1980|(648,)|var|float64
var_1981 = relay.var("var_1981", dtype = "uint8", shape = (240,))#candidate|1981|(240,)|var|uint8
call_1976 = func_1975_call(var_1977,var_1978,var_1979,var_1980,var_1981,)
output = call_1976
func_1982 = relay.Function([var_1977,var_1978,var_1979,var_1980,var_1981,], output)
mutated_mod['func_1982'] = func_1982
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2162 = relay.const([[[9.919769,1.238981,-8.691066,9.728252,6.665768,9.943568,7.015817,9.753632],[7.667178,-9.046721,4.971622,0.287506,2.495676,9.181692,-9.583280,6.844719],[6.499852,1.990304,4.100906,-2.703919,-9.279042,-3.989563,9.476163,5.593186],[-0.276845,7.276791,-2.803606,4.922772,7.634852,6.569641,3.245433,9.123685],[4.350967,-5.334130,4.575723,4.922764,-3.829654,-3.510718,0.936793,-2.481990],[1.982529,-1.840519,6.276987,0.093858,-4.938832,-0.695200,-1.399477,-8.815927],[-2.669934,-6.595509,9.183981,2.831936,-3.731471,3.160617,0.150843,0.887153],[-0.024206,7.538992,0.659327,-4.952126,3.955572,1.717849,-5.770133,-5.884013],[-2.068395,6.411496,-1.996835,-3.384549,-2.292238,1.178495,4.645613,-4.867133],[-0.704318,8.926079,4.088503,1.237658,-3.663645,-5.325324,-8.399060,-6.500010],[2.561088,-1.615172,-4.725557,-5.495016,1.759717,8.875691,8.876415,-7.201123],[5.875863,6.992701,5.340457,5.151363,-5.152932,-4.068973,-2.056969,0.008339]],[[-5.090089,-7.653778,-7.001198,8.019146,-4.595196,1.458460,3.221158,7.312261],[0.821273,1.388495,1.126693,4.759709,-1.263117,-1.074008,-8.945408,-0.806722],[5.441601,7.405433,-7.943527,8.342141,5.841335,-7.691808,-8.431515,6.234055],[-2.528082,-4.529079,-1.313250,0.843983,-6.430063,8.098333,-4.415024,5.736317],[-6.570649,4.913124,-4.239484,4.047714,7.004783,-8.984606,4.747293,-6.689035],[-4.232706,2.423318,-3.362421,8.101462,-7.761253,4.819973,-0.451414,8.537589],[1.677658,0.049201,4.387688,-6.867663,-6.221298,2.343074,-0.627863,-9.612208],[-9.962606,2.892795,-1.531177,3.268720,-3.322843,8.524041,-6.438817,5.355153],[-7.651284,0.723373,-1.924372,-7.952310,-3.611887,-0.412151,0.687822,6.913595],[7.664742,-4.649572,0.866751,-4.698633,-1.871975,-8.780365,-9.645573,4.699460],[8.970513,2.150810,-6.797395,-0.809541,7.276585,2.282377,3.901534,-6.559539],[-5.249983,2.648224,9.888603,0.958877,8.417155,-2.298619,2.712470,-8.147140]],[[-7.728594,-9.604662,-9.156496,7.961368,-2.098019,-2.591137,7.792649,-8.129129],[-8.552523,5.562097,4.155717,9.548605,-7.246225,3.204138,6.453014,-4.237454],[8.759239,-5.657379,-2.269679,7.152520,9.603598,-5.282951,-8.169995,-8.977584],[-3.731839,-0.519717,-7.062965,2.163557,3.959688,-0.444407,-5.262354,-3.958323],[-2.426542,4.326143,-6.890197,8.085745,7.289825,-3.509406,-6.592231,-5.897906],[-2.329741,-5.194649,-9.811976,-8.834166,-6.729257,1.216351,7.228306,-9.345146],[-8.364337,-4.630722,-5.009408,-7.161571,-5.823384,-5.960373,0.786833,0.977295],[0.097039,-4.621557,9.817404,-4.382258,-0.213700,9.798337,9.501211,1.680614],[1.877010,9.666796,0.470599,6.172209,-6.730342,-8.178445,-7.359254,-6.196557],[8.593503,-6.226021,8.884894,9.699868,-6.256672,5.336145,-1.663090,7.410297],[7.245242,-0.158465,4.580176,-1.552555,9.406712,5.594156,-0.041565,7.179059],[0.030526,5.431966,-3.138689,-2.713896,2.461580,7.084227,-4.468668,1.822268]],[[8.879122,-0.474331,-2.530290,-1.786056,7.734635,7.357893,8.468352,6.878229],[-4.508187,1.099817,1.467631,7.305915,-5.927080,8.376679,-8.795464,-6.775350],[-1.480020,-7.243905,2.356166,-4.594610,-2.379518,-0.841577,-7.750955,-8.476084],[-5.762056,-3.070692,3.398363,-4.219419,-8.893915,-0.383189,9.273104,-2.316464],[0.966102,-6.899654,8.099229,2.894789,-9.980255,-7.600934,-0.365178,-4.987892],[-3.762450,-5.833386,-4.774536,0.993790,-9.858447,5.210983,-9.592814,5.343426],[-1.458371,-0.837274,-7.045165,-0.729560,-1.303232,-3.622626,8.680261,5.983342],[2.241519,-9.670695,3.165641,-0.910988,6.618696,2.965690,7.120248,-6.991445],[-4.990885,0.367216,-7.720729,4.519701,-0.866133,6.945421,-8.576428,-6.620424],[4.347399,-9.917588,-9.972540,-3.864359,-0.329507,-8.416859,7.684677,-1.071880],[5.241437,-5.324737,4.791095,-3.391589,6.960878,4.616939,2.738482,7.802950],[-1.504188,2.936521,-3.182502,4.253710,2.549818,-0.715178,-1.221107,-7.423328]],[[5.891252,5.223160,-5.628476,-2.071073,-5.133692,-0.187777,2.002058,-9.826175],[7.178596,4.913420,4.247029,-5.378198,-3.884303,9.944513,7.579806,-9.371698],[4.270451,1.660101,-0.577083,0.056483,-6.724788,-7.718246,-2.779781,4.681092],[-6.127767,1.493502,4.034440,-6.107913,2.041914,-3.577830,3.787653,6.877570],[2.439188,-0.705224,-8.397214,-1.315156,1.323571,4.476313,0.487310,6.261796],[7.801534,0.877447,0.521669,-1.011827,-4.260295,4.919845,7.718914,-6.124044],[-9.481198,-2.081298,-4.919553,1.612402,2.296933,1.640224,3.364901,-9.837458],[-9.064094,-9.092605,3.623434,-4.707222,7.939808,3.109302,-5.607612,9.893919],[5.129411,6.629242,-5.084784,8.282601,6.967378,-3.750321,-0.305693,9.195190],[0.163624,-8.630582,-6.924890,-4.292158,-3.065546,4.239225,5.036573,0.041137],[-9.205392,-5.966005,7.689506,5.463629,5.659578,-1.633956,-3.038172,-0.650400],[1.525391,3.840355,7.536956,8.447683,2.090708,-9.584195,-7.397761,6.059795]],[[-2.036904,4.558458,-7.481169,2.739566,2.372225,3.345693,7.979229,5.726063],[-3.185054,3.060424,-9.474573,6.662278,3.647062,-4.443223,-7.663556,-7.586562],[4.217729,-6.534403,-8.658518,4.974012,8.061666,-1.607077,-1.627918,5.750913],[-4.983425,-0.729434,-8.605183,-1.763511,2.901164,6.303026,4.124692,4.361896],[4.843915,-9.083820,6.906853,7.523413,-8.357892,6.787967,4.953150,6.201629],[5.478051,-0.877686,7.349154,7.622427,1.744159,-9.756500,6.567934,-6.276300],[-9.100562,-7.555948,-7.020792,-3.097347,7.317201,-6.778913,4.253805,-6.558713],[3.342820,-7.189752,-5.567706,-8.006274,-1.575356,-2.653841,-4.787845,-0.549916],[2.077402,-6.308928,5.631402,-1.271277,-6.794829,9.375230,-1.595719,9.696799],[5.129996,-7.797173,8.920613,5.767402,-0.242905,5.714007,-2.588407,5.959556],[9.927294,-4.907609,-1.192950,0.865902,9.508921,-3.597635,1.144424,8.724630],[6.000728,-6.403570,-9.766936,-1.109167,9.162639,1.734276,-7.012967,9.923166]],[[-4.162711,-2.436425,-2.126065,-7.508890,-5.548676,4.361080,-9.063959,-2.564476],[-3.195390,-8.629638,4.137208,6.650003,1.658225,-1.320385,7.683330,2.491415],[3.621616,5.293240,0.261423,2.528139,-2.086739,3.651780,-3.412636,5.147902],[-7.582666,0.516613,-7.927527,-7.428626,-2.920251,6.493225,-7.811917,6.755656],[-6.832622,5.148460,-9.259894,-2.152998,2.976499,2.652225,3.507263,0.915214],[3.088385,0.137555,2.872660,3.688320,5.946368,-3.942264,3.317026,6.612257],[-0.480999,8.404050,-9.080718,3.027856,-6.395300,7.062836,0.697771,8.955774],[2.793814,1.279801,9.402027,-0.310184,4.257033,-6.843239,9.215492,2.872289],[9.670879,-3.971957,-5.614701,2.515631,7.587060,-3.580747,9.483380,8.302406],[4.103228,-9.010133,3.588334,1.624224,4.474658,0.262209,5.527839,-5.187613],[9.781607,-3.028266,-6.824341,-3.115676,-6.724670,6.928461,5.983376,8.929629],[3.897846,5.656601,-0.400515,5.574801,-6.516297,-6.352733,1.515647,-4.023889]],[[-0.487190,-0.465397,7.226506,-1.355826,-9.639512,8.586843,-0.100559,-3.079797],[-2.241904,-8.427718,-4.594166,-4.192550,-8.191660,-2.171836,0.325425,-1.811445],[-7.664054,7.585599,-8.786744,5.152061,5.847444,-2.398490,7.613173,6.183446],[-6.407653,9.102753,3.914387,5.321538,-7.795461,-1.528738,6.734790,3.072982],[2.641405,1.586692,-7.646430,-0.453568,7.769882,1.327035,4.076650,3.820440],[-8.432967,-6.590020,-0.988420,1.283648,-4.520328,9.160217,9.357294,8.635823],[1.140787,-2.238602,5.964900,7.643359,1.541692,-5.359001,9.588185,-4.077616],[-8.604927,4.620547,-4.991233,6.597755,-5.325902,-6.432013,-0.305208,5.821900],[-7.351871,4.721960,-7.194394,9.393032,-5.852759,0.121146,9.592473,4.654216],[-8.188411,-6.257614,-2.703646,6.984185,-9.963585,-2.619177,3.762206,-3.871725],[0.270787,-5.307744,-7.960989,5.054372,1.542171,-1.141521,-0.338852,-7.557676],[4.829857,8.648615,-6.208837,-3.663306,4.246348,6.052800,-1.175150,-8.749846]],[[-4.368525,-3.270617,-8.518392,5.155349,-0.043923,-9.642293,8.157575,3.834394],[-0.720075,-4.989226,-9.628155,6.040514,0.122131,-6.986625,7.342558,6.876736],[6.254493,-3.332531,2.021461,1.940502,-9.856192,-0.112462,-2.788586,-3.505479],[8.665282,-9.460722,7.790409,1.422033,-8.617045,2.279849,-2.714318,9.343571],[-5.941139,-7.717224,7.318837,7.801121,4.771838,-8.223738,3.077901,-0.274592],[2.735154,-4.313236,7.574020,-8.826725,-8.251017,5.232865,-8.312328,-4.992377],[-4.014643,4.423013,4.276443,2.325196,-3.959017,-7.098817,-1.202019,-1.308018],[8.555760,8.723831,-0.847643,4.352735,1.272941,-3.780951,5.908493,-3.306561],[3.554884,-7.134611,-1.523519,5.958081,3.106892,-0.025888,8.357687,1.229281],[-1.610824,1.427825,-1.356355,4.791592,6.438436,-0.809682,-5.944279,-3.291695],[-0.931662,-4.690520,5.274356,3.484196,-5.576300,-8.920636,4.370956,-5.728647],[-1.676174,-0.158042,-0.457325,-7.049613,9.017505,2.208637,6.383726,2.916489]],[[-6.071314,-5.150688,-2.050460,-5.344242,-5.826729,-3.718292,-8.121405,7.607054],[-1.613923,-7.194705,2.541612,-5.658011,7.043298,-7.943293,3.499212,-1.235235],[-8.241200,0.265011,-5.758354,5.590270,6.180523,-3.025491,-6.259583,-1.778506],[-3.801106,-0.735773,-8.041528,-6.506139,-5.008783,-1.231673,0.186409,3.397685],[-4.304042,-1.232106,-6.970585,6.708913,6.083646,8.974219,2.060944,-9.958232],[-7.702800,2.378997,3.480685,-6.379396,-6.068704,2.778005,4.306187,1.982247],[-2.484877,5.959312,5.256364,-2.820133,-1.400664,1.392705,0.059531,6.889702],[-1.283368,-6.827938,0.847419,3.687521,-6.282517,6.803852,9.929587,9.819944],[-5.704027,-0.718608,4.476754,-1.200803,-2.966237,1.651902,2.742423,-6.128948],[5.716141,4.086689,6.223438,-5.859180,2.043049,-0.757327,9.437547,-7.851306],[-3.011450,1.154598,0.954490,4.276303,6.821909,-3.770616,-5.638802,-5.623178],[8.720184,-9.327383,-9.077106,-1.599887,-8.647613,-0.236634,-4.660454,1.725306]],[[3.461561,-6.390157,-7.007149,3.578783,-2.316668,-9.067867,-0.396542,-7.191515],[-6.262675,-0.883520,-3.514922,-8.848695,5.324785,-6.677506,-2.012445,-8.572255],[-1.990280,-1.123049,2.517470,3.799418,7.447375,-2.026753,-2.670355,-6.916995],[1.077040,-4.814350,8.185007,-0.785673,5.004105,2.141524,-0.173694,-7.606563],[-8.731279,6.350522,-1.229767,-3.386058,-2.353309,5.830130,8.965333,9.766014],[-3.210085,-1.590962,-3.767331,6.502411,1.989088,3.636555,-0.528277,8.750281],[6.933267,-9.404952,6.532589,2.759381,7.473376,-2.106585,-9.983930,7.575145],[9.355457,7.756144,-4.462701,-4.297240,9.253410,6.591942,6.876240,-9.298076],[8.822804,-2.105545,7.399135,-9.634870,-8.726799,-2.251053,-7.253352,1.125133],[2.297546,-2.230238,5.917602,-2.510962,-5.070239,6.304266,-0.021715,-8.646349],[-9.839807,-7.617014,7.576663,2.631433,2.328030,-7.460956,0.017381,-8.965255],[-6.939516,6.512613,6.167308,-4.488123,8.293562,2.410271,-8.117890,-2.288922]]], dtype = "float64")#candidate|2162|(11, 12, 8)|const|float64
uop_2163 = relay.asinh(const_2162.astype('float64')) # shape=(11, 12, 8)
func_223_call = mod.get_global_var('func_223')
func_227_call = mutated_mod.get_global_var('func_227')
const_2168 = relay.const([3,-1,-6,-8,10,-8,8,-3,4,-6,2,5,9,-2,-7,8,9,-1,-2,-3,-6,-5,-3,-5,-2,7,5,9,-3,-7,-4,-10,-4,-1,3,1,6,-4,-4,-5,1,4,5,-10,-4,1,-1,4,-4,-6,-8,-6,4,-3,-10,7,-4,9,-4,-10,-5,-8,-1,-6,5,4,8,8,-10,2,-3,3,-2,7,-3,-4,-7,7,-5,7,-4,5,-10,5], dtype = "int16")#candidate|2168|(84,)|const|int16
call_2167 = relay.TupleGetItem(func_223_call(relay.reshape(const_2168.astype('int16'), [3, 14, 2]), relay.reshape(const_2168.astype('int16'), [3, 14, 2]), relay.reshape(const_2168.astype('int16'), [3, 14, 2]), ), 2)
call_2169 = relay.TupleGetItem(func_227_call(relay.reshape(const_2168.astype('int16'), [3, 14, 2]), relay.reshape(const_2168.astype('int16'), [3, 14, 2]), relay.reshape(const_2168.astype('int16'), [3, 14, 2]), ), 2)
output = relay.Tuple([uop_2163,call_2167,const_2168,])
output2 = relay.Tuple([uop_2163,call_2169,const_2168,])
func_2175 = relay.Function([], output)
mod['func_2175'] = func_2175
mod = relay.transform.InferType()(mod)
output = func_2175()
func_2176 = relay.Function([], output)
mutated_mod['func_2176'] = func_2176
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_2220 = relay.TupleGetItem(func_2175_call(), 1)
call_2221 = relay.TupleGetItem(func_2176_call(), 1)
func_963_call = mod.get_global_var('func_963')
func_967_call = mutated_mod.get_global_var('func_967')
const_2248 = relay.const([[-6,-5,-1,-4,-8,10,10,-7,-4,-5],[-4,-7,-5,2,7,-7,4,-3,-10,-7],[-3,4,-10,-10,-5,-9,-5,6,1,1],[1,-4,-10,1,4,-2,-6,2,9,-2],[6,-5,-8,-1,10,-1,-10,5,2,3],[5,-4,-2,-7,-6,-7,-2,3,5,3],[6,6,10,9,9,-9,7,-5,10,2],[-5,-10,1,-9,7,-2,5,-2,-1,-9],[5,7,3,-3,-8,-7,-3,-9,10,3],[-9,4,-4,9,9,8,-7,-8,-8,1],[5,10,7,-4,-7,-8,-1,10,-9,1],[-8,2,3,-8,-2,-1,-9,4,-2,6],[-3,-8,5,10,-9,-1,-9,4,4,6],[-1,10,-10,7,-3,1,-5,2,7,3],[-4,-4,-9,6,-10,-9,1,-2,-6,-1],[2,-6,-1,9,4,-5,-8,1,7,1],[2,-8,-1,-2,-9,-7,4,-10,-4,2],[-2,-6,6,-8,-5,-10,-10,7,-1,10],[1,3,-1,-10,-3,-4,-1,-3,-6,-10],[9,9,10,-1,-7,3,6,-3,10,-5],[10,-5,-8,8,9,-6,-1,8,-10,-4],[-9,5,4,4,3,-6,7,-4,10,-8],[3,9,-8,7,5,-3,8,-10,7,-8],[-5,3,-6,6,2,-8,9,-1,2,3],[7,2,5,2,7,-2,4,4,-4,-9],[6,3,3,-2,-10,-4,2,-6,9,-9],[-8,9,-8,-4,-3,1,10,-5,-6,10],[4,4,-4,-5,8,9,4,-10,1,7],[4,-1,9,-9,-5,-2,-5,-6,-9,-1],[-4,-5,-10,-3,8,3,5,8,2,-1],[-6,-7,-3,9,-6,1,3,-10,-2,2],[-2,-1,10,3,5,-2,-10,2,-4,5],[3,9,3,-1,-2,-4,9,-1,3,1],[-9,10,2,3,5,5,4,-6,-3,4],[1,8,-1,6,-5,5,2,3,7,1],[4,2,1,-6,6,-2,8,-6,10,-7],[1,-9,7,-8,-8,8,8,-9,-1,-5],[-7,-5,-6,-5,3,1,2,-8,4,3],[4,1,3,-2,6,-3,-4,-5,-9,7],[2,5,-10,3,8,3,9,-5,5,-9],[3,-2,-2,7,9,3,-4,7,1,9],[6,-1,-7,9,4,-2,4,5,-5,7],[-8,9,-9,7,4,9,-9,7,9,-7],[6,9,7,5,-6,-10,-3,8,3,3],[-3,-9,5,8,4,6,-7,1,10,-8],[8,-1,-4,2,8,5,8,-4,10,8],[7,3,10,8,9,6,-3,-8,-10,2],[-6,7,-1,-8,3,2,-1,-6,8,-2],[-1,4,-9,-8,-3,-5,7,4,5,8],[9,9,-6,2,10,-9,-2,2,-5,10],[-3,6,9,10,3,3,8,1,-9,-8],[-5,-10,1,-10,-2,-4,-5,5,-4,5],[2,9,-2,-6,1,9,-2,-5,-9,-1],[5,-8,-10,2,7,-1,-7,-3,-9,7],[-2,8,-5,8,7,-7,-5,-3,-7,6]], dtype = "int16")#candidate|2248|(55, 10)|const|int16
const_2249 = relay.const([-9,-6,6,-5,-6,-5,-6,10,-7,-7,-4,2,8,-4,-9,7,9,-6,-9,6,-3,8,10,-1,6,5,-10,7,2,-10,-6,10,-4,4,7,-3,-9,-10,-1,-5,8,9,6,3,-9,1,-3,3,-7,-3,5,3,-6,-4,-3,-4,-6,6,-10,1,5,7,3,5,4,-2,-3,4,9,6,4,2,4,-3,-10,-4,-6,-3,8,7,-8,-3,-8,-10,-5,-1,-6,-3,5,-5,-10,-8,-7,-5,10,10,-5,-9,-2,-1,5,7,7,4,-6,4,5,4,4,-10,1,2,-3,-8,8,-1,1,6,8,9,6,-1,7,6,3,6,6,-2,9,-3,9,-1,1,-10,7,4,5,6,-1,5,-8,1,-1,2,-5,6,-8,8,-4,10,-8,-5,-2,-4,3,10,-10,-5,6,-10,10,-6,-5,-8,3,-2,-4,1,-10,-10,6,-4,1,-7,7,-7,-5,5,-7,1,-3,-10,-2,5,-8,4,-5,10,10,-4,-7,3,-5,-4,-3,4,-9,-5,5,-4,-4,-7,-1,-6,6,-5,10,7,-6,10,9,7,8,1,-1,6,-7,4,-10,6,-10,-9,1,-8,10,-8,1,8,-7,-3,-8,-4,2,1,-10,-7,10,-3,-5,-7,10,-5,1,2,-6,10,4,7,4,9,6,4,-4,-6,7,-6,-9,8,6,-9,5,-6,-3,-6,-4,-3,-10,6,-4,-3,-8,-10,1,6,-9,2,6,4,3,-8,-4,-7,10,8,-8,8,1,-2,7,-2,4,-10,-3,2,4,-5,3,-5,-7,-6,6,-2,2,-9,-1,5,4,8,10,5,1,4,-2,-6,2,6,8,6,4,-8,8,-2,9,-2,-9,-2,-7,-4,-5,-9,-4,6,-5,-1,8,3,5,10,5,-2,9,5,-2,2,-9,8,-8,-5,-7,-1,8,-2,-7,-6,4,-7,3,6,2,5,-1,-5,7,1,6,2,-5,-6,9,-7,9,-6,7,-10,-2,-10,-9,-3,3,-2,-5,3,-3,2,-1,4,4,-4,4,10,10,2,-3,6,10,-6,-6,-6,-8,-8,-9,8,-4,4,8,-7,-4,-8,3,-4,5,9,9,-8,-4,-5,-1,-6,-7,7,6,6,1,8,1,9,4,-7,3,-1,4,-2,10,1,2,-5,-10,-10,-8,-8,-2,6,5,10,-9,-7,-6,-7,8,-6,-6,9,-3,-10,7,1,-5,5,10,-7,8,-1,2,-3,-6,1,9,7,-8,4,-4,-3,1,8,5,10,9,10,-9,-2,-3,6,-4,3,-1,5,1,4,-8,-5,8,-8,7,8,2,-3,-4,6,-4,-10,-7,2,-3,-2,-9,-3,2,-3,9,7,3,8,-10,5,-5,-9,-8,-4,7,1,3,-2,5,-6,-7,8,6,7,-10,10,-7,-2,9,-7,2,-4,-2,-3,-4,-3,-5,-10,7,-7,-2,-4,5,6,-4,2,-1,-4,-5,-1,-6,-9,-5,2,-8,9,-5,9,-3,-3,7,2,2,-10,10,5,6,-9,-4,-1,1,2,-6,-5,9,-5,-3,-4,-2,-3,6,10,-9,2,-3,6,4,-9,3,9,-2,-8,-1,2,-7,-6,1,8,9,5,-3,-8,-3,9,-1,-7,5,9,-8,-9,-4,-1,-3,4,6,-5,-2,-8,-10,-10,7,5,3,-8,-3,-9,4,-1,-8,2,-4,-5,-10,1,1,-2,-9,10,10,-4,-7,-9,2,9,-5,-3,5,-7,-10,6,2,-10,4,-4,10,-9,-2,7,10,-3,4,-6,-6,8,3,-7,-2,5,-9,-2,6,5,2,3,7,-7,-4,3,-5,-5,-5,-5,-3,4,-9,10,-10,5,-6,-3,4,3,-10,9,-7,8,-1,8,-1,-6,1,-8,-9,-4,-1,8,-5,-7,-7,-4,1,6,-3,3,-9,6,5,2,7,10,2,-7,-9,6,9,2,-2,-1,5,10,-5,3,-10,-3,-10,9,1,1,-8,-9,6,8,-10,-2,-5,8,-9,-9,7,-10,-6,-10,-4,-8,7,1,9,-9,10,-5,-6,-4,-5,5,-6,-2,5,9,3,2,-7,1,-6,-8,-6,3,7,6,-2,-5,-8,-1,8,-2,9,1,1,-3,-4,3,-3,1,-6,1,10,6,-2,-2,-7,1,2,-4,-4,10,-8,-10,-1,-1,8,7,-10,7,-10,-2,5,4,5,-10,5,-7,-5,7,9,-5,2,6,-4,5,2,-2,-1,6,-4,-5,6,-5,-10,-9,2,6,5,-7,-5,-5,-10,-5,3,6,-10,10,4,9,8,3,-1,4,-10,-4,-3,-3,-6,-3,4,8,-10,-9,4,8,-7,1,-1,3,8,-10,6,4,-4,3,-4,-9,9,-1,-10,-4,2,-5,2,8,-7,1,-2,7,9,1,1,2], dtype = "uint8")#candidate|2249|(900,)|const|uint8
call_2247 = relay.TupleGetItem(func_963_call(relay.reshape(const_2248.astype('int16'), [10, 11, 5]), relay.reshape(const_2248.astype('int16'), [10, 11, 5]), relay.reshape(const_2249.astype('uint8'), [900,]), ), 0)
call_2250 = relay.TupleGetItem(func_967_call(relay.reshape(const_2248.astype('int16'), [10, 11, 5]), relay.reshape(const_2248.astype('int16'), [10, 11, 5]), relay.reshape(const_2249.astype('uint8'), [900,]), ), 0)
output = relay.Tuple([call_2220,call_2247,const_2248,const_2249,])
output2 = relay.Tuple([call_2221,call_2250,const_2248,const_2249,])
func_2258 = relay.Function([], output)
mod['func_2258'] = func_2258
mod = relay.transform.InferType()(mod)
mutated_mod['func_2258'] = func_2258
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mutated_mod.get_global_var('func_2258')
call_2259 = func_2258_call()
output = call_2259
func_2260 = relay.Function([], output)
mutated_mod['func_2260'] = func_2260
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_2281 = relay.TupleGetItem(func_2258_call(), 1)
call_2282 = relay.TupleGetItem(func_2260_call(), 1)
func_1629_call = mod.get_global_var('func_1629')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_2286 = relay.var("var_2286", dtype = "uint16", shape = (4, 40))#candidate|2286|(4, 40)|var|uint16
call_2285 = relay.TupleGetItem(func_1629_call(relay.reshape(var_2286.astype('uint16'), [2, 5, 16])), 0)
call_2287 = relay.TupleGetItem(func_1632_call(relay.reshape(var_2286.astype('uint16'), [2, 5, 16])), 0)
func_723_call = mod.get_global_var('func_723')
func_726_call = mutated_mod.get_global_var('func_726')
var_2297 = relay.var("var_2297", dtype = "uint8", shape = (240,))#candidate|2297|(240,)|var|uint8
call_2296 = func_723_call(relay.reshape(var_2297.astype('uint8'), [10, 12, 2]), relay.reshape(var_2297.astype('uint8'), [10, 12, 2]), )
call_2298 = func_723_call(relay.reshape(var_2297.astype('uint8'), [10, 12, 2]), relay.reshape(var_2297.astype('uint8'), [10, 12, 2]), )
bop_2301 = relay.left_shift(var_2286.astype('uint8'), relay.reshape(call_2285.astype('uint8'), relay.shape_of(var_2286))) # shape=(4, 40)
bop_2304 = relay.left_shift(var_2286.astype('uint8'), relay.reshape(call_2287.astype('uint8'), relay.shape_of(var_2286))) # shape=(4, 40)
output = relay.Tuple([call_2281,call_2296,var_2297,bop_2301,])
output2 = relay.Tuple([call_2282,call_2298,var_2297,bop_2304,])
func_2306 = relay.Function([var_2286,var_2297,], output)
mod['func_2306'] = func_2306
mod = relay.transform.InferType()(mod)
mutated_mod['func_2306'] = func_2306
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2306_call = mutated_mod.get_global_var('func_2306')
var_2308 = relay.var("var_2308", dtype = "uint16", shape = (4, 40))#candidate|2308|(4, 40)|var|uint16
var_2309 = relay.var("var_2309", dtype = "uint8", shape = (240,))#candidate|2309|(240,)|var|uint8
call_2307 = func_2306_call(var_2308,var_2309,)
output = call_2307
func_2310 = relay.Function([var_2308,var_2309,], output)
mutated_mod['func_2310'] = func_2310
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_2330 = relay.TupleGetItem(func_2258_call(), 1)
call_2331 = relay.TupleGetItem(func_2260_call(), 1)
output = call_2330
output2 = call_2331
func_2332 = relay.Function([], output)
mod['func_2332'] = func_2332
mod = relay.transform.InferType()(mod)
output = func_2332()
func_2333 = relay.Function([], output)
mutated_mod['func_2333'] = func_2333
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_2347 = relay.TupleGetItem(func_2258_call(), 2)
call_2348 = relay.TupleGetItem(func_2260_call(), 2)
uop_2349 = relay.atan(call_2347.astype('float64')) # shape=(55, 10)
uop_2351 = relay.atan(call_2348.astype('float64')) # shape=(55, 10)
func_1629_call = mod.get_global_var('func_1629')
func_1632_call = mutated_mod.get_global_var('func_1632')
const_2358 = relay.const([-6,9,4,6,-6,7,3,-7,8,-2,-8,1,1,1,8,6,-4,-9,-8,-4,9,8,5,-3,-5,-5,4,-8,-8,2,-9,-9,-5,1,5,-10,7,6,-1,6,-6,1,-10,6,10,-5,-8,1,-5,7,-10,-2,-4,10,1,-3,10,8,3,-6,-2,1,5,3,6,2,8,-4,4,10,-1,-4,-5,1,-6,10,-7,-10,-2,-6,5,-6,-2,5,-6,3,6,-10,-10,10,7,-8,2,1,-10,-4,-5,-10,-1,-4,10,6,-5,-8,5,-2,9,-9,7,6,-6,-4,3,7,7,-2,-1,4,5,10,1,4,-4,-2,4,-8,-10,-1,-4,-8,-4,-9,-9,10,6,-3,3,-8,10,-8,2,5,8,-7,-8,7,-5,4,1,7,-3,-6,-10,5,-6,6,-1,-10,-9,-3], dtype = "uint16")#candidate|2358|(160,)|const|uint16
call_2357 = relay.TupleGetItem(func_1629_call(relay.reshape(const_2358.astype('uint16'), [2, 5, 16])), 0)
call_2359 = relay.TupleGetItem(func_1632_call(relay.reshape(const_2358.astype('uint16'), [2, 5, 16])), 0)
func_1975_call = mod.get_global_var('func_1975')
func_1982_call = mutated_mod.get_global_var('func_1982')
const_2380 = relay.const([-6.213281,-8.776457,-5.418643,-9.890390,0.849765,6.559057,-0.095627,-0.468444,-6.224652,7.348477,2.530409,-1.229812,0.864173,-1.572945,1.838196,9.850851,-1.253480,-5.533693,-5.443296,6.335639,-8.525317,-5.986979,7.859309,-7.660287,1.538810,6.999624,7.612758,-1.983581,-8.607846,1.175998,-0.864262,-6.397556,8.100931,7.202280,8.462082,8.555795,7.386836,-2.513084,-8.587334,-9.626361,9.660047,-2.639145,6.277952,7.626097,7.037393,-4.587921,0.710754,-4.895246,2.767328,8.249885,-2.276347,-4.938298,-9.159689,-6.132209,-5.493170,-4.294229,3.065619,-9.251542,-1.280193,-7.179079,-8.927625,5.646546,2.240743,-1.997035,6.988033,0.454639], dtype = "float32")#candidate|2380|(66,)|const|float32
var_2381 = relay.var("var_2381", dtype = "uint8", shape = (900,))#candidate|2381|(900,)|var|uint8
const_2382 = relay.const([4.761635,-2.952693,-6.383660,7.595973,-1.976794,6.733439,0.224714,0.734616,3.624220,9.310100,-4.423134,2.293400,-3.324990,-2.814173,-3.395694,-2.416216,-1.407187,2.044976,9.969585,2.187738,-2.058915,2.127108,-9.963372,-3.037235,6.558070,-5.398004,3.736716,-2.520076,-4.308237,-2.996259,9.459512,-8.847882,2.050382,-1.699660,-5.854646,3.323859,-2.662862,2.101284,6.015503,-7.904085,2.351085,0.403999,-7.538102,7.181901,-3.861341,7.186163,-3.455472,5.577554,1.582946,-0.329101,4.803732,9.634205,-8.584842,-6.764844,-9.059157,-9.614136,-9.811424,-2.021745,-1.334616,8.686391,0.755709,-0.157969,2.162235,-7.733149,5.182133,-1.055424,-2.826986,-3.331182,-2.779316,-4.559513,2.270157,2.978729,-5.373741,6.099687,7.361308,9.977025,0.260455,-0.160007,4.795075,-5.577815,1.317088,-6.510096,-4.471172,-1.272842,4.841011,5.878114,8.626947,-2.450552,-4.780039,-6.836766,0.819349,4.383754,9.373297,7.932727,-6.716086,9.890282,-5.456617,5.208042,-4.602006,-8.747568,-5.054443,8.515621,-1.328717,-2.290079,2.351139,-3.178229,-8.127861,0.208168,5.342014,4.216279,-6.566669,6.442740,-2.105138,3.307700,-3.632131,-0.845726,9.170240,-2.742820,-9.287923,8.444350,-0.514539,-1.591965,2.120852,-5.045472,-1.780680,-7.805162,1.164724,2.432192,-0.427744,-5.841945,-1.474802,5.738359,-5.644499,8.665192,-4.938002,-5.829293,-4.601989,-2.482044,0.318488,-7.194344,-3.793592,-1.547856,-2.934014,1.289563,9.883452,7.764632,-4.157273,7.828648,7.497852,1.328993,4.157090,-0.983175,-2.323385,1.256585,8.369553,2.861730,-3.312280,1.709019,-2.008334,0.592234,2.274357,9.663367,-8.584037,-3.738202,-6.050199,1.364631,-4.946840,6.854732,-0.608834,-5.098728,6.780893,2.317351,7.358639,-7.650175,6.782544,3.667585,0.029232,9.375573,-9.444866,5.890156,2.670479,-4.571807,-6.767556,8.606858,2.204212,-5.419955,2.750147,-9.390553,1.614364,-3.982385,0.448173,4.886558,9.460566,-5.971101,-5.037169,-6.938651,-8.887354,0.736766,-3.835604,-2.826575,-1.280690,-6.721209,-1.455362,8.071420,-7.342240,3.728827,8.284752,-4.835411,6.491388,-5.883853,-2.999940,1.188075,-6.244930,9.416281,2.935937,-7.135911,-2.157996,-7.846009,2.432296,-3.738633,5.883920,6.771590,-4.666259,6.350080,-9.428267,-8.341396,-7.502901,-5.701487,-9.591519,-6.517531,9.200509,-4.855330,9.478139,-0.906361,-0.055792,-2.334046,-3.967025,-4.769724,3.475447,-6.436598,-2.368177,-3.715097,0.548037,9.590319,-6.415049,4.761971,-1.441351,-1.139334,-0.225387,-7.266381,4.701490,3.978041,4.702019,8.962233,4.329382,-3.733307,-0.260355,1.233816,4.241248,5.724330,-0.558927,7.812600,-9.897702,-6.585157,1.778300,4.814201,-3.148499,-2.701825,7.740617,-7.539643,-6.816369,-1.401755,-5.052508,-0.075851,-6.082553,3.303378,-4.915725,8.903040,-9.321281,-0.014067,-4.791213,6.950675,-3.673208,-0.709616,1.903973,-5.900093,-5.736518,-6.255494,-2.526251,-1.163871,-6.245675,0.962080,0.844645,-0.576063,8.493826,2.766504,-8.271196,-1.116259,-6.848019,-3.800627,9.766575,6.130951,6.742441,-3.326362,-3.979063,-4.459082,1.284158,-4.799363,-8.707464,-2.952052,9.619484,-6.862433,-7.248211,-1.717146,3.823400,-0.111790,9.801224,-5.005145,5.958004,8.825491,-4.239061,3.169235,8.513064,-0.319291,-0.386880,3.849687,-1.567121,4.103327,-2.275865,6.073792,5.477928,4.636615,-7.265040,0.316285,-7.712364,4.903617,2.470316,-3.338522,-1.476159,-1.036101,-1.536359,-0.063107,0.471701,8.469214,0.532968,-9.989067,7.604820,-1.373708,8.147791,1.368433,-0.690589,-7.072212,1.351355,-0.697207,5.469210,-8.740701,2.003161,-6.767128,4.293259,-6.089545,2.971330,2.791960,-6.433991,-2.811356,3.298006,-6.230675,-4.040407,9.802172,9.141346,-9.959710,0.778982,-6.536064,0.105466,8.797590,6.207223,-4.712000,-1.245468,3.633006,7.186743,5.880769,2.474858,-3.469792,-5.274687,-9.466153,1.653300,8.134875,1.029066,8.765840,-7.038154,7.729705,6.953323,-2.452330,0.575816,-2.762488,0.274085,-7.174906,5.589358,6.669020,-4.114399,-5.716876,-5.260287,-1.373946,6.542591,-8.619001,6.157191,5.990162,9.904089,-7.277683,5.072230,6.019405,-3.560822,-9.313871,-0.185474,-5.517319,6.952140,2.923351,-0.555492,4.908211,9.981147,0.026261,-6.546499,4.056804,8.788540,-5.962521,7.081815,4.242604,4.398974,9.624017,4.155174,1.111635,-3.958817,-1.627384,-9.714915,4.386186,-1.416631,-4.547132,6.234084,-9.128160,-1.197297,-1.353953,1.074940,6.919405,3.169900,-2.958623,-5.484968,0.097263,-3.700263,2.439441,5.944666,8.449438,-4.821549,-4.959006,0.970301,-8.779032,-4.150333,9.381522,-3.630017,-6.870214,-8.852182,0.176211,-7.086929,7.981620,-6.192818,-8.030022,0.243303,7.617754,6.743580,-8.841631,0.124719,-5.858565,7.970085,2.818668,3.521681,6.618731,-7.986197,-1.280110,8.715301,-2.974583,1.165625,5.168263,-7.757409,-7.324131,9.793046,-7.225927,6.740960,-1.268327,9.330324,-5.787041,7.500207,-8.404768,-4.162977,8.683734,-6.949075,-7.063377,-2.048693,1.548423,-8.749167,-2.885181,-6.918819,-6.948117,-0.573341,-0.279406,-1.043911,-3.802140,-5.872049,-6.844100,5.664212,-2.818031,9.280756,4.693476,-0.209645,-4.394834,-7.771217,-3.884155,0.922098,-3.019873,0.462524,8.952926,-4.296028,-8.968635,-6.436228,9.949816,-9.304259,-1.730364,-6.098512,9.058641,-3.846305,-4.298360,-1.888837,8.278425,7.734393,6.191115,-5.189003,2.712181,-0.042485,9.431734,-6.443468,4.149526,-9.277743,-9.396679,9.796675,7.795260,7.631916,6.501704,3.914719,9.377875,-1.188482,5.982646,-9.128558,0.192416,-5.394668,1.446102,-7.742867,5.823178,-4.735567,9.457368,2.927010,6.215013,-6.687069,6.780352,2.168479,4.067565,2.825961,-2.728323,9.897087,2.567649,-9.582704,-9.331076,2.676184,6.857508,0.283979,8.378135,-7.013208,1.078016,9.838807,-5.837553,3.431220,7.751144,-3.562167,-1.737565,4.342903,-6.081374,1.660742,-7.005336,-6.546038,-0.302306,2.832046,8.235230,4.493898,-5.332089,4.585954,7.263631,-7.157416,0.293087,9.800441,-5.994275,5.636921,-3.284861,6.613459,9.602517,9.299088,2.559555,-5.049079,-9.555045,7.644908,-2.123365,2.054043,-5.391426,-2.483301,-3.552371,8.045566,6.813801,5.560042,1.160867,-4.796072,3.469116,7.552936,-1.173695,2.535071,0.364514,-1.161483,1.332647,1.190051,3.379205,2.380098,9.853573,0.873391,-1.399863,0.219885,4.756203,-4.366856,7.536201,-5.035566,0.959589,-8.831935,-5.031998,5.417139,-1.382252,3.414425,-8.296788,9.644689,-7.696807,-9.992199,-5.690002,-3.780186,-7.323729,-7.430612,-2.526408], dtype = "float64")#candidate|2382|(648,)|const|float64
const_2383 = relay.const([-4,4,-1,5,3,9,-3,-1,6,-7,-9,-3,3,-3,-6,-1,-5,8,-7,-5,-5,2,-9,-5,9,4,-6,-2,10,-3,2,-1,-10,5,1,8,6,4,-4,-10,10,-10,-1,-5,-10,9,4,-8,-10,4,7,-9,-3,-6,-3,10,10,-10,-4,4,-3,5,5,-4,10,-6,1,8,8,10,10,-3,-10,1,-7,-8,-8,-10,8,-5,1,3,-7,-5,-5,-4,-3,-7,-1,-8,5,-1,-9,-5,-4,-5,-4,-8,-1,5,7,3,8,4,-2,10,-8,-10,3,-6,-10,3,-1,-6,-3,8,-10,-10,5,-10,6,-4,-4,-1,-4,3,8,-9,-8,-1,3,4,4,-4,10,6,7,-10,6,7,8,3,9,-7,6,1,-9,5,-9,-4,6,-2,-10,5,4,8,-3,8,-3,-10,-4,10,-3,9,-5,-10,-5,-5,7,-2,3,2,9,7,-6,-2,-7,-6,-7,-4,-9,5,-9,8,-2,6,10,-3,-10,2,-9,-10,7,7,-2,8,5,7,6,9,-8,5,-3,-9,-9,2,-7,4,-10,-10,4,-6,-1,-3,8,7,5,4,-2,-4,5,-1,-10,-6,6,3,-2,-8,-1,2,-1,9,-2,-7,-5,-7,8,-3,-1,-1], dtype = "uint8")#candidate|2383|(240,)|const|uint8
call_2379 = relay.TupleGetItem(func_1975_call(relay.reshape(const_2380.astype('float32'), [3, 2, 11]), relay.reshape(uop_2349.astype('int16'), [550,]), relay.reshape(var_2381.astype('uint8'), [900,]), relay.reshape(const_2382.astype('float64'), [648,]), relay.reshape(const_2383.astype('uint8'), [240,]), ), 5)
call_2384 = relay.TupleGetItem(func_1982_call(relay.reshape(const_2380.astype('float32'), [3, 2, 11]), relay.reshape(uop_2349.astype('int16'), [550,]), relay.reshape(var_2381.astype('uint8'), [900,]), relay.reshape(const_2382.astype('float64'), [648,]), relay.reshape(const_2383.astype('uint8'), [240,]), ), 5)
func_1061_call = mod.get_global_var('func_1061')
func_1064_call = mutated_mod.get_global_var('func_1064')
var_2386 = relay.var("var_2386", dtype = "float32", shape = (286, 4))#candidate|2386|(286, 4)|var|float32
call_2385 = func_1061_call(relay.reshape(var_2386.astype('float32'), [11, 8, 13]), relay.reshape(var_2386.astype('float32'), [11, 8, 13]), )
call_2387 = func_1061_call(relay.reshape(var_2386.astype('float32'), [11, 8, 13]), relay.reshape(var_2386.astype('float32'), [11, 8, 13]), )
uop_2389 = relay.cos(call_2379.astype('float64')) # shape=(10, 12, 2)
uop_2391 = relay.cos(call_2384.astype('float64')) # shape=(10, 12, 2)
func_2332_call = mod.get_global_var('func_2332')
func_2333_call = mutated_mod.get_global_var('func_2333')
call_2401 = func_2332_call()
call_2402 = func_2332_call()
output = relay.Tuple([uop_2349,call_2357,const_2358,const_2380,var_2381,const_2382,const_2383,call_2385,var_2386,uop_2389,call_2401,])
output2 = relay.Tuple([uop_2351,call_2359,const_2358,const_2380,var_2381,const_2382,const_2383,call_2387,var_2386,uop_2391,call_2402,])
func_2409 = relay.Function([var_2381,var_2386,], output)
mod['func_2409'] = func_2409
mod = relay.transform.InferType()(mod)
var_2410 = relay.var("var_2410", dtype = "uint8", shape = (900,))#candidate|2410|(900,)|var|uint8
var_2411 = relay.var("var_2411", dtype = "float32", shape = (286, 4))#candidate|2411|(286, 4)|var|float32
output = func_2409(var_2410,var_2411,)
func_2412 = relay.Function([var_2410,var_2411,], output)
mutated_mod['func_2412'] = func_2412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_2426 = relay.TupleGetItem(func_2175_call(), 0)
call_2427 = relay.TupleGetItem(func_2176_call(), 0)
output = relay.Tuple([call_2426,])
output2 = relay.Tuple([call_2427,])
func_2434 = relay.Function([], output)
mod['func_2434'] = func_2434
mod = relay.transform.InferType()(mod)
mutated_mod['func_2434'] = func_2434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2434_call = mutated_mod.get_global_var('func_2434')
call_2435 = func_2434_call()
output = call_2435
func_2436 = relay.Function([], output)
mutated_mod['func_2436'] = func_2436
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_2445 = relay.TupleGetItem(func_2175_call(), 0)
call_2446 = relay.TupleGetItem(func_2176_call(), 0)
var_2456 = relay.var("var_2456", dtype = "float64", shape = (11, 12, 8))#candidate|2456|(11, 12, 8)|var|float64
bop_2457 = relay.power(call_2445.astype('float64'), relay.reshape(var_2456.astype('float64'), relay.shape_of(call_2445))) # shape=(11, 12, 8)
bop_2460 = relay.power(call_2446.astype('float64'), relay.reshape(var_2456.astype('float64'), relay.shape_of(call_2446))) # shape=(11, 12, 8)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
var_2464 = relay.var("var_2464", dtype = "uint16", shape = (160,))#candidate|2464|(160,)|var|uint16
var_2465 = relay.var("var_2465", dtype = "uint8", shape = (240, 1))#candidate|2465|(240, 1)|var|uint8
call_2463 = relay.TupleGetItem(func_2306_call(relay.reshape(var_2464.astype('uint16'), [4, 40]), relay.reshape(var_2465.astype('uint8'), [240,]), ), 1)
call_2466 = relay.TupleGetItem(func_2310_call(relay.reshape(var_2464.astype('uint16'), [4, 40]), relay.reshape(var_2465.astype('uint8'), [240,]), ), 1)
output = relay.Tuple([bop_2457,call_2463,var_2464,var_2465,])
output2 = relay.Tuple([bop_2460,call_2466,var_2464,var_2465,])
func_2471 = relay.Function([var_2456,var_2464,var_2465,], output)
mod['func_2471'] = func_2471
mod = relay.transform.InferType()(mod)
mutated_mod['func_2471'] = func_2471
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2471_call = mutated_mod.get_global_var('func_2471')
var_2473 = relay.var("var_2473", dtype = "float64", shape = (11, 12, 8))#candidate|2473|(11, 12, 8)|var|float64
var_2474 = relay.var("var_2474", dtype = "uint16", shape = (160,))#candidate|2474|(160,)|var|uint16
var_2475 = relay.var("var_2475", dtype = "uint8", shape = (240, 1))#candidate|2475|(240, 1)|var|uint8
call_2472 = func_2471_call(var_2473,var_2474,var_2475,)
output = call_2472
func_2476 = relay.Function([var_2473,var_2474,var_2475,], output)
mutated_mod['func_2476'] = func_2476
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_2513 = relay.TupleGetItem(func_2175_call(), 0)
call_2514 = relay.TupleGetItem(func_2176_call(), 0)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_2517 = relay.TupleGetItem(func_2258_call(), 3)
call_2518 = relay.TupleGetItem(func_2260_call(), 3)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_2533 = relay.TupleGetItem(func_2258_call(), 1)
call_2534 = relay.TupleGetItem(func_2260_call(), 1)
func_1780_call = mod.get_global_var('func_1780')
func_1783_call = mutated_mod.get_global_var('func_1783')
const_2538 = relay.const([6.707493,3.556917,-7.770356,4.771160,0.323411,7.871698,-5.755705,-2.473275,5.972432,2.562309,-6.181560,-5.886907,-7.677218,1.035641,0.901141,-3.787011,0.893903,-0.630236,-5.187558,9.113079,8.778466,9.114645,5.821144,5.848155,-4.576958,-5.104458,7.454784,-9.725305,2.684483,-4.260415,9.515733,-1.065274,-8.360065,-5.611725,-7.493743,6.407518,-0.825327,9.378185,-4.489959,-7.027527,-8.972112,-8.218443,5.949761,2.488579,-4.106308,-4.954418,-3.304212,-7.336624,1.849582,2.030452,-2.609861,-3.627289,7.793480,-0.648231,-2.382627,1.757237,8.165957,-2.184173,-0.626856,-6.015559,2.078285,-1.054477,7.039451,0.526814,2.055898,-7.285967,0.126988,-3.872846,1.051044,-0.103376,-7.289012,-1.662368,1.099455,-7.442405,-1.090932,-0.174729,5.751287,-4.007727,-8.047228,-9.940652,-3.341708,5.573440,6.271384,7.308308,0.935922,-1.548158,8.019709,1.596025,7.896394,-8.428599,-1.062445,-4.548282,2.318014,-0.167343,-5.782488,3.259470,-2.479890,-7.662866,-6.571397,-1.173216,4.821611,7.680827,3.422449,-6.581377,1.933625,-9.515036,5.927575,5.902642,1.893319,-8.332637,-9.205170,2.550282,4.137970,-6.251486,0.542142,4.456891,7.792024,3.698290,3.107288,-7.345175,-0.726973,2.512895,8.777389,-8.186869,-3.419198,-1.078519,-3.744126,3.571527,4.263828,4.979092,-0.174761,1.598993,-8.930969,-9.866630,-5.823868,-2.143009,-8.431018,1.771150,-6.687843,-3.835514,-9.810904,-5.149663,-3.012173,-7.512185,0.841687,-2.343479,-0.132465,-5.400992,-2.371638,3.162575,6.397634,7.274904,2.663748,0.863770,-9.637205,-9.481088,-6.287162,6.364295,0.308878,-9.235278,-7.797185,-6.584046,-8.942529,9.398036,-9.432311,-1.375537,-7.382450,2.629972,-1.563099,0.001078,-7.418155,8.232379,-7.573798,-0.052364,1.038582,2.407082,8.675735,-6.990900,-0.010585,5.379266,-0.717518,-7.807720,2.318632,-2.144450,-8.634491,5.814652,-9.202971,2.288115,8.894240,-6.185602,-5.879763,-7.175191,4.837533,5.040482,-4.706676,-1.097510,-8.072315,8.139302,-3.147372,3.396297,-7.240869,-2.849901,-8.822174,1.616031,9.514840,-6.025662,4.957042,0.041920,4.548021,-6.608846], dtype = "float64")#candidate|2538|(210,)|const|float64
call_2537 = relay.TupleGetItem(func_1780_call(relay.reshape(const_2538.astype('float64'), [5, 14, 3])), 0)
call_2539 = relay.TupleGetItem(func_1783_call(relay.reshape(const_2538.astype('float64'), [5, 14, 3])), 0)
uop_2563 = relay.atanh(call_2537.astype('float64')) # shape=(10, 6, 15)
uop_2565 = relay.atanh(call_2539.astype('float64')) # shape=(10, 6, 15)
uop_2587 = relay.log2(uop_2563.astype('float32')) # shape=(10, 6, 15)
uop_2589 = relay.log2(uop_2565.astype('float32')) # shape=(10, 6, 15)
func_2409_call = mod.get_global_var('func_2409')
func_2412_call = mutated_mod.get_global_var('func_2412')
var_2592 = relay.var("var_2592", dtype = "float32", shape = (1144,))#candidate|2592|(1144,)|var|float32
call_2591 = relay.TupleGetItem(func_2409_call(relay.reshape(call_2537.astype('uint8'), [900,]), relay.reshape(var_2592.astype('float32'), [286, 4]), ), 8)
call_2593 = relay.TupleGetItem(func_2412_call(relay.reshape(call_2537.astype('uint8'), [900,]), relay.reshape(var_2592.astype('float32'), [286, 4]), ), 8)
output = relay.Tuple([call_2513,call_2517,call_2533,const_2538,uop_2587,call_2591,var_2592,])
output2 = relay.Tuple([call_2514,call_2518,call_2534,const_2538,uop_2589,call_2593,var_2592,])
func_2607 = relay.Function([var_2592,], output)
mod['func_2607'] = func_2607
mod = relay.transform.InferType()(mod)
var_2608 = relay.var("var_2608", dtype = "float32", shape = (1144,))#candidate|2608|(1144,)|var|float32
output = func_2607(var_2608)
func_2609 = relay.Function([var_2608], output)
mutated_mod['func_2609'] = func_2609
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_2765 = relay.TupleGetItem(func_2175_call(), 2)
call_2766 = relay.TupleGetItem(func_2176_call(), 2)
func_2471_call = mod.get_global_var('func_2471')
func_2476_call = mutated_mod.get_global_var('func_2476')
const_2773 = relay.const([-8.213489,3.270340,-3.002994,-8.709466,0.718557,3.584035,-7.453629,-9.106397,0.940882,7.989204,-4.506503,1.783208,-4.756819,-7.671150,3.383759,0.020322,-8.977160,8.683146,-0.585991,-4.369648,-7.592639,8.534405,-3.831822,-2.604256,7.898865,3.286465,1.450042,-4.632994,-0.399875,4.740553,-7.265786,-0.588025,-9.681247,8.369077,9.541049,-8.604822,4.566985,7.333265,-3.240573,5.474645,4.789081,9.390871,2.082405,8.599600,-8.221249,3.817656,1.420563,-7.756027,0.603517,1.066127,2.945770,-3.227263,2.594777,-9.153065,6.265927,-2.628489,-0.530832,-5.627132,2.501075,7.496612,-7.517304,-0.693795,-8.241284,1.026136,-6.589243,2.359784,2.945716,-6.209758,8.504537,-5.152338,-0.816080,5.087082,-6.543011,-2.511268,4.651253,-4.973297,-6.290251,-0.759507,0.613295,-3.883303,-5.919466,6.339340,6.316187,-6.803522,-1.699590,-1.813923,5.124282,3.049934,0.345588,4.579937,7.017298,-7.464802,-1.187841,1.329917,4.882157,9.883863,3.517690,7.464270,-4.334876,2.472596,-8.690955,7.584858,6.756505,0.750725,-9.209671,-7.925058,-6.524900,1.356473,4.401611,-5.597801,-7.143246,-6.195360,-0.196884,9.638242,1.359728,2.917410,-7.684258,-8.181023,8.673149,-3.531255,-2.263043,-5.044200,7.462579,-6.214124,-1.930773,7.903402,-4.479903,-2.932687,0.491252,-8.113707,-0.811479,-0.418070,-8.028975,-6.902567,8.442045,-7.716662,9.838850,-1.681620,-4.660854,6.121876,-0.638374,-6.681318,-9.302974,5.617835,-3.405856,9.251352,-2.132154,8.743550,-0.582659,-7.380117,-5.391939,1.928463,6.951389,-5.910219,-3.365628,-2.362243,5.046889,-2.916632,6.219013,5.671561,3.773607,-2.880750,6.486182,-3.316812,-5.538736,8.076957,3.456333,-2.291597,-1.216858,6.733183,6.064278,7.104425,-8.888881,-9.709772,-6.309458,6.055720,-3.042433,7.400659,8.834174,7.191443,-4.026350,-7.426231,-0.155539,3.981138,9.365277,9.353541,-2.598002,9.119285,-4.125817,9.053817,-1.704736,-2.429296,-4.664163,-8.908980,-3.586726,2.520359,-4.991710,-9.805805,6.656000,8.525883,-1.869413,4.144336,-9.025333,5.501571,-1.969527,5.400522,9.089781,-8.949405,5.798323,9.055919,-0.187851,-6.207010,-6.460207,8.405256,-1.717874,0.948613,-6.012278,-3.536031,9.481817,8.162109,-0.293224,-4.821856,3.559344,4.481694,3.659795,-2.146817,-6.586559,-7.612243,6.514512,-1.520116,1.867369,2.868260,-3.928050,-4.246290,1.107578,3.028541,-9.528187,-1.995446,-9.746901,-2.260147,-4.542673,-5.758228,6.432090,-0.654796,-3.916707,2.151789,-3.206160,8.768547,-6.862012,-2.013576,-5.725750,2.059229,-7.951333,-6.490191,2.941208,-0.458980,7.234343,-3.501976,-6.813831,1.344948,7.253061,-3.130434,2.505823,-0.131685,4.201162,-9.200407,4.896400,-8.026386,9.163113,-6.443755,2.168523,-4.414675,9.375498,4.363496,0.583595,2.614683,6.653587,-6.046186,1.291626,-3.868692,-1.478527,-9.050190,-3.140625,6.341567,0.072384,8.240725,-0.382668,9.674320,-8.264627,2.067373,-8.000436,8.375948,-0.216789,-4.438884,-1.543030,-9.899583,6.487789,-5.040622,8.081365,8.219745,-6.987302,2.454499,9.484620,-4.365590,-5.605671,9.963413,-5.816725,-4.716032,3.720528,4.427535,-7.606177,-6.018827,-5.409890,5.986355,-8.368200,1.536687,4.432604,6.422821,8.132292,0.367413,-2.605378,-9.683681,6.108833,0.347695,-0.053770,-1.058927,3.345741,-9.156733,-3.600065,6.129310,4.390640,3.285557,-2.605257,4.001465,-9.775611,9.646740,4.217740,-0.294447,-0.758258,3.291099,-2.139811,1.857958,-7.006044,4.641966,-9.817559,1.539005,5.326567,-5.705158,-9.109175,-6.966847,-9.793421,2.093615,6.246969,-0.865815,0.577300,-6.977392,-4.541559,9.454191,-6.349866,8.993977,-5.818044,-5.325324,7.996551,3.034113,-9.564580,-7.406240,8.421961,-7.957526,7.224787,-3.579210,7.366417,-7.055080,8.870686,-2.655426,3.403009,-1.984819,8.546363,8.236907,5.374871,-3.444579,-9.088789,2.326486,-4.906011,7.368995,-9.649733,-1.973723,-4.346917,2.287470,1.667972,3.971506,7.227848,-4.538700,-9.441643,7.643928,-4.240092,4.594917,6.775288,-1.514233,5.590705,7.807175,1.872469,7.519707,8.707981,4.874349,-1.451838,1.360102,-8.956089,-1.850432,7.267429,0.938368,6.936824,2.322312,5.172440,-0.416487,2.153326,-9.442406,-1.390891,-6.505996,6.269696,-6.220666,3.317043,2.556767,9.291299,-1.826500,-9.952134,-8.579745,0.184155,-9.055080,3.093030,0.144629,-7.561149,8.886336,8.379810,-1.371783,-3.822295,-4.145483,-3.821667,8.833577,-9.907945,2.723398,2.635949,-3.698297,9.477416,8.172278,-0.466866,7.419789,7.481806,8.137073,-8.648002,1.025286,-9.558955,-5.455986,9.340722,-2.879313,-9.224696,-2.287373,1.713359,-4.447984,6.076153,5.512756,-8.500299,4.784198,9.836263,-5.698682,-9.395858,-6.819719,5.420813,-5.003875,7.069522,-6.561619,-6.529231,0.258943,-7.292310,-8.821843,-4.103308,7.954633,-8.363371,-7.625699,6.391840,0.875339,-6.962443,-9.369225,7.306127,-2.426771,2.916701,-5.289092,-0.062788,8.858080,0.654908,-6.033101,8.471896,-4.295000,-2.914426,4.961947,4.900205,-6.933483,8.078803,3.101082,8.219993,0.565737,4.244721,-4.506266,4.306519,-4.905734,4.475556,-4.901556,-0.062263,-8.392151,5.434941,-2.116196,-6.270703,-7.576719,1.908309,-1.591779,-0.780410,3.729589,3.454786,1.416434,2.520119,3.144587,-4.362424,8.631065,-4.868205,-2.933141,6.324213,-5.126362,6.988880,7.732133,8.587116,7.584240,7.675991,1.084935,-9.214147,-5.060356,-3.350373,-9.216667,2.235545,3.518381,3.020681,-8.443730,-0.327507,-0.644080,5.721977,-0.905213,-2.679738,-2.838300,-6.670063,-9.459597,-7.692763,-8.109133,8.182973,-7.651247,-1.951768,-4.198115,4.115275,-7.325645,-4.739615,7.358064,6.520183,-6.511057,8.277300,7.891783,-4.179828,-9.116191,-1.957497,3.615142,7.338210,9.560644,0.498550,4.898852,-8.714127,-0.917231,-5.767625,-7.124475,2.465822,3.852810,-5.266842,-8.420212,6.554524,2.152015,6.363871,3.172957,-8.841939,-6.752254,-5.912466,-9.425152,2.519986,5.588891,-7.889641,1.341391,-3.346475,-7.435486,-7.477396,6.158957,6.312295,7.664540,4.567427,0.881248,8.751031,7.297551,8.742794,-1.892422,-5.340646,0.515358,-6.591334,-1.966593,3.402020,9.987448,3.517125,1.236566,8.719199,8.431374,1.290297,6.235359,-0.448024,7.473226,-8.831400,9.072597,6.083993,-3.328583,4.039323,7.360521,0.332621,-3.054018,4.862542,-9.967595,1.564243,-6.286834,-6.217640,5.796568,-9.409028,2.558829,6.733608,-2.307791,6.441026,-3.710860,6.975649,6.718530,-2.479252,-9.804394,-8.452022,-8.020027,-7.884790,-8.858902,-3.503189,-7.166060,-6.477531,-5.850919,-0.041796,9.900030,3.901455,-7.112250,2.094936,9.216144,-3.858350,3.871901,-9.050976,-5.942772,-4.978777,-5.291609,-4.149853,-3.370522,-6.659685,-2.657012,2.275279,-6.329133,7.292700,6.029256,-0.895854,-8.896617,-2.400293,1.061274,-2.939725,-9.026707,7.248927,7.798047,9.788062,-2.536023,-0.130711,-7.302824,-3.921932,-0.352709,2.045043,-8.946982,8.069118,-2.255876,0.800886,-5.397153,0.512423,-5.895335,2.100806,3.329640,1.382221,-1.515273,-6.674048,0.022515,0.493808,7.520947,-5.150088,9.093321,-7.849965,6.213180,7.562712,0.620567,-5.508460,5.078993,-6.512620,-2.884795,1.882984,0.790855,7.158773,-3.584820,9.640557,-7.281104,-7.345396,5.544852,2.729538,-0.388736,-3.776335,-6.410564,7.162391,0.219297,-7.967696,-6.644612,-7.393574,4.377519,-0.035421,9.359485,2.308467,2.311075,6.218627,1.473795,-4.943324,0.276109,1.133504,9.508468,-2.285558,-6.939369,1.679164,-1.954397,9.389565,1.332367,6.411515,4.038068,-2.155140,-9.258774,5.617834,8.541834,7.936684,-8.922948,-4.210968,-4.099854,-6.358325,9.940050,8.782048,-0.128772,1.636765,-5.720069,-1.858611,-2.798213,8.826634,-1.568808,-8.000897,-2.025476,-8.498802,-5.802087,-9.260245,0.389701,-6.546215,-6.143093,-3.689452,-4.096472,9.623857,6.244383,-2.622358,-6.461719,-0.255086,-4.177342,-8.960541,4.641612,6.300658,1.905480,-6.344853,9.582606,3.907965,-5.421025,-7.961123,-0.479291,8.298323,1.128627,4.308894,2.865214,-5.931918,-4.360119,-4.275924,5.807639,5.517706,-1.032482,-5.806043,-3.544137,5.709569,9.127306,8.381016,7.192502,3.639330,-7.348004,2.616908,9.414063,0.631840,-4.255706,4.262906,-3.121827,3.295719,-7.569669,-0.795591,6.953466,4.446743,6.928558,-6.263203,6.514541,2.866725,-7.504134,-4.816819,-4.415312,1.407800,2.138156,-0.241586,-3.597580,-4.784089,2.012230,7.342797,3.304899,-4.501513,-8.737042,3.478815,-5.299323,8.678837,8.539561,-0.056049,-6.858757,2.888988,-4.389292,1.133061,1.262392,2.192538,-7.083234,4.759914,4.691284,-4.787438,3.429680,-8.922676,-5.674723,-9.350029,2.425916,9.578638,7.719693,2.447295,-9.359077,-0.451409,3.730504,7.960936,-2.506083,3.035940,-4.679196,5.619847,2.265210,9.596903,-2.360635,-5.769996,3.399566,0.211871,-2.536376,-3.391122,8.348653,-0.567812,6.328085,-0.530166,-0.932291,2.239696,4.324387,-4.153965,-3.312862,-5.546049,-0.637805,-3.885498,-8.892582,-9.706596,9.102604,8.847133,1.664850,5.018386,1.614573,-3.469041,2.309665,-6.931859,5.130203,0.374513,4.042714,-8.992107,-6.567586,5.145179,-0.199167,1.000403,-7.798877,-0.386046,-3.630431,-9.510715,9.684405,-0.152854,8.277161,7.430964,1.155301,-9.295639,-9.585248,-4.652648,-8.329012,9.070525,5.578517,-6.014585,3.874502,5.955746,-2.331015,-6.081070,4.393798,-8.586648,7.539303,2.773279,-1.152149,8.322227,-6.445902,-9.655362,9.701163,8.587924,-2.264647,5.836691,-5.747036,-7.393160,-7.932886,-6.558371,4.705516,-5.361412,-0.514929,5.768368,-6.024793,1.090441,4.937038,6.591231,1.188692,9.251635,-4.121277,5.069687,-3.926593,3.346183,-9.812188,-3.580361,-3.262041,7.022669,-8.871094,3.388575,8.294995,2.393614,-3.927994,-1.677558,6.504915,-3.518880,-4.351366,-9.715820,8.062192,1.727465,1.079572,9.616875,3.952563,-1.367223,1.650066,-8.065769,-9.912916,0.946691,-8.957395,-3.950634,-8.243491,8.738305,-5.701661,2.271899,8.775481,-3.378997,-1.197021,-9.693764,-0.696656,7.705038,-2.760399,-4.745196,5.532720,-1.035129,5.236301,8.638410,5.314845,-6.116120,-9.792220,0.798210,6.527017,-1.655455,5.770478,8.032669,0.869668,9.350111,-4.078578,-1.726227,-4.995871,9.564244,1.457443,5.051565,2.937364,-8.715072,5.930645,2.249363,5.928980,-0.609145,-5.353091,-1.683460,-1.106049,9.369010,-0.709875,-1.592003,-6.565306,-4.033718,-4.175502,-0.465494,-9.230580,9.597133,-7.167111,-3.010041,-7.751692,-7.157518,-6.440964,-2.514114,6.348387,2.071774,6.222939,-0.934306,8.020975,1.404266,-2.599307,9.922876,-8.047417,-3.469730,0.662762,1.807644,1.679810,-5.270415,-8.997258,-4.233775,-5.417612,4.127133,0.153420,-5.429207,2.695416], dtype = "float64")#candidate|2773|(1056,)|const|float64
var_2774 = relay.var("var_2774", dtype = "uint16", shape = (160,))#candidate|2774|(160,)|var|uint16
var_2775 = relay.var("var_2775", dtype = "uint8", shape = (240,))#candidate|2775|(240,)|var|uint8
call_2772 = relay.TupleGetItem(func_2471_call(relay.reshape(const_2773.astype('float64'), [11, 12, 8]), relay.reshape(var_2774.astype('uint16'), [160,]), relay.reshape(var_2775.astype('uint8'), [240, 1]), ), 1)
call_2776 = relay.TupleGetItem(func_2476_call(relay.reshape(const_2773.astype('float64'), [11, 12, 8]), relay.reshape(var_2774.astype('uint16'), [160,]), relay.reshape(var_2775.astype('uint8'), [240, 1]), ), 1)
output = relay.Tuple([call_2765,call_2772,const_2773,var_2774,var_2775,])
output2 = relay.Tuple([call_2766,call_2776,const_2773,var_2774,var_2775,])
func_2783 = relay.Function([var_2774,var_2775,], output)
mod['func_2783'] = func_2783
mod = relay.transform.InferType()(mod)
var_2784 = relay.var("var_2784", dtype = "uint16", shape = (160,))#candidate|2784|(160,)|var|uint16
var_2785 = relay.var("var_2785", dtype = "uint8", shape = (240,))#candidate|2785|(240,)|var|uint8
output = func_2783(var_2784,var_2785,)
func_2786 = relay.Function([var_2784,var_2785,], output)
mutated_mod['func_2786'] = func_2786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_2793 = relay.TupleGetItem(func_2434_call(), 0)
call_2794 = relay.TupleGetItem(func_2436_call(), 0)
func_1780_call = mod.get_global_var('func_1780')
func_1783_call = mutated_mod.get_global_var('func_1783')
const_2814 = relay.const([[2.929243,8.989903,5.811534,6.174070,-7.182079,7.378062,-2.427691,0.163328,-9.077122,1.673969,-5.977025,4.048664,-8.334258,7.776802,-5.560885,-6.119375,-9.741198,0.099865,3.108399,2.880526,1.528998,5.498020,0.787939,-1.531683,-4.579933,-6.076971,7.712995,-2.960957,-1.626689,-1.250296,-4.271916,-7.939322,-7.396272,-5.191775,-2.805696,-5.589278,9.034128,6.653137,-0.367856,-7.458490,3.228593,9.299205,-7.077968,6.577492,6.213211,2.390308,-2.065879,-1.076561,4.114868,-2.952418,-5.037206,-0.312256,-8.515891,-3.454690,3.728248,4.564825,-4.838459,4.901281,-6.153916,6.493455,8.330127,3.678928,9.240801,-8.140035,4.585675,-7.393555,2.652646,0.524517,0.140928,-7.580628,-6.907048,0.284296,-9.734960,5.145019,3.472715,-0.352011,0.307967,-6.413661,6.055404,6.843913,3.903881,-6.872920,-2.311249,-1.804700,-9.373772,-6.597080,-4.749683,3.103399,7.989757,-6.434582,9.365639,3.989890,-6.264155,4.801925,-1.188755,-6.880356,4.626213,7.712087,-5.710473,7.439035,-4.308316,6.823058,9.582604,-7.126077,9.028108,-5.739091,0.709935,9.812320,2.907099,-4.160965,-3.235913,-4.475229,8.126868,5.791362,7.627618,-4.823077,7.714734,4.974070,-5.773277,2.690687,-9.365194,3.285008,4.404812,0.823611,0.450465,-4.682888,3.017910,1.877690,-8.427406,-3.309865,9.812147,-4.661325,3.607129,-9.595156,5.716680,6.705670,7.345030,3.444682,-6.181644,0.775819,-0.336214,3.113563,-5.123358,6.617119,5.633419,5.585105,-3.071468,9.856880,2.738825,-3.202532,2.821035,-7.585872,-4.330143,8.600245,-8.263917,-0.662684,3.076504,-6.264662,7.173304,-9.346735,-8.364046,0.807218,7.400943,-8.265461,-3.384056,0.265849,-2.907694,-3.068506,-7.756520,3.045825,4.832307,1.373715,6.210281,-3.998923,2.453221,-1.656093,-9.955299,4.678088,-2.344823,-4.191507,-8.045465,1.251414,1.449591,9.747133,7.190356,6.006321,-5.890391,0.356561,-1.513267,-1.371000,3.948698,0.166394,1.097769,4.024629,-2.686293,-0.966409,-1.134705,-3.930265,-2.618976,1.688835,-9.837548,-1.821469,6.554675,5.103876,2.882000,-8.419880,-3.694823,8.513994,-0.418629,5.241646]], dtype = "float64")#candidate|2814|(1, 210)|const|float64
call_2813 = relay.TupleGetItem(func_1780_call(relay.reshape(const_2814.astype('float64'), [5, 14, 3])), 1)
call_2815 = relay.TupleGetItem(func_1783_call(relay.reshape(const_2814.astype('float64'), [5, 14, 3])), 1)
uop_2818 = relay.atan(const_2814.astype('float32')) # shape=(1, 210)
func_1629_call = mod.get_global_var('func_1629')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_2840 = relay.var("var_2840", dtype = "uint16", shape = (160,))#candidate|2840|(160,)|var|uint16
call_2839 = relay.TupleGetItem(func_1629_call(relay.reshape(var_2840.astype('uint16'), [2, 5, 16])), 0)
call_2841 = relay.TupleGetItem(func_1632_call(relay.reshape(var_2840.astype('uint16'), [2, 5, 16])), 0)
output = relay.Tuple([call_2793,call_2813,uop_2818,call_2839,var_2840,])
output2 = relay.Tuple([call_2794,call_2815,uop_2818,call_2841,var_2840,])
func_2853 = relay.Function([var_2840,], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
mutated_mod['func_2853'] = func_2853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2854 = relay.var("var_2854", dtype = "uint16", shape = (160,))#candidate|2854|(160,)|var|uint16
func_2853_call = mutated_mod.get_global_var('func_2853')
call_2855 = func_2853_call(var_2854)
output = call_2855
func_2856 = relay.Function([var_2854], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_2861 = relay.TupleGetItem(func_2434_call(), 0)
call_2862 = relay.TupleGetItem(func_2436_call(), 0)
output = relay.Tuple([call_2861,])
output2 = relay.Tuple([call_2862,])
func_2864 = relay.Function([], output)
mod['func_2864'] = func_2864
mod = relay.transform.InferType()(mod)
output = func_2864()
func_2865 = relay.Function([], output)
mutated_mod['func_2865'] = func_2865
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2923 = relay.var("var_2923", dtype = "uint64", shape = (14, 1, 11))#candidate|2923|(14, 1, 11)|var|uint64
var_2924 = relay.var("var_2924", dtype = "uint64", shape = (14, 3, 11))#candidate|2924|(14, 3, 11)|var|uint64
bop_2925 = relay.logical_xor(var_2923.astype('uint64'), var_2924.astype('uint64')) # shape=(14, 3, 11)
func_1629_call = mod.get_global_var('func_1629')
func_1632_call = mutated_mod.get_global_var('func_1632')
const_2935 = relay.const([3,-10,8,5,-4,-10,-8,-7,10,-6,10,-5,3,10,-4,2,-10,2,-2,-1,-5,-5,-10,6,4,2,1,-2,7,-8,-8,-10,3,-10,10,-9,-2,10,7,-1,5,-4,-1,3,-2,-10,-1,3,-4,-7,4,-1,-2,-8,6,9,3,10,-4,3,-5,-6,-3,10,-10,4,-5,-10,-8,6,-8,-7,-8,6,-3,-8,1,-7,-3,-4,6,-8,-4,9,-9,-6,-10,9,-2,-2,1,3,3,8,9,-10,-9,5,7,5,-7,-2,-4,6,5,10,5,-9,5,4,-9,-8,-3,2,-7,5,-6,2,9,5,-4,-9,10,9,5,-1,10,-3,-2,-4,-1,-4,7,8,-4,7,10,6,5,-7,-9,-5,8,1,-2,-9,-3,10,9,-5,1,-10,9,2,3,6,-10,2,-10,9], dtype = "uint16")#candidate|2935|(160,)|const|uint16
call_2934 = relay.TupleGetItem(func_1629_call(relay.reshape(const_2935.astype('uint16'), [2, 5, 16])), 0)
call_2936 = relay.TupleGetItem(func_1632_call(relay.reshape(const_2935.astype('uint16'), [2, 5, 16])), 0)
func_2607_call = mod.get_global_var('func_2607')
func_2609_call = mutated_mod.get_global_var('func_2609')
const_2938 = relay.const([-2.555527,3.948481,1.943722,-2.865588,5.395904,-7.259008,-5.298748,6.628240,0.816718,5.001866,5.999908,4.452125,6.826268,-9.813652,-5.734105,8.652101,2.098245,-2.096236,-0.482042,8.457789,-7.398290,-3.151244,-5.877188,6.275333,-4.189984,5.941703,-1.147588,8.542597,4.991186,-9.390310,5.404964,-1.368346,3.312551,9.631602,2.390874,5.789078,-6.179879,0.238403,-5.238710,-8.605354,6.513890,-9.815014,-6.609468,5.200662,4.085652,3.205772,2.742392,-9.331920,1.850774,-5.435604,-1.442499,-5.420288,7.265483,4.960186,-8.070201,8.615108,9.790056,4.672564,3.017470,5.196550,9.030976,3.516503,-6.584585,6.451063,9.753980,5.996368,9.748812,-3.244167,9.903010,-0.959645,5.361157,8.853693,-7.112205,-2.733496,-2.791221,-0.501982,3.157988,-2.638477,3.566820,8.959994,-3.298664,-4.429864,-0.433506,-6.310066,8.829550,9.491297,-6.519429,8.670843,-0.904254,-0.130793,-6.982785,-5.603978,-9.863048,0.242901,-2.644394,-1.376394,0.588111,-6.480959,7.250471,1.351903,-5.240718,2.758700,-6.624577,4.973311,3.354774,7.763916,-6.461499,5.760879,-9.024666,3.360464,3.673187,7.655582,-6.583854,-9.470085,5.517659,-6.881749,-7.191851,-4.015820,2.679073,7.086076,-3.884697,-6.479687,-1.392214,7.337775,-5.288109,8.276012,5.848740,1.530626,1.473712,6.394208,0.432669,-3.854948,-8.059987,-1.281729,-9.481543,-2.832381,-7.749246,6.646435,-3.346224,-5.532511,4.362645,-3.016373,-6.700874,0.975901,9.653534,-2.086673,-6.563423,-5.487086,-3.086561,-4.457117,1.582884,4.865748,8.712270,-2.752205,4.654171,9.800297,6.599191,1.770118,6.193714,6.152704,-0.368966,9.413673,-3.421748,0.360424,6.149163,9.465175,-0.111999,-8.283125,9.007106,0.257304,1.504714,-6.993929,-8.854401,9.585780,-1.521764,-8.853875,-2.480888,2.903484,3.931278,3.981470,0.596770,3.986603,4.376602,8.834202,7.480710,-3.882638,8.534113,4.591621,-1.748936,9.488162,9.735738,8.615842,-3.183876,-7.380807,7.262068,-9.842979,-1.798407,-1.806414,1.392297,-6.906642,-6.163970,-2.674162,1.270348,2.673666,-2.918087,-9.366676,-8.694312,7.279456,8.104489,9.995757,-3.740425,4.619744,8.677660,-2.838113,1.104109,2.157170,8.747396,-5.123904,0.047679,1.898272,-9.660357,7.935216,3.602269,0.336928,-7.060108,-5.073723,-6.316861,4.107104,9.063294,9.550000,9.587238,1.063127,-3.895463,8.642582,8.274739,1.884134,7.224898,8.891083,1.141280,2.628932,5.940773,-8.256309,4.793156,7.210014,-5.252657,2.511038,-2.329454,-9.043131,-5.026400,-0.664676,-8.724664,-5.389515,4.530453,0.516525,-2.537399,-2.062752,-1.298169,-1.834864,5.980193,-9.960459,-6.379470,8.795761,-6.006352,8.928624,3.167608,9.317681,0.414615,7.142784,1.005381,0.710992,5.142130,3.206223,5.132931,8.582572,5.124847,-0.770224,-4.392655,-2.061914,0.490147,2.839412,-1.592239,9.800285,-2.430062,-2.477657,8.109423,-1.155869,3.369357,-1.529508,1.291537,7.868148,6.065911,-2.794968,2.776908,5.540935,-7.133017,-1.773397,4.232103,-7.253707,-0.345046,3.555151,-9.106319,0.822746,0.250564,-6.388067,6.715303,4.428601,7.158525,-5.296708,7.756834,-7.993941,1.710473,-9.370523,-7.930503,-3.217890,0.784729,-2.633671,6.841313,2.554021,9.820177,4.853799,-4.642107,3.187761,-9.022432,-8.309242,4.640829,0.361529,9.952400,6.393046,-1.502372,5.582803,4.329407,-1.931793,1.652339,0.300815,1.575769,2.996495,-3.914269,-0.312908,3.884962,-1.949398,5.310253,2.591500,3.821283,-3.658987,-4.614015,4.334851,9.550036,1.249239,2.329197,5.809137,4.082332,-8.748329,6.999763,3.907991,-1.613045,-8.174569,2.266606,-8.330421,-8.384465,5.698425,-0.026576,1.521238,-7.782926,-5.847950,2.557547,-2.314204,6.330681,-6.863367,9.944242,6.701598,4.183866,4.110078,2.206605,4.246673,-8.794863,-6.054569,5.442611,-6.071435,-2.400322,-4.987604,-3.599624,6.480994,5.863598,6.627917,2.916682,-7.910032,-1.730560,1.174549,-5.244456,2.314748,8.703146,7.382064,9.861549,-6.633169,0.155581,-7.920441,-7.322425,4.588063,1.567381,-6.104123,3.621512,-8.868263,6.979550,5.334802,-6.978272,-2.683488,-8.550075,5.016964,-5.451331,-6.829284,-1.228427,4.494387,-9.760830,-4.803039,6.480017,-1.314564,-7.019367,-4.292144,-1.318771,8.917558,0.886316,3.561760,8.961433,5.645396,-7.538660,2.733407,-4.851834,1.619979,7.494096,4.275744,7.235711,1.594799,-1.601735,3.003236,5.329955,0.797039,-4.361194,6.903109,1.068859,8.443304,-6.762123,-2.815981,-3.217033,1.259825,-7.062936,-6.193540,-7.582471,3.259141,-4.262292,2.296097,5.443116,-6.135941,8.611738,8.534308,-3.440785,9.776596,-1.319942,-4.799681,6.591137,-4.973357,-5.551114,7.287871,8.751596,9.879616,6.228082,7.583219,5.605943,0.605801,9.390529,-4.484322,1.909159,-5.096903,2.618988,-9.443010,-6.265284,-4.126503,-8.566886,6.065764,-8.725356,5.458885,-0.191397,-3.701466,-1.684147,-9.523777,6.277831,3.310985,-4.321170,-7.089133,-7.363528,7.130900,4.406858,2.375949,9.236118,0.049474,9.206722,-5.295229,-3.858350,-8.481315,-3.929179,-8.613120,1.785313,-0.172596,-9.596746,7.742475,-5.135546,3.472730,3.023838,6.321303,-2.271169,-7.882315,8.289454,7.258591,-7.132890,-0.686649,-2.909024,-7.665427,-5.133985,-1.881700,7.193016,-7.762809,-7.025843,3.151946,-3.695402,-3.508758,-7.254814,5.237899,2.080924,4.219472,-3.252381,-4.268740,-9.195546,-6.862857,-5.854888,8.491465,-7.949737,1.565026,-3.471989,-2.878361,8.338326,2.915070,-3.698300,9.163423,8.493383,3.387282,-5.098319,-5.260486,-7.204160,1.554605,4.868406,-2.424050,-8.015266,-8.038919,-4.947457,-6.347260,-0.231384,9.909953,-3.211903,-3.873907,2.993232,0.875177,-4.988178,3.855881,-0.183719,7.176592,2.696865,2.539770,5.995065,-2.639112,5.975707,4.263853,-1.306344,-0.949580,7.737380,-1.797021,-9.766036,-0.787758,-4.561168,7.972374,-0.932578,-6.974038,-4.051774,-1.722168,-4.599584,2.863762,7.353106,3.325538,-0.648937,-5.817896,-7.561035,-1.413822,-2.332423,2.993616,-2.478943,4.245778,4.339402,8.476150,2.463788,6.262309,-8.524284,3.807913,6.112689,-0.630908,-6.825450,1.086620,6.471278,9.497036,-5.868207,-2.989231,1.389582,-5.824704,-8.582797,-1.862435,3.423403,7.726706,1.707903,5.818936,3.431637,-4.231219,-0.544215,-9.967251,9.102040,3.295533,3.077496,6.613017,6.929295,2.816617,4.749870,8.990732,-9.475062,-5.188831,-6.839858,-9.630631,3.175634,9.349191,1.819397,-4.193990,-2.235334,-7.582185,6.641139,-0.070667,6.164038,-4.124772,-5.366088,3.219209,-5.425035,-7.154794,1.683361,-0.520951,0.262092,-7.662747,-9.606653,1.261181,-2.932742,-4.548500,8.731076,-0.297826,-4.828885,6.411897,9.851394,2.371536,7.157221,-4.275868,5.894667,5.720416,-3.537139,2.351566,-4.188499,1.646784,-5.630738,1.634020,9.852397,4.595615,-4.412309,-2.828666,0.109185,-9.260745,1.399804,-9.535504,4.041897,6.742283,0.611215,-4.307420,9.668462,5.401025,3.689412,-6.730418,-2.235174,0.015881,-7.582199,-4.301115,6.895176,-3.500456,7.868397,8.751075,5.386863,1.817281,6.984942,-9.538952,5.080428,0.696711,-1.727022,3.908142,8.546505,-8.270278,-9.579357,0.473685,1.131453,-6.174703,-9.196482,1.000961,-6.837487,4.637574,0.324494,2.234238,1.558620,5.795360,-4.692255,-2.468525,9.932193,9.905123,-4.300754,-0.599265,4.853443,-0.328081,-5.087202,2.595618,-5.911439,9.170240,-1.845923,0.262617,3.284550,-5.514120,3.961547,7.817829,4.068095,8.097132,5.172366,6.797745,-0.049870,0.051390,1.318462,-2.042684,1.670034,3.310159,-6.832086,2.987979,-3.925614,7.945514,-3.856544,-3.860545,6.452916,3.008420,0.390030,5.269079,5.475040,0.108002,3.254077,-0.810710,8.028273,9.241152,-5.745684,2.760449,-2.661954,0.737969,8.502816,-2.069043,9.622207,6.197733,-7.548683,-8.815318,2.207539,-3.374758,3.845829,8.999141,3.163142,-0.864788,2.430650,-5.812656,-6.903547,6.194549,4.270653,4.731690,9.973873,-6.762666,3.787931,2.562287,-5.584209,-0.070866,1.961599,-5.220864,-4.652917,-5.273601,-7.420570,2.915834,-4.836391,-6.883310,-6.771746,-6.506821,-3.051657,2.963201,-5.823694,1.195796,-9.727687,-5.070484,1.523455,-9.020090,-5.790422,-1.503481,1.969788,8.637164,-7.791704,-9.902288,8.761529,-1.255789,0.260859,-2.444854,8.453578,-5.223046,3.820375,1.670028,6.157355,-1.575151,-5.695191,-2.712857,-8.289305,-8.544539,3.334899,2.060860,4.103425,-0.758816,9.259508,-2.463631,-0.495893,-8.572555,-9.525019,7.643128,-0.239838,2.488877,-9.349704,-3.987333,2.180416,0.032816,9.638940,-4.604015,-8.341233,8.234871,3.140912,-9.547698,-1.318879,9.022470,-3.244790,-8.338305,-0.735636,-8.836431,2.228335,2.582587,9.797602,0.730239,2.134210,7.875031,1.407802,2.615741,8.981741,-3.583243,-6.813403,-0.447018,-1.123483,1.352228,-9.232437,5.731328,6.385146,-6.261186,3.916554,9.503425,5.233482,9.996496,-1.603268,6.150539,-6.436953,6.847343,7.582481,-7.689775,9.168262,-3.232902,1.869753,6.466914,-8.667866,6.296998,-3.179072,-1.220322,6.579424,-1.435076,-7.354444,3.589252,7.962131,-7.665702,-7.273852,2.545015,-5.420113,4.281553,0.040037,-5.451309,7.504384,-6.231446,0.845068,2.515647,-8.474316,-6.427829,-6.851575,7.592342,-1.976461,-1.251418,-2.361573,-6.003820,-4.769024,-1.983124,4.422578,8.999191,-5.901952,-5.551234,1.619666,6.223702,9.919904,-5.621965,2.561248,9.583230,9.884503,3.872194,0.479531,0.726715,3.961973,-0.884370,-3.332527,1.304741,4.889487,-0.523417,-9.364347,-1.479628,1.495397,3.561572,-1.500310,2.450025,-2.460093,-9.243713,-1.967495,8.778822,9.350149,-6.578701,-8.204897,3.943549,3.449818,-3.934392,8.030114,4.702961,6.369036,3.822504,-4.718703,-6.345740,1.767934,-2.676829,-7.635780,-0.235241,0.368774,0.142014,-2.797838,8.011608,9.662435,3.347537,-3.031042,9.917938,3.439288,-4.360079,7.030727,8.905750,7.508546,3.621501,1.277838,4.141701,-8.146306,-9.139092,5.526297,2.061830,4.455009,7.970932,7.569459,-6.966984,-8.032145,-0.016956,8.380425,-7.436421,-3.964804,-2.612520,2.527112,-9.513498,-5.001721,9.404043,8.810465,-7.983377,3.726045,-7.372505,7.503072,-9.292881,3.621962,6.252636,-3.888899,6.103090,7.454897,-5.273291,-4.013169,9.540372,-5.516158,-9.312186,9.758600,-6.494725,0.132555,5.495612,1.510417,-6.359907,4.998979,1.778611,4.023992,-6.376988,-9.992813,-9.059356,9.507262,-5.147415,-0.061243,6.015581,9.072981,-1.325209,4.354184,2.781146,9.051803,2.708528,-7.658229,-9.727043,-6.889624,-0.899967,-7.037796,0.750500,-1.935995,4.865305,-3.864474,-5.533520,-3.480071,-4.091781,5.051229,4.348138,3.631958,7.647822,6.235688,-1.568942,-0.511279,5.049375,8.953541,-1.656154,-1.179400,-5.377577,9.571340,-1.951805,1.327097,8.727365,5.790802,-8.386026,7.189600,-3.287866,2.712932,-5.127814,6.736317,-6.490882,-6.077352,7.004188,-5.783015,-1.001146,-7.782206,-3.858514,7.160718,-8.240802,-0.536939,-4.646064,-1.511090,-7.939609,0.565511,7.060827,-5.294744,4.291166,6.398805,3.804982,-0.591756,6.723465,4.861011,-8.099830,8.959538,3.764557,8.723865,4.243463,-1.171168,-7.789779,2.575445,-0.649217,0.824286,-4.158418,-4.933135,5.726808,0.935970,-7.861781,-6.587733,-0.014928,1.129288,3.782466,2.853145,3.554512,-6.067298,8.231721,8.071230,-9.779307,0.384067,4.253551,-1.502462,-8.314942,7.667553,-6.898819,6.596493,1.769104,-3.642265,-7.196744,-3.956676,1.859094,3.783277,-1.550225,4.001613,8.301290,8.391143,-2.232304,3.494208,-8.154913,6.919298,-3.821691,4.796472,-6.975310,-2.512687,4.896156,-8.558748,-5.413345], dtype = "float32")#candidate|2938|(1144,)|const|float32
call_2937 = relay.TupleGetItem(func_2607_call(relay.reshape(const_2938.astype('float32'), [1144,])), 4)
call_2939 = relay.TupleGetItem(func_2609_call(relay.reshape(const_2938.astype('float32'), [1144,])), 4)
output = relay.Tuple([bop_2925,call_2934,const_2935,call_2937,const_2938,])
output2 = relay.Tuple([bop_2925,call_2936,const_2935,call_2939,const_2938,])
func_2946 = relay.Function([var_2923,var_2924,], output)
mod['func_2946'] = func_2946
mod = relay.transform.InferType()(mod)
var_2947 = relay.var("var_2947", dtype = "uint64", shape = (14, 1, 11))#candidate|2947|(14, 1, 11)|var|uint64
var_2948 = relay.var("var_2948", dtype = "uint64", shape = (14, 3, 11))#candidate|2948|(14, 3, 11)|var|uint64
output = func_2946(var_2947,var_2948,)
func_2949 = relay.Function([var_2947,var_2948,], output)
mutated_mod['func_2949'] = func_2949
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2333_call = mutated_mod.get_global_var('func_2333')
call_2953 = func_2332_call()
call_2954 = func_2332_call()
output = relay.Tuple([call_2953,])
output2 = relay.Tuple([call_2954,])
func_2976 = relay.Function([], output)
mod['func_2976'] = func_2976
mod = relay.transform.InferType()(mod)
output = func_2976()
func_2977 = relay.Function([], output)
mutated_mod['func_2977'] = func_2977
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2864_call = mod.get_global_var('func_2864')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_3035 = relay.TupleGetItem(func_2864_call(), 0)
call_3036 = relay.TupleGetItem(func_2865_call(), 0)
output = relay.Tuple([call_3035,])
output2 = relay.Tuple([call_3036,])
func_3037 = relay.Function([], output)
mod['func_3037'] = func_3037
mod = relay.transform.InferType()(mod)
mutated_mod['func_3037'] = func_3037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mutated_mod.get_global_var('func_3037')
call_3038 = func_3037_call()
output = call_3038
func_3039 = relay.Function([], output)
mutated_mod['func_3039'] = func_3039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_3123 = relay.TupleGetItem(func_2976_call(), 0)
call_3124 = relay.TupleGetItem(func_2977_call(), 0)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
const_3126 = relay.const([[1,-7,6,-9,-2,2,-8,-9,-6,-5,5,7,8,2,4,-8,-8,3,-4,1,-3,-1,3,4,-2,-8,-9,-8,-9,-2,2,9,-6,6,-7,7,9,-10,10,6,3,3,-8,-10,9,1,-2,3,-7,8,-7,-3,-5,-1,-7,10,-8,3,-2,-5,4,6,8,-4,10,10,-8,-4,-6,-9,1,-4,-2,6,-9,-9,-9,-9,-6,-4,4,6,7,-7,6,-9,-7,5,-1,5,4,-4,-3,-1,-5,-7,-1,5,6,2,-7,-8,-3,4,-4,5,-7,10,-4,-8,8,-10,-10,-6,6,-8,-8,-7,-7,-6,-2,-10,1,-6,3,-4,1,9,-10,8,2,8,2,10,8,4,-6,-8,4,-2,10,-7,9,-2,10,4,10,1,-9,5,6,7,2,9,-1,-3,4,-4,6,3]], dtype = "uint16")#candidate|3126|(1, 160)|const|uint16
var_3127 = relay.var("var_3127", dtype = "uint8", shape = (24, 10))#candidate|3127|(24, 10)|var|uint8
call_3125 = relay.TupleGetItem(func_2306_call(relay.reshape(const_3126.astype('uint16'), [4, 40]), relay.reshape(var_3127.astype('uint8'), [240,]), ), 3)
call_3128 = relay.TupleGetItem(func_2310_call(relay.reshape(const_3126.astype('uint16'), [4, 40]), relay.reshape(var_3127.astype('uint8'), [240,]), ), 3)
uop_3141 = relay.sigmoid(call_3123.astype('float64')) # shape=(10, 11, 5)
uop_3143 = relay.sigmoid(call_3124.astype('float64')) # shape=(10, 11, 5)
var_3154 = relay.var("var_3154", dtype = "uint8", shape = (24, 10))#candidate|3154|(24, 10)|var|uint8
bop_3155 = relay.logical_xor(var_3127.astype('int8'), relay.reshape(var_3154.astype('int8'), relay.shape_of(var_3127))) # shape=(24, 10)
bop_3185 = relay.multiply(uop_3141.astype('uint16'), relay.reshape(call_3123.astype('uint16'), relay.shape_of(uop_3141))) # shape=(10, 11, 5)
bop_3188 = relay.multiply(uop_3143.astype('uint16'), relay.reshape(call_3124.astype('uint16'), relay.shape_of(uop_3143))) # shape=(10, 11, 5)
output = relay.Tuple([call_3125,const_3126,bop_3155,bop_3185,])
output2 = relay.Tuple([call_3128,const_3126,bop_3155,bop_3188,])
func_3189 = relay.Function([var_3127,var_3154,], output)
mod['func_3189'] = func_3189
mod = relay.transform.InferType()(mod)
var_3190 = relay.var("var_3190", dtype = "uint8", shape = (24, 10))#candidate|3190|(24, 10)|var|uint8
var_3191 = relay.var("var_3191", dtype = "uint8", shape = (24, 10))#candidate|3191|(24, 10)|var|uint8
output = func_3189(var_3190,var_3191,)
func_3192 = relay.Function([var_3190,var_3191,], output)
mutated_mod['func_3192'] = func_3192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_3267 = relay.TupleGetItem(func_3037_call(), 0)
call_3268 = relay.TupleGetItem(func_3039_call(), 0)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_3270 = relay.TupleGetItem(func_2434_call(), 0)
call_3271 = relay.TupleGetItem(func_2436_call(), 0)
const_3272 = relay.const([[[2.958677,-5.966078,-8.401317,-2.639516,-2.860833,4.502840,-2.094133,-9.082687],[2.457516,8.364158,8.015010,4.625321,2.719276,2.711508,6.292757,-7.085265],[-1.397592,-3.970881,-6.462088,-5.126407,-2.530677,-0.703558,-9.694390,3.621426],[-1.247338,0.684964,-2.630939,8.703266,7.467600,-1.744233,6.882421,5.460431],[7.064995,-1.584111,-3.498954,-6.059501,0.381606,0.488066,-2.220124,2.083163],[-7.810124,-0.992991,-5.044576,-4.531316,9.493304,-9.272636,2.000076,-9.674297],[9.623095,-0.086239,1.213885,-4.233166,4.580300,-4.440343,-0.291281,-3.646715],[6.847435,5.109608,0.001737,8.821374,0.885527,2.184638,1.728696,8.056687],[6.812587,-7.508963,5.033841,3.313455,-5.683515,-9.607416,7.383148,7.340359],[6.257091,-1.515176,4.792037,7.538810,5.865473,3.623032,-3.299149,5.936519],[5.701144,-6.589569,-4.219619,8.600270,-6.750318,-3.912769,2.789195,-9.624836],[-6.334707,4.381186,-8.374627,-7.795695,8.977988,-0.303285,4.880473,4.051676]],[[9.421274,0.708375,9.193968,-8.164920,-6.727399,-7.580054,7.588962,-4.470780],[5.055378,2.693954,9.896199,-3.597892,8.411442,-9.860660,-9.805508,6.972153],[-7.543590,-7.011522,-2.713350,8.987993,2.945643,-7.156432,-8.449352,-0.779601],[-3.074342,7.891382,-3.922701,-2.195437,-4.429562,-8.055669,3.108433,-7.011491],[-4.440420,6.475195,1.584120,9.807755,-5.097576,2.069397,-6.159607,8.147564],[1.170038,-3.610978,-6.430768,-2.794067,-3.227126,7.255727,-8.436681,9.873254],[-8.921032,8.339104,3.864450,-3.739197,-4.937038,-5.516325,-5.750469,1.019430],[-1.684374,6.346221,3.659718,9.039587,-6.252157,8.698279,-2.223995,0.899769],[8.957838,-8.082426,0.677095,0.551881,6.628938,-1.836301,3.730208,1.788650],[-7.998357,-1.410750,-1.051338,8.052323,-5.393189,-2.242621,8.428059,-2.276691],[-6.476888,1.452327,9.206210,-1.148265,-2.455970,-6.584488,-9.474513,1.775907],[-1.662511,-9.082771,7.811596,0.034958,-3.510879,-2.086100,8.299171,4.255175]],[[3.236040,0.962827,1.505493,7.747649,1.266023,1.468466,-7.902500,-0.696720],[-9.733418,7.546520,-6.537941,6.078884,-6.927335,-2.949534,-9.732941,-2.716001],[-1.526362,8.882729,3.467629,1.117054,-3.411516,-8.905117,4.025739,-8.533254],[-8.583962,6.654193,-1.508018,3.518178,-3.495843,0.066714,5.190537,-0.870190],[3.976539,8.597612,2.873305,6.365953,7.341852,-1.384133,-4.592055,-1.672147],[-2.441450,0.921394,1.470431,-3.695877,-5.742927,-3.847837,7.097775,6.862648],[-2.115419,4.782114,5.429204,-2.706100,-1.309699,8.471489,4.786171,2.220822],[6.462133,-9.853494,-7.756424,-7.100860,-0.215774,-6.184745,-0.007138,8.027033],[1.768958,-3.536147,6.197596,2.228128,8.455344,2.909294,3.046109,-4.318594],[9.484323,1.814824,9.557721,7.534862,-5.789093,1.438552,3.369855,-3.972728],[3.162629,-0.003188,2.295931,8.920567,-2.284909,1.754987,5.895931,1.676272],[-2.106203,-7.700218,-3.659791,-2.177135,-7.584995,7.599598,-1.268502,-7.654171]],[[-9.307063,-6.003694,-1.589360,-0.403530,-2.049009,-1.739715,-2.356546,9.312665],[-4.299291,-6.098581,9.625755,-4.739565,9.589819,3.297094,4.550012,4.179204],[-2.823496,4.268615,7.973465,-6.486919,2.312580,-0.906384,-2.260329,-5.507922],[2.299879,7.665515,0.639970,-2.534405,-1.092759,-5.098926,1.434125,2.991080],[-7.135027,0.423909,3.684630,5.673320,-1.080706,-7.039333,1.663681,-2.059276],[2.160237,0.907656,6.155089,9.879363,-6.449748,5.053698,-1.595511,5.899618],[3.562299,-6.087453,-5.368559,3.389940,4.366361,0.589657,-6.689032,-0.054208],[-3.328010,9.813322,4.961422,3.449026,-5.186412,-4.737917,3.214868,5.310752],[-6.606413,1.868561,-1.537307,4.527635,-8.030210,-2.115175,-2.818212,6.039160],[2.328091,-9.263979,7.966621,-2.916994,-3.055837,-6.987038,-6.113368,-2.055619],[-2.164547,-7.779366,-2.211649,-8.045674,-6.148248,-5.122059,6.234238,6.754876],[-3.194103,-6.888605,5.331232,2.123741,7.533164,-7.648009,-6.599461,-9.645179]],[[-2.873875,1.359181,-9.006952,-8.540776,-0.425822,-6.100848,-2.016731,-9.135453],[1.153411,-9.513918,9.178526,5.676033,-4.785353,1.269174,-7.642364,7.447776],[-7.350604,-3.799938,-5.381194,8.870205,1.979740,1.512396,-5.691030,-7.690371],[-1.169420,-3.752576,-6.531220,-2.654467,9.258111,2.394168,3.299083,5.395844],[8.570157,-3.053378,-1.969093,3.020595,2.971003,3.748051,-2.923726,-1.462213],[-8.469238,2.343955,-2.407804,0.064976,5.219245,4.258849,7.944773,-7.310888],[-5.593398,9.579161,-4.130131,-4.601664,0.556950,3.818180,0.897423,-5.443545],[9.102779,1.995006,6.307446,5.185300,8.835148,4.704891,5.581641,-0.310769],[-6.773114,-9.865090,-5.763557,4.783206,-2.516719,9.754734,-6.714437,-0.824544],[4.842960,1.572393,-4.061821,9.896072,9.061234,5.925282,-7.558348,6.971728],[9.104714,-4.745712,-2.297874,5.336081,-9.377860,3.209861,-5.395990,-5.763910],[2.246742,-5.104620,5.765432,0.994241,-7.076564,3.951037,-8.086586,6.705116]],[[7.794845,8.483982,4.752271,-4.658720,-8.282555,-0.614088,9.757467,-4.222937],[-1.699685,3.997307,3.388802,3.141611,5.216263,-3.573655,4.695721,7.386104],[5.026328,-6.561994,1.081479,7.365987,-7.588501,-3.117907,-6.220696,-7.952999],[4.845612,-3.978013,9.452686,-5.192676,6.504670,-0.161109,-4.659506,6.462047],[7.827356,1.574382,-0.636067,-1.563776,-2.678278,3.398603,5.586605,-9.182531],[2.355556,3.111213,-1.985344,7.664733,7.348683,-9.312654,0.528668,9.687488],[4.402000,8.188687,8.589130,9.059753,-9.431227,1.563381,-4.110175,-0.234423],[-6.694591,-6.835383,5.595541,-6.846443,-9.902272,-6.364817,-1.445322,-1.252928],[-2.636364,-8.515302,9.322358,-7.069690,-2.825352,7.467357,0.808746,-4.538828],[-9.549836,-2.792494,-2.591125,-6.572345,6.682112,-2.401414,-4.190719,9.464086],[-2.555351,0.105564,2.486897,7.563785,1.921923,4.283395,-9.391199,-3.957097],[-3.211773,-6.469374,-9.254477,5.154087,4.333783,4.282210,-5.586581,3.694886]],[[-1.495404,-8.154437,-8.021383,4.018568,5.976711,-8.832280,-2.862307,-8.176799],[8.278286,9.690045,0.821786,9.705128,-8.872996,-9.405787,9.224233,2.474902],[-3.943328,-4.250062,7.908626,-8.761887,-1.053046,-6.950224,-2.738211,4.467230],[6.397197,3.961310,-8.898144,-7.421079,7.505194,7.168601,-2.998054,8.887907],[3.781791,5.440406,3.289475,9.313310,-4.148077,6.511384,-5.025082,-9.809323],[4.225577,-4.290470,-8.730463,2.316926,4.541635,-6.030623,3.999853,1.324161],[6.727195,-5.396775,-3.397389,-3.455196,0.181893,6.060887,8.297319,-1.831249],[4.663574,-3.192283,7.713546,-9.054737,-4.006969,-3.646505,-9.208320,-2.046664],[-8.194176,-8.069084,-1.068981,4.370094,-3.529419,0.882114,-4.402131,2.387590],[-2.183840,6.078010,1.954890,4.102366,-1.157654,3.597959,1.557575,5.204047],[-4.082982,-3.808765,-8.059757,6.328536,5.804389,-4.483948,-3.525946,2.042580],[0.600473,-8.399196,-8.102004,4.225978,4.027557,5.950735,-7.153904,-3.678753]],[[0.693485,-7.155060,-5.024595,-3.920292,-3.888063,6.453303,-6.724478,-3.341736],[2.072938,-1.811023,-0.747603,-2.852191,5.390706,-1.769999,-7.905731,-1.481444],[9.599019,-4.648355,-3.494898,6.637746,6.795552,7.098637,-4.026598,-6.940305],[-3.618843,0.512022,-7.230834,-7.613825,-1.867506,8.392217,2.691438,-6.604810],[-2.467892,-6.551578,5.499022,-4.716595,-7.581104,3.637641,9.237217,-2.268607],[-4.718910,-1.529242,-2.629676,-2.881764,9.204706,9.379182,-4.556666,8.236158],[-4.057977,8.944062,-0.597903,6.271314,-4.218271,3.654944,-7.654533,0.755346],[4.540066,8.658535,7.699419,-6.610813,6.517386,3.589170,0.528117,9.485996],[5.848977,-0.611250,-8.105927,-2.831726,-2.198796,-1.139926,-3.559052,2.262880],[3.524815,0.146255,9.502323,9.965389,6.539763,-5.156581,4.875657,0.059269],[-8.748584,-5.460428,0.316490,7.446326,-6.852538,-7.415714,-3.372453,2.162723],[-6.376911,-2.802068,-4.467324,-3.428979,-2.063807,4.538137,-2.633474,-0.460808]],[[-3.805858,3.909967,-0.847234,5.549225,-3.327867,8.830389,4.168589,-4.606353],[6.893516,3.847828,-1.226705,3.678877,-1.517031,7.325277,4.730655,-8.655838],[-2.001400,2.858460,-3.116559,-3.075008,-0.694333,6.356470,-4.983520,1.364478],[-1.806395,3.069582,2.572873,-6.276853,3.703369,-9.680143,8.488204,-1.700082],[7.559039,-6.790637,-4.444950,-6.013328,-4.675137,6.751392,-4.062801,-5.256735],[5.598831,7.283878,9.043596,6.546628,5.332491,5.065590,-0.981656,7.538937],[-7.464881,5.800228,-4.727754,4.306788,-1.531359,0.863214,-8.640828,1.874766],[2.491884,-3.724090,-3.451491,-0.679946,1.646610,6.080800,2.109036,3.158228],[-9.648799,3.100135,4.156074,-8.051976,5.515126,-2.662160,9.228702,6.070908],[-3.035824,8.934946,1.762804,3.685185,-6.480929,-4.805326,3.711050,4.947376],[3.100184,-2.633575,7.140444,-0.050174,-4.302721,-0.913694,-1.355597,-5.578728],[9.937146,-0.945596,4.130221,-9.756554,-0.044469,-6.178554,-1.944602,2.624870]],[[-3.997288,-4.207362,-7.679384,-7.059452,9.362222,6.147845,-3.966214,0.465844],[7.607294,7.067684,4.686225,-1.627362,-7.018133,7.346758,-8.130978,-2.901595],[-8.914421,2.745430,7.874109,9.542056,-1.679985,8.206205,-7.930611,2.591942],[-2.494952,2.965345,-7.004575,6.384711,-0.297377,2.495713,8.610210,7.261138],[0.636866,8.959859,-7.374852,8.752943,2.928929,5.539302,0.444581,8.123176],[8.229686,0.447166,5.041182,6.462722,1.965881,-7.469599,-0.157043,-6.792822],[-6.314961,6.172426,-3.104978,-3.471448,7.287054,-8.224851,-4.379485,-6.317909],[-6.298374,0.425197,-3.150045,3.342782,0.650241,-9.531530,2.607806,1.352367],[-1.792379,-0.136309,-1.756101,-0.067986,-5.009032,-6.318608,9.786091,3.435895],[0.466268,1.862555,4.452321,3.405747,-8.468359,-9.809375,2.261645,-3.382906],[-8.235747,-1.458001,4.889001,-9.146711,7.199762,-7.765394,2.273533,-6.383208],[-5.925782,-1.428054,-9.285053,-9.361438,-2.952346,-9.790377,7.336611,9.489148]],[[5.684949,-2.841884,2.909333,8.811002,8.803603,5.949141,5.424902,3.924804],[5.700802,3.684145,-9.355397,-9.756334,-2.791247,-2.250461,3.243735,-9.465682],[7.276367,1.908279,7.333901,-9.111044,-8.932402,-0.953904,3.842025,3.876833],[5.136017,1.896709,3.312494,-3.249149,-9.996709,1.689662,8.086360,6.654358],[-6.375725,4.573349,2.691841,-7.026915,7.968767,4.335606,8.612516,8.531959],[3.635750,-8.046184,-9.404012,-7.164225,7.965939,4.394861,2.553513,0.445587],[8.793756,-0.410959,-1.035187,8.157534,9.061317,8.103643,6.794882,1.218141],[4.247313,8.980126,9.067809,-1.561176,6.104631,4.479347,-1.720750,-8.397822],[6.895746,-5.979223,-5.256577,1.664243,-4.599949,-1.417621,6.060284,-3.980556],[0.046795,-9.890849,-0.275986,7.707188,-7.528708,-4.842447,8.011484,3.139650],[9.114105,9.934670,3.504921,4.510361,4.951213,1.222296,-4.642166,8.582737],[-4.693058,-5.955765,-6.543660,-8.441294,-8.627944,-4.792368,-5.607546,-1.355227]]], dtype = "float64")#candidate|3272|(11, 12, 8)|const|float64
bop_3273 = relay.logical_or(call_3270.astype('bool'), relay.reshape(const_3272.astype('bool'), relay.shape_of(call_3270))) # shape=(11, 12, 8)
bop_3276 = relay.logical_or(call_3271.astype('bool'), relay.reshape(const_3272.astype('bool'), relay.shape_of(call_3271))) # shape=(11, 12, 8)
var_3280 = relay.var("var_3280", dtype = "float64", shape = (11, 12, 8))#candidate|3280|(11, 12, 8)|var|float64
bop_3281 = relay.right_shift(call_3267.astype('uint64'), relay.reshape(var_3280.astype('uint64'), relay.shape_of(call_3267))) # shape=(11, 12, 8)
bop_3284 = relay.right_shift(call_3268.astype('uint64'), relay.reshape(var_3280.astype('uint64'), relay.shape_of(call_3268))) # shape=(11, 12, 8)
output = relay.Tuple([bop_3273,bop_3281,])
output2 = relay.Tuple([bop_3276,bop_3284,])
func_3293 = relay.Function([var_3280,], output)
mod['func_3293'] = func_3293
mod = relay.transform.InferType()(mod)
mutated_mod['func_3293'] = func_3293
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3294 = relay.var("var_3294", dtype = "float64", shape = (11, 12, 8))#candidate|3294|(11, 12, 8)|var|float64
func_3293_call = mutated_mod.get_global_var('func_3293')
call_3295 = func_3293_call(var_3294)
output = call_3295
func_3296 = relay.Function([var_3294], output)
mutated_mod['func_3296'] = func_3296
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_3298 = relay.TupleGetItem(func_2175_call(), 2)
call_3299 = relay.TupleGetItem(func_2176_call(), 2)
func_2946_call = mod.get_global_var('func_2946')
func_2949_call = mutated_mod.get_global_var('func_2949')
var_3306 = relay.var("var_3306", dtype = "uint64", shape = (154,))#candidate|3306|(154,)|var|uint64
var_3307 = relay.var("var_3307", dtype = "uint64", shape = (462,))#candidate|3307|(462,)|var|uint64
call_3305 = relay.TupleGetItem(func_2946_call(relay.reshape(var_3306.astype('uint64'), [14, 1, 11]), relay.reshape(var_3307.astype('uint64'), [14, 3, 11]), ), 0)
call_3308 = relay.TupleGetItem(func_2949_call(relay.reshape(var_3306.astype('uint64'), [14, 1, 11]), relay.reshape(var_3307.astype('uint64'), [14, 3, 11]), ), 0)
func_1629_call = mod.get_global_var('func_1629')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_3323 = relay.var("var_3323", dtype = "uint16", shape = (160,))#candidate|3323|(160,)|var|uint16
call_3322 = relay.TupleGetItem(func_1629_call(relay.reshape(var_3323.astype('uint16'), [2, 5, 16])), 0)
call_3324 = relay.TupleGetItem(func_1632_call(relay.reshape(var_3323.astype('uint16'), [2, 5, 16])), 0)
func_1780_call = mod.get_global_var('func_1780')
func_1783_call = mutated_mod.get_global_var('func_1783')
const_3334 = relay.const([[-2.634069,9.633010,4.583601,4.521366,-3.900661,7.827660,-8.631380,-0.435469,-8.907930,2.035605,2.159479,-3.943647,1.355296,0.319052,5.567736,5.588767,-8.247666,-2.101031,3.103452,-0.444097,-1.366498,5.595450,-3.976173,-2.674395,8.033410,0.570149,-4.940928,-9.778590,3.607242,3.527437,-7.001371,-5.742778,-1.565678,-4.424911,-3.978077,1.437656,-6.610841,-5.810354,-8.904330,8.806802,-5.374875,-6.327459],[-4.173014,-9.564473,1.477780,-7.077028,6.846171,-5.777511,6.447395,0.073137,5.233408,-6.722583,0.260101,4.780384,-9.960239,-0.238362,6.709294,4.239538,9.296440,2.667955,-4.716860,-7.298642,-3.404562,5.280744,8.844446,-4.753596,9.191077,-6.926089,0.291422,-5.248600,-4.741966,-3.114188,0.029559,2.752032,-7.632251,7.275054,-1.260190,-1.844251,-2.973592,-0.358653,-2.184681,5.590113,-9.168942,7.541192],[3.461253,7.142333,-3.063699,0.960568,8.458139,-4.733409,4.461716,-5.872808,2.882824,-5.034275,-9.979484,8.150191,2.701542,-5.378800,-6.079131,4.867261,3.989887,9.359214,9.396138,-5.761703,9.631891,-4.617572,-1.580462,-9.817098,1.403001,-8.258368,4.838772,-3.654658,-4.589045,-1.762741,-9.285513,-2.040317,-8.367193,2.722370,-8.449939,8.236848,-6.466888,-7.360522,-3.235274,-1.643674,1.400974,-6.366866],[-4.362872,-1.661572,2.260476,6.243416,-6.147544,-2.748766,8.569744,-3.429013,8.161188,2.127430,7.280896,-4.188685,-0.129769,8.063557,0.025789,3.645170,0.512682,-0.998847,-0.027349,-5.859580,0.267437,-3.183813,4.852953,-9.652666,-9.075917,-3.881805,1.427514,4.955235,-4.331191,-4.773913,-3.141377,0.426986,3.729817,5.484617,-6.719785,-4.263231,-0.401780,-5.631925,-6.268600,-7.001842,2.756553,-4.280564],[8.644104,-9.224168,7.565000,-1.258039,-3.953275,3.326868,4.140588,-3.794304,-0.213590,-0.221560,5.063716,-4.359959,1.440796,-5.732536,-2.655428,-2.445316,-8.867944,5.720753,6.321413,-7.637936,0.726698,3.652759,-8.727786,-4.922733,-9.561205,7.648260,-7.790451,0.912764,-4.253277,-4.341083,4.313140,-9.740164,9.243050,9.293030,1.348678,4.201641,2.085951,-2.423212,-6.027982,-5.986273,9.027662,-2.784495]], dtype = "float64")#candidate|3334|(5, 42)|const|float64
call_3333 = relay.TupleGetItem(func_1780_call(relay.reshape(const_3334.astype('float64'), [5, 14, 3])), 2)
call_3335 = relay.TupleGetItem(func_1783_call(relay.reshape(const_3334.astype('float64'), [5, 14, 3])), 2)
output = relay.Tuple([call_3298,call_3305,var_3306,var_3307,call_3322,var_3323,call_3333,const_3334,])
output2 = relay.Tuple([call_3299,call_3308,var_3306,var_3307,call_3324,var_3323,call_3335,const_3334,])
func_3339 = relay.Function([var_3306,var_3307,var_3323,], output)
mod['func_3339'] = func_3339
mod = relay.transform.InferType()(mod)
var_3340 = relay.var("var_3340", dtype = "uint64", shape = (154,))#candidate|3340|(154,)|var|uint64
var_3341 = relay.var("var_3341", dtype = "uint64", shape = (462,))#candidate|3341|(462,)|var|uint64
var_3342 = relay.var("var_3342", dtype = "uint16", shape = (160,))#candidate|3342|(160,)|var|uint16
output = func_3339(var_3340,var_3341,var_3342,)
func_3343 = relay.Function([var_3340,var_3341,var_3342,], output)
mutated_mod['func_3343'] = func_3343
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_3412 = relay.TupleGetItem(func_3037_call(), 0)
call_3413 = relay.TupleGetItem(func_3039_call(), 0)
var_3428 = relay.var("var_3428", dtype = "float64", shape = (11, 12, 8))#candidate|3428|(11, 12, 8)|var|float64
bop_3429 = relay.equal(call_3412.astype('bool'), relay.reshape(var_3428.astype('bool'), relay.shape_of(call_3412))) # shape=(11, 12, 8)
bop_3432 = relay.equal(call_3413.astype('bool'), relay.reshape(var_3428.astype('bool'), relay.shape_of(call_3413))) # shape=(11, 12, 8)
output = bop_3429
output2 = bop_3432
func_3441 = relay.Function([var_3428,], output)
mod['func_3441'] = func_3441
mod = relay.transform.InferType()(mod)
var_3442 = relay.var("var_3442", dtype = "float64", shape = (11, 12, 8))#candidate|3442|(11, 12, 8)|var|float64
output = func_3441(var_3442)
func_3443 = relay.Function([var_3442], output)
mutated_mod['func_3443'] = func_3443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3449 = relay.var("var_3449", dtype = "float64", shape = (16, 13, 5))#candidate|3449|(16, 13, 5)|var|float64
var_3450 = relay.var("var_3450", dtype = "float64", shape = (16, 13, 5))#candidate|3450|(16, 13, 5)|var|float64
bop_3451 = relay.floor_mod(var_3449.astype('float64'), relay.reshape(var_3450.astype('float64'), relay.shape_of(var_3449))) # shape=(16, 13, 5)
uop_3459 = relay.log(var_3449.astype('float64')) # shape=(16, 13, 5)
func_3441_call = mod.get_global_var('func_3441')
func_3443_call = mutated_mod.get_global_var('func_3443')
var_3474 = relay.var("var_3474", dtype = "float64", shape = (1056,))#candidate|3474|(1056,)|var|float64
call_3473 = func_3441_call(relay.reshape(var_3474.astype('float64'), [11, 12, 8]))
call_3475 = func_3441_call(relay.reshape(var_3474.astype('float64'), [11, 12, 8]))
bop_3498 = relay.logical_or(uop_3459.astype('bool'), relay.reshape(var_3449.astype('bool'), relay.shape_of(uop_3459))) # shape=(16, 13, 5)
bop_3512 = relay.minimum(uop_3459.astype('float32'), relay.reshape(var_3450.astype('float32'), relay.shape_of(uop_3459))) # shape=(16, 13, 5)
func_343_call = mod.get_global_var('func_343')
func_345_call = mutated_mod.get_global_var('func_345')
var_3517 = relay.var("var_3517", dtype = "uint8", shape = (900,))#candidate|3517|(900,)|var|uint8
call_3516 = relay.TupleGetItem(func_343_call(relay.reshape(var_3517.astype('uint8'), [10, 6, 15])), 2)
call_3518 = relay.TupleGetItem(func_345_call(relay.reshape(var_3517.astype('uint8'), [10, 6, 15])), 2)
func_1629_call = mod.get_global_var('func_1629')
func_1632_call = mutated_mod.get_global_var('func_1632')
const_3521 = relay.const([4,8,6,9,-6,7,-2,7,-6,6,3,-6,-10,10,-7,1,7,-5,7,-6,-10,4,-6,3,4,-6,7,-3,8,-4,2,-6,-7,2,6,6,-1,-9,-5,-10,4,-5,-9,-9,-4,2,8,-3,-1,-10,-4,-3,9,3,6,1,1,-8,-6,9,-10,4,-1,5,-3,-8,-9,6,-3,-2,-4,9,-10,-10,-6,6,2,-5,8,-6,3,10,5,2,6,-8,-8,8,4,6,-8,5,2,-4,8,-1,-4,-4,8,-6,1,-7,-1,-9,-4,2,-7,4,4,8,-10,4,-4,10,6,8,-1,8,-1,-4,2,-9,-4,-8,2,2,-7,-5,-7,-2,-10,2,-7,-3,9,-5,5,2,10,-10,6,-6,10,-5,-4,-2,9,-8,-4,7,10,6,8,7,-6,2,-10,-6,-10,9], dtype = "uint16")#candidate|3521|(160,)|const|uint16
call_3520 = relay.TupleGetItem(func_1629_call(relay.reshape(const_3521.astype('uint16'), [2, 5, 16])), 0)
call_3522 = relay.TupleGetItem(func_1632_call(relay.reshape(const_3521.astype('uint16'), [2, 5, 16])), 0)
uop_3525 = relay.log2(call_3516.astype('float32')) # shape=(21, 4)
uop_3527 = relay.log2(call_3518.astype('float32')) # shape=(21, 4)
output = relay.Tuple([bop_3451,call_3473,var_3474,bop_3498,bop_3512,var_3517,call_3520,const_3521,uop_3525,])
output2 = relay.Tuple([bop_3451,call_3475,var_3474,bop_3498,bop_3512,var_3517,call_3522,const_3521,uop_3527,])
func_3528 = relay.Function([var_3449,var_3450,var_3474,var_3517,], output)
mod['func_3528'] = func_3528
mod = relay.transform.InferType()(mod)
mutated_mod['func_3528'] = func_3528
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3528_call = mutated_mod.get_global_var('func_3528')
var_3530 = relay.var("var_3530", dtype = "float64", shape = (16, 13, 5))#candidate|3530|(16, 13, 5)|var|float64
var_3531 = relay.var("var_3531", dtype = "float64", shape = (16, 13, 5))#candidate|3531|(16, 13, 5)|var|float64
var_3532 = relay.var("var_3532", dtype = "float64", shape = (1056,))#candidate|3532|(1056,)|var|float64
var_3533 = relay.var("var_3533", dtype = "uint8", shape = (900,))#candidate|3533|(900,)|var|uint8
call_3529 = func_3528_call(var_3530,var_3531,var_3532,var_3533,)
output = call_3529
func_3534 = relay.Function([var_3530,var_3531,var_3532,var_3533,], output)
mutated_mod['func_3534'] = func_3534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3557 = relay.var("var_3557", dtype = "float64", shape = (4, 13, 15))#candidate|3557|(4, 13, 15)|var|float64
uop_3558 = relay.atan(var_3557.astype('float64')) # shape=(4, 13, 15)
func_3189_call = mod.get_global_var('func_3189')
func_3192_call = mutated_mod.get_global_var('func_3192')
const_3576 = relay.const([8,-5,5,1,6,6,6,-9,-10,-5,-9,-10,-3,-10,-7,-8,-1,7,-8,1,-4,8,-1,-8,-5,3,-8,-2,6,-9,-7,10,-1,-5,7,-5,-6,-9,-1,9,2,9,-3,-2,-5,3,-7,1,2,-10,-3,-10,-9,6,-7,-7,7,10,7,8,-2,-3,6,10,-9,8,7,-10,6,8,3,4,-1,9,-8,-9,9,-3,5,4,-6,-7,10,-9,5,2,1,7,4,-10,-2,7,1,8,-3,-4,-7,-2,-10,5,-8,-5,-7,-3,-8,-5,1,4,2,-2,8,-6,6,-2,-10,-2,-8,-9,9,5,-6,10,4,1,-9,3,-10,-2,8,3,-3,-6,3,-5,9,2,2,-3,7,2,-9,-3,3,-5,9,9,-4,2,-2,2,7,-5,7,7,3,1,-4,3,8,-10,-8,9,-4,1,-8,-5,8,-3,-1,-10,10,6,-6,3,7,-2,-2,8,2,2,-4,-4,-9,9,5,-4,-3,-1,1,4,9,4,-7,-7,-4,10,6,-4,8,6,-7,10,-3,10,7,4,1,7,-2,8,3,-8,9,5,7,5,-4,-3,-6,-10,8,8,2,7,10,-2,5,-4,-1,-4,-10,10,3,-10,-6,-3,6,4,-9,-4], dtype = "uint8")#candidate|3576|(240,)|const|uint8
call_3575 = relay.TupleGetItem(func_3189_call(relay.reshape(const_3576.astype('uint8'), [24, 10]), relay.reshape(const_3576.astype('uint8'), [24, 10]), ), 3)
call_3577 = relay.TupleGetItem(func_3192_call(relay.reshape(const_3576.astype('uint8'), [24, 10]), relay.reshape(const_3576.astype('uint8'), [24, 10]), ), 3)
func_3339_call = mod.get_global_var('func_3339')
func_3343_call = mutated_mod.get_global_var('func_3343')
const_3591 = relay.const([-4,8,10,6,1,-7,7,1,4,9,-5,2,-7,-6,2,4,-10,5,-8,-5,4,3,6,7,10,-9,10,-2,-6,8,8,3,-2,7,1,1,4,7,8,7,9,-4,9,5,-6,3,-3,-3,9,7,2,5,3,-5,5,10,1,-2,2,8,-8,-4,-9,10,-7,-10,-8,-6,-7,2,6,-4,10,7,-3,1,-6,-6,2,-5,-4,1,-9,3,-1,-6,8,3,-9,-9,-5,-6,7,-8,-10,9,9,6,-10,-4,5,-5,-3,1,9,2,2,5,-2,10,5,7,-1,1,-3,10,6,-1,6,-9,-5,8,-1,-7,-5,6,-8,3,-6,-1,-1,9,10,6,-3,10,-8,-5,9,-3,-1,-4,1,-8,-6,-8,-2,6,-8,-8,7,-8,6,5], dtype = "uint64")#candidate|3591|(154,)|const|uint64
const_3592 = relay.const([10,6,7,-3,-6,6,8,2,9,-6,8,-7,-8,10,-8,1,3,4,-5,-6,8,5,-7,-7,5,-7,7,-1,-7,-10,6,-5,-9,10,7,-4,-6,-10,6,-3,-3,5,-6,-8,-7,-10,-2,-3,-5,6,9,-1,-9,-1,-2,-7,7,-6,-8,6,7,-8,2,-1,-4,-10,-6,-1,-4,1,9,1,-2,8,3,7,9,-8,-7,-7,5,8,-10,8,1,10,-9,-5,7,-3,7,-2,-7,9,-1,-7,-8,10,3,-4,1,-4,4,-1,3,3,6,-10,8,-7,10,7,-8,-7,-9,5,2,10,9,7,7,-5,7,-4,-5,-6,-6,2,-2,-6,10,10,-3,10,-10,-7,8,10,7,10,6,8,9,-5,-9,-1,-4,-10,9,-10,-8,-8,9,2,3,-8,8,-10,-6,-7,5,3,-10,6,-5,-10,3,9,-7,8,5,-8,1,-1,2,1,7,-7,-9,6,-1,-8,6,8,10,-5,1,-9,1,9,-7,3,6,-9,-6,10,-1,2,10,3,6,-5,1,-9,-4,-8,-9,-3,4,10,8,5,-2,9,9,-2,-9,-3,-2,3,-9,5,3,-2,1,-6,4,10,-10,-6,10,5,-4,10,-1,2,-5,7,-6,-4,1,-5,1,10,6,-4,3,-8,8,-5,-10,-8,-3,-4,5,5,9,-10,-5,4,8,8,7,-10,-3,-5,-1,9,-9,-2,-10,-2,-7,1,-5,-5,-3,4,-8,-7,1,-5,7,8,-6,2,-7,7,7,8,-3,4,-6,5,5,7,4,-8,-6,8,-9,10,-7,2,4,-5,-4,10,9,6,-7,-2,4,3,8,-2,4,-3,-8,2,-6,9,-9,-2,4,4,10,4,6,4,9,-9,9,-1,-6,10,-3,3,-8,10,-10,5,10,6,7,8,-7,8,-8,2,5,7,1,-1,5,-2,6,7,-9,10,10,-3,-6,2,3,9,7,7,7,8,-9,-7,10,-1,-4,6,-10,2,1,9,9,3,5,4,7,-2,-2,3,10,2,6,7,-6,-3,2,-2,-1,6,6,8,4,2,-8,10,9,-3,10,5,8,5,-4,-2,6,3,-2,5,-2,3,-10,-9,5,-7,1,-2,-10,2,8,8,-3,-3,-1,-8,3,-2,-4,-5,-4,-3,2,5,-4,7,10,3,-8,8,-5,4,-8,3,9,3,10,-8,1,6,10,-7,-9,-6,7,6], dtype = "uint64")#candidate|3592|(462,)|const|uint64
var_3593 = relay.var("var_3593", dtype = "uint16", shape = (4, 40))#candidate|3593|(4, 40)|var|uint16
call_3590 = relay.TupleGetItem(func_3339_call(relay.reshape(const_3591.astype('uint64'), [154,]), relay.reshape(const_3592.astype('uint64'), [462,]), relay.reshape(var_3593.astype('uint16'), [160,]), ), 3)
call_3594 = relay.TupleGetItem(func_3343_call(relay.reshape(const_3591.astype('uint64'), [154,]), relay.reshape(const_3592.astype('uint64'), [462,]), relay.reshape(var_3593.astype('uint16'), [160,]), ), 3)
bop_3612 = relay.bitwise_xor(uop_3558.astype('uint32'), relay.reshape(var_3557.astype('uint32'), relay.shape_of(uop_3558))) # shape=(4, 13, 15)
func_1061_call = mod.get_global_var('func_1061')
func_1064_call = mutated_mod.get_global_var('func_1064')
var_3625 = relay.var("var_3625", dtype = "float32", shape = (1144,))#candidate|3625|(1144,)|var|float32
call_3624 = func_1061_call(relay.reshape(var_3625.astype('float32'), [11, 8, 13]), relay.reshape(var_3625.astype('float32'), [11, 8, 13]), )
call_3626 = func_1061_call(relay.reshape(var_3625.astype('float32'), [11, 8, 13]), relay.reshape(var_3625.astype('float32'), [11, 8, 13]), )
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_3628 = relay.TupleGetItem(func_2258_call(), 1)
call_3629 = relay.TupleGetItem(func_2260_call(), 1)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
call_3637 = relay.TupleGetItem(func_2306_call(relay.reshape(var_3593.astype('uint16'), [4, 40]), relay.reshape(const_3576.astype('uint8'), [240,]), ), 0)
call_3638 = relay.TupleGetItem(func_2310_call(relay.reshape(var_3593.astype('uint16'), [4, 40]), relay.reshape(const_3576.astype('uint8'), [240,]), ), 0)
func_2332_call = mod.get_global_var('func_2332')
func_2333_call = mutated_mod.get_global_var('func_2333')
call_3641 = func_2332_call()
call_3642 = func_2332_call()
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_3643 = relay.TupleGetItem(func_2258_call(), 0)
call_3644 = relay.TupleGetItem(func_2260_call(), 0)
uop_3657 = relay.rsqrt(uop_3558.astype('float64')) # shape=(4, 13, 15)
bop_3673 = relay.left_shift(uop_3657.astype('uint8'), relay.reshape(var_3557.astype('uint8'), relay.shape_of(uop_3657))) # shape=(4, 13, 15)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_3677 = relay.TupleGetItem(func_2434_call(), 0)
call_3678 = relay.TupleGetItem(func_2436_call(), 0)
uop_3688 = relay.cos(uop_3657.astype('float32')) # shape=(4, 13, 15)
output = relay.Tuple([call_3575,const_3576,call_3590,const_3591,const_3592,var_3593,bop_3612,call_3624,var_3625,call_3628,call_3637,call_3641,call_3643,bop_3673,call_3677,uop_3688,])
output2 = relay.Tuple([call_3577,const_3576,call_3594,const_3591,const_3592,var_3593,bop_3612,call_3626,var_3625,call_3629,call_3638,call_3642,call_3644,bop_3673,call_3678,uop_3688,])
func_3697 = relay.Function([var_3557,var_3593,var_3625,], output)
mod['func_3697'] = func_3697
mod = relay.transform.InferType()(mod)
mutated_mod['func_3697'] = func_3697
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3697_call = mutated_mod.get_global_var('func_3697')
var_3699 = relay.var("var_3699", dtype = "float64", shape = (4, 13, 15))#candidate|3699|(4, 13, 15)|var|float64
var_3700 = relay.var("var_3700", dtype = "uint16", shape = (4, 40))#candidate|3700|(4, 40)|var|uint16
var_3701 = relay.var("var_3701", dtype = "float32", shape = (1144,))#candidate|3701|(1144,)|var|float32
call_3698 = func_3697_call(var_3699,var_3700,var_3701,)
output = call_3698
func_3702 = relay.Function([var_3699,var_3700,var_3701,], output)
mutated_mod['func_3702'] = func_3702
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_3760 = relay.TupleGetItem(func_2976_call(), 0)
call_3761 = relay.TupleGetItem(func_2977_call(), 0)
func_223_call = mod.get_global_var('func_223')
func_227_call = mutated_mod.get_global_var('func_227')
const_3773 = relay.const([9,-2,-6,3,-5,2,-7,-8,-2,-1,10,6,-9,3,4,-1,-8,6,-7,-3,1,4,-4,8,-7,-2,-6,6,-1,-9,-5,-10,3,-8,4,-5,-9,-4,1,-9,-10,-7,1,-4,-4,-7,-5,-1,2,1,3,2,4,4,-9,8,-4,-8,8,-5,-6,1,-7,4,-4,-7,2,8,9,-5,-3,-8,6,1,-1,-8,9,2,4,7,-10,6,8,-10], dtype = "int16")#candidate|3773|(84,)|const|int16
call_3772 = relay.TupleGetItem(func_223_call(relay.reshape(const_3773.astype('int16'), [3, 14, 2]), relay.reshape(const_3773.astype('int16'), [3, 14, 2]), relay.reshape(const_3773.astype('int16'), [3, 14, 2]), ), 1)
call_3774 = relay.TupleGetItem(func_227_call(relay.reshape(const_3773.astype('int16'), [3, 14, 2]), relay.reshape(const_3773.astype('int16'), [3, 14, 2]), relay.reshape(const_3773.astype('int16'), [3, 14, 2]), ), 1)
func_223_call = mod.get_global_var('func_223')
func_227_call = mutated_mod.get_global_var('func_227')
call_3785 = relay.TupleGetItem(func_223_call(relay.reshape(call_3772.astype('int16'), [3, 14, 2]), relay.reshape(call_3772.astype('int16'), [3, 14, 2]), relay.reshape(call_3772.astype('int16'), [3, 14, 2]), ), 2)
call_3786 = relay.TupleGetItem(func_227_call(relay.reshape(call_3772.astype('int16'), [3, 14, 2]), relay.reshape(call_3772.astype('int16'), [3, 14, 2]), relay.reshape(call_3772.astype('int16'), [3, 14, 2]), ), 2)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_3796 = relay.TupleGetItem(func_2434_call(), 0)
call_3797 = relay.TupleGetItem(func_2436_call(), 0)
func_3697_call = mod.get_global_var('func_3697')
func_3702_call = mutated_mod.get_global_var('func_3702')
const_3802 = relay.const([-4.857146,7.886480,-4.205386,-5.401071,0.036950,7.927470,-2.593521,-8.837479,-5.698989,-0.871111,-2.944368,-7.082184,1.454226,-1.401502,8.517128,6.696003,1.727626,-2.087149,-0.480121,5.717428,4.943932,1.434386,-7.928711,-3.138726,5.591013,-1.512940,-1.210302,2.853578,-9.604874,6.890390,6.910400,8.976355,8.923216,2.561746,-0.824956,-5.128082,3.938596,-3.964455,7.832971,-3.807618,0.050229,-1.143918,4.621875,-9.430985,6.750135,-7.429782,-7.574072,3.693675,4.299078,7.945323,8.994165,5.014230,7.144475,-4.681221,6.356296,8.014365,-5.812935,-9.987951,3.465825,6.351413,-1.568188,-9.895680,3.425536,9.466508,-0.683957,2.539739,-5.181925,-5.616639,-9.803226,-3.661795,1.309696,-9.135722,8.780405,-0.861868,0.514016,4.582092,2.443688,-0.924621,-5.941741,9.408744,4.945244,-5.193482,6.994756,9.231487,-4.928237,7.443301,-0.778483,1.398058,2.423445,-8.225305,8.681125,-9.012922,6.926844,2.455342,-5.419901,-1.006703,6.148916,4.848606,4.274012,-4.168761,-4.200243,-5.736442,-9.535450,-4.826510,3.749043,-4.274589,2.865180,1.338236,-2.274240,-3.018290,4.086613,-1.619582,9.427195,4.113475,-5.387140,-4.340931,-4.185741,6.900290,-0.518166,-5.329191,5.060735,-9.709677,8.335220,1.497881,7.008241,9.962595,8.041632,4.472693,3.450360,8.615069,1.860706,4.565079,-8.965893,-4.433532,-8.155894,-5.027493,4.551512,-1.371624,-3.621528,-2.499617,0.162238,-4.339066,2.987544,-2.355040,4.560462,9.966182,4.182540,-9.550915,3.091063,6.279471,0.204259,4.469841,-9.923802,1.803151,-7.594231,-3.662017,9.792402,-3.460765,9.952044,-9.569291,-8.743203,5.371131,-7.629690,-8.909860,-7.343991,2.498574,5.220710,-8.739858,6.452712,5.578037,-2.042814,6.291711,-2.833513,-8.707546,-9.068721,-6.428749,-2.652745,0.626003,5.384813,8.363866,2.955683,3.237327,0.659385,-3.163904,-7.511851,-6.628245,-4.986294,-8.872618,2.302504,-5.995500,8.645883,6.073568,-9.363786,-8.932878,-0.722185,0.503900,3.410253,-0.540134,-3.793189,5.061036,-9.800004,5.751946,1.574655,-0.999369,8.071620,4.594110,0.792725,-2.700686,5.081111,-4.735490,-2.192499,5.296448,-3.886744,8.992151,-7.841634,0.208162,-3.075744,9.868530,9.195398,1.858921,-6.786704,9.940212,0.036976,5.078499,8.928675,-4.235609,3.006460,5.869198,9.953090,9.833177,8.903072,9.263130,1.899756,4.553171,-0.044296,4.930707,8.814345,-2.943470,5.732841,9.825911,5.239485,-7.874445,6.371995,0.359133,-6.752856,7.398714,3.407200,-3.940223,3.445669,7.150914,-1.691576,6.125029,-0.052002,-2.949496,7.107251,-3.951547,2.580222,-5.417082,-3.978700,0.937205,-0.464701,-1.335113,0.350546,-3.941421,-4.097117,-8.418094,3.092738,7.368749,-5.013952,9.337044,2.742947,-2.367784,-1.123622,-3.510920,-6.283487,-9.613582,-3.046096,5.860554,9.465139,-8.207794,0.763965,-4.959171,-3.834568,-0.606431,4.639368,6.260568,8.066147,3.011091,-7.467303,-0.357592,5.258256,5.393719,4.342088,-0.292490,-7.450296,4.589046,1.329561,-2.949812,4.467921,-9.369122,-1.496187,6.838117,-0.850207,-2.847278,-8.217622,7.073676,8.092645,9.658116,3.438494,8.957478,2.983510,-5.986901,-5.556569,-6.930829,4.937402,-4.421774,-7.456748,-6.843815,-2.541281,5.708706,6.684362,-5.838769,3.214866,-3.785953,9.118097,0.006258,-1.972405,-1.304191,-3.830776,-4.265313,0.344878,-1.129140,-4.779284,-5.802788,3.897732,-4.599419,2.125988,9.509641,-9.595942,1.892095,3.851137,-5.684305,-4.286989,-7.731606,-8.087371,5.675379,4.033851,8.589829,-1.048573,-9.985854,-2.736173,-5.688387,8.408077,-0.353314,2.073228,-9.111064,-3.491318,-8.883815,7.286288,-3.204991,8.298812,2.809776,5.000433,1.482168,6.128796,6.147842,-6.624023,4.764394,5.273320,8.223731,6.487844,5.629509,4.221475,8.263280,-1.999623,-3.215769,8.261176,-1.136535,-2.772738,-5.491287,8.532246,5.100126,8.053840,1.872764,2.969849,-0.143917,-8.704110,-1.872117,9.830229,-7.856400,3.329378,-0.498273,6.286343,0.971219,-4.820144,4.911358,1.045237,6.578562,3.581008,6.690419,9.864434,5.591895,1.535531,3.089554,6.340465,-1.225850,-9.336145,7.167346,4.716096,-4.906037,-2.402339,8.476240,-1.460200,0.507993,-4.667077,-5.189246,-3.179455,5.408515,-5.509356,-8.147952,2.915913,-2.645312,3.539365,5.092499,2.496169,-2.646199,1.554513,2.743426,-8.433113,9.383873,-5.826351,4.532706,8.585783,-0.643376,6.155356,-5.146800,-8.574281,8.302990,-5.121470,-6.889610,-4.821548,-8.049798,8.806374,5.776809,-4.367173,-8.997032,4.684956,2.374257,-6.265535,-2.725345,-6.951739,-0.980130,9.205929,1.651963,-8.128853,1.357140,-6.564231,-7.997870,-0.445724,-3.981872,-1.734600,1.591712,-2.602967,6.551180,-2.110951,-6.623310,-7.880047,6.824928,-0.571153,5.067970,2.576650,9.152483,-2.889467,1.210143,-0.325775,2.847858,-4.034870,-9.210670,8.860977,7.214539,4.265165,5.003537,9.882774,6.357704,9.823926,-6.849320,-7.025598,-1.095610,-3.208440,6.630911,4.424160,5.777073,8.154276,-2.975842,5.108777,-1.662223,-3.774260,-4.012598,2.521805,5.345194,3.790861,3.655058,-3.944250,-4.509162,5.306629,2.688337,0.542830,-5.928848,-0.975612,5.521782,-2.625961,-2.126824,3.542803,-8.422176,-4.956436,4.419289,-3.349023,3.490786,4.840759,0.842541,1.908681,6.032351,7.074549,0.166043,2.512454,-5.122344,3.091242,-8.918357,7.538259,3.719315,-3.370043,4.765291,5.058154,2.148631,9.744536,7.955216,0.552832,5.811597,-1.028831,-8.184671,6.429313,9.649014,0.076915,-7.257821,7.434438,2.055005,-2.591833,-6.898830,2.833043,-7.177085,-2.382159,-4.939687,8.417017,-7.098989,-0.625419,0.165399,3.783054,-0.387881,-0.293013,-8.202285,-7.993168,5.590413,-3.326406,-1.444250,-7.008748,-3.272518,-8.365622,-4.029517,-2.098558,6.572309,-9.982168,7.720147,-9.958578,-7.583381,-4.228302,-1.907094,-6.664039,6.147377,2.973200,7.748866,3.703799,-6.405499,-2.015115,4.106385,1.920365,8.898794,5.600340,-3.075245,4.488478,-5.574397,0.124155,-1.117432,-0.399973,-1.197753,-2.329443,5.889005,-0.787788,3.285124,5.412234,0.176883,-4.332089,-8.824966,8.616156,8.240610,3.417007,-2.530290,-3.115917,8.758767,0.087049,-6.379350,0.915280,9.995987,3.020724,-7.570972,6.699819,7.093049,-6.459149,5.353832,-2.569019,-4.263585,-1.146547,-1.639356,-8.137534,5.159679,-4.226718,4.911322,-0.328624,3.553341,1.612575,-3.624878,4.145996,-4.831079,4.350865,-5.229536,-4.904260,6.647385,0.348843,9.037348,4.303704,3.363269,-8.241171,6.104620,0.260201,-7.611116,-6.098011,5.404278,1.789233,-5.117121,9.660078,-7.302242,7.585817,-5.932351,-4.447873,-0.746479,6.673537,9.742523,-4.407627,-8.382095,5.759626,2.755247,6.039383,9.282369,-7.690348,2.178213,-2.920765,-3.557977,5.050774,2.190556,-9.161433,-9.839860,8.071672,-9.939667,-1.100493,-3.645926,6.575723,-4.915292,-2.710557,6.002551,1.560604,8.113561,3.081845,9.336373,-5.482674,-5.208544,3.584077,-7.989753,-3.122234,-6.848729,4.743956,-5.581846,-6.570492,8.225764,-2.597494,-8.398371,2.813608,-8.340523,1.482527,-0.512128,-5.474157,-3.257753,4.011929,-5.607050,9.180738,-6.693050,5.648446,-2.798821,1.020705,7.078854,-1.771213,0.299591,4.004295,-0.628382,-8.584503,-1.341593,4.690616,-3.598096,-7.651239,-7.574595,3.776388,-8.859163,9.116875,5.377724,2.724588,2.977226,-7.001222,0.878272,-9.583031,-0.696627,-6.982742,1.591338,2.783850,-4.966108,-7.211983,-0.412920,-8.641522,0.375054,0.024275,-7.290724,6.374619,-2.917875,8.921261,0.106597,-6.778609,-7.689854,-6.632254,-7.728327,4.670347,8.874204,-2.424119,2.387414,0.823462,-4.040270,5.392829,5.166721,-1.923896,-9.044677,5.800674,4.910691,7.184804,6.375220,8.609887,-5.112983,-3.182877,6.131056,7.110443,6.437254,5.150556,9.056577,1.604912,4.600884,-5.658206,9.375666,1.072057,2.901638,-2.438131,-0.834403,8.238064,-6.416598,3.212375,-5.523989], dtype = "float64")#candidate|3802|(780,)|const|float64
var_3803 = relay.var("var_3803", dtype = "uint16", shape = (160,))#candidate|3803|(160,)|var|uint16
const_3804 = relay.const([6.483031,8.901847,-6.306759,3.882035,5.620898,6.382530,8.351541,-5.123229,-3.662930,5.762126,-4.046249,-3.648804,3.603768,-5.071811,-7.418180,3.460133,-1.382521,7.240217,4.242405,-3.928910,-0.416878,-8.732465,9.080795,-2.287166,5.672069,3.527846,1.615599,2.700816,5.698250,8.812524,3.864350,9.432367,6.579013,-1.637283,-1.310402,-4.700187,-7.645497,-0.514071,6.515119,4.095890,-4.663907,-1.696637,-0.033779,8.135875,9.435687,3.531961,5.526048,-6.531946,-5.006522,-5.463701,2.491495,6.974901,7.341878,0.207603,-8.321528,-4.285767,-2.289362,-5.671928,-2.065532,-9.553676,-2.848831,-1.906921,1.954640,6.783429,4.292296,-6.992354,-4.598114,3.818505,3.351757,-7.403857,6.810078,0.837506,7.459561,1.826597,0.473808,9.464723,9.942490,7.439357,-2.282625,-5.372012,-9.179778,-6.888000,-0.918884,7.607770,-7.283691,7.314767,-9.822723,5.955301,-4.301601,6.610903,4.505427,-8.833323,-3.761883,7.441716,-6.643205,-3.577948,-4.244431,4.305077,-7.600174,-0.642803,-7.671996,8.638914,-8.480228,-0.353602,8.644452,-3.973642,-8.492354,6.273999,3.998368,4.138716,2.029773,-8.886126,-7.323556,-0.193297,-7.818065,0.246190,2.258128,8.330066,-0.909800,-6.706874,7.971525,-7.411304,8.940351,-6.392995,-1.314353,-6.394635,-1.228694,3.946302,-3.610953,9.359476,-4.329770,0.908340,1.472442,-8.358737,-3.218176,3.484619,6.191226,2.828988,-6.181940,4.988829,4.553342,-2.559906,2.879474,-9.748042,5.697799,-4.282345,2.735027,8.155499,9.160673,-1.583225,9.920968,9.617446,9.199356,8.221253,4.711076,-2.977028,1.988978,-4.639362,-7.683654,-5.052660,-8.533941,4.145795,9.592434,4.296494,-1.489039,-5.465281,6.823329,9.057358,9.733857,-2.646758,9.879690,5.861524,1.295395,4.455230,1.484563,-7.034422,3.103435,1.399507,-3.765957,0.926197,-2.926344,-5.332321,9.971927,-2.207632,1.867666,9.936001,7.717285,6.393363,-9.327677,-3.710355,-8.556285,-9.345328,-3.764972,-0.433455,-2.267862,-7.362338,-8.434613,-8.576184,-9.236513,-2.854530,-4.422984,-4.222200,-0.307612,-9.564817,0.107960,-0.427338,3.745400,7.442094,-3.951501,3.824718,7.056324,0.102029,-1.138918,4.551130,-6.345955,-1.891635,-9.604422,-8.646431,-4.702627,1.036604,1.114989,-8.023116,-4.463912,9.736887,3.974550,8.539807,-5.151860,-5.802560,5.799986,1.364692,4.901891,-5.339969,-2.869204,8.954913,2.834232,-4.793846,-4.212787,-3.667645,-7.782321,-8.564634,-8.680765,-1.066001,-9.512853,0.465852,7.194197,-7.413977,2.693869,-3.284194,8.957039,-4.421135,-9.339920,-0.747041,8.167085,-7.414163,-1.522382,-0.732806,-2.644067,5.950309,8.861384,-6.193584,5.768542,-9.951859,6.089169,-3.656664,-3.722865,-2.860923,-5.524916,7.769009,7.524314,4.095121,-4.305655,-0.745965,1.577139,-2.822162,-0.081837,2.037881,0.621987,-3.005343,-6.205390,4.390011,-2.475199,4.295060,-6.166681,-1.890316,-4.998091,6.738548,2.047026,-5.387814,9.580397,-9.168642,5.321271,4.393450,7.324544,-2.049489,8.454973,-7.914978,1.796919,-2.258436,-3.869266,0.719248,-3.771013,-1.288339,-9.345956,-9.750033,7.078179,7.881431,-7.854030,3.559347,5.816005,7.241514,6.905087,-5.700756,-9.160692,0.979968,8.532459,5.940038,1.040923,-5.251316,-3.458137,-1.779668,1.963381,4.784063,-1.727522,2.109787,-3.451359,-9.841132,-9.076332,-8.540998,4.577300,8.162667,-2.146952,4.968379,-2.104545,8.548239,-3.697968,-7.742016,5.177532,-9.595362,-5.512296,9.867016,-5.351842,6.375805,-0.002155,9.939981,7.095822,0.222695,-2.360835,8.465051,-5.584534,9.252344,-1.002425,-9.357947,1.323916,-6.281234,-7.946153,-9.002607,7.748442,4.427853,0.070345,-2.856503,2.286017,-5.768379,-6.143924,0.725709,-8.914647,6.660508,-3.424537,3.606657,-1.779279,-7.034289,7.364767,-2.436925,-1.777509,8.926734,-7.565944,-1.978256,0.142896,4.874069,-9.464246,-5.288218,-8.515647,-4.736875,0.694702,-3.932778,3.997427,-9.011057,-7.955071,2.944323,-5.399197,-1.408110,-0.404634,-9.759470,-5.883844,7.197602,-8.681422,7.340522,-3.212786,-4.968640,0.046285,4.613845,2.181162,-2.114809,-1.699777,-0.116531,-3.541734,-9.870079,0.015963,-3.188234,-8.632366,-8.207490,8.748777,3.299412,9.450103,3.904432,2.169288,5.810224,-9.167971,-8.709785,-1.699831,6.909723,5.344557,9.507244,-3.114327,-2.291102,-9.985638,-5.673640,7.239214,4.757815,1.911109,0.665767,7.874880,4.270478,-7.708270,7.511811,-4.645220,6.185574,-4.281545,-8.114660,-4.741301,3.093645,4.184986,-5.068715,-0.668518,-3.652018,-7.062879,-0.305358,-4.958045,1.240865,3.845610,9.593588,5.903412,5.428691,-7.780969,8.956856,7.551182,9.241056,-4.463249,2.151378,1.535396,-3.628101,0.039519,7.328833,-0.995869,7.730844,6.533304,9.044448,5.081550,-9.646267,-9.820076,7.100441,9.347959,-1.183171,-5.552027,-7.227868,6.742323,-5.240442,8.120481,6.602410,-7.218495,5.275918,0.272584,4.564396,0.266886,-0.225703,2.221826,1.072210,-5.528968,-3.743189,1.043323,-2.155516,1.244881,-5.837906,8.619581,-5.977752,-4.130564,4.179366,-8.411317,-4.650734,0.599064,6.300578,-4.386498,2.300141,-6.564035,-7.719670,-3.732156,4.884424,0.389825,-3.031693,3.395018,-7.582061,-2.010813,8.776387,-2.009218,-0.295304,8.669556,-0.240793,1.489627,-3.246439,8.616639,6.793375,-1.622409,9.276945,-2.989458,-1.165071,-3.492966,0.983880,-3.827783,3.983139,3.495497,-3.029017,7.978019,-6.359256,-9.806537,8.845729,8.857416,7.178768,0.294710,3.473932,-3.695824,1.710270,7.587125,0.126287,5.717336,-6.225399,0.654358,3.160143,-3.855379,1.076598,4.942919,-3.629930,1.841983,-3.517568,7.203258,8.645656,1.904315,-2.499147,5.560111,-3.498475,3.358445,6.658637,-4.425666,2.797690,7.711832,7.142963,9.997368,8.525908,-6.653134,0.388625,-1.919603,1.092382,0.553749,-4.131210,-7.303778,-2.984837,2.673055,-6.305469,-0.842939,-3.410391,-0.981088,-4.989355,-4.081267,-9.758045,2.757126,-2.575267,-0.886109,0.568584,7.229200,7.126184,5.933817,8.780188,0.851978,-9.430816,-7.967987,1.993914,-5.760497,-6.666604,-6.971488,4.237541,0.758186,7.459573,-2.218573,0.335543,-3.620563,8.462237,-8.134109,-5.172194,-7.575173,-5.648781,-7.322332,7.747500,1.970884,3.800850,-9.333075,-8.379818,-8.630497,-1.595545,-7.000009,-4.392525,-0.798774,-3.163802,7.895278,-9.081821,5.956771,-2.686090,3.730675,1.265560,8.089300,-8.485826,7.630309,0.689702,-8.117164,-1.233447,-8.274435,1.599044,-9.752810,4.590106,-6.144581,1.619599,-4.485138,8.629080,7.052573,6.193867,6.904455,3.925236,-8.122878,-8.707406,-1.273966,1.340912,-7.004125,0.538203,7.332812,-3.727531,-0.776688,0.118085,5.664076,-3.071206,4.398309,1.611991,4.065960,-5.300927,-8.099393,-0.466016,5.727055,6.780097,-9.065007,0.113670,9.690406,-4.479008,4.260393,8.516362,-5.949043,-0.194488,2.509162,1.890435,-8.668851,-6.314361,-8.318380,9.748315,-8.494762,1.882523,3.162627,-3.941360,-7.531708,-9.406479,0.670671,-2.170311,-7.511694,9.833199,4.814394,-6.900280,-2.389437,-8.054078,-8.975199,6.281866,-3.961295,1.187337,1.878135,-2.941500,-3.911421,6.083643,-3.272176,-7.790528,-5.695872,-7.233536,-8.866438,9.508021,3.205062,6.591150,6.224284,9.501297,-2.653469,2.809427,-9.034446,4.875526,4.017348,-3.581261,7.656542,-9.178827,0.485839,8.671788,5.709277,-9.769062,-3.572196,-9.869862,-9.522881,5.766570,1.953031,-7.007233,-8.238621,-2.821963,4.201338,-7.082692,2.905882,-2.598776,0.303562,-8.872321,3.637631,-4.445419,9.181259,5.026995,-2.446584,-8.551097,-5.592339,2.715101,-2.036695,-9.644362,9.236533,-9.119782,1.992162,4.847108,-1.159179,2.264016,-5.392204,6.238590,3.272483,-5.053826,9.573302,2.148696,5.873927,0.518147,-2.600810,0.975264,-4.098360,3.673158,0.328571,-5.023915,-6.613438,9.954614,1.421067,-0.063717,6.699836,-2.703912,6.708416,-4.345506,9.889610,1.806282,8.477535,8.925492,-9.946068,4.816703,6.902812,-6.340236,-5.656957,-8.905931,-2.186086,-6.895584,7.595153,8.809670,-4.624984,-0.331833,2.178754,1.474154,-2.453755,-6.112988,6.433645,-2.934979,2.666989,8.099906,-4.631953,-0.987771,-4.872350,6.865412,9.366273,5.284788,-5.975155,2.433641,1.903843,9.148390,1.890857,-6.281975,8.420266,4.232578,1.922929,-9.155403,2.397054,2.483046,6.759200,9.284977,9.709946,-9.365987,-4.553081,7.682210,9.229383,-2.502668,-8.944178,9.528076,1.522076,-2.753847,8.844492,3.848976,3.269062,9.956407,4.842335,-2.457206,3.222658,-5.675146,-7.907277,8.992795,-9.264917,3.968682,-7.690963,6.240758,9.995412,7.253834,-0.495122,7.986690,7.006812,5.289882,-0.774643,1.156989,-9.054473,1.362377,1.806527,-2.225794,-9.849124,-5.843267,2.649709,4.045446,6.191491,2.129912,4.938059,-8.131780,1.260203,5.394165,8.097025,2.820670,-2.582393,-9.521834,8.053981,-3.677486,-0.997506,1.917308,-0.301590,9.076652,6.562329,4.390123,4.528863,2.175138,5.210896,-1.139494,0.671772,7.969744,2.703237,1.921871,-4.282830,-6.371231,-8.686914,-8.583305,-4.238484,-4.508415,5.999317,-5.971204,1.121725,6.864992,-0.029675,1.346987,-6.748066,-7.515699,1.976385,-1.036620,8.176143,-7.654739,-1.051786,-0.684411,-6.512032,-9.442703,-3.845164,3.124118,-3.183122,9.699316,-9.294990,-4.631320,7.646654,-1.691754,-9.325653,-8.414438,-2.358973,3.019802,-1.032247,7.095185,2.502346,-6.459133,9.898136,3.587152,-0.699868,-0.287276,-3.615799,2.515624,6.980397,-8.861114,5.560825,7.942655,8.658550,-9.604915,-8.511648,9.173373,-7.591856,-3.629356,6.241676,2.229765,-1.847838,-8.807165,8.520963,-6.519391,-3.785115,-0.829740,0.306082,7.133072,6.431189,-2.235903,1.711950,1.955977,1.669894,2.385463,9.247077,1.223256,2.406741,-0.526001,9.866584,1.443976,1.621871,4.595841,-0.371795,-4.061185,4.306113,8.777828,-2.879345,-0.833025,-6.309240,-5.518395,-6.592459,3.597825,5.240075,-0.448688,-4.743158,-1.181916,-1.489862,5.136405,-3.470705,-4.688539,-7.798754,1.109327,-9.142875,6.621851,0.886209,-3.160927,0.085699,6.292837,-5.493274,4.235512,-7.901442,-5.328625,-1.708682,4.733916,7.756643,-5.545509,7.396629,-2.992780,2.942043,5.818220,5.383523,-3.004521,5.778137,-5.519864,-8.360543,6.871435,4.383847,0.024095,6.562241,1.456449,-0.814082,-4.107204,8.243183,2.970769,-2.023374,5.551842,-8.480546,-5.837668,-3.246860,0.093337,1.542427,4.970545,0.065386,-7.767624,1.675707,0.276526,0.432693,5.208698,2.168199,6.667827,7.667834,1.051897,-1.180883,-4.971967,-8.584730,5.606629,-7.630566,1.071199,1.481385,-4.178236,4.670853,-9.605635,5.170212,8.882467,-3.368803,3.766804,2.233081,-6.132417,-0.578686,-5.229204,-8.033093,-4.489986,-9.819050,-1.882001,1.591171,-0.020755,7.057638,1.330841,0.522745,1.818197,7.375189,4.783819,0.225548,6.758869,-9.806835,9.151919,2.857996,7.311003,9.778330,-6.667789,-4.698977,1.357191,1.130795,7.317901,9.654689,0.934220,3.527946,7.890368,-2.667977,-0.933291,6.385703,3.068609,-1.185184,-2.398762,1.791404,-3.818873,-4.869300,4.374947,6.732872,-7.761773,2.590164,5.530636,-1.041412,4.276762,0.432287,-5.468857,4.113799,-4.484908,-9.774390,9.354169,6.391939,-6.127722,0.189997,9.254133,-0.498573,1.375784,7.525546,-4.333525,-3.797642,-0.194906,6.123936,-6.254068,1.291579,-5.251646,3.826301,8.541718,-4.562399,-8.182613,2.358626,-7.769078,9.172786,8.620759,-1.413472,8.974269,5.590092,9.515521,-9.495276,-9.398448,-5.558609,3.202500,-5.380808,-4.291815,-3.760347,3.244077,-1.971411,6.043515,2.067843,9.722068,-6.793166,-9.062631,-1.885647,8.517876,2.995801,-7.573569], dtype = "float32")#candidate|3804|(1144,)|const|float32
call_3801 = relay.TupleGetItem(func_3697_call(relay.reshape(const_3802.astype('float64'), [4, 13, 15]), relay.reshape(var_3803.astype('uint16'), [4, 40]), relay.reshape(const_3804.astype('float32'), [1144,]), ), 7)
call_3805 = relay.TupleGetItem(func_3702_call(relay.reshape(const_3802.astype('float64'), [4, 13, 15]), relay.reshape(var_3803.astype('uint16'), [4, 40]), relay.reshape(const_3804.astype('float32'), [1144,]), ), 7)
func_223_call = mod.get_global_var('func_223')
func_227_call = mutated_mod.get_global_var('func_227')
call_3806 = relay.TupleGetItem(func_223_call(relay.reshape(call_3772.astype('int16'), [3, 14, 2]), relay.reshape(const_3773.astype('int16'), [3, 14, 2]), relay.reshape(call_3772.astype('int16'), [3, 14, 2]), ), 2)
call_3807 = relay.TupleGetItem(func_227_call(relay.reshape(call_3772.astype('int16'), [3, 14, 2]), relay.reshape(const_3773.astype('int16'), [3, 14, 2]), relay.reshape(call_3772.astype('int16'), [3, 14, 2]), ), 2)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
var_3847 = relay.var("var_3847", dtype = "uint8", shape = (2, 120))#candidate|3847|(2, 120)|var|uint8
call_3846 = relay.TupleGetItem(func_2306_call(relay.reshape(var_3803.astype('uint16'), [4, 40]), relay.reshape(var_3847.astype('uint8'), [240,]), ), 0)
call_3848 = relay.TupleGetItem(func_2310_call(relay.reshape(var_3803.astype('uint16'), [4, 40]), relay.reshape(var_3847.astype('uint8'), [240,]), ), 0)
output = relay.Tuple([call_3760,call_3772,const_3773,call_3785,call_3796,call_3801,const_3802,var_3803,const_3804,call_3806,call_3846,var_3847,])
output2 = relay.Tuple([call_3761,call_3774,const_3773,call_3786,call_3797,call_3805,const_3802,var_3803,const_3804,call_3807,call_3848,var_3847,])
func_3852 = relay.Function([var_3803,var_3847,], output)
mod['func_3852'] = func_3852
mod = relay.transform.InferType()(mod)
var_3853 = relay.var("var_3853", dtype = "uint16", shape = (160,))#candidate|3853|(160,)|var|uint16
var_3854 = relay.var("var_3854", dtype = "uint8", shape = (2, 120))#candidate|3854|(2, 120)|var|uint8
output = func_3852(var_3853,var_3854,)
func_3855 = relay.Function([var_3853,var_3854,], output)
mutated_mod['func_3855'] = func_3855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_3857 = relay.TupleGetItem(func_2258_call(), 3)
call_3858 = relay.TupleGetItem(func_2260_call(), 3)
output = call_3857
output2 = call_3858
func_3863 = relay.Function([], output)
mod['func_3863'] = func_3863
mod = relay.transform.InferType()(mod)
output = func_3863()
func_3864 = relay.Function([], output)
mutated_mod['func_3864'] = func_3864
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_3893 = relay.TupleGetItem(func_2175_call(), 2)
call_3894 = relay.TupleGetItem(func_2176_call(), 2)
output = call_3893
output2 = call_3894
func_3895 = relay.Function([], output)
mod['func_3895'] = func_3895
mod = relay.transform.InferType()(mod)
output = func_3895()
func_3896 = relay.Function([], output)
mutated_mod['func_3896'] = func_3896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3863_call = mod.get_global_var('func_3863')
func_3864_call = mutated_mod.get_global_var('func_3864')
call_3934 = func_3863_call()
call_3935 = func_3863_call()
output = call_3934
output2 = call_3935
func_3938 = relay.Function([], output)
mod['func_3938'] = func_3938
mod = relay.transform.InferType()(mod)
output = func_3938()
func_3939 = relay.Function([], output)
mutated_mod['func_3939'] = func_3939
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_3946 = relay.TupleGetItem(func_2976_call(), 0)
call_3947 = relay.TupleGetItem(func_2977_call(), 0)
uop_3948 = relay.tan(call_3946.astype('float32')) # shape=(10, 11, 5)
uop_3950 = relay.tan(call_3947.astype('float32')) # shape=(10, 11, 5)
output = relay.Tuple([uop_3948,])
output2 = relay.Tuple([uop_3950,])
func_3960 = relay.Function([], output)
mod['func_3960'] = func_3960
mod = relay.transform.InferType()(mod)
mutated_mod['func_3960'] = func_3960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3960_call = mutated_mod.get_global_var('func_3960')
call_3961 = func_3960_call()
output = call_3961
func_3962 = relay.Function([], output)
mutated_mod['func_3962'] = func_3962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3986 = relay.var("var_3986", dtype = "float64", shape = (9, 6, 11))#candidate|3986|(9, 6, 11)|var|float64
var_3987 = relay.var("var_3987", dtype = "float64", shape = (9, 6, 11))#candidate|3987|(9, 6, 11)|var|float64
bop_3988 = relay.mod(var_3986.astype('float64'), relay.reshape(var_3987.astype('float64'), relay.shape_of(var_3986))) # shape=(9, 6, 11)
uop_3996 = relay.rsqrt(bop_3988.astype('float32')) # shape=(9, 6, 11)
output = relay.Tuple([uop_3996,])
output2 = relay.Tuple([uop_3996,])
func_4001 = relay.Function([var_3986,var_3987,], output)
mod['func_4001'] = func_4001
mod = relay.transform.InferType()(mod)
mutated_mod['func_4001'] = func_4001
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4001_call = mutated_mod.get_global_var('func_4001')
var_4003 = relay.var("var_4003", dtype = "float64", shape = (9, 6, 11))#candidate|4003|(9, 6, 11)|var|float64
var_4004 = relay.var("var_4004", dtype = "float64", shape = (9, 6, 11))#candidate|4004|(9, 6, 11)|var|float64
call_4002 = func_4001_call(var_4003,var_4004,)
output = call_4002
func_4005 = relay.Function([var_4003,var_4004,], output)
mutated_mod['func_4005'] = func_4005
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_4138 = relay.TupleGetItem(func_3037_call(), 0)
call_4139 = relay.TupleGetItem(func_3039_call(), 0)
output = relay.Tuple([call_4138,])
output2 = relay.Tuple([call_4139,])
func_4179 = relay.Function([], output)
mod['func_4179'] = func_4179
mod = relay.transform.InferType()(mod)
output = func_4179()
func_4180 = relay.Function([], output)
mutated_mod['func_4180'] = func_4180
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3895_call = mod.get_global_var('func_3895')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_4187 = func_3895_call()
call_4188 = func_3895_call()
output = relay.Tuple([call_4187,])
output2 = relay.Tuple([call_4188,])
func_4191 = relay.Function([], output)
mod['func_4191'] = func_4191
mod = relay.transform.InferType()(mod)
mutated_mod['func_4191'] = func_4191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mutated_mod.get_global_var('func_4191')
call_4192 = func_4191_call()
output = call_4192
func_4193 = relay.Function([], output)
mutated_mod['func_4193'] = func_4193
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3895_call = mod.get_global_var('func_3895')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_4200 = func_3895_call()
call_4201 = func_3895_call()
output = relay.Tuple([call_4200,])
output2 = relay.Tuple([call_4201,])
func_4208 = relay.Function([], output)
mod['func_4208'] = func_4208
mod = relay.transform.InferType()(mod)
output = func_4208()
func_4209 = relay.Function([], output)
mutated_mod['func_4209'] = func_4209
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4208_call = mod.get_global_var('func_4208')
func_4209_call = mutated_mod.get_global_var('func_4209')
call_4214 = relay.TupleGetItem(func_4208_call(), 0)
call_4215 = relay.TupleGetItem(func_4209_call(), 0)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_4217 = relay.TupleGetItem(func_2434_call(), 0)
call_4218 = relay.TupleGetItem(func_2436_call(), 0)
output = relay.Tuple([call_4214,call_4217,])
output2 = relay.Tuple([call_4215,call_4218,])
func_4241 = relay.Function([], output)
mod['func_4241'] = func_4241
mod = relay.transform.InferType()(mod)
mutated_mod['func_4241'] = func_4241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4241_call = mutated_mod.get_global_var('func_4241')
call_4242 = func_4241_call()
output = call_4242
func_4243 = relay.Function([], output)
mutated_mod['func_4243'] = func_4243
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3895_call = mod.get_global_var('func_3895')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_4249 = func_3895_call()
call_4250 = func_3895_call()
func_2864_call = mod.get_global_var('func_2864')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_4260 = relay.TupleGetItem(func_2864_call(), 0)
call_4261 = relay.TupleGetItem(func_2865_call(), 0)
output = relay.Tuple([call_4249,call_4260,])
output2 = relay.Tuple([call_4250,call_4261,])
func_4262 = relay.Function([], output)
mod['func_4262'] = func_4262
mod = relay.transform.InferType()(mod)
mutated_mod['func_4262'] = func_4262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mutated_mod.get_global_var('func_4262')
call_4263 = func_4262_call()
output = call_4263
func_4264 = relay.Function([], output)
mutated_mod['func_4264'] = func_4264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3938_call = mod.get_global_var('func_3938')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_4287 = func_3938_call()
call_4288 = func_3938_call()
func_2946_call = mod.get_global_var('func_2946')
func_2949_call = mutated_mod.get_global_var('func_2949')
const_4291 = relay.const([[5,-4,-1,-1,1,-5,-3,6,4,9,7,-5,-1,8,4,3,-2,-10,-1,3,3,4,-6,-9,-4,-10,6,-9,2,8,-5,-5,7,3,10,-9,4,9,4,4,-6,-1,10,1,9,-7,-10,3,-10,5,-2,3,8,6,9,3,4,8,-6,-7,-8,-9,-9,-6,-9,-6,-5,-7,-10,8,4,-7,-5,-4,5,6,-10,-2,9,7,-8,9,4,8,-8,5,6,-10,-6,4,8,5,-8,6,-6,5,5,-9,9,-3,4,9,-10,2,5,-9,9,2,4,5,10,6,-4,-4,-4,10,-5,-7,9,-2,9,-1,9,6,-3,3,-10,9,-6,5,-10,-8,-5,1,-4,2,6,2,9,9,8,7,3,-10,-9,-10,3,3,3,-3,6,-2,1,10]], dtype = "uint64")#candidate|4291|(1, 154)|const|uint64
const_4292 = relay.const([[-10,10,-6,8,4,9],[7,7,1,9,9,-2],[7,3,-9,2,5,7],[-6,-7,10,-6,4,-4],[-5,6,-9,8,-4,-4],[3,-2,-7,-10,-5,-7],[5,-3,-9,5,10,-10],[8,6,9,6,-7,2],[7,-9,1,9,-9,6],[-9,-2,2,9,9,3],[7,-4,8,-8,-10,-7],[-1,8,9,8,4,-9],[1,6,7,-10,9,-1],[-1,-1,-6,-1,-7,6],[2,-5,5,3,-6,-8],[6,-7,3,1,-7,-5],[3,9,-5,-7,1,3],[6,4,5,-4,1,8],[-1,9,3,8,-2,-7],[2,-5,-4,10,4,-3],[-5,2,2,1,-8,9],[6,9,-6,6,8,2],[-10,5,4,3,-9,-5],[-4,2,9,-5,-3,-5],[-1,-7,-2,5,3,4],[-10,-9,3,-9,2,-8],[5,8,-8,-6,-5,9],[4,-7,-4,4,-9,4],[-9,-8,-4,-2,2,4],[-4,-10,-3,-4,5,-6],[4,4,5,5,10,-4],[2,3,5,-7,-8,-8],[7,2,5,2,9,3],[3,7,3,-8,-7,-10],[-8,3,-3,-1,-5,2],[-10,-9,2,1,2,-9],[-9,-10,9,9,5,5],[3,10,-8,9,-9,-5],[2,6,-5,-9,-3,-9],[6,-10,-9,1,-9,-3],[-3,5,3,-3,-7,1],[4,-6,-8,9,-4,7],[2,-7,-6,9,3,3],[3,2,-3,-4,4,3],[-7,-6,-9,-4,8,3],[-2,-7,-8,10,4,-3],[-7,-5,-9,3,-1,8],[-9,-3,4,2,10,-10],[10,2,-3,3,4,-3],[6,-2,4,-7,4,1],[-7,3,-4,8,2,8],[-6,7,8,-6,5,-1],[8,5,7,-10,-1,-4],[8,9,-1,-5,-9,-9],[-2,3,-1,-10,2,10],[1,4,5,-7,7,2],[6,-6,-10,3,-8,-3],[1,-9,-9,2,1,2],[-1,8,6,7,7,-6],[-6,3,5,4,-9,1],[-4,-8,7,4,6,10],[-1,-3,-10,-9,7,-2],[-8,-2,-1,-5,-6,-3],[-10,2,8,9,9,-10],[-10,-7,1,-3,8,-3],[8,8,-8,6,-6,5],[2,-3,-5,-10,-2,-4],[-8,9,2,-9,-2,2],[-5,-8,-9,-7,7,2],[5,-7,-10,-9,9,6],[-3,-2,1,-5,-4,-9],[5,4,6,-2,-9,-9],[1,7,7,3,-10,5],[1,-10,-2,-10,7,-9],[-1,5,1,8,1,3],[-1,-7,3,4,1,-1],[-5,10,-6,-6,-9,6]], dtype = "uint64")#candidate|4292|(77, 6)|const|uint64
call_4290 = relay.TupleGetItem(func_2946_call(relay.reshape(const_4291.astype('uint64'), [14, 1, 11]), relay.reshape(const_4292.astype('uint64'), [14, 3, 11]), ), 1)
call_4293 = relay.TupleGetItem(func_2949_call(relay.reshape(const_4291.astype('uint64'), [14, 1, 11]), relay.reshape(const_4292.astype('uint64'), [14, 3, 11]), ), 1)
output = relay.Tuple([call_4287,call_4290,const_4291,const_4292,])
output2 = relay.Tuple([call_4288,call_4293,const_4291,const_4292,])
func_4297 = relay.Function([], output)
mod['func_4297'] = func_4297
mod = relay.transform.InferType()(mod)
output = func_4297()
func_4298 = relay.Function([], output)
mutated_mod['func_4298'] = func_4298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4193_call = mutated_mod.get_global_var('func_4193')
call_4339 = relay.TupleGetItem(func_4191_call(), 0)
call_4340 = relay.TupleGetItem(func_4193_call(), 0)
output = call_4339
output2 = call_4340
func_4360 = relay.Function([], output)
mod['func_4360'] = func_4360
mod = relay.transform.InferType()(mod)
mutated_mod['func_4360'] = func_4360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4360_call = mutated_mod.get_global_var('func_4360')
call_4361 = func_4360_call()
output = call_4361
func_4362 = relay.Function([], output)
mutated_mod['func_4362'] = func_4362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_4378 = relay.TupleGetItem(func_2976_call(), 0)
call_4379 = relay.TupleGetItem(func_2977_call(), 0)
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
var_4385 = relay.var("var_4385", dtype = "uint16", shape = (160,))#candidate|4385|(160,)|var|uint16
call_4384 = relay.TupleGetItem(func_2853_call(relay.reshape(var_4385.astype('uint16'), [160,])), 3)
call_4386 = relay.TupleGetItem(func_2856_call(relay.reshape(var_4385.astype('uint16'), [160,])), 3)
output = relay.Tuple([call_4378,call_4384,var_4385,])
output2 = relay.Tuple([call_4379,call_4386,var_4385,])
func_4393 = relay.Function([var_4385,], output)
mod['func_4393'] = func_4393
mod = relay.transform.InferType()(mod)
var_4394 = relay.var("var_4394", dtype = "uint16", shape = (160,))#candidate|4394|(160,)|var|uint16
output = func_4393(var_4394)
func_4395 = relay.Function([var_4394], output)
mutated_mod['func_4395'] = func_4395
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4452 = relay.var("var_4452", dtype = "int8", shape = (10, 12, 2))#candidate|4452|(10, 12, 2)|var|int8
var_4453 = relay.var("var_4453", dtype = "int8", shape = (10, 12, 2))#candidate|4453|(10, 12, 2)|var|int8
bop_4454 = relay.not_equal(var_4452.astype('bool'), relay.reshape(var_4453.astype('bool'), relay.shape_of(var_4452))) # shape=(10, 12, 2)
output = bop_4454
output2 = bop_4454
func_4465 = relay.Function([var_4452,var_4453,], output)
mod['func_4465'] = func_4465
mod = relay.transform.InferType()(mod)
var_4466 = relay.var("var_4466", dtype = "int8", shape = (10, 12, 2))#candidate|4466|(10, 12, 2)|var|int8
var_4467 = relay.var("var_4467", dtype = "int8", shape = (10, 12, 2))#candidate|4467|(10, 12, 2)|var|int8
output = func_4465(var_4466,var_4467,)
func_4468 = relay.Function([var_4466,var_4467,], output)
mutated_mod['func_4468'] = func_4468
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4208_call = mod.get_global_var('func_4208')
func_4209_call = mutated_mod.get_global_var('func_4209')
call_4473 = relay.TupleGetItem(func_4208_call(), 0)
call_4474 = relay.TupleGetItem(func_4209_call(), 0)
func_963_call = mod.get_global_var('func_963')
func_967_call = mutated_mod.get_global_var('func_967')
const_4491 = relay.const([[-2,-9,9,3,-7,-9,-3,-3,-8,-10,2,-6,-8,-9,-2,1,10,-8,-3,6,-3,5,8,7,-7,-10,10,-4,-6,5,-8,1,-8,10,-9,1,3,-9,6,-6,7,-1,-1,-7,-10,4,-1,-7,-5,10,3,-9,-9,-7,6,-1,-9,-10,-7,-9,1,4,-2,3,-10,-5,-8,1,-3,-6,2,-10,8,-5,-8,4,10,5,1,-1,-5,-1,-9,10,-1,-10,2,7,-1,6,7,-1,10,-10,4,-9,6,-1,4,-8,8,9,-8,-1,-9,8,-9,-6,3,-7,7,-7,5,9,-9,-4,5,-6,-2,-9,4,-8,6,-9,9,-9,1,9,-4,-5,5,10,3,-2,1,-5,-1,-7,8,-6,-1,3,-1,-7,-3,7,-10,-8,3,7,1,10,-6,7,-2,-10,9,6,-8,-2,5,-8,6,-9,6,-2,9,-7,8,8,-8,-2,4,5,-1,4,8,-1,8,5,6,-10,-9,10,10,7,6,5,9,3,-10,-6,-9,-5,6,2,9,-9,-9,-8,-8,-9,8,6,5,-9,-6,-3,3,3,-2,-5,5,1,-4,-4,-6,7,-6,-3,-2,-8,-7,-3,-1,-2,-9,3,-3,-9,5,-9,6,-5,1,-5,-10,1,-6,-10,9,1,10,-4,-10,10,-6,-6,-7,7,9,-8,5,-8,2,-9,1,10,3,4,9,-9,-3,9,6,-5,-10,-5,2,7,9,-8,-5,2,6,-3,2,-2,-7,-6,-9,-9,5,5,5,-5,5,9,-4,9,-8,5,-4,-6,9,5,2,8,-10,-7,2,-1,5,-10,2,-9,10,10,-2,-7,6,-3,-10,8,-4,4,6,7,-7,10,-4,10,6,2,-6,-3,2,3,-6,1,3,-10,-5,10,-3,1,-3,5,-1,-7,7,9,5,3,-2,-3,-2,-6,1,-10,8,6,-2,-1,8,-10,-8,-6,3,-6,4,2,4,4,3,2,5,5,8,2,3,-3,-1,6,6,8,3,9,-7,-3,-9,4,-4,1,4,-8,-5,10,9,1,9,-7,-1,-10,-9,1,-9,-2,-3,-4,8,3,-4,1,-10,1,4,-10,4,5,2,-3,-10,-5,-10,9,-3,-1,-5,10,-7,-3,-7,-5,-4,6,8,-8,-6,3,-1,4,-5,1,-9,5,10,-6,4,1,4,3,-9,-10,5,-9,-6,-10,-9,-10,10,2,-5,8,-10,7,-6,-5,1,-10,-9,-3,-3,5,-2,10,-10,3,-3,-7,9,6,-2,4,6,-2,-4,-1,7,-9,-1,-10,-3,8,-5,-8,9,-4,7,-6,2,10,-2,3,7,8,-2,10,-3,-1,5,3,-3,5,-4,5,-9,-2,-7,10,-10,3,7,7,-4,-8,-8,-3,9,3,8,-1,-4,-10,9,-7,8,-1,5,-7,-6,8,-8,-7,8,2,9,-5,-8,7,8,-6,-6,-3,7,-2,5,-9,10,1]], dtype = "int16")#candidate|4491|(1, 550)|const|int16
const_4492 = relay.const([7,-9,-8,-10,4,2,2,3,-7,6,-10,1,3,5,5,4,-9,6,10,4,1,-5,8,-9,-4,6,-2,-7,-4,-7,-4,2,5,-1,-6,-10,-1,-2,-5,-3,7,-3,4,-4,-2,-7,1,10,-9,-1,-7,2,6,-8,4,-9,1,-8,2,3,-2,-10,2,-8,-4,6,2,3,1,-10,-3,5,-3,-10,6,8,-6,10,-10,-10,7,-10,-3,6,4,-8,7,2,-8,-2,6,4,-10,-1,-3,9,-7,1,-9,6,3,10,-1,9,-5,-6,2,-4,-4,-5,7,9,10,-8,6,-2,-9,-10,-7,10,1,4,5,8,-4,-6,-6,7,-4,-6,-8,-9,3,7,-8,1,-2,3,-4,7,-3,-10,-8,4,1,-10,8,-6,-9,-10,-2,6,-7,-1,9,10,-1,-10,7,-10,-4,7,-2,-5,-8,7,8,-3,-4,10,4,-5,10,5,9,-8,-8,5,8,10,-4,5,4,-9,-4,-2,-8,-5,-2,8,6,4,-10,5,-8,-3,3,6,-8,6,5,10,4,-4,4,10,9,-5,5,-7,6,-7,10,6,2,7,9,1,-3,-2,8,-8,-7,5,4,5,2,8,-9,9,4,9,5,7,-6,4,2,-2,-8,9,9,-3,7,-4,-4,8,-10,3,8,3,10,9,-3,9,7,3,-3,6,8,6,4,-1,-2,10,-6,-1,2,8,-10,7,8,-1,8,1,-1,7,-3,-10,5,-5,2,-1,6,10,-8,-3,-6,-7,4,-10,7,10,8,-6,-9,7,-7,-6,8,10,4,2,10,4,-9,10,-4,7,10,6,-4,-3,-9,-5,6,3,-9,-9,8,2,10,5,-2,-5,-8,2,-1,-3,3,-9,3,8,-9,-10,2,4,4,5,2,8,10,1,6,-6,-4,-9,-7,9,-4,2,-1,-8,-8,10,-5,-9,10,-10,6,5,-1,4,-1,-3,-4,-3,-5,-9,-5,2,-7,7,-1,-4,-5,6,3,-3,5,-9,4,3,2,2,-10,7,5,7,-3,4,9,-3,10,-7,5,-3,8,8,-7,-7,-5,6,-10,-8,7,-4,-10,9,4,-6,-3,-8,4,-1,4,-7,4,-9,-10,1,6,4,-2,-9,-10,-7,-3,-4,-9,-5,-4,-2,-8,7,5,-5,-5,1,1,-6,-3,4,8,-3,4,9,-2,10,-1,10,-7,1,4,-9,-9,6,10,10,-9,-4,-10,-2,-6,-4,1,5,1,-10,-7,9,-4,8,4,-1,-10,7,7,-4,-4,-2,-4,-3,-2,-9,-1,-4,3,10,-9,-2,7,-9,-9,-9,-1,7,7,-10,2,7,6,-10,-3,-8,-3,-1,10,-7,5,3,5,3,2,1,1,-9,7,-9,10,-5,8,3,8,-8,-6,-8,10,4,-5,6,-3,6,-4,2,-10,7,3,-7,-2,3,-5,8,4,-9,-5,6,10,9,5,-10,-8,-5,8,1,7,5,-9,-1,-5,6,5,-9,4,-1,-9,5,7,-8,4,-5,5,4,5,1,-4,-1,8,8,-7,-2,1,4,9,-4,-1,-3,1,2,-3,-5,9,7,-7,9,5,10,9,3,6,-9,6,-3,9,2,-2,8,4,-9,2,5,-1,3,-1,-8,-4,3,-10,7,-6,3,8,9,9,-5,8,-10,8,-9,-2,5,-3,-7,7,-4,7,-8,1,8,-5,-2,-4,-2,-10,1,-5,9,5,4,-4,-2,6,-5,-7,-8,8,5,-4,4,7,5,2,-1,2,8,4,6,-1,-8,5,-1,7,3,-3,5,-2,4,-8,8,2,5,-7,-7,-3,-5,2,9,3,1,1,-8,8,-5,-6,-6,3,4,4,6,-8,-8,-8,10,-1,9,-6,-4,-8,-1,-6,-5,-2,-6,-2,-6,5,1,-10,-5,9,-2,-1,-1,5,-5,1,-9,9,-9,-8,-1,8,-6,-2,-9,5,8,-8,-6,1,6,-1,4,10,9,10,-1,-4,9,8,-7,-1,-2,3,4,9,-3,6,-10,-3,-4,-1,-5,4,10,-4,-6,3,-6,7,-8,1,-7,-1,3,8,-10,4,5,-9,-9,-4,-10,4,1,7,10,-5,6,5,-1,-9,-3,6,1,1,-10,7,-1,-5,4,4,-1,10,4,-9,10,7,8,-9,1,-9,4,1,8,-8,8,-8,-2,6,-6,2,-2,-9,-4,-1,8,-6,-7,10,2,2,1,-9,-10,8,2,4,-10,-4,1,9,-7,-4,1,2,3,3,3,8,9,-3,-7,-2,-2,-1,-4,-2,5,-5,-9,2,-10,5,-7,1,8,-4,1,-2,-6,5,5,-9,3,-9,-1,-4,5,6,-4,-7,-9,9,-9,-2,-8,-5,4,3,9,10,4,3,-7,9,-6,-6,-7,6,10], dtype = "uint8")#candidate|4492|(900,)|const|uint8
call_4490 = relay.TupleGetItem(func_963_call(relay.reshape(const_4491.astype('int16'), [10, 11, 5]), relay.reshape(const_4491.astype('int16'), [10, 11, 5]), relay.reshape(const_4492.astype('uint8'), [900,]), ), 0)
call_4493 = relay.TupleGetItem(func_967_call(relay.reshape(const_4491.astype('int16'), [10, 11, 5]), relay.reshape(const_4491.astype('int16'), [10, 11, 5]), relay.reshape(const_4492.astype('uint8'), [900,]), ), 0)
uop_4500 = relay.atanh(const_4491.astype('float32')) # shape=(1, 550)
uop_4509 = relay.log2(uop_4500.astype('float32')) # shape=(1, 550)
uop_4512 = relay.sqrt(uop_4509.astype('float64')) # shape=(1, 550)
output = relay.Tuple([call_4473,call_4490,const_4492,uop_4512,])
output2 = relay.Tuple([call_4474,call_4493,const_4492,uop_4512,])
func_4515 = relay.Function([], output)
mod['func_4515'] = func_4515
mod = relay.transform.InferType()(mod)
output = func_4515()
func_4516 = relay.Function([], output)
mutated_mod['func_4516'] = func_4516
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4193_call = mutated_mod.get_global_var('func_4193')
call_4581 = relay.TupleGetItem(func_4191_call(), 0)
call_4582 = relay.TupleGetItem(func_4193_call(), 0)
output = call_4581
output2 = call_4582
func_4585 = relay.Function([], output)
mod['func_4585'] = func_4585
mod = relay.transform.InferType()(mod)
mutated_mod['func_4585'] = func_4585
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4585_call = mutated_mod.get_global_var('func_4585')
call_4586 = func_4585_call()
output = call_4586
func_4587 = relay.Function([], output)
mutated_mod['func_4587'] = func_4587
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2333_call = mutated_mod.get_global_var('func_2333')
call_4614 = func_2332_call()
call_4615 = func_2332_call()
output = relay.Tuple([call_4614,])
output2 = relay.Tuple([call_4615,])
func_4632 = relay.Function([], output)
mod['func_4632'] = func_4632
mod = relay.transform.InferType()(mod)
output = func_4632()
func_4633 = relay.Function([], output)
mutated_mod['func_4633'] = func_4633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_4636 = relay.TupleGetItem(func_2175_call(), 1)
call_4637 = relay.TupleGetItem(func_2176_call(), 1)
output = call_4636
output2 = call_4637
func_4665 = relay.Function([], output)
mod['func_4665'] = func_4665
mod = relay.transform.InferType()(mod)
mutated_mod['func_4665'] = func_4665
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4665_call = mutated_mod.get_global_var('func_4665')
call_4666 = func_4665_call()
output = call_4666
func_4667 = relay.Function([], output)
mutated_mod['func_4667'] = func_4667
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4297_call = mod.get_global_var('func_4297')
func_4298_call = mutated_mod.get_global_var('func_4298')
call_4679 = relay.TupleGetItem(func_4297_call(), 3)
call_4680 = relay.TupleGetItem(func_4298_call(), 3)
func_2607_call = mod.get_global_var('func_2607')
func_2609_call = mutated_mod.get_global_var('func_2609')
var_4686 = relay.var("var_4686", dtype = "float32", shape = (286, 4))#candidate|4686|(286, 4)|var|float32
call_4685 = relay.TupleGetItem(func_2607_call(relay.reshape(var_4686.astype('float32'), [1144,])), 4)
call_4687 = relay.TupleGetItem(func_2609_call(relay.reshape(var_4686.astype('float32'), [1144,])), 4)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_4689 = relay.TupleGetItem(func_2175_call(), 1)
call_4690 = relay.TupleGetItem(func_2176_call(), 1)
output = relay.Tuple([call_4679,call_4685,var_4686,call_4689,])
output2 = relay.Tuple([call_4680,call_4687,var_4686,call_4690,])
func_4700 = relay.Function([var_4686,], output)
mod['func_4700'] = func_4700
mod = relay.transform.InferType()(mod)
var_4701 = relay.var("var_4701", dtype = "float32", shape = (286, 4))#candidate|4701|(286, 4)|var|float32
output = func_4700(var_4701)
func_4702 = relay.Function([var_4701], output)
mutated_mod['func_4702'] = func_4702
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4736 = relay.var("var_4736", dtype = "bool", shape = (12, 12, 12))#candidate|4736|(12, 12, 12)|var|bool
var_4737 = relay.var("var_4737", dtype = "bool", shape = (12, 12, 12))#candidate|4737|(12, 12, 12)|var|bool
bop_4738 = relay.logical_or(var_4736.astype('bool'), relay.reshape(var_4737.astype('bool'), relay.shape_of(var_4736))) # shape=(12, 12, 12)
func_4297_call = mod.get_global_var('func_4297')
func_4298_call = mutated_mod.get_global_var('func_4298')
call_4743 = relay.TupleGetItem(func_4297_call(), 2)
call_4744 = relay.TupleGetItem(func_4298_call(), 2)
var_4760 = relay.var("var_4760", dtype = "uint64", shape = (7, 154))#candidate|4760|(7, 154)|var|uint64
bop_4761 = relay.equal(call_4743.astype('bool'), var_4760.astype('bool')) # shape=(7, 154)
bop_4764 = relay.equal(call_4744.astype('bool'), var_4760.astype('bool')) # shape=(7, 154)
output = relay.Tuple([bop_4738,bop_4761,])
output2 = relay.Tuple([bop_4738,bop_4764,])
func_4765 = relay.Function([var_4736,var_4737,var_4760,], output)
mod['func_4765'] = func_4765
mod = relay.transform.InferType()(mod)
mutated_mod['func_4765'] = func_4765
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4765_call = mutated_mod.get_global_var('func_4765')
var_4767 = relay.var("var_4767", dtype = "bool", shape = (12, 12, 12))#candidate|4767|(12, 12, 12)|var|bool
var_4768 = relay.var("var_4768", dtype = "bool", shape = (12, 12, 12))#candidate|4768|(12, 12, 12)|var|bool
var_4769 = relay.var("var_4769", dtype = "uint64", shape = (7, 154))#candidate|4769|(7, 154)|var|uint64
call_4766 = func_4765_call(var_4767,var_4768,var_4769,)
output = call_4766
func_4770 = relay.Function([var_4767,var_4768,var_4769,], output)
mutated_mod['func_4770'] = func_4770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4515_call = mod.get_global_var('func_4515')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_4807 = relay.TupleGetItem(func_4515_call(), 2)
call_4808 = relay.TupleGetItem(func_4516_call(), 2)
output = call_4807
output2 = call_4808
func_4813 = relay.Function([], output)
mod['func_4813'] = func_4813
mod = relay.transform.InferType()(mod)
output = func_4813()
func_4814 = relay.Function([], output)
mutated_mod['func_4814'] = func_4814
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3960_call = mod.get_global_var('func_3960')
func_3962_call = mutated_mod.get_global_var('func_3962')
call_4856 = relay.TupleGetItem(func_3960_call(), 0)
call_4857 = relay.TupleGetItem(func_3962_call(), 0)
func_963_call = mod.get_global_var('func_963')
func_967_call = mutated_mod.get_global_var('func_967')
const_4872 = relay.const([-3,-4,10,7,10,-5,-1,-8,-8,9,4,-2,6,-4,-9,10,3,-6,2,2,-1,8,-10,6,-1,3,-2,2,5,7,-6,-5,1,-10,7,4,1,-1,-2,6,-1,9,-5,3,6,3,-7,10,10,-4,4,-8,-1,3,-7,7,9,1,-8,4,-4,-5,-5,-2,5,-3,-3,-3,3,10,-8,-8,-2,2,3,3,3,2,-2,-3,2,5,1,2,5,-2,8,1,8,1,7,3,-1,-8,-3,10,-10,-3,-5,5,-8,5,8,7,7,-1,3,6,1,8,8,-9,7,1,6,3,4,9,6,-10,-5,1,5,3,5,9,-1,2,-8,-1,-1,-8,6,7,-5,-7,5,8,7,-5,-5,4,1,-6,-2,-5,3,6,-1,3,7,6,-8,-2,-8,-5,-1,2,8,-3,7,3,-9,1,-1,8,4,4,2,5,4,4,-3,-7,4,-1,-8,-3,3,-1,-8,-4,4,-4,-3,6,-1,3,7,-4,2,4,-10,-8,-10,-7,7,3,-9,-8,6,-2,-6,-2,6,4,1,-7,4,4,-4,4,-2,3,-2,6,6,-8,2,5,-7,-6,-8,9,-10,-6,4,6,-7,-7,-3,-8,10,1,-7,10,7,2,8,-7,-6,3,-5,6,-1,10,8,2,5,10,2,-3,3,-4,9,-1,4,-5,-6,-10,5,-10,-9,3,-8,3,-10,-6,-4,-7,-2,7,4,-7,-4,5,7,4,-8,10,-9,-5,-1,-5,-1,-5,-1,-1,4,-3,-2,-10,6,7,-1,1,1,-1,6,5,-8,-2,-5,-2,-10,-9,-5,-5,3,4,-8,3,10,-2,-10,6,9,7,-5,-5,5,-9,-3,1,6,-7,2,-6,6,9,-4,5,6,-9,2,6,-10,-8,-9,6,-6,-2,6,1,3,-9,-8,2,8,-7,-9,-8,9,-1,-8,-6,1,5,5,9,-7,-6,-7,-10,-2,-7,-1,-2,-4,-3,-10,-7,8,-8,7,10,8,-10,4,1,-9,9,-5,4,-3,-10,-7,-2,10,-5,-7,-4,1,-3,-5,1,3,6,2,-7,-7,8,5,-9,1,-3,-1,5,-10,6,-3,1,-8,3,-7,5,-7,-9,2,-9,-4,-1,-1,6,7,7,9,-5,5,7,10,7,4,4,-4,8,7,-4,10,-10,-1,8,-6,-9,2,-4,-7,-4,5,-8,10,8,7,-6,1,5,-4,6,-5,3,-2,-2,6,-1,-3,-3,-4,10,2,-10,5,-6,8,1,6,3,-10,8,-2,-8,-5,9,1,-3,-7,-5,10,-1,5,6,-5,1,7,-3,6,5,2,5,3,-8,2,-5,7,5,-8,-5,-1,2,4,6,-7,-5,2,6,-7,8,-8,-6,-8,6,1,3,-8,9,-10,-3,-5,-8,8,4,8,9,-6,-8,-5,4,-6,9,4,7,2,-3,-10,-5,4,-6,-5,8,-9,10,3,-9,3,-4,-7,-10,-10,-7,3,9,-3,-2,9,2,6,-1,7,7,-9,4,-1,4,-5,-2,-4,6,5,8,7,3,3,2,3,10,2,7,-8,7,-3,-4,9,4,9,9,5,9,5,8,3,-9,1,2,-6,-5,-7,5,10,-1,3,-2,3,6,5,5,3,-4,-9,-6,-5,-1,-1,-2,6,-9,-5,-7,4,-8,9,-6,-7,-7,-9,1,-5,10,-1,-8,-6,-7,-9,1,10,-2,-3,9,1,8,8,-5,2,-2,8,9,8,4,10,1,-5,7,1,1,4,1,-9,-7,-4,3,9,-5,-7,4,-4,-9,8,-8,4,3,9,9,2,8,-5,9,2,-10,-1,-8,1,-6,5,-10,-3,6,6,-9,-3,8,5,-1,9,8,8,-7,-3,-8,6,7,8,1,-1,6,-7,-2,-10,-9,-4,9,3,1,-8,6,6,5,-9,1,9,3,-2,8,8,10,-4,-6,-6,5,-5,-10,-6,-6,-3,4,4,10,2,7,5,2,6,-8,-4,-8,4,1,-3,5,-5,2,8,-7,-7,-2,2,4,1,-2,-5,-5,8,-8,-4,1,-4,1,2,-2,-2,5,-8,4,1,6,8,-6,7,1,9,-3,4,4,-1,9,3,-9,-3,2,-1,-1,-10,-9,-4,-10,-4,-7,6,6,-10,-1,1,5,3,9,6,6,10,4,-8,7,7,10,-7,-1,5,1,-1,1,4,1,1,-7,-3,-5,3,-2,-7,-4,-3,1,-6,-4,-1,-3,5,6,-1,7,3,-4,-3,9,-1,4,7,-1,-10,-9,10,-7,-6,-10,-7,1,-6,-10,-3,9,-3,9,-8,2,7,-8,-3,-1,9,8,-8,-10,5,-5,9,6,9,-2,8,-5,-3,-2,-2,-7,-6,-9,-5,-1,10,-1,-2,-1,-2,9], dtype = "uint8")#candidate|4872|(900,)|const|uint8
call_4871 = relay.TupleGetItem(func_963_call(relay.reshape(call_4856.astype('int16'), [10, 11, 5]), relay.reshape(call_4856.astype('int16'), [10, 11, 5]), relay.reshape(const_4872.astype('uint8'), [900,]), ), 2)
call_4873 = relay.TupleGetItem(func_967_call(relay.reshape(call_4856.astype('int16'), [10, 11, 5]), relay.reshape(call_4856.astype('int16'), [10, 11, 5]), relay.reshape(const_4872.astype('uint8'), [900,]), ), 2)
func_3697_call = mod.get_global_var('func_3697')
func_3702_call = mutated_mod.get_global_var('func_3702')
var_4887 = relay.var("var_4887", dtype = "float64", shape = (780,))#candidate|4887|(780,)|var|float64
const_4888 = relay.const([-4,-10,4,-5,-7,2,-7,10,9,-1,3,-6,-2,-7,4,-6,-2,7,4,-7,-6,-6,1,2,-9,2,-8,-3,3,-3,-3,-7,7,-1,6,1,-6,-7,-4,8,4,7,10,-4,-9,10,-4,-9,3,-2,-7,-2,-10,1,-10,1,-8,-5,8,1,-4,3,10,-1,-1,1,-5,-10,-2,1,7,5,10,-4,-7,8,-6,1,3,8,-4,2,1,-4,-3,6,-7,-7,-1,7,-6,1,-6,-1,-6,-4,9,10,8,-5,-9,2,4,-6,10,4,8,9,8,6,-8,-4,4,7,8,-2,-6,6,4,4,-5,2,-4,9,1,-7,6,8,-7,-4,10,3,-10,6,1,10,10,9,-4,-9,-4,6,8,-1,-2,2,-1,-7,-4,-7,-5,-10,10,1,8,9,-4,3,10,1], dtype = "uint16")#candidate|4888|(160,)|const|uint16
const_4889 = relay.const([[7.696025,2.615321,8.767215,-1.173239,-9.817928,3.860150,-6.143037,8.868435,2.085164,8.903332,6.095684,-4.495173,-7.473019,5.309707,-1.192137,4.775079,-3.156955,2.941845,6.485264,-7.948171,-3.798180,-7.228760,-0.353785,4.263594,2.152204,-0.274132,9.242091,6.745486,-0.035963,-7.826235,3.350172,-0.585214,-5.527182,1.467362,-6.911182,-5.860962,5.881442,3.304120,-2.587581,3.635676,-2.250604,-3.718568,9.406803,6.698936,-0.310333,-4.172352,0.112475,8.440334,-8.949429,6.403001,-4.987045,-2.617290],[-3.534788,3.162238,-6.920331,-8.392734,9.682236,-5.564770,-7.775919,-5.197029,8.827914,-3.797901,-8.854550,-7.794676,9.686691,2.724268,9.882597,5.610706,9.588476,1.087697,-9.008123,-6.358397,-7.956063,-9.307529,3.671218,-4.822528,5.333203,0.190329,-8.352947,3.034992,-2.411697,-4.087979,-8.738972,8.204665,-5.097291,2.458917,2.875299,-6.839096,-5.150581,-6.889762,-4.602838,-0.838326,-6.753155,4.459349,5.029618,-6.466407,8.586207,-7.637262,-1.107426,1.578005,-4.122623,2.544288,9.062206,6.271368],[-3.746063,2.911827,-9.415401,0.075125,7.407534,-3.220772,0.991735,-3.907333,9.812371,-3.303681,7.337830,-3.821863,-7.434615,5.098539,-4.329794,6.868285,-6.041569,4.605875,-5.883357,4.083108,7.572265,-6.180770,-7.091328,3.074871,7.775830,-2.149804,4.803162,-9.765678,-7.094126,2.647143,5.303880,-4.786617,6.852074,-6.006666,-3.465241,-5.402138,7.067503,-1.643818,3.811669,7.169522,5.877214,9.618640,6.182339,-6.047245,5.442774,-2.102443,-2.007240,3.710727,-0.442288,5.598824,8.035361,-6.193467],[-0.047652,8.004136,-0.646898,8.517100,-6.139341,-2.742989,-2.945688,8.750515,5.732958,-4.312879,-9.747274,4.737206,-3.053173,0.170589,-2.316620,-7.817919,-0.002765,2.259700,8.980987,-4.835667,2.848205,1.967833,6.548213,-9.975677,-8.209306,-4.367497,-4.280528,6.436065,-4.294189,-0.863758,-1.634268,-0.253475,-1.513661,2.385304,-8.930953,1.114025,-2.222388,1.372803,-9.022104,-0.405406,4.005238,1.173475,1.548931,-8.897245,-4.589566,-7.659098,0.597957,7.876444,-5.574284,1.957066,3.619280,9.793785],[4.179410,8.578217,-8.050164,-4.444539,5.795177,9.615417,-4.845774,-0.236328,-9.661487,5.116528,7.599339,-9.361272,8.349163,-1.493439,-0.619798,6.107499,5.404370,1.039332,-2.104805,8.709267,-2.079146,-6.660816,-6.892726,5.330100,-2.961883,-7.091041,2.655400,5.270839,0.659546,8.270601,4.505458,8.806840,-9.661514,-4.723048,7.757531,-3.111292,-7.062519,-1.336491,2.936329,-5.943686,2.507206,-5.540006,8.126092,6.092529,4.660276,-2.543104,9.826132,0.283670,4.389993,8.153929,6.719381,-6.605493],[-0.999837,-7.136715,-6.981508,9.016848,-5.529751,-0.011361,-9.337535,-0.230636,4.806569,-0.780331,-3.630223,-1.373031,-6.635708,-6.488541,3.469422,1.797019,-6.906118,2.596511,-1.473252,-4.088375,-4.090482,-8.424505,-5.055123,3.597023,-7.964514,5.906833,4.111827,-9.059894,5.266642,-4.785816,5.091464,-6.530278,1.898279,-4.831551,1.658267,-6.124721,7.099773,-1.308889,5.456074,4.010999,1.412405,0.108999,-4.236300,-9.196618,-0.041244,-7.918840,6.613949,8.002959,7.437574,-2.749535,-4.608617,-0.960113],[-7.317690,-8.516834,-7.624882,0.370639,-4.738639,7.112848,-0.892612,-0.449317,-8.163208,-9.230366,3.906943,-9.676746,5.879022,7.200646,-3.395553,5.677701,-3.235149,-9.210470,-1.379394,7.080058,-1.710318,4.271336,-2.380502,-0.838995,4.940711,-1.678525,-8.124160,4.548188,-6.446652,-4.140819,-5.524924,2.314865,1.884294,-0.039905,7.069062,-4.156445,-5.651636,-3.161512,6.626352,9.619892,1.579823,6.848430,-8.450464,4.762211,-0.013521,0.137578,1.696955,6.302008,4.242140,-4.759338,5.994019,-2.786770],[9.351119,3.902296,4.582010,2.412648,-4.388640,1.224185,8.837254,1.581677,-6.050377,-6.670610,3.557321,-3.848095,1.123909,5.077239,2.680842,-2.902235,-5.163269,7.783601,-5.083114,-4.715887,6.352084,-4.929305,-6.899901,-6.007929,-5.155085,3.084342,1.153854,-2.499723,-3.779244,1.659773,-5.079376,-9.035132,2.869400,-6.817694,-6.254622,7.196661,-7.769981,-4.940751,1.924226,3.245079,-2.795051,-4.114940,-1.218451,-8.174181,-1.337516,-9.439265,-7.584151,-3.046360,-8.353535,3.122810,1.154543,7.721055],[-8.030158,5.274234,-7.857673,-3.062187,5.546108,-0.626415,3.644890,-1.900520,5.058726,-1.560818,-5.360016,5.503870,-0.060735,7.836727,1.306160,0.278471,6.066340,-1.822502,-5.286669,-7.084788,4.538916,2.336981,6.206191,-5.376243,6.207808,-6.038631,3.394409,-7.281784,7.041573,-8.962010,-3.473393,-1.907051,-4.198616,-3.953623,8.212546,-9.737510,8.532022,-6.229194,2.694674,6.346767,6.248395,-9.727358,-5.385243,-4.241186,1.120646,-2.316503,6.707857,5.468806,0.439771,-0.871402,-7.851975,9.032722],[-0.679545,-5.284460,8.450391,-6.370657,-6.235925,1.045970,-6.289977,-4.972400,-5.175191,2.815030,5.893131,3.489761,-8.839675,-8.934209,-5.728305,8.288619,6.757078,7.148745,8.499626,2.764265,-3.027660,-5.349455,3.527663,-1.954861,-0.349488,4.938220,-2.762110,-2.111947,-0.316555,0.854614,9.017404,4.103388,0.431350,8.358744,4.760238,-5.941237,4.661644,-8.620702,3.383760,0.763501,-5.795814,2.278806,6.343859,-2.152536,-6.421113,9.287420,-5.605105,-2.072089,1.202283,-3.242580,3.023932,-8.794550],[-8.578309,6.732322,-0.957149,7.926123,2.315395,5.770905,-1.162576,-6.285690,-5.167163,-0.284564,-0.770990,-4.054837,-0.079706,-0.579071,4.375622,4.649987,2.748936,1.717217,2.605408,0.455086,8.756256,6.244257,-2.425274,0.877677,5.814230,6.786032,-5.159072,9.591045,-4.986550,-1.293308,4.932181,0.593457,-2.755273,-7.480674,9.673177,-0.928075,-0.136021,0.285708,3.890464,7.563035,-9.816350,6.716421,-1.954052,-7.980338,-9.409203,-4.237013,-7.237222,7.142553,-7.531156,-5.203640,2.240493,0.324083],[-5.409246,-2.393856,0.903999,8.754359,-5.511056,-8.458479,8.571471,9.017584,-4.813204,0.654376,-4.017961,4.700946,-5.386629,-2.576337,2.852917,-8.465065,-1.565551,2.793826,-9.224473,-3.057200,8.815345,-3.943219,1.985555,9.255592,9.993963,-0.583833,6.798237,2.121767,7.795964,4.072056,6.354631,-4.975864,-5.459272,1.454091,-7.107757,6.626844,-8.217164,4.347742,1.047612,1.960671,4.810617,-6.523804,-9.579417,8.910427,-1.106566,-6.153926,-9.773851,1.849067,-3.649931,0.068842,-6.368893,3.930289],[-4.329779,-4.368636,8.148217,4.259504,9.889904,2.108355,5.561890,5.888080,6.131832,8.309705,5.579483,-3.065044,4.606828,-3.789961,-7.563666,-8.451638,-4.657054,-9.852696,6.344526,2.443646,-2.316948,-5.787587,9.550660,9.227315,6.508557,-4.721383,9.957405,-0.668120,-7.497377,2.266301,-3.059737,-6.036036,-0.544993,-8.435575,-2.528241,0.186938,-3.444738,-2.003583,8.086721,-0.299182,-2.534836,8.022012,4.340112,-8.207587,8.559310,-1.292721,2.460654,-6.419391,-5.310835,7.714177,-2.402620,4.432832],[-5.125321,-3.427216,1.384175,-7.749410,0.443463,9.114698,-8.060511,2.186589,6.372177,3.916798,-5.276234,8.857633,8.906370,1.895209,8.866520,-7.337707,-2.514317,2.720636,-5.835007,5.816105,-1.496819,-9.182216,-0.512386,-8.693728,-4.160664,-4.081753,7.999024,5.327565,4.400327,0.736756,1.379003,-5.037881,-0.553417,3.635601,-9.110304,6.325236,0.165351,9.046729,7.088531,-3.734412,8.703401,-0.775220,-0.026440,8.164326,-6.660599,-4.987755,0.402335,3.398880,-2.888169,-1.747766,7.727139,6.573795],[0.573403,-9.791514,-2.203983,-0.176497,8.252321,6.731740,-3.564009,0.640054,2.783640,-4.156808,3.976396,-5.812954,-6.122292,-0.077334,-5.783485,7.113358,-3.937022,-7.803657,-3.156048,-0.224371,5.545719,9.545329,5.062042,-3.025129,-0.423924,2.793943,-9.753070,8.336063,-1.521978,-7.382355,-7.501084,-0.205912,2.492293,1.443093,-1.659080,-7.586949,7.365473,5.829172,-1.803731,2.385070,2.555338,-8.115159,9.493696,-4.905806,4.101971,-4.169695,-4.429423,-9.997864,-1.704064,2.929610,-8.656153,-8.636826],[5.052296,-0.522325,-8.814115,-5.642660,-2.032389,5.629264,6.682239,6.826596,5.891789,-8.026186,-6.962546,9.214301,-1.234585,9.241983,-0.951831,9.181570,-6.962537,-5.090879,3.393260,-5.024558,2.134620,2.559173,2.400682,-6.600535,2.213191,3.797742,0.542801,-3.510865,0.786311,-5.686374,2.709427,-3.419732,7.152935,-7.500565,8.142763,-4.008911,2.323887,2.653309,-6.870971,1.681335,-6.719209,-5.370048,6.433672,-5.175731,-9.378534,5.086918,-0.660075,7.530736,-0.315679,-1.943669,-3.401464,-6.772694],[7.622270,2.796113,0.286760,0.312552,3.283143,-5.375104,-5.721233,4.733842,6.791430,-6.829671,-7.007358,-4.749199,-5.686552,4.087359,8.946972,-8.083590,4.043394,0.451513,-5.829260,8.857759,-6.343216,-6.657396,-5.227040,5.957644,-1.233543,2.288047,-5.271805,4.976123,-5.875572,3.126265,7.342380,-7.030875,3.538976,9.876280,-7.142161,7.160534,-5.315929,0.475514,-5.514895,9.047923,6.772496,0.571474,-9.902143,-5.154792,6.787167,-3.544577,3.754845,-4.433979,-5.395047,-0.093865,-3.091518,4.965712],[4.767396,5.353368,-1.522462,9.969996,2.780114,3.756793,6.633913,-3.837393,9.735009,9.608311,-0.527133,-2.467283,-2.002252,9.239008,-2.107303,0.618711,-5.937718,5.494046,4.234196,-5.366667,-2.461408,-8.095570,9.948509,-5.798504,-6.687120,3.944817,8.451155,1.795323,-6.817475,-7.139789,-8.527580,-9.806274,-1.426610,9.310349,-1.134503,-3.997956,3.180355,5.397773,-4.217160,4.546703,2.821013,0.150067,-3.325312,-5.367691,6.946740,-8.790767,2.667210,-2.099417,-9.124678,3.397359,3.839984,1.752886],[5.519569,6.107973,5.358110,-5.447337,4.493531,2.475507,-1.619701,-3.119898,0.799900,8.485172,-5.279477,-2.753566,9.929725,7.040899,-9.530144,5.365321,2.416959,3.881866,-5.973270,-1.267836,8.515139,7.979619,9.398729,6.816184,-3.446330,9.274503,3.991223,-4.700267,-6.014175,4.337929,-0.208207,-0.337153,-5.975781,-6.643189,7.144672,-1.581630,8.186150,-4.452123,-6.366315,9.229898,4.738849,1.655777,-1.367346,7.388513,2.962024,4.360437,-6.085939,-6.281589,3.425491,6.488443,1.843641,4.765886],[9.376801,3.393697,-0.298466,2.784549,-1.919688,-7.827774,-0.680953,7.013121,-5.371164,7.081652,-5.890418,1.124509,5.053514,-8.743733,9.019840,0.506207,2.498858,-3.594005,9.939001,1.774497,-5.543861,-0.853583,-9.569572,-1.710370,2.905612,9.568148,3.011032,1.156373,6.779703,1.453260,-4.453737,4.632080,-0.426344,5.367112,4.070353,9.715935,-3.105956,-7.984643,4.206765,8.616633,6.715168,-6.811963,-1.110774,7.037358,9.184807,-6.574592,9.571551,7.961969,2.269966,5.592235,-2.620522,-7.445358],[-3.048321,4.378951,7.841628,-9.506870,5.578860,-5.463088,3.135124,9.888245,-1.669670,-1.686827,0.780945,0.732157,-8.814117,-0.696827,1.927457,6.065202,8.689000,0.464246,2.711284,8.830381,-5.123493,-6.558878,5.296424,-3.875129,5.294879,5.804931,9.643588,6.014809,5.738684,-7.860489,-2.507319,0.452227,-7.377333,9.677170,-0.476558,-1.955730,-3.864987,-6.975158,-2.835551,5.797981,0.379179,-5.744769,-4.316030,-8.181126,0.813596,-1.796914,-0.806325,-9.177004,1.406088,9.373163,-0.168926,-4.503241],[-4.046716,4.184831,-9.742113,3.463863,5.302658,-2.073430,1.669985,-1.800997,8.444896,2.154445,-1.630187,-7.211911,4.954300,8.749192,3.080810,-9.639764,5.258762,-4.813000,-7.912755,5.391730,1.601968,8.532238,2.300005,-9.871725,3.616751,-0.568365,5.227919,4.187807,-7.364079,-9.564345,-3.935460,-3.656496,-7.040139,4.034740,-4.750232,2.886431,-1.189919,-8.135114,-5.321214,-6.791260,-7.553894,9.419260,8.532547,-9.456998,0.462099,3.351539,7.754636,4.438977,-2.881754,7.572765,-6.972548,1.206523]], dtype = "float32")#candidate|4889|(22, 52)|const|float32
call_4886 = relay.TupleGetItem(func_3697_call(relay.reshape(var_4887.astype('float64'), [4, 13, 15]), relay.reshape(const_4888.astype('uint16'), [4, 40]), relay.reshape(const_4889.astype('float32'), [1144,]), ), 8)
call_4890 = relay.TupleGetItem(func_3702_call(relay.reshape(var_4887.astype('float64'), [4, 13, 15]), relay.reshape(const_4888.astype('uint16'), [4, 40]), relay.reshape(const_4889.astype('float32'), [1144,]), ), 8)
output = relay.Tuple([call_4856,call_4871,const_4872,call_4886,var_4887,const_4888,const_4889,])
output2 = relay.Tuple([call_4857,call_4873,const_4872,call_4890,var_4887,const_4888,const_4889,])
func_4896 = relay.Function([var_4887,], output)
mod['func_4896'] = func_4896
mod = relay.transform.InferType()(mod)
var_4897 = relay.var("var_4897", dtype = "float64", shape = (780,))#candidate|4897|(780,)|var|float64
output = func_4896(var_4897)
func_4898 = relay.Function([var_4897], output)
mutated_mod['func_4898'] = func_4898
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4180_call = mutated_mod.get_global_var('func_4180')
call_4949 = relay.TupleGetItem(func_4179_call(), 0)
call_4950 = relay.TupleGetItem(func_4180_call(), 0)
output = relay.Tuple([call_4949,])
output2 = relay.Tuple([call_4950,])
func_4951 = relay.Function([], output)
mod['func_4951'] = func_4951
mod = relay.transform.InferType()(mod)
output = func_4951()
func_4952 = relay.Function([], output)
mutated_mod['func_4952'] = func_4952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_4953 = relay.TupleGetItem(func_2258_call(), 2)
call_4954 = relay.TupleGetItem(func_2260_call(), 2)
var_4978 = relay.var("var_4978", dtype = "int16", shape = (55, 10))#candidate|4978|(55, 10)|var|int16
bop_4979 = relay.bitwise_and(call_4953.astype('uint8'), relay.reshape(var_4978.astype('uint8'), relay.shape_of(call_4953))) # shape=(55, 10)
bop_4982 = relay.bitwise_and(call_4954.astype('uint8'), relay.reshape(var_4978.astype('uint8'), relay.shape_of(call_4954))) # shape=(55, 10)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
var_4984 = relay.var("var_4984", dtype = "uint16", shape = (160,))#candidate|4984|(160,)|var|uint16
const_4985 = relay.const([5,3,-4,-3,8,9,6,-7,-8,-5,-6,-1,10,10,-6,1,-7,-9,1,-4,-1,6,2,4,-10,10,-7,-7,-1,-2,-10,-8,9,5,-1,-10,-6,10,2,8,2,-10,-1,9,-5,-8,-3,-9,-6,-2,-7,-9,-1,-9,-2,6,6,-6,-4,8,-3,-2,3,-9,-8,-5,-5,8,-5,8,-5,-3,10,-8,4,4,10,-4,-9,-1,-3,-4,1,4,-10,-3,-7,-5,-8,3,-9,-9,-1,4,-7,-9,-1,9,-2,10,-7,6,-1,-3,6,-1,1,5,-5,3,4,-2,-2,7,-4,-7,-1,-5,6,3,3,6,-6,-5,-8,4,-10,-6,-9,-6,1,-6,-6,5,10,-3,-2,7,10,2,2,-1,-4,5,-2,-6,6,-5,4,6,8,7,10,1,-7,1,10,-2,-1,-8,9,5,-8,8,10,6,-5,9,6,-7,-4,-2,10,-9,-10,3,-2,5,-9,-2,8,7,10,9,10,8,-6,-8,-6,-9,-5,8,-1,5,-5,-6,-4,6,-3,-9,3,-6,-8,7,-3,-10,9,4,-10,-9,-6,8,10,-4,-1,5,-10,4,7,-2,8,-7,-4,6,-9,-9,-1,-5,-2,-5,1,8,-3,9,-4,8,-7,-8,5,-4], dtype = "uint8")#candidate|4985|(240,)|const|uint8
call_4983 = relay.TupleGetItem(func_2306_call(relay.reshape(var_4984.astype('uint16'), [4, 40]), relay.reshape(const_4985.astype('uint8'), [240,]), ), 2)
call_4986 = relay.TupleGetItem(func_2310_call(relay.reshape(var_4984.astype('uint16'), [4, 40]), relay.reshape(const_4985.astype('uint8'), [240,]), ), 2)
output = relay.Tuple([bop_4979,call_4983,var_4984,const_4985,])
output2 = relay.Tuple([bop_4982,call_4986,var_4984,const_4985,])
func_4998 = relay.Function([var_4978,var_4984,], output)
mod['func_4998'] = func_4998
mod = relay.transform.InferType()(mod)
mutated_mod['func_4998'] = func_4998
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4998_call = mutated_mod.get_global_var('func_4998')
var_5000 = relay.var("var_5000", dtype = "int16", shape = (55, 10))#candidate|5000|(55, 10)|var|int16
var_5001 = relay.var("var_5001", dtype = "uint16", shape = (160,))#candidate|5001|(160,)|var|uint16
call_4999 = func_4998_call(var_5000,var_5001,)
output = call_4999
func_5002 = relay.Function([var_5000,var_5001,], output)
mutated_mod['func_5002'] = func_5002
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3863_call = mod.get_global_var('func_3863')
func_3864_call = mutated_mod.get_global_var('func_3864')
call_5009 = func_3863_call()
call_5010 = func_3863_call()
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
const_5019 = relay.const([-2,-9,1,-10,-2,7,-3,-10,-7,-2,-10,6,10,-7,5,-10,-6,-6,9,-5,9,5,-10,-2,-1,1,1,-9,9,7,5,-1,-8,-9,10,-10,-7,3,-9,6,1,3,5,2,9,8,-9,-6,-3,-6,10,4,-8,-5,-3,-10,10,-8,-5,-9,-2,-10,-5,9,-1,2,8,7,4,6,-4,-6,8,-1,6,9,8,-10,4,-10,-4,-6,-10,-10,-4,-4,1,-3,3,3,-6,1,4,5,-3,-2,-9,9,1,4,6,-6,-7,7,4,3,-6,4,-8,-7,5,-7,-10,-4,10,10,7,4,-6,-5,-4,-2,3,-8,4,1,7,-4,6,9,7,1,-3,9,7,4,2,-2,10,5,7,3,-4,10,8,-6,-7,10,-2,-3,-3,-10,1,-2,-4,-6,3,-5,-10,-8], dtype = "uint16")#candidate|5019|(160,)|const|uint16
call_5018 = relay.TupleGetItem(func_2853_call(relay.reshape(const_5019.astype('uint16'), [160,])), 1)
call_5020 = relay.TupleGetItem(func_2856_call(relay.reshape(const_5019.astype('uint16'), [160,])), 1)
func_963_call = mod.get_global_var('func_963')
func_967_call = mutated_mod.get_global_var('func_967')
var_5042 = relay.var("var_5042", dtype = "int16", shape = (550,))#candidate|5042|(550,)|var|int16
call_5041 = relay.TupleGetItem(func_963_call(relay.reshape(var_5042.astype('int16'), [10, 11, 5]), relay.reshape(var_5042.astype('int16'), [10, 11, 5]), relay.reshape(call_5018.astype('uint8'), [900,]), ), 0)
call_5043 = relay.TupleGetItem(func_967_call(relay.reshape(var_5042.astype('int16'), [10, 11, 5]), relay.reshape(var_5042.astype('int16'), [10, 11, 5]), relay.reshape(call_5018.astype('uint8'), [900,]), ), 0)
output = relay.Tuple([call_5009,call_5018,const_5019,call_5041,var_5042,])
output2 = relay.Tuple([call_5010,call_5020,const_5019,call_5043,var_5042,])
func_5047 = relay.Function([var_5042,], output)
mod['func_5047'] = func_5047
mod = relay.transform.InferType()(mod)
mutated_mod['func_5047'] = func_5047
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5048 = relay.var("var_5048", dtype = "int16", shape = (550,))#candidate|5048|(550,)|var|int16
func_5047_call = mutated_mod.get_global_var('func_5047')
call_5049 = func_5047_call(var_5048)
output = call_5049
func_5050 = relay.Function([var_5048], output)
mutated_mod['func_5050'] = func_5050
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_5148 = relay.TupleGetItem(func_3037_call(), 0)
call_5149 = relay.TupleGetItem(func_3039_call(), 0)
func_4700_call = mod.get_global_var('func_4700')
func_4702_call = mutated_mod.get_global_var('func_4702')
const_5171 = relay.const([[-7.420790,9.043973,0.150239,-1.527430,-7.042691,-9.285507,-5.666555,-2.343376,-3.101934,-2.530400,8.119873,-5.630124,-4.429132,-8.808884,-2.315692,-3.047214,-6.448536,-1.642367,4.125179,2.176511,-0.079909,-4.248682,7.543771,1.128035,3.737472,-6.969671,0.824696,4.462635,-2.436340,2.633455,4.897056,3.307919,7.445518,0.959726,-3.700100,-0.292168,-0.112608,8.641609,9.569544,4.668983,-1.120539,-2.204343,3.798101,7.647457,4.496460,-5.623835,4.100847,4.441236,7.563643,5.781444,5.654602,-2.280932,-5.059008,3.245683,8.722712,-9.114341,-8.733380,2.919230,1.113513,3.772751,0.730224,4.471825,5.050780,2.889003,0.741167,-2.209290,-9.521678,-8.659702,-9.130171,6.152595,-0.398318,0.884578,-6.309777,-5.777801,-9.071804,-8.283466,-4.552320,-8.362545,-6.575610,-0.875539,-6.225905,-7.268788,-2.575504,6.014326,-3.043497,-7.922744,8.985474,0.333150,-1.747796,1.599898,1.180084,1.042808,1.239346,4.557112,8.091186,1.713331,-8.091990,7.934253,-9.710654,5.972309,1.668455,0.628789,-2.990463,-1.469218],[5.365247,9.644653,3.894069,-2.360048,-7.107456,1.178973,1.891948,9.084052,-5.425383,-1.152722,4.425463,-1.875467,1.847637,8.530088,-7.305730,6.912253,0.205909,8.348479,3.220920,4.646344,0.965850,3.328551,0.120791,8.076990,4.160445,-9.374556,1.211424,8.005510,6.598112,-1.446064,-1.743683,8.865880,-3.973757,7.010915,-2.691069,0.342730,0.237533,-5.594585,5.948140,-1.794184,-6.175872,-1.799792,3.897985,-7.613807,-6.517781,0.257618,-8.109193,4.668216,8.086027,-5.247633,0.469529,4.046442,3.485323,-3.976683,4.670575,3.077222,9.978258,-4.557131,-8.152040,3.981547,7.430114,6.529040,3.446165,5.851699,4.723410,-1.959646,2.809267,9.157762,-2.767296,-6.209713,0.723701,6.247550,8.150673,1.465700,-5.106352,-5.196414,4.099378,-4.840352,-0.738588,7.613256,2.616254,1.080003,-6.430068,5.951146,-0.005201,-7.037415,-2.684414,-6.231907,1.056917,7.994053,5.526661,-9.133347,5.162505,1.202844,-7.840844,-0.353895,0.703756,-0.498569,-2.569712,-2.135678,3.755759,-6.810464,-1.213002,2.389441],[2.242417,2.709215,4.857674,0.692392,-1.870736,-9.642689,-7.618015,6.310259,-7.656318,7.624381,5.851648,0.171020,-4.390652,-0.152512,4.965452,6.455623,-4.005479,2.140058,-0.885395,3.479148,8.327330,9.466195,-2.610917,3.748644,-8.093258,6.746560,-6.031793,0.187693,7.215581,4.244225,9.568144,9.732243,-6.028164,5.707392,1.438651,9.410934,0.489838,-0.985064,9.207560,-6.833642,-1.037422,-3.609077,8.221906,-3.051476,4.529857,4.152377,-8.533596,0.142266,9.501604,5.641795,9.617202,8.141101,2.191836,-7.130233,-5.876288,-6.550612,-1.859177,6.912853,-2.310389,-5.212410,-5.216228,3.930699,-1.092486,6.503465,5.703201,7.408399,0.929840,6.851652,-8.573049,-8.464905,3.356479,-2.546593,1.046778,7.244015,6.289621,2.979942,0.092853,-5.121529,9.543454,7.308462,-3.351564,6.394770,3.735190,-0.699921,-3.148348,-8.981233,0.716929,-5.163712,7.121746,3.325297,6.487652,-0.718084,6.659466,6.321249,-6.661441,7.329261,6.790196,-7.583929,-8.528903,-5.059396,2.338955,-8.337572,5.432117,8.965893],[-3.156288,0.065771,-0.410645,-3.186084,-1.292901,-5.050333,-3.649906,5.639967,0.202467,-6.474772,-0.726917,-1.838645,-6.384675,9.119204,7.610614,-4.473091,8.874121,-4.002582,6.515179,9.450908,-8.954978,-9.565313,9.518138,-0.355079,8.968060,-2.746381,7.678882,-7.193455,8.008499,-6.719821,-8.102896,-8.438986,-2.765798,0.692694,0.413794,-1.872369,5.971910,-8.480981,-5.778729,4.145409,-2.371540,-5.406733,-7.413820,3.814140,-0.643860,7.886200,-2.138559,-9.769835,-9.429361,-6.074525,-4.471680,3.481316,7.646830,-2.673396,-5.659310,8.639191,-6.650161,-6.000509,-1.707952,-4.674454,6.420436,-9.148703,-0.917170,2.544137,-0.991634,-7.884270,-8.051400,-1.659398,-3.559926,5.317607,-5.794976,6.419333,-2.919793,-9.886810,6.409707,6.005089,-8.630159,-7.012261,-3.648699,0.894204,8.859791,8.788492,1.106255,0.288529,7.701158,-2.785417,7.117997,-9.234579,8.796178,5.445227,1.136669,-8.643587,-0.213304,-4.610840,-2.839195,0.764790,-2.306063,4.874723,1.388672,1.126615,2.220361,-8.900983,4.432490,2.744094],[2.826242,3.964397,1.763864,-0.418004,-3.739725,2.188429,-4.336645,-9.930953,3.632413,-9.049529,-2.549837,1.803448,5.247070,-0.187170,-0.670055,-5.253191,-8.561119,8.747056,5.871336,4.955820,-0.107827,-4.081716,-4.998311,7.952799,-0.879100,-4.967005,5.161449,-9.211505,4.016355,6.170238,-7.217609,-7.242232,0.388363,4.157231,9.887039,-7.129718,6.487097,9.331554,8.063414,5.144498,-8.503421,-3.197010,-7.308168,8.323133,-9.132632,4.829634,-3.427144,7.762368,7.092722,-5.869922,-7.963260,3.999760,6.249796,7.423808,7.488552,-3.895011,-7.030741,-5.686094,0.302404,-6.127151,-2.696607,4.110932,8.372496,0.738122,2.010767,-7.083633,-8.710839,6.551169,-9.701727,6.052160,3.647875,0.169446,-0.834413,-7.443158,7.229968,1.894597,9.496373,-1.639511,-5.490133,4.214061,8.179514,4.544082,0.687712,8.799824,8.460326,-3.018815,-5.467822,-1.576891,9.522951,1.156517,9.328373,-7.922100,7.687325,-7.231764,-4.249567,4.290783,1.415114,-3.574139,3.356503,-1.471288,-7.631473,6.701495,-6.072549,7.528089],[9.137960,7.910854,-6.703675,4.557153,-5.330863,2.012494,8.476772,6.930679,9.897866,-5.871718,9.448885,4.441632,8.624111,2.117401,-5.544330,2.115513,8.237821,-0.959205,-2.880276,5.166329,9.217323,-4.336033,1.976676,0.895748,1.341136,8.689759,-5.229259,-8.165368,4.816767,-3.413866,-2.876167,3.468704,-1.546268,1.476286,8.085668,2.347681,8.131505,-2.174272,0.780906,7.725852,0.024324,-7.265688,5.084992,9.397256,-4.253607,-8.521505,5.144057,-7.599293,-6.925794,-7.871560,-7.536880,-6.916414,3.020331,-4.724822,6.791118,1.627145,-4.910681,-2.534662,-6.714353,-7.259865,9.965769,-0.761825,7.535798,-1.184195,-0.064680,1.970994,8.064374,8.597143,-2.516798,5.881248,1.572676,-8.477701,-8.932643,-9.704479,-6.259823,4.062987,3.968440,-5.835782,-6.023276,-1.265445,-0.798896,1.938340,-4.770024,-1.540562,-1.787927,-5.287061,9.543148,9.249038,1.155169,-1.598568,9.594275,-7.731163,3.389217,9.650174,1.160819,8.320772,3.369957,3.741336,1.342401,1.135730,-4.509516,8.782575,-9.052448,0.827282],[-8.415202,-5.692837,-4.927231,7.371364,0.220136,7.286660,-3.322940,-7.365144,-6.493428,2.090729,-6.824777,1.789036,-3.092999,-2.225835,-8.385332,1.861338,5.148079,-0.407846,-8.431507,-0.727621,-3.465804,-1.897523,-0.408252,-1.621918,7.799893,-5.169244,-1.995666,-2.204918,-3.456786,-5.781743,-0.676301,-9.464279,3.752787,2.283201,-9.513057,2.324868,-4.916249,0.511029,3.474229,3.055397,-9.177787,-1.326062,3.013912,5.106511,7.973903,-3.650863,1.925153,9.367315,8.411163,-6.884100,-0.364263,-4.091084,-7.532511,5.999281,-4.821964,-5.512056,-8.809511,3.584452,1.449265,-0.646896,-5.656296,-3.753723,1.216938,-7.409112,4.775201,-1.971293,1.840825,-4.063640,-4.800734,2.815181,-9.991686,2.717080,-9.526807,-2.560565,-4.697194,-1.421384,-2.388299,-4.226364,-5.193086,-4.890325,-1.197793,-8.565450,-5.669381,4.716869,-4.459194,1.860295,-3.135274,-7.442282,4.472607,-7.641409,0.103345,8.752324,7.877127,5.807597,-0.567251,1.407508,-6.607875,-2.137594,-5.712066,0.088015,-2.008871,2.723421,-0.711454,0.613054],[2.061025,9.960207,-7.645074,-4.996495,-1.850608,-0.079870,3.158613,8.970043,4.079545,-3.447306,5.128229,-7.923343,-9.143313,-0.895048,8.946722,7.126971,7.139437,7.074960,5.538767,-9.333813,7.386904,-9.986199,-2.683833,-3.399046,-6.459729,-5.416031,9.587475,3.850178,-2.006716,-8.447062,-7.213642,-8.823779,-8.324791,7.882484,7.922723,8.303012,-8.922896,-1.688256,-6.618206,-6.205878,1.816751,-2.867739,-5.824721,9.928239,-1.003263,-5.561892,9.040804,-4.118972,1.599307,6.198413,6.166559,3.377478,-5.237820,9.392848,2.729548,4.634731,-3.039883,4.920686,-9.427925,4.468976,-8.356659,0.443362,4.691656,6.215561,9.508681,1.434859,3.230049,0.592458,-7.644977,-1.841398,-7.605464,3.436346,-1.400527,7.467414,3.495942,0.317013,4.676743,3.985669,-7.662702,6.662425,0.020017,0.896325,3.710690,-0.675019,9.948332,5.870909,7.707245,-3.745847,2.116513,-5.661353,-2.559986,-8.092452,-9.349924,-5.204676,-3.159884,-8.857637,0.053179,5.198891,-1.898040,-0.943318,-2.514812,-1.844751,-4.228763,9.801715],[-0.183875,-0.113966,9.429490,-3.984272,-8.844007,3.636983,-9.076403,-3.195392,6.359400,1.254728,-6.227875,2.102634,6.437051,-4.570986,-0.774254,-2.531511,3.720279,8.143747,7.072173,-0.267461,9.698244,0.010607,9.963419,0.304411,5.221279,0.882509,-1.539746,-8.525432,-9.942966,-4.920181,7.566091,9.411257,4.242170,9.798189,0.191555,3.346773,5.402305,-9.384215,-7.838113,4.311427,-3.868070,1.696979,7.229118,7.578833,-0.148966,-9.201043,-3.968623,-8.925356,9.364090,-2.302757,9.404797,5.295964,-0.791820,-1.895956,3.537800,-6.437013,-7.832156,-0.954248,-2.919546,2.705795,3.787685,-1.233642,3.957465,-7.841862,-0.813966,7.060050,-4.344354,8.453493,3.226851,6.939716,4.167532,-7.601988,-4.237001,-2.632458,-5.718666,7.426316,2.673602,8.094202,8.761751,3.134663,8.306191,9.896367,9.324717,-2.959292,-4.085197,8.300139,-6.717682,8.376376,4.773806,6.111465,1.750394,0.255187,-5.316769,-2.069781,-8.074689,3.963770,-3.519394,0.017297,1.253508,-3.343749,-7.148686,-3.298476,-7.953339,4.724263],[3.001986,5.090540,4.856864,1.833670,-3.545787,7.694980,-0.461946,-2.677460,-4.641170,-6.269428,7.054688,6.828269,3.525707,-7.069867,-5.017478,8.086197,-2.976988,-1.326549,4.634871,7.797460,3.049541,7.271172,-4.462964,4.946405,5.964584,-9.855603,-2.135409,-5.062034,0.610936,0.993624,-5.142248,7.554579,-8.671163,2.357499,-3.056508,9.412995,6.138775,8.492861,-8.852873,-0.040860,-6.028774,-8.704188,4.098179,-9.565216,-3.160648,-8.325982,-7.928485,8.952494,8.558895,0.547475,-2.553429,-0.424663,5.464044,7.002530,-5.669502,6.686258,-0.299452,9.957414,3.808595,6.589547,-5.353920,-9.908994,5.653255,0.069303,-9.861935,-3.729527,1.776708,0.561768,-3.748033,-6.063383,-7.720409,-5.703339,6.091146,-2.429119,9.848227,-6.199030,5.155405,4.626109,2.439874,-7.128587,9.310178,-7.938816,3.202337,4.303738,-1.555438,-3.616871,2.128238,7.616927,-8.692400,5.744957,3.032434,2.091904,6.273486,-4.453150,8.557113,-6.106617,7.905538,5.899076,-7.449356,4.514336,-6.438340,-8.064271,-2.901577,4.343284],[9.637023,-1.542895,-5.666162,-6.439892,-0.144556,-6.679678,7.238785,-6.475274,2.531060,8.961858,-1.071131,-6.482296,-6.509595,6.628115,9.586930,6.845489,4.963553,5.253149,-0.198918,2.057869,-3.524099,-0.736606,3.666686,4.156723,2.082167,-3.382909,3.087260,-1.756828,5.023430,-4.983151,-6.577288,-7.697900,2.084184,-1.129816,8.621711,2.367765,6.958225,8.674614,-7.549571,-4.436003,1.072103,-3.493992,6.518899,-4.397352,-5.939371,6.423693,-3.742983,-3.620351,-6.654063,2.678207,4.549048,4.631545,2.499277,1.844542,6.705855,8.946608,-0.180579,5.547298,-1.674304,4.083424,-0.470051,-9.549142,-5.253931,7.477042,7.744295,-0.201745,3.273362,1.871401,-3.856566,-9.822820,-7.418029,-3.305524,8.184127,1.838842,1.944353,-4.733173,6.379630,-2.777601,-6.582779,-5.112354,2.518164,-2.157407,1.748868,6.227687,-9.495274,5.874933,5.666307,4.580687,-6.874931,-3.278351,4.391980,6.636656,6.698309,-1.622854,2.860152,6.758222,3.046135,2.855666,-7.627113,-9.627419,4.155429,7.353986,9.079971,3.005633]], dtype = "float32")#candidate|5171|(11, 104)|const|float32
call_5170 = relay.TupleGetItem(func_4700_call(relay.reshape(const_5171.astype('float32'), [286, 4])), 0)
call_5172 = relay.TupleGetItem(func_4702_call(relay.reshape(const_5171.astype('float32'), [286, 4])), 0)
const_5177 = relay.const([[-9,4,-7,-2,8,5],[7,-9,-1,1,6,1],[8,-4,-7,7,-2,-5],[9,1,5,7,4,-5],[6,3,9,5,-6,-4],[-6,8,-1,-6,-2,-10],[-7,-1,4,5,1,1],[2,7,4,2,2,7],[-6,-6,2,-7,2,7],[5,5,10,4,-3,-3],[-2,-7,6,10,7,-10],[9,-9,7,-8,-9,-8],[10,-10,-5,-9,9,-1],[-10,-7,-4,-9,8,5],[-3,8,5,-1,-8,-9],[-6,-9,-4,10,-1,4],[-7,2,10,-1,-2,7],[4,4,10,4,10,1],[-6,-2,9,4,-9,-1],[6,2,-10,-5,6,6],[-1,-2,-6,8,3,10],[-6,-7,-3,-3,-10,-8],[5,-7,-3,9,-5,-8],[3,4,-6,7,9,6],[-4,-10,8,-7,3,6],[-6,1,-5,4,-5,-5],[1,4,7,1,-10,8],[-10,1,-10,9,-3,9],[1,7,10,-8,3,10],[-1,3,-3,-9,9,-4],[8,-5,4,-10,-7,-1],[-8,-9,-1,3,1,5],[-9,7,-6,-7,2,7],[5,-1,6,-1,-2,-7],[1,-9,6,-8,-8,-4],[-4,1,2,6,-7,10],[-10,8,-3,-9,5,-9],[-1,9,-2,6,-4,5],[-8,5,-7,-1,-8,-1],[5,5,5,2,-1,-7],[-6,10,-3,7,-4,-7],[9,-8,-6,-8,-6,-3],[-7,8,8,2,10,3],[8,3,2,3,-9,-6],[9,-7,7,7,-5,-3],[-2,-4,-8,6,-4,-8],[-10,-8,3,5,8,-8],[-10,-10,-1,7,-9,-8],[9,-4,4,9,-4,-4],[-1,-2,8,5,-6,6],[-9,3,-5,6,6,7],[4,5,-5,7,-7,-6],[-9,-7,-7,2,-6,-5],[-5,-5,10,2,-9,2],[-5,9,-7,9,5,1],[-8,9,8,-5,2,-6],[3,6,5,4,-6,4],[-8,-1,8,7,5,-2],[-8,7,-8,-4,-3,2],[8,-7,-1,-10,-1,-3],[3,7,-6,2,-5,-3],[4,-5,-8,2,-7,8],[8,-8,-9,2,-1,-9],[-7,10,-9,-6,-10,7],[-9,4,8,3,-2,-6],[4,-10,-6,-1,-9,6],[3,9,6,1,-5,-1],[-7,-8,7,-9,-2,5],[9,3,-6,3,3,-5],[10,-4,1,7,-2,-8],[-10,2,-5,2,-5,-1],[5,2,-8,7,-3,4],[-8,3,-7,-1,-7,3],[-1,7,1,9,-1,-4],[-8,-8,3,6,-4,-1],[1,10,-6,1,7,5],[5,3,-7,-9,-1,-7]], dtype = "uint64")#candidate|5177|(77, 6)|const|uint64
bop_5178 = relay.power(call_5170.astype('float32'), relay.reshape(const_5177.astype('float32'), relay.shape_of(call_5170))) # shape=(77, 6)
bop_5181 = relay.power(call_5172.astype('float32'), relay.reshape(const_5177.astype('float32'), relay.shape_of(call_5172))) # shape=(77, 6)
output = relay.Tuple([call_5148,const_5171,bop_5178,])
output2 = relay.Tuple([call_5149,const_5171,bop_5181,])
func_5187 = relay.Function([], output)
mod['func_5187'] = func_5187
mod = relay.transform.InferType()(mod)
output = func_5187()
func_5188 = relay.Function([], output)
mutated_mod['func_5188'] = func_5188
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5187_call = mod.get_global_var('func_5187')
func_5188_call = mutated_mod.get_global_var('func_5188')
call_5213 = relay.TupleGetItem(func_5187_call(), 2)
call_5214 = relay.TupleGetItem(func_5188_call(), 2)
uop_5220 = relay.sqrt(call_5213.astype('float64')) # shape=(77, 6)
uop_5222 = relay.sqrt(call_5214.astype('float64')) # shape=(77, 6)
func_1629_call = mod.get_global_var('func_1629')
func_1632_call = mutated_mod.get_global_var('func_1632')
var_5224 = relay.var("var_5224", dtype = "uint16", shape = (160,))#candidate|5224|(160,)|var|uint16
call_5223 = relay.TupleGetItem(func_1629_call(relay.reshape(var_5224.astype('uint16'), [2, 5, 16])), 0)
call_5225 = relay.TupleGetItem(func_1632_call(relay.reshape(var_5224.astype('uint16'), [2, 5, 16])), 0)
bop_5228 = relay.mod(uop_5220.astype('float32'), relay.reshape(call_5213.astype('float32'), relay.shape_of(uop_5220))) # shape=(77, 6)
bop_5231 = relay.mod(uop_5222.astype('float32'), relay.reshape(call_5214.astype('float32'), relay.shape_of(uop_5222))) # shape=(77, 6)
bop_5240 = relay.add(call_5223.astype('int16'), relay.reshape(var_5224.astype('int16'), relay.shape_of(call_5223))) # shape=(2, 5, 16)
bop_5243 = relay.add(call_5225.astype('int16'), relay.reshape(var_5224.astype('int16'), relay.shape_of(call_5225))) # shape=(2, 5, 16)
bop_5244 = relay.logical_and(uop_5220.astype('bool'), relay.reshape(bop_5228.astype('bool'), relay.shape_of(uop_5220))) # shape=(77, 6)
bop_5247 = relay.logical_and(uop_5222.astype('bool'), relay.reshape(bop_5231.astype('bool'), relay.shape_of(uop_5222))) # shape=(77, 6)
var_5250 = relay.var("var_5250", dtype = "bool", shape = (77, 6))#candidate|5250|(77, 6)|var|bool
bop_5251 = relay.minimum(bop_5244.astype('int8'), relay.reshape(var_5250.astype('int8'), relay.shape_of(bop_5244))) # shape=(77, 6)
bop_5254 = relay.minimum(bop_5247.astype('int8'), relay.reshape(var_5250.astype('int8'), relay.shape_of(bop_5247))) # shape=(77, 6)
output = relay.Tuple([bop_5240,bop_5251,])
output2 = relay.Tuple([bop_5243,bop_5254,])
func_5259 = relay.Function([var_5224,var_5250,], output)
mod['func_5259'] = func_5259
mod = relay.transform.InferType()(mod)
var_5260 = relay.var("var_5260", dtype = "uint16", shape = (160,))#candidate|5260|(160,)|var|uint16
var_5261 = relay.var("var_5261", dtype = "bool", shape = (77, 6))#candidate|5261|(77, 6)|var|bool
output = func_5259(var_5260,var_5261,)
func_5262 = relay.Function([var_5260,var_5261,], output)
mutated_mod['func_5262'] = func_5262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4951_call = mod.get_global_var('func_4951')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_5269 = relay.TupleGetItem(func_4951_call(), 0)
call_5270 = relay.TupleGetItem(func_4952_call(), 0)
output = call_5269
output2 = call_5270
func_5287 = relay.Function([], output)
mod['func_5287'] = func_5287
mod = relay.transform.InferType()(mod)
mutated_mod['func_5287'] = func_5287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5287_call = mutated_mod.get_global_var('func_5287')
call_5288 = func_5287_call()
output = call_5288
func_5289 = relay.Function([], output)
mutated_mod['func_5289'] = func_5289
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4193_call = mutated_mod.get_global_var('func_4193')
call_5340 = relay.TupleGetItem(func_4191_call(), 0)
call_5341 = relay.TupleGetItem(func_4193_call(), 0)
output = relay.Tuple([call_5340,])
output2 = relay.Tuple([call_5341,])
func_5372 = relay.Function([], output)
mod['func_5372'] = func_5372
mod = relay.transform.InferType()(mod)
output = func_5372()
func_5373 = relay.Function([], output)
mutated_mod['func_5373'] = func_5373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_5395 = relay.TupleGetItem(func_2258_call(), 1)
call_5396 = relay.TupleGetItem(func_2260_call(), 1)
var_5406 = relay.var("var_5406", dtype = "int16", shape = (10, 11, 5))#candidate|5406|(10, 11, 5)|var|int16
bop_5407 = relay.maximum(call_5395.astype('int16'), relay.reshape(var_5406.astype('int16'), relay.shape_of(call_5395))) # shape=(10, 11, 5)
bop_5410 = relay.maximum(call_5396.astype('int16'), relay.reshape(var_5406.astype('int16'), relay.shape_of(call_5396))) # shape=(10, 11, 5)
output = relay.Tuple([bop_5407,])
output2 = relay.Tuple([bop_5410,])
func_5413 = relay.Function([var_5406,], output)
mod['func_5413'] = func_5413
mod = relay.transform.InferType()(mod)
var_5414 = relay.var("var_5414", dtype = "int16", shape = (10, 11, 5))#candidate|5414|(10, 11, 5)|var|int16
output = func_5413(var_5414)
func_5415 = relay.Function([var_5414], output)
mutated_mod['func_5415'] = func_5415
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4813_call = mod.get_global_var('func_4813')
func_4814_call = mutated_mod.get_global_var('func_4814')
call_5435 = func_4813_call()
call_5436 = func_4813_call()
func_3960_call = mod.get_global_var('func_3960')
func_3962_call = mutated_mod.get_global_var('func_3962')
call_5450 = relay.TupleGetItem(func_3960_call(), 0)
call_5451 = relay.TupleGetItem(func_3962_call(), 0)
var_5452 = relay.var("var_5452", dtype = "uint8", shape = (900,))#candidate|5452|(900,)|var|uint8
bop_5453 = relay.less(call_5435.astype('bool'), relay.reshape(var_5452.astype('bool'), relay.shape_of(call_5435))) # shape=(900,)
bop_5456 = relay.less(call_5436.astype('bool'), relay.reshape(var_5452.astype('bool'), relay.shape_of(call_5436))) # shape=(900,)
func_2607_call = mod.get_global_var('func_2607')
func_2609_call = mutated_mod.get_global_var('func_2609')
var_5465 = relay.var("var_5465", dtype = "float32", shape = (11, 104))#candidate|5465|(11, 104)|var|float32
call_5464 = relay.TupleGetItem(func_2607_call(relay.reshape(var_5465.astype('float32'), [1144,])), 0)
call_5466 = relay.TupleGetItem(func_2609_call(relay.reshape(var_5465.astype('float32'), [1144,])), 0)
output = relay.Tuple([call_5450,bop_5453,call_5464,var_5465,])
output2 = relay.Tuple([call_5451,bop_5456,call_5466,var_5465,])
func_5491 = relay.Function([var_5452,var_5465,], output)
mod['func_5491'] = func_5491
mod = relay.transform.InferType()(mod)
var_5492 = relay.var("var_5492", dtype = "uint8", shape = (900,))#candidate|5492|(900,)|var|uint8
var_5493 = relay.var("var_5493", dtype = "float32", shape = (11, 104))#candidate|5493|(11, 104)|var|float32
output = func_5491(var_5492,var_5493,)
func_5494 = relay.Function([var_5492,var_5493,], output)
mutated_mod['func_5494'] = func_5494
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3863_call = mod.get_global_var('func_3863')
func_3864_call = mutated_mod.get_global_var('func_3864')
call_5501 = func_3863_call()
call_5502 = func_3863_call()
func_4179_call = mod.get_global_var('func_4179')
func_4180_call = mutated_mod.get_global_var('func_4180')
call_5530 = relay.TupleGetItem(func_4179_call(), 0)
call_5531 = relay.TupleGetItem(func_4180_call(), 0)
output = relay.Tuple([call_5501,call_5530,])
output2 = relay.Tuple([call_5502,call_5531,])
func_5557 = relay.Function([], output)
mod['func_5557'] = func_5557
mod = relay.transform.InferType()(mod)
output = func_5557()
func_5558 = relay.Function([], output)
mutated_mod['func_5558'] = func_5558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5372_call = mod.get_global_var('func_5372')
func_5373_call = mutated_mod.get_global_var('func_5373')
call_5565 = relay.TupleGetItem(func_5372_call(), 0)
call_5566 = relay.TupleGetItem(func_5373_call(), 0)
func_223_call = mod.get_global_var('func_223')
func_227_call = mutated_mod.get_global_var('func_227')
call_5572 = relay.TupleGetItem(func_223_call(relay.reshape(call_5565.astype('int16'), [3, 14, 2]), relay.reshape(call_5565.astype('int16'), [3, 14, 2]), relay.reshape(call_5565.astype('int16'), [3, 14, 2]), ), 1)
call_5573 = relay.TupleGetItem(func_227_call(relay.reshape(call_5565.astype('int16'), [3, 14, 2]), relay.reshape(call_5565.astype('int16'), [3, 14, 2]), relay.reshape(call_5565.astype('int16'), [3, 14, 2]), ), 1)
output = relay.Tuple([call_5565,call_5572,])
output2 = relay.Tuple([call_5566,call_5573,])
func_5577 = relay.Function([], output)
mod['func_5577'] = func_5577
mod = relay.transform.InferType()(mod)
mutated_mod['func_5577'] = func_5577
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5577_call = mutated_mod.get_global_var('func_5577')
call_5578 = func_5577_call()
output = call_5578
func_5579 = relay.Function([], output)
mutated_mod['func_5579'] = func_5579
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4813_call = mod.get_global_var('func_4813')
func_4814_call = mutated_mod.get_global_var('func_4814')
call_5613 = func_4813_call()
call_5614 = func_4813_call()
func_3895_call = mod.get_global_var('func_3895')
func_3896_call = mutated_mod.get_global_var('func_3896')
call_5670 = func_3895_call()
call_5671 = func_3895_call()
output = relay.Tuple([call_5613,call_5670,])
output2 = relay.Tuple([call_5614,call_5671,])
func_5673 = relay.Function([], output)
mod['func_5673'] = func_5673
mod = relay.transform.InferType()(mod)
output = func_5673()
func_5674 = relay.Function([], output)
mutated_mod['func_5674'] = func_5674
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2864_call = mod.get_global_var('func_2864')
func_2865_call = mutated_mod.get_global_var('func_2865')
call_5681 = relay.TupleGetItem(func_2864_call(), 0)
call_5682 = relay.TupleGetItem(func_2865_call(), 0)
output = relay.Tuple([call_5681,])
output2 = relay.Tuple([call_5682,])
func_5683 = relay.Function([], output)
mod['func_5683'] = func_5683
mod = relay.transform.InferType()(mod)
output = func_5683()
func_5684 = relay.Function([], output)
mutated_mod['func_5684'] = func_5684
mutated_mod = relay.transform.InferType()(mutated_mod)
const_5701 = relay.const([[[1,-1,1,-5,7,-1,-10,10,-7,-8,9,3,6,-8,1],[-3,1,9,5,-10,-7,7,1,-9,-8,-9,4,-2,-8,-7],[8,-1,5,-4,7,-3,4,10,-7,-4,-8,2,6,2,6],[5,9,-4,8,-5,9,1,-7,-9,-2,9,-5,-1,5,-7],[3,5,-7,-6,-9,4,-10,3,6,4,-6,-7,6,-4,-3],[1,4,-8,9,10,9,-5,-6,8,10,-1,5,-9,-8,-1],[5,-7,-2,-10,2,-6,-3,-10,9,3,10,-6,-4,7,8]],[[-10,-1,-2,3,3,-3,4,10,-6,-2,10,5,-6,-3,-8],[10,-5,-7,6,-10,-5,10,10,-3,-10,-7,6,6,-10,6],[9,-10,-1,-1,8,7,-8,-3,6,-7,1,-7,-8,1,-2],[-8,5,5,-6,2,-10,7,6,6,-6,-10,-9,-5,2,6],[5,6,3,-7,-10,5,7,-7,4,7,-8,-8,-4,5,1],[1,-7,-9,8,1,4,-7,-2,4,-10,7,-7,-9,9,8],[-7,-7,6,5,1,-2,-6,4,5,-5,10,-7,6,-8,9]],[[-5,3,-1,8,-2,5,-4,3,8,-7,-5,4,3,-7,5],[5,4,-3,-6,2,10,2,-8,-1,6,-1,6,-4,-5,8],[-9,-9,-2,10,3,-5,-9,8,-5,6,-8,2,-2,3,-9],[9,-3,-1,-1,2,-2,1,-8,-3,-10,6,-7,4,-5,9],[7,2,-6,-6,5,-5,8,2,-6,9,-3,-6,3,10,-6],[-4,4,-4,2,-7,9,-5,7,3,2,7,-8,4,2,3],[-2,2,4,4,7,4,1,-5,9,-2,-1,-6,4,2,5]],[[-6,4,-1,-6,-6,-8,3,2,-10,7,1,10,8,-1,-10],[8,3,3,-10,-1,-6,-9,-10,6,-1,9,2,1,-1,-2],[9,6,2,6,-10,10,-7,4,7,7,-4,10,-6,-6,3],[10,8,4,5,3,10,-1,10,4,5,5,-10,3,-8,-4],[9,-3,-10,-8,-8,10,4,-4,-5,4,-2,9,-6,7,-3],[4,-3,-8,5,-7,9,-10,-9,9,-5,-7,-2,6,-9,9],[-3,2,2,-10,10,-2,7,1,-8,-3,1,-9,-4,-8,-9]],[[-5,-2,8,-8,4,8,-6,10,2,-8,-9,4,-2,3,3],[1,-4,-4,-8,3,-2,-8,7,-6,5,5,-2,2,-7,-6],[-8,-8,-1,-7,7,-2,2,-7,-7,-9,6,-6,2,2,6],[-2,6,-9,4,-7,5,-2,-9,-7,2,1,-9,-4,-7,-10],[6,-9,2,1,-3,7,-6,-4,-7,-3,6,-7,-1,4,9],[4,8,2,-1,-5,9,-2,-2,2,-7,8,-1,8,6,-1],[-8,2,10,5,5,6,4,3,-6,3,1,9,-6,3,1]],[[-7,-1,-6,-3,4,10,3,10,10,-10,1,6,-5,-7,4],[-4,-8,10,-8,4,10,-2,10,1,-9,-6,-4,10,-5,-8],[6,8,7,-7,-10,6,9,-4,-3,-10,6,3,-8,-9,-10],[2,7,2,-9,-10,2,-8,8,-1,-7,-3,6,-4,9,-9],[-10,-6,10,-2,9,-9,-2,3,1,10,6,2,7,8,1],[6,-8,-8,-2,-1,-6,3,7,7,1,-7,-9,9,-7,6],[6,-7,6,-7,10,1,-6,4,-2,1,-8,-10,-9,7,-8]],[[4,-4,-10,-10,1,5,-6,6,-4,10,-2,6,-5,1,-1],[-4,-4,-9,1,3,7,-3,9,-2,-8,8,1,3,1,10],[4,-8,-4,-5,4,4,8,-6,-9,-7,9,8,-1,7,-5],[-5,-1,-9,10,10,4,7,3,6,-10,-6,2,10,-5,7],[-4,-10,3,-1,-3,-9,5,10,9,-8,3,-9,-10,-8,8],[6,8,-10,-3,-6,-2,-7,8,2,5,6,6,3,-6,10],[8,9,-9,-7,-10,3,5,-6,7,-2,-10,2,-4,1,-8]],[[8,-6,-2,-6,1,1,5,-4,-2,-10,5,1,-5,2,8],[6,4,1,-9,4,-2,-4,2,9,-10,8,-1,3,-5,2],[5,-7,2,-4,4,2,4,2,-5,1,2,-1,8,10,8],[-7,2,1,-4,4,6,4,2,-9,-9,-2,-10,5,-6,-1],[7,-7,-4,10,7,5,-1,-3,-7,10,3,-8,-3,-2,5],[3,-3,-10,3,2,7,-3,-6,-9,-1,8,9,8,6,10],[3,-7,8,-1,9,-10,1,-5,10,-10,3,6,4,5,-1]],[[-5,-10,9,10,-8,-5,7,10,3,-4,-2,10,10,-1,4],[-9,6,-1,-9,5,10,-6,6,-9,-7,-3,-1,-8,-7,-3],[8,-9,-3,-9,1,-2,6,10,-3,2,-1,10,5,10,-6],[4,8,10,6,-6,5,-10,3,4,6,-7,-10,6,8,9],[10,9,7,-1,-1,1,-2,-9,-8,2,-1,-10,9,-8,3],[-10,1,3,1,2,-9,-9,2,8,3,4,3,4,-10,-9],[-10,-8,-10,-8,2,-10,10,4,7,4,3,5,3,-8,-2]],[[8,7,2,6,6,-7,-1,-8,-3,-8,-7,6,-9,-1,-4],[5,4,9,-9,5,4,-4,1,1,-6,-2,2,-5,8,7],[9,-5,3,-1,8,-8,8,-9,-3,-6,9,-2,-5,-9,4],[-7,9,-10,-6,7,-6,10,6,-4,8,-9,-7,8,-9,7],[5,8,5,-8,-6,-7,-9,-8,-6,5,-4,1,-7,-5,5],[10,3,-6,6,1,7,6,-5,-3,9,-5,4,6,6,-8],[1,-3,-7,-5,10,-7,-2,-5,1,9,9,5,-1,-5,-10]],[[8,-2,-8,-9,-2,-6,8,-5,-8,4,-6,-1,-4,-2,7],[-3,-3,-5,4,3,5,-6,-9,9,-7,5,3,2,6,10],[6,-8,6,2,-9,5,-6,8,-4,-3,9,-2,-3,2,10],[5,-3,7,-8,1,-5,1,9,-9,8,4,1,10,4,-5],[3,-2,-3,-10,-9,-8,5,-10,-1,-7,-10,-6,9,-6,5],[-9,1,9,-10,3,-7,-8,2,-9,4,4,9,8,4,-2],[5,-1,3,-8,-6,4,4,8,-9,-3,-2,-8,6,10,-10]]], dtype = "int64")#candidate|5701|(11, 7, 15)|const|int64
var_5702 = relay.var("var_5702", dtype = "int64", shape = (11, 7, 15))#candidate|5702|(11, 7, 15)|var|int64
bop_5703 = relay.left_shift(const_5701.astype('int64'), relay.reshape(var_5702.astype('int64'), relay.shape_of(const_5701))) # shape=(11, 7, 15)
output = relay.Tuple([bop_5703,])
output2 = relay.Tuple([bop_5703,])
func_5710 = relay.Function([var_5702,], output)
mod['func_5710'] = func_5710
mod = relay.transform.InferType()(mod)
mutated_mod['func_5710'] = func_5710
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5711 = relay.var("var_5711", dtype = "int64", shape = (11, 7, 15))#candidate|5711|(11, 7, 15)|var|int64
func_5710_call = mutated_mod.get_global_var('func_5710')
call_5712 = func_5710_call(var_5711)
output = call_5712
func_5713 = relay.Function([var_5711], output)
mutated_mod['func_5713'] = func_5713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3938_call = mod.get_global_var('func_3938')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_5750 = func_3938_call()
call_5751 = func_3938_call()
output = relay.Tuple([call_5750,])
output2 = relay.Tuple([call_5751,])
func_5752 = relay.Function([], output)
mod['func_5752'] = func_5752
mod = relay.transform.InferType()(mod)
output = func_5752()
func_5753 = relay.Function([], output)
mutated_mod['func_5753'] = func_5753
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4297_call = mod.get_global_var('func_4297')
func_4298_call = mutated_mod.get_global_var('func_4298')
call_5784 = relay.TupleGetItem(func_4297_call(), 3)
call_5785 = relay.TupleGetItem(func_4298_call(), 3)
func_3852_call = mod.get_global_var('func_3852')
func_3855_call = mutated_mod.get_global_var('func_3855')
const_5794 = relay.const([3,-7,-10,-9,-6,9,7,3,-5,3,7,-8,-7,8,9,-3,9,-3,5,-7,-7,7,6,-7,-6,8,-8,-6,-7,10,4,-8,5,2,-3,9,5,-4,-5,4,9,-7,-10,-3,9,-1,-9,6,10,4,-8,3,-8,-8,8,-6,-4,6,-6,-1,4,-10,2,-7,-3,-8,-3,-6,-10,5,6,8,4,6,-3,-7,-8,10,-2,-4,7,7,3,-2,-10,4,8,-10,4,-4,-2,5,-9,-1,3,5,-7,9,-10,6,8,9,-10,10,-4,4,-7,-9,-6,-5,-8,-1,7,-7,-1,-8,-1,-4,-6,6,9,10,-8,2,1,-5,10,-4,-5,3,-3,6,-7,-4,7,5,-9,3,3,-3,1,-3,-3,-7,7,-6,-10,-6,-3,10,-2,7,9,9,3,6,2,-6,-6,3], dtype = "uint16")#candidate|5794|(160,)|const|uint16
var_5795 = relay.var("var_5795", dtype = "uint8", shape = (240,))#candidate|5795|(240,)|var|uint8
call_5793 = relay.TupleGetItem(func_3852_call(relay.reshape(const_5794.astype('uint16'), [160,]), relay.reshape(var_5795.astype('uint8'), [2, 120]), ), 9)
call_5796 = relay.TupleGetItem(func_3855_call(relay.reshape(const_5794.astype('uint16'), [160,]), relay.reshape(var_5795.astype('uint8'), [2, 120]), ), 9)
var_5808 = relay.var("var_5808", dtype = "uint64", shape = (77, 6))#candidate|5808|(77, 6)|var|uint64
bop_5809 = relay.less_equal(call_5784.astype('bool'), relay.reshape(var_5808.astype('bool'), relay.shape_of(call_5784))) # shape=(77, 6)
bop_5812 = relay.less_equal(call_5785.astype('bool'), relay.reshape(var_5808.astype('bool'), relay.shape_of(call_5785))) # shape=(77, 6)
uop_5813 = relay.asinh(var_5808.astype('float32')) # shape=(77, 6)
func_4515_call = mod.get_global_var('func_4515')
func_4516_call = mutated_mod.get_global_var('func_4516')
call_5815 = relay.TupleGetItem(func_4515_call(), 3)
call_5816 = relay.TupleGetItem(func_4516_call(), 3)
func_5683_call = mod.get_global_var('func_5683')
func_5684_call = mutated_mod.get_global_var('func_5684')
call_5821 = relay.TupleGetItem(func_5683_call(), 0)
call_5822 = relay.TupleGetItem(func_5684_call(), 0)
bop_5829 = relay.subtract(uop_5813.astype('int64'), relay.reshape(call_5784.astype('int64'), relay.shape_of(uop_5813))) # shape=(77, 6)
bop_5832 = relay.subtract(uop_5813.astype('int64'), relay.reshape(call_5785.astype('int64'), relay.shape_of(uop_5813))) # shape=(77, 6)
func_2471_call = mod.get_global_var('func_2471')
func_2476_call = mutated_mod.get_global_var('func_2476')
call_5833 = relay.TupleGetItem(func_2471_call(relay.reshape(call_5821.astype('float64'), [11, 12, 8]), relay.reshape(const_5794.astype('uint16'), [160,]), relay.reshape(var_5795.astype('uint8'), [240, 1]), ), 3)
call_5834 = relay.TupleGetItem(func_2476_call(relay.reshape(call_5821.astype('float64'), [11, 12, 8]), relay.reshape(const_5794.astype('uint16'), [160,]), relay.reshape(var_5795.astype('uint8'), [240, 1]), ), 3)
func_5372_call = mod.get_global_var('func_5372')
func_5373_call = mutated_mod.get_global_var('func_5373')
call_5836 = relay.TupleGetItem(func_5372_call(), 0)
call_5837 = relay.TupleGetItem(func_5373_call(), 0)
output = relay.Tuple([call_5793,const_5794,var_5795,bop_5809,call_5815,call_5821,bop_5829,call_5833,call_5836,])
output2 = relay.Tuple([call_5796,const_5794,var_5795,bop_5812,call_5816,call_5822,bop_5832,call_5834,call_5837,])
func_5845 = relay.Function([var_5795,var_5808,], output)
mod['func_5845'] = func_5845
mod = relay.transform.InferType()(mod)
mutated_mod['func_5845'] = func_5845
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5845_call = mutated_mod.get_global_var('func_5845')
var_5847 = relay.var("var_5847", dtype = "uint8", shape = (240,))#candidate|5847|(240,)|var|uint8
var_5848 = relay.var("var_5848", dtype = "uint64", shape = (77, 6))#candidate|5848|(77, 6)|var|uint64
call_5846 = func_5845_call(var_5847,var_5848,)
output = call_5846
func_5849 = relay.Function([var_5847,var_5848,], output)
mutated_mod['func_5849'] = func_5849
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5673_call = mod.get_global_var('func_5673')
func_5674_call = mutated_mod.get_global_var('func_5674')
call_5858 = relay.TupleGetItem(func_5673_call(), 0)
call_5859 = relay.TupleGetItem(func_5674_call(), 0)
output = call_5858
output2 = call_5859
func_5860 = relay.Function([], output)
mod['func_5860'] = func_5860
mod = relay.transform.InferType()(mod)
mutated_mod['func_5860'] = func_5860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5860_call = mutated_mod.get_global_var('func_5860')
call_5861 = func_5860_call()
output = call_5861
func_5862 = relay.Function([], output)
mutated_mod['func_5862'] = func_5862
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4180_call = mutated_mod.get_global_var('func_4180')
call_5913 = relay.TupleGetItem(func_4179_call(), 0)
call_5914 = relay.TupleGetItem(func_4180_call(), 0)
uop_5916 = relay.atan(call_5913.astype('float64')) # shape=(11, 12, 8)
uop_5918 = relay.atan(call_5914.astype('float64')) # shape=(11, 12, 8)
func_723_call = mod.get_global_var('func_723')
func_726_call = mutated_mod.get_global_var('func_726')
var_5923 = relay.var("var_5923", dtype = "uint8", shape = (240,))#candidate|5923|(240,)|var|uint8
call_5922 = func_723_call(relay.reshape(var_5923.astype('uint8'), [10, 12, 2]), relay.reshape(var_5923.astype('uint8'), [10, 12, 2]), )
call_5924 = func_723_call(relay.reshape(var_5923.astype('uint8'), [10, 12, 2]), relay.reshape(var_5923.astype('uint8'), [10, 12, 2]), )
output = relay.Tuple([uop_5916,call_5922,var_5923,])
output2 = relay.Tuple([uop_5918,call_5924,var_5923,])
func_5925 = relay.Function([var_5923,], output)
mod['func_5925'] = func_5925
mod = relay.transform.InferType()(mod)
mutated_mod['func_5925'] = func_5925
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5926 = relay.var("var_5926", dtype = "uint8", shape = (240,))#candidate|5926|(240,)|var|uint8
func_5925_call = mutated_mod.get_global_var('func_5925')
call_5927 = func_5925_call(var_5926)
output = call_5927
func_5928 = relay.Function([var_5926], output)
mutated_mod['func_5928'] = func_5928
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_5961 = relay.TupleGetItem(func_4262_call(), 0)
call_5962 = relay.TupleGetItem(func_4264_call(), 0)
func_343_call = mod.get_global_var('func_343')
func_345_call = mutated_mod.get_global_var('func_345')
const_5966 = relay.const([[-5,-6,4,4,-4,-10,6,2,-3,-6],[-9,-3,-2,-6,8,8,6,8,1,-3],[-6,-9,6,2,8,-10,-4,2,1,10],[5,-3,-3,3,10,1,1,-8,-3,8],[2,-10,10,4,-1,1,2,9,2,1],[9,7,10,-9,-8,6,-7,-8,-10,8],[-7,-9,2,6,3,-5,-9,-2,-10,4],[10,-9,6,-3,10,-2,-10,-7,3,6],[3,6,-4,1,-1,-1,4,-5,-9,-1],[-10,5,-3,4,-10,-2,2,6,-6,1],[3,8,3,-10,-2,1,-3,3,1,-4],[10,5,-3,9,8,-9,-3,10,10,10],[2,-5,-10,-3,-8,3,4,-9,8,10],[-9,9,-4,9,9,-8,-3,-8,-5,-3],[9,-10,-3,-1,10,-9,10,2,6,-10],[3,8,2,6,-6,-10,-4,-9,1,9],[1,10,-5,5,-4,-8,4,-2,1,-6],[8,3,8,10,-2,-3,-7,4,5,-3],[8,-7,-9,-1,-6,9,-2,-5,-2,2],[-4,-7,-7,-2,2,-5,-9,3,1,10],[10,1,-2,4,3,-8,-10,9,7,4],[-9,10,-1,-7,8,8,-9,-1,7,-4],[1,9,-6,1,-10,-3,-3,-8,-7,-5],[-4,-2,-5,-3,8,5,7,3,2,7],[10,-2,4,-7,9,-5,-6,6,-1,6],[-6,9,2,-7,7,-8,-5,-9,-2,-9],[8,-4,10,-8,10,-10,-2,8,-2,-10],[-2,-5,-1,-3,9,-4,5,-1,-9,-7],[2,3,-8,-10,9,-1,-10,-5,1,6],[3,6,9,4,8,-6,1,-4,4,9],[-6,4,7,7,-1,-7,-2,-2,-2,-10],[10,-3,-7,7,-3,-5,-9,4,-10,3],[5,-6,2,-9,-4,9,5,4,10,-1],[10,-3,7,-4,-10,8,4,2,2,4],[-10,-10,4,-7,7,-1,-6,-7,-4,9],[7,-9,1,-9,-5,-9,-6,10,-4,6],[6,10,2,4,6,9,-1,6,-2,-3],[8,3,-2,3,1,9,7,-9,7,-6],[-5,8,-7,-7,9,-7,-3,-2,5,-5],[7,4,-5,6,4,-5,-8,6,7,-6],[3,-5,4,-3,5,7,-2,-9,-2,7],[8,9,-4,3,8,8,-3,-10,-2,-7],[-1,-2,-5,-9,7,-5,9,1,8,-7],[-3,2,9,2,6,-10,-4,-1,-3,-6],[-10,5,6,5,10,-2,8,-9,-7,10],[-10,2,3,3,-6,8,1,-5,9,-10],[-3,-2,-8,10,1,3,-8,-5,10,9],[-10,-2,-8,7,1,8,10,7,-10,7],[4,-3,5,-5,8,1,-9,-9,3,6],[-3,-8,-4,-5,1,-6,-2,-9,-6,1],[8,-4,-8,6,10,3,-6,-6,-5,5],[-3,-1,9,-1,4,-1,-8,9,-1,-5],[-7,-2,-1,-3,9,2,-8,-8,-5,-4],[-3,-1,-1,6,7,2,-10,-7,5,7],[8,8,6,-5,-5,2,-5,10,5,-9],[-5,-4,-7,6,-3,-6,4,-8,-1,1],[-5,3,-6,-5,7,3,7,9,-10,-4],[9,5,5,4,-10,2,-8,3,-10,-6],[6,-10,-1,-7,-5,-6,-2,-8,4,-4],[6,10,-3,-9,3,1,-9,2,-4,-10],[1,-3,-7,-3,2,-9,-5,4,2,-4],[-3,6,-10,1,-9,-2,1,7,-6,-10],[10,-9,-8,5,-8,-7,-6,2,-3,-7],[-8,-5,6,-6,2,3,7,9,4,-5],[4,3,3,5,2,8,-3,-8,7,-1],[2,-3,5,2,5,-2,-9,9,4,-8],[8,-6,-3,1,-8,10,-6,9,-4,-9],[-8,8,-7,1,-2,8,7,2,8,-1],[-6,8,-4,1,8,7,-2,5,-3,-1],[-5,9,-4,-3,6,1,-7,-4,-6,8],[-7,-1,-9,8,-5,1,9,4,-2,-6],[-5,10,7,-10,9,6,3,4,-8,-6],[-3,-2,8,8,7,8,-2,-1,-4,-2],[10,-10,-9,-5,-9,9,7,-6,1,4],[-9,-9,1,-10,2,-10,9,-3,4,-5],[-8,-7,-8,-7,7,7,4,-7,-6,1],[-6,-10,1,-7,-1,10,-7,-4,9,5],[3,-2,-6,3,3,-1,7,7,-5,4],[5,5,2,10,-1,7,-7,-2,-7,6],[-2,-10,8,-6,-10,-9,8,-10,1,2],[-4,-7,-8,-5,-7,7,-8,6,-2,9],[5,-8,1,-3,-9,6,6,6,6,10],[-4,1,-2,10,-1,8,6,-1,8,-1],[1,-2,-3,-10,2,2,-7,-10,2,-4],[8,1,10,2,7,4,-3,4,7,-4],[-6,-4,9,-9,-3,-4,-5,-6,-8,-2],[4,-5,-4,-2,5,-9,2,1,9,-2],[2,-5,10,3,-2,3,1,-2,6,-8],[-1,1,2,7,-1,6,-7,-4,4,5],[2,-1,-7,-10,8,6,-4,-3,9,2]], dtype = "uint8")#candidate|5966|(90, 10)|const|uint8
call_5965 = relay.TupleGetItem(func_343_call(relay.reshape(const_5966.astype('uint8'), [10, 6, 15])), 0)
call_5967 = relay.TupleGetItem(func_345_call(relay.reshape(const_5966.astype('uint8'), [10, 6, 15])), 0)
output = relay.Tuple([call_5961,call_5965,const_5966,])
output2 = relay.Tuple([call_5962,call_5967,const_5966,])
func_5968 = relay.Function([], output)
mod['func_5968'] = func_5968
mod = relay.transform.InferType()(mod)
mutated_mod['func_5968'] = func_5968
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5968_call = mutated_mod.get_global_var('func_5968')
call_5969 = func_5968_call()
output = call_5969
func_5970 = relay.Function([], output)
mutated_mod['func_5970'] = func_5970
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4951_call = mod.get_global_var('func_4951')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_5974 = relay.TupleGetItem(func_4951_call(), 0)
call_5975 = relay.TupleGetItem(func_4952_call(), 0)
output = call_5974
output2 = call_5975
func_5986 = relay.Function([], output)
mod['func_5986'] = func_5986
mod = relay.transform.InferType()(mod)
output = func_5986()
func_5987 = relay.Function([], output)
mutated_mod['func_5987'] = func_5987
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_6029 = relay.TupleGetItem(func_2976_call(), 0)
call_6030 = relay.TupleGetItem(func_2977_call(), 0)
output = relay.Tuple([call_6029,])
output2 = relay.Tuple([call_6030,])
func_6039 = relay.Function([], output)
mod['func_6039'] = func_6039
mod = relay.transform.InferType()(mod)
output = func_6039()
func_6040 = relay.Function([], output)
mutated_mod['func_6040'] = func_6040
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4813_call = mod.get_global_var('func_4813')
func_4814_call = mutated_mod.get_global_var('func_4814')
call_6066 = func_4813_call()
call_6067 = func_4813_call()
output = call_6066
output2 = call_6067
func_6087 = relay.Function([], output)
mod['func_6087'] = func_6087
mod = relay.transform.InferType()(mod)
mutated_mod['func_6087'] = func_6087
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6087_call = mutated_mod.get_global_var('func_6087')
call_6088 = func_6087_call()
output = call_6088
func_6089 = relay.Function([], output)
mutated_mod['func_6089'] = func_6089
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6095 = relay.const([[[1.162523,3.514422,-9.650618,-7.750360,8.813295,-5.163726,-1.282986,5.483139],[7.950886,3.017801,5.434570,8.972085,-1.146793,8.986092,3.687748,1.155422],[-5.924306,-5.906175,-3.012858,6.423932,1.831864,-4.468680,6.417021,-9.145293],[6.793937,-6.369201,-3.747959,8.472192,4.453881,5.224887,8.596182,7.254671],[1.546148,-1.450050,-5.045075,-7.074771,-5.993600,3.928830,-2.637434,-2.988519],[2.977819,-4.201336,-5.148844,-8.469341,-5.237730,-4.098356,-3.584876,2.991278],[0.318219,-4.161473,4.084610,1.847931,2.862707,5.799379,4.592428,6.902219],[3.235202,-1.855711,4.011811,2.682067,-9.979200,-7.962658,8.414089,-4.994369],[2.070212,9.739722,4.815658,-5.335815,6.451394,-8.238614,4.439436,-9.151980],[8.143357,-3.097317,3.981682,6.264232,2.605721,4.983386,9.808690,9.933528],[-2.011769,-7.570541,-6.205074,-8.942834,-8.259262,-0.758711,-8.459139,-1.988090]],[[6.516717,3.629609,-1.233898,-9.104350,-2.283324,1.403027,2.554089,-7.171623],[1.619753,-1.575162,-3.611716,1.816606,3.836506,-0.162566,-3.021629,-9.861350],[-7.712873,1.463301,-3.987520,-9.028193,6.560015,-8.755839,7.109627,-1.222677],[9.971843,-1.355599,6.277595,6.985024,3.836141,-5.698446,-2.531321,9.620382],[-0.905717,-0.533350,-3.540757,6.726506,-9.089361,-3.186020,3.265245,-0.053016],[7.027444,-6.141682,-3.705517,-0.675008,0.256362,-8.332459,0.155889,-6.371751],[-7.639480,-1.590933,-9.724986,-0.737033,9.343161,-1.540536,7.138459,-5.833722],[9.552372,1.817851,-6.898438,9.231673,-8.290557,3.372685,3.298409,-2.997044],[-1.151073,-8.239087,-7.437026,1.511475,9.164443,-3.199197,-7.132093,-8.315301],[1.223303,-7.352907,4.826476,-7.163565,3.523951,0.823025,8.684821,-7.211394],[-4.673625,-4.341489,8.784947,-5.090411,9.977700,6.073233,5.644997,0.235264]],[[7.046281,-8.152180,4.413077,-4.755087,9.531131,3.098404,4.329485,-1.998896],[-0.138727,5.888564,0.347643,3.976777,-9.423578,-9.984489,-4.838001,0.571312],[0.829718,-8.186821,-3.901672,8.144246,-3.862699,-5.692684,-7.937703,6.010468],[-3.412028,-1.364145,-3.803880,-6.281181,-8.489168,1.818768,0.694136,-5.256960],[-6.758579,2.730608,-9.501791,-6.505734,-4.867160,-8.875198,-8.284257,9.270727],[-3.438997,-2.263707,8.663072,-7.656089,2.329130,-9.452107,-8.104108,-8.850974],[8.271036,0.908818,-4.785642,-7.524770,-9.550008,-5.790124,-6.140768,3.065359],[0.326531,-6.592430,3.247790,7.826771,-3.533040,2.629019,-3.921543,2.469779],[2.227246,6.519667,2.344014,-5.200199,7.156462,-8.120031,9.612042,-4.067063],[5.278595,5.829614,7.877726,5.524912,2.805745,-8.599304,-6.837941,3.576079],[-5.429774,-1.684318,8.125683,-0.126917,1.939991,-2.252070,-0.575496,2.666246]],[[5.517554,-9.148573,8.851588,-1.324826,-0.036606,2.054239,0.986277,9.800654],[0.998581,3.074590,-9.332245,3.073873,-9.464760,-5.162152,5.518284,-3.078457],[7.459549,5.344552,-7.480340,7.372220,3.007214,-9.783938,2.759518,-8.970410],[3.078416,3.983280,0.915529,3.037539,4.111755,4.387019,0.680084,5.335646],[-4.447551,-5.528344,1.070783,-6.608304,-7.125542,4.021823,-5.342985,-7.049509],[4.067731,2.244900,6.350396,-5.670071,7.284400,7.243405,8.377867,7.706164],[3.758913,-1.116303,8.514054,0.127649,3.117591,5.790085,8.444123,7.797604],[-8.434996,0.153204,2.360914,-4.354185,3.847697,-2.517374,-8.685618,4.830550],[2.983691,-0.054190,-4.676153,-1.231746,-1.194633,5.847049,3.285420,-9.467174],[8.395861,0.425360,6.476055,0.730111,6.788192,5.488351,7.968225,-8.477120],[8.505256,0.697341,-9.451678,1.147891,-1.383650,-0.978555,-4.003590,1.298513]],[[3.526742,-3.844463,-8.476545,6.371375,0.431293,6.283462,8.541042,6.804401],[3.407326,-2.208012,-5.197067,-9.965128,-2.327580,8.327072,-2.421122,1.451833],[2.000206,-3.273857,4.230618,-2.710741,6.840295,-4.619976,1.227748,7.626280],[-7.675083,-5.210903,6.547218,1.246903,-8.971727,-2.617425,3.954450,-3.193456],[-5.576357,-6.942884,-3.997090,-8.565459,6.378487,0.047532,9.451319,8.590725],[-8.693930,-5.608625,-4.203712,-6.240433,-9.011089,2.932089,-0.096928,0.326718],[9.981006,-1.639568,-9.400095,7.945787,3.988372,-5.008276,2.733549,3.039502],[5.843184,2.784215,4.738390,-8.611840,6.706721,-9.736414,7.635483,-6.737163],[4.333231,5.679905,9.119145,4.043559,5.882710,4.861782,7.735867,-9.910981],[9.522532,7.344607,7.137276,-2.313312,8.169933,-8.661431,-8.885097,2.948549],[-6.901111,9.673478,2.700271,-7.617546,-1.401073,5.162265,-4.843536,3.611093]],[[-6.038033,8.427048,-8.314536,-2.254467,-0.517761,9.773863,2.567487,-4.308150],[3.452259,5.441356,0.143378,0.206843,-3.725767,7.747127,-5.623159,-6.279069],[7.750932,5.880267,3.273578,-2.332879,-4.419344,1.950879,-5.164988,8.051265],[6.710705,6.919449,4.208600,4.268341,1.532165,-0.181223,7.567670,-1.178661],[-4.991827,-1.119213,0.317011,9.898813,-8.803753,0.918951,6.173018,-7.184034],[-9.121492,7.259402,-1.298410,6.717331,0.803689,-3.270356,-1.365578,-1.234856],[-0.508665,-5.268689,6.574858,0.430241,-3.226115,-1.369799,-2.204176,7.167426],[-9.853674,-0.628629,0.131360,9.491528,5.327293,3.791852,-7.057080,2.051257],[-2.465264,7.380178,2.586563,-1.115717,8.978176,6.612356,3.334863,-8.294184],[2.949316,8.559452,-5.319689,-0.348656,-2.538503,1.833975,9.840534,4.936347],[5.133785,3.547685,4.839105,-8.263782,-2.371359,-2.253818,-7.306991,-7.436936]]], dtype = "float32")#candidate|6095|(6, 11, 8)|const|float32
var_6096 = relay.var("var_6096", dtype = "float32", shape = (6, 11, 8))#candidate|6096|(6, 11, 8)|var|float32
bop_6097 = relay.divide(const_6095.astype('float32'), relay.reshape(var_6096.astype('float32'), relay.shape_of(const_6095))) # shape=(6, 11, 8)
func_1780_call = mod.get_global_var('func_1780')
func_1783_call = mutated_mod.get_global_var('func_1783')
var_6108 = relay.var("var_6108", dtype = "float64", shape = (210,))#candidate|6108|(210,)|var|float64
call_6107 = relay.TupleGetItem(func_1780_call(relay.reshape(var_6108.astype('float64'), [5, 14, 3])), 1)
call_6109 = relay.TupleGetItem(func_1783_call(relay.reshape(var_6108.astype('float64'), [5, 14, 3])), 1)
output = relay.Tuple([bop_6097,call_6107,var_6108,])
output2 = relay.Tuple([bop_6097,call_6109,var_6108,])
func_6111 = relay.Function([var_6096,var_6108,], output)
mod['func_6111'] = func_6111
mod = relay.transform.InferType()(mod)
var_6112 = relay.var("var_6112", dtype = "float32", shape = (6, 11, 8))#candidate|6112|(6, 11, 8)|var|float32
var_6113 = relay.var("var_6113", dtype = "float64", shape = (210,))#candidate|6113|(210,)|var|float64
output = func_6111(var_6112,var_6113,)
func_6114 = relay.Function([var_6112,var_6113,], output)
mutated_mod['func_6114'] = func_6114
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6133 = relay.var("var_6133", dtype = "uint8", shape = (12, 13, 8))#candidate|6133|(12, 13, 8)|var|uint8
var_6134 = relay.var("var_6134", dtype = "uint8", shape = (12, 13, 8))#candidate|6134|(12, 13, 8)|var|uint8
bop_6135 = relay.minimum(var_6133.astype('uint8'), relay.reshape(var_6134.astype('uint8'), relay.shape_of(var_6133))) # shape=(12, 13, 8)
output = bop_6135
output2 = bop_6135
func_6141 = relay.Function([var_6133,var_6134,], output)
mod['func_6141'] = func_6141
mod = relay.transform.InferType()(mod)
var_6142 = relay.var("var_6142", dtype = "uint8", shape = (12, 13, 8))#candidate|6142|(12, 13, 8)|var|uint8
var_6143 = relay.var("var_6143", dtype = "uint8", shape = (12, 13, 8))#candidate|6143|(12, 13, 8)|var|uint8
output = func_6141(var_6142,var_6143,)
func_6144 = relay.Function([var_6142,var_6143,], output)
mutated_mod['func_6144'] = func_6144
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6183 = relay.var("var_6183", dtype = "int8", shape = ())#candidate|6183|()|var|int8
var_6184 = relay.var("var_6184", dtype = "int8", shape = (4, 10, 15))#candidate|6184|(4, 10, 15)|var|int8
bop_6185 = relay.left_shift(var_6183.astype('int8'), var_6184.astype('int8')) # shape=(4, 10, 15)
output = relay.Tuple([bop_6185,])
output2 = relay.Tuple([bop_6185,])
func_6188 = relay.Function([var_6183,var_6184,], output)
mod['func_6188'] = func_6188
mod = relay.transform.InferType()(mod)
var_6189 = relay.var("var_6189", dtype = "int8", shape = ())#candidate|6189|()|var|int8
var_6190 = relay.var("var_6190", dtype = "int8", shape = (4, 10, 15))#candidate|6190|(4, 10, 15)|var|int8
output = func_6188(var_6189,var_6190,)
func_6191 = relay.Function([var_6189,var_6190,], output)
mutated_mod['func_6191'] = func_6191
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5187_call = mod.get_global_var('func_5187')
func_5188_call = mutated_mod.get_global_var('func_5188')
call_6206 = relay.TupleGetItem(func_5187_call(), 1)
call_6207 = relay.TupleGetItem(func_5188_call(), 1)
uop_6235 = relay.cos(call_6206.astype('float64')) # shape=(11, 104)
uop_6237 = relay.cos(call_6207.astype('float64')) # shape=(11, 104)
func_4813_call = mod.get_global_var('func_4813')
func_4814_call = mutated_mod.get_global_var('func_4814')
call_6239 = func_4813_call()
call_6240 = func_4813_call()
func_5259_call = mod.get_global_var('func_5259')
func_5262_call = mutated_mod.get_global_var('func_5262')
const_6248 = relay.const([1,9,-8,7,-2,1,9,8,-1,-2,4,-5,6,-10,7,4,1,-2,-4,6,-3,-3,8,10,-10,10,-6,5,-10,4,8,-9,-3,6,1,-1,-7,-1,-8,6,5,-3,1,-6,3,-2,8,-10,4,6,7,4,-4,1,-5,-3,5,5,4,-8,-9,-9,-4,8,4,5,-5,-5,1,-2,-5,1,1,-7,-5,-5,7,-3,-3,-1,5,8,5,9,-3,4,-8,-7,1,3,9,10,1,1,4,-3,-9,1,8,10,2,9,-1,8,-2,-7,10,9,1,-7,1,6,-3,-4,8,2,9,10,10,3,-1,-5,8,-2,5,5,-1,7,-9,-5,-4,9,-10,5,-8,-6,-9,-10,6,-7,1,-6,-5,6,-4,3,10,3,-2,4,7,1,-10,2,-2,6,2,-8,6,3], dtype = "uint16")#candidate|6248|(160,)|const|uint16
const_6249 = relay.const([True,True,False,True,True,True,False,False,True,False,False,True,False,True,False,True,True,False,False,False,False,False,False,True,True,False,True,True,False,True,True,True,False,True,True,False,False,True,False,False,False,True,True,False,False,False,False,False,False,False,False,False,False,True,True,False,True,False,True,True,False,True,True,False,False,False,False,True,True,True,True,True,False,False,False,False,False,False,False,False,False,True,False,True,False,True,True,True,False,False,False,False,True,True,False,False,True,True,True,True,False,False,False,False,False,False,False,True,False,True,True,True,False,False,False,False,True,True,True,True,True,True,True,True,True,False,True,False,True,False,True,True,False,False,True,False,False,True,True,True,False,True,False,False,True,False,False,False,True,True,False,False,True,True,True,False,True,False,False,False,False,False,True,False,False,False,True,False,False,False,True,False,True,True,True,False,True,True,True,False,True,True,True,False,False,False,False,False,True,False,False,True,False,False,False,False,False,True,True,False,True,False,True,True,False,False,True,True,True,False,False,False,True,True,False,False,True,False,False,False,True,False,False,True,False,False,False,True,True,True,True,False,True,False,True,True,False,True,True,False,True,True,False,True,False,True,True,True,True,True,False,False,True,False,False,False,False,False,True,True,True,False,True,False,True,True,False,True,False,True,True,True,False,False,False,False,True,True,True,False,False,True,True,False,True,True,False,True,True,True,False,False,True,False,False,False,True,False,False,True,True,True,False,True,True,True,True,False,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,True,False,False,False,True,True,False,False,False,True,False,False,True,True,True,True,False,False,False,True,True,False,False,True,True,True,False,True,True,False,True,False,False,False,False,True,True,False,True,True,False,False,True,True,True,True,False,True,True,True,False,False,True,False,True,True,True,False,False,False,False,False,True,True,False,True,False,True,False,False,False,False,False,False,True,True,True,True,True,False,False,True,True,False,False,False,True,True,False,True,False,True,True,True,False,True,False,False,False,False,False,True,False,False,True,True,False,False,True,True,False,True,False,True,True,False,False,False,False,False,False,False,True,True,True,True,True,True,False,True,False,False,False,False,True,True,False,True,True], dtype = "bool")#candidate|6249|(462,)|const|bool
call_6247 = relay.TupleGetItem(func_5259_call(relay.reshape(const_6248.astype('uint16'), [160,]), relay.reshape(const_6249.astype('bool'), [77, 6]), ), 0)
call_6250 = relay.TupleGetItem(func_5262_call(relay.reshape(const_6248.astype('uint16'), [160,]), relay.reshape(const_6249.astype('bool'), [77, 6]), ), 0)
func_343_call = mod.get_global_var('func_343')
func_345_call = mutated_mod.get_global_var('func_345')
call_6256 = relay.TupleGetItem(func_343_call(relay.reshape(call_6239.astype('uint8'), [10, 6, 15])), 0)
call_6257 = relay.TupleGetItem(func_345_call(relay.reshape(call_6239.astype('uint8'), [10, 6, 15])), 0)
bop_6264 = relay.minimum(uop_6235.astype('int32'), relay.reshape(call_6206.astype('int32'), relay.shape_of(uop_6235))) # shape=(11, 104)
bop_6267 = relay.minimum(uop_6237.astype('int32'), relay.reshape(call_6207.astype('int32'), relay.shape_of(uop_6237))) # shape=(11, 104)
uop_6298 = relay.log2(uop_6235.astype('float32')) # shape=(11, 104)
uop_6300 = relay.log2(uop_6237.astype('float32')) # shape=(11, 104)
func_343_call = mod.get_global_var('func_343')
func_345_call = mutated_mod.get_global_var('func_345')
call_6305 = relay.TupleGetItem(func_343_call(relay.reshape(call_6256.astype('uint8'), [10, 6, 15])), 1)
call_6306 = relay.TupleGetItem(func_345_call(relay.reshape(call_6256.astype('uint8'), [10, 6, 15])), 1)
func_5187_call = mod.get_global_var('func_5187')
func_5188_call = mutated_mod.get_global_var('func_5188')
call_6310 = relay.TupleGetItem(func_5187_call(), 1)
call_6311 = relay.TupleGetItem(func_5188_call(), 1)
uop_6317 = relay.sinh(call_6310.astype('float64')) # shape=(11, 104)
uop_6319 = relay.sinh(call_6311.astype('float64')) # shape=(11, 104)
func_3528_call = mod.get_global_var('func_3528')
func_3534_call = mutated_mod.get_global_var('func_3534')
const_6323 = relay.const([9.216794,-5.537339,9.396144,6.576930,3.445067,-0.295774,-1.461135,-7.975347,-0.997937,-7.068326,3.551713,8.546197,5.355200,5.456010,-2.472612,2.420023,-2.772076,-2.112758,2.373789,2.796981,-8.539598,0.179427,6.791508,9.012004,1.304590,9.050484,3.009349,7.958472,5.753898,4.224708,4.998267,9.106198,-5.067620,8.104068,-3.724646,-2.839855,-7.349210,9.918694,3.190785,4.385935,1.126801,3.725822,-6.112705,8.531695,-8.598689,4.432513,9.609906,0.250392,-5.536149,-8.818927,7.723679,0.562897,-1.040790,0.337254,-0.551495,-5.991828,-0.868267,-7.711694,-2.379445,-9.982393,-3.865459,2.713907,6.607932,-6.529488,6.293136,-3.903176,5.135353,9.786177,-6.925370,-1.418649,5.908148,-5.227525,-9.296778,-2.734921,-3.622952,4.766833,-3.821568,9.814615,-4.376345,-5.457491,-5.259099,-4.196330,-4.803670,0.522534,2.477351,8.773335,9.086396,-7.026035,-3.885193,-4.279719,1.486190,-8.866535,-1.014711,5.990588,7.139021,8.062494,-3.503899,1.342170,2.457874,-5.083634,-5.727237,6.323209,3.922008,-1.941643,6.181309,5.077745,-0.180485,-0.707744,9.926558,1.556294,6.278385,-9.692721,9.871076,9.854694,-7.974971,1.962579,6.911316,-5.861108,-9.725588,7.780911,-2.207014,-3.514600,-7.601310,0.312167,1.376777,-7.559158,7.233568,-9.107528,-7.345943,9.719950,8.911615,-4.930154,-7.972832,-0.617216,2.020559,-9.179945,-6.742070,-9.804302,6.935886,-3.078860,8.175552,-3.778656,5.176778,2.737789,-4.926648,-0.863871,9.867227,-0.594940,-6.538937,-5.806790,-2.553746,1.206896,3.902175,5.203280,5.042876,3.896387,-0.551729,-5.867481,3.476348,-8.154124,-7.878165,2.633086,7.365145,6.903486,-5.978533,8.470078,-0.884282,0.158278,-6.651351,9.917927,-0.874169,-2.583126,-3.053426,-6.519177,-0.366062,1.140402,-2.058693,-1.501113,-3.165539,1.072600,0.193428,-3.410878,2.530879,-2.779576,-8.099954,8.184396,-0.633813,-5.621351,-4.305429,-2.559758,8.360264,-3.886479,4.064945,2.376792,-0.018107,-9.910658,0.429151,-5.616590,1.416666,-5.421931,-8.373126,-7.660733,-2.266229,2.498369,-6.887076,4.419791,6.964285,5.474917,3.168950,-0.807496,8.808436,3.379488,7.363660,7.842823,-1.730874,3.964836,5.197858,-7.841677,-3.603231,6.535067,4.867051,-4.916313,-2.578843,2.976111,-4.922585,6.711477,8.190556,-8.084819,-1.951880,4.340404,2.046511,9.271965,-0.441723,-9.875359,4.702497,9.898449,6.865179,7.229868,7.705409,1.318142,8.972859,3.867220,2.679899,0.463174,5.587554,4.586426,4.480305,-1.357018,-0.683637,-4.776648,-3.492778,-2.922732,7.314073,1.061219,4.526522,-3.141588,5.057995,4.064808,2.223995,5.286559,1.583885,-3.899177,5.709474,-6.439273,2.224468,-8.487087,9.127847,0.294075,-3.163527,0.411541,1.780217,-1.469298,-5.196753,-6.969347,3.072819,-0.448650,-0.636001,3.174435,4.072166,5.436783,5.130455,-5.791838,-8.416844,7.954383,-1.137365,-4.468614,0.170776,9.680785,-9.227533,6.439590,6.761925,-2.586695,-1.964253,7.395092,-2.238677,6.574186,-8.991400,-7.590986,5.442019,-9.282293,-9.374191,-8.763166,9.026602,2.597558,1.124281,2.633651,6.668302,-6.053514,-8.767160,6.235161,-7.687125,-4.412646,2.817618,9.101678,-5.674085,-2.078348,1.352558,-9.274257,-7.353065,-2.196590,5.706101,-7.092789,-1.370951,-3.484529,5.735197,4.295038,-8.065079,-6.574399,-9.512346,3.947129,7.791489,3.071752,-3.946635,-1.699405,-2.456032,-9.620330,-2.582643,-3.762086,1.037855,6.743379,-8.274595,-6.653233,-1.057996,-5.926800,-6.308356,-9.120151,-0.532927,-2.555018,2.922421,0.016192,-8.419510,3.133062,5.964528,3.865618,2.096216,1.677017,7.607038,-1.334031,-2.300127,-2.529066,-4.764333,8.357065,-0.985717,4.794710,-6.480748,9.797990,-4.660435,1.420527,-8.661678,-8.436121,-2.386677,-4.586362,9.787320,7.430132,7.308315,8.932340,-2.493468,-2.102312,-6.413209,6.345494,3.928175,0.673957,0.904589,3.728074,7.472026,5.522067,8.124330,3.499990,8.860173,-5.107251,-5.449590,-8.786531,-9.200353,-6.353124,1.693878,4.719916,-3.110223,-3.486196,-0.866213,-8.413959,-3.039288,7.358558,7.218153,-8.231878,5.537250,6.905732,-9.286522,0.200393,9.638477,-3.834310,5.067939,4.037717,-1.558381,7.310551,2.522440,9.466847,-3.658966,4.063892,0.668348,-4.393294,-3.569977,2.419563,1.748981,-7.587769,-5.364603,2.159823,-4.753291,2.780060,2.310336,6.505789,-9.341299,-7.147052,5.619065,-6.294716,6.817554,-4.973175,3.384104,8.377309,-1.279374,6.235521,-3.542625,-1.906495,7.796916,2.062772,-4.493401,0.310495,7.997786,7.053798,9.862458,-3.562205,-5.182234,-1.791565,-8.251016,7.720132,0.421316,4.562901,5.717521,6.197143,2.988967,2.553036,0.503409,5.212127,-0.385537,-1.177865,-3.379189,1.042540,1.838254,-9.744158,1.567916,-7.472905,-5.809372,-7.816108,4.408795,-1.923614,-2.827764,-8.371750,-8.404810,5.480334,7.259161,-8.023813,-0.910518,-7.968269,-6.527179,8.742503,-4.784506,-2.441372,7.577247,7.380622,-7.351770,8.612236,9.874715,2.933175,7.587262,9.851640,-7.515320,0.771519,6.378051,-0.645339,-4.755280,2.325601,6.218994,-0.259014,-9.933896,8.739978,5.626711,9.332236,-2.749772,4.331917,1.433754,-3.501466,-7.206642,-9.611335,-8.735083,7.346970,-1.368108,7.336176,4.588312,-3.258158,5.673246,-3.126592,1.930960,-1.966951,-5.820939,7.013302,-6.325689,4.035511,3.145680,-7.179803,-3.498123,2.605637,-4.498807,-5.449525,-8.671578,4.670089,-4.193499,-1.845443,9.464847,-5.390600,-1.815958,-0.291255,5.074653,-1.645543,8.739015,-9.601215,-4.867702,3.905408,2.881652,-9.090970,-1.053890,2.911222,-8.620852,-1.768964,-4.718778,0.950294,5.422659,3.750838,-3.399094,6.222528,-5.448139,5.295941,3.176310,3.511958,8.699351,-9.974737,8.049114,-7.670806,-9.860094,-1.326449,1.624174,3.227880,5.529879,-5.281290,-7.317160,1.550846,7.254573,-9.145678,7.046782,1.749790,1.191520,7.561535,-0.647099,-9.054683,-9.013915,5.520208,7.415895,-9.182716,-6.736725,-9.264779,1.569562,5.710517,-8.500756,7.177718,-6.336760,-2.515736,1.324672,-1.304078,-9.441334,-0.886438,8.085993,-9.106459,-7.262312,6.234266,2.249142,-9.392628,-6.179932,-5.508357,7.180776,-6.228607,-1.534214,3.106616,-4.727367,6.627749,1.889200,-6.197982,-9.551727,3.010489,8.934951,4.010086,-2.415292,9.545667,6.496280,6.272923,-9.743318,-9.524682,2.116318,-1.767300,-6.957852,-0.939648,4.648853,-5.211760,1.300812,-5.031621,7.064967,-3.427357,3.189767,-2.890016,6.534612,0.644691,1.447325,-0.732314,-6.395739,9.497361,6.301065,-7.856863,-0.636694,-7.456624,-2.498377,-1.703705,-2.323260,6.426971,6.891702,-9.765210,1.752611,-0.815020,-1.721592,5.663655,3.915421,1.995954,-7.292599,1.198917,-7.987766,9.487858,-0.026579,-5.086126,-2.821542,8.654046,3.622076,-9.513528,2.667402,-9.038923,2.889761,-2.863407,-5.966489,0.331526,0.522396,2.517435,-4.540428,-1.515214,-4.266024,8.249466,-2.240804,-9.600485,4.246802,8.954051,3.186474,-8.499978,7.095045,5.171847,-3.123679,1.752627,5.627562,7.749697,8.570114,2.372697,6.266258,-9.352675,8.169163,9.714021,5.034694,0.648846,-9.974726,1.000739,4.142801,4.855110,-7.293012,8.774010,8.583682,9.824813,1.330894,2.744855,-3.974055,-6.955229,-3.327137,-3.586557,-3.330627,8.374773,7.147653,3.860982,3.633604,-2.393909,2.362065,-1.591373,-4.214443,9.845234,-2.544414,-1.147199,-4.461084,-5.511929,7.530334,-6.781447,-1.731233,-5.015461,-2.458910,-7.428838,5.000878,7.531728,6.730358,0.617123,-7.698356,2.470206,5.799048,3.028112,-5.485864,0.216396,-2.277963,-8.196320,6.948449,-1.457706,-1.235692,4.151532,2.439790,-5.383217,-7.392645,-2.338469,-6.711704,0.249450,-2.294415,3.121306,-3.621361,-8.857427,-7.628009,-1.269821,9.805388,4.342706,6.397396,1.114989,-7.731352,1.463866,-7.899501,8.683460,0.067724,-4.337808,3.868552,5.785990,-7.686346,-7.762546,-4.353224,-6.347258,9.824522,8.961060,6.862458,3.210843,-7.216320,-8.132203,-0.696976,2.688491,7.306169,4.536306,3.466252,-9.167173,-4.247761,-2.186319,4.144692,5.987427,-2.137616,-5.823881,6.462930,9.196888,-2.269419,-4.738803,7.424706,4.047897,-5.880015,6.959484,9.390248,1.229924,-1.782406,-5.976601,5.362464,-5.156508,-5.302274,4.937848,-0.316539,0.443797,-2.861712,-5.747073,4.598633,-6.242679,-7.741331,2.913825,-2.958931,-3.830098,-3.390073,-4.498048,-5.865081,0.333459,4.950825,-5.532735,-0.684725,8.358759,-9.504815,-5.423636,2.739369,3.455808,0.263633,6.148353,0.913380,-3.593798,-5.732433,1.015102,-6.958650,1.723141,1.375597,3.041288,4.491653,8.295000,-2.904180,4.446448,-1.880522,-1.270659,7.491070,6.726155,7.091082,-8.900624,1.290807,-9.592087,-8.719364,6.094246,2.787748,7.189271,8.142370,-9.611909,7.874604,4.032683,-9.498252,4.233379,5.962208,9.337748,-6.210148,-6.061837,2.566926,8.356328,-2.618423,-5.155074,-6.104184,-9.959449,-5.883605,8.950245,-4.908810,9.918642,-1.202292,-6.062042,-8.769819,-6.480140,6.366440,-8.007016,4.598614,1.975304,-2.992751,-7.916620,2.172886,3.566226,2.433809,1.293188,4.432413,1.682745,0.845458,-2.216045,0.672278,2.544864,4.381894,1.756964,0.057702,9.222196,-2.522907,-9.166401,-9.600167,5.051951,9.969654,-3.862034,-5.322662,-8.035338,7.943080,4.360603,-3.021366,-3.142845,-4.415125,-7.802106,-8.675451,9.184422,2.582044,-3.340486,4.338340,-1.724253,6.867151,-6.499790,-9.384708,8.825971,5.663953,-4.712398,5.567494,1.138718,-4.600371,-4.977246,5.621050,-8.038488,1.810695,5.974469,-1.661845,0.935358,-6.424416,2.466834,6.858986,-2.478388,9.007434,-4.528616,0.758469,-2.166773,0.077717,-8.371914,0.321543,-4.544881,-5.015543,9.922794,4.703306,-0.547609,-2.455891,-8.854300,-1.073703,-2.980565,8.521640,4.110047,0.406570,-7.366417,-4.255982,5.170946,7.508839,-1.499892,8.217452,0.378790,9.356309,-1.365884,4.313060,1.925176,-5.345511,-4.118382,-6.327850,-7.938823,0.174776,-7.775081,-2.590746,1.605167,6.065488,4.620246,-0.101239,6.199792,-9.342074,5.081458,-7.057389,2.929243,9.038425,-0.552227,9.812264,7.819173,-5.860693,-9.610769,6.043883,-8.083545,-1.316305,-9.167974,-9.710758,-3.551796,6.315996,7.511834,-5.728957,-6.931468,-9.093515,7.247405,-9.803484,-3.779065,-2.487617,3.781194,7.477687,8.236007,8.903546,-2.042913,2.330741,-9.258084,-4.338034,9.801983,-5.287913,-4.110120,-7.772890,1.970656,-1.463082,3.389693,-9.994883,1.807133,3.163430,0.717654,-7.727367,-5.753404,-7.411628,-4.398065,-4.925024,2.185987,-7.027904,2.073863,2.864182,6.644474], dtype = "float64")#candidate|6323|(1040,)|const|float64
const_6324 = relay.const([4.185039,1.955650,6.060025,-4.622383,8.082635,-3.248042,9.039771,0.044765,4.908369,9.793280,5.694873,1.946778,-4.253808,3.642584,3.031563,-6.243948,1.158089,1.028694,0.980571,5.370754,4.416350,9.942329,-5.110373,9.350580,-9.944709,6.007813,-1.044080,-7.078288,4.411426,-6.451042,-5.539107,1.336319,-9.469841,-2.795304,-8.224844,-8.109438,9.222999,-1.559989,7.893388,6.155899,-9.356402,0.537567,-5.871641,-5.868305,8.193852,-0.988422,8.665058,-6.091197,-9.432713,-8.627698,-4.530356,-5.690623,-8.007723,9.003519,3.369489,1.693466,7.375727,-2.362360,-2.910341,6.873151,2.605197,3.848769,6.773289,-8.752232,-8.347884,-0.724767,9.318524,-2.444737,-2.610980,2.009400,-6.373343,3.424758,5.321745,2.823465,-2.412573,-4.042223,-2.688375,6.864989,4.077043,-0.538260,-2.755608,-1.712229,4.370453,0.453070,-3.800910,6.057007,3.458625,3.632605,-8.084169,-7.093635,7.717823,-0.348914,-4.312680,-2.980344,8.295664,2.831554,1.952467,-6.217905,-8.233139,-3.844640,-0.767950,9.828491,1.078595,6.873681,-3.767930,-1.411287,-9.141051,7.232755,-6.760259,-1.156031,-4.673375,0.485599,6.643130,3.454807,1.466408,-9.267025,7.718467,2.255269,-9.259517,6.709579,-0.075216,5.383592,-9.549741,2.996696,-7.624819,3.452935,8.203091,-6.580180,-3.765579,-2.970360,-6.447062,9.460044,4.938346,-4.791174,7.410812,-9.554684,4.972809,-6.109510,-8.637951,8.211731,5.993011,-1.621897,9.105436,9.607051,-3.618220,-8.813516,1.375289,-1.254868,-7.157124,-1.599015,-3.009743,-7.700028,-2.082255,-4.135025,-8.380028,7.957818,-1.799688,5.526065,7.973641,5.596087,-0.492549,-4.214215,8.413661,-2.252784,4.957293,-7.035212,5.590095,4.207626,4.718410,1.623434,9.370837,-2.848997,-6.961290,-8.333839,-9.552157,9.587072,9.171102,-7.988078,-6.018106,-8.615837,-0.858580,-9.283584,2.406876,6.790624,2.762076,6.535729,-6.861124,-9.097322,3.777568,-1.290348,-6.134262,-1.872670,6.910943,-1.770553,-8.759908,1.865593,8.514549,-7.409298,1.604980,-1.651308,-4.849778,-6.341070,2.898882,1.002029,7.969998,-5.264741,2.908435,6.248010,-4.940628,7.841363,-0.211323,7.168549,-6.342460,3.938963,4.742705,-2.915070,7.597458,-8.343000,4.324154,9.148603,8.118089,-0.462921,-0.921000,1.277946,1.560972,7.282748,4.624330,-5.094228,4.143024,-4.637168,1.796312,-3.213355,8.522844,4.673353,6.497178,1.946444,-7.062062,4.030792,1.523362,2.929961,3.264298,-7.074534,4.402812,-8.937227,-2.236457,-0.746997,9.480369,-3.383928,9.713280,0.693345,-5.232875,-4.447206,-7.821428,-8.450632,-5.503846,0.545568,-1.957532,0.263328,-3.938959,-7.292893,-6.745290,-6.325302,-7.888372,-1.924393,-5.719315,-2.581804,-2.388780,7.354701,-6.872673,-9.629572,-5.404882,1.768954,4.495938,-9.442105,-8.476084,0.495992,1.008735,5.119471,-8.076387,-1.605056,6.338553,-7.911947,8.682805,7.203768,3.522154,-0.022236,3.829368,-7.854867,-5.438885,-4.469343,-4.628936,3.534964,1.919171,6.198924,-8.066072,-8.399199,-5.137124,9.741209,-1.787207,6.909512,-5.469791,9.175307,3.448241,8.024938,5.359886,6.035210,8.987063,4.242681,8.235866,-6.337374,-2.222482,3.861154,9.458917,-8.432967,2.369048,8.959321,-3.809633,3.815340,0.760059,8.546909,-7.537599,-3.120746,-7.706947,-6.028562,-8.845275,6.225713,4.925644,8.893477,-7.878718,5.982042,2.788906,0.441826,9.766123,-6.519075,1.389628,9.165383,-3.437785,1.502656,-3.652532,-4.728571,3.083412,6.889107,-7.796677,5.339262,9.807004,2.882222,-0.712861,-2.421894,8.575175,-0.713120,-6.436229,6.425937,6.172703,2.363658,-8.233244,-4.508388,-1.402801,2.122175,-4.320571,3.562628,5.506880,-6.615870,1.048526,7.461140,1.232899,-7.478737,-4.849609,-9.333719,-2.954144,1.530065,1.036924,-8.048913,0.237388,4.694367,2.707680,2.521791,5.510608,-1.033728,-8.185944,4.013486,8.759587,-6.537521,2.768636,9.484562,-7.318605,7.939047,-5.566969,2.484222,6.301072,9.656336,5.994751,1.433786,-8.014618,-5.514389,9.866798,9.185511,5.979473,-9.422782,-0.170336,-1.194913,-4.739871,3.593196,-9.353300,8.211254,2.174473,-7.372671,6.042956,3.707775,4.570338,0.661254,0.758478,5.218260,-7.615548,-3.272668,6.411094,7.960725,-1.516955,-7.452354,-9.811342,-2.518714,-4.290707,-8.521367,-9.515946,1.059441,4.599665,-1.401956,8.845574,8.871736,-5.105073,9.905897,6.993082,3.951829,2.964076,-2.089648,8.576200,2.710407,3.366557,-8.754010,2.871578,9.743863,-3.280947,8.510866,1.722161,2.386729,-4.805718,6.654007,6.483680,4.265474,-5.226246,-2.566254,-2.245131,7.572155,-5.427891,1.350250,6.096366,-9.245482,2.544429,-6.548163,1.905130,-5.079253,-4.564136,5.711765,-1.200191,-2.177868,-3.474795,0.598049,-2.503858,-4.541415,-9.107688,-3.927080,-8.862662,9.018616,-5.989732,-5.894138,2.741567,-1.944995,-1.177663,1.933271,-0.234202,3.521288,0.898159,-6.175415,2.440956,-4.608097,-4.971406,9.266081,9.954513,-0.277728,-7.669815,9.947016,2.717806,0.828000,1.036795,3.872196,-1.810239,-5.764256,0.107260,2.853870,4.190458,-5.487930,-7.819130,-4.189991,-1.622594,-6.469727,3.423306,-2.545014,8.629882,-3.899390,-4.922548,-3.445178,-1.955058,-7.896000,5.804711,-5.441171,4.529559,3.343191,4.209448,-3.684360,-0.167553,-3.952791,-1.812313,5.608795,5.653863,4.337572,8.239588,-3.004632,-6.540423,8.789172,4.112293,3.295526,-9.939184,-7.789039,-7.719513,8.561261,9.964679,9.004361,-6.711185,2.530533,-2.577997,9.390819,0.037989,-9.775049,5.213032,1.608977,1.495230,5.776361,2.693175,1.567923,-3.659889,4.366677,1.487084,-8.936397,6.050547,0.058260,-5.280412,8.596673,-7.721594,4.683363,7.358242,-5.938907,4.884426,-3.979546,-4.003795,4.182043,-3.178420,-2.876429,8.736732,3.192840,9.170703,-9.865057,0.852484,3.901522,5.958308,8.151221,5.621807,-1.110974,-2.096324,-2.732416,-7.493483,9.883611,-4.621326,-2.653013,-6.232933,-3.842375,-4.612407,4.652211,-0.875946,-7.631598,-2.415385,-1.800575,9.399963,-2.965696,4.019409,-8.286272,-6.137199,-2.195484,-2.050956,-6.255021,-2.636851,-9.134623,-7.278550,-7.636503,-3.326376,-4.581372,2.204044,-5.205624,5.820437,-1.935884,7.654059,8.260441,-1.753176,-7.415323,-3.535514,-5.633636,3.815274,-6.604812,-2.996614,-1.382968,6.681029,4.638260,3.996923,9.029498,2.591414,9.522593,1.747231,-0.707381,-3.960663,-4.047144,-2.891045,8.025183,6.614236,0.381320,7.069066,-2.566138,-1.177886,0.677602,6.630869,4.764600,-9.739257,-5.744799,4.401231,7.993164,4.200383,-7.968278,-3.384276,-5.762528,6.680958,-9.319923,9.834865,3.229411,-5.215344,-3.730847,-2.841953,-2.490494,-1.350474,-1.490555,-2.482982,-1.882075,4.173879,1.798933,-5.866841,9.899358,5.057320,-9.474469,-5.033751,-8.925474,-9.709127,-6.051805,-5.265021,5.071444,9.672403,-1.069144,-8.774365,-1.811532,-6.775248,7.766699,8.034526,-2.327241,-2.535926,3.644132,4.013505,-9.089513,-6.597105,-5.079628,1.884286,-6.753257,2.908592,-6.768900,5.751870,2.758752,-0.085965,-2.476149,1.016915,-5.505286,-4.617708,-7.016856,-5.659371,6.094604,9.337971,9.669575,-9.179291,-6.909586,8.791511,6.623091,1.466509,-3.964162,1.506588,5.096758,7.476582,4.044685,3.530750,2.308518,-4.056321,5.060741,-3.422566,-5.417756,-2.166365,-6.379283,-3.335538,-0.629591,-1.514309,9.510214,9.443567,-2.941282,8.599907,-7.412447,1.036925,-9.051332,5.250171,-1.301240,-5.315924,-3.775398,9.746962,-7.536390,-0.922115,9.529954,5.266505,-0.737000,3.252257,-7.770405,-0.927061,2.588253,-8.449296,8.392026,7.299382,-2.899970,0.655538,-0.285662,7.565194,-6.565090,2.007398,8.584436,-9.351111,-9.961837,-4.754597,-5.215219,4.588188,6.770250,8.770833,2.048511,-4.302988,3.420926,-3.722950,-0.647183,-7.463062,2.716778,-0.773465,8.593138,4.739120,-9.732645,-7.362738,-1.899284,-0.903112,2.374339,6.629410,1.513110,-4.886823,3.313505,-6.435755,3.841150,-4.954896,8.991051,0.049544,8.824580,-3.207620,-8.324712,8.580134,-8.623867,-5.731032,8.757023,9.193694,6.235423,6.149130,-3.689857,-9.006168,3.863787,5.598081,9.865518,2.021526,8.782202,-2.840104,-7.839791,-2.574325,-9.114756,-5.491670,-3.690518,-5.475320,-6.240373,-3.966717,2.137093,-2.394041,5.202286,8.403925,-2.306453,-2.605989,-5.831608,0.494246,-5.863097,-6.122692,9.499954,-3.893030,-3.647420,7.190271,3.353967,5.187564,9.717921,0.163947,6.665276,7.781361,2.173691,1.035566,7.997834,-3.846948,8.691452,-5.510389,2.128423,-4.341323,3.120797,-7.038358,-5.832071,1.165633,3.517276,-2.898396,-5.900263,-4.764286,9.244026,5.972419,3.576544,-8.495351,-2.974711,6.050942,-4.755218,2.039006,3.352168,-2.927998,-2.487721,4.928148,-2.423444,-5.770644,-9.630826,-1.150449,8.769000,-4.320754,4.674734,2.055175,8.701876,7.266695,-3.499831,4.213963,7.614711,7.783293,5.113103,1.959770,2.168792,-6.175557,0.115412,5.936846,8.926128,5.288973,3.965633,-4.103739,1.365893,-8.754312,8.223289,9.172154,1.776523,-3.358323,-8.514156,-9.944195,0.929655,0.542410,9.927138,5.655033,-7.584667,7.818554,2.648890,-5.122571,1.267990,7.142370,-4.309000,5.681301,0.875742,-7.399429,-5.405555,3.073206,-7.339058,-2.481180,-5.269517,-4.333846,-1.174883,-7.682569,8.189278,-4.506796,0.102381,7.697436,-2.565680,4.390994,-7.545447,0.013275,-6.863799,2.445821,1.145667,-6.863576,7.471137,-0.822266,-9.593113,-2.371286,2.938030,-9.356314,-7.362053,-2.872412,9.168818,-3.109784,-3.884331,-1.598625,4.066841,3.278544,1.416878,-3.367156,-2.545768,-2.280782,1.049859,-6.789574,1.494796,5.957580,0.915228,-2.582337,1.367037,-5.084841,0.824659,-9.435978,-4.907607,0.714468,9.549705,7.567300,3.153906,-8.378845,-5.477431,9.389512,4.939767,4.937140,4.992885,5.553886,-5.476539,-5.372365,-5.351935,-8.947043,-4.406513,-5.996152,6.065377,9.441106,5.820169,8.200231,-5.685292,7.342450,4.219556,-4.406141,9.714988,6.924766,-1.827346,5.085893,-7.919853,2.124818,2.612860,-2.563407,3.393194,6.620496,8.614718,-3.531703,-4.866822,-1.662127,-5.927039,-5.269812,-1.540191,-9.107599,7.414029,-3.283200,1.120983,-3.653997,6.181803,-8.572893,-3.192323,-9.816550,-9.394375,6.993464,-9.725125,1.649353,6.773613,-1.906389,8.141302,-1.334284,-8.169422,1.161901,-7.649742,6.009362,-3.844073,5.411137,0.241225,0.666460,-1.956344,-8.896091,-0.395514,-6.449103,6.495616,6.332504,4.824566,3.267712,-9.291259,2.494434,-2.796087,8.300146,-7.493344,5.918150,-4.644103,-9.691612,-3.502513,1.918259,-3.397547,-1.864706,8.679273,-0.655391,4.841524,-3.373574,-2.420746,-2.124313,-6.577757,-0.043253,-8.547628,3.992111,-4.960604,-2.292170,-0.858630,9.600746,1.488394,6.466469,2.933563], dtype = "float64")#candidate|6324|(1056,)|const|float64
call_6322 = relay.TupleGetItem(func_3528_call(relay.reshape(const_6323.astype('float64'), [16, 13, 5]), relay.reshape(const_6323.astype('float64'), [16, 13, 5]), relay.reshape(const_6324.astype('float64'), [1056,]), relay.reshape(call_6239.astype('uint8'), [900,]), ), 5)
call_6325 = relay.TupleGetItem(func_3534_call(relay.reshape(const_6323.astype('float64'), [16, 13, 5]), relay.reshape(const_6323.astype('float64'), [16, 13, 5]), relay.reshape(const_6324.astype('float64'), [1056,]), relay.reshape(call_6239.astype('uint8'), [900,]), ), 5)
bop_6327 = relay.left_shift(uop_6317.astype('uint64'), relay.reshape(uop_6298.astype('uint64'), relay.shape_of(uop_6317))) # shape=(11, 104)
bop_6330 = relay.left_shift(uop_6319.astype('uint64'), relay.reshape(uop_6300.astype('uint64'), relay.shape_of(uop_6319))) # shape=(11, 104)
uop_6332 = relay.sin(uop_6317.astype('float64')) # shape=(11, 104)
uop_6334 = relay.sin(uop_6319.astype('float64')) # shape=(11, 104)
bop_6348 = relay.less_equal(uop_6332.astype('bool'), relay.reshape(bop_6264.astype('bool'), relay.shape_of(uop_6332))) # shape=(11, 104)
bop_6351 = relay.less_equal(uop_6334.astype('bool'), relay.reshape(bop_6267.astype('bool'), relay.shape_of(uop_6334))) # shape=(11, 104)
var_6368 = relay.var("var_6368", dtype = "uint64", shape = (11, 104))#candidate|6368|(11, 104)|var|uint64
bop_6369 = relay.equal(bop_6327.astype('bool'), relay.reshape(var_6368.astype('bool'), relay.shape_of(bop_6327))) # shape=(11, 104)
bop_6372 = relay.equal(bop_6330.astype('bool'), relay.reshape(var_6368.astype('bool'), relay.shape_of(bop_6330))) # shape=(11, 104)
uop_6373 = relay.rsqrt(bop_6264.astype('float32')) # shape=(11, 104)
uop_6375 = relay.rsqrt(bop_6267.astype('float32')) # shape=(11, 104)
output = relay.Tuple([call_6239,call_6247,const_6248,const_6249,call_6256,call_6305,call_6322,const_6323,const_6324,bop_6348,bop_6369,uop_6373,])
output2 = relay.Tuple([call_6240,call_6250,const_6248,const_6249,call_6257,call_6306,call_6325,const_6323,const_6324,bop_6351,bop_6372,uop_6375,])
func_6377 = relay.Function([var_6368,], output)
mod['func_6377'] = func_6377
mod = relay.transform.InferType()(mod)
mutated_mod['func_6377'] = func_6377
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6378 = relay.var("var_6378", dtype = "uint64", shape = (11, 104))#candidate|6378|(11, 104)|var|uint64
func_6377_call = mutated_mod.get_global_var('func_6377')
call_6379 = func_6377_call(var_6378)
output = call_6379
func_6380 = relay.Function([var_6378], output)
mutated_mod['func_6380'] = func_6380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4241_call = mod.get_global_var('func_4241')
func_4243_call = mutated_mod.get_global_var('func_4243')
call_6423 = relay.TupleGetItem(func_4241_call(), 0)
call_6424 = relay.TupleGetItem(func_4243_call(), 0)
func_5673_call = mod.get_global_var('func_5673')
func_5674_call = mutated_mod.get_global_var('func_5674')
call_6440 = relay.TupleGetItem(func_5673_call(), 0)
call_6441 = relay.TupleGetItem(func_5674_call(), 0)
func_3037_call = mod.get_global_var('func_3037')
func_3039_call = mutated_mod.get_global_var('func_3039')
call_6478 = relay.TupleGetItem(func_3037_call(), 0)
call_6479 = relay.TupleGetItem(func_3039_call(), 0)
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
const_6498 = relay.const([[-8,6,-6,-7,-8,8,9,-2,-5,9,9,10,8,-8,7,5,5,-7,10,-1,-6,-2,8,-2,-4,7,-9,-3,-3,6,-1,5,2,-6,-3,-1,-10,4,7,-3,6,-6,10,-2,10,-3,10,-8,8,-5,5,-2,8,-4,-1,-6,8,-2,1,1,3,-6,-2,5,10,-2,5,9,9,6,2,-7,-6,-9,6,-2,-6,1,-3,-7,-6,8,-1,3,-10,-10,-5,-3,9,-9,3,-3,2,-6,-10,-7,-2,-8,-2,2,3,4,-10,-8,10,3,3,-2,-2,9,3,-10,3,-7,10,6,-3,1,7,6,9,1,-7,-6,-3,-1,-4,-1,-9,-1,10,-2,8,-10,-3,4,-6,-3,-10,-2,-7,-1,-3,10,-3,-1,-8,9,4,-5,-6,8,-6,4,3,2,8,3,-8,-3]], dtype = "uint16")#candidate|6498|(1, 160)|const|uint16
call_6497 = relay.TupleGetItem(func_2853_call(relay.reshape(const_6498.astype('uint16'), [160,])), 0)
call_6499 = relay.TupleGetItem(func_2856_call(relay.reshape(const_6498.astype('uint16'), [160,])), 0)
func_2607_call = mod.get_global_var('func_2607')
func_2609_call = mutated_mod.get_global_var('func_2609')
var_6512 = relay.var("var_6512", dtype = "float32", shape = (1144,))#candidate|6512|(1144,)|var|float32
call_6511 = relay.TupleGetItem(func_2607_call(relay.reshape(var_6512.astype('float32'), [1144,])), 0)
call_6513 = relay.TupleGetItem(func_2609_call(relay.reshape(var_6512.astype('float32'), [1144,])), 0)
output = relay.Tuple([call_6423,call_6440,call_6478,call_6497,const_6498,call_6511,var_6512,])
output2 = relay.Tuple([call_6424,call_6441,call_6479,call_6499,const_6498,call_6513,var_6512,])
func_6515 = relay.Function([var_6512,], output)
mod['func_6515'] = func_6515
mod = relay.transform.InferType()(mod)
mutated_mod['func_6515'] = func_6515
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6516 = relay.var("var_6516", dtype = "float32", shape = (1144,))#candidate|6516|(1144,)|var|float32
func_6515_call = mutated_mod.get_global_var('func_6515')
call_6517 = func_6515_call(var_6516)
output = call_6517
func_6518 = relay.Function([var_6516], output)
mutated_mod['func_6518'] = func_6518
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5287_call = mod.get_global_var('func_5287')
func_5289_call = mutated_mod.get_global_var('func_5289')
call_6536 = func_5287_call()
call_6537 = func_5287_call()
func_5557_call = mod.get_global_var('func_5557')
func_5558_call = mutated_mod.get_global_var('func_5558')
call_6553 = relay.TupleGetItem(func_5557_call(), 1)
call_6554 = relay.TupleGetItem(func_5558_call(), 1)
output = relay.Tuple([call_6536,call_6553,])
output2 = relay.Tuple([call_6537,call_6554,])
func_6557 = relay.Function([], output)
mod['func_6557'] = func_6557
mod = relay.transform.InferType()(mod)
output = func_6557()
func_6558 = relay.Function([], output)
mutated_mod['func_6558'] = func_6558
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4180_call = mutated_mod.get_global_var('func_4180')
call_6608 = relay.TupleGetItem(func_4179_call(), 0)
call_6609 = relay.TupleGetItem(func_4180_call(), 0)
func_4241_call = mod.get_global_var('func_4241')
func_4243_call = mutated_mod.get_global_var('func_4243')
call_6626 = relay.TupleGetItem(func_4241_call(), 1)
call_6627 = relay.TupleGetItem(func_4243_call(), 1)
output = relay.Tuple([call_6608,call_6626,])
output2 = relay.Tuple([call_6609,call_6627,])
func_6636 = relay.Function([], output)
mod['func_6636'] = func_6636
mod = relay.transform.InferType()(mod)
mutated_mod['func_6636'] = func_6636
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6636_call = mutated_mod.get_global_var('func_6636')
call_6637 = func_6636_call()
output = call_6637
func_6638 = relay.Function([], output)
mutated_mod['func_6638'] = func_6638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4813_call = mod.get_global_var('func_4813')
func_4814_call = mutated_mod.get_global_var('func_4814')
call_6641 = func_4813_call()
call_6642 = func_4813_call()
output = call_6641
output2 = call_6642
func_6656 = relay.Function([], output)
mod['func_6656'] = func_6656
mod = relay.transform.InferType()(mod)
output = func_6656()
func_6657 = relay.Function([], output)
mutated_mod['func_6657'] = func_6657
mutated_mod = relay.transform.InferType()(mutated_mod)
const_6675 = relay.const([[[-4.625477,-8.658714,-6.593684,8.259217,-7.749627,8.446486,5.943970,-9.244066,6.369426,5.420194,2.466907,0.515958],[-3.918087,-3.120921,3.633565,-4.452676,-9.989176,3.116469,-6.901105,-7.732154,-5.454112,-4.708974,-1.942980,-1.057569],[5.777240,-4.271670,5.100220,4.089875,7.330542,-3.358994,8.628488,-4.212771,9.130360,0.003942,5.816098,-6.586640],[8.652793,1.734892,9.355903,6.604505,4.551896,0.931032,-8.168020,-6.083941,-8.868996,-9.122090,-0.239927,-0.344986],[-0.969733,3.027324,5.770485,-3.545783,1.114777,7.654625,0.785204,8.270714,-9.090310,7.645865,8.312062,-8.504146],[-2.994016,-4.684384,-5.907294,-2.925199,-7.267455,-4.203658,-4.916089,-1.845729,-3.868648,-0.507332,0.360198,7.904706],[2.930109,-6.609094,-9.857083,-6.628859,7.864538,2.885805,5.997431,8.537750,-1.209327,-8.382353,-0.384780,-8.793603],[-6.145588,-7.677178,-6.124997,7.137899,-8.079880,0.137910,-6.187164,6.179788,-6.906775,1.017451,-5.426767,8.488915],[-7.374003,3.573137,-7.144598,-8.314740,1.787848,-6.351232,-2.147462,2.276135,4.963603,6.058208,-1.993544,-6.350574],[-8.807579,4.055921,-0.891655,3.180764,-9.395219,1.532833,-7.972309,4.287200,-4.020308,9.137981,1.161634,9.381294],[9.922900,-6.902441,2.382917,-1.014683,9.680399,-3.046436,-9.582973,-4.496946,9.443487,-4.573166,6.943964,6.912173],[2.706842,-5.927139,1.292647,-5.836508,6.645771,-8.276439,2.231685,-4.319282,-6.071216,-6.594378,-4.712772,5.652043]],[[-4.787222,9.423820,6.404079,6.381655,1.927288,4.154903,5.375300,-5.168163,8.521293,3.402763,6.602414,7.784555],[-4.251883,1.757149,-3.047140,-5.104963,-3.903709,0.719283,-2.145108,-3.724014,-9.041308,-6.516420,1.101531,-4.840640],[-0.628948,4.175327,0.336634,0.691153,-4.826988,-6.400730,-2.205436,2.313970,-1.788049,-0.002629,2.744437,8.746674],[2.025245,9.106878,-9.691214,7.761291,2.829146,-8.598380,1.171629,6.558055,-5.576972,-2.496883,-6.202717,4.346772],[-2.286232,-9.189227,0.044936,-0.274826,4.702553,7.500759,2.369231,-6.914755,-1.401741,-8.179305,6.061333,9.615684],[5.774512,-6.761281,-3.745258,3.148319,0.129207,-2.250349,7.605024,7.226156,8.221996,-3.207692,8.939970,7.789326],[5.203315,0.357818,1.460718,4.235801,2.353247,1.815462,5.104927,-7.350980,-9.244222,9.297555,9.492292,-8.608475],[-5.433261,-2.375409,-0.894438,7.214298,7.499544,-7.050427,7.929198,0.775445,0.727984,-2.995386,3.222912,4.025948],[-8.539600,5.237354,-2.236096,-7.808777,-9.641923,-9.754371,-9.364857,5.330248,6.761899,5.375095,8.863605,1.201965],[9.832065,4.234331,-4.682337,-5.134136,-7.123318,9.431854,0.501098,4.102297,-7.900986,-0.111164,1.976002,-5.147783],[7.383829,8.879381,-5.806563,9.970419,7.535483,2.663189,-4.877686,-1.083843,2.591955,8.343652,9.223380,4.114563],[-3.691556,-6.643086,4.866774,-7.823118,-2.639675,9.587111,-3.078464,-1.950395,7.109501,-0.007758,7.727194,-3.205903]]], dtype = "float32")#candidate|6675|(2, 12, 12)|const|float32
var_6676 = relay.var("var_6676", dtype = "float32", shape = (2, 12, 12))#candidate|6676|(2, 12, 12)|var|float32
bop_6677 = relay.floor_divide(const_6675.astype('float32'), relay.reshape(var_6676.astype('float32'), relay.shape_of(const_6675))) # shape=(2, 12, 12)
func_996_call = mod.get_global_var('func_996')
func_999_call = mutated_mod.get_global_var('func_999')
const_6688 = relay.const([-9.583483,-4.611135,4.502772,-0.947984,0.189728,7.516171,4.380320,0.606097,4.911427,-5.305517,-2.674926,-4.023435,3.749242,-0.341337,-8.460326,-4.598364,2.361540,8.578499,-8.008213,-5.607594,-5.775102,7.887694,-4.214222,8.445109,5.066134,-2.085292,-2.578396,3.490746,9.274534,-9.494719,5.625709,-0.937987,1.749804,-7.165109,-8.504479,7.131327,-5.434328,-0.958119,-3.282337,-3.996620,8.506593,5.462008,2.169347,5.433438,-7.372543,9.734971,-6.786267,-6.745683,8.754452,-4.467522,-0.339419,2.031532,-3.359620,6.837591,8.312438,-2.552245,-1.638391,-1.534057,-6.794831,-9.008401,6.926508,2.692107,-4.146451,-1.626378,-2.059200,6.078991,-8.220968,4.394152,-1.282746,3.919966,0.975957,-1.961849,7.399282,9.660998,-4.209377,-2.165498,9.182031,0.703948,-1.801032,-5.856456,-7.793941,6.668007,-3.819405,-0.195276,5.740324,-3.124627,9.109413,-0.946489,-7.422762,4.714249,-1.224843,-1.876134,8.587285,6.467356,7.124449,-1.040406,5.698930,0.995446,-7.159952,-2.666355,4.912123,-3.446982,4.816979,-4.337666,1.133725,-2.068895,5.786880,9.663470,-6.133332,-7.270267,-5.154796,-9.985161,-0.630823,7.006545,7.988923,-6.414836,6.829748,2.583492,-9.105862,-4.544018,2.419431,2.632744,6.518842,4.492046,4.972194,-4.007808,-2.708849,2.742587,-7.668670,-5.818684,-9.975703,-8.810977,4.153888,-6.724103,6.723253,2.284444,8.432641,-4.450023,-7.479446,-1.120545,9.738765,5.410717,8.771815,5.399641,-6.322169,6.841913,-7.845656,-9.394261,-9.092575,6.905609,4.118746,-0.642428,7.224812,0.314633,2.718636,8.144586,-8.513232,-2.645698,4.088751,1.511044,6.880153,-4.931691,4.261350,-6.201283,1.181698,2.214229,-6.670406,3.139658,-7.610874,1.455972,5.043200,0.003578,-5.224076,6.627181,5.261684,9.786651,-3.041742,-0.109323,-6.005822,7.737175,1.446282,-0.380313,-9.016796,1.413392,-9.413566,-5.993437,-8.822077,-5.521932,-6.979409,-2.233091,-7.527927,-8.979275,-2.375673,-2.371451,2.593621,-0.672476,1.494915,1.994774,1.332780,-5.771843,9.216788,9.629146,-1.243622,-2.598112,1.846787,-5.660426,-4.726355,-5.998852,-1.023993,1.819562,-7.128629,-6.425690,-2.961414,-5.911041,-8.120659,-2.661537,8.673264,3.287312,1.151017,-6.169322,3.829141,-8.188332,-4.950845,-1.460962,-8.837112,-8.722842,1.589805,-9.889762,-5.212328,0.433820,2.114572,6.604807,7.348515,9.132502,-4.734088,-1.670309,-1.438610,-8.030765,8.764203,0.080065,-1.728012,0.389827,-8.633848,-5.198604,-7.205555,-9.141317,6.009890,-6.943070,-2.407943,3.054525,-6.566726,-6.811242,-3.606423,1.654033,0.372100,1.606703,-0.059360,-9.789436,-7.404476,-1.936632,-9.340463,5.614284,-5.948829,9.319692,5.315002,9.967706,-4.242137,-4.465036,-4.217704,-2.788230,7.863121,-0.038284,-8.240752,-2.390295,6.457533,6.292896,1.597905,4.319159,4.774081,4.567105,5.468157,-6.956123,-3.764466,-1.262770,-1.833911,5.951931,2.580652,8.984381,-4.476492,-5.931130,-9.833122,2.898213,-7.079894,8.751968,8.911613,-9.845750,-7.720420,-2.647715,-9.233968,1.314954,-2.474539,-7.006901,-8.952860,1.517837,6.378197,-2.097870,-9.788042,-9.946812,-3.769920,-6.814643,-7.150917,-7.877424,3.857773,0.686226,-8.280874,-4.791402,3.902816,-2.532139,-4.873985,-4.252678,4.908319,-5.641123,6.412579,5.546649,-7.679769,9.039670,-7.427525,6.500879,2.669231,1.215683,-4.849337,-7.230550,-2.427414,8.073867,-9.793058,2.334531,1.560341,4.551885,-8.976754,-5.263823,-9.375297,4.697501,-8.752124,-2.517605,6.169299,8.263424,3.653016,-6.814321,-4.909516,5.031059,7.074853,-2.999780,-2.489028,6.565062,-9.509630,8.423185,-3.844223,-6.969570,-3.473645,-8.663439,-8.535568,7.272767,8.984628,-6.861978,1.607708,-3.268257,-3.703502,4.732008,7.161745,4.052846,9.863178,-4.202907,6.464767,-6.869089,-1.267954,1.397535,-5.269791,-0.936359,-2.650904,4.768620,-3.841682,5.173666,-8.329445,9.293930,2.961114,-3.406642,-0.251753,-2.380550,8.039203,0.847311,1.626306,-6.136101,8.316790,0.523011,7.860182,8.172566,1.191891,-4.349681,-3.351247,2.625525,-7.973288,-0.859189,-1.804665,-6.455777,7.888821,0.026045,8.010037,-8.149152,1.041899,-0.293859,-0.022958,-9.348354,-4.458588,3.346683,6.728527,0.644968,-2.483299,-2.972358,-0.776721,-5.685513,-7.435722,7.392853,-9.056990,-7.862397,9.627760,-7.722197,-1.873523,8.263413,-9.504757,8.614801,9.127139,5.297443,-2.551801,0.056351,5.815537,-3.370626,1.774869,9.909246,6.756329,8.245618,-4.492297,-8.136191,9.282892,-8.663053,9.371423,3.263575,-2.517078,-1.525118,-0.288787,1.538279,-4.852912,6.566058,1.858009,6.771566,-4.373537,-6.653164,-1.693058,9.770950,-3.748038,2.491589,-0.463120,2.728273,-9.138372,8.509413,2.667004,-0.740780,6.198943,0.076137,-3.487570,3.208386,-6.945714,2.291378,5.002060,-6.189278,-5.418448,2.468165,-1.172786,6.365922,-5.763486,0.525958,-2.985834,6.968958,3.572004,-1.767475,0.698661,-4.095282,0.565622,1.254857,-0.721219,4.042514,6.873274,9.382750,1.615565,-3.389608,-7.510742,3.724655,8.871516,-3.283786,4.610357,-0.792599,-2.053836,-6.106801,5.206847,-6.639342,1.486766,-2.045042,-1.178410,-4.343855,2.882488,-1.462343,-9.130884,-7.800812,-8.528769,-3.266816,1.316572,6.624795,5.209771,-8.151713,8.663279,7.440404,-2.186088,8.305228,8.872857,-9.757362,2.634355,-6.434149,-5.707676,0.522952,0.583413,-5.979158,7.952659,2.568890,-4.056211,0.842157,-6.091694,-4.969683,-4.154100,-8.725579,-6.278803,-0.578466,0.122222,7.298511,2.232423,-0.380981,7.008538,-3.871021,-7.627439,0.615748,1.637796,-8.197994,4.003491,-8.002598,0.967626,-4.973921,5.192857,7.248253,4.406363,-9.409634,4.457721,-3.980972,1.483287,9.105269,-0.908519,-6.826193,6.808014,0.288346,-3.143509,8.352989,-6.205833,0.733514,-2.658744,-7.751313,4.849745,9.352754,-5.807980,1.710822,-6.737436,4.622508,-9.833855,-3.005667,5.901991,-5.245926,2.104631,6.878213,6.563046,9.863558,2.883160,-0.500973,-4.732958,4.700548,8.469630,-5.752672,-4.267180,-5.336895,-2.860415,-1.862290,-9.057815,3.675393,-7.495288,-2.075401,1.107677,-4.370369,1.636552,8.895944,-1.760912,-7.729278,-3.412322,2.956191,5.264056,4.874594,-2.221864,0.834101,-1.145533,-2.732003,0.373271,4.408756,-5.463420,4.407529,-1.436648,4.305148,9.723384,-8.483961,-7.694672,-7.938253,1.900170,5.890950,-0.391093,-1.911364,4.576720,1.864188,5.223164,6.641256,-0.843453,-9.948141,-9.764283,4.834925,5.437016,2.645802,8.203502,6.725161,3.924659,-2.874626,1.811733,-9.355331,7.991642,9.464283,-8.526648,-6.618492], dtype = "float64")#candidate|6688|(648,)|const|float64
call_6687 = func_996_call(relay.reshape(const_6688.astype('float64'), [9, 6, 12]))
call_6689 = func_996_call(relay.reshape(const_6688.astype('float64'), [9, 6, 12]))
bop_6717 = relay.divide(const_6675.astype('float32'), relay.reshape(bop_6677.astype('float32'), relay.shape_of(const_6675))) # shape=(2, 12, 12)
output = relay.Tuple([call_6687,const_6688,bop_6717,])
output2 = relay.Tuple([call_6689,const_6688,bop_6717,])
func_6765 = relay.Function([var_6676,], output)
mod['func_6765'] = func_6765
mod = relay.transform.InferType()(mod)
var_6766 = relay.var("var_6766", dtype = "float32", shape = (2, 12, 12))#candidate|6766|(2, 12, 12)|var|float32
output = func_6765(var_6766)
func_6767 = relay.Function([var_6766], output)
mutated_mod['func_6767'] = func_6767
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2976_call = mod.get_global_var('func_2976')
func_2977_call = mutated_mod.get_global_var('func_2977')
call_6776 = relay.TupleGetItem(func_2976_call(), 0)
call_6777 = relay.TupleGetItem(func_2977_call(), 0)
func_4297_call = mod.get_global_var('func_4297')
func_4298_call = mutated_mod.get_global_var('func_4298')
call_6778 = relay.TupleGetItem(func_4297_call(), 0)
call_6779 = relay.TupleGetItem(func_4298_call(), 0)
output = relay.Tuple([call_6776,call_6778,])
output2 = relay.Tuple([call_6777,call_6779,])
func_6786 = relay.Function([], output)
mod['func_6786'] = func_6786
mod = relay.transform.InferType()(mod)
mutated_mod['func_6786'] = func_6786
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6786_call = mutated_mod.get_global_var('func_6786')
call_6787 = func_6786_call()
output = call_6787
func_6788 = relay.Function([], output)
mutated_mod['func_6788'] = func_6788
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_6795 = relay.TupleGetItem(func_2434_call(), 0)
call_6796 = relay.TupleGetItem(func_2436_call(), 0)
func_5845_call = mod.get_global_var('func_5845')
func_5849_call = mutated_mod.get_global_var('func_5849')
var_6812 = relay.var("var_6812", dtype = "uint8", shape = (240,))#candidate|6812|(240,)|var|uint8
var_6813 = relay.var("var_6813", dtype = "uint64", shape = (462,))#candidate|6813|(462,)|var|uint64
call_6811 = relay.TupleGetItem(func_5845_call(relay.reshape(var_6812.astype('uint8'), [240,]), relay.reshape(var_6813.astype('uint64'), [77, 6]), ), 8)
call_6814 = relay.TupleGetItem(func_5849_call(relay.reshape(var_6812.astype('uint8'), [240,]), relay.reshape(var_6813.astype('uint64'), [77, 6]), ), 8)
func_5259_call = mod.get_global_var('func_5259')
func_5262_call = mutated_mod.get_global_var('func_5262')
var_6817 = relay.var("var_6817", dtype = "uint16", shape = (16, 10))#candidate|6817|(16, 10)|var|uint16
call_6816 = relay.TupleGetItem(func_5259_call(relay.reshape(var_6817.astype('uint16'), [160,]), relay.reshape(var_6813.astype('bool'), [77, 6]), ), 1)
call_6818 = relay.TupleGetItem(func_5262_call(relay.reshape(var_6817.astype('uint16'), [160,]), relay.reshape(var_6813.astype('bool'), [77, 6]), ), 1)
uop_6878 = relay.log2(call_6795.astype('float64')) # shape=(11, 12, 8)
uop_6880 = relay.log2(call_6796.astype('float64')) # shape=(11, 12, 8)
output = relay.Tuple([call_6811,var_6812,var_6813,call_6816,var_6817,uop_6878,])
output2 = relay.Tuple([call_6814,var_6812,var_6813,call_6818,var_6817,uop_6880,])
func_6895 = relay.Function([var_6812,var_6813,var_6817,], output)
mod['func_6895'] = func_6895
mod = relay.transform.InferType()(mod)
var_6896 = relay.var("var_6896", dtype = "uint8", shape = (240,))#candidate|6896|(240,)|var|uint8
var_6897 = relay.var("var_6897", dtype = "uint64", shape = (462,))#candidate|6897|(462,)|var|uint64
var_6898 = relay.var("var_6898", dtype = "uint16", shape = (16, 10))#candidate|6898|(16, 10)|var|uint16
output = func_6895(var_6896,var_6897,var_6898,)
func_6899 = relay.Function([var_6896,var_6897,var_6898,], output)
mutated_mod['func_6899'] = func_6899
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3938_call = mod.get_global_var('func_3938')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_6935 = func_3938_call()
call_6936 = func_3938_call()
output = relay.Tuple([call_6935,])
output2 = relay.Tuple([call_6936,])
func_6939 = relay.Function([], output)
mod['func_6939'] = func_6939
mod = relay.transform.InferType()(mod)
output = func_6939()
func_6940 = relay.Function([], output)
mutated_mod['func_6940'] = func_6940
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7016 = relay.var("var_7016", dtype = "int64", shape = ())#candidate|7016|()|var|int64
const_7017 = relay.const([[[-6,-9,7,-3,-2,-5,-6,-3,3,7,-1,3,4]],[[5,4,10,-4,-9,4,7,-8,-2,7,7,-5,7]],[[1,-2,-2,2,10,5,4,6,5,4,6,-8,-3]],[[-2,-3,4,9,-10,-2,4,-6,-9,3,8,7,-3]],[[-10,-5,-8,-9,7,5,-1,4,7,7,-9,2,2]],[[-1,-4,3,5,-6,8,-4,-1,9,-3,-5,-1,2]]], dtype = "int64")#candidate|7017|(6, 1, 13)|const|int64
bop_7018 = relay.bitwise_xor(var_7016.astype('int64'), const_7017.astype('int64')) # shape=(6, 1, 13)
output = relay.Tuple([bop_7018,])
output2 = relay.Tuple([bop_7018,])
func_7022 = relay.Function([var_7016,], output)
mod['func_7022'] = func_7022
mod = relay.transform.InferType()(mod)
var_7023 = relay.var("var_7023", dtype = "int64", shape = ())#candidate|7023|()|var|int64
output = func_7022(var_7023)
func_7024 = relay.Function([var_7023], output)
mutated_mod['func_7024'] = func_7024
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4585_call = mod.get_global_var('func_4585')
func_4587_call = mutated_mod.get_global_var('func_4587')
call_7074 = func_4585_call()
call_7075 = func_4585_call()
output = call_7074
output2 = call_7075
func_7081 = relay.Function([], output)
mod['func_7081'] = func_7081
mod = relay.transform.InferType()(mod)
mutated_mod['func_7081'] = func_7081
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7081_call = mutated_mod.get_global_var('func_7081')
call_7082 = func_7081_call()
output = call_7082
func_7083 = relay.Function([], output)
mutated_mod['func_7083'] = func_7083
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2175_call = mod.get_global_var('func_2175')
func_2176_call = mutated_mod.get_global_var('func_2176')
call_7165 = relay.TupleGetItem(func_2175_call(), 0)
call_7166 = relay.TupleGetItem(func_2176_call(), 0)
const_7169 = relay.const([[[6.434246,4.114754,-1.859723,-7.865121,9.720845,1.161904,7.559516,3.597092],[6.415658,-8.248514,5.788997,0.650530,-8.006788,6.897705,2.550328,-5.957737],[8.053532,-3.681206,2.101463,-0.956884,9.383965,1.682059,3.283837,-1.842567],[-6.731302,6.386579,2.081611,-3.850404,-0.346337,-5.777466,-0.284029,-0.193767],[-8.025445,4.186505,8.070028,-4.974895,7.209018,9.736788,-9.057178,0.519285],[-4.431865,-8.644634,6.372024,6.130641,-2.112216,9.177307,-9.295439,-6.449385],[4.919607,3.360795,-3.430804,7.600947,0.593205,-1.384304,0.564776,-3.645247],[-4.075782,6.447482,3.711962,3.878486,-6.208619,6.624166,-1.985187,-7.782060],[5.696225,-5.038416,5.332245,-1.768128,-3.571224,1.263516,-7.383696,4.083901],[-8.068083,3.710902,4.680686,-7.549004,8.525791,-2.601590,7.101967,8.101002],[-9.926872,-1.476506,-6.858804,4.792684,0.827307,-2.566237,-0.150243,-7.005011],[-5.923589,5.424774,-9.174737,4.492793,9.053837,9.474411,-0.954758,1.444850]],[[-5.930643,4.807592,-4.540105,8.247160,1.130366,-3.918000,0.953893,-1.332642],[-9.472175,4.419319,5.449577,-1.922922,4.859690,-8.701658,4.037660,-8.641889],[7.662422,-3.694201,-7.198688,-5.100317,7.721989,-5.940930,2.380885,-6.771337],[-3.612861,9.641234,-9.906174,-3.817190,5.474533,-1.712357,-7.934976,7.964018],[-5.100108,-6.721121,2.807695,-5.472609,6.462378,-8.711212,8.350530,-1.626640],[-4.055963,-5.492416,9.047509,-0.052870,9.948808,2.980565,-0.851439,1.196841],[-5.490800,7.861127,-6.131328,-9.977251,-4.684949,2.752619,4.484186,2.694582],[7.073561,2.644063,-7.211018,7.554676,-3.150600,-9.408931,7.562906,1.432761],[7.325875,-1.872909,-8.087150,7.847757,9.664957,-3.980130,-8.244012,-6.500807],[8.123151,-3.927689,-6.676126,3.471980,6.823976,9.211224,-5.320761,-9.786714],[0.368222,1.636928,-4.510974,9.262196,1.347445,-3.279049,6.025913,5.266452],[-3.275073,7.844807,-6.258275,7.175627,-6.236599,-3.801784,0.252903,-6.093437]],[[5.178218,-3.728479,-2.625433,8.701424,-1.201659,2.021671,6.463617,-7.761980],[-7.619081,-2.113172,3.719559,-6.171088,-0.524895,-4.004695,-3.777138,-3.134491],[-8.715216,6.525080,-1.895378,0.301768,-8.377099,4.200560,1.110828,-4.671392],[9.019841,-4.512587,-6.804026,-7.797939,-1.650539,7.136389,4.867031,-6.793382],[-2.202589,-1.428164,7.466329,4.603090,-4.639697,3.173775,9.844345,3.523244],[-7.750037,2.913110,1.324976,5.962686,-7.216438,-1.776571,-4.372437,8.773987],[-1.136982,-3.391748,0.590139,1.956990,-9.928143,-0.663748,-8.439105,-2.183400],[2.039651,-1.823414,7.778688,-0.523578,-0.049164,4.184374,-4.029629,0.931363],[-4.195183,-3.559855,-4.870865,3.441382,-1.784551,-9.164781,9.196704,6.106946],[-3.525622,3.503468,7.646167,9.311369,-4.005919,-8.343946,0.560824,5.266472],[7.720344,-2.575123,-1.665322,-6.499445,4.019802,9.447892,1.088060,0.845784],[-8.474752,5.741915,8.137283,8.924385,8.541052,-1.700162,-9.310594,-5.987156]],[[5.089828,6.208403,-7.689327,-3.570669,-6.639876,4.633354,-1.493302,7.219841],[6.185331,-3.901923,9.545311,8.863876,6.263707,2.028196,1.139457,-9.165416],[-9.431550,-3.408850,1.855110,-7.417758,4.683383,-1.408666,3.310231,-0.376487],[-3.118254,7.271400,7.586523,6.926526,-0.290295,-8.752630,-9.714244,-9.835493],[-3.495038,-3.698804,3.582144,1.381417,-8.673796,-0.580353,5.092644,-1.068998],[5.278829,6.026234,-4.241004,3.784138,0.804348,5.447082,-9.764099,5.406259],[-8.843359,4.552744,-7.928243,-5.460660,-6.186229,-1.278274,-0.405509,4.622453],[-6.353001,-8.564799,6.919501,3.014694,6.511799,7.990742,-4.522759,-0.399032],[-0.850168,-2.026533,-5.272390,6.442436,9.622239,-9.881468,-8.951445,3.912395],[-7.106587,-5.285152,-1.076101,-2.778731,-4.058658,4.252609,-6.497736,8.408965],[4.278232,-3.673929,0.972000,-7.457353,5.463402,-1.041123,2.881785,4.801106],[3.112310,9.934755,8.593275,0.470375,1.823423,9.954155,-0.770138,-2.350176]],[[-4.769053,9.263452,-7.299301,4.312701,-3.398150,-6.635964,2.824889,0.901299],[8.969366,-6.130262,-4.241912,-4.906743,4.988626,-9.155669,-1.019119,8.308054],[4.752222,-3.340546,1.059628,7.963403,5.350055,2.930051,5.356202,7.110686],[1.271580,-2.761334,8.190195,-8.016348,-7.453627,-6.546669,1.851409,0.735264],[-7.216253,5.274057,4.841733,4.986178,-9.966919,-0.699825,1.722478,-8.364865],[8.322455,4.744657,5.804603,4.204810,-7.352671,-8.030752,-5.385216,-5.128340],[-2.779173,-6.296935,-4.575142,-8.068175,-2.404929,4.749674,0.555129,-4.745794],[-9.729961,5.809871,3.589349,0.388501,8.555395,-6.184505,9.777333,-8.719519],[-3.907537,-2.894165,0.145320,1.318717,7.423667,2.369686,-6.745542,0.810771],[6.964910,-4.860269,-3.459785,-6.849533,4.044415,9.928903,3.873389,-2.797051],[-7.379670,4.705704,-6.903674,1.639363,2.950186,-9.955725,-8.249157,-5.578089],[-1.180001,8.276302,-7.324659,-5.472240,-1.525091,-6.103789,-3.367747,9.743357]],[[4.117669,-6.106055,5.207862,8.007826,-7.141699,-4.502462,-6.841700,4.233771],[4.311782,8.293667,-0.913111,7.079994,5.150599,0.094325,1.081771,-3.367739],[8.433466,-3.660160,-9.090240,3.069648,0.231451,2.726741,-0.473863,-7.036382],[0.863451,1.126486,-8.801400,-8.996589,-1.960142,7.824462,-0.761840,0.031495],[-1.266316,-9.171359,7.910045,0.184734,9.163567,-6.297731,6.862624,5.993915],[-7.641334,8.765248,-4.750647,-9.685084,9.073764,-1.751736,1.139417,3.499913],[1.696689,-5.260243,1.334930,3.915486,6.085936,-9.069413,-4.006555,5.494826],[-1.166967,0.517602,1.628416,1.696595,8.124848,-2.587836,3.522121,-4.189860],[-4.470034,-8.044349,3.751635,-1.838404,8.253652,8.978627,5.213149,7.686631],[6.778780,-2.425736,-9.893336,3.183492,3.493659,6.069674,1.166597,8.812383],[-3.691379,8.050035,8.425159,-2.164951,-4.886759,-8.372191,0.211886,9.704932],[7.857074,1.415700,-7.853608,5.178861,-4.853634,-5.823060,0.542750,7.308888]],[[3.102890,8.520815,6.370429,-1.671842,7.558145,3.677700,-9.060195,-8.029411],[-6.792669,7.734223,-8.050529,-4.237652,1.286757,5.043365,-6.063780,7.169437],[7.235514,-5.510501,-3.032756,1.845604,6.989191,-0.202123,0.605175,9.716938],[-3.693249,-5.359599,-6.246395,-5.772742,-6.552053,-2.048777,-5.693025,-2.488617],[-7.696313,-9.177542,4.457658,-8.018204,-0.815364,-5.457781,8.855491,7.993601],[2.083880,8.569716,-4.679858,1.884509,3.769139,6.806370,6.745375,2.856795],[-8.623566,3.146570,5.745698,5.889945,-7.949745,-4.368241,4.045286,-4.498295],[7.553708,-4.326842,9.265239,-8.821173,5.484592,-1.943623,-1.624085,-7.302242],[-6.207308,-4.366741,-6.846972,2.075203,-7.768212,-9.283773,-3.140160,-0.133678],[-7.059288,2.850927,-2.546196,-1.674550,-0.968058,7.139371,7.053216,5.210567],[6.367893,6.661120,9.236442,-6.429496,-0.553883,-5.898479,3.396060,0.999763],[9.039381,3.733296,-5.306482,-5.834139,9.769637,8.096099,2.218498,-7.961802]],[[8.325898,-8.585264,-1.456799,-0.903934,-2.268257,9.911333,7.373177,2.506143],[-4.502209,-4.915585,5.232600,4.382059,-4.535687,8.318856,3.099152,-0.129008],[7.184087,-9.707908,-7.636522,5.508687,3.120883,-1.011008,5.805171,3.166793],[4.626745,-5.689021,-8.617934,9.744596,4.199202,9.349656,-4.143886,0.712099],[-0.022907,1.270120,-4.557138,3.030632,-2.043908,-2.350098,-9.146944,7.386784],[1.913776,-2.140618,8.599467,4.915108,-4.385522,4.048538,-3.450377,-4.983425],[-0.997858,9.888253,-3.820632,-1.079668,4.131915,-7.912662,9.381033,7.153904],[-5.730900,-5.690310,5.512030,-9.507253,-5.210679,-3.981310,-5.943743,-0.536869],[-5.471619,9.836106,-3.151777,6.713521,-8.521302,7.635911,3.427727,-4.313473],[-7.357735,5.493337,-9.174075,7.417586,-0.344433,-1.983300,5.495454,3.510979],[-7.926830,-2.556632,3.020014,-9.087980,-0.829685,6.872412,-5.892933,0.436610],[-5.497397,-5.726245,-8.531459,-8.378504,7.085549,8.836379,8.930508,4.697277]],[[0.500013,-2.342762,3.642648,-5.693111,9.607219,-4.052282,8.377634,-7.380895],[-4.680056,1.482427,6.471451,1.376178,-7.222031,3.618026,-1.738115,0.791672],[-3.768901,-9.392450,1.820409,3.493872,-1.917336,-7.356890,7.235650,1.857572],[-1.860399,-3.605563,-8.015532,-3.456170,-6.925298,-5.612870,-1.914166,-8.961508],[-9.599073,2.723527,2.168650,-0.939304,-6.166877,-7.175857,2.177812,9.827192],[-9.517434,6.302439,-5.578861,6.492871,5.072182,4.364238,1.818659,7.348561],[-2.833564,3.657282,1.822540,0.503392,6.435692,-0.823919,4.551230,-0.059639],[0.164533,5.064875,2.299642,4.926870,-2.069999,5.637458,-6.561447,9.445503],[3.707401,9.417508,-3.926414,-0.167617,-8.361440,8.983313,-4.469156,4.928444],[3.992854,1.737858,9.015891,-5.531128,4.846382,9.074700,-5.838335,-5.437055],[-7.372245,-8.003358,-8.596701,-6.727150,3.578586,1.402262,3.344981,-0.608128],[9.020340,1.615569,-2.999162,-1.900665,6.322208,5.207416,0.711543,8.688089]],[[5.697626,-1.989192,-2.407287,-7.683158,-6.594124,-7.822633,-7.029628,6.317193],[-7.816355,-0.994919,-9.556330,0.535099,7.132043,9.562161,-1.033558,-8.559292],[-8.031332,-6.529114,1.928258,4.633671,-8.371435,8.636431,-6.712607,-4.808166],[4.162928,0.997185,0.609017,-4.910411,3.513906,9.925903,-0.027928,-7.198049],[5.697853,-4.184392,6.290120,-9.976109,8.260767,6.549598,-2.372758,-0.790628],[-1.253222,2.545750,-4.417103,-9.546083,3.717344,-3.797472,1.694770,6.496444],[0.479397,9.453834,0.312648,-5.775248,9.634710,-0.800328,8.075064,-1.259187],[-4.270120,7.067358,7.926790,-3.898122,-6.177697,-3.263327,9.981733,-6.247618],[0.790725,-4.517679,7.650268,9.114357,-1.170106,5.062444,0.441717,1.191357],[0.973350,-0.986964,4.224479,-1.334832,3.036422,9.376443,-9.990562,0.678394],[-8.504529,-4.022711,-0.903304,-0.270434,3.742969,-7.281834,0.916540,-8.242866],[1.963417,4.402479,4.633865,-8.130188,6.382778,-3.677004,9.057269,0.634752]],[[5.907221,6.741886,-7.820314,-3.094321,8.391525,-8.415821,-1.103970,-9.906931],[9.802214,-8.890357,2.190893,-5.563174,0.837112,-4.344066,-1.954410,-0.282225],[6.375706,-6.879405,6.931266,1.907682,9.097224,-6.337942,-2.609725,3.954106],[-9.316354,-9.775551,-5.020086,-2.429646,0.776422,-1.605770,1.395372,2.630971],[6.291090,-5.348040,-1.572820,1.340257,6.957577,-0.887839,-8.919885,6.974473],[0.211389,-0.611261,-7.415883,3.364651,8.277305,-5.833768,-5.891216,0.805425],[4.892361,6.341623,9.474600,3.690390,-8.132073,-0.962973,-5.628690,2.601465],[-6.660572,6.134672,0.246028,-1.047473,0.012621,2.963924,2.526442,8.220251],[-1.839097,-4.777669,8.367592,-6.417808,1.936191,1.657216,-0.436426,-3.225630],[-6.836089,-2.907002,-9.494542,0.238152,1.559425,-8.239278,8.446750,8.795172],[-6.215231,-9.876774,7.832649,1.955174,6.572477,-6.546039,6.392618,-8.977952],[2.834887,1.698711,-3.868071,8.668744,6.854842,-4.990704,4.715261,-4.800700]]], dtype = "float64")#candidate|7169|(11, 12, 8)|const|float64
bop_7170 = relay.floor_mod(call_7165.astype('float64'), relay.reshape(const_7169.astype('float64'), relay.shape_of(call_7165))) # shape=(11, 12, 8)
bop_7173 = relay.floor_mod(call_7166.astype('float64'), relay.reshape(const_7169.astype('float64'), relay.shape_of(call_7166))) # shape=(11, 12, 8)
func_3863_call = mod.get_global_var('func_3863')
func_3864_call = mutated_mod.get_global_var('func_3864')
call_7174 = func_3863_call()
call_7175 = func_3863_call()
output = relay.Tuple([bop_7170,call_7174,])
output2 = relay.Tuple([bop_7173,call_7175,])
func_7183 = relay.Function([], output)
mod['func_7183'] = func_7183
mod = relay.transform.InferType()(mod)
output = func_7183()
func_7184 = relay.Function([], output)
mutated_mod['func_7184'] = func_7184
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4193_call = mutated_mod.get_global_var('func_4193')
call_7251 = relay.TupleGetItem(func_4191_call(), 0)
call_7252 = relay.TupleGetItem(func_4193_call(), 0)
func_6039_call = mod.get_global_var('func_6039')
func_6040_call = mutated_mod.get_global_var('func_6040')
call_7253 = relay.TupleGetItem(func_6039_call(), 0)
call_7254 = relay.TupleGetItem(func_6040_call(), 0)
output = relay.Tuple([call_7251,call_7253,])
output2 = relay.Tuple([call_7252,call_7254,])
func_7273 = relay.Function([], output)
mod['func_7273'] = func_7273
mod = relay.transform.InferType()(mod)
mutated_mod['func_7273'] = func_7273
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7273_call = mutated_mod.get_global_var('func_7273')
call_7274 = func_7273_call()
output = call_7274
func_7275 = relay.Function([], output)
mutated_mod['func_7275'] = func_7275
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2333_call = mutated_mod.get_global_var('func_2333')
call_7313 = func_2332_call()
call_7314 = func_2332_call()
func_4465_call = mod.get_global_var('func_4465')
func_4468_call = mutated_mod.get_global_var('func_4468')
var_7337 = relay.var("var_7337", dtype = "int8", shape = (240,))#candidate|7337|(240,)|var|int8
call_7336 = func_4465_call(relay.reshape(var_7337.astype('int8'), [10, 12, 2]), relay.reshape(var_7337.astype('int8'), [10, 12, 2]), )
call_7338 = func_4465_call(relay.reshape(var_7337.astype('int8'), [10, 12, 2]), relay.reshape(var_7337.astype('int8'), [10, 12, 2]), )
func_4262_call = mod.get_global_var('func_4262')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_7340 = relay.TupleGetItem(func_4262_call(), 1)
call_7341 = relay.TupleGetItem(func_4264_call(), 1)
func_723_call = mod.get_global_var('func_723')
func_726_call = mutated_mod.get_global_var('func_726')
call_7344 = func_723_call(relay.reshape(var_7337.astype('uint8'), [10, 12, 2]), relay.reshape(var_7337.astype('uint8'), [10, 12, 2]), )
call_7345 = func_723_call(relay.reshape(var_7337.astype('uint8'), [10, 12, 2]), relay.reshape(var_7337.astype('uint8'), [10, 12, 2]), )
output = relay.Tuple([call_7313,call_7336,var_7337,call_7340,call_7344,])
output2 = relay.Tuple([call_7314,call_7338,var_7337,call_7341,call_7345,])
func_7354 = relay.Function([var_7337,], output)
mod['func_7354'] = func_7354
mod = relay.transform.InferType()(mod)
var_7355 = relay.var("var_7355", dtype = "int8", shape = (240,))#candidate|7355|(240,)|var|int8
output = func_7354(var_7355)
func_7356 = relay.Function([var_7355], output)
mutated_mod['func_7356'] = func_7356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6939_call = mod.get_global_var('func_6939')
func_6940_call = mutated_mod.get_global_var('func_6940')
call_7360 = relay.TupleGetItem(func_6939_call(), 0)
call_7361 = relay.TupleGetItem(func_6940_call(), 0)
output = call_7360
output2 = call_7361
func_7362 = relay.Function([], output)
mod['func_7362'] = func_7362
mod = relay.transform.InferType()(mod)
mutated_mod['func_7362'] = func_7362
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7362_call = mutated_mod.get_global_var('func_7362')
call_7363 = func_7362_call()
output = call_7363
func_7364 = relay.Function([], output)
mutated_mod['func_7364'] = func_7364
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6656_call = mod.get_global_var('func_6656')
func_6657_call = mutated_mod.get_global_var('func_6657')
call_7384 = func_6656_call()
call_7385 = func_6656_call()
output = call_7384
output2 = call_7385
func_7387 = relay.Function([], output)
mod['func_7387'] = func_7387
mod = relay.transform.InferType()(mod)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7387_call = mutated_mod.get_global_var('func_7387')
call_7388 = func_7387_call()
output = call_7388
func_7389 = relay.Function([], output)
mutated_mod['func_7389'] = func_7389
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5557_call = mod.get_global_var('func_5557')
func_5558_call = mutated_mod.get_global_var('func_5558')
call_7447 = relay.TupleGetItem(func_5557_call(), 1)
call_7448 = relay.TupleGetItem(func_5558_call(), 1)
func_5752_call = mod.get_global_var('func_5752')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_7458 = relay.TupleGetItem(func_5752_call(), 0)
call_7459 = relay.TupleGetItem(func_5753_call(), 0)
func_6515_call = mod.get_global_var('func_6515')
func_6518_call = mutated_mod.get_global_var('func_6518')
const_7494 = relay.const([-7.544593,-8.853870,1.728726,6.867392,-3.011594,5.893748,-2.338424,0.788396,3.649524,4.174871,-2.161949,-9.879773,1.227565,1.317878,-6.090350,6.038882,-2.358540,1.520781,0.949038,-2.527829,3.583748,-1.414521,4.231382,9.947528,-3.762220,4.988238,-1.322170,-3.606116,5.968274,5.820456,-0.481431,4.099090,-7.644460,-9.405316,0.760133,-1.903060,2.168776,-6.165076,-4.704309,9.578209,-7.532925,9.838625,-3.548847,9.858550,7.261550,0.303851,6.908240,-3.883754,-4.896081,-0.957768,5.547954,-0.231395,4.993114,-9.256939,-7.486589,-7.739144,-6.350206,-0.127187,0.630436,-6.687499,-8.954013,-4.389076,-1.598686,0.688366,-5.373183,-6.348678,-3.750256,-3.618336,4.607254,1.563603,-6.020321,6.549554,-6.593882,-0.140223,7.021003,-3.009121,-7.135145,5.754809,-3.978369,8.859810,-1.784182,-3.102909,-9.087681,1.736217,4.275727,-8.541413,-2.255668,-5.175745,1.414643,1.639941,-6.325563,-1.317357,-7.233686,4.334927,-7.081450,5.181992,0.671379,-1.830280,-1.474396,7.676396,-3.033932,-4.418977,7.273619,0.042903,3.418826,7.851623,8.050503,-2.059576,-4.344363,-5.600730,7.299416,2.652526,2.007698,-5.550774,6.832670,-5.608212,6.356909,9.638068,3.215635,9.082586,5.450487,-8.226155,-4.441881,-8.301971,6.989965,-2.985647,4.660097,3.165403,4.235615,-1.187008,9.488550,-1.358682,6.150248,-2.450024,0.347813,3.706021,-2.652538,8.021037,9.188072,6.268160,-8.841264,7.006921,-1.304638,-3.828774,-5.958087,-7.619397,7.026964,7.740288,-4.539304,-2.228702,7.517749,-4.381325,1.417847,1.571364,-0.309184,8.753965,-5.505777,-5.970002,4.995268,-7.544164,0.485003,-4.200342,7.054399,-1.993261,8.750785,6.844282,-9.722837,-2.012356,0.543936,-4.726196,6.193034,-1.112002,-2.331898,-9.396170,-4.346040,-7.103927,3.959376,-6.431638,-2.840427,9.016418,1.026718,-4.031221,-1.545235,-9.458468,-6.429726,2.663498,-7.804647,2.665558,-9.519409,5.928416,-1.609763,2.397894,-4.508683,3.069887,-0.188987,-2.501349,3.284488,5.054446,5.457971,-5.688248,3.865170,0.059366,3.475998,-2.721508,-5.365790,-2.234794,7.528292,2.590190,-8.754405,-6.603644,2.016083,-6.248338,-1.062766,-4.528928,8.800346,6.028552,8.253396,4.820881,-4.350789,-1.459806,7.029807,3.784173,-4.343513,-1.729488,1.018483,8.034340,8.813487,-5.105447,-8.976525,7.554104,2.683926,-4.537245,-6.050335,3.371572,3.196329,7.350694,4.920116,-1.304147,2.106352,-5.365814,7.455033,7.377133,8.637430,-4.468383,1.473612,-9.426846,4.745711,2.537859,-2.626394,-6.224608,-0.178283,-7.159196,-5.726485,-7.762372,8.451250,5.709582,-0.244519,5.441081,-5.022406,6.677634,5.131351,-2.250347,-5.115187,-1.216759,-3.609996,2.947818,0.471342,-6.482149,-8.138817,6.712480,1.405897,-0.746797,-3.727302,-6.520040,-1.919434,-3.497877,4.677264,-5.922970,-6.284535,-7.633362,8.736441,6.886473,1.750872,-7.154835,-1.123679,3.455215,-4.956475,-2.165732,1.475478,0.297200,-3.705814,4.532973,-7.887115,-4.623516,6.463567,-3.851508,-3.787917,9.035957,0.317002,1.065566,9.307977,-7.670715,-7.611002,-5.131277,2.811692,5.288676,4.838655,3.486474,-7.359484,-4.208275,-4.304471,-4.832349,5.049399,-2.019015,-9.730030,-2.595742,-2.930920,2.862383,7.921044,-9.016252,-4.471883,0.993903,-6.405420,2.564722,-3.358221,-3.186741,-0.664315,2.120968,-4.979334,5.222082,7.060277,3.291814,-5.338697,-0.049745,-8.589252,-6.975639,6.219782,1.427151,-8.328875,-5.390556,-8.717458,4.347516,-5.149387,-3.573373,-3.136683,4.477629,-2.577194,2.166631,8.698444,-1.780678,-9.414078,-1.398913,-1.972875,4.986399,0.008226,8.550776,9.193081,-8.124087,5.922825,-5.197662,-5.619396,0.227052,-9.795794,7.059084,3.877867,-2.176957,-5.817532,0.613175,-0.064549,3.849277,-1.911441,9.568924,1.673122,2.128663,9.898442,-1.840956,5.215550,-9.217228,-7.536210,-7.312904,7.287961,0.422033,7.585068,7.157753,-0.286676,3.534912,9.682024,-2.729727,5.698957,-3.982391,3.532540,-0.608335,-9.651316,5.645382,4.687295,-9.897968,-5.609096,-7.555189,-4.078827,7.744360,4.260571,-8.383693,9.066923,0.573527,-3.770493,9.718869,3.447352,6.875230,-0.099102,-0.281147,-7.739022,3.676220,0.705693,-1.416393,3.637087,-1.706290,0.905588,0.277724,7.067413,9.368211,-9.241725,9.063600,-9.741923,-7.077420,7.056987,-1.997420,3.653154,-0.096060,-7.606284,9.742370,-6.782998,-9.108019,-0.471319,3.499225,-6.349413,1.276875,8.031733,-2.670196,5.615216,5.330661,-3.155914,-8.542784,3.800890,-5.188446,-8.134886,3.106191,4.168560,-7.081077,8.201723,5.175043,-5.889516,3.602366,4.546667,3.587345,-6.260290,-7.301709,7.218234,-3.775883,4.706649,-8.134334,-8.494572,2.287351,9.125607,1.960605,0.368738,-8.370592,-6.560553,0.294769,-5.578581,-6.245355,9.002461,1.197214,-4.181870,2.422502,-4.163386,1.421170,7.662895,-1.819961,-2.743717,-0.469948,-1.489615,8.270823,-2.414415,-4.003677,7.647667,8.739876,7.864242,6.641115,-3.856079,-8.421489,-8.548407,-2.650454,-6.483490,-3.538694,-7.187379,-3.487736,-1.520743,0.974623,-0.511732,6.274778,8.813947,5.235501,9.855291,-6.125944,3.327098,-3.723856,-0.307821,-8.833016,2.081842,6.471981,2.637187,-3.187105,1.449920,-7.113177,8.768520,0.160288,-3.947474,-8.636109,-9.518015,0.171279,6.888022,0.732753,-9.765552,-5.843165,8.712041,-3.002292,1.895820,-6.105550,-9.592154,-8.709571,-9.912782,-7.174705,-5.247702,-4.515545,5.258424,4.415936,3.193795,-4.012237,-5.891900,7.984230,-3.263040,-9.778981,-1.928416,-6.812218,0.820905,-2.795033,6.572242,-6.518792,5.221709,-2.971877,-8.900222,9.984105,-6.578992,-5.640308,-0.358969,-8.873859,0.974503,-9.360445,5.247635,-6.326345,-7.127525,-0.086160,-0.239113,0.983647,7.786064,-9.382329,1.073055,4.104164,-2.740394,-0.344774,4.247922,8.290310,6.201369,-2.459326,0.816785,1.599286,-7.897982,4.867247,-6.303362,-4.816095,-5.171478,-9.223276,4.368610,9.358616,3.271383,-9.070857,6.015302,3.065593,-6.896228,9.671576,-4.433250,0.327050,8.411853,8.432882,0.576811,3.953655,1.389484,-9.760396,-6.950633,-6.378055,8.589251,-7.085643,-7.221771,-4.799523,-9.263760,-8.539548,-4.345637,8.849891,-8.045974,-4.766607,-5.067101,4.953075,5.708569,-8.519117,-3.318166,0.397918,-0.328256,-2.864929,7.799831,2.275985,-8.169839,-3.854414,8.314389,-4.666674,3.938406,7.385240,5.585169,9.783044,-7.519905,-6.830340,-2.820610,3.786183,9.989270,6.237658,-9.625420,-1.234037,0.026419,2.058072,-6.684120,-7.798647,-0.850774,-2.343135,1.514602,-7.791085,2.484765,-8.824929,-4.684664,-7.969984,2.265609,-4.284109,-7.244363,-2.609593,-8.149903,-0.918075,-1.231829,-1.930466,1.559464,-1.151580,-7.660043,-8.203632,9.535288,9.061597,-8.001929,7.293017,8.543703,1.936195,4.618871,0.799157,-0.978757,-9.219020,0.346462,1.773699,6.117548,1.490286,3.012355,-8.083623,-7.227633,-0.678435,9.129280,-9.945482,-9.522905,4.535288,2.430466,0.931912,-2.583288,-4.521273,-2.494430,-7.620077,7.064202,2.868346,-9.214658,1.562260,7.113340,9.717255,-9.813473,9.323927,-5.921942,-9.555897,-2.779810,7.368310,0.845065,-6.992199,3.907481,-9.869312,-8.318534,7.817011,4.419847,9.647076,8.928044,4.346252,-5.709803,-2.124101,0.658368,-6.197377,-0.435843,6.108024,-4.396165,3.255391,-4.430907,-7.681344,8.733336,2.513533,4.940226,5.122694,-4.891150,-7.689862,9.976678,1.603552,6.894738,-3.022343,3.610147,8.026364,4.021171,3.900516,-2.539981,-0.970392,-7.401197,-7.332941,-7.213573,-3.095885,6.012031,3.596755,7.030694,8.805815,2.074807,-6.539652,0.648550,-1.116153,-6.210363,5.939130,9.173421,-2.979711,0.940339,9.427882,-4.675252,-6.325841,-9.913445,-3.964955,-3.270311,-8.710716,-2.047299,-8.129018,8.042724,-4.894885,8.269446,-0.816798,-0.768277,-7.525254,-1.706834,4.637548,9.578554,-1.225044,-4.451798,4.008819,-2.786016,-1.648837,-2.489343,3.423321,8.873895,7.619140,4.375353,7.632233,-5.470510,1.305373,-1.833444,2.620570,9.015041,7.231597,-6.760350,-0.983550,9.918816,9.039501,-4.710592,6.234432,1.521168,-3.603568,-2.078124,-5.548831,1.330054,7.649669,-6.026562,9.530027,-8.088643,3.544540,4.104920,-0.053309,-1.235688,-5.152619,-4.473992,-7.079237,-4.708665,-4.253111,0.975422,0.879890,-8.301906,-3.005606,8.469196,-7.646575,-8.477932,-1.600247,-1.066581,-1.032910,8.418429,0.774907,-0.217194,0.575589,-0.478875,-4.054587,-7.166488,-7.838848,-8.842074,3.703745,-3.743467,-7.997347,-3.983482,-0.573027,1.851439,3.521204,2.518670,-7.101608,1.203495,-0.751374,3.656845,6.720167,-0.497875,-4.941345,-2.154801,-0.790486,-1.028607,0.755310,8.045622,7.012262,3.450877,0.952667,6.768808,-5.006104,7.792435,-4.286734,2.148362,-1.406537,2.656878,2.346703,1.366219,-3.035088,-9.575906,-4.025161,2.129159,-3.894929,-0.329831,2.301375,1.687706,-5.216189,-1.251676,5.638889,-8.321753,8.978462,-9.142238,6.090400,-7.134754,9.523976,-2.874342,-3.229554,3.606273,-0.155678,3.275886,0.758433,5.279820,9.769531,-0.160648,-3.001644,0.771363,-6.382423,-2.938806,3.726967,2.204278,9.798934,-8.072944,3.495678,-3.260693,2.826274,4.690062,-9.519550,6.707649,-6.929829,-9.759927,-0.818061,-7.632446,3.926400,5.511277,6.263228,-9.450334,-0.942067,2.308000,-9.489314,3.715527,2.367617,9.266052,0.282527,2.931242,-5.414140,-0.185512,6.564035,-5.005559,6.490494,3.763380,-1.567344,5.590651,-1.737488,2.667706,-1.639018,4.531474,7.727590,3.183792,9.179751,4.162089,-6.664543,-2.207395,-2.600511,0.664834,-3.647672,7.678368,-7.772116,6.361964,6.655883,8.154265,7.373745,4.633497,4.674459,-3.374822,7.470303,3.570221,5.666493,-3.409694,-0.023099,-8.963386,-6.024990,7.634587,-8.213939,-2.903252,6.182520,-7.500338,-8.432218,-7.288798,-2.433019,-2.174568,-8.114052,-5.211869,7.025735,7.422963,-8.869447,0.779879,4.137528,6.502325,1.295055,3.537284,9.465341,-7.744647,4.104443,-9.930452,6.715146,-4.713091,-9.158710,5.989134,1.412063,4.271677,-9.622158,-0.048769,0.868767,-2.516602,4.659043,-8.666669,1.914547,-8.696072,8.686439,-0.408216,1.103006,-9.653361,0.065819,-9.786597,-0.078313,-4.376786,-5.677476,1.763461,-6.641283,-1.295280,1.635897,1.758975,7.671005,-8.334748,-4.488334,7.653112,7.484642,6.236221,-5.120627,5.205122,3.944072,8.234386,-5.018053,0.544475,-5.276638,4.744913,-0.171105,-8.018986,-5.543034,-2.051912,-2.570625,5.852234,2.157390,-9.423975,-5.459362,3.971753,-8.708768,2.828814,2.198180,2.682598,-2.504555,2.558705,0.994339,5.154528,-6.511360,-2.428742,4.243231,-3.696894,-5.605971,-3.519610,-3.090478,-2.849482,2.355471,-7.503967,8.616340,-0.686914,-6.586939,-2.273629,-2.459974,1.487818,-3.004198,1.701934,5.315170,-1.963786,-2.787493,-4.919892,-1.050655,5.222728,-9.136013,-0.892219,-3.595857,-5.050558,9.972209,-4.945196,-6.384954,-3.879265,-0.939376,-3.958902,-2.040848,3.597659,-9.446556,7.499392,5.139899,-3.839573,-3.078748,7.614653,5.252360,6.390437,-1.496564,-8.239030,-9.653667,5.501220,-9.216199,-7.153075,4.187565,-1.419898,-2.716369,-8.295361,-0.583917,6.404369,-5.953868,7.177168,-3.948484,-0.628813,9.660162,0.636169,1.752452,-0.126469,7.630013,-1.676957,-7.693992,-0.423373,1.924584,-8.387138,0.605502,-3.891306,-1.775701,2.007607,7.089486,-6.981070,4.186524,-2.896702,-5.203681,-6.507748,7.470768,-9.911473,6.109550,-4.018548,-8.655901,4.487404,4.404069,6.580839,4.960408,-9.513739,-1.886990,2.305837,5.505489,-4.256978,-3.801881,3.623177,-1.318098,-9.184316,-4.220155,-4.313988,8.651655,-0.293296,0.160306,1.901301,-0.387637], dtype = "float32")#candidate|7494|(1144,)|const|float32
call_7493 = relay.TupleGetItem(func_6515_call(relay.reshape(const_7494.astype('float32'), [1144,])), 2)
call_7495 = relay.TupleGetItem(func_6518_call(relay.reshape(const_7494.astype('float32'), [1144,])), 2)
func_6636_call = mod.get_global_var('func_6636')
func_6638_call = mutated_mod.get_global_var('func_6638')
call_7499 = relay.TupleGetItem(func_6636_call(), 1)
call_7500 = relay.TupleGetItem(func_6638_call(), 1)
output = relay.Tuple([call_7447,call_7458,call_7493,const_7494,call_7499,])
output2 = relay.Tuple([call_7448,call_7459,call_7495,const_7494,call_7500,])
func_7501 = relay.Function([], output)
mod['func_7501'] = func_7501
mod = relay.transform.InferType()(mod)
mutated_mod['func_7501'] = func_7501
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7501_call = mutated_mod.get_global_var('func_7501')
call_7502 = func_7501_call()
output = call_7502
func_7503 = relay.Function([], output)
mutated_mod['func_7503'] = func_7503
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7507 = relay.const([[[-9,4,8,8,-3],[6,-3,-1,3,-7],[8,-3,2,-3,-8],[-2,3,-8,10,-8],[10,-4,-2,-3,7],[-9,-5,-9,-2,10],[5,6,10,8,10],[4,9,-5,4,-5],[-2,-8,-1,-6,1],[3,-9,-5,-3,-8],[10,-6,-1,1,-9],[-8,3,7,-5,6],[-8,2,-8,-6,-2]],[[5,-6,1,2,-5],[-8,-1,1,4,-1],[-3,-1,-4,-4,1],[5,-7,9,-10,-8],[1,8,-5,-9,8],[-3,-9,-8,3,-5],[7,10,-3,-10,9],[8,3,3,-8,9],[4,-6,6,6,-5],[4,1,8,5,6],[7,6,-1,-8,-3],[2,-10,-10,4,4],[9,3,-3,5,-8]],[[-2,7,5,-8,5],[-1,-1,-7,7,-9],[1,10,1,7,-1],[-8,-10,-2,-3,9],[2,-6,10,5,7],[2,-3,5,6,-9],[5,-10,4,-1,2],[4,-9,-8,8,-10],[-5,-4,-3,-2,1],[5,-3,-2,-7,-4],[4,-5,-10,3,4],[4,6,-10,9,9],[5,5,-1,3,-1]]], dtype = "int8")#candidate|7507|(3, 13, 5)|const|int8
var_7508 = relay.var("var_7508", dtype = "int8", shape = (3, 13, 5))#candidate|7508|(3, 13, 5)|var|int8
bop_7509 = relay.right_shift(const_7507.astype('int8'), relay.reshape(var_7508.astype('int8'), relay.shape_of(const_7507))) # shape=(3, 13, 5)
func_4262_call = mod.get_global_var('func_4262')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_7512 = relay.TupleGetItem(func_4262_call(), 0)
call_7513 = relay.TupleGetItem(func_4264_call(), 0)
func_4393_call = mod.get_global_var('func_4393')
func_4395_call = mutated_mod.get_global_var('func_4395')
var_7529 = relay.var("var_7529", dtype = "uint16", shape = (160,))#candidate|7529|(160,)|var|uint16
call_7528 = relay.TupleGetItem(func_4393_call(relay.reshape(var_7529.astype('uint16'), [160,])), 1)
call_7530 = relay.TupleGetItem(func_4395_call(relay.reshape(var_7529.astype('uint16'), [160,])), 1)
output = relay.Tuple([bop_7509,call_7512,call_7528,var_7529,])
output2 = relay.Tuple([bop_7509,call_7513,call_7530,var_7529,])
func_7552 = relay.Function([var_7508,var_7529,], output)
mod['func_7552'] = func_7552
mod = relay.transform.InferType()(mod)
var_7553 = relay.var("var_7553", dtype = "int8", shape = (3, 13, 5))#candidate|7553|(3, 13, 5)|var|int8
var_7554 = relay.var("var_7554", dtype = "uint16", shape = (160,))#candidate|7554|(160,)|var|uint16
output = func_7552(var_7553,var_7554,)
func_7555 = relay.Function([var_7553,var_7554,], output)
mutated_mod['func_7555'] = func_7555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4191_call = mod.get_global_var('func_4191')
func_4193_call = mutated_mod.get_global_var('func_4193')
call_7559 = relay.TupleGetItem(func_4191_call(), 0)
call_7560 = relay.TupleGetItem(func_4193_call(), 0)
output = relay.Tuple([call_7559,])
output2 = relay.Tuple([call_7560,])
func_7561 = relay.Function([], output)
mod['func_7561'] = func_7561
mod = relay.transform.InferType()(mod)
output = func_7561()
func_7562 = relay.Function([], output)
mutated_mod['func_7562'] = func_7562
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5860_call = mod.get_global_var('func_5860')
func_5862_call = mutated_mod.get_global_var('func_5862')
call_7568 = func_5860_call()
call_7569 = func_5860_call()
output = relay.Tuple([call_7568,])
output2 = relay.Tuple([call_7569,])
func_7573 = relay.Function([], output)
mod['func_7573'] = func_7573
mod = relay.transform.InferType()(mod)
output = func_7573()
func_7574 = relay.Function([], output)
mutated_mod['func_7574'] = func_7574
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7387_call = mod.get_global_var('func_7387')
func_7389_call = mutated_mod.get_global_var('func_7389')
call_7583 = func_7387_call()
call_7584 = func_7387_call()
func_7501_call = mod.get_global_var('func_7501')
func_7503_call = mutated_mod.get_global_var('func_7503')
call_7595 = relay.TupleGetItem(func_7501_call(), 3)
call_7596 = relay.TupleGetItem(func_7503_call(), 3)
uop_7599 = relay.erf(call_7595.astype('float64')) # shape=(1144,)
uop_7601 = relay.erf(call_7596.astype('float64')) # shape=(1144,)
const_7608 = relay.const([-9.305614,3.254392,-3.439739,0.155329,4.555854,-4.171066,-0.793663,-3.351735,-9.528348,-7.478131,-5.933292,8.487703,4.242274,1.853330,-6.664500,-7.083801,2.556298,-8.360775,-1.416135,-3.050723,-8.793646,6.595423,4.500484,-8.385920,8.069513,6.770464,8.375863,0.678161,0.140980,8.177947,7.540690,-1.110170,8.235168,-4.038979,4.038045,-6.191366,-2.156115,-3.523736,4.667035,8.148115,3.532967,-9.964929,6.212000,3.977804,-1.061034,-3.325164,-9.227052,3.269519,-5.158419,2.494557,-9.620000,2.893296,5.447507,-8.341254,-4.353587,-4.201233,5.333754,-3.176769,-5.417114,0.973203,0.328932,0.226748,-5.416206,9.070120,-3.665915,-0.262112,-8.793742,3.375346,-7.011687,-0.618665,-8.941747,-5.227679,2.599155,-3.745514,8.798543,1.461217,-3.963167,-6.232299,9.291493,9.979574,7.446751,-0.111486,7.131441,0.973252,0.982012,3.323341,-5.706220,0.770077,-2.148588,-3.352359,0.166327,-7.439598,-5.918841,9.245759,7.670158,6.929668,-1.272855,-4.462613,-3.681620,1.029497,-7.751065,6.885816,4.944358,-0.730827,-7.176112,6.109942,-2.986151,4.361163,-7.773919,-7.501122,7.063549,-7.082412,8.466051,-8.567170,8.978023,-2.182659,-4.632619,-0.612208,-7.544280,9.524309,3.966613,3.966674,4.674308,-1.937686,1.441069,7.836801,4.185074,-3.448124,-3.411785,-7.151554,6.445407,3.739109,-9.741523,6.966360,3.422299,6.816515,3.917133,-8.376916,-5.250103,-0.682058,-5.896229,-2.584685,-6.972212,-1.235081,4.927892,-3.207701,3.808027,-2.357334,5.191522,6.939524,7.004257,-7.436810,4.723582,2.511511,9.895920,6.479483,9.209810,5.202933,-2.450596,-7.978447,-1.196913,-4.792366,9.245380,8.470952,-1.651586,4.938678,-6.354307,-2.321734,-1.125714,7.949029,-8.029531,7.889825,-5.944223,0.873214,5.815545,6.533119,-6.871862,1.346133,-3.751444,-1.329907,4.209731,-4.254838,4.803222,2.804130,-3.533596,-9.925257,6.850589,-3.390797,-3.832240,8.102249,-8.396607,-0.161111,-1.881663,-8.971640,-9.547341,-3.298821,-4.914357,7.893046,8.092577,1.032982,4.289826,-1.982259,-6.350171,5.695047,-3.715297,-9.449682,4.044543,7.356323,-4.756722,-0.346649,3.728140,8.522828,-3.323070,6.588717,0.757706,2.263740,-9.292146,-5.035399,8.513469,-7.656141,-8.046259,-5.388496,3.309862,3.380110,8.153701,-6.469227,-0.854794,-8.530525,0.717919,7.617071,-2.719084,1.612090,-5.414252,6.179768,0.563433,-5.382934,-9.243043,0.037663,-4.440808,-4.726942,3.252546,-7.597101,-8.379949,-6.763796,0.700506,-5.145726,-7.198221,-5.473888,9.771579,-9.065435,1.579881,-3.153359,7.194029,7.738260,7.339415,9.248722,9.667586,-4.836345,-6.390958,0.777305,-8.674030,-4.504602,4.377663,-4.379379,-7.421575,-5.209553,0.087002,-5.794110,-9.987862,-8.712100,8.866496,-6.118486,-4.966931,-1.192597,8.452785,-7.231665,1.310579,6.667384,4.154910,-3.510306,-0.989347,-6.563294,3.291513,4.185298,-5.147846,5.405725,1.569557,-9.111345,0.058076,6.031208,-7.973538,-8.142212,-9.377102,1.800262,1.028301,6.584832,-9.517265,8.224353,-0.052652,4.560641,7.508533,-2.595929,3.728964,-4.609241,8.848222,3.294706,0.329283,-4.000264,7.098507,5.602198,1.145321,1.126369,-9.938357,1.277797,7.327176,-2.059975,-5.939558,5.294142,7.102744,-2.365819,5.685838,5.025700,2.005495,-5.663643,1.617557,-1.296363,0.578658,-5.021732,-8.580905,-9.297459,-5.942778,-0.576364,-9.146957,-3.025402,5.437588,-5.162294,4.123367,3.865056,7.999927,0.180144,-0.768985,6.720048,9.089320,1.971450,-5.422491,2.545903,-2.611148,3.514557,-1.696941,2.889181,-0.787174,-8.418507,2.664122,-3.537119,-8.689406,8.386528,1.319053,-6.904584,-2.425037,3.478813,7.930480,2.577982,-5.750851,-7.271888,6.464990,0.674038,-8.768903,9.823686,7.277056,-7.098462,4.590710,-6.238405,6.095437,-1.729013,7.420442,-2.855721,-9.121930,-1.084080,-3.672425,3.660725,-6.833746,3.892764,0.351410,-6.741472,-0.285656,-0.124501,-4.655753,5.986800,3.745546,9.129159,8.195809,8.873247,-8.852219,-2.771256,5.448790,-0.755823,-2.802735,-5.680384,-4.244823,0.272690,3.186296,-6.375259,-1.331469,2.466481,6.722345,-4.876531,-8.967332,7.666968,-3.860178,4.005306,2.585177,0.196938,7.717666,6.206897,8.619613,5.624623,-4.911867,-7.428546,5.422508,-2.914521,0.414811,8.219337,9.908148,-9.725684,-8.825665,0.682590,4.844799,-4.571920,-1.997009,-2.635964,-6.431345,-3.563331,0.798850,5.444386,3.968885,-7.414355,3.167852,-4.472280,-1.070749,-8.471066,3.081816,-8.564300,-1.799604,6.794344,9.659246,-8.975083,0.229020,-4.100838,-6.707149,3.602141,-6.144757,-8.831426,6.500904,-8.600281,4.894938,4.990589,-2.535065,8.227323,-9.684792,6.782961,-7.921219,9.081859,-4.112976,-5.056593,9.121936,-2.506277,4.616357,2.144599,-4.285626,-0.128160,-9.033242,-8.080510,-4.593010,-9.208702,-6.703361,-9.939997,4.236768,6.592546,7.999685,-7.659315,9.885599,-7.959267,5.492711,-0.470627,9.414687,1.650050,-0.606710,-5.013458,3.508407,0.812676,-1.647075,-1.018076,5.525437,-9.350568,-3.272100,7.601111,0.733114,-4.574336,-9.824640,-7.163496,-3.298922,4.433244,8.335376,4.813651,-0.815521,2.937761,-3.603065,2.556688,3.674983,-8.590575,-4.334768,0.471076,-5.860341,0.670662,-0.524131,-0.799916,8.401068,0.647886,-2.522413,-6.171012,3.625721,2.137316,6.174263,7.290426,-5.962945,-2.791171,-3.925779,3.909270,-4.416776,7.820033,-3.138860,7.122066,1.633716,3.071510,1.951097,9.428080,9.617830,-1.024026,4.496283,8.434062,2.848452,-7.619646,0.694616,-5.403016,-2.990373,9.279994,-6.795932,8.749885,1.388892,4.871579,-1.073155,-4.996838,1.758734,-0.543421,-2.538174,4.725568,-9.141555,2.098367,9.911210,6.515525,3.025633,-2.050546,5.906863,-1.875699,-9.195281,9.986255,-0.319097,-6.723085,-0.745119,-9.642310,-0.421472,-2.330310,6.705841,4.730012,-8.899712,9.677773,1.949701,6.566895,7.908128,2.482325,2.127309,-2.040001,-4.439952,5.418812,4.705875,-1.306143,3.187904,-7.215931,-5.325782,1.903008,-9.580201,0.246179,9.466497,-0.812645,-4.544889,-0.894669,-6.451526,6.172557,-8.976810,5.947330,-6.786778,5.656843,5.524217,-2.472949,3.601766,-1.241548,-4.053812,2.809851,-6.001051,-5.492548,-6.545846,-7.649455,6.486137,5.869395,-9.394674,-4.320660,-7.025601,9.114288,0.368189,-1.252482,7.669682,4.267841,-9.211681,4.664041,-5.972433,0.213490,4.406732,-1.162781,0.707124,-1.682311,-4.850718,-7.710253,-9.858683,-7.807877,7.987039,2.741543,7.184642,0.636521,0.671685,-4.801059,-6.762743,-4.402404,5.489251,6.907968,5.169120,3.365003,-0.852709,-8.728539,3.416096,-4.477873,4.584807,0.176360,-3.617028,-5.988144,-1.128349,-7.346385,-7.157668,-3.904889,7.695525,-2.538783,6.787625,-3.038338,2.131852,-1.541484,-1.764746,-3.099599,-4.944756,-9.131872,-4.949433,5.286253,-9.526034,7.089862,-6.327188,-6.189053,7.890735,-5.818779,-2.079894,-7.316137,-2.775572,-6.090480,-6.724758,-1.832429,9.855737,3.748918,-8.582535,-9.978666,-5.870920,2.427804,1.419431,-3.745265,9.150015,7.858715,-3.944601,1.367175,-8.934033,7.749123,-2.117163,-5.428194,-6.902182,0.908216,-3.558242,9.659208,-1.266473,4.219901,5.996892,-5.345698,8.656836,-2.006099,-9.495180,-9.968359,-4.766217,5.259293,6.124008,-1.241979,0.154221,-6.451885,0.310488,0.924629,8.051928,5.995599,-2.344886,4.471791,9.879883,7.538062,3.420497,-9.516989,6.325493,1.239709,0.805149,4.888786,5.377780,-9.946960,9.410836,-2.913695,6.507209,1.220551,-9.854750,9.760224,7.143991,5.256814,-7.435754,-1.412676,1.058099,-2.960623,8.264505,5.252631,-3.081863,3.108859,7.371958,-8.871006,8.554701,8.240756,-2.022493,2.841150,1.558695,-5.871736,-5.944575,-3.150568,-5.016635,7.175994,-3.098679,0.116151,-4.007321,-3.177332,-4.467063,-0.220300,8.659500,9.412578,-7.963400,3.604013,3.856144,5.103479,-0.978760,6.892363,5.266248,-7.043060,-9.507240,-5.250852,-9.062623,-8.528174,3.869915,-7.057423,-2.276304,-6.449643,-3.008208,0.599763,2.134431,5.548038,-4.938600,8.002152,6.077372,7.744300,2.561394,0.691730,-4.475612,-5.178457,-2.998899,-9.434510,4.971225,-9.113623,-6.329053,8.756739,-1.128412,2.664765,-4.142343,-8.640880,-7.811129,8.953934,5.728281,8.200840,-6.551894,2.027760,-0.601989,-1.725347,-5.921005,5.523027,-7.441902,2.273774,-0.320483,0.673472,9.774815,-7.267422,0.476444,7.126547,-2.636108,-1.887929,-7.707150,-8.245234,-2.290095,-3.063803,4.153022,6.860743,0.474308,-3.526451,-9.782450,-0.445517,-0.537509,6.400466,-6.911728,-8.063511,-4.439067,4.421711,6.073578,4.345177,-4.246528,-4.972620,-3.407753,6.878660,-6.402993,3.547103,2.485095,-5.155421,-2.326588,1.377782,-0.428281,-5.635715,6.969512,-0.739722,2.750118,-8.750863,2.091275,5.203450,-7.935332,8.020734,-6.691044,5.066543,-3.575406,4.195908,-8.939267,7.546701,3.719870,0.519411,-0.497220,4.169359,8.009990,6.556121,-6.810370,-4.787008,-4.318783,-9.394802,-8.597973,-3.144793,2.723081,-6.194532,8.327556,0.704766,9.621293,4.543029,-5.882885,8.518931,-2.229412,-0.608318,8.753872,2.624022,1.810326,-5.725313,-3.623826,-4.258732,4.638592,9.832967,7.419813,0.333264,1.615223,-0.862534,9.237715,1.969991,-3.046711,-9.751374,2.434542,5.201171,0.353923,-6.032492,2.643773,-0.939536,3.785890,7.234702,-9.182606,9.570157,3.199252,9.339739,5.018453,-0.284142,-3.987133,9.829090,-9.706755,-5.771527,4.228839,4.979676,-2.009606,2.167098,3.354866,-5.364642,0.339726,6.701696,1.583928,2.911190,-8.944794,-7.136039,-2.914594,-5.749406,3.593423,2.423565,4.065367,5.904290,-7.317901,-3.780187,0.565944,9.135202,-0.447841,1.616301,9.181222,1.807852,-7.752163,-6.375553,0.684246,2.541269,-0.583954,4.374844,-1.338638,5.404340,5.980101,-9.334372,-2.844332,5.393675,7.051537,-3.915916,8.610431,-4.571782,2.127166,2.169512,7.314980,5.555592,2.326010,4.987440,8.674160,-9.552954,-9.259769,3.155440,-0.020335,-3.998497,8.140924,-1.028794,-9.258307,-5.327424,6.782811,-7.772718,2.358892,-9.660510,7.821298,-8.891648,-2.480268,4.175586,7.873452,8.608155,-3.510431,1.864327,-0.207457,-9.120907,-6.158785,3.731665,-5.239202,-2.711265,6.660692,-8.020921,3.255423,-3.367003,8.105252,-1.447801,-1.535209,-5.528420,4.702039,5.253335,9.432773,-5.512708,-1.664956,-9.109450,-3.409062,-1.088796,2.743465,-1.160797,5.454185,2.392903,-8.317550,-3.739013,6.367489,4.857256,-6.420401,9.263267,9.167074,-0.463941,5.051741,-1.194620,3.240187,0.557129,-9.449821,0.443770,-0.808216,-0.776114,3.676501,-3.926338,-3.321325,6.013575,-9.929206,-0.751200,8.060868,8.785931,6.795417,-5.597933,5.114113,-5.684807,2.243697,0.334585,-8.207762,-6.249834,-5.365077,-5.091172,1.200393,-6.481368,-5.024778,9.940079,6.546311,-3.198951,-9.648865,0.734460,3.732755,5.832364,-1.740379,-5.937580,2.300891,-2.791795,3.433396,-1.138777,-2.008942,-7.764786,5.668740,-2.431234,1.332892,-3.335973,8.889407,0.695182,8.374033,9.814935,6.436277,-6.216354,9.385716,4.918031,4.604839,8.150882,-5.876408,1.925860,7.264129,-3.163558,-8.754337,-7.281504,-5.205654,-2.202519,2.688831,2.404105,-3.877621,3.369220,-9.497268,-7.825740,-4.813336,-6.879158,-7.695566,-1.053863,8.150732,-2.630719,5.868877,-5.374316,-6.495906,8.212704,-5.658818,-2.372394,-4.181808,-6.997100,-8.739958,7.044600,-4.570229,1.844258,5.864800,-7.683757,-7.909636,-4.100115,-8.962957,-5.759523,-9.018002,-8.980906,-7.032327,0.113090,-3.093678,-4.039209,-8.181268,0.518778,9.675005,0.007913,-3.103628,4.693657,-1.980980,6.408630,-4.963658,5.903472,7.742146,-8.434321], dtype = "float64")#candidate|7608|(1144,)|const|float64
bop_7609 = relay.bitwise_xor(uop_7599.astype('uint8'), relay.reshape(const_7608.astype('uint8'), relay.shape_of(uop_7599))) # shape=(1144,)
bop_7612 = relay.bitwise_xor(uop_7601.astype('uint8'), relay.reshape(const_7608.astype('uint8'), relay.shape_of(uop_7601))) # shape=(1144,)
output = relay.Tuple([call_7583,bop_7609,])
output2 = relay.Tuple([call_7584,bop_7612,])
func_7624 = relay.Function([], output)
mod['func_7624'] = func_7624
mod = relay.transform.InferType()(mod)
mutated_mod['func_7624'] = func_7624
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7624_call = mutated_mod.get_global_var('func_7624')
call_7625 = func_7624_call()
output = call_7625
func_7626 = relay.Function([], output)
mutated_mod['func_7626'] = func_7626
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_7635 = relay.TupleGetItem(func_4262_call(), 0)
call_7636 = relay.TupleGetItem(func_4264_call(), 0)
output = relay.Tuple([call_7635,])
output2 = relay.Tuple([call_7636,])
func_7641 = relay.Function([], output)
mod['func_7641'] = func_7641
mod = relay.transform.InferType()(mod)
output = func_7641()
func_7642 = relay.Function([], output)
mutated_mod['func_7642'] = func_7642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4951_call = mod.get_global_var('func_4951')
func_4952_call = mutated_mod.get_global_var('func_4952')
call_7668 = relay.TupleGetItem(func_4951_call(), 0)
call_7669 = relay.TupleGetItem(func_4952_call(), 0)
uop_7673 = relay.log10(call_7668.astype('float64')) # shape=(11, 12, 8)
uop_7675 = relay.log10(call_7669.astype('float64')) # shape=(11, 12, 8)
uop_7700 = relay.cosh(call_7668.astype('float64')) # shape=(11, 12, 8)
uop_7702 = relay.cosh(call_7669.astype('float64')) # shape=(11, 12, 8)
uop_7714 = relay.sigmoid(call_7668.astype('float64')) # shape=(11, 12, 8)
uop_7716 = relay.sigmoid(call_7669.astype('float64')) # shape=(11, 12, 8)
uop_7721 = relay.sin(uop_7700.astype('float32')) # shape=(11, 12, 8)
uop_7723 = relay.sin(uop_7702.astype('float32')) # shape=(11, 12, 8)
func_7561_call = mod.get_global_var('func_7561')
func_7562_call = mutated_mod.get_global_var('func_7562')
call_7726 = relay.TupleGetItem(func_7561_call(), 0)
call_7727 = relay.TupleGetItem(func_7562_call(), 0)
output = relay.Tuple([uop_7673,uop_7714,uop_7721,call_7726,])
output2 = relay.Tuple([uop_7675,uop_7716,uop_7723,call_7727,])
func_7733 = relay.Function([], output)
mod['func_7733'] = func_7733
mod = relay.transform.InferType()(mod)
output = func_7733()
func_7734 = relay.Function([], output)
mutated_mod['func_7734'] = func_7734
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7387_call = mod.get_global_var('func_7387')
func_7389_call = mutated_mod.get_global_var('func_7389')
call_7743 = func_7387_call()
call_7744 = func_7387_call()
output = call_7743
output2 = call_7744
func_7755 = relay.Function([], output)
mod['func_7755'] = func_7755
mod = relay.transform.InferType()(mod)
mutated_mod['func_7755'] = func_7755
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7755_call = mutated_mod.get_global_var('func_7755')
call_7756 = func_7755_call()
output = call_7756
func_7757 = relay.Function([], output)
mutated_mod['func_7757'] = func_7757
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3863_call = mod.get_global_var('func_3863')
func_3864_call = mutated_mod.get_global_var('func_3864')
call_7762 = func_3863_call()
call_7763 = func_3863_call()
const_7791 = relay.const([2,-9,10,6,3,-6,-8,-2,2,1,1,6,-4,-7,-3,-2,10,-9,3,4,7,-6,10,7,7,-6,3,8,-9,8,-5,7,2,-6,3,10,2,6,-1,6,8,10,5,9,-6,8,-9,-7,-2,3,-4,5,8,-10,4,-1,-7,6,-9,-8,3,-6,-2,3,-7,1,-1,9,-8,8,-2,-6,10,-5,-8,3,10,6,-4,9,-7,-5,7,-8,3,-8,-7,-6,-6,-7,5,-8,1,8,-2,1,7,10,9,8,-7,7,-1,-2,-5,3,-9,4,4,-9,10,8,5,-1,9,8,-6,-2,1,7,-5,7,-9,7,-4,-10,6,2,-9,8,2,5,-3,8,3,10,-4,-1,8,8,4,-8,9,2,5,-5,-7,9,-7,4,2,7,10,3,-8,4,1,2,6,-8,-3,-9,1,-10,7,-8,9,7,5,-1,-2,-3,-7,-5,-9,3,5,-4,-4,-7,-8,9,10,9,7,6,-5,2,-4,-6,-9,-6,-2,1,3,-6,2,-10,-3,-10,1,10,7,-9,-1,3,-3,-4,-9,3,-4,-5,-4,1,-8,-8,6,-4,-1,3,5,4,7,4,-5,-8,-6,7,1,-9,-8,-5,-6,9,-9,9,-10,-5,1,3,-6,6,5,4,-3,3,10,8,-7,1,-9,4,-5,4,-8,-3,9,8,5,10,-3,-1,-2,-6,6,-9,-2,-2,-1,3,7,-6,9,10,4,-4,-4,-9,-4,5,6,4,-8,3,5,9,-5,-8,-8,10,8,-10,-9,-7,8,2,8,10,-4,-5,2,-1,-2,-3,7,4,-7,8,-5,-10,10,7,-8,6,-3,-1,9,-1,-2,1,8,-7,-10,-3,-3,-8,-5,-1,-5,4,-9,2,-10,-7,7,-4,-3,-2,-7,8,5,10,-2,-2,-9,-6,5,6,-10,8,3,2,2,-7,-8,6,10,5,1,10,6,-10,-3,-6,1,10,-3,-10,-6,-3,-3,-10,-7,6,2,9,3,9,-8,-8,-9,5,-1,-7,5,3,-9,10,8,7,5,8,-7,-3,-3,8,-9,4,-9,9,8,-1,-7,-6,-8,-6,9,10,-2,3,-5,-7,-3,4,-1,7,9,8,-10,2,7,10,2,2,-4,-9,-5,3,9,-1,4,-2,7,-8,6,4,8,7,-7,-3,-5,9,-1,7,10,10,5,7,-2,6,5,-1,-7,2,-9,-4,9,4,4,10,7,-9,4,4,-1,3,-2,8,7,3,6,10,-1,-5,-6,-10,-9,-5,3,6,-10,9,-7,3,-8,10,6,-9,-6,1,-3,3,9,2,7,-7,1,1,2,10,2,4,-1,4,-9,-7,7,-2,-10,-8,2,-6,-1,1,-10,-5,-2,-2,-2,-8,1,-1,7,-5,-8,6,10,3,8,9,4,2,-3,-8,-1,5,-4,-10,-2,10,10,9,7,-5,7,-4,-6,-6,-1,3,3,-3,4,7,-2,5,-2,-4,-8,3,1,-6,-4,-5,9,6,-5,8,-6,-5,-4,2,5,-5,5,8,-7,-4,-7,7,-8,-5,-4,2,9,-10,-8,-1,8,-7,5,-10,8,-5,-4,10,-5,-5,-9,3,-4,3,5,8,1,6,-9,-2,2,-3,-10,-8,-7,6,-2,3,1,-2,1,8,3,2,2,-10,-1,-1,-5,4,6,7,-10,-5,-8,5,-5,3,-9,-2,1,5,7,1,-9,-4,-6,2,-1,6,2,-1,6,-6,1,6,-10,-3,1,8,10,4,5,3,2,7,1,-2,-2,-10,4,4,-8,-2,-1,-8,4,-9,7,7,9,3,10,5,-4,4,4,2,6,-3,-4,-10,-3,9,10,1,-8,1,2,9,-2,3,-2,10,-1,-9,-3,5,-9,-8,-10,10,5,-5,9,4,8,9,-4,-2,-9,-2,-9,10,1,6,-9,9,-8,-3,-10,-8,4,-10,4,3,-2,-8,2,-8,-6,-4,1,-10,-8,3,2,8,-9,-4,2,-10,4,5,6,9,-8,-8,8,5,3,-6,3,10,-4,-7,-6,3,5,-8,-1,-4,1,7,9,5,-2,-8,-5,-7,5,-7,2,-2,8,-7,-6,10,-2,9,9,-5,5,5,4,-10,5,9,-7,-4,1,-8,2,-6,-4,-8,-9,5,-8,5,-2,8,-2,7,-10,-6,4,-7,1,3,-8,-2,3,2,-10,1,2,3,10,5,3,-8,7,-5,9,-6,6,6,7,-1,3,-1,5,10,4,-5,9,3,-9,4,6,-6,10,-4,-8,-4,-8,9,-6,1,6,-8,9,3,-10,7,1,-8,5,-7,-8,-5,5,2,-3,-3,10,6,-3,-7,-9,10,-10,-10,2,-6,-8,9,-5,5,5,-6,9,4,4,6,-8,1,7,-2,9,-1], dtype = "uint8")#candidate|7791|(900,)|const|uint8
bop_7792 = relay.logical_or(call_7762.astype('bool'), relay.reshape(const_7791.astype('bool'), relay.shape_of(call_7762))) # shape=(900,)
bop_7795 = relay.logical_or(call_7763.astype('bool'), relay.reshape(const_7791.astype('bool'), relay.shape_of(call_7763))) # shape=(900,)
output = bop_7792
output2 = bop_7795
func_7798 = relay.Function([], output)
mod['func_7798'] = func_7798
mod = relay.transform.InferType()(mod)
output = func_7798()
func_7799 = relay.Function([], output)
mutated_mod['func_7799'] = func_7799
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7755_call = mod.get_global_var('func_7755')
func_7757_call = mutated_mod.get_global_var('func_7757')
call_7873 = func_7755_call()
call_7874 = func_7755_call()
uop_7875 = relay.exp(call_7873.astype('float64')) # shape=(900,)
uop_7877 = relay.exp(call_7874.astype('float64')) # shape=(900,)
output = uop_7875
output2 = uop_7877
func_7893 = relay.Function([], output)
mod['func_7893'] = func_7893
mod = relay.transform.InferType()(mod)
mutated_mod['func_7893'] = func_7893
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7893_call = mutated_mod.get_global_var('func_7893')
call_7894 = func_7893_call()
output = call_7894
func_7895 = relay.Function([], output)
mutated_mod['func_7895'] = func_7895
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2332_call = mod.get_global_var('func_2332')
func_2333_call = mutated_mod.get_global_var('func_2333')
call_8014 = func_2332_call()
call_8015 = func_2332_call()
var_8023 = relay.var("var_8023", dtype = "int16", shape = (10, 11, 5))#candidate|8023|(10, 11, 5)|var|int16
bop_8024 = relay.greater_equal(call_8014.astype('bool'), relay.reshape(var_8023.astype('bool'), relay.shape_of(call_8014))) # shape=(10, 11, 5)
bop_8027 = relay.greater_equal(call_8015.astype('bool'), relay.reshape(var_8023.astype('bool'), relay.shape_of(call_8015))) # shape=(10, 11, 5)
uop_8038 = relay.log(bop_8024.astype('float64')) # shape=(10, 11, 5)
uop_8040 = relay.log(bop_8027.astype('float64')) # shape=(10, 11, 5)
func_3938_call = mod.get_global_var('func_3938')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_8042 = func_3938_call()
call_8043 = func_3938_call()
func_2258_call = mod.get_global_var('func_2258')
func_2260_call = mutated_mod.get_global_var('func_2260')
call_8048 = relay.TupleGetItem(func_2258_call(), 1)
call_8049 = relay.TupleGetItem(func_2260_call(), 1)
output = relay.Tuple([uop_8038,call_8042,call_8048,])
output2 = relay.Tuple([uop_8040,call_8043,call_8049,])
func_8055 = relay.Function([var_8023,], output)
mod['func_8055'] = func_8055
mod = relay.transform.InferType()(mod)
var_8056 = relay.var("var_8056", dtype = "int16", shape = (10, 11, 5))#candidate|8056|(10, 11, 5)|var|int16
output = func_8055(var_8056)
func_8057 = relay.Function([var_8056], output)
mutated_mod['func_8057'] = func_8057
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7733_call = mod.get_global_var('func_7733')
func_7734_call = mutated_mod.get_global_var('func_7734')
call_8078 = relay.TupleGetItem(func_7733_call(), 3)
call_8079 = relay.TupleGetItem(func_7734_call(), 3)
func_5187_call = mod.get_global_var('func_5187')
func_5188_call = mutated_mod.get_global_var('func_5188')
call_8080 = relay.TupleGetItem(func_5187_call(), 0)
call_8081 = relay.TupleGetItem(func_5188_call(), 0)
func_6939_call = mod.get_global_var('func_6939')
func_6940_call = mutated_mod.get_global_var('func_6940')
call_8115 = relay.TupleGetItem(func_6939_call(), 0)
call_8116 = relay.TupleGetItem(func_6940_call(), 0)
output = relay.Tuple([call_8078,call_8080,call_8115,])
output2 = relay.Tuple([call_8079,call_8081,call_8116,])
func_8127 = relay.Function([], output)
mod['func_8127'] = func_8127
mod = relay.transform.InferType()(mod)
mutated_mod['func_8127'] = func_8127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8127_call = mutated_mod.get_global_var('func_8127')
call_8128 = func_8127_call()
output = call_8128
func_8129 = relay.Function([], output)
mutated_mod['func_8129'] = func_8129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6557_call = mod.get_global_var('func_6557')
func_6558_call = mutated_mod.get_global_var('func_6558')
call_8170 = relay.TupleGetItem(func_6557_call(), 0)
call_8171 = relay.TupleGetItem(func_6558_call(), 0)
output = relay.Tuple([call_8170,])
output2 = relay.Tuple([call_8171,])
func_8177 = relay.Function([], output)
mod['func_8177'] = func_8177
mod = relay.transform.InferType()(mod)
output = func_8177()
func_8178 = relay.Function([], output)
mutated_mod['func_8178'] = func_8178
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5860_call = mod.get_global_var('func_5860')
func_5862_call = mutated_mod.get_global_var('func_5862')
call_8209 = func_5860_call()
call_8210 = func_5860_call()
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
var_8215 = relay.var("var_8215", dtype = "uint16", shape = (160,))#candidate|8215|(160,)|var|uint16
call_8214 = relay.TupleGetItem(func_2853_call(relay.reshape(var_8215.astype('uint16'), [160,])), 4)
call_8216 = relay.TupleGetItem(func_2856_call(relay.reshape(var_8215.astype('uint16'), [160,])), 4)
func_3293_call = mod.get_global_var('func_3293')
func_3296_call = mutated_mod.get_global_var('func_3296')
var_8267 = relay.var("var_8267", dtype = "float64", shape = (1056, 1))#candidate|8267|(1056, 1)|var|float64
call_8266 = relay.TupleGetItem(func_3293_call(relay.reshape(var_8267.astype('float64'), [11, 12, 8])), 0)
call_8268 = relay.TupleGetItem(func_3296_call(relay.reshape(var_8267.astype('float64'), [11, 12, 8])), 0)
output = relay.Tuple([call_8209,call_8214,var_8215,call_8266,var_8267,])
output2 = relay.Tuple([call_8210,call_8216,var_8215,call_8268,var_8267,])
func_8274 = relay.Function([var_8215,var_8267,], output)
mod['func_8274'] = func_8274
mod = relay.transform.InferType()(mod)
var_8275 = relay.var("var_8275", dtype = "uint16", shape = (160,))#candidate|8275|(160,)|var|uint16
var_8276 = relay.var("var_8276", dtype = "float64", shape = (1056, 1))#candidate|8276|(1056, 1)|var|float64
output = func_8274(var_8275,var_8276,)
func_8277 = relay.Function([var_8275,var_8276,], output)
mutated_mod['func_8277'] = func_8277
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mod.get_global_var('func_5986')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_8313 = func_5986_call()
call_8314 = func_5986_call()
uop_8323 = relay.acos(call_8313.astype('float64')) # shape=(11, 12, 8)
uop_8325 = relay.acos(call_8314.astype('float64')) # shape=(11, 12, 8)
func_343_call = mod.get_global_var('func_343')
func_345_call = mutated_mod.get_global_var('func_345')
const_8364 = relay.const([6,9,1,-5,-9,2,2,1,7,2,-10,5,9,10,1,-2,-5,10,1,4,2,-1,-3,8,2,-6,-4,10,2,-7,-9,1,10,-9,-9,-10,-1,7,-3,6,7,-8,4,-6,7,-1,-2,10,6,-2,4,-5,-3,1,-9,1,-10,9,-6,2,10,-2,8,6,-3,8,-2,-2,-5,-3,1,-10,-5,-3,-8,8,8,2,-4,-9,-7,-2,-10,-6,-9,-9,4,-9,2,4,9,-6,2,3,6,-10,-9,-4,1,3,-10,10,4,7,-3,4,2,9,9,9,3,10,6,-10,7,-6,-6,5,6,-5,-2,1,10,10,-1,7,-2,10,3,4,-3,-9,7,-10,3,-3,4,-10,3,6,-1,-2,7,1,-1,-2,-5,3,2,-4,9,-1,-1,-9,-3,2,5,-6,-5,-6,2,-1,6,9,-9,4,-2,3,6,-10,9,10,6,-8,-3,-7,2,-1,4,-8,-3,-3,7,-10,9,1,-4,2,9,2,8,-6,-9,-1,-7,8,-3,-6,-8,-3,-8,5,-7,3,10,-7,-5,9,10,-1,-8,6,9,-2,-8,-3,1,-10,4,-4,9,3,4,9,9,-10,8,-10,10,5,-1,6,-8,-2,-10,-9,8,4,-1,6,3,-8,-6,2,-4,-5,7,9,-2,10,-5,-10,8,-5,-8,-10,10,4,8,-3,-4,9,4,9,-7,7,-7,-7,2,5,-4,1,-2,-10,-2,7,3,-1,4,-10,-10,-4,-5,-1,2,5,10,-8,10,5,2,9,-5,-2,-10,-1,1,-5,-6,-1,4,-4,1,-7,3,2,1,1,-2,7,5,-2,5,3,8,2,10,-4,-10,-4,2,-6,-9,-3,10,-3,-9,-3,4,6,2,4,3,-4,9,-4,4,-6,-9,-2,-8,-5,-1,1,-6,9,-4,9,1,10,1,-10,6,-6,4,5,6,-9,10,-4,7,-4,6,-8,-7,6,-4,3,-4,-6,-10,10,-5,-2,-1,1,4,8,-9,7,-7,-3,1,3,-4,4,4,-9,5,3,-2,3,-10,-5,1,4,-5,1,3,-9,-6,3,9,8,5,-1,6,2,8,4,7,7,4,-8,-3,8,-2,-9,2,6,-9,-4,-2,10,4,-9,-3,-7,-6,6,1,-1,4,5,-9,5,1,-6,8,3,9,4,-10,-9,-5,-8,-10,1,-10,9,-1,-1,4,5,3,-3,-2,4,-10,-6,1,-1,-2,-2,1,4,-6,4,2,1,7,-8,2,9,-9,5,1,-9,-10,-7,-2,5,-8,9,10,5,-3,6,-7,7,2,-3,10,9,-5,-5,9,-7,10,-9,4,-8,7,2,1,-7,3,-7,4,-5,2,5,1,-10,-6,1,-3,8,-3,1,10,-6,-9,-6,-10,-1,-10,-6,8,1,-7,5,3,1,4,1,-1,8,1,5,6,6,2,-6,1,4,2,-9,3,-1,1,2,9,6,-6,1,-6,-8,8,1,-3,-7,-4,-8,-8,3,-10,-3,-5,-9,9,2,9,-6,-4,-6,1,2,4,2,10,1,-10,-1,3,-7,1,8,9,-7,-8,-10,8,4,-1,-4,-2,10,-7,-9,10,3,-7,-1,2,9,-3,-8,-2,-3,-9,-3,1,-2,-6,-1,9,10,-2,2,9,5,-2,-2,-7,7,-3,-6,-6,5,1,10,7,-8,1,6,-3,3,-5,-10,-2,-8,-7,-1,3,7,-9,6,7,8,3,-9,4,2,8,4,8,9,4,-8,-4,-3,-2,-1,-4,-8,-5,-3,-10,10,6,-10,-4,10,8,9,5,-7,2,7,-8,-10,1,-2,10,-8,6,3,-6,-9,4,-6,-9,-7,10,-6,-10,-3,-2,1,7,-10,-5,2,-7,6,9,2,5,-9,-5,5,-1,-6,3,7,-5,4,2,-3,-7,2,-1,5,6,-2,9,8,-8,-5,2,-3,-10,8,5,3,-2,-9,1,-10,-8,-8,2,8,-10,10,-6,-8,-4,-10,-10,2,-10,-5,-4,8,7,-2,-1,6,-5,3,1,-10,8,3,-5,-7,5,5,-7,5,6,1,-8,-1,5,-4,5,-3,-6,-10,3,-3,1,10,-9,-4,-10,6,-3,-1,-1,9,1,-9,-10,5,10,2,7,1,-4,-3,-1,-6,-6,-3,4,-10,-3,3,10,7,-9,3,-10,2,-1,-2,-3,-7,5,-3,3,5,4,1,9,8,-6,2,7,-2,8,-1,10,10,-9,4,8,-9,-1,-10,8,-6,9,10,1,-4,-6,8,6,-1,10,-8,9,3,-8,10,-1,10,-4,5,4,4,6,-6,-9,7,6,-2,-5,-5,-7,8,-9,7,-3,-1,-2,7,-7,2,3,9,-7,4,-3,-2,2,-10,10,-6,-2,10,-2,-5,1,6], dtype = "uint8")#candidate|8364|(900,)|const|uint8
call_8363 = relay.TupleGetItem(func_343_call(relay.reshape(const_8364.astype('uint8'), [10, 6, 15])), 0)
call_8365 = relay.TupleGetItem(func_345_call(relay.reshape(const_8364.astype('uint8'), [10, 6, 15])), 0)
func_2306_call = mod.get_global_var('func_2306')
func_2310_call = mutated_mod.get_global_var('func_2310')
const_8372 = relay.const([[-9,3,-10,-10,-3,-8,-5,-7,-7,2,-1,2,-10,-10,-5,8,-1,-9,-7,2,1,1,2,-9,-2,-10,7,-3,-3,5,-9,-9,1,5,-8,-9,7,-9,7,10],[8,-4,-4,-3,10,-4,-8,-3,-4,8,-5,2,-9,5,-8,7,6,10,-10,6,10,1,6,8,2,3,7,1,8,-1,-2,-2,-2,8,-7,4,-8,-5,8,-6],[1,8,-7,-3,-7,-3,3,-9,10,-6,6,4,4,-10,-5,3,-6,-6,-3,9,-1,1,8,10,-9,-4,-8,-1,-8,-7,7,-10,2,-7,-3,5,9,-10,5,-6],[8,-1,8,9,3,8,-5,-3,2,-1,6,-1,-1,-5,-2,-3,1,-5,8,-7,-9,10,-3,2,-3,-2,-7,4,-5,4,-10,-6,-3,-1,6,-3,-3,10,6,-3]], dtype = "uint16")#candidate|8372|(4, 40)|const|uint16
var_8373 = relay.var("var_8373", dtype = "uint8", shape = (240,))#candidate|8373|(240,)|var|uint8
call_8371 = relay.TupleGetItem(func_2306_call(relay.reshape(const_8372.astype('uint16'), [4, 40]), relay.reshape(var_8373.astype('uint8'), [240,]), ), 2)
call_8374 = relay.TupleGetItem(func_2310_call(relay.reshape(const_8372.astype('uint16'), [4, 40]), relay.reshape(var_8373.astype('uint8'), [240,]), ), 2)
output = relay.Tuple([uop_8323,call_8363,const_8364,call_8371,const_8372,var_8373,])
output2 = relay.Tuple([uop_8325,call_8365,const_8364,call_8374,const_8372,var_8373,])
func_8396 = relay.Function([var_8373,], output)
mod['func_8396'] = func_8396
mod = relay.transform.InferType()(mod)
mutated_mod['func_8396'] = func_8396
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8397 = relay.var("var_8397", dtype = "uint8", shape = (240,))#candidate|8397|(240,)|var|uint8
func_8396_call = mutated_mod.get_global_var('func_8396')
call_8398 = func_8396_call(var_8397)
output = call_8398
func_8399 = relay.Function([var_8397], output)
mutated_mod['func_8399'] = func_8399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4262_call = mod.get_global_var('func_4262')
func_4264_call = mutated_mod.get_global_var('func_4264')
call_8404 = relay.TupleGetItem(func_4262_call(), 0)
call_8405 = relay.TupleGetItem(func_4264_call(), 0)
func_4998_call = mod.get_global_var('func_4998')
func_5002_call = mutated_mod.get_global_var('func_5002')
var_8416 = relay.var("var_8416", dtype = "int16", shape = (550,))#candidate|8416|(550,)|var|int16
var_8417 = relay.var("var_8417", dtype = "uint16", shape = (2, 80))#candidate|8417|(2, 80)|var|uint16
call_8415 = relay.TupleGetItem(func_4998_call(relay.reshape(var_8416.astype('int16'), [55, 10]), relay.reshape(var_8417.astype('uint16'), [160,]), ), 2)
call_8418 = relay.TupleGetItem(func_5002_call(relay.reshape(var_8416.astype('int16'), [55, 10]), relay.reshape(var_8417.astype('uint16'), [160,]), ), 2)
output = relay.Tuple([call_8404,call_8415,var_8416,var_8417,])
output2 = relay.Tuple([call_8405,call_8418,var_8416,var_8417,])
func_8433 = relay.Function([var_8416,var_8417,], output)
mod['func_8433'] = func_8433
mod = relay.transform.InferType()(mod)
mutated_mod['func_8433'] = func_8433
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8433_call = mutated_mod.get_global_var('func_8433')
var_8435 = relay.var("var_8435", dtype = "int16", shape = (550,))#candidate|8435|(550,)|var|int16
var_8436 = relay.var("var_8436", dtype = "uint16", shape = (2, 80))#candidate|8436|(2, 80)|var|uint16
call_8434 = func_8433_call(var_8435,var_8436,)
output = call_8434
func_8437 = relay.Function([var_8435,var_8436,], output)
mutated_mod['func_8437'] = func_8437
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7733_call = mod.get_global_var('func_7733')
func_7734_call = mutated_mod.get_global_var('func_7734')
call_8439 = relay.TupleGetItem(func_7733_call(), 3)
call_8440 = relay.TupleGetItem(func_7734_call(), 3)
output = relay.Tuple([call_8439,])
output2 = relay.Tuple([call_8440,])
func_8441 = relay.Function([], output)
mod['func_8441'] = func_8441
mod = relay.transform.InferType()(mod)
mutated_mod['func_8441'] = func_8441
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8441_call = mutated_mod.get_global_var('func_8441')
call_8442 = func_8441_call()
output = call_8442
func_8443 = relay.Function([], output)
mutated_mod['func_8443'] = func_8443
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4180_call = mutated_mod.get_global_var('func_4180')
call_8444 = relay.TupleGetItem(func_4179_call(), 0)
call_8445 = relay.TupleGetItem(func_4180_call(), 0)
func_7552_call = mod.get_global_var('func_7552')
func_7555_call = mutated_mod.get_global_var('func_7555')
var_8458 = relay.var("var_8458", dtype = "int8", shape = (195,))#candidate|8458|(195,)|var|int8
var_8459 = relay.var("var_8459", dtype = "uint16", shape = (160, 1))#candidate|8459|(160, 1)|var|uint16
call_8457 = relay.TupleGetItem(func_7552_call(relay.reshape(var_8458.astype('int8'), [3, 13, 5]), relay.reshape(var_8459.astype('uint16'), [160,]), ), 0)
call_8460 = relay.TupleGetItem(func_7555_call(relay.reshape(var_8458.astype('int8'), [3, 13, 5]), relay.reshape(var_8459.astype('uint16'), [160,]), ), 0)
func_6087_call = mod.get_global_var('func_6087')
func_6089_call = mutated_mod.get_global_var('func_6089')
call_8463 = func_6087_call()
call_8464 = func_6087_call()
output = relay.Tuple([call_8444,call_8457,var_8458,var_8459,call_8463,])
output2 = relay.Tuple([call_8445,call_8460,var_8458,var_8459,call_8464,])
func_8477 = relay.Function([var_8458,var_8459,], output)
mod['func_8477'] = func_8477
mod = relay.transform.InferType()(mod)
mutated_mod['func_8477'] = func_8477
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8477_call = mutated_mod.get_global_var('func_8477')
var_8479 = relay.var("var_8479", dtype = "int8", shape = (195,))#candidate|8479|(195,)|var|int8
var_8480 = relay.var("var_8480", dtype = "uint16", shape = (160, 1))#candidate|8480|(160, 1)|var|uint16
call_8478 = func_8477_call(var_8479,var_8480,)
output = call_8478
func_8481 = relay.Function([var_8479,var_8480,], output)
mutated_mod['func_8481'] = func_8481
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4297_call = mod.get_global_var('func_4297')
func_4298_call = mutated_mod.get_global_var('func_4298')
call_8483 = relay.TupleGetItem(func_4297_call(), 3)
call_8484 = relay.TupleGetItem(func_4298_call(), 3)
const_8485 = relay.const([[-3,4,-2,10,-5,-1],[5,3,1,4,-9,-7],[3,-9,7,7,-10,1],[-9,6,-3,1,6,-10],[9,9,6,-8,-3,3],[6,-1,10,10,7,5],[5,-10,1,2,-5,-7],[-4,-9,2,8,-2,4],[-4,-1,-2,-1,-2,10],[10,-3,-2,7,5,-2],[7,-5,-2,1,3,5],[8,-4,6,6,-7,-2],[-9,-2,4,-9,7,-2],[-3,3,6,-5,5,-7],[-5,-8,1,-9,8,3],[9,-4,8,-5,10,-10],[5,3,5,10,2,-10],[7,-3,3,10,-10,8],[2,-10,1,-1,5,8],[-5,-8,8,9,-7,2],[-10,4,7,-9,-7,-1],[1,7,-7,4,5,6],[1,-9,-10,10,5,2],[-10,-1,2,-7,6,-10],[1,5,-7,-7,8,7],[-9,10,5,-6,-2,3],[-10,10,-6,-1,4,3],[6,-10,-8,-4,7,10],[5,6,2,-5,10,10],[-4,3,6,-1,-5,-9],[-9,-9,7,6,-5,1],[-4,10,2,1,3,-5],[-9,-3,9,-7,-3,3],[-8,-1,-5,-10,9,-2],[2,-8,-7,-5,-1,-3],[10,-7,8,2,2,9],[-8,-6,-1,-1,-2,-9],[3,-7,4,-5,10,7],[3,-6,-7,-4,-3,3],[1,-8,-2,-3,-3,-9],[10,1,-5,10,2,-7],[-2,-5,1,1,-1,-4],[6,-7,-8,5,-10,8],[7,-5,7,-9,1,5],[1,6,5,-6,-7,-7],[1,3,-8,-7,10,-7],[4,-5,9,8,6,-3],[-4,-9,4,-6,-9,8],[-9,-6,9,-7,7,-7],[-1,-6,9,-7,10,5],[-3,-3,-7,2,8,-4],[-9,-7,2,5,-10,-2],[10,-5,-9,-6,-9,-7],[-10,2,-6,4,-9,4],[-6,7,-9,7,10,2],[10,2,-9,-8,9,-6],[6,2,10,9,6,3],[4,-7,-4,6,10,-5],[-8,-5,-3,-3,10,6],[-3,5,-8,-9,10,9],[-8,8,-4,5,6,-8],[-1,-7,6,1,6,-3],[8,-9,9,-2,4,2],[-5,-9,-7,9,9,8],[-9,7,9,-2,-1,5],[10,6,7,3,5,2],[-2,-9,-7,6,-10,-3],[-2,-5,-7,-4,8,-2],[-8,-9,-10,4,-4,-3],[-1,-6,2,1,-4,9],[-7,-8,-5,-3,9,5],[-5,-1,1,9,-5,-5],[6,-2,-2,-2,6,-7],[-2,1,2,-1,4,-3],[6,-10,-7,-7,-3,-3],[-10,8,-7,-6,-3,10],[-2,10,3,-4,7,9]], dtype = "uint64")#candidate|8485|(77, 6)|const|uint64
bop_8486 = relay.bitwise_or(call_8483.astype('uint16'), relay.reshape(const_8485.astype('uint16'), relay.shape_of(call_8483))) # shape=(77, 6)
bop_8489 = relay.bitwise_or(call_8484.astype('uint16'), relay.reshape(const_8485.astype('uint16'), relay.shape_of(call_8484))) # shape=(77, 6)
output = relay.Tuple([bop_8486,])
output2 = relay.Tuple([bop_8489,])
func_8502 = relay.Function([], output)
mod['func_8502'] = func_8502
mod = relay.transform.InferType()(mod)
output = func_8502()
func_8503 = relay.Function([], output)
mutated_mod['func_8503'] = func_8503
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4179_call = mod.get_global_var('func_4179')
func_4180_call = mutated_mod.get_global_var('func_4180')
call_8535 = relay.TupleGetItem(func_4179_call(), 0)
call_8536 = relay.TupleGetItem(func_4180_call(), 0)
func_5752_call = mod.get_global_var('func_5752')
func_5753_call = mutated_mod.get_global_var('func_5753')
call_8547 = relay.TupleGetItem(func_5752_call(), 0)
call_8548 = relay.TupleGetItem(func_5753_call(), 0)
output = relay.Tuple([call_8535,call_8547,])
output2 = relay.Tuple([call_8536,call_8548,])
func_8557 = relay.Function([], output)
mod['func_8557'] = func_8557
mod = relay.transform.InferType()(mod)
mutated_mod['func_8557'] = func_8557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8557_call = mutated_mod.get_global_var('func_8557')
call_8558 = func_8557_call()
output = call_8558
func_8559 = relay.Function([], output)
mutated_mod['func_8559'] = func_8559
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5986_call = mod.get_global_var('func_5986')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_8573 = func_5986_call()
call_8574 = func_5986_call()
func_6087_call = mod.get_global_var('func_6087')
func_6089_call = mutated_mod.get_global_var('func_6089')
call_8582 = func_6087_call()
call_8583 = func_6087_call()
func_3293_call = mod.get_global_var('func_3293')
func_3296_call = mutated_mod.get_global_var('func_3296')
call_8592 = relay.TupleGetItem(func_3293_call(relay.reshape(call_8573.astype('float64'), [11, 12, 8])), 0)
call_8593 = relay.TupleGetItem(func_3296_call(relay.reshape(call_8573.astype('float64'), [11, 12, 8])), 0)
output = relay.Tuple([call_8573,call_8582,call_8592,])
output2 = relay.Tuple([call_8574,call_8583,call_8593,])
func_8595 = relay.Function([], output)
mod['func_8595'] = func_8595
mod = relay.transform.InferType()(mod)
mutated_mod['func_8595'] = func_8595
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8595_call = mutated_mod.get_global_var('func_8595')
call_8596 = func_8595_call()
output = call_8596
func_8597 = relay.Function([], output)
mutated_mod['func_8597'] = func_8597
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8595_call = mod.get_global_var('func_8595')
func_8597_call = mutated_mod.get_global_var('func_8597')
call_8598 = relay.TupleGetItem(func_8595_call(), 1)
call_8599 = relay.TupleGetItem(func_8597_call(), 1)
func_5860_call = mod.get_global_var('func_5860')
func_5862_call = mutated_mod.get_global_var('func_5862')
call_8601 = func_5860_call()
call_8602 = func_5860_call()
func_5491_call = mod.get_global_var('func_5491')
func_5494_call = mutated_mod.get_global_var('func_5494')
const_8607 = relay.const([-8.302603,-6.793048,3.746388,5.670573,-5.745856,-3.224035,8.947041,-0.286115,-8.479744,-7.206906,7.643616,-7.665163,3.261756,-3.805945,-3.794264,-9.486507,-3.526343,-7.083924,-8.170617,-5.905024,4.088924,-7.969084,-5.617158,9.609373,8.160404,-9.026245,8.852529,4.561678,2.864620,-1.562400,5.506171,-8.052818,7.733671,2.860462,-9.219251,-2.893319,-2.207575,-8.860985,3.424601,-8.018155,4.782900,2.571997,0.566307,-1.723241,1.025451,-0.776073,7.985025,-8.163380,5.605378,-4.730182,-7.372811,6.879743,0.496161,9.545573,-0.861771,8.205904,-9.847735,-6.732756,4.076172,-6.279161,5.765966,1.130771,-3.430901,-3.469601,1.629139,3.874805,3.132165,9.372657,9.048260,-3.429299,-8.852750,1.464867,-8.648532,-1.101140,-6.924153,-0.217277,0.087751,-9.938791,-4.832201,7.623275,0.623150,8.888571,7.661735,7.975506,3.893628,-1.411645,5.982651,-9.568648,-6.653354,1.747314,8.949458,-4.796379,3.125517,-0.323021,2.517655,-7.659179,7.304506,-2.227774,-0.351368,7.053585,5.462037,5.315962,3.790085,-2.287868,-8.634368,1.957757,-2.974678,-7.812797,-8.675910,8.764149,-2.540436,6.193849,4.160783,-8.682776,9.483876,5.706088,-1.358571,-1.487864,-7.848687,1.470413,-1.985991,-0.481615,-3.375501,5.454667,-5.740594,5.487960,-1.749175,-6.420911,-6.601401,4.136236,-7.035107,-8.876030,6.166864,-4.441170,6.009837,-9.118406,-7.237305,-5.978620,7.763690,-2.613074,-0.909428,-2.085420,-0.692236,-6.062766,3.375334,-0.663716,-2.837941,-6.129520,9.856314,4.673577,-6.165266,7.036089,4.330179,-3.391682,0.934220,-4.535725,-2.618451,-9.025006,4.418705,1.745742,-7.979018,-3.753584,-9.334827,-9.783382,5.116957,-8.898527,7.495972,4.809736,-2.842640,5.209316,-2.459628,1.237959,-5.491957,7.952159,8.165256,-1.330543,-6.658348,-0.076036,-5.659040,1.511861,5.555511,7.605870,9.229026,6.838585,-5.086825,4.868472,-9.985273,0.125212,-9.959360,-2.388682,4.362170,2.319252,9.606208,-7.429814,-5.519962,9.742764,-6.455839,-4.789230,6.456653,4.421578,-1.229474,-4.568038,6.324690,6.741004,-8.162613,7.767742,-9.404488,-1.548974,5.157721,5.818625,-0.888992,2.391576,-2.956436,-9.491798,0.248959,0.442452,-2.485707,-9.432000,-8.816878,1.276555,9.890541,-4.266179,4.551173,1.596844,-0.407165,-8.291199,0.841884,2.406434,5.948109,-8.932566,8.200022,-4.213635,5.250728,9.031696,-0.718081,8.126585,-7.368084,6.258278,-4.089968,-3.928846,-0.693957,7.681396,-9.847778,9.532087,-4.930276,-0.503791,3.886429,8.228802,4.169611,-4.013134,8.432269,8.940007,-8.650347,0.278584,2.692996,7.282367,-9.575380,1.538466,9.632528,-8.915387,-8.734672,0.821884,2.507831,9.455352,8.954284,-3.005578,2.464814,-9.116220,-8.804234,-0.908686,4.981064,1.332348,-4.438379,-5.060980,5.701237,1.501032,6.008382,-6.779995,1.299356,5.891177,1.438372,0.365985,9.151495,-2.336931,3.979248,6.518729,-4.242968,-2.081900,-6.015138,-4.827906,3.097096,4.107469,-9.100500,5.598431,4.549504,0.369075,-0.166246,9.201583,-2.240101,6.712933,-7.408927,4.627055,-3.477717,0.626709,-9.843823,-3.266562,7.985084,1.716933,4.183801,7.049189,0.438549,-2.652230,8.163914,-1.729132,2.655882,5.499592,-2.007423,2.006685,-5.461201,2.081303,-7.015150,-8.692698,-9.436351,-5.267972,-9.875277,-8.832577,-4.411965,1.802630,2.420614,7.394455,-3.053288,-4.892846,4.165969,3.194666,5.096946,8.810993,-0.992107,4.112557,6.524047,3.987609,-1.881719,2.165400,-7.366650,-4.135951,-7.102191,-6.569796,2.773632,-2.322593,-2.517610,-1.529768,-8.078015,-5.298541,-5.586173,7.075882,5.815080,4.725508,0.600589,-4.927176,-5.598887,0.208982,-1.990640,3.202234,-1.417989,2.513523,1.733119,-2.652463,6.418435,-3.743762,7.197309,7.962375,-4.775005,-3.954682,1.236756,2.230121,8.047935,1.306182,6.938911,9.592754,-9.589799,-8.558944,0.860664,9.975960,1.529204,-4.908285,-5.926012,7.313351,-9.053519,-0.404707,-7.749024,6.068367,-7.728652,-1.064251,8.466068,3.518085,-6.131606,3.822418,2.129446,-8.199019,0.053885,0.630696,-2.285127,-6.496640,-0.901860,-5.340473,9.076451,-9.837687,-9.435714,4.556962,0.407708,3.750973,-6.228215,6.086267,-7.683311,3.069559,-4.089120,7.106999,5.203568,4.719374,-2.576783,8.597352,-8.127313,5.600493,-8.791740,-7.439795,5.801421,4.845771,8.392747,7.268975,-0.722452,3.853980,4.012265,2.960149,-5.591141,-5.048290,-8.931534,-9.442740,-6.973601,-9.960058,-3.744413,-1.451726,-2.664259,-0.648135,-8.963159,4.825775,-8.501548,6.862907,8.988473,-6.289720,4.826178,-8.047487,-4.486379,-3.265319,-7.167390,6.265232,-7.455243,9.342080,5.460464,-1.893885,0.905120,-5.206102,-8.897669,-7.427264,-5.163179,6.771881,4.727238,-9.378415,6.943094,-3.260328,4.612480,-0.634713,1.302811,-6.407360,0.583799,-7.417299,0.365839,-9.308507,-9.336289,3.365371,-2.498227,1.816281,1.352394,6.797443,-6.280111,-5.416960,-1.826041,9.945920,-9.518875,-8.797738,-1.993159,8.917813,-9.369654,4.762458,-0.611464,7.858786,-3.466271,-5.375741,-8.270293,-6.174948,-7.105605,-7.914315,2.954680,-1.567482,-4.291890,-5.656424,-5.717508,-5.713580,0.618121,8.223519,-1.373486,-5.147119,7.082591,-9.353732,0.353667,9.588810,-6.701482,-9.423791,0.823762,2.436138,4.005487,5.416694,1.900685,-8.403972,3.043790,-8.730212,6.832943,-5.609071,-0.087899,-3.858258,3.958537,6.833796,-4.041352,-4.897126,-2.339769,1.093042,9.702232,5.684503,-3.381280,5.572367,-9.568833,0.534366,4.999905,-2.968070,7.655598,7.172719,-8.812843,-4.387958,-2.183433,1.647775,-1.271463,-3.292679,8.494169,0.373770,-7.633831,9.083930,-4.185934,-1.818319,8.595238,3.174910,2.613942,8.805175,6.498475,-7.780202,-5.080697,1.936311,-5.309482,-9.425770,5.341095,3.754930,6.389898,-9.265106,-1.152619,5.769226,-8.092401,-4.232832,2.398198,8.946317,5.211731,-4.649075,8.288619,-6.330361,1.494604,8.699773,-6.389241,-8.868477,-3.956120,-6.825792,4.380015,-0.820576,-8.943723,-9.891602,-7.048204,4.965082,0.923388,-7.464505,8.393614,4.380624,9.160219,8.198077,1.316727,5.498272,1.366705,-1.481878,7.040058,-9.259137,4.872526,8.262426,-9.131426,5.917730,-7.513239,4.091039,9.303135,0.774280,0.276736,-6.815280,-5.229314,-7.573376,8.244886,1.542460,3.588852,7.954730,-6.791237,2.784265,9.293406,-7.738800,-4.563620,2.582383,-8.275919,-1.163016,5.879330,8.562505,3.183731,5.319888,-1.284363,2.530040,-0.133530,4.921326,-2.067553,-5.456907,1.334595,7.991630,-9.648286,7.366116,1.797417,-3.867665,8.517015,2.693906,-5.888273,0.007171,9.368197,-1.595249,2.605807,-0.952835,-3.897460,9.215596,7.271913,1.499382,6.543601,8.653371,8.753849,-0.475170,2.983493,6.639916,-9.591385,-3.959342,4.122112,-3.601581,-6.936735,-6.335474,1.112216,1.307984,9.004036,-9.997948,7.653864,1.986868,2.406885,7.526590,1.126048,-1.647477,-7.936887,7.975498,-1.952101,-3.758984,-5.745195,9.713737,1.203066,9.888154,-9.195624,7.459426,2.203664,-9.146013,-6.687830,1.618246,-3.409258,-3.103229,-5.088355,-7.928568,4.132570,-1.783648,-6.393229,0.665066,-5.046297,-0.793214,-1.565345,-6.693607,-0.437491,-9.939347,1.025365,5.917053,-1.813940,-5.995180,2.994852,4.690695,5.005313,0.836954,0.163304,7.123157,1.566758,-5.391243,-2.847154,1.926564,4.439081,5.317590,3.548862,-6.983577,-1.535633,-4.116902,-1.154621,-3.418942,8.042337,4.834238,-2.865153,-0.300655,-6.163739,9.312827,-5.546381,1.511722,6.574022,-4.808344,5.957872,-4.307597,3.590614,-3.849612,-5.285468,3.122456,-6.214526,-5.898313,-7.486746,-9.182847,-1.444492,7.954770,-7.945792,-0.934898,9.527549,-9.870885,-0.887876,7.958012,0.031796,4.547313,-3.709063,-3.000984,6.476183,-4.431380,8.491892,-8.929277,-0.984811,-5.947467,-7.407588,-1.022311,0.916920,4.735655,5.075378,6.394512,-3.298226,-4.311626,-5.509000,5.186127,-2.781724,3.624307,-3.427373,6.234946,8.873627,8.981295,-4.501558,7.402801,-3.452770,9.875505,0.156181,-1.349846,7.866526,2.418683,1.680841,9.157166,-8.245756,-4.452333,-2.495220,1.155744,5.025033,-3.166370,3.212942,-4.336133,-0.798909,4.143324,-3.921826,1.269046,1.217614,5.854512,8.456817,-2.871290,6.368156,-2.791985,-6.029386,1.822350,-2.592739,0.447295,-9.445281,0.282626,-3.459207,-1.848719,-5.455384,-7.389928,-6.972150,8.816790,9.555160,4.015770,-6.457813,-4.463016,-4.026307,-9.594268,4.057324,-4.643036,5.741477,-8.147814,-9.127282,7.775235,-8.870308,-0.101888,4.437119,-3.811682,5.832575,-8.398399,9.716493,-6.335586,-5.526816,-3.486021,9.359276,0.972538,-7.335088,-7.334173,4.521459,-9.828512,0.645380,-6.384465,-6.069027,0.890978,0.466264,9.178873,2.874528,-4.802552,-7.703387,9.105954,4.383426,4.264118,7.568268,-1.046711,8.331037,-6.761443,-7.517673,1.274880,-4.404643,-7.498932,-6.562209,-5.142224,-8.259293,-1.027779,-6.939119,-2.118076,-1.605716,1.959040,3.007772,-1.871055,-4.082815,2.249867,-7.541988,1.562989,-7.809276,-9.188440,8.390239,-0.229093,9.526632,6.713372,-8.290504,6.159286,6.573025,-4.707271,-4.372231,6.219491,-8.293612,6.596419,4.847535,4.917541,0.407113,0.224014,-7.563537,-7.208856,-0.940052,7.733892,8.269303,5.034923,-9.672354,0.515055,9.198719,9.790338,9.655881,-7.688521,-4.848239,-8.313908,0.425613,-5.776376,4.202607,9.786753,-7.595720,9.196821,7.252026,-4.906988,-3.038076,-2.491253,-4.055682,1.419585,7.349787,7.692813,2.788500,4.714949,9.081899,5.363335,-4.581818,-0.626723,5.442764,-4.034189,-1.930624,-3.432465,-0.971982,-4.736015,7.303256,-5.585378,5.043936,-7.769690,-8.056340,3.963427,0.066901,-4.162825,5.916020,8.826141,-1.261177,7.864505,-1.535439,-9.156296,0.159593,-6.068240,-4.542096,2.132894,-6.995824,1.051982,6.099254,-5.575238,3.790976,-2.664912,5.102986,2.797121,9.997929,-1.812023,5.250058,-8.396635,-7.286706,9.159655,5.928334,-7.502901,-5.293185,-6.585762,1.548418,-1.852078,-8.912693,1.554555,-4.112544,5.053799,-7.211674,-6.357090,-0.041815,-1.906416,3.708541,-0.284836,-9.713067,-6.639809,-5.787561,-4.913070,8.447186,-9.389001,3.514206,8.379460,-8.318506,1.311609,-1.625994,-6.453060,-7.102414,6.832243,-0.304699,-9.025555,2.048872,0.027065,-6.020559,1.796950,3.834957,1.659293,6.762822,-4.687372,4.040075,-9.350084,3.601261,4.874301,5.034385,6.077407,-9.738120,-3.641559,-5.911124,6.264202,7.709205,-0.014479,-7.618188,5.712844,-9.358981,3.147109,9.910918,-4.359891,4.538459,-8.955418,-0.020293,-4.431446,-7.675080,-7.576225,4.023804,8.962827,-8.263425,8.442038,4.757975,3.115831,-1.926233,2.905084,-4.212601,6.589321,9.576853,5.303760,3.156392,-1.700927,-7.863310,9.850854,-8.452996,1.229714,-5.753187,4.842912,2.261042,-0.308020,-2.028158,-5.933727,9.901127,-1.463890,1.392930,-4.404237,3.084342,-6.942111,-0.578256,7.638582,-3.092296,0.341140,5.948904,-6.398292,0.280683,3.429760,0.421637,1.589351,0.831320,2.811573,2.425757,3.633614,3.116000,-0.481607,6.806568,-7.412931,-1.624971,8.163970,6.668970,0.104972,-4.721234,-8.406934,-4.018198,-8.525254,3.050277,-3.641124,9.635826,1.627355,-7.900208,-6.732038,-9.416812,1.331878,4.421654,-0.797134,1.704100,5.620154,-3.679148,8.650123,5.814419,-2.830466,8.874813,2.173880,4.356989,5.370871,8.188330,5.002552,8.886413,-5.838803,3.117457,4.842401,-3.666145,-6.198795,-3.770685,4.151606,0.300989,-1.387802,3.472172,-3.209154,-9.117992,-0.164642,8.485399,3.195860,-0.734932,6.158134,2.885705,-8.653379,-5.115721,-0.966243,-7.782315,-8.624421,-3.605238,1.481588,4.202396,-0.399526], dtype = "float32")#candidate|8607|(1144,)|const|float32
call_8606 = relay.TupleGetItem(func_5491_call(relay.reshape(call_8601.astype('uint8'), [900,]), relay.reshape(const_8607.astype('float32'), [11, 104]), ), 2)
call_8608 = relay.TupleGetItem(func_5494_call(relay.reshape(call_8601.astype('uint8'), [900,]), relay.reshape(const_8607.astype('float32'), [11, 104]), ), 2)
func_8557_call = mod.get_global_var('func_8557')
func_8559_call = mutated_mod.get_global_var('func_8559')
call_8635 = relay.TupleGetItem(func_8557_call(), 1)
call_8636 = relay.TupleGetItem(func_8559_call(), 1)
output = relay.Tuple([call_8598,call_8601,call_8606,const_8607,call_8635,])
output2 = relay.Tuple([call_8599,call_8602,call_8608,const_8607,call_8636,])
func_8638 = relay.Function([], output)
mod['func_8638'] = func_8638
mod = relay.transform.InferType()(mod)
mutated_mod['func_8638'] = func_8638
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8638_call = mutated_mod.get_global_var('func_8638')
call_8639 = func_8638_call()
output = call_8639
func_8640 = relay.Function([], output)
mutated_mod['func_8640'] = func_8640
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8683 = relay.var("var_8683", dtype = "uint16", shape = (2, 4, 2))#candidate|8683|(2, 4, 2)|var|uint16
var_8684 = relay.var("var_8684", dtype = "uint16", shape = (2, 4, 2))#candidate|8684|(2, 4, 2)|var|uint16
bop_8685 = relay.maximum(var_8683.astype('uint16'), relay.reshape(var_8684.astype('uint16'), relay.shape_of(var_8683))) # shape=(2, 4, 2)
output = relay.Tuple([bop_8685,])
output2 = relay.Tuple([bop_8685,])
func_8691 = relay.Function([var_8683,var_8684,], output)
mod['func_8691'] = func_8691
mod = relay.transform.InferType()(mod)
mutated_mod['func_8691'] = func_8691
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8691_call = mutated_mod.get_global_var('func_8691')
var_8693 = relay.var("var_8693", dtype = "uint16", shape = (2, 4, 2))#candidate|8693|(2, 4, 2)|var|uint16
var_8694 = relay.var("var_8694", dtype = "uint16", shape = (2, 4, 2))#candidate|8694|(2, 4, 2)|var|uint16
call_8692 = func_8691_call(var_8693,var_8694,)
output = call_8692
func_8695 = relay.Function([var_8693,var_8694,], output)
mutated_mod['func_8695'] = func_8695
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6557_call = mod.get_global_var('func_6557')
func_6558_call = mutated_mod.get_global_var('func_6558')
call_8697 = relay.TupleGetItem(func_6557_call(), 1)
call_8698 = relay.TupleGetItem(func_6558_call(), 1)
output = relay.Tuple([call_8697,])
output2 = relay.Tuple([call_8698,])
func_8701 = relay.Function([], output)
mod['func_8701'] = func_8701
mod = relay.transform.InferType()(mod)
mutated_mod['func_8701'] = func_8701
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8701_call = mutated_mod.get_global_var('func_8701')
call_8702 = func_8701_call()
output = call_8702
func_8703 = relay.Function([], output)
mutated_mod['func_8703'] = func_8703
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5187_call = mod.get_global_var('func_5187')
func_5188_call = mutated_mod.get_global_var('func_5188')
call_8738 = relay.TupleGetItem(func_5187_call(), 2)
call_8739 = relay.TupleGetItem(func_5188_call(), 2)
func_5986_call = mod.get_global_var('func_5986')
func_5987_call = mutated_mod.get_global_var('func_5987')
call_8742 = func_5986_call()
call_8743 = func_5986_call()
output = relay.Tuple([call_8738,call_8742,])
output2 = relay.Tuple([call_8739,call_8743,])
func_8746 = relay.Function([], output)
mod['func_8746'] = func_8746
mod = relay.transform.InferType()(mod)
mutated_mod['func_8746'] = func_8746
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8746_call = mutated_mod.get_global_var('func_8746')
call_8747 = func_8746_call()
output = call_8747
func_8748 = relay.Function([], output)
mutated_mod['func_8748'] = func_8748
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3938_call = mod.get_global_var('func_3938')
func_3939_call = mutated_mod.get_global_var('func_3939')
call_8759 = func_3938_call()
call_8760 = func_3938_call()
output = relay.Tuple([call_8759,])
output2 = relay.Tuple([call_8760,])
func_8778 = relay.Function([], output)
mod['func_8778'] = func_8778
mod = relay.transform.InferType()(mod)
output = func_8778()
func_8779 = relay.Function([], output)
mutated_mod['func_8779'] = func_8779
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8830 = relay.var("var_8830", dtype = "int64", shape = (13, 3, 13))#candidate|8830|(13, 3, 13)|var|int64
var_8831 = relay.var("var_8831", dtype = "int64", shape = (13, 3, 13))#candidate|8831|(13, 3, 13)|var|int64
bop_8832 = relay.bitwise_or(var_8830.astype('int64'), relay.reshape(var_8831.astype('int64'), relay.shape_of(var_8830))) # shape=(13, 3, 13)
output = relay.Tuple([bop_8832,])
output2 = relay.Tuple([bop_8832,])
func_8836 = relay.Function([var_8830,var_8831,], output)
mod['func_8836'] = func_8836
mod = relay.transform.InferType()(mod)
mutated_mod['func_8836'] = func_8836
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8836_call = mutated_mod.get_global_var('func_8836')
var_8838 = relay.var("var_8838", dtype = "int64", shape = (13, 3, 13))#candidate|8838|(13, 3, 13)|var|int64
var_8839 = relay.var("var_8839", dtype = "int64", shape = (13, 3, 13))#candidate|8839|(13, 3, 13)|var|int64
call_8837 = func_8836_call(var_8838,var_8839,)
output = call_8837
func_8840 = relay.Function([var_8838,var_8839,], output)
mutated_mod['func_8840'] = func_8840
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6557_call = mod.get_global_var('func_6557')
func_6558_call = mutated_mod.get_global_var('func_6558')
call_8856 = relay.TupleGetItem(func_6557_call(), 0)
call_8857 = relay.TupleGetItem(func_6558_call(), 0)
output = relay.Tuple([call_8856,])
output2 = relay.Tuple([call_8857,])
func_8860 = relay.Function([], output)
mod['func_8860'] = func_8860
mod = relay.transform.InferType()(mod)
output = func_8860()
func_8861 = relay.Function([], output)
mutated_mod['func_8861'] = func_8861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7561_call = mod.get_global_var('func_7561')
func_7562_call = mutated_mod.get_global_var('func_7562')
call_8873 = relay.TupleGetItem(func_7561_call(), 0)
call_8874 = relay.TupleGetItem(func_7562_call(), 0)
output = call_8873
output2 = call_8874
func_8880 = relay.Function([], output)
mod['func_8880'] = func_8880
mod = relay.transform.InferType()(mod)
output = func_8880()
func_8881 = relay.Function([], output)
mutated_mod['func_8881'] = func_8881
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7183_call = mod.get_global_var('func_7183')
func_7184_call = mutated_mod.get_global_var('func_7184')
call_8890 = relay.TupleGetItem(func_7183_call(), 0)
call_8891 = relay.TupleGetItem(func_7184_call(), 0)
func_4241_call = mod.get_global_var('func_4241')
func_4243_call = mutated_mod.get_global_var('func_4243')
call_8902 = relay.TupleGetItem(func_4241_call(), 0)
call_8903 = relay.TupleGetItem(func_4243_call(), 0)
output = relay.Tuple([call_8890,call_8902,])
output2 = relay.Tuple([call_8891,call_8903,])
func_8906 = relay.Function([], output)
mod['func_8906'] = func_8906
mod = relay.transform.InferType()(mod)
mutated_mod['func_8906'] = func_8906
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8906_call = mutated_mod.get_global_var('func_8906')
call_8907 = func_8906_call()
output = call_8907
func_8908 = relay.Function([], output)
mutated_mod['func_8908'] = func_8908
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7733_call = mod.get_global_var('func_7733')
func_7734_call = mutated_mod.get_global_var('func_7734')
call_9033 = relay.TupleGetItem(func_7733_call(), 0)
call_9034 = relay.TupleGetItem(func_7734_call(), 0)
output = call_9033
output2 = call_9034
func_9061 = relay.Function([], output)
mod['func_9061'] = func_9061
mod = relay.transform.InferType()(mod)
output = func_9061()
func_9062 = relay.Function([], output)
mutated_mod['func_9062'] = func_9062
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2434_call = mod.get_global_var('func_2434')
func_2436_call = mutated_mod.get_global_var('func_2436')
call_9102 = relay.TupleGetItem(func_2434_call(), 0)
call_9103 = relay.TupleGetItem(func_2436_call(), 0)
func_5710_call = mod.get_global_var('func_5710')
func_5713_call = mutated_mod.get_global_var('func_5713')
var_9112 = relay.var("var_9112", dtype = "int64", shape = (1155,))#candidate|9112|(1155,)|var|int64
call_9111 = relay.TupleGetItem(func_5710_call(relay.reshape(var_9112.astype('int64'), [11, 7, 15])), 0)
call_9113 = relay.TupleGetItem(func_5713_call(relay.reshape(var_9112.astype('int64'), [11, 7, 15])), 0)
bop_9126 = relay.less_equal(var_9112.astype('bool'), relay.reshape(call_9111.astype('bool'), relay.shape_of(var_9112))) # shape=(1155,)
bop_9129 = relay.less_equal(var_9112.astype('bool'), relay.reshape(call_9113.astype('bool'), relay.shape_of(var_9112))) # shape=(1155,)
bop_9135 = relay.equal(var_9112.astype('bool'), relay.reshape(call_9111.astype('bool'), relay.shape_of(var_9112))) # shape=(1155,)
bop_9138 = relay.equal(var_9112.astype('bool'), relay.reshape(call_9113.astype('bool'), relay.shape_of(var_9112))) # shape=(1155,)
output = relay.Tuple([call_9102,bop_9126,bop_9135,])
output2 = relay.Tuple([call_9103,bop_9129,bop_9138,])
F = relay.Function([var_9112,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_9112,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

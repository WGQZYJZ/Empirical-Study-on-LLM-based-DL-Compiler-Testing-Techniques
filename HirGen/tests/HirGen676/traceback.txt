==========mod==========
#[version = "0.0.5"]
def @func_3816() -> Tensor[(4, 8, 9), uint8] {
  %0 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %0.0
}

def @func_12839() -> Tensor[(4, 8, 9), float32] {
  %1 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1.0
}

def @func_3699() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %2 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %3 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %4 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %5 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
  %6 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %7 = %2.1;
  %8 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
  %9 = %3.0;
  %10 = %4.0;
  %11 = %5.0;
  %12 = %6.3;
  (%7, %8, %9, %10, %11, %12)
}

def @func_13121() -> Tensor[(4, 8, 9), uint8] {
  %13 = @func_9451() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) */;
  %13.3
}

def @func_6678() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %14 = @func_3959() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %15 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %16 = %14.0;
  %17 = %15.0;
  (%16, %17)
}

def @func_10094() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) {
  %18 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %19 = @func_5868() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %20 = %18.0;
  %21 = %19.0;
  (%20, %21)
}

def @func_12818() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %22 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %23 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
  %24 = @func_11923() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %25 = %22.0;
  %26 = %23.1;
  %27 = %24.0;
  (%25, %26, %27)
}

def @func_6562() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %28 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
  %29 = @func_6414() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %30 = %28.1;
  %31 = %29.0;
  (%30, %31)
}

def @func_11356(%var_11337: Tensor[(156), float64]) -> (Tensor[(11, 10, 10), float32], Tensor[(12, 1, 13), float64], Tensor[(156), float64]) {
  %32 = @func_10094() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) */;
  %33 = cast(%var_11337, dtype="float64") /* ty=Tensor[(156), float64] */;
  %34 = reshape(%33, newshape=[12, 1, 13]) /* ty=Tensor[(12, 1, 13), float64] */;
  %35 = @func_6361(%34) /* ty=(Tensor[(12, 1, 13), float64],) */;
  %36 = %32.0;
  %37 = %35.0;
  (%36, %37, %var_11337)
}

def @func_12309(%var_12306: Tensor[(48), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64], Tensor[(198, 3), float64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32]) {
  %38 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %39 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
  %40 = cast(meta[relay.Constant][0] /* ty=Tensor[(198, 3), float32] */, dtype="float32") /* ty=Tensor[(198, 3), float32] */;
  %41 = cast(meta[relay.Constant][0] /* ty=Tensor[(198, 3), float32] */, dtype="float32") /* ty=Tensor[(198, 3), float32] */;
  %42 = reshape(%40, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %43 = reshape(%41, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %44 = @func_3435(%42, %43) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
  %45 = cast(meta[relay.Constant][0] /* ty=Tensor[(198, 3), float32] */, dtype="float64") /* ty=Tensor[(198, 3), float64] */;
  %46 = cast(%var_12306, dtype="int32") /* ty=Tensor[(48), int32] */;
  %47 = cast(meta[relay.Constant][1] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %48 = reshape(%46, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %49 = reshape(%47, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
  %50 = @func_7605(%48, %49) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
  %51 = %38.0;
  %52 = %39.0;
  %53 = %44.1;
  %54 = log10(%45) /* ty=Tensor[(198, 3), float64] */;
  %55 = %50.3;
  (%51, %52, %53, %54, %55, %var_12306, meta[relay.Constant][1] /* ty=Tensor[(720), int32] */)
}

def @func_7107() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %56 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
  %57 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %58 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %59 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
  %60 = %56.1;
  %61 = %57.0;
  %62 = %58.0;
  (%59, %60, %61, %62)
}

def @func_8115() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %63 = @func_7262() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %64 = @func_6980() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %65 = %63.0;
  %66 = %64.1;
  (%65, %66)
}

def @func_411() -> (Tensor[(4, 8, 9), uint8],) {
  %67 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %68 = %67.0;
  (%68,)
}

def @func_4002(%var_3981: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), bool], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8]) {
  %69 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  %70 = cast(%var_3981, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %71 = shape_of(%69, dtype="int32") /* ty=Tensor[(3), int32] */;
  %72 = cast(%69, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %74 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %75 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %76 = logical_or(%72, %73) /* ty=Tensor[(4, 8, 9), bool] */;
  %77 = %74.2;
  %78 = %75.0;
  (%76, %77, %78)
}

def @func_387() -> (Tensor[(4, 8, 9), uint8],) {
  %79 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%79,)
}

def @func_9927() -> Tensor[(4, 8, 9), uint8] {
  @func_607() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_17171() -> Tensor[(4, 8, 9), int8] {
  %80 = @func_4463() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %80.1
}

def @func_928() -> (Tensor[(4, 8, 9), uint8],) {
  %81 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%81,)
}

def @func_8904() -> (Tensor[(4, 8, 9), uint8],) {
  %82 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %83 = %82.1;
  (%83,)
}

def @func_840(%var_829: Tensor[(8, 10, 16), float64]) -> (Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) {
  %84 = cast(%var_829, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  %85 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %86 = acosh(%84) /* ty=Tensor[(8, 10, 16), float64] */;
  %87 = %85.1;
  (%86, %87)
}

def @func_89(%var_70: Tensor[(4, 10, 2), uint64], %var_71: Tensor[(4, 10, 2), uint64]) -> Tensor[(4, 10, 2), uint64] {
  %88 = cast(%var_71, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %89 = shape_of(%var_70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %90 = cast(%var_70, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %91 = dyn.reshape(%88, %89, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%90, %91) /* ty=Tensor[(4, 10, 2), uint64] */
}

def @func_8958() -> (Tensor[(4, 8, 9), bool],) {
  %92 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
  %93 = %92.1;
  (%93,)
}

def @func_1603() -> (Tensor[(4, 8, 9), uint8],) {
  %94 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %95 = %94.0;
  (%95,)
}

def @func_9811(%var_9803: Tensor[(14, 14, 10), uint32], %var_9804: Tensor[(14, 14, 10), uint32]) -> (Tensor[(14, 14, 10), uint32], Tensor[(4, 8, 9), uint8]) {
  %96 = cast(%var_9804, dtype="uint32") /* ty=Tensor[(14, 14, 10), uint32] */;
  %97 = shape_of(%var_9803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %98 = cast(%var_9803, dtype="uint32") /* ty=Tensor[(14, 14, 10), uint32] */;
  %99 = dyn.reshape(%96, %97, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %100 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %101 = right_shift(%98, %99) /* ty=Tensor[(14, 14, 10), uint32] */;
  %102 = %100.0;
  (%101, %102)
}

def @func_898() -> (Tensor[(4, 8, 9), int8],) {
  %103 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %104 = %103.0;
  (%104,)
}

def @func_6336(%var_6326: Tensor[(1, 6, 8), int32], %var_6327: Tensor[(15, 6, 8), int32]) -> Tensor[(15, 6, 8), int32] {
  %105 = cast(%var_6326, dtype="int32") /* ty=Tensor[(1, 6, 8), int32] */;
  %106 = cast(%var_6327, dtype="int32") /* ty=Tensor[(15, 6, 8), int32] */;
  right_shift(%105, %106) /* ty=Tensor[(15, 6, 8), int32] */
}

def @func_8749() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %107 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %108 = %107.1;
  %109 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%108, %109)
}

def @func_607() -> Tensor[(4, 8, 9), uint8] {
  %110 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %110.0
}

def @func_9358() -> Tensor[(4, 8, 9), int8] {
  %111 = @func_7659() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %111.0
}

def @func_16088() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 13, 16), float32], Tensor[(1248), float32]) {
  %112 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %113 = @func_12367() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %114 = cast(meta[relay.Constant][2] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %115 = cast(meta[relay.Constant][2] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %116 = reshape(%114, newshape=[6, 13, 16]) /* ty=Tensor[(6, 13, 16), float32] */;
  %117 = reshape(%115, newshape=[6, 13, 16]) /* ty=Tensor[(6, 13, 16), float32] */;
  %118 = %112.0;
  %119 = %113.0;
  %120 = @func_13960(%116, %117) /* ty=Tensor[(6, 13, 16), float32] */;
  (%118, %119, %120, meta[relay.Constant][2] /* ty=Tensor[(1248), float32] */)
}

def @func_3435(%var_3408: Tensor[(9, 11, 6), float32], %var_3430: Tensor[(9, 11, 6), float32]) -> (Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) {
  %121 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %122 = cast(-0.022554f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %123 = cast(%var_3408, dtype="float32") /* ty=Tensor[(9, 11, 6), float32] */;
  %124 = power(%122, %123) /* ty=Tensor[(9, 11, 6), float32] */;
  %125 = cast(%var_3430, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %126 = shape_of(%124, dtype="int32") /* ty=Tensor[(3), int32] */;
  %127 = cast(%124, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
  %128 = dyn.reshape(%125, %126, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %129 = %121.1;
  %130 = mod(%127, %128) /* ty=Tensor[(9, 11, 6), float64] */;
  (%129, %130)
}

def @func_14391(%var_14381: Tensor[(2, 4, 12), float32]) -> Tensor[(2, 4, 12), float32] {
  %131 = cast(%var_14381, dtype="float32") /* ty=Tensor[(2, 4, 12), float32] */;
  acosh(%131) /* ty=Tensor[(2, 4, 12), float32] */
}

def @func_2961() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %132 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %133 = @func_2736() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %134 = %133.0;
  %135 = cast(%134, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %136 = %132.1;
  %137 = sigmoid(%135) /* ty=Tensor[(4, 8, 9), float32] */;
  %138 = @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%136, %137, %138)
}

def @func_9769() -> Tensor[(4, 8, 9), uint8] {
  %139 = @func_8913() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %139.0
}

def @func_12651() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %140 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %141 = @func_9664() /* ty=Tensor[(4, 8, 9), uint8] */;
  %142 = %140.1;
  (%141, %142)
}

def @func_362() -> Tensor[(4, 8, 9), uint8] {
  %143 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %143.0
}

def @func_15392() -> (Tensor[(4, 8, 9), uint8],) {
  %144 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %145 = %144.0;
  (%145,)
}

def @func_15058() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %146 = @func_8882() /* ty=Tensor[(4, 8, 9), uint8] */;
  %147 = @func_14353() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%146, %147)
}

def @func_15634() -> (Tensor[(13, 15, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(2184), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8]) {
  %148 = cast(meta[relay.Constant][3] /* ty=Tensor[(13, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
  %149 = @func_12097() /* ty=(Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %150 = cast(meta[relay.Constant][4] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
  %151 = cast(meta[relay.Constant][5] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %152 = cast(meta[relay.Constant][6] /* ty=Tensor[(22, 5), float32] */, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
  %153 = reshape(%150, newshape=[12, 14, 13]) /* ty=Tensor[(12, 14, 13), float64] */;
  %154 = reshape(%151, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %155 = reshape(%152, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %156 = @func_2704(%153, %154, %155) /* ty=(Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) */;
  %157 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %158 = asinh(%148) /* ty=Tensor[(13, 15, 9), float32] */;
  %159 = %149.1;
  %160 = %156.3;
  %161 = %157.0;
  (%158, %159, %160, meta[relay.Constant][4] /* ty=Tensor[(2184), float64] */, meta[relay.Constant][5] /* ty=Tensor[(120), float32] */, meta[relay.Constant][6] /* ty=Tensor[(22, 5), float32] */, %161)
}

def @func_3108() -> Tensor[(4, 8, 9), uint8] {
  %162 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %162.0
}

def @func_11262() -> Tensor[(4, 8, 9), uint8] {
  %163 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %163.0
}

def @func_14959(%var_14946: Tensor[(15, 12, 13), uint16]) -> Tensor[(15, 12, 13), uint16] {
  %164 = cast(%var_14946, dtype="uint16") /* ty=Tensor[(15, 12, 13), uint16] */;
  %165 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(15, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %166 = cast(meta[relay.Constant][7] /* ty=Tensor[(15, 12, 13), uint16] */, dtype="uint16") /* ty=Tensor[(15, 12, 13), uint16] */;
  %167 = dyn.reshape(%164, %165, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%166, %167) /* ty=Tensor[(15, 12, 13), uint16] */
}

def @func_14490() -> (Tensor[(4, 8, 9), int8],) {
  %168 = @func_4308() /* ty=Tensor[(4, 8, 9), int8] */;
  (%168,)
}

def @func_11874() -> Tensor[(4, 8, 9), float64] {
  %169 = @func_10288() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %169.0
}

def @func_6103() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %170 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %171 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %172 = %170.0;
  %173 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %174 = %171.0;
  (%172, %173, %174)
}

def @func_13729() -> (Tensor[(4, 8, 9), uint8],) {
  %175 = @func_11262() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%175,)
}

def @func_3537(%var_3506: Tensor[(594), float32], %var_3514: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) {
  %176 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %177 = cast(%var_3506, dtype="float32") /* ty=Tensor[(594), float32] */;
  %178 = cast(%var_3506, dtype="float32") /* ty=Tensor[(594), float32] */;
  %179 = reshape(%177, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %180 = reshape(%178, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %181 = @func_3435(%179, %180) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
  %182 = %181.0;
  %183 = cast(%var_3514, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
  %184 = shape_of(%182, dtype="int32") /* ty=Tensor[(3), int32] */;
  %185 = cast(%182, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
  %186 = dyn.reshape(%183, %184, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %187 = %176.1;
  %188 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  %189 = left_shift(%185, %186) /* ty=Tensor[(4, 8, 9), uint64] */;
  %190 = @func_2744() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%187, %var_3506, %188, %189, %190)
}

def @func_3930() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) {
  %191 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %192 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %193 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %194 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %195 = %191.0;
  %196 = cast(%195, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %197 = reshape(%196, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %198 = @func_1805(%197) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %199 = %192.0;
  %200 = %193.0;
  %201 = %194.5;
  %202 = %198.0;
  %203 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%195, %199, %200, %201, %202, %203)
}

def @func_6865() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %204 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %205 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %206 = %204.0;
  %207 = %205.0;
  (%206, %207)
}

def @func_13243(%var_13232: Tensor[(60), float64], %var_13233: Tensor[(420), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(7, 12, 5), bool], float64, Tensor[(60), float64], Tensor[(420), float64]) {
  %208 = @func_12367() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %209 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %210 = cast(-5.36557f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
  %211 = cast(%var_13232, dtype="float64") /* ty=Tensor[(60), float64] */;
  %212 = cast(%var_13233, dtype="float64") /* ty=Tensor[(420), float64] */;
  %213 = reshape(%210, newshape=[]) /* ty=float64 */;
  %214 = reshape(%211, newshape=[1, 12, 5]) /* ty=Tensor[(1, 12, 5), float64] */;
  %215 = reshape(%212, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float64] */;
  %216 = @func_11849(%213, %214, %215) /* ty=(Tensor[(7, 12, 5), bool],) */;
  %217 = %208.0;
  %218 = %209.0;
  %219 = %216.0;
  (%217, %218, %219, -5.36557f64 /* ty=float64 */, %var_13232, %var_13233)
}

def @func_219() -> (Tensor[(4, 8, 9), uint8],) {
  %220 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %221 = %220.2;
  (%221,)
}

def @func_2533(%var_2522: Tensor[(4, 16, 14), uint32], %var_2523: Tensor[(4, 16, 14), uint32]) -> (Tensor[(4, 16, 14), uint32],) {
  %222 = cast(%var_2523, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
  %223 = shape_of(%var_2522, dtype="int32") /* ty=Tensor[(3), int32] */;
  %224 = cast(%var_2522, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
  %225 = dyn.reshape(%222, %223, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %226 = minimum(%224, %225) /* ty=Tensor[(4, 16, 14), uint32] */;
  (%226,)
}

def @func_16670() -> (Tensor[(4, 8, 9), uint8],) {
  %227 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %228 = %227.1;
  (%228,)
}

def @func_2736() -> (Tensor[(4, 8, 9), float32],) {
  %229 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  (%229,)
}

def @func_11093(%var_11071: Tensor[(5, 12, 5), uint32], %var_11072: Tensor[(5, 12, 5), uint32]) -> (Tensor[(5, 12, 5), uint32], Tensor[(4, 8, 9), uint8], Tensor[(16, 15, 3), uint64], Tensor[(720), uint64]) {
  %230 = cast(%var_11072, dtype="uint32") /* ty=Tensor[(5, 12, 5), uint32] */;
  %231 = shape_of(%var_11071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %232 = cast(%var_11071, dtype="uint32") /* ty=Tensor[(5, 12, 5), uint32] */;
  %233 = dyn.reshape(%230, %231, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %234 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %235 = cast(meta[relay.Constant][8] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %236 = reshape(%235, newshape=[16, 15, 3]) /* ty=Tensor[(16, 15, 3), uint64] */;
  %237 = add(%232, %233) /* ty=Tensor[(5, 12, 5), uint32] */;
  %238 = %234.0;
  %239 = @func_9264(%236) /* ty=Tensor[(16, 15, 3), uint64] */;
  (%237, %238, %239, meta[relay.Constant][8] /* ty=Tensor[(720), uint64] */)
}

def @func_14310() -> (Tensor[(4, 8, 9), uint8],) {
  %240 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %241 = %240.3;
  (%241,)
}

def @func_10979() -> (Tensor[(4, 8, 9), uint8],) {
  %242 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %243 = %242.3;
  (%243,)
}

def @func_4765() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %244 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %245 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %246 = @func_3816() /* ty=Tensor[(4, 8, 9), uint8] */;
  %247 = %244.2;
  %248 = %245.0;
  (%246, %247, %248)
}

def @func_6980() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %249 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %250 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %251 = %249.0;
  %252 = %250.0;
  (%251, %252)
}

def @func_12337(%var_12324: Tensor[(16, 14, 5), uint32]) -> Tensor[(16, 14, 5), float32] {
  %253 = cast(%var_12324, dtype="uint32") /* ty=Tensor[(16, 14, 5), uint32] */;
  %254 = shape_of(meta[relay.Constant][9] /* ty=Tensor[(16, 14, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %255 = cast(meta[relay.Constant][9] /* ty=Tensor[(16, 14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(16, 14, 5), uint32] */;
  %256 = dyn.reshape(%253, %254, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %257 = right_shift(%255, %256) /* ty=Tensor[(16, 14, 5), uint32] */;
  %258 = cast(%257, dtype="float32") /* ty=Tensor[(16, 14, 5), float32] */;
  tan(%258) /* ty=Tensor[(16, 14, 5), float32] */
}

def @func_5603() -> (Tensor[(4, 8, 9), uint8],) {
  %259 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %260 = %259.0;
  (%260,)
}

def @func_2352(%var_2348: Tensor[(11, 10, 1), float32]) -> Tensor[(11, 10, 1), float32] {
  %261 = cast(%var_2348, dtype="float32") /* ty=Tensor[(11, 10, 1), float32] */;
  log10(%261) /* ty=Tensor[(11, 10, 1), float32] */
}

def @func_4156() -> Tensor[(4, 8, 9), uint8] {
  @func_36() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @main(%var_17234: Tensor[(10, 15, 7), float64], %var_17235: Tensor[(10, 15, 7), float64]) -> Tensor[(10, 15, 7), float64] {
  %262 = cast(%var_17235, dtype="float64") /* ty=Tensor[(10, 15, 7), float64] */;
  %263 = shape_of(%var_17234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%var_17234, dtype="float64") /* ty=Tensor[(10, 15, 7), float64] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%264, %265) /* ty=Tensor[(10, 15, 7), float64] */
}

def @func_5726() -> (Tensor[(4, 8, 9), uint8],) {
  %266 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %267 = %266.0;
  (%267,)
}

def @func_7257() -> (Tensor[(4, 8, 9), uint8],) {
  %268 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%268,)
}

def @func_6144(%var_6105: Tensor[(11, 10, 12), float64]) -> (Tensor[(11, 10, 12), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %269 = cast(%var_6105, dtype="float64") /* ty=Tensor[(11, 10, 12), float64] */;
  %270 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %271 = sin(%269) /* ty=Tensor[(11, 10, 12), float64] */;
  %272 = %270.0;
  %273 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  (%271, %272, %273)
}

def @func_16032() -> (Tensor[(4, 8, 9), uint8], Tensor[(8, 10, 16), float64], Tensor[(4, 320), float64], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %274 = @func_3131() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %275 = cast(meta[relay.Constant][10] /* ty=Tensor[(4, 320), float64] */, dtype="float64") /* ty=Tensor[(4, 320), float64] */;
  %276 = reshape(%275, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %277 = @func_840(%276) /* ty=(Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) */;
  %278 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %279 = %274.2;
  %280 = %277.0;
  %281 = %278.0;
  %282 = @func_13445() /* ty=Tensor[(11, 10, 10), float32] */;
  (%279, %280, meta[relay.Constant][10] /* ty=Tensor[(4, 320), float64] */, %281, %282)
}

def @func_10246() -> Tensor[(4, 8, 9), float64] {
  %283 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %283.1
}

def @func_7219() -> Tensor[(4, 8, 9), uint8] {
  %284 = @func_5726() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %284.0
}

def @func_12731() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %285 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %286 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %287 = %285.1;
  %288 = %286.0;
  (%287, %288)
}

def @func_7953() -> Tensor[(4, 8, 9), uint8] {
  %289 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %289.1
}

def @func_4835() -> (Tensor[(4, 8, 9), float32],) {
  %290 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  (%290,)
}

def @func_15785() -> (Tensor[(11, 10, 10), float32],) {
  %291 = @func_13445() /* ty=Tensor[(11, 10, 10), float32] */;
  (%291,)
}

def @func_5639() -> Tensor[(4, 8, 9), uint8] {
  @func_4685() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_16616() -> Tensor[(4, 8, 9), float32] {
  %292 = @func_2736() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %292.0
}

def @func_919() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %293 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %294 = %293.0;
  %295 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%294, %295)
}

def @func_196() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %296 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %297 = cast(%296, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %298 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %299 = asin(%297) /* ty=Tensor[(4, 8, 9), float64] */;
  %300 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%298, %299, %300)
}

def @func_6002() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %301 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %302 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  %303 = %301.0;
  (%302, %303)
}

def @func_10346() -> Tensor[(4, 8, 9), float64] {
  %304 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %304.1
}

def @func_5485() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), bool]) {
  %305 = @func_3930() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %306 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %307 = %305.3;
  %308 = cast(%307, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %309 = reshape(%308, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %310 = @func_1452(%309) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %311 = %306.0;
  %312 = %310.0;
  (%307, %311, %312)
}

def @func_1080() -> (Tensor[(4, 8, 9), uint8],) {
  %313 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %314 = %313.0;
  (%314,)
}

def @func_15101(%var_15091: float64, %var_15092: Tensor[(60, 1), float64]) -> (Tensor[(4, 8, 9), int8], Tensor[(7, 12, 5), bool], float64, Tensor[(60, 1), float64], Tensor[(420), float64]) {
  %315 = @func_4463() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %316 = cast(%var_15091, dtype="float64") /* ty=float64 */;
  %317 = cast(%var_15092, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %318 = cast(meta[relay.Constant][11] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %319 = reshape(%316, newshape=[]) /* ty=float64 */;
  %320 = reshape(%317, newshape=[1, 12, 5]) /* ty=Tensor[(1, 12, 5), float64] */;
  %321 = reshape(%318, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float64] */;
  %322 = @func_11849(%319, %320, %321) /* ty=(Tensor[(7, 12, 5), bool],) */;
  %323 = %315.1;
  %324 = %322.0;
  (%323, %324, %var_15091, %var_15092, meta[relay.Constant][11] /* ty=Tensor[(420), float64] */)
}

def @func_16359() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float64]) {
  %325 = @func_15785() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %326 = @func_10422() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) */;
  %327 = @func_6944() /* ty=Tensor[(4, 8, 9), uint8] */;
  %328 = %325.0;
  %329 = %326.1;
  (%327, %328, %329)
}

def @func_15255() -> (Tensor[(14, 8, 13), float64], Tensor[(4, 13, 15), float64]) {
  %330 = cast(meta[relay.Constant][12] /* ty=Tensor[(14, 8, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
  %331 = sqrt(%330) /* ty=Tensor[(14, 8, 13), float64] */;
  %332 = @func_5781() /* ty=Tensor[(4, 13, 15), float64] */;
  (%331, %332)
}

def @func_15846() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) {
  %333 = @func_15580() /* ty=(Tensor[(4, 8, 9), uint64],) */;
  %334 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %335 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %336 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
  %337 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %338 = @func_12839() /* ty=Tensor[(4, 8, 9), float32] */;
  %339 = %333.0;
  %340 = %334.2;
  %341 = %335.0;
  %342 = %336.0;
  %343 = %337.1;
  (%338, %339, %340, %341, %342, %343)
}

def @func_16602(%var_16558: Tensor[(8, 1, 14), int64], %var_16559: Tensor[(8, 6, 14), int64], %var_16568: Tensor[(2340), uint16]) -> (Tensor[(8, 6, 14), int64], Tensor[(15, 12, 13), uint16], Tensor[(2340), uint16], Tensor[(4, 8, 9), uint8]) {
  %344 = cast(%var_16558, dtype="int64") /* ty=Tensor[(8, 1, 14), int64] */;
  %345 = cast(%var_16559, dtype="int64") /* ty=Tensor[(8, 6, 14), int64] */;
  %346 = cast(%var_16568, dtype="uint16") /* ty=Tensor[(2340), uint16] */;
  %347 = reshape(%346, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint16] */;
  %348 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %349 = bitwise_or(%344, %345) /* ty=Tensor[(8, 6, 14), int64] */;
  %350 = @func_14959(%347) /* ty=Tensor[(15, 12, 13), uint16] */;
  %351 = %348.0;
  (%349, %350, %var_16568, %351)
}

def @func_2841() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %352 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %353 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  %354 = @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */;
  %355 = %352.1;
  %356 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%353, %354, %355, %356)
}

def @func_1384() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) {
  %357 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %358 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %359 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %360 = %359.0;
  %361 = cast(%360, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %362 = %357.0;
  %363 = %358.3;
  %364 = sin(%361) /* ty=Tensor[(4, 8, 9), float64] */;
  (%362, %363, %364)
}

def @func_12472(%var_12459: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(594), float64]) {
  %365 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %366 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
  %367 = %366.3;
  %368 = cast(%var_12459, dtype="float64") /* ty=Tensor[(594), float64] */;
  %369 = shape_of(%367, dtype="int32") /* ty=Tensor[(1), int32] */;
  %370 = cast(%367, dtype="float64") /* ty=Tensor[(594), float64] */;
  %371 = dyn.reshape(%368, %369, newshape=[]) /* ty=Tensor[(?), float64] */;
  %372 = %365.1;
  %373 = floor_mod(%370, %371) /* ty=Tensor[(594), float64] */;
  (%372, %373)
}

def @func_7517(%var_7501: Tensor[(2, 5, 11), float64]) -> (Tensor[(2, 5, 11), float64], Tensor[(4, 8, 9), float32]) {
  %374 = cast(%var_7501, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  %375 = tan(%374) /* ty=Tensor[(2, 5, 11), float64] */;
  %376 = cast(%375, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  %377 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %378 = acosh(%376) /* ty=Tensor[(2, 5, 11), float64] */;
  %379 = %377.1;
  (%378, %379)
}

def @func_15763() -> (Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), int8]) {
  %380 = @func_7262() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %381 = @func_15345() /* ty=Tensor[(4, 8, 9), bool] */;
  %382 = %380.0;
  (%381, %382)
}

def @func_1540() -> Tensor[(4, 8, 9), float32] {
  %383 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %383.0
}

def @func_13361() -> (Tensor[(4, 8, 9), uint8],) {
  %384 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %385 = %384.0;
  (%385,)
}

def @func_3131() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %386 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %387 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %388 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %389 = %386.0;
  %390 = %387.1;
  %391 = %388.0;
  (%389, %390, %391)
}

def @func_15409() -> Tensor[(4, 8, 9), uint8] {
  %392 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %392.0
}

def @func_1510() -> (Tensor[(4, 8, 9), float32],) {
  %393 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %394 = %393.3;
  (%394,)
}

def @func_4308() -> Tensor[(4, 8, 9), int8] {
  %395 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %395.0
}

def @func_8183(%var_8181: Tensor[(720), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) {
  %396 = @func_8115() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %397 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %398 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %399 = cast(meta[relay.Constant][13] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %400 = cast(%var_8181, dtype="int32") /* ty=Tensor[(720), int32] */;
  %401 = reshape(%399, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), int32] */;
  %402 = reshape(%400, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), int32] */;
  %403 = %396.1;
  %404 = %397.0;
  %405 = %398.0;
  %406 = @func_6336(%401, %402) /* ty=Tensor[(15, 6, 8), int32] */;
  (%403, %404, %405, %406, meta[relay.Constant][13] /* ty=Tensor[(48), int32] */, %var_8181)
}

def @func_5232() -> (Tensor[(4, 8, 9), uint8],) {
  %407 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %408 = %407.0;
  (%408,)
}

def @func_7641() -> (Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  %409 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %410 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %411 = @func_4363() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %412 = cast(meta[relay.Constant][14] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %413 = reshape(%412, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %414 = @func_6608(%413) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
  %415 = %409.0;
  %416 = %410.0;
  %417 = @func_5410() /* ty=Tensor[(4, 8, 9), uint8] */;
  %418 = %411.0;
  %419 = %414.2;
  (%415, %416, %417, %418, %419, meta[relay.Constant][14] /* ty=Tensor[(594), float32] */)
}

def @func_7349(%var_7344: Tensor[(4, 10, 2), float32]) -> (Tensor[(4, 10, 2), float32],) {
  %420 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 1, 2), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 2), float32] */;
  %421 = cast(%var_7344, dtype="float32") /* ty=Tensor[(4, 10, 2), float32] */;
  %422 = floor_divide(%420, %421) /* ty=Tensor[(4, 10, 2), float32] */;
  (%422,)
}

def @func_9264(%var_9234: Tensor[(16, 15, 3), uint64]) -> Tensor[(16, 15, 3), uint64] {
  %423 = cast(%var_9234, dtype="uint64") /* ty=Tensor[(16, 15, 3), uint64] */;
  %424 = shape_of(meta[relay.Constant][16] /* ty=Tensor[(16, 15, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %425 = cast(meta[relay.Constant][16] /* ty=Tensor[(16, 15, 3), uint64] */, dtype="uint64") /* ty=Tensor[(16, 15, 3), uint64] */;
  %426 = dyn.reshape(%423, %424, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  add(%425, %426) /* ty=Tensor[(16, 15, 3), uint64] */
}

def @func_13827() -> (Tensor[(4, 8, 9), uint8],) {
  %427 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %428 = %427.1;
  (%428,)
}

def @func_5781() -> Tensor[(4, 13, 15), float64] {
  %429 = cast(meta[relay.Constant][17] /* ty=Tensor[(4, 13, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  exp(%429) /* ty=Tensor[(4, 13, 15), float64] */
}

def @func_5345(%var_5331: uint16) -> (Tensor[(11, 2, 11), bool], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %430 = cast(%var_5331, dtype="bool") /* ty=bool */;
  %431 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 2, 11), uint16] */, dtype="bool") /* ty=Tensor[(11, 2, 11), bool] */;
  %432 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %433 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %434 = less(%430, %431) /* ty=Tensor[(11, 2, 11), bool] */;
  %435 = %432.1;
  %436 = %433.0;
  (%434, %435, %436)
}

def @func_9797(%var_9792: float32) -> (Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32) {
  %437 = @func_5538() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %438 = cast(%var_9792, dtype="float32") /* ty=float32 */;
  %439 = reshape(%438, newshape=[]) /* ty=float32 */;
  %440 = %437.0;
  %441 = @func_6809(%439) /* ty=Tensor[(1, 14), float32] */;
  (%440, %441, %var_9792)
}

def @func_15648() -> Tensor[(4, 8, 9), uint8] {
  %442 = @func_10568() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) */;
  %442.4
}

def @func_16500(%var_16464: Tensor[(1, 16, 11), int64]) -> (Tensor[(1, 16, 11), int64], Tensor[(4, 8, 9), float32]) {
  %443 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %444 = cast(%var_16464, dtype="int64") /* ty=Tensor[(1, 16, 11), int64] */;
  %445 = @func_8833() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %446 = bitwise_xor(%443, %444) /* ty=Tensor[(1, 16, 11), int64] */;
  %447 = %445.1;
  (%446, %447)
}

def @func_7179() -> (Tensor[(4, 8, 9), uint8],) {
  %448 = @func_6944() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%448,)
}

def @func_9334() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64]) {
  %449 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %450 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %451 = @func_5981() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %452 = %449.0;
  %453 = %450.0;
  %454 = %451.0;
  (%452, %453, %454)
}

def @func_14473() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %455 = @func_8400() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %456 = %455.0;
  %457 = @func_6944() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%456, %457)
}

def @func_8400() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %458 = @func_5603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %459 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %460 = %458.0;
  %461 = %459.1;
  (%460, %461)
}

def @func_17020() -> (Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(4, 8, 9), int8]) {
  %462 = @func_16275() /* ty=(Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(11, 13, 9), bool]) */;
  %463 = @func_8882() /* ty=Tensor[(4, 8, 9), uint8] */;
  %464 = %462.2;
  %465 = @func_14861() /* ty=Tensor[(4, 8, 9), int8] */;
  (%463, %464, %465)
}

def @func_7870() -> (Tensor[(4, 8, 9), float64],) {
  %466 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %467 = %466.0;
  (%467,)
}

def @func_9664() -> Tensor[(4, 8, 9), uint8] {
  %468 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %468.1
}

def @func_17134() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %469 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %470 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %471 = %469.0;
  %472 = %470.0;
  (%471, %472)
}

def @func_12172() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %473 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %474 = @func_6377() /* ty=Tensor[(4, 8, 9), float32] */;
  %475 = %473.0;
  (%474, %475)
}

def @func_9963() -> Tensor[(4, 8, 9), uint8] {
  %476 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %476.0
}

def @func_12775() -> Tensor[(4, 8, 9), uint8] {
  %477 = @func_10568() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) */;
  %477.4
}

def @func_7213() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %478 = @func_3930() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %479 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %480 = cast(meta[relay.Constant][19] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %481 = reshape(%479, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %482 = reshape(%480, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %483 = %478.2;
  %484 = @func_89(%481, %482) /* ty=Tensor[(4, 10, 2), uint64] */;
  (%483, %484, meta[relay.Constant][19] /* ty=Tensor[(80), uint64] */)
}

def @func_14098(%var_14091: Tensor[(48), int32], %var_14092: Tensor[(4, 180), int32]) -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(4, 180), int32]) {
  %485 = @func_7403() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
  %486 = cast(%var_14091, dtype="int32") /* ty=Tensor[(48), int32] */;
  %487 = cast(%var_14092, dtype="int32") /* ty=Tensor[(4, 180), int32] */;
  %488 = reshape(%486, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %489 = reshape(%487, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
  %490 = @func_7605(%488, %489) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
  %491 = %485.1;
  %492 = %490.0;
  (%491, %492, %var_14091, %var_14092)
}

def @func_8294(%var_8271: Tensor[(1800), uint16]) -> (Tensor[(4, 8, 9), float32], Tensor[(1800), uint16], Tensor[(4, 20), uint32], Tensor[(4, 8, 9), float32]) {
  %493 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %494 = cast(%var_8271, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
  %495 = cast(%var_8271, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
  %496 = reshape(%494, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
  %497 = reshape(%495, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
  %498 = @func_3721(%496, %497) /* ty=(Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) */;
  %499 = %498.3;
  %500 = cast(%499, dtype="float64") /* ty=Tensor[(4, 20), float64] */;
  %501 = log(%500) /* ty=Tensor[(4, 20), float64] */;
  %502 = cast(%499, dtype="uint32") /* ty=Tensor[(4, 20), uint32] */;
  %503 = shape_of(%501, dtype="int32") /* ty=Tensor[(2), int32] */;
  %504 = cast(%501, dtype="uint32") /* ty=Tensor[(4, 20), uint32] */;
  %505 = dyn.reshape(%502, %503, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
  %506 = %493.1;
  %507 = logical_xor(%504, %505) /* ty=Tensor[(4, 20), uint32] */;
  %508 = @func_6377() /* ty=Tensor[(4, 8, 9), float32] */;
  (%506, %var_8271, %507, %508)
}

def @func_13503() -> (Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) {
  %509 = @func_8958() /* ty=(Tensor[(4, 8, 9), bool],) */;
  %510 = %509.0;
  %511 = @func_3816() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%510, %511)
}

def @func_3959() -> (Tensor[(4, 8, 9), float32],) {
  %512 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %513 = %512.6;
  (%513,)
}

def @func_13894() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %514 = @func_10496() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %515 = @func_3131() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %516 = %514.2;
  %517 = %515.0;
  (%516, %517)
}

def @func_2658() -> Tensor[(4, 8, 9), uint8] {
  %518 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %518.0
}

def @func_10496() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %519 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %520 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %521 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %522 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %523 = %519.0;
  %524 = %520.0;
  %525 = %521.1;
  %526 = %522.1;
  (%523, %524, %525, %526)
}

def @func_9698() -> (Tensor[(12, 4, 16), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %527 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %528 = cast(meta[relay.Constant][21] /* ty=Tensor[(12, 4, 16), uint32] */, dtype="uint32") /* ty=Tensor[(12, 4, 16), uint32] */;
  %529 = bitwise_or(%527, %528) /* ty=Tensor[(12, 4, 16), uint32] */;
  %530 = cast(%529, dtype="float64") /* ty=Tensor[(12, 4, 16), float64] */;
  %531 = cast(meta[relay.Constant][20] /* ty=uint32 */, dtype="float64") /* ty=float64 */;
  %532 = @func_5538() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %533 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %534 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %535 = floor_mod(%530, %531) /* ty=Tensor[(12, 4, 16), float64] */;
  %536 = %532.1;
  %537 = %533.1;
  %538 = %534.0;
  (%535, %536, %537, %538)
}

def @func_1889(%var_1874: Tensor[(2, 15, 4), float32], %var_1880: Tensor[(1, 80), uint64]) -> (Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) {
  %539 = cast(%var_1874, dtype="float32") /* ty=Tensor[(2, 15, 4), float32] */;
  %540 = cast(%var_1880, dtype="uint64") /* ty=Tensor[(1, 80), uint64] */;
  %541 = cast(%var_1880, dtype="uint64") /* ty=Tensor[(1, 80), uint64] */;
  %542 = reshape(%540, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %543 = reshape(%541, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %544 = @func_89(%542, %543) /* ty=Tensor[(4, 10, 2), uint64] */;
  %545 = cast(%544, dtype="uint8") /* ty=Tensor[(4, 10, 2), uint8] */;
  %546 = shape_of(%var_1880, dtype="int32") /* ty=Tensor[(2), int32] */;
  %547 = cast(%var_1880, dtype="uint8") /* ty=Tensor[(1, 80), uint8] */;
  %548 = dyn.reshape(%545, %546, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %549 = acosh(%539) /* ty=Tensor[(2, 15, 4), float32] */;
  %550 = bitwise_xor(%547, %548) /* ty=Tensor[(?, 80), uint8] */;
  (%549, %550)
}

def @func_2744() -> Tensor[(4, 8, 9), uint8] {
  %551 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %551.1
}

def @func_7262() -> (Tensor[(4, 8, 9), int8],) {
  %552 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %553 = %552.0;
  (%553,)
}

def @func_15345() -> Tensor[(4, 8, 9), bool] {
  %554 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %554.1
}

def @func_2322() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %555 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %556 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %557 = %555.0;
  %558 = %556.0;
  (%557, %558)
}

def @func_9451() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) {
  %559 = @func_5232() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %560 = cast(meta[relay.Constant][22] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %561 = cast(meta[relay.Constant][23] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %562 = reshape(%560, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %563 = reshape(%561, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
  %564 = @func_7605(%562, %563) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
  %565 = @func_8523() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %566 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
  %567 = %559.0;
  %568 = @func_5639() /* ty=Tensor[(4, 8, 9), uint8] */;
  %569 = %564.3;
  %570 = %565.0;
  (%566, %567, %568, %569, meta[relay.Constant][22] /* ty=Tensor[(48), int32] */, meta[relay.Constant][23] /* ty=Tensor[(720), int32] */, %570)
}

def @func_13589() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %571 = @func_7262() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %572 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %573 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %574 = %571.0;
  %575 = %572.0;
  (%573, %574, %575)
}

def @func_16871() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %576 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %577 = @func_5027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %578 = @func_8115() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %579 = %576.1;
  %580 = %577.1;
  %581 = %578.1;
  (%579, %580, %581)
}

def @func_8862() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %582 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %583 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %584 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  %585 = %582.0;
  (%583, %584, %585)
}

def @func_12367() -> (Tensor[(4, 8, 9), uint8],) {
  %586 = @func_10011() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %587 = %586.0;
  (%587,)
}

def @func_15605() -> Tensor[(4, 8, 9), uint8] {
  %588 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %588.0
}

def @func_2773() -> (Tensor[(4, 8, 9), uint8],) {
  %589 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %590 = %589.0;
  (%590,)
}

def @func_15700(%var_15680: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  %591 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %592 = @func_7641() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
  %593 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %594 = @func_782() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %595 = cast(%var_15680, dtype="float32") /* ty=Tensor[(594), float32] */;
  %596 = cast(%var_15680, dtype="float32") /* ty=Tensor[(594), float32] */;
  %597 = reshape(%595, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %598 = reshape(%596, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %599 = @func_3435(%597, %598) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
  %600 = %591.0;
  %601 = %592.4;
  %602 = %593.2;
  %603 = %594.0;
  %604 = %599.0;
  (%600, %601, %602, %603, %604, %var_15680)
}

def @func_9014() -> Tensor[(4, 8, 9), uint8] {
  %605 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %605.0
}

def @func_1502() -> Tensor[(4, 8, 9), uint8] {
  %606 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %606.0
}

def @func_14861() -> Tensor[(4, 8, 9), int8] {
  %607 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %607.0
}

def @func_4685() -> Tensor[(4, 8, 9), uint8] {
  %608 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %608.0
}

def @func_12598() -> Tensor[(4, 8, 9), uint8] {
  @func_5639() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_4958() -> (Tensor[(4, 8, 9), uint8],) {
  %609 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %610 = %609.0;
  (%610,)
}

def @func_6377() -> Tensor[(4, 8, 9), float32] {
  %611 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %611.0
}

def @func_6944() -> Tensor[(4, 8, 9), uint8] {
  %612 = @func_4958() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %612.0
}

def @func_3492() -> (Tensor[(4, 8, 9), uint8],) {
  %613 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%613,)
}

def @func_4463() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %614 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %615 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %616 = %614.0;
  %617 = %615.0;
  (%616, %617)
}

def @func_3721(%var_3706: Tensor[(10, 15, 12), uint16], %var_3707: Tensor[(10, 15, 12), uint16]) -> (Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) {
  %618 = cast(%var_3707, dtype="bool") /* ty=Tensor[(10, 15, 12), bool] */;
  %619 = shape_of(%var_3706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %620 = cast(%var_3706, dtype="bool") /* ty=Tensor[(10, 15, 12), bool] */;
  %621 = dyn.reshape(%618, %619, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %622 = cast(meta[relay.Constant][24] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %623 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 20), uint64] */, dtype="uint64") /* ty=Tensor[(4, 20), uint64] */;
  %624 = reshape(%622, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %625 = reshape(%623, newshape=[80]) /* ty=Tensor[(80), uint64] */;
  %626 = @func_1999(%624, %625) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %627 = less(%620, %621) /* ty=Tensor[(10, 15, 12), bool] */;
  %628 = %626.7;
  (%627, %628, meta[relay.Constant][24] /* ty=Tensor[(120), float32] */, meta[relay.Constant][25] /* ty=Tensor[(4, 20), uint64] */)
}

def @func_8314() -> (Tensor[(4, 8, 9), float64],) {
  %629 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %630 = %629.0;
  (%630,)
}

def @func_36() -> Tensor[(4, 8, 9), uint8] {
  %631 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %632 = cos(%631) /* ty=Tensor[(4, 8, 9), float32] */;
  %633 = cast(meta[relay.Constant][27] /* ty=Tensor[(4, 8, 9), float32] */, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %634 = shape_of(%632, dtype="int32") /* ty=Tensor[(3), int32] */;
  %635 = cast(%632, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %636 = dyn.reshape(%633, %634, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%635, %636) /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_484() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %637 = cast(meta[relay.Constant][28] /* ty=Tensor[(11, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 10), float32] */;
  %638 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %639 = atan(%637) /* ty=Tensor[(11, 10, 10), float32] */;
  %640 = %638.0;
  (%639, %640)
}

def @func_1763() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) {
  %641 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %642 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %643 = %641.0;
  %644 = %642.0;
  (%643, %644)
}

def @func_14426() -> Tensor[(4, 8, 9), int8] {
  %645 = @func_5868() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %645.0
}

def @func_782() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %646 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %647 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %648 = %646.2;
  %649 = %647.0;
  (%648, %649)
}

def @func_7939() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %650 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %651 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %652 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %653 = %650.3;
  %654 = %651.1;
  %655 = %652.0;
  %656 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%653, %654, %655, %656)
}

def @func_1285() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %657 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %658 = %657.0;
  %659 = cast(%658, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %660 = sqrt(%659) /* ty=Tensor[(4, 8, 9), float32] */;
  %661 = cast(%660, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %662 = shape_of(%658, dtype="int32") /* ty=Tensor[(3), int32] */;
  %663 = cast(%658, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %664 = dyn.reshape(%661, %662, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %665 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %666 = mod(%663, %664) /* ty=Tensor[(4, 8, 9), float32] */;
  %667 = %665.0;
  (%666, %667)
}

def @func_7687(%var_7680: Tensor[(12, 7, 16), int8], %var_7681: Tensor[(12, 7, 16), int8]) -> (Tensor[(12, 7, 16), int8],) {
  %668 = cast(%var_7681, dtype="int8") /* ty=Tensor[(12, 7, 16), int8] */;
  %669 = shape_of(%var_7680, dtype="int32") /* ty=Tensor[(3), int32] */;
  %670 = cast(%var_7680, dtype="int8") /* ty=Tensor[(12, 7, 16), int8] */;
  %671 = dyn.reshape(%668, %669, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %672 = maximum(%670, %671) /* ty=Tensor[(12, 7, 16), int8] */;
  (%672,)
}

def @func_8608() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %673 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %674 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %675 = @func_4958() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %676 = %673.3;
  %677 = @func_8230() /* ty=Tensor[(4, 8, 9), int8] */;
  %678 = %674.0;
  %679 = %675.0;
  (%676, %677, %678, %679)
}

def @func_15240() -> (Tensor[(11, 10, 10), float32],) {
  %680 = @func_10094() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) */;
  %681 = %680.0;
  (%681,)
}

def @func_4027() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %682 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %683 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %684 = %682.0;
  (%683, %684)
}

def @func_8230() -> Tensor[(4, 8, 9), int8] {
  %685 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %685.2
}

def @func_16551() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %686 = @func_13729() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %687 = @func_12097() /* ty=(Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %688 = %686.0;
  %689 = %687.1;
  (%688, %689)
}

def @func_5868() -> (Tensor[(4, 8, 9), int8],) {
  %690 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %691 = %690.0;
  (%691,)
}

def @func_9144() -> Tensor[(4, 8, 9), uint8] {
  %692 = @func_7403() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
  %692.0
}

def @func_11273() -> Tensor[(4, 8, 9), uint8] {
  @func_9552() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_15168() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %693 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %694 = @func_7257() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %695 = %693.2;
  %696 = %694.0;
  (%695, %696)
}

def @func_12445() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %697 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %698 = @func_10642() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %699 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %700 = %697.0;
  %701 = %698.1;
  %702 = %699.0;
  (%700, %701, %702)
}

def @func_7994() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %703 = @func_4835() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %704 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %705 = %703.0;
  %706 = %704.1;
  (%705, %706)
}

def @func_3025() -> (Tensor[(4, 8, 9), uint8],) {
  %707 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %708 = %707.2;
  (%708,)
}

def @func_10827() -> (Tensor[(4, 8, 9), float64],) {
  %709 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %710 = %709.2;
  (%710,)
}

def @func_13960(%var_13945: Tensor[(6, 13, 16), float32], %var_13946: Tensor[(6, 13, 16), float32]) -> Tensor[(6, 13, 16), float32] {
  %711 = cast(%var_13946, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %712 = shape_of(%var_13945, dtype="int32") /* ty=Tensor[(3), int32] */;
  %713 = cast(%var_13945, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
  %714 = dyn.reshape(%711, %712, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  mod(%713, %714) /* ty=Tensor[(6, 13, 16), float32] */
}

def @func_11003() -> (Tensor[(4, 10, 2), uint64],) {
  %715 = @func_8795() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %716 = %715.1;
  (%716,)
}

def @func_15005() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %717 = @func_7641() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
  %718 = @func_5868() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %719 = %717.2;
  %720 = %718.0;
  (%719, %720)
}

def @func_10753() -> Tensor[(4, 8, 9), uint8] {
  %721 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %721.0
}

def @func_11055() -> (Tensor[(80), uint64], Tensor[(4, 8, 9), uint8]) {
  %722 = @func_7213() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %723 = @func_6865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %724 = %722.2;
  %725 = %723.0;
  (%724, %725)
}

def @func_4162() -> (Tensor[(4, 8, 9), uint8],) {
  %726 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %727 = %726.0;
  (%727,)
}

def @func_14270(%var_14204: Tensor[(16, 4, 5), float32]) -> (Tensor[(16, 4, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(16, 4, 5), float32]) {
  %728 = cast(%var_14204, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %729 = sinh(%728) /* ty=Tensor[(16, 4, 5), float32] */;
  %730 = cast(%729, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %731 = shape_of(%var_14204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %732 = cast(%var_14204, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %733 = dyn.reshape(%730, %731, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %734 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %735 = cast(%729, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %736 = subtract(%732, %733) /* ty=Tensor[(16, 4, 5), float32] */;
  %737 = %734.0;
  %738 = acosh(%735) /* ty=Tensor[(16, 4, 5), float32] */;
  (%736, %737, %738)
}

def @func_4363() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %739 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %740 = @func_362() /* ty=Tensor[(4, 8, 9), uint8] */;
  %741 = %739.0;
  (%740, %741)
}

def @func_14803() -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %742 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %743 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %744 = %742.1;
  %745 = %743.0;
  (%744, %745)
}

def @func_16938() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %746 = @func_16551() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %747 = @func_15648() /* ty=Tensor[(4, 8, 9), uint8] */;
  %748 = %746.0;
  (%747, %748)
}

def @func_11124(%var_11120: Tensor[(1800), uint16]) -> (Tensor[(11, 10, 10), float32], Tensor[(4, 20), uint32], Tensor[(1800), uint16]) {
  %749 = @func_10094() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) */;
  %750 = cast(%var_11120, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
  %751 = reshape(%750, newshape=[1800]) /* ty=Tensor[(1800), uint16] */;
  %752 = @func_8294(%751) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(1800), uint16], Tensor[(4, 20), uint32], Tensor[(4, 8, 9), float32]) */;
  %753 = %749.0;
  %754 = %752.2;
  (%753, %754, %var_11120)
}

def @func_13100(%var_13096: Tensor[(1800), uint16]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(1800), uint16]) {
  %755 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %756 = @func_8958() /* ty=(Tensor[(4, 8, 9), bool],) */;
  %757 = cast(%var_13096, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
  %758 = cast(%var_13096, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
  %759 = reshape(%757, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
  %760 = reshape(%758, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
  %761 = @func_3721(%759, %760) /* ty=(Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) */;
  %762 = %755.0;
  %763 = %756.0;
  %764 = %761.1;
  (%762, %763, %764, %var_13096)
}

def @func_16427(%var_16413: Tensor[(120), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(2, 6, 8), float32], Tensor[(80, 96), int16]) {
  %765 = @func_11416() /* ty=(Tensor[(4, 8, 9), bool],) */;
  %766 = @func_16088() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 13, 16), float32], Tensor[(1248), float32]) */;
  %767 = cast(%var_16413, dtype="float32") /* ty=Tensor[(120), float32] */;
  %768 = cast(meta[relay.Constant][29] /* ty=Tensor[(80, 1), uint64] */, dtype="uint64") /* ty=Tensor[(80, 1), uint64] */;
  %769 = reshape(%767, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %770 = reshape(%768, newshape=[80]) /* ty=Tensor[(80), uint64] */;
  %771 = @func_1999(%769, %770) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %772 = cast(meta[relay.Constant][30] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %773 = reshape(%772, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float32] */;
  %774 = @func_5111(%773) /* ty=(Tensor[(2, 6, 8), float32],) */;
  %775 = cast(meta[relay.Constant][30] /* ty=Tensor[(96), float32] */, dtype="int16") /* ty=Tensor[(96), int16] */;
  %776 = cast(meta[relay.Constant][29] /* ty=Tensor[(80, 1), uint64] */, dtype="int16") /* ty=Tensor[(80, 1), int16] */;
  %777 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
  %778 = %765.0;
  %779 = %766.1;
  %780 = %771.5;
  %781 = %774.0;
  %782 = right_shift(%775, %776) /* ty=Tensor[(80, 96), int16] */;
  (%777, %778, %779, %780, %var_16413, %781, %782)
}

def @func_2027() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %783 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %784 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %785 = %783.0;
  %786 = %784.0;
  (%785, %786)
}

def @func_8430() -> (Tensor[(4, 8, 9), uint64],) {
  %787 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %788 = %787.4;
  (%788,)
}

def @func_7446() -> (Tensor[(4, 8, 9), uint8],) {
  %789 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%789,)
}

def @func_12385() -> Tensor[(4, 8, 9), uint8] {
  %790 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %790.0
}

def @func_548() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) {
  %791 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %792 = %791.1;
  %793 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %794 = %793.1;
  %795 = cast(%794, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
  %796 = shape_of(%792, dtype="int32") /* ty=Tensor[(3), int32] */;
  %797 = cast(%792, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
  %798 = dyn.reshape(%795, %796, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %799 = cast(%794, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %800 = subtract(%797, %798) /* ty=Tensor[(4, 8, 9), uint64] */;
  %801 = log2(%799) /* ty=Tensor[(4, 8, 9), float64] */;
  (%800, %801)
}

def @func_11849(%var_11819: float64, %var_11820: Tensor[(1, 12, 5), float64], %var_11843: Tensor[(7, 12, 5), float64]) -> (Tensor[(7, 12, 5), bool],) {
  %802 = cast(%var_11819, dtype="float64") /* ty=float64 */;
  %803 = cast(%var_11820, dtype="float64") /* ty=Tensor[(1, 12, 5), float64] */;
  %804 = divide(%802, %803) /* ty=Tensor[(1, 12, 5), float64] */;
  %805 = cast(%804, dtype="int8") /* ty=Tensor[(1, 12, 5), int8] */;
  %806 = shape_of(%var_11820, dtype="int32") /* ty=Tensor[(3), int32] */;
  %807 = cast(%var_11820, dtype="int8") /* ty=Tensor[(1, 12, 5), int8] */;
  %808 = dyn.reshape(%805, %806, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %809 = left_shift(%807, %808) /* ty=Tensor[(?, 12, 5), int8] */;
  %810 = cast(%809, dtype="float64") /* ty=Tensor[(?, 12, 5), float64] */;
  %811 = log10(%810) /* ty=Tensor[(?, 12, 5), float64] */;
  %812 = cast(%811, dtype="bool") /* ty=Tensor[(?, 12, 5), bool] */;
  %813 = cast(%var_11843, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
  %814 = logical_and(%812, %813) /* ty=Tensor[(7, 12, 5), bool] */;
  (%814,)
}

def @func_10743() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %815 = @func_9638() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %816 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %817 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %818 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %819 = cast(meta[relay.Constant][31] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
  %820 = cast(meta[relay.Constant][32] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %821 = reshape(%819, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), float64] */;
  %822 = reshape(%820, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %823 = @func_7045(%821, %822) /* ty=(Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) */;
  %824 = @func_10422() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) */;
  %825 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %826 = %815.1;
  %827 = %816.0;
  %828 = %817.0;
  %829 = %818.3;
  %830 = %823.0;
  %831 = %824.0;
  %832 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
  %833 = @func_8882() /* ty=Tensor[(4, 8, 9), uint8] */;
  %834 = %825.0;
  (%826, %827, %828, %829, %830, meta[relay.Constant][31] /* ty=Tensor[(560), float64] */, meta[relay.Constant][32] /* ty=Tensor[(720), int32] */, %831, %832, %833, %834)
}

def @func_15580() -> (Tensor[(4, 8, 9), uint64],) {
  %835 = @func_15440() /* ty=(Tensor[(4, 8, 9), uint64],) */;
  %836 = %835.0;
  (%836,)
}

def @func_5329() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool]) {
  %837 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %838 = %837.0;
  %839 = cast(%838, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %840 = reshape(%839, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %841 = @func_3001(%840) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %842 = cast(%838, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %843 = reshape(%842, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %844 = @func_1452(%843) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %845 = %841.1;
  %846 = %844.0;
  (%838, %845, %846)
}

def @func_3287() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) {
  %847 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %848 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %849 = %847.0;
  %850 = %848.0;
  (%849, %850)
}

def @func_11747() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32, Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float64]) {
  %851 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %852 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %853 = cast(-3.08499f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %854 = reshape(%853, newshape=[]) /* ty=float32 */;
  %855 = @func_9797(%854) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32) */;
  %856 = @func_9638() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %857 = %851.1;
  %858 = @func_10049() /* ty=Tensor[(4, 8, 9), float64] */;
  %859 = %852.1;
  %860 = %855.1;
  %861 = %856.1;
  %862 = @func_10049() /* ty=Tensor[(4, 8, 9), float64] */;
  %863 = @func_10246() /* ty=Tensor[(4, 8, 9), float64] */;
  (%857, %858, %859, %860, -3.08499f /* ty=float32 */, %861, %862, %863)
}

def @func_10183() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) {
  %864 = @func_5981() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %865 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %866 = %864.0;
  %867 = %865.0;
  (%866, %867)
}

def @func_15530() -> (Tensor[(4, 8, 9), uint8],) {
  %868 = @func_8523() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %869 = %868.0;
  (%869,)
}

def @func_8482(%var_8457: Tensor[(10, 1, 2), int8], %var_8458: Tensor[(10, 9, 2), int8]) -> (Tensor[(10, 9, 2), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %870 = cast(%var_8457, dtype="int8") /* ty=Tensor[(10, 1, 2), int8] */;
  %871 = cast(%var_8458, dtype="int8") /* ty=Tensor[(10, 9, 2), int8] */;
  %872 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %873 = maximum(%870, %871) /* ty=Tensor[(10, 9, 2), int8] */;
  %874 = %872.0;
  %875 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%873, %874, %875)
}

def @func_5410() -> Tensor[(4, 8, 9), uint8] {
  %876 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %876.2
}

def @func_6608(%var_6603: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  %877 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %878 = @func_3930() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %879 = cast(%var_6603, dtype="float32") /* ty=Tensor[(594), float32] */;
  %880 = cast(%var_6603, dtype="float32") /* ty=Tensor[(594), float32] */;
  %881 = reshape(%879, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %882 = reshape(%880, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %883 = @func_3435(%881, %882) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
  %884 = %877.1;
  %885 = %878.3;
  %886 = %883.0;
  (%884, %885, %886, %var_6603)
}

def @func_1999(%var_1929: Tensor[(120), float32], %var_1930: Tensor[(80), uint64]) -> (Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %887 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
  %888 = cast(%var_1929, dtype="float32") /* ty=Tensor[(120), float32] */;
  %889 = cast(%var_1930, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %890 = reshape(%888, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), float32] */;
  %891 = reshape(%889, newshape=[1, 80]) /* ty=Tensor[(1, 80), uint64] */;
  %892 = @func_1889(%890, %891) /* ty=(Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) */;
  %893 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %894 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %895 = %887.0;
  %896 = cast(%895, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %897 = reshape(%896, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %898 = @func_1805(%897) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %899 = %894.3;
  %900 = cast(%899, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %901 = reshape(%900, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %902 = @func_1805(%901) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %903 = %892.0;
  %904 = %893.0;
  %905 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %906 = %898.1;
  %907 = %902.1;
  (%895, %903, %var_1929, %var_1930, %904, %905, %899, %906, %907)
}

def @func_11416() -> (Tensor[(4, 8, 9), bool],) {
  %908 = @func_8958() /* ty=(Tensor[(4, 8, 9), bool],) */;
  %909 = %908.0;
  (%909,)
}

def @func_14735() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %910 = @func_782() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %911 = @func_7213() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %912 = @func_14125() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %913 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %914 = %910.1;
  %915 = %911.1;
  %916 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
  %917 = %912.0;
  %918 = %913.0;
  (%914, %915, %916, %917, %918)
}

def @func_16927() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(594), float32]) {
  %919 = @func_12367() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %920 = cast(meta[relay.Constant][33] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %921 = reshape(%920, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %922 = @func_15700(%921) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
  %923 = %919.0;
  %924 = %922.2;
  (%923, %924, meta[relay.Constant][33] /* ty=Tensor[(594), float32] */)
}

def @func_14573() -> Tensor[(4, 8, 9), uint8] {
  %925 = @func_6980() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %925.0
}

def @func_8833() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %926 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %927 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %928 = @func_5603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %929 = %926.0;
  %930 = %927.3;
  %931 = %928.0;
  (%929, %930, %931)
}

def @func_13819() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %932 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %933 = @func_8400() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %934 = %932.0;
  %935 = %933.1;
  (%934, %935)
}

def @func_13374(%var_13363: Tensor[(2, 6, 10), bool]) -> (Tensor[(2, 6, 10), bool],) {
  %936 = cast(meta[relay.Constant][34] /* ty=Tensor[(2, 6, 10), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 10), bool] */;
  %937 = shape_of(%var_13363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %938 = cast(%var_13363, dtype="bool") /* ty=Tensor[(2, 6, 10), bool] */;
  %939 = dyn.reshape(%936, %937, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %940 = logical_and(%938, %939) /* ty=Tensor[(2, 6, 10), bool] */;
  (%940,)
}

def @func_10288() -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %941 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %942 = @func_8929() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(720), int32]) */;
  %943 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %944 = %941.2;
  %945 = %942.1;
  %946 = %943.0;
  (%944, %945, %946)
}

def @func_12979() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %947 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %948 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %949 = %947.0;
  %950 = %948.1;
  %951 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%949, %950, %951)
}

def @func_16823() -> Tensor[(4, 8, 9), int8] {
  @func_9358() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_8913() -> (Tensor[(4, 8, 9), uint8],) {
  %952 = @func_8749() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %953 = %952.0;
  (%953,)
}

def @func_3359() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %954 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %955 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %956 = %954.0;
  %957 = %955.0;
  (%956, %957)
}

def @func_1699() -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %958 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %959 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %960 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %961 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %962 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %963 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %964 = %963.0;
  %965 = cast(%964, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %966 = %958.1;
  %967 = %959.0;
  %968 = @func_362() /* ty=Tensor[(4, 8, 9), uint8] */;
  %969 = %960.1;
  %970 = %961.0;
  %971 = %962.2;
  %972 = atan(%965) /* ty=Tensor[(4, 8, 9), float32] */;
  (%966, %967, %968, %969, %970, %971, %972)
}

def @func_9084(%var_9024: Tensor[(108, 4), int64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(108, 4), float32], Tensor[(4, 8, 9), float32], Tensor[(108, 4), float64], Tensor[(4, 8, 9), uint8]) {
  %973 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %974 = cast(%var_9024, dtype="int64") /* ty=Tensor[(108, 4), int64] */;
  %975 = reshape(%974, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), int64] */;
  %976 = @func_6480(%975) /* ty=Tensor[(9, 16, 3), int64] */;
  %977 = cast(%976, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
  %978 = shape_of(%var_9024, dtype="int32") /* ty=Tensor[(2), int32] */;
  %979 = cast(%var_9024, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
  %980 = dyn.reshape(%977, %978, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %981 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
  %982 = cast(%var_9024, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
  %983 = acosh(%982) /* ty=Tensor[(108, 4), float32] */;
  %984 = cast(meta[relay.Constant][35] /* ty=Tensor[(108, 4), float32] */, dtype="float64") /* ty=Tensor[(108, 4), float64] */;
  %985 = shape_of(%983, dtype="int32") /* ty=Tensor[(2), int32] */;
  %986 = cast(%983, dtype="float64") /* ty=Tensor[(108, 4), float64] */;
  %987 = dyn.reshape(%984, %985, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %988 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %989 = %973.0;
  %990 = floor_mod(%979, %980) /* ty=Tensor[(108, 4), float32] */;
  %991 = %981.1;
  %992 = maximum(%986, %987) /* ty=Tensor[(108, 4), float64] */;
  %993 = %988.0;
  (%989, %990, %991, %992, %993)
}

def @func_11109() -> Tensor[(4, 8, 9), uint8] {
  %994 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %994.1
}

def @func_5070() -> Tensor[(4, 8, 9), uint8] {
  %995 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %995.2
}

def @func_10011() -> (Tensor[(4, 8, 9), uint8],) {
  %996 = @func_7446() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %997 = %996.0;
  (%997,)
}

def @func_3326(%var_3318: Tensor[(6, 2, 13), int16], %var_3319: Tensor[(6, 2, 13), int16]) -> Tensor[(6, 2, 13), int16] {
  %998 = cast(%var_3319, dtype="int16") /* ty=Tensor[(6, 2, 13), int16] */;
  %999 = shape_of(%var_3318, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1000 = cast(%var_3318, dtype="int16") /* ty=Tensor[(6, 2, 13), int16] */;
  %1001 = dyn.reshape(%998, %999, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  minimum(%1000, %1001) /* ty=Tensor[(6, 2, 13), int16] */
}

def @func_13332() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(10, 13, 12), float32]) {
  %1002 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1003 = cast(meta[relay.Constant][36] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %1004 = cast(meta[relay.Constant][37] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1005 = reshape(%1003, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %1006 = reshape(%1004, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
  %1007 = @func_7605(%1005, %1006) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
  %1008 = @func_12024() /* ty=(Tensor[(10, 13, 12), float32],) */;
  %1009 = %1002.0;
  %1010 = %1007.1;
  %1011 = %1008.0;
  (%1009, %1010, meta[relay.Constant][36] /* ty=Tensor[(48), int32] */, meta[relay.Constant][37] /* ty=Tensor[(720), int32] */, %1011)
}

def @func_11373(%var_11367: Tensor[(16, 2, 13), float64], %var_11368: Tensor[(16, 2, 13), float64]) -> Tensor[(16, 2, 13), float64] {
  %1012 = cast(%var_11368, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
  %1013 = shape_of(%var_11367, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1014 = cast(%var_11367, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
  %1015 = dyn.reshape(%1012, %1013, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%1014, %1015) /* ty=Tensor[(16, 2, 13), float64] */
}

def @func_1594() -> (Tensor[(4, 8, 9), uint8],) {
  %1016 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %1017 = %1016.2;
  (%1017,)
}

def @func_9484(%var_9464: Tensor[(3, 10, 5), uint64]) -> (Tensor[(3, 10, 5), uint64],) {
  %1018 = cast(meta[relay.Constant][38] /* ty=Tensor[(3, 10, 5), uint64] */, dtype="uint64") /* ty=Tensor[(3, 10, 5), uint64] */;
  %1019 = shape_of(%var_9464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1020 = cast(%var_9464, dtype="uint64") /* ty=Tensor[(3, 10, 5), uint64] */;
  %1021 = dyn.reshape(%1018, %1019, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1022 = subtract(%1020, %1021) /* ty=Tensor[(3, 10, 5), uint64] */;
  (%1022,)
}

def @func_4629(%var_4519: Tensor[(1, 110), float32], %var_4590: Tensor[(15, 110), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(15, 110), int32], Tensor[(?, 110), bool], Tensor[(?, 110), float64]) {
  %1023 = cast(%var_4519, dtype="float32") /* ty=Tensor[(1, 110), float32] */;
  %1024 = reshape(%1023, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
  %1025 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1026 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %1027 = cast(%var_4519, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %1028 = atan(%1027) /* ty=Tensor[(1, 110), float64] */;
  %1029 = cast(%1028, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %1030 = asin(%1029) /* ty=Tensor[(1, 110), float64] */;
  %1031 = cast(%1030, dtype="float32") /* ty=Tensor[(1, 110), float32] */;
  %1032 = shape_of(%1028, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1033 = cast(%1028, dtype="float32") /* ty=Tensor[(1, 110), float32] */;
  %1034 = dyn.reshape(%1031, %1032, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %1035 = floor_mod(%1033, %1034) /* ty=Tensor[(?, 110), float32] */;
  %1036 = cast(%1035, dtype="float64") /* ty=Tensor[(?, 110), float64] */;
  %1037 = tan(%1036) /* ty=Tensor[(?, 110), float64] */;
  %1038 = cast(%1037, dtype="int32") /* ty=Tensor[(?, 110), int32] */;
  %1039 = cast(%var_4590, dtype="int32") /* ty=Tensor[(15, 110), int32] */;
  %1040 = cast(%1035, dtype="bool") /* ty=Tensor[(?, 110), bool] */;
  %1041 = shape_of(%1037, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1042 = cast(%1037, dtype="bool") /* ty=Tensor[(?, 110), bool] */;
  %1043 = dyn.reshape(%1040, %1041, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %1044 = cast(%1035, dtype="float64") /* ty=Tensor[(?, 110), float64] */;
  %1045 = shape_of(%1030, dtype="int32") /* ty=Tensor[(2), int32] */;
  %1046 = cast(%1030, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
  %1047 = dyn.reshape(%1044, %1045, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %1048 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1049 = @func_2352(%1024) /* ty=Tensor[(11, 10, 1), float32] */;
  %1050 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1051 = %1025.0;
  %1052 = %1026.0;
  %1053 = bitwise_or(%1038, %1039) /* ty=Tensor[(15, 110), int32] */;
  %1054 = equal(%1042, %1043) /* ty=Tensor[(?, 110), bool] */;
  %1055 = floor_divide(%1046, %1047) /* ty=Tensor[(?, 110), float64] */;
  (%1048, %1049, %1050, %1051, %1052, %1053, %1054, %1055)
}

def @func_13396() -> (Tensor[(4, 8, 9), uint8],) {
  %1056 = @func_10288() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1057 = %1056.2;
  (%1057,)
}

def @func_1452(%var_1444: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), bool],) {
  %1058 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1059 = %1058.0;
  %1060 = cast(%var_1444, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1061 = shape_of(%1059, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1062 = cast(%1059, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1063 = dyn.reshape(%1060, %1061, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1064 = less_equal(%1062, %1063) /* ty=Tensor[(4, 8, 9), bool] */;
  (%1064,)
}

def @func_7758(%var_7714: Tensor[(7, 5, 7), int16]) -> (Tensor[(7, 5, 7), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(110), float32], Tensor[(4, 8, 9), uint8]) {
  %1065 = cast(meta[relay.Constant][39] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %1066 = cast(%var_7714, dtype="int16") /* ty=Tensor[(7, 5, 7), int16] */;
  %1067 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1068 = cast(meta[relay.Constant][40] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1069 = reshape(%1068, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %1070 = @func_6195(%1069) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32]) */;
  %1071 = %1067.0;
  %1072 = cast(%1071, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1073 = reshape(%1072, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1074 = @func_667(%1073) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) */;
  %1075 = multiply(%1065, %1066) /* ty=Tensor[(7, 5, 7), int16] */;
  %1076 = %1070.0;
  %1077 = %1074.0;
  (%1075, %1071, %1076, meta[relay.Constant][40] /* ty=Tensor[(110), float32] */, %1077)
}

def @func_6480(%var_6472: Tensor[(9, 16, 3), int64]) -> Tensor[(9, 16, 3), int64] {
  %1078 = cast(meta[relay.Constant][41] /* ty=Tensor[(9, 16, 3), int64] */, dtype="int64") /* ty=Tensor[(9, 16, 3), int64] */;
  %1079 = shape_of(%var_6472, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1080 = cast(%var_6472, dtype="int64") /* ty=Tensor[(9, 16, 3), int64] */;
  %1081 = dyn.reshape(%1078, %1079, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  logical_xor(%1080, %1081) /* ty=Tensor[(9, 16, 3), int64] */
}

def @func_10422() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) {
  %1082 = @func_8314() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %1083 = @func_9358() /* ty=Tensor[(4, 8, 9), int8] */;
  %1084 = %1082.0;
  (%1083, %1084)
}

def @func_3001(%var_2972: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1085 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1086 = %1085.0;
  %1087 = cast(%var_2972, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
  %1088 = shape_of(%1086, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1089 = cast(%1086, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
  %1090 = dyn.reshape(%1087, %1088, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1091 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %1092 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %1093 = maximum(%1089, %1090) /* ty=Tensor[(4, 8, 9), uint64] */;
  %1094 = %1091.0;
  %1095 = %1092.0;
  (%1093, %1094, %1095)
}

def @func_6809(%var_6796: float32) -> Tensor[(1, 14), float32] {
  %1096 = cast(%var_6796, dtype="float32") /* ty=float32 */;
  %1097 = cast(meta[relay.Constant][42] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
  mod(%1096, %1097) /* ty=Tensor[(1, 14), float32] */
}

def @func_14353() -> Tensor[(4, 8, 9), uint8] {
  %1098 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1098.0
}

def @func_6195(%var_6185: Tensor[(110), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32]) {
  %1099 = cast(%var_6185, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1100 = reshape(%1099, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
  %1101 = @func_5639() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1102 = @func_2352(%1100) /* ty=Tensor[(11, 10, 1), float32] */;
  (%1101, %1102, %var_6185)
}

def @func_12926() -> Tensor[(4, 8, 9), uint8] {
  @func_9664() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_2704(%var_2663: Tensor[(12, 14, 13), float64], %var_2670: Tensor[(120), float32], %var_2685: Tensor[(110), float32]) -> (Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) {
  %1103 = cast(%var_2663, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
  %1104 = sqrt(%1103) /* ty=Tensor[(12, 14, 13), float64] */;
  %1105 = cast(%var_2663, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
  %1106 = shape_of(%1104, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1107 = cast(%1104, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
  %1108 = dyn.reshape(%1105, %1106, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1109 = cast(%var_2670, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1110 = cast(meta[relay.Constant][43] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %1111 = reshape(%1109, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), float32] */;
  %1112 = reshape(%1110, newshape=[1, 80]) /* ty=Tensor[(1, 80), uint64] */;
  %1113 = @func_1889(%1111, %1112) /* ty=(Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) */;
  %1114 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1115 = %1114.1;
  %1116 = cast(%1115, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1117 = reshape(%1116, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1118 = @func_1452(%1117) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %1119 = cast(%var_2685, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1120 = reshape(%1119, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
  %1121 = @func_2352(%1120) /* ty=Tensor[(11, 10, 1), float32] */;
  %1122 = cast(meta[relay.Constant][43] /* ty=Tensor[(80), uint64] */, dtype="int32") /* ty=Tensor[(80), int32] */;
  %1123 = cast(%1121, dtype="int32") /* ty=Tensor[(11, 10, 1), int32] */;
  %1124 = greater(%1107, %1108) /* ty=Tensor[(12, 14, 13), bool] */;
  %1125 = %1113.0;
  %1126 = %1118.0;
  %1127 = bitwise_or(%1122, %1123) /* ty=Tensor[(11, 10, 80), int32] */;
  (%1124, %1125, %var_2670, %1115, %1126, %var_2685, %1127)
}

def @func_16529() -> Tensor[(4, 8, 9), uint8] {
  %1128 = @func_8913() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1128.0
}

def @func_1897() -> Tensor[(4, 8, 9), uint8] {
  @func_362() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_11646() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint16]) {
  %1129 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1130 = @func_10246() /* ty=Tensor[(4, 8, 9), float64] */;
  %1131 = cast(%1130, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1132 = reshape(%1131, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1133 = @func_1805(%1132) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %1134 = %1129.0;
  %1135 = %1133.0;
  (%1134, %1130, %1135)
}

def @func_7403() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %1136 = @func_1603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1137 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %1138 = %1136.0;
  %1139 = %1137.0;
  (%1138, %1139)
}

def @func_2495() -> (Tensor[(4, 8, 9), uint8],) {
  %1140 = @func_782() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1141 = %1140.1;
  (%1141,)
}

def @func_579() -> (Tensor[(4, 8, 9), uint8],) {
  %1142 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1143 = %1142.0;
  (%1143,)
}

def @func_13777() -> (Tensor[(720), int32],) {
  %1144 = @func_9451() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) */;
  %1145 = %1144.5;
  (%1145,)
}

def @func_6776() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %1146 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1147 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1148 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %1149 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1150 = %1146.0;
  %1151 = %1147.0;
  %1152 = %1148.0;
  %1153 = %1149.0;
  (%1150, %1151, %1152, %1153)
}

def @func_7815(%var_7786: Tensor[(24, 2), int32], %var_7808: Tensor[(120), float32]) -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), int8], Tensor[(24, 2), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(12, 14, 13), bool], Tensor[(1092, 2), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1154 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %1155 = cast(%var_7786, dtype="int32") /* ty=Tensor[(24, 2), int32] */;
  %1156 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1157 = reshape(%1155, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %1158 = reshape(%1156, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
  %1159 = @func_7605(%1157, %1158) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
  %1160 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %1161 = cast(meta[relay.Constant][45] /* ty=Tensor[(1092, 2), float64] */, dtype="float64") /* ty=Tensor[(1092, 2), float64] */;
  %1162 = cast(%var_7808, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1163 = cast(meta[relay.Constant][46] /* ty=Tensor[(22, 5), float32] */, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
  %1164 = reshape(%1161, newshape=[12, 14, 13]) /* ty=Tensor[(12, 14, 13), float64] */;
  %1165 = reshape(%1162, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %1166 = reshape(%1163, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %1167 = @func_2704(%1164, %1165, %1166) /* ty=(Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) */;
  %1168 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1169 = %1154.0;
  %1170 = %1159.2;
  %1171 = %1160.0;
  %1172 = %1167.0;
  %1173 = %1168.0;
  %1174 = @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1169, %1170, %var_7786, meta[relay.Constant][44] /* ty=Tensor[(720), int32] */, %1171, %1172, meta[relay.Constant][45] /* ty=Tensor[(1092, 2), float64] */, %var_7808, meta[relay.Constant][46] /* ty=Tensor[(22, 5), float32] */, %1173, %1174)
}

def @func_6414() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1175 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1176 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %1177 = %1175.2;
  %1178 = %1176.0;
  (%1177, %1178)
}

def @func_5378() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) {
  %1179 = @func_4835() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %1180 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1181 = %1179.0;
  %1182 = %1180.1;
  (%1181, %1182)
}

def @func_14913() -> (Tensor[(4, 8, 9), uint8],) {
  %1183 = @func_12775() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1183,)
}

def @func_667(%var_639: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) {
  %1184 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1185 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1186 = %1185.1;
  %1187 = cast(%var_639, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1188 = shape_of(%1186, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1189 = cast(%1186, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1190 = dyn.reshape(%1187, %1188, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1191 = %1184.0;
  %1192 = less(%1189, %1190) /* ty=Tensor[(4, 8, 9), bool] */;
  %1193 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1191, %1192, %1193)
}

def @func_13176(%var_13171: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), float64],) {
  %1194 = cast(%var_13171, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
  %1195 = sin(%1194) /* ty=Tensor[(3, 2, 13), float64] */;
  (%1195,)
}

def @func_13940() -> (Tensor[(4, 8, 9), uint8],) {
  %1196 = @func_6002() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1197 = %1196.1;
  (%1197,)
}

def @func_1202() -> (Tensor[(4, 8, 9), uint8],) {
  %1198 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1199 = %1198.0;
  (%1199,)
}

def @func_14125() -> (Tensor[(4, 8, 9), uint8],) {
  %1200 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1201 = %1200.0;
  (%1201,)
}

def @func_8929() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(720), int32]) {
  %1202 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1203 = cast(meta[relay.Constant][47] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1204 = reshape(%1203, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1205 = @func_8183(%1204) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) */;
  %1206 = %1202.0;
  %1207 = %1205.2;
  (%1206, %1207, meta[relay.Constant][47] /* ty=Tensor[(720), int32] */)
}

def @func_4942() -> (Tensor[(11, 10, 10), float32],) {
  %1208 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %1209 = %1208.0;
  (%1209,)
}

def @func_8523() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %1210 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %1211 = cast(meta[relay.Constant][48] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %1212 = cast(meta[relay.Constant][48] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %1213 = reshape(%1211, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %1214 = reshape(%1212, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %1215 = %1210.0;
  %1216 = @func_89(%1213, %1214) /* ty=Tensor[(4, 10, 2), uint64] */;
  (%1215, %1216, meta[relay.Constant][48] /* ty=Tensor[(80), uint64] */)
}

def @func_10357() -> Tensor[(11, 10, 10), float32] {
  %1217 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %1217.0
}

def @func_1805(%var_1790: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) {
  %1218 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1219 = cast(%var_1790, dtype="uint16") /* ty=Tensor[(4, 8, 9), uint16] */;
  %1220 = shape_of(%1218, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1221 = cast(%1218, dtype="uint16") /* ty=Tensor[(4, 8, 9), uint16] */;
  %1222 = dyn.reshape(%1219, %1220, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1223 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1224 = bitwise_and(%1221, %1222) /* ty=Tensor[(4, 8, 9), uint16] */;
  %1225 = %1223.0;
  (%1224, %1225)
}

def @func_16794(%var_16747: Tensor[(110), float32], %var_16748: Tensor[(1, 1650), float64], %var_16762: Tensor[(560), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32], Tensor[(1, 1650), float64], Tensor[(2, 4, 12), float32], Tensor[(96), float32], Tensor[(40, 2), uint64], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %1226 = @func_7446() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1227 = cast(%var_16747, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1228 = cast(%var_16748, dtype="float64") /* ty=Tensor[(1, 1650), float64] */;
  %1229 = reshape(%1227, newshape=[1, 110]) /* ty=Tensor[(1, 110), float32] */;
  %1230 = reshape(%1228, newshape=[15, 110]) /* ty=Tensor[(15, 110), float64] */;
  %1231 = @func_4629(%1229, %1230) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(15, 110), int32], Tensor[(?, 110), bool], Tensor[(?, 110), float64]) */;
  %1232 = cast(meta[relay.Constant][49] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1233 = reshape(%1232, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), float32] */;
  %1234 = cast(%var_16762, dtype="float64") /* ty=Tensor[(560), float64] */;
  %1235 = cast(meta[relay.Constant][50] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1236 = reshape(%1234, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), float64] */;
  %1237 = reshape(%1235, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1238 = @func_7045(%1236, %1237) /* ty=(Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) */;
  %1239 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1240 = @func_5027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1241 = @func_15846() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1242 = %1226.0;
  %1243 = %1231.1;
  %1244 = @func_14391(%1233) /* ty=Tensor[(2, 4, 12), float32] */;
  %1245 = %1238.7;
  %1246 = %1239.2;
  %1247 = %1240.0;
  %1248 = %1241.0;
  (%1242, %1243, %var_16747, %var_16748, %1244, meta[relay.Constant][49] /* ty=Tensor[(96), float32] */, %1245, %var_16762, meta[relay.Constant][50] /* ty=Tensor[(720), int32] */, %1246, %1247, %1248)
}

def @func_3190() -> (Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1249 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  %1250 = cast(%1249, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %1251 = cast(meta[relay.Constant][51] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1252 = reshape(%1251, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
  %1253 = @func_2194(%1252) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(1280), float64], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %1254 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1255 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1256 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1257 = tan(%1250) /* ty=Tensor[(4, 8, 9), float64] */;
  %1258 = %1253.5;
  %1259 = @func_2744() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1260 = %1254.0;
  %1261 = %1255.0;
  %1262 = %1256.0;
  (%1257, %1258, meta[relay.Constant][51] /* ty=Tensor[(1280), float64] */, %1259, %1260, %1261, %1262)
}

def @func_7659() -> (Tensor[(4, 8, 9), int8],) {
  %1263 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
  %1264 = %1263.0;
  (%1264,)
}

def @func_11923() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1265 = @func_7446() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1266 = @func_2736() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %1267 = @func_7403() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
  %1268 = %1265.0;
  %1269 = %1266.0;
  %1270 = %1267.0;
  (%1268, %1269, %1270)
}

def @func_3604() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) {
  %1271 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %1272 = %1271.0;
  %1273 = cast(%1272, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1274 = reshape(%1273, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1275 = @func_1452(%1274) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %1276 = cast(meta[relay.Constant][52] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1277 = %1275.0;
  %1278 = cast(%1277, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %1279 = reshape(%1276, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %1280 = reshape(%1278, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float32] */;
  %1281 = @func_3537(%1279, %1280) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) */;
  %1282 = %1281.1;
  (%1272, %1277, %1282, meta[relay.Constant][52] /* ty=Tensor[(594), float32] */)
}

def @func_10642() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) {
  %1283 = @func_6678() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1284 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1285 = %1283.1;
  %1286 = %1284.0;
  (%1285, %1286)
}

def @func_16197(%var_16148: Tensor[(8, 15, 6), float32]) -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(8, 15, 6), float64]) {
  %1287 = @func_6865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1288 = cast(%var_16148, dtype="float32") /* ty=Tensor[(8, 15, 6), float32] */;
  %1289 = tan(%1288) /* ty=Tensor[(8, 15, 6), float32] */;
  %1290 = cast(%1289, dtype="float64") /* ty=Tensor[(8, 15, 6), float64] */;
  %1291 = @func_11874() /* ty=Tensor[(4, 8, 9), float64] */;
  %1292 = %1287.0;
  %1293 = atanh(%1290) /* ty=Tensor[(8, 15, 6), float64] */;
  (%1291, %1292, %1293)
}

def @func_8795() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %1294 = cast(meta[relay.Constant][53] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %1295 = cast(meta[relay.Constant][53] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %1296 = reshape(%1294, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %1297 = reshape(%1295, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %1298 = @func_7219() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1299 = @func_89(%1296, %1297) /* ty=Tensor[(4, 10, 2), uint64] */;
  (%1298, %1299, meta[relay.Constant][53] /* ty=Tensor[(80), uint64] */)
}

def @func_15440() -> (Tensor[(4, 8, 9), uint64],) {
  %1300 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
  %1301 = %1300.0;
  (%1301,)
}

def @func_2094(%var_2072: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), bool],) {
  %1302 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  %1303 = cast(%var_2072, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1304 = shape_of(%1302, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1305 = cast(%1302, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1306 = dyn.reshape(%1303, %1304, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1307 = equal(%1305, %1306) /* ty=Tensor[(4, 8, 9), bool] */;
  (%1307,)
}

def @func_17050() -> Tensor[(4, 8, 9), uint64] {
  %1308 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
  %1308.0
}

def @func_813(%var_806: Tensor[(4, 8, 9), float64]) -> Tensor[(4, 8, 9), bool] {
  %1309 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1310 = %1309.1;
  %1311 = cast(%var_806, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1312 = shape_of(%1310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1313 = cast(%1310, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1313, %1314) /* ty=Tensor[(4, 8, 9), bool] */
}

def @func_17035() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) {
  %1315 = @func_7659() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1316 = %1315.0;
  %1317 = @func_10246() /* ty=Tensor[(4, 8, 9), float64] */;
  (%1316, %1317)
}

def @func_9552() -> Tensor[(4, 8, 9), uint8] {
  %1318 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %1318.1
}

def @func_9638() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1319 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1320 = @func_5726() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1321 = %1319.3;
  %1322 = %1320.0;
  (%1321, %1322)
}

def @func_253() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1323 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1324 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1325 = %1323.0;
  (%1324, %1325)
}

def @func_12097() -> (Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1326 = @func_10568() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) */;
  %1327 = @func_5726() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1328 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1329 = %1326.7;
  %1330 = %1327.0;
  %1331 = %1328.1;
  (%1329, %1330, %1331)
}

def @func_5111(%var_5072: Tensor[(2, 6, 8), float32]) -> (Tensor[(2, 6, 8), float32],) {
  %1332 = cast(%var_5072, dtype="float32") /* ty=Tensor[(2, 6, 8), float32] */;
  %1333 = cos(%1332) /* ty=Tensor[(2, 6, 8), float32] */;
  %1334 = cast(%1333, dtype="float32") /* ty=Tensor[(2, 6, 8), float32] */;
  %1335 = sigmoid(%1334) /* ty=Tensor[(2, 6, 8), float32] */;
  (%1335,)
}

def @func_5027() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1336 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1337 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1338 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1339 = %1336.0;
  (%1337, %1338, %1339)
}

def @func_5226() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1340 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1341 = %1340.0;
  %1342 = cast(%1341, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %1343 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1344 = exp(%1342) /* ty=Tensor[(4, 8, 9), float32] */;
  %1345 = %1343.0;
  (%1344, %1345)
}

def @func_12024() -> (Tensor[(10, 13, 12), float32],) {
  %1346 = cast(meta[relay.Constant][54] /* ty=Tensor[(10, 13, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
  %1347 = cos(%1346) /* ty=Tensor[(10, 13, 12), float32] */;
  (%1347,)
}

def @func_7605(%var_7584: Tensor[(48), int32], %var_7585: Tensor[(4, 180), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) {
  %1348 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1349 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1350 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1351 = @func_6776() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %1352 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1353 = cast(%var_7584, dtype="int32") /* ty=Tensor[(48), int32] */;
  %1354 = cast(%var_7585, dtype="int32") /* ty=Tensor[(4, 180), int32] */;
  %1355 = reshape(%1353, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), int32] */;
  %1356 = reshape(%1354, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), int32] */;
  %1357 = %1348.0;
  %1358 = %1349.0;
  %1359 = %1350.0;
  %1360 = @func_362() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1361 = %1351.0;
  %1362 = %1352.0;
  %1363 = @func_6336(%1355, %1356) /* ty=Tensor[(15, 6, 8), int32] */;
  (%1357, %1358, %1359, %1360, %1361, %1362, %1363, %var_7584, %var_7585)
}

def @func_7045(%var_6987: Tensor[(8, 7, 10), float64], %var_6995: Tensor[(720), int32]) -> (Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) {
  %1364 = cast(meta[relay.Constant][55] /* ty=Tensor[(48, 1), int32] */, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
  %1365 = cast(%var_6995, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1366 = reshape(%1364, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), int32] */;
  %1367 = reshape(%1365, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), int32] */;
  %1368 = cast(%var_6987, dtype="float64") /* ty=Tensor[(8, 7, 10), float64] */;
  %1369 = cosh(%1368) /* ty=Tensor[(8, 7, 10), float64] */;
  %1370 = cast(%1369, dtype="float64") /* ty=Tensor[(8, 7, 10), float64] */;
  %1371 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1372 = cast(meta[relay.Constant][56] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
  %1373 = cast(meta[relay.Constant][57] /* ty=Tensor[(40, 2), uint64] */, dtype="uint64") /* ty=Tensor[(40, 2), uint64] */;
  %1374 = reshape(%1372, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %1375 = reshape(%1373, newshape=[80]) /* ty=Tensor[(80), uint64] */;
  %1376 = @func_1999(%1374, %1375) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1377 = @func_6336(%1366, %1367) /* ty=Tensor[(15, 6, 8), int32] */;
  %1378 = atanh(%1370) /* ty=Tensor[(8, 7, 10), float64] */;
  %1379 = %1371.0;
  %1380 = %1376.8;
  (%1377, meta[relay.Constant][55] /* ty=Tensor[(48, 1), int32] */, %var_6995, %1378, %1379, %1380, meta[relay.Constant][56] /* ty=Tensor[(6, 20), float32] */, meta[relay.Constant][57] /* ty=Tensor[(40, 2), uint64] */)
}

def @func_2865() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1381 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1382 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1383 = %1381.0;
  %1384 = %1382.2;
  (%1383, %1384)
}

def @func_1171() -> (Tensor[(11, 10, 10), float32],) {
  %1385 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %1386 = %1385.0;
  %1387 = cast(%1386, dtype="float32") /* ty=Tensor[(11, 10, 10), float32] */;
  %1388 = tan(%1387) /* ty=Tensor[(11, 10, 10), float32] */;
  (%1388,)
}

def @func_5981() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1389 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1390 = %1389.0;
  %1391 = cast(%1390, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1392 = reshape(%1391, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1393 = @func_3001(%1392) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1394 = @func_5232() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1395 = %1393.1;
  %1396 = %1394.0;
  (%1390, %1395, %1396)
}

def @func_744() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %1397 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %1398 = %1397.1;
  %1399 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1400 = %1399.1;
  %1401 = cast(%1400, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %1402 = shape_of(%1398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1403 = cast(%1398, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %1404 = dyn.reshape(%1401, %1402, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %1405 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1406 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1407 = cast(%1400, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %1408 = shape_of(%1398, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1409 = cast(%1398, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %1410 = dyn.reshape(%1407, %1408, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %1411 = multiply(%1403, %1404) /* ty=Tensor[(4, 8, 9), int8] */;
  %1412 = %1405.1;
  %1413 = %1406.0;
  %1414 = floor_divide(%1409, %1410) /* ty=Tensor[(4, 8, 9), float32] */;
  (%1411, %1412, %1413, %1414)
}

def @func_16884() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %1415 = @func_10357() /* ty=Tensor[(11, 10, 10), float32] */;
  %1416 = @func_9769() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1415, %1416)
}

def @func_4148() -> (Tensor[(4, 8, 9), int8],) {
  %1417 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %1418 = %1417.2;
  (%1418,)
}

def @func_2194(%var_2164: Tensor[(1280), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(1280), float64], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %1419 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1420 = cast(%var_2164, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %1421 = reshape(%1420, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %1422 = @func_840(%1421) /* ty=(Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) */;
  %1423 = cast(meta[relay.Constant][58] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %1424 = cast(meta[relay.Constant][58] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %1425 = reshape(%1423, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %1426 = reshape(%1424, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %1427 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1428 = %1419.1;
  %1429 = %1422.1;
  %1430 = @func_89(%1425, %1426) /* ty=Tensor[(4, 10, 2), uint64] */;
  (%1427, %1428, %1429, %var_2164, %1430, meta[relay.Constant][58] /* ty=Tensor[(80), uint64] */)
}

def @func_5538() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %1431 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1432 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1433 = @func_3959() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %1434 = %1431.1;
  %1435 = %1432.0;
  %1436 = %1433.0;
  (%1434, %1435, %1436)
}

def @func_6025() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1437 = @func_5603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1438 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1439 = %1437.0;
  %1440 = %1438.0;
  (%1439, %1440)
}

def @func_13445() -> Tensor[(11, 10, 10), float32] {
  %1441 = @func_12731() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
  %1441.1
}

def @func_14065() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %1442 = @func_6980() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1443 = %1442.1;
  %1444 = @func_12839() /* ty=Tensor[(4, 8, 9), float32] */;
  (%1443, %1444)
}

def @func_8882() -> Tensor[(4, 8, 9), uint8] {
  %1445 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1445.0
}

def @func_15883() -> (Tensor[(4, 8, 9), float64], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %1446 = @func_7870() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %1447 = %1446.0;
  %1448 = @func_13445() /* ty=Tensor[(11, 10, 10), float32] */;
  %1449 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1447, %1448, %1449)
}

def @func_14966() -> Tensor[(4, 8, 9), uint8] {
  @func_7953() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_6361(%var_6351: Tensor[(12, 1, 13), float64]) -> (Tensor[(12, 1, 13), float64],) {
  %1450 = cast(%var_6351, dtype="float64") /* ty=Tensor[(12, 1, 13), float64] */;
  %1451 = exp(%1450) /* ty=Tensor[(12, 1, 13), float64] */;
  (%1451,)
}

def @func_2465() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %1452 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1453 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1454 = %1452.0;
  %1455 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1456 = %1453.0;
  (%1454, %1455, %1456)
}

def @func_10568() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) {
  %1457 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1458 = %1457.0;
  %1459 = cast(%1458, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1460 = reshape(%1459, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1461 = @func_1452(%1460) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %1462 = cast(meta[relay.Constant][59] /* ty=Tensor[(66, 9), float32] */, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %1463 = cast(%1458, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %1464 = reshape(%1462, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %1465 = reshape(%1463, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float32] */;
  %1466 = @func_3537(%1464, %1465) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) */;
  %1467 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1468 = @func_5485() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), bool]) */;
  %1469 = cast(meta[relay.Constant][60] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %1470 = cast(meta[relay.Constant][60] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %1471 = reshape(%1469, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), int16] */;
  %1472 = reshape(%1470, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), int16] */;
  %1473 = %1461.0;
  %1474 = %1466.2;
  %1475 = %1467.0;
  %1476 = %1468.0;
  %1477 = @func_3326(%1471, %1472) /* ty=Tensor[(6, 2, 13), int16] */;
  (%1458, %1473, %1474, meta[relay.Constant][59] /* ty=Tensor[(66, 9), float32] */, %1475, %1476, %1477, meta[relay.Constant][60] /* ty=Tensor[(156), int16] */)
}

def @func_15917() -> Tensor[(4, 8, 9), uint8] {
  @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_9303() -> (Tensor[(4, 8, 9), uint8],) {
  %1478 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %1479 = %1478.0;
  (%1479,)
}

def @func_10049() -> Tensor[(4, 8, 9), float64] {
  %1480 = @func_8314() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %1480.0
}

def @func_16275() -> (Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(11, 13, 9), bool]) {
  %1481 = @func_7213() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %1482 = cast(meta[relay.Constant][61] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1483 = reshape(%1482, newshape=[720]) /* ty=Tensor[(720), int32] */;
  %1484 = @func_8183(%1483) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) */;
  %1485 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
  %1486 = atanh(%1485) /* ty=Tensor[(11, 13, 9), float64] */;
  %1487 = cast(meta[relay.Constant][62] /* ty=Tensor[(11, 13, 9), float64] */, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
  %1488 = shape_of(%1486, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1489 = cast(%1486, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
  %1490 = dyn.reshape(%1487, %1488, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1491 = %1481.2;
  %1492 = %1484.0;
  %1493 = less_equal(%1489, %1490) /* ty=Tensor[(11, 13, 9), bool] */;
  (%1491, %1492, meta[relay.Constant][61] /* ty=Tensor[(720), int32] */, %1493)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_13332() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(10, 13, 12), float32]) {
  %0 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %3 = reshape(%1, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %4 = reshape(%2, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
  %5 = @func_7605(%3, %4) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
  %6 = @func_12024() /* ty=(Tensor[(10, 13, 12), float32],) */;
  %7 = %0.0;
  %8 = %5.1;
  %9 = %6.0;
  (%7, %8, meta[relay.Constant][0] /* ty=Tensor[(48), int32] */, meta[relay.Constant][1] /* ty=Tensor[(720), int32] */, %9)
}

def @func_16530() -> Tensor[(4, 8, 9), uint8] {
  %11 = fn () -> Tensor[(4, 8, 9), uint8] {
    %10 = @func_8913() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %10.0
  };
  %11() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_5639() -> Tensor[(4, 8, 9), uint8] {
  @func_4685() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_3721(%var_3706: Tensor[(10, 15, 12), uint16], %var_3707: Tensor[(10, 15, 12), uint16]) -> (Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) {
  %12 = cast(%var_3707, dtype="bool") /* ty=Tensor[(10, 15, 12), bool] */;
  %13 = shape_of(%var_3706, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(%var_3706, dtype="bool") /* ty=Tensor[(10, 15, 12), bool] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %16 = cast(meta[relay.Constant][2] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
  %17 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 20), uint64] */, dtype="uint64") /* ty=Tensor[(4, 20), uint64] */;
  %18 = reshape(%16, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %19 = reshape(%17, newshape=[80]) /* ty=Tensor[(80), uint64] */;
  %20 = @func_1999(%18, %19) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %21 = less(%14, %15) /* ty=Tensor[(10, 15, 12), bool] */;
  %22 = %20.7;
  (%21, %22, meta[relay.Constant][2] /* ty=Tensor[(120), float32] */, meta[relay.Constant][3] /* ty=Tensor[(4, 20), uint64] */)
}

def @func_2708(%var_2705: Tensor[(12, 14, 13), float64], %var_2706: Tensor[(120), float32], %var_2707: Tensor[(110), float32]) -> (Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) {
  %48 = fn (%var_2663: Tensor[(12, 14, 13), float64], %var_2670: Tensor[(120), float32], %var_2685: Tensor[(110), float32]) -> (Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) {
    %23 = cast(%var_2663, dtype="float64") /* ty=Tensor[(12, 14, 13), float64] */;
    %24 = sqrt(%23) /* ty=Tensor[(12, 14, 13), float64] */;
    %25 = cast(%var_2663, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
    %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
    %27 = cast(%24, dtype="bool") /* ty=Tensor[(12, 14, 13), bool] */;
    %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %29 = cast(%var_2670, dtype="float32") /* ty=Tensor[(120), float32] */;
    %30 = cast(meta[relay.Constant][4] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
    %31 = reshape(%29, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), float32] */;
    %32 = reshape(%30, newshape=[1, 80]) /* ty=Tensor[(1, 80), uint64] */;
    %33 = @func_1889(%31, %32) /* ty=(Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) */;
    %34 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
    %35 = %34.1;
    %36 = cast(%35, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %37 = reshape(%36, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %38 = @func_1452(%37) /* ty=(Tensor[(4, 8, 9), bool],) */;
    %39 = cast(%var_2685, dtype="float32") /* ty=Tensor[(110), float32] */;
    %40 = reshape(%39, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
    %41 = @func_2352(%40) /* ty=Tensor[(11, 10, 1), float32] */;
    %42 = cast(meta[relay.Constant][4] /* ty=Tensor[(80), uint64] */, dtype="int32") /* ty=Tensor[(80), int32] */;
    %43 = cast(%41, dtype="int32") /* ty=Tensor[(11, 10, 1), int32] */;
    %44 = greater(%27, %28) /* ty=Tensor[(12, 14, 13), bool] */;
    %45 = %33.0;
    %46 = %38.0;
    %47 = bitwise_or(%42, %43) /* ty=Tensor[(11, 10, 80), int32] */;
    (%44, %45, %var_2670, %35, %46, %var_2685, %47)
  };
  %48(%var_2705, %var_2706, %var_2707) /* ty=(Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) */
}

def @func_14067() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  @func_14065() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */
}

def @func_14863() -> Tensor[(4, 8, 9), int8] {
  @func_14861() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_11747() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32, Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float64]) {
  %49 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %50 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %51 = cast(-3.08499f /* ty=float32 */, dtype="float32") /* ty=float32 */;
  %52 = reshape(%51, newshape=[]) /* ty=float32 */;
  %53 = @func_9797(%52) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32) */;
  %54 = @func_9638() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %55 = %49.1;
  %56 = @func_10049() /* ty=Tensor[(4, 8, 9), float64] */;
  %57 = %50.1;
  %58 = %53.1;
  %59 = %54.1;
  %60 = @func_10049() /* ty=Tensor[(4, 8, 9), float64] */;
  %61 = @func_10246() /* ty=Tensor[(4, 8, 9), float64] */;
  (%55, %56, %57, %58, -3.08499f /* ty=float32 */, %59, %60, %61)
}

def @func_9640() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_9638() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_3026() -> (Tensor[(4, 8, 9), uint8],) {
  %64 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %62 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
    %63 = %62.2;
    (%63,)
  };
  %64() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_9638() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %65 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %66 = @func_5726() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %67 = %65.3;
  %68 = %66.0;
  (%67, %68)
}

def @func_9334() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64]) {
  %69 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %70 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %71 = @func_5981() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %72 = %69.0;
  %73 = %70.0;
  %74 = %71.0;
  (%72, %73, %74)
}

def @func_6811(%var_6810: float32) -> Tensor[(1, 14), float32] {
  %77 = fn (%var_6796: float32) -> Tensor[(1, 14), float32] {
    %75 = cast(%var_6796, dtype="float32") /* ty=float32 */;
    %76 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 14), float32] */, dtype="float32") /* ty=Tensor[(1, 14), float32] */;
    mod(%75, %76) /* ty=Tensor[(1, 14), float32] */
  };
  %77(%var_6810) /* ty=Tensor[(1, 14), float32] */
}

def @func_9770() -> Tensor[(4, 8, 9), uint8] {
  %79 = fn () -> Tensor[(4, 8, 9), uint8] {
    %78 = @func_8913() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %78.0
  };
  %79() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_2097(%var_2095: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), bool],) {
  @func_2094(%var_2095) /* ty=(Tensor[(4, 8, 9), bool],) */
}

def @func_11111() -> Tensor[(4, 8, 9), uint8] {
  @func_11109() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_16606(%var_16603: Tensor[(8, 1, 14), int64], %var_16604: Tensor[(8, 6, 14), int64], %var_16605: Tensor[(2340), uint16]) -> (Tensor[(8, 6, 14), int64], Tensor[(15, 12, 13), uint16], Tensor[(2340), uint16], Tensor[(4, 8, 9), uint8]) {
  %88 = fn (%var_16558: Tensor[(8, 1, 14), int64], %var_16559: Tensor[(8, 6, 14), int64], %var_16568: Tensor[(2340), uint16]) -> (Tensor[(8, 6, 14), int64], Tensor[(15, 12, 13), uint16], Tensor[(2340), uint16], Tensor[(4, 8, 9), uint8]) {
    %80 = cast(%var_16558, dtype="int64") /* ty=Tensor[(8, 1, 14), int64] */;
    %81 = cast(%var_16559, dtype="int64") /* ty=Tensor[(8, 6, 14), int64] */;
    %82 = cast(%var_16568, dtype="uint16") /* ty=Tensor[(2340), uint16] */;
    %83 = reshape(%82, newshape=[15, 12, 13]) /* ty=Tensor[(15, 12, 13), uint16] */;
    %84 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %85 = bitwise_or(%80, %81) /* ty=Tensor[(8, 6, 14), int64] */;
    %86 = @func_14959(%83) /* ty=Tensor[(15, 12, 13), uint16] */;
    %87 = %84.0;
    (%85, %86, %var_16568, %87)
  };
  %88(%var_16603, %var_16604, %var_16605) /* ty=(Tensor[(8, 6, 14), int64], Tensor[(15, 12, 13), uint16], Tensor[(2340), uint16], Tensor[(4, 8, 9), uint8]) */
}

def @func_15635() -> (Tensor[(13, 15, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(2184), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8]) {
  %103 = fn () -> (Tensor[(13, 15, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(2184), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8]) {
    %89 = cast(meta[relay.Constant][6] /* ty=Tensor[(13, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(13, 15, 9), float32] */;
    %90 = @func_12097() /* ty=(Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %91 = cast(meta[relay.Constant][7] /* ty=Tensor[(2184), float64] */, dtype="float64") /* ty=Tensor[(2184), float64] */;
    %92 = cast(meta[relay.Constant][8] /* ty=Tensor[(120), float32] */, dtype="float32") /* ty=Tensor[(120), float32] */;
    %93 = cast(meta[relay.Constant][9] /* ty=Tensor[(22, 5), float32] */, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
    %94 = reshape(%91, newshape=[12, 14, 13]) /* ty=Tensor[(12, 14, 13), float64] */;
    %95 = reshape(%92, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %96 = reshape(%93, newshape=[110]) /* ty=Tensor[(110), float32] */;
    %97 = @func_2704(%94, %95, %96) /* ty=(Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) */;
    %98 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %99 = asinh(%89) /* ty=Tensor[(13, 15, 9), float32] */;
    %100 = %90.1;
    %101 = %97.3;
    %102 = %98.0;
    (%99, %100, %101, meta[relay.Constant][7] /* ty=Tensor[(2184), float64] */, meta[relay.Constant][8] /* ty=Tensor[(120), float32] */, meta[relay.Constant][9] /* ty=Tensor[(22, 5), float32] */, %102)
  };
  %103() /* ty=(Tensor[(13, 15, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(2184), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_16617() -> Tensor[(4, 8, 9), float32] {
  %105 = fn () -> Tensor[(4, 8, 9), float32] {
    %104 = @func_2736() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %104.0
  };
  %105() /* ty=Tensor[(4, 8, 9), float32] */
}

def @func_10744() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %126 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %106 = @func_9638() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %107 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %108 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
    %109 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %110 = cast(meta[relay.Constant][10] /* ty=Tensor[(560), float64] */, dtype="float64") /* ty=Tensor[(560), float64] */;
    %111 = cast(meta[relay.Constant][11] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %112 = reshape(%110, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), float64] */;
    %113 = reshape(%111, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %114 = @func_7045(%112, %113) /* ty=(Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) */;
    %115 = @func_10422() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) */;
    %116 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %117 = %106.1;
    %118 = %107.0;
    %119 = %108.0;
    %120 = %109.3;
    %121 = %114.0;
    %122 = %115.0;
    %123 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
    %124 = @func_8882() /* ty=Tensor[(4, 8, 9), uint8] */;
    %125 = %116.0;
    (%117, %118, %119, %120, %121, meta[relay.Constant][10] /* ty=Tensor[(560), float64] */, meta[relay.Constant][11] /* ty=Tensor[(720), int32] */, %122, %123, %124, %125)
  };
  %126() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_387() -> (Tensor[(4, 8, 9), uint8],) {
  %127 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%127,)
}

def @func_1454(%var_1453: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), bool],) {
  %135 = fn (%var_1444: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), bool],) {
    %128 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %129 = %128.0;
    %130 = cast(%var_1444, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
    %131 = shape_of(%129, dtype="int32") /* ty=Tensor[(3), int32] */;
    %132 = cast(%129, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
    %133 = dyn.reshape(%130, %131, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %134 = less_equal(%132, %133) /* ty=Tensor[(4, 8, 9), bool] */;
    (%134,)
  };
  %135(%var_1453) /* ty=(Tensor[(4, 8, 9), bool],) */
}

def @func_13396() -> (Tensor[(4, 8, 9), uint8],) {
  %136 = @func_10288() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %137 = %136.2;
  (%137,)
}

def @func_12840() -> Tensor[(4, 8, 9), float32] {
  %139 = fn () -> Tensor[(4, 8, 9), float32] {
    %138 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %138.0
  };
  %139() /* ty=Tensor[(4, 8, 9), float32] */
}

def @func_607() -> Tensor[(4, 8, 9), uint8] {
  %140 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %140.0
}

def @func_3606() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) {
  @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */
}

def @func_12819() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %147 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %141 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %142 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
    %143 = @func_11923() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %144 = %141.0;
    %145 = %142.1;
    %146 = %143.0;
    (%144, %145, %146)
  };
  %147() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_1384() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) {
  %148 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %149 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %150 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %151 = %150.0;
  %152 = cast(%151, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %153 = %148.0;
  %154 = %149.3;
  %155 = sin(%152) /* ty=Tensor[(4, 8, 9), float64] */;
  (%153, %154, %155)
}

def @func_15241() -> (Tensor[(11, 10, 10), float32],) {
  %158 = fn () -> (Tensor[(11, 10, 10), float32],) {
    %156 = @func_10094() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) */;
    %157 = %156.0;
    (%157,)
  };
  %158() /* ty=(Tensor[(11, 10, 10), float32],) */
}

def @func_16088() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 13, 16), float32], Tensor[(1248), float32]) {
  %159 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %160 = @func_12367() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %161 = cast(meta[relay.Constant][12] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %162 = cast(meta[relay.Constant][12] /* ty=Tensor[(1248), float32] */, dtype="float32") /* ty=Tensor[(1248), float32] */;
  %163 = reshape(%161, newshape=[6, 13, 16]) /* ty=Tensor[(6, 13, 16), float32] */;
  %164 = reshape(%162, newshape=[6, 13, 16]) /* ty=Tensor[(6, 13, 16), float32] */;
  %165 = %159.0;
  %166 = %160.0;
  %167 = @func_13960(%163, %164) /* ty=Tensor[(6, 13, 16), float32] */;
  (%165, %166, %167, meta[relay.Constant][12] /* ty=Tensor[(1248), float32] */)
}

def @func_17035() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) {
  %168 = @func_7659() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %169 = %168.0;
  %170 = @func_10246() /* ty=Tensor[(4, 8, 9), float64] */;
  (%169, %170)
}

def @func_5870() -> (Tensor[(4, 8, 9), int8],) {
  @func_5868() /* ty=(Tensor[(4, 8, 9), int8],) */
}

def @func_7263() -> (Tensor[(4, 8, 9), int8],) {
  %173 = fn () -> (Tensor[(4, 8, 9), int8],) {
    %171 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %172 = %171.0;
    (%172,)
  };
  %173() /* ty=(Tensor[(4, 8, 9), int8],) */
}

def @func_254() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %177 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %174 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %175 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
    %176 = %174.0;
    (%175, %176)
  };
  %177() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_4005(%var_4003: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), bool], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8]) {
  @func_4002(%var_4003) /* ty=(Tensor[(4, 8, 9), bool], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8]) */
}

def @func_14968() -> Tensor[(4, 8, 9), uint8] {
  @func_14966() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_10570() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) {
  @func_10568() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) */
}

def @func_2496() -> (Tensor[(4, 8, 9), uint8],) {
  %180 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %178 = @func_782() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %179 = %178.1;
    (%179,)
  };
  %180() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_16552() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %185 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %181 = @func_13729() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %182 = @func_12097() /* ty=(Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %183 = %181.0;
    %184 = %182.1;
    (%183, %184)
  };
  %185() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_17173() -> Tensor[(4, 8, 9), int8] {
  @func_17171() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_14574() -> Tensor[(4, 8, 9), uint8] {
  %187 = fn () -> Tensor[(4, 8, 9), uint8] {
    %186 = @func_6980() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %186.0
  };
  %187() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_1898() -> Tensor[(4, 8, 9), uint8] {
  %188 = fn () -> Tensor[(4, 8, 9), uint8] {
    @func_362() /* ty=Tensor[(4, 8, 9), uint8] */
  };
  %188() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_3289() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) {
  @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */
}

def @func_13963(%var_13961: Tensor[(6, 13, 16), float32], %var_13962: Tensor[(6, 13, 16), float32]) -> Tensor[(6, 13, 16), float32] {
  %193 = fn (%var_13945: Tensor[(6, 13, 16), float32], %var_13946: Tensor[(6, 13, 16), float32]) -> Tensor[(6, 13, 16), float32] {
    %189 = cast(%var_13946, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
    %190 = shape_of(%var_13945, dtype="int32") /* ty=Tensor[(3), int32] */;
    %191 = cast(%var_13945, dtype="float32") /* ty=Tensor[(6, 13, 16), float32] */;
    %192 = dyn.reshape(%189, %190, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    mod(%191, %192) /* ty=Tensor[(6, 13, 16), float32] */
  };
  %193(%var_13961, %var_13962) /* ty=Tensor[(6, 13, 16), float32] */
}

def @func_2841() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %194 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %195 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  %196 = @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */;
  %197 = %194.1;
  %198 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%195, %196, %197, %198)
}

def @func_2002(%var_2000: Tensor[(120), float32], %var_2001: Tensor[(80), uint64]) -> (Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %220 = fn (%var_1929: Tensor[(120), float32], %var_1930: Tensor[(80), uint64]) -> (Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %199 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
    %200 = cast(%var_1929, dtype="float32") /* ty=Tensor[(120), float32] */;
    %201 = cast(%var_1930, dtype="uint64") /* ty=Tensor[(80), uint64] */;
    %202 = reshape(%200, newshape=[2, 15, 4]) /* ty=Tensor[(2, 15, 4), float32] */;
    %203 = reshape(%201, newshape=[1, 80]) /* ty=Tensor[(1, 80), uint64] */;
    %204 = @func_1889(%202, %203) /* ty=(Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) */;
    %205 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %206 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
    %207 = %199.0;
    %208 = cast(%207, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %209 = reshape(%208, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %210 = @func_1805(%209) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
    %211 = %206.3;
    %212 = cast(%211, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %213 = reshape(%212, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %214 = @func_1805(%213) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
    %215 = %204.0;
    %216 = %205.0;
    %217 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
    %218 = %210.1;
    %219 = %214.1;
    (%207, %215, %var_1929, %var_1930, %216, %217, %211, %218, %219)
  };
  %220(%var_2000, %var_2001) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_6563() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %225 = fn () -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %221 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
    %222 = @func_6414() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %223 = %221.1;
    %224 = %222.0;
    (%223, %224)
  };
  %225() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_7690(%var_7688: Tensor[(12, 7, 16), int8], %var_7689: Tensor[(12, 7, 16), int8]) -> (Tensor[(12, 7, 16), int8],) {
  %231 = fn (%var_7680: Tensor[(12, 7, 16), int8], %var_7681: Tensor[(12, 7, 16), int8]) -> (Tensor[(12, 7, 16), int8],) {
    %226 = cast(%var_7681, dtype="int8") /* ty=Tensor[(12, 7, 16), int8] */;
    %227 = shape_of(%var_7680, dtype="int32") /* ty=Tensor[(3), int32] */;
    %228 = cast(%var_7680, dtype="int8") /* ty=Tensor[(12, 7, 16), int8] */;
    %229 = dyn.reshape(%226, %227, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %230 = maximum(%228, %229) /* ty=Tensor[(12, 7, 16), int8] */;
    (%230,)
  };
  %231(%var_7688, %var_7689) /* ty=(Tensor[(12, 7, 16), int8],) */
}

def @func_8914() -> (Tensor[(4, 8, 9), uint8],) {
  %234 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %232 = @func_8749() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %233 = %232.0;
    (%233,)
  };
  %234() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_2324() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_13505() -> (Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) {
  @func_13503() /* ty=(Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) */
}

def @func_8315() -> (Tensor[(4, 8, 9), float64],) {
  %237 = fn () -> (Tensor[(4, 8, 9), float64],) {
    %235 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %236 = %235.0;
    (%236,)
  };
  %237() /* ty=(Tensor[(4, 8, 9), float64],) */
}

def @func_1511() -> (Tensor[(4, 8, 9), float32],) {
  %240 = fn () -> (Tensor[(4, 8, 9), float32],) {
    %238 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
    %239 = %238.3;
    (%239,)
  };
  %240() /* ty=(Tensor[(4, 8, 9), float32],) */
}

def @func_7447() -> (Tensor[(4, 8, 9), uint8],) {
  %242 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %241 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%241,)
  };
  %242() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_362() -> Tensor[(4, 8, 9), uint8] {
  %243 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %243.0
}

def @func_411() -> (Tensor[(4, 8, 9), uint8],) {
  %244 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %245 = %244.0;
  (%245,)
}

def @func_16823() -> Tensor[(4, 8, 9), int8] {
  @func_9358() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_13121() -> Tensor[(4, 8, 9), uint8] {
  %246 = @func_9451() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) */;
  %246.3
}

def @func_14804() -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %251 = fn () -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
    %247 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
    %248 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %249 = %247.1;
    %250 = %248.0;
    (%249, %250)
  };
  %251() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */
}

def @func_3494() -> (Tensor[(4, 8, 9), uint8],) {
  @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_6414() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %252 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %253 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %254 = %252.2;
  %255 = %253.0;
  (%254, %255)
}

def @func_6981() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %260 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %256 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %257 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %258 = %256.0;
    %259 = %257.0;
    (%258, %259)
  };
  %260() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_8959() -> (Tensor[(4, 8, 9), bool],) {
  %263 = fn () -> (Tensor[(4, 8, 9), bool],) {
    %261 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
    %262 = %261.1;
    (%262,)
  };
  %263() /* ty=(Tensor[(4, 8, 9), bool],) */
}

def @func_921() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_3931() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) {
  %277 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) {
    %264 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %265 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %266 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %267 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %268 = %264.0;
    %269 = cast(%268, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %270 = reshape(%269, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %271 = @func_1805(%270) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
    %272 = %265.0;
    %273 = %266.0;
    %274 = %267.5;
    %275 = %271.0;
    %276 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%268, %272, %273, %274, %275, %276)
  };
  %277() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */
}

def @func_16199(%var_16198: Tensor[(8, 15, 6), float32]) -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(8, 15, 6), float64]) {
  %285 = fn (%var_16148: Tensor[(8, 15, 6), float32]) -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(8, 15, 6), float64]) {
    %278 = @func_6865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %279 = cast(%var_16148, dtype="float32") /* ty=Tensor[(8, 15, 6), float32] */;
    %280 = tan(%279) /* ty=Tensor[(8, 15, 6), float32] */;
    %281 = cast(%280, dtype="float64") /* ty=Tensor[(8, 15, 6), float64] */;
    %282 = @func_11874() /* ty=Tensor[(4, 8, 9), float64] */;
    %283 = %278.0;
    %284 = atanh(%281) /* ty=Tensor[(8, 15, 6), float64] */;
    (%282, %283, %284)
  };
  %285(%var_16198) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(8, 15, 6), float64]) */
}

def @func_10013() -> (Tensor[(4, 8, 9), uint8],) {
  @func_10011() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_1502() -> Tensor[(4, 8, 9), uint8] {
  %286 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %286.0
}

def @func_14474() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %290 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %287 = @func_8400() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %288 = %287.0;
    %289 = @func_6944() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%288, %289)
  };
  %290() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_7939() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %291 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %292 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %293 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %294 = %291.3;
  %295 = %292.1;
  %296 = %293.0;
  %297 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%294, %295, %296, %297)
}

def @func_13246(%var_13244: Tensor[(60), float64], %var_13245: Tensor[(420), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(7, 12, 5), bool], float64, Tensor[(60), float64], Tensor[(420), float64]) {
  %310 = fn (%var_13232: Tensor[(60), float64], %var_13233: Tensor[(420), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(7, 12, 5), bool], float64, Tensor[(60), float64], Tensor[(420), float64]) {
    %298 = @func_12367() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %299 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %300 = cast(-5.36557f64 /* ty=float64 */, dtype="float64") /* ty=float64 */;
    %301 = cast(%var_13232, dtype="float64") /* ty=Tensor[(60), float64] */;
    %302 = cast(%var_13233, dtype="float64") /* ty=Tensor[(420), float64] */;
    %303 = reshape(%300, newshape=[]) /* ty=float64 */;
    %304 = reshape(%301, newshape=[1, 12, 5]) /* ty=Tensor[(1, 12, 5), float64] */;
    %305 = reshape(%302, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float64] */;
    %306 = @func_11849(%303, %304, %305) /* ty=(Tensor[(7, 12, 5), bool],) */;
    %307 = %298.0;
    %308 = %299.0;
    %309 = %306.0;
    (%307, %308, %309, -5.36557f64 /* ty=float64 */, %var_13232, %var_13233)
  };
  %310(%var_13244, %var_13245) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(7, 12, 5), bool], float64, Tensor[(60), float64], Tensor[(420), float64]) */
}

def @func_15347() -> Tensor[(4, 8, 9), bool] {
  @func_15345() /* ty=Tensor[(4, 8, 9), bool] */
}

def @func_413() -> (Tensor[(4, 8, 9), uint8],) {
  @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_3191() -> (Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %325 = fn () -> (Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %311 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
    %312 = cast(%311, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
    %313 = cast(meta[relay.Constant][13] /* ty=Tensor[(1280), float64] */, dtype="float64") /* ty=Tensor[(1280), float64] */;
    %314 = reshape(%313, newshape=[1280]) /* ty=Tensor[(1280), float64] */;
    %315 = @func_2194(%314) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(1280), float64], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
    %316 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
    %317 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %318 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %319 = tan(%312) /* ty=Tensor[(4, 8, 9), float64] */;
    %320 = %315.5;
    %321 = @func_2744() /* ty=Tensor[(4, 8, 9), uint8] */;
    %322 = %316.0;
    %323 = %317.0;
    %324 = %318.0;
    (%319, %320, meta[relay.Constant][13] /* ty=Tensor[(1280), float64] */, %321, %322, %323, %324)
  };
  %325() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_11853(%var_11850: float64, %var_11851: Tensor[(1, 12, 5), float64], %var_11852: Tensor[(7, 12, 5), float64]) -> (Tensor[(7, 12, 5), bool],) {
  %339 = fn (%var_11819: float64, %var_11820: Tensor[(1, 12, 5), float64], %var_11843: Tensor[(7, 12, 5), float64]) -> (Tensor[(7, 12, 5), bool],) {
    %326 = cast(%var_11819, dtype="float64") /* ty=float64 */;
    %327 = cast(%var_11820, dtype="float64") /* ty=Tensor[(1, 12, 5), float64] */;
    %328 = divide(%326, %327) /* ty=Tensor[(1, 12, 5), float64] */;
    %329 = cast(%328, dtype="int8") /* ty=Tensor[(1, 12, 5), int8] */;
    %330 = shape_of(%var_11820, dtype="int32") /* ty=Tensor[(3), int32] */;
    %331 = cast(%var_11820, dtype="int8") /* ty=Tensor[(1, 12, 5), int8] */;
    %332 = dyn.reshape(%329, %330, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %333 = left_shift(%331, %332) /* ty=Tensor[(?, 12, 5), int8] */;
    %334 = cast(%333, dtype="float64") /* ty=Tensor[(?, 12, 5), float64] */;
    %335 = log10(%334) /* ty=Tensor[(?, 12, 5), float64] */;
    %336 = cast(%335, dtype="bool") /* ty=Tensor[(?, 12, 5), bool] */;
    %337 = cast(%var_11843, dtype="bool") /* ty=Tensor[(7, 12, 5), bool] */;
    %338 = logical_and(%336, %337) /* ty=Tensor[(7, 12, 5), bool] */;
    (%338,)
  };
  %339(%var_11850, %var_11851, %var_11852) /* ty=(Tensor[(7, 12, 5), bool],) */
}

def @func_11109() -> Tensor[(4, 8, 9), uint8] {
  %340 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %340.1
}

def @func_7941() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_7939() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_17021() -> (Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(4, 8, 9), int8]) {
  %345 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(4, 8, 9), int8]) {
    %341 = @func_16275() /* ty=(Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(11, 13, 9), bool]) */;
    %342 = @func_8882() /* ty=Tensor[(4, 8, 9), uint8] */;
    %343 = %341.2;
    %344 = @func_14861() /* ty=Tensor[(4, 8, 9), int8] */;
    (%342, %343, %344)
  };
  %345() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(4, 8, 9), int8]) */
}

def @func_486() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_843(%var_841: Tensor[(8, 10, 16), float64]) -> (Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) {
  @func_840(%var_841) /* ty=(Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) */
}

def @func_8797() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  @func_8795() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */
}

def @func_3003(%var_3002: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %357 = fn (%var_2972: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %346 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %347 = %346.0;
    %348 = cast(%var_2972, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
    %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
    %350 = cast(%347, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
    %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %352 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %353 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
    %354 = maximum(%350, %351) /* ty=Tensor[(4, 8, 9), uint64] */;
    %355 = %352.0;
    %356 = %353.0;
    (%354, %355, %356)
  };
  %357(%var_3002) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_8524() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %365 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
    %358 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
    %359 = cast(meta[relay.Constant][14] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
    %360 = cast(meta[relay.Constant][14] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
    %361 = reshape(%359, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
    %362 = reshape(%360, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
    %363 = %358.0;
    %364 = @func_89(%361, %362) /* ty=Tensor[(4, 10, 2), uint64] */;
    (%363, %364, meta[relay.Constant][14] /* ty=Tensor[(80), uint64] */)
  };
  %365() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */
}

def @func_1893(%var_1891: Tensor[(2, 15, 4), float32], %var_1892: Tensor[(1, 80), uint64]) -> (Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) {
  @func_1889(%var_1891, %var_1892) /* ty=(Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) */
}

def @func_17135() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %370 = fn () -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
    %366 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %367 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %368 = %366.0;
    %369 = %367.0;
    (%368, %369)
  };
  %370() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */
}

def @func_7872() -> (Tensor[(4, 8, 9), float64],) {
  @func_7870() /* ty=(Tensor[(4, 8, 9), float64],) */
}

def @func_900() -> (Tensor[(4, 8, 9), int8],) {
  @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */
}

def @func_6679() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %375 = fn () -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %371 = @func_3959() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %372 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %373 = %371.0;
    %374 = %372.0;
    (%373, %374)
  };
  %375() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_3604() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) {
  %376 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %377 = %376.0;
  %378 = cast(%377, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %379 = reshape(%378, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %380 = @func_1452(%379) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %381 = cast(meta[relay.Constant][15] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %382 = %380.0;
  %383 = cast(%382, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %384 = reshape(%381, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %385 = reshape(%383, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float32] */;
  %386 = @func_3537(%384, %385) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) */;
  %387 = %386.1;
  (%377, %382, %387, meta[relay.Constant][15] /* ty=Tensor[(594), float32] */)
}

def @func_4958() -> (Tensor[(4, 8, 9), uint8],) {
  %388 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %389 = %388.0;
  (%389,)
}

def @func_6198(%var_6196: Tensor[(110), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32]) {
  @func_6195(%var_6196) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32]) */
}

def @func_7870() -> (Tensor[(4, 8, 9), float64],) {
  %390 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %391 = %390.0;
  (%391,)
}

def @func_7520(%var_7518: Tensor[(2, 5, 11), float64]) -> (Tensor[(2, 5, 11), float64], Tensor[(4, 8, 9), float32]) {
  @func_7517(%var_7518) /* ty=(Tensor[(2, 5, 11), float64], Tensor[(4, 8, 9), float32]) */
}

def @func_8750() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %395 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %392 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %393 = %392.1;
    %394 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%393, %394)
  };
  %395() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_9815(%var_9813: Tensor[(14, 14, 10), uint32], %var_9814: Tensor[(14, 14, 10), uint32]) -> (Tensor[(14, 14, 10), uint32], Tensor[(4, 8, 9), uint8]) {
  @func_9811(%var_9813, %var_9814) /* ty=(Tensor[(14, 14, 10), uint32], Tensor[(4, 8, 9), uint8]) */
}

def @func_15846() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) {
  %396 = @func_15580() /* ty=(Tensor[(4, 8, 9), uint64],) */;
  %397 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %398 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %399 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
  %400 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %401 = @func_12839() /* ty=Tensor[(4, 8, 9), float32] */;
  %402 = %396.0;
  %403 = %397.2;
  %404 = %398.0;
  %405 = %399.0;
  %406 = %400.1;
  (%401, %402, %403, %404, %405, %406)
}

def @func_5029() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_5027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_12387() -> Tensor[(4, 8, 9), uint8] {
  @func_12385() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_744() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %407 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %408 = %407.1;
  %409 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %410 = %409.1;
  %411 = cast(%410, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %412 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%408, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %415 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %416 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %417 = cast(%410, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %418 = shape_of(%408, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%408, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %421 = multiply(%413, %414) /* ty=Tensor[(4, 8, 9), int8] */;
  %422 = %415.1;
  %423 = %416.0;
  %424 = floor_divide(%419, %420) /* ty=Tensor[(4, 8, 9), float32] */;
  (%421, %422, %423, %424)
}

def @func_9336() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64]) {
  @func_9334() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64]) */
}

def @func_15005() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %425 = @func_7641() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
  %426 = @func_5868() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %427 = %425.2;
  %428 = %426.0;
  (%427, %428)
}

def @func_5728() -> (Tensor[(4, 8, 9), uint8],) {
  @func_5726() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_12447() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  @func_12445() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */
}

def @func_8183(%var_8181: Tensor[(720), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) {
  %429 = @func_8115() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %430 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %431 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %432 = cast(meta[relay.Constant][16] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
  %433 = cast(%var_8181, dtype="int32") /* ty=Tensor[(720), int32] */;
  %434 = reshape(%432, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), int32] */;
  %435 = reshape(%433, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), int32] */;
  %436 = %429.1;
  %437 = %430.0;
  %438 = %431.0;
  %439 = @func_6336(%434, %435) /* ty=Tensor[(15, 6, 8), int32] */;
  (%436, %437, %438, %439, meta[relay.Constant][16] /* ty=Tensor[(48), int32] */, %var_8181)
}

def @func_8401() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %444 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %440 = @func_5603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %441 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %442 = %440.0;
    %443 = %441.1;
    (%442, %443)
  };
  %444() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_484() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %445 = cast(meta[relay.Constant][17] /* ty=Tensor[(11, 10, 10), float32] */, dtype="float32") /* ty=Tensor[(11, 10, 10), float32] */;
  %446 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %447 = atan(%445) /* ty=Tensor[(11, 10, 10), float32] */;
  %448 = %446.0;
  (%447, %448)
}

def @func_4309() -> Tensor[(4, 8, 9), int8] {
  %450 = fn () -> Tensor[(4, 8, 9), int8] {
    %449 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %449.0
  };
  %450() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_6416() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_6414() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_5412() -> Tensor[(4, 8, 9), uint8] {
  @func_5410() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_11124(%var_11120: Tensor[(1800), uint16]) -> (Tensor[(11, 10, 10), float32], Tensor[(4, 20), uint32], Tensor[(1800), uint16]) {
  %451 = @func_10094() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) */;
  %452 = cast(%var_11120, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
  %453 = reshape(%452, newshape=[1800]) /* ty=Tensor[(1800), uint16] */;
  %454 = @func_8294(%453) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(1800), uint16], Tensor[(4, 20), uint32], Tensor[(4, 8, 9), float32]) */;
  %455 = %451.0;
  %456 = %454.2;
  (%455, %456, %var_11120)
}

def @func_4157() -> Tensor[(4, 8, 9), uint8] {
  %457 = fn () -> Tensor[(4, 8, 9), uint8] {
    @func_36() /* ty=Tensor[(4, 8, 9), uint8] */
  };
  %457() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_10643() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) {
  %462 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) {
    %458 = @func_6678() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %459 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %460 = %458.1;
    %461 = %459.0;
    (%460, %461)
  };
  %462() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */
}

def @func_15884() -> (Tensor[(4, 8, 9), float64], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %467 = fn () -> (Tensor[(4, 8, 9), float64], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
    %463 = @func_7870() /* ty=(Tensor[(4, 8, 9), float64],) */;
    %464 = %463.0;
    %465 = @func_13445() /* ty=Tensor[(11, 10, 10), float32] */;
    %466 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%464, %465, %466)
  };
  %467() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_15007() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  @func_15005() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */
}

def @func_12979() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %468 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %469 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %470 = %468.0;
  %471 = %469.1;
  %472 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%470, %471, %472)
}

def @func_16885() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %475 = fn () -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
    %473 = @func_10357() /* ty=Tensor[(11, 10, 10), float32] */;
    %474 = @func_9769() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%473, %474)
  };
  %475() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_13123() -> Tensor[(4, 8, 9), uint8] {
  @func_13121() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_6944() -> Tensor[(4, 8, 9), uint8] {
  %476 = @func_4958() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %476.0
}

def @func_14959(%var_14946: Tensor[(15, 12, 13), uint16]) -> Tensor[(15, 12, 13), uint16] {
  %477 = cast(%var_14946, dtype="uint16") /* ty=Tensor[(15, 12, 13), uint16] */;
  %478 = shape_of(meta[relay.Constant][18] /* ty=Tensor[(15, 12, 13), uint16] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %479 = cast(meta[relay.Constant][18] /* ty=Tensor[(15, 12, 13), uint16] */, dtype="uint16") /* ty=Tensor[(15, 12, 13), uint16] */;
  %480 = dyn.reshape(%477, %478, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  bitwise_and(%479, %480) /* ty=Tensor[(15, 12, 13), uint16] */
}

def @func_12385() -> Tensor[(4, 8, 9), uint8] {
  %481 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %481.0
}

def @func_17052() -> Tensor[(4, 8, 9), uint64] {
  @func_17050() /* ty=Tensor[(4, 8, 9), uint64] */
}

def @func_7048(%var_7046: Tensor[(8, 7, 10), float64], %var_7047: Tensor[(720), int32]) -> (Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) {
  %499 = fn (%var_6987: Tensor[(8, 7, 10), float64], %var_6995: Tensor[(720), int32]) -> (Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) {
    %482 = cast(meta[relay.Constant][19] /* ty=Tensor[(48, 1), int32] */, dtype="int32") /* ty=Tensor[(48, 1), int32] */;
    %483 = cast(%var_6995, dtype="int32") /* ty=Tensor[(720), int32] */;
    %484 = reshape(%482, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), int32] */;
    %485 = reshape(%483, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), int32] */;
    %486 = cast(%var_6987, dtype="float64") /* ty=Tensor[(8, 7, 10), float64] */;
    %487 = cosh(%486) /* ty=Tensor[(8, 7, 10), float64] */;
    %488 = cast(%487, dtype="float64") /* ty=Tensor[(8, 7, 10), float64] */;
    %489 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %490 = cast(meta[relay.Constant][20] /* ty=Tensor[(6, 20), float32] */, dtype="float32") /* ty=Tensor[(6, 20), float32] */;
    %491 = cast(meta[relay.Constant][21] /* ty=Tensor[(40, 2), uint64] */, dtype="uint64") /* ty=Tensor[(40, 2), uint64] */;
    %492 = reshape(%490, newshape=[120]) /* ty=Tensor[(120), float32] */;
    %493 = reshape(%491, newshape=[80]) /* ty=Tensor[(80), uint64] */;
    %494 = @func_1999(%492, %493) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %495 = @func_6336(%484, %485) /* ty=Tensor[(15, 6, 8), int32] */;
    %496 = atanh(%488) /* ty=Tensor[(8, 7, 10), float64] */;
    %497 = %489.0;
    %498 = %494.8;
    (%495, meta[relay.Constant][19] /* ty=Tensor[(48, 1), int32] */, %var_6995, %496, %497, %498, meta[relay.Constant][20] /* ty=Tensor[(6, 20), float32] */, meta[relay.Constant][21] /* ty=Tensor[(40, 2), uint64] */)
  };
  %499(%var_7046, %var_7047) /* ty=(Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) */
}

def @func_7660() -> (Tensor[(4, 8, 9), int8],) {
  %502 = fn () -> (Tensor[(4, 8, 9), int8],) {
    %500 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
    %501 = %500.0;
    (%501,)
  };
  %502() /* ty=(Tensor[(4, 8, 9), int8],) */
}

def @func_12172() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %503 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %504 = @func_6377() /* ty=Tensor[(4, 8, 9), float32] */;
  %505 = %503.0;
  (%504, %505)
}

def @func_16034() -> (Tensor[(4, 8, 9), uint8], Tensor[(8, 10, 16), float64], Tensor[(4, 320), float64], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  @func_16032() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(8, 10, 16), float64], Tensor[(4, 320), float64], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */
}

def @func_1285() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %506 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %507 = %506.0;
  %508 = cast(%507, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %509 = sqrt(%508) /* ty=Tensor[(4, 8, 9), float32] */;
  %510 = cast(%509, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %511 = shape_of(%507, dtype="int32") /* ty=Tensor[(3), int32] */;
  %512 = cast(%507, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %514 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %515 = mod(%512, %513) /* ty=Tensor[(4, 8, 9), float32] */;
  %516 = %514.0;
  (%515, %516)
}

def @func_12337(%var_12324: Tensor[(16, 14, 5), uint32]) -> Tensor[(16, 14, 5), float32] {
  %517 = cast(%var_12324, dtype="uint32") /* ty=Tensor[(16, 14, 5), uint32] */;
  %518 = shape_of(meta[relay.Constant][22] /* ty=Tensor[(16, 14, 5), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(meta[relay.Constant][22] /* ty=Tensor[(16, 14, 5), uint32] */, dtype="uint32") /* ty=Tensor[(16, 14, 5), uint32] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %521 = right_shift(%519, %520) /* ty=Tensor[(16, 14, 5), uint32] */;
  %522 = cast(%521, dtype="float32") /* ty=Tensor[(16, 14, 5), float32] */;
  tan(%522) /* ty=Tensor[(16, 14, 5), float32] */
}

def @func_4944() -> (Tensor[(11, 10, 10), float32],) {
  @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */
}

def @func_10184() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) {
  %527 = fn () -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) {
    %523 = @func_5981() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %524 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %525 = %523.0;
    %526 = %524.0;
    (%525, %526)
  };
  %527() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */
}

def @func_13940() -> (Tensor[(4, 8, 9), uint8],) {
  %528 = @func_6002() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %529 = %528.1;
  (%529,)
}

def @func_15649() -> Tensor[(4, 8, 9), uint8] {
  %531 = fn () -> Tensor[(4, 8, 9), uint8] {
    %530 = @func_10568() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) */;
    %530.4
  };
  %531() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_13362() -> (Tensor[(4, 8, 9), uint8],) {
  %534 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %532 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %533 = %532.0;
    (%533,)
  };
  %534() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_8795() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %535 = cast(meta[relay.Constant][23] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %536 = cast(meta[relay.Constant][23] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %537 = reshape(%535, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %538 = reshape(%536, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %539 = @func_7219() /* ty=Tensor[(4, 8, 9), uint8] */;
  %540 = @func_89(%537, %538) /* ty=Tensor[(4, 10, 2), uint64] */;
  (%539, %540, meta[relay.Constant][23] /* ty=Tensor[(80), uint64] */)
}

def @func_3287() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) {
  %541 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %542 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %543 = %541.0;
  %544 = %542.0;
  (%543, %544)
}

def @func_14962(%var_14960: Tensor[(15, 12, 13), uint16]) -> Tensor[(15, 12, 13), uint16] {
  @func_14959(%var_14960) /* ty=Tensor[(15, 12, 13), uint16] */
}

def @func_2466() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %550 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
    %545 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %546 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %547 = %545.0;
    %548 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
    %549 = %546.0;
    (%547, %548, %549)
  };
  %550() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */
}

def @func_2536(%var_2534: Tensor[(4, 16, 14), uint32], %var_2535: Tensor[(4, 16, 14), uint32]) -> (Tensor[(4, 16, 14), uint32],) {
  %556 = fn (%var_2522: Tensor[(4, 16, 14), uint32], %var_2523: Tensor[(4, 16, 14), uint32]) -> (Tensor[(4, 16, 14), uint32],) {
    %551 = cast(%var_2523, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
    %552 = shape_of(%var_2522, dtype="int32") /* ty=Tensor[(3), int32] */;
    %553 = cast(%var_2522, dtype="uint32") /* ty=Tensor[(4, 16, 14), uint32] */;
    %554 = dyn.reshape(%551, %552, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %555 = minimum(%553, %554) /* ty=Tensor[(4, 16, 14), uint32] */;
    (%555,)
  };
  %556(%var_2534, %var_2535) /* ty=(Tensor[(4, 16, 14), uint32],) */
}

def @func_6340(%var_6338: Tensor[(1, 6, 8), int32], %var_6339: Tensor[(15, 6, 8), int32]) -> Tensor[(15, 6, 8), int32] {
  @func_6336(%var_6338, %var_6339) /* ty=Tensor[(15, 6, 8), int32] */
}

def @func_7257() -> (Tensor[(4, 8, 9), uint8],) {
  %557 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%557,)
}

def @func_11417() -> (Tensor[(4, 8, 9), bool],) {
  %560 = fn () -> (Tensor[(4, 8, 9), bool],) {
    %558 = @func_8958() /* ty=(Tensor[(4, 8, 9), bool],) */;
    %559 = %558.0;
    (%559,)
  };
  %560() /* ty=(Tensor[(4, 8, 9), bool],) */
}

def @func_5227() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %567 = fn () -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %561 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %562 = %561.0;
    %563 = cast(%562, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
    %564 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %565 = exp(%563) /* ty=Tensor[(4, 8, 9), float32] */;
    %566 = %564.0;
    (%565, %566)
  };
  %567() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_6364(%var_6362: Tensor[(12, 1, 13), float64]) -> (Tensor[(12, 1, 13), float64],) {
  @func_6361(%var_6362) /* ty=(Tensor[(12, 1, 13), float64],) */
}

def @func_13178(%var_13177: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), float64],) {
  %570 = fn (%var_13171: Tensor[(3, 2, 13), float64]) -> (Tensor[(3, 2, 13), float64],) {
    %568 = cast(%var_13171, dtype="float64") /* ty=Tensor[(3, 2, 13), float64] */;
    %569 = sin(%568) /* ty=Tensor[(3, 2, 13), float64] */;
    (%569,)
  };
  %570(%var_13177) /* ty=(Tensor[(3, 2, 13), float64],) */
}

def @func_929() -> (Tensor[(4, 8, 9), uint8],) {
  %572 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %571 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%571,)
  };
  %572() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_1596() -> (Tensor[(4, 8, 9), uint8],) {
  @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_15410() -> Tensor[(4, 8, 9), uint8] {
  %574 = fn () -> Tensor[(4, 8, 9), uint8] {
    %573 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %573.0
  };
  %574() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_2194(%var_2164: Tensor[(1280), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(1280), float64], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %575 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %576 = cast(%var_2164, dtype="float64") /* ty=Tensor[(1280), float64] */;
  %577 = reshape(%576, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %578 = @func_840(%577) /* ty=(Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) */;
  %579 = cast(meta[relay.Constant][24] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %580 = cast(meta[relay.Constant][24] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
  %581 = reshape(%579, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %582 = reshape(%580, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %583 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %584 = %575.1;
  %585 = %578.1;
  %586 = @func_89(%581, %582) /* ty=Tensor[(4, 10, 2), uint64] */;
  (%583, %584, %585, %var_2164, %586, meta[relay.Constant][24] /* ty=Tensor[(80), uint64] */)
}

def @func_13829() -> (Tensor[(4, 8, 9), uint8],) {
  @func_13827() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_8835() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  @func_8833() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_9146() -> Tensor[(4, 8, 9), uint8] {
  @func_9144() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_4002(%var_3981: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), bool], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8]) {
  %587 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  %588 = cast(%var_3981, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %589 = shape_of(%587, dtype="int32") /* ty=Tensor[(3), int32] */;
  %590 = cast(%587, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %591 = dyn.reshape(%588, %589, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %592 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %593 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %594 = logical_or(%590, %591) /* ty=Tensor[(4, 8, 9), bool] */;
  %595 = %592.2;
  %596 = %593.0;
  (%594, %595, %596)
}

def @func_14391(%var_14381: Tensor[(2, 4, 12), float32]) -> Tensor[(2, 4, 12), float32] {
  %597 = cast(%var_14381, dtype="float32") /* ty=Tensor[(2, 4, 12), float32] */;
  acosh(%597) /* ty=Tensor[(2, 4, 12), float32] */
}

def @func_1889(%var_1874: Tensor[(2, 15, 4), float32], %var_1880: Tensor[(1, 80), uint64]) -> (Tensor[(2, 15, 4), float32], Tensor[(?, 80), uint8]) {
  %598 = cast(%var_1874, dtype="float32") /* ty=Tensor[(2, 15, 4), float32] */;
  %599 = cast(%var_1880, dtype="uint64") /* ty=Tensor[(1, 80), uint64] */;
  %600 = cast(%var_1880, dtype="uint64") /* ty=Tensor[(1, 80), uint64] */;
  %601 = reshape(%599, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %602 = reshape(%600, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
  %603 = @func_89(%601, %602) /* ty=Tensor[(4, 10, 2), uint64] */;
  %604 = cast(%603, dtype="uint8") /* ty=Tensor[(4, 10, 2), uint8] */;
  %605 = shape_of(%var_1880, dtype="int32") /* ty=Tensor[(2), int32] */;
  %606 = cast(%var_1880, dtype="uint8") /* ty=Tensor[(1, 80), uint8] */;
  %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?), uint8] */;
  %608 = acosh(%598) /* ty=Tensor[(2, 15, 4), float32] */;
  %609 = bitwise_xor(%606, %607) /* ty=Tensor[(?, 80), uint8] */;
  (%608, %609)
}

def @func_8904() -> (Tensor[(4, 8, 9), uint8],) {
  %610 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %611 = %610.1;
  (%611,)
}

def @func_7259() -> (Tensor[(4, 8, 9), uint8],) {
  @func_7257() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_7517(%var_7501: Tensor[(2, 5, 11), float64]) -> (Tensor[(2, 5, 11), float64], Tensor[(4, 8, 9), float32]) {
  %612 = cast(%var_7501, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  %613 = tan(%612) /* ty=Tensor[(2, 5, 11), float64] */;
  %614 = cast(%613, dtype="float64") /* ty=Tensor[(2, 5, 11), float64] */;
  %615 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %616 = acosh(%614) /* ty=Tensor[(2, 5, 11), float64] */;
  %617 = %615.1;
  (%616, %617)
}

def @func_15530() -> (Tensor[(4, 8, 9), uint8],) {
  %618 = @func_8523() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %619 = %618.0;
  (%619,)
}

def @func_13334() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(10, 13, 12), float32]) {
  @func_13332() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(10, 13, 12), float32]) */
}

def @func_15168() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %620 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %621 = @func_7257() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %622 = %620.2;
  %623 = %621.0;
  (%622, %623)
}

def @func_3132() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %630 = fn () -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %624 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %625 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
    %626 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %627 = %624.0;
    %628 = %625.1;
    %629 = %626.0;
    (%627, %628, %629)
  };
  %630() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_15256() -> (Tensor[(14, 8, 13), float64], Tensor[(4, 13, 15), float64]) {
  %634 = fn () -> (Tensor[(14, 8, 13), float64], Tensor[(4, 13, 15), float64]) {
    %631 = cast(meta[relay.Constant][25] /* ty=Tensor[(14, 8, 13), float64] */, dtype="float64") /* ty=Tensor[(14, 8, 13), float64] */;
    %632 = sqrt(%631) /* ty=Tensor[(14, 8, 13), float64] */;
    %633 = @func_5781() /* ty=Tensor[(4, 13, 15), float64] */;
    (%632, %633)
  };
  %634() /* ty=(Tensor[(14, 8, 13), float64], Tensor[(4, 13, 15), float64]) */
}

def @func_580() -> (Tensor[(4, 8, 9), uint8],) {
  %637 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %635 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %636 = %635.0;
    (%636,)
  };
  %637() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_9014() -> Tensor[(4, 8, 9), uint8] {
  %638 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %638.0
}

def @func_5113(%var_5112: Tensor[(2, 6, 8), float32]) -> (Tensor[(2, 6, 8), float32],) {
  %643 = fn (%var_5072: Tensor[(2, 6, 8), float32]) -> (Tensor[(2, 6, 8), float32],) {
    %639 = cast(%var_5072, dtype="float32") /* ty=Tensor[(2, 6, 8), float32] */;
    %640 = cos(%639) /* ty=Tensor[(2, 6, 8), float32] */;
    %641 = cast(%640, dtype="float32") /* ty=Tensor[(2, 6, 8), float32] */;
    %642 = sigmoid(%641) /* ty=Tensor[(2, 6, 8), float32] */;
    (%642,)
  };
  %643(%var_5112) /* ty=(Tensor[(2, 6, 8), float32],) */
}

def @func_14355() -> Tensor[(4, 8, 9), uint8] {
  @func_14353() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_11647() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint16]) {
  %651 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint16]) {
    %644 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %645 = @func_10246() /* ty=Tensor[(4, 8, 9), float64] */;
    %646 = cast(%645, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %647 = reshape(%646, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %648 = @func_1805(%647) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
    %649 = %644.0;
    %650 = %648.0;
    (%649, %645, %650)
  };
  %651() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint16]) */
}

def @func_15345() -> Tensor[(4, 8, 9), bool] {
  %652 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %652.1
}

def @func_16032() -> (Tensor[(4, 8, 9), uint8], Tensor[(8, 10, 16), float64], Tensor[(4, 320), float64], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %653 = @func_3131() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %654 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 320), float64] */, dtype="float64") /* ty=Tensor[(4, 320), float64] */;
  %655 = reshape(%654, newshape=[8, 10, 16]) /* ty=Tensor[(8, 10, 16), float64] */;
  %656 = @func_840(%655) /* ty=(Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) */;
  %657 = @func_3287() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %658 = %653.2;
  %659 = %656.0;
  %660 = %657.0;
  %661 = @func_13445() /* ty=Tensor[(11, 10, 10), float32] */;
  (%658, %659, meta[relay.Constant][26] /* ty=Tensor[(4, 320), float64] */, %660, %661)
}

def @func_16670() -> (Tensor[(4, 8, 9), uint8],) {
  %662 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %663 = %662.1;
  (%663,)
}

def @func_7819(%var_7817: Tensor[(24, 2), int32], %var_7818: Tensor[(120), float32]) -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), int8], Tensor[(24, 2), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(12, 14, 13), bool], Tensor[(1092, 2), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_7815(%var_7817, %var_7818) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), int8], Tensor[(24, 2), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(12, 14, 13), bool], Tensor[(1092, 2), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_1080() -> (Tensor[(4, 8, 9), uint8],) {
  %664 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %665 = %664.0;
  (%665,)
}

def @func_2027() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %666 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %667 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %668 = %666.0;
  %669 = %667.0;
  (%668, %669)
}

def @func_9266(%var_9265: Tensor[(16, 15, 3), uint64]) -> Tensor[(16, 15, 3), uint64] {
  %674 = fn (%var_9234: Tensor[(16, 15, 3), uint64]) -> Tensor[(16, 15, 3), uint64] {
    %670 = cast(%var_9234, dtype="uint64") /* ty=Tensor[(16, 15, 3), uint64] */;
    %671 = shape_of(meta[relay.Constant][27] /* ty=Tensor[(16, 15, 3), uint64] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %672 = cast(meta[relay.Constant][27] /* ty=Tensor[(16, 15, 3), uint64] */, dtype="uint64") /* ty=Tensor[(16, 15, 3), uint64] */;
    %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    add(%672, %673) /* ty=Tensor[(16, 15, 3), uint64] */
  };
  %674(%var_9265) /* ty=Tensor[(16, 15, 3), uint64] */
}

def @func_15848() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) {
  @func_15846() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */
}

def @func_11055() -> (Tensor[(80), uint64], Tensor[(4, 8, 9), uint8]) {
  %675 = @func_7213() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %676 = @func_6865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %677 = %675.2;
  %678 = %676.0;
  (%677, %678)
}

def @func_7995() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %683 = fn () -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %679 = @func_4835() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %680 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %681 = %679.0;
    %682 = %680.1;
    (%681, %682)
  };
  %683() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_8431() -> (Tensor[(4, 8, 9), uint64],) {
  %686 = fn () -> (Tensor[(4, 8, 9), uint64],) {
    %684 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %685 = %684.4;
    (%685,)
  };
  %686() /* ty=(Tensor[(4, 8, 9), uint64],) */
}

def @func_15918() -> Tensor[(4, 8, 9), uint8] {
  %687 = fn () -> Tensor[(4, 8, 9), uint8] {
    @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */
  };
  %687() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_5783() -> Tensor[(4, 13, 15), float64] {
  @func_5781() /* ty=Tensor[(4, 13, 15), float64] */
}

def @func_14270(%var_14204: Tensor[(16, 4, 5), float32]) -> (Tensor[(16, 4, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(16, 4, 5), float32]) {
  %688 = cast(%var_14204, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %689 = sinh(%688) /* ty=Tensor[(16, 4, 5), float32] */;
  %690 = cast(%689, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %691 = shape_of(%var_14204, dtype="int32") /* ty=Tensor[(3), int32] */;
  %692 = cast(%var_14204, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %693 = dyn.reshape(%690, %691, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %694 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %695 = cast(%689, dtype="float32") /* ty=Tensor[(16, 4, 5), float32] */;
  %696 = subtract(%692, %693) /* ty=Tensor[(16, 4, 5), float32] */;
  %697 = %694.0;
  %698 = acosh(%695) /* ty=Tensor[(16, 4, 5), float32] */;
  (%696, %697, %698)
}

def @func_14490() -> (Tensor[(4, 8, 9), int8],) {
  %699 = @func_4308() /* ty=Tensor[(4, 8, 9), int8] */;
  (%699,)
}

def @func_364() -> Tensor[(4, 8, 9), uint8] {
  @func_362() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_11376(%var_11374: Tensor[(16, 2, 13), float64], %var_11375: Tensor[(16, 2, 13), float64]) -> Tensor[(16, 2, 13), float64] {
  %704 = fn (%var_11367: Tensor[(16, 2, 13), float64], %var_11368: Tensor[(16, 2, 13), float64]) -> Tensor[(16, 2, 13), float64] {
    %700 = cast(%var_11368, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
    %701 = shape_of(%var_11367, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%var_11367, dtype="float64") /* ty=Tensor[(16, 2, 13), float64] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%702, %703) /* ty=Tensor[(16, 2, 13), float64] */
  };
  %704(%var_11374, %var_11375) /* ty=Tensor[(16, 2, 13), float64] */
}

def @func_15058() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %705 = @func_8882() /* ty=Tensor[(4, 8, 9), uint8] */;
  %706 = @func_14353() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%705, %706)
}

def @func_16276() -> (Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(11, 13, 9), bool]) {
  %720 = fn () -> (Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(11, 13, 9), bool]) {
    %707 = @func_7213() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
    %708 = cast(meta[relay.Constant][28] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %709 = reshape(%708, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %710 = @func_8183(%709) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) */;
    %711 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 13, 9), float64] */, dtype="float64") /* ty=Tensor[(11, 13, 9), float64] */;
    %712 = atanh(%711) /* ty=Tensor[(11, 13, 9), float64] */;
    %713 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 13, 9), float64] */, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
    %714 = shape_of(%712, dtype="int32") /* ty=Tensor[(3), int32] */;
    %715 = cast(%712, dtype="bool") /* ty=Tensor[(11, 13, 9), bool] */;
    %716 = dyn.reshape(%713, %714, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %717 = %707.2;
    %718 = %710.0;
    %719 = less_equal(%715, %716) /* ty=Tensor[(11, 13, 9), bool] */;
    (%717, %718, meta[relay.Constant][28] /* ty=Tensor[(720), int32] */, %719)
  };
  %720() /* ty=(Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(720), int32], Tensor[(11, 13, 9), bool]) */
}

def @func_9799(%var_9798: float32) -> (Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32) {
  %726 = fn (%var_9792: float32) -> (Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32) {
    %721 = @func_5538() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
    %722 = cast(%var_9792, dtype="float32") /* ty=float32 */;
    %723 = reshape(%722, newshape=[]) /* ty=float32 */;
    %724 = %721.0;
    %725 = @func_6809(%723) /* ty=Tensor[(1, 14), float32] */;
    (%724, %725, %var_9792)
  };
  %726(%var_9798) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32) */
}

def @func_3110() -> Tensor[(4, 8, 9), uint8] {
  @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_12368() -> (Tensor[(4, 8, 9), uint8],) {
  %729 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %727 = @func_10011() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %728 = %727.0;
    (%728,)
  };
  %729() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_9304() -> (Tensor[(4, 8, 9), uint8],) {
  %732 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %730 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
    %731 = %730.0;
    (%731,)
  };
  %732() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_15060() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_15058() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_4836() -> (Tensor[(4, 8, 9), float32],) {
  %734 = fn () -> (Tensor[(4, 8, 9), float32],) {
    %733 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
    (%733,)
  };
  %734() /* ty=(Tensor[(4, 8, 9), float32],) */
}

def @func_17171() -> Tensor[(4, 8, 9), int8] {
  %735 = @func_4463() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %735.1
}

def @func_10754() -> Tensor[(4, 8, 9), uint8] {
  %737 = fn () -> Tensor[(4, 8, 9), uint8] {
    %736 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %736.0
  };
  %737() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_6336(%var_6326: Tensor[(1, 6, 8), int32], %var_6327: Tensor[(15, 6, 8), int32]) -> Tensor[(15, 6, 8), int32] {
  %738 = cast(%var_6326, dtype="int32") /* ty=Tensor[(1, 6, 8), int32] */;
  %739 = cast(%var_6327, dtype="int32") /* ty=Tensor[(15, 6, 8), int32] */;
  right_shift(%738, %739) /* ty=Tensor[(15, 6, 8), int32] */
}

def @func_1386() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) {
  @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */
}

def @func_11127(%var_11125: Tensor[(1800), uint16]) -> (Tensor[(11, 10, 10), float32], Tensor[(4, 20), uint32], Tensor[(1800), uint16]) {
  @func_11124(%var_11125) /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 20), uint32], Tensor[(1800), uint16]) */
}

def @func_898() -> (Tensor[(4, 8, 9), int8],) {
  %740 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %741 = %740.0;
  (%741,)
}

def @func_36() -> Tensor[(4, 8, 9), uint8] {
  %742 = cast(meta[relay.Constant][30] /* ty=Tensor[(4, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %743 = cos(%742) /* ty=Tensor[(4, 8, 9), float32] */;
  %744 = cast(meta[relay.Constant][31] /* ty=Tensor[(4, 8, 9), float32] */, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %745 = shape_of(%743, dtype="int32") /* ty=Tensor[(3), int32] */;
  %746 = cast(%743, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %747 = dyn.reshape(%744, %745, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  bitwise_or(%746, %747) /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_4767() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_6776() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %748 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %749 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %750 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %751 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %752 = %748.0;
  %753 = %749.0;
  %754 = %750.0;
  %755 = %751.0;
  (%752, %753, %754, %755)
}

def @func_12651() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %756 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %757 = @func_9664() /* ty=Tensor[(4, 8, 9), uint8] */;
  %758 = %756.1;
  (%757, %758)
}

def @func_14126() -> (Tensor[(4, 8, 9), uint8],) {
  %761 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %759 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %760 = %759.0;
    (%760,)
  };
  %761() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_8833() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %762 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %763 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %764 = @func_5603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %765 = %762.0;
  %766 = %763.3;
  %767 = %764.0;
  (%765, %766, %767)
}

def @func_11263() -> Tensor[(4, 8, 9), uint8] {
  %769 = fn () -> Tensor[(4, 8, 9), uint8] {
    %768 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %768.0
  };
  %769() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_9665() -> Tensor[(4, 8, 9), uint8] {
  %771 = fn () -> Tensor[(4, 8, 9), uint8] {
    %770 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
    %770.1
  };
  %771() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_8117() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  @func_8115() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */
}

def @func_14737() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  @func_14735() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */
}

def @func_11923() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %772 = @func_7446() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %773 = @func_2736() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %774 = @func_7403() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
  %775 = %772.0;
  %776 = %773.0;
  %777 = %774.0;
  (%775, %776, %777)
}

def @func_1172() -> (Tensor[(11, 10, 10), float32],) {
  %782 = fn () -> (Tensor[(11, 10, 10), float32],) {
    %778 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
    %779 = %778.0;
    %780 = cast(%779, dtype="float32") /* ty=Tensor[(11, 10, 10), float32] */;
    %781 = tan(%780) /* ty=Tensor[(11, 10, 10), float32] */;
    (%781,)
  };
  %782() /* ty=(Tensor[(11, 10, 10), float32],) */
}

def @func_16798(%var_16795: Tensor[(110), float32], %var_16796: Tensor[(1, 1650), float64], %var_16797: Tensor[(560), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32], Tensor[(1, 1650), float64], Tensor[(2, 4, 12), float32], Tensor[(96), float32], Tensor[(40, 2), uint64], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %806 = fn (%var_16747: Tensor[(110), float32], %var_16748: Tensor[(1, 1650), float64], %var_16762: Tensor[(560), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32], Tensor[(1, 1650), float64], Tensor[(2, 4, 12), float32], Tensor[(96), float32], Tensor[(40, 2), uint64], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
    %783 = @func_7446() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %784 = cast(%var_16747, dtype="float32") /* ty=Tensor[(110), float32] */;
    %785 = cast(%var_16748, dtype="float64") /* ty=Tensor[(1, 1650), float64] */;
    %786 = reshape(%784, newshape=[1, 110]) /* ty=Tensor[(1, 110), float32] */;
    %787 = reshape(%785, newshape=[15, 110]) /* ty=Tensor[(15, 110), float64] */;
    %788 = @func_4629(%786, %787) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(15, 110), int32], Tensor[(?, 110), bool], Tensor[(?, 110), float64]) */;
    %789 = cast(meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
    %790 = reshape(%789, newshape=[2, 4, 12]) /* ty=Tensor[(2, 4, 12), float32] */;
    %791 = cast(%var_16762, dtype="float64") /* ty=Tensor[(560), float64] */;
    %792 = cast(meta[relay.Constant][33] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %793 = reshape(%791, newshape=[8, 7, 10]) /* ty=Tensor[(8, 7, 10), float64] */;
    %794 = reshape(%792, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %795 = @func_7045(%793, %794) /* ty=(Tensor[(15, 6, 8), int32], Tensor[(48, 1), int32], Tensor[(720), int32], Tensor[(8, 7, 10), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 20), float32], Tensor[(40, 2), uint64]) */;
    %796 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %797 = @func_5027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %798 = @func_15846() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
    %799 = %783.0;
    %800 = %788.1;
    %801 = @func_14391(%790) /* ty=Tensor[(2, 4, 12), float32] */;
    %802 = %795.7;
    %803 = %796.2;
    %804 = %797.0;
    %805 = %798.0;
    (%799, %800, %var_16747, %var_16748, %801, meta[relay.Constant][32] /* ty=Tensor[(96), float32] */, %802, %var_16762, meta[relay.Constant][33] /* ty=Tensor[(720), int32] */, %803, %804, %805)
  };
  %806(%var_16795, %var_16796, %var_16797) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32], Tensor[(1, 1650), float64], Tensor[(2, 4, 12), float32], Tensor[(96), float32], Tensor[(40, 2), uint64], Tensor[(560), float64], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */
}

def @func_9086(%var_9085: Tensor[(108, 4), int64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(108, 4), float32], Tensor[(4, 8, 9), float32], Tensor[(108, 4), float64], Tensor[(4, 8, 9), uint8]) {
  %828 = fn (%var_9024: Tensor[(108, 4), int64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(108, 4), float32], Tensor[(4, 8, 9), float32], Tensor[(108, 4), float64], Tensor[(4, 8, 9), uint8]) {
    %807 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %808 = cast(%var_9024, dtype="int64") /* ty=Tensor[(108, 4), int64] */;
    %809 = reshape(%808, newshape=[9, 16, 3]) /* ty=Tensor[(9, 16, 3), int64] */;
    %810 = @func_6480(%809) /* ty=Tensor[(9, 16, 3), int64] */;
    %811 = cast(%810, dtype="float32") /* ty=Tensor[(9, 16, 3), float32] */;
    %812 = shape_of(%var_9024, dtype="int32") /* ty=Tensor[(2), int32] */;
    %813 = cast(%var_9024, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
    %814 = dyn.reshape(%811, %812, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %815 = @func_1763() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */;
    %816 = cast(%var_9024, dtype="float32") /* ty=Tensor[(108, 4), float32] */;
    %817 = acosh(%816) /* ty=Tensor[(108, 4), float32] */;
    %818 = cast(meta[relay.Constant][34] /* ty=Tensor[(108, 4), float32] */, dtype="float64") /* ty=Tensor[(108, 4), float64] */;
    %819 = shape_of(%817, dtype="int32") /* ty=Tensor[(2), int32] */;
    %820 = cast(%817, dtype="float64") /* ty=Tensor[(108, 4), float64] */;
    %821 = dyn.reshape(%818, %819, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %822 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %823 = %807.0;
    %824 = floor_mod(%813, %814) /* ty=Tensor[(108, 4), float32] */;
    %825 = %815.1;
    %826 = maximum(%820, %821) /* ty=Tensor[(108, 4), float64] */;
    %827 = %822.0;
    (%823, %824, %825, %826, %827)
  };
  %828(%var_9085) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(108, 4), float32], Tensor[(4, 8, 9), float32], Tensor[(108, 4), float64], Tensor[(4, 8, 9), uint8]) */
}

def @func_16672() -> (Tensor[(4, 8, 9), uint8],) {
  @func_16670() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_15703(%var_15701: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  @func_15700(%var_15701) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */
}

def @func_2354(%var_2353: Tensor[(11, 10, 1), float32]) -> Tensor[(11, 10, 1), float32] {
  %830 = fn (%var_2348: Tensor[(11, 10, 1), float32]) -> Tensor[(11, 10, 1), float32] {
    %829 = cast(%var_2348, dtype="float32") /* ty=Tensor[(11, 10, 1), float32] */;
    log10(%829) /* ty=Tensor[(11, 10, 1), float32] */
  };
  %830(%var_2353) /* ty=Tensor[(11, 10, 1), float32] */
}

def @func_609() -> Tensor[(4, 8, 9), uint8] {
  @func_607() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_2745() -> Tensor[(4, 8, 9), uint8] {
  %832 = fn () -> Tensor[(4, 8, 9), uint8] {
    %831 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %831.1
  };
  %832() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_6946() -> Tensor[(4, 8, 9), uint8] {
  @func_6944() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_10094() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) {
  %833 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %834 = @func_5868() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %835 = %833.0;
  %836 = %834.0;
  (%835, %836)
}

def @func_12981() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  @func_12979() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */
}

def @func_5641() -> Tensor[(4, 8, 9), uint8] {
  @func_5639() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_16928() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(594), float32]) {
  %843 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(594), float32]) {
    %837 = @func_12367() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %838 = cast(meta[relay.Constant][35] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
    %839 = reshape(%838, newshape=[594]) /* ty=Tensor[(594), float32] */;
    %840 = @func_15700(%839) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
    %841 = %837.0;
    %842 = %840.2;
    (%841, %842, meta[relay.Constant][35] /* ty=Tensor[(594), float32] */)
  };
  %843() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(594), float32]) */
}

def @func_10496() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %844 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %845 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %846 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %847 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %848 = %844.0;
  %849 = %845.0;
  %850 = %846.1;
  %851 = %847.1;
  (%848, %849, %850, %851)
}

def @func_7405() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  @func_7403() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */
}

def @func_2322() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  %852 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %853 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %854 = %852.0;
  %855 = %853.0;
  (%854, %855)
}

def @func_14966() -> Tensor[(4, 8, 9), uint8] {
  @func_7953() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_1808(%var_1806: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) {
  @func_1805(%var_1806) /* ty=(Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */
}

def @func_1082() -> (Tensor[(4, 8, 9), uint8],) {
  @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_6104() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %861 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
    %856 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %857 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %858 = %856.0;
    %859 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
    %860 = %857.0;
    (%858, %859, %860)
  };
  %861() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */
}

def @func_1700() -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %877 = fn () -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
    %862 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
    %863 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %864 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %865 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
    %866 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
    %867 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %868 = %867.0;
    %869 = cast(%868, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
    %870 = %862.1;
    %871 = %863.0;
    %872 = @func_362() /* ty=Tensor[(4, 8, 9), uint8] */;
    %873 = %864.1;
    %874 = %865.0;
    %875 = %866.2;
    %876 = atan(%869) /* ty=Tensor[(4, 8, 9), float32] */;
    (%870, %871, %872, %873, %874, %875, %876)
  };
  %877() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */
}

def @func_5487() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), bool]) {
  @func_5485() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), bool]) */
}

def @func_12600() -> Tensor[(4, 8, 9), uint8] {
  @func_12598() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_15105(%var_15103: float64, %var_15104: Tensor[(60, 1), float64]) -> (Tensor[(4, 8, 9), int8], Tensor[(7, 12, 5), bool], float64, Tensor[(60, 1), float64], Tensor[(420), float64]) {
  @func_15101(%var_15103, %var_15104) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(7, 12, 5), bool], float64, Tensor[(60, 1), float64], Tensor[(420), float64]) */
}

def @func_16872() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %884 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %878 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
    %879 = @func_5027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %880 = @func_8115() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
    %881 = %878.1;
    %882 = %879.1;
    %883 = %880.1;
    (%881, %882, %883)
  };
  %884() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_6866() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %889 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %885 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %886 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %887 = %885.0;
    %888 = %886.0;
    (%887, %888)
  };
  %889() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_2867() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_17037() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) {
  @func_17035() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) */
}

def @func_1603() -> (Tensor[(4, 8, 9), uint8],) {
  %890 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %891 = %890.0;
  (%891,)
}

def @func_4164() -> (Tensor[(4, 8, 9), uint8],) {
  @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_11359(%var_11357: Tensor[(156), float64]) -> (Tensor[(11, 10, 10), float32], Tensor[(12, 1, 13), float64], Tensor[(156), float64]) {
  @func_11356(%var_11357) /* ty=(Tensor[(11, 10, 10), float32], Tensor[(12, 1, 13), float64], Tensor[(156), float64]) */
}

def @func_1594() -> (Tensor[(4, 8, 9), uint8],) {
  %892 = @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %893 = %892.2;
  (%893,)
}

def @func_11925() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  @func_11923() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_13374(%var_13363: Tensor[(2, 6, 10), bool]) -> (Tensor[(2, 6, 10), bool],) {
  %894 = cast(meta[relay.Constant][36] /* ty=Tensor[(2, 6, 10), bool] */, dtype="bool") /* ty=Tensor[(2, 6, 10), bool] */;
  %895 = shape_of(%var_13363, dtype="int32") /* ty=Tensor[(3), int32] */;
  %896 = cast(%var_13363, dtype="bool") /* ty=Tensor[(2, 6, 10), bool] */;
  %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %898 = logical_and(%896, %897) /* ty=Tensor[(2, 6, 10), bool] */;
  (%898,)
}

def @func_7403() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %899 = @func_1603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %900 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %901 = %899.0;
  %902 = %900.0;
  (%901, %902)
}

def @func_13377(%var_13375: Tensor[(2, 6, 10), bool]) -> (Tensor[(2, 6, 10), bool],) {
  @func_13374(%var_13375) /* ty=(Tensor[(2, 6, 10), bool],) */
}

def @func_8883() -> Tensor[(4, 8, 9), uint8] {
  %904 = fn () -> Tensor[(4, 8, 9), uint8] {
    %903 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %903.0
  };
  %904() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_16503(%var_16501: Tensor[(1, 16, 11), int64]) -> (Tensor[(1, 16, 11), int64], Tensor[(4, 8, 9), float32]) {
  @func_16500(%var_16501) /* ty=(Tensor[(1, 16, 11), int64], Tensor[(4, 8, 9), float32]) */
}

def @func_5485() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), bool]) {
  %905 = @func_3930() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
  %906 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %907 = %905.3;
  %908 = cast(%907, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %909 = reshape(%908, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %910 = @func_1452(%909) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %911 = %906.0;
  %912 = %910.0;
  (%907, %911, %912)
}

def @func_14914() -> (Tensor[(4, 8, 9), uint8],) {
  %914 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %913 = @func_12775() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%913,)
  };
  %914() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_746() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  @func_744() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */
}

def @func_8863() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %919 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %915 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %916 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
    %917 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
    %918 = %915.0;
    (%916, %917, %918)
  };
  %919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_38() -> Tensor[(4, 8, 9), uint8] {
  @func_36() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_7220() -> Tensor[(4, 8, 9), uint8] {
  %921 = fn () -> Tensor[(4, 8, 9), uint8] {
    %920 = @func_5726() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %920.0
  };
  %921() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_8485(%var_8483: Tensor[(10, 1, 2), int8], %var_8484: Tensor[(10, 9, 2), int8]) -> (Tensor[(10, 9, 2), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %928 = fn (%var_8457: Tensor[(10, 1, 2), int8], %var_8458: Tensor[(10, 9, 2), int8]) -> (Tensor[(10, 9, 2), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %922 = cast(%var_8457, dtype="int8") /* ty=Tensor[(10, 1, 2), int8] */;
    %923 = cast(%var_8458, dtype="int8") /* ty=Tensor[(10, 9, 2), int8] */;
    %924 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %925 = maximum(%922, %923) /* ty=Tensor[(10, 9, 2), int8] */;
    %926 = %924.0;
    %927 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%925, %926, %927)
  };
  %928(%var_8483, %var_8484) /* ty=(Tensor[(10, 9, 2), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_4162() -> (Tensor[(4, 8, 9), uint8],) {
  %929 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %930 = %929.0;
  (%930,)
}

def @func_15440() -> (Tensor[(4, 8, 9), uint64],) {
  %931 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
  %932 = %931.0;
  (%932,)
}

def @func_5234() -> (Tensor[(4, 8, 9), uint8],) {
  @func_5232() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_13778() -> (Tensor[(720), int32],) {
  %935 = fn () -> (Tensor[(720), int32],) {
    %933 = @func_9451() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) */;
    %934 = %933.5;
    (%934,)
  };
  %935() /* ty=(Tensor[(720), int32],) */
}

def @func_9016() -> Tensor[(4, 8, 9), uint8] {
  @func_9014() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_9965() -> Tensor[(4, 8, 9), uint8] {
  @func_9963() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_15607() -> Tensor[(4, 8, 9), uint8] {
  @func_15605() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_549() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) {
  %947 = fn () -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) {
    %936 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %937 = %936.1;
    %938 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
    %939 = %938.1;
    %940 = cast(%939, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
    %941 = shape_of(%937, dtype="int32") /* ty=Tensor[(3), int32] */;
    %942 = cast(%937, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
    %943 = dyn.reshape(%940, %941, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %944 = cast(%939, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
    %945 = subtract(%942, %943) /* ty=Tensor[(4, 8, 9), uint64] */;
    %946 = log2(%944) /* ty=Tensor[(4, 8, 9), float64] */;
    (%945, %946)
  };
  %947() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */
}

def @func_11875() -> Tensor[(4, 8, 9), float64] {
  %949 = fn () -> Tensor[(4, 8, 9), float64] {
    %948 = @func_10288() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %948.0
  };
  %949() /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_4365() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_4363() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_3360() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %954 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
    %950 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
    %951 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %952 = %950.0;
    %953 = %951.0;
    (%952, %953)
  };
  %954() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */
}

def @func_816(%var_814: Tensor[(4, 8, 9), float64]) -> Tensor[(4, 8, 9), bool] {
  @func_813(%var_814) /* ty=Tensor[(4, 8, 9), bool] */
}

def @func_7214() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  %962 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
    %955 = @func_3930() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
    %956 = cast(meta[relay.Constant][37] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
    %957 = cast(meta[relay.Constant][37] /* ty=Tensor[(80), uint64] */, dtype="uint64") /* ty=Tensor[(80), uint64] */;
    %958 = reshape(%956, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
    %959 = reshape(%957, newshape=[4, 10, 2]) /* ty=Tensor[(4, 10, 2), uint64] */;
    %960 = %955.2;
    %961 = @func_89(%958, %959) /* ty=Tensor[(4, 10, 2), uint64] */;
    (%960, %961, meta[relay.Constant][37] /* ty=Tensor[(80), uint64] */)
  };
  %962() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */
}

def @func_7760(%var_7759: Tensor[(7, 5, 7), int16]) -> (Tensor[(7, 5, 7), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(110), float32], Tensor[(4, 8, 9), uint8]) {
  %976 = fn (%var_7714: Tensor[(7, 5, 7), int16]) -> (Tensor[(7, 5, 7), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(110), float32], Tensor[(4, 8, 9), uint8]) {
    %963 = cast(meta[relay.Constant][38] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %964 = cast(%var_7714, dtype="int16") /* ty=Tensor[(7, 5, 7), int16] */;
    %965 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %966 = cast(meta[relay.Constant][39] /* ty=Tensor[(110), float32] */, dtype="float32") /* ty=Tensor[(110), float32] */;
    %967 = reshape(%966, newshape=[110]) /* ty=Tensor[(110), float32] */;
    %968 = @func_6195(%967) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32]) */;
    %969 = %965.0;
    %970 = cast(%969, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %971 = reshape(%970, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %972 = @func_667(%971) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) */;
    %973 = multiply(%963, %964) /* ty=Tensor[(7, 5, 7), int16] */;
    %974 = %968.0;
    %975 = %972.0;
    (%973, %969, %974, meta[relay.Constant][39] /* ty=Tensor[(110), float32] */, %975)
  };
  %976(%var_7759) /* ty=(Tensor[(7, 5, 7), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(110), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_6144(%var_6105: Tensor[(11, 10, 12), float64]) -> (Tensor[(11, 10, 12), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %977 = cast(%var_6105, dtype="float64") /* ty=Tensor[(11, 10, 12), float64] */;
  %978 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %979 = sin(%977) /* ty=Tensor[(11, 10, 12), float64] */;
  %980 = %978.0;
  %981 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  (%979, %980, %981)
}

def @func_8906() -> (Tensor[(4, 8, 9), uint8],) {
  @func_8904() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_7608(%var_7606: Tensor[(48), int32], %var_7607: Tensor[(4, 180), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) {
  %998 = fn (%var_7584: Tensor[(48), int32], %var_7585: Tensor[(4, 180), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) {
    %982 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %983 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %984 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %985 = @func_6776() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
    %986 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %987 = cast(%var_7584, dtype="int32") /* ty=Tensor[(48), int32] */;
    %988 = cast(%var_7585, dtype="int32") /* ty=Tensor[(4, 180), int32] */;
    %989 = reshape(%987, newshape=[1, 6, 8]) /* ty=Tensor[(1, 6, 8), int32] */;
    %990 = reshape(%988, newshape=[15, 6, 8]) /* ty=Tensor[(15, 6, 8), int32] */;
    %991 = %982.0;
    %992 = %983.0;
    %993 = %984.0;
    %994 = @func_362() /* ty=Tensor[(4, 8, 9), uint8] */;
    %995 = %985.0;
    %996 = %986.0;
    %997 = @func_6336(%989, %990) /* ty=Tensor[(15, 6, 8), int32] */;
    (%991, %992, %993, %994, %995, %996, %997, %var_7584, %var_7585)
  };
  %998(%var_7606, %var_7607) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */
}

def @func_10498() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_10496() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_6003() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1002 = fn () -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %999 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1000 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
    %1001 = %999.0;
    (%1000, %1001)
  };
  %1002() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_9698() -> (Tensor[(12, 4, 16), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1003 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %1004 = cast(meta[relay.Constant][41] /* ty=Tensor[(12, 4, 16), uint32] */, dtype="uint32") /* ty=Tensor[(12, 4, 16), uint32] */;
  %1005 = bitwise_or(%1003, %1004) /* ty=Tensor[(12, 4, 16), uint32] */;
  %1006 = cast(%1005, dtype="float64") /* ty=Tensor[(12, 4, 16), float64] */;
  %1007 = cast(meta[relay.Constant][40] /* ty=uint32 */, dtype="float64") /* ty=float64 */;
  %1008 = @func_5538() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %1009 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1010 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1011 = floor_mod(%1006, %1007) /* ty=Tensor[(12, 4, 16), float64] */;
  %1012 = %1008.1;
  %1013 = %1009.1;
  %1014 = %1010.0;
  (%1011, %1012, %1013, %1014)
}

def @func_13820() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %1019 = fn () -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
    %1015 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %1016 = @func_8400() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1017 = %1015.0;
    %1018 = %1016.1;
    (%1017, %1018)
  };
  %1019() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */
}

def @func_15700(%var_15680: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  %1020 = @func_3492() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1021 = @func_7641() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
  %1022 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %1023 = @func_782() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1024 = cast(%var_15680, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1025 = cast(%var_15680, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1026 = reshape(%1024, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %1027 = reshape(%1025, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
  %1028 = @func_3435(%1026, %1027) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
  %1029 = %1020.0;
  %1030 = %1021.4;
  %1031 = %1022.2;
  %1032 = %1023.0;
  %1033 = %1028.0;
  (%1029, %1030, %1031, %1032, %1033, %var_15680)
}

def @func_16938() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1034 = @func_16551() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1035 = @func_15648() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1036 = %1034.0;
  (%1035, %1036)
}

def @func_3960() -> (Tensor[(4, 8, 9), float32],) {
  %1039 = fn () -> (Tensor[(4, 8, 9), float32],) {
    %1037 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
    %1038 = %1037.6;
    (%1038,)
  };
  %1039() /* ty=(Tensor[(4, 8, 9), float32],) */
}

def @func_10422() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) {
  %1040 = @func_8314() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %1041 = @func_9358() /* ty=Tensor[(4, 8, 9), int8] */;
  %1042 = %1040.0;
  (%1041, %1042)
}

def @func_11356(%var_11337: Tensor[(156), float64]) -> (Tensor[(11, 10, 10), float32], Tensor[(12, 1, 13), float64], Tensor[(156), float64]) {
  %1043 = @func_10094() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) */;
  %1044 = cast(%var_11337, dtype="float64") /* ty=Tensor[(156), float64] */;
  %1045 = reshape(%1044, newshape=[12, 1, 13]) /* ty=Tensor[(12, 1, 13), float64] */;
  %1046 = @func_6361(%1045) /* ty=(Tensor[(12, 1, 13), float64],) */;
  %1047 = %1043.0;
  %1048 = %1046.0;
  (%1047, %1048, %var_11337)
}

def @func_10980() -> (Tensor[(4, 8, 9), uint8],) {
  %1051 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %1049 = @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1050 = %1049.3;
    (%1050,)
  };
  %1051() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_3699() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1052 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1053 = @func_3025() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1054 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1055 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
  %1056 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1057 = %1052.1;
  %1058 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1059 = %1053.0;
  %1060 = %1054.0;
  %1061 = %1055.0;
  %1062 = %1056.3;
  (%1057, %1058, %1059, %1060, %1061, %1062)
}

def @func_15442() -> (Tensor[(4, 8, 9), uint64],) {
  @func_15440() /* ty=(Tensor[(4, 8, 9), uint64],) */
}

def @func_7180() -> (Tensor[(4, 8, 9), uint8],) {
  %1064 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %1063 = @func_6944() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%1063,)
  };
  %1064() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_3701() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_3438(%var_3436: Tensor[(9, 11, 6), float32], %var_3437: Tensor[(9, 11, 6), float32]) -> (Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) {
  %1075 = fn (%var_3408: Tensor[(9, 11, 6), float32], %var_3430: Tensor[(9, 11, 6), float32]) -> (Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) {
    %1065 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
    %1066 = cast(-0.022554f /* ty=float32 */, dtype="float32") /* ty=float32 */;
    %1067 = cast(%var_3408, dtype="float32") /* ty=Tensor[(9, 11, 6), float32] */;
    %1068 = power(%1066, %1067) /* ty=Tensor[(9, 11, 6), float32] */;
    %1069 = cast(%var_3430, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
    %1070 = shape_of(%1068, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1071 = cast(%1068, dtype="float64") /* ty=Tensor[(9, 11, 6), float64] */;
    %1072 = dyn.reshape(%1069, %1070, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %1073 = %1065.1;
    %1074 = mod(%1071, %1072) /* ty=Tensor[(9, 11, 6), float64] */;
    (%1073, %1074)
  };
  %1075(%var_3436, %var_3437) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */
}

def @func_7109() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  @func_7107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_2737() -> (Tensor[(4, 8, 9), float32],) {
  %1077 = fn () -> (Tensor[(4, 8, 9), float32],) {
    %1076 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
    (%1076,)
  };
  %1077() /* ty=(Tensor[(4, 8, 9), float32],) */
}

def @func_13894() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %1078 = @func_10496() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1079 = @func_3131() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1080 = %1078.2;
  %1081 = %1079.0;
  (%1080, %1081)
}

def @func_6610(%var_6609: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  %1092 = fn (%var_6603: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
    %1082 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
    %1083 = @func_3930() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) */;
    %1084 = cast(%var_6603, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1085 = cast(%var_6603, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1086 = reshape(%1084, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
    %1087 = reshape(%1085, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
    %1088 = @func_3435(%1086, %1087) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
    %1089 = %1082.1;
    %1090 = %1083.3;
    %1091 = %1088.0;
    (%1089, %1090, %1091, %var_6603)
  };
  %1092(%var_6609) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */
}

def @func_12174() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  @func_12172() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_1287() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_13730() -> (Tensor[(4, 8, 9), uint8],) {
  %1094 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %1093 = @func_11262() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%1093,)
  };
  %1094() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_1605() -> (Tensor[(4, 8, 9), uint8],) {
  @func_1603() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_10359() -> Tensor[(11, 10, 10), float32] {
  @func_10357() /* ty=Tensor[(11, 10, 10), float32] */
}

def @func_9452() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) {
  %1107 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) {
    %1095 = @func_5232() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1096 = cast(meta[relay.Constant][42] /* ty=Tensor[(48), int32] */, dtype="int32") /* ty=Tensor[(48), int32] */;
    %1097 = cast(meta[relay.Constant][43] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %1098 = reshape(%1096, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %1099 = reshape(%1097, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
    %1100 = @func_7605(%1098, %1099) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
    %1101 = @func_8523() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
    %1102 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
    %1103 = %1095.0;
    %1104 = @func_5639() /* ty=Tensor[(4, 8, 9), uint8] */;
    %1105 = %1100.3;
    %1106 = %1101.0;
    (%1102, %1103, %1104, %1105, meta[relay.Constant][42] /* ty=Tensor[(48), int32] */, meta[relay.Constant][43] /* ty=Tensor[(720), int32] */, %1106)
  };
  %1107() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8]) */
}

def @func_4960() -> (Tensor[(4, 8, 9), uint8],) {
  @func_4958() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_2865() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1108 = @func_2495() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1109 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1110 = %1108.0;
  %1111 = %1109.2;
  (%1110, %1111)
}

def @func_3108() -> Tensor[(4, 8, 9), uint8] {
  %1112 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1112.0
}

def @func_784() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_782() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_7107() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1113 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
  %1114 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1115 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1116 = @func_5070() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1117 = %1113.1;
  %1118 = %1114.0;
  %1119 = %1115.0;
  (%1116, %1117, %1118, %1119)
}

def @func_4686() -> Tensor[(4, 8, 9), uint8] {
  %1121 = fn () -> Tensor[(4, 8, 9), uint8] {
    %1120 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1120.0
  };
  %1121() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_1805(%var_1790: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint16], Tensor[(4, 8, 9), uint8]) {
  %1122 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1123 = cast(%var_1790, dtype="uint16") /* ty=Tensor[(4, 8, 9), uint16] */;
  %1124 = shape_of(%1122, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1125 = cast(%1122, dtype="uint16") /* ty=Tensor[(4, 8, 9), uint16] */;
  %1126 = dyn.reshape(%1123, %1124, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %1127 = @func_928() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1128 = bitwise_and(%1125, %1126) /* ty=Tensor[(4, 8, 9), uint16] */;
  %1129 = %1127.0;
  (%1128, %1129)
}

def @func_15581() -> (Tensor[(4, 8, 9), uint64],) {
  %1132 = fn () -> (Tensor[(4, 8, 9), uint64],) {
    %1130 = @func_15440() /* ty=(Tensor[(4, 8, 9), uint64],) */;
    %1131 = %1130.0;
    (%1131,)
  };
  %1132() /* ty=(Tensor[(4, 8, 9), uint64],) */
}

def @func_13503() -> (Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) {
  %1133 = @func_8958() /* ty=(Tensor[(4, 8, 9), bool],) */;
  %1134 = %1133.0;
  %1135 = @func_3816() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1134, %1135)
}

def @func_10424() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) {
  @func_10422() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) */
}

def @func_12474(%var_12473: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(594), float64]) {
  %1145 = fn (%var_12459: Tensor[(594), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(594), float64]) {
    %1136 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
    %1137 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
    %1138 = %1137.3;
    %1139 = cast(%var_12459, dtype="float64") /* ty=Tensor[(594), float64] */;
    %1140 = shape_of(%1138, dtype="int32") /* ty=Tensor[(1), int32] */;
    %1141 = cast(%1138, dtype="float64") /* ty=Tensor[(594), float64] */;
    %1142 = dyn.reshape(%1139, %1140, newshape=[]) /* ty=Tensor[(?), float64] */;
    %1143 = %1136.1;
    %1144 = floor_mod(%1141, %1142) /* ty=Tensor[(594), float64] */;
    (%1143, %1144)
  };
  %1145(%var_12473) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(594), float64]) */
}

def @func_12733() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  @func_12731() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */
}

def @func_1541() -> Tensor[(4, 8, 9), float32] {
  %1147 = fn () -> Tensor[(4, 8, 9), float32] {
    %1146 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %1146.0
  };
  %1147() /* ty=Tensor[(4, 8, 9), float32] */
}

def @func_4149() -> (Tensor[(4, 8, 9), int8],) {
  %1150 = fn () -> (Tensor[(4, 8, 9), int8],) {
    %1148 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
    %1149 = %1148.2;
    (%1149,)
  };
  %1150() /* ty=(Tensor[(4, 8, 9), int8],) */
}

def @func_5540() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  @func_5538() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */
}

def @func_12598() -> Tensor[(4, 8, 9), uint8] {
  @func_5639() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_3725(%var_3723: Tensor[(10, 15, 12), uint16], %var_3724: Tensor[(10, 15, 12), uint16]) -> (Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) {
  @func_3721(%var_3723, %var_3724) /* ty=(Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) */
}

def @func_7815(%var_7786: Tensor[(24, 2), int32], %var_7808: Tensor[(120), float32]) -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), int8], Tensor[(24, 2), int32], Tensor[(720), int32], Tensor[(4, 8, 9), uint8], Tensor[(12, 14, 13), bool], Tensor[(1092, 2), float64], Tensor[(120), float32], Tensor[(22, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1151 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %1152 = cast(%var_7786, dtype="int32") /* ty=Tensor[(24, 2), int32] */;
  %1153 = cast(meta[relay.Constant][44] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
  %1154 = reshape(%1152, newshape=[48]) /* ty=Tensor[(48), int32] */;
  %1155 = reshape(%1153, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
  %1156 = @func_7605(%1154, %1155) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
  %1157 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %1158 = cast(meta[relay.Constant][45] /* ty=Tensor[(1092, 2), float64] */, dtype="float64") /* ty=Tensor[(1092, 2), float64] */;
  %1159 = cast(%var_7808, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1160 = cast(meta[relay.Constant][46] /* ty=Tensor[(22, 5), float32] */, dtype="float32") /* ty=Tensor[(22, 5), float32] */;
  %1161 = reshape(%1158, newshape=[12, 14, 13]) /* ty=Tensor[(12, 14, 13), float64] */;
  %1162 = reshape(%1159, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %1163 = reshape(%1160, newshape=[110]) /* ty=Tensor[(110), float32] */;
  %1164 = @func_2704(%1161, %1162, %1163) /* ty=(Tensor[(12, 14, 13), bool], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), bool], Tensor[(110), float32], Tensor[(11, 10, 80), int32]) */;
  %1165 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1166 = %1151.0;
  %1167 = %1156.2;
  %1168 = %1157.0;
  %1169 = %1164.0;
  %1170 = %1165.0;
  %1171 = @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1166, %1167, %var_7786, meta[relay.Constant][44] /* ty=Tensor[(720), int32] */, %1168, %1169, meta[relay.Constant][45] /* ty=Tensor[(1092, 2), float64] */, %var_7808, meta[relay.Constant][46] /* ty=Tensor[(22, 5), float32] */, %1170, %1171)
}

def @func_3817() -> Tensor[(4, 8, 9), uint8] {
  %1173 = fn () -> Tensor[(4, 8, 9), uint8] {
    %1172 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1172.0
  };
  %1173() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_5781() -> Tensor[(4, 13, 15), float64] {
  %1174 = cast(meta[relay.Constant][47] /* ty=Tensor[(4, 13, 15), float64] */, dtype="float64") /* ty=Tensor[(4, 13, 15), float64] */;
  exp(%1174) /* ty=Tensor[(4, 13, 15), float64] */
}

def @func_670(%var_668: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) {
  @func_667(%var_668) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) */
}

def @func_2962() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1182 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
    %1175 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
    %1176 = @func_2736() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %1177 = %1176.0;
    %1178 = cast(%1177, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
    %1179 = %1175.1;
    %1180 = sigmoid(%1178) /* ty=Tensor[(4, 8, 9), float32] */;
    %1181 = @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%1179, %1180, %1181)
  };
  %1182() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_4363() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1183 = @func_3359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %1184 = @func_362() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1185 = %1183.0;
  (%1184, %1185)
}

def @func_10347() -> Tensor[(4, 8, 9), float64] {
  %1187 = fn () -> Tensor[(4, 8, 9), float64] {
    %1186 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
    %1186.1
  };
  %1187() /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_12311(%var_12310: Tensor[(48), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64], Tensor[(198, 3), float64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32]) {
  %1206 = fn (%var_12306: Tensor[(48), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64], Tensor[(198, 3), float64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32]) {
    %1188 = @func_6025() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1189 = @func_3604() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool], Tensor[(594), float32], Tensor[(594), float32]) */;
    %1190 = cast(meta[relay.Constant][48] /* ty=Tensor[(198, 3), float32] */, dtype="float32") /* ty=Tensor[(198, 3), float32] */;
    %1191 = cast(meta[relay.Constant][48] /* ty=Tensor[(198, 3), float32] */, dtype="float32") /* ty=Tensor[(198, 3), float32] */;
    %1192 = reshape(%1190, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
    %1193 = reshape(%1191, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
    %1194 = @func_3435(%1192, %1193) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
    %1195 = cast(meta[relay.Constant][48] /* ty=Tensor[(198, 3), float32] */, dtype="float64") /* ty=Tensor[(198, 3), float64] */;
    %1196 = cast(%var_12306, dtype="int32") /* ty=Tensor[(48), int32] */;
    %1197 = cast(meta[relay.Constant][49] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %1198 = reshape(%1196, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %1199 = reshape(%1197, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
    %1200 = @func_7605(%1198, %1199) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
    %1201 = %1188.0;
    %1202 = %1189.0;
    %1203 = %1194.1;
    %1204 = log10(%1195) /* ty=Tensor[(198, 3), float64] */;
    %1205 = %1200.3;
    (%1201, %1202, %1203, %1204, %1205, %var_12306, meta[relay.Constant][49] /* ty=Tensor[(720), int32] */)
  };
  %1206(%var_12310) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64], Tensor[(198, 3), float64], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(720), int32]) */
}

def @func_12776() -> Tensor[(4, 8, 9), uint8] {
  %1208 = fn () -> Tensor[(4, 8, 9), uint8] {
    %1207 = @func_10568() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) */;
    %1207.4
  };
  %1208() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_4464() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %1213 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
    %1209 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1210 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %1211 = %1209.0;
    %1212 = %1210.0;
    (%1211, %1212)
  };
  %1213() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */
}

def @func_13102(%var_13101: Tensor[(1800), uint16]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(1800), uint16]) {
  %1224 = fn (%var_13096: Tensor[(1800), uint16]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(1800), uint16]) {
    %1214 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1215 = @func_8958() /* ty=(Tensor[(4, 8, 9), bool],) */;
    %1216 = cast(%var_13096, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
    %1217 = cast(%var_13096, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
    %1218 = reshape(%1216, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
    %1219 = reshape(%1217, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
    %1220 = @func_3721(%1218, %1219) /* ty=(Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) */;
    %1221 = %1214.0;
    %1222 = %1215.0;
    %1223 = %1220.1;
    (%1221, %1222, %1223, %var_13096)
  };
  %1224(%var_13101) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(1800), uint16]) */
}

def @func_11057() -> (Tensor[(80), uint64], Tensor[(4, 8, 9), uint8]) {
  @func_11055() /* ty=(Tensor[(80), uint64], Tensor[(4, 8, 9), uint8]) */
}

def @func_15765() -> (Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), int8]) {
  @func_15763() /* ty=(Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), int8]) */
}

def @func_1764() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) {
  %1229 = fn () -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) {
    %1225 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %1226 = @func_1510() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %1227 = %1225.0;
    %1228 = %1226.0;
    (%1227, %1228)
  };
  %1229() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float32]) */
}

def @func_14492() -> (Tensor[(4, 8, 9), int8],) {
  @func_14490() /* ty=(Tensor[(4, 8, 9), int8],) */
}

def @func_17050() -> Tensor[(4, 8, 9), uint64] {
  %1230 = @func_10183() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32]) */;
  %1230.0
}

def @func_8231() -> Tensor[(4, 8, 9), int8] {
  %1232 = fn () -> Tensor[(4, 8, 9), int8] {
    %1231 = @func_6103() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
    %1231.2
  };
  %1232() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_2843() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_1203() -> (Tensor[(4, 8, 9), uint8],) {
  %1235 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %1233 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1234 = %1233.0;
    (%1234,)
  };
  %1235() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_10289() -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1242 = fn () -> (Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %1236 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
    %1237 = @func_8929() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(720), int32]) */;
    %1238 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1239 = %1236.2;
    %1240 = %1237.1;
    %1241 = %1238.0;
    (%1239, %1240, %1241)
  };
  %1242() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_16825() -> Tensor[(4, 8, 9), int8] {
  @func_16823() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_3492() -> (Tensor[(4, 8, 9), uint8],) {
  %1243 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1243,)
}

def @func_813(%var_806: Tensor[(4, 8, 9), float64]) -> Tensor[(4, 8, 9), bool] {
  %1244 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1245 = %1244.1;
  %1246 = cast(%var_806, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1247 = shape_of(%1245, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1248 = cast(%1245, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1249 = dyn.reshape(%1246, %1247, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  not_equal(%1248, %1249) /* ty=Tensor[(4, 8, 9), bool] */
}

def @func_9144() -> Tensor[(4, 8, 9), uint8] {
  %1250 = @func_7403() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
  %1250.0
}

def @func_9811(%var_9803: Tensor[(14, 14, 10), uint32], %var_9804: Tensor[(14, 14, 10), uint32]) -> (Tensor[(14, 14, 10), uint32], Tensor[(4, 8, 9), uint8]) {
  %1251 = cast(%var_9804, dtype="uint32") /* ty=Tensor[(14, 14, 10), uint32] */;
  %1252 = shape_of(%var_9803, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1253 = cast(%var_9803, dtype="uint32") /* ty=Tensor[(14, 14, 10), uint32] */;
  %1254 = dyn.reshape(%1251, %1252, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1255 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1256 = right_shift(%1253, %1254) /* ty=Tensor[(14, 14, 10), uint32] */;
  %1257 = %1255.0;
  (%1256, %1257)
}

def @func_6026() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1262 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %1258 = @func_5603() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1259 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1260 = %1258.0;
    %1261 = %1259.0;
    (%1260, %1261)
  };
  %1262() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_11274() -> Tensor[(4, 8, 9), uint8] {
  %1263 = fn () -> Tensor[(4, 8, 9), uint8] {
    @func_9552() /* ty=Tensor[(4, 8, 9), uint8] */
  };
  %1263() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_12731() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %1264 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1265 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %1266 = %1264.1;
  %1267 = %1265.0;
  (%1266, %1267)
}

def @func_14394(%var_14392: Tensor[(2, 4, 12), float32]) -> Tensor[(2, 4, 12), float32] {
  @func_14391(%var_14392) /* ty=Tensor[(2, 4, 12), float32] */
}

def @func_15763() -> (Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), int8]) {
  %1268 = @func_7262() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1269 = @func_15345() /* ty=Tensor[(4, 8, 9), bool] */;
  %1270 = %1268.0;
  (%1269, %1270)
}

def @func_8930() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(720), int32]) {
  %1277 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(720), int32]) {
    %1271 = @func_411() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1272 = cast(meta[relay.Constant][50] /* ty=Tensor[(720), int32] */, dtype="int32") /* ty=Tensor[(720), int32] */;
    %1273 = reshape(%1272, newshape=[720]) /* ty=Tensor[(720), int32] */;
    %1274 = @func_8183(%1273) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) */;
    %1275 = %1271.0;
    %1276 = %1274.2;
    (%1275, %1276, meta[relay.Constant][50] /* ty=Tensor[(720), int32] */)
  };
  %1277() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(720), int32]) */
}

def @func_219() -> (Tensor[(4, 8, 9), uint8],) {
  %1278 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %1279 = %1278.2;
  (%1279,)
}

def @func_389() -> (Tensor[(4, 8, 9), uint8],) {
  @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_2029() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */
}

def @func_14427() -> Tensor[(4, 8, 9), int8] {
  %1281 = fn () -> Tensor[(4, 8, 9), int8] {
    %1280 = @func_5868() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %1280.0
  };
  %1281() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_5726() -> (Tensor[(4, 8, 9), uint8],) {
  %1282 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1283 = %1282.0;
  (%1283,)
}

def @func_11004() -> (Tensor[(4, 10, 2), uint64],) {
  %1286 = fn () -> (Tensor[(4, 10, 2), uint64],) {
    %1284 = @func_8795() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
    %1285 = %1284.1;
    (%1285,)
  };
  %1286() /* ty=(Tensor[(4, 10, 2), uint64],) */
}

def @func_11097(%var_11095: Tensor[(5, 12, 5), uint32], %var_11096: Tensor[(5, 12, 5), uint32]) -> (Tensor[(5, 12, 5), uint32], Tensor[(4, 8, 9), uint8], Tensor[(16, 15, 3), uint64], Tensor[(720), uint64]) {
  @func_11093(%var_11095, %var_11096) /* ty=(Tensor[(5, 12, 5), uint32], Tensor[(4, 8, 9), uint8], Tensor[(16, 15, 3), uint64], Tensor[(720), uint64]) */
}

def @func_16090() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 13, 16), float32], Tensor[(1248), float32]) {
  @func_16088() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 13, 16), float32], Tensor[(1248), float32]) */
}

def @func_14861() -> Tensor[(4, 8, 9), int8] {
  %1287 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
  %1287.0
}

def @func_10829() -> (Tensor[(4, 8, 9), float64],) {
  @func_10827() /* ty=(Tensor[(4, 8, 9), float64],) */
}

def @func_16359() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float64]) {
  %1288 = @func_15785() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %1289 = @func_10422() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), float64]) */;
  %1290 = @func_6944() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1291 = %1288.0;
  %1292 = %1289.1;
  (%1290, %1291, %1292)
}

def @func_6378() -> Tensor[(4, 8, 9), float32] {
  %1294 = fn () -> Tensor[(4, 8, 9), float32] {
    %1293 = @func_1285() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1293.0
  };
  %1294() /* ty=Tensor[(4, 8, 9), float32] */
}

def @func_15170() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  @func_15168() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */
}

def @func_198() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */
}

def @func_6147(%var_6145: Tensor[(11, 10, 12), float64]) -> (Tensor[(11, 10, 12), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  @func_6144(%var_6145) /* ty=(Tensor[(11, 10, 12), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */
}

def @func_5071() -> Tensor[(4, 8, 9), uint8] {
  %1296 = fn () -> Tensor[(4, 8, 9), uint8] {
    %1295 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1295.2
  };
  %1296() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_15605() -> Tensor[(4, 8, 9), uint8] {
  %1297 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1297.0
}

def @func_12340(%var_12338: Tensor[(16, 14, 5), uint32]) -> Tensor[(16, 14, 5), float32] {
  @func_12337(%var_12338) /* ty=Tensor[(16, 14, 5), float32] */
}

def @func_16361() -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float64]) {
  @func_16359() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float64]) */
}

def @func_3329(%var_3327: Tensor[(6, 2, 13), int16], %var_3328: Tensor[(6, 2, 13), int16]) -> Tensor[(6, 2, 13), int16] {
  %1302 = fn (%var_3318: Tensor[(6, 2, 13), int16], %var_3319: Tensor[(6, 2, 13), int16]) -> Tensor[(6, 2, 13), int16] {
    %1298 = cast(%var_3319, dtype="int16") /* ty=Tensor[(6, 2, 13), int16] */;
    %1299 = shape_of(%var_3318, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1300 = cast(%var_3318, dtype="int16") /* ty=Tensor[(6, 2, 13), int16] */;
    %1301 = dyn.reshape(%1298, %1299, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    minimum(%1300, %1301) /* ty=Tensor[(6, 2, 13), int16] */
  };
  %1302(%var_3327, %var_3328) /* ty=Tensor[(6, 2, 13), int16] */
}

def @func_4632(%var_4630: Tensor[(1, 110), float32], %var_4631: Tensor[(15, 110), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(15, 110), int32], Tensor[(?, 110), bool], Tensor[(?, 110), float64]) {
  %1336 = fn (%var_4519: Tensor[(1, 110), float32], %var_4590: Tensor[(15, 110), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(15, 110), int32], Tensor[(?, 110), bool], Tensor[(?, 110), float64]) {
    %1303 = cast(%var_4519, dtype="float32") /* ty=Tensor[(1, 110), float32] */;
    %1304 = reshape(%1303, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
    %1305 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1306 = @func_2027() /* ty=(Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */;
    %1307 = cast(%var_4519, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
    %1308 = atan(%1307) /* ty=Tensor[(1, 110), float64] */;
    %1309 = cast(%1308, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
    %1310 = asin(%1309) /* ty=Tensor[(1, 110), float64] */;
    %1311 = cast(%1310, dtype="float32") /* ty=Tensor[(1, 110), float32] */;
    %1312 = shape_of(%1308, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1313 = cast(%1308, dtype="float32") /* ty=Tensor[(1, 110), float32] */;
    %1314 = dyn.reshape(%1311, %1312, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
    %1315 = floor_mod(%1313, %1314) /* ty=Tensor[(?, 110), float32] */;
    %1316 = cast(%1315, dtype="float64") /* ty=Tensor[(?, 110), float64] */;
    %1317 = tan(%1316) /* ty=Tensor[(?, 110), float64] */;
    %1318 = cast(%1317, dtype="int32") /* ty=Tensor[(?, 110), int32] */;
    %1319 = cast(%var_4590, dtype="int32") /* ty=Tensor[(15, 110), int32] */;
    %1320 = cast(%1315, dtype="bool") /* ty=Tensor[(?, 110), bool] */;
    %1321 = shape_of(%1317, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1322 = cast(%1317, dtype="bool") /* ty=Tensor[(?, 110), bool] */;
    %1323 = dyn.reshape(%1320, %1321, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %1324 = cast(%1315, dtype="float64") /* ty=Tensor[(?, 110), float64] */;
    %1325 = shape_of(%1310, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1326 = cast(%1310, dtype="float64") /* ty=Tensor[(1, 110), float64] */;
    %1327 = dyn.reshape(%1324, %1325, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %1328 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
    %1329 = @func_2352(%1304) /* ty=Tensor[(11, 10, 1), float32] */;
    %1330 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
    %1331 = %1305.0;
    %1332 = %1306.0;
    %1333 = bitwise_or(%1318, %1319) /* ty=Tensor[(15, 110), int32] */;
    %1334 = equal(%1322, %1323) /* ty=Tensor[(?, 110), bool] */;
    %1335 = floor_divide(%1326, %1327) /* ty=Tensor[(?, 110), float64] */;
    (%1328, %1329, %1330, %1331, %1332, %1333, %1334, %1335)
  };
  %1336(%var_4630, %var_4631) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(15, 110), int32], Tensor[(?, 110), bool], Tensor[(?, 110), float64]) */
}

def @func_13942() -> (Tensor[(4, 8, 9), uint8],) {
  @func_13940() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_9928() -> Tensor[(4, 8, 9), uint8] {
  %1337 = fn () -> Tensor[(4, 8, 9), uint8] {
    @func_607() /* ty=Tensor[(4, 8, 9), uint8] */
  };
  %1337() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_7351(%var_7350: Tensor[(4, 10, 2), float32]) -> (Tensor[(4, 10, 2), float32],) {
  %1341 = fn (%var_7344: Tensor[(4, 10, 2), float32]) -> (Tensor[(4, 10, 2), float32],) {
    %1338 = cast(meta[relay.Constant][51] /* ty=Tensor[(4, 1, 2), float32] */, dtype="float32") /* ty=Tensor[(4, 1, 2), float32] */;
    %1339 = cast(%var_7344, dtype="float32") /* ty=Tensor[(4, 10, 2), float32] */;
    %1340 = floor_divide(%1338, %1339) /* ty=Tensor[(4, 10, 2), float32] */;
    (%1340,)
  };
  %1341(%var_7350) /* ty=(Tensor[(4, 10, 2), float32],) */
}

def @func_5538() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %1342 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1343 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1344 = @func_3959() /* ty=(Tensor[(4, 8, 9), float32],) */;
  %1345 = %1342.1;
  %1346 = %1343.0;
  %1347 = %1344.0;
  (%1345, %1346, %1347)
}

def @func_15532() -> (Tensor[(4, 8, 9), uint8],) {
  @func_15530() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_7641() -> (Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  %1348 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %1349 = @func_2322() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %1350 = @func_4363() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1351 = cast(meta[relay.Constant][52] /* ty=Tensor[(594), float32] */, dtype="float32") /* ty=Tensor[(594), float32] */;
  %1352 = reshape(%1351, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %1353 = @func_6608(%1352) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */;
  %1354 = %1348.0;
  %1355 = %1349.0;
  %1356 = @func_5410() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1357 = %1350.0;
  %1358 = %1353.2;
  (%1354, %1355, %1356, %1357, %1358, meta[relay.Constant][52] /* ty=Tensor[(594), float32] */)
}

def @func_16427(%var_16413: Tensor[(120), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(2, 6, 8), float32], Tensor[(80, 96), int16]) {
  %1359 = @func_11416() /* ty=(Tensor[(4, 8, 9), bool],) */;
  %1360 = @func_16088() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 13, 16), float32], Tensor[(1248), float32]) */;
  %1361 = cast(%var_16413, dtype="float32") /* ty=Tensor[(120), float32] */;
  %1362 = cast(meta[relay.Constant][53] /* ty=Tensor[(80, 1), uint64] */, dtype="uint64") /* ty=Tensor[(80, 1), uint64] */;
  %1363 = reshape(%1361, newshape=[120]) /* ty=Tensor[(120), float32] */;
  %1364 = reshape(%1362, newshape=[80]) /* ty=Tensor[(80), uint64] */;
  %1365 = @func_1999(%1363, %1364) /* ty=(Tensor[(4, 8, 9), int8], Tensor[(2, 15, 4), float32], Tensor[(120), float32], Tensor[(80), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1366 = cast(meta[relay.Constant][54] /* ty=Tensor[(96), float32] */, dtype="float32") /* ty=Tensor[(96), float32] */;
  %1367 = reshape(%1366, newshape=[2, 6, 8]) /* ty=Tensor[(2, 6, 8), float32] */;
  %1368 = @func_5111(%1367) /* ty=(Tensor[(2, 6, 8), float32],) */;
  %1369 = cast(meta[relay.Constant][54] /* ty=Tensor[(96), float32] */, dtype="int16") /* ty=Tensor[(96), int16] */;
  %1370 = cast(meta[relay.Constant][53] /* ty=Tensor[(80, 1), uint64] */, dtype="int16") /* ty=Tensor[(80, 1), int16] */;
  %1371 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1372 = %1359.0;
  %1373 = %1360.1;
  %1374 = %1365.5;
  %1375 = %1368.0;
  %1376 = right_shift(%1369, %1370) /* ty=Tensor[(80, 96), int16] */;
  (%1371, %1372, %1373, %1374, %var_16413, %1375, %1376)
}

def @func_8296(%var_8295: Tensor[(1800), uint16]) -> (Tensor[(4, 8, 9), float32], Tensor[(1800), uint16], Tensor[(4, 20), uint32], Tensor[(4, 8, 9), float32]) {
  %1393 = fn (%var_8271: Tensor[(1800), uint16]) -> (Tensor[(4, 8, 9), float32], Tensor[(1800), uint16], Tensor[(4, 20), uint32], Tensor[(4, 8, 9), float32]) {
    %1377 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1378 = cast(%var_8271, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
    %1379 = cast(%var_8271, dtype="uint16") /* ty=Tensor[(1800), uint16] */;
    %1380 = reshape(%1378, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
    %1381 = reshape(%1379, newshape=[10, 15, 12]) /* ty=Tensor[(10, 15, 12), uint16] */;
    %1382 = @func_3721(%1380, %1381) /* ty=(Tensor[(10, 15, 12), bool], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(4, 20), uint64]) */;
    %1383 = %1382.3;
    %1384 = cast(%1383, dtype="float64") /* ty=Tensor[(4, 20), float64] */;
    %1385 = log(%1384) /* ty=Tensor[(4, 20), float64] */;
    %1386 = cast(%1383, dtype="uint32") /* ty=Tensor[(4, 20), uint32] */;
    %1387 = shape_of(%1385, dtype="int32") /* ty=Tensor[(2), int32] */;
    %1388 = cast(%1385, dtype="uint32") /* ty=Tensor[(4, 20), uint32] */;
    %1389 = dyn.reshape(%1386, %1387, newshape=[]) /* ty=Tensor[(?, ?), uint32] */;
    %1390 = %1377.1;
    %1391 = logical_xor(%1388, %1389) /* ty=Tensor[(4, 20), uint32] */;
    %1392 = @func_6377() /* ty=Tensor[(4, 8, 9), float32] */;
    (%1390, %var_8271, %1391, %1392)
  };
  %1393(%var_8295) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(1800), uint16], Tensor[(4, 20), uint32], Tensor[(4, 8, 9), float32]) */
}

def @func_840(%var_829: Tensor[(8, 10, 16), float64]) -> (Tensor[(8, 10, 16), float64], Tensor[(4, 8, 9), uint8]) {
  %1394 = cast(%var_829, dtype="float64") /* ty=Tensor[(8, 10, 16), float64] */;
  %1395 = @func_484() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */;
  %1396 = acosh(%1394) /* ty=Tensor[(8, 10, 16), float64] */;
  %1397 = %1395.1;
  (%1396, %1397)
}

def @func_6195(%var_6185: Tensor[(110), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 1), float32], Tensor[(110), float32]) {
  %1398 = cast(%var_6185, dtype="float32") /* ty=Tensor[(110), float32] */;
  %1399 = reshape(%1398, newshape=[11, 10, 1]) /* ty=Tensor[(11, 10, 1), float32] */;
  %1400 = @func_5639() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1401 = @func_2352(%1399) /* ty=Tensor[(11, 10, 1), float32] */;
  (%1400, %1401, %var_6185)
}

def @func_10096() -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) {
  @func_10094() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), int8]) */
}

def @func_4942() -> (Tensor[(11, 10, 10), float32],) {
  %1402 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %1403 = %1402.0;
  (%1403,)
}

def @func_8610() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_8608() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_14311() -> (Tensor[(4, 8, 9), uint8],) {
  %1406 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %1404 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1405 = %1404.3;
    (%1405,)
  };
  %1406() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_11093(%var_11071: Tensor[(5, 12, 5), uint32], %var_11072: Tensor[(5, 12, 5), uint32]) -> (Tensor[(5, 12, 5), uint32], Tensor[(4, 8, 9), uint8], Tensor[(16, 15, 3), uint64], Tensor[(720), uint64]) {
  %1407 = cast(%var_11072, dtype="uint32") /* ty=Tensor[(5, 12, 5), uint32] */;
  %1408 = shape_of(%var_11071, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1409 = cast(%var_11071, dtype="uint32") /* ty=Tensor[(5, 12, 5), uint32] */;
  %1410 = dyn.reshape(%1407, %1408, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %1411 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1412 = cast(meta[relay.Constant][55] /* ty=Tensor[(720), uint64] */, dtype="uint64") /* ty=Tensor[(720), uint64] */;
  %1413 = reshape(%1412, newshape=[16, 15, 3]) /* ty=Tensor[(16, 15, 3), uint64] */;
  %1414 = add(%1409, %1410) /* ty=Tensor[(5, 12, 5), uint32] */;
  %1415 = %1411.0;
  %1416 = @func_9264(%1413) /* ty=Tensor[(16, 15, 3), uint64] */;
  (%1414, %1415, %1416, meta[relay.Constant][55] /* ty=Tensor[(720), uint64] */)
}

def @func_1504() -> Tensor[(4, 8, 9), uint8] {
  @func_1502() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_4765() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1417 = @func_2961() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1418 = @func_2865() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1419 = @func_3816() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1420 = %1417.2;
  %1421 = %1418.0;
  (%1419, %1420, %1421)
}

def @func_16940() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_16938() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_5868() -> (Tensor[(4, 8, 9), int8],) {
  %1422 = @func_898() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1423 = %1422.0;
  (%1423,)
}

def @func_9484(%var_9464: Tensor[(3, 10, 5), uint64]) -> (Tensor[(3, 10, 5), uint64],) {
  %1424 = cast(meta[relay.Constant][56] /* ty=Tensor[(3, 10, 5), uint64] */, dtype="uint64") /* ty=Tensor[(3, 10, 5), uint64] */;
  %1425 = shape_of(%var_9464, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1426 = cast(%var_9464, dtype="uint64") /* ty=Tensor[(3, 10, 5), uint64] */;
  %1427 = dyn.reshape(%1424, %1425, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  %1428 = subtract(%1426, %1427) /* ty=Tensor[(3, 10, 5), uint64] */;
  (%1428,)
}

def @func_196() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %1429 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1430 = cast(%1429, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %1431 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1432 = asin(%1430) /* ty=Tensor[(4, 8, 9), float64] */;
  %1433 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1431, %1432, %1433)
}

def @func_10568() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) {
  %1434 = @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1435 = %1434.0;
  %1436 = cast(%1435, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1437 = reshape(%1436, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1438 = @func_1452(%1437) /* ty=(Tensor[(4, 8, 9), bool],) */;
  %1439 = cast(meta[relay.Constant][57] /* ty=Tensor[(66, 9), float32] */, dtype="float32") /* ty=Tensor[(66, 9), float32] */;
  %1440 = cast(%1435, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %1441 = reshape(%1439, newshape=[594]) /* ty=Tensor[(594), float32] */;
  %1442 = reshape(%1440, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float32] */;
  %1443 = @func_3537(%1441, %1442) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) */;
  %1444 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1445 = @func_5485() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), bool]) */;
  %1446 = cast(meta[relay.Constant][58] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %1447 = cast(meta[relay.Constant][58] /* ty=Tensor[(156), int16] */, dtype="int16") /* ty=Tensor[(156), int16] */;
  %1448 = reshape(%1446, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), int16] */;
  %1449 = reshape(%1447, newshape=[6, 2, 13]) /* ty=Tensor[(6, 2, 13), int16] */;
  %1450 = %1438.0;
  %1451 = %1443.2;
  %1452 = %1444.0;
  %1453 = %1445.0;
  %1454 = @func_3326(%1448, %1449) /* ty=Tensor[(6, 2, 13), int16] */;
  (%1435, %1450, %1451, meta[relay.Constant][57] /* ty=Tensor[(66, 9), float32] */, %1452, %1453, %1454, meta[relay.Constant][58] /* ty=Tensor[(156), int16] */)
}

def @func_2197(%var_2195: Tensor[(1280), float64]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(1280), float64], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) {
  @func_2194(%var_2195) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(1280), float64], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */
}

def @func_93(%var_91: Tensor[(4, 10, 2), uint64], %var_92: Tensor[(4, 10, 2), uint64]) -> Tensor[(4, 10, 2), uint64] {
  @func_89(%var_91, %var_92) /* ty=Tensor[(4, 10, 2), uint64] */
}

def @func_8186(%var_8184: Tensor[(720), int32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) {
  @func_8183(%var_8184) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(720), int32]) */
}

def @func_5330() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool]) {
  %1465 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool]) {
    %1455 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1456 = %1455.0;
    %1457 = cast(%1456, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %1458 = reshape(%1457, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %1459 = @func_3001(%1458) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1460 = cast(%1456, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
    %1461 = reshape(%1460, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
    %1462 = @func_1452(%1461) /* ty=(Tensor[(4, 8, 9), bool],) */;
    %1463 = %1459.1;
    %1464 = %1462.0;
    (%1456, %1463, %1464)
  };
  %1465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), bool]) */
}

def @func_6482(%var_6481: Tensor[(9, 16, 3), int64]) -> Tensor[(9, 16, 3), int64] {
  %1470 = fn (%var_6472: Tensor[(9, 16, 3), int64]) -> Tensor[(9, 16, 3), int64] {
    %1466 = cast(meta[relay.Constant][59] /* ty=Tensor[(9, 16, 3), int64] */, dtype="int64") /* ty=Tensor[(9, 16, 3), int64] */;
    %1467 = shape_of(%var_6472, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1468 = cast(%var_6472, dtype="int64") /* ty=Tensor[(9, 16, 3), int64] */;
    %1469 = dyn.reshape(%1466, %1467, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    logical_xor(%1468, %1469) /* ty=Tensor[(9, 16, 3), int64] */
  };
  %1470(%var_6481) /* ty=Tensor[(9, 16, 3), int64] */
}

def @func_7643() -> (Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) {
  @func_7641() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(594), float32]) */
}

def @func_89(%var_70: Tensor[(4, 10, 2), uint64], %var_71: Tensor[(4, 10, 2), uint64]) -> Tensor[(4, 10, 2), uint64] {
  %1471 = cast(%var_71, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %1472 = shape_of(%var_70, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1473 = cast(%var_70, dtype="uint64") /* ty=Tensor[(4, 10, 2), uint64] */;
  %1474 = dyn.reshape(%1471, %1472, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%1473, %1474) /* ty=Tensor[(4, 10, 2), uint64] */
}

def @func_13446() -> Tensor[(11, 10, 10), float32] {
  %1476 = fn () -> Tensor[(11, 10, 10), float32] {
    %1475 = @func_12731() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
    %1475.1
  };
  %1476() /* ty=Tensor[(11, 10, 10), float32] */
}

def @func_13827() -> (Tensor[(4, 8, 9), uint8],) {
  %1477 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1478 = %1477.1;
  (%1478,)
}

def @func_5347(%var_5346: uint16) -> (Tensor[(11, 2, 11), bool], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
  %1486 = fn (%var_5331: uint16) -> (Tensor[(11, 2, 11), bool], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) {
    %1479 = cast(%var_5331, dtype="bool") /* ty=bool */;
    %1480 = cast(meta[relay.Constant][60] /* ty=Tensor[(11, 2, 11), uint16] */, dtype="bool") /* ty=Tensor[(11, 2, 11), bool] */;
    %1481 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1482 = @func_1171() /* ty=(Tensor[(11, 10, 10), float32],) */;
    %1483 = less(%1479, %1480) /* ty=Tensor[(11, 2, 11), bool] */;
    %1484 = %1481.1;
    %1485 = %1482.0;
    (%1483, %1484, %1485)
  };
  %1486(%var_5346) /* ty=(Tensor[(11, 2, 11), bool], Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */
}

def @func_13590() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %1492 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
    %1487 = @func_7262() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %1488 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1489 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
    %1490 = %1487.0;
    %1491 = %1488.0;
    (%1489, %1490, %1491)
  };
  %1492() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) */
}

def @func_14353() -> Tensor[(4, 8, 9), uint8] {
  %1493 = @func_4162() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1493.0
}

def @func_9487(%var_9485: Tensor[(3, 10, 5), uint64]) -> (Tensor[(3, 10, 5), uint64],) {
  @func_9484(%var_9485) /* ty=(Tensor[(3, 10, 5), uint64],) */
}

def @func_8115() -> (Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8]) {
  %1494 = @func_7262() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1495 = @func_6980() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1496 = %1494.0;
  %1497 = %1495.1;
  (%1496, %1497)
}

def @func_8608() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1498 = @func_3190() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(80), uint64], Tensor[(1280), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1499 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1500 = @func_4958() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1501 = %1498.3;
  %1502 = @func_8230() /* ty=Tensor[(4, 8, 9), int8] */;
  %1503 = %1499.0;
  %1504 = %1500.0;
  (%1501, %1502, %1503, %1504)
}

def @func_12025() -> (Tensor[(10, 13, 12), float32],) {
  %1507 = fn () -> (Tensor[(10, 13, 12), float32],) {
    %1505 = cast(meta[relay.Constant][61] /* ty=Tensor[(10, 13, 12), float32] */, dtype="float32") /* ty=Tensor[(10, 13, 12), float32] */;
    %1506 = cos(%1505) /* ty=Tensor[(10, 13, 12), float32] */;
    (%1506,)
  };
  %1507() /* ty=(Tensor[(10, 13, 12), float32],) */
}

def @func_12927() -> Tensor[(4, 8, 9), uint8] {
  %1508 = fn () -> Tensor[(4, 8, 9), uint8] {
    @func_9664() /* ty=Tensor[(4, 8, 9), uint8] */
  };
  %1508() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_5232() -> (Tensor[(4, 8, 9), uint8],) {
  %1509 = @func_579() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1510 = %1509.0;
  (%1510,)
}

def @func_9963() -> Tensor[(4, 8, 9), uint8] {
  %1511 = @func_1202() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1511.0
}

def @func_16500(%var_16464: Tensor[(1, 16, 11), int64]) -> (Tensor[(1, 16, 11), int64], Tensor[(4, 8, 9), float32]) {
  %1512 = cast(5 /* ty=int64 */, dtype="int64") /* ty=int64 */;
  %1513 = cast(%var_16464, dtype="int64") /* ty=Tensor[(1, 16, 11), int64] */;
  %1514 = @func_8833() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1515 = bitwise_xor(%1512, %1513) /* ty=Tensor[(1, 16, 11), int64] */;
  %1516 = %1514.1;
  (%1515, %1516)
}

def @func_919() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1517 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %1518 = %1517.0;
  %1519 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1518, %1519)
}

def @func_10248() -> Tensor[(4, 8, 9), float64] {
  @func_10246() /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_15393() -> (Tensor[(4, 8, 9), uint8],) {
  %1522 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %1520 = @func_4027() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1521 = %1520.0;
    (%1521,)
  };
  %1522() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @main(%var_17234: Tensor[(10, 15, 7), float64], %var_17235: Tensor[(10, 15, 7), float64]) -> Tensor[(10, 15, 7), float64] {
  %1523 = cast(%var_17235, dtype="float64") /* ty=Tensor[(10, 15, 7), float64] */;
  %1524 = shape_of(%var_17234, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1525 = cast(%var_17234, dtype="float64") /* ty=Tensor[(10, 15, 7), float64] */;
  %1526 = dyn.reshape(%1523, %1524, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  divide(%1525, %1526) /* ty=Tensor[(10, 15, 7), float64] */
}

def @func_9359() -> Tensor[(4, 8, 9), int8] {
  %1528 = fn () -> Tensor[(4, 8, 9), int8] {
    %1527 = @func_7659() /* ty=(Tensor[(4, 8, 9), int8],) */;
    %1527.0
  };
  %1528() /* ty=Tensor[(4, 8, 9), int8] */
}

def @func_5410() -> Tensor[(4, 8, 9), uint8] {
  %1529 = @func_1699() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) */;
  %1529.2
}

def @func_5604() -> (Tensor[(4, 8, 9), uint8],) {
  %1532 = fn () -> (Tensor[(4, 8, 9), uint8],) {
    %1530 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1531 = %1530.0;
    (%1531,)
  };
  %1532() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_6361(%var_6351: Tensor[(12, 1, 13), float64]) -> (Tensor[(12, 1, 13), float64],) {
  %1533 = cast(%var_6351, dtype="float64") /* ty=Tensor[(12, 1, 13), float64] */;
  %1534 = exp(%1533) /* ty=Tensor[(12, 1, 13), float64] */;
  (%1534,)
}

def @func_6778() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) {
  @func_6776() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8]) */
}

def @func_10357() -> Tensor[(11, 10, 10), float32] {
  %1535 = @func_4942() /* ty=(Tensor[(11, 10, 10), float32],) */;
  %1535.0
}

def @func_9553() -> Tensor[(4, 8, 9), uint8] {
  %1537 = fn () -> Tensor[(4, 8, 9), uint8] {
    %1536 = @func_2465() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
    %1536.1
  };
  %1537() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_15786() -> (Tensor[(11, 10, 10), float32],) {
  %1539 = fn () -> (Tensor[(11, 10, 10), float32],) {
    %1538 = @func_13445() /* ty=Tensor[(11, 10, 10), float32] */;
    (%1538,)
  };
  %1539() /* ty=(Tensor[(11, 10, 10), float32],) */
}

def @func_2094(%var_2072: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), bool],) {
  %1540 = @func_1540() /* ty=Tensor[(4, 8, 9), float32] */;
  %1541 = cast(%var_2072, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1542 = shape_of(%1540, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1543 = cast(%1540, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1544 = dyn.reshape(%1541, %1542, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1545 = equal(%1543, %1544) /* ty=Tensor[(4, 8, 9), bool] */;
  (%1545,)
}

def @func_5027() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1546 = @func_4765() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1547 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1548 = @func_1897() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1549 = %1546.0;
  (%1547, %1548, %1549)
}

def @func_5981() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  %1550 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
  %1551 = %1550.0;
  %1552 = cast(%1551, dtype="uint8") /* ty=Tensor[(4, 8, 9), uint8] */;
  %1553 = reshape(%1552, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), uint8] */;
  %1554 = @func_3001(%1553) /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
  %1555 = @func_5232() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1556 = %1554.1;
  %1557 = %1555.0;
  (%1551, %1556, %1557)
}

def @func_7954() -> Tensor[(4, 8, 9), uint8] {
  %1559 = fn () -> Tensor[(4, 8, 9), uint8] {
    %1558 = @func_6562() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1558.1
  };
  %1559() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_9700() -> (Tensor[(12, 4, 16), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_9698() /* ty=(Tensor[(12, 4, 16), float64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_10050() -> Tensor[(4, 8, 9), float64] {
  %1561 = fn () -> Tensor[(4, 8, 9), float64] {
    %1560 = @func_8314() /* ty=(Tensor[(4, 8, 9), float64],) */;
    %1560.0
  };
  %1561() /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_782() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1562 = @func_196() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) */;
  %1563 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1564 = %1562.2;
  %1565 = %1563.0;
  (%1564, %1565)
}

def @func_13896() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  @func_13894() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */
}

def @func_12653() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  @func_12651() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_15101(%var_15091: float64, %var_15092: Tensor[(60, 1), float64]) -> (Tensor[(4, 8, 9), int8], Tensor[(7, 12, 5), bool], float64, Tensor[(60, 1), float64], Tensor[(420), float64]) {
  %1566 = @func_4463() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) */;
  %1567 = cast(%var_15091, dtype="float64") /* ty=float64 */;
  %1568 = cast(%var_15092, dtype="float64") /* ty=Tensor[(60, 1), float64] */;
  %1569 = cast(meta[relay.Constant][62] /* ty=Tensor[(420), float64] */, dtype="float64") /* ty=Tensor[(420), float64] */;
  %1570 = reshape(%1567, newshape=[]) /* ty=float64 */;
  %1571 = reshape(%1568, newshape=[1, 12, 5]) /* ty=Tensor[(1, 12, 5), float64] */;
  %1572 = reshape(%1569, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float64] */;
  %1573 = @func_11849(%1570, %1571, %1572) /* ty=(Tensor[(7, 12, 5), bool],) */;
  %1574 = %1566.1;
  %1575 = %1573.0;
  (%1574, %1575, %var_15091, %var_15092, meta[relay.Constant][62] /* ty=Tensor[(420), float64] */)
}

def @func_5379() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) {
  %1580 = fn () -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) {
    %1576 = @func_4835() /* ty=(Tensor[(4, 8, 9), float32],) */;
    %1577 = @func_548() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float64]) */;
    %1578 = %1576.0;
    %1579 = %1577.1;
    (%1578, %1579)
  };
  %1580() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */
}

def @func_221() -> (Tensor[(4, 8, 9), uint8],) {
  @func_219() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_14735() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8]) {
  %1581 = @func_782() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1582 = @func_7213() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 10, 2), uint64], Tensor[(80), uint64]) */;
  %1583 = @func_14125() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1584 = @func_4148() /* ty=(Tensor[(4, 8, 9), int8],) */;
  %1585 = %1581.1;
  %1586 = %1582.1;
  %1587 = @func_3108() /* ty=Tensor[(4, 8, 9), uint8] */;
  %1588 = %1583.0;
  %1589 = %1584.0;
  (%1585, %1586, %1587, %1588, %1589)
}

def @func_2659() -> Tensor[(4, 8, 9), uint8] {
  %1591 = fn () -> Tensor[(4, 8, 9), uint8] {
    %1590 = @func_1594() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1590.0
  };
  %1591() /* ty=Tensor[(4, 8, 9), uint8] */
}

def @func_10011() -> (Tensor[(4, 8, 9), uint8],) {
  %1592 = @func_7446() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1593 = %1592.0;
  (%1593,)
}

def @func_12445() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8]) {
  %1594 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1595 = @func_10642() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64]) */;
  %1596 = @func_919() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1597 = %1594.0;
  %1598 = %1595.1;
  %1599 = %1596.0;
  (%1597, %1598, %1599)
}

def @func_13398() -> (Tensor[(4, 8, 9), uint8],) {
  @func_13396() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_14273(%var_14271: Tensor[(16, 4, 5), float32]) -> (Tensor[(16, 4, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(16, 4, 5), float32]) {
  @func_14270(%var_14271) /* ty=(Tensor[(16, 4, 5), float32], Tensor[(4, 8, 9), uint8], Tensor[(16, 4, 5), float32]) */
}

def @func_10827() -> (Tensor[(4, 8, 9), float64],) {
  %1600 = @func_1384() /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %1601 = %1600.2;
  (%1601,)
}

def @func_16430(%var_16428: Tensor[(120), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(2, 6, 8), float32], Tensor[(80, 96), int16]) {
  @func_16427(%var_16428) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(120), float32], Tensor[(2, 6, 8), float32], Tensor[(80, 96), int16]) */
}

def @func_2773() -> (Tensor[(4, 8, 9), uint8],) {
  %1602 = @func_1080() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1603 = %1602.0;
  (%1603,)
}

def @func_4028() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1607 = fn () -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %1604 = @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1605 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
    %1606 = %1604.0;
    (%1605, %1606)
  };
  %1607() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_14065() -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32]) {
  %1608 = @func_6980() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1609 = %1608.1;
  %1610 = @func_12839() /* ty=Tensor[(4, 8, 9), float32] */;
  (%1609, %1610)
}

def @func_3540(%var_3538: Tensor[(594), float32], %var_3539: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) {
  %1626 = fn (%var_3506: Tensor[(594), float32], %var_3514: Tensor[(4, 8, 9), float32]) -> (Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) {
    %1611 = @func_2841() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
    %1612 = cast(%var_3506, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1613 = cast(%var_3506, dtype="float32") /* ty=Tensor[(594), float32] */;
    %1614 = reshape(%1612, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
    %1615 = reshape(%1613, newshape=[9, 11, 6]) /* ty=Tensor[(9, 11, 6), float32] */;
    %1616 = @func_3435(%1614, %1615) /* ty=(Tensor[(4, 8, 9), float32], Tensor[(9, 11, 6), float64]) */;
    %1617 = %1616.0;
    %1618 = cast(%var_3514, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
    %1619 = shape_of(%1617, dtype="int32") /* ty=Tensor[(3), int32] */;
    %1620 = cast(%1617, dtype="uint64") /* ty=Tensor[(4, 8, 9), uint64] */;
    %1621 = dyn.reshape(%1618, %1619, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    %1622 = %1611.1;
    %1623 = @func_607() /* ty=Tensor[(4, 8, 9), uint8] */;
    %1624 = left_shift(%1620, %1621) /* ty=Tensor[(4, 8, 9), uint64] */;
    %1625 = @func_2744() /* ty=Tensor[(4, 8, 9), uint8] */;
    (%1622, %var_3506, %1623, %1624, %1625)
  };
  %1626(%var_3538, %var_3539) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(594), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), uint8]) */
}

def @func_11749() -> (Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32, Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float64]) {
  @func_11747() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), uint8], Tensor[(1, 14), float32], float32, Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float64], Tensor[(4, 8, 9), float64]) */
}

def @func_2775() -> (Tensor[(4, 8, 9), uint8],) {
  @func_2773() /* ty=(Tensor[(4, 8, 9), uint8],) */
}

def @func_12098() -> (Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
  %1633 = fn () -> (Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) {
    %1627 = @func_10568() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8], Tensor[(66, 9), float32], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(6, 2, 13), int16], Tensor[(156), int16]) */;
    %1628 = @func_5726() /* ty=(Tensor[(4, 8, 9), uint8],) */;
    %1629 = @func_3699() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */;
    %1630 = %1627.7;
    %1631 = %1628.0;
    %1632 = %1629.1;
    (%1630, %1631, %1632)
  };
  %1633() /* ty=(Tensor[(156), int16], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */
}

def @func_14101(%var_14099: Tensor[(48), int32], %var_14100: Tensor[(4, 180), int32]) -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(4, 180), int32]) {
  %1642 = fn (%var_14091: Tensor[(48), int32], %var_14092: Tensor[(4, 180), int32]) -> (Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(4, 180), int32]) {
    %1634 = @func_7403() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(11, 10, 10), float32]) */;
    %1635 = cast(%var_14091, dtype="int32") /* ty=Tensor[(48), int32] */;
    %1636 = cast(%var_14092, dtype="int32") /* ty=Tensor[(4, 180), int32] */;
    %1637 = reshape(%1635, newshape=[48]) /* ty=Tensor[(48), int32] */;
    %1638 = reshape(%1636, newshape=[4, 180]) /* ty=Tensor[(4, 180), int32] */;
    %1639 = @func_7605(%1637, %1638) /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), int8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8], Tensor[(15, 6, 8), int32], Tensor[(48), int32], Tensor[(4, 180), int32]) */;
    %1640 = %1634.1;
    %1641 = %1639.0;
    (%1640, %1641, %var_14091, %var_14092)
  };
  %1642(%var_14099, %var_14100) /* ty=(Tensor[(11, 10, 10), float32], Tensor[(4, 8, 9), uint8], Tensor[(48), int32], Tensor[(4, 180), int32]) */
}

def @func_10246() -> Tensor[(4, 8, 9), float64] {
  %1643 = @func_5378() /* ty=(Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), float64]) */;
  %1643.1
}

def @func_667(%var_639: Tensor[(4, 8, 9), uint8]) -> (Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), bool], Tensor[(4, 8, 9), uint8]) {
  %1644 = @func_387() /* ty=(Tensor[(4, 8, 9), uint8],) */;
  %1645 = @func_253() /* ty=(Tensor[(4, 8, 9), uint8], Tensor[(4, 8, 9), uint8]) */;
  %1646 = %1645.1;
  %1647 = cast(%var_639, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1648 = shape_of(%1646, dtype="int32") /* ty=Tensor[(3), int32] */;
  %1649 = cast(%1646, dtype="bool") /* ty=Tensor[(4, 8, 9), bool] */;
  %1650 = dyn.reshape(%1647, %1648, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %1651 = %1644.0;
  %1652 = less(%1649, %1650) /* ty=Tensor[(4, 8, 9), bool] */;
  %1653 = @func_36() /* ty=Tensor[(4, 8, 9), uint8] */;
  (%1651, %1652, %1653)
}

def @func_5983() -> (Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) {
  @func_5981() /* ty=(Tensor[(4, 8, 9), uint64], Tensor[(4, 8, 9), float32], Tensor[(4, 8, 9), uint8]) */
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen676/build/output.py:5998: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen676/build/output.py", line 6003, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(1024) tvmgen_default_fused_reshape_divide_kernel0(double* __restrict__ T_divide, double* __restrict__ placeholder, double* __restrict__ placeholder1) {
  if (((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)) < 1050) {
    T_divide[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] = (placeholder[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))] / placeholder1[(((((int)blockIdx.x) * 1024) + ((int)threadIdx.x)))]);
  }
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


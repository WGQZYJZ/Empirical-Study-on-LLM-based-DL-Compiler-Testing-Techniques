==========mod==========
#[version = "0.0.5"]
def @func_3222(%var_3203: Tensor[(3, 7), float64], %var_3217: Tensor[(140), float64]) -> (Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) {
  %0 = cast(%var_3203, dtype="float64") /* ty=Tensor[(3, 7), float64] */;
  %1 = cast(meta[relay.Constant][0] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %2 = cast(meta[relay.Constant][1] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
  %3 = cast(%var_3217, dtype="float64") /* ty=Tensor[(140), float64] */;
  %4 = reshape(%1, newshape=[]) /* ty=int16 */;
  %5 = reshape(%2, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), int16] */;
  %6 = reshape(%3, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %7 = @func_1892(%4, %5, %6) /* ty=(Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) */;
  %8 = acos(%0) /* ty=Tensor[(3, 7), float64] */;
  %9 = %7.7;
  (%8, %9, meta[relay.Constant][0] /* ty=int16 */, meta[relay.Constant][1] /* ty=Tensor[(2145), int16] */, %var_3217)
}

def @func_6525() -> (Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) {
  %10 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %11 = cast(meta[relay.Constant][2] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
  %12 = reshape(%11, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %13 = @func_5461(%12) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
  %14 = %13.2;
  %15 = cast(%14, dtype="float64") /* ty=Tensor[(21), float64] */;
  %16 = %10.1;
  %17 = log2(%15) /* ty=Tensor[(21), float64] */;
  (%16, meta[relay.Constant][2] /* ty=Tensor[(21, 1), float64] */, %17)
}

def @func_5199() -> (Tensor[(15, 14, 2), float32],) {
  %18 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  (%18,)
}

def @func_9397() -> (Tensor[(15, 14, 2), float32], Tensor[(9, 14, 16), int8]) {
  %19 = @func_7259() /* ty=(Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) */;
  %20 = @func_6788() /* ty=(Tensor[(9, 14, 16), int8],) */;
  %21 = %19.1;
  %22 = %20.0;
  (%21, %22)
}

def @func_6207(%var_6184: Tensor[(1404), float64], %var_6189: Tensor[(21), float64]) -> (Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) {
  %23 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %24 = %23.0;
  %25 = cast(%24, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %26 = cast(%var_6184, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %27 = reshape(%26, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %28 = @func_5120(%27) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %29 = cast(%var_6189, dtype="float64") /* ty=Tensor[(21), float64] */;
  %30 = reshape(%29, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %31 = @func_5461(%30) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
  %32 = sinh(%25) /* ty=Tensor[(15, 14, 2), float64] */;
  %33 = %28.0;
  %34 = %31.0;
  (%32, %33, %var_6184, %34, %var_6189)
}

def @func_7761() -> (Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(15, 14, 2), float32], Tensor[(7, 12, 5), float32], Tensor[(7, 12, 5), float64]) {
  %35 = @func_7675() /* ty=Tensor[(540), float64] */;
  %36 = cast(%35, dtype="float32") /* ty=Tensor[(540), float32] */;
  %37 = reshape(%36, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float32] */;
  %38 = @func_1053(%37) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) */;
  %39 = @func_5492() /* ty=Tensor[(15, 14, 2), float32] */;
  %40 = cast(%39, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %41 = reshape(%40, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float32] */;
  %42 = @func_6979(%41) /* ty=(Tensor[(7, 12, 5), float32],) */;
  %43 = %42.0;
  %44 = cast(%43, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
  %45 = cast(%43, dtype="float64") /* ty=Tensor[(7, 12, 5), float64] */;
  %46 = %38.0;
  %47 = log2(%44) /* ty=Tensor[(7, 12, 5), float32] */;
  %48 = exp(%45) /* ty=Tensor[(7, 12, 5), float64] */;
  (%35, %46, %39, %47, %48)
}

def @func_5303() -> Tensor[(4, 14, 11), float32] {
  %49 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  sin(%49) /* ty=Tensor[(4, 14, 11), float32] */
}

def @func_9891() -> (Tensor[(540), float64],) {
  %50 = @func_7675() /* ty=Tensor[(540), float64] */;
  (%50,)
}

def @func_9275() -> (Tensor[(15, 14, 2), float32],) {
  %51 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %52 = %51.0;
  %53 = cast(%52, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %54 = erf(%53) /* ty=Tensor[(15, 14, 2), float32] */;
  (%54,)
}

def @func_5550() -> (Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) {
  %55 = cast(meta[relay.Constant][4] /* ty=Tensor[(54, 10), float64] */, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %56 = reshape(%55, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %57 = @func_268(%56) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %58 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %59 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 14, 11), float32] */, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %60 = shape_of(%58, dtype="int32") /* ty=Tensor[(3), int32] */;
  %61 = cast(%58, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %62 = dyn.reshape(%59, %60, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %63 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %64 = cast(meta[relay.Constant][5] /* ty=Tensor[(4, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %65 = cast(meta[relay.Constant][6] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %66 = reshape(%65, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), uint32] */;
  %67 = @func_1531(%66) /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %68 = %57.0;
  %69 = less(%61, %62) /* ty=Tensor[(4, 14, 11), bool] */;
  %70 = %63.0;
  %71 = sigmoid(%64) /* ty=Tensor[(4, 14, 11), float32] */;
  %72 = %67.0;
  (%68, meta[relay.Constant][4] /* ty=Tensor[(54, 10), float64] */, %69, %70, %71, %72, meta[relay.Constant][6] /* ty=Tensor[(216), uint32] */)
}

def @func_5974(%var_5931: Tensor[(1152), uint32], %var_5934: Tensor[(756), float32], %var_5945: Tensor[(512), float32], %var_5968: uint32) -> (Tensor[(15, 14, 2), float32], Tensor[(2640), float64], Tensor[(1152), uint32], Tensor[(756), float64], Tensor[(15, 14, 2), bool], Tensor[(540), float64], Tensor[(512), float32], Tensor[(140), float64], Tensor[(21), float64], Tensor[(140), float64], Tensor[(540), float64], uint32, Tensor[(216), float64], Tensor[(12, 7, 9), float64]) {
  %73 = cast(meta[relay.Constant][7] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %74 = cast(%var_5931, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %75 = reshape(%73, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %76 = reshape(%74, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %77 = @func_4609(%75, %76) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) */;
  %78 = cast(%var_5934, dtype="float64") /* ty=Tensor[(756), float64] */;
  %79 = shape_of(meta[relay.Constant][7] /* ty=Tensor[(756), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %80 = cast(meta[relay.Constant][7] /* ty=Tensor[(756), float32] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %81 = dyn.reshape(%78, %79, newshape=[]) /* ty=Tensor[(?), float64] */;
  %82 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %83 = cast(%var_5945, dtype="float32") /* ty=Tensor[(512), float32] */;
  %84 = cast(%var_5945, dtype="float32") /* ty=Tensor[(512), float32] */;
  %85 = reshape(%83, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %86 = reshape(%84, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %87 = @func_4241(%85, %86) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
  %88 = cast(meta[relay.Constant][8] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %89 = cast(meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %90 = reshape(%88, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
  %91 = reshape(%89, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %92 = @func_3222(%90, %91) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
  %93 = %77.2;
  %94 = cast(%93, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %95 = cast(%var_5968, dtype="uint32") /* ty=uint32 */;
  %96 = cast(%var_5931, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %97 = cast(meta[relay.Constant][10] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %98 = reshape(%94, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), float64] */;
  %99 = reshape(%95, newshape=[]) /* ty=uint32 */;
  %100 = reshape(%96, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %101 = reshape(%97, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %102 = @func_3553(%98, %99, %100, %101) /* ty=(Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */;
  %103 = divide(%80, %81) /* ty=Tensor[(756), float64] */;
  %104 = cast(%103, dtype="float64") /* ty=Tensor[(756), float64] */;
  %105 = reshape(%104, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), float64] */;
  %106 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  %107 = %82.0;
  %108 = %87.1;
  %109 = %92.4;
  %110 = %102.2;
  %111 = @func_1912(%105) /* ty=Tensor[(12, 7, 9), float64] */;
  (%106, %93, %var_5931, %103, %107, %108, %var_5945, %109, meta[relay.Constant][8] /* ty=Tensor[(21), float64] */, meta[relay.Constant][9] /* ty=Tensor[(140), float64] */, %110, %var_5968, meta[relay.Constant][10] /* ty=Tensor[(216), float64] */, %111)
}

def @func_1173(%var_1165: Tensor[(16, 4, 13), float64], %var_1166: Tensor[(16, 4, 13), float64]) -> Tensor[(16, 4, 13), float64] {
  %112 = cast(%var_1166, dtype="float64") /* ty=Tensor[(16, 4, 13), float64] */;
  %113 = shape_of(%var_1165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %114 = cast(%var_1165, dtype="float64") /* ty=Tensor[(16, 4, 13), float64] */;
  %115 = dyn.reshape(%112, %113, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%114, %115) /* ty=Tensor[(16, 4, 13), float64] */
}

def @func_7259() -> (Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) {
  %116 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %117 = %116.3;
  %118 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  (%117, %118)
}

def @func_6812(%var_6805: Tensor[(832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) {
  %119 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
  %120 = cast(%var_6805, dtype="float64") /* ty=Tensor[(832), float64] */;
  %121 = reshape(%120, newshape=[1, 832]) /* ty=Tensor[(1, 832), float64] */;
  %122 = @func_6768(%121) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(1, 832), float64], Tensor[(4, 14, 11), float32], Tensor[(540), float64]) */;
  %123 = %119.1;
  %124 = %122.4;
  (%123, %124, %var_6805)
}

def @func_8164() -> (Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), uint64]) {
  %125 = @func_5492() /* ty=Tensor[(15, 14, 2), float32] */;
  %126 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 14, 2), float32] */, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %127 = shape_of(%125, dtype="int32") /* ty=Tensor[(3), int32] */;
  %128 = cast(%125, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %129 = dyn.reshape(%126, %127, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %130 = cast(meta[relay.Constant][11] /* ty=Tensor[(15, 14, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %131 = reshape(%130, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float32] */;
  %132 = less_equal(%128, %129) /* ty=Tensor[(15, 14, 2), bool] */;
  %133 = @func_6681(%131) /* ty=Tensor[(15, 14, 2), uint64] */;
  (%132, %133)
}

def @func_6979(%var_6971: Tensor[(7, 12, 5), float32]) -> (Tensor[(7, 12, 5), float32],) {
  %134 = cast(%var_6971, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
  %135 = asinh(%134) /* ty=Tensor[(7, 12, 5), float32] */;
  (%135,)
}

def @func_8100() -> Tensor[(15, 14, 2), float32] {
  @func_5889() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_8498(%var_8446: Tensor[(7, 15, 9), float32], %var_8469: Tensor[(21), float64], %var_8493: Tensor[(540), float64]) -> (Tensor[(7, 15, 9), float32], Tensor[(4, 14, 11), float32], Tensor[(15, 14, 2), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(7, 12, 5), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64]) {
  %136 = cast(%var_8446, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
  %137 = cast(meta[relay.Constant][12] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %138 = cast(%var_8469, dtype="float64") /* ty=Tensor[(21), float64] */;
  %139 = reshape(%137, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %140 = reshape(%138, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %141 = @func_6207(%139, %140) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) */;
  %142 = cast(meta[relay.Constant][13] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %143 = reshape(%142, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float32] */;
  %144 = @func_6979(%143) /* ty=(Tensor[(7, 12, 5), float32],) */;
  %145 = %144.0;
  %146 = cast(meta[relay.Constant][13] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
  %147 = shape_of(%145, dtype="int32") /* ty=Tensor[(3), int32] */;
  %148 = cast(%145, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
  %149 = dyn.reshape(%146, %147, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %150 = cast(%var_8493, dtype="float64") /* ty=Tensor[(540), float64] */;
  %151 = reshape(%150, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %152 = @func_268(%151) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %153 = asin(%136) /* ty=Tensor[(7, 15, 9), float32] */;
  %154 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %155 = %141.0;
  %156 = divide(%148, %149) /* ty=Tensor[(7, 12, 5), float32] */;
  %157 = %152.0;
  (%153, %154, %155, meta[relay.Constant][12] /* ty=Tensor[(1404), float64] */, %var_8469, %156, %157, %var_8493)
}

def @func_4241(%var_4192: Tensor[(8, 8, 8), float32], %var_4206: Tensor[(8, 8, 8), float32]) -> (Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) {
  %158 = cast(meta[relay.Constant][14] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %159 = reshape(%158, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %160 = @func_268(%159) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %161 = cast(%var_4192, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
  %162 = acosh(%161) /* ty=Tensor[(8, 8, 8), float32] */;
  %163 = cast(%var_4206, dtype="int32") /* ty=Tensor[(8, 8, 8), int32] */;
  %164 = shape_of(%162, dtype="int32") /* ty=Tensor[(3), int32] */;
  %165 = cast(%162, dtype="int32") /* ty=Tensor[(8, 8, 8), int32] */;
  %166 = dyn.reshape(%163, %164, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %167 = bitwise_or(%165, %166) /* ty=Tensor[(8, 8, 8), int32] */;
  %168 = cast(%167, dtype="float64") /* ty=Tensor[(8, 8, 8), float64] */;
  %169 = %160.0;
  %170 = sqrt(%168) /* ty=Tensor[(8, 8, 8), float64] */;
  (%169, meta[relay.Constant][14] /* ty=Tensor[(540), float64] */, %170)
}

def @func_7651() -> (Tensor[(10, 6, 9), uint8], Tensor[(10, 6, 9), uint8]) {
  %171 = @func_7116() /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %172 = %171.0;
  %173 = cast(%172, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %174 = reshape(%173, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %175 = @func_268(%174) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %176 = %175.0;
  (%172, %176)
}

def @func_8847(%var_8841: Tensor[(21), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(140), float64], Tensor[(21), float64]) {
  %177 = cast(%var_8841, dtype="float64") /* ty=Tensor[(21), float64] */;
  %178 = reshape(%177, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %179 = @func_5461(%178) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
  %180 = @func_8411() /* ty=Tensor[(15, 14, 2), float32] */;
  %181 = %179.3;
  (%180, %181, %var_8841)
}

def @func_3991(%var_3986: Tensor[(4, 14, 2), float64]) -> Tensor[(4, 14, 2), float64] {
  %182 = cast(%var_3986, dtype="float64") /* ty=Tensor[(4, 14, 2), float64] */;
  cosh(%182) /* ty=Tensor[(4, 14, 2), float64] */
}

def @func_9514(%var_9508: Tensor[(54, 26), float64]) -> (Tensor[(9, 14, 16), int8], Tensor[(10, 6, 9), bool], Tensor[(1404), float64], Tensor[(54, 26), float64], Tensor[(7, 3), float64]) {
  %183 = @func_8373() /* ty=(Tensor[(9, 14, 16), int8],) */;
  %184 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %185 = %184.4;
  %186 = cast(meta[relay.Constant][15] /* ty=Tensor[(10, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(10, 6, 9), bool] */;
  %187 = shape_of(%185, dtype="int32") /* ty=Tensor[(3), int32] */;
  %188 = cast(%185, dtype="bool") /* ty=Tensor[(10, 6, 9), bool] */;
  %189 = dyn.reshape(%186, %187, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %190 = cast(%var_9508, dtype="float64") /* ty=Tensor[(54, 26), float64] */;
  %191 = cast(meta[relay.Constant][16] /* ty=Tensor[(7, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 3), float64] */;
  %192 = reshape(%190, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %193 = reshape(%191, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %194 = @func_6207(%192, %193) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) */;
  %195 = %183.0;
  %196 = greater_equal(%188, %189) /* ty=Tensor[(10, 6, 9), bool] */;
  %197 = %194.2;
  (%195, %196, %197, %var_9508, meta[relay.Constant][16] /* ty=Tensor[(7, 3), float64] */)
}

def @func_9605() -> (Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), bool]) {
  %198 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %199 = @func_8543() /* ty=(Tensor[(15, 14, 2), bool], Tensor[(140), float64], Tensor[(21), float64], Tensor[(1440), float64], int16, Tensor[(715, 3), int16], Tensor[(10, 6, 9), float64]) */;
  %200 = %198.0;
  %201 = %199.0;
  (%200, %201)
}

def @func_6927(%var_6902: Tensor[(756), float32], %var_6903: Tensor[(576, 2), uint32], %var_6911: Tensor[(512), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) {
  %202 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
  %203 = cast(meta[relay.Constant][17] /* ty=Tensor[(98), uint8] */, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %204 = cast(meta[relay.Constant][17] /* ty=Tensor[(98), uint8] */, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %205 = cast(meta[relay.Constant][18] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %206 = cast(%var_6902, dtype="float32") /* ty=Tensor[(756), float32] */;
  %207 = cast(%var_6903, dtype="uint32") /* ty=Tensor[(576, 2), uint32] */;
  %208 = reshape(%203, newshape=[14, 7]) /* ty=Tensor[(14, 7), uint8] */;
  %209 = reshape(%204, newshape=[14, 7]) /* ty=Tensor[(14, 7), uint8] */;
  %210 = reshape(%205, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %211 = reshape(%206, newshape=[18, 42]) /* ty=Tensor[(18, 42), float32] */;
  %212 = reshape(%207, newshape=[288, 4]) /* ty=Tensor[(288, 4), uint32] */;
  %213 = @func_4967(%208, %209, %210, %211, %212) /* ty=(Tensor[(14, 7), bool], Tensor[(3, 7), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64], Tensor[(140), uint64], Tensor[(216), float64], Tensor[(18, 42), float32], Tensor[(288, 4), uint32]) */;
  %214 = cast(meta[relay.Constant][19] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %215 = cast(%var_6911, dtype="float32") /* ty=Tensor[(512), float32] */;
  %216 = reshape(%214, newshape=[9, 156]) /* ty=Tensor[(9, 156), float64] */;
  %217 = reshape(%215, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %218 = @func_6325(%216, %217) /* ty=(Tensor[(11, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(9, 156), float64], Tensor[(8, 8, 8), float64], Tensor[(512), float32], Tensor[(15, 14, 2), bool]) */;
  %219 = %202.1;
  %220 = %213.7;
  %221 = %218.2;
  (%219, %220, meta[relay.Constant][17] /* ty=Tensor[(98), uint8] */, meta[relay.Constant][18] /* ty=Tensor[(216), float64] */, %var_6902, %var_6903, %221, meta[relay.Constant][19] /* ty=Tensor[(1404), float64] */, %var_6911)
}

def @func_5064(%var_5056: Tensor[(14, 1, 7), int16], %var_5057: Tensor[(14, 13, 7), int16]) -> Tensor[(14, 13, 7), int16] {
  %222 = cast(%var_5056, dtype="int16") /* ty=Tensor[(14, 1, 7), int16] */;
  %223 = cast(%var_5057, dtype="int16") /* ty=Tensor[(14, 13, 7), int16] */;
  bitwise_or(%222, %223) /* ty=Tensor[(14, 13, 7), int16] */
}

def @func_9627() -> (Tensor[(540), float64],) {
  %224 = @func_7054() /* ty=Tensor[(540), float64] */;
  (%224,)
}

def @func_9705(%var_9679: Tensor[(384), float64], %var_9680: Tensor[(216), uint32], %var_9681: Tensor[(540), float64], %var_9682: Tensor[(1440), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(384), float64], Tensor[(216), uint32], Tensor[(540), float64], Tensor[(1440), float64], Tensor[(10, 6, 9), uint8]) {
  %225 = cast(%var_9679, dtype="float64") /* ty=Tensor[(384), float64] */;
  %226 = cast(%var_9680, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %227 = cast(%var_9681, dtype="float64") /* ty=Tensor[(540), float64] */;
  %228 = cast(%var_9682, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %229 = reshape(%225, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), float64] */;
  %230 = reshape(%226, newshape=[216]) /* ty=Tensor[(216), uint32] */;
  %231 = reshape(%227, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %232 = reshape(%228, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %233 = @func_2326(%229, %230, %231, %232) /* ty=(Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) */;
  %234 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
  %235 = @func_8411() /* ty=Tensor[(15, 14, 2), float32] */;
  %236 = %233.4;
  %237 = %234.1;
  (%235, %236, %var_9679, %var_9680, %var_9681, %var_9682, %237)
}

def @func_9768(%var_9762: Tensor[(21), float64], %var_9765: Tensor[(512), float32], %var_9766: Tensor[(832), float64]) -> (Tensor[(540), float64], Tensor[(1404), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(832), float64]) {
  %238 = @func_7761() /* ty=(Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(15, 14, 2), float32], Tensor[(7, 12, 5), float32], Tensor[(7, 12, 5), float64]) */;
  %239 = cast(meta[relay.Constant][20] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %240 = cast(%var_9762, dtype="float64") /* ty=Tensor[(21), float64] */;
  %241 = reshape(%239, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %242 = reshape(%240, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %243 = @func_7591(%241, %242) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(10, 6, 9), float32], Tensor[(4, 14, 11), int64], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float64], Tensor[(3, 12, 6), uint32]) */;
  %244 = cast(%var_9765, dtype="float32") /* ty=Tensor[(512), float32] */;
  %245 = cast(%var_9766, dtype="float64") /* ty=Tensor[(832), float64] */;
  %246 = reshape(%244, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %247 = reshape(%245, newshape=[832, 1]) /* ty=Tensor[(832, 1), float64] */;
  %248 = @func_9045(%246, %247) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(216), float64], Tensor[(832, 540), float32]) */;
  %249 = %238.0;
  %250 = %243.2;
  %251 = %248.0;
  (%249, %250, meta[relay.Constant][20] /* ty=Tensor[(1404), float64] */, %var_9762, %251, %var_9765, %var_9766)
}

def @func_2326(%var_2287: Tensor[(4, 12, 8), float64], %var_2293: Tensor[(216), uint32], %var_2314: Tensor[(540), float64], %var_2319: Tensor[(1440), float64]) -> (Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) {
  %252 = cast(%var_2287, dtype="float64") /* ty=Tensor[(4, 12, 8), float64] */;
  %253 = cast(%var_2293, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %254 = reshape(%253, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), uint32] */;
  %255 = @func_1531(%254) /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %256 = cast(%var_2314, dtype="float64") /* ty=Tensor[(540), float64] */;
  %257 = reshape(%256, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %258 = @func_268(%257) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %259 = cast(%var_2319, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %260 = reshape(%259, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %261 = @func_1835(%260) /* ty=Tensor[(16, 10, 9), float64] */;
  %262 = cast(%var_2319, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %263 = shape_of(%261, dtype="int32") /* ty=Tensor[(3), int32] */;
  %264 = cast(%261, dtype="int64") /* ty=Tensor[(16, 10, 9), int64] */;
  %265 = dyn.reshape(%262, %263, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %266 = log10(%252) /* ty=Tensor[(4, 12, 8), float64] */;
  %267 = %255.0;
  %268 = %258.0;
  %269 = bitwise_and(%264, %265) /* ty=Tensor[(16, 10, 9), int64] */;
  (%266, %267, %var_2293, %268, %var_2314, %269)
}

def @func_9359() -> (Tensor[(3, 12, 6), uint32], Tensor[(15, 14, 2), float32]) {
  %270 = @func_8550() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %271 = @func_8910() /* ty=Tensor[(3, 12, 6), uint32] */;
  %272 = %270.0;
  (%271, %272)
}

def @func_1912(%var_1909: Tensor[(12, 7, 9), float64]) -> Tensor[(12, 7, 9), float64] {
  %273 = cast(%var_1909, dtype="float64") /* ty=Tensor[(12, 7, 9), float64] */;
  sin(%273) /* ty=Tensor[(12, 7, 9), float64] */
}

def @func_7231(%var_7189: Tensor[(13, 9, 15), float32], %var_7210: Tensor[(70, 2), float64], %var_7213: Tensor[(21), float64]) -> (Tensor[(13, 9, 15), float32], Tensor[(540), float64], Tensor[(13, 9, 15), float64], Tensor[(540), float64], Tensor[(70, 2), float64], Tensor[(140), float64], Tensor[(21), float64]) {
  %274 = cast(%var_7189, dtype="float32") /* ty=Tensor[(13, 9, 15), float32] */;
  %275 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(13, 9, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %276 = cast(meta[relay.Constant][21] /* ty=Tensor[(13, 9, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 15), float32] */;
  %277 = dyn.reshape(%274, %275, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %278 = cast(%var_7189, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
  %279 = cast(%var_7210, dtype="float64") /* ty=Tensor[(70, 2), float64] */;
  %280 = @func_7054() /* ty=Tensor[(540), float64] */;
  %281 = cast(%280, dtype="float64") /* ty=Tensor[(540), float64] */;
  %282 = reshape(%279, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %283 = reshape(%281, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %284 = @func_1665(%282, %283) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %285 = cast(%var_7213, dtype="float64") /* ty=Tensor[(21), float64] */;
  %286 = cast(%var_7210, dtype="float64") /* ty=Tensor[(70, 2), float64] */;
  %287 = reshape(%285, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
  %288 = reshape(%286, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %289 = @func_3222(%287, %288) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
  %290 = floor_mod(%276, %277) /* ty=Tensor[(13, 9, 15), float32] */;
  %291 = exp(%278) /* ty=Tensor[(13, 9, 15), float64] */;
  %292 = %284.1;
  %293 = %289.4;
  (%290, %280, %291, %292, %var_7210, %293, %var_7213)
}

def @func_4543(%var_4535: Tensor[(5, 28), float64]) -> (Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(9, 16, 7), float64], Tensor[(3, 7), float64], Tensor[(21), float64], Tensor[(5, 28), float64]) {
  %294 = cast(meta[relay.Constant][22] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %295 = reshape(%294, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %296 = cast(meta[relay.Constant][23] /* ty=Tensor[(9, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 7), float64] */;
  %297 = erf(%296) /* ty=Tensor[(9, 16, 7), float64] */;
  %298 = cast(%297, dtype="float64") /* ty=Tensor[(9, 16, 7), float64] */;
  %299 = cast(meta[relay.Constant][24] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %300 = cast(%var_4535, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %301 = reshape(%299, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
  %302 = reshape(%300, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %303 = @func_3222(%301, %302) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
  %304 = @func_1835(%295) /* ty=Tensor[(16, 10, 9), float64] */;
  %305 = cosh(%298) /* ty=Tensor[(9, 16, 7), float64] */;
  %306 = %303.0;
  (%304, meta[relay.Constant][22] /* ty=Tensor[(1440), float64] */, %305, %306, meta[relay.Constant][24] /* ty=Tensor[(21), float64] */, %var_4535)
}

def @func_5396() -> (Tensor[(15, 14, 2), bool],) {
  %307 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %308 = %307.0;
  %309 = cast(%308, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %310 = sqrt(%309) /* ty=Tensor[(15, 14, 2), float64] */;
  %311 = cast(%308, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %312 = shape_of(%310, dtype="int32") /* ty=Tensor[(3), int32] */;
  %313 = cast(%310, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
  %314 = dyn.reshape(%311, %312, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %315 = less(%313, %314) /* ty=Tensor[(15, 14, 2), bool] */;
  (%315,)
}

def @func_8411() -> Tensor[(15, 14, 2), float32] {
  %316 = @func_7259() /* ty=(Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) */;
  %316.1
}

def @func_6788() -> (Tensor[(9, 14, 16), int8],) {
  %317 = cast(meta[relay.Constant][26] /* ty=Tensor[(9, 14, 16), int8] */, dtype="int8") /* ty=Tensor[(9, 14, 16), int8] */;
  %318 = shape_of(meta[relay.Constant][25] /* ty=Tensor[(9, 14, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %319 = cast(meta[relay.Constant][25] /* ty=Tensor[(9, 14, 16), int8] */, dtype="int8") /* ty=Tensor[(9, 14, 16), int8] */;
  %320 = dyn.reshape(%317, %318, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %321 = bitwise_xor(%319, %320) /* ty=Tensor[(9, 14, 16), int8] */;
  (%321,)
}

def @func_5785() -> (Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) {
  %322 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %323 = cast(meta[relay.Constant][27] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %324 = reshape(%323, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %325 = @func_268(%324) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %326 = %325.0;
  %327 = cast(%326, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %328 = acosh(%327) /* ty=Tensor[(10, 6, 9), float64] */;
  %329 = cast(%328, dtype="float32") /* ty=Tensor[(10, 6, 9), float32] */;
  %330 = cast(%328, dtype="float32") /* ty=Tensor[(10, 6, 9), float32] */;
  %331 = %322.5;
  %332 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %333 = acos(%329) /* ty=Tensor[(10, 6, 9), float32] */;
  %334 = atanh(%330) /* ty=Tensor[(10, 6, 9), float32] */;
  (%331, meta[relay.Constant][27] /* ty=Tensor[(540), float64] */, %332, %333, %334)
}

def @func_4793(%var_4774: Tensor[(1, 15, 4), float64]) -> (Tensor[(1, 15, 4), float64],) {
  %335 = cast(%var_4774, dtype="float64") /* ty=Tensor[(1, 15, 4), float64] */;
  %336 = log2(%335) /* ty=Tensor[(1, 15, 4), float64] */;
  (%336,)
}

def @func_7300(%var_7276: Tensor[(36), bool]) -> (Tensor[(3, 12, 6), uint32], Tensor[(9, 4, 1), bool], Tensor[(36), bool], Tensor[(16, 10, 9), float64], Tensor[(1440), float64]) {
  %337 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %338 = cast(%var_7276, dtype="bool") /* ty=Tensor[(36), bool] */;
  %339 = reshape(%338, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), bool] */;
  %340 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %341 = reshape(%340, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %342 = %337.5;
  %343 = @func_7181(%339) /* ty=Tensor[(9, 4, 1), bool] */;
  %344 = @func_1835(%341) /* ty=Tensor[(16, 10, 9), float64] */;
  (%342, %343, %var_7276, %344, meta[relay.Constant][28] /* ty=Tensor[(1440), float64] */)
}

def @func_9554() -> Tensor[(540), float64] {
  %345 = @func_6525() /* ty=(Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) */;
  %345.0
}

def @func_6325(%var_6307: Tensor[(9, 156), float64], %var_6311: Tensor[(512), float32]) -> (Tensor[(11, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(9, 156), float64], Tensor[(8, 8, 8), float64], Tensor[(512), float32], Tensor[(15, 14, 2), bool]) {
  %346 = cast(meta[relay.Constant][29] /* ty=Tensor[(11, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
  %347 = log2(%346) /* ty=Tensor[(11, 14, 2), float64] */;
  %348 = cast(%347, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
  %349 = cast(%var_6307, dtype="float64") /* ty=Tensor[(9, 156), float64] */;
  %350 = reshape(%349, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %351 = @func_5120(%350) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %352 = cast(%var_6311, dtype="float32") /* ty=Tensor[(512), float32] */;
  %353 = cast(%var_6311, dtype="float32") /* ty=Tensor[(512), float32] */;
  %354 = reshape(%352, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %355 = reshape(%353, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %356 = @func_4241(%354, %355) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
  %357 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %358 = asinh(%348) /* ty=Tensor[(11, 14, 2), float64] */;
  %359 = %351.0;
  %360 = %356.2;
  %361 = %357.0;
  (%358, %359, %var_6307, %360, %var_6311, %361)
}

def @func_6634() -> (Tensor[(15, 14, 2), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64]) {
  %362 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
  %363 = cast(meta[relay.Constant][30] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
  %364 = reshape(%363, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %365 = @func_6140(%364) /* ty=(Tensor[(6, 11, 9), float64],) */;
  %366 = %362.0;
  %367 = %365.0;
  (%366, %367, meta[relay.Constant][30] /* ty=Tensor[(594), float64] */)
}

def @func_5120(%var_5115: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64],) {
  %368 = cast(%var_5115, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %369 = exp(%368) /* ty=Tensor[(9, 12, 13), float64] */;
  (%369,)
}

def @func_1892(%var_1855: int16, %var_1856: Tensor[(11, 13, 15), int16], %var_1877: Tensor[(140), float64]) -> (Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) {
  %370 = cast(%var_1855, dtype="int16") /* ty=int16 */;
  %371 = cast(%var_1856, dtype="int16") /* ty=Tensor[(11, 13, 15), int16] */;
  %372 = cast(%var_1856, dtype="float32") /* ty=Tensor[(11, 13, 15), float32] */;
  %373 = cos(%372) /* ty=Tensor[(11, 13, 15), float32] */;
  %374 = cast(%373, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
  %375 = cast(%var_1877, dtype="float64") /* ty=Tensor[(140), float64] */;
  %376 = cast(meta[relay.Constant][31] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %377 = reshape(%375, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %378 = reshape(%376, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %379 = @func_1665(%377, %378) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %380 = cast(meta[relay.Constant][32] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %381 = reshape(%380, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %382 = cast(%373, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
  %383 = left_shift(%370, %371) /* ty=Tensor[(11, 13, 15), int16] */;
  %384 = asinh(%374) /* ty=Tensor[(11, 13, 15), float64] */;
  %385 = %379.1;
  %386 = @func_1835(%381) /* ty=Tensor[(16, 10, 9), float64] */;
  %387 = cosh(%382) /* ty=Tensor[(11, 13, 15), float64] */;
  (%383, %384, %385, %var_1877, meta[relay.Constant][31] /* ty=Tensor[(540), float64] */, %386, meta[relay.Constant][32] /* ty=Tensor[(1440), float64] */, %387)
}

def @func_5889() -> Tensor[(15, 14, 2), float32] {
  %388 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %388.0
}

def @func_6482() -> (Tensor[(3, 12, 6), uint32],) {
  %389 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %390 = %389.0;
  (%390,)
}

def @func_7162(%var_7156: Tensor[(6, 8, 9), uint16], %var_7157: Tensor[(6, 8, 9), uint16]) -> (Tensor[(6, 8, 9), bool],) {
  %391 = cast(%var_7157, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %392 = shape_of(%var_7156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %393 = cast(%var_7156, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %394 = dyn.reshape(%391, %392, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %395 = greater_equal(%393, %394) /* ty=Tensor[(6, 8, 9), bool] */;
  (%395,)
}

def @func_7054() -> Tensor[(540), float64] {
  %396 = @func_6525() /* ty=(Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) */;
  %396.0
}

def @func_7012() -> (Tensor[(3, 12, 6), uint32],) {
  %397 = @func_6482() /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %398 = %397.0;
  (%398,)
}

def @func_8296() -> Tensor[(9, 14, 16), int8] {
  %399 = @func_6788() /* ty=(Tensor[(9, 14, 16), int8],) */;
  %399.0
}

def @func_7591(%var_7547: Tensor[(1404), float64], %var_7548: Tensor[(21), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(10, 6, 9), float32], Tensor[(4, 14, 11), int64], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float64], Tensor[(3, 12, 6), uint32]) {
  %400 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %402 = erf(%401) /* ty=Tensor[(4, 14, 11), float64] */;
  %403 = cast(%402, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %404 = shape_of(%400, dtype="int32") /* ty=Tensor[(3), int32] */;
  %405 = cast(%400, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %406 = dyn.reshape(%403, %404, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %407 = cast(%var_7547, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %408 = cast(%var_7548, dtype="float64") /* ty=Tensor[(21), float64] */;
  %409 = reshape(%407, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %410 = reshape(%408, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %411 = @func_6207(%409, %410) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) */;
  %412 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %413 = cast(%402, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %414 = sinh(%413) /* ty=Tensor[(4, 14, 11), float32] */;
  %415 = cast(%414, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %416 = asinh(%415) /* ty=Tensor[(4, 14, 11), float64] */;
  %417 = cast(%400, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
  %418 = shape_of(%416, dtype="int32") /* ty=Tensor[(3), int32] */;
  %419 = cast(%416, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
  %420 = dyn.reshape(%417, %418, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %421 = cast(%414, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %422 = @func_6482() /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %423 = power(%405, %406) /* ty=Tensor[(4, 14, 11), float64] */;
  %424 = %411.1;
  %425 = %412.4;
  %426 = bitwise_xor(%419, %420) /* ty=Tensor[(4, 14, 11), int64] */;
  %427 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  %428 = atanh(%421) /* ty=Tensor[(4, 14, 11), float64] */;
  %429 = %422.0;
  (%423, %424, %var_7547, %var_7548, %425, %426, %427, %428, %429)
}

def @func_7116() -> (Tensor[(10, 6, 9), uint8],) {
  %430 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
  %431 = %430.1;
  (%431,)
}

def @func_7181(%var_7169: Tensor[(9, 4, 1), bool]) -> Tensor[(9, 4, 1), bool] {
  %432 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %433 = cast(%var_7169, dtype="bool") /* ty=Tensor[(9, 4, 1), bool] */;
  logical_and(%432, %433) /* ty=Tensor[(9, 4, 1), bool] */
}

def @func_5743(%var_5703: Tensor[(512), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), bool]) {
  %434 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %435 = cast(%var_5703, dtype="float32") /* ty=Tensor[(512), float32] */;
  %436 = cast(%var_5703, dtype="float32") /* ty=Tensor[(512), float32] */;
  %437 = reshape(%435, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %438 = reshape(%436, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %439 = @func_4241(%437, %438) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
  %440 = %439.2;
  %441 = cast(%var_5703, dtype="uint32") /* ty=Tensor[(512), uint32] */;
  %442 = shape_of(%440, dtype="int32") /* ty=Tensor[(3), int32] */;
  %443 = cast(%440, dtype="uint32") /* ty=Tensor[(8, 8, 8), uint32] */;
  %444 = dyn.reshape(%441, %442, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %445 = right_shift(%443, %444) /* ty=Tensor[(8, 8, 8), uint32] */;
  %446 = cast(%445, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
  %447 = asinh(%446) /* ty=Tensor[(8, 8, 8), float32] */;
  %448 = cast(%447, dtype="bool") /* ty=Tensor[(8, 8, 8), bool] */;
  %449 = shape_of(%var_5703, dtype="int32") /* ty=Tensor[(1), int32] */;
  %450 = cast(%var_5703, dtype="bool") /* ty=Tensor[(512), bool] */;
  %451 = dyn.reshape(%448, %449, newshape=[]) /* ty=Tensor[(?), bool] */;
  %452 = %434.0;
  %453 = equal(%450, %451) /* ty=Tensor[(512), bool] */;
  (%452, %453)
}

def @func_3553(%var_3509: Tensor[(11, 15, 16), float64], %var_3524: uint32, %var_3525: Tensor[(1152), uint32], %var_3546: Tensor[(216), float64]) -> (Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) {
  %454 = cast(meta[relay.Constant][33] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %455 = cast(meta[relay.Constant][34] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %456 = reshape(%454, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %457 = reshape(%455, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %458 = @func_1665(%456, %457) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %459 = cast(%var_3524, dtype="uint32") /* ty=uint32 */;
  %460 = cast(%var_3525, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %461 = cast(meta[relay.Constant][33] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %462 = reshape(%459, newshape=[]) /* ty=uint32 */;
  %463 = reshape(%460, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
  %464 = reshape(%461, newshape=[1, 140]) /* ty=Tensor[(1, 140), float64] */;
  %465 = @func_2240(%462, %463, %464) /* ty=(Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) */;
  %466 = cast(%var_3509, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %467 = asinh(%466) /* ty=Tensor[(11, 15, 16), float64] */;
  %468 = cast(%467, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %469 = tan(%468) /* ty=Tensor[(11, 15, 16), float64] */;
  %470 = cast(%469, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
  %471 = cast(%var_3546, dtype="float64") /* ty=Tensor[(216), float64] */;
  %472 = reshape(%471, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), float64] */;
  %473 = %458.1;
  %474 = %465.2;
  %475 = acos(%470) /* ty=Tensor[(11, 15, 16), float64] */;
  %476 = @func_3140(%472) /* ty=Tensor[(9, 6, 4), float64] */;
  (%473, meta[relay.Constant][33] /* ty=Tensor[(140), float64] */, meta[relay.Constant][34] /* ty=Tensor[(540), float64] */, %474, %var_3524, %var_3525, %475, %476, %var_3546)
}

def @func_2533(%var_2415: Tensor[(12, 3, 14), float32], %var_2441: Tensor[(108, 2), uint32], %var_2460: Tensor[(3, 180), float32], %var_2465: Tensor[(140), float64]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 7, 9), float64], Tensor[(756), float64], Tensor[(4, 12, 8), float64], Tensor[(108, 2), uint32], Tensor[(1440), float64], Tensor[(96, 4), uint16], Tensor[(3, 180), uint16], Tensor[(540), float64], Tensor[(140), float64], Tensor[(3, 180), bool], Tensor[(3, 12, 6), uint32], Tensor[(3, 180), float32]) {
  %477 = cast(-3.97375f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %478 = cast(%var_2415, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %479 = cast(meta[relay.Constant][35] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %480 = reshape(%479, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), float64] */;
  %481 = cast(meta[relay.Constant][36] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %482 = cast(%var_2441, dtype="uint32") /* ty=Tensor[(108, 2), uint32] */;
  %483 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %484 = cast(meta[relay.Constant][38] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %485 = reshape(%481, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), float64] */;
  %486 = reshape(%482, newshape=[216]) /* ty=Tensor[(216), uint32] */;
  %487 = reshape(%483, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %488 = reshape(%484, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %489 = @func_2326(%485, %486, %487, %488) /* ty=(Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) */;
  %490 = cast(-3.97375f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %491 = cast(meta[relay.Constant][36] /* ty=Tensor[(96, 4), float64] */, dtype="uint16") /* ty=Tensor[(96, 4), uint16] */;
  %492 = cast(meta[relay.Constant][37] /* ty=Tensor[(3, 180), float64] */, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %493 = asin(%492) /* ty=Tensor[(3, 180), float32] */;
  %494 = cast(%493, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %495 = log10(%494) /* ty=Tensor[(3, 180), float32] */;
  %496 = cast(%var_2460, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %497 = shape_of(%495, dtype="int32") /* ty=Tensor[(2), int32] */;
  %498 = cast(%495, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %499 = dyn.reshape(%496, %497, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %500 = cast(%var_2465, dtype="float64") /* ty=Tensor[(140), float64] */;
  %501 = cast(%495, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %502 = reshape(%500, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %503 = reshape(%501, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %504 = @func_1665(%502, %503) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %505 = cast(%495, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %506 = shape_of(%493, dtype="int32") /* ty=Tensor[(2), int32] */;
  %507 = cast(%493, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %508 = dyn.reshape(%505, %506, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %509 = cast(%var_2441, dtype="uint32") /* ty=Tensor[(108, 2), uint32] */;
  %510 = reshape(%509, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), uint32] */;
  %511 = @func_1531(%510) /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %512 = cast(%493, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %513 = cast(-3.97375f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %514 = less_equal(%512, %513) /* ty=Tensor[(3, 180), bool] */;
  %515 = cast(%514, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %516 = equal(%477, %478) /* ty=Tensor[(12, 3, 14), bool] */;
  %517 = @func_1912(%480) /* ty=Tensor[(12, 7, 9), float64] */;
  %518 = %489.0;
  %519 = minimum(%490, %491) /* ty=Tensor[(96, 4), uint16] */;
  %520 = bitwise_xor(%498, %499) /* ty=Tensor[(3, 180), uint16] */;
  %521 = %504.1;
  %522 = greater_equal(%507, %508) /* ty=Tensor[(3, 180), bool] */;
  %523 = %511.0;
  %524 = acosh(%515) /* ty=Tensor[(3, 180), float32] */;
  (%516, %517, meta[relay.Constant][35] /* ty=Tensor[(756), float64] */, %518, %var_2441, meta[relay.Constant][38] /* ty=Tensor[(1440), float64] */, %519, %520, %521, %var_2465, %522, %523, %524)
}

def @func_6417() -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) {
  %525 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
  %526 = cast(meta[relay.Constant][39] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %527 = cast(meta[relay.Constant][40] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %528 = reshape(%526, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %529 = reshape(%527, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %530 = @func_1665(%528, %529) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %531 = %525.0;
  %532 = %530.0;
  (%531, %532, meta[relay.Constant][39] /* ty=Tensor[(140), float64] */, meta[relay.Constant][40] /* ty=Tensor[(540), float64] */)
}

def @func_7421(%var_7345: Tensor[(1, 756), float32], %var_7347: Tensor[(512), float32], %var_7360: Tensor[(882), uint8], %var_7419: Tensor[(140), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(1, 756), float32], Tensor[(2, 576), uint32], Tensor[(512), float32], Tensor[(14, 7, 9), float64], Tensor[(882), uint8], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 1, 10), float32], uint32, Tensor[(140), float64]) {
  %533 = cast(%var_7345, dtype="float32") /* ty=Tensor[(1, 756), float32] */;
  %534 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 576), uint32] */, dtype="uint32") /* ty=Tensor[(2, 576), uint32] */;
  %535 = cast(%var_7347, dtype="float32") /* ty=Tensor[(512), float32] */;
  %536 = reshape(%533, newshape=[756]) /* ty=Tensor[(756), float32] */;
  %537 = reshape(%534, newshape=[576, 2]) /* ty=Tensor[(576, 2), uint32] */;
  %538 = reshape(%535, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %539 = @func_6927(%536, %537, %538) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) */;
  %540 = cast(%var_7360, dtype="uint8") /* ty=Tensor[(882), uint8] */;
  %541 = reshape(%540, newshape=[14, 7, 9]) /* ty=Tensor[(14, 7, 9), uint8] */;
  %542 = cast(meta[relay.Constant][42] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %543 = cast(meta[relay.Constant][42] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %544 = reshape(%542, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %545 = reshape(%543, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %546 = cast(meta[relay.Constant][42] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %547 = reshape(%546, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %548 = @func_6812(%547) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) */;
  %549 = cast(meta[relay.Constant][43] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %550 = cast(meta[relay.Constant][41] /* ty=Tensor[(2, 576), uint32] */, dtype="uint32") /* ty=Tensor[(2, 576), uint32] */;
  %551 = cast(%var_7419, dtype="float64") /* ty=Tensor[(140), float64] */;
  %552 = reshape(%549, newshape=[]) /* ty=uint32 */;
  %553 = reshape(%550, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
  %554 = reshape(%551, newshape=[1, 140]) /* ty=Tensor[(1, 140), float64] */;
  %555 = @func_2240(%552, %553, %554) /* ty=(Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) */;
  %556 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %557 = %539.8;
  %558 = @func_6093(%541) /* ty=Tensor[(14, 7, 9), float64] */;
  %559 = @func_1173(%544, %545) /* ty=Tensor[(16, 4, 13), float64] */;
  %560 = %548.0;
  %561 = %555.1;
  (%556, %557, %var_7345, meta[relay.Constant][41] /* ty=Tensor[(2, 576), uint32] */, %var_7347, %558, %var_7360, %559, meta[relay.Constant][42] /* ty=Tensor[(832), float64] */, %560, %561, meta[relay.Constant][43] /* ty=uint32 */, %var_7419)
}

def @func_8997(%var_8975: Tensor[(594), float64], %var_8980: Tensor[(140), float64]) -> (Tensor[(10, 6, 9), uint8], Tensor[(6, 11, 9), float64], Tensor[(16, 9, 8), bool], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(594), float32]) {
  %562 = @func_7116() /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %563 = cast(%var_8975, dtype="float64") /* ty=Tensor[(594), float64] */;
  %564 = reshape(%563, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %565 = @func_6140(%564) /* ty=(Tensor[(6, 11, 9), float64],) */;
  %566 = %562.0;
  %567 = cast(%566, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %568 = cast(meta[relay.Constant][44] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %569 = cast(meta[relay.Constant][45] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %570 = cast(%var_8980, dtype="float64") /* ty=Tensor[(140), float64] */;
  %571 = cast(meta[relay.Constant][45] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %572 = reshape(%567, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %573 = reshape(%568, newshape=[]) /* ty=uint32 */;
  %574 = reshape(%569, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %575 = reshape(%570, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %576 = reshape(%571, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
  %577 = @func_5348(%572, %573, %574, %575, %576) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(16, 9, 8), bool]) */;
  %578 = cast(%var_8975, dtype="float32") /* ty=Tensor[(594), float32] */;
  %579 = atan(%578) /* ty=Tensor[(594), float32] */;
  %580 = cast(%579, dtype="float32") /* ty=Tensor[(594), float32] */;
  %581 = %565.0;
  %582 = %577.6;
  %583 = log10(%580) /* ty=Tensor[(594), float32] */;
  (%566, %581, %582, meta[relay.Constant][44] /* ty=uint32 */, meta[relay.Constant][45] /* ty=Tensor[(1152), uint32] */, %var_8980, %583)
}

def @func_1665(%var_1618: Tensor[(14, 1, 10), float64], %var_1648: Tensor[(540), float64]) -> (Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) {
  %584 = cast(%var_1648, dtype="float64") /* ty=Tensor[(540), float64] */;
  %585 = reshape(%584, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %586 = @func_268(%585) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %587 = cast(%var_1618, dtype="float64") /* ty=Tensor[(14, 1, 10), float64] */;
  %588 = sin(%587) /* ty=Tensor[(14, 1, 10), float64] */;
  %589 = cast(%588, dtype="float32") /* ty=Tensor[(14, 1, 10), float32] */;
  %590 = exp(%589) /* ty=Tensor[(14, 1, 10), float32] */;
  %591 = cast(%590, dtype="float32") /* ty=Tensor[(14, 1, 10), float32] */;
  %592 = %586.0;
  %593 = log10(%591) /* ty=Tensor[(14, 1, 10), float32] */;
  (%592, %var_1648, %593)
}

def @func_8373() -> (Tensor[(9, 14, 16), int8],) {
  %594 = @func_8296() /* ty=Tensor[(9, 14, 16), int8] */;
  (%594,)
}

def @func_1835(%var_1826: Tensor[(16, 10, 9), float64]) -> Tensor[(16, 10, 9), float64] {
  %595 = cast(%var_1826, dtype="float64") /* ty=Tensor[(16, 10, 9), float64] */;
  erf(%595) /* ty=Tensor[(16, 10, 9), float64] */
}

def @func_4609(%var_4594: Tensor[(6, 9, 14), float32], %var_4602: Tensor[(1152), uint32]) -> (Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) {
  %596 = cast(%var_4594, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
  %597 = cast(meta[relay.Constant][46] /* ty=Tensor[(2640), float64] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
  %598 = cast(meta[relay.Constant][47] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %599 = cast(%var_4602, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %600 = cast(meta[relay.Constant][48] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %601 = reshape(%597, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), float64] */;
  %602 = reshape(%598, newshape=[]) /* ty=uint32 */;
  %603 = reshape(%599, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %604 = reshape(%600, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %605 = @func_3553(%601, %602, %603, %604) /* ty=(Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */;
  %606 = acos(%596) /* ty=Tensor[(6, 9, 14), float32] */;
  %607 = %605.1;
  (%606, %607, meta[relay.Constant][46] /* ty=Tensor[(2640), float64] */, meta[relay.Constant][47] /* ty=uint32 */, %var_4602, meta[relay.Constant][48] /* ty=Tensor[(216), float64] */)
}

def @main(%var_9925: Tensor[(13, 2, 15), float32]) -> (Tensor[(13, 2, 15), float32],) {
  %608 = cast(%var_9925, dtype="float32") /* ty=Tensor[(13, 2, 15), float32] */;
  %609 = shape_of(meta[relay.Constant][49] /* ty=Tensor[(13, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %610 = cast(meta[relay.Constant][49] /* ty=Tensor[(13, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 15), float32] */;
  %611 = dyn.reshape(%608, %609, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %612 = floor_divide(%610, %611) /* ty=Tensor[(13, 2, 15), float32] */;
  (%612,)
}

def @func_268(%var_234: Tensor[(10, 6, 9), float64]) -> (Tensor[(10, 6, 9), uint8],) {
  %613 = cast(%var_234, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %614 = cos(%613) /* ty=Tensor[(10, 6, 9), float64] */;
  %615 = cast(%var_234, dtype="uint8") /* ty=Tensor[(10, 6, 9), uint8] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="uint8") /* ty=Tensor[(10, 6, 9), uint8] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %619 = maximum(%617, %618) /* ty=Tensor[(10, 6, 9), uint8] */;
  (%619,)
}

def @func_5587(%var_5581: Tensor[(54, 10), float64]) -> (Tensor[(15, 14, 2), bool], Tensor[(54, 10), float32]) {
  %620 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %621 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %622 = %621.1;
  %623 = cast(%var_5581, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %624 = shape_of(%622, dtype="int32") /* ty=Tensor[(2), int32] */;
  %625 = cast(%622, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %627 = %620.0;
  %628 = power(%625, %626) /* ty=Tensor[(54, 10), float32] */;
  (%627, %628)
}

def @func_7964(%var_7956: Tensor[(810), bool]) -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(6, 15, 9), bool], bool, Tensor[(810), bool]) {
  %629 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
  %630 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %631 = cast(%var_7956, dtype="bool") /* ty=Tensor[(810), bool] */;
  %632 = reshape(%630, newshape=[]) /* ty=bool */;
  %633 = reshape(%631, newshape=[6, 15, 9]) /* ty=Tensor[(6, 15, 9), bool] */;
  %634 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  %635 = %629.1;
  %636 = @func_5806(%632, %633) /* ty=Tensor[(6, 15, 9), bool] */;
  (%634, %635, %636, False /* ty=bool */, %var_7956)
}

def @func_5866(%var_5834: Tensor[(15, 14, 2), float32], %var_5861: Tensor[(216), float64]) -> (Tensor[(15, 14, 2), float64], Tensor[(15, 14, 2), float32], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) {
  %637 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %638 = %637.2;
  %639 = cast(%var_5834, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %640 = shape_of(%638, dtype="int32") /* ty=Tensor[(3), int32] */;
  %641 = cast(%638, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %642 = dyn.reshape(%639, %640, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %643 = cast(%var_5834, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %644 = cast(%var_5861, dtype="float64") /* ty=Tensor[(216), float64] */;
  %645 = reshape(%644, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), float64] */;
  %646 = divide(%641, %642) /* ty=Tensor[(15, 14, 2), float64] */;
  %647 = log2(%643) /* ty=Tensor[(15, 14, 2), float32] */;
  %648 = @func_3140(%645) /* ty=Tensor[(9, 6, 4), float64] */;
  (%646, %647, %648, %var_5861)
}

def @func_6768(%var_6718: Tensor[(1, 832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(1, 832), float64], Tensor[(4, 14, 11), float32], Tensor[(540), float64]) {
  %649 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %650 = cast(%var_6718, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
  %651 = cast(%var_6718, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
  %652 = reshape(%650, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %653 = reshape(%651, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %654 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
  %655 = %654.3;
  %656 = cast(%655, dtype="float64") /* ty=Tensor[(540), float64] */;
  %657 = asin(%656) /* ty=Tensor[(540), float64] */;
  %658 = cast(%657, dtype="float64") /* ty=Tensor[(540), float64] */;
  %659 = %649.0;
  %660 = @func_1173(%652, %653) /* ty=Tensor[(16, 4, 13), float64] */;
  %661 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %662 = acosh(%658) /* ty=Tensor[(540), float64] */;
  (%659, %660, %var_6718, %661, %662)
}

def @func_1053(%var_1045: Tensor[(9, 10, 6), float32]) -> (Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) {
  %663 = cast(%var_1045, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %664 = log2(%663) /* ty=Tensor[(9, 10, 6), float32] */;
  %665 = cast(%664, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %666 = reshape(%665, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %667 = @func_268(%666) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %668 = %667.0;
  (%664, %668)
}

def @func_8240() -> Tensor[(540), float64] {
  %669 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %669.1
}

def @func_4967(%var_4899: Tensor[(14, 7), uint8], %var_4900: Tensor[(14, 7), uint8], %var_4918: Tensor[(216), float64], %var_4948: Tensor[(18, 42), float32], %var_4949: Tensor[(288, 4), uint32]) -> (Tensor[(14, 7), bool], Tensor[(3, 7), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64], Tensor[(140), uint64], Tensor[(216), float64], Tensor[(18, 42), float32], Tensor[(288, 4), uint32]) {
  %670 = cast(%var_4900, dtype="bool") /* ty=Tensor[(14, 7), bool] */;
  %671 = shape_of(%var_4899, dtype="int32") /* ty=Tensor[(2), int32] */;
  %672 = cast(%var_4899, dtype="bool") /* ty=Tensor[(14, 7), bool] */;
  %673 = dyn.reshape(%670, %671, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %674 = cast(meta[relay.Constant][50] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %675 = reshape(%674, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %676 = @func_4543(%675) /* ty=(Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(9, 16, 7), float64], Tensor[(3, 7), float64], Tensor[(21), float64], Tensor[(5, 28), float64]) */;
  %677 = cast(%var_4918, dtype="float64") /* ty=Tensor[(216), float64] */;
  %678 = reshape(%677, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), float64] */;
  %679 = cast(meta[relay.Constant][51] /* ty=Tensor[(140), float64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %680 = shape_of(meta[relay.Constant][50] /* ty=Tensor[(140), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %681 = cast(meta[relay.Constant][50] /* ty=Tensor[(140), float64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %682 = dyn.reshape(%679, %680, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %683 = cast(%var_4948, dtype="float32") /* ty=Tensor[(18, 42), float32] */;
  %684 = cast(%var_4949, dtype="uint32") /* ty=Tensor[(288, 4), uint32] */;
  %685 = reshape(%683, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %686 = reshape(%684, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %687 = @func_4609(%685, %686) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) */;
  %688 = equal(%672, %673) /* ty=Tensor[(14, 7), bool] */;
  %689 = %676.3;
  %690 = @func_3140(%678) /* ty=Tensor[(9, 6, 4), float64] */;
  %691 = bitwise_and(%681, %682) /* ty=Tensor[(140), uint64] */;
  %692 = %687.5;
  (%688, %689, %690, %var_4918, %691, %692, %var_4948, %var_4949)
}

def @func_5492() -> Tensor[(15, 14, 2), float32] {
  %693 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %693.0
}

def @func_6093(%var_6070: Tensor[(14, 7, 9), uint8]) -> Tensor[(14, 7, 9), float64] {
  %694 = cast(meta[relay.Constant][52] /* ty=Tensor[(14, 7, 9), uint8] */, dtype="bool") /* ty=Tensor[(14, 7, 9), bool] */;
  %695 = shape_of(%var_6070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %696 = cast(%var_6070, dtype="bool") /* ty=Tensor[(14, 7, 9), bool] */;
  %697 = dyn.reshape(%694, %695, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %698 = less_equal(%696, %697) /* ty=Tensor[(14, 7, 9), bool] */;
  %699 = cast(%698, dtype="float64") /* ty=Tensor[(14, 7, 9), float64] */;
  log(%699) /* ty=Tensor[(14, 7, 9), float64] */
}

def @func_5461(%var_5449: Tensor[(21), float64]) -> (Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) {
  %700 = cast(%var_5449, dtype="float64") /* ty=Tensor[(21), float64] */;
  %701 = cast(meta[relay.Constant][53] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %702 = reshape(%700, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
  %703 = reshape(%701, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %704 = @func_3222(%702, %703) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
  %705 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %706 = %704.3;
  (%705, %706, %var_5449, meta[relay.Constant][53] /* ty=Tensor[(140), float64] */)
}

def @func_5348(%var_5314: Tensor[(540), float64], %var_5337: uint32, %var_5338: Tensor[(1152), uint32], %var_5339: Tensor[(140), float64], %var_5343: Tensor[(16, 9, 8), uint32]) -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(16, 9, 8), bool]) {
  %707 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %708 = cast(%var_5314, dtype="float64") /* ty=Tensor[(540), float64] */;
  %709 = reshape(%708, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %710 = @func_268(%709) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %711 = cast(%var_5337, dtype="uint32") /* ty=uint32 */;
  %712 = cast(%var_5338, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %713 = cast(%var_5339, dtype="float64") /* ty=Tensor[(140), float64] */;
  %714 = reshape(%711, newshape=[]) /* ty=uint32 */;
  %715 = reshape(%712, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
  %716 = reshape(%713, newshape=[1, 140]) /* ty=Tensor[(1, 140), float64] */;
  %717 = @func_2240(%714, %715, %716) /* ty=(Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) */;
  %718 = %717.0;
  %719 = cast(%var_5343, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %720 = shape_of(%718, dtype="int32") /* ty=Tensor[(3), int32] */;
  %721 = cast(%718, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %722 = dyn.reshape(%719, %720, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %723 = %707.0;
  %724 = %710.0;
  %725 = logical_or(%721, %722) /* ty=Tensor[(16, 9, 8), bool] */;
  (%723, %724, %var_5314, %var_5337, %var_5338, %var_5339, %725)
}

def @func_8787() -> Tensor[(15, 14, 2), bool] {
  @func_8048() /* ty=Tensor[(15, 14, 2), bool] */
}

def @func_6140(%var_6137: Tensor[(6, 11, 9), float64]) -> (Tensor[(6, 11, 9), float64],) {
  %726 = cast(%var_6137, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
  %727 = acos(%726) /* ty=Tensor[(6, 11, 9), float64] */;
  (%727,)
}

def @func_6261() -> (Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) {
  %728 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %729 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  (%728, %729)
}

def @func_5132() -> Tensor[(15, 14, 2), float32] {
  %730 = cast(meta[relay.Constant][54] /* ty=Tensor[(15, 14, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  sin(%730) /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_3140(%var_3110: Tensor[(9, 6, 4), float64]) -> Tensor[(9, 6, 4), float64] {
  %731 = cast(%var_3110, dtype="float64") /* ty=Tensor[(9, 6, 4), float64] */;
  asin(%731) /* ty=Tensor[(9, 6, 4), float64] */
}

def @func_5806(%var_5793: bool, %var_5794: Tensor[(6, 15, 9), bool]) -> Tensor[(6, 15, 9), bool] {
  %732 = cast(%var_5793, dtype="bool") /* ty=bool */;
  %733 = cast(%var_5794, dtype="bool") /* ty=Tensor[(6, 15, 9), bool] */;
  logical_and(%732, %733) /* ty=Tensor[(6, 15, 9), bool] */
}

def @func_8550() -> (Tensor[(15, 14, 2), float32],) {
  %734 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  (%734,)
}

def @func_8910() -> Tensor[(3, 12, 6), uint32] {
  %735 = @func_6482() /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %735.0
}

def @func_6681(%var_6676: Tensor[(15, 14, 2), float32]) -> Tensor[(15, 14, 2), uint64] {
  %736 = @func_6634() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64]) */;
  %737 = %736.0;
  %738 = cast(%var_6676, dtype="uint64") /* ty=Tensor[(15, 14, 2), uint64] */;
  %739 = shape_of(%737, dtype="int32") /* ty=Tensor[(3), int32] */;
  %740 = cast(%737, dtype="uint64") /* ty=Tensor[(15, 14, 2), uint64] */;
  %741 = dyn.reshape(%738, %739, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
  bitwise_xor(%740, %741) /* ty=Tensor[(15, 14, 2), uint64] */
}

def @func_8751() -> (Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) {
  %742 = @func_8550() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %743 = @func_8550() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %744 = %743.0;
  %745 = cast(%744, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %746 = cast(meta[relay.Constant][55] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %747 = reshape(%746, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %748 = @func_5120(%747) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %749 = %742.0;
  %750 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  %751 = log(%745) /* ty=Tensor[(15, 14, 2), float64] */;
  %752 = %748.0;
  (%749, %750, %751, %752, meta[relay.Constant][55] /* ty=Tensor[(1404), float64] */)
}

def @func_7474(%var_7441: Tensor[(756), float32], %var_7442: Tensor[(4, 288), uint32], %var_7465: Tensor[(4, 14, 11), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(6, 9, 14), float32], Tensor[(756), float32], Tensor[(4, 288), uint32], Tensor[(4, 14, 11), float32]) {
  %753 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
  %754 = cast(%var_7441, dtype="float32") /* ty=Tensor[(756), float32] */;
  %755 = cast(%var_7442, dtype="uint32") /* ty=Tensor[(4, 288), uint32] */;
  %756 = reshape(%754, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %757 = reshape(%755, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %758 = @func_4609(%756, %757) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) */;
  %759 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %760 = %759.4;
  %761 = cast(%var_7465, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %762 = shape_of(%760, dtype="int32") /* ty=Tensor[(3), int32] */;
  %763 = cast(%760, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %764 = dyn.reshape(%761, %762, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %765 = %753.0;
  %766 = %758.0;
  %767 = multiply(%763, %764) /* ty=Tensor[(4, 14, 11), float32] */;
  (%765, %766, %var_7441, %var_7442, %767)
}

def @func_9824(%var_9803: Tensor[(1152), uint32], %var_9804: Tensor[(512), float32]) -> (Tensor[(6, 12, 3), int32], Tensor[(15, 14, 2), float32], Tensor[(756), float32], Tensor[(1152), uint32], Tensor[(512), float32]) {
  %768 = cast(meta[relay.Constant][57] /* ty=Tensor[(6, 12, 3), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 3), int32] */;
  %769 = shape_of(meta[relay.Constant][56] /* ty=Tensor[(6, 12, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %770 = cast(meta[relay.Constant][56] /* ty=Tensor[(6, 12, 3), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 3), int32] */;
  %771 = dyn.reshape(%768, %769, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
  %772 = cast(meta[relay.Constant][58] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
  %773 = cast(%var_9803, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %774 = cast(%var_9804, dtype="float32") /* ty=Tensor[(512), float32] */;
  %775 = reshape(%772, newshape=[756]) /* ty=Tensor[(756), float32] */;
  %776 = reshape(%773, newshape=[576, 2]) /* ty=Tensor[(576, 2), uint32] */;
  %777 = reshape(%774, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %778 = @func_6927(%775, %776, %777) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) */;
  %779 = bitwise_xor(%770, %771) /* ty=Tensor[(6, 12, 3), int32] */;
  %780 = %778.0;
  (%779, %780, meta[relay.Constant][58] /* ty=Tensor[(756), float32] */, %var_9803, %var_9804)
}

def @func_8543() -> (Tensor[(15, 14, 2), bool], Tensor[(140), float64], Tensor[(21), float64], Tensor[(1440), float64], int16, Tensor[(715, 3), int16], Tensor[(10, 6, 9), float64]) {
  %781 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %782 = cast(meta[relay.Constant][59] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %783 = reshape(%782, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %784 = @func_5461(%783) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
  %785 = cast(meta[relay.Constant][60] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %786 = cast(meta[relay.Constant][61] /* ty=Tensor[(715, 3), int16] */, dtype="int16") /* ty=Tensor[(715, 3), int16] */;
  %787 = %784.3;
  %788 = cast(%787, dtype="float64") /* ty=Tensor[(140), float64] */;
  %789 = reshape(%785, newshape=[]) /* ty=int16 */;
  %790 = reshape(%786, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), int16] */;
  %791 = reshape(%788, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %792 = @func_1892(%789, %790, %791) /* ty=(Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) */;
  %793 = @func_7651() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(10, 6, 9), uint8]) */;
  %794 = %793.1;
  %795 = cast(%794, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %796 = %781.0;
  %797 = %792.6;
  %798 = sinh(%795) /* ty=Tensor[(10, 6, 9), float64] */;
  (%796, %787, meta[relay.Constant][59] /* ty=Tensor[(21), float64] */, %797, meta[relay.Constant][60] /* ty=int16 */, meta[relay.Constant][61] /* ty=Tensor[(715, 3), int16] */, %798)
}

def @func_2240(%var_2216: uint32, %var_2217: Tensor[(16, 9, 8), uint32], %var_2232: Tensor[(1, 140), float64]) -> (Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) {
  %799 = cast(%var_2216, dtype="uint32") /* ty=uint32 */;
  %800 = cast(%var_2217, dtype="uint32") /* ty=Tensor[(16, 9, 8), uint32] */;
  %801 = cast(%var_2232, dtype="float64") /* ty=Tensor[(1, 140), float64] */;
  %802 = cast(meta[relay.Constant][62] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %803 = reshape(%801, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %804 = reshape(%802, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %805 = @func_1665(%803, %804) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %806 = multiply(%799, %800) /* ty=Tensor[(16, 9, 8), uint32] */;
  %807 = %805.2;
  (%806, %807, %var_2232, meta[relay.Constant][62] /* ty=Tensor[(540), float64] */)
}

def @func_7675() -> Tensor[(540), float64] {
  @func_7054() /* ty=Tensor[(540), float64] */
}

def @func_1531(%var_1523: Tensor[(3, 12, 6), uint32]) -> (Tensor[(3, 12, 6), uint32],) {
  %808 = cast(%var_1523, dtype="uint32") /* ty=Tensor[(3, 12, 6), uint32] */;
  %809 = shape_of(meta[relay.Constant][63] /* ty=Tensor[(3, 12, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %810 = cast(meta[relay.Constant][63] /* ty=Tensor[(3, 12, 6), uint32] */, dtype="uint32") /* ty=Tensor[(3, 12, 6), uint32] */;
  %811 = dyn.reshape(%808, %809, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
  %812 = bitwise_and(%810, %811) /* ty=Tensor[(3, 12, 6), uint32] */;
  (%812,)
}

def @func_8048() -> Tensor[(15, 14, 2), bool] {
  %813 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %813.0
}

def @func_9045(%var_9019: Tensor[(512), float32], %var_9026: Tensor[(832, 1), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(216), float64], Tensor[(832, 540), float32]) {
  %814 = cast(%var_9026, dtype="float64") /* ty=Tensor[(832, 1), float64] */;
  %815 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %816 = cast(%815, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %817 = reshape(%814, newshape=[4, 208]) /* ty=Tensor[(4, 208), float64] */;
  %818 = reshape(%816, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %819 = @func_8638(%817, %818) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(15, 14, 2), float64], Tensor[(420), float32], Tensor[(216), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(4, 208), float64], Tensor[(9, 10, 6), float32]) */;
  %820 = cast(%var_9019, dtype="float32") /* ty=Tensor[(512), float32] */;
  %821 = cast(%var_9019, dtype="float32") /* ty=Tensor[(512), float32] */;
  %822 = reshape(%820, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %823 = reshape(%821, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %824 = @func_4241(%822, %823) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
  %825 = %824.1;
  %826 = cast(%825, dtype="int64") /* ty=Tensor[(540), int64] */;
  %827 = cast(%var_9026, dtype="int64") /* ty=Tensor[(832, 1), int64] */;
  %828 = bitwise_or(%826, %827) /* ty=Tensor[(832, 540), int64] */;
  %829 = cast(%828, dtype="float32") /* ty=Tensor[(832, 540), float32] */;
  %830 = %819.4;
  %831 = log2(%829) /* ty=Tensor[(832, 540), float32] */;
  (%815, %var_9019, %830, %831)
}

def @func_8638(%var_8590: Tensor[(4, 208), float64], %var_8600: Tensor[(420), float32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(15, 14, 2), float64], Tensor[(420), float32], Tensor[(216), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(4, 208), float64], Tensor[(9, 10, 6), float32]) {
  %832 = cast(meta[relay.Constant][64] /* ty=Tensor[(4, 208), float64] */, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %833 = reshape(%832, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %834 = @func_6812(%833) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) */;
  %835 = cast(%var_8600, dtype="float32") /* ty=Tensor[(420), float32] */;
  %836 = cast(meta[relay.Constant][65] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %837 = reshape(%835, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float32] */;
  %838 = reshape(%836, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %839 = @func_5866(%837, %838) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(15, 14, 2), float32], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */;
  %840 = %834.1;
  %841 = cast(%840, dtype="float32") /* ty=Tensor[(540), float32] */;
  %842 = reshape(%841, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float32] */;
  %843 = @func_1053(%842) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) */;
  %844 = cast(%var_8590, dtype="bool") /* ty=Tensor[(4, 208), bool] */;
  %845 = shape_of(meta[relay.Constant][64] /* ty=Tensor[(4, 208), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
  %846 = cast(meta[relay.Constant][64] /* ty=Tensor[(4, 208), float64] */, dtype="bool") /* ty=Tensor[(4, 208), bool] */;
  %847 = dyn.reshape(%844, %845, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %848 = greater(%846, %847) /* ty=Tensor[(4, 208), bool] */;
  %849 = cast(%var_8590, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %850 = shape_of(%848, dtype="int32") /* ty=Tensor[(2), int32] */;
  %851 = cast(%848, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
  %852 = dyn.reshape(%849, %850, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
  %853 = @func_7054() /* ty=Tensor[(540), float64] */;
  %854 = cast(%853, dtype="float32") /* ty=Tensor[(540), float32] */;
  %855 = reshape(%854, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float32] */;
  %856 = @func_1053(%855) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) */;
  %857 = %839.0;
  %858 = @func_7675() /* ty=Tensor[(540), float64] */;
  %859 = %843.0;
  %860 = mod(%851, %852) /* ty=Tensor[(4, 208), float64] */;
  %861 = %856.0;
  (%853, %840, %857, %var_8600, meta[relay.Constant][65] /* ty=Tensor[(216), float64] */, %858, %859, %860, %861)
}

def @func_8951(%var_8941: Tensor[(504), float32], %var_8944: Tensor[(140), float64]) -> (Tensor[(15, 14, 2), bool], Tensor[(12, 7, 9), float64], Tensor[(504), float32], Tensor[(216), uint32], Tensor[(540), float32], Tensor[(140), float64]) {
  %862 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %863 = cast(%var_8941, dtype="float32") /* ty=Tensor[(504), float32] */;
  %864 = cast(meta[relay.Constant][66] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %865 = cast(meta[relay.Constant][67] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
  %866 = cast(%var_8944, dtype="float64") /* ty=Tensor[(140), float64] */;
  %867 = reshape(%863, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float32] */;
  %868 = reshape(%864, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint32] */;
  %869 = reshape(%865, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
  %870 = reshape(%866, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %871 = @func_2533(%867, %868, %869, %870) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 7, 9), float64], Tensor[(756), float64], Tensor[(4, 12, 8), float64], Tensor[(108, 2), uint32], Tensor[(1440), float64], Tensor[(96, 4), uint16], Tensor[(3, 180), uint16], Tensor[(540), float64], Tensor[(140), float64], Tensor[(3, 180), bool], Tensor[(3, 12, 6), uint32], Tensor[(3, 180), float32]) */;
  %872 = %862.0;
  %873 = %871.1;
  (%872, %873, %var_8941, meta[relay.Constant][66] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][67] /* ty=Tensor[(540), float32] */, %var_8944)
}

def @func_9181(%var_9159: Tensor[(832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 13, 7), int16], Tensor[(98), int16], Tensor[(1274), int16]) {
  %874 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %875 = cast(%var_9159, dtype="float64") /* ty=Tensor[(832), float64] */;
  %876 = cast(%var_9159, dtype="float64") /* ty=Tensor[(832), float64] */;
  %877 = reshape(%875, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %878 = reshape(%876, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %879 = cast(meta[relay.Constant][68] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
  %880 = cast(meta[relay.Constant][69] /* ty=Tensor[(1274), int16] */, dtype="int16") /* ty=Tensor[(1274), int16] */;
  %881 = reshape(%879, newshape=[14, 1, 7]) /* ty=Tensor[(14, 1, 7), int16] */;
  %882 = reshape(%880, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), int16] */;
  %883 = %874.0;
  %884 = @func_1173(%877, %878) /* ty=Tensor[(16, 4, 13), float64] */;
  %885 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %886 = @func_5064(%881, %882) /* ty=Tensor[(14, 13, 7), int16] */;
  (%883, %884, %var_9159, %885, %886, meta[relay.Constant][68] /* ty=Tensor[(98), int16] */, meta[relay.Constant][69] /* ty=Tensor[(1274), int16] */)
}

def @func_9286() -> (Tensor[(15, 14, 2), bool],) {
  %887 = @func_8787() /* ty=Tensor[(15, 14, 2), bool] */;
  (%887,)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_6096(%var_6094: Tensor[(14, 7, 9), uint8]) -> Tensor[(14, 7, 9), float64] {
  @func_6093(%var_6094) /* ty=Tensor[(14, 7, 9), float64] */
}

def @func_6207(%var_6184: Tensor[(1404), float64], %var_6189: Tensor[(21), float64]) -> (Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) {
  %0 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %1 = %0.0;
  %2 = cast(%1, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %3 = cast(%var_6184, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %4 = reshape(%3, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %5 = @func_5120(%4) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %6 = cast(%var_6189, dtype="float64") /* ty=Tensor[(21), float64] */;
  %7 = reshape(%6, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %8 = @func_5461(%7) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
  %9 = sinh(%2) /* ty=Tensor[(15, 14, 2), float64] */;
  %10 = %5.0;
  %11 = %8.0;
  (%9, %10, %var_6184, %11, %var_6189)
}

def @main(%var_9925: Tensor[(13, 2, 15), float32]) -> (Tensor[(13, 2, 15), float32],) {
  %12 = cast(%var_9925, dtype="float32") /* ty=Tensor[(13, 2, 15), float32] */;
  %13 = shape_of(meta[relay.Constant][0] /* ty=Tensor[(13, 2, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %14 = cast(meta[relay.Constant][0] /* ty=Tensor[(13, 2, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 2, 15), float32] */;
  %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %16 = floor_divide(%14, %15) /* ty=Tensor[(13, 2, 15), float32] */;
  (%16,)
}

def @func_6211(%var_6209: Tensor[(1404), float64], %var_6210: Tensor[(21), float64]) -> (Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) {
  @func_6207(%var_6209, %var_6210) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) */
}

def @func_9277() -> (Tensor[(15, 14, 2), float32],) {
  @func_9275() /* ty=(Tensor[(15, 14, 2), float32],) */
}

def @func_5787() -> (Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) {
  @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */
}

def @func_5133() -> Tensor[(15, 14, 2), float32] {
  %18 = fn () -> Tensor[(15, 14, 2), float32] {
    %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(15, 14, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
    sin(%17) /* ty=Tensor[(15, 14, 2), float32] */
  };
  %18() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_2332(%var_2328: Tensor[(4, 12, 8), float64], %var_2329: Tensor[(216), uint32], %var_2330: Tensor[(540), float64], %var_2331: Tensor[(1440), float64]) -> (Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) {
  @func_2326(%var_2328, %var_2329, %var_2330, %var_2331) /* ty=(Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) */
}

def @func_8751() -> (Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) {
  %19 = @func_8550() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %20 = @func_8550() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %21 = %20.0;
  %22 = cast(%21, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
  %23 = cast(meta[relay.Constant][2] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %24 = reshape(%23, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %25 = @func_5120(%24) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %26 = %19.0;
  %27 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  %28 = log(%22) /* ty=Tensor[(15, 14, 2), float64] */;
  %29 = %25.0;
  (%26, %27, %28, %29, meta[relay.Constant][2] /* ty=Tensor[(1404), float64] */)
}

def @func_8641(%var_8639: Tensor[(4, 208), float64], %var_8640: Tensor[(420), float32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(15, 14, 2), float64], Tensor[(420), float32], Tensor[(216), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(4, 208), float64], Tensor[(9, 10, 6), float32]) {
  %60 = fn (%var_8590: Tensor[(4, 208), float64], %var_8600: Tensor[(420), float32]) -> (Tensor[(540), float64], Tensor[(540), float64], Tensor[(15, 14, 2), float64], Tensor[(420), float32], Tensor[(216), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(4, 208), float64], Tensor[(9, 10, 6), float32]) {
    %30 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 208), float64] */, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
    %31 = reshape(%30, newshape=[832]) /* ty=Tensor[(832), float64] */;
    %32 = @func_6812(%31) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) */;
    %33 = cast(%var_8600, dtype="float32") /* ty=Tensor[(420), float32] */;
    %34 = cast(meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %35 = reshape(%33, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float32] */;
    %36 = reshape(%34, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %37 = @func_5866(%35, %36) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(15, 14, 2), float32], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */;
    %38 = %32.1;
    %39 = cast(%38, dtype="float32") /* ty=Tensor[(540), float32] */;
    %40 = reshape(%39, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float32] */;
    %41 = @func_1053(%40) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) */;
    %42 = cast(%var_8590, dtype="bool") /* ty=Tensor[(4, 208), bool] */;
    %43 = shape_of(meta[relay.Constant][3] /* ty=Tensor[(4, 208), float64] */, dtype="int32") /* ty=Tensor[(2), int32] */;
    %44 = cast(meta[relay.Constant][3] /* ty=Tensor[(4, 208), float64] */, dtype="bool") /* ty=Tensor[(4, 208), bool] */;
    %45 = dyn.reshape(%42, %43, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %46 = greater(%44, %45) /* ty=Tensor[(4, 208), bool] */;
    %47 = cast(%var_8590, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
    %48 = shape_of(%46, dtype="int32") /* ty=Tensor[(2), int32] */;
    %49 = cast(%46, dtype="float64") /* ty=Tensor[(4, 208), float64] */;
    %50 = dyn.reshape(%47, %48, newshape=[]) /* ty=Tensor[(?, ?), float64] */;
    %51 = @func_7054() /* ty=Tensor[(540), float64] */;
    %52 = cast(%51, dtype="float32") /* ty=Tensor[(540), float32] */;
    %53 = reshape(%52, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float32] */;
    %54 = @func_1053(%53) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) */;
    %55 = %37.0;
    %56 = @func_7675() /* ty=Tensor[(540), float64] */;
    %57 = %41.0;
    %58 = mod(%49, %50) /* ty=Tensor[(4, 208), float64] */;
    %59 = %54.0;
    (%51, %38, %55, %var_8600, meta[relay.Constant][4] /* ty=Tensor[(216), float64] */, %56, %57, %58, %59)
  };
  %60(%var_8639, %var_8640) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(15, 14, 2), float64], Tensor[(420), float32], Tensor[(216), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(4, 208), float64], Tensor[(9, 10, 6), float32]) */
}

def @func_6418() -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) {
  %69 = fn () -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) {
    %61 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
    %62 = cast(meta[relay.Constant][5] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %63 = cast(meta[relay.Constant][6] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %64 = reshape(%62, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
    %65 = reshape(%63, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %66 = @func_1665(%64, %65) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
    %67 = %61.0;
    %68 = %66.0;
    (%67, %68, meta[relay.Constant][5] /* ty=Tensor[(140), float64] */, meta[relay.Constant][6] /* ty=Tensor[(540), float64] */)
  };
  %69() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */
}

def @func_8297() -> Tensor[(9, 14, 16), int8] {
  %71 = fn () -> Tensor[(9, 14, 16), int8] {
    %70 = @func_6788() /* ty=(Tensor[(9, 14, 16), int8],) */;
    %70.0
  };
  %71() /* ty=Tensor[(9, 14, 16), int8] */
}

def @func_271(%var_269: Tensor[(10, 6, 9), float64]) -> (Tensor[(10, 6, 9), uint8],) {
  @func_268(%var_269) /* ty=(Tensor[(10, 6, 9), uint8],) */
}

def @func_1056(%var_1054: Tensor[(9, 10, 6), float32]) -> (Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) {
  @func_1053(%var_1054) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) */
}

def @func_4244(%var_4242: Tensor[(8, 8, 8), float32], %var_4243: Tensor[(8, 8, 8), float32]) -> (Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) {
  %85 = fn (%var_4192: Tensor[(8, 8, 8), float32], %var_4206: Tensor[(8, 8, 8), float32]) -> (Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) {
    %72 = cast(meta[relay.Constant][7] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %73 = reshape(%72, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
    %74 = @func_268(%73) /* ty=(Tensor[(10, 6, 9), uint8],) */;
    %75 = cast(%var_4192, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
    %76 = acosh(%75) /* ty=Tensor[(8, 8, 8), float32] */;
    %77 = cast(%var_4206, dtype="int32") /* ty=Tensor[(8, 8, 8), int32] */;
    %78 = shape_of(%76, dtype="int32") /* ty=Tensor[(3), int32] */;
    %79 = cast(%76, dtype="int32") /* ty=Tensor[(8, 8, 8), int32] */;
    %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %81 = bitwise_or(%79, %80) /* ty=Tensor[(8, 8, 8), int32] */;
    %82 = cast(%81, dtype="float64") /* ty=Tensor[(8, 8, 8), float64] */;
    %83 = %74.0;
    %84 = sqrt(%82) /* ty=Tensor[(8, 8, 8), float64] */;
    (%83, meta[relay.Constant][7] /* ty=Tensor[(540), float64] */, %84)
  };
  %85(%var_4242, %var_4243) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */
}

def @func_8997(%var_8975: Tensor[(594), float64], %var_8980: Tensor[(140), float64]) -> (Tensor[(10, 6, 9), uint8], Tensor[(6, 11, 9), float64], Tensor[(16, 9, 8), bool], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(594), float32]) {
  %86 = @func_7116() /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %87 = cast(%var_8975, dtype="float64") /* ty=Tensor[(594), float64] */;
  %88 = reshape(%87, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
  %89 = @func_6140(%88) /* ty=(Tensor[(6, 11, 9), float64],) */;
  %90 = %86.0;
  %91 = cast(%90, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %92 = cast(meta[relay.Constant][8] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %93 = cast(meta[relay.Constant][9] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %94 = cast(%var_8980, dtype="float64") /* ty=Tensor[(140), float64] */;
  %95 = cast(meta[relay.Constant][9] /* ty=Tensor[(1152), uint32] */, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %96 = reshape(%91, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %97 = reshape(%92, newshape=[]) /* ty=uint32 */;
  %98 = reshape(%93, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %99 = reshape(%94, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %100 = reshape(%95, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
  %101 = @func_5348(%96, %97, %98, %99, %100) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(16, 9, 8), bool]) */;
  %102 = cast(%var_8975, dtype="float32") /* ty=Tensor[(594), float32] */;
  %103 = atan(%102) /* ty=Tensor[(594), float32] */;
  %104 = cast(%103, dtype="float32") /* ty=Tensor[(594), float32] */;
  %105 = %89.0;
  %106 = %101.6;
  %107 = log10(%104) /* ty=Tensor[(594), float32] */;
  (%90, %105, %106, meta[relay.Constant][8] /* ty=uint32 */, meta[relay.Constant][9] /* ty=Tensor[(1152), uint32] */, %var_8980, %107)
}

def @func_6932(%var_6929: Tensor[(756), float32], %var_6930: Tensor[(576, 2), uint32], %var_6931: Tensor[(512), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) {
  @func_6927(%var_6929, %var_6930, %var_6931) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) */
}

def @func_5587(%var_5581: Tensor[(54, 10), float64]) -> (Tensor[(15, 14, 2), bool], Tensor[(54, 10), float32]) {
  %108 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %109 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %110 = %109.1;
  %111 = cast(%var_5581, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %112 = shape_of(%110, dtype="int32") /* ty=Tensor[(2), int32] */;
  %113 = cast(%110, dtype="float32") /* ty=Tensor[(54, 10), float32] */;
  %114 = dyn.reshape(%111, %112, newshape=[]) /* ty=Tensor[(?, ?), float32] */;
  %115 = %108.0;
  %116 = power(%113, %114) /* ty=Tensor[(54, 10), float32] */;
  (%115, %116)
}

def @func_3991(%var_3986: Tensor[(4, 14, 2), float64]) -> Tensor[(4, 14, 2), float64] {
  %117 = cast(%var_3986, dtype="float64") /* ty=Tensor[(4, 14, 2), float64] */;
  cosh(%117) /* ty=Tensor[(4, 14, 2), float64] */
}

def @func_1669(%var_1667: Tensor[(14, 1, 10), float64], %var_1668: Tensor[(540), float64]) -> (Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) {
  @func_1665(%var_1667, %var_1668) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */
}

def @func_7235(%var_7232: Tensor[(13, 9, 15), float32], %var_7233: Tensor[(70, 2), float64], %var_7234: Tensor[(21), float64]) -> (Tensor[(13, 9, 15), float32], Tensor[(540), float64], Tensor[(13, 9, 15), float64], Tensor[(540), float64], Tensor[(70, 2), float64], Tensor[(140), float64], Tensor[(21), float64]) {
  %138 = fn (%var_7189: Tensor[(13, 9, 15), float32], %var_7210: Tensor[(70, 2), float64], %var_7213: Tensor[(21), float64]) -> (Tensor[(13, 9, 15), float32], Tensor[(540), float64], Tensor[(13, 9, 15), float64], Tensor[(540), float64], Tensor[(70, 2), float64], Tensor[(140), float64], Tensor[(21), float64]) {
    %118 = cast(%var_7189, dtype="float32") /* ty=Tensor[(13, 9, 15), float32] */;
    %119 = shape_of(meta[relay.Constant][10] /* ty=Tensor[(13, 9, 15), float32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %120 = cast(meta[relay.Constant][10] /* ty=Tensor[(13, 9, 15), float32] */, dtype="float32") /* ty=Tensor[(13, 9, 15), float32] */;
    %121 = dyn.reshape(%118, %119, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %122 = cast(%var_7189, dtype="float64") /* ty=Tensor[(13, 9, 15), float64] */;
    %123 = cast(%var_7210, dtype="float64") /* ty=Tensor[(70, 2), float64] */;
    %124 = @func_7054() /* ty=Tensor[(540), float64] */;
    %125 = cast(%124, dtype="float64") /* ty=Tensor[(540), float64] */;
    %126 = reshape(%123, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
    %127 = reshape(%125, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %128 = @func_1665(%126, %127) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
    %129 = cast(%var_7213, dtype="float64") /* ty=Tensor[(21), float64] */;
    %130 = cast(%var_7210, dtype="float64") /* ty=Tensor[(70, 2), float64] */;
    %131 = reshape(%129, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
    %132 = reshape(%130, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %133 = @func_3222(%131, %132) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
    %134 = floor_mod(%120, %121) /* ty=Tensor[(13, 9, 15), float32] */;
    %135 = exp(%122) /* ty=Tensor[(13, 9, 15), float64] */;
    %136 = %128.1;
    %137 = %133.4;
    (%134, %124, %135, %136, %var_7210, %137, %var_7213)
  };
  %138(%var_7232, %var_7233, %var_7234) /* ty=(Tensor[(13, 9, 15), float32], Tensor[(540), float64], Tensor[(13, 9, 15), float64], Tensor[(540), float64], Tensor[(70, 2), float64], Tensor[(140), float64], Tensor[(21), float64]) */
}

def @func_7181(%var_7169: Tensor[(9, 4, 1), bool]) -> Tensor[(9, 4, 1), bool] {
  %139 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
  %140 = cast(%var_7169, dtype="bool") /* ty=Tensor[(9, 4, 1), bool] */;
  logical_and(%139, %140) /* ty=Tensor[(9, 4, 1), bool] */
}

def @func_8102() -> Tensor[(15, 14, 2), float32] {
  @func_8100() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_268(%var_234: Tensor[(10, 6, 9), float64]) -> (Tensor[(10, 6, 9), uint8],) {
  %141 = cast(%var_234, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %142 = cos(%141) /* ty=Tensor[(10, 6, 9), float64] */;
  %143 = cast(%var_234, dtype="uint8") /* ty=Tensor[(10, 6, 9), uint8] */;
  %144 = shape_of(%142, dtype="int32") /* ty=Tensor[(3), int32] */;
  %145 = cast(%142, dtype="uint8") /* ty=Tensor[(10, 6, 9), uint8] */;
  %146 = dyn.reshape(%143, %144, newshape=[]) /* ty=Tensor[(?, ?, ?), uint8] */;
  %147 = maximum(%145, %146) /* ty=Tensor[(10, 6, 9), uint8] */;
  (%147,)
}

def @func_5590(%var_5588: Tensor[(54, 10), float64]) -> (Tensor[(15, 14, 2), bool], Tensor[(54, 10), float32]) {
  @func_5587(%var_5588) /* ty=(Tensor[(15, 14, 2), bool], Tensor[(54, 10), float32]) */
}

def @func_7427(%var_7423: Tensor[(1, 756), float32], %var_7424: Tensor[(512), float32], %var_7425: Tensor[(882), uint8], %var_7426: Tensor[(140), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(1, 756), float32], Tensor[(2, 576), uint32], Tensor[(512), float32], Tensor[(14, 7, 9), float64], Tensor[(882), uint8], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 1, 10), float32], uint32, Tensor[(140), float64]) {
  @func_7421(%var_7423, %var_7424, %var_7425, %var_7426) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(1, 756), float32], Tensor[(2, 576), uint32], Tensor[(512), float32], Tensor[(14, 7, 9), float64], Tensor[(882), uint8], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 1, 10), float32], uint32, Tensor[(140), float64]) */
}

def @func_9183(%var_9182: Tensor[(832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 13, 7), int16], Tensor[(98), int16], Tensor[(1274), int16]) {
  %161 = fn (%var_9159: Tensor[(832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 13, 7), int16], Tensor[(98), int16], Tensor[(1274), int16]) {
    %148 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
    %149 = cast(%var_9159, dtype="float64") /* ty=Tensor[(832), float64] */;
    %150 = cast(%var_9159, dtype="float64") /* ty=Tensor[(832), float64] */;
    %151 = reshape(%149, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
    %152 = reshape(%150, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
    %153 = cast(meta[relay.Constant][11] /* ty=Tensor[(98), int16] */, dtype="int16") /* ty=Tensor[(98), int16] */;
    %154 = cast(meta[relay.Constant][12] /* ty=Tensor[(1274), int16] */, dtype="int16") /* ty=Tensor[(1274), int16] */;
    %155 = reshape(%153, newshape=[14, 1, 7]) /* ty=Tensor[(14, 1, 7), int16] */;
    %156 = reshape(%154, newshape=[14, 13, 7]) /* ty=Tensor[(14, 13, 7), int16] */;
    %157 = %148.0;
    %158 = @func_1173(%151, %152) /* ty=Tensor[(16, 4, 13), float64] */;
    %159 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
    %160 = @func_5064(%155, %156) /* ty=Tensor[(14, 13, 7), int16] */;
    (%157, %158, %var_9159, %159, %160, meta[relay.Constant][11] /* ty=Tensor[(98), int16] */, meta[relay.Constant][12] /* ty=Tensor[(1274), int16] */)
  };
  %161(%var_9182) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 13, 7), int16], Tensor[(98), int16], Tensor[(1274), int16]) */
}

def @func_8847(%var_8841: Tensor[(21), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(140), float64], Tensor[(21), float64]) {
  %162 = cast(%var_8841, dtype="float64") /* ty=Tensor[(21), float64] */;
  %163 = reshape(%162, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %164 = @func_5461(%163) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
  %165 = @func_8411() /* ty=Tensor[(15, 14, 2), float32] */;
  %166 = %164.3;
  (%165, %166, %var_8841)
}

def @func_3558(%var_3554: Tensor[(11, 15, 16), float64], %var_3555: uint32, %var_3556: Tensor[(1152), uint32], %var_3557: Tensor[(216), float64]) -> (Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) {
  %190 = fn (%var_3509: Tensor[(11, 15, 16), float64], %var_3524: uint32, %var_3525: Tensor[(1152), uint32], %var_3546: Tensor[(216), float64]) -> (Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) {
    %167 = cast(meta[relay.Constant][13] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %168 = cast(meta[relay.Constant][14] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %169 = reshape(%167, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
    %170 = reshape(%168, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %171 = @func_1665(%169, %170) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
    %172 = cast(%var_3524, dtype="uint32") /* ty=uint32 */;
    %173 = cast(%var_3525, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
    %174 = cast(meta[relay.Constant][13] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %175 = reshape(%172, newshape=[]) /* ty=uint32 */;
    %176 = reshape(%173, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
    %177 = reshape(%174, newshape=[1, 140]) /* ty=Tensor[(1, 140), float64] */;
    %178 = @func_2240(%175, %176, %177) /* ty=(Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) */;
    %179 = cast(%var_3509, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
    %180 = asinh(%179) /* ty=Tensor[(11, 15, 16), float64] */;
    %181 = cast(%180, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
    %182 = tan(%181) /* ty=Tensor[(11, 15, 16), float64] */;
    %183 = cast(%182, dtype="float64") /* ty=Tensor[(11, 15, 16), float64] */;
    %184 = cast(%var_3546, dtype="float64") /* ty=Tensor[(216), float64] */;
    %185 = reshape(%184, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), float64] */;
    %186 = %171.1;
    %187 = %178.2;
    %188 = acos(%183) /* ty=Tensor[(11, 15, 16), float64] */;
    %189 = @func_3140(%185) /* ty=Tensor[(9, 6, 4), float64] */;
    (%186, meta[relay.Constant][13] /* ty=Tensor[(140), float64] */, meta[relay.Constant][14] /* ty=Tensor[(540), float64] */, %187, %var_3524, %var_3525, %188, %189, %var_3546)
  };
  %190(%var_3554, %var_3555, %var_3556, %var_3557) /* ty=(Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */
}

def @func_9555() -> Tensor[(540), float64] {
  %192 = fn () -> Tensor[(540), float64] {
    %191 = @func_6525() /* ty=(Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) */;
    %191.0
  };
  %192() /* ty=Tensor[(540), float64] */
}

def @func_5745(%var_5744: Tensor[(512), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), bool]) {
  %213 = fn (%var_5703: Tensor[(512), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), bool]) {
    %193 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
    %194 = cast(%var_5703, dtype="float32") /* ty=Tensor[(512), float32] */;
    %195 = cast(%var_5703, dtype="float32") /* ty=Tensor[(512), float32] */;
    %196 = reshape(%194, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
    %197 = reshape(%195, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
    %198 = @func_4241(%196, %197) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
    %199 = %198.2;
    %200 = cast(%var_5703, dtype="uint32") /* ty=Tensor[(512), uint32] */;
    %201 = shape_of(%199, dtype="int32") /* ty=Tensor[(3), int32] */;
    %202 = cast(%199, dtype="uint32") /* ty=Tensor[(8, 8, 8), uint32] */;
    %203 = dyn.reshape(%200, %201, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %204 = right_shift(%202, %203) /* ty=Tensor[(8, 8, 8), uint32] */;
    %205 = cast(%204, dtype="float32") /* ty=Tensor[(8, 8, 8), float32] */;
    %206 = asinh(%205) /* ty=Tensor[(8, 8, 8), float32] */;
    %207 = cast(%206, dtype="bool") /* ty=Tensor[(8, 8, 8), bool] */;
    %208 = shape_of(%var_5703, dtype="int32") /* ty=Tensor[(1), int32] */;
    %209 = cast(%var_5703, dtype="bool") /* ty=Tensor[(512), bool] */;
    %210 = dyn.reshape(%207, %208, newshape=[]) /* ty=Tensor[(?), bool] */;
    %211 = %193.0;
    %212 = equal(%209, %210) /* ty=Tensor[(512), bool] */;
    (%211, %212)
  };
  %213(%var_5744) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(512), bool]) */
}

def @func_2539(%var_2535: Tensor[(12, 3, 14), float32], %var_2536: Tensor[(108, 2), uint32], %var_2537: Tensor[(3, 180), float32], %var_2538: Tensor[(140), float64]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 7, 9), float64], Tensor[(756), float64], Tensor[(4, 12, 8), float64], Tensor[(108, 2), uint32], Tensor[(1440), float64], Tensor[(96, 4), uint16], Tensor[(3, 180), uint16], Tensor[(540), float64], Tensor[(140), float64], Tensor[(3, 180), bool], Tensor[(3, 12, 6), uint32], Tensor[(3, 180), float32]) {
  @func_2533(%var_2535, %var_2536, %var_2537, %var_2538) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 7, 9), float64], Tensor[(756), float64], Tensor[(4, 12, 8), float64], Tensor[(108, 2), uint32], Tensor[(1440), float64], Tensor[(96, 4), uint16], Tensor[(3, 180), uint16], Tensor[(540), float64], Tensor[(140), float64], Tensor[(3, 180), bool], Tensor[(3, 12, 6), uint32], Tensor[(3, 180), float32]) */
}

def @func_6142(%var_6141: Tensor[(6, 11, 9), float64]) -> (Tensor[(6, 11, 9), float64],) {
  %216 = fn (%var_6137: Tensor[(6, 11, 9), float64]) -> (Tensor[(6, 11, 9), float64],) {
    %214 = cast(%var_6137, dtype="float64") /* ty=Tensor[(6, 11, 9), float64] */;
    %215 = acos(%214) /* ty=Tensor[(6, 11, 9), float64] */;
    (%215,)
  };
  %216(%var_6141) /* ty=(Tensor[(6, 11, 9), float64],) */
}

def @func_5199() -> (Tensor[(15, 14, 2), float32],) {
  %217 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  (%217,)
}

def @func_6814(%var_6813: Tensor[(832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) {
  %224 = fn (%var_6805: Tensor[(832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) {
    %218 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
    %219 = cast(%var_6805, dtype="float64") /* ty=Tensor[(832), float64] */;
    %220 = reshape(%219, newshape=[1, 832]) /* ty=Tensor[(1, 832), float64] */;
    %221 = @func_6768(%220) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(1, 832), float64], Tensor[(4, 14, 11), float32], Tensor[(540), float64]) */;
    %222 = %218.1;
    %223 = %221.4;
    (%222, %223, %var_6805)
  };
  %224(%var_6813) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) */
}

def @func_6261() -> (Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) {
  %225 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %226 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  (%225, %226)
}

def @func_6927(%var_6902: Tensor[(756), float32], %var_6903: Tensor[(576, 2), uint32], %var_6911: Tensor[(512), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) {
  %227 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
  %228 = cast(meta[relay.Constant][15] /* ty=Tensor[(98), uint8] */, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %229 = cast(meta[relay.Constant][15] /* ty=Tensor[(98), uint8] */, dtype="uint8") /* ty=Tensor[(98), uint8] */;
  %230 = cast(meta[relay.Constant][16] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
  %231 = cast(%var_6902, dtype="float32") /* ty=Tensor[(756), float32] */;
  %232 = cast(%var_6903, dtype="uint32") /* ty=Tensor[(576, 2), uint32] */;
  %233 = reshape(%228, newshape=[14, 7]) /* ty=Tensor[(14, 7), uint8] */;
  %234 = reshape(%229, newshape=[14, 7]) /* ty=Tensor[(14, 7), uint8] */;
  %235 = reshape(%230, newshape=[216]) /* ty=Tensor[(216), float64] */;
  %236 = reshape(%231, newshape=[18, 42]) /* ty=Tensor[(18, 42), float32] */;
  %237 = reshape(%232, newshape=[288, 4]) /* ty=Tensor[(288, 4), uint32] */;
  %238 = @func_4967(%233, %234, %235, %236, %237) /* ty=(Tensor[(14, 7), bool], Tensor[(3, 7), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64], Tensor[(140), uint64], Tensor[(216), float64], Tensor[(18, 42), float32], Tensor[(288, 4), uint32]) */;
  %239 = cast(meta[relay.Constant][17] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %240 = cast(%var_6911, dtype="float32") /* ty=Tensor[(512), float32] */;
  %241 = reshape(%239, newshape=[9, 156]) /* ty=Tensor[(9, 156), float64] */;
  %242 = reshape(%240, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %243 = @func_6325(%241, %242) /* ty=(Tensor[(11, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(9, 156), float64], Tensor[(8, 8, 8), float64], Tensor[(512), float32], Tensor[(15, 14, 2), bool]) */;
  %244 = %227.1;
  %245 = %238.7;
  %246 = %243.2;
  (%244, %245, meta[relay.Constant][15] /* ty=Tensor[(98), uint8] */, meta[relay.Constant][16] /* ty=Tensor[(216), float64] */, %var_6902, %var_6903, %246, meta[relay.Constant][17] /* ty=Tensor[(1404), float64] */, %var_6911)
}

def @func_9710(%var_9706: Tensor[(384), float64], %var_9707: Tensor[(216), uint32], %var_9708: Tensor[(540), float64], %var_9709: Tensor[(1440), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(384), float64], Tensor[(216), uint32], Tensor[(540), float64], Tensor[(1440), float64], Tensor[(10, 6, 9), uint8]) {
  %260 = fn (%var_9679: Tensor[(384), float64], %var_9680: Tensor[(216), uint32], %var_9681: Tensor[(540), float64], %var_9682: Tensor[(1440), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(384), float64], Tensor[(216), uint32], Tensor[(540), float64], Tensor[(1440), float64], Tensor[(10, 6, 9), uint8]) {
    %247 = cast(%var_9679, dtype="float64") /* ty=Tensor[(384), float64] */;
    %248 = cast(%var_9680, dtype="uint32") /* ty=Tensor[(216), uint32] */;
    %249 = cast(%var_9681, dtype="float64") /* ty=Tensor[(540), float64] */;
    %250 = cast(%var_9682, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %251 = reshape(%247, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), float64] */;
    %252 = reshape(%248, newshape=[216]) /* ty=Tensor[(216), uint32] */;
    %253 = reshape(%249, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %254 = reshape(%250, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
    %255 = @func_2326(%251, %252, %253, %254) /* ty=(Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) */;
    %256 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
    %257 = @func_8411() /* ty=Tensor[(15, 14, 2), float32] */;
    %258 = %255.4;
    %259 = %256.1;
    (%257, %258, %var_9679, %var_9680, %var_9681, %var_9682, %259)
  };
  %260(%var_9706, %var_9707, %var_9708, %var_9709) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(384), float64], Tensor[(216), uint32], Tensor[(540), float64], Tensor[(1440), float64], Tensor[(10, 6, 9), uint8]) */
}

def @func_7474(%var_7441: Tensor[(756), float32], %var_7442: Tensor[(4, 288), uint32], %var_7465: Tensor[(4, 14, 11), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(6, 9, 14), float32], Tensor[(756), float32], Tensor[(4, 288), uint32], Tensor[(4, 14, 11), float32]) {
  %261 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
  %262 = cast(%var_7441, dtype="float32") /* ty=Tensor[(756), float32] */;
  %263 = cast(%var_7442, dtype="uint32") /* ty=Tensor[(4, 288), uint32] */;
  %264 = reshape(%262, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %265 = reshape(%263, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %266 = @func_4609(%264, %265) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) */;
  %267 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %268 = %267.4;
  %269 = cast(%var_7465, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %270 = shape_of(%268, dtype="int32") /* ty=Tensor[(3), int32] */;
  %271 = cast(%268, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %272 = dyn.reshape(%269, %270, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %273 = %261.0;
  %274 = %266.0;
  %275 = multiply(%271, %272) /* ty=Tensor[(4, 14, 11), float32] */;
  (%273, %274, %var_7441, %var_7442, %275)
}

def @func_6325(%var_6307: Tensor[(9, 156), float64], %var_6311: Tensor[(512), float32]) -> (Tensor[(11, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(9, 156), float64], Tensor[(8, 8, 8), float64], Tensor[(512), float32], Tensor[(15, 14, 2), bool]) {
  %276 = cast(meta[relay.Constant][18] /* ty=Tensor[(11, 14, 2), float64] */, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
  %277 = log2(%276) /* ty=Tensor[(11, 14, 2), float64] */;
  %278 = cast(%277, dtype="float64") /* ty=Tensor[(11, 14, 2), float64] */;
  %279 = cast(%var_6307, dtype="float64") /* ty=Tensor[(9, 156), float64] */;
  %280 = reshape(%279, newshape=[9, 12, 13]) /* ty=Tensor[(9, 12, 13), float64] */;
  %281 = @func_5120(%280) /* ty=(Tensor[(9, 12, 13), float64],) */;
  %282 = cast(%var_6311, dtype="float32") /* ty=Tensor[(512), float32] */;
  %283 = cast(%var_6311, dtype="float32") /* ty=Tensor[(512), float32] */;
  %284 = reshape(%282, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %285 = reshape(%283, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %286 = @func_4241(%284, %285) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
  %287 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %288 = asinh(%278) /* ty=Tensor[(11, 14, 2), float64] */;
  %289 = %281.0;
  %290 = %286.2;
  %291 = %287.0;
  (%288, %289, %var_6307, %290, %var_6311, %291)
}

def @func_6329(%var_6327: Tensor[(9, 156), float64], %var_6328: Tensor[(512), float32]) -> (Tensor[(11, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(9, 156), float64], Tensor[(8, 8, 8), float64], Tensor[(512), float32], Tensor[(15, 14, 2), bool]) {
  @func_6325(%var_6327, %var_6328) /* ty=(Tensor[(11, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(9, 156), float64], Tensor[(8, 8, 8), float64], Tensor[(512), float32], Tensor[(15, 14, 2), bool]) */
}

def @func_7162(%var_7156: Tensor[(6, 8, 9), uint16], %var_7157: Tensor[(6, 8, 9), uint16]) -> (Tensor[(6, 8, 9), bool],) {
  %292 = cast(%var_7157, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %293 = shape_of(%var_7156, dtype="int32") /* ty=Tensor[(3), int32] */;
  %294 = cast(%var_7156, dtype="bool") /* ty=Tensor[(6, 8, 9), bool] */;
  %295 = dyn.reshape(%292, %293, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %296 = greater_equal(%294, %295) /* ty=Tensor[(6, 8, 9), bool] */;
  (%296,)
}

def @func_9627() -> (Tensor[(540), float64],) {
  %297 = @func_7054() /* ty=Tensor[(540), float64] */;
  (%297,)
}

def @func_7261() -> (Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) {
  @func_7259() /* ty=(Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) */
}

def @func_7300(%var_7276: Tensor[(36), bool]) -> (Tensor[(3, 12, 6), uint32], Tensor[(9, 4, 1), bool], Tensor[(36), bool], Tensor[(16, 10, 9), float64], Tensor[(1440), float64]) {
  %298 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %299 = cast(%var_7276, dtype="bool") /* ty=Tensor[(36), bool] */;
  %300 = reshape(%299, newshape=[9, 4, 1]) /* ty=Tensor[(9, 4, 1), bool] */;
  %301 = cast(meta[relay.Constant][19] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %302 = reshape(%301, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %303 = %298.5;
  %304 = @func_7181(%300) /* ty=Tensor[(9, 4, 1), bool] */;
  %305 = @func_1835(%302) /* ty=Tensor[(16, 10, 9), float64] */;
  (%303, %304, %var_7276, %305, meta[relay.Constant][19] /* ty=Tensor[(1440), float64] */)
}

def @func_2240(%var_2216: uint32, %var_2217: Tensor[(16, 9, 8), uint32], %var_2232: Tensor[(1, 140), float64]) -> (Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) {
  %306 = cast(%var_2216, dtype="uint32") /* ty=uint32 */;
  %307 = cast(%var_2217, dtype="uint32") /* ty=Tensor[(16, 9, 8), uint32] */;
  %308 = cast(%var_2232, dtype="float64") /* ty=Tensor[(1, 140), float64] */;
  %309 = cast(meta[relay.Constant][20] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %310 = reshape(%308, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %311 = reshape(%309, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %312 = @func_1665(%310, %311) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %313 = multiply(%306, %307) /* ty=Tensor[(16, 9, 8), uint32] */;
  %314 = %312.2;
  (%313, %314, %var_2232, meta[relay.Constant][20] /* ty=Tensor[(540), float64] */)
}

def @func_5806(%var_5793: bool, %var_5794: Tensor[(6, 15, 9), bool]) -> Tensor[(6, 15, 9), bool] {
  %315 = cast(%var_5793, dtype="bool") /* ty=bool */;
  %316 = cast(%var_5794, dtype="bool") /* ty=Tensor[(6, 15, 9), bool] */;
  logical_and(%315, %316) /* ty=Tensor[(6, 15, 9), bool] */
}

def @func_6482() -> (Tensor[(3, 12, 6), uint32],) {
  %317 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %318 = %317.0;
  (%318,)
}

def @func_7479(%var_7476: Tensor[(756), float32], %var_7477: Tensor[(4, 288), uint32], %var_7478: Tensor[(4, 14, 11), float32]) -> (Tensor[(15, 14, 2), float32], Tensor[(6, 9, 14), float32], Tensor[(756), float32], Tensor[(4, 288), uint32], Tensor[(4, 14, 11), float32]) {
  @func_7474(%var_7476, %var_7477, %var_7478) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(6, 9, 14), float32], Tensor[(756), float32], Tensor[(4, 288), uint32], Tensor[(4, 14, 11), float32]) */
}

def @func_4795(%var_4794: Tensor[(1, 15, 4), float64]) -> (Tensor[(1, 15, 4), float64],) {
  %321 = fn (%var_4774: Tensor[(1, 15, 4), float64]) -> (Tensor[(1, 15, 4), float64],) {
    %319 = cast(%var_4774, dtype="float64") /* ty=Tensor[(1, 15, 4), float64] */;
    %320 = log2(%319) /* ty=Tensor[(1, 15, 4), float64] */;
    (%320,)
  };
  %321(%var_4794) /* ty=(Tensor[(1, 15, 4), float64],) */
}

def @func_7761() -> (Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(15, 14, 2), float32], Tensor[(7, 12, 5), float32], Tensor[(7, 12, 5), float64]) {
  %322 = @func_7675() /* ty=Tensor[(540), float64] */;
  %323 = cast(%322, dtype="float32") /* ty=Tensor[(540), float32] */;
  %324 = reshape(%323, newshape=[9, 10, 6]) /* ty=Tensor[(9, 10, 6), float32] */;
  %325 = @func_1053(%324) /* ty=(Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) */;
  %326 = @func_5492() /* ty=Tensor[(15, 14, 2), float32] */;
  %327 = cast(%326, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %328 = reshape(%327, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float32] */;
  %329 = @func_6979(%328) /* ty=(Tensor[(7, 12, 5), float32],) */;
  %330 = %329.0;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
  %332 = cast(%330, dtype="float64") /* ty=Tensor[(7, 12, 5), float64] */;
  %333 = %325.0;
  %334 = log2(%331) /* ty=Tensor[(7, 12, 5), float32] */;
  %335 = exp(%332) /* ty=Tensor[(7, 12, 5), float64] */;
  (%322, %333, %326, %334, %335)
}

def @func_5348(%var_5314: Tensor[(540), float64], %var_5337: uint32, %var_5338: Tensor[(1152), uint32], %var_5339: Tensor[(140), float64], %var_5343: Tensor[(16, 9, 8), uint32]) -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(16, 9, 8), bool]) {
  %336 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %337 = cast(%var_5314, dtype="float64") /* ty=Tensor[(540), float64] */;
  %338 = reshape(%337, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %339 = @func_268(%338) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %340 = cast(%var_5337, dtype="uint32") /* ty=uint32 */;
  %341 = cast(%var_5338, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
  %342 = cast(%var_5339, dtype="float64") /* ty=Tensor[(140), float64] */;
  %343 = reshape(%340, newshape=[]) /* ty=uint32 */;
  %344 = reshape(%341, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
  %345 = reshape(%342, newshape=[1, 140]) /* ty=Tensor[(1, 140), float64] */;
  %346 = @func_2240(%343, %344, %345) /* ty=(Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) */;
  %347 = %346.0;
  %348 = cast(%var_5343, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %349 = shape_of(%347, dtype="int32") /* ty=Tensor[(3), int32] */;
  %350 = cast(%347, dtype="bool") /* ty=Tensor[(16, 9, 8), bool] */;
  %351 = dyn.reshape(%348, %349, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %352 = %336.0;
  %353 = %339.0;
  %354 = logical_or(%350, %351) /* ty=Tensor[(16, 9, 8), bool] */;
  (%352, %353, %var_5314, %var_5337, %var_5338, %var_5339, %354)
}

def @func_7166(%var_7164: Tensor[(6, 8, 9), uint16], %var_7165: Tensor[(6, 8, 9), uint16]) -> (Tensor[(6, 8, 9), bool],) {
  @func_7162(%var_7164, %var_7165) /* ty=(Tensor[(6, 8, 9), bool],) */
}

def @func_8551() -> (Tensor[(15, 14, 2), float32],) {
  %356 = fn () -> (Tensor[(15, 14, 2), float32],) {
    %355 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
    (%355,)
  };
  %356() /* ty=(Tensor[(15, 14, 2), float32],) */
}

def @func_4967(%var_4899: Tensor[(14, 7), uint8], %var_4900: Tensor[(14, 7), uint8], %var_4918: Tensor[(216), float64], %var_4948: Tensor[(18, 42), float32], %var_4949: Tensor[(288, 4), uint32]) -> (Tensor[(14, 7), bool], Tensor[(3, 7), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64], Tensor[(140), uint64], Tensor[(216), float64], Tensor[(18, 42), float32], Tensor[(288, 4), uint32]) {
  %357 = cast(%var_4900, dtype="bool") /* ty=Tensor[(14, 7), bool] */;
  %358 = shape_of(%var_4899, dtype="int32") /* ty=Tensor[(2), int32] */;
  %359 = cast(%var_4899, dtype="bool") /* ty=Tensor[(14, 7), bool] */;
  %360 = dyn.reshape(%357, %358, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %361 = cast(meta[relay.Constant][21] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %362 = reshape(%361, newshape=[5, 28]) /* ty=Tensor[(5, 28), float64] */;
  %363 = @func_4543(%362) /* ty=(Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(9, 16, 7), float64], Tensor[(3, 7), float64], Tensor[(21), float64], Tensor[(5, 28), float64]) */;
  %364 = cast(%var_4918, dtype="float64") /* ty=Tensor[(216), float64] */;
  %365 = reshape(%364, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), float64] */;
  %366 = cast(meta[relay.Constant][22] /* ty=Tensor[(140), float64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %367 = shape_of(meta[relay.Constant][21] /* ty=Tensor[(140), float64] */, dtype="int32") /* ty=Tensor[(1), int32] */;
  %368 = cast(meta[relay.Constant][21] /* ty=Tensor[(140), float64] */, dtype="uint64") /* ty=Tensor[(140), uint64] */;
  %369 = dyn.reshape(%366, %367, newshape=[]) /* ty=Tensor[(?), uint64] */;
  %370 = cast(%var_4948, dtype="float32") /* ty=Tensor[(18, 42), float32] */;
  %371 = cast(%var_4949, dtype="uint32") /* ty=Tensor[(288, 4), uint32] */;
  %372 = reshape(%370, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
  %373 = reshape(%371, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
  %374 = @func_4609(%372, %373) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) */;
  %375 = equal(%359, %360) /* ty=Tensor[(14, 7), bool] */;
  %376 = %363.3;
  %377 = @func_3140(%365) /* ty=Tensor[(9, 6, 4), float64] */;
  %378 = bitwise_and(%368, %369) /* ty=Tensor[(140), uint64] */;
  %379 = %374.5;
  (%375, %376, %377, %var_4918, %378, %379, %var_4948, %var_4949)
}

def @func_5123(%var_5121: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64],) {
  @func_5120(%var_5121) /* ty=(Tensor[(9, 12, 13), float64],) */
}

def @func_1177(%var_1175: Tensor[(16, 4, 13), float64], %var_1176: Tensor[(16, 4, 13), float64]) -> Tensor[(16, 4, 13), float64] {
  @func_1173(%var_1175, %var_1176) /* ty=Tensor[(16, 4, 13), float64] */
}

def @func_5492() -> Tensor[(15, 14, 2), float32] {
  %380 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %380.0
}

def @func_5067(%var_5065: Tensor[(14, 1, 7), int16], %var_5066: Tensor[(14, 13, 7), int16]) -> Tensor[(14, 13, 7), int16] {
  %383 = fn (%var_5056: Tensor[(14, 1, 7), int16], %var_5057: Tensor[(14, 13, 7), int16]) -> Tensor[(14, 13, 7), int16] {
    %381 = cast(%var_5056, dtype="int16") /* ty=Tensor[(14, 1, 7), int16] */;
    %382 = cast(%var_5057, dtype="int16") /* ty=Tensor[(14, 13, 7), int16] */;
    bitwise_or(%381, %382) /* ty=Tensor[(14, 13, 7), int16] */
  };
  %383(%var_5065, %var_5066) /* ty=Tensor[(14, 13, 7), int16] */
}

def @func_6526() -> (Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) {
  %392 = fn () -> (Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) {
    %384 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
    %385 = cast(meta[relay.Constant][23] /* ty=Tensor[(21, 1), float64] */, dtype="float64") /* ty=Tensor[(21, 1), float64] */;
    %386 = reshape(%385, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %387 = @func_5461(%386) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
    %388 = %387.2;
    %389 = cast(%388, dtype="float64") /* ty=Tensor[(21), float64] */;
    %390 = %384.1;
    %391 = log2(%389) /* ty=Tensor[(21), float64] */;
    (%390, meta[relay.Constant][23] /* ty=Tensor[(21, 1), float64] */, %391)
  };
  %392() /* ty=(Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) */
}

def @func_5550() -> (Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) {
  %393 = cast(meta[relay.Constant][24] /* ty=Tensor[(54, 10), float64] */, dtype="float64") /* ty=Tensor[(54, 10), float64] */;
  %394 = reshape(%393, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %395 = @func_268(%394) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %396 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %397 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 14, 11), float32] */, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %398 = shape_of(%396, dtype="int32") /* ty=Tensor[(3), int32] */;
  %399 = cast(%396, dtype="bool") /* ty=Tensor[(4, 14, 11), bool] */;
  %400 = dyn.reshape(%397, %398, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %401 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %402 = cast(meta[relay.Constant][25] /* ty=Tensor[(4, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %403 = cast(meta[relay.Constant][26] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %404 = reshape(%403, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), uint32] */;
  %405 = @func_1531(%404) /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %406 = %395.0;
  %407 = less(%399, %400) /* ty=Tensor[(4, 14, 11), bool] */;
  %408 = %401.0;
  %409 = sigmoid(%402) /* ty=Tensor[(4, 14, 11), float32] */;
  %410 = %405.0;
  (%406, meta[relay.Constant][24] /* ty=Tensor[(54, 10), float64] */, %407, %408, %409, %410, meta[relay.Constant][26] /* ty=Tensor[(216), uint32] */)
}

def @func_8413() -> Tensor[(15, 14, 2), float32] {
  @func_8411() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_8242() -> Tensor[(540), float64] {
  @func_8240() /* ty=Tensor[(540), float64] */
}

def @func_9001(%var_8999: Tensor[(594), float64], %var_9000: Tensor[(140), float64]) -> (Tensor[(10, 6, 9), uint8], Tensor[(6, 11, 9), float64], Tensor[(16, 9, 8), bool], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(594), float32]) {
  @func_8997(%var_8999, %var_9000) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(6, 11, 9), float64], Tensor[(16, 9, 8), bool], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(594), float32]) */
}

def @func_9359() -> (Tensor[(3, 12, 6), uint32], Tensor[(15, 14, 2), float32]) {
  %411 = @func_8550() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %412 = @func_8910() /* ty=Tensor[(3, 12, 6), uint32] */;
  %413 = %411.0;
  (%412, %413)
}

def @func_6093(%var_6070: Tensor[(14, 7, 9), uint8]) -> Tensor[(14, 7, 9), float64] {
  %414 = cast(meta[relay.Constant][27] /* ty=Tensor[(14, 7, 9), uint8] */, dtype="bool") /* ty=Tensor[(14, 7, 9), bool] */;
  %415 = shape_of(%var_6070, dtype="int32") /* ty=Tensor[(3), int32] */;
  %416 = cast(%var_6070, dtype="bool") /* ty=Tensor[(14, 7, 9), bool] */;
  %417 = dyn.reshape(%414, %415, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %418 = less_equal(%416, %417) /* ty=Tensor[(14, 7, 9), bool] */;
  %419 = cast(%418, dtype="float64") /* ty=Tensor[(14, 7, 9), float64] */;
  log(%419) /* ty=Tensor[(14, 7, 9), float64] */
}

def @func_4543(%var_4535: Tensor[(5, 28), float64]) -> (Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(9, 16, 7), float64], Tensor[(3, 7), float64], Tensor[(21), float64], Tensor[(5, 28), float64]) {
  %420 = cast(meta[relay.Constant][28] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %421 = reshape(%420, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %422 = cast(meta[relay.Constant][29] /* ty=Tensor[(9, 16, 7), float64] */, dtype="float64") /* ty=Tensor[(9, 16, 7), float64] */;
  %423 = erf(%422) /* ty=Tensor[(9, 16, 7), float64] */;
  %424 = cast(%423, dtype="float64") /* ty=Tensor[(9, 16, 7), float64] */;
  %425 = cast(meta[relay.Constant][30] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %426 = cast(%var_4535, dtype="float64") /* ty=Tensor[(5, 28), float64] */;
  %427 = reshape(%425, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
  %428 = reshape(%426, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %429 = @func_3222(%427, %428) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
  %430 = @func_1835(%421) /* ty=Tensor[(16, 10, 9), float64] */;
  %431 = cosh(%424) /* ty=Tensor[(9, 16, 7), float64] */;
  %432 = %429.0;
  (%430, meta[relay.Constant][28] /* ty=Tensor[(1440), float64] */, %431, %432, meta[relay.Constant][30] /* ty=Tensor[(21), float64] */, %var_4535)
}

def @func_3143(%var_3141: Tensor[(9, 6, 4), float64]) -> Tensor[(9, 6, 4), float64] {
  @func_3140(%var_3141) /* ty=Tensor[(9, 6, 4), float64] */
}

def @func_8165() -> (Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), uint64]) {
  %442 = fn () -> (Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), uint64]) {
    %433 = @func_5492() /* ty=Tensor[(15, 14, 2), float32] */;
    %434 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 14, 2), float32] */, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
    %435 = shape_of(%433, dtype="int32") /* ty=Tensor[(3), int32] */;
    %436 = cast(%433, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
    %437 = dyn.reshape(%434, %435, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %438 = cast(meta[relay.Constant][31] /* ty=Tensor[(15, 14, 2), float32] */, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
    %439 = reshape(%438, newshape=[15, 14, 2]) /* ty=Tensor[(15, 14, 2), float32] */;
    %440 = less_equal(%436, %437) /* ty=Tensor[(15, 14, 2), bool] */;
    %441 = @func_6681(%439) /* ty=Tensor[(15, 14, 2), uint64] */;
    (%440, %441)
  };
  %442() /* ty=(Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), uint64]) */
}

def @func_1173(%var_1165: Tensor[(16, 4, 13), float64], %var_1166: Tensor[(16, 4, 13), float64]) -> Tensor[(16, 4, 13), float64] {
  %443 = cast(%var_1166, dtype="float64") /* ty=Tensor[(16, 4, 13), float64] */;
  %444 = shape_of(%var_1165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %445 = cast(%var_1165, dtype="float64") /* ty=Tensor[(16, 4, 13), float64] */;
  %446 = dyn.reshape(%443, %444, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%445, %446) /* ty=Tensor[(16, 4, 13), float64] */
}

def @func_7421(%var_7345: Tensor[(1, 756), float32], %var_7347: Tensor[(512), float32], %var_7360: Tensor[(882), uint8], %var_7419: Tensor[(140), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(1, 756), float32], Tensor[(2, 576), uint32], Tensor[(512), float32], Tensor[(14, 7, 9), float64], Tensor[(882), uint8], Tensor[(16, 4, 13), float64], Tensor[(832), float64], Tensor[(15, 14, 2), float32], Tensor[(14, 1, 10), float32], uint32, Tensor[(140), float64]) {
  %447 = cast(%var_7345, dtype="float32") /* ty=Tensor[(1, 756), float32] */;
  %448 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 576), uint32] */, dtype="uint32") /* ty=Tensor[(2, 576), uint32] */;
  %449 = cast(%var_7347, dtype="float32") /* ty=Tensor[(512), float32] */;
  %450 = reshape(%447, newshape=[756]) /* ty=Tensor[(756), float32] */;
  %451 = reshape(%448, newshape=[576, 2]) /* ty=Tensor[(576, 2), uint32] */;
  %452 = reshape(%449, newshape=[512]) /* ty=Tensor[(512), float32] */;
  %453 = @func_6927(%450, %451, %452) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) */;
  %454 = cast(%var_7360, dtype="uint8") /* ty=Tensor[(882), uint8] */;
  %455 = reshape(%454, newshape=[14, 7, 9]) /* ty=Tensor[(14, 7, 9), uint8] */;
  %456 = cast(meta[relay.Constant][33] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %457 = cast(meta[relay.Constant][33] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %458 = reshape(%456, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %459 = reshape(%457, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %460 = cast(meta[relay.Constant][33] /* ty=Tensor[(832), float64] */, dtype="float64") /* ty=Tensor[(832), float64] */;
  %461 = reshape(%460, newshape=[832]) /* ty=Tensor[(832), float64] */;
  %462 = @func_6812(%461) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(540), float64], Tensor[(832), float64]) */;
  %463 = cast(meta[relay.Constant][34] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
  %464 = cast(meta[relay.Constant][32] /* ty=Tensor[(2, 576), uint32] */, dtype="uint32") /* ty=Tensor[(2, 576), uint32] */;
  %465 = cast(%var_7419, dtype="float64") /* ty=Tensor[(140), float64] */;
  %466 = reshape(%463, newshape=[]) /* ty=uint32 */;
  %467 = reshape(%464, newshape=[16, 9, 8]) /* ty=Tensor[(16, 9, 8), uint32] */;
  %468 = reshape(%465, newshape=[1, 140]) /* ty=Tensor[(1, 140), float64] */;
  %469 = @func_2240(%466, %467, %468) /* ty=(Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) */;
  %470 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %471 = %453.8;
  %472 = @func_6093(%455) /* ty=Tensor[(14, 7, 9), float64] */;
  %473 = @func_1173(%458, %459) /* ty=Tensor[(16, 4, 13), float64] */;
  %474 = %462.0;
  %475 = %469.1;
  (%470, %471, %var_7345, meta[relay.Constant][32] /* ty=Tensor[(2, 576), uint32] */, %var_7347, %472, %var_7360, %473, meta[relay.Constant][33] /* ty=Tensor[(832), float64] */, %474, %475, meta[relay.Constant][34] /* ty=uint32 */, %var_7419)
}

def @func_8411() -> Tensor[(15, 14, 2), float32] {
  %476 = @func_7259() /* ty=(Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) */;
  %476.1
}

def @func_9275() -> (Tensor[(15, 14, 2), float32],) {
  %477 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %478 = %477.0;
  %479 = cast(%478, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %480 = erf(%479) /* ty=Tensor[(15, 14, 2), float32] */;
  (%480,)
}

def @func_9629() -> (Tensor[(540), float64],) {
  @func_9627() /* ty=(Tensor[(540), float64],) */
}

def @func_1912(%var_1909: Tensor[(12, 7, 9), float64]) -> Tensor[(12, 7, 9), float64] {
  %481 = cast(%var_1909, dtype="float64") /* ty=Tensor[(12, 7, 9), float64] */;
  sin(%481) /* ty=Tensor[(12, 7, 9), float64] */
}

def @func_5397() -> (Tensor[(15, 14, 2), bool],) {
  %491 = fn () -> (Tensor[(15, 14, 2), bool],) {
    %482 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
    %483 = %482.0;
    %484 = cast(%483, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
    %485 = sqrt(%484) /* ty=Tensor[(15, 14, 2), float64] */;
    %486 = cast(%483, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
    %487 = shape_of(%485, dtype="int32") /* ty=Tensor[(3), int32] */;
    %488 = cast(%485, dtype="bool") /* ty=Tensor[(15, 14, 2), bool] */;
    %489 = dyn.reshape(%486, %487, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %490 = less(%488, %489) /* ty=Tensor[(15, 14, 2), bool] */;
    (%490,)
  };
  %491() /* ty=(Tensor[(15, 14, 2), bool],) */
}

def @func_8543() -> (Tensor[(15, 14, 2), bool], Tensor[(140), float64], Tensor[(21), float64], Tensor[(1440), float64], int16, Tensor[(715, 3), int16], Tensor[(10, 6, 9), float64]) {
  %492 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
  %493 = cast(meta[relay.Constant][35] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
  %494 = reshape(%493, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %495 = @func_5461(%494) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */;
  %496 = cast(meta[relay.Constant][36] /* ty=int16 */, dtype="int16") /* ty=int16 */;
  %497 = cast(meta[relay.Constant][37] /* ty=Tensor[(715, 3), int16] */, dtype="int16") /* ty=Tensor[(715, 3), int16] */;
  %498 = %495.3;
  %499 = cast(%498, dtype="float64") /* ty=Tensor[(140), float64] */;
  %500 = reshape(%496, newshape=[]) /* ty=int16 */;
  %501 = reshape(%497, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), int16] */;
  %502 = reshape(%499, newshape=[140]) /* ty=Tensor[(140), float64] */;
  %503 = @func_1892(%500, %501, %502) /* ty=(Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) */;
  %504 = @func_7651() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(10, 6, 9), uint8]) */;
  %505 = %504.1;
  %506 = cast(%505, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %507 = %492.0;
  %508 = %503.6;
  %509 = sinh(%506) /* ty=Tensor[(10, 6, 9), float64] */;
  (%507, %498, meta[relay.Constant][35] /* ty=Tensor[(21), float64] */, %508, meta[relay.Constant][36] /* ty=int16 */, meta[relay.Constant][37] /* ty=Tensor[(715, 3), int16] */, %509)
}

def @func_8545() -> (Tensor[(15, 14, 2), bool], Tensor[(140), float64], Tensor[(21), float64], Tensor[(1440), float64], int16, Tensor[(715, 3), int16], Tensor[(10, 6, 9), float64]) {
  @func_8543() /* ty=(Tensor[(15, 14, 2), bool], Tensor[(140), float64], Tensor[(21), float64], Tensor[(1440), float64], int16, Tensor[(715, 3), int16], Tensor[(10, 6, 9), float64]) */
}

def @func_7184(%var_7182: Tensor[(9, 4, 1), bool]) -> Tensor[(9, 4, 1), bool] {
  @func_7181(%var_7182) /* ty=Tensor[(9, 4, 1), bool] */
}

def @func_1837(%var_1836: Tensor[(16, 10, 9), float64]) -> Tensor[(16, 10, 9), float64] {
  %511 = fn (%var_1826: Tensor[(16, 10, 9), float64]) -> Tensor[(16, 10, 9), float64] {
    %510 = cast(%var_1826, dtype="float64") /* ty=Tensor[(16, 10, 9), float64] */;
    erf(%510) /* ty=Tensor[(16, 10, 9), float64] */
  };
  %511(%var_1836) /* ty=Tensor[(16, 10, 9), float64] */
}

def @func_6484() -> (Tensor[(3, 12, 6), uint32],) {
  @func_6482() /* ty=(Tensor[(3, 12, 6), uint32],) */
}

def @func_8049() -> Tensor[(15, 14, 2), bool] {
  %513 = fn () -> Tensor[(15, 14, 2), bool] {
    %512 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
    %512.0
  };
  %513() /* ty=Tensor[(15, 14, 2), bool] */
}

def @func_5552() -> (Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) {
  @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */
}

def @func_9827(%var_9825: Tensor[(1152), uint32], %var_9826: Tensor[(512), float32]) -> (Tensor[(6, 12, 3), int32], Tensor[(15, 14, 2), float32], Tensor[(756), float32], Tensor[(1152), uint32], Tensor[(512), float32]) {
  %527 = fn (%var_9803: Tensor[(1152), uint32], %var_9804: Tensor[(512), float32]) -> (Tensor[(6, 12, 3), int32], Tensor[(15, 14, 2), float32], Tensor[(756), float32], Tensor[(1152), uint32], Tensor[(512), float32]) {
    %514 = cast(meta[relay.Constant][39] /* ty=Tensor[(6, 12, 3), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 3), int32] */;
    %515 = shape_of(meta[relay.Constant][38] /* ty=Tensor[(6, 12, 3), int32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %516 = cast(meta[relay.Constant][38] /* ty=Tensor[(6, 12, 3), int32] */, dtype="int32") /* ty=Tensor[(6, 12, 3), int32] */;
    %517 = dyn.reshape(%514, %515, newshape=[]) /* ty=Tensor[(?, ?, ?), int32] */;
    %518 = cast(meta[relay.Constant][40] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
    %519 = cast(%var_9803, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
    %520 = cast(%var_9804, dtype="float32") /* ty=Tensor[(512), float32] */;
    %521 = reshape(%518, newshape=[756]) /* ty=Tensor[(756), float32] */;
    %522 = reshape(%519, newshape=[576, 2]) /* ty=Tensor[(576, 2), uint32] */;
    %523 = reshape(%520, newshape=[512]) /* ty=Tensor[(512), float32] */;
    %524 = @func_6927(%521, %522, %523) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(288, 4), uint32], Tensor[(98), uint8], Tensor[(216), float64], Tensor[(756), float32], Tensor[(576, 2), uint32], Tensor[(9, 156), float64], Tensor[(1404), float64], Tensor[(512), float32]) */;
    %525 = bitwise_xor(%516, %517) /* ty=Tensor[(6, 12, 3), int32] */;
    %526 = %524.0;
    (%525, %526, meta[relay.Constant][40] /* ty=Tensor[(756), float32] */, %var_9803, %var_9804)
  };
  %527(%var_9825, %var_9826) /* ty=(Tensor[(6, 12, 3), int32], Tensor[(15, 14, 2), float32], Tensor[(756), float32], Tensor[(1152), uint32], Tensor[(512), float32]) */
}

def @func_1665(%var_1618: Tensor[(14, 1, 10), float64], %var_1648: Tensor[(540), float64]) -> (Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) {
  %528 = cast(%var_1648, dtype="float64") /* ty=Tensor[(540), float64] */;
  %529 = reshape(%528, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %530 = @func_268(%529) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %531 = cast(%var_1618, dtype="float64") /* ty=Tensor[(14, 1, 10), float64] */;
  %532 = sin(%531) /* ty=Tensor[(14, 1, 10), float64] */;
  %533 = cast(%532, dtype="float32") /* ty=Tensor[(14, 1, 10), float32] */;
  %534 = exp(%533) /* ty=Tensor[(14, 1, 10), float32] */;
  %535 = cast(%534, dtype="float32") /* ty=Tensor[(14, 1, 10), float32] */;
  %536 = %530.0;
  %537 = log10(%535) /* ty=Tensor[(14, 1, 10), float32] */;
  (%536, %var_1648, %537)
}

def @func_6263() -> (Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) {
  @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */
}

def @func_5889() -> Tensor[(15, 14, 2), float32] {
  %538 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %538.0
}

def @func_9361() -> (Tensor[(3, 12, 6), uint32], Tensor[(15, 14, 2), float32]) {
  @func_9359() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(15, 14, 2), float32]) */
}

def @func_5979(%var_5975: Tensor[(1152), uint32], %var_5976: Tensor[(756), float32], %var_5977: Tensor[(512), float32], %var_5978: uint32) -> (Tensor[(15, 14, 2), float32], Tensor[(2640), float64], Tensor[(1152), uint32], Tensor[(756), float64], Tensor[(15, 14, 2), bool], Tensor[(540), float64], Tensor[(512), float32], Tensor[(140), float64], Tensor[(21), float64], Tensor[(140), float64], Tensor[(540), float64], uint32, Tensor[(216), float64], Tensor[(12, 7, 9), float64]) {
  %578 = fn (%var_5931: Tensor[(1152), uint32], %var_5934: Tensor[(756), float32], %var_5945: Tensor[(512), float32], %var_5968: uint32) -> (Tensor[(15, 14, 2), float32], Tensor[(2640), float64], Tensor[(1152), uint32], Tensor[(756), float64], Tensor[(15, 14, 2), bool], Tensor[(540), float64], Tensor[(512), float32], Tensor[(140), float64], Tensor[(21), float64], Tensor[(140), float64], Tensor[(540), float64], uint32, Tensor[(216), float64], Tensor[(12, 7, 9), float64]) {
    %539 = cast(meta[relay.Constant][41] /* ty=Tensor[(756), float32] */, dtype="float32") /* ty=Tensor[(756), float32] */;
    %540 = cast(%var_5931, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
    %541 = reshape(%539, newshape=[6, 9, 14]) /* ty=Tensor[(6, 9, 14), float32] */;
    %542 = reshape(%540, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
    %543 = @func_4609(%541, %542) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) */;
    %544 = cast(%var_5934, dtype="float64") /* ty=Tensor[(756), float64] */;
    %545 = shape_of(meta[relay.Constant][41] /* ty=Tensor[(756), float32] */, dtype="int32") /* ty=Tensor[(1), int32] */;
    %546 = cast(meta[relay.Constant][41] /* ty=Tensor[(756), float32] */, dtype="float64") /* ty=Tensor[(756), float64] */;
    %547 = dyn.reshape(%544, %545, newshape=[]) /* ty=Tensor[(?), float64] */;
    %548 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
    %549 = cast(%var_5945, dtype="float32") /* ty=Tensor[(512), float32] */;
    %550 = cast(%var_5945, dtype="float32") /* ty=Tensor[(512), float32] */;
    %551 = reshape(%549, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
    %552 = reshape(%550, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
    %553 = @func_4241(%551, %552) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
    %554 = cast(meta[relay.Constant][42] /* ty=Tensor[(21), float64] */, dtype="float64") /* ty=Tensor[(21), float64] */;
    %555 = cast(meta[relay.Constant][43] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %556 = reshape(%554, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
    %557 = reshape(%555, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %558 = @func_3222(%556, %557) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
    %559 = %543.2;
    %560 = cast(%559, dtype="float64") /* ty=Tensor[(2640), float64] */;
    %561 = cast(%var_5968, dtype="uint32") /* ty=uint32 */;
    %562 = cast(%var_5931, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
    %563 = cast(meta[relay.Constant][44] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %564 = reshape(%560, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), float64] */;
    %565 = reshape(%561, newshape=[]) /* ty=uint32 */;
    %566 = reshape(%562, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
    %567 = reshape(%563, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %568 = @func_3553(%564, %565, %566, %567) /* ty=(Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */;
    %569 = divide(%546, %547) /* ty=Tensor[(756), float64] */;
    %570 = cast(%569, dtype="float64") /* ty=Tensor[(756), float64] */;
    %571 = reshape(%570, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), float64] */;
    %572 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
    %573 = %548.0;
    %574 = %553.1;
    %575 = %558.4;
    %576 = %568.2;
    %577 = @func_1912(%571) /* ty=Tensor[(12, 7, 9), float64] */;
    (%572, %559, %var_5931, %569, %573, %574, %var_5945, %575, meta[relay.Constant][42] /* ty=Tensor[(21), float64] */, meta[relay.Constant][43] /* ty=Tensor[(140), float64] */, %576, %var_5968, meta[relay.Constant][44] /* ty=Tensor[(216), float64] */, %577)
  };
  %578(%var_5975, %var_5976, %var_5977, %var_5978) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(2640), float64], Tensor[(1152), uint32], Tensor[(756), float64], Tensor[(15, 14, 2), bool], Tensor[(540), float64], Tensor[(512), float32], Tensor[(140), float64], Tensor[(21), float64], Tensor[(140), float64], Tensor[(540), float64], uint32, Tensor[(216), float64], Tensor[(12, 7, 9), float64]) */
}

def @func_1533(%var_1532: Tensor[(3, 12, 6), uint32]) -> (Tensor[(3, 12, 6), uint32],) {
  %584 = fn (%var_1523: Tensor[(3, 12, 6), uint32]) -> (Tensor[(3, 12, 6), uint32],) {
    %579 = cast(%var_1523, dtype="uint32") /* ty=Tensor[(3, 12, 6), uint32] */;
    %580 = shape_of(meta[relay.Constant][45] /* ty=Tensor[(3, 12, 6), uint32] */, dtype="int32") /* ty=Tensor[(3), int32] */;
    %581 = cast(meta[relay.Constant][45] /* ty=Tensor[(3, 12, 6), uint32] */, dtype="uint32") /* ty=Tensor[(3, 12, 6), uint32] */;
    %582 = dyn.reshape(%579, %580, newshape=[]) /* ty=Tensor[(?, ?, ?), uint32] */;
    %583 = bitwise_and(%581, %582) /* ty=Tensor[(3, 12, 6), uint32] */;
    (%583,)
  };
  %584(%var_1532) /* ty=(Tensor[(3, 12, 6), uint32],) */
}

def @func_5494() -> Tensor[(15, 14, 2), float32] {
  @func_5492() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_7966(%var_7965: Tensor[(810), bool]) -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(6, 15, 9), bool], bool, Tensor[(810), bool]) {
  %593 = fn (%var_7956: Tensor[(810), bool]) -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(6, 15, 9), bool], bool, Tensor[(810), bool]) {
    %585 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
    %586 = cast(False /* ty=bool */, dtype="bool") /* ty=bool */;
    %587 = cast(%var_7956, dtype="bool") /* ty=Tensor[(810), bool] */;
    %588 = reshape(%586, newshape=[]) /* ty=bool */;
    %589 = reshape(%587, newshape=[6, 15, 9]) /* ty=Tensor[(6, 15, 9), bool] */;
    %590 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
    %591 = %585.1;
    %592 = @func_5806(%588, %589) /* ty=Tensor[(6, 15, 9), bool] */;
    (%590, %591, %592, False /* ty=bool */, %var_7956)
  };
  %593(%var_7965) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(6, 15, 9), bool], bool, Tensor[(810), bool]) */
}

def @func_6979(%var_6971: Tensor[(7, 12, 5), float32]) -> (Tensor[(7, 12, 5), float32],) {
  %594 = cast(%var_6971, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
  %595 = asinh(%594) /* ty=Tensor[(7, 12, 5), float32] */;
  (%595,)
}

def @func_8753() -> (Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) {
  @func_8751() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64]) */
}

def @func_8240() -> Tensor[(540), float64] {
  %596 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %596.1
}

def @func_5869(%var_5867: Tensor[(15, 14, 2), float32], %var_5868: Tensor[(216), float64]) -> (Tensor[(15, 14, 2), float64], Tensor[(15, 14, 2), float32], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) {
  %609 = fn (%var_5834: Tensor[(15, 14, 2), float32], %var_5861: Tensor[(216), float64]) -> (Tensor[(15, 14, 2), float64], Tensor[(15, 14, 2), float32], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) {
    %597 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
    %598 = %597.2;
    %599 = cast(%var_5834, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
    %600 = shape_of(%598, dtype="int32") /* ty=Tensor[(3), int32] */;
    %601 = cast(%598, dtype="float64") /* ty=Tensor[(15, 14, 2), float64] */;
    %602 = dyn.reshape(%599, %600, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %603 = cast(%var_5834, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
    %604 = cast(%var_5861, dtype="float64") /* ty=Tensor[(216), float64] */;
    %605 = reshape(%604, newshape=[9, 6, 4]) /* ty=Tensor[(9, 6, 4), float64] */;
    %606 = divide(%601, %602) /* ty=Tensor[(15, 14, 2), float64] */;
    %607 = log2(%603) /* ty=Tensor[(15, 14, 2), float32] */;
    %608 = @func_3140(%605) /* ty=Tensor[(9, 6, 4), float64] */;
    (%606, %607, %608, %var_5861)
  };
  %609(%var_5867, %var_5868) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(15, 14, 2), float32], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */
}

def @func_6683(%var_6682: Tensor[(15, 14, 2), float32]) -> Tensor[(15, 14, 2), uint64] {
  %616 = fn (%var_6676: Tensor[(15, 14, 2), float32]) -> Tensor[(15, 14, 2), uint64] {
    %610 = @func_6634() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64]) */;
    %611 = %610.0;
    %612 = cast(%var_6676, dtype="uint64") /* ty=Tensor[(15, 14, 2), uint64] */;
    %613 = shape_of(%611, dtype="int32") /* ty=Tensor[(3), int32] */;
    %614 = cast(%611, dtype="uint64") /* ty=Tensor[(15, 14, 2), uint64] */;
    %615 = dyn.reshape(%612, %613, newshape=[]) /* ty=Tensor[(?, ?, ?), uint64] */;
    bitwise_xor(%614, %615) /* ty=Tensor[(15, 14, 2), uint64] */
  };
  %616(%var_6682) /* ty=Tensor[(15, 14, 2), uint64] */
}

def @func_1915(%var_1913: Tensor[(12, 7, 9), float64]) -> Tensor[(12, 7, 9), float64] {
  @func_1912(%var_1913) /* ty=Tensor[(12, 7, 9), float64] */
}

def @func_7676() -> Tensor[(540), float64] {
  %617 = fn () -> Tensor[(540), float64] {
    @func_7054() /* ty=Tensor[(540), float64] */
  };
  %617() /* ty=Tensor[(540), float64] */
}

def @func_9516(%var_9515: Tensor[(54, 26), float64]) -> (Tensor[(9, 14, 16), int8], Tensor[(10, 6, 9), bool], Tensor[(1404), float64], Tensor[(54, 26), float64], Tensor[(7, 3), float64]) {
  %633 = fn (%var_9508: Tensor[(54, 26), float64]) -> (Tensor[(9, 14, 16), int8], Tensor[(10, 6, 9), bool], Tensor[(1404), float64], Tensor[(54, 26), float64], Tensor[(7, 3), float64]) {
    %618 = @func_8373() /* ty=(Tensor[(9, 14, 16), int8],) */;
    %619 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
    %620 = %619.4;
    %621 = cast(meta[relay.Constant][46] /* ty=Tensor[(10, 6, 9), float32] */, dtype="bool") /* ty=Tensor[(10, 6, 9), bool] */;
    %622 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
    %623 = cast(%620, dtype="bool") /* ty=Tensor[(10, 6, 9), bool] */;
    %624 = dyn.reshape(%621, %622, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %625 = cast(%var_9508, dtype="float64") /* ty=Tensor[(54, 26), float64] */;
    %626 = cast(meta[relay.Constant][47] /* ty=Tensor[(7, 3), float64] */, dtype="float64") /* ty=Tensor[(7, 3), float64] */;
    %627 = reshape(%625, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
    %628 = reshape(%626, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %629 = @func_6207(%627, %628) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) */;
    %630 = %618.0;
    %631 = greater_equal(%623, %624) /* ty=Tensor[(10, 6, 9), bool] */;
    %632 = %629.2;
    (%630, %631, %632, %var_9508, meta[relay.Constant][47] /* ty=Tensor[(7, 3), float64] */)
  };
  %633(%var_9515) /* ty=(Tensor[(9, 14, 16), int8], Tensor[(10, 6, 9), bool], Tensor[(1404), float64], Tensor[(54, 26), float64], Tensor[(7, 3), float64]) */
}

def @func_1896(%var_1893: int16, %var_1894: Tensor[(11, 13, 15), int16], %var_1895: Tensor[(140), float64]) -> (Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) {
  %652 = fn (%var_1855: int16, %var_1856: Tensor[(11, 13, 15), int16], %var_1877: Tensor[(140), float64]) -> (Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) {
    %634 = cast(%var_1855, dtype="int16") /* ty=int16 */;
    %635 = cast(%var_1856, dtype="int16") /* ty=Tensor[(11, 13, 15), int16] */;
    %636 = cast(%var_1856, dtype="float32") /* ty=Tensor[(11, 13, 15), float32] */;
    %637 = cos(%636) /* ty=Tensor[(11, 13, 15), float32] */;
    %638 = cast(%637, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
    %639 = cast(%var_1877, dtype="float64") /* ty=Tensor[(140), float64] */;
    %640 = cast(meta[relay.Constant][48] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
    %641 = reshape(%639, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
    %642 = reshape(%640, newshape=[540]) /* ty=Tensor[(540), float64] */;
    %643 = @func_1665(%641, %642) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
    %644 = cast(meta[relay.Constant][49] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
    %645 = reshape(%644, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
    %646 = cast(%637, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
    %647 = left_shift(%634, %635) /* ty=Tensor[(11, 13, 15), int16] */;
    %648 = asinh(%638) /* ty=Tensor[(11, 13, 15), float64] */;
    %649 = %643.1;
    %650 = @func_1835(%645) /* ty=Tensor[(16, 10, 9), float64] */;
    %651 = cosh(%646) /* ty=Tensor[(11, 13, 15), float64] */;
    (%647, %648, %649, %var_1877, meta[relay.Constant][48] /* ty=Tensor[(540), float64] */, %650, meta[relay.Constant][49] /* ty=Tensor[(1440), float64] */, %651)
  };
  %652(%var_1893, %var_1894, %var_1895) /* ty=(Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) */
}

def @func_9286() -> (Tensor[(15, 14, 2), bool],) {
  %653 = @func_8787() /* ty=Tensor[(15, 14, 2), bool] */;
  (%653,)
}

def @func_4546(%var_4544: Tensor[(5, 28), float64]) -> (Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(9, 16, 7), float64], Tensor[(3, 7), float64], Tensor[(21), float64], Tensor[(5, 28), float64]) {
  @func_4543(%var_4544) /* ty=(Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(9, 16, 7), float64], Tensor[(3, 7), float64], Tensor[(21), float64], Tensor[(5, 28), float64]) */
}

def @func_6790() -> (Tensor[(9, 14, 16), int8],) {
  @func_6788() /* ty=(Tensor[(9, 14, 16), int8],) */
}

def @func_9288() -> (Tensor[(15, 14, 2), bool],) {
  @func_9286() /* ty=(Tensor[(15, 14, 2), bool],) */
}

def @func_8850(%var_8848: Tensor[(21), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(140), float64], Tensor[(21), float64]) {
  @func_8847(%var_8848) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(140), float64], Tensor[(21), float64]) */
}

def @func_3225(%var_3223: Tensor[(3, 7), float64], %var_3224: Tensor[(140), float64]) -> (Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) {
  %664 = fn (%var_3203: Tensor[(3, 7), float64], %var_3217: Tensor[(140), float64]) -> (Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) {
    %654 = cast(%var_3203, dtype="float64") /* ty=Tensor[(3, 7), float64] */;
    %655 = cast(meta[relay.Constant][50] /* ty=int16 */, dtype="int16") /* ty=int16 */;
    %656 = cast(meta[relay.Constant][51] /* ty=Tensor[(2145), int16] */, dtype="int16") /* ty=Tensor[(2145), int16] */;
    %657 = cast(%var_3217, dtype="float64") /* ty=Tensor[(140), float64] */;
    %658 = reshape(%655, newshape=[]) /* ty=int16 */;
    %659 = reshape(%656, newshape=[11, 13, 15]) /* ty=Tensor[(11, 13, 15), int16] */;
    %660 = reshape(%657, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %661 = @func_1892(%658, %659, %660) /* ty=(Tensor[(11, 13, 15), int16], Tensor[(11, 13, 15), float64], Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(16, 10, 9), float64], Tensor[(1440), float64], Tensor[(11, 13, 15), float64]) */;
    %662 = acos(%654) /* ty=Tensor[(3, 7), float64] */;
    %663 = %661.7;
    (%662, %663, meta[relay.Constant][50] /* ty=int16 */, meta[relay.Constant][51] /* ty=Tensor[(2145), int16] */, %var_3217)
  };
  %664(%var_3223, %var_3224) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */
}

def @func_8954(%var_8952: Tensor[(504), float32], %var_8953: Tensor[(140), float64]) -> (Tensor[(15, 14, 2), bool], Tensor[(12, 7, 9), float64], Tensor[(504), float32], Tensor[(216), uint32], Tensor[(540), float32], Tensor[(140), float64]) {
  %677 = fn (%var_8941: Tensor[(504), float32], %var_8944: Tensor[(140), float64]) -> (Tensor[(15, 14, 2), bool], Tensor[(12, 7, 9), float64], Tensor[(504), float32], Tensor[(216), uint32], Tensor[(540), float32], Tensor[(140), float64]) {
    %665 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
    %666 = cast(%var_8941, dtype="float32") /* ty=Tensor[(504), float32] */;
    %667 = cast(meta[relay.Constant][52] /* ty=Tensor[(216), uint32] */, dtype="uint32") /* ty=Tensor[(216), uint32] */;
    %668 = cast(meta[relay.Constant][53] /* ty=Tensor[(540), float32] */, dtype="float32") /* ty=Tensor[(540), float32] */;
    %669 = cast(%var_8944, dtype="float64") /* ty=Tensor[(140), float64] */;
    %670 = reshape(%666, newshape=[12, 3, 14]) /* ty=Tensor[(12, 3, 14), float32] */;
    %671 = reshape(%667, newshape=[108, 2]) /* ty=Tensor[(108, 2), uint32] */;
    %672 = reshape(%668, newshape=[3, 180]) /* ty=Tensor[(3, 180), float32] */;
    %673 = reshape(%669, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %674 = @func_2533(%670, %671, %672, %673) /* ty=(Tensor[(12, 3, 14), bool], Tensor[(12, 7, 9), float64], Tensor[(756), float64], Tensor[(4, 12, 8), float64], Tensor[(108, 2), uint32], Tensor[(1440), float64], Tensor[(96, 4), uint16], Tensor[(3, 180), uint16], Tensor[(540), float64], Tensor[(140), float64], Tensor[(3, 180), bool], Tensor[(3, 12, 6), uint32], Tensor[(3, 180), float32]) */;
    %675 = %665.0;
    %676 = %674.1;
    (%675, %676, %var_8941, meta[relay.Constant][52] /* ty=Tensor[(216), uint32] */, meta[relay.Constant][53] /* ty=Tensor[(540), float32] */, %var_8944)
  };
  %677(%var_8952, %var_8953) /* ty=(Tensor[(15, 14, 2), bool], Tensor[(12, 7, 9), float64], Tensor[(504), float32], Tensor[(216), uint32], Tensor[(540), float32], Tensor[(140), float64]) */
}

def @func_6982(%var_6980: Tensor[(7, 12, 5), float32]) -> (Tensor[(7, 12, 5), float32],) {
  @func_6979(%var_6980) /* ty=(Tensor[(7, 12, 5), float32],) */
}

def @func_5891() -> Tensor[(15, 14, 2), float32] {
  @func_5889() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_7591(%var_7547: Tensor[(1404), float64], %var_7548: Tensor[(21), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(10, 6, 9), float32], Tensor[(4, 14, 11), int64], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float64], Tensor[(3, 12, 6), uint32]) {
  %678 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %679 = cast(%678, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %680 = erf(%679) /* ty=Tensor[(4, 14, 11), float64] */;
  %681 = cast(%680, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %682 = shape_of(%678, dtype="int32") /* ty=Tensor[(3), int32] */;
  %683 = cast(%678, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %684 = dyn.reshape(%681, %682, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %685 = cast(%var_7547, dtype="float64") /* ty=Tensor[(1404), float64] */;
  %686 = cast(%var_7548, dtype="float64") /* ty=Tensor[(21), float64] */;
  %687 = reshape(%685, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
  %688 = reshape(%686, newshape=[21]) /* ty=Tensor[(21), float64] */;
  %689 = @func_6207(%687, %688) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) */;
  %690 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %691 = cast(%680, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
  %692 = sinh(%691) /* ty=Tensor[(4, 14, 11), float32] */;
  %693 = cast(%692, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %694 = asinh(%693) /* ty=Tensor[(4, 14, 11), float64] */;
  %695 = cast(%678, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
  %696 = shape_of(%694, dtype="int32") /* ty=Tensor[(3), int32] */;
  %697 = cast(%694, dtype="int64") /* ty=Tensor[(4, 14, 11), int64] */;
  %698 = dyn.reshape(%695, %696, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %699 = cast(%692, dtype="float64") /* ty=Tensor[(4, 14, 11), float64] */;
  %700 = @func_6482() /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %701 = power(%683, %684) /* ty=Tensor[(4, 14, 11), float64] */;
  %702 = %689.1;
  %703 = %690.4;
  %704 = bitwise_xor(%697, %698) /* ty=Tensor[(4, 14, 11), int64] */;
  %705 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  %706 = atanh(%699) /* ty=Tensor[(4, 14, 11), float64] */;
  %707 = %700.0;
  (%701, %702, %var_7547, %var_7548, %703, %704, %705, %706, %707)
}

def @func_6635() -> (Tensor[(15, 14, 2), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64]) {
  %714 = fn () -> (Tensor[(15, 14, 2), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64]) {
    %708 = @func_6261() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(15, 14, 2), float32]) */;
    %709 = cast(meta[relay.Constant][54] /* ty=Tensor[(594), float64] */, dtype="float64") /* ty=Tensor[(594), float64] */;
    %710 = reshape(%709, newshape=[6, 11, 9]) /* ty=Tensor[(6, 11, 9), float64] */;
    %711 = @func_6140(%710) /* ty=(Tensor[(6, 11, 9), float64],) */;
    %712 = %708.0;
    %713 = %711.0;
    (%712, %713, meta[relay.Constant][54] /* ty=Tensor[(594), float64] */)
  };
  %714() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(6, 11, 9), float64], Tensor[(594), float64]) */
}

def @func_9892() -> (Tensor[(540), float64],) {
  %716 = fn () -> (Tensor[(540), float64],) {
    %715 = @func_7675() /* ty=Tensor[(540), float64] */;
    (%715,)
  };
  %716() /* ty=(Tensor[(540), float64],) */
}

def @func_8374() -> (Tensor[(9, 14, 16), int8],) {
  %718 = fn () -> (Tensor[(9, 14, 16), int8],) {
    %717 = @func_8296() /* ty=Tensor[(9, 14, 16), int8] */;
    (%717,)
  };
  %718() /* ty=(Tensor[(9, 14, 16), int8],) */
}

def @func_7117() -> (Tensor[(10, 6, 9), uint8],) {
  %721 = fn () -> (Tensor[(10, 6, 9), uint8],) {
    %719 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
    %720 = %719.1;
    (%720,)
  };
  %721() /* ty=(Tensor[(10, 6, 9), uint8],) */
}

def @func_5120(%var_5115: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), float64],) {
  %722 = cast(%var_5115, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %723 = exp(%722) /* ty=Tensor[(9, 12, 13), float64] */;
  (%723,)
}

def @func_7595(%var_7593: Tensor[(1404), float64], %var_7594: Tensor[(21), float64]) -> (Tensor[(4, 14, 11), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(10, 6, 9), float32], Tensor[(4, 14, 11), int64], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float64], Tensor[(3, 12, 6), uint32]) {
  @func_7591(%var_7593, %var_7594) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(10, 6, 9), float32], Tensor[(4, 14, 11), int64], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float64], Tensor[(3, 12, 6), uint32]) */
}

def @func_5785() -> (Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) {
  %724 = @func_5550() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(54, 10), float64], Tensor[(4, 14, 11), bool], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float32], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32]) */;
  %725 = cast(meta[relay.Constant][55] /* ty=Tensor[(540), float64] */, dtype="float64") /* ty=Tensor[(540), float64] */;
  %726 = reshape(%725, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %727 = @func_268(%726) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %728 = %727.0;
  %729 = cast(%728, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
  %730 = acosh(%729) /* ty=Tensor[(10, 6, 9), float64] */;
  %731 = cast(%730, dtype="float32") /* ty=Tensor[(10, 6, 9), float32] */;
  %732 = cast(%730, dtype="float32") /* ty=Tensor[(10, 6, 9), float32] */;
  %733 = %724.5;
  %734 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %735 = acos(%731) /* ty=Tensor[(10, 6, 9), float32] */;
  %736 = atanh(%732) /* ty=Tensor[(10, 6, 9), float32] */;
  (%733, meta[relay.Constant][55] /* ty=Tensor[(540), float64] */, %734, %735, %736)
}

def @func_6768(%var_6718: Tensor[(1, 832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(1, 832), float64], Tensor[(4, 14, 11), float32], Tensor[(540), float64]) {
  %737 = @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */;
  %738 = cast(%var_6718, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
  %739 = cast(%var_6718, dtype="float64") /* ty=Tensor[(1, 832), float64] */;
  %740 = reshape(%738, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %741 = reshape(%739, newshape=[16, 4, 13]) /* ty=Tensor[(16, 4, 13), float64] */;
  %742 = @func_6417() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(140), float64], Tensor[(540), float64]) */;
  %743 = %742.3;
  %744 = cast(%743, dtype="float64") /* ty=Tensor[(540), float64] */;
  %745 = asin(%744) /* ty=Tensor[(540), float64] */;
  %746 = cast(%745, dtype="float64") /* ty=Tensor[(540), float64] */;
  %747 = %737.0;
  %748 = @func_1173(%740, %741) /* ty=Tensor[(16, 4, 13), float64] */;
  %749 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
  %750 = acosh(%746) /* ty=Tensor[(540), float64] */;
  (%747, %748, %var_6718, %749, %750)
}

def @func_7013() -> (Tensor[(3, 12, 6), uint32],) {
  %753 = fn () -> (Tensor[(3, 12, 6), uint32],) {
    %751 = @func_6482() /* ty=(Tensor[(3, 12, 6), uint32],) */;
    %752 = %751.0;
    (%752,)
  };
  %753() /* ty=(Tensor[(3, 12, 6), uint32],) */
}

def @func_5810(%var_5808: bool, %var_5809: Tensor[(6, 15, 9), bool]) -> Tensor[(6, 15, 9), bool] {
  @func_5806(%var_5808, %var_5809) /* ty=Tensor[(6, 15, 9), bool] */
}

def @func_2245(%var_2242: uint32, %var_2243: Tensor[(16, 9, 8), uint32], %var_2244: Tensor[(1, 140), float64]) -> (Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) {
  @func_2240(%var_2242, %var_2243, %var_2244) /* ty=(Tensor[(16, 9, 8), uint32], Tensor[(14, 1, 10), float32], Tensor[(1, 140), float64], Tensor[(540), float64]) */
}

def @func_6771(%var_6769: Tensor[(1, 832), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(1, 832), float64], Tensor[(4, 14, 11), float32], Tensor[(540), float64]) {
  @func_6768(%var_6769) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(16, 4, 13), float64], Tensor[(1, 832), float64], Tensor[(4, 14, 11), float32], Tensor[(540), float64]) */
}

def @func_2533(%var_2415: Tensor[(12, 3, 14), float32], %var_2441: Tensor[(108, 2), uint32], %var_2460: Tensor[(3, 180), float32], %var_2465: Tensor[(140), float64]) -> (Tensor[(12, 3, 14), bool], Tensor[(12, 7, 9), float64], Tensor[(756), float64], Tensor[(4, 12, 8), float64], Tensor[(108, 2), uint32], Tensor[(1440), float64], Tensor[(96, 4), uint16], Tensor[(3, 180), uint16], Tensor[(540), float64], Tensor[(140), float64], Tensor[(3, 180), bool], Tensor[(3, 12, 6), uint32], Tensor[(3, 180), float32]) {
  %754 = cast(-3.97375f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %755 = cast(%var_2415, dtype="bool") /* ty=Tensor[(12, 3, 14), bool] */;
  %756 = cast(meta[relay.Constant][56] /* ty=Tensor[(756), float64] */, dtype="float64") /* ty=Tensor[(756), float64] */;
  %757 = reshape(%756, newshape=[12, 7, 9]) /* ty=Tensor[(12, 7, 9), float64] */;
  %758 = cast(meta[relay.Constant][57] /* ty=Tensor[(96, 4), float64] */, dtype="float64") /* ty=Tensor[(96, 4), float64] */;
  %759 = cast(%var_2441, dtype="uint32") /* ty=Tensor[(108, 2), uint32] */;
  %760 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 180), float64] */, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %761 = cast(meta[relay.Constant][59] /* ty=Tensor[(1440), float64] */, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %762 = reshape(%758, newshape=[4, 12, 8]) /* ty=Tensor[(4, 12, 8), float64] */;
  %763 = reshape(%759, newshape=[216]) /* ty=Tensor[(216), uint32] */;
  %764 = reshape(%760, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %765 = reshape(%761, newshape=[1440]) /* ty=Tensor[(1440), float64] */;
  %766 = @func_2326(%762, %763, %764, %765) /* ty=(Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) */;
  %767 = cast(-3.97375f /* ty=float32 */, dtype="uint16") /* ty=uint16 */;
  %768 = cast(meta[relay.Constant][57] /* ty=Tensor[(96, 4), float64] */, dtype="uint16") /* ty=Tensor[(96, 4), uint16] */;
  %769 = cast(meta[relay.Constant][58] /* ty=Tensor[(3, 180), float64] */, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %770 = asin(%769) /* ty=Tensor[(3, 180), float32] */;
  %771 = cast(%770, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %772 = log10(%771) /* ty=Tensor[(3, 180), float32] */;
  %773 = cast(%var_2460, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %774 = shape_of(%772, dtype="int32") /* ty=Tensor[(2), int32] */;
  %775 = cast(%772, dtype="uint16") /* ty=Tensor[(3, 180), uint16] */;
  %776 = dyn.reshape(%773, %774, newshape=[]) /* ty=Tensor[(?, ?), uint16] */;
  %777 = cast(%var_2465, dtype="float64") /* ty=Tensor[(140), float64] */;
  %778 = cast(%772, dtype="float64") /* ty=Tensor[(3, 180), float64] */;
  %779 = reshape(%777, newshape=[14, 1, 10]) /* ty=Tensor[(14, 1, 10), float64] */;
  %780 = reshape(%778, newshape=[540]) /* ty=Tensor[(540), float64] */;
  %781 = @func_1665(%779, %780) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(14, 1, 10), float32]) */;
  %782 = cast(%772, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %783 = shape_of(%770, dtype="int32") /* ty=Tensor[(2), int32] */;
  %784 = cast(%770, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %785 = dyn.reshape(%782, %783, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %786 = cast(%var_2441, dtype="uint32") /* ty=Tensor[(108, 2), uint32] */;
  %787 = reshape(%786, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), uint32] */;
  %788 = @func_1531(%787) /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %789 = cast(%770, dtype="bool") /* ty=Tensor[(3, 180), bool] */;
  %790 = cast(-3.97375f /* ty=float32 */, dtype="bool") /* ty=bool */;
  %791 = less_equal(%789, %790) /* ty=Tensor[(3, 180), bool] */;
  %792 = cast(%791, dtype="float32") /* ty=Tensor[(3, 180), float32] */;
  %793 = equal(%754, %755) /* ty=Tensor[(12, 3, 14), bool] */;
  %794 = @func_1912(%757) /* ty=Tensor[(12, 7, 9), float64] */;
  %795 = %766.0;
  %796 = minimum(%767, %768) /* ty=Tensor[(96, 4), uint16] */;
  %797 = bitwise_xor(%775, %776) /* ty=Tensor[(3, 180), uint16] */;
  %798 = %781.1;
  %799 = greater_equal(%784, %785) /* ty=Tensor[(3, 180), bool] */;
  %800 = %788.0;
  %801 = acosh(%792) /* ty=Tensor[(3, 180), float32] */;
  (%793, %794, meta[relay.Constant][56] /* ty=Tensor[(756), float64] */, %795, %var_2441, meta[relay.Constant][59] /* ty=Tensor[(1440), float64] */, %796, %797, %798, %var_2465, %799, %800, %801)
}

def @func_7259() -> (Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) {
  %802 = @func_5785() /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(540), float64], Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), float32], Tensor[(10, 6, 9), float32]) */;
  %803 = %802.3;
  %804 = @func_5889() /* ty=Tensor[(15, 14, 2), float32] */;
  (%803, %804)
}

def @func_5304() -> Tensor[(4, 14, 11), float32] {
  %806 = fn () -> Tensor[(4, 14, 11), float32] {
    %805 = cast(meta[relay.Constant][60] /* ty=Tensor[(4, 14, 11), float32] */, dtype="float32") /* ty=Tensor[(4, 14, 11), float32] */;
    sin(%805) /* ty=Tensor[(4, 14, 11), float32] */
  };
  %806() /* ty=Tensor[(4, 14, 11), float32] */
}

def @func_3994(%var_3992: Tensor[(4, 14, 2), float64]) -> Tensor[(4, 14, 2), float64] {
  @func_3991(%var_3992) /* ty=Tensor[(4, 14, 2), float64] */
}

def @func_7055() -> Tensor[(540), float64] {
  %808 = fn () -> Tensor[(540), float64] {
    %807 = @func_6525() /* ty=(Tensor[(540), float64], Tensor[(21, 1), float64], Tensor[(21), float64]) */;
    %807.0
  };
  %808() /* ty=Tensor[(540), float64] */
}

def @func_7303(%var_7301: Tensor[(36), bool]) -> (Tensor[(3, 12, 6), uint32], Tensor[(9, 4, 1), bool], Tensor[(36), bool], Tensor[(16, 10, 9), float64], Tensor[(1440), float64]) {
  @func_7300(%var_7301) /* ty=(Tensor[(3, 12, 6), uint32], Tensor[(9, 4, 1), bool], Tensor[(36), bool], Tensor[(16, 10, 9), float64], Tensor[(1440), float64]) */
}

def @func_4612(%var_4610: Tensor[(6, 9, 14), float32], %var_4611: Tensor[(1152), uint32]) -> (Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) {
  %821 = fn (%var_4594: Tensor[(6, 9, 14), float32], %var_4602: Tensor[(1152), uint32]) -> (Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) {
    %809 = cast(%var_4594, dtype="float32") /* ty=Tensor[(6, 9, 14), float32] */;
    %810 = cast(meta[relay.Constant][61] /* ty=Tensor[(2640), float64] */, dtype="float64") /* ty=Tensor[(2640), float64] */;
    %811 = cast(meta[relay.Constant][62] /* ty=uint32 */, dtype="uint32") /* ty=uint32 */;
    %812 = cast(%var_4602, dtype="uint32") /* ty=Tensor[(1152), uint32] */;
    %813 = cast(meta[relay.Constant][63] /* ty=Tensor[(216), float64] */, dtype="float64") /* ty=Tensor[(216), float64] */;
    %814 = reshape(%810, newshape=[11, 15, 16]) /* ty=Tensor[(11, 15, 16), float64] */;
    %815 = reshape(%811, newshape=[]) /* ty=uint32 */;
    %816 = reshape(%812, newshape=[1152]) /* ty=Tensor[(1152), uint32] */;
    %817 = reshape(%813, newshape=[216]) /* ty=Tensor[(216), float64] */;
    %818 = @func_3553(%814, %815, %816, %817) /* ty=(Tensor[(540), float64], Tensor[(140), float64], Tensor[(540), float64], Tensor[(1, 140), float64], uint32, Tensor[(1152), uint32], Tensor[(11, 15, 16), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64]) */;
    %819 = acos(%809) /* ty=Tensor[(6, 9, 14), float32] */;
    %820 = %818.1;
    (%819, %820, meta[relay.Constant][61] /* ty=Tensor[(2640), float64] */, meta[relay.Constant][62] /* ty=uint32 */, %var_4602, meta[relay.Constant][63] /* ty=Tensor[(216), float64] */)
  };
  %821(%var_4610, %var_4611) /* ty=(Tensor[(6, 9, 14), float32], Tensor[(140), float64], Tensor[(2640), float64], uint32, Tensor[(1152), uint32], Tensor[(216), float64]) */
}

def @func_4974(%var_4969: Tensor[(14, 7), uint8], %var_4970: Tensor[(14, 7), uint8], %var_4971: Tensor[(216), float64], %var_4972: Tensor[(18, 42), float32], %var_4973: Tensor[(288, 4), uint32]) -> (Tensor[(14, 7), bool], Tensor[(3, 7), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64], Tensor[(140), uint64], Tensor[(216), float64], Tensor[(18, 42), float32], Tensor[(288, 4), uint32]) {
  @func_4967(%var_4969, %var_4970, %var_4971, %var_4972, %var_4973) /* ty=(Tensor[(14, 7), bool], Tensor[(3, 7), float64], Tensor[(9, 6, 4), float64], Tensor[(216), float64], Tensor[(140), uint64], Tensor[(216), float64], Tensor[(18, 42), float32], Tensor[(288, 4), uint32]) */
}

def @func_9772(%var_9769: Tensor[(21), float64], %var_9770: Tensor[(512), float32], %var_9771: Tensor[(832), float64]) -> (Tensor[(540), float64], Tensor[(1404), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(832), float64]) {
  %836 = fn (%var_9762: Tensor[(21), float64], %var_9765: Tensor[(512), float32], %var_9766: Tensor[(832), float64]) -> (Tensor[(540), float64], Tensor[(1404), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(832), float64]) {
    %822 = @func_7761() /* ty=(Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(15, 14, 2), float32], Tensor[(7, 12, 5), float32], Tensor[(7, 12, 5), float64]) */;
    %823 = cast(meta[relay.Constant][64] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %824 = cast(%var_9762, dtype="float64") /* ty=Tensor[(21), float64] */;
    %825 = reshape(%823, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
    %826 = reshape(%824, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %827 = @func_7591(%825, %826) /* ty=(Tensor[(4, 14, 11), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(10, 6, 9), float32], Tensor[(4, 14, 11), int64], Tensor[(15, 14, 2), float32], Tensor[(4, 14, 11), float64], Tensor[(3, 12, 6), uint32]) */;
    %828 = cast(%var_9765, dtype="float32") /* ty=Tensor[(512), float32] */;
    %829 = cast(%var_9766, dtype="float64") /* ty=Tensor[(832), float64] */;
    %830 = reshape(%828, newshape=[512]) /* ty=Tensor[(512), float32] */;
    %831 = reshape(%829, newshape=[832, 1]) /* ty=Tensor[(832, 1), float64] */;
    %832 = @func_9045(%830, %831) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(216), float64], Tensor[(832, 540), float32]) */;
    %833 = %822.0;
    %834 = %827.2;
    %835 = %832.0;
    (%833, %834, meta[relay.Constant][64] /* ty=Tensor[(1404), float64] */, %var_9762, %835, %var_9765, %var_9766)
  };
  %836(%var_9769, %var_9770, %var_9771) /* ty=(Tensor[(540), float64], Tensor[(1404), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(832), float64]) */
}

def @func_7652() -> (Tensor[(10, 6, 9), uint8], Tensor[(10, 6, 9), uint8]) {
  %843 = fn () -> (Tensor[(10, 6, 9), uint8], Tensor[(10, 6, 9), uint8]) {
    %837 = @func_7116() /* ty=(Tensor[(10, 6, 9), uint8],) */;
    %838 = %837.0;
    %839 = cast(%838, dtype="float64") /* ty=Tensor[(10, 6, 9), float64] */;
    %840 = reshape(%839, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
    %841 = @func_268(%840) /* ty=(Tensor[(10, 6, 9), uint8],) */;
    %842 = %841.0;
    (%838, %842)
  };
  %843() /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(10, 6, 9), uint8]) */
}

def @func_8100() -> Tensor[(15, 14, 2), float32] {
  @func_5889() /* ty=Tensor[(15, 14, 2), float32] */
}

def @func_8789() -> Tensor[(15, 14, 2), bool] {
  @func_8787() /* ty=Tensor[(15, 14, 2), bool] */
}

def @func_9049(%var_9047: Tensor[(512), float32], %var_9048: Tensor[(832, 1), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(216), float64], Tensor[(832, 540), float32]) {
  @func_9045(%var_9047, %var_9048) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(216), float64], Tensor[(832, 540), float32]) */
}

def @func_5355(%var_5350: Tensor[(540), float64], %var_5351: uint32, %var_5352: Tensor[(1152), uint32], %var_5353: Tensor[(140), float64], %var_5354: Tensor[(16, 9, 8), uint32]) -> (Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(16, 9, 8), bool]) {
  @func_5348(%var_5350, %var_5351, %var_5352, %var_5353, %var_5354) /* ty=(Tensor[(15, 14, 2), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], uint32, Tensor[(1152), uint32], Tensor[(140), float64], Tensor[(16, 9, 8), bool]) */
}

def @func_9606() -> (Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), bool]) {
  %848 = fn () -> (Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), bool]) {
    %844 = @func_5396() /* ty=(Tensor[(15, 14, 2), bool],) */;
    %845 = @func_8543() /* ty=(Tensor[(15, 14, 2), bool], Tensor[(140), float64], Tensor[(21), float64], Tensor[(1440), float64], int16, Tensor[(715, 3), int16], Tensor[(10, 6, 9), float64]) */;
    %846 = %844.0;
    %847 = %845.0;
    (%846, %847)
  };
  %848() /* ty=(Tensor[(15, 14, 2), bool], Tensor[(15, 14, 2), bool]) */
}

def @func_9045(%var_9019: Tensor[(512), float32], %var_9026: Tensor[(832, 1), float64]) -> (Tensor[(15, 14, 2), float32], Tensor[(512), float32], Tensor[(216), float64], Tensor[(832, 540), float32]) {
  %849 = cast(%var_9026, dtype="float64") /* ty=Tensor[(832, 1), float64] */;
  %850 = @func_5132() /* ty=Tensor[(15, 14, 2), float32] */;
  %851 = cast(%850, dtype="float32") /* ty=Tensor[(15, 14, 2), float32] */;
  %852 = reshape(%849, newshape=[4, 208]) /* ty=Tensor[(4, 208), float64] */;
  %853 = reshape(%851, newshape=[420]) /* ty=Tensor[(420), float32] */;
  %854 = @func_8638(%852, %853) /* ty=(Tensor[(540), float64], Tensor[(540), float64], Tensor[(15, 14, 2), float64], Tensor[(420), float32], Tensor[(216), float64], Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(4, 208), float64], Tensor[(9, 10, 6), float32]) */;
  %855 = cast(%var_9019, dtype="float32") /* ty=Tensor[(512), float32] */;
  %856 = cast(%var_9019, dtype="float32") /* ty=Tensor[(512), float32] */;
  %857 = reshape(%855, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %858 = reshape(%856, newshape=[8, 8, 8]) /* ty=Tensor[(8, 8, 8), float32] */;
  %859 = @func_4241(%857, %858) /* ty=(Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(8, 8, 8), float64]) */;
  %860 = %859.1;
  %861 = cast(%860, dtype="int64") /* ty=Tensor[(540), int64] */;
  %862 = cast(%var_9026, dtype="int64") /* ty=Tensor[(832, 1), int64] */;
  %863 = bitwise_or(%861, %862) /* ty=Tensor[(832, 540), int64] */;
  %864 = cast(%863, dtype="float32") /* ty=Tensor[(832, 540), float32] */;
  %865 = %854.4;
  %866 = log2(%864) /* ty=Tensor[(832, 540), float32] */;
  (%850, %var_9019, %865, %866)
}

def @func_7763() -> (Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(15, 14, 2), float32], Tensor[(7, 12, 5), float32], Tensor[(7, 12, 5), float64]) {
  @func_7761() /* ty=(Tensor[(540), float64], Tensor[(9, 10, 6), float32], Tensor[(15, 14, 2), float32], Tensor[(7, 12, 5), float32], Tensor[(7, 12, 5), float64]) */
}

def @func_5463(%var_5462: Tensor[(21), float64]) -> (Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) {
  %874 = fn (%var_5449: Tensor[(21), float64]) -> (Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) {
    %867 = cast(%var_5449, dtype="float64") /* ty=Tensor[(21), float64] */;
    %868 = cast(meta[relay.Constant][65] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
    %869 = reshape(%867, newshape=[3, 7]) /* ty=Tensor[(3, 7), float64] */;
    %870 = reshape(%868, newshape=[140]) /* ty=Tensor[(140), float64] */;
    %871 = @func_3222(%869, %870) /* ty=(Tensor[(3, 7), float64], Tensor[(11, 13, 15), float64], int16, Tensor[(2145), int16], Tensor[(140), float64]) */;
    %872 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
    %873 = %871.3;
    (%872, %873, %var_5449, meta[relay.Constant][65] /* ty=Tensor[(140), float64] */)
  };
  %874(%var_5462) /* ty=(Tensor[(4, 14, 11), float32], Tensor[(2145), int16], Tensor[(21), float64], Tensor[(140), float64]) */
}

def @func_3140(%var_3110: Tensor[(9, 6, 4), float64]) -> Tensor[(9, 6, 4), float64] {
  %875 = cast(%var_3110, dtype="float64") /* ty=Tensor[(9, 6, 4), float64] */;
  asin(%875) /* ty=Tensor[(9, 6, 4), float64] */
}

def @func_8502(%var_8499: Tensor[(7, 15, 9), float32], %var_8500: Tensor[(21), float64], %var_8501: Tensor[(540), float64]) -> (Tensor[(7, 15, 9), float32], Tensor[(4, 14, 11), float32], Tensor[(15, 14, 2), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(7, 12, 5), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64]) {
  %898 = fn (%var_8446: Tensor[(7, 15, 9), float32], %var_8469: Tensor[(21), float64], %var_8493: Tensor[(540), float64]) -> (Tensor[(7, 15, 9), float32], Tensor[(4, 14, 11), float32], Tensor[(15, 14, 2), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(7, 12, 5), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64]) {
    %876 = cast(%var_8446, dtype="float32") /* ty=Tensor[(7, 15, 9), float32] */;
    %877 = cast(meta[relay.Constant][66] /* ty=Tensor[(1404), float64] */, dtype="float64") /* ty=Tensor[(1404), float64] */;
    %878 = cast(%var_8469, dtype="float64") /* ty=Tensor[(21), float64] */;
    %879 = reshape(%877, newshape=[1404]) /* ty=Tensor[(1404), float64] */;
    %880 = reshape(%878, newshape=[21]) /* ty=Tensor[(21), float64] */;
    %881 = @func_6207(%879, %880) /* ty=(Tensor[(15, 14, 2), float64], Tensor[(9, 12, 13), float64], Tensor[(1404), float64], Tensor[(4, 14, 11), float32], Tensor[(21), float64]) */;
    %882 = cast(meta[relay.Constant][67] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %883 = reshape(%882, newshape=[7, 12, 5]) /* ty=Tensor[(7, 12, 5), float32] */;
    %884 = @func_6979(%883) /* ty=(Tensor[(7, 12, 5), float32],) */;
    %885 = %884.0;
    %886 = cast(meta[relay.Constant][67] /* ty=Tensor[(420), float32] */, dtype="float32") /* ty=Tensor[(420), float32] */;
    %887 = shape_of(%885, dtype="int32") /* ty=Tensor[(3), int32] */;
    %888 = cast(%885, dtype="float32") /* ty=Tensor[(7, 12, 5), float32] */;
    %889 = dyn.reshape(%886, %887, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %890 = cast(%var_8493, dtype="float64") /* ty=Tensor[(540), float64] */;
    %891 = reshape(%890, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
    %892 = @func_268(%891) /* ty=(Tensor[(10, 6, 9), uint8],) */;
    %893 = asin(%876) /* ty=Tensor[(7, 15, 9), float32] */;
    %894 = @func_5303() /* ty=Tensor[(4, 14, 11), float32] */;
    %895 = %881.0;
    %896 = divide(%888, %889) /* ty=Tensor[(7, 12, 5), float32] */;
    %897 = %892.0;
    (%893, %894, %895, meta[relay.Constant][66] /* ty=Tensor[(1404), float64] */, %var_8469, %896, %897, %var_8493)
  };
  %898(%var_8499, %var_8500, %var_8501) /* ty=(Tensor[(7, 15, 9), float32], Tensor[(4, 14, 11), float32], Tensor[(15, 14, 2), float64], Tensor[(1404), float64], Tensor[(21), float64], Tensor[(7, 12, 5), float32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64]) */
}

def @func_5201() -> (Tensor[(15, 14, 2), float32],) {
  @func_5199() /* ty=(Tensor[(15, 14, 2), float32],) */
}

def @func_9398() -> (Tensor[(15, 14, 2), float32], Tensor[(9, 14, 16), int8]) {
  %903 = fn () -> (Tensor[(15, 14, 2), float32], Tensor[(9, 14, 16), int8]) {
    %899 = @func_7259() /* ty=(Tensor[(10, 6, 9), float32], Tensor[(15, 14, 2), float32]) */;
    %900 = @func_6788() /* ty=(Tensor[(9, 14, 16), int8],) */;
    %901 = %899.1;
    %902 = %900.0;
    (%901, %902)
  };
  %903() /* ty=(Tensor[(15, 14, 2), float32], Tensor[(9, 14, 16), int8]) */
}

def @func_8911() -> Tensor[(3, 12, 6), uint32] {
  %905 = fn () -> Tensor[(3, 12, 6), uint32] {
    %904 = @func_6482() /* ty=(Tensor[(3, 12, 6), uint32],) */;
    %904.0
  };
  %905() /* ty=Tensor[(3, 12, 6), uint32] */
}

def @func_2326(%var_2287: Tensor[(4, 12, 8), float64], %var_2293: Tensor[(216), uint32], %var_2314: Tensor[(540), float64], %var_2319: Tensor[(1440), float64]) -> (Tensor[(4, 12, 8), float64], Tensor[(3, 12, 6), uint32], Tensor[(216), uint32], Tensor[(10, 6, 9), uint8], Tensor[(540), float64], Tensor[(16, 10, 9), int64]) {
  %906 = cast(%var_2287, dtype="float64") /* ty=Tensor[(4, 12, 8), float64] */;
  %907 = cast(%var_2293, dtype="uint32") /* ty=Tensor[(216), uint32] */;
  %908 = reshape(%907, newshape=[3, 12, 6]) /* ty=Tensor[(3, 12, 6), uint32] */;
  %909 = @func_1531(%908) /* ty=(Tensor[(3, 12, 6), uint32],) */;
  %910 = cast(%var_2314, dtype="float64") /* ty=Tensor[(540), float64] */;
  %911 = reshape(%910, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %912 = @func_268(%911) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %913 = cast(%var_2319, dtype="float64") /* ty=Tensor[(1440), float64] */;
  %914 = reshape(%913, newshape=[16, 10, 9]) /* ty=Tensor[(16, 10, 9), float64] */;
  %915 = @func_1835(%914) /* ty=Tensor[(16, 10, 9), float64] */;
  %916 = cast(%var_2319, dtype="int64") /* ty=Tensor[(1440), int64] */;
  %917 = shape_of(%915, dtype="int32") /* ty=Tensor[(3), int32] */;
  %918 = cast(%915, dtype="int64") /* ty=Tensor[(16, 10, 9), int64] */;
  %919 = dyn.reshape(%916, %917, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %920 = log10(%906) /* ty=Tensor[(4, 12, 8), float64] */;
  %921 = %909.0;
  %922 = %912.0;
  %923 = bitwise_and(%918, %919) /* ty=Tensor[(16, 10, 9), int64] */;
  (%920, %921, %var_2293, %922, %var_2314, %923)
}

def @func_6788() -> (Tensor[(9, 14, 16), int8],) {
  %924 = cast(meta[relay.Constant][69] /* ty=Tensor[(9, 14, 16), int8] */, dtype="int8") /* ty=Tensor[(9, 14, 16), int8] */;
  %925 = shape_of(meta[relay.Constant][68] /* ty=Tensor[(9, 14, 16), int8] */, dtype="int32") /* ty=Tensor[(3), int32] */;
  %926 = cast(meta[relay.Constant][68] /* ty=Tensor[(9, 14, 16), int8] */, dtype="int8") /* ty=Tensor[(9, 14, 16), int8] */;
  %927 = dyn.reshape(%924, %925, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %928 = bitwise_xor(%926, %927) /* ty=Tensor[(9, 14, 16), int8] */;
  (%928,)
}

def @func_8787() -> Tensor[(15, 14, 2), bool] {
  @func_8048() /* ty=Tensor[(15, 14, 2), bool] */
}

def @func_1053(%var_1045: Tensor[(9, 10, 6), float32]) -> (Tensor[(9, 10, 6), float32], Tensor[(10, 6, 9), uint8]) {
  %929 = cast(%var_1045, dtype="float32") /* ty=Tensor[(9, 10, 6), float32] */;
  %930 = log2(%929) /* ty=Tensor[(9, 10, 6), float32] */;
  %931 = cast(%930, dtype="float64") /* ty=Tensor[(9, 10, 6), float64] */;
  %932 = reshape(%931, newshape=[10, 6, 9]) /* ty=Tensor[(10, 6, 9), float64] */;
  %933 = @func_268(%932) /* ty=(Tensor[(10, 6, 9), uint8],) */;
  %934 = %933.0;
  (%930, %934)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 *//home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen348/build/output.py:2249: DeprecationWarning: legacy graph executor behavior of producing json / lib / params will be removed in the next release. Please see documents of tvm.contrib.graph_executor.GraphModule for the  new recommended usage.
  graph, lib, params = relay.build(mod, target='llvm')
/home/yujunzhe/tvm/python/tvm/contrib/graph_runtime.py:25: UserWarning: This function has been moved to tvm.contrib.graph_executor and will be removed in the next TVM release
  warnings.warn(

===================================
Traceback (most recent call last):
  File "/home/yujunzhe/Hirgen_generated/tvm0.8_test/HirGen348/build/output.py", line 2254, in <module>
    graph, lib, params = relay.build(mod, target='cuda')
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 369, in build
    executor_config, runtime_mod, params = bld_mod.build(
  File "/home/yujunzhe/tvm/python/tvm/relay/build_module.py", line 177, in build
    self._build(mod, target, target_host, executor, mod_name)
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 237, in __call__
    raise get_last_ffi_error()
tvm._ffi.base.TVMError: Traceback (most recent call last):
  7: TVMFuncCall
  6: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), tvm::relay::backend::RelayBuildModule::GetFunction(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, tvm::runtime::ObjectPtr<tvm::runtime::Object> const&)::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#3}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&)
  5: tvm::relay::backend::RelayBuildModule::BuildRelay(tvm::IRModule, std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, tvm::runtime::NDArray, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, tvm::runtime::NDArray> > > const&, tvm::runtime::String)
  4: tvm::build(tvm::runtime::Map<tvm::Target, tvm::IRModule, void, void> const&, tvm::Target const&)
  3: tvm::codegen::Build(tvm::IRModule, tvm::Target)
  2: tvm::runtime::TypedPackedFunc<tvm::runtime::Module (tvm::IRModule, tvm::Target)>::AssignTypedLambda<tvm::runtime::Module (*)(tvm::IRModule, tvm::Target)>(tvm::runtime::Module (*)(tvm::IRModule, tvm::Target), std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >)::{lambda(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*)#1}::operator()(tvm::runtime::TVMArgs const&, tvm::runtime::TVMRetValue*) const
  1: tvm::codegen::BuildCUDA(tvm::IRModule, tvm::Target)
  0: std::_Function_handler<void (tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*), TVMFuncCreateFromCFunc::{lambda(tvm::runtime::TVMArgs, tvm::runtime::TVMRetValue*)#2}>::_M_invoke(std::_Any_data const&, tvm::runtime::TVMArgs&&, tvm::runtime::TVMRetValue*&&) [clone .cold]
  File "/home/yujunzhe/tvm/python/tvm/_ffi/_ctypes/packed_func.py", line 81, in cfun
    rv = local_pyfunc(*pyargs)
  File "/home/yujunzhe/tvm/python/tvm/autotvm/measure/measure_methods.py", line 789, in tvm_callback_cuda_compile
    ptx = nvcc.compile_cuda(code, target=target, arch=AutotvmGlobalScope.current.cuda_target_arch)
  File "/home/yujunzhe/tvm/python/tvm/contrib/nvcc.py", line 108, in compile_cuda
    raise RuntimeError(msg)
RuntimeError: 
#ifdef _WIN32
  using uint = unsigned int;
  using uchar = unsigned char;
  using ushort = unsigned short;
  using int64_t = long long;
  using uint64_t = unsigned long long;
#else
  #define uint unsigned int
  #define uchar unsigned char
  #define ushort unsigned short
  #define int64_t long long
  #define uint64_t unsigned long long
#endif
extern "C" __global__ void __launch_bounds__(390) tvmgen_default_fused_reshape_floor_divide_kernel0(float* __restrict__ T_floor_divide, float* __restrict__ placeholder, float* __restrict__ placeholder1) {
  T_floor_divide[(((int)threadIdx.x))] = floorf((placeholder[(((int)threadIdx.x))] / placeholder1[(((int)threadIdx.x))]));
}


Compilation error:
In file included from /usr/local/cuda/bin/../targets/x86_64-linux/include/cuda_runtime.h:82,
                 from <command-line>:
/usr/local/cuda/bin/../targets/x86_64-linux/include/crt/host_config.h:143:2: error: #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
  143 | #error -- unsupported GNU version! gcc versions later than 12 are not supported! The nvcc flag '-allow-unsupported-compiler' can be used to override this version check; however, using an unsupported host compiler may cause compilation failure or incorrect run time execution. Use at your own risk.
      |  ^~~~~


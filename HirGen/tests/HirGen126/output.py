import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
const_147 = relay.const([[[10,7,-8,-10,6,-10],[-1,8,-10,-3,-6,-6],[-3,3,-3,-5,-8,-7],[-5,1,-10,6,6,5],[5,-4,-7,7,1,6],[-5,-6,-3,-9,-8,2],[3,-9,-2,-5,-10,-7],[-1,9,-6,-5,5,-4],[-6,9,-5,-2,-8,9],[5,6,7,4,-10,10],[-5,-7,-8,-1,5,-8],[2,9,3,2,4,-3],[1,-8,10,9,5,-8],[-6,-9,10,1,9,3],[-10,10,-3,4,2,-7],[2,-8,1,-1,-4,9]],[[-6,-7,10,9,-7,3],[-3,3,1,-8,5,9],[1,-4,8,10,-6,3],[10,-6,-10,-4,10,-8],[7,-3,3,8,-1,10],[8,7,10,-9,-9,-7],[6,2,9,6,-10,-6],[-2,-9,-9,-4,1,-10],[-9,-3,-4,7,-10,-7],[-3,-2,-3,-5,5,7],[1,10,1,4,8,8],[8,3,6,-6,2,-1],[-10,-9,-8,-8,6,-4],[-9,6,-8,1,-2,3],[-4,-9,8,-3,-4,-1],[7,-3,1,-1,-6,8]],[[-3,-9,3,5,8,4],[-1,2,9,2,-7,10],[-4,8,8,-3,5,6],[-3,-5,-4,-7,-8,-4],[6,-3,-1,-1,-2,5],[5,2,2,-7,-10,8],[-3,-1,-5,8,-1,6],[-1,-6,-4,-6,-1,-8],[-8,-7,-1,-4,-9,-5],[-2,-10,1,-2,1,-9],[9,5,-4,2,-9,-2],[-6,-5,3,-3,-5,5],[-7,10,7,2,-5,-5],[-1,10,-7,-2,-1,10],[-9,9,4,-9,5,8],[1,9,8,-2,2,-8]],[[-4,-4,7,1,8,9],[-7,2,10,-5,1,-6],[9,-9,9,4,8,-10],[-3,-3,10,3,-2,9],[-7,2,8,9,3,-10],[5,-8,1,10,-9,-5],[4,-8,2,-8,-4,9],[8,9,5,-6,3,-3],[-1,8,-7,1,-2,-8],[6,5,8,-2,-1,-10],[4,5,1,2,1,4],[-5,-9,-3,1,-7,-9],[-10,3,-6,6,-8,-7],[-8,-1,-1,9,9,2],[9,1,-10,2,3,-1],[-8,-9,7,5,7,8]],[[-2,-1,-7,3,8,3],[-4,8,-8,-8,-6,-3],[7,10,-6,9,5,9],[4,-7,5,8,5,-9],[-7,-9,8,-5,2,6],[-4,-7,6,1,9,-2],[-10,-6,-8,-7,-5,-7],[-10,7,-8,1,-1,-2],[-4,7,-3,-10,1,7],[2,-4,2,-10,-4,6],[4,-5,-6,2,-10,-5],[-9,-5,10,10,7,9],[-5,-2,9,-2,-5,-8],[4,1,2,-6,-1,-9],[-4,-1,3,10,10,-9],[-10,-2,10,8,-1,-9]],[[-4,-3,-7,-4,-3,1],[6,6,-3,-2,9,-10],[5,2,-8,10,7,7],[-6,-4,7,-5,-7,8],[7,5,-6,-5,-4,7],[-8,-3,8,9,-2,-3],[8,-3,-8,-5,1,-8],[-6,7,10,3,9,-4],[-6,3,6,9,3,-1],[3,5,-7,-2,-8,4],[-3,9,-2,10,-8,8],[-10,-9,8,-3,5,6],[3,-6,9,10,-8,-3],[-3,-10,8,8,6,-1],[9,-7,2,-8,-3,7],[-6,-1,9,7,-9,-5]],[[-7,-6,-2,7,-1,-6],[10,-9,10,-5,6,-1],[2,-6,-4,-1,-4,4],[-4,-7,-7,-7,9,-2],[-5,-5,4,5,-3,10],[-4,8,8,5,-5,6],[-5,1,-10,-1,1,-5],[2,-3,-10,4,-4,1],[-6,-3,-9,3,1,-6],[-6,-7,4,3,1,-3],[-9,-7,1,6,-4,-6],[-7,7,-2,10,-1,-6],[8,-3,7,1,2,10],[6,1,-4,-5,6,8],[4,-8,4,1,5,-2],[9,10,-1,-5,4,-7]],[[2,9,3,-8,5,1],[9,-3,6,-9,-9,6],[-7,7,8,-2,-5,10],[8,4,-1,-5,8,7],[3,9,-2,4,-6,3],[-4,-6,-5,6,2,7],[4,6,-9,-6,-8,6],[9,-9,10,1,-8,2],[1,7,7,-9,-5,3],[-9,-6,-3,4,2,-7],[7,6,-4,9,8,1],[1,6,-6,-9,7,1],[-10,10,-10,4,-4,3],[1,-3,9,4,-7,-5],[7,-7,9,-4,3,-3],[-8,2,-9,10,-8,-9]],[[-9,8,-3,-9,7,5],[-6,-7,3,-3,6,5],[-10,-7,7,7,9,2],[-8,-2,-8,1,8,-4],[7,-3,1,-10,2,1],[-1,7,-4,4,1,7],[5,-5,7,5,5,8],[-8,8,4,-1,-8,9],[-9,-3,8,-2,-7,9],[6,-7,4,8,-2,1],[-6,4,-3,3,3,4],[6,-6,5,-7,1,-2],[9,-6,6,10,-10,-3],[5,-4,-4,2,6,-4],[-5,-2,7,1,5,1],[-5,-3,-3,-7,-4,1]],[[-1,9,2,10,6,-2],[-7,-9,10,-6,-10,1],[7,6,-1,3,-7,-3],[8,6,5,-7,3,-9],[-7,-8,-5,-2,9,6],[-2,-3,-3,-10,10,-3],[4,-9,7,7,-4,10],[-6,-2,10,-4,-8,3],[-5,-10,-7,-10,-6,-5],[9,-6,-9,-2,1,-9],[-3,3,-9,-3,-9,9],[-10,4,-8,-9,-3,9],[1,6,-5,-3,7,10],[-4,10,9,-9,8,5],[4,-2,8,10,5,1],[10,-8,4,5,-2,1]],[[-6,-10,-4,10,-8,-7],[-6,-4,-3,-10,-3,-2],[-6,-4,3,2,4,2],[7,-5,6,9,-9,2],[-10,-4,1,-9,-2,7],[-6,3,-1,9,-8,-10],[6,-6,-2,6,-1,4],[-6,-10,8,6,-6,-6],[-5,-2,-9,7,2,2],[-2,-4,9,-6,3,-5],[-5,4,9,10,-7,9],[7,-3,7,-10,6,-3],[-4,-3,-9,9,-9,-7],[5,4,-10,-7,-9,3],[-10,7,9,-2,-1,9],[3,-3,-2,-3,-8,8]],[[10,-6,-8,4,-3,3],[-3,2,-1,-3,10,-9],[8,9,6,3,-3,-4],[-7,-8,-9,2,-7,5],[7,2,-8,2,-2,-10],[-8,-4,-4,-3,-7,1],[1,8,-8,-6,5,-4],[1,-8,7,-1,3,-8],[-4,-7,-10,-8,2,7],[-3,6,-2,-10,4,-4],[-6,-8,10,7,6,6],[-2,7,10,-5,8,10],[10,1,-10,9,-1,8],[-2,7,6,-4,-8,4],[6,3,-1,-3,7,-6],[-2,4,1,-7,4,1]],[[-9,-10,-7,-7,4,-8],[-4,-5,-9,-7,-6,-6],[-2,2,-7,8,9,3],[2,2,1,-2,-4,-8],[-8,6,8,4,7,8],[8,-1,3,6,5,5],[9,5,-2,8,9,-7],[10,-9,-7,10,-2,-4],[-7,2,10,2,-3,-7],[-9,9,1,-5,5,-7],[-10,8,9,6,-4,-2],[6,-8,-10,-5,9,8],[-10,-10,-8,7,-5,-7],[9,-2,4,1,-9,-8],[-3,-1,9,-2,-2,-3],[-1,-8,7,1,-1,-3]]], dtype = "uint64")#candidate|147|(13, 16, 6)|const|uint64
const_148 = relay.const([[[-5,9,1,-7,-1,4],[2,3,-6,5,-3,5],[-4,-1,-6,-10,-7,4],[10,5,-10,3,3,-7],[-2,8,-7,5,-5,-2],[9,-2,2,-6,-7,6],[-10,-9,-5,-3,-1,2],[3,-9,-4,-1,-4,-1],[9,1,-8,5,-7,2],[-3,1,-7,-3,-10,9],[5,7,3,8,-5,9],[-7,3,1,8,-2,9],[1,2,-6,5,2,-1],[-2,-8,7,2,4,-9],[-3,-10,-5,-6,10,-10],[-10,-8,-1,-7,7,3]],[[5,-9,3,3,-5,2],[-1,-8,8,-9,-7,3],[7,2,-5,9,10,-8],[-4,-8,-5,8,-1,-9],[8,-9,5,10,2,-8],[-7,-9,-3,-10,10,-7],[-8,-1,3,10,-7,6],[-9,-6,10,-9,10,-2],[5,-1,9,1,5,6],[3,-1,5,4,4,6],[-5,9,-1,10,4,-2],[-9,10,-7,4,-2,-10],[-10,2,6,6,-1,7],[-7,-9,-8,3,3,3],[-10,2,10,1,-8,-4],[9,8,-6,-1,1,3]],[[10,-9,7,-5,-7,-1],[10,-6,2,-5,-9,-10],[-7,9,10,9,8,-5],[10,-4,-6,5,-6,6],[-3,1,-5,9,4,2],[-10,4,-9,-2,8,7],[2,3,4,-8,-2,1],[9,-9,-7,-7,-2,-4],[-9,-1,6,-4,-9,-6],[6,-2,-10,4,-2,-2],[-4,8,9,10,-2,-8],[10,-7,-7,-3,-7,-1],[-7,-8,-8,8,9,-1],[-7,8,-3,-8,-8,-3],[7,10,-3,1,-6,7],[-9,-9,10,-9,-10,-6]],[[5,7,6,10,9,7],[3,-10,-7,4,-3,-6],[-2,1,6,-8,-1,6],[-6,-3,10,-5,-8,-1],[-5,2,-7,-2,-5,-2],[10,6,4,3,10,-5],[3,-3,-8,-5,9,-10],[6,-7,4,-6,1,10],[-3,7,6,-6,-3,-2],[-5,-1,-6,3,4,-5],[-3,-7,-2,-10,-9,-10],[9,5,-7,1,8,6],[-5,-6,-1,9,3,-8],[2,-9,3,7,-5,3],[1,-2,8,-3,-9,3],[-9,5,10,-6,-1,5]],[[-2,7,-5,1,-4,7],[3,6,6,-3,4,8],[3,-10,8,-2,10,-10],[-10,2,-4,-8,8,10],[-5,-10,2,7,-3,2],[4,4,3,-10,-4,1],[-3,6,4,7,8,-10],[-7,-6,4,4,3,-4],[1,-1,8,7,-2,-3],[9,-6,9,-7,-3,-9],[-4,4,10,-4,-2,7],[1,-1,7,9,-8,-4],[1,3,6,-8,4,8],[2,4,8,-3,-7,2],[-2,1,6,-5,7,-8],[10,3,-1,-8,4,-6]],[[7,-1,-6,10,4,8],[-7,6,2,6,3,8],[10,-7,-1,-7,2,3],[-3,-8,6,-8,10,4],[-1,6,10,7,1,6],[-9,-10,-3,9,-8,4],[2,7,-7,3,-9,-1],[2,-1,-6,-7,-8,-3],[2,8,10,5,3,3],[-3,7,5,1,9,-4],[-8,7,-8,8,6,-3],[7,6,2,-1,6,-6],[-7,-10,-10,-1,-5,-4],[-1,-6,-8,1,7,-5],[-1,-3,-4,9,8,10],[-6,-4,-9,6,1,-9]],[[9,6,9,6,-10,8],[9,-7,-7,-3,-8,-3],[-7,1,1,9,-9,-7],[-8,10,-3,2,-4,-7],[6,5,8,2,-7,5],[10,7,1,-8,8,-7],[-6,10,-7,-10,-10,-4],[-5,6,-9,1,5,9],[-3,-6,-6,-9,-1,-2],[-10,9,9,8,2,-7],[5,2,-5,7,-1,6],[-8,-10,8,7,-6,7],[4,1,-9,8,-4,3],[3,-7,5,-4,2,3],[-7,7,-9,-3,10,-8],[2,-5,8,8,-10,-8]],[[10,-9,7,10,4,-1],[2,5,-8,4,-3,-6],[7,-6,9,-1,7,1],[5,10,-1,-2,3,-6],[4,-10,-7,10,10,-10],[-10,-8,-4,-1,-10,-6],[-1,3,-8,6,-1,1],[-3,-1,-4,10,3,-1],[6,-5,4,-9,-2,1],[-3,3,3,1,2,-9],[-6,-2,-8,5,-6,4],[2,7,6,-5,4,5],[2,5,2,2,-6,7],[7,2,2,5,7,-9],[1,4,-10,5,4,5],[6,4,-2,-8,2,-4]],[[3,-10,3,-5,-1,-10],[-9,2,6,1,-5,-8],[5,7,5,2,3,2],[9,-2,8,3,10,-3],[3,10,9,6,-3,1],[-6,-6,5,7,-7,6],[5,-3,3,1,9,5],[-9,-4,-5,10,8,-10],[-6,-6,-8,-6,-10,-5],[-6,10,-8,-3,-7,9],[2,3,5,-10,10,2],[8,10,9,-2,4,10],[6,-10,2,7,9,3],[-1,5,-1,-9,6,-7],[-7,-10,1,-4,5,2],[-3,1,-8,8,-7,1]],[[1,-7,1,4,4,-10],[5,-4,10,-10,-4,9],[-5,-1,9,2,-4,-8],[4,-7,-5,-5,-3,-3],[-2,9,5,-10,-4,-5],[-5,-4,-6,5,4,10],[9,2,-2,-8,-9,4],[7,-4,-5,6,6,10],[-2,-1,7,6,7,-1],[-6,-5,7,8,-3,5],[-3,-9,-10,-10,4,-9],[-5,10,-4,2,1,4],[9,2,-8,2,-9,-10],[-10,3,4,-6,8,2],[6,-3,-5,2,1,-8],[4,-10,-2,4,-3,-7]],[[-1,-5,-6,5,10,6],[-5,1,-6,-6,-10,-1],[-9,6,4,-6,-4,-7],[7,-2,-10,-4,9,-10],[4,-5,-2,-7,-3,-2],[6,-5,-8,-1,-4,4],[3,8,3,9,2,2],[-10,5,-3,4,7,-10],[-2,2,5,-10,3,-4],[-6,4,7,-3,6,-2],[-7,10,6,8,4,3],[-5,-10,3,-7,-7,6],[-10,2,-7,6,-3,-5],[-8,-4,-3,2,2,-6],[-7,3,-5,-7,5,10],[-6,-5,5,-5,-5,7]],[[-7,-3,2,5,4,5],[-6,6,-4,5,-5,6],[-2,-4,3,4,10,-1],[1,-4,-4,6,-1,-1],[-1,4,9,-5,-4,-10],[10,-7,3,5,-5,-9],[-7,-1,9,5,10,-5],[1,2,1,-2,-7,-1],[6,4,-6,2,-10,-4],[-7,-7,8,8,2,-5],[-1,3,-6,10,-2,-5],[9,-2,4,-8,-4,-8],[6,4,-5,10,7,-5],[8,7,2,-10,3,10],[9,6,10,8,9,4],[2,-1,-7,-4,-2,7]],[[-2,4,1,1,-1,-3],[-3,9,-2,8,-6,5],[-7,-10,-7,-2,-6,-4],[-2,4,4,-4,-6,-2],[5,4,-1,7,-9,7],[-6,7,-7,6,8,1],[-7,10,10,-4,4,-8],[-1,4,-4,6,-10,-1],[-5,-6,-8,4,6,9],[-10,10,-4,-10,3,-3],[-3,-6,-1,1,3,9],[-6,7,9,-7,2,2],[6,-9,5,6,2,-2],[9,10,-3,-3,2,-3],[7,-1,-9,-5,8,-2],[9,-3,-9,5,-10,-10]]], dtype = "uint64")#candidate|148|(13, 16, 6)|const|uint64
bop_149 = relay.multiply(const_147.astype('uint64'), relay.reshape(const_148.astype('uint64'), relay.shape_of(const_147))) # shape=(13, 16, 6)
output = relay.Tuple([bop_149,])
output2 = relay.Tuple([bop_149,])
func_161 = relay.Function([], output)
mod['func_161'] = func_161
mod = relay.transform.InferType()(mod)
mutated_mod['func_161'] = func_161
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mutated_mod.get_global_var('func_161')
call_162 = func_161_call()
output = call_162
func_163 = relay.Function([], output)
mutated_mod['func_163'] = func_163
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_180 = relay.TupleGetItem(func_161_call(), 0)
call_181 = relay.TupleGetItem(func_163_call(), 0)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_196 = relay.TupleGetItem(func_161_call(), 0)
call_197 = relay.TupleGetItem(func_163_call(), 0)
output = relay.Tuple([call_180,call_196,])
output2 = relay.Tuple([call_181,call_197,])
func_207 = relay.Function([], output)
mod['func_207'] = func_207
mod = relay.transform.InferType()(mod)
output = func_207()
func_208 = relay.Function([], output)
mutated_mod['func_208'] = func_208
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_232 = relay.TupleGetItem(func_161_call(), 0)
call_233 = relay.TupleGetItem(func_163_call(), 0)
func_207_call = mod.get_global_var('func_207')
func_208_call = mutated_mod.get_global_var('func_208')
call_247 = relay.TupleGetItem(func_207_call(), 1)
call_248 = relay.TupleGetItem(func_208_call(), 1)
var_253 = relay.var("var_253", dtype = "uint64", shape = (13, 16, 6))#candidate|253|(13, 16, 6)|var|uint64
bop_254 = relay.greater_equal(call_232.astype('bool'), relay.reshape(var_253.astype('bool'), relay.shape_of(call_232))) # shape=(13, 16, 6)
bop_257 = relay.greater_equal(call_233.astype('bool'), relay.reshape(var_253.astype('bool'), relay.shape_of(call_233))) # shape=(13, 16, 6)
output = relay.Tuple([call_247,bop_254,])
output2 = relay.Tuple([call_248,bop_257,])
func_264 = relay.Function([var_253,], output)
mod['func_264'] = func_264
mod = relay.transform.InferType()(mod)
var_265 = relay.var("var_265", dtype = "uint64", shape = (13, 16, 6))#candidate|265|(13, 16, 6)|var|uint64
output = func_264(var_265)
func_266 = relay.Function([var_265], output)
mutated_mod['func_266'] = func_266
mutated_mod = relay.transform.InferType()(mutated_mod)
const_319 = relay.const([[[-9,8,-3,4,4,4,3,-3,-8,7,9,8,-1],[6,-5,7,-10,-7,-9,4,9,1,-3,6,9,-9],[-3,6,3,5,3,-1,9,3,-3,1,-5,1,-7],[9,2,4,5,1,-4,-6,-8,-9,9,5,10,-1],[8,-3,8,-3,-10,-6,-9,-4,3,1,1,10,-1],[-9,3,-6,-1,-10,-8,1,-9,4,-4,-2,-10,-10],[-10,-8,-9,2,6,-7,-4,8,-7,4,6,6,6],[-8,-9,-7,1,10,4,-4,-9,-9,-7,8,4,1],[-10,9,-5,2,7,2,7,-10,7,3,-6,-10,-9],[-8,-10,2,-8,-6,10,-4,1,5,-2,-1,10,3],[-6,10,3,8,-6,5,-3,-4,1,2,-8,2,-3],[-6,-6,-10,4,-8,5,-2,8,7,-8,-6,3,-3],[-4,-8,7,-1,-3,-5,-8,-5,9,-8,-5,-8,-5],[2,-2,-6,9,7,-8,-6,9,9,4,-4,1,10],[4,7,-2,-9,5,5,1,-9,-10,1,8,-9,-2],[-5,-5,-9,3,-10,6,-3,7,6,-2,9,3,3]],[[8,6,-7,4,-8,-10,-8,9,-2,-8,4,8,-2],[8,-7,-9,-5,8,7,-3,-5,-9,-5,-9,-3,-9],[1,-3,-6,-8,-1,9,-1,-7,9,5,-5,6,-5],[9,2,-4,-5,7,9,-4,2,8,2,-2,-7,4],[-3,10,-7,-7,6,3,-10,1,-6,10,2,-1,-3],[-5,2,-2,4,-5,2,-2,-3,8,-7,-3,-7,1],[8,2,-5,-4,10,5,2,5,-4,-2,3,-2,-10],[3,5,7,-6,-9,-7,9,2,1,4,6,4,4],[-8,8,-1,-7,5,-2,-2,3,5,-9,3,-1,-6],[6,-4,7,-7,2,-8,-4,1,-5,8,-2,-9,2],[-1,-1,-9,-6,7,5,-10,2,3,2,-4,7,-6],[-7,-2,-7,1,9,-4,2,-10,-7,-3,-10,-5,-2],[-1,10,-10,10,-5,4,-6,-7,7,4,-8,10,8],[-2,2,1,-5,-1,-8,-8,10,1,4,-6,9,10],[1,-1,-10,3,6,-5,4,9,-7,-5,10,2,-3],[-7,-2,-10,-9,-3,3,-10,1,4,-1,7,8,4]],[[-9,-2,-9,-5,-9,4,-7,6,-5,2,4,-3,-7],[-3,-4,4,7,6,-8,7,-7,5,7,7,-10,8],[-3,8,-1,6,10,-9,-8,3,5,1,-10,-9,8],[9,-2,-9,-9,-6,8,8,-2,6,-1,3,-8,1],[1,-7,5,-6,-4,-2,1,-5,-10,8,-1,9,3],[1,6,-1,1,3,-5,-3,-3,-2,-4,7,2,-3],[10,-7,4,8,10,-7,9,-9,1,3,-8,10,4],[6,-3,-10,-5,-9,5,-10,-7,7,7,10,9,-3],[8,1,-3,1,7,2,-8,-10,-6,-9,-7,1,-4],[3,-4,-10,-4,-8,7,-4,1,-8,-4,-4,-1,7],[3,4,-9,-1,-7,-7,4,-7,-5,7,6,-4,6],[-3,3,4,8,-1,9,1,-5,-7,6,-1,-5,-4],[4,3,4,-6,6,2,10,-2,-7,4,-3,-2,3],[7,-2,10,9,-5,-9,-1,-2,10,6,10,-5,9],[3,5,5,-5,3,4,-7,6,-9,-3,-7,3,-3],[9,9,-5,9,10,4,-2,3,10,4,-7,10,-6]],[[-1,2,-3,-3,1,7,-10,6,4,-10,4,6,5],[-3,-1,3,7,7,8,-4,-10,9,-8,5,-2,9],[-4,-4,-6,5,5,1,-3,5,2,2,-10,3,7],[2,-4,5,-3,8,-7,9,9,5,-2,-7,10,8],[4,10,1,1,2,-3,7,6,-2,-6,-9,-7,1],[-7,3,3,-9,9,6,5,-7,6,-10,10,1,7],[8,3,5,-2,-5,8,-1,-6,-8,-6,-1,-9,-7],[5,4,8,-5,3,8,10,2,9,-6,10,-6,-1],[1,8,-10,5,-6,-7,-3,10,-8,7,10,-3,1],[-2,-2,-3,-2,2,-5,-5,-2,-1,3,-6,-4,10],[9,10,-7,-8,-3,5,-2,-7,-5,-8,-3,2,2],[6,3,8,9,3,-10,6,-1,-9,9,-10,8,-1],[-6,-8,3,4,10,-7,2,5,-10,-5,4,-2,2],[7,-9,-3,-1,5,7,-7,1,-7,3,-5,5,-4],[6,1,-9,9,7,2,5,4,-7,10,-7,1,9],[5,-5,-2,-6,-10,3,2,1,10,3,9,-6,-8]],[[-4,-5,4,-6,10,2,2,2,9,-5,-9,-8,10],[-2,6,9,2,4,5,-7,-7,2,8,5,7,-10],[9,-9,-9,5,-5,-7,8,3,1,-8,-8,10,-2],[5,-8,-8,-5,4,-9,9,-3,9,8,-5,-1,-9],[-1,4,5,5,-4,-10,9,5,5,2,-10,1,2],[-9,9,3,-9,7,8,-9,6,-3,7,3,-2,2],[-5,-2,-9,1,2,-9,-4,-7,8,-7,9,-9,10],[8,6,-5,-3,7,9,1,5,2,-4,-2,-9,9],[10,2,-10,1,-2,-7,3,-8,-4,-6,7,-8,9],[7,2,-5,2,4,2,7,2,-9,-8,9,-4,-2],[-5,5,-2,-3,6,9,-7,-9,-8,3,8,7,8],[9,3,4,2,1,2,2,-3,-6,-4,9,9,2],[-3,7,-6,-3,8,6,-9,-7,10,6,10,4,-7],[6,7,5,-8,1,-9,-3,-4,-10,-4,1,-6,-9],[-1,10,8,-3,-1,-2,3,3,8,10,2,4,-6],[-4,-3,9,-6,9,-3,6,3,5,1,-7,-5,-2]],[[8,5,-10,8,-9,-5,-8,-8,7,8,-4,-5,2],[-6,10,4,-2,3,7,5,-2,3,-5,10,-7,-3],[3,5,-1,-2,7,-10,-4,-2,6,-1,6,-8,-6],[-6,-9,1,-8,-7,5,7,-5,4,-9,4,-2,6],[8,-10,4,-5,-4,5,3,8,-1,-4,3,10,4],[9,-7,-3,-9,-9,-10,6,-5,5,-4,7,-1,6],[1,-8,-7,9,2,-1,7,-3,-8,-1,1,10,1],[5,-10,-6,4,-4,-10,7,4,-4,7,8,-8,8],[-4,-9,4,7,-2,3,-8,8,-9,-2,10,4,3],[5,-10,3,1,-1,5,-9,4,4,10,-9,-7,-3],[-7,8,-10,3,8,-6,-7,4,-6,10,8,1,8],[-6,-3,3,6,9,-6,8,10,3,-2,1,1,-7],[7,-4,9,1,-10,1,-8,4,5,-8,-5,-4,9],[4,-7,6,2,-1,1,-5,8,1,-10,-2,6,-10],[2,-9,-9,8,5,-2,-3,9,6,-6,-2,2,1],[-7,-3,-1,2,3,-4,-9,-4,-7,-5,2,-10,8]],[[5,-2,-2,-7,-7,-10,-8,-10,8,3,-10,1,-5],[-7,-1,-7,-2,7,9,1,-2,-2,-5,-5,2,5],[6,-5,8,8,-4,-8,-5,2,-8,-7,-5,-3,3],[-5,5,7,5,4,4,5,-8,-8,-9,-4,-3,-9],[2,-1,1,-10,-6,-8,10,6,-4,6,5,3,-4],[3,10,6,-8,-6,2,3,-2,-9,-3,-6,6,-8],[-6,7,10,7,-3,-1,-1,10,-3,-9,6,-9,3],[-5,-7,-9,6,3,5,-7,5,1,-6,-7,-6,6],[-6,-10,-10,7,-7,-2,-10,10,-7,6,-6,-5,-10],[3,-1,-9,-6,8,-1,5,9,3,-4,-9,-2,2],[3,-2,2,-10,-8,1,-5,10,-2,-6,-2,-4,-3],[-9,7,-3,-9,-3,2,-3,10,2,1,-5,-7,-5],[1,-7,-2,7,6,-10,-5,-5,6,-7,1,4,-3],[6,10,-9,1,-5,-10,4,2,-4,-7,-6,-6,1],[-4,1,6,5,9,8,10,6,-8,8,4,-9,-1],[-6,-7,6,6,7,5,9,-8,7,-2,7,-1,2]],[[-9,8,7,8,-3,-7,4,-10,-8,4,-7,3,1],[-1,-7,10,5,7,-2,-6,-1,-1,-9,-3,-9,4],[-7,-5,-6,-5,-9,-8,-4,4,8,-10,-5,4,-1],[2,6,-8,-2,5,9,-9,-6,-1,-10,6,-9,8],[9,-9,-3,-2,8,3,-3,5,10,-8,-1,-7,-6],[-10,1,-8,-4,-1,-9,-5,3,6,-8,-7,7,7],[6,10,8,8,1,-10,-6,-1,3,3,-8,3,-10],[-6,-8,6,8,-10,7,8,6,3,8,-9,2,9],[9,-7,4,7,-6,-8,10,-3,-7,-4,-8,7,3],[-8,-5,4,-1,-6,-4,-7,-7,-7,2,-3,2,4],[-4,-5,-4,-1,-10,-5,-8,5,4,-4,-6,6,-4],[9,-6,-5,1,-7,-5,-5,7,-7,1,-9,-4,3],[-8,10,-10,6,-1,8,3,8,-4,-2,-5,8,-10],[8,-9,-4,4,9,-4,-1,7,8,5,-7,-10,-1],[-9,10,5,-3,-3,-3,2,2,-8,10,4,-7,-5],[9,-5,-10,-9,-6,-10,-9,8,9,-4,8,8,9]],[[-8,-1,3,8,-10,4,3,-4,-9,-6,-4,8,10],[2,-4,7,9,4,-8,2,5,5,-4,-10,3,9],[-3,-7,-3,-10,-4,-10,5,-5,-8,-10,2,2,-6],[8,-8,-7,4,-5,-7,-5,-10,-3,8,-9,-4,-3],[6,-2,-6,2,-9,-7,4,-9,5,-9,-8,-3,10],[-5,2,-1,-1,-1,-5,-3,1,-7,-3,4,-10,-4],[-5,7,10,-2,-9,-1,7,-9,2,-7,3,-7,-10],[-4,-6,-1,9,8,9,2,-2,8,4,4,-1,-10],[-2,-1,-10,5,5,-4,-3,4,2,-1,8,6,7],[9,-8,2,-7,-4,-8,-10,-6,-5,-9,-2,4,5],[-3,5,10,7,2,10,2,6,-3,-1,1,8,5],[-10,5,3,6,-5,-2,6,2,5,10,-2,-6,-1],[-10,-8,3,4,-5,4,-4,10,3,-10,-10,9,-4],[2,-7,-10,6,-2,8,-4,2,6,9,2,2,7],[4,-3,-10,-10,-9,-1,-8,3,8,1,-7,10,3],[-6,-1,-8,-10,5,7,6,-6,1,10,4,-3,-2]]], dtype = "uint64")#candidate|319|(9, 16, 13)|const|uint64
const_320 = relay.const([[[-1,5,-1,-5,-9,-5,7,6,2,-10,-5,9,9],[-2,2,-5,6,4,-3,2,10,-5,-5,10,4,-6],[-4,9,-4,-8,-4,9,7,7,4,3,9,2,9],[-9,-1,2,-1,1,-3,-4,-4,-4,8,-10,-3,8],[-1,7,-2,2,3,-9,6,-2,10,3,8,-6,3],[1,-1,9,1,1,-4,7,9,-2,7,-4,-7,-3],[-8,-1,5,6,-3,9,1,-5,4,-2,9,8,7],[3,10,-1,2,-9,6,-4,-10,-10,2,-8,9,-1],[-6,-4,-2,-1,2,-3,3,-3,7,7,2,-2,7],[3,2,4,-3,-4,-7,9,6,4,-4,-10,6,-2],[-9,5,4,1,3,7,6,-1,6,-10,4,4,3],[-10,-5,9,5,-7,-5,-9,6,4,-7,4,-7,-8],[10,-8,9,-4,-10,-6,1,6,-2,2,-10,9,-3],[5,-7,2,6,-2,10,7,1,7,-7,-7,9,-4],[-6,-8,-5,-1,-5,-4,3,-6,-4,-2,-6,-8,-1],[9,-6,9,-7,-3,2,-7,-6,-8,6,1,6,-8]],[[2,5,-3,-3,9,-1,1,-9,7,-9,-4,2,-2],[-2,6,-3,8,-2,-2,7,9,8,-9,2,-2,9],[-2,9,-3,4,-3,-8,7,-9,8,-2,2,-6,8],[9,1,-7,-8,-8,-9,10,1,10,-9,9,-3,-4],[-3,-9,10,-1,5,-5,6,4,8,-5,4,-9,4],[-2,-8,-3,-9,-2,-2,2,-2,-2,2,6,-2,9],[8,-10,-5,-1,-7,6,9,-4,2,8,-5,-4,10],[5,3,-9,3,3,-10,-4,9,4,7,-8,-4,-3],[-1,-3,9,3,5,10,1,-9,8,-7,-3,-4,9],[-9,10,-1,9,10,-4,-9,-6,9,4,6,1,-8],[6,-5,6,7,6,-5,-2,4,-1,-6,-1,2,-3],[7,6,8,-7,-7,7,-7,4,7,-10,-1,-3,7],[4,-9,-10,10,-10,-9,3,10,-2,10,-10,1,7],[2,-10,6,-8,10,-9,-5,-3,8,10,4,4,7],[3,5,-9,2,5,3,10,3,-8,-2,5,-4,7],[-9,2,-8,-4,-6,1,-2,3,10,-1,-7,-3,9]],[[-9,3,1,-9,-9,-9,-10,-6,1,7,-5,1,2],[-6,-7,3,8,-3,1,3,9,-1,-6,-1,-6,3],[5,-9,4,-4,-2,8,-6,-2,-3,4,-6,-2,-5],[9,1,-3,8,5,-1,2,9,-7,10,-1,2,-6],[2,3,3,9,6,2,5,-5,-8,2,-6,10,6],[-1,-7,-1,7,8,-7,-3,8,8,-3,-2,1,-8],[-4,-5,10,-3,2,-9,9,10,4,-1,-9,8,4],[-2,-7,-2,-9,-3,2,9,1,3,-5,6,-6,-4],[7,-8,-3,6,1,2,4,2,-3,-9,6,4,7],[-1,-8,10,6,-6,10,-10,9,-2,9,-6,2,-7],[-7,2,-1,-9,-7,-4,-6,-1,-10,7,4,10,-5],[6,-4,-8,3,7,2,-3,-4,1,5,6,4,7],[-7,3,-5,-9,-1,-4,-6,8,-6,6,-8,-9,8],[10,-3,2,-4,-9,-2,-2,5,7,4,9,6,1],[10,-7,-7,2,6,1,-9,-10,1,5,-7,-7,-8],[2,-2,8,-3,2,-3,-2,-8,-10,-5,7,-4,2]],[[-5,-4,-7,-8,7,3,-2,2,7,6,-8,2,9],[-7,-2,-4,-10,-3,-5,8,-7,-4,3,-6,-9,-8],[9,10,1,-2,-8,1,5,7,-7,1,-3,4,-10],[-10,3,8,10,-1,-5,4,-1,1,1,5,-2,-1],[-3,3,-5,6,3,-3,2,-1,-9,2,10,-6,-1],[10,-9,-8,-5,-10,6,-10,10,9,9,10,-7,-6],[4,-9,-4,8,-9,10,7,-6,-5,-1,2,-6,-2],[-7,-7,-5,8,7,10,-5,-4,-2,-4,6,-7,-4],[-7,-7,5,7,10,4,-5,-8,-8,5,-2,5,-7],[5,5,10,8,-4,-5,6,4,-3,-2,-7,6,4],[-1,5,-7,-10,10,8,-1,-2,3,2,-7,-8,6],[1,9,1,4,8,6,6,9,-3,-8,7,-4,-1],[-3,-10,-6,2,-6,-5,-9,-2,10,1,3,10,-3],[-5,7,8,4,-9,-10,-6,-6,-9,-2,1,10,-1],[-10,-6,-1,9,-4,-8,-8,-1,-1,-7,7,-3,-6],[3,10,10,-9,4,7,8,4,-2,-4,-1,9,2]],[[-5,-9,3,6,7,5,4,6,5,-1,-1,-1,5],[9,-1,1,8,-6,3,-4,10,8,9,3,9,4],[8,-4,7,-8,4,4,-1,-5,-2,5,-8,-6,-7],[10,-3,-6,10,-6,1,7,5,-1,10,1,3,-6],[8,-8,10,-9,-2,6,4,1,7,-3,7,-9,10],[-1,-5,-3,-8,8,-9,-1,-3,-7,8,-2,-5,-7],[1,-1,7,3,10,7,-7,8,-3,10,-5,-10,-4],[9,-7,4,-6,8,-9,-7,7,1,-2,-1,-5,8],[-8,4,-1,3,-1,8,2,-1,5,3,6,7,2],[-1,-10,8,9,2,-7,8,2,5,1,6,-6,9],[5,-7,3,4,9,1,-6,-8,10,10,3,7,-1],[-10,-3,6,5,5,-3,1,-10,10,5,-10,-5,6],[-6,-9,-5,-2,8,-6,-3,-10,9,10,4,-9,9],[6,8,1,-7,10,1,-2,-2,-3,1,-3,7,-4],[-7,-1,-10,2,3,3,6,-3,5,-8,-8,-2,-6],[-3,-10,3,-10,4,3,10,-1,-5,-6,6,6,6]],[[4,-2,3,-3,-2,10,1,2,2,-10,-6,-2,3],[-4,1,-2,-10,-7,-2,7,7,6,1,-1,-1,-8],[6,-9,-9,10,7,-8,8,1,6,-2,5,-8,-5],[9,-10,2,6,-6,8,-6,-10,3,10,8,4,-8],[9,5,-6,9,-9,3,4,-4,-7,-9,-5,-7,-8],[10,4,-3,3,-6,-10,5,7,9,-9,-8,-3,5],[1,2,6,3,9,4,4,1,6,5,5,-9,-5],[1,3,-6,10,4,-10,-8,5,-1,2,2,9,3],[1,8,-8,6,7,-6,9,-2,8,-8,-2,1,10],[-3,-1,2,-10,-8,9,10,5,2,-7,-5,-6,10],[-1,-1,-6,-9,-1,-1,-1,-9,-4,-8,-8,-4,-7],[-10,1,1,2,-2,-6,-7,4,-10,-8,9,2,2],[-8,-5,-5,-9,6,10,-2,8,5,-9,-5,6,-9],[-5,2,1,4,-6,2,9,7,-7,2,-9,3,8],[8,-5,-10,-10,-8,2,-8,4,8,-7,1,-4,-9],[9,-4,4,-2,-10,9,-3,-2,10,-7,-1,8,-10]],[[4,-3,10,7,-1,-5,-9,-3,5,-7,5,9,4],[7,-10,2,-4,6,-8,-7,5,-2,-6,-3,3,8],[-9,-9,10,4,6,3,2,-1,4,9,-1,4,-8],[-6,8,8,-4,-10,-5,-4,2,-9,9,-9,2,-4],[1,-8,-6,-7,-10,-2,1,9,-8,-7,10,-7,9],[-4,3,2,6,2,-6,-8,5,-3,4,4,-4,-2],[-8,3,-4,8,5,-5,4,6,-6,8,-6,10,4],[-10,5,-3,1,-2,-3,6,4,2,9,-10,2,-8],[1,-8,2,-5,2,-1,4,-9,8,8,9,2,5],[2,-9,8,10,7,4,8,10,8,-5,-4,4,-4],[9,10,-7,-3,-5,-8,-5,-5,-9,-6,2,-6,2],[-9,9,1,1,-1,-6,-9,-3,3,4,-10,3,-5],[-9,4,-10,-2,-10,6,-4,4,-1,-10,9,-6,-5],[7,10,5,-2,5,-5,10,9,7,-3,3,3,10],[-9,5,3,-2,-4,4,-7,10,5,-7,4,-8,-6],[-2,-6,-1,9,1,-7,-4,-1,9,-9,-1,-8,7]],[[-4,-8,-7,1,3,8,-5,-3,-3,3,7,-5,-10],[-1,7,-10,-2,-3,-1,2,-6,7,3,-4,-8,2],[9,-4,-4,-7,2,3,-8,-4,-3,-4,-9,8,10],[8,-9,3,-8,8,9,-4,-5,-6,-5,3,-9,5],[-5,-1,7,2,10,5,-2,1,-8,-4,-1,-7,3],[4,-6,-1,4,-5,1,-6,-3,-8,-3,6,-3,-4],[3,1,-1,7,4,8,9,-8,3,1,4,-2,-10],[8,-1,10,-6,-9,5,-6,-5,6,10,-4,7,-10],[7,-8,10,-2,2,4,-10,7,-2,-4,-9,-3,-2],[3,-2,-10,5,-8,8,8,10,8,-9,-7,7,-8],[-10,5,-7,1,1,10,1,-3,-8,9,-4,-9,-1],[4,6,6,4,-9,-10,-2,-4,-9,2,6,-6,9],[-1,5,-7,-1,2,10,-1,-8,-9,-3,5,-8,5],[-1,8,-1,10,-2,-6,1,-2,-5,-8,-3,-5,10],[8,9,1,-4,-1,7,-2,10,3,7,10,8,5],[7,-6,10,-4,-7,10,-3,8,-2,-10,-8,4,8]],[[-7,6,-8,4,9,-7,-2,9,6,2,-5,-4,-9],[-9,10,-8,6,1,-6,-5,8,9,6,3,-1,6],[9,2,2,8,-9,-1,10,-8,-10,3,-6,-9,2],[4,4,9,10,9,1,6,-6,6,2,6,8,9],[2,6,-9,-7,-2,6,8,-6,5,-10,2,10,-1],[-5,6,2,-3,1,-1,-4,-5,-5,-6,-1,-2,3],[-8,-7,7,-7,-7,10,9,1,-2,-3,3,-9,6],[9,4,3,3,2,-1,5,-9,-9,8,8,-4,6],[-8,8,8,3,9,3,-5,4,-5,-5,5,3,-3],[3,2,7,-6,-4,-2,8,5,3,-8,6,-7,-6],[-5,6,-9,-7,8,-9,-9,-1,-3,10,10,-8,2],[2,4,-2,8,-9,6,-8,-10,-9,3,9,8,-2],[5,-9,-3,-10,10,8,-9,4,4,10,-10,-4,10],[7,-3,8,-8,-8,-7,-9,-10,2,-5,5,-8,-5],[5,-9,5,10,-4,7,-5,-4,5,7,10,7,8],[7,8,-4,5,5,-1,7,5,-1,1,3,9,-1]]], dtype = "uint64")#candidate|320|(9, 16, 13)|const|uint64
bop_321 = relay.logical_xor(const_319.astype('uint64'), relay.reshape(const_320.astype('uint64'), relay.shape_of(const_319))) # shape=(9, 16, 13)
output = relay.Tuple([bop_321,])
output2 = relay.Tuple([bop_321,])
func_324 = relay.Function([], output)
mod['func_324'] = func_324
mod = relay.transform.InferType()(mod)
output = func_324()
func_325 = relay.Function([], output)
mutated_mod['func_325'] = func_325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mod.get_global_var('func_207')
func_208_call = mutated_mod.get_global_var('func_208')
call_331 = relay.TupleGetItem(func_207_call(), 0)
call_332 = relay.TupleGetItem(func_208_call(), 0)
output = call_331
output2 = call_332
func_371 = relay.Function([], output)
mod['func_371'] = func_371
mod = relay.transform.InferType()(mod)
mutated_mod['func_371'] = func_371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mutated_mod.get_global_var('func_371')
call_372 = func_371_call()
output = call_372
func_373 = relay.Function([], output)
mutated_mod['func_373'] = func_373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_390 = func_371_call()
call_391 = func_371_call()
output = relay.Tuple([call_390,])
output2 = relay.Tuple([call_391,])
func_410 = relay.Function([], output)
mod['func_410'] = func_410
mod = relay.transform.InferType()(mod)
mutated_mod['func_410'] = func_410
mutated_mod = relay.transform.InferType()(mutated_mod)
func_410_call = mutated_mod.get_global_var('func_410')
call_411 = func_410_call()
output = call_411
func_412 = relay.Function([], output)
mutated_mod['func_412'] = func_412
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_429 = func_371_call()
call_430 = func_371_call()
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_455 = relay.TupleGetItem(func_410_call(), 0)
call_456 = relay.TupleGetItem(func_412_call(), 0)
output = relay.Tuple([call_429,call_455,])
output2 = relay.Tuple([call_430,call_456,])
func_460 = relay.Function([], output)
mod['func_460'] = func_460
mod = relay.transform.InferType()(mod)
mutated_mod['func_460'] = func_460
mutated_mod = relay.transform.InferType()(mutated_mod)
func_460_call = mutated_mod.get_global_var('func_460')
call_461 = func_460_call()
output = call_461
func_462 = relay.Function([], output)
mutated_mod['func_462'] = func_462
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_480 = func_371_call()
call_481 = func_371_call()
output = relay.Tuple([call_480,])
output2 = relay.Tuple([call_481,])
func_497 = relay.Function([], output)
mod['func_497'] = func_497
mod = relay.transform.InferType()(mod)
mutated_mod['func_497'] = func_497
mutated_mod = relay.transform.InferType()(mutated_mod)
func_497_call = mutated_mod.get_global_var('func_497')
call_498 = func_497_call()
output = call_498
func_499 = relay.Function([], output)
mutated_mod['func_499'] = func_499
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mod.get_global_var('func_207')
func_208_call = mutated_mod.get_global_var('func_208')
call_507 = relay.TupleGetItem(func_207_call(), 1)
call_508 = relay.TupleGetItem(func_208_call(), 1)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_511 = func_371_call()
call_512 = func_371_call()
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_517 = func_371_call()
call_518 = func_371_call()
uop_521 = relay.sinh(call_517.astype('float64')) # shape=(13, 16, 6)
uop_523 = relay.sinh(call_518.astype('float64')) # shape=(13, 16, 6)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_534 = relay.TupleGetItem(func_410_call(), 0)
call_535 = relay.TupleGetItem(func_412_call(), 0)
func_497_call = mod.get_global_var('func_497')
func_499_call = mutated_mod.get_global_var('func_499')
call_543 = relay.TupleGetItem(func_497_call(), 0)
call_544 = relay.TupleGetItem(func_499_call(), 0)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_545 = relay.TupleGetItem(func_161_call(), 0)
call_546 = relay.TupleGetItem(func_163_call(), 0)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_570 = func_371_call()
call_571 = func_371_call()
output = relay.Tuple([call_507,call_511,uop_521,call_534,call_543,call_545,call_570,])
output2 = relay.Tuple([call_508,call_512,uop_523,call_535,call_544,call_546,call_571,])
func_585 = relay.Function([], output)
mod['func_585'] = func_585
mod = relay.transform.InferType()(mod)
output = func_585()
func_586 = relay.Function([], output)
mutated_mod['func_586'] = func_586
mutated_mod = relay.transform.InferType()(mutated_mod)
var_760 = relay.var("var_760", dtype = "float64", shape = (9, 16, 10))#candidate|760|(9, 16, 10)|var|float64
uop_761 = relay.sigmoid(var_760.astype('float64')) # shape=(9, 16, 10)
uop_763 = relay.tan(uop_761.astype('float64')) # shape=(9, 16, 10)
output = uop_763
output2 = uop_763
func_773 = relay.Function([var_760,], output)
mod['func_773'] = func_773
mod = relay.transform.InferType()(mod)
var_774 = relay.var("var_774", dtype = "float64", shape = (9, 16, 10))#candidate|774|(9, 16, 10)|var|float64
output = func_773(var_774)
func_775 = relay.Function([var_774], output)
mutated_mod['func_775'] = func_775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_585_call = mod.get_global_var('func_585')
func_586_call = mutated_mod.get_global_var('func_586')
call_830 = relay.TupleGetItem(func_585_call(), 5)
call_831 = relay.TupleGetItem(func_586_call(), 5)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_838 = relay.TupleGetItem(func_410_call(), 0)
call_839 = relay.TupleGetItem(func_412_call(), 0)
bop_849 = relay.less_equal(call_838.astype('bool'), relay.reshape(call_830.astype('bool'), relay.shape_of(call_838))) # shape=(13, 16, 6)
bop_852 = relay.less_equal(call_839.astype('bool'), relay.reshape(call_831.astype('bool'), relay.shape_of(call_839))) # shape=(13, 16, 6)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_855 = relay.TupleGetItem(func_410_call(), 0)
call_856 = relay.TupleGetItem(func_412_call(), 0)
bop_865 = relay.logical_and(call_830.astype('bool'), relay.reshape(call_838.astype('bool'), relay.shape_of(call_830))) # shape=(13, 16, 6)
bop_868 = relay.logical_and(call_831.astype('bool'), relay.reshape(call_839.astype('bool'), relay.shape_of(call_831))) # shape=(13, 16, 6)
bop_889 = relay.left_shift(call_838.astype('int16'), relay.reshape(call_830.astype('int16'), relay.shape_of(call_838))) # shape=(13, 16, 6)
bop_892 = relay.left_shift(call_839.astype('int16'), relay.reshape(call_831.astype('int16'), relay.shape_of(call_839))) # shape=(13, 16, 6)
output = relay.Tuple([bop_849,call_855,bop_865,bop_889,])
output2 = relay.Tuple([bop_852,call_856,bop_868,bop_892,])
func_894 = relay.Function([], output)
mod['func_894'] = func_894
mod = relay.transform.InferType()(mod)
mutated_mod['func_894'] = func_894
mutated_mod = relay.transform.InferType()(mutated_mod)
func_894_call = mutated_mod.get_global_var('func_894')
call_895 = func_894_call()
output = call_895
func_896 = relay.Function([], output)
mutated_mod['func_896'] = func_896
mutated_mod = relay.transform.InferType()(mutated_mod)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_916 = relay.TupleGetItem(func_410_call(), 0)
call_917 = relay.TupleGetItem(func_412_call(), 0)
output = call_916
output2 = call_917
func_918 = relay.Function([], output)
mod['func_918'] = func_918
mod = relay.transform.InferType()(mod)
mutated_mod['func_918'] = func_918
mutated_mod = relay.transform.InferType()(mutated_mod)
func_918_call = mutated_mod.get_global_var('func_918')
call_919 = func_918_call()
output = call_919
func_920 = relay.Function([], output)
mutated_mod['func_920'] = func_920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_998 = relay.TupleGetItem(func_161_call(), 0)
call_999 = relay.TupleGetItem(func_163_call(), 0)
output = call_998
output2 = call_999
func_1006 = relay.Function([], output)
mod['func_1006'] = func_1006
mod = relay.transform.InferType()(mod)
output = func_1006()
func_1007 = relay.Function([], output)
mutated_mod['func_1007'] = func_1007
mutated_mod = relay.transform.InferType()(mutated_mod)
func_918_call = mod.get_global_var('func_918')
func_920_call = mutated_mod.get_global_var('func_920')
call_1060 = func_918_call()
call_1061 = func_918_call()
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_1065 = relay.TupleGetItem(func_410_call(), 0)
call_1066 = relay.TupleGetItem(func_412_call(), 0)
uop_1067 = relay.tan(call_1060.astype('float64')) # shape=(13, 16, 6)
uop_1069 = relay.tan(call_1061.astype('float64')) # shape=(13, 16, 6)
output = relay.Tuple([call_1065,uop_1067,])
output2 = relay.Tuple([call_1066,uop_1069,])
func_1089 = relay.Function([], output)
mod['func_1089'] = func_1089
mod = relay.transform.InferType()(mod)
mutated_mod['func_1089'] = func_1089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1089_call = mutated_mod.get_global_var('func_1089')
call_1090 = func_1089_call()
output = call_1090
func_1091 = relay.Function([], output)
mutated_mod['func_1091'] = func_1091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_1101 = relay.TupleGetItem(func_410_call(), 0)
call_1102 = relay.TupleGetItem(func_412_call(), 0)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_1103 = relay.TupleGetItem(func_1089_call(), 0)
call_1104 = relay.TupleGetItem(func_1091_call(), 0)
output = relay.Tuple([call_1101,call_1103,])
output2 = relay.Tuple([call_1102,call_1104,])
func_1110 = relay.Function([], output)
mod['func_1110'] = func_1110
mod = relay.transform.InferType()(mod)
mutated_mod['func_1110'] = func_1110
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1110_call = mutated_mod.get_global_var('func_1110')
call_1111 = func_1110_call()
output = call_1111
func_1112 = relay.Function([], output)
mutated_mod['func_1112'] = func_1112
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1128 = relay.const([[[8.758690,-2.353944],[-3.398694,-7.647481],[0.868904,-4.808405],[-6.516619,4.954807],[-6.484733,8.025931],[-2.338033,-0.939892],[-0.681047,4.951634]],[[2.535372,5.505923],[6.663967,1.675743],[6.746735,-6.823708],[-4.193739,1.363186],[-8.200575,-2.764974],[-9.389723,-2.958686],[-7.368142,2.338305]],[[-7.264516,3.158550],[2.756638,-4.514450],[-1.283702,-8.670504],[6.586344,-4.642482],[5.075518,-1.003056],[-3.409484,-9.400502],[7.808209,6.159851]],[[-2.431068,-6.549334],[2.339069,-5.625146],[2.735696,6.977359],[-6.397778,1.143284],[3.028288,9.661568],[4.781201,-1.713614],[-2.993347,8.641100]],[[7.768658,1.285186],[5.827630,-9.681904],[1.351354,1.986425],[1.110583,-7.513382],[6.353779,8.788671],[2.287360,6.175009],[3.209856,3.906463]],[[7.900909,0.431473],[3.524104,-0.766763],[-8.232860,-1.632245],[3.444119,-5.173864],[-9.410731,-7.313551],[-3.316175,-1.028385],[-7.074644,4.773898]],[[-5.266697,8.961197],[2.161841,-7.759665],[-6.374976,5.139788],[-8.186543,-2.008473],[4.014150,-6.668440],[-6.694827,6.604792],[8.508158,-1.808997]],[[-8.741155,2.361175],[-2.226827,-0.260174],[9.979118,7.292590],[4.280658,-7.417429],[-5.849209,9.607633],[-2.599561,2.124538],[-0.465118,4.790261]],[[7.640226,7.427210],[2.367398,-4.495719],[7.544384,4.390100],[8.333594,-0.735958],[6.328667,-6.304906],[-3.710066,-4.646514],[-0.406227,9.448337]],[[-4.515048,-6.124459],[-1.076559,1.236092],[-3.485593,-9.333984],[-2.540192,-2.751638],[-5.859737,-5.221385],[8.844101,9.801384],[-3.509174,-4.374766]],[[0.515322,8.630343],[7.764938,4.306839],[1.087259,5.234761],[-0.964521,-8.258143],[-8.620077,7.964469],[5.119813,-6.527171],[-3.596736,-2.128108]]], dtype = "float32")#candidate|1128|(11, 7, 2)|const|float32
uop_1129 = relay.acos(const_1128.astype('float32')) # shape=(11, 7, 2)
func_585_call = mod.get_global_var('func_585')
func_586_call = mutated_mod.get_global_var('func_586')
call_1133 = relay.TupleGetItem(func_585_call(), 0)
call_1134 = relay.TupleGetItem(func_586_call(), 0)
var_1141 = relay.var("var_1141", dtype = "float32", shape = (11, 7, 2))#candidate|1141|(11, 7, 2)|var|float32
bop_1142 = relay.add(uop_1129.astype('uint64'), relay.reshape(var_1141.astype('uint64'), relay.shape_of(uop_1129))) # shape=(11, 7, 2)
var_1152 = relay.var("var_1152", dtype = "uint64", shape = (11, 7, 2))#candidate|1152|(11, 7, 2)|var|uint64
bop_1153 = relay.equal(bop_1142.astype('bool'), relay.reshape(var_1152.astype('bool'), relay.shape_of(bop_1142))) # shape=(11, 7, 2)
output = relay.Tuple([call_1133,bop_1153,])
output2 = relay.Tuple([call_1134,bop_1153,])
func_1156 = relay.Function([var_1141,var_1152,], output)
mod['func_1156'] = func_1156
mod = relay.transform.InferType()(mod)
mutated_mod['func_1156'] = func_1156
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1156_call = mutated_mod.get_global_var('func_1156')
var_1158 = relay.var("var_1158", dtype = "float32", shape = (11, 7, 2))#candidate|1158|(11, 7, 2)|var|float32
var_1159 = relay.var("var_1159", dtype = "uint64", shape = (11, 7, 2))#candidate|1159|(11, 7, 2)|var|uint64
call_1157 = func_1156_call(var_1158,var_1159,)
output = call_1157
func_1160 = relay.Function([var_1158,var_1159,], output)
mutated_mod['func_1160'] = func_1160
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1007_call = mutated_mod.get_global_var('func_1007')
call_1186 = func_1006_call()
call_1187 = func_1006_call()
output = relay.Tuple([call_1186,])
output2 = relay.Tuple([call_1187,])
func_1192 = relay.Function([], output)
mod['func_1192'] = func_1192
mod = relay.transform.InferType()(mod)
mutated_mod['func_1192'] = func_1192
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1192_call = mutated_mod.get_global_var('func_1192')
call_1193 = func_1192_call()
output = call_1193
func_1194 = relay.Function([], output)
mutated_mod['func_1194'] = func_1194
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_1209 = relay.TupleGetItem(func_1089_call(), 1)
call_1210 = relay.TupleGetItem(func_1091_call(), 1)
var_1214 = relay.var("var_1214", dtype = "float64", shape = (13, 16, 6))#candidate|1214|(13, 16, 6)|var|float64
bop_1215 = relay.floor_divide(call_1209.astype('float64'), relay.reshape(var_1214.astype('float64'), relay.shape_of(call_1209))) # shape=(13, 16, 6)
bop_1218 = relay.floor_divide(call_1210.astype('float64'), relay.reshape(var_1214.astype('float64'), relay.shape_of(call_1210))) # shape=(13, 16, 6)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_1224 = func_371_call()
call_1225 = func_371_call()
output = relay.Tuple([bop_1215,call_1224,])
output2 = relay.Tuple([bop_1218,call_1225,])
func_1229 = relay.Function([var_1214,], output)
mod['func_1229'] = func_1229
mod = relay.transform.InferType()(mod)
var_1230 = relay.var("var_1230", dtype = "float64", shape = (13, 16, 6))#candidate|1230|(13, 16, 6)|var|float64
output = func_1229(var_1230)
func_1231 = relay.Function([var_1230], output)
mutated_mod['func_1231'] = func_1231
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1258 = relay.var("var_1258", dtype = "float32", shape = (8, 12, 7))#candidate|1258|(8, 12, 7)|var|float32
var_1259 = relay.var("var_1259", dtype = "float32", shape = (8, 12, 7))#candidate|1259|(8, 12, 7)|var|float32
bop_1260 = relay.equal(var_1258.astype('bool'), relay.reshape(var_1259.astype('bool'), relay.shape_of(var_1258))) # shape=(8, 12, 7)
bop_1275 = relay.bitwise_or(bop_1260.astype('int64'), relay.reshape(var_1258.astype('int64'), relay.shape_of(bop_1260))) # shape=(8, 12, 7)
output = bop_1275
output2 = bop_1275
func_1286 = relay.Function([var_1258,var_1259,], output)
mod['func_1286'] = func_1286
mod = relay.transform.InferType()(mod)
var_1287 = relay.var("var_1287", dtype = "float32", shape = (8, 12, 7))#candidate|1287|(8, 12, 7)|var|float32
var_1288 = relay.var("var_1288", dtype = "float32", shape = (8, 12, 7))#candidate|1288|(8, 12, 7)|var|float32
output = func_1286(var_1287,var_1288,)
func_1289 = relay.Function([var_1287,var_1288,], output)
mutated_mod['func_1289'] = func_1289
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1332 = relay.const([[[3.364640,1.838537,4.716394,2.815776,-0.827302,-2.808210,7.129800,7.719050,-5.476053,5.984419,7.732671,-4.932613,-7.180447,3.707815,-4.035776,-8.982319],[-1.603823,7.583404,8.152041,3.451389,3.655897,5.216136,6.065376,0.050011,9.641833,6.664791,-4.984251,3.821152,9.556589,5.052057,1.616052,6.284313],[0.987691,-0.136230,-9.200817,-9.143995,9.826884,-3.113013,-7.400915,-8.490615,-9.673130,9.859734,8.947917,-4.839716,6.037567,-4.113279,5.696283,-4.807635],[-6.906523,2.294226,-9.556644,7.794076,-6.407544,-1.094829,1.992245,-1.373260,-9.258278,-2.708989,-8.852348,3.115432,-1.754755,-4.119433,8.658246,-2.121488],[2.308479,-9.132771,5.144794,0.663606,4.730716,-7.875155,-2.912129,7.832043,-4.832846,-8.528896,-5.517314,4.750722,5.767472,-6.763407,-5.928378,6.110688],[1.013704,-1.437080,9.866057,-7.816925,8.311393,1.837987,0.427864,2.011767,-3.788974,-2.460795,6.119668,4.411509,5.178084,5.780553,-2.171830,-4.759168],[8.302209,-1.561721,-4.959467,6.375797,0.568226,-8.910659,5.038255,8.343476,9.460366,-1.154585,9.113568,-8.286863,-5.687710,-4.951740,-9.418157,-0.200712]],[[7.636650,-8.595114,7.689784,-7.913748,-1.360109,3.548906,-6.424062,5.751681,-1.370155,-0.092099,1.670545,-3.033000,-3.301831,-1.707397,6.705802,-8.740759],[2.243682,6.635793,8.522900,7.340046,-1.467031,4.366619,7.353587,-0.687101,7.891744,4.304844,1.233672,-7.658211,8.106413,-4.671152,6.207957,4.084043],[4.970187,7.774466,-2.287361,-4.636432,0.339254,6.645407,-5.594924,-9.430800,-5.959939,-1.133566,0.271941,-8.386962,0.026070,-8.412655,3.325641,5.244222],[-3.649671,5.476640,-1.922759,3.999967,-6.077445,-9.694674,-0.251492,-2.127284,5.584524,3.450459,4.256919,7.353836,-2.609442,8.140108,9.815768,1.867184],[4.845702,5.217708,-8.646235,9.708672,2.255269,-3.051269,-5.675027,9.979386,2.143052,-9.022881,-0.333997,-5.015522,5.606391,-6.049209,-5.523283,-2.042032],[4.089811,1.272887,-3.629513,-1.889332,5.886372,-8.226621,3.219427,8.065625,-8.672901,0.677342,4.062208,8.823828,2.176971,9.094879,8.998060,0.610059],[5.288978,4.923845,5.349657,-4.191364,-0.697351,-9.497723,-8.414132,-9.055514,2.566234,7.076267,6.532014,-9.726279,-7.443846,7.471467,7.633049,-6.291304]],[[4.230407,5.101784,0.351230,7.345515,-2.095733,3.653442,5.242755,2.592380,7.221018,7.693876,9.416746,8.505857,-4.266041,-7.476979,0.424677,-1.736926],[-2.054167,9.073064,3.346871,5.607830,-5.001754,-5.570565,-4.376083,2.948009,-7.880235,0.001932,-8.040718,-4.670074,9.822744,-8.489463,7.290105,2.165545],[-3.220014,-1.341332,-0.235525,2.929215,-8.695020,-8.786998,0.788294,2.606050,2.189483,-5.934391,7.690576,-1.566623,1.894418,-8.752149,0.930250,-2.259038],[-2.594014,-6.213041,-7.376823,-0.813253,5.327487,3.356616,-1.138333,0.511052,2.952091,7.922022,-6.624674,9.482305,-5.029797,-9.030571,-7.685283,-9.413949],[6.866942,5.090205,-0.239417,7.736200,-2.940358,1.750409,5.416696,-4.341300,-4.657549,7.683519,9.852551,-8.520189,-1.766069,-2.119606,4.620472,-4.898185],[5.034986,-4.880531,9.965619,6.921691,-2.187290,-4.315757,4.264514,9.129046,-7.817033,-0.730775,3.630753,2.984085,-1.974782,-3.766229,-2.587930,-3.546338],[-9.495497,-8.105320,-0.216230,-0.424720,-1.390193,-0.755970,7.961570,1.037588,7.789559,-5.580591,-9.148595,-3.343102,0.195698,-5.638951,7.838103,4.311187]],[[7.888815,3.264007,6.317989,-8.785122,-5.842447,-9.893485,-5.327876,8.566168,6.851489,2.533062,-4.852928,-9.344933,-0.369613,8.789288,-3.304774,-8.378369],[-4.987765,8.374058,7.458346,1.490762,6.622042,5.568319,4.657822,7.669451,-3.162484,-5.550924,-8.872611,-2.238442,0.288482,4.106316,-2.628609,5.225890],[7.995911,7.038190,3.135401,6.036126,-6.375625,-6.526227,0.155166,-0.853559,-2.114512,-0.865921,-4.997758,-0.776619,0.815873,5.135228,8.911429,-9.534428],[3.732071,8.087848,9.091957,4.072930,0.901087,9.873606,7.611254,0.887648,5.833501,7.673889,-5.134893,8.400203,0.210735,-0.308329,-7.825515,4.372008],[-3.028171,-4.611844,2.739624,5.300990,8.376951,-4.817091,-5.236390,1.304928,1.204784,4.965848,-8.679005,9.344450,1.274980,-6.442997,6.024961,-1.075901],[-8.496893,8.278201,-9.426223,-3.284362,5.156064,3.683659,-8.310428,2.879392,6.204630,-6.154980,-9.074485,0.204390,8.936501,0.662343,5.235751,-1.383085],[-4.659664,-6.816752,-4.257864,-0.392334,6.638047,0.643101,-5.505013,8.941650,-4.448714,9.446232,-2.185666,-4.251887,-8.458792,-2.611590,4.225128,6.408889]],[[-8.455463,1.629517,1.536638,-6.399796,7.781928,-2.001012,0.475313,3.903702,6.586932,-4.239724,1.751147,8.454317,-8.059269,4.942116,-9.569614,3.789504],[-7.355443,6.309794,-9.014580,-0.472186,-9.447458,-6.493641,7.909456,5.725781,-7.049154,-9.030504,-6.417104,-7.790039,2.752873,8.852263,-5.270075,-2.055371],[1.174664,-3.828420,4.895614,7.239971,-1.721651,8.978628,1.218112,-8.481789,-9.572569,6.435071,7.385046,6.328271,9.348747,-1.466171,9.537531,9.359873],[5.588644,1.321815,-7.876952,-6.735549,-1.712499,-3.278098,-4.509599,6.487428,0.484035,9.096050,-5.240225,9.407792,9.311909,-0.065903,-3.862377,2.283209],[1.259440,4.683702,9.709021,-4.028072,8.868111,6.506861,-1.065417,7.266660,4.970193,-1.671011,2.832358,-1.277137,6.185474,-8.475744,-2.091433,3.623282],[-4.692236,6.247619,-0.959347,3.606304,1.224212,6.875483,3.688594,9.581299,-1.446443,7.794230,-9.556794,-7.871318,-6.882478,4.135468,3.905557,-3.578739],[5.124155,7.115840,-6.388566,-8.586627,-2.486330,6.221285,-6.596661,-3.369557,-6.922259,-1.389587,1.196356,-8.521763,2.428067,-0.566063,6.580750,-4.088761]],[[7.632079,-5.195246,-8.506984,7.773275,2.969399,7.615742,5.596368,-5.350295,8.146906,-8.767738,5.120493,-0.991350,6.497517,5.275965,0.817971,5.187319],[-4.393663,-0.012779,-8.351318,0.880849,-5.937764,2.340381,-1.716759,7.083843,7.673048,4.587877,5.815932,4.023124,-3.424099,9.484279,0.746792,-6.833816],[-9.082865,-9.824912,-5.910745,-1.005506,-3.380153,2.623376,1.945625,-2.006856,-9.740624,-4.063275,7.161560,-8.613301,-5.029646,-6.730467,8.636386,9.639388],[8.537742,-8.399390,4.382704,5.754969,3.837364,8.749196,0.980025,2.819775,1.197888,8.176267,1.469108,-2.191692,2.358951,2.203261,-5.970394,2.425749],[8.408975,4.251382,-6.831520,-9.668341,2.874214,2.995709,-0.762014,4.401063,-7.666518,-7.034363,-7.746543,3.730963,6.625187,-6.034858,-2.988190,-8.468329],[-9.645511,-6.481349,-4.854006,-1.773651,-8.521540,-6.514747,-0.031635,-9.118337,3.780009,-9.203179,-0.083163,2.062497,7.132743,2.605451,2.648447,7.049232],[8.503243,9.934836,-9.416681,-7.850758,6.664645,1.640233,-9.712610,-2.144912,9.266535,0.968195,-6.260941,8.927255,9.884945,4.404270,-8.027003,-4.696668]],[[4.368748,7.589244,1.582160,-7.333341,6.620119,-8.280355,-9.232866,7.626969,4.659997,7.178311,0.673752,7.296399,4.098131,-3.666529,5.261516,5.960723],[-0.803585,2.568304,-9.890857,-3.833782,9.437410,9.875391,5.183838,3.234083,-4.893516,-2.158516,-8.780063,-2.106907,4.023778,2.818689,2.707157,0.548477],[-7.907398,9.019387,-8.176420,-6.508006,-9.889554,0.977056,-5.777900,-5.910302,6.389047,-9.323748,0.916580,5.319648,7.075565,6.404559,-3.765225,-1.760606],[2.449182,0.848739,9.342013,-9.572540,-3.705293,1.442914,-9.391877,3.033088,4.767304,1.349062,-4.778572,7.078694,-7.501447,-3.487186,1.453000,2.881585],[-9.996388,-3.511251,-4.390886,2.684947,5.848595,8.376766,-1.076377,3.019225,-7.133942,-8.786821,-3.277441,1.171758,1.892858,4.466658,-9.351777,0.635180],[9.420852,2.933469,-2.638122,-5.434311,0.065362,-6.552143,-0.517949,4.293339,-2.341087,2.761642,7.138589,6.685763,-2.613445,8.304130,4.196462,7.125899],[8.097696,-7.498739,3.755836,6.797214,-5.337427,0.694991,7.529840,-6.603188,-8.951010,-2.027410,-8.619159,-7.766115,-6.156347,6.565637,4.691941,8.232381]],[[9.094133,-6.146821,-5.362685,-2.650260,0.319692,-4.999023,-7.818229,1.958903,-3.430749,8.477241,9.945412,-3.453378,7.352607,-4.739701,-1.652100,6.494551],[8.095695,9.369880,9.448442,2.125888,4.971201,-9.601382,-6.697758,-0.292779,0.842645,2.584371,-5.280737,2.920003,2.017544,-2.298934,8.864718,-5.766641],[3.906352,-6.821635,9.891220,-9.218408,6.069282,-5.207886,-9.495573,3.067267,-2.176985,-2.720685,-9.478336,5.729663,7.497858,3.474627,0.231338,-6.046866],[3.927071,-1.218541,-0.191668,0.122902,9.122374,8.366272,3.669427,6.248622,8.086157,-1.093782,9.466201,6.387073,2.228095,0.717122,-9.186041,1.172699],[1.244807,-3.078756,-4.622674,7.627386,-8.864135,8.789677,3.825296,5.359132,8.975134,-3.405101,7.396980,5.190064,7.790901,-1.438045,-2.091857,0.222190],[6.668128,4.280599,-0.872884,2.954684,4.184407,-8.725201,8.858923,0.406772,5.212044,-4.478414,-5.765469,9.313812,-6.357170,3.203548,2.062228,-6.745610],[4.854188,1.831226,2.736111,-9.923868,4.035842,8.442259,-6.382241,0.294557,3.549520,3.574346,-5.366671,6.287478,-3.893771,3.539288,5.790562,-6.112669]],[[-8.959293,-5.116060,-7.229221,-6.070660,5.757567,-7.003588,0.274433,8.753762,5.550807,-2.811867,9.644086,5.049739,-6.751692,-6.540806,-8.449881,-9.342223],[-5.936869,-0.371938,1.328705,-3.000375,4.131251,4.393448,3.459764,5.047453,8.550734,-0.106756,6.511916,-6.497267,-2.576501,2.139658,7.836528,8.051766],[4.577895,-5.476653,6.320341,7.267602,0.280258,4.453829,-1.112161,-6.241388,-4.044330,-6.300912,-7.542471,2.114000,0.940390,6.748739,7.120382,-5.630903],[2.576056,6.591940,-6.531424,0.026771,8.817275,-5.123538,8.004855,8.254928,8.318558,1.925948,-5.061851,-2.465586,3.059029,-3.259437,6.886382,3.062038],[2.702820,6.336937,-6.396143,-2.213891,0.036443,1.637364,4.350732,-8.267169,-3.593292,-2.432833,-6.412335,9.065902,-5.293555,-4.973020,-4.661071,-4.370613],[4.491962,5.891467,-6.337789,1.637770,-3.487582,-3.237416,-3.848429,-4.277113,-1.263551,3.712875,-8.532264,8.281025,6.768468,-3.258208,7.110412,7.183697],[-5.446015,-1.721120,-2.474696,-3.962586,-2.145591,-5.075023,3.103362,-1.199131,9.681141,-1.991874,-7.534967,9.388473,-2.831845,7.462496,-8.263690,-1.939174]],[[-9.781023,-1.130071,-4.200293,9.037663,7.561623,4.282035,1.288511,3.809183,-0.471155,-3.372181,4.863990,-7.556346,7.340471,6.077799,-9.777345,-3.856210],[4.670001,-1.472597,2.490852,-8.980366,2.059123,0.093855,8.270552,-4.579663,-1.188253,-9.460452,-7.619278,5.831385,3.791711,3.241005,-9.547889,-5.893942],[-1.918671,-0.136011,-5.569331,9.081196,-8.030426,-5.820931,2.926722,0.283194,7.962069,6.549705,-5.960619,2.054791,9.895447,-5.622411,-9.046683,8.556073],[9.829854,-9.850605,3.026785,9.905195,-4.847811,1.063768,-3.663998,-5.404197,2.113409,2.964259,-5.628661,1.890858,-8.270961,-5.861727,-1.670722,6.848935],[7.708865,8.183917,5.404558,-8.765775,4.309017,7.928237,7.028465,6.111919,2.763930,-4.236376,-9.807181,-0.927536,2.387792,1.314142,-6.241008,3.767772],[1.072202,-6.108116,-6.003584,-2.703088,1.587716,3.910785,7.352790,3.258846,-7.334916,5.880981,5.750741,9.413603,-6.370672,-6.639470,8.400423,-8.001357],[-7.078500,-0.129446,6.824789,-0.709234,-3.390041,8.743867,8.346948,6.044184,4.998309,-9.103699,-1.413372,8.644028,-2.621411,5.620199,-8.828621,-5.155333]],[[1.571366,3.750094,-1.237383,0.874883,2.428085,-8.141565,2.507715,-1.914268,-9.341839,7.189283,-6.757503,6.825998,-7.704671,5.239519,-4.403840,7.779827],[-5.082927,1.186703,1.240687,5.380337,1.162591,5.580811,1.598909,0.643432,-4.227269,-2.412013,-2.827293,9.044529,1.404069,2.362475,3.157773,0.106666],[8.066863,-2.236086,5.739635,3.507281,3.105107,7.063782,0.702299,1.801203,7.096515,-1.544597,1.680728,-5.021621,-4.600508,2.116621,-1.571408,8.698077],[6.253230,-6.152990,-3.737044,8.580964,-2.482515,-7.980026,-8.894273,6.095909,-4.617498,7.710661,-7.844038,-8.972911,1.457276,-1.191854,-9.143585,3.285887],[2.225380,-5.966435,5.402983,1.839326,-7.705750,8.819025,8.063821,-5.234739,0.787976,-1.700186,4.980072,-4.100313,-5.700523,-8.088500,4.664627,-4.598950],[-1.927503,-7.175971,-1.018471,1.203868,2.255018,7.487429,-5.019431,-9.915365,9.216275,2.938870,1.543808,8.223237,-3.019002,-6.823970,0.101059,-5.833918],[1.976568,-0.141258,-7.257726,-1.732226,-1.779067,8.776074,0.354553,-7.207480,-3.307182,4.031448,-9.239296,2.832323,7.543627,-4.568096,-7.506657,-5.166715]]], dtype = "float64")#candidate|1332|(11, 7, 16)|const|float64
uop_1333 = relay.sqrt(const_1332.astype('float64')) # shape=(11, 7, 16)
output = uop_1333
output2 = uop_1333
func_1340 = relay.Function([], output)
mod['func_1340'] = func_1340
mod = relay.transform.InferType()(mod)
mutated_mod['func_1340'] = func_1340
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1340_call = mutated_mod.get_global_var('func_1340')
call_1341 = func_1340_call()
output = call_1341
func_1342 = relay.Function([], output)
mutated_mod['func_1342'] = func_1342
mutated_mod = relay.transform.InferType()(mutated_mod)
func_324_call = mod.get_global_var('func_324')
func_325_call = mutated_mod.get_global_var('func_325')
call_1352 = relay.TupleGetItem(func_324_call(), 0)
call_1353 = relay.TupleGetItem(func_325_call(), 0)
output = call_1352
output2 = call_1353
func_1358 = relay.Function([], output)
mod['func_1358'] = func_1358
mod = relay.transform.InferType()(mod)
mutated_mod['func_1358'] = func_1358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1358_call = mutated_mod.get_global_var('func_1358')
call_1359 = func_1358_call()
output = call_1359
func_1360 = relay.Function([], output)
mutated_mod['func_1360'] = func_1360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_1376 = relay.TupleGetItem(func_894_call(), 0)
call_1377 = relay.TupleGetItem(func_896_call(), 0)
var_1409 = relay.var("var_1409", dtype = "bool", shape = (13, 16, 6))#candidate|1409|(13, 16, 6)|var|bool
bop_1410 = relay.greater(call_1376.astype('bool'), relay.reshape(var_1409.astype('bool'), relay.shape_of(call_1376))) # shape=(13, 16, 6)
bop_1413 = relay.greater(call_1377.astype('bool'), relay.reshape(var_1409.astype('bool'), relay.shape_of(call_1377))) # shape=(13, 16, 6)
output = relay.Tuple([bop_1410,])
output2 = relay.Tuple([bop_1413,])
func_1420 = relay.Function([var_1409,], output)
mod['func_1420'] = func_1420
mod = relay.transform.InferType()(mod)
var_1421 = relay.var("var_1421", dtype = "bool", shape = (13, 16, 6))#candidate|1421|(13, 16, 6)|var|bool
output = func_1420(var_1421)
func_1422 = relay.Function([var_1421], output)
mutated_mod['func_1422'] = func_1422
mutated_mod = relay.transform.InferType()(mutated_mod)
func_918_call = mod.get_global_var('func_918')
func_920_call = mutated_mod.get_global_var('func_920')
call_1473 = func_918_call()
call_1474 = func_918_call()
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_1478 = func_371_call()
call_1479 = func_371_call()
output = relay.Tuple([call_1473,call_1478,])
output2 = relay.Tuple([call_1474,call_1479,])
func_1484 = relay.Function([], output)
mod['func_1484'] = func_1484
mod = relay.transform.InferType()(mod)
output = func_1484()
func_1485 = relay.Function([], output)
mutated_mod['func_1485'] = func_1485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1340_call = mod.get_global_var('func_1340')
func_1342_call = mutated_mod.get_global_var('func_1342')
call_1501 = func_1340_call()
call_1502 = func_1340_call()
output = call_1501
output2 = call_1502
func_1544 = relay.Function([], output)
mod['func_1544'] = func_1544
mod = relay.transform.InferType()(mod)
output = func_1544()
func_1545 = relay.Function([], output)
mutated_mod['func_1545'] = func_1545
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_1562 = func_371_call()
call_1563 = func_371_call()
output = call_1562
output2 = call_1563
func_1564 = relay.Function([], output)
mod['func_1564'] = func_1564
mod = relay.transform.InferType()(mod)
output = func_1564()
func_1565 = relay.Function([], output)
mutated_mod['func_1565'] = func_1565
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1582 = relay.var("var_1582", dtype = "float64", shape = (1, 15, 1))#candidate|1582|(1, 15, 1)|var|float64
var_1583 = relay.var("var_1583", dtype = "float64", shape = (5, 15, 10))#candidate|1583|(5, 15, 10)|var|float64
bop_1584 = relay.floor_mod(var_1582.astype('float64'), var_1583.astype('float64')) # shape=(5, 15, 10)
bop_1597 = relay.divide(var_1583.astype('float64'), var_1582.astype('float64')) # shape=(5, 15, 10)
output = relay.Tuple([bop_1584,bop_1597,])
output2 = relay.Tuple([bop_1584,bop_1597,])
func_1603 = relay.Function([var_1582,var_1583,], output)
mod['func_1603'] = func_1603
mod = relay.transform.InferType()(mod)
mutated_mod['func_1603'] = func_1603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1603_call = mutated_mod.get_global_var('func_1603')
var_1605 = relay.var("var_1605", dtype = "float64", shape = (1, 15, 1))#candidate|1605|(1, 15, 1)|var|float64
var_1606 = relay.var("var_1606", dtype = "float64", shape = (5, 15, 10))#candidate|1606|(5, 15, 10)|var|float64
call_1604 = func_1603_call(var_1605,var_1606,)
output = call_1604
func_1607 = relay.Function([var_1605,var_1606,], output)
mutated_mod['func_1607'] = func_1607
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
call_1630 = func_1358_call()
call_1631 = func_1358_call()
output = call_1630
output2 = call_1631
func_1642 = relay.Function([], output)
mod['func_1642'] = func_1642
mod = relay.transform.InferType()(mod)
mutated_mod['func_1642'] = func_1642
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1642_call = mutated_mod.get_global_var('func_1642')
call_1643 = func_1642_call()
output = call_1643
func_1644 = relay.Function([], output)
mutated_mod['func_1644'] = func_1644
mutated_mod = relay.transform.InferType()(mutated_mod)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_1650 = relay.TupleGetItem(func_410_call(), 0)
call_1651 = relay.TupleGetItem(func_412_call(), 0)
uop_1663 = relay.cos(call_1650.astype('float64')) # shape=(13, 16, 6)
uop_1665 = relay.cos(call_1651.astype('float64')) # shape=(13, 16, 6)
func_1340_call = mod.get_global_var('func_1340')
func_1342_call = mutated_mod.get_global_var('func_1342')
call_1671 = func_1340_call()
call_1672 = func_1340_call()
output = relay.Tuple([uop_1663,call_1671,])
output2 = relay.Tuple([uop_1665,call_1672,])
func_1677 = relay.Function([], output)
mod['func_1677'] = func_1677
mod = relay.transform.InferType()(mod)
output = func_1677()
func_1678 = relay.Function([], output)
mutated_mod['func_1678'] = func_1678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
call_1689 = func_1358_call()
call_1690 = func_1358_call()
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_1698 = relay.TupleGetItem(func_1677_call(), 1)
call_1699 = relay.TupleGetItem(func_1678_call(), 1)
func_460_call = mod.get_global_var('func_460')
func_462_call = mutated_mod.get_global_var('func_462')
call_1701 = relay.TupleGetItem(func_460_call(), 1)
call_1702 = relay.TupleGetItem(func_462_call(), 1)
uop_1708 = relay.atan(call_1698.astype('float32')) # shape=(11, 7, 16)
uop_1710 = relay.atan(call_1699.astype('float32')) # shape=(11, 7, 16)
output = relay.Tuple([call_1689,call_1701,uop_1708,])
output2 = relay.Tuple([call_1690,call_1702,uop_1710,])
func_1711 = relay.Function([], output)
mod['func_1711'] = func_1711
mod = relay.transform.InferType()(mod)
mutated_mod['func_1711'] = func_1711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1711_call = mutated_mod.get_global_var('func_1711')
call_1712 = func_1711_call()
output = call_1712
func_1713 = relay.Function([], output)
mutated_mod['func_1713'] = func_1713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_918_call = mod.get_global_var('func_918')
func_920_call = mutated_mod.get_global_var('func_920')
call_1802 = func_918_call()
call_1803 = func_918_call()
func_1156_call = mod.get_global_var('func_1156')
func_1160_call = mutated_mod.get_global_var('func_1160')
const_1812 = relay.const([3.544542,-1.688909,6.912653,8.373832,-0.833958,-2.392122,4.619075,-5.139139,-5.938593,-2.567037,3.241602,-1.882141,-0.888167,1.397920,-0.235037,-2.295575,-4.156338,7.174115,2.609894,-7.344357,-1.690531,-4.303422,-0.210145,-3.878817,0.509206,4.159896,0.596707,-6.206792,6.642035,-7.713595,1.854179,1.248973,1.912241,3.285790,0.376848,-8.631876,5.906601,-8.340704,8.223819,-0.649712,8.878887,4.674927,-5.537246,-9.914800,0.251228,0.807539,1.979659,6.086160,7.678063,-2.400107,-6.816580,0.434849,9.952183,5.653577,-9.472456,-9.537704,-6.395719,-9.632929,7.314943,-8.478281,7.812211,-0.861467,-9.478761,9.250086,-8.100110,-6.456975,-0.643819,-4.698790,3.504464,-9.232214,-0.174839,0.075407,-4.773842,4.249477,-3.264783,4.699031,6.622746,5.593849,6.634165,6.984957,-3.476801,-5.505086,1.237334,-6.203587,-0.897492,-5.045640,9.362295,2.510719,-0.564049,-3.608162,-2.131796,-5.325388,8.194064,5.008169,3.772311,-1.025686,8.856842,-5.976911,-2.537725,0.498272,-3.124919,2.631603,-5.037602,1.646957,4.247629,5.775179,0.481152,4.621043,3.325396,2.364323,3.777103,-3.187635,-7.165763,-8.444174,-4.677312,-9.099185,0.907334,-0.246618,-3.461258,-5.394136,5.372124,-4.179744,-4.597808,4.501965,-8.269890,-3.425428,4.582844,-2.712954,1.111239,-2.005385,5.145120,-7.690471,-3.855788,-1.280374,5.941767,-6.689966,-6.550664,2.946678,-7.268292,2.127361,-5.925779,-7.778032,-0.150136,0.458237,6.766148,7.541031,-4.799781,-9.522043,0.185325,-9.755389,9.963501,6.987188,2.339886,-4.010775], dtype = "float32")#candidate|1812|(154,)|const|float32
call_1811 = relay.TupleGetItem(func_1156_call(relay.reshape(const_1812.astype('float32'), [11, 7, 2]), relay.reshape(const_1812.astype('uint64'), [11, 7, 2]), ), 1)
call_1813 = relay.TupleGetItem(func_1160_call(relay.reshape(const_1812.astype('float32'), [11, 7, 2]), relay.reshape(const_1812.astype('uint64'), [11, 7, 2]), ), 1)
const_1818 = relay.const([[[-4,9,-10,7,8,6],[1,-6,9,-1,7,4],[10,-2,1,-7,3,-10],[4,8,1,5,1,9],[5,-10,9,10,9,-8],[-8,-7,10,7,7,5],[-7,-1,2,-10,-1,-9],[-4,10,1,-8,-3,-3],[4,-7,5,-10,10,3],[-3,-7,3,5,-5,3],[-4,-6,-5,10,-6,10],[-6,-4,-4,-10,-1,-1],[3,4,-8,-5,-7,9],[-7,-1,7,6,4,2],[8,4,9,6,9,1],[6,-2,-6,-4,2,-9]],[[9,-2,5,2,6,-5],[-1,-8,-10,10,6,8],[4,6,-9,5,-10,10],[3,-1,8,-5,-8,9],[-5,-1,-2,-4,2,2],[-4,-7,4,-2,-1,-7],[2,10,-8,-5,10,3],[-6,8,-8,7,-5,-8],[6,-7,6,10,7,-5],[10,7,7,-4,8,3],[10,8,6,6,8,1],[-9,-10,-10,3,-7,2],[2,-9,5,6,1,1],[-2,1,10,1,-2,8],[-8,-4,1,10,-1,6],[2,1,8,3,1,-9]],[[6,2,3,-2,9,5],[-1,5,-6,7,-3,-1],[2,-4,-6,6,4,-1],[-6,-9,8,-6,1,-2],[2,-2,10,9,-7,-7],[-3,6,8,6,10,-2],[-9,9,10,6,-3,-9],[4,-8,-9,4,7,3],[9,3,5,10,-4,6],[2,-7,2,1,4,-7],[-6,8,2,1,1,1],[-9,-9,-1,8,7,-10],[1,-5,3,-1,2,4],[-1,5,1,5,8,3],[-1,3,-6,6,-8,-4],[2,2,5,6,-3,5]],[[9,-3,7,6,-7,-7],[4,10,-4,-5,-10,-10],[4,-2,-9,10,10,-4],[-1,5,9,-9,-7,7],[3,-10,10,1,-6,-3],[-9,-4,10,4,-6,7],[2,10,-7,1,-10,5],[10,6,-9,4,5,5],[-4,5,1,-7,10,-2],[-4,-8,-7,4,9,5],[10,5,5,-1,10,-1],[1,-6,5,9,5,4],[10,-7,-10,8,2,-7],[5,8,-7,-8,6,9],[-4,-1,-6,8,4,7],[-2,4,-10,2,1,3]],[[-8,-6,7,-8,-4,7],[-5,-5,4,3,-9,-9],[9,4,-1,8,8,-6],[9,-3,4,-2,8,-9],[9,8,10,7,-9,1],[-6,9,-5,8,-10,7],[-4,4,8,6,-9,7],[2,-1,5,-10,1,6],[4,-9,6,8,-7,-3],[8,-6,2,6,-7,4],[9,4,3,3,5,-10],[10,-4,10,3,7,-7],[-3,4,2,-4,3,-8],[-10,-4,6,10,1,2],[1,3,7,6,5,-1],[-9,-5,-5,-7,-7,-1]],[[-4,-9,-5,10,8,-6],[3,6,2,-4,-2,-3],[5,1,-10,3,5,3],[-4,-8,8,9,5,-1],[5,-8,-6,4,-1,-3],[9,-9,9,6,4,-6],[-7,-4,-2,-1,-2,-4],[10,-10,-4,5,9,8],[5,1,-10,-4,4,1],[-4,-1,-1,-5,-2,3],[-9,9,-2,6,-3,-9],[-6,9,-2,5,3,2],[-10,7,5,-10,-10,-2],[8,-2,-7,-1,3,-10],[-10,-10,-1,-7,3,-7],[-5,1,-7,-10,1,5]],[[10,-10,8,9,-6,-3],[5,-10,-5,7,5,7],[-2,-9,6,10,2,2],[-1,9,10,-4,1,3],[4,-8,-9,3,10,4],[-5,-4,8,6,7,-7],[-5,-1,-7,-6,6,10],[-9,-7,-4,-6,9,6],[8,-5,5,-1,4,-9],[-10,-2,9,2,-6,8],[1,-10,6,8,-8,-6],[-6,5,10,-9,-9,7],[-6,7,-9,5,-8,2],[1,-5,-4,3,-9,8],[-2,-2,-1,-10,-9,10],[-1,1,7,1,-5,10]],[[9,-9,-10,10,5,5],[-10,-4,4,-8,-6,4],[2,5,4,-7,7,-1],[-3,10,-2,6,10,2],[2,10,-1,-3,-2,10],[-2,-10,1,7,-4,-1],[-4,2,-7,-9,-6,-6],[3,-10,6,2,-5,8],[-6,9,3,-8,-7,10],[-7,-2,8,-10,5,-6],[9,10,10,9,2,8],[10,-4,-8,-10,5,-8],[7,-4,9,5,9,2],[-1,7,-1,-1,-1,-7],[-1,-4,8,-9,-1,9],[-4,7,-8,-3,2,-4]],[[-5,5,2,-6,10,9],[-1,2,3,1,-6,1],[5,-2,-5,1,3,-5],[9,-10,-1,-6,-9,-4],[10,2,-2,-9,-8,-6],[-9,-3,5,9,-9,-3],[-8,-5,-7,-3,-6,4],[-9,-7,-6,-10,-3,9],[-10,2,-7,-10,-3,-6],[-5,1,4,-9,10,8],[10,3,10,1,-10,9],[-9,-2,5,-5,7,-2],[-3,1,-7,-1,8,2],[6,8,-8,3,8,-10],[-3,3,-2,10,6,-3],[2,-3,10,2,1,-3]],[[-9,-6,2,-9,-2,-7],[-9,-4,-10,-9,-2,5],[-8,-1,-7,7,1,-2],[-1,9,5,-10,5,-9],[-10,7,3,-8,-1,9],[3,5,-3,-6,9,-8],[3,1,1,-3,8,-4],[4,-1,1,4,-10,-8],[9,5,-1,-4,-10,-4],[-5,-1,7,-6,-7,7],[-1,-10,3,3,-1,-9],[3,9,-8,-4,10,-8],[1,9,2,-6,10,-3],[-5,2,-7,10,-6,-5],[2,9,-5,8,-2,-5],[-4,7,-8,-4,9,1]],[[-10,-5,-2,3,10,-5],[-1,-2,-9,-9,-8,6],[9,9,7,-5,10,3],[2,3,10,-6,2,-7],[-5,-3,-5,8,-10,-3],[6,-4,-7,6,7,-1],[9,9,7,2,4,-6],[-6,-2,-1,3,-4,4],[8,-1,1,-1,1,-2],[7,10,-9,10,-1,2],[-9,1,-4,5,5,4],[-7,-6,6,-7,-10,-4],[-3,6,9,6,-3,-1],[2,-8,1,-4,-8,9],[6,8,-4,7,-9,1],[-1,5,-6,2,10,6]],[[3,-2,-10,-6,6,4],[-10,-7,-6,-6,9,-2],[8,4,3,1,-2,6],[1,-8,-7,9,5,-6],[-6,7,-6,2,-2,-1],[-8,10,5,-4,9,-5],[6,6,2,2,6,3],[8,-5,-2,5,1,4],[1,-4,9,9,-3,-7],[-6,-3,8,-6,1,-9],[10,-7,-1,-6,-6,-5],[10,-10,-8,10,-6,8],[-8,2,-6,4,-9,6],[1,-4,-4,2,2,1],[-9,-4,1,-10,-6,10],[-7,7,-7,-6,9,-7]],[[-1,-1,3,3,-10,-6],[10,-3,10,8,10,-3],[-10,-5,-1,4,-1,6],[-6,5,-9,8,-9,-8],[4,6,3,1,10,-4],[8,4,-4,3,-9,-5],[-1,8,6,1,-1,-4],[-8,-10,8,-9,6,6],[-4,-10,-9,-1,-10,2],[-4,5,-2,10,1,8],[5,-8,3,-1,-4,9],[-7,-6,7,2,3,-7],[-4,6,-8,-7,-6,-6],[-8,5,9,7,-2,3],[-1,3,10,-2,8,2],[-4,10,1,-8,-4,-2]]], dtype = "uint64")#candidate|1818|(13, 16, 6)|const|uint64
bop_1819 = relay.not_equal(call_1802.astype('bool'), relay.reshape(const_1818.astype('bool'), relay.shape_of(call_1802))) # shape=(13, 16, 6)
bop_1822 = relay.not_equal(call_1803.astype('bool'), relay.reshape(const_1818.astype('bool'), relay.shape_of(call_1803))) # shape=(13, 16, 6)
func_918_call = mod.get_global_var('func_918')
func_920_call = mutated_mod.get_global_var('func_920')
call_1828 = func_918_call()
call_1829 = func_918_call()
func_1603_call = mod.get_global_var('func_1603')
func_1607_call = mutated_mod.get_global_var('func_1607')
const_1834 = relay.const([-2.016169,-8.664889,-4.721896,-0.644852,-0.390568,9.096754,-4.313210,-6.105199,2.681780,3.637260,-2.453989,7.914094,2.434752,-2.188444,5.820215], dtype = "float64")#candidate|1834|(15,)|const|float64
var_1835 = relay.var("var_1835", dtype = "float64", shape = (750,))#candidate|1835|(750,)|var|float64
call_1833 = relay.TupleGetItem(func_1603_call(relay.reshape(const_1834.astype('float64'), [1, 15, 1]), relay.reshape(var_1835.astype('float64'), [5, 15, 10]), ), 0)
call_1836 = relay.TupleGetItem(func_1607_call(relay.reshape(const_1834.astype('float64'), [1, 15, 1]), relay.reshape(var_1835.astype('float64'), [5, 15, 10]), ), 0)
output = relay.Tuple([call_1811,const_1812,bop_1819,call_1828,call_1833,const_1834,var_1835,])
output2 = relay.Tuple([call_1813,const_1812,bop_1822,call_1829,call_1836,const_1834,var_1835,])
func_1844 = relay.Function([var_1835,], output)
mod['func_1844'] = func_1844
mod = relay.transform.InferType()(mod)
mutated_mod['func_1844'] = func_1844
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1845 = relay.var("var_1845", dtype = "float64", shape = (750,))#candidate|1845|(750,)|var|float64
func_1844_call = mutated_mod.get_global_var('func_1844')
call_1846 = func_1844_call(var_1845)
output = call_1846
func_1847 = relay.Function([var_1845], output)
mutated_mod['func_1847'] = func_1847
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_1849 = func_371_call()
call_1850 = func_371_call()
output = relay.Tuple([call_1849,])
output2 = relay.Tuple([call_1850,])
func_1855 = relay.Function([], output)
mod['func_1855'] = func_1855
mod = relay.transform.InferType()(mod)
mutated_mod['func_1855'] = func_1855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1855_call = mutated_mod.get_global_var('func_1855')
call_1856 = func_1855_call()
output = call_1856
func_1857 = relay.Function([], output)
mutated_mod['func_1857'] = func_1857
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1911 = relay.const([[[-7.651256,2.173791,-6.131255,-8.877500,-6.916403,1.753137,-8.654419,4.797612,-0.119887,-6.848072,-4.936676,1.946166,-1.977972,3.060111],[-2.949765,-4.500055,7.362023,3.320361,-7.202450,-7.704846,-3.621488,-3.217232,9.155386,-3.464262,-4.524023,8.857998,1.747536,-2.919219],[-7.435787,-2.594112,4.912914,0.031989,-4.384063,-6.407565,-6.044374,0.064432,-2.502831,-8.623625,-1.457174,3.494122,2.865043,8.640987],[1.785991,-9.942040,-4.348865,-9.714842,5.796727,-6.230194,-8.366594,7.637548,3.747380,4.875317,-7.465816,7.053078,-4.642600,6.979083],[7.734132,-7.475816,6.230977,3.752940,4.308206,8.548297,4.079763,0.930095,-8.180673,5.146955,5.894468,9.788127,-0.200761,-0.930383],[6.895196,-3.645213,0.414078,9.311635,-8.967625,-5.281120,-7.636514,-3.609617,6.993521,8.597408,-7.494797,3.599199,5.061267,-7.856596],[-3.066395,1.049494,-5.668482,-5.939586,-9.444638,-3.899556,-8.019269,9.858815,-2.602322,1.819854,4.874343,3.633225,2.984437,4.337639],[4.502471,-4.769688,9.304427,6.907641,3.167736,7.665838,9.064171,-2.283465,-2.213006,-9.157604,-6.097315,-9.027027,-9.468261,8.951507],[-8.659902,3.337820,-5.141725,6.247505,6.038313,-2.442571,0.428374,-6.238775,5.845847,-6.977167,-4.715666,6.569108,-3.802476,-4.345381],[5.303759,-9.778045,3.878198,-7.622331,3.296916,1.022523,-3.842508,-4.859891,6.604213,0.154922,4.237069,-5.216608,-1.073879,-1.572451],[7.762542,-8.920295,2.649935,-8.476756,-0.002321,-1.100573,4.656655,-6.515863,8.151001,0.864020,5.092244,-1.946639,-5.451559,7.853864],[-6.129867,-3.523359,-5.943860,-3.907235,1.401815,-5.573328,6.371421,-8.644794,-9.376141,2.816411,2.942295,-9.669407,5.761612,9.786970],[2.734732,-2.179057,1.650397,9.090319,8.254395,8.053404,9.055645,-2.142234,-9.133584,5.916455,7.067445,5.493049,4.920690,-3.835105],[-0.587881,-5.390829,-8.601410,8.369989,4.115297,3.342579,-3.657048,-3.637138,6.623592,1.142023,5.380049,-3.716703,8.242862,9.602222],[-3.856536,6.309870,5.514793,-9.311183,-8.327042,7.830852,7.156991,9.695554,5.051401,0.938014,-8.865203,2.135721,4.898767,1.875599],[8.574072,4.168406,-0.221484,-7.346930,-7.500948,4.704586,-9.256891,8.475630,2.875452,9.893907,-8.273104,0.607030,7.898820,-4.107890]],[[5.013419,9.672849,-0.816940,-1.769260,4.588820,-9.511444,5.987707,5.973717,7.745299,6.603891,5.178174,0.890293,7.427822,-5.474063],[5.886237,2.110234,-5.230232,2.449308,9.461164,3.068089,-1.902608,0.358641,6.949145,1.840339,2.814753,-3.488739,-6.351794,-0.255850],[-3.317349,-7.427000,4.663621,-2.279714,3.803205,-9.478857,2.324629,4.339331,4.533473,-8.592500,7.281217,5.114114,-9.573325,5.401705],[-9.306670,3.362717,0.678101,-7.320236,0.475610,-9.301713,3.835414,-5.572789,1.999991,-8.979456,-0.367147,5.597662,6.657908,-8.650631],[-2.726787,-9.818575,1.503042,-4.733402,8.694349,7.180753,3.886789,0.136686,-1.413603,-0.070433,-0.885395,-3.729276,1.101475,-4.413255],[6.042311,-0.958898,8.155112,-8.514813,-3.809262,5.806812,4.380365,4.692635,-9.423983,9.790378,-1.172322,-9.675294,0.649496,7.570368],[7.583135,5.461242,-0.353040,-5.919582,-3.905821,-2.257177,0.693406,-4.602705,-1.612591,-7.260288,8.477344,8.818099,5.577605,-5.649457],[-8.593758,7.207770,3.329337,-6.529133,-3.147573,2.547292,5.438047,-1.731471,3.142446,-7.918135,-5.228512,6.281473,-0.096415,1.131547],[-1.810011,-7.805927,8.741415,-0.854360,-2.570727,-5.695273,-7.033450,1.995972,6.061832,-5.153240,4.031232,-4.035980,1.072171,1.369241],[-4.496649,6.311022,-3.120483,4.346661,0.332847,-1.545633,9.610976,3.093768,0.361946,4.161063,-9.848174,5.978244,-4.510953,1.347410],[3.709548,-3.819223,6.465812,9.573069,8.381655,7.327781,-7.389144,1.788460,-3.596896,8.736561,3.072881,-0.201319,0.710218,8.133313],[4.190615,5.202938,3.241204,-3.711751,-2.364404,-6.401750,-0.794652,-8.425387,-1.914775,-3.366798,-8.730391,-5.582049,5.296999,6.932101],[-0.816066,-1.250333,2.031758,0.435949,6.203687,8.992620,9.271336,-3.168995,2.631056,-7.919377,-9.302386,-9.354134,8.643635,-5.490324],[6.823735,8.319787,8.015975,7.303719,6.783388,4.339104,-9.313240,-8.443965,9.452288,-7.580592,-3.979784,-6.910416,7.833918,4.168123],[1.159805,8.286109,-3.941365,-7.374196,9.124134,-3.368960,-9.931069,8.837259,5.588619,-9.096504,-9.899522,3.558967,-5.533817,3.272948],[4.307065,-7.099673,8.756608,8.423770,-7.403803,5.330801,-1.785003,-5.492480,3.003997,1.311623,-1.619223,4.495774,-0.303236,9.042971]],[[-1.799679,4.207712,4.814530,-0.702459,1.712709,-5.312233,-9.170883,1.452538,-3.520359,6.550576,-3.711725,-3.093115,2.735321,8.553055],[-0.099111,-1.890835,-6.619981,-6.370221,0.697359,-1.735881,8.628888,-9.299877,-1.466805,-2.276439,2.685928,-2.915389,-7.846526,-5.196594],[2.443262,-3.682867,-2.204629,-1.237097,-8.569653,1.178585,-5.365383,-9.554857,-6.488992,6.552877,9.582641,1.188399,0.174667,-1.444881],[-2.108186,5.558089,-4.986704,-1.453351,-7.687951,5.608995,5.394122,-7.909390,-1.228590,1.157666,7.705372,2.267212,-9.428789,-0.840620],[2.277522,-9.328801,3.535212,1.600429,6.571491,1.631637,-3.359849,-0.462244,4.562589,2.860601,5.404969,-1.474595,4.145206,2.499364],[8.063369,-0.616924,-0.109170,-6.171401,-7.718324,-8.518628,8.002224,-5.292114,-2.932026,-3.938813,4.420966,-8.546367,-9.314991,-7.634261],[-3.052964,-1.954747,6.688469,-0.671141,8.513599,1.664046,-1.657588,5.435405,7.399708,-7.538404,-9.074549,3.387986,-4.459128,-7.198996],[4.503384,3.204102,6.036661,6.845092,-0.419151,-9.103770,-2.177681,6.617214,1.872517,1.018966,-1.100123,1.561762,-7.642885,6.191269],[-7.064483,2.445216,-9.500322,5.820889,-5.311474,-2.041542,5.057834,-2.510344,-4.385418,-2.573418,-9.835890,0.203779,4.244351,0.228575],[7.297560,4.110318,5.061314,4.757131,8.877947,8.269956,7.974967,-7.364833,-9.894179,6.874629,-3.023296,1.530571,1.381131,-6.048639],[2.622575,-5.513000,-1.942561,-8.679283,-7.027710,6.833523,-6.189095,-6.830948,-1.309869,-0.019623,7.566851,8.710694,-6.391267,7.341959],[6.233648,-8.328070,0.806842,-7.389821,-8.597467,9.847796,-6.956007,-5.840313,4.799801,9.129553,5.868536,7.672069,3.618355,8.177624],[0.704545,9.372959,-5.897010,0.416112,-8.100634,2.420240,-1.662313,2.660411,6.717449,4.953762,-7.362149,-8.300611,9.200789,9.787514],[-4.916047,-9.364184,7.497633,6.757081,2.669084,6.371941,-3.049227,9.240899,-3.381756,9.929327,-9.356604,-4.297985,6.523352,6.115057],[-0.591599,5.827355,9.402158,-8.342976,2.227000,-6.462270,-8.869393,-4.075282,-6.550405,3.665644,0.742284,-4.039734,-0.468070,-5.838762],[8.776248,-7.962903,-6.663628,-2.568795,6.135923,-5.547293,-9.975443,5.660429,2.370607,7.000980,3.310269,-8.429133,-8.126529,0.618675]],[[3.484986,-0.499189,4.883515,3.521408,4.818371,9.124217,-8.815539,8.462966,-8.804085,-3.825697,8.382336,2.003148,-8.259478,2.640579],[-6.959320,4.663261,-2.141851,-8.323185,-1.955642,-1.011509,1.140673,-5.643817,8.770572,1.534707,7.549287,1.778359,5.179993,1.220408],[-5.766176,-8.272058,7.200013,9.543488,-6.374702,8.827639,6.563617,-9.122684,1.635751,-6.862796,-2.968365,-0.609735,0.667815,-7.857312],[-8.825078,1.411884,-5.628445,9.127105,7.624935,-3.333252,-0.478373,1.110293,6.343095,9.894009,-0.107745,9.232827,4.052803,-4.787409],[-3.197061,8.470744,5.879344,1.772569,6.915483,5.407594,2.357739,-1.389918,-6.361266,2.743540,9.627962,-5.047616,6.238243,-2.531678],[-1.546711,6.988438,-6.945015,7.620310,2.189605,4.869917,-3.469821,-9.616297,-6.614668,1.021149,-5.028306,-3.180034,6.498704,6.562998],[3.001384,3.065431,3.775392,-7.391151,-8.036556,1.070531,-7.482290,-1.485296,4.542236,3.430049,1.400594,-4.399412,0.255427,0.793817],[-1.641845,9.373663,-2.001832,0.364389,-0.609691,8.797123,1.721821,-5.328191,-7.936516,-2.860004,7.202029,4.534011,5.405358,-9.392067],[6.657818,3.137686,3.747694,0.136644,-9.675993,1.142020,-2.911427,0.163446,7.995999,1.345727,-0.762001,9.865570,0.614521,-7.143357],[2.667339,-1.692698,-3.309354,-1.180013,-6.143907,6.587709,-4.346290,1.007304,-7.700436,-6.762782,8.937166,3.095293,-4.817666,9.620714],[3.215063,-4.217716,6.920246,6.997337,-7.070833,8.368356,8.104024,5.027685,7.736666,-1.678873,4.225184,6.549325,6.656478,-9.889451],[3.217503,6.989785,1.228912,9.022565,-4.123354,-9.076703,-7.588813,-5.057277,6.873955,5.516762,-9.942825,-0.893070,1.275703,-5.808640],[-4.522598,-1.376114,5.016384,-0.354345,8.735325,8.064967,4.539168,-1.177995,4.311021,8.127806,0.436835,8.126745,7.451364,2.066869],[7.285123,1.414913,2.757726,5.315466,8.397081,5.451617,-1.139643,8.531624,2.522641,3.360248,-5.133718,0.033306,-2.210487,8.754916],[-3.828537,-5.850763,3.654136,6.313083,6.570228,6.790830,-3.553246,0.823270,2.454134,-3.932425,-0.792826,8.715179,8.031559,-5.161031],[5.560869,4.503488,7.666942,0.593217,9.191252,0.580256,2.436512,0.018625,8.037832,-6.370797,3.320078,2.564323,2.298246,-0.343143]],[[5.060050,-8.407945,3.077208,-1.077678,5.008806,8.440934,-3.108533,3.187783,9.554546,-9.131940,8.937053,6.005624,6.095828,-1.647305],[6.335567,7.000186,-0.489209,5.857765,3.766468,-1.243274,6.768704,7.226738,-1.180914,6.190884,-3.303503,-5.366589,3.685078,-3.213696],[1.753294,7.232930,-2.601617,4.449187,-2.423475,-9.926687,1.311827,-4.347697,-7.369062,-1.789282,-8.971500,-9.705163,8.551237,-2.795639],[-3.091165,-6.861528,6.252338,-9.835618,-7.207660,-9.027997,-6.177042,9.310344,6.562025,-5.961619,4.220940,-8.185006,-2.137655,-9.629121],[-3.004185,-6.817052,-5.322642,-6.207224,-1.601887,1.777302,-3.995477,1.276819,-5.096894,-1.597371,-0.474543,6.143290,-3.766393,2.739613],[-4.340945,-4.160924,-7.711121,2.771755,0.957432,9.817546,-0.807754,1.734992,-1.652992,8.385340,4.129314,9.558722,-1.964870,9.318053],[-0.439274,9.668995,0.462477,8.139833,3.686432,-8.397218,-7.555676,-9.402228,-2.489003,-4.816497,7.135025,3.888033,8.359028,-9.797219],[2.202792,-7.360459,9.176217,-5.435936,-3.166963,-3.624298,-9.956598,-5.566054,-2.378820,4.185960,-7.231539,-9.290978,8.061826,-7.782116],[-2.906139,-0.140258,7.272997,9.608227,-9.570751,6.510283,-1.197230,-3.171587,-9.613089,3.176014,-5.900176,1.506061,-2.353448,-5.044076],[0.863005,8.689436,7.785633,1.994765,-6.689273,3.168780,-7.206346,1.988975,4.759969,4.786579,7.803538,-2.872054,3.875912,-0.976827],[1.625396,2.459070,-3.352835,-4.369351,-3.757244,-6.867814,6.224662,9.868331,-0.641208,-6.140510,0.307512,7.598062,-8.895748,-7.578554],[4.956086,-8.741424,4.907655,1.912820,-6.497644,1.830138,5.452260,2.028473,-3.402851,-9.982886,-3.979177,-1.053438,-0.859004,-6.044098],[4.383855,-5.192114,9.467174,-4.170775,-1.235736,-7.382542,3.721172,4.647017,1.494221,6.097914,1.359899,-8.562077,-4.196916,3.095891],[-0.545225,-4.415189,-5.830537,-5.506248,7.465502,-2.938038,-0.072570,-7.211667,7.882800,-0.027294,-7.652193,-2.805677,9.733323,1.592208],[8.026124,-9.681855,-7.342813,1.946718,5.395989,8.975272,-2.191469,-4.009485,-7.605239,0.738152,-5.526622,3.805346,6.003259,1.597152],[-4.911685,5.329211,4.729245,-7.924837,-2.860798,6.175091,1.826528,-6.823999,-7.116174,2.901369,8.302459,-3.993080,-1.654783,-8.859438]],[[3.356553,0.671216,7.059273,0.301109,-0.337120,-2.666569,-5.812190,2.349361,-5.394635,7.919374,-7.348857,-9.871220,8.490607,-5.846438],[-7.982988,-1.092989,-2.328671,8.082352,-3.486041,-9.837573,-5.156244,2.105581,-1.640732,9.655150,-6.864596,-7.959723,4.441504,-1.021892],[1.209243,-2.973012,9.239566,-7.248916,-8.287641,3.122575,-7.639746,-9.046704,9.235250,2.538033,-6.653273,-2.477861,-2.462932,8.669580],[0.074583,-1.864485,-8.126289,-8.999181,9.750653,0.795974,3.693834,-8.842809,1.867808,-3.205956,-1.583132,-9.519328,-7.641064,2.442158],[1.040261,-9.419847,-6.023511,-2.093076,-9.830709,8.468791,2.848195,4.245717,3.771097,-8.871122,-5.268963,4.686856,0.059028,3.785306],[4.446466,-1.116713,-9.769742,4.598435,5.979341,0.789658,5.231987,-9.328583,-3.429695,1.237350,5.304308,-2.628053,-7.443292,5.169520],[3.458639,-0.550836,9.860376,-4.362888,9.240572,3.340852,5.331478,-2.214344,0.707265,1.419063,0.238696,7.313902,-1.501772,-4.426980],[-9.701280,-9.030143,0.745921,-0.991404,0.585915,-6.704168,-0.640164,-7.053495,-7.719420,-1.984359,4.249392,9.085772,-8.619311,5.051393],[-9.032774,-1.772412,3.948822,8.239865,6.921587,-3.568738,-5.612914,3.134827,-7.971693,-5.093454,1.870554,-2.710540,-1.671850,9.982225],[-7.813322,8.596929,-9.881065,9.137288,1.806369,-4.980802,-5.590727,2.724966,9.847152,-8.294998,-9.317295,5.834347,6.486180,-3.969722],[5.941942,5.712970,3.406446,1.280566,-4.019504,7.891857,8.838693,-4.020864,-6.410279,-9.584197,-8.100103,1.606376,9.847785,-4.603242],[-8.047986,-6.329576,-5.751472,-1.856567,-5.313945,-4.974657,-7.513836,-4.340250,0.126655,-9.415289,3.226965,-4.505877,0.331618,-5.624788],[-2.769016,5.295357,-8.920614,-7.852284,6.373568,-2.426654,-5.559336,-6.873171,-1.396407,-7.662504,7.316092,-6.361372,5.285918,5.964191],[-6.923101,4.112584,-3.209504,-6.997199,-3.127821,-0.678331,9.069757,-1.743252,3.342919,-3.008455,4.151766,8.846356,6.627144,8.466616],[-9.580810,7.048991,8.619588,4.548051,-5.018460,-0.952412,4.968317,-6.568271,5.468631,-5.261574,-6.193324,-2.164969,-5.643222,-6.175436],[0.154946,-4.472689,-0.172891,2.402024,2.280598,-0.202756,-9.079735,-7.150397,4.017763,-6.507632,0.953168,3.669571,0.431203,-9.010215]],[[6.263423,-2.047905,-5.554504,3.054318,-7.158893,-1.721540,4.335103,2.013052,0.146103,9.968167,5.061013,1.357721,9.387863,-1.943829],[6.590256,-2.870861,8.009954,5.985892,7.773269,4.209547,8.942736,0.934366,-5.904557,-0.708790,9.523767,-6.252091,4.644594,2.346271],[-8.527619,-1.858650,-0.536316,-9.501224,8.952485,-1.594629,-1.918397,-4.624315,9.228968,6.697278,2.732344,-9.586986,4.882907,5.945089],[-6.910459,5.516999,-2.947093,-5.007157,-8.939836,-1.559234,8.643971,2.200439,-9.620484,8.161317,6.775183,6.909559,6.475058,8.872158],[-9.468145,8.284268,-2.305812,7.925419,-3.309081,7.031943,3.483367,-5.720920,-5.420063,-0.635020,-3.465877,8.578103,-4.554414,-3.874017],[-3.567073,5.303190,-4.918449,9.534227,9.232130,1.539111,8.489416,5.157166,-9.275771,1.417876,9.589759,-9.502669,7.204986,0.398290],[-4.807728,1.125890,-3.060567,-7.411363,-7.437935,2.796181,-7.183625,5.971515,2.767507,-8.355279,8.764549,1.195497,-8.606644,-2.061423],[0.001258,5.919032,8.540407,-7.693928,3.965021,-5.096553,-1.000848,-7.590946,-4.608548,-5.605821,-5.744295,9.210814,-0.132093,-1.380645],[-0.751603,7.867590,-2.867320,-8.832231,7.735195,3.360948,9.204604,-7.279430,3.708473,-4.601251,8.573653,-5.946035,-4.940037,6.750019],[-1.393808,4.319502,-8.529051,-7.048493,7.361833,-1.196458,9.158272,-0.180515,7.024288,-0.937286,6.978838,-7.807888,-9.709129,-1.738862],[-3.268593,5.457498,2.416374,-0.678553,9.339541,-4.544402,0.877888,-5.368168,7.169842,2.511014,4.900961,9.265593,-8.138144,8.590263],[-6.036904,2.475628,3.141159,5.547476,9.576395,-7.997875,-9.824170,-3.418633,5.836507,-0.184331,7.631324,8.982054,-3.678717,2.735442],[-7.235443,3.101321,-0.060273,-7.929033,3.446834,-8.997502,8.303453,-8.529780,2.862259,6.682084,1.193130,1.789197,1.190214,1.023067],[-2.318230,-9.636532,-5.087689,8.237623,8.657543,-0.095104,-8.106045,7.753804,-6.718970,4.677746,-3.782340,-0.397912,3.495537,-2.595028],[7.182579,-0.856544,-8.965553,-7.752691,-5.461822,7.695125,8.194496,-9.611705,-3.926330,0.098099,6.581513,4.186084,9.592011,6.443881],[6.936960,3.838007,-4.130971,-1.550304,6.859235,3.039234,3.284978,1.139481,-8.753153,-7.072612,6.010040,4.202604,-5.400819,2.931152]],[[8.558667,-2.788581,-5.283939,7.734885,1.910773,-1.041124,-6.558111,-9.830478,-9.768272,3.849981,-0.163600,-2.168889,3.641845,-6.778734],[-8.934073,-2.940138,9.718439,-9.553382,-1.515511,-7.986918,-5.586720,-9.084613,-7.400657,-2.692737,-3.185851,7.597748,6.367386,4.954993],[-3.674757,-5.410097,4.403782,-2.483369,-7.797237,-7.732615,-5.916483,-7.175063,8.547718,3.834831,-5.888420,2.270381,7.590087,4.473501],[-8.178441,-6.122595,-6.217162,2.744764,9.000267,-1.291329,-5.160949,-2.227617,8.966086,7.817392,-5.808112,-6.435517,-5.181072,4.420689],[9.994804,-7.572944,7.246857,-8.990773,-5.085444,7.953455,3.786622,9.821475,0.925225,-4.545301,-8.828628,2.960581,-5.007936,4.511982],[6.258511,8.980891,0.770817,-4.087903,-9.981158,9.362116,-1.439522,-3.505961,-5.366171,-4.742030,1.582890,0.414451,-6.573795,-5.691902],[-7.994762,-6.108208,1.691899,-0.505424,4.794871,0.174292,0.583350,-1.415781,-8.555803,5.453944,-2.801011,-1.529962,-0.306233,-6.238472],[-7.354730,-7.511629,-7.923447,6.493937,-7.350741,5.922269,-6.052834,2.284262,6.361690,-3.060360,-3.920917,-8.581291,6.984800,-2.614055],[-6.510403,-5.168602,-9.417525,-3.077486,8.289088,-5.729504,9.008752,-1.367184,-5.265950,-7.639692,0.720969,4.846611,-4.351952,7.882866],[-1.523312,-3.089960,-7.002853,-7.525986,8.785758,1.058633,-4.882450,-1.775825,7.381480,8.346656,-8.154826,4.244673,-7.725957,2.833838],[7.150593,-4.979258,-9.269678,-7.972831,-7.409593,6.291858,3.146915,-6.332934,-1.485917,-6.088280,0.142471,-1.479853,0.031113,-9.930145],[-6.622958,-8.436191,-3.548805,-8.096241,2.701842,7.278192,7.424896,1.682206,1.249299,-0.023985,-7.273987,-3.128369,-3.105784,8.434120],[-7.729758,-5.915535,4.650027,-5.384122,9.937094,8.847518,-8.575529,-2.716624,5.039766,-4.923557,-4.825524,2.829227,4.663451,-2.712094],[-9.975089,5.145980,7.229903,4.908215,5.092277,-8.047143,-3.804369,7.227736,-5.565262,-3.365788,-0.054124,0.139508,6.839403,4.135911],[-9.424955,3.012929,-3.576009,7.362534,-6.153280,-2.691808,5.366249,-1.721712,-5.325486,-3.733073,-3.490469,1.346613,9.065106,3.819173],[8.547928,-7.280065,-1.735490,-1.816588,-2.483883,7.720107,-6.072320,-0.777343,-0.197513,-5.242417,3.194537,-1.553119,2.738462,-6.629999]],[[-5.059681,-8.289918,-1.958652,3.595179,-3.586264,1.196787,2.929724,9.214331,2.646881,8.636209,-4.525769,-1.348812,-3.754935,6.300450],[-7.236467,7.258456,0.185881,-6.409331,-9.051996,9.320517,2.234220,4.093001,3.283611,0.606098,3.456095,-7.520257,-3.004772,6.924484],[1.187597,-3.214527,-5.524832,-9.270051,0.842126,7.695148,-7.263231,-9.822497,-8.829811,9.215516,-2.634568,-6.031983,6.712895,-8.446042],[1.628738,7.998707,-8.962075,6.037549,7.139973,1.337680,-2.227548,-4.090041,1.497351,1.904593,-7.653035,7.179038,9.133779,-7.029417],[-5.595040,-8.028169,-5.744382,3.191762,8.537757,0.081664,-6.075156,-6.737297,-6.803671,-7.738488,6.627566,7.723515,-8.936982,1.537893],[-7.738665,-6.611094,-6.494059,-8.631965,-4.031398,8.649722,-3.878412,-0.159881,6.581536,-1.149718,9.787050,4.797120,-4.180100,3.913626],[4.523526,-2.670190,-0.937298,1.622588,7.629569,-2.466438,0.403253,4.340769,-0.332599,-4.017141,-3.330639,0.862484,3.288495,0.360609],[7.655009,-2.812946,8.082927,-2.080939,-2.487316,-2.358607,-2.260602,1.919571,-7.550411,4.010194,3.353929,8.420770,-1.790422,0.162450],[9.367474,5.449657,9.295080,-8.825945,-5.096199,8.394055,-4.475077,-5.197879,-0.215903,-7.968076,6.423604,0.554820,7.236990,-6.515921],[-3.889534,-5.302323,-3.284570,-6.546228,0.969166,-1.133000,-2.901032,-3.043160,1.024079,3.372151,9.159883,4.868174,1.865520,2.579731],[1.231881,0.309241,2.965728,8.075704,1.069141,-6.350814,-8.713724,4.474396,-9.062299,1.781462,-8.160059,2.205084,-4.187089,-2.056742],[3.803741,3.058729,-4.796700,-1.692980,-2.173128,6.122054,-5.947457,-1.289454,2.497969,3.731268,-0.316884,3.621310,4.498542,-8.932421],[5.651831,2.873845,-6.496649,7.858040,5.347799,-4.281210,-7.145467,-5.618715,3.005310,0.203981,-0.576518,-8.216400,-7.248463,0.913221],[-4.544439,5.328034,5.775884,8.945039,8.905197,-2.049871,-7.280940,-0.399669,-4.063354,8.755213,-5.561976,-4.318114,1.602023,1.289630],[9.867012,2.134696,-3.182581,1.886889,-8.223098,4.777535,-4.292344,-8.077360,-2.769763,6.557392,6.880376,2.352068,4.186805,-5.556394],[-1.568452,-8.856946,9.277924,-0.722778,8.966283,6.772301,-5.451951,2.999560,-5.396184,2.729530,9.219589,6.005486,-5.595848,-8.255642]],[[5.237738,-9.684769,-3.062106,5.745959,2.982602,3.467565,1.181189,-1.855399,5.851588,-7.990529,3.365821,-5.739631,-0.433471,-2.196590],[-0.989852,7.389501,6.257158,-2.900054,-6.805328,9.886738,4.995382,-7.478183,6.726482,-5.969187,1.060353,-6.878319,-9.944502,3.281113],[6.696771,1.329414,-9.793031,6.460172,8.210594,0.966383,0.640145,0.280395,0.184978,4.600290,-9.960161,8.645324,5.795152,-3.088832],[-6.716255,-7.468401,3.416499,-2.371034,-9.123148,-4.924880,5.828168,-1.974362,-9.928878,8.275512,3.167193,1.382428,-5.951554,6.250251],[-2.349605,4.956552,4.956053,-5.302358,-1.653834,-7.245473,-7.876484,-5.418119,-8.931296,-9.703177,-0.129487,-2.386025,5.208939,2.451796],[-7.097053,2.611530,-5.501334,-9.951720,-2.953381,7.641870,3.030829,-8.958539,-0.294020,3.799505,8.699226,2.451047,7.712119,0.628132],[4.641450,-9.610000,-7.143695,6.889837,-7.973051,-8.567406,-6.924145,9.688732,-0.692894,-8.840466,-9.680538,4.623129,2.909164,5.460266],[7.819093,5.191671,4.884971,-9.325162,8.487877,4.808710,4.662267,3.004738,7.260101,3.008944,-5.837646,-9.593250,6.366880,-6.009089],[-7.526262,2.965756,-7.000033,8.396810,-2.700516,2.296580,1.431864,-4.509945,1.908651,-8.649405,-9.925439,-1.287889,4.584207,-4.078683],[-0.784369,-7.029256,-7.708084,-7.343984,-4.466483,4.301421,-0.279963,0.835695,0.797665,-0.620195,0.623174,9.126783,9.537884,-9.501911],[-2.034548,5.934861,3.716885,2.298387,-0.423539,-6.915780,5.113581,1.623959,0.565598,2.310506,-0.032187,6.520429,0.510254,-8.161693],[-8.299366,4.484967,7.347776,9.390041,-1.399987,-8.990875,0.688157,-2.424557,-4.185804,-7.881377,-2.356925,-8.331482,4.846651,-9.429626],[-2.285386,7.306505,4.310148,0.275234,-5.947648,8.170677,-7.863434,2.836169,-5.411707,-1.555601,8.366693,-6.984114,2.977813,1.797381],[-5.721583,5.048112,-0.828053,9.054187,1.363441,-3.424284,-7.348879,9.639171,9.183610,-0.793774,-1.219379,6.343791,6.320765,8.627185],[-4.513946,0.157397,-9.830955,-9.599276,-2.019786,-4.980045,-9.761017,0.475348,-4.946656,0.638187,3.930788,7.489988,1.447741,1.676240],[2.179297,2.478572,1.482330,-1.683647,3.963143,-4.999737,9.406829,8.556944,4.841565,-2.816441,9.035345,-3.006851,3.277844,-0.697851]],[[-5.758556,3.453999,-6.355505,7.618193,6.592270,2.077357,-4.875413,-8.977999,-4.531113,-8.870591,-5.502499,7.495392,-2.034148,-1.255540],[-0.738917,-1.747032,0.217359,-6.138257,-8.317380,5.982286,9.195070,-4.623193,3.825264,6.584865,1.518645,0.632234,-1.113214,7.959466],[-7.179226,-3.154683,3.838793,4.679353,-4.642181,-3.478113,-4.982460,2.838258,0.805709,4.636488,-2.044627,-5.527112,-8.149156,-6.467869],[8.093813,-6.542744,0.214604,-0.265391,5.689419,7.429277,6.847349,4.933760,-7.461725,8.280231,-4.007891,-8.299906,-6.763485,-3.530907],[-1.240410,2.040484,8.290952,-3.767209,3.905209,3.244573,-4.033631,-0.547374,-7.997570,5.792913,-0.010627,-3.403807,-0.236084,-0.862764],[-0.115041,8.929013,7.269162,-3.026522,-1.142340,6.297708,0.679527,5.545236,-3.682127,1.616731,5.841947,2.577941,8.725018,-9.557854],[-6.680703,-6.439490,-6.159554,9.523980,8.289452,-9.710356,-9.312758,7.024880,-4.489354,-4.180109,-9.089418,6.399806,-5.505683,-8.844639],[5.881848,0.970972,4.497482,-5.797683,-0.322352,4.779267,5.917690,1.025527,3.915959,1.672005,3.737915,-3.535609,2.810124,1.245815],[-8.220340,1.857322,2.019222,8.786747,5.943559,-8.487150,-5.533598,3.980024,8.775096,0.188956,9.858009,-4.057960,-6.578237,-6.503430],[-4.068107,-2.133847,8.710630,-7.301804,-4.373768,2.921510,8.339104,2.779109,3.030506,1.623411,-4.001237,-8.710437,7.206047,-4.416718],[5.678150,9.452898,1.533069,8.475892,-6.265034,1.644961,2.700944,-5.253307,-0.455301,-3.110950,-5.401059,-4.537025,5.467897,-6.143583],[2.070907,-8.995250,8.517196,-0.249065,5.126433,-0.998604,-0.265881,8.541795,-1.657636,-9.202481,3.758106,9.784126,0.197605,-5.020935],[-8.906076,8.140807,-1.430192,-7.176519,-5.011679,-0.515472,-4.315255,8.152414,-9.258777,4.503377,-8.451469,5.006151,-2.037537,7.810562],[-2.338522,-8.986513,-6.823970,-4.299425,-5.975515,-5.921688,1.038976,-8.518086,4.238749,-1.696818,-0.017832,7.397386,-7.965310,0.267048],[5.309394,-2.831937,-2.583053,-4.404627,-0.412983,3.297682,2.769272,3.399396,-5.908989,3.418355,6.302786,7.850862,2.154740,-8.493449],[7.777569,-9.400821,-8.548621,-0.710475,-5.693352,1.885652,4.610719,6.574153,8.100233,-8.434427,-8.245998,4.859882,7.054935,-3.563213]],[[5.088160,-7.739078,-1.997113,2.346303,3.580992,1.308849,-9.409380,7.667259,-3.012159,0.858777,3.031914,2.621420,7.194088,-9.138241],[-3.958121,1.820627,8.040922,-9.252117,-1.704316,5.052305,-5.003919,7.799727,3.065605,-2.362597,5.130102,1.131384,2.546515,7.927620],[-2.927335,-1.872238,-5.020468,-5.253422,8.927944,1.747300,9.657359,-2.010506,3.344627,-5.184646,-6.921301,-5.095233,-6.361802,-4.159245],[5.479048,-8.012052,4.414957,-8.251769,-1.588412,-3.844475,6.388084,-4.394910,-5.597873,-5.681737,-9.450686,-5.376872,-6.888906,9.740733],[4.592518,-6.305645,9.120392,-6.868186,5.560488,-6.478604,3.625837,-4.739154,-9.131460,7.250135,3.786957,-4.189797,7.492974,-0.421015],[-6.456997,-9.938444,7.081548,-7.277344,-6.221749,-7.970917,2.852825,6.389992,0.727260,7.333665,-8.309089,-8.002424,5.516836,-7.301570],[3.844074,-6.106351,-3.987857,3.099750,4.869350,-6.342435,-3.450806,-8.103121,0.721354,1.877555,5.557855,-2.454008,1.753633,1.192474],[1.759074,2.019835,-6.891366,-1.279362,5.687412,-6.024039,8.726621,-6.745962,7.678716,9.303392,-6.482989,4.311345,-7.403551,-6.272581],[-9.793122,-8.418871,2.740665,1.502040,5.845534,-8.428482,3.236757,0.487218,5.694383,7.620636,-8.526886,6.649274,1.110702,-2.764799],[-8.723915,3.929654,-0.838678,-3.715397,-2.584740,4.873602,-2.767768,-2.469759,5.068189,-4.053886,5.881008,8.524984,0.830158,-4.776197],[-3.177298,-8.965331,6.873973,6.904804,1.747488,8.079033,2.131825,2.599658,-0.501547,-2.986538,7.722137,-9.234170,-3.775881,2.115382],[-2.235558,-2.470738,-6.663257,6.068925,-0.563230,-4.963802,8.822404,1.151268,-4.134904,-7.435406,-4.245815,-1.326831,9.540452,-5.451568],[5.577902,8.025229,-5.416847,-7.330130,-0.264369,-5.979916,-4.148982,-9.671675,2.359305,3.920384,-4.148291,-6.774477,-2.073228,9.804438],[-6.212397,1.496445,9.894015,7.189499,-2.316861,-3.833210,-9.711387,7.401626,0.692226,-5.685981,-2.891711,7.667846,1.354257,7.258150],[-2.266442,4.203983,8.224790,-1.240778,-9.760990,-4.286297,8.152832,6.190597,1.542937,2.417274,9.530029,2.229293,4.539313,-9.815196],[1.291975,-4.449874,-9.707880,-1.950070,-0.012215,-3.412223,-7.423348,0.470861,-8.805736,1.267486,5.949953,-5.571684,-1.576122,-1.113611]],[[-9.597415,-4.409846,0.075400,-1.078856,7.829879,4.562302,0.192747,-0.147927,-1.234360,-3.370009,-8.641696,-7.367988,-2.372855,-0.229815],[5.306651,-4.929544,-0.006459,9.983614,4.960048,4.874590,-1.156034,-4.932515,0.251627,3.681574,-2.102508,-4.565654,-8.880204,-8.935176],[7.392337,0.334206,-8.502661,5.940455,6.847820,-2.631444,-1.056364,4.095116,-6.925912,-6.773482,-8.724356,6.785084,5.092178,7.760990],[-1.260510,-0.981640,4.428842,-9.282796,6.513562,-7.542639,-8.478710,5.137108,-1.447845,1.153514,-0.491467,-7.862865,-2.882771,1.033966],[9.633925,7.833333,7.880513,-8.479299,2.656284,-9.949144,-7.613477,7.314230,8.823051,1.646385,3.812208,-8.640042,-3.640388,-8.294175],[-5.943990,6.674121,1.084568,3.907962,-0.809740,6.875283,1.003807,8.677010,-2.646743,-4.628265,1.112264,0.089163,5.633521,0.510853],[2.551878,-8.628366,4.983718,7.492036,-2.919849,0.852361,-0.233075,-1.402831,-5.433855,3.682222,2.573155,-5.366316,7.676794,0.875945],[5.240729,8.764896,7.703367,-5.390928,8.415604,3.231848,8.530604,-0.142278,7.376152,8.509738,-2.903050,-0.491517,-8.480751,9.818168],[-5.656397,-9.525717,9.457749,-7.045772,3.281606,0.698523,1.144958,-2.432323,-7.507508,-6.058219,-8.979213,2.899447,7.185501,-3.102069],[2.597166,6.253162,-0.489095,9.135881,0.131216,-8.427090,2.906921,9.714064,-5.767678,2.473027,5.624658,-1.572044,6.560055,-3.172703],[6.149933,-4.472204,-7.655424,2.716923,-4.195550,-0.679314,-0.094759,-7.102828,8.029684,-2.930581,-3.671254,-2.470652,-7.536574,6.004039],[-0.964461,-9.945392,-9.978193,-6.367947,-8.627081,4.558020,7.440390,7.382632,6.461801,2.098632,5.766319,-5.623808,4.587756,6.261975],[-4.972715,3.809410,5.679918,-6.082750,-1.897804,-1.889969,-4.212273,1.868322,-8.968164,-9.420341,8.752711,-4.597755,1.290944,-0.852758],[5.970055,-6.244478,-8.894318,-8.874129,0.569739,5.732900,-7.193991,8.799102,3.695461,-4.034651,7.567249,7.299300,-2.176673,5.785326],[3.698453,-5.046814,-0.942621,-4.149377,-9.199689,-6.242275,7.261598,1.089041,4.071860,1.181284,-3.181243,-0.905375,-4.381541,-4.135052],[2.342438,-5.928077,3.879824,9.560836,-6.243697,-0.290889,9.065507,-9.663359,-9.357481,-4.223815,-1.323130,-8.464647,4.099209,-9.651917]]], dtype = "float64")#candidate|1911|(13, 16, 14)|const|float64
uop_1912 = relay.acos(const_1911.astype('float64')) # shape=(13, 16, 14)
func_497_call = mod.get_global_var('func_497')
func_499_call = mutated_mod.get_global_var('func_499')
call_1915 = relay.TupleGetItem(func_497_call(), 0)
call_1916 = relay.TupleGetItem(func_499_call(), 0)
func_773_call = mod.get_global_var('func_773')
func_775_call = mutated_mod.get_global_var('func_775')
const_1923 = relay.const([9.579871,-2.078536,-8.305044,-4.788072,-6.319201,7.049334,-6.110059,-4.641225,-1.272818,-7.801150,-2.151873,-1.899089,2.342437,2.057898,-2.983245,-3.875256,-7.284755,-0.921985,-2.465833,-6.895551,2.931065,-7.603227,0.403500,-5.313023,8.885797,2.690902,8.448700,-6.142143,8.075854,8.218618,-6.594668,-6.310407,-2.902521,-1.718847,1.432070,7.165525,-8.038101,-9.588956,8.826467,3.811991,3.548283,-2.508218,-6.344202,-7.268289,5.838563,-8.119506,5.235959,-3.400052,2.672821,8.126028,8.595933,1.562465,-0.633468,5.747399,-5.488463,0.007461,6.267198,-1.541891,-7.395040,-0.982117,-8.531297,-4.651897,0.957626,6.648894,1.366732,9.456717,-1.944899,-5.588745,-2.174229,-7.762645,-9.683140,-7.169004,5.763100,-9.417119,8.752080,4.205547,5.370116,-4.405691,-9.597935,5.363566,-8.176655,-5.310247,5.393308,7.624081,5.507889,-5.049968,8.107207,4.911983,4.189844,8.745411,-9.566518,-0.729902,-3.094842,-2.292056,-9.378165,-5.006812,-3.390806,3.638303,1.301300,0.844186,-0.069992,-0.001014,3.304562,7.378316,8.097096,9.009538,2.537257,1.110961,-6.436317,4.442233,3.747602,6.480700,-5.300527,4.901862,-8.282298,-0.634965,-3.731367,-4.739613,1.061980,-9.632432,-9.248291,-2.959214,9.517101,1.142633,-1.127960,7.742595,-1.493431,9.442609,1.049770,-1.850359,-2.521059,5.962136,-4.209886,-2.032336,0.591997,-7.661007,-7.587819,3.325220,3.980355,-3.231299,5.409735,9.588798,-3.735909,2.534990,-8.425623,0.276986,-5.560843,3.752060,2.222347,-8.864334,0.269018,-8.520904,-0.424758,2.169850,0.124143,0.234756,5.943874,-9.852574,2.246951,-1.159899,-2.398557,-6.090942,-4.231756,7.080194,5.652519,-8.690726,-8.268305,1.188394,-5.038538,-1.501145,-8.584927,6.083360,4.542873,7.100733,3.463992,-8.119591,-8.697557,-9.238145,-2.523691,-9.313265,-8.732035,-2.580797,4.473513,4.189637,9.973730,0.154955,3.394140,3.078005,1.893860,0.662359,-0.561753,-2.325464,7.871239,5.034172,-0.580413,4.890287,-8.827381,5.502906,1.153256,-8.341774,6.960929,-9.255111,-6.960254,9.107310,4.328834,-0.977766,-4.742714,-4.798138,9.776459,0.978156,5.517679,-6.047160,6.349386,2.115336,-9.148533,0.107241,-9.136710,-2.609638,3.586649,-6.379940,1.629325,2.605138,6.069828,5.867429,6.989637,-3.600392,5.513250,3.736405,-2.661985,-4.686082,-8.690620,-5.568198,3.709997,5.203062,-6.434646,3.015106,-3.701585,6.583245,-7.449067,-9.677455,-0.309549,-0.401236,-6.888532,-1.618936,1.337894,8.655610,-8.082236,-7.172064,0.282833,-9.832122,4.356778,2.968416,-4.897480,7.233530,4.430335,6.626749,-8.395615,1.872576,0.902742,3.681254,-4.072866,-7.809779,9.373620,4.921809,-4.493863,-9.929638,7.030105,5.065773,2.310968,6.768084,-1.344045,-7.254950,-4.090894,9.742350,5.680563,-9.126490,-2.910713,-3.258526,5.227682,-9.809340,9.298324,3.216837,-3.015517,9.809339,0.551861,-7.268564,3.115663,-6.887836,-6.522127,4.348217,0.213124,-0.683845,-6.966789,5.157681,-4.270600,1.284813,-1.253360,-7.353491,1.760184,-0.661538,-6.181457,-5.653132,9.160052,-5.742365,5.783516,9.928569,6.516107,-7.292193,-9.245644,-9.976352,2.338583,5.208774,-9.599669,-2.143305,8.221144,1.678813,0.527265,2.119039,-2.268654,-1.827598,6.786483,-1.074752,4.862801,-9.878281,-1.668112,-4.030515,-6.970652,-0.948500,-9.666130,-8.643796,8.612603,5.067410,3.317907,-0.828732,-5.796640,2.337871,-1.824015,3.875590,-9.160554,-4.387465,-3.038853,-6.555643,-2.272623,3.629953,2.289766,-2.829384,0.058254,2.386356,-8.191746,9.016375,0.915551,-3.622096,-3.219589,6.886296,0.563022,-7.234734,3.108373,-9.666109,1.579257,-2.470755,3.435097,2.023648,-2.747687,9.194928,-1.990328,-8.263413,-7.092864,-5.072365,-5.331109,9.990055,8.987216,5.241250,2.694833,-9.998376,8.745137,8.436982,8.087346,-1.195728,-4.579584,-2.257307,-9.319699,-5.286153,0.871853,2.325488,-4.492193,5.969658,-9.920298,-0.935215,-7.391254,-0.501059,9.872063,-0.981957,4.596236,9.550658,-7.208153,-8.591763,-1.355771,5.154336,0.684636,8.043120,-1.176629,2.179464,5.849060,-3.259935,-7.551431,4.002823,-7.596960,-3.211761,-2.729422,5.797260,2.547732,6.333285,-6.958446,9.169234,-8.075776,-7.141144,0.184761,5.069398,5.400409,-0.412566,5.152857,-1.002803,4.815679,7.534340,-0.220512,0.133798,-4.169181,9.464121,6.176074,6.158367,6.540047,-1.951090,6.552391,6.531229,0.957650,5.751631,1.417301,6.041658,-2.921652,6.627963,2.232034,1.063617,6.270782,0.404813,4.164306,-9.906699,-8.763382,-6.960354,7.659787,-5.673018,0.739307,7.507738,3.021820,-4.178654,3.913673,-0.858840,-0.782401,-3.082199,-3.682935,-2.738335,-8.695041,-4.681177,-5.932955,9.955937,-8.584953,-8.371608,3.428527,6.972623,-9.561489,-4.557219,8.071455,6.463874,-3.170674,7.369878,7.948898,6.751070,3.725950,-8.779311,-6.042153,9.771796,5.778507,-4.061927,9.813632,-0.626920,8.937269,1.393333,2.984781,-0.172982,-3.048657,5.330975,-8.332068,-0.376823,-6.827575,8.623407,-6.240821,-4.486654,-3.257672,-7.250826,-7.938970,-7.875511,5.659925,-4.382910,-6.973547,7.791806,-7.573433,-4.973309,9.805369,-2.225881,8.187905,-5.362558,-3.486183,3.661104,6.104427,-2.979866,-0.931579,-0.501044,-1.799703,9.893367,9.502974,-4.716562,1.854642,-2.538933,3.836212,-5.551416,-5.347545,-6.517781,5.768659,-0.867305,9.563804,-0.319748,2.602278,2.689791,0.202913,-9.203779,1.955779,0.962601,1.756687,8.629873,-1.441945,7.109137,-5.484188,-9.460368,9.447962,9.566494,5.568800,1.678862,-9.459922,5.377634,4.519499,-6.104175,-8.963268,7.532838,-3.797377,-4.184613,-3.054859,5.900378,3.394691,3.988193,-2.712303,4.648018,-1.210244,-0.703871,9.792824,8.801600,4.298257,-7.761355,5.947181,5.275294,-0.895440,-9.044713,7.571561,-3.820078,3.789735,-6.519516,-0.345681,-2.026495,-7.056778,4.609769,-9.134217,-8.579563,-0.323531,1.146183,-9.203165,9.559836,-9.728793,8.598228,-5.251828,-6.159381,7.605355,2.908707,-7.709164,4.931550,2.719505,-9.746711,1.616413,8.365838,7.130769,2.070098,-4.234505,6.028350,-5.055313,-9.938372,-6.360366,0.736638,8.194169,0.361841,-7.729665,-0.195266,6.142746,9.885117,2.010529,-3.720497,9.115418,-7.745040,0.872657,-7.858062,2.313183,-5.066441,2.574449,4.180733,-0.127090,-8.358684,1.898834,-4.611210,5.947828,4.710377,1.600115,-1.629529,9.997466,-9.457933,-5.463807,0.588942,6.849362,0.896671,3.440053,-3.414992,8.411900,-0.889407,7.297549,3.654665,-6.983751,-5.730197,-9.334195,-3.858820,1.432320,-9.121923,7.194187,4.367888,7.723480,0.716375,-0.475451,3.208526,-6.829671,-2.989603,-7.380962,-9.507257,6.378051,-8.348774,9.386360,6.079097,5.345302,-3.094748,6.584479,-9.213262,-3.989287,2.809014,1.250461,-5.657526,-4.074711,9.678988,-5.978387,5.027534,-9.911875,-9.009655,-3.657144,8.382937,8.463056,-4.491522,1.710722,-3.294954,-5.479788,-9.484653,-5.229586,6.027799,-0.784409,1.753268,3.154943,-4.905731,4.926391,6.891060,-6.052580,5.312026,6.431275,1.254441,-7.375781,-3.266246,6.036377,-2.360865,-2.864971,8.038909,2.271403,2.615045,2.588350,-5.423343,-9.217438,6.766440,-6.704962,8.979765,-3.880337,2.497027,-7.185226,-9.720462,-8.300482,6.361548,-8.865786,5.847173,6.023497,-3.013456,-9.232721,5.217661,6.589194,-2.375773,-2.257160,7.351674,-1.104787,1.440285,-2.935506,-2.796138,2.738652,5.289631,-0.093907,5.811259,-8.362478,0.738943,-9.730549,3.984857,6.252166,-0.999018,5.404973,-3.075828,-2.532668,-5.916060,4.885914,2.296468,-2.835448,8.146908,-6.927896,7.510343,-1.345103,1.851830,3.132434,-4.449386,-1.988971,-1.535306,-3.088481,1.072032,7.045957,-4.871518,5.621251,6.447098,-7.080565,-6.815067,7.923732,2.323794,-2.694263,-9.589241,-0.887450,-7.047873,3.604790,-9.201710,-3.745788,-9.619928,-5.516769,-9.221822,0.794198,9.676301,-2.769145,-2.056171,0.882269,-6.309599,-2.826196,-3.039971,1.209584,-7.301968,3.136601,2.677859,-3.805297,6.991288,-9.735408,-7.630727,2.347854,2.286938,-5.593922,8.903786,-6.761419,0.564796,8.679557,8.514632,0.238600,2.989304,-2.390302,-5.575653,6.862418,3.626543,1.932061,8.156071,-1.060883,8.479567,-9.293916,-4.255981,-5.761043,6.789745,5.676541,-3.382985,-9.094756,-7.933677,-4.666788,-7.246790,-7.351831,6.118844,8.719559,2.316763,-2.122378,-3.067001,9.276221,9.023788,8.425416,2.301303,9.109458,0.464776,-8.580055,-4.335632,-7.506967,-9.330870,1.970339,-3.318333,-3.697671,-3.354996,-4.386576,3.923795,3.379983,6.817174,4.399841,-0.869115,0.729679,6.724592,0.937444,-8.396460,-2.998330,-5.060084,7.501083,-3.486141,-4.183449,-3.898185,-7.737719,6.585326,-1.039219,-7.065639,8.571882,-4.660783,-0.676159,-7.134086,1.661491,0.442655,3.375433,5.291267,-0.409588,-5.358441,-6.979998,-6.722465,-6.248891,1.327665,-6.812029,7.952294,-0.521014,-3.012928,7.266982,-9.425060,-5.054748,-9.537681,1.698390,-7.299107,3.778630,0.809870,1.631043,-6.805079,8.385259,-0.263313,3.141698,6.504207,8.986179,-8.840900,3.186128,2.085018,-8.776710,7.642090,-1.731443,-2.350424,3.647442,7.888923,8.098525,-1.780537,3.137830,-8.253029,-8.211904,-4.926459,-9.677511,-0.354498,6.585192,6.391631,2.500390,-5.771637,-5.362136,-9.005070,-7.179460,-2.403373,6.268990,-6.252448,5.139484,-5.590216,-4.254194,9.370097,6.993950,-8.056629,0.593494,0.651775,6.726569,-4.787666,-7.061322,9.604641,4.197971,-2.036162,-4.677927,4.554876,8.056031,-6.169853,3.241922,-3.761325,8.783201,1.022485,-4.076420,-8.831348,-8.896296,6.801222,4.700638,5.368542,-2.112906,8.948830,-8.883414,-5.093220,-0.310765,-2.740720,-0.639377,7.833515,0.754283,5.637189,6.851275,2.429219,-1.705569,-5.029862,0.929242,-1.350084,7.498226,4.893618,8.268996,7.385405,-2.033614,6.143022,2.447343,-6.657856,4.035893,-7.029413,5.646449,0.801382,5.971529,1.881083,0.774105,-6.217076,-6.979531,0.825360,-1.405919,4.271709,-2.834589,8.291298,3.239357,-0.266809,4.343597,9.699826,9.278416,5.381243,-5.677820,9.240149,-5.855697,-0.745831,9.673605,-1.849088,5.357477,-1.479773,-2.351000,2.809747,-6.645937,4.123136,-7.667354,-2.828072,2.321219,-4.651342,4.104117,7.647260,-1.477905,-7.867647,5.192416,1.412715,-3.295613,-7.717012,4.133437,3.346906,-3.417755,-7.578672,6.791530,-8.595603,-7.570412,1.015615,-4.912289,7.701210,-7.383121,6.432713,3.464147,-7.126565,-5.542665,-7.106818,-4.986888,3.934018,-9.110687,-9.201586,1.422867,-1.023937,1.259971,2.177193,5.063159,-1.104720,-2.529177,3.410653,-0.892873,1.274169,4.610260,5.197706,1.266601,-5.257670,-4.085671,-8.802144,7.451339,6.706408,-4.718310,-4.763153,4.882414,3.294566,-6.162040,1.224196,7.777763,-8.028218,3.844012,-9.343252,-1.622568,-1.660740,1.368264,-0.566563,-0.691291,-8.999446,-9.251346,-8.404745,3.778615,4.527939,-4.418623,5.367594,-2.320795,-7.167150,9.322293,-2.450914,6.641878,-3.658346,7.159055,4.628252,-2.341559,-9.756709,1.534074,-3.183447,8.954556,-6.350534,1.764812,0.282629,7.112413,7.846356,-5.496471,8.576539,-6.379415,0.613308,-0.431361,3.677501,-7.283855,-4.736107,-9.165525,-6.114960,-4.986124,-5.092874,-8.958917,0.021695,8.895401,-6.578482,6.707275,-0.817936,2.442744,0.379146,-0.353114,-5.020154,9.073680,-5.452011,-3.951273,5.480673,-8.462399,-3.637223,5.216601,-9.124905,-5.599578,-2.945363,-3.539529,6.614003,-8.635554,-5.452574,-2.654731,6.169933,6.835921,2.593184,4.205719,-0.188678,-2.217979,-5.097903,2.527732,3.739111,-7.626257,1.769022,-8.081202,-5.077537,7.016114,6.062077,-3.533686,5.715659,7.203012,8.230636,2.765450,-3.683777,-1.864862,9.653661,9.108098,6.341194,7.154280,6.054388,0.365406,-1.507353,-3.417658,-8.691387,3.923887,-6.267996,6.480358,6.418256,3.391673,-5.713650,-4.606708,5.565995,-4.371535,5.818166,6.177071,7.737974,5.234256,-4.197309,-9.686590,-0.889049,-6.297687,-9.920747,-2.139085,3.423743,1.522264,7.996051,7.961243,1.745248,6.453415,5.617809,2.920634,8.870336,8.647793,-5.523514,8.756456,7.815968,3.880536,8.984114,3.249283,-0.926188,-2.006183,-0.796271,-9.958001,-0.116757,7.942930,4.756084,-9.229095,2.835817,-3.216114,7.421730,-2.630510,5.962324,-1.217625,2.242113,6.154162,-4.212434,5.485061,-7.082354,0.853452,2.544186,-1.833123,7.464263,0.920968,-5.549742,6.168151,2.997178,-1.176011,2.734388,9.638646,-4.358480,-1.892601,4.004257,-0.947059,-3.226437,-0.552873,-3.940600,-3.771150,3.766079,-4.711762,0.053768,-8.070693,4.223315,3.425371,6.923310,2.611995,-6.906836,1.710146,3.518395,9.666948,5.058697,9.978467,-7.118179,5.851021,2.015568,-0.200186,5.972145,-8.004415,6.220710,-7.764883,-5.136147,7.296051,9.755614,-9.848149,-2.136803,-4.176048,0.214142,6.108329,8.866302,-2.348979,-2.021090,4.361175,6.581659,-6.265883,-2.230027,7.786028,-2.856982,7.918515,3.998100,-8.909616,1.305429,4.529164,-8.031032,-6.618456,-3.109421,-0.453021,7.999984,-1.890935,6.996665,-6.184330,8.407205,7.711743,-8.273724,-6.707660,-5.376134,4.451280,9.762876,1.751606,9.605041,-2.575936,-5.739341,-5.017379,-2.113779,-8.505274,0.497982,9.319453,-7.401880,-3.054669,3.908805,4.169214,4.541952,1.941700,8.266534,-8.567378,6.778839,-8.522788,0.283485,7.977449,-5.639879,-7.629534,-8.136162,-8.718694,-4.506464,9.376374,7.231185,6.027865,2.688025,-9.424150,7.183908,6.835111,0.221778,-9.279717,-6.850987,-7.471425,1.451050,-0.255020,6.174173,9.410426,1.065944,9.963925,8.642412,9.587433,-1.402400,4.539344,-5.758621,-7.665072,7.446902,0.917114,-3.216694,-7.290948,-4.914071,-2.141315,4.040478,8.836644,-0.867411,-4.075959,5.118584,8.303658,8.103782,-8.411998,2.347411,7.802638,8.718166,2.021203,-3.133970,-8.238280,-7.881895,-8.421817,-8.384068,7.865195,5.467183,-0.579862,1.071689,-5.366523,-3.399464,5.284959,6.296848,-4.998178,7.797008,-2.557898,5.259674,-7.194724,6.963973,-9.306036,-1.860556,1.870676,0.067020,-2.113509,5.605477,6.879999,2.696746,3.619237,2.897823,-4.160083,9.906793,-3.792193,9.393646,4.504852,-6.091435,-1.020075,3.890720,-3.581871,8.136715,3.129884,4.634921,-5.428477,6.059076,1.152700,-5.770356,9.736846,-5.863897,-3.439415,-0.458601,9.469402,9.845192,8.227031,8.365555,4.785956,8.317057,9.195953,4.505714,0.156313,1.717153,0.530646,-8.573514,-8.522438,6.905535,-8.645475,-0.637716,-0.786497,9.535543,-0.315870,3.342957,3.305923,-8.997490,9.318245,0.762807,3.546673,0.956008,-7.840399,2.694933,-3.903581,8.939321,1.766191,-0.984696], dtype = "float64")#candidate|1923|(1440,)|const|float64
call_1922 = func_773_call(relay.reshape(const_1923.astype('float64'), [9, 16, 10]))
call_1924 = func_773_call(relay.reshape(const_1923.astype('float64'), [9, 16, 10]))
func_1340_call = mod.get_global_var('func_1340')
func_1342_call = mutated_mod.get_global_var('func_1342')
call_1938 = func_1340_call()
call_1939 = func_1340_call()
output = relay.Tuple([uop_1912,call_1915,call_1922,const_1923,call_1938,])
output2 = relay.Tuple([uop_1912,call_1916,call_1924,const_1923,call_1939,])
func_1940 = relay.Function([], output)
mod['func_1940'] = func_1940
mod = relay.transform.InferType()(mod)
output = func_1940()
func_1941 = relay.Function([], output)
mutated_mod['func_1941'] = func_1941
mutated_mod = relay.transform.InferType()(mutated_mod)
func_460_call = mod.get_global_var('func_460')
func_462_call = mutated_mod.get_global_var('func_462')
call_1999 = relay.TupleGetItem(func_460_call(), 0)
call_2000 = relay.TupleGetItem(func_462_call(), 0)
func_1420_call = mod.get_global_var('func_1420')
func_1422_call = mutated_mod.get_global_var('func_1422')
call_2018 = relay.TupleGetItem(func_1420_call(relay.reshape(call_1999.astype('bool'), [13, 16, 6])), 0)
call_2019 = relay.TupleGetItem(func_1422_call(relay.reshape(call_1999.astype('bool'), [13, 16, 6])), 0)
func_1844_call = mod.get_global_var('func_1844')
func_1847_call = mutated_mod.get_global_var('func_1847')
var_2027 = relay.var("var_2027", dtype = "float64", shape = (750,))#candidate|2027|(750,)|var|float64
call_2026 = relay.TupleGetItem(func_1844_call(relay.reshape(var_2027.astype('float64'), [750,])), 6)
call_2028 = relay.TupleGetItem(func_1847_call(relay.reshape(var_2027.astype('float64'), [750,])), 6)
bop_2035 = relay.greater_equal(call_2026.astype('bool'), relay.reshape(var_2027.astype('bool'), relay.shape_of(call_2026))) # shape=(750,)
bop_2038 = relay.greater_equal(call_2028.astype('bool'), relay.reshape(var_2027.astype('bool'), relay.shape_of(call_2028))) # shape=(750,)
bop_2046 = relay.maximum(call_2026.astype('uint32'), relay.reshape(var_2027.astype('uint32'), relay.shape_of(call_2026))) # shape=(750,)
bop_2049 = relay.maximum(call_2028.astype('uint32'), relay.reshape(var_2027.astype('uint32'), relay.shape_of(call_2028))) # shape=(750,)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_2060 = relay.TupleGetItem(func_1089_call(), 1)
call_2061 = relay.TupleGetItem(func_1091_call(), 1)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_2067 = relay.TupleGetItem(func_1089_call(), 0)
call_2068 = relay.TupleGetItem(func_1091_call(), 0)
bop_2074 = relay.multiply(var_2027.astype('uint64'), relay.reshape(bop_2035.astype('uint64'), relay.shape_of(var_2027))) # shape=(750,)
bop_2077 = relay.multiply(var_2027.astype('uint64'), relay.reshape(bop_2038.astype('uint64'), relay.shape_of(var_2027))) # shape=(750,)
bop_2092 = relay.left_shift(call_2026.astype('int16'), relay.reshape(bop_2035.astype('int16'), relay.shape_of(call_2026))) # shape=(750,)
bop_2095 = relay.left_shift(call_2028.astype('int16'), relay.reshape(bop_2038.astype('int16'), relay.shape_of(call_2028))) # shape=(750,)
bop_2096 = relay.logical_xor(bop_2035.astype('uint64'), relay.reshape(bop_2074.astype('uint64'), relay.shape_of(bop_2035))) # shape=(750,)
bop_2099 = relay.logical_xor(bop_2038.astype('uint64'), relay.reshape(bop_2077.astype('uint64'), relay.shape_of(bop_2038))) # shape=(750,)
bop_2103 = relay.floor_divide(var_2027.astype('float32'), relay.reshape(bop_2092.astype('float32'), relay.shape_of(var_2027))) # shape=(750,)
bop_2106 = relay.floor_divide(var_2027.astype('float32'), relay.reshape(bop_2095.astype('float32'), relay.shape_of(var_2027))) # shape=(750,)
bop_2120 = relay.greater(bop_2092.astype('bool'), relay.reshape(bop_2074.astype('bool'), relay.shape_of(bop_2092))) # shape=(750,)
bop_2123 = relay.greater(bop_2095.astype('bool'), relay.reshape(bop_2077.astype('bool'), relay.shape_of(bop_2095))) # shape=(750,)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_2136 = relay.TupleGetItem(func_161_call(), 0)
call_2137 = relay.TupleGetItem(func_163_call(), 0)
func_1940_call = mod.get_global_var('func_1940')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_2143 = relay.TupleGetItem(func_1940_call(), 0)
call_2144 = relay.TupleGetItem(func_1941_call(), 0)
output = relay.Tuple([call_1999,call_2018,bop_2046,call_2060,call_2067,bop_2096,bop_2103,bop_2120,call_2136,call_2143,])
output2 = relay.Tuple([call_2000,call_2019,bop_2049,call_2061,call_2068,bop_2099,bop_2106,bop_2123,call_2137,call_2144,])
func_2150 = relay.Function([var_2027,], output)
mod['func_2150'] = func_2150
mod = relay.transform.InferType()(mod)
var_2151 = relay.var("var_2151", dtype = "float64", shape = (750,))#candidate|2151|(750,)|var|float64
output = func_2150(var_2151)
func_2152 = relay.Function([var_2151], output)
mutated_mod['func_2152'] = func_2152
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_2215 = func_371_call()
call_2216 = func_371_call()
output = call_2215
output2 = call_2216
func_2221 = relay.Function([], output)
mod['func_2221'] = func_2221
mod = relay.transform.InferType()(mod)
output = func_2221()
func_2222 = relay.Function([], output)
mutated_mod['func_2222'] = func_2222
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2300 = relay.const([[[-2.340510,-7.005980,5.795564,7.264028]],[[0.297037,2.932546,5.435396,-4.085106]],[[-4.581707,0.676743,-2.893771,-1.030078]],[[7.100657,-3.326728,-4.148533,-5.003357]],[[-7.463754,8.144633,-4.025122,-9.240853]],[[0.095276,-6.052486,-7.977392,6.895608]],[[7.886947,2.070079,-0.299613,0.527602]],[[1.650187,-4.533516,8.965634,2.528996]],[[4.672723,0.783567,5.186819,1.562224]],[[-4.120794,-6.442681,2.683718,3.575236]],[[-7.318106,-9.242507,-0.905530,-6.812689]],[[1.912991,-9.783123,6.500973,-7.183589]],[[-5.126555,-1.919457,0.803261,-1.932838]],[[-4.860845,-4.510306,-7.977075,-6.247707]],[[-5.626617,-0.400581,-5.394328,-3.760791]],[[1.130978,5.904115,-2.503615,0.593583]]], dtype = "float32")#candidate|2300|(16, 1, 4)|const|float32
uop_2301 = relay.tan(const_2300.astype('float32')) # shape=(16, 1, 4)
func_1420_call = mod.get_global_var('func_1420')
func_1422_call = mutated_mod.get_global_var('func_1422')
var_2307 = relay.var("var_2307", dtype = "bool", shape = (1248,))#candidate|2307|(1248,)|var|bool
call_2306 = relay.TupleGetItem(func_1420_call(relay.reshape(var_2307.astype('bool'), [13, 16, 6])), 0)
call_2308 = relay.TupleGetItem(func_1422_call(relay.reshape(var_2307.astype('bool'), [13, 16, 6])), 0)
bop_2312 = relay.maximum(uop_2301.astype('uint32'), relay.reshape(const_2300.astype('uint32'), relay.shape_of(uop_2301))) # shape=(16, 1, 4)
output = relay.Tuple([call_2306,var_2307,bop_2312,])
output2 = relay.Tuple([call_2308,var_2307,bop_2312,])
func_2318 = relay.Function([var_2307,], output)
mod['func_2318'] = func_2318
mod = relay.transform.InferType()(mod)
var_2319 = relay.var("var_2319", dtype = "bool", shape = (1248,))#candidate|2319|(1248,)|var|bool
output = func_2318(var_2319)
func_2320 = relay.Function([var_2319], output)
mutated_mod['func_2320'] = func_2320
mutated_mod = relay.transform.InferType()(mutated_mod)
func_497_call = mod.get_global_var('func_497')
func_499_call = mutated_mod.get_global_var('func_499')
call_2342 = relay.TupleGetItem(func_497_call(), 0)
call_2343 = relay.TupleGetItem(func_499_call(), 0)
output = call_2342
output2 = call_2343
func_2371 = relay.Function([], output)
mod['func_2371'] = func_2371
mod = relay.transform.InferType()(mod)
mutated_mod['func_2371'] = func_2371
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2371_call = mutated_mod.get_global_var('func_2371')
call_2372 = func_2371_call()
output = call_2372
func_2373 = relay.Function([], output)
mutated_mod['func_2373'] = func_2373
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2221_call = mod.get_global_var('func_2221')
func_2222_call = mutated_mod.get_global_var('func_2222')
call_2432 = func_2221_call()
call_2433 = func_2221_call()
func_1844_call = mod.get_global_var('func_1844')
func_1847_call = mutated_mod.get_global_var('func_1847')
const_2435 = relay.const([-8.332313,3.058480,6.802958,4.639141,0.135333,4.803070,-8.653408,2.774785,-4.126713,-2.706470,-2.123147,3.049398,-6.728610,5.848680,2.577570,-6.715886,7.804558,-5.885324,-3.104438,-5.677767,-1.407728,-0.944640,4.044040,-5.913474,5.263802,-1.239791,-5.582659,4.341757,-8.419950,0.273710,-1.491041,8.660587,4.707348,-9.647974,8.471681,1.735008,7.836124,-7.358005,1.422715,-6.862536,-2.757845,-4.818565,3.697957,2.700317,-0.230359,3.197572,-1.675290,-0.652563,-4.986352,9.291338,6.357281,1.960217,-5.809659,-5.228366,-0.494870,-0.430234,9.080445,-2.500470,-0.901885,-0.565030,-0.629412,8.727923,-1.351406,-7.690513,0.662448,-2.901859,1.031794,6.069855,-1.191978,1.721531,-4.021227,3.263009,5.252431,-4.128790,0.480382,-2.081844,-3.712076,-8.075050,-4.025408,1.324755,-4.536795,-1.020162,-5.979594,0.538753,0.111055,8.260399,-2.940181,7.431239,-7.738070,-2.475050,-6.098631,8.041030,-0.181007,3.772748,9.252514,-9.066262,1.768795,8.488752,-1.832107,-1.402647,9.254264,-4.693547,-3.820655,7.169454,7.276193,-4.428657,2.852045,3.160813,9.214097,-6.140152,5.241253,-8.339274,5.315087,-7.185645,-7.586260,-8.064664,2.464366,7.443569,-6.370369,-1.155755,-7.149032,-2.270383,5.123205,-1.286553,-6.608551,5.638889,8.421897,-7.121207,3.258697,2.609480,6.765340,4.389978,-1.735734,-5.743857,-0.050555,-9.845010,7.033844,-7.184623,-4.064906,2.192762,5.963207,7.782965,-0.275902,2.493254,-4.293772,0.203309,-7.912922,-2.528740,-4.452372,-0.123319,-4.462752,8.552725,5.581141,-6.741685,-1.201970,-0.902277,-9.803768,3.990518,-7.836925,-3.332531,4.806259,-5.994780,-3.790711,-0.816038,-7.070537,9.360396,9.241131,-5.490857,-0.718666,3.449160,0.580163,-7.071593,0.759232,-8.843529,7.079000,-6.637561,1.826094,-5.258177,-8.443386,-2.575857,5.437160,5.772846,-6.018465,6.112006,-9.505087,-4.195772,8.299050,2.079848,-4.106688,-4.846137,-8.425599,-4.316430,3.805476,8.369675,4.335178,-6.127225,-5.949609,4.926717,-6.419130,2.878178,2.628287,-5.393887,8.700535,7.248146,6.064850,7.323980,3.496551,7.935958,-7.286922,-3.434164,-3.325927,7.915200,-0.067942,-0.902072,3.261989,2.390309,9.145301,8.137248,4.576061,-8.098490,-0.566206,-3.688112,6.046008,0.070489,-0.068257,2.264367,-7.126614,5.685044,3.128685,8.824821,-4.801994,-5.097998,-7.170005,-6.167032,-2.059795,1.825968,-4.473324,-3.588701,6.468685,7.337001,5.040436,7.055016,0.235879,-0.890815,-6.743098,-1.883439,-0.890883,-3.385338,-8.462424,-5.254977,1.493521,-9.610884,0.076716,4.353496,-6.778289,8.322791,1.539551,6.533846,4.540988,5.732842,-7.958332,-7.995609,-9.597948,4.679827,7.447144,-4.290132,7.707655,-0.153522,1.806252,-1.497482,1.257377,-5.203917,-5.062284,3.953806,8.606459,7.028612,-0.302640,0.255006,-0.795277,-0.683765,-0.681468,-0.013429,3.156229,6.671567,-5.316288,-5.069786,3.661122,-0.560697,-0.132228,2.381060,-0.556028,3.577795,4.324666,-9.444591,-5.699875,8.757051,7.417744,-4.561789,1.835159,4.937828,1.701086,5.333496,-9.046138,-5.207177,5.153674,8.168610,-5.160098,6.930096,7.998624,9.659716,-9.953934,-2.796883,-9.683724,-5.550650,-7.254564,1.060429,4.978735,-0.931497,-0.762929,-1.127177,4.137784,-2.533300,0.413441,0.663987,9.823657,-3.969400,9.872887,9.790627,4.680454,6.250841,7.063368,-8.182767,4.111683,2.292741,4.873735,-8.538200,3.953810,1.126651,-6.080348,7.734422,5.494482,7.921595,-4.715375,0.798570,-0.338032,-3.640887,5.940914,-2.961088,0.830276,1.933039,8.602047,8.380108,-8.471548,4.220823,0.421399,-8.561729,-4.339907,-5.001327,-1.346047,2.843481,-7.524717,-5.473856,-5.287837,4.618538,-0.030851,-3.787499,-4.338785,-8.722913,-4.573432,4.256719,-6.962645,1.634177,1.891221,-5.559525,8.811816,-7.561306,3.190846,6.587063,4.626792,2.248473,7.185039,4.688535,-0.216243,-1.645402,-7.240683,-8.107138,8.938416,8.606797,4.303596,-6.655538,0.676199,3.132986,-4.145275,-5.818244,1.141683,9.399991,-8.425007,-1.995432,9.245548,2.780874,-9.063756,-6.556999,7.682182,-6.896258,4.168114,7.750968,6.835476,5.147092,-3.715004,8.915401,-9.612996,-8.723276,7.972582,0.016859,-5.734172,-1.952584,-8.489118,-5.015363,6.029280,7.207664,-6.738003,7.978270,6.972486,9.358308,8.166790,5.128872,8.408427,-8.631784,-5.258902,4.798789,-6.394360,5.207214,1.794870,5.053122,-1.845637,6.252935,4.740087,-4.498693,-4.517563,-6.743458,-1.033116,4.898666,-9.834249,-1.451680,3.356303,7.966893,-5.024661,-4.400016,-2.079585,-5.729144,-9.679776,4.261701,-2.447623,-5.629431,8.844762,-7.974493,-1.008393,-3.554059,3.129577,4.998231,-4.131057,4.476295,4.358945,-9.913714,6.012077,-1.587751,0.688348,0.053383,8.127658,-3.019995,5.314210,-3.694007,-2.686239,-3.875746,-1.805319,-8.864053,-9.714846,6.261833,9.321263,2.946933,-9.550975,6.175949,-8.994915,3.538049,-4.353447,-0.460064,4.021130,-4.024370,5.947303,8.099507,-4.798992,3.971024,0.729256,7.573091,-8.952887,1.210878,-7.450031,-5.593796,-7.644712,4.321792,8.516904,-4.412968,-6.512638,-2.055343,5.844068,4.370726,5.402866,-5.959846,0.190542,-1.216402,-1.041890,-6.625650,-4.263299,7.592745,1.388343,6.417930,2.866565,8.992992,-2.998943,3.243787,6.850467,-0.548124,1.625245,-5.256624,-0.166245,1.180710,-5.767908,2.365612,-2.623696,0.976090,8.178971,1.495184,-0.829789,8.830103,-9.853659,-3.358714,3.941803,9.244153,9.726092,-0.426696,-4.116662,2.325204,5.201462,1.126513,4.364083,1.412177,7.250820,5.251750,0.068588,9.847423,-8.170210,-4.690154,-9.762253,-1.113671,2.059210,4.398193,-7.563105,-5.290418,5.310042,-1.864548,8.860920,-5.489399,-5.053305,-9.517506,-5.904175,6.301546,-4.250078,-2.399413,1.156116,-8.825291,6.035460,-1.174737,-0.753864,-4.870438,-9.269595,6.186661,-8.498497,5.060529,9.752256,4.265711,2.923719,-5.068074,-5.697162,-0.363141,-2.492047,-7.588509,-1.015518,5.783720,8.161571,-4.097652,-3.043437,3.329401,7.468313,7.793856,3.088397,-2.435062,-9.221622,-0.139851,-5.248842,-6.236962,6.879232,-1.745879,-6.803985,5.889706,5.959904,1.126519,7.938909,0.122160,7.886168,2.688525,2.570957,8.486733,7.968004,-5.715206,-1.707183,-3.505042,4.045191,4.543389,-4.562298,7.112407,0.709619,-1.917525,-0.247223,7.460496,-5.830614,-5.391534,0.495687,8.145210,5.511941,-3.061978,9.662991,8.490597,3.297992,-2.328576,5.682437,-1.307702,-3.130133,4.414258,-3.932553,8.008968,-4.762861,-3.757707,8.060534,-1.601122,4.512050,0.025270,1.768104,3.990072,8.181619,-5.071849,0.026759,3.954352,0.033659,-0.481875,-6.733180,1.101903,6.440245,-3.290820,2.748484,3.465329,3.052328,6.895992,-8.049907,9.144064,-4.553890,-9.499847,-2.154511,-8.225002,9.105103,4.422652,-2.115918,-9.204366,-0.336343,-3.725258,6.035874,-3.299842,-2.026871,7.492270,-3.571397,8.913126,-4.975742,5.934212,2.755806,4.541804,-5.186738,-2.067226,5.633260,9.077500,5.561896,2.906658,9.393182,2.330282,-1.515978,-0.324364,-7.277092,1.283215,-4.505711,5.571130,-4.463786,-7.416333,-2.697098,3.818199,1.858089,8.243318,2.272868,9.591214,5.269887,-0.320564,5.728569,-2.091767,-6.246306,-5.602398,-7.836384,6.114375,-4.914226,-3.364246,-0.543111,-3.773818,-9.955218,1.232823,6.840726,-3.591928,3.906965,-6.212248,-9.134832,-5.625522,-7.810300,2.438728,6.963532,-1.099484,-3.684193,-8.830672,-5.562310,-7.436290,-0.946310,-7.003425,-4.886561,-0.232758,-5.872445,-2.941297,-3.669682,7.422232,4.851089,6.366176,9.794979,7.907956,-5.953544,4.691856,-1.105285,4.135762], dtype = "float64")#candidate|2435|(750,)|const|float64
call_2434 = relay.TupleGetItem(func_1844_call(relay.reshape(const_2435.astype('float64'), [750,])), 3)
call_2436 = relay.TupleGetItem(func_1847_call(relay.reshape(const_2435.astype('float64'), [750,])), 3)
var_2442 = relay.var("var_2442", dtype = "float64", shape = (750,))#candidate|2442|(750,)|var|float64
bop_2443 = relay.bitwise_and(const_2435.astype('int16'), relay.reshape(var_2442.astype('int16'), relay.shape_of(const_2435))) # shape=(750,)
func_1940_call = mod.get_global_var('func_1940')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_2446 = relay.TupleGetItem(func_1940_call(), 1)
call_2447 = relay.TupleGetItem(func_1941_call(), 1)
output = relay.Tuple([call_2432,call_2434,bop_2443,call_2446,])
output2 = relay.Tuple([call_2433,call_2436,bop_2443,call_2447,])
func_2458 = relay.Function([var_2442,], output)
mod['func_2458'] = func_2458
mod = relay.transform.InferType()(mod)
mutated_mod['func_2458'] = func_2458
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2459 = relay.var("var_2459", dtype = "float64", shape = (750,))#candidate|2459|(750,)|var|float64
func_2458_call = mutated_mod.get_global_var('func_2458')
call_2460 = func_2458_call(var_2459)
output = call_2460
func_2461 = relay.Function([var_2459], output)
mutated_mod['func_2461'] = func_2461
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_2525 = func_371_call()
call_2526 = func_371_call()
output = relay.Tuple([call_2525,])
output2 = relay.Tuple([call_2526,])
func_2546 = relay.Function([], output)
mod['func_2546'] = func_2546
mod = relay.transform.InferType()(mod)
mutated_mod['func_2546'] = func_2546
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mutated_mod.get_global_var('func_2546')
call_2547 = func_2546_call()
output = call_2547
func_2548 = relay.Function([], output)
mutated_mod['func_2548'] = func_2548
mutated_mod = relay.transform.InferType()(mutated_mod)
const_2615 = relay.const([[[2,7,-2,2,-3,-7,-9,10,-9,-4,-6,-2,2,9,-8,-5],[1,-10,-10,-1,7,9,-9,9,-6,5,-10,2,-2,-7,10,-1],[-7,-3,3,-1,-4,-8,1,-2,-10,8,3,4,-1,-6,-5,1],[1,-9,10,7,-2,6,2,-10,-5,4,10,-3,-9,3,9,-7]],[[10,5,8,3,-6,-3,6,-3,-4,9,5,7,3,1,8,10],[-6,9,6,-5,-10,3,4,1,10,-1,3,10,-2,10,9,-7],[7,-10,-7,-7,3,-6,-3,4,6,10,-5,-7,-3,6,-7,6],[8,-6,1,1,1,-1,-4,-2,10,2,-4,4,-8,-1,3,8]],[[5,6,7,-8,-7,-7,-3,3,-10,-1,-6,4,-7,-8,2,2],[1,-3,-3,9,9,-3,4,6,-1,-2,5,-10,1,-3,-3,2],[10,2,-6,5,8,8,4,-10,4,-1,-8,-1,10,-3,6,-8],[-1,-2,-3,2,3,-7,-5,-1,9,-8,-6,5,1,-10,3,5]],[[-8,9,-2,-5,1,3,1,5,-9,-6,-9,10,2,1,5,9],[1,-7,1,1,5,7,9,5,-4,2,5,7,1,3,2,-1],[2,-7,1,-6,-3,2,7,-9,-10,4,2,-1,9,-10,5,-5],[1,-1,-1,9,-10,-3,8,-5,2,4,-3,8,-10,-3,2,-4]],[[-2,-7,10,5,9,-4,-10,5,-2,-10,3,-9,8,8,9,-5],[6,4,-10,-5,-6,5,-2,10,7,-9,7,3,-1,5,4,-1],[-4,6,3,-2,-2,5,-7,-8,-4,-7,6,-8,1,-8,-5,-5],[3,2,5,-5,1,3,-6,10,-1,-2,-7,5,-4,-4,2,-6]],[[1,3,2,-4,-9,-8,-7,4,7,6,-4,3,2,5,-9,8],[-8,5,-10,-10,-6,-1,-9,3,-1,-10,-10,3,10,-7,-10,8],[-8,10,4,5,10,-6,-3,3,-10,8,-5,3,10,4,-4,2],[7,-8,-3,2,-2,-2,-7,-6,-9,-6,-7,2,6,-9,-10,2]],[[4,8,-6,-1,-1,1,2,-5,-4,-5,-10,10,3,-8,-2,-10],[-2,-4,-1,7,1,-1,7,-4,-7,-2,8,-6,-1,3,7,-10],[4,-9,2,-8,-4,-6,5,10,8,10,5,-6,2,-2,5,-10],[-7,-5,-5,-1,-3,9,-6,-9,-2,2,-9,-4,8,-2,7,3]],[[2,-4,-10,-7,-4,1,7,6,-1,5,-7,-2,4,-9,5,6],[7,-8,6,1,4,-10,4,-8,-4,-6,3,-5,10,-9,-5,6],[-6,-10,10,2,3,-4,-10,3,-5,-5,7,-7,-6,-3,3,3],[-4,2,4,9,-8,6,5,-3,8,-1,2,3,-4,8,-8,5]],[[-4,7,2,7,8,9,-5,-4,-4,10,-2,-3,9,-2,-10,8],[-7,-2,-2,-1,2,-4,4,-2,2,2,2,8,5,-8,-10,-1],[-1,6,-3,6,6,-4,7,-7,-5,10,-4,-9,-2,-6,-3,-9],[-1,10,1,9,5,8,-9,-8,5,2,-8,-8,7,-3,2,-7]],[[-9,7,2,-9,-1,-6,3,-5,-3,6,7,4,-10,6,-8,-7],[9,-9,1,-7,-7,3,8,6,6,-5,-8,8,-3,-1,7,-2],[-1,-7,-10,-5,7,5,-7,-9,5,-7,-10,-2,-9,-7,-1,3],[9,2,-2,4,-4,-5,4,-5,7,-3,-7,1,9,4,-7,10]],[[5,-5,9,-6,-10,8,-6,-4,-5,1,3,-9,10,-10,10,-4],[4,-4,9,-7,-3,-5,-8,-6,-8,-6,-9,-3,10,-7,-5,-7],[-10,-9,-1,2,-3,-6,7,-5,-9,6,-8,8,-4,10,5,6],[8,-8,6,-6,-6,10,-4,-10,6,10,7,-3,4,10,-3,-7]],[[-4,2,5,-8,10,-6,-3,-7,2,-2,-7,2,10,-1,10,4],[4,-3,3,8,9,10,-10,-10,6,3,-9,-7,7,-10,7,-1],[9,8,7,-7,-1,8,-4,4,-2,-5,2,-8,9,7,3,5],[-4,-5,-8,-7,9,-10,4,5,1,-7,-2,-1,4,-5,6,8]],[[-2,10,7,-10,-5,-9,4,-4,-4,7,7,-6,-6,7,-2,1],[-10,-7,2,-3,-10,5,8,9,2,9,4,8,8,-9,2,6],[4,-1,3,-1,-8,-6,-8,10,9,-7,5,-2,-3,-5,2,9],[5,2,5,10,2,4,1,7,-5,4,10,-5,6,9,1,5]],[[1,-5,-1,-2,3,2,-1,-3,-1,-8,-2,7,-1,5,8,10],[-7,6,10,-2,5,6,-3,4,-7,-9,3,6,-2,-8,2,10],[2,1,5,6,9,7,2,-10,-4,-9,-2,-5,-9,7,-2,3],[2,-6,1,-8,-4,6,8,7,2,-3,3,3,2,3,6,5]],[[-4,-4,3,-7,8,-4,-7,10,-9,6,-10,1,-8,5,-2,1],[-3,1,8,4,-1,-2,-1,10,7,1,-6,9,-9,-9,7,9],[6,6,9,-9,2,1,-6,-3,-10,10,9,3,6,-10,-1,-10],[8,10,-10,8,-10,5,-3,-7,-5,10,-6,1,-2,-4,-10,1]]], dtype = "uint8")#candidate|2615|(15, 4, 16)|const|uint8
var_2616 = relay.var("var_2616", dtype = "uint8", shape = (15, 4, 16))#candidate|2616|(15, 4, 16)|var|uint8
bop_2617 = relay.bitwise_xor(const_2615.astype('uint8'), relay.reshape(var_2616.astype('uint8'), relay.shape_of(const_2615))) # shape=(15, 4, 16)
output = relay.Tuple([bop_2617,])
output2 = relay.Tuple([bop_2617,])
func_2627 = relay.Function([var_2616,], output)
mod['func_2627'] = func_2627
mod = relay.transform.InferType()(mod)
var_2628 = relay.var("var_2628", dtype = "uint8", shape = (15, 4, 16))#candidate|2628|(15, 4, 16)|var|uint8
output = func_2627(var_2628)
func_2629 = relay.Function([var_2628], output)
mutated_mod['func_2629'] = func_2629
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_2644 = func_371_call()
call_2645 = func_371_call()
func_324_call = mod.get_global_var('func_324')
func_325_call = mutated_mod.get_global_var('func_325')
call_2652 = relay.TupleGetItem(func_324_call(), 0)
call_2653 = relay.TupleGetItem(func_325_call(), 0)
func_773_call = mod.get_global_var('func_773')
func_775_call = mutated_mod.get_global_var('func_775')
var_2659 = relay.var("var_2659", dtype = "float64", shape = (180, 8))#candidate|2659|(180, 8)|var|float64
call_2658 = func_773_call(relay.reshape(var_2659.astype('float64'), [9, 16, 10]))
call_2660 = func_773_call(relay.reshape(var_2659.astype('float64'), [9, 16, 10]))
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_2663 = relay.TupleGetItem(func_410_call(), 0)
call_2664 = relay.TupleGetItem(func_412_call(), 0)
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
call_2666 = relay.TupleGetItem(func_1192_call(), 0)
call_2667 = relay.TupleGetItem(func_1194_call(), 0)
func_1564_call = mod.get_global_var('func_1564')
func_1565_call = mutated_mod.get_global_var('func_1565')
call_2680 = func_1564_call()
call_2681 = func_1564_call()
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2684 = relay.TupleGetItem(func_1677_call(), 1)
call_2685 = relay.TupleGetItem(func_1678_call(), 1)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
call_2705 = func_1358_call()
call_2706 = func_1358_call()
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_2713 = relay.TupleGetItem(func_1229_call(relay.reshape(call_2644.astype('float64'), [13, 16, 6])), 1)
call_2714 = relay.TupleGetItem(func_1231_call(relay.reshape(call_2644.astype('float64'), [13, 16, 6])), 1)
uop_2731 = relay.log2(var_2659.astype('float32')) # shape=(180, 8)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_2737 = relay.TupleGetItem(func_1677_call(), 1)
call_2738 = relay.TupleGetItem(func_1678_call(), 1)
output = relay.Tuple([call_2644,call_2652,call_2658,call_2663,call_2666,call_2680,call_2684,call_2705,call_2713,uop_2731,call_2737,])
output2 = relay.Tuple([call_2645,call_2653,call_2660,call_2664,call_2667,call_2681,call_2685,call_2706,call_2714,uop_2731,call_2738,])
func_2739 = relay.Function([var_2659,], output)
mod['func_2739'] = func_2739
mod = relay.transform.InferType()(mod)
mutated_mod['func_2739'] = func_2739
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2740 = relay.var("var_2740", dtype = "float64", shape = (180, 8))#candidate|2740|(180, 8)|var|float64
func_2739_call = mutated_mod.get_global_var('func_2739')
call_2741 = func_2739_call(var_2740)
output = call_2741
func_2742 = relay.Function([var_2740], output)
mutated_mod['func_2742'] = func_2742
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_2863 = func_371_call()
call_2864 = func_371_call()
output = relay.Tuple([call_2863,])
output2 = relay.Tuple([call_2864,])
func_2877 = relay.Function([], output)
mod['func_2877'] = func_2877
mod = relay.transform.InferType()(mod)
output = func_2877()
func_2878 = relay.Function([], output)
mutated_mod['func_2878'] = func_2878
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_2964 = relay.TupleGetItem(func_1940_call(), 0)
call_2965 = relay.TupleGetItem(func_1941_call(), 0)
uop_2968 = relay.log10(call_2964.astype('float32')) # shape=(13, 16, 14)
uop_2970 = relay.log10(call_2965.astype('float32')) # shape=(13, 16, 14)
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
call_2971 = relay.TupleGetItem(func_1192_call(), 0)
call_2972 = relay.TupleGetItem(func_1194_call(), 0)
func_207_call = mod.get_global_var('func_207')
func_208_call = mutated_mod.get_global_var('func_208')
call_2982 = relay.TupleGetItem(func_207_call(), 1)
call_2983 = relay.TupleGetItem(func_208_call(), 1)
func_1544_call = mod.get_global_var('func_1544')
func_1545_call = mutated_mod.get_global_var('func_1545')
call_3006 = func_1544_call()
call_3007 = func_1544_call()
var_3009 = relay.var("var_3009", dtype = "float32", shape = (13, 16, 14))#candidate|3009|(13, 16, 14)|var|float32
bop_3010 = relay.floor_mod(uop_2968.astype('float32'), relay.reshape(var_3009.astype('float32'), relay.shape_of(uop_2968))) # shape=(13, 16, 14)
bop_3013 = relay.floor_mod(uop_2970.astype('float32'), relay.reshape(var_3009.astype('float32'), relay.shape_of(uop_2970))) # shape=(13, 16, 14)
output = relay.Tuple([call_2971,call_2982,call_3006,bop_3010,])
output2 = relay.Tuple([call_2972,call_2983,call_3007,bop_3013,])
func_3025 = relay.Function([var_3009,], output)
mod['func_3025'] = func_3025
mod = relay.transform.InferType()(mod)
mutated_mod['func_3025'] = func_3025
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3026 = relay.var("var_3026", dtype = "float32", shape = (13, 16, 14))#candidate|3026|(13, 16, 14)|var|float32
func_3025_call = mutated_mod.get_global_var('func_3025')
call_3027 = func_3025_call(var_3026)
output = call_3027
func_3028 = relay.Function([var_3026], output)
mutated_mod['func_3028'] = func_3028
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_3030 = relay.TupleGetItem(func_161_call(), 0)
call_3031 = relay.TupleGetItem(func_163_call(), 0)
var_3039 = relay.var("var_3039", dtype = "uint64", shape = (13, 16, 6))#candidate|3039|(13, 16, 6)|var|uint64
bop_3040 = relay.floor_mod(call_3030.astype('float64'), relay.reshape(var_3039.astype('float64'), relay.shape_of(call_3030))) # shape=(13, 16, 6)
bop_3043 = relay.floor_mod(call_3031.astype('float64'), relay.reshape(var_3039.astype('float64'), relay.shape_of(call_3031))) # shape=(13, 16, 6)
func_1642_call = mod.get_global_var('func_1642')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_3053 = func_1642_call()
call_3054 = func_1642_call()
func_2458_call = mod.get_global_var('func_2458')
func_2461_call = mutated_mod.get_global_var('func_2461')
const_3063 = relay.const([8.848271,8.965996,-6.364514,1.320724,8.221644,1.993934,4.396155,-3.209659,7.213284,-2.067736,5.949552,-7.770153,1.790792,2.587027,8.351872,5.997613,-6.491041,9.397115,-6.801084,-8.518448,0.173472,-3.124680,-3.639790,8.646239,5.645082,0.727414,8.605283,0.829509,-8.374469,9.432892,-4.205960,-6.612354,4.262942,6.475417,-3.899814,6.996468,9.323965,4.067325,1.519240,-7.559602,-3.583134,1.621525,1.273886,5.742321,7.103381,0.693824,7.512825,-3.246624,4.900677,-6.644216,5.793233,6.788782,-8.786549,-2.727842,2.444925,-1.231781,5.703243,-9.769522,-0.518738,-6.092761,-9.944859,1.583461,9.114179,8.910194,-0.420493,9.846944,5.065114,-5.808640,2.544184,3.435851,2.292315,-9.383018,9.918029,5.817176,-5.257334,2.702163,7.471469,8.578471,-3.606169,-8.434937,-1.778730,5.038553,-3.598920,3.803291,-7.387797,8.801920,-3.020571,-3.921100,-6.800481,-3.051390,2.414556,4.452755,-5.053468,-2.176521,5.437496,7.516257,-9.508065,-4.521861,8.151703,-5.175299,-4.975087,2.020537,4.000224,9.774934,-7.782781,2.139798,6.459362,-4.137092,2.529494,8.153560,8.349310,-4.082312,0.128473,9.808684,0.922209,-6.928572,7.278255,-4.205052,-6.052514,-1.552220,9.712950,-7.820811,-1.440290,7.998897,5.739751,0.329723,6.435572,-9.372172,-1.512656,6.454644,5.802617,9.187376,-9.851277,-4.687543,0.720961,6.829650,-7.928715,-9.956099,-7.543599,-7.289107,-8.075904,6.013367,5.912666,-6.968615,2.608464,8.459550,1.043161,3.278546,0.820596,-1.362841,-5.588052,3.714532,-6.471774,8.658683,4.786554,-5.733050,9.023134,-9.984549,-4.708872,-1.735624,-8.629466,-1.688213,6.867099,7.018500,6.834728,9.114435,3.307623,-4.784341,-7.047475,7.910347,6.890219,5.753620,0.286689,-3.957347,-9.436048,9.548682,-5.063138,5.574760,6.082924,-5.581800,-0.583199,-6.068510,8.955450,9.982369,-3.050342,7.955494,4.977066,4.619787,-3.395909,-1.843460,-0.802186,-7.551638,9.840707,-5.834573,-2.737441,-4.295377,8.074009,2.713270,1.688462,-8.818748,5.663469,-4.270977,0.693810,6.997755,5.723300,-6.677344,9.700436,-8.932498,-4.661787,1.773356,-5.541690,-0.844633,-0.073664,-1.490071,-7.511516,1.554635,-7.139725,-8.114499,2.521156,-2.475756,4.833458,4.595393,6.084442,-5.816328,-0.329246,-7.334255,8.893490,-8.687647,-3.437628,2.370666,-5.178798,-4.037935,-5.734341,-7.420491,-9.715647,-7.408317,6.884453,-6.055535,-4.890787,5.298680,-1.637725,0.844784,-7.424701,5.000859,-7.062291,9.714859,-2.622371,2.183034,1.396791,-4.057886,-0.100384,6.525719,-2.992043,-2.448832,-6.655278,-4.925208,-5.897942,-8.710929,6.894144,2.750758,5.130932,-4.845621,3.032525,-4.994820,4.259599,-6.938427,-7.442655,-7.423114,-6.280158,8.608392,-6.487868,6.787965,1.969200,1.765612,-2.559714,-7.259963,4.455504,6.811165,-3.673967,2.091490,-1.078591,-4.543742,-7.576780,-5.415606,4.165562,1.939574,5.849702,-5.788536,3.390055,1.754364,1.249874,9.031913,9.318860,7.224232,-2.339600,7.387165,-6.679893,9.781056,-2.807948,2.736505,5.344361,4.353325,-7.965547,5.879686,3.733610,4.170726,-0.979709,-4.500394,6.786354,-1.966944,-2.187296,-2.485724,1.754466,2.734643,7.406178,1.093180,-7.281007,9.114878,7.342982,-9.639792,-5.042412,2.444376,-1.639767,-7.249095,3.116126,1.211336,-3.583785,-9.469974,-9.379062,-1.518008,0.516227,-9.295637,-1.380972,-1.682770,7.476638,3.946665,-6.275900,-2.416488,-1.809346,-4.775939,6.010960,3.139570,8.610322,9.293090,-4.938002,-8.932834,-1.138557,2.610674,-4.496639,-2.508964,-5.937571,9.982368,-1.498268,6.281662,-1.517600,-5.671857,0.895666,-9.421892,1.381187,-2.365486,9.416931,1.957812,-0.288583,-6.248850,-1.875001,-3.835012,-8.892153,4.488474,8.281847,5.794355,-6.624868,-7.132551,-1.134427,2.620977,-7.737252,0.730612,-7.802827,5.877125,5.452921,9.827798,-1.931657,-7.015952,-4.399419,1.503226,-1.129014,7.178919,-3.982606,-8.269839,-1.299295,5.278312,-4.071129,-0.079550,1.788652,6.095624,-9.445462,3.745226,-6.850547,9.954205,2.220664,-9.736317,-4.956038,8.504232,4.287252,6.721932,1.307417,8.749536,7.325187,-2.506049,1.449854,1.145956,-9.657565,2.373356,-8.953054,9.389703,3.544775,1.880131,-7.649765,4.640556,-9.584540,3.106572,4.527774,3.703290,4.855363,9.011868,7.133350,-2.165053,1.323160,-1.220687,-8.751047,-4.053422,-3.788354,2.512550,-2.543427,-1.839413,9.780441,-3.669120,-0.866811,0.305523,3.211409,8.738458,8.934402,-8.726491,7.480848,-7.848247,5.555110,4.370799,-7.285087,-5.827408,7.921588,-2.044312,-6.029751,9.320582,-9.169506,-8.456121,-1.423004,9.046270,5.901361,-3.783079,-7.947592,3.007826,2.571265,9.910406,2.864959,-1.147132,5.984678,-8.261060,8.475045,-0.640224,-8.213771,1.425631,-6.178775,2.983877,6.996036,-6.005830,-0.325200,3.278576,2.889472,-0.976940,-4.692973,7.331627,7.953983,4.106435,-0.983222,-9.803927,1.648315,9.755602,-2.125619,5.703625,-9.167454,-3.967731,0.996353,2.533902,-1.502312,-4.708724,-6.760380,-7.289846,8.210331,5.236380,-1.167655,-2.282419,2.871230,3.331983,-0.624489,1.935712,5.363096,-2.204687,9.506928,5.236307,5.407703,-3.886747,2.951063,2.517425,6.524148,-7.933067,-5.592641,5.697807,-7.463255,-3.466318,8.522063,-3.931018,0.040893,-3.410726,-1.352048,-5.582170,7.811083,3.410776,-3.765327,4.201126,4.687246,7.492601,-5.072379,-5.554148,7.992470,-6.707835,-1.691289,8.927134,0.771795,8.185100,5.848637,5.948489,-1.106049,-7.870896,3.600570,-3.987656,9.715140,-7.657720,-2.820418,9.753943,7.461769,1.364580,-1.482302,1.688781,-0.959359,8.510682,5.970793,-1.327363,4.857666,-6.341267,-8.479832,-3.379742,-3.450872,4.354105,0.158302,-5.382702,-3.943988,-7.848191,8.708890,-9.905291,-2.845549,4.627770,-7.820692,-2.992315,-9.547057,-6.661122,7.753301,2.384170,-3.475344,3.784595,6.047445,-1.023553,9.967244,-7.066848,9.306565,-5.622098,-4.326888,7.067105,1.294115,-5.785640,-8.733883,-9.110970,5.169481,1.453756,-5.599509,2.751841,-8.771322,-1.475295,9.762455,-9.857206,9.576733,-0.326063,9.380204,3.035534,9.288081,-9.555969,-1.947268,-7.562608,-3.671608,7.967667,-8.676993,-3.494443,5.987216,-9.295592,8.382157,3.991579,0.832587,-8.681547,1.643707,0.936340,-8.610244,-2.387012,-2.184570,-2.817466,-2.423054,5.269835,9.314270,9.581362,-0.524301,0.652796,8.548293,3.294489,-6.744622,4.647901,1.895998,6.221742,-9.757593,-6.222090,-2.565521,-6.754850,6.702448,9.727470,1.597659,2.744334,-7.246137,-2.189647,8.854378,-8.111690,5.427973,9.291488,-9.484005,-9.335558,-6.515575,8.840511,-7.909990,5.380462,0.982850,-0.692967,6.076798,4.123697,-5.576649,1.525704,4.770534,5.368921,3.862888,6.803603,0.231703,5.198499,-1.845276,-1.678718,-3.281833,-6.768104,-0.566114,-8.075676,-9.850476,6.431466,5.467863,-1.336196,-8.649858,-3.516491,-5.062507,6.715135,5.370914,4.565246,9.308344,-4.596053,3.308878,-0.585320,4.507301,-6.240566,-8.162020,-1.181449,-3.535889,-6.465587,7.325765,6.385473,-8.622029,7.570178,9.778296,7.080754,1.355492,-4.920567,6.369310,-8.487797,7.838541,-6.775211,1.302352,-4.967604,-3.944674,-4.972317,0.868591,9.540018,4.684891,1.817841,-3.082376,0.230239,2.404845,-4.379569,-2.389132,4.763562,4.983357,3.892464,8.640170,6.168508,-6.914987,8.213517,5.450527,8.515483,0.360481,8.658773,-4.002552,8.971525,-0.733523,-7.869445,1.153119,-8.858059,9.858398,5.156736,5.508751,-3.298875,-7.330701,9.174081,3.184808,-1.760004,-6.110533,-6.681327,6.226517,-6.019518,8.861337,-7.092321,-4.118418,-7.049447], dtype = "float64")#candidate|3063|(750,)|const|float64
call_3062 = relay.TupleGetItem(func_2458_call(relay.reshape(const_3063.astype('float64'), [750,])), 2)
call_3064 = relay.TupleGetItem(func_2461_call(relay.reshape(const_3063.astype('float64'), [750,])), 2)
func_1603_call = mod.get_global_var('func_1603')
func_1607_call = mutated_mod.get_global_var('func_1607')
var_3066 = relay.var("var_3066", dtype = "float64", shape = (5, 3))#candidate|3066|(5, 3)|var|float64
call_3065 = relay.TupleGetItem(func_1603_call(relay.reshape(var_3066.astype('float64'), [1, 15, 1]), relay.reshape(const_3063.astype('float64'), [5, 15, 10]), ), 1)
call_3067 = relay.TupleGetItem(func_1607_call(relay.reshape(var_3066.astype('float64'), [1, 15, 1]), relay.reshape(const_3063.astype('float64'), [5, 15, 10]), ), 1)
output = relay.Tuple([bop_3040,call_3053,call_3062,const_3063,call_3065,var_3066,])
output2 = relay.Tuple([bop_3043,call_3054,call_3064,const_3063,call_3067,var_3066,])
func_3068 = relay.Function([var_3039,var_3066,], output)
mod['func_3068'] = func_3068
mod = relay.transform.InferType()(mod)
var_3069 = relay.var("var_3069", dtype = "uint64", shape = (13, 16, 6))#candidate|3069|(13, 16, 6)|var|uint64
var_3070 = relay.var("var_3070", dtype = "float64", shape = (5, 3))#candidate|3070|(5, 3)|var|float64
output = func_3068(var_3069,var_3070,)
func_3071 = relay.Function([var_3069,var_3070,], output)
mutated_mod['func_3071'] = func_3071
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
call_3087 = relay.TupleGetItem(func_1192_call(), 0)
call_3088 = relay.TupleGetItem(func_1194_call(), 0)
func_2318_call = mod.get_global_var('func_2318')
func_2320_call = mutated_mod.get_global_var('func_2320')
call_3104 = relay.TupleGetItem(func_2318_call(relay.reshape(call_3087.astype('bool'), [1248,])), 1)
call_3105 = relay.TupleGetItem(func_2320_call(relay.reshape(call_3087.astype('bool'), [1248,])), 1)
output = relay.Tuple([call_3087,call_3104,])
output2 = relay.Tuple([call_3088,call_3105,])
func_3107 = relay.Function([], output)
mod['func_3107'] = func_3107
mod = relay.transform.InferType()(mod)
output = func_3107()
func_3108 = relay.Function([], output)
mutated_mod['func_3108'] = func_3108
mutated_mod = relay.transform.InferType()(mutated_mod)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_3109 = relay.TupleGetItem(func_894_call(), 0)
call_3110 = relay.TupleGetItem(func_896_call(), 0)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_3116 = relay.TupleGetItem(func_1677_call(), 0)
call_3117 = relay.TupleGetItem(func_1678_call(), 0)
output = relay.Tuple([call_3109,call_3116,])
output2 = relay.Tuple([call_3110,call_3117,])
func_3128 = relay.Function([], output)
mod['func_3128'] = func_3128
mod = relay.transform.InferType()(mod)
mutated_mod['func_3128'] = func_3128
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3128_call = mutated_mod.get_global_var('func_3128')
call_3129 = func_3128_call()
output = call_3129
func_3130 = relay.Function([], output)
mutated_mod['func_3130'] = func_3130
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_3140 = relay.TupleGetItem(func_161_call(), 0)
call_3141 = relay.TupleGetItem(func_163_call(), 0)
output = call_3140
output2 = call_3141
func_3163 = relay.Function([], output)
mod['func_3163'] = func_3163
mod = relay.transform.InferType()(mod)
output = func_3163()
func_3164 = relay.Function([], output)
mutated_mod['func_3164'] = func_3164
mutated_mod = relay.transform.InferType()(mutated_mod)
func_460_call = mod.get_global_var('func_460')
func_462_call = mutated_mod.get_global_var('func_462')
call_3274 = relay.TupleGetItem(func_460_call(), 1)
call_3275 = relay.TupleGetItem(func_462_call(), 1)
func_918_call = mod.get_global_var('func_918')
func_920_call = mutated_mod.get_global_var('func_920')
call_3283 = func_918_call()
call_3284 = func_918_call()
uop_3290 = relay.erf(call_3274.astype('float64')) # shape=(13, 16, 6)
uop_3292 = relay.erf(call_3275.astype('float64')) # shape=(13, 16, 6)
output = relay.Tuple([call_3283,uop_3290,])
output2 = relay.Tuple([call_3284,uop_3292,])
func_3293 = relay.Function([], output)
mod['func_3293'] = func_3293
mod = relay.transform.InferType()(mod)
output = func_3293()
func_3294 = relay.Function([], output)
mutated_mod['func_3294'] = func_3294
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
call_3340 = func_1358_call()
call_3341 = func_1358_call()
uop_3354 = relay.tan(call_3340.astype('float32')) # shape=(9, 16, 13)
uop_3356 = relay.tan(call_3341.astype('float32')) # shape=(9, 16, 13)
func_2877_call = mod.get_global_var('func_2877')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_3362 = relay.TupleGetItem(func_2877_call(), 0)
call_3363 = relay.TupleGetItem(func_2878_call(), 0)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
call_3374 = relay.TupleGetItem(func_1229_call(relay.reshape(call_3362.astype('float64'), [13, 16, 6])), 0)
call_3375 = relay.TupleGetItem(func_1231_call(relay.reshape(call_3362.astype('float64'), [13, 16, 6])), 0)
func_1642_call = mod.get_global_var('func_1642')
func_1644_call = mutated_mod.get_global_var('func_1644')
call_3377 = func_1642_call()
call_3378 = func_1642_call()
output = relay.Tuple([uop_3354,call_3362,call_3374,call_3377,])
output2 = relay.Tuple([uop_3356,call_3363,call_3375,call_3378,])
func_3384 = relay.Function([], output)
mod['func_3384'] = func_3384
mod = relay.transform.InferType()(mod)
output = func_3384()
func_3385 = relay.Function([], output)
mutated_mod['func_3385'] = func_3385
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3420 = relay.var("var_3420", dtype = "float32", shape = (8, 4, 6))#candidate|3420|(8, 4, 6)|var|float32
uop_3421 = relay.sigmoid(var_3420.astype('float32')) # shape=(8, 4, 6)
func_1229_call = mod.get_global_var('func_1229')
func_1231_call = mutated_mod.get_global_var('func_1231')
var_3425 = relay.var("var_3425", dtype = "float64", shape = (1248,))#candidate|3425|(1248,)|var|float64
call_3424 = relay.TupleGetItem(func_1229_call(relay.reshape(var_3425.astype('float64'), [13, 16, 6])), 0)
call_3426 = relay.TupleGetItem(func_1231_call(relay.reshape(var_3425.astype('float64'), [13, 16, 6])), 0)
func_1544_call = mod.get_global_var('func_1544')
func_1545_call = mutated_mod.get_global_var('func_1545')
call_3451 = func_1544_call()
call_3452 = func_1544_call()
uop_3462 = relay.sqrt(var_3420.astype('float32')) # shape=(8, 4, 6)
func_497_call = mod.get_global_var('func_497')
func_499_call = mutated_mod.get_global_var('func_499')
call_3478 = relay.TupleGetItem(func_497_call(), 0)
call_3479 = relay.TupleGetItem(func_499_call(), 0)
output = relay.Tuple([uop_3421,call_3424,var_3425,call_3451,uop_3462,call_3478,])
output2 = relay.Tuple([uop_3421,call_3426,var_3425,call_3452,uop_3462,call_3479,])
func_3483 = relay.Function([var_3420,var_3425,], output)
mod['func_3483'] = func_3483
mod = relay.transform.InferType()(mod)
var_3484 = relay.var("var_3484", dtype = "float32", shape = (8, 4, 6))#candidate|3484|(8, 4, 6)|var|float32
var_3485 = relay.var("var_3485", dtype = "float64", shape = (1248,))#candidate|3485|(1248,)|var|float64
output = func_3483(var_3484,var_3485,)
func_3486 = relay.Function([var_3484,var_3485,], output)
mutated_mod['func_3486'] = func_3486
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2371_call = mod.get_global_var('func_2371')
func_2373_call = mutated_mod.get_global_var('func_2373')
call_3499 = func_2371_call()
call_3500 = func_2371_call()
output = call_3499
output2 = call_3500
func_3512 = relay.Function([], output)
mod['func_3512'] = func_3512
mod = relay.transform.InferType()(mod)
output = func_3512()
func_3513 = relay.Function([], output)
mutated_mod['func_3513'] = func_3513
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2221_call = mod.get_global_var('func_2221')
func_2222_call = mutated_mod.get_global_var('func_2222')
call_3526 = func_2221_call()
call_3527 = func_2221_call()
func_460_call = mod.get_global_var('func_460')
func_462_call = mutated_mod.get_global_var('func_462')
call_3539 = relay.TupleGetItem(func_460_call(), 1)
call_3540 = relay.TupleGetItem(func_462_call(), 1)
func_2627_call = mod.get_global_var('func_2627')
func_2629_call = mutated_mod.get_global_var('func_2629')
const_3546 = relay.const([[-1,3,-3,9,9,2,-5,-8,-8,2,-8,-3,-10,7,-1,3,-9,9,5,3,5,6,6,2,-2,1,1,-9,9,9,4,-1,8,2,7,9,-1,-5,2,-5,2,-4,-2,-3,10,4,-4,4,-6,-5,-4,-8,-9,3,2,6,4,8,5,-8,3,-9,-8,7,1,-8,6,9,-8,-7,-8,6,-4,-7,-6,-6,-10,4,-7,-1,-4,-3,-2,-6,-5,-3,-7,-5,3,-2,1,-8,2,-7,4,9,-5,-8,5,9,8,-2,-1,10,1,3,-9,-10,-4,1,-7,5,5,10,9,9,-1,4,8,-8,-7,10,3,-8,9,4,-2,-7,-2,4,-8,9,-5,-3,-9,1,-3,2,1,2,9,-5,5,-7,-10,-10,-5,-8,-4,-5,-4,-6,9,1,-10,-1,1,2,-9,4,-10,-8,3,-7,-6,9,1,7,7,-2,-2,-6,9,8,-6,9,-9,3,2,-1,4,-10,-7,-5,-4,-1,-9,9,6,-10,-4,-10,-4,4,-5,-4,-5,4,-9,8,7,2,-6,-8,2,5,-4,6,-8,-4,7,1,-4,6,5,9,-3,2,3,10,-7,-1,9,-1,-10,-7,-4,-1,-5,-4,-2,4,3,5,-5,1,-1,5,2,5,2,8,-2,6,9,8,2,-9,8,-3,10,-5,8,10,-7,-1,9,-6,-10,8,10,-3,6,7,5,-6,-6,5,-2,-4,-2,-7,4,-1,6,6,-3,-8,10,-4,-9,-9,3,9,-10,6,7,2,9,-10,3,10,-4,7,-8,-8,-3,-2,-2,4,5,6,5,7,-3,8,-4,2,-1,-3,-1,-7,-7,-1,-1,3,-4,2,-6,5,8,5,-4,-10,-7,-5,4,-1,3,2,-6,2,3,-1,-6,8,10,6,10,8,-8,4,-6,-5,-8,3,-1,5,-10,2,-3,-10,4,6,1,-1,-10,1,1,-5,2,-4,2,8,6,-9,-2,3,-6,-4,-6,8,-10,-1,6,10,3,-2,3,-8,1,1,6,-3,-4,1,-10,7,-7,-2,6,10,8,-4,-1,-2,-10,8,-7,-10,6,5,10,7,-4,-8,-3,-2,10,1,-8,4,6,-8,10,5,1,3,6,7,-1,10,3,2,-8,3,-6,8,8,6,-3,-6,-3,-6,-9,8,-7,-3,-10,2,-9,-6,3,-8,7,10,5,6,5,8,4,5,2,-4,2,-10,2,-6,7,7,-8,-8,5,2,8,5,3,5,-5,-10,4,9,-6,-2,-9,-9,-10,-9,-2,6,-10,-2,-10,-10,8,3,10,10,7,10,-5,-4,-7,9,-5,-9,-5,-7,2,1,7,-1,-5,2,-5,9,-3,-2,-5,2,-7,4,4,6,-9,5,10,-3,-7,7,9,-1,-7,7,-5,4,1,-3,-1,2,-7,-8,-3,1,7,-3,2,-3,8,-2,10,-8,-6,-6,1,9,-5,4,-7,9,3,-4,-7,-3,-6,1,-3,-7,-9,7,2,-9,-2,-4,-7,7,-6,-4,-8,1,4,-10,-10,-9,1,-10,-4,10,3,-9,9,-10,-6,2,-3,-8,5,-7,8,-6,4,1,-7,5,7,2,-9,2,9,9,-7,3,8,8,6,4,2,-7,6,-10,-6,-10,-7,2,8,-9,8,-8,-2,2,-10,7,2,10,-7,-3,-5,10,7,7,1,2,-8,8,5,-7,4,7,-7,4,-9,7,-9,-5,6,2,10,9,-4,-9,4,-6,-9,4,9,-1,6,2,4,-2,1,-10,-9,8,-5,-4,2,-9,10,8,3,10,7,5,-1,-2,10,-3,10,-2,-10,-5,-4,-5,10,-8,5,2,-1,-5,-5,-5,10,4,1,6,4,-6,-6,7,-6,-8,-2,-5,9,-5,7,-9,-8,-7,-3,-10,4,7,7,-3,8,6,-2,-3,8,-7,-6,10,-1,2,-1,1,8,-3,-2,8,8,8,-2,2,8,5,-4,-9,3,9,4,7,-9,-7,-7,-9,-6,4,9,-7,3,-1,6,-4,-1,-5,4,-9,4,-4,-8,7,-1,1,7,4,-10,9,-5,9,5,-3,7,3,-5,-4,9,6,-2,-9,6,7,8,-4,-8,-9,6,-3,1,4,-3,8,10,4,-2,9,4,-4,3,-5,10,5,3,8,-5,9,-3,-2,2,4,-8,-4,10,-7,5,-5,6,-2,7,-3,4,-2,1,-1,1,1,-8,-4,-2,-3,-2,3,-8,7,4,-10,3,7,-8,-9,4,8,4,10,10,-2,-2,10,-9,-7,-4,3,-9,-3,1,-5,3,-6,-3,2,2,8,8,-3,-3,-10,-7,6,7,10,3,-2,-9,3,7,-7,-1,2,-1,8,5,-10,-3,8,-8,-8,6,-5,-8,-6,6,-3,-8,-6,-10,-4,-2,-9,3,-5,-8,9,-2,-10,3,-7,-1,5,5,-10,-4,4,-7,3,2,10,-2,5,-3,6,1,4,2,-1,1,-4,4,-2,-10,-2,4,4,10,10,4,-9,9,-9,5,10,3,-10,1,-9,-7,-3,4,-7,-5,-10,-2,8,-4,-2,8,4,5,8]], dtype = "uint8")#candidate|3546|(1, 960)|const|uint8
call_3545 = relay.TupleGetItem(func_2627_call(relay.reshape(const_3546.astype('uint8'), [15, 4, 16])), 0)
call_3547 = relay.TupleGetItem(func_2629_call(relay.reshape(const_3546.astype('uint8'), [15, 4, 16])), 0)
func_3163_call = mod.get_global_var('func_3163')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_3549 = func_3163_call()
call_3550 = func_3163_call()
output = relay.Tuple([call_3526,call_3539,call_3545,const_3546,call_3549,])
output2 = relay.Tuple([call_3527,call_3540,call_3547,const_3546,call_3550,])
func_3551 = relay.Function([], output)
mod['func_3551'] = func_3551
mod = relay.transform.InferType()(mod)
mutated_mod['func_3551'] = func_3551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3551_call = mutated_mod.get_global_var('func_3551')
call_3552 = func_3551_call()
output = call_3552
func_3553 = relay.Function([], output)
mutated_mod['func_3553'] = func_3553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_3579 = relay.TupleGetItem(func_3293_call(), 1)
call_3580 = relay.TupleGetItem(func_3294_call(), 1)
output = call_3579
output2 = call_3580
func_3613 = relay.Function([], output)
mod['func_3613'] = func_3613
mod = relay.transform.InferType()(mod)
output = func_3613()
func_3614 = relay.Function([], output)
mutated_mod['func_3614'] = func_3614
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1855_call = mod.get_global_var('func_1855')
func_1857_call = mutated_mod.get_global_var('func_1857')
call_3636 = relay.TupleGetItem(func_1855_call(), 0)
call_3637 = relay.TupleGetItem(func_1857_call(), 0)
output = call_3636
output2 = call_3637
func_3639 = relay.Function([], output)
mod['func_3639'] = func_3639
mod = relay.transform.InferType()(mod)
mutated_mod['func_3639'] = func_3639
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3639_call = mutated_mod.get_global_var('func_3639')
call_3640 = func_3639_call()
output = call_3640
func_3641 = relay.Function([], output)
mutated_mod['func_3641'] = func_3641
mutated_mod = relay.transform.InferType()(mutated_mod)
func_497_call = mod.get_global_var('func_497')
func_499_call = mutated_mod.get_global_var('func_499')
call_3680 = relay.TupleGetItem(func_497_call(), 0)
call_3681 = relay.TupleGetItem(func_499_call(), 0)
func_3483_call = mod.get_global_var('func_3483')
func_3486_call = mutated_mod.get_global_var('func_3486')
var_3700 = relay.var("var_3700", dtype = "float32", shape = (24, 8))#candidate|3700|(24, 8)|var|float32
call_3699 = relay.TupleGetItem(func_3483_call(relay.reshape(var_3700.astype('float32'), [8, 4, 6]), relay.reshape(call_3680.astype('float64'), [1248,]), ), 0)
call_3701 = relay.TupleGetItem(func_3486_call(relay.reshape(var_3700.astype('float32'), [8, 4, 6]), relay.reshape(call_3680.astype('float64'), [1248,]), ), 0)
func_1089_call = mod.get_global_var('func_1089')
func_1091_call = mutated_mod.get_global_var('func_1091')
call_3703 = relay.TupleGetItem(func_1089_call(), 0)
call_3704 = relay.TupleGetItem(func_1091_call(), 0)
uop_3705 = relay.acos(call_3680.astype('float32')) # shape=(13, 16, 6)
uop_3707 = relay.acos(call_3681.astype('float32')) # shape=(13, 16, 6)
output = relay.Tuple([call_3699,var_3700,call_3703,uop_3705,])
output2 = relay.Tuple([call_3701,var_3700,call_3704,uop_3707,])
func_3709 = relay.Function([var_3700,], output)
mod['func_3709'] = func_3709
mod = relay.transform.InferType()(mod)
mutated_mod['func_3709'] = func_3709
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3710 = relay.var("var_3710", dtype = "float32", shape = (24, 8))#candidate|3710|(24, 8)|var|float32
func_3709_call = mutated_mod.get_global_var('func_3709')
call_3711 = func_3709_call(var_3710)
output = call_3711
func_3712 = relay.Function([var_3710], output)
mutated_mod['func_3712'] = func_3712
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3714 = relay.var("var_3714", dtype = "float32", shape = (5, 8))#candidate|3714|(5, 8)|var|float32
uop_3715 = relay.log(var_3714.astype('float32')) # shape=(5, 8)
output = uop_3715
output2 = uop_3715
func_3717 = relay.Function([var_3714,], output)
mod['func_3717'] = func_3717
mod = relay.transform.InferType()(mod)
mutated_mod['func_3717'] = func_3717
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3718 = relay.var("var_3718", dtype = "float32", shape = (5, 8))#candidate|3718|(5, 8)|var|float32
func_3717_call = mutated_mod.get_global_var('func_3717')
call_3719 = func_3717_call(var_3718)
output = call_3719
func_3720 = relay.Function([var_3718], output)
mutated_mod['func_3720'] = func_3720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3739 = relay.var("var_3739", dtype = "float32", shape = (8, 1, 13))#candidate|3739|(8, 1, 13)|var|float32
uop_3740 = relay.log(var_3739.astype('float32')) # shape=(8, 1, 13)
output = uop_3740
output2 = uop_3740
func_3742 = relay.Function([var_3739,], output)
mod['func_3742'] = func_3742
mod = relay.transform.InferType()(mod)
mutated_mod['func_3742'] = func_3742
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3743 = relay.var("var_3743", dtype = "float32", shape = (8, 1, 13))#candidate|3743|(8, 1, 13)|var|float32
func_3742_call = mutated_mod.get_global_var('func_3742')
call_3744 = func_3742_call(var_3743)
output = call_3744
func_3745 = relay.Function([var_3743], output)
mutated_mod['func_3745'] = func_3745
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1340_call = mod.get_global_var('func_1340')
func_1342_call = mutated_mod.get_global_var('func_1342')
call_3771 = func_1340_call()
call_3772 = func_1340_call()
func_3384_call = mod.get_global_var('func_3384')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_3783 = relay.TupleGetItem(func_3384_call(), 2)
call_3784 = relay.TupleGetItem(func_3385_call(), 2)
output = relay.Tuple([call_3771,call_3783,])
output2 = relay.Tuple([call_3772,call_3784,])
func_3794 = relay.Function([], output)
mod['func_3794'] = func_3794
mod = relay.transform.InferType()(mod)
mutated_mod['func_3794'] = func_3794
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3794_call = mutated_mod.get_global_var('func_3794')
call_3795 = func_3794_call()
output = call_3795
func_3796 = relay.Function([], output)
mutated_mod['func_3796'] = func_3796
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1007_call = mutated_mod.get_global_var('func_1007')
call_3806 = func_1006_call()
call_3807 = func_1006_call()
func_497_call = mod.get_global_var('func_497')
func_499_call = mutated_mod.get_global_var('func_499')
call_3810 = relay.TupleGetItem(func_497_call(), 0)
call_3811 = relay.TupleGetItem(func_499_call(), 0)
output = relay.Tuple([call_3806,call_3810,])
output2 = relay.Tuple([call_3807,call_3811,])
func_3815 = relay.Function([], output)
mod['func_3815'] = func_3815
mod = relay.transform.InferType()(mod)
output = func_3815()
func_3816 = relay.Function([], output)
mutated_mod['func_3816'] = func_3816
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3822 = relay.var("var_3822", dtype = "float32", shape = (13, 8, 1))#candidate|3822|(13, 8, 1)|var|float32
uop_3823 = relay.sqrt(var_3822.astype('float32')) # shape=(13, 8, 1)
output = relay.Tuple([uop_3823,])
output2 = relay.Tuple([uop_3823,])
func_3825 = relay.Function([var_3822,], output)
mod['func_3825'] = func_3825
mod = relay.transform.InferType()(mod)
var_3826 = relay.var("var_3826", dtype = "float32", shape = (13, 8, 1))#candidate|3826|(13, 8, 1)|var|float32
output = func_3825(var_3826)
func_3827 = relay.Function([var_3826], output)
mutated_mod['func_3827'] = func_3827
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3848 = relay.var("var_3848", dtype = "float32", shape = (1, 16, 11))#candidate|3848|(1, 16, 11)|var|float32
uop_3849 = relay.atanh(var_3848.astype('float32')) # shape=(1, 16, 11)
output = relay.Tuple([uop_3849,])
output2 = relay.Tuple([uop_3849,])
func_3858 = relay.Function([var_3848,], output)
mod['func_3858'] = func_3858
mod = relay.transform.InferType()(mod)
var_3859 = relay.var("var_3859", dtype = "float32", shape = (1, 16, 11))#candidate|3859|(1, 16, 11)|var|float32
output = func_3858(var_3859)
func_3860 = relay.Function([var_3859], output)
mutated_mod['func_3860'] = func_3860
mutated_mod = relay.transform.InferType()(mutated_mod)
func_324_call = mod.get_global_var('func_324')
func_325_call = mutated_mod.get_global_var('func_325')
call_3939 = relay.TupleGetItem(func_324_call(), 0)
call_3940 = relay.TupleGetItem(func_325_call(), 0)
func_773_call = mod.get_global_var('func_773')
func_775_call = mutated_mod.get_global_var('func_775')
var_3956 = relay.var("var_3956", dtype = "float64", shape = (1440,))#candidate|3956|(1440,)|var|float64
call_3955 = func_773_call(relay.reshape(var_3956.astype('float64'), [9, 16, 10]))
call_3957 = func_773_call(relay.reshape(var_3956.astype('float64'), [9, 16, 10]))
uop_3965 = relay.asin(call_3955.astype('float64')) # shape=(9, 16, 10)
uop_3967 = relay.asin(call_3957.astype('float64')) # shape=(9, 16, 10)
func_1564_call = mod.get_global_var('func_1564')
func_1565_call = mutated_mod.get_global_var('func_1565')
call_3987 = func_1564_call()
call_3988 = func_1564_call()
func_2739_call = mod.get_global_var('func_2739')
func_2742_call = mutated_mod.get_global_var('func_2742')
call_4005 = relay.TupleGetItem(func_2739_call(relay.reshape(uop_3965.astype('float64'), [180, 8])), 3)
call_4006 = relay.TupleGetItem(func_2742_call(relay.reshape(uop_3965.astype('float64'), [180, 8])), 3)
func_1940_call = mod.get_global_var('func_1940')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_4012 = relay.TupleGetItem(func_1940_call(), 0)
call_4013 = relay.TupleGetItem(func_1941_call(), 0)
func_3613_call = mod.get_global_var('func_3613')
func_3614_call = mutated_mod.get_global_var('func_3614')
call_4036 = func_3613_call()
call_4037 = func_3613_call()
output = relay.Tuple([call_3939,var_3956,uop_3965,call_3987,call_4005,call_4012,call_4036,])
output2 = relay.Tuple([call_3940,var_3956,uop_3967,call_3988,call_4006,call_4013,call_4037,])
func_4039 = relay.Function([var_3956,], output)
mod['func_4039'] = func_4039
mod = relay.transform.InferType()(mod)
var_4040 = relay.var("var_4040", dtype = "float64", shape = (1440,))#candidate|4040|(1440,)|var|float64
output = func_4039(var_4040)
func_4041 = relay.Function([var_4040], output)
mutated_mod['func_4041'] = func_4041
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4043 = relay.var("var_4043", dtype = "uint8", shape = (14, 11, 14))#candidate|4043|(14, 11, 14)|var|uint8
var_4044 = relay.var("var_4044", dtype = "uint8", shape = (14, 11, 14))#candidate|4044|(14, 11, 14)|var|uint8
bop_4045 = relay.minimum(var_4043.astype('uint8'), relay.reshape(var_4044.astype('uint8'), relay.shape_of(var_4043))) # shape=(14, 11, 14)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_4054 = relay.TupleGetItem(func_894_call(), 0)
call_4055 = relay.TupleGetItem(func_896_call(), 0)
output = relay.Tuple([bop_4045,call_4054,])
output2 = relay.Tuple([bop_4045,call_4055,])
func_4064 = relay.Function([var_4043,var_4044,], output)
mod['func_4064'] = func_4064
mod = relay.transform.InferType()(mod)
mutated_mod['func_4064'] = func_4064
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4064_call = mutated_mod.get_global_var('func_4064')
var_4066 = relay.var("var_4066", dtype = "uint8", shape = (14, 11, 14))#candidate|4066|(14, 11, 14)|var|uint8
var_4067 = relay.var("var_4067", dtype = "uint8", shape = (14, 11, 14))#candidate|4067|(14, 11, 14)|var|uint8
call_4065 = func_4064_call(var_4066,var_4067,)
output = call_4065
func_4068 = relay.Function([var_4066,var_4067,], output)
mutated_mod['func_4068'] = func_4068
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
call_4086 = relay.TupleGetItem(func_1192_call(), 0)
call_4087 = relay.TupleGetItem(func_1194_call(), 0)
output = relay.Tuple([call_4086,])
output2 = relay.Tuple([call_4087,])
func_4089 = relay.Function([], output)
mod['func_4089'] = func_4089
mod = relay.transform.InferType()(mod)
mutated_mod['func_4089'] = func_4089
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4089_call = mutated_mod.get_global_var('func_4089')
call_4090 = func_4089_call()
output = call_4090
func_4091 = relay.Function([], output)
mutated_mod['func_4091'] = func_4091
mutated_mod = relay.transform.InferType()(mutated_mod)
func_918_call = mod.get_global_var('func_918')
func_920_call = mutated_mod.get_global_var('func_920')
call_4140 = func_918_call()
call_4141 = func_918_call()
func_1420_call = mod.get_global_var('func_1420')
func_1422_call = mutated_mod.get_global_var('func_1422')
call_4143 = relay.TupleGetItem(func_1420_call(relay.reshape(call_4140.astype('bool'), [13, 16, 6])), 0)
call_4144 = relay.TupleGetItem(func_1422_call(relay.reshape(call_4140.astype('bool'), [13, 16, 6])), 0)
output = relay.Tuple([call_4140,call_4143,])
output2 = relay.Tuple([call_4141,call_4144,])
func_4146 = relay.Function([], output)
mod['func_4146'] = func_4146
mod = relay.transform.InferType()(mod)
output = func_4146()
func_4147 = relay.Function([], output)
mutated_mod['func_4147'] = func_4147
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4193 = relay.const([[[-3.572892,9.037286,-2.556149],[-0.361520,7.981561,-9.465404],[-7.282767,0.653308,4.449722],[-7.231984,-4.117416,6.182162],[9.005638,9.580724,1.871174],[-3.443629,-0.610836,5.799230],[-3.734650,-5.419645,4.486388],[9.952049,-6.100200,7.001335],[-7.186390,-6.504123,4.595850],[-9.282024,9.490231,6.982394],[-8.550466,-2.261803,7.748949],[3.789800,-2.622122,2.141200],[7.260473,4.460037,-8.964192],[7.036120,-8.577995,7.944778]],[[4.326189,5.804813,9.508978],[-0.205798,-0.412206,-8.767330],[-4.869825,8.802930,2.624835],[-1.387197,6.266273,2.900987],[0.433405,-0.933944,-6.037276],[4.418116,4.062831,9.697794],[6.069641,-2.115559,-1.985685],[8.142937,0.780103,2.057484],[6.173496,8.836147,9.308265],[-6.306504,0.951056,8.329914],[-7.702415,-7.226373,6.044352],[-4.893046,5.686392,-8.163493],[3.309611,-9.435070,-1.445041],[-0.958614,-3.857626,-5.954188]],[[-2.549699,-6.284923,0.488662],[4.482370,-8.591777,-2.523638],[7.055137,-9.871820,8.057571],[1.320083,-6.051354,1.386840],[1.761188,-8.405991,2.802318],[-4.163660,-8.787889,-1.473292],[-2.940311,2.517304,6.157351],[-4.512101,7.142680,9.516256],[5.238421,1.527345,-0.495643],[-0.723406,-0.985707,2.658721],[9.776941,2.455150,-8.572908],[5.983838,-7.554147,4.652512],[-5.162719,-4.159309,-8.420784],[4.276379,-5.158396,3.968931]],[[3.772464,4.977170,4.712961],[-2.342109,-0.149029,-6.290445],[3.344541,7.173300,-1.955557],[7.664311,-7.865326,-0.100025],[5.686735,-7.447665,4.129420],[-6.543532,3.105985,-0.235169],[4.752347,7.092166,7.857453],[-0.465490,2.040059,-2.563503],[0.029920,6.545581,2.285589],[-7.964895,8.694032,0.824297],[4.377200,6.449439,7.547443],[2.399023,-1.281793,-7.281280],[-3.271315,-9.060211,-3.264019],[1.621908,-0.267367,2.538489]]], dtype = "float64")#candidate|4193|(4, 14, 3)|const|float64
uop_4194 = relay.sin(const_4193.astype('float64')) # shape=(4, 14, 3)
uop_4196 = relay.rsqrt(uop_4194.astype('float32')) # shape=(4, 14, 3)
func_3025_call = mod.get_global_var('func_3025')
func_3028_call = mutated_mod.get_global_var('func_3028')
const_4207 = relay.const([0.475208,-9.216672,-5.255319,0.455532,5.791551,-0.789884,5.486508,1.788674,7.172255,-5.473910,-9.785536,-7.116379,-4.559704,1.379115,-7.630611,-1.066698,4.984965,5.212343,3.103262,-2.864359,-6.269118,5.387429,-1.800105,2.116638,-6.920796,2.974253,-0.669060,6.534894,-9.690518,-6.764689,-0.080825,5.754764,8.015864,9.855642,8.847430,8.445140,-3.987077,3.677014,9.741208,-2.070241,-6.575392,-2.375986,2.354398,-6.064012,-8.984862,-3.473014,2.148080,-1.819356,2.077043,-4.776074,3.174154,-9.235255,-3.165616,-7.596305,-7.462707,8.962450,-5.912734,7.920786,6.364925,-3.994623,-2.542996,-2.553990,-7.189545,-2.996989,-7.673331,-5.914827,-9.708968,8.991694,7.227445,-5.260042,-2.708852,-4.492895,8.623286,8.313829,0.880042,-6.219047,-6.476341,-5.770310,4.073319,-6.428675,3.983783,7.418877,-8.214338,-3.001559,-0.732685,1.985062,0.731131,-6.019908,-7.019657,2.294775,4.151712,3.408661,7.859042,-0.506740,8.018234,-0.354431,3.042853,-9.911432,0.959560,0.879644,-8.594591,-2.524113,2.012961,-1.709160,-7.897005,2.950205,-0.265996,-1.241338,-1.229918,-6.968790,7.799899,-3.373490,1.570819,-8.785137,-5.969816,-1.076771,4.321826,-3.522162,6.775881,-8.247830,-3.537188,3.591200,-2.826366,-3.143492,-1.425413,-4.873711,-5.562873,3.212198,-7.326155,-6.489637,9.833760,4.299735,6.060523,7.387036,-5.929916,0.313173,-2.230131,5.115938,-7.141798,3.584572,4.066929,-5.535013,3.651507,5.755783,-6.552459,-7.996400,-1.192950,-9.287342,7.500629,5.335709,2.310262,-9.875330,4.216116,-5.960885,-1.938209,7.051305,-0.782151,8.985885,8.756647,1.152653,-4.761423,2.293692,9.189871,-5.210091,-4.808429,-6.229782,-7.702473,1.950187,3.929337,7.412295,7.739660,9.927774,2.305320,5.699929,4.417887,-6.360460,-8.136170,-0.468636,9.864806,-0.646674,-1.425871,2.321284,-2.271403,0.862400,-9.464082,8.386882,6.754912,3.941005,5.213386,1.790018,3.691293,-6.164572,9.827694,8.944272,9.925618,-1.407463,3.163597,6.966686,-9.502236,8.298176,0.680536,5.352157,4.586199,2.750725,8.166119,2.053807,-5.507152,2.200164,-7.760225,-7.361354,-1.462380,-3.735536,-2.215045,8.646236,-8.998546,-0.789458,1.540279,-7.378699,-2.385294,4.973326,-2.879699,5.915633,-0.931698,-2.229904,0.804918,5.917739,-3.725621,4.899765,9.232696,7.685926,4.022101,0.987153,0.162990,8.927286,-5.683021,-0.747080,4.617955,7.990817,-6.300186,7.807181,4.842502,9.948648,-3.420335,-7.101298,-0.968967,2.147421,4.376741,-4.193858,-1.318108,2.618312,7.997106,5.567981,7.000418,-9.505589,-5.597250,9.859692,-6.368986,4.275703,-8.782174,-4.451794,-4.073617,-2.466830,0.495920,-7.298482,2.574394,-3.164582,0.762126,0.764942,-3.136743,-0.732160,7.902080,-4.101215,3.595776,-8.421173,-2.401490,-2.489649,-6.469472,-0.182600,6.109502,1.317168,-4.166819,8.488626,5.707028,-3.262876,1.804345,4.152297,3.240991,-8.563858,4.724199,-9.664256,-8.526902,-6.766870,1.526275,-9.517049,-9.261509,5.898336,0.533644,-4.054791,-4.503349,-5.901447,-4.935062,-9.385989,-5.754324,-3.651362,-6.684451,3.668009,5.056013,5.046742,-5.743606,6.587527,-2.972911,-3.361855,-0.440633,-5.041808,8.934508,-8.199659,-0.203787,5.839895,9.715322,5.167789,-1.747159,-7.868136,-4.815410,2.467356,1.319864,0.206143,4.734057,5.049602,4.972569,-4.518840,2.945114,-3.775951,-0.020291,-0.340381,4.339116,7.319042,-0.713678,3.502983,1.495559,1.006476,5.780647,-1.544447,-5.987420,-6.997782,-0.459461,2.581299,2.294386,3.668729,8.305939,-7.453143,6.989838,6.724436,6.085849,8.490195,9.420767,-7.413084,5.970204,7.500429,-3.211178,1.669594,9.803209,-8.991164,-3.780359,-9.041140,0.494347,-0.113461,-9.700912,-8.057288,-5.573461,-3.593801,8.535666,1.775270,-1.701004,-9.036569,-8.590873,8.434850,-2.992044,5.400614,1.933766,9.213271,-6.774102,-1.679765,1.670417,-6.521101,-6.787775,0.271956,3.401079,-8.808373,1.706345,0.342216,2.584829,9.203432,-2.747872,-6.904294,-6.113197,0.216779,-4.206212,4.611869,-2.359820,7.941923,6.401755,-9.733881,1.525877,-7.168815,-6.587787,9.568819,-9.101117,0.774547,3.542505,-4.329838,0.564179,-0.643227,9.273447,8.943896,4.736964,-8.598802,4.986783,-8.944602,-0.517671,-1.606804,-1.454705,-0.123912,-6.217185,7.575458,9.284338,-1.911352,0.945256,-5.525850,-8.196719,4.916260,8.177427,-9.119733,-9.967748,6.091137,7.435164,5.746984,2.207443,-8.380482,-6.410705,1.034443,-5.348776,-9.908056,-7.233841,-1.172565,8.627209,0.717792,-5.818619,1.707431,-9.777793,4.250307,-7.960613,3.594778,-7.766043,-5.379233,4.850146,-7.675598,6.757530,-7.427400,-7.264311,-8.438599,-5.362725,-2.189072,-9.760165,2.152840,-6.623605,-0.132207,-1.579844,7.229223,-1.859836,1.021725,0.877180,7.195217,-0.963940,8.769507,-1.537002,-7.774003,7.436561,8.778627,4.301229,-7.377043,8.656393,-3.050840,-1.826183,-2.738388,5.691554,-7.631471,-7.741880,1.908266,9.003237,4.022865,3.557912,-7.275877,-6.834257,-8.092403,1.706738,5.765169,8.456685,-6.395896,8.501351,-5.537354,-3.144621,-1.958216,-4.536526,1.116329,-8.482097,-8.097589,1.602506,-1.801907,-8.132154,6.662538,1.768004,3.067230,-9.259119,-4.241704,-7.901664,1.937780,6.233331,6.766759,6.149419,-1.984531,9.357102,0.563177,0.343130,-4.849434,-2.834873,9.791628,8.097763,4.061658,-9.785297,8.558151,-8.364544,5.754643,-9.399676,-7.794835,-5.454288,6.464810,7.820663,-1.268976,-2.230420,-0.062936,-1.961555,-9.471758,-4.586312,9.118570,7.067057,-8.128925,0.936383,-1.131610,-0.587813,-2.428317,1.786264,5.359529,-3.380014,0.530395,-4.752083,-5.159428,-7.099581,-9.031492,-1.579110,6.400439,7.887969,1.716510,-5.486274,-5.437696,-2.412140,7.231156,2.974194,-4.038865,-0.221822,-1.931142,-4.607003,1.274606,-8.787676,7.071618,2.480288,-8.042376,-2.291158,-6.628613,9.680193,-9.658032,8.126486,1.334733,-0.502971,-3.131102,-5.145997,5.162521,6.294563,2.797350,5.995961,-2.246976,8.389267,8.226435,3.217255,-7.380994,-3.325760,-7.394004,-1.048979,-8.622146,-1.235555,6.321560,-6.673089,8.801280,3.577362,1.740053,3.180336,-2.360512,-9.877090,4.035665,3.626581,4.728488,-9.947416,6.633985,1.623630,0.168310,-0.813332,-9.100548,1.423063,1.973522,-3.191226,8.921008,-4.870806,5.725290,0.666699,-4.874778,-3.053757,6.263561,-1.802573,-9.135025,-3.485523,4.487023,-1.160490,2.254552,4.627738,8.068795,4.440995,3.359909,-6.114569,8.714089,5.408329,-5.175642,2.056470,-9.270659,-9.744686,6.490459,-1.181672,5.718774,4.671754,5.450368,3.520338,-9.706984,3.924892,8.403125,-6.808637,-1.234804,-5.548489,-0.179941,-6.135555,3.823531,4.802508,9.291764,9.719435,-5.917472,-4.933543,7.555079,-9.029068,-2.864775,-4.698992,2.534146,-2.643889,-8.231267,-7.864850,-0.677267,-6.226809,0.695203,5.463688,2.105938,-6.944625,3.370859,8.577579,-7.989813,-2.124250,-9.188506,-2.199862,-5.185750,1.466246,-7.240345,9.785300,-7.983584,-5.798128,4.007177,-8.828765,0.992144,-3.776477,2.395195,3.942888,-6.341224,0.602832,-8.876349,-7.402350,-2.658142,-8.734844,-2.992953,-7.523926,9.582386,-4.350423,-5.646885,4.408290,2.934005,-4.161004,-6.693316,9.171310,3.599991,7.272007,-6.437865,-1.602198,2.500456,2.875693,-6.118784,-0.947838,7.104283,-6.758882,7.823015,0.619416,-5.431918,-3.364764,1.533230,9.739162,-6.123771,8.367898,-1.572808,2.797245,-3.072629,2.482217,-8.339190,-5.294841,7.299974,0.794028,-3.293394,6.237452,-8.056127,0.235075,0.259229,2.821534,3.336915,0.549093,-7.140421,5.698284,4.605865,-7.491829,-8.975048,6.633269,4.364610,9.981750,8.154462,-0.046618,-5.483163,-2.545154,-8.077662,2.726128,-9.679500,-8.051378,3.226162,3.683104,-1.285187,6.822982,-8.144530,-9.687745,8.001241,2.073181,3.246093,1.342740,-0.338603,6.862949,2.215719,-6.971967,6.026625,-0.847042,9.236623,-9.462903,0.373759,-9.556949,-7.466914,-0.773869,-4.942110,1.720656,3.322076,2.622162,-3.411992,6.483550,8.942691,4.149407,-7.381852,-7.028919,7.796511,1.976268,-7.722514,-2.956704,4.792659,-1.055501,-9.685740,6.712781,-3.372914,7.397698,2.525605,-7.479602,4.547754,-1.811314,-5.009738,2.578439,3.968453,-5.406951,-3.756932,-8.092693,3.661902,-1.478913,-3.668896,-6.460634,-8.727533,2.224175,-9.774132,0.952408,1.136133,2.825921,-3.670331,3.842972,7.689663,4.512411,-0.750428,8.045423,-7.501199,-7.058424,8.802163,-4.872239,-6.903996,-7.436213,1.578011,-2.765028,1.662926,-4.079827,-2.284362,3.656044,-7.441243,-4.539927,-5.840930,-0.896638,8.032024,-9.769074,5.028848,-4.637446,-7.463461,-6.718334,-7.691712,3.228547,-0.024139,0.446648,8.464603,3.927451,4.954306,9.440473,0.392609,0.615925,-8.671668,-5.075550,-3.607294,2.075749,2.882580,-7.775660,9.328157,1.096126,-5.853693,-1.959990,2.610562,0.527065,8.566942,-0.957640,-5.310010,8.702708,5.027703,5.140145,1.752150,1.098816,-5.421959,-9.036412,4.621341,-2.348477,4.199340,8.645856,-2.644346,0.555090,8.572182,-8.414986,5.164639,-9.446477,3.329672,-4.636700,9.400583,7.763467,-6.264322,8.855613,1.348182,9.111102,-1.742756,5.861610,0.790355,6.698366,9.594732,-9.906339,0.735046,2.696581,-0.245851,4.904037,9.340656,-7.133288,2.442268,6.269453,6.960487,7.682077,-7.677078,-7.187746,8.651786,-4.287220,7.917277,-8.553947,-2.877011,-6.462377,9.922671,-2.248531,-8.430945,-0.182407,-2.206681,2.195495,-7.272450,0.555726,5.522267,-6.859274,9.807865,9.170695,-2.219218,-8.431910,-5.908688,8.700386,-7.123992,-9.958063,-7.945919,-4.416942,4.225880,-0.335341,-2.246724,-9.621826,2.227936,2.052817,3.673148,-6.329882,-0.007548,-2.973394,9.074632,-6.111787,8.541714,-1.493802,-5.658368,-6.468125,-3.094115,0.598737,9.553128,4.855210,6.280141,5.113476,4.806204,-6.929889,-6.617503,-4.541755,-0.151402,-6.122034,-5.786064,-9.878367,4.677891,-4.780330,0.760752,1.351166,6.009190,-9.412414,6.433413,5.946949,2.721551,-2.852461,9.363876,1.007196,0.347855,6.748792,-3.040253,-6.986128,0.467330,-1.858802,0.635647,0.856207,-8.816033,8.051073,3.003275,-0.116308,-8.357997,6.199286,-1.121135,4.592187,-0.637504,2.570867,-7.576085,-5.759942,-8.285706,9.434167,-5.640981,-1.685377,-3.542225,-1.744316,-1.207755,-8.122187,0.709016,-5.935433,-2.034929,-8.084723,6.720608,8.067420,0.154096,1.001711,-8.183963,9.636140,4.759139,7.535957,0.492614,6.619989,4.565647,-9.238589,8.992973,-0.570874,1.787664,-3.099805,-9.819962,-2.627785,-6.465616,4.193387,-2.299939,4.635478,-6.580754,2.778070,7.737756,7.230757,-3.559455,5.436863,1.520656,3.772079,-2.941952,9.535572,-4.966024,2.710435,4.527878,1.050727,4.597529,6.192483,-4.940700,-7.940756,8.637176,-8.099675,5.401303,-7.116527,1.795866,3.152791,2.510576,-4.397163,5.955414,-4.834429,-1.666449,-8.385863,7.388843,8.857484,6.500145,4.318398,7.010757,-8.434296,1.257560,2.216964,3.083999,4.517104,1.157961,-4.314654,7.329959,5.718621,-4.710076,3.922083,2.871096,8.110815,-5.685226,-5.937002,-6.859899,8.267874,9.343562,-5.055684,6.584120,0.160047,7.305607,6.969440,5.100596,-3.164071,4.465427,1.392295,-8.570205,6.120614,6.522943,0.002841,-2.865784,3.223272,7.762080,-4.565126,2.046541,-8.215913,3.242905,0.189705,-7.983832,8.350188,-6.017036,4.309152,9.147577,1.648905,-3.488259,9.998131,0.146878,-2.255916,-2.880612,-1.199887,-6.555836,2.538981,-0.073068,-0.377588,-7.756705,-5.312309,-5.802773,-9.510638,-4.256992,-6.464735,-1.583462,-8.998220,9.536147,-4.020876,2.666657,1.252630,0.688541,-2.545036,-0.325937,2.079363,-0.194189,8.132785,2.606488,-5.001368,8.610840,-1.215582,-7.670514,-6.840859,7.565803,-8.000783,8.581551,-7.987304,-0.914464,-0.667691,-2.875212,1.888694,-9.763532,8.002121,-2.681930,2.586533,9.289560,6.981279,-0.106281,6.163982,6.616898,7.144519,2.670531,9.702483,-8.081047,-7.926172,5.011741,6.250797,-4.677739,2.370659,-5.863185,7.240824,-0.341099,-4.982167,-3.912724,-9.331831,2.129073,-2.714260,-8.974471,-5.596817,0.552839,7.702214,-2.586323,-9.867509,0.831520,-3.125334,3.933672,0.593299,-3.050345,-2.360920,3.624789,-9.237379,-9.363107,-9.776982,9.194221,6.724713,8.555877,8.873450,0.094615,1.037730,-5.584262,0.514140,6.037442,9.670936,-8.391509,-1.902298,2.272044,-7.710855,7.283749,-2.300315,0.622905,1.862738,-4.568018,-1.810200,8.860350,-8.071891,3.315868,6.946622,4.696491,8.716523,-4.870084,8.205978,-7.083820,-5.095856,-4.997032,-3.840157,-1.505517,2.967718,9.843447,9.315606,1.623928,-5.293382,3.426089,9.983714,-5.440867,-9.216321,-4.897077,-5.753150,6.628909,-4.141139,5.134843,1.337974,-0.762879,-2.908566,-1.830356,-4.839713,-5.868139,0.037625,-2.706954,-0.807496,9.975944,-8.002839,-8.287872,-6.215727,5.498647,-9.149499,-0.354187,-7.010843,-4.066158,-0.794675,-8.326401,-9.936542,6.681958,-6.822430,-9.128999,-2.523482,4.154843,9.584066,-3.037585,5.740424,-3.890616,-6.160653,2.483538,9.085433,-6.539402,4.356550,7.466045,8.729620,2.126009,-1.358805,-1.463072,9.993434,0.806046,6.668566,-8.346010,5.819505,-1.766163,1.860130,5.952334,6.890950,-7.560271,-6.099788,-8.535472,-8.269014,-3.701722,5.381660,-2.588955,-0.182947,0.189625,9.704394,1.327282,-0.102393,-2.883159,7.003506,9.047184,5.171118,8.607029,2.499446,6.379197,1.943461,-7.939232,-6.916027,0.960957,5.928111,8.895250,7.562594,7.518635,-5.990407,1.790074,0.748205,9.645529,6.325136,6.934637,-8.865355,-8.083828,-5.568363,1.193560,1.887468,1.899008,2.492507,7.534255,1.572644,9.874107,4.723762,-5.613452,5.903524,1.683591,-7.104711,0.266770,-0.447883,2.367628,-3.975347,0.597677,1.588846,-2.321038,8.591061,1.316699,7.740549,2.568455,-1.129363,9.644020,6.592652,-5.226917,5.845248,-7.657923,8.597359,-6.581024,-2.942130,-0.849429,8.811957,9.096254,-3.453909,3.674741,8.470581,-8.235262,-6.009192,6.585568,4.449925,-4.407038,8.083242,-4.951217,-0.439042,-7.284090,-9.514005,-6.057732,-6.091257,5.906525,8.627005,-8.149272,0.255028,-2.368892,-9.442220,8.634931,2.123438,3.614177,-5.100936,6.924695,-2.648913,-5.446391,-5.333520,-1.836086,-3.888458,-5.592492,3.891961,-0.732839,7.041558,-2.143902,-8.357166,9.600182,7.915044,-6.907570,-0.778901,-4.723688,4.912886,-9.370438,-2.668630,-2.598826,-6.705588,-0.656533,4.793849,-6.636608,2.789090,5.998088,-2.226744,5.627579,9.651931,3.740871,8.503937,-3.030134,-5.276829,1.919784,-3.473022,6.488566,-1.318653,-4.895125,-5.689527,-3.565591,6.810137,1.994395,8.574689,-3.828352,-8.951960,-3.597197,7.467699,8.412484,3.079123,-6.876955,-8.171934,-0.374060,6.075839,2.447347,0.229987,2.980100,1.214327,-3.797624,6.626110,4.670883,6.641991,-5.971191,-8.333886,-1.915884,-1.956001,9.960356,4.836815,1.237045,-5.481590,-3.789057,-7.878476,8.637026,6.946145,-6.137906,-1.823204,-5.187638,-9.447052,-9.417893,-4.424403,-6.700023,-5.044231,-2.121877,-9.524253,-5.777825,-8.707058,-7.724743,0.270010,-1.973614,-5.697850,1.314016,-1.430686,-5.168004,-5.990381,5.458281,8.719291,2.518459,-9.384470,3.396930,3.894987,1.689756,8.878684,0.856436,7.271792,3.893149,-5.521276,-9.843752,-2.167802,9.780470,-6.649171,-5.834786,9.554540,0.332254,3.955414,-1.311595,-6.035516,-7.134322,7.324413,-6.477182,8.442057,-5.350655,1.479906,-1.402921,1.690216,-7.214762,-1.590979,-7.302753,8.255737,7.820705,-1.878390,5.150643,-4.570435,-9.774819,4.125778,-5.055335,-7.476409,8.890270,-3.986904,-4.132301,4.431431,5.600199,5.991140,2.360755,7.292971,8.396015,-1.258041,-3.621718,-7.042708,1.999760,-4.463223,-7.842063,-8.863203,-9.733127,2.850493,7.484001,7.610039,-3.991558,-0.902506,3.886743,0.301402,1.576678,-5.080412,-5.071030,1.744463,-4.410362,1.841904,-1.099413,-5.242562,-1.051405,4.596688,7.551632,-8.612207,0.651998,8.688637,-6.908774,4.273718,4.128901,-1.329766,-7.822055,6.885002,7.419501,1.230747,-3.806075,-6.506109,3.627898,-1.886907,-3.601022,0.525925,7.630881,3.654520,5.720474,-8.477802,-7.475578,-0.502197,-4.571327,3.601961,-0.556346,4.148078,0.220881,-6.490314,-4.811582,7.466378,7.491362,-5.808991,4.558637,2.314510,8.917508,7.750305,-0.695694,-2.228312,8.216368,-6.784305,9.051348,7.714627,6.201447,0.067842,-2.086808,-2.384253,0.725966,4.820708,-9.725362,3.868382,-6.038293,2.581348,-1.747111,1.534278,-8.765176,-8.213366,7.667933,-8.747271,1.599086,-3.291155,-7.044544,6.752144,-7.498147,-0.475612,1.978668,-6.145504,1.644257,-5.746609,1.047409,7.524038,3.846935,5.193459,4.298120,4.258010,-6.130740,2.495401,1.086991,-0.241154,7.082428,-8.211342,4.220476,-3.915027,7.895136,-5.332584,-2.495687,-0.268226,4.216908,-4.713994,9.865618,6.688420,-5.833946,-1.653955,-7.223026,1.923755,2.190321,-6.480992,-3.188020,4.360286,-5.319585,-5.562798,-2.173608,-7.298886,7.133405,-7.625215,9.891484,-3.609453,-1.772197,8.937086,2.550386,-3.241588,-1.561381,9.976038,0.873872,-9.949054,6.297303,-9.016044,1.437043,9.560918,-9.599751,7.061015,-4.309354,7.303880,-0.958961,4.329151,2.971429,8.626823,-5.139060,-1.614666,8.062341,3.782969,9.153970,-6.107794,7.307204,6.356650,-3.810689,1.153764,-8.365818,5.472603,4.045845,4.999161,1.167834,-6.965547,5.586690,8.974313,-0.844001,0.545291,0.076196,-0.513452,-8.381286,-9.686404,6.667350,3.976348,-2.465707,-0.637633,7.088102,-9.233395,-2.699841,-9.586488,3.777763,7.408657,6.919117,1.553222,-7.338792,2.852655,-7.940854,8.235929,3.974944,3.147899,-9.610248,5.698367,0.996555,-1.740763,-0.538122,-8.846892,-5.555408,1.346747,-3.476423,-9.413426,1.079155,0.572250,8.674029,9.737829,2.630890,-8.441657,-7.386781,9.143911,5.103746,-5.930320,9.261070,2.399987,-9.179474,3.758314,-3.531347,4.617361,2.346268,5.385280,-7.873906,1.829224,2.381722,6.161344,9.721010,-6.011784,-3.020157,-3.439346,8.981222,9.872596,0.416012,-5.280850,6.953380,6.361051,9.584269,6.438859,4.507837,0.632148,6.684896,-5.073660,-7.539222,3.176655,7.649183,-7.598614,-2.105570,-1.836892,-1.788540,0.138257,8.784558,-4.520771,2.395732,-5.797997,-2.149458,0.301256,-0.632833,-8.839927,-3.118080,3.263882,1.911208,-6.205070,8.153836,9.917312,-8.563237,7.237427,5.736207,-5.798894,-8.777690,1.952486,-4.251987,-7.354335,5.393331,1.614158,-6.972027,7.176442,-3.994693,6.162435,2.413086,5.413423,0.088357,0.488534,-3.557339,6.581163,-2.536819,5.659465,-4.565734,6.922829,-6.090817,8.861511,9.117419,6.358924,8.569983,1.057949,6.507639,-5.399629,-0.580055,-1.251351,8.767639,8.896085,-0.980816,-6.754093,-7.359366,-1.116420,8.787074,8.569450,5.427285,-8.175613,-9.922524,0.616963,0.621186,-1.800852,0.171364,-3.828221,5.241714,-1.451520,0.398559,-3.686138,-3.574479,-1.338978,-8.258568,-2.695588,-9.396110,-4.129378,-2.403710,6.542323,6.336868,4.328150,-6.252390,2.684434,7.396914,5.119975,0.092174,-9.289787,8.961102,8.676294,6.057910,4.646958,-7.897806,-2.009748,1.295122,-0.851626,6.662717,9.549525,-4.897834,9.964582,-0.595461,-6.076035,-9.101499,7.715062,3.653651,-6.172089,-6.888671,4.844197,9.758304,9.859600,8.990322,-5.029862,-2.886756,-8.613404,-7.191164,-3.469555,-9.181667,-0.074694,-8.608350,-5.149988,-2.819524,-9.477451,-5.518703,-4.753357,8.450762,-4.796495,6.224869,3.197584,-4.661754,-5.111427,-3.053524,6.424901,9.236345,8.782309,4.350646,-0.745603,-1.378075,-4.024154,-6.618290,2.846248,6.996151,-9.302007,-0.453073,-9.533414,4.941388,7.398849,1.595939,-4.756722,9.813292,-2.947004,-6.441630,-1.822375,8.691890,9.761368,2.694427,7.670812,8.984858,-6.389276,-1.938166,-7.843515,5.720141,2.111957,6.821213,-8.378672,1.473923,9.364908,0.750665,7.125054,4.415514,-0.124940,2.573034,6.997294,7.267794,-2.703656,-1.496919,8.996990,-7.796620,-2.649229,-0.917453,-5.224230,-9.105980,8.738864,-5.840343,-6.155561,-8.107291,-9.398255,3.683593,-9.862536,5.691792,-9.683214,4.922753,-6.386341,-1.629565,4.317642,5.833755,-7.242542,-2.888037,4.267065,-2.964919,-7.757425,-8.414801,-2.318087,-7.066839,-1.437102,5.195135,2.264656,-0.894686,4.537671,-9.028495,2.587510,-8.360579,5.915223,-8.734071,8.374865,7.344309,2.119053,5.841187,1.366626,-0.891338,1.744183,-8.093823,-9.157503,-8.441192,1.622042,5.237229,-6.086852,-1.909571,-1.826072,-2.591424,-6.666208,9.459404,6.442402,7.681970,-3.460360,-2.149629,-0.282396,-5.941706,3.290525,-5.980878,4.352343,-9.517652,8.302008,-9.883888,8.156189,-3.018198,-5.817146,0.248980,-6.419480,-8.793665,-0.299001,-3.529710,0.604058,3.224415,-3.871665,0.883818,3.462671,6.022334,-4.347020,-1.801251,6.394013,0.418392,-8.192625,2.368873,-0.211334,3.998799,5.663178,5.418386,-4.638068,3.520913,-2.435223,4.204250,-4.079395,-5.972724,-4.638948,-6.675308,6.422679,0.998124,-1.647547,-3.728708,-0.096593,4.187509,-3.875969,-2.879072,-7.268306,3.275204,-5.887656,-4.020066,3.726873,5.872375,-7.901396,8.764405,-9.237975,5.497670,-7.410451,0.569037,-5.426324,-8.019927,1.857286,1.044071,-8.065309,-2.913062,3.865177,-6.412216,5.443719,-6.265280,4.971039,-8.192457,-1.259167,6.623880,9.989616,9.506595,3.079451,-4.970532,-5.104838,-7.310564,-9.829558,5.239172,-7.210325,6.101707,-3.656536,3.340625,9.857498,4.710193,2.538586,-0.572756,7.416525,-4.256645,4.293033,5.140699,1.249604,6.387304,-1.536407,4.204786,-3.694751,-3.406271,4.277692,-6.406999,3.143832,-0.857001,-3.149322,-5.655279,3.349626,9.260102,9.301822,-7.953024,-2.495894,2.223035,4.975821,1.236672,6.333400,-7.581933,2.436013,1.826747,-9.161401,-7.804977,0.452914,-6.320973,1.892231,3.054494,-9.118903,6.097226,5.133481,6.911231,-8.035681,-5.183938,-7.581327,-3.095768,-7.884194,6.183439,6.141326,4.596469,-4.960054,5.066308,9.518641,-5.231946,9.289075,6.418061,-4.885129,5.482189,1.584085,-1.500831,-3.397320,-6.533733,4.498557,2.716825,9.982066,4.636842,-4.423435,2.218410,8.125617,6.048595,-9.452455,-0.044492,5.893995,4.187042,3.409573,-8.643578,-7.808776,-8.798971,-8.384395,-2.073667,4.988898,7.278817,2.358793,5.671059,1.597912,5.542552,7.137234,-3.159220,0.895944,-3.407817,-1.608368,-3.749235,2.122871,-6.885799,-7.941579,4.083768,-3.308007,1.939059,5.901890,-6.442649,2.841052,-8.983391,8.956490,1.960975,-0.598717,-9.281623,-3.182460,5.226885,3.555154,-5.505870,3.039333,2.783169,-0.330477,5.613459,-4.364568,-7.585522,4.295377,-7.981801,-0.618133,8.881118,5.030216,9.869514,-3.106062,9.185321,-8.594443,1.060132,9.246690,4.056045,0.131046,-1.303040,-4.486702,2.009337,1.993512,7.245356,0.941049,1.371154,-9.131155,-4.052820,4.071778,-2.851127,6.088176,9.875771,2.786066,8.341454,2.766385,-5.144774,-4.512357,9.793647,9.500289,5.000464,1.683122,-9.786644,8.925478,-9.081167,-9.225840,-0.222698,-5.804121,1.625852,-8.946361,-9.992487,-2.281654,-0.931350,-4.780920,-8.546772,-5.776967,-3.410398,-5.907061,4.327626,-4.762133,3.608342,-7.034732,-5.693725,1.938139,-0.802004,-7.406790,-9.376953,9.861324,-5.840419,-7.503829,-4.099187,-2.073602,5.356661,6.333519,3.018727,-8.844705,-0.273021,-5.934425,-6.850751,-4.729902,-5.291820,2.764646,2.793881,5.992868,8.038081,3.673450,-4.228323,-7.663899,-0.175284,-6.148197,5.304967,-2.110221,0.230619,3.808078,2.971445,4.635976,-4.094017,-5.340831,4.298393,5.104141,9.921559,-7.652761,0.563856,1.174161,-2.351490,4.494430,6.662552,-4.196937,-4.599702,-7.465371,6.174557,0.068555,-1.582835,-2.506516,7.484626,-6.968554,-1.957500,-6.232226,-5.261884,6.082990,4.678387,-1.186904,7.690464,-2.713730,-5.485642,7.414493,-7.950134,-5.709552,-8.593771,-2.155365,-5.747402,-8.283872,-6.013276,-2.614004,8.744718,5.033746,-5.005049,7.630378,-0.411208,-0.785087,-3.363013,6.286821,-3.580281,0.541641,-4.138695,9.739793,8.280259,7.511154,-1.546442,-4.339537,3.893909,3.925665,8.244735,2.362614,-2.489702,7.623722,2.699399,5.352207,-6.423674,-3.616393,-8.360961,7.235148,-7.560948,8.258325,4.804952,-9.312654,-8.053932,-2.561439,-0.391063,1.872896,2.702335,1.356522,5.266953,6.858213,0.313956,-7.662734,2.953259,3.870833,-1.585378,-2.119540,-7.956566,8.784584,-7.336419,9.482865,0.691854,7.181502,6.194254,-3.540622,6.433690,-3.630008,5.479280,2.505152,-8.187529,-5.250360,9.724523,-5.316543,3.685883,-6.349474,-0.852710,-3.762461,8.565183,-5.118606,-3.863274,5.906176,-0.170399,3.231823,7.187808,-0.041336,8.297141,-1.982383,-9.440737,7.830690,-4.850048,6.118142,2.766963,2.175952,-4.809198,9.012859,-9.208652,-4.764432,-3.419261,-8.679314,-5.643872,5.575728,-1.296040,7.768702,8.351455,-8.534515,-4.682198,-1.581156,-7.888423,-1.418348,6.727852,3.717378,5.327101,7.723014,3.733848,1.626736,-3.952053,-0.203785,-8.426455,4.372679,-2.931263,-6.248584,-7.215742,-8.795911,-7.325322,5.229660,-4.188201,9.936943,-3.559628,3.092652,-3.038858,-5.497002,5.487093,8.059496,-2.593750,3.225983,3.591251,3.309722,-5.507799,-1.248411,5.466888,7.641677,-5.400966,8.752888,1.349886,0.403413,3.797867,-1.844288,-2.430529,-3.044862,8.482064,4.627344,4.104570,-7.803640,-3.385191,-5.705403,-8.803077,1.624334,-2.341550,3.759076,0.482126,-5.022883,-9.617894,7.919020,-8.449978,5.515364,-9.239935,-2.522437,-4.511605,4.976686,6.498084,-7.120032,3.508991,8.142173,-5.574634,6.147636,8.836162,-2.671434,9.449413,-8.048806,2.463501,3.119604,-0.970739,-5.240859,-0.150555,9.915178,2.799812,3.749180,1.307100,9.366305,1.812795,8.241956,-2.426476,6.212753,9.771752,9.749293,3.402812,-5.660832,9.568364,-1.650086,1.911427,5.891024,4.467766,1.088291,6.726730,-8.668373,-0.517120,8.103182,6.051985,-5.636909,-2.557621,-5.619003,-8.963592,5.795646,1.480077,7.439468,1.925537,8.831130,0.307464,5.680046,9.323773,9.657182,6.823097,-8.013069,4.248263,-5.662566,7.523221,-8.034343,9.055592,7.356629,1.027860,7.180895,2.932303,-1.354877,-5.256375,-9.163297,7.165271,4.143429,-7.391048,-9.664021,-3.396291,-9.242008,5.791347,8.796436,-0.983567,0.398418,7.919403,5.571229,9.060763,1.513658,5.455676,-2.213908,9.890342,-1.677442,7.008983,-9.360865,1.604242,9.702604,3.519377,4.052199,1.788063,5.025095,-9.448867,-2.113718,-9.693064,9.804494,5.753945,5.792648,4.883393,-0.462611,-9.437950,-7.450625,2.890748,-8.403333,-5.603210,6.222161,-6.512086,-6.643342,9.171455,-5.864937,-0.499481,6.568790,8.685357,-7.036408,-4.139103,-7.920727,2.727733,-5.405853,-1.863665,1.672415,4.896395,0.765569,-0.158878,-9.867113,-2.281496,4.180593,-9.658862,-5.179071,4.261008,-1.666736,2.934998,-0.010809,4.390556,-1.136798,5.061320,-1.300988,-0.430948,-0.685777,4.435605,-3.974083,-8.763571,-1.729125,-4.615424,-4.164083,1.230324,-2.046675,5.141951,-5.246452,8.914602,2.349539,-3.887570,8.730694,0.482433,3.719664,-5.131208,-4.917817,-7.741422,4.890387,0.064926,-8.170039,-6.348086,4.943936,-9.746117,-4.580508,-9.513723,-6.964562,3.833428,3.139454,-8.726432,5.060426,-0.982696,8.360828,-4.203333,-6.831838,-8.491390,7.711534,2.333031,5.645199,-5.276541,9.865427,1.040724,8.504830,-9.601406,9.484016,-1.940475,3.374543,-9.861933,6.714789,-4.394850,-4.769344,-2.077823,8.050412,-2.622338,6.847653,3.395470,-9.839447,4.887361,5.901286,-7.682284,-2.158491,-4.093958,-1.398373,-7.951849,2.174063,2.525919,5.353426,0.364550,2.557376,2.384076,-3.580163,2.190613,6.957821,2.738727,-0.162861,7.712573,-5.792083,2.478015,-5.291551,-4.561815,-5.918364,2.952533,9.970574,-1.100375,1.624080,-3.476492,-8.759787,-3.567346,-8.389803,4.663657,6.117516,2.922967,-3.045990,-8.835130,-2.905822,-0.234780,-9.881574,-0.172585,9.725865,-7.572692,4.496310,-2.053917,3.400533,4.970035,-0.871808,-6.607855,-5.171073,6.479120,-4.699906,1.871484,-0.520262,0.024001,-6.618246,9.343767,5.505966,-5.074040,-4.315077,-1.175272,5.665770,9.497837,-7.429438,9.324596,6.465036,8.813627,8.444965,-0.175839,0.587635,-3.796481,6.002456,3.583062,-1.816568,2.817700,-7.132040,-6.653308,-3.974425,-0.082872,7.425754,8.514402,-6.364503,9.527266,7.880192,-3.681288,5.584468,-4.623113,-1.455265,9.856747,2.749498,4.833083,4.440104,8.082774,7.189332,-6.477423,-8.261309,7.304217,0.546315,-3.522680,-7.193949,5.196450,1.356232,-4.432737,3.111388,-2.423367,4.217125,-7.912137,3.046026,-3.613474,6.725742,-0.311141,-3.632028,4.525725,-2.749710,-6.459625,-8.731940,-2.083888,-8.043528,3.899027,4.991119,-7.436490,8.633308,1.649478,8.756582,6.933267,-9.920954,-8.347967,3.275333,-6.915031,7.996737,-3.400444,-4.944629,7.728690,5.903910,-1.864522,4.649110,5.937800,-3.274219,4.506003,-4.972767,-5.573157,-5.813522,9.251948,-3.303546,0.393919,6.102332,4.859415,7.118592,-1.676872,3.713273,4.205070,2.478690,5.489112,1.505592,2.423169,9.204458,-2.086135,-9.347033,6.647746,-9.969780,-9.415720,-2.636484,8.598303,9.290548,5.765953,0.989631,1.202368,1.448237,-3.485174,3.197785,3.661409,7.790473,0.426308,7.435577,5.175650,7.955770,0.518383,2.848711,6.521178,-0.584273,-1.718844,0.009089,5.925905,-3.864346,6.604530,8.822147,6.988974,7.695561,6.715764,4.231679,-8.353904,-8.676804,2.294150,-3.224463,-4.442752,4.053788,-3.984382,-8.779087,7.395925,2.676680,8.301658,0.967543,-5.809248,7.263203,-6.829109], dtype = "float32")#candidate|4207|(2912,)|const|float32
call_4206 = relay.TupleGetItem(func_3025_call(relay.reshape(const_4207.astype('float32'), [13, 16, 14])), 3)
call_4208 = relay.TupleGetItem(func_3028_call(relay.reshape(const_4207.astype('float32'), [13, 16, 14])), 3)
bop_4210 = relay.maximum(uop_4194.astype('int64'), relay.reshape(const_4193.astype('int64'), relay.shape_of(uop_4194))) # shape=(4, 14, 3)
output = relay.Tuple([uop_4196,call_4206,const_4207,bop_4210,])
output2 = relay.Tuple([uop_4196,call_4208,const_4207,bop_4210,])
func_4214 = relay.Function([], output)
mod['func_4214'] = func_4214
mod = relay.transform.InferType()(mod)
mutated_mod['func_4214'] = func_4214
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4214_call = mutated_mod.get_global_var('func_4214')
call_4215 = func_4214_call()
output = call_4215
func_4216 = relay.Function([], output)
mutated_mod['func_4216'] = func_4216
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4280 = relay.var("var_4280", dtype = "uint8", shape = (7, 6, 10))#candidate|4280|(7, 6, 10)|var|uint8
var_4281 = relay.var("var_4281", dtype = "uint8", shape = (7, 6, 10))#candidate|4281|(7, 6, 10)|var|uint8
bop_4282 = relay.logical_xor(var_4280.astype('uint8'), relay.reshape(var_4281.astype('uint8'), relay.shape_of(var_4280))) # shape=(7, 6, 10)
uop_4287 = relay.log10(var_4280.astype('float64')) # shape=(7, 6, 10)
uop_4297 = relay.cosh(var_4281.astype('float64')) # shape=(7, 6, 10)
bop_4305 = relay.minimum(uop_4297.astype('float32'), relay.reshape(var_4280.astype('float32'), relay.shape_of(uop_4297))) # shape=(7, 6, 10)
bop_4308 = relay.floor_mod(bop_4305.astype('float32'), relay.reshape(var_4281.astype('float32'), relay.shape_of(bop_4305))) # shape=(7, 6, 10)
output = relay.Tuple([bop_4282,uop_4287,bop_4308,])
output2 = relay.Tuple([bop_4282,uop_4287,bop_4308,])
func_4321 = relay.Function([var_4280,var_4281,], output)
mod['func_4321'] = func_4321
mod = relay.transform.InferType()(mod)
mutated_mod['func_4321'] = func_4321
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4321_call = mutated_mod.get_global_var('func_4321')
var_4323 = relay.var("var_4323", dtype = "uint8", shape = (7, 6, 10))#candidate|4323|(7, 6, 10)|var|uint8
var_4324 = relay.var("var_4324", dtype = "uint8", shape = (7, 6, 10))#candidate|4324|(7, 6, 10)|var|uint8
call_4322 = func_4321_call(var_4323,var_4324,)
output = call_4322
func_4325 = relay.Function([var_4323,var_4324,], output)
mutated_mod['func_4325'] = func_4325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_460_call = mod.get_global_var('func_460')
func_462_call = mutated_mod.get_global_var('func_462')
call_4366 = relay.TupleGetItem(func_460_call(), 1)
call_4367 = relay.TupleGetItem(func_462_call(), 1)
func_3709_call = mod.get_global_var('func_3709')
func_3712_call = mutated_mod.get_global_var('func_3712')
const_4370 = relay.const([5.098808,6.314918,2.318317,2.221856,9.416671,-8.716299,-6.548978,-6.596382,-0.746010,4.370185,-2.647250,-5.909136,3.377435,-6.087451,-9.166697,8.913727,3.038657,-2.822306,1.308537,5.242821,-3.570481,-0.670056,-5.537079,-8.987789,-1.981937,-6.627739,5.398985,3.371870,-0.706962,8.521791,2.252184,-6.713825,8.486070,-5.175938,-5.576536,4.024157,8.537894,5.484181,-7.850757,-1.689964,2.987247,-4.718560,-8.369043,-5.535439,0.545409,5.875506,-2.929465,0.672972,8.696484,-9.872635,6.489389,-8.983446,8.159034,-5.775003,7.701626,-9.181957,-5.777846,3.947435,6.863288,2.395300,2.926118,1.334310,-2.197776,0.169703,-9.882943,-8.417185,0.861078,0.499610,-8.628434,-2.124827,-5.445237,0.365468,7.954406,1.459369,-1.147330,-3.645913,-3.801822,4.387434,-1.802281,-2.342422,-4.570268,3.302924,5.990076,-3.678033,-9.571142,4.222304,2.104349,7.117182,3.779522,8.113730,8.208696,9.046428,-6.398081,6.326121,6.422422,1.571980,-7.124807,7.476067,7.782064,9.805101,-0.623272,0.321122,0.959310,3.192346,8.980138,-4.638671,-9.183827,-0.737448,-0.588474,2.713015,0.902961,2.222397,2.712297,2.527052,-2.596943,1.441318,1.224482,8.297829,0.911101,2.023976,1.501355,-4.885970,1.678435,-5.817439,-1.222337,3.117795,6.668246,9.085137,1.975729,8.130392,5.250916,7.063919,9.313153,-4.901214,0.609643,-8.001134,6.432887,-5.774470,2.060018,4.520444,-9.097250,-6.556094,5.892060,8.323632,-5.406302,0.965096,3.179729,4.655798,4.367663,9.932260,9.325314,3.013203,-1.509735,-2.514356,4.116425,9.095919,-3.069167,5.959917,6.507124,4.548080,3.103082,-0.421638,3.408162,-7.199992,8.159867,7.351971,3.603657,2.578620,-2.139095,5.658321,4.205335,8.490749,-2.474296,-7.158680,1.969295,-0.380961,-5.679157,9.710996,-3.736935,-8.926287,-1.138605,-1.831303,-9.543496,4.414585,4.422813,-6.650817,-7.870270,2.324196,-5.749058,-6.130382,4.848453,7.480886], dtype = "float32")#candidate|4370|(192,)|const|float32
call_4369 = relay.TupleGetItem(func_3709_call(relay.reshape(const_4370.astype('float32'), [24, 8])), 1)
call_4371 = relay.TupleGetItem(func_3712_call(relay.reshape(const_4370.astype('float32'), [24, 8])), 1)
func_4214_call = mod.get_global_var('func_4214')
func_4216_call = mutated_mod.get_global_var('func_4216')
call_4372 = relay.TupleGetItem(func_4214_call(), 1)
call_4373 = relay.TupleGetItem(func_4216_call(), 1)
output = relay.Tuple([call_4366,call_4369,const_4370,call_4372,])
output2 = relay.Tuple([call_4367,call_4371,const_4370,call_4373,])
func_4374 = relay.Function([], output)
mod['func_4374'] = func_4374
mod = relay.transform.InferType()(mod)
mutated_mod['func_4374'] = func_4374
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4374_call = mutated_mod.get_global_var('func_4374')
call_4375 = func_4374_call()
output = call_4375
func_4376 = relay.Function([], output)
mutated_mod['func_4376'] = func_4376
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4418 = relay.const([[-5.786795,-7.858021,9.504607,-5.338980,8.678094,-2.402921],[-1.074055,7.134558,1.887062,9.380723,0.377239,-6.378699],[-5.388121,-3.127826,2.687570,-8.314283,-0.493753,0.686938],[-6.600420,-9.336760,-9.779999,-7.348480,-7.104830,6.257560],[-8.759352,-1.166886,3.682663,-7.926977,-4.425494,7.917936],[-8.886330,3.010825,-0.719796,-0.349328,-1.783939,-5.239158],[-7.303068,3.891637,1.163165,-2.286554,9.628192,5.710778],[-2.205930,9.584225,7.645995,-3.315352,-5.145269,-2.433051],[-8.801819,-5.721639,-9.238012,7.781289,8.523548,2.683851],[-5.672930,-6.417379,-6.743357,-2.221940,9.907686,-6.614892],[-9.865937,7.413404,-4.896290,-1.326511,-6.587279,-6.039623],[7.927323,0.583287,-9.216106,5.908294,6.633856,4.507161],[-2.591197,-1.200429,7.735954,-2.016697,5.629655,-6.321859]], dtype = "float64")#candidate|4418|(13, 6)|const|float64
uop_4419 = relay.sqrt(const_4418.astype('float64')) # shape=(13, 6)
output = relay.Tuple([uop_4419,])
output2 = relay.Tuple([uop_4419,])
func_4423 = relay.Function([], output)
mod['func_4423'] = func_4423
mod = relay.transform.InferType()(mod)
mutated_mod['func_4423'] = func_4423
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mutated_mod.get_global_var('func_4423')
call_4424 = func_4423_call()
output = call_4424
func_4425 = relay.Function([], output)
mutated_mod['func_4425'] = func_4425
mutated_mod = relay.transform.InferType()(mutated_mod)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_4426 = relay.TupleGetItem(func_410_call(), 0)
call_4427 = relay.TupleGetItem(func_412_call(), 0)
output = relay.Tuple([call_4426,])
output2 = relay.Tuple([call_4427,])
func_4448 = relay.Function([], output)
mod['func_4448'] = func_4448
mod = relay.transform.InferType()(mod)
mutated_mod['func_4448'] = func_4448
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4448_call = mutated_mod.get_global_var('func_4448')
call_4449 = func_4448_call()
output = call_4449
func_4450 = relay.Function([], output)
mutated_mod['func_4450'] = func_4450
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4374_call = mod.get_global_var('func_4374')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_4481 = relay.TupleGetItem(func_4374_call(), 0)
call_4482 = relay.TupleGetItem(func_4376_call(), 0)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_4498 = relay.TupleGetItem(func_161_call(), 0)
call_4499 = relay.TupleGetItem(func_163_call(), 0)
func_1844_call = mod.get_global_var('func_1844')
func_1847_call = mutated_mod.get_global_var('func_1847')
const_4520 = relay.const([-5.990480,1.902200,-0.153651,5.997289,-9.519096,3.799042,-3.865904,-4.426243,-1.670407,-0.328651,1.129991,-3.548710,7.524208,5.954790,2.495652,-7.615295,6.187945,-1.111731,-3.853435,6.596795,4.026421,1.550920,8.278951,-8.766462,4.941884,-1.396401,-8.553560,4.094343,-8.592821,-3.554633,-7.614527,-9.066516,-9.189097,-8.077101,-4.188426,2.891285,-4.233643,7.652135,-4.730935,0.414525,-5.683600,-5.493252,-9.626851,-0.582360,-4.901948,-6.913196,9.806013,1.940661,3.734801,-3.921144,9.469347,-5.214499,9.956257,5.500385,9.586433,5.182599,3.202414,-3.482421,5.095120,-7.650972,0.036787,-9.911747,5.918374,4.743246,9.758788,6.172512,5.377464,-2.510025,4.387038,3.949920,-9.128145,0.025835,-4.213574,-9.496244,-3.335548,-3.664999,1.808123,7.248257,-1.538496,-6.883979,-5.436788,-5.279319,3.157172,-5.770387,6.883473,8.907131,-8.775160,3.310154,-2.689883,-7.493222,-2.489795,-3.160381,-9.231549,8.046875,-1.455471,-6.687634,3.983502,4.438826,-6.106983,6.415556,4.234619,6.197841,7.540718,-6.559262,-0.391422,8.545511,8.086656,7.903714,8.419810,-3.157810,-7.826242,-6.273233,-1.852752,-7.894098,-0.985445,-9.755773,-3.911865,0.981587,-3.713971,2.751929,0.662213,7.714730,-4.930222,-7.538106,6.708322,-3.325593,9.252881,4.192034,-6.136454,-0.509206,-1.756768,-6.430902,3.244690,-2.899886,9.773736,-9.603237,-3.781890,-2.482919,-3.757507,-5.085168,2.433630,6.535179,-1.958621,-3.644430,-8.492808,8.568487,3.585905,8.183940,3.935907,-4.378642,7.856768,2.058761,0.533396,0.582004,-0.492714,7.287744,-3.985809,3.146481,-8.169600,4.449099,-1.961401,3.550411,-6.573219,-4.438527,-5.212512,-6.777793,-3.654162,-2.379541,4.003871,6.342775,5.129274,-1.936200,-5.755128,-3.194128,5.847621,6.226706,-6.908603,-5.678304,-7.870000,8.878956,9.555143,-1.996472,3.990065,3.507396,-9.988735,6.385826,-2.870545,1.185629,7.207550,5.276046,9.382255,-4.711721,1.366663,-3.452859,-3.127370,-6.409911,-5.319964,9.475919,3.518833,-8.259099,0.685533,-2.790453,6.016102,-6.790572,7.124909,-3.465369,5.770757,6.321163,3.188438,-3.631614,2.102638,2.304988,3.530006,3.493188,-6.179934,6.246246,7.722076,8.885037,8.413134,2.951461,2.044530,-2.556891,5.687203,9.173378,3.719249,-8.924987,-1.800944,-7.060315,-7.192367,3.447003,-5.901644,-6.067514,-4.740358,-3.642929,-0.253718,-1.871272,5.753197,-3.895313,-6.500740,4.940427,1.891155,-1.323158,-2.803299,2.856082,1.237303,4.558286,3.887027,4.387458,2.513910,-5.578156,-7.371027,9.377004,6.014639,-3.625973,8.247677,4.209273,7.645774,-6.700866,2.748652,-2.805006,-0.975396,-2.961071,3.380621,5.798833,0.397609,-3.028112,3.268901,-4.579052,3.161594,-0.880166,-2.057392,1.655563,-1.516865,4.560447,-1.156499,-8.421103,6.390435,-7.417817,-2.100552,9.381601,1.192204,3.290756,4.521089,4.710537,-3.589274,0.984040,-7.482937,-8.177108,7.238477,-6.968910,0.910136,-3.272053,3.079909,-9.812503,1.050427,6.058515,9.350215,3.148421,-0.024883,-2.746738,-2.282430,-9.234019,-8.669632,5.443385,-0.936952,1.179359,-8.499616,3.655909,5.557654,-6.265287,4.595105,1.754997,-5.679399,-2.274582,-9.139824,-4.538673,-8.869178,9.730917,2.299176,-7.231951,-5.469777,-7.107498,-8.126714,-2.819516,5.064219,-6.871155,-2.024833,0.116942,-9.219358,-9.911206,-6.409599,4.727409,1.804958,-9.869476,-8.395910,-6.423427,-2.793156,9.746757,-2.717530,-6.961792,-3.926356,2.886819,6.342903,-5.296496,-5.283071,-2.200995,4.781821,1.212192,-5.117176,9.007695,7.999478,6.603881,-6.786811,-5.144263,-3.063109,-1.127553,1.375834,2.388492,9.819417,-0.243816,-9.133150,-4.127944,-8.533281,-0.847981,4.379551,0.097617,-8.760757,1.429578,-0.169679,2.893606,-5.863505,5.665487,4.149482,-5.735580,-0.545204,-5.354122,2.077958,-0.210361,9.019770,-5.308002,0.169656,6.625958,-4.169960,-3.557553,-6.457318,2.264642,-5.807461,-6.775551,-0.687551,-0.197265,9.130732,9.579990,8.157634,-0.078358,4.888296,-3.282805,7.533772,-5.142064,-3.784944,-8.848330,-4.798397,9.889870,-2.361385,9.260723,8.118166,-0.452808,-8.655595,2.391196,2.246778,-6.329445,7.572671,0.260737,-0.922704,-0.833232,9.845545,0.846079,3.733153,-4.101423,-3.743740,-4.795398,3.849333,-8.241836,-1.236413,5.261850,-5.706288,-4.052320,-3.496033,-5.638728,4.382601,2.353279,9.717936,9.607398,-3.154487,-6.429041,5.450174,-2.734077,8.680465,-6.313992,-1.989309,-8.337715,-5.922110,-5.961548,-6.617929,3.608036,-6.952619,-5.098184,-6.708264,-8.930474,8.705004,7.638416,2.998848,6.243220,8.484254,-9.237550,-4.659915,-8.512828,-1.158182,6.126479,2.631869,-0.796204,-3.984570,6.222764,-8.514925,7.203397,-3.221205,-1.726951,-9.681292,0.018754,-2.425901,6.169111,-5.026675,4.550688,8.994595,8.175210,8.376103,-2.554087,0.100623,-2.812290,5.305187,6.605719,3.979842,4.584073,-5.834982,9.607620,-3.069962,8.524860,-8.864793,1.578680,1.818815,-9.358211,2.658370,-9.035320,-3.512110,-9.084623,-0.328298,2.237262,-9.467366,7.567193,5.695613,3.875740,-3.935025,-9.359893,0.636051,-9.632269,8.477406,1.089640,9.316912,0.387854,9.357426,4.361099,6.936194,6.149428,0.209242,-1.836524,1.548466,-4.066911,-8.584053,-0.339877,5.040555,9.304483,3.941568,4.086941,-9.114890,-0.444057,-8.943195,-1.368031,-5.895363,9.168228,-4.485184,2.910930,0.981793,0.460401,-2.206455,7.148922,-5.218790,-3.439660,-1.368367,-2.094818,-9.611082,-4.342978,-8.117266,8.113511,-8.549022,-0.337698,-8.821730,-5.796717,-8.990921,-6.825111,5.258061,-7.586241,-9.176074,4.940734,-4.484623,9.404583,-4.521550,2.329077,-6.376227,6.233219,-3.856510,-3.626021,9.922267,-8.837271,-9.376977,9.813546,2.530680,-4.059456,-4.050194,-6.646590,1.903439,-6.870832,7.405821,6.919748,-2.410343,-4.306885,-7.784799,2.290867,4.238567,0.961105,-6.452811,3.364746,-7.956185,2.647557,4.867717,4.659785,-5.537479,-9.604314,-1.596478,8.903547,-0.575679,8.531545,-9.031470,0.681580,-5.904380,-0.190034,3.309829,-5.378264,5.985444,-7.513714,5.942018,1.465420,3.910625,3.074667,1.401873,-2.850775,-1.332605,4.208746,4.490739,-7.131866,9.315000,-0.648518,-8.054623,7.557656,2.560548,-0.388538,2.479769,-1.711612,2.212207,-5.111443,-7.804875,4.825415,-0.711891,-6.438037,8.046255,-2.255107,9.913312,0.785500,8.394334,3.302221,-4.757834,-1.356595,6.655421,6.555322,-0.897954,-4.429873,-3.604620,-2.841160,-1.464457,-5.431905,5.815938,-0.147561,-1.547454,2.824065,-8.137503,-7.753803,-3.849648,2.929087,3.578157,3.110651,-7.166078,-0.736789,3.227777,-2.862228,0.138008,6.670379,4.679132,9.037933,4.562026,0.086357,8.963362,-5.746209,-0.065014,-9.338053,-7.290274,-3.782241,4.776689,-6.562914,3.585920,-3.770817,2.637461,9.170372,9.936253,-0.941892,1.494924,2.582129,1.602739,3.287521,1.175670,4.318075,0.110739,-0.506672,2.558079,0.493516,7.425114,5.551341,8.324974,9.656656,-7.776571,6.823891,-1.321825,-8.494770,-4.270173,4.902416,3.916696,-0.749490,-8.517829,6.964945,4.251595,-6.816905,-4.151861,4.764680,8.745556,4.269791,4.154859,9.421331,0.189007,5.969725,3.834327,9.878778,-0.269258,3.750517,-0.486100,-7.925823,2.050041,8.544274,-1.810484,5.476337,9.704956,3.101470,2.300229,-6.312113,7.231598,1.843667,4.294142,8.965617,-8.151103,-7.039485,-7.896995,-9.682510,-9.794418,1.818819,-2.785413,-5.971607,5.134292,-1.325193,-4.418555,8.598217,4.042720,2.856096,4.018086,-6.555669,4.310290,2.807741,3.032205,-1.409249,1.139911,-7.688741,-0.422944,0.857747,6.784642,7.825746], dtype = "float64")#candidate|4520|(750,)|const|float64
call_4519 = relay.TupleGetItem(func_1844_call(relay.reshape(const_4520.astype('float64'), [750,])), 6)
call_4521 = relay.TupleGetItem(func_1847_call(relay.reshape(const_4520.astype('float64'), [750,])), 6)
func_4321_call = mod.get_global_var('func_4321')
func_4325_call = mutated_mod.get_global_var('func_4325')
const_4523 = relay.const([-4,2,7,-4,-5,-10,-10,2,-2,7,-10,9,2,-5,5,-9,-6,6,2,4,4,4,10,-5,1,-10,-1,-10,-8,-4,-6,-1,-3,8,7,-3,-6,5,6,-2,-2,-8,1,5,-3,-4,9,-3,-2,-8,-3,-2,-9,-8,-4,10,3,8,7,5,2,1,5,-6,5,8,4,-10,6,7,-8,-8,6,7,1,3,1,5,-8,-3,-4,2,10,10,-1,5,-4,2,-1,3,-1,3,2,8,-8,4,3,-9,-9,-10,-6,10,10,-1,-3,2,5,-7,-5,9,-7,7,-1,4,5,-10,9,-2,4,-7,-10,-10,-6,3,2,-5,5,1,-8,7,7,6,-9,-4,-6,1,-1,10,-8,9,5,10,-5,7,4,-9,-3,-8,7,-9,-4,-6,1,-4,-1,10,-6,7,9,-7,9,-5,-2,9,4,10,-8,5,-6,-10,-10,4,-9,9,6,3,3,10,-9,-5,-6,-1,5,4,4,10,-4,-2,-5,3,9,7,-1,7,5,-5,1,5,-3,-9,3,-3,-4,-2,-7,8,-10,-8,-1,3,9,7,3,5,-1,4,-4,10,1,-4,-4,4,9,-5,9,8,-5,9,7,5,-8,9,-6,-9,9,-7,10,-9,5,1,3,3,4,-7,6,6,-10,8,-4,-3,2,9,3,-1,3,2,1,7,7,-4,-5,9,-7,-1,5,5,-4,-9,2,5,4,-3,-5,10,-4,7,7,7,2,-5,4,6,2,-6,7,-2,-1,6,7,9,2,-5,1,-3,9,-2,7,10,-5,-6,8,-3,-6,6,-5,-7,3,6,-3,1,-8,-5,-2,4,3,-8,-9,3,-10,-9,6,-1,-9,4,-7,-3,7,2,5,7,-8,-1,5,-4,-3,-9,-10,-7,-9,-10,6,-3,-1,2,-1,-6,-3,-7,10,-3,-4,-3,5,5,1,-2,1,9,10,-10,2,1,-4,6,-10,1,3,2,4,-2,7,3,9,9,-5,2,8,3,-4,8,-9,-1,2,10,3,10,-6,-5,5,4,-7,-7,2,7,-10,9,5,-2,3,1,-6,5,2,-8,-6,-6,1,-7,3,8,-10,-3,-8,10,-10,9,-1,-9,4,9], dtype = "uint8")#candidate|4523|(420,)|const|uint8
call_4522 = relay.TupleGetItem(func_4321_call(relay.reshape(const_4523.astype('uint8'), [7, 6, 10]), relay.reshape(const_4523.astype('uint8'), [7, 6, 10]), ), 0)
call_4524 = relay.TupleGetItem(func_4325_call(relay.reshape(const_4523.astype('uint8'), [7, 6, 10]), relay.reshape(const_4523.astype('uint8'), [7, 6, 10]), ), 0)
output = relay.Tuple([call_4481,call_4498,call_4519,const_4520,call_4522,const_4523,])
output2 = relay.Tuple([call_4482,call_4499,call_4521,const_4520,call_4524,const_4523,])
func_4525 = relay.Function([], output)
mod['func_4525'] = func_4525
mod = relay.transform.InferType()(mod)
output = func_4525()
func_4526 = relay.Function([], output)
mutated_mod['func_4526'] = func_4526
mutated_mod = relay.transform.InferType()(mutated_mod)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_4539 = func_371_call()
call_4540 = func_371_call()
output = relay.Tuple([call_4539,])
output2 = relay.Tuple([call_4540,])
func_4555 = relay.Function([], output)
mod['func_4555'] = func_4555
mod = relay.transform.InferType()(mod)
mutated_mod['func_4555'] = func_4555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4555_call = mutated_mod.get_global_var('func_4555')
call_4556 = func_4555_call()
output = call_4556
func_4557 = relay.Function([], output)
mutated_mod['func_4557'] = func_4557
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
call_4576 = relay.TupleGetItem(func_1192_call(), 0)
call_4577 = relay.TupleGetItem(func_1194_call(), 0)
func_4448_call = mod.get_global_var('func_4448')
func_4450_call = mutated_mod.get_global_var('func_4450')
call_4616 = relay.TupleGetItem(func_4448_call(), 0)
call_4617 = relay.TupleGetItem(func_4450_call(), 0)
func_3639_call = mod.get_global_var('func_3639')
func_3641_call = mutated_mod.get_global_var('func_3641')
call_4626 = func_3639_call()
call_4627 = func_3639_call()
output = relay.Tuple([call_4576,call_4616,call_4626,])
output2 = relay.Tuple([call_4577,call_4617,call_4627,])
func_4649 = relay.Function([], output)
mod['func_4649'] = func_4649
mod = relay.transform.InferType()(mod)
output = func_4649()
func_4650 = relay.Function([], output)
mutated_mod['func_4650'] = func_4650
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3794_call = mod.get_global_var('func_3794')
func_3796_call = mutated_mod.get_global_var('func_3796')
call_4654 = relay.TupleGetItem(func_3794_call(), 0)
call_4655 = relay.TupleGetItem(func_3796_call(), 0)
output = call_4654
output2 = call_4655
func_4656 = relay.Function([], output)
mod['func_4656'] = func_4656
mod = relay.transform.InferType()(mod)
mutated_mod['func_4656'] = func_4656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4656_call = mutated_mod.get_global_var('func_4656')
call_4657 = func_4656_call()
output = call_4657
func_4658 = relay.Function([], output)
mutated_mod['func_4658'] = func_4658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4089_call = mod.get_global_var('func_4089')
func_4091_call = mutated_mod.get_global_var('func_4091')
call_4751 = relay.TupleGetItem(func_4089_call(), 0)
call_4752 = relay.TupleGetItem(func_4091_call(), 0)
func_2877_call = mod.get_global_var('func_2877')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_4760 = relay.TupleGetItem(func_2877_call(), 0)
call_4761 = relay.TupleGetItem(func_2878_call(), 0)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_4784 = relay.TupleGetItem(func_894_call(), 2)
call_4785 = relay.TupleGetItem(func_896_call(), 2)
output = relay.Tuple([call_4751,call_4760,call_4784,])
output2 = relay.Tuple([call_4752,call_4761,call_4785,])
func_4787 = relay.Function([], output)
mod['func_4787'] = func_4787
mod = relay.transform.InferType()(mod)
mutated_mod['func_4787'] = func_4787
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4787_call = mutated_mod.get_global_var('func_4787')
call_4788 = func_4787_call()
output = call_4788
func_4789 = relay.Function([], output)
mutated_mod['func_4789'] = func_4789
mutated_mod = relay.transform.InferType()(mutated_mod)
func_207_call = mod.get_global_var('func_207')
func_208_call = mutated_mod.get_global_var('func_208')
call_4799 = relay.TupleGetItem(func_207_call(), 0)
call_4800 = relay.TupleGetItem(func_208_call(), 0)
output = call_4799
output2 = call_4800
func_4806 = relay.Function([], output)
mod['func_4806'] = func_4806
mod = relay.transform.InferType()(mod)
output = func_4806()
func_4807 = relay.Function([], output)
mutated_mod['func_4807'] = func_4807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_4824 = relay.TupleGetItem(func_161_call(), 0)
call_4825 = relay.TupleGetItem(func_163_call(), 0)
func_3742_call = mod.get_global_var('func_3742')
func_3745_call = mutated_mod.get_global_var('func_3745')
var_4844 = relay.var("var_4844", dtype = "float32", shape = (104,))#candidate|4844|(104,)|var|float32
call_4843 = func_3742_call(relay.reshape(var_4844.astype('float32'), [8, 1, 13]))
call_4845 = func_3742_call(relay.reshape(var_4844.astype('float32'), [8, 1, 13]))
output = relay.Tuple([call_4824,call_4843,var_4844,])
output2 = relay.Tuple([call_4825,call_4845,var_4844,])
func_4850 = relay.Function([var_4844,], output)
mod['func_4850'] = func_4850
mod = relay.transform.InferType()(mod)
var_4851 = relay.var("var_4851", dtype = "float32", shape = (104,))#candidate|4851|(104,)|var|float32
output = func_4850(var_4851)
func_4852 = relay.Function([var_4851], output)
mutated_mod['func_4852'] = func_4852
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_4945 = relay.TupleGetItem(func_161_call(), 0)
call_4946 = relay.TupleGetItem(func_163_call(), 0)
output = call_4945
output2 = call_4946
func_4953 = relay.Function([], output)
mod['func_4953'] = func_4953
mod = relay.transform.InferType()(mod)
mutated_mod['func_4953'] = func_4953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4953_call = mutated_mod.get_global_var('func_4953')
call_4954 = func_4953_call()
output = call_4954
func_4955 = relay.Function([], output)
mutated_mod['func_4955'] = func_4955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4806_call = mod.get_global_var('func_4806')
func_4807_call = mutated_mod.get_global_var('func_4807')
call_4966 = func_4806_call()
call_4967 = func_4806_call()
func_3815_call = mod.get_global_var('func_3815')
func_3816_call = mutated_mod.get_global_var('func_3816')
call_4974 = relay.TupleGetItem(func_3815_call(), 1)
call_4975 = relay.TupleGetItem(func_3816_call(), 1)
output = relay.Tuple([call_4966,call_4974,])
output2 = relay.Tuple([call_4967,call_4975,])
func_4979 = relay.Function([], output)
mod['func_4979'] = func_4979
mod = relay.transform.InferType()(mod)
mutated_mod['func_4979'] = func_4979
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mutated_mod.get_global_var('func_4979')
call_4980 = func_4979_call()
output = call_4980
func_4981 = relay.Function([], output)
mutated_mod['func_4981'] = func_4981
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2877_call = mod.get_global_var('func_2877')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_4987 = relay.TupleGetItem(func_2877_call(), 0)
call_4988 = relay.TupleGetItem(func_2878_call(), 0)
output = relay.Tuple([call_4987,])
output2 = relay.Tuple([call_4988,])
func_4991 = relay.Function([], output)
mod['func_4991'] = func_4991
mod = relay.transform.InferType()(mod)
output = func_4991()
func_4992 = relay.Function([], output)
mutated_mod['func_4992'] = func_4992
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4089_call = mod.get_global_var('func_4089')
func_4091_call = mutated_mod.get_global_var('func_4091')
call_4996 = relay.TupleGetItem(func_4089_call(), 0)
call_4997 = relay.TupleGetItem(func_4091_call(), 0)
func_2627_call = mod.get_global_var('func_2627')
func_2629_call = mutated_mod.get_global_var('func_2629')
const_5014 = relay.const([[-1,1,9,-6,6,-5,7,-8,10,-9,-6,9,-4,-3,-4,-2,-4,-8,-1,-5,4,-9,1,-5,9,-10,-10,2,3,3,-6,2,-7,2,-5,-5,7,10,-5,1,-1,-9,-9,-3,8,-2,2,-6],[-6,-9,5,10,9,-4,-6,-6,-5,6,-10,8,8,4,-6,10,-7,3,-2,6,6,4,4,-9,-9,-4,-7,-6,-4,4,9,2,-3,-7,-1,-6,2,6,-4,-4,-1,9,-3,-2,3,9,-2,-7],[-7,9,1,4,7,-7,7,3,2,-6,5,3,6,2,-2,-2,-7,-8,8,10,-4,-8,10,10,3,6,6,10,9,9,-10,4,-3,6,8,9,-4,-4,-2,6,-2,5,-2,-9,6,-4,-8,6],[5,-3,7,-5,-2,-3,3,10,-2,5,-10,6,-2,-2,1,4,-9,8,-2,5,2,-8,9,-4,5,-6,-2,10,-3,8,4,1,-8,7,4,6,4,-2,-4,-6,6,3,-4,-3,9,2,-1,7],[4,1,-8,3,-3,-4,1,-5,2,4,2,5,-9,7,2,3,-5,-1,3,4,-8,2,-10,8,-4,-10,-2,-2,-5,-2,10,-4,-2,-10,8,-1,-4,-10,10,8,2,4,4,6,-2,8,-6,7],[-7,4,-2,-6,10,3,-3,5,9,-1,5,4,-8,9,5,5,-4,-9,-6,5,10,5,8,-1,9,-2,1,-2,-10,-6,-9,-9,10,9,5,-9,3,10,-5,-10,5,9,-8,7,-3,5,2,3],[1,5,10,-1,-9,6,-2,-8,-8,4,-9,-6,-2,4,-4,-7,1,-3,7,5,4,9,6,4,-6,10,9,-8,4,6,-1,4,-4,-4,-10,-6,8,2,-5,-8,5,6,3,-5,-10,-6,4,2],[7,-1,-4,-1,4,-8,2,-2,3,2,-6,4,10,4,10,-3,3,-3,-3,-1,10,8,5,-2,9,-6,-3,-10,2,8,-1,8,5,3,8,6,1,-3,-5,-7,-8,-9,5,3,-3,-9,2,-10],[-1,-6,5,8,-8,-4,-3,-5,-4,-4,-4,-4,8,3,3,8,4,-10,5,-9,-8,-6,-2,3,-7,-2,-4,10,-2,-3,-4,-6,4,-1,5,-4,1,-5,10,8,7,-10,10,4,-1,-6,7,-5],[-1,3,-6,-10,-6,-9,-3,6,1,-10,4,-3,-10,-1,-3,1,3,-10,1,-6,-3,3,-6,-7,-3,-5,10,1,7,8,-8,-3,-2,-2,1,10,-4,3,2,-4,4,1,9,5,-3,7,-3,-4],[3,10,5,9,2,7,1,-6,-5,2,-10,2,-9,7,-1,-9,-9,8,6,3,-1,-2,4,-1,5,-4,8,8,-7,3,8,-2,-10,2,10,-6,6,5,-5,8,10,5,-8,-9,-2,2,-2,-8],[5,-8,5,-5,-1,-10,7,-6,-2,6,8,6,6,9,-2,-10,-6,1,-4,2,-7,2,4,2,9,-5,-3,-6,-1,-9,-3,-2,-9,2,-1,9,-9,-3,-8,-9,5,5,-7,9,7,2,8,9],[-9,3,7,8,-4,9,8,-1,3,4,-7,7,2,-4,-5,8,-3,-4,6,8,-4,3,4,8,-10,-7,-5,10,6,-6,6,7,-8,2,6,3,7,-4,10,10,4,6,2,7,-10,2,-10,9],[-1,-1,3,7,-9,-2,-4,-6,8,8,-8,9,-9,-5,-10,-6,-7,10,-8,-9,9,-6,2,1,-2,1,5,9,2,2,10,5,-4,5,-3,1,-6,4,6,1,6,1,3,-7,4,9,9,1],[-2,-7,1,-6,2,-6,-9,8,10,-9,9,-9,5,-9,3,-8,-8,-9,-3,-7,-7,5,1,-1,3,3,-4,-7,8,5,-7,6,8,-4,10,-5,-6,3,6,-8,2,2,-2,6,6,3,4,9],[-7,-4,6,-4,-2,10,8,6,7,-7,9,-1,5,-10,-5,1,-4,9,-4,2,9,-1,-8,-9,5,4,-1,8,-10,3,7,-9,6,-3,-2,-6,5,-10,-6,-7,-8,2,-7,3,9,7,9,1],[6,8,8,-9,-5,5,-9,-10,-7,-6,5,4,-5,-1,6,4,5,8,-7,-6,9,4,8,-6,-10,-9,-2,-10,3,3,-5,-9,-8,4,7,2,3,-3,1,6,-10,8,-8,-10,10,-8,2,-5],[-6,8,9,9,-5,3,-10,9,3,-5,-6,10,10,-10,7,3,-4,-7,2,-5,6,4,8,-9,1,-10,9,-2,9,-1,9,10,-4,6,-2,-2,-10,6,2,-7,-1,9,-8,-9,6,3,-4,7],[-7,6,4,8,6,2,-1,-10,-9,-4,-1,3,-3,-3,9,-8,2,6,4,4,9,-8,6,-5,-7,1,4,-7,2,5,-9,8,7,-1,-9,10,10,10,-6,-2,-6,2,1,-6,-1,-4,5,6],[-7,10,-2,4,8,10,3,-6,-7,10,2,-10,-8,-5,-8,5,-8,1,-7,3,-3,9,5,4,8,9,-9,-2,3,9,10,7,9,9,-5,1,-5,3,-8,5,10,-5,-3,7,4,-9,10,-4]], dtype = "uint8")#candidate|5014|(20, 48)|const|uint8
call_5013 = relay.TupleGetItem(func_2627_call(relay.reshape(const_5014.astype('uint8'), [15, 4, 16])), 0)
call_5015 = relay.TupleGetItem(func_2629_call(relay.reshape(const_5014.astype('uint8'), [15, 4, 16])), 0)
bop_5057 = relay.mod(const_5014.astype('float32'), relay.reshape(call_5013.astype('float32'), relay.shape_of(const_5014))) # shape=(20, 48)
bop_5060 = relay.mod(const_5014.astype('float32'), relay.reshape(call_5015.astype('float32'), relay.shape_of(const_5014))) # shape=(20, 48)
output = relay.Tuple([call_4996,bop_5057,])
output2 = relay.Tuple([call_4997,bop_5060,])
func_5064 = relay.Function([], output)
mod['func_5064'] = func_5064
mod = relay.transform.InferType()(mod)
output = func_5064()
func_5065 = relay.Function([], output)
mutated_mod['func_5065'] = func_5065
mutated_mod = relay.transform.InferType()(mutated_mod)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_5143 = relay.TupleGetItem(func_161_call(), 0)
call_5144 = relay.TupleGetItem(func_163_call(), 0)
func_3128_call = mod.get_global_var('func_3128')
func_3130_call = mutated_mod.get_global_var('func_3130')
call_5150 = relay.TupleGetItem(func_3128_call(), 0)
call_5151 = relay.TupleGetItem(func_3130_call(), 0)
output = relay.Tuple([call_5143,call_5150,])
output2 = relay.Tuple([call_5144,call_5151,])
func_5171 = relay.Function([], output)
mod['func_5171'] = func_5171
mod = relay.transform.InferType()(mod)
mutated_mod['func_5171'] = func_5171
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5171_call = mutated_mod.get_global_var('func_5171')
call_5172 = func_5171_call()
output = call_5172
func_5173 = relay.Function([], output)
mutated_mod['func_5173'] = func_5173
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2877_call = mod.get_global_var('func_2877')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_5224 = relay.TupleGetItem(func_2877_call(), 0)
call_5225 = relay.TupleGetItem(func_2878_call(), 0)
output = call_5224
output2 = call_5225
func_5234 = relay.Function([], output)
mod['func_5234'] = func_5234
mod = relay.transform.InferType()(mod)
output = func_5234()
func_5235 = relay.Function([], output)
mutated_mod['func_5235'] = func_5235
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4214_call = mod.get_global_var('func_4214')
func_4216_call = mutated_mod.get_global_var('func_4216')
call_5247 = relay.TupleGetItem(func_4214_call(), 2)
call_5248 = relay.TupleGetItem(func_4216_call(), 2)
output = relay.Tuple([call_5247,])
output2 = relay.Tuple([call_5248,])
func_5253 = relay.Function([], output)
mod['func_5253'] = func_5253
mod = relay.transform.InferType()(mod)
mutated_mod['func_5253'] = func_5253
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5253_call = mutated_mod.get_global_var('func_5253')
call_5254 = func_5253_call()
output = call_5254
func_5255 = relay.Function([], output)
mutated_mod['func_5255'] = func_5255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_5328 = relay.TupleGetItem(func_3293_call(), 1)
call_5329 = relay.TupleGetItem(func_3294_call(), 1)
output = relay.Tuple([call_5328,])
output2 = relay.Tuple([call_5329,])
func_5349 = relay.Function([], output)
mod['func_5349'] = func_5349
mod = relay.transform.InferType()(mod)
mutated_mod['func_5349'] = func_5349
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5349_call = mutated_mod.get_global_var('func_5349')
call_5350 = func_5349_call()
output = call_5350
func_5351 = relay.Function([], output)
mutated_mod['func_5351'] = func_5351
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5370 = relay.var("var_5370", dtype = "bool", shape = (14, 3, 2))#candidate|5370|(14, 3, 2)|var|bool
var_5371 = relay.var("var_5371", dtype = "bool", shape = (14, 3, 2))#candidate|5371|(14, 3, 2)|var|bool
bop_5372 = relay.logical_and(var_5370.astype('bool'), relay.reshape(var_5371.astype('bool'), relay.shape_of(var_5370))) # shape=(14, 3, 2)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_5375 = relay.TupleGetItem(func_4423_call(), 0)
call_5376 = relay.TupleGetItem(func_4425_call(), 0)
output = relay.Tuple([bop_5372,call_5375,])
output2 = relay.Tuple([bop_5372,call_5376,])
func_5377 = relay.Function([var_5370,var_5371,], output)
mod['func_5377'] = func_5377
mod = relay.transform.InferType()(mod)
var_5378 = relay.var("var_5378", dtype = "bool", shape = (14, 3, 2))#candidate|5378|(14, 3, 2)|var|bool
var_5379 = relay.var("var_5379", dtype = "bool", shape = (14, 3, 2))#candidate|5379|(14, 3, 2)|var|bool
output = func_5377(var_5378,var_5379,)
func_5380 = relay.Function([var_5378,var_5379,], output)
mutated_mod['func_5380'] = func_5380
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_5386 = relay.TupleGetItem(func_3293_call(), 0)
call_5387 = relay.TupleGetItem(func_3294_call(), 0)
func_5234_call = mod.get_global_var('func_5234')
func_5235_call = mutated_mod.get_global_var('func_5235')
call_5392 = func_5234_call()
call_5393 = func_5234_call()
func_3551_call = mod.get_global_var('func_3551')
func_3553_call = mutated_mod.get_global_var('func_3553')
call_5394 = relay.TupleGetItem(func_3551_call(), 2)
call_5395 = relay.TupleGetItem(func_3553_call(), 2)
output = relay.Tuple([call_5386,call_5392,call_5394,])
output2 = relay.Tuple([call_5387,call_5393,call_5395,])
func_5401 = relay.Function([], output)
mod['func_5401'] = func_5401
mod = relay.transform.InferType()(mod)
output = func_5401()
func_5402 = relay.Function([], output)
mutated_mod['func_5402'] = func_5402
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4374_call = mod.get_global_var('func_4374')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_5420 = relay.TupleGetItem(func_4374_call(), 2)
call_5421 = relay.TupleGetItem(func_4376_call(), 2)
output = call_5420
output2 = call_5421
func_5429 = relay.Function([], output)
mod['func_5429'] = func_5429
mod = relay.transform.InferType()(mod)
output = func_5429()
func_5430 = relay.Function([], output)
mutated_mod['func_5430'] = func_5430
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5525 = relay.var("var_5525", dtype = "float32", shape = (9, 10, 13))#candidate|5525|(9, 10, 13)|var|float32
uop_5526 = relay.acos(var_5525.astype('float32')) # shape=(9, 10, 13)
uop_5530 = relay.sigmoid(uop_5526.astype('float64')) # shape=(9, 10, 13)
output = uop_5530
output2 = uop_5530
func_5540 = relay.Function([var_5525,], output)
mod['func_5540'] = func_5540
mod = relay.transform.InferType()(mod)
var_5541 = relay.var("var_5541", dtype = "float32", shape = (9, 10, 13))#candidate|5541|(9, 10, 13)|var|float32
output = func_5540(var_5541)
func_5542 = relay.Function([var_5541], output)
mutated_mod['func_5542'] = func_5542
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_5550 = relay.TupleGetItem(func_4423_call(), 0)
call_5551 = relay.TupleGetItem(func_4425_call(), 0)
output = relay.Tuple([call_5550,])
output2 = relay.Tuple([call_5551,])
func_5567 = relay.Function([], output)
mod['func_5567'] = func_5567
mod = relay.transform.InferType()(mod)
mutated_mod['func_5567'] = func_5567
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5567_call = mutated_mod.get_global_var('func_5567')
call_5568 = func_5567_call()
output = call_5568
func_5569 = relay.Function([], output)
mutated_mod['func_5569'] = func_5569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1340_call = mod.get_global_var('func_1340')
func_1342_call = mutated_mod.get_global_var('func_1342')
call_5702 = func_1340_call()
call_5703 = func_1340_call()
func_3068_call = mod.get_global_var('func_3068')
func_3071_call = mutated_mod.get_global_var('func_3071')
const_5706 = relay.const([-6,7,3,-1,-1,9,1,-4,-2,-5,2,2,4,5,-9,-7,9,4,-3,-10,7,10,9,-10,8,5,-5,-10,-9,6,-1,2,6,3,3,6,1,8,9,2,-5,9,-1,10,-6,-7,-9,9,5,7,-5,9,-8,-7,-9,6,5,-4,4,8,10,7,2,-7,9,-6,6,10,4,-4,-8,5,-8,10,4,-2,-1,6,-8,-2,-4,9,6,5,-1,-1,1,-10,8,9,-8,-6,3,-6,-4,5,-9,-9,8,-2,-5,7,10,3,7,-10,6,-8,10,9,2,-2,-2,3,7,10,10,-7,5,10,5,-9,-6,9,8,-9,-4,1,-6,-8,4,6,-5,6,-5,2,-4,1,7,-9,-10,7,-1,-1,-7,-9,-9,4,-8,-2,7,-4,-6,-3,7,-9,-2,2,-9,2,4,-4,8,6,8,-10,-3,-8,-1,3,-2,-6,3,10,3,-5,-3,1,-8,-7,5,3,-2,-9,1,3,-8,-10,9,10,-9,-10,-5,2,-9,2,-6,4,-6,-3,8,-4,6,-5,3,-6,2,7,-8,3,-9,1,-1,-5,1,6,7,6,-4,-6,-8,-1,8,-10,-6,4,-7,1,4,-5,-6,-4,10,6,-3,-1,3,-3,-8,7,-3,9,8,8,-8,6,-3,-8,-10,-7,5,6,-1,-10,2,-5,10,7,-4,9,7,5,-6,10,-7,1,-6,1,5,-6,-9,-2,-5,-7,3,2,-9,-9,-1,-1,6,10,8,-9,5,8,8,-2,-10,-3,-3,4,-1,-9,1,-1,-1,-1,6,-1,-5,2,-10,6,3,4,4,10,-2,8,-8,-10,-3,9,1,10,-9,-1,7,1,-7,-8,7,-6,8,10,-6,6,-1,9,-2,-10,-1,2,-8,-2,9,8,9,-3,-10,2,5,-5,10,8,5,5,-9,-8,1,4,9,6,-5,-6,3,-1,3,-3,-2,-8,-9,6,1,6,3,4,9,-1,-10,-9,4,-9,6,1,7,6,4,5,-6,-7,-1,3,10,6,3,-3,5,-6,-8,-10,8,-2,-10,8,-7,6,-8,8,5,10,-9,-6,6,5,1,-10,1,-1,-6,8,-4,1,-3,1,-3,7,3,6,7,5,7,9,5,1,-9,-7,3,-8,-7,4,10,-1,7,4,9,6,-5,5,4,-3,5,9,-8,-2,-6,6,-10,-8,-6,-4,10,-10,4,-6,1,5,-9,-2,1,-3,-4,10,-8,2,-1,-9,-6,-7,-4,1,2,9,-10,10,9,-8,-2,7,-9,4,-7,10,-1,6,-9,9,10,-7,-3,2,10,-2,-8,-2,8,-6,8,10,4,3,10,-7,3,1,-10,-5,10,-3,-8,7,3,-3,-9,10,-9,-9,6,9,9,-5,-2,-9,2,5,1,8,-5,-6,-3,10,-1,1,4,-7,2,1,-6,8,-6,-8,3,2,-6,-6,5,1,4,3,3,-10,6,9,-4,10,10,-9,-3,-2,-9,9,4,-10,-3,-6,-7,-1,8,4,9,-3,3,1,-3,6,3,6,5,-6,2,-5,8,9,8,-9,-9,-3,6,-8,-8,1,-10,-1,-6,3,8,-7,4,2,1,-8,-8,1,-6,3,5,-7,10,2,-2,-3,5,-7,-6,-10,4,7,10,6,-9,9,-2,9,-4,-7,7,7,10,10,6,-4,9,-2,9,2,6,2,-8,9,3,8,-8,10,2,-7,-2,-9,-10,10,1,-7,-5,-5,9,7,-2,10,4,1,3,-6,-8,-6,8,-8,-1,-5,4,-3,6,5,-7,-1,8,-8,-9,-6,9,-7,-9,7,-2,8,4,8,-1,9,1,-10,-3,10,3,9,7,1,1,-5,10,-8,5,4,3,6,5,-3,-6,-8,-6,-3,5,8,-9,10,8,-4,7,1,-1,-4,-6,-3,-7,-3,2,-3,-7,-4,3,6,5,6,-7,-2,3,5,2,-2,-10,1,9,8,6,-4,9,2,-1,-8,3,-7,5,-8,9,-5,4,-1,-1,-3,-5,5,1,8,4,-10,-5,7,-10,-10,-4,-10,-2,-5,1,7,7,10,9,-9,5,2,-8,-3,-4,9,-7,-8,9,-9,1,6,9,-3,-7,3,-2,1,6,8,6,-7,6,9,9,6,5,-8,-10,-5,3,-9,5,-5,-6,10,-2,-3,4,-4,2,-5,-3,-3,3,-2,-8,-1,2,5,-9,-2,-3,9,-8,4,-4,9,3,-4,2,3,8,-4,-8,-10,3,9,-6,-7,3,6,-2,7,-9,-2,-7,-2,8,7,4,-4,9,4,2,-2,5,-2,-5,6,10,-6,4,-3,-3,-8,-8,-3,-8,4,10,-4,-6,-6,5,-6,10,3,-9,6,-7,-8,-9,-5,9,6,7,-6,8,5,-4,10,4,-9,2,-4,2,-5,4,7,-1,-3,-4,-3,-3,-6,3,2,-1,-10,-6,1,8,-8,-6,-6,-9,5,-9,6,9,8,7,-9,1,-1,-6,5,-8,8,10,-3,4,4,8,-5,1,-1,5,9,9,-5,10,-9,-4,4,-3,-5,-5,-10,1,4,-3,2,-4,4,-1,-10,-10,1,8,-8,-10,-7,3,2,5,6,8,5,-1,9,9,-4,2,3,-9,-2,3,8,9,10,3,-1,5,6,7,7,7,-5,5,9,-8,-6,10,-8,3,2,-5,-8,-1,6,10,-3,5,7,7,-7,-7,-7,7,6,7,-6,1,3,-8,9,4,-6,2,-10,-9,6,-2,-3,-2,8,8,-10,-8,10,-3,6,1,-8,-3,-3,-7,-8,-4,7,1,5,-9,-8,-9,-7,-7,2,4,2,10,2,4,4,3,6,-7,3,6,-7,10,-9,-6,5,-3,-7,-2,-10,-9,6,6,-7,-1,-2,-2,3,-2,8,-5,8,-2,1,-6,-10,-5,-8,-8,-7,3,-7,-8,-6,-5,8,9,-8,-3,-7,-1,-3,-3,9,-3,-2,6,1,2,-4,-4,-6,10,-8,-4,1,9,-2,-2,6,9,-2,-9,-9,-4,7,7,3,-9,10,3,1,-5,8,5,-3,-4,-9,1,4,-1,3,4,5,6,-7,9,5,-2,-1,9,-1,-10,7,-8,-5,2,9,4,9,1,1,3,-4,-10,-2,-9,-3,-5,10,-3,-6,-1,-3,9,6,-8,-2,4,-8,10,-5,-6,8,3,7,-3,1,8,-10,5,-8,3,-6,7,3,-5,-8,9,2,-6,-7,2,2,3,-6,7,1,-6,-7,10,-10,-8,-4,6,8,5,-8,3,-6,1,-5,9,-8,-3,-8,5,-6,8,-10,5,4,-5,-6,4,5,7,-6,7,1], dtype = "uint64")#candidate|5706|(1248,)|const|uint64
const_5707 = relay.const([[2.840474],[6.456988],[-2.213951],[-8.921999],[-0.386888],[-2.737358],[8.695965],[4.779675],[-9.971950],[-1.841136],[0.021205],[0.645879],[-9.770086],[-0.542694],[-2.831868]], dtype = "float64")#candidate|5707|(15, 1)|const|float64
call_5705 = relay.TupleGetItem(func_3068_call(relay.reshape(const_5706.astype('uint64'), [13, 16, 6]), relay.reshape(const_5707.astype('float64'), [5, 3]), ), 3)
call_5708 = relay.TupleGetItem(func_3071_call(relay.reshape(const_5706.astype('uint64'), [13, 16, 6]), relay.reshape(const_5707.astype('float64'), [5, 3]), ), 3)
func_773_call = mod.get_global_var('func_773')
func_775_call = mutated_mod.get_global_var('func_775')
var_5713 = relay.var("var_5713", dtype = "float64", shape = (1440,))#candidate|5713|(1440,)|var|float64
call_5712 = func_773_call(relay.reshape(var_5713.astype('float64'), [9, 16, 10]))
call_5714 = func_773_call(relay.reshape(var_5713.astype('float64'), [9, 16, 10]))
bop_5722 = relay.floor_divide(call_5712.astype('float32'), relay.reshape(var_5713.astype('float32'), relay.shape_of(call_5712))) # shape=(9, 16, 10)
bop_5725 = relay.floor_divide(call_5714.astype('float32'), relay.reshape(var_5713.astype('float32'), relay.shape_of(call_5714))) # shape=(9, 16, 10)
func_161_call = mod.get_global_var('func_161')
func_163_call = mutated_mod.get_global_var('func_163')
call_5729 = relay.TupleGetItem(func_161_call(), 0)
call_5730 = relay.TupleGetItem(func_163_call(), 0)
func_5171_call = mod.get_global_var('func_5171')
func_5173_call = mutated_mod.get_global_var('func_5173')
call_5731 = relay.TupleGetItem(func_5171_call(), 1)
call_5732 = relay.TupleGetItem(func_5173_call(), 1)
output = relay.Tuple([call_5702,call_5705,const_5706,const_5707,bop_5722,call_5729,call_5731,])
output2 = relay.Tuple([call_5703,call_5708,const_5706,const_5707,bop_5725,call_5730,call_5732,])
func_5733 = relay.Function([var_5713,], output)
mod['func_5733'] = func_5733
mod = relay.transform.InferType()(mod)
mutated_mod['func_5733'] = func_5733
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5734 = relay.var("var_5734", dtype = "float64", shape = (1440,))#candidate|5734|(1440,)|var|float64
func_5733_call = mutated_mod.get_global_var('func_5733')
call_5735 = func_5733_call(var_5734)
output = call_5735
func_5736 = relay.Function([var_5734], output)
mutated_mod['func_5736'] = func_5736
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1006_call = mod.get_global_var('func_1006')
func_1007_call = mutated_mod.get_global_var('func_1007')
call_5756 = func_1006_call()
call_5757 = func_1006_call()
output = relay.Tuple([call_5756,])
output2 = relay.Tuple([call_5757,])
func_5768 = relay.Function([], output)
mod['func_5768'] = func_5768
mod = relay.transform.InferType()(mod)
mutated_mod['func_5768'] = func_5768
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mutated_mod.get_global_var('func_5768')
call_5769 = func_5768_call()
output = call_5769
func_5770 = relay.Function([], output)
mutated_mod['func_5770'] = func_5770
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3794_call = mod.get_global_var('func_3794')
func_3796_call = mutated_mod.get_global_var('func_3796')
call_5814 = relay.TupleGetItem(func_3794_call(), 0)
call_5815 = relay.TupleGetItem(func_3796_call(), 0)
func_3068_call = mod.get_global_var('func_3068')
func_3071_call = mutated_mod.get_global_var('func_3071')
const_5818 = relay.const([-6,-10,-6,7,4,10,-2,-3,7,-8,-1,-2,-4,10,1,2,4,10,-6,1,5,-7,6,-3,-7,8,9,-8,-7,3,-10,5,6,5,-4,-3,10,4,-9,10,10,-5,10,-2,-2,2,9,-7,5,-6,-10,6,8,-7,10,2,-7,-9,-8,1,7,1,3,10,2,6,4,4,-5,8,8,5,4,-2,6,-4,9,8,5,-9,-3,-9,-9,6,3,9,-3,7,-10,-2,2,-9,3,-2,-5,-7,8,-3,10,8,5,-5,2,8,2,-8,7,-7,5,1,2,6,4,6,-1,7,4,6,7,7,3,-6,-3,1,4,-9,9,-8,-7,9,1,-7,10,-8,-5,-6,10,-9,7,-2,9,1,9,1,6,-5,5,-9,-3,-4,3,7,4,-8,-5,5,-4,-3,8,8,-3,-8,-4,5,-5,8,-1,-3,2,-7,4,10,-10,2,7,9,-2,10,5,5,-6,-8,-9,-9,2,9,-10,5,-2,-8,-6,2,-6,-6,-10,1,-8,-1,9,10,-10,1,-8,1,-5,2,8,1,-6,4,-2,2,-3,-6,2,8,-5,-1,-7,-4,1,-6,-9,2,-6,1,-1,-5,-5,9,-9,9,-7,-8,5,7,-7,7,-9,-9,-3,-2,-3,-1,10,-6,-6,-4,9,7,1,2,-8,3,-7,-2,-5,7,3,-6,7,-1,-1,5,-6,-4,10,-6,6,-6,2,-3,4,4,-7,10,4,-6,6,-5,-6,1,6,4,5,-4,10,3,-7,-1,9,8,-5,-10,-6,5,-3,-7,4,-2,-3,-5,6,-9,8,9,3,3,-2,1,10,-9,2,4,9,-4,-6,5,8,-7,6,-6,-5,-7,3,-4,-3,6,9,1,9,2,6,-7,3,-3,-4,-8,-9,6,2,-5,-3,10,2,-9,9,-6,9,1,9,-1,-4,-2,1,-5,9,9,2,1,-3,4,-4,-10,4,-4,-7,8,3,4,-9,8,8,8,-7,3,3,-5,-10,9,6,8,8,5,-5,7,8,2,3,6,-10,1,10,8,10,-3,1,-10,-9,-2,1,-10,5,5,-1,9,3,5,-7,-1,-10,-3,-10,-4,5,-3,5,7,5,-1,4,8,-1,9,5,7,8,8,5,7,6,-8,5,-5,7,5,-6,-9,5,7,1,5,7,7,3,-2,6,-4,-5,-1,4,4,-10,-9,2,-5,3,2,3,-10,5,-9,-3,-4,-1,3,-5,-7,1,-2,-3,5,8,6,9,10,-9,7,-2,-10,-7,8,3,7,-1,-8,7,-2,3,8,3,5,9,-4,4,1,9,3,7,6,2,-4,-7,4,6,9,-2,-1,-6,-9,1,4,-3,9,-9,-8,9,10,2,-4,-7,-10,-9,9,8,-8,2,-6,-8,-5,-2,-10,6,-8,7,9,-7,5,9,-3,-6,3,-2,-2,-6,1,-1,10,2,-8,-10,-5,3,2,5,-9,6,-8,-1,-1,9,-6,5,-8,5,-6,-2,-3,10,-6,-3,-6,7,1,8,6,6,-8,1,7,-3,-3,5,-1,-5,2,4,-1,3,10,6,9,-9,2,-4,-7,4,-3,8,-4,10,3,3,4,5,-9,9,2,6,9,-3,-8,-6,5,-4,-9,4,-8,-7,5,6,3,-2,3,-9,8,7,-8,-7,-1,2,7,3,3,8,3,1,-9,-1,1,-5,3,-6,-6,-3,-6,-6,-1,8,10,3,10,-9,9,9,3,10,5,6,9,-10,-4,-7,7,8,-9,-3,7,8,-6,-7,-1,3,-2,-9,8,-5,-8,-7,8,-2,-6,-8,9,-2,-2,-1,5,3,5,-10,3,-5,-10,4,8,6,3,9,-9,8,-10,-6,-5,4,-1,4,10,3,-2,7,-6,-3,7,2,5,-7,1,1,10,-7,-10,5,10,9,6,1,-8,-3,-10,-9,5,1,-9,1,10,2,-10,-9,6,4,3,-6,-2,6,-3,9,10,3,4,1,-3,3,2,6,1,2,3,-5,-6,-9,5,-7,1,6,-8,-1,-2,6,6,1,-10,-1,2,2,-8,-9,10,-10,9,-8,5,-8,4,8,-6,7,-6,2,8,-8,-4,9,-4,-5,-7,10,2,6,3,-6,-6,8,-3,2,2,-8,-8,10,-8,-6,10,6,5,-6,7,-9,4,5,-8,1,-8,8,-9,-1,-5,-3,-5,7,-10,-8,4,10,-7,-7,3,-6,-8,10,-3,4,7,3,4,-2,2,3,-7,3,-9,10,-8,-4,1,4,4,1,3,3,-3,-4,-5,10,2,-8,4,3,-6,-10,3,-2,10,-10,7,-2,8,-3,5,-7,-7,-7,4,-4,-9,9,8,10,-3,1,-4,10,1,5,9,2,-6,10,9,2,8,-1,-3,4,-9,-7,8,-5,3,4,3,-9,-4,-10,-2,-2,-6,-9,-2,-6,-8,6,-2,-4,2,-6,-3,-5,-3,2,1,-6,-7,-7,-7,-3,-8,10,9,-7,-1,7,8,-3,-9,6,8,-7,8,5,-9,-10,-7,-8,-6,7,-8,1,6,-8,-8,-5,6,-5,-7,2,9,4,-4,-2,7,-8,-6,4,-3,-9,5,-1,-7,7,-7,10,1,-3,4,5,-9,-10,-2,-6,-5,9,-8,-4,7,9,-10,-1,10,-8,-1,8,8,2,-2,-8,-5,10,-7,10,-8,5,5,1,-10,-10,5,-9,-7,4,1,-10,-9,2,7,-8,-1,2,-1,-1,-3,-1,10,1,3,1,-7,2,3,2,8,-4,-4,-4,9,-7,-6,-3,10,-6,-9,-1,-7,-4,9,-10,-7,5,-1,8,4,-6,-6,9,-1,3,1,8,-8,-10,-10,5,7,9,-1,-1,4,7,4,-8,-8,-7,-4,1,-9,1,3,7,8,-9,-2,-3,-6,6,4,-7,4,5,8,2,-7,9,8,2,-1,-2,1,-1,8,9,3,8,1,-7,-9,8,-1,8,2,-5,10,8,-5,-2,-6,6,-8,-9,8,-10,7,3,-5,-9,-10,10,4,-5,6,-3,-10,-4,-5,-7,-10,-10,-5,7,5,-8,2,6,5,4,-1,-6,8,-7,-2,6,3,9,8,-9,3,7,-5,-1,6,-4,4,6,-9,-5,-9,-10,-4,10,4,4,-7,3,5,2,9,8,7,5,9,6,-10,2,-7,7,-2,-1,3,-10,-7,-10,2,10,-4,-5,7,-2,-2,-1,7,-4,-1,9,-8,2,3,10,2,5,6,-10,5,-8,-8,-8,10,-5,7,-5,-5,10,1,-3,1,10,10,-8,3,2,8,-6,3,9,9,5,-3,4,-5,8,7], dtype = "uint64")#candidate|5818|(1248,)|const|uint64
const_5819 = relay.const([8.006854,6.387063,8.280547,6.195949,6.263995,-0.297498,6.479422,0.735398,-3.517995,5.517822,-0.170760,8.029361,1.405502,-7.531233,6.811612], dtype = "float64")#candidate|5819|(15,)|const|float64
call_5817 = relay.TupleGetItem(func_3068_call(relay.reshape(const_5818.astype('uint64'), [13, 16, 6]), relay.reshape(const_5819.astype('float64'), [5, 3]), ), 5)
call_5820 = relay.TupleGetItem(func_3071_call(relay.reshape(const_5818.astype('uint64'), [13, 16, 6]), relay.reshape(const_5819.astype('float64'), [5, 3]), ), 5)
output = relay.Tuple([call_5814,call_5817,const_5818,const_5819,])
output2 = relay.Tuple([call_5815,call_5820,const_5818,const_5819,])
func_5833 = relay.Function([], output)
mod['func_5833'] = func_5833
mod = relay.transform.InferType()(mod)
output = func_5833()
func_5834 = relay.Function([], output)
mutated_mod['func_5834'] = func_5834
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4146_call = mod.get_global_var('func_4146')
func_4147_call = mutated_mod.get_global_var('func_4147')
call_5851 = relay.TupleGetItem(func_4146_call(), 0)
call_5852 = relay.TupleGetItem(func_4147_call(), 0)
output = relay.Tuple([call_5851,])
output2 = relay.Tuple([call_5852,])
func_5853 = relay.Function([], output)
mod['func_5853'] = func_5853
mod = relay.transform.InferType()(mod)
output = func_5853()
func_5854 = relay.Function([], output)
mutated_mod['func_5854'] = func_5854
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2546_call = mod.get_global_var('func_2546')
func_2548_call = mutated_mod.get_global_var('func_2548')
call_5855 = relay.TupleGetItem(func_2546_call(), 0)
call_5856 = relay.TupleGetItem(func_2548_call(), 0)
output = call_5855
output2 = call_5856
func_5857 = relay.Function([], output)
mod['func_5857'] = func_5857
mod = relay.transform.InferType()(mod)
output = func_5857()
func_5858 = relay.Function([], output)
mutated_mod['func_5858'] = func_5858
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3293_call = mod.get_global_var('func_3293')
func_3294_call = mutated_mod.get_global_var('func_3294')
call_5859 = relay.TupleGetItem(func_3293_call(), 0)
call_5860 = relay.TupleGetItem(func_3294_call(), 0)
output = relay.Tuple([call_5859,])
output2 = relay.Tuple([call_5860,])
func_5861 = relay.Function([], output)
mod['func_5861'] = func_5861
mod = relay.transform.InferType()(mod)
mutated_mod['func_5861'] = func_5861
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5861_call = mutated_mod.get_global_var('func_5861')
call_5862 = func_5861_call()
output = call_5862
func_5863 = relay.Function([], output)
mutated_mod['func_5863'] = func_5863
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4979_call = mod.get_global_var('func_4979')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_5918 = relay.TupleGetItem(func_4979_call(), 1)
call_5919 = relay.TupleGetItem(func_4981_call(), 1)
output = call_5918
output2 = call_5919
func_5920 = relay.Function([], output)
mod['func_5920'] = func_5920
mod = relay.transform.InferType()(mod)
mutated_mod['func_5920'] = func_5920
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5920_call = mutated_mod.get_global_var('func_5920')
call_5921 = func_5920_call()
output = call_5921
func_5922 = relay.Function([], output)
mutated_mod['func_5922'] = func_5922
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5932 = relay.var("var_5932", dtype = "float32", shape = (14, 12, 8))#candidate|5932|(14, 12, 8)|var|float32
uop_5933 = relay.erf(var_5932.astype('float32')) # shape=(14, 12, 8)
output = uop_5933
output2 = uop_5933
func_5942 = relay.Function([var_5932,], output)
mod['func_5942'] = func_5942
mod = relay.transform.InferType()(mod)
var_5943 = relay.var("var_5943", dtype = "float32", shape = (14, 12, 8))#candidate|5943|(14, 12, 8)|var|float32
output = func_5942(var_5943)
func_5944 = relay.Function([var_5943], output)
mutated_mod['func_5944'] = func_5944
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5974 = relay.var("var_5974", dtype = "float32", shape = (14, 6, 14))#candidate|5974|(14, 6, 14)|var|float32
uop_5975 = relay.sigmoid(var_5974.astype('float32')) # shape=(14, 6, 14)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_5988 = relay.TupleGetItem(func_5768_call(), 0)
call_5989 = relay.TupleGetItem(func_5770_call(), 0)
output = relay.Tuple([uop_5975,call_5988,])
output2 = relay.Tuple([uop_5975,call_5989,])
func_6014 = relay.Function([var_5974,], output)
mod['func_6014'] = func_6014
mod = relay.transform.InferType()(mod)
mutated_mod['func_6014'] = func_6014
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6015 = relay.var("var_6015", dtype = "float32", shape = (14, 6, 14))#candidate|6015|(14, 6, 14)|var|float32
func_6014_call = mutated_mod.get_global_var('func_6014')
call_6016 = func_6014_call(var_6015)
output = call_6016
func_6017 = relay.Function([var_6015], output)
mutated_mod['func_6017'] = func_6017
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3107_call = mod.get_global_var('func_3107')
func_3108_call = mutated_mod.get_global_var('func_3108')
call_6019 = relay.TupleGetItem(func_3107_call(), 1)
call_6020 = relay.TupleGetItem(func_3108_call(), 1)
output = call_6019
output2 = call_6020
func_6036 = relay.Function([], output)
mod['func_6036'] = func_6036
mod = relay.transform.InferType()(mod)
output = func_6036()
func_6037 = relay.Function([], output)
mutated_mod['func_6037'] = func_6037
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6095 = relay.TupleGetItem(func_5768_call(), 0)
call_6096 = relay.TupleGetItem(func_5770_call(), 0)
uop_6121 = relay.log(call_6095.astype('float32')) # shape=(13, 16, 6)
uop_6123 = relay.log(call_6096.astype('float32')) # shape=(13, 16, 6)
output = relay.Tuple([uop_6121,])
output2 = relay.Tuple([uop_6123,])
func_6127 = relay.Function([], output)
mod['func_6127'] = func_6127
mod = relay.transform.InferType()(mod)
mutated_mod['func_6127'] = func_6127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6127_call = mutated_mod.get_global_var('func_6127')
call_6128 = func_6127_call()
output = call_6128
func_6129 = relay.Function([], output)
mutated_mod['func_6129'] = func_6129
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_6202 = relay.TupleGetItem(func_1940_call(), 4)
call_6203 = relay.TupleGetItem(func_1941_call(), 4)
var_6230 = relay.var("var_6230", dtype = "float64", shape = (11, 7, 16))#candidate|6230|(11, 7, 16)|var|float64
bop_6231 = relay.left_shift(call_6202.astype('uint16'), relay.reshape(var_6230.astype('uint16'), relay.shape_of(call_6202))) # shape=(11, 7, 16)
bop_6234 = relay.left_shift(call_6203.astype('uint16'), relay.reshape(var_6230.astype('uint16'), relay.shape_of(call_6203))) # shape=(11, 7, 16)
uop_6240 = relay.sigmoid(bop_6231.astype('float64')) # shape=(11, 7, 16)
uop_6242 = relay.sigmoid(bop_6234.astype('float64')) # shape=(11, 7, 16)
output = uop_6240
output2 = uop_6242
func_6249 = relay.Function([var_6230,], output)
mod['func_6249'] = func_6249
mod = relay.transform.InferType()(mod)
var_6250 = relay.var("var_6250", dtype = "float64", shape = (11, 7, 16))#candidate|6250|(11, 7, 16)|var|float64
output = func_6249(var_6250)
func_6251 = relay.Function([var_6250], output)
mutated_mod['func_6251'] = func_6251
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4214_call = mod.get_global_var('func_4214')
func_4216_call = mutated_mod.get_global_var('func_4216')
call_6253 = relay.TupleGetItem(func_4214_call(), 3)
call_6254 = relay.TupleGetItem(func_4216_call(), 3)
func_3025_call = mod.get_global_var('func_3025')
func_3028_call = mutated_mod.get_global_var('func_3028')
var_6260 = relay.var("var_6260", dtype = "float32", shape = (2912,))#candidate|6260|(2912,)|var|float32
call_6259 = relay.TupleGetItem(func_3025_call(relay.reshape(var_6260.astype('float32'), [13, 16, 14])), 2)
call_6261 = relay.TupleGetItem(func_3028_call(relay.reshape(var_6260.astype('float32'), [13, 16, 14])), 2)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6262 = relay.TupleGetItem(func_5768_call(), 0)
call_6263 = relay.TupleGetItem(func_5770_call(), 0)
var_6266 = relay.var("var_6266", dtype = "int64", shape = (4, 14, 3))#candidate|6266|(4, 14, 3)|var|int64
bop_6267 = relay.logical_and(call_6253.astype('bool'), relay.reshape(var_6266.astype('bool'), relay.shape_of(call_6253))) # shape=(4, 14, 3)
bop_6270 = relay.logical_and(call_6254.astype('bool'), relay.reshape(var_6266.astype('bool'), relay.shape_of(call_6254))) # shape=(4, 14, 3)
output = relay.Tuple([call_6259,var_6260,call_6262,bop_6267,])
output2 = relay.Tuple([call_6261,var_6260,call_6263,bop_6270,])
func_6273 = relay.Function([var_6260,var_6266,], output)
mod['func_6273'] = func_6273
mod = relay.transform.InferType()(mod)
var_6274 = relay.var("var_6274", dtype = "float32", shape = (2912,))#candidate|6274|(2912,)|var|float32
var_6275 = relay.var("var_6275", dtype = "int64", shape = (4, 14, 3))#candidate|6275|(4, 14, 3)|var|int64
output = func_6273(var_6274,var_6275,)
func_6276 = relay.Function([var_6274,var_6275,], output)
mutated_mod['func_6276'] = func_6276
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1711_call = mod.get_global_var('func_1711')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_6338 = relay.TupleGetItem(func_1711_call(), 0)
call_6339 = relay.TupleGetItem(func_1713_call(), 0)
func_1192_call = mod.get_global_var('func_1192')
func_1194_call = mutated_mod.get_global_var('func_1194')
call_6342 = relay.TupleGetItem(func_1192_call(), 0)
call_6343 = relay.TupleGetItem(func_1194_call(), 0)
output = relay.Tuple([call_6338,call_6342,])
output2 = relay.Tuple([call_6339,call_6343,])
func_6354 = relay.Function([], output)
mod['func_6354'] = func_6354
mod = relay.transform.InferType()(mod)
mutated_mod['func_6354'] = func_6354
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6354_call = mutated_mod.get_global_var('func_6354')
call_6355 = func_6354_call()
output = call_6355
func_6356 = relay.Function([], output)
mutated_mod['func_6356'] = func_6356
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3163_call = mod.get_global_var('func_3163')
func_3164_call = mutated_mod.get_global_var('func_3164')
call_6478 = func_3163_call()
call_6479 = func_3163_call()
output = call_6478
output2 = call_6479
func_6502 = relay.Function([], output)
mod['func_6502'] = func_6502
mod = relay.transform.InferType()(mod)
mutated_mod['func_6502'] = func_6502
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6502_call = mutated_mod.get_global_var('func_6502')
call_6503 = func_6502_call()
output = call_6503
func_6504 = relay.Function([], output)
mutated_mod['func_6504'] = func_6504
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6354_call = mod.get_global_var('func_6354')
func_6356_call = mutated_mod.get_global_var('func_6356')
call_6520 = relay.TupleGetItem(func_6354_call(), 1)
call_6521 = relay.TupleGetItem(func_6356_call(), 1)
output = call_6520
output2 = call_6521
func_6523 = relay.Function([], output)
mod['func_6523'] = func_6523
mod = relay.transform.InferType()(mod)
mutated_mod['func_6523'] = func_6523
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6523_call = mutated_mod.get_global_var('func_6523')
call_6524 = func_6523_call()
output = call_6524
func_6525 = relay.Function([], output)
mutated_mod['func_6525'] = func_6525
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_6539 = relay.TupleGetItem(func_5768_call(), 0)
call_6540 = relay.TupleGetItem(func_5770_call(), 0)
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_6576 = relay.TupleGetItem(func_1677_call(), 1)
call_6577 = relay.TupleGetItem(func_1678_call(), 1)
output = relay.Tuple([call_6539,call_6576,])
output2 = relay.Tuple([call_6540,call_6577,])
func_6580 = relay.Function([], output)
mod['func_6580'] = func_6580
mod = relay.transform.InferType()(mod)
output = func_6580()
func_6581 = relay.Function([], output)
mutated_mod['func_6581'] = func_6581
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4214_call = mod.get_global_var('func_4214')
func_4216_call = mutated_mod.get_global_var('func_4216')
call_6609 = relay.TupleGetItem(func_4214_call(), 1)
call_6610 = relay.TupleGetItem(func_4216_call(), 1)
output = call_6609
output2 = call_6610
func_6631 = relay.Function([], output)
mod['func_6631'] = func_6631
mod = relay.transform.InferType()(mod)
mutated_mod['func_6631'] = func_6631
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mutated_mod.get_global_var('func_6631')
call_6632 = func_6631_call()
output = call_6632
func_6633 = relay.Function([], output)
mutated_mod['func_6633'] = func_6633
mutated_mod = relay.transform.InferType()(mutated_mod)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_6653 = relay.TupleGetItem(func_894_call(), 2)
call_6654 = relay.TupleGetItem(func_896_call(), 2)
func_6127_call = mod.get_global_var('func_6127')
func_6129_call = mutated_mod.get_global_var('func_6129')
call_6663 = relay.TupleGetItem(func_6127_call(), 0)
call_6664 = relay.TupleGetItem(func_6129_call(), 0)
func_497_call = mod.get_global_var('func_497')
func_499_call = mutated_mod.get_global_var('func_499')
call_6666 = relay.TupleGetItem(func_497_call(), 0)
call_6667 = relay.TupleGetItem(func_499_call(), 0)
func_5253_call = mod.get_global_var('func_5253')
func_5255_call = mutated_mod.get_global_var('func_5255')
call_6679 = relay.TupleGetItem(func_5253_call(), 0)
call_6680 = relay.TupleGetItem(func_5255_call(), 0)
func_3717_call = mod.get_global_var('func_3717')
func_3720_call = mutated_mod.get_global_var('func_3720')
const_6694 = relay.const([1.902484,-6.337298,6.469098,-0.801449,2.595229,-0.229068,-8.888418,2.137210,9.383778,0.785081,6.506469,-3.877230,-1.416605,8.169112,-3.703398,0.767694,-6.716609,-2.565587,-7.639138,8.361058,8.249950,2.437433,3.269887,-3.465847,1.469082,8.756396,2.334173,0.444303,-4.098626,1.198821,-1.601777,-5.216269,-9.554304,-8.603110,7.181780,-8.853381,9.473140,6.115980,-5.250444,0.990403], dtype = "float32")#candidate|6694|(40,)|const|float32
call_6693 = func_3717_call(relay.reshape(const_6694.astype('float32'), [5, 8]))
call_6695 = func_3717_call(relay.reshape(const_6694.astype('float32'), [5, 8]))
output = relay.Tuple([call_6653,call_6663,call_6666,call_6679,call_6693,const_6694,])
output2 = relay.Tuple([call_6654,call_6664,call_6667,call_6680,call_6695,const_6694,])
func_6711 = relay.Function([], output)
mod['func_6711'] = func_6711
mod = relay.transform.InferType()(mod)
mutated_mod['func_6711'] = func_6711
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6711_call = mutated_mod.get_global_var('func_6711')
call_6712 = func_6711_call()
output = call_6712
func_6713 = relay.Function([], output)
mutated_mod['func_6713'] = func_6713
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6711_call = mod.get_global_var('func_6711')
func_6713_call = mutated_mod.get_global_var('func_6713')
call_6725 = relay.TupleGetItem(func_6711_call(), 5)
call_6726 = relay.TupleGetItem(func_6713_call(), 5)
func_5942_call = mod.get_global_var('func_5942')
func_5944_call = mutated_mod.get_global_var('func_5944')
var_6736 = relay.var("var_6736", dtype = "float32", shape = (168, 8))#candidate|6736|(168, 8)|var|float32
call_6735 = func_5942_call(relay.reshape(var_6736.astype('float32'), [14, 12, 8]))
call_6737 = func_5942_call(relay.reshape(var_6736.astype('float32'), [14, 12, 8]))
var_6744 = relay.var("var_6744", dtype = "float32", shape = (168, 8))#candidate|6744|(168, 8)|var|float32
bop_6745 = relay.logical_xor(var_6736.astype('uint32'), relay.reshape(var_6744.astype('uint32'), relay.shape_of(var_6736))) # shape=(168, 8)
uop_6749 = relay.exp(var_6744.astype('float64')) # shape=(168, 8)
uop_6776 = relay.sigmoid(uop_6749.astype('float32')) # shape=(168, 8)
output = relay.Tuple([call_6725,call_6735,bop_6745,uop_6776,])
output2 = relay.Tuple([call_6726,call_6737,bop_6745,uop_6776,])
func_6778 = relay.Function([var_6736,var_6744,], output)
mod['func_6778'] = func_6778
mod = relay.transform.InferType()(mod)
mutated_mod['func_6778'] = func_6778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6778_call = mutated_mod.get_global_var('func_6778')
var_6780 = relay.var("var_6780", dtype = "float32", shape = (168, 8))#candidate|6780|(168, 8)|var|float32
var_6781 = relay.var("var_6781", dtype = "float32", shape = (168, 8))#candidate|6781|(168, 8)|var|float32
call_6779 = func_6778_call(var_6780,var_6781,)
output = call_6779
func_6782 = relay.Function([var_6780,var_6781,], output)
mutated_mod['func_6782'] = func_6782
mutated_mod = relay.transform.InferType()(mutated_mod)
func_585_call = mod.get_global_var('func_585')
func_586_call = mutated_mod.get_global_var('func_586')
call_6886 = relay.TupleGetItem(func_585_call(), 5)
call_6887 = relay.TupleGetItem(func_586_call(), 5)
func_4064_call = mod.get_global_var('func_4064')
func_4068_call = mutated_mod.get_global_var('func_4068')
const_6944 = relay.const([4,-1,5,10,8,-6,10,-9,2,9,-4,-3,-1,-9,3,-4,-9,10,9,-7,-7,5,3,-6,3,-5,8,3,5,2,9,-4,2,-6,5,-9,6,-2,7,-4,-3,9,-8,-9,-4,8,-10,4,8,3,3,6,6,-10,5,-5,-4,-10,-7,-5,3,-4,8,4,-8,-9,-1,-10,-2,1,-4,-8,1,1,8,-10,-1,-1,-4,5,2,-3,-9,-9,5,10,6,-10,-7,-8,-8,3,3,-8,-9,-9,7,5,4,10,-5,1,-10,2,-1,-2,7,6,-1,6,-7,2,-6,-3,2,10,-4,1,-9,3,3,8,-1,1,9,2,2,-4,-3,-9,-10,2,-9,10,-8,-9,-6,-3,1,9,-1,10,6,-10,-10,-4,7,4,1,-3,7,-9,10,2,-6,-3,-3,-8,8,-10,8,-7,-7,10,-5,6,8,-6,9,-8,-8,-10,6,4,8,2,-5,3,-10,-2,8,8,7,-2,10,9,-5,-3,-9,-4,-10,-4,-5,-8,10,1,-10,-3,3,-3,-9,2,-3,4,-3,-8,-5,9,9,-7,9,-6,9,8,-7,4,3,-8,3,10,-10,-1,3,5,7,-9,-9,5,-4,-7,-4,-5,-9,5,4,-1,4,-7,10,-6,-3,-3,-10,10,1,-5,10,-2,-4,4,10,2,5,-10,-3,-4,-1,-9,-5,-9,8,-1,-5,-1,8,8,-1,2,10,-3,-6,9,5,-2,-9,-7,4,-9,-9,-1,6,-4,10,2,-6,4,3,-3,1,9,6,-9,5,3,-8,2,-4,10,-2,5,-9,-2,-2,3,10,-5,9,1,4,10,10,6,8,-7,8,8,9,-2,-5,-6,8,-5,5,-2,2,1,-4,6,-2,-2,-5,10,8,-6,-8,10,-2,-4,1,-8,-10,4,5,-5,3,7,-8,1,-2,1,-7,-7,-7,10,9,-10,-6,-2,-6,-9,-4,4,-5,8,-2,-7,-1,10,5,6,7,-2,2,-7,9,-5,2,5,-6,5,1,7,-6,9,-8,-5,1,-1,1,1,-1,5,8,1,2,-2,-7,6,-7,-5,8,-9,9,-3,-7,10,-1,-3,4,2,1,-10,2,-2,-1,-3,10,9,3,10,4,-8,-7,-5,7,7,-1,6,3,6,8,-10,-3,-10,10,-8,1,1,-7,9,4,-1,2,-2,-5,6,10,-2,6,-1,3,1,5,2,-10,5,-8,3,-4,-3,-5,-4,7,-8,-9,9,8,6,2,5,-10,8,-9,-5,5,-3,9,3,-5,-8,2,6,5,-3,-9,-3,-1,6,9,2,-1,4,2,5,10,2,1,2,-8,-7,3,8,8,-3,-7,-2,-2,10,6,3,-9,8,1,-7,6,7,-1,-5,-9,7,5,-6,-8,3,2,-9,-9,2,-8,-10,-1,4,-4,-3,7,-2,-9,-1,3,-10,8,-5,-8,-8,5,1,-8,10,-3,-6,-2,5,7,10,-8,2,-10,2,3,4,-7,-4,9,-7,-6,3,3,9,1,-9,-2,4,9,9,5,10,8,9,7,-10,-2,10,10,-7,-1,-2,7,-4,-4,-8,8,-3,3,4,9,-4,-6,8,6,-8,2,-9,-8,5,7,10,-3,-2,6,-8,-9,-8,7,-2,3,-1,10,4,-4,-9,-4,6,2,2,5,5,-2,-10,10,3,2,8,3,-9,3,-8,4,2,4,-6,-4,3,-5,-7,5,-8,-4,-8,-10,-4,4,8,7,-6,6,8,-4,-7,3,5,4,4,2,6,8,5,-3,-10,4,9,-9,-9,-9,-3,10,2,-3,-5,8,-5,1,-6,2,5,1,8,-5,4,-3,8,-7,1,-7,-3,8,-9,9,-5,3,-8,8,-6,-3,6,-1,1,-7,8,-9,-8,2,-7,-7,1,-4,4,-5,4,-5,3,-7,6,1,7,-6,8,-4,-8,-7,1,-7,1,7,9,-6,-10,1,6,-9,-3,-9,4,3,-6,-10,-2,-4,-9,8,5,-4,-8,2,-6,-10,7,-7,-5,-2,3,-10,8,-7,4,-7,-3,5,-6,9,7,1,9,4,2,-6,7,9,-7,2,-4,-10,10,10,10,9,9,3,10,3,-5,-7,3,8,2,3,1,-5,-9,-8,-4,-8,9,-2,-9,10,-2,-6,3,-8,8,-3,5,1,-4,-2,-7,3,2,-2,-8,6,-9,8,-10,7,6,-6,-7,-4,7,-9,-6,10,-8,2,-7,8,3,-8,-10,9,-2,-8,4,-1,-6,5,5,-4,8,-10,4,-10,4,10,-2,2,5,-6,2,10,-8,-1,-10,5,-3,-4,-3,-4,4,-2,2,-2,-6,8,6,5,2,-6,-3,2,-7,2,5,-8,-9,-7,6,10,10,1,5,-9,-2,-1,7,10,2,-4,8,-5,-2,-8,2,2,7,9,9,-10,4,-7,-5,-4,1,-3,2,3,-2,4,-10,-7,2,-8,-3,-4,-10,-7,8,-3,3,-7,7,9,-5,-3,-1,-4,6,6,2,6,8,8,-7,6,-10,5,5,5,6,6,8,-2,2,4,7,6,3,3,7,-10,-6,-2,-8,10,-7,-3,6,9,-5,-2,3,8,-1,6,4,-5,-10,1,6,-3,-8,9,-4,-2,3,3,-1,4,4,2,-7,-8,7,-6,-9,-7,-5,-2,7,10,-7,8,4,2,3,7,2,-6,3,4,-8,2,7,2,8,-6,5,-3,-7,8,-8,7,-10,-10,4,6,3,5,2,6,9,2,-7,4,9,-1,9,-8,-2,4,2,-7,-8,9,-10,-9,-8,-5,-8,-8,-3,6,8,2,4,-5,6,3,4,5,6,5,4,10,2,-9,-8,8,-8,-7,6,1,4,7,6,2,-7,6,10,5,6,7,-8,-2,-3,3,1,-3,-5,-2,4,3,-2,3,6,4,-2,8,5,-10,-2,-10,-6,9,3,2,-5,9,5,1,-1,-5,-5,-7,-6,-1,-2,1,-1,-7,2,-4,-6,6,8,-3,4,4,-5,-10,-9,-9,-1,7,1,-8,5,7,6,3,3,-5,-7,6,9,3,8,-9,10,-1,-1,-1,-3,-8,-6,-5,10,-3,8,-9,5,6,-1,2,-2,2,4,-10,6,7,2,8,-3,-8,-10,7,6,1,-10,-9,-8,6,6,10,-5,-3,-1,8,4,5,1,-1,7,4,-7,-10,4,8,1,4,-4,-4,8,9,7,7,-7,-5,-2,-2,2,5,-9,7,-10,-7,-8,9,4,-9,3,-7,4,-5,-10,5,-10,-9,-3,10,-9,-8,-9,-4,-9,1,9,-10,-1,9,-3,-5,-9,1,-3,7,-7,9,-4,-8,8,-4,-1,-9,-1,-6,-7,7,-9,7,-9,-2,-1,-4,-5,-9,6,-9,-10,-9,-9,7,-8,-3,3,9,-6,8,-3,4,9,-1,7,-9,-8,-9,-3,-4,-1,10,-9,-3,1,2,-8,-1,10,-9,2,5,6,9,-10,-2,2,-4,10,-5,1,-4,4,7,7,-10,-5,1,8,-1,-4,1,7,-6,3,8,9,-4,-7,-6,6,-5,8,2,-5,6,8,-5,3,3,-3,1,-5,4,5,-8,5,-3,1,-10,-10,6,-6,-4,2,-2,-10,-8,7,7,-3,4,-10,2,-4,-10,1,-2,-6,-3,-6,5,7,9,5,-9,-2,-6,-1,6,1,10,1,-6,-10,7,-5,10,-6,-7,6,9,8,-2,4,-4,3,6,6,3,2,-2,4,8,-10,1,10,5,7,-8,-5,-5,-8,2,-4,2,7,-10,5,-1,2,2,-5,-3,4,3,-8,6,1,2,5,1,7,2,-9,8,8,5,-6,-6,-2,2,9,-5,-7,8,-2,-3,10,10,10,-1,7,2,4,8,8,5,-7,2,7,6,-8,-6,-4,-8,-6,5,-6,-1,-6,8,6,-3,-2,-6,6,-6,-1,-5,-3,-1,5,-4,-10,3,1,-2,-3,-9,2,5,7,4,-6,-3,3,9,8,9,10,8,3,10,4,2,7,4,9,-2,-9,5,8,2,-1,8,4,5,-5,-1,4,-3,-1,5,-6,-6,-1,-1,-6,9,-5,-1,4,-4,8,-5,1,5,8,-1,-6,-1,7,-8,-4,-2,-7,-6,6,-7,5,9,4,7,4,6,2,-9,-9,2,5,2,5,-2,-8,-5,4,9,10,8,2,3,3,-3,-8,-8,8,-6,10,6,-8,-10,-7,-8,5,-10,-4,-2,-3,-1,-1,6,3,-4,10,8,1,10,-9,4,6,2,6,-9,3,2,3,5,1,-6,9,1,-1,9,-1,5,-6,-9,3,1,-8,-1,-2,6,6,-6,-5,5,10,-6,-7,-8,10,-5,-5,-8,-3,5,-5,-1,-10,-6,-6,1,-6,-6,-9,-8,-2,-1,-1,-10,-10,-10,-4,6,7,-9,6,8,-8,-5,-9,-6,-5,-7,-6,1,-2,8,1,3,9,-3,-1,-5,7,8,2,-8,8,3,4,7,6,-3,-3,-7,10,5,2,2,1,-5,1,2,-1,-3,-1,-1,8,-6,-2,-1,-10,4,8,1,-6,-6,2,-8,5,5,10,4,2,8,10,6,6,4,-6,7,3,-10,-1,9,-8,3,2,7,-7,8,4,1,-2,8,-2,-1,-8,4,-9,-7,-7,6,-8,-1,-8,6,1,-4,2,4,-4,-3,-7,-4,-7,-5,3,-2,-6,10,4,-8,1,1,-1,-1,1,9,-8,4,8,-10,3,-4,8,5,-7,-8,-4,-4,-3,1,-9,-10,5,-2,7,4,5,9,1,5,6,6,2,4,-7,7,-5,-4,-5,5,-10,2,-8,-1,4,7,-9,9,-5,7,7,-1,-3,5,3,9,-9,-3,9,-8,-1,-4,-7,2,-7,-7,2,-9,5,2,1,5,10,1,-1,-6,-1,5,-7,-4,-7,-1,9,6,3,3,-9,8,-6,3,-5,2,-1,-5,-5,3,10,-2,5,4,-6,-3,-7,6,-7,3,-8,-9,-3,5,3,-1,-5,1,-1,-9,-4,-3,1,-4,-8,2,1,3,4,-1,10,-2,-5,5,10,4,-6,6,-6,-8,7,-10,-9,-10,5,-2,3,9,6,3,-10,1,2,5,-8,-4,-1,3,9,5,-7,8,2,8,-3,-6,-8,1,6,9,7,1,8,-9,7,9,-2,4,4,4,2,2,-8,-9,-9,10,-4,5,5,6,-10,6,4,8,1,-7,1,-5,2,-3,4,6,-4,-7,5,-1,-2,6,8,-6,-5,3,2,-7,2,5,5,4,-2,-8,-6,-1,5,-4,1,-3,-3,-4,-4,1,-3,2,10,5,8,-3,2,5,-1,-10,1,3,-10,10,10,-10,10,8,9,-3,9,-3,10,-8,-7,5,4,1,-5,-7,-2,7,-8,-1,-2,-6,-2,2,5,3,2,9,8,-9,-10,-9,1,4,2,-10,2,5,-3,4,-9,-1,8,7,1,-10,-2,5,6,-5,-5,-1,1,10,5,3,2,-6,-3,8,-1,-8,9,6,-3,2,-8,-6,10,-2,-8,10,-10,-2,-9,8,9,1,-9,3,-10,9,-9,6,1,-6,-4,10,-3,6,5,10,-9,-3,-7,-10,1,-4,6,-4,9,-5,8,-6,10,-1,-7,-10,-3,5,-9,-9,-6,-3,-5,7,-8,-7,-10,5,5,4,6,-8,-8,9,10,8,-2,-6,9,-9,8,3,-8,-7,-4,-5,-8,1,8,1,-9,1,1,6,-3,-7,10,-10,-8], dtype = "uint8")#candidate|6944|(2156,)|const|uint8
call_6943 = relay.TupleGetItem(func_4064_call(relay.reshape(const_6944.astype('uint8'), [14, 11, 14]), relay.reshape(const_6944.astype('uint8'), [14, 11, 14]), ), 0)
call_6945 = relay.TupleGetItem(func_4068_call(relay.reshape(const_6944.astype('uint8'), [14, 11, 14]), relay.reshape(const_6944.astype('uint8'), [14, 11, 14]), ), 0)
func_2739_call = mod.get_global_var('func_2739')
func_2742_call = mutated_mod.get_global_var('func_2742')
var_6956 = relay.var("var_6956", dtype = "float64", shape = (1440,))#candidate|6956|(1440,)|var|float64
call_6955 = relay.TupleGetItem(func_2739_call(relay.reshape(var_6956.astype('float64'), [180, 8])), 0)
call_6957 = relay.TupleGetItem(func_2742_call(relay.reshape(var_6956.astype('float64'), [180, 8])), 0)
func_1110_call = mod.get_global_var('func_1110')
func_1112_call = mutated_mod.get_global_var('func_1112')
call_6959 = relay.TupleGetItem(func_1110_call(), 1)
call_6960 = relay.TupleGetItem(func_1112_call(), 1)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_6964 = func_371_call()
call_6965 = func_371_call()
output = relay.Tuple([call_6886,call_6943,const_6944,call_6955,var_6956,call_6959,call_6964,])
output2 = relay.Tuple([call_6887,call_6945,const_6944,call_6957,var_6956,call_6960,call_6965,])
func_6973 = relay.Function([var_6956,], output)
mod['func_6973'] = func_6973
mod = relay.transform.InferType()(mod)
var_6974 = relay.var("var_6974", dtype = "float64", shape = (1440,))#candidate|6974|(1440,)|var|float64
output = func_6973(var_6974)
func_6975 = relay.Function([var_6974], output)
mutated_mod['func_6975'] = func_6975
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_6985 = relay.TupleGetItem(func_1940_call(), 0)
call_6986 = relay.TupleGetItem(func_1941_call(), 0)
output = relay.Tuple([call_6985,])
output2 = relay.Tuple([call_6986,])
func_6999 = relay.Function([], output)
mod['func_6999'] = func_6999
mod = relay.transform.InferType()(mod)
mutated_mod['func_6999'] = func_6999
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6999_call = mutated_mod.get_global_var('func_6999')
call_7000 = func_6999_call()
output = call_7000
func_7001 = relay.Function([], output)
mutated_mod['func_7001'] = func_7001
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7005 = relay.var("var_7005", dtype = "float32", shape = (12, 16, 1))#candidate|7005|(12, 16, 1)|var|float32
uop_7006 = relay.log2(var_7005.astype('float32')) # shape=(12, 16, 1)
uop_7009 = relay.acosh(var_7005.astype('float32')) # shape=(12, 16, 1)
func_3128_call = mod.get_global_var('func_3128')
func_3130_call = mutated_mod.get_global_var('func_3130')
call_7028 = relay.TupleGetItem(func_3128_call(), 0)
call_7029 = relay.TupleGetItem(func_3130_call(), 0)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_7030 = func_371_call()
call_7031 = func_371_call()
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_7040 = relay.TupleGetItem(func_894_call(), 0)
call_7041 = relay.TupleGetItem(func_896_call(), 0)
output = relay.Tuple([uop_7006,uop_7009,call_7028,call_7030,call_7040,])
output2 = relay.Tuple([uop_7006,uop_7009,call_7029,call_7031,call_7041,])
func_7044 = relay.Function([var_7005,], output)
mod['func_7044'] = func_7044
mod = relay.transform.InferType()(mod)
var_7045 = relay.var("var_7045", dtype = "float32", shape = (12, 16, 1))#candidate|7045|(12, 16, 1)|var|float32
output = func_7044(var_7045)
func_7046 = relay.Function([var_7045], output)
mutated_mod['func_7046'] = func_7046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2877_call = mod.get_global_var('func_2877')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_7062 = relay.TupleGetItem(func_2877_call(), 0)
call_7063 = relay.TupleGetItem(func_2878_call(), 0)
func_5253_call = mod.get_global_var('func_5253')
func_5255_call = mutated_mod.get_global_var('func_5255')
call_7064 = relay.TupleGetItem(func_5253_call(), 0)
call_7065 = relay.TupleGetItem(func_5255_call(), 0)
output = relay.Tuple([call_7062,call_7064,])
output2 = relay.Tuple([call_7063,call_7065,])
func_7078 = relay.Function([], output)
mod['func_7078'] = func_7078
mod = relay.transform.InferType()(mod)
output = func_7078()
func_7079 = relay.Function([], output)
mutated_mod['func_7079'] = func_7079
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3128_call = mod.get_global_var('func_3128')
func_3130_call = mutated_mod.get_global_var('func_3130')
call_7089 = relay.TupleGetItem(func_3128_call(), 0)
call_7090 = relay.TupleGetItem(func_3130_call(), 0)
output = relay.Tuple([call_7089,])
output2 = relay.Tuple([call_7090,])
func_7114 = relay.Function([], output)
mod['func_7114'] = func_7114
mod = relay.transform.InferType()(mod)
mutated_mod['func_7114'] = func_7114
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7114_call = mutated_mod.get_global_var('func_7114')
call_7115 = func_7114_call()
output = call_7115
func_7116 = relay.Function([], output)
mutated_mod['func_7116'] = func_7116
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7114_call = mod.get_global_var('func_7114')
func_7116_call = mutated_mod.get_global_var('func_7116')
call_7117 = relay.TupleGetItem(func_7114_call(), 0)
call_7118 = relay.TupleGetItem(func_7116_call(), 0)
func_4979_call = mod.get_global_var('func_4979')
func_4981_call = mutated_mod.get_global_var('func_4981')
call_7123 = relay.TupleGetItem(func_4979_call(), 0)
call_7124 = relay.TupleGetItem(func_4981_call(), 0)
func_264_call = mod.get_global_var('func_264')
func_266_call = mutated_mod.get_global_var('func_266')
call_7134 = relay.TupleGetItem(func_264_call(relay.reshape(call_7117.astype('uint64'), [13, 16, 6])), 1)
call_7135 = relay.TupleGetItem(func_266_call(relay.reshape(call_7117.astype('uint64'), [13, 16, 6])), 1)
output = relay.Tuple([call_7117,call_7123,call_7134,])
output2 = relay.Tuple([call_7118,call_7124,call_7135,])
func_7142 = relay.Function([], output)
mod['func_7142'] = func_7142
mod = relay.transform.InferType()(mod)
output = func_7142()
func_7143 = relay.Function([], output)
mutated_mod['func_7143'] = func_7143
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7173 = relay.const([[[-7,-7,7,-10,6,-7,-5,-2,-8,-9,3,-4,-1],[1,-10,-5,7,-6,10,7,3,-6,10,-5,-6,-5],[-4,-7,-7,4,9,6,1,-10,7,-8,5,9,3],[-4,-8,7,-9,6,-1,5,2,-7,3,-6,7,1],[10,-7,-1,10,-9,1,1,8,-10,3,-4,6,8]],[[-8,-8,6,6,-10,6,10,9,5,-1,-2,-6,6],[3,-7,-6,5,3,-1,-9,-10,1,10,1,9,-10],[6,4,-6,-4,10,-10,-1,10,-6,2,-2,7,-4],[1,2,-2,7,-10,5,-10,1,1,4,5,8,7],[-2,-6,-5,-10,6,5,10,-10,7,-9,9,2,1]],[[5,-5,-1,-9,3,-2,10,5,-5,3,9,3,-10],[-9,-6,-10,-10,-3,3,-8,7,1,9,-5,2,-8],[-9,2,1,-4,2,8,-10,-4,5,1,-3,-9,2],[-7,-3,-7,5,-2,9,-5,-9,-6,4,-3,-4,-8],[1,-9,1,-7,-10,7,-2,-4,-4,-5,-2,3,2]],[[2,2,-5,7,-6,-2,5,5,-9,-10,7,2,10],[-2,-9,-10,-2,-2,7,-3,-10,-6,-6,6,8,-8],[1,-9,-3,5,-7,2,-7,-6,-6,7,-1,2,6],[5,-5,10,-3,8,-10,-8,7,-4,-6,1,9,-9],[-3,-10,-8,-2,7,10,9,-6,2,5,5,6,-2]],[[-5,-4,-1,-3,7,-7,-6,-9,2,8,-8,-3,-10],[2,4,-2,5,3,-5,9,2,1,10,-6,-9,-2],[5,-9,8,2,7,10,1,10,-4,10,-4,-3,10],[-7,-4,-7,6,7,-7,-5,4,-8,3,-1,-6,-10],[-1,-7,2,3,4,-8,-3,-6,5,-9,-9,2,-5]]], dtype = "int64")#candidate|7173|(5, 5, 13)|const|int64
var_7174 = relay.var("var_7174", dtype = "int64", shape = (5, 5, 13))#candidate|7174|(5, 5, 13)|var|int64
bop_7175 = relay.less_equal(const_7173.astype('bool'), relay.reshape(var_7174.astype('bool'), relay.shape_of(const_7173))) # shape=(5, 5, 13)
uop_7184 = relay.log10(bop_7175.astype('float64')) # shape=(5, 5, 13)
uop_7186 = relay.asin(uop_7184.astype('float64')) # shape=(5, 5, 13)
func_3384_call = mod.get_global_var('func_3384')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_7188 = relay.TupleGetItem(func_3384_call(), 3)
call_7189 = relay.TupleGetItem(func_3385_call(), 3)
output = relay.Tuple([uop_7186,call_7188,])
output2 = relay.Tuple([uop_7186,call_7189,])
func_7193 = relay.Function([var_7174,], output)
mod['func_7193'] = func_7193
mod = relay.transform.InferType()(mod)
mutated_mod['func_7193'] = func_7193
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7194 = relay.var("var_7194", dtype = "int64", shape = (5, 5, 13))#candidate|7194|(5, 5, 13)|var|int64
func_7193_call = mutated_mod.get_global_var('func_7193')
call_7195 = func_7193_call(var_7194)
output = call_7195
func_7196 = relay.Function([var_7194], output)
mutated_mod['func_7196'] = func_7196
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4374_call = mod.get_global_var('func_4374')
func_4376_call = mutated_mod.get_global_var('func_4376')
call_7230 = relay.TupleGetItem(func_4374_call(), 1)
call_7231 = relay.TupleGetItem(func_4376_call(), 1)
func_4787_call = mod.get_global_var('func_4787')
func_4789_call = mutated_mod.get_global_var('func_4789')
call_7232 = relay.TupleGetItem(func_4787_call(), 1)
call_7233 = relay.TupleGetItem(func_4789_call(), 1)
var_7234 = relay.var("var_7234", dtype = "float32", shape = (24, 8))#candidate|7234|(24, 8)|var|float32
bop_7235 = relay.bitwise_and(call_7230.astype('uint32'), relay.reshape(var_7234.astype('uint32'), relay.shape_of(call_7230))) # shape=(24, 8)
bop_7238 = relay.bitwise_and(call_7231.astype('uint32'), relay.reshape(var_7234.astype('uint32'), relay.shape_of(call_7231))) # shape=(24, 8)
var_7241 = relay.var("var_7241", dtype = "float32", shape = (24, 8))#candidate|7241|(24, 8)|var|float32
bop_7242 = relay.mod(call_7230.astype('float64'), relay.reshape(var_7241.astype('float64'), relay.shape_of(call_7230))) # shape=(24, 8)
bop_7245 = relay.mod(call_7231.astype('float64'), relay.reshape(var_7241.astype('float64'), relay.shape_of(call_7231))) # shape=(24, 8)
var_7249 = relay.var("var_7249", dtype = "float32", shape = (24, 8))#candidate|7249|(24, 8)|var|float32
bop_7250 = relay.floor_divide(call_7230.astype('float64'), relay.reshape(var_7249.astype('float64'), relay.shape_of(call_7230))) # shape=(24, 8)
bop_7253 = relay.floor_divide(call_7231.astype('float64'), relay.reshape(var_7249.astype('float64'), relay.shape_of(call_7231))) # shape=(24, 8)
bop_7263 = relay.right_shift(var_7241.astype('uint32'), relay.reshape(bop_7235.astype('uint32'), relay.shape_of(var_7241))) # shape=(24, 8)
bop_7266 = relay.right_shift(var_7241.astype('uint32'), relay.reshape(bop_7238.astype('uint32'), relay.shape_of(var_7241))) # shape=(24, 8)
func_1340_call = mod.get_global_var('func_1340')
func_1342_call = mutated_mod.get_global_var('func_1342')
call_7271 = func_1340_call()
call_7272 = func_1340_call()
uop_7275 = relay.cosh(var_7241.astype('float64')) # shape=(24, 8)
uop_7280 = relay.atanh(uop_7275.astype('float64')) # shape=(24, 8)
output = relay.Tuple([call_7232,bop_7242,bop_7250,bop_7263,call_7271,uop_7280,])
output2 = relay.Tuple([call_7233,bop_7245,bop_7253,bop_7266,call_7272,uop_7280,])
func_7282 = relay.Function([var_7234,var_7241,var_7249,], output)
mod['func_7282'] = func_7282
mod = relay.transform.InferType()(mod)
mutated_mod['func_7282'] = func_7282
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7282_call = mutated_mod.get_global_var('func_7282')
var_7284 = relay.var("var_7284", dtype = "float32", shape = (24, 8))#candidate|7284|(24, 8)|var|float32
var_7285 = relay.var("var_7285", dtype = "float32", shape = (24, 8))#candidate|7285|(24, 8)|var|float32
var_7286 = relay.var("var_7286", dtype = "float32", shape = (24, 8))#candidate|7286|(24, 8)|var|float32
call_7283 = func_7282_call(var_7284,var_7285,var_7286,)
output = call_7283
func_7287 = relay.Function([var_7284,var_7285,var_7286,], output)
mutated_mod['func_7287'] = func_7287
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2371_call = mod.get_global_var('func_2371')
func_2373_call = mutated_mod.get_global_var('func_2373')
call_7350 = func_2371_call()
call_7351 = func_2371_call()
output = call_7350
output2 = call_7351
func_7367 = relay.Function([], output)
mod['func_7367'] = func_7367
mod = relay.transform.InferType()(mod)
output = func_7367()
func_7368 = relay.Function([], output)
mutated_mod['func_7368'] = func_7368
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7369 = relay.const([[[-9,-10,-10,1,6,9,-5,-4,-2],[8,10,7,4,-10,-3,9,-2,10],[1,-1,-1,8,-3,-10,9,-3,6],[6,7,-6,-7,-10,-5,8,-4,-2],[-1,10,3,9,8,9,-3,-1,-1]],[[9,-6,-6,3,-7,-6,1,-9,1],[1,-4,-1,-2,-7,3,3,-7,-4],[10,-8,-4,5,-10,-6,-6,1,7],[-2,4,-3,-1,-2,-5,-1,4,1],[-4,5,1,-6,-10,9,-7,-8,2]],[[2,2,-2,-10,4,-2,4,-1,1],[10,-3,4,-2,4,-4,3,-2,9],[2,6,-3,-10,6,6,7,7,-10],[1,4,2,-2,5,2,7,-1,-1],[-3,3,-4,1,7,-9,-10,9,-6]],[[5,7,-3,4,-2,-4,1,-4,9],[1,7,-7,-5,9,-5,4,-4,-10],[10,8,6,3,-1,10,-4,7,1],[10,-5,1,-5,-7,-5,-9,-8,-7],[10,4,8,9,-8,-5,-4,-6,-5]],[[8,1,-10,-2,-1,5,9,-7,-7],[10,7,4,-7,-7,7,10,-2,1],[-7,-1,7,8,3,10,2,-6,6],[-3,10,7,-3,-5,8,-7,8,7],[5,-1,1,-10,9,-4,-8,9,-6]],[[-7,3,-4,-7,8,-10,-3,10,-5],[5,-6,1,-3,-4,9,1,8,10],[-7,-4,4,-1,9,1,2,1,-4],[5,-3,10,-10,-10,4,-2,-6,-5],[-8,-7,8,5,8,8,-8,7,-4]],[[3,-7,4,-4,-2,1,-1,4,10],[-10,1,-10,-7,-2,10,-3,-9,8],[4,10,-2,-5,-3,-5,-10,9,10],[-2,8,1,-9,-2,7,-4,2,8],[6,-9,2,-4,-6,6,2,2,2]],[[-7,10,-1,-9,-9,-10,5,8,-7],[-5,-3,-5,6,6,5,-1,-1,2],[-9,7,-2,-3,-7,10,-1,6,-7],[-4,-6,2,8,-6,4,1,10,1],[6,-8,7,8,6,-4,5,-7,6]],[[-4,3,-5,9,10,5,1,5,6],[-9,10,6,-8,1,4,7,4,-8],[-6,-5,6,10,-1,7,9,-10,1],[2,-9,-7,10,10,3,-5,7,-9],[-9,-10,-6,-8,5,3,-7,7,9]],[[8,-9,5,8,-5,9,-6,3,-1],[-5,3,8,-5,-2,-1,-10,10,7],[5,7,-8,4,-7,2,-5,6,6],[-5,-8,-5,9,10,-7,9,2,-2],[2,-8,2,-6,8,6,-7,5,1]],[[6,7,1,3,-8,4,9,3,-7],[-9,1,-5,1,1,7,8,-1,-9],[1,-10,9,8,-2,-5,-7,1,2],[-6,-10,-1,-6,-10,5,9,1,6],[3,-6,-4,-5,-5,-8,4,2,-10]]], dtype = "uint16")#candidate|7369|(11, 5, 9)|const|uint16
const_7370 = relay.const([[[7,10,-7,-3,1,9,-8,8,-7],[10,6,-8,2,7,-4,7,-10,-7],[8,-9,-6,10,-3,7,-1,-1,4],[-1,3,-2,-6,10,-5,-3,1,-1],[2,-8,-4,-9,2,9,-9,2,10]],[[-1,-10,2,-10,-8,7,-7,-3,-4],[-1,-9,2,1,-10,-5,7,-7,-9],[-2,-2,-9,10,-7,-10,-9,3,6],[-9,9,9,2,-2,-1,-7,-9,3],[-7,-3,-7,7,-3,-5,-8,-5,-8]],[[2,8,-8,-2,-4,-6,-8,-2,-9],[-3,-5,7,-5,-6,3,-5,-3,-9],[-4,8,2,4,8,3,5,6,-4],[9,9,2,-1,-6,-9,-5,-6,10],[-6,-9,2,-4,8,4,2,-3,-1]],[[2,1,-4,3,-3,4,-8,-10,5],[-9,-7,-8,2,6,-10,10,9,-1],[4,-4,-2,10,9,9,10,-4,6],[9,3,-3,2,-6,-7,-6,1,-7],[10,-5,7,-4,1,-7,-1,4,2]],[[8,3,5,-9,10,-2,-4,-4,9],[2,-2,3,-1,4,10,-5,9,2],[-7,-6,-2,-3,9,7,3,-3,-6],[2,3,-3,1,-3,7,4,-8,-2],[-9,1,6,-5,-9,2,9,3,10]],[[-6,5,3,7,-9,-10,-7,9,4],[-6,-4,1,10,-10,1,10,-2,7],[10,-3,-10,1,-1,-5,-6,7,-8],[4,8,3,-5,-7,10,2,-9,-9],[7,8,10,4,6,4,10,4,-3]],[[7,1,-4,-9,1,1,-9,-9,8],[-10,-3,-2,10,6,-9,-2,8,-10],[6,-1,9,8,2,-5,-5,3,-1],[5,-8,-7,4,3,5,-8,-5,10],[1,-10,-5,5,9,-8,-4,4,-7]],[[-9,2,-3,-9,10,10,-6,9,-5],[-2,-4,8,-3,-4,4,-8,2,-9],[9,-8,10,10,-10,-3,-5,7,7],[-1,10,9,-9,-9,7,6,3,-4],[3,-10,-4,9,-9,-9,4,1,7]],[[7,7,5,-1,-1,-8,-9,2,3],[4,5,10,4,-6,-7,-4,-7,10],[6,-6,8,-5,-2,-8,-3,8,-10],[4,2,6,2,-4,3,-2,7,-8],[-1,-4,10,-1,8,10,10,9,-3]],[[3,-7,6,-1,10,8,5,-3,-4],[2,-7,-7,-8,3,8,4,-3,8],[-2,-10,7,2,-9,2,9,9,6],[-3,2,2,3,-9,9,-6,6,-5],[3,-8,2,6,-4,5,2,6,3]],[[-3,-6,-3,-2,9,-6,-5,-2,3],[-1,-3,-7,-8,-8,4,2,10,-2],[4,3,-3,8,7,-1,1,-9,-8],[5,-5,8,-8,7,-10,-10,-2,-8],[9,-5,5,7,7,-2,-4,10,-4]]], dtype = "uint16")#candidate|7370|(11, 5, 9)|const|uint16
bop_7371 = relay.minimum(const_7369.astype('uint16'), relay.reshape(const_7370.astype('uint16'), relay.shape_of(const_7369))) # shape=(11, 5, 9)
func_7193_call = mod.get_global_var('func_7193')
func_7196_call = mutated_mod.get_global_var('func_7196')
const_7379 = relay.const([[-4,-3,-4,5,-1],[9,3,3,4,-4],[-6,-9,-6,6,8],[9,1,-8,-5,7],[7,-7,3,4,1],[6,-3,-6,7,-4],[-6,-8,6,-3,3],[4,-6,-10,1,6],[4,-9,7,5,-9],[-3,-5,-1,-1,10],[4,3,5,9,-9],[-9,-9,9,6,-3],[4,-10,-7,8,7],[3,3,1,9,-5],[-7,1,-7,-3,4],[-9,-2,-9,-2,-8],[-6,2,4,7,-5],[4,-9,7,5,8],[-6,10,-6,6,6],[8,-2,9,-4,-3],[-9,1,4,-3,-10],[10,7,-5,-7,-10],[-4,4,9,-5,-2],[-1,5,-10,-2,8],[3,7,8,-3,-2],[9,-3,3,8,6],[6,2,9,-10,4],[-2,-8,7,2,10],[-2,1,3,9,4],[3,3,1,7,5],[-9,-8,-8,2,6],[-6,-10,6,-5,-7],[10,-8,3,-7,9],[2,10,5,-7,-10],[9,-1,-4,-4,-2],[7,9,5,3,4],[5,-1,8,-3,-3],[7,-10,2,-7,-5],[7,1,7,10,9],[1,-10,8,-8,-2],[-5,-4,-9,-3,5],[5,9,-2,3,6],[5,-5,2,4,6],[3,-5,10,-5,10],[2,4,1,-10,7],[6,5,-1,-7,-9],[9,6,-10,7,1],[7,-3,7,-8,-8],[-2,9,6,-4,-4],[-5,6,-8,10,-6],[-3,6,-6,1,7],[9,2,7,-9,-8],[-8,6,6,2,9],[9,-1,-9,-6,-2],[-8,4,-10,-7,-6],[10,1,7,7,-3],[9,8,7,-8,-10],[7,1,9,4,8],[4,-1,-3,-2,2],[-9,-7,1,-6,6],[9,-5,5,-2,1],[-7,10,-10,10,5],[5,-3,1,-6,-4],[5,6,-6,4,-9],[9,-10,6,2,-1]], dtype = "int64")#candidate|7379|(65, 5)|const|int64
call_7378 = relay.TupleGetItem(func_7193_call(relay.reshape(const_7379.astype('int64'), [5, 5, 13])), 1)
call_7380 = relay.TupleGetItem(func_7196_call(relay.reshape(const_7379.astype('int64'), [5, 5, 13])), 1)
var_7382 = relay.var("var_7382", dtype = "uint16", shape = (11, 5, 9))#candidate|7382|(11, 5, 9)|var|uint16
bop_7383 = relay.left_shift(const_7369.astype('uint64'), relay.reshape(var_7382.astype('uint64'), relay.shape_of(const_7369))) # shape=(11, 5, 9)
output = relay.Tuple([bop_7371,call_7378,const_7379,bop_7383,])
output2 = relay.Tuple([bop_7371,call_7380,const_7379,bop_7383,])
func_7387 = relay.Function([var_7382,], output)
mod['func_7387'] = func_7387
mod = relay.transform.InferType()(mod)
mutated_mod['func_7387'] = func_7387
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7388 = relay.var("var_7388", dtype = "uint16", shape = (11, 5, 9))#candidate|7388|(11, 5, 9)|var|uint16
func_7387_call = mutated_mod.get_global_var('func_7387')
call_7389 = func_7387_call(var_7388)
output = call_7389
func_7390 = relay.Function([var_7388], output)
mutated_mod['func_7390'] = func_7390
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3512_call = mod.get_global_var('func_3512')
func_3513_call = mutated_mod.get_global_var('func_3513')
call_7442 = func_3512_call()
call_7443 = func_3512_call()
func_4423_call = mod.get_global_var('func_4423')
func_4425_call = mutated_mod.get_global_var('func_4425')
call_7444 = relay.TupleGetItem(func_4423_call(), 0)
call_7445 = relay.TupleGetItem(func_4425_call(), 0)
func_5234_call = mod.get_global_var('func_5234')
func_5235_call = mutated_mod.get_global_var('func_5235')
call_7478 = func_5234_call()
call_7479 = func_5234_call()
func_6973_call = mod.get_global_var('func_6973')
func_6975_call = mutated_mod.get_global_var('func_6975')
var_7489 = relay.var("var_7489", dtype = "float64", shape = (1440,))#candidate|7489|(1440,)|var|float64
call_7488 = relay.TupleGetItem(func_6973_call(relay.reshape(var_7489.astype('float64'), [1440,])), 4)
call_7490 = relay.TupleGetItem(func_6975_call(relay.reshape(var_7489.astype('float64'), [1440,])), 4)
func_3613_call = mod.get_global_var('func_3613')
func_3614_call = mutated_mod.get_global_var('func_3614')
call_7499 = func_3613_call()
call_7500 = func_3613_call()
func_1677_call = mod.get_global_var('func_1677')
func_1678_call = mutated_mod.get_global_var('func_1678')
call_7501 = relay.TupleGetItem(func_1677_call(), 0)
call_7502 = relay.TupleGetItem(func_1678_call(), 0)
uop_7511 = relay.exp(call_7488.astype('float64')) # shape=(1440,)
uop_7513 = relay.exp(call_7490.astype('float64')) # shape=(1440,)
func_207_call = mod.get_global_var('func_207')
func_208_call = mutated_mod.get_global_var('func_208')
call_7518 = relay.TupleGetItem(func_207_call(), 1)
call_7519 = relay.TupleGetItem(func_208_call(), 1)
func_371_call = mod.get_global_var('func_371')
func_373_call = mutated_mod.get_global_var('func_373')
call_7523 = func_371_call()
call_7524 = func_371_call()
output = relay.Tuple([call_7442,call_7444,call_7478,var_7489,call_7499,call_7501,uop_7511,call_7518,call_7523,])
output2 = relay.Tuple([call_7443,call_7445,call_7479,var_7489,call_7500,call_7502,uop_7513,call_7519,call_7524,])
func_7529 = relay.Function([var_7489,], output)
mod['func_7529'] = func_7529
mod = relay.transform.InferType()(mod)
mutated_mod['func_7529'] = func_7529
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7530 = relay.var("var_7530", dtype = "float64", shape = (1440,))#candidate|7530|(1440,)|var|float64
func_7529_call = mutated_mod.get_global_var('func_7529')
call_7531 = func_7529_call(var_7530)
output = call_7531
func_7532 = relay.Function([var_7530], output)
mutated_mod['func_7532'] = func_7532
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4448_call = mod.get_global_var('func_4448')
func_4450_call = mutated_mod.get_global_var('func_4450')
call_7552 = relay.TupleGetItem(func_4448_call(), 0)
call_7553 = relay.TupleGetItem(func_4450_call(), 0)
func_2458_call = mod.get_global_var('func_2458')
func_2461_call = mutated_mod.get_global_var('func_2461')
var_7616 = relay.var("var_7616", dtype = "float64", shape = (50, 15))#candidate|7616|(50, 15)|var|float64
call_7615 = relay.TupleGetItem(func_2458_call(relay.reshape(var_7616.astype('float64'), [750,])), 3)
call_7617 = relay.TupleGetItem(func_2461_call(relay.reshape(var_7616.astype('float64'), [750,])), 3)
output = relay.Tuple([call_7552,call_7615,var_7616,])
output2 = relay.Tuple([call_7553,call_7617,var_7616,])
func_7620 = relay.Function([var_7616,], output)
mod['func_7620'] = func_7620
mod = relay.transform.InferType()(mod)
mutated_mod['func_7620'] = func_7620
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7621 = relay.var("var_7621", dtype = "float64", shape = (50, 15))#candidate|7621|(50, 15)|var|float64
func_7620_call = mutated_mod.get_global_var('func_7620')
call_7622 = func_7620_call(var_7621)
output = call_7622
func_7623 = relay.Function([var_7621], output)
mutated_mod['func_7623'] = func_7623
mutated_mod = relay.transform.InferType()(mutated_mod)
func_5768_call = mod.get_global_var('func_5768')
func_5770_call = mutated_mod.get_global_var('func_5770')
call_7666 = relay.TupleGetItem(func_5768_call(), 0)
call_7667 = relay.TupleGetItem(func_5770_call(), 0)
func_2877_call = mod.get_global_var('func_2877')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_7680 = relay.TupleGetItem(func_2877_call(), 0)
call_7681 = relay.TupleGetItem(func_2878_call(), 0)
output = relay.Tuple([call_7666,call_7680,])
output2 = relay.Tuple([call_7667,call_7681,])
func_7686 = relay.Function([], output)
mod['func_7686'] = func_7686
mod = relay.transform.InferType()(mod)
output = func_7686()
func_7687 = relay.Function([], output)
mutated_mod['func_7687'] = func_7687
mutated_mod = relay.transform.InferType()(mutated_mod)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_7688 = relay.TupleGetItem(func_894_call(), 1)
call_7689 = relay.TupleGetItem(func_896_call(), 1)
output = relay.Tuple([call_7688,])
output2 = relay.Tuple([call_7689,])
func_7691 = relay.Function([], output)
mod['func_7691'] = func_7691
mod = relay.transform.InferType()(mod)
output = func_7691()
func_7692 = relay.Function([], output)
mutated_mod['func_7692'] = func_7692
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7704 = relay.var("var_7704", dtype = "float32", shape = ())#candidate|7704|()|var|float32
var_7705 = relay.var("var_7705", dtype = "float32", shape = (10, 11, 9))#candidate|7705|(10, 11, 9)|var|float32
bop_7706 = relay.floor_mod(var_7704.astype('float32'), var_7705.astype('float32')) # shape=(10, 11, 9)
func_5861_call = mod.get_global_var('func_5861')
func_5863_call = mutated_mod.get_global_var('func_5863')
call_7710 = relay.TupleGetItem(func_5861_call(), 0)
call_7711 = relay.TupleGetItem(func_5863_call(), 0)
output = relay.Tuple([bop_7706,call_7710,])
output2 = relay.Tuple([bop_7706,call_7711,])
func_7727 = relay.Function([var_7704,var_7705,], output)
mod['func_7727'] = func_7727
mod = relay.transform.InferType()(mod)
var_7728 = relay.var("var_7728", dtype = "float32", shape = ())#candidate|7728|()|var|float32
var_7729 = relay.var("var_7729", dtype = "float32", shape = (10, 11, 9))#candidate|7729|(10, 11, 9)|var|float32
output = func_7727(var_7728,var_7729,)
func_7730 = relay.Function([var_7728,var_7729,], output)
mutated_mod['func_7730'] = func_7730
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2877_call = mod.get_global_var('func_2877')
func_2878_call = mutated_mod.get_global_var('func_2878')
call_7734 = relay.TupleGetItem(func_2877_call(), 0)
call_7735 = relay.TupleGetItem(func_2878_call(), 0)
output = call_7734
output2 = call_7735
func_7784 = relay.Function([], output)
mod['func_7784'] = func_7784
mod = relay.transform.InferType()(mod)
mutated_mod['func_7784'] = func_7784
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7784_call = mutated_mod.get_global_var('func_7784')
call_7785 = func_7784_call()
output = call_7785
func_7786 = relay.Function([], output)
mutated_mod['func_7786'] = func_7786
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7793 = relay.const([[[2.803006,-6.925078],[-2.720741,5.278318],[-9.110417,-3.295165],[3.708150,-2.350899],[0.017375,-0.387272]],[[-1.819044,-2.772365],[-0.140388,1.996219],[-3.717507,6.653894],[9.642187,0.746552],[-0.891729,-3.595164]],[[5.981820,-9.517625],[4.776847,-8.208864],[-1.075273,-8.759439],[1.419822,-2.941749],[9.310377,-0.496653]],[[-8.667028,6.249026],[-0.615851,7.405574],[0.339555,5.207109],[9.748261,3.602285],[-3.884279,3.805492]],[[-0.314557,4.176365],[1.541984,-2.524928],[1.343961,-2.512009],[-5.308572,-9.584004],[-7.255735,0.638516]],[[8.492340,-2.365233],[-1.309470,0.585162],[-0.843538,5.279385],[-8.000292,-2.913612],[7.977005,-0.650975]],[[-1.865742,-4.458061],[-0.411370,1.430264],[4.944476,-9.931419],[6.485043,6.177948],[8.536202,-1.426494]],[[9.867692,-7.984515],[2.810755,4.207353],[4.984943,4.587355],[-3.536594,-7.174893],[-3.736193,-6.907316]],[[-7.363433,-2.721404],[9.069577,2.462590],[-4.771845,-0.246637],[-6.567548,-7.373429],[-3.244166,-5.917402]],[[3.645984,6.734542],[9.980966,5.774527],[4.806087,9.789157],[-2.724291,0.881215],[2.221667,-5.926866]],[[-8.304669,-7.516164],[-3.274294,-8.751309],[-6.266709,-8.017590],[5.206872,-5.147909],[-0.543115,-7.435320]]], dtype = "float32")#candidate|7793|(11, 5, 2)|const|float32
uop_7794 = relay.erf(const_7793.astype('float32')) # shape=(11, 5, 2)
output = relay.Tuple([uop_7794,])
output2 = relay.Tuple([uop_7794,])
func_7800 = relay.Function([], output)
mod['func_7800'] = func_7800
mod = relay.transform.InferType()(mod)
mutated_mod['func_7800'] = func_7800
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7800_call = mutated_mod.get_global_var('func_7800')
call_7801 = func_7800_call()
output = call_7801
func_7802 = relay.Function([], output)
mutated_mod['func_7802'] = func_7802
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1358_call = mod.get_global_var('func_1358')
func_1360_call = mutated_mod.get_global_var('func_1360')
call_7857 = func_1358_call()
call_7858 = func_1358_call()
func_7620_call = mod.get_global_var('func_7620')
func_7623_call = mutated_mod.get_global_var('func_7623')
var_7874 = relay.var("var_7874", dtype = "float64", shape = (750,))#candidate|7874|(750,)|var|float64
call_7873 = relay.TupleGetItem(func_7620_call(relay.reshape(var_7874.astype('float64'), [50, 15])), 2)
call_7875 = relay.TupleGetItem(func_7623_call(relay.reshape(var_7874.astype('float64'), [50, 15])), 2)
output = relay.Tuple([call_7857,call_7873,var_7874,])
output2 = relay.Tuple([call_7858,call_7875,var_7874,])
func_7879 = relay.Function([var_7874,], output)
mod['func_7879'] = func_7879
mod = relay.transform.InferType()(mod)
mutated_mod['func_7879'] = func_7879
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7880 = relay.var("var_7880", dtype = "float64", shape = (750,))#candidate|7880|(750,)|var|float64
func_7879_call = mutated_mod.get_global_var('func_7879')
call_7881 = func_7879_call(var_7880)
output = call_7881
func_7882 = relay.Function([var_7880], output)
mutated_mod['func_7882'] = func_7882
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7909 = relay.var("var_7909", dtype = "float32", shape = (15, 3, 13))#candidate|7909|(15, 3, 13)|var|float32
uop_7910 = relay.log2(var_7909.astype('float32')) # shape=(15, 3, 13)
func_2458_call = mod.get_global_var('func_2458')
func_2461_call = mutated_mod.get_global_var('func_2461')
const_7914 = relay.const([0.504966,-6.357342,4.772281,9.826124,-1.736067,8.384282,-8.557711,8.173723,-4.910599,6.174753,-8.038470,-9.447977,2.311077,-3.014824,8.826399,1.120538,-6.596281,2.700566,-4.669644,-3.893737,-3.252161,7.271570,8.249314,2.835539,7.320013,-8.393834,-8.244524,-4.792383,-1.615632,-1.066276,9.713590,-9.075338,9.724166,7.659005,-4.756040,4.169998,4.497747,9.723039,6.473083,-0.034065,9.291610,-1.868187,-1.817046,6.510844,3.795665,-0.401440,-4.814146,-5.848041,7.560447,2.660044,-5.566469,-8.256975,-1.558270,-3.369144,-8.217000,-5.192455,0.892156,3.819269,5.439284,-1.454510,-1.477361,2.516405,7.444070,7.573089,5.766144,-3.289959,9.019714,-6.692973,-9.629468,9.214493,5.085108,2.036400,-3.095367,-4.321088,5.017399,4.938694,-0.957726,-6.123713,-5.517323,-5.497581,9.510830,4.363868,1.805229,-8.483285,-2.625817,2.600631,3.446846,-6.246522,2.975485,3.221853,7.557332,5.011084,-8.100112,6.019863,8.691303,-8.191009,-4.849403,2.118457,1.086558,-5.506491,9.587423,-8.219450,-9.283221,-5.746414,7.998899,-9.393335,-5.403461,-0.013639,-4.430767,-4.890179,0.369035,-3.339188,-3.295923,-6.101188,2.433256,-7.904879,-6.822894,5.084864,7.458058,-0.699816,6.385145,-1.574683,-3.284541,-4.700392,-4.341535,-8.706566,-2.788426,-1.847262,-2.118336,-6.211466,7.480645,-3.305900,5.696431,-3.765979,-2.770802,-4.931726,8.585737,8.940077,2.765039,-4.670010,-3.967038,-0.886319,8.336532,-1.057231,5.048382,1.415004,2.807357,-5.817673,8.513044,2.337914,8.797329,-3.641493,-2.198283,4.946660,6.278408,-3.550970,-1.159370,-9.886822,3.962647,-6.243176,-3.088088,3.177662,1.281359,-5.176516,-0.737720,-9.230884,0.728521,-0.636627,0.871138,-8.026956,-5.624341,-0.118985,4.432549,-2.156986,7.427387,5.271165,8.775647,9.536518,-0.549074,2.355767,-9.611799,-8.577456,-9.165378,3.014605,-1.722041,7.756431,-6.881239,-5.750061,-4.751147,-5.737061,4.914654,4.288565,-8.617386,7.336118,5.623678,4.855754,9.312621,5.968267,7.608047,6.352708,-3.620848,-4.020316,-1.578362,-1.731256,2.821449,5.079315,-9.098854,6.267300,0.977904,5.067839,-3.150296,-6.912985,9.412592,9.998127,2.891711,-0.060877,8.422585,-4.615804,4.052946,6.618648,-0.524347,3.133062,8.776114,4.293862,-1.565504,5.788931,-7.385940,-5.885641,-8.575339,-6.685657,-9.064122,2.087167,0.852237,7.681006,7.350930,3.036443,2.306847,-4.215012,-1.014344,-5.714344,3.177409,8.466151,1.902543,3.501503,4.569536,3.814776,-7.390522,-4.519791,3.599243,1.664090,-5.141071,-8.285539,0.457274,-7.257455,-2.524631,-0.198955,0.675202,9.001036,8.798034,-5.345784,-9.848025,-3.917720,-5.097701,-5.731510,3.638574,-2.973867,1.212726,7.068686,-0.564631,-4.778984,-1.910179,-1.228557,-1.161333,2.298215,-8.643860,-0.738186,8.964633,2.904929,1.054211,9.862637,0.733527,-3.678007,-2.666736,-8.412365,-4.092406,-5.846831,6.429122,-1.545890,-1.130180,-3.249199,0.026966,-5.642470,7.031738,-9.347565,6.179629,9.282654,-5.007401,9.672409,-2.170735,8.232097,-5.397278,5.189260,-9.810346,0.160524,2.437657,0.425371,8.236504,-3.468800,5.572766,7.593275,-9.273235,-8.297291,6.885416,-3.433570,6.416338,-6.944954,2.670241,8.084866,7.199451,-5.844117,-4.783715,9.307424,9.481239,7.205501,-2.717306,-1.238180,9.430438,3.604093,-1.057204,-3.105652,4.097449,-5.541069,0.485437,-8.912960,-5.153144,9.693777,-6.658154,-9.991922,-8.298061,3.144896,8.776556,-0.129795,-0.057177,3.375553,6.294660,-2.287147,-2.960477,2.503568,-4.627211,-1.982244,-7.931461,-2.855545,-3.366065,2.717938,-0.276865,5.352968,-5.061068,-8.029862,-0.128548,2.908440,-1.444664,-6.916327,-9.322366,-0.750018,-1.565495,-7.997278,-2.733916,4.806532,0.934744,-5.786746,0.171378,0.141600,0.472597,-0.382904,7.691846,4.049851,7.045671,-7.086907,1.077392,7.880283,7.062885,-9.450053,-1.808996,-2.213542,-9.397612,9.747666,9.317522,8.267728,-1.572407,-6.997131,-3.945039,9.806908,5.699908,4.229269,-1.659850,-3.129758,-6.980583,-0.697246,3.403002,9.067765,0.696233,9.370988,2.734860,8.293176,5.264255,-7.797156,4.995430,8.183588,5.514331,2.146081,1.162570,-3.456351,-6.201416,-0.718922,7.563720,-5.826493,-6.160567,9.759406,-0.049465,-3.837248,-4.674447,4.737114,-2.826274,9.537830,-2.327700,-9.428778,-8.832002,9.488648,4.592677,-3.095913,2.474165,7.840674,3.486421,-2.959487,7.616894,5.344043,8.654116,0.688446,5.474321,4.147062,1.768579,-4.604702,-6.154568,-2.018966,0.961649,0.302696,9.868363,9.913369,8.885050,6.637455,-6.326192,5.554553,3.980441,9.285068,8.022864,-5.251937,-1.979790,-7.757500,3.239897,-8.851133,-9.275845,3.303423,-6.315949,-7.663576,-5.635966,-2.954974,-4.481865,-4.726951,-0.845933,-3.589218,1.729730,-5.478785,2.633179,-9.689753,-4.456993,-6.183514,-1.479124,-1.670044,-1.596680,0.112403,-6.529926,1.835895,9.070451,8.128193,5.590218,5.654325,-4.400628,0.523437,-8.061709,-5.626590,-0.838344,5.211275,2.563524,-4.756621,-4.278952,-4.972740,8.701476,9.168424,-1.130700,4.406851,7.938103,-1.289627,-4.368519,5.484467,1.914791,4.834274,-0.591896,7.642338,6.307161,5.665687,0.648242,-1.113858,6.732823,9.120607,-2.709049,-5.919082,8.624767,-6.184474,-0.006005,-5.944934,6.790197,6.669907,8.573156,2.785936,-9.218327,-0.146006,3.784740,1.220191,5.437586,-3.336211,8.576321,3.237781,4.097349,-8.921744,8.166691,8.014548,1.206894,9.623637,5.668269,3.575692,5.214965,5.245743,-6.627033,-4.852523,9.985801,-9.092491,7.256372,9.485202,7.831206,-8.176951,5.201078,9.948142,-3.523635,7.165971,-3.196804,-3.710217,-7.759844,-1.535710,-5.414661,-8.625114,0.802343,-0.110685,-5.453880,9.280064,3.150455,7.282566,3.198557,2.571721,6.821628,-4.275771,8.471164,1.073834,-2.583382,5.122604,-7.054307,2.434891,-0.559355,-3.118937,3.134717,-9.601695,7.780685,4.523209,-9.727191,3.327192,7.902743,3.285683,-0.884091,4.155431,-6.978687,5.537874,-3.283386,-7.943873,-9.639805,-8.229123,-7.945399,-1.345332,-8.082990,4.708784,9.087764,-3.716803,-3.222675,5.915694,-7.685119,1.281751,5.517099,-2.188496,4.790846,-0.231380,0.569708,-5.873866,2.841536,-2.954783,-9.085016,3.385942,-5.952708,4.277270,4.860373,7.334440,0.039633,8.917787,7.643549,-9.157079,-8.159094,-3.221847,0.869066,-1.557393,9.231292,-6.103386,-8.681225,2.483428,3.695870,0.515943,-0.252575,6.097848,4.344726,-2.659492,-5.794051,-5.975858,-5.531427,-1.968445,9.441240,-9.926878,5.846727,-5.855806,-7.210635,-7.410888,-2.591099,8.937470,-7.404323,-4.381705,2.452698,-9.874014,-7.725098,-7.163220,7.275519,-3.225724,2.329863,-7.947705,-6.272071,-1.855271,-6.730800,-9.074078,-1.454290,3.920241,-6.194213,3.442663,7.569225,0.746562,-7.984013,-7.683436,1.553495,-1.773455,9.153102,9.754608,5.180786,0.927993,9.447901,9.185487,2.938904,-1.997379,-6.582123,4.731201,-6.027540,0.062717,-1.351492,-5.608160,5.594786,6.460587,1.666587,-5.432228,-6.225169,2.905503,8.601196,-8.869159,2.395359,8.239218,-6.851332,6.398739,7.442456,8.211727,-5.240835,1.324409,-2.234716,6.790401,-3.415873,-0.257959,4.802540,-0.431180,-5.249704,0.847757,0.438153,-9.658082,7.612043,-2.959432,-8.917523,-9.281117,-6.521533,-3.193190,-7.551017,-4.587796,6.971679,-2.605524,-6.705694,-7.566729,2.113896,6.300003,-8.414709,-7.525266,7.493813,-0.353314,-9.780979,9.658639,7.052800,4.756047,2.558262,-2.977285,-0.676397,0.041472,5.955231,-1.955186,3.918222,5.418134,5.349038,7.042457,8.010355,-1.946713,-1.522289,-3.288157,-5.247550,-4.396179], dtype = "float64")#candidate|7914|(750,)|const|float64
call_7913 = relay.TupleGetItem(func_2458_call(relay.reshape(const_7914.astype('float64'), [750,])), 0)
call_7915 = relay.TupleGetItem(func_2461_call(relay.reshape(const_7914.astype('float64'), [750,])), 0)
output = relay.Tuple([uop_7910,call_7913,const_7914,])
output2 = relay.Tuple([uop_7910,call_7915,const_7914,])
func_7927 = relay.Function([var_7909,], output)
mod['func_7927'] = func_7927
mod = relay.transform.InferType()(mod)
var_7928 = relay.var("var_7928", dtype = "float32", shape = (15, 3, 13))#candidate|7928|(15, 3, 13)|var|float32
output = func_7927(var_7928)
func_7929 = relay.Function([var_7928], output)
mutated_mod['func_7929'] = func_7929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2221_call = mod.get_global_var('func_2221')
func_2222_call = mutated_mod.get_global_var('func_2222')
call_7931 = func_2221_call()
call_7932 = func_2221_call()
func_324_call = mod.get_global_var('func_324')
func_325_call = mutated_mod.get_global_var('func_325')
call_7944 = relay.TupleGetItem(func_324_call(), 0)
call_7945 = relay.TupleGetItem(func_325_call(), 0)
output = relay.Tuple([call_7931,call_7944,])
output2 = relay.Tuple([call_7932,call_7945,])
func_7957 = relay.Function([], output)
mod['func_7957'] = func_7957
mod = relay.transform.InferType()(mod)
output = func_7957()
func_7958 = relay.Function([], output)
mutated_mod['func_7958'] = func_7958
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4806_call = mod.get_global_var('func_4806')
func_4807_call = mutated_mod.get_global_var('func_4807')
call_7965 = func_4806_call()
call_7966 = func_4806_call()
func_6036_call = mod.get_global_var('func_6036')
func_6037_call = mutated_mod.get_global_var('func_6037')
call_7967 = func_6036_call()
call_7968 = func_6036_call()
output = relay.Tuple([call_7965,call_7967,])
output2 = relay.Tuple([call_7966,call_7968,])
func_7972 = relay.Function([], output)
mod['func_7972'] = func_7972
mod = relay.transform.InferType()(mod)
mutated_mod['func_7972'] = func_7972
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7972_call = mutated_mod.get_global_var('func_7972')
call_7973 = func_7972_call()
output = call_7973
func_7974 = relay.Function([], output)
mutated_mod['func_7974'] = func_7974
mutated_mod = relay.transform.InferType()(mutated_mod)
func_410_call = mod.get_global_var('func_410')
func_412_call = mutated_mod.get_global_var('func_412')
call_8035 = relay.TupleGetItem(func_410_call(), 0)
call_8036 = relay.TupleGetItem(func_412_call(), 0)
func_3025_call = mod.get_global_var('func_3025')
func_3028_call = mutated_mod.get_global_var('func_3028')
const_8038 = relay.const([0.052841,-9.594337,6.442440,3.572446,7.621979,4.950245,-7.003663,8.771378,2.073491,-6.242569,2.423731,8.401983,-8.422167,-9.092641,-8.707811,1.066558,-5.330552,5.873758,5.685812,-5.754782,9.825731,-9.065907,1.139503,9.759412,-7.162814,7.258979,-5.074288,6.751395,-8.709204,-9.270685,-1.300278,2.988533,8.557656,-1.084484,2.348129,4.698429,-2.576484,-1.792279,-3.694550,-5.247259,-6.455420,-0.465044,9.674740,2.602201,-9.986718,-4.097683,-4.571550,2.402574,-7.745128,-4.059662,-4.343701,-8.402060,-8.508760,-2.902997,5.572649,1.632689,-1.242644,-0.845305,9.894008,-2.272810,3.930966,-2.016115,-3.024473,-1.955179,3.832786,-5.859568,-3.614137,2.404151,1.886724,9.854662,-9.810482,-9.544621,5.689571,-1.230557,3.180583,-0.843335,3.858738,-1.953817,-1.332745,9.260278,9.918021,-5.889818,-9.787992,-5.327973,5.134228,-3.312065,-4.481659,0.527664,8.782027,8.833294,-0.465036,-4.042329,-1.409150,5.176404,9.183652,2.799330,-1.192783,-1.684519,2.114622,-6.726551,6.333376,-5.341509,-1.250429,1.130716,-7.244348,-3.640570,-4.090355,-3.452088,1.349185,8.056120,-6.462519,3.521111,-2.751736,-2.470150,1.235082,8.439576,8.868327,-7.778688,2.011748,-2.340502,-1.505820,-9.720986,8.845660,-8.237445,-2.749548,8.395324,-1.959466,7.488541,-5.048929,-6.389657,-9.712441,-6.709406,8.929308,0.163379,-4.263793,-3.756942,-2.753972,3.896391,-3.729004,-4.942855,-6.545124,0.203474,7.046064,0.964450,-2.436499,0.938778,5.006073,9.916264,-9.192228,6.165739,-1.825285,-1.160211,-8.958393,-5.521329,3.920153,1.327651,-2.899227,-8.576533,7.543392,0.724390,1.545666,8.219826,1.519573,4.915974,4.513516,-1.357991,3.362334,0.902174,2.076036,-8.729245,-0.705230,-0.036653,-5.033544,-4.439677,-0.648326,-8.022921,-7.597614,5.158712,-5.947726,-7.085422,2.021193,8.435409,4.510874,3.320228,-2.965683,5.923566,7.682466,2.813386,-2.976468,-5.134079,2.247536,-6.656092,-4.631995,3.550406,-2.701483,-6.082388,1.903312,-8.015802,-1.579985,8.977839,4.898294,-0.440915,-0.503777,5.090729,4.236447,1.895151,-1.593697,4.915854,3.014145,3.503901,-9.091572,-9.073301,8.204941,-4.979117,-4.531675,-3.916453,-9.153915,-4.170639,-4.043619,6.517625,7.741589,-1.745260,-6.157447,-0.671335,4.528061,2.150290,-6.890445,1.800454,6.400593,1.807544,5.446873,0.734841,-3.760089,-6.809432,4.903686,7.167715,-7.039609,-0.740416,4.398141,8.779162,-2.360117,-7.327877,-9.973244,-4.602154,2.167629,3.135143,2.635905,-6.210094,-6.015169,-7.801460,-1.403560,9.666314,-2.371718,0.819219,-3.195257,-7.411797,9.610811,6.982184,-5.452657,6.607981,-7.666406,-2.089638,-6.549232,7.987139,4.157033,-4.921104,6.668444,-0.115246,-4.298811,5.754038,-0.680975,6.762991,-3.499069,2.891967,2.077077,-8.261643,3.137833,6.459631,4.121287,7.034721,3.358526,-9.551523,4.459690,-3.825317,-2.834165,-3.790535,5.138924,7.007496,8.077944,-7.232114,5.703779,-4.764459,1.570713,-4.184825,-4.774683,1.830840,-4.463584,5.141924,-2.050733,3.291000,6.766972,-0.677916,8.507455,0.717661,-4.581941,4.201026,-7.358405,2.163741,-4.533798,6.086286,9.764060,-2.593546,-6.337697,8.178284,7.807209,-0.837283,-8.141546,8.055817,-6.774050,-0.563449,-7.083916,-5.497198,2.025370,-7.879535,-1.756324,0.245838,-0.526180,9.241877,2.136288,3.341746,3.017518,2.801711,-3.146731,9.959600,1.669665,-0.470503,-5.421292,0.038620,-3.038634,8.673832,6.490867,-2.904995,-8.496956,-2.456932,-9.854611,-4.557242,5.949732,4.813122,-9.296338,-9.614564,3.602894,1.491424,-0.672719,4.005507,-9.741422,4.835048,9.429172,4.931827,1.041464,1.211137,2.811626,3.245430,-2.357188,4.844742,8.733258,-9.647754,-6.300512,-4.883001,-1.742137,1.257390,-4.419232,-8.511451,-2.285957,1.857131,-3.151165,5.670550,-5.862560,-3.742853,9.738960,3.772780,-3.896219,7.826844,8.784403,5.296792,-0.521727,-7.558134,8.471736,-8.224827,-3.953039,2.160743,0.612747,8.638207,9.794541,-1.470232,4.196996,3.694052,8.803534,-4.663245,9.122863,3.486764,-0.390751,-6.494061,-6.736215,8.828021,5.100419,3.375126,8.576306,-0.079823,0.798636,7.013445,5.881788,-5.622733,-0.748720,3.368401,-5.754530,7.913719,8.974147,-4.536269,-1.887636,-1.355471,-3.423230,-2.893777,-4.143066,-6.729517,3.700026,-5.525659,-8.073503,-8.930089,7.750521,-2.301331,-6.661764,-5.444523,-9.106729,8.039694,-2.501191,-2.911904,-7.641374,-1.608921,9.908203,-0.047512,8.198414,8.351103,9.544801,-4.487330,-5.561863,-8.798201,-8.112249,-1.814778,5.546447,0.645170,9.168626,-9.183335,9.566756,1.114819,9.830595,3.097749,-7.465253,-5.508222,-0.699668,7.178612,-7.992611,8.943848,-3.839872,8.731400,-4.035685,-8.236842,-1.930537,0.774277,3.310919,-6.463984,-2.429089,9.904405,8.420549,-0.027956,-2.058441,-8.282159,7.954401,2.699151,1.055125,3.973807,-2.752252,8.819376,-4.691664,-2.334601,6.938026,-6.609733,-9.870738,0.639713,4.563009,-7.015568,5.625667,-2.985749,-0.427613,-7.426085,-3.901285,3.949083,2.191337,2.788344,2.083140,-2.586853,1.015163,-9.548512,-4.817962,6.516200,0.626924,-7.064602,-8.645410,5.331236,-2.409186,-3.761072,4.809212,7.263832,-4.327347,-2.651445,-3.572476,5.084242,1.545065,-4.062797,7.040038,-5.230543,3.374877,5.290376,0.782568,-3.033844,-4.853954,5.452528,4.530648,9.670954,0.906839,5.500014,-2.752893,5.988625,4.982079,9.105209,9.810959,3.955855,-1.422962,-2.103438,-2.452089,-5.315073,4.776604,-0.915606,-9.630320,7.717204,-7.169373,-5.706297,1.746190,-0.775605,4.842120,7.589785,6.127203,7.637004,5.801774,-6.869497,-3.307916,-7.729492,-4.047008,-1.673851,-6.823152,-0.189368,4.462405,2.640661,9.100491,9.216794,-6.176965,2.436407,9.394244,7.549662,0.982190,-4.713155,-4.532945,7.339438,-1.850235,-4.988677,4.793190,4.859664,5.278952,5.041452,-2.791837,6.172199,5.851126,7.174827,0.321607,9.350928,-7.952194,-2.446816,0.487363,7.634383,-3.868444,-8.400578,-1.357794,-2.120376,2.201529,-5.044742,-7.571478,-8.602995,6.797439,-7.688606,-9.715201,2.247192,-1.170466,-1.492555,7.334390,8.053995,5.800962,-9.473222,8.116131,2.397993,-7.483445,-9.801520,3.523042,2.881590,-3.299910,8.238185,1.901290,3.141228,-9.841694,8.559718,9.278863,6.762060,7.111331,0.438700,-3.960862,3.574941,-2.405473,5.811476,-5.668676,-4.828837,9.748959,4.357112,-2.266326,-3.091081,-1.831942,7.101973,-9.080005,-5.956886,-8.554467,-4.568473,-4.967979,1.995953,2.444136,-5.324543,9.427122,2.742452,-3.691140,-9.179647,1.905845,-2.717893,-7.023637,-3.989092,-2.602719,-9.153741,-4.259459,-6.048915,-8.417539,5.973311,-8.290948,2.296269,0.491759,-7.614405,-0.044984,-1.196926,5.894806,2.436968,-4.987693,-5.257469,2.257938,0.449722,7.106006,-1.683521,-6.984446,-7.136647,-8.512217,-3.630490,-1.778276,5.972557,5.091569,-5.742753,-4.509917,2.110546,5.536207,-4.982437,-7.857388,-0.848183,9.764603,-6.551437,4.632617,-1.751424,-6.853409,9.924416,-2.953777,8.616807,-5.292893,-4.776543,-6.290882,-2.947107,-3.332216,-2.054234,-3.851360,-8.238178,8.493444,9.696139,2.479757,-0.573234,0.924829,-4.341934,0.645943,4.662212,-3.831955,-4.115019,9.110520,-4.570507,0.551953,3.483561,-7.077635,6.528980,-8.137091,-8.464744,9.730840,2.640043,-5.065428,-8.535692,-7.759760,1.080472,4.841282,2.000201,-5.589921,-1.140061,-6.965628,-9.641700,-6.648581,-3.889264,-2.974230,-8.614101,-6.443071,-0.805235,-9.769361,-9.377629,3.524136,0.405955,0.139240,7.847368,-4.555924,-6.376523,8.771151,3.859616,-6.430404,-3.661860,-9.040151,-9.006905,1.815075,5.313497,4.713193,-4.335213,-7.553325,-1.970309,-0.850367,1.971614,3.525582,9.106346,-2.839110,-5.674277,-2.001623,-3.309977,-5.863957,1.273394,7.958163,9.049415,-5.754752,4.922785,7.522299,9.854794,-1.694814,-7.966261,-4.996644,-5.755874,6.127384,5.777128,-1.366234,-8.499466,4.037976,-9.819859,4.560032,6.585116,8.528955,-5.091640,-2.648609,-5.592294,-0.136480,7.410052,-7.405365,-0.649851,-5.641756,8.703143,1.093665,2.783231,-6.853139,6.553474,7.574538,9.287322,-0.603270,8.142247,5.649182,4.989539,5.813219,-7.125778,-1.802833,1.508359,7.185205,3.136514,-2.462197,7.265335,-6.444302,-1.667973,9.254876,-6.561910,8.810690,9.447896,2.126370,1.469875,9.723343,-8.177232,-7.814133,-3.205994,9.976921,-5.124505,8.992324,-2.058735,-4.986467,7.628700,-1.959909,0.830462,-1.497032,1.083713,0.457971,-4.252966,-0.355363,8.322306,-6.140638,-0.911266,3.435065,9.218138,-4.216885,0.827566,4.362742,0.227200,-3.798823,5.645857,0.631430,6.007784,7.762546,6.987344,-6.860295,-9.784695,-8.802059,-4.435856,2.743645,-0.340343,3.344994,3.138633,0.673956,0.276407,3.614827,-6.398610,0.267194,-2.391460,9.748913,-5.925275,-6.550778,-5.999042,-9.058134,-1.581618,-4.348171,4.432657,-6.063864,-6.075695,0.156809,-4.119802,4.122187,0.140425,-6.995317,5.098339,9.903654,2.959237,9.905899,6.282562,4.029138,2.819219,-5.012889,4.643938,0.638270,-7.268296,9.486088,-5.423314,5.958660,9.829105,9.995002,8.173176,0.008631,-7.386828,-2.954962,-5.903933,7.340758,-8.871663,-2.500524,4.839864,0.517738,0.025992,-1.739984,8.570791,4.696037,5.474237,-7.730062,-8.051610,4.885917,-8.881029,-0.987663,6.727261,-9.558892,4.085697,-9.264352,7.945730,4.538241,-1.953387,-7.921491,6.600285,9.898180,-0.858286,-7.651865,8.258358,5.776780,4.141881,-5.376506,9.088000,-0.195589,2.926213,4.466165,2.213472,1.584873,-4.933521,3.056035,-9.058628,-8.127267,-0.530772,8.422170,0.378703,5.092057,-6.585156,2.139724,9.600531,-9.057175,-7.415834,3.243934,-1.659254,-7.612324,-4.183867,3.618401,-3.152491,2.916255,-5.291713,-6.930000,3.642676,-5.350887,1.740709,0.442147,-9.128011,2.902550,-5.879503,-5.356746,-2.681549,3.783029,-6.271646,3.277039,1.473463,-2.468691,7.607985,4.304853,-7.472267,-3.501088,3.562315,-5.332881,0.375744,8.912996,-3.486653,2.004660,-5.398890,6.657342,4.309909,0.095253,0.244085,-4.683057,-9.691539,0.047170,3.925023,-6.262531,-3.812363,-4.033044,-8.563449,9.289082,3.913511,1.025554,6.915270,7.286138,4.784792,2.827208,-4.040504,2.188755,9.933100,8.879119,-5.254843,-5.640368,3.687758,0.953348,-1.500277,-9.707847,6.718510,5.303150,3.330969,2.359598,5.019379,4.058820,-3.101045,-0.714395,-8.741639,-4.091487,8.062219,0.907721,-8.485624,-1.155988,9.957797,-1.056647,7.995581,8.547722,-0.050265,8.190549,-2.919085,7.423341,-8.913136,-9.614537,-8.414338,3.578521,9.961762,-7.449758,8.522532,-1.830663,7.079214,9.184563,-6.028573,9.709449,6.363820,-8.934135,-3.395555,-2.438862,1.514028,8.932842,-1.080060,5.197014,4.693801,4.571201,5.636852,6.325211,-4.918078,5.514361,9.336313,-8.226588,9.728771,-7.256762,-8.892666,-5.202552,-1.466585,8.784783,4.026114,-7.177704,-3.120839,4.797936,-5.108245,6.328980,-7.031890,2.101414,3.607064,-2.720355,1.361257,-5.669460,-6.716314,8.445206,-1.698413,0.566238,-1.606772,-1.212460,3.961817,-7.136568,-5.068220,-1.301091,-3.263894,4.268833,9.612233,-9.542256,-9.247091,3.421876,-9.495047,2.913296,7.511175,-5.661887,7.982429,6.662064,-4.935762,-7.494420,8.860275,3.561482,-1.163836,5.904073,8.861076,-6.860953,3.944175,-7.927444,8.089573,-9.085854,-0.940180,-8.266714,-7.819589,-1.938655,7.328118,0.582891,8.359215,-7.788287,8.158534,-0.128039,7.002857,3.758105,-3.079119,-4.308854,4.465901,-6.101075,3.362994,4.781638,-5.293825,6.097273,-9.750160,-6.830842,0.830396,-0.170585,0.153900,1.619112,7.781977,6.913013,-2.663882,0.745405,-0.083506,0.695883,-6.627619,5.713227,-5.258644,-5.805686,-5.769742,4.014211,2.385498,-6.606498,-4.023234,-7.603967,-6.172197,5.585857,8.919543,1.909871,-1.430528,-4.629165,9.208192,-2.304958,-5.451131,7.565031,2.666267,-6.628860,-9.189044,4.893065,1.170097,-4.372882,2.028253,-4.648435,8.476438,1.701826,1.010531,-1.766703,4.388868,-0.743530,-4.995452,-9.638844,-1.014007,-6.122264,-0.839027,6.476942,9.046330,1.600536,7.545700,-6.539483,6.666780,9.444738,0.401606,-8.984454,-2.968880,-6.480075,-7.100359,-9.455723,1.318727,8.383141,1.692319,9.887930,-0.734747,5.444428,9.920280,-7.770131,5.891683,5.554655,-8.152945,-5.369196,-2.051137,3.107743,0.321978,-0.564509,-4.489621,-5.545968,-0.681917,4.622031,3.027798,3.168472,-3.804747,2.880116,9.218241,-4.944443,-3.667964,-5.020913,3.593032,6.244832,6.483093,3.623827,3.350166,9.892887,-0.491989,9.282359,-9.720031,-3.371459,-6.861676,-9.441703,-0.634306,1.719168,2.634871,8.792688,8.241778,-9.918360,-4.595029,8.307941,2.394756,-0.730541,9.378513,5.816410,-5.873404,-3.573756,-3.296050,-2.230602,3.826476,1.441668,6.371913,8.121586,-2.656733,6.741068,2.209140,-2.658899,-6.537510,-3.209624,-9.561351,2.729623,9.259364,-5.674680,-9.805253,-0.134998,-9.072806,1.369945,1.731329,5.884589,-7.499225,-4.627288,8.353946,-4.749295,3.729746,9.305124,3.527386,-0.581957,-1.670818,-5.354665,7.173448,-3.647794,-9.937573,3.393954,-0.053669,6.487419,-9.719478,-8.887811,4.704950,3.564106,-6.252705,-6.610601,7.705658,-3.358615,9.486580,-9.744714,-0.911596,2.368738,-7.648383,-2.938472,0.800108,8.625994,0.982354,8.211945,2.394020,-3.207369,1.598165,4.737893,8.070129,-5.055259,-1.738310,-3.708675,7.728277,4.456554,-1.895217,-3.584268,-0.626257,9.349346,3.881241,-3.585226,5.993739,-1.087679,6.312350,7.924854,-1.986339,-8.760108,0.710672,8.687760,-8.011324,-2.350428,-9.399483,-5.933161,0.319232,-8.991292,-6.038727,1.185502,6.685131,-4.335686,4.733697,-1.608724,7.557817,-4.583671,1.274129,4.626238,-6.282613,-3.076033,-6.628947,4.591155,7.570678,-5.179616,-9.287260,1.945896,-3.950317,5.578364,-9.620814,0.165165,-9.294275,-6.830642,2.043679,4.566865,2.272803,-0.445836,-3.103141,4.614609,5.001411,3.592409,8.892912,-6.765731,-5.432399,4.685504,3.150582,-7.688436,-3.959311,3.648295,-6.700348,-1.191111,-3.880549,1.315268,-7.843197,-1.631132,-2.840778,-2.240428,3.462634,5.539881,-9.877895,-2.217739,7.511636,9.728178,6.543974,4.421478,3.442952,1.346273,-1.417054,-5.201544,-9.887199,2.507828,-9.006080,-4.307583,-4.688085,1.544485,2.081831,-0.691180,-8.345568,-1.746280,-4.147370,8.090335,5.821968,2.260912,7.780551,4.155977,1.397825,-7.144248,-7.994297,9.976516,5.967021,2.525772,-0.506630,7.713005,6.391368,-6.798778,-2.591445,2.049745,-4.589743,7.780768,-4.172065,5.304648,2.791068,6.895331,5.392001,-9.862088,7.130300,4.812847,3.982295,-4.623799,-5.602226,-6.852473,-0.268528,8.715346,0.154566,-7.404001,5.911614,7.772755,7.594804,-8.606702,6.335778,2.281179,-3.207438,-9.430873,-7.419592,-6.189389,1.843202,5.651692,-2.266806,-3.650476,8.328792,1.853077,4.387414,-3.292387,6.902470,8.607696,2.860093,8.252097,5.500201,-4.005522,-0.256519,-9.034545,9.360428,2.637386,-4.392595,1.184309,-6.640510,-4.390401,7.028396,-2.046139,0.923306,4.143341,1.759358,-1.360863,-1.911745,-1.841030,0.755466,-6.987917,-4.043510,-6.159020,-5.665946,-3.277077,-1.470771,-7.444464,0.116948,-3.933948,-6.106805,-6.224524,-7.542734,-1.043345,9.654487,6.173749,9.560307,4.594204,4.076890,2.338551,-1.191523,-3.503660,-9.110159,-9.880987,-5.932656,9.673009,4.752034,-6.893560,-8.324259,-6.448239,1.686721,3.098859,-5.248479,-2.301512,-4.850022,9.886862,0.737889,-7.492696,-1.764812,-1.522761,4.563861,4.631987,1.015167,0.747550,-6.530430,7.394552,9.694433,-9.254209,1.330918,-2.437604,-2.705863,-9.572735,2.957703,-4.957758,-6.635335,-7.205361,-4.095309,-3.819205,0.239694,1.060387,1.045233,9.736518,3.341172,-3.036117,-6.799297,2.428173,-1.418026,0.618417,-6.445907,9.548217,-3.889480,-7.195282,6.287709,-6.976633,-7.257437,-4.618341,-8.565502,1.184456,-9.989844,-2.342605,-1.162866,9.494549,-5.069903,-9.058878,-0.532287,3.063758,-5.828290,6.183824,-7.619084,-7.226114,-4.454201,-2.542270,4.302671,-7.623808,-7.414268,-1.606213,-4.993541,9.521690,-4.949643,0.726370,-1.861003,7.670336,6.731908,-6.116979,-0.472710,-1.467460,-2.961059,2.692588,-1.933259,7.336608,0.905364,7.365478,2.279995,-5.189030,2.026364,7.935630,-1.265490,-5.185182,9.872713,7.527566,8.281138,-5.653978,-5.450101,0.700562,-6.835814,6.964476,8.085409,8.711155,-0.606560,-3.635026,-5.672452,0.794373,5.007237,-5.257973,-9.122826,-1.826493,6.734417,2.320710,7.946647,9.688241,5.512892,9.005673,5.572413,-2.333777,-3.262255,3.029554,-6.154912,5.097025,-4.504113,-9.239186,4.048756,9.321484,-5.129116,-5.500259,8.520528,6.362966,4.210150,8.172438,0.065312,-1.892738,4.377806,-9.813715,-3.670840,5.608463,4.444146,0.619373,-7.892319,-2.390733,-0.254032,-8.376625,-8.485975,-2.351592,-8.836002,-6.711578,6.418723,3.764413,2.830610,-3.263046,1.262288,-2.870617,-4.111204,7.767522,-0.476101,8.810459,0.382348,6.359214,9.899153,6.192795,1.963486,3.177039,-5.216792,4.148671,8.430210,8.612851,6.360573,0.526353,8.731396,7.330836,-3.601215,-9.399155,-7.929423,4.534689,-0.323461,-0.850622,7.116051,-2.068003,-1.297810,4.321202,-5.699687,1.187117,-7.393717,9.158143,5.575637,-3.587073,1.212466,3.061440,-7.458022,7.673474,0.881325,-3.060636,8.885608,-6.781274,9.696015,1.381774,-7.236818,2.025049,-3.954020,5.103918,3.569023,0.832574,-2.292873,3.785596,-3.569506,4.450747,-1.863769,-7.637629,6.739657,3.418078,-1.329452,-3.156930,5.423504,8.772505,-0.450324,-6.558212,-2.872042,-9.076081,-4.704574,2.218015,-5.681110,6.454052,8.995093,-2.182658,-8.670068,9.072977,1.742066,-0.992461,6.411405,-1.110529,-0.328845,-6.022144,-6.758787,1.667207,-4.323415,9.228292,-4.380085,8.425716,-9.073769,-3.122407,9.714679,0.363461,1.545252,-1.181067,-3.038791,-9.033994,1.356355,2.480164,1.400700,-7.053093,-3.448024,-8.550093,-7.884051,-9.098037,2.706957,-4.007851,-5.985082,2.677176,6.794648,-5.682891,-7.895616,-4.776601,5.280004,-3.450084,-0.698260,-8.808471,-0.908416,6.271246,-6.989216,-7.915621,-2.594417,1.236356,-3.618551,-2.792776,-4.574109,8.750201,6.804334,-4.870937,-5.292290,1.111930,3.244719,1.649581,-8.579387,5.989565,-1.254618,1.316099,-9.082299,1.628395,6.961462,-2.699988,-5.698150,2.038977,7.355573,1.557275,-1.899321,-1.030297,-6.119428,5.502491,4.143430,-4.917728,-9.774193,-1.019317,-1.372456,-9.476354,-9.839253,9.719434,-7.544034,-7.325550,-5.423160,0.017002,4.540540,-3.404345,9.602184,-6.266320,-3.446886,-1.720784,-6.129821,4.452669,-6.705903,6.706503,-3.191995,-8.930788,7.691587,-5.859043,-7.025820,-8.286806,-1.662802,1.670184,-1.609460,-0.077483,-1.240932,-2.380012,3.864070,3.239171,3.232114,-1.628095,8.699744,-4.451270,-2.597844,-6.381776,6.372156,-8.616528,-9.204889,3.108583,7.230851,8.939585,8.061615,4.836674,-5.389762,-3.948777,7.181240,4.210129,0.537355,3.881279,7.044766,-6.688028,-2.658380,-2.645605,9.635768,9.482990,4.670788,-6.386607,-5.385037,0.097033,7.465080,-3.601175,5.656501,3.572219,-1.143343,-3.043209,7.325283,-8.530446,7.464127,-8.139713,-8.748719,7.179053,-6.255919,-1.929703,7.951746,2.742496,-9.619627,9.788289,-6.263857,-8.058297,9.203967,-5.107827,-0.648209,-3.121996,9.011754,-5.059369,3.075072,3.705112,9.332675,-2.267665,0.381775,9.492252,-6.635161,3.083457,-4.689226,8.563671,-8.572575,-3.792811,-2.426101,-1.945881,0.453751,6.542369,1.997498,-9.521750,5.948816,5.735913,2.399365,-3.526866,-8.564185,-4.161567,7.627214,-9.424133,1.853493,-9.547355,-2.717272,2.398700,8.164426,-2.116435,4.496589,-7.996959,2.813314,7.814315,-3.808318,-6.416369,-7.663334,6.592762,-7.462653,6.531377,-9.527213,7.565878,1.087256,-9.217909,-4.128729,6.503061,-4.854808,-6.622950,3.212192,-0.159381,8.646713,-5.278160,2.381204,0.290696,-3.783397,7.608689,0.727972,9.744110,5.780188,4.569323,-7.953127,6.233539,-5.733668,-6.243193,4.372831,-3.252007,-9.615395,-2.952539,-9.236022,7.176530,5.609007,-0.498861,-3.805019,5.628084,8.174726,5.070156,4.571400,-3.768246,-3.225712,6.034000,6.071762,-1.475665,6.699693,1.861911,-5.081941,-1.965625,4.739688,-1.950430,-1.604863,6.951193,3.692247,7.485306,0.131145,-6.228802,-7.823210,-8.355386,4.803729,7.578488,2.922843,7.741241,-3.895424,7.476753,-8.090878,5.060283,5.998370,-6.963580,4.754261,5.856505,-4.734511,-4.585910,-2.996335,-7.795022,8.364413,-9.969202,7.003778,-1.242172,7.754140,6.263358,-4.040730,-8.972354,-8.112256,-1.304125,-1.989810,-9.554565,0.939355,3.325695,7.499282,-1.497359,-4.984423,-1.153288,-1.428329,7.912074,-8.656001,0.194586,4.792444,0.116561,-8.105588,9.321163,1.905356,7.264164,-1.607115,-0.009998,9.072198,-4.108953,4.144884,9.098314,5.020574,4.471802,4.110973,-0.725435,-6.663836,-7.912133,1.323186,6.259925,-8.786126,-7.202096,-2.443326,-7.145712,0.176374,4.926275,4.428428,-1.855526,7.331147,0.564780,-2.919144,8.811413,9.856296,5.465438,3.155558,5.542954,-7.203842,-7.093478,6.072636,-2.179574,8.354120,0.999921,-5.853137,0.755215,-7.152622,-7.663055,4.404861,3.249724,-6.991249,4.236610,-9.441318,4.727379,-4.138581,4.716093,-0.526280,-1.477972,0.077959,4.002416,2.285888,0.527624,1.426696,-9.143855,5.490757,2.199455,1.800714,1.046144,7.627691,-3.338981,-9.417803,6.377566,3.470696,-1.247284,-4.070317,-8.750204,-2.142707,0.792366,4.285454,-2.094160,7.096424,-2.105276,8.885894,-1.900391,-6.785437,-9.192388,-2.455576,-6.308619,-8.742047,-1.650643,-6.944551,-6.745729,-2.679206,-7.873196,-6.173041,-5.584763,-3.092603,-6.577031,-8.970543,-0.157793,2.950886,7.114505,7.500457,4.808745,-3.491381,-9.095031,-0.057236,-4.307618,-0.078009,-2.196281,0.297578,-0.155507,-5.503237,2.498815,-1.484859,7.393046,4.901709,2.273208,-0.229212,-3.802471,8.026547,1.823630,3.016090,-5.004271,-7.760848,-3.977589,-9.235724,4.970930,2.835940,6.265427,8.857998,6.991064,-7.329056,0.879615,4.826497,6.407519,-4.751929,-0.144901,-1.745630,2.543640,-7.494254,9.408165,-0.122432,9.926894,3.076472,0.075808,0.578211,5.211247,-8.950379,9.488586,-0.894975,-7.942260,6.432760,2.486973,3.129769,9.219262,-6.926654,-0.242350,6.550590,0.162136,5.644458,1.611316,8.612133,-0.763903,0.363396,-6.610713,-5.652709,-5.281438,7.138098,-3.426506,-9.372548,-5.006746,-4.612160,-2.899587,-3.450147,-4.584356,-6.467049,4.707761,3.426913,0.861663,1.889570,-8.369711,-2.569976,9.739529,-8.006131,9.568877,6.783544,-6.331681,-7.303532,-6.784524,-2.871090,-9.861480,-1.931166,-0.299997,7.868687,6.602481,1.925907,5.327723,-2.020304,-8.665521,-5.122771,-9.987336,3.714181,1.773538,0.970828,8.243653,-0.754113,-3.006437,1.454091,-1.996518,6.310335,0.941560,-7.348569,-7.669471,4.046292,9.682973,-9.913131,-3.833000,-5.434811,-6.077060,0.673613,2.106048,3.361924,-0.772776,9.575590,-4.237365,-8.434252,0.353658,-0.615365,-0.423296,-1.902899,9.667726,8.240926,2.899708,1.999868,8.532367,1.985928,-9.222518,-4.142177,9.268136,-3.414624,-3.432655,3.834796,3.455256,-0.699152,9.435003,8.977391,5.978495,-1.123685,8.389287,-8.497970,-9.027948,7.851818,1.812820,-4.866166,9.856050,-9.690453,2.386974,-0.044851,0.553346,-6.404880,2.256027,7.157213,-1.121127,5.154222,2.846183,-0.291590,6.358753,-7.878455,-0.412680,6.709419,7.752532,6.329756,4.907287,8.080217,-6.534955,-3.302292,-8.934738,0.436901,0.859518,-4.131060,-1.583091,7.664069,-9.452961,-6.241850,-0.361777,0.706964,0.058834,-2.550954,-2.636017,4.132507,-6.507440,-5.012933,5.333360,5.416746,2.470239,7.712795,7.557881,7.536827,0.162532,-7.621873,-9.579052,4.071044,-6.448943,-2.399422,-3.436972,-0.840135,9.052344,4.553618,-6.474788,-8.816700,-9.265365,6.810200,-2.213159,7.749805,2.083934,0.629265,9.013971,1.982138,-0.745350,-7.963797,-6.771238,5.171853,-1.860687,-9.012399,-9.032072,-0.674683,9.481660,-4.824314,-9.009509,7.317578,3.917322,6.235927,0.643897,-3.767193,6.284692,-0.649755,2.898789,8.504626,-2.817998,-9.694210,-5.062549,1.667789,5.334549,5.719823,-6.378091,4.589810,3.920155,-0.885532,8.085846,4.432564,-7.167880,-1.025693,4.473537,5.037306,-0.530721,-8.427314,-2.759693,-5.625470,3.203845,3.556006,-8.396205,8.856155,-2.986604,-3.476105,1.354433,-0.221736,-2.280202,2.190871,-4.226890,1.165566,3.417002,-3.064964,-2.910823,5.335415,-7.256278,2.972728,2.289063,4.696217,-1.846035,8.725337,0.568488,1.961365,5.930556,1.601833,2.076820,-8.450570,6.326572,-0.224016,0.494933,5.806634,6.757056,-3.494351,-9.625309,-2.891129,0.999243,-8.998896,4.992480,-7.435708,-3.998507,-8.145572,9.047846,-5.059372,0.535132,-1.031061,-2.005589,5.462432,-5.527883,-1.787449,8.880882,2.901100,8.198008,5.252781,-8.052203,2.945696,1.480828,-8.575695,-6.336827,5.228934,-2.535473,-5.122552,-4.937907,-7.447406,5.728548,5.575679,2.685855,7.185961,-9.410132,5.139228,0.832308,8.032286,-8.760042,3.950081,4.190436,7.788369,-7.818279,-4.833932,0.651772,7.382980,-4.492262,8.029751,8.475958,-3.531110,0.112157,-2.531954,-3.834529,1.311646,-5.757735,2.731582,-6.064543,4.686014,-1.875109,5.996836,-9.374643,-7.988471,1.975031,-7.887572,-4.414230,-1.715164,-9.784536,-4.653006,-2.018875,1.109749,-9.218846,-5.955619,9.301294,8.236540,-6.518440,3.803131,6.392507,7.721596,2.904932,-8.766556,-5.662235,2.747770,4.611835,8.497495,-4.154791,-2.481824,1.334044,4.809660,-8.252549,-8.574377,6.996906,2.308051,9.492292,8.982164,-8.606537,-9.806858,-9.316711,8.433362,-0.567327,3.670424,-4.601226,9.322857,3.661762,-1.201099,-6.530987,-0.179436,2.741287,-1.071115,-5.684173,8.612537,2.664505,9.456420,-6.953822,-2.785749,8.542443,5.914303,4.609843,3.000570,5.432133,6.653608,-9.760441,9.023526,9.398118,-2.642691,1.442731,5.769806,0.664318,-1.562775,2.219065,-1.048385,-0.643899,-2.596624,5.362162,-1.842690,-2.434400,-2.139203,0.974705,-5.551218,3.592573,-8.806829,-7.445361,-6.648236,-7.964637,2.934881,0.951913,-0.252510,3.401785,4.881449,-6.616300,5.737547,5.559576,2.690541,5.564812,-7.713012,-4.542640,3.303793,-3.667213,2.188750,-8.090549,-3.263097,-4.245688,-7.353497,-2.869136,-2.763671,8.104050,4.818203,7.975989,-7.829297,-1.642004,-3.821938,1.425147,9.001673,5.252448,3.279990,-0.695502,3.654001,-4.285182,-7.533774,2.346725,-6.302498,3.807673,-1.020312,-7.335381,4.494153,2.263959,-0.997471,-2.105057,-7.433269,-3.831790,2.146303,8.410502,6.900901,-3.136864,-1.231976,8.940265,7.149188,-8.097154,2.550427,-3.328945,2.738953,-1.623391,-8.127681,-8.405915,-4.798252,-9.236876,2.171613,-8.458716,-1.260892,-6.470495,9.211419,1.081661,-4.770180,-6.755050,-2.036702,8.200018,-1.680321,7.164002,-1.309816,1.072029,-7.802896,-1.773161,3.218207,8.518046,-1.988150,4.352676,9.542417,-6.101761,-5.293811,4.179396,3.300619,4.026104,2.495920,-1.280362,-2.087714,-2.848760,-1.923803,-7.756459,-8.499159,6.894786,8.700109,-7.269345,3.420383,6.792913,5.304606,-7.215732,7.326016,-6.887737,8.089441,-1.455668,-2.828904,-7.521672,1.503661,-2.048054,-8.039181,-2.634489,-8.600612,-0.091862,7.384044,-1.158246,8.940795,4.372553,-3.553415,4.993041,9.985381,4.569877,-6.840374,-4.396629,-4.270051,5.941234,-2.450416,-9.811157,-1.395640,-3.692052,-9.245519,-0.018427,8.267172,-4.989822,4.247667,8.349971,3.061037,-2.143808,4.660308,-7.699927,-6.512176,-6.933882,0.341554,7.888724,-7.501341,-9.056951,-9.813491,-7.743410,-2.225790,4.660041,-0.100990,-1.603912,9.741299,5.842675,7.186952,-8.478127,-2.630797,-6.863507,-9.775477,2.503575,3.331471,2.907379,8.654616,-1.802601,7.301189,4.983923,-5.372228,3.336284,1.530468,-0.748430,-7.757435,-3.881768,-1.326560,1.393833,-2.627187,1.844918,-6.717767,-0.237433,-2.539150,0.963280,-7.657525,9.354681,5.778546,7.485518,6.339869,4.413206,-4.631003,-5.323777,7.715113,8.193712,3.248415,1.765579,-6.299404,5.348907,-7.467017,-1.312724,6.495838,-1.487258,-4.732689,9.890218,3.010506,-1.763807,-1.332308,-8.021400,-0.792089,-2.871805,-6.083665,4.666476,7.883901,3.033254,0.159798,-7.489981,0.869846,7.237593,-4.497563,-3.021863,-9.759079,-0.607536,2.673484,-6.370078,-6.269110,6.331945,-1.988349,0.177670,5.092378,-2.202608,-6.358748,-6.885017,2.029254,-8.216713,-9.550887,2.701463,6.427909,-8.681172,6.255898,-0.526474,9.433050,-8.893383,-3.427835,4.773466,2.377882,-2.371137,-5.261975,1.820331,5.866150,-6.448965,-4.008851,-5.338098,8.221221,6.326066,9.671183,-5.615095,8.084274,-2.912505,2.562689,-9.051215,1.126078,-8.655772,2.763497,1.810896,0.070219,-2.493949,-2.126584,6.156272,7.089982,-1.457200,-4.920532,7.506614,2.016181,4.451835,4.664090,7.390814,8.469799,8.488463,-6.158742,6.295188,-6.156136,5.393705,-3.818165,-3.132694,3.873349,-2.797468,2.821098,-5.308162,0.564382,5.749943,6.103689,-5.409314,6.638771,1.176917,-4.725333,2.330410,-9.213325,3.528661,-5.532582,8.604543,-3.149452,9.686901,0.678257,1.251697,-0.813008,-7.286456,4.588574,-9.511632,-0.296212,-3.664883,-7.085748,9.815902,1.506222,7.015988,-2.008213,7.317653,-8.284178,-2.152485,-8.675113,-4.869044,7.078887,-4.210477,2.704215,5.757992,-1.134031,2.731237,1.579857,-4.702993,4.910946,-5.870997,-2.401063,0.753258,2.065512,-3.618387,9.745545,-9.854996,7.723650,6.724772,7.605002,-0.803376,2.897509], dtype = "float32")#candidate|8038|(2912,)|const|float32
call_8037 = relay.TupleGetItem(func_3025_call(relay.reshape(const_8038.astype('float32'), [13, 16, 14])), 1)
call_8039 = relay.TupleGetItem(func_3028_call(relay.reshape(const_8038.astype('float32'), [13, 16, 14])), 1)
func_6973_call = mod.get_global_var('func_6973')
func_6975_call = mutated_mod.get_global_var('func_6975')
var_8051 = relay.var("var_8051", dtype = "float64", shape = (1440,))#candidate|8051|(1440,)|var|float64
call_8050 = relay.TupleGetItem(func_6973_call(relay.reshape(var_8051.astype('float64'), [1440,])), 0)
call_8052 = relay.TupleGetItem(func_6975_call(relay.reshape(var_8051.astype('float64'), [1440,])), 0)
output = relay.Tuple([call_8035,call_8037,const_8038,call_8050,var_8051,])
output2 = relay.Tuple([call_8036,call_8039,const_8038,call_8052,var_8051,])
func_8061 = relay.Function([var_8051,], output)
mod['func_8061'] = func_8061
mod = relay.transform.InferType()(mod)
var_8062 = relay.var("var_8062", dtype = "float64", shape = (1440,))#candidate|8062|(1440,)|var|float64
output = func_8061(var_8062)
func_8063 = relay.Function([var_8062], output)
mutated_mod['func_8063'] = func_8063
mutated_mod = relay.transform.InferType()(mutated_mod)
const_8121 = relay.const([[-2.000253,1.395889,3.037489,9.085139,8.031969,8.583680,1.883817,3.885773,-5.138200,6.152358,0.709562,9.350586,-1.415555,-4.736717,-9.088179,6.543023],[-3.745227,-6.556457,0.930644,1.330554,-7.218178,-5.699623,-9.962397,6.858195,6.324923,0.081619,7.654915,-0.750442,-1.338589,2.016046,-7.452505,5.341877],[2.726249,-6.054931,1.830514,-4.658293,2.999265,-9.242692,-4.119613,-6.558242,-7.976671,0.153128,3.036697,1.492320,-9.597866,-3.465539,1.504554,4.748289],[3.100349,8.081534,9.044816,8.681845,-0.951010,-2.368098,3.825720,3.716384,-9.914077,-1.952800,-6.154333,3.370589,-9.673656,5.625920,-5.373156,-5.462881],[-7.489650,-5.743651,2.549172,-9.734492,9.267764,0.263790,-6.104685,-2.244265,1.104089,-5.081090,9.291439,-3.856208,3.990603,8.722891,2.015078,6.288444],[-4.619311,5.743808,5.272230,8.579098,0.776319,-4.847050,8.012337,-1.834080,7.929670,-7.730097,9.817565,-4.158047,-2.387339,-0.588384,9.604534,-3.181027],[7.749805,-4.982520,6.113653,-2.648709,-2.316801,-7.877355,1.299827,-8.630207,9.045661,8.076869,8.913434,9.725306,-7.251664,4.435729,-0.200154,2.864221],[-0.735821,-0.949866,9.959424,-3.094384,5.943362,-9.668410,0.294108,8.469151,5.838117,0.863135,-6.186836,9.524816,-7.587692,2.359528,-6.048188,2.399506],[-8.877840,-5.440341,-0.151810,4.381074,-0.919539,-3.571679,-9.797830,-6.357248,6.144801,-1.949828,9.129898,-6.333125,0.487584,-1.349152,-2.573465,-1.403240],[5.608340,-3.023108,4.410351,-2.354027,8.718194,3.659450,-1.672225,-2.303306,-4.387962,-2.485462,-6.304395,0.289236,-3.644767,6.045601,3.859886,4.803930],[-4.697739,-8.538574,1.478542,2.129848,-0.636465,-4.834895,9.776933,-0.692611,1.579962,0.664846,0.451932,9.885053,-5.168443,-8.317105,-9.773662,-7.350751],[5.441535,-3.059758,2.958143,-0.874625,7.487048,5.894477,5.198940,-2.338831,-3.406947,-8.125743,-4.673396,4.248966,-9.385342,2.026066,3.361576,8.334402]], dtype = "float64")#candidate|8121|(12, 16)|const|float64
uop_8122 = relay.log2(const_8121.astype('float64')) # shape=(12, 16)
output = relay.Tuple([uop_8122,])
output2 = relay.Tuple([uop_8122,])
func_8124 = relay.Function([], output)
mod['func_8124'] = func_8124
mod = relay.transform.InferType()(mod)
mutated_mod['func_8124'] = func_8124
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8124_call = mutated_mod.get_global_var('func_8124')
call_8125 = func_8124_call()
output = call_8125
func_8126 = relay.Function([], output)
mutated_mod['func_8126'] = func_8126
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8155 = relay.var("var_8155", dtype = "float64", shape = (7, 7, 15))#candidate|8155|(7, 7, 15)|var|float64
const_8156 = relay.const([[[2.678218,-5.629358,-4.326018,-4.156515,-1.304126,-9.466982,-6.498252,1.263654,9.676215,-7.627481,-4.866212,4.223406,-5.142339,6.805318,3.263828],[-4.714754,-1.797761,8.841710,4.953302,-0.495939,-4.616143,-2.367763,1.180409,0.358553,7.799243,-5.844954,6.533962,8.085102,-2.943546,-2.540266],[-9.232498,-1.612437,-6.286007,1.565674,1.404402,2.566113,-5.731220,-9.466570,2.605573,3.070091,-2.869600,7.393773,7.094650,3.361886,4.339832],[-9.532685,-2.921723,-5.726795,-0.223887,9.367586,-4.692242,0.210607,-1.940292,-6.790511,9.452050,-3.605387,9.607438,3.998714,7.345147,-6.227672],[2.688332,-6.767464,8.045463,-9.240749,-5.348402,3.420513,-7.438414,-2.600770,7.359060,1.856570,-0.956550,-2.573153,4.933541,-8.986489,-8.605558],[9.411047,8.162208,9.547975,-5.869512,-4.535847,2.134515,1.529566,-6.296193,4.140195,-5.635320,-1.345934,-3.985651,-7.883205,9.197865,-1.840440],[8.996046,7.771610,4.559988,0.096119,-9.988791,4.016941,-3.671596,7.448258,-4.131157,-9.619460,9.624772,5.675283,2.149990,6.189721,-6.780063]],[[-7.281756,3.516991,3.088155,-1.518522,5.092745,-7.815701,8.660940,8.000278,-7.631240,8.934211,1.440144,1.610800,-0.238591,-9.177892,2.428496],[-6.132725,5.332494,9.043663,-3.883021,6.304962,-1.068346,-4.329328,-0.978278,6.541350,4.908142,1.542239,4.693759,0.105686,9.419392,-4.773902],[5.491941,-1.572883,-2.352023,4.125037,-5.602540,-2.919437,-3.875365,-9.597485,7.625423,6.064063,-4.908581,9.173363,-5.797445,3.535773,-1.697686],[-4.714592,-7.361318,-0.274702,0.222061,-2.878559,4.183245,-9.738897,3.244623,-0.211806,-3.199384,-4.809838,9.279097,4.344920,-4.115907,3.915097],[-0.335134,-0.605142,7.034774,5.321211,-4.107701,-3.171001,8.797420,-2.997403,8.523050,0.908470,-8.066944,-8.072386,7.154471,5.407386,-7.946661],[-7.504117,7.568594,-2.895745,-8.943465,3.185144,7.462366,-3.752597,-4.402450,3.702987,4.975038,-3.196020,-5.772843,9.713736,-2.229877,-8.585473],[-9.815314,9.256515,7.640902,-1.807607,9.064031,1.253205,8.638793,2.342536,-3.269783,2.802923,7.761182,3.663609,-6.544021,0.489835,-5.636685]],[[1.985064,8.006268,-5.904693,-1.698507,-0.260746,-1.936465,-9.684425,9.473030,6.953955,1.212083,9.450256,-1.894342,-9.513481,-5.384723,7.596159],[7.311517,6.705182,6.028198,-4.535342,-3.912874,-3.729972,-4.872962,-4.834336,-1.059660,3.263100,-0.933069,2.312792,6.089312,0.649549,8.273624],[-3.813896,5.109715,6.578769,9.335953,5.828639,-8.232233,-4.584363,-8.874351,-6.389253,2.989154,-9.596639,8.331135,-6.104994,-1.414565,-6.334217],[0.630874,-5.057758,-7.692131,7.930646,4.062683,4.232832,-4.741020,-5.643709,-1.304185,-2.927353,-3.828971,7.533866,-1.828577,2.794417,2.949566],[-2.083229,-4.674302,8.573523,9.829942,3.584961,0.099881,-9.063500,-8.250903,0.163772,-9.872332,-4.069569,-1.599470,-6.479628,-0.064269,8.077453],[6.914567,-3.788775,9.165698,-8.677731,-2.471638,2.871679,-7.559304,-0.801713,4.646300,5.093492,3.869965,-9.458055,7.876627,-0.877096,-5.344106],[4.393933,4.938603,-3.010009,7.301927,1.212257,-4.111313,-6.769871,3.750191,3.766490,-5.645016,-7.793201,1.589835,3.166683,1.748065,-1.117400]],[[-9.299122,0.382206,0.420828,-8.343192,-9.403492,-2.464010,-0.309437,9.641882,7.328692,-9.945920,4.363126,5.300553,-2.320123,8.524336,-0.058500],[3.660221,0.101545,9.947515,-2.497268,4.791558,7.390287,3.188295,-6.723967,3.755421,-5.241433,8.050188,-8.646379,-9.299610,-4.851242,-1.104389],[7.179566,3.973123,-6.924669,0.568722,-6.989091,4.801852,-0.269704,9.963913,4.853543,5.926580,0.704105,4.395364,7.485670,-4.593711,1.777042],[9.486906,-6.583808,3.760151,1.730562,-0.311075,-5.506618,5.329142,-6.038314,7.297021,-7.837839,5.442223,-1.823649,9.323301,-3.630438,8.365333],[4.228967,-0.691112,7.435223,-2.501187,-2.615680,-3.912709,1.433807,-2.544758,-5.430946,7.020778,-2.789742,-1.980385,-8.473825,-9.212871,4.682265],[-4.278313,-1.380657,6.715804,1.825423,-0.926420,-1.360562,-7.840902,0.752981,6.176350,-0.874543,-6.503763,-7.325187,2.974667,-6.183065,7.910126],[1.878530,-1.785288,4.096320,3.826955,-2.497896,-1.686445,-0.753578,-6.956594,0.515870,-6.725201,-6.060072,-3.946332,8.541887,7.814906,-0.448452]],[[-2.188403,6.829549,9.836185,-8.695070,2.893017,7.371618,7.432784,-9.070661,6.740099,6.230173,8.130796,-5.237148,-6.263731,-9.415576,1.280493],[8.662599,-2.940920,6.478808,4.413995,2.139150,-1.701729,-9.044449,-6.512044,9.370526,6.063437,3.594605,-4.025185,-7.984309,-0.424612,8.344465],[9.844893,2.979989,5.784817,-1.140304,-6.297953,1.774615,-9.771845,-8.333426,-1.134147,-9.804138,-1.780794,-4.147164,9.846609,-3.492455,6.413155],[7.723639,-4.236002,3.602422,7.561165,-0.801450,4.297505,-5.066314,8.520229,-6.942325,-1.811116,4.688009,9.469980,-7.815403,2.595966,-1.167198],[-8.160060,7.443883,-1.615008,-0.653892,-0.664802,4.027670,-1.089723,5.474450,-2.410317,5.700935,-7.130398,3.587898,-4.576525,-5.385113,-4.638120],[3.206702,1.982363,0.718071,4.259540,4.102613,-9.775200,9.587774,8.273962,3.449867,-4.538742,-7.184103,6.445990,-0.047238,9.009540,0.652408],[2.467888,-3.001083,-5.916934,-0.767757,2.584270,5.035077,-7.759480,-1.750790,-5.912704,4.457656,-6.763000,8.635234,-2.127783,-3.129668,2.383905]],[[7.568069,-3.271524,2.967060,-8.976731,-7.790523,6.838066,7.862244,-7.728014,3.205403,5.934064,1.113047,7.951390,-7.876516,2.526164,7.608149],[-0.268489,2.582788,4.455977,6.969238,9.208672,4.188202,-2.533162,-7.796911,7.162649,8.820361,5.239090,-5.779701,8.082956,-3.857371,2.815417],[1.490403,-5.586154,-3.872009,2.050217,1.918994,8.899776,-5.002172,-8.659230,-3.611859,-2.548958,-6.228084,1.892451,-5.832640,9.204448,4.992785],[4.069729,9.820231,7.265851,7.345171,4.434463,8.147208,9.291529,-4.522465,1.547481,1.641146,-5.624973,1.340199,1.077788,1.244220,-5.598544],[9.120421,4.920936,0.031857,7.743374,-9.295581,-4.262634,7.808084,0.923322,7.867780,9.022775,-6.910180,-9.133721,1.718894,-0.763558,1.604948],[1.607307,-5.397603,3.595168,9.416449,-2.090373,1.787933,-2.699288,-0.224046,4.523824,-0.199545,3.466541,-2.209979,-5.711259,7.954249,-8.124027],[4.920202,7.946617,3.008087,9.164848,0.438033,-3.212505,-8.755684,-9.379509,-9.499336,-3.854219,-1.559906,3.790981,-7.146864,-6.063288,-8.439961]],[[-1.467866,-3.895016,0.074634,-0.575078,-8.396612,-2.625225,-3.609507,7.447914,-0.329015,-0.728697,-8.154259,-2.915793,-5.494278,8.076757,-8.845410],[8.647372,9.002530,-5.281304,9.926706,-4.995543,0.746476,-2.034422,0.767943,-0.180930,7.158174,9.969649,9.018783,-3.622452,-2.688080,-9.577034],[8.323133,9.676707,6.249488,-1.427488,-3.325473,-3.965687,7.386868,9.572987,9.435239,-0.734562,6.110277,-3.169733,5.900959,-7.747672,1.074080],[-3.496985,-4.036041,4.718968,-4.710753,2.435618,-4.367212,-5.218615,-1.913379,0.073818,7.048909,9.657113,6.750156,7.097898,-8.994578,-3.948712],[-1.151197,-6.355353,-9.447401,-7.166620,2.060845,0.834246,1.349995,-8.539334,3.851561,7.097183,9.616639,8.688693,0.166933,-5.657646,-2.267833],[7.764507,7.119203,-5.895792,7.503011,-1.812928,-7.801467,8.854248,9.406851,5.433708,0.503651,1.762907,3.631534,6.768644,3.867682,-1.689175],[-2.173111,-7.716191,-5.325180,3.236097,4.334609,-3.999734,0.793940,-9.839639,3.940163,5.029745,-5.595646,-9.877774,-9.792577,-0.944107,2.413021]]], dtype = "float64")#candidate|8156|(7, 7, 15)|const|float64
bop_8157 = relay.divide(var_8155.astype('float64'), relay.reshape(const_8156.astype('float64'), relay.shape_of(var_8155))) # shape=(7, 7, 15)
output = relay.Tuple([bop_8157,])
output2 = relay.Tuple([bop_8157,])
func_8183 = relay.Function([var_8155,], output)
mod['func_8183'] = func_8183
mod = relay.transform.InferType()(mod)
mutated_mod['func_8183'] = func_8183
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8184 = relay.var("var_8184", dtype = "float64", shape = (7, 7, 15))#candidate|8184|(7, 7, 15)|var|float64
func_8183_call = mutated_mod.get_global_var('func_8183')
call_8185 = func_8183_call(var_8184)
output = call_8185
func_8186 = relay.Function([var_8184], output)
mutated_mod['func_8186'] = func_8186
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6631_call = mod.get_global_var('func_6631')
func_6633_call = mutated_mod.get_global_var('func_6633')
call_8222 = func_6631_call()
call_8223 = func_6631_call()
var_8254 = relay.var("var_8254", dtype = "float32", shape = (13, 16, 14))#candidate|8254|(13, 16, 14)|var|float32
bop_8255 = relay.logical_or(call_8222.astype('bool'), relay.reshape(var_8254.astype('bool'), relay.shape_of(call_8222))) # shape=(13, 16, 14)
bop_8258 = relay.logical_or(call_8223.astype('bool'), relay.reshape(var_8254.astype('bool'), relay.shape_of(call_8223))) # shape=(13, 16, 14)
bop_8260 = relay.equal(call_8222.astype('bool'), relay.reshape(var_8254.astype('bool'), relay.shape_of(call_8222))) # shape=(13, 16, 14)
bop_8263 = relay.equal(call_8223.astype('bool'), relay.reshape(var_8254.astype('bool'), relay.shape_of(call_8223))) # shape=(13, 16, 14)
output = relay.Tuple([bop_8255,bop_8260,])
output2 = relay.Tuple([bop_8258,bop_8263,])
func_8269 = relay.Function([var_8254,], output)
mod['func_8269'] = func_8269
mod = relay.transform.InferType()(mod)
mutated_mod['func_8269'] = func_8269
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8270 = relay.var("var_8270", dtype = "float32", shape = (13, 16, 14))#candidate|8270|(13, 16, 14)|var|float32
func_8269_call = mutated_mod.get_global_var('func_8269')
call_8271 = func_8269_call(var_8270)
output = call_8271
func_8272 = relay.Function([var_8270], output)
mutated_mod['func_8272'] = func_8272
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2371_call = mod.get_global_var('func_2371')
func_2373_call = mutated_mod.get_global_var('func_2373')
call_8291 = func_2371_call()
call_8292 = func_2371_call()
output = relay.Tuple([call_8291,])
output2 = relay.Tuple([call_8292,])
func_8293 = relay.Function([], output)
mod['func_8293'] = func_8293
mod = relay.transform.InferType()(mod)
mutated_mod['func_8293'] = func_8293
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8293_call = mutated_mod.get_global_var('func_8293')
call_8294 = func_8293_call()
output = call_8294
func_8295 = relay.Function([], output)
mutated_mod['func_8295'] = func_8295
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3613_call = mod.get_global_var('func_3613')
func_3614_call = mutated_mod.get_global_var('func_3614')
call_8328 = func_3613_call()
call_8329 = func_3613_call()
func_1711_call = mod.get_global_var('func_1711')
func_1713_call = mutated_mod.get_global_var('func_1713')
call_8335 = relay.TupleGetItem(func_1711_call(), 0)
call_8336 = relay.TupleGetItem(func_1713_call(), 0)
func_3384_call = mod.get_global_var('func_3384')
func_3385_call = mutated_mod.get_global_var('func_3385')
call_8345 = relay.TupleGetItem(func_3384_call(), 1)
call_8346 = relay.TupleGetItem(func_3385_call(), 1)
func_918_call = mod.get_global_var('func_918')
func_920_call = mutated_mod.get_global_var('func_920')
call_8353 = func_918_call()
call_8354 = func_918_call()
output = relay.Tuple([call_8328,call_8335,call_8345,call_8353,])
output2 = relay.Tuple([call_8329,call_8336,call_8346,call_8354,])
func_8358 = relay.Function([], output)
mod['func_8358'] = func_8358
mod = relay.transform.InferType()(mod)
mutated_mod['func_8358'] = func_8358
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8358_call = mutated_mod.get_global_var('func_8358')
call_8359 = func_8358_call()
output = call_8359
func_8360 = relay.Function([], output)
mutated_mod['func_8360'] = func_8360
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7957_call = mod.get_global_var('func_7957')
func_7958_call = mutated_mod.get_global_var('func_7958')
call_8366 = relay.TupleGetItem(func_7957_call(), 0)
call_8367 = relay.TupleGetItem(func_7958_call(), 0)
output = call_8366
output2 = call_8367
func_8368 = relay.Function([], output)
mod['func_8368'] = func_8368
mod = relay.transform.InferType()(mod)
mutated_mod['func_8368'] = func_8368
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8368_call = mutated_mod.get_global_var('func_8368')
call_8369 = func_8368_call()
output = call_8369
func_8370 = relay.Function([], output)
mutated_mod['func_8370'] = func_8370
mutated_mod = relay.transform.InferType()(mutated_mod)
func_894_call = mod.get_global_var('func_894')
func_896_call = mutated_mod.get_global_var('func_896')
call_8386 = relay.TupleGetItem(func_894_call(), 1)
call_8387 = relay.TupleGetItem(func_896_call(), 1)
output = relay.Tuple([call_8386,])
output2 = relay.Tuple([call_8387,])
func_8390 = relay.Function([], output)
mod['func_8390'] = func_8390
mod = relay.transform.InferType()(mod)
output = func_8390()
func_8391 = relay.Function([], output)
mutated_mod['func_8391'] = func_8391
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8424 = relay.var("var_8424", dtype = "float64", shape = (2, 9, 9))#candidate|8424|(2, 9, 9)|var|float64
var_8425 = relay.var("var_8425", dtype = "float64", shape = (2, 9, 9))#candidate|8425|(2, 9, 9)|var|float64
bop_8426 = relay.equal(var_8424.astype('bool'), relay.reshape(var_8425.astype('bool'), relay.shape_of(var_8424))) # shape=(2, 9, 9)
output = bop_8426
output2 = bop_8426
func_8431 = relay.Function([var_8424,var_8425,], output)
mod['func_8431'] = func_8431
mod = relay.transform.InferType()(mod)
var_8432 = relay.var("var_8432", dtype = "float64", shape = (2, 9, 9))#candidate|8432|(2, 9, 9)|var|float64
var_8433 = relay.var("var_8433", dtype = "float64", shape = (2, 9, 9))#candidate|8433|(2, 9, 9)|var|float64
output = func_8431(var_8432,var_8433,)
func_8434 = relay.Function([var_8432,var_8433,], output)
mutated_mod['func_8434'] = func_8434
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7957_call = mod.get_global_var('func_7957')
func_7958_call = mutated_mod.get_global_var('func_7958')
call_8464 = relay.TupleGetItem(func_7957_call(), 1)
call_8465 = relay.TupleGetItem(func_7958_call(), 1)
output = relay.Tuple([call_8464,])
output2 = relay.Tuple([call_8465,])
func_8466 = relay.Function([], output)
mod['func_8466'] = func_8466
mod = relay.transform.InferType()(mod)
output = func_8466()
func_8467 = relay.Function([], output)
mutated_mod['func_8467'] = func_8467
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8358_call = mod.get_global_var('func_8358')
func_8360_call = mutated_mod.get_global_var('func_8360')
call_8476 = relay.TupleGetItem(func_8358_call(), 2)
call_8477 = relay.TupleGetItem(func_8360_call(), 2)
func_6502_call = mod.get_global_var('func_6502')
func_6504_call = mutated_mod.get_global_var('func_6504')
call_8480 = func_6502_call()
call_8481 = func_6502_call()
func_4146_call = mod.get_global_var('func_4146')
func_4147_call = mutated_mod.get_global_var('func_4147')
call_8489 = relay.TupleGetItem(func_4146_call(), 0)
call_8490 = relay.TupleGetItem(func_4147_call(), 0)
output = relay.Tuple([call_8476,call_8480,call_8489,])
output2 = relay.Tuple([call_8477,call_8481,call_8490,])
func_8496 = relay.Function([], output)
mod['func_8496'] = func_8496
mod = relay.transform.InferType()(mod)
mutated_mod['func_8496'] = func_8496
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8496_call = mutated_mod.get_global_var('func_8496')
call_8497 = func_8496_call()
output = call_8497
func_8498 = relay.Function([], output)
mutated_mod['func_8498'] = func_8498
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3794_call = mod.get_global_var('func_3794')
func_3796_call = mutated_mod.get_global_var('func_3796')
call_8499 = relay.TupleGetItem(func_3794_call(), 1)
call_8500 = relay.TupleGetItem(func_3796_call(), 1)
output = call_8499
output2 = call_8500
func_8502 = relay.Function([], output)
mod['func_8502'] = func_8502
mod = relay.transform.InferType()(mod)
output = func_8502()
func_8503 = relay.Function([], output)
mutated_mod['func_8503'] = func_8503
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8504 = relay.var("var_8504", dtype = "float64", shape = (6, 6, 14))#candidate|8504|(6, 6, 14)|var|float64
var_8505 = relay.var("var_8505", dtype = "float64", shape = (6, 6, 14))#candidate|8505|(6, 6, 14)|var|float64
bop_8506 = relay.power(var_8504.astype('float64'), relay.reshape(var_8505.astype('float64'), relay.shape_of(var_8504))) # shape=(6, 6, 14)
func_5429_call = mod.get_global_var('func_5429')
func_5430_call = mutated_mod.get_global_var('func_5430')
call_8513 = func_5429_call()
call_8514 = func_5429_call()
func_4039_call = mod.get_global_var('func_4039')
func_4041_call = mutated_mod.get_global_var('func_4041')
var_8517 = relay.var("var_8517", dtype = "float64", shape = (1, 1440))#candidate|8517|(1, 1440)|var|float64
call_8516 = relay.TupleGetItem(func_4039_call(relay.reshape(var_8517.astype('float64'), [1440,])), 5)
call_8518 = relay.TupleGetItem(func_4041_call(relay.reshape(var_8517.astype('float64'), [1440,])), 5)
func_4064_call = mod.get_global_var('func_4064')
func_4068_call = mutated_mod.get_global_var('func_4068')
var_8521 = relay.var("var_8521", dtype = "uint8", shape = (2156,))#candidate|8521|(2156,)|var|uint8
call_8520 = relay.TupleGetItem(func_4064_call(relay.reshape(var_8521.astype('uint8'), [14, 11, 14]), relay.reshape(var_8521.astype('uint8'), [14, 11, 14]), ), 0)
call_8522 = relay.TupleGetItem(func_4068_call(relay.reshape(var_8521.astype('uint8'), [14, 11, 14]), relay.reshape(var_8521.astype('uint8'), [14, 11, 14]), ), 0)
func_324_call = mod.get_global_var('func_324')
func_325_call = mutated_mod.get_global_var('func_325')
call_8526 = relay.TupleGetItem(func_324_call(), 0)
call_8527 = relay.TupleGetItem(func_325_call(), 0)
bop_8528 = relay.not_equal(bop_8506.astype('bool'), relay.reshape(var_8505.astype('bool'), relay.shape_of(bop_8506))) # shape=(6, 6, 14)
var_8535 = relay.var("var_8535", dtype = "float64", shape = (6, 6, 14))#candidate|8535|(6, 6, 14)|var|float64
bop_8536 = relay.maximum(var_8505.astype('int8'), relay.reshape(var_8535.astype('int8'), relay.shape_of(var_8505))) # shape=(6, 6, 14)
output = relay.Tuple([call_8513,call_8516,var_8517,call_8520,var_8521,call_8526,bop_8528,bop_8536,])
output2 = relay.Tuple([call_8514,call_8518,var_8517,call_8522,var_8521,call_8527,bop_8528,bop_8536,])
func_8544 = relay.Function([var_8504,var_8505,var_8517,var_8521,var_8535,], output)
mod['func_8544'] = func_8544
mod = relay.transform.InferType()(mod)
mutated_mod['func_8544'] = func_8544
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8544_call = mutated_mod.get_global_var('func_8544')
var_8546 = relay.var("var_8546", dtype = "float64", shape = (6, 6, 14))#candidate|8546|(6, 6, 14)|var|float64
var_8547 = relay.var("var_8547", dtype = "float64", shape = (6, 6, 14))#candidate|8547|(6, 6, 14)|var|float64
var_8548 = relay.var("var_8548", dtype = "float64", shape = (1, 1440))#candidate|8548|(1, 1440)|var|float64
var_8549 = relay.var("var_8549", dtype = "uint8", shape = (2156,))#candidate|8549|(2156,)|var|uint8
var_8550 = relay.var("var_8550", dtype = "float64", shape = (6, 6, 14))#candidate|8550|(6, 6, 14)|var|float64
call_8545 = func_8544_call(var_8546,var_8547,var_8548,var_8549,var_8550,)
output = call_8545
func_8551 = relay.Function([var_8546,var_8547,var_8548,var_8549,var_8550,], output)
mutated_mod['func_8551'] = func_8551
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3613_call = mod.get_global_var('func_3613')
func_3614_call = mutated_mod.get_global_var('func_3614')
call_8555 = func_3613_call()
call_8556 = func_3613_call()
func_7282_call = mod.get_global_var('func_7282')
func_7287_call = mutated_mod.get_global_var('func_7287')
var_8572 = relay.var("var_8572", dtype = "float32", shape = (192,))#candidate|8572|(192,)|var|float32
call_8571 = relay.TupleGetItem(func_7282_call(relay.reshape(var_8572.astype('float32'), [24, 8]), relay.reshape(var_8572.astype('float32'), [24, 8]), relay.reshape(var_8572.astype('float32'), [24, 8]), ), 4)
call_8573 = relay.TupleGetItem(func_7287_call(relay.reshape(var_8572.astype('float32'), [24, 8]), relay.reshape(var_8572.astype('float32'), [24, 8]), relay.reshape(var_8572.astype('float32'), [24, 8]), ), 4)
output = relay.Tuple([call_8555,call_8571,var_8572,])
output2 = relay.Tuple([call_8556,call_8573,var_8572,])
func_8583 = relay.Function([var_8572,], output)
mod['func_8583'] = func_8583
mod = relay.transform.InferType()(mod)
mutated_mod['func_8583'] = func_8583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8584 = relay.var("var_8584", dtype = "float32", shape = (192,))#candidate|8584|(192,)|var|float32
func_8583_call = mutated_mod.get_global_var('func_8583')
call_8585 = func_8583_call(var_8584)
output = call_8585
func_8586 = relay.Function([var_8584], output)
mutated_mod['func_8586'] = func_8586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1940_call = mod.get_global_var('func_1940')
func_1941_call = mutated_mod.get_global_var('func_1941')
call_8625 = relay.TupleGetItem(func_1940_call(), 4)
call_8626 = relay.TupleGetItem(func_1941_call(), 4)
func_8269_call = mod.get_global_var('func_8269')
func_8272_call = mutated_mod.get_global_var('func_8272')
const_8633 = relay.const([8.813348,-2.920884,2.223156,-5.246908,-5.504528,-5.836320,0.463840,0.204991,-6.931869,-9.122381,-2.435717,0.752726,-7.009429,-3.880256,0.186648,5.542955,-4.077471,8.228541,5.941828,-1.044232,-0.689849,8.360093,4.478837,-9.458932,-0.933621,3.466883,2.619321,3.101323,-0.478779,5.344807,7.543155,-1.149426,-2.373782,9.353964,2.113948,-4.528768,-6.245808,0.643122,-6.690957,4.696496,-2.319861,1.700650,0.377846,8.171486,-5.294559,-5.111150,7.153891,0.420628,-9.268786,-3.673924,4.129410,7.089111,-1.690348,4.208148,0.982388,2.594700,8.528729,4.645655,2.073006,-7.115271,-9.134149,4.228385,0.031734,4.910407,0.574927,4.999979,-3.841556,-9.433412,6.841173,3.411930,-5.301488,-6.619805,4.148935,4.440552,6.924863,-1.144605,-2.331854,0.065533,3.615371,7.224870,-6.050194,5.865756,-4.399891,3.366711,8.072165,-3.971696,8.462331,4.382037,-6.086920,0.624740,-2.333299,2.345706,2.147591,-1.519945,-6.223609,2.709563,-4.431078,4.738588,-1.934904,-0.054373,-6.231141,-5.859953,0.816368,-3.328614,-1.109736,0.983941,-2.534917,0.348439,-4.457896,-2.668187,5.807140,6.532538,-6.697982,-3.205201,-4.455200,-6.058038,0.651109,-1.742490,-8.620852,0.837676,4.997102,0.075142,0.980682,1.408795,-1.474584,-5.990911,-4.543384,1.401719,1.758473,4.891183,-8.083548,-1.389498,-8.600500,-3.909300,4.088528,5.803261,8.540186,-4.457017,7.729551,-5.802884,9.909771,-0.003319,-4.657964,-5.061936,0.851964,7.815424,3.495163,-1.507974,1.051663,-8.802759,-2.598994,4.798380,-2.750229,-8.875136,1.218727,2.880954,-2.677934,-8.064319,5.720363,-0.964482,2.061630,-6.285226,5.651761,-3.641963,-8.971379,4.045313,9.287977,-6.436078,7.098060,4.077433,2.065269,4.649340,-9.576459,-2.517040,4.178738,0.308153,9.877509,4.378336,-0.990544,8.307505,4.026002,0.215559,9.767369,-1.188282,-3.290329,7.709665,7.729244,4.680185,8.430455,9.428075,-2.423066,6.353764,7.917438,-7.079416,-2.322313,-0.156986,3.098089,-4.541504,7.403073,7.283272,3.698052,9.701243,9.093092,-6.954421,-1.730716,3.511784,-8.086497,-9.306679,-0.770613,9.477889,-4.447248,-2.093227,5.142044,-0.432757,0.984020,5.220703,8.234784,6.699079,0.693864,0.194887,-3.681208,6.402839,3.295165,-4.940883,-4.470793,-6.251991,5.217976,-7.373855,-0.880268,7.865550,-8.847504,-5.320282,4.031581,0.971262,0.627185,-8.438581,4.626755,0.419027,-5.120553,-4.615965,0.937327,3.581793,6.275527,-0.715905,3.149368,-6.715534,-6.977008,2.179397,-9.431045,-0.064900,0.789239,3.176124,-7.803698,7.582131,-8.120766,-9.636018,-5.814370,-0.183167,9.783126,4.523768,-4.828898,0.649422,-9.943659,-4.166198,8.744656,5.393151,-5.242783,5.680115,1.078982,7.553769,9.871577,8.525289,6.787442,8.564001,-6.568329,0.614357,-6.282284,2.970870,9.990373,-4.950716,3.306164,7.296952,-9.005949,-7.351325,1.120605,-3.672716,1.090671,7.291432,3.685442,-8.337044,6.573261,8.736454,-7.719683,3.880353,-0.825964,-2.477251,1.617351,8.409237,-5.350417,2.811381,5.452682,-3.843508,7.615675,-7.163470,4.487467,4.275151,-3.383138,-0.972835,2.785416,9.300691,9.098572,8.311182,0.489973,7.592004,2.060107,-5.590095,-9.225275,1.580736,-2.940533,-2.077239,-8.978758,-8.563522,-9.816108,1.809316,-1.124083,-8.246696,-1.797796,-7.465838,-9.343903,-4.595547,-9.050461,9.332588,7.806327,9.212365,-8.288611,3.172271,8.731791,0.817821,7.298208,5.037508,1.051972,1.512745,-1.587236,-5.024940,8.260180,-9.694330,6.283288,-9.600612,-3.872440,-8.824117,-8.120461,-8.640414,4.439899,7.724346,-9.259795,7.430191,-1.380494,-9.001521,-6.964359,-1.024160,1.891862,-5.640130,-6.804978,5.269933,-9.654300,8.891568,-0.962094,-0.850183,6.349041,-5.870326,-4.056164,-6.674409,-1.314097,5.548551,0.023266,7.419589,-2.708495,9.022927,-8.773230,-9.550592,-9.390311,2.252999,0.264288,-1.431412,-6.223501,-0.155243,-5.727281,9.628447,3.570487,-8.254510,-3.663878,0.859368,0.401662,6.501845,-3.119111,-0.823830,2.424545,1.744011,4.680639,-9.238826,-4.445745,-6.765147,5.051180,3.150771,6.370771,8.605355,3.512986,-0.988493,1.481647,6.506490,6.775436,-7.682418,2.487590,0.339073,7.985754,-8.877850,5.456341,4.915155,0.891774,8.775790,-7.635707,-0.998687,-5.849557,-8.841975,5.128965,7.983962,6.448002,1.986110,0.183843,5.322188,-7.130518,-2.231930,-7.929330,-8.347513,-6.289518,-0.628978,-5.476627,4.647918,-4.842562,-1.836800,7.141396,-1.448003,8.357215,1.889664,1.234042,-7.341009,1.155292,3.294391,-9.901395,7.540831,2.391502,5.846871,-3.910360,-1.436641,-8.353244,-0.008799,-7.965827,-6.469175,9.776847,-2.923324,-2.044318,-7.787779,0.616740,7.048309,-5.800825,4.537713,8.487244,6.002204,1.963747,-2.081300,0.547001,8.165807,3.392560,0.549559,6.300272,4.616221,-5.639408,7.455324,6.336491,6.845539,1.226625,-9.799903,9.583265,4.340673,6.309009,-7.625422,-0.979205,1.501883,3.186592,-0.399032,-7.999965,-5.322882,-5.186284,1.719516,1.021824,3.665876,5.197392,3.918979,4.618293,8.453853,-0.462536,9.025871,0.832469,-5.050839,-2.797505,2.603230,0.356139,0.432609,-7.600246,3.242408,-8.555929,-8.627122,-2.129870,-7.265678,-2.318241,4.262811,-4.986587,-6.684925,1.678360,-5.799157,1.173027,-2.580497,-5.554708,-7.418217,-4.135116,-5.505128,-2.548605,-0.865477,-4.909998,8.836418,-5.699714,0.433567,6.098628,-7.078679,-8.137471,-6.323626,1.652255,-9.607203,6.015807,-6.883777,8.737785,-0.879282,1.009703,-0.690417,6.070948,2.774390,-6.834659,-0.849663,-6.676202,-7.192100,-8.442370,-4.065954,-7.756235,6.865715,-6.298282,6.259851,-2.974232,3.082650,9.775951,4.521182,5.157144,-5.594752,9.850838,-9.618954,-5.543953,-4.406959,3.809617,-5.828839,-1.967485,5.358317,0.044833,-2.304029,-0.406038,5.463012,3.411820,6.562126,6.044830,5.076281,-6.161243,-6.766176,-1.070651,4.191786,-9.891499,4.612221,9.751182,0.177218,-9.598432,-1.009861,3.252224,-4.637469,-5.615823,-6.997293,1.110146,-4.832191,9.346224,-8.799641,-0.206090,9.202131,7.430585,7.726155,-6.155919,9.917631,-0.220805,1.351786,-8.900246,-6.084484,8.201453,-0.829094,-8.241626,3.030131,-6.575367,-5.623698,9.270925,8.375333,-9.072615,-9.397122,0.846948,3.585816,9.555700,2.134753,-9.003632,1.352984,-6.847455,3.461265,-3.273901,-6.228014,-3.047828,9.345030,9.453275,0.218936,8.731337,-0.296092,5.307595,-2.136667,-5.335255,-7.195303,-5.552613,0.294253,-5.385918,2.149832,4.770439,5.643358,-7.803887,3.007542,2.662467,-0.771814,-5.207379,4.113857,-0.924132,4.036091,9.984509,-5.708942,4.544230,1.483322,-7.415046,-0.601980,-6.232842,4.399812,6.403127,-0.943781,5.695847,8.153069,4.205914,-1.885362,2.064270,3.180863,9.721959,-4.306235,4.266430,-3.791357,-0.914392,7.705734,-6.868335,-9.916340,0.103393,-8.410395,0.386870,8.412371,-2.962343,-0.477758,2.697493,1.473936,8.154883,2.712304,3.351817,-5.102007,-5.925404,-5.700254,0.970891,-4.131059,-1.293342,7.196659,4.672168,-6.727084,-1.926271,3.183458,-4.282982,7.370929,-6.095168,-9.958552,-7.978665,8.065185,-4.144892,-2.526552,-0.273839,7.223932,3.558527,-2.184094,6.160950,3.200819,-2.846953,9.988874,8.682540,-3.996969,1.334807,4.395482,-4.569485,-1.431555,-3.857096,-1.825801,-1.169420,3.424125,-5.347050,-8.628889,5.578661,-0.294569,-0.390027,-2.545920,-7.879167,4.390301,-7.291251,6.459224,4.450950,6.078789,-0.835250,8.270449,7.402530,1.234001,-4.247961,8.960002,4.626563,3.437043,5.636249,6.135494,2.717740,4.400573,1.961200,-6.802648,7.899054,-4.852841,2.260793,-1.770235,4.825442,-7.714254,2.137951,5.224479,8.702963,-9.638672,-4.519916,-4.994563,-2.265313,3.212520,9.672055,-9.907757,-7.799961,-8.307012,-0.009453,-1.845808,-3.104196,-1.385008,3.342100,-8.811113,-6.224447,7.476484,-3.530497,-8.075555,-1.019219,-5.351237,4.887647,-4.876834,-8.266515,1.378518,6.445013,-3.406211,4.728608,4.725672,-7.690267,0.812342,-6.327683,5.795913,1.165491,3.015331,-3.371663,8.634860,-8.206973,4.803571,-1.912507,-8.856384,-3.708896,-6.428340,1.605189,-2.152761,5.330046,-8.658000,4.386598,6.571812,-7.448830,-3.509569,-9.901621,-0.224294,7.150576,6.039342,8.276665,8.680234,-8.137552,8.527544,7.380829,9.832925,1.975464,-7.128512,-8.065129,9.398617,-5.161671,8.872573,3.967913,6.762756,1.583738,9.751511,-3.939113,-6.266146,-6.273276,-3.362183,-4.357651,-4.058844,-7.391440,-2.617659,-4.348397,5.765691,4.131418,-1.007429,-6.501370,3.786635,-3.105592,-4.436981,8.630115,-5.838180,-0.083005,7.547336,-2.303681,0.486092,-8.553539,5.250366,1.488626,9.979546,3.055600,-0.119255,0.211115,0.279109,-8.871455,9.118644,7.842639,0.514811,-8.925744,-8.037704,-0.764092,1.190916,9.143881,-2.845121,4.513919,1.030400,2.507751,3.657187,5.923431,-5.042110,-0.633745,3.356120,8.366779,-6.195621,7.567010,0.689051,-3.202112,-8.160076,7.540398,-3.992009,-5.550378,-1.533476,5.681271,-8.581597,-1.881298,-5.587117,-2.141665,-5.746957,-5.196650,-8.662260,9.145614,-0.302612,-5.438856,7.471253,6.549273,1.116475,9.277674,3.467888,6.045887,8.448779,-7.312897,-0.739793,7.375296,6.178363,1.670887,7.416270,9.015726,-0.203614,-1.565601,8.241723,-6.614562,6.177293,-3.787376,-2.738997,5.249557,-7.353515,-4.994305,-2.944339,7.546370,7.673160,6.777945,-5.867455,-5.410511,7.570628,-5.920566,-2.814379,0.972985,2.359704,-9.886359,2.673637,8.810520,-8.040224,-7.277509,-8.158357,-7.622628,9.914549,-0.673356,-3.984387,-1.784077,-7.927818,-2.319064,4.269994,-3.507672,-9.913100,0.910938,-5.066250,2.979074,-5.313791,-4.933545,5.605345,-5.787923,-0.893802,-2.871720,-0.074053,-6.194673,-0.938253,4.361517,-7.121615,-0.774152,2.833630,-8.008582,-1.627844,-3.976117,-7.658671,8.457537,0.181900,-4.976161,5.599392,-0.796649,5.996797,-4.036195,9.754002,-0.009225,1.808191,-8.562460,-4.168646,2.985966,-6.454624,6.988247,-8.514099,0.278614,-4.485508,1.868455,-4.580204,8.130802,3.518358,9.922591,-5.874783,-6.764736,-6.142321,-9.152015,-8.538081,-8.165884,3.364563,1.612769,-2.644239,3.934598,-2.818081,-8.305773,-3.438900,-1.377523,7.648740,-9.780478,2.950088,-8.056739,-7.859895,-7.191370,-1.481546,9.050650,-8.753728,8.796058,4.129059,-8.468778,9.071052,0.470547,-5.498002,6.257609,8.824533,4.370103,7.565047,4.236566,-2.741404,-5.342173,-2.782482,-6.233808,-6.818663,4.026833,-3.120019,6.110435,8.848487,9.685667,-0.705556,1.936410,9.990047,6.203820,-7.562934,-1.627978,-4.950688,5.607879,-0.647451,-1.232124,8.939143,4.045070,5.460620,-6.171684,1.983502,-9.019603,-0.692322,5.655621,4.814639,-7.759684,4.422251,-1.981282,6.529463,-5.965267,-4.642887,-6.742731,4.542750,8.774882,-8.406920,4.624745,-7.508304,-7.832181,6.156444,-6.027496,-6.088633,6.735045,4.282728,0.797987,3.110255,-0.538918,-8.382073,-4.029408,-3.761027,-1.858249,1.158546,-6.197603,-1.571259,-1.724999,1.939687,-1.773941,-6.554639,8.289713,0.804740,-0.492981,9.097305,-6.738882,-8.912416,4.256809,1.629084,0.316237,1.423620,-9.367418,-7.474762,1.130329,2.974476,7.576846,7.425453,8.306075,-9.704849,-9.620748,-5.924595,2.015435,8.786833,-2.877167,8.240476,4.929745,0.649833,-8.131747,-0.032485,5.785866,9.352143,6.704944,-1.334618,3.005722,0.625836,-1.335133,0.968724,-6.943642,-9.227813,4.060789,-5.010208,-6.137137,-5.474174,-0.741631,-0.654701,-2.317358,-3.798985,9.841064,-8.485638,8.436537,-9.497634,9.877879,-1.502714,-5.681998,-9.432761,-7.475037,-7.920787,1.774642,2.040852,4.288065,1.429073,8.085446,-9.342764,-1.183688,4.360694,-6.700508,5.883722,5.209772,7.169671,-7.909538,5.823239,-8.261363,9.460891,-1.012616,1.682765,7.331410,7.267534,3.202250,3.863996,-5.072830,8.694680,-2.760814,5.578305,-8.350090,9.931002,-3.605744,2.963281,-6.606397,-0.054613,8.123963,-3.147191,5.140628,7.805437,8.394570,-9.990414,-6.652664,-1.955168,4.369143,-2.466600,-7.491034,-2.244335,1.362905,-8.386617,2.023533,-3.914384,-4.081464,9.503953,2.647632,-2.229181,7.793207,-6.153246,6.312785,-4.039918,-5.903262,-2.968434,-9.479602,-9.822512,7.709372,9.203367,9.621614,4.952248,-0.584715,2.062897,-6.288225,9.543479,8.555942,0.298420,-6.471283,9.758014,-4.387221,-1.081708,-1.704634,-7.666606,0.279633,-7.651884,-7.615117,-0.834451,-9.604762,-7.975841,-6.459823,-1.766296,4.588661,-4.442843,0.150299,9.472749,4.636973,-6.888021,-5.850462,3.492805,-9.455627,-0.606379,-6.563158,-9.017759,2.234941,2.873095,-5.258186,9.255374,4.844456,7.914673,4.336174,-7.434287,-9.707683,-7.027460,-0.920055,-0.826664,-2.731506,0.029572,-2.470047,4.101758,-6.620856,5.504710,2.832390,-6.467504,-1.875763,2.896586,-6.539155,-2.393222,5.461065,4.383759,4.596815,-1.923032,1.575093,-5.419795,3.915963,4.953510,-9.621057,-5.213232,1.862643,-1.043207,5.216026,4.072724,0.855524,-3.342818,-3.969581,-9.480607,-7.771740,1.544251,-5.477241,0.807499,-8.831679,9.498157,4.020620,-7.615480,6.734411,-3.036281,-1.447515,-9.136641,9.213775,-8.677514,4.861811,3.954726,-5.713783,0.183380,-8.127851,-8.007814,7.668358,0.729381,-9.242105,9.554035,-0.688839,-1.007326,1.784658,8.947902,4.872930,-8.214049,-0.980440,-3.459760,5.950158,-5.861747,-1.183418,-8.699968,-2.021681,-3.612948,7.353787,-4.045805,7.090267,-8.542365,-4.011762,-3.230219,-4.553151,-9.612665,-0.379506,4.158472,-1.888474,-7.680658,-7.997850,-8.728803,-3.411396,2.213690,-2.510215,-1.358510,-7.631990,-1.445412,-2.572643,8.808620,0.163147,2.822117,-2.089138,9.329003,-8.861532,-3.032628,-6.131890,-9.072116,3.672162,-1.543987,8.638617,-0.731010,-4.345592,-8.198910,2.045178,9.774662,9.061746,-0.341623,9.834584,-2.799443,3.603623,-6.917411,3.129805,9.592234,4.489226,-4.699199,-7.627155,-2.537872,3.788261,6.200193,-4.714773,-8.218913,0.929981,-0.115261,-5.288620,6.187800,9.600574,-4.110554,-8.997680,7.211596,2.717608,-9.025248,-4.422944,-1.093153,-0.122035,-1.104027,-8.369643,-6.428512,-1.360086,-8.528988,-0.547040,-1.431889,-3.066679,-4.713067,-5.218413,-4.608507,-3.639470,7.022115,1.455354,-7.284598,6.256935,5.440207,1.358473,-7.492925,-5.026191,8.404286,-0.097186,-0.718753,-8.223905,4.422463,-0.395606,-8.107560,-3.244728,-9.181408,-9.155209,5.757287,9.043047,1.774125,6.360698,-2.836075,9.541202,-5.154154,-8.986288,-3.406101,9.650673,3.536244,1.982052,-3.516119,-4.276279,7.414689,-4.417957,-9.101898,6.153957,-0.437251,6.372903,-9.091377,-1.360980,-4.437983,7.836435,5.769144,-3.539571,1.427231,8.085385,-7.045546,-1.815153,-0.643164,-2.172210,-2.892050,-3.798105,-0.098674,-4.118038,-0.938303,5.928569,6.726356,2.474559,-4.101712,7.994337,2.711988,8.294859,-7.433860,-7.356467,-6.281383,-2.714614,-4.805208,-1.388840,-9.790918,-0.209679,6.466373,-7.359849,-2.819523,-8.286985,5.435040,-7.366820,-2.814297,-2.150750,5.394108,2.519079,-8.498760,9.677749,-2.293112,4.440489,-9.127652,-8.832772,-6.432482,-9.250269,-5.700965,1.709086,-7.460176,9.724284,9.636522,-7.998711,-7.565503,2.778645,1.330946,4.553705,-0.952812,-7.213062,-0.588043,-7.421521,1.707526,-3.749516,0.983532,-4.074060,2.793993,-5.491004,6.252152,-1.812071,-5.503889,-0.093891,-4.070239,-9.002904,4.974202,0.531254,1.934591,-6.806558,-6.956029,-8.309358,-1.203204,8.978798,-5.908316,-7.405976,-1.049387,9.280855,-2.823645,-0.992390,-7.990318,0.895366,-2.572020,6.628542,2.597769,-4.983934,-9.057349,5.303845,1.268679,0.509611,4.057415,-5.889432,-7.969735,-4.889903,7.219666,6.910825,4.263827,6.319700,9.401226,3.362029,-0.397756,-6.585586,0.338090,7.108185,-0.750167,-1.951362,4.042051,-1.282852,5.922917,-3.869700,8.998608,-3.939348,0.113168,-6.758080,-9.723952,3.196825,-3.699105,-2.374473,4.738313,-1.364127,-6.843827,9.816395,9.084330,1.553372,4.928658,-9.231647,9.141045,9.075070,-4.453290,0.907249,-5.354323,-2.845720,-1.238639,-4.354884,-9.119487,2.850604,5.652118,-0.056262,-5.629535,0.070737,-6.643309,7.872738,-8.212362,-8.572278,-5.194190,-9.483613,-8.552472,9.216007,4.686366,-1.241717,9.730104,-6.045374,4.665294,2.346411,-5.935098,6.018680,-2.993597,-1.726213,2.961347,-6.857243,-8.045654,-6.609703,4.550606,8.853102,4.657907,-9.972559,5.597420,-2.012723,-5.116986,6.611765,-6.763862,4.169050,4.398867,-5.267657,-4.648190,-8.653173,0.907118,6.615637,4.934201,3.463732,-9.480204,4.846289,-6.936861,-1.831505,7.239057,4.892351,-7.991823,2.944287,-8.517959,5.353350,-7.141424,2.503953,-7.900005,-6.789824,3.051610,1.063370,7.975891,4.990139,-0.212013,-2.759551,8.324831,4.289051,-9.586551,3.495834,-9.712316,1.828231,3.073620,-3.825769,0.476208,9.757892,-2.650580,8.649077,4.296953,9.515315,-6.886995,3.170022,4.187585,-7.717452,2.634865,-4.725698,-7.135114,-7.833036,-5.530896,1.209834,1.482534,-2.805985,5.378118,-9.777437,8.369324,-4.247740,0.341869,8.885494,2.954090,2.689550,-7.740423,-3.440088,0.191026,-5.034452,-1.191210,-2.132528,-8.621438,1.469719,-6.940414,-9.941211,-5.443746,0.807998,-2.270459,-7.350306,-1.329390,8.177108,-9.883708,8.349118,-7.425683,3.846907,-4.034824,3.448646,2.081502,-2.701731,-2.603085,8.098256,-6.745781,-1.568586,6.449677,-1.520946,-0.765072,-8.505238,9.770391,8.796410,6.352213,-0.284226,-0.913692,-6.203330,6.880165,5.831855,0.970649,-9.212086,3.273160,1.528243,1.530432,7.517433,2.156878,-0.879647,1.605764,-4.435281,1.576182,-8.129809,-3.243428,7.731737,-5.077952,7.227292,7.637303,7.606011,6.389094,1.007147,-1.283516,-6.969118,9.551859,-7.654347,-6.694293,2.186706,-9.529570,8.388388,1.291413,-6.847969,1.599538,8.694086,4.614341,-3.542494,7.008608,3.755129,-9.099787,0.969394,0.758791,-9.821174,8.767551,9.716103,-0.738526,-7.800597,6.763779,4.860657,3.318620,0.919929,4.541095,2.335057,2.970957,-4.291706,-5.558507,0.278919,5.939520,-2.319954,-9.592829,-4.655927,-8.280308,-4.969985,0.297397,3.702840,-3.031732,2.382001,-6.840581,5.157664,-9.106319,6.689198,4.364119,-6.570053,-0.489866,4.366010,-4.575684,1.682336,7.757112,-5.778108,1.111768,5.719139,-0.871172,4.257843,3.225812,-2.950754,-3.411937,-9.844188,3.252725,8.036345,1.001207,-1.856547,-2.704873,5.783049,4.714272,2.103256,3.226946,-3.263169,9.160820,-6.104551,-8.563326,-0.387041,-2.847977,3.026195,4.107030,0.060520,8.471484,-8.250527,-4.979213,6.094971,2.141017,-4.238093,2.333566,-8.082360,8.709641,0.042105,-1.958892,-4.413126,0.754065,-8.722018,-0.822610,1.468395,4.196770,-2.368456,0.977767,0.283477,-5.183280,2.553611,-9.850387,-2.826508,-1.348860,-3.993439,-5.291459,6.632473,-8.918177,-1.007871,-4.305001,-4.416067,-1.784670,4.911826,9.877428,-3.341905,-0.652303,7.585439,-5.288947,-5.427682,-7.440492,2.360739,-6.446393,-8.177638,-6.838356,0.201957,-4.159658,-9.347705,-1.490191,1.032141,-4.819183,4.778379,0.814282,4.984727,3.304413,4.601067,-8.472486,-0.845976,3.198225,1.171630,0.054720,-2.262068,1.492489,-7.909882,-8.687826,6.182096,-0.699782,-8.643916,4.490045,1.358065,0.956019,-5.356940,5.610226,-4.901789,2.759153,-4.792005,5.495749,7.459519,5.873274,-2.045141,4.732005,-3.118286,0.022556,6.413044,-9.962900,8.054055,8.993010,-7.534327,-9.534407,-8.896354,-8.579214,-4.131991,8.767037,-1.262618,-1.730101,1.924426,-5.620840,6.156998,-7.559613,5.399496,7.569869,-0.945859,-4.225616,8.071393,-6.854852,9.255480,-4.085149,-2.979693,6.985936,-6.108616,2.648392,2.252247,1.887819,3.365486,1.624294,-8.135558,9.641266,-9.981828,5.250639,-7.878477,0.672402,9.541173,-6.782338,9.293337,-0.330951,0.015657,5.936346,-2.933067,6.473856,-7.343249,-5.454724,0.319118,-0.719442,5.333689,5.406020,8.305093,8.886605,-9.191186,-2.585262,8.030833,2.540107,-3.618461,5.574512,7.643627,0.761947,-4.346078,-8.717790,0.580522,9.799677,7.850870,3.980206,1.458088,7.982613,-9.089492,8.055959,-6.770532,-8.479445,-1.892419,8.509508,-4.776933,5.306201,-6.121049,-3.578814,-0.559065,7.027215,-6.227931,-8.797886,9.949588,6.238349,7.906092,-3.839194,0.788015,9.074880,-0.426812,5.905461,7.332562,1.521888,-8.869802,5.218336,7.302269,-3.060977,1.104495,7.269067,-5.155150,-9.989256,-8.701073,-5.326552,7.289749,5.518521,-9.825521,-1.054707,9.462019,-4.170055,7.093282,5.704518,-0.050311,-4.572338,-8.523934,-1.935132,-8.537803,8.087812,8.349711,-7.373164,7.842720,2.090018,-0.272048,9.147590,0.244610,-9.994832,1.027909,-5.810420,4.545242,-3.135884,-1.398466,9.999551,0.136543,6.215538,-5.609345,-2.710922,6.968550,9.261668,0.358910,-7.762354,-4.231201,-2.892584,-2.889843,7.661374,3.352737,9.529451,7.749218,1.739058,4.837655,5.751353,-6.904404,4.713741,0.619000,-9.991372,7.907767,-1.036421,2.574161,-8.065849,7.853861,8.983738,7.670036,-3.405860,7.948529,7.253820,2.725824,-9.247351,-1.552496,6.582535,5.848009,7.738135,-9.011932,-3.027661,-4.579038,2.357963,3.932822,-4.449777,-4.631257,5.720660,-9.228040,-2.667536,4.220967,-6.286987,5.872652,-4.444842,1.846594,6.024055,8.875042,3.260450,-6.788387,8.650484,3.095874,-2.890798,-1.050999,-4.630818,0.497127,-2.089733,6.274316,-2.243661,5.896482,5.501459,-1.437243,-4.835514,2.494108,2.448538,0.388303,1.515289,9.135149,-6.117208,6.336656,-8.357689,6.171986,9.446686,2.421416,7.573130,-3.161384,2.407727,-1.404409,-3.049686,2.333721,5.087493,-4.823927,-4.906724,5.361086,-7.024607,6.160235,8.733918,5.480578,5.288335,-3.540227,7.762361,-7.559567,-9.191467,1.787665,-3.018356,-5.637541,0.050058,-9.979685,-2.448196,-6.452111,-6.927940,-6.748876,-7.057781,-6.758931,-6.460107,9.602256,-5.076395,2.116332,-7.279070,0.375061,1.291466,-4.007600,1.187572,-2.184379,-1.189062,-1.068968,-6.452439,-0.645315,-8.606635,5.279960,-9.475603,5.934482,-0.368008,3.245441,8.561311,8.903701,-3.802268,0.430406,-4.822333,-6.121022,-4.418775,3.779981,3.480147,8.821927,-4.559586,-5.641947,9.243128,7.493017,-9.843227,-2.507115,-2.820883,9.508217,-4.756330,-0.167320,-6.707352,0.212463,8.664421,-3.246635,4.915758,-7.750211,-2.307157,-3.137166,-9.766398,4.221072,-1.685850,-8.411755,0.614341,9.315547,-1.254595,-5.039220,-7.307638,7.140558,-7.122603,-8.140015,-8.940110,1.054548,-8.140688,-5.887219,-0.268053,6.947308,-8.697265,5.375160,1.403973,7.053282,-8.430469,6.569407,3.302374,-9.910435,-1.679082,7.634271,1.040211,2.893225,-0.325645,8.286779,0.444904,4.766889,-1.446567,7.902873,-4.690233,-7.059242,-1.371452,6.891014,-2.393762,4.029291,7.746887,5.292148,5.348458,-3.341659,0.648525,-3.335555,-3.868479,-7.114430,-9.260470,9.607097,-3.977926,1.269379,4.186285,-8.613183,-7.618043,-0.542891,4.014289,3.626654,-9.986739,-1.372183,9.279927,-8.464883,7.578602,-3.849354,-9.649417,-2.585530,7.500166,2.407636,-5.648895,0.655255,4.264545,-9.274986,1.039940,0.092687,4.162396,9.116079,2.782731,6.586142,-7.230803,-4.503308,4.788808,3.529445,5.581423,4.473932,0.190193,-2.001074,-4.552983,1.180696,-8.700714,4.157948,-7.362651,-8.702513,-3.832950,-6.166144,-2.648435,0.507944,4.855339,-1.778618,1.943500,2.041275,-4.173196,5.800184,-5.236704,6.109956,6.656023,6.827426,3.495546,7.102994,1.565667,1.906534,5.917639,7.225069,3.730791,6.327203,1.654392,1.854752,-8.029084,-8.477016,1.680403,-0.526417,-7.429974,1.737340,2.584532,5.454162,-5.191903,-5.316430,4.752907,0.258746,-8.858626,2.505223,7.707827,8.476262,0.559427,-0.950530,6.105831,8.428165,-1.543649,-6.027731,-6.772472,-3.264478,-9.141623,-1.330858,-3.471544,-0.450713,-9.228511,-8.509236,9.036775,2.470561,4.628270,6.490393,-9.017590,-8.979645,0.820598,2.717197,-6.456544,7.955299,-9.845992,-8.672438,4.192573,2.078275,-8.061386,4.521160,-9.591658,-2.067230,-7.717716,-7.858008,8.186244,-5.024959,0.878636,-4.063750,8.752235,-1.732334,1.364083,6.224761,-6.150041,-7.200343,-2.248323,-6.796586,-5.824425,4.425384,-6.488076,-4.627978,-0.850128,9.758398,-2.059663,-0.091210,1.261344,1.899236,6.711127,7.174199,-1.904795,6.282668,1.453474,9.504612,-4.234265,-0.242011,-4.566773,-2.742900,8.311473,1.177818,3.786560,-2.574920,-8.276462,5.650428,-6.871610,9.463057,-4.265685,5.242941,-0.245526,-0.284132,1.919869,-4.501633,3.396696,1.964396,-4.162934,-4.077843,-1.918254,-8.571374,-9.314065,-4.684525,-4.489939,1.102550,-3.818722,-8.949246,3.061926,-1.144246,8.995710,6.952649,3.726981,-8.984290,9.167231,-5.722080,8.437742,-1.270983,-7.007209,-8.222637,3.878254,-7.056116,-7.114462,-4.390099,7.725427,4.108934,2.190281,2.305537,6.599514,-2.693319,-6.167632,-4.251597,1.861078,1.858414,2.166004,-9.620085,-8.356714,8.890159,4.231596,-6.818598,-7.275247,-7.692665,-0.524258,-4.579302,0.382157,-8.223446,1.332945,0.131893,-5.131614,3.697695,-0.345688,-0.196203,-1.971900,6.608419,2.577524,-2.770066,5.889537,-2.300344,-1.805492,9.523409,8.836313,3.466508,-9.941129,-1.998697,2.212343,4.404896,0.401956,-8.252213,5.146301,-6.849059,-0.078245,-4.535588,7.071488,6.359816,3.279848,8.479729,2.211293,-8.354804,1.131626,-3.496990,-4.563262,-5.823178,5.918555,5.213896,-9.414031,3.004793,-8.082256,9.633664,-0.610141,7.639706,7.349316,7.010470,3.383671,3.758713,-0.366147,2.046131,3.791803,-4.223570,0.279279,7.120019,8.784389,-2.825107,-1.025676,8.569626,-8.598278,-5.907222,5.369188,-0.009629,7.078272,3.521675,8.524744,-6.635888,-6.036428,3.424955,-6.984348,-4.633118,-4.512370,8.755472,-7.642208,8.310739,3.578551,-8.513295,6.824122,9.912185,-9.222145,-9.015436,-8.448714,-5.358984,-4.947908,-6.828578,-7.508919,-6.784471,3.034237,5.512868,5.773704,-4.877915,2.303695,6.458890,-7.596520,2.134804,-8.214250,-6.559501,7.364061,3.997684,1.523823,-0.629744,-6.866265,-6.772953,9.162745,7.670092,-7.161391,3.221519,7.841588,5.350729,-9.318149,-6.295718,-1.638777,9.143897,-6.713340,4.745064,-1.319256,3.717375,5.988588,-1.364229,-2.062437,9.068930,3.516585,-8.442001,6.660872,-8.358348,-9.862726,-1.072146,-0.366999,-6.877423,4.488783,-3.282472,-1.706408,-1.375303,3.246300,-9.697176,1.169162,-7.447736,-4.578142,8.048742,-6.713833,3.814077,-6.377889,-2.675208,1.625463,9.664204,-0.489822,-7.360153,-9.628018,-7.465097,8.350564,3.049543,-2.775714,-7.761841,-9.489575,3.650379,7.203433,4.836003,-2.963487,-3.882349,9.358851,-0.949155,6.312046,-1.456767,-7.670228,4.938499,4.466815,-3.390550,6.208684,-2.951357,-8.102012,-7.863678,5.066143,8.557587,6.897584,8.635517,-8.682851,3.357894,3.019943,4.779881,-6.375194,8.007040,4.151147,-2.035519,-7.677589,-5.208474,-9.128095,2.949359,-4.296306,2.856220,-7.000179,-1.269919,6.267350,4.168039,3.385883,-2.458261,0.333828,1.765185,6.021929,6.902266,0.620431,-8.609893,9.260930,9.452021,-0.103135,4.923887,3.389944,4.521423,5.881849,0.018734,9.053919,9.303616,-8.489791,6.401394,-7.815398,4.140713,-5.926496,9.787342,9.161340,-1.285495,1.427023,2.384653,2.260966,6.678484,5.070516,-0.773689,-8.913973,6.853462,-4.788065,-4.547075,-5.102974,-3.570947,9.845583,-2.247331,-1.993828,7.119574,-8.157272,7.226758,8.179066,7.912540,9.392413,-4.348016,9.639520,-3.375752,-3.553647,-4.959203,6.171228,-9.950984,-0.051943,6.163943,8.224832,-4.552855,8.490320,1.826212,3.426995,0.844935,-6.445322,-8.975694,-4.103892,-3.250304,-7.377680,2.181822,8.553088,-6.738893,-6.674220,0.030020,-0.510494,8.821267,7.899583,0.129489,6.009284,3.608170,-3.610504,5.824310,9.985899,6.984986,-5.126644,2.786074,-8.110181,2.228529,2.456414,-8.836311,2.404519,-4.291134,7.052979,6.693386,-9.956523,-5.039567,-0.494882,5.879906,4.704462,2.452648,8.688773,-4.850176,3.402871,-0.438024,-2.113971,-9.443213,1.077604,-4.310930,-7.186319,4.993628,-5.319931,0.438904,-1.213152,-7.837346,-3.283058,9.824343,-5.120047,3.157315,-0.201708,0.473015,1.689560,-3.822897,-2.479806,9.393486,-6.427522,9.321656,-9.772662,5.734853,-1.937862,1.850517,-8.161741,-2.615318,-7.867409,-7.862395,-5.965759,7.350369,1.115598,-9.112980,-7.151576,3.740872,-5.630444,0.993211,5.440779,9.240621,6.236506,-1.768839,-7.302531,-7.477515,1.595296,1.672905,-9.724275,1.959092,-6.670511,4.114858,8.861256,9.331546,-0.242054,-8.217184,4.882041,9.058066,-3.291364,-7.553230,-9.977903,8.011562,4.294807,7.428657,2.323360,-0.955908,-2.507498,-2.359282,-1.352891,-4.572875,9.388334,-0.090563,-9.997391,8.545444,-0.147897,5.278660,-7.394677,-8.318958,0.087515,-6.576927,-0.333414,-4.860450,-9.045758,-3.880558,-3.882790,4.906206,0.906716,1.495036,2.367359,5.568213,-0.822857,3.646894,7.480875,6.996761,3.752023,-7.643384,-8.062455,3.655135,7.615950,8.798533,-0.343661,0.808145,-5.982520,9.223826,3.783808,3.913024,-9.580328,4.313337,-7.504156,-7.768570,-0.332944,7.897425,-6.409644,8.332827,-0.023637,0.885910,-2.458100,9.035182,5.489137,-6.365707,7.901371,7.354727,-1.376779,2.523529,9.638201,7.257445,-3.258088,-4.529415,2.736791,8.475242,-2.114192,-8.628332,3.980607,8.822103,-8.449783,-9.766831,-9.548109,1.063542,-2.581247,8.265146,5.017852,8.536625,-1.923020,-4.842497,2.816411,4.091185,-3.545091,-8.169317,9.273528,3.993658,-5.850775,1.054064,5.156323,7.405489,-0.592606,8.532796,2.067597,9.009231,-5.488052,6.958327,9.493218], dtype = "float32")#candidate|8633|(2912,)|const|float32
call_8632 = relay.TupleGetItem(func_8269_call(relay.reshape(const_8633.astype('float32'), [13, 16, 14])), 1)
call_8634 = relay.TupleGetItem(func_8272_call(relay.reshape(const_8633.astype('float32'), [13, 16, 14])), 1)
var_8642 = relay.var("var_8642", dtype = "float64", shape = (11, 7, 16))#candidate|8642|(11, 7, 16)|var|float64
bop_8643 = relay.right_shift(call_8625.astype('uint8'), relay.reshape(var_8642.astype('uint8'), relay.shape_of(call_8625))) # shape=(11, 7, 16)
bop_8646 = relay.right_shift(call_8626.astype('uint8'), relay.reshape(var_8642.astype('uint8'), relay.shape_of(call_8626))) # shape=(11, 7, 16)
func_1156_call = mod.get_global_var('func_1156')
func_1160_call = mutated_mod.get_global_var('func_1160')
var_8656 = relay.var("var_8656", dtype = "float32", shape = (154,))#candidate|8656|(154,)|var|float32
call_8655 = relay.TupleGetItem(func_1156_call(relay.reshape(var_8656.astype('float32'), [11, 7, 2]), relay.reshape(var_8656.astype('uint64'), [11, 7, 2]), ), 0)
call_8657 = relay.TupleGetItem(func_1160_call(relay.reshape(var_8656.astype('float32'), [11, 7, 2]), relay.reshape(var_8656.astype('uint64'), [11, 7, 2]), ), 0)
func_4656_call = mod.get_global_var('func_4656')
func_4658_call = mutated_mod.get_global_var('func_4658')
call_8681 = func_4656_call()
call_8682 = func_4656_call()
func_7367_call = mod.get_global_var('func_7367')
func_7368_call = mutated_mod.get_global_var('func_7368')
call_8684 = func_7367_call()
call_8685 = func_7367_call()
const_8710 = relay.const([[[False,False,False,False,False,False,True,True,True,True,False,False,False,True],[True,True,True,False,True,True,False,True,False,True,False,True,True,True],[False,True,True,False,True,True,True,True,True,False,True,False,True,True],[False,False,False,False,True,True,False,False,False,True,True,False,False,False],[True,False,True,True,True,False,True,False,True,False,False,False,True,True],[False,False,False,True,False,False,True,False,True,True,False,True,False,False],[True,True,False,False,True,True,True,False,True,False,False,False,True,False],[False,False,True,False,False,True,True,True,True,False,True,False,False,True],[True,False,True,False,True,True,False,False,False,True,False,True,False,True],[True,True,True,True,True,True,False,True,False,True,False,False,False,True],[False,False,True,False,False,False,False,False,False,True,False,False,False,True],[False,False,False,True,True,True,True,False,False,True,False,True,False,False],[True,False,False,True,False,True,True,True,True,False,True,True,True,True],[False,True,False,False,False,False,True,True,False,False,False,False,True,False],[True,False,False,False,False,False,False,True,True,True,False,True,True,True],[False,False,False,False,False,True,False,False,True,False,True,True,False,True]],[[False,False,True,True,False,False,False,False,False,False,True,False,True,True],[True,True,False,True,True,True,False,True,False,False,True,True,False,True],[True,True,False,True,True,False,False,True,False,False,True,False,False,True],[False,False,False,True,True,True,True,False,False,True,False,False,True,True],[True,False,False,False,True,True,True,False,True,False,True,True,False,False],[True,True,True,False,True,False,True,False,True,False,False,True,True,False],[True,True,False,False,True,False,True,False,True,False,False,False,False,True],[True,True,True,True,False,True,True,True,True,False,True,False,True,True],[True,False,False,False,True,False,False,False,False,True,False,False,False,False],[False,False,True,False,True,True,True,True,False,False,False,True,False,True],[True,True,True,False,False,True,False,True,True,False,False,True,False,False],[True,False,True,False,False,False,False,False,True,True,True,True,True,False],[False,True,True,True,True,False,True,True,True,True,False,False,False,False],[False,False,True,True,False,False,True,False,False,True,False,False,False,False],[True,True,False,False,True,True,True,False,False,True,True,True,False,True],[False,False,False,False,False,True,True,False,True,True,True,True,False,True]],[[True,True,True,True,False,True,True,True,True,False,True,True,True,False],[False,False,False,False,False,False,False,True,True,False,True,False,True,False],[True,True,False,True,False,True,False,True,True,True,False,False,True,False],[True,True,False,True,True,False,False,True,False,False,False,True,False,False],[True,True,False,True,True,False,False,True,False,False,False,True,True,True],[True,False,True,False,True,True,True,False,False,True,False,False,False,False],[False,False,False,True,False,True,False,True,True,False,False,True,False,True],[False,True,False,True,False,True,True,True,False,True,False,False,False,False],[True,False,False,True,True,True,False,True,False,True,False,True,True,False],[True,False,True,True,True,True,True,True,False,False,True,True,True,True],[True,False,True,False,False,True,True,True,False,False,False,False,True,False],[False,False,True,True,False,False,False,False,False,True,True,False,False,False],[True,True,True,True,True,False,True,False,False,True,True,False,True,False],[True,False,False,True,False,True,False,True,False,False,True,False,False,False],[False,False,True,False,True,False,True,True,True,False,True,True,True,False],[True,False,False,False,False,True,True,True,False,True,False,False,False,True]],[[False,False,True,True,False,False,True,True,True,False,False,False,False,True],[True,False,False,False,False,False,True,True,True,False,False,False,False,False],[False,False,True,True,False,False,False,False,True,True,True,False,True,False],[False,True,True,True,True,True,True,False,False,False,True,True,True,True],[True,True,True,False,True,False,True,True,False,True,True,True,False,False],[True,True,False,True,False,False,False,False,True,False,False,True,False,True],[True,True,False,False,False,True,False,True,True,True,False,True,False,True],[True,False,False,False,True,False,False,False,False,False,False,False,False,False],[True,True,True,False,False,True,True,True,False,True,False,True,True,True],[False,True,False,True,False,False,False,True,True,False,True,True,False,True],[True,True,True,True,False,False,True,False,True,False,True,True,False,False],[False,True,True,True,False,True,False,False,False,False,False,True,False,True],[False,True,True,False,False,False,True,False,True,False,False,False,True,False],[False,True,False,False,False,True,True,False,False,False,True,False,False,True],[True,True,False,False,False,True,False,False,False,True,False,True,True,False],[True,False,False,True,True,False,False,True,True,True,False,False,True,True]],[[False,False,False,False,True,False,False,True,False,False,True,False,True,True],[True,False,True,False,True,False,False,False,False,False,False,False,True,False],[False,True,True,False,True,True,False,False,True,False,True,True,False,False],[True,True,True,False,False,False,True,True,False,True,True,True,True,True],[True,False,True,True,True,False,True,False,True,False,False,True,False,True],[False,True,True,False,False,False,False,False,True,True,True,True,False,True],[False,True,False,True,False,False,False,True,False,False,False,False,False,False],[True,False,False,True,True,True,True,False,False,False,False,True,True,False],[False,False,True,True,True,True,False,True,True,True,True,False,True,True],[False,True,True,True,True,True,False,True,True,False,True,True,False,True],[False,True,True,False,True,False,True,True,False,False,False,True,True,True],[True,False,False,True,True,False,False,False,True,True,True,False,True,False],[True,True,False,True,False,True,False,False,False,True,True,False,True,True],[True,False,True,True,False,True,False,True,True,True,False,True,False,True],[True,True,False,True,False,False,False,False,True,False,False,True,False,True],[True,True,True,True,False,False,False,False,True,False,False,True,True,False]],[[False,True,True,True,False,True,False,False,True,True,True,True,True,True],[False,True,True,False,True,False,True,True,False,True,True,True,True,True],[False,True,True,False,False,True,False,True,False,False,True,False,True,False],[True,True,False,True,False,True,True,True,True,False,False,True,True,False],[False,True,True,True,False,True,True,False,False,True,True,False,False,True],[False,True,True,True,False,True,True,True,False,False,False,True,True,True],[False,False,True,True,True,False,False,True,True,True,False,True,True,True],[False,True,False,False,False,False,False,True,True,True,False,False,True,False],[True,False,True,False,True,False,True,False,True,True,False,False,False,False],[False,True,True,False,False,False,False,True,False,False,False,True,True,False],[True,True,False,True,True,False,True,False,False,False,True,True,True,True],[False,True,True,False,True,False,False,True,False,False,False,False,True,False],[False,False,False,True,True,True,False,True,True,True,True,True,True,False],[True,False,True,True,False,False,True,True,True,True,False,True,True,True],[False,False,True,False,True,False,True,False,True,False,True,False,True,True],[True,True,True,False,True,True,True,True,True,False,False,False,True,True]],[[False,True,False,False,True,True,False,False,True,True,True,False,True,False],[False,True,True,False,False,True,False,True,False,False,True,True,False,True],[False,False,False,False,True,False,False,False,False,False,True,True,True,False],[False,True,False,False,False,False,False,False,True,True,True,True,True,False],[False,True,False,False,True,False,False,False,True,False,True,True,False,False],[False,False,False,False,True,False,True,True,False,True,True,True,False,False],[False,True,True,True,True,True,True,False,True,False,True,False,False,False],[True,True,False,False,True,False,False,False,False,True,True,True,True,False],[False,True,False,True,True,True,False,False,False,True,False,False,True,True],[False,False,True,False,True,True,False,False,True,False,False,False,False,True],[True,True,True,True,False,True,False,True,True,False,True,True,False,False],[True,True,True,False,True,True,False,False,False,False,False,False,False,False],[False,False,True,True,True,False,False,False,False,True,True,True,True,True],[False,True,True,False,True,False,False,False,True,False,True,False,False,True],[False,False,False,False,True,True,True,False,False,True,False,False,False,False],[True,False,True,True,True,False,True,False,False,True,True,False,True,False]],[[False,True,True,False,False,True,False,True,True,True,True,True,False,False],[True,True,False,False,True,True,True,False,True,True,True,True,False,False],[True,False,False,True,True,True,True,True,True,True,False,False,False,False],[True,True,False,False,False,False,False,True,True,True,True,False,False,False],[True,True,False,True,True,False,False,False,False,False,False,True,True,False],[True,False,False,False,True,False,False,True,False,False,False,True,True,True],[True,False,False,True,True,False,False,False,True,False,False,True,False,False],[False,False,True,True,False,True,True,True,False,True,False,False,True,False],[False,False,True,True,False,True,False,True,False,False,True,True,True,False],[False,True,False,False,True,True,True,True,True,False,False,True,True,False],[True,False,False,True,False,False,True,True,True,True,False,True,False,False],[False,True,False,False,False,False,False,False,False,True,True,True,True,False],[False,False,False,True,False,True,True,True,True,False,False,False,True,False],[False,True,False,False,False,False,True,True,True,True,True,True,True,False],[False,False,False,False,True,True,True,True,False,False,False,True,False,False],[True,False,True,True,True,True,False,False,False,True,True,True,False,False]],[[False,True,False,False,False,True,False,True,False,True,False,False,False,True],[True,False,True,False,False,False,False,False,False,False,False,False,True,True],[True,True,True,True,True,True,True,True,False,True,False,False,False,False],[False,False,True,True,True,True,False,True,True,False,True,True,False,True],[True,True,False,False,False,True,True,True,True,False,False,True,True,False],[False,False,True,False,False,False,False,True,True,False,True,True,False,False],[False,False,False,False,True,False,False,True,False,False,True,True,False,True],[False,False,False,False,False,True,True,False,True,True,False,True,True,True],[False,True,True,False,True,True,False,False,False,True,True,False,True,False],[True,True,False,True,True,False,False,True,True,True,False,False,False,False],[True,True,True,True,False,False,False,True,False,False,True,False,True,False],[False,False,True,True,False,True,False,True,True,False,True,False,True,True],[False,True,True,False,False,False,True,False,False,True,True,False,False,False],[False,True,True,False,False,False,True,False,True,False,True,False,False,False],[False,False,True,False,True,False,False,False,False,False,False,True,True,False],[True,True,False,False,True,True,False,True,True,False,True,False,False,False]],[[False,False,True,False,False,False,True,False,True,True,False,True,True,False],[False,True,False,False,False,True,False,True,False,False,False,False,False,True],[False,False,False,True,True,True,True,True,True,False,True,False,False,True],[False,True,False,False,False,False,False,True,True,False,False,False,True,True],[False,True,False,False,False,False,True,True,True,True,False,True,True,False],[True,True,True,True,True,True,False,True,False,False,False,True,True,True],[True,False,False,True,True,False,False,True,True,True,False,False,False,True],[True,False,True,True,True,False,False,False,False,False,False,False,True,False],[True,False,True,True,False,True,False,True,False,False,True,True,False,True],[True,False,False,True,False,True,False,False,False,False,False,False,True,False],[False,False,True,True,False,False,False,False,False,True,True,False,True,False],[True,True,False,False,False,False,True,False,False,True,False,False,False,True],[False,True,True,False,True,False,True,True,True,False,True,True,True,False],[True,False,True,False,False,True,False,False,True,False,False,True,True,True],[True,True,False,True,False,True,True,True,False,True,False,True,True,True],[False,False,False,True,False,True,True,False,False,True,False,True,True,True]],[[True,True,False,False,False,False,False,True,True,True,False,True,False,True],[False,True,False,False,True,False,True,False,True,False,False,True,False,True],[True,True,False,False,False,False,False,True,False,False,False,True,False,False],[True,False,True,True,False,False,False,True,False,True,True,False,False,False],[True,False,True,False,True,True,False,False,True,True,True,True,True,True],[False,True,True,True,False,True,True,False,True,True,True,True,False,True],[True,False,True,True,False,False,True,False,True,False,False,False,True,True],[True,False,False,True,False,True,True,False,False,False,False,True,True,True],[True,True,False,False,False,True,True,False,True,True,False,False,True,False],[False,False,True,True,False,True,True,False,True,False,False,True,False,False],[True,True,False,False,False,False,False,False,False,False,True,True,True,True],[False,False,False,False,False,True,False,False,True,True,True,False,True,True],[True,True,False,False,False,False,False,False,False,True,True,False,True,False],[False,False,True,False,False,True,False,False,True,False,False,False,True,True],[False,False,True,True,True,True,False,True,True,False,False,True,True,True],[False,False,True,False,False,False,False,False,False,False,False,True,True,True]],[[True,False,False,True,True,True,False,False,False,False,False,True,True,False],[True,False,True,True,True,False,True,True,False,True,False,False,True,False],[True,False,True,False,True,False,True,False,True,False,False,False,False,False],[True,True,False,False,False,True,True,True,True,False,False,False,True,False],[False,True,True,False,True,False,False,False,False,False,False,False,False,True],[False,False,True,True,False,False,False,False,True,True,True,True,False,True],[True,True,False,True,False,True,True,False,True,False,False,False,False,True],[False,False,False,False,False,True,True,False,True,True,False,True,True,True],[False,True,True,True,False,True,False,True,False,False,True,True,False,True],[True,False,False,True,False,False,True,False,False,True,True,True,False,True],[False,True,True,False,False,False,True,True,True,False,False,True,False,True],[False,False,False,False,False,True,True,False,True,True,False,True,False,True],[True,False,True,True,False,False,False,False,False,True,True,True,True,True],[False,True,False,False,True,True,False,True,False,False,True,True,True,False],[True,True,True,False,True,False,True,True,False,True,False,False,True,True],[True,False,True,True,False,True,False,True,False,False,True,False,False,False]],[[False,True,False,True,False,False,True,False,False,False,True,True,False,True],[True,True,True,True,True,False,False,True,True,False,True,False,True,False],[False,True,False,False,True,True,True,True,True,False,True,True,True,True],[False,True,False,False,False,True,True,True,True,True,True,True,False,False],[True,True,False,True,False,False,False,True,True,True,True,False,False,False],[False,True,True,False,False,False,False,False,True,True,True,True,True,False],[False,True,False,True,False,False,False,False,True,False,False,False,False,True],[True,False,True,True,True,True,True,True,True,False,True,False,True,False],[True,False,True,True,True,True,False,True,False,True,False,True,True,False],[True,True,True,False,True,False,True,False,True,True,True,False,True,False],[True,False,True,False,True,False,False,False,True,False,False,True,True,False],[False,True,False,False,False,True,False,False,True,False,False,True,True,False],[True,False,False,False,False,True,True,True,True,True,False,True,True,False],[False,True,False,True,False,False,True,False,True,True,False,False,True,True],[True,False,True,True,False,True,True,True,True,False,False,False,True,False],[True,True,False,False,False,False,True,False,False,False,False,True,True,True]]], dtype = "bool")#candidate|8710|(13, 16, 14)|const|bool
bop_8711 = relay.logical_xor(call_8632.astype('int8'), relay.reshape(const_8710.astype('int8'), relay.shape_of(call_8632))) # shape=(13, 16, 14)
bop_8714 = relay.logical_xor(call_8634.astype('int8'), relay.reshape(const_8710.astype('int8'), relay.shape_of(call_8634))) # shape=(13, 16, 14)
output = relay.Tuple([const_8633,bop_8643,call_8655,var_8656,call_8681,call_8684,bop_8711,])
output2 = relay.Tuple([const_8633,bop_8646,call_8657,var_8656,call_8682,call_8685,bop_8714,])
F = relay.Function([var_8642,var_8656,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_8642,var_8656,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
	relay.transform.Inline(),
	relay.transform.LambdaLift(),
	relay.transform.LazyGradientInit(),
	relay.transform.PartialEvaluate(),
	relay.transform.Legalize(),
	relay.transform.FoldConstant(),
	relay.transform.ToANormalForm(),
	relay.transform.ToGraphNormalForm(),
	relay.transform.SimplifyInference(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')

==========mod==========
#[version = "0.0.5"]
def @func_6781() -> Tensor[(7, 10, 2), float64] {
  %0 = @func_5818() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %0.0
}

def @func_2635() -> Tensor[(4, 8, 9), float64] {
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
  %2 = atanh(%1) /* ty=Tensor[(4, 8, 9), float32] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(4, 8, 9), float32] */, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %4 = shape_of(%2, dtype="int32") /* ty=Tensor[(3), int32] */;
  %5 = cast(%2, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
  %6 = dyn.reshape(%3, %4, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_mod(%5, %6) /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_1552() -> (Tensor[(7, 10, 2), float64],) {
  %7 = @func_1507() /* ty=Tensor[(7, 10, 2), float64] */;
  (%7,)
}

def @func_7828() -> (Tensor[(7, 10, 2), float64],) {
  %8 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  (%8,)
}

def @func_1646() -> (Tensor[(7, 10, 2), float64],) {
  %9 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %10 = %9.0;
  (%10,)
}

def @func_1409() -> (Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %11 = @func_759() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %12 = %11.0;
  %13 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 10, 2), float64] */, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %14 = shape_of(%12, dtype="int32") /* ty=Tensor[(3), int32] */;
  %15 = cast(%12, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %16 = dyn.reshape(%13, %14, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %17 = cast(meta[relay.Constant][1] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %18 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %19 = greater_equal(%15, %16) /* ty=Tensor[(7, 10, 2), bool] */;
  %20 = acosh(%17) /* ty=Tensor[(7, 10, 2), float64] */;
  %21 = %18.0;
  (%19, %20, %21)
}

def @func_2836() -> Tensor[(7, 10, 2), float64] {
  %22 = @func_1986() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool]) */;
  %22.2
}

def @func_5786(%var_5780: Tensor[(7, 10, 2), float64]) -> Tensor[(7, 10, 2), bool] {
  %23 = @func_5339() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(512), int64]) */;
  %24 = %23.0;
  %25 = cast(%var_5780, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %26 = shape_of(%24, dtype="int32") /* ty=Tensor[(3), int32] */;
  %27 = cast(%24, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %28 = dyn.reshape(%25, %26, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  logical_or(%27, %28) /* ty=Tensor[(7, 10, 2), bool] */
}

def @func_7263() -> (Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  %29 = @func_1629() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %30 = cast(meta[relay.Constant][2] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %31 = reshape(%30, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
  %32 = cast(meta[relay.Constant][2] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %33 = %29.0;
  %34 = @func_459(%31) /* ty=Tensor[(?, 4, 11), bool] */;
  %35 = acosh(%32) /* ty=Tensor[(44), float64] */;
  (%33, %34, %35)
}

def @func_3779() -> (Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) {
  %36 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
  %37 = cast(meta[relay.Constant][3] /* ty=Tensor[(35), uint8] */, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %38 = cast(meta[relay.Constant][3] /* ty=Tensor[(35), uint8] */, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %39 = cast(meta[relay.Constant][4] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %40 = reshape(%37, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %41 = reshape(%38, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %42 = reshape(%39, newshape=[11, 4]) /* ty=Tensor[(11, 4), float64] */;
  %43 = @func_828(%40, %41, %42) /* ty=(Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) */;
  %44 = %36.1;
  %45 = @func_2836() /* ty=Tensor[(7, 10, 2), float64] */;
  %46 = %43.1;
  %47 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
  (%44, %45, %46, meta[relay.Constant][3] /* ty=Tensor[(35), uint8] */, meta[relay.Constant][4] /* ty=Tensor[(44), float64] */, %47)
}

def @func_1416() -> Tensor[(7, 10, 2), float64] {
  @func_196() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_3865() -> Tensor[(7, 10, 2), float64] {
  @func_1416() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_4426(%var_4391: Tensor[(14, 3, 13), float32], %var_4403: Tensor[(105), float64]) -> (Tensor[(14, 7, 15), float64], Tensor[(105), float64], Tensor[(14, 3, 13), int8]) {
  %48 = cast(%var_4403, dtype="float64") /* ty=Tensor[(105), float64] */;
  %49 = reshape(%48, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %50 = @func_4100(%49) /* ty=(Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) */;
  %51 = cast(%var_4391, dtype="float32") /* ty=Tensor[(14, 3, 13), float32] */;
  %52 = erf(%51) /* ty=Tensor[(14, 3, 13), float32] */;
  %53 = cast(%52, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
  %54 = shape_of(%var_4391, dtype="int32") /* ty=Tensor[(3), int32] */;
  %55 = cast(%var_4391, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
  %56 = dyn.reshape(%53, %54, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %57 = greater(%55, %56) /* ty=Tensor[(14, 3, 13), bool] */;
  %58 = cast(%52, dtype="int8") /* ty=Tensor[(14, 3, 13), int8] */;
  %59 = shape_of(%57, dtype="int32") /* ty=Tensor[(3), int32] */;
  %60 = cast(%57, dtype="int8") /* ty=Tensor[(14, 3, 13), int8] */;
  %61 = dyn.reshape(%58, %59, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %62 = %50.1;
  %63 = bitwise_and(%60, %61) /* ty=Tensor[(14, 3, 13), int8] */;
  (%62, %var_4403, %63)
}

def @func_3842() -> (Tensor[(7, 10, 2), float64],) {
  %64 = @func_2160() /* ty=Tensor[(7, 10, 2), float64] */;
  (%64,)
}

def @func_1272(%var_1252: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) {
  %65 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 5), uint8] */, dtype="uint8") /* ty=Tensor[(7, 5), uint8] */;
  %66 = cast(meta[relay.Constant][5] /* ty=Tensor[(7, 5), uint8] */, dtype="uint8") /* ty=Tensor[(7, 5), uint8] */;
  %67 = cast(%var_1252, dtype="float64") /* ty=Tensor[(44), float64] */;
  %68 = reshape(%65, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %69 = reshape(%66, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %70 = reshape(%67, newshape=[11, 4]) /* ty=Tensor[(11, 4), float64] */;
  %71 = @func_828(%68, %69, %70) /* ty=(Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) */;
  %72 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
  %73 = cast(%72, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %74 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %75 = %71.2;
  %76 = asin(%73) /* ty=Tensor[(7, 10, 2), float32] */;
  (%74, %75, meta[relay.Constant][5] /* ty=Tensor[(7, 5), uint8] */, %var_1252, %76)
}

def @func_2657(%var_2647: Tensor[(15, 6, 7), bool], %var_2648: Tensor[(15, 6, 7), bool]) -> (Tensor[(15, 6, 7), bool],) {
  %77 = cast(%var_2648, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
  %78 = shape_of(%var_2647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %79 = cast(%var_2647, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
  %80 = dyn.reshape(%77, %78, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %81 = logical_or(%79, %80) /* ty=Tensor[(15, 6, 7), bool] */;
  (%81,)
}

def @func_4995() -> (Tensor[(4, 15, 9), float64],) {
  %82 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
  %83 = %82.1;
  (%83,)
}

def @func_3291() -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) {
  %84 = @func_2198() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %85 = %84.0;
  %86 = cast(%85, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %87 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %88 = tan(%86) /* ty=Tensor[(7, 10, 2), float32] */;
  %89 = %87.0;
  (%88, %89)
}

def @func_4194() -> (Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(15, 6, 7), bool], Tensor[(630), bool]) {
  %90 = @func_4120() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %91 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %92 = @func_2552() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %93 = cast(meta[relay.Constant][6] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %94 = cast(meta[relay.Constant][6] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
  %95 = reshape(%93, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
  %96 = reshape(%94, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
  %97 = @func_2657(%95, %96) /* ty=(Tensor[(15, 6, 7), bool],) */;
  %98 = %90.0;
  %99 = %91.0;
  %100 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
  %101 = %92.0;
  %102 = %97.0;
  (%98, %99, %100, %101, %102, meta[relay.Constant][6] /* ty=Tensor[(630), bool] */)
}

def @func_5545() -> (Tensor[(7, 10, 2), float64],) {
  %103 = @func_2160() /* ty=Tensor[(7, 10, 2), float64] */;
  (%103,)
}

def @func_1639() -> (Tensor[(7, 10, 2), bool],) {
  %104 = @func_1409() /* ty=(Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %105 = %104.0;
  (%105,)
}

def @func_6130(%var_6117: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), uint16],) {
  %106 = cast(%var_6117, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %107 = rsqrt(%106) /* ty=Tensor[(9, 12, 13), float64] */;
  %108 = cast(%107, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %109 = tan(%108) /* ty=Tensor[(9, 12, 13), float64] */;
  %110 = cast(%107, dtype="uint16") /* ty=Tensor[(9, 12, 13), uint16] */;
  %111 = shape_of(%109, dtype="int32") /* ty=Tensor[(3), int32] */;
  %112 = cast(%109, dtype="uint16") /* ty=Tensor[(9, 12, 13), uint16] */;
  %113 = dyn.reshape(%110, %111, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %114 = bitwise_or(%112, %113) /* ty=Tensor[(9, 12, 13), uint16] */;
  (%114,)
}

def @func_7800() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %115 = @func_5970() /* ty=Tensor[(7, 10, 2), float64] */;
  %116 = @func_5722() /* ty=Tensor[(7, 10, 2), float64] */;
  (%115, %116)
}

def @func_828(%var_801: Tensor[(5, 7), uint8], %var_802: Tensor[(5, 7), uint8], %var_813: Tensor[(11, 4), float64]) -> (Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) {
  %117 = cast(%var_802, dtype="bool") /* ty=Tensor[(5, 7), bool] */;
  %118 = shape_of(%var_801, dtype="int32") /* ty=Tensor[(2), int32] */;
  %119 = cast(%var_801, dtype="bool") /* ty=Tensor[(5, 7), bool] */;
  %120 = dyn.reshape(%117, %118, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
  %121 = cast(%var_813, dtype="float64") /* ty=Tensor[(11, 4), float64] */;
  %122 = reshape(%121, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
  %123 = less_equal(%119, %120) /* ty=Tensor[(5, 7), bool] */;
  %124 = @func_459(%122) /* ty=Tensor[(?, 4, 11), bool] */;
  %125 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  (%123, %124, %var_813, %125)
}

def @func_7204(%var_7190: Tensor[(35), uint8], %var_7191: Tensor[(1, 44), float64]) -> (Tensor[(11, 3), float32], Tensor[(35), uint8], Tensor[(1, 140), float64], Tensor[(35), uint8], Tensor[(1, 44), float64], Tensor[(7, 10, 2), float64]) {
  %126 = cast(meta[relay.Constant][7] /* ty=Tensor[(11, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 3), float32] */;
  %127 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 140), float64] */, dtype="float64") /* ty=Tensor[(1, 140), float64] */;
  %128 = cast(%var_7190, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %129 = cast(%var_7191, dtype="float64") /* ty=Tensor[(1, 44), float64] */;
  %130 = reshape(%127, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %131 = reshape(%128, newshape=[35]) /* ty=Tensor[(35), uint8] */;
  %132 = reshape(%129, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %133 = @func_3610(%130, %131, %132) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) */;
  %134 = cast(meta[relay.Constant][8] /* ty=Tensor[(1, 140), float64] */, dtype="float64") /* ty=Tensor[(1, 140), float64] */;
  %135 = reshape(%134, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %136 = @func_3198(%135) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %137 = sin(%126) /* ty=Tensor[(11, 3), float32] */;
  %138 = %133.3;
  %139 = %136.0;
  (%137, %138, meta[relay.Constant][8] /* ty=Tensor[(1, 140), float64] */, %var_7190, %var_7191, %139)
}

def @func_6014(%var_5973: Tensor[(8, 15, 8), float32], %var_5974: Tensor[(8, 15, 8), float32]) -> (Tensor[(8, 15, 8), float32], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) {
  %140 = cast(%var_5974, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %141 = shape_of(%var_5973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %142 = cast(%var_5973, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %143 = dyn.reshape(%140, %141, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %144 = floor_mod(%142, %143) /* ty=Tensor[(8, 15, 8), float32] */;
  %145 = cast(%144, dtype="float64") /* ty=Tensor[(8, 15, 8), float64] */;
  %146 = atan(%145) /* ty=Tensor[(8, 15, 8), float64] */;
  %147 = cast(%146, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %148 = cast(meta[relay.Constant][9] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %149 = reshape(%148, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %150 = @func_4265(%149) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) */;
  %151 = log10(%147) /* ty=Tensor[(8, 15, 8), float32] */;
  %152 = %150.2;
  (%151, %152, meta[relay.Constant][9] /* ty=Tensor[(108), float32] */)
}

def @func_7602() -> Tensor[(7, 10, 2), float64] {
  %153 = @func_3779() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %153.5
}

def @func_6825() -> (Tensor[(5, 8, 14), float32],) {
  %154 = cast(meta[relay.Constant][10] /* ty=Tensor[(5, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 14), float32] */;
  %155 = rsqrt(%154) /* ty=Tensor[(5, 8, 14), float32] */;
  (%155,)
}

def @func_8117() -> (Tensor[(7, 10, 2), float64],) {
  %156 = @func_2995() /* ty=Tensor[(7, 10, 2), float64] */;
  (%156,)
}

def @func_6694(%var_6652: Tensor[(10, 1), int8], %var_6653: Tensor[(10, 1), int8], %var_6676: Tensor[(44), float64]) -> (Tensor[(10, ?), int8], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) {
  %157 = cast(%var_6653, dtype="int8") /* ty=Tensor[(10, 1), int8] */;
  %158 = shape_of(%var_6652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %159 = cast(%var_6652, dtype="int8") /* ty=Tensor[(10, 1), int8] */;
  %160 = dyn.reshape(%157, %158, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %161 = cast(%var_6676, dtype="float64") /* ty=Tensor[(44), float64] */;
  %162 = reshape(%161, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %163 = @func_1125(%162) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
  %164 = bitwise_xor(%159, %160) /* ty=Tensor[(10, ?), int8] */;
  %165 = %163.1;
  (%164, %165, %var_6676)
}

def @func_2069(%var_2060: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) {
  %166 = @func_1552() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %167 = %166.0;
  %168 = cast(meta[relay.Constant][11] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %169 = shape_of(%167, dtype="int32") /* ty=Tensor[(3), int32] */;
  %170 = cast(%167, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %171 = dyn.reshape(%168, %169, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %172 = cast(%167, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %173 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %174 = cast(%var_2060, dtype="uint16") /* ty=Tensor[(7, 10, 2), uint16] */;
  %175 = shape_of(%173, dtype="int32") /* ty=Tensor[(3), int32] */;
  %176 = cast(%173, dtype="uint16") /* ty=Tensor[(7, 10, 2), uint16] */;
  %177 = dyn.reshape(%174, %175, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %178 = floor_mod(%170, %171) /* ty=Tensor[(7, 10, 2), float64] */;
  %179 = sigmoid(%172) /* ty=Tensor[(7, 10, 2), float64] */;
  %180 = logical_xor(%176, %177) /* ty=Tensor[(7, 10, 2), uint16] */;
  (%178, %179, %180)
}

def @func_203() -> Tensor[(7, 10, 2), float64] {
  @func_196() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5261() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %181 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %182 = %181.0;
  %183 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  (%182, %183)
}

def @func_5377() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) {
  %184 = @func_4854() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %185 = @func_2552() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %186 = %184.2;
  %187 = %185.0;
  (%186, %187)
}

def @func_912() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) {
  %188 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %189 = cast(meta[relay.Constant][12] /* ty=Tensor[(4, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 9), float32] */;
  %190 = cosh(%189) /* ty=Tensor[(4, 15, 9), float32] */;
  %191 = cast(%190, dtype="float64") /* ty=Tensor[(4, 15, 9), float64] */;
  %192 = %188.0;
  %193 = log(%191) /* ty=Tensor[(4, 15, 9), float64] */;
  (%192, %193)
}

def @func_1345(%var_1331: Tensor[(45, 2), uint64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(44), float64], Tensor[(44), float64], Tensor[(5, 9, 2), uint64], Tensor[(45), uint64], Tensor[(45, 2), uint64]) {
  %194 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %195 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %196 = cast(%195, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %197 = cast(meta[relay.Constant][13] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %198 = reshape(%197, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %199 = @func_1125(%198) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
  %200 = cast(meta[relay.Constant][14] /* ty=Tensor[(45), uint64] */, dtype="uint64") /* ty=Tensor[(45), uint64] */;
  %201 = cast(%var_1331, dtype="uint64") /* ty=Tensor[(45, 2), uint64] */;
  %202 = reshape(%200, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint64] */;
  %203 = reshape(%201, newshape=[5, 9, 2]) /* ty=Tensor[(5, 9, 2), uint64] */;
  %204 = @func_1090(%202, %203) /* ty=(Tensor[(5, 9, 2), uint64],) */;
  %205 = %194.0;
  %206 = atanh(%196) /* ty=Tensor[(7, 10, 2), float32] */;
  %207 = %199.2;
  %208 = %204.0;
  (%205, %206, %207, meta[relay.Constant][13] /* ty=Tensor[(44), float64] */, %208, meta[relay.Constant][14] /* ty=Tensor[(45), uint64] */, %var_1331)
}

def @func_7616() -> Tensor[(4, 16, 1), float32] {
  %209 = cast(meta[relay.Constant][15] /* ty=Tensor[(4, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 1), float32] */;
  atan(%209) /* ty=Tensor[(4, 16, 1), float32] */
}

def @func_8314() -> (Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool]) {
  %210 = @func_2198() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %211 = @func_2545() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
  %212 = %210.0;
  %213 = %211.2;
  (%212, %213)
}

def @func_6307(%var_6296: Tensor[(140), float64]) -> (Tensor[(44), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64], Tensor[(288), float64]) {
  %214 = @func_4120() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %215 = cast(%var_6296, dtype="float64") /* ty=Tensor[(140), float64] */;
  %216 = reshape(%215, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %217 = @func_2069(%216) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) */;
  %218 = @func_5735() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), int8], Tensor[(288), float64]) */;
  %219 = %214.0;
  %220 = %217.2;
  %221 = %218.2;
  (%219, %220, %var_6296, %221)
}

def @func_7353() -> Tensor[(7, 10, 2), float64] {
  %222 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %222.0
}

def @func_7410(%var_7386: Tensor[(546), float32]) -> (Tensor[(?, 4, 11), bool], Tensor[(105), float64], Tensor[(546), float32], Tensor[(105), float64], Tensor[(7, 10, 2), bool], Tensor[(4, 8, 9), float64]) {
  %223 = @func_7263() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */;
  %224 = cast(%var_7386, dtype="float32") /* ty=Tensor[(546), float32] */;
  %225 = cast(meta[relay.Constant][16] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %226 = reshape(%224, newshape=[14, 3, 13]) /* ty=Tensor[(14, 3, 13), float32] */;
  %227 = reshape(%225, newshape=[105]) /* ty=Tensor[(105), float64] */;
  %228 = @func_4426(%226, %227) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(105), float64], Tensor[(14, 3, 13), int8]) */;
  %229 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %230 = %223.1;
  %231 = %228.1;
  %232 = %229.0;
  %233 = @func_5691() /* ty=Tensor[(4, 8, 9), float64] */;
  (%230, %231, %var_7386, meta[relay.Constant][16] /* ty=Tensor[(105), float64] */, %232, %233)
}

def @func_1584() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %234 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %235 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
  %236 = %234.0;
  (%235, %236)
}

def @func_1986() -> (Tensor[(7, 10, 2), float64], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool]) {
  %237 = cast(meta[relay.Constant][17] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %238 = reshape(%237, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %239 = @func_1272(%238) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) */;
  %240 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %241 = %240.1;
  %242 = cast(%241, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %243 = acos(%242) /* ty=Tensor[(7, 10, 2), float64] */;
  %244 = cast(meta[relay.Constant][18] /* ty=Tensor[(7, 10, 2), float64] */, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %245 = shape_of(%243, dtype="int32") /* ty=Tensor[(3), int32] */;
  %246 = cast(%243, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %247 = dyn.reshape(%244, %245, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %248 = %239.0;
  %249 = @func_1416() /* ty=Tensor[(7, 10, 2), float64] */;
  %250 = less(%246, %247) /* ty=Tensor[(7, 10, 2), bool] */;
  (%248, meta[relay.Constant][17] /* ty=Tensor[(44), float64] */, %249, %250)
}

def @func_5203() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) {
  %251 = cast(meta[relay.Constant][19] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %252 = reshape(%251, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %253 = @func_4100(%252) /* ty=(Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) */;
  %254 = cast(meta[relay.Constant][20] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %255 = reshape(%254, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %256 = @func_1125(%255) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
  %257 = @func_2160() /* ty=Tensor[(7, 10, 2), float64] */;
  %258 = %253.2;
  %259 = %256.0;
  (%257, %258, meta[relay.Constant][19] /* ty=Tensor[(105), float64] */, %259, meta[relay.Constant][20] /* ty=Tensor[(44), float64] */)
}

def @func_3894() -> Tensor[(7, 10, 2), float64] {
  %260 = @func_3338() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %260.1
}

def @func_2995() -> Tensor[(7, 10, 2), float64] {
  @func_1703() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7874() -> (Tensor[(7, 10, 2), float64], Tensor[(13, 14), int16]) {
  %261 = @func_4970() /* ty=(Tensor[(13, 14), int16], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(1, 44), float64]) */;
  %262 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
  %263 = %261.0;
  (%262, %263)
}

def @func_7753(%var_7748: Tensor[(4, 6, 3), int16], %var_7749: Tensor[(4, 6, 3), int16]) -> Tensor[(4, 6, 3), int16] {
  %264 = cast(%var_7749, dtype="int16") /* ty=Tensor[(4, 6, 3), int16] */;
  %265 = shape_of(%var_7748, dtype="int32") /* ty=Tensor[(3), int32] */;
  %266 = cast(%var_7748, dtype="int16") /* ty=Tensor[(4, 6, 3), int16] */;
  %267 = dyn.reshape(%264, %265, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  logical_xor(%266, %267) /* ty=Tensor[(4, 6, 3), int16] */
}

def @func_4265(%var_4256: Tensor[(108), float32]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) {
  %268 = @func_3041() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %269 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %270 = cast(%var_4256, dtype="float32") /* ty=Tensor[(108), float32] */;
  %271 = reshape(%270, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %272 = @func_3443(%271) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(108), float32], Tensor[(9, 12, 1), float32], Tensor[(7, 10, 2), float64], Tensor[(22, 2), float64]) */;
  %273 = %268.1;
  %274 = %269.0;
  %275 = %272.2;
  (%273, %274, %275, %var_4256)
}

def @func_688(%var_628: Tensor[(14, 13, 1), int16], %var_629: Tensor[(14, 13, 1), int16]) -> (Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) {
  %276 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %277 = cast(%var_629, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %278 = log10(%277) /* ty=Tensor[(14, 13, 1), float32] */;
  %279 = cast(%var_629, dtype="bool") /* ty=Tensor[(14, 13, 1), bool] */;
  %280 = shape_of(%var_628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %281 = cast(%var_628, dtype="bool") /* ty=Tensor[(14, 13, 1), bool] */;
  %282 = dyn.reshape(%279, %280, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %283 = not_equal(%281, %282) /* ty=Tensor[(14, 13, ?), bool] */;
  %284 = cast(%283, dtype="float32") /* ty=Tensor[(14, 13, ?), float32] */;
  %285 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %286 = cast(%278, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %287 = dyn.reshape(%284, %285, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %288 = floor_mod(%286, %287) /* ty=Tensor[(14, 13, ?), float32] */;
  %289 = cast(%288, dtype="uint16") /* ty=Tensor[(14, 13, ?), uint16] */;
  %290 = shape_of(%278, dtype="int32") /* ty=Tensor[(3), int32] */;
  %291 = cast(%278, dtype="uint16") /* ty=Tensor[(14, 13, 1), uint16] */;
  %292 = dyn.reshape(%289, %290, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %293 = %276.1;
  %294 = right_shift(%291, %292) /* ty=Tensor[(14, 13, ?), uint16] */;
  (%293, %294)
}

def @main(%var_8366: Tensor[(1, 5, 6), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(?, 5, 6), float64]) {
  %295 = @func_5545() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %296 = cast(%var_8366, dtype="float64") /* ty=Tensor[(1, 5, 6), float64] */;
  %297 = sigmoid(%296) /* ty=Tensor[(1, 5, 6), float64] */;
  %298 = cast(%var_8366, dtype="uint16") /* ty=Tensor[(1, 5, 6), uint16] */;
  %299 = shape_of(%297, dtype="int32") /* ty=Tensor[(3), int32] */;
  %300 = cast(%297, dtype="uint16") /* ty=Tensor[(1, 5, 6), uint16] */;
  %301 = dyn.reshape(%298, %299, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %302 = minimum(%300, %301) /* ty=Tensor[(?, 5, 6), uint16] */;
  %303 = cast(%302, dtype="float64") /* ty=Tensor[(?, 5, 6), float64] */;
  %304 = %295.0;
  %305 = cosh(%303) /* ty=Tensor[(?, 5, 6), float64] */;
  (%304, %305)
}

def @func_5504(%var_5491: float64, %var_5492: Tensor[(1, 10, 6), float64]) -> (Tensor[(1, 10, 6), float64], Tensor[(1, 10, 6), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64]) {
  %306 = cast(%var_5491, dtype="float64") /* ty=float64 */;
  %307 = cast(%var_5492, dtype="float64") /* ty=Tensor[(1, 10, 6), float64] */;
  %308 = cast(%var_5491, dtype="float64") /* ty=float64 */;
  %309 = cast(%var_5492, dtype="float64") /* ty=Tensor[(1, 10, 6), float64] */;
  %310 = cast(meta[relay.Constant][21] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %311 = reshape(%310, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %312 = @func_2069(%311) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) */;
  %313 = floor_mod(%306, %307) /* ty=Tensor[(1, 10, 6), float64] */;
  %314 = maximum(%308, %309) /* ty=Tensor[(1, 10, 6), float64] */;
  %315 = %312.2;
  (%313, %314, %315, meta[relay.Constant][21] /* ty=Tensor[(140), float64] */)
}

def @func_3443(%var_3431: Tensor[(108), float32]) -> (Tensor[(7, 10, 2), float64], Tensor[(108), float32], Tensor[(9, 12, 1), float32], Tensor[(7, 10, 2), float64], Tensor[(22, 2), float64]) {
  %316 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %317 = cast(%var_3431, dtype="float32") /* ty=Tensor[(108), float32] */;
  %318 = reshape(%317, newshape=[9, 12, 1]) /* ty=Tensor[(9, 12, 1), float32] */;
  %319 = @func_1001(%318) /* ty=Tensor[(9, 12, 1), float32] */;
  %320 = cast(%319, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
  %321 = cast(meta[relay.Constant][22] /* ty=Tensor[(22, 2), float64] */, dtype="float64") /* ty=Tensor[(22, 2), float64] */;
  %322 = reshape(%321, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %323 = @func_1125(%322) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
  %324 = %316.0;
  %325 = log(%320) /* ty=Tensor[(9, 12, 1), float32] */;
  %326 = %323.0;
  (%324, %var_3431, %325, %326, meta[relay.Constant][22] /* ty=Tensor[(22, 2), float64] */)
}

def @func_2465() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %327 = @func_1584() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %328 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %329 = %327.1;
  (%328, %329)
}

def @func_3247() -> (Tensor[(7, 10, 2), bool],) {
  %330 = @func_1409() /* ty=(Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %331 = %330.0;
  (%331,)
}

def @func_4970() -> (Tensor[(13, 14), int16], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(1, 44), float64]) {
  %332 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
  %333 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
  %334 = %333.1;
  %335 = cast(%334, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %336 = reshape(%335, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %337 = @func_3198(%336) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %338 = @func_3041() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %339 = cast(meta[relay.Constant][23] /* ty=Tensor[(1, 44), float64] */, dtype="float64") /* ty=Tensor[(1, 44), float64] */;
  %340 = reshape(%339, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %341 = @func_1272(%340) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) */;
  %342 = %332.2;
  %343 = %337.0;
  %344 = %338.0;
  %345 = %341.1;
  (%342, %334, %343, %344, %345, meta[relay.Constant][23] /* ty=Tensor[(1, 44), float64] */)
}

def @func_1703() -> Tensor[(7, 10, 2), float64] {
  %346 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %346.2
}

def @func_6390() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %347 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
  %348 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
  %349 = @func_4120() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %350 = @func_5855() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %351 = %347.0;
  %352 = %348.0;
  %353 = %349.1;
  %354 = %350.0;
  (%351, %352, %353, %354)
}

def @func_1001(%var_997: Tensor[(9, 12, 1), float32]) -> Tensor[(9, 12, 1), float32] {
  %355 = cast(%var_997, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
  atanh(%355) /* ty=Tensor[(9, 12, 1), float32] */
}

def @func_2545() -> (Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) {
  %356 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
  %357 = %356.0;
  %358 = cast(%357, dtype="float32") /* ty=Tensor[(14, 13, ?), float32] */;
  %359 = cast(meta[relay.Constant][24] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %360 = reshape(%359, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
  %361 = @func_759() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %362 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
  %363 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
  %364 = cosh(%358) /* ty=Tensor[(14, 13, ?), float32] */;
  %365 = @func_459(%360) /* ty=Tensor[(?, 4, 11), bool] */;
  %366 = %361.0;
  %367 = %362.1;
  (%363, %364, %365, meta[relay.Constant][24] /* ty=Tensor[(44), float64] */, %366, %367)
}

def @func_3198(%var_3159: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %368 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  %369 = cast(%var_3159, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %370 = shape_of(%368, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%368, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %373 = @func_1629() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %374 = divide(%371, %372) /* ty=Tensor[(7, 10, 2), float64] */;
  %375 = %373.0;
  (%374, %375)
}

def @func_5306(%var_5296: Tensor[(10, 12, 16), float64]) -> (Tensor[(10, 12, 16), float64],) {
  %376 = cast(%var_5296, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
  %377 = asinh(%376) /* ty=Tensor[(10, 12, 16), float64] */;
  (%377,)
}

def @func_2934(%var_2892: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %378 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %379 = @func_1629() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %380 = %379.0;
  %381 = cast(%380, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %382 = cast(%var_2892, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %383 = shape_of(%380, dtype="int32") /* ty=Tensor[(3), int32] */;
  %384 = cast(%380, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %385 = dyn.reshape(%382, %383, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %386 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
  %387 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %388 = @func_1409() /* ty=(Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %389 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
  %390 = %378.0;
  %391 = erf(%381) /* ty=Tensor[(7, 10, 2), float64] */;
  %392 = less_equal(%384, %385) /* ty=Tensor[(7, 10, 2), bool] */;
  %393 = %386.0;
  %394 = @func_1416() /* ty=Tensor[(7, 10, 2), float64] */;
  %395 = %387.0;
  %396 = %388.2;
  %397 = @func_2836() /* ty=Tensor[(7, 10, 2), float64] */;
  (%389, %390, %391, %392, %393, %394, %395, %396, %397)
}

def @func_318() -> Tensor[(7, 10, 2), float64] {
  %398 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %398.2
}

def @func_967() -> Tensor[(7, 10, 2), float64] {
  @func_196() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7281() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %399 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %400 = %399.0;
  %401 = cast(%400, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %402 = reshape(%401, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %403 = @func_2934(%402) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %404 = %403.8;
  (%400, %404)
}

def @func_3488() -> (Tensor[(7, 10, 2), float32],) {
  %405 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
  %406 = %405.0;
  (%406,)
}

def @func_4120() -> (Tensor[(44), float64], Tensor[(7, 10, 2), float64]) {
  %407 = @func_2545() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
  %408 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %409 = %407.3;
  %410 = %408.2;
  (%409, %410)
}

def @func_7963(%var_7956: Tensor[(5, 13, 12), uint16], %var_7957: Tensor[(5, 13, 12), uint16]) -> Tensor[(5, 13, 12), uint16] {
  %411 = cast(%var_7957, dtype="uint16") /* ty=Tensor[(5, 13, 12), uint16] */;
  %412 = shape_of(%var_7956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %413 = cast(%var_7956, dtype="uint16") /* ty=Tensor[(5, 13, 12), uint16] */;
  %414 = dyn.reshape(%411, %412, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  minimum(%413, %414) /* ty=Tensor[(5, 13, 12), uint16] */
}

def @func_696() -> (Tensor[(7, 10, 2), float64],) {
  %415 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
  (%415,)
}

def @func_6063() -> Tensor[(7, 10, 2), float64] {
  @func_203() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7783(%var_7779: Tensor[(52), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(2, 2, 13), float64], Tensor[(52), float64]) {
  %416 = @func_7281() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %417 = cast(%var_7779, dtype="float64") /* ty=Tensor[(52), float64] */;
  %418 = reshape(%417, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %419 = %416.0;
  %420 = @func_5102(%418) /* ty=Tensor[(2, 2, 13), float64] */;
  (%419, %420, %var_7779)
}

def @func_5033(%var_5019: Tensor[(7, 10, 2), float64]) -> Tensor[(7, 10, 2), float64] {
  %421 = @func_1416() /* ty=Tensor[(7, 10, 2), float64] */;
  %422 = cast(%var_5019, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %423 = shape_of(%421, dtype="int32") /* ty=Tensor[(3), int32] */;
  %424 = cast(%421, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %425 = dyn.reshape(%422, %423, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  power(%424, %425) /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_3089(%var_3051: Tensor[(3, 12, 10), float64]) -> (Tensor[(7, 10, 2), bool], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float64]) {
  %426 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %427 = cast(%var_3051, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %428 = exp(%427) /* ty=Tensor[(3, 12, 10), float64] */;
  %429 = cast(%428, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
  %430 = cast(%428, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %431 = asinh(%430) /* ty=Tensor[(3, 12, 10), float64] */;
  %432 = cast(%431, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
  %433 = cast(%428, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %434 = shape_of(%var_3051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %435 = cast(%var_3051, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %436 = dyn.reshape(%433, %434, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %437 = %426.0;
  %438 = erf(%429) /* ty=Tensor[(3, 12, 10), float32] */;
  %439 = sin(%432) /* ty=Tensor[(3, 12, 10), float32] */;
  %440 = divide(%435, %436) /* ty=Tensor[(3, 12, 10), float64] */;
  (%437, %438, %439, %440)
}

def @func_5722() -> Tensor[(7, 10, 2), float64] {
  %441 = @func_4341() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %441.0
}

def @func_861() -> (Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) {
  %442 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 14), int16] */, dtype="int16") /* ty=Tensor[(13, 14), int16] */;
  %443 = cast(meta[relay.Constant][25] /* ty=Tensor[(13, 14), int16] */, dtype="int16") /* ty=Tensor[(13, 14), int16] */;
  %444 = reshape(%442, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
  %445 = reshape(%443, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
  %446 = @func_688(%444, %445) /* ty=(Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) */;
  %447 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %448 = %446.1;
  (%447, %448, meta[relay.Constant][25] /* ty=Tensor[(13, 14), int16] */)
}

def @func_941() -> (Tensor[(7, 10, 2), float64],) {
  %449 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
  %450 = %449.0;
  (%450,)
}

def @func_4322() -> Tensor[(7, 10, 2), float64] {
  @func_2386() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5855() -> (Tensor[(7, 10, 2), float64],) {
  %451 = @func_3865() /* ty=Tensor[(7, 10, 2), float64] */;
  (%451,)
}

def @func_2959() -> (Tensor[(4, 8, 9), float64],) {
  %452 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
  %453 = %452.1;
  (%453,)
}

def @func_4497(%var_4494: Tensor[(11, 13, 15), float64]) -> Tensor[(11, 13, 15), float64] {
  %454 = cast(%var_4494, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
  log2(%454) /* ty=Tensor[(11, 13, 15), float64] */
}

def @func_4351(%var_4345: Tensor[(4, 8, 9), float64]) -> (Tensor[(4, 8, 9), int8],) {
  %455 = @func_3779() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %456 = %455.0;
  %457 = cast(%var_4345, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %458 = shape_of(%456, dtype="int32") /* ty=Tensor[(3), int32] */;
  %459 = cast(%456, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %460 = dyn.reshape(%457, %458, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %461 = minimum(%459, %460) /* ty=Tensor[(4, 8, 9), int8] */;
  (%461,)
}

def @func_5561() -> (Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64]) {
  %462 = @func_3992() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %463 = @func_5545() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %464 = %462.0;
  %465 = %463.0;
  (%464, %465)
}

def @func_6243() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) {
  %466 = @func_4009() /* ty=Tensor[(7, 10, 2), float64] */;
  %467 = @func_2635() /* ty=Tensor[(4, 8, 9), float64] */;
  (%466, %467)
}

def @func_8263() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %468 = @func_7800() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %469 = @func_5855() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %470 = %468.0;
  %471 = %469.0;
  (%470, %471)
}

def @func_3469() -> Tensor[(7, 10, 2), float64] {
  %472 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %473 = %472.1;
  %474 = cast(meta[relay.Constant][26] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %475 = shape_of(%473, dtype="int32") /* ty=Tensor[(3), int32] */;
  %476 = cast(%473, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %477 = dyn.reshape(%474, %475, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  floor_divide(%476, %477) /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_459(%var_447: Tensor[(1, 4, 11), float64]) -> Tensor[(?, 4, 11), bool] {
  %478 = cast(meta[relay.Constant][27] /* ty=Tensor[(1, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 4, 11), float64] */;
  %479 = shape_of(%var_447, dtype="int32") /* ty=Tensor[(3), int32] */;
  %480 = cast(%var_447, dtype="float64") /* ty=Tensor[(1, 4, 11), float64] */;
  %481 = dyn.reshape(%478, %479, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %482 = floor_mod(%480, %481) /* ty=Tensor[(?, 4, 11), float64] */;
  %483 = cast(%var_447, dtype="bool") /* ty=Tensor[(1, 4, 11), bool] */;
  %484 = shape_of(%482, dtype="int32") /* ty=Tensor[(3), int32] */;
  %485 = cast(%482, dtype="bool") /* ty=Tensor[(?, 4, 11), bool] */;
  %486 = dyn.reshape(%483, %484, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  less_equal(%485, %486) /* ty=Tensor[(?, 4, 11), bool] */
}

def @func_3405(%var_3391: Tensor[(16, 1, 16), int64], %var_3392: Tensor[(16, 2, 16), int64]) -> (Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) {
  %487 = cast(%var_3391, dtype="int64") /* ty=Tensor[(16, 1, 16), int64] */;
  %488 = cast(%var_3392, dtype="int64") /* ty=Tensor[(16, 2, 16), int64] */;
  %489 = logical_xor(%487, %488) /* ty=Tensor[(16, 2, 16), int64] */;
  %490 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
  (%489, %490)
}

def @func_4628(%var_4589: Tensor[(1, 1, 12), bool], %var_4590: Tensor[(6, 8, 12), bool]) -> (Tensor[(6, 8, 12), int8], Tensor[(9, 12, 1), float32], Tensor[(108), float32], Tensor[(7, 10, 2), bool]) {
  %491 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1, 1, 12), bool] */;
  %492 = cast(%var_4590, dtype="bool") /* ty=Tensor[(6, 8, 12), bool] */;
  %493 = logical_and(%491, %492) /* ty=Tensor[(6, 8, 12), bool] */;
  %494 = cast(%var_4590, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
  %495 = shape_of(%493, dtype="int32") /* ty=Tensor[(3), int32] */;
  %496 = cast(%493, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
  %497 = dyn.reshape(%494, %495, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %498 = cast(meta[relay.Constant][28] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %499 = reshape(%498, newshape=[9, 12, 1]) /* ty=Tensor[(9, 12, 1), float32] */;
  %500 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %501 = bitwise_or(%496, %497) /* ty=Tensor[(6, 8, 12), int8] */;
  %502 = @func_1001(%499) /* ty=Tensor[(9, 12, 1), float32] */;
  %503 = %500.1;
  (%501, %502, meta[relay.Constant][28] /* ty=Tensor[(108), float32] */, %503)
}

def @func_6859(%var_6835: Tensor[(6, 12, 6), bool], %var_6836: Tensor[(6, 12, 6), bool]) -> (Tensor[(6, 12, 6), bool], Tensor[(6, 12, 6), float32]) {
  %504 = cast(%var_6836, dtype="bool") /* ty=Tensor[(6, 12, 6), bool] */;
  %505 = shape_of(%var_6835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %506 = cast(%var_6835, dtype="bool") /* ty=Tensor[(6, 12, 6), bool] */;
  %507 = dyn.reshape(%504, %505, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %508 = cast(%var_6836, dtype="float32") /* ty=Tensor[(6, 12, 6), float32] */;
  %509 = logical_and(%506, %507) /* ty=Tensor[(6, 12, 6), bool] */;
  %510 = rsqrt(%508) /* ty=Tensor[(6, 12, 6), float32] */;
  (%509, %510)
}

def @func_7728(%var_7685: Tensor[(3, 15, 5), float64], %var_7711: Tensor[(3, 15, 5), float64]) -> (Tensor[(3, 15, 5), float64], Tensor[(3, 15, 5), int64]) {
  %511 = cast(%var_7685, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
  %512 = acos(%511) /* ty=Tensor[(3, 15, 5), float64] */;
  %513 = cast(%var_7685, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
  %514 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %515 = cast(%512, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
  %516 = dyn.reshape(%513, %514, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %517 = cast(%var_7711, dtype="int64") /* ty=Tensor[(3, 15, 5), int64] */;
  %518 = shape_of(%512, dtype="int32") /* ty=Tensor[(3), int32] */;
  %519 = cast(%512, dtype="int64") /* ty=Tensor[(3, 15, 5), int64] */;
  %520 = dyn.reshape(%517, %518, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %521 = divide(%515, %516) /* ty=Tensor[(3, 15, 5), float64] */;
  %522 = maximum(%519, %520) /* ty=Tensor[(3, 15, 5), int64] */;
  (%521, %522)
}

def @func_5441(%var_5428: Tensor[(14, 1, 6), int16], %var_5429: Tensor[(14, 6, 6), int16]) -> Tensor[(14, 6, 6), int16] {
  %523 = cast(%var_5428, dtype="int16") /* ty=Tensor[(14, 1, 6), int16] */;
  %524 = cast(%var_5429, dtype="int16") /* ty=Tensor[(14, 6, 6), int16] */;
  right_shift(%523, %524) /* ty=Tensor[(14, 6, 6), int16] */
}

def @func_6642() -> (Tensor[(7, 10, 2), float64],) {
  %525 = @func_5531() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %526 = %525.0;
  (%526,)
}

def @func_299() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) {
  %527 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %528 = cast(%527, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %529 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %530 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %531 = cast(%530, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %532 = shape_of(%529, dtype="int32") /* ty=Tensor[(3), int32] */;
  %533 = cast(%529, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %534 = dyn.reshape(%531, %532, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %535 = sqrt(%528) /* ty=Tensor[(7, 10, 2), float64] */;
  %536 = logical_and(%533, %534) /* ty=Tensor[(7, 10, 2), bool] */;
  %537 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  (%535, %536, %537)
}

def @func_1850() -> (Tensor[(7, 10, 2), float64],) {
  %538 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %539 = %538.0;
  (%539,)
}

def @func_1629() -> (Tensor[(7, 10, 2), float64],) {
  %540 = @func_1552() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %541 = %540.0;
  (%541,)
}

def @func_556(%var_548: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  %542 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %543 = %542.1;
  %544 = cast(%543, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %545 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %546 = cast(%var_548, dtype="float64") /* ty=Tensor[(44), float64] */;
  %547 = reshape(%546, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
  %548 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %549 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %550 = log(%544) /* ty=Tensor[(7, 10, 2), float64] */;
  %551 = %545.1;
  %552 = @func_459(%547) /* ty=Tensor[(?, 4, 11), bool] */;
  (%548, %549, %550, %551, %552, %var_548)
}

def @func_3610(%var_3572: Tensor[(7, 10, 2), float64], %var_3606: Tensor[(35), uint8], %var_3607: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) {
  %553 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %554 = %553.0;
  %555 = cast(%var_3572, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %556 = shape_of(%554, dtype="int32") /* ty=Tensor[(3), int32] */;
  %557 = cast(%554, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %558 = dyn.reshape(%555, %556, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %559 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %560 = cast(%var_3606, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %561 = cast(%var_3606, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %562 = cast(%var_3607, dtype="float64") /* ty=Tensor[(44), float64] */;
  %563 = reshape(%560, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %564 = reshape(%561, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %565 = reshape(%562, newshape=[11, 4]) /* ty=Tensor[(11, 4), float64] */;
  %566 = @func_828(%563, %564, %565) /* ty=(Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) */;
  %567 = mod(%557, %558) /* ty=Tensor[(7, 10, 2), float64] */;
  %568 = %559.0;
  %569 = %566.3;
  (%567, %568, %569, %var_3606, %var_3607)
}

def @func_1507() -> Tensor[(7, 10, 2), float64] {
  @func_196() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_4854() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %570 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %571 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
  %572 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %573 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %574 = %570.0;
  %575 = %571.1;
  %576 = %572.1;
  %577 = %573.0;
  (%574, %575, %576, %577)
}

def @func_3139(%var_3120: Tensor[(1, 7, 15), float64], %var_3121: Tensor[(14, 7, 15), float64]) -> Tensor[(14, 7, 15), float64] {
  %578 = cast(%var_3120, dtype="float64") /* ty=Tensor[(1, 7, 15), float64] */;
  %579 = cast(%var_3121, dtype="float64") /* ty=Tensor[(14, 7, 15), float64] */;
  floor_divide(%578, %579) /* ty=Tensor[(14, 7, 15), float64] */
}

def @func_5735() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), int8], Tensor[(288), float64]) {
  %580 = cast(meta[relay.Constant][29] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %581 = reshape(%580, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %582 = @func_4351(%581) /* ty=(Tensor[(4, 8, 9), int8],) */;
  %583 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %584 = %582.0;
  (%583, %584, meta[relay.Constant][29] /* ty=Tensor[(288), float64] */)
}

def @func_3655(%var_3641: Tensor[(2, 128), int64], %var_3642: Tensor[(512), int64]) -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float32], Tensor[(16, 2, 16), int64], Tensor[(2, 128), int64], Tensor[(512), int64]) {
  %585 = @func_3488() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %586 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %587 = @func_2552() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %588 = cast(%var_3641, dtype="int64") /* ty=Tensor[(2, 128), int64] */;
  %589 = cast(%var_3642, dtype="int64") /* ty=Tensor[(512), int64] */;
  %590 = reshape(%588, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), int64] */;
  %591 = reshape(%589, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int64] */;
  %592 = @func_3405(%590, %591) /* ty=(Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) */;
  %593 = %585.0;
  %594 = %586.0;
  %595 = %587.0;
  %596 = %592.0;
  (%593, %594, %595, %596, %var_3641, %var_3642)
}

def @func_2552() -> (Tensor[(7, 10, 2), float32],) {
  %597 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %598 = %597.0;
  %599 = cast(%598, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %600 = rsqrt(%599) /* ty=Tensor[(7, 10, 2), float32] */;
  (%600,)
}

def @func_196() -> Tensor[(7, 10, 2), float64] {
  %601 = cast(meta[relay.Constant][30] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  sinh(%601) /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7329() -> (Tensor[(7, 10, 2), float64],) {
  %602 = @func_5818() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %603 = %602.0;
  (%603,)
}

def @func_3801() -> Tensor[(7, 10, 2), float64] {
  %604 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %604.0
}

def @func_4341() -> (Tensor[(7, 10, 2), float64],) {
  %605 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %606 = %605.0;
  (%606,)
}

def @func_3992() -> (Tensor[(4, 8, 9), float64],) {
  %607 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
  %608 = %607.1;
  (%608,)
}

def @func_6102() -> Tensor[(7, 10, 2), float64] {
  %609 = @func_2836() /* ty=Tensor[(7, 10, 2), float64] */;
  %610 = cast(%609, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  sin(%610) /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_4670() -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) {
  %611 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
  %612 = %611.1;
  %613 = @func_3894() /* ty=Tensor[(7, 10, 2), float64] */;
  (%612, %613)
}

def @func_7943(%var_7934: Tensor[(4, 16, 1), float32]) -> (Tensor[(4, 16, ?), int16],) {
  %614 = @func_7616() /* ty=Tensor[(4, 16, 1), float32] */;
  %615 = cast(%var_7934, dtype="int16") /* ty=Tensor[(4, 16, 1), int16] */;
  %616 = shape_of(%614, dtype="int32") /* ty=Tensor[(3), int32] */;
  %617 = cast(%614, dtype="int16") /* ty=Tensor[(4, 16, 1), int16] */;
  %618 = dyn.reshape(%615, %616, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %619 = left_shift(%617, %618) /* ty=Tensor[(4, 16, ?), int16] */;
  (%619,)
}

def @func_5577() -> Tensor[(7, 10, 2), float32] {
  %620 = @func_5377() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
  %620.1
}

def @func_7074() -> (Tensor[(7, 10, 2), float64],) {
  %621 = @func_3041() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %622 = %621.0;
  (%622,)
}

def @func_2160() -> Tensor[(7, 10, 2), float64] {
  %623 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %623.0
}

def @func_2098() -> (Tensor[(7, 10, 2), float64],) {
  %624 = @func_1584() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %625 = %624.1;
  (%625,)
}

def @func_2386() -> Tensor[(7, 10, 2), float64] {
  @func_318() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5351() -> (Tensor[(7, 10, 2), float64],) {
  %626 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %627 = %626.0;
  (%627,)
}

def @func_759() -> (Tensor[(7, 10, 2), float64],) {
  %628 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %629 = %628.0;
  (%629,)
}

def @func_1050() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %630 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
  %631 = %630.0;
  %632 = cast(%631, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %633 = cos(%632) /* ty=Tensor[(7, 10, 2), float64] */;
  %634 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  (%633, %634)
}

def @func_1125(%var_1123: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) {
  %635 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
  %636 = cast(%var_1123, dtype="float64") /* ty=Tensor[(44), float64] */;
  %637 = reshape(%636, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %638 = @func_556(%637) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */;
  %639 = %635.0;
  %640 = %638.3;
  (%639, %640, %var_1123)
}

def @func_5944(%var_5935: Tensor[(2, 1, 1), int32], %var_5936: Tensor[(2, 1, 7), int32]) -> (Tensor[(2, 1, 7), int32],) {
  %641 = cast(%var_5935, dtype="int32") /* ty=Tensor[(2, 1, 1), int32] */;
  %642 = cast(%var_5936, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
  %643 = subtract(%641, %642) /* ty=Tensor[(2, 1, 7), int32] */;
  (%643,)
}

def @func_2367(%var_2342: Tensor[(13, 6, 6), float32], %var_2364: Tensor[(182), int16]) -> (Tensor[(13, 6, 6), int64], Tensor[(7, 10, 2), bool], Tensor[(182), int16]) {
  %644 = cast(%var_2342, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
  %645 = asin(%644) /* ty=Tensor[(13, 6, 6), float64] */;
  %646 = cast(%var_2342, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
  %647 = sinh(%646) /* ty=Tensor[(13, 6, 6), float32] */;
  %648 = cast(%647, dtype="int64") /* ty=Tensor[(13, 6, 6), int64] */;
  %649 = shape_of(%645, dtype="int32") /* ty=Tensor[(3), int32] */;
  %650 = cast(%645, dtype="int64") /* ty=Tensor[(13, 6, 6), int64] */;
  %651 = dyn.reshape(%648, %649, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
  %652 = cast(%var_2364, dtype="int16") /* ty=Tensor[(182), int16] */;
  %653 = cast(%var_2364, dtype="int16") /* ty=Tensor[(182), int16] */;
  %654 = reshape(%652, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
  %655 = reshape(%653, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
  %656 = @func_688(%654, %655) /* ty=(Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) */;
  %657 = bitwise_xor(%650, %651) /* ty=Tensor[(13, 6, 6), int64] */;
  %658 = %656.0;
  (%657, %658, %var_2364)
}

def @func_4009() -> Tensor[(7, 10, 2), float64] {
  %659 = @func_1584() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %659.0
}

def @func_7503(%var_7463: Tensor[(10, 3, 2), float32], %var_7488: Tensor[(10, 3, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(128, 4), int64], Tensor[(10, 3, 2), bool], Tensor[(10, 3, 2), int16]) {
  %660 = cast(meta[relay.Constant][31] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
  %661 = cast(meta[relay.Constant][32] /* ty=Tensor[(128, 4), int64] */, dtype="int64") /* ty=Tensor[(128, 4), int64] */;
  %662 = reshape(%660, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), int64] */;
  %663 = reshape(%661, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int64] */;
  %664 = @func_3405(%662, %663) /* ty=(Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) */;
  %665 = cast(%var_7463, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %666 = log2(%665) /* ty=Tensor[(10, 3, 2), float32] */;
  %667 = cast(%666, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %668 = erf(%667) /* ty=Tensor[(10, 3, 2), float32] */;
  %669 = cast(%668, dtype="float64") /* ty=Tensor[(10, 3, 2), float64] */;
  %670 = atan(%669) /* ty=Tensor[(10, 3, 2), float64] */;
  %671 = cast(%var_7488, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
  %672 = shape_of(%670, dtype="int32") /* ty=Tensor[(3), int32] */;
  %673 = cast(%670, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
  %674 = dyn.reshape(%671, %672, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %675 = cast(%var_7463, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %676 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %677 = cast(%666, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
  %678 = dyn.reshape(%675, %676, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %679 = floor_mod(%677, %678) /* ty=Tensor[(10, 3, 2), float32] */;
  %680 = cast(%679, dtype="int16") /* ty=Tensor[(10, 3, 2), int16] */;
  %681 = shape_of(%666, dtype="int32") /* ty=Tensor[(3), int32] */;
  %682 = cast(%666, dtype="int16") /* ty=Tensor[(10, 3, 2), int16] */;
  %683 = dyn.reshape(%680, %681, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
  %684 = %664.1;
  %685 = logical_and(%673, %674) /* ty=Tensor[(10, 3, 2), bool] */;
  %686 = bitwise_and(%682, %683) /* ty=Tensor[(10, 3, 2), int16] */;
  (%684, meta[relay.Constant][31] /* ty=Tensor[(256), int64] */, meta[relay.Constant][32] /* ty=Tensor[(128, 4), int64] */, %685, %686)
}

def @func_5339() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(512), int64]) {
  %687 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %688 = cast(meta[relay.Constant][33] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
  %689 = cast(meta[relay.Constant][34] /* ty=Tensor[(512), int64] */, dtype="int64") /* ty=Tensor[(512), int64] */;
  %690 = reshape(%688, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), int64] */;
  %691 = reshape(%689, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int64] */;
  %692 = @func_3405(%690, %691) /* ty=(Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) */;
  %693 = %687.0;
  %694 = %692.1;
  (%693, %694, meta[relay.Constant][33] /* ty=Tensor[(256), int64] */, meta[relay.Constant][34] /* ty=Tensor[(512), int64] */)
}

def @func_2698(%var_2693: Tensor[(13, 12, 1), float64]) -> Tensor[(13, 12, 3), bool] {
  %695 = cast(%var_2693, dtype="bool") /* ty=Tensor[(13, 12, 1), bool] */;
  %696 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 12, 3), float64] */, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  less(%695, %696) /* ty=Tensor[(13, 12, 3), bool] */
}

def @func_3256() -> (Tensor[(7, 10, 2), float64],) {
  %697 = @func_2995() /* ty=Tensor[(7, 10, 2), float64] */;
  (%697,)
}

def @func_7679(%var_7641: Tensor[(630), bool]) -> (Tensor[(15, 6, 7), bool], Tensor[(630), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(14, 13, 630), int16], Tensor[(7, 10, 2), float64]) {
  %698 = cast(%var_7641, dtype="bool") /* ty=Tensor[(630), bool] */;
  %699 = cast(%var_7641, dtype="bool") /* ty=Tensor[(630), bool] */;
  %700 = reshape(%698, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
  %701 = reshape(%699, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
  %702 = @func_2657(%700, %701) /* ty=(Tensor[(15, 6, 7), bool],) */;
  %703 = @func_4194() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(15, 6, 7), bool], Tensor[(630), bool]) */;
  %704 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %705 = @func_2545() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
  %706 = %705.1;
  %707 = cast(%706, dtype="float32") /* ty=Tensor[(14, 13, ?), float32] */;
  %708 = rsqrt(%707) /* ty=Tensor[(14, 13, ?), float32] */;
  %709 = cast(%708, dtype="int16") /* ty=Tensor[(14, 13, ?), int16] */;
  %710 = cast(%var_7641, dtype="int16") /* ty=Tensor[(630), int16] */;
  %711 = @func_5203() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) */;
  %712 = %702.0;
  %713 = %703.5;
  %714 = %704.0;
  %715 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
  %716 = right_shift(%709, %710) /* ty=Tensor[(14, 13, 630), int16] */;
  %717 = %711.3;
  (%712, %713, %714, %715, %716, %717)
}

def @func_7364() -> (Tensor[(4, 8, 9), float64],) {
  %718 = @func_2959() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %719 = %718.0;
  (%719,)
}

def @func_5087() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %720 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %721 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %722 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %723 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  %724 = %720.0;
  %725 = %721.0;
  %726 = %722.1;
  (%723, %724, %725, %726)
}

def @func_6759(%var_6714: Tensor[(8, 7, 2), float32], %var_6715: Tensor[(8, 7, 2), float32], %var_6722: Tensor[(140), float64], %var_6723: Tensor[(35), uint8], %var_6724: Tensor[(44), float64]) -> (Tensor[(8, 7, 2), float32], Tensor[(44), float64], Tensor[(140), float64], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32], Tensor[(8, 7, 2), bool], Tensor[(7, 10, 2), float64]) {
  %727 = cast(%var_6715, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %728 = shape_of(%var_6714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %729 = cast(%var_6714, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %730 = dyn.reshape(%727, %728, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %731 = cast(%var_6722, dtype="float64") /* ty=Tensor[(140), float64] */;
  %732 = cast(%var_6723, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %733 = cast(%var_6724, dtype="float64") /* ty=Tensor[(44), float64] */;
  %734 = reshape(%731, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %735 = reshape(%732, newshape=[35]) /* ty=Tensor[(35), uint8] */;
  %736 = reshape(%733, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %737 = @func_3610(%734, %735, %736) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) */;
  %738 = @func_3488() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %739 = cast(meta[relay.Constant][36] /* ty=Tensor[(8, 7, 2), float32] */, dtype="bool") /* ty=Tensor[(8, 7, 2), bool] */;
  %740 = shape_of(%var_6715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %741 = cast(%var_6715, dtype="bool") /* ty=Tensor[(8, 7, 2), bool] */;
  %742 = dyn.reshape(%739, %740, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %743 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %744 = power(%729, %730) /* ty=Tensor[(8, 7, 2), float32] */;
  %745 = %737.4;
  %746 = %738.0;
  %747 = less(%741, %742) /* ty=Tensor[(8, 7, 2), bool] */;
  %748 = %743.0;
  (%744, %745, %var_6722, %var_6723, %var_6724, %746, %747, %748)
}

def @func_6877() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %749 = @func_4854() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %750 = @func_759() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %751 = %749.3;
  %752 = %750.0;
  (%751, %752)
}

def @func_5706() -> Tensor[(7, 10, 2), float64] {
  @func_1507() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_8171() -> Tensor[(105), float64] {
  %753 = @func_5203() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) */;
  %753.2
}

def @func_5970() -> Tensor[(7, 10, 2), float64] {
  %754 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %754.0
}

def @func_1196() -> (Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) {
  %755 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
  %756 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %757 = cast(%756, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %758 = %755.1;
  %759 = log10(%757) /* ty=Tensor[(7, 10, 2), float32] */;
  (%758, %759)
}

def @func_8228(%var_8193: Tensor[(14, 12, 3), float32], %var_8210: Tensor[(2, 1), int32], %var_8211: Tensor[(14), int32]) -> (Tensor[(14, 12, 3), float32], Tensor[(7, 10, 2), float64], Tensor[(2, 1, 7), int32], Tensor[(2, 1), int32], Tensor[(14), int32]) {
  %760 = cast(%var_8193, dtype="float32") /* ty=Tensor[(14, 12, 3), float32] */;
  %761 = cast(%var_8210, dtype="int32") /* ty=Tensor[(2, 1), int32] */;
  %762 = cast(%var_8211, dtype="int32") /* ty=Tensor[(14), int32] */;
  %763 = reshape(%761, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int32] */;
  %764 = reshape(%762, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), int32] */;
  %765 = @func_5944(%763, %764) /* ty=(Tensor[(2, 1, 7), int32],) */;
  %766 = asinh(%760) /* ty=Tensor[(14, 12, 3), float32] */;
  %767 = @func_2386() /* ty=Tensor[(7, 10, 2), float64] */;
  %768 = %765.0;
  (%766, %767, %768, %var_8210, %var_8211)
}

def @func_2733() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) {
  %769 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %770 = %769.0;
  %771 = @func_2635() /* ty=Tensor[(4, 8, 9), float64] */;
  (%770, %771)
}

def @func_4563() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %772 = @func_3842() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %773 = %772.0;
  %774 = @func_4322() /* ty=Tensor[(7, 10, 2), float64] */;
  (%773, %774)
}

def @func_4100(%var_4084: Tensor[(7, 15), float64]) -> (Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) {
  %775 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
  %776 = cast(%var_4084, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
  %777 = cast(meta[relay.Constant][37] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
  %778 = reshape(%776, newshape=[1, 7, 15]) /* ty=Tensor[(1, 7, 15), float64] */;
  %779 = reshape(%777, newshape=[14, 7, 15]) /* ty=Tensor[(14, 7, 15), float64] */;
  %780 = cast(meta[relay.Constant][37] /* ty=Tensor[(1470), float64] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
  %781 = %775.0;
  %782 = @func_3139(%778, %779) /* ty=Tensor[(14, 7, 15), float64] */;
  %783 = log10(%780) /* ty=Tensor[(1470), float32] */;
  (%781, %782, %var_4084, %783)
}

def @func_5102(%var_5099: Tensor[(2, 2, 13), float64]) -> Tensor[(2, 2, 13), float64] {
  %784 = cast(%var_5099, dtype="float64") /* ty=Tensor[(2, 2, 13), float64] */;
  exp(%784) /* ty=Tensor[(2, 2, 13), float64] */
}

def @func_5255() -> (Tensor[(7, 10, 2), float32],) {
  %785 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
  %786 = %785.1;
  (%786,)
}

def @func_8060(%var_8007: Tensor[(44), float64]) -> (Tensor[(4, 8, 9), float64], Tensor[(35), uint8], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) {
  %787 = @func_6243() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
  %788 = cast(meta[relay.Constant][38] /* ty=Tensor[(7, 5), uint8] */, dtype="uint8") /* ty=Tensor[(7, 5), uint8] */;
  %789 = cast(%var_8007, dtype="float64") /* ty=Tensor[(44), float64] */;
  %790 = reshape(%788, newshape=[35]) /* ty=Tensor[(35), uint8] */;
  %791 = reshape(%789, newshape=[1, 44]) /* ty=Tensor[(1, 44), float64] */;
  %792 = @func_7204(%790, %791) /* ty=(Tensor[(11, 3), float32], Tensor[(35), uint8], Tensor[(1, 140), float64], Tensor[(35), uint8], Tensor[(1, 44), float64], Tensor[(7, 10, 2), float64]) */;
  %793 = @func_3247() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %794 = %787.1;
  %795 = %792.3;
  %796 = %793.0;
  %797 = @func_2995() /* ty=Tensor[(7, 10, 2), float64] */;
  (%794, %795, meta[relay.Constant][38] /* ty=Tensor[(7, 5), uint8] */, %var_8007, %796, %797)
}

def @func_2198() -> (Tensor[(7, 10, 2), float64],) {
  %798 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  (%798,)
}

def @func_5818() -> (Tensor[(7, 10, 2), float64],) {
  %799 = @func_2386() /* ty=Tensor[(7, 10, 2), float64] */;
  (%799,)
}

def @func_1090(%var_1080: Tensor[(5, 9, 1), uint64], %var_1081: Tensor[(5, 9, 2), uint64]) -> (Tensor[(5, 9, 2), uint64],) {
  %800 = cast(%var_1080, dtype="uint64") /* ty=Tensor[(5, 9, 1), uint64] */;
  %801 = cast(%var_1081, dtype="uint64") /* ty=Tensor[(5, 9, 2), uint64] */;
  %802 = subtract(%800, %801) /* ty=Tensor[(5, 9, 2), uint64] */;
  (%802,)
}

def @func_5691() -> Tensor[(4, 8, 9), float64] {
  %803 = @func_3992() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %803.0
}

def @func_3338() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %804 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %805 = %804.0;
  %806 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
  (%805, %806)
}

def @func_6596() -> (Tensor[(7, 10, 2), float64],) {
  %807 = @func_4854() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %808 = %807.2;
  (%808,)
}

def @func_7551() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  %809 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %810 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %811 = cast(meta[relay.Constant][39] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %812 = reshape(%811, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %813 = @func_556(%812) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */;
  %814 = %809.0;
  %815 = %810.0;
  %816 = %813.4;
  (%814, %815, %816, meta[relay.Constant][39] /* ty=Tensor[(44), float64] */)
}

def @func_4802(%var_4787: Tensor[(4, 13), float64]) -> (Tensor[(4, 13), float64],) {
  %817 = cast(%var_4787, dtype="float64") /* ty=Tensor[(4, 13), float64] */;
  %818 = rsqrt(%817) /* ty=Tensor[(4, 13), float64] */;
  (%818,)
}

def @func_5531() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %819 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %820 = @func_2386() /* ty=Tensor[(7, 10, 2), float64] */;
  %821 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
  %822 = %819.1;
  (%820, %821, %822)
}

def @func_3041() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %823 = @func_1507() /* ty=Tensor[(7, 10, 2), float64] */;
  %824 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
  (%823, %824)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */
===================================
==========mutated_mod==========
#[version = "0.0.5"]
def @func_7263() -> (Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  %0 = @func_1629() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %1 = cast(meta[relay.Constant][0] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %2 = reshape(%1, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
  %3 = cast(meta[relay.Constant][0] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %4 = %0.0;
  %5 = @func_459(%2) /* ty=Tensor[(?, 4, 11), bool] */;
  %6 = acosh(%3) /* ty=Tensor[(44), float64] */;
  (%4, %5, %6)
}

def @func_2200() -> (Tensor[(7, 10, 2), float64],) {
  @func_2198() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_6826() -> (Tensor[(5, 8, 14), float32],) {
  %9 = fn () -> (Tensor[(5, 8, 14), float32],) {
    %7 = cast(meta[relay.Constant][1] /* ty=Tensor[(5, 8, 14), float32] */, dtype="float32") /* ty=Tensor[(5, 8, 14), float32] */;
    %8 = rsqrt(%7) /* ty=Tensor[(5, 8, 14), float32] */;
    (%8,)
  };
  %9() /* ty=(Tensor[(5, 8, 14), float32],) */
}

def @func_3614(%var_3611: Tensor[(7, 10, 2), float64], %var_3612: Tensor[(35), uint8], %var_3613: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) {
  %27 = fn (%var_3572: Tensor[(7, 10, 2), float64], %var_3606: Tensor[(35), uint8], %var_3607: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) {
    %10 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %11 = %10.0;
    %12 = cast(%var_3572, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %13 = shape_of(%11, dtype="int32") /* ty=Tensor[(3), int32] */;
    %14 = cast(%11, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %15 = dyn.reshape(%12, %13, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %16 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %17 = cast(%var_3606, dtype="uint8") /* ty=Tensor[(35), uint8] */;
    %18 = cast(%var_3606, dtype="uint8") /* ty=Tensor[(35), uint8] */;
    %19 = cast(%var_3607, dtype="float64") /* ty=Tensor[(44), float64] */;
    %20 = reshape(%17, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
    %21 = reshape(%18, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
    %22 = reshape(%19, newshape=[11, 4]) /* ty=Tensor[(11, 4), float64] */;
    %23 = @func_828(%20, %21, %22) /* ty=(Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) */;
    %24 = mod(%14, %15) /* ty=Tensor[(7, 10, 2), float64] */;
    %25 = %16.0;
    %26 = %23.3;
    (%24, %25, %26, %var_3606, %var_3607)
  };
  %27(%var_3611, %var_3612, %var_3613) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) */
}

def @func_4429(%var_4427: Tensor[(14, 3, 13), float32], %var_4428: Tensor[(105), float64]) -> (Tensor[(14, 7, 15), float64], Tensor[(105), float64], Tensor[(14, 3, 13), int8]) {
  %44 = fn (%var_4391: Tensor[(14, 3, 13), float32], %var_4403: Tensor[(105), float64]) -> (Tensor[(14, 7, 15), float64], Tensor[(105), float64], Tensor[(14, 3, 13), int8]) {
    %28 = cast(%var_4403, dtype="float64") /* ty=Tensor[(105), float64] */;
    %29 = reshape(%28, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
    %30 = @func_4100(%29) /* ty=(Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) */;
    %31 = cast(%var_4391, dtype="float32") /* ty=Tensor[(14, 3, 13), float32] */;
    %32 = erf(%31) /* ty=Tensor[(14, 3, 13), float32] */;
    %33 = cast(%32, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
    %34 = shape_of(%var_4391, dtype="int32") /* ty=Tensor[(3), int32] */;
    %35 = cast(%var_4391, dtype="bool") /* ty=Tensor[(14, 3, 13), bool] */;
    %36 = dyn.reshape(%33, %34, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %37 = greater(%35, %36) /* ty=Tensor[(14, 3, 13), bool] */;
    %38 = cast(%32, dtype="int8") /* ty=Tensor[(14, 3, 13), int8] */;
    %39 = shape_of(%37, dtype="int32") /* ty=Tensor[(3), int32] */;
    %40 = cast(%37, dtype="int8") /* ty=Tensor[(14, 3, 13), int8] */;
    %41 = dyn.reshape(%38, %39, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %42 = %30.1;
    %43 = bitwise_and(%40, %41) /* ty=Tensor[(14, 3, 13), int8] */;
    (%42, %var_4403, %43)
  };
  %44(%var_4427, %var_4428) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(105), float64], Tensor[(14, 3, 13), int8]) */
}

def @func_4565() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_942() -> (Tensor[(7, 10, 2), float64],) {
  %47 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %45 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
    %46 = %45.0;
    (%46,)
  };
  %47() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_8172() -> Tensor[(105), float64] {
  %49 = fn () -> Tensor[(105), float64] {
    %48 = @func_5203() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) */;
    %48.2
  };
  %49() /* ty=Tensor[(105), float64] */
}

def @func_6643() -> (Tensor[(7, 10, 2), float64],) {
  %52 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %50 = @func_5531() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %51 = %50.0;
    (%51,)
  };
  %52() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_7354() -> Tensor[(7, 10, 2), float64] {
  %54 = fn () -> Tensor[(7, 10, 2), float64] {
    %53 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %53.0
  };
  %54() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7506(%var_7504: Tensor[(10, 3, 2), float32], %var_7505: Tensor[(10, 3, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(128, 4), int64], Tensor[(10, 3, 2), bool], Tensor[(10, 3, 2), int16]) {
  %82 = fn (%var_7463: Tensor[(10, 3, 2), float32], %var_7488: Tensor[(10, 3, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(128, 4), int64], Tensor[(10, 3, 2), bool], Tensor[(10, 3, 2), int16]) {
    %55 = cast(meta[relay.Constant][2] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
    %56 = cast(meta[relay.Constant][3] /* ty=Tensor[(128, 4), int64] */, dtype="int64") /* ty=Tensor[(128, 4), int64] */;
    %57 = reshape(%55, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), int64] */;
    %58 = reshape(%56, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int64] */;
    %59 = @func_3405(%57, %58) /* ty=(Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) */;
    %60 = cast(%var_7463, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
    %61 = log2(%60) /* ty=Tensor[(10, 3, 2), float32] */;
    %62 = cast(%61, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
    %63 = erf(%62) /* ty=Tensor[(10, 3, 2), float32] */;
    %64 = cast(%63, dtype="float64") /* ty=Tensor[(10, 3, 2), float64] */;
    %65 = atan(%64) /* ty=Tensor[(10, 3, 2), float64] */;
    %66 = cast(%var_7488, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
    %67 = shape_of(%65, dtype="int32") /* ty=Tensor[(3), int32] */;
    %68 = cast(%65, dtype="bool") /* ty=Tensor[(10, 3, 2), bool] */;
    %69 = dyn.reshape(%66, %67, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %70 = cast(%var_7463, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
    %71 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
    %72 = cast(%61, dtype="float32") /* ty=Tensor[(10, 3, 2), float32] */;
    %73 = dyn.reshape(%70, %71, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
    %74 = floor_mod(%72, %73) /* ty=Tensor[(10, 3, 2), float32] */;
    %75 = cast(%74, dtype="int16") /* ty=Tensor[(10, 3, 2), int16] */;
    %76 = shape_of(%61, dtype="int32") /* ty=Tensor[(3), int32] */;
    %77 = cast(%61, dtype="int16") /* ty=Tensor[(10, 3, 2), int16] */;
    %78 = dyn.reshape(%75, %76, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %79 = %59.1;
    %80 = logical_and(%68, %69) /* ty=Tensor[(10, 3, 2), bool] */;
    %81 = bitwise_and(%77, %78) /* ty=Tensor[(10, 3, 2), int16] */;
    (%79, meta[relay.Constant][2] /* ty=Tensor[(256), int64] */, meta[relay.Constant][3] /* ty=Tensor[(128, 4), int64] */, %80, %81)
  };
  %82(%var_7504, %var_7505) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(128, 4), int64], Tensor[(10, 3, 2), bool], Tensor[(10, 3, 2), int16]) */
}

def @func_3993() -> (Tensor[(4, 8, 9), float64],) {
  %85 = fn () -> (Tensor[(4, 8, 9), float64],) {
    %83 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
    %84 = %83.1;
    (%84,)
  };
  %85() /* ty=(Tensor[(4, 8, 9), float64],) */
}

def @func_7874() -> (Tensor[(7, 10, 2), float64], Tensor[(13, 14), int16]) {
  %86 = @func_4970() /* ty=(Tensor[(13, 14), int16], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(1, 44), float64]) */;
  %87 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
  %88 = %86.0;
  (%87, %88)
}

def @func_4268(%var_4266: Tensor[(108), float32]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) {
  @func_4265(%var_4266) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) */
}

def @func_5947(%var_5945: Tensor[(2, 1, 1), int32], %var_5946: Tensor[(2, 1, 7), int32]) -> (Tensor[(2, 1, 7), int32],) {
  %92 = fn (%var_5935: Tensor[(2, 1, 1), int32], %var_5936: Tensor[(2, 1, 7), int32]) -> (Tensor[(2, 1, 7), int32],) {
    %89 = cast(%var_5935, dtype="int32") /* ty=Tensor[(2, 1, 1), int32] */;
    %90 = cast(%var_5936, dtype="int32") /* ty=Tensor[(2, 1, 7), int32] */;
    %91 = subtract(%89, %90) /* ty=Tensor[(2, 1, 7), int32] */;
    (%91,)
  };
  %92(%var_5945, %var_5946) /* ty=(Tensor[(2, 1, 7), int32],) */
}

def @func_1127(%var_1126: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) {
  %99 = fn (%var_1123: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) {
    %93 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
    %94 = cast(%var_1123, dtype="float64") /* ty=Tensor[(44), float64] */;
    %95 = reshape(%94, newshape=[44]) /* ty=Tensor[(44), float64] */;
    %96 = @func_556(%95) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */;
    %97 = %93.0;
    %98 = %96.3;
    (%97, %98, %var_1123)
  };
  %99(%var_1126) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */
}

def @func_3659(%var_3657: Tensor[(2, 128), int64], %var_3658: Tensor[(512), int64]) -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float32], Tensor[(16, 2, 16), int64], Tensor[(2, 128), int64], Tensor[(512), int64]) {
  @func_3655(%var_3657, %var_3658) /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float32], Tensor[(16, 2, 16), int64], Tensor[(2, 128), int64], Tensor[(512), int64]) */
}

def @func_7331() -> (Tensor[(7, 10, 2), float64],) {
  @func_7329() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_6878() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %104 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %100 = @func_4854() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %101 = @func_759() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %102 = %100.3;
    %103 = %101.0;
    (%102, %103)
  };
  %104() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_7329() -> (Tensor[(7, 10, 2), float64],) {
  %105 = @func_5818() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %106 = %105.0;
  (%106,)
}

def @func_2162() -> Tensor[(7, 10, 2), float64] {
  @func_2160() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7876() -> (Tensor[(7, 10, 2), float64], Tensor[(13, 14), int16]) {
  @func_7874() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(13, 14), int16]) */
}

def @func_6782() -> Tensor[(7, 10, 2), float64] {
  %108 = fn () -> Tensor[(7, 10, 2), float64] {
    %107 = @func_5818() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %107.0
  };
  %108() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_8228(%var_8193: Tensor[(14, 12, 3), float32], %var_8210: Tensor[(2, 1), int32], %var_8211: Tensor[(14), int32]) -> (Tensor[(14, 12, 3), float32], Tensor[(7, 10, 2), float64], Tensor[(2, 1, 7), int32], Tensor[(2, 1), int32], Tensor[(14), int32]) {
  %109 = cast(%var_8193, dtype="float32") /* ty=Tensor[(14, 12, 3), float32] */;
  %110 = cast(%var_8210, dtype="int32") /* ty=Tensor[(2, 1), int32] */;
  %111 = cast(%var_8211, dtype="int32") /* ty=Tensor[(14), int32] */;
  %112 = reshape(%110, newshape=[2, 1, 1]) /* ty=Tensor[(2, 1, 1), int32] */;
  %113 = reshape(%111, newshape=[2, 1, 7]) /* ty=Tensor[(2, 1, 7), int32] */;
  %114 = @func_5944(%112, %113) /* ty=(Tensor[(2, 1, 7), int32],) */;
  %115 = asinh(%109) /* ty=Tensor[(14, 12, 3), float32] */;
  %116 = @func_2386() /* ty=Tensor[(7, 10, 2), float64] */;
  %117 = %114.0;
  (%115, %116, %117, %var_8210, %var_8211)
}

def @func_7967(%var_7965: Tensor[(5, 13, 12), uint16], %var_7966: Tensor[(5, 13, 12), uint16]) -> Tensor[(5, 13, 12), uint16] {
  @func_7963(%var_7965, %var_7966) /* ty=Tensor[(5, 13, 12), uint16] */
}

def @func_5547() -> (Tensor[(7, 10, 2), float64],) {
  @func_5545() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_3443(%var_3431: Tensor[(108), float32]) -> (Tensor[(7, 10, 2), float64], Tensor[(108), float32], Tensor[(9, 12, 1), float32], Tensor[(7, 10, 2), float64], Tensor[(22, 2), float64]) {
  %118 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %119 = cast(%var_3431, dtype="float32") /* ty=Tensor[(108), float32] */;
  %120 = reshape(%119, newshape=[9, 12, 1]) /* ty=Tensor[(9, 12, 1), float32] */;
  %121 = @func_1001(%120) /* ty=Tensor[(9, 12, 1), float32] */;
  %122 = cast(%121, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
  %123 = cast(meta[relay.Constant][4] /* ty=Tensor[(22, 2), float64] */, dtype="float64") /* ty=Tensor[(22, 2), float64] */;
  %124 = reshape(%123, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %125 = @func_1125(%124) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
  %126 = %118.0;
  %127 = log(%122) /* ty=Tensor[(9, 12, 1), float32] */;
  %128 = %125.0;
  (%126, %var_3431, %127, %128, meta[relay.Constant][4] /* ty=Tensor[(22, 2), float64] */)
}

def @func_5308(%var_5307: Tensor[(10, 12, 16), float64]) -> (Tensor[(10, 12, 16), float64],) {
  %131 = fn (%var_5296: Tensor[(10, 12, 16), float64]) -> (Tensor[(10, 12, 16), float64],) {
    %129 = cast(%var_5296, dtype="float64") /* ty=Tensor[(10, 12, 16), float64] */;
    %130 = asinh(%129) /* ty=Tensor[(10, 12, 16), float64] */;
    (%130,)
  };
  %131(%var_5307) /* ty=(Tensor[(10, 12, 16), float64],) */
}

def @func_3257() -> (Tensor[(7, 10, 2), float64],) {
  %133 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %132 = @func_2995() /* ty=Tensor[(7, 10, 2), float64] */;
    (%132,)
  };
  %133() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_4971() -> (Tensor[(13, 14), int16], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(1, 44), float64]) {
  %148 = fn () -> (Tensor[(13, 14), int16], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(1, 44), float64]) {
    %134 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
    %135 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
    %136 = %135.1;
    %137 = cast(%136, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %138 = reshape(%137, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
    %139 = @func_3198(%138) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %140 = @func_3041() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %141 = cast(meta[relay.Constant][5] /* ty=Tensor[(1, 44), float64] */, dtype="float64") /* ty=Tensor[(1, 44), float64] */;
    %142 = reshape(%141, newshape=[44]) /* ty=Tensor[(44), float64] */;
    %143 = @func_1272(%142) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) */;
    %144 = %134.2;
    %145 = %139.0;
    %146 = %140.0;
    %147 = %143.1;
    (%144, %136, %145, %146, %147, meta[relay.Constant][5] /* ty=Tensor[(1, 44), float64] */)
  };
  %148() /* ty=(Tensor[(13, 14), int16], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(1, 44), float64]) */
}

def @func_2836() -> Tensor[(7, 10, 2), float64] {
  %149 = @func_1986() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool]) */;
  %149.2
}

def @func_968() -> Tensor[(7, 10, 2), float64] {
  %150 = fn () -> Tensor[(7, 10, 2), float64] {
    @func_196() /* ty=Tensor[(7, 10, 2), float64] */
  };
  %150() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7551() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  %151 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %152 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %153 = cast(meta[relay.Constant][6] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %154 = reshape(%153, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %155 = @func_556(%154) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */;
  %156 = %151.0;
  %157 = %152.0;
  %158 = %155.4;
  (%156, %157, %158, meta[relay.Constant][6] /* ty=Tensor[(44), float64] */)
}

def @func_7829() -> (Tensor[(7, 10, 2), float64],) {
  %160 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %159 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
    (%159,)
  };
  %160() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_5445(%var_5443: Tensor[(14, 1, 6), int16], %var_5444: Tensor[(14, 6, 6), int16]) -> Tensor[(14, 6, 6), int16] {
  @func_5441(%var_5443, %var_5444) /* ty=Tensor[(14, 6, 6), int16] */
}

def @func_3801() -> Tensor[(7, 10, 2), float64] {
  %161 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %161.0
}

def @func_6130(%var_6117: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), uint16],) {
  %162 = cast(%var_6117, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %163 = rsqrt(%162) /* ty=Tensor[(9, 12, 13), float64] */;
  %164 = cast(%163, dtype="float64") /* ty=Tensor[(9, 12, 13), float64] */;
  %165 = tan(%164) /* ty=Tensor[(9, 12, 13), float64] */;
  %166 = cast(%163, dtype="uint16") /* ty=Tensor[(9, 12, 13), uint16] */;
  %167 = shape_of(%165, dtype="int32") /* ty=Tensor[(3), int32] */;
  %168 = cast(%165, dtype="uint16") /* ty=Tensor[(9, 12, 13), uint16] */;
  %169 = dyn.reshape(%166, %167, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %170 = bitwise_or(%168, %169) /* ty=Tensor[(9, 12, 13), uint16] */;
  (%170,)
}

def @func_1275(%var_1273: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) {
  @func_1272(%var_1273) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) */
}

def @func_7604() -> Tensor[(7, 10, 2), float64] {
  @func_7602() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_8314() -> (Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool]) {
  %171 = @func_2198() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %172 = @func_2545() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
  %173 = %171.0;
  %174 = %172.2;
  (%173, %174)
}

def @func_3779() -> (Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) {
  %175 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
  %176 = cast(meta[relay.Constant][7] /* ty=Tensor[(35), uint8] */, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %177 = cast(meta[relay.Constant][7] /* ty=Tensor[(35), uint8] */, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %178 = cast(meta[relay.Constant][8] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %179 = reshape(%176, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %180 = reshape(%177, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %181 = reshape(%178, newshape=[11, 4]) /* ty=Tensor[(11, 4), float64] */;
  %182 = @func_828(%179, %180, %181) /* ty=(Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) */;
  %183 = %175.1;
  %184 = @func_2836() /* ty=Tensor[(7, 10, 2), float64] */;
  %185 = %182.1;
  %186 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
  (%183, %184, %185, meta[relay.Constant][7] /* ty=Tensor[(35), uint8] */, meta[relay.Constant][8] /* ty=Tensor[(44), float64] */, %186)
}

def @func_7800() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %187 = @func_5970() /* ty=Tensor[(7, 10, 2), float64] */;
  %188 = @func_5722() /* ty=Tensor[(7, 10, 2), float64] */;
  (%187, %188)
}

def @func_3488() -> (Tensor[(7, 10, 2), float32],) {
  %189 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
  %190 = %189.0;
  (%190,)
}

def @func_3895() -> Tensor[(7, 10, 2), float64] {
  %192 = fn () -> Tensor[(7, 10, 2), float64] {
    %191 = @func_3338() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %191.1
  };
  %192() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5788(%var_5787: Tensor[(7, 10, 2), float64]) -> Tensor[(7, 10, 2), bool] {
  %199 = fn (%var_5780: Tensor[(7, 10, 2), float64]) -> Tensor[(7, 10, 2), bool] {
    %193 = @func_5339() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(512), int64]) */;
    %194 = %193.0;
    %195 = cast(%var_5780, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %196 = shape_of(%194, dtype="int32") /* ty=Tensor[(3), int32] */;
    %197 = cast(%194, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %198 = dyn.reshape(%195, %196, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    logical_or(%197, %198) /* ty=Tensor[(7, 10, 2), bool] */
  };
  %199(%var_5787) /* ty=Tensor[(7, 10, 2), bool] */
}

def @func_4342() -> (Tensor[(7, 10, 2), float64],) {
  %202 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %200 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %201 = %200.0;
    (%201,)
  };
  %202() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_4802(%var_4787: Tensor[(4, 13), float64]) -> (Tensor[(4, 13), float64],) {
  %203 = cast(%var_4787, dtype="float64") /* ty=Tensor[(4, 13), float64] */;
  %204 = rsqrt(%203) /* ty=Tensor[(4, 13), float64] */;
  (%204,)
}

def @func_2657(%var_2647: Tensor[(15, 6, 7), bool], %var_2648: Tensor[(15, 6, 7), bool]) -> (Tensor[(15, 6, 7), bool],) {
  %205 = cast(%var_2648, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
  %206 = shape_of(%var_2647, dtype="int32") /* ty=Tensor[(3), int32] */;
  %207 = cast(%var_2647, dtype="bool") /* ty=Tensor[(15, 6, 7), bool] */;
  %208 = dyn.reshape(%205, %206, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %209 = logical_or(%207, %208) /* ty=Tensor[(15, 6, 7), bool] */;
  (%209,)
}

def @func_5256() -> (Tensor[(7, 10, 2), float32],) {
  %212 = fn () -> (Tensor[(7, 10, 2), float32],) {
    %210 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
    %211 = %210.1;
    (%211,)
  };
  %212() /* ty=(Tensor[(7, 10, 2), float32],) */
}

def @func_6759(%var_6714: Tensor[(8, 7, 2), float32], %var_6715: Tensor[(8, 7, 2), float32], %var_6722: Tensor[(140), float64], %var_6723: Tensor[(35), uint8], %var_6724: Tensor[(44), float64]) -> (Tensor[(8, 7, 2), float32], Tensor[(44), float64], Tensor[(140), float64], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32], Tensor[(8, 7, 2), bool], Tensor[(7, 10, 2), float64]) {
  %213 = cast(%var_6715, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %214 = shape_of(%var_6714, dtype="int32") /* ty=Tensor[(3), int32] */;
  %215 = cast(%var_6714, dtype="float32") /* ty=Tensor[(8, 7, 2), float32] */;
  %216 = dyn.reshape(%213, %214, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %217 = cast(%var_6722, dtype="float64") /* ty=Tensor[(140), float64] */;
  %218 = cast(%var_6723, dtype="uint8") /* ty=Tensor[(35), uint8] */;
  %219 = cast(%var_6724, dtype="float64") /* ty=Tensor[(44), float64] */;
  %220 = reshape(%217, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %221 = reshape(%218, newshape=[35]) /* ty=Tensor[(35), uint8] */;
  %222 = reshape(%219, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %223 = @func_3610(%220, %221, %222) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) */;
  %224 = @func_3488() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %225 = cast(meta[relay.Constant][9] /* ty=Tensor[(8, 7, 2), float32] */, dtype="bool") /* ty=Tensor[(8, 7, 2), bool] */;
  %226 = shape_of(%var_6715, dtype="int32") /* ty=Tensor[(3), int32] */;
  %227 = cast(%var_6715, dtype="bool") /* ty=Tensor[(8, 7, 2), bool] */;
  %228 = dyn.reshape(%225, %226, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %229 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %230 = power(%215, %216) /* ty=Tensor[(8, 7, 2), float32] */;
  %231 = %223.4;
  %232 = %224.0;
  %233 = less(%227, %228) /* ty=Tensor[(8, 7, 2), bool] */;
  %234 = %229.0;
  (%230, %231, %var_6722, %var_6723, %var_6724, %232, %233, %234)
}

def @func_8316() -> (Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool]) {
  @func_8314() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool]) */
}

def @func_5441(%var_5428: Tensor[(14, 1, 6), int16], %var_5429: Tensor[(14, 6, 6), int16]) -> Tensor[(14, 6, 6), int16] {
  %235 = cast(%var_5428, dtype="int16") /* ty=Tensor[(14, 1, 6), int16] */;
  %236 = cast(%var_5429, dtype="int16") /* ty=Tensor[(14, 6, 6), int16] */;
  right_shift(%235, %236) /* ty=Tensor[(14, 6, 6), int16] */
}

def @func_6103() -> Tensor[(7, 10, 2), float64] {
  %239 = fn () -> Tensor[(7, 10, 2), float64] {
    %237 = @func_2836() /* ty=Tensor[(7, 10, 2), float64] */;
    %238 = cast(%237, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    sin(%238) /* ty=Tensor[(7, 10, 2), float64] */
  };
  %239() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5707() -> Tensor[(7, 10, 2), float64] {
  %240 = fn () -> Tensor[(7, 10, 2), float64] {
    @func_1507() /* ty=Tensor[(7, 10, 2), float64] */
  };
  %240() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_2099() -> (Tensor[(7, 10, 2), float64],) {
  %243 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %241 = @func_1584() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %242 = %241.1;
    (%242,)
  };
  %243() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_196() -> Tensor[(7, 10, 2), float64] {
  %244 = cast(meta[relay.Constant][10] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  sinh(%244) /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5377() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) {
  %245 = @func_4854() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %246 = @func_2552() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %247 = %245.2;
  %248 = %246.0;
  (%247, %248)
}

def @func_1196() -> (Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) {
  %249 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
  %250 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %251 = cast(%250, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %252 = %249.1;
  %253 = log10(%251) /* ty=Tensor[(7, 10, 2), float32] */;
  (%252, %253)
}

def @func_5855() -> (Tensor[(7, 10, 2), float64],) {
  %254 = @func_3865() /* ty=Tensor[(7, 10, 2), float64] */;
  (%254,)
}

def @func_6243() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) {
  %255 = @func_4009() /* ty=Tensor[(7, 10, 2), float64] */;
  %256 = @func_2635() /* ty=Tensor[(4, 8, 9), float64] */;
  (%255, %256)
}

def @func_7365() -> (Tensor[(4, 8, 9), float64],) {
  %259 = fn () -> (Tensor[(4, 8, 9), float64],) {
    %257 = @func_2959() /* ty=(Tensor[(4, 8, 9), float64],) */;
    %258 = %257.0;
    (%258,)
  };
  %259() /* ty=(Tensor[(4, 8, 9), float64],) */
}

def @func_204() -> Tensor[(7, 10, 2), float64] {
  %260 = fn () -> Tensor[(7, 10, 2), float64] {
    @func_196() /* ty=Tensor[(7, 10, 2), float64] */
  };
  %260() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_3142(%var_3140: Tensor[(1, 7, 15), float64], %var_3141: Tensor[(14, 7, 15), float64]) -> Tensor[(14, 7, 15), float64] {
  %263 = fn (%var_3120: Tensor[(1, 7, 15), float64], %var_3121: Tensor[(14, 7, 15), float64]) -> Tensor[(14, 7, 15), float64] {
    %261 = cast(%var_3120, dtype="float64") /* ty=Tensor[(1, 7, 15), float64] */;
    %262 = cast(%var_3121, dtype="float64") /* ty=Tensor[(14, 7, 15), float64] */;
    floor_divide(%261, %262) /* ty=Tensor[(14, 7, 15), float64] */
  };
  %263(%var_3140, %var_3141) /* ty=Tensor[(14, 7, 15), float64] */
}

def @func_7783(%var_7779: Tensor[(52), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(2, 2, 13), float64], Tensor[(52), float64]) {
  %264 = @func_7281() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %265 = cast(%var_7779, dtype="float64") /* ty=Tensor[(52), float64] */;
  %266 = reshape(%265, newshape=[2, 2, 13]) /* ty=Tensor[(2, 2, 13), float64] */;
  %267 = %264.0;
  %268 = @func_5102(%266) /* ty=Tensor[(2, 2, 13), float64] */;
  (%267, %268, %var_7779)
}

def @func_4997() -> (Tensor[(4, 15, 9), float64],) {
  @func_4995() /* ty=(Tensor[(4, 15, 9), float64],) */
}

def @func_7786(%var_7784: Tensor[(52), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(2, 2, 13), float64], Tensor[(52), float64]) {
  @func_7783(%var_7784) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(2, 2, 13), float64], Tensor[(52), float64]) */
}

def @func_4854() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %269 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %270 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
  %271 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %272 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %273 = %269.0;
  %274 = %270.1;
  %275 = %271.1;
  %276 = %272.0;
  (%273, %274, %275, %276)
}

def @func_559(%var_557: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  @func_556(%var_557) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */
}

def @func_1051() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %282 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %277 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
    %278 = %277.0;
    %279 = cast(%278, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %280 = cos(%279) /* ty=Tensor[(7, 10, 2), float64] */;
    %281 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
    (%280, %281)
  };
  %282() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_861() -> (Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) {
  %283 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 14), int16] */, dtype="int16") /* ty=Tensor[(13, 14), int16] */;
  %284 = cast(meta[relay.Constant][11] /* ty=Tensor[(13, 14), int16] */, dtype="int16") /* ty=Tensor[(13, 14), int16] */;
  %285 = reshape(%283, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
  %286 = reshape(%284, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
  %287 = @func_688(%285, %286) /* ty=(Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) */;
  %288 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
  %289 = %287.1;
  (%288, %289, meta[relay.Constant][11] /* ty=Tensor[(13, 14), int16] */)
}

def @func_3293() -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) {
  @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */
}

def @func_7282() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %296 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %290 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %291 = %290.0;
    %292 = cast(%291, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %293 = reshape(%292, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
    %294 = @func_2934(%293) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %295 = %294.8;
    (%291, %295)
  };
  %296() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_1198() -> (Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) {
  @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */
}

def @func_2701(%var_2699: Tensor[(13, 12, 1), float64]) -> Tensor[(13, 12, 3), bool] {
  @func_2698(%var_2699) /* ty=Tensor[(13, 12, 3), bool] */
}

def @func_4324() -> Tensor[(7, 10, 2), float64] {
  @func_4322() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_1647() -> (Tensor[(7, 10, 2), float64],) {
  %299 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %297 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %298 = %297.0;
    (%298,)
  };
  %299() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_5352() -> (Tensor[(7, 10, 2), float64],) {
  %302 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %300 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %301 = %300.0;
    (%301,)
  };
  %302() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_3781() -> (Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) {
  @func_3779() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_4499(%var_4498: Tensor[(11, 13, 15), float64]) -> Tensor[(11, 13, 15), float64] {
  %304 = fn (%var_4494: Tensor[(11, 13, 15), float64]) -> Tensor[(11, 13, 15), float64] {
    %303 = cast(%var_4494, dtype="float64") /* ty=Tensor[(11, 13, 15), float64] */;
    log2(%303) /* ty=Tensor[(11, 13, 15), float64] */
  };
  %304(%var_4498) /* ty=Tensor[(11, 13, 15), float64] */
}

def @func_7075() -> (Tensor[(7, 10, 2), float64],) {
  %307 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %305 = @func_3041() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %306 = %305.0;
    (%306,)
  };
  %307() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_3865() -> Tensor[(7, 10, 2), float64] {
  @func_1416() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_2733() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) {
  %308 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %309 = %308.0;
  %310 = @func_2635() /* ty=Tensor[(4, 8, 9), float64] */;
  (%309, %310)
}

def @func_5508(%var_5506: float64, %var_5507: Tensor[(1, 10, 6), float64]) -> (Tensor[(1, 10, 6), float64], Tensor[(1, 10, 6), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64]) {
  @func_5504(%var_5506, %var_5507) /* ty=(Tensor[(1, 10, 6), float64], Tensor[(1, 10, 6), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64]) */
}

def @func_8062(%var_8061: Tensor[(44), float64]) -> (Tensor[(4, 8, 9), float64], Tensor[(35), uint8], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) {
  %322 = fn (%var_8007: Tensor[(44), float64]) -> (Tensor[(4, 8, 9), float64], Tensor[(35), uint8], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) {
    %311 = @func_6243() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
    %312 = cast(meta[relay.Constant][12] /* ty=Tensor[(7, 5), uint8] */, dtype="uint8") /* ty=Tensor[(7, 5), uint8] */;
    %313 = cast(%var_8007, dtype="float64") /* ty=Tensor[(44), float64] */;
    %314 = reshape(%312, newshape=[35]) /* ty=Tensor[(35), uint8] */;
    %315 = reshape(%313, newshape=[1, 44]) /* ty=Tensor[(1, 44), float64] */;
    %316 = @func_7204(%314, %315) /* ty=(Tensor[(11, 3), float32], Tensor[(35), uint8], Tensor[(1, 140), float64], Tensor[(35), uint8], Tensor[(1, 44), float64], Tensor[(7, 10, 2), float64]) */;
    %317 = @func_3247() /* ty=(Tensor[(7, 10, 2), bool],) */;
    %318 = %311.1;
    %319 = %316.3;
    %320 = %317.0;
    %321 = @func_2995() /* ty=Tensor[(7, 10, 2), float64] */;
    (%318, %319, meta[relay.Constant][12] /* ty=Tensor[(7, 5), uint8] */, %var_8007, %320, %321)
  };
  %322(%var_8061) /* ty=(Tensor[(4, 8, 9), float64], Tensor[(35), uint8], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */
}

def @func_5972() -> Tensor[(7, 10, 2), float64] {
  @func_5970() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7756(%var_7754: Tensor[(4, 6, 3), int16], %var_7755: Tensor[(4, 6, 3), int16]) -> Tensor[(4, 6, 3), int16] {
  %327 = fn (%var_7748: Tensor[(4, 6, 3), int16], %var_7749: Tensor[(4, 6, 3), int16]) -> Tensor[(4, 6, 3), int16] {
    %323 = cast(%var_7749, dtype="int16") /* ty=Tensor[(4, 6, 3), int16] */;
    %324 = shape_of(%var_7748, dtype="int32") /* ty=Tensor[(3), int32] */;
    %325 = cast(%var_7748, dtype="int16") /* ty=Tensor[(4, 6, 3), int16] */;
    %326 = dyn.reshape(%323, %324, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    logical_xor(%325, %326) /* ty=Tensor[(4, 6, 3), int16] */
  };
  %327(%var_7754, %var_7755) /* ty=Tensor[(4, 6, 3), int16] */
}

def @func_3089(%var_3051: Tensor[(3, 12, 10), float64]) -> (Tensor[(7, 10, 2), bool], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float64]) {
  %328 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %329 = cast(%var_3051, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %330 = exp(%329) /* ty=Tensor[(3, 12, 10), float64] */;
  %331 = cast(%330, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
  %332 = cast(%330, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %333 = asinh(%332) /* ty=Tensor[(3, 12, 10), float64] */;
  %334 = cast(%333, dtype="float32") /* ty=Tensor[(3, 12, 10), float32] */;
  %335 = cast(%330, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %336 = shape_of(%var_3051, dtype="int32") /* ty=Tensor[(3), int32] */;
  %337 = cast(%var_3051, dtype="float64") /* ty=Tensor[(3, 12, 10), float64] */;
  %338 = dyn.reshape(%335, %336, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %339 = %328.0;
  %340 = erf(%331) /* ty=Tensor[(3, 12, 10), float32] */;
  %341 = sin(%334) /* ty=Tensor[(3, 12, 10), float32] */;
  %342 = divide(%337, %338) /* ty=Tensor[(3, 12, 10), float64] */;
  (%339, %340, %341, %342)
}

def @func_2636() -> Tensor[(4, 8, 9), float64] {
  %349 = fn () -> Tensor[(4, 8, 9), float64] {
    %343 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 8, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 8, 9), float32] */;
    %344 = atanh(%343) /* ty=Tensor[(4, 8, 9), float32] */;
    %345 = cast(meta[relay.Constant][13] /* ty=Tensor[(4, 8, 9), float32] */, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
    %346 = shape_of(%344, dtype="int32") /* ty=Tensor[(3), int32] */;
    %347 = cast(%344, dtype="float64") /* ty=Tensor[(4, 8, 9), float64] */;
    %348 = dyn.reshape(%345, %346, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_mod(%347, %348) /* ty=Tensor[(4, 8, 9), float64] */
  };
  %349() /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_4995() -> (Tensor[(4, 15, 9), float64],) {
  %350 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
  %351 = %350.1;
  (%351,)
}

def @func_1554() -> (Tensor[(7, 10, 2), float64],) {
  @func_1552() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_2466() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %355 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %352 = @func_1584() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %353 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
    %354 = %352.1;
    (%353, %354)
  };
  %355() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_688(%var_628: Tensor[(14, 13, 1), int16], %var_629: Tensor[(14, 13, 1), int16]) -> (Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) {
  %356 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %357 = cast(%var_629, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %358 = log10(%357) /* ty=Tensor[(14, 13, 1), float32] */;
  %359 = cast(%var_629, dtype="bool") /* ty=Tensor[(14, 13, 1), bool] */;
  %360 = shape_of(%var_628, dtype="int32") /* ty=Tensor[(3), int32] */;
  %361 = cast(%var_628, dtype="bool") /* ty=Tensor[(14, 13, 1), bool] */;
  %362 = dyn.reshape(%359, %360, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %363 = not_equal(%361, %362) /* ty=Tensor[(14, 13, ?), bool] */;
  %364 = cast(%363, dtype="float32") /* ty=Tensor[(14, 13, ?), float32] */;
  %365 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %366 = cast(%358, dtype="float32") /* ty=Tensor[(14, 13, 1), float32] */;
  %367 = dyn.reshape(%364, %365, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %368 = floor_mod(%366, %367) /* ty=Tensor[(14, 13, ?), float32] */;
  %369 = cast(%368, dtype="uint16") /* ty=Tensor[(14, 13, ?), uint16] */;
  %370 = shape_of(%358, dtype="int32") /* ty=Tensor[(3), int32] */;
  %371 = cast(%358, dtype="uint16") /* ty=Tensor[(14, 13, 1), uint16] */;
  %372 = dyn.reshape(%369, %370, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %373 = %356.1;
  %374 = right_shift(%371, %372) /* ty=Tensor[(14, 13, ?), uint16] */;
  (%373, %374)
}

def @func_5203() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) {
  %375 = cast(meta[relay.Constant][14] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
  %376 = reshape(%375, newshape=[7, 15]) /* ty=Tensor[(7, 15), float64] */;
  %377 = @func_4100(%376) /* ty=(Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) */;
  %378 = cast(meta[relay.Constant][15] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %379 = reshape(%378, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %380 = @func_1125(%379) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
  %381 = @func_2160() /* ty=Tensor[(7, 10, 2), float64] */;
  %382 = %377.2;
  %383 = %380.0;
  (%381, %382, meta[relay.Constant][14] /* ty=Tensor[(105), float64] */, %383, meta[relay.Constant][15] /* ty=Tensor[(44), float64] */)
}

def @func_6699(%var_6696: Tensor[(10, 1), int8], %var_6697: Tensor[(10, 1), int8], %var_6698: Tensor[(44), float64]) -> (Tensor[(10, ?), int8], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) {
  @func_6694(%var_6696, %var_6697, %var_6698) /* ty=(Tensor[(10, ?), int8], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */
}

def @func_3408(%var_3406: Tensor[(16, 1, 16), int64], %var_3407: Tensor[(16, 2, 16), int64]) -> (Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) {
  %388 = fn (%var_3391: Tensor[(16, 1, 16), int64], %var_3392: Tensor[(16, 2, 16), int64]) -> (Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) {
    %384 = cast(%var_3391, dtype="int64") /* ty=Tensor[(16, 1, 16), int64] */;
    %385 = cast(%var_3392, dtype="int64") /* ty=Tensor[(16, 2, 16), int64] */;
    %386 = logical_xor(%384, %385) /* ty=Tensor[(16, 2, 16), int64] */;
    %387 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
    (%386, %387)
  };
  %388(%var_3406, %var_3407) /* ty=(Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) */
}

def @func_2995() -> Tensor[(7, 10, 2), float64] {
  @func_1703() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_4671() -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) {
  %392 = fn () -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) {
    %389 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
    %390 = %389.1;
    %391 = @func_3894() /* ty=Tensor[(7, 10, 2), float64] */;
    (%390, %391)
  };
  %392() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */
}

def @func_6596() -> (Tensor[(7, 10, 2), float64],) {
  %393 = @func_4854() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %394 = %393.2;
  (%394,)
}

def @func_6391() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %403 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %395 = @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */;
    %396 = @func_912() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */;
    %397 = @func_4120() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
    %398 = @func_5855() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %399 = %395.0;
    %400 = %396.0;
    %401 = %397.1;
    %402 = %398.0;
    (%399, %400, %401, %402)
  };
  %403() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_1631() -> (Tensor[(7, 10, 2), float64],) {
  @func_1629() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_1347(%var_1346: Tensor[(45, 2), uint64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(44), float64], Tensor[(44), float64], Tensor[(5, 9, 2), uint64], Tensor[(45), uint64], Tensor[(45, 2), uint64]) {
  %419 = fn (%var_1331: Tensor[(45, 2), uint64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(44), float64], Tensor[(44), float64], Tensor[(5, 9, 2), uint64], Tensor[(45), uint64], Tensor[(45, 2), uint64]) {
    %404 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %405 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
    %406 = cast(%405, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
    %407 = cast(meta[relay.Constant][16] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
    %408 = reshape(%407, newshape=[44]) /* ty=Tensor[(44), float64] */;
    %409 = @func_1125(%408) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
    %410 = cast(meta[relay.Constant][17] /* ty=Tensor[(45), uint64] */, dtype="uint64") /* ty=Tensor[(45), uint64] */;
    %411 = cast(%var_1331, dtype="uint64") /* ty=Tensor[(45, 2), uint64] */;
    %412 = reshape(%410, newshape=[5, 9, 1]) /* ty=Tensor[(5, 9, 1), uint64] */;
    %413 = reshape(%411, newshape=[5, 9, 2]) /* ty=Tensor[(5, 9, 2), uint64] */;
    %414 = @func_1090(%412, %413) /* ty=(Tensor[(5, 9, 2), uint64],) */;
    %415 = %404.0;
    %416 = atanh(%406) /* ty=Tensor[(7, 10, 2), float32] */;
    %417 = %409.2;
    %418 = %414.0;
    (%415, %416, %417, meta[relay.Constant][16] /* ty=Tensor[(44), float64] */, %418, meta[relay.Constant][17] /* ty=Tensor[(45), uint64] */, %var_1331)
  };
  %419(%var_1346) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(44), float64], Tensor[(44), float64], Tensor[(5, 9, 2), uint64], Tensor[(45), uint64], Tensor[(45, 2), uint64]) */
}

def @func_7553() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  @func_7551() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */
}

def @func_8264() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %424 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %420 = @func_7800() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %421 = @func_5855() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %422 = %420.0;
    %423 = %421.0;
    (%422, %423)
  };
  %424() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_832(%var_829: Tensor[(5, 7), uint8], %var_830: Tensor[(5, 7), uint8], %var_831: Tensor[(11, 4), float64]) -> (Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) {
  %434 = fn (%var_801: Tensor[(5, 7), uint8], %var_802: Tensor[(5, 7), uint8], %var_813: Tensor[(11, 4), float64]) -> (Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) {
    %425 = cast(%var_802, dtype="bool") /* ty=Tensor[(5, 7), bool] */;
    %426 = shape_of(%var_801, dtype="int32") /* ty=Tensor[(2), int32] */;
    %427 = cast(%var_801, dtype="bool") /* ty=Tensor[(5, 7), bool] */;
    %428 = dyn.reshape(%425, %426, newshape=[]) /* ty=Tensor[(?, ?), bool] */;
    %429 = cast(%var_813, dtype="float64") /* ty=Tensor[(11, 4), float64] */;
    %430 = reshape(%429, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
    %431 = less_equal(%427, %428) /* ty=Tensor[(5, 7), bool] */;
    %432 = @func_459(%430) /* ty=Tensor[(?, 4, 11), bool] */;
    %433 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
    (%431, %432, %var_813, %433)
  };
  %434(%var_829, %var_830, %var_831) /* ty=(Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_2661(%var_2659: Tensor[(15, 6, 7), bool], %var_2660: Tensor[(15, 6, 7), bool]) -> (Tensor[(15, 6, 7), bool],) {
  @func_2657(%var_2659, %var_2660) /* ty=(Tensor[(15, 6, 7), bool],) */
}

def @func_5563() -> (Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64]) {
  @func_5561() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_697() -> (Tensor[(7, 10, 2), float64],) {
  %436 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %435 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
    (%435,)
  };
  %436() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_6694(%var_6652: Tensor[(10, 1), int8], %var_6653: Tensor[(10, 1), int8], %var_6676: Tensor[(44), float64]) -> (Tensor[(10, ?), int8], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) {
  %437 = cast(%var_6653, dtype="int8") /* ty=Tensor[(10, 1), int8] */;
  %438 = shape_of(%var_6652, dtype="int32") /* ty=Tensor[(2), int32] */;
  %439 = cast(%var_6652, dtype="int8") /* ty=Tensor[(10, 1), int8] */;
  %440 = dyn.reshape(%437, %438, newshape=[]) /* ty=Tensor[(?, ?), int8] */;
  %441 = cast(%var_6676, dtype="float64") /* ty=Tensor[(44), float64] */;
  %442 = reshape(%441, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %443 = @func_1125(%442) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(44), float64]) */;
  %444 = bitwise_xor(%439, %440) /* ty=Tensor[(10, ?), int8] */;
  %445 = %443.1;
  (%444, %445, %var_6676)
}

def @func_7412(%var_7411: Tensor[(546), float32]) -> (Tensor[(?, 4, 11), bool], Tensor[(105), float64], Tensor[(546), float32], Tensor[(105), float64], Tensor[(7, 10, 2), bool], Tensor[(4, 8, 9), float64]) {
  %457 = fn (%var_7386: Tensor[(546), float32]) -> (Tensor[(?, 4, 11), bool], Tensor[(105), float64], Tensor[(546), float32], Tensor[(105), float64], Tensor[(7, 10, 2), bool], Tensor[(4, 8, 9), float64]) {
    %446 = @func_7263() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */;
    %447 = cast(%var_7386, dtype="float32") /* ty=Tensor[(546), float32] */;
    %448 = cast(meta[relay.Constant][18] /* ty=Tensor[(105), float64] */, dtype="float64") /* ty=Tensor[(105), float64] */;
    %449 = reshape(%447, newshape=[14, 3, 13]) /* ty=Tensor[(14, 3, 13), float32] */;
    %450 = reshape(%448, newshape=[105]) /* ty=Tensor[(105), float64] */;
    %451 = @func_4426(%449, %450) /* ty=(Tensor[(14, 7, 15), float64], Tensor[(105), float64], Tensor[(14, 3, 13), int8]) */;
    %452 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
    %453 = %446.1;
    %454 = %451.1;
    %455 = %452.0;
    %456 = @func_5691() /* ty=Tensor[(4, 8, 9), float64] */;
    (%453, %454, %var_7386, meta[relay.Constant][18] /* ty=Tensor[(105), float64] */, %455, %456)
  };
  %457(%var_7411) /* ty=(Tensor[(?, 4, 11), bool], Tensor[(105), float64], Tensor[(546), float32], Tensor[(105), float64], Tensor[(7, 10, 2), bool], Tensor[(4, 8, 9), float64]) */
}

def @func_1003(%var_1002: Tensor[(9, 12, 1), float32]) -> Tensor[(9, 12, 1), float32] {
  %459 = fn (%var_997: Tensor[(9, 12, 1), float32]) -> Tensor[(9, 12, 1), float32] {
    %458 = cast(%var_997, dtype="float32") /* ty=Tensor[(9, 12, 1), float32] */;
    atanh(%458) /* ty=Tensor[(9, 12, 1), float32] */
  };
  %459(%var_1002) /* ty=Tensor[(9, 12, 1), float32] */
}

def @func_3198(%var_3159: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %460 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  %461 = cast(%var_3159, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %462 = shape_of(%460, dtype="int32") /* ty=Tensor[(3), int32] */;
  %463 = cast(%460, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %464 = dyn.reshape(%461, %462, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
  %465 = @func_1629() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %466 = divide(%463, %464) /* ty=Tensor[(7, 10, 2), float64] */;
  %467 = %465.0;
  (%466, %467)
}

def @func_3340() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  @func_3338() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_3470() -> Tensor[(7, 10, 2), float64] {
  %474 = fn () -> Tensor[(7, 10, 2), float64] {
    %468 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %469 = %468.1;
    %470 = cast(meta[relay.Constant][19] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %471 = shape_of(%469, dtype="int32") /* ty=Tensor[(3), int32] */;
    %472 = cast(%469, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %473 = dyn.reshape(%470, %471, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    floor_divide(%472, %473) /* ty=Tensor[(7, 10, 2), float64] */
  };
  %474() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5737() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), int8], Tensor[(288), float64]) {
  @func_5735() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), int8], Tensor[(288), float64]) */
}

def @func_5693() -> Tensor[(4, 8, 9), float64] {
  @func_5691() /* ty=Tensor[(4, 8, 9), float64] */
}

def @func_4805(%var_4803: Tensor[(4, 13), float64]) -> (Tensor[(4, 13), float64],) {
  @func_4802(%var_4803) /* ty=(Tensor[(4, 13), float64],) */
}

def @func_2960() -> (Tensor[(4, 8, 9), float64],) {
  %477 = fn () -> (Tensor[(4, 8, 9), float64],) {
    %475 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
    %476 = %475.1;
    (%476,)
  };
  %477() /* ty=(Tensor[(4, 8, 9), float64],) */
}

def @func_5087() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %478 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %479 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %480 = @func_4563() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %481 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  %482 = %478.0;
  %483 = %479.0;
  %484 = %480.1;
  (%481, %482, %483, %484)
}

def @func_4563() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %485 = @func_3842() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %486 = %485.0;
  %487 = @func_4322() /* ty=Tensor[(7, 10, 2), float64] */;
  (%486, %487)
}

def @func_5857() -> (Tensor[(7, 10, 2), float64],) {
  @func_5855() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_5735() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), int8], Tensor[(288), float64]) {
  %488 = cast(meta[relay.Constant][20] /* ty=Tensor[(288), float64] */, dtype="float64") /* ty=Tensor[(288), float64] */;
  %489 = reshape(%488, newshape=[4, 8, 9]) /* ty=Tensor[(4, 8, 9), float64] */;
  %490 = @func_4351(%489) /* ty=(Tensor[(4, 8, 9), int8],) */;
  %491 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %492 = %490.0;
  (%491, %492, meta[relay.Constant][20] /* ty=Tensor[(288), float64] */)
}

def @func_7207(%var_7205: Tensor[(35), uint8], %var_7206: Tensor[(1, 44), float64]) -> (Tensor[(11, 3), float32], Tensor[(35), uint8], Tensor[(1, 140), float64], Tensor[(35), uint8], Tensor[(1, 44), float64], Tensor[(7, 10, 2), float64]) {
  %507 = fn (%var_7190: Tensor[(35), uint8], %var_7191: Tensor[(1, 44), float64]) -> (Tensor[(11, 3), float32], Tensor[(35), uint8], Tensor[(1, 140), float64], Tensor[(35), uint8], Tensor[(1, 44), float64], Tensor[(7, 10, 2), float64]) {
    %493 = cast(meta[relay.Constant][21] /* ty=Tensor[(11, 3), float32] */, dtype="float32") /* ty=Tensor[(11, 3), float32] */;
    %494 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 140), float64] */, dtype="float64") /* ty=Tensor[(1, 140), float64] */;
    %495 = cast(%var_7190, dtype="uint8") /* ty=Tensor[(35), uint8] */;
    %496 = cast(%var_7191, dtype="float64") /* ty=Tensor[(1, 44), float64] */;
    %497 = reshape(%494, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
    %498 = reshape(%495, newshape=[35]) /* ty=Tensor[(35), uint8] */;
    %499 = reshape(%496, newshape=[44]) /* ty=Tensor[(44), float64] */;
    %500 = @func_3610(%497, %498, %499) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(35), uint8], Tensor[(44), float64]) */;
    %501 = cast(meta[relay.Constant][22] /* ty=Tensor[(1, 140), float64] */, dtype="float64") /* ty=Tensor[(1, 140), float64] */;
    %502 = reshape(%501, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
    %503 = @func_3198(%502) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %504 = sin(%493) /* ty=Tensor[(11, 3), float32] */;
    %505 = %500.3;
    %506 = %503.0;
    (%504, %505, meta[relay.Constant][22] /* ty=Tensor[(1, 140), float64] */, %var_7190, %var_7191, %506)
  };
  %507(%var_7205, %var_7206) /* ty=(Tensor[(11, 3), float32], Tensor[(35), uint8], Tensor[(1, 140), float64], Tensor[(35), uint8], Tensor[(1, 44), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_2997() -> Tensor[(7, 10, 2), float64] {
  @func_2995() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_6598() -> (Tensor[(7, 10, 2), float64],) {
  @func_6596() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_4322() -> Tensor[(7, 10, 2), float64] {
  @func_2386() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_3867() -> Tensor[(7, 10, 2), float64] {
  @func_3865() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_1410() -> (Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %519 = fn () -> (Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %508 = @func_759() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %509 = %508.0;
    %510 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 10, 2), float64] */, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %511 = shape_of(%509, dtype="int32") /* ty=Tensor[(3), int32] */;
    %512 = cast(%509, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %513 = dyn.reshape(%510, %511, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %514 = cast(meta[relay.Constant][23] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %515 = @func_1050() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %516 = greater_equal(%512, %513) /* ty=Tensor[(7, 10, 2), bool] */;
    %517 = acosh(%514) /* ty=Tensor[(7, 10, 2), float64] */;
    %518 = %515.0;
    (%516, %517, %518)
  };
  %519() /* ty=(Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_1986() -> (Tensor[(7, 10, 2), float64], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool]) {
  %520 = cast(meta[relay.Constant][24] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
  %521 = reshape(%520, newshape=[44]) /* ty=Tensor[(44), float64] */;
  %522 = @func_1272(%521) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) */;
  %523 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %524 = %523.1;
  %525 = cast(%524, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %526 = acos(%525) /* ty=Tensor[(7, 10, 2), float64] */;
  %527 = cast(meta[relay.Constant][25] /* ty=Tensor[(7, 10, 2), float64] */, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %528 = shape_of(%526, dtype="int32") /* ty=Tensor[(3), int32] */;
  %529 = cast(%526, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
  %530 = dyn.reshape(%527, %528, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %531 = %522.0;
  %532 = @func_1416() /* ty=Tensor[(7, 10, 2), float64] */;
  %533 = less(%529, %530) /* ty=Tensor[(7, 10, 2), bool] */;
  (%531, meta[relay.Constant][24] /* ty=Tensor[(44), float64] */, %532, %533)
}

def @func_6863(%var_6861: Tensor[(6, 12, 6), bool], %var_6862: Tensor[(6, 12, 6), bool]) -> (Tensor[(6, 12, 6), bool], Tensor[(6, 12, 6), float32]) {
  @func_6859(%var_6861, %var_6862) /* ty=(Tensor[(6, 12, 6), bool], Tensor[(6, 12, 6), float32]) */
}

def @func_3655(%var_3641: Tensor[(2, 128), int64], %var_3642: Tensor[(512), int64]) -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float32], Tensor[(16, 2, 16), int64], Tensor[(2, 128), int64], Tensor[(512), int64]) {
  %534 = @func_3488() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %535 = @func_1639() /* ty=(Tensor[(7, 10, 2), bool],) */;
  %536 = @func_2552() /* ty=(Tensor[(7, 10, 2), float32],) */;
  %537 = cast(%var_3641, dtype="int64") /* ty=Tensor[(2, 128), int64] */;
  %538 = cast(%var_3642, dtype="int64") /* ty=Tensor[(512), int64] */;
  %539 = reshape(%537, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), int64] */;
  %540 = reshape(%538, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int64] */;
  %541 = @func_3405(%539, %540) /* ty=(Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) */;
  %542 = %534.0;
  %543 = %535.0;
  %544 = %536.0;
  %545 = %541.0;
  (%542, %543, %544, %545, %var_3641, %var_3642)
}

def @func_2838() -> Tensor[(7, 10, 2), float64] {
  @func_2836() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_6310(%var_6308: Tensor[(140), float64]) -> (Tensor[(44), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64], Tensor[(288), float64]) {
  @func_6307(%var_6308) /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64], Tensor[(288), float64]) */
}

def @func_5723() -> Tensor[(7, 10, 2), float64] {
  %547 = fn () -> Tensor[(7, 10, 2), float64] {
    %546 = @func_4341() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %546.0
  };
  %547() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_1640() -> (Tensor[(7, 10, 2), bool],) {
  %550 = fn () -> (Tensor[(7, 10, 2), bool],) {
    %548 = @func_1409() /* ty=(Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %549 = %548.0;
    (%549,)
  };
  %550() /* ty=(Tensor[(7, 10, 2), bool],) */
}

def @func_7617() -> Tensor[(4, 16, 1), float32] {
  %552 = fn () -> Tensor[(4, 16, 1), float32] {
    %551 = cast(meta[relay.Constant][26] /* ty=Tensor[(4, 16, 1), float32] */, dtype="float32") /* ty=Tensor[(4, 16, 1), float32] */;
    atan(%551) /* ty=Tensor[(4, 16, 1), float32] */
  };
  %552() /* ty=Tensor[(4, 16, 1), float32] */
}

def @func_7963(%var_7956: Tensor[(5, 13, 12), uint16], %var_7957: Tensor[(5, 13, 12), uint16]) -> Tensor[(5, 13, 12), uint16] {
  %553 = cast(%var_7957, dtype="uint16") /* ty=Tensor[(5, 13, 12), uint16] */;
  %554 = shape_of(%var_7956, dtype="int32") /* ty=Tensor[(3), int32] */;
  %555 = cast(%var_7956, dtype="uint16") /* ty=Tensor[(5, 13, 12), uint16] */;
  %556 = dyn.reshape(%553, %554, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  minimum(%555, %556) /* ty=Tensor[(5, 13, 12), uint16] */
}

def @func_5532() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %561 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %557 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %558 = @func_2386() /* ty=Tensor[(7, 10, 2), float64] */;
    %559 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
    %560 = %557.1;
    (%558, %559, %560)
  };
  %561() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_7945(%var_7944: Tensor[(4, 16, 1), float32]) -> (Tensor[(4, 16, ?), int16],) {
  %568 = fn (%var_7934: Tensor[(4, 16, 1), float32]) -> (Tensor[(4, 16, ?), int16],) {
    %562 = @func_7616() /* ty=Tensor[(4, 16, 1), float32] */;
    %563 = cast(%var_7934, dtype="int16") /* ty=Tensor[(4, 16, 1), int16] */;
    %564 = shape_of(%562, dtype="int32") /* ty=Tensor[(3), int32] */;
    %565 = cast(%562, dtype="int16") /* ty=Tensor[(4, 16, 1), int16] */;
    %566 = dyn.reshape(%563, %564, newshape=[]) /* ty=Tensor[(?, ?, ?), int16] */;
    %567 = left_shift(%565, %566) /* ty=Tensor[(4, 16, ?), int16] */;
    (%567,)
  };
  %568(%var_7944) /* ty=(Tensor[(4, 16, ?), int16],) */
}

def @func_4195() -> (Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(15, 6, 7), bool], Tensor[(630), bool]) {
  %582 = fn () -> (Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(15, 6, 7), bool], Tensor[(630), bool]) {
    %569 = @func_4120() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
    %570 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %571 = @func_2552() /* ty=(Tensor[(7, 10, 2), float32],) */;
    %572 = cast(meta[relay.Constant][27] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %573 = cast(meta[relay.Constant][27] /* ty=Tensor[(630), bool] */, dtype="bool") /* ty=Tensor[(630), bool] */;
    %574 = reshape(%572, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
    %575 = reshape(%573, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
    %576 = @func_2657(%574, %575) /* ty=(Tensor[(15, 6, 7), bool],) */;
    %577 = %569.0;
    %578 = %570.0;
    %579 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
    %580 = %571.0;
    %581 = %576.0;
    (%577, %578, %579, %580, %581, meta[relay.Constant][27] /* ty=Tensor[(630), bool] */)
  };
  %582() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(15, 6, 7), bool], Tensor[(630), bool]) */
}

def @func_7602() -> Tensor[(7, 10, 2), float64] {
  %583 = @func_3779() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %583.5
}

def @func_3042() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %586 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %584 = @func_1507() /* ty=Tensor[(7, 10, 2), float64] */;
    %585 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
    (%584, %585)
  };
  %586() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_1417() -> Tensor[(7, 10, 2), float64] {
  %587 = fn () -> Tensor[(7, 10, 2), float64] {
    @func_196() /* ty=Tensor[(7, 10, 2), float64] */
  };
  %587() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_761() -> (Tensor[(7, 10, 2), float64],) {
  @func_759() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_2198() -> (Tensor[(7, 10, 2), float64],) {
  %588 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  (%588,)
}

def @func_6859(%var_6835: Tensor[(6, 12, 6), bool], %var_6836: Tensor[(6, 12, 6), bool]) -> (Tensor[(6, 12, 6), bool], Tensor[(6, 12, 6), float32]) {
  %589 = cast(%var_6836, dtype="bool") /* ty=Tensor[(6, 12, 6), bool] */;
  %590 = shape_of(%var_6835, dtype="int32") /* ty=Tensor[(3), int32] */;
  %591 = cast(%var_6835, dtype="bool") /* ty=Tensor[(6, 12, 6), bool] */;
  %592 = dyn.reshape(%589, %590, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
  %593 = cast(%var_6836, dtype="float32") /* ty=Tensor[(6, 12, 6), float32] */;
  %594 = logical_and(%591, %592) /* ty=Tensor[(6, 12, 6), bool] */;
  %595 = rsqrt(%593) /* ty=Tensor[(6, 12, 6), float32] */;
  (%594, %595)
}

def @func_1585() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %599 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %596 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %597 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
    %598 = %596.0;
    (%597, %598)
  };
  %599() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_3446(%var_3444: Tensor[(108), float32]) -> (Tensor[(7, 10, 2), float64], Tensor[(108), float32], Tensor[(9, 12, 1), float32], Tensor[(7, 10, 2), float64], Tensor[(22, 2), float64]) {
  @func_3443(%var_3444) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(108), float32], Tensor[(9, 12, 1), float32], Tensor[(7, 10, 2), float64], Tensor[(22, 2), float64]) */
}

def @func_3844() -> (Tensor[(7, 10, 2), float64],) {
  @func_3842() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_6018(%var_6016: Tensor[(8, 15, 8), float32], %var_6017: Tensor[(8, 15, 8), float32]) -> (Tensor[(8, 15, 8), float32], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) {
  @func_6014(%var_6016, %var_6017) /* ty=(Tensor[(8, 15, 8), float32], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) */
}

def @func_1988() -> (Tensor[(7, 10, 2), float64], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool]) {
  @func_1986() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool]) */
}

def @func_5970() -> Tensor[(7, 10, 2), float64] {
  %600 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %600.0
}

def @func_2160() -> Tensor[(7, 10, 2), float64] {
  %601 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %601.0
}

def @func_7265() -> (Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  @func_7263() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) */
}

def @func_2071(%var_2070: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) {
  %617 = fn (%var_2060: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) {
    %602 = @func_1552() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %603 = %602.0;
    %604 = cast(meta[relay.Constant][28] /* ty=Tensor[(7, 10, 2), float64] */, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %605 = shape_of(%603, dtype="int32") /* ty=Tensor[(3), int32] */;
    %606 = cast(%603, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %607 = dyn.reshape(%604, %605, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %608 = cast(%603, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %609 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
    %610 = cast(%var_2060, dtype="uint16") /* ty=Tensor[(7, 10, 2), uint16] */;
    %611 = shape_of(%609, dtype="int32") /* ty=Tensor[(3), int32] */;
    %612 = cast(%609, dtype="uint16") /* ty=Tensor[(7, 10, 2), uint16] */;
    %613 = dyn.reshape(%610, %611, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
    %614 = floor_mod(%606, %607) /* ty=Tensor[(7, 10, 2), float64] */;
    %615 = sigmoid(%608) /* ty=Tensor[(7, 10, 2), float64] */;
    %616 = logical_xor(%612, %613) /* ty=Tensor[(7, 10, 2), uint16] */;
    (%614, %615, %616)
  };
  %617(%var_2070) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) */
}

def @func_1703() -> Tensor[(7, 10, 2), float64] {
  %618 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %618.2
}

def @func_2370(%var_2368: Tensor[(13, 6, 6), float32], %var_2369: Tensor[(182), int16]) -> (Tensor[(13, 6, 6), int64], Tensor[(7, 10, 2), bool], Tensor[(182), int16]) {
  %634 = fn (%var_2342: Tensor[(13, 6, 6), float32], %var_2364: Tensor[(182), int16]) -> (Tensor[(13, 6, 6), int64], Tensor[(7, 10, 2), bool], Tensor[(182), int16]) {
    %619 = cast(%var_2342, dtype="float64") /* ty=Tensor[(13, 6, 6), float64] */;
    %620 = asin(%619) /* ty=Tensor[(13, 6, 6), float64] */;
    %621 = cast(%var_2342, dtype="float32") /* ty=Tensor[(13, 6, 6), float32] */;
    %622 = sinh(%621) /* ty=Tensor[(13, 6, 6), float32] */;
    %623 = cast(%622, dtype="int64") /* ty=Tensor[(13, 6, 6), int64] */;
    %624 = shape_of(%620, dtype="int32") /* ty=Tensor[(3), int32] */;
    %625 = cast(%620, dtype="int64") /* ty=Tensor[(13, 6, 6), int64] */;
    %626 = dyn.reshape(%623, %624, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %627 = cast(%var_2364, dtype="int16") /* ty=Tensor[(182), int16] */;
    %628 = cast(%var_2364, dtype="int16") /* ty=Tensor[(182), int16] */;
    %629 = reshape(%627, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
    %630 = reshape(%628, newshape=[14, 13, 1]) /* ty=Tensor[(14, 13, 1), int16] */;
    %631 = @func_688(%629, %630) /* ty=(Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) */;
    %632 = bitwise_xor(%625, %626) /* ty=Tensor[(13, 6, 6), int64] */;
    %633 = %631.0;
    (%632, %633, %var_2364)
  };
  %634(%var_2368, %var_2369) /* ty=(Tensor[(13, 6, 6), int64], Tensor[(7, 10, 2), bool], Tensor[(182), int16]) */
}

def @func_3092(%var_3090: Tensor[(3, 12, 10), float64]) -> (Tensor[(7, 10, 2), bool], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float64]) {
  @func_3089(%var_3090) /* ty=(Tensor[(7, 10, 2), bool], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float32], Tensor[(3, 12, 10), float64]) */
}

def @func_2553() -> (Tensor[(7, 10, 2), float32],) {
  %639 = fn () -> (Tensor[(7, 10, 2), float32],) {
    %635 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %636 = %635.0;
    %637 = cast(%636, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
    %638 = rsqrt(%637) /* ty=Tensor[(7, 10, 2), float32] */;
    (%638,)
  };
  %639() /* ty=(Tensor[(7, 10, 2), float32],) */
}

def @func_300() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) {
  %651 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) {
    %640 = @func_203() /* ty=Tensor[(7, 10, 2), float64] */;
    %641 = cast(%640, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %642 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
    %643 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
    %644 = cast(%643, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %645 = shape_of(%642, dtype="int32") /* ty=Tensor[(3), int32] */;
    %646 = cast(%642, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %647 = dyn.reshape(%644, %645, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %648 = sqrt(%641) /* ty=Tensor[(7, 10, 2), float64] */;
    %649 = logical_and(%646, %647) /* ty=Tensor[(7, 10, 2), bool] */;
    %650 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
    (%648, %649, %650)
  };
  %651() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */
}

def @func_2936(%var_2935: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %672 = fn (%var_2892: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
    %652 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %653 = @func_1629() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %654 = %653.0;
    %655 = cast(%654, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %656 = cast(%var_2892, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %657 = shape_of(%654, dtype="int32") /* ty=Tensor[(3), int32] */;
    %658 = cast(%654, dtype="bool") /* ty=Tensor[(7, 10, 2), bool] */;
    %659 = dyn.reshape(%656, %657, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    %660 = @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */;
    %661 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %662 = @func_1409() /* ty=(Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %663 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
    %664 = %652.0;
    %665 = erf(%655) /* ty=Tensor[(7, 10, 2), float64] */;
    %666 = less_equal(%658, %659) /* ty=Tensor[(7, 10, 2), bool] */;
    %667 = %660.0;
    %668 = @func_1416() /* ty=Tensor[(7, 10, 2), float64] */;
    %669 = %661.0;
    %670 = %662.2;
    %671 = @func_2836() /* ty=Tensor[(7, 10, 2), float64] */;
    (%663, %664, %665, %666, %667, %668, %669, %670, %671)
  };
  %672(%var_2935) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_1508() -> Tensor[(7, 10, 2), float64] {
  %673 = fn () -> Tensor[(7, 10, 2), float64] {
    @func_196() /* ty=Tensor[(7, 10, 2), float64] */
  };
  %673() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_1272(%var_1252: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(11, 4), float64], Tensor[(7, 5), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32]) {
  %674 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 5), uint8] */, dtype="uint8") /* ty=Tensor[(7, 5), uint8] */;
  %675 = cast(meta[relay.Constant][29] /* ty=Tensor[(7, 5), uint8] */, dtype="uint8") /* ty=Tensor[(7, 5), uint8] */;
  %676 = cast(%var_1252, dtype="float64") /* ty=Tensor[(44), float64] */;
  %677 = reshape(%674, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %678 = reshape(%675, newshape=[5, 7]) /* ty=Tensor[(5, 7), uint8] */;
  %679 = reshape(%676, newshape=[11, 4]) /* ty=Tensor[(11, 4), float64] */;
  %680 = @func_828(%677, %678, %679) /* ty=(Tensor[(5, 7), bool], Tensor[(?, 4, 11), bool], Tensor[(11, 4), float64], Tensor[(7, 10, 2), float64]) */;
  %681 = @func_318() /* ty=Tensor[(7, 10, 2), float64] */;
  %682 = cast(%681, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %683 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %684 = %680.2;
  %685 = asin(%682) /* ty=Tensor[(7, 10, 2), float32] */;
  (%683, %684, meta[relay.Constant][29] /* ty=Tensor[(7, 5), uint8] */, %var_1252, %685)
}

def @func_3842() -> (Tensor[(7, 10, 2), float64],) {
  %686 = @func_2160() /* ty=Tensor[(7, 10, 2), float64] */;
  (%686,)
}

def @func_4102(%var_4101: Tensor[(7, 15), float64]) -> (Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) {
  %696 = fn (%var_4084: Tensor[(7, 15), float64]) -> (Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) {
    %687 = @func_3291() /* ty=(Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) */;
    %688 = cast(%var_4084, dtype="float64") /* ty=Tensor[(7, 15), float64] */;
    %689 = cast(meta[relay.Constant][30] /* ty=Tensor[(1470), float64] */, dtype="float64") /* ty=Tensor[(1470), float64] */;
    %690 = reshape(%688, newshape=[1, 7, 15]) /* ty=Tensor[(1, 7, 15), float64] */;
    %691 = reshape(%689, newshape=[14, 7, 15]) /* ty=Tensor[(14, 7, 15), float64] */;
    %692 = cast(meta[relay.Constant][30] /* ty=Tensor[(1470), float64] */, dtype="float32") /* ty=Tensor[(1470), float32] */;
    %693 = %687.0;
    %694 = @func_3139(%690, %691) /* ty=Tensor[(14, 7, 15), float64] */;
    %695 = log10(%692) /* ty=Tensor[(1470), float32] */;
    (%693, %694, %var_4084, %695)
  };
  %696(%var_4101) /* ty=(Tensor[(7, 10, 2), float32], Tensor[(14, 7, 15), float64], Tensor[(7, 15), float64], Tensor[(1470), float32]) */
}

def @func_4631(%var_4629: Tensor[(1, 1, 12), bool], %var_4630: Tensor[(6, 8, 12), bool]) -> (Tensor[(6, 8, 12), int8], Tensor[(9, 12, 1), float32], Tensor[(108), float32], Tensor[(7, 10, 2), bool]) {
  %710 = fn (%var_4589: Tensor[(1, 1, 12), bool], %var_4590: Tensor[(6, 8, 12), bool]) -> (Tensor[(6, 8, 12), int8], Tensor[(9, 12, 1), float32], Tensor[(108), float32], Tensor[(7, 10, 2), bool]) {
    %697 = cast(%var_4589, dtype="bool") /* ty=Tensor[(1, 1, 12), bool] */;
    %698 = cast(%var_4590, dtype="bool") /* ty=Tensor[(6, 8, 12), bool] */;
    %699 = logical_and(%697, %698) /* ty=Tensor[(6, 8, 12), bool] */;
    %700 = cast(%var_4590, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
    %701 = shape_of(%699, dtype="int32") /* ty=Tensor[(3), int32] */;
    %702 = cast(%699, dtype="int8") /* ty=Tensor[(6, 8, 12), int8] */;
    %703 = dyn.reshape(%700, %701, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
    %704 = cast(meta[relay.Constant][31] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
    %705 = reshape(%704, newshape=[9, 12, 1]) /* ty=Tensor[(9, 12, 1), float32] */;
    %706 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
    %707 = bitwise_or(%702, %703) /* ty=Tensor[(6, 8, 12), int8] */;
    %708 = @func_1001(%705) /* ty=Tensor[(9, 12, 1), float32] */;
    %709 = %706.1;
    (%707, %708, meta[relay.Constant][31] /* ty=Tensor[(108), float32] */, %709)
  };
  %710(%var_4629, %var_4630) /* ty=(Tensor[(6, 8, 12), int8], Tensor[(9, 12, 1), float32], Tensor[(108), float32], Tensor[(7, 10, 2), bool]) */
}

def @main(%var_8366: Tensor[(1, 5, 6), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(?, 5, 6), float64]) {
  %711 = @func_5547() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %712 = cast(%var_8366, dtype="float64") /* ty=Tensor[(1, 5, 6), float64] */;
  %713 = sigmoid(%712) /* ty=Tensor[(1, 5, 6), float64] */;
  %714 = cast(%var_8366, dtype="uint16") /* ty=Tensor[(1, 5, 6), uint16] */;
  %715 = shape_of(%713, dtype="int32") /* ty=Tensor[(3), int32] */;
  %716 = cast(%713, dtype="uint16") /* ty=Tensor[(1, 5, 6), uint16] */;
  %717 = dyn.reshape(%714, %715, newshape=[]) /* ty=Tensor[(?, ?, ?), uint16] */;
  %718 = minimum(%716, %717) /* ty=Tensor[(?, 5, 6), uint16] */;
  %719 = cast(%718, dtype="float64") /* ty=Tensor[(?, 5, 6), float64] */;
  %720 = %711.0;
  %721 = cosh(%719) /* ty=Tensor[(?, 5, 6), float64] */;
  (%720, %721)
}

def @func_4354(%var_4352: Tensor[(4, 8, 9), float64]) -> (Tensor[(4, 8, 9), int8],) {
  @func_4351(%var_4352) /* ty=(Tensor[(4, 8, 9), int8],) */
}

def @func_5579() -> Tensor[(7, 10, 2), float32] {
  @func_5577() /* ty=Tensor[(7, 10, 2), float32] */
}

def @func_7681(%var_7680: Tensor[(630), bool]) -> (Tensor[(15, 6, 7), bool], Tensor[(630), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(14, 13, 630), int16], Tensor[(7, 10, 2), float64]) {
  %742 = fn (%var_7641: Tensor[(630), bool]) -> (Tensor[(15, 6, 7), bool], Tensor[(630), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(14, 13, 630), int16], Tensor[(7, 10, 2), float64]) {
    %722 = cast(%var_7641, dtype="bool") /* ty=Tensor[(630), bool] */;
    %723 = cast(%var_7641, dtype="bool") /* ty=Tensor[(630), bool] */;
    %724 = reshape(%722, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
    %725 = reshape(%723, newshape=[15, 6, 7]) /* ty=Tensor[(15, 6, 7), bool] */;
    %726 = @func_2657(%724, %725) /* ty=(Tensor[(15, 6, 7), bool],) */;
    %727 = @func_4194() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32], Tensor[(15, 6, 7), bool], Tensor[(630), bool]) */;
    %728 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %729 = @func_2545() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
    %730 = %729.1;
    %731 = cast(%730, dtype="float32") /* ty=Tensor[(14, 13, ?), float32] */;
    %732 = rsqrt(%731) /* ty=Tensor[(14, 13, ?), float32] */;
    %733 = cast(%732, dtype="int16") /* ty=Tensor[(14, 13, ?), int16] */;
    %734 = cast(%var_7641, dtype="int16") /* ty=Tensor[(630), int16] */;
    %735 = @func_5203() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) */;
    %736 = %726.0;
    %737 = %727.5;
    %738 = %728.0;
    %739 = @func_3469() /* ty=Tensor[(7, 10, 2), float64] */;
    %740 = right_shift(%733, %734) /* ty=Tensor[(14, 13, 630), int16] */;
    %741 = %735.3;
    (%736, %737, %738, %739, %740, %741)
  };
  %742(%var_7680) /* ty=(Tensor[(15, 6, 7), bool], Tensor[(630), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(14, 13, 630), int16], Tensor[(7, 10, 2), float64]) */
}

def @func_3247() -> (Tensor[(7, 10, 2), bool],) {
  %743 = @func_1409() /* ty=(Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %744 = %743.0;
  (%744,)
}

def @func_461(%var_460: Tensor[(1, 4, 11), float64]) -> Tensor[(?, 4, 11), bool] {
  %754 = fn (%var_447: Tensor[(1, 4, 11), float64]) -> Tensor[(?, 4, 11), bool] {
    %745 = cast(meta[relay.Constant][32] /* ty=Tensor[(1, 4, 11), float64] */, dtype="float64") /* ty=Tensor[(1, 4, 11), float64] */;
    %746 = shape_of(%var_447, dtype="int32") /* ty=Tensor[(3), int32] */;
    %747 = cast(%var_447, dtype="float64") /* ty=Tensor[(1, 4, 11), float64] */;
    %748 = dyn.reshape(%745, %746, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %749 = floor_mod(%747, %748) /* ty=Tensor[(?, 4, 11), float64] */;
    %750 = cast(%var_447, dtype="bool") /* ty=Tensor[(1, 4, 11), bool] */;
    %751 = shape_of(%749, dtype="int32") /* ty=Tensor[(3), int32] */;
    %752 = cast(%749, dtype="bool") /* ty=Tensor[(?, 4, 11), bool] */;
    %753 = dyn.reshape(%750, %751, newshape=[]) /* ty=Tensor[(?, ?, ?), bool] */;
    less_equal(%752, %753) /* ty=Tensor[(?, 4, 11), bool] */
  };
  %754(%var_460) /* ty=Tensor[(?, 4, 11), bool] */
}

def @func_198() -> Tensor[(7, 10, 2), float64] {
  @func_196() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_4351(%var_4345: Tensor[(4, 8, 9), float64]) -> (Tensor[(4, 8, 9), int8],) {
  %755 = @func_3779() /* ty=(Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64], Tensor[(?, 4, 11), bool], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %756 = %755.0;
  %757 = cast(%var_4345, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %758 = shape_of(%756, dtype="int32") /* ty=Tensor[(3), int32] */;
  %759 = cast(%756, dtype="int8") /* ty=Tensor[(4, 8, 9), int8] */;
  %760 = dyn.reshape(%757, %758, newshape=[]) /* ty=Tensor[(?, ?, ?), int8] */;
  %761 = minimum(%759, %760) /* ty=Tensor[(4, 8, 9), int8] */;
  (%761,)
}

def @func_759() -> (Tensor[(7, 10, 2), float64],) {
  %762 = @func_696() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %763 = %762.0;
  (%763,)
}

def @func_5820() -> (Tensor[(7, 10, 2), float64],) {
  @func_5818() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_4121() -> (Tensor[(44), float64], Tensor[(7, 10, 2), float64]) {
  %768 = fn () -> (Tensor[(44), float64], Tensor[(7, 10, 2), float64]) {
    %764 = @func_2545() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
    %765 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
    %766 = %764.3;
    %767 = %765.2;
    (%766, %767)
  };
  %768() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_7802() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  @func_7800() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_5105(%var_5103: Tensor[(2, 2, 13), float64]) -> Tensor[(2, 2, 13), float64] {
  @func_5102(%var_5103) /* ty=Tensor[(2, 2, 13), float64] */
}

def @func_3490() -> (Tensor[(7, 10, 2), float32],) {
  @func_3488() /* ty=(Tensor[(7, 10, 2), float32],) */
}

def @func_5561() -> (Tensor[(4, 8, 9), float64], Tensor[(7, 10, 2), float64]) {
  %769 = @func_3992() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %770 = @func_5545() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %771 = %769.0;
  %772 = %770.0;
  (%771, %772)
}

def @func_8118() -> (Tensor[(7, 10, 2), float64],) {
  %774 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %773 = @func_2995() /* ty=Tensor[(7, 10, 2), float64] */;
    (%773,)
  };
  %774() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_6014(%var_5973: Tensor[(8, 15, 8), float32], %var_5974: Tensor[(8, 15, 8), float32]) -> (Tensor[(8, 15, 8), float32], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) {
  %775 = cast(%var_5974, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %776 = shape_of(%var_5973, dtype="int32") /* ty=Tensor[(3), int32] */;
  %777 = cast(%var_5973, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %778 = dyn.reshape(%775, %776, newshape=[]) /* ty=Tensor[(?, ?, ?), float32] */;
  %779 = floor_mod(%777, %778) /* ty=Tensor[(8, 15, 8), float32] */;
  %780 = cast(%779, dtype="float64") /* ty=Tensor[(8, 15, 8), float64] */;
  %781 = atan(%780) /* ty=Tensor[(8, 15, 8), float64] */;
  %782 = cast(%781, dtype="float32") /* ty=Tensor[(8, 15, 8), float32] */;
  %783 = cast(meta[relay.Constant][33] /* ty=Tensor[(108), float32] */, dtype="float32") /* ty=Tensor[(108), float32] */;
  %784 = reshape(%783, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %785 = @func_4265(%784) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) */;
  %786 = log10(%782) /* ty=Tensor[(8, 15, 8), float32] */;
  %787 = %785.2;
  (%786, %787, meta[relay.Constant][33] /* ty=Tensor[(108), float32] */)
}

def @func_4265(%var_4256: Tensor[(108), float32]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(9, 12, 1), float32], Tensor[(108), float32]) {
  %788 = @func_3041() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %789 = @func_3256() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %790 = cast(%var_4256, dtype="float32") /* ty=Tensor[(108), float32] */;
  %791 = reshape(%790, newshape=[108]) /* ty=Tensor[(108), float32] */;
  %792 = @func_3443(%791) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(108), float32], Tensor[(9, 12, 1), float32], Tensor[(7, 10, 2), float64], Tensor[(22, 2), float64]) */;
  %793 = %788.1;
  %794 = %789.0;
  %795 = %792.2;
  (%793, %794, %795, %var_4256)
}

def @func_2387() -> Tensor[(7, 10, 2), float64] {
  %796 = fn () -> Tensor[(7, 10, 2), float64] {
    @func_318() /* ty=Tensor[(7, 10, 2), float64] */
  };
  %796() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_1851() -> (Tensor[(7, 10, 2), float64],) {
  %799 = fn () -> (Tensor[(7, 10, 2), float64],) {
    %797 = @func_941() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %798 = %797.0;
    (%798,)
  };
  %799() /* ty=(Tensor[(7, 10, 2), float64],) */
}

def @func_5089() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  @func_5087() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_8233(%var_8230: Tensor[(14, 12, 3), float32], %var_8231: Tensor[(2, 1), int32], %var_8232: Tensor[(14), int32]) -> (Tensor[(14, 12, 3), float32], Tensor[(7, 10, 2), float64], Tensor[(2, 1, 7), int32], Tensor[(2, 1), int32], Tensor[(14), int32]) {
  @func_8228(%var_8230, %var_8231, %var_8232) /* ty=(Tensor[(14, 12, 3), float32], Tensor[(7, 10, 2), float64], Tensor[(2, 1, 7), int32], Tensor[(2, 1), int32], Tensor[(14), int32]) */
}

def @func_5379() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) {
  @func_5377() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */
}

def @func_5261() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %800 = @func_1646() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %801 = %800.0;
  %802 = @func_1703() /* ty=Tensor[(7, 10, 2), float64] */;
  (%801, %802)
}

def @func_5577() -> Tensor[(7, 10, 2), float32] {
  %803 = @func_5377() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */;
  %803.1
}

def @func_6064() -> Tensor[(7, 10, 2), float64] {
  %804 = fn () -> Tensor[(7, 10, 2), float64] {
    @func_203() /* ty=Tensor[(7, 10, 2), float64] */
  };
  %804() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_3803() -> Tensor[(7, 10, 2), float64] {
  @func_3801() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5035(%var_5034: Tensor[(7, 10, 2), float64]) -> Tensor[(7, 10, 2), float64] {
  %810 = fn (%var_5019: Tensor[(7, 10, 2), float64]) -> Tensor[(7, 10, 2), float64] {
    %805 = @func_1416() /* ty=Tensor[(7, 10, 2), float64] */;
    %806 = cast(%var_5019, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %807 = shape_of(%805, dtype="int32") /* ty=Tensor[(3), int32] */;
    %808 = cast(%805, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
    %809 = dyn.reshape(%806, %807, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    power(%808, %809) /* ty=Tensor[(7, 10, 2), float64] */
  };
  %810(%var_5034) /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_4010() -> Tensor[(7, 10, 2), float64] {
  %812 = fn () -> Tensor[(7, 10, 2), float64] {
    %811 = @func_1584() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
    %811.0
  };
  %812() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_2735() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) {
  @func_2733() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */
}

def @func_1093(%var_1091: Tensor[(5, 9, 1), uint64], %var_1092: Tensor[(5, 9, 2), uint64]) -> (Tensor[(5, 9, 2), uint64],) {
  %816 = fn (%var_1080: Tensor[(5, 9, 1), uint64], %var_1081: Tensor[(5, 9, 2), uint64]) -> (Tensor[(5, 9, 2), uint64],) {
    %813 = cast(%var_1080, dtype="uint64") /* ty=Tensor[(5, 9, 1), uint64] */;
    %814 = cast(%var_1081, dtype="uint64") /* ty=Tensor[(5, 9, 2), uint64] */;
    %815 = subtract(%813, %814) /* ty=Tensor[(5, 9, 2), uint64] */;
    (%815,)
  };
  %816(%var_1091, %var_1092) /* ty=(Tensor[(5, 9, 2), uint64],) */
}

def @func_1705() -> Tensor[(7, 10, 2), float64] {
  @func_1703() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_5205() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) {
  @func_5203() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 15), float64], Tensor[(105), float64], Tensor[(7, 10, 2), float64], Tensor[(44), float64]) */
}

def @func_2546() -> (Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) {
  %829 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) {
    %817 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
    %818 = %817.0;
    %819 = cast(%818, dtype="float32") /* ty=Tensor[(14, 13, ?), float32] */;
    %820 = cast(meta[relay.Constant][34] /* ty=Tensor[(44), float64] */, dtype="float64") /* ty=Tensor[(44), float64] */;
    %821 = reshape(%820, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
    %822 = @func_759() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %823 = @func_1196() /* ty=(Tensor[(14, 13, ?), uint16], Tensor[(7, 10, 2), float32]) */;
    %824 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
    %825 = cosh(%819) /* ty=Tensor[(14, 13, ?), float32] */;
    %826 = @func_459(%821) /* ty=Tensor[(?, 4, 11), bool] */;
    %827 = %822.0;
    %828 = %823.1;
    (%824, %825, %826, meta[relay.Constant][34] /* ty=Tensor[(44), float64] */, %827, %828)
  };
  %829() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), float32], Tensor[(?, 4, 11), bool], Tensor[(44), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float32]) */
}

def @func_5691() -> Tensor[(4, 8, 9), float64] {
  %830 = @func_3992() /* ty=(Tensor[(4, 8, 9), float64],) */;
  %830.0
}

def @func_2698(%var_2693: Tensor[(13, 12, 1), float64]) -> Tensor[(13, 12, 3), bool] {
  %831 = cast(%var_2693, dtype="bool") /* ty=Tensor[(13, 12, 1), bool] */;
  %832 = cast(meta[relay.Constant][35] /* ty=Tensor[(13, 12, 3), float64] */, dtype="bool") /* ty=Tensor[(13, 12, 3), bool] */;
  less(%831, %832) /* ty=Tensor[(13, 12, 3), bool] */
}

def @func_6245() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) {
  @func_6243() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), float64]) */
}

def @func_6307(%var_6296: Tensor[(140), float64]) -> (Tensor[(44), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64], Tensor[(288), float64]) {
  %833 = @func_4120() /* ty=(Tensor[(44), float64], Tensor[(7, 10, 2), float64]) */;
  %834 = cast(%var_6296, dtype="float64") /* ty=Tensor[(140), float64] */;
  %835 = reshape(%834, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %836 = @func_2069(%835) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) */;
  %837 = @func_5735() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 8, 9), int8], Tensor[(288), float64]) */;
  %838 = %833.0;
  %839 = %836.2;
  %840 = %837.2;
  (%838, %839, %var_6296, %840)
}

def @func_1552() -> (Tensor[(7, 10, 2), float64],) {
  %841 = @func_1507() /* ty=Tensor[(7, 10, 2), float64] */;
  (%841,)
}

def @func_692(%var_690: Tensor[(14, 13, 1), int16], %var_691: Tensor[(14, 13, 1), int16]) -> (Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) {
  @func_688(%var_690, %var_691) /* ty=(Tensor[(7, 10, 2), bool], Tensor[(14, 13, ?), uint16]) */
}

def @func_3249() -> (Tensor[(7, 10, 2), bool],) {
  @func_3247() /* ty=(Tensor[(7, 10, 2), bool],) */
}

def @func_5818() -> (Tensor[(7, 10, 2), float64],) {
  %842 = @func_2386() /* ty=Tensor[(7, 10, 2), float64] */;
  (%842,)
}

def @func_3201(%var_3199: Tensor[(7, 10, 2), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  @func_3198(%var_3199) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_5263() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  @func_5261() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_5102(%var_5099: Tensor[(2, 2, 13), float64]) -> Tensor[(2, 2, 13), float64] {
  %843 = cast(%var_5099, dtype="float64") /* ty=Tensor[(2, 2, 13), float64] */;
  exp(%843) /* ty=Tensor[(2, 2, 13), float64] */
}

def @func_3291() -> (Tensor[(7, 10, 2), float32], Tensor[(7, 10, 2), float64]) {
  %844 = @func_2198() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %845 = %844.0;
  %846 = cast(%845, dtype="float32") /* ty=Tensor[(7, 10, 2), float32] */;
  %847 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %848 = tan(%846) /* ty=Tensor[(7, 10, 2), float32] */;
  %849 = %847.0;
  (%848, %849)
}

def @func_5340() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(512), int64]) {
  %858 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(512), int64]) {
    %850 = @func_2098() /* ty=(Tensor[(7, 10, 2), float64],) */;
    %851 = cast(meta[relay.Constant][36] /* ty=Tensor[(256), int64] */, dtype="int64") /* ty=Tensor[(256), int64] */;
    %852 = cast(meta[relay.Constant][37] /* ty=Tensor[(512), int64] */, dtype="int64") /* ty=Tensor[(512), int64] */;
    %853 = reshape(%851, newshape=[16, 1, 16]) /* ty=Tensor[(16, 1, 16), int64] */;
    %854 = reshape(%852, newshape=[16, 2, 16]) /* ty=Tensor[(16, 2, 16), int64] */;
    %855 = @func_3405(%853, %854) /* ty=(Tensor[(16, 2, 16), int64], Tensor[(7, 10, 2), float64]) */;
    %856 = %850.0;
    %857 = %855.1;
    (%856, %857, meta[relay.Constant][36] /* ty=Tensor[(256), int64] */, meta[relay.Constant][37] /* ty=Tensor[(512), int64] */)
  };
  %858() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(256), int64], Tensor[(512), int64]) */
}

def @func_556(%var_548: Tensor[(44), float64]) -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(?, 4, 11), bool], Tensor[(44), float64]) {
  %859 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %860 = %859.1;
  %861 = cast(%860, dtype="float64") /* ty=Tensor[(7, 10, 2), float64] */;
  %862 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
  %863 = cast(%var_548, dtype="float64") /* ty=Tensor[(44), float64] */;
  %864 = reshape(%863, newshape=[1, 4, 11]) /* ty=Tensor[(1, 4, 11), float64] */;
  %865 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %866 = @func_196() /* ty=Tensor[(7, 10, 2), float64] */;
  %867 = log(%861) /* ty=Tensor[(7, 10, 2), float64] */;
  %868 = %862.1;
  %869 = @func_459(%864) /* ty=Tensor[(?, 4, 11), bool] */;
  (%865, %866, %867, %868, %869, %var_548)
}

def @func_913() -> (Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) {
  %876 = fn () -> (Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) {
    %870 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
    %871 = cast(meta[relay.Constant][38] /* ty=Tensor[(4, 15, 9), float32] */, dtype="float32") /* ty=Tensor[(4, 15, 9), float32] */;
    %872 = cosh(%871) /* ty=Tensor[(4, 15, 9), float32] */;
    %873 = cast(%872, dtype="float64") /* ty=Tensor[(4, 15, 9), float64] */;
    %874 = %870.0;
    %875 = log(%873) /* ty=Tensor[(4, 15, 9), float64] */;
    (%874, %875)
  };
  %876() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(4, 15, 9), float64]) */
}

def @func_863() -> (Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) {
  @func_861() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(14, 13, ?), uint16], Tensor[(13, 14), int16]) */
}

def @func_6766(%var_6761: Tensor[(8, 7, 2), float32], %var_6762: Tensor[(8, 7, 2), float32], %var_6763: Tensor[(140), float64], %var_6764: Tensor[(35), uint8], %var_6765: Tensor[(44), float64]) -> (Tensor[(8, 7, 2), float32], Tensor[(44), float64], Tensor[(140), float64], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32], Tensor[(8, 7, 2), bool], Tensor[(7, 10, 2), float64]) {
  @func_6759(%var_6761, %var_6762, %var_6763, %var_6764, %var_6765) /* ty=(Tensor[(8, 7, 2), float32], Tensor[(44), float64], Tensor[(140), float64], Tensor[(35), uint8], Tensor[(44), float64], Tensor[(7, 10, 2), float32], Tensor[(8, 7, 2), bool], Tensor[(7, 10, 2), float64]) */
}

def @func_1629() -> (Tensor[(7, 10, 2), float64],) {
  %877 = @func_1552() /* ty=(Tensor[(7, 10, 2), float64],) */;
  %878 = %877.0;
  (%878,)
}

def @func_5504(%var_5491: float64, %var_5492: Tensor[(1, 10, 6), float64]) -> (Tensor[(1, 10, 6), float64], Tensor[(1, 10, 6), float64], Tensor[(7, 10, 2), uint16], Tensor[(140), float64]) {
  %879 = cast(%var_5491, dtype="float64") /* ty=float64 */;
  %880 = cast(%var_5492, dtype="float64") /* ty=Tensor[(1, 10, 6), float64] */;
  %881 = cast(%var_5491, dtype="float64") /* ty=float64 */;
  %882 = cast(%var_5492, dtype="float64") /* ty=Tensor[(1, 10, 6), float64] */;
  %883 = cast(meta[relay.Constant][39] /* ty=Tensor[(140), float64] */, dtype="float64") /* ty=Tensor[(140), float64] */;
  %884 = reshape(%883, newshape=[7, 10, 2]) /* ty=Tensor[(7, 10, 2), float64] */;
  %885 = @func_2069(%884) /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), uint16]) */;
  %886 = floor_mod(%879, %880) /* ty=Tensor[(1, 10, 6), float64] */;
  %887 = maximum(%881, %882) /* ty=Tensor[(1, 10, 6), float64] */;
  %888 = %885.2;
  (%886, %887, %888, meta[relay.Constant][39] /* ty=Tensor[(140), float64] */)
}

def @func_5545() -> (Tensor[(7, 10, 2), float64],) {
  %889 = @func_2160() /* ty=Tensor[(7, 10, 2), float64] */;
  (%889,)
}

def @func_319() -> Tensor[(7, 10, 2), float64] {
  %891 = fn () -> Tensor[(7, 10, 2), float64] {
    %890 = @func_299() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), bool], Tensor[(7, 10, 2), float64]) */;
    %890.2
  };
  %891() /* ty=Tensor[(7, 10, 2), float64] */
}

def @func_7731(%var_7729: Tensor[(3, 15, 5), float64], %var_7730: Tensor[(3, 15, 5), float64]) -> (Tensor[(3, 15, 5), float64], Tensor[(3, 15, 5), int64]) {
  %904 = fn (%var_7685: Tensor[(3, 15, 5), float64], %var_7711: Tensor[(3, 15, 5), float64]) -> (Tensor[(3, 15, 5), float64], Tensor[(3, 15, 5), int64]) {
    %892 = cast(%var_7685, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
    %893 = acos(%892) /* ty=Tensor[(3, 15, 5), float64] */;
    %894 = cast(%var_7685, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
    %895 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
    %896 = cast(%893, dtype="float64") /* ty=Tensor[(3, 15, 5), float64] */;
    %897 = dyn.reshape(%894, %895, newshape=[]) /* ty=Tensor[(?, ?, ?), float64] */;
    %898 = cast(%var_7711, dtype="int64") /* ty=Tensor[(3, 15, 5), int64] */;
    %899 = shape_of(%893, dtype="int32") /* ty=Tensor[(3), int32] */;
    %900 = cast(%893, dtype="int64") /* ty=Tensor[(3, 15, 5), int64] */;
    %901 = dyn.reshape(%898, %899, newshape=[]) /* ty=Tensor[(?, ?, ?), int64] */;
    %902 = divide(%896, %897) /* ty=Tensor[(3, 15, 5), float64] */;
    %903 = maximum(%900, %901) /* ty=Tensor[(3, 15, 5), int64] */;
    (%902, %903)
  };
  %904(%var_7729, %var_7730) /* ty=(Tensor[(3, 15, 5), float64], Tensor[(3, 15, 5), int64]) */
}

def @func_4856() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  @func_4854() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */
}

def @func_6133(%var_6131: Tensor[(9, 12, 13), float64]) -> (Tensor[(9, 12, 13), uint16],) {
  @func_6130(%var_6131) /* ty=(Tensor[(9, 12, 13), uint16],) */
}

def @func_3338() -> (Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) {
  %905 = @func_2465() /* ty=(Tensor[(7, 10, 2), float64], Tensor[(7, 10, 2), float64]) */;
  %906 = %905.0;
  %907 = @func_967() /* ty=Tensor[(7, 10, 2), float64] */;
  (%906, %907)
}

/* For debugging purposes the metadata section has been omitted.
 * If you would like to see the full metadata section you can set the 
 * option to `True` when invoking `astext`. 
 */The type inference pass was unable to infer a type for this expression.
This usually occurs when an operator call is under constrained in some way, check other reported errors for hints of what may of happened.

===================================
note: run with `TVM_BACKTRACE=1` environment variable to display a backtrace.

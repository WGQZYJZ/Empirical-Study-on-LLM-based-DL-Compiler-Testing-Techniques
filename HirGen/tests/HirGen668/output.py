import tvm
from tvm import relay
from tvm.ir.transform import Sequential
from tvm.contrib import graph_runtime
import numpy as np
mod = tvm.IRModule()
mutated_mod = tvm.IRModule()
var_433 = relay.var("var_433", dtype = "uint16", shape = ())#candidate|433|()|var|uint16
var_434 = relay.var("var_434", dtype = "uint16", shape = (15, 3, 15))#candidate|434|(15, 3, 15)|var|uint16
bop_435 = relay.less_equal(var_433.astype('bool'), var_434.astype('bool')) # shape=(15, 3, 15)
output = relay.Tuple([bop_435,])
output2 = relay.Tuple([bop_435,])
func_440 = relay.Function([var_433,var_434,], output)
mod['func_440'] = func_440
mod = relay.transform.InferType()(mod)
var_441 = relay.var("var_441", dtype = "uint16", shape = ())#candidate|441|()|var|uint16
var_442 = relay.var("var_442", dtype = "uint16", shape = (15, 3, 15))#candidate|442|(15, 3, 15)|var|uint16
output = func_440(var_441,var_442,)
func_443 = relay.Function([var_441,var_442,], output)
mutated_mod['func_443'] = func_443
mutated_mod = relay.transform.InferType()(mutated_mod)
var_478 = relay.var("var_478", dtype = "int8", shape = (14, 16, 7))#candidate|478|(14, 16, 7)|var|int8
var_479 = relay.var("var_479", dtype = "int8", shape = (14, 16, 7))#candidate|479|(14, 16, 7)|var|int8
bop_480 = relay.right_shift(var_478.astype('int8'), relay.reshape(var_479.astype('int8'), relay.shape_of(var_478))) # shape=(14, 16, 7)
var_483 = relay.var("var_483", dtype = "int8", shape = (14, 16, 7))#candidate|483|(14, 16, 7)|var|int8
bop_484 = relay.bitwise_and(var_479.astype('int16'), relay.reshape(var_483.astype('int16'), relay.shape_of(var_479))) # shape=(14, 16, 7)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
const_495 = relay.const(9, dtype = "uint16")#candidate|495|()|const|uint16
const_496 = relay.const([5,-5,-9,6,-7,-4,1,-3,8,5,7,-7,10,-4,-5,7,-8,4,-3,7,7,-6,5,-5,7,-3,5,-7,-3,-5,-5,10,-7,3,3,1,9,10,1,9,9,-10,-3,-1,-9,-5,-3,8,-1,9,10,6,1,5,3,-8,7,-7,7,7,8,-10,10,10,-10,-3,-3,10,-5,4,1,10,-1,8,-9,-4,8,-8,4,10,-9,4,2,-3,-9,6,-10,7,5,9,-2,-3,-9,-1,-8,-6,-3,-8,4,-5,2,-4,8,-4,-1,-1,6,-5,4,5,-6,1,-1,8,2,-2,-3,-7,-10,-7,3,-3,-1,-1,6,-7,9,6,6,-7,5,5,6,10,4,-6,-5,-6,-9,1,3,10,5,3,-9,-4,-2,2,-2,3,-2,-2,1,-5,-5,8,6,1,5,7,-6,8,-9,-5,5,-6,8,7,-8,-10,1,-2,-5,2,-8,-1,7,2,2,-6,5,5,4,3,-6,-6,10,-6,2,2,-5,4,-4,10,2,-2,-2,10,-1,-9,-5,-4,2,9,-5,5,6,6,6,8,3,-6,-1,2,-9,-6,3,-1,-9,-10,1,-6,5,-1,-9,-10,10,-9,2,10,-2,10,-8,2,-1,-4,10,-1,4,-7,-10,-5,-2,-1,6,8,10,3,10,5,-10,4,-9,-4,-9,-5,-7,-3,-5,-5,-6,10,2,-5,-9,-4,1,8,6,-4,2,-6,-10,-9,-3,-7,-9,8,10,-6,6,-9,-9,-9,-8,10,4,10,6,8,-6,-10,-2,10,2,3,5,6,-1,-9,-10,1,-4,8,2,1,3,-5,-10,10,-1,1,-7,10,-6,6,-7,-1,-10,2,9,2,-5,-8,1,8,-1,8,9,-5,-8,-2,8,5,-4,-1,-10,-4,9,-1,-2,-2,1,-2,-9,-5,7,-1,3,-6,3,-10,8,10,-8,8,2,-4,2,-3,-4,-8,-10,-10,5,1,-1,2,7,-7,-5,-8,6,1,-9,-1,-7,-3,-7,9,9,9,3,9,3,8,2,-6,7,8,-4,-8,-7,-7,6,-6,9,2,7,5,-9,10,10,-4,5,-4,3,1,5,-6,-7,-5,-10,-10,10,8,8,-5,-8,-5,2,-4,-3,5,-5,8,-3,-8,-4,9,2,5,7,-8,10,-8,5,5,8,-6,1,5,-1,-7,1,-8,5,-5,-5,9,-8,-6,-10,-1,-3,1,2,-9,9,5,4,-5,9,1,-2,-7,-9,5,6,-8,-4,-2,-7,9,-9,-7,10,-9,-1,2,3,8,-4,1,-1,-8,10,-3,-3,2,-9,-4,-1,9,-5,7,-2,-2,-8,-8,-4,3,-10,-10,9,4,10,-8,-3,5,9,8,9,-10,4,7,6,-9,-8,-9,2,-6,1,5,4,2,4,-5,-1,-1,4,-1,9,7,3,-6,-1,-7,-8,-8,2,6,-1,10,-7,-9,10,3,1,7,-8,-9,7,3,6,-8,3,-6,-6,-8,-1,5,-6,1,10,3,2,9,8,7,-5,-4,-8,3,-9,8,-8,1,3,5,-3,5,10,5,8,-2,6,1,6,-9,-5,-7,3,-10,2,-2,-4,10,-3,-4,8,3,-1,9,8,-4,-6,9,9,-6,5,-5,6,-4,2,-1,-3,-4,1,-4,3,4,-1,1,-2,-2,-6,5,4,-3,7,-7,-10,-7,-6,10,10,-1,8,-2,10,9,-3,-9,6,-5,6,5,5,-7,-4,-2,-4,7,4,4,5,9,-10,5,10,10,4,-4,-9,1,1,-10,-6,-6,-8,4,4,1,10], dtype = "uint16")#candidate|496|(675,)|const|uint16
call_494 = relay.TupleGetItem(func_440_call(relay.reshape(const_495.astype('uint16'), []), relay.reshape(const_496.astype('uint16'), [15, 3, 15]), ), 0)
call_497 = relay.TupleGetItem(func_443_call(relay.reshape(const_495.astype('uint16'), []), relay.reshape(const_496.astype('uint16'), [15, 3, 15]), ), 0)
output = relay.Tuple([bop_480,bop_484,call_494,const_495,const_496,])
output2 = relay.Tuple([bop_480,bop_484,call_497,const_495,const_496,])
func_500 = relay.Function([var_478,var_479,var_483,], output)
mod['func_500'] = func_500
mod = relay.transform.InferType()(mod)
var_501 = relay.var("var_501", dtype = "int8", shape = (14, 16, 7))#candidate|501|(14, 16, 7)|var|int8
var_502 = relay.var("var_502", dtype = "int8", shape = (14, 16, 7))#candidate|502|(14, 16, 7)|var|int8
var_503 = relay.var("var_503", dtype = "int8", shape = (14, 16, 7))#candidate|503|(14, 16, 7)|var|int8
output = func_500(var_501,var_502,var_503,)
func_504 = relay.Function([var_501,var_502,var_503,], output)
mutated_mod['func_504'] = func_504
mutated_mod = relay.transform.InferType()(mutated_mod)
var_519 = relay.var("var_519", dtype = "float64", shape = (1, 6, 1))#candidate|519|(1, 6, 1)|var|float64
uop_520 = relay.log10(var_519.astype('float64')) # shape=(1, 6, 1)
bop_533 = relay.bitwise_xor(var_519.astype('int64'), relay.reshape(uop_520.astype('int64'), relay.shape_of(var_519))) # shape=(1, 6, 1)
bop_544 = relay.add(bop_533.astype('uint32'), relay.reshape(var_519.astype('uint32'), relay.shape_of(bop_533))) # shape=(1, 6, 1)
bop_562 = relay.subtract(bop_533.astype('int8'), relay.reshape(bop_544.astype('int8'), relay.shape_of(bop_533))) # shape=(1, 6, 1)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
const_568 = relay.const(-7, dtype = "uint16")#candidate|568|()|const|uint16
var_569 = relay.var("var_569", dtype = "uint16", shape = (225, 3))#candidate|569|(225, 3)|var|uint16
call_567 = relay.TupleGetItem(func_440_call(relay.reshape(const_568.astype('uint16'), []), relay.reshape(var_569.astype('uint16'), [15, 3, 15]), ), 0)
call_570 = relay.TupleGetItem(func_443_call(relay.reshape(const_568.astype('uint16'), []), relay.reshape(var_569.astype('uint16'), [15, 3, 15]), ), 0)
func_500_call = mod.get_global_var('func_500')
func_504_call = mutated_mod.get_global_var('func_504')
const_580 = relay.const([[1,4,-5,-9,2,-6,-1,-3,7,2,8,-2,-10,-7,-10,-4,10,-2,-8,5,-5,5,1,-8,7,-10,2,5,9,-10,4,-10,3,-9,-5,10,-5,-9,4,-7,-5,-5,10,-10,3,8,5,10,-1,6,-3,-7,-3,9,2,-6,4,8,3,-3,-8,-4,8,-9,-2,5,3,-6,-6,4,10,9,-3,-7,2,3,-10,3,2,5,10,9,-1,10,9,-9,3,-4,2,-3,3,6,-6,1,2,-9,-7,-6,5,-8,-1,5,5,-2,-3,5,4,9,-10,-7,-10,5,-5,8,8,-4,4,-4,-1,10,-3,1,-4,-7,-3,-9,1,10,4,7,3,10,3,8,10,9,1,-3,10,-3,6,-6,5,-4,4,-10,7,6,-6,3,2,-1,1,2,-6,4,5,1,-8,1,-10,-10,-3,-4,-3,-6,10,2,3,-3,-6,-3,9,-3,2,-8,4,-7,6,-7,10,-6,1,4,-1,-5,5,8,-5,-10,4,7,-6,5,6,3,-5,10,8,-4,-2,5,-10,-1,5,-9,-9,-7,1,-7,5,-6,-10,8,2,-6,-2,2,-4,-4,6,10,-2,-10,-8,-3,-8,5,5,5,-7,4,2,3,10,-6,3,-2,10,9,1,-3,10,9,3,-5,-5,-2,-4,4,2,-2,4,1,8,-4,-1,9,6,9,4,-10,4,7,-8,-3,8,5,-1,-6,8,7,-6,3,4,1,-7,-6,-6,-10,-3,3,10,3,-6,-2,8,4,-6,8,-10,-10,4,9,-1,2,-1,5,-7,-5,-7,9,-6,3,-9,-4,4,5,1,7,2,6,-8,-7,9,-8,-10,-6,-10,-2,10,10,-1,-1,9,-4,9,6,-3,10,6,-2,7,-7,-7,-7,-5,2,-2,-10,-10,3,6,-7,-4,-3,-7,9,3,2,-6,-6,6,9,-10,2,-3,9,6,-8,-5,1,8,-5,-7,-8,5,-4,-9,-10,1,-8,9,-6,5,3,7,-1,3,3,-4,3,-4,-2,-1,3,-6,-8,2,10,-10,-7,-7,1,6,-2,-8,10,5,6,-8,-9,3,1,-1,-5,4,-9,10,-4,7,-7,-2,-6,10,-2,4,5,9,3,7,-3,9,3,-4,-6,-3,-4,1,-4,2,1,7,3,2,-10,-5,-9,4,4,8,-9,-4,-6,2,7,-5,-2,-4,10,5,4,-4,-4,4,-8,-1,-1,-1,1,-6,9,-9,-4,8,-9,-8,2,-4,10,-8,10,5,-4,8,-10,-6,-6,2,7,7,-4,7,-5,-4,-10,-3,-2,2,5,-1,-6,3,-1,-5,-6,4,-7,6,5,9,4,6,10,-2,-9,9,-2,-9,-7,3,7,1,-10,8,-1,-1,-8,-1,-6,-3,-7,-2,5,4,-8,-3,-4,-8,5,10,-2,-3,7,-1,6,-9,6,-4,7,-1,4,-9,-10,5,-5,-1,5,9,7,-8,-4,8,10,-1,1,-1,5,5,7,1,4,-10,8,-4,1,-10,9,-5,3,6,-7,8,7,9,3,7,-4,8,-8,8,4,-4,-7,4,4,-3,8,-5,3,10,-4,3,6,1,-4,5,7,3,-10,-4,-8,7,8,-1,-4,7,10,5,1,-1,-4,-3,6,5,-4,10,7,7,7,-6,-1,-8,-3,6,-10,-9,3,-5,9,-5,-10,4,-2,5,-1,2,-4,-4,7,10,-8,10,-10,-8,-7,-1,-8,6,-8,-1,4,2,6,-6,5,-10,3,-4,-7,2,-7,-10,-10,5,9,-6,1,-2,3,2,4,-2,-4,-1,-1,2,8,3,8,7,-5,-10,-2,-5,-8,4,9,-10,2,-3,-4,1,6,-3,1,2,2,2,4,-8,6,-6,-8,9,8,5,6,-8,-7,9,-9,-3,4,-5,-5,-5,-5,-8,-9,-4,-1,-1,-4,-1,7,8,2,-9,7,9,8,-6,6,7,3,4,-2,-2,3,-5,5,8,-5,8,-2,-7,-2,5,-9,5,6,7,-6,4,4,2,5,9,-9,-3,5,-1,-4,-8,9,-4,-5,-4,-2,10,10,-7,4,-6,-4,-3,-2,7,3,9,-1,8,8,6,-2,5,-10,10,8,-6,6,3,-8,-6,-8,-2,9,-4,5,6,8,-1,6,4,-7,8,2,5,-4,10,5,-2,5,1,7,7,-1,-6,2,-10,-2,6,10,3,-10,7,-6,-10,-4,-1,10,-8,8,7,4,9,-4,10,-6,-7,8,2,10,5,6,-6,-3,7,-8,1,10,8,5,-7,2,7,-7,-4,-2,-2,2,-7,4,-6,8,6,7,5,3,3,7,5,-1,-2,7,-3,4,4,4,10,-5,-4,-10,6,-1,1,1,2,5,6,10,1,-9,-3,4,9,-2,4,9,7,9,8,6,-3,-5,-2,-8,10,9,2,-1,-3,-3,-6,8,-2,3,-8,-1,-9,10,1,6,7,5,9,2,8,10,8,9,-7,-2,-1,-8,7,-4,7,-10,-5,6,2,7,-3,-5,-7,3,-7,10,5,-10,7,-1,-6,-9,-7,-7,2,8,-3,10,-7,5,-5,-4,5,5,8,4,-6,-4,-7,3,-7,9,-5,-9,10,-8,10,-7,6,5,-7,-9,-4,-9,6,-2,-2,10,-2,10,4,8,10,9,9,-1,4,3,-2,9,-2,-10,6,2,10,9,-7,-8,-6,4,-10,4,-2,-2,-7,2,-3,-4,2,-6,-7,6,4,3,-8,5,-10,2,4,-8,-4,-2,5,-8,1,9,9,-4,-9,4,1,-7,-8,5,-4,5,-3,7,-3,5,8,-4,1,-3,4,-10,-7,-6,-10,7,3,-2,-6,-6,-5,-7,-7,4,-8,10,4,-6,9,-4,-4,2,2,8,4,-9,3,4,6,7,2,-7,-9,7,-7,-6,-1,-10,4,-1,10,-9,-7,-4,-10,-8,-10,1,7,7,9,5,-6,3,3,-10,3,7,-4,-4,5,9,6,-5,9,7,9,-8,-8,-5,-4,-3,6,-8,2,7,1,-3,7,1,1,-4,9,7,2,8,9,-4,3,7,3,5,9,2,-7,2,1,2,7,-7,1,6,7,5,3,7,6,-9,-1,1,-3,10,8,-4,-9,-5,-8,-10,-10,-7,9,-8,-8,-9,9,9,-4,8,8,6,-4,-8,1,-9,5,5,-10,6,-1,8,-7,-4,5,5,-5,-3,-4,-3,-8,-8,-6,6,8,-5,9,9,-10,6,-6,-1,2,1,-4,2,5,-7,-3,-1,5,9,1,9,-2,9,6,8,1,-7,-2,-8,-7,1,6,-10,-10,-2,-7,-6,-7,-7,-4,-4,-2,1,8,-4,2,4,9,-8,4,-2,2,10,-3,-4,-1,4,-7,-1,6,-9,-1,8,-8,-9,-8,-5,-6,-2,3,-6,4,10,-6,-6,6,-1,-8,-7,5,1,4,8,1,9,-5,10,6,1,-1,-4,-10,-6,-4,-7,6,4,3,1,1,-10,6,6,-10,-6,1,9,-5,-2,-5,-9,6,-2,7,-5,-3,5,-4,3,-7,4,9,1,-8,4,-3,-6,-8,10,-2,-4,-1,-6,9,7,-8,-5,-6,-2,1,-10,9,-5,-4,4,1,1,-4,-7,8,-8,6,-3,2,-9,-1,7,-4,-1,-9,-4,-3,-4,-6,2,4,-10,5,-7,1,8,-6,6,-9,-10,-1,9,-1,-1,-4,3,-2,10,-8,-2,4,5,-7,2,7,4,-6,10,-6,6,-3,-7,2,2,-8,-3,8,-4,8,-1,-6,10,10,9,4,-5,4,4,1,8,-2,-4,8,5,2,8,3,-9,-2,8,-6,3,-6,6,4,-9,-4,9,8,5,-2,-7,-2,9,-7,-10,-1,-2,1,-4,-3,-1,3,8,-4,1,-7,2,-7,5,-9,6,9,6,-8,-3,3,-8,6,10,-9,7,-1,5,-1,1,-7,-9,-5,-4,-7,-5,-5,-9,-9,10,-1,-3,-3,10,1,3,8,-2,-8,7,-7,8,-7,10,7,5,-4,-2,-9,2,-6,5,10,-9,6,-6,10,5,-10,-3,-5,-6,-7,10,1,-5,1,-2,-7,-9,-9,-6,-8,6,5,6,-10,-3,-9,4,-6,-8,8,6,-1,10,10,8,-6,8,6,3,4,-4,8,-6,8,1,-4,-3,4,4,9,3,-8,7,5,-1]], dtype = "int8")#candidate|580|(1, 1568)|const|int8
call_579 = relay.TupleGetItem(func_500_call(relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), ), 3)
call_581 = relay.TupleGetItem(func_504_call(relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), ), 3)
bop_594 = relay.mod(var_519.astype('float64'), relay.reshape(uop_520.astype('float64'), relay.shape_of(var_519))) # shape=(1, 6, 1)
func_500_call = mod.get_global_var('func_500')
func_504_call = mutated_mod.get_global_var('func_504')
call_598 = relay.TupleGetItem(func_500_call(relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), ), 0)
call_599 = relay.TupleGetItem(func_504_call(relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), relay.reshape(const_580.astype('int8'), [14, 16, 7]), ), 0)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
call_600 = relay.TupleGetItem(func_440_call(relay.reshape(const_568.astype('uint16'), []), relay.reshape(call_567.astype('uint16'), [15, 3, 15]), ), 0)
call_601 = relay.TupleGetItem(func_443_call(relay.reshape(const_568.astype('uint16'), []), relay.reshape(call_567.astype('uint16'), [15, 3, 15]), ), 0)
output = relay.Tuple([bop_562,call_567,const_568,var_569,call_579,const_580,bop_594,call_598,call_600,])
output2 = relay.Tuple([bop_562,call_570,const_568,var_569,call_581,const_580,bop_594,call_599,call_601,])
func_603 = relay.Function([var_519,var_569,], output)
mod['func_603'] = func_603
mod = relay.transform.InferType()(mod)
mutated_mod['func_603'] = func_603
mutated_mod = relay.transform.InferType()(mutated_mod)
func_603_call = mutated_mod.get_global_var('func_603')
var_605 = relay.var("var_605", dtype = "float64", shape = (1, 6, 1))#candidate|605|(1, 6, 1)|var|float64
var_606 = relay.var("var_606", dtype = "uint16", shape = (225, 3))#candidate|606|(225, 3)|var|uint16
call_604 = func_603_call(var_605,var_606,)
output = call_604
func_607 = relay.Function([var_605,var_606,], output)
mutated_mod['func_607'] = func_607
mutated_mod = relay.transform.InferType()(mutated_mod)
var_704 = relay.var("var_704", dtype = "uint32", shape = (16, 9, 13))#candidate|704|(16, 9, 13)|var|uint32
const_705 = relay.const([[[2,-1,9,5,-4,-1,5,-4,-3,3,-4,-1,-8],[-3,-4,5,2,6,2,9,2,8,-5,2,-5,10],[-9,-6,5,-2,-10,8,4,5,3,1,6,-5,-10],[-1,-1,4,-1,6,8,6,4,-1,-7,-2,10,6],[-3,-7,5,7,8,-3,-2,6,7,-9,7,9,4],[-2,7,10,-6,-2,-4,6,-10,10,8,-3,7,5],[-10,6,8,-10,-6,2,7,3,-2,-3,8,6,9],[-2,-9,-2,3,-5,-8,3,-5,-5,10,-6,-9,-7],[-4,4,2,2,2,2,-2,6,4,-1,6,-3,-6]],[[-1,8,1,-10,-5,-10,4,9,-9,5,-10,-5,-9],[-8,9,1,-10,-7,9,7,-10,1,3,3,2,7],[8,2,5,10,-6,4,-8,-9,8,2,-3,5,-4],[7,-6,-5,-10,-10,9,-9,-10,2,-3,6,-5,1],[-3,5,3,-3,-10,-3,-7,5,2,-2,-6,2,-5],[3,9,9,8,-9,-8,10,-1,8,6,6,7,2],[-2,5,3,7,-1,3,-4,2,5,10,7,-7,-1],[-2,-1,-4,-1,2,8,-3,8,10,-8,-4,4,-2],[3,-3,2,-7,-2,-8,1,-6,-9,-9,6,-9,-10]],[[9,8,-7,1,-9,7,-4,8,-1,-1,-9,-5,7],[8,6,-10,3,6,-3,10,-10,8,6,-7,7,4],[-6,4,10,9,1,-1,-9,4,6,4,3,-1,9],[5,-3,2,10,5,2,-6,-5,-7,5,-6,9,8],[-1,-10,6,6,6,3,6,6,1,-10,8,-3,-1],[6,7,2,5,-8,-1,2,-2,5,-2,5,10,2],[-3,3,-3,5,-4,-10,3,2,4,-1,-1,-6,7],[8,9,5,4,9,8,-1,-3,1,-1,-9,-9,3],[9,2,-3,3,-10,-5,8,-4,-7,7,8,-7,-3]],[[3,-1,3,-8,-5,-7,6,-7,-4,4,-1,4,3],[8,-8,8,-4,-2,8,3,-2,2,-8,8,3,-9],[-4,-2,5,-9,-10,6,8,10,7,-9,-4,8,9],[-3,7,7,-4,-8,-7,-4,6,1,-8,-1,-6,8],[1,-1,10,-3,5,8,-8,-10,5,-4,-4,6,5],[8,8,-1,-2,9,6,10,-3,3,-7,8,5,-5],[-4,10,6,3,6,3,8,-9,-8,-6,-7,4,-9],[8,-4,-4,3,10,-6,5,8,-9,2,1,-6,2],[-5,7,-9,-2,7,-1,-2,2,-5,9,5,-2,-5]],[[-8,9,6,6,-9,-10,8,-7,-8,10,-6,-6,-10],[10,-9,-2,-7,7,-6,7,-10,4,-4,6,9,-1],[3,-7,-8,5,-3,-4,-2,6,-6,1,9,3,-6],[5,-7,10,4,4,-8,9,10,4,4,7,-2,-5],[4,4,7,9,8,5,-9,-5,-2,8,8,1,1],[-10,-8,4,3,4,-1,-5,2,-4,2,8,6,3],[8,-5,-6,2,2,-6,7,-6,-2,-9,2,5,-3],[-6,-9,-2,-5,-5,-2,4,6,8,9,4,-4,6],[-4,-9,-6,-7,-6,-3,4,3,-9,-9,-5,8,2]],[[5,-5,-1,4,8,-7,-6,-2,3,8,-3,2,-2],[10,1,2,-7,9,-5,-9,4,8,8,-10,7,8],[-5,-3,-7,8,6,-6,-6,2,-7,-8,9,-10,7],[10,9,5,6,2,-2,3,-10,-10,1,2,7,8],[6,-2,9,-1,10,2,-6,1,-5,-6,3,-3,-10],[-2,-5,-2,8,5,8,6,2,7,-2,-5,-3,4],[-9,-10,-2,-5,-5,-9,10,2,2,7,-6,3,3],[7,-1,3,7,-8,-10,-7,9,-9,2,9,7,-7],[2,-1,9,4,8,-1,-5,-4,-1,9,7,-1,7]],[[-2,-7,9,10,-8,-7,-1,2,-8,9,3,2,-2],[-9,-7,-2,-3,9,-2,-4,-8,-5,-6,10,-5,7],[-1,-9,10,-3,-6,-8,-5,3,-6,8,-7,-2,9],[6,-1,3,4,6,-9,2,5,4,-9,-5,-1,-6],[5,1,9,1,2,3,-3,-1,7,6,5,2,-7],[6,2,-6,9,-5,7,-10,8,-5,4,3,-9,-3],[-1,8,-2,5,6,10,-1,8,1,-8,-3,1,-1],[7,5,6,-5,-5,-9,-10,4,-2,5,6,8,-4],[-7,8,-1,-9,7,4,10,-8,10,3,9,2,7]],[[-9,-1,6,10,-7,-1,7,2,9,-1,-10,-6,-8],[10,9,7,2,3,-8,-4,-1,-3,-4,-8,-6,1],[-1,-1,-3,8,-8,-10,-2,10,5,5,10,2,3],[-6,-10,-7,7,-9,-6,-2,9,5,-6,-3,1,-5],[-8,-5,-9,-1,10,-10,-5,7,4,-8,-3,6,9],[10,-9,-1,6,-7,-8,3,-6,7,4,3,-5,-2],[-5,10,8,-4,-9,-4,-10,9,9,10,-7,-5,2],[8,10,-8,8,6,9,5,-4,10,-9,-6,3,4],[-10,10,6,9,-7,10,4,5,6,9,8,6,10]],[[-8,5,-2,10,8,1,-3,-6,-6,-8,6,-1,-6],[6,-10,5,1,9,-6,5,-4,-5,7,-9,6,3],[3,-8,-5,-2,-3,3,6,5,-9,-10,-9,2,-8],[8,-8,5,5,10,-8,-4,-9,4,9,1,-4,-2],[6,8,3,-10,-6,-2,-10,2,-9,10,-3,5,-6],[9,5,-2,5,9,-7,-9,-5,6,7,5,4,4],[-10,9,-5,-5,-10,-3,6,-3,10,5,-4,3,7],[-7,-1,-8,2,-6,-6,9,-7,-10,-6,-5,-4,-4],[-1,4,-4,1,-4,8,-6,2,7,-7,6,7,-10]],[[-8,3,5,-10,-4,-9,-10,3,10,-4,5,-4,4],[-10,1,3,6,-3,10,9,-6,8,-3,5,4,6],[9,-2,1,3,-3,3,-2,10,8,5,-10,-1,6],[8,3,9,-7,4,2,2,-4,5,-9,-10,-6,4],[-10,1,-1,5,-3,8,7,8,1,-7,4,5,-8],[-4,-9,-10,-3,4,10,-10,8,-4,1,-4,-1,1],[2,-1,-8,7,-3,-8,-10,2,4,2,1,-6,-8],[-7,1,8,-4,6,-4,-1,1,-3,4,10,7,-9],[-10,1,3,-8,-7,-8,5,-5,8,-8,-7,-8,6]],[[8,-10,4,-2,-7,-4,-9,-3,-2,-2,9,-4,9],[-8,2,-4,1,-7,-5,9,-4,-1,4,2,4,6],[6,-10,3,3,-4,-6,-5,8,-2,4,-2,8,10],[-5,-8,8,8,10,-4,7,-9,2,7,-4,9,-4],[-4,6,-4,6,1,-7,-10,2,-9,-3,-3,-4,5],[9,5,-4,8,3,-2,-6,-3,-1,8,-8,-2,5],[5,6,-7,-5,-8,3,2,8,3,8,4,8,5],[-1,6,-2,5,-3,1,-7,1,-5,-6,-9,-6,6],[8,-4,-1,-8,2,9,8,-2,-4,-9,2,7,8]],[[8,5,-4,9,4,4,8,3,-5,-1,-3,-7,9],[-8,-7,4,-10,1,-10,3,-2,-7,5,10,-3,9],[4,-10,-7,-9,7,-2,-2,1,5,5,5,10,4],[-1,8,4,-8,-7,5,7,-1,8,-2,-5,-7,4],[2,1,3,2,-2,7,1,2,2,-9,-10,4,10],[-9,-10,6,-1,8,8,7,-8,-9,10,6,-1,-5],[-6,5,8,2,8,-2,6,3,1,6,-8,-10,-4],[-10,-3,-8,-4,4,6,2,5,-5,5,9,-1,7],[7,8,6,-10,3,-8,2,10,10,-4,-7,10,-10]],[[-2,-1,10,8,3,4,-3,-3,3,-2,5,-7,9],[-9,-10,5,10,2,-7,-6,6,-4,-8,-9,4,5],[5,8,10,10,-8,3,-2,8,7,10,5,-2,4],[-5,3,8,2,2,7,1,1,-3,-8,2,6,-1],[-9,5,6,-2,10,9,-9,-5,4,-2,-9,-8,8],[4,-4,-7,10,8,4,5,1,-7,2,9,-9,9],[-7,-6,-6,1,7,-5,-3,-1,3,10,-9,-6,-10],[-6,-7,-8,-3,1,5,3,3,-9,3,3,5,1],[2,-4,4,3,9,6,-4,-3,-1,2,-6,-8,2]],[[-4,5,-2,7,-1,-8,-4,4,10,7,8,2,1],[3,-7,-3,4,10,-6,2,8,10,8,2,-3,-1],[-8,-2,-3,2,-2,4,-2,-9,-1,-6,10,1,-9],[6,-5,-2,2,-3,1,-6,10,-8,-2,1,-8,2],[-2,-8,9,2,10,8,9,8,7,-2,2,1,9],[-9,10,6,6,2,7,1,9,-1,1,10,-3,-6],[4,-9,1,9,1,1,1,-5,9,-8,-3,9,-8],[1,3,6,-7,10,5,7,-5,3,6,-4,4,-5],[1,-1,5,2,-3,7,5,8,-5,6,-7,-7,7]],[[-8,-3,7,7,5,-4,-1,-5,-7,-4,-10,1,-2],[-7,9,-2,4,-10,-1,1,-10,-3,1,1,-8,-2],[7,-4,-10,-8,4,8,5,-1,6,2,-8,-8,3],[-5,-4,7,10,10,4,-3,-8,-6,-8,3,10,1],[-10,-7,6,-2,-10,-2,4,-10,-10,5,-3,-4,10],[6,-3,-10,-6,6,8,4,8,-8,-6,9,3,-5],[-8,9,6,-10,4,2,6,2,3,-1,2,3,10],[-5,7,9,-10,-3,-6,5,-4,2,2,-3,-9,-8],[-4,8,-3,6,4,-5,-6,1,5,3,-3,-9,-8]],[[2,5,-6,-10,-2,9,5,3,-8,-2,2,4,-7],[8,-4,6,-4,5,-3,-6,2,-5,9,-10,-7,-5],[-10,-4,-10,2,-1,-9,3,-4,-2,1,8,-2,-4],[-3,3,-1,10,1,-10,-1,3,-5,-5,3,1,-1],[10,7,4,-8,-9,1,4,9,-6,4,-4,6,-10],[-9,2,2,-3,-9,-1,7,6,1,-1,6,3,-7],[-1,-6,-1,-3,-5,7,6,-9,3,-6,4,-10,8],[-2,-8,-9,1,1,10,-5,1,-7,7,3,-9,-8],[-8,2,4,8,5,10,-5,-6,-5,2,-4,-6,-4]]], dtype = "uint32")#candidate|705|(16, 9, 13)|const|uint32
bop_706 = relay.not_equal(var_704.astype('bool'), relay.reshape(const_705.astype('bool'), relay.shape_of(var_704))) # shape=(16, 9, 13)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
var_715 = relay.var("var_715", dtype = "uint16", shape = ())#candidate|715|()|var|uint16
var_716 = relay.var("var_716", dtype = "uint16", shape = (675,))#candidate|716|(675,)|var|uint16
call_714 = relay.TupleGetItem(func_440_call(relay.reshape(var_715.astype('uint16'), []), relay.reshape(var_716.astype('uint16'), [15, 3, 15]), ), 0)
call_717 = relay.TupleGetItem(func_443_call(relay.reshape(var_715.astype('uint16'), []), relay.reshape(var_716.astype('uint16'), [15, 3, 15]), ), 0)
output = relay.Tuple([bop_706,call_714,var_715,var_716,])
output2 = relay.Tuple([bop_706,call_717,var_715,var_716,])
func_727 = relay.Function([var_704,var_715,var_716,], output)
mod['func_727'] = func_727
mod = relay.transform.InferType()(mod)
var_728 = relay.var("var_728", dtype = "uint32", shape = (16, 9, 13))#candidate|728|(16, 9, 13)|var|uint32
var_729 = relay.var("var_729", dtype = "uint16", shape = ())#candidate|729|()|var|uint16
var_730 = relay.var("var_730", dtype = "uint16", shape = (675,))#candidate|730|(675,)|var|uint16
output = func_727(var_728,var_729,var_730,)
func_731 = relay.Function([var_728,var_729,var_730,], output)
mutated_mod['func_731'] = func_731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_792 = relay.var("var_792", dtype = "int8", shape = (6, 14, 8))#candidate|792|(6, 14, 8)|var|int8
var_793 = relay.var("var_793", dtype = "int8", shape = (6, 14, 8))#candidate|793|(6, 14, 8)|var|int8
bop_794 = relay.multiply(var_792.astype('int8'), relay.reshape(var_793.astype('int8'), relay.shape_of(var_792))) # shape=(6, 14, 8)
func_727_call = mod.get_global_var('func_727')
func_731_call = mutated_mod.get_global_var('func_731')
const_799 = relay.const([[-7,-7,-3,-10,-4,2,9,-10,6,-9,-8,6,-10,2,8,-6,-6,9,-3,6,8,-9,6,5,-3,-2,-1,-6,7,-4,3,1,5,1,-1,-7,-6,7,6,-4,8,2,4,-2,-8,-5,8,-2,-8,-5,1,9,6,9,-9,1,-9,-7,-2,4,-7,1,-7,-10,-8,-3,7,-6,9,5,8,-7,10,10,5,2,-2,-9,7,-3,6,-4,7,6,-5,6,-8,10,7,9,-3,5,-3,-6,6,5,-5,-5,-7,10,3,-5,9,10,-7,-9,2,-8,8,7,-3,-8,-1,5,-5,2,-3,10,6,9,10,4,1,1,7,-5,-10,3,7,3,-2,-1,-4,8,-10,-3,-4,4,-10,5,1,-8,-7,6,8,8,-4,5,-8,10,-10,8,-10,7,5,5],[-6,-1,-5,-6,4,-3,1,-8,2,4,-1,-4,-5,10,5,-8,-2,1,-3,10,-9,10,2,-8,8,-6,6,-9,-3,3,-4,-10,-7,4,7,9,-9,-7,-9,-7,9,-3,5,10,-10,-7,-3,3,-7,-1,-2,-4,1,4,-8,-4,-6,6,10,-3,-6,-9,9,-8,-10,3,-1,-5,-10,-10,-3,7,-5,3,6,8,-8,2,10,4,-1,3,5,2,-10,4,-1,3,4,1,-1,4,5,-5,-8,-6,7,10,-1,5,-7,5,10,3,-3,3,-3,-3,7,-5,10,-3,-3,7,5,5,1,-1,-5,4,-1,4,-6,-4,9,-7,1,4,-4,7,-2,-5,-10,5,-1,5,-8,5,8,-8,-9,3,-6,5,9,1,-4,-4,3,2,-10,5,8,1,-1,2],[-3,-9,4,-9,6,4,-6,-4,10,2,-5,-6,-9,8,6,-10,-6,10,-5,-3,-8,-10,-7,-3,2,-5,-2,-1,-9,-3,-10,-6,3,6,-4,10,-10,-8,7,-4,-7,-10,-1,4,-10,7,-9,6,-8,10,3,-5,2,-10,5,10,2,-4,10,4,-4,-10,3,-5,-8,2,6,-4,1,7,-7,-9,-6,-1,1,-8,4,6,-2,8,-7,-1,8,-1,-1,-4,-5,7,-5,2,2,1,-6,5,9,9,-4,10,10,-10,10,-9,-6,-8,3,-9,10,2,8,-5,1,-2,6,6,3,-7,9,-10,2,-9,10,1,9,-7,3,3,-7,10,9,1,3,7,-6,10,-8,3,9,7,9,5,5,-5,-5,6,-2,-9,7,-8,4,-10,-7,10,7,3,1,-8],[-8,-9,-2,10,-3,9,-5,-2,-7,1,5,9,9,10,2,6,-2,4,1,-8,-10,-6,-5,4,-1,7,8,-8,10,9,-5,-1,-2,-1,-8,9,5,3,-2,-4,-5,8,7,-10,-5,8,-4,7,5,-10,6,-10,-3,-2,3,-9,-7,10,5,10,1,-10,-8,-2,6,7,-1,4,2,-2,-2,-3,-10,-2,5,4,3,-2,2,5,7,-9,-8,4,-7,-7,7,-9,-5,1,4,-7,-9,9,4,-9,-5,-1,9,5,4,-6,-3,8,-5,-9,6,7,6,9,9,5,6,7,3,-3,5,8,4,8,-6,-2,5,-10,-7,-5,6,-10,-5,-8,-2,-5,-10,-7,-2,-6,5,3,-1,-3,9,-5,-9,7,-6,2,4,7,2,-10,10,-3,6,-5,8,-5],[9,3,-9,-3,3,-4,-5,-3,-6,3,9,-1,1,-3,-7,7,-2,-5,9,7,3,1,4,-7,6,-6,-6,-1,-4,-8,-3,-6,-5,8,-9,10,-8,-2,-4,1,-10,5,4,5,-10,-9,-9,-10,8,-2,2,-8,2,1,8,-6,-8,4,-6,-2,-5,-9,-7,-1,-4,-1,5,-7,9,3,-9,-8,1,-1,-5,3,-5,4,-1,7,8,-4,-7,-9,8,-8,10,-7,9,8,-2,-2,5,-9,1,-6,3,-1,2,1,-2,10,-4,-5,-5,-5,-5,-4,-2,-1,-8,-9,8,5,2,1,-4,7,5,9,6,7,-2,4,-5,-5,1,-5,-6,8,-8,-3,7,10,-2,4,-4,9,-3,8,-9,10,-8,10,5,3,6,-6,4,7,-5,-5,-1,5,-9,-1],[-5,-10,-5,-9,8,-6,8,7,7,9,4,-1,8,10,-6,-8,3,-5,6,-1,-8,9,8,-9,2,5,1,3,-9,-9,-6,-7,4,-7,10,7,2,3,1,-3,9,9,3,9,6,8,-6,-3,10,1,8,7,3,2,-9,7,4,-8,-1,-10,7,-1,4,3,3,-4,-1,1,-9,10,-7,-8,4,-9,-4,-1,6,6,-5,-5,-3,9,8,-10,2,-6,8,1,1,6,-8,6,1,5,-1,4,9,-9,-3,3,10,6,3,-1,-7,10,4,-1,-8,-10,-9,2,-8,-3,2,10,-5,-2,-6,-3,-10,8,8,8,8,-6,4,2,-1,-7,-3,6,5,-10,-1,-4,7,4,3,-3,1,7,9,9,6,-4,-3,9,-10,-9,-2,-1,-4,4,8,10],[9,5,5,-10,2,-10,-6,-2,-7,-9,-1,10,7,7,-1,5,2,-10,5,-10,3,1,10,-10,-2,10,1,-1,3,-4,-2,-6,10,-5,-5,-4,-6,10,6,-5,-10,2,-2,-2,10,1,6,10,3,-2,10,-7,-1,-10,-8,5,-9,-9,-3,-8,-8,7,-8,9,2,-10,-9,9,-5,-7,6,-10,3,10,10,-9,8,-2,4,-8,7,1,6,-6,-10,3,-6,-1,-2,-3,8,3,-7,-2,10,-1,1,-1,-1,7,9,-7,5,-2,-8,1,6,-4,3,-7,-10,-8,-10,8,-7,3,7,2,8,10,10,6,7,2,7,-3,-6,8,1,7,10,-5,-2,10,-3,-9,-2,-9,-4,1,10,8,6,-2,-9,8,-3,-10,-1,6,-1,-5,10,5,6,-5],[1,-2,9,-7,-7,2,7,-6,2,-10,-8,7,-10,-4,-10,3,-2,10,1,2,2,7,-3,8,4,10,5,-10,2,3,2,-3,1,8,1,-7,3,2,6,5,10,-1,-3,-9,-6,-6,8,-7,-5,8,-6,-10,-8,8,4,3,-7,6,7,6,8,4,-3,5,-7,-3,8,1,-8,2,-2,-4,3,-10,7,-6,8,-3,2,-9,10,9,7,-6,10,-5,-6,3,10,10,9,-6,-5,-10,-6,-3,4,6,5,-6,-1,7,-3,5,-4,-3,-10,-2,8,1,2,2,-9,9,2,8,8,1,6,5,10,2,6,6,-7,-8,2,-7,10,-2,1,6,-5,-9,2,10,-1,-1,-6,1,-3,-2,-10,-5,-5,3,-8,5,3,-4,-9,8,-9,-7,7,8],[-6,4,-3,6,-9,-4,-7,10,-3,6,3,2,-2,-6,-6,8,7,7,4,-8,2,10,2,-9,6,-9,-9,10,-1,-2,-1,10,-4,-9,-2,-1,-10,-4,-1,-7,8,8,8,-1,-2,-7,-3,2,6,6,-10,-2,8,-5,9,-7,-10,6,-1,-9,10,-8,5,-10,3,8,-3,-6,-6,-1,2,2,5,10,-5,-10,6,-7,10,-1,3,8,10,8,-4,-1,-9,10,2,-1,-10,-1,-1,-5,-6,-5,8,7,-9,5,6,-4,10,-10,-4,9,-1,10,9,-2,4,3,1,9,5,-7,-2,7,-3,-4,7,4,-2,-10,2,5,9,7,8,-2,-3,-5,10,-7,-2,-3,-4,6,1,-6,-8,-8,-1,-7,-4,3,7,-2,-1,-1,10,1,-9,10,5,-3],[-9,9,8,8,-6,1,8,-2,2,3,7,8,2,-8,-5,1,-3,-3,-6,-5,1,-6,7,9,1,-5,-3,6,2,4,6,3,-6,10,-9,-4,1,1,-10,-1,-10,1,9,1,-3,1,10,9,-2,8,4,-4,-4,4,5,6,10,-1,7,10,-6,-9,5,-10,7,-10,2,5,-1,9,-4,3,4,-3,-3,3,6,-6,10,-9,6,9,5,3,4,-6,-6,-2,-1,1,10,5,-6,6,-1,-6,-4,6,-8,7,-10,10,-2,-6,9,-8,1,-4,6,-6,3,-3,-6,6,7,-6,8,3,-10,2,-8,8,-6,8,-2,-9,8,-2,3,8,3,7,2,3,8,-3,8,6,4,5,2,-1,-8,-3,-2,10,-7,-9,6,-2,9,-1,-7,-2,2,-8],[-3,-5,1,3,10,-1,10,-5,3,-1,3,9,8,2,1,6,-9,5,8,-5,1,3,-5,-8,-8,-3,8,4,5,7,7,8,-2,-8,-2,9,1,5,-2,6,-9,-4,1,4,-3,-10,4,-6,2,7,9,7,7,5,2,-1,10,-9,-3,-7,-4,5,-6,2,-7,1,-6,5,8,-5,3,3,-3,-6,-7,-1,9,-7,-10,-2,2,4,-10,1,1,2,2,-9,10,-1,8,8,-1,4,-7,-8,-10,5,1,9,2,6,-9,-10,10,-5,-5,-8,9,-8,8,5,6,9,-8,9,-2,-5,-2,9,8,10,1,2,10,4,3,8,-1,-9,5,-6,-5,-9,8,8,-6,-3,-8,4,-4,8,10,-9,2,8,7,6,7,-8,-3,-4,7,-5,10,-7],[-8,2,-10,8,10,-1,4,-9,-5,7,-5,9,8,-9,1,-3,-10,8,-9,-5,-6,7,6,-10,-5,8,-8,2,-9,4,-8,1,-5,9,7,2,10,3,7,6,-10,10,1,6,6,10,-9,1,1,-8,5,4,-1,-3,10,-10,6,-10,3,-5,-6,-2,-7,10,4,6,10,-7,7,-1,1,-7,1,-4,-1,-3,5,1,10,-9,9,-4,-7,2,-2,1,2,2,3,-10,-6,-3,-10,-2,6,-5,-9,6,1,-10,-10,-10,-8,8,8,-8,-2,-5,5,-3,3,8,6,-9,-1,-1,9,5,-4,9,-2,-8,5,-7,3,1,-7,-9,2,-1,7,6,-5,-3,4,1,-6,10,-2,-2,-8,-2,-2,1,9,7,-6,-3,-1,-10,-8,-5,-1,8,4,10]], dtype = "uint32")#candidate|799|(12, 156)|const|uint32
var_800 = relay.var("var_800", dtype = "uint16", shape = ())#candidate|800|()|var|uint16
var_801 = relay.var("var_801", dtype = "uint16", shape = (675,))#candidate|801|(675,)|var|uint16
call_798 = relay.TupleGetItem(func_727_call(relay.reshape(const_799.astype('uint32'), [16, 9, 13]), relay.reshape(var_800.astype('uint16'), []), relay.reshape(var_801.astype('uint16'), [675,]), ), 3)
call_802 = relay.TupleGetItem(func_731_call(relay.reshape(const_799.astype('uint32'), [16, 9, 13]), relay.reshape(var_800.astype('uint16'), []), relay.reshape(var_801.astype('uint16'), [675,]), ), 3)
output = relay.Tuple([bop_794,call_798,const_799,var_800,var_801,])
output2 = relay.Tuple([bop_794,call_802,const_799,var_800,var_801,])
func_813 = relay.Function([var_792,var_793,var_800,var_801,], output)
mod['func_813'] = func_813
mod = relay.transform.InferType()(mod)
mutated_mod['func_813'] = func_813
mutated_mod = relay.transform.InferType()(mutated_mod)
func_813_call = mutated_mod.get_global_var('func_813')
var_815 = relay.var("var_815", dtype = "int8", shape = (6, 14, 8))#candidate|815|(6, 14, 8)|var|int8
var_816 = relay.var("var_816", dtype = "int8", shape = (6, 14, 8))#candidate|816|(6, 14, 8)|var|int8
var_817 = relay.var("var_817", dtype = "uint16", shape = ())#candidate|817|()|var|uint16
var_818 = relay.var("var_818", dtype = "uint16", shape = (675,))#candidate|818|(675,)|var|uint16
call_814 = func_813_call(var_815,var_816,var_817,var_818,)
output = call_814
func_819 = relay.Function([var_815,var_816,var_817,var_818,], output)
mutated_mod['func_819'] = func_819
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1140 = relay.var("var_1140", dtype = "int64", shape = (13, 15, 10))#candidate|1140|(13, 15, 10)|var|int64
var_1141 = relay.var("var_1141", dtype = "int64", shape = (13, 15, 10))#candidate|1141|(13, 15, 10)|var|int64
bop_1142 = relay.not_equal(var_1140.astype('bool'), relay.reshape(var_1141.astype('bool'), relay.shape_of(var_1140))) # shape=(13, 15, 10)
func_813_call = mod.get_global_var('func_813')
func_819_call = mutated_mod.get_global_var('func_819')
var_1156 = relay.var("var_1156", dtype = "int8", shape = (1, 672))#candidate|1156|(1, 672)|var|int8
var_1157 = relay.var("var_1157", dtype = "uint16", shape = ())#candidate|1157|()|var|uint16
const_1158 = relay.const([4,-2,3,-1,-10,-9,10,7,3,-1,-2,-4,8,-1,8,6,5,4,-2,3,9,3,7,-9,-5,3,-7,-6,-9,-5,-6,-1,-9,-1,2,-6,-5,10,8,2,10,-5,-4,-2,-10,2,-8,-9,7,-1,-3,2,6,9,1,-9,9,-10,5,-8,8,10,-2,-6,-8,-10,2,10,3,-1,-3,7,-4,-4,10,-5,9,-8,-6,-10,1,-7,9,10,7,8,6,1,-4,-1,5,7,-1,7,-1,-2,-6,-5,6,-8,-1,-4,-2,6,-10,-4,-3,10,-8,-1,-3,-1,-2,5,2,-5,-10,7,-4,1,10,-8,6,6,3,5,10,7,10,2,-5,-4,-5,-8,6,10,5,-10,6,-7,3,6,-7,5,-7,9,5,-9,-6,9,6,-9,-9,-4,-7,5,4,-3,-6,-8,9,-5,5,-7,10,-5,7,-9,-5,1,-5,-1,-10,2,7,1,9,10,-1,-7,3,1,-7,6,5,-5,-6,1,-3,5,3,5,3,8,-4,-7,6,-7,-10,7,2,8,-10,-5,-4,-4,8,10,7,-7,2,8,-6,3,7,3,-1,7,-2,4,-5,-2,8,-6,10,7,-1,-2,-9,-3,4,-6,-7,-6,-5,4,1,-5,-7,-5,8,9,-7,8,-5,-2,7,5,9,4,4,-6,-3,5,3,9,3,3,-10,-6,2,-3,4,-6,1,-8,7,1,6,1,7,-3,7,-2,6,1,6,8,4,-4,3,10,-8,1,-7,3,4,6,-1,8,6,3,5,-3,-7,-4,3,-10,4,-4,8,5,-3,-3,9,10,-5,7,-6,1,-1,4,8,4,-9,-5,6,-9,10,5,-7,5,10,2,-4,1,-7,-7,1,8,-10,7,2,-8,9,-4,-8,8,10,-6,-2,-8,-4,-3,10,4,-4,-7,8,1,-9,-4,3,-7,-2,7,-1,-1,4,9,5,4,-6,-8,-8,-2,5,6,-7,-2,7,1,6,5,5,-4,9,10,10,-10,6,-5,-7,8,7,1,9,4,-3,5,-2,6,6,-7,-3,-5,10,-9,-5,10,-9,6,2,-3,-8,3,-9,1,7,4,-6,9,10,-2,-7,5,-3,1,-10,2,-5,7,-8,-1,-8,-4,-3,10,-3,6,-5,3,1,-5,2,-6,6,3,2,8,-9,6,-7,3,9,9,10,3,-8,10,-10,7,10,10,3,3,2,2,-6,-9,-4,-10,-2,4,3,-2,-2,9,-8,-5,-6,-3,-8,8,-9,10,7,8,4,1,-7,10,-1,-1,-7,2,-7,-10,1,10,6,5,-1,-3,6,2,-7,3,3,-9,-2,-4,7,5,-1,-7,-6,-10,-7,2,7,7,8,3,3,2,2,-6,9,6,8,-8,-8,-1,-3,8,-1,-3,-4,2,8,-5,-1,1,10,-3,3,-3,2,-7,1,5,10,-2,-4,-2,-10,5,7,3,-1,8,-8,6,8,-2,-9,-10,-7,-3,-7,-3,3,-10,4,-10,8,1,-10,3,-10,-5,-4,-10,-9,1,-10,-5,-4,7,-8,3,4,9,10,-2,-9,-1,-3,-5,4,2,-10,-10,2,2,-4,-6,-8,-4,9,9,4,4,-9,-2,4,-8,1,-1,-3,4,8,6,7,2,-6,3,-3,7,-5,-6,3,3,9,-8,7,-10,4,-8,-5,-6,-5,1,7,9,-9,10,8,7,-7,8,8,6,-3,2,7,9,6,-10,-9,4,-6,9,8,-9,-10,-7,-6,-10,-9,7,2,-10,7,3,10,2,-4,10,-7,-4,-8,5,6], dtype = "uint16")#candidate|1158|(675,)|const|uint16
call_1155 = relay.TupleGetItem(func_813_call(relay.reshape(var_1156.astype('int8'), [6, 14, 8]), relay.reshape(var_1156.astype('int8'), [6, 14, 8]), relay.reshape(var_1157.astype('uint16'), []), relay.reshape(const_1158.astype('uint16'), [675,]), ), 4)
call_1159 = relay.TupleGetItem(func_819_call(relay.reshape(var_1156.astype('int8'), [6, 14, 8]), relay.reshape(var_1156.astype('int8'), [6, 14, 8]), relay.reshape(var_1157.astype('uint16'), []), relay.reshape(const_1158.astype('uint16'), [675,]), ), 4)
func_603_call = mod.get_global_var('func_603')
func_607_call = mutated_mod.get_global_var('func_607')
var_1167 = relay.var("var_1167", dtype = "float64", shape = (6,))#candidate|1167|(6,)|var|float64
call_1166 = relay.TupleGetItem(func_603_call(relay.reshape(var_1167.astype('float64'), [1, 6, 1]), relay.reshape(call_1155.astype('uint16'), [225, 3]), ), 1)
call_1168 = relay.TupleGetItem(func_607_call(relay.reshape(var_1167.astype('float64'), [1, 6, 1]), relay.reshape(call_1155.astype('uint16'), [225, 3]), ), 1)
output = relay.Tuple([bop_1142,call_1155,var_1156,var_1157,const_1158,call_1166,var_1167,])
output2 = relay.Tuple([bop_1142,call_1159,var_1156,var_1157,const_1158,call_1168,var_1167,])
func_1180 = relay.Function([var_1140,var_1141,var_1156,var_1157,var_1167,], output)
mod['func_1180'] = func_1180
mod = relay.transform.InferType()(mod)
var_1181 = relay.var("var_1181", dtype = "int64", shape = (13, 15, 10))#candidate|1181|(13, 15, 10)|var|int64
var_1182 = relay.var("var_1182", dtype = "int64", shape = (13, 15, 10))#candidate|1182|(13, 15, 10)|var|int64
var_1183 = relay.var("var_1183", dtype = "int8", shape = (1, 672))#candidate|1183|(1, 672)|var|int8
var_1184 = relay.var("var_1184", dtype = "uint16", shape = ())#candidate|1184|()|var|uint16
var_1185 = relay.var("var_1185", dtype = "float64", shape = (6,))#candidate|1185|(6,)|var|float64
output = func_1180(var_1181,var_1182,var_1183,var_1184,var_1185,)
func_1186 = relay.Function([var_1181,var_1182,var_1183,var_1184,var_1185,], output)
mutated_mod['func_1186'] = func_1186
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1257 = relay.var("var_1257", dtype = "float32", shape = (11, 5, 5))#candidate|1257|(11, 5, 5)|var|float32
uop_1258 = relay.erf(var_1257.astype('float32')) # shape=(11, 5, 5)
output = uop_1258
output2 = uop_1258
func_1260 = relay.Function([var_1257,], output)
mod['func_1260'] = func_1260
mod = relay.transform.InferType()(mod)
mutated_mod['func_1260'] = func_1260
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1261 = relay.var("var_1261", dtype = "float32", shape = (11, 5, 5))#candidate|1261|(11, 5, 5)|var|float32
func_1260_call = mutated_mod.get_global_var('func_1260')
call_1262 = func_1260_call(var_1261)
output = call_1262
func_1263 = relay.Function([var_1261], output)
mutated_mod['func_1263'] = func_1263
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1349 = relay.var("var_1349", dtype = "float64", shape = (15, 15, 7))#candidate|1349|(15, 15, 7)|var|float64
uop_1350 = relay.asinh(var_1349.astype('float64')) # shape=(15, 15, 7)
output = uop_1350
output2 = uop_1350
func_1354 = relay.Function([var_1349,], output)
mod['func_1354'] = func_1354
mod = relay.transform.InferType()(mod)
var_1355 = relay.var("var_1355", dtype = "float64", shape = (15, 15, 7))#candidate|1355|(15, 15, 7)|var|float64
output = func_1354(var_1355)
func_1356 = relay.Function([var_1355], output)
mutated_mod['func_1356'] = func_1356
mutated_mod = relay.transform.InferType()(mutated_mod)
const_1396 = relay.const([[[10,-9,-10,-10,8,-3,4],[-7,-1,-10,-1,3,1,10],[6,7,-7,5,-9,-8,-2],[7,-6,-10,-9,-5,1,8],[3,-9,-9,-5,5,8,8],[2,-4,5,3,-6,-6,-3],[-10,8,8,2,-6,-8,6],[4,9,-3,-4,2,6,2]],[[-2,8,5,-3,5,-2,2],[-1,-5,4,10,-6,8,6],[9,-7,-2,-1,2,1,1],[10,5,-2,6,-6,-5,-3],[-4,8,-6,4,-3,6,-3],[5,-2,7,-8,-10,7,1],[8,-5,-2,8,2,-7,-9],[10,-9,3,-4,9,-9,8]],[[-4,-8,-4,7,-7,-5,6],[-4,6,6,3,-7,10,-8],[-6,7,-5,6,-7,7,-7],[3,-4,-10,-2,-6,-6,1],[2,8,-6,-9,9,4,10],[10,-4,3,-1,-10,9,-6],[-10,2,-6,1,-5,-7,-8],[10,2,7,6,-4,5,8]],[[10,9,-10,-2,-1,-10,-3],[-9,-8,1,3,-6,8,-4],[3,-6,-7,-5,-6,-3,9],[-1,2,7,1,2,4,2],[7,4,9,7,3,-3,8],[-5,-3,1,-6,-7,-4,2],[-6,-9,-2,5,1,7,3],[-4,-8,-7,-3,8,9,-8]],[[-4,-3,5,-3,7,8,1],[5,-7,-4,5,-8,4,-10],[1,7,10,-6,-6,-2,1],[2,-7,-8,5,9,-7,-10],[3,5,-2,9,-4,7,-8],[-2,10,2,2,-10,-4,-9],[-6,-2,-3,-10,9,6,-6],[3,3,2,-1,1,-4,2]],[[-1,-9,-2,-3,9,-9,-7],[-2,-8,-7,-10,6,-3,7],[-9,-5,10,7,-6,8,-8],[-4,3,-7,2,-2,3,6],[-5,5,-9,-4,6,-10,4],[10,6,4,-1,-8,5,5],[-10,-5,-1,-8,-3,-9,6],[3,-9,1,-6,-5,-7,8]],[[-7,-1,-2,-1,-9,5,-3],[-10,6,-10,-4,-2,-9,-7],[-2,-10,8,5,8,-4,6],[6,6,10,-9,8,-5,-4],[-7,-1,-8,7,10,7,-7],[6,2,3,-10,-9,5,-2],[8,-5,9,-6,-6,-2,-5],[6,-1,5,4,1,-3,3]],[[-8,10,-3,10,10,-8,9],[5,-10,-7,-3,8,2,-3],[2,5,-3,5,-10,7,-3],[6,-8,9,2,-10,-10,-4],[8,9,7,9,9,-5,10],[-8,-8,6,-5,-5,1,-4],[4,5,-7,-3,8,-4,9],[-5,1,4,8,-5,-5,2]],[[6,6,3,-5,6,7,-1],[1,10,10,9,-1,4,-2],[8,4,7,5,3,-2,-9],[5,2,1,3,-3,3,-1],[-4,5,-4,-8,-1,3,-3],[3,6,4,-5,9,-4,2],[10,4,8,-6,10,-5,6],[-3,5,-3,-7,8,-1,1]],[[1,3,-9,-5,-8,-1,-4],[-9,4,-1,1,9,-2,9],[-4,-9,6,-6,10,-3,-4],[-9,1,-3,2,-4,-10,9],[10,5,10,10,-5,2,10],[8,-10,-4,-6,5,-1,-9],[2,4,7,9,-3,-5,7],[-6,5,-3,-2,7,6,-6]]], dtype = "uint64")#candidate|1396|(10, 8, 7)|const|uint64
var_1397 = relay.var("var_1397", dtype = "uint64", shape = (10, 8, 7))#candidate|1397|(10, 8, 7)|var|uint64
bop_1398 = relay.maximum(const_1396.astype('uint64'), relay.reshape(var_1397.astype('uint64'), relay.shape_of(const_1396))) # shape=(10, 8, 7)
func_500_call = mod.get_global_var('func_500')
func_504_call = mutated_mod.get_global_var('func_504')
var_1417 = relay.var("var_1417", dtype = "int8", shape = (1568,))#candidate|1417|(1568,)|var|int8
call_1416 = relay.TupleGetItem(func_500_call(relay.reshape(var_1417.astype('int8'), [14, 16, 7]), relay.reshape(var_1417.astype('int8'), [14, 16, 7]), relay.reshape(var_1417.astype('int8'), [14, 16, 7]), ), 2)
call_1418 = relay.TupleGetItem(func_504_call(relay.reshape(var_1417.astype('int8'), [14, 16, 7]), relay.reshape(var_1417.astype('int8'), [14, 16, 7]), relay.reshape(var_1417.astype('int8'), [14, 16, 7]), ), 2)
output = relay.Tuple([bop_1398,call_1416,var_1417,])
output2 = relay.Tuple([bop_1398,call_1418,var_1417,])
func_1428 = relay.Function([var_1397,var_1417,], output)
mod['func_1428'] = func_1428
mod = relay.transform.InferType()(mod)
mutated_mod['func_1428'] = func_1428
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1428_call = mutated_mod.get_global_var('func_1428')
var_1430 = relay.var("var_1430", dtype = "uint64", shape = (10, 8, 7))#candidate|1430|(10, 8, 7)|var|uint64
var_1431 = relay.var("var_1431", dtype = "int8", shape = (1568,))#candidate|1431|(1568,)|var|int8
call_1429 = func_1428_call(var_1430,var_1431,)
output = call_1429
func_1432 = relay.Function([var_1430,var_1431,], output)
mutated_mod['func_1432'] = func_1432
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1513 = relay.var("var_1513", dtype = "int32", shape = (3, 16, 2))#candidate|1513|(3, 16, 2)|var|int32
var_1514 = relay.var("var_1514", dtype = "int32", shape = (3, 16, 2))#candidate|1514|(3, 16, 2)|var|int32
bop_1515 = relay.bitwise_and(var_1513.astype('int32'), relay.reshape(var_1514.astype('int32'), relay.shape_of(var_1513))) # shape=(3, 16, 2)
output = relay.Tuple([bop_1515,])
output2 = relay.Tuple([bop_1515,])
func_1530 = relay.Function([var_1513,var_1514,], output)
mod['func_1530'] = func_1530
mod = relay.transform.InferType()(mod)
mutated_mod['func_1530'] = func_1530
mutated_mod = relay.transform.InferType()(mutated_mod)
func_1530_call = mutated_mod.get_global_var('func_1530')
var_1532 = relay.var("var_1532", dtype = "int32", shape = (3, 16, 2))#candidate|1532|(3, 16, 2)|var|int32
var_1533 = relay.var("var_1533", dtype = "int32", shape = (3, 16, 2))#candidate|1533|(3, 16, 2)|var|int32
call_1531 = func_1530_call(var_1532,var_1533,)
output = call_1531
func_1534 = relay.Function([var_1532,var_1533,], output)
mutated_mod['func_1534'] = func_1534
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1798 = relay.var("var_1798", dtype = "float32", shape = (1, 9, 2))#candidate|1798|(1, 9, 2)|var|float32
uop_1799 = relay.cosh(var_1798.astype('float32')) # shape=(1, 9, 2)
output = uop_1799
output2 = uop_1799
func_1801 = relay.Function([var_1798,], output)
mod['func_1801'] = func_1801
mod = relay.transform.InferType()(mod)
var_1802 = relay.var("var_1802", dtype = "float32", shape = (1, 9, 2))#candidate|1802|(1, 9, 2)|var|float32
output = func_1801(var_1802)
func_1803 = relay.Function([var_1802], output)
mutated_mod['func_1803'] = func_1803
mutated_mod = relay.transform.InferType()(mutated_mod)
var_1972 = relay.var("var_1972", dtype = "float32", shape = (12, 13, 10))#candidate|1972|(12, 13, 10)|var|float32
var_1973 = relay.var("var_1973", dtype = "float32", shape = (12, 13, 10))#candidate|1973|(12, 13, 10)|var|float32
bop_1974 = relay.less_equal(var_1972.astype('bool'), relay.reshape(var_1973.astype('bool'), relay.shape_of(var_1972))) # shape=(12, 13, 10)
uop_1977 = relay.sinh(bop_1974.astype('float64')) # shape=(12, 13, 10)
func_1428_call = mod.get_global_var('func_1428')
func_1432_call = mutated_mod.get_global_var('func_1432')
var_1983 = relay.var("var_1983", dtype = "uint64", shape = (4, 140))#candidate|1983|(4, 140)|var|uint64
const_1984 = relay.const([-7,3,-5,2,-10,10,-1,8,-7,-7,-7,-2,7,2,-5,3,9,9,9,-6,2,-4,10,-7,1,5,6,9,-7,5,1,-6,-6,-8,6,-3,9,-3,1,4,-3,2,-6,3,1,7,-7,-4,-10,7,-6,6,10,-2,1,-5,-7,-4,-7,6,6,-9,10,8,-6,8,7,-7,3,-8,-7,9,-1,7,-3,-5,8,-1,-9,-10,6,-9,2,-8,9,-9,10,-10,-4,-8,-10,3,-10,8,-7,-6,-4,4,5,1,9,-10,-10,1,-5,-9,5,-3,-10,4,-9,8,9,9,7,8,10,6,-6,1,9,6,-4,9,-2,-1,5,-4,3,-8,5,-8,-2,4,3,-1,7,-4,-8,5,6,-1,-5,-5,10,1,-9,-10,-3,-1,2,-7,-9,10,-6,7,10,4,5,-4,-5,10,-3,-7,7,-1,1,-7,-2,10,-1,1,7,9,-7,8,-7,7,1,6,-3,-6,-6,-7,-10,-8,5,4,-7,5,5,5,2,-6,6,-10,9,-5,6,5,10,9,-5,9,-6,-5,8,7,-1,-2,4,-6,-7,-8,-3,-9,8,-10,2,2,-6,1,6,3,-2,2,6,-7,-9,5,9,4,-5,8,-4,5,7,3,7,-1,-2,3,3,10,-6,-1,-3,2,-9,-5,-3,4,-8,5,2,2,-9,1,-8,3,10,-1,-10,10,3,4,-6,6,-5,7,7,1,-6,-9,5,-8,-7,-7,2,-8,-1,-3,-3,10,1,7,-7,-5,3,7,5,3,6,9,-7,5,9,6,-10,-2,-2,-1,7,1,-2,-8,-4,9,10,8,-6,5,2,9,-6,4,-10,-6,-1,-7,-7,-9,5,-1,-9,2,3,-3,7,-8,3,-2,5,9,6,8,-2,-4,-7,2,3,1,1,10,4,-2,8,-1,3,10,8,3,-4,-7,-4,-7,4,3,-2,5,3,-4,-1,-7,-6,6,-2,6,-7,-9,3,-8,-5,-2,5,2,3,2,-10,-2,3,-2,6,3,8,-6,9,8,4,1,-5,1,7,-6,2,3,6,2,-3,7,8,-4,7,3,10,-5,4,-5,-9,8,-8,7,-8,6,-2,3,-6,9,9,-7,3,-5,5,-8,2,-6,-8,-4,9,-8,-3,-5,7,4,-5,4,10,6,9,2,9,10,2,-4,4,-6,-10,-7,4,-3,-2,-8,6,10,8,-5,-3,-4,10,7,-7,-2,5,-8,-1,-9,-7,5,-3,-7,8,-7,10,5,-9,-4,7,-7,-5,3,-5,-1,1,6,-1,-6,6,10,-7,5,-7,-4,5,7,8,8,-4,6,6,-1,4,8,3,7,2,5,1,6,-3,-7,-4,-2,5,6,-9,-6,4,-6,-1,4,5,5,-1,1,5,-2,-3,9,-6,7,10,10,-9,-1,-1,6,-8,-1,1,10,-10,-6,1,-2,8,2,-7,4,-1,8,3,8,-4,-8,-1,-10,-5,5,-10,4,-8,-8,1,1,-6,-3,-1,-8,-10,-2,7,3,10,9,-6,-10,9,9,7,-1,-9,1,7,-6,8,-9,2,8,-1,2,9,-4,-7,8,5,8,-8,-5,-10,4,-1,-4,5,4,10,5,-7,10,4,-7,-9,-4,-6,2,3,4,8,-8,-10,1,6,1,-5,-7,-1,9,-1,-9,-1,3,-6,8,4,9,8,-6,-7,10,-10,-2,-3,-2,-1,3,1,-8,2,-3,3,4,3,6,9,-10,2,1,-3,2,-4,-8,1,-4,-5,1,8,-9,-5,8,2,-4,-2,-2,10,8,8,-10,5,2,-10,6,-10,8,-2,1,6,10,2,2,-5,7,10,10,3,3,-9,-3,8,4,8,5,1,-4,7,-7,8,-6,5,-4,-10,-4,-10,7,8,7,7,2,5,-2,-3,5,-3,2,6,6,4,6,7,-9,7,1,-8,-3,-8,-7,4,-6,4,-6,-5,10,-2,-3,-2,-2,-10,4,-5,-3,1,-7,4,1,1,-10,-10,6,-9,-1,-3,3,-7,3,3,8,-6,1,8,9,9,-4,2,-1,8,3,8,-5,2,-8,4,10,-10,-9,3,6,7,-9,1,-9,3,-10,-5,-5,-5,-1,10,10,-2,-8,6,5,5,2,5,5,-1,-8,-4,-3,-7,-9,-8,6,-7,-5,10,6,-5,1,10,-9,-3,-1,-3,7,1,-8,4,-6,-10,-3,2,-6,-10,10,-3,4,9,6,-10,-3,-10,7,-5,-6,-6,3,-10,7,-6,-1,8,-8,1,-9,6,1,1,1,-2,10,5,10,-4,7,-5,-10,4,-10,-1,-5,8,-4,-3,-6,-9,-7,-2,4,-3,8,9,-1,-8,-9,7,-8,1,4,7,1,6,4,4,-4,9,4,-1,-3,3,8,8,-3,-9,5,6,-4,3,-2,6,-3,-7,-2,-10,-7,-9,-3,2,7,4,7,-7,4,-9,-8,-2,7,-8,10,-6,-2,-2,1,2,5,-10,-8,1,9,-10,-4,-8,6,2,7,-2,2,-6,10,-2,4,5,-9,7,6,-6,2,3,-1,3,-10,9,-3,-6,-2,5,-10,-9,-7,-8,-6,5,-8,7,3,9,8,-7,4,-1,-2,2,7,1,-10,8,3,5,2,-3,3,-10,4,2,-1,-2,-9,2,-8,9,4,-5,9,-10,-3,7,7,-8,5,8,-3,6,7,-8,-5,-4,-4,-7,8,-5,-10,-8,10,-9,6,-8,10,-10,5,3,-7,-8,7,-4,-1,-7,-3,-2,-8,7,-10,2,-10,8,-4,-5,7,10,9,10,-6,4,9,2,7,-3,4,-7,-2,2,-6,-7,-2,-9,-2,2,-4,-7,2,-4,7,-6,-5,-7,-9,-2,-8,10,-5,-3,-7,-7,1,8,1,2,9,1,4,2,-9,-10,3,-6,-10,9,6,-2,8,-2,-2,-9,4,-5,-7,4,3,-2,-6,9,9,-5,4,2,7,-2,-10,-10,-10,5,-5,-5,4,7,8,-8,-3,-4,2,8,-1,2,1,6,-8,1,1,-4,-5,-7,-6,-2,1,6,3,7,-4,3,-1,-9,1,4,9,-9,8,9,-4,-5,-8,-8,-4,-3,4,-6,-5,3,6,-10,-5,9,-8,9,1,6,-2,-8,-1,-7,-7,7,-7,-9,-8,-7,-1,-10,7,2,-1,5,5,2,-4,-1,1,2,8,2,-4,3,-7,6,-10,10,-7,7,-8,-9,9,3,8,9,-9,-4,-9,-8,-7,10,3,1,7,-3,8,-9,-4,10,-10,-5,-1,1,5,-8,-6,-10,-10,-8,-10,4,-6,6,7,-9,-6,-5,-3,-8,-10,1,-5,-2,1,-4,4,8,10,8,-1,-6,3,-5,-2,7,7,5,-8,-9,-8,1,-10,9,-6,-9,6,-5,9,-5,2,10,-1,-3,3,-9,4,10,-2,4,-10,6,-10,-4,2,-7,-3,-4,-1,3,-9,-4,4,-7,-5,-6,-3,10,7,2,3,-4,6,9,4,-1,6,-6,-9,9,-3,10,1,-1,2,-8,3,-1,1,-6,4,10,1,10,-10,-6,6,-10,6,3,-5,2,4,-6,-5,-10,10,-9,-7,-2,8,9,-6,10,10,-9,-6,-4,-6,3,-3,-2,-4,-3,-10,9,5,-3,-7,-10,-6,-6,9,1,10,-1,-1,-5,4,8,-3,5,5,8,8,-10,8,-7,6,4,-5,9,8,3,-2,-9,7,4,1,-5,1,-3,3,-5,1,-5,6,2,-5,-7,5,-1,-9,6,6,-9,9,7,-4,-9,4,1,7,4,-8,9,9,8,7,-8,-5,2,-10,6,-1,-1,10,-7,-7,8,-3,1,-9,10,4,10,6,5,-1,2,-5,-9,4,1,6,-9,8,-1,-10,4,-10,5,-4,-3,-1,-9,7,1,-3,-5,4,7,3,-9,-10,6,5,7,-4,-8,-5,-3,-6,-6,-9,-7,-4,-4,-4,-1,-6,-8,10,4,-6,-1,9,5,-2,-4,3,-3,8,5,2,8,-3,-1,-2,9,7,-10,7,2,10,10,7,-2,3,-7,-3,5,9,-1,8,8,-3,2,6,9,9,-9,5,9,9,4,-1,10,-2,-1,-2,-8,9,-6,3,3,5,8,3,9,-5,4,2,8,-4,6,9,-4,5,7,5,2,2,-3,1,-5,-5,-4,4,10,-2,7,-2], dtype = "int8")#candidate|1984|(1568,)|const|int8
call_1982 = relay.TupleGetItem(func_1428_call(relay.reshape(var_1983.astype('uint64'), [10, 8, 7]), relay.reshape(const_1984.astype('int8'), [1568,]), ), 1)
call_1985 = relay.TupleGetItem(func_1432_call(relay.reshape(var_1983.astype('uint64'), [10, 8, 7]), relay.reshape(const_1984.astype('int8'), [1568,]), ), 1)
output = relay.Tuple([uop_1977,call_1982,var_1983,const_1984,])
output2 = relay.Tuple([uop_1977,call_1985,var_1983,const_1984,])
func_1990 = relay.Function([var_1972,var_1973,var_1983,], output)
mod['func_1990'] = func_1990
mod = relay.transform.InferType()(mod)
var_1991 = relay.var("var_1991", dtype = "float32", shape = (12, 13, 10))#candidate|1991|(12, 13, 10)|var|float32
var_1992 = relay.var("var_1992", dtype = "float32", shape = (12, 13, 10))#candidate|1992|(12, 13, 10)|var|float32
var_1993 = relay.var("var_1993", dtype = "uint64", shape = (4, 140))#candidate|1993|(4, 140)|var|uint64
output = func_1990(var_1991,var_1992,var_1993,)
func_1994 = relay.Function([var_1991,var_1992,var_1993,], output)
mutated_mod['func_1994'] = func_1994
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2018 = relay.var("var_2018", dtype = "bool", shape = ())#candidate|2018|()|var|bool
var_2019 = relay.var("var_2019", dtype = "bool", shape = (3, 3, 6))#candidate|2019|(3, 3, 6)|var|bool
bop_2020 = relay.logical_or(var_2018.astype('bool'), var_2019.astype('bool')) # shape=(3, 3, 6)
output = bop_2020
output2 = bop_2020
func_2025 = relay.Function([var_2018,var_2019,], output)
mod['func_2025'] = func_2025
mod = relay.transform.InferType()(mod)
mutated_mod['func_2025'] = func_2025
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2025_call = mutated_mod.get_global_var('func_2025')
var_2027 = relay.var("var_2027", dtype = "bool", shape = ())#candidate|2027|()|var|bool
var_2028 = relay.var("var_2028", dtype = "bool", shape = (3, 3, 6))#candidate|2028|(3, 3, 6)|var|bool
call_2026 = func_2025_call(var_2027,var_2028,)
output = call_2026
func_2029 = relay.Function([var_2027,var_2028,], output)
mutated_mod['func_2029'] = func_2029
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2131 = relay.var("var_2131", dtype = "float32", shape = (9, 11, 13))#candidate|2131|(9, 11, 13)|var|float32
var_2132 = relay.var("var_2132", dtype = "float32", shape = (9, 11, 13))#candidate|2132|(9, 11, 13)|var|float32
bop_2133 = relay.divide(var_2131.astype('float32'), relay.reshape(var_2132.astype('float32'), relay.shape_of(var_2131))) # shape=(9, 11, 13)
uop_2143 = relay.acos(bop_2133.astype('float64')) # shape=(9, 11, 13)
output = uop_2143
output2 = uop_2143
func_2146 = relay.Function([var_2131,var_2132,], output)
mod['func_2146'] = func_2146
mod = relay.transform.InferType()(mod)
mutated_mod['func_2146'] = func_2146
mutated_mod = relay.transform.InferType()(mutated_mod)
func_2146_call = mutated_mod.get_global_var('func_2146')
var_2148 = relay.var("var_2148", dtype = "float32", shape = (9, 11, 13))#candidate|2148|(9, 11, 13)|var|float32
var_2149 = relay.var("var_2149", dtype = "float32", shape = (9, 11, 13))#candidate|2149|(9, 11, 13)|var|float32
call_2147 = func_2146_call(var_2148,var_2149,)
output = call_2147
func_2150 = relay.Function([var_2148,var_2149,], output)
mutated_mod['func_2150'] = func_2150
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2252 = relay.var("var_2252", dtype = "float64", shape = (4, 12, 15))#candidate|2252|(4, 12, 15)|var|float64
uop_2253 = relay.sinh(var_2252.astype('float64')) # shape=(4, 12, 15)
var_2275 = relay.var("var_2275", dtype = "float64", shape = (4, 12, 15))#candidate|2275|(4, 12, 15)|var|float64
bop_2276 = relay.bitwise_and(var_2252.astype('uint8'), relay.reshape(var_2275.astype('uint8'), relay.shape_of(var_2252))) # shape=(4, 12, 15)
func_603_call = mod.get_global_var('func_603')
func_607_call = mutated_mod.get_global_var('func_607')
var_2282 = relay.var("var_2282", dtype = "float64", shape = (6,))#candidate|2282|(6,)|var|float64
const_2283 = relay.const([-2,2,4,4,9,8,7,-3,5,1,9,-10,3,-6,-4,10,-1,-5,-4,-4,-4,-2,-8,8,-3,5,-10,10,4,-6,-10,-2,1,-7,8,-8,4,5,-5,7,3,9,-9,-9,-5,-1,3,8,-3,-1,-8,7,-8,-6,-5,-2,-7,4,-10,-10,7,-9,-5,6,-4,10,5,4,10,-10,-4,-5,-3,-8,-1,-5,-10,-3,-1,-4,6,-7,-1,-8,-4,6,-1,1,-10,-7,9,-3,8,5,-5,-6,-3,3,7,-5,-10,-9,1,-4,-8,4,-3,-6,3,10,-10,-10,-9,-7,4,5,4,-4,-3,8,7,7,-10,-9,-4,-2,5,-9,5,-1,9,-3,-2,-8,5,-4,-7,-2,-6,2,2,-6,6,-1,1,-1,10,3,-3,4,-6,-10,-1,-10,5,-9,-5,-2,-8,1,-5,-10,-6,-6,6,7,-10,5,-3,-10,-8,-5,-2,6,-2,-1,-9,1,-4,6,-6,-1,4,-8,4,3,-5,-9,-7,-6,9,-3,8,6,10,-3,-7,-1,-4,-5,-6,-4,-9,7,5,-3,3,-5,-4,5,2,-8,-6,-7,-9,3,-3,6,8,-7,7,7,8,10,-2,-5,7,-3,-4,5,3,1,-5,-7,8,-5,-4,4,-6,-3,3,3,3,5,8,-3,8,-6,-10,-5,7,-3,4,-2,-6,-9,4,9,9,7,5,-10,-5,-7,1,3,-4,8,6,8,-6,-2,-10,8,-6,9,-6,-4,5,-3,-3,-4,-3,-5,-4,-2,2,3,-5,-1,7,-10,-9,1,6,-10,-10,-8,-9,-1,-7,-3,7,1,6,-2,-2,-5,7,-4,-10,3,-1,3,5,-2,7,3,1,7,-6,4,1,10,5,-2,10,-5,8,2,-1,8,-10,-3,5,-2,-9,10,6,-10,7,6,-9,10,-6,-3,-5,-7,1,9,2,-6,8,10,9,-2,4,-4,8,4,-6,-3,7,-9,-9,-4,-10,1,8,9,-3,-4,9,-2,5,3,3,4,3,10,-2,5,7,-7,9,-2,8,-9,-7,-6,-7,4,2,-1,3,-10,-8,-6,-1,9,8,-2,9,-5,-2,-1,-1,-10,6,9,5,-4,-4,-7,3,7,-7,-10,-10,-5,8,-3,2,4,-9,7,2,-8,-2,-5,8,6,1,-4,-1,-5,-6,9,-4,-5,-6,6,4,8,8,10,-5,3,-10,-9,5,-3,-2,10,7,-6,10,5,-5,-1,-6,9,5,9,9,8,4,7,-6,-2,2,8,-2,-7,5,10,-7,5,2,-9,6,9,1,-5,-4,-3,-5,-10,3,-5,-3,2,-5,6,-2,2,-4,-7,-8,-5,-9,9,-9,-2,4,3,-2,1,-3,-9,-2,3,2,3,2,10,-6,7,8,8,-7,-1,-5,8,-9,-4,-8,9,9,-9,1,4,8,1,-3,10,-9,10,-5,-3,-5,-7,4,-2,9,-5,1,-6,-3,7,-5,5,-9,-9,3,-1,6,1,6,-4,5,5,-9,4,-9,7,7,-9,6,1,9,10,-1,-7,6,-4,-1,6,-2,-1,9,-7,9,-5,6,-8,7,10,1,-5,-9,10,7,-9,4,2,-7,2,-4,2,-2,-5,-8,-6,-2,-8,1,-2,-1,9,-10,-3,-7,2,-3,-3,3,-3,-1,-2,4,-8,5,5,-9,-5,3,-6,2,-4,-2,-9,5,8,5,-10,7,5,-8,-9,-3,7,-2,-8,1,-9,-1,10,4,-1,-5,9,-1,-5,5,7,8,-5,9,5,7,4,6,-3,1,1,-9,7,5,10,-6,9,2,-6,-9], dtype = "uint16")#candidate|2283|(675,)|const|uint16
call_2281 = relay.TupleGetItem(func_603_call(relay.reshape(var_2282.astype('float64'), [1, 6, 1]), relay.reshape(const_2283.astype('uint16'), [225, 3]), ), 7)
call_2284 = relay.TupleGetItem(func_607_call(relay.reshape(var_2282.astype('float64'), [1, 6, 1]), relay.reshape(const_2283.astype('uint16'), [225, 3]), ), 7)
func_1354_call = mod.get_global_var('func_1354')
func_1356_call = mutated_mod.get_global_var('func_1356')
const_2288 = relay.const([2.828935,-2.931050,1.893230,8.798762,-1.061618,-0.129956,6.909251,2.516247,0.210293,5.638515,-4.552999,8.395061,3.500015,9.076674,-0.954729,-4.425686,8.199410,-9.258639,3.666027,9.083412,0.459023,-4.528364,-5.409793,-2.561722,-1.638522,5.138711,-6.535674,5.263833,-7.420685,1.454405,4.651848,-2.819330,-5.669219,-1.959327,-9.524703,2.002032,6.059260,-0.486255,-1.892025,-9.785530,-5.453181,0.475412,-7.233518,-3.625367,9.270584,7.937650,1.843865,4.154008,-3.453498,7.942679,9.823080,-4.982884,8.575249,6.197955,-1.225600,-9.726097,9.490615,5.805156,-1.679360,-5.569032,7.671829,1.706294,2.119786,-7.889114,-6.464114,-5.408875,8.224284,-5.088885,9.566043,-2.504015,6.331678,-7.497105,-0.817700,-5.385587,3.780203,-3.093244,9.401889,-3.342097,1.212198,-8.134758,-8.560335,1.638248,-9.818112,-0.120261,5.865620,8.867141,-7.371143,4.140777,9.428819,4.798967,-3.287074,-9.637698,9.118120,-5.189810,6.809385,-5.612507,4.739591,8.233980,-1.651417,0.635947,-1.124372,-4.352474,-0.278727,5.686227,-7.345063,0.276767,3.691221,-3.917407,-2.834254,0.607357,3.727579,5.452095,8.918591,-2.417314,8.029870,-0.440459,-7.478493,-6.388180,-9.673643,4.354719,-1.466539,-8.729059,-4.815094,5.515639,5.116496,-2.023965,-1.457271,-7.677564,6.718135,8.501803,-8.765576,-8.796092,5.576286,-3.041700,4.562079,-6.800928,-5.901196,7.315715,4.415233,2.809304,7.945928,0.634336,4.525194,8.244635,6.558128,9.953454,-0.771149,-2.770670,-8.700351,-1.619467,-3.373076,-4.011684,9.199848,9.692950,-1.891153,5.127571,1.317209,4.258124,-7.095307,4.276521,-5.834845,-6.151507,-9.183150,-4.181608,4.590830,-6.060332,2.621320,-0.836723,-1.811377,3.962242,-6.187541,-1.190174,4.466614,-1.146567,9.517690,8.774924,6.737710,-6.482989,8.132117,-1.040018,7.629725,-2.910277,8.030054,1.172274,0.260030,-5.763670,-5.717603,3.513614,0.530392,2.956336,0.725535,-8.717197,-9.525033,-6.031977,7.573878,-7.848739,-8.479555,6.750070,4.353351,9.821233,9.021488,-2.843636,6.906536,3.015245,-6.774721,4.487667,-6.567327,-0.708841,-7.636554,-6.125687,6.255237,4.894510,6.964964,-1.734643,3.970976,3.842334,7.701475,-3.039323,0.376116,8.265898,2.285804,5.309356,-4.634094,-4.149284,9.626653,-6.900266,-0.734667,-5.687272,-3.955360,-4.692392,-8.281991,-2.756188,-3.155861,-6.719018,2.035746,4.989733,-8.228104,-2.723126,-2.629536,-3.834301,2.324368,-2.263962,-8.540454,8.322262,3.779150,-8.343113,-0.638497,-6.332115,-9.626203,-3.490915,-6.975514,-9.708888,3.732874,-7.800391,1.850630,5.424509,0.779827,-0.762167,-1.989692,3.896495,-4.119842,6.690073,-9.369158,9.367744,8.061170,-5.264043,6.550725,-1.814951,4.487159,-5.335031,3.124233,8.554394,2.699320,-5.935775,-0.303133,-8.048905,-9.068514,6.065452,3.929202,1.476967,-2.335420,-5.544392,-8.757382,-0.143859,8.955366,-3.927850,-2.414025,-8.851820,-0.523243,5.884846,-2.921998,4.818513,-2.543155,1.449199,7.634828,-1.621852,6.281370,8.326212,7.400850,3.428553,-1.460774,-6.511015,-8.646566,-8.659124,7.671808,1.129793,7.479024,-1.663095,2.851430,5.387665,-8.806456,-3.947613,9.124193,0.679353,-7.995829,8.298048,8.254623,3.182218,-0.145655,-3.801683,-6.962676,6.615324,-2.090377,0.098944,-7.178698,-6.921135,-5.746175,-6.854555,-8.877537,-5.500464,-5.631268,3.914635,4.143009,2.917301,-0.067700,-4.812074,8.799732,0.007996,9.362644,5.223837,3.660442,0.417317,8.220941,7.257967,0.969426,-8.378824,-0.396483,2.097457,-5.096446,1.909097,-7.348013,7.785366,-6.727264,0.728844,6.853452,2.918827,-1.240948,-2.835087,-0.635089,0.185811,-5.691868,7.665730,2.211410,-6.601935,-1.843013,2.154468,5.727441,-6.601058,4.564681,-8.759009,2.490679,8.470243,-3.526009,6.511521,-7.382888,-7.875080,-7.601938,5.010828,3.417124,7.922699,0.046696,-4.190453,-5.334366,-1.067856,4.495928,-7.044236,-3.521686,-1.566947,-8.417419,8.494175,9.445396,6.318477,-0.761222,6.167986,-5.917297,8.631777,3.689832,3.856571,-8.107277,2.427847,-2.242384,-2.114636,-1.346728,8.274038,-0.253522,1.969989,-0.236294,7.918032,7.771662,-3.162346,-0.930884,1.997085,-5.065152,5.445527,0.062835,-3.868803,-2.152360,-6.619868,1.411626,1.640105,7.869764,6.265758,8.074843,-3.547307,-6.371068,2.948170,-2.431781,-6.657863,1.774089,5.583407,6.074843,-3.468786,1.153049,-2.868298,-2.156232,-7.447911,-9.767025,6.763474,1.401405,-0.730169,2.945927,-5.435842,-6.761772,-5.447649,-6.012044,-9.818786,6.398485,3.323852,-3.272276,9.319774,-6.004764,-7.040505,-0.939147,-1.723742,6.917834,4.520819,-5.350902,-1.519458,-8.307817,-9.613776,-6.195295,-4.390901,7.104129,-9.711620,0.738897,-1.851855,-0.780325,-1.539894,9.708359,-4.218120,4.701867,6.162813,5.256804,9.550245,-6.256997,-6.766902,-1.660531,-8.001512,-8.072839,8.229368,-3.277878,7.888104,-5.534423,7.974101,6.621906,-0.159505,6.283743,-4.590528,3.567392,5.436224,-6.195849,4.536995,-1.864137,-3.286150,-6.002758,0.516132,-2.598696,2.709810,-7.185696,-2.005712,-9.712253,5.514351,-0.098181,-6.767372,6.223935,4.030289,9.271070,-5.763629,-9.857982,9.746231,9.712770,3.255608,2.357751,-4.931782,-9.869122,1.148104,-3.812417,-5.351585,0.283067,-4.685605,-9.783360,-3.415872,-5.127474,-6.772984,3.840709,-9.081177,-7.020495,-3.989999,-3.234608,8.256754,7.696594,-9.688104,7.599081,-8.356629,1.147901,5.320162,-1.739038,-8.785397,3.872254,2.853408,-2.675746,9.044132,-9.846343,-8.950978,-7.533943,4.578535,0.276625,1.946696,-8.281771,4.597409,6.816202,-8.787136,-1.750238,-5.748013,9.615558,-3.712751,6.552818,-9.967035,-2.404059,2.547220,-1.789014,-6.962634,-7.146804,5.393602,-1.052960,-1.999253,5.460357,7.839054,2.388142,0.132129,-6.000475,-5.849962,9.634211,2.205418,-1.297538,6.577343,1.105567,-1.571023,6.482095,-4.576288,-1.962110,8.987918,5.209505,5.847162,4.896635,8.373021,-7.211626,7.277124,-5.605479,7.189172,2.851497,-3.888808,9.819278,-7.277976,-8.506889,-4.389771,-8.569724,-4.416520,-6.737125,-0.357355,8.627566,0.687075,-9.036425,5.746561,1.610609,0.087957,2.443531,0.541742,-7.558521,-8.472774,4.542158,4.244945,-7.719396,9.885935,9.894269,-4.612917,-2.175483,-5.946845,8.554285,8.733281,1.106516,6.417757,-9.490834,1.710365,8.138337,9.363824,-1.966053,-4.523912,7.021167,3.964038,2.095133,8.631265,-0.254121,-8.935266,2.292570,-5.811191,-3.349963,-5.920425,4.606978,0.736366,2.431345,8.572904,8.849595,-5.998375,1.037019,3.829459,-7.855666,-5.707872,3.553298,-3.605797,3.569308,1.594646,-1.182541,-4.580734,1.415743,-2.337633,7.237695,-3.418056,8.119712,3.196440,-6.557643,-6.314213,4.516544,6.776231,1.352711,8.919692,9.648626,3.198687,-9.255233,9.732404,5.542498,-4.873191,9.942602,-4.332190,-4.190518,1.573105,-2.261309,7.483855,3.916353,-0.526580,-4.677534,0.287815,-5.841456,4.757288,-3.891931,-4.752763,0.212439,-2.568597,0.576721,7.923871,-9.218033,4.389752,-5.486820,-0.979277,2.511267,8.080085,7.677279,8.572917,1.796633,-0.596721,3.835741,7.413794,-8.078730,3.312342,-1.156425,0.813590,-3.319947,-8.039708,3.117731,-7.239547,4.732837,-7.766890,-4.300803,9.234069,-7.739958,7.231553,-8.727459,-4.601542,0.662256,0.582077,8.463350,-9.675760,2.743938,-0.872745,-7.337061,7.558970,-7.184190,-6.039297,-5.327883,-2.889540,8.502083,-9.088427,9.216517,-6.375387,1.482394,-5.326828,-7.848608,-2.477413,3.115412,-0.338614,1.875592,-6.026090,2.802002,-1.092214,-0.768740,9.660261,-7.547634,4.605798,-4.049702,-7.839067,8.902596,-4.066302,-3.435361,5.993087,-3.616671,0.581977,-4.790406,8.411407,-5.477217,0.404063,5.060866,-8.112069,-4.597416,8.450423,-6.460427,-1.803808,-2.428242,4.470632,3.588264,9.254103,4.234629,2.128370,-7.486614,7.791545,-1.728215,1.274787,2.720840,-6.107503,3.782241,4.346606,8.302531,-3.252481,-2.054590,-8.022266,-2.520792,3.968225,-3.421490,5.203287,-0.436961,1.100374,9.720317,-6.045781,4.540865,6.573977,-3.556535,-0.508523,-8.631513,3.553881,-9.805522,6.684915,5.735877,-8.121748,2.747572,-4.052144,1.360983,8.542578,-6.720767,6.210073,-5.897585,2.782981,4.321499,-8.034484,-3.863576,4.940825,-1.712423,9.320220,5.772325,5.376637,-3.071837,-1.830689,-1.964544,-5.629519,2.019192,-4.907585,-8.005875,-0.543206,0.938156,-5.836287,0.881010,-8.079826,-8.222387,1.361586,-5.354348,-7.667042,1.548543,-7.781902,-3.484427,-0.602301,-3.445439,1.085652,-9.668076,6.710722,8.139277,6.144944,3.887525,-9.857750,-1.027189,3.410284,-7.578496,2.549747,3.568010,8.816197,-4.504786,3.622558,-4.899260,-6.875656,9.108514,-2.964477,9.018784,8.245193,-4.724374,-9.951462,8.214203,2.216446,1.615535,9.696517,-9.594522,7.185388,8.285286,1.469159,7.033959,-6.842578,0.865563,9.590947,6.961506,9.084692,-1.663322,-3.687895,-7.685759,-6.292200,-9.071823,-0.604372,-0.266949,4.892319,-0.766168,-5.638943,-3.154809,-6.827956,4.314811,-0.891790,-9.948185,-5.185594,9.915697,5.111518,-4.554989,-5.923703,2.137661,1.847081,-1.115101,5.496952,-4.826470,-7.380706,7.785292,-2.301616,1.814450,3.308845,5.157937,-1.944770,-6.278161,-9.973352,7.800787,7.661957,0.206493,1.126645,9.480600,-6.521801,-5.733372,2.259828,-8.793794,-6.325706,-2.638991,1.728229,-1.292499,6.870764,9.962651,8.915730,-6.765101,-2.419983,-7.220971,2.347779,-3.056740,0.012124,-8.327971,-0.147610,-2.090439,-4.970031,-5.618830,-4.104758,-7.183622,2.802273,9.120917,-5.650378,2.286333,5.019883,-7.579497,-8.077726,3.738633,1.585256,-5.782712,-3.832020,9.876810,1.918069,-9.408190,-0.853366,3.168631,9.878129,-3.582089,-3.375036,-4.777371,5.593625,-9.579983,9.669286,8.678117,-0.908421,0.947695,5.303301,5.909726,-0.516661,-8.574942,-9.690542,4.369185,2.250036,-6.742390,0.639324,2.161198,2.598374,-9.424081,3.721764,-1.982782,2.507638,-7.617920,-5.860521,-0.818801,-9.749489,8.163792,-8.813974,-1.073561,-3.448364,-2.799071,0.006052,7.600465,1.627453,6.526451,9.651049,-6.460534,4.529455,8.516204,5.131917,4.425191,5.898855,-9.950864,7.840852,4.755022,2.181374,0.206101,2.557069,-5.068580,3.327655,-9.057139,1.355296,6.223472,7.109048,-0.052594,-8.510062,-7.109873,-5.909516,-1.001554,0.700441,4.189472,5.102105,8.039213,3.498092,5.491923,-3.243317,-0.166954,4.879955,-0.222984,-9.756748,5.031190,-3.439541,-3.281725,-1.425543,-2.912607,-1.933051,1.916164,8.512661,7.348795,-0.323879,4.788295,-6.434220,-1.692226,9.533473,-5.007906,8.291302,6.780124,-0.934928,-2.239648,-2.716134,-7.334206,-2.061665,-7.924151,8.785630,9.498570,-7.026037,-2.542636,-1.968885,-2.491757,6.644807,6.059768,-1.896491,5.874633,4.942322,-5.324119,-3.596467,-1.034658,-7.394198,-6.154251,-8.604354,7.266272,-9.568796,7.002937,-3.448624,3.301690,8.342371,-3.073342,4.251523,-0.272293,1.218404,-5.301957,6.457679,-1.362817,3.789989,8.296586,-8.553047,-9.801712,-3.130091,0.893546,-1.238466,4.332118,-4.806334,7.397348,0.759309,-8.205996,-7.067035,-3.235585,9.050425,4.442764,-5.251145,7.066947,3.163059,1.576953,1.098179,-1.159186,0.970445,5.059259,7.776413,5.814975,-3.217215,4.534407,-9.391400,0.144047,5.901696,-2.441633,0.858289,-3.213404,-5.445102,3.963172,9.648599,6.078384,9.727867,-7.478401,5.465580,3.210867,7.864706,8.623238,-5.626852,3.622394,2.772228,2.087939,5.860987,-9.755405,-9.456255,-6.509029,5.878100,-8.468374,-9.740851,-8.544671,8.401200,-1.092464,-9.814240,-4.249584,-7.708580,-3.712310,-7.246838,-1.847452,-0.046632,6.067919,-4.529968,-3.717671,9.408943,-9.751395,9.744625,7.085394,-4.390569,4.851783,8.961479,-5.330249,2.786615,-3.075581,-4.174659,-7.696791,2.078123,3.606773,4.834861,3.785247,1.473175,-2.327405,-2.871876,8.831779,8.818540,-3.311664,-9.795636,-4.511526,1.188288,4.768748,-0.349201,-5.595270,4.831261,1.192460,6.164540,6.471134,4.302762,5.876390,-6.240316,-0.314459,7.068214,-9.081921,8.794890,-8.856302,2.454871,1.022322,3.769117,6.970076,3.688980,8.179895,-5.834009,5.493750,-9.860995,4.080350,0.632527,9.646253,-9.201212,3.538191,-4.284618,9.890850,4.030147,2.708788,-6.727087,-6.395178,-7.401893,3.644179,-4.359865,-0.009044,7.762886,9.173475,7.547671,-2.946738,6.693466,-6.583343,1.054816,5.123704,-7.870980,2.899359,-4.003240,-1.786999,3.481675,9.743606,1.927643,-5.210940,5.535394,8.814712,-4.335871,4.701844,5.900910,-4.644486,9.184470,-1.399015,-2.550611,-7.138506,0.640389,7.263927,-8.468740,-5.878383,-6.785448,5.206779,6.428917,0.077035,-2.965294,3.539051,-4.099861,-7.908823,4.162364,8.877069,-0.561835,-8.014239,-6.309881,-6.011234,-4.394664,-0.655781,6.228596,8.746816,9.288939,2.709235,6.489695,2.152607,-0.056910,9.531093,-8.210044,8.736472,-4.326235,-6.294095,-9.150871,-4.109967,-7.216786,0.324214,-2.563116,-3.722850,2.730932,0.582890,-8.376719,-5.498547,-9.637437,-2.202739,-7.274672,2.942332,-4.277909,-7.803395,-5.318015,4.961535,6.266217,-5.428910,6.416547,1.864849,-7.394729,2.680910,-8.038120,2.957804,6.082325,2.832143,-8.644463,9.532420,7.702001,8.974354,-8.657491,-9.188752,0.334324,1.619133,1.180030,-9.221902,2.660165,-3.881949,6.233027,-6.001481,0.961646,7.380132,-1.793803,-6.785901,-7.654958,4.208161,6.989351,-6.350354,-6.631364,2.576342,9.111473,-2.653282,-2.396898,-2.922100,-6.529237,-7.271199,-2.465343,7.715471,-5.570100,-1.186784,8.699075,3.153693,2.993408,-9.670745,1.231451,1.230674,1.898722,6.316447,-6.134480,0.372275,-1.453591,1.211107,9.814161,6.597027,-0.616564,-5.521413,0.733033,-4.922472,-2.077764,1.903021,0.588590,-8.423533,-4.153717,-3.893088,9.284213,8.846676,2.131315,-5.553224,-9.556405,3.699814,-4.610151,-7.601271,3.522186,-3.024875,0.767613,-4.110260,7.398978,7.827562,-4.533685,-2.431741,-6.338509,-8.576359,-9.660623,-5.561910,-8.083521,-2.964539,-1.544222,1.011310,0.533463,3.961753,0.342781,6.511956,-9.032165,-5.053496,-6.808430,-6.807023,-3.070727,5.657355,1.889091,4.260731,3.218460,-3.769657,5.615256,8.246331,-5.887970,7.278179,-2.920318,-6.571749,-8.307560,-2.211520,3.856871,2.045678,9.154741,1.811008,-1.099563,-9.242753,-3.304107,3.071122,-8.549689,-5.952431,0.623524,-7.385007,4.723964,-5.309226,1.359771,-6.723333,0.960288,9.895827,-2.985276,-2.959683,2.263914,-1.406704,8.673131,4.798582,4.774549,-1.499117,-2.491798,-7.649110,1.953764,1.512414,4.742948,-9.840460,1.348643,2.985585,-6.229999,-7.885889,8.249143,9.245503,5.801842,-9.922408,-0.836389,0.353859,-6.985592,-2.279693,5.861036,-2.552970,-1.824770,3.465298,-3.693982,0.187558,-7.830174,5.455745,7.522173,7.836206,1.007772,3.502092,-8.168504,-7.721878,-8.302726,3.928778,-2.386402,4.826162,-9.884190,-3.428278,7.144354,6.065159,-3.575052,3.740841,6.150567,-2.352967,9.012616,-8.207301,-6.833955,-2.131725,-5.606025,-2.238834,9.314416,1.880204,2.118833,5.660229,6.853758,-4.233903,5.484918,3.994765,-5.898822,2.626509,6.216903,-8.578005,8.449352,3.376468,-9.049382,-6.449664,2.561186,1.795134,-4.575970,0.339972,7.561993,3.107523,-1.432810,8.618411,-9.123719,-2.154015,-6.426447,1.110429,8.182229,7.951913,4.997722,1.685292,9.153110,5.600645,2.747545,-8.578260,-8.118117,2.356297,-6.446944,-6.677492,-9.394254,6.309170,0.912426,-9.572354,3.268271,-1.156344,7.570012,5.218705,-3.091976,-5.623831,6.667911,-2.293030,-4.366921,-7.418762,-5.509361,0.311776,4.048889,4.194017,-8.989796,1.505221,-8.326196,-6.533229,-0.342738,-7.025851,-8.546179,-3.753065,0.818259,0.487306,4.954720,2.586183,-6.060565,-4.308041,1.662321,-3.599476,2.574293,1.467235,9.253644,5.827083,5.072910,-6.776914,2.839824,4.675357,3.731587,-4.005345,2.442886,-7.029889,9.429539,8.169875,1.945387,-4.959053,-3.023113,-5.811540,8.674446,8.553296,4.251613,-3.685930], dtype = "float64")#candidate|2288|(1575,)|const|float64
call_2287 = func_1354_call(relay.reshape(const_2288.astype('float64'), [15, 15, 7]))
call_2289 = func_1354_call(relay.reshape(const_2288.astype('float64'), [15, 15, 7]))
uop_2308 = relay.sigmoid(uop_2253.astype('float64')) # shape=(4, 12, 15)
func_2025_call = mod.get_global_var('func_2025')
func_2029_call = mutated_mod.get_global_var('func_2029')
const_2313 = relay.const(True, dtype = "bool")#candidate|2313|()|const|bool
var_2314 = relay.var("var_2314", dtype = "bool", shape = (54,))#candidate|2314|(54,)|var|bool
call_2312 = func_2025_call(relay.reshape(const_2313.astype('bool'), []), relay.reshape(var_2314.astype('bool'), [3, 3, 6]), )
call_2315 = func_2025_call(relay.reshape(const_2313.astype('bool'), []), relay.reshape(var_2314.astype('bool'), [3, 3, 6]), )
func_1260_call = mod.get_global_var('func_1260')
func_1263_call = mutated_mod.get_global_var('func_1263')
var_2322 = relay.var("var_2322", dtype = "float32", shape = (275,))#candidate|2322|(275,)|var|float32
call_2321 = func_1260_call(relay.reshape(var_2322.astype('float32'), [11, 5, 5]))
call_2323 = func_1260_call(relay.reshape(var_2322.astype('float32'), [11, 5, 5]))
output = relay.Tuple([bop_2276,call_2281,var_2282,const_2283,call_2287,const_2288,uop_2308,call_2312,const_2313,var_2314,call_2321,var_2322,])
output2 = relay.Tuple([bop_2276,call_2284,var_2282,const_2283,call_2289,const_2288,uop_2308,call_2315,const_2313,var_2314,call_2323,var_2322,])
func_2326 = relay.Function([var_2252,var_2275,var_2282,var_2314,var_2322,], output)
mod['func_2326'] = func_2326
mod = relay.transform.InferType()(mod)
var_2327 = relay.var("var_2327", dtype = "float64", shape = (4, 12, 15))#candidate|2327|(4, 12, 15)|var|float64
var_2328 = relay.var("var_2328", dtype = "float64", shape = (4, 12, 15))#candidate|2328|(4, 12, 15)|var|float64
var_2329 = relay.var("var_2329", dtype = "float64", shape = (6,))#candidate|2329|(6,)|var|float64
var_2330 = relay.var("var_2330", dtype = "bool", shape = (54,))#candidate|2330|(54,)|var|bool
var_2331 = relay.var("var_2331", dtype = "float32", shape = (275,))#candidate|2331|(275,)|var|float32
output = func_2326(var_2327,var_2328,var_2329,var_2330,var_2331,)
func_2332 = relay.Function([var_2327,var_2328,var_2329,var_2330,var_2331,], output)
mutated_mod['func_2332'] = func_2332
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2347 = relay.var("var_2347", dtype = "float32", shape = (7, 16, 5))#candidate|2347|(7, 16, 5)|var|float32
uop_2348 = relay.atanh(var_2347.astype('float32')) # shape=(7, 16, 5)
output = uop_2348
output2 = uop_2348
func_2354 = relay.Function([var_2347,], output)
mod['func_2354'] = func_2354
mod = relay.transform.InferType()(mod)
mutated_mod['func_2354'] = func_2354
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2355 = relay.var("var_2355", dtype = "float32", shape = (7, 16, 5))#candidate|2355|(7, 16, 5)|var|float32
func_2354_call = mutated_mod.get_global_var('func_2354')
call_2356 = func_2354_call(var_2355)
output = call_2356
func_2357 = relay.Function([var_2355], output)
mutated_mod['func_2357'] = func_2357
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2833 = relay.var("var_2833", dtype = "float64", shape = (5, 9, 2))#candidate|2833|(5, 9, 2)|var|float64
uop_2834 = relay.log2(var_2833.astype('float64')) # shape=(5, 9, 2)
output = uop_2834
output2 = uop_2834
func_2853 = relay.Function([var_2833,], output)
mod['func_2853'] = func_2853
mod = relay.transform.InferType()(mod)
mutated_mod['func_2853'] = func_2853
mutated_mod = relay.transform.InferType()(mutated_mod)
var_2854 = relay.var("var_2854", dtype = "float64", shape = (5, 9, 2))#candidate|2854|(5, 9, 2)|var|float64
func_2853_call = mutated_mod.get_global_var('func_2853')
call_2855 = func_2853_call(var_2854)
output = call_2855
func_2856 = relay.Function([var_2854], output)
mutated_mod['func_2856'] = func_2856
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3382 = relay.var("var_3382", dtype = "float64", shape = (14, 6, 8))#candidate|3382|(14, 6, 8)|var|float64
uop_3383 = relay.sigmoid(var_3382.astype('float64')) # shape=(14, 6, 8)
var_3389 = relay.var("var_3389", dtype = "float64", shape = (14, 6, 8))#candidate|3389|(14, 6, 8)|var|float64
bop_3390 = relay.right_shift(var_3382.astype('uint16'), relay.reshape(var_3389.astype('uint16'), relay.shape_of(var_3382))) # shape=(14, 6, 8)
output = relay.Tuple([uop_3383,bop_3390,])
output2 = relay.Tuple([uop_3383,bop_3390,])
func_3399 = relay.Function([var_3382,var_3389,], output)
mod['func_3399'] = func_3399
mod = relay.transform.InferType()(mod)
mutated_mod['func_3399'] = func_3399
mutated_mod = relay.transform.InferType()(mutated_mod)
func_3399_call = mutated_mod.get_global_var('func_3399')
var_3401 = relay.var("var_3401", dtype = "float64", shape = (14, 6, 8))#candidate|3401|(14, 6, 8)|var|float64
var_3402 = relay.var("var_3402", dtype = "float64", shape = (14, 6, 8))#candidate|3402|(14, 6, 8)|var|float64
call_3400 = func_3399_call(var_3401,var_3402,)
output = call_3400
func_3403 = relay.Function([var_3401,var_3402,], output)
mutated_mod['func_3403'] = func_3403
mutated_mod = relay.transform.InferType()(mutated_mod)
var_3995 = relay.var("var_3995", dtype = "float32", shape = (9, 4, 8))#candidate|3995|(9, 4, 8)|var|float32
var_3996 = relay.var("var_3996", dtype = "float32", shape = (9, 4, 8))#candidate|3996|(9, 4, 8)|var|float32
bop_3997 = relay.floor_mod(var_3995.astype('float32'), relay.reshape(var_3996.astype('float32'), relay.shape_of(var_3995))) # shape=(9, 4, 8)
uop_4029 = relay.tan(var_3996.astype('float32')) # shape=(9, 4, 8)
func_3399_call = mod.get_global_var('func_3399')
func_3403_call = mutated_mod.get_global_var('func_3403')
const_4038 = relay.const([-9.150934,9.996805,6.215062,6.761818,5.346713,-2.212690,2.813100,9.687460,-4.503500,-2.352590,3.385823,-4.459947,-9.733624,0.474558,-2.742769,1.003181,-3.841877,9.725229,-5.083358,8.671256,-9.819755,2.562333,6.345313,-7.770955,-7.798000,8.364308,-0.520846,3.720915,6.974010,-4.115049,1.700247,-8.809541,-9.198840,-3.682685,4.563703,0.567687,4.857744,5.849035,4.243762,-5.764415,0.391096,0.290520,1.061713,-4.803007,-2.873215,-3.448260,4.548337,9.116735,2.658074,-3.001601,1.575154,-2.708878,-5.357619,4.125940,1.101393,1.590360,5.829511,-4.633476,-4.448629,7.120415,-9.008321,-8.914603,-3.435377,5.434625,6.668261,-6.709270,7.840733,6.617173,5.421802,-8.721250,2.596290,4.980468,-4.650904,1.094929,-2.094643,2.614269,5.504370,-8.159542,3.374871,1.451785,8.000725,5.158144,-0.143956,8.775064,5.780016,-4.213244,1.612510,9.877189,4.199420,-1.218867,9.318863,-9.241027,-4.715868,0.717395,5.875078,-8.006628,-6.012202,2.993777,5.377275,-2.171558,-2.257311,6.014857,-1.087681,-2.351030,3.579283,-5.156294,-5.182885,2.445158,4.627371,8.946881,0.399462,-6.352682,1.666906,-7.689419,-9.861601,-7.033526,7.887504,-2.083506,-1.687184,-2.040478,-9.066809,9.565952,2.967155,5.159587,7.132977,1.697749,-5.072428,-4.309441,-5.220703,-6.714817,-9.398530,7.374457,-0.895744,4.799901,-0.596617,8.364717,-0.770416,-7.158594,2.129563,0.156253,-5.261095,-0.196146,-4.808123,-5.369716,0.070592,2.223088,2.897862,-6.216470,-8.441721,9.235757,4.263426,8.543515,5.221259,0.106451,9.593239,7.038364,-1.519675,8.272647,-9.259269,9.984474,-9.584231,9.985074,1.892275,-0.804408,-2.416467,0.314268,-2.569417,3.490375,-9.636495,-9.066567,2.813024,3.614978,8.161881,-8.973718,-3.922610,-6.584861,-9.571526,4.634323,7.596901,-7.845423,3.461533,2.900675,-5.268261,5.894643,3.751943,3.908214,4.778866,-8.961994,2.168946,-3.545802,-1.283462,-2.692654,4.193538,1.465224,9.681721,-9.471857,3.048803,-6.973754,-0.921146,-1.059678,-2.279716,9.824448,-1.812122,-7.752758,-9.315954,2.833385,4.441856,-1.839969,1.926425,6.291094,2.514686,4.191955,2.605502,-6.758451,8.435564,-2.264827,-3.329730,1.687285,7.581271,-4.437925,6.755289,4.900982,-2.035477,1.616963,2.405466,-3.284594,-8.165342,8.246902,-0.125493,2.206979,-6.069742,1.823972,1.389328,6.717358,-3.052666,3.515823,8.299263,3.654157,-1.119193,-7.976776,6.326354,-1.936277,-0.029659,-9.701294,4.893265,1.437004,9.767317,3.679188,3.727341,3.252139,-5.428230,1.540687,6.926119,1.140229,9.691101,8.915956,1.055715,-7.153778,9.978784,-9.696618,9.213756,-2.820695,-7.308910,3.583626,-5.850199,2.598970,7.758893,2.975937,7.195920,-0.673576,-2.649718,-4.872711,4.856925,3.577946,3.894916,-2.364515,0.121833,3.619162,-4.403637,-1.860252,6.368532,6.586151,-1.605679,-7.087447,-2.862562,1.279206,-6.127635,-9.158722,-7.917344,0.910417,1.091366,-9.860744,-1.387423,-1.748975,1.386292,-1.891980,-1.032122,3.597648,-8.925637,4.832832,5.335930,3.896784,-9.261658,5.868133,9.493606,-7.156865,-0.050879,-2.118990,-4.115264,0.832741,2.819209,-6.487956,-4.353899,-3.531720,2.485233,1.056392,-7.781548,5.886604,-7.654140,-4.060489,2.666844,-7.712342,3.086126,-7.536490,8.045647,7.195948,6.029962,-2.605409,-8.772327,-0.503574,-7.267052,-0.326947,-1.539896,3.119933,-2.238124,6.626391,-0.750953,-0.214596,-2.772816,4.798557,-7.272413,-6.947376,8.811235,0.974573,5.094957,4.440010,2.215642,2.960047,8.758855,-4.820532,-1.816092,4.989630,3.116374,-1.947846,3.677584,0.936872,0.736510,4.512074,3.538194,-0.193341,2.399521,-7.963148,1.594181,-9.649908,1.539693,-0.813633,-6.081141,-1.611139,2.609861,6.675985,7.496792,7.186942,-9.306150,1.804413,5.498498,8.288477,3.867576,-5.227808,3.394718,-0.698097,3.194228,-7.466500,-3.080652,-2.098948,5.855592,-1.703785,-9.418248,8.308999,9.093502,-7.809907,-6.216555,4.737659,-3.128821,-8.380167,-2.968043,-8.753343,-6.851259,-4.685500,2.836855,-8.832710,-7.657108,2.733655,-2.712023,-0.256262,4.147717,8.016999,-5.738823,-3.144222,-5.185395,-9.803888,7.508822,-3.270388,4.804147,-8.583622,4.177065,2.898991,-3.645945,4.736517,-7.464121,-0.313210,-6.346006,8.218011,-8.053745,3.557496,9.881235,7.466756,-3.847167,-1.528801,-4.307677,7.827445,4.547156,-3.077043,9.478162,1.551146,5.013226,-9.102857,8.828350,-2.485522,1.906076,-0.048722,0.399865,1.732344,1.224426,9.734549,-8.553093,-3.588274,6.678945,1.427532,-6.577498,-8.376634,-7.670064,3.377017,3.036753,4.840410,-3.684841,6.928963,-4.369277,3.526845,-2.776508,5.247842,7.716604,-4.117173,-2.585514,-5.501309,-6.206911,-9.343520,3.687684,-2.382657,4.945561,7.870583,8.791654,8.534804,9.922783,-5.632978,6.876049,-5.277160,3.611992,-6.577829,0.591569,-0.630430,9.790549,-0.663525,-0.111150,9.347388,5.834798,6.694477,2.030492,-7.738366,-5.356076,-2.498105,-9.986247,-0.602286,-7.932658,-7.268911,5.543866,1.986240,2.810343,8.188017,5.513449,-1.550128,6.573505,6.438381,-0.635521,8.010262,-8.859879,1.704147,3.829866,-9.672445,-4.573974,3.847920,0.405670,-6.400139,-6.810721,5.861902,9.827033,-5.107125,1.780767,5.310984,8.789640,-8.830609,6.424132,2.521415,-9.995040,-6.095696,-2.119647,-7.682687,-2.911863,-3.049823,1.839807,-5.225586,5.432083,8.512102,8.750612,8.789591,-5.019232,-3.226735,5.880370,-2.817040,-2.834910,-8.620974,-8.378459,-9.910823,4.161054,9.012788,-2.295752,2.313838,9.815855,3.010555,-2.122533,9.387745,-8.820353,-6.993416,7.348964,5.825190,4.221123,-3.850725,7.471282,-8.105153,-2.279551,3.494311,-1.110339,-0.147678,0.956239,-2.918699,-8.942328,-0.066158,0.919143,-3.305169,3.239071,-4.497208,5.776041,-5.297476,-1.257452,-0.167150,9.414979,6.390519,-0.549040,0.695301,9.209023,8.193092,0.721102,3.606027,-0.698937,-8.923441,4.567218,-6.133453,5.008491,0.797643,-5.647373,-6.162390,6.189165,9.394844,-6.618431,-8.529877,-9.363070,8.365122,7.460062,-8.812538,1.650129,-1.262556,-3.162481,6.184373,2.173208,3.095019,-1.783246,9.699540,8.753036,-9.941006,8.921996,-0.681846,-0.340984,-6.120573,-8.595468,-7.181363,0.139925,-0.598221,8.987335,1.583939,0.336919,-2.123650,8.965390,9.958943,-1.161510,-6.227737,-3.733597,9.035382,-1.061263,6.469218,7.457656,-6.234499,-1.345310,-8.502693,9.127511,-2.715744,-2.117041,-4.177163,6.461984,-0.411362,3.199228,4.605742,1.047966,9.371926,-5.657655,-7.531672,-6.702643,-9.848252,-6.666693,-8.946283,5.530757,-3.738750,-1.837786,6.517155,-4.027811,4.372548,-6.357811,-2.844303,-5.836890,6.031993,-8.253956,-9.827669,0.761188,4.557087,8.588723,6.704629,-1.466201,-6.286449,-0.181007,-2.951667,7.588656,2.022280,4.594399,-9.919281], dtype = "float64")#candidate|4038|(672,)|const|float64
call_4037 = relay.TupleGetItem(func_3399_call(relay.reshape(const_4038.astype('float64'), [14, 6, 8]), relay.reshape(const_4038.astype('float64'), [14, 6, 8]), ), 0)
call_4039 = relay.TupleGetItem(func_3403_call(relay.reshape(const_4038.astype('float64'), [14, 6, 8]), relay.reshape(const_4038.astype('float64'), [14, 6, 8]), ), 0)
func_1428_call = mod.get_global_var('func_1428')
func_1432_call = mutated_mod.get_global_var('func_1432')
var_4041 = relay.var("var_4041", dtype = "uint64", shape = (1, 560))#candidate|4041|(1, 560)|var|uint64
var_4042 = relay.var("var_4042", dtype = "int8", shape = (1568,))#candidate|4042|(1568,)|var|int8
call_4040 = relay.TupleGetItem(func_1428_call(relay.reshape(var_4041.astype('uint64'), [10, 8, 7]), relay.reshape(var_4042.astype('int8'), [1568,]), ), 2)
call_4043 = relay.TupleGetItem(func_1432_call(relay.reshape(var_4041.astype('uint64'), [10, 8, 7]), relay.reshape(var_4042.astype('int8'), [1568,]), ), 2)
func_2326_call = mod.get_global_var('func_2326')
func_2332_call = mutated_mod.get_global_var('func_2332')
const_4046 = relay.const([5.623737,0.745435,4.302762,-6.506897,-0.057668,8.059325,-5.521265,-4.254887,7.514781,-7.023412,1.319811,8.272053,0.928221,-2.515481,-7.290574,-6.904091,5.473729,-6.647160,0.558098,-2.779518,-0.950676,-3.505193,-2.223250,-0.939349,-8.461707,6.586940,9.054132,6.253085,8.895593,0.381116,1.970684,3.767363,3.717329,-8.772666,-9.939275,-7.834728,-7.288933,1.060506,2.357700,-3.459429,-4.178141,-3.543844,-7.692498,4.183860,2.005321,9.805990,-3.921239,0.802550,-2.934412,3.252480,-1.421062,9.276553,-7.688664,8.404065,-6.211608,-5.148946,9.411972,-1.735663,-8.455920,0.167055,-0.667640,-2.182302,5.903665,-9.768945,6.601665,8.787150,6.862774,-1.678518,2.336459,-2.054016,8.152183,8.810406,8.729729,-9.580942,8.050096,6.055793,-6.581353,-8.263734,4.668694,-3.678252,-3.761115,3.391416,-1.448799,-3.457239,8.641791,-4.368744,3.615125,-4.360794,1.955512,-0.955069,-9.587877,4.625449,5.931243,5.150418,-2.801121,-2.157575,4.308707,8.044490,5.340676,6.239874,-5.032638,-1.395401,7.490908,-1.759488,2.745438,5.645876,-3.397411,3.387345,0.513664,-0.205067,-1.880388,-6.352879,-5.609085,7.311025,0.276617,0.830150,-8.385451,7.742919,-4.032151,7.615108,-8.377959,8.485491,7.838687,3.310792,6.603797,-3.024346,-4.173140,8.166251,-5.028632,-8.952090,-2.042124,3.436227,2.155179,-8.461547,-3.800840,-7.838569,7.711558,3.308642,-4.184977,0.428373,0.379861,1.248711,-0.411800,-7.311694,1.600441,4.416330,-1.361906,0.194286,2.111964,5.363283,9.679624,9.915652,-2.272059,7.570013,3.048439,-6.728995,-5.087234,-0.868907,3.808695,-5.679146,0.026265,-5.795693,-9.048556,-2.738366,7.918069,-9.185381,2.267888,5.468785,-6.587380,-9.667659,6.045465,-2.791417,-5.200960,8.800137,-9.467029,-6.953504,2.550715,2.973749,-0.052063,2.001405,-3.081968,-1.608917,8.954651,5.392806,-2.543679,8.022688,-2.085972,-5.526724,-2.784978,-7.909019,0.560196,6.563733,6.534191,-3.056275,-4.068778,-2.809356,3.230460,-7.287333,-9.674102,3.193180,4.639380,0.447082,-6.356701,-0.236243,3.394669,3.329823,1.265187,4.173127,-9.281791,9.327218,4.518006,1.902108,-9.509645,-3.402541,5.927382,-0.062907,-0.672753,-9.835719,4.808699,-6.205471,-3.149635,4.817599,-2.560835,-3.623815,-2.821349,3.502746,6.724915,4.242444,-1.196905,7.812787,4.926635,-5.256855,3.111795,-5.541498,0.076103,1.942963,7.336197,6.552856,3.251377,-4.363692,2.031777,2.937609,-8.492863,4.304283,-2.529402,-0.353242,-8.408807,-9.905314,5.197597,-1.240360,0.277476,-8.767660,-8.838269,-8.163080,-3.147206,0.368059,-8.708421,-0.302877,6.418322,3.882894,-8.827235,4.460625,-5.156400,-1.958957,1.262941,-8.782981,-8.406680,1.734832,-4.363833,-7.978210,-7.810659,0.125978,7.305772,7.233688,0.172713,-3.953451,-1.327030,-1.529960,1.056912,-3.094551,6.246753,8.408434,-1.449264,-4.363624,-4.800978,7.178898,-5.625181,6.420959,-3.657154,9.531484,8.717604,-8.945686,0.028860,-3.603586,9.280666,4.567635,0.932242,6.897870,7.279446,8.668449,-4.592736,-3.407355,8.565853,-8.078354,-4.704576,1.875911,-3.863392,4.717059,-0.803200,-0.733279,0.293968,-0.650340,0.461807,-4.982791,6.960585,-7.466840,-0.259213,-8.353921,6.818996,6.054322,-4.515404,4.847035,-0.904119,0.633525,6.207656,3.576769,4.736686,5.715303,6.103332,-8.698170,9.173107,-7.103583,9.109272,9.415670,-6.031670,7.588286,2.400788,1.620128,0.697131,-0.021238,-3.825941,4.202359,5.407940,-5.228096,-7.159279,1.755539,-4.616124,6.922070,2.327672,-5.442586,-7.417351,-5.855621,-1.151376,9.087731,-5.213864,-8.736638,5.982722,4.195508,2.557937,8.524736,-7.958191,8.570806,2.464093,-0.845958,-4.710052,-0.800545,-0.663715,-7.922590,-3.944868,9.841825,-7.667214,9.298093,1.806976,-6.516938,0.558473,3.313918,1.035295,-0.506793,8.561447,9.536653,3.821878,-6.980689,-9.546328,-7.699594,7.862694,-2.804182,-5.251840,7.153798,-6.135506,-2.158122,-9.934189,5.527829,-3.503279,-2.678914,-1.659019,3.410643,4.857649,-8.528204,2.007681,-2.559185,-4.711162,-8.559492,-5.811892,-6.862614,5.011417,-0.279339,-0.563074,8.189414,1.333790,7.741933,7.022642,8.461815,-3.236659,2.252800,1.479496,-5.655251,-0.696458,-5.084890,5.538962,3.549102,1.222915,-2.718182,0.036395,-5.452968,0.932271,-2.942185,7.736852,3.765722,1.605282,1.796303,-6.941108,-3.986022,-4.475274,0.356254,-3.306016,-4.139797,6.104408,5.998727,6.197612,0.210815,4.475996,5.042898,-5.774261,8.519731,2.610831,-8.089613,-8.971868,-1.050973,3.443374,-0.696023,-8.946523,4.267454,4.435478,-2.506130,-5.839374,5.026679,-9.519239,-4.885634,1.029271,-6.402047,-6.753473,-8.056124,-1.707300,8.353592,9.018123,0.668187,2.565232,6.491004,3.947236,8.697006,9.909023,-8.281579,7.078184,-9.601132,-0.266995,-9.644331,7.598410,3.426339,2.139646,4.884167,9.059660,0.635471,5.655398,1.842550,-9.602843,0.123971,-7.988449,4.822811,-7.217513,-7.848793,7.584723,-1.069794,-6.711016,-1.196573,-5.511544,-3.482297,-2.149240,-0.189401,-9.447918,-1.014100,-6.296197,-2.089453,5.573721,9.733572,-8.306307,-6.781434,-4.258402,-8.832893,7.467966,-4.281289,2.726403,0.546041,-9.983357,7.474400,0.699061,-4.840134,4.220584,-2.324565,-4.101832,2.246298,-4.414898,-0.876590,-4.664642,7.654169,9.225212,7.158646,-3.740329,-0.086336,8.362725,4.236640,-2.654991,-8.678295,-0.594893,-6.955236,-4.210750,3.086351,-4.568908,2.481672,8.663418,-4.090249,8.802427,2.973494,-9.300656,-3.406913,3.950548,-1.465823,0.549529,-0.915901,-2.145252,2.775170,-5.428438,0.374944,-4.640333,2.249654,1.585365,2.870753,3.418195,-1.109045,-3.927096,1.145964,-3.696483,1.290520,8.643984,5.086446,2.140132,-1.094075,-6.125952,-0.193410,9.216282,-5.558381,9.236112,4.981269,-6.129012,-6.629104,-8.118457,-7.669703,5.198971,0.276612,3.700273,-5.382950,4.028758,-5.820641,-6.496045,-3.608570,-7.453129,-6.871860,-7.709668,8.961375,1.442970,-8.143995,6.054344,-0.496175,-4.043916,9.250884,3.406701,-1.432779,4.093075,-7.823964,3.838451,3.353299,8.001712,6.977564,3.981002,-6.895189,-3.137349,-4.513189,9.690906,1.539097,-7.281027,-0.400179,-6.868637,-7.466253,9.157294,-7.832991,-4.898331,0.012307,4.540375,9.643387,3.079608,-4.670793,-7.643718,4.470153,0.798411,-6.592990,-0.303309,5.921687,1.592869,-1.046509,-4.901644,-1.147940,-6.378446,-3.752333,-3.348881,-9.872333,7.886560,-2.188894,1.903204,-8.745220,-9.829092,6.416144,2.519115,6.968921,-0.734798,0.602673,-5.968682,8.612222,5.773182,7.740685,-4.892188,3.365868,-3.978400,0.439575,-4.736872,-0.370302,-2.297950,7.383423,4.822106,4.954818,-9.222219,-8.286820,-1.317529,1.008528,-5.338651,7.220648,-1.027559,-9.010488,-1.720939,-2.387146,2.422502,9.784522,-6.720063,3.026319,-5.703099,-8.145046,-7.445270,3.583464,-7.502068,-6.242797,2.423979,5.104023,2.736060,-1.982758,-1.152596,-7.488155,-0.716148,5.489509,-5.482623,-3.430863,8.532432,4.283493,0.399079,-0.633478,2.811753,-4.378654,5.321706,-0.877727,-6.302599,-1.799960,5.394180,-6.412657,3.367623,9.262512,5.170284,-2.006707,-6.432737,-0.878512,-2.341008,3.136465,3.202931,6.481185,-0.470901,6.901941,-6.592128,4.095793,-2.710828,6.029069,0.277341,3.594098,-1.253656,-0.284134], dtype = "float64")#candidate|4046|(720,)|const|float64
const_4047 = relay.const([7.675721,-6.389714,8.153113,-9.356100,4.236979,9.210242], dtype = "float64")#candidate|4047|(6,)|const|float64
const_4048 = relay.const([False,False,False,True,True,True,False,True,True,False,False,False,False,False,True,False,True,False,False,False,False,False,False,True,True,True,False,False,True,False,False,True,False,False,False,True,True,False,True,False,True,True,False,True,False,False,True,True,False,True,True,False,True,True], dtype = "bool")#candidate|4048|(54,)|const|bool
var_4049 = relay.var("var_4049", dtype = "float32", shape = (275,))#candidate|4049|(275,)|var|float32
call_4045 = relay.TupleGetItem(func_2326_call(relay.reshape(const_4046.astype('float64'), [4, 12, 15]), relay.reshape(const_4046.astype('float64'), [4, 12, 15]), relay.reshape(const_4047.astype('float64'), [6,]), relay.reshape(const_4048.astype('bool'), [54,]), relay.reshape(var_4049.astype('float32'), [275,]), ), 10)
call_4050 = relay.TupleGetItem(func_2332_call(relay.reshape(const_4046.astype('float64'), [4, 12, 15]), relay.reshape(const_4046.astype('float64'), [4, 12, 15]), relay.reshape(const_4047.astype('float64'), [6,]), relay.reshape(const_4048.astype('bool'), [54,]), relay.reshape(var_4049.astype('float32'), [275,]), ), 10)
bop_4059 = relay.logical_or(uop_4029.astype('bool'), relay.reshape(var_3996.astype('bool'), relay.shape_of(uop_4029))) # shape=(9, 4, 8)
output = relay.Tuple([bop_3997,call_4037,const_4038,call_4040,var_4041,var_4042,call_4045,const_4046,const_4047,const_4048,var_4049,bop_4059,])
output2 = relay.Tuple([bop_3997,call_4039,const_4038,call_4043,var_4041,var_4042,call_4050,const_4046,const_4047,const_4048,var_4049,bop_4059,])
func_4072 = relay.Function([var_3995,var_3996,var_4041,var_4042,var_4049,], output)
mod['func_4072'] = func_4072
mod = relay.transform.InferType()(mod)
mutated_mod['func_4072'] = func_4072
mutated_mod = relay.transform.InferType()(mutated_mod)
func_4072_call = mutated_mod.get_global_var('func_4072')
var_4074 = relay.var("var_4074", dtype = "float32", shape = (9, 4, 8))#candidate|4074|(9, 4, 8)|var|float32
var_4075 = relay.var("var_4075", dtype = "float32", shape = (9, 4, 8))#candidate|4075|(9, 4, 8)|var|float32
var_4076 = relay.var("var_4076", dtype = "uint64", shape = (1, 560))#candidate|4076|(1, 560)|var|uint64
var_4077 = relay.var("var_4077", dtype = "int8", shape = (1568,))#candidate|4077|(1568,)|var|int8
var_4078 = relay.var("var_4078", dtype = "float32", shape = (275,))#candidate|4078|(275,)|var|float32
call_4073 = func_4072_call(var_4074,var_4075,var_4076,var_4077,var_4078,)
output = call_4073
func_4079 = relay.Function([var_4074,var_4075,var_4076,var_4077,var_4078,], output)
mutated_mod['func_4079'] = func_4079
mutated_mod = relay.transform.InferType()(mutated_mod)
const_4227 = relay.constdtype = "float32")#candidate|4227|(4, 4, 14)|const|float32
uop_4228 = relay.exp(const_4227.astype('float32')) # shape=(4, 4, 14)
bop_4255 = relay.divide(const_4227.astype('float32'), relay.reshape(uop_4228.astype('float32'), relay.shape_of(const_4227))) # shape=(4, 4, 14)
func_3399_call = mod.get_global_var('func_3399')
func_3403_call = mutated_mod.get_global_var('func_3403')
var_4267 = relay.var("var_4267", dtype = "float64", shape = (672,))#candidate|4267|(672,)|var|float64
call_4266 = relay.TupleGetItem(func_3399_call(relay.reshape(var_4267.astype('float64'), [14, 6, 8]), relay.reshape(var_4267.astype('float64'), [14, 6, 8]), ), 0)
call_4268 = relay.TupleGetItem(func_3403_call(relay.reshape(var_4267.astype('float64'), [14, 6, 8]), relay.reshape(var_4267.astype('float64'), [14, 6, 8]), ), 0)
func_2146_call = mod.get_global_var('func_2146')
func_2150_call = mutated_mod.get_global_var('func_2150')
const_4286 = relay.const([5.644716,9.570315,-3.392062,-3.105978,3.965026,1.302541,3.852616,-4.853034,5.057345,-0.619955,3.149902,-4.076388,7.065252,-7.488445,4.709891,-1.173851,-0.970770,-3.270506,-6.687882,-9.288248,-4.668253,8.366965,-1.740612,-4.080590,-9.074531,1.773276,-3.768579,-3.616533,-5.781741,-9.169707,5.478591,9.037019,-0.264127,-8.405178,-5.473636,-6.337651,7.415083,4.941806,7.375903,1.508454,-5.932792,-5.529116,0.240614,9.258307,1.247545,6.237816,-0.060123,-9.418286,-7.463538,4.783019,0.265086,4.710322,9.948020,-7.671020,-6.815007,-1.247246,-5.438470,8.793169,-7.195112,-0.214344,-9.660172,-6.692314,-3.833647,-3.872185,0.709106,5.253696,5.859189,5.961136,2.892314,-6.144521,-2.585120,2.100562,0.941109,-4.762877,1.441659,0.261261,-5.063942,-3.275243,-4.571259,0.292237,-2.766594,-7.767961,0.996677,7.271945,3.212023,-3.263451,-3.908267,-9.690196,9.285326,5.170514,6.380183,-1.571011,-8.411799,-3.643498,5.091156,3.132660,0.696636,-5.808210,7.119773,8.102428,6.635772,-5.938751,3.955359,3.021043,4.371249,7.608638,1.908293,-0.147607,-2.967389,-5.557860,-8.576559,-9.763075,3.479402,-6.015957,-0.464907,4.241375,-5.524214,0.843825,-0.411409,-3.029122,-5.612233,4.335924,1.437488,0.518696,-7.016418,-4.001399,5.431391,-7.850409,9.604841,-6.312307,6.054214,4.755435,4.408766,7.950750,9.367530,-8.189857,-4.876047,7.002869,2.201337,4.249925,-1.917720,6.651668,-6.021123,-0.643158,-5.342690,5.270797,-4.851567,1.366739,-0.055283,4.701169,-4.854408,1.352724,2.216562,0.167323,1.253414,4.501190,-2.983421,-2.622172,-8.457059,-0.817358,1.950443,-1.337848,-2.232272,1.707476,7.195580,-6.151350,-1.017555,-9.457564,-9.348082,7.151816,-4.490712,6.495781,5.126493,-4.147684,-6.009359,-0.201213,-0.387365,2.015277,0.780242,2.755183,7.782551,-4.513162,9.404018,-0.727460,-8.420676,-8.441649,-3.159050,8.038318,7.779414,4.128215,-3.409984,3.848873,7.843262,9.020247,8.210513,8.977642,-9.975021,6.589570,-5.677726,7.123954,7.047984,4.289431,8.512297,5.735065,-5.442405,-8.915804,-4.961008,-0.686063,-0.745380,-6.503498,-7.615308,8.092013,-2.837241,8.447549,-6.730514,9.449812,-1.543214,3.712059,-6.813737,-7.966093,9.432699,7.317413,-0.313724,4.991164,-6.536342,-5.868546,6.881288,1.510143,-4.628056,-5.635307,-4.586389,-1.607872,5.455437,-8.802972,-9.202873,-1.995641,-9.854147,-2.107571,2.963909,7.844517,5.363890,0.831517,3.499892,-6.870731,3.573428,-5.670729,6.224076,-7.124336,-9.048265,-9.232402,5.354533,5.176059,-9.829871,-4.198582,3.583602,4.236669,6.863427,-5.030118,-9.815049,9.405645,0.869420,2.815923,-5.434559,5.770644,-6.421799,-8.269257,8.418889,7.114287,4.532375,2.162021,-0.425982,4.404731,0.834411,-1.723186,0.473680,3.159795,-0.068697,7.746365,-0.957986,5.951691,-5.674762,-8.228272,9.811892,6.734143,5.425454,-3.713582,-4.076415,-4.066760,5.217311,8.637398,-9.606432,5.476999,8.614123,1.071296,-5.012948,-4.318644,-5.522278,-6.778805,3.714697,-2.146343,-2.487210,-7.291953,0.776204,5.881402,8.346767,1.698186,2.368200,-6.839248,7.660499,6.749096,0.214989,-9.610991,-0.903727,4.587984,-8.426936,3.303353,-4.136017,7.625627,-6.399258,-3.664466,7.306580,1.610262,5.888831,0.618682,0.982830,-3.689828,1.586934,3.961195,8.420506,3.136620,-3.955040,-4.064639,-1.603592,-9.607227,-3.061519,-7.903775,-2.967795,4.944961,-6.097133,-4.111176,8.914892,-5.222598,3.723752,-6.674020,-1.585588,2.282941,-2.902469,-8.601574,0.993015,0.903804,9.875750,-0.955557,9.044120,3.418624,-8.467098,-3.639386,-3.917199,-6.511867,-7.781814,-6.148823,-5.952664,7.703672,-0.053323,7.651113,2.414190,6.784005,2.100824,-1.054761,8.501130,-2.274307,-4.880512,7.422239,8.987667,-7.998848,3.023979,-5.558394,-4.839615,-3.514639,1.528981,6.293200,4.303165,-3.456798,-3.038183,0.610427,-5.498725,0.222039,-6.162211,-9.427797,8.595847,4.995021,4.269782,-5.648686,-6.548627,-7.496324,5.833105,-1.778467,2.079481,2.564200,2.147939,8.540094,-2.436091,-3.153564,-3.066000,-8.106762,-8.531722,-5.175868,2.451317,1.451487,8.489962,-4.066547,6.590906,7.989649,3.949111,-8.925500,-8.381437,-6.550242,7.524410,6.026873,4.368190,2.696114,-8.423787,-4.577131,-3.438541,5.533912,3.723291,-3.840934,-4.690156,1.262229,-9.478316,-5.629472,-2.215189,4.031989,-3.721568,9.728592,-3.306134,1.477835,-0.249922,3.545142,4.123110,-7.792663,-2.406953,-0.630555,7.877977,-4.402484,3.267876,-6.917052,9.720096,2.163952,-3.512986,-4.251967,1.976657,5.292445,1.839195,2.388391,9.597088,1.952540,-0.091112,-0.782575,-9.125636,-9.770012,-7.418388,1.920644,-5.236396,5.801609,8.252977,-4.831219,2.282447,-4.384867,-2.835282,1.533081,1.122115,0.620339,-3.330604,7.055817,-8.728108,7.650131,-2.079609,-9.965496,8.531232,-9.842895,1.310131,-6.092340,-8.966058,7.821063,-3.265273,9.956770,-2.882904,9.160586,-6.532960,9.629086,-0.717765,9.434304,4.066284,-5.297676,1.224852,7.050771,9.258844,5.357953,-9.750969,-2.873782,-0.249601,-3.011874,-0.585774,2.877032,7.773238,2.896809,2.542965,-0.456691,-1.248703,-3.503123,2.199068,6.645726,1.599296,9.675637,0.727227,-6.060873,4.566756,-7.035067,-5.267646,-9.915691,-6.208993,-9.940916,8.499344,-3.501421,0.807601,4.531198,-6.701914,6.300632,-6.879074,6.296922,-3.309631,5.174505,8.916267,9.584446,3.851999,5.995415,8.646268,-4.709861,-1.115735,-6.628257,7.363819,9.213020,-2.521640,2.443019,0.523650,8.481334,-1.222523,9.002696,-7.236924,3.311331,-0.223642,-8.235824,-6.674254,-2.479138,4.706467,-9.441846,9.612992,8.410818,-9.552700,-3.479410,2.610092,1.108476,-0.034822,9.783342,3.651266,-3.335288,3.609582,3.141484,2.901718,6.829458,7.416906,0.156776,1.057800,-5.530229,9.898192,6.396966,-7.586207,-5.136415,6.739876,-4.177829,9.513394,-2.650846,6.960926,-6.260442,-0.335200,7.073050,-9.480452,-4.724330,4.323779,1.302024,0.181273,-1.843954,-9.051316,-6.728902,-8.767432,-1.289678,0.991650,7.350165,7.861122,-6.330938,8.197594,8.532105,-0.427811,4.674876,-5.087553,5.912541,1.967020,-6.652893,-5.482259,1.149334,3.419119,-0.241674,-9.845478,5.500725,-3.780433,3.447793,0.335112,5.724170,-4.572656,-7.921810,7.007192,-8.522335,8.738115,-7.478816,3.264386,-7.308675,-0.992135,-8.838760,-3.260626,-5.361161,3.566800,-1.273283,-6.212947,-8.996854,-4.001829,5.484917,-1.347382,-7.304502,-6.550610,-5.962030,-8.446011,-4.864878,0.968352,-8.400873,-4.609373,-0.718252,-8.841135,2.951609,-8.950580,-2.419283,-9.993961,5.256333,5.432718,-5.815794,-8.488074,-7.293935,2.643252,8.378058,2.563591,5.430462,-3.447700,2.331186,-3.389591,8.611463,-7.192963,-1.801848,-1.337889,-4.844133,6.612581,6.521783,3.865598,3.653969,0.356607,1.890818,-3.500921,-5.316505,3.168010,4.642309,-4.598307,-0.866748,-1.511596,0.815481,-4.359401,4.669867,-6.713500,-8.691422,-0.204445,3.180997,-6.363306,-8.626316,4.916444,-4.396161,-2.764672,-6.034503,-7.259286,4.416128,7.763353,2.708591,-1.121482,-6.384509,-7.738634,-1.407199,-2.766849,-3.420798,7.309205,8.433088,0.606827,4.239544,9.578425,4.994077,-0.505384,2.796178,5.556170,-9.799601,3.440761,2.507642,7.755188,-4.384679,0.227992,-1.606616,6.212443,4.804337,4.869929,-6.207499,-6.175149,1.658400,-9.539930,2.112776,4.706270,-0.058270,-6.973617,-9.041378,9.497252,1.166781,5.308703,8.164939,8.229262,-8.530359,1.087401,2.384751,-4.932396,1.400730,5.848877,-9.451089,-2.296557,1.381055,-8.407057,-5.790953,-3.654114,-5.317252,4.849284,-2.853240,-0.013213,-9.906584,8.086115,-5.345227,-2.919943,8.286216,-2.101019,-6.848733,-5.647727,6.061489,-7.361848,-2.998673,3.909935,-8.986915,1.386001,5.527491,8.147014,2.988084,2.364014,-1.186627,5.563572,-7.528970,-3.955336,-9.908674,-0.660494,1.298552,9.213903,-0.914435,7.620501,-0.155282,8.617931,-8.817447,6.472663,-0.360191,6.628081,-3.471984,-0.005873,-1.889905,9.972976,1.244258,-3.935274,-9.236537,-3.869583,-4.023000,-6.698019,-1.991617,-2.784381,-8.114923,8.315348,8.942742,-5.696486,5.097117,-3.829006,3.427345,5.387900,4.779663,1.372714,4.405359,-5.385195,9.601497,-9.349081,1.456940,5.031494,-3.595991,-9.297718,1.579717,2.885455,5.674286,3.514117,-6.030014,8.811499,-7.075680,9.965867,-0.823429,-5.160277,-8.750710,-9.163347,1.467843,-5.432218,-9.230604,0.668344,4.097650,-8.391980,-9.252086,2.833012,-5.146424,4.701371,8.709572,1.695335,-3.309186,-8.548165,-1.290320,-9.472223,-9.542490,-9.962235,1.168411,-4.699791,-2.518662,1.288528,-3.517568,4.442001,9.890270,-5.720829,-2.363304,8.513173,0.380607,3.381041,-3.831993,4.090574,-7.658725,4.168150,-2.274155,-1.767383,-0.379199,9.686876,-9.752142,-7.298457,2.052175,1.522687,-5.646353,2.308940,-0.711404,3.658180,-2.948965,9.325280,-3.625232,3.929934,-3.107237,-9.367367,5.443703,-5.134715,-2.390021,-2.723053,7.759547,8.957735,-2.133609,5.644549,-2.877102,8.793576,0.984214,1.719219,3.556547,-9.473170,0.625878,-4.409214,4.121684,-2.356007,6.178326,0.693371,-9.415657,-3.169289,8.451942,2.247670,7.793518,7.237168,7.030413,-7.056409,8.430303,9.291652,7.972600,0.676274,-6.009760,6.632525,-3.102716,-8.069396,0.725399,6.537774,-5.776875,-0.487100,3.910739,-1.469217,4.401308,6.799565,-7.269138,7.604833,0.604766,-2.704726,-3.888603,9.696845,-4.803327,-7.767763,9.648906,7.676433,-0.017059,7.805142,9.700772,4.504524,-0.357488,7.637887,1.187647,3.124338,1.747354,-0.958906,1.895786,5.185890,1.444570,4.944687,3.659036,-8.790116,7.500071,-9.025504,6.760830,1.635271,-6.006489,-1.290109,2.710566,-3.336512,4.262478,-6.896822,9.536238,5.843985,5.304438,5.740440,7.051561,5.507588,0.275091,7.048564,1.112998,-2.857496,8.032032,3.904840,-7.424354,7.794382,-8.382243,-7.852704,2.634523,-4.771753,2.784371,-7.881143,6.829110,5.179908,2.664827,0.818031,9.030756,-8.883355,3.483403,5.621808,-8.776244,7.545204,-1.496331,-9.052550,8.867063,1.342433,-7.464416,7.860627,3.598004,-8.755522,8.579646,3.232004,1.664177,3.654305,2.758834,3.105578,-6.743164,-3.675478,-7.625883,-6.740033,7.489863,-5.291126,2.320456,4.194369,-0.325468,0.060617,1.531869,-3.448913,0.321841,8.030760,-8.410739,-5.159762,-6.305406,-5.952350,1.083216,-3.925377,-5.058770,-0.978549,9.624196,-9.335965,2.592717,8.854131,-8.068084,6.065795,-6.962085,-7.689669,8.000423,7.217140,5.080703,8.566809,-3.966357,1.777124,-0.989031,5.367322,7.703775,-7.998427,3.300869,2.089376,7.546918,9.562527,-7.596644,8.122258,-3.641316,5.874974,-3.259571,-7.943924,-3.982445,8.320357,3.497694,-0.348490,-2.746511,5.616935,0.085482,5.814727,-8.416323,-5.180335,-4.455618,-5.778926,-0.903238,-0.187096,-0.862588,3.269385,-4.147576,-1.956130,6.425510,-4.102462,4.996399,-6.294018,-8.221792,4.942439,-4.680936,7.504172,9.952820,-6.481580,3.591987,-1.654270,5.752238,1.220993,-4.468274,-5.206117,-1.384675,4.513079,-4.892025,-1.679202,5.270759,3.819592,6.032660,-6.161344,3.199337,-4.003641,4.785025,-2.090779,4.980759,-1.408253,4.711565,0.776560,4.767657,0.471326,-0.469497,1.169420,-4.853716,-0.251833,0.641505,-1.728913,3.484250,-8.448060,-0.047877,0.540701,-5.289368,5.129652,-6.483037,9.574095,-1.937992,-1.690325,1.609784,-0.200579,-5.480146,6.599701,-4.005800,-6.474486,3.133220,-8.714130,-9.792497,7.670938,-7.945096,-4.365822,4.698765,-6.929563,7.281424,0.084325,-0.265053,-9.621661,-9.852055,1.756990,0.099277,-3.235544,-0.961098,-2.337621,-9.916312,1.066211,9.795382,-2.224819,8.775632,-8.325915,9.979421,1.436577,8.252836,-8.523377,-8.886891,-0.012100,-8.082179,-5.225684,-4.217965,6.496884,-8.276011,0.369611,-8.892899,-0.829479,-6.914201,-8.641130,-0.984212,-1.188671,1.644055,2.142718,-6.451830,-5.472057,-8.445069,1.632186,8.107794,-5.527078,9.719085,1.583729,0.181395,9.934465,-7.183614,5.108320,-1.452654,7.491266,-1.597406,5.919519,-8.142032,3.697236,-9.854615,7.344301,3.079693,7.713148,1.346612,6.869389,-6.046545,1.026598,-6.218640,-8.438513,-1.061631,3.723100,-3.217661,9.578806,-4.145785,-5.800432,9.912404,-7.130441,4.104796,7.595656,9.852831,7.268894,7.174116,-3.222124,2.853442,-4.488479,-3.054795,-1.989971,-7.783194,-8.851726,7.742257,7.256953,-6.863514,5.241851,0.678337,7.559071,4.397899,9.440040,1.534333,6.146730,-0.270729,-6.257520,5.956938,3.792288,-1.720817,-5.385008,-2.089828,-1.111784,4.046379,-0.491904,-6.483255,0.504103,-4.246016,-3.300622,8.907089,-4.862924,-4.804640,-4.104780,-3.146782,0.969594,9.202500,-2.710111,-1.231133,4.769986,-4.075719,-6.498687,3.134809,0.858779,-0.434109,3.443426,0.221473,4.309813,-2.729316,2.805965,-8.487585,6.300949,-2.984808,3.280780,-2.390263,-5.946893,2.885757,2.885528,5.869682,-9.735271,-5.197811,4.496259,-3.092163,7.840897,-5.272355,9.126913,-8.433660,4.915394,-4.719477,1.871337,3.737758,4.703899], dtype = "float32")#candidate|4286|(1287,)|const|float32
call_4285 = func_2146_call(relay.reshape(const_4286.astype('float32'), [9, 11, 13]), relay.reshape(const_4286.astype('float32'), [9, 11, 13]), )
call_4287 = func_2146_call(relay.reshape(const_4286.astype('float32'), [9, 11, 13]), relay.reshape(const_4286.astype('float32'), [9, 11, 13]), )
func_1260_call = mod.get_global_var('func_1260')
func_1263_call = mutated_mod.get_global_var('func_1263')
var_4289 = relay.var("var_4289", dtype = "float32", shape = (275,))#candidate|4289|(275,)|var|float32
call_4288 = func_1260_call(relay.reshape(var_4289.astype('float32'), [11, 5, 5]))
call_4290 = func_1260_call(relay.reshape(var_4289.astype('float32'), [11, 5, 5]))
output = relay.Tuple([bop_4255,call_4266,var_4267,call_4285,const_4286,call_4288,var_4289,])
output2 = relay.Tuple([bop_4255,call_4268,var_4267,call_4287,const_4286,call_4290,var_4289,])
func_4295 = relay.Function([var_4267,var_4289,], output)
mod['func_4295'] = func_4295
mod = relay.transform.InferType()(mod)
var_4296 = relay.var("var_4296", dtype = "float64", shape = (672,))#candidate|4296|(672,)|var|float64
var_4297 = relay.var("var_4297", dtype = "float32", shape = (275,))#candidate|4297|(275,)|var|float32
output = func_4295(var_4296,var_4297,)
func_4298 = relay.Function([var_4296,var_4297,], output)
mutated_mod['func_4298'] = func_4298
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4827 = relay.var("var_4827", dtype = "uint8", shape = ())#candidate|4827|()|var|uint8
const_4828 = relay.const([[[-2,-8,-8,-2,-9,-7,-1],[4,-3,-8,-4,3,-1,-4],[-5,3,-10,10,5,2,-6],[9,-7,-1,1,-9,8,-8],[-2,-6,-9,-8,-1,8,-2],[-3,9,-6,-4,7,4,-10]],[[-7,-5,-1,9,3,9,-6],[1,-7,-6,6,-5,9,-6],[7,7,-6,-4,-5,-5,10],[2,2,2,8,8,-10,-4],[2,-1,-8,2,3,9,8],[-6,-9,-2,4,2,4,5]],[[10,2,-1,-2,3,3,1],[4,7,8,2,8,-8,5],[-10,-7,-2,-4,-1,-2,-2],[10,6,-5,-8,8,4,4],[-6,-5,1,-7,-10,8,7],[6,4,5,4,2,2,9]],[[-7,10,-2,-2,-5,-8,9],[-6,5,-10,-2,10,2,5],[3,1,-7,-5,-4,-5,-5],[-5,10,-5,-7,-5,-9,-4],[-6,-6,-5,1,6,2,-3],[2,-10,6,-2,5,5,10]],[[-7,-6,3,4,-7,-1,-8],[-6,10,9,-6,-1,8,-8],[8,-9,-2,7,-5,5,-3],[6,7,-4,-9,-10,10,3],[-9,-10,-1,-1,-2,-10,1],[-10,10,-8,7,8,5,-10]],[[7,-2,8,-3,-9,-4,5],[7,-7,-10,2,-6,10,-6],[9,-1,-1,5,4,-10,4],[-5,6,-3,-10,2,3,-2],[3,1,4,-2,-6,6,-5],[-3,8,6,-10,9,-3,2]],[[2,-10,-2,8,-2,2,-5],[8,-5,-1,-10,9,7,10],[2,10,7,-8,1,-6,-4],[3,-7,3,1,-6,-10,-1],[-6,1,-6,-1,-10,-4,5],[-6,-10,-10,1,10,-7,2]],[[-3,6,-7,-7,-7,6,7],[10,1,3,-6,-8,-8,8],[-7,3,-5,-9,-6,-5,-5],[10,-10,4,-8,-1,-1,1],[9,3,2,-6,-6,9,-1],[5,-3,8,7,7,10,-10]],[[-8,8,-2,3,-8,-1,6],[-6,-2,5,-8,-3,8,10],[7,-8,-3,-2,9,9,6],[2,7,1,1,-9,10,5],[1,5,-9,2,-9,-9,2],[6,5,2,-9,5,2,10]],[[5,9,3,3,6,4,-10],[4,10,-9,-9,10,7,-8],[9,-10,-5,2,4,-10,1],[-8,8,10,-3,4,2,-1],[-9,-8,9,7,-9,-2,4],[-7,-5,-5,-8,-10,4,4]],[[5,-6,6,-5,4,-9,-10],[-9,-2,-9,-1,9,-9,-10],[-2,-10,-2,1,4,5,7],[2,6,2,-6,-4,-7,-6],[-3,-9,5,-9,-10,6,-10],[2,6,5,-7,-9,-9,-2]],[[9,3,6,-4,5,-7,6],[1,-4,-3,8,2,6,10],[8,4,-10,7,2,9,5],[-2,-1,6,7,6,9,3],[-3,3,-5,-7,5,-4,-5],[4,-1,10,-1,-7,-8,-6]],[[-5,6,-1,7,7,2,-8],[-1,-9,3,-3,-2,-9,-5],[-4,-8,1,6,3,10,7],[-4,-6,8,-9,-5,-3,-9],[6,3,-6,-10,3,10,9],[-7,-10,1,-5,-1,-9,-7]],[[3,-5,1,-10,9,3,-8],[-9,3,-1,-7,10,1,-4],[-10,-3,8,-4,7,5,6],[9,3,10,6,-10,6,-2],[-3,-7,9,8,1,-8,5],[-8,3,4,-7,-3,-8,3]]], dtype = "uint8")#candidate|4828|(14, 6, 7)|const|uint8
bop_4829 = relay.maximum(var_4827.astype('uint8'), const_4828.astype('uint8')) # shape=(14, 6, 7)
func_440_call = mod.get_global_var('func_440')
func_443_call = mutated_mod.get_global_var('func_443')
const_4842 = relay.const([-1,2,-3,-4,-1,2,6,-5,9,1,3,-1,-7,4,-1,-5,-5,10,1,-7,-4,10,-6,-3,10,-10,5,7,4,-7,6,9,-1,9,6,-6,-5,-10,-1,6,6,-6,9,-2,3,-2,-1,10,2,6,5,8,-6,1,-9,9,-4,6,-6,-10,8,-10,3,-3,-9,-2,-10,-4,-9,4,-3,3,9,3,-8,6,5,6,-6,-4,9,9,8,-8,10,5,6,-3,5,-2,-8,-8,-4,2,5,-3,4,4,5,1,3,-1,1,-5,9,-3,6,10,8,-8,-10,7,-4,7,2,-7,3,-5,-1,3,8,6,7,-1,-10,8,-3,5,8,9,10,-7,5,9,6,5,-8,-7,-7,-2,9,-8,-6,10,-6,6,-4,-1,8,-4,-10,8,9,6,4,-4,9,7,-6,-1,-5,-8,-1,7,-7,-4,1,-6,7,-8,-10,-4,-6,-4,8,-3,-2,4,-10,-1,-4,-5,-8,5,4,6,8,3,-3,-6,-2,-5,-2,8,-10,8,-5,-8,5,-6,-9,-3,4,-10,-4,-7,-7,-3,-1,-2,9,6,-4,-6,-8,-8,-7,-5,-10,8,-1,-2,-9,-9,7,5,1,1,6,4,2,-2,-4,1,-1,-10,6,-3,9,9,-5,-2,-4,2,10,3,-2,2,1,2,4,4,-3,9,1,8,2,2,4,-7,4,10,-6,-1,-8,7,-4,6,-10,-9,-4,-6,-8,-4,4,1,-1,3,-3,-4,-9,5,-4,1,5,-6,9,-5,2,-3,1,4,3,9,4,-7,6,6,-10,-5,-9,3,-5,-8,6,-3,3,8,7,-2,-3,-5,10,1,8,-6,-9,4,-7,-2,4,-9,5,5,-7,6,-7,-10,-10,-10,9,5,4,5,-2,4,2,-4,-3,10,5,1,-7,-10,2,-5,-7,2,-10,5,-1,1,-4,-2,-2,-6,-10,-3,-8,4,-5,2,9,-3,8,-4,-7,-4,-8,10,1,-8,-5,-8,4,-2,10,10,7,-8,-9,7,5,-9,-8,-4,-6,-1,-5,-3,-10,-9,10,-8,3,3,-10,10,-2,10,-9,-10,-7,4,-10,3,4,8,9,1,6,4,6,1,4,-9,-6,-7,-2,6,-10,9,1,5,7,-4,2,9,5,-8,-3,-1,8,5,1,-9,2,-6,-9,-5,-9,-9,10,-10,8,-3,5,-2,-3,2,-10,-6,2,5,3,6,-10,2,3,-4,-2,-5,-10,1,-4,7,7,-6,5,8,3,9,-1,5,5,-8,-4,-3,10,6,-8,-9,6,1,9,1,-7,5,-3,5,-10,6,-6,8,4,9,7,-6,5,8,1,6,-8,-8,-3,-1,-6,7,-6,7,9,4,5,-2,-9,4,8,8,3,8,-8,9,6,5,10,-3,-7,-6,-7,5,-7,-4,1,10,9,-1,7,-1,7,4,-10,-8,-4,-1,3,4,7,6,1,3,3,7,4,-4,5,-10,-7,-2,-5,1,-9,9,-7,3,10,-10,-9,-7,-6,-6,1,6,6,-10,-2,-10,-7,8,-3,-2,8,6,-8,10,3,4,4,3,-9,3,-3,-4,-2,-4,5,8,7,-3,-8,-6,-1,-7,2,4,-3,5,-10,6,-3,-6,6,4,-9,-8,-9,10,-7,-2,-6,-2,-3,-7,-10,-4,-5,1,-6,5,-1,-4,7,8,-2,-5,-9,9,8,7,-9,10,3,5,6,5,-3,6,5,-8,-6,-5,-3,-1,10,-8,-8,3,10,3,8,-1,-8,-4,5,-10,-4,8,-9,8,-6,8,-5,-7,9,-10,7], dtype = "uint16")#candidate|4842|(675,)|const|uint16
call_4841 = relay.TupleGetItem(func_440_call(relay.reshape(var_4827.astype('uint16'), []), relay.reshape(const_4842.astype('uint16'), [15, 3, 15]), ), 0)
call_4843 = relay.TupleGetItem(func_443_call(relay.reshape(var_4827.astype('uint16'), []), relay.reshape(const_4842.astype('uint16'), [15, 3, 15]), ), 0)
bop_4863 = relay.right_shift(const_4828.astype('int16'), var_4827.astype('int16')) # shape=(14, 6, 7)
output = relay.Tuple([bop_4829,call_4841,const_4842,bop_4863,])
output2 = relay.Tuple([bop_4829,call_4843,const_4842,bop_4863,])
func_4876 = relay.Function([var_4827,], output)
mod['func_4876'] = func_4876
mod = relay.transform.InferType()(mod)
var_4877 = relay.var("var_4877", dtype = "uint8", shape = ())#candidate|4877|()|var|uint8
output = func_4876(var_4877)
func_4878 = relay.Function([var_4877], output)
mutated_mod['func_4878'] = func_4878
mutated_mod = relay.transform.InferType()(mutated_mod)
var_4928 = relay.var("var_4928", dtype = "float32", shape = (15, 13, 5))#candidate|4928|(15, 13, 5)|var|float32
uop_4929 = relay.atanh(var_4928.astype('float32')) # shape=(15, 13, 5)
func_603_call = mod.get_global_var('func_603')
func_607_call = mutated_mod.get_global_var('func_607')
var_4933 = relay.var("var_4933", dtype = "float64", shape = (6,))#candidate|4933|(6,)|var|float64
const_4934 = relay.const([10,-9,-2,-10,7,3,-8,-7,-7,-6,1,4,2,6,-3,-5,10,-7,-7,1,2,5,2,-1,-6,1,1,-9,-5,-7,7,3,-9,10,-7,2,-4,-7,9,-7,-7,2,-4,-2,-5,-9,-2,10,3,7,-10,9,-6,-2,6,-1,10,10,-4,4,3,2,6,-5,1,-8,3,-6,-4,3,8,3,-7,1,-7,-3,-10,6,-6,-2,-4,-9,-8,3,3,-1,2,-8,-9,2,-6,6,9,-10,2,-3,4,3,-9,3,-6,1,-8,-9,-10,3,-6,-9,-1,-10,-3,-9,-7,9,9,-7,6,-3,9,-3,2,2,-3,3,-2,-6,7,1,8,-9,-2,3,6,-6,7,1,-3,7,6,1,2,10,-3,-3,-3,-9,1,-4,-8,-2,-10,-4,6,1,9,7,-1,1,9,6,-10,-8,-7,-10,5,-9,2,7,5,9,10,-5,6,7,-4,9,10,-7,-2,-1,6,1,3,8,-6,2,-5,-8,-5,-8,8,4,-5,-4,-5,-3,6,9,-9,-7,-5,2,-8,-3,-5,-3,-8,-2,6,-9,10,-2,-3,-6,-9,9,4,8,-2,-6,-3,4,5,-6,2,2,9,-10,6,-7,1,-10,9,-8,10,10,2,-5,-7,-8,8,3,-3,-10,-9,3,-4,6,3,-4,9,-4,-5,-7,-4,3,2,-9,-7,3,7,7,-1,5,-10,-4,-3,9,1,-2,9,-5,1,8,-5,7,7,3,8,1,-9,6,-5,-1,9,1,1,10,2,-2,-9,8,5,-3,1,3,-10,9,-4,-4,-4,-2,3,-8,10,-1,-1,4,-10,8,-2,1,-10,9,-3,-8,8,-3,-3,-5,1,1,-4,-5,-1,-8,-4,5,1,9,-7,-10,-8,-5,2,-6,-5,-4,-2,-5,-1,-8,-4,-10,-8,-7,-7,-9,8,8,5,4,2,9,6,-7,-9,-6,7,-7,5,10,-1,-7,-5,2,10,10,-3,-6,-4,-9,-9,9,-1,10,10,-7,1,1,-10,5,-8,-2,5,1,-2,-6,7,6,2,3,-8,-3,4,-4,-9,-4,6,-10,-5,-2,-3,-7,-4,8,9,-7,2,5,-6,-10,-9,-1,-2,8,4,-4,10,7,2,-9,-7,-9,8,4,-4,10,3,-2,4,2,-2,3,6,6,-7,3,3,2,-10,7,5,9,9,-2,-3,-9,1,-5,-5,-8,-9,-4,-5,-6,-3,10,10,-5,-3,2,-3,9,6,-2,-6,-1,5,9,-2,-6,-8,4,-6,-7,-7,-2,-1,-4,-6,5,-1,9,2,6,3,-8,6,6,-2,-10,-1,9,5,8,2,-7,10,6,4,-5,-4,7,-6,2,6,-6,6,3,-9,-5,4,3,-8,5,1,-10,-2,6,9,-5,2,6,-5,1,9,4,-8,9,-5,1,-4,-2,-7,6,8,3,-3,10,-7,3,-9,-9,-3,4,-3,-6,5,7,8,-9,7,10,10,-9,3,3,10,-8,8,-10,6,-10,-6,4,-10,-2,-5,-6,-2,-2,-6,6,4,-8,-5,-5,-6,5,-2,6,2,-1,-8,-1,-2,5,7,6,5,-6,-4,-5,-8,10,9,-3,4,7,-1,-4,3,-10,3,2,10,10,8,4,-6,-5,-2,8,-4,-2,5,-7,7,7,-3,-8,6,1,-3,-10,-1,4,5,1,-6,4,9,8,-9,6,5,-9,1,-6,2,1,-3,9,6,-9,5,2,5,1,-6,-5,10,3,-1,4,-5,9,2,5,-9,8,8,-9,-1,-6,-7,1,7,9,-3,3,1,-5,1], dtype = "uint16")#candidate|4934|(675,)|const|uint16
call_4932 = relay.TupleGetItem(func_603_call(relay.reshape(var_4933.astype('float64'), [1, 6, 1]), relay.reshape(const_4934.astype('uint16'), [225, 3]), ), 4)
call_4935 = relay.TupleGetItem(func_607_call(relay.reshape(var_4933.astype('float64'), [1, 6, 1]), relay.reshape(const_4934.astype('uint16'), [225, 3]), ), 4)
output = relay.Tuple([uop_4929,call_4932,var_4933,const_4934,])
output2 = relay.Tuple([uop_4929,call_4935,var_4933,const_4934,])
func_4948 = relay.Function([var_4928,var_4933,], output)
mod['func_4948'] = func_4948
mod = relay.transform.InferType()(mod)
var_4949 = relay.var("var_4949", dtype = "float32", shape = (15, 13, 5))#candidate|4949|(15, 13, 5)|var|float32
var_4950 = relay.var("var_4950", dtype = "float64", shape = (6,))#candidate|4950|(6,)|var|float64
output = func_4948(var_4949,var_4950,)
func_4951 = relay.Function([var_4949,var_4950,], output)
mutated_mod['func_4951'] = func_4951
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5448 = relay.var("var_5448", dtype = "float32", shape = (6, 7, 13))#candidate|5448|(6, 7, 13)|var|float32
const_5449 = relay.const([[[-7.875569,9.521349,5.977075,-4.449347,5.531480,-8.138638,7.177083,0.152336,-4.319664,2.910799,6.742703,-4.314349,2.042605],[3.149001,-5.239372,-9.522733,4.783485,-0.875627,2.514940,-7.170102,-7.200638,0.445770,-4.746020,-8.883328,-9.315134,5.765204],[0.363337,7.785650,-4.914149,-4.908366,7.555677,2.071114,6.271259,-0.490604,-8.324350,2.739384,7.128055,6.316455,0.405339],[-6.323241,3.987315,4.026907,0.932137,6.794954,9.353740,9.490425,-6.672887,3.575718,-0.132787,-9.348026,7.257402,2.774160],[8.678105,-7.235743,6.146119,-3.030136,-0.824464,4.970607,-3.304425,4.523167,4.088817,4.165987,8.100121,2.748763,-1.688236],[9.512502,9.981128,-9.679718,3.276502,0.896959,-0.989242,9.000347,6.521589,-7.056903,0.657223,2.433232,-4.632760,4.355725],[-7.496233,-8.251715,-6.900734,-4.169256,-8.254116,-4.220423,4.127986,-5.873028,-3.246925,-1.884760,2.817108,7.150089,7.932677]],[[4.849980,9.947506,6.683418,1.653248,-9.644927,8.897407,3.181150,-8.243035,7.685226,7.469376,1.760164,3.693258,1.351619],[-2.537086,-1.687871,7.665456,-8.245475,-3.569648,-8.784303,1.347040,4.310029,9.094501,-2.943012,5.215942,3.801973,-3.491594],[-9.479517,2.790638,-4.679623,-5.017912,3.669866,-8.235810,6.871419,4.834012,-6.762793,-2.454875,-7.771988,-8.645778,9.849277],[-2.493274,-3.790352,2.867567,1.458041,-0.926479,6.174650,-7.498542,-8.091455,-1.075812,7.242280,-0.376281,-6.573021,2.050321],[-5.292094,6.010810,8.712461,1.345163,-0.465128,-5.930769,4.329416,5.547784,-4.580755,3.786801,-3.480676,-9.781830,8.907526],[5.394168,7.713927,-9.334035,-6.166682,-5.310643,-1.938502,5.659636,-1.091398,-7.988953,-3.184607,-2.116313,6.265889,-8.198135],[4.249950,4.926060,3.798077,-1.276411,1.203858,-6.163044,8.744920,-4.281673,-8.709640,-3.673310,3.375477,-5.079303,0.664325]],[[-7.213584,-5.442508,-9.027766,0.106689,7.071025,8.545880,-0.208287,-6.278823,-7.501882,9.532515,0.298485,8.230768,-5.669177],[-3.511053,-9.084895,-7.878134,-4.322320,8.744802,-2.339686,-2.729531,4.957838,-0.273504,8.621349,4.765710,-2.917929,-8.348660],[-6.173339,5.820551,-9.559271,-1.256803,3.229648,-1.231183,9.287584,2.115219,-8.029565,6.340534,3.296348,9.564212,4.300637],[-4.140981,5.495016,4.162193,-3.428451,9.470247,9.903943,-0.738444,-9.219904,-6.277577,-7.162336,3.942764,-2.914514,6.279850],[-9.187116,-1.862893,3.254770,6.519105,4.034895,-6.212934,-4.640699,-7.067919,4.253491,-4.891940,5.810145,-1.774246,-7.283675],[0.937965,-0.957158,-4.303910,8.172753,-8.069905,-5.601995,-3.713142,1.394122,2.531771,-9.757215,8.657185,-9.363599,9.651638],[-7.415615,-6.720558,5.757142,2.234989,-1.892110,3.424917,-3.506601,-3.858001,5.880063,-7.016541,1.092767,-9.383587,-0.027970]],[[-4.831986,-4.525785,-5.353646,9.397167,5.776483,-4.070315,-9.525595,2.393083,7.464825,-2.717008,-1.145156,-2.650732,-6.782550],[-7.671608,2.455470,-5.891287,-5.248142,9.844980,0.382071,2.874363,6.233484,-8.260841,-8.728821,7.930092,6.451604,2.304033],[-2.681289,9.555548,3.497648,8.275330,-4.053099,-2.829050,-2.900406,9.817103,-6.782617,3.215940,6.119769,-1.912656,4.349096],[8.059557,6.995087,-2.634228,-7.476745,-9.406270,9.344534,-4.305367,2.864233,-0.658090,-7.309605,1.397148,-1.348472,-1.718984],[-8.997990,3.016721,0.205174,9.199950,4.928196,-6.963842,5.388282,-2.738374,-6.307830,-8.020453,8.707774,-5.958932,-8.759468],[1.053343,-8.277669,-4.659161,-7.876764,-4.067305,-8.557479,-2.300744,3.458426,0.303916,8.944081,8.073269,-9.519731,9.213024],[2.815474,3.703360,1.543714,-9.656657,7.184085,6.027541,0.717340,2.346417,5.625906,6.201047,-4.887696,2.212822,-1.108521]],[[8.683798,-6.529876,0.740990,-1.787664,8.435200,9.525632,1.929843,7.162724,-9.028042,-7.902841,-7.726163,8.687419,-4.566040],[6.516493,6.961749,8.313908,-8.796375,5.711346,6.662239,2.978629,6.284423,-9.749785,6.131266,4.561667,-3.120327,5.743181],[2.501029,0.736457,-0.540950,8.937572,-7.767688,-6.022086,-7.563202,-4.309891,-4.045898,7.749679,-7.304772,-8.980747,7.247091],[3.941782,-2.864426,-2.396246,0.150411,0.971471,-5.183799,0.462250,3.013618,-5.567761,8.046021,0.485685,-0.779019,-1.333357],[2.522595,-2.960396,-0.268479,-6.679201,-1.741341,2.117038,-6.562401,5.706577,8.453036,-4.565910,-1.704232,5.593032,9.181525],[3.959451,8.413737,9.919166,9.029915,1.290986,4.571929,-3.652473,-9.185992,-7.565682,-2.364718,-0.158516,-3.539267,2.271072],[2.039256,3.683151,5.476034,-7.025353,-9.103881,5.569816,5.978178,2.135256,9.597598,-7.389486,0.371993,-3.629531,-7.075818]],[[-9.881840,7.783360,0.334563,-0.739947,-0.090608,-4.982202,-8.585423,-7.070950,-3.675021,-8.467742,-0.193409,2.677616,2.745322],[2.390320,-7.915853,-8.657748,9.171452,-7.483304,-8.774768,5.843149,2.278385,5.431417,-3.616180,6.258464,6.312624,-0.759468],[9.028592,-7.001498,3.041196,6.966581,5.344187,-5.591194,6.204142,-7.813669,5.272919,-4.296286,4.187071,-2.356628,5.970121],[-8.055950,5.343825,6.186462,-0.925977,9.219214,9.816486,0.059053,0.856886,4.671043,0.824895,-5.572652,7.990237,4.150442],[3.419289,-7.399121,2.452138,9.387885,-5.685749,-6.318794,6.275597,-8.781764,-0.724724,8.834230,9.199533,-2.277221,-9.059107],[6.368813,-4.505560,-5.928489,-9.537593,-9.762939,5.890890,-2.823762,-6.293100,-9.560477,-8.163639,4.622297,4.579179,-8.887363],[1.342672,6.823870,-1.119038,-0.374178,5.332626,-6.435021,6.508361,5.558135,-2.359758,-8.991056,-4.500626,-8.812435,6.777252]]], dtype = "float32")#candidate|5449|(6, 7, 13)|const|float32
bop_5450 = relay.floor_divide(var_5448.astype('float32'), relay.reshape(const_5449.astype('float32'), relay.shape_of(var_5448))) # shape=(6, 7, 13)
output = bop_5450
output2 = bop_5450
func_5453 = relay.Function([var_5448,], output)
mod['func_5453'] = func_5453
mod = relay.transform.InferType()(mod)
mutated_mod['func_5453'] = func_5453
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5454 = relay.var("var_5454", dtype = "float32", shape = (6, 7, 13))#candidate|5454|(6, 7, 13)|var|float32
func_5453_call = mutated_mod.get_global_var('func_5453')
call_5455 = func_5453_call(var_5454)
output = call_5455
func_5456 = relay.Function([var_5454], output)
mutated_mod['func_5456'] = func_5456
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5487 = relay.var("var_5487", dtype = "int64", shape = ())#candidate|5487|()|var|int64
var_5488 = relay.var("var_5488", dtype = "int64", shape = (15, 6, 15))#candidate|5488|(15, 6, 15)|var|int64
bop_5489 = relay.logical_xor(var_5487.astype('int64'), var_5488.astype('int64')) # shape=(15, 6, 15)
bop_5492 = relay.floor_mod(var_5488.astype('float32'), var_5487.astype('float32')) # shape=(15, 6, 15)
output = relay.Tuple([bop_5489,bop_5492,])
output2 = relay.Tuple([bop_5489,bop_5492,])
func_5509 = relay.Function([var_5487,var_5488,], output)
mod['func_5509'] = func_5509
mod = relay.transform.InferType()(mod)
var_5510 = relay.var("var_5510", dtype = "int64", shape = ())#candidate|5510|()|var|int64
var_5511 = relay.var("var_5511", dtype = "int64", shape = (15, 6, 15))#candidate|5511|(15, 6, 15)|var|int64
output = func_5509(var_5510,var_5511,)
func_5512 = relay.Function([var_5510,var_5511,], output)
mutated_mod['func_5512'] = func_5512
mutated_mod = relay.transform.InferType()(mutated_mod)
var_5558 = relay.var("var_5558", dtype = "float32", shape = (7, 13, 10))#candidate|5558|(7, 13, 10)|var|float32
uop_5559 = relay.log2(var_5558.astype('float32')) # shape=(7, 13, 10)
output = uop_5559
output2 = uop_5559
func_5561 = relay.Function([var_5558,], output)
mod['func_5561'] = func_5561
mod = relay.transform.InferType()(mod)
var_5562 = relay.var("var_5562", dtype = "float32", shape = (7, 13, 10))#candidate|5562|(7, 13, 10)|var|float32
output = func_5561(var_5562)
func_5563 = relay.Function([var_5562], output)
mutated_mod['func_5563'] = func_5563
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6004 = relay.var("var_6004", dtype = "float32", shape = ())#candidate|6004|()|var|float32
var_6005 = relay.var("var_6005", dtype = "float32", shape = (11, 16, 7))#candidate|6005|(11, 16, 7)|var|float32
bop_6006 = relay.floor_divide(var_6004.astype('float32'), var_6005.astype('float32')) # shape=(11, 16, 7)
func_4948_call = mod.get_global_var('func_4948')
func_4951_call = mutated_mod.get_global_var('func_4951')
const_6013 = relay.const([6.803326,9.509759,2.290216,-1.927135,8.831294,-5.870560,2.552052,1.357558,5.616936,0.312367,9.395626,-3.208666,-2.698245,5.482332,9.175831,1.517878,-0.984044,-1.941323,-8.475661,7.126040,-3.319022,3.049710,6.746903,0.519008,4.275973,-3.850702,-2.413269,0.408294,-4.706441,-2.830870,6.854535,-2.269526,-2.085840,5.698467,-5.998276,-8.324948,-4.338852,-3.993942,5.839557,-0.925956,9.257159,1.487086,-1.267997,-9.094263,1.252014,-4.185099,-1.269287,-0.376160,4.010605,4.003812,8.832699,-4.860589,-8.918740,6.637028,3.593536,-4.069707,-8.295163,-2.312203,6.729243,7.548622,-9.648971,3.924096,0.183476,4.613196,-6.347196,-8.729462,1.735146,4.024249,7.124944,2.014375,4.472781,5.682712,4.678543,-9.569657,-6.335743,0.720178,0.050719,4.699818,-3.049726,4.384264,-7.754430,-0.436477,6.745202,4.056470,-9.919839,1.122740,-7.196540,0.670987,-5.809166,-1.190552,-1.787115,7.851739,4.164740,-8.478302,-3.511863,-7.477241,1.741185,-4.615504,-4.651729,8.021564,-7.702144,-3.670145,-7.192650,-4.942317,1.561766,1.857199,-1.021573,4.416685,-5.854388,8.908699,-6.609829,1.209088,0.377903,-7.300280,0.558865,-2.239611,-6.676773,-6.601997,3.564295,5.871953,-6.906285,-0.534122,-1.831523,-1.164395,9.335884,2.816509,7.620196,2.636270,-0.077649,-7.814149,4.567423,3.482755,-7.104574,-2.878631,-5.815486,-9.612689,7.807437,2.452670,3.508456,-8.984022,8.362431,-3.626355,-5.536139,7.468824,6.966985,-2.530038,4.342961,-8.901621,3.808204,4.325926,-4.313249,-0.811908,-6.998578,1.710559,1.170617,-0.596439,6.260776,7.797303,-2.068402,-7.251088,7.069529,-7.305226,-9.979888,-5.302685,-4.295055,0.037507,0.417972,-2.425693,2.631667,0.665981,3.995320,-0.388005,-1.178062,-2.444962,-2.218817,-7.648860,0.392673,-9.811957,3.084960,7.777752,-8.402977,9.328768,5.840781,1.494688,7.194936,2.727745,-8.394592,-4.338432,-9.425603,1.325651,2.321146,-4.037618,7.993858,8.747309,8.603349,-0.160046,6.039495,3.328287,2.950088,-0.598729,-1.926952,5.308625,4.331715,8.022483,-0.569010,-8.196085,4.187204,-0.861688,-6.783103,2.106545,-4.114718,3.523152,2.312854,-8.803099,-3.933505,-1.371124,0.335655,7.778091,2.398883,-9.443172,-2.512130,3.071894,5.364158,-3.292184,9.656752,5.027643,9.364732,-4.809282,7.113639,0.757336,5.589893,-7.021026,3.025046,1.411217,9.120004,-0.772379,-6.703568,9.686473,0.617613,9.132310,8.847073,-5.476335,-9.683544,-6.237853,-1.328706,8.615095,7.677214,-3.438885,2.667659,2.421847,2.888122,-8.015833,6.888911,9.456282,7.209863,-8.466479,7.097433,1.400148,5.967932,6.625667,6.569014,8.275070,9.755781,5.894757,3.774417,0.230328,-3.743483,-7.476453,8.486328,-7.419676,0.301473,3.904777,-2.743639,-3.403272,-0.847464,5.301482,-2.191340,-8.441909,-7.899455,-8.329387,-5.105324,-1.394311,-4.697824,5.917070,-8.986388,-9.687500,-9.035576,-1.970528,2.415974,-7.198568,-5.630207,2.689520,-6.328089,-6.581186,-7.680258,-1.674838,-4.383987,8.657687,4.759671,-5.893864,6.321405,6.765820,5.472611,-1.733608,-6.351487,-7.742966,-1.871664,3.884351,-4.762043,5.907888,3.256732,3.943877,-4.032012,-2.182402,0.339720,1.399438,5.602933,-5.961708,-8.354613,6.506240,1.955052,1.902024,-6.790962,-2.874204,9.028058,5.764945,4.866725,-2.289488,4.620166,-2.989505,-6.312277,8.772025,-1.126328,-7.873336,-0.760893,-8.326722,2.843397,8.472422,-1.252246,-8.692663,9.398735,-7.876871,5.616016,-5.644458,0.413569,1.879564,-6.213352,-2.502085,5.188948,0.934578,-3.990401,9.593149,-5.984681,5.594259,8.543026,-6.219662,1.276194,8.724232,7.341129,-2.686769,-2.109014,-4.608590,-6.686146,-0.777009,0.485447,-1.897569,9.292581,-6.722165,-2.164689,-4.639745,4.533837,8.576610,-6.073284,1.255034,-5.232021,-7.217782,-6.439705,-1.773213,9.996130,-8.824324,-6.804319,4.749591,-7.403399,4.007869,9.664470,-2.850590,-5.317217,-7.612977,5.570075,9.084759,4.632125,-5.511147,-9.991031,-5.653182,8.507110,0.716232,3.346268,6.514952,-9.705283,4.687547,5.504544,-7.449531,7.992017,-6.164217,1.094476,-5.245036,5.909553,-3.942016,2.310491,-8.317419,0.499743,1.180886,-6.859093,-2.833137,9.749659,-6.099160,-2.841753,1.064556,4.809334,-7.620636,4.894414,0.794455,6.428077,-1.373947,0.680690,-4.846769,-2.783979,6.014418,-1.068367,6.340912,4.011471,-4.553905,7.608817,0.165977,7.765937,4.332059,3.669174,-7.616053,-7.060691,4.627489,9.664527,-6.127317,8.879107,-0.571408,0.335421,-0.559203,5.814180,-3.615380,-7.204649,-5.978049,9.905347,-0.103446,-1.053349,-4.970423,5.345650,-5.349022,6.478827,0.243584,4.544895,-1.262992,8.579020,1.845373,-2.752596,8.875903,-1.933792,-5.542081,6.985959,-3.300276,8.047761,-2.465935,-6.689813,3.495833,5.713024,9.348187,-2.391432,-0.613334,-4.092001,5.244999,8.852614,0.534222,-9.548638,-2.308690,-7.272818,9.847473,4.293855,-2.022077,8.718625,3.259298,-7.246221,9.685831,-9.561886,7.752031,5.979290,6.027933,5.905624,-8.678482,4.633826,-7.721835,7.257122,1.983000,7.748695,1.850502,-1.629943,-4.053392,3.927914,4.200748,1.095519,-0.273925,2.194077,0.395394,-3.533901,-9.631377,-8.752693,0.384696,7.303214,-9.078794,-8.239851,8.509115,-4.473559,-9.771058,8.604083,-6.149218,-7.484036,3.710441,-6.506235,-4.283470,6.048463,-7.099429,6.177466,1.007823,9.868698,-1.708128,5.761116,-1.439108,6.773706,9.702667,-1.392465,1.216424,-3.259688,8.668589,9.542979,5.158414,-5.677396,5.093553,1.402316,-0.915381,-8.390780,3.742163,-8.584716,-8.285094,-7.965330,-0.625685,6.982819,1.342988,1.081225,-1.605459,-2.461233,6.495839,-1.844106,8.968838,3.556004,-8.493300,-5.004425,-5.669410,9.053288,-2.819263,-9.331163,-6.209744,-6.562005,-3.552458,-2.563177,-8.000673,-2.709487,-6.869795,-5.090040,5.806579,8.230433,-0.402833,3.151186,5.906634,6.743306,-6.733032,-5.280287,9.248935,-1.054265,-4.140530,-0.260234,5.632410,-7.605889,9.948775,2.607816,6.832629,-4.972327,-6.713293,-1.126821,-8.181542,4.303265,8.498389,-6.940865,-3.785886,-5.112746,1.740029,-5.189827,-0.234912,-8.523548,3.475260,-2.601124,8.843880,-2.274851,-6.249930,1.753176,-5.858255,7.523225,-2.087248,-6.529688,-5.795312,-6.953464,-2.465082,-4.394552,5.214596,-5.046039,8.031605,9.498828,-7.490720,-0.317072,-1.365041,7.478498,6.339545,3.403991,-8.330163,-4.162531,-0.362667,0.474384,8.150872,9.485083,-9.203490,-6.885201,-3.485839,-7.646602,4.304485,6.731679,-0.802203,0.930845,6.331583,-1.180919,-5.867234,-6.509997,0.048940,7.763821,-1.631158,0.855299,6.755515,-8.839252,-1.880841,-6.882717,0.408502,1.582017,-0.350640,2.481372,8.406862,-3.919045,7.387514,9.076667,-1.877289,2.718990,8.874302,2.054182,-4.852230,8.952537,7.709035,3.746588,0.572087,-2.370044,7.177853,-1.837077,6.875664,-8.210578,2.703230,4.341857,8.749796,-8.910624,-8.166710,6.074292,9.636791,2.017971,-6.483220,-3.833887,0.825880,2.824731,-3.028045,-0.492316,-9.502715,-6.293813,-5.375199,3.545486,1.314283,-2.096098,-8.490254,-3.550688,-8.631023,-0.842349,-8.977946,6.917754,3.494386,-3.845626,-3.015592,-7.867964,-6.457279,-6.946991,-0.971915,-9.450865,-4.416802,5.031086,-0.091690,-4.705654,0.129009,5.441988,3.713988,-5.985566,6.708294,5.380216,7.894882,8.888398,-9.754334,-9.365159,3.517713,-1.023093,8.376496,-8.440271,-6.332858,3.093465,6.637632,1.729505,0.159752,-0.537715,0.817477,-5.691881,3.605497,-2.993286,5.410060,-1.112543,8.345100,-6.450345,4.755353,-4.025666,-1.568390,3.022554,-1.718089,-7.230118,-5.317336,-3.961724,-0.909859,-5.907312,-6.267216,-7.399954,3.410983,8.020005,2.381776,-8.920613,-0.377014,-3.433130,-8.708474,3.560915,9.937472,-9.358288,-4.882434,0.174045,5.353302,-4.074726,-2.427416,3.131928,7.964939,-3.086043,6.880508,9.760155,8.558584,-2.254274,-7.191638,-1.781138,4.558732,5.057135,3.489496,7.310231,7.203851,1.567196,-6.877656,8.774671,2.540144,-8.786856,-9.650430,-5.876750,-0.816607,5.298188,-7.392510,-9.962554,-8.768538,1.445013,-6.370464,-0.079470,-5.960101,1.113018,8.933479,9.672882,-5.492771,7.876115,2.107625,-8.372363,-2.459675,-5.531456,4.034755,-0.837032,7.557430,5.367797,-8.062489,5.138640,5.981839,2.591378,2.051821,4.096523,3.740450,4.086031,1.184312,-2.609386,5.309779,-2.464067,8.145524,4.412584,5.150828,-4.865239,-8.191505,-7.478239,-1.621287,-3.291872,-8.892819,1.945977,-3.239793,1.068717,-0.462193,0.090350,-5.165959,-6.278833,5.589884,-7.276898,-5.931290,-8.126254,-3.049068,6.965874,4.305282,1.159932,4.284565,6.226349,9.716360,6.395966,-7.426970,4.587778,8.097937,-5.697290,1.129663,3.644214,6.875320,8.058346,-1.565421,-9.316187,-4.695124,-5.164737,-3.139266,-4.534719,-4.304309,9.763304,-0.050717,7.798313,-4.712681,-2.615320,4.967882,8.697507,-4.570258,-3.196029,8.108758,-8.560337,-7.935941,-7.684523,-3.690982,-1.160036,-8.062539,5.247993,7.282229,-7.111760,-5.012355,5.854017,-0.392727,-2.098757,8.775425,-3.803102,2.563056,2.154617,7.505276,-6.222859,-7.273216,-5.512541,-0.433555,2.751257,-8.821639,3.335556,4.694272,-4.508347,4.513208,-9.827066,-1.822744,-9.134144,7.377162,0.392655,7.554478,-9.401220,6.609362,-7.174368,-2.877554,4.907717,-3.241872,5.908442,6.439700,2.239779,-4.904323,-2.032898,-9.671645,-6.854740,-5.330027,-5.294436,7.378309,4.806063,1.036228,-6.050401,1.917274,1.698295,-2.078825,6.999745,-1.403676,-5.189742,-8.024597,9.356374,9.984498,-5.772671,-6.134693,1.018587,6.352308,-2.655211,8.462898,-5.218446,-2.091157,-5.100845,-1.154248,-7.940365,-4.331282,3.745684,7.068698,-3.634287,-7.540799,-7.929382,8.003149,-8.657625,-8.194519,-8.899848,2.451329,4.968501,-4.214546,-9.677527,7.765432,5.675542,-3.490799,3.713055,-6.732478,-7.750937,-7.037110,4.582078,2.000085,9.939444], dtype = "float32")#candidate|6013|(975,)|const|float32
var_6014 = relay.var("var_6014", dtype = "float64", shape = (6,))#candidate|6014|(6,)|var|float64
call_6012 = relay.TupleGetItem(func_4948_call(relay.reshape(const_6013.astype('float32'), [15, 13, 5]), relay.reshape(var_6014.astype('float64'), [6,]), ), 2)
call_6015 = relay.TupleGetItem(func_4951_call(relay.reshape(const_6013.astype('float32'), [15, 13, 5]), relay.reshape(var_6014.astype('float64'), [6,]), ), 2)
func_2146_call = mod.get_global_var('func_2146')
func_2150_call = mutated_mod.get_global_var('func_2150')
var_6020 = relay.var("var_6020", dtype = "float32", shape = (11, 117))#candidate|6020|(11, 117)|var|float32
call_6019 = func_2146_call(relay.reshape(var_6020.astype('float32'), [9, 11, 13]), relay.reshape(var_6020.astype('float32'), [9, 11, 13]), )
call_6021 = func_2146_call(relay.reshape(var_6020.astype('float32'), [9, 11, 13]), relay.reshape(var_6020.astype('float32'), [9, 11, 13]), )
uop_6023 = relay.atan(var_6005.astype('float32')) # shape=(11, 16, 7)
output = relay.Tuple([bop_6006,call_6012,const_6013,var_6014,call_6019,var_6020,uop_6023,])
output2 = relay.Tuple([bop_6006,call_6015,const_6013,var_6014,call_6021,var_6020,uop_6023,])
func_6027 = relay.Function([var_6004,var_6005,var_6014,var_6020,], output)
mod['func_6027'] = func_6027
mod = relay.transform.InferType()(mod)
mutated_mod['func_6027'] = func_6027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_6027_call = mutated_mod.get_global_var('func_6027')
var_6029 = relay.var("var_6029", dtype = "float32", shape = ())#candidate|6029|()|var|float32
var_6030 = relay.var("var_6030", dtype = "float32", shape = (11, 16, 7))#candidate|6030|(11, 16, 7)|var|float32
var_6031 = relay.var("var_6031", dtype = "float64", shape = (6,))#candidate|6031|(6,)|var|float64
var_6032 = relay.var("var_6032", dtype = "float32", shape = (11, 117))#candidate|6032|(11, 117)|var|float32
call_6028 = func_6027_call(var_6029,var_6030,var_6031,var_6032,)
output = call_6028
func_6033 = relay.Function([var_6029,var_6030,var_6031,var_6032,], output)
mutated_mod['func_6033'] = func_6033
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6106 = relay.var("var_6106", dtype = "int8", shape = ())#candidate|6106|()|var|int8
var_6107 = relay.var("var_6107", dtype = "int8", shape = (2, 16, 7))#candidate|6107|(2, 16, 7)|var|int8
bop_6108 = relay.bitwise_xor(var_6106.astype('int8'), var_6107.astype('int8')) # shape=(2, 16, 7)
output = bop_6108
output2 = bop_6108
func_6118 = relay.Function([var_6106,var_6107,], output)
mod['func_6118'] = func_6118
mod = relay.transform.InferType()(mod)
var_6119 = relay.var("var_6119", dtype = "int8", shape = ())#candidate|6119|()|var|int8
var_6120 = relay.var("var_6120", dtype = "int8", shape = (2, 16, 7))#candidate|6120|(2, 16, 7)|var|int8
output = func_6118(var_6119,var_6120,)
func_6121 = relay.Function([var_6119,var_6120,], output)
mutated_mod['func_6121'] = func_6121
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6234 = relay.var("var_6234", dtype = "float32", shape = (3, 14, 12))#candidate|6234|(3, 14, 12)|var|float32
uop_6235 = relay.acosh(var_6234.astype('float32')) # shape=(3, 14, 12)
output = uop_6235
output2 = uop_6235
func_6244 = relay.Function([var_6234,], output)
mod['func_6244'] = func_6244
mod = relay.transform.InferType()(mod)
mutated_mod['func_6244'] = func_6244
mutated_mod = relay.transform.InferType()(mutated_mod)
var_6245 = relay.var("var_6245", dtype = "float32", shape = (3, 14, 12))#candidate|6245|(3, 14, 12)|var|float32
func_6244_call = mutated_mod.get_global_var('func_6244')
call_6246 = func_6244_call(var_6245)
output = call_6246
func_6247 = relay.Function([var_6245], output)
mutated_mod['func_6247'] = func_6247
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7035 = relay.var("var_7035", dtype = "float64", shape = (6, 10, 1))#candidate|7035|(6, 10, 1)|var|float64
uop_7036 = relay.log(var_7035.astype('float64')) # shape=(6, 10, 1)
uop_7038 = relay.cosh(var_7035.astype('float64')) # shape=(6, 10, 1)
bop_7047 = relay.divide(uop_7036.astype('float32'), relay.reshape(uop_7038.astype('float32'), relay.shape_of(uop_7036))) # shape=(6, 10, 1)
uop_7055 = relay.atan(var_7035.astype('float64')) # shape=(6, 10, 1)
var_7065 = relay.var("var_7065", dtype = "float64", shape = (6, 10, 6))#candidate|7065|(6, 10, 6)|var|float64
bop_7066 = relay.bitwise_or(uop_7055.astype('uint32'), var_7065.astype('uint32')) # shape=(6, 10, 6)
output = relay.Tuple([bop_7047,bop_7066,])
output2 = relay.Tuple([bop_7047,bop_7066,])
func_7070 = relay.Function([var_7035,var_7065,], output)
mod['func_7070'] = func_7070
mod = relay.transform.InferType()(mod)
mutated_mod['func_7070'] = func_7070
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7070_call = mutated_mod.get_global_var('func_7070')
var_7072 = relay.var("var_7072", dtype = "float64", shape = (6, 10, 1))#candidate|7072|(6, 10, 1)|var|float64
var_7073 = relay.var("var_7073", dtype = "float64", shape = (6, 10, 6))#candidate|7073|(6, 10, 6)|var|float64
call_7071 = func_7070_call(var_7072,var_7073,)
output = call_7071
func_7074 = relay.Function([var_7072,var_7073,], output)
mutated_mod['func_7074'] = func_7074
mutated_mod = relay.transform.InferType()(mutated_mod)
const_7132 = relay.const([[[6,-2,-10,-9,1,8,-4,-9,9,4],[-2,1,-5,6,-4,7,-8,3,6,-5],[-3,-2,6,-5,3,-5,10,-9,-9,-4],[-3,-3,3,-1,9,8,10,9,3,-1],[5,-3,3,1,-9,5,7,-5,5,9],[-1,-5,7,5,10,-8,3,2,-5,6],[-8,-8,-8,-5,-8,-6,-1,7,5,-2]],[[9,3,-3,-8,8,4,4,2,2,6],[4,-8,10,-7,-9,-1,-8,10,9,-2],[1,-6,-6,10,6,10,7,6,-3,-4],[9,3,-2,-1,-1,10,8,1,-4,6],[7,1,5,-1,10,3,3,-9,8,-5],[-4,5,1,-8,6,-5,1,7,3,6],[-5,5,4,-2,5,-3,4,-2,1,10]],[[-5,8,-2,4,3,1,9,-8,9,5],[-7,2,4,6,4,-1,-10,-7,-6,-10],[-10,-10,6,-2,-6,-8,3,4,-3,-1],[6,-8,-4,1,-5,-2,-1,-4,8,1],[-10,7,-10,-1,3,2,5,-8,-4,-1],[-9,1,-5,8,-10,-7,7,-4,-9,1],[-6,-1,-2,3,7,4,9,5,-2,-9]],[[-1,3,-2,-6,3,-3,2,-1,3,10],[-10,-6,-2,2,6,-8,-8,5,-9,3],[10,-10,-1,9,-5,-6,5,-3,-4,3],[-8,5,2,-8,-4,-3,-8,-9,2,-3],[-6,3,10,8,-2,-2,-2,6,10,6],[-4,8,-10,1,4,-10,-2,2,8,7],[-3,-10,-7,-10,10,-9,-3,-6,-6,6]],[[10,10,8,5,-4,-7,1,-3,-4,5],[8,-8,-3,-5,-1,8,-6,5,-2,1],[-3,2,-4,4,7,1,5,8,6,-8],[-4,-8,7,-4,4,-7,-2,10,-4,-5],[4,-8,-7,-9,-2,10,5,6,-3,-5],[6,3,8,7,8,5,-9,-2,-3,-9],[-8,-3,-9,9,9,-1,5,-4,-9,-7]],[[2,8,-6,8,-1,-6,-8,-6,-6,-10],[-10,-4,5,5,1,-9,-5,4,9,-3],[-1,-1,-6,7,-3,-10,6,-5,-2,-2],[-4,5,10,-3,5,1,-4,6,-1,-3],[8,5,-7,-4,3,-3,-7,-8,-10,-7],[-6,-3,-3,2,2,6,9,5,-6,-5],[4,-7,6,9,-8,-3,7,9,-6,3]],[[4,-1,5,-1,4,-9,5,1,-5,9],[9,10,-9,7,9,7,-9,8,-2,-4],[-6,7,1,3,10,-1,-6,-6,-1,-4],[3,4,8,8,3,-8,-7,10,-5,-5],[-5,-6,7,-9,7,9,-3,-5,-6,-2],[-5,8,7,9,1,7,-8,10,-6,-4],[-10,-6,7,-5,2,-4,8,-8,-9,7]],[[1,-9,-10,6,8,1,-4,-3,8,-4],[5,-9,9,10,-6,-2,-4,8,8,9],[6,3,7,-3,-6,-5,-4,-8,2,4],[6,7,-7,-1,8,2,-10,-4,-3,-1],[-3,-3,-3,-3,-8,4,-3,3,3,4],[4,5,-2,-2,-5,5,-1,6,-9,10],[-6,-1,-5,-8,10,2,-9,-9,-6,-6]],[[-6,-9,-9,-3,-2,6,-7,-6,3,1],[-5,9,-9,-4,1,-4,-1,6,-7,-10],[1,-6,5,9,7,1,-2,-5,9,6],[1,7,-4,-6,1,10,2,-8,-10,-4],[8,9,6,-3,-7,-4,-10,2,3,2],[4,4,10,10,3,-8,-9,-3,3,1],[6,8,-6,7,-8,3,-1,-7,-3,2]],[[3,6,-7,9,4,9,5,5,10,3],[1,10,-5,4,6,-1,-7,2,-6,3],[-3,2,-10,9,7,9,-8,-1,-8,10],[-4,-4,9,-3,9,7,-8,7,-3,9],[-10,9,9,-2,8,2,4,1,2,-8],[-1,10,-3,-9,-5,6,1,5,9,7],[-9,9,3,-7,-5,-5,-2,-8,-1,-1]],[[9,6,-5,8,-6,1,-5,9,10,4],[-10,4,1,-7,8,3,-5,7,-7,4],[-1,-1,5,6,-3,-3,-7,-7,8,5],[1,-5,-6,-8,7,-10,-9,7,-8,-1],[1,-6,-2,9,8,-6,-3,-7,3,-3],[9,9,4,-4,-8,5,-9,-10,-5,-1],[-4,-2,-9,-5,6,1,3,3,-7,-10]]], dtype = "uint8")#candidate|7132|(11, 7, 10)|const|uint8
var_7133 = relay.var("var_7133", dtype = "uint8", shape = (11, 7, 10))#candidate|7133|(11, 7, 10)|var|uint8
bop_7134 = relay.less_equal(const_7132.astype('bool'), relay.reshape(var_7133.astype('bool'), relay.shape_of(const_7132))) # shape=(11, 7, 10)
output = bop_7134
output2 = bop_7134
func_7153 = relay.Function([var_7133,], output)
mod['func_7153'] = func_7153
mod = relay.transform.InferType()(mod)
var_7154 = relay.var("var_7154", dtype = "uint8", shape = (11, 7, 10))#candidate|7154|(11, 7, 10)|var|uint8
output = func_7153(var_7154)
func_7155 = relay.Function([var_7154], output)
mutated_mod['func_7155'] = func_7155
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7221 = relay.var("var_7221", dtype = "float32", shape = (13, 4, 1))#candidate|7221|(13, 4, 1)|var|float32
uop_7222 = relay.atan(var_7221.astype('float32')) # shape=(13, 4, 1)
func_1354_call = mod.get_global_var('func_1354')
func_1356_call = mutated_mod.get_global_var('func_1356')
var_7225 = relay.var("var_7225", dtype = "float64", shape = (15, 105))#candidate|7225|(15, 105)|var|float64
call_7224 = func_1354_call(relay.reshape(var_7225.astype('float64'), [15, 15, 7]))
call_7226 = func_1354_call(relay.reshape(var_7225.astype('float64'), [15, 15, 7]))
func_727_call = mod.get_global_var('func_727')
func_731_call = mutated_mod.get_global_var('func_731')
var_7229 = relay.var("var_7229", dtype = "uint32", shape = (1872, 1))#candidate|7229|(1872, 1)|var|uint32
var_7230 = relay.var("var_7230", dtype = "uint16", shape = ())#candidate|7230|()|var|uint16
const_7231 = relay.const([6,-8,-7,2,2,-1,-4,-9,-10,10,-4,-5,-7,-3,5,-8,7,-2,6,2,-5,10,-6,2,1,7,10,-6,-10,7,-6,8,2,10,5,-7,-4,10,7,-5,-5,-4,8,-1,8,4,4,7,-6,-3,8,-1,-6,-2,4,-1,-4,5,6,8,7,-8,-8,8,-4,4,10,6,-8,-9,8,3,-7,-1,6,7,-5,-6,-1,-6,-5,9,-6,1,5,-6,2,-2,8,1,7,9,2,5,-10,-8,-1,-10,4,-1,-5,-2,4,5,-9,8,-4,-8,-4,8,5,-9,-7,-3,2,9,-9,-4,5,5,-8,10,1,8,2,-7,6,-1,-7,-1,8,-6,-1,10,-2,9,-9,3,6,3,-9,-3,8,-5,10,-2,8,-5,-8,6,-1,1,-4,8,-8,-8,-1,10,-8,-4,3,-7,6,1,-9,6,-1,-10,3,-5,-8,8,5,-9,-4,-1,1,-9,2,-2,6,2,7,2,-7,1,-9,5,6,7,10,-9,8,7,8,2,9,3,4,-8,-2,8,-9,-5,10,-6,-10,1,-3,-7,-10,-6,2,5,-7,-9,-5,10,2,10,7,-2,1,4,-2,4,1,8,-3,1,9,9,-9,-7,-6,2,-1,2,-8,5,-9,-9,-10,4,-4,-3,7,5,3,-6,9,4,-4,1,3,9,4,4,7,-7,-5,1,2,-7,-2,-6,2,-10,-6,-10,6,3,-9,3,-7,4,1,-3,5,-10,2,7,-3,2,-5,-8,-2,-10,10,-5,-6,-6,-8,9,-8,2,4,3,4,7,-8,2,-8,10,-6,2,8,8,-10,9,6,7,1,-7,7,-6,-3,-4,-9,-8,1,-8,1,-5,4,6,-7,2,-4,5,-5,6,-7,8,7,4,7,7,9,6,7,-3,-6,4,-4,-9,8,-8,6,-3,-3,2,-9,7,-2,1,-8,6,1,-3,-9,-7,-10,3,2,-10,3,6,-1,-1,-9,-4,1,10,10,-7,8,7,1,-1,-6,-10,2,-4,-1,6,1,7,-10,2,-2,8,-4,-5,6,8,8,-2,3,3,-3,6,-9,-6,3,8,8,5,-2,9,-8,-10,6,-9,10,-7,-3,8,7,2,1,-7,-7,-3,3,-6,2,7,2,8,-10,-8,7,4,8,-6,-5,10,-3,10,6,7,6,7,-4,1,-8,-4,4,1,-1,3,-9,-7,-7,-10,-6,2,-5,-1,3,-10,2,-8,-1,10,-5,9,7,10,-4,8,9,2,-8,4,5,-2,7,3,8,-1,6,1,-3,-7,1,-7,-7,8,-1,7,-4,5,1,-1,-9,4,-10,1,3,-2,-5,-9,-9,-10,-7,10,-9,7,1,9,-10,-9,5,6,10,-6,-9,9,-2,-2,-7,-4,-5,6,-9,-8,-5,9,-7,-10,5,1,-1,-3,1,-3,8,-7,-8,-9,-8,-6,-3,5,-10,-6,10,-8,-2,-5,-8,5,6,9,5,-1,-6,-7,3,-9,-6,-7,-6,1,-8,3,5,-2,-8,-6,-8,7,5,-2,-6,1,-8,10,5,-2,-10,-9,-10,7,-1,-4,-2,-10,5,-7,-3,-2,-7,6,8,5,2,-2,-4,-4,-1,-3,-9,2,-6,-4,-5,1,1,-6,-7,6,6,4,4,-6,-6,8,3,-7,6,10,-8,-7,-10,9,-3,-7,-2,8,8,-10,2,-8,-9,6,8,9,6,-6,-9,4,-1,-1,-1,-6,-5,-3,-6,4,8,1,3,-2,7,7,-5,8,-1,7,-9,3,1,1,-9,-5,4,-2,7,7,-2,-8,7], dtype = "uint16")#candidate|7231|(675,)|const|uint16
call_7228 = relay.TupleGetItem(func_727_call(relay.reshape(var_7229.astype('uint32'), [16, 9, 13]), relay.reshape(var_7230.astype('uint16'), []), relay.reshape(const_7231.astype('uint16'), [675,]), ), 3)
call_7232 = relay.TupleGetItem(func_731_call(relay.reshape(var_7229.astype('uint32'), [16, 9, 13]), relay.reshape(var_7230.astype('uint16'), []), relay.reshape(const_7231.astype('uint16'), [675,]), ), 3)
func_1801_call = mod.get_global_var('func_1801')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_7242 = relay.var("var_7242", dtype = "float32", shape = (18,))#candidate|7242|(18,)|var|float32
call_7241 = func_1801_call(relay.reshape(var_7242.astype('float32'), [1, 9, 2]))
call_7243 = func_1801_call(relay.reshape(var_7242.astype('float32'), [1, 9, 2]))
func_4948_call = mod.get_global_var('func_4948')
func_4951_call = mutated_mod.get_global_var('func_4951')
const_7246 = relay.const([[-9.706144,9.219344,1.590389,8.297535,-5.533420,5.654294,2.987609,-3.167547,0.007671,2.357758,5.092601,-2.611292,-9.411502,3.896135,9.558871,-8.630529,1.295399,-7.994197,-7.048879,2.274093,-9.996777,8.037531,-1.293224,-1.178221,-9.783015,-5.828596,-9.183811,8.603978,8.103154,3.972791,7.814081,-9.704566,-7.395940,9.212053,3.199451,8.249869,-6.487532,5.152217,-0.950882,-0.886617,4.096857,-7.087329,1.951387,2.248370,-9.974405,0.965704,-5.176512,3.569043,-0.298534,9.925329,9.807182,5.759262,8.527193,-0.261989,-8.316946,4.620852,1.909630,2.536628,2.035893,3.161070,-9.523969,7.617512,7.736670,7.027556,-4.261635,4.447032,5.290929,6.112003,6.533334,-3.105216,-6.515580,-1.691840,4.914851,-8.695902,-0.922204,-7.119361,-0.059913,7.237338,-7.570366,8.996813,8.291238,-6.642024,8.032034,-9.590382,2.032627,-7.321212,-2.614409,-5.571307,6.962386,-7.261877,-4.643069,-1.151791,2.984181,-1.430382,-0.432593,-9.911775,-8.365584,-7.619306,-9.131916,6.899948,7.505118,1.288151,-1.024285,7.120383,-0.943359,7.543495,-6.552138,6.308086,9.702279,-4.582850,6.143133,8.546666,0.407665,7.093992,-8.524425,-8.665391,-6.421656,3.565897,2.137091,-1.678646,7.244213,-6.825336,3.948660,3.641653,-7.383212,-1.257919,-1.568164,8.874897,5.542273,3.582559,6.800602,9.386265,9.154572,-7.324546,9.029067,-7.230840,-1.760752,9.119821,-4.231990,-0.325931,-6.431984,-1.432042,7.408983,-1.417836,-9.707365,-4.859296,6.133076,0.793168,4.440570,3.123829,9.336290,2.160223,3.254983,1.794155,0.603714,-3.721211,7.868181,-7.329522,-5.851959,2.004146,-5.845516,7.235298,-9.721132,-0.141331,-5.687316,-3.686452,8.288998,-4.309037,-3.286609,-8.404896,6.032296,2.969330,8.990087,1.845540,7.689742,-0.810765,9.274465,7.923160,-5.625744,3.258479,-2.193034,-1.866759,6.789090,-1.074897,4.285741,3.627571,4.533119,2.158775,-4.993508,-5.549667,7.132102,0.620733,-7.812344,-7.297892,-2.561085],[-0.028904,-8.126484,-5.437693,6.952719,3.574386,4.395479,0.409805,-2.810710,5.835820,-6.174678,-4.245562,-0.401919,-0.658868,-8.372141,5.897868,-3.823510,1.044909,7.270883,-9.779109,-9.662975,1.389542,-6.643823,-6.079036,2.870045,5.895087,-9.573940,1.452768,1.757096,5.781272,0.771663,-8.935714,-2.691641,-4.616612,7.666288,-3.904132,-9.237386,2.246153,8.764142,4.254457,2.275727,-9.088882,-5.744400,-0.636062,2.247207,-8.407124,-0.532120,-3.551136,-1.039713,-8.403224,4.330904,-7.756939,-5.151331,-5.763973,9.919402,-5.970811,-7.416517,-7.762419,4.110562,-9.998580,3.675372,1.946020,6.907328,-9.943233,-8.139727,9.866326,-7.057801,0.268013,5.493325,-4.453413,-1.105983,5.085157,6.429729,5.317367,-6.210428,2.382175,-4.921677,6.500112,-8.928290,-0.572515,9.960238,-2.425167,2.922090,-8.941525,8.345722,8.362128,-8.465687,-2.459033,2.967662,-8.481220,5.820258,3.835463,-3.284216,7.480234,-7.737396,6.611545,3.162822,6.028237,9.895965,0.740707,-6.850308,-6.354731,9.262548,-8.966326,0.644327,-4.475373,-8.813561,-0.190195,-7.597429,9.606558,2.352278,-7.780156,-7.675823,4.208940,-4.199431,-0.095125,-5.355131,1.782581,0.180382,-8.850257,-2.046145,9.289831,-9.127085,3.982346,0.290851,6.514977,1.581511,4.060955,-4.934332,2.583884,4.090144,4.122762,8.569381,3.711318,3.391645,7.781327,-9.783728,-9.804985,-3.173075,-2.242392,4.604805,2.277107,4.592186,-5.810293,6.122043,-8.010562,-4.286329,-1.933949,-4.098181,-7.581285,2.326048,2.820326,7.753991,-4.616784,6.919380,0.896809,8.029058,6.620397,-7.535876,-7.586014,-1.688835,-7.724785,-9.180588,-1.422451,3.821291,-4.473495,-4.124893,-8.854438,-8.808343,0.146877,2.730568,-3.831262,1.376504,-2.685752,2.763343,-3.748062,4.877449,-6.753646,2.387491,9.118458,-8.457615,-2.914267,2.380412,-9.460757,0.636612,-8.595722,-9.181849,0.457656,-6.251152,7.218355,-1.137259,1.861693,3.680451,-8.407008,-1.147500,8.122597],[0.116901,7.301665,-4.609581,-1.699502,-6.305285,7.440858,4.791050,-9.753625,-1.833068,-3.154366,7.658127,-2.750408,3.027057,-3.714316,-8.258428,-7.879173,0.550328,0.616715,2.132206,7.002318,-6.749267,3.719671,-1.484884,4.877864,7.189037,4.880365,-6.097177,8.046476,-3.277298,2.039823,9.147391,7.386780,-9.999419,8.018392,-5.450558,5.685359,9.251540,5.333589,-3.393592,-5.976782,-1.491807,8.250608,4.982515,-2.275627,-2.723397,4.728145,-6.932407,-4.709822,0.840470,-8.771739,-0.941663,-9.477137,-8.263928,4.766347,-0.892812,3.006671,-4.208500,1.568062,8.849680,6.500984,-4.602722,-8.395710,0.649444,7.814453,-1.470983,2.519727,9.590871,-2.137215,0.235814,-3.739995,9.623966,-9.259948,-7.368019,2.643446,5.904090,3.756421,0.067639,-7.700144,-1.920532,0.917741,-4.623364,-0.783077,-3.400203,5.434434,-3.462864,-7.461479,0.108701,4.414625,-8.993263,-2.499519,-8.061392,1.204518,4.774956,-0.613655,0.099318,-7.998127,-3.353151,1.709367,2.827160,-4.467563,8.623176,9.682941,1.385423,-2.279468,4.774182,-8.289261,8.697173,-4.877550,6.189483,-3.801642,-8.786644,-0.344373,9.712076,-7.415044,3.087838,5.318858,9.134226,8.127838,6.826108,-7.666894,-5.074511,-9.198196,9.642289,-2.028512,-1.487009,1.968179,8.911188,9.132428,-9.171042,5.498242,0.432854,-6.211201,9.464546,1.620465,7.792721,-2.289459,-9.635401,5.482521,9.786139,4.714245,7.017232,-6.519332,-8.809483,5.050426,8.621632,-7.725460,3.449889,5.992836,4.321170,-3.674581,0.528679,-2.150981,8.053752,2.626489,-9.801319,-4.847838,7.008704,-7.517358,8.463712,-6.433136,0.733814,4.721994,4.380474,7.830425,4.935047,-0.252520,-5.358253,3.644874,-6.737205,-3.094137,7.864620,-7.650725,-3.063475,-4.700705,6.029438,-4.672303,-6.180659,1.820131,7.817741,-3.998182,-7.701699,2.017978,9.533737,7.531833,1.584035,-3.608058,-8.907295,8.235708,-7.955592,-9.685724,9.764587,-0.456889,-7.221134,4.201629,-2.769835],[6.002964,-7.255891,-6.317960,2.677063,-4.962925,5.852870,7.770820,5.284700,-3.273830,-5.180887,2.839725,-2.563659,8.438007,-2.066569,-1.271979,-5.416742,5.581144,-2.006904,1.256996,9.823361,-1.709043,-6.760498,4.077938,-1.855837,9.100968,-8.108377,-8.862332,-1.328950,-9.287298,4.080593,-0.072478,-7.234232,-4.811472,1.882968,-5.771236,3.883043,0.141116,-0.362035,-1.231970,1.870339,1.345548,-0.107379,-4.034588,-6.234659,0.184039,8.390662,1.340717,-3.207487,-0.580898,4.575271,-0.325836,3.482054,7.310223,-1.613944,-6.787014,2.400864,-8.298314,-5.585207,7.758978,2.010514,-7.224164,-4.315547,-0.744807,8.102294,-9.351418,9.018003,-1.172742,-9.604887,-7.571779,0.725282,-4.303801,-0.621691,-4.495021,4.352615,3.037366,6.717803,5.060807,-6.483742,-4.551830,-7.725059,-6.833078,3.985416,-8.860582,-5.803698,5.174935,-3.512568,8.531631,-7.603245,6.752120,3.009086,-8.044255,-4.177195,-6.353312,1.909964,-2.661930,7.057506,1.836239,4.775874,-0.429411,-8.481712,6.730360,-2.938710,4.479175,4.593894,-3.291790,-5.093264,2.227967,9.564658,6.217553,-5.351464,-6.209388,-5.381973,-9.839895,-2.687502,-2.283078,-7.942218,2.682415,-4.642076,1.634208,6.145415,-2.031188,-3.863894,-5.134845,1.367284,-0.235231,1.081722,3.222828,-0.423560,-5.870747,-0.020801,4.451404,-4.400498,3.446346,-5.082707,-1.254932,5.209286,1.484901,-9.826074,1.025801,0.307617,9.022643,-8.555210,-0.391610,6.999045,6.776639,6.548186,-4.206877,1.904952,-0.268030,4.051223,7.097687,1.837586,-9.345626,-6.486148,9.475868,-1.912551,5.170542,3.274066,4.555821,-5.921668,8.054156,-9.655476,0.152109,5.439697,6.995783,0.419379,6.949968,7.310611,-7.676912,8.730493,5.743874,2.354833,6.845041,-1.351280,4.830184,3.965371,6.633712,-3.833833,-6.996520,-6.040413,-4.234204,-2.257215,1.355384,-1.032295,-9.396867,6.862214,6.647526,-9.737451,-9.840410,7.656890,6.504616,-8.356478,-0.962028,0.695502,-0.424078],[-9.162083,1.850982,3.420722,-6.796808,4.738229,8.529853,-2.045967,2.021399,3.948284,-1.467389,4.666087,-8.760679,-8.190159,-7.183529,4.155570,7.490919,-3.639534,-0.765717,1.744986,9.467753,8.148537,-1.578046,8.993076,-1.973676,9.122925,8.185895,-6.351007,-9.367977,0.431895,9.569741,7.847510,-8.750649,4.190321,6.509785,-1.100790,6.850626,-8.756251,9.274058,7.509479,-0.087724,-5.515451,4.506560,8.204296,7.150567,2.732674,5.770232,-5.066522,-9.250391,4.788422,-2.472573,-3.264437,6.428508,8.165765,-6.022349,9.306428,7.916034,-2.368896,-3.765507,-2.045523,-1.173396,-5.763781,5.387221,-4.629750,4.026453,7.380288,9.125752,5.871553,-3.431016,1.064874,-9.094071,-2.745309,7.398479,-9.840471,-0.296265,9.609720,-4.630725,9.209732,-9.707089,0.334519,5.249894,-2.838268,-0.060836,2.968152,-0.210598,5.360054,0.364221,0.928630,6.910208,2.796565,-1.735919,-5.011319,-5.423618,-3.718339,8.860108,-1.609388,4.603174,5.692204,6.877975,-4.930721,-5.270410,-5.317625,3.633826,-0.973351,0.672562,7.418722,-8.573684,7.582139,3.658265,-2.963871,0.330965,3.454547,8.274003,7.064665,1.946965,-8.839313,7.302541,-8.559657,-9.474432,0.863125,-3.706531,-3.247637,1.656242,2.002714,8.505881,7.979505,3.637115,7.866749,-7.503657,7.436398,8.492014,6.055926,-1.985360,1.057485,-3.061739,-8.783368,0.290292,2.551208,-0.083300,2.378126,-9.632748,2.019417,8.257879,-8.715996,8.376903,-0.116363,-0.126488,2.188894,7.336249,4.433670,-3.564905,-8.736688,-1.238041,-7.855473,-7.865840,4.519347,-8.592257,-2.916575,4.525379,9.789239,-8.572275,6.184985,3.096524,4.088894,-6.079699,-8.122164,6.555076,-4.617526,3.368666,-9.952096,2.176125,-9.675585,-7.917351,5.973358,-1.502196,-6.229887,-0.829561,9.050298,0.786612,-1.590283,3.512267,-6.075859,7.974047,5.307359,3.862671,3.636129,9.004646,-7.725115,-0.759147,1.325913,5.359714,-9.186408,-8.435652,7.053321,-0.117320,3.107687]], dtype = "float32")#candidate|7246|(5, 195)|const|float32
const_7247 = relay.const([[5.128502,-3.545053,-5.120385,-1.815373,0.912356,4.637330]], dtype = "float64")#candidate|7247|(1, 6)|const|float64
call_7245 = relay.TupleGetItem(func_4948_call(relay.reshape(const_7246.astype('float32'), [15, 13, 5]), relay.reshape(const_7247.astype('float64'), [6,]), ), 3)
call_7248 = relay.TupleGetItem(func_4951_call(relay.reshape(const_7246.astype('float32'), [15, 13, 5]), relay.reshape(const_7247.astype('float64'), [6,]), ), 3)
output = relay.Tuple([uop_7222,call_7224,var_7225,call_7228,var_7229,var_7230,const_7231,call_7241,var_7242,call_7245,const_7246,const_7247,])
output2 = relay.Tuple([uop_7222,call_7226,var_7225,call_7232,var_7229,var_7230,const_7231,call_7243,var_7242,call_7248,const_7246,const_7247,])
func_7255 = relay.Function([var_7221,var_7225,var_7229,var_7230,var_7242,], output)
mod['func_7255'] = func_7255
mod = relay.transform.InferType()(mod)
mutated_mod['func_7255'] = func_7255
mutated_mod = relay.transform.InferType()(mutated_mod)
func_7255_call = mutated_mod.get_global_var('func_7255')
var_7257 = relay.var("var_7257", dtype = "float32", shape = (13, 4, 1))#candidate|7257|(13, 4, 1)|var|float32
var_7258 = relay.var("var_7258", dtype = "float64", shape = (15, 105))#candidate|7258|(15, 105)|var|float64
var_7259 = relay.var("var_7259", dtype = "uint32", shape = (1872, 1))#candidate|7259|(1872, 1)|var|uint32
var_7260 = relay.var("var_7260", dtype = "uint16", shape = ())#candidate|7260|()|var|uint16
var_7261 = relay.var("var_7261", dtype = "float32", shape = (18,))#candidate|7261|(18,)|var|float32
call_7256 = func_7255_call(var_7257,var_7258,var_7259,var_7260,var_7261,)
output = call_7256
func_7262 = relay.Function([var_7257,var_7258,var_7259,var_7260,var_7261,], output)
mutated_mod['func_7262'] = func_7262
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7535 = relay.var("var_7535", dtype = "float64", shape = (16, 9, 15))#candidate|7535|(16, 9, 15)|var|float64
var_7536 = relay.var("var_7536", dtype = "float64", shape = (16, 9, 15))#candidate|7536|(16, 9, 15)|var|float64
bop_7537 = relay.floor_mod(var_7535.astype('float64'), relay.reshape(var_7536.astype('float64'), relay.shape_of(var_7535))) # shape=(16, 9, 15)
uop_7543 = relay.sin(var_7536.astype('float64')) # shape=(16, 9, 15)
output = relay.Tuple([bop_7537,uop_7543,])
output2 = relay.Tuple([bop_7537,uop_7543,])
func_7547 = relay.Function([var_7535,var_7536,], output)
mod['func_7547'] = func_7547
mod = relay.transform.InferType()(mod)
var_7548 = relay.var("var_7548", dtype = "float64", shape = (16, 9, 15))#candidate|7548|(16, 9, 15)|var|float64
var_7549 = relay.var("var_7549", dtype = "float64", shape = (16, 9, 15))#candidate|7549|(16, 9, 15)|var|float64
output = func_7547(var_7548,var_7549,)
func_7550 = relay.Function([var_7548,var_7549,], output)
mutated_mod['func_7550'] = func_7550
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7575 = relay.var("var_7575", dtype = "float32", shape = (13, 6, 3))#candidate|7575|(13, 6, 3)|var|float32
uop_7576 = relay.exp(var_7575.astype('float32')) # shape=(13, 6, 3)
output = relay.Tuple([uop_7576,])
output2 = relay.Tuple([uop_7576,])
func_7581 = relay.Function([var_7575,], output)
mod['func_7581'] = func_7581
mod = relay.transform.InferType()(mod)
var_7582 = relay.var("var_7582", dtype = "float32", shape = (13, 6, 3))#candidate|7582|(13, 6, 3)|var|float32
output = func_7581(var_7582)
func_7583 = relay.Function([var_7582], output)
mutated_mod['func_7583'] = func_7583
mutated_mod = relay.transform.InferType()(mutated_mod)
var_7750 = relay.var("var_7750", dtype = "float64", shape = (5, 2, 15))#candidate|7750|(5, 2, 15)|var|float64
uop_7751 = relay.asinh(var_7750.astype('float64')) # shape=(5, 2, 15)
func_4295_call = mod.get_global_var('func_4295')
func_4298_call = mutated_mod.get_global_var('func_4298')
const_7758 = relay.const([-1.548886,4.865226,-5.846547,-5.661365,1.872970,-0.062042,2.288986,-9.063527,4.042903,-6.893472,1.174430,5.908461,-1.080455,-7.987252,-3.974490,-9.097972,8.734847,8.501287,-5.150456,-6.235028,-4.550213,-3.168562,-9.280255,-3.941929,-7.731068,4.533650,-3.945562,-7.595484,8.598512,-2.591298,-2.969894,-2.345288,3.908086,7.358042,-5.037338,1.060316,-6.179282,-6.043437,-5.943497,6.329057,0.366497,-9.948049,1.062241,7.209057,5.778715,-5.303879,-5.586280,2.597595,8.841005,9.795633,-4.092384,-9.491248,6.931957,5.014727,2.529265,-8.763171,9.091059,-7.469070,-2.167174,3.909262,-6.096463,4.789368,5.710007,-3.434578,-3.053888,-9.146910,-9.483056,6.771145,9.628746,8.458981,9.966572,-2.751539,-7.460094,-3.212647,-3.353852,-6.569285,6.202310,1.890994,-1.574469,3.141381,-5.786809,1.599508,6.305375,-4.555620,2.712583,3.046493,5.466801,8.933850,5.780268,-7.306207,-6.062129,-8.831528,5.199595,-6.064528,4.241319,-4.219825,5.401078,-3.206839,-6.966893,3.079474,-4.785427,0.369057,-6.741838,2.665191,-5.279557,0.816139,-6.547099,-5.140007,-8.399212,8.019738,7.152419,4.886212,7.569897,0.732119,-9.307675,0.447804,4.875126,-4.835890,6.136710,7.272522,-3.049944,-2.466814,-9.296561,-6.566117,2.729306,-2.514185,3.707118,5.191608,6.935791,-9.988955,-0.205145,-1.268858,-4.937307,2.895149,-3.133265,7.878407,-5.490928,1.654191,3.046716,7.916250,1.437445,0.420578,4.918923,2.039750,5.981830,-5.424337,9.899360,5.610271,7.712134,-5.803140,-8.412185,-0.130573,1.817406,2.889315,9.607005,-2.172420,3.812187,2.483607,-5.896040,2.823346,7.232438,6.059497,2.480003,-5.697863,-4.921045,-8.413800,1.273345,1.993818,8.537945,6.881049,0.326007,4.928305,4.080104,7.760040,-7.921458,5.734785,-9.935635,-8.588273,9.757289,-9.012889,3.661354,-2.226069,-1.915256,-9.224967,3.812118,-7.971406,4.020317,6.687399,7.768943,-0.843886,4.308296,6.113813,2.679695,6.732432,-8.745295,-2.200028,2.460926,-1.205239,-6.769477,5.253804,-2.088583,-5.370992,3.079467,-7.172163,-6.969415,-1.645761,-5.099980,3.087006,-3.254859,4.020761,-9.678098,-6.714997,-8.191681,1.904624,0.939150,-2.680714,1.863140,9.485041,-7.353630,4.215981,6.757463,9.283014,7.690236,5.137232,7.967212,-7.979300,-3.103270,9.255897,-4.481951,1.853601,1.635413,3.178189,-7.444373,-7.171204,5.026326,9.577500,9.442505,-2.185986,3.900674,-4.699235,-8.017537,-2.656952,-4.400519,-9.952210,7.380895,-8.883226,0.786969,8.502656,7.758213,7.843616,9.178037,9.763919,7.439593,0.340416,9.077007,0.210865,-4.414072,-2.836074,-3.227812,6.476692,-2.510577,-3.820251,-9.723374,8.835609,9.345819,-2.808364,4.448494,-6.192970,3.987646,8.157663,1.448812,6.673694,-2.783208,-7.477610,-9.622027,-3.101160,-8.855653,-4.555640,-3.540360,-4.594525,-1.102159,-1.902817,-4.828505,-2.515901,-1.885087,-4.457712,0.913998,-9.206817,3.098819,-2.213785,-8.832311,-2.810332,7.922429,8.732228,-6.135296,-7.994817,-2.203495,-1.578048,9.696793,0.692703,-6.272717,9.788953,1.606212,0.792162,8.023339,-0.198578,6.015718,-3.423126,8.216192,-7.896843,7.844883,6.936913,-3.668445,-8.208163,-3.882685,8.108320,5.848161,-3.547834,-4.487686,1.912948,9.934139,-7.063899,-1.648605,-5.217113,-7.880022,8.244092,6.936477,-4.304713,-1.510809,7.314369,-2.714080,2.251452,4.843646,-7.705088,4.893679,9.899821,6.171102,9.372751,-7.012525,9.079748,1.282764,-3.280451,8.801527,-1.014591,2.043338,3.331520,-1.796005,0.698435,-4.765697,-9.260634,1.541247,2.096793,3.380299,-5.789169,-8.109058,-4.713308,-1.796902,-4.219743,0.936284,6.537460,-7.027887,-1.595733,2.238739,-3.758293,5.953961,-1.587685,4.234954,1.864798,-2.372963,-0.440172,-0.198968,-0.557819,-9.697970,-3.461218,6.018050,-4.228558,-2.887426,9.360919,0.857770,-8.617260,-0.015925,9.799760,-3.903020,-6.911330,0.192130,5.949438,9.549572,-7.709702,-7.867618,-2.310495,3.115171,8.678733,7.194343,5.257811,-7.755472,-6.496015,-7.841595,-0.582217,-1.168226,-9.617114,-0.491534,2.376549,0.643583,3.451694,0.669724,-3.809396,-9.956147,-1.796747,-0.479894,-8.893740,7.761928,2.984790,6.660797,-1.600962,-0.810752,8.272921,-5.054096,-4.955368,-1.508727,9.472342,8.959118,-3.280923,0.633717,-2.004883,3.369686,2.284731,5.518988,-8.122316,-6.216341,-6.925407,1.589263,2.436799,0.720317,-1.368835,9.046064,2.546343,3.576116,9.084493,-8.727500,-3.047233,-0.964406,9.227720,-0.589620,-5.605489,-2.293249,3.405585,-7.073269,-9.540447,-0.113704,-7.122139,-1.335256,8.837995,8.065287,6.181640,-1.621917,3.818217,8.553863,-7.339695,0.215939,-0.880923,7.413068,8.786322,5.733456,9.684557,-9.299992,9.489408,8.431074,-5.876252,6.708543,3.352703,1.137519,3.480275,3.234605,-2.391529,-0.266782,-9.930511,-5.770858,-3.941707,5.721813,-6.351864,1.420524,9.480089,-8.830076,1.725671,8.869785,2.231532,-3.791708,4.758747,-4.436203,-6.665534,-4.490087,-2.757316,-1.367315,-8.045327,5.040459,-3.146788,5.915617,2.631127,7.445808,9.521429,0.489299,-1.794407,3.234200,6.477735,8.932677,3.820504,7.926873,4.600381,-4.898851,1.222341,-9.661607,-0.069535,9.965081,2.710287,-9.399624,1.952519,9.014654,4.349833,0.878352,-6.715344,-1.106086,2.631559,4.522422,-9.230197,-4.103515,2.377648,8.808870,-9.414111,-5.077650,1.926736,5.412892,-8.760366,-5.183755,2.329168,0.300161,8.510296,0.371959,3.260120,3.889162,-7.787824,7.948547,-3.294536,8.010437,-0.772290,-4.037464,9.511508,-1.913630,-3.328252,3.372370,4.792479,8.243099,0.332553,0.449194,2.142312,-7.947187,-3.362278,-9.671572,-0.025597,-7.055235,4.327745,-7.530838,-1.370673,-3.097903,-4.115050,-3.574761,-4.879207,-0.280347,9.972216,-4.092707,-7.032164,-5.564476,3.823023,7.189481,5.974550,-1.308709,-9.468887,2.026088,2.283456,8.348941,5.337260,7.024062,3.629551,9.133858,0.024402,0.481613,-4.302702,1.543453,-7.613246,9.275023,-1.475455,-3.972791,6.327153,9.777387,-3.275108,-3.427858,-6.674396,2.135887,2.342736,-1.795024,5.063559,-2.295352,-0.815213,6.689970,-7.569746,-5.632980,-7.649223,2.013774,-5.210400,-5.843015,9.471458,-2.662119,8.040527,1.726207,4.961804,1.262880,3.075974,-3.052296,1.261389,0.063488,7.214328,-6.394006,-5.908601,6.122398,-6.816939,1.162040,-5.461515,-7.158058,-2.224495,-9.444991,5.646937,-9.121670,7.311335,-9.566766,-0.442707,-0.788397,8.205451,0.725719,-8.564104,-4.574230,-4.310319,-9.893076,-9.102404,-0.157495,-7.866828,-3.766318,4.581947,-1.779061,9.143554,0.671217,-7.071481,8.959890,4.207993,-8.177313,6.696872,-0.812931,-9.886338,-5.162745,0.358835,1.772556,4.665349,-3.064470,-6.556210,3.836550,6.940944,6.852121,-2.811668,-1.088998,1.289538,5.274106,9.540621,7.954614,-5.219297], dtype = "float64")#candidate|7758|(672,)|const|float64
var_7759 = relay.var("var_7759", dtype = "float32", shape = (55, 5))#candidate|7759|(55, 5)|var|float32
call_7757 = relay.TupleGetItem(func_4295_call(relay.reshape(const_7758.astype('float64'), [672,]), relay.reshape(var_7759.astype('float32'), [275,]), ), 1)
call_7760 = relay.TupleGetItem(func_4298_call(relay.reshape(const_7758.astype('float64'), [672,]), relay.reshape(var_7759.astype('float32'), [275,]), ), 1)
output = relay.Tuple([uop_7751,call_7757,const_7758,var_7759,])
output2 = relay.Tuple([uop_7751,call_7760,const_7758,var_7759,])
func_7768 = relay.Function([var_7750,var_7759,], output)
mod['func_7768'] = func_7768
mod = relay.transform.InferType()(mod)
var_7769 = relay.var("var_7769", dtype = "float64", shape = (5, 2, 15))#candidate|7769|(5, 2, 15)|var|float64
var_7770 = relay.var("var_7770", dtype = "float32", shape = (55, 5))#candidate|7770|(55, 5)|var|float32
output = func_7768(var_7769,var_7770,)
func_7771 = relay.Function([var_7769,var_7770,], output)
mutated_mod['func_7771'] = func_7771
mutated_mod = relay.transform.InferType()(mutated_mod)
var_8274 = relay.var("var_8274", dtype = "uint16", shape = (13, 6, 10))#candidate|8274|(13, 6, 10)|var|uint16
var_8275 = relay.var("var_8275", dtype = "uint16", shape = (13, 6, 10))#candidate|8275|(13, 6, 10)|var|uint16
bop_8276 = relay.right_shift(var_8274.astype('uint16'), relay.reshape(var_8275.astype('uint16'), relay.shape_of(var_8274))) # shape=(13, 6, 10)
func_6244_call = mod.get_global_var('func_6244')
func_6247_call = mutated_mod.get_global_var('func_6247')
const_8280 = relay.const([-7.571678,8.383590,-8.555118,1.201385,-2.557866,-0.330874,8.716008,5.007061,-3.778931,-9.881551,6.136361,2.974062,-6.290825,-0.094704,-1.643574,3.743238,-9.626811,-5.838637,5.061095,6.417724,1.760301,3.036493,6.886031,-9.535997,-3.528025,-2.950579,5.844275,-7.361499,2.500256,2.981010,-8.683925,4.241450,-6.136661,-9.951977,7.502586,7.571969,2.016265,6.549782,-4.511751,-9.057590,-5.792551,-1.042356,7.766444,9.966569,7.550861,-7.857229,6.244713,-4.616287,9.480257,8.205413,-3.785029,9.625332,-2.653083,-8.808193,-1.271963,6.378745,9.868873,9.133922,-9.416730,-2.157108,3.962698,-6.624569,-7.004286,-5.403094,8.369594,-0.696378,3.314663,4.531351,-1.980831,-8.202585,-9.966893,4.196578,3.407470,-3.763417,2.615084,8.311601,-9.770238,8.549676,-8.168559,-1.712206,-4.387140,2.077033,5.045373,4.753147,8.742813,-0.174208,4.664632,5.980903,-7.384162,9.094429,-1.381175,5.232863,-7.548995,7.263736,-7.510976,-2.679406,-9.754130,-2.634560,-9.938446,0.182645,7.011843,4.726820,7.142116,5.668353,9.223737,0.848414,0.273771,-0.421423,-1.631267,-9.447756,2.102766,6.725895,3.248383,1.582397,6.738287,4.345147,5.210394,2.778159,2.217571,-5.934658,2.579444,9.955360,-9.567704,-5.978751,2.969202,-9.385321,3.445262,5.230035,9.268977,-8.279740,2.774850,-8.597814,2.420729,-3.076926,-6.248872,4.631397,-9.376004,6.602021,-3.081609,5.273663,-7.377571,-5.107753,5.160694,-1.224810,7.813435,5.532612,-8.498824,2.067639,-6.060629,4.732568,-0.128748,-9.551727,3.375583,-8.990233,-3.665431,3.214879,1.013855,-8.936451,4.237547,7.241943,-5.964444,-3.920639,-8.158405,-1.806038,5.028688,-7.509429,-4.830598,-7.032206,-1.915497,0.343662,5.535863,6.961569,-5.725222,3.196497,6.099639,-7.786395,-9.426744,-8.738856,-3.112574,4.502200,-3.024410,-7.572055,-4.639557,-8.181120,2.389399,1.090805,3.823916,6.141938,6.371955,9.914260,2.774010,-3.898539,-9.996293,7.967307,1.050850,-0.595169,-4.175319,-9.274274,-4.889030,5.613085,-1.987932,-4.689568,7.391175,8.736271,-2.610520,5.383765,0.056781,4.365607,6.261713,-0.206436,9.010789,-4.386842,1.261503,0.047207,-6.485457,6.816804,2.230578,-0.840297,2.153622,5.703385,-5.140290,-9.115100,-8.791860,-1.042246,-4.665961,-3.393950,5.168433,4.084141,0.784656,-6.875825,9.987359,-6.994401,1.907402,2.058254,5.657223,3.670007,-7.240657,8.129752,6.028528,-1.192739,-4.475726,-8.601025,1.545300,1.577875,-6.170369,-8.786709,8.941810,-3.644038,2.010045,-6.268503,5.017572,0.524449,0.158819,-7.181661,-0.454845,-1.034156,-4.241316,-8.528207,-9.468755,-1.839096,-5.021260,-8.416023,-1.482383,-5.826974,-8.807162,-9.405295,-6.448263,9.419369,-9.121032,8.149440,-5.987698,9.392732,-1.638921,5.994466,2.721990,2.332622,-5.587494,-3.915103,-1.316342,9.456494,5.093025,-0.629226,1.165637,4.662730,-2.014044,-6.415911,-4.014428,1.006726,4.997822,7.567608,-3.865182,-0.302766,-6.859609,6.032067,-0.845654,4.708002,-4.037369,5.749995,-3.251864,5.250168,3.968296,8.608918,-3.592463,-0.164021,9.587940,-1.474741,-1.254563,6.842851,7.896542,-4.703417,1.338455,4.311554,9.533623,6.434024,8.612333,-4.751164,-3.302180,-8.552234,-8.286721,-7.479915,-9.127441,-6.541971,-5.557874,8.672291,-0.639987,8.718868,-6.068786,-6.269111,8.874182,0.253538,-5.125506,-9.669869,9.964690,0.379050,2.244733,-3.241122,6.098012,1.383241,-7.675105,9.816318,-5.658886,-6.341580,-3.978394,-0.271733,-7.317193,-6.187508,-0.772957,8.551809,-4.955434,1.144253,-2.339270,5.606838,-5.374869,4.096042,-4.643461,-7.289428,4.966331,9.147490,8.533562,-1.482949,1.429620,-3.755572,2.900779,5.313643,8.701629,8.131650,-3.995193,3.562726,0.869617,6.942899,5.001435,-3.118382,-9.426913,-3.014303,-2.950520,3.779058,-7.825946,9.819973,3.690352,7.882973,6.497862,4.627864,8.320736,8.115978,4.143226,-1.843735,-6.992601,-4.355226,-1.534806,-7.767231,8.381722,-1.457723,2.887054,4.747013,4.331769,1.151057,0.474318,-6.225070,5.652583,-2.565954,9.472062,-4.187794,1.447252,-4.235365,7.622042,-2.418444,6.868897,-7.776017,-3.077289,3.421038,-3.194027,0.653433,5.107532,0.104054,3.373801,-3.341516,-2.817606,-9.316767,1.498777,-4.604568,5.304601,6.523324,1.993426,3.800034,1.777863,0.744678,-6.830076,6.214283,1.347530,-7.747845,-0.892797,7.553695,6.605500,2.327937,-1.290825,-3.347377,-0.797738,-2.884925,4.928891,-7.436717,7.273073,3.166512,-9.869701,3.404023,2.150641,-7.104181,-6.893519,-0.779236,6.328439,-7.990373,0.063979,4.374671,-5.146485,-6.757884,2.175312,-6.148707,-6.080442,-8.691169,4.752959,-7.898652,-4.412359,-8.419074,-5.577242,-5.061688,-8.611961,-5.495655,7.770316,-5.680005,3.763665,-7.654879,6.721444,9.573493,-0.138390,-6.573394,-3.953300,-0.211625,1.583815,4.636377,3.197496,9.482448,5.262602,-2.745425,1.517715,-6.571049,4.019768,3.795984,-3.370472,-0.174779,0.646588,-4.280517,-6.488022,-8.068147,4.429273,8.480125,7.280869,3.529737,-3.637326,-7.805376,-3.586935,5.856259,6.741629,-3.436176,1.709198,-0.926398], dtype = "float32")#candidate|8280|(504,)|const|float32
call_8279 = func_6244_call(relay.reshape(const_8280.astype('float32'), [3, 14, 12]))
call_8281 = func_6244_call(relay.reshape(const_8280.astype('float32'), [3, 14, 12]))
func_1801_call = mod.get_global_var('func_1801')
func_1803_call = mutated_mod.get_global_var('func_1803')
const_8288 = relay.const([4.900973,8.513386,9.768222,-8.532360,5.314053,-3.568264,-7.575506,1.268770,9.061251,8.589586,-3.479033,8.948044,2.451184,4.288450,-1.297359,-7.067386,1.324896,-1.614174], dtype = "float32")#candidate|8288|(18,)|const|float32
call_8287 = func_1801_call(relay.reshape(const_8288.astype('float32'), [1, 9, 2]))
call_8289 = func_1801_call(relay.reshape(const_8288.astype('float32'), [1, 9, 2]))
func_7547_call = mod.get_global_var('func_7547')
func_7550_call = mutated_mod.get_global_var('func_7550')
const_8303 = relay.const([-1.335104,6.257331,0.326158,-4.294219,7.803712,0.992355,0.558362,1.897247,7.670318,-6.680629,-0.128496,-1.104644,-5.630949,9.531056,6.319574,8.438905,-6.112106,-9.181949,9.339483,8.592337,4.594462,9.769569,3.485023,9.110033,-1.577848,4.657149,6.018339,5.470598,4.503771,1.569491,-4.043993,-0.590654,-0.334653,-2.138882,-0.913756,-3.384182,-6.605080,-5.666785,-2.434900,-3.899762,5.382440,-2.094614,9.220688,-8.528800,-5.860768,9.692185,-5.948150,-8.143946,-4.952985,-6.835970,-1.497522,7.342729,-1.363757,-7.146410,3.629372,8.981166,-0.166059,-4.166877,-5.002977,4.369064,-1.105383,3.036861,-5.354049,4.812848,-1.281982,1.697223,6.379694,4.089606,-9.374948,-1.395757,-0.799828,-9.680075,0.921152,8.224886,6.794613,5.171511,6.566242,-0.082751,-0.712103,7.063746,1.472160,8.790303,4.465604,-3.035392,-3.442236,1.797580,2.236447,-5.192486,-1.497332,-1.576989,-4.244187,-7.146468,-1.231544,4.665786,-3.517629,3.571427,-7.108307,-9.591484,8.339221,2.604427,-3.767343,-1.348538,4.199621,-7.801974,-8.831448,0.918091,-5.051676,7.586841,7.568910,0.539880,4.947351,5.352405,3.625234,1.039107,8.783328,2.204088,5.086775,9.860458,-5.279706,0.121479,-0.198906,1.256652,-1.343067,0.592093,2.709974,1.781475,1.261401,-5.673330,2.092876,4.089512,1.940201,-4.304741,-3.978897,7.291517,8.610646,-8.228701,3.628630,6.489731,-7.763158,5.804308,9.667186,-8.191818,-4.269291,-9.921784,-0.147347,-0.864957,-3.443550,-0.038709,-8.110048,0.897156,-9.819633,1.372065,6.604069,8.305264,3.609429,1.685483,-0.805377,7.899365,3.006576,-7.570502,5.702076,0.985107,1.163866,-0.072177,6.693677,0.736716,2.037620,6.163610,4.554158,-0.996385,-9.418117,-3.111955,0.488281,4.835952,3.905517,-4.928436,-2.547214,-4.716559,-0.802317,7.479193,-8.156907,2.812644,6.240184,-4.968692,-1.798524,8.088895,-6.565516,8.516354,5.379143,-0.776152,-1.395065,8.768603,-3.407526,-7.150463,-8.386519,-3.760224,-0.409762,6.627712,6.847008,2.316289,-0.010461,-9.526736,-9.873141,1.956454,-7.251722,-1.093715,-2.872432,2.613980,6.183395,7.633774,6.545790,-6.893128,-7.667175,5.570260,8.382904,6.381142,6.278518,-6.915071,2.608234,0.046554,-1.317738,-8.321009,8.758154,2.110900,3.668607,-7.278233,5.547997,-6.373866,-1.830012,9.967856,-8.657945,-3.822182,-2.255671,5.383772,-3.216692,5.808108,-1.584316,1.837842,5.478288,-0.262491,-5.463489,4.714377,9.701133,7.246982,7.834938,6.062946,5.403880,5.243161,7.599105,7.345840,4.568824,-6.526180,-3.083063,0.104622,-9.784167,-0.829336,-4.498574,-9.487576,2.475219,-2.641472,-1.617948,4.228027,5.395994,9.768669,3.488001,-0.010362,3.435322,8.016759,-5.595951,9.172035,-4.111834,0.006836,4.332682,0.882774,8.594523,2.884565,9.264884,7.531579,0.977460,7.697017,0.880019,1.292556,-6.032125,-0.365023,9.880250,-2.986818,4.697833,5.989113,8.709189,-3.001630,-0.140023,1.053109,-4.466340,-1.290295,2.453971,-0.734096,8.356093,-6.074791,-9.400797,-0.723063,-4.457838,-3.439071,2.883417,6.757639,-9.578083,4.614487,0.511307,-6.093125,-8.397665,-3.411826,2.261807,-2.087309,-2.227155,-0.539982,-3.303843,0.191043,6.448640,-7.104778,0.887100,-6.069389,1.040006,-2.677711,-7.277828,-3.234690,2.660453,-0.563539,-8.773586,2.712670,9.378482,1.019624,-5.528419,0.153452,-6.813236,-3.371452,4.256854,4.422698,9.587069,1.192966,0.536729,-3.901071,-9.665888,8.693751,5.691582,-0.528077,-0.976771,-2.669938,-9.255871,9.263623,-2.150181,-4.055541,-5.636324,-6.173815,0.051058,9.952587,-3.880678,7.590140,-2.806855,8.339617,7.614152,4.867301,9.465061,-6.838802,5.655826,6.355149,-6.351442,1.632881,1.989603,-1.184445,6.702423,2.674086,0.259573,3.499779,4.292064,0.937203,-9.969385,9.426963,4.836374,3.444169,8.382174,-3.299623,-7.630515,-9.919274,7.690253,-4.589588,-0.988361,-1.404049,-9.700997,4.240856,-5.441268,-4.379930,5.795494,6.913406,1.130449,1.396152,7.525529,-7.646497,1.903606,7.631279,6.545655,-4.518226,-6.488131,9.138715,-3.944791,-7.119292,-2.974864,7.730239,-6.890947,-3.207903,5.229713,-4.130678,6.114178,-0.876784,1.219909,7.683871,9.839602,-2.335191,3.506968,-1.458116,3.307188,-1.602856,3.027588,0.318137,-2.180151,4.879330,-7.420045,-1.155044,7.312004,-6.118344,0.130524,6.297291,9.672161,-4.486114,-0.432490,-2.898749,9.266885,8.350249,-7.629216,1.275898,-1.612455,-4.877921,-0.144559,-4.719787,9.618662,9.723475,-6.595188,2.554335,-9.600311,-1.335906,-9.445527,-1.670754,-4.600607,-2.767950,3.455108,7.657132,9.048579,-6.024102,7.794671,2.400037,7.639999,7.037686,0.092706,-6.974924,-8.811486,-0.631903,4.310050,-7.208761,-3.849229,2.798659,-8.570416,7.564647,-6.810792,-0.394488,-6.859515,8.457283,-0.904339,-2.061552,5.884779,4.135978,6.107406,0.570798,7.226435,-8.555378,-2.108206,1.271975,8.541041,-0.595991,-1.397183,7.875371,-9.967921,-6.578292,9.734087,1.069304,9.186178,-4.461197,-3.959441,-3.223718,0.671422,-2.537142,-0.933151,4.357741,-3.384418,6.699881,-4.692718,-7.214033,6.018614,4.484134,5.391726,-8.809055,1.188201,0.449578,-9.182143,4.209876,4.039681,2.459326,8.443897,8.508229,3.162513,-9.731831,0.707235,-0.033372,-7.212818,7.204290,-0.968361,-3.478943,-3.834578,-1.489018,7.379168,-0.082019,5.691442,-8.848096,-1.788833,-6.685575,6.449287,0.572505,5.907780,2.555855,3.250631,7.094046,-8.972236,-0.921293,-2.503009,8.708685,-4.444931,-2.400526,-3.145412,4.277018,-9.729758,-4.280041,-6.318050,-8.580493,2.831416,9.460953,-8.106405,3.262112,0.570148,9.724491,-6.027438,4.724300,-9.774726,-1.086708,3.617759,-7.566928,6.665569,6.698032,-7.236780,-6.299803,1.938719,4.664211,-0.714093,6.399333,-1.985114,7.654420,2.159957,2.759427,-7.053230,-7.095309,5.548793,9.359201,2.393429,9.463733,-3.619873,-6.493649,9.202286,8.131060,-7.169914,0.499846,4.379463,7.673044,-1.327374,1.656667,-9.388392,-9.591410,-2.732949,-1.482828,-2.141189,7.849791,9.621472,-4.244665,7.683160,0.232871,-0.620118,-9.206493,4.136667,3.649968,2.130936,0.100949,-9.755588,5.103470,5.221528,7.613064,0.319031,6.801232,-9.058157,-6.742283,0.555419,9.096490,-8.952811,-8.748881,8.955435,2.110352,-8.593232,-3.112997,-7.790185,1.780001,2.638060,2.875904,8.874423,-5.033174,1.666377,-0.296735,-5.044159,-4.426545,1.397231,-9.872360,-7.465247,0.290314,-0.095779,-5.555750,-6.636587,6.701605,-1.977147,-7.292087,1.132499,1.951547,8.809683,9.074292,7.097050,5.784592,-6.694090,1.936812,1.837886,4.059837,-2.020038,3.156567,1.362376,-1.586191,8.754984,-3.952804,4.083524,5.885220,7.987044,-9.953392,7.413420,3.899403,-0.484261,-3.941437,-5.065400,2.799803,4.591507,8.409342,4.178921,-5.608928,-2.332863,8.088231,-6.797544,4.734878,-7.108229,-4.893054,5.217107,6.793467,-2.156007,4.593612,-6.413671,4.218710,3.233295,-7.936521,5.632800,-5.791506,0.375029,9.430325,-7.577905,6.009093,3.740773,-1.158559,-0.197324,-2.840050,-2.365645,3.764617,-4.739851,-6.240944,1.325907,8.274762,-9.362568,-5.830418,0.880173,3.749080,-7.032839,-8.726763,1.021390,-3.888050,2.252782,-9.917414,1.138155,-1.941064,7.799941,4.485777,3.666827,0.826346,-4.016461,-9.575692,1.829220,-8.077530,-4.273373,1.601696,2.344665,7.572857,-5.946530,-7.950368,1.398345,-6.892716,-5.131844,3.892663,-7.113219,2.330690,1.246872,-7.439035,9.800355,-6.089624,-2.423539,1.259497,-0.754386,-3.211811,4.312899,-9.813104,9.792211,1.630009,-5.007066,6.474881,2.476259,-1.207409,-2.451620,5.876482,7.865833,-6.407478,-4.882762,3.509387,-5.700501,9.841787,4.099067,1.441861,-9.748823,-7.262578,2.463365,5.813496,-8.141971,9.884029,6.103332,-6.181182,7.571742,-6.440363,4.076197,-2.536738,1.473264,0.356457,9.038252,5.067478,8.815482,-9.837352,0.541002,1.691497,8.713902,9.623027,0.757494,4.867589,-8.253916,-0.576433,-1.834818,2.769865,5.824027,-6.784277,5.992541,-3.752330,6.665830,-2.244858,5.069622,-2.724046,-0.742663,8.188564,1.624171,-8.921220,-1.521547,1.819269,6.909329,-9.037902,1.017726,9.304209,-6.753695,9.129696,6.980710,-3.901554,5.923098,0.210241,-9.236987,-9.176214,-4.403814,8.729582,2.240136,4.889417,-3.128224,3.405804,-6.918600,-2.671247,7.441858,-2.773873,2.117398,9.397983,5.902707,0.475169,9.213292,2.947815,-4.756176,-7.032248,-0.373949,8.261228,6.778949,-7.951421,6.754761,-2.049881,6.848187,2.582314,7.277842,8.652203,-2.492944,0.542599,-9.504321,8.117705,6.870644,7.342089,0.921714,-6.738272,9.993261,-7.276782,-0.967972,6.920284,1.056753,-7.798319,7.450952,1.277846,-8.751606,2.431561,2.126731,-6.067133,-4.588782,-7.023746,-4.799173,-5.748604,-7.269106,-8.007697,3.584993,-9.282506,3.619507,-3.500488,-3.206267,-0.027128,-4.143303,-2.431536,-1.155957,-0.046463,-5.262111,-5.165006,-0.603801,-1.692385,6.888109,5.258864,0.872375,4.227634,-5.436100,6.813981,3.513287,-5.081169,-4.481135,5.602458,6.114417,3.115787,9.006398,-8.918764,0.069717,-4.326892,1.325244,2.067932,2.624568,6.521964,-9.522412,-0.248593,-1.386376,5.591836,6.849818,1.428721,2.666646,-6.736477,-0.084266,-5.268909,-0.548208,-9.320084,-0.049271,-8.671992,-2.761296,1.842019,-6.644355,-0.593477,-1.657799,4.383010,9.366136,-2.663360,-0.561672,1.465260,0.139797,-0.879482,-6.837613,-8.934054,-5.715496,-2.063559,-1.266962,-5.678864,6.468932,-9.914429,-5.137421,-1.738041,-4.655257,-4.827185,2.172969,-4.507518,4.099817,-7.136319,1.258653,-5.745879,7.837608,2.556550,0.821210,5.216858,-2.175745,-8.029568,2.441569,-2.327585,-2.047215,-7.294054,-1.513942,-2.855296,1.126690,9.754346,3.811461,8.697374,-8.374317,2.643400,-6.044384,9.436041,-8.751021,5.327083,-6.501515,9.895694,3.441146,-1.474022,-7.626698,2.767141,-9.042406,8.673720,4.156620,-7.627240,1.976951,8.577878,-0.627116,-6.010103,-7.492868,8.842654,-1.168258,3.247303,-3.899946,6.110856,9.667330,7.421381,-9.653572,7.493652,0.829635,9.524875,0.125884,-5.876999,3.536417,-9.349422,-7.687876,-0.663935,6.651242,-3.536122,-5.701750,-1.907658,4.878649,2.778903,-6.852206,0.002790,-9.708114,-3.036506,1.616530,-0.113871,-4.868976,-7.466851,-1.985469,1.252356,2.717755,6.113764,5.609871,0.638143,4.702714,-2.008324,1.354221,3.399564,4.350228,-6.321573,-7.138508,9.021521,1.629164,-5.102841,6.232940,0.574241,0.768940,-5.557953,3.225224,0.674256,-5.952299,-0.889228,7.727221,0.830698,-7.505956,1.564264,-3.242310,5.997089,4.181195,0.236862,2.848043,5.576251,-0.313674,5.472579,9.297915,-5.772138,5.078396,5.151984,1.672151,7.175261,-0.051956,-1.040823,5.837610,9.672725,7.416702,1.998138,3.076794,-7.248909,-1.544712,4.603009,-2.699044,7.000413,6.968631,7.172267,-7.874329,-1.923128,9.707544,1.586081,-8.980581,2.894965,-3.666064,-9.914139,9.399275,9.236957,-9.860653,8.677561,-2.894644,-8.104075,-4.288892,-2.670770,-7.811605,0.323504,-7.645436,4.643091,6.527807,-5.913821,9.484681,-9.743598,7.988757,7.048450,-0.629507,9.975695,3.948691,-1.263782,0.341252,-1.325689,3.870635,8.559663,9.131007,-9.403715,-4.248953,-2.583450,5.994296,-4.373759,-0.963601,3.955694,3.140883,9.470164,-0.495247,-2.313509,9.595037,-3.214131,-2.525871,-5.720295,-8.795944,0.532477,2.293509,-8.707074,-7.476956,-3.761519,-5.064709,6.075873,-4.643663,4.389711,2.723963,-7.107864,-5.607299,7.855247,-0.084970,-8.561001,3.620855,9.302884,2.772092,3.805381,7.649945,-8.212286,6.880465,3.241569,2.130707,8.709484,-9.099082,6.482559,-2.015772,3.635424,-2.963733,2.240377,1.122927,-9.756826,-4.746029,-1.733366,2.944279,-0.787228,7.673069,-7.254195,-5.950097,0.734778,9.044121,4.210186,8.159095,1.770609,3.213432,5.206623,9.732204,2.643234,-2.715846,0.907006,2.689338,-0.976745,7.207740,6.740346,-9.131002,-1.664784,1.486753,8.226794,9.002810,-4.460212,3.546044,2.685071,4.984715,4.327634,1.618312,-8.832728,-7.240986,0.068588,1.863132,5.926792,8.662599,-3.660119,1.215331,2.522343,-8.863018,1.171570,-8.831477,-9.335767,-5.230124,1.570240,7.411383,-7.046877,-8.758079,6.772505,-5.489809,-2.373867,1.466613,-6.351532,-2.955930,3.782689,4.051717,6.860701,6.746827,0.259273,6.273522,1.197481,-5.237644,-1.953103,8.237958,9.370620,-5.462753,2.156398,-9.447019,-7.930967,-4.358592,5.060334,2.503722,0.944479,-8.654462,-5.145355,1.835586,-2.843631,8.765065,-1.483132,3.785781,-2.123091,7.621905,8.978221,4.661261,9.269869,8.203598,9.531659,3.052244,3.654143,1.622519,3.241996,-6.883049,4.679098,-8.414043,-5.616892,2.405970,4.529987,4.860984,-1.389773,-9.015823,-6.044222,-0.189221,-3.626284,-7.758288,2.696746,4.335908,-7.495654,6.491994,3.436095,7.493764,4.950344,-4.313731,-2.658453,1.229735,-7.356252,-4.908922,2.921143,-3.812979,-7.080584,3.914125,7.035856,-4.033528,-7.830890,3.138082,0.826892,-5.286530,9.340123,4.113496,-3.869516,-7.480621,-8.105014,5.732429,6.953913,-8.917313,-7.930581,5.921503,-5.345029,9.650289,4.056278,5.384006,7.161925,9.442306,-0.007990,-4.872808,5.386252,-8.060049,0.340509,1.024469,0.692745,-2.572082,-9.430838,6.694172,1.932494,4.164652,2.679371,3.948171,-3.441000,9.444043,6.279983,9.520069,-4.690754,7.741702,3.298517,-6.431462,-0.393025,-3.088781,7.891933,4.831366,-4.366037,3.279123,4.265585,8.731015,-8.168886,4.368803,-3.495988,-9.406458,-1.039020,2.926546,5.000734,-5.998797,-1.952582,-6.298393,7.086889,7.097470,-2.089945,7.205923,2.637852,-2.133666,-9.923706,-1.280607,-5.323769,5.514681,-0.766275,9.720904,0.391887,3.989994,-2.452636,8.429903,5.025732,-6.146024,6.974481,-4.783976,-0.968635,-0.680025,-6.502026,1.750618,-6.083442,1.831968,9.252808,-0.421685,-4.226838,3.846486,1.349994,-0.278308,6.456347,-2.781016,8.368210,1.228747,6.540991,-3.693337,-2.536322,2.130135,-3.741039,3.391646,7.975577,-6.486385,2.066477,-2.683571,-9.938546,-8.833130,3.444188,7.822657,8.738479,-1.046623,-4.808899,-9.088382,3.814758,7.533185,-9.411496,4.121676,-8.173785,3.822148,5.041138,-3.810378,9.934120,0.069923,-6.866252,0.017482,-5.527690,-1.314217,-9.358709,4.422065,-7.702913,0.997773,-0.375326,-1.964110,6.007213,-8.844949,-0.975428,-2.754165,9.305151,-5.728224,-9.832013,5.667216,-5.797341,-8.605778,-8.715982,-1.707418,-0.136170,2.236597,-6.586273,-1.859854,-6.589927,1.894015,9.296212,-5.553884,4.906876,-8.702094,-5.531218,-7.344641,-4.961506,7.572961,0.804621,0.975510,7.145229,-0.271961,9.790176,2.280879,7.032043,-5.492191,9.279405,-0.189406,1.950252,-7.373364,-2.455828,-7.173502,7.458216,-7.656845,5.747906,9.120003,-9.225242,1.167546,-1.360800,6.546771,2.949698,-3.076078,-5.068322,9.255192,-9.152357,7.401039,5.838498,1.929428,0.349657,4.231496,5.902437,-9.826903,-6.653465,1.224137,-4.743590,-6.614886,-0.800821,-0.835550,5.643644,5.686259,-2.897908,8.007814,-6.555412,-0.935122,-8.972189,4.910898,-5.390070,3.686717,6.512012,7.478889,-9.600218,8.249459,4.019306,1.334707,1.588525,-5.061884,-8.684216,2.293752,-3.887230,-1.311252,2.446949,-4.798613,5.260053,-2.116602,6.958596,0.852534,-0.013822,-8.387589,-5.223244,-3.250642,-5.041109,2.105083,-2.183490,-8.951595,4.206635,6.545826,-1.672149,-8.161716,-6.942560,-5.568218,5.878207,5.100900,-4.438168,9.053875,7.062511,-8.108712,-5.837707,-5.914407,0.420448,4.935606,-4.969602,3.873464,-8.220758,-4.234511,1.049430,-1.604095,-5.288029,-1.925825,-4.017510,-9.060645,1.133607,1.366559,-7.333636,3.565365,-7.240414,-0.557482,4.269234,0.234889,-7.634869,-6.397952,-6.239593,-3.725891,-1.799170,3.535793,-3.731439,9.662556,4.379576,0.809564,-0.254477,0.571640,8.773540,7.434204,5.067887,-1.764488,7.332535,5.037086,-9.760364,-9.488695,-9.507484,7.183265,2.251582,9.699740,9.395790,6.585007,9.449478,8.424691,-0.299805,5.916181,4.442389,1.075509,4.413281,9.855305,-1.426645,-6.336333,0.097064,4.920695,-1.477197,2.105951,6.699180,-8.806194,6.174901,5.488346,-7.593938,-0.330484,9.821301,-4.381280,-6.560542,-7.517353,-6.788626,-4.005232,-4.989114,-8.906400,-5.278750,-9.206827,-3.541667,-0.630600,-4.738471,-6.116270,-6.123757,2.051730,-4.439044,-0.035526,0.344268,-3.660699,-6.921973,3.607581,-8.536176,3.059278,-1.488469,7.567763,-7.446691,-9.305755,1.285377,-0.749066,7.693097,4.504369,9.190184,6.450866,-1.123337,-1.092701,-5.548428,3.281088,-5.063397,6.801980,4.267394,2.782801,-5.058175,-2.971329,-0.129555,1.502008,-0.973978,-1.522804,8.456353,-6.586717,4.208796,-5.093938,6.532878,-9.612623,-5.464381,-2.492897,-8.330253,-2.021262,7.861213,7.264418,2.204953,-3.941566,1.559427,1.037250,-5.190439,3.293432,7.741762,3.058022,2.390431,-6.381894,9.511887,6.942138,-5.196499,-7.400732,7.761455,-6.667292,-8.259585,-9.622921,3.388475,-7.260558,-0.483816,0.625208,8.093264,-8.529426,-6.349292,5.567600,0.449252,-9.074093,-5.518456,5.353304,-4.050901,-6.663139,-6.329443,-9.070763,-4.029413,5.757168,-5.163825,-6.310592,8.639380,3.209325,7.651014,8.946420,4.557111,9.100105,-2.831456,2.309459,-9.626214,-8.472074,1.040063,-5.008595,4.559463,-6.265235,-6.776994,-0.310273,1.766527,9.851636,-7.055425,6.613692,-6.852167,9.156952,1.970024,9.338830,-2.009817,2.020738,4.672543,7.975052,1.872565,-5.561074,6.029905,-1.130945,-6.499965,8.779231,-6.638284,2.635542,1.267028,-3.909100,9.386311,-1.569886,8.558592,1.817587,2.320161,8.467163,-8.371781,-6.287544,-9.253357,-3.843009,4.043632,1.034886,-3.396700,-1.995714,3.114478,2.956146,7.594988,-0.685038,1.382212,3.042268,8.047133,3.410500,-2.160351,8.114881,-4.814111,-6.059680,7.991693,-6.274289,-0.283392,-6.469127,3.276173,-3.719065,1.455604,7.010657,5.166323,-1.892081,9.053612,-0.861224,2.008948,5.313505,-5.011158,3.707070,2.134350,7.786945,6.073871,-3.765125,5.474866,8.922891,2.992655,4.832609,3.340214,5.777800,-8.797074,-5.285611,8.411120,2.764793,7.218052,-6.812851,-1.451827,-0.409659,9.052142,-6.921193,-8.035096,2.720648,-9.842597,-3.185725,-4.080046,9.812569,5.005146,3.890256,1.996718,-4.886040,9.497196,5.076905,2.078216,7.730670,-7.254649,6.572480,2.278027,8.897651,-5.281183,9.618665,2.800330,8.187849,2.939568,-4.804202,6.574259,7.574275,7.441377,8.439577,8.791141,7.760683,-6.220068,-2.499950,2.483428,-2.642433,7.429310,9.220044,-4.887121,0.032982,5.918075,-4.292354,6.980696,4.550799,-2.345831,7.453048,-0.326458,-9.478156,1.511930,-0.382307,-8.951906,-5.173968,2.352800,-9.016754,-1.600506,7.886975,2.553321,5.280541,4.903950,5.269106,5.672449,5.947023,5.708966,-3.206382,-6.099970,-5.611937,4.609152,-5.674477,-4.523416,-5.971644,8.643952,-5.471623,5.827110,4.011159,-2.618735,6.012822,9.055856,4.868488,-6.617393,7.805898,4.149430,6.358420,3.098518,5.658420,-4.119558,-3.362158,8.892657,4.824687,-7.290464,9.889583,7.036806,-3.682111,-3.190089,-4.790526,-4.925108,2.393267,6.286882,-7.899667,7.331189,-8.108896,-4.871871,6.305333,2.106110,-1.047645,1.334120,-2.138012,-8.211019,8.682388,4.151835,1.869939,0.650401,7.802037,0.816669,9.281246,7.175253,8.945888,0.182678,5.789581,7.368098,-9.607274,8.693161,9.459153,-3.528922,-7.276522,-5.861464,1.912966,9.465159,-2.604991,-7.199496,0.226106,2.442488,6.125747,1.384200,0.037787,9.741205,6.648808,3.476971,-8.803222,1.637941,7.046295,2.389123,0.830675,4.928400,1.817066,-3.904314,8.898201,8.600383,-5.614907,0.842943,6.824702,0.425374,7.351645,-1.446470,-7.029671,2.066693,4.666660,-0.254459,4.137423,8.257607,-5.468860,9.772701,0.104613,-3.021192,1.998370,-5.366347,-6.392161,7.410174,-0.758176,-4.555845,3.067141,-1.914858,-4.888837,7.596146,-9.102695,-0.263162,-9.699418,-0.593648,5.366521,3.692616,-1.547356,7.256518,-1.580384,-5.853358,-6.964379,6.503936,-2.535707,6.024312,5.440795,-7.604940,3.574154,-2.956965,-0.207173,7.950474,7.367941,-9.699818,-5.591106,6.306575,-7.342082,2.031262,-8.690633,-0.535828,-1.142866,9.949352,5.642088,7.269351,-1.424544,-7.879245,-8.276605,-3.454597,0.288271,9.868007,6.367082,-4.038378,3.575509,-5.548739,-4.106356,-3.567088,-3.730012,-0.446095,-5.050267,-4.812912,6.429539,5.863100,0.002799,-9.839252,5.533363,-8.485517,-5.585721,-7.791179,4.349240,7.975398,-7.408259,-8.170228,6.993025,-0.936877,4.093462,-0.803121,9.068034,-1.392028,-7.375450,0.331322,7.185336,-5.948536,-5.337996,2.572809,3.127578,-2.961425,-8.337592,8.976103,6.439497,4.633661,-7.465649,-8.019262,-2.100887,-3.752736,5.304959,-0.858152,-5.819145,-1.705833,0.438190,-5.227235,-3.057700,-6.591612,2.355001,-2.433118,4.776236,6.287695,0.568940,-0.223497,1.215562,-1.261739,-8.363708,8.890455,8.998529,-3.825364,0.576942,-9.137548,3.139048,-1.823354,-6.798556,4.085380,3.622337,2.441291,-4.553030,-6.654625,0.804011,-9.859714,8.424067,-0.223889,7.904694,4.536108,7.942114,-2.175445,8.852229,5.721572,2.829230,8.443641,-0.420404,-9.519061,-4.671373,-9.981292,6.410872,-2.975962,-9.518451,-1.659821,0.864038,-9.140046,2.339070,6.653985,6.653173,-9.697595,4.189591,9.646878,-1.520039,8.526087,-7.773860,-5.225279,-4.002917,-5.640894,8.501966,8.951249,8.437997,5.306193,-8.494793,3.373299,-9.376516,0.106596,8.441397,6.180734,-6.989097,0.290589,-8.117721,-5.267844,-2.494438,4.980008,8.849204,-5.698690,-1.774452,8.839118,-9.389065,-7.930637,-4.387904,-6.955267,8.869173,-1.331180,-8.014648,-8.587292,7.098977,-2.329610,-5.924210,-4.794547,-5.528038,-2.582504,-4.274798,8.656698,-0.718168,2.977410,5.685551,-3.535375,7.998092,-3.163976,-8.869205,-6.108451,-9.032967,5.722608,-5.616653,-1.882345,-1.619095,3.092963], dtype = "float64")#candidate|8303|(2160,)|const|float64
call_8302 = relay.TupleGetItem(func_7547_call(relay.reshape(const_8303.astype('float64'), [16, 9, 15]), relay.reshape(const_8303.astype('float64'), [16, 9, 15]), ), 0)
call_8304 = relay.TupleGetItem(func_7550_call(relay.reshape(const_8303.astype('float64'), [16, 9, 15]), relay.reshape(const_8303.astype('float64'), [16, 9, 15]), ), 0)
bop_8309 = relay.power(const_8288.astype('float64'), relay.reshape(call_8287.astype('float64'), relay.shape_of(const_8288))) # shape=(18,)
bop_8312 = relay.power(const_8288.astype('float64'), relay.reshape(call_8289.astype('float64'), relay.shape_of(const_8288))) # shape=(18,)
func_1801_call = mod.get_global_var('func_1801')
func_1803_call = mutated_mod.get_global_var('func_1803')
call_8316 = func_1801_call(relay.reshape(const_8288.astype('float32'), [1, 9, 2]))
call_8317 = func_1801_call(relay.reshape(const_8288.astype('float32'), [1, 9, 2]))
output = relay.Tuple([bop_8276,call_8279,const_8280,call_8302,const_8303,bop_8309,call_8316,])
output2 = relay.Tuple([bop_8276,call_8281,const_8280,call_8304,const_8303,bop_8312,call_8317,])
func_8329 = relay.Function([var_8274,var_8275,], output)
mod['func_8329'] = func_8329
mod = relay.transform.InferType()(mod)
mutated_mod['func_8329'] = func_8329
mutated_mod = relay.transform.InferType()(mutated_mod)
func_8329_call = mutated_mod.get_global_var('func_8329')
var_8331 = relay.var("var_8331", dtype = "uint16", shape = (13, 6, 10))#candidate|8331|(13, 6, 10)|var|uint16
var_8332 = relay.var("var_8332", dtype = "uint16", shape = (13, 6, 10))#candidate|8332|(13, 6, 10)|var|uint16
call_8330 = func_8329_call(var_8331,var_8332,)
output = call_8330
func_8333 = relay.Function([var_8331,var_8332,], output)
mutated_mod['func_8333'] = func_8333
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9459 = relay.var("var_9459", dtype = "uint32", shape = (11, 10, 5))#candidate|9459|(11, 10, 5)|var|uint32
const_9460 = relay.const([[[-7,-8,7,-8,3],[-9,-2,7,-5,-6],[-2,-2,3,-6,-2],[-10,6,-7,-8,-5],[4,1,4,-5,-5],[-8,3,-3,10,7],[2,4,-7,-2,-5],[-8,-3,-4,-9,6],[10,-2,-5,-9,-4],[-8,8,-6,-2,-10]],[[5,5,-8,-7,-8],[2,8,-10,1,-10],[10,3,2,10,8],[-1,9,3,3,-6],[-2,8,2,-4,1],[-8,-2,6,-2,7],[8,5,2,-5,-7],[-7,-9,10,4,6],[6,4,-7,-1,9],[-9,6,4,-1,4]],[[-2,-8,5,-6,-9],[-4,-8,-4,-9,4],[-3,-4,-8,-6,9],[-6,10,-4,1,3],[2,-7,-6,-5,-6],[-4,5,-9,-8,1],[-4,10,10,-8,-4],[1,10,6,8,10],[4,6,-2,10,9],[-7,8,-6,1,-9]],[[7,-1,-7,3,-10],[-3,7,-2,2,10],[5,4,-5,2,-8],[-1,1,4,-10,-5],[-9,3,-8,6,-8],[3,4,-9,-10,6],[-3,5,-2,-2,-3],[1,5,-2,2,5],[6,5,5,-10,-6],[5,7,1,-8,-10]],[[-2,-4,8,2,-4],[9,-4,10,10,-8],[-8,4,-2,3,-10],[2,-5,-2,2,2],[-10,-6,5,8,9],[2,9,-3,2,3],[-10,-5,1,9,-1],[1,-1,-10,6,4],[3,1,3,-5,1],[-7,4,9,9,-1]],[[8,-4,3,-9,-1],[2,-10,-6,-8,-6],[-10,3,6,1,1],[-8,8,-10,-7,7],[4,3,-4,-7,-1],[-5,-9,-7,2,10],[2,2,3,10,-3],[-9,-6,-2,-1,-7],[5,5,10,-9,-2],[4,1,3,-10,-4]],[[-7,9,-5,-8,-4],[-3,4,-3,2,9],[-2,-5,8,7,-10],[-10,-3,-2,2,9],[4,-4,-1,-5,10],[-4,-6,5,6,4],[4,5,-3,-8,-9],[-10,10,-3,3,-2],[1,-7,-5,-3,-6],[-9,10,-8,10,-9]],[[-4,4,-7,4,5],[4,2,-5,6,1],[6,4,3,1,7],[-4,1,6,-5,7],[-8,7,2,8,1],[-2,1,-7,8,-10],[9,8,4,-7,6],[-8,-5,-4,-9,7],[-2,-9,4,7,-3],[7,-5,-2,-10,-7]],[[-3,9,-1,4,-5],[-10,-1,2,-6,-5],[10,-2,6,-1,3],[3,4,-3,-6,5],[-10,-10,5,-4,3],[-1,-1,5,5,8],[-5,-3,4,5,2],[9,6,-1,-1,3],[6,4,-5,9,-6],[-9,5,-3,-5,-8]],[[8,-9,9,7,-6],[-4,4,-10,-9,-8],[-5,8,-8,-10,9],[2,-5,4,-2,4],[3,10,7,4,-8],[-1,-1,2,1,-4],[10,-10,6,9,-6],[4,10,-7,-6,3],[7,-7,-4,-10,3],[-7,-10,7,2,-2]],[[8,10,-1,-3,9],[-1,1,-5,-10,-1],[-8,7,-5,4,2],[-6,3,8,-2,-3],[8,-5,5,-3,-4],[-10,-3,10,3,5],[-9,6,8,10,-7],[-1,8,-2,-10,5],[-9,6,-4,-10,-2],[2,6,5,-2,-6]]], dtype = "uint32")#candidate|9460|(11, 10, 5)|const|uint32
bop_9461 = relay.bitwise_xor(var_9459.astype('uint32'), relay.reshape(const_9460.astype('uint32'), relay.shape_of(var_9459))) # shape=(11, 10, 5)
output = relay.Tuple([bop_9461,])
output2 = relay.Tuple([bop_9461,])
func_9469 = relay.Function([var_9459,], output)
mod['func_9469'] = func_9469
mod = relay.transform.InferType()(mod)
mutated_mod['func_9469'] = func_9469
mutated_mod = relay.transform.InferType()(mutated_mod)
var_9470 = relay.var("var_9470", dtype = "uint32", shape = (11, 10, 5))#candidate|9470|(11, 10, 5)|var|uint32
func_9469_call = mutated_mod.get_global_var('func_9469')
call_9471 = func_9469_call(var_9470)
output = call_9471
func_9472 = relay.Function([var_9470], output)
mutated_mod['func_9472'] = func_9472
mutated_mod = relay.transform.InferType()(mutated_mod)
const_9543 = relay.const([[[1.322743,7.143992,-9.690772],[-5.758843,7.081970,6.581708],[-8.455888,8.297416,2.713597],[9.775604,0.368549,-0.276443],[3.102121,-7.066937,1.243633],[8.937874,1.951020,1.746723]],[[-8.783062,-0.352259,-4.998505],[0.199050,4.523312,3.183974],[2.556396,-9.789776,-9.689333],[-9.374073,0.494543,-7.733601],[-2.124199,-1.143725,8.391794],[1.401626,7.866550,6.882464]]], dtype = "float32")#candidate|9543|(2, 6, 3)|const|float32
const_9544 = relay.const([[[-5.215834,0.100356,-1.187594],[-2.610761,0.200194,1.856221],[-3.367970,-9.951508,9.573717],[-3.227622,-9.292978,2.535844],[3.250389,8.190854,7.730679],[-2.512395,-7.133720,5.746861]],[[-0.983139,5.569528,-1.646245],[3.331976,-4.443331,-5.024796],[0.699966,2.751792,-5.615551],[9.918363,6.955164,-6.642185],[-5.505345,-6.431289,-8.972764],[2.285315,1.454563,8.089987]]], dtype = "float32")#candidate|9544|(2, 6, 3)|const|float32
bop_9545 = relay.floor_mod(const_9543.astype('float32'), relay.reshape(const_9544.astype('float32'), relay.shape_of(const_9543))) # shape=(2, 6, 3)
bop_9548 = relay.power(bop_9545.astype('float32'), relay.reshape(const_9544.astype('float32'), relay.shape_of(bop_9545))) # shape=(2, 6, 3)
output = relay.Tuple([bop_9548,])
output2 = relay.Tuple([bop_9548,])
func_9553 = relay.Function([], output)
mod['func_9553'] = func_9553
mod = relay.transform.InferType()(mod)
mutated_mod['func_9553'] = func_9553
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mutated_mod.get_global_var('func_9553')
call_9554 = func_9553_call()
output = call_9554
func_9555 = relay.Function([], output)
mutated_mod['func_9555'] = func_9555
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_9572 = relay.TupleGetItem(func_9553_call(), 0)
call_9573 = relay.TupleGetItem(func_9555_call(), 0)
func_4948_call = mod.get_global_var('func_4948')
func_4951_call = mutated_mod.get_global_var('func_4951')
const_9577 = relay.const([-3.803810,3.079514,-1.951187,6.278439,-1.191115,3.444237,-8.460432,2.005563,-9.438464,-9.478131,5.045145,2.334036,-7.083475,-6.793008,-9.210337,-0.047943,5.950019,1.244491,9.678871,-8.667825,-5.328932,2.449405,-1.633150,-7.446777,-9.191548,0.595147,3.623539,8.926905,-1.881524,6.181602,0.912512,7.515599,-3.773980,-2.348568,-7.493450,5.418639,-7.498097,1.857131,0.736918,-5.708066,-4.852883,7.737657,-5.379411,1.908389,7.941653,-4.383694,-4.115108,9.498115,-6.462590,2.635566,6.459644,5.678754,6.885632,-4.860504,6.562947,-4.192619,-8.886373,2.378119,0.890701,-9.125318,-8.484932,1.392803,-1.745092,3.240685,9.994604,3.302943,7.274303,-0.767781,9.470187,9.498035,1.250826,8.253170,-9.079033,8.825896,9.046690,-4.038815,-5.787763,1.856647,-8.214016,5.757651,9.654307,-6.039441,-4.057343,1.352448,0.196604,-4.653973,-5.745812,7.996586,-9.514065,-4.444525,-8.498961,9.655958,6.769202,1.247306,1.900002,1.067522,-6.090229,1.749310,-9.752470,-8.776940,-8.060612,5.298884,-5.123393,1.672365,3.130207,7.317449,-6.451958,-7.865615,6.832113,4.327397,-9.617215,1.646421,6.811304,4.714063,9.970148,3.286782,-2.976950,-9.438043,3.833063,-0.007395,-1.790469,-0.504208,-4.149125,-3.931100,8.809628,0.122924,-3.020782,-6.045053,3.848875,4.094930,8.073264,-8.124266,2.182075,9.995210,-7.334488,3.842311,0.603144,4.554630,-0.074243,4.958515,-2.301589,-1.210775,4.337552,-2.744392,-7.897659,5.737565,-3.216037,-6.425016,-9.728090,0.174455,9.696310,5.246334,-1.780837,-1.203613,-1.485193,-7.296017,-1.251985,0.111803,0.545979,5.061003,-9.214756,-3.436802,-0.343885,-8.676087,-8.810773,-9.505062,0.923133,-6.576328,-9.633073,-7.310940,-4.263749,5.404557,3.821505,-0.757598,-6.023668,4.979850,-5.937893,-2.893435,-6.833697,2.356113,-1.422946,-1.225548,-9.040229,0.942557,6.900010,1.186701,5.816978,3.176454,-5.571166,3.635871,1.666431,2.203782,-7.550177,-4.044628,-8.465358,0.762176,1.856920,-4.563461,-9.509449,0.085254,-0.435165,0.856858,2.849495,-2.951059,-2.991154,3.890607,-4.413539,6.971374,-1.630216,5.662537,-3.998558,1.811666,-4.327513,4.526335,8.309735,2.391390,3.454909,4.465606,4.339906,-5.126875,-2.402153,2.586249,-6.350561,6.363152,-8.778136,-9.518044,-2.641976,5.198568,9.224680,1.812182,0.665196,-3.957635,-7.079156,3.016960,-1.191880,1.957694,5.697810,5.232295,-5.188024,-7.989232,-1.810529,2.451072,-8.829408,0.626850,1.879222,6.795045,6.292971,8.320095,8.335712,9.245599,5.314109,-8.212974,9.982863,-2.375868,6.500174,1.964300,3.906444,-9.705273,8.592331,-7.512055,-2.493884,2.657655,3.983746,7.452481,0.726783,-0.218280,-5.169317,-3.379919,4.987401,1.941115,6.148037,-6.985326,1.198918,6.951868,-9.778628,0.814439,4.784660,4.265509,5.371391,9.713778,1.188769,4.989847,2.650733,-1.520938,3.301998,9.976736,-3.799647,6.879970,-8.398261,-3.486994,-7.104564,8.431149,-0.494387,1.429291,-2.082250,-1.191954,-0.614074,6.978602,1.738545,-1.116620,6.739177,-3.867953,9.875456,4.136357,-9.817813,4.147637,7.617807,-3.604760,8.056172,5.376327,-2.280194,4.854969,-0.491162,-1.769073,-5.823242,-7.719805,-4.010106,3.751602,-7.640817,0.729677,-7.411411,-1.291172,-5.703370,2.075790,-3.829188,1.115788,5.836050,8.789053,8.519227,8.375324,3.029195,3.706637,-2.168082,5.894855,3.902698,4.488831,6.053370,1.904416,-2.824495,2.709068,0.383696,-6.394029,-5.298087,-5.553443,1.193083,9.959665,6.395196,9.480146,-6.547111,2.954176,8.830029,0.690667,-8.400728,-3.340102,-0.994409,6.111983,-9.185750,-3.025985,3.372544,-6.759051,-7.333782,4.463382,-7.829913,-8.547028,-0.194418,-0.969046,-2.660248,-3.433571,-3.630005,-5.483186,1.591013,0.753049,2.868318,-6.162581,-9.355851,6.456332,-2.263611,5.519446,5.416805,8.904596,9.172317,-6.636019,-8.249020,-9.963814,0.730381,7.875197,-8.726845,9.288253,-6.303979,-0.696077,-5.544891,5.422695,0.911092,-6.989295,-7.418262,-3.589074,1.099964,-2.240537,4.184212,9.168112,9.431122,2.955027,8.165853,0.102946,-3.864813,-9.207963,6.942133,-4.903513,-9.276650,-7.315764,-3.435060,-0.128530,7.162944,5.464230,0.156486,5.830288,0.970518,-4.426711,8.754060,-2.136437,-6.422751,2.437067,8.755330,-9.218531,-2.093112,-6.592717,0.729246,-1.702584,2.033209,1.053824,-6.269153,5.033043,-1.670481,-7.491854,5.204106,7.713620,-4.972966,-6.979979,-6.857231,4.674752,6.313561,-4.535238,2.214372,8.790765,-9.722710,4.201271,2.170808,3.475449,6.014654,-0.739610,-8.727519,-0.868114,-7.244287,-3.779692,0.587787,8.703258,-7.769153,6.899825,-0.727804,-7.605237,2.254848,-6.307110,0.270842,-2.246006,2.666441,6.888587,7.616446,-7.667893,-7.686277,-6.967803,4.652328,-7.812842,0.368031,4.443976,-6.132408,3.864488,9.768374,4.909451,5.472224,4.696939,-0.559657,-8.763403,-3.376891,6.038687,-4.248329,-7.739786,4.594634,0.691779,-6.269332,-8.322379,-9.711171,6.456268,7.940250,-9.002827,-4.328229,-1.025627,3.980947,-5.675240,4.330553,-0.466404,-8.471307,5.585694,-0.420132,-3.307712,6.263044,9.805528,-3.761430,-7.335878,9.418144,-5.209534,-4.333538,-3.003391,-2.148419,-2.801965,-1.567309,7.257517,1.633547,-4.023944,1.392245,6.553187,-1.534566,-5.403079,9.487434,-0.606325,-7.558905,-5.552936,7.843697,-4.972087,-1.290705,-9.440836,1.526313,1.519315,-0.894500,-7.696858,-9.931022,8.114465,8.629565,-1.851525,-9.791096,7.763964,8.074134,2.511288,8.969786,-2.772617,-0.751755,-2.616028,-4.291364,8.289378,-2.211135,-6.661375,0.607783,1.090772,-6.624032,2.120429,-3.102410,3.994720,-4.982603,3.827907,-4.473837,2.308357,-1.177308,-8.954753,5.752607,9.569055,-4.691193,9.334224,3.219449,-2.362119,-4.876589,-8.089796,-5.808118,-2.273936,7.364784,-7.437215,-7.232073,-1.678184,-2.374524,0.363406,-1.582247,0.843547,7.036553,-0.735788,8.553943,-0.681658,-8.622630,-6.958066,-7.466376,-6.352814,-1.180587,7.591631,-9.173813,4.170487,-8.638905,1.972811,-9.339928,6.068017,9.989996,-0.529523,-1.053166,-8.638837,-9.335896,-7.416629,5.736982,-9.225672,5.265424,-4.939775,4.573393,-6.721640,8.978184,8.058819,-6.188278,3.801431,-7.873180,-2.894565,-3.973947,-6.026105,-1.490674,2.580524,9.027643,1.355838,6.311335,-7.623812,-8.385637,-7.401643,-4.322016,3.029187,9.177635,-3.873864,-7.926398,-5.127121,6.794760,9.347872,4.883832,-5.618274,-5.811165,-7.653685,2.993249,9.827173,5.252889,1.967411,6.820561,0.542684,7.104026,-0.607180,-4.027959,-3.567111,5.875572,8.031194,-8.248153,2.631051,-5.701607,-3.172463,4.933925,6.440582,-5.178345,-3.773043,1.567811,-9.001573,-8.714569,-1.642792,4.600814,-1.096412,3.980091,-5.365831,4.659190,-4.952783,1.258990,-7.882740,-3.606614,1.608613,-9.355724,-4.090416,0.375672,4.441122,-2.625009,5.300665,-9.913148,-2.451039,1.849190,-0.809464,0.796564,-6.725543,9.988861,2.616780,-8.984331,-5.303468,-2.245000,-7.413258,4.016887,1.633448,-5.344920,-8.674403,9.575873,-3.380249,3.035863,4.431289,2.192380,0.161007,-8.109293,5.094051,1.142704,-7.302519,-8.945651,-9.306778,-2.419303,3.533704,-1.225022,6.681996,1.579734,-9.056454,-1.884259,4.151912,-6.582669,8.976675,3.644290,5.587141,-4.501173,-4.782089,0.069601,2.077470,5.907957,-1.232472,-1.005672,8.896037,0.807077,-2.993987,7.103375,8.003594,-6.431394,5.302784,5.651844,-8.969735,-9.556616,0.203643,4.490633,4.669041,3.359964,-2.743413,2.812177,6.526352,-5.602706,5.742090,5.382105,6.703494,2.627612,4.221236,0.391963,-3.947182,9.360488,1.789429,-6.256870,3.670989,-7.838918,8.672536,9.740240,-8.730805,-1.308100,0.480353,0.747087,7.533470,8.405015,3.334674,4.682077,-0.709662,4.191232,1.453214,-1.200654,-9.696216,1.161046,4.828302,-0.015639,-4.986762,2.253507,1.407141,-3.482108,0.503633,8.684458,-9.682756,-5.735104,6.233682,5.364300,-1.006123,6.746417,-5.534036,-1.263854,8.647417,-9.463711,-0.053160,-2.274235,-8.562248,-2.821419,-6.244711,-7.216683,-8.757362,-3.598053,1.460725,7.360188,8.787492,-3.280238,8.476371,0.739521,5.389436,-1.844936,4.340279,1.942207,4.561717,6.631503,-2.770011,-9.439325,8.935342,-9.132290,-2.160458,-7.408073,2.560536,-2.007427,5.212026,9.395445,3.638409,-4.689838,-9.286864,-4.171070,-9.227475,-6.968309,5.858140,8.387269,0.517621,8.224056,5.723850,2.152509,-1.712115,7.240327,-2.573705,6.894610,-7.222686,-9.441223,4.149248,-9.419926,6.775337,-3.769742,-0.569239,2.953760,-4.139426,7.706309,-6.952617,-1.376477,-6.763204,-6.285543,-9.141533,-4.080695,-3.363836,-7.702014,5.863782,3.059366,2.299053,-7.198239,4.850391,1.023971,-9.853904,-6.648790,9.898000,-3.466525,-4.579015,-7.081808,-7.514027,-1.759410,-6.787972,-5.091001,8.865452,-1.983365,-9.638866,-0.406121,-9.661611,7.311068,1.061603,6.072911,-5.422413,-9.944598,-9.691466,3.644735,-6.975243,9.453664,-2.123696,-7.960381,2.983787,-1.868459,6.677913,-0.573290,-4.024965,8.784951,2.414654,3.047285,-7.587631,-0.550817,-6.095750,1.296898,5.084732,1.360021,-4.314170,-0.837667,-5.408299,4.784352,8.325763,0.457266,1.305167,2.033877,4.211262,-0.479413,5.790452,6.289040,7.598481,-3.753519,6.368333,-8.026580,6.602477,-0.766912,-2.977563,-9.653908,1.514000,6.953207,-2.377725,8.968554,6.222328,8.256357,-9.442070,3.568619,9.409036,2.391502,4.467820,-8.495783,-6.942351,9.166460,6.545137,-7.499941,5.911205,2.128252,0.805215,-0.055603,9.331580,2.537126,-4.097968,8.073240,-9.531330,-5.615861,-8.638994,-7.067529,4.255255,8.040202,8.219805,4.898163,-4.029354,-2.355222,3.952175,-8.681029,-1.069489,6.900307,-6.262225,-6.786064,0.979533,9.060385,-2.418342,-3.299343,9.190226,-1.979229,1.362625,2.757645,-7.531714,2.536436,-4.971314,-4.262838,9.414940,5.930943,-6.674926,-1.598542,4.377855,-0.269287], dtype = "float32")#candidate|9577|(975,)|const|float32
var_9578 = relay.var("var_9578", dtype = "float64", shape = (6,))#candidate|9578|(6,)|var|float64
call_9576 = relay.TupleGetItem(func_4948_call(relay.reshape(const_9577.astype('float32'), [15, 13, 5]), relay.reshape(var_9578.astype('float64'), [6,]), ), 1)
call_9579 = relay.TupleGetItem(func_4951_call(relay.reshape(const_9577.astype('float32'), [15, 13, 5]), relay.reshape(var_9578.astype('float64'), [6,]), ), 1)
uop_9580 = relay.log(call_9572.astype('float32')) # shape=(2, 6, 3)
uop_9582 = relay.log(call_9573.astype('float32')) # shape=(2, 6, 3)
func_603_call = mod.get_global_var('func_603')
func_607_call = mutated_mod.get_global_var('func_607')
var_9585 = relay.var("var_9585", dtype = "uint16", shape = (675,))#candidate|9585|(675,)|var|uint16
call_9584 = relay.TupleGetItem(func_603_call(relay.reshape(var_9578.astype('float64'), [1, 6, 1]), relay.reshape(var_9585.astype('uint16'), [225, 3]), ), 7)
call_9586 = relay.TupleGetItem(func_607_call(relay.reshape(var_9578.astype('float64'), [1, 6, 1]), relay.reshape(var_9585.astype('uint16'), [225, 3]), ), 7)
func_1990_call = mod.get_global_var('func_1990')
func_1994_call = mutated_mod.get_global_var('func_1994')
const_9592 = relay.const([8.191478,7.179231,-2.889734,8.498954,8.108145,-4.537368,-7.617974,-5.534598,-8.299321,-8.512645,-6.644076,3.818093,-2.263733,-0.639302,-6.936558,6.373520,5.433068,-1.107617,-8.367424,-4.475383,9.408289,2.925964,-8.833510,-9.264406,-3.096527,7.489846,-3.053945,-4.801031,0.730939,-3.765799,-4.249633,0.543839,0.641511,-4.319480,2.164752,3.644673,2.625714,3.436458,-4.830363,-0.541016,-5.189067,0.600822,-5.815674,-5.341567,-0.315439,2.061411,-9.567606,-8.757302,-2.583789,0.987780,-4.359188,-5.469540,-3.170123,1.386170,-5.232125,5.464989,3.209166,3.064390,-3.532747,5.706886,-2.479518,5.116453,-7.800076,-6.874306,-3.781209,-4.309444,-7.708517,-5.352845,-2.377348,6.624226,8.559997,-8.758083,-3.617876,8.989636,6.886026,5.421582,1.075626,-7.365486,1.600401,7.806646,-0.791743,-6.218654,-8.866210,7.551662,-9.729517,4.400688,4.688990,-3.578804,3.712388,-8.756840,-8.494295,1.285109,4.686477,9.063162,-3.373212,-2.381188,5.823378,-7.104800,-3.840325,-2.705220,-1.107249,-4.526235,6.070861,7.596296,-4.257677,3.691364,-4.463609,2.210648,-0.921049,-9.661979,1.514163,-4.848281,8.132664,-5.088591,-7.715151,-7.909689,3.965347,7.990637,1.130479,0.795974,-6.644756,-9.370079,5.713374,-4.222614,7.011992,5.674013,-8.451688,6.090165,-6.405820,8.549816,-2.495757,3.641170,-9.617822,8.229012,-4.243127,-6.880553,1.508382,8.758479,-6.344535,2.690226,-0.281597,-8.710755,-0.730536,-5.865033,3.696189,5.519699,4.286570,3.879777,4.384726,3.667362,-6.211122,2.497543,-3.505156,-3.128183,-2.512859,-7.406614,-4.307452,9.401067,-5.082528,2.953303,7.677613,-5.381284,-8.565493,6.373996,-8.523394,6.535200,-5.022831,-6.716176,8.057953,3.685348,-4.981068,-0.095077,-3.371235,4.178185,4.345978,-4.681908,-9.900488,9.607713,8.173812,-8.336416,3.721773,-9.807188,-4.027968,-3.650382,6.882587,-9.903112,-6.396386,0.388417,-7.212933,2.952253,8.969245,0.338230,-3.754264,-5.937123,9.075573,2.699799,-0.880609,-9.607430,8.818553,-3.262205,-6.628751,-5.292807,0.847648,9.725343,8.717958,3.951152,-3.320391,-4.720171,8.510812,-7.646063,8.185773,0.253131,9.996741,1.409196,9.575289,-7.597508,-0.121509,-7.980614,-9.237615,8.755455,-0.523786,-7.818833,1.080574,-9.172009,-0.777317,7.125438,-8.935564,8.556647,-7.453214,-4.904991,3.918434,5.699223,-8.167413,6.394050,4.784808,-1.554664,-3.131672,3.203422,9.156081,-5.987789,-2.467293,4.116713,1.859077,7.711071,3.315360,9.102371,-1.607899,-3.828982,-8.102952,1.987702,9.890794,1.799706,-2.643304,7.695154,-2.726873,2.249674,-4.224022,-3.467812,-7.475584,7.280660,1.902671,-2.771211,-1.613080,-6.705495,-5.175027,-0.697966,0.039743,9.516062,-4.955766,5.145272,7.463815,-5.370548,-9.271262,3.844843,-2.936802,-0.895130,1.063305,2.136367,-3.028985,-3.270980,7.715595,-3.684574,-6.712959,-7.577222,-9.594665,-1.182992,6.538271,6.283292,8.486542,-8.848905,-1.080893,5.850853,1.758027,1.253182,7.328317,-5.724583,-2.883185,2.923724,8.103602,-6.394107,-5.969379,2.699575,7.010883,2.004511,2.448397,-1.050810,-6.441813,3.654048,-7.692189,5.351835,-8.844303,-2.035881,-9.212792,8.872287,1.142718,-9.738930,-0.985153,5.075589,-7.668919,-4.708321,-9.474492,2.931205,1.277212,-5.807292,3.006177,0.717776,-6.468031,5.453261,5.362807,-8.507181,-9.910121,-0.934129,-0.011167,-2.262081,-3.424652,-5.345403,4.833320,-2.928147,-9.034663,-3.533860,-0.097757,9.225504,1.573048,-9.953619,9.751134,5.962128,7.275555,4.963584,-8.835094,-8.760739,-4.198018,4.139504,1.567499,-4.374902,6.003619,3.489828,-7.128719,-6.618977,5.274003,7.799563,9.929032,-4.684275,-7.338984,-9.818604,9.979500,-5.925127,3.165467,1.645465,9.366321,-9.168453,-3.325588,-2.678419,-0.798229,-1.908303,6.048611,-4.201153,3.215146,3.362472,-8.006182,-4.138285,5.850779,-7.777700,-5.706110,3.980838,6.829174,-1.406177,2.139655,2.097147,2.910476,-2.216217,8.492684,3.635892,8.516363,-3.854733,-4.541680,-0.354008,2.583428,-6.088197,-0.842574,8.562811,3.113632,-4.689208,7.118346,-7.688333,3.675775,9.990919,-5.678103,5.982960,-4.145377,4.810338,-2.538240,-8.961472,-8.553161,-5.003130,-0.747690,5.866039,9.755925,-0.116055,2.204224,-1.236457,0.800006,1.734183,-9.187156,-8.515957,-5.113850,-3.554314,1.577781,9.482756,4.416524,-8.317594,1.197991,-3.642268,8.552262,8.875627,9.652033,-4.318903,-0.167772,-6.183609,-0.742051,2.333350,7.787425,-2.856930,-1.673295,-0.345484,7.210156,5.639658,-8.565265,0.087715,-2.010329,-2.146901,-4.357715,1.246097,-9.293419,-2.142154,-8.309252,-7.598982,1.142886,-5.607253,-2.697257,0.950827,1.560761,-0.623377,-1.765401,-6.086652,8.056774,2.261375,9.141827,-5.190900,-2.470333,-1.745762,-3.051214,-9.785430,4.116299,2.478984,-0.400828,6.248335,9.127415,7.494104,-1.878739,-3.813837,6.434934,8.888577,-0.829449,-3.219412,-1.814196,6.851283,1.873961,-0.953557,-9.299562,-6.313247,2.469017,1.767741,-4.597024,-0.417420,-5.053280,-2.650260,-9.151273,-5.206654,0.311929,-6.812630,9.824794,-6.159831,0.304995,-5.293040,-0.678614,-3.425595,-0.350380,-3.746317,3.313003,0.936305,2.063743,1.521001,-9.752314,6.219882,-7.527509,9.558701,2.322001,5.720296,2.961084,4.712789,-2.408005,8.027906,5.477929,3.508798,-7.607761,-3.832594,-3.025022,-3.415430,6.441975,-8.836248,6.726272,9.087722,7.007520,4.829620,-4.525825,-8.299596,7.470883,-2.309262,9.071030,7.965628,-1.368182,-8.436081,0.368316,1.948848,-1.241727,-2.077743,-8.674080,-6.272438,-6.229290,-7.772419,-1.740628,-1.774057,-4.663485,-8.920796,-6.512135,2.398346,6.774880,-2.687224,-6.670191,7.791419,3.224641,-9.691946,-4.676863,-7.555717,1.711360,4.266259,6.934035,0.063917,-0.199094,-5.404935,1.437863,-4.946525,8.776260,9.713673,-7.321369,-1.316936,-3.334156,7.289463,9.459962,-9.694134,-7.829468,8.301542,8.282476,8.471095,-1.945709,-1.715677,-2.040184,4.394413,7.938358,5.000981,4.086965,-1.492061,2.338419,-7.721061,3.737036,6.787115,8.840410,2.155386,0.138821,-1.266588,-6.094749,0.282945,1.921017,-1.576058,2.793660,8.801493,8.795376,-2.773337,8.764930,-7.924799,1.772620,7.509003,-6.892035,4.929085,8.613693,3.924368,0.506388,-7.417193,4.481078,5.890150,5.528406,-9.289294,-9.867998,0.806647,5.704295,-6.887968,6.023637,0.530768,7.886761,7.784123,7.655003,-2.159245,0.107549,0.236538,-0.805846,2.376348,5.659083,-2.112117,-4.192209,-0.374882,3.660474,9.615046,-7.752093,-8.068663,3.817804,-7.591116,3.633568,7.432306,-7.413494,8.125674,-1.227345,-1.974527,-6.697400,2.349347,-5.678223,3.278248,8.573819,-3.380831,7.610119,1.537107,-5.430961,7.654322,-1.449151,-3.981174,-9.542950,3.123419,-9.456700,-2.034115,3.676405,9.141479,5.522314,9.721009,4.352820,-9.017632,0.999112,-2.268920,-1.915380,2.669550,-3.691398,6.521953,9.934815,4.641130,-5.874484,2.448084,-8.677204,8.959632,6.864113,-7.447874,-7.642898,8.613075,-0.414729,3.116841,-1.668620,9.214075,-6.459102,5.565938,-5.535671,1.208342,-1.292671,-7.607203,7.681048,1.171534,-3.916369,-1.463867,-2.484294,-9.405650,0.879257,8.463500,-2.670109,-5.271683,6.103221,0.631085,3.513925,-8.208472,1.233402,-1.820667,-1.433490,0.958495,2.781313,1.342674,2.356238,-8.824783,7.658577,-6.937031,-2.668236,-2.282601,-4.342358,0.987573,-9.250460,-4.323978,-7.135723,8.187138,-6.870039,-1.158437,-3.660530,7.729548,9.415624,-8.251706,-4.250583,2.078173,7.756337,-2.360566,3.011353,6.886547,-6.004008,8.654374,-8.727816,5.606457,1.807766,-4.262236,-2.338590,0.743837,8.643930,-8.677106,0.721871,0.256171,-3.121493,-1.039516,4.160464,1.259001,5.206678,0.086140,4.530738,-6.911119,-6.269022,-3.108699,9.803583,-0.365716,0.350949,-1.268550,-2.404989,-5.750859,9.470312,-2.560647,-9.556624,-1.394586,-0.714603,-8.995709,7.666166,-8.905047,1.063747,-8.197345,4.006917,-0.112297,9.254229,3.684907,-9.508672,-8.334998,-7.399958,-0.406682,7.282132,4.087343,-6.064810,7.226316,-4.803281,4.254395,7.279781,-4.452754,9.708547,5.371050,8.574974,-4.116500,-9.745446,-4.852965,-7.858834,-0.272143,9.145752,4.493413,3.204776,7.578575,9.207307,7.045019,-3.355153,1.280117,-7.910763,3.221271,9.496204,2.222702,-1.833299,-4.725605,4.903363,-4.551855,-0.643292,-1.581543,3.870878,-2.174057,6.108777,1.156347,5.469706,8.784882,4.114189,-9.552952,-1.985880,8.607106,8.944430,3.476051,-3.498614,2.733134,-6.017972,-7.928614,-2.699929,-7.857071,-5.229359,2.564715,-0.207563,-9.187502,0.817579,-8.744395,-6.739898,8.728765,6.307568,-9.105971,-2.217547,7.387890,-2.943159,-1.152337,-1.468525,-2.387704,-1.971993,-0.659353,-9.071367,3.408024,2.566957,0.858869,5.800243,3.578881,-4.351440,-4.032902,-2.485633,9.712500,3.043755,9.732488,-3.912736,-3.613130,3.778308,2.915156,2.670462,-1.466158,-3.594481,7.594748,-9.255874,-4.608646,-8.550524,6.972161,-3.169791,4.142427,3.550965,5.984368,-8.862149,-8.230796,4.250827,3.145036,-6.727791,4.448461,-2.800985,-6.860072,-7.005145,2.572773,7.953382,9.434634,0.370383,2.854419,1.586999,-9.791513,7.107481,5.200256,-0.553779,6.567411,-2.270626,5.217118,3.624445,4.504917,-5.524903,0.681515,-4.732404,-1.035430,1.644281,-1.623093,-5.515941,2.631371,8.950017,-6.410188,0.724270,3.632806,0.787346,-7.655293,-3.785486,-7.779166,-9.211813,0.440017,-3.996720,-2.209925,0.311790,-3.009434,3.234534,6.348296,-7.268191,-2.516407,-2.040419,-4.311611,-4.572583,-8.983394,-0.865724,-7.892543,-0.058629,8.325519,0.845717,9.545055,-6.370868,-8.726132,2.646427,1.370104,-2.934708,6.864627,8.601836,-6.493570,6.560711,-9.940874,3.430346,-9.140484,-6.383502,-2.942095,-7.735286,7.795700,2.425005,-1.177079,4.850454,-8.046094,-3.944480,-8.174120,4.093128,6.780999,-5.039731,4.442815,-3.963224,5.891134,6.217272,-3.325861,7.342790,5.561511,-4.252664,2.256305,3.129590,1.302986,-0.629335,0.806753,-4.308040,-6.240365,-9.006685,-4.229286,0.839095,-0.736074,4.963942,-8.212328,-2.608601,2.416709,-5.693419,-7.272878,-7.151082,1.397425,-2.810733,6.205257,7.518780,9.294891,6.231657,9.737175,0.316951,0.904026,-2.192529,-8.719055,3.181795,9.854963,-1.520729,1.281936,5.865424,0.818231,2.392758,-2.451441,-2.266699,6.612474,5.349074,5.399077,-0.577745,4.834018,-9.211724,6.395230,2.332580,1.480206,-2.618041,5.595204,9.099781,0.078533,3.717392,-5.651581,9.997518,5.721751,-9.244003,-4.690666,0.552422,2.609350,9.749520,-4.546370,-0.183638,-1.128358,-0.205112,-8.339978,9.907281,2.995638,-7.079776,-3.848875,1.480576,-0.083687,-6.581619,-5.124651,5.185209,-3.659117,-8.532100,0.888023,-9.927602,6.961695,2.874423,5.690063,-1.944917,6.303173,-6.261985,-5.599899,0.309864,0.345055,8.916717,-0.755380,2.956519,9.024496,9.203095,-9.672632,6.927060,-3.491462,-0.006300,5.222166,-9.442061,4.423555,-9.012319,-5.565124,-1.720149,-2.834999,4.634130,-6.047970,2.120883,-7.755022,4.850057,-3.821526,0.137679,5.403902,-0.194579,-7.496427,-1.571305,3.271721,4.646261,-0.693585,8.042790,-4.417231,7.869167,-4.425465,-1.629944,1.290097,9.992414,-6.843791,3.748374,-9.695760,-9.081956,-6.860406,-3.096978,-0.496942,-4.525321,-8.213142,8.782210,-9.574527,3.582255,8.515498,-7.958536,9.701149,-7.730628,-3.945686,-2.328749,-7.379411,9.854350,9.121288,-6.234240,8.993918,-1.820867,9.863728,-1.670016,8.966952,-7.010490,-4.166576,6.179888,-7.920127,9.831348,4.846358,-8.301774,6.469896,1.178014,3.534697,-4.039481,-8.075473,-1.010350,-8.233989,0.519194,5.365847,-8.728416,-9.968803,0.232714,8.504237,1.013942,-0.271524,-3.386684,7.741374,-3.570896,-0.193677,-6.174606,-0.416170,-7.802131,7.976638,-4.151709,3.350218,-9.082840,-6.183463,-5.684584,4.731014,2.692915,5.992382,8.481669,0.734675,-6.911831,-7.913901,-5.360075,7.094810,6.551258,-4.776343,1.158545,-6.509277,-3.787182,-1.410660,-6.570538,-6.374058,5.377529,-5.229296,3.942019,3.042829,0.386408,-7.035001,-7.780355,-9.834394,-4.035692,3.407926,-9.134272,-3.678229,-2.481238,7.883537,-0.558171,-4.748034,-8.431226,-2.644612,-2.007824,8.455377,0.127765,9.283281,4.700427,7.131135,4.690564,-0.004634,-3.724106,-3.066488,2.990950,9.798733,0.191171,0.555784,-5.222650,2.146635,8.789740,-6.622453,-5.184750,-4.537673,7.407673,-6.313656,-4.869037,-3.576276,2.214758,-1.815060,9.736635,-4.159239,4.024330,-9.044510,3.545446,7.806694,-5.559023,8.060926,2.009958,-7.784300,0.501728,1.086765,6.982276,-6.657297,-3.644067,4.859466,-2.012738,6.889859,-6.712369,-1.080497,9.347458,-4.493607,2.830917,5.705476,-3.209346,-2.542691,-0.951065,7.971851,9.235194,-5.378637,-0.187389,1.836774,5.718522,1.792583,-7.978230,9.824215,8.473867,7.546751,6.975212,3.413301,0.125565,6.055123,-2.729679,1.792151,-2.084098,2.212242,-9.178456,4.875444,5.573800,2.318987,-0.126195,-4.388043,-5.330496,6.431618,-0.011855,0.185114,-4.174388,2.791867,-2.011840,-9.378013,-0.511343,3.894889,7.646568,-8.060932,4.025901,-3.017655,-6.519685,3.701097,4.776875,-0.398907,-9.909520,0.010883,-3.454541,5.397121,4.632619,0.620835,2.237712,-7.108406,0.506364,-1.323667,-9.200640,1.291208,7.164085,-7.483826,6.625710,-6.699759,-0.590050,-5.513804,-5.554507,4.211006,5.984250,0.973221,-0.053256,7.735058,-4.356872,-8.224225,3.778395,1.519062,2.659190,6.432261,-2.737076,-6.597360,5.859741,3.273079,-2.688065,8.877649,4.536871,-8.467366,3.972692,2.913030,7.224188,-1.275967,4.857288,0.174621,4.523999,2.305008,-1.682532,6.143796,-2.352284,6.511226,3.144715,3.782525,0.117740,-1.315912,7.622371,-1.777755,-4.843278,6.266529,-0.190810,-5.534332,7.455943,2.771392,9.333877,4.028006,5.008233,-1.968688,-3.900132,7.333675,0.311307,-8.783398,-1.300823,-6.150945,5.832830,-0.310308,-4.298529,-5.114221,1.970919,-6.935678,-6.655351,-9.623976,-7.851522,-5.915448,-5.580991,4.793705,-4.047046,9.277797,-6.782689,1.633113,2.312218,-4.193729,-6.257316,-0.162947,-3.313475,-5.426913,-8.568384,2.751677,2.585479,1.352611,1.127422,8.303926,-9.778879,-0.052477,-8.750171,6.964049,-3.226220,-0.667666,-3.164035,-7.037793,0.501953,8.325450,3.072733,-3.896488,-2.852104,4.379529,-1.668248,7.415658,7.898076,-9.932027,5.732882,3.029742,6.620892,-2.576752,-6.766286,-1.356713,3.605486,-3.015783,-0.461823,2.869652,-6.452955,2.332642,-1.495023,-1.206073,-9.119533,5.360161,-0.574928,6.390754,-0.886719,5.829708,-1.773895,-5.156640,1.038061,0.996092,-0.091851,-1.244748,3.208687,8.064408,1.969531,9.770537,-8.826948,3.310662,3.438977,-8.435920,5.972313,2.552701,-8.429170,9.648651,-7.375125,3.386261,-0.711237,8.011220,7.060642,6.780097,-2.476030,9.751733,8.029313,9.129681,4.372287,2.763535,3.319006,8.738894,-0.917000,9.688590,0.887032,9.611417,6.116762,7.376302,-5.504030,0.795355,2.478307,6.390058,1.534624,1.429461,7.898550,8.173015,8.219772,-5.398557,-2.872622,-2.104745,-7.293287,3.966464,3.193916,5.890405,6.548479,-0.586087,4.352760,4.273914,7.672342,8.993288,9.630118,8.442322,6.263478,5.305339,-6.728754,3.759423,3.334470,-2.629751,5.318653,-1.723138,-1.036663,4.711329,7.033690,-8.661956,-1.451108,8.297046,4.292580,-9.929490,-7.588860,-4.357073,-3.572170,9.193255,-7.204741,-0.253390,4.215509,-1.368103,7.848775,5.143402,-5.187281,6.272899,-1.725610,2.806576,-1.828046,-4.457828,0.064512,1.901905,5.744493,8.674883,-3.998743,1.652931,2.299355,9.268602,-7.070925,1.034212,-4.566519,7.271936,6.990970,-4.242742,-1.150296,-8.802522,7.190367,7.640455,-1.877908,-5.427241,-0.487496,3.813747,6.158246,6.254778,8.954702,2.938334,0.548153,-9.581807,7.778234,-5.093217], dtype = "float32")#candidate|9592|(1560,)|const|float32
const_9593 = relay.const([6,-9,5,9,3,-3,-9,9,-4,-9,1,4,-3,7,1,-6,3,-5,-7,10,8,-7,4,9,6,-6,-1,8,-5,7,10,4,-9,4,3,8,-9,10,-2,1,10,-5,-8,-5,10,10,5,5,-2,10,3,7,-4,5,-8,3,4,9,1,-4,5,-10,9,-4,4,-6,-3,-9,2,4,10,7,5,3,-9,-8,-2,-3,-6,2,1,7,3,-3,-9,4,-6,1,-5,1,3,8,-10,6,8,-3,6,-4,-5,-3,-6,4,-7,5,-1,-8,6,10,7,-9,4,5,-4,-8,-6,7,-9,3,-6,-10,5,-3,-3,6,-1,-4,-10,4,8,7,4,-7,3,-8,8,-9,-3,-5,-7,6,-7,2,1,-1,9,-4,-10,-5,1,-5,9,-4,-6,9,-10,-3,5,-4,1,-5,3,-3,-10,-7,10,-2,8,3,6,9,-7,5,-6,-10,6,9,-5,-2,1,-8,3,-9,-9,-7,4,-3,6,5,-8,-1,10,-4,2,-2,7,-3,-3,3,7,-6,-6,2,-10,-6,-1,3,-8,-8,2,1,-3,4,-9,7,9,-6,4,-6,4,3,10,-9,-4,7,7,7,-4,-6,-10,-8,-6,-3,-2,-5,1,-4,-7,-7,9,6,6,6,6,5,-2,-6,-7,1,6,-6,7,7,-2,-2,10,7,-1,6,-4,3,3,-6,-8,10,4,-2,7,-2,4,9,10,-8,10,10,6,-2,3,-9,-5,-7,-6,-10,8,3,-6,6,10,-8,-9,-4,2,-3,-6,-7,3,1,-5,-4,3,-5,-2,8,4,-4,-4,7,6,2,4,2,7,9,-4,-3,10,9,-8,6,1,-4,-8,-3,-2,-4,-8,4,-10,5,5,3,7,-9,-9,6,3,-6,-2,-5,6,3,-8,9,-1,3,4,3,-10,-6,-5,10,2,-7,7,-9,1,-6,10,-8,2,6,9,-7,10,-7,-4,3,3,8,-3,-4,10,5,7,-10,-5,3,6,3,3,-10,-7,3,-2,3,-10,10,-6,10,8,-10,-6,5,5,7,7,5,8,-7,10,6,6,-2,10,-6,3,9,1,1,-3,-5,8,6,9,8,3,9,-9,2,2,8,-3,5,5,3,-6,8,-10,2,8,-7,4,-2,5,-4,9,-2,-3,8,5,-5,10,7,-8,9,8,8,-4,-5,-2,7,3,6,6,-3,5,-4,-9,-7,9,-4,-4,7,3,-6,-10,-10,2,-8,-10,-9,-9,4,-3,5,-8,9,3,9,-9,-5,-10,4,1,-10,3,7,-4,9,3,1,5,3,-7,6,-9,-5,-5,1,-10,-8,2,-4,8,6,-9,3,9,4,10,10,-2,-10,-3,-5,-4,6,10,-6,3,-8,-1,8,6,-3,-1,-8,7,2,-1,-1,-1,4,-6,10,2,-4,10,10,2,-4,6,8,2,-1,10,-9,-8,-4,5,6,3,-10,-1,-1,-6,8,9,-5,-7,-5], dtype = "uint64")#candidate|9593|(560,)|const|uint64
call_9591 = relay.TupleGetItem(func_1990_call(relay.reshape(const_9592.astype('float32'), [12, 13, 10]), relay.reshape(const_9592.astype('float32'), [12, 13, 10]), relay.reshape(const_9593.astype('uint64'), [4, 140]), ), 0)
call_9594 = relay.TupleGetItem(func_1994_call(relay.reshape(const_9592.astype('float32'), [12, 13, 10]), relay.reshape(const_9592.astype('float32'), [12, 13, 10]), relay.reshape(const_9593.astype('uint64'), [4, 140]), ), 0)
output = relay.Tuple([call_9576,const_9577,var_9578,uop_9580,call_9584,var_9585,call_9591,const_9592,const_9593,])
output2 = relay.Tuple([call_9579,const_9577,var_9578,uop_9582,call_9586,var_9585,call_9594,const_9592,const_9593,])
func_9604 = relay.Function([var_9578,var_9585,], output)
mod['func_9604'] = func_9604
mod = relay.transform.InferType()(mod)
mutated_mod['func_9604'] = func_9604
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9604_call = mutated_mod.get_global_var('func_9604')
var_9606 = relay.var("var_9606", dtype = "float64", shape = (6,))#candidate|9606|(6,)|var|float64
var_9607 = relay.var("var_9607", dtype = "uint16", shape = (675,))#candidate|9607|(675,)|var|uint16
call_9605 = func_9604_call(var_9606,var_9607,)
output = call_9605
func_9608 = relay.Function([var_9606,var_9607,], output)
mutated_mod['func_9608'] = func_9608
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_9643 = relay.TupleGetItem(func_9553_call(), 0)
call_9644 = relay.TupleGetItem(func_9555_call(), 0)
func_2146_call = mod.get_global_var('func_2146')
func_2150_call = mutated_mod.get_global_var('func_2150')
var_9646 = relay.var("var_9646", dtype = "float32", shape = (1287,))#candidate|9646|(1287,)|var|float32
call_9645 = func_2146_call(relay.reshape(var_9646.astype('float32'), [9, 11, 13]), relay.reshape(var_9646.astype('float32'), [9, 11, 13]), )
call_9647 = func_2146_call(relay.reshape(var_9646.astype('float32'), [9, 11, 13]), relay.reshape(var_9646.astype('float32'), [9, 11, 13]), )
uop_9666 = relay.sigmoid(call_9645.astype('float64')) # shape=(9, 11, 13)
uop_9668 = relay.sigmoid(call_9647.astype('float64')) # shape=(9, 11, 13)
output = relay.Tuple([call_9643,var_9646,uop_9666,])
output2 = relay.Tuple([call_9644,var_9646,uop_9668,])
func_9669 = relay.Function([var_9646,], output)
mod['func_9669'] = func_9669
mod = relay.transform.InferType()(mod)
var_9670 = relay.var("var_9670", dtype = "float32", shape = (1287,))#candidate|9670|(1287,)|var|float32
output = func_9669(var_9670)
func_9671 = relay.Function([var_9670], output)
mutated_mod['func_9671'] = func_9671
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_9708 = relay.TupleGetItem(func_9553_call(), 0)
call_9709 = relay.TupleGetItem(func_9555_call(), 0)
func_1260_call = mod.get_global_var('func_1260')
func_1263_call = mutated_mod.get_global_var('func_1263')
const_9738 = relay.const([7.807346,8.349450,7.193301,-5.804810,-8.041965,-1.734497,-5.175408,-0.349046,8.407161,-6.824070,-0.436877,-4.702561,3.809207,4.776246,8.221174,-8.727066,7.255975,7.913827,6.627138,7.555093,-0.824580,-3.529059,-0.020634,7.484980,-4.726222,-8.053656,-5.891398,8.574016,-7.475963,-6.941989,7.604573,-9.330126,1.675359,8.259899,-9.045709,-8.766148,0.319444,1.701985,4.420310,0.973747,-5.695473,-2.062493,-9.504509,-7.864178,-1.375267,-0.579328,7.217138,-1.957325,-4.454546,1.857849,-3.674895,-0.063167,2.387770,-0.648968,-7.769228,-0.374300,8.631478,2.302870,-7.328685,-9.712074,3.752539,-7.601366,7.344999,7.430090,1.675103,-1.964683,-4.011823,8.152805,-6.523875,-9.862163,1.691174,6.945026,1.040092,-4.395956,-9.411839,2.090134,0.516706,1.247607,-5.615136,-5.381016,5.672929,-5.147573,7.216028,1.698953,5.378068,9.989009,-1.955477,3.500910,9.984021,0.086619,-5.447857,1.822966,3.739043,-0.050324,6.552706,5.185522,-2.350134,-2.254427,6.071798,0.165106,1.007661,7.530089,-0.901577,-5.361257,-6.208358,8.976880,-0.477128,-0.631954,4.523881,4.662714,6.581155,-5.782790,-7.662959,-4.239423,-3.482821,-8.930489,-6.742699,-7.183595,-1.635406,-1.988729,-8.096837,8.765616,3.060842,-0.929323,1.847718,1.284852,-3.222531,-2.154254,9.572782,-9.448359,-0.996728,8.904130,-4.183994,5.550810,-0.531374,3.622253,-8.893118,3.867655,-0.564004,-2.542035,-6.945116,7.265398,9.273194,1.039187,-2.995159,3.299066,7.079015,8.451113,-2.719753,-9.294091,-4.423889,6.702176,1.945266,-6.637029,7.626799,3.578009,6.157626,-0.866265,-5.300493,3.710174,-7.449796,5.314651,0.988040,4.765686,-8.033205,0.450833,-0.167464,5.902308,0.185452,6.728175,-5.771422,-6.775578,3.648557,7.236941,8.724724,-3.963319,9.551747,1.680637,-4.770454,-2.027295,-1.781042,-2.867780,-0.629245,-1.809954,2.695647,-3.024010,-0.982091,6.369820,-3.326278,0.938670,5.124882,7.114496,-9.715863,-0.930477,8.028246,8.090983,-3.977934,-0.006205,4.182428,-4.678540,5.955463,-7.250589,-5.677489,0.027634,-6.739645,-3.509625,1.056132,-1.011180,-4.117402,-5.158462,4.991055,7.957355,6.332375,8.554091,5.061701,-2.890291,-2.492660,-4.775574,-2.436202,0.112329,7.285379,4.433782,9.526868,-7.153009,-9.983739,-6.555669,-9.894784,9.973495,4.110106,-9.294297,-1.325434,2.443062,9.731473,2.111971,-6.900504,6.343271,-1.565291,-1.295794,-2.927844,9.550404,2.174433,5.269173,-6.380456,-6.519911,6.959190,-9.892012,3.271127,-7.406924,8.204003,-5.477009,7.927633,7.534269,-5.966310,9.854677,-4.018032,8.752345,-5.570151,7.043905,4.412772,9.890807,-5.059253,8.061401,1.629680,3.631151,9.225832,-9.210224,8.018689,6.486878,0.880373,-2.148238,6.101140,-6.755613,-6.840909,-5.633763,9.468016], dtype = "float32")#candidate|9738|(275,)|const|float32
call_9737 = func_1260_call(relay.reshape(const_9738.astype('float32'), [11, 5, 5]))
call_9739 = func_1260_call(relay.reshape(const_9738.astype('float32'), [11, 5, 5]))
uop_9756 = relay.cosh(const_9738.astype('float32')) # shape=(275,)
func_5561_call = mod.get_global_var('func_5561')
func_5563_call = mutated_mod.get_global_var('func_5563')
const_9763 = relay.const([1.847794,0.430031,0.734303,6.385080,2.737522,-6.535142,-7.509060,-9.342403,-5.939914,7.651320,-7.166882,1.821042,6.814415,-9.552151,7.317733,6.626502,-3.310102,-2.112986,-2.059201,1.161386,-0.171958,-2.413532,-2.816745,-0.879907,5.166305,2.655160,-7.961431,-5.656099,4.011422,-0.309417,-3.978194,-5.546585,-2.952369,7.944316,-9.482895,3.972918,-8.788539,-8.602553,-9.198261,9.655825,-2.928365,-2.185991,0.893550,1.458521,4.036316,6.117389,8.711048,-0.274952,2.495767,-6.969667,-3.865343,-7.235245,5.521056,6.646303,4.580861,5.911958,7.243578,-5.674772,-0.499869,0.209391,-1.765508,-2.579403,-5.086149,5.738885,-5.460028,-7.017440,9.443142,5.651881,3.846210,3.484970,-4.288549,-8.603162,-6.443501,-0.550500,-2.732363,-6.993975,4.922786,-4.609825,3.070758,4.155517,1.895414,-4.610509,-5.634817,7.877257,-4.744198,-9.539508,-9.057753,-6.883780,2.338976,2.245907,-6.719800,-0.138712,-2.337210,-8.997306,0.849051,9.543762,7.092011,8.780482,-1.838166,2.002522,4.702958,5.647859,-9.631979,-7.241649,-8.495351,-1.923067,3.043702,-4.797781,8.130471,9.811663,-3.312012,-3.119522,-4.131712,6.439484,-1.252180,6.856361,-6.946325,7.310758,-2.460599,0.240833,-8.388782,-1.281412,-4.226664,8.080699,1.908928,-9.572203,-7.481062,0.965444,5.900177,4.684833,2.162370,5.109047,8.751123,-3.706896,1.382327,-6.863176,1.308592,3.574444,-3.490887,-7.442204,-1.286185,5.773867,5.578144,7.204197,-7.772454,-6.603622,-3.149464,1.593128,4.564188,4.859866,5.611994,-2.274742,-1.577726,2.771966,-4.812845,-7.672931,-1.424203,1.077689,-7.002329,-3.335021,1.124643,-0.219490,9.683637,0.321100,-7.629753,6.142792,6.574947,-7.512154,7.694954,-1.609630,6.212645,-2.304081,-0.286878,1.852076,5.015128,2.571639,2.824429,-5.532204,-8.835201,8.053846,-6.704914,-0.417542,-3.461728,-6.836553,-1.314101,9.633720,2.252037,-0.509063,-3.345886,7.713813,0.278128,-4.583160,-5.105110,9.600871,9.362211,2.196047,2.528710,8.650402,9.564780,-9.907118,-3.423056,8.434213,8.243857,3.867147,-4.632778,5.411397,-6.406371,-3.887530,-6.423494,3.886281,-3.031149,-9.107796,-0.433452,7.861361,2.030075,-8.533315,5.033831,1.888702,0.280508,-0.523169,3.279465,5.305311,-6.356704,5.398019,-8.407348,-6.582135,1.191143,-3.628633,-6.577418,4.217607,3.283188,4.843991,-7.131761,-2.268176,1.497091,8.821715,-0.347836,-9.023069,-0.129626,-4.919796,-9.495545,6.423369,6.170894,-5.672910,0.557046,8.221398,4.950959,4.935508,1.988791,1.780139,3.299035,-5.600501,4.022497,-9.600362,-7.539562,-3.144945,2.656936,-2.517063,-8.388030,-4.600178,0.104189,-0.466187,-5.090619,-5.323652,4.865786,-2.596166,-7.348741,0.215509,-6.003148,5.066898,-8.015749,9.433358,5.229654,-8.013232,-1.466222,9.416248,-2.145767,-5.384578,8.677917,-2.827489,-1.596352,5.982585,6.870456,6.910500,-2.065495,-7.785795,-0.175538,-7.840680,-1.100392,5.549134,3.532048,-8.278145,6.631590,-8.427949,3.584257,0.807543,-7.636211,-4.564845,6.485322,1.914717,-7.523012,-9.252225,8.548202,-9.892654,5.962216,5.993458,-5.711099,-3.148955,-6.503333,-4.540514,-4.569709,-2.775720,7.870506,-7.375986,-3.292638,-1.214730,-7.353399,0.645246,-2.059138,2.035844,-5.825176,-1.150678,-3.084842,-8.375839,-1.333783,-9.183760,-4.382595,3.814915,2.859799,4.823236,6.527164,-0.294491,-3.827045,5.933935,4.115966,4.513633,0.909615,-9.098256,-1.842816,7.188513,2.550790,9.609371,-5.775828,0.164658,3.120773,7.062130,3.545559,-5.313926,8.057006,-5.103639,-8.724680,-5.531122,5.549928,6.345835,2.481035,-7.280165,-4.852475,0.736486,-5.433847,-3.256514,3.354924,-3.075080,7.725921,-0.123116,7.193086,5.884629,-9.516203,3.167558,-4.757329,-1.329352,3.515536,-0.174402,-5.001216,-0.919964,8.654274,-7.540597,-8.769805,8.435081,2.009889,6.812986,-4.146124,-7.563163,-1.408311,-9.016700,-0.355073,3.105849,-2.885526,5.642768,3.293517,3.664455,-5.592260,6.024800,4.970079,-3.918208,-0.842298,9.969948,-7.761370,-3.643862,4.255523,7.826642,1.759965,-2.388662,0.493229,-1.632460,0.161967,0.605203,-2.041071,2.086862,3.050184,-9.825685,3.154954,-3.280959,-3.248795,-8.979906,5.309812,2.907444,-5.440556,-1.874354,-1.709398,-6.820488,8.954963,6.261683,-2.854220,8.983202,1.233839,-3.194416,0.643133,-2.132994,6.304905,2.298082,8.437893,6.830063,-6.673750,6.595894,-5.384279,1.587670,7.168354,6.471821,7.982362,7.196946,6.665799,1.982948,-8.881511,-0.824835,-4.046559,-2.673910,-8.470015,-5.001747,-3.130738,7.487436,5.090236,-7.427229,-6.023774,1.623721,-8.552477,-4.748735,-7.257133,-4.075802,7.805375,-2.776439,-4.230003,8.488296,-1.466449,-2.354497,7.633236,1.542444,-4.396953,9.547563,-5.036272,-7.015099,8.546350,-3.671735,-8.146443,-7.948509,0.004104,4.430040,-1.438396,-3.354831,-4.907986,5.451327,1.790112,5.141110,-9.335025,-6.855873,2.116844,2.927564,0.382235,-0.042164,-5.223658,2.322583,5.435109,7.880741,-8.417753,-1.841833,-0.919445,-6.846035,-5.208381,2.760454,1.657246,3.549270,-8.973148,6.321051,-6.225944,6.300375,4.459488,-4.272025,-2.651874,-6.029150,-3.444049,4.567873,-4.714778,-1.691104,3.237416,9.871587,6.332141,2.954422,1.713843,3.655350,-8.755713,-8.066061,3.050540,-5.384677,-0.266609,-4.522227,9.561564,-8.147451,-8.367247,6.927682,-9.840431,-3.162469,5.745561,-8.661012,-2.772343,6.516102,-4.105974,-9.999631,-3.712227,7.393284,7.812084,6.326269,-7.035539,-3.438559,-9.451365,-8.473090,-7.095677,-8.581236,1.169010,-1.637472,-0.124899,-1.576504,2.063228,1.211981,-1.864829,9.776893,-7.866456,-3.390600,-8.135723,1.483022,-1.268691,2.427033,-8.157932,8.405049,-0.664146,-6.291685,7.695414,-8.202009,9.083576,-3.866069,-0.438216,-1.657273,1.801222,4.691468,7.489905,-0.643183,2.038511,0.548289,-9.565681,5.339961,-8.957018,6.054014,-6.137102,7.690248,3.886049,0.718996,3.898577,6.440361,1.541275,-1.387251,3.059542,-6.047168,-2.443630,7.075880,-3.390737,-4.623953,-6.732970,-0.693435,1.580038,-7.315136,-4.340952,-3.097528,7.403501,-2.481660,2.258781,-4.839275,8.278105,6.204103,-8.053632,-3.623459,4.041985,7.271274,2.707535,-7.780219,1.609355,0.120436,4.209088,7.805263,2.272242,8.906525,-5.352018,-1.119203,-9.348367,-2.030598,-2.759550,-6.583509,6.732555,6.532323,2.068826,3.002101,-9.499432,-8.385213,-6.821648,0.798133,8.748040,-1.850629,-0.360003,-9.673401,-8.271111,4.601516,8.378781,-2.288941,6.637922,1.104795,-3.126835,-9.953452,-1.129432,-5.071300,-4.321927,-5.865697,-3.741582,-7.670125,6.165844,8.522854,3.824823,-5.657698,-2.888995,3.200982,-1.468973,7.220586,8.852459,-5.518764,-3.214699,-7.420595,-0.985215,3.871761,-9.405869,3.236429,-6.479618,2.038763,3.539514,-4.515921,3.776659,9.890234,1.424658,-0.138317,-8.929113,-3.208531,6.910335,-1.934900,6.319729,-5.004303,7.182955,-3.814854,-8.423240,5.399611,6.144129,-6.693711,0.401189,8.866315,-4.348013,6.684614,-2.423152,5.079712,-6.790327,0.069969,4.694726,6.480488,2.771930,-0.909982,-4.767769,2.618904,-1.990600,-4.574859,8.743166,-3.780888,4.755508,4.992064,5.683351,1.160510,-7.993470,8.495949,-4.799515,-3.786931,-3.275066,5.846801,-6.552701,5.994383,-0.697916,-5.250403,0.400636,8.441931,-7.556452,-5.576781,-5.740134,2.493519,-6.340582,-5.684988,-7.503405,-3.180761,-2.111405,7.632516,-6.301505,5.307029,-9.532103,-7.278522,-5.457760,-7.965040,-5.791064,-2.216190,-7.401888,1.381041,-8.737874,0.793913,-5.695151,-1.920051,8.581750,2.693217,-7.664759,6.298268,-9.415541,-9.997561,1.658894,2.385104,6.491339,-6.883334,-2.789286,-9.631043,-3.994714,2.766388,7.983808,2.932061,7.543191,-3.457265,7.463759,-1.923208,4.085113,-8.434196,3.557072,1.268847,9.789342,-9.000215,0.694534,-9.443791,-7.902436,0.288060,3.571105,-1.939058,3.654909,-8.567766,-8.214796,4.780621,5.325353,3.183737,9.178783,4.443199,-9.851740,-2.721901,-0.885064,9.604953,-0.595116,-5.366756,0.178244,-5.421750,0.590682,5.584066,9.276876,-0.636725,-9.261642,9.939149,-6.403784,-5.638939,-5.119252,-3.189547,-6.486317,0.932864,-8.823839,-8.703591,9.055370,5.889485,-2.820351,-2.944095,4.135057,-4.607215,-8.780819,2.567970,2.176361,-1.291755,5.968869,-2.665711,-0.956526,-2.602158,-7.717158,3.520275,-6.930322,-3.133675,6.881120,-4.522385,2.666731,2.516726,6.214948,-3.107613,-9.344116,-9.845842,-4.416280,6.949335,3.140920,6.054066,3.967823,3.635072,1.231818,-7.927053,-4.630742,8.308228,1.384533,-3.859416,-3.413654,0.922869,0.310550,-0.446519,4.260152,-1.741418,7.279387,-0.858326,-5.235905,-7.075623,8.153749,8.707135,-9.619188,-9.814666,7.237596,-4.565906,0.602671,-8.366970,5.604342,-6.955490,2.509459,6.861431,3.863831,1.965862,3.361450,8.402447,-5.001937,9.325606,-7.229528,-0.894688,-5.469911,4.692326,7.378572,-7.820156,-4.186126,0.372012,5.795777,-6.217668,-0.334690,2.085596,-9.010979,-7.050281,2.434288,2.158947,4.025036,5.190658,-7.331801,-1.849964,-5.818182,-8.887510,1.986110,-1.509420,8.263175,4.452812,-0.358452,0.154376,-2.787925,3.418964,9.749512,1.888264,4.346844,-8.916637,7.003481,1.256839,7.570121,-8.991666], dtype = "float32")#candidate|9763|(910,)|const|float32
call_9762 = func_5561_call(relay.reshape(const_9763.astype('float32'), [7, 13, 10]))
call_9764 = func_5561_call(relay.reshape(const_9763.astype('float32'), [7, 13, 10]))
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
var_9767 = relay.var("var_9767", dtype = "float64", shape = (90,))#candidate|9767|(90,)|var|float64
call_9766 = func_2853_call(relay.reshape(var_9767.astype('float64'), [5, 9, 2]))
call_9768 = func_2853_call(relay.reshape(var_9767.astype('float64'), [5, 9, 2]))
func_8329_call = mod.get_global_var('func_8329')
func_8333_call = mutated_mod.get_global_var('func_8333')
const_9772 = relay.const([[1,1,-4,3,-2,-2,2,1,-8,-7,-6,-8,-3,10,2,-9,6,10,-8,1,-9,-8,6,9,6,6,-2,-10,7,-10,-4,1,-8,1,3,8,4,4,-7,-3,-1,-6,5,10,8,2,-9,-3,5,3,-5,-1,8,8,-10,-10,-1,-6,4,8,-5,5,3,-1,3,6,6,4,5,-9,2,10,6,10,3,4,-8,4,-7,2,8,8,7,9,-6,9,-8,3,-4,-5,-1,-4,8,-2,10,4,2,-5,-6,3,1,-9,-8,4,-3,8,10,5,-10,2,1,-10,-10,3,9,7,7,-10,8,8,5,-7,8,10,9,7,-1,-4,-4,-8,-3,3,-3,-7,-7,4,1,-6,5,6,-1,3,-4,3,-4,-10,-8,-6,-8,-1,8,-8,9,7,-1,8,-7,-3,10,6,-9,-10,3,-5,9,-5,-1,7,6,-2,6,-8,2,2,7,5,-8,2,-1,10,1,8,-10,-2,8,3,5,-6,3,9,8,8,9,7,7,9,-5,-1,-3,-1,-6,-4,6,-8,-8,10,2,-1,-10,-10,-8,-4,-9,7,-8,2,3,-7,-6,9,-3,-9,9,-8,10,3,-9,2,5,-10,10,-9,8,3,10,-7,10,-9,-7,7,7,7,8,5,-1,-6,-9,-5,10,2,-9,-4,6,-10,-2,-4,7,-8,3,10,-10,-4,-3,7,-6,-5,7,-3,-5,-10,10,-10,7,5,1,3,-4,-8,7,-10,4,7,-7,8,3,-10,2,-1,-6,-9,2,8,-1,2,-4,1,8,-1,8,6,7,-8,6,10,-8,10,-2,-5,-5,-3,9,-6,3,3,-7,5,-7,-5,-4,8,3,-1,6,-2,-3,1,10,-1,7,6,-7,9,4,8,6,-10,-3,6,7,2,4,3,3,6,-10,-3,3,-10,4,7,-5,1,-5,9,6,3,-7,5,-10,9,3,-6,3,-7,7,9,8,2,-8,7,-6,-7,7,-4,-10,9,-4,4,-5,4,-3,-4,4,6,8,-7,6,-9,3,3,4,-1,-9,6,5,5,-5,-1,-6,-1,4,1,4,-4,1,4,-9,6,1,-9,-3,6,-3,7,8,4,-9,-2,4,2,3,-1,-1,8,10,-10,-4,-3,7,-6,9,5,-6,-1,-2,6,-6,-8,3,-1,-7,-7,9,-8,1,9,8,8,-10,-4,1,-10,6,-6,-5,-3,-7,-3,-10,3,7,-1,-8,8,-7,4,2,-5,-9,-9,-7,7,3,-2,-1,6,1,-10,6,8,-10,-1,4,1,8,-2,-2,-9,-8,-2,8,-6,5,7,-6,7,7,8,-6,9,-9,-9,9,-10,8,8,9,-4,-10,6,-6,-9,10,8,-6,-10,-9,10,6,7,-1,2,6,4,7,-1,-2,-7,10,8,6,5,-8,3,4,-8,4,-4,-3,8,8,-4,4,3,-9,-3,1,-10,2,1,-7,10,-8,-4,5,-3,-3,-3,10,-2,9,6,1,8,-1,-9,9,-2,6,-10,-7,-3,-1,9,4,-10,5,4,-2,-1,-3,-3,-2,1,-10,8,-5,-10,-9,8,10,-10,-4,3,7,10,6,2,8,-7,-4,8,10,-6,6,-4,-1,-1,9,10,-2,5,4,8,-9,-10,4,10,5,2,-9,-8,-3,5,7,-7,4,6,9,9,1,-9,-9,-8,7,8,8,-8,6,-4,-9,-1,5,2,-1,10,-2,10,9,10,10,4,3,-1,-5,2,-8,-10,10,6,3,-7,8,10,5,-3,-7,3,1,9,-10,2,5,2,-4,-1,8,-3,3,-4,-3,-5,6,-10,-3,2,3,-5,6,8,-8,8,-4,2,6,10,-5,-10,3,7,-3,3,-5,-6,6,2,10,-9,10,-4,1,6,8,-6,-7,9,6,-4,8,3,-4,9,-6,10,2,-10,7,9,-3,-6,-2,8,7,-10,-4,1,9,-3,8,10,-7,-5,8,2,10,2,5,1,-6,10,-5,9,3,-8,-5,-3,1,-1,-3,-2,2,-9,6,10,-1,9,3,10,1,-9,10,-1,1,2,2,10,-8,3,-9,3]], dtype = "uint16")#candidate|9772|(1, 780)|const|uint16
call_9771 = relay.TupleGetItem(func_8329_call(relay.reshape(const_9772.astype('uint16'), [13, 6, 10]), relay.reshape(const_9772.astype('uint16'), [13, 6, 10]), ), 0)
call_9773 = relay.TupleGetItem(func_8333_call(relay.reshape(const_9772.astype('uint16'), [13, 6, 10]), relay.reshape(const_9772.astype('uint16'), [13, 6, 10]), ), 0)
output = relay.Tuple([call_9708,call_9737,uop_9756,call_9762,const_9763,call_9766,var_9767,call_9771,const_9772,])
output2 = relay.Tuple([call_9709,call_9739,uop_9756,call_9764,const_9763,call_9768,var_9767,call_9773,const_9772,])
func_9778 = relay.Function([var_9767,], output)
mod['func_9778'] = func_9778
mod = relay.transform.InferType()(mod)
var_9779 = relay.var("var_9779", dtype = "float64", shape = (90,))#candidate|9779|(90,)|var|float64
output = func_9778(var_9779)
func_9780 = relay.Function([var_9779], output)
mutated_mod['func_9780'] = func_9780
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_9848 = relay.TupleGetItem(func_9553_call(), 0)
call_9849 = relay.TupleGetItem(func_9555_call(), 0)
output = call_9848
output2 = call_9849
func_9853 = relay.Function([], output)
mod['func_9853'] = func_9853
mod = relay.transform.InferType()(mod)
mutated_mod['func_9853'] = func_9853
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mutated_mod.get_global_var('func_9853')
call_9854 = func_9853_call()
output = call_9854
func_9855 = relay.Function([], output)
mutated_mod['func_9855'] = func_9855
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_9923 = relay.TupleGetItem(func_9553_call(), 0)
call_9924 = relay.TupleGetItem(func_9555_call(), 0)
func_3399_call = mod.get_global_var('func_3399')
func_3403_call = mutated_mod.get_global_var('func_3403')
const_9942 = relay.const([7.496956,8.851572,8.630835,3.226912,3.746071,0.281477,-7.245291,8.982603,-0.112832,-1.384903,-6.201610,-7.748787,-5.523463,-5.703245,7.534478,-4.739896,-9.361164,4.901897,8.544197,-9.492151,-8.389932,4.355367,5.184760,6.913043,7.368458,2.851279,6.475063,-9.063812,3.332371,0.121324,-6.280851,8.922160,9.615611,-2.864122,-1.106578,-1.896403,1.138823,2.837008,-7.506252,-8.662302,-7.302376,7.276996,-4.320039,0.669520,-3.012333,-8.574586,9.656184,-4.069781,2.767327,7.108693,2.524017,-4.661653,-5.465579,0.687689,-8.475258,-7.434839,9.129325,3.135053,9.242704,1.905443,0.327708,-0.277229,-3.965867,-7.287139,-0.371652,9.235304,8.866737,-6.764139,4.577178,-9.642544,2.248781,1.804113,-6.653628,-6.709526,4.962096,-3.114998,-6.211650,4.066861,2.441493,-0.690785,-2.989636,3.049362,2.481740,2.362099,7.682877,-3.145774,-4.650105,9.903786,-4.633505,-1.919223,-5.601667,9.085835,-0.750198,8.634084,-6.625527,8.160940,4.643061,-0.075543,-5.538336,1.108544,3.992079,-5.164522,6.678807,-6.241671,-3.037748,-8.139546,8.562293,6.383907,-5.490020,7.522352,-7.626856,3.492239,1.905406,-5.010055,4.531521,6.113855,8.326663,-8.532996,-1.371470,5.661457,-9.626877,8.082069,7.832961,2.247360,8.879242,-0.176751,6.337507,4.831856,3.865595,-9.177214,1.429717,5.305901,6.099972,-0.937415,-5.050835,-4.977934,3.088498,7.007808,-4.967516,-3.624066,1.560325,5.971803,3.660434,-8.960954,-2.214771,3.985592,-4.982492,6.793596,6.031413,6.274517,3.719485,-7.013185,4.427641,3.360903,-3.572899,8.366367,-9.580962,-6.923495,9.438568,-8.991832,6.076476,-1.702722,-5.274209,8.393414,3.909187,5.376535,5.891882,2.166414,8.296799,-6.489153,-3.224747,-7.773748,3.836593,-6.378303,2.523437,-0.031208,0.342655,-6.620582,-4.539751,1.218082,3.196772,-1.459187,-5.903820,9.432918,-3.864171,5.390841,-3.262542,7.458736,-5.139003,-7.073931,-6.491699,-9.002032,3.435347,1.815966,-4.907930,8.297535,-3.754327,-7.249614,0.893640,-0.125516,-5.996609,5.747885,6.860370,-1.725686,-1.396204,3.305431,1.494159,-3.944880,6.178965,3.467426,-7.276909,0.872610,-2.191439,5.257537,3.068173,-1.201483,9.568248,-2.118135,-4.815428,-3.929181,-2.503133,-6.087323,2.199761,-2.924148,-3.184259,6.846360,8.953989,8.620943,-1.800560,3.692865,0.764999,6.732715,1.619466,9.264983,-6.698086,5.805184,-6.117226,0.865627,-2.080579,-3.581537,4.787032,-2.529469,-6.889754,-6.537863,-8.058082,-2.747876,4.808991,7.973503,-0.792504,2.856718,-8.737813,7.951475,-2.964985,3.574623,-8.112332,8.757123,6.193110,-9.367724,-6.528969,-9.821949,5.774316,-2.552824,6.212051,3.750762,-3.451713,-3.557973,9.166646,1.853889,-8.952623,6.438110,-1.203769,-2.730653,-1.761153,6.179549,-3.097013,8.569629,9.319515,-0.996608,6.051665,-0.562638,-1.351408,3.362630,-4.525641,3.133085,7.018196,3.665176,-1.475259,5.835902,2.732266,1.835046,-6.065888,4.663299,-9.033888,-3.479710,5.335562,2.442905,-5.752343,-8.397033,-2.081276,2.688912,-0.819134,1.437824,4.069372,0.147324,-0.665788,-1.318491,8.859696,-2.258011,7.180248,-5.449958,7.801071,7.676192,-5.536681,-7.406240,1.968140,-7.108893,-7.530592,-7.569740,-6.753228,-5.932770,-1.994504,9.840390,-1.449225,4.755461,7.178951,4.664249,-9.623592,-5.545272,-5.104577,5.888137,-2.495059,4.762384,7.115626,-4.046609,3.418847,-2.780172,9.959705,1.176819,2.143993,-9.254203,-3.138172,4.233009,-1.343730,7.332000,-9.206184,-1.118714,-5.274086,-2.084365,-5.370674,0.299356,2.118244,1.404113,-1.307315,9.398795,-0.658402,-5.036209,7.333989,4.585835,9.624910,-0.639043,9.188785,-1.550195,-8.177131,7.586132,-4.047132,-0.630259,2.253740,-8.878868,-8.890794,2.659009,0.612113,-2.330422,-6.226212,-4.352894,-6.748282,3.606132,-4.502796,-4.109792,-2.915062,3.587156,-6.104113,6.361747,7.403666,5.973435,0.762829,-0.861777,-0.456316,2.366447,-1.416284,-7.705579,-6.037679,-6.493810,-7.224495,0.462535,1.742799,9.070333,-2.185523,0.914359,-7.230901,1.236818,4.346939,4.628615,-8.909564,-5.757945,-4.744957,-8.827079,5.036045,0.086142,8.179389,-5.105996,0.619396,-1.351814,-4.736079,-2.677626,0.158025,-8.051428,4.818376,-9.241519,-7.427536,1.790636,-1.272155,7.141968,-5.020272,4.478212,9.839345,-5.463714,5.973581,-2.874629,-2.718364,-2.852369,1.920472,7.513669,-1.919734,-8.683827,-1.270412,-9.605732,3.421083,-4.626296,-0.405389,7.196093,-5.959820,3.080966,7.811637,3.882245,-4.537454,3.088780,0.959843,-5.089322,-7.247300,-2.874082,-2.004919,8.987577,7.427974,-1.121690,3.689872,2.783965,1.066348,0.412684,8.016882,6.003997,3.668214,7.312208,5.020152,-8.653766,-9.416613,-2.808844,6.526996,7.235092,-5.472371,9.531065,6.749261,9.010774,1.430381,3.463362,0.702010,-8.966286,6.246006,0.685038,8.323162,2.990930,0.951940,4.674706,4.141626,7.127585,-9.720012,-8.685885,4.429711,-6.577937,-2.912323,0.081264,-4.201785,-8.201644,1.051684,-0.435581,-7.366895,8.230610,-6.233926,-2.114247,9.538520,7.690830,-6.884882,3.158055,4.458749,-8.534389,-8.729888,8.230799,8.082054,-7.115277,-5.033138,-9.928258,-4.437684,-7.406556,-9.911590,3.077859,-2.636488,0.610028,-5.294389,-0.962234,-1.839758,4.668800,8.543750,-9.104294,7.177826,6.737874,8.280214,-1.322826,6.112068,-1.171045,5.783731,7.279505,-4.486169,2.892345,-5.337072,-3.586076,-0.115319,0.872370,1.144152,7.897405,-7.591205,-9.836309,-3.866485,-8.041443,1.061826,9.669532,-8.611351,-8.350603,0.257495,2.772166,6.241278,-5.887810,3.218010,2.992246,3.982633,1.128940,-6.094437,-0.852167,-0.330677,-7.793629,5.936184,7.565813,5.070879,8.151203,1.369781,-8.296988,-8.032493,-4.995184,-0.339011,-6.228096,-3.400327,0.273762,1.205636,8.858859,-0.460343,9.581090,5.279152,1.960668,-8.435093,4.713472,5.977039,1.196949,0.088396,-6.287616,9.741145,7.262754,-8.311635,-9.444100,-0.096908,-5.962496,-0.165628,3.927441,-0.684067,-0.678958,2.030386,-6.168115,5.830986,-1.936996,5.570311,-6.667386,-0.383324,8.307414,-4.722327,-8.265242,1.647636,-2.653856,7.518445,-3.382381,-5.338536,-2.353021,-6.374016,9.373602,-9.208888,-1.650875,-6.016181,8.641801,1.373893,6.893183,-0.300189,-0.995090,-6.539624,8.185416,-2.806361,3.199913,-9.373751,-2.085091,-7.312505,-2.966530,-4.332341,5.932998,1.570203,8.140708,2.149658,3.882505,-6.328363,5.004683,-8.638269,-5.671817,-9.595321,4.900534,-1.795635,-9.894909,5.841447,4.829958,1.590954,-7.830781,9.982187,6.495989,1.539921,0.307156,2.583905,-9.295860,6.884776,-1.201591,0.916639,2.877399,-8.428235,-8.225295,-9.607108,6.439919,-3.836578,6.967695,6.340974,-6.463084,2.984499,-6.217526,7.688914,-3.009441,-0.733094,-8.528481,-5.083482,8.900848,7.237374,2.891384], dtype = "float64")#candidate|9942|(672,)|const|float64
call_9941 = relay.TupleGetItem(func_3399_call(relay.reshape(const_9942.astype('float64'), [14, 6, 8]), relay.reshape(const_9942.astype('float64'), [14, 6, 8]), ), 1)
call_9943 = relay.TupleGetItem(func_3403_call(relay.reshape(const_9942.astype('float64'), [14, 6, 8]), relay.reshape(const_9942.astype('float64'), [14, 6, 8]), ), 1)
func_4295_call = mod.get_global_var('func_4295')
func_4298_call = mutated_mod.get_global_var('func_4298')
const_9948 = relay.const([-1.134170,1.102486,-0.206338,-3.800342,-0.994611,-1.174021,9.727167,6.028149,-8.480270,-1.009661,2.554449,-8.582888,-0.092329,-9.040235,6.951101,-8.797464,0.874261,4.312604,9.502553,-6.190720,-4.047808,-9.968913,1.487220,4.909367,3.494991,1.773063,0.589807,-6.752124,-5.464678,1.056431,-3.967743,3.962150,2.225322,9.199955,-3.541477,6.975026,8.033152,-4.003680,4.472369,-8.833115,2.349498,-8.131554,7.668885,4.807492,4.733978,-3.923413,-1.414258,0.844339,-3.807327,-3.026806,-2.328093,6.362482,-5.068782,-5.724712,-3.788942,-1.985657,-1.691585,-6.435171,3.782866,4.570072,6.443106,-4.466170,1.703485,8.775145,9.274379,-1.045214,9.230174,0.174739,2.944970,-1.596425,-3.473478,-4.175225,6.834122,-3.141109,-5.590790,9.545014,0.414717,0.339552,6.107385,-1.371094,-0.212451,-8.295534,2.371882,2.046860,8.332239,-8.366420,3.709470,3.115164,3.555897,6.280465,9.000823,0.103687,2.726702,-4.105923,-5.621758,3.545772,3.040196,-5.605940,4.748262,-4.411283,1.081161,-6.618393,1.471133,7.585004,9.998703,-9.219681,4.022624,-6.116452,-4.948492,3.155799,4.024235,1.282417,-0.414267,0.520794,-6.316850,7.174305,-6.397514,-6.799189,2.146530,0.398890,-4.635319,0.567845,8.724489,-0.060873,-3.493751,-4.633139,-8.556794,9.512595,-5.833786,-0.702238,-2.984891,-5.973903,8.221636,-8.810546,7.360406,-4.415091,1.882118,0.338683,8.700029,-4.591069,-2.452127,7.083960,-9.388822,7.608828,-1.125491,0.687261,5.833859,9.641132,-9.933996,5.770143,7.656079,-7.440641,-2.896476,-7.946600,4.071624,8.838779,9.891459,2.530966,0.177878,-4.505294,-1.239055,-0.492664,-7.696439,3.075165,6.198649,-0.430454,-1.376173,1.279330,-9.590065,-0.977137,-8.430145,0.231399,-7.382802,-0.377764,-6.727168,7.952706,-3.272223,-2.656536,-0.762159,-1.942701,8.611692,-9.128601,4.951762,-1.841502,1.920961,4.407680,-1.138835,-1.642830,3.670127,1.133138,3.416149,1.516103,-8.968813,-4.377124,8.592379,9.156634,0.302403,-1.344783,7.090706,7.694239,6.757075,6.813273,7.189135,-5.798774,-8.826012,-9.345679,1.878170,0.058202,-1.262109,-9.334608,-0.249647,-0.523108,5.738074,-8.316436,0.229745,-7.527206,0.380832,-5.053199,5.716986,3.532884,-6.171410,0.492710,7.697058,-2.412499,0.266515,9.620557,-3.735709,3.398091,-0.654541,-4.311455,4.268898,-5.501723,-8.569349,-5.773011,-1.286681,5.440670,2.802016,-5.720981,-3.319857,-8.144240,4.761016,5.752047,2.835116,0.533847,0.532473,4.469045,-1.013606,3.444685,5.633073,-6.028733,7.511940,-4.343177,4.725676,-5.555668,8.975629,4.195215,-5.451780,-4.896814,3.772878,-7.211254,-3.179229,-1.945196,4.081800,3.764660,5.335204,-3.588858,-7.431200,2.534032,2.908973,2.212550,4.094552,2.950864,9.246359,4.377885,-4.918885], dtype = "float32")#candidate|9948|(275,)|const|float32
call_9947 = relay.TupleGetItem(func_4295_call(relay.reshape(call_9941.astype('float64'), [672,]), relay.reshape(const_9948.astype('float32'), [275,]), ), 4)
call_9949 = relay.TupleGetItem(func_4298_call(relay.reshape(call_9941.astype('float64'), [672,]), relay.reshape(const_9948.astype('float32'), [275,]), ), 4)
output = relay.Tuple([call_9923,call_9941,const_9942,call_9947,const_9948,])
output2 = relay.Tuple([call_9924,call_9943,const_9942,call_9949,const_9948,])
func_9953 = relay.Function([], output)
mod['func_9953'] = func_9953
mod = relay.transform.InferType()(mod)
mutated_mod['func_9953'] = func_9953
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9953_call = mutated_mod.get_global_var('func_9953')
call_9954 = func_9953_call()
output = call_9954
func_9955 = relay.Function([], output)
mutated_mod['func_9955'] = func_9955
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mod.get_global_var('func_9853')
func_9855_call = mutated_mod.get_global_var('func_9855')
call_9962 = func_9853_call()
call_9963 = func_9853_call()
func_1180_call = mod.get_global_var('func_1180')
func_1186_call = mutated_mod.get_global_var('func_1186')
var_9965 = relay.var("var_9965", dtype = "int64", shape = (1950,))#candidate|9965|(1950,)|var|int64
var_9966 = relay.var("var_9966", dtype = "int8", shape = (672,))#candidate|9966|(672,)|var|int8
const_9967 = relay.const(6, dtype = "uint16")#candidate|9967|()|const|uint16
const_9968 = relay.const([-8.696498,-0.926424,2.181364,3.174190,0.857690,2.060500], dtype = "float64")#candidate|9968|(6,)|const|float64
call_9964 = relay.TupleGetItem(func_1180_call(relay.reshape(var_9965.astype('int64'), [13, 15, 10]), relay.reshape(var_9965.astype('int64'), [13, 15, 10]), relay.reshape(var_9966.astype('int8'), [1, 672]), relay.reshape(const_9967.astype('uint16'), []), relay.reshape(const_9968.astype('float64'), [6,]), ), 0)
call_9969 = relay.TupleGetItem(func_1186_call(relay.reshape(var_9965.astype('int64'), [13, 15, 10]), relay.reshape(var_9965.astype('int64'), [13, 15, 10]), relay.reshape(var_9966.astype('int8'), [1, 672]), relay.reshape(const_9967.astype('uint16'), []), relay.reshape(const_9968.astype('float64'), [6,]), ), 0)
func_5509_call = mod.get_global_var('func_5509')
func_5512_call = mutated_mod.get_global_var('func_5512')
var_9971 = relay.var("var_9971", dtype = "int64", shape = (1350,))#candidate|9971|(1350,)|var|int64
call_9970 = relay.TupleGetItem(func_5509_call(relay.reshape(const_9967.astype('int64'), []), relay.reshape(var_9971.astype('int64'), [15, 6, 15]), ), 1)
call_9972 = relay.TupleGetItem(func_5512_call(relay.reshape(const_9967.astype('int64'), []), relay.reshape(var_9971.astype('int64'), [15, 6, 15]), ), 1)
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
const_9977 = relay.const([[-9.675111,-5.876413],[-9.847044,-6.571514],[7.344124,0.110064],[-6.735962,-3.745096],[9.833618,3.240337],[-0.887335,-4.912511],[0.772540,8.684013],[-1.800514,7.132644],[0.669044,9.449831],[-6.811525,6.684049],[2.910291,-5.293173],[-8.555933,4.072134],[0.703980,-0.605311],[5.454904,0.719264],[9.725407,-3.059647],[-4.185415,-8.171870],[-2.075471,6.616636],[-4.187348,-9.290607],[-8.414520,7.403754],[8.411110,-1.911578],[6.535988,-1.475076],[-2.220068,-5.172316],[0.432255,0.509834],[-6.070133,6.574610],[-4.191267,1.878492],[-3.763948,-0.724481],[-1.981745,0.138206],[-4.042256,-7.038966],[-8.620759,4.488622],[0.011436,-6.636731],[-1.804417,-2.134463],[-1.307626,5.384760],[5.418442,6.784415],[-5.391287,-4.120166],[9.463081,-3.474087],[4.242730,7.107661],[-9.231225,-3.460699],[-3.050466,-1.030207],[5.502101,7.190064],[-6.244818,-2.243509],[8.443964,1.015209],[5.310524,-1.261198],[9.122080,1.052728],[-9.019243,8.581568],[0.605243,-4.915675]], dtype = "float64")#candidate|9977|(45, 2)|const|float64
call_9976 = func_2853_call(relay.reshape(const_9977.astype('float64'), [5, 9, 2]))
call_9978 = func_2853_call(relay.reshape(const_9977.astype('float64'), [5, 9, 2]))
func_4948_call = mod.get_global_var('func_4948')
func_4951_call = mutated_mod.get_global_var('func_4951')
const_9987 = relay.const([[4.846986,5.670130,1.625446,5.147513,-7.693859,1.192351,-2.631053,-8.758875,-5.641316,-0.249820,-5.192089,5.210904,2.352620,0.474456,-9.717810,3.947077,-3.794815,2.312976,-4.369639,6.822158,-6.917716,-7.238020,-9.992827,-6.779865,4.239675,9.260869,2.244670,-1.861305,6.858320,0.096010,-4.557119,-4.144979,5.643346,-0.510765,-5.606707,-2.795118,-3.228803,4.612232,-6.306434,-1.930365,-3.949335,1.684457,-7.005848,-6.589828,6.049759,0.588469,-1.726855,-7.539535,2.805370,-1.695078,-9.010497,4.986431,7.933452,4.761813,-5.852640,1.165065,7.660232,3.747744,6.835506,-3.987917,1.232805,-3.814726,5.885647,1.509087,3.627496,-6.686732,-0.150218,-2.469853,-2.959113,7.957470,2.769539,3.038502,6.415707,-6.164081,-2.844703,-6.001035,-3.128840,7.112675,1.900675,7.135124,-4.869168,4.825207,2.545068,-2.167946,1.388127,-5.023528,4.845624,-5.934780,-4.972951,3.446552,5.193108,-0.255895,-5.544083,7.552865,-1.121689,-2.067247,-0.500796,-3.725309,9.249327,3.941550,-6.528283,-6.615638,3.129513,9.124879,0.970402,-3.464980,-9.870472,1.080301,-3.707033,-4.963761,8.560985,-8.626512,-7.309979,0.914765,9.683254,3.321426,-6.253358,3.182007,-0.973539,-2.839721,8.894004,-8.678736,2.821903,-6.075775,-7.705495,3.809019,4.169800,2.275724,-5.565672,-1.699563,3.539519,6.098294,4.372964,9.820174,6.116333,9.714595,-2.111116,-3.951101,9.730432,5.258747,-2.364761,5.924784,-8.195681,5.910412,3.125203,6.224116,5.413181,3.490069,4.833091,-9.673785,-1.314936,-2.675113,9.603962,-6.823484,1.304661,-0.151508,-8.391404,-4.508661,-8.415178,6.840527,0.340145,-2.900327,-6.060501,8.695582,-3.567352,-5.582149,5.813044,8.281668,-3.932629,-6.668730,-6.654062,2.812279,-3.571533,8.334841,6.166566,8.730269,7.899279,-1.892766,1.862128,-4.052684,1.459570,-5.418813,6.577284,-3.827601,0.365565,5.601282,0.684623,2.691974,-7.588224,1.866937,6.634486,-7.084279,-8.091160,-6.342267,-3.019529,-6.894204,-7.559918,0.521369,-0.185831,4.465975,-2.066402,3.966180,5.416251,4.253246,-1.839141,8.950002,0.271022,-5.284307,-4.948715,4.237268,0.256845,2.591502,-5.370564,6.871438,-6.806748,8.953545,-4.437498,-1.300730,7.460628,2.049163,-7.151634,1.384770,4.996988,-6.306107,5.324581,-2.619734,6.168907,-0.152218,-3.018416,-1.895330,-2.777335,8.117445,9.032839,-0.562817,-7.286744,-8.859187,-6.464618,-8.667751,7.064999,-6.420466,0.114972,-8.768517,-2.950603,-2.462357,-4.092702,3.597157,-2.095119,6.313395,-0.592984,-2.885605,-3.168916,-3.899268,6.695886,-8.462501,1.939236,4.083994,5.924381,7.713773,-5.242264,0.446070,-1.329129,1.224298,8.878600,-1.884478,-5.976840,-0.003876,3.244384,0.194222,-5.836439,-4.948917,-5.352049,-2.035578,1.571422,6.901103,7.630220,-8.555629,1.615237,5.678157,5.342984,8.899593,-3.587562,-4.373857,-0.245242,-7.896952,7.932063,-1.737335,-5.815968,3.943013,-5.760110,1.277767,4.849010,1.829930,6.271000,-7.198797,8.988390,-6.331455,4.607722,8.005248,0.924374,-2.578181,-3.149100,-9.235661,3.340768,-9.447993,1.361343,-9.416835,-3.039023,5.933732,-5.579481,-3.723693,9.516770,5.251889,0.040764,-7.029140,2.387334,1.432122,8.075164,-3.419547,8.918958,-1.164847,3.513401,-2.654310,5.035333,5.961132,5.535577,0.581191,3.644084,3.408339,4.073818,9.964118,0.583654,8.865426,-2.251164,8.931122,-5.012148,-9.832418,-9.133025,2.861643,3.036696,2.867080,-2.341357,2.601507,-9.762025,-9.826679,9.785040,-9.479720,-9.589251,1.953970,8.483695,2.613722,1.656053,6.030160,-1.112324,6.504831,-6.019565,-2.662693,3.057167,-6.074849,-0.960731,6.421293,-0.495628,-2.597015,4.969993,6.232333,9.789869,7.601160,5.747065,-1.336403,7.610735,0.412363,9.352190,7.361711,1.153806,-9.087800,-7.456455,3.548969,3.821128,-8.173401,-9.231157,9.698101,-2.573375,-9.628875,-2.076608,8.207411,-4.695608,3.312988,-2.743908,-2.813802,-0.262649,8.676997,-3.908160,4.956070,9.264442,7.925416,4.351914,8.664790,4.065937,0.743642,-8.153145,3.705928,2.267825,-9.383450,8.490607,-9.643710,9.964702,3.262629,-6.184704,2.212415,-9.360752,1.803443,-0.653198,7.800331,-4.800238,9.972838,4.714227,4.990549,7.713395,-2.004236,-2.256214,-3.772041,-5.170617,-8.275913,-3.779694,-0.563474,-8.066912,-7.954182,-8.051490,-6.758812,7.674516,-2.064211,-7.648183,6.857167,9.342525,9.614208,-1.135206,-8.530103,7.970140,-0.078078,-9.123465,-4.905889,-6.137287,6.488612,-9.923161,-2.841945,2.652601,-6.107136,-7.035639,2.648465,2.105658,-4.737574,-9.859221,-2.842007,4.677473,5.409258,-2.464868,-6.434826,6.238633,6.454177,8.336594,6.285996,-6.047264,-4.887705,5.477669,0.526326,-5.360875,8.460536,-3.103863,-2.474133,-6.586835,3.836557,2.840021,4.171976,-4.332713,-5.641543,-9.443081,-6.731302,7.375099,-7.329581,2.295232,8.553183,6.130155,-6.191813,4.643478,0.908664,9.102267,-5.932226,-8.725332,6.609876,-0.083090,-2.821967,1.600241,-2.876232,9.227020,9.175253,-2.546619,0.706113,2.477510,6.109522,-2.834170,-1.984020,0.595104,3.184493,9.651969,-4.131031,-7.695250,-9.928357,-1.074185,4.050373,3.325578,-7.650146,9.426710,2.034371,9.963700,5.686012,8.642738,3.227415,-4.629321,-6.405231,2.145446,-5.859886,7.554405,8.946180,4.017898,-4.736608,-2.264541,-7.793604,-6.826593,-8.886626,-1.130996,5.002471,-6.116456,-5.269876,2.207465,-1.261079,-6.235586,1.052684,7.687356,8.571681,6.355754,-9.079920,-2.922021,4.209768,-3.938396,-7.927772,-3.883745,3.202623,7.242983,9.438394,-5.680522,4.227312,-8.867972,7.004204,-0.705295,-0.656834,-9.708513,7.255640,5.582827,0.597874,-3.954392,-4.633776,6.831030,1.404049,-4.398656,-3.726532,-3.951652,9.797304,-7.885011,3.375005,5.022058,-5.143737,-0.375657,-8.308107,-3.656951,2.932332,5.626744,1.233669,6.484056,5.667832,-0.182266,1.087863,-2.331534,1.298172,5.578378,6.910869,7.528907,-4.282533,1.912545,9.792155,-3.410890,-1.699034,7.350852,-0.813324,2.110237,-5.503306,3.037830,-8.632987,-9.075616,-7.176388,-3.558687,-9.474995,8.724636,0.673909,7.766073,4.416903,-3.902499,2.554965,9.941909,-0.987140,-7.746997,-5.633344,-1.400017,9.672336,5.795669,-8.867258,0.527925,2.940447,5.171900,8.274017,2.640797,-6.509545,-2.767696,3.126698,-3.749676,-2.829017,-4.622497,-3.981234,-3.573477,8.140670,-4.225516,4.328039,-8.462663,-3.619214,-6.929405,-0.345859,-2.762104,0.949719,1.777471,7.974382,-1.311649,-9.758986,-6.134257,-0.951110,-9.371050,-4.835657,2.335343,-1.237403,-6.100924,-8.678356,-8.670844,1.535211,4.777087,7.840887,8.789731,-5.558062,4.953651,8.673563,-5.097367,-0.704875,0.355888,2.921931,-9.416626,3.831723,-5.314605,8.956252,-0.250459,-7.645127,1.692150,-6.945710,-8.973988,1.385038,5.157464,6.461073,-7.533606,-6.457750,9.072858,-5.795341,8.027995,-8.970183,5.661718,-9.290206,-3.374957,-4.923713,1.139352,2.066983,1.696305,1.003520,8.206003,-0.858461,-5.602340,6.680341,-1.203980,6.275746,0.240036,-8.168772,-1.259352,7.782125,2.403566,-5.895006,-6.708741,-6.573072,-3.018489,2.372692,-6.283685,8.078716,-5.750447,-9.351517,4.371258,9.399407,-2.787393,3.547963,-3.704403,2.947249,-4.219173,-0.824085,7.874398,0.666619,-3.987114,2.298191,-2.952421,1.789412,-7.593216,-3.554985,-4.463635,-6.119154,4.216814,7.475990,-4.776145,1.033199,-9.571237,-8.313249,-6.993765,-3.011226,-8.048576,7.916398,-0.757703,6.991935,1.068386,-0.418775,0.255820,-4.997233,9.485408,4.864437,-8.343388,-7.412463,-9.375795,9.084243,-0.470039,-6.351711,5.702222,-7.876497,-4.009824,-3.053215,1.509471,5.656685,-9.769018,8.827415,7.477933,4.612435,0.811055,5.500159,-3.330995,-1.476224,-7.250257,7.909732,-1.189313,8.760324,-1.816977,-6.510872,7.618234,-5.492560,0.618617,2.767488,-2.302999,6.276195,-5.447265,-3.325821,9.113086,-3.746299,9.051359,1.832099,9.603304,-3.951422,5.722124,6.516389,6.412068,-9.284125,2.217900,4.465498,-3.744300,5.490614,7.915605,-1.738990,-4.133761,-7.129493,-7.397894,7.705753,4.728839,1.291045,5.902281,8.172568,4.580680,5.520165,4.633352,-8.942173,4.267799,-6.180010,7.740763,4.799266,7.595891,5.649546,-8.633760,4.009975,3.536416,-6.794995,7.182090,6.748861,0.362335,7.936599,6.635605,-4.038469,1.259840,-9.671545,3.434645,-7.167855,3.967507,2.582689,5.482938,4.963923,1.125199,8.602770,6.417505,2.052674,8.827323,8.744965,8.402623,-7.095390,4.511767,3.116611,-3.199738,8.114110,-4.454088,8.897399,-6.827368,-2.878136,-0.632372,-0.395569,-3.500786,-0.526925,2.260521,-5.559320,-4.083950,4.411303,0.722538,-4.949307,5.846599,-0.809680,-7.965153,7.670265,-5.805766,1.990683,0.061238,9.635557,4.011449,8.718314,1.348605,3.093008,-5.455552,9.523478,-7.219812,-2.226792,-5.381768,4.640600,-3.458916,0.124645,-5.886043,-6.700196,-5.068580,3.726964,1.518198,-7.104201,-1.932426,-6.514519,2.997723,4.141731,-3.936108,5.928964,-9.930276,0.579332,8.515625,6.279276,8.495547,7.283507,2.216601,-4.710420,8.585159,-4.758229,-0.774154,7.591013,-6.534144,2.468186,-1.846530,2.429941,2.476517,3.226683,2.703150,-4.907857,-2.085121,9.763465,-8.922857,2.533446,-0.219692,-7.374129,-2.432879,-4.301659,-0.086483,0.091838,-3.475138,7.122117,-5.912884,-1.191607,7.522494,-8.637036,-7.246742,-7.591340,1.205574,2.889002,3.887139,6.750114,8.998515,-5.330255,4.347996,-6.311675,0.368147,-4.940212,-1.839505,6.370891,8.372216,-8.200941,1.102543,1.464638,-3.011562,1.186565,-5.114787,7.917538,-0.572557,1.736723,-0.347666,-4.330973,8.734683,0.983971,1.266667,0.136856,-4.321791,9.267654,-3.956141,8.634132,8.422372,-9.220068,0.512547,3.173848,-0.247095,2.596282,-2.520156,-7.785713,-8.451829,0.651970,-4.144265,0.893775,-6.965647,2.736545,3.557435,3.526788,9.136532,-1.741342,-4.837748]], dtype = "float32")#candidate|9987|(1, 975)|const|float32
call_9986 = relay.TupleGetItem(func_4948_call(relay.reshape(const_9987.astype('float32'), [15, 13, 5]), relay.reshape(const_9968.astype('float64'), [6,]), ), 3)
call_9988 = relay.TupleGetItem(func_4951_call(relay.reshape(const_9987.astype('float32'), [15, 13, 5]), relay.reshape(const_9968.astype('float64'), [6,]), ), 3)
uop_9991 = relay.atanh(var_9965.astype('float32')) # shape=(1950,)
func_5509_call = mod.get_global_var('func_5509')
func_5512_call = mutated_mod.get_global_var('func_5512')
call_9994 = relay.TupleGetItem(func_5509_call(relay.reshape(const_9967.astype('int64'), []), relay.reshape(var_9971.astype('int64'), [15, 6, 15]), ), 0)
call_9995 = relay.TupleGetItem(func_5512_call(relay.reshape(const_9967.astype('int64'), []), relay.reshape(var_9971.astype('int64'), [15, 6, 15]), ), 0)
func_4295_call = mod.get_global_var('func_4295')
func_4298_call = mutated_mod.get_global_var('func_4298')
var_10005 = relay.var("var_10005", dtype = "float32", shape = (275,))#candidate|10005|(275,)|var|float32
call_10004 = relay.TupleGetItem(func_4295_call(relay.reshape(var_9966.astype('float64'), [672,]), relay.reshape(var_10005.astype('float32'), [275,]), ), 4)
call_10006 = relay.TupleGetItem(func_4298_call(relay.reshape(var_9966.astype('float64'), [672,]), relay.reshape(var_10005.astype('float32'), [275,]), ), 4)
var_10011 = relay.var("var_10011", dtype = "float32", shape = (1950,))#candidate|10011|(1950,)|var|float32
bop_10012 = relay.floor_divide(uop_9991.astype('float64'), relay.reshape(var_10011.astype('float64'), relay.shape_of(uop_9991))) # shape=(1950,)
func_1801_call = mod.get_global_var('func_1801')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_10022 = relay.var("var_10022", dtype = "float32", shape = (18,))#candidate|10022|(18,)|var|float32
call_10021 = func_1801_call(relay.reshape(var_10022.astype('float32'), [1, 9, 2]))
call_10023 = func_1801_call(relay.reshape(var_10022.astype('float32'), [1, 9, 2]))
var_10027 = relay.var("var_10027", dtype = "float64", shape = (1950,))#candidate|10027|(1950,)|var|float64
bop_10028 = relay.bitwise_or(bop_10012.astype('uint16'), relay.reshape(var_10027.astype('uint16'), relay.shape_of(bop_10012))) # shape=(1950,)
uop_10036 = relay.asin(uop_9991.astype('float32')) # shape=(1950,)
output = relay.Tuple([call_9962,call_9964,var_9966,const_9967,const_9968,call_9970,var_9971,call_9976,const_9977,call_9986,const_9987,call_9994,call_10004,var_10005,call_10021,var_10022,bop_10028,uop_10036,])
output2 = relay.Tuple([call_9963,call_9969,var_9966,const_9967,const_9968,call_9972,var_9971,call_9978,const_9977,call_9988,const_9987,call_9995,call_10006,var_10005,call_10023,var_10022,bop_10028,uop_10036,])
func_10038 = relay.Function([var_9965,var_9966,var_9971,var_10005,var_10011,var_10022,var_10027,], output)
mod['func_10038'] = func_10038
mod = relay.transform.InferType()(mod)
var_10039 = relay.var("var_10039", dtype = "int64", shape = (1950,))#candidate|10039|(1950,)|var|int64
var_10040 = relay.var("var_10040", dtype = "int8", shape = (672,))#candidate|10040|(672,)|var|int8
var_10041 = relay.var("var_10041", dtype = "int64", shape = (1350,))#candidate|10041|(1350,)|var|int64
var_10042 = relay.var("var_10042", dtype = "float32", shape = (275,))#candidate|10042|(275,)|var|float32
var_10043 = relay.var("var_10043", dtype = "float32", shape = (1950,))#candidate|10043|(1950,)|var|float32
var_10044 = relay.var("var_10044", dtype = "float32", shape = (18,))#candidate|10044|(18,)|var|float32
var_10045 = relay.var("var_10045", dtype = "float64", shape = (1950,))#candidate|10045|(1950,)|var|float64
output = func_10038(var_10039,var_10040,var_10041,var_10042,var_10043,var_10044,var_10045,)
func_10046 = relay.Function([var_10039,var_10040,var_10041,var_10042,var_10043,var_10044,var_10045,], output)
mutated_mod['func_10046'] = func_10046
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mod.get_global_var('func_9853')
func_9855_call = mutated_mod.get_global_var('func_9855')
call_10060 = func_9853_call()
call_10061 = func_9853_call()
output = relay.Tuple([call_10060,])
output2 = relay.Tuple([call_10061,])
func_10065 = relay.Function([], output)
mod['func_10065'] = func_10065
mod = relay.transform.InferType()(mod)
output = func_10065()
func_10066 = relay.Function([], output)
mutated_mod['func_10066'] = func_10066
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_10085 = relay.TupleGetItem(func_9553_call(), 0)
call_10086 = relay.TupleGetItem(func_9555_call(), 0)
func_603_call = mod.get_global_var('func_603')
func_607_call = mutated_mod.get_global_var('func_607')
const_10100 = relay.const([7.288121,-4.187559,-2.494764,3.607489,-9.404739,-6.869046], dtype = "float64")#candidate|10100|(6,)|const|float64
const_10101 = relay.const([-10,6,-6,7,-1,6,-8,1,7,7,2,7,-8,-7,8,4,4,-3,7,8,3,-3,6,-2,-2,3,9,-7,-7,-3,6,-4,-7,3,-7,4,-6,8,3,-7,9,10,7,2,2,10,3,10,-1,8,5,-7,-10,-5,4,-9,9,8,-7,-2,6,-10,-8,-10,5,-6,-1,1,7,-4,5,2,3,2,10,2,5,-6,-2,1,-8,6,-9,9,-3,7,-6,-4,8,-8,9,8,-2,9,3,-1,-9,10,-4,-6,-2,6,1,-5,-7,9,5,-4,-4,-10,2,-9,8,9,-6,10,-7,6,-10,8,5,5,-7,-6,-1,7,8,6,-5,2,1,1,-10,-7,5,-10,-5,10,-6,-2,-5,-2,-6,10,5,-5,6,6,1,8,1,8,-3,-7,-7,5,9,-4,8,-6,-6,1,7,7,3,5,3,9,4,-6,2,-2,1,-7,1,-3,-6,-10,4,-10,5,2,-3,-6,4,9,-3,8,-8,-2,8,-8,2,7,7,4,5,10,4,4,-7,-3,-5,-4,-5,3,-4,8,-1,1,-2,-8,8,4,5,9,2,-2,-4,-1,-7,-6,7,6,-9,-4,1,-10,3,2,-4,9,4,5,2,-10,-8,9,-8,-3,-1,10,10,-10,5,-10,2,9,5,-5,-7,5,9,3,6,-6,3,-8,9,-8,1,-5,9,10,-7,-10,-7,-2,-6,6,8,-10,2,-6,9,5,-1,-2,6,4,-6,8,7,2,2,9,3,-3,-9,-4,-10,-8,-3,1,4,-3,-10,-6,10,2,7,5,1,5,-6,2,-1,-7,3,-2,-5,-9,-7,-2,4,-2,-5,3,3,-10,6,-5,2,-1,-1,-6,-9,1,-10,4,7,5,3,2,5,-6,-5,9,-4,4,3,-4,-5,-10,-10,-8,-2,-10,2,-2,-5,-9,-9,8,9,3,-2,-4,-3,-1,-1,-9,4,8,5,-5,8,3,-4,-5,4,5,-4,-2,-5,10,-4,1,-8,3,8,-6,-4,8,-7,-1,10,9,-6,10,4,9,9,-5,8,-10,8,5,-4,-9,5,-4,-5,8,1,-3,8,-4,-2,3,7,-8,-1,8,-7,6,9,8,10,7,6,8,-4,10,-1,7,8,6,8,5,-3,7,1,-9,-1,-6,-6,10,9,9,-3,-10,10,2,-10,-3,-10,-8,-6,-3,1,4,4,-1,-4,-4,5,-9,8,4,8,2,10,8,4,2,3,-7,2,1,-6,-4,-7,-7,6,-4,9,-2,-7,-4,6,-8,-6,5,3,-5,-8,-10,-1,1,-8,-2,2,-7,-8,2,9,-2,-5,2,-10,-6,5,5,-3,-5,-3,2,-3,-6,2,-7,-8,-7,-4,2,5,4,4,-5,-8,-1,-9,6,-4,5,10,8,-8,2,3,8,2,7,3,-6,-4,2,2,5,10,-1,-1,8,-1,3,-4,1,5,5,-1,9,-10,9,8,-7,2,-7,-6,-2,5,2,-8,-7,-2,-1,5,-8,-2,6,-1,-6,-2,7,10,-8,5,-6,4,6,-8,-1,-8,6,8,-7,7,-1,10,1,-7,7,-9,-7,-8,1,9,-9,-2,6,-8,-8,-8,-8,-9,8,-7,2,-10,1,1,6,-5,-6,1,-1,-4,-6,10,-1,-2,-6,6,5,6,-7,-9,8,9,2,-7,1,-2,4,-2,2,5,-4,-8,8,4,-3,-10,8,-7,9,5,-5,-8,10,7,-5,4,3,8,-7,9,-7,3,10,6,-3,-9,10,1,-7,-2,1,2,7,7,2,6,-7,-5], dtype = "uint16")#candidate|10101|(675,)|const|uint16
call_10099 = relay.TupleGetItem(func_603_call(relay.reshape(const_10100.astype('float64'), [1, 6, 1]), relay.reshape(const_10101.astype('uint16'), [225, 3]), ), 8)
call_10102 = relay.TupleGetItem(func_607_call(relay.reshape(const_10100.astype('float64'), [1, 6, 1]), relay.reshape(const_10101.astype('uint16'), [225, 3]), ), 8)
func_1180_call = mod.get_global_var('func_1180')
func_1186_call = mutated_mod.get_global_var('func_1186')
var_10104 = relay.var("var_10104", dtype = "int64", shape = (1950,))#candidate|10104|(1950,)|var|int64
const_10105 = relay.const([-5,1,-3,6,2,-7,-8,4,2,-9,10,6,6,5,7,10,-4,-6,7,-10,10,7,4,7,-3,5,-10,-5,2,6,10,3,-9,3,-1,-7,2,8,-5,-2,-1,4,-5,-10,1,-6,3,6,-8,-10,-4,9,-10,4,4,-6,10,-8,10,-3,5,-3,9,-10,8,8,-4,-10,6,10,7,-6,-7,-5,2,8,-7,6,8,-7,-4,10,3,-2,3,10,-9,10,-9,-1,-3,10,9,10,-2,8,1,5,10,-3,-3,-7,-9,8,-2,-1,-9,-8,9,-8,4,-10,-3,-9,4,8,-6,10,9,-5,7,9,9,6,3,2,9,-2,-6,-7,-6,-10,7,-8,-7,1,-9,2,6,-7,-2,-6,-10,5,-1,6,5,-2,5,-3,4,-6,4,2,-8,9,-7,-10,7,-3,-6,-8,5,7,9,-2,-4,6,8,8,-7,5,3,-3,1,-9,-4,-9,-6,-9,-6,7,-9,8,9,5,-2,-3,6,-5,1,5,4,4,-2,-4,4,-10,2,-2,5,-10,10,4,-9,-4,-7,-4,2,-9,-1,-5,-4,-7,5,1,9,-9,-5,4,1,4,6,9,8,-2,-2,-3,4,-7,1,8,-9,10,9,-10,1,-10,-4,7,-10,-10,-8,1,2,2,5,-3,9,10,7,-10,-6,9,3,1,-5,-4,-1,-6,2,-8,7,1,5,4,5,-4,6,10,-9,1,-1,6,1,-7,-9,-9,-6,-2,6,-5,-10,2,2,5,3,5,2,-8,-5,-7,-9,9,-1,-6,-7,-7,-2,4,1,7,-9,9,-4,-6,1,-3,2,-4,5,9,3,-10,3,8,5,-9,8,6,5,10,7,-6,5,1,10,-1,-4,-7,-7,2,-2,6,8,-1,6,-9,-7,10,-5,-4,-1,-9,6,-3,-2,-4,-5,-2,4,8,-7,1,-3,7,-3,4,-6,10,-8,-6,9,3,-10,-7,-10,-4,-3,4,7,-4,2,6,-1,-9,-1,-1,5,-4,-1,-1,7,2,10,6,5,10,9,5,-6,3,9,8,8,-9,5,1,-5,4,9,5,-1,3,-2,-2,-1,8,8,4,-7,6,4,6,2,-7,9,7,8,9,-6,-10,9,9,-3,-5,7,-4,1,-2,-9,6,-2,7,-2,-2,1,-9,10,-8,-2,-5,4,-10,1,-10,3,-10,10,5,-6,-2,8,7,-9,1,8,10,9,-9,-4,-3,-4,1,10,5,2,-5,9,8,-7,-9,7,8,-9,-6,-5,-9,-4,6,6,-2,-1,7,-8,-7,-6,-3,6,-8,-10,8,-5,-6,-7,3,-4,-2,-1,-6,-5,-6,-9,-1,2,-10,6,-8,4,10,-6,5,-9,6,7,10,5,1,7,-1,-5,-9,-10,4,1,-7,8,-1,-10,-8,1,9,4,-1,3,-7,-6,9,-3,2,-8,3,3,-2,2,-10,-8,6,8,-2,-1,1,-7,-3,-3,6,-4,-7,4,-9,-1,-7,9,-2,5,10,-5,3,-1,-6,-3,-6,-3,5,-4,4,-7,-6,-8,-3,-2,-9,4,-9,-10,1,-7,-2,2,10,6,-3,8,-7,-8,9,5,-7,2,6,-2,7,4,2,1,-3,-9,-7,-8,5,-9,5,4,3,-7,8,-5,-1,-8,-8,6,-3,-8,3,-7,1,5,-9,8,-5,-2,4,-9,8,-7,-6,8,9,-10,-1,3,4,-9,-8,-7,-10,7,-6,-1,6,1,-1,9,-4,-6,-9,-10,-8,-6,-4,7,-1,1,1,-2,-10,-8,1,-2,-10,3,-7], dtype = "int8")#candidate|10105|(672,)|const|int8
var_10106 = relay.var("var_10106", dtype = "uint16", shape = ())#candidate|10106|()|var|uint16
call_10103 = relay.TupleGetItem(func_1180_call(relay.reshape(var_10104.astype('int64'), [13, 15, 10]), relay.reshape(var_10104.astype('int64'), [13, 15, 10]), relay.reshape(const_10105.astype('int8'), [1, 672]), relay.reshape(var_10106.astype('uint16'), []), relay.reshape(const_10100.astype('float64'), [6,]), ), 5)
call_10107 = relay.TupleGetItem(func_1186_call(relay.reshape(var_10104.astype('int64'), [13, 15, 10]), relay.reshape(var_10104.astype('int64'), [13, 15, 10]), relay.reshape(const_10105.astype('int8'), [1, 672]), relay.reshape(var_10106.astype('uint16'), []), relay.reshape(const_10100.astype('float64'), [6,]), ), 5)
output = relay.Tuple([call_10085,call_10099,const_10100,const_10101,call_10103,var_10104,const_10105,var_10106,])
output2 = relay.Tuple([call_10086,call_10102,const_10100,const_10101,call_10107,var_10104,const_10105,var_10106,])
func_10124 = relay.Function([var_10104,var_10106,], output)
mod['func_10124'] = func_10124
mod = relay.transform.InferType()(mod)
var_10125 = relay.var("var_10125", dtype = "int64", shape = (1950,))#candidate|10125|(1950,)|var|int64
var_10126 = relay.var("var_10126", dtype = "uint16", shape = ())#candidate|10126|()|var|uint16
output = func_10124(var_10125,var_10126,)
func_10127 = relay.Function([var_10125,var_10126,], output)
mutated_mod['func_10127'] = func_10127
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9953_call = mod.get_global_var('func_9953')
func_9955_call = mutated_mod.get_global_var('func_9955')
call_10136 = relay.TupleGetItem(func_9953_call(), 1)
call_10137 = relay.TupleGetItem(func_9955_call(), 1)
func_6118_call = mod.get_global_var('func_6118')
func_6121_call = mutated_mod.get_global_var('func_6121')
var_10144 = relay.var("var_10144", dtype = "int8", shape = ())#candidate|10144|()|var|int8
var_10145 = relay.var("var_10145", dtype = "int8", shape = (224,))#candidate|10145|(224,)|var|int8
call_10143 = func_6118_call(relay.reshape(var_10144.astype('int8'), []), relay.reshape(var_10145.astype('int8'), [2, 16, 7]), )
call_10146 = func_6118_call(relay.reshape(var_10144.astype('int8'), []), relay.reshape(var_10145.astype('int8'), [2, 16, 7]), )
var_10149 = relay.var("var_10149", dtype = "uint16", shape = (14, 6, 8))#candidate|10149|(14, 6, 8)|var|uint16
bop_10150 = relay.floor_divide(call_10136.astype('float64'), relay.reshape(var_10149.astype('float64'), relay.shape_of(call_10136))) # shape=(14, 6, 8)
bop_10153 = relay.floor_divide(call_10137.astype('float64'), relay.reshape(var_10149.astype('float64'), relay.shape_of(call_10137))) # shape=(14, 6, 8)
func_1428_call = mod.get_global_var('func_1428')
func_1432_call = mutated_mod.get_global_var('func_1432')
var_10157 = relay.var("var_10157", dtype = "uint64", shape = (560,))#candidate|10157|(560,)|var|uint64
var_10158 = relay.var("var_10158", dtype = "int8", shape = (1568,))#candidate|10158|(1568,)|var|int8
call_10156 = relay.TupleGetItem(func_1428_call(relay.reshape(var_10157.astype('uint64'), [10, 8, 7]), relay.reshape(var_10158.astype('int8'), [1568,]), ), 1)
call_10159 = relay.TupleGetItem(func_1432_call(relay.reshape(var_10157.astype('uint64'), [10, 8, 7]), relay.reshape(var_10158.astype('int8'), [1568,]), ), 1)
output = relay.Tuple([call_10143,var_10144,var_10145,bop_10150,call_10156,var_10157,var_10158,])
output2 = relay.Tuple([call_10146,var_10144,var_10145,bop_10153,call_10159,var_10157,var_10158,])
func_10168 = relay.Function([var_10144,var_10145,var_10149,var_10157,var_10158,], output)
mod['func_10168'] = func_10168
mod = relay.transform.InferType()(mod)
mutated_mod['func_10168'] = func_10168
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10168_call = mutated_mod.get_global_var('func_10168')
var_10170 = relay.var("var_10170", dtype = "int8", shape = ())#candidate|10170|()|var|int8
var_10171 = relay.var("var_10171", dtype = "int8", shape = (224,))#candidate|10171|(224,)|var|int8
var_10172 = relay.var("var_10172", dtype = "uint16", shape = (14, 6, 8))#candidate|10172|(14, 6, 8)|var|uint16
var_10173 = relay.var("var_10173", dtype = "uint64", shape = (560,))#candidate|10173|(560,)|var|uint64
var_10174 = relay.var("var_10174", dtype = "int8", shape = (1568,))#candidate|10174|(1568,)|var|int8
call_10169 = func_10168_call(var_10170,var_10171,var_10172,var_10173,var_10174,)
output = call_10169
func_10175 = relay.Function([var_10170,var_10171,var_10172,var_10173,var_10174,], output)
mutated_mod['func_10175'] = func_10175
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9953_call = mod.get_global_var('func_9953')
func_9955_call = mutated_mod.get_global_var('func_9955')
call_10198 = relay.TupleGetItem(func_9953_call(), 2)
call_10199 = relay.TupleGetItem(func_9955_call(), 2)
func_4072_call = mod.get_global_var('func_4072')
func_4079_call = mutated_mod.get_global_var('func_4079')
const_10211 = relay.const([9.278152,5.841509,9.802454,-2.353618,-6.423937,-4.448580,2.050404,-4.890583,-3.667249,-6.006478,5.720919,3.163513,1.233222,2.069673,6.069265,3.500188,9.917340,5.126118,2.925438,6.020919,-5.331676,6.337356,-5.488953,-4.879731,-3.421950,2.886035,-5.684630,-0.529998,4.693928,-1.459397,-5.787728,-3.716649,-3.632027,3.085999,6.043739,-0.528278,-9.604669,6.231538,5.207782,0.791783,8.079303,2.245394,2.999438,4.596686,4.651228,8.264318,9.963188,2.328439,5.972274,5.258862,-0.722334,-1.382955,-5.963402,2.821039,2.980725,1.078211,-8.575533,4.150643,4.271085,-8.505037,-8.708115,-4.841007,1.201091,-5.845013,-5.200317,9.359044,9.024040,-4.621321,-9.718145,2.882815,-6.033195,-5.500369,3.775120,4.594744,-7.487356,-5.614620,3.937640,8.354246,-1.661869,-5.324207,9.878589,4.813333,1.566360,-4.103970,-0.863176,-8.099706,4.369472,7.269564,-7.615011,4.394910,-8.836654,9.338961,-9.250602,3.882603,-6.023002,-2.420938,4.919496,-0.149535,4.614466,-3.308813,-4.344260,-6.543569,2.380542,5.811207,-5.434662,1.825333,-2.184796,4.317924,8.522465,8.552073,-0.219942,8.530452,-0.240897,-7.053991,0.468543,1.589540,7.014805,1.438435,7.913987,-5.265147,3.735589,-0.211223,1.433747,-4.271637,-5.601310,-1.060089,5.994820,0.927891,-6.832397,0.671626,-5.837326,6.388228,1.874015,3.605514,4.977731,-2.493838,9.007108,-9.288023,-6.465517,8.712668,3.214283,7.021486,5.272344,-9.518787,6.275267,1.549601,-0.805330,5.183463,7.920561,-7.046911,3.713695,5.220404,1.817755,5.689924,6.178816,4.286988,-3.701127,2.237152,5.008667,5.956418,-9.900510,-5.837233,-1.164666,-3.538270,-4.595074,-6.162214,6.995531,-7.510600,-6.777755,1.851735,-5.696614,-6.235473,3.082662,8.885625,8.193732,2.856580,2.390694,-2.901694,-1.641505,-9.171950,7.394848,-3.461957,-9.323470,2.488569,-5.724969,-2.727408,7.318943,8.400327,9.228259,3.895321,-6.842593,-5.917461,7.159529,7.835522,5.549265,-9.661220,-7.365856,2.830705,-3.388495,1.033109,0.632080,7.164465,-6.831457,-4.961758,6.969520,-2.006245,-7.964126,-5.856753,2.239038,6.986345,6.580621,0.465506,-5.303012,-7.669156,-5.351668,6.903742,-8.086678,-9.115836,-7.902600,-8.846845,0.067688,5.276768,5.628231,6.587805,0.589600,1.820675,-5.474475,-3.847346,0.707546,3.808609,6.444623,-5.219721,-2.919708,-6.390271,6.865191,-3.154116,-4.004322,-2.036833,8.657551,-7.537822,6.256678,2.740112,3.897586,-0.256513,1.302294,-2.152724,2.153131,-3.228351,5.807962,-5.733169,9.984909,5.377318,-7.150278,2.263904,8.826575,-5.138849,5.986391,1.295398,6.097319,9.497191,4.295274,1.922999,-7.377059,-3.982771,7.540146,-3.173550,-7.734450,-3.079979,-6.656716,-9.738906,1.982101,-8.494734,0.668953,0.130771,4.673005,1.705933,-5.976638,5.329103,-4.812096,5.373672,-8.660755,-9.581407,0.104438,4.080861,-5.697570,-1.473597,-1.200954,-8.854585], dtype = "float32")#candidate|10211|(288,)|const|float32
const_10212 = relay.const([8,-10,1,-5,-10,3,6,-4,-9,1,-10,-1,-9,-4,-9,4,2,6,-1,10,-3,9,-3,6,2,1,6,10,3,4,6,-9,-1,-2,3,-4,-7,10,8,1,1,3,-3,5,-5,-8,-7,1,-10,-10,7,1,-9,-3,5,8,-7,5,3,6,1,3,8,7,7,3,3,7,5,10,5,7,-8,1,-6,-1,10,-6,6,-8,-3,8,-5,10,6,-1,8,2,-2,-7,-2,5,2,2,-7,2,3,5,-6,9,5,-2,8,8,7,-8,4,10,-9,4,5,5,6,8,-5,4,5,-4,8,-2,-5,-3,-8,-5,-7,2,-2,10,6,-2,4,-2,9,-1,8,-3,8,2,-9,2,5,-8,2,7,-9,-1,-4,-2,-1,-10,-8,1,-9,1,-1,5,-8,3,4,-8,-10,4,3,6,8,-2,1,2,8,7,6,-3,7,-6,5,-4,4,8,-5,-3,10,-9,9,-10,-5,-4,1,7,3,-8,9,5,9,3,8,7,1,1,-7,5,-8,-3,8,6,5,-4,-6,-10,-2,1,8,10,-3,-7,1,-4,-5,-7,-9,6,9,-10,9,-3,2,-1,-1,-10,-1,9,-1,1,10,-8,-3,6,-4,-8,-8,-4,-3,1,-7,2,-9,1,4,5,2,-4,10,6,8,-7,-4,-7,7,5,-10,-5,6,1,10,5,-1,-6,10,-5,7,-3,4,-10,-7,-8,-9,-7,8,6,-4,-1,-9,6,-10,-8,-2,10,10,-6,4,-7,6,2,10,6,-1,8,4,9,-4,3,-7,-1,-4,7,2,4,8,6,6,-3,-6,6,5,-6,-2,3,1,-8,3,-4,1,-5,-6,6,-10,8,10,-8,9,1,10,-1,-2,-9,-6,9,2,6,-4,9,-3,-2,3,9,-1,-3,8,3,5,-2,4,10,-7,6,-1,5,-4,-1,4,-8,10,-7,3,6,-3,-1,-2,-5,-7,10,5,-6,-2,-5,4,-3,-3,3,-10,6,-9,-10,-7,-2,5,-4,5,9,-6,-4,-8,-7,7,10,2,3,-2,4,10,-6,8,-5,-2,2,1,-10,-5,3,-10,-1,9,-4,1,-2,6,5,-10,6,-9,9,4,-10,-8,-3,3,1,-10,-3,-6,1,5,-5,10,-6,-10,8,6,-5,10,5,1,-5,4,3,5,2,-2,2,8,9,-6,-4,-5,-9,8,-8,3,-2,-3,8,1,-5,-9,-4,-8,-7,-10,-7,1,-9,1,7,-3,2,6,-2,-2,-9,-6,9,4,6,-8,-10,-8,-7,-8,-4,7,-7,-6,9,7,-10,-9,-7,-5,-10,6,4,-10,-5,-9,-9,5,-7,-6,2,4,-6,-10,-9,-6,10,6,-7,6,5,1,10,-2,10,5,1,1,-4,10,6,2,-9,-9,-7,10,-10,7,-8,9,9,9,7,9,3,-5,-7,-4,-5,5,-7,3,-6,9,1,6,-4,-4,-7,2,-4,8,4], dtype = "uint64")#candidate|10212|(560,)|const|uint64
var_10213 = relay.var("var_10213", dtype = "int8", shape = (1568,))#candidate|10213|(1568,)|var|int8
var_10214 = relay.var("var_10214", dtype = "float32", shape = (275,))#candidate|10214|(275,)|var|float32
call_10210 = relay.TupleGetItem(func_4072_call(relay.reshape(const_10211.astype('float32'), [9, 4, 8]), relay.reshape(const_10211.astype('float32'), [9, 4, 8]), relay.reshape(const_10212.astype('uint64'), [1, 560]), relay.reshape(var_10213.astype('int8'), [1568,]), relay.reshape(var_10214.astype('float32'), [275,]), ), 4)
call_10215 = relay.TupleGetItem(func_4079_call(relay.reshape(const_10211.astype('float32'), [9, 4, 8]), relay.reshape(const_10211.astype('float32'), [9, 4, 8]), relay.reshape(const_10212.astype('uint64'), [1, 560]), relay.reshape(var_10213.astype('int8'), [1568,]), relay.reshape(var_10214.astype('float32'), [275,]), ), 4)
output = relay.Tuple([call_10198,call_10210,const_10211,const_10212,var_10213,var_10214,])
output2 = relay.Tuple([call_10199,call_10215,const_10211,const_10212,var_10213,var_10214,])
func_10222 = relay.Function([var_10213,var_10214,], output)
mod['func_10222'] = func_10222
mod = relay.transform.InferType()(mod)
var_10223 = relay.var("var_10223", dtype = "int8", shape = (1568,))#candidate|10223|(1568,)|var|int8
var_10224 = relay.var("var_10224", dtype = "float32", shape = (275,))#candidate|10224|(275,)|var|float32
output = func_10222(var_10223,var_10224,)
func_10225 = relay.Function([var_10223,var_10224,], output)
mutated_mod['func_10225'] = func_10225
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_10235 = relay.TupleGetItem(func_9553_call(), 0)
call_10236 = relay.TupleGetItem(func_9555_call(), 0)
output = relay.Tuple([call_10235,])
output2 = relay.Tuple([call_10236,])
func_10240 = relay.Function([], output)
mod['func_10240'] = func_10240
mod = relay.transform.InferType()(mod)
output = func_10240()
func_10241 = relay.Function([], output)
mutated_mod['func_10241'] = func_10241
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_10252 = relay.TupleGetItem(func_9553_call(), 0)
call_10253 = relay.TupleGetItem(func_9555_call(), 0)
func_9469_call = mod.get_global_var('func_9469')
func_9472_call = mutated_mod.get_global_var('func_9472')
const_10257 = relay.const([-7,7,-6,5,4,-3,3,2,-8,9,7,-6,6,4,7,7,10,5,6,4,-10,-7,-3,-2,-7,4,-8,8,-4,7,8,7,-5,6,4,3,6,-8,2,-2,2,-5,-6,-2,7,-4,-1,-5,-3,10,-10,1,5,-7,-1,8,-4,-2,7,-3,-3,-9,7,-1,-6,10,-3,2,-2,7,-7,-7,-9,1,4,2,10,2,-9,10,5,9,-2,-8,-1,10,-1,1,5,-7,8,6,5,7,-2,-7,-8,-5,-1,-7,-7,2,-1,7,9,-4,-5,8,8,-4,-4,-7,9,-3,4,-5,-6,-8,-2,-4,1,1,-10,-8,4,-1,2,1,10,4,-3,-5,-7,-5,-10,-1,6,-6,1,-5,3,1,3,-1,-5,9,5,8,-8,3,1,6,-8,-6,-6,1,-8,-7,6,6,-4,-3,10,2,-4,4,1,-7,-4,-7,3,-10,-4,-3,-6,4,-3,-10,8,-1,-9,10,-6,-8,-9,1,-4,-4,-9,-9,-6,-4,9,4,-5,10,9,-3,-8,-5,7,2,8,-2,-2,1,-3,9,-8,9,-5,9,-10,8,7,-6,3,10,3,8,2,-5,4,-8,6,-10,-6,-6,-3,-4,-10,-7,-6,4,-8,7,2,6,6,10,1,5,-9,4,7,-4,-8,-10,7,-6,-6,4,4,8,4,-4,-8,-4,9,-10,-8,3,-7,-4,9,-1,4,-7,-5,-8,2,8,10,8,-4,6,-7,9,4,-8,3,9,7,6,8,-5,-6,10,-6,5,-9,1,-2,9,4,-10,-9,4,3,-7,2,1,4,-3,-2,-8,1,-6,-10,2,4,-8,-1,8,2,6,7,3,-1,-10,7,5,-9,-5,-5,10,-9,2,-3,-5,-4,-9,8,-2,10,-3,4,-7,8,2,6,-3,-2,-6,-5,-2,-10,2,4,-1,8,9,2,4,7,5,8,10,-3,7,-7,-7,-9,-7,2,5,-3,-1,2,7,1,-5,-10,-9,1,-2,-2,-5,9,1,-9,-3,-3,-9,2,-4,-8,2,-4,-4,4,3,-7,6,-10,7,-7,6,-9,-5,-1,-3,-10,8,5,-10,7,6,2,8,-3,5,-9,10,-6,-6,7,-5,-6,10,-4,-2,-4,5,-2,-1,-9,-5,-7,-4,-1,9,4,5,-6,3,5,-1,4,6,8,-3,4,-5,4,-6,-4,2,-9,-9,-2,-5,8,8,1,-9,1,-7,-1,-8,4,7,8,-7,6,2,-8,5,-2,-9,-6,1,2,2,10,6,3,3,5,-8,6,9,6,10,-8,8,-9,1,7,-3,-3,-1,6,-8,4,4,-6,5,-8,10,4,-9,-7,4,-4,-10,-10,3,-5,-7,-7,-10,-5,-6,10,10,-4,-6,-1,-4,9,-2,-5,3,8,-8,2,-9,-2,9,-9,-5,7,-3,-4,-1,-10,-10,-2,4,4,4,-1,2,-7,5,-7,10,-4,2], dtype = "uint32")#candidate|10257|(550,)|const|uint32
call_10256 = relay.TupleGetItem(func_9469_call(relay.reshape(const_10257.astype('uint32'), [11, 10, 5])), 0)
call_10258 = relay.TupleGetItem(func_9472_call(relay.reshape(const_10257.astype('uint32'), [11, 10, 5])), 0)
uop_10259 = relay.atanh(const_10257.astype('float64')) # shape=(550,)
output = relay.Tuple([call_10252,call_10256,uop_10259,])
output2 = relay.Tuple([call_10253,call_10258,uop_10259,])
func_10262 = relay.Function([], output)
mod['func_10262'] = func_10262
mod = relay.transform.InferType()(mod)
mutated_mod['func_10262'] = func_10262
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mutated_mod.get_global_var('func_10262')
call_10263 = func_10262_call()
output = call_10263
func_10264 = relay.Function([], output)
mutated_mod['func_10264'] = func_10264
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_10285 = relay.TupleGetItem(func_9553_call(), 0)
call_10286 = relay.TupleGetItem(func_9555_call(), 0)
output = call_10285
output2 = call_10286
func_10298 = relay.Function([], output)
mod['func_10298'] = func_10298
mod = relay.transform.InferType()(mod)
output = func_10298()
func_10299 = relay.Function([], output)
mutated_mod['func_10299'] = func_10299
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10298_call = mod.get_global_var('func_10298')
func_10299_call = mutated_mod.get_global_var('func_10299')
call_10303 = func_10298_call()
call_10304 = func_10298_call()
func_5561_call = mod.get_global_var('func_5561')
func_5563_call = mutated_mod.get_global_var('func_5563')
var_10306 = relay.var("var_10306", dtype = "float32", shape = (910,))#candidate|10306|(910,)|var|float32
call_10305 = func_5561_call(relay.reshape(var_10306.astype('float32'), [7, 13, 10]))
call_10307 = func_5561_call(relay.reshape(var_10306.astype('float32'), [7, 13, 10]))
output = relay.Tuple([call_10303,call_10305,var_10306,])
output2 = relay.Tuple([call_10304,call_10307,var_10306,])
func_10323 = relay.Function([var_10306,], output)
mod['func_10323'] = func_10323
mod = relay.transform.InferType()(mod)
var_10324 = relay.var("var_10324", dtype = "float32", shape = (910,))#candidate|10324|(910,)|var|float32
output = func_10323(var_10324)
func_10325 = relay.Function([var_10324], output)
mutated_mod['func_10325'] = func_10325
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9953_call = mod.get_global_var('func_9953')
func_9955_call = mutated_mod.get_global_var('func_9955')
call_10512 = relay.TupleGetItem(func_9953_call(), 3)
call_10513 = relay.TupleGetItem(func_9955_call(), 3)
func_1530_call = mod.get_global_var('func_1530')
func_1534_call = mutated_mod.get_global_var('func_1534')
var_10545 = relay.var("var_10545", dtype = "int32", shape = (96,))#candidate|10545|(96,)|var|int32
call_10544 = relay.TupleGetItem(func_1530_call(relay.reshape(var_10545.astype('int32'), [3, 16, 2]), relay.reshape(var_10545.astype('int32'), [3, 16, 2]), ), 0)
call_10546 = relay.TupleGetItem(func_1534_call(relay.reshape(var_10545.astype('int32'), [3, 16, 2]), relay.reshape(var_10545.astype('int32'), [3, 16, 2]), ), 0)
uop_10552 = relay.asin(call_10512.astype('float64')) # shape=(1287,)
uop_10554 = relay.asin(call_10513.astype('float64')) # shape=(1287,)
output = relay.Tuple([call_10544,var_10545,uop_10552,])
output2 = relay.Tuple([call_10546,var_10545,uop_10554,])
func_10567 = relay.Function([var_10545,], output)
mod['func_10567'] = func_10567
mod = relay.transform.InferType()(mod)
var_10568 = relay.var("var_10568", dtype = "int32", shape = (96,))#candidate|10568|(96,)|var|int32
output = func_10567(var_10568)
func_10569 = relay.Function([var_10568], output)
mutated_mod['func_10569'] = func_10569
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mod.get_global_var('func_9853')
func_9855_call = mutated_mod.get_global_var('func_9855')
call_10641 = func_9853_call()
call_10642 = func_9853_call()
func_1530_call = mod.get_global_var('func_1530')
func_1534_call = mutated_mod.get_global_var('func_1534')
const_10655 = relay.const([[-4,-8,5,3,4,1,-2,-4,7,-4,-1,4,-8,8,-10,4,5,10,-6,5,6,-7,-10,-7,-5,8,6,3,3,-4,2,-7,-10,6,2,7,5,8,6,-2,8,6,6,-10,3,-1,1,-5,-7,-8,-2,8,-8,-5,-2,7,9,-6,5,5,7,4,-6,-1,-9,3,-4,1,9,-8,2,-3,-7,9,2,-9,-2,8,-3,2,-8,5,9,-3,1,1,7,8,4,5,1,-6,-10,-10,5,-8]], dtype = "int32")#candidate|10655|(1, 96)|const|int32
call_10654 = relay.TupleGetItem(func_1530_call(relay.reshape(const_10655.astype('int32'), [3, 16, 2]), relay.reshape(const_10655.astype('int32'), [3, 16, 2]), ), 0)
call_10656 = relay.TupleGetItem(func_1534_call(relay.reshape(const_10655.astype('int32'), [3, 16, 2]), relay.reshape(const_10655.astype('int32'), [3, 16, 2]), ), 0)
output = relay.Tuple([call_10641,call_10654,const_10655,])
output2 = relay.Tuple([call_10642,call_10656,const_10655,])
func_10657 = relay.Function([], output)
mod['func_10657'] = func_10657
mod = relay.transform.InferType()(mod)
output = func_10657()
func_10658 = relay.Function([], output)
mutated_mod['func_10658'] = func_10658
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10065_call = mod.get_global_var('func_10065')
func_10066_call = mutated_mod.get_global_var('func_10066')
call_10677 = relay.TupleGetItem(func_10065_call(), 0)
call_10678 = relay.TupleGetItem(func_10066_call(), 0)
output = relay.Tuple([call_10677,])
output2 = relay.Tuple([call_10678,])
func_10729 = relay.Function([], output)
mod['func_10729'] = func_10729
mod = relay.transform.InferType()(mod)
mutated_mod['func_10729'] = func_10729
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10729_call = mutated_mod.get_global_var('func_10729')
call_10730 = func_10729_call()
output = call_10730
func_10731 = relay.Function([], output)
mutated_mod['func_10731'] = func_10731
mutated_mod = relay.transform.InferType()(mutated_mod)
var_10751 = relay.var("var_10751", dtype = "int16", shape = (6, 4, 8))#candidate|10751|(6, 4, 8)|var|int16
var_10752 = relay.var("var_10752", dtype = "int16", shape = (6, 4, 8))#candidate|10752|(6, 4, 8)|var|int16
bop_10753 = relay.bitwise_or(var_10751.astype('int16'), relay.reshape(var_10752.astype('int16'), relay.shape_of(var_10751))) # shape=(6, 4, 8)
func_7581_call = mod.get_global_var('func_7581')
func_7583_call = mutated_mod.get_global_var('func_7583')
const_10757 = relay.const([9.455353,-7.210073,-9.451999,4.939734,8.377117,-9.103031,-5.485382,-3.855092,-3.847167,6.205224,7.632189,-4.190660,0.900592,4.748777,-7.165251,5.049020,-9.515560,-1.030606,2.623962,4.083421,-7.333867,6.700988,2.034964,0.616093,-4.805178,7.722385,1.525414,-4.346325,2.285313,1.945998,8.275494,1.325768,-5.162184,-1.633048,1.690950,-8.799284,8.156360,0.923269,3.436136,7.092934,2.894514,3.172711,-6.524185,6.018424,-3.100635,2.301871,9.122858,9.147854,6.767234,-7.450652,-8.865633,-1.046029,-3.578380,-1.908206,-4.071190,0.788685,-2.307614,-3.259886,-4.030836,-8.836353,-7.194527,-1.092844,-3.857400,6.786735,3.296998,-3.528057,-5.717407,-6.385381,-6.803505,-3.715827,-8.097762,-2.461423,1.677734,3.460466,7.263807,-7.932398,-4.264389,1.329211,-5.021165,-8.353236,-8.421507,2.320331,9.253766,8.731790,-3.740309,-9.250593,3.633928,4.470744,3.301511,6.166715,-2.896081,-8.303863,-0.403980,4.409734,-2.460163,1.982291,5.388832,8.918480,-4.767808,-7.057207,-5.543636,4.133413,-6.138740,-2.015322,6.734504,-1.523121,6.217282,-4.180379,-6.702603,8.343399,6.158904,-6.021186,0.079311,6.152623,-5.877365,7.189341,-1.244029,7.300242,6.837830,-7.149443,3.685704,4.273866,9.204946,-7.892420,5.103495,-1.516175,-9.104121,1.575907,-1.017351,3.564107,6.913855,-4.883918,2.981843,-7.124940,5.211952,-4.439157,0.216937,-2.939900,8.141496,-0.769527,-6.951881,-0.133351,8.999795,-9.068792,-7.367713,9.094056,-3.761609,-3.388026,8.974623,3.621444,4.735536,6.733348,9.964936,-8.839227,-7.211114,2.176721,3.765621,-6.969857,-0.559198,9.012886,-8.615855,-7.014981,-6.607273,7.598698,9.292239,-8.703808,-7.284929,1.204819,8.346164,-6.988156,-2.806682,-6.771145,5.586255,4.958538,-3.065632,6.288582,8.735677,6.352268,-0.571279,2.679701,0.405478,-1.659776,5.267494,5.417159,0.969703,-0.781332,-4.316983,-4.350021,5.476519,8.603242,-1.327310,5.168532,-6.984999,4.767511,1.301434,-6.298185,-9.984250,-1.298018,-2.138602,2.234056,8.006632,1.250839,-9.134972,-0.821787,0.624305,8.656985,-1.152186,3.869403,-2.779870,2.932015,4.960478,-7.812257,-8.155047,1.105122,5.175309,0.412398,0.246012,-5.103835,-6.060076,3.414660,-9.916114,7.953286,1.074636,1.766532,1.463145,5.928861,-3.259450,-5.021428,-8.575615,6.170559,-1.271915,9.096104,2.155729,-0.086000], dtype = "float32")#candidate|10757|(234,)|const|float32
call_10756 = relay.TupleGetItem(func_7581_call(relay.reshape(const_10757.astype('float32'), [13, 6, 3])), 0)
call_10758 = relay.TupleGetItem(func_7583_call(relay.reshape(const_10757.astype('float32'), [13, 6, 3])), 0)
uop_10761 = relay.asin(var_10751.astype('float64')) # shape=(6, 4, 8)
output = relay.Tuple([bop_10753,call_10756,const_10757,uop_10761,])
output2 = relay.Tuple([bop_10753,call_10758,const_10757,uop_10761,])
func_10772 = relay.Function([var_10751,var_10752,], output)
mod['func_10772'] = func_10772
mod = relay.transform.InferType()(mod)
var_10773 = relay.var("var_10773", dtype = "int16", shape = (6, 4, 8))#candidate|10773|(6, 4, 8)|var|int16
var_10774 = relay.var("var_10774", dtype = "int16", shape = (6, 4, 8))#candidate|10774|(6, 4, 8)|var|int16
output = func_10772(var_10773,var_10774,)
func_10775 = relay.Function([var_10773,var_10774,], output)
mutated_mod['func_10775'] = func_10775
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mod.get_global_var('func_9853')
func_9855_call = mutated_mod.get_global_var('func_9855')
call_10840 = func_9853_call()
call_10841 = func_9853_call()
output = relay.Tuple([call_10840,])
output2 = relay.Tuple([call_10841,])
func_10843 = relay.Function([], output)
mod['func_10843'] = func_10843
mod = relay.transform.InferType()(mod)
output = func_10843()
func_10844 = relay.Function([], output)
mutated_mod['func_10844'] = func_10844
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10065_call = mod.get_global_var('func_10065')
func_10066_call = mutated_mod.get_global_var('func_10066')
call_10886 = relay.TupleGetItem(func_10065_call(), 0)
call_10887 = relay.TupleGetItem(func_10066_call(), 0)
func_10038_call = mod.get_global_var('func_10038')
func_10046_call = mutated_mod.get_global_var('func_10046')
var_10899 = relay.var("var_10899", dtype = "int64", shape = (1950,))#candidate|10899|(1950,)|var|int64
const_10900 = relay.const([[8],[-7],[-9],[1],[2],[-6],[-5],[4],[-1],[-9],[4],[9],[-1],[6],[3],[-2],[-3],[-3],[2],[2],[-7],[-4],[5],[8],[-8],[2],[2],[-9],[-4],[-1],[-9],[7],[4],[4],[-3],[-9],[-5],[3],[-2],[6],[2],[1],[-1],[7],[5],[4],[2],[6],[3],[-1],[6],[-9],[4],[1],[-6],[5],[-6],[2],[-5],[3],[-6],[6],[10],[4],[-1],[10],[-5],[-8],[-2],[5],[5],[4],[6],[-9],[4],[3],[-8],[-9],[-10],[-2],[8],[-10],[-10],[3],[9],[-7],[-8],[6],[-8],[7],[8],[5],[-10],[4],[7],[-2],[-9],[-7],[-3],[10],[8],[6],[2],[-4],[-8],[4],[2],[2],[2],[-3],[-6],[-4],[-9],[4],[3],[4],[1],[1],[-4],[4],[5],[-8],[5],[-10],[-9],[-8],[2],[-8],[4],[5],[-5],[-9],[8],[2],[5],[4],[3],[-7],[-5],[7],[-2],[9],[-8],[-4],[-10],[-8],[-7],[3],[-6],[-7],[-8],[1],[4],[-2],[-6],[3],[4],[1],[10],[4],[6],[6],[10],[-9],[2],[-7],[9],[-4],[7],[4],[-4],[1],[-10],[2],[10],[1],[-8],[7],[8],[-6],[4],[-3],[-3],[-5],[-4],[2],[-5],[-8],[5],[-4],[-7],[-1],[6],[5],[-6],[4],[-4],[2],[-5],[-8],[4],[-7],[-4],[4],[6],[-6],[-7],[-10],[-7],[-6],[-5],[4],[7],[-9],[-10],[1],[8],[5],[-4],[1],[8],[-5],[-6],[-7],[9],[7],[-4],[-3],[6],[-3],[-8],[2],[-4],[-8],[-7],[8],[-8],[-10],[7],[9],[-1],[-10],[-9],[7],[-7],[-6],[7],[-1],[-7],[9],[7],[9],[2],[2],[-7],[5],[-9],[-4],[-8],[-6],[1],[9],[1],[1],[8],[2],[-1],[3],[-10],[-5],[5],[-6],[5],[-5],[-1],[9],[4],[-4],[-8],[3],[-6],[3],[3],[1],[10],[10],[-5],[10],[-8],[-4],[-5],[-3],[-1],[-1],[3],[-4],[8],[6],[-5],[7],[-4],[1],[-3],[1],[5],[10],[-8],[-8],[-3],[9],[5],[-3],[-3],[6],[-8],[3],[10],[-9],[-4],[-6],[-8],[8],[3],[-7],[7],[10],[-9],[6],[-4],[10],[-5],[-1],[-7],[-10],[3],[-10],[2],[8],[-6],[-2],[1],[6],[5],[-4],[4],[10],[-6],[-4],[3],[4],[8],[6],[-1],[-7],[-9],[7],[-9],[2],[5],[-4],[9],[-8],[-6],[10],[6],[5],[5],[6],[-8],[-1],[10],[-9],[-3],[4],[8],[-8],[-3],[-3],[-1],[-8],[4],[-1],[-7],[-7],[9],[-3],[7],[9],[-4],[9],[2],[-8],[6],[-6],[4],[-5],[7],[9],[4],[8],[3],[-4],[3],[2],[10],[-9],[1],[-9],[-1],[-5],[7],[5],[-6],[8],[10],[5],[7],[-6],[5],[-8],[-9],[7],[-6],[-6],[-1],[2],[-1],[-2],[1],[6],[5],[-7],[-1],[3],[-10],[2],[9],[1],[6],[-2],[8],[-5],[-1],[5],[8],[-5],[3],[7],[6],[-1],[-2],[8],[-2],[9],[-6],[-5],[7],[5],[-8],[3],[-2],[-8],[10],[-8],[-7],[5],[-1],[1],[1],[9],[4],[-4],[-5],[-10],[1],[-8],[-2],[7],[-4],[-10],[-3],[-10],[-7],[-6],[-2],[-6],[3],[7],[10],[1],[-3],[-4],[5],[-8],[-6],[10],[3],[-4],[1],[-9],[-6],[-9],[-4],[7],[6],[-5],[6],[5],[-1],[-2],[3],[-6],[2],[-7],[1],[7],[-10],[6],[-7],[-9],[-2],[-3],[6],[-10],[10],[5],[4],[10],[-3],[-8],[-4],[2],[3],[9],[3],[-2],[-4],[3],[-2],[-10],[3],[-8],[7],[2],[6],[2],[4],[3],[4],[-9],[1],[3],[-6],[-7],[7],[5],[-1],[8],[10],[7],[7],[7],[5],[-3],[3],[7],[-3],[9],[-7],[2],[-4],[-6],[7],[-4],[-2],[-6],[-2],[4],[-2],[-8],[9],[10],[8],[-3],[-6],[10],[9],[4],[8],[6],[8],[-2],[-4],[10],[3],[2],[-5],[-4],[-2],[9],[2],[-5],[-5],[-1],[-6],[6],[-9],[-4],[5],[1],[-2],[-10],[5],[-4],[-4],[2],[-4],[9],[7],[-4],[-8],[-5],[-7],[2],[-3],[-9],[-5],[-3],[-6],[-5],[10],[6],[-6],[3],[8],[-6],[-6],[-5],[-2],[-6],[-9],[-9],[6],[5],[7],[-2],[-1],[2],[3],[3],[-5],[-8],[-10],[5],[-2],[-6],[-5],[-5],[6],[-5],[-2],[-1],[3],[-10],[-1],[10],[2],[8],[-4],[5],[-3],[7]], dtype = "int8")#candidate|10900|(672, 1)|const|int8
const_10901 = relay.const([-3,4,4,-2,8,-10,-6,3,-8,7,-8,-8,-5,5,3,3,-1,-3,-4,-9,4,3,4,-7,3,-8,-5,6,-1,3,1,9,5,-4,-9,-1,6,-3,2,-3,-6,-7,-1,-2,-4,-6,2,-6,9,8,-6,-1,7,-3,3,-5,8,9,-7,-2,5,7,-5,-6,6,2,-5,4,-6,10,-2,-8,8,-2,8,7,1,-5,-8,1,-7,6,10,3,-7,-5,7,-1,-3,-10,-6,6,-3,-4,-2,-7,-1,-10,-2,-7,5,10,-7,6,4,3,-7,7,-2,4,-7,-2,3,7,4,-6,6,-2,7,-5,6,-10,8,4,8,1,-9,4,-6,1,5,-10,3,5,10,2,-9,2,2,5,-5,7,-1,8,-10,-1,6,7,5,-3,6,-4,10,10,1,-5,-4,-10,1,-6,9,-7,9,8,10,1,-7,-10,-9,2,-6,8,-7,-6,-8,-1,-8,-4,6,4,-3,1,10,-6,4,10,-5,1,-7,-10,7,-4,2,5,9,-4,-4,2,-8,10,-8,-3,9,3,-9,2,6,3,5,-6,7,7,-6,-3,9,8,6,-8,-5,4,6,10,-4,-10,2,3,7,-9,3,1,7,-9,3,1,-10,2,3,-10,4,5,-7,5,2,-10,8,-7,1,2,-5,1,-10,-3,-4,9,6,-6,-6,-8,-7,-3,10,-3,-8,-6,-10,8,2,2,-8,-8,8,-7,6,-3,6,1,-10,6,1,-10,-2,10,2,2,6,-2,5,-9,7,-6,-9,-8,3,-6,-7,-5,5,-3,-1,6,-4,-2,-10,-1,-4,-9,-6,-4,10,-5,-6,-5,8,-9,2,8,6,6,2,6,-6,9,-3,-3,2,-1,10,9,-6,9,-6,6,7,-1,-1,3,3,1,4,8,-2,4,4,10,-4,8,3,3,9,-9,2,-8,-3,-8,5,-4,-4,8,6,8,6,1,3,1,1,-2,1,5,-9,2,-10,10,7,-1,-8,4,-6,-7,-2,-1,-8,3,1,3,2,5,-4,-3,4,3,-5,-10,-3,-10,-7,5,1,7,7,-5,7,-8,-6,-9,6,-6,10,-2,3,7,2,-5,1,9,2,-4,6,10,-2,-4,-3,-9,-6,-10,-4,1,9,3,10,8,5,-2,4,3,-1,6,9,10,8,-8,-7,2,-7,-5,-6,8,5,-2,-2,-8,-6,-8,2,2,-8,-4,-9,10,-1,10,10,-9,-2,5,-8,6,7,-8,-3,-1,-9,5,-1,-2,2,10,-4,6,-9,-9,-5,-10,-10,-3,7,4,-9,3,-6,4,9,-7,-2,8,-5,10,-1,-4,9,5,-9,1,10,10,1,3,10,4,4,-5,10,-10,-6,-3,10,-10,-7,-9,-6,-4,-6,8,6,10,-5,-8,2,5,2,2,6,-3,4,-1,-2,9,9,-4,9,-2,10,-9,-7,10,-2,1,4,-10,-5,-1,3,3,-9,-6,10,3,9,-2,-6,-6,-7,-6,-1,3,9,-3,6,-6,-2,3,2,3,10,8,10,-6,-2,-9,-1,1,6,2,-9,-7,3,-2,-10,4,2,7,5,10,6,-10,-4,6,-4,-4,-9,3,-2,6,-2,5,-4,8,6,5,-9,-10,6,5,-8,-3,9,-10,-3,-7,9,-10,4,10,-8,-5,-2,2,-3,-9,5,10,10,-8,-6,-7,-7,-8,3,-3,7,-9,-3,8,-9,8,1,-9,8,3,2,-1,-4,-10,-8,-9,-8,-5,-1,-6,-2,-4,2,5,1,-4,-5,-2,5,-8,-4,10,-7,-3,-8,7,-5,4,-4,-5,-6,-8,5,3,-1,-3,-10,-6,-7,-3,10,-4,1,-2,10,10,8,8,7,3,2,4,10,9,1,-2,-4,-7,8,-1,-7,-4,-10,-8,6,4,7,2,-10,-5,-2,3,5,10,9,10,4,-1,-6,1,10,2,3,-7,4,3,8,2,6,-7,-5,1,10,-4,-8,-10,10,6,-5,-8,4,5,-7,-5,10,8,-8,-7,-8,5,-7,4,9,3,-2,3,4,8,-6,6,5,-3,2,1,2,8,3,7,4,5,2,-10,7,-8,10,-1,8,8,-6,2,7,5,3,-9,3,3,-4,-2,2,6,-1,-9,-2,1,-7,4,-4,-3,3,6,-8,1,-3,-2,2,8,-4,-2,-5,-4,5,-8,9,8,3,-9,-4,-2,-3,3,-2,-9,-8,-5,-4,-7,9,10,7,3,1,-3,-2,1,7,1,2,8,-2,5,3,7,-5,3,4,-4,-6,1,9,-5,3,-8,7,7,10,-7,3,-7,2,2,6,2,-2,1,-4,-10,2,4,-5,-1,4,-7,2,9,4,2,7,1,7,-1,-8,-10,10,-2,-6,7,10,8,8,8,9,1,3,7,5,3,-8,4,4,2,-10,9,-5,-4,4,-6,-9,9,2,-4,-4,8,9,-2,9,-4,-5,1,-1,4,4,-6,-10,8,1,-6,-8,-8,8,1,-4,-8,-9,-8,3,-4,3,-1,7,2,1,2,4,-8,8,2,6,10,9,6,9,9,9,4,9,-3,-5,10,5,-2,9,6,5,1,-5,8,-4,-7,-8,1,8,-8,9,2,7,-6,1,-2,-9,10,7,-9,6,-7,6,2,10,-6,-9,2,4,4,3,2,10,-5,2,9,-9,-10,2,8,1,4,4,-8,5,6,10,9,9,-7,9,9,-4,-2,3,2,-8,6,2,2,9,-5,-5,-9,2,7,5,9,7,6,5,-5,-4,-7,-6,4,-7,4,-5,6,2,1,9,7,-3,-9,-2,-3,7,1,-9,1,-3,-5,2,8,-5,1,10,4,-4,-4,-7,-3,7,10,-8,-1,7,-1,-7,3,9,8,4,3,-2,4,-5,6,10,7,6,-1,4,-4,-5,3,-10,3,2,4,6,5,-5,-3,-6,3,10,7,-7,5,5,-6,-2,1,-7,-7,-2,-4,3,10,-8,1,8,-4,-8,-5,-8,10,-9,3,7,-9,-4,4,10,9,8,10,10,8,-2,3,-3,-9,5,8,-3,10,2,7,9,-4,5,-2,-7,-5,3,-8,-2,-9,-10,-10,6,2,-6,-3,-6,2,2,-8,-2,7,-10,2,-1,-10,9,-6,10,4,7,-10,6,-4,-6,7,-5,5,-7,-9,9,-9,-9,-3,3,4,-5,-2,-8,9,-1,2,-9,5,-6,-6,4,-3,-10,-2,4,-2,-4,-9,-5,6,3,5,-5,-9,5,-5,-1,-1,-5,-4,1,-7,2,-5,2,-2,9,8,8,-4,3,1,10,-4,3,3,2,8,3,1,-7,2,-2,10,10,-2,-5,-6,3,9,6,1,-9,-3,4,-2,1,-5,-4,5,-2,6,2,-2,10,2,-3,-5,1,7,-4,-6,-2,-7,7,2,-9,-7,-8,5,-2,5,1,10,-8,9,5,-6,-6,5,5,5,6,6,-2,-4,-9,10,9,-3,-6,-10,8,9,-10,-9,4,10,7,1,-6,-4,4,-4,5,-9,-8,3,6,1,-8,3,-6,9,-9,-3,-7,-10,4,-3,9,-9,10,6,5,4,-10,3,-9,9,5,3], dtype = "int64")#candidate|10901|(1350,)|const|int64
var_10902 = relay.var("var_10902", dtype = "float32", shape = (1, 275))#candidate|10902|(1, 275)|var|float32
var_10903 = relay.var("var_10903", dtype = "float32", shape = (18,))#candidate|10903|(18,)|var|float32
call_10898 = relay.TupleGetItem(func_10038_call(relay.reshape(var_10899.astype('int64'), [1950,]), relay.reshape(const_10900.astype('int8'), [672,]), relay.reshape(const_10901.astype('int64'), [1350,]), relay.reshape(var_10902.astype('float32'), [275,]), relay.reshape(var_10899.astype('float32'), [1950,]), relay.reshape(var_10903.astype('float32'), [18,]), relay.reshape(var_10899.astype('float64'), [1950,]), ), 5)
call_10904 = relay.TupleGetItem(func_10046_call(relay.reshape(var_10899.astype('int64'), [1950,]), relay.reshape(const_10900.astype('int8'), [672,]), relay.reshape(const_10901.astype('int64'), [1350,]), relay.reshape(var_10902.astype('float32'), [275,]), relay.reshape(var_10899.astype('float32'), [1950,]), relay.reshape(var_10903.astype('float32'), [18,]), relay.reshape(var_10899.astype('float64'), [1950,]), ), 5)
uop_10916 = relay.asin(var_10902.astype('float64')) # shape=(1, 275)
func_2326_call = mod.get_global_var('func_2326')
func_2332_call = mutated_mod.get_global_var('func_2332')
var_10920 = relay.var("var_10920", dtype = "float64", shape = (720, 1))#candidate|10920|(720, 1)|var|float64
var_10921 = relay.var("var_10921", dtype = "float64", shape = (6,))#candidate|10921|(6,)|var|float64
var_10922 = relay.var("var_10922", dtype = "bool", shape = (1, 54))#candidate|10922|(1, 54)|var|bool
call_10919 = relay.TupleGetItem(func_2326_call(relay.reshape(var_10920.astype('float64'), [4, 12, 15]), relay.reshape(var_10920.astype('float64'), [4, 12, 15]), relay.reshape(var_10921.astype('float64'), [6,]), relay.reshape(var_10922.astype('bool'), [54,]), relay.reshape(var_10902.astype('float32'), [275,]), ), 2)
call_10923 = relay.TupleGetItem(func_2332_call(relay.reshape(var_10920.astype('float64'), [4, 12, 15]), relay.reshape(var_10920.astype('float64'), [4, 12, 15]), relay.reshape(var_10921.astype('float64'), [6,]), relay.reshape(var_10922.astype('bool'), [54,]), relay.reshape(var_10902.astype('float32'), [275,]), ), 2)
output = relay.Tuple([call_10886,call_10898,var_10899,const_10900,const_10901,var_10903,uop_10916,call_10919,var_10920,var_10921,var_10922,])
output2 = relay.Tuple([call_10887,call_10904,var_10899,const_10900,const_10901,var_10903,uop_10916,call_10923,var_10920,var_10921,var_10922,])
func_10938 = relay.Function([var_10899,var_10902,var_10903,var_10920,var_10921,var_10922,], output)
mod['func_10938'] = func_10938
mod = relay.transform.InferType()(mod)
mutated_mod['func_10938'] = func_10938
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10938_call = mutated_mod.get_global_var('func_10938')
var_10940 = relay.var("var_10940", dtype = "int64", shape = (1950,))#candidate|10940|(1950,)|var|int64
var_10941 = relay.var("var_10941", dtype = "float32", shape = (1, 275))#candidate|10941|(1, 275)|var|float32
var_10942 = relay.var("var_10942", dtype = "float32", shape = (18,))#candidate|10942|(18,)|var|float32
var_10943 = relay.var("var_10943", dtype = "float64", shape = (720, 1))#candidate|10943|(720, 1)|var|float64
var_10944 = relay.var("var_10944", dtype = "float64", shape = (6,))#candidate|10944|(6,)|var|float64
var_10945 = relay.var("var_10945", dtype = "bool", shape = (1, 54))#candidate|10945|(1, 54)|var|bool
call_10939 = func_10938_call(var_10940,var_10941,var_10942,var_10943,var_10944,var_10945,)
output = call_10939
func_10946 = relay.Function([var_10940,var_10941,var_10942,var_10943,var_10944,var_10945,], output)
mutated_mod['func_10946'] = func_10946
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10298_call = mod.get_global_var('func_10298')
func_10299_call = mutated_mod.get_global_var('func_10299')
call_11002 = func_10298_call()
call_11003 = func_10298_call()
func_6244_call = mod.get_global_var('func_6244')
func_6247_call = mutated_mod.get_global_var('func_6247')
var_11012 = relay.var("var_11012", dtype = "float32", shape = (504,))#candidate|11012|(504,)|var|float32
call_11011 = func_6244_call(relay.reshape(var_11012.astype('float32'), [3, 14, 12]))
call_11013 = func_6244_call(relay.reshape(var_11012.astype('float32'), [3, 14, 12]))
func_10222_call = mod.get_global_var('func_10222')
func_10225_call = mutated_mod.get_global_var('func_10225')
var_11023 = relay.var("var_11023", dtype = "int8", shape = (1, 1568))#candidate|11023|(1, 1568)|var|int8
const_11024 = relay.const([[-0.703688],[6.050297],[-2.101143],[-9.667575],[9.010329],[5.508111],[8.946309],[5.269405],[2.560220],[-3.419099],[-4.109448],[8.501362],[5.936177],[-4.850560],[5.021681],[-2.964835],[-8.462868],[-1.393748],[2.516132],[-4.878875],[-8.152414],[7.060197],[-1.278970],[-7.122546],[-2.719751],[3.844558],[7.422187],[-3.111630],[7.758605],[-2.872176],[-1.114809],[9.058607],[0.765199],[3.380486],[-5.564037],[5.845417],[-0.955003],[-4.217669],[3.859587],[-7.372842],[8.230432],[-4.417675],[-0.724107],[-5.002483],[-5.066876],[-0.629858],[6.637022],[4.080013],[-5.713512],[7.043841],[-1.134353],[7.216954],[3.494861],[-9.549707],[-5.597551],[6.248590],[-8.469842],[-8.663469],[-6.422396],[4.129688],[9.662458],[3.013556],[2.555688],[3.941500],[-6.188240],[-7.161218],[-2.178625],[5.025405],[5.819769],[-3.290786],[-5.496265],[5.066251],[-8.202449],[7.319448],[-2.655232],[0.929589],[-9.246482],[7.197377],[1.890176],[9.420009],[5.281441],[8.851052],[9.024477],[-3.056679],[-5.728574],[-4.547392],[-3.520881],[2.645773],[5.560505],[7.881568],[9.657362],[-0.062622],[-0.014421],[7.277593],[-4.509240],[2.964120],[-8.182806],[3.643379],[7.170064],[-9.453157],[6.796658],[-7.745930],[8.694334],[-3.855156],[-6.786946],[-3.113917],[-7.352378],[0.383528],[-1.350858],[-2.887151],[-1.225161],[5.631465],[-8.311050],[-0.655889],[-8.363245],[2.946663],[-0.033791],[0.185417],[-3.926853],[-3.760091],[4.911177],[-7.015473],[4.147666],[-9.897678],[9.804081],[0.564283],[-3.545194],[-3.928528],[9.705399],[-8.765644],[-2.553683],[6.457330],[2.145643],[-8.777782],[-5.738635],[-8.619637],[0.240983],[3.970879],[5.203241],[9.336308],[5.158073],[-1.136242],[6.805738],[-8.323954],[1.386137],[-2.202139],[0.120017],[-1.461146],[-5.458732],[-1.004220],[-4.808710],[-7.590902],[2.375199],[-2.740850],[-9.315116],[3.592011],[-8.906448],[1.387962],[0.967710],[7.945666],[1.930108],[-9.506781],[5.516056],[1.784533],[2.903732],[1.362852],[4.524363],[0.063259],[8.566776],[2.260132],[4.324250],[1.832413],[-1.030225],[4.592192],[2.693252],[-4.746176],[-4.456390],[8.028992],[-3.539843],[2.257315],[-5.232304],[3.940999],[9.149199],[-8.755043],[-0.282367],[-7.659131],[1.088931],[-0.855560],[-5.612577],[9.839455],[-1.096349],[-4.135587],[-7.420358],[-4.338702],[1.547818],[-9.975642],[-1.726008],[5.555393],[-7.251082],[7.960712],[0.357775],[0.770446],[7.599913],[-8.495034],[5.702136],[2.305067],[7.064730],[3.254672],[4.002194],[-0.255350],[0.031915],[-0.899812],[-6.870476],[3.723879],[-5.581228],[-4.750083],[-2.753714],[-0.039901],[8.517266],[-1.652411],[-1.718645],[-0.725600],[3.347435],[6.044981],[7.832471],[7.078151],[-4.377880],[6.756695],[8.137725],[4.511928],[0.058975],[7.686240],[2.889499],[9.852244],[-6.350888],[-5.759385],[-1.293035],[8.198507],[-9.231080],[-4.251560],[-2.283783],[-5.936653],[-6.985191],[-7.959459],[4.767517],[6.869492],[5.953496],[-2.275282],[-5.949889],[2.297942],[9.131972],[5.863131],[-3.374066],[-9.449704],[0.032435],[-6.489172],[-5.593402],[-8.105495],[-7.524999],[9.670410],[-7.480775],[-7.476337],[9.998363],[9.767829],[4.176650],[7.187916],[-6.814678],[-3.096187],[3.266009],[9.678443],[1.700849],[-5.368388],[-8.584702],[-9.679033],[8.233748]], dtype = "float32")#candidate|11024|(275, 1)|const|float32
call_11022 = relay.TupleGetItem(func_10222_call(relay.reshape(var_11023.astype('int8'), [1568,]), relay.reshape(const_11024.astype('float32'), [275,]), ), 5)
call_11025 = relay.TupleGetItem(func_10225_call(relay.reshape(var_11023.astype('int8'), [1568,]), relay.reshape(const_11024.astype('float32'), [275,]), ), 5)
output = relay.Tuple([call_11002,call_11011,var_11012,call_11022,var_11023,const_11024,])
output2 = relay.Tuple([call_11003,call_11013,var_11012,call_11025,var_11023,const_11024,])
func_11027 = relay.Function([var_11012,var_11023,], output)
mod['func_11027'] = func_11027
mod = relay.transform.InferType()(mod)
mutated_mod['func_11027'] = func_11027
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11027_call = mutated_mod.get_global_var('func_11027')
var_11029 = relay.var("var_11029", dtype = "float32", shape = (504,))#candidate|11029|(504,)|var|float32
var_11030 = relay.var("var_11030", dtype = "int8", shape = (1, 1568))#candidate|11030|(1, 1568)|var|int8
call_11028 = func_11027_call(var_11029,var_11030,)
output = call_11028
func_11031 = relay.Function([var_11029,var_11030,], output)
mutated_mod['func_11031'] = func_11031
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_11036 = relay.TupleGetItem(func_9553_call(), 0)
call_11037 = relay.TupleGetItem(func_9555_call(), 0)
uop_11041 = relay.sqrt(call_11036.astype('float32')) # shape=(2, 6, 3)
uop_11043 = relay.sqrt(call_11037.astype('float32')) # shape=(2, 6, 3)
func_1428_call = mod.get_global_var('func_1428')
func_1432_call = mutated_mod.get_global_var('func_1432')
var_11064 = relay.var("var_11064", dtype = "uint64", shape = (2, 280))#candidate|11064|(2, 280)|var|uint64
const_11065 = relay.const([10,4,-7,6,4,-4,-1,-1,-3,-10,8,6,-5,-8,-4,10,7,4,8,7,-3,-6,-8,-7,8,3,1,7,-10,-6,10,-10,1,8,4,-1,6,1,-6,6,6,-7,1,-4,9,-7,8,-3,-3,-6,8,-4,-7,-10,-3,-7,8,-7,-10,-9,-1,-5,4,-7,10,-4,3,5,-4,2,-3,-8,3,-9,-6,-1,7,-5,-5,-9,-6,-5,4,-10,5,8,1,9,1,8,-10,-6,6,-9,-4,7,-3,10,2,-8,1,5,1,-7,-5,4,3,-2,1,-9,-2,-8,1,-4,9,-10,-7,-4,10,-5,-6,10,-8,8,6,8,-6,-4,-6,9,-10,6,5,-8,-1,2,9,-5,-4,8,-10,7,5,-4,10,6,4,7,-2,-6,5,10,-10,5,-10,2,-9,8,10,5,-5,2,-3,-3,-4,-9,7,-7,6,10,4,8,3,-9,7,-5,-5,4,-7,-6,-7,2,-6,-2,-10,10,4,-9,-3,-2,-4,-3,-5,8,5,3,-1,-6,5,-1,10,-10,1,-3,-10,3,1,5,-6,-8,-7,2,7,4,8,8,1,2,9,-4,-8,5,4,7,-10,-10,-7,6,-10,7,-10,-6,5,10,-3,3,1,3,7,-3,9,8,6,2,-6,6,6,-4,-9,-4,-9,4,-6,-5,-8,-2,4,3,-3,7,-5,-3,6,1,2,-8,4,-10,10,3,-4,7,6,7,6,-9,7,-4,-9,-10,2,-1,1,-7,7,-1,9,-8,-7,-2,-8,-5,-3,10,8,5,8,-8,-9,8,-9,6,6,-10,-8,-5,5,3,-1,-4,-1,-8,-6,5,-3,3,3,-7,5,9,2,-10,-6,-9,-4,-3,-1,-5,9,-4,5,4,7,7,1,-5,-2,1,8,2,-10,-8,-7,-8,2,-9,-9,7,4,-8,-9,-9,-10,6,10,-9,-4,1,-9,-8,-1,10,-9,6,10,-10,8,10,10,5,6,2,10,-9,-4,-2,3,-5,-10,10,6,10,9,-4,-8,9,-3,-1,-4,-2,7,-3,7,-5,-10,8,4,4,10,2,-8,-9,4,4,10,6,3,8,-9,8,7,-7,-5,-4,-8,-2,-9,-7,-1,-3,-8,-6,10,2,8,-9,7,-8,5,-7,2,9,-10,-6,-9,2,8,10,-4,7,10,9,-2,-10,-2,-1,-8,-6,9,1,-1,-7,3,-8,10,10,-3,-9,-7,3,-8,4,7,6,1,5,-10,-10,-2,9,6,-3,-8,4,-1,-7,-3,7,-10,-5,-2,-1,-7,-7,-9,-10,-6,4,7,-3,6,9,10,9,-1,-9,9,9,-2,4,3,-8,8,6,1,6,-9,9,3,7,6,-8,7,10,2,-1,-9,7,-3,3,-2,3,3,1,2,9,6,-3,-5,-4,-5,3,4,-1,4,-10,4,10,-7,-5,-8,9,2,-1,-2,-3,10,1,9,-2,10,9,-7,-5,-9,5,5,-5,3,3,9,-2,-5,4,9,-6,7,-4,4,1,10,-1,10,-1,2,-10,-3,9,-9,1,-8,-8,-2,-3,2,10,-2,6,-6,6,-10,-8,-1,10,-1,-8,7,8,-8,6,5,-1,-6,10,3,-2,2,-7,-9,3,-9,-1,-6,-6,9,4,7,-2,4,6,8,10,8,-5,4,6,-8,10,7,-8,-9,2,-10,10,8,9,4,8,-7,-8,8,2,1,9,9,4,-2,7,-3,-7,-5,-9,-8,-10,1,-5,1,6,-1,-2,4,10,4,-9,-6,-10,-5,-9,-7,7,6,8,9,-3,-8,-1,-9,-8,2,-2,4,-7,-2,-9,5,8,7,-1,7,-7,9,7,2,-2,3,-1,5,-5,4,7,-1,3,8,-2,-9,10,-8,-5,2,-3,1,-9,3,3,-7,7,5,6,7,8,9,-4,-7,-7,8,4,-3,-8,-7,4,-3,-4,2,-2,9,4,2,-5,9,-7,-2,-8,6,-1,-7,8,7,-8,3,-9,2,10,-3,2,-9,-9,-10,5,-3,10,5,-1,2,-3,-1,-9,10,-4,6,-7,5,-5,-4,-4,1,8,1,-8,9,2,-6,3,-2,-10,-5,5,-2,-6,3,1,3,7,9,9,-9,-9,1,2,9,4,-9,-3,-1,5,-10,-7,-8,-6,-2,-6,-7,-7,-7,4,10,-9,8,10,-4,1,-5,-8,3,-1,-1,5,4,-6,10,8,-7,3,-2,3,9,-9,-4,-9,-2,-1,1,-9,-9,-7,-5,3,3,-5,8,-10,-2,1,-7,3,3,10,-4,-9,6,-4,-3,10,2,1,-3,-6,2,-1,10,-8,-9,-8,-9,-8,5,7,8,3,5,9,-5,-5,2,7,1,4,-4,-5,-9,10,-4,1,-4,-1,8,-7,2,-1,-9,6,-4,3,5,10,2,10,-9,-7,7,2,-9,10,4,-8,2,2,-6,-3,-3,-5,-7,1,5,-8,10,-10,2,10,3,-8,4,4,-5,1,2,-4,-2,-4,5,-1,-6,1,1,4,1,-3,-2,-5,4,6,3,-6,5,1,-3,-4,-1,7,-8,6,-10,4,-5,-8,6,-4,2,-3,-9,-8,5,1,6,-8,6,-4,4,-10,-9,-8,10,4,-10,-10,1,1,-9,4,10,-8,9,-5,-1,3,-3,5,-1,-7,7,-9,-7,-4,5,-2,9,1,3,10,3,4,-4,-9,-9,7,-6,-4,-9,9,-6,6,10,-5,7,7,-1,-6,-9,10,-5,-3,3,6,-6,3,6,9,-9,1,2,-8,8,-9,-10,4,-6,-6,2,1,7,-2,-3,10,-9,-10,8,5,-3,-2,3,-10,-1,-8,-10,-5,-2,1,9,-9,-4,-9,-8,-10,-9,6,6,-1,-2,-2,-5,-9,-3,2,4,10,4,-2,-4,-5,-3,-6,-7,-8,5,3,-6,-9,-5,-10,-6,-8,-10,3,1,8,9,4,1,6,1,-8,-4,-3,9,9,-2,6,-5,5,-8,-3,8,-2,-9,-7,-10,5,-3,2,-2,9,-5,-7,5,8,6,2,-9,5,5,-8,8,-8,4,6,10,-3,2,5,3,-3,-7,4,-9,5,2,8,9,-10,-5,-10,-2,10,-2,-3,2,-7,-1,6,2,6,7,4,2,-8,2,4,10,10,-10,-10,-1,1,9,-3,-1,5,-5,-1,-2,-5,-8,10,2,-1,-3,3,7,7,3,7,1,1,10,4,-2,6,-8,7,6,-10,-8,-4,-1,3,3,8,-1,-1,-1,-2,-3,-1,7,-1,-6,4,8,-3,1,2,5,9,9,4,4,-2,-6,-10,-3,-6,3,-6,-7,7,4,-1,9,4,9,-9,6,2,6,-5,-2,-7,10,-6,-2,-5,2,5,4,-1,-7,-6,2,5,9,-5,10,5,-7,6,-4,8,-7,-9,-2,3,-1,-2,-6,-8,-6,5,-7,7,3,-5,-4,-5,6,1,-4,-7,3,7,8,-4,10,-2,2,-3,3,-2,-1,-8,-10,-2,1,-1,-1,-6,6,5,1,-5,7,10,5,8,8,10,-3,6,4,-10,10,5,-8,-3,10,-4,3,-8,3,-2,-10,-2,-7,-8,-6,9,4,1,6,1,-2,-4,6,-5,10,3,-2,-4,1,-3,10,-4,-5,8,-1,-1,3,-9,-9,-9,2,10,7,4,-6,7,-6,-2,-8,-6,9,-3,5,3,-4,5,-6,-9,-9,-1,7,-2,-10,8,3,10,-1,6,3,-10,-4,5,9,3,9,2,-3,-3,-9,5,-2,5,6,-1,-1,-9,5,-4,-10,-2,-10,-6,-1,8,-7,1,5,-7,7,1,-9,4,-4,8,-5,4,-9,8,7,-9,8,8,-7,-6,2,-4,-8,5,-7,8,5,7,2,1,1,8,1,-5,-10,3,-10,3,7,2,10,6,-3,7,-8,7,-10,1,10,10,-8,-1,1,-8,9,2,3,-3,1,-2,-2,-8,-3,-4,6,-2,-8,-5,-5,9,5,3,1,2,8,9,-4,-10,6,9,-1,-8,-2,-8,-6,-10,10,6,-9,-1,4,-7,-9,-5,-3,8,-5,-3,-9,-5,9,5,1,1,10,7,4,-2,10,-9,-2,-9,5,-4,-4,-1,-4,-4,-8,5,9,-5,7,-7,7,-2,-6,5,-4,10,-8,4,-7,-9,5,6,7,6,-9,10,2,-4,-4,2,8,7], dtype = "int8")#candidate|11065|(1568,)|const|int8
call_11063 = relay.TupleGetItem(func_1428_call(relay.reshape(var_11064.astype('uint64'), [10, 8, 7]), relay.reshape(const_11065.astype('int8'), [1568,]), ), 0)
call_11066 = relay.TupleGetItem(func_1432_call(relay.reshape(var_11064.astype('uint64'), [10, 8, 7]), relay.reshape(const_11065.astype('int8'), [1568,]), ), 0)
func_727_call = mod.get_global_var('func_727')
func_731_call = mutated_mod.get_global_var('func_731')
const_11077 = relay.const([-10,-3,2,-6,3,-4,2,4,-4,7,-9,-7,-6,3,-9,-9,5,5,5,-8,9,-1,-5,-2,-1,9,7,-6,8,-8,-2,-9,-1,4,8,-4,-4,-1,-1,10,-3,4,4,-1,-9,-1,-8,-10,5,-6,-6,1,7,-10,6,-2,8,-6,-6,-5,8,8,8,-8,1,-9,6,8,-1,-4,8,-5,2,9,10,4,1,3,-9,-6,5,-1,5,-6,10,5,-6,4,-2,7,-8,10,-5,3,-6,-6,2,3,9,-6,-7,-6,-9,-2,-5,5,-10,-5,9,-8,-6,-7,-4,-6,10,-1,-2,2,1,-4,-3,-2,-5,-9,-4,1,-5,-8,9,-1,7,5,-3,1,-1,10,4,-8,-10,3,-5,-6,3,9,-2,-8,-4,-8,-10,-1,-4,4,5,-6,8,-3,-4,-5,-6,6,7,-7,-8,10,-2,6,3,3,-1,-5,8,4,-8,8,5,10,-1,5,-1,-7,7,8,-3,-6,-10,7,-10,2,2,-9,-8,-1,7,-6,2,-1,7,8,10,8,6,10,6,1,-3,-7,3,-8,5,-9,9,7,-9,10,9,-3,-3,9,4,9,4,8,5,10,-2,-8,-10,9,-10,-1,8,3,7,-3,4,10,-10,-7,-6,9,-5,9,4,7,8,2,-3,7,7,-3,-2,10,5,10,-6,9,6,9,7,-1,-3,1,7,6,-6,4,-5,-3,-6,2,-10,5,9,3,9,1,8,-8,9,-9,-6,-4,-1,-3,-10,9,6,-5,8,-10,-3,-9,-2,3,4,8,-7,2,1,-3,10,10,-5,-8,-10,-8,-9,3,-7,-5,-10,-10,7,-5,7,9,9,1,2,-7,-10,-5,-3,2,-5,-10,2,-2,-1,-7,-4,-8,-4,8,-10,8,1,1,-4,-3,-2,5,-2,2,5,-4,6,3,2,-5,6,4,-1,-1,-10,7,7,5,-1,5,-8,5,10,3,-9,6,-4,-5,5,-1,10,6,-1,9,10,10,-2,10,-4,7,3,-1,2,-3,1,2,3,-1,1,-8,5,-6,2,-10,-1,10,-10,3,6,-1,-2,-8,-2,-1,10,-3,5,1,-7,4,8,2,-2,2,-10,4,-5,-7,1,2,-7,-4,4,10,6,9,-5,-4,5,4,8,-9,10,3,-4,-1,-10,3,-10,-5,-4,-4,7,-7,-5,-2,-9,-7,-7,-10,-3,-3,-8,7,9,6,-8,4,8,2,2,-6,2,-2,4,-1,-5,-10,-1,10,-2,-5,7,-8,1,-10,-3,-6,2,4,-9,2,1,6,-2,-4,-3,5,-10,-6,-2,-4,5,-9,-7,2,10,-2,10,5,-4,-4,-9,6,-3,-8,1,1,-3,4,5,-8,1,-8,-7,3,-3,8,-8,-1,7,6,-3,-3,-9,-6,2,-1,-5,-4,-1,4,3,-8,-6,-2,8,8,-6,10,7,-10,-2,-4,10,-9,-6,-7,-5,-2,3,2,3,-7,-5,6,2,3,-9,-9,6,1,1,10,4,6,5,3,2,-9,-4,8,-3,10,-7,-10,-6,-4,-1,-2,-4,4,-6,7,6,4,-1,6,3,-5,-4,5,7,5,-2,3,-5,9,-4,1,2,-10,8,-8,-3,-5,-9,-4,-8,4,-10,-9,-6,8,5,-1,-7,-4,8,-7,-7,7,3,-4,-4,4,-7,-9,-1,2,8,-7,-6,-1,-4,-7,-3,9,-8,8,1,-4,-4,1,1,3,9,-6,10,-9,-6,-5,1,-4,7,8,1,-8,8,2,3,1,-7,6,6,4,-2,-10,5,9,-5,3,3,-5,-1,2,-2,5,-2,9,-6,10,3,10,-8,-1,-8,-1,4,-3,2,-8,-8,6,-3,10,7,7,3,-6,-6,4,-1,-8,2,1,-7,-8,1,-7,-8,-4,-8,-3,-6,-2,9,-10,-10,5,-10,-5,5,-3,7,1,-8,10,-3,7,-3,-6,4,3,4,7,6,10,3,-8,-3,8,1,7,1,5,-2,8,-7,-1,1,-5,-8,-8,8,5,-2,-3,9,9,4,5,5,4,-4,-4,-3,-2,4,3,-6,3,9,3,6,9,-5,5,-10,3,4,-1,-4,7,4,2,-8,10,-3,-7,-4,-8,-3,-9,2,4,-7,2,-9,1,-8,-3,-10,-6,-5,-3,-9,8,-3,-2,-8,2,3,-1,4,-6,-7,-1,-2,-1,9,-6,4,-10,-2,4,1,7,10,8,10,-6,-3,-5,3,-1,-1,-1,-10,3,-5,2,-3,-4,7,-8,-8,-7,3,-7,9,1,3,-6,-4,5,-6,-9,-5,3,-7,-2,-5,-5,10,-7,9,2,9,-5,9,-4,4,-5,6,-3,-8,5,4,4,-3,-5,-8,-4,-5,9,8,8,-9,-3,2,6,-2,5,-5,10,-1,-10,-3,5,-5,3,-10,-5,5,-3,-5,9,2,-3,-5,6,-1,-5,3,2,6,9,-6,6,4,8,-8,9,1,8,-7,1,1,10,-6,9,-10,8,5,-9,3,10,-4,-1,1,2,4,-5,1,-8,-10,1,-5,7,-2,9,-4,7,10,-5,-1,-8,-2,9,-8,10,-4,-7,-9,9,1,-9,10,2,-7,-8,4,3,-1,-9,1,-7,10,6,-10,-3,4,5,9,4,6,4,10,-8,-2,-7,8,-8,10,10,-8,3,6,-7,-7,2,-3,-5,-4,3,2,8,6,8,9,-7,2,2,6,-2,-10,-8,1,-7,6,2,10,10,8,-1,8,8,6,8,1,6,-6,-6,8,5,-3,-4,9,-8,-1,-5,-5,-1,-3,4,10,-7,6,7,-7,8,1,3,-5,6,8,-5,4,-5,-6,3,2,-4,1,10,6,-8,-9,7,-9,-10,-4,-3,2,7,8,-3,8,-7,-1,-7,-5,3,7,8,1,-5,4,5,-6,3,10,6,-5,5,2,-4,10,-2,7,2,-1,-5,5,-2,-10,-6,-3,8,-5,-6,6,5,7,-10,-1,-4,-9,7,9,-4,-4,-9,5,7,-10,-9,2,2,-3,-6,7,7,9,2,1,6,8,-2,-1,-3,1,9,5,-7,-6,-5,2,-10,5,-8,-10,4,10,-1,7,3,-5,3,6,2,-2,-8,8,7,2,2,10,9,3,2,-3,8,-9,-2,1,-8,1,-7,-4,4,10,5,3,-1,-4,-8,7,-7,-7,1,2,-10,5,-2,2,2,-4,-3,1,-5,8,-1,9,1,-8,-5,4,-1,-3,-6,3,-8,-7,5,-6,4,-6,-8,7,-3,6,3,-3,6,1,2,2,-10,10,10,8,1,10,-8,-1,-10,-9,4,9,-8,4,4,-10,8,2,10,-1,-5,-8,-10,6,-5,-4,6,9,-4,6,2,2,9,-7,3,8,10,3,-5,9,3,-9,9,-5,-2,10,-8,-3,6,4,7,-7,9,7,8,-4,-1,10,-2,2,-7,-7,5,-1,-9,10,10,4,-7,1,-9,4,9,-2,8,-4,-6,-9,-2,-10,9,8,-7,-7,3,2,7,4,2,7,-9,5,4,6,8,7,-8,-7,5,-1,-3,2,1,-6,-1,-2,-5,-8,3,-3,10,8,-2,2,8,10,8,-1,-8,-3,9,-3,-4,-1,5,-8,5,2,1,-7,-9,2,8,10,10,9,9,-4,-3,10,1,10,7,3,7,-9,-8,-6,4,-4,-9,4,5,1,-2,-3,-2,-1,4,-7,8,9,-6,-2,-1,5,-9,10,-6,1,3,-5,6,3,9,-3,5,3,-5,2,-3,-9,-5,-8,9,10,-1,6,10,9,1,-8,-2,-8,8,-6,-6,-5,2,-3,-5,3,-10,5,-2,1,4,8,2,4,7,-3,5,-7,3,7,4,4,-3,-6,-3,8,6,-3,3,8,-9,4,-9,10,10,-10,9,8,2,9,-1,-1,3,5,5,-8,2,-6,-1,-3,-4,-7,6,7,1,1,10,-1,10,-1,-9,9,10,-4,-2,4,-9,-10,-6,3,2,-9,10,9,6,-4,10,-8,-9,-3,-9,-8,8,5,7,-1,-4,3,-2,3,-4,-3,-8,-5,3,-7,-5,-1,5,8,4,10,2,1,10,2,-8,-8,-5,-5,-3,1,9,2,7,-5,9,-10,-1,-5,-2,-4,-3,9,7,8,-6,7,-10,9,-7,10,-8,-7,9,1,-10,-2,-7,-2,-4,-2,7,6,-6,-5,-7,-9,5,-5,9,-8,1,1,-10,10,-1,-4,2,6,-5,3,9,-9,9,1,-2,-8,-10,8,-1,-5,1,-3,-1,2,-3,10,-8,-6,-4,6,7,-6,-2,6,5,10,-3,8,3,2,7,-7,10,2,2,10,4,6,-2,-3,-6,-4,5,4,4,-3,-5,-3,-4,1,-7,-5,8,-10,8,9,4,2,5,-7,-2,-9,-9,-4,-1,8,7,-10,-9,-5,-4,8,8,-9,-9,-4,-7,8,9,-10,8,-10,-5,9,-1,-8,9,-4,9,-1,-10,-7,-10,-4,10,1,3,-2,2,-10,-6,-9,-6,3,8,2,-9,-6,6,9,-5,-4,2,7,-9,-10,-7,1,3,9,-8,-9,1,-7,7,-5,-8,3,6,7,-8,2,5,-3,7,-8,-4,-1,6,6,-6,8,-9,-6,-2,2,-10,-9,10,-3,-3,-4,-10,6,3,-1,-2,-4,9,-7,5,-1,8,1,-10,-6,5,-4,5,3,1,-10,1,7,6,-1,5,-7,1,-2,-2,6,10,-2,-9,4,7,6,-10,7,6,6,-9,-6,-2,-1,-7,-2,6,-2,9,6,2,5,4,-7,-2,-2,7,-1,-4,-5,-9,8,3,2,-7,-7,2,-10,-5,-5,-9,6,-4,-9,1,-1,-1,8,10,5,10,-8,-3,9,5,-3,-10,4,-9,-4,7,1,-4,-1,10,-4,7,3,2,9,3,-4,4,8,-1,4,-8,5,3,-8,1,3,6,1,5,5,-2,2,-9,9,-3,-7,7,4,-9,5,6,1,2,-8,-1,-7,-4], dtype = "uint32")#candidate|11077|(1872,)|const|uint32
const_11078 = relay.const(2, dtype = "uint16")#candidate|11078|()|const|uint16
const_11079 = relay.const([3,-2,-9,-10,4,-6,-8,6,-3,8,8,-7,-4,10,-7,10,2,7,-6,4,10,4,2,7,-8,-7,5,-7,-10,-7,-9,9,9,-5,-2,5,-10,9,-1,-9,9,5,1,5,10,2,-10,-1,6,6,-8,9,-1,1,-5,3,8,2,-10,3,-10,9,6,1,-9,-10,-7,4,9,2,-6,2,2,3,10,2,-1,-9,5,8,4,-9,-1,1,-10,8,5,-10,-1,-9,-9,10,-5,8,7,-2,-6,-4,-5,8,7,1,-5,8,-4,-8,9,-4,7,4,9,-8,8,3,6,-1,9,-4,-5,-2,-9,-3,-8,-3,-10,-10,-5,-6,-10,-10,-4,1,5,8,8,-10,-8,-7,1,-3,1,3,-4,8,-10,4,1,7,-9,-7,-3,-5,-9,1,-6,-4,10,10,-6,9,9,10,-7,8,-2,-4,-2,-7,-3,3,-3,-6,-4,-6,-9,8,10,-7,-5,-4,10,1,9,2,-6,-3,4,9,-8,-8,-2,4,-4,-1,-8,3,3,9,-2,7,-8,5,2,9,3,-6,6,8,-2,9,4,-9,8,10,-1,-7,7,-10,-10,-10,8,7,-7,4,-6,1,-4,6,2,-1,-4,1,-2,2,-2,2,-8,2,8,5,8,1,-10,-4,-4,3,-5,1,7,-7,6,9,-2,7,8,1,2,7,-10,2,6,-4,-4,-6,8,2,-5,-8,-3,-5,1,-4,-10,2,-2,6,4,8,-6,-8,2,-10,10,-3,3,1,-8,6,6,7,-4,5,-2,-5,9,-5,-1,7,-3,4,2,1,-10,5,-4,-5,5,8,5,10,-7,7,9,1,8,-7,1,-8,2,-1,8,-9,-6,-4,10,-4,-8,7,7,-7,-3,5,2,-7,9,-5,3,-3,8,-9,3,7,6,-7,2,-8,-10,-9,6,-1,5,5,-7,-5,8,-7,-7,2,-6,8,5,-3,1,-9,9,4,-5,9,7,-9,10,-6,8,-2,-7,4,-8,-8,10,-6,9,-2,8,6,-9,-2,1,-8,6,-7,10,-6,10,-7,-5,-9,2,-9,-5,8,10,-3,-8,1,-10,-10,10,9,1,-10,9,-1,3,3,-4,1,1,-4,4,-6,4,5,1,5,1,10,-7,1,10,-9,5,8,-4,6,8,2,-7,7,10,1,7,1,4,-5,6,-9,-4,8,7,-5,5,8,-4,-7,7,6,-1,10,-9,-10,-7,-5,-3,-8,-6,-9,4,-10,-4,-3,-8,7,-3,7,-1,6,-5,10,5,-2,3,-3,-9,-5,3,4,-6,3,9,3,6,-10,4,2,-8,-4,6,-9,-2,7,-4,-7,5,4,-9,-4,8,-7,-3,-4,5,-1,-5,5,-5,-3,5,-1,-9,4,2,4,-1,-4,1,-5,-6,-5,-9,8,-3,4,2,-10,-10,8,2,2,2,10,-4,8,-3,2,-3,7,3,6,9,-4,-10,-9,-4,-8,4,8,2,9,10,9,-2,-1,-10,-8,-3,-5,7,-5,-4,-7,-10,-8,4,-2,-9,-8,-7,-5,8,-5,-10,-5,-6,-9,-3,1,-3,10,6,-10,2,5,-8,10,6,8,8,2,-2,-4,-7,-2,4,6,5,7,7,-9,-4,3,-4,5,-2,6,8,-3,-7,-3,-9,2,-8,-1,5,-2,-9,-9,3,7,-3,-9,6,-3,-7,5,9,9,-8,-4,2,-2,-8,6,-6,-7,7,-9,-10,-6,-3,6,-8,-1,7,1,-1,2,5,3,2,-2,9,-4,8,-7,-10,-4,8,-7,1,4,-3,5,6,-1,9], dtype = "uint16")#candidate|11079|(675,)|const|uint16
call_11076 = relay.TupleGetItem(func_727_call(relay.reshape(const_11077.astype('uint32'), [16, 9, 13]), relay.reshape(const_11078.astype('uint16'), []), relay.reshape(const_11079.astype('uint16'), [675,]), ), 1)
call_11080 = relay.TupleGetItem(func_731_call(relay.reshape(const_11077.astype('uint32'), [16, 9, 13]), relay.reshape(const_11078.astype('uint16'), []), relay.reshape(const_11079.astype('uint16'), [675,]), ), 1)
func_2354_call = mod.get_global_var('func_2354')
func_2357_call = mutated_mod.get_global_var('func_2357')
call_11082 = func_2354_call(relay.reshape(call_11063.astype('float32'), [7, 16, 5]))
call_11083 = func_2354_call(relay.reshape(call_11063.astype('float32'), [7, 16, 5]))
func_10657_call = mod.get_global_var('func_10657')
func_10658_call = mutated_mod.get_global_var('func_10658')
call_11091 = relay.TupleGetItem(func_10657_call(), 1)
call_11092 = relay.TupleGetItem(func_10658_call(), 1)
output = relay.Tuple([uop_11041,call_11063,var_11064,const_11065,call_11076,const_11077,const_11078,const_11079,call_11082,call_11091,])
output2 = relay.Tuple([uop_11043,call_11066,var_11064,const_11065,call_11080,const_11077,const_11078,const_11079,call_11083,call_11092,])
func_11106 = relay.Function([var_11064,], output)
mod['func_11106'] = func_11106
mod = relay.transform.InferType()(mod)
var_11107 = relay.var("var_11107", dtype = "uint64", shape = (2, 280))#candidate|11107|(2, 280)|var|uint64
output = func_11106(var_11107)
func_11108 = relay.Function([var_11107], output)
mutated_mod['func_11108'] = func_11108
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11190 = relay.var("var_11190", dtype = "float64", shape = (16, 12, 3))#candidate|11190|(16, 12, 3)|var|float64
uop_11191 = relay.cosh(var_11190.astype('float64')) # shape=(16, 12, 3)
output = relay.Tuple([uop_11191,])
output2 = relay.Tuple([uop_11191,])
func_11196 = relay.Function([var_11190,], output)
mod['func_11196'] = func_11196
mod = relay.transform.InferType()(mod)
mutated_mod['func_11196'] = func_11196
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11197 = relay.var("var_11197", dtype = "float64", shape = (16, 12, 3))#candidate|11197|(16, 12, 3)|var|float64
func_11196_call = mutated_mod.get_global_var('func_11196')
call_11198 = func_11196_call(var_11197)
output = call_11198
func_11199 = relay.Function([var_11197], output)
mutated_mod['func_11199'] = func_11199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10729_call = mod.get_global_var('func_10729')
func_10731_call = mutated_mod.get_global_var('func_10731')
call_11258 = relay.TupleGetItem(func_10729_call(), 0)
call_11259 = relay.TupleGetItem(func_10731_call(), 0)
func_11196_call = mod.get_global_var('func_11196')
func_11199_call = mutated_mod.get_global_var('func_11199')
const_11261 = relay.const([-9.288421,2.994538,2.405269,2.578295,-1.233791,3.723023,-3.597417,5.459852,2.541252,7.785667,-1.530603,2.214967,6.420366,0.097921,-2.853373,1.239887,3.103423,-1.616098,6.090307,-5.527034,-4.947879,-4.956465,4.707435,-6.263492,-3.332652,7.405085,-5.536744,-9.603541,-2.876330,-9.271588,-4.863831,2.439234,-8.146139,-8.725826,8.265408,-7.348808,7.039488,-7.783349,-5.409628,0.509264,-8.286017,2.793630,8.902688,0.609287,2.508961,-7.778232,4.045166,0.714189,9.335371,8.438831,-3.990312,-9.218294,-1.260616,6.922883,-2.404043,1.677837,9.165156,1.792445,-8.874886,-4.853552,-0.407048,6.913434,-1.264258,-7.360051,7.957255,-1.142207,1.268221,4.755834,6.646114,-0.182505,1.008872,2.994580,-7.493832,0.387149,3.553301,-2.655973,-2.178401,8.987238,3.664784,-0.864515,1.306503,-7.119193,-8.346675,-6.653527,-6.496457,1.422247,-0.344167,8.254337,2.400178,-5.956638,-2.221177,-8.987553,-7.406364,-5.161762,5.578354,-9.309309,0.983528,5.475869,-1.933267,-8.989026,-6.842510,-8.632803,-5.234285,2.059185,-2.693865,-1.563358,9.654442,5.582499,-8.513270,4.615906,0.133719,-5.481368,-1.828280,-9.389043,6.633419,-8.269408,-6.307896,-7.866719,-5.191364,-6.686140,6.000890,1.512013,6.194898,8.056853,-4.791731,-0.989596,-6.011174,8.395852,-7.123439,-1.995858,-9.589874,-2.743056,2.560175,3.543178,-4.865158,0.984831,-4.652648,-5.012699,5.770253,0.601396,-5.567270,3.960765,-4.555549,-0.009879,-3.106378,-0.250629,5.137675,3.615703,8.113348,-4.401378,-7.304960,-0.602528,-4.297838,7.809203,-5.694155,-0.721746,-8.433790,2.773211,-7.966242,6.537965,-4.452360,1.902342,-3.206734,2.490157,0.114619,-3.370139,7.477620,-6.431322,2.009922,0.317253,-4.055063,2.224610,-4.222405,2.969061,-9.148897,1.216333,-7.947432,-3.701676,-9.811258,-8.679276,1.509795,7.530808,9.242978,-8.370842,7.558193,-8.728490,5.343692,-2.101560,1.592228,-0.419664,2.675583,-7.269172,-1.324717,-6.551088,-4.846591,-5.818864,8.740442,-6.755909,7.686026,-8.330887,2.738465,-8.209259,-1.424431,-4.880052,-7.750846,4.941001,-7.029685,7.422852,-1.281167,8.380361,9.927876,-5.203631,-1.044277,7.147474,1.016897,-5.573618,4.862403,-0.163707,-7.329645,3.086474,0.451337,-8.642732,-5.140275,5.080529,0.843976,-1.283610,-9.222243,-8.791657,5.025831,9.121293,5.421568,9.617533,-9.013980,-4.466487,-0.527958,-3.492524,-2.188765,-4.545208,-7.775723,2.333062,-8.698219,-4.207156,-5.504417,7.872503,2.233175,-3.141108,3.202442,5.771143,2.632378,-8.722305,0.225365,-4.401895,5.156878,-7.620010,-4.333139,7.949479,4.544504,3.949924,-3.385254,-9.978191,7.935291,-0.912962,-3.186971,2.160402,9.135993,-5.952474,-9.325555,-0.277348,6.739558,2.214898,-6.698578,-2.247426,7.327271,9.919877,5.857467,9.832109,1.301354,2.988869,8.773990,3.315474,-5.870048,1.361284,-5.461589,-5.024252,-0.464098,3.446757,-2.889240,8.953355,-0.151147,-0.452417,-4.094212,-9.741100,7.828194,7.818851,-2.705547,-4.293418,-1.506725,2.601777,2.905151,-7.053899,-6.306850,2.083212,-5.830667,-7.962215,9.505958,-8.606465,-1.229872,6.356591,-7.177742,-8.572118,-6.742302,5.010117,-2.379610,3.145673,-6.983335,5.358346,-4.434167,5.008555,0.972824,0.472666,-9.738127,-3.510154,-6.516946,6.159702,5.891619,-3.446091,-5.930562,-5.685662,-7.360944,-5.870969,-5.259629,9.600274,-3.342371,9.967152,-2.157930,0.698199,-3.243745,7.828636,5.805088,9.395693,-6.916599,-6.271340,4.282776,1.730639,5.666167,-9.552740,-0.087327,-2.552396,-3.981429,-1.688268,-1.483562,-1.474240,-6.045155,8.135413,-2.725238,-4.472382,-0.179264,2.990499,3.724388,-0.483289,-0.974709,-7.162494,-2.692575,-6.145531,-1.742505,-6.538409,-8.196192,9.555761,-9.158181,-4.027092,2.712061,-8.199203,-5.494166,5.016614,-1.970459,-7.227132,-7.027614,8.159006,4.050093,-1.335163,7.839589,-6.347108,9.427443,-5.300504,-7.132471,-1.800409,7.312621,-6.589613,-5.764077,2.098055,6.024404,3.024804,8.945009,-6.272246,-6.775008,-6.779303,8.770766,5.566631,1.939457,0.195638,5.912747,4.887514,-9.765791,-7.164504,-2.614967,5.260453,4.588716,6.601481,-8.470310,6.441430,-6.155933,-5.508699,-3.736216,-2.943643,7.416442,9.826150,9.995042,5.372484,-8.042261,-6.706392,1.055289,-0.836000,3.666111,1.649011,-3.991539,-8.282271,6.387874,-0.788197,2.919124,2.167309,-7.678630,6.105969,6.507922,0.526058,-5.160663,-0.479989,-5.419862,-2.301674,3.533738,9.005258,-0.882057,-0.161238,-5.039247,1.166580,-7.998345,-7.568487,2.310217,-7.647385,-9.734806,9.376705,-7.874597,-1.076009,-0.472737,-9.675305,3.974609,7.552162,1.805194,3.965329,9.669590,6.621037,7.448038,-0.770974,8.399785,8.264149,4.019110,-9.196154,4.311998,-5.397328,2.709171,6.479868,-1.537190,-6.434516,-4.096217,6.702390,-6.557685,1.333203,-1.063041,7.938771,9.911297,6.010605,5.970479,-3.934211,-6.739475,-3.020045,8.786051,-3.531700,5.211594,8.938804,-9.872244,8.722042,-3.990938,-6.430527,-8.587064,-2.044154,1.716135,-4.753059,-3.836785,2.485697,4.569543,-9.296679,0.487149,-2.159827,-6.058475,-9.102609,-3.397448,3.608132,6.428678,4.099296,9.932075,8.302186,3.179475,1.495136,-4.548966,1.964836,5.600338,-7.994738,-7.815918,8.070053,-3.411138,-8.196360,0.931090,8.596958,8.936792,-0.741764,2.051018,0.730622,-6.486547,-7.191535,9.522323,-6.188771,6.796256,2.331024,-5.154223,-3.028902,1.561796,5.075028,4.756861,3.264686,-0.313193,2.016627,5.792191,-3.166790,-4.307392,-5.783123,-0.125198,-9.355618,3.692388,-9.625937,-2.746633,-6.078581,9.635746,-2.937902,4.015641,7.954335,4.633983,9.562303,-9.454788,-6.779012,-0.154782,-5.982037,-0.515525,-4.784048,4.736920,9.573797,-4.081726,6.351121,2.221356,-7.843632,2.327538,-9.358500,-3.294495,1.539538,-2.995877,1.232582,-2.092514,5.390079], dtype = "float64")#candidate|11261|(576,)|const|float64
call_11260 = relay.TupleGetItem(func_11196_call(relay.reshape(const_11261.astype('float64'), [16, 12, 3])), 0)
call_11262 = relay.TupleGetItem(func_11199_call(relay.reshape(const_11261.astype('float64'), [16, 12, 3])), 0)
func_6027_call = mod.get_global_var('func_6027')
func_6033_call = mutated_mod.get_global_var('func_6033')
const_11264 = relay.const(9.028629, dtype = "float32")#candidate|11264|()|const|float32
var_11265 = relay.var("var_11265", dtype = "float32", shape = (56, 22))#candidate|11265|(56, 22)|var|float32
const_11266 = relay.const([6.457966,-6.754708,-1.294316,-7.773015,4.852111,7.981589], dtype = "float64")#candidate|11266|(6,)|const|float64
var_11267 = relay.var("var_11267", dtype = "float32", shape = (1287,))#candidate|11267|(1287,)|var|float32
call_11263 = relay.TupleGetItem(func_6027_call(relay.reshape(const_11264.astype('float32'), []), relay.reshape(var_11265.astype('float32'), [11, 16, 7]), relay.reshape(const_11266.astype('float64'), [6,]), relay.reshape(var_11267.astype('float32'), [11, 117]), ), 2)
call_11268 = relay.TupleGetItem(func_6033_call(relay.reshape(const_11264.astype('float32'), []), relay.reshape(var_11265.astype('float32'), [11, 16, 7]), relay.reshape(const_11266.astype('float64'), [6,]), relay.reshape(var_11267.astype('float32'), [11, 117]), ), 2)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_11270 = relay.TupleGetItem(func_9553_call(), 0)
call_11271 = relay.TupleGetItem(func_9555_call(), 0)
func_603_call = mod.get_global_var('func_603')
func_607_call = mutated_mod.get_global_var('func_607')
var_11290 = relay.var("var_11290", dtype = "uint16", shape = (675,))#candidate|11290|(675,)|var|uint16
call_11289 = relay.TupleGetItem(func_603_call(relay.reshape(const_11266.astype('float64'), [1, 6, 1]), relay.reshape(var_11290.astype('uint16'), [225, 3]), ), 2)
call_11291 = relay.TupleGetItem(func_607_call(relay.reshape(const_11266.astype('float64'), [1, 6, 1]), relay.reshape(var_11290.astype('uint16'), [225, 3]), ), 2)
output = relay.Tuple([call_11258,call_11260,const_11261,call_11263,const_11264,var_11265,const_11266,var_11267,call_11270,call_11289,var_11290,])
output2 = relay.Tuple([call_11259,call_11262,const_11261,call_11268,const_11264,var_11265,const_11266,var_11267,call_11271,call_11291,var_11290,])
func_11298 = relay.Function([var_11265,var_11267,var_11290,], output)
mod['func_11298'] = func_11298
mod = relay.transform.InferType()(mod)
mutated_mod['func_11298'] = func_11298
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11298_call = mutated_mod.get_global_var('func_11298')
var_11300 = relay.var("var_11300", dtype = "float32", shape = (56, 22))#candidate|11300|(56, 22)|var|float32
var_11301 = relay.var("var_11301", dtype = "float32", shape = (1287,))#candidate|11301|(1287,)|var|float32
var_11302 = relay.var("var_11302", dtype = "uint16", shape = (675,))#candidate|11302|(675,)|var|uint16
call_11299 = func_11298_call(var_11300,var_11301,var_11302,)
output = call_11299
func_11303 = relay.Function([var_11300,var_11301,var_11302,], output)
mutated_mod['func_11303'] = func_11303
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10298_call = mod.get_global_var('func_10298')
func_10299_call = mutated_mod.get_global_var('func_10299')
call_11335 = func_10298_call()
call_11336 = func_10298_call()
var_11342 = relay.var("var_11342", dtype = "float32", shape = (2, 6, 3))#candidate|11342|(2, 6, 3)|var|float32
bop_11343 = relay.less(call_11335.astype('bool'), relay.reshape(var_11342.astype('bool'), relay.shape_of(call_11335))) # shape=(2, 6, 3)
bop_11346 = relay.less(call_11336.astype('bool'), relay.reshape(var_11342.astype('bool'), relay.shape_of(call_11336))) # shape=(2, 6, 3)
func_10262_call = mod.get_global_var('func_10262')
func_10264_call = mutated_mod.get_global_var('func_10264')
call_11355 = relay.TupleGetItem(func_10262_call(), 1)
call_11356 = relay.TupleGetItem(func_10264_call(), 1)
output = relay.Tuple([bop_11343,call_11355,])
output2 = relay.Tuple([bop_11346,call_11356,])
func_11359 = relay.Function([var_11342,], output)
mod['func_11359'] = func_11359
mod = relay.transform.InferType()(mod)
var_11360 = relay.var("var_11360", dtype = "float32", shape = (2, 6, 3))#candidate|11360|(2, 6, 3)|var|float32
output = func_11359(var_11360)
func_11361 = relay.Function([var_11360], output)
mutated_mod['func_11361'] = func_11361
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10262_call = mod.get_global_var('func_10262')
func_10264_call = mutated_mod.get_global_var('func_10264')
call_11363 = relay.TupleGetItem(func_10262_call(), 2)
call_11364 = relay.TupleGetItem(func_10264_call(), 2)
var_11395 = relay.var("var_11395", dtype = "float64", shape = (550,))#candidate|11395|(550,)|var|float64
bop_11396 = relay.add(call_11363.astype('uint32'), relay.reshape(var_11395.astype('uint32'), relay.shape_of(call_11363))) # shape=(550,)
bop_11399 = relay.add(call_11364.astype('uint32'), relay.reshape(var_11395.astype('uint32'), relay.shape_of(call_11364))) # shape=(550,)
uop_11405 = relay.sin(var_11395.astype('float32')) # shape=(550,)
bop_11415 = relay.greater(uop_11405.astype('bool'), relay.reshape(bop_11396.astype('bool'), relay.shape_of(uop_11405))) # shape=(550,)
bop_11418 = relay.greater(uop_11405.astype('bool'), relay.reshape(bop_11399.astype('bool'), relay.shape_of(uop_11405))) # shape=(550,)
output = relay.Tuple([bop_11415,])
output2 = relay.Tuple([bop_11418,])
func_11435 = relay.Function([var_11395,], output)
mod['func_11435'] = func_11435
mod = relay.transform.InferType()(mod)
mutated_mod['func_11435'] = func_11435
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11436 = relay.var("var_11436", dtype = "float64", shape = (550,))#candidate|11436|(550,)|var|float64
func_11435_call = mutated_mod.get_global_var('func_11435')
call_11437 = func_11435_call(var_11436)
output = call_11437
func_11438 = relay.Function([var_11436], output)
mutated_mod['func_11438'] = func_11438
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10657_call = mod.get_global_var('func_10657')
func_10658_call = mutated_mod.get_global_var('func_10658')
call_11516 = relay.TupleGetItem(func_10657_call(), 0)
call_11517 = relay.TupleGetItem(func_10658_call(), 0)
func_813_call = mod.get_global_var('func_813')
func_819_call = mutated_mod.get_global_var('func_819')
var_11519 = relay.var("var_11519", dtype = "int8", shape = (672,))#candidate|11519|(672,)|var|int8
var_11520 = relay.var("var_11520", dtype = "uint16", shape = ())#candidate|11520|()|var|uint16
const_11521 = relay.const([5,2,-1,8,9,-7,-6,4,-6,9,3,6,7,4,-7,5,-2,-7,-10,-5,6,10,10,7,8,-5,-3,-8,7,4,-2,7,6,9,6,8,9,-7,-9,-6,10,10,4,-6,2,6,-8,10,-4,1,6,-5,-5,-3,-7,-3,-4,-2,1,-1,7,6,10,-9,-6,8,10,-6,-6,-1,-2,1,9,2,3,-2,-3,-6,-8,-1,5,-6,-3,-10,-3,-3,7,-1,-9,-4,-8,-3,-9,-6,-5,-1,6,-5,-4,-9,6,-4,-10,-7,7,3,2,-8,6,7,-9,-2,-8,4,-2,10,9,-2,6,7,-3,-1,-6,-7,3,4,2,6,2,3,7,3,7,2,-5,1,1,4,-10,-2,4,-4,-3,-10,4,-9,9,4,7,1,7,1,-3,7,-5,8,-6,-8,5,-4,-3,8,4,8,-10,-3,-9,6,9,-5,4,-6,6,-9,-3,-9,-5,10,1,-1,7,7,-10,9,-6,-6,8,1,7,6,-3,8,-4,-7,8,-5,4,2,4,-3,-6,3,10,-9,-3,7,-1,-4,-5,9,1,-10,-5,8,4,10,-10,-5,6,-7,10,-7,-1,8,-3,1,3,8,-4,5,-6,7,9,-6,7,-6,-7,7,-5,6,-4,-2,10,2,4,1,6,8,1,10,7,-4,8,-4,8,1,-9,-8,-2,-3,2,8,4,-3,2,-1,-1,5,6,-4,-3,6,-9,3,7,-8,9,-6,2,6,-7,2,1,7,9,2,6,4,-4,-7,-2,-9,10,6,9,5,10,-3,-7,8,2,9,-8,5,9,-3,6,-6,9,10,3,-3,-7,3,7,-1,1,-10,5,3,7,7,-9,-4,4,-8,1,9,8,-1,3,-7,-2,-5,2,10,-5,-5,-1,-3,-2,9,10,9,-10,-6,-2,9,-8,2,-4,9,1,-2,-4,-7,-5,10,-6,5,9,1,2,7,4,-2,-2,-6,7,-7,-4,-7,-3,-4,6,-5,1,-8,3,7,-5,-6,9,3,-3,-7,5,5,9,-6,-9,9,8,6,-5,1,-9,-8,-10,-6,-1,9,7,5,3,10,-6,-3,8,-6,-10,2,5,-10,3,9,9,4,-3,-1,-2,-10,1,3,-3,-4,-7,6,8,-10,-4,-7,-8,-10,-9,7,3,10,-3,5,3,2,-6,3,-6,7,9,-4,4,-7,-4,-6,4,-3,8,-2,7,-10,-4,-7,5,10,-9,-10,10,-7,4,3,9,4,4,-10,-1,6,-3,-6,8,-4,-2,-9,4,9,7,-3,-10,6,4,-6,8,10,4,2,2,8,-10,8,-1,9,1,-6,10,4,10,7,-4,1,-3,-10,9,-10,-5,3,7,3,6,8,5,-10,-6,5,5,7,-1,4,-7,10,-3,7,7,-10,1,-10,4,3,8,9,4,-5,3,8,2,-9,1,8,5,-10,8,5,10,1,4,5,-3,6,8,5,1,8,1,-9,-4,5,9,-5,5,-10,5,10,6,6,-9,-7,-7,2,2,4,-10,-7,8,9,7,6,-5,-2,4,8,-10,-6,9,-7,-9,7,10,8,8,-3,7,9,-8,4,10,7,-6,-9,1,7,6,9,2,6,-5,8,-10,5,-9,-2,-2,1,10,-6,-5,-10,1,-7,-7,4,3,5,9,3,-2,7,2,3,-7,4,3,2,-1,8,3,-9,2,-4,-5,-8,-2,2,-2,-9,-5,-10,-4,4,-3,-3,-4,5,-10,8,-5,-4,-1,4,-1,-4,-3,9,-9,5,7,8,-2,-7,1], dtype = "uint16")#candidate|11521|(675,)|const|uint16
call_11518 = relay.TupleGetItem(func_813_call(relay.reshape(var_11519.astype('int8'), [6, 14, 8]), relay.reshape(var_11519.astype('int8'), [6, 14, 8]), relay.reshape(var_11520.astype('uint16'), []), relay.reshape(const_11521.astype('uint16'), [675,]), ), 0)
call_11522 = relay.TupleGetItem(func_819_call(relay.reshape(var_11519.astype('int8'), [6, 14, 8]), relay.reshape(var_11519.astype('int8'), [6, 14, 8]), relay.reshape(var_11520.astype('uint16'), []), relay.reshape(const_11521.astype('uint16'), [675,]), ), 0)
func_9853_call = mod.get_global_var('func_9853')
func_9855_call = mutated_mod.get_global_var('func_9855')
call_11523 = func_9853_call()
call_11524 = func_9853_call()
func_5509_call = mod.get_global_var('func_5509')
func_5512_call = mutated_mod.get_global_var('func_5512')
const_11529 = relay.const([2,-2,6,6,4,-1,5,-10,-5,-7,10,-7,5,-8,-2,4,10,5,-3,-3,-1,6,8,-10,10,9,5,-6,7,3,-3,-3,4,3,9,2,2,5,-6,10,-2,6,6,6,-8,-5,7,-5,6,-8,-4,6,-10,6,5,2,7,-5,-9,-10,-1,7,-3,-10,-2,5,-3,-4,9,1,-5,3,8,-7,-8,-4,-2,-8,-5,3,1,5,-8,-6,-8,2,9,-5,1,4,9,-10,-8,5,9,1,5,-3,-5,-1,-10,-6,6,6,3,1,-7,-4,-9,8,-6,-1,7,5,5,-6,-9,-3,-2,-4,-8,-9,-6,-10,2,7,9,1,2,-9,-2,-3,5,-7,5,-4,-6,8,7,-9,5,7,3,-1,3,-1,3,7,-8,-5,-6,5,-3,6,-2,9,10,-3,-1,6,-2,-1,1,-3,2,3,8,-10,3,-2,-10,2,4,-2,10,1,9,9,1,10,-1,-1,-2,-1,-6,10,4,9,9,-5,1,3,9,9,-3,3,-3,2,-7,10,7,-3,-2,-7,4,-10,-9,7,4,-7,-7,10,7,5,8,-9,-3,-4,-3,-6,2,-3,6,8,-6,-6,7,2,9,-10,-1,9,-3,9,-3,-4,10,7,-7,-7,-2,-5,10,-5,-7,7,5,-1,1,4,-6,1,6,-3,3,-6,-2,3,10,-2,-4,4,5,10,7,9,4,3,-8,-3,-8,-7,9,2,-10,4,-3,5,-4,-1,-9,-8,10,1,10,2,-2,-8,-1,-10,-7,6,5,-6,-4,-1,7,6,-5,-9,2,10,-2,-4,-1,5,1,5,-3,-4,-10,-2,8,-6,6,5,7,-1,-6,-2,-1,4,-8,-7,-2,10,8,8,-1,-7,2,-4,-9,-7,-3,-3,-8,6,10,9,-4,3,-2,-8,-9,-9,-6,9,-9,2,7,-6,-6,1,8,7,10,6,5,6,-8,3,5,1,8,5,1,-10,-4,3,4,5,-2,-7,-6,10,-5,8,-5,-5,-4,-8,-4,4,-3,1,8,1,-9,-8,-1,-9,-9,10,7,9,-8,10,7,-9,2,-6,-7,2,-5,-3,9,5,-10,-4,-10,10,-9,-9,4,-9,-9,-9,-1,-2,-3,7,6,2,6,-3,-8,-6,5,7,3,-6,-10,9,-7,-10,-8,4,8,2,-1,-2,-9,-10,-4,-4,1,-1,6,-2,5,-5,10,8,3,-4,6,5,-4,2,2,-7,7,-3,8,-9,-1,5,-2,-3,-5,-1,-3,-10,3,-7,9,7,-9,-2,10,-1,4,4,9,4,4,-6,-4,-8,-8,2,-8,-5,1,-6,-7,-2,3,6,5,7,-5,-10,9,8,2,5,8,9,-5,10,1,2,2,-7,10,-8,-9,6,6,-5,5,-10,-10,-4,-3,-7,-10,2,9,-1,-5,5,-9,2,-6,-6,5,-6,7,9,4,-8,-7,6,-10,-6,-6,-9,-2,2,5,1,-6,-6,4,-4,-5,5,-3,-9,-8,7,6,8,-6,7,10,5,4,-10,-1,1,7,10,-4,2,-6,5,5,-1,6,6,8,4,5,2,-2,-1,-8,-8,10,4,1,9,7,-8,-9,-10,8,-9,-2,8,-6,3,-2,6,-3,9,4,-1,-7,3,-5,-3,1,-7,-4,6,-6,4,2,-1,2,8,-9,6,-7,-3,6,-7,-7,9,-9,-3,-4,6,-7,-10,8,-7,-8,-4,2,9,-3,-4,-1,2,-9,-7,-4,-10,10,1,9,-7,-1,-2,-10,2,7,4,10,-10,-2,4,9,-6,6,-9,7,2,8,-2,6,10,9,-3,-1,-8,9,-9,-7,-7,4,8,1,9,5,-8,5,-6,3,3,-2,6,-4,10,-10,4,3,7,-3,5,-10,-1,-2,-9,-8,-8,-5,4,7,-3,-10,-3,9,9,8,2,-7,-1,3,6,2,2,6,7,9,-4,-6,-2,-9,-9,-6,-3,7,4,3,1,-1,3,8,-5,-9,-8,8,-10,-10,1,1,1,-7,-7,-2,-8,-1,4,-10,-8,10,5,-5,-4,-5,3,9,5,-6,10,9,4,-8,1,7,-8,5,-4,10,5,3,5,-1,-1,3,6,-9,3,-1,5,4,-7,-9,-7,-1,6,10,7,2,-10,-9,-8,-9,6,-5,-7,6,-6,-5,8,7,1,7,-1,-5,-3,-9,5,-2,-5,-1,6,8,-6,6,10,-8,-3,8,4,-6,10,-8,1,-5,8,3,-7,5,4,7,-7,5,-2,7,-6,2,8,2,-3,10,-7,3,-3,-5,-4,-1,9,-2,-10,-6,-3,4,-2,1,-7,5,3,8,-10,3,7,-4,3,-7,6,9,4,1,4,-1,4,-5,-6,2,-7,-10,10,-1,2,4,-1,-9,8,1,3,-3,10,1,10,-3,-10,-1,9,-3,-8,-10,2,4,-9,-2,-8,7,-2,5,-4,10,1,4,1,-10,-6,8,8,-10,8,1,-8,4,-9,-3,-5,-6,-2,6,-8,2,7,-6,3,-3,-9,-7,-3,8,-9,-4,3,3,-10,3,-5,6,7,8,9,1,6,-6,8,-2,6,-1,7,8,-5,9,-6,-4,8,-2,-3,-6,2,9,-7,-7,10,4,4,-7,1,-8,3,-9,-4,-8,6,6,-6,-10,-10,6,6,7,9,8,-2,-8,-8,7,-10,9,-1,-5,-3,-9,-1,3,4,5,6,3,10,4,-10,2,-8,-7,-7,7,7,-3,1,-6,-5,-6,4,8,3,-4,7,-3,6,-5,2,4,-5,10,2,1,-4,-8,-8,-4,2,-6,-1,-3,10,-1,7,-4,2,-10,-9,-4,8,3,2,-9,-5,-3,-3,-7,-4,7,-4,6,4,-2,7,-8,-10,10,-8,6,5,2,-6,3,7,-3,-1,-9,-5,8,9,-6,6,-2,-7,10,10,2,-2,7,-2,-2,-9,8,4,-7,-1,-5,-1,3,-7,-1,-6,-2,5,10,10,-10,5,-3,1,3,3,1,4,3,5,-8,-7,9,-10,9,1,8,-5,-4,-3,10,-4,1,5,1,9,2,10,10,-2,-9,-10,8,8,-4,10,8,-7,4,-2,-3,-6,9,-8,-5,9,3,1,-5,-5,1,-4,-1,-5,-4,-2,1,2,4,-8,10,3,7,9,2,-10,1,-1,9,-9,-4,-10,1,-5,-3,3,10,-1,9,-8,5,-5,6,-9,1,-7,-9,10,-10,4,-9,1,5,8,-1,7,6,2,-10,-4,9,8,8,-9,-4,-4,-1,2,-6,-10,-7,-4,-10,3,-7,1,-10,-7,8,9,-8,2,-9,-5,-5,3,-1,4,-3,-1,6,8,2,6,-1,9,7,1,8,-10,-3,4,10,-9,-5,-5,4,-6,-1,6,7,-3,1,-10,-4,-1,-5,-2,10,-10,-2,5,8,-4,-6,-3,8,-7,2,7,10,-4,2,2,9,-7,4,-9,-5,-3,5,-4,-2,1,10,3,-5,-7,-4,9,8,6,-9,-6,8,-5,-7,-6,-2,4,-7,4,-5,7,9,-3,-1,10,-4,4,8,-4,10,4,1,6,7,7,10,-1,1,5,-1,-4,1,-6,7,4,4,-1,-7,10,-6,8], dtype = "int64")#candidate|11529|(1350,)|const|int64
call_11528 = relay.TupleGetItem(func_5509_call(relay.reshape(var_11520.astype('int64'), []), relay.reshape(const_11529.astype('int64'), [15, 6, 15]), ), 0)
call_11530 = relay.TupleGetItem(func_5512_call(relay.reshape(var_11520.astype('int64'), []), relay.reshape(const_11529.astype('int64'), [15, 6, 15]), ), 0)
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
const_11536 = relay.const([-6.965017,-9.076878,-2.954967,2.324129,-8.346513,0.813546,-0.667175,-3.852424,-9.477106,2.535455,-2.386205,-6.623784,6.319075,5.208746,-2.378055,-5.606547,0.068221,7.733187,0.219415,-4.526626,7.710632,-7.512910,9.255485,-9.520305,-5.828835,-6.361454,1.526287,-8.105748,6.682294,-6.044588,4.569459,-7.480002,3.314720,-3.041052,2.156254,-3.654320,-4.198139,-8.499208,0.953558,0.516678,-9.353648,7.976857,8.565472,-0.511624,9.326697,-2.539344,0.563096,-8.341801,6.455429,-4.616089,6.860976,7.265679,2.100876,7.126982,-4.844647,0.576539,-9.507225,4.282312,-1.411186,-6.037330,-1.311150,-8.509181,-8.174326,-2.278801,4.538195,-2.659741,-4.596368,-5.756892,5.266224,-9.218276,2.685079,-9.115929,-9.643253,8.689716,-6.497286,9.108027,-1.399677,-5.202789,-8.048773,-5.041914,4.077868,-9.558188,2.717260,-9.353098,-6.488076,-9.410264,-3.504900,5.099300,-7.198155,9.784963], dtype = "float64")#candidate|11536|(90,)|const|float64
call_11535 = func_2853_call(relay.reshape(const_11536.astype('float64'), [5, 9, 2]))
call_11537 = func_2853_call(relay.reshape(const_11536.astype('float64'), [5, 9, 2]))
func_5561_call = mod.get_global_var('func_5561')
func_5563_call = mutated_mod.get_global_var('func_5563')
var_11557 = relay.var("var_11557", dtype = "float32", shape = (910,))#candidate|11557|(910,)|var|float32
call_11556 = func_5561_call(relay.reshape(var_11557.astype('float32'), [7, 13, 10]))
call_11558 = func_5561_call(relay.reshape(var_11557.astype('float32'), [7, 13, 10]))
output = relay.Tuple([call_11516,call_11518,var_11519,var_11520,const_11521,call_11523,call_11528,const_11529,call_11535,const_11536,call_11556,var_11557,])
output2 = relay.Tuple([call_11517,call_11522,var_11519,var_11520,const_11521,call_11524,call_11530,const_11529,call_11537,const_11536,call_11558,var_11557,])
func_11561 = relay.Function([var_11519,var_11520,var_11557,], output)
mod['func_11561'] = func_11561
mod = relay.transform.InferType()(mod)
var_11562 = relay.var("var_11562", dtype = "int8", shape = (672,))#candidate|11562|(672,)|var|int8
var_11563 = relay.var("var_11563", dtype = "uint16", shape = ())#candidate|11563|()|var|uint16
var_11564 = relay.var("var_11564", dtype = "float32", shape = (910,))#candidate|11564|(910,)|var|float32
output = func_11561(var_11562,var_11563,var_11564,)
func_11565 = relay.Function([var_11562,var_11563,var_11564,], output)
mutated_mod['func_11565'] = func_11565
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10240_call = mod.get_global_var('func_10240')
func_10241_call = mutated_mod.get_global_var('func_10241')
call_11578 = relay.TupleGetItem(func_10240_call(), 0)
call_11579 = relay.TupleGetItem(func_10241_call(), 0)
output = call_11578
output2 = call_11579
func_11584 = relay.Function([], output)
mod['func_11584'] = func_11584
mod = relay.transform.InferType()(mod)
mutated_mod['func_11584'] = func_11584
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11584_call = mutated_mod.get_global_var('func_11584')
call_11585 = func_11584_call()
output = call_11585
func_11586 = relay.Function([], output)
mutated_mod['func_11586'] = func_11586
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11584_call = mod.get_global_var('func_11584')
func_11586_call = mutated_mod.get_global_var('func_11586')
call_11598 = func_11584_call()
call_11599 = func_11584_call()
output = call_11598
output2 = call_11599
func_11617 = relay.Function([], output)
mod['func_11617'] = func_11617
mod = relay.transform.InferType()(mod)
mutated_mod['func_11617'] = func_11617
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11617_call = mutated_mod.get_global_var('func_11617')
call_11618 = func_11617_call()
output = call_11618
func_11619 = relay.Function([], output)
mutated_mod['func_11619'] = func_11619
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_11625 = relay.TupleGetItem(func_9553_call(), 0)
call_11626 = relay.TupleGetItem(func_9555_call(), 0)
output = call_11625
output2 = call_11626
func_11631 = relay.Function([], output)
mod['func_11631'] = func_11631
mod = relay.transform.InferType()(mod)
output = func_11631()
func_11632 = relay.Function([], output)
mutated_mod['func_11632'] = func_11632
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11617_call = mod.get_global_var('func_11617')
func_11619_call = mutated_mod.get_global_var('func_11619')
call_11635 = func_11617_call()
call_11636 = func_11617_call()
uop_11641 = relay.log10(call_11635.astype('float32')) # shape=(2, 6, 3)
uop_11643 = relay.log10(call_11636.astype('float32')) # shape=(2, 6, 3)
output = relay.Tuple([uop_11641,])
output2 = relay.Tuple([uop_11643,])
func_11655 = relay.Function([], output)
mod['func_11655'] = func_11655
mod = relay.transform.InferType()(mod)
output = func_11655()
func_11656 = relay.Function([], output)
mutated_mod['func_11656'] = func_11656
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10843_call = mod.get_global_var('func_10843')
func_10844_call = mutated_mod.get_global_var('func_10844')
call_11661 = relay.TupleGetItem(func_10843_call(), 0)
call_11662 = relay.TupleGetItem(func_10844_call(), 0)
output = call_11661
output2 = call_11662
func_11668 = relay.Function([], output)
mod['func_11668'] = func_11668
mod = relay.transform.InferType()(mod)
mutated_mod['func_11668'] = func_11668
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11668_call = mutated_mod.get_global_var('func_11668')
call_11669 = func_11668_call()
output = call_11669
func_11670 = relay.Function([], output)
mutated_mod['func_11670'] = func_11670
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11673 = relay.var("var_11673", dtype = "int64", shape = (1, 9, 12))#candidate|11673|(1, 9, 12)|var|int64
var_11674 = relay.var("var_11674", dtype = "int64", shape = (13, 9, 12))#candidate|11674|(13, 9, 12)|var|int64
bop_11675 = relay.not_equal(var_11673.astype('bool'), var_11674.astype('bool')) # shape=(13, 9, 12)
output = relay.Tuple([bop_11675,])
output2 = relay.Tuple([bop_11675,])
func_11678 = relay.Function([var_11673,var_11674,], output)
mod['func_11678'] = func_11678
mod = relay.transform.InferType()(mod)
mutated_mod['func_11678'] = func_11678
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11678_call = mutated_mod.get_global_var('func_11678')
var_11680 = relay.var("var_11680", dtype = "int64", shape = (1, 9, 12))#candidate|11680|(1, 9, 12)|var|int64
var_11681 = relay.var("var_11681", dtype = "int64", shape = (13, 9, 12))#candidate|11681|(13, 9, 12)|var|int64
call_11679 = func_11678_call(var_11680,var_11681,)
output = call_11679
func_11682 = relay.Function([var_11680,var_11681,], output)
mutated_mod['func_11682'] = func_11682
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11655_call = mod.get_global_var('func_11655')
func_11656_call = mutated_mod.get_global_var('func_11656')
call_11702 = relay.TupleGetItem(func_11655_call(), 0)
call_11703 = relay.TupleGetItem(func_11656_call(), 0)
func_10567_call = mod.get_global_var('func_10567')
func_10569_call = mutated_mod.get_global_var('func_10569')
var_11707 = relay.var("var_11707", dtype = "int32", shape = (16, 6))#candidate|11707|(16, 6)|var|int32
call_11706 = relay.TupleGetItem(func_10567_call(relay.reshape(var_11707.astype('int32'), [96,])), 0)
call_11708 = relay.TupleGetItem(func_10569_call(relay.reshape(var_11707.astype('int32'), [96,])), 0)
uop_11717 = relay.erf(call_11702.astype('float32')) # shape=(2, 6, 3)
uop_11719 = relay.erf(call_11703.astype('float32')) # shape=(2, 6, 3)
output = relay.Tuple([call_11706,var_11707,uop_11717,])
output2 = relay.Tuple([call_11708,var_11707,uop_11719,])
func_11720 = relay.Function([var_11707,], output)
mod['func_11720'] = func_11720
mod = relay.transform.InferType()(mod)
mutated_mod['func_11720'] = func_11720
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11721 = relay.var("var_11721", dtype = "int32", shape = (16, 6))#candidate|11721|(16, 6)|var|int32
func_11720_call = mutated_mod.get_global_var('func_11720')
call_11722 = func_11720_call(var_11721)
output = call_11722
func_11723 = relay.Function([var_11721], output)
mutated_mod['func_11723'] = func_11723
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10843_call = mod.get_global_var('func_10843')
func_10844_call = mutated_mod.get_global_var('func_10844')
call_11775 = relay.TupleGetItem(func_10843_call(), 0)
call_11776 = relay.TupleGetItem(func_10844_call(), 0)
output = call_11775
output2 = call_11776
func_11777 = relay.Function([], output)
mod['func_11777'] = func_11777
mod = relay.transform.InferType()(mod)
output = func_11777()
func_11778 = relay.Function([], output)
mutated_mod['func_11778'] = func_11778
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11584_call = mod.get_global_var('func_11584')
func_11586_call = mutated_mod.get_global_var('func_11586')
call_11881 = func_11584_call()
call_11882 = func_11584_call()
output = call_11881
output2 = call_11882
func_11887 = relay.Function([], output)
mod['func_11887'] = func_11887
mod = relay.transform.InferType()(mod)
output = func_11887()
func_11888 = relay.Function([], output)
mutated_mod['func_11888'] = func_11888
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9953_call = mod.get_global_var('func_9953')
func_9955_call = mutated_mod.get_global_var('func_9955')
call_11909 = relay.TupleGetItem(func_9953_call(), 4)
call_11910 = relay.TupleGetItem(func_9955_call(), 4)
output = call_11909
output2 = call_11910
func_11928 = relay.Function([], output)
mod['func_11928'] = func_11928
mod = relay.transform.InferType()(mod)
output = func_11928()
func_11929 = relay.Function([], output)
mutated_mod['func_11929'] = func_11929
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10657_call = mod.get_global_var('func_10657')
func_10658_call = mutated_mod.get_global_var('func_10658')
call_11940 = relay.TupleGetItem(func_10657_call(), 0)
call_11941 = relay.TupleGetItem(func_10658_call(), 0)
output = relay.Tuple([call_11940,])
output2 = relay.Tuple([call_11941,])
func_11960 = relay.Function([], output)
mod['func_11960'] = func_11960
mod = relay.transform.InferType()(mod)
mutated_mod['func_11960'] = func_11960
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11960_call = mutated_mod.get_global_var('func_11960')
call_11961 = func_11960_call()
output = call_11961
func_11962 = relay.Function([], output)
mutated_mod['func_11962'] = func_11962
mutated_mod = relay.transform.InferType()(mutated_mod)
var_11984 = relay.var("var_11984", dtype = "uint32", shape = (1, 12, 14))#candidate|11984|(1, 12, 14)|var|uint32
var_11985 = relay.var("var_11985", dtype = "uint32", shape = (7, 12, 14))#candidate|11985|(7, 12, 14)|var|uint32
bop_11986 = relay.greater(var_11984.astype('bool'), var_11985.astype('bool')) # shape=(7, 12, 14)
output = relay.Tuple([bop_11986,])
output2 = relay.Tuple([bop_11986,])
func_11992 = relay.Function([var_11984,var_11985,], output)
mod['func_11992'] = func_11992
mod = relay.transform.InferType()(mod)
var_11993 = relay.var("var_11993", dtype = "uint32", shape = (1, 12, 14))#candidate|11993|(1, 12, 14)|var|uint32
var_11994 = relay.var("var_11994", dtype = "uint32", shape = (7, 12, 14))#candidate|11994|(7, 12, 14)|var|uint32
output = func_11992(var_11993,var_11994,)
func_11995 = relay.Function([var_11993,var_11994,], output)
mutated_mod['func_11995'] = func_11995
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12066 = relay.var("var_12066", dtype = "uint32", shape = (16, 7, 16))#candidate|12066|(16, 7, 16)|var|uint32
var_12067 = relay.var("var_12067", dtype = "uint32", shape = (16, 7, 16))#candidate|12067|(16, 7, 16)|var|uint32
bop_12068 = relay.not_equal(var_12066.astype('bool'), relay.reshape(var_12067.astype('bool'), relay.shape_of(var_12066))) # shape=(16, 7, 16)
const_12073 = relay.const([[[-6,-9,-2,9,5,-4,8,8,-8,3,9,7,5,1,-2,9],[8,7,5,9,-1,-9,-1,-2,5,-5,7,10,-8,1,7,-10],[-10,-5,2,-2,-7,4,2,-8,-1,-1,-7,-2,3,-4,5,-7],[10,7,6,-7,-4,2,8,3,5,10,7,6,5,-2,6,5],[-3,-10,-4,3,-9,-4,-5,8,10,-1,-8,-1,-6,3,-4,8],[3,-8,6,-6,4,-1,6,-10,-7,-7,7,10,-1,-7,-3,4],[-4,2,-2,4,10,-7,-7,7,10,-1,-10,-2,3,-7,6,-10]],[[-2,10,-3,-1,2,-1,7,-4,-2,3,5,-4,-7,-3,-4,3],[9,9,-10,7,8,-2,8,1,-3,1,-2,-6,-7,3,-6,-7],[-10,7,9,-3,-3,-4,-4,-8,-1,-7,-5,-3,-4,6,-3,-2],[-9,4,-6,7,-3,-10,-5,-6,-9,-9,-5,-9,-1,6,-7,-6],[1,4,-6,-5,-1,-7,-5,-1,3,-1,6,-5,4,-10,2,-7],[5,-10,-4,1,-2,-2,-1,-3,6,-3,3,-9,3,-8,-5,-8],[10,-3,-5,-2,5,3,-6,10,-10,4,3,2,5,1,-9,-2]],[[8,-3,-10,-9,-8,10,-1,-6,3,4,-5,10,-8,-10,1,-4],[-7,-2,-4,3,5,6,2,-7,-5,-1,-9,2,3,4,6,-2],[7,-2,-7,2,8,10,-3,-7,7,-1,-10,-4,7,-8,6,-5],[-6,-5,-4,6,9,4,-2,10,-8,8,4,-10,9,-3,7,-9],[7,-9,3,2,1,3,4,3,-6,1,-4,-2,-8,10,-5,2],[7,2,7,1,10,1,9,8,-6,7,10,3,-4,-7,5,10],[9,9,8,3,-8,-3,-2,-4,2,10,-1,-3,-7,-4,10,-2]],[[8,6,-5,-5,5,2,3,-8,7,8,-1,1,-1,-10,-10,9],[-8,-3,6,-6,8,-8,3,-5,-4,-8,-5,-2,-5,7,-7,-1],[-3,-7,-4,10,10,2,-6,6,1,-4,5,3,10,-3,-8,1],[-3,-10,1,1,-10,9,-2,-5,-8,-9,6,-1,4,3,-2,-3],[3,4,-5,-7,7,-10,-8,-2,-7,9,5,-2,-8,2,9,7],[-1,8,-5,1,-9,-9,-10,-7,-3,2,8,6,-9,6,-6,-2],[3,4,-4,-7,8,2,-8,6,-5,9,10,-9,-6,9,-7,10]],[[10,7,-9,-7,-2,-6,9,-4,-10,-8,-10,9,2,-1,-8,9],[5,2,-2,-2,9,7,-1,2,3,2,-9,-1,-1,-1,3,9],[-8,3,-1,4,-4,7,1,-7,-1,10,-9,2,5,-1,5,-8],[2,-5,-8,-2,-4,-10,-6,1,-3,7,2,-2,-5,7,2,7],[9,-6,4,3,-4,-1,9,10,-3,-8,8,-3,-4,5,8,-9],[-3,-7,-2,3,3,-8,7,8,7,-6,5,-8,-2,4,-2,-8],[-9,-1,5,-9,-9,-3,-5,8,-5,6,4,9,-4,7,-6,-4]],[[9,-8,-9,-3,1,7,-6,-7,9,-3,7,10,-2,9,3,-5],[-9,7,9,8,-7,-8,-2,-4,-8,6,8,9,5,2,-3,10],[-1,2,8,-9,-7,-8,4,9,-10,9,1,7,-8,-3,5,3],[-10,-5,-6,-1,-5,-3,-2,3,9,9,-2,7,-5,-10,-2,8],[9,10,2,-10,2,-6,-10,-6,10,1,2,-1,8,9,4,4],[5,-9,-7,3,-4,4,7,3,5,-9,-3,4,-2,3,-4,-9],[3,7,-9,-9,-1,-5,5,8,-3,9,-9,-5,-7,7,7,2]],[[4,-10,-2,-5,2,-3,-9,8,-10,-6,-1,-2,-3,-2,4,10],[7,-10,7,-4,-7,-9,-10,8,6,-10,7,5,-8,-10,-3,10],[-10,-9,-8,-7,9,-9,3,-8,-3,5,-8,-2,7,1,-4,-10],[-3,-1,-1,4,-4,-9,-2,7,-5,5,-3,2,-9,-10,3,-7],[-10,-7,-7,-2,-8,2,-8,-5,-3,6,7,6,10,1,7,-10],[-6,-9,-8,6,2,5,-6,4,-3,5,-10,-10,-6,-4,10,-9],[10,1,-9,-5,-4,-2,3,10,-6,-5,-6,7,-7,5,4,4]],[[-2,-2,-2,1,-7,8,8,-5,-3,-3,7,-10,-10,10,1,-7],[-10,5,8,-8,10,5,6,-2,-2,9,-6,2,4,-1,-7,-9],[1,-9,-9,-4,-4,6,-10,-8,-5,2,6,9,-7,6,-1,2],[-8,-1,-9,5,-3,-3,9,-3,-8,6,-10,-5,-7,4,-7,-10],[-7,-9,5,2,-5,8,8,-8,8,-2,1,7,2,6,8,-2],[6,-5,-7,6,4,6,7,10,-10,-8,-4,8,8,3,9,-3],[7,5,-5,-8,7,2,-1,-3,-5,-3,6,4,3,-10,-3,7]],[[-2,-5,-5,7,8,10,-2,-10,6,7,-3,5,-8,-10,9,10],[4,-10,8,-3,-9,-6,7,-9,9,4,6,-2,8,3,1,-1],[-9,-6,-2,-5,-3,1,9,5,-7,2,2,-8,-7,-8,-6,-5],[-1,4,-9,4,2,-4,-7,-10,9,6,7,-10,6,-3,6,-7],[-9,8,-10,10,8,-2,2,-7,-4,-2,8,-5,9,-5,8,-10],[3,-4,10,2,7,-1,3,-2,3,-8,-6,-5,5,-8,4,-9],[-7,7,-9,3,2,-7,-4,-4,2,9,-8,-1,-6,5,10,-6]],[[-9,2,3,-3,1,-4,8,-3,-3,-6,-7,-4,-9,-7,-3,4],[8,-9,3,-10,4,1,-3,2,-7,6,7,-10,-7,5,-10,3],[9,10,5,-8,3,3,-4,-1,3,-6,7,7,1,-7,3,6],[3,-3,6,-9,1,-5,5,5,-5,-8,-4,-8,7,5,-5,-1],[9,-7,5,3,8,-10,-8,-2,-3,5,5,2,1,3,10,-4],[-2,-3,-9,-5,-6,3,-10,-7,5,-10,-7,4,2,6,5,-1],[3,4,-10,-2,-3,-10,-9,-6,9,7,-2,6,2,8,-1,4]],[[2,-9,-8,9,-5,-2,6,-3,6,10,2,-2,5,-4,8,2],[8,10,-2,5,10,6,-7,-8,8,1,-4,-6,2,5,8,7],[1,-9,-10,4,4,-3,-6,6,-9,-4,9,-1,-10,2,-8,-5],[8,-3,10,6,5,7,-2,-5,-1,3,-9,-2,3,-6,-2,-9],[4,-9,-9,-10,-6,-6,-1,9,-8,-1,-9,5,-6,-10,-3,-1],[10,3,6,-4,2,1,10,5,-4,-6,-1,2,5,8,-2,-5],[10,4,3,10,-9,-7,3,-1,-8,2,2,-7,-8,5,5,-4]],[[9,-10,-7,6,-3,7,6,-7,-6,4,-2,3,5,2,7,4],[6,-8,6,9,8,-7,3,-9,-2,-5,3,4,5,7,-4,7],[6,-10,-1,6,-4,-4,-7,-4,-3,3,6,-3,5,-2,-4,6],[-6,4,7,5,-3,6,1,10,8,1,5,2,7,-9,-5,-10],[-3,-6,-4,-2,1,8,-10,9,4,-10,5,8,-8,-10,-4,-3],[7,-9,-2,8,3,-5,-6,8,6,10,-4,3,7,-4,-6,-10],[-6,-3,-2,-2,-7,-5,-3,5,-5,-1,5,-10,9,-3,-10,-9]],[[-4,7,-3,10,-5,-5,1,8,-6,2,2,4,-5,8,4,6],[-10,-3,-9,3,9,4,7,-4,2,-4,8,-8,9,-2,5,-10],[-8,-6,-5,5,-6,-3,-1,-7,5,-7,-3,9,3,6,7,3],[-8,-6,-9,-8,10,-9,2,-5,-9,-1,-1,6,-2,-2,-6,-6],[-5,9,3,-8,-3,-7,-6,4,-7,8,5,-2,4,-6,10,-7],[6,8,5,4,6,5,-6,-5,-3,-10,9,-7,-7,-7,7,-1],[-2,-2,-6,7,10,2,-10,-8,4,-3,-2,-7,-5,8,-8,5]],[[-8,7,5,-6,5,-10,6,7,-8,2,1,10,2,8,-7,-8],[-7,-10,8,-7,5,7,5,-1,4,-2,-3,-1,-10,-4,9,3],[8,10,1,-10,-5,8,-3,-3,-4,-4,-1,3,3,10,1,9],[7,9,7,4,8,-3,5,-8,5,8,-6,-7,8,2,-9,3],[10,-5,3,10,3,2,1,7,-3,-10,-5,9,-2,-7,10,8],[1,-1,-3,6,6,4,-10,-1,-7,4,-8,7,2,3,-3,-5],[6,-9,-9,-5,-2,10,9,7,-4,9,-1,-4,-10,6,1,8]],[[-9,6,-1,-3,-9,5,6,-5,-2,-4,1,-8,8,6,7,-7],[-10,-4,-4,-4,-10,1,10,6,-10,-4,2,-4,6,-10,-4,9],[1,-7,-10,8,-9,-4,6,-10,4,-9,-6,7,-3,-6,3,2],[-1,-1,-1,1,-1,-8,8,-5,-4,7,7,3,-10,-6,-6,-8],[-7,-10,-9,8,-5,-7,8,3,6,3,5,-3,5,-1,8,-10],[10,3,10,-9,2,7,-10,2,-2,9,-9,6,2,8,7,-4],[9,-8,3,-3,-3,-2,1,-9,7,4,-10,3,-8,-1,9,3]],[[7,7,9,4,10,-7,10,-8,3,6,-2,7,-7,8,8,-6],[-5,4,2,-7,3,-5,-9,-1,-5,-10,-3,-1,-7,-10,2,-1],[-6,-8,2,3,9,-8,1,1,-6,6,-7,-4,6,3,-8,5],[-9,4,-8,7,-5,6,-6,-3,-9,4,6,4,9,-1,10,-3],[-9,-10,-2,-6,2,4,-2,-10,7,-9,-1,-8,8,9,5,7],[-9,-3,-2,9,-1,-3,1,4,-9,-3,-3,3,10,9,6,-9],[3,-5,9,10,-6,-4,10,6,-2,2,-10,7,8,5,-4,-6]]], dtype = "uint32")#candidate|12073|(16, 7, 16)|const|uint32
bop_12074 = relay.logical_or(var_12066.astype('bool'), relay.reshape(const_12073.astype('bool'), relay.shape_of(var_12066))) # shape=(16, 7, 16)
bop_12080 = relay.maximum(bop_12074.astype('uint32'), relay.reshape(bop_12068.astype('uint32'), relay.shape_of(bop_12074))) # shape=(16, 7, 16)
func_11617_call = mod.get_global_var('func_11617')
func_11619_call = mutated_mod.get_global_var('func_11619')
call_12083 = func_11617_call()
call_12084 = func_11617_call()
uop_12102 = relay.asin(const_12073.astype('float64')) # shape=(16, 7, 16)
uop_12108 = relay.tan(uop_12102.astype('float64')) # shape=(16, 7, 16)
bop_12126 = relay.mod(uop_12102.astype('float32'), relay.reshape(uop_12108.astype('float32'), relay.shape_of(uop_12102))) # shape=(16, 7, 16)
output = relay.Tuple([bop_12080,call_12083,bop_12126,])
output2 = relay.Tuple([bop_12080,call_12084,bop_12126,])
func_12141 = relay.Function([var_12066,var_12067,], output)
mod['func_12141'] = func_12141
mod = relay.transform.InferType()(mod)
mutated_mod['func_12141'] = func_12141
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12141_call = mutated_mod.get_global_var('func_12141')
var_12143 = relay.var("var_12143", dtype = "uint32", shape = (16, 7, 16))#candidate|12143|(16, 7, 16)|var|uint32
var_12144 = relay.var("var_12144", dtype = "uint32", shape = (16, 7, 16))#candidate|12144|(16, 7, 16)|var|uint32
call_12142 = func_12141_call(var_12143,var_12144,)
output = call_12142
func_12145 = relay.Function([var_12143,var_12144,], output)
mutated_mod['func_12145'] = func_12145
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11928_call = mod.get_global_var('func_11928')
func_11929_call = mutated_mod.get_global_var('func_11929')
call_12190 = func_11928_call()
call_12191 = func_11928_call()
output = relay.Tuple([call_12190,])
output2 = relay.Tuple([call_12191,])
func_12197 = relay.Function([], output)
mod['func_12197'] = func_12197
mod = relay.transform.InferType()(mod)
mutated_mod['func_12197'] = func_12197
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12197_call = mutated_mod.get_global_var('func_12197')
call_12198 = func_12197_call()
output = call_12198
func_12199 = relay.Function([], output)
mutated_mod['func_12199'] = func_12199
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10298_call = mod.get_global_var('func_10298')
func_10299_call = mutated_mod.get_global_var('func_10299')
call_12212 = func_10298_call()
call_12213 = func_10298_call()
uop_12236 = relay.acosh(call_12212.astype('float64')) # shape=(2, 6, 3)
uop_12238 = relay.acosh(call_12213.astype('float64')) # shape=(2, 6, 3)
output = relay.Tuple([uop_12236,])
output2 = relay.Tuple([uop_12238,])
func_12240 = relay.Function([], output)
mod['func_12240'] = func_12240
mod = relay.transform.InferType()(mod)
mutated_mod['func_12240'] = func_12240
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12240_call = mutated_mod.get_global_var('func_12240')
call_12241 = func_12240_call()
output = call_12241
func_12242 = relay.Function([], output)
mutated_mod['func_12242'] = func_12242
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11668_call = mod.get_global_var('func_11668')
func_11670_call = mutated_mod.get_global_var('func_11670')
call_12303 = func_11668_call()
call_12304 = func_11668_call()
uop_12319 = relay.asin(call_12303.astype('float64')) # shape=(2, 6, 3)
uop_12321 = relay.asin(call_12304.astype('float64')) # shape=(2, 6, 3)
output = uop_12319
output2 = uop_12321
func_12327 = relay.Function([], output)
mod['func_12327'] = func_12327
mod = relay.transform.InferType()(mod)
output = func_12327()
func_12328 = relay.Function([], output)
mutated_mod['func_12328'] = func_12328
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12471 = relay.var("var_12471", dtype = "float32", shape = (14, 5, 14))#candidate|12471|(14, 5, 14)|var|float32
uop_12472 = relay.cosh(var_12471.astype('float32')) # shape=(14, 5, 14)
output = relay.Tuple([uop_12472,])
output2 = relay.Tuple([uop_12472,])
func_12483 = relay.Function([var_12471,], output)
mod['func_12483'] = func_12483
mod = relay.transform.InferType()(mod)
var_12484 = relay.var("var_12484", dtype = "float32", shape = (14, 5, 14))#candidate|12484|(14, 5, 14)|var|float32
output = func_12483(var_12484)
func_12485 = relay.Function([var_12484], output)
mutated_mod['func_12485'] = func_12485
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12240_call = mod.get_global_var('func_12240')
func_12242_call = mutated_mod.get_global_var('func_12242')
call_12537 = relay.TupleGetItem(func_12240_call(), 0)
call_12538 = relay.TupleGetItem(func_12242_call(), 0)
output = call_12537
output2 = call_12538
func_12545 = relay.Function([], output)
mod['func_12545'] = func_12545
mod = relay.transform.InferType()(mod)
output = func_12545()
func_12546 = relay.Function([], output)
mutated_mod['func_12546'] = func_12546
mutated_mod = relay.transform.InferType()(mutated_mod)
const_12670 = relay.const([[[-7,1,-1,8,10,-9,-9,3,2,-9,-5,-9,2,-5],[-10,-6,10,-7,-6,6,2,-8,-10,10,-2,-6,-2,7]],[[2,5,-9,-1,10,9,-6,2,8,10,1,-9,-9,-10],[-3,-8,-9,9,6,6,-9,-4,9,2,3,7,-1,9]],[[-5,-4,-7,3,7,-3,-1,1,-5,-8,8,-2,-3,-9],[5,-8,-10,-9,5,5,4,-5,9,9,-10,6,7,2]],[[-7,6,-10,10,-5,7,1,-3,1,1,3,-4,7,4],[-8,-3,7,6,-4,-7,7,10,-7,-4,1,8,7,9]],[[-2,9,-9,-6,4,4,-8,6,7,5,10,-2,-7,7],[10,8,-8,5,-9,-2,1,-10,8,-6,5,7,-3,6]],[[-9,1,-8,-5,-8,-4,9,2,3,-3,-10,-6,-2,-10],[-3,-4,1,4,-6,8,7,-1,-1,8,-6,4,2,3]],[[-2,1,-1,-8,10,-6,10,10,-7,6,5,1,-9,-9],[7,-6,-5,6,2,10,7,8,-9,7,-1,-3,8,-10]]], dtype = "int16")#candidate|12670|(7, 2, 14)|const|int16
var_12671 = relay.var("var_12671", dtype = "int16", shape = (7, 2, 14))#candidate|12671|(7, 2, 14)|var|int16
bop_12672 = relay.greater_equal(const_12670.astype('bool'), relay.reshape(var_12671.astype('bool'), relay.shape_of(const_12670))) # shape=(7, 2, 14)
func_1530_call = mod.get_global_var('func_1530')
func_1534_call = mutated_mod.get_global_var('func_1534')
const_12688 = relay.const([5,-3,4,-6,-2,6,-2,-5,-10,6,10,-1,10,2,-8,-9,-10,1,-10,-8,-7,-10,-7,-4,5,4,-3,-10,9,-2,10,1,6,6,3,10,8,-9,-7,9,4,-5,-10,-9,-8,9,4,10,4,-8,9,8,-10,-10,9,-6,7,-9,8,-10,-9,-6,9,-7,-1,-1,-4,8,4,-8,-1,6,-10,5,-1,6,-3,6,-8,2,-7,2,2,5,9,-8,10,8,-7,9,9,-1,-8,2,-8,-9], dtype = "int32")#candidate|12688|(96,)|const|int32
call_12687 = relay.TupleGetItem(func_1530_call(relay.reshape(const_12688.astype('int32'), [3, 16, 2]), relay.reshape(const_12688.astype('int32'), [3, 16, 2]), ), 0)
call_12689 = relay.TupleGetItem(func_1534_call(relay.reshape(const_12688.astype('int32'), [3, 16, 2]), relay.reshape(const_12688.astype('int32'), [3, 16, 2]), ), 0)
func_11027_call = mod.get_global_var('func_11027')
func_11031_call = mutated_mod.get_global_var('func_11031')
var_12703 = relay.var("var_12703", dtype = "float32", shape = (504,))#candidate|12703|(504,)|var|float32
const_12704 = relay.const([10,-6,4,2,-7,-9,6,8,-8,-3,7,-7,-4,5,5,3,-8,4,4,-7,-1,-9,6,6,-10,-2,-8,-10,-7,-8,5,-8,4,-4,-7,9,-5,4,8,9,1,-5,-10,1,9,10,3,-4,1,5,-9,8,3,-7,-2,-6,-8,1,-7,-7,-4,-10,-6,-3,-2,-9,-1,5,8,4,8,4,3,4,-8,6,-8,8,-1,-3,7,4,-10,3,-10,-10,7,6,7,-1,3,-8,4,-6,-7,7,-2,4,-9,2,2,-2,3,-2,-8,-9,10,3,-3,8,10,4,6,8,4,9,-9,6,8,4,1,-8,-1,5,-2,6,8,-7,-9,-4,-2,-1,-3,-5,-5,9,-2,-6,-10,1,-4,3,10,-8,5,-3,4,-10,-9,8,-3,1,-5,-10,-8,6,-9,-5,1,7,-5,2,2,-6,6,6,-4,5,-6,2,-6,-5,7,2,-3,-3,9,10,9,2,-4,3,9,-5,2,6,-6,-3,-3,3,3,-8,1,-4,4,4,-6,5,-8,10,-8,10,-1,8,-7,2,5,2,8,6,4,1,10,5,6,8,4,-9,10,-9,-8,-6,-2,1,-6,5,1,-10,-4,9,-4,6,-6,1,2,-4,2,5,10,-6,-3,8,9,-4,-7,-2,3,-9,3,-6,1,-5,-10,8,6,-10,-7,4,-8,-8,5,-6,-10,-7,4,-9,-5,-9,-7,-7,-1,2,5,3,-6,8,2,10,-8,6,2,6,-2,-2,-2,-9,-6,-10,-1,-4,-5,-8,6,-1,-7,-6,-4,8,-9,-2,9,-3,-4,-6,7,2,2,-1,10,-5,-10,-7,7,-8,-6,-9,-4,2,7,-5,-9,10,-8,2,-4,-6,9,-9,-1,-5,9,-3,-8,3,2,2,4,5,-3,-2,5,1,5,2,-9,4,3,-3,4,-4,1,-10,-8,-8,1,7,-2,-9,8,-5,-10,-7,8,-2,3,9,-4,2,1,4,-2,5,1,10,-7,8,-2,8,4,-2,-8,2,9,7,-4,3,3,-9,-4,-8,2,8,-3,-5,8,4,10,9,2,1,-8,1,2,10,8,7,-3,5,-1,3,-8,7,-4,9,-4,-1,3,-6,1,3,3,9,-6,2,-5,-9,3,-2,4,-5,10,-1,-10,-9,2,-10,3,10,4,-7,6,-1,-1,6,-4,4,-8,8,1,-9,-9,-9,-10,2,-9,-2,-4,-6,8,2,4,6,2,-8,-1,-7,5,3,-3,9,3,-10,6,5,7,-6,5,1,-7,-10,5,9,3,3,-8,-1,4,1,5,-4,5,-3,5,8,2,-10,-9,-7,2,10,2,2,-5,8,9,4,3,6,1,9,4,-10,-8,-5,7,-4,-9,9,-1,5,8,-6,7,8,-6,1,6,-2,10,-7,-5,8,-9,-9,1,-10,1,9,-8,6,-3,3,-10,-6,-2,-7,-5,-10,-1,5,-3,2,-1,-4,9,-2,-8,-4,9,9,4,-8,-3,3,9,8,3,6,5,2,7,-8,8,-3,3,-10,-10,-8,-9,6,9,8,8,-5,-1,6,-2,4,10,8,-1,-10,7,1,9,1,-3,-1,4,-3,4,4,-8,7,-8,-9,3,10,-9,5,-10,7,7,4,3,-6,-9,-2,-1,-4,4,-9,-7,9,2,4,-10,5,7,1,-9,7,-9,6,10,2,5,4,-10,8,5,-4,-2,-4,-8,-1,4,-8,10,7,-6,-7,10,-3,-2,-2,2,4,5,-5,7,-2,7,-5,4,7,1,-10,-5,1,3,-6,1,1,10,-9,-3,7,8,6,-4,-1,9,5,-4,1,4,-4,-7,-9,2,-3,8,6,-4,10,-5,4,-2,-8,-7,-4,6,6,-3,-10,4,10,5,-1,-8,6,2,9,-1,2,8,1,-6,-9,3,-5,-5,2,-3,-9,-4,6,7,3,6,7,3,-8,-4,-9,-8,-7,-9,3,2,3,-10,-3,8,-4,9,-8,9,1,-5,-2,5,6,-8,6,-2,5,9,9,-4,-10,6,7,-6,-1,-9,1,-2,-5,-5,-2,9,-9,5,-6,2,-4,-5,-6,-9,1,-7,1,-9,-4,9,-1,3,-9,-9,9,-2,-4,4,-10,-4,-9,3,-4,8,7,4,-6,-10,-7,-1,-4,1,-3,-5,-8,-4,-2,8,-1,4,4,6,4,6,-6,-2,-3,8,8,9,-4,4,1,-2,8,10,1,-3,-1,10,7,8,5,-6,-1,8,1,9,-3,6,-6,-3,-2,4,5,-3,-4,-4,8,1,-6,-3,2,-1,-5,-4,3,10,2,-9,7,-1,2,1,5,9,2,10,-6,-9,-8,-3,-10,6,-6,1,8,8,7,-10,-5,8,1,-3,9,-9,5,-7,5,-7,10,-6,-1,-8,6,-3,-9,10,8,-8,-3,5,-8,-3,6,4,7,4,-6,6,-10,-5,-9,8,8,6,2,-1,4,3,-3,5,9,-10,10,1,7,9,-2,-5,5,-4,-3,-7,-9,6,-7,4,10,3,1,2,-9,-6,-9,1,-4,-3,10,-5,-2,10,2,7,9,-2,3,8,4,-5,7,-9,1,-10,-3,1,-4,5,7,7,-4,-4,-2,1,8,-3,9,4,5,4,-8,3,8,-7,-4,10,-5,4,-9,-5,8,10,9,1,9,-4,-10,9,7,-2,-2,8,7,7,7,-2,10,-6,7,5,-3,-1,5,3,-7,2,5,9,4,-9,7,-9,3,-8,-3,4,-9,10,-8,8,6,-7,2,5,1,8,-3,-7,-2,-7,-5,10,-10,9,-3,-1,7,-2,-3,6,10,4,-10,-2,-3,7,1,-3,10,-9,7,2,10,-2,8,7,-1,-1,-1,5,-3,-1,4,5,3,4,4,5,-9,-6,-4,-5,5,10,-1,7,9,-8,1,-4,-7,-6,6,6,-8,-2,-9,-9,-5,10,6,-9,7,-8,3,3,-4,-3,-10,-6,5,-1,5,9,-1,-7,6,1,-7,2,-1,-10,-3,5,-3,-2,-9,3,2,-7,10,-9,-1,-10,9,8,8,-7,2,4,3,6,-6,-7,10,5,-7,8,5,8,-1,-6,-4,-10,4,-4,10,10,-8,8,2,-9,8,-9,-7,-6,5,9,-6,-8,5,-9,1,-4,-8,-8,-6,9,6,6,7,4,-8,3,-4,-4,4,-5,-3,-5,-1,-9,-10,2,8,-1,-4,9,10,3,5,-2,-1,4,-7,-2,10,7,10,9,-9,-5,5,-2,5,8,5,9,-10,7,-9,-8,-2,2,6,2,-2,-8,-2,-4,8,-9,4,8,-8,-1,-5,8,4,1,-1,-5,1,-2,4,10,-7,-6,4,5,10,-10,5,-6,2,-10,10,8,9,-4,3,6,2,1,7,-9,1,5,1,-6,-7,-6,2,-10,-1,3,-6,-5,2,-4,1,-7,5,2,-3,7,-5,-9,-6,-7,1,2,-2,8,1,2,-5,6,-10,6,-7,3,5,-10,-1,7,-10,9,-5,5,-9,2,7,-6,6,-10,4,-8,5,1,6,8,-8,-7,4,-3,-10,-10,2,-4,9,-3,7,-5,9,8,5,-3,-3,-8,-4,-3,-3,-1,-1,3,-9,5,8,-8,-4,-4,2,-2,8,3,10,-6,9,7,-2,-9,9,-7,-2,7,3,6,9,-10,7,-10,-9,1,-4,5,-1,9,6,10,-4,5,10,-3,-9,-7,8,5,-4,3,-7,7,5,-1,-3,1,9,7,9,-8,4,-9,5,-10,-2,-8,-3,8,-3,1,1,-5,9,-10,1,9,7,8,1,8,2,2,-3,5,1,-1,-7,-5,-8,3,6,5,-9,3,10,1,9,1,-8,-5,-2,3,3,-4,-2,-10,-10,-2,-7,-6,6,3,5,-7,-10,-1,-9,2,2,-6,-4,5,-1,-2,9,9,7,1,6,4,10,-8,10,4,-5,-6,-7,4,5,-8,6,-2,-7,-5,-2,-9,-6,3,7,8,8,-5,-5,2,-5,-6,6,-3,4,-8,-9,-1,5,1,-1,-8,-2,-3,1,7,-6,8,5,-8,3,7,4,9,10,-3,-8,2,-3,-7,2,4,-10,-1,6,-4,-7,1,9,-1,9,-1,-7,8,-2,6,-10,-4,-3,-5,-6,9,2,-3,1,1,9,8,-9,-6,5,6,2,-8,-7,-7,-4], dtype = "int8")#candidate|12704|(1568,)|const|int8
call_12702 = relay.TupleGetItem(func_11027_call(relay.reshape(var_12703.astype('float32'), [504,]), relay.reshape(const_12704.astype('int8'), [1, 1568]), ), 1)
call_12705 = relay.TupleGetItem(func_11031_call(relay.reshape(var_12703.astype('float32'), [504,]), relay.reshape(const_12704.astype('int8'), [1, 1568]), ), 1)
func_11196_call = mod.get_global_var('func_11196')
func_11199_call = mutated_mod.get_global_var('func_11199')
const_12722 = relay.const([-7.034665,-4.370576,-0.321930,4.310437,-9.563581,6.483597,1.393614,1.318383,8.351862,1.806076,-8.480633,7.180300,3.186005,2.172487,-9.508555,-9.386577,1.002209,-4.363120,-7.145545,-7.837881,7.312328,5.653519,2.717847,6.675359,7.121624,6.135024,3.286797,-2.338873,1.506206,-7.970035,5.177775,-3.494238,9.024946,-0.852015,-0.578829,-8.708553,-3.835582,-2.449012,8.610203,5.390702,5.349490,-6.633090,4.535786,1.589524,-0.241346,0.481511,-9.438822,-0.119436,-7.013937,5.674383,1.009535,-9.614937,9.605648,2.358270,1.840796,-0.766968,-4.418069,8.398842,0.645896,-6.310267,-5.764998,9.048944,-1.590714,4.872321,0.603195,7.881308,-9.201817,-0.661847,0.062972,-3.503749,-0.429129,8.761744,3.993522,0.719830,0.219148,-8.864308,6.606315,-2.107857,7.330165,-9.014177,4.125893,-9.827991,7.929079,6.997559,-3.121756,7.912286,-4.062989,4.290386,-5.176490,8.175002,0.867462,3.405601,0.350692,-8.647526,0.353650,5.827372,-5.714082,1.657952,4.577869,-2.985367,-3.690742,-2.231552,-1.609157,3.081948,-7.794939,-9.016159,-5.432525,-7.290838,-8.307718,9.575849,0.170445,-8.879743,-8.658784,-3.163858,-2.262486,9.130990,-1.304491,-7.031882,-8.808346,8.078965,-8.880473,-9.722523,-0.422653,-9.703992,8.778893,-1.309331,8.892426,-1.983341,-3.728425,3.222307,-4.350172,-5.154058,-2.929347,4.285485,-4.139827,-4.211302,8.874200,3.365363,5.137575,-6.194460,2.043181,-4.221003,3.672786,-4.589692,1.276923,-7.374155,5.493063,-0.167894,0.451122,-1.093952,2.380584,-6.616485,7.929304,-5.584235,-8.143228,5.610041,0.249155,-2.949770,-6.917503,3.823317,-8.547472,5.367945,-8.361424,8.701362,-3.998300,9.200067,-0.645682,-6.798134,1.746275,3.220056,3.754523,-0.129818,-6.951021,9.091717,1.050453,-9.795808,-8.272004,1.499230,7.819574,3.605466,-9.108915,7.627649,-9.025739,-6.643842,-5.945469,8.063734,-4.176324,4.950081,-3.138891,-5.541535,0.654979,4.383534,-0.687568,-9.704947,-1.965370,3.422604,-2.365184,5.267657,-9.185821,-1.010972,9.202780,-5.578103,8.897226,-8.430631,-4.956019,-5.918834,9.814415,-7.052258,-2.164758,-3.048558,-8.648353,-7.287490,-0.711891,5.881580,9.844051,-2.623079,-2.727214,8.298352,-2.601494,8.831550,-8.703191,-8.934216,-1.659532,7.258143,9.608004,7.418158,-0.868315,-9.035936,9.053668,0.780763,4.807166,-4.084066,9.342593,-2.938256,6.498177,-8.151942,9.162115,-7.726692,8.928111,-7.104964,3.235285,-3.350139,2.846386,-2.400326,8.419131,-3.329976,6.150826,-8.885835,-5.010690,-9.813205,-0.453441,6.531456,9.918670,4.499498,6.303583,4.262428,7.692146,-0.463279,-9.243446,-4.275334,1.229512,7.275330,0.415412,9.000259,-1.191696,9.529093,-1.576313,-5.195100,-9.565221,0.902515,3.856093,-8.354337,-9.486867,-7.276951,-7.658808,-1.518996,3.267659,-7.400257,5.106707,-0.655775,-4.610541,7.299669,-2.007302,-3.782810,3.970926,-0.332923,9.757816,-3.305071,-9.316303,-7.303277,0.271217,-6.146205,-1.753056,2.459517,-9.664923,1.281983,3.395290,5.778135,-8.237170,5.480799,8.875621,8.349482,-8.422846,4.574336,-7.941339,5.652291,-1.867456,-8.408059,3.431829,3.584345,7.710847,-8.186996,7.552336,-4.875441,8.018611,2.372301,2.712357,3.189497,-4.543194,-0.402082,2.127315,-4.202529,9.507121,-6.842962,-1.433907,-3.090555,3.496235,6.818823,3.192562,-9.199097,5.721540,3.771727,-0.339531,-1.237057,5.066094,6.255769,8.216002,9.125407,-6.795075,6.622094,4.338679,-6.523625,-9.432158,6.856648,1.651918,-4.909909,4.275468,-4.260366,1.794490,6.489150,2.599626,5.822269,-0.092239,-5.022804,-6.895849,-1.226793,9.484700,-5.902683,-4.984524,2.226825,-0.975379,-4.188838,-3.617780,6.400262,4.809423,-8.159176,-9.321188,5.401536,-6.637802,4.944611,5.585096,-5.142454,4.059694,-5.853262,-8.452131,6.383879,-6.662299,2.283744,-4.542001,-2.395061,6.030057,2.742954,-6.586928,-3.200020,-6.690016,4.225315,4.632229,-8.083229,0.584524,-1.307272,2.712638,-0.286475,5.792097,-4.933954,-4.550186,-8.372881,4.522230,8.699726,-4.029655,6.832562,-6.445753,8.645740,-1.565241,-6.036704,-0.387123,-7.775165,-3.616167,7.766485,-7.301158,-6.724460,-1.690233,-0.447689,-2.556858,7.336989,7.933901,5.036785,-6.569838,-9.772976,-8.415931,-5.121785,0.741813,-8.923201,8.127822,-8.053507,3.695120,-5.175023,7.174920,-4.053006,2.961442,-6.556296,-8.604349,-7.404188,-2.149669,1.730255,4.098658,-0.049060,-8.853193,-7.328790,-7.799479,1.735932,8.065630,-9.523376,-2.763059,-9.142066,-2.291654,5.926544,-0.484265,3.508970,-9.210270,-7.242794,-5.045769,-4.504134,6.308185,-3.423095,2.774366,-7.434252,-6.518847,1.649517,2.730063,-5.590105,0.277856,-0.809697,4.794968,-4.509857,-5.639444,0.452858,6.475789,-6.643515,-0.441850,3.792689,-1.400372,6.668955,-4.080954,-6.003704,-4.050997,3.097758,-4.703031,-9.584014,-8.363431,4.955970,3.450352,5.012859,-6.830076,5.001101,2.049922,6.138796,-1.608963,-3.342869,5.873859,-7.560434,3.673214,5.080762,1.994947,3.639127,9.789848,8.039890,2.330645,5.795594,-9.625016,-5.260897,1.405995,3.474347,-5.321636,-0.004722,-1.837973,-7.431315,6.433789,2.922836,9.402899,-4.399326,6.790473,3.220083,-7.198653,9.725351,5.655326,-5.359763,0.646217,9.953681,1.063078,9.382153,-3.569760,0.528221,-2.226997,3.562162,6.827299,-0.187758,1.388997,8.654516,-2.227826,-1.192683,7.234677,8.841226,-7.363978,-8.389439,-6.135867,-8.070783,0.704712,-8.368329,-6.046687,4.253604,4.392733,1.353254,8.841687,7.000804,7.245850,-9.828336,-5.223900,3.961863,-6.264044,1.423641,1.053958,0.239909,2.254412,-7.481185,5.020469,-1.236880,7.398139,5.790610,-8.719318,8.787686,-2.634154,-4.282152,8.745428,-2.555274,-3.704102,-2.182420,5.399420,-8.006273,-0.076710,-8.114521,2.679885,-7.608959,-1.599412,5.175492,-9.393881,-7.663076], dtype = "float64")#candidate|12722|(576,)|const|float64
call_12721 = relay.TupleGetItem(func_11196_call(relay.reshape(const_12722.astype('float64'), [16, 12, 3])), 0)
call_12723 = relay.TupleGetItem(func_11199_call(relay.reshape(const_12722.astype('float64'), [16, 12, 3])), 0)
output = relay.Tuple([bop_12672,call_12687,const_12688,call_12702,var_12703,const_12704,call_12721,const_12722,])
output2 = relay.Tuple([bop_12672,call_12689,const_12688,call_12705,var_12703,const_12704,call_12723,const_12722,])
func_12731 = relay.Function([var_12671,var_12703,], output)
mod['func_12731'] = func_12731
mod = relay.transform.InferType()(mod)
mutated_mod['func_12731'] = func_12731
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12731_call = mutated_mod.get_global_var('func_12731')
var_12733 = relay.var("var_12733", dtype = "int16", shape = (7, 2, 14))#candidate|12733|(7, 2, 14)|var|int16
var_12734 = relay.var("var_12734", dtype = "float32", shape = (504,))#candidate|12734|(504,)|var|float32
call_12732 = func_12731_call(var_12733,var_12734,)
output = call_12732
func_12735 = relay.Function([var_12733,var_12734,], output)
mutated_mod['func_12735'] = func_12735
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11960_call = mod.get_global_var('func_11960')
func_11962_call = mutated_mod.get_global_var('func_11962')
call_12776 = relay.TupleGetItem(func_11960_call(), 0)
call_12777 = relay.TupleGetItem(func_11962_call(), 0)
func_11678_call = mod.get_global_var('func_11678')
func_11682_call = mutated_mod.get_global_var('func_11682')
var_12790 = relay.var("var_12790", dtype = "int64", shape = (108,))#candidate|12790|(108,)|var|int64
const_12791 = relay.const([-5,8,4,-2,-7,7,-9,9,1,3,8,-5,-4,-10,-7,2,-1,-7,-10,-8,-6,-7,5,-10,-7,-10,-5,-3,-6,-7,9,4,-10,7,-3,-4,-9,6,7,10,-9,3,5,-2,9,3,-9,-10,-7,-8,9,1,-5,1,3,7,2,-5,-6,-8,-6,-4,8,-5,-8,-7,-9,4,5,5,7,-9,4,5,-1,-6,4,4,-2,6,6,-7,-2,-8,-8,-5,8,1,-8,-3,-9,-7,-7,-2,-2,10,-4,2,8,2,-6,1,1,-6,-8,7,6,-10,-7,-3,-5,-8,10,4,3,-5,3,10,8,2,-5,-7,4,-7,2,-1,-4,5,-10,-3,-2,-9,6,8,7,4,-10,-6,-8,5,-4,-6,-7,2,9,8,8,6,-9,8,6,-2,2,-9,1,-2,-4,5,9,-9,-5,-10,6,-6,2,-3,-5,3,2,-10,9,10,-8,5,2,-6,10,-1,3,1,9,-4,-8,-4,8,-5,-5,10,-2,3,-8,-3,6,-3,9,-4,8,5,-4,8,4,-1,-10,2,-8,6,-5,-2,-2,2,1,-2,-4,4,-7,-2,-6,9,3,-8,6,7,-2,2,8,-7,-10,7,-7,1,-3,-4,5,-7,-5,-1,8,2,-1,-5,-8,7,1,-1,-4,2,-5,-8,-2,-1,9,-5,2,-6,2,3,4,-8,-3,-3,1,-6,-4,9,9,-10,-1,-7,4,9,7,-8,9,9,-2,9,-10,10,-9,-9,-8,-1,5,6,-1,7,-5,2,8,-8,-4,6,3,-7,6,3,4,-6,1,-10,7,2,-2,-9,-6,5,-5,-3,6,1,3,-7,-9,5,5,4,-3,-5,3,-7,1,8,-2,6,-8,-1,2,-7,3,3,-5,1,3,3,1,4,4,10,10,4,-3,-10,-5,8,-9,5,7,-2,-1,6,-8,4,2,-6,9,2,-6,-7,-9,6,-5,2,4,-4,-2,9,-1,-10,6,-9,7,-5,6,-4,8,-3,-1,-6,-2,2,-1,3,-3,-8,10,-3,9,-2,1,-9,7,3,10,3,-2,-5,-7,6,1,10,-9,2,3,2,9,-3,7,4,-7,-9,-3,1,-5,1,-9,1,4,-6,7,-10,-1,-5,-3,8,-6,-9,3,1,7,6,-5,-5,-8,7,-1,2,-4,-2,3,-4,-7,10,-5,8,6,-9,10,-1,7,2,9,-9,10,-7,-3,4,8,-10,8,4,-3,-5,8,-9,-8,-10,6,7,5,9,-8,8,8,6,7,1,6,-2,6,9,4,-10,-1,6,-2,3,-1,-4,8,-6,4,4,-3,-4,8,2,5,4,-8,3,7,-10,7,-9,7,-8,3,3,-10,5,-10,-2,9,-10,-8,7,-9,6,-4,-8,8,-4,-2,7,3,10,8,-8,-9,4,-1,3,-1,-5,3,5,-1,-4,-5,-3,-2,-2,6,-9,-10,2,-5,1,-5,-8,10,-10,6,4,-5,-2,1,-1,-3,3,3,-5,10,2,-4,6,8,7,-9,5,-9,5,10,8,-6,9,6,-8,9,4,2,7,5,4,-4,-10,-6,4,10,-9,3,-4,1,-7,-1,6,-8,-3,-9,-9,-6,8,5,-5,-4,-9,-4,7,-6,8,5,3,8,-8,-3,-10,7,8,-9,-5,1,3,-1,-1,-7,4,-4,5,3,7,-2,2,6,-1,4,2,-2,-1,5,9,2,4,-2,-7,4,-10,2,8,-3,5,-5,-5,9,-1,9,-8,5,6,-1,-2,-7,-3,-8,7,8,-1,6,-3,1,1,3,-10,9,6,8,-7,2,-2,-1,-2,-10,5,8,-2,9,8,1,8,3,-4,-2,6,2,-4,8,1,6,3,-3,2,8,-4,9,3,-8,3,-9,-3,6,2,-3,3,1,5,2,-6,9,-9,1,-10,-10,-8,1,-8,1,4,-4,-5,-2,-1,-10,-3,6,-9,8,6,2,5,-7,4,-4,2,-3,7,9,-10,-4,8,-8,6,6,-2,-8,-6,3,-5,-10,6,-3,-1,-8,1,-5,-1,8,7,-1,-4,9,6,-2,8,7,7,7,-2,8,-9,4,4,-7,-8,1,7,-4,3,-3,9,-4,-10,2,-10,-7,3,-10,5,-9,6,-7,-1,8,-8,-4,-1,-3,1,-4,8,-1,5,8,-9,-5,9,9,-2,4,10,-8,8,1,-9,-2,6,-9,-5,3,6,-8,-9,-4,6,4,8,4,-5,5,9,2,1,8,-10,9,-10,-10,-3,-1,-4,2,7,8,-2,6,2,-1,-1,8,-2,9,3,-3,6,5,9,2,7,9,-2,-3,5,7,2,1,-4,8,-10,4,-4,-3,-8,10,4,-5,6,-3,1,-1,5,9,-10,7,-5,-5,-1,4,5,5,3,8,-9,2,-8,2,-3,-7,7,5,6,-3,-8,8,-10,5,-4,-5,-1,-2,-10,-6,-7,-7,6,10,-2,1,-9,5,2,5,10,-1,-6,4,9,-8,3,-3,-7,-3,6,-9,10,8,-4,2,-2,-7,-5,-2,-10,-1,6,-4,-6,4,-8,1,-8,2,2,6,-6,-10,-1,-3,7,-6,7,7,-4,7,3,9,-5,-3,-4,10,-9,9,5,5,-8,-6,-8,2,4,-3,5,10,3,-8,-10,7,9,3,9,-7,-8,6,5,-9,7,-6,6,-4,-7,7,1,1,1,-5,4,9,-4,-8,-5,6,3,-4,-7,-9,1,6,-2,-1,2,3,-5,-6,9,7,-4,-6,6,5,8,-2,10,8,-4,4,4,-2,10,-9,-5,-5,-1,6,-10,-5,-5,-7,4,6,6,-3,-7,-1,-4,-10,-9,8,7,-9,4,-7,-10,3,-2,1,-1,8,9,7,-10,-10,1,8,1,4,1,4,6,5,-8,-5,9,7,1,-1,8,-9,-1,-6,4,8,3,-9,9,6,8,-8,-3,9,8,6,-3,-6,1,7,-4,-1,6,6,3,7,-1,10,-10,9,-1,6,1,-8,-8,6,-3,8,8,-7,6,-2,-8,5,3,6,1,8,7,-2,5,6,-6,7,10,5,-9,5,9,-3,-3,6,4,6,2,-4,-8,2,5,-10,-5,-1,1,-10,-5,7,-4,2,9,-9,7,-7,-4,-3,-10,3,9,8,1,2,-2,2,2,-6,-3,1,8,7,8,-10,2,-2,9,-10,-9,-6,3,-7,-3,7,7,8,-7,7,4,4,3,6,7,4,-2,6,-10,10,7,-1,-7,-2,-3,-2,8,-2,5,7,-6,9,-1,3,10,-5,3,5,-5,8,8,5,-7,9,5,-3,6,10,7,-1,9,7,-3,3,1,-8,-1,-5,9,10,1,-8,-5,6,-2,-2,4,2,-2,-7,-6,2,-7,-6,2,-10,-9,-1,7,-8,-6,-9,-10,10,-5,4,2,-9,-4,3,10,8,4,-4,7,-1,2,5,-2,-3,2,10,-3,10,3,3,9,-1,-3,3,8,-4,3,-10,2,3,1,7,2,3,-1,9,10,-2,-6,2,10,-2,-5,9,8,-3,-7,6,8,-5,6,10,5,-8,8,4,-5,-2,-3,-8,-2,1,-1,-9,6,7,-9,9,-8,4,6,3,-4,-4,5,7,2,9,7,-4,3,5,8,-5,-1,-4,4,-10,4,7,-5,1,2,-3,-7,2,-10,-3,2,-7,-4,2,10,-10,8,-6,-2,2,-6,-5,-4,4,-5,-2,-4,10,2,9,3,-8,7,-6,2], dtype = "int64")#candidate|12791|(1404,)|const|int64
call_12789 = relay.TupleGetItem(func_11678_call(relay.reshape(var_12790.astype('int64'), [1, 9, 12]), relay.reshape(const_12791.astype('int64'), [13, 9, 12]), ), 0)
call_12792 = relay.TupleGetItem(func_11682_call(relay.reshape(var_12790.astype('int64'), [1, 9, 12]), relay.reshape(const_12791.astype('int64'), [13, 9, 12]), ), 0)
output = relay.Tuple([call_12776,call_12789,var_12790,const_12791,])
output2 = relay.Tuple([call_12777,call_12792,var_12790,const_12791,])
func_12804 = relay.Function([var_12790,], output)
mod['func_12804'] = func_12804
mod = relay.transform.InferType()(mod)
mutated_mod['func_12804'] = func_12804
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12805 = relay.var("var_12805", dtype = "int64", shape = (108,))#candidate|12805|(108,)|var|int64
func_12804_call = mutated_mod.get_global_var('func_12804')
call_12806 = func_12804_call(var_12805)
output = call_12806
func_12807 = relay.Function([var_12805], output)
mutated_mod['func_12807'] = func_12807
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10240_call = mod.get_global_var('func_10240')
func_10241_call = mutated_mod.get_global_var('func_10241')
call_12823 = relay.TupleGetItem(func_10240_call(), 0)
call_12824 = relay.TupleGetItem(func_10241_call(), 0)
output = call_12823
output2 = call_12824
func_12828 = relay.Function([], output)
mod['func_12828'] = func_12828
mod = relay.transform.InferType()(mod)
output = func_12828()
func_12829 = relay.Function([], output)
mutated_mod['func_12829'] = func_12829
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9553_call = mod.get_global_var('func_9553')
func_9555_call = mutated_mod.get_global_var('func_9555')
call_12879 = relay.TupleGetItem(func_9553_call(), 0)
call_12880 = relay.TupleGetItem(func_9555_call(), 0)
output = relay.Tuple([call_12879,])
output2 = relay.Tuple([call_12880,])
func_12883 = relay.Function([], output)
mod['func_12883'] = func_12883
mod = relay.transform.InferType()(mod)
output = func_12883()
func_12884 = relay.Function([], output)
mutated_mod['func_12884'] = func_12884
mutated_mod = relay.transform.InferType()(mutated_mod)
var_12912 = relay.var("var_12912", dtype = "uint64", shape = ())#candidate|12912|()|var|uint64
var_12913 = relay.var("var_12913", dtype = "uint64", shape = (1, 16, 5))#candidate|12913|(1, 16, 5)|var|uint64
bop_12914 = relay.bitwise_xor(var_12912.astype('uint64'), var_12913.astype('uint64')) # shape=(1, 16, 5)
func_5561_call = mod.get_global_var('func_5561')
func_5563_call = mutated_mod.get_global_var('func_5563')
const_12918 = relay.const([-1.873718,1.810841,-1.042991,9.518976,-5.247921,-9.192506,1.385529,0.924538,-1.662854,7.170939,1.419279,2.744823,4.447509,-8.780587,3.363076,-6.299115,1.309236,5.617599,1.611420,7.292466,5.381240,4.383202,5.933058,-8.219605,8.683693,-8.189993,7.803709,2.210099,-5.656808,9.122400,-9.163201,5.138324,-0.584290,9.574363,-5.596194,8.325245,-5.775203,-5.438020,0.846199,3.705435,2.711362,5.446936,4.406319,1.364741,7.258620,0.519073,-1.177981,2.885829,2.252271,9.953126,-3.675578,9.169011,9.671208,-5.238154,-5.003825,0.978991,-3.935418,9.425419,3.838173,4.132093,0.447600,-6.602768,-3.404952,-0.906865,-4.785360,3.318900,-8.325228,9.515307,-7.605521,5.572804,9.868000,-1.910775,5.326347,4.555700,4.825777,7.225723,0.372414,-5.647613,-7.257063,7.054464,-0.601827,7.804109,-2.026160,-1.080832,-9.538611,4.392860,-2.984876,5.295874,8.104789,-0.707422,-1.071221,-2.453765,8.929834,5.201739,0.074599,-6.965547,7.789002,1.043960,-1.666549,-4.387693,3.412155,-7.963824,-9.187840,8.347561,-6.248976,-8.832937,-7.847377,-4.665868,0.764090,1.215633,0.346516,7.137845,0.321852,-7.909443,-5.154481,-0.178115,-4.425354,-4.166729,9.735980,5.115054,6.468117,-9.681515,-3.761919,-5.549319,-4.073882,-7.112351,5.550431,-7.554641,-9.540767,1.246817,2.264902,-6.664276,-3.256325,-5.387674,9.839223,-1.015596,0.335799,-4.258615,0.868896,-9.387597,-3.202527,4.993962,-3.653827,-8.222860,-7.630584,5.267753,4.778291,-2.226762,-0.601270,1.856805,-3.275581,1.366358,-4.566287,2.728546,-5.759066,5.278678,-3.422039,-5.070030,-1.701218,-7.408598,-1.048607,4.123458,8.225580,-9.031416,-5.672050,0.223722,0.400478,9.949334,-7.851983,2.654504,-2.087703,3.811622,-7.964060,1.989983,-8.330490,6.197004,8.039357,0.881577,-3.546717,1.910687,6.391583,1.174279,3.332328,7.674280,6.452646,-3.124946,3.374697,3.142164,2.130901,3.713645,-3.708369,7.991640,5.006442,-8.262827,-8.653077,-6.116863,1.064130,-9.913928,-6.316405,-4.590149,-5.643436,5.544602,0.314878,0.044995,1.127001,-6.753440,-9.277961,-1.589615,-5.326411,1.840829,-2.824408,8.940979,-5.337843,-3.256587,9.977050,-6.969619,4.962412,8.072559,-5.909088,1.681526,9.201637,4.564114,0.364778,6.020062,8.939286,-7.163838,7.361637,3.007424,7.378633,-2.297236,-7.853600,4.437600,0.524512,-2.494786,7.936261,9.539278,-6.769323,-8.607738,-0.436867,3.930651,0.177544,0.696357,6.621997,-9.853538,-7.320557,7.690688,4.488448,-0.587020,-4.876371,2.436858,7.815681,-5.572865,4.036403,4.539097,0.971286,1.717442,2.678119,6.549255,9.574172,4.462017,-0.414064,6.257469,4.202698,-4.540032,-8.448213,-1.988156,2.208616,0.242311,2.746505,-7.986069,-9.315679,9.880314,0.111470,-9.437556,-3.973509,-0.271870,3.339982,8.064773,-7.768176,-0.593216,5.867290,-9.900401,1.788894,1.296194,-2.177581,8.258512,-5.984039,-5.560096,6.854172,-1.555165,2.715557,9.201895,-4.872821,0.596760,-2.523127,-1.389982,-1.917163,-0.640089,-0.005247,9.404167,-6.796988,3.041582,2.720925,-1.111014,7.009490,1.254595,3.641230,0.152911,9.769564,-5.563460,-4.019789,1.532183,5.745456,-6.173337,5.427984,0.563359,3.768192,-7.245608,-5.094828,1.742153,-8.215157,-6.598163,4.972586,6.519202,8.060157,2.166505,-6.043960,-3.677220,-4.871809,-2.762795,-1.300492,0.024486,-2.716234,3.398964,-9.389692,-4.346126,5.172887,6.448338,-9.325892,6.477108,-6.220868,6.765220,5.880005,2.919301,9.459516,5.930147,5.352049,4.183873,5.659303,-6.267731,7.848777,-9.486947,-5.630393,-8.922061,-3.931892,-7.883262,-0.060453,-2.891674,6.692028,6.131455,7.066433,0.537289,-4.174760,-3.997850,4.481037,6.104466,-2.497285,8.810512,5.182632,2.970890,0.447481,4.248966,-0.479099,4.395620,0.048752,-7.313063,2.899854,5.869306,-5.612393,4.526536,-0.517260,-4.816728,-4.918764,4.064865,7.870198,-2.334179,-9.221262,-6.772551,2.927403,6.465965,5.315121,8.552163,2.043661,-7.687729,-8.725865,1.705552,-2.745524,5.254661,5.364538,6.140495,-7.167541,6.494792,8.434166,0.803345,5.171648,5.420873,-8.266798,3.922900,6.121199,3.087381,-0.317581,-8.159518,-7.386951,2.858071,7.637200,7.542129,-0.524130,-0.719313,-0.998585,-9.672169,-2.865880,-2.833425,-9.843783,-9.837223,1.416512,-7.648254,-2.768868,9.997128,-1.973920,-4.538023,0.152504,6.390140,-6.890145,2.525757,6.005731,-2.908548,8.663482,-0.058584,7.859527,5.820661,-2.383287,-2.965594,-0.570164,-8.327035,-5.962238,-1.276516,-6.173520,-6.951398,-6.164282,7.187047,4.129947,5.042570,6.491921,6.978788,6.010628,7.847857,-6.025764,-2.424442,3.332342,5.798100,-7.476590,8.295336,-5.539476,2.245408,4.799773,-0.922935,7.870776,2.200364,-5.452605,9.650192,4.255485,3.317814,-7.172435,3.600582,-7.803484,1.704024,-0.933585,6.535304,-1.101664,8.752306,-2.282261,9.660564,-6.054762,-5.213329,2.574105,-9.878111,-9.256927,-4.052178,0.464626,6.191640,-7.081939,-3.375026,2.720419,2.749769,2.002693,-0.623488,3.168380,8.032530,-8.580980,-3.255779,8.540568,5.868120,-4.707755,-8.823909,6.332883,-5.559330,-9.867522,-9.839058,-5.806528,-9.227059,0.349070,8.463275,-7.714019,-2.978746,-9.246106,-6.235026,2.942466,-1.739797,5.260791,1.890434,-2.690373,-5.458971,4.912638,-9.722512,7.417992,8.794863,3.549412,1.939873,3.023904,4.434809,-7.494140,9.710116,5.768844,3.583929,-3.237921,1.777440,-2.832307,1.328879,-1.524493,-1.402409,-6.882157,-5.822043,-5.119006,6.577981,8.137347,-5.284550,-6.498717,7.418611,1.248181,-8.155111,-5.333018,-4.079286,-4.342460,-5.183838,7.537515,-0.636326,-6.005367,-7.359872,-5.836824,-2.397013,-0.273689,6.578220,-4.582881,-8.938067,9.518857,7.861480,-1.406296,9.057452,6.335529,9.415417,-7.474731,8.037870,1.458926,3.123529,4.793042,8.137412,-2.764809,9.644289,-3.609329,-5.659121,-4.644183,3.843888,6.623059,8.586210,-2.768826,-4.556183,-8.735633,9.520431,7.876207,8.006721,-5.308152,-4.272945,9.186231,6.032791,6.954229,-8.468521,5.010460,-3.960807,-5.625335,4.283167,-3.601989,1.017075,8.690627,-9.963139,6.135887,-9.374429,7.112534,5.188578,-2.332093,-2.238810,-7.377536,9.996810,-5.270529,1.276698,-5.718962,6.584196,-9.023953,5.842616,7.028711,-1.218706,-4.935717,-7.397349,3.303360,-9.780680,-7.812412,5.483203,4.867561,-7.274428,-6.066736,-6.618968,-0.965689,1.896425,-0.970905,3.114202,1.679188,1.828630,-7.502294,4.898308,3.613345,4.575036,-1.565641,-6.385515,6.158329,5.760390,-2.836828,-5.358020,6.897730,4.125447,9.382154,1.571144,-1.212086,-7.921408,-0.586833,-2.815616,9.720915,9.195322,-5.061366,-2.906152,-7.870425,2.425377,1.981947,0.359144,-2.181416,7.824839,9.819731,-9.623222,2.404916,-4.629243,-7.538232,2.030907,-6.922798,9.901082,-0.768686,3.376849,6.388918,-0.795856,-8.848433,8.477932,-8.244678,-2.894614,7.892747,-3.977476,1.495393,-6.547075,8.316054,-1.167346,-0.775046,7.365191,9.087589,5.342772,5.443929,7.302457,8.446945,-7.714465,7.416649,-2.983229,6.948352,3.123634,4.338318,-4.640382,4.143117,2.925490,-4.130412,9.620419,7.418582,-9.874860,-8.920622,-8.718807,-4.064335,5.313075,-9.416925,-7.728806,-7.338604,-2.674772,1.257945,7.254552,5.207014,-7.543462,5.507574,5.650021,-9.367950,8.279797,-1.498702,3.105954,8.360682,-7.800903,-6.030922,7.176233,0.448208,-7.711755,2.625797,4.407149,-9.887076,-2.370226,9.321378,-8.995763,-6.587895,-7.320352,-0.943953,8.684481,2.363544,9.940825,0.311862,-5.335811,-6.171527,7.439604,-8.642466,5.837285,9.551490,-9.673717,2.463826,-5.818292,2.842426,-0.842030,-7.697561,7.507369,-0.248625,9.417131,4.150392,-2.690374,9.974278,0.410235,-3.673625,-8.352910,8.158774,2.910648,-1.778660,-5.487683,-0.240011,8.327967,-8.024137,-3.608393,9.789283,-1.683485,-2.953063,-6.662157,4.050596,2.985597,-5.163744,6.808572,5.373951,4.085864,-5.539263,7.100439,-7.280780,-4.496865,2.655453,7.545846,-6.769674,2.254116,-4.178019,-5.922033,-2.150358,-7.616020,-6.434837,-1.062491,-6.055948,8.510891,3.865633,1.875276,9.275680,-5.606302,4.336943,7.232871,-8.544114,-4.056171,-2.923556,-6.627937,-0.906941,-0.929224,-8.690168,-8.684238,-1.969071,5.791457,-4.281125,2.234184,-7.515452,-9.639942,-9.944143,-2.588347,8.428754,7.466463,3.855609,-6.377329,-5.535177,-6.094204,1.501932,4.810519,-8.561493,7.189692,-5.121219,-3.738985,-3.001500,-7.410588,-1.940282,2.743888,9.003817,-9.230978,-2.931363,-5.097267,3.054911,2.837041,-1.648369,-3.767111,-8.200862,7.274757,-5.661656,6.723491,5.006360,2.447579,-5.455423,3.060175,-6.726095,6.844688,-1.409318,3.553381,-4.327876,-0.312184,-5.354081,-4.931337,-3.991256,7.831911,1.835462,5.804127,-1.211975,4.208487,-4.250623,-7.767893,-9.183300,0.800051,1.789760,-7.734178,-0.267026,-3.668784,5.161908,2.960250,1.804824,-1.140521,8.327376,8.812831,0.087128,3.768325,3.075755,-4.748152,8.913354,-3.874554,-7.184105,-4.866266,0.386085,5.884742,2.705502,-0.266722,3.253033,-2.101157,-7.229290,-5.113677,-9.057620,0.033064,3.232300,2.280624,-6.847157,-3.940816,-8.347552,0.856142,9.936687,-6.251412,2.218659,4.619744,3.520158,7.615843], dtype = "float32")#candidate|12918|(910,)|const|float32
call_12917 = func_5561_call(relay.reshape(const_12918.astype('float32'), [7, 13, 10]))
call_12919 = func_5561_call(relay.reshape(const_12918.astype('float32'), [7, 13, 10]))
output = relay.Tuple([bop_12914,call_12917,const_12918,])
output2 = relay.Tuple([bop_12914,call_12919,const_12918,])
func_12923 = relay.Function([var_12912,var_12913,], output)
mod['func_12923'] = func_12923
mod = relay.transform.InferType()(mod)
var_12924 = relay.var("var_12924", dtype = "uint64", shape = ())#candidate|12924|()|var|uint64
var_12925 = relay.var("var_12925", dtype = "uint64", shape = (1, 16, 5))#candidate|12925|(1, 16, 5)|var|uint64
output = func_12923(var_12924,var_12925,)
func_12926 = relay.Function([var_12924,var_12925,], output)
mutated_mod['func_12926'] = func_12926
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12828_call = mod.get_global_var('func_12828')
func_12829_call = mutated_mod.get_global_var('func_12829')
call_12944 = func_12828_call()
call_12945 = func_12828_call()
output = relay.Tuple([call_12944,])
output2 = relay.Tuple([call_12945,])
func_12951 = relay.Function([], output)
mod['func_12951'] = func_12951
mod = relay.transform.InferType()(mod)
output = func_12951()
func_12952 = relay.Function([], output)
mutated_mod['func_12952'] = func_12952
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11631_call = mod.get_global_var('func_11631')
func_11632_call = mutated_mod.get_global_var('func_11632')
call_12955 = func_11631_call()
call_12956 = func_11631_call()
output = relay.Tuple([call_12955,])
output2 = relay.Tuple([call_12956,])
func_12962 = relay.Function([], output)
mod['func_12962'] = func_12962
mod = relay.transform.InferType()(mod)
mutated_mod['func_12962'] = func_12962
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12962_call = mutated_mod.get_global_var('func_12962')
call_12963 = func_12962_call()
output = call_12963
func_12964 = relay.Function([], output)
mutated_mod['func_12964'] = func_12964
mutated_mod = relay.transform.InferType()(mutated_mod)
func_10240_call = mod.get_global_var('func_10240')
func_10241_call = mutated_mod.get_global_var('func_10241')
call_12997 = relay.TupleGetItem(func_10240_call(), 0)
call_12998 = relay.TupleGetItem(func_10241_call(), 0)
func_7070_call = mod.get_global_var('func_7070')
func_7074_call = mutated_mod.get_global_var('func_7074')
const_13007 = relay.const([5.393103,-1.706690,-4.548520,3.347651,-7.805731,-5.380406,-5.557856,5.141547,0.201717,2.400612,-1.856561,-5.137096,-6.257011,3.426509,9.795924,6.778506,9.735623,0.064365,-6.941923,-5.819889,0.746832,-3.815345,-9.640995,1.146450,-7.092241,-1.949577,-6.876872,7.274795,8.643520,-4.438134,8.792914,-1.452383,5.114106,-0.777535,-2.145947,7.616081,-9.693017,8.472396,9.916468,-2.997024,0.492124,-6.239869,5.142068,-5.443270,-5.354928,-8.382866,3.188981,-5.938930,-4.412699,-9.166462,3.905531,-3.454815,-2.053456,8.767928,-8.683449,7.947875,-4.078681,1.722722,-7.315697,-0.653651], dtype = "float64")#candidate|13007|(60,)|const|float64
var_13008 = relay.var("var_13008", dtype = "float64", shape = (360,))#candidate|13008|(360,)|var|float64
call_13006 = relay.TupleGetItem(func_7070_call(relay.reshape(const_13007.astype('float64'), [6, 10, 1]), relay.reshape(var_13008.astype('float64'), [6, 10, 6]), ), 1)
call_13009 = relay.TupleGetItem(func_7074_call(relay.reshape(const_13007.astype('float64'), [6, 10, 1]), relay.reshape(var_13008.astype('float64'), [6, 10, 6]), ), 1)
func_2853_call = mod.get_global_var('func_2853')
func_2856_call = mutated_mod.get_global_var('func_2856')
const_13022 = relay.const([9.438251,6.931819,5.510436,-4.642824,0.370952,3.577849,-5.136086,3.049139,6.229485,-5.044799,-8.114425,-6.604298,-6.393227,-5.590700,1.761254,-9.669463,-8.344969,-4.032025,-4.063353,-2.067495,9.876721,-5.795216,1.592441,7.138412,4.849873,-8.956227,-7.066956,3.508398,2.759576,-9.448200,-5.773159,0.430801,-2.626893,-5.091162,-8.832123,-8.866358,6.341416,6.789379,-5.528943,3.227993,1.860238,3.869709,-8.749308,-4.547117,-2.479644,-2.855185,-8.707690,-9.162831,-4.748777,2.798999,5.171643,-8.714418,1.010092,-3.023752,-0.905887,5.125536,3.959451,9.533391,7.959681,6.874597,-3.582320,6.185914,8.507499,8.393754,-8.622697,2.686413,9.907226,-1.887222,4.253575,-1.189621,-2.580735,2.735475,7.121130,1.796773,7.810497,-5.019921,4.230446,-0.218170,9.786061,-6.718295,-4.155745,-2.313893,3.094810,-7.853679,4.228833,-9.986400,3.972056,2.529391,-8.864104,2.412934], dtype = "float64")#candidate|13022|(90,)|const|float64
call_13021 = func_2853_call(relay.reshape(const_13022.astype('float64'), [5, 9, 2]))
call_13023 = func_2853_call(relay.reshape(const_13022.astype('float64'), [5, 9, 2]))
output = relay.Tuple([call_12997,call_13006,const_13007,var_13008,call_13021,const_13022,])
output2 = relay.Tuple([call_12998,call_13009,const_13007,var_13008,call_13023,const_13022,])
func_13036 = relay.Function([var_13008,], output)
mod['func_13036'] = func_13036
mod = relay.transform.InferType()(mod)
mutated_mod['func_13036'] = func_13036
mutated_mod = relay.transform.InferType()(mutated_mod)
var_13037 = relay.var("var_13037", dtype = "float64", shape = (360,))#candidate|13037|(360,)|var|float64
func_13036_call = mutated_mod.get_global_var('func_13036')
call_13038 = func_13036_call(var_13037)
output = call_13038
func_13039 = relay.Function([var_13037], output)
mutated_mod['func_13039'] = func_13039
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12240_call = mod.get_global_var('func_12240')
func_12242_call = mutated_mod.get_global_var('func_12242')
call_13073 = relay.TupleGetItem(func_12240_call(), 0)
call_13074 = relay.TupleGetItem(func_12242_call(), 0)
func_9669_call = mod.get_global_var('func_9669')
func_9671_call = mutated_mod.get_global_var('func_9671')
var_13089 = relay.var("var_13089", dtype = "float32", shape = (1287,))#candidate|13089|(1287,)|var|float32
call_13088 = relay.TupleGetItem(func_9669_call(relay.reshape(var_13089.astype('float32'), [1287,])), 2)
call_13090 = relay.TupleGetItem(func_9671_call(relay.reshape(var_13089.astype('float32'), [1287,])), 2)
func_4072_call = mod.get_global_var('func_4072')
func_4079_call = mutated_mod.get_global_var('func_4079')
const_13094 = relay.const([1.818967,6.782615,1.907799,7.820182,-6.907778,0.158233,-2.481887,7.615043,4.480034,-3.668141,4.939380,2.124704,7.462516,-1.768973,-7.661559,-1.644491,-1.915924,-5.366964,-1.293015,-3.006101,-1.284177,0.956441,-5.352858,-1.809669,6.247596,-5.745308,-3.794899,2.393790,-9.421776,-0.765794,-5.780403,-3.346437,7.389626,-0.745706,-9.998206,-2.436702,-8.359078,0.623252,-9.841686,-0.809782,1.523143,-9.940015,-1.878323,5.578695,6.891505,-6.339713,-8.188058,-4.741916,1.202500,1.535092,2.341723,-3.435139,9.342870,-5.899909,3.945270,-0.063141,-7.853237,-0.010213,-5.640754,4.846074,-1.458840,-8.210304,-9.492667,-4.326584,5.128660,5.287346,8.936266,8.252176,3.789260,-1.311714,-0.138389,4.844863,2.650194,-9.735995,5.724682,-1.412869,2.268432,-5.249047,7.258168,1.820122,6.830499,-2.264042,-8.260719,4.562383,3.802256,-2.011371,-1.144044,-5.236770,8.594757,-4.489503,-2.762022,-9.905354,6.744673,1.024028,6.498604,6.849287,1.020919,1.910633,3.581713,-0.276227,-7.265777,8.049499,-0.279388,7.624144,-3.909930,9.632050,-2.142536,-8.408616,-1.086208,-0.293339,-0.565110,-2.340737,4.070234,9.640102,7.263992,-0.245684,-3.869296,-2.487202,4.670240,-9.023718,4.512970,9.205189,-1.960470,7.097802,0.954226,-8.055444,-3.340031,-4.508471,8.666749,-7.535712,8.984934,-1.742543,-2.556422,-6.242023,-9.659809,2.308193,-2.239953,8.923239,-6.526345,-2.839248,5.121583,4.891645,3.995747,8.143232,4.839941,2.473670,-0.305918,-0.237364,6.868696,1.102856,-2.357365,7.311780,9.110182,5.853689,-1.325625,2.994500,-0.959750,5.080296,-6.198547,-5.215833,-6.209263,-3.394401,-1.883582,-5.652929,-0.763614,9.979973,-3.079122,7.754924,-9.686020,-8.568108,-9.422332,-7.736795,-4.564363,9.236890,-0.681959,3.388014,8.571652,-3.463858,-5.662813,8.780829,-5.159367,5.334383,-1.294379,-1.265236,2.622232,0.512461,-5.589366,2.921420,2.017950,-5.768119,-4.520310,-2.330800,8.333799,0.108141,1.315248,-4.060269,-5.950475,7.523797,9.442629,5.221360,-7.163208,-5.012241,-0.198209,3.092391,-8.004700,2.428135,2.910876,3.187571,-6.208431,3.020073,8.416766,2.165068,1.388972,-0.794849,-6.967965,-9.551688,-8.217609,-6.525001,-7.622978,-7.291552,0.910544,5.125130,-4.403175,0.026179,-6.216072,-9.956195,5.387419,9.240885,-8.968127,0.160138,2.440345,6.911199,-4.747996,-0.669431,-6.045513,-9.297581,-4.027804,-4.439402,-8.845943,-4.519012,-3.180799,-2.335564,-9.732779,1.835173,-6.929555,-4.329751,-3.426366,3.051584,2.851799,2.636720,3.110189,9.019365,3.657042,-8.087545,9.494886,-6.914359,9.860912,7.059943,-7.884437,9.449722,6.523240,-4.989717,6.494021,3.590124,5.616483,-9.769909,-5.833223,1.939355,-6.116652,6.649697,-3.223067,3.767491,-7.093975,8.611949,2.864104,2.300847,-2.657903,-4.629819,-0.649356,-2.194211,-0.268342,-3.273971,-3.120356,3.876564,6.901697,2.918585,-2.395174,5.683566], dtype = "float32")#candidate|13094|(288,)|const|float32
var_13095 = relay.var("var_13095", dtype = "uint64", shape = (560,))#candidate|13095|(560,)|var|uint64
var_13096 = relay.var("var_13096", dtype = "int8", shape = (1568,))#candidate|13096|(1568,)|var|int8
var_13097 = relay.var("var_13097", dtype = "float32", shape = (275, 1))#candidate|13097|(275, 1)|var|float32
call_13093 = relay.TupleGetItem(func_4072_call(relay.reshape(const_13094.astype('float32'), [9, 4, 8]), relay.reshape(const_13094.astype('float32'), [9, 4, 8]), relay.reshape(var_13095.astype('uint64'), [1, 560]), relay.reshape(var_13096.astype('int8'), [1568,]), relay.reshape(var_13097.astype('float32'), [275,]), ), 1)
call_13098 = relay.TupleGetItem(func_4079_call(relay.reshape(const_13094.astype('float32'), [9, 4, 8]), relay.reshape(const_13094.astype('float32'), [9, 4, 8]), relay.reshape(var_13095.astype('uint64'), [1, 560]), relay.reshape(var_13096.astype('int8'), [1568,]), relay.reshape(var_13097.astype('float32'), [275,]), ), 1)
output = relay.Tuple([call_13073,call_13088,var_13089,call_13093,const_13094,var_13095,var_13096,var_13097,])
output2 = relay.Tuple([call_13074,call_13090,var_13089,call_13098,const_13094,var_13095,var_13096,var_13097,])
func_13099 = relay.Function([var_13089,var_13095,var_13096,var_13097,], output)
mod['func_13099'] = func_13099
mod = relay.transform.InferType()(mod)
mutated_mod['func_13099'] = func_13099
mutated_mod = relay.transform.InferType()(mutated_mod)
func_13099_call = mutated_mod.get_global_var('func_13099')
var_13101 = relay.var("var_13101", dtype = "float32", shape = (1287,))#candidate|13101|(1287,)|var|float32
var_13102 = relay.var("var_13102", dtype = "uint64", shape = (560,))#candidate|13102|(560,)|var|uint64
var_13103 = relay.var("var_13103", dtype = "int8", shape = (1568,))#candidate|13103|(1568,)|var|int8
var_13104 = relay.var("var_13104", dtype = "float32", shape = (275, 1))#candidate|13104|(275, 1)|var|float32
call_13100 = func_13099_call(var_13101,var_13102,var_13103,var_13104,)
output = call_13100
func_13105 = relay.Function([var_13101,var_13102,var_13103,var_13104,], output)
mutated_mod['func_13105'] = func_13105
mutated_mod = relay.transform.InferType()(mutated_mod)
func_12197_call = mod.get_global_var('func_12197')
func_12199_call = mutated_mod.get_global_var('func_12199')
call_13157 = relay.TupleGetItem(func_12197_call(), 0)
call_13158 = relay.TupleGetItem(func_12199_call(), 0)
var_13159 = relay.var("var_13159", dtype = "float32", shape = (275,))#candidate|13159|(275,)|var|float32
bop_13160 = relay.power(call_13157.astype('float64'), relay.reshape(var_13159.astype('float64'), relay.shape_of(call_13157))) # shape=(275,)
bop_13163 = relay.power(call_13158.astype('float64'), relay.reshape(var_13159.astype('float64'), relay.shape_of(call_13158))) # shape=(275,)
output = bop_13160
output2 = bop_13163
func_13167 = relay.Function([var_13159,], output)
mod['func_13167'] = func_13167
mod = relay.transform.InferType()(mod)
var_13168 = relay.var("var_13168", dtype = "float32", shape = (275,))#candidate|13168|(275,)|var|float32
output = func_13167(var_13168)
func_13169 = relay.Function([var_13168], output)
mutated_mod['func_13169'] = func_13169
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11928_call = mod.get_global_var('func_11928')
func_11929_call = mutated_mod.get_global_var('func_11929')
call_13298 = func_11928_call()
call_13299 = func_11928_call()
output = call_13298
output2 = call_13299
func_13321 = relay.Function([], output)
mod['func_13321'] = func_13321
mod = relay.transform.InferType()(mod)
output = func_13321()
func_13322 = relay.Function([], output)
mutated_mod['func_13322'] = func_13322
mutated_mod = relay.transform.InferType()(mutated_mod)
func_11960_call = mod.get_global_var('func_11960')
func_11962_call = mutated_mod.get_global_var('func_11962')
call_13326 = relay.TupleGetItem(func_11960_call(), 0)
call_13327 = relay.TupleGetItem(func_11962_call(), 0)
uop_13353 = relay.asinh(call_13326.astype('float32')) # shape=(2, 6, 3)
uop_13355 = relay.asinh(call_13327.astype('float32')) # shape=(2, 6, 3)
func_9669_call = mod.get_global_var('func_9669')
func_9671_call = mutated_mod.get_global_var('func_9671')
var_13357 = relay.var("var_13357", dtype = "float32", shape = (1287,))#candidate|13357|(1287,)|var|float32
call_13356 = relay.TupleGetItem(func_9669_call(relay.reshape(var_13357.astype('float32'), [1287,])), 0)
call_13358 = relay.TupleGetItem(func_9671_call(relay.reshape(var_13357.astype('float32'), [1287,])), 0)
var_13362 = relay.var("var_13362", dtype = "float32", shape = (1287,))#candidate|13362|(1287,)|var|float32
bop_13363 = relay.logical_xor(var_13357.astype('int8'), relay.reshape(var_13362.astype('int8'), relay.shape_of(var_13357))) # shape=(1287,)
func_11106_call = mod.get_global_var('func_11106')
func_11108_call = mutated_mod.get_global_var('func_11108')
const_13370 = relay.const([-8,6,-8,-9,1,6,-1,-8,8,9,4,2,-7,-4,-1,-9,8,9,8,-1,-3,-1,-7,9,9,-5,-7,6,-5,-6,1,-3,1,-7,9,-7,4,9,7,9,7,6,10,-8,4,9,-9,6,-6,8,8,-10,-5,6,-10,-5,-8,8,5,-2,10,-4,-6,1,-3,9,-8,6,1,-3,-6,5,9,9,-1,-3,-4,2,-9,-6,-5,6,6,-7,5,-8,-8,2,-10,1,5,4,3,3,-10,6,4,1,7,6,7,2,1,-3,8,2,-10,-5,2,-8,-5,-10,-10,8,8,-9,10,-8,-7,9,7,-1,10,3,-1,6,5,4,6,3,6,7,-5,-4,-8,-10,-6,1,4,-8,4,3,-2,7,9,-4,-3,-8,7,-3,-6,-1,3,-8,5,3,4,1,3,5,-7,4,9,-10,-5,-3,-5,3,6,6,1,-5,7,10,3,3,-4,3,10,-2,-4,6,-1,7,4,3,5,10,-3,4,-6,9,4,3,-3,1,-4,-7,9,4,-7,9,-4,-4,1,-4,-4,9,5,4,-1,-7,3,7,8,-5,8,-9,-5,9,2,7,8,-6,1,3,6,-4,2,2,5,-6,-3,5,-9,-8,-10,7,-2,-3,4,3,-3,-2,10,-8,-3,-10,-1,-6,1,-1,8,1,2,5,7,9,-6,-9,-5,3,-1,-2,-8,-5,2,-10,-6,4,-2,-6,-8,-2,-4,-3,8,-6,-1,-3,9,-7,-4,5,5,-7,-8,-9,8,3,2,10,3,1,6,-2,2,6,-6,5,10,-10,5,-7,1,-4,5,3,1,4,9,-2,5,8,-1,-3,-7,1,4,-6,7,10,-5,2,6,-5,1,-6,7,8,-9,9,7,9,-8,-8,4,-1,-10,6,10,-3,-9,9,-4,-4,-9,-8,-4,2,1,-1,10,3,4,8,-1,4,9,-9,-10,6,7,10,3,5,1,-9,7,-3,-3,6,-9,7,-4,10,9,-5,-2,-10,-6,8,-3,10,-1,3,-1,10,-7,-9,1,-7,7,-9,-7,-5,7,10,-2,-10,-3,-9,-1,-6,7,-1,9,1,8,-7,2,-7,5,7,-10,-4,-1,7,5,-10,3,1,9,-9,3,-3,-8,-1,8,4,-6,-10,3,-9,-5,9,10,9,1,8,4,8,-10,6,-9,-7,-9,4,-8,-8,-3,8,-6,-5,-5,-10,2,10,9,3,6,-4,9,-7,-2,8,4,1,5,9,-8,-10,1,4,7,7,-9,8,-9,-5,-2,8,-2,-7,2,-8,9,3,-1,-7,4,2,4,-1,5,-6,10,-2,-3,-1,7,7,9,-5,7,-9,-9,-6,8,-8,7,1,-9,10,-2,-7,2,8,-4,-2,-8,-5,9,-9,-1,4,-10,5,-6,9,8,10,10,1,-10,6,-3,2,-2,-1,-8,1,7,-7,-3,-4,4,10,1,-9,-6,10,6,1,5,-3,6,10,9,8], dtype = "uint64")#candidate|13370|(560,)|const|uint64
call_13369 = relay.TupleGetItem(func_11106_call(relay.reshape(const_13370.astype('uint64'), [2, 280])), 3)
call_13371 = relay.TupleGetItem(func_11108_call(relay.reshape(const_13370.astype('uint64'), [2, 280])), 3)
func_6118_call = mod.get_global_var('func_6118')
func_6121_call = mutated_mod.get_global_var('func_6121')
const_13398 = relay.const(10, dtype = "int8")#candidate|13398|()|const|int8
const_13399 = relay.const([-10,-9,8,9,-9,-1,-7,8,-1,-10,6,-7,5,-8,-6,6,8,7,7,2,-5,2,-7,3,-3,-4,-5,5,1,-6,10,4,-9,6,7,2,2,-3,8,-10,-9,9,-3,3,-10,2,-10,10,7,5,-5,-3,3,-9,-4,-2,-1,-6,-7,-2,-7,-9,-1,6,6,-2,-10,-9,3,-6,4,1,-10,2,5,6,-10,-10,-3,-9,-10,9,7,7,-5,8,-4,9,-5,3,6,-3,6,7,10,8,8,3,7,-5,4,4,-4,4,-5,-9,-8,-5,-6,6,10,-9,3,-2,-4,5,-2,-6,3,6,-6,-8,1,-1,-8,4,-2,6,7,-10,-7,-8,5,7,-3,7,-10,-6,-10,10,7,-6,9,8,10,-4,2,-7,-8,-6,-7,-2,10,10,8,-8,3,4,9,-7,-8,7,-5,-9,-9,3,8,7,-5,7,-8,-8,2,3,4,10,3,3,4,-10,-7,-10,-10,4,-5,-9,-8,4,-9,-1,8,-6,-1,-10,1,7,-5,-2,6,-2,-6,2,8,-4,-4,9,-10,-3,-3,5,5,1,-1,-6,-8,-5,-9,-10,4,3,1,-8,-6,2], dtype = "int8")#candidate|13399|(224,)|const|int8
call_13397 = func_6118_call(relay.reshape(const_13398.astype('int8'), []), relay.reshape(const_13399.astype('int8'), [2, 16, 7]), )
call_13400 = func_6118_call(relay.reshape(const_13398.astype('int8'), []), relay.reshape(const_13399.astype('int8'), [2, 16, 7]), )
func_1801_call = mod.get_global_var('func_1801')
func_1803_call = mutated_mod.get_global_var('func_1803')
var_13404 = relay.var("var_13404", dtype = "float32", shape = (18,))#candidate|13404|(18,)|var|float32
call_13403 = func_1801_call(relay.reshape(var_13404.astype('float32'), [1, 9, 2]))
call_13405 = func_1801_call(relay.reshape(var_13404.astype('float32'), [1, 9, 2]))
output = relay.Tuple([uop_13353,call_13356,bop_13363,call_13369,const_13370,call_13397,const_13398,const_13399,call_13403,var_13404,])
output2 = relay.Tuple([uop_13355,call_13358,bop_13363,call_13371,const_13370,call_13400,const_13398,const_13399,call_13405,var_13404,])
func_13410 = relay.Function([var_13357,var_13362,var_13404,], output)
mod['func_13410'] = func_13410
mod = relay.transform.InferType()(mod)
var_13411 = relay.var("var_13411", dtype = "float32", shape = (1287,))#candidate|13411|(1287,)|var|float32
var_13412 = relay.var("var_13412", dtype = "float32", shape = (1287,))#candidate|13412|(1287,)|var|float32
var_13413 = relay.var("var_13413", dtype = "float32", shape = (18,))#candidate|13413|(18,)|var|float32
output = func_13410(var_13411,var_13412,var_13413,)
func_13414 = relay.Function([var_13411,var_13412,var_13413,], output)
mutated_mod['func_13414'] = func_13414
mutated_mod = relay.transform.InferType()(mutated_mod)
func_9853_call = mod.get_global_var('func_9853')
func_9855_call = mutated_mod.get_global_var('func_9855')
call_13441 = func_9853_call()
call_13442 = func_9853_call()
func_11617_call = mod.get_global_var('func_11617')
func_11619_call = mutated_mod.get_global_var('func_11619')
call_13455 = func_11617_call()
call_13456 = func_11617_call()
func_10323_call = mod.get_global_var('func_10323')
func_10325_call = mutated_mod.get_global_var('func_10325')
const_13458 = relay.const([[-1.593798,1.550267,2.518295,6.594214,-6.264255,3.054861,-5.825139,-1.481179,-5.876267,-2.107675,1.488342,4.815871,-8.110960,4.682875,-9.781324,-2.707317,2.851968,-5.929336,4.211454,8.152147,9.580254,9.187943,-0.304985,9.982794,-8.497251,-7.879861,4.314743,-6.058976,-6.861361,2.045407,-3.639618,5.912290,4.711062,-3.402172,-0.892619,-3.581332,-6.261506,9.883108,0.620554,-0.663682,-0.212422,3.057066,-5.074578,7.003772,6.102690,2.598899,0.710897,5.161352,-8.030812,4.681791,-7.103090,-1.108894,5.615444,7.937795,-8.895393,-7.535247,2.515475,9.893953,-9.634009,-0.272426,5.201184,9.410117,8.156615,9.592195,-2.991457,-9.638403,-7.828387,3.581065,-7.178736,-3.218605,-3.100859,-6.337435,3.303578,6.065622,-0.611414,0.657746,1.706387,-2.333110,-7.367532,9.630835,5.776728,5.973735,-3.498070,5.299855,6.479602,-6.203736,6.719854,7.178311,-1.872154,-8.270862,1.131076,-3.938336,-6.013485,4.472203,-4.163826,2.685648,-6.725620,9.430489,7.059436,9.440349,-0.212296,1.582133,-7.608202,-9.744556,4.724978,-8.705347,0.760453,-9.884520,4.599071,-3.813392,-9.767164,0.270093,-8.988137,9.632569,-0.129732,-3.830928,-8.479435,-3.719964,4.848446,8.109065,8.681972,6.462169,-2.430954,-8.613281,7.414654,3.045747,-4.356810,-5.621155,5.038104,-5.408040,-8.098642,9.347454,-5.246726,-2.109883,-1.956189,5.714008,6.448576,-7.758389,-4.394715,0.555559,1.507004,4.093551,-4.346457,-6.299175,8.436151,4.391062,-6.862265,3.616193,-8.722180,-6.955147,8.536464,-1.594837,-5.837645,0.667481,7.226921,-6.563748,7.358496,-5.340867,4.302318,-3.245048,9.809298,-8.866035,-3.337919,1.439345,3.573172,3.206629,9.474613,7.009258,0.899008,-2.019513,-3.319550,5.071438,-5.154511,4.370855,1.982576,-0.407615,3.988833,-0.379125,-6.204077,-9.272717,3.645046,1.899791,7.367485,-5.066335,5.014593,5.979777,9.761153,1.339154,-0.142303,2.201735,-6.846295,-3.815950,-3.732103,0.998153,-1.589044,3.812585,-3.476002,-0.356831,8.963151,-7.579967,4.270721,-2.661963,-8.894745,-6.636707,-9.756120,-1.699324,-6.603740,-5.200784,6.586104,4.391819,0.725806,4.402613,0.463030,2.554728,-4.892464,8.218533,6.598834,-5.714433,-2.610658,-7.886582,-5.083171,6.211759,-4.002794,-4.129064,-5.688260,6.336897,-9.301554,2.946515,9.388325,-4.192091,-6.283248,6.036718,-0.019356,5.994081,2.325743,3.898366,8.798854,-8.154845,8.913971,6.934009,-9.980105,3.743284,-6.475526,1.050755,-3.515044,8.468823,2.736161,-6.408624,6.390271,-4.943580,-2.055252,-4.707967,6.603327,9.843507,8.035832,-0.699687,8.404891,-8.803155,-1.295223,7.821742,-5.584147,3.111161,-9.372850,2.462682,0.081853,-1.777617,1.188619,7.166599,7.519262,1.409101,-5.444780,-2.873089,-6.883349,6.853818,-8.418455,3.217735,6.165882,4.630239,-7.794461,1.444018,-2.156225,8.100123,3.583991,-0.809272,8.245945,9.674525,2.384479,-7.735413,3.204496,-0.085166,-0.592750,-2.431849,-8.750103,0.253694,-5.818637,2.869981,-3.591967,-5.374090,9.072458,-0.628913,0.594249,-2.891773,-8.502316,-5.246250,-3.616743,2.671169,-0.190283,9.074926,8.036865,3.579893,6.738179,2.753769,-5.880447,9.752660,-5.237330,-2.831874,-2.748227,8.874380,4.016191,-7.830725,-7.574660,7.072066,2.182514,-1.184441,4.788790,-6.009855,-5.490882,8.502681,5.479211,-9.475627,-1.937194,9.928018,-4.950666,3.911094,-7.178394,0.226110,-1.147733,1.579431,1.316364,-1.316898,-2.564050,-7.334613,-9.014352,4.557318,-8.571526,-5.593976,-8.218503,0.411528,-5.135333,5.208505,-1.973029,4.987708,2.402857,-4.887260,-1.421195,3.321769,4.452144,4.560279,5.893223,-5.945906,2.992749,1.336817,-5.185995,-3.105556,2.780586,-8.235107,-1.749774,-9.098198,-5.598864,0.733288,-4.826774,9.131719,-6.772664,0.722360,2.627727,1.156229,-0.664804,4.751531,-1.703527,1.713289,5.689429,2.774149,-0.837482,7.161966,4.725118,8.865628,9.623130,2.941337,-6.456565,-9.230296,-6.892766,-0.366311,-9.844149,-3.980021,2.594700,-5.059727,6.897669,-2.967772,-0.610378,-6.365776,-3.278740,5.480181,9.123290,9.288842,2.767333,7.539545,-9.622579,1.547827,9.518421,3.700534,2.188830,9.314743,3.732769,-6.127764,8.907354,7.695804,9.048264,-0.496591,-5.273958,-3.417259,6.922106,7.534901,8.915032,-3.577608,-0.405423,6.298205,7.981057,-7.482601,-1.574643,-5.860341,-5.085063,-8.494241,-2.707497,-4.345639,-1.494742,9.587576,-2.634329,7.780082,5.163523,8.311230,1.137357,2.089107,9.394718,-5.725361,0.013274,-8.281554,-6.649563,7.846562,5.033893,4.480256,-3.076998,4.286740,-2.042170,-9.390540,-6.902676,4.118477,-3.461022,-6.394617,1.850398,9.718341,-1.331660,-8.524097,-1.300078,8.305712,4.675287,-6.114755,9.123638,-7.041982,-1.161665,2.414060,-1.941479,8.983734,-1.330999,5.799896,-6.377235,-5.859594,-3.142189,0.085725,-9.527788,-1.413095,-7.919177,7.155800,-9.970574,1.046605,-6.010580,9.220219,3.367416,7.475209,-3.905944,5.884074,2.879301,9.866271,-2.307474,2.788710,-6.188215,-5.005311,-7.514792,-1.565658,-1.660772,8.604644,8.961315,3.967449,7.973723,-5.725369,2.533871,-4.963594,9.634215,-8.280815,1.204457,-1.266148,2.667536,-0.682024,-5.359679,-1.443105,-5.495445,5.191451,-8.045316,-2.248663,1.097818,-8.750501,7.739613,3.158731,-0.592672,-2.061877,8.013331,0.774843,-8.442213,-4.166903,1.521296,7.088460,3.802579,4.270049,6.685402,1.121104,-4.377077,-5.017427,9.497273,-4.897821,4.896641,9.942036,7.966413,-0.202715,-5.355312,-2.095267,1.532556,5.664677,-8.308184,3.032279,-1.638670,-0.709796,-3.049237,-8.140852,-4.420597,1.942985,-2.404056,1.222128,-3.717318,6.059102,-8.803838,-7.215337,9.808573,-6.679848,-2.901000,2.980052,3.229172,2.400091,-4.888194,0.650969,-8.413104,9.368084,4.406214,-2.418667,-2.312689,-4.752945,0.796798,-9.536501,-6.595574,-4.590977,-2.144803,0.567994,6.164855,7.744644,2.072949,-1.894432,-8.681118,-4.101579,-3.638025,2.509067,-9.378057,-1.015692,-3.926550,-6.290639,0.734140,1.643495,-3.935355,5.993496,6.096904,-1.288337,6.544229,-8.069934,-1.642401,8.148637,4.011705,6.597639,-9.612478,2.321734,-7.896483,5.092933,-4.792548,-6.396417,-7.891883,-1.525369,-3.638377,-7.240865,1.529825,9.462467,7.315453,2.017952,4.587270,-8.986118,-9.783295,-1.289131,0.705230,-2.893924,-0.896536,-6.617239,1.963656,-2.039758,7.068094,5.387564,9.426311,-8.812712,-8.998514,6.776823,-4.772114,3.011014,6.262386,-4.315695,-0.981986,-5.680274,4.906147,1.936909,4.592831,-9.655537,-5.560499,-5.989039,3.391160,-1.143290,-5.155919,0.754216,2.438561,4.192149,1.905010,4.564511,-2.788985,-2.310730,-8.452320,-6.324067,-3.024904,2.265763,6.392251,-9.364852,-6.702896,-6.926989,4.047300,-7.513686,-1.557612,7.972027,6.618488,6.912510,8.338563,7.705692,5.856454,3.076710,-0.650651,-2.274702,-4.726854,-8.289967,4.695331,1.617190,1.592580,8.784513,9.671131,4.902925,6.081758,2.734921,-0.395221,5.135142,-6.069365,9.872228,0.034777,-4.392597,3.784937,-1.263394,6.382355,1.416290,2.691411,9.606740,2.629479,1.696999,0.833226,7.558023,0.810405,-5.277013,-9.057604,6.274042,0.749147,0.494236,-9.101373,-7.219313,-5.794151,-1.737151,-1.218174,-6.347030,-3.426415,2.810675,-8.155212,-5.011020,5.458883,-8.495887,-7.054288,5.882508,1.915719,-7.025207,-0.386114,-7.545216,-7.590706,5.204691,-3.755261,4.511821,8.020995,-9.946812,5.901594,-3.847392,0.989098,-8.078376,-8.884308,-9.909891,1.761047,5.168870,2.076523,-8.466974,7.357564,-3.061432,8.315628,-1.584199,-0.303436,5.638036,4.286184,-5.492948,-7.140747,7.119306,-6.656496,-9.855843,-9.896541,-4.806545,0.148590,-1.534415,-5.238536,-4.007288,-2.011992,-6.001583,-5.933032,-3.925658,9.603560,-8.799663,-9.215579,-4.950104,5.626442,-2.637938,8.162259,4.158334,3.582587,2.581658,1.091959,1.762733,-5.090520,-5.658421,7.848199,4.756349,-7.977725,-2.153390,5.078715,4.300121,-0.744673,-9.266158,-4.165811,-1.531746,4.038420,4.539640,-8.295105,-8.432795,9.755600,7.082357,-7.406095,7.301087,-2.996624,1.895122,2.178077,8.473569,-5.229608,8.509366,0.888261,-4.924837,6.122966,6.396820,-7.036832,-6.480356,2.435485,9.468719,-0.496528,-1.450111,-2.939289,-3.215300,-9.551931,4.945301,-0.628232,-7.188603,3.751358,-4.155133,-2.594298,-3.041659,-3.412320,-6.686068,-6.378244,1.120421,2.918051,2.590995,5.506425,1.246775,8.109321,-7.643201,0.989309,-4.067464,8.994605,5.661833,-2.594704,-1.459150,-1.283682,-3.631798,-0.424602,-8.535691,0.701786,-1.626201,8.044219,4.044758,-6.357097,-6.398387,-2.934936,-4.247721,-6.764213,1.571564,3.130470,4.321120,9.923041,-0.879765,8.277910,6.372179,6.302075,6.639265,0.357527,2.474490,-9.631107,5.938025,-4.119533,-6.949864,0.065175,-1.952491,3.037644,-5.320947,6.253214,2.963829,3.703673,-9.510355,-3.245991,-8.137202,-8.924154,0.816661,5.168429,6.388591,3.941863,-3.753039,2.636192,3.996620,-0.321765,6.556391,7.348784,-0.342749,5.391277,2.627548,-1.463897,3.800906,5.127384,1.450169,0.161782,8.984039,-1.693710,4.891903,-1.407025,8.343556,3.518058,-8.383054,9.524638,8.223669,3.900944,-3.007794,-7.299684,-6.924438,-4.717867,3.950235]], dtype = "float32")#candidate|13458|(1, 910)|const|float32
call_13457 = relay.TupleGetItem(func_10323_call(relay.reshape(const_13458.astype('float32'), [910,])), 1)
call_13459 = relay.TupleGetItem(func_10325_call(relay.reshape(const_13458.astype('float32'), [910,])), 1)
func_727_call = mod.get_global_var('func_727')
func_731_call = mutated_mod.get_global_var('func_731')
var_13466 = relay.var("var_13466", dtype = "uint32", shape = (1872,))#candidate|13466|(1872,)|var|uint32
var_13467 = relay.var("var_13467", dtype = "uint16", shape = ())#candidate|13467|()|var|uint16
const_13468 = relay.const([5,3,-7,6,4,-1,4,-9,8,3,3,4,-8,2,-1,7,10,-8,8,-6,-3,-5,1,-4,-3,2,-8,-1,-7,10,-10,5,-7,-7,-8,-7,-2,-6,6,1,-6,5,-3,2,1,-9,-9,3,7,10,2,6,10,6,-3,-5,-4,-5,-7,7,9,1,10,3,-3,-7,-10,1,-7,6,-4,9,1,4,-2,-8,-7,-8,-2,-8,-4,3,8,-4,9,-4,-10,2,6,-9,-7,1,7,-4,-2,5,-7,-10,2,-9,3,-7,-6,-4,3,3,2,5,-5,10,3,-3,-6,7,-8,-1,2,6,7,2,-5,1,1,9,-6,1,-6,2,-9,4,-5,-8,2,-5,-6,-10,-4,-10,-8,-10,10,6,8,-10,4,4,-8,6,-8,1,-10,5,-2,8,4,6,9,-9,-9,4,4,5,-2,-4,-4,4,-5,-7,-2,9,-2,9,7,8,9,-9,2,7,-5,-2,-7,2,-5,-3,5,-2,-6,-8,-9,1,10,10,-4,-4,9,7,-4,10,-1,6,-6,10,-9,7,5,-5,7,-7,-4,9,10,-9,-8,-4,3,-2,-10,1,1,7,-5,10,-8,3,7,5,-8,2,7,-5,-9,1,9,9,1,5,10,10,-2,2,-4,7,-3,-10,-8,-3,9,-6,-8,-8,3,-7,-7,-3,-9,-10,-3,-7,-7,-9,9,2,7,-8,-3,4,-8,-8,-7,5,7,-10,-2,9,5,6,3,4,4,-3,-6,2,7,2,1,1,-3,-10,-2,-8,-8,-1,-2,1,4,-2,10,-6,-4,-2,-6,-4,-7,-7,3,4,-10,4,-7,-8,8,3,4,6,8,4,4,4,-2,8,6,1,-6,-6,10,6,-3,-8,10,6,4,5,-8,7,10,7,7,10,3,-8,1,10,5,-1,-2,5,7,-3,-9,-4,8,-4,7,8,-1,2,-10,-6,-2,2,-5,1,-6,-8,-7,-3,6,-9,3,-5,-4,6,1,1,-10,7,-9,-9,3,10,-2,2,-2,10,-8,10,2,-10,-10,4,5,5,-10,-10,2,2,5,-1,-4,-4,4,6,2,8,-6,-1,-4,4,-1,-4,6,-6,-9,-10,7,-5,10,8,-7,3,7,-6,-10,-4,7,-3,-5,6,7,-6,1,-7,5,2,-10,-9,7,-9,-8,-8,-2,-9,-10,-8,2,1,-7,4,-2,8,-1,2,-2,5,-3,-6,3,-1,-4,-10,-4,10,9,-5,-10,6,2,9,8,-6,8,7,9,4,6,-10,7,4,-5,9,-4,9,3,-9,-4,6,-7,5,1,-9,-7,7,-10,10,-10,3,5,9,9,-1,-1,7,9,3,-3,-7,3,4,7,-1,4,10,-3,1,6,-7,10,4,9,-9,4,-5,-4,-2,-5,-5,-6,-10,5,-3,3,10,7,3,3,-8,-2,4,2,-4,-1,-5,7,6,-9,2,2,-5,6,-4,-4,6,3,-1,-9,1,-7,5,-4,-5,-3,-4,9,-3,-9,-5,-7,-10,-4,7,-7,3,7,-7,10,-1,-1,5,6,6,-5,10,-6,4,1,-3,-2,-4,4,-9,5,7,-6,-7,-2,-8,6,9,-8,3,-6,10,5,-8,-7,-3,-8,-8,5,-9,-8,4,-4,-7,-7,2,9,3,7,-10,8,-7,-6,-3,10,-7,-8,2,3,-6,2,-4,-1,-2,8,-3,7,-5,2,-5,-1,-1,-3,-4,-6,7,-10,6,7,10,-2,-4,-10,4,-10,-6,-1,-3,-4,1,7,8,8,-9,-4,2,1,-6,8,6,-1,10,-3,-6,-8], dtype = "uint16")#candidate|13468|(675,)|const|uint16
call_13465 = relay.TupleGetItem(func_727_call(relay.reshape(var_13466.astype('uint32'), [16, 9, 13]), relay.reshape(var_13467.astype('uint16'), []), relay.reshape(const_13468.astype('uint16'), [675,]), ), 3)
call_13469 = relay.TupleGetItem(func_731_call(relay.reshape(var_13466.astype('uint32'), [16, 9, 13]), relay.reshape(var_13467.astype('uint16'), []), relay.reshape(const_13468.astype('uint16'), [675,]), ), 3)
func_12545_call = mod.get_global_var('func_12545')
func_12546_call = mutated_mod.get_global_var('func_12546')
call_13479 = func_12545_call()
call_13480 = func_12545_call()
func_727_call = mod.get_global_var('func_727')
func_731_call = mutated_mod.get_global_var('func_731')
call_13494 = relay.TupleGetItem(func_727_call(relay.reshape(var_13466.astype('uint32'), [16, 9, 13]), relay.reshape(var_13467.astype('uint16'), []), relay.reshape(call_13465.astype('uint16'), [675,]), ), 0)
call_13495 = relay.TupleGetItem(func_731_call(relay.reshape(var_13466.astype('uint32'), [16, 9, 13]), relay.reshape(var_13467.astype('uint16'), []), relay.reshape(call_13465.astype('uint16'), [675,]), ), 0)
func_1990_call = mod.get_global_var('func_1990')
func_1994_call = mutated_mod.get_global_var('func_1994')
const_13497 = relay.const([-5.732153,-1.067498,-3.692416,-5.045264,-7.313013,4.025042,5.184217,3.577580,-2.310941,-3.479122,-3.129978,-6.987408,1.140422,-3.848307,3.565808,-5.642612,-1.272544,0.183915,-7.217589,1.598213,9.758969,-5.077642,6.411315,6.122848,-6.038154,-9.323717,6.675467,5.049852,4.553366,3.301197,-7.454852,-1.091694,0.487875,-2.491420,2.145052,-4.235372,-8.460144,-2.372014,-1.804348,-7.109551,6.639376,6.842830,0.698100,2.056190,-6.548166,5.053947,3.985136,3.397692,5.658680,-7.047767,6.918973,4.951437,9.849863,-9.284880,1.028058,-9.066406,5.845619,4.485583,-6.109648,-5.996188,6.331911,-1.149384,5.308381,8.365030,9.961219,-9.420777,-4.034505,-2.179132,3.670816,9.035442,0.041657,7.937796,4.651845,9.936508,-3.567888,-8.920744,2.513703,-8.815849,7.656644,1.508593,6.166882,7.407528,7.070611,-6.652539,-4.645983,5.166898,8.175946,6.111171,1.905531,5.285089,-3.474829,-6.099728,-5.627462,-6.417063,-6.923363,-9.899624,1.088325,-6.473947,6.591338,5.668176,-9.337515,-2.897925,-8.886176,7.637454,-8.444728,1.001748,-1.879982,9.217081,-5.077971,-5.495848,3.503457,-1.019582,4.043167,-2.250710,2.343975,-8.602829,-7.908505,-9.419125,-5.462299,1.835183,-4.402158,0.701785,-6.019051,7.044045,7.205325,6.135493,-3.044903,8.154348,-6.669737,-1.399643,-3.498272,-8.452372,2.799465,2.148506,-8.825320,8.251083,8.297432,9.345120,0.210780,-5.981610,3.179524,3.405746,3.792448,4.000312,-6.475753,-7.498550,-8.362174,-3.100904,6.761052,-4.580737,-4.456574,-0.808795,-2.289750,1.945179,-0.398114,-1.694414,8.631129,5.867775,2.044386,4.374792,-2.363265,-1.977040,-9.412594,7.696447,-3.884312,3.783696,7.668007,-5.940545,8.699495,4.293637,4.194603,9.419073,2.059348,9.718531,5.773873,6.291860,-6.102794,3.479327,-0.300593,-7.423110,-1.888783,9.806422,1.012000,8.757851,3.267891,-3.226547,0.815648,7.668849,-4.599507,3.198790,5.400326,-0.633757,-0.073355,-3.367709,-6.108744,7.772996,-7.378752,-2.456872,-2.748595,1.782018,-2.940616,-6.670811,5.546359,-3.769530,-8.390583,-6.620913,-7.565588,-1.312969,-5.817750,7.759241,9.209664,4.565444,8.280776,-0.799222,8.550321,3.158115,8.725026,8.972399,-0.045342,4.984129,6.679615,-8.496859,-6.481712,-8.375071,-4.969099,1.854938,-3.226591,9.878883,-8.316649,9.021970,3.740532,0.042460,-6.491190,-3.498664,-9.367444,-2.053142,0.263338,-9.148115,4.774593,-4.094790,-2.538543,7.974990,-4.258083,2.627285,-7.055134,-5.349484,9.468029,2.721001,7.383763,-8.404981,4.005543,4.934755,-3.130091,-5.337949,4.657449,9.626469,-3.614468,-2.534273,0.023504,0.609438,4.993688,-0.341291,7.995236,-9.245697,1.876641,-1.184201,7.192504,1.605215,9.227950,6.730295,-5.691190,4.749157,-4.082517,5.272333,5.273615,7.451912,-8.053545,2.465832,3.639708,-7.686411,8.661997,7.618482,2.822269,-0.675750,-5.029522,3.625009,-0.084613,1.666088,-2.179904,-6.567600,5.348777,-6.969886,5.627777,2.279524,-0.767286,6.613796,6.797258,-2.688417,2.919141,6.008281,4.801351,-3.574021,1.369202,-9.899854,-0.526838,6.398210,-9.030965,-9.235329,-4.789806,3.669917,1.295589,-0.162274,5.368444,3.361239,5.709187,4.488273,8.783940,-2.770711,3.908967,4.307588,3.726924,-5.324703,-7.890211,-2.973296,-4.008129,3.227766,-4.845080,-2.677466,9.415547,0.077554,1.307988,2.960173,-0.397257,6.810386,-8.637937,-8.480738,-8.620997,4.277192,1.793440,1.063995,1.081748,7.655277,-1.000260,-2.265050,-5.168855,-5.557968,-6.171020,-7.229408,9.478890,-3.739674,-4.682340,6.461461,1.642123,-4.434854,-6.971356,6.164696,-0.867535,-3.666111,-1.039614,-0.029642,-2.017834,-1.666984,-1.822620,4.878094,7.324345,7.839350,-4.431025,-8.825818,-3.583649,-8.988188,-1.215624,-2.786485,8.499308,8.007564,1.722427,-6.660573,-1.247132,-7.058816,2.837790,-4.000077,-2.410046,9.794244,-5.134826,-1.948605,-9.308419,-9.183548,-4.443240,0.091744,0.130531,-7.165850,2.932314,-0.078257,8.004365,-3.316619,-5.381540,4.568192,5.789306,-7.562413,-7.504440,-0.765358,5.381669,3.535290,4.573778,6.899347,2.481184,-3.402809,-9.436924,-6.863815,5.017398,9.401961,6.562322,-8.174789,5.883029,5.263651,-1.793147,-0.166135,-5.954500,6.584833,-5.501199,-6.139727,-7.562831,-1.165570,8.630056,9.926497,-1.995436,-4.269865,2.941483,-8.258238,0.291005,3.123184,7.222123,-2.181608,8.357013,8.623083,-6.314305,-0.312281,-9.396395,-4.747732,0.321194,1.376475,-3.365111,-4.433512,-1.091864,-4.967588,-5.227161,7.236178,0.628589,4.591280,-3.513834,-8.021381,-6.500941,7.222234,-9.481928,-5.660643,2.381923,6.703739,7.516028,-4.226078,-7.193419,-0.216813,-1.508914,-1.495055,9.776356,-3.592168,-7.973319,-7.759071,9.812599,-7.006147,2.273566,-4.432423,-3.435374,-8.813758,1.499510,3.902294,6.074390,-9.053067,-4.665678,2.213470,-9.971451,0.824508,3.251932,4.808090,2.057773,-1.600123,-4.800539,-8.782502,-0.955106,-5.340508,1.580413,8.278204,3.281722,-7.091273,-9.188271,0.241377,9.517152,9.234683,3.119265,-0.686480,-0.873567,2.520417,0.066608,3.561513,3.437545,9.283738,-3.878441,3.059160,-0.540334,3.347138,-5.023356,2.927376,8.064093,-0.345248,8.794880,8.685140,6.374107,-6.341990,-6.076099,-5.410538,8.032764,-3.731755,-0.326754,-7.367690,7.318252,6.092653,-0.436884,-9.359657,1.823244,-8.691221,1.291366,4.003944,1.525036,2.458441,5.108713,1.469942,2.442587,-8.102682,8.736329,-2.655331,-0.290983,-6.093503,-1.925247,-3.243174,6.796628,-6.108315,0.583063,0.370884,6.818843,-7.297450,-4.309953,1.733827,-9.868923,8.005172,-0.324123,-7.127429,1.133400,-3.687216,6.262350,-0.011194,6.189992,4.070862,-9.294406,3.754101,0.671339,-1.636457,9.911139,1.981136,-5.920869,-1.856375,-0.056609,2.537428,7.142414,7.084958,7.024581,-1.035752,-8.989266,7.772743,-3.137371,-8.241340,-0.249532,-8.557752,8.686325,1.637173,-4.735749,-2.317255,7.615181,5.132755,8.428287,7.789982,-0.674926,-3.412523,-8.237042,4.931558,-1.808206,-0.581026,-4.140617,2.407924,2.634293,6.946651,-7.074309,-0.377238,-4.359016,-3.846491,4.236198,-4.070565,6.863316,-5.241404,-5.589631,1.666390,-7.625799,9.886298,-6.532724,-3.359959,-2.903868,2.749290,9.586537,-9.288319,6.989296,-8.752625,-8.698994,-6.819836,5.049217,6.476656,-5.069810,-6.252286,2.879638,-5.087185,-8.099686,3.407459,-9.134140,0.419933,-2.008806,2.051890,3.606412,-9.161752,-5.826236,6.355367,-9.320703,1.502137,9.306429,9.429546,-0.543131,-8.174314,-3.368531,2.743938,3.906605,-6.383556,-7.151513,1.748151,4.434506,8.066488,7.148410,5.978448,-6.690029,-1.327116,9.974383,-0.621112,5.638543,-5.341348,-4.492407,8.448065,0.812282,5.177917,0.541994,4.567747,1.072953,6.863789,3.849732,-6.326522,6.517981,-9.902320,-4.646820,-5.904696,1.761410,0.729446,-3.503779,8.357851,-9.393712,0.748076,-9.679025,5.134383,-6.656666,-9.581083,5.912981,4.454502,0.361077,1.386245,-4.765704,-6.684001,8.544236,2.558684,-9.092949,1.053630,7.147618,-4.071858,0.647597,5.494544,-8.854411,2.896050,-0.130769,2.455308,-5.971644,0.963055,-1.178913,0.702679,9.632436,-9.198260,6.584141,6.786414,-7.516839,-7.058945,0.053655,3.766794,3.247121,0.499136,2.453308,-4.514746,-0.711987,-0.336356,5.847770,-7.097214,-9.679151,-4.886869,-0.182272,8.244169,1.012245,-1.123675,8.817091,1.565181,-9.926226,2.243337,1.852594,-5.021204,0.453887,-3.611274,-1.194297,-6.413592,9.891422,-8.001373,-6.251506,1.195504,-4.453641,-7.293888,2.552384,-6.395684,-1.410673,-5.385293,4.425161,8.765416,3.238822,1.624035,-7.578864,4.468345,-5.075438,6.146717,5.504624,3.575982,-4.651234,5.923746,4.215769,-7.277211,1.673153,5.570215,9.534530,-4.053399,-6.789053,-2.207411,6.024129,7.218690,7.564442,-6.474085,7.416925,-4.545895,0.593135,6.896034,-1.688353,-6.086096,-3.014723,-2.912871,2.904651,7.716694,2.454896,-3.100796,1.981310,-2.544117,6.056829,7.726468,-9.423791,-0.535508,1.808705,-9.626084,9.172581,-8.930157,-5.897263,8.122107,0.103038,-4.361945,-9.106143,0.049818,-4.990607,5.098538,-6.012419,-7.047567,-4.033987,-4.853231,-9.819770,7.363574,6.213252,-4.512249,5.718441,2.631506,-1.253513,5.523686,1.364826,-3.217319,-7.556120,5.099714,-4.696710,-1.201436,-0.126575,-3.034148,6.705079,9.260388,8.231278,4.714787,3.731060,5.120284,-6.790004,0.173539,8.809129,7.227090,9.330745,-3.770733,-9.062506,-6.160425,4.165741,6.588151,6.861435,-6.267249,-9.242943,4.943235,-6.920285,7.886068,6.287330,-2.054904,-4.520080,-3.086082,-8.459432,4.189428,6.494678,-3.274009,2.598281,-3.838259,-4.319695,2.299726,-9.928305,-2.751485,-2.773466,9.298842,-6.185926,-8.120343,7.993212,-9.271902,-7.125057,-4.604128,-1.734304,-3.243187,-3.534712,-8.372894,3.515487,-4.202504,-8.829292,9.819471,-3.725232,-8.089589,-7.074686,-5.039448,0.754210,-3.769080,-5.381058,-7.275617,5.232266,-6.289790,4.549284,-2.923315,7.344306,-7.843125,4.020192,-3.337921,-3.936300,5.534046,7.088390,-6.666288,-4.914227,-8.589439,2.341056,1.958860,-8.800149,-0.258523,-5.292311,-0.627962,2.596145,7.209711,-8.470101,1.255453,-0.888687,-8.290300,-4.875127,1.860239,5.178543,0.043259,-3.202676,4.427925,9.624200,-8.904877,-7.604703,0.716315,9.826497,-3.692039,-2.849985,-3.170500,-8.688885,-6.317727,5.390083,-5.218790,-5.540752,1.779596,-6.927315,1.082231,-8.756078,-9.596814,-5.246043,8.126550,-9.784105,-2.827672,2.900674,-2.262092,6.465508,-2.202763,-9.751550,6.420239,-4.657585,8.291972,8.907431,-2.192585,-8.878549,-2.335447,-0.613749,-4.835249,3.903391,7.080261,1.031175,3.151054,5.839103,9.158862,-4.492351,-4.713027,8.003547,3.768047,-6.862293,-4.529233,-5.344655,9.047920,-9.229734,-7.983107,-0.232202,-5.149147,3.508458,-2.389577,6.871391,-8.447459,-5.434542,7.376076,-3.060572,-3.369325,-4.635652,2.059508,6.547915,-7.362283,-7.222361,-4.254650,-0.232908,-4.891311,-6.858881,-1.193088,-3.499385,7.426847,3.822134,-5.439452,6.267784,-8.880198,8.912208,0.815521,9.249020,7.190861,-6.398094,-7.167396,-3.476469,-3.574437,-5.590836,1.551803,3.168790,5.256900,8.481556,-2.942826,1.764939,-6.096536,-7.112200,4.492277,1.621081,8.086133,-0.370275,8.241217,-5.798768,7.612971,-0.193147,1.721447,4.507141,9.632106,-8.851814,-5.325217,-4.425871,-3.788775,-9.534203,-5.247610,-3.898703,5.826042,-9.103617,-7.053817,-2.109479,8.443238,-5.858001,-9.792706,9.372681,-0.895108,4.069761,8.346911,4.036436,-1.287353,-4.274410,-3.360482,-6.506261,6.662662,-6.661740,8.699354,-8.360171,3.370994,6.465789,-0.320653,7.023643,-8.177803,1.715072,8.821656,1.811860,-3.695057,-7.603553,3.874192,-9.257132,3.145535,-5.403985,9.962071,7.908004,6.823467,-6.985420,-8.170660,-9.740040,-1.735222,-3.423432,-1.530012,0.868994,6.523135,6.345527,-6.534570,-8.023749,-8.409866,-2.497899,1.253239,2.333576,-0.294593,-1.864942,5.835656,6.557230,8.407771,7.057041,-5.104747,-2.972049,3.327040,-2.636391,-7.293485,9.952245,3.174704,-2.863907,-8.457774,8.300007,-1.705396,2.964286,-2.053997,8.821074,-0.480914,7.855583,-2.275856,5.855991,-4.921775,8.636115,-9.852892,6.343326,4.679790,-3.649717,0.308551,-4.071671,9.212393,-7.496164,8.704111,1.411497,-7.199209,-1.787756,5.946633,-2.119995,1.184854,-5.884154,9.060862,6.555294,2.952723,-5.934882,8.526116,-2.025077,-4.541228,-7.210442,4.656918,1.837516,-9.433117,-3.872715,8.465906,6.809881,-2.320617,-8.345087,-1.664858,-5.209798,3.729767,-3.072049,-6.219533,-5.943186,8.203801,-4.647082,-4.250951,1.230797,1.352859,-5.283310,-6.158705,0.043056,9.906607,-7.279722,4.521095,-5.351170,0.107716,8.381389,8.346232,-4.079669,-2.912530,4.041086,6.992389,0.141168,-5.627557,7.305597,-3.690573,-0.476814,5.470832,6.241947,2.702961,7.282882,-8.446664,-0.860844,-7.473751,8.625114,7.494246,-2.388266,6.561041,8.262094,6.304572,-5.596294,6.108057,-2.353013,-3.386565,8.964841,7.868659,-5.974390,5.127306,8.153466,-1.485789,-2.279621,-8.851009,-6.854897,6.214661,6.798127,-9.507823,-2.965926,-0.219468,-8.301734,-5.841681,2.750076,0.801655,4.319356,-9.258495,-8.800388,3.468901,5.594342,2.342062,0.237341,3.969886,-6.644412,3.567667,-6.358567,6.301250,-0.005850,-2.700045,4.644662,3.137382,9.760929,3.603768,-3.598447,-0.606531,-4.611016,6.883774,-8.776235,9.725745,1.513416,3.229771,-8.830053,-5.306705,-6.850238,-3.829513,-6.671844,4.185445,-4.366831,-9.327472,4.672465,-5.461431,-0.645488,-0.159256,-9.855182,6.862979,-9.737805,8.424645,3.113123,6.905616,0.913522,2.252310,6.425771,4.678170,-5.048848,8.493890,-0.193863,0.141510,5.817090,-1.443629,7.481188,1.129468,-4.367584,7.301384,7.325296,-8.383196,-5.464045,-9.754762,-3.297885,6.286327,9.243843,-1.277730,-2.633010,8.776681,5.117270,-5.324244,8.375622,-7.458043,-4.579884,-2.162907,-2.704858,-3.751149,-4.974330,5.962449,-8.229872,9.812513,7.572143,-2.401701,-4.763072,8.631253,9.846057,-5.182714,-6.538327,-2.382727,-7.098695,-9.672411,8.040377,-5.222462,5.634077,-4.522135,-2.276286,-3.276058,-8.776040,-6.180183,-4.628374,-7.231106,6.219930,-0.891838,-8.233444,-0.133355,5.877454,1.972775,-8.662989,1.178487,0.771244,9.460548,3.465146,0.996069,-1.757466,-6.572376,-2.669338,-4.852265,-7.894128,4.349705,-3.096235,1.442063,-6.480318,-8.371977,-8.404897,-3.942981,-1.625952,-0.531388,8.036942,7.970800,4.070019,-1.415484,-2.651714,6.009580,-7.133225,5.652066,-4.828254,-6.451591,-3.293593,1.738083,-5.638553,-5.225078,-6.782767,7.109463,4.330736,5.884171,-2.153743,-0.875629,3.201502,4.521271,-1.400098,-3.716859,-0.235777,0.851483,4.327417,5.939558,-9.751252,-6.240876,-4.818764,2.108581,-5.114378,-4.863176,-5.875633,-2.333648,-5.737732,3.494529,-0.955485,-0.636140,8.369979,8.853828,-5.341695,-2.295632,1.176138,5.241967,-7.284029,5.439507,-6.055438,-5.644112,-8.281484,-5.339053,-8.107271,5.386657,6.485676,3.729361,8.155503,6.141690,-1.070249,-7.436325,2.450585,4.741670,-2.489812,-6.470820,5.925099,-5.501007,2.700512,-0.567799,-6.558738,7.926151,5.074373,-8.899362,6.671382,8.784823,-4.017389,8.804032,4.390457,7.486637,1.368508,-9.376724,-6.574831,-6.598091,7.394670,-5.731804,-5.263923,9.324153,-6.504797,-4.705807,-8.075067,6.876530,-7.985048,-5.244298,-2.288244,1.558426,3.763790,-9.031646,-2.738276,-3.685443,7.120974,-1.285644,-1.658874,-3.444366,1.468438,-8.652443,-9.033592,-7.772598,1.044071,-5.416919,1.655656,8.657317,-3.596888,-8.051381,5.377456,-6.592657,3.311803,-3.499464,6.581804,2.328014,-0.527290,-4.955624,9.337719,5.953320,6.409287,-7.336927,9.603194,0.792476,6.744673,7.286937,-2.951960,-6.721453,-1.654145,8.974973,4.105122,-6.809266,4.834014,-4.010122,-2.807499,8.137147,4.847525,-0.089976,1.135380,-6.393306,6.397267,6.855710,-3.001151,-8.690840,9.752060,-0.149656,-3.549059,-5.892287,9.862413,-9.685374,-0.347902,8.274296,-0.643268,-9.386196,9.680965,-4.377029,-0.754530,8.064882,7.742961,5.431618,7.081530,5.326955,0.499605,1.701430,-4.836886,-6.633332,5.105136,5.208161,3.223124,-9.964193,-9.178931,5.000952,-9.787692,2.751192,-3.976623,-1.201089,-5.245992,0.830448,6.549125,-1.285891,6.485421,-4.307986,-0.321051,-4.562443,-5.981092,1.920662,6.958231,8.292582,1.432824,-3.120797,-6.069474,1.147790,-9.854451,-6.002763,-7.378528,-2.057015,5.746412,-4.123377,-9.135073,4.480279,2.304355,4.597853,5.553549,3.522928,-9.606519,8.356642,-6.474961,7.840829,7.701685,6.828440,1.755483,2.884879,-1.995658,-9.214788,-7.179090,5.849211,-8.688544,9.892875,-9.569765,-1.527597,-1.796040,1.269878,3.052949,8.322881,-7.840170,-5.465605,-0.198596,-8.765800,6.728075,8.869083,-2.615836,-7.971915], dtype = "float32")#candidate|13497|(1560,)|const|float32
var_13498 = relay.var("var_13498", dtype = "uint64", shape = (560,))#candidate|13498|(560,)|var|uint64
call_13496 = relay.TupleGetItem(func_1990_call(relay.reshape(const_13497.astype('float32'), [12, 13, 10]), relay.reshape(const_13497.astype('float32'), [12, 13, 10]), relay.reshape(var_13498.astype('uint64'), [4, 140]), ), 1)
call_13499 = relay.TupleGetItem(func_1994_call(relay.reshape(const_13497.astype('float32'), [12, 13, 10]), relay.reshape(const_13497.astype('float32'), [12, 13, 10]), relay.reshape(var_13498.astype('uint64'), [4, 140]), ), 1)
bop_13500 = relay.left_shift(const_13458.astype('uint64'), relay.reshape(call_13457.astype('uint64'), relay.shape_of(const_13458))) # shape=(1, 910)
bop_13503 = relay.left_shift(const_13458.astype('uint64'), relay.reshape(call_13459.astype('uint64'), relay.shape_of(const_13458))) # shape=(1, 910)
uop_13505 = relay.log2(call_13455.astype('float32')) # shape=(2, 6, 3)
uop_13507 = relay.log2(call_13456.astype('float32')) # shape=(2, 6, 3)
var_13517 = relay.var("var_13517", dtype = "float32", shape = (2, 6, 3))#candidate|13517|(2, 6, 3)|var|float32
bop_13518 = relay.logical_and(uop_13505.astype('bool'), relay.reshape(var_13517.astype('bool'), relay.shape_of(uop_13505))) # shape=(2, 6, 3)
bop_13521 = relay.logical_and(uop_13507.astype('bool'), relay.reshape(var_13517.astype('bool'), relay.shape_of(uop_13507))) # shape=(2, 6, 3)
output = relay.Tuple([call_13441,call_13465,var_13466,var_13467,const_13468,call_13479,call_13494,call_13496,const_13497,var_13498,bop_13500,bop_13518,])
output2 = relay.Tuple([call_13442,call_13469,var_13466,var_13467,const_13468,call_13480,call_13495,call_13499,const_13497,var_13498,bop_13503,bop_13521,])
F = relay.Function([var_13466,var_13467,var_13498,var_13517,], output)
mod['main'] = F
mod = relay.transform.InferType()(mod)
print('==========mod==========')
print(mod.astext(show_meta_data=False))
print('===================================')
F = relay.Function([var_13466,var_13467,var_13498,var_13517,], output2)
mutated_mod['main'] = F
mutated_mod = relay.transform.InferType()(mutated_mod)
print('==========mutated_mod==========')
print(mutated_mod.astext(show_meta_data=False))
print('===================================')
graph, lib, params = relay.build(mod, target='llvm')
module1 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp2 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp3 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp4 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module5 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp6 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp7 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp8 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
seq = Sequential([
	relay.transform.AlterOpLayout(),
	relay.transform.AnnotateSpans(),
	relay.transform.BatchingOps(),
	relay.transform.CanonicalizeCast(),
	relay.transform.CanonicalizeOps(),
	relay.transform.DeadCodeElimination(),
	relay.transform.DynamicToStatic(),
	relay.transform.FastMath(),
	relay.transform.FirstOrderGradient(),
	relay.transform.EliminateCommonSubexpr(),
	relay.transform.MergeCompilerRegions(),
])
mod = seq(mod)
print(mod.astext(show_meta_data=False))
graph, lib, params = relay.build(mod, target='llvm')
module9 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp10 = relay.build_module.create_executor('graph', mod, tvm.device('llvm',0),'llvm')
intrp11 = relay.build_module.create_executor('debug', mod, tvm.device('llvm',0),'llvm')
intrp12 = relay.build_module.create_executor('vm', mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mod, target='cuda')
module13 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp14 = relay.build_module.create_executor('graph', mod, tvm.device('cuda',0),'cuda')
intrp15 = relay.build_module.create_executor('debug', mod, tvm.device('cuda',0),'cuda')
intrp16 = relay.build_module.create_executor('vm', mod, tvm.device('cuda',0),'cuda')
graph, lib, params = relay.build(mutated_mod, target='llvm')
module17 = graph_runtime.create(graph, lib, tvm.device('llvm',0))
intrp18 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('llvm',0),'llvm')
intrp19 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('llvm',0),'llvm')
intrp20 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('llvm',0),'llvm')
graph, lib, params = relay.build(mutated_mod, target='cuda')
module21 = graph_runtime.create(graph, lib, tvm.device('cuda',0))
intrp22 = relay.build_module.create_executor('graph', mutated_mod, tvm.device('cuda',0),'cuda')
intrp23 = relay.build_module.create_executor('debug', mutated_mod, tvm.device('cuda',0),'cuda')
intrp24 = relay.build_module.create_executor('vm', mutated_mod, tvm.device('cuda',0),'cuda')
